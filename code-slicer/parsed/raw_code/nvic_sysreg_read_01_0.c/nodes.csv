command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6092967	File	/home/p4ultr4n/workplace/ReVeal/raw_code/nvic_sysreg_read_01_0.c								
ANR	6092968	Function	nvic_sysreg_read	1:0:0:2860							
ANR	6092969	FunctionDef	"nvic_sysreg_read (void * opaque , hwaddr addr , uint64_t * data , unsigned size , MemTxAttrs attrs)"		6092968	0					
ANR	6092970	CompoundStatement		7:0:187:2860	6092968	0					
ANR	6092971	IdentifierDeclStatement	NVICState * s = ( NVICState * ) opaque ;	9:4:194:228	6092968	0	True				
ANR	6092972	IdentifierDecl	* s = ( NVICState * ) opaque		6092968	0					
ANR	6092973	IdentifierDeclType	NVICState *		6092968	0					
ANR	6092974	Identifier	s		6092968	1					
ANR	6092975	AssignmentExpression	* s = ( NVICState * ) opaque		6092968	2		=			
ANR	6092976	Identifier	s		6092968	0					
ANR	6092977	CastExpression	( NVICState * ) opaque		6092968	1					
ANR	6092978	CastTarget	NVICState *		6092968	0					
ANR	6092979	Identifier	opaque		6092968	1					
ANR	6092980	IdentifierDeclStatement	uint32_t offset = addr ;	11:4:235:257	6092968	1	True				
ANR	6092981	IdentifierDecl	offset = addr		6092968	0					
ANR	6092982	IdentifierDeclType	uint32_t		6092968	0					
ANR	6092983	Identifier	offset		6092968	1					
ANR	6092984	AssignmentExpression	offset = addr		6092968	2		=			
ANR	6092985	Identifier	addr		6092968	0					
ANR	6092986	Identifier	addr		6092968	1					
ANR	6092987	IdentifierDeclStatement	"unsigned i , startvec , end ;"	13:4:264:289	6092968	2	True				
ANR	6092988	IdentifierDecl	i		6092968	0					
ANR	6092989	IdentifierDeclType	unsigned		6092968	0					
ANR	6092990	Identifier	i		6092968	1					
ANR	6092991	IdentifierDecl	startvec		6092968	1					
ANR	6092992	IdentifierDeclType	unsigned		6092968	0					
ANR	6092993	Identifier	startvec		6092968	1					
ANR	6092994	IdentifierDecl	end		6092968	2					
ANR	6092995	IdentifierDeclType	unsigned		6092968	0					
ANR	6092996	Identifier	end		6092968	1					
ANR	6092997	IdentifierDeclStatement	uint32_t val ;	15:4:296:308	6092968	3	True				
ANR	6092998	IdentifierDecl	val		6092968	0					
ANR	6092999	IdentifierDeclType	uint32_t		6092968	0					
ANR	6093000	Identifier	val		6092968	1					
ANR	6093001	IfStatement	"if ( attrs . user && ! nvic_user_access_ok ( s , addr ) )"		6092968	4					
ANR	6093002	Condition	"attrs . user && ! nvic_user_access_ok ( s , addr )"	19:8:321:363	6092968	0	True				
ANR	6093003	AndExpression	"attrs . user && ! nvic_user_access_ok ( s , addr )"		6092968	0		&&			
ANR	6093004	MemberAccess	attrs . user		6092968	0					
ANR	6093005	Identifier	attrs		6092968	0					
ANR	6093006	Identifier	user		6092968	1					
ANR	6093007	UnaryOperationExpression	"! nvic_user_access_ok ( s , addr )"		6092968	1					
ANR	6093008	UnaryOperator	!		6092968	0					
ANR	6093009	CallExpression	"nvic_user_access_ok ( s , addr )"		6092968	1					
ANR	6093010	Callee	nvic_user_access_ok		6092968	0					
ANR	6093011	Identifier	nvic_user_access_ok		6092968	0					
ANR	6093012	ArgumentList	s		6092968	1					
ANR	6093013	Argument	s		6092968	0					
ANR	6093014	Identifier	s		6092968	0					
ANR	6093015	Argument	addr		6092968	1					
ANR	6093016	Identifier	addr		6092968	0					
ANR	6093017	CompoundStatement		13:53:178:178	6092968	1					
ANR	6093018	ReturnStatement	return MEMTX_ERROR ;	23:8:436:454	6092968	0	True				
ANR	6093019	Identifier	MEMTX_ERROR		6092968	0					
ANR	6093020	SwitchStatement	switch ( offset )		6092968	5					
ANR	6093021	Condition	offset	29:12:478:483	6092968	0	True				
ANR	6093022	Identifier	offset		6092968	0					
ANR	6093023	CompoundStatement		23:20:298:298	6092968	1					
ANR	6093024	Statement	case	33:4:550:553	6092968	0	True				
ANR	6093025	Statement	0x100	33:9:555:559	6092968	1	True				
ANR	6093026	Statement	...	33:15:561:563	6092968	2	True				
ANR	6093027	Label	0x13f :	33:19:565:570	6092968	3	True				
ANR	6093028	ExpressionStatement	offset += 0x80	35:8:603:617	6092968	4	True				
ANR	6093029	AssignmentExpression	offset += 0x80		6092968	0		+=			
ANR	6093030	Identifier	offset		6092968	0					
ANR	6093031	PrimaryExpression	0x80		6092968	1					
ANR	6093032	Statement	case	39:4:652:655	6092968	5	True				
ANR	6093033	Statement	0x180	39:9:657:661	6092968	6	True				
ANR	6093034	Statement	...	39:15:663:665	6092968	7	True				
ANR	6093035	Label	0x1bf :	39:19:667:672	6092968	8	True				
ANR	6093036	ExpressionStatement	val = 0	41:8:707:714	6092968	9	True				
ANR	6093037	AssignmentExpression	val = 0		6092968	0		=			
ANR	6093038	Identifier	val		6092968	0					
ANR	6093039	PrimaryExpression	0		6092968	1					
ANR	6093040	ExpressionStatement	startvec = offset - 0x180 + NVIC_FIRST_IRQ	43:8:725:767	6092968	10	True				
ANR	6093041	AssignmentExpression	startvec = offset - 0x180 + NVIC_FIRST_IRQ		6092968	0		=			
ANR	6093042	Identifier	startvec		6092968	0					
ANR	6093043	AdditiveExpression	offset - 0x180 + NVIC_FIRST_IRQ		6092968	1		-			
ANR	6093044	Identifier	offset		6092968	0					
ANR	6093045	AdditiveExpression	0x180 + NVIC_FIRST_IRQ		6092968	1		+			
ANR	6093046	PrimaryExpression	0x180		6092968	0					
ANR	6093047	Identifier	NVIC_FIRST_IRQ		6092968	1					
ANR	6093048	ForStatement	"for ( i = 0 , end = size * 8 ; i < end && startvec + i < s -> num_irq ; i ++ )"		6092968	11					
ANR	6093049	ForInit	"i = 0 , end = size * 8 ;"	47:13:800:821	6092968	0	True				
ANR	6093050	Expression	"i = 0 , end = size * 8"		6092968	0					
ANR	6093051	AssignmentExpression	i = 0		6092968	0		=			
ANR	6093052	Identifier	i		6092968	0					
ANR	6093053	PrimaryExpression	0		6092968	1					
ANR	6093054	AssignmentExpression	end = size * 8		6092968	1		=			
ANR	6093055	Identifier	end		6092968	0					
ANR	6093056	MultiplicativeExpression	size * 8		6092968	1		*			
ANR	6093057	Identifier	size		6092968	0					
ANR	6093058	PrimaryExpression	8		6092968	1					
ANR	6093059	Condition	i < end && startvec + i < s -> num_irq	47:36:823:858	6092968	1	True				
ANR	6093060	AndExpression	i < end && startvec + i < s -> num_irq		6092968	0		&&			
ANR	6093061	RelationalExpression	i < end		6092968	0		<			
ANR	6093062	Identifier	i		6092968	0					
ANR	6093063	Identifier	end		6092968	1					
ANR	6093064	RelationalExpression	startvec + i < s -> num_irq		6092968	1		<			
ANR	6093065	AdditiveExpression	startvec + i		6092968	0		+			
ANR	6093066	Identifier	startvec		6092968	0					
ANR	6093067	Identifier	i		6092968	1					
ANR	6093068	PtrMemberAccess	s -> num_irq		6092968	1					
ANR	6093069	Identifier	s		6092968	0					
ANR	6093070	Identifier	num_irq		6092968	1					
ANR	6093071	PostIncDecOperationExpression	i ++	47:74:861:863	6092968	2	True				
ANR	6093072	Identifier	i		6092968	0					
ANR	6093073	IncDec	++		6092968	1					
ANR	6093074	CompoundStatement		41:79:678:678	6092968	3					
ANR	6093075	IfStatement	if ( s -> vectors [ startvec + i ] . enabled )		6092968	0					
ANR	6093076	Condition	s -> vectors [ startvec + i ] . enabled	49:16:885:916	6092968	0	True				
ANR	6093077	MemberAccess	s -> vectors [ startvec + i ] . enabled		6092968	0					
ANR	6093078	ArrayIndexing	s -> vectors [ startvec + i ]		6092968	0					
ANR	6093079	PtrMemberAccess	s -> vectors		6092968	0					
ANR	6093080	Identifier	s		6092968	0					
ANR	6093081	Identifier	vectors		6092968	1					
ANR	6093082	AdditiveExpression	startvec + i		6092968	1		+			
ANR	6093083	Identifier	startvec		6092968	0					
ANR	6093084	Identifier	i		6092968	1					
ANR	6093085	Identifier	enabled		6092968	1					
ANR	6093086	CompoundStatement		43:50:731:731	6092968	1					
ANR	6093087	ExpressionStatement	val |= ( 1 << i )	51:16:938:953	6092968	0	True				
ANR	6093088	AssignmentExpression	val |= ( 1 << i )		6092968	0		|=			
ANR	6093089	Identifier	val		6092968	0					
ANR	6093090	ShiftExpression	1 << i		6092968	1		<<			
ANR	6093091	PrimaryExpression	1		6092968	0					
ANR	6093092	Identifier	i		6092968	1					
ANR	6093093	BreakStatement	break ;	57:8:990:995	6092968	12	True				
ANR	6093094	Statement	case	59:4:1002:1005	6092968	13	True				
ANR	6093095	Statement	0x200	59:9:1007:1011	6092968	14	True				
ANR	6093096	Statement	...	59:15:1013:1015	6092968	15	True				
ANR	6093097	Label	0x23f :	59:19:1017:1022	6092968	16	True				
ANR	6093098	ExpressionStatement	offset += 0x80	61:8:1053:1067	6092968	17	True				
ANR	6093099	AssignmentExpression	offset += 0x80		6092968	0		+=			
ANR	6093100	Identifier	offset		6092968	0					
ANR	6093101	PrimaryExpression	0x80		6092968	1					
ANR	6093102	Statement	case	65:4:1102:1105	6092968	18	True				
ANR	6093103	Statement	0x280	65:9:1107:1111	6092968	19	True				
ANR	6093104	Statement	...	65:15:1113:1115	6092968	20	True				
ANR	6093105	Label	0x2bf :	65:19:1117:1122	6092968	21	True				
ANR	6093106	ExpressionStatement	val = 0	67:8:1155:1162	6092968	22	True				
ANR	6093107	AssignmentExpression	val = 0		6092968	0		=			
ANR	6093108	Identifier	val		6092968	0					
ANR	6093109	PrimaryExpression	0		6092968	1					
ANR	6093110	ExpressionStatement	startvec = offset - 0x280 + NVIC_FIRST_IRQ	69:8:1173:1215	6092968	23	True				
ANR	6093111	AssignmentExpression	startvec = offset - 0x280 + NVIC_FIRST_IRQ		6092968	0		=			
ANR	6093112	Identifier	startvec		6092968	0					
ANR	6093113	AdditiveExpression	offset - 0x280 + NVIC_FIRST_IRQ		6092968	1		-			
ANR	6093114	Identifier	offset		6092968	0					
ANR	6093115	AdditiveExpression	0x280 + NVIC_FIRST_IRQ		6092968	1		+			
ANR	6093116	PrimaryExpression	0x280		6092968	0					
ANR	6093117	Identifier	NVIC_FIRST_IRQ		6092968	1					
ANR	6093118	ForStatement	"for ( i = 0 , end = size * 8 ; i < end && startvec + i < s -> num_irq ; i ++ )"		6092968	24					
ANR	6093119	ForInit	"i = 0 , end = size * 8 ;"	71:13:1246:1267	6092968	0	True				
ANR	6093120	Expression	"i = 0 , end = size * 8"		6092968	0					
ANR	6093121	AssignmentExpression	i = 0		6092968	0		=			
ANR	6093122	Identifier	i		6092968	0					
ANR	6093123	PrimaryExpression	0		6092968	1					
ANR	6093124	AssignmentExpression	end = size * 8		6092968	1		=			
ANR	6093125	Identifier	end		6092968	0					
ANR	6093126	MultiplicativeExpression	size * 8		6092968	1		*			
ANR	6093127	Identifier	size		6092968	0					
ANR	6093128	PrimaryExpression	8		6092968	1					
ANR	6093129	Condition	i < end && startvec + i < s -> num_irq	71:36:1269:1304	6092968	1	True				
ANR	6093130	AndExpression	i < end && startvec + i < s -> num_irq		6092968	0		&&			
ANR	6093131	RelationalExpression	i < end		6092968	0		<			
ANR	6093132	Identifier	i		6092968	0					
ANR	6093133	Identifier	end		6092968	1					
ANR	6093134	RelationalExpression	startvec + i < s -> num_irq		6092968	1		<			
ANR	6093135	AdditiveExpression	startvec + i		6092968	0		+			
ANR	6093136	Identifier	startvec		6092968	0					
ANR	6093137	Identifier	i		6092968	1					
ANR	6093138	PtrMemberAccess	s -> num_irq		6092968	1					
ANR	6093139	Identifier	s		6092968	0					
ANR	6093140	Identifier	num_irq		6092968	1					
ANR	6093141	PostIncDecOperationExpression	i ++	71:74:1307:1309	6092968	2	True				
ANR	6093142	Identifier	i		6092968	0					
ANR	6093143	IncDec	++		6092968	1					
ANR	6093144	CompoundStatement		65:79:1124:1124	6092968	3					
ANR	6093145	IfStatement	if ( s -> vectors [ startvec + i ] . pending )		6092968	0					
ANR	6093146	Condition	s -> vectors [ startvec + i ] . pending	73:16:1331:1362	6092968	0	True				
ANR	6093147	MemberAccess	s -> vectors [ startvec + i ] . pending		6092968	0					
ANR	6093148	ArrayIndexing	s -> vectors [ startvec + i ]		6092968	0					
ANR	6093149	PtrMemberAccess	s -> vectors		6092968	0					
ANR	6093150	Identifier	s		6092968	0					
ANR	6093151	Identifier	vectors		6092968	1					
ANR	6093152	AdditiveExpression	startvec + i		6092968	1		+			
ANR	6093153	Identifier	startvec		6092968	0					
ANR	6093154	Identifier	i		6092968	1					
ANR	6093155	Identifier	pending		6092968	1					
ANR	6093156	CompoundStatement		67:50:1177:1177	6092968	1					
ANR	6093157	ExpressionStatement	val |= ( 1 << i )	75:16:1384:1399	6092968	0	True				
ANR	6093158	AssignmentExpression	val |= ( 1 << i )		6092968	0		|=			
ANR	6093159	Identifier	val		6092968	0					
ANR	6093160	ShiftExpression	1 << i		6092968	1		<<			
ANR	6093161	PrimaryExpression	1		6092968	0					
ANR	6093162	Identifier	i		6092968	1					
ANR	6093163	BreakStatement	break ;	81:8:1436:1441	6092968	25	True				
ANR	6093164	Statement	case	83:4:1448:1451	6092968	26	True				
ANR	6093165	Statement	0x300	83:9:1453:1457	6092968	27	True				
ANR	6093166	Statement	...	83:15:1459:1461	6092968	28	True				
ANR	6093167	Label	0x33f :	83:19:1463:1468	6092968	29	True				
ANR	6093168	ExpressionStatement	val = 0	85:8:1497:1504	6092968	30	True				
ANR	6093169	AssignmentExpression	val = 0		6092968	0		=			
ANR	6093170	Identifier	val		6092968	0					
ANR	6093171	PrimaryExpression	0		6092968	1					
ANR	6093172	ExpressionStatement	startvec = offset - 0x300 + NVIC_FIRST_IRQ	87:8:1515:1557	6092968	31	True				
ANR	6093173	AssignmentExpression	startvec = offset - 0x300 + NVIC_FIRST_IRQ		6092968	0		=			
ANR	6093174	Identifier	startvec		6092968	0					
ANR	6093175	AdditiveExpression	offset - 0x300 + NVIC_FIRST_IRQ		6092968	1		-			
ANR	6093176	Identifier	offset		6092968	0					
ANR	6093177	AdditiveExpression	0x300 + NVIC_FIRST_IRQ		6092968	1		+			
ANR	6093178	PrimaryExpression	0x300		6092968	0					
ANR	6093179	Identifier	NVIC_FIRST_IRQ		6092968	1					
ANR	6093180	ForStatement	"for ( i = 0 , end = size * 8 ; i < end && startvec + i < s -> num_irq ; i ++ )"		6092968	32					
ANR	6093181	ForInit	"i = 0 , end = size * 8 ;"	91:13:1590:1611	6092968	0	True				
ANR	6093182	Expression	"i = 0 , end = size * 8"		6092968	0					
ANR	6093183	AssignmentExpression	i = 0		6092968	0		=			
ANR	6093184	Identifier	i		6092968	0					
ANR	6093185	PrimaryExpression	0		6092968	1					
ANR	6093186	AssignmentExpression	end = size * 8		6092968	1		=			
ANR	6093187	Identifier	end		6092968	0					
ANR	6093188	MultiplicativeExpression	size * 8		6092968	1		*			
ANR	6093189	Identifier	size		6092968	0					
ANR	6093190	PrimaryExpression	8		6092968	1					
ANR	6093191	Condition	i < end && startvec + i < s -> num_irq	91:36:1613:1648	6092968	1	True				
ANR	6093192	AndExpression	i < end && startvec + i < s -> num_irq		6092968	0		&&			
ANR	6093193	RelationalExpression	i < end		6092968	0		<			
ANR	6093194	Identifier	i		6092968	0					
ANR	6093195	Identifier	end		6092968	1					
ANR	6093196	RelationalExpression	startvec + i < s -> num_irq		6092968	1		<			
ANR	6093197	AdditiveExpression	startvec + i		6092968	0		+			
ANR	6093198	Identifier	startvec		6092968	0					
ANR	6093199	Identifier	i		6092968	1					
ANR	6093200	PtrMemberAccess	s -> num_irq		6092968	1					
ANR	6093201	Identifier	s		6092968	0					
ANR	6093202	Identifier	num_irq		6092968	1					
ANR	6093203	PostIncDecOperationExpression	i ++	91:74:1651:1653	6092968	2	True				
ANR	6093204	Identifier	i		6092968	0					
ANR	6093205	IncDec	++		6092968	1					
ANR	6093206	CompoundStatement		85:79:1468:1468	6092968	3					
ANR	6093207	IfStatement	if ( s -> vectors [ startvec + i ] . active )		6092968	0					
ANR	6093208	Condition	s -> vectors [ startvec + i ] . active	93:16:1675:1705	6092968	0	True				
ANR	6093209	MemberAccess	s -> vectors [ startvec + i ] . active		6092968	0					
ANR	6093210	ArrayIndexing	s -> vectors [ startvec + i ]		6092968	0					
ANR	6093211	PtrMemberAccess	s -> vectors		6092968	0					
ANR	6093212	Identifier	s		6092968	0					
ANR	6093213	Identifier	vectors		6092968	1					
ANR	6093214	AdditiveExpression	startvec + i		6092968	1		+			
ANR	6093215	Identifier	startvec		6092968	0					
ANR	6093216	Identifier	i		6092968	1					
ANR	6093217	Identifier	active		6092968	1					
ANR	6093218	CompoundStatement		87:49:1520:1520	6092968	1					
ANR	6093219	ExpressionStatement	val |= ( 1 << i )	95:16:1727:1742	6092968	0	True				
ANR	6093220	AssignmentExpression	val |= ( 1 << i )		6092968	0		|=			
ANR	6093221	Identifier	val		6092968	0					
ANR	6093222	ShiftExpression	1 << i		6092968	1		<<			
ANR	6093223	PrimaryExpression	1		6092968	0					
ANR	6093224	Identifier	i		6092968	1					
ANR	6093225	BreakStatement	break ;	101:8:1779:1784	6092968	33	True				
ANR	6093226	Statement	case	103:4:1791:1794	6092968	34	True				
ANR	6093227	Statement	0x400	103:9:1796:1800	6092968	35	True				
ANR	6093228	Statement	...	103:15:1802:1804	6092968	36	True				
ANR	6093229	Label	0x5ef :	103:19:1806:1811	6092968	37	True				
ANR	6093230	ExpressionStatement	val = 0	105:8:1842:1849	6092968	38	True				
ANR	6093231	AssignmentExpression	val = 0		6092968	0		=			
ANR	6093232	Identifier	val		6092968	0					
ANR	6093233	PrimaryExpression	0		6092968	1					
ANR	6093234	ExpressionStatement	startvec = offset - 0x400 + NVIC_FIRST_IRQ	107:8:1860:1902	6092968	39	True				
ANR	6093235	AssignmentExpression	startvec = offset - 0x400 + NVIC_FIRST_IRQ		6092968	0		=			
ANR	6093236	Identifier	startvec		6092968	0					
ANR	6093237	AdditiveExpression	offset - 0x400 + NVIC_FIRST_IRQ		6092968	1		-			
ANR	6093238	Identifier	offset		6092968	0					
ANR	6093239	AdditiveExpression	0x400 + NVIC_FIRST_IRQ		6092968	1		+			
ANR	6093240	PrimaryExpression	0x400		6092968	0					
ANR	6093241	Identifier	NVIC_FIRST_IRQ		6092968	1					
ANR	6093242	ForStatement	for ( i = 0 ; i < size && startvec + i < s -> num_irq ; i ++ )		6092968	40					
ANR	6093243	ForInit	i = 0 ;	111:13:1935:1940	6092968	0	True				
ANR	6093244	AssignmentExpression	i = 0		6092968	0		=			
ANR	6093245	Identifier	i		6092968	0					
ANR	6093246	PrimaryExpression	0		6092968	1					
ANR	6093247	Condition	i < size && startvec + i < s -> num_irq	111:20:1942:1978	6092968	1	True				
ANR	6093248	AndExpression	i < size && startvec + i < s -> num_irq		6092968	0		&&			
ANR	6093249	RelationalExpression	i < size		6092968	0		<			
ANR	6093250	Identifier	i		6092968	0					
ANR	6093251	Identifier	size		6092968	1					
ANR	6093252	RelationalExpression	startvec + i < s -> num_irq		6092968	1		<			
ANR	6093253	AdditiveExpression	startvec + i		6092968	0		+			
ANR	6093254	Identifier	startvec		6092968	0					
ANR	6093255	Identifier	i		6092968	1					
ANR	6093256	PtrMemberAccess	s -> num_irq		6092968	1					
ANR	6093257	Identifier	s		6092968	0					
ANR	6093258	Identifier	num_irq		6092968	1					
ANR	6093259	PostIncDecOperationExpression	i ++	111:59:1981:1983	6092968	2	True				
ANR	6093260	Identifier	i		6092968	0					
ANR	6093261	IncDec	++		6092968	1					
ANR	6093262	CompoundStatement		105:64:1798:1798	6092968	3					
ANR	6093263	ExpressionStatement	val |= s -> vectors [ startvec + i ] . prio << ( 8 * i )	113:12:2001:2048	6092968	0	True				
ANR	6093264	AssignmentExpression	val |= s -> vectors [ startvec + i ] . prio << ( 8 * i )		6092968	0		|=			
ANR	6093265	Identifier	val		6092968	0					
ANR	6093266	ShiftExpression	s -> vectors [ startvec + i ] . prio << ( 8 * i )		6092968	1		<<			
ANR	6093267	MemberAccess	s -> vectors [ startvec + i ] . prio		6092968	0					
ANR	6093268	ArrayIndexing	s -> vectors [ startvec + i ]		6092968	0					
ANR	6093269	PtrMemberAccess	s -> vectors		6092968	0					
ANR	6093270	Identifier	s		6092968	0					
ANR	6093271	Identifier	vectors		6092968	1					
ANR	6093272	AdditiveExpression	startvec + i		6092968	1		+			
ANR	6093273	Identifier	startvec		6092968	0					
ANR	6093274	Identifier	i		6092968	1					
ANR	6093275	Identifier	prio		6092968	1					
ANR	6093276	MultiplicativeExpression	8 * i		6092968	1		*			
ANR	6093277	PrimaryExpression	8		6092968	0					
ANR	6093278	Identifier	i		6092968	1					
ANR	6093279	BreakStatement	break ;	117:8:2070:2075	6092968	41	True				
ANR	6093280	Statement	case	119:4:2082:2085	6092968	42	True				
ANR	6093281	Statement	0xd18	119:9:2087:2091	6092968	43	True				
ANR	6093282	Statement	...	119:15:2093:2095	6092968	44	True				
ANR	6093283	Label	0xd23 :	119:19:2097:2102	6092968	45	True				
ANR	6093284	ExpressionStatement	val = 0	121:8:2145:2152	6092968	46	True				
ANR	6093285	AssignmentExpression	val = 0		6092968	0		=			
ANR	6093286	Identifier	val		6092968	0					
ANR	6093287	PrimaryExpression	0		6092968	1					
ANR	6093288	ForStatement	for ( i = 0 ; i < size ; i ++ )		6092968	47					
ANR	6093289	ForInit	i = 0 ;	123:13:2168:2173	6092968	0	True				
ANR	6093290	AssignmentExpression	i = 0		6092968	0		=			
ANR	6093291	Identifier	i		6092968	0					
ANR	6093292	PrimaryExpression	0		6092968	1					
ANR	6093293	Condition	i < size	123:20:2175:2182	6092968	1	True				
ANR	6093294	RelationalExpression	i < size		6092968	0		<			
ANR	6093295	Identifier	i		6092968	0					
ANR	6093296	Identifier	size		6092968	1					
ANR	6093297	PostIncDecOperationExpression	i ++	123:30:2185:2187	6092968	2	True				
ANR	6093298	Identifier	i		6092968	0					
ANR	6093299	IncDec	++		6092968	1					
ANR	6093300	CompoundStatement		117:35:2002:2002	6092968	3					
ANR	6093301	ExpressionStatement	val |= s -> vectors [ ( offset - 0xd14 ) + i ] . prio << ( i * 8 )	125:12:2205:2260	6092968	0	True				
ANR	6093302	AssignmentExpression	val |= s -> vectors [ ( offset - 0xd14 ) + i ] . prio << ( i * 8 )		6092968	0		|=			
ANR	6093303	Identifier	val		6092968	0					
ANR	6093304	ShiftExpression	s -> vectors [ ( offset - 0xd14 ) + i ] . prio << ( i * 8 )		6092968	1		<<			
ANR	6093305	MemberAccess	s -> vectors [ ( offset - 0xd14 ) + i ] . prio		6092968	0					
ANR	6093306	ArrayIndexing	s -> vectors [ ( offset - 0xd14 ) + i ]		6092968	0					
ANR	6093307	PtrMemberAccess	s -> vectors		6092968	0					
ANR	6093308	Identifier	s		6092968	0					
ANR	6093309	Identifier	vectors		6092968	1					
ANR	6093310	AdditiveExpression	( offset - 0xd14 ) + i		6092968	1		+			
ANR	6093311	AdditiveExpression	offset - 0xd14		6092968	0		-			
ANR	6093312	Identifier	offset		6092968	0					
ANR	6093313	PrimaryExpression	0xd14		6092968	1					
ANR	6093314	Identifier	i		6092968	1					
ANR	6093315	Identifier	prio		6092968	1					
ANR	6093316	MultiplicativeExpression	i * 8		6092968	1		*			
ANR	6093317	Identifier	i		6092968	0					
ANR	6093318	PrimaryExpression	8		6092968	1					
ANR	6093319	BreakStatement	break ;	129:8:2282:2287	6092968	48	True				
ANR	6093320	Statement	case	131:4:2294:2297	6092968	49	True				
ANR	6093321	Statement	0xfe0	131:9:2299:2303	6092968	50	True				
ANR	6093322	Statement	...	131:15:2305:2307	6092968	51	True				
ANR	6093323	Label	0xfff :	131:19:2309:2314	6092968	52	True				
ANR	6093324	IfStatement	if ( offset & 3 )		6092968	53					
ANR	6093325	Condition	offset & 3	133:12:2340:2349	6092968	0	True				
ANR	6093326	BitAndExpression	offset & 3		6092968	0		&			
ANR	6093327	Identifier	offset		6092968	0					
ANR	6093328	PrimaryExpression	3		6092968	1					
ANR	6093329	CompoundStatement		127:24:2164:2164	6092968	1					
ANR	6093330	ExpressionStatement	val = 0	135:12:2367:2374	6092968	0	True				
ANR	6093331	AssignmentExpression	val = 0		6092968	0		=			
ANR	6093332	Identifier	val		6092968	0					
ANR	6093333	PrimaryExpression	0		6092968	1					
ANR	6093334	ElseStatement	else		6092968	0					
ANR	6093335	CompoundStatement		131:15:2204:2204	6092968	0					
ANR	6093336	ExpressionStatement	val = nvic_id [ ( offset - 0xfe0 ) >> 2 ]	139:12:2407:2443	6092968	0	True				
ANR	6093337	AssignmentExpression	val = nvic_id [ ( offset - 0xfe0 ) >> 2 ]		6092968	0		=			
ANR	6093338	Identifier	val		6092968	0					
ANR	6093339	ArrayIndexing	nvic_id [ ( offset - 0xfe0 ) >> 2 ]		6092968	1					
ANR	6093340	Identifier	nvic_id		6092968	0					
ANR	6093341	ShiftExpression	( offset - 0xfe0 ) >> 2		6092968	1		>>			
ANR	6093342	AdditiveExpression	offset - 0xfe0		6092968	0		-			
ANR	6093343	Identifier	offset		6092968	0					
ANR	6093344	PrimaryExpression	0xfe0		6092968	1					
ANR	6093345	PrimaryExpression	2		6092968	1					
ANR	6093346	BreakStatement	break ;	143:8:2465:2470	6092968	54	True				
ANR	6093347	Label	default :	145:4:2477:2484	6092968	55	True				
ANR	6093348	Identifier	default		6092968	0					
ANR	6093349	IfStatement	if ( size == 4 )		6092968	56					
ANR	6093350	Condition	size == 4	147:12:2499:2507	6092968	0	True				
ANR	6093351	EqualityExpression	size == 4		6092968	0		==			
ANR	6093352	Identifier	size		6092968	0					
ANR	6093353	PrimaryExpression	4		6092968	1					
ANR	6093354	CompoundStatement		141:23:2322:2322	6092968	1					
ANR	6093355	ExpressionStatement	"val = nvic_readl ( s , offset )"	149:12:2525:2552	6092968	0	True				
ANR	6093356	AssignmentExpression	"val = nvic_readl ( s , offset )"		6092968	0		=			
ANR	6093357	Identifier	val		6092968	0					
ANR	6093358	CallExpression	"nvic_readl ( s , offset )"		6092968	1					
ANR	6093359	Callee	nvic_readl		6092968	0					
ANR	6093360	Identifier	nvic_readl		6092968	0					
ANR	6093361	ArgumentList	s		6092968	1					
ANR	6093362	Argument	s		6092968	0					
ANR	6093363	Identifier	s		6092968	0					
ANR	6093364	Argument	offset		6092968	1					
ANR	6093365	Identifier	offset		6092968	0					
ANR	6093366	ElseStatement	else		6092968	0					
ANR	6093367	CompoundStatement		145:15:2382:2382	6092968	0					
ANR	6093368	ExpressionStatement	"qemu_log_mask ( LOG_GUEST_ERROR , ""NVIC: Bad read of size %d at offset 0x%x\\n"" , size , offset )"	153:12:2585:2729	6092968	0	True				
ANR	6093369	CallExpression	"qemu_log_mask ( LOG_GUEST_ERROR , ""NVIC: Bad read of size %d at offset 0x%x\\n"" , size , offset )"		6092968	0					
ANR	6093370	Callee	qemu_log_mask		6092968	0					
ANR	6093371	Identifier	qemu_log_mask		6092968	0					
ANR	6093372	ArgumentList	LOG_GUEST_ERROR		6092968	1					
ANR	6093373	Argument	LOG_GUEST_ERROR		6092968	0					
ANR	6093374	Identifier	LOG_GUEST_ERROR		6092968	0					
ANR	6093375	Argument	"""NVIC: Bad read of size %d at offset 0x%x\\n"""		6092968	1					
ANR	6093376	PrimaryExpression	"""NVIC: Bad read of size %d at offset 0x%x\\n"""		6092968	0					
ANR	6093377	Argument	size		6092968	2					
ANR	6093378	Identifier	size		6092968	0					
ANR	6093379	Argument	offset		6092968	3					
ANR	6093380	Identifier	offset		6092968	0					
ANR	6093381	ExpressionStatement	val = 0	159:12:2744:2751	6092968	1	True				
ANR	6093382	AssignmentExpression	val = 0		6092968	0		=			
ANR	6093383	Identifier	val		6092968	0					
ANR	6093384	PrimaryExpression	0		6092968	1					
ANR	6093385	ExpressionStatement	"trace_nvic_sysreg_read ( addr , val , size )"	167:4:2778:2817	6092968	6	True				
ANR	6093386	CallExpression	"trace_nvic_sysreg_read ( addr , val , size )"		6092968	0					
ANR	6093387	Callee	trace_nvic_sysreg_read		6092968	0					
ANR	6093388	Identifier	trace_nvic_sysreg_read		6092968	0					
ANR	6093389	ArgumentList	addr		6092968	1					
ANR	6093390	Argument	addr		6092968	0					
ANR	6093391	Identifier	addr		6092968	0					
ANR	6093392	Argument	val		6092968	1					
ANR	6093393	Identifier	val		6092968	0					
ANR	6093394	Argument	size		6092968	2					
ANR	6093395	Identifier	size		6092968	0					
ANR	6093396	ExpressionStatement	* data = val	169:4:2824:2835	6092968	7	True				
ANR	6093397	AssignmentExpression	* data = val		6092968	0		=			
ANR	6093398	UnaryOperationExpression	* data		6092968	0					
ANR	6093399	UnaryOperator	*		6092968	0					
ANR	6093400	Identifier	data		6092968	1					
ANR	6093401	Identifier	val		6092968	1					
ANR	6093402	ReturnStatement	return MEMTX_OK ;	171:4:2842:2857	6092968	8	True				
ANR	6093403	Identifier	MEMTX_OK		6092968	0					
ANR	6093404	ReturnType	static MemTxResult		6092968	1					
ANR	6093405	Identifier	nvic_sysreg_read		6092968	2					
ANR	6093406	ParameterList	"void * opaque , hwaddr addr , uint64_t * data , unsigned size , MemTxAttrs attrs"		6092968	3					
ANR	6093407	Parameter	void * opaque	1:36:36:47	6092968	0	True				
ANR	6093408	ParameterType	void *		6092968	0					
ANR	6093409	Identifier	opaque		6092968	1					
ANR	6093410	Parameter	hwaddr addr	1:50:50:60	6092968	1	True				
ANR	6093411	ParameterType	hwaddr		6092968	0					
ANR	6093412	Identifier	addr		6092968	1					
ANR	6093413	Parameter	uint64_t * data	3:36:100:113	6092968	2	True				
ANR	6093414	ParameterType	uint64_t *		6092968	0					
ANR	6093415	Identifier	data		6092968	1					
ANR	6093416	Parameter	unsigned size	3:52:116:128	6092968	3	True				
ANR	6093417	ParameterType	unsigned		6092968	0					
ANR	6093418	Identifier	size		6092968	1					
ANR	6093419	Parameter	MemTxAttrs attrs	5:36:168:183	6092968	4	True				
ANR	6093420	ParameterType	MemTxAttrs		6092968	0					
ANR	6093421	Identifier	attrs		6092968	1					
ANR	6093422	CFGEntryNode	ENTRY		6092968		True				
ANR	6093423	CFGExitNode	EXIT		6092968		True				
ANR	6093424	Symbol	data		6092968						
ANR	6093425	Symbol	NVIC_FIRST_IRQ		6092968						
ANR	6093426	Symbol	s -> vectors		6092968						
ANR	6093427	Symbol	s -> num_irq		6092968						
ANR	6093428	Symbol	startvec		6092968						
ANR	6093429	Symbol	* s -> vectors		6092968						
ANR	6093430	Symbol	s -> vectors [ startvec + i ] . prio		6092968						
ANR	6093431	Symbol	MEMTX_OK		6092968						
ANR	6093432	Symbol	* * s		6092968						
ANR	6093433	Symbol	end		6092968						
ANR	6093434	Symbol	addr		6092968						
ANR	6093435	Symbol	val		6092968						
ANR	6093436	Symbol	MEMTX_ERROR		6092968						
ANR	6093437	Symbol	opaque		6092968						
ANR	6093438	Symbol	attrs . user		6092968						
ANR	6093439	Symbol	offset		6092968						
ANR	6093440	Symbol	s -> vectors [ startvec + i ] . enabled		6092968						
ANR	6093441	Symbol	nvic_id		6092968						
ANR	6093442	Symbol	i		6092968						
ANR	6093443	Symbol	nvic_readl		6092968						
ANR	6093444	Symbol	nvic_user_access_ok		6092968						
ANR	6093445	Symbol	attrs		6092968						
ANR	6093446	Symbol	s -> vectors [ ( offset - 0xd14 ) + i ] . prio		6092968						
ANR	6093447	Symbol	LOG_GUEST_ERROR		6092968						
ANR	6093448	Symbol	s -> vectors [ startvec + i ] . pending		6092968						
ANR	6093449	Symbol	s		6092968						
ANR	6093450	Symbol	* i		6092968						
ANR	6093451	Symbol	size		6092968						
ANR	6093452	Symbol	* offset		6092968						
ANR	6093453	Symbol	s -> vectors [ startvec + i ] . active		6092968						
ANR	6093454	Symbol	* s		6092968						
ANR	6093455	Symbol	* nvic_id		6092968						
ANR	6093456	Symbol	* data		6092968						
ANR	6093457	Symbol	* startvec		6092968						
