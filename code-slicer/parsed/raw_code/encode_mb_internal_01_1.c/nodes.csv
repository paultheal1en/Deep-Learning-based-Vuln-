command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3000265	File	/home/p4ultr4n/workplace/ReVeal/raw_code/encode_mb_internal_01_1.c								
ANR	3000266	Function	encode_mb_internal	1:0:0:16333							
ANR	3000267	FunctionDef	"encode_mb_internal (MpegEncContext * s , int motion_x , int motion_y , int mb_block_height , int mb_block_width , int mb_block_count)"		3000266	0					
ANR	3000268	CompoundStatement		11:0:353:16333	3000266	0					
ANR	3000269	Statement	int16_t	13:4:360:366	3000266	0	True				
ANR	3000270	ExpressionStatement	weight [ 12 ] [ 64 ]	13:12:368:382	3000266	1	True				
ANR	3000271	ArrayIndexing	weight [ 12 ] [ 64 ]		3000266	0					
ANR	3000272	ArrayIndexing	weight [ 12 ]		3000266	0					
ANR	3000273	Identifier	weight		3000266	0					
ANR	3000274	PrimaryExpression	12		3000266	1					
ANR	3000275	PrimaryExpression	64		3000266	1					
ANR	3000276	Statement	int16_t	15:4:389:395	3000266	2	True				
ANR	3000277	ExpressionStatement	orig [ 12 ] [ 64 ]	15:12:397:409	3000266	3	True				
ANR	3000278	ArrayIndexing	orig [ 12 ] [ 64 ]		3000266	0					
ANR	3000279	ArrayIndexing	orig [ 12 ]		3000266	0					
ANR	3000280	Identifier	orig		3000266	0					
ANR	3000281	PrimaryExpression	12		3000266	1					
ANR	3000282	PrimaryExpression	64		3000266	1					
ANR	3000283	IdentifierDeclStatement	const int mb_x = s -> mb_x ;	17:4:416:440	3000266	4	True				
ANR	3000284	IdentifierDecl	mb_x = s -> mb_x		3000266	0					
ANR	3000285	IdentifierDeclType	const int		3000266	0					
ANR	3000286	Identifier	mb_x		3000266	1					
ANR	3000287	AssignmentExpression	mb_x = s -> mb_x		3000266	2		=			
ANR	3000288	Identifier	mb_x		3000266	0					
ANR	3000289	PtrMemberAccess	s -> mb_x		3000266	1					
ANR	3000290	Identifier	s		3000266	0					
ANR	3000291	Identifier	mb_x		3000266	1					
ANR	3000292	IdentifierDeclStatement	const int mb_y = s -> mb_y ;	19:4:447:471	3000266	5	True				
ANR	3000293	IdentifierDecl	mb_y = s -> mb_y		3000266	0					
ANR	3000294	IdentifierDeclType	const int		3000266	0					
ANR	3000295	Identifier	mb_y		3000266	1					
ANR	3000296	AssignmentExpression	mb_y = s -> mb_y		3000266	2		=			
ANR	3000297	Identifier	mb_y		3000266	0					
ANR	3000298	PtrMemberAccess	s -> mb_y		3000266	1					
ANR	3000299	Identifier	s		3000266	0					
ANR	3000300	Identifier	mb_y		3000266	1					
ANR	3000301	IdentifierDeclStatement	int i ;	21:4:478:483	3000266	6	True				
ANR	3000302	IdentifierDecl	i		3000266	0					
ANR	3000303	IdentifierDeclType	int		3000266	0					
ANR	3000304	Identifier	i		3000266	1					
ANR	3000305	IdentifierDeclStatement	int skip_dct [ 12 ] ;	23:4:490:506	3000266	7	True				
ANR	3000306	IdentifierDecl	skip_dct [ 12 ]		3000266	0					
ANR	3000307	IdentifierDeclType	int [ 12 ]		3000266	0					
ANR	3000308	Identifier	skip_dct		3000266	1					
ANR	3000309	PrimaryExpression	12		3000266	2					
ANR	3000310	IdentifierDeclStatement	int dct_offset = s -> linesize * 8 ;	25:4:513:545	3000266	8	True				
ANR	3000311	IdentifierDecl	dct_offset = s -> linesize * 8		3000266	0					
ANR	3000312	IdentifierDeclType	int		3000266	0					
ANR	3000313	Identifier	dct_offset		3000266	1					
ANR	3000314	AssignmentExpression	dct_offset = s -> linesize * 8		3000266	2		=			
ANR	3000315	Identifier	dct_offset		3000266	0					
ANR	3000316	MultiplicativeExpression	s -> linesize * 8		3000266	1		*			
ANR	3000317	PtrMemberAccess	s -> linesize		3000266	0					
ANR	3000318	Identifier	s		3000266	0					
ANR	3000319	Identifier	linesize		3000266	1					
ANR	3000320	PrimaryExpression	8		3000266	1					
ANR	3000321	IdentifierDeclStatement	int uv_dct_offset = s -> uvlinesize * 8 ;	27:4:586:623	3000266	9	True				
ANR	3000322	IdentifierDecl	uv_dct_offset = s -> uvlinesize * 8		3000266	0					
ANR	3000323	IdentifierDeclType	int		3000266	0					
ANR	3000324	Identifier	uv_dct_offset		3000266	1					
ANR	3000325	AssignmentExpression	uv_dct_offset = s -> uvlinesize * 8		3000266	2		=			
ANR	3000326	Identifier	uv_dct_offset		3000266	0					
ANR	3000327	MultiplicativeExpression	s -> uvlinesize * 8		3000266	1		*			
ANR	3000328	PtrMemberAccess	s -> uvlinesize		3000266	0					
ANR	3000329	Identifier	s		3000266	0					
ANR	3000330	Identifier	uvlinesize		3000266	1					
ANR	3000331	PrimaryExpression	8		3000266	1					
ANR	3000332	IdentifierDeclStatement	"uint8_t * ptr_y , * ptr_cb , * ptr_cr ;"	29:4:630:662	3000266	10	True				
ANR	3000333	IdentifierDecl	* ptr_y		3000266	0					
ANR	3000334	IdentifierDeclType	uint8_t *		3000266	0					
ANR	3000335	Identifier	ptr_y		3000266	1					
ANR	3000336	IdentifierDecl	* ptr_cb		3000266	1					
ANR	3000337	IdentifierDeclType	uint8_t *		3000266	0					
ANR	3000338	Identifier	ptr_cb		3000266	1					
ANR	3000339	IdentifierDecl	* ptr_cr		3000266	2					
ANR	3000340	IdentifierDeclType	uint8_t *		3000266	0					
ANR	3000341	Identifier	ptr_cr		3000266	1					
ANR	3000342	IdentifierDeclStatement	"int wrap_y , wrap_c ;"	31:4:669:687	3000266	11	True				
ANR	3000343	IdentifierDecl	wrap_y		3000266	0					
ANR	3000344	IdentifierDeclType	int		3000266	0					
ANR	3000345	Identifier	wrap_y		3000266	1					
ANR	3000346	IdentifierDecl	wrap_c		3000266	1					
ANR	3000347	IdentifierDeclType	int		3000266	0					
ANR	3000348	Identifier	wrap_c		3000266	1					
ANR	3000349	ForStatement	for ( i = 0 ; i < mb_block_count ; i ++ )		3000266	12					
ANR	3000350	ForInit	i = 0 ;	35:9:701:706	3000266	0	True				
ANR	3000351	AssignmentExpression	i = 0		3000266	0		=			
ANR	3000352	Identifier	i		3000266	0					
ANR	3000353	PrimaryExpression	0		3000266	1					
ANR	3000354	Condition	i < mb_block_count	35:16:708:725	3000266	1	True				
ANR	3000355	RelationalExpression	i < mb_block_count		3000266	0		<			
ANR	3000356	Identifier	i		3000266	0					
ANR	3000357	Identifier	mb_block_count		3000266	1					
ANR	3000358	PostIncDecOperationExpression	i ++	35:36:728:730	3000266	2	True				
ANR	3000359	Identifier	i		3000266	0					
ANR	3000360	IncDec	++		3000266	1					
ANR	3000361	ExpressionStatement	skip_dct [ i ] = s -> skipdct	37:8:742:766	3000266	3	True				
ANR	3000362	AssignmentExpression	skip_dct [ i ] = s -> skipdct		3000266	0		=			
ANR	3000363	ArrayIndexing	skip_dct [ i ]		3000266	0					
ANR	3000364	Identifier	skip_dct		3000266	0					
ANR	3000365	Identifier	i		3000266	1					
ANR	3000366	PtrMemberAccess	s -> skipdct		3000266	1					
ANR	3000367	Identifier	s		3000266	0					
ANR	3000368	Identifier	skipdct		3000266	1					
ANR	3000369	IfStatement	if ( s -> adaptive_quant )		3000266	13					
ANR	3000370	Condition	s -> adaptive_quant	41:8:779:795	3000266	0	True				
ANR	3000371	PtrMemberAccess	s -> adaptive_quant		3000266	0					
ANR	3000372	Identifier	s		3000266	0					
ANR	3000373	Identifier	adaptive_quant		3000266	1					
ANR	3000374	CompoundStatement		35:8:495:539	3000266	1					
ANR	3000375	IdentifierDeclStatement	const int last_qp = s -> qscale ;	43:8:809:838	3000266	0	True				
ANR	3000376	IdentifierDecl	last_qp = s -> qscale		3000266	0					
ANR	3000377	IdentifierDeclType	const int		3000266	0					
ANR	3000378	Identifier	last_qp		3000266	1					
ANR	3000379	AssignmentExpression	last_qp = s -> qscale		3000266	2		=			
ANR	3000380	Identifier	last_qp		3000266	0					
ANR	3000381	PtrMemberAccess	s -> qscale		3000266	1					
ANR	3000382	Identifier	s		3000266	0					
ANR	3000383	Identifier	qscale		3000266	1					
ANR	3000384	IdentifierDeclStatement	const int mb_xy = mb_x + mb_y * s -> mb_stride ;	45:8:849:893	3000266	1	True				
ANR	3000385	IdentifierDecl	mb_xy = mb_x + mb_y * s -> mb_stride		3000266	0					
ANR	3000386	IdentifierDeclType	const int		3000266	0					
ANR	3000387	Identifier	mb_xy		3000266	1					
ANR	3000388	AssignmentExpression	mb_xy = mb_x + mb_y * s -> mb_stride		3000266	2		=			
ANR	3000389	Identifier	mb_xy		3000266	0					
ANR	3000390	AdditiveExpression	mb_x + mb_y * s -> mb_stride		3000266	1		+			
ANR	3000391	Identifier	mb_x		3000266	0					
ANR	3000392	MultiplicativeExpression	mb_y * s -> mb_stride		3000266	1		*			
ANR	3000393	Identifier	mb_y		3000266	0					
ANR	3000394	PtrMemberAccess	s -> mb_stride		3000266	1					
ANR	3000395	Identifier	s		3000266	0					
ANR	3000396	Identifier	mb_stride		3000266	1					
ANR	3000397	ExpressionStatement	s -> lambda = s -> lambda_table [ mb_xy ]	49:8:906:940	3000266	2	True				
ANR	3000398	AssignmentExpression	s -> lambda = s -> lambda_table [ mb_xy ]		3000266	0		=			
ANR	3000399	PtrMemberAccess	s -> lambda		3000266	0					
ANR	3000400	Identifier	s		3000266	0					
ANR	3000401	Identifier	lambda		3000266	1					
ANR	3000402	ArrayIndexing	s -> lambda_table [ mb_xy ]		3000266	1					
ANR	3000403	PtrMemberAccess	s -> lambda_table		3000266	0					
ANR	3000404	Identifier	s		3000266	0					
ANR	3000405	Identifier	lambda_table		3000266	1					
ANR	3000406	Identifier	mb_xy		3000266	1					
ANR	3000407	ExpressionStatement	update_qscale ( s )	51:8:951:967	3000266	3	True				
ANR	3000408	CallExpression	update_qscale ( s )		3000266	0					
ANR	3000409	Callee	update_qscale		3000266	0					
ANR	3000410	Identifier	update_qscale		3000266	0					
ANR	3000411	ArgumentList	s		3000266	1					
ANR	3000412	Argument	s		3000266	0					
ANR	3000413	Identifier	s		3000266	0					
ANR	3000414	IfStatement	if ( ! ( s -> mpv_flags & FF_MPV_FLAG_QP_RD ) )		3000266	4					
ANR	3000415	Condition	! ( s -> mpv_flags & FF_MPV_FLAG_QP_RD )	55:12:984:1018	3000266	0	True				
ANR	3000416	UnaryOperationExpression	! ( s -> mpv_flags & FF_MPV_FLAG_QP_RD )		3000266	0					
ANR	3000417	UnaryOperator	!		3000266	0					
ANR	3000418	BitAndExpression	s -> mpv_flags & FF_MPV_FLAG_QP_RD		3000266	1		&			
ANR	3000419	PtrMemberAccess	s -> mpv_flags		3000266	0					
ANR	3000420	Identifier	s		3000266	0					
ANR	3000421	Identifier	mpv_flags		3000266	1					
ANR	3000422	Identifier	FF_MPV_FLAG_QP_RD		3000266	1					
ANR	3000423	CompoundStatement		45:49:667:667	3000266	1					
ANR	3000424	ExpressionStatement	s -> qscale = s -> current_picture_ptr -> qscale_table [ mb_xy ]	57:12:1036:1091	3000266	0	True				
ANR	3000425	AssignmentExpression	s -> qscale = s -> current_picture_ptr -> qscale_table [ mb_xy ]		3000266	0		=			
ANR	3000426	PtrMemberAccess	s -> qscale		3000266	0					
ANR	3000427	Identifier	s		3000266	0					
ANR	3000428	Identifier	qscale		3000266	1					
ANR	3000429	ArrayIndexing	s -> current_picture_ptr -> qscale_table [ mb_xy ]		3000266	1					
ANR	3000430	PtrMemberAccess	s -> current_picture_ptr -> qscale_table		3000266	0					
ANR	3000431	PtrMemberAccess	s -> current_picture_ptr		3000266	0					
ANR	3000432	Identifier	s		3000266	0					
ANR	3000433	Identifier	current_picture_ptr		3000266	1					
ANR	3000434	Identifier	qscale_table		3000266	1					
ANR	3000435	Identifier	mb_xy		3000266	1					
ANR	3000436	ExpressionStatement	s -> dquant = s -> qscale - last_qp	59:12:1106:1137	3000266	1	True				
ANR	3000437	AssignmentExpression	s -> dquant = s -> qscale - last_qp		3000266	0		=			
ANR	3000438	PtrMemberAccess	s -> dquant		3000266	0					
ANR	3000439	Identifier	s		3000266	0					
ANR	3000440	Identifier	dquant		3000266	1					
ANR	3000441	AdditiveExpression	s -> qscale - last_qp		3000266	1		-			
ANR	3000442	PtrMemberAccess	s -> qscale		3000266	0					
ANR	3000443	Identifier	s		3000266	0					
ANR	3000444	Identifier	qscale		3000266	1					
ANR	3000445	Identifier	last_qp		3000266	1					
ANR	3000446	IfStatement	if ( s -> out_format == FMT_H263 )		3000266	2					
ANR	3000447	Condition	s -> out_format == FMT_H263	63:16:1158:1182	3000266	0	True				
ANR	3000448	EqualityExpression	s -> out_format == FMT_H263		3000266	0		==			
ANR	3000449	PtrMemberAccess	s -> out_format		3000266	0					
ANR	3000450	Identifier	s		3000266	0					
ANR	3000451	Identifier	out_format		3000266	1					
ANR	3000452	Identifier	FMT_H263		3000266	1					
ANR	3000453	CompoundStatement		53:43:831:831	3000266	1					
ANR	3000454	ExpressionStatement	"s -> dquant = av_clip ( s -> dquant , - 2 , 2 )"	65:16:1204:1241	3000266	0	True				
ANR	3000455	AssignmentExpression	"s -> dquant = av_clip ( s -> dquant , - 2 , 2 )"		3000266	0		=			
ANR	3000456	PtrMemberAccess	s -> dquant		3000266	0					
ANR	3000457	Identifier	s		3000266	0					
ANR	3000458	Identifier	dquant		3000266	1					
ANR	3000459	CallExpression	"av_clip ( s -> dquant , - 2 , 2 )"		3000266	1					
ANR	3000460	Callee	av_clip		3000266	0					
ANR	3000461	Identifier	av_clip		3000266	0					
ANR	3000462	ArgumentList	s -> dquant		3000266	1					
ANR	3000463	Argument	s -> dquant		3000266	0					
ANR	3000464	PtrMemberAccess	s -> dquant		3000266	0					
ANR	3000465	Identifier	s		3000266	0					
ANR	3000466	Identifier	dquant		3000266	1					
ANR	3000467	Argument	- 2		3000266	1					
ANR	3000468	UnaryOperationExpression	- 2		3000266	0					
ANR	3000469	UnaryOperator	-		3000266	0					
ANR	3000470	PrimaryExpression	2		3000266	1					
ANR	3000471	Argument	2		3000266	2					
ANR	3000472	PrimaryExpression	2		3000266	0					
ANR	3000473	IfStatement	if ( s -> codec_id == AV_CODEC_ID_MPEG4 )		3000266	1					
ANR	3000474	Condition	s -> codec_id == AV_CODEC_ID_MPEG4	69:20:1266:1297	3000266	0	True				
ANR	3000475	EqualityExpression	s -> codec_id == AV_CODEC_ID_MPEG4		3000266	0		==			
ANR	3000476	PtrMemberAccess	s -> codec_id		3000266	0					
ANR	3000477	Identifier	s		3000266	0					
ANR	3000478	Identifier	codec_id		3000266	1					
ANR	3000479	Identifier	AV_CODEC_ID_MPEG4		3000266	1					
ANR	3000480	CompoundStatement		59:54:946:946	3000266	1					
ANR	3000481	IfStatement	if ( ! s -> mb_intra )		3000266	0					
ANR	3000482	Condition	! s -> mb_intra	71:24:1327:1338	3000266	0	True				
ANR	3000483	UnaryOperationExpression	! s -> mb_intra		3000266	0					
ANR	3000484	UnaryOperator	!		3000266	0					
ANR	3000485	PtrMemberAccess	s -> mb_intra		3000266	1					
ANR	3000486	Identifier	s		3000266	0					
ANR	3000487	Identifier	mb_intra		3000266	1					
ANR	3000488	CompoundStatement		61:38:987:987	3000266	1					
ANR	3000489	IfStatement	if ( s -> pict_type == AV_PICTURE_TYPE_B )		3000266	0					
ANR	3000490	Condition	s -> pict_type == AV_PICTURE_TYPE_B	73:28:1372:1404	3000266	0	True				
ANR	3000491	EqualityExpression	s -> pict_type == AV_PICTURE_TYPE_B		3000266	0		==			
ANR	3000492	PtrMemberAccess	s -> pict_type		3000266	0					
ANR	3000493	Identifier	s		3000266	0					
ANR	3000494	Identifier	pict_type		3000266	1					
ANR	3000495	Identifier	AV_PICTURE_TYPE_B		3000266	1					
ANR	3000496	CompoundStatement		63:63:1053:1053	3000266	1					
ANR	3000497	IfStatement	if ( s -> dquant & 1 || s -> mv_dir & MV_DIRECT )		3000266	0					
ANR	3000498	Condition	s -> dquant & 1 || s -> mv_dir & MV_DIRECT	75:32:1442:1479	3000266	0	True				
ANR	3000499	OrExpression	s -> dquant & 1 || s -> mv_dir & MV_DIRECT		3000266	0		||			
ANR	3000500	BitAndExpression	s -> dquant & 1		3000266	0		&			
ANR	3000501	PtrMemberAccess	s -> dquant		3000266	0					
ANR	3000502	Identifier	s		3000266	0					
ANR	3000503	Identifier	dquant		3000266	1					
ANR	3000504	PrimaryExpression	1		3000266	1					
ANR	3000505	BitAndExpression	s -> mv_dir & MV_DIRECT		3000266	1		&			
ANR	3000506	PtrMemberAccess	s -> mv_dir		3000266	0					
ANR	3000507	Identifier	s		3000266	0					
ANR	3000508	Identifier	mv_dir		3000266	1					
ANR	3000509	Identifier	MV_DIRECT		3000266	1					
ANR	3000510	ExpressionStatement	s -> dquant = 0	77:32:1515:1528	3000266	1	True				
ANR	3000511	AssignmentExpression	s -> dquant = 0		3000266	0		=			
ANR	3000512	PtrMemberAccess	s -> dquant		3000266	0					
ANR	3000513	Identifier	s		3000266	0					
ANR	3000514	Identifier	dquant		3000266	1					
ANR	3000515	PrimaryExpression	0		3000266	1					
ANR	3000516	IfStatement	if ( s -> mv_type == MV_TYPE_8X8 )		3000266	1					
ANR	3000517	Condition	s -> mv_type == MV_TYPE_8X8	81:28:1586:1610	3000266	0	True				
ANR	3000518	EqualityExpression	s -> mv_type == MV_TYPE_8X8		3000266	0		==			
ANR	3000519	PtrMemberAccess	s -> mv_type		3000266	0					
ANR	3000520	Identifier	s		3000266	0					
ANR	3000521	Identifier	mv_type		3000266	1					
ANR	3000522	Identifier	MV_TYPE_8X8		3000266	1					
ANR	3000523	ExpressionStatement	s -> dquant = 0	83:28:1642:1655	3000266	1	True				
ANR	3000524	AssignmentExpression	s -> dquant = 0		3000266	0		=			
ANR	3000525	PtrMemberAccess	s -> dquant		3000266	0					
ANR	3000526	Identifier	s		3000266	0					
ANR	3000527	Identifier	dquant		3000266	1					
ANR	3000528	PrimaryExpression	0		3000266	1					
ANR	3000529	ExpressionStatement	"ff_set_qscale ( s , last_qp + s -> dquant )"	93:8:1734:1771	3000266	5	True				
ANR	3000530	CallExpression	"ff_set_qscale ( s , last_qp + s -> dquant )"		3000266	0					
ANR	3000531	Callee	ff_set_qscale		3000266	0					
ANR	3000532	Identifier	ff_set_qscale		3000266	0					
ANR	3000533	ArgumentList	s		3000266	1					
ANR	3000534	Argument	s		3000266	0					
ANR	3000535	Identifier	s		3000266	0					
ANR	3000536	Argument	last_qp + s -> dquant		3000266	1					
ANR	3000537	AdditiveExpression	last_qp + s -> dquant		3000266	0		+			
ANR	3000538	Identifier	last_qp		3000266	0					
ANR	3000539	PtrMemberAccess	s -> dquant		3000266	1					
ANR	3000540	Identifier	s		3000266	0					
ANR	3000541	Identifier	dquant		3000266	1					
ANR	3000542	ElseStatement	else		3000266	0					
ANR	3000543	IfStatement	if ( s -> mpv_flags & FF_MPV_FLAG_QP_RD )		3000266	0					
ANR	3000544	Condition	s -> mpv_flags & FF_MPV_FLAG_QP_RD	95:15:1789:1820	3000266	0	True				
ANR	3000545	BitAndExpression	s -> mpv_flags & FF_MPV_FLAG_QP_RD		3000266	0		&			
ANR	3000546	PtrMemberAccess	s -> mpv_flags		3000266	0					
ANR	3000547	Identifier	s		3000266	0					
ANR	3000548	Identifier	mpv_flags		3000266	1					
ANR	3000549	Identifier	FF_MPV_FLAG_QP_RD		3000266	1					
ANR	3000550	ExpressionStatement	"ff_set_qscale ( s , s -> qscale + s -> dquant )"	97:8:1832:1871	3000266	1	True				
ANR	3000551	CallExpression	"ff_set_qscale ( s , s -> qscale + s -> dquant )"		3000266	0					
ANR	3000552	Callee	ff_set_qscale		3000266	0					
ANR	3000553	Identifier	ff_set_qscale		3000266	0					
ANR	3000554	ArgumentList	s		3000266	1					
ANR	3000555	Argument	s		3000266	0					
ANR	3000556	Identifier	s		3000266	0					
ANR	3000557	Argument	s -> qscale + s -> dquant		3000266	1					
ANR	3000558	AdditiveExpression	s -> qscale + s -> dquant		3000266	0		+			
ANR	3000559	PtrMemberAccess	s -> qscale		3000266	0					
ANR	3000560	Identifier	s		3000266	0					
ANR	3000561	Identifier	qscale		3000266	1					
ANR	3000562	PtrMemberAccess	s -> dquant		3000266	1					
ANR	3000563	Identifier	s		3000266	0					
ANR	3000564	Identifier	dquant		3000266	1					
ANR	3000565	ExpressionStatement	wrap_y = s -> linesize	101:4:1880:1900	3000266	14	True				
ANR	3000566	AssignmentExpression	wrap_y = s -> linesize		3000266	0		=			
ANR	3000567	Identifier	wrap_y		3000266	0					
ANR	3000568	PtrMemberAccess	s -> linesize		3000266	1					
ANR	3000569	Identifier	s		3000266	0					
ANR	3000570	Identifier	linesize		3000266	1					
ANR	3000571	ExpressionStatement	wrap_c = s -> uvlinesize	103:4:1907:1929	3000266	15	True				
ANR	3000572	AssignmentExpression	wrap_c = s -> uvlinesize		3000266	0		=			
ANR	3000573	Identifier	wrap_c		3000266	0					
ANR	3000574	PtrMemberAccess	s -> uvlinesize		3000266	1					
ANR	3000575	Identifier	s		3000266	0					
ANR	3000576	Identifier	uvlinesize		3000266	1					
ANR	3000577	ExpressionStatement	ptr_y = s -> new_picture . f . data [ 0 ] + ( mb_y * 16 * wrap_y ) + mb_x * 16	105:4:1936:2031	3000266	16	True				
ANR	3000578	AssignmentExpression	ptr_y = s -> new_picture . f . data [ 0 ] + ( mb_y * 16 * wrap_y ) + mb_x * 16		3000266	0		=			
ANR	3000579	Identifier	ptr_y		3000266	0					
ANR	3000580	AdditiveExpression	s -> new_picture . f . data [ 0 ] + ( mb_y * 16 * wrap_y ) + mb_x * 16		3000266	1		+			
ANR	3000581	ArrayIndexing	s -> new_picture . f . data [ 0 ]		3000266	0					
ANR	3000582	MemberAccess	s -> new_picture . f . data		3000266	0					
ANR	3000583	MemberAccess	s -> new_picture . f		3000266	0					
ANR	3000584	PtrMemberAccess	s -> new_picture		3000266	0					
ANR	3000585	Identifier	s		3000266	0					
ANR	3000586	Identifier	new_picture		3000266	1					
ANR	3000587	Identifier	f		3000266	1					
ANR	3000588	Identifier	data		3000266	1					
ANR	3000589	PrimaryExpression	0		3000266	1					
ANR	3000590	AdditiveExpression	( mb_y * 16 * wrap_y ) + mb_x * 16		3000266	1		+			
ANR	3000591	MultiplicativeExpression	mb_y * 16 * wrap_y		3000266	0		*			
ANR	3000592	Identifier	mb_y		3000266	0					
ANR	3000593	MultiplicativeExpression	16 * wrap_y		3000266	1		*			
ANR	3000594	PrimaryExpression	16		3000266	0					
ANR	3000595	Identifier	wrap_y		3000266	1					
ANR	3000596	MultiplicativeExpression	mb_x * 16		3000266	1		*			
ANR	3000597	Identifier	mb_x		3000266	0					
ANR	3000598	PrimaryExpression	16		3000266	1					
ANR	3000599	ExpressionStatement	ptr_cb = s -> new_picture . f . data [ 1 ] + ( mb_y * mb_block_height * wrap_c ) + mb_x * mb_block_width	109:4:2038:2145	3000266	17	True				
ANR	3000600	AssignmentExpression	ptr_cb = s -> new_picture . f . data [ 1 ] + ( mb_y * mb_block_height * wrap_c ) + mb_x * mb_block_width		3000266	0		=			
ANR	3000601	Identifier	ptr_cb		3000266	0					
ANR	3000602	AdditiveExpression	s -> new_picture . f . data [ 1 ] + ( mb_y * mb_block_height * wrap_c ) + mb_x * mb_block_width		3000266	1		+			
ANR	3000603	ArrayIndexing	s -> new_picture . f . data [ 1 ]		3000266	0					
ANR	3000604	MemberAccess	s -> new_picture . f . data		3000266	0					
ANR	3000605	MemberAccess	s -> new_picture . f		3000266	0					
ANR	3000606	PtrMemberAccess	s -> new_picture		3000266	0					
ANR	3000607	Identifier	s		3000266	0					
ANR	3000608	Identifier	new_picture		3000266	1					
ANR	3000609	Identifier	f		3000266	1					
ANR	3000610	Identifier	data		3000266	1					
ANR	3000611	PrimaryExpression	1		3000266	1					
ANR	3000612	AdditiveExpression	( mb_y * mb_block_height * wrap_c ) + mb_x * mb_block_width		3000266	1		+			
ANR	3000613	MultiplicativeExpression	mb_y * mb_block_height * wrap_c		3000266	0		*			
ANR	3000614	Identifier	mb_y		3000266	0					
ANR	3000615	MultiplicativeExpression	mb_block_height * wrap_c		3000266	1		*			
ANR	3000616	Identifier	mb_block_height		3000266	0					
ANR	3000617	Identifier	wrap_c		3000266	1					
ANR	3000618	MultiplicativeExpression	mb_x * mb_block_width		3000266	1		*			
ANR	3000619	Identifier	mb_x		3000266	0					
ANR	3000620	Identifier	mb_block_width		3000266	1					
ANR	3000621	ExpressionStatement	ptr_cr = s -> new_picture . f . data [ 2 ] + ( mb_y * mb_block_height * wrap_c ) + mb_x * mb_block_width	113:4:2152:2259	3000266	18	True				
ANR	3000622	AssignmentExpression	ptr_cr = s -> new_picture . f . data [ 2 ] + ( mb_y * mb_block_height * wrap_c ) + mb_x * mb_block_width		3000266	0		=			
ANR	3000623	Identifier	ptr_cr		3000266	0					
ANR	3000624	AdditiveExpression	s -> new_picture . f . data [ 2 ] + ( mb_y * mb_block_height * wrap_c ) + mb_x * mb_block_width		3000266	1		+			
ANR	3000625	ArrayIndexing	s -> new_picture . f . data [ 2 ]		3000266	0					
ANR	3000626	MemberAccess	s -> new_picture . f . data		3000266	0					
ANR	3000627	MemberAccess	s -> new_picture . f		3000266	0					
ANR	3000628	PtrMemberAccess	s -> new_picture		3000266	0					
ANR	3000629	Identifier	s		3000266	0					
ANR	3000630	Identifier	new_picture		3000266	1					
ANR	3000631	Identifier	f		3000266	1					
ANR	3000632	Identifier	data		3000266	1					
ANR	3000633	PrimaryExpression	2		3000266	1					
ANR	3000634	AdditiveExpression	( mb_y * mb_block_height * wrap_c ) + mb_x * mb_block_width		3000266	1		+			
ANR	3000635	MultiplicativeExpression	mb_y * mb_block_height * wrap_c		3000266	0		*			
ANR	3000636	Identifier	mb_y		3000266	0					
ANR	3000637	MultiplicativeExpression	mb_block_height * wrap_c		3000266	1		*			
ANR	3000638	Identifier	mb_block_height		3000266	0					
ANR	3000639	Identifier	wrap_c		3000266	1					
ANR	3000640	MultiplicativeExpression	mb_x * mb_block_width		3000266	1		*			
ANR	3000641	Identifier	mb_x		3000266	0					
ANR	3000642	Identifier	mb_block_width		3000266	1					
ANR	3000643	IfStatement	if ( ( mb_x * 16 + 16 > s -> width || mb_y * 16 + 16 > s -> height ) && s -> codec_id != AV_CODEC_ID_AMV )		3000266	19					
ANR	3000644	Condition	( mb_x * 16 + 16 > s -> width || mb_y * 16 + 16 > s -> height ) && s -> codec_id != AV_CODEC_ID_AMV	119:7:2271:2353	3000266	0	True				
ANR	3000645	AndExpression	( mb_x * 16 + 16 > s -> width || mb_y * 16 + 16 > s -> height ) && s -> codec_id != AV_CODEC_ID_AMV		3000266	0		&&			
ANR	3000646	OrExpression	mb_x * 16 + 16 > s -> width || mb_y * 16 + 16 > s -> height		3000266	0		||			
ANR	3000647	RelationalExpression	mb_x * 16 + 16 > s -> width		3000266	0		>			
ANR	3000648	AdditiveExpression	mb_x * 16 + 16		3000266	0		+			
ANR	3000649	MultiplicativeExpression	mb_x * 16		3000266	0		*			
ANR	3000650	Identifier	mb_x		3000266	0					
ANR	3000651	PrimaryExpression	16		3000266	1					
ANR	3000652	PrimaryExpression	16		3000266	1					
ANR	3000653	PtrMemberAccess	s -> width		3000266	1					
ANR	3000654	Identifier	s		3000266	0					
ANR	3000655	Identifier	width		3000266	1					
ANR	3000656	RelationalExpression	mb_y * 16 + 16 > s -> height		3000266	1		>			
ANR	3000657	AdditiveExpression	mb_y * 16 + 16		3000266	0		+			
ANR	3000658	MultiplicativeExpression	mb_y * 16		3000266	0		*			
ANR	3000659	Identifier	mb_y		3000266	0					
ANR	3000660	PrimaryExpression	16		3000266	1					
ANR	3000661	PrimaryExpression	16		3000266	1					
ANR	3000662	PtrMemberAccess	s -> height		3000266	1					
ANR	3000663	Identifier	s		3000266	0					
ANR	3000664	Identifier	height		3000266	1					
ANR	3000665	EqualityExpression	s -> codec_id != AV_CODEC_ID_AMV		3000266	1		!=			
ANR	3000666	PtrMemberAccess	s -> codec_id		3000266	0					
ANR	3000667	Identifier	s		3000266	0					
ANR	3000668	Identifier	codec_id		3000266	1					
ANR	3000669	Identifier	AV_CODEC_ID_AMV		3000266	1					
ANR	3000670	CompoundStatement		115:8:2134:2195	3000266	1					
ANR	3000671	IdentifierDeclStatement	uint8_t * ebuf = s -> edge_emu_buffer + 32 ;	121:8:2366:2405	3000266	0	True				
ANR	3000672	IdentifierDecl	* ebuf = s -> edge_emu_buffer + 32		3000266	0					
ANR	3000673	IdentifierDeclType	uint8_t *		3000266	0					
ANR	3000674	Identifier	ebuf		3000266	1					
ANR	3000675	AssignmentExpression	* ebuf = s -> edge_emu_buffer + 32		3000266	2		=			
ANR	3000676	Identifier	ebuf		3000266	0					
ANR	3000677	AdditiveExpression	s -> edge_emu_buffer + 32		3000266	1		+			
ANR	3000678	PtrMemberAccess	s -> edge_emu_buffer		3000266	0					
ANR	3000679	Identifier	s		3000266	0					
ANR	3000680	Identifier	edge_emu_buffer		3000266	1					
ANR	3000681	PrimaryExpression	32		3000266	1					
ANR	3000682	IdentifierDeclStatement	int cw = ( s -> width + s -> chroma_x_shift ) >> s -> chroma_x_shift ;	123:8:2416:2477	3000266	1	True				
ANR	3000683	IdentifierDecl	cw = ( s -> width + s -> chroma_x_shift ) >> s -> chroma_x_shift		3000266	0					
ANR	3000684	IdentifierDeclType	int		3000266	0					
ANR	3000685	Identifier	cw		3000266	1					
ANR	3000686	AssignmentExpression	cw = ( s -> width + s -> chroma_x_shift ) >> s -> chroma_x_shift		3000266	2		=			
ANR	3000687	Identifier	cw		3000266	0					
ANR	3000688	ShiftExpression	( s -> width + s -> chroma_x_shift ) >> s -> chroma_x_shift		3000266	1		>>			
ANR	3000689	AdditiveExpression	s -> width + s -> chroma_x_shift		3000266	0		+			
ANR	3000690	PtrMemberAccess	s -> width		3000266	0					
ANR	3000691	Identifier	s		3000266	0					
ANR	3000692	Identifier	width		3000266	1					
ANR	3000693	PtrMemberAccess	s -> chroma_x_shift		3000266	1					
ANR	3000694	Identifier	s		3000266	0					
ANR	3000695	Identifier	chroma_x_shift		3000266	1					
ANR	3000696	PtrMemberAccess	s -> chroma_x_shift		3000266	1					
ANR	3000697	Identifier	s		3000266	0					
ANR	3000698	Identifier	chroma_x_shift		3000266	1					
ANR	3000699	IdentifierDeclStatement	int ch = ( s -> height + s -> chroma_y_shift ) >> s -> chroma_y_shift ;	125:8:2488:2549	3000266	2	True				
ANR	3000700	IdentifierDecl	ch = ( s -> height + s -> chroma_y_shift ) >> s -> chroma_y_shift		3000266	0					
ANR	3000701	IdentifierDeclType	int		3000266	0					
ANR	3000702	Identifier	ch		3000266	1					
ANR	3000703	AssignmentExpression	ch = ( s -> height + s -> chroma_y_shift ) >> s -> chroma_y_shift		3000266	2		=			
ANR	3000704	Identifier	ch		3000266	0					
ANR	3000705	ShiftExpression	( s -> height + s -> chroma_y_shift ) >> s -> chroma_y_shift		3000266	1		>>			
ANR	3000706	AdditiveExpression	s -> height + s -> chroma_y_shift		3000266	0		+			
ANR	3000707	PtrMemberAccess	s -> height		3000266	0					
ANR	3000708	Identifier	s		3000266	0					
ANR	3000709	Identifier	height		3000266	1					
ANR	3000710	PtrMemberAccess	s -> chroma_y_shift		3000266	1					
ANR	3000711	Identifier	s		3000266	0					
ANR	3000712	Identifier	chroma_y_shift		3000266	1					
ANR	3000713	PtrMemberAccess	s -> chroma_y_shift		3000266	1					
ANR	3000714	Identifier	s		3000266	0					
ANR	3000715	Identifier	chroma_y_shift		3000266	1					
ANR	3000716	ExpressionStatement	"s -> vdsp . emulated_edge_mc ( ebuf , ptr_y , wrap_y , 16 , 16 , mb_x * 16 , mb_y * 16 , s -> width , s -> height )"	127:8:2560:2690	3000266	3	True				
ANR	3000717	CallExpression	"s -> vdsp . emulated_edge_mc ( ebuf , ptr_y , wrap_y , 16 , 16 , mb_x * 16 , mb_y * 16 , s -> width , s -> height )"		3000266	0					
ANR	3000718	Callee	s -> vdsp . emulated_edge_mc		3000266	0					
ANR	3000719	MemberAccess	s -> vdsp . emulated_edge_mc		3000266	0					
ANR	3000720	PtrMemberAccess	s -> vdsp		3000266	0					
ANR	3000721	Identifier	s		3000266	0					
ANR	3000722	Identifier	vdsp		3000266	1					
ANR	3000723	Identifier	emulated_edge_mc		3000266	1					
ANR	3000724	ArgumentList	ebuf		3000266	1					
ANR	3000725	Argument	ebuf		3000266	0					
ANR	3000726	Identifier	ebuf		3000266	0					
ANR	3000727	Argument	ptr_y		3000266	1					
ANR	3000728	Identifier	ptr_y		3000266	0					
ANR	3000729	Argument	wrap_y		3000266	2					
ANR	3000730	Identifier	wrap_y		3000266	0					
ANR	3000731	Argument	16		3000266	3					
ANR	3000732	PrimaryExpression	16		3000266	0					
ANR	3000733	Argument	16		3000266	4					
ANR	3000734	PrimaryExpression	16		3000266	0					
ANR	3000735	Argument	mb_x * 16		3000266	5					
ANR	3000736	MultiplicativeExpression	mb_x * 16		3000266	0		*			
ANR	3000737	Identifier	mb_x		3000266	0					
ANR	3000738	PrimaryExpression	16		3000266	1					
ANR	3000739	Argument	mb_y * 16		3000266	6					
ANR	3000740	MultiplicativeExpression	mb_y * 16		3000266	0		*			
ANR	3000741	Identifier	mb_y		3000266	0					
ANR	3000742	PrimaryExpression	16		3000266	1					
ANR	3000743	Argument	s -> width		3000266	7					
ANR	3000744	PtrMemberAccess	s -> width		3000266	0					
ANR	3000745	Identifier	s		3000266	0					
ANR	3000746	Identifier	width		3000266	1					
ANR	3000747	Argument	s -> height		3000266	8					
ANR	3000748	PtrMemberAccess	s -> height		3000266	0					
ANR	3000749	Identifier	s		3000266	0					
ANR	3000750	Identifier	height		3000266	1					
ANR	3000751	ExpressionStatement	ptr_y = ebuf	131:8:2701:2713	3000266	4	True				
ANR	3000752	AssignmentExpression	ptr_y = ebuf		3000266	0		=			
ANR	3000753	Identifier	ptr_y		3000266	0					
ANR	3000754	Identifier	ebuf		3000266	1					
ANR	3000755	ExpressionStatement	"s -> vdsp . emulated_edge_mc ( ebuf + 18 * wrap_y , ptr_cb , wrap_c , mb_block_width , mb_block_height , mb_x * mb_block_width , mb_y * mb_block_height , cw , ch )"	133:8:2724:2940	3000266	5	True				
ANR	3000756	CallExpression	"s -> vdsp . emulated_edge_mc ( ebuf + 18 * wrap_y , ptr_cb , wrap_c , mb_block_width , mb_block_height , mb_x * mb_block_width , mb_y * mb_block_height , cw , ch )"		3000266	0					
ANR	3000757	Callee	s -> vdsp . emulated_edge_mc		3000266	0					
ANR	3000758	MemberAccess	s -> vdsp . emulated_edge_mc		3000266	0					
ANR	3000759	PtrMemberAccess	s -> vdsp		3000266	0					
ANR	3000760	Identifier	s		3000266	0					
ANR	3000761	Identifier	vdsp		3000266	1					
ANR	3000762	Identifier	emulated_edge_mc		3000266	1					
ANR	3000763	ArgumentList	ebuf + 18 * wrap_y		3000266	1					
ANR	3000764	Argument	ebuf + 18 * wrap_y		3000266	0					
ANR	3000765	AdditiveExpression	ebuf + 18 * wrap_y		3000266	0		+			
ANR	3000766	Identifier	ebuf		3000266	0					
ANR	3000767	MultiplicativeExpression	18 * wrap_y		3000266	1		*			
ANR	3000768	PrimaryExpression	18		3000266	0					
ANR	3000769	Identifier	wrap_y		3000266	1					
ANR	3000770	Argument	ptr_cb		3000266	1					
ANR	3000771	Identifier	ptr_cb		3000266	0					
ANR	3000772	Argument	wrap_c		3000266	2					
ANR	3000773	Identifier	wrap_c		3000266	0					
ANR	3000774	Argument	mb_block_width		3000266	3					
ANR	3000775	Identifier	mb_block_width		3000266	0					
ANR	3000776	Argument	mb_block_height		3000266	4					
ANR	3000777	Identifier	mb_block_height		3000266	0					
ANR	3000778	Argument	mb_x * mb_block_width		3000266	5					
ANR	3000779	MultiplicativeExpression	mb_x * mb_block_width		3000266	0		*			
ANR	3000780	Identifier	mb_x		3000266	0					
ANR	3000781	Identifier	mb_block_width		3000266	1					
ANR	3000782	Argument	mb_y * mb_block_height		3000266	6					
ANR	3000783	MultiplicativeExpression	mb_y * mb_block_height		3000266	0		*			
ANR	3000784	Identifier	mb_y		3000266	0					
ANR	3000785	Identifier	mb_block_height		3000266	1					
ANR	3000786	Argument	cw		3000266	7					
ANR	3000787	Identifier	cw		3000266	0					
ANR	3000788	Argument	ch		3000266	8					
ANR	3000789	Identifier	ch		3000266	0					
ANR	3000790	ExpressionStatement	ptr_cb = ebuf + 18 * wrap_y	139:8:2951:2978	3000266	6	True				
ANR	3000791	AssignmentExpression	ptr_cb = ebuf + 18 * wrap_y		3000266	0		=			
ANR	3000792	Identifier	ptr_cb		3000266	0					
ANR	3000793	AdditiveExpression	ebuf + 18 * wrap_y		3000266	1		+			
ANR	3000794	Identifier	ebuf		3000266	0					
ANR	3000795	MultiplicativeExpression	18 * wrap_y		3000266	1		*			
ANR	3000796	PrimaryExpression	18		3000266	0					
ANR	3000797	Identifier	wrap_y		3000266	1					
ANR	3000798	ExpressionStatement	"s -> vdsp . emulated_edge_mc ( ebuf + 18 * wrap_y + 16 , ptr_cr , wrap_c , mb_block_width , mb_block_height , mb_x * mb_block_width , mb_y * mb_block_height , cw , ch )"	141:8:2989:3210	3000266	7	True				
ANR	3000799	CallExpression	"s -> vdsp . emulated_edge_mc ( ebuf + 18 * wrap_y + 16 , ptr_cr , wrap_c , mb_block_width , mb_block_height , mb_x * mb_block_width , mb_y * mb_block_height , cw , ch )"		3000266	0					
ANR	3000800	Callee	s -> vdsp . emulated_edge_mc		3000266	0					
ANR	3000801	MemberAccess	s -> vdsp . emulated_edge_mc		3000266	0					
ANR	3000802	PtrMemberAccess	s -> vdsp		3000266	0					
ANR	3000803	Identifier	s		3000266	0					
ANR	3000804	Identifier	vdsp		3000266	1					
ANR	3000805	Identifier	emulated_edge_mc		3000266	1					
ANR	3000806	ArgumentList	ebuf + 18 * wrap_y + 16		3000266	1					
ANR	3000807	Argument	ebuf + 18 * wrap_y + 16		3000266	0					
ANR	3000808	AdditiveExpression	ebuf + 18 * wrap_y + 16		3000266	0		+			
ANR	3000809	Identifier	ebuf		3000266	0					
ANR	3000810	AdditiveExpression	18 * wrap_y + 16		3000266	1		+			
ANR	3000811	MultiplicativeExpression	18 * wrap_y		3000266	0		*			
ANR	3000812	PrimaryExpression	18		3000266	0					
ANR	3000813	Identifier	wrap_y		3000266	1					
ANR	3000814	PrimaryExpression	16		3000266	1					
ANR	3000815	Argument	ptr_cr		3000266	1					
ANR	3000816	Identifier	ptr_cr		3000266	0					
ANR	3000817	Argument	wrap_c		3000266	2					
ANR	3000818	Identifier	wrap_c		3000266	0					
ANR	3000819	Argument	mb_block_width		3000266	3					
ANR	3000820	Identifier	mb_block_width		3000266	0					
ANR	3000821	Argument	mb_block_height		3000266	4					
ANR	3000822	Identifier	mb_block_height		3000266	0					
ANR	3000823	Argument	mb_x * mb_block_width		3000266	5					
ANR	3000824	MultiplicativeExpression	mb_x * mb_block_width		3000266	0		*			
ANR	3000825	Identifier	mb_x		3000266	0					
ANR	3000826	Identifier	mb_block_width		3000266	1					
ANR	3000827	Argument	mb_y * mb_block_height		3000266	6					
ANR	3000828	MultiplicativeExpression	mb_y * mb_block_height		3000266	0		*			
ANR	3000829	Identifier	mb_y		3000266	0					
ANR	3000830	Identifier	mb_block_height		3000266	1					
ANR	3000831	Argument	cw		3000266	7					
ANR	3000832	Identifier	cw		3000266	0					
ANR	3000833	Argument	ch		3000266	8					
ANR	3000834	Identifier	ch		3000266	0					
ANR	3000835	ExpressionStatement	ptr_cr = ebuf + 18 * wrap_y + 16	147:8:3221:3253	3000266	8	True				
ANR	3000836	AssignmentExpression	ptr_cr = ebuf + 18 * wrap_y + 16		3000266	0		=			
ANR	3000837	Identifier	ptr_cr		3000266	0					
ANR	3000838	AdditiveExpression	ebuf + 18 * wrap_y + 16		3000266	1		+			
ANR	3000839	Identifier	ebuf		3000266	0					
ANR	3000840	AdditiveExpression	18 * wrap_y + 16		3000266	1		+			
ANR	3000841	MultiplicativeExpression	18 * wrap_y		3000266	0		*			
ANR	3000842	PrimaryExpression	18		3000266	0					
ANR	3000843	Identifier	wrap_y		3000266	1					
ANR	3000844	PrimaryExpression	16		3000266	1					
ANR	3000845	IfStatement	if ( s -> mb_intra )		3000266	20					
ANR	3000846	Condition	s -> mb_intra	153:8:3273:3283	3000266	0	True				
ANR	3000847	PtrMemberAccess	s -> mb_intra		3000266	0					
ANR	3000848	Identifier	s		3000266	0					
ANR	3000849	Identifier	mb_intra		3000266	1					
ANR	3000850	CompoundStatement		143:21:2932:2932	3000266	1					
ANR	3000851	IfStatement	if ( s -> flags & CODEC_FLAG_INTERLACED_DCT )		3000266	0					
ANR	3000852	Condition	s -> flags & CODEC_FLAG_INTERLACED_DCT	155:12:3301:3336	3000266	0	True				
ANR	3000853	BitAndExpression	s -> flags & CODEC_FLAG_INTERLACED_DCT		3000266	0		&			
ANR	3000854	PtrMemberAccess	s -> flags		3000266	0					
ANR	3000855	Identifier	s		3000266	0					
ANR	3000856	Identifier	flags		3000266	1					
ANR	3000857	Identifier	CODEC_FLAG_INTERLACED_DCT		3000266	1					
ANR	3000858	CompoundStatement		147:12:3000:3039	3000266	1					
ANR	3000859	IdentifierDeclStatement	"int progressive_score , interlaced_score ;"	157:12:3354:3393	3000266	0	True				
ANR	3000860	IdentifierDecl	progressive_score		3000266	0					
ANR	3000861	IdentifierDeclType	int		3000266	0					
ANR	3000862	Identifier	progressive_score		3000266	1					
ANR	3000863	IdentifierDecl	interlaced_score		3000266	1					
ANR	3000864	IdentifierDeclType	int		3000266	0					
ANR	3000865	Identifier	interlaced_score		3000266	1					
ANR	3000866	ExpressionStatement	s -> interlaced_dct = 0	161:12:3410:3431	3000266	1	True				
ANR	3000867	AssignmentExpression	s -> interlaced_dct = 0		3000266	0		=			
ANR	3000868	PtrMemberAccess	s -> interlaced_dct		3000266	0					
ANR	3000869	Identifier	s		3000266	0					
ANR	3000870	Identifier	interlaced_dct		3000266	1					
ANR	3000871	PrimaryExpression	0		3000266	1					
ANR	3000872	ExpressionStatement	"progressive_score = s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y , NULL , wrap_y , 8 ) + s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y + wrap_y * 8 , NULL , wrap_y , 8 ) - 400"	163:12:3446:3719	3000266	2	True				
ANR	3000873	AssignmentExpression	"progressive_score = s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y , NULL , wrap_y , 8 ) + s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y + wrap_y * 8 , NULL , wrap_y , 8 ) - 400"		3000266	0		=			
ANR	3000874	Identifier	progressive_score		3000266	0					
ANR	3000875	AdditiveExpression	"s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y , NULL , wrap_y , 8 ) + s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y + wrap_y * 8 , NULL , wrap_y , 8 ) - 400"		3000266	1		+			
ANR	3000876	CallExpression	"s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y , NULL , wrap_y , 8 )"		3000266	0					
ANR	3000877	Callee	s -> dsp . ildct_cmp [ 4 ]		3000266	0					
ANR	3000878	ArrayIndexing	s -> dsp . ildct_cmp [ 4 ]		3000266	0					
ANR	3000879	MemberAccess	s -> dsp . ildct_cmp		3000266	0					
ANR	3000880	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3000881	Identifier	s		3000266	0					
ANR	3000882	Identifier	dsp		3000266	1					
ANR	3000883	Identifier	ildct_cmp		3000266	1					
ANR	3000884	PrimaryExpression	4		3000266	1					
ANR	3000885	ArgumentList	s		3000266	1					
ANR	3000886	Argument	s		3000266	0					
ANR	3000887	Identifier	s		3000266	0					
ANR	3000888	Argument	ptr_y		3000266	1					
ANR	3000889	Identifier	ptr_y		3000266	0					
ANR	3000890	Argument	NULL		3000266	2					
ANR	3000891	Identifier	NULL		3000266	0					
ANR	3000892	Argument	wrap_y		3000266	3					
ANR	3000893	Identifier	wrap_y		3000266	0					
ANR	3000894	Argument	8		3000266	4					
ANR	3000895	PrimaryExpression	8		3000266	0					
ANR	3000896	AdditiveExpression	"s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y + wrap_y * 8 , NULL , wrap_y , 8 ) - 400"		3000266	1		-			
ANR	3000897	CallExpression	"s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y + wrap_y * 8 , NULL , wrap_y , 8 )"		3000266	0					
ANR	3000898	Callee	s -> dsp . ildct_cmp [ 4 ]		3000266	0					
ANR	3000899	ArrayIndexing	s -> dsp . ildct_cmp [ 4 ]		3000266	0					
ANR	3000900	MemberAccess	s -> dsp . ildct_cmp		3000266	0					
ANR	3000901	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3000902	Identifier	s		3000266	0					
ANR	3000903	Identifier	dsp		3000266	1					
ANR	3000904	Identifier	ildct_cmp		3000266	1					
ANR	3000905	PrimaryExpression	4		3000266	1					
ANR	3000906	ArgumentList	s		3000266	1					
ANR	3000907	Argument	s		3000266	0					
ANR	3000908	Identifier	s		3000266	0					
ANR	3000909	Argument	ptr_y + wrap_y * 8		3000266	1					
ANR	3000910	AdditiveExpression	ptr_y + wrap_y * 8		3000266	0		+			
ANR	3000911	Identifier	ptr_y		3000266	0					
ANR	3000912	MultiplicativeExpression	wrap_y * 8		3000266	1		*			
ANR	3000913	Identifier	wrap_y		3000266	0					
ANR	3000914	PrimaryExpression	8		3000266	1					
ANR	3000915	Argument	NULL		3000266	2					
ANR	3000916	Identifier	NULL		3000266	0					
ANR	3000917	Argument	wrap_y		3000266	3					
ANR	3000918	Identifier	wrap_y		3000266	0					
ANR	3000919	Argument	8		3000266	4					
ANR	3000920	PrimaryExpression	8		3000266	0					
ANR	3000921	PrimaryExpression	400		3000266	1					
ANR	3000922	IfStatement	if ( progressive_score > 0 )		3000266	3					
ANR	3000923	Condition	progressive_score > 0	173:16:3740:3760	3000266	0	True				
ANR	3000924	RelationalExpression	progressive_score > 0		3000266	0		>			
ANR	3000925	Identifier	progressive_score		3000266	0					
ANR	3000926	PrimaryExpression	0		3000266	1					
ANR	3000927	CompoundStatement		163:39:3409:3409	3000266	1					
ANR	3000928	ExpressionStatement	"interlaced_score = s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y , NULL , wrap_y * 2 , 8 ) + s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y + wrap_y , NULL , wrap_y * 2 , 8 )"	175:16:3782:4061	3000266	0	True				
ANR	3000929	AssignmentExpression	"interlaced_score = s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y , NULL , wrap_y * 2 , 8 ) + s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y + wrap_y , NULL , wrap_y * 2 , 8 )"		3000266	0		=			
ANR	3000930	Identifier	interlaced_score		3000266	0					
ANR	3000931	AdditiveExpression	"s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y , NULL , wrap_y * 2 , 8 ) + s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y + wrap_y , NULL , wrap_y * 2 , 8 )"		3000266	1		+			
ANR	3000932	CallExpression	"s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y , NULL , wrap_y * 2 , 8 )"		3000266	0					
ANR	3000933	Callee	s -> dsp . ildct_cmp [ 4 ]		3000266	0					
ANR	3000934	ArrayIndexing	s -> dsp . ildct_cmp [ 4 ]		3000266	0					
ANR	3000935	MemberAccess	s -> dsp . ildct_cmp		3000266	0					
ANR	3000936	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3000937	Identifier	s		3000266	0					
ANR	3000938	Identifier	dsp		3000266	1					
ANR	3000939	Identifier	ildct_cmp		3000266	1					
ANR	3000940	PrimaryExpression	4		3000266	1					
ANR	3000941	ArgumentList	s		3000266	1					
ANR	3000942	Argument	s		3000266	0					
ANR	3000943	Identifier	s		3000266	0					
ANR	3000944	Argument	ptr_y		3000266	1					
ANR	3000945	Identifier	ptr_y		3000266	0					
ANR	3000946	Argument	NULL		3000266	2					
ANR	3000947	Identifier	NULL		3000266	0					
ANR	3000948	Argument	wrap_y * 2		3000266	3					
ANR	3000949	MultiplicativeExpression	wrap_y * 2		3000266	0		*			
ANR	3000950	Identifier	wrap_y		3000266	0					
ANR	3000951	PrimaryExpression	2		3000266	1					
ANR	3000952	Argument	8		3000266	4					
ANR	3000953	PrimaryExpression	8		3000266	0					
ANR	3000954	CallExpression	"s -> dsp . ildct_cmp [ 4 ] ( s , ptr_y + wrap_y , NULL , wrap_y * 2 , 8 )"		3000266	1					
ANR	3000955	Callee	s -> dsp . ildct_cmp [ 4 ]		3000266	0					
ANR	3000956	ArrayIndexing	s -> dsp . ildct_cmp [ 4 ]		3000266	0					
ANR	3000957	MemberAccess	s -> dsp . ildct_cmp		3000266	0					
ANR	3000958	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3000959	Identifier	s		3000266	0					
ANR	3000960	Identifier	dsp		3000266	1					
ANR	3000961	Identifier	ildct_cmp		3000266	1					
ANR	3000962	PrimaryExpression	4		3000266	1					
ANR	3000963	ArgumentList	s		3000266	1					
ANR	3000964	Argument	s		3000266	0					
ANR	3000965	Identifier	s		3000266	0					
ANR	3000966	Argument	ptr_y + wrap_y		3000266	1					
ANR	3000967	AdditiveExpression	ptr_y + wrap_y		3000266	0		+			
ANR	3000968	Identifier	ptr_y		3000266	0					
ANR	3000969	Identifier	wrap_y		3000266	1					
ANR	3000970	Argument	NULL		3000266	2					
ANR	3000971	Identifier	NULL		3000266	0					
ANR	3000972	Argument	wrap_y * 2		3000266	3					
ANR	3000973	MultiplicativeExpression	wrap_y * 2		3000266	0		*			
ANR	3000974	Identifier	wrap_y		3000266	0					
ANR	3000975	PrimaryExpression	2		3000266	1					
ANR	3000976	Argument	8		3000266	4					
ANR	3000977	PrimaryExpression	8		3000266	0					
ANR	3000978	IfStatement	if ( progressive_score > interlaced_score )		3000266	1					
ANR	3000979	Condition	progressive_score > interlaced_score	183:20:4084:4119	3000266	0	True				
ANR	3000980	RelationalExpression	progressive_score > interlaced_score		3000266	0		>			
ANR	3000981	Identifier	progressive_score		3000266	0					
ANR	3000982	Identifier	interlaced_score		3000266	1					
ANR	3000983	CompoundStatement		173:58:3768:3768	3000266	1					
ANR	3000984	ExpressionStatement	s -> interlaced_dct = 1	185:20:4145:4166	3000266	0	True				
ANR	3000985	AssignmentExpression	s -> interlaced_dct = 1		3000266	0		=			
ANR	3000986	PtrMemberAccess	s -> interlaced_dct		3000266	0					
ANR	3000987	Identifier	s		3000266	0					
ANR	3000988	Identifier	interlaced_dct		3000266	1					
ANR	3000989	PrimaryExpression	1		3000266	1					
ANR	3000990	ExpressionStatement	dct_offset = wrap_y	189:20:4191:4210	3000266	1	True				
ANR	3000991	AssignmentExpression	dct_offset = wrap_y		3000266	0		=			
ANR	3000992	Identifier	dct_offset		3000266	0					
ANR	3000993	Identifier	wrap_y		3000266	1					
ANR	3000994	ExpressionStatement	uv_dct_offset = wrap_c	191:20:4233:4255	3000266	2	True				
ANR	3000995	AssignmentExpression	uv_dct_offset = wrap_c		3000266	0		=			
ANR	3000996	Identifier	uv_dct_offset		3000266	0					
ANR	3000997	Identifier	wrap_c		3000266	1					
ANR	3000998	ExpressionStatement	wrap_y <<= 1	193:20:4278:4290	3000266	3	True				
ANR	3000999	AssignmentExpression	wrap_y <<= 1		3000266	0		<<=			
ANR	3001000	Identifier	wrap_y		3000266	0					
ANR	3001001	PrimaryExpression	1		3000266	1					
ANR	3001002	IfStatement	if ( s -> chroma_format == CHROMA_422 || s -> chroma_format == CHROMA_444 )		3000266	4					
ANR	3001003	Condition	s -> chroma_format == CHROMA_422 || s -> chroma_format == CHROMA_444	195:24:4317:4405	3000266	0	True				
ANR	3001004	OrExpression	s -> chroma_format == CHROMA_422 || s -> chroma_format == CHROMA_444		3000266	0		||			
ANR	3001005	EqualityExpression	s -> chroma_format == CHROMA_422		3000266	0		==			
ANR	3001006	PtrMemberAccess	s -> chroma_format		3000266	0					
ANR	3001007	Identifier	s		3000266	0					
ANR	3001008	Identifier	chroma_format		3000266	1					
ANR	3001009	Identifier	CHROMA_422		3000266	1					
ANR	3001010	EqualityExpression	s -> chroma_format == CHROMA_444		3000266	1		==			
ANR	3001011	PtrMemberAccess	s -> chroma_format		3000266	0					
ANR	3001012	Identifier	s		3000266	0					
ANR	3001013	Identifier	chroma_format		3000266	1					
ANR	3001014	Identifier	CHROMA_444		3000266	1					
ANR	3001015	ExpressionStatement	wrap_c <<= 1	199:24:4433:4445	3000266	1	True				
ANR	3001016	AssignmentExpression	wrap_c <<= 1		3000266	0		<<=			
ANR	3001017	Identifier	wrap_c		3000266	0					
ANR	3001018	PrimaryExpression	1		3000266	1					
ANR	3001019	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 0 ] , ptr_y , wrap_y )"	209:8:4503:4566	3000266	1	True				
ANR	3001020	CallExpression	"s -> dsp . get_pixels ( s -> block [ 0 ] , ptr_y , wrap_y )"		3000266	0					
ANR	3001021	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001022	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001023	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001024	Identifier	s		3000266	0					
ANR	3001025	Identifier	dsp		3000266	1					
ANR	3001026	Identifier	get_pixels		3000266	1					
ANR	3001027	ArgumentList	s -> block [ 0 ]		3000266	1					
ANR	3001028	Argument	s -> block [ 0 ]		3000266	0					
ANR	3001029	ArrayIndexing	s -> block [ 0 ]		3000266	0					
ANR	3001030	PtrMemberAccess	s -> block		3000266	0					
ANR	3001031	Identifier	s		3000266	0					
ANR	3001032	Identifier	block		3000266	1					
ANR	3001033	PrimaryExpression	0		3000266	1					
ANR	3001034	Argument	ptr_y		3000266	1					
ANR	3001035	Identifier	ptr_y		3000266	0					
ANR	3001036	Argument	wrap_y		3000266	2					
ANR	3001037	Identifier	wrap_y		3000266	0					
ANR	3001038	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 1 ] , ptr_y + 8 , wrap_y )"	211:8:4577:4640	3000266	2	True				
ANR	3001039	CallExpression	"s -> dsp . get_pixels ( s -> block [ 1 ] , ptr_y + 8 , wrap_y )"		3000266	0					
ANR	3001040	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001041	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001042	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001043	Identifier	s		3000266	0					
ANR	3001044	Identifier	dsp		3000266	1					
ANR	3001045	Identifier	get_pixels		3000266	1					
ANR	3001046	ArgumentList	s -> block [ 1 ]		3000266	1					
ANR	3001047	Argument	s -> block [ 1 ]		3000266	0					
ANR	3001048	ArrayIndexing	s -> block [ 1 ]		3000266	0					
ANR	3001049	PtrMemberAccess	s -> block		3000266	0					
ANR	3001050	Identifier	s		3000266	0					
ANR	3001051	Identifier	block		3000266	1					
ANR	3001052	PrimaryExpression	1		3000266	1					
ANR	3001053	Argument	ptr_y + 8		3000266	1					
ANR	3001054	AdditiveExpression	ptr_y + 8		3000266	0		+			
ANR	3001055	Identifier	ptr_y		3000266	0					
ANR	3001056	PrimaryExpression	8		3000266	1					
ANR	3001057	Argument	wrap_y		3000266	2					
ANR	3001058	Identifier	wrap_y		3000266	0					
ANR	3001059	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 2 ] , ptr_y + dct_offset , wrap_y )"	213:8:4651:4714	3000266	3	True				
ANR	3001060	CallExpression	"s -> dsp . get_pixels ( s -> block [ 2 ] , ptr_y + dct_offset , wrap_y )"		3000266	0					
ANR	3001061	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001062	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001063	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001064	Identifier	s		3000266	0					
ANR	3001065	Identifier	dsp		3000266	1					
ANR	3001066	Identifier	get_pixels		3000266	1					
ANR	3001067	ArgumentList	s -> block [ 2 ]		3000266	1					
ANR	3001068	Argument	s -> block [ 2 ]		3000266	0					
ANR	3001069	ArrayIndexing	s -> block [ 2 ]		3000266	0					
ANR	3001070	PtrMemberAccess	s -> block		3000266	0					
ANR	3001071	Identifier	s		3000266	0					
ANR	3001072	Identifier	block		3000266	1					
ANR	3001073	PrimaryExpression	2		3000266	1					
ANR	3001074	Argument	ptr_y + dct_offset		3000266	1					
ANR	3001075	AdditiveExpression	ptr_y + dct_offset		3000266	0		+			
ANR	3001076	Identifier	ptr_y		3000266	0					
ANR	3001077	Identifier	dct_offset		3000266	1					
ANR	3001078	Argument	wrap_y		3000266	2					
ANR	3001079	Identifier	wrap_y		3000266	0					
ANR	3001080	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 3 ] , ptr_y + dct_offset + 8 , wrap_y )"	215:8:4725:4788	3000266	4	True				
ANR	3001081	CallExpression	"s -> dsp . get_pixels ( s -> block [ 3 ] , ptr_y + dct_offset + 8 , wrap_y )"		3000266	0					
ANR	3001082	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001083	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001084	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001085	Identifier	s		3000266	0					
ANR	3001086	Identifier	dsp		3000266	1					
ANR	3001087	Identifier	get_pixels		3000266	1					
ANR	3001088	ArgumentList	s -> block [ 3 ]		3000266	1					
ANR	3001089	Argument	s -> block [ 3 ]		3000266	0					
ANR	3001090	ArrayIndexing	s -> block [ 3 ]		3000266	0					
ANR	3001091	PtrMemberAccess	s -> block		3000266	0					
ANR	3001092	Identifier	s		3000266	0					
ANR	3001093	Identifier	block		3000266	1					
ANR	3001094	PrimaryExpression	3		3000266	1					
ANR	3001095	Argument	ptr_y + dct_offset + 8		3000266	1					
ANR	3001096	AdditiveExpression	ptr_y + dct_offset + 8		3000266	0		+			
ANR	3001097	Identifier	ptr_y		3000266	0					
ANR	3001098	AdditiveExpression	dct_offset + 8		3000266	1		+			
ANR	3001099	Identifier	dct_offset		3000266	0					
ANR	3001100	PrimaryExpression	8		3000266	1					
ANR	3001101	Argument	wrap_y		3000266	2					
ANR	3001102	Identifier	wrap_y		3000266	0					
ANR	3001103	IfStatement	if ( s -> flags & CODEC_FLAG_GRAY )		3000266	5					
ANR	3001104	Condition	s -> flags & CODEC_FLAG_GRAY	219:12:4805:4830	3000266	0	True				
ANR	3001105	BitAndExpression	s -> flags & CODEC_FLAG_GRAY		3000266	0		&			
ANR	3001106	PtrMemberAccess	s -> flags		3000266	0					
ANR	3001107	Identifier	s		3000266	0					
ANR	3001108	Identifier	flags		3000266	1					
ANR	3001109	Identifier	CODEC_FLAG_GRAY		3000266	1					
ANR	3001110	CompoundStatement		209:40:4479:4479	3000266	1					
ANR	3001111	ExpressionStatement	skip_dct [ 4 ] = 1	221:12:4848:4863	3000266	0	True				
ANR	3001112	AssignmentExpression	skip_dct [ 4 ] = 1		3000266	0		=			
ANR	3001113	ArrayIndexing	skip_dct [ 4 ]		3000266	0					
ANR	3001114	Identifier	skip_dct		3000266	0					
ANR	3001115	PrimaryExpression	4		3000266	1					
ANR	3001116	PrimaryExpression	1		3000266	1					
ANR	3001117	ExpressionStatement	skip_dct [ 5 ] = 1	223:12:4878:4893	3000266	1	True				
ANR	3001118	AssignmentExpression	skip_dct [ 5 ] = 1		3000266	0		=			
ANR	3001119	ArrayIndexing	skip_dct [ 5 ]		3000266	0					
ANR	3001120	Identifier	skip_dct		3000266	0					
ANR	3001121	PrimaryExpression	5		3000266	1					
ANR	3001122	PrimaryExpression	1		3000266	1					
ANR	3001123	ElseStatement	else		3000266	0					
ANR	3001124	CompoundStatement		215:15:4557:4557	3000266	0					
ANR	3001125	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 4 ] , ptr_cb , wrap_c )"	227:12:4926:4972	3000266	0	True				
ANR	3001126	CallExpression	"s -> dsp . get_pixels ( s -> block [ 4 ] , ptr_cb , wrap_c )"		3000266	0					
ANR	3001127	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001128	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001129	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001130	Identifier	s		3000266	0					
ANR	3001131	Identifier	dsp		3000266	1					
ANR	3001132	Identifier	get_pixels		3000266	1					
ANR	3001133	ArgumentList	s -> block [ 4 ]		3000266	1					
ANR	3001134	Argument	s -> block [ 4 ]		3000266	0					
ANR	3001135	ArrayIndexing	s -> block [ 4 ]		3000266	0					
ANR	3001136	PtrMemberAccess	s -> block		3000266	0					
ANR	3001137	Identifier	s		3000266	0					
ANR	3001138	Identifier	block		3000266	1					
ANR	3001139	PrimaryExpression	4		3000266	1					
ANR	3001140	Argument	ptr_cb		3000266	1					
ANR	3001141	Identifier	ptr_cb		3000266	0					
ANR	3001142	Argument	wrap_c		3000266	2					
ANR	3001143	Identifier	wrap_c		3000266	0					
ANR	3001144	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 5 ] , ptr_cr , wrap_c )"	229:12:4987:5033	3000266	1	True				
ANR	3001145	CallExpression	"s -> dsp . get_pixels ( s -> block [ 5 ] , ptr_cr , wrap_c )"		3000266	0					
ANR	3001146	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001147	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001148	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001149	Identifier	s		3000266	0					
ANR	3001150	Identifier	dsp		3000266	1					
ANR	3001151	Identifier	get_pixels		3000266	1					
ANR	3001152	ArgumentList	s -> block [ 5 ]		3000266	1					
ANR	3001153	Argument	s -> block [ 5 ]		3000266	0					
ANR	3001154	ArrayIndexing	s -> block [ 5 ]		3000266	0					
ANR	3001155	PtrMemberAccess	s -> block		3000266	0					
ANR	3001156	Identifier	s		3000266	0					
ANR	3001157	Identifier	block		3000266	1					
ANR	3001158	PrimaryExpression	5		3000266	1					
ANR	3001159	Argument	ptr_cr		3000266	1					
ANR	3001160	Identifier	ptr_cr		3000266	0					
ANR	3001161	Argument	wrap_c		3000266	2					
ANR	3001162	Identifier	wrap_c		3000266	0					
ANR	3001163	IfStatement	if ( ! s -> chroma_y_shift && s -> chroma_x_shift )		3000266	2					
ANR	3001164	Condition	! s -> chroma_y_shift && s -> chroma_x_shift	231:16:5052:5090	3000266	0	True				
ANR	3001165	AndExpression	! s -> chroma_y_shift && s -> chroma_x_shift		3000266	0		&&			
ANR	3001166	UnaryOperationExpression	! s -> chroma_y_shift		3000266	0					
ANR	3001167	UnaryOperator	!		3000266	0					
ANR	3001168	PtrMemberAccess	s -> chroma_y_shift		3000266	1					
ANR	3001169	Identifier	s		3000266	0					
ANR	3001170	Identifier	chroma_y_shift		3000266	1					
ANR	3001171	PtrMemberAccess	s -> chroma_x_shift		3000266	1					
ANR	3001172	Identifier	s		3000266	0					
ANR	3001173	Identifier	chroma_x_shift		3000266	1					
ANR	3001174	CompoundStatement		221:57:4739:4739	3000266	1					
ANR	3001175	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 6 ] , ptr_cb + uv_dct_offset , wrap_c )"	233:16:5122:5184	3000266	0	True				
ANR	3001176	CallExpression	"s -> dsp . get_pixels ( s -> block [ 6 ] , ptr_cb + uv_dct_offset , wrap_c )"		3000266	0					
ANR	3001177	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001178	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001179	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001180	Identifier	s		3000266	0					
ANR	3001181	Identifier	dsp		3000266	1					
ANR	3001182	Identifier	get_pixels		3000266	1					
ANR	3001183	ArgumentList	s -> block [ 6 ]		3000266	1					
ANR	3001184	Argument	s -> block [ 6 ]		3000266	0					
ANR	3001185	ArrayIndexing	s -> block [ 6 ]		3000266	0					
ANR	3001186	PtrMemberAccess	s -> block		3000266	0					
ANR	3001187	Identifier	s		3000266	0					
ANR	3001188	Identifier	block		3000266	1					
ANR	3001189	PrimaryExpression	6		3000266	1					
ANR	3001190	Argument	ptr_cb + uv_dct_offset		3000266	1					
ANR	3001191	AdditiveExpression	ptr_cb + uv_dct_offset		3000266	0		+			
ANR	3001192	Identifier	ptr_cb		3000266	0					
ANR	3001193	Identifier	uv_dct_offset		3000266	1					
ANR	3001194	Argument	wrap_c		3000266	2					
ANR	3001195	Identifier	wrap_c		3000266	0					
ANR	3001196	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 7 ] , ptr_cr + uv_dct_offset , wrap_c )"	235:16:5203:5265	3000266	1	True				
ANR	3001197	CallExpression	"s -> dsp . get_pixels ( s -> block [ 7 ] , ptr_cr + uv_dct_offset , wrap_c )"		3000266	0					
ANR	3001198	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001199	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001200	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001201	Identifier	s		3000266	0					
ANR	3001202	Identifier	dsp		3000266	1					
ANR	3001203	Identifier	get_pixels		3000266	1					
ANR	3001204	ArgumentList	s -> block [ 7 ]		3000266	1					
ANR	3001205	Argument	s -> block [ 7 ]		3000266	0					
ANR	3001206	ArrayIndexing	s -> block [ 7 ]		3000266	0					
ANR	3001207	PtrMemberAccess	s -> block		3000266	0					
ANR	3001208	Identifier	s		3000266	0					
ANR	3001209	Identifier	block		3000266	1					
ANR	3001210	PrimaryExpression	7		3000266	1					
ANR	3001211	Argument	ptr_cr + uv_dct_offset		3000266	1					
ANR	3001212	AdditiveExpression	ptr_cr + uv_dct_offset		3000266	0		+			
ANR	3001213	Identifier	ptr_cr		3000266	0					
ANR	3001214	Identifier	uv_dct_offset		3000266	1					
ANR	3001215	Argument	wrap_c		3000266	2					
ANR	3001216	Identifier	wrap_c		3000266	0					
ANR	3001217	ElseStatement	else		3000266	0					
ANR	3001218	IfStatement	if ( ! s -> chroma_y_shift && ! s -> chroma_x_shift )		3000266	0					
ANR	3001219	Condition	! s -> chroma_y_shift && ! s -> chroma_x_shift	237:23:5291:5330	3000266	0	True				
ANR	3001220	AndExpression	! s -> chroma_y_shift && ! s -> chroma_x_shift		3000266	0		&&			
ANR	3001221	UnaryOperationExpression	! s -> chroma_y_shift		3000266	0					
ANR	3001222	UnaryOperator	!		3000266	0					
ANR	3001223	PtrMemberAccess	s -> chroma_y_shift		3000266	1					
ANR	3001224	Identifier	s		3000266	0					
ANR	3001225	Identifier	chroma_y_shift		3000266	1					
ANR	3001226	UnaryOperationExpression	! s -> chroma_x_shift		3000266	1					
ANR	3001227	UnaryOperator	!		3000266	0					
ANR	3001228	PtrMemberAccess	s -> chroma_x_shift		3000266	1					
ANR	3001229	Identifier	s		3000266	0					
ANR	3001230	Identifier	chroma_x_shift		3000266	1					
ANR	3001231	CompoundStatement		227:65:4979:4979	3000266	1					
ANR	3001232	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 6 ] , ptr_cb + 8 , wrap_c )"	239:16:5362:5412	3000266	0	True				
ANR	3001233	CallExpression	"s -> dsp . get_pixels ( s -> block [ 6 ] , ptr_cb + 8 , wrap_c )"		3000266	0					
ANR	3001234	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001235	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001236	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001237	Identifier	s		3000266	0					
ANR	3001238	Identifier	dsp		3000266	1					
ANR	3001239	Identifier	get_pixels		3000266	1					
ANR	3001240	ArgumentList	s -> block [ 6 ]		3000266	1					
ANR	3001241	Argument	s -> block [ 6 ]		3000266	0					
ANR	3001242	ArrayIndexing	s -> block [ 6 ]		3000266	0					
ANR	3001243	PtrMemberAccess	s -> block		3000266	0					
ANR	3001244	Identifier	s		3000266	0					
ANR	3001245	Identifier	block		3000266	1					
ANR	3001246	PrimaryExpression	6		3000266	1					
ANR	3001247	Argument	ptr_cb + 8		3000266	1					
ANR	3001248	AdditiveExpression	ptr_cb + 8		3000266	0		+			
ANR	3001249	Identifier	ptr_cb		3000266	0					
ANR	3001250	PrimaryExpression	8		3000266	1					
ANR	3001251	Argument	wrap_c		3000266	2					
ANR	3001252	Identifier	wrap_c		3000266	0					
ANR	3001253	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 7 ] , ptr_cr + 8 , wrap_c )"	241:16:5431:5481	3000266	1	True				
ANR	3001254	CallExpression	"s -> dsp . get_pixels ( s -> block [ 7 ] , ptr_cr + 8 , wrap_c )"		3000266	0					
ANR	3001255	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001256	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001257	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001258	Identifier	s		3000266	0					
ANR	3001259	Identifier	dsp		3000266	1					
ANR	3001260	Identifier	get_pixels		3000266	1					
ANR	3001261	ArgumentList	s -> block [ 7 ]		3000266	1					
ANR	3001262	Argument	s -> block [ 7 ]		3000266	0					
ANR	3001263	ArrayIndexing	s -> block [ 7 ]		3000266	0					
ANR	3001264	PtrMemberAccess	s -> block		3000266	0					
ANR	3001265	Identifier	s		3000266	0					
ANR	3001266	Identifier	block		3000266	1					
ANR	3001267	PrimaryExpression	7		3000266	1					
ANR	3001268	Argument	ptr_cr + 8		3000266	1					
ANR	3001269	AdditiveExpression	ptr_cr + 8		3000266	0		+			
ANR	3001270	Identifier	ptr_cr		3000266	0					
ANR	3001271	PrimaryExpression	8		3000266	1					
ANR	3001272	Argument	wrap_c		3000266	2					
ANR	3001273	Identifier	wrap_c		3000266	0					
ANR	3001274	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 8 ] , ptr_cb + uv_dct_offset , wrap_c )"	243:16:5500:5562	3000266	2	True				
ANR	3001275	CallExpression	"s -> dsp . get_pixels ( s -> block [ 8 ] , ptr_cb + uv_dct_offset , wrap_c )"		3000266	0					
ANR	3001276	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001277	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001278	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001279	Identifier	s		3000266	0					
ANR	3001280	Identifier	dsp		3000266	1					
ANR	3001281	Identifier	get_pixels		3000266	1					
ANR	3001282	ArgumentList	s -> block [ 8 ]		3000266	1					
ANR	3001283	Argument	s -> block [ 8 ]		3000266	0					
ANR	3001284	ArrayIndexing	s -> block [ 8 ]		3000266	0					
ANR	3001285	PtrMemberAccess	s -> block		3000266	0					
ANR	3001286	Identifier	s		3000266	0					
ANR	3001287	Identifier	block		3000266	1					
ANR	3001288	PrimaryExpression	8		3000266	1					
ANR	3001289	Argument	ptr_cb + uv_dct_offset		3000266	1					
ANR	3001290	AdditiveExpression	ptr_cb + uv_dct_offset		3000266	0		+			
ANR	3001291	Identifier	ptr_cb		3000266	0					
ANR	3001292	Identifier	uv_dct_offset		3000266	1					
ANR	3001293	Argument	wrap_c		3000266	2					
ANR	3001294	Identifier	wrap_c		3000266	0					
ANR	3001295	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 9 ] , ptr_cr + uv_dct_offset , wrap_c )"	245:16:5581:5643	3000266	3	True				
ANR	3001296	CallExpression	"s -> dsp . get_pixels ( s -> block [ 9 ] , ptr_cr + uv_dct_offset , wrap_c )"		3000266	0					
ANR	3001297	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001298	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001299	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001300	Identifier	s		3000266	0					
ANR	3001301	Identifier	dsp		3000266	1					
ANR	3001302	Identifier	get_pixels		3000266	1					
ANR	3001303	ArgumentList	s -> block [ 9 ]		3000266	1					
ANR	3001304	Argument	s -> block [ 9 ]		3000266	0					
ANR	3001305	ArrayIndexing	s -> block [ 9 ]		3000266	0					
ANR	3001306	PtrMemberAccess	s -> block		3000266	0					
ANR	3001307	Identifier	s		3000266	0					
ANR	3001308	Identifier	block		3000266	1					
ANR	3001309	PrimaryExpression	9		3000266	1					
ANR	3001310	Argument	ptr_cr + uv_dct_offset		3000266	1					
ANR	3001311	AdditiveExpression	ptr_cr + uv_dct_offset		3000266	0		+			
ANR	3001312	Identifier	ptr_cr		3000266	0					
ANR	3001313	Identifier	uv_dct_offset		3000266	1					
ANR	3001314	Argument	wrap_c		3000266	2					
ANR	3001315	Identifier	wrap_c		3000266	0					
ANR	3001316	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 10 ] , ptr_cb + uv_dct_offset + 8 , wrap_c )"	247:16:5662:5729	3000266	4	True				
ANR	3001317	CallExpression	"s -> dsp . get_pixels ( s -> block [ 10 ] , ptr_cb + uv_dct_offset + 8 , wrap_c )"		3000266	0					
ANR	3001318	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001319	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001320	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001321	Identifier	s		3000266	0					
ANR	3001322	Identifier	dsp		3000266	1					
ANR	3001323	Identifier	get_pixels		3000266	1					
ANR	3001324	ArgumentList	s -> block [ 10 ]		3000266	1					
ANR	3001325	Argument	s -> block [ 10 ]		3000266	0					
ANR	3001326	ArrayIndexing	s -> block [ 10 ]		3000266	0					
ANR	3001327	PtrMemberAccess	s -> block		3000266	0					
ANR	3001328	Identifier	s		3000266	0					
ANR	3001329	Identifier	block		3000266	1					
ANR	3001330	PrimaryExpression	10		3000266	1					
ANR	3001331	Argument	ptr_cb + uv_dct_offset + 8		3000266	1					
ANR	3001332	AdditiveExpression	ptr_cb + uv_dct_offset + 8		3000266	0		+			
ANR	3001333	Identifier	ptr_cb		3000266	0					
ANR	3001334	AdditiveExpression	uv_dct_offset + 8		3000266	1		+			
ANR	3001335	Identifier	uv_dct_offset		3000266	0					
ANR	3001336	PrimaryExpression	8		3000266	1					
ANR	3001337	Argument	wrap_c		3000266	2					
ANR	3001338	Identifier	wrap_c		3000266	0					
ANR	3001339	ExpressionStatement	"s -> dsp . get_pixels ( s -> block [ 11 ] , ptr_cr + uv_dct_offset + 8 , wrap_c )"	249:16:5748:5815	3000266	5	True				
ANR	3001340	CallExpression	"s -> dsp . get_pixels ( s -> block [ 11 ] , ptr_cr + uv_dct_offset + 8 , wrap_c )"		3000266	0					
ANR	3001341	Callee	s -> dsp . get_pixels		3000266	0					
ANR	3001342	MemberAccess	s -> dsp . get_pixels		3000266	0					
ANR	3001343	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001344	Identifier	s		3000266	0					
ANR	3001345	Identifier	dsp		3000266	1					
ANR	3001346	Identifier	get_pixels		3000266	1					
ANR	3001347	ArgumentList	s -> block [ 11 ]		3000266	1					
ANR	3001348	Argument	s -> block [ 11 ]		3000266	0					
ANR	3001349	ArrayIndexing	s -> block [ 11 ]		3000266	0					
ANR	3001350	PtrMemberAccess	s -> block		3000266	0					
ANR	3001351	Identifier	s		3000266	0					
ANR	3001352	Identifier	block		3000266	1					
ANR	3001353	PrimaryExpression	11		3000266	1					
ANR	3001354	Argument	ptr_cr + uv_dct_offset + 8		3000266	1					
ANR	3001355	AdditiveExpression	ptr_cr + uv_dct_offset + 8		3000266	0		+			
ANR	3001356	Identifier	ptr_cr		3000266	0					
ANR	3001357	AdditiveExpression	uv_dct_offset + 8		3000266	1		+			
ANR	3001358	Identifier	uv_dct_offset		3000266	0					
ANR	3001359	PrimaryExpression	8		3000266	1					
ANR	3001360	Argument	wrap_c		3000266	2					
ANR	3001361	Identifier	wrap_c		3000266	0					
ANR	3001362	ElseStatement	else		3000266	0					
ANR	3001363	CompoundStatement		251:8:5588:5623	3000266	0					
ANR	3001364	IdentifierDeclStatement	op_pixels_func ( * op_pix ) [ 4 ] ;	257:8:5866:5893	3000266	0	True				
ANR	3001365	IdentifierDecl	( * op_pix ) [ 4 ]		3000266	0					
ANR	3001366	IdentifierDeclType	op_pixels_func ( * ) [ 4 ]		3000266	0					
ANR	3001367	Identifier	op_pix		3000266	1					
ANR	3001368	PrimaryExpression	4		3000266	2					
ANR	3001369	IdentifierDeclStatement	qpel_mc_func ( * op_qpix ) [ 16 ] ;	259:8:5904:5931	3000266	1	True				
ANR	3001370	IdentifierDecl	( * op_qpix ) [ 16 ]		3000266	0					
ANR	3001371	IdentifierDeclType	qpel_mc_func ( * ) [ 16 ]		3000266	0					
ANR	3001372	Identifier	op_qpix		3000266	1					
ANR	3001373	PrimaryExpression	16		3000266	2					
ANR	3001374	IdentifierDeclStatement	"uint8_t * dest_y , * dest_cb , * dest_cr ;"	261:8:5942:5977	3000266	2	True				
ANR	3001375	IdentifierDecl	* dest_y		3000266	0					
ANR	3001376	IdentifierDeclType	uint8_t *		3000266	0					
ANR	3001377	Identifier	dest_y		3000266	1					
ANR	3001378	IdentifierDecl	* dest_cb		3000266	1					
ANR	3001379	IdentifierDeclType	uint8_t *		3000266	0					
ANR	3001380	Identifier	dest_cb		3000266	1					
ANR	3001381	IdentifierDecl	* dest_cr		3000266	2					
ANR	3001382	IdentifierDeclType	uint8_t *		3000266	0					
ANR	3001383	Identifier	dest_cr		3000266	1					
ANR	3001384	ExpressionStatement	dest_y = s -> dest [ 0 ]	265:8:5990:6010	3000266	3	True				
ANR	3001385	AssignmentExpression	dest_y = s -> dest [ 0 ]		3000266	0		=			
ANR	3001386	Identifier	dest_y		3000266	0					
ANR	3001387	ArrayIndexing	s -> dest [ 0 ]		3000266	1					
ANR	3001388	PtrMemberAccess	s -> dest		3000266	0					
ANR	3001389	Identifier	s		3000266	0					
ANR	3001390	Identifier	dest		3000266	1					
ANR	3001391	PrimaryExpression	0		3000266	1					
ANR	3001392	ExpressionStatement	dest_cb = s -> dest [ 1 ]	267:8:6021:6041	3000266	4	True				
ANR	3001393	AssignmentExpression	dest_cb = s -> dest [ 1 ]		3000266	0		=			
ANR	3001394	Identifier	dest_cb		3000266	0					
ANR	3001395	ArrayIndexing	s -> dest [ 1 ]		3000266	1					
ANR	3001396	PtrMemberAccess	s -> dest		3000266	0					
ANR	3001397	Identifier	s		3000266	0					
ANR	3001398	Identifier	dest		3000266	1					
ANR	3001399	PrimaryExpression	1		3000266	1					
ANR	3001400	ExpressionStatement	dest_cr = s -> dest [ 2 ]	269:8:6052:6072	3000266	5	True				
ANR	3001401	AssignmentExpression	dest_cr = s -> dest [ 2 ]		3000266	0		=			
ANR	3001402	Identifier	dest_cr		3000266	0					
ANR	3001403	ArrayIndexing	s -> dest [ 2 ]		3000266	1					
ANR	3001404	PtrMemberAccess	s -> dest		3000266	0					
ANR	3001405	Identifier	s		3000266	0					
ANR	3001406	Identifier	dest		3000266	1					
ANR	3001407	PrimaryExpression	2		3000266	1					
ANR	3001408	IfStatement	if ( ( ! s -> no_rounding ) || s -> pict_type == AV_PICTURE_TYPE_B )		3000266	6					
ANR	3001409	Condition	( ! s -> no_rounding ) || s -> pict_type == AV_PICTURE_TYPE_B	273:12:6089:6142	3000266	0	True				
ANR	3001410	OrExpression	( ! s -> no_rounding ) || s -> pict_type == AV_PICTURE_TYPE_B		3000266	0		||			
ANR	3001411	UnaryOperationExpression	! s -> no_rounding		3000266	0					
ANR	3001412	UnaryOperator	!		3000266	0					
ANR	3001413	PtrMemberAccess	s -> no_rounding		3000266	1					
ANR	3001414	Identifier	s		3000266	0					
ANR	3001415	Identifier	no_rounding		3000266	1					
ANR	3001416	EqualityExpression	s -> pict_type == AV_PICTURE_TYPE_B		3000266	1		==			
ANR	3001417	PtrMemberAccess	s -> pict_type		3000266	0					
ANR	3001418	Identifier	s		3000266	0					
ANR	3001419	Identifier	pict_type		3000266	1					
ANR	3001420	Identifier	AV_PICTURE_TYPE_B		3000266	1					
ANR	3001421	CompoundStatement		263:68:5791:5791	3000266	1					
ANR	3001422	ExpressionStatement	op_pix = s -> hdsp . put_pixels_tab	275:12:6160:6192	3000266	0	True				
ANR	3001423	AssignmentExpression	op_pix = s -> hdsp . put_pixels_tab		3000266	0		=			
ANR	3001424	Identifier	op_pix		3000266	0					
ANR	3001425	MemberAccess	s -> hdsp . put_pixels_tab		3000266	1					
ANR	3001426	PtrMemberAccess	s -> hdsp		3000266	0					
ANR	3001427	Identifier	s		3000266	0					
ANR	3001428	Identifier	hdsp		3000266	1					
ANR	3001429	Identifier	put_pixels_tab		3000266	1					
ANR	3001430	ExpressionStatement	op_qpix = s -> dsp . put_qpel_pixels_tab	277:12:6207:6243	3000266	1	True				
ANR	3001431	AssignmentExpression	op_qpix = s -> dsp . put_qpel_pixels_tab		3000266	0		=			
ANR	3001432	Identifier	op_qpix		3000266	0					
ANR	3001433	MemberAccess	s -> dsp . put_qpel_pixels_tab		3000266	1					
ANR	3001434	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001435	Identifier	s		3000266	0					
ANR	3001436	Identifier	dsp		3000266	1					
ANR	3001437	Identifier	put_qpel_pixels_tab		3000266	1					
ANR	3001438	ElseStatement	else		3000266	0					
ANR	3001439	CompoundStatement		269:15:5907:5907	3000266	0					
ANR	3001440	ExpressionStatement	op_pix = s -> hdsp . put_no_rnd_pixels_tab	281:12:6276:6315	3000266	0	True				
ANR	3001441	AssignmentExpression	op_pix = s -> hdsp . put_no_rnd_pixels_tab		3000266	0		=			
ANR	3001442	Identifier	op_pix		3000266	0					
ANR	3001443	MemberAccess	s -> hdsp . put_no_rnd_pixels_tab		3000266	1					
ANR	3001444	PtrMemberAccess	s -> hdsp		3000266	0					
ANR	3001445	Identifier	s		3000266	0					
ANR	3001446	Identifier	hdsp		3000266	1					
ANR	3001447	Identifier	put_no_rnd_pixels_tab		3000266	1					
ANR	3001448	ExpressionStatement	op_qpix = s -> dsp . put_no_rnd_qpel_pixels_tab	283:12:6330:6373	3000266	1	True				
ANR	3001449	AssignmentExpression	op_qpix = s -> dsp . put_no_rnd_qpel_pixels_tab		3000266	0		=			
ANR	3001450	Identifier	op_qpix		3000266	0					
ANR	3001451	MemberAccess	s -> dsp . put_no_rnd_qpel_pixels_tab		3000266	1					
ANR	3001452	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001453	Identifier	s		3000266	0					
ANR	3001454	Identifier	dsp		3000266	1					
ANR	3001455	Identifier	put_no_rnd_qpel_pixels_tab		3000266	1					
ANR	3001456	IfStatement	if ( s -> mv_dir & MV_DIR_FORWARD )		3000266	7					
ANR	3001457	Condition	s -> mv_dir & MV_DIR_FORWARD	289:12:6401:6426	3000266	0	True				
ANR	3001458	BitAndExpression	s -> mv_dir & MV_DIR_FORWARD		3000266	0		&			
ANR	3001459	PtrMemberAccess	s -> mv_dir		3000266	0					
ANR	3001460	Identifier	s		3000266	0					
ANR	3001461	Identifier	mv_dir		3000266	1					
ANR	3001462	Identifier	MV_DIR_FORWARD		3000266	1					
ANR	3001463	CompoundStatement		279:40:6075:6075	3000266	1					
ANR	3001464	ExpressionStatement	"ff_MPV_motion ( s , dest_y , dest_cb , dest_cr , 0 , s -> last_picture . f . data , op_pix , op_qpix )"	291:12:6444:6584	3000266	0	True				
ANR	3001465	CallExpression	"ff_MPV_motion ( s , dest_y , dest_cb , dest_cr , 0 , s -> last_picture . f . data , op_pix , op_qpix )"		3000266	0					
ANR	3001466	Callee	ff_MPV_motion		3000266	0					
ANR	3001467	Identifier	ff_MPV_motion		3000266	0					
ANR	3001468	ArgumentList	s		3000266	1					
ANR	3001469	Argument	s		3000266	0					
ANR	3001470	Identifier	s		3000266	0					
ANR	3001471	Argument	dest_y		3000266	1					
ANR	3001472	Identifier	dest_y		3000266	0					
ANR	3001473	Argument	dest_cb		3000266	2					
ANR	3001474	Identifier	dest_cb		3000266	0					
ANR	3001475	Argument	dest_cr		3000266	3					
ANR	3001476	Identifier	dest_cr		3000266	0					
ANR	3001477	Argument	0		3000266	4					
ANR	3001478	PrimaryExpression	0		3000266	0					
ANR	3001479	Argument	s -> last_picture . f . data		3000266	5					
ANR	3001480	MemberAccess	s -> last_picture . f . data		3000266	0					
ANR	3001481	MemberAccess	s -> last_picture . f		3000266	0					
ANR	3001482	PtrMemberAccess	s -> last_picture		3000266	0					
ANR	3001483	Identifier	s		3000266	0					
ANR	3001484	Identifier	last_picture		3000266	1					
ANR	3001485	Identifier	f		3000266	1					
ANR	3001486	Identifier	data		3000266	1					
ANR	3001487	Argument	op_pix		3000266	6					
ANR	3001488	Identifier	op_pix		3000266	0					
ANR	3001489	Argument	op_qpix		3000266	7					
ANR	3001490	Identifier	op_qpix		3000266	0					
ANR	3001491	ExpressionStatement	op_pix = s -> hdsp . avg_pixels_tab	297:12:6599:6631	3000266	1	True				
ANR	3001492	AssignmentExpression	op_pix = s -> hdsp . avg_pixels_tab		3000266	0		=			
ANR	3001493	Identifier	op_pix		3000266	0					
ANR	3001494	MemberAccess	s -> hdsp . avg_pixels_tab		3000266	1					
ANR	3001495	PtrMemberAccess	s -> hdsp		3000266	0					
ANR	3001496	Identifier	s		3000266	0					
ANR	3001497	Identifier	hdsp		3000266	1					
ANR	3001498	Identifier	avg_pixels_tab		3000266	1					
ANR	3001499	ExpressionStatement	op_qpix = s -> dsp . avg_qpel_pixels_tab	299:12:6646:6682	3000266	2	True				
ANR	3001500	AssignmentExpression	op_qpix = s -> dsp . avg_qpel_pixels_tab		3000266	0		=			
ANR	3001501	Identifier	op_qpix		3000266	0					
ANR	3001502	MemberAccess	s -> dsp . avg_qpel_pixels_tab		3000266	1					
ANR	3001503	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001504	Identifier	s		3000266	0					
ANR	3001505	Identifier	dsp		3000266	1					
ANR	3001506	Identifier	avg_qpel_pixels_tab		3000266	1					
ANR	3001507	IfStatement	if ( s -> mv_dir & MV_DIR_BACKWARD )		3000266	8					
ANR	3001508	Condition	s -> mv_dir & MV_DIR_BACKWARD	303:12:6708:6734	3000266	0	True				
ANR	3001509	BitAndExpression	s -> mv_dir & MV_DIR_BACKWARD		3000266	0		&			
ANR	3001510	PtrMemberAccess	s -> mv_dir		3000266	0					
ANR	3001511	Identifier	s		3000266	0					
ANR	3001512	Identifier	mv_dir		3000266	1					
ANR	3001513	Identifier	MV_DIR_BACKWARD		3000266	1					
ANR	3001514	CompoundStatement		293:41:6383:6383	3000266	1					
ANR	3001515	ExpressionStatement	"ff_MPV_motion ( s , dest_y , dest_cb , dest_cr , 1 , s -> next_picture . f . data , op_pix , op_qpix )"	305:12:6752:6892	3000266	0	True				
ANR	3001516	CallExpression	"ff_MPV_motion ( s , dest_y , dest_cb , dest_cr , 1 , s -> next_picture . f . data , op_pix , op_qpix )"		3000266	0					
ANR	3001517	Callee	ff_MPV_motion		3000266	0					
ANR	3001518	Identifier	ff_MPV_motion		3000266	0					
ANR	3001519	ArgumentList	s		3000266	1					
ANR	3001520	Argument	s		3000266	0					
ANR	3001521	Identifier	s		3000266	0					
ANR	3001522	Argument	dest_y		3000266	1					
ANR	3001523	Identifier	dest_y		3000266	0					
ANR	3001524	Argument	dest_cb		3000266	2					
ANR	3001525	Identifier	dest_cb		3000266	0					
ANR	3001526	Argument	dest_cr		3000266	3					
ANR	3001527	Identifier	dest_cr		3000266	0					
ANR	3001528	Argument	1		3000266	4					
ANR	3001529	PrimaryExpression	1		3000266	0					
ANR	3001530	Argument	s -> next_picture . f . data		3000266	5					
ANR	3001531	MemberAccess	s -> next_picture . f . data		3000266	0					
ANR	3001532	MemberAccess	s -> next_picture . f		3000266	0					
ANR	3001533	PtrMemberAccess	s -> next_picture		3000266	0					
ANR	3001534	Identifier	s		3000266	0					
ANR	3001535	Identifier	next_picture		3000266	1					
ANR	3001536	Identifier	f		3000266	1					
ANR	3001537	Identifier	data		3000266	1					
ANR	3001538	Argument	op_pix		3000266	6					
ANR	3001539	Identifier	op_pix		3000266	0					
ANR	3001540	Argument	op_qpix		3000266	7					
ANR	3001541	Identifier	op_qpix		3000266	0					
ANR	3001542	IfStatement	if ( s -> flags & CODEC_FLAG_INTERLACED_DCT )		3000266	9					
ANR	3001543	Condition	s -> flags & CODEC_FLAG_INTERLACED_DCT	315:12:6920:6955	3000266	0	True				
ANR	3001544	BitAndExpression	s -> flags & CODEC_FLAG_INTERLACED_DCT		3000266	0		&			
ANR	3001545	PtrMemberAccess	s -> flags		3000266	0					
ANR	3001546	Identifier	s		3000266	0					
ANR	3001547	Identifier	flags		3000266	1					
ANR	3001548	Identifier	CODEC_FLAG_INTERLACED_DCT		3000266	1					
ANR	3001549	CompoundStatement		307:12:6619:6658	3000266	1					
ANR	3001550	IdentifierDeclStatement	"int progressive_score , interlaced_score ;"	317:12:6973:7012	3000266	0	True				
ANR	3001551	IdentifierDecl	progressive_score		3000266	0					
ANR	3001552	IdentifierDeclType	int		3000266	0					
ANR	3001553	Identifier	progressive_score		3000266	1					
ANR	3001554	IdentifierDecl	interlaced_score		3000266	1					
ANR	3001555	IdentifierDeclType	int		3000266	0					
ANR	3001556	Identifier	interlaced_score		3000266	1					
ANR	3001557	ExpressionStatement	s -> interlaced_dct = 0	321:12:7029:7050	3000266	1	True				
ANR	3001558	AssignmentExpression	s -> interlaced_dct = 0		3000266	0		=			
ANR	3001559	PtrMemberAccess	s -> interlaced_dct		3000266	0					
ANR	3001560	Identifier	s		3000266	0					
ANR	3001561	Identifier	interlaced_dct		3000266	1					
ANR	3001562	PrimaryExpression	0		3000266	1					
ANR	3001563	ExpressionStatement	"progressive_score = s -> dsp . ildct_cmp [ 0 ] ( s , dest_y , ptr_y , wrap_y , 8 ) + s -> dsp . ildct_cmp [ 0 ] ( s , dest_y + wrap_y * 8 , ptr_y + wrap_y * 8 , wrap_y , 8 ) - 400"	323:12:7065:7474	3000266	2	True				
ANR	3001564	AssignmentExpression	"progressive_score = s -> dsp . ildct_cmp [ 0 ] ( s , dest_y , ptr_y , wrap_y , 8 ) + s -> dsp . ildct_cmp [ 0 ] ( s , dest_y + wrap_y * 8 , ptr_y + wrap_y * 8 , wrap_y , 8 ) - 400"		3000266	0		=			
ANR	3001565	Identifier	progressive_score		3000266	0					
ANR	3001566	AdditiveExpression	"s -> dsp . ildct_cmp [ 0 ] ( s , dest_y , ptr_y , wrap_y , 8 ) + s -> dsp . ildct_cmp [ 0 ] ( s , dest_y + wrap_y * 8 , ptr_y + wrap_y * 8 , wrap_y , 8 ) - 400"		3000266	1		+			
ANR	3001567	CallExpression	"s -> dsp . ildct_cmp [ 0 ] ( s , dest_y , ptr_y , wrap_y , 8 )"		3000266	0					
ANR	3001568	Callee	s -> dsp . ildct_cmp [ 0 ]		3000266	0					
ANR	3001569	ArrayIndexing	s -> dsp . ildct_cmp [ 0 ]		3000266	0					
ANR	3001570	MemberAccess	s -> dsp . ildct_cmp		3000266	0					
ANR	3001571	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001572	Identifier	s		3000266	0					
ANR	3001573	Identifier	dsp		3000266	1					
ANR	3001574	Identifier	ildct_cmp		3000266	1					
ANR	3001575	PrimaryExpression	0		3000266	1					
ANR	3001576	ArgumentList	s		3000266	1					
ANR	3001577	Argument	s		3000266	0					
ANR	3001578	Identifier	s		3000266	0					
ANR	3001579	Argument	dest_y		3000266	1					
ANR	3001580	Identifier	dest_y		3000266	0					
ANR	3001581	Argument	ptr_y		3000266	2					
ANR	3001582	Identifier	ptr_y		3000266	0					
ANR	3001583	Argument	wrap_y		3000266	3					
ANR	3001584	Identifier	wrap_y		3000266	0					
ANR	3001585	Argument	8		3000266	4					
ANR	3001586	PrimaryExpression	8		3000266	0					
ANR	3001587	AdditiveExpression	"s -> dsp . ildct_cmp [ 0 ] ( s , dest_y + wrap_y * 8 , ptr_y + wrap_y * 8 , wrap_y , 8 ) - 400"		3000266	1		-			
ANR	3001588	CallExpression	"s -> dsp . ildct_cmp [ 0 ] ( s , dest_y + wrap_y * 8 , ptr_y + wrap_y * 8 , wrap_y , 8 )"		3000266	0					
ANR	3001589	Callee	s -> dsp . ildct_cmp [ 0 ]		3000266	0					
ANR	3001590	ArrayIndexing	s -> dsp . ildct_cmp [ 0 ]		3000266	0					
ANR	3001591	MemberAccess	s -> dsp . ildct_cmp		3000266	0					
ANR	3001592	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001593	Identifier	s		3000266	0					
ANR	3001594	Identifier	dsp		3000266	1					
ANR	3001595	Identifier	ildct_cmp		3000266	1					
ANR	3001596	PrimaryExpression	0		3000266	1					
ANR	3001597	ArgumentList	s		3000266	1					
ANR	3001598	Argument	s		3000266	0					
ANR	3001599	Identifier	s		3000266	0					
ANR	3001600	Argument	dest_y + wrap_y * 8		3000266	1					
ANR	3001601	AdditiveExpression	dest_y + wrap_y * 8		3000266	0		+			
ANR	3001602	Identifier	dest_y		3000266	0					
ANR	3001603	MultiplicativeExpression	wrap_y * 8		3000266	1		*			
ANR	3001604	Identifier	wrap_y		3000266	0					
ANR	3001605	PrimaryExpression	8		3000266	1					
ANR	3001606	Argument	ptr_y + wrap_y * 8		3000266	2					
ANR	3001607	AdditiveExpression	ptr_y + wrap_y * 8		3000266	0		+			
ANR	3001608	Identifier	ptr_y		3000266	0					
ANR	3001609	MultiplicativeExpression	wrap_y * 8		3000266	1		*			
ANR	3001610	Identifier	wrap_y		3000266	0					
ANR	3001611	PrimaryExpression	8		3000266	1					
ANR	3001612	Argument	wrap_y		3000266	3					
ANR	3001613	Identifier	wrap_y		3000266	0					
ANR	3001614	Argument	8		3000266	4					
ANR	3001615	PrimaryExpression	8		3000266	0					
ANR	3001616	PrimaryExpression	400		3000266	1					
ANR	3001617	IfStatement	if ( s -> avctx -> ildct_cmp == FF_CMP_VSSE )		3000266	3					
ANR	3001618	Condition	s -> avctx -> ildct_cmp == FF_CMP_VSSE	337:16:7495:7528	3000266	0	True				
ANR	3001619	EqualityExpression	s -> avctx -> ildct_cmp == FF_CMP_VSSE		3000266	0		==			
ANR	3001620	PtrMemberAccess	s -> avctx -> ildct_cmp		3000266	0					
ANR	3001621	PtrMemberAccess	s -> avctx		3000266	0					
ANR	3001622	Identifier	s		3000266	0					
ANR	3001623	Identifier	avctx		3000266	1					
ANR	3001624	Identifier	ildct_cmp		3000266	1					
ANR	3001625	Identifier	FF_CMP_VSSE		3000266	1					
ANR	3001626	ExpressionStatement	progressive_score -= 400	339:16:7548:7572	3000266	1	True				
ANR	3001627	AssignmentExpression	progressive_score -= 400		3000266	0		-=			
ANR	3001628	Identifier	progressive_score		3000266	0					
ANR	3001629	PrimaryExpression	400		3000266	1					
ANR	3001630	IfStatement	if ( progressive_score > 0 )		3000266	4					
ANR	3001631	Condition	progressive_score > 0	343:16:7593:7613	3000266	0	True				
ANR	3001632	RelationalExpression	progressive_score > 0		3000266	0		>			
ANR	3001633	Identifier	progressive_score		3000266	0					
ANR	3001634	PrimaryExpression	0		3000266	1					
ANR	3001635	CompoundStatement		333:39:7262:7262	3000266	1					
ANR	3001636	ExpressionStatement	"interlaced_score = s -> dsp . ildct_cmp [ 0 ] ( s , dest_y , ptr_y , wrap_y * 2 , 8 ) + s -> dsp . ildct_cmp [ 0 ] ( s , dest_y + wrap_y , ptr_y + wrap_y , wrap_y * 2 , 8 )"	345:16:7635:8039	3000266	0	True				
ANR	3001637	AssignmentExpression	"interlaced_score = s -> dsp . ildct_cmp [ 0 ] ( s , dest_y , ptr_y , wrap_y * 2 , 8 ) + s -> dsp . ildct_cmp [ 0 ] ( s , dest_y + wrap_y , ptr_y + wrap_y , wrap_y * 2 , 8 )"		3000266	0		=			
ANR	3001638	Identifier	interlaced_score		3000266	0					
ANR	3001639	AdditiveExpression	"s -> dsp . ildct_cmp [ 0 ] ( s , dest_y , ptr_y , wrap_y * 2 , 8 ) + s -> dsp . ildct_cmp [ 0 ] ( s , dest_y + wrap_y , ptr_y + wrap_y , wrap_y * 2 , 8 )"		3000266	1		+			
ANR	3001640	CallExpression	"s -> dsp . ildct_cmp [ 0 ] ( s , dest_y , ptr_y , wrap_y * 2 , 8 )"		3000266	0					
ANR	3001641	Callee	s -> dsp . ildct_cmp [ 0 ]		3000266	0					
ANR	3001642	ArrayIndexing	s -> dsp . ildct_cmp [ 0 ]		3000266	0					
ANR	3001643	MemberAccess	s -> dsp . ildct_cmp		3000266	0					
ANR	3001644	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001645	Identifier	s		3000266	0					
ANR	3001646	Identifier	dsp		3000266	1					
ANR	3001647	Identifier	ildct_cmp		3000266	1					
ANR	3001648	PrimaryExpression	0		3000266	1					
ANR	3001649	ArgumentList	s		3000266	1					
ANR	3001650	Argument	s		3000266	0					
ANR	3001651	Identifier	s		3000266	0					
ANR	3001652	Argument	dest_y		3000266	1					
ANR	3001653	Identifier	dest_y		3000266	0					
ANR	3001654	Argument	ptr_y		3000266	2					
ANR	3001655	Identifier	ptr_y		3000266	0					
ANR	3001656	Argument	wrap_y * 2		3000266	3					
ANR	3001657	MultiplicativeExpression	wrap_y * 2		3000266	0		*			
ANR	3001658	Identifier	wrap_y		3000266	0					
ANR	3001659	PrimaryExpression	2		3000266	1					
ANR	3001660	Argument	8		3000266	4					
ANR	3001661	PrimaryExpression	8		3000266	0					
ANR	3001662	CallExpression	"s -> dsp . ildct_cmp [ 0 ] ( s , dest_y + wrap_y , ptr_y + wrap_y , wrap_y * 2 , 8 )"		3000266	1					
ANR	3001663	Callee	s -> dsp . ildct_cmp [ 0 ]		3000266	0					
ANR	3001664	ArrayIndexing	s -> dsp . ildct_cmp [ 0 ]		3000266	0					
ANR	3001665	MemberAccess	s -> dsp . ildct_cmp		3000266	0					
ANR	3001666	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001667	Identifier	s		3000266	0					
ANR	3001668	Identifier	dsp		3000266	1					
ANR	3001669	Identifier	ildct_cmp		3000266	1					
ANR	3001670	PrimaryExpression	0		3000266	1					
ANR	3001671	ArgumentList	s		3000266	1					
ANR	3001672	Argument	s		3000266	0					
ANR	3001673	Identifier	s		3000266	0					
ANR	3001674	Argument	dest_y + wrap_y		3000266	1					
ANR	3001675	AdditiveExpression	dest_y + wrap_y		3000266	0		+			
ANR	3001676	Identifier	dest_y		3000266	0					
ANR	3001677	Identifier	wrap_y		3000266	1					
ANR	3001678	Argument	ptr_y + wrap_y		3000266	2					
ANR	3001679	AdditiveExpression	ptr_y + wrap_y		3000266	0		+			
ANR	3001680	Identifier	ptr_y		3000266	0					
ANR	3001681	Identifier	wrap_y		3000266	1					
ANR	3001682	Argument	wrap_y * 2		3000266	3					
ANR	3001683	MultiplicativeExpression	wrap_y * 2		3000266	0		*			
ANR	3001684	Identifier	wrap_y		3000266	0					
ANR	3001685	PrimaryExpression	2		3000266	1					
ANR	3001686	Argument	8		3000266	4					
ANR	3001687	PrimaryExpression	8		3000266	0					
ANR	3001688	IfStatement	if ( progressive_score > interlaced_score )		3000266	1					
ANR	3001689	Condition	progressive_score > interlaced_score	359:20:8064:8099	3000266	0	True				
ANR	3001690	RelationalExpression	progressive_score > interlaced_score		3000266	0		>			
ANR	3001691	Identifier	progressive_score		3000266	0					
ANR	3001692	Identifier	interlaced_score		3000266	1					
ANR	3001693	CompoundStatement		349:58:7748:7748	3000266	1					
ANR	3001694	ExpressionStatement	s -> interlaced_dct = 1	361:20:8125:8146	3000266	0	True				
ANR	3001695	AssignmentExpression	s -> interlaced_dct = 1		3000266	0		=			
ANR	3001696	PtrMemberAccess	s -> interlaced_dct		3000266	0					
ANR	3001697	Identifier	s		3000266	0					
ANR	3001698	Identifier	interlaced_dct		3000266	1					
ANR	3001699	PrimaryExpression	1		3000266	1					
ANR	3001700	ExpressionStatement	dct_offset = wrap_y	365:20:8171:8190	3000266	1	True				
ANR	3001701	AssignmentExpression	dct_offset = wrap_y		3000266	0		=			
ANR	3001702	Identifier	dct_offset		3000266	0					
ANR	3001703	Identifier	wrap_y		3000266	1					
ANR	3001704	ExpressionStatement	uv_dct_offset = wrap_c	367:20:8213:8235	3000266	2	True				
ANR	3001705	AssignmentExpression	uv_dct_offset = wrap_c		3000266	0		=			
ANR	3001706	Identifier	uv_dct_offset		3000266	0					
ANR	3001707	Identifier	wrap_c		3000266	1					
ANR	3001708	ExpressionStatement	wrap_y <<= 1	369:20:8258:8270	3000266	3	True				
ANR	3001709	AssignmentExpression	wrap_y <<= 1		3000266	0		<<=			
ANR	3001710	Identifier	wrap_y		3000266	0					
ANR	3001711	PrimaryExpression	1		3000266	1					
ANR	3001712	IfStatement	if ( s -> chroma_format == CHROMA_422 )		3000266	4					
ANR	3001713	Condition	s -> chroma_format == CHROMA_422	371:24:8297:8326	3000266	0	True				
ANR	3001714	EqualityExpression	s -> chroma_format == CHROMA_422		3000266	0		==			
ANR	3001715	PtrMemberAccess	s -> chroma_format		3000266	0					
ANR	3001716	Identifier	s		3000266	0					
ANR	3001717	Identifier	chroma_format		3000266	1					
ANR	3001718	Identifier	CHROMA_422		3000266	1					
ANR	3001719	ExpressionStatement	wrap_c <<= 1	373:24:8354:8366	3000266	1	True				
ANR	3001720	AssignmentExpression	wrap_c <<= 1		3000266	0		<<=			
ANR	3001721	Identifier	wrap_c		3000266	0					
ANR	3001722	PrimaryExpression	1		3000266	1					
ANR	3001723	ExpressionStatement	"s -> dsp . diff_pixels ( s -> block [ 0 ] , ptr_y , dest_y , wrap_y )"	383:8:8424:8478	3000266	10	True				
ANR	3001724	CallExpression	"s -> dsp . diff_pixels ( s -> block [ 0 ] , ptr_y , dest_y , wrap_y )"		3000266	0					
ANR	3001725	Callee	s -> dsp . diff_pixels		3000266	0					
ANR	3001726	MemberAccess	s -> dsp . diff_pixels		3000266	0					
ANR	3001727	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001728	Identifier	s		3000266	0					
ANR	3001729	Identifier	dsp		3000266	1					
ANR	3001730	Identifier	diff_pixels		3000266	1					
ANR	3001731	ArgumentList	s -> block [ 0 ]		3000266	1					
ANR	3001732	Argument	s -> block [ 0 ]		3000266	0					
ANR	3001733	ArrayIndexing	s -> block [ 0 ]		3000266	0					
ANR	3001734	PtrMemberAccess	s -> block		3000266	0					
ANR	3001735	Identifier	s		3000266	0					
ANR	3001736	Identifier	block		3000266	1					
ANR	3001737	PrimaryExpression	0		3000266	1					
ANR	3001738	Argument	ptr_y		3000266	1					
ANR	3001739	Identifier	ptr_y		3000266	0					
ANR	3001740	Argument	dest_y		3000266	2					
ANR	3001741	Identifier	dest_y		3000266	0					
ANR	3001742	Argument	wrap_y		3000266	3					
ANR	3001743	Identifier	wrap_y		3000266	0					
ANR	3001744	ExpressionStatement	"s -> dsp . diff_pixels ( s -> block [ 1 ] , ptr_y + 8 , dest_y + 8 , wrap_y )"	385:8:8489:8551	3000266	11	True				
ANR	3001745	CallExpression	"s -> dsp . diff_pixels ( s -> block [ 1 ] , ptr_y + 8 , dest_y + 8 , wrap_y )"		3000266	0					
ANR	3001746	Callee	s -> dsp . diff_pixels		3000266	0					
ANR	3001747	MemberAccess	s -> dsp . diff_pixels		3000266	0					
ANR	3001748	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001749	Identifier	s		3000266	0					
ANR	3001750	Identifier	dsp		3000266	1					
ANR	3001751	Identifier	diff_pixels		3000266	1					
ANR	3001752	ArgumentList	s -> block [ 1 ]		3000266	1					
ANR	3001753	Argument	s -> block [ 1 ]		3000266	0					
ANR	3001754	ArrayIndexing	s -> block [ 1 ]		3000266	0					
ANR	3001755	PtrMemberAccess	s -> block		3000266	0					
ANR	3001756	Identifier	s		3000266	0					
ANR	3001757	Identifier	block		3000266	1					
ANR	3001758	PrimaryExpression	1		3000266	1					
ANR	3001759	Argument	ptr_y + 8		3000266	1					
ANR	3001760	AdditiveExpression	ptr_y + 8		3000266	0		+			
ANR	3001761	Identifier	ptr_y		3000266	0					
ANR	3001762	PrimaryExpression	8		3000266	1					
ANR	3001763	Argument	dest_y + 8		3000266	2					
ANR	3001764	AdditiveExpression	dest_y + 8		3000266	0		+			
ANR	3001765	Identifier	dest_y		3000266	0					
ANR	3001766	PrimaryExpression	8		3000266	1					
ANR	3001767	Argument	wrap_y		3000266	3					
ANR	3001768	Identifier	wrap_y		3000266	0					
ANR	3001769	ExpressionStatement	"s -> dsp . diff_pixels ( s -> block [ 2 ] , ptr_y + dct_offset , dest_y + dct_offset , wrap_y )"	387:8:8562:8670	3000266	12	True				
ANR	3001770	CallExpression	"s -> dsp . diff_pixels ( s -> block [ 2 ] , ptr_y + dct_offset , dest_y + dct_offset , wrap_y )"		3000266	0					
ANR	3001771	Callee	s -> dsp . diff_pixels		3000266	0					
ANR	3001772	MemberAccess	s -> dsp . diff_pixels		3000266	0					
ANR	3001773	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001774	Identifier	s		3000266	0					
ANR	3001775	Identifier	dsp		3000266	1					
ANR	3001776	Identifier	diff_pixels		3000266	1					
ANR	3001777	ArgumentList	s -> block [ 2 ]		3000266	1					
ANR	3001778	Argument	s -> block [ 2 ]		3000266	0					
ANR	3001779	ArrayIndexing	s -> block [ 2 ]		3000266	0					
ANR	3001780	PtrMemberAccess	s -> block		3000266	0					
ANR	3001781	Identifier	s		3000266	0					
ANR	3001782	Identifier	block		3000266	1					
ANR	3001783	PrimaryExpression	2		3000266	1					
ANR	3001784	Argument	ptr_y + dct_offset		3000266	1					
ANR	3001785	AdditiveExpression	ptr_y + dct_offset		3000266	0		+			
ANR	3001786	Identifier	ptr_y		3000266	0					
ANR	3001787	Identifier	dct_offset		3000266	1					
ANR	3001788	Argument	dest_y + dct_offset		3000266	2					
ANR	3001789	AdditiveExpression	dest_y + dct_offset		3000266	0		+			
ANR	3001790	Identifier	dest_y		3000266	0					
ANR	3001791	Identifier	dct_offset		3000266	1					
ANR	3001792	Argument	wrap_y		3000266	3					
ANR	3001793	Identifier	wrap_y		3000266	0					
ANR	3001794	ExpressionStatement	"s -> dsp . diff_pixels ( s -> block [ 3 ] , ptr_y + dct_offset + 8 , dest_y + dct_offset + 8 , wrap_y )"	391:8:8681:8797	3000266	13	True				
ANR	3001795	CallExpression	"s -> dsp . diff_pixels ( s -> block [ 3 ] , ptr_y + dct_offset + 8 , dest_y + dct_offset + 8 , wrap_y )"		3000266	0					
ANR	3001796	Callee	s -> dsp . diff_pixels		3000266	0					
ANR	3001797	MemberAccess	s -> dsp . diff_pixels		3000266	0					
ANR	3001798	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001799	Identifier	s		3000266	0					
ANR	3001800	Identifier	dsp		3000266	1					
ANR	3001801	Identifier	diff_pixels		3000266	1					
ANR	3001802	ArgumentList	s -> block [ 3 ]		3000266	1					
ANR	3001803	Argument	s -> block [ 3 ]		3000266	0					
ANR	3001804	ArrayIndexing	s -> block [ 3 ]		3000266	0					
ANR	3001805	PtrMemberAccess	s -> block		3000266	0					
ANR	3001806	Identifier	s		3000266	0					
ANR	3001807	Identifier	block		3000266	1					
ANR	3001808	PrimaryExpression	3		3000266	1					
ANR	3001809	Argument	ptr_y + dct_offset + 8		3000266	1					
ANR	3001810	AdditiveExpression	ptr_y + dct_offset + 8		3000266	0		+			
ANR	3001811	Identifier	ptr_y		3000266	0					
ANR	3001812	AdditiveExpression	dct_offset + 8		3000266	1		+			
ANR	3001813	Identifier	dct_offset		3000266	0					
ANR	3001814	PrimaryExpression	8		3000266	1					
ANR	3001815	Argument	dest_y + dct_offset + 8		3000266	2					
ANR	3001816	AdditiveExpression	dest_y + dct_offset + 8		3000266	0		+			
ANR	3001817	Identifier	dest_y		3000266	0					
ANR	3001818	AdditiveExpression	dct_offset + 8		3000266	1		+			
ANR	3001819	Identifier	dct_offset		3000266	0					
ANR	3001820	PrimaryExpression	8		3000266	1					
ANR	3001821	Argument	wrap_y		3000266	3					
ANR	3001822	Identifier	wrap_y		3000266	0					
ANR	3001823	IfStatement	if ( s -> flags & CODEC_FLAG_GRAY )		3000266	14					
ANR	3001824	Condition	s -> flags & CODEC_FLAG_GRAY	397:12:8814:8839	3000266	0	True				
ANR	3001825	BitAndExpression	s -> flags & CODEC_FLAG_GRAY		3000266	0		&			
ANR	3001826	PtrMemberAccess	s -> flags		3000266	0					
ANR	3001827	Identifier	s		3000266	0					
ANR	3001828	Identifier	flags		3000266	1					
ANR	3001829	Identifier	CODEC_FLAG_GRAY		3000266	1					
ANR	3001830	CompoundStatement		387:40:8488:8488	3000266	1					
ANR	3001831	ExpressionStatement	skip_dct [ 4 ] = 1	399:12:8857:8872	3000266	0	True				
ANR	3001832	AssignmentExpression	skip_dct [ 4 ] = 1		3000266	0		=			
ANR	3001833	ArrayIndexing	skip_dct [ 4 ]		3000266	0					
ANR	3001834	Identifier	skip_dct		3000266	0					
ANR	3001835	PrimaryExpression	4		3000266	1					
ANR	3001836	PrimaryExpression	1		3000266	1					
ANR	3001837	ExpressionStatement	skip_dct [ 5 ] = 1	401:12:8887:8902	3000266	1	True				
ANR	3001838	AssignmentExpression	skip_dct [ 5 ] = 1		3000266	0		=			
ANR	3001839	ArrayIndexing	skip_dct [ 5 ]		3000266	0					
ANR	3001840	Identifier	skip_dct		3000266	0					
ANR	3001841	PrimaryExpression	5		3000266	1					
ANR	3001842	PrimaryExpression	1		3000266	1					
ANR	3001843	ElseStatement	else		3000266	0					
ANR	3001844	CompoundStatement		393:15:8566:8566	3000266	0					
ANR	3001845	ExpressionStatement	"s -> dsp . diff_pixels ( s -> block [ 4 ] , ptr_cb , dest_cb , wrap_c )"	405:12:8935:8991	3000266	0	True				
ANR	3001846	CallExpression	"s -> dsp . diff_pixels ( s -> block [ 4 ] , ptr_cb , dest_cb , wrap_c )"		3000266	0					
ANR	3001847	Callee	s -> dsp . diff_pixels		3000266	0					
ANR	3001848	MemberAccess	s -> dsp . diff_pixels		3000266	0					
ANR	3001849	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001850	Identifier	s		3000266	0					
ANR	3001851	Identifier	dsp		3000266	1					
ANR	3001852	Identifier	diff_pixels		3000266	1					
ANR	3001853	ArgumentList	s -> block [ 4 ]		3000266	1					
ANR	3001854	Argument	s -> block [ 4 ]		3000266	0					
ANR	3001855	ArrayIndexing	s -> block [ 4 ]		3000266	0					
ANR	3001856	PtrMemberAccess	s -> block		3000266	0					
ANR	3001857	Identifier	s		3000266	0					
ANR	3001858	Identifier	block		3000266	1					
ANR	3001859	PrimaryExpression	4		3000266	1					
ANR	3001860	Argument	ptr_cb		3000266	1					
ANR	3001861	Identifier	ptr_cb		3000266	0					
ANR	3001862	Argument	dest_cb		3000266	2					
ANR	3001863	Identifier	dest_cb		3000266	0					
ANR	3001864	Argument	wrap_c		3000266	3					
ANR	3001865	Identifier	wrap_c		3000266	0					
ANR	3001866	ExpressionStatement	"s -> dsp . diff_pixels ( s -> block [ 5 ] , ptr_cr , dest_cr , wrap_c )"	407:12:9006:9062	3000266	1	True				
ANR	3001867	CallExpression	"s -> dsp . diff_pixels ( s -> block [ 5 ] , ptr_cr , dest_cr , wrap_c )"		3000266	0					
ANR	3001868	Callee	s -> dsp . diff_pixels		3000266	0					
ANR	3001869	MemberAccess	s -> dsp . diff_pixels		3000266	0					
ANR	3001870	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001871	Identifier	s		3000266	0					
ANR	3001872	Identifier	dsp		3000266	1					
ANR	3001873	Identifier	diff_pixels		3000266	1					
ANR	3001874	ArgumentList	s -> block [ 5 ]		3000266	1					
ANR	3001875	Argument	s -> block [ 5 ]		3000266	0					
ANR	3001876	ArrayIndexing	s -> block [ 5 ]		3000266	0					
ANR	3001877	PtrMemberAccess	s -> block		3000266	0					
ANR	3001878	Identifier	s		3000266	0					
ANR	3001879	Identifier	block		3000266	1					
ANR	3001880	PrimaryExpression	5		3000266	1					
ANR	3001881	Argument	ptr_cr		3000266	1					
ANR	3001882	Identifier	ptr_cr		3000266	0					
ANR	3001883	Argument	dest_cr		3000266	2					
ANR	3001884	Identifier	dest_cr		3000266	0					
ANR	3001885	Argument	wrap_c		3000266	3					
ANR	3001886	Identifier	wrap_c		3000266	0					
ANR	3001887	IfStatement	if ( ! s -> chroma_y_shift )		3000266	2					
ANR	3001888	Condition	! s -> chroma_y_shift	409:16:9081:9098	3000266	0	True				
ANR	3001889	UnaryOperationExpression	! s -> chroma_y_shift		3000266	0					
ANR	3001890	UnaryOperator	!		3000266	0					
ANR	3001891	PtrMemberAccess	s -> chroma_y_shift		3000266	1					
ANR	3001892	Identifier	s		3000266	0					
ANR	3001893	Identifier	chroma_y_shift		3000266	1					
ANR	3001894	CompoundStatement		399:36:8747:8747	3000266	1					
ANR	3001895	ExpressionStatement	"s -> dsp . diff_pixels ( s -> block [ 6 ] , ptr_cb + uv_dct_offset , dest_cb + uv_dct_offset , wrap_c )"	411:16:9130:9254	3000266	0	True				
ANR	3001896	CallExpression	"s -> dsp . diff_pixels ( s -> block [ 6 ] , ptr_cb + uv_dct_offset , dest_cb + uv_dct_offset , wrap_c )"		3000266	0					
ANR	3001897	Callee	s -> dsp . diff_pixels		3000266	0					
ANR	3001898	MemberAccess	s -> dsp . diff_pixels		3000266	0					
ANR	3001899	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001900	Identifier	s		3000266	0					
ANR	3001901	Identifier	dsp		3000266	1					
ANR	3001902	Identifier	diff_pixels		3000266	1					
ANR	3001903	ArgumentList	s -> block [ 6 ]		3000266	1					
ANR	3001904	Argument	s -> block [ 6 ]		3000266	0					
ANR	3001905	ArrayIndexing	s -> block [ 6 ]		3000266	0					
ANR	3001906	PtrMemberAccess	s -> block		3000266	0					
ANR	3001907	Identifier	s		3000266	0					
ANR	3001908	Identifier	block		3000266	1					
ANR	3001909	PrimaryExpression	6		3000266	1					
ANR	3001910	Argument	ptr_cb + uv_dct_offset		3000266	1					
ANR	3001911	AdditiveExpression	ptr_cb + uv_dct_offset		3000266	0		+			
ANR	3001912	Identifier	ptr_cb		3000266	0					
ANR	3001913	Identifier	uv_dct_offset		3000266	1					
ANR	3001914	Argument	dest_cb + uv_dct_offset		3000266	2					
ANR	3001915	AdditiveExpression	dest_cb + uv_dct_offset		3000266	0		+			
ANR	3001916	Identifier	dest_cb		3000266	0					
ANR	3001917	Identifier	uv_dct_offset		3000266	1					
ANR	3001918	Argument	wrap_c		3000266	3					
ANR	3001919	Identifier	wrap_c		3000266	0					
ANR	3001920	ExpressionStatement	"s -> dsp . diff_pixels ( s -> block [ 7 ] , ptr_cr + uv_dct_offset , dest_cr + uv_dct_offset , wrap_c )"	415:16:9273:9397	3000266	1	True				
ANR	3001921	CallExpression	"s -> dsp . diff_pixels ( s -> block [ 7 ] , ptr_cr + uv_dct_offset , dest_cr + uv_dct_offset , wrap_c )"		3000266	0					
ANR	3001922	Callee	s -> dsp . diff_pixels		3000266	0					
ANR	3001923	MemberAccess	s -> dsp . diff_pixels		3000266	0					
ANR	3001924	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001925	Identifier	s		3000266	0					
ANR	3001926	Identifier	dsp		3000266	1					
ANR	3001927	Identifier	diff_pixels		3000266	1					
ANR	3001928	ArgumentList	s -> block [ 7 ]		3000266	1					
ANR	3001929	Argument	s -> block [ 7 ]		3000266	0					
ANR	3001930	ArrayIndexing	s -> block [ 7 ]		3000266	0					
ANR	3001931	PtrMemberAccess	s -> block		3000266	0					
ANR	3001932	Identifier	s		3000266	0					
ANR	3001933	Identifier	block		3000266	1					
ANR	3001934	PrimaryExpression	7		3000266	1					
ANR	3001935	Argument	ptr_cr + uv_dct_offset		3000266	1					
ANR	3001936	AdditiveExpression	ptr_cr + uv_dct_offset		3000266	0		+			
ANR	3001937	Identifier	ptr_cr		3000266	0					
ANR	3001938	Identifier	uv_dct_offset		3000266	1					
ANR	3001939	Argument	dest_cr + uv_dct_offset		3000266	2					
ANR	3001940	AdditiveExpression	dest_cr + uv_dct_offset		3000266	0		+			
ANR	3001941	Identifier	dest_cr		3000266	0					
ANR	3001942	Identifier	uv_dct_offset		3000266	1					
ANR	3001943	Argument	wrap_c		3000266	3					
ANR	3001944	Identifier	wrap_c		3000266	0					
ANR	3001945	IfStatement	if ( s -> current_picture . mc_mb_var [ s -> mb_stride * mb_y + mb_x ] < 2 * s -> qscale * s -> qscale )		3000266	15					
ANR	3001946	Condition	s -> current_picture . mc_mb_var [ s -> mb_stride * mb_y + mb_x ] < 2 * s -> qscale * s -> qscale	425:12:9470:9570	3000266	0	True				
ANR	3001947	RelationalExpression	s -> current_picture . mc_mb_var [ s -> mb_stride * mb_y + mb_x ] < 2 * s -> qscale * s -> qscale		3000266	0		<			
ANR	3001948	ArrayIndexing	s -> current_picture . mc_mb_var [ s -> mb_stride * mb_y + mb_x ]		3000266	0					
ANR	3001949	MemberAccess	s -> current_picture . mc_mb_var		3000266	0					
ANR	3001950	PtrMemberAccess	s -> current_picture		3000266	0					
ANR	3001951	Identifier	s		3000266	0					
ANR	3001952	Identifier	current_picture		3000266	1					
ANR	3001953	Identifier	mc_mb_var		3000266	1					
ANR	3001954	AdditiveExpression	s -> mb_stride * mb_y + mb_x		3000266	1		+			
ANR	3001955	MultiplicativeExpression	s -> mb_stride * mb_y		3000266	0		*			
ANR	3001956	PtrMemberAccess	s -> mb_stride		3000266	0					
ANR	3001957	Identifier	s		3000266	0					
ANR	3001958	Identifier	mb_stride		3000266	1					
ANR	3001959	Identifier	mb_y		3000266	1					
ANR	3001960	Identifier	mb_x		3000266	1					
ANR	3001961	MultiplicativeExpression	2 * s -> qscale * s -> qscale		3000266	1		*			
ANR	3001962	PrimaryExpression	2		3000266	0					
ANR	3001963	MultiplicativeExpression	s -> qscale * s -> qscale		3000266	1		*			
ANR	3001964	PtrMemberAccess	s -> qscale		3000266	0					
ANR	3001965	Identifier	s		3000266	0					
ANR	3001966	Identifier	qscale		3000266	1					
ANR	3001967	PtrMemberAccess	s -> qscale		3000266	1					
ANR	3001968	Identifier	s		3000266	0					
ANR	3001969	Identifier	qscale		3000266	1					
ANR	3001970	CompoundStatement		417:43:9219:9219	3000266	1					
ANR	3001971	IfStatement	"if ( s -> dsp . sad [ 1 ] ( NULL , ptr_y , dest_y , wrap_y , 8 ) < 20 * s -> qscale )"		3000266	0					
ANR	3001972	Condition	"s -> dsp . sad [ 1 ] ( NULL , ptr_y , dest_y , wrap_y , 8 ) < 20 * s -> qscale"	431:16:9623:9716	3000266	0	True				
ANR	3001973	RelationalExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_y , dest_y , wrap_y , 8 ) < 20 * s -> qscale"		3000266	0		<			
ANR	3001974	CallExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_y , dest_y , wrap_y , 8 )"		3000266	0					
ANR	3001975	Callee	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3001976	ArrayIndexing	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3001977	MemberAccess	s -> dsp . sad		3000266	0					
ANR	3001978	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3001979	Identifier	s		3000266	0					
ANR	3001980	Identifier	dsp		3000266	1					
ANR	3001981	Identifier	sad		3000266	1					
ANR	3001982	PrimaryExpression	1		3000266	1					
ANR	3001983	ArgumentList	NULL		3000266	1					
ANR	3001984	Argument	NULL		3000266	0					
ANR	3001985	Identifier	NULL		3000266	0					
ANR	3001986	Argument	ptr_y		3000266	1					
ANR	3001987	Identifier	ptr_y		3000266	0					
ANR	3001988	Argument	dest_y		3000266	2					
ANR	3001989	Identifier	dest_y		3000266	0					
ANR	3001990	Argument	wrap_y		3000266	3					
ANR	3001991	Identifier	wrap_y		3000266	0					
ANR	3001992	Argument	8		3000266	4					
ANR	3001993	PrimaryExpression	8		3000266	0					
ANR	3001994	MultiplicativeExpression	20 * s -> qscale		3000266	1		*			
ANR	3001995	PrimaryExpression	20		3000266	0					
ANR	3001996	PtrMemberAccess	s -> qscale		3000266	1					
ANR	3001997	Identifier	s		3000266	0					
ANR	3001998	Identifier	qscale		3000266	1					
ANR	3001999	ExpressionStatement	skip_dct [ 0 ] = 1	435:16:9736:9751	3000266	1	True				
ANR	3002000	AssignmentExpression	skip_dct [ 0 ] = 1		3000266	0		=			
ANR	3002001	ArrayIndexing	skip_dct [ 0 ]		3000266	0					
ANR	3002002	Identifier	skip_dct		3000266	0					
ANR	3002003	PrimaryExpression	0		3000266	1					
ANR	3002004	PrimaryExpression	1		3000266	1					
ANR	3002005	IfStatement	"if ( s -> dsp . sad [ 1 ] ( NULL , ptr_y + 8 , dest_y + 8 , wrap_y , 8 ) < 20 * s -> qscale )"		3000266	1					
ANR	3002006	Condition	"s -> dsp . sad [ 1 ] ( NULL , ptr_y + 8 , dest_y + 8 , wrap_y , 8 ) < 20 * s -> qscale"	437:16:9770:9870	3000266	0	True				
ANR	3002007	RelationalExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_y + 8 , dest_y + 8 , wrap_y , 8 ) < 20 * s -> qscale"		3000266	0		<			
ANR	3002008	CallExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_y + 8 , dest_y + 8 , wrap_y , 8 )"		3000266	0					
ANR	3002009	Callee	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002010	ArrayIndexing	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002011	MemberAccess	s -> dsp . sad		3000266	0					
ANR	3002012	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3002013	Identifier	s		3000266	0					
ANR	3002014	Identifier	dsp		3000266	1					
ANR	3002015	Identifier	sad		3000266	1					
ANR	3002016	PrimaryExpression	1		3000266	1					
ANR	3002017	ArgumentList	NULL		3000266	1					
ANR	3002018	Argument	NULL		3000266	0					
ANR	3002019	Identifier	NULL		3000266	0					
ANR	3002020	Argument	ptr_y + 8		3000266	1					
ANR	3002021	AdditiveExpression	ptr_y + 8		3000266	0		+			
ANR	3002022	Identifier	ptr_y		3000266	0					
ANR	3002023	PrimaryExpression	8		3000266	1					
ANR	3002024	Argument	dest_y + 8		3000266	2					
ANR	3002025	AdditiveExpression	dest_y + 8		3000266	0		+			
ANR	3002026	Identifier	dest_y		3000266	0					
ANR	3002027	PrimaryExpression	8		3000266	1					
ANR	3002028	Argument	wrap_y		3000266	3					
ANR	3002029	Identifier	wrap_y		3000266	0					
ANR	3002030	Argument	8		3000266	4					
ANR	3002031	PrimaryExpression	8		3000266	0					
ANR	3002032	MultiplicativeExpression	20 * s -> qscale		3000266	1		*			
ANR	3002033	PrimaryExpression	20		3000266	0					
ANR	3002034	PtrMemberAccess	s -> qscale		3000266	1					
ANR	3002035	Identifier	s		3000266	0					
ANR	3002036	Identifier	qscale		3000266	1					
ANR	3002037	ExpressionStatement	skip_dct [ 1 ] = 1	441:16:9890:9905	3000266	1	True				
ANR	3002038	AssignmentExpression	skip_dct [ 1 ] = 1		3000266	0		=			
ANR	3002039	ArrayIndexing	skip_dct [ 1 ]		3000266	0					
ANR	3002040	Identifier	skip_dct		3000266	0					
ANR	3002041	PrimaryExpression	1		3000266	1					
ANR	3002042	PrimaryExpression	1		3000266	1					
ANR	3002043	IfStatement	"if ( s -> dsp . sad [ 1 ] ( NULL , ptr_y + dct_offset , dest_y + dct_offset , wrap_y , 8 ) < 20 * s -> qscale )"		3000266	2					
ANR	3002044	Condition	"s -> dsp . sad [ 1 ] ( NULL , ptr_y + dct_offset , dest_y + dct_offset , wrap_y , 8 ) < 20 * s -> qscale"	443:16:9924:10042	3000266	0	True				
ANR	3002045	RelationalExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_y + dct_offset , dest_y + dct_offset , wrap_y , 8 ) < 20 * s -> qscale"		3000266	0		<			
ANR	3002046	CallExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_y + dct_offset , dest_y + dct_offset , wrap_y , 8 )"		3000266	0					
ANR	3002047	Callee	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002048	ArrayIndexing	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002049	MemberAccess	s -> dsp . sad		3000266	0					
ANR	3002050	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3002051	Identifier	s		3000266	0					
ANR	3002052	Identifier	dsp		3000266	1					
ANR	3002053	Identifier	sad		3000266	1					
ANR	3002054	PrimaryExpression	1		3000266	1					
ANR	3002055	ArgumentList	NULL		3000266	1					
ANR	3002056	Argument	NULL		3000266	0					
ANR	3002057	Identifier	NULL		3000266	0					
ANR	3002058	Argument	ptr_y + dct_offset		3000266	1					
ANR	3002059	AdditiveExpression	ptr_y + dct_offset		3000266	0		+			
ANR	3002060	Identifier	ptr_y		3000266	0					
ANR	3002061	Identifier	dct_offset		3000266	1					
ANR	3002062	Argument	dest_y + dct_offset		3000266	2					
ANR	3002063	AdditiveExpression	dest_y + dct_offset		3000266	0		+			
ANR	3002064	Identifier	dest_y		3000266	0					
ANR	3002065	Identifier	dct_offset		3000266	1					
ANR	3002066	Argument	wrap_y		3000266	3					
ANR	3002067	Identifier	wrap_y		3000266	0					
ANR	3002068	Argument	8		3000266	4					
ANR	3002069	PrimaryExpression	8		3000266	0					
ANR	3002070	MultiplicativeExpression	20 * s -> qscale		3000266	1		*			
ANR	3002071	PrimaryExpression	20		3000266	0					
ANR	3002072	PtrMemberAccess	s -> qscale		3000266	1					
ANR	3002073	Identifier	s		3000266	0					
ANR	3002074	Identifier	qscale		3000266	1					
ANR	3002075	ExpressionStatement	skip_dct [ 2 ] = 1	447:16:10062:10077	3000266	1	True				
ANR	3002076	AssignmentExpression	skip_dct [ 2 ] = 1		3000266	0		=			
ANR	3002077	ArrayIndexing	skip_dct [ 2 ]		3000266	0					
ANR	3002078	Identifier	skip_dct		3000266	0					
ANR	3002079	PrimaryExpression	2		3000266	1					
ANR	3002080	PrimaryExpression	1		3000266	1					
ANR	3002081	IfStatement	"if ( s -> dsp . sad [ 1 ] ( NULL , ptr_y + dct_offset + 8 , dest_y + dct_offset + 8 , wrap_y , 8 ) < 20 * s -> qscale )"		3000266	3					
ANR	3002082	Condition	"s -> dsp . sad [ 1 ] ( NULL , ptr_y + dct_offset + 8 , dest_y + dct_offset + 8 , wrap_y , 8 ) < 20 * s -> qscale"	449:16:10096:10253	3000266	0	True				
ANR	3002083	RelationalExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_y + dct_offset + 8 , dest_y + dct_offset + 8 , wrap_y , 8 ) < 20 * s -> qscale"		3000266	0		<			
ANR	3002084	CallExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_y + dct_offset + 8 , dest_y + dct_offset + 8 , wrap_y , 8 )"		3000266	0					
ANR	3002085	Callee	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002086	ArrayIndexing	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002087	MemberAccess	s -> dsp . sad		3000266	0					
ANR	3002088	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3002089	Identifier	s		3000266	0					
ANR	3002090	Identifier	dsp		3000266	1					
ANR	3002091	Identifier	sad		3000266	1					
ANR	3002092	PrimaryExpression	1		3000266	1					
ANR	3002093	ArgumentList	NULL		3000266	1					
ANR	3002094	Argument	NULL		3000266	0					
ANR	3002095	Identifier	NULL		3000266	0					
ANR	3002096	Argument	ptr_y + dct_offset + 8		3000266	1					
ANR	3002097	AdditiveExpression	ptr_y + dct_offset + 8		3000266	0		+			
ANR	3002098	Identifier	ptr_y		3000266	0					
ANR	3002099	AdditiveExpression	dct_offset + 8		3000266	1		+			
ANR	3002100	Identifier	dct_offset		3000266	0					
ANR	3002101	PrimaryExpression	8		3000266	1					
ANR	3002102	Argument	dest_y + dct_offset + 8		3000266	2					
ANR	3002103	AdditiveExpression	dest_y + dct_offset + 8		3000266	0		+			
ANR	3002104	Identifier	dest_y		3000266	0					
ANR	3002105	AdditiveExpression	dct_offset + 8		3000266	1		+			
ANR	3002106	Identifier	dct_offset		3000266	0					
ANR	3002107	PrimaryExpression	8		3000266	1					
ANR	3002108	Argument	wrap_y		3000266	3					
ANR	3002109	Identifier	wrap_y		3000266	0					
ANR	3002110	Argument	8		3000266	4					
ANR	3002111	PrimaryExpression	8		3000266	0					
ANR	3002112	MultiplicativeExpression	20 * s -> qscale		3000266	1		*			
ANR	3002113	PrimaryExpression	20		3000266	0					
ANR	3002114	PtrMemberAccess	s -> qscale		3000266	1					
ANR	3002115	Identifier	s		3000266	0					
ANR	3002116	Identifier	qscale		3000266	1					
ANR	3002117	ExpressionStatement	skip_dct [ 3 ] = 1	455:16:10273:10288	3000266	1	True				
ANR	3002118	AssignmentExpression	skip_dct [ 3 ] = 1		3000266	0		=			
ANR	3002119	ArrayIndexing	skip_dct [ 3 ]		3000266	0					
ANR	3002120	Identifier	skip_dct		3000266	0					
ANR	3002121	PrimaryExpression	3		3000266	1					
ANR	3002122	PrimaryExpression	1		3000266	1					
ANR	3002123	IfStatement	"if ( s -> dsp . sad [ 1 ] ( NULL , ptr_cb , dest_cb , wrap_c , 8 ) < 20 * s -> qscale )"		3000266	4					
ANR	3002124	Condition	"s -> dsp . sad [ 1 ] ( NULL , ptr_cb , dest_cb , wrap_c , 8 ) < 20 * s -> qscale"	457:16:10307:10401	3000266	0	True				
ANR	3002125	RelationalExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_cb , dest_cb , wrap_c , 8 ) < 20 * s -> qscale"		3000266	0		<			
ANR	3002126	CallExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_cb , dest_cb , wrap_c , 8 )"		3000266	0					
ANR	3002127	Callee	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002128	ArrayIndexing	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002129	MemberAccess	s -> dsp . sad		3000266	0					
ANR	3002130	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3002131	Identifier	s		3000266	0					
ANR	3002132	Identifier	dsp		3000266	1					
ANR	3002133	Identifier	sad		3000266	1					
ANR	3002134	PrimaryExpression	1		3000266	1					
ANR	3002135	ArgumentList	NULL		3000266	1					
ANR	3002136	Argument	NULL		3000266	0					
ANR	3002137	Identifier	NULL		3000266	0					
ANR	3002138	Argument	ptr_cb		3000266	1					
ANR	3002139	Identifier	ptr_cb		3000266	0					
ANR	3002140	Argument	dest_cb		3000266	2					
ANR	3002141	Identifier	dest_cb		3000266	0					
ANR	3002142	Argument	wrap_c		3000266	3					
ANR	3002143	Identifier	wrap_c		3000266	0					
ANR	3002144	Argument	8		3000266	4					
ANR	3002145	PrimaryExpression	8		3000266	0					
ANR	3002146	MultiplicativeExpression	20 * s -> qscale		3000266	1		*			
ANR	3002147	PrimaryExpression	20		3000266	0					
ANR	3002148	PtrMemberAccess	s -> qscale		3000266	1					
ANR	3002149	Identifier	s		3000266	0					
ANR	3002150	Identifier	qscale		3000266	1					
ANR	3002151	ExpressionStatement	skip_dct [ 4 ] = 1	461:16:10421:10436	3000266	1	True				
ANR	3002152	AssignmentExpression	skip_dct [ 4 ] = 1		3000266	0		=			
ANR	3002153	ArrayIndexing	skip_dct [ 4 ]		3000266	0					
ANR	3002154	Identifier	skip_dct		3000266	0					
ANR	3002155	PrimaryExpression	4		3000266	1					
ANR	3002156	PrimaryExpression	1		3000266	1					
ANR	3002157	IfStatement	"if ( s -> dsp . sad [ 1 ] ( NULL , ptr_cr , dest_cr , wrap_c , 8 ) < 20 * s -> qscale )"		3000266	5					
ANR	3002158	Condition	"s -> dsp . sad [ 1 ] ( NULL , ptr_cr , dest_cr , wrap_c , 8 ) < 20 * s -> qscale"	463:16:10455:10549	3000266	0	True				
ANR	3002159	RelationalExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_cr , dest_cr , wrap_c , 8 ) < 20 * s -> qscale"		3000266	0		<			
ANR	3002160	CallExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_cr , dest_cr , wrap_c , 8 )"		3000266	0					
ANR	3002161	Callee	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002162	ArrayIndexing	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002163	MemberAccess	s -> dsp . sad		3000266	0					
ANR	3002164	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3002165	Identifier	s		3000266	0					
ANR	3002166	Identifier	dsp		3000266	1					
ANR	3002167	Identifier	sad		3000266	1					
ANR	3002168	PrimaryExpression	1		3000266	1					
ANR	3002169	ArgumentList	NULL		3000266	1					
ANR	3002170	Argument	NULL		3000266	0					
ANR	3002171	Identifier	NULL		3000266	0					
ANR	3002172	Argument	ptr_cr		3000266	1					
ANR	3002173	Identifier	ptr_cr		3000266	0					
ANR	3002174	Argument	dest_cr		3000266	2					
ANR	3002175	Identifier	dest_cr		3000266	0					
ANR	3002176	Argument	wrap_c		3000266	3					
ANR	3002177	Identifier	wrap_c		3000266	0					
ANR	3002178	Argument	8		3000266	4					
ANR	3002179	PrimaryExpression	8		3000266	0					
ANR	3002180	MultiplicativeExpression	20 * s -> qscale		3000266	1		*			
ANR	3002181	PrimaryExpression	20		3000266	0					
ANR	3002182	PtrMemberAccess	s -> qscale		3000266	1					
ANR	3002183	Identifier	s		3000266	0					
ANR	3002184	Identifier	qscale		3000266	1					
ANR	3002185	ExpressionStatement	skip_dct [ 5 ] = 1	467:16:10569:10584	3000266	1	True				
ANR	3002186	AssignmentExpression	skip_dct [ 5 ] = 1		3000266	0		=			
ANR	3002187	ArrayIndexing	skip_dct [ 5 ]		3000266	0					
ANR	3002188	Identifier	skip_dct		3000266	0					
ANR	3002189	PrimaryExpression	5		3000266	1					
ANR	3002190	PrimaryExpression	1		3000266	1					
ANR	3002191	IfStatement	if ( ! s -> chroma_y_shift )		3000266	6					
ANR	3002192	Condition	! s -> chroma_y_shift	469:16:10603:10620	3000266	0	True				
ANR	3002193	UnaryOperationExpression	! s -> chroma_y_shift		3000266	0					
ANR	3002194	UnaryOperator	!		3000266	0					
ANR	3002195	PtrMemberAccess	s -> chroma_y_shift		3000266	1					
ANR	3002196	Identifier	s		3000266	0					
ANR	3002197	Identifier	chroma_y_shift		3000266	1					
ANR	3002198	CompoundStatement		459:36:10269:10269	3000266	1					
ANR	3002199	IfStatement	"if ( s -> dsp . sad [ 1 ] ( NULL , ptr_cb + uv_dct_offset , dest_cb + uv_dct_offset , wrap_c , 8 ) < 20 * s -> qscale )"		3000266	0					
ANR	3002200	Condition	"s -> dsp . sad [ 1 ] ( NULL , ptr_cb + uv_dct_offset , dest_cb + uv_dct_offset , wrap_c , 8 ) < 20 * s -> qscale"	471:20:10656:10821	3000266	0	True				
ANR	3002201	RelationalExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_cb + uv_dct_offset , dest_cb + uv_dct_offset , wrap_c , 8 ) < 20 * s -> qscale"		3000266	0		<			
ANR	3002202	CallExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_cb + uv_dct_offset , dest_cb + uv_dct_offset , wrap_c , 8 )"		3000266	0					
ANR	3002203	Callee	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002204	ArrayIndexing	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002205	MemberAccess	s -> dsp . sad		3000266	0					
ANR	3002206	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3002207	Identifier	s		3000266	0					
ANR	3002208	Identifier	dsp		3000266	1					
ANR	3002209	Identifier	sad		3000266	1					
ANR	3002210	PrimaryExpression	1		3000266	1					
ANR	3002211	ArgumentList	NULL		3000266	1					
ANR	3002212	Argument	NULL		3000266	0					
ANR	3002213	Identifier	NULL		3000266	0					
ANR	3002214	Argument	ptr_cb + uv_dct_offset		3000266	1					
ANR	3002215	AdditiveExpression	ptr_cb + uv_dct_offset		3000266	0		+			
ANR	3002216	Identifier	ptr_cb		3000266	0					
ANR	3002217	Identifier	uv_dct_offset		3000266	1					
ANR	3002218	Argument	dest_cb + uv_dct_offset		3000266	2					
ANR	3002219	AdditiveExpression	dest_cb + uv_dct_offset		3000266	0		+			
ANR	3002220	Identifier	dest_cb		3000266	0					
ANR	3002221	Identifier	uv_dct_offset		3000266	1					
ANR	3002222	Argument	wrap_c		3000266	3					
ANR	3002223	Identifier	wrap_c		3000266	0					
ANR	3002224	Argument	8		3000266	4					
ANR	3002225	PrimaryExpression	8		3000266	0					
ANR	3002226	MultiplicativeExpression	20 * s -> qscale		3000266	1		*			
ANR	3002227	PrimaryExpression	20		3000266	0					
ANR	3002228	PtrMemberAccess	s -> qscale		3000266	1					
ANR	3002229	Identifier	s		3000266	0					
ANR	3002230	Identifier	qscale		3000266	1					
ANR	3002231	ExpressionStatement	skip_dct [ 6 ] = 1	477:20:10845:10860	3000266	1	True				
ANR	3002232	AssignmentExpression	skip_dct [ 6 ] = 1		3000266	0		=			
ANR	3002233	ArrayIndexing	skip_dct [ 6 ]		3000266	0					
ANR	3002234	Identifier	skip_dct		3000266	0					
ANR	3002235	PrimaryExpression	6		3000266	1					
ANR	3002236	PrimaryExpression	1		3000266	1					
ANR	3002237	IfStatement	"if ( s -> dsp . sad [ 1 ] ( NULL , ptr_cr + uv_dct_offset , dest_cr + uv_dct_offset , wrap_c , 8 ) < 20 * s -> qscale )"		3000266	1					
ANR	3002238	Condition	"s -> dsp . sad [ 1 ] ( NULL , ptr_cr + uv_dct_offset , dest_cr + uv_dct_offset , wrap_c , 8 ) < 20 * s -> qscale"	479:20:10883:11048	3000266	0	True				
ANR	3002239	RelationalExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_cr + uv_dct_offset , dest_cr + uv_dct_offset , wrap_c , 8 ) < 20 * s -> qscale"		3000266	0		<			
ANR	3002240	CallExpression	"s -> dsp . sad [ 1 ] ( NULL , ptr_cr + uv_dct_offset , dest_cr + uv_dct_offset , wrap_c , 8 )"		3000266	0					
ANR	3002241	Callee	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002242	ArrayIndexing	s -> dsp . sad [ 1 ]		3000266	0					
ANR	3002243	MemberAccess	s -> dsp . sad		3000266	0					
ANR	3002244	PtrMemberAccess	s -> dsp		3000266	0					
ANR	3002245	Identifier	s		3000266	0					
ANR	3002246	Identifier	dsp		3000266	1					
ANR	3002247	Identifier	sad		3000266	1					
ANR	3002248	PrimaryExpression	1		3000266	1					
ANR	3002249	ArgumentList	NULL		3000266	1					
ANR	3002250	Argument	NULL		3000266	0					
ANR	3002251	Identifier	NULL		3000266	0					
ANR	3002252	Argument	ptr_cr + uv_dct_offset		3000266	1					
ANR	3002253	AdditiveExpression	ptr_cr + uv_dct_offset		3000266	0		+			
ANR	3002254	Identifier	ptr_cr		3000266	0					
ANR	3002255	Identifier	uv_dct_offset		3000266	1					
ANR	3002256	Argument	dest_cr + uv_dct_offset		3000266	2					
ANR	3002257	AdditiveExpression	dest_cr + uv_dct_offset		3000266	0		+			
ANR	3002258	Identifier	dest_cr		3000266	0					
ANR	3002259	Identifier	uv_dct_offset		3000266	1					
ANR	3002260	Argument	wrap_c		3000266	3					
ANR	3002261	Identifier	wrap_c		3000266	0					
ANR	3002262	Argument	8		3000266	4					
ANR	3002263	PrimaryExpression	8		3000266	0					
ANR	3002264	MultiplicativeExpression	20 * s -> qscale		3000266	1		*			
ANR	3002265	PrimaryExpression	20		3000266	0					
ANR	3002266	PtrMemberAccess	s -> qscale		3000266	1					
ANR	3002267	Identifier	s		3000266	0					
ANR	3002268	Identifier	qscale		3000266	1					
ANR	3002269	ExpressionStatement	skip_dct [ 7 ] = 1	485:20:11072:11087	3000266	1	True				
ANR	3002270	AssignmentExpression	skip_dct [ 7 ] = 1		3000266	0		=			
ANR	3002271	ArrayIndexing	skip_dct [ 7 ]		3000266	0					
ANR	3002272	Identifier	skip_dct		3000266	0					
ANR	3002273	PrimaryExpression	7		3000266	1					
ANR	3002274	PrimaryExpression	1		3000266	1					
ANR	3002275	IfStatement	if ( s -> quantizer_noise_shaping )		3000266	21					
ANR	3002276	Condition	s -> quantizer_noise_shaping	495:8:11133:11158	3000266	0	True				
ANR	3002277	PtrMemberAccess	s -> quantizer_noise_shaping		3000266	0					
ANR	3002278	Identifier	s		3000266	0					
ANR	3002279	Identifier	quantizer_noise_shaping		3000266	1					
ANR	3002280	CompoundStatement		485:36:10807:10807	3000266	1					
ANR	3002281	IfStatement	if ( ! skip_dct [ 0 ] )		3000266	0					
ANR	3002282	Condition	! skip_dct [ 0 ]	497:12:11176:11187	3000266	0	True				
ANR	3002283	UnaryOperationExpression	! skip_dct [ 0 ]		3000266	0					
ANR	3002284	UnaryOperator	!		3000266	0					
ANR	3002285	ArrayIndexing	skip_dct [ 0 ]		3000266	1					
ANR	3002286	Identifier	skip_dct		3000266	0					
ANR	3002287	PrimaryExpression	0		3000266	1					
ANR	3002288	ExpressionStatement	"get_visual_weight ( weight [ 0 ] , ptr_y , wrap_y )"	499:12:11203:11263	3000266	1	True				
ANR	3002289	CallExpression	"get_visual_weight ( weight [ 0 ] , ptr_y , wrap_y )"		3000266	0					
ANR	3002290	Callee	get_visual_weight		3000266	0					
ANR	3002291	Identifier	get_visual_weight		3000266	0					
ANR	3002292	ArgumentList	weight [ 0 ]		3000266	1					
ANR	3002293	Argument	weight [ 0 ]		3000266	0					
ANR	3002294	ArrayIndexing	weight [ 0 ]		3000266	0					
ANR	3002295	Identifier	weight		3000266	0					
ANR	3002296	PrimaryExpression	0		3000266	1					
ANR	3002297	Argument	ptr_y		3000266	1					
ANR	3002298	Identifier	ptr_y		3000266	0					
ANR	3002299	Argument	wrap_y		3000266	2					
ANR	3002300	Identifier	wrap_y		3000266	0					
ANR	3002301	IfStatement	if ( ! skip_dct [ 1 ] )		3000266	1					
ANR	3002302	Condition	! skip_dct [ 1 ]	501:12:11278:11289	3000266	0	True				
ANR	3002303	UnaryOperationExpression	! skip_dct [ 1 ]		3000266	0					
ANR	3002304	UnaryOperator	!		3000266	0					
ANR	3002305	ArrayIndexing	skip_dct [ 1 ]		3000266	1					
ANR	3002306	Identifier	skip_dct		3000266	0					
ANR	3002307	PrimaryExpression	1		3000266	1					
ANR	3002308	ExpressionStatement	"get_visual_weight ( weight [ 1 ] , ptr_y + 8 , wrap_y )"	503:12:11305:11365	3000266	1	True				
ANR	3002309	CallExpression	"get_visual_weight ( weight [ 1 ] , ptr_y + 8 , wrap_y )"		3000266	0					
ANR	3002310	Callee	get_visual_weight		3000266	0					
ANR	3002311	Identifier	get_visual_weight		3000266	0					
ANR	3002312	ArgumentList	weight [ 1 ]		3000266	1					
ANR	3002313	Argument	weight [ 1 ]		3000266	0					
ANR	3002314	ArrayIndexing	weight [ 1 ]		3000266	0					
ANR	3002315	Identifier	weight		3000266	0					
ANR	3002316	PrimaryExpression	1		3000266	1					
ANR	3002317	Argument	ptr_y + 8		3000266	1					
ANR	3002318	AdditiveExpression	ptr_y + 8		3000266	0		+			
ANR	3002319	Identifier	ptr_y		3000266	0					
ANR	3002320	PrimaryExpression	8		3000266	1					
ANR	3002321	Argument	wrap_y		3000266	2					
ANR	3002322	Identifier	wrap_y		3000266	0					
ANR	3002323	IfStatement	if ( ! skip_dct [ 2 ] )		3000266	2					
ANR	3002324	Condition	! skip_dct [ 2 ]	505:12:11380:11391	3000266	0	True				
ANR	3002325	UnaryOperationExpression	! skip_dct [ 2 ]		3000266	0					
ANR	3002326	UnaryOperator	!		3000266	0					
ANR	3002327	ArrayIndexing	skip_dct [ 2 ]		3000266	1					
ANR	3002328	Identifier	skip_dct		3000266	0					
ANR	3002329	PrimaryExpression	2		3000266	1					
ANR	3002330	ExpressionStatement	"get_visual_weight ( weight [ 2 ] , ptr_y + dct_offset , wrap_y )"	507:12:11407:11467	3000266	1	True				
ANR	3002331	CallExpression	"get_visual_weight ( weight [ 2 ] , ptr_y + dct_offset , wrap_y )"		3000266	0					
ANR	3002332	Callee	get_visual_weight		3000266	0					
ANR	3002333	Identifier	get_visual_weight		3000266	0					
ANR	3002334	ArgumentList	weight [ 2 ]		3000266	1					
ANR	3002335	Argument	weight [ 2 ]		3000266	0					
ANR	3002336	ArrayIndexing	weight [ 2 ]		3000266	0					
ANR	3002337	Identifier	weight		3000266	0					
ANR	3002338	PrimaryExpression	2		3000266	1					
ANR	3002339	Argument	ptr_y + dct_offset		3000266	1					
ANR	3002340	AdditiveExpression	ptr_y + dct_offset		3000266	0		+			
ANR	3002341	Identifier	ptr_y		3000266	0					
ANR	3002342	Identifier	dct_offset		3000266	1					
ANR	3002343	Argument	wrap_y		3000266	2					
ANR	3002344	Identifier	wrap_y		3000266	0					
ANR	3002345	IfStatement	if ( ! skip_dct [ 3 ] )		3000266	3					
ANR	3002346	Condition	! skip_dct [ 3 ]	509:12:11482:11493	3000266	0	True				
ANR	3002347	UnaryOperationExpression	! skip_dct [ 3 ]		3000266	0					
ANR	3002348	UnaryOperator	!		3000266	0					
ANR	3002349	ArrayIndexing	skip_dct [ 3 ]		3000266	1					
ANR	3002350	Identifier	skip_dct		3000266	0					
ANR	3002351	PrimaryExpression	3		3000266	1					
ANR	3002352	ExpressionStatement	"get_visual_weight ( weight [ 3 ] , ptr_y + dct_offset + 8 , wrap_y )"	511:12:11509:11569	3000266	1	True				
ANR	3002353	CallExpression	"get_visual_weight ( weight [ 3 ] , ptr_y + dct_offset + 8 , wrap_y )"		3000266	0					
ANR	3002354	Callee	get_visual_weight		3000266	0					
ANR	3002355	Identifier	get_visual_weight		3000266	0					
ANR	3002356	ArgumentList	weight [ 3 ]		3000266	1					
ANR	3002357	Argument	weight [ 3 ]		3000266	0					
ANR	3002358	ArrayIndexing	weight [ 3 ]		3000266	0					
ANR	3002359	Identifier	weight		3000266	0					
ANR	3002360	PrimaryExpression	3		3000266	1					
ANR	3002361	Argument	ptr_y + dct_offset + 8		3000266	1					
ANR	3002362	AdditiveExpression	ptr_y + dct_offset + 8		3000266	0		+			
ANR	3002363	Identifier	ptr_y		3000266	0					
ANR	3002364	AdditiveExpression	dct_offset + 8		3000266	1		+			
ANR	3002365	Identifier	dct_offset		3000266	0					
ANR	3002366	PrimaryExpression	8		3000266	1					
ANR	3002367	Argument	wrap_y		3000266	2					
ANR	3002368	Identifier	wrap_y		3000266	0					
ANR	3002369	IfStatement	if ( ! skip_dct [ 4 ] )		3000266	4					
ANR	3002370	Condition	! skip_dct [ 4 ]	513:12:11584:11595	3000266	0	True				
ANR	3002371	UnaryOperationExpression	! skip_dct [ 4 ]		3000266	0					
ANR	3002372	UnaryOperator	!		3000266	0					
ANR	3002373	ArrayIndexing	skip_dct [ 4 ]		3000266	1					
ANR	3002374	Identifier	skip_dct		3000266	0					
ANR	3002375	PrimaryExpression	4		3000266	1					
ANR	3002376	ExpressionStatement	"get_visual_weight ( weight [ 4 ] , ptr_cb , wrap_c )"	515:12:11611:11671	3000266	1	True				
ANR	3002377	CallExpression	"get_visual_weight ( weight [ 4 ] , ptr_cb , wrap_c )"		3000266	0					
ANR	3002378	Callee	get_visual_weight		3000266	0					
ANR	3002379	Identifier	get_visual_weight		3000266	0					
ANR	3002380	ArgumentList	weight [ 4 ]		3000266	1					
ANR	3002381	Argument	weight [ 4 ]		3000266	0					
ANR	3002382	ArrayIndexing	weight [ 4 ]		3000266	0					
ANR	3002383	Identifier	weight		3000266	0					
ANR	3002384	PrimaryExpression	4		3000266	1					
ANR	3002385	Argument	ptr_cb		3000266	1					
ANR	3002386	Identifier	ptr_cb		3000266	0					
ANR	3002387	Argument	wrap_c		3000266	2					
ANR	3002388	Identifier	wrap_c		3000266	0					
ANR	3002389	IfStatement	if ( ! skip_dct [ 5 ] )		3000266	5					
ANR	3002390	Condition	! skip_dct [ 5 ]	517:12:11686:11697	3000266	0	True				
ANR	3002391	UnaryOperationExpression	! skip_dct [ 5 ]		3000266	0					
ANR	3002392	UnaryOperator	!		3000266	0					
ANR	3002393	ArrayIndexing	skip_dct [ 5 ]		3000266	1					
ANR	3002394	Identifier	skip_dct		3000266	0					
ANR	3002395	PrimaryExpression	5		3000266	1					
ANR	3002396	ExpressionStatement	"get_visual_weight ( weight [ 5 ] , ptr_cr , wrap_c )"	519:12:11713:11773	3000266	1	True				
ANR	3002397	CallExpression	"get_visual_weight ( weight [ 5 ] , ptr_cr , wrap_c )"		3000266	0					
ANR	3002398	Callee	get_visual_weight		3000266	0					
ANR	3002399	Identifier	get_visual_weight		3000266	0					
ANR	3002400	ArgumentList	weight [ 5 ]		3000266	1					
ANR	3002401	Argument	weight [ 5 ]		3000266	0					
ANR	3002402	ArrayIndexing	weight [ 5 ]		3000266	0					
ANR	3002403	Identifier	weight		3000266	0					
ANR	3002404	PrimaryExpression	5		3000266	1					
ANR	3002405	Argument	ptr_cr		3000266	1					
ANR	3002406	Identifier	ptr_cr		3000266	0					
ANR	3002407	Argument	wrap_c		3000266	2					
ANR	3002408	Identifier	wrap_c		3000266	0					
ANR	3002409	IfStatement	if ( ! s -> chroma_y_shift )		3000266	6					
ANR	3002410	Condition	! s -> chroma_y_shift	521:12:11788:11805	3000266	0	True				
ANR	3002411	UnaryOperationExpression	! s -> chroma_y_shift		3000266	0					
ANR	3002412	UnaryOperator	!		3000266	0					
ANR	3002413	PtrMemberAccess	s -> chroma_y_shift		3000266	1					
ANR	3002414	Identifier	s		3000266	0					
ANR	3002415	Identifier	chroma_y_shift		3000266	1					
ANR	3002416	CompoundStatement		511:32:11454:11454	3000266	1					
ANR	3002417	IfStatement	if ( ! skip_dct [ 6 ] )		3000266	0					
ANR	3002418	Condition	! skip_dct [ 6 ]	523:16:11837:11848	3000266	0	True				
ANR	3002419	UnaryOperationExpression	! skip_dct [ 6 ]		3000266	0					
ANR	3002420	UnaryOperator	!		3000266	0					
ANR	3002421	ArrayIndexing	skip_dct [ 6 ]		3000266	1					
ANR	3002422	Identifier	skip_dct		3000266	0					
ANR	3002423	PrimaryExpression	6		3000266	1					
ANR	3002424	ExpressionStatement	"get_visual_weight ( weight [ 6 ] , ptr_cb + uv_dct_offset , wrap_c )"	525:16:11868:11963	3000266	1	True				
ANR	3002425	CallExpression	"get_visual_weight ( weight [ 6 ] , ptr_cb + uv_dct_offset , wrap_c )"		3000266	0					
ANR	3002426	Callee	get_visual_weight		3000266	0					
ANR	3002427	Identifier	get_visual_weight		3000266	0					
ANR	3002428	ArgumentList	weight [ 6 ]		3000266	1					
ANR	3002429	Argument	weight [ 6 ]		3000266	0					
ANR	3002430	ArrayIndexing	weight [ 6 ]		3000266	0					
ANR	3002431	Identifier	weight		3000266	0					
ANR	3002432	PrimaryExpression	6		3000266	1					
ANR	3002433	Argument	ptr_cb + uv_dct_offset		3000266	1					
ANR	3002434	AdditiveExpression	ptr_cb + uv_dct_offset		3000266	0		+			
ANR	3002435	Identifier	ptr_cb		3000266	0					
ANR	3002436	Identifier	uv_dct_offset		3000266	1					
ANR	3002437	Argument	wrap_c		3000266	2					
ANR	3002438	Identifier	wrap_c		3000266	0					
ANR	3002439	IfStatement	if ( ! skip_dct [ 7 ] )		3000266	1					
ANR	3002440	Condition	! skip_dct [ 7 ]	529:16:11982:11993	3000266	0	True				
ANR	3002441	UnaryOperationExpression	! skip_dct [ 7 ]		3000266	0					
ANR	3002442	UnaryOperator	!		3000266	0					
ANR	3002443	ArrayIndexing	skip_dct [ 7 ]		3000266	1					
ANR	3002444	Identifier	skip_dct		3000266	0					
ANR	3002445	PrimaryExpression	7		3000266	1					
ANR	3002446	ExpressionStatement	"get_visual_weight ( weight [ 7 ] , ptr_cr + uv_dct_offset , wrap_c )"	531:16:12013:12108	3000266	1	True				
ANR	3002447	CallExpression	"get_visual_weight ( weight [ 7 ] , ptr_cr + uv_dct_offset , wrap_c )"		3000266	0					
ANR	3002448	Callee	get_visual_weight		3000266	0					
ANR	3002449	Identifier	get_visual_weight		3000266	0					
ANR	3002450	ArgumentList	weight [ 7 ]		3000266	1					
ANR	3002451	Argument	weight [ 7 ]		3000266	0					
ANR	3002452	ArrayIndexing	weight [ 7 ]		3000266	0					
ANR	3002453	Identifier	weight		3000266	0					
ANR	3002454	PrimaryExpression	7		3000266	1					
ANR	3002455	Argument	ptr_cr + uv_dct_offset		3000266	1					
ANR	3002456	AdditiveExpression	ptr_cr + uv_dct_offset		3000266	0		+			
ANR	3002457	Identifier	ptr_cr		3000266	0					
ANR	3002458	Identifier	uv_dct_offset		3000266	1					
ANR	3002459	Argument	wrap_c		3000266	2					
ANR	3002460	Identifier	wrap_c		3000266	0					
ANR	3002461	ExpressionStatement	"memcpy ( orig [ 0 ] , s -> block [ 0 ] , sizeof ( int16_t ) * 64 * mb_block_count )"	537:8:12130:12197	3000266	7	True				
ANR	3002462	CallExpression	"memcpy ( orig [ 0 ] , s -> block [ 0 ] , sizeof ( int16_t ) * 64 * mb_block_count )"		3000266	0					
ANR	3002463	Callee	memcpy		3000266	0					
ANR	3002464	Identifier	memcpy		3000266	0					
ANR	3002465	ArgumentList	orig [ 0 ]		3000266	1					
ANR	3002466	Argument	orig [ 0 ]		3000266	0					
ANR	3002467	ArrayIndexing	orig [ 0 ]		3000266	0					
ANR	3002468	Identifier	orig		3000266	0					
ANR	3002469	PrimaryExpression	0		3000266	1					
ANR	3002470	Argument	s -> block [ 0 ]		3000266	1					
ANR	3002471	ArrayIndexing	s -> block [ 0 ]		3000266	0					
ANR	3002472	PtrMemberAccess	s -> block		3000266	0					
ANR	3002473	Identifier	s		3000266	0					
ANR	3002474	Identifier	block		3000266	1					
ANR	3002475	PrimaryExpression	0		3000266	1					
ANR	3002476	Argument	sizeof ( int16_t ) * 64 * mb_block_count		3000266	2					
ANR	3002477	MultiplicativeExpression	sizeof ( int16_t ) * 64 * mb_block_count		3000266	0		*			
ANR	3002478	SizeofExpression	sizeof ( int16_t )		3000266	0					
ANR	3002479	Sizeof	sizeof		3000266	0					
ANR	3002480	SizeofOperand	int16_t		3000266	1					
ANR	3002481	MultiplicativeExpression	64 * mb_block_count		3000266	1		*			
ANR	3002482	PrimaryExpression	64		3000266	0					
ANR	3002483	Identifier	mb_block_count		3000266	1					
ANR	3002484	ExpressionStatement	av_assert2 ( s -> out_format != FMT_MJPEG || s -> qscale == 8 )	545:4:12239:12295	3000266	22	True				
ANR	3002485	CallExpression	av_assert2 ( s -> out_format != FMT_MJPEG || s -> qscale == 8 )		3000266	0					
ANR	3002486	Callee	av_assert2		3000266	0					
ANR	3002487	Identifier	av_assert2		3000266	0					
ANR	3002488	ArgumentList	s -> out_format != FMT_MJPEG || s -> qscale == 8		3000266	1					
ANR	3002489	Argument	s -> out_format != FMT_MJPEG || s -> qscale == 8		3000266	0					
ANR	3002490	OrExpression	s -> out_format != FMT_MJPEG || s -> qscale == 8		3000266	0		||			
ANR	3002491	EqualityExpression	s -> out_format != FMT_MJPEG		3000266	0		!=			
ANR	3002492	PtrMemberAccess	s -> out_format		3000266	0					
ANR	3002493	Identifier	s		3000266	0					
ANR	3002494	Identifier	out_format		3000266	1					
ANR	3002495	Identifier	FMT_MJPEG		3000266	1					
ANR	3002496	EqualityExpression	s -> qscale == 8		3000266	1		==			
ANR	3002497	PtrMemberAccess	s -> qscale		3000266	0					
ANR	3002498	Identifier	s		3000266	0					
ANR	3002499	Identifier	qscale		3000266	1					
ANR	3002500	PrimaryExpression	8		3000266	1					
ANR	3002501	CompoundStatement		537:4:11948:11948	3000266	23					
ANR	3002502	ForStatement	for ( i = 0 ; i < mb_block_count ; i ++ )		3000266	0					
ANR	3002503	ForInit	i = 0 ;	549:13:12318:12323	3000266	0	True				
ANR	3002504	AssignmentExpression	i = 0		3000266	0		=			
ANR	3002505	Identifier	i		3000266	0					
ANR	3002506	PrimaryExpression	0		3000266	1					
ANR	3002507	Condition	i < mb_block_count	549:20:12325:12342	3000266	1	True				
ANR	3002508	RelationalExpression	i < mb_block_count		3000266	0		<			
ANR	3002509	Identifier	i		3000266	0					
ANR	3002510	Identifier	mb_block_count		3000266	1					
ANR	3002511	PostIncDecOperationExpression	i ++	549:40:12345:12347	3000266	2	True				
ANR	3002512	Identifier	i		3000266	0					
ANR	3002513	IncDec	++		3000266	1					
ANR	3002514	CompoundStatement		539:45:11996:11996	3000266	3					
ANR	3002515	IfStatement	if ( ! skip_dct [ i ] )		3000266	0					
ANR	3002516	Condition	! skip_dct [ i ]	551:16:12369:12380	3000266	0	True				
ANR	3002517	UnaryOperationExpression	! skip_dct [ i ]		3000266	0					
ANR	3002518	UnaryOperator	!		3000266	0					
ANR	3002519	ArrayIndexing	skip_dct [ i ]		3000266	1					
ANR	3002520	Identifier	skip_dct		3000266	0					
ANR	3002521	Identifier	i		3000266	1					
ANR	3002522	CompoundStatement		543:16:12048:12060	3000266	1					
ANR	3002523	IdentifierDeclStatement	int overflow ;	553:16:12402:12414	3000266	0	True				
ANR	3002524	IdentifierDecl	overflow		3000266	0					
ANR	3002525	IdentifierDeclType	int		3000266	0					
ANR	3002526	Identifier	overflow		3000266	1					
ANR	3002527	ExpressionStatement	"s -> block_last_index [ i ] = s -> dct_quantize ( s , s -> block [ i ] , i , s -> qscale , & overflow )"	555:16:12433:12514	3000266	1	True				
ANR	3002528	AssignmentExpression	"s -> block_last_index [ i ] = s -> dct_quantize ( s , s -> block [ i ] , i , s -> qscale , & overflow )"		3000266	0		=			
ANR	3002529	ArrayIndexing	s -> block_last_index [ i ]		3000266	0					
ANR	3002530	PtrMemberAccess	s -> block_last_index		3000266	0					
ANR	3002531	Identifier	s		3000266	0					
ANR	3002532	Identifier	block_last_index		3000266	1					
ANR	3002533	Identifier	i		3000266	1					
ANR	3002534	CallExpression	"s -> dct_quantize ( s , s -> block [ i ] , i , s -> qscale , & overflow )"		3000266	1					
ANR	3002535	Callee	s -> dct_quantize		3000266	0					
ANR	3002536	PtrMemberAccess	s -> dct_quantize		3000266	0					
ANR	3002537	Identifier	s		3000266	0					
ANR	3002538	Identifier	dct_quantize		3000266	1					
ANR	3002539	ArgumentList	s		3000266	1					
ANR	3002540	Argument	s		3000266	0					
ANR	3002541	Identifier	s		3000266	0					
ANR	3002542	Argument	s -> block [ i ]		3000266	1					
ANR	3002543	ArrayIndexing	s -> block [ i ]		3000266	0					
ANR	3002544	PtrMemberAccess	s -> block		3000266	0					
ANR	3002545	Identifier	s		3000266	0					
ANR	3002546	Identifier	block		3000266	1					
ANR	3002547	Identifier	i		3000266	1					
ANR	3002548	Argument	i		3000266	2					
ANR	3002549	Identifier	i		3000266	0					
ANR	3002550	Argument	s -> qscale		3000266	3					
ANR	3002551	PtrMemberAccess	s -> qscale		3000266	0					
ANR	3002552	Identifier	s		3000266	0					
ANR	3002553	Identifier	qscale		3000266	1					
ANR	3002554	Argument	& overflow		3000266	4					
ANR	3002555	UnaryOperationExpression	& overflow		3000266	0					
ANR	3002556	UnaryOperator	&		3000266	0					
ANR	3002557	Identifier	overflow		3000266	1					
ANR	3002558	IfStatement	if ( overflow )		3000266	2					
ANR	3002559	Condition	overflow	567:20:12852:12859	3000266	0	True				
ANR	3002560	Identifier	overflow		3000266	0					
ANR	3002561	ExpressionStatement	"clip_coeffs ( s , s -> block [ i ] , s -> block_last_index [ i ] )"	569:20:12883:12934	3000266	1	True				
ANR	3002562	CallExpression	"clip_coeffs ( s , s -> block [ i ] , s -> block_last_index [ i ] )"		3000266	0					
ANR	3002563	Callee	clip_coeffs		3000266	0					
ANR	3002564	Identifier	clip_coeffs		3000266	0					
ANR	3002565	ArgumentList	s		3000266	1					
ANR	3002566	Argument	s		3000266	0					
ANR	3002567	Identifier	s		3000266	0					
ANR	3002568	Argument	s -> block [ i ]		3000266	1					
ANR	3002569	ArrayIndexing	s -> block [ i ]		3000266	0					
ANR	3002570	PtrMemberAccess	s -> block		3000266	0					
ANR	3002571	Identifier	s		3000266	0					
ANR	3002572	Identifier	block		3000266	1					
ANR	3002573	Identifier	i		3000266	1					
ANR	3002574	Argument	s -> block_last_index [ i ]		3000266	2					
ANR	3002575	ArrayIndexing	s -> block_last_index [ i ]		3000266	0					
ANR	3002576	PtrMemberAccess	s -> block_last_index		3000266	0					
ANR	3002577	Identifier	s		3000266	0					
ANR	3002578	Identifier	block_last_index		3000266	1					
ANR	3002579	Identifier	i		3000266	1					
ANR	3002580	ElseStatement	else		3000266	0					
ANR	3002581	ExpressionStatement	s -> block_last_index [ i ] = - 1	573:16:12973:13000	3000266	0	True				
ANR	3002582	AssignmentExpression	s -> block_last_index [ i ] = - 1		3000266	0		=			
ANR	3002583	ArrayIndexing	s -> block_last_index [ i ]		3000266	0					
ANR	3002584	PtrMemberAccess	s -> block_last_index		3000266	0					
ANR	3002585	Identifier	s		3000266	0					
ANR	3002586	Identifier	block_last_index		3000266	1					
ANR	3002587	Identifier	i		3000266	1					
ANR	3002588	UnaryOperationExpression	- 1		3000266	1					
ANR	3002589	UnaryOperator	-		3000266	0					
ANR	3002590	PrimaryExpression	1		3000266	1					
ANR	3002591	IfStatement	if ( s -> quantizer_noise_shaping )		3000266	1					
ANR	3002592	Condition	s -> quantizer_noise_shaping	577:12:13026:13051	3000266	0	True				
ANR	3002593	PtrMemberAccess	s -> quantizer_noise_shaping		3000266	0					
ANR	3002594	Identifier	s		3000266	0					
ANR	3002595	Identifier	quantizer_noise_shaping		3000266	1					
ANR	3002596	CompoundStatement		567:40:12700:12700	3000266	1					
ANR	3002597	ForStatement	for ( i = 0 ; i < mb_block_count ; i ++ )		3000266	0					
ANR	3002598	ForInit	i = 0 ;	579:17:13074:13079	3000266	0	True				
ANR	3002599	AssignmentExpression	i = 0		3000266	0		=			
ANR	3002600	Identifier	i		3000266	0					
ANR	3002601	PrimaryExpression	0		3000266	1					
ANR	3002602	Condition	i < mb_block_count	579:24:13081:13098	3000266	1	True				
ANR	3002603	RelationalExpression	i < mb_block_count		3000266	0		<			
ANR	3002604	Identifier	i		3000266	0					
ANR	3002605	Identifier	mb_block_count		3000266	1					
ANR	3002606	PostIncDecOperationExpression	i ++	579:44:13101:13103	3000266	2	True				
ANR	3002607	Identifier	i		3000266	0					
ANR	3002608	IncDec	++		3000266	1					
ANR	3002609	CompoundStatement		569:49:12752:12752	3000266	3					
ANR	3002610	IfStatement	if ( ! skip_dct [ i ] )		3000266	0					
ANR	3002611	Condition	! skip_dct [ i ]	581:20:13129:13140	3000266	0	True				
ANR	3002612	UnaryOperationExpression	! skip_dct [ i ]		3000266	0					
ANR	3002613	UnaryOperator	!		3000266	0					
ANR	3002614	ArrayIndexing	skip_dct [ i ]		3000266	1					
ANR	3002615	Identifier	skip_dct		3000266	0					
ANR	3002616	Identifier	i		3000266	1					
ANR	3002617	CompoundStatement		571:34:12789:12789	3000266	1					
ANR	3002618	ExpressionStatement	"s -> block_last_index [ i ] = dct_quantize_refine ( s , s -> block [ i ] , weight [ i ] , orig [ i ] , i , s -> qscale )"	583:20:13166:13330	3000266	0	True				
ANR	3002619	AssignmentExpression	"s -> block_last_index [ i ] = dct_quantize_refine ( s , s -> block [ i ] , weight [ i ] , orig [ i ] , i , s -> qscale )"		3000266	0		=			
ANR	3002620	ArrayIndexing	s -> block_last_index [ i ]		3000266	0					
ANR	3002621	PtrMemberAccess	s -> block_last_index		3000266	0					
ANR	3002622	Identifier	s		3000266	0					
ANR	3002623	Identifier	block_last_index		3000266	1					
ANR	3002624	Identifier	i		3000266	1					
ANR	3002625	CallExpression	"dct_quantize_refine ( s , s -> block [ i ] , weight [ i ] , orig [ i ] , i , s -> qscale )"		3000266	1					
ANR	3002626	Callee	dct_quantize_refine		3000266	0					
ANR	3002627	Identifier	dct_quantize_refine		3000266	0					
ANR	3002628	ArgumentList	s		3000266	1					
ANR	3002629	Argument	s		3000266	0					
ANR	3002630	Identifier	s		3000266	0					
ANR	3002631	Argument	s -> block [ i ]		3000266	1					
ANR	3002632	ArrayIndexing	s -> block [ i ]		3000266	0					
ANR	3002633	PtrMemberAccess	s -> block		3000266	0					
ANR	3002634	Identifier	s		3000266	0					
ANR	3002635	Identifier	block		3000266	1					
ANR	3002636	Identifier	i		3000266	1					
ANR	3002637	Argument	weight [ i ]		3000266	2					
ANR	3002638	ArrayIndexing	weight [ i ]		3000266	0					
ANR	3002639	Identifier	weight		3000266	0					
ANR	3002640	Identifier	i		3000266	1					
ANR	3002641	Argument	orig [ i ]		3000266	3					
ANR	3002642	ArrayIndexing	orig [ i ]		3000266	0					
ANR	3002643	Identifier	orig		3000266	0					
ANR	3002644	Identifier	i		3000266	1					
ANR	3002645	Argument	i		3000266	4					
ANR	3002646	Identifier	i		3000266	0					
ANR	3002647	Argument	s -> qscale		3000266	5					
ANR	3002648	PtrMemberAccess	s -> qscale		3000266	0					
ANR	3002649	Identifier	s		3000266	0					
ANR	3002650	Identifier	qscale		3000266	1					
ANR	3002651	IfStatement	if ( s -> luma_elim_threshold && ! s -> mb_intra )		3000266	2					
ANR	3002652	Condition	s -> luma_elim_threshold && ! s -> mb_intra	597:12:13392:13429	3000266	0	True				
ANR	3002653	AndExpression	s -> luma_elim_threshold && ! s -> mb_intra		3000266	0		&&			
ANR	3002654	PtrMemberAccess	s -> luma_elim_threshold		3000266	0					
ANR	3002655	Identifier	s		3000266	0					
ANR	3002656	Identifier	luma_elim_threshold		3000266	1					
ANR	3002657	UnaryOperationExpression	! s -> mb_intra		3000266	1					
ANR	3002658	UnaryOperator	!		3000266	0					
ANR	3002659	PtrMemberAccess	s -> mb_intra		3000266	1					
ANR	3002660	Identifier	s		3000266	0					
ANR	3002661	Identifier	mb_intra		3000266	1					
ANR	3002662	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3000266	1					
ANR	3002663	ForInit	i = 0 ;	599:17:13450:13455	3000266	0	True				
ANR	3002664	AssignmentExpression	i = 0		3000266	0		=			
ANR	3002665	Identifier	i		3000266	0					
ANR	3002666	PrimaryExpression	0		3000266	1					
ANR	3002667	Condition	i < 4	599:24:13457:13461	3000266	1	True				
ANR	3002668	RelationalExpression	i < 4		3000266	0		<			
ANR	3002669	Identifier	i		3000266	0					
ANR	3002670	PrimaryExpression	4		3000266	1					
ANR	3002671	PostIncDecOperationExpression	i ++	599:31:13464:13466	3000266	2	True				
ANR	3002672	Identifier	i		3000266	0					
ANR	3002673	IncDec	++		3000266	1					
ANR	3002674	ExpressionStatement	"dct_single_coeff_elimination ( s , i , s -> luma_elim_threshold )"	601:16:13486:13544	3000266	3	True				
ANR	3002675	CallExpression	"dct_single_coeff_elimination ( s , i , s -> luma_elim_threshold )"		3000266	0					
ANR	3002676	Callee	dct_single_coeff_elimination		3000266	0					
ANR	3002677	Identifier	dct_single_coeff_elimination		3000266	0					
ANR	3002678	ArgumentList	s		3000266	1					
ANR	3002679	Argument	s		3000266	0					
ANR	3002680	Identifier	s		3000266	0					
ANR	3002681	Argument	i		3000266	1					
ANR	3002682	Identifier	i		3000266	0					
ANR	3002683	Argument	s -> luma_elim_threshold		3000266	2					
ANR	3002684	PtrMemberAccess	s -> luma_elim_threshold		3000266	0					
ANR	3002685	Identifier	s		3000266	0					
ANR	3002686	Identifier	luma_elim_threshold		3000266	1					
ANR	3002687	IfStatement	if ( s -> chroma_elim_threshold && ! s -> mb_intra )		3000266	3					
ANR	3002688	Condition	s -> chroma_elim_threshold && ! s -> mb_intra	603:12:13559:13598	3000266	0	True				
ANR	3002689	AndExpression	s -> chroma_elim_threshold && ! s -> mb_intra		3000266	0		&&			
ANR	3002690	PtrMemberAccess	s -> chroma_elim_threshold		3000266	0					
ANR	3002691	Identifier	s		3000266	0					
ANR	3002692	Identifier	chroma_elim_threshold		3000266	1					
ANR	3002693	UnaryOperationExpression	! s -> mb_intra		3000266	1					
ANR	3002694	UnaryOperator	!		3000266	0					
ANR	3002695	PtrMemberAccess	s -> mb_intra		3000266	1					
ANR	3002696	Identifier	s		3000266	0					
ANR	3002697	Identifier	mb_intra		3000266	1					
ANR	3002698	ForStatement	for ( i = 4 ; i < mb_block_count ; i ++ )		3000266	1					
ANR	3002699	ForInit	i = 4 ;	605:17:13619:13624	3000266	0	True				
ANR	3002700	AssignmentExpression	i = 4		3000266	0		=			
ANR	3002701	Identifier	i		3000266	0					
ANR	3002702	PrimaryExpression	4		3000266	1					
ANR	3002703	Condition	i < mb_block_count	605:24:13626:13643	3000266	1	True				
ANR	3002704	RelationalExpression	i < mb_block_count		3000266	0		<			
ANR	3002705	Identifier	i		3000266	0					
ANR	3002706	Identifier	mb_block_count		3000266	1					
ANR	3002707	PostIncDecOperationExpression	i ++	605:44:13646:13648	3000266	2	True				
ANR	3002708	Identifier	i		3000266	0					
ANR	3002709	IncDec	++		3000266	1					
ANR	3002710	ExpressionStatement	"dct_single_coeff_elimination ( s , i , s -> chroma_elim_threshold )"	607:16:13668:13728	3000266	3	True				
ANR	3002711	CallExpression	"dct_single_coeff_elimination ( s , i , s -> chroma_elim_threshold )"		3000266	0					
ANR	3002712	Callee	dct_single_coeff_elimination		3000266	0					
ANR	3002713	Identifier	dct_single_coeff_elimination		3000266	0					
ANR	3002714	ArgumentList	s		3000266	1					
ANR	3002715	Argument	s		3000266	0					
ANR	3002716	Identifier	s		3000266	0					
ANR	3002717	Argument	i		3000266	1					
ANR	3002718	Identifier	i		3000266	0					
ANR	3002719	Argument	s -> chroma_elim_threshold		3000266	2					
ANR	3002720	PtrMemberAccess	s -> chroma_elim_threshold		3000266	0					
ANR	3002721	Identifier	s		3000266	0					
ANR	3002722	Identifier	chroma_elim_threshold		3000266	1					
ANR	3002723	IfStatement	if ( s -> mpv_flags & FF_MPV_FLAG_CBP_RD )		3000266	4					
ANR	3002724	Condition	s -> mpv_flags & FF_MPV_FLAG_CBP_RD	611:12:13745:13777	3000266	0	True				
ANR	3002725	BitAndExpression	s -> mpv_flags & FF_MPV_FLAG_CBP_RD		3000266	0		&			
ANR	3002726	PtrMemberAccess	s -> mpv_flags		3000266	0					
ANR	3002727	Identifier	s		3000266	0					
ANR	3002728	Identifier	mpv_flags		3000266	1					
ANR	3002729	Identifier	FF_MPV_FLAG_CBP_RD		3000266	1					
ANR	3002730	CompoundStatement		601:47:13426:13426	3000266	1					
ANR	3002731	ForStatement	for ( i = 0 ; i < mb_block_count ; i ++ )		3000266	0					
ANR	3002732	ForInit	i = 0 ;	613:17:13800:13805	3000266	0	True				
ANR	3002733	AssignmentExpression	i = 0		3000266	0		=			
ANR	3002734	Identifier	i		3000266	0					
ANR	3002735	PrimaryExpression	0		3000266	1					
ANR	3002736	Condition	i < mb_block_count	613:24:13807:13824	3000266	1	True				
ANR	3002737	RelationalExpression	i < mb_block_count		3000266	0		<			
ANR	3002738	Identifier	i		3000266	0					
ANR	3002739	Identifier	mb_block_count		3000266	1					
ANR	3002740	PostIncDecOperationExpression	i ++	613:44:13827:13829	3000266	2	True				
ANR	3002741	Identifier	i		3000266	0					
ANR	3002742	IncDec	++		3000266	1					
ANR	3002743	CompoundStatement		603:49:13478:13478	3000266	3					
ANR	3002744	IfStatement	if ( s -> block_last_index [ i ] == - 1 )		3000266	0					
ANR	3002745	Condition	s -> block_last_index [ i ] == - 1	615:20:13855:13882	3000266	0	True				
ANR	3002746	EqualityExpression	s -> block_last_index [ i ] == - 1		3000266	0		==			
ANR	3002747	ArrayIndexing	s -> block_last_index [ i ]		3000266	0					
ANR	3002748	PtrMemberAccess	s -> block_last_index		3000266	0					
ANR	3002749	Identifier	s		3000266	0					
ANR	3002750	Identifier	block_last_index		3000266	1					
ANR	3002751	Identifier	i		3000266	1					
ANR	3002752	UnaryOperationExpression	- 1		3000266	1					
ANR	3002753	UnaryOperator	-		3000266	0					
ANR	3002754	PrimaryExpression	1		3000266	1					
ANR	3002755	ExpressionStatement	s -> coded_score [ i ] = INT_MAX / 256	617:20:13906:13939	3000266	1	True				
ANR	3002756	AssignmentExpression	s -> coded_score [ i ] = INT_MAX / 256		3000266	0		=			
ANR	3002757	ArrayIndexing	s -> coded_score [ i ]		3000266	0					
ANR	3002758	PtrMemberAccess	s -> coded_score		3000266	0					
ANR	3002759	Identifier	s		3000266	0					
ANR	3002760	Identifier	coded_score		3000266	1					
ANR	3002761	Identifier	i		3000266	1					
ANR	3002762	MultiplicativeExpression	INT_MAX / 256		3000266	1		/			
ANR	3002763	Identifier	INT_MAX		3000266	0					
ANR	3002764	PrimaryExpression	256		3000266	1					
ANR	3002765	IfStatement	if ( ( s -> flags & CODEC_FLAG_GRAY ) && s -> mb_intra )		3000266	24					
ANR	3002766	Condition	( s -> flags & CODEC_FLAG_GRAY ) && s -> mb_intra	627:8:13985:14027	3000266	0	True				
ANR	3002767	AndExpression	( s -> flags & CODEC_FLAG_GRAY ) && s -> mb_intra		3000266	0		&&			
ANR	3002768	BitAndExpression	s -> flags & CODEC_FLAG_GRAY		3000266	0		&			
ANR	3002769	PtrMemberAccess	s -> flags		3000266	0					
ANR	3002770	Identifier	s		3000266	0					
ANR	3002771	Identifier	flags		3000266	1					
ANR	3002772	Identifier	CODEC_FLAG_GRAY		3000266	1					
ANR	3002773	PtrMemberAccess	s -> mb_intra		3000266	1					
ANR	3002774	Identifier	s		3000266	0					
ANR	3002775	Identifier	mb_intra		3000266	1					
ANR	3002776	CompoundStatement		617:53:13676:13676	3000266	1					
ANR	3002777	ExpressionStatement	s -> block_last_index [ 4 ] = s -> block_last_index [ 5 ] = 0	629:8:14041:14101	3000266	0	True				
ANR	3002778	AssignmentExpression	s -> block_last_index [ 4 ] = s -> block_last_index [ 5 ] = 0		3000266	0		=			
ANR	3002779	ArrayIndexing	s -> block_last_index [ 4 ]		3000266	0					
ANR	3002780	PtrMemberAccess	s -> block_last_index		3000266	0					
ANR	3002781	Identifier	s		3000266	0					
ANR	3002782	Identifier	block_last_index		3000266	1					
ANR	3002783	PrimaryExpression	4		3000266	1					
ANR	3002784	AssignmentExpression	s -> block_last_index [ 5 ] = 0		3000266	1		=			
ANR	3002785	ArrayIndexing	s -> block_last_index [ 5 ]		3000266	0					
ANR	3002786	PtrMemberAccess	s -> block_last_index		3000266	0					
ANR	3002787	Identifier	s		3000266	0					
ANR	3002788	Identifier	block_last_index		3000266	1					
ANR	3002789	PrimaryExpression	5		3000266	1					
ANR	3002790	PrimaryExpression	0		3000266	1					
ANR	3002791	ExpressionStatement	s -> block [ 4 ] [ 0 ] = s -> block [ 5 ] [ 0 ] = ( 1024 + s -> c_dc_scale / 2 ) / s -> c_dc_scale	633:8:14112:14197	3000266	1	True				
ANR	3002792	AssignmentExpression	s -> block [ 4 ] [ 0 ] = s -> block [ 5 ] [ 0 ] = ( 1024 + s -> c_dc_scale / 2 ) / s -> c_dc_scale		3000266	0		=			
ANR	3002793	ArrayIndexing	s -> block [ 4 ] [ 0 ]		3000266	0					
ANR	3002794	ArrayIndexing	s -> block [ 4 ]		3000266	0					
ANR	3002795	PtrMemberAccess	s -> block		3000266	0					
ANR	3002796	Identifier	s		3000266	0					
ANR	3002797	Identifier	block		3000266	1					
ANR	3002798	PrimaryExpression	4		3000266	1					
ANR	3002799	PrimaryExpression	0		3000266	1					
ANR	3002800	AssignmentExpression	s -> block [ 5 ] [ 0 ] = ( 1024 + s -> c_dc_scale / 2 ) / s -> c_dc_scale		3000266	1		=			
ANR	3002801	ArrayIndexing	s -> block [ 5 ] [ 0 ]		3000266	0					
ANR	3002802	ArrayIndexing	s -> block [ 5 ]		3000266	0					
ANR	3002803	PtrMemberAccess	s -> block		3000266	0					
ANR	3002804	Identifier	s		3000266	0					
ANR	3002805	Identifier	block		3000266	1					
ANR	3002806	PrimaryExpression	5		3000266	1					
ANR	3002807	PrimaryExpression	0		3000266	1					
ANR	3002808	MultiplicativeExpression	( 1024 + s -> c_dc_scale / 2 ) / s -> c_dc_scale		3000266	1		/			
ANR	3002809	AdditiveExpression	1024 + s -> c_dc_scale / 2		3000266	0		+			
ANR	3002810	PrimaryExpression	1024		3000266	0					
ANR	3002811	MultiplicativeExpression	s -> c_dc_scale / 2		3000266	1		/			
ANR	3002812	PtrMemberAccess	s -> c_dc_scale		3000266	0					
ANR	3002813	Identifier	s		3000266	0					
ANR	3002814	Identifier	c_dc_scale		3000266	1					
ANR	3002815	PrimaryExpression	2		3000266	1					
ANR	3002816	PtrMemberAccess	s -> c_dc_scale		3000266	1					
ANR	3002817	Identifier	s		3000266	0					
ANR	3002818	Identifier	c_dc_scale		3000266	1					
ANR	3002819	IfStatement	if ( ! s -> chroma_y_shift )		3000266	2					
ANR	3002820	Condition	! s -> chroma_y_shift	637:12:14212:14229	3000266	0	True				
ANR	3002821	UnaryOperationExpression	! s -> chroma_y_shift		3000266	0					
ANR	3002822	UnaryOperator	!		3000266	0					
ANR	3002823	PtrMemberAccess	s -> chroma_y_shift		3000266	1					
ANR	3002824	Identifier	s		3000266	0					
ANR	3002825	Identifier	chroma_y_shift		3000266	1					
ANR	3002826	CompoundStatement		627:32:13878:13878	3000266	1					
ANR	3002827	ForStatement	for ( i = 6 ; i < 12 ; i ++ )		3000266	0					
ANR	3002828	ForInit	i = 6 ;	639:17:14268:14271	3000266	0	True				
ANR	3002829	AssignmentExpression	i = 6		3000266	0		=			
ANR	3002830	Identifier	i		3000266	0					
ANR	3002831	PrimaryExpression	6		3000266	1					
ANR	3002832	Condition	i < 12	639:22:14273:14276	3000266	1	True				
ANR	3002833	RelationalExpression	i < 12		3000266	0		<			
ANR	3002834	Identifier	i		3000266	0					
ANR	3002835	PrimaryExpression	12		3000266	1					
ANR	3002836	PostIncDecOperationExpression	i ++	639:28:14279:14281	3000266	2	True				
ANR	3002837	Identifier	i		3000266	0					
ANR	3002838	IncDec	++		3000266	1					
ANR	3002839	CompoundStatement		629:33:13930:13930	3000266	3					
ANR	3002840	ExpressionStatement	s -> block_last_index [ i ] = 0	641:16:14303:14329	3000266	0	True				
ANR	3002841	AssignmentExpression	s -> block_last_index [ i ] = 0		3000266	0		=			
ANR	3002842	ArrayIndexing	s -> block_last_index [ i ]		3000266	0					
ANR	3002843	PtrMemberAccess	s -> block_last_index		3000266	0					
ANR	3002844	Identifier	s		3000266	0					
ANR	3002845	Identifier	block_last_index		3000266	1					
ANR	3002846	Identifier	i		3000266	1					
ANR	3002847	PrimaryExpression	0		3000266	1					
ANR	3002848	ExpressionStatement	s -> block [ i ] [ 0 ] = s -> block [ 4 ] [ 0 ]	643:16:14348:14379	3000266	1	True				
ANR	3002849	AssignmentExpression	s -> block [ i ] [ 0 ] = s -> block [ 4 ] [ 0 ]		3000266	0		=			
ANR	3002850	ArrayIndexing	s -> block [ i ] [ 0 ]		3000266	0					
ANR	3002851	ArrayIndexing	s -> block [ i ]		3000266	0					
ANR	3002852	PtrMemberAccess	s -> block		3000266	0					
ANR	3002853	Identifier	s		3000266	0					
ANR	3002854	Identifier	block		3000266	1					
ANR	3002855	Identifier	i		3000266	1					
ANR	3002856	PrimaryExpression	0		3000266	1					
ANR	3002857	ArrayIndexing	s -> block [ 4 ] [ 0 ]		3000266	1					
ANR	3002858	ArrayIndexing	s -> block [ 4 ]		3000266	0					
ANR	3002859	PtrMemberAccess	s -> block		3000266	0					
ANR	3002860	Identifier	s		3000266	0					
ANR	3002861	Identifier	block		3000266	1					
ANR	3002862	PrimaryExpression	4		3000266	1					
ANR	3002863	PrimaryExpression	0		3000266	1					
ANR	3002864	IfStatement	if ( s -> alternate_scan && s -> dct_quantize != ff_dct_quantize_c )		3000266	25					
ANR	3002865	Condition	s -> alternate_scan && s -> dct_quantize != ff_dct_quantize_c	655:8:14494:14550	3000266	0	True				
ANR	3002866	AndExpression	s -> alternate_scan && s -> dct_quantize != ff_dct_quantize_c		3000266	0		&&			
ANR	3002867	PtrMemberAccess	s -> alternate_scan		3000266	0					
ANR	3002868	Identifier	s		3000266	0					
ANR	3002869	Identifier	alternate_scan		3000266	1					
ANR	3002870	EqualityExpression	s -> dct_quantize != ff_dct_quantize_c		3000266	1		!=			
ANR	3002871	PtrMemberAccess	s -> dct_quantize		3000266	0					
ANR	3002872	Identifier	s		3000266	0					
ANR	3002873	Identifier	dct_quantize		3000266	1					
ANR	3002874	Identifier	ff_dct_quantize_c		3000266	1					
ANR	3002875	CompoundStatement		645:67:14199:14199	3000266	1					
ANR	3002876	ForStatement	for ( i = 0 ; i < mb_block_count ; i ++ )		3000266	0					
ANR	3002877	ForInit	i = 0 ;	657:13:14569:14574	3000266	0	True				
ANR	3002878	AssignmentExpression	i = 0		3000266	0		=			
ANR	3002879	Identifier	i		3000266	0					
ANR	3002880	PrimaryExpression	0		3000266	1					
ANR	3002881	Condition	i < mb_block_count	657:20:14576:14593	3000266	1	True				
ANR	3002882	RelationalExpression	i < mb_block_count		3000266	0		<			
ANR	3002883	Identifier	i		3000266	0					
ANR	3002884	Identifier	mb_block_count		3000266	1					
ANR	3002885	PostIncDecOperationExpression	i ++	657:40:14596:14598	3000266	2	True				
ANR	3002886	Identifier	i		3000266	0					
ANR	3002887	IncDec	++		3000266	1					
ANR	3002888	CompoundStatement		649:12:14262:14267	3000266	3					
ANR	3002889	IdentifierDeclStatement	int j ;	659:12:14616:14621	3000266	0	True				
ANR	3002890	IdentifierDecl	j		3000266	0					
ANR	3002891	IdentifierDeclType	int		3000266	0					
ANR	3002892	Identifier	j		3000266	1					
ANR	3002893	IfStatement	if ( s -> block_last_index [ i ] > 0 )		3000266	1					
ANR	3002894	Condition	s -> block_last_index [ i ] > 0	661:16:14640:14665	3000266	0	True				
ANR	3002895	RelationalExpression	s -> block_last_index [ i ] > 0		3000266	0		>			
ANR	3002896	ArrayIndexing	s -> block_last_index [ i ]		3000266	0					
ANR	3002897	PtrMemberAccess	s -> block_last_index		3000266	0					
ANR	3002898	Identifier	s		3000266	0					
ANR	3002899	Identifier	block_last_index		3000266	1					
ANR	3002900	Identifier	i		3000266	1					
ANR	3002901	PrimaryExpression	0		3000266	1					
ANR	3002902	CompoundStatement		651:44:14314:14314	3000266	1					
ANR	3002903	ForStatement	for ( j = 63 ; j > 0 ; j -- )		3000266	0					
ANR	3002904	ForInit	j = 63 ;	663:21:14692:14698	3000266	0	True				
ANR	3002905	AssignmentExpression	j = 63		3000266	0		=			
ANR	3002906	Identifier	j		3000266	0					
ANR	3002907	PrimaryExpression	63		3000266	1					
ANR	3002908	Condition	j > 0	663:29:14700:14704	3000266	1	True				
ANR	3002909	RelationalExpression	j > 0		3000266	0		>			
ANR	3002910	Identifier	j		3000266	0					
ANR	3002911	PrimaryExpression	0		3000266	1					
ANR	3002912	PostIncDecOperationExpression	j --	663:36:14707:14709	3000266	2	True				
ANR	3002913	Identifier	j		3000266	0					
ANR	3002914	IncDec	--		3000266	1					
ANR	3002915	CompoundStatement		653:41:14358:14358	3000266	3					
ANR	3002916	IfStatement	if ( s -> block [ i ] [ s -> intra_scantable . permutated [ j ] ] )		3000266	0					
ANR	3002917	Condition	s -> block [ i ] [ s -> intra_scantable . permutated [ j ] ]	665:24:14739:14783	3000266	0	True				
ANR	3002918	ArrayIndexing	s -> block [ i ] [ s -> intra_scantable . permutated [ j ] ]		3000266	0					
ANR	3002919	ArrayIndexing	s -> block [ i ]		3000266	0					
ANR	3002920	PtrMemberAccess	s -> block		3000266	0					
ANR	3002921	Identifier	s		3000266	0					
ANR	3002922	Identifier	block		3000266	1					
ANR	3002923	Identifier	i		3000266	1					
ANR	3002924	ArrayIndexing	s -> intra_scantable . permutated [ j ]		3000266	1					
ANR	3002925	MemberAccess	s -> intra_scantable . permutated		3000266	0					
ANR	3002926	PtrMemberAccess	s -> intra_scantable		3000266	0					
ANR	3002927	Identifier	s		3000266	0					
ANR	3002928	Identifier	intra_scantable		3000266	1					
ANR	3002929	Identifier	permutated		3000266	1					
ANR	3002930	Identifier	j		3000266	1					
ANR	3002931	BreakStatement	break ;	667:24:14811:14816	3000266	1	True				
ANR	3002932	ExpressionStatement	s -> block_last_index [ i ] = j	671:16:14854:14880	3000266	1	True				
ANR	3002933	AssignmentExpression	s -> block_last_index [ i ] = j		3000266	0		=			
ANR	3002934	ArrayIndexing	s -> block_last_index [ i ]		3000266	0					
ANR	3002935	PtrMemberAccess	s -> block_last_index		3000266	0					
ANR	3002936	Identifier	s		3000266	0					
ANR	3002937	Identifier	block_last_index		3000266	1					
ANR	3002938	Identifier	i		3000266	1					
ANR	3002939	Identifier	j		3000266	1					
ANR	3002940	SwitchStatement	switch ( s -> codec_id )		3000266	26					
ANR	3002941	Condition	s -> codec_id	683:11:14955:14965	3000266	0	True				
ANR	3002942	PtrMemberAccess	s -> codec_id		3000266	0					
ANR	3002943	Identifier	s		3000266	0					
ANR	3002944	Identifier	codec_id		3000266	1					
ANR	3002945	CompoundStatement		673:23:14613:14613	3000266	1					
ANR	3002946	Label	case AV_CODEC_ID_MPEG1VIDEO :	685:4:15017:15044	3000266	0	True				
ANR	3002947	Identifier	AV_CODEC_ID_MPEG1VIDEO		3000266	0					
ANR	3002948	Label	case AV_CODEC_ID_MPEG2VIDEO :	687:4:15051:15078	3000266	1	True				
ANR	3002949	Identifier	AV_CODEC_ID_MPEG2VIDEO		3000266	0					
ANR	3002950	IfStatement	if ( CONFIG_MPEG1VIDEO_ENCODER || CONFIG_MPEG2VIDEO_ENCODER )		3000266	2					
ANR	3002951	Condition	CONFIG_MPEG1VIDEO_ENCODER || CONFIG_MPEG2VIDEO_ENCODER	689:12:15093:15146	3000266	0	True				
ANR	3002952	OrExpression	CONFIG_MPEG1VIDEO_ENCODER || CONFIG_MPEG2VIDEO_ENCODER		3000266	0		||			
ANR	3002953	Identifier	CONFIG_MPEG1VIDEO_ENCODER		3000266	0					
ANR	3002954	Identifier	CONFIG_MPEG2VIDEO_ENCODER		3000266	1					
ANR	3002955	ExpressionStatement	"ff_mpeg1_encode_mb ( s , s -> block , motion_x , motion_y )"	691:12:15162:15213	3000266	1	True				
ANR	3002956	CallExpression	"ff_mpeg1_encode_mb ( s , s -> block , motion_x , motion_y )"		3000266	0					
ANR	3002957	Callee	ff_mpeg1_encode_mb		3000266	0					
ANR	3002958	Identifier	ff_mpeg1_encode_mb		3000266	0					
ANR	3002959	ArgumentList	s		3000266	1					
ANR	3002960	Argument	s		3000266	0					
ANR	3002961	Identifier	s		3000266	0					
ANR	3002962	Argument	s -> block		3000266	1					
ANR	3002963	PtrMemberAccess	s -> block		3000266	0					
ANR	3002964	Identifier	s		3000266	0					
ANR	3002965	Identifier	block		3000266	1					
ANR	3002966	Argument	motion_x		3000266	2					
ANR	3002967	Identifier	motion_x		3000266	0					
ANR	3002968	Argument	motion_y		3000266	3					
ANR	3002969	Identifier	motion_y		3000266	0					
ANR	3002970	BreakStatement	break ;	693:8:15224:15229	3000266	3	True				
ANR	3002971	Label	case AV_CODEC_ID_MPEG4 :	695:4:15236:15258	3000266	4	True				
ANR	3002972	Identifier	AV_CODEC_ID_MPEG4		3000266	0					
ANR	3002973	IfStatement	if ( CONFIG_MPEG4_ENCODER )		3000266	5					
ANR	3002974	Condition	CONFIG_MPEG4_ENCODER	697:12:15273:15292	3000266	0	True				
ANR	3002975	Identifier	CONFIG_MPEG4_ENCODER		3000266	0					
ANR	3002976	ExpressionStatement	"ff_mpeg4_encode_mb ( s , s -> block , motion_x , motion_y )"	699:12:15308:15359	3000266	1	True				
ANR	3002977	CallExpression	"ff_mpeg4_encode_mb ( s , s -> block , motion_x , motion_y )"		3000266	0					
ANR	3002978	Callee	ff_mpeg4_encode_mb		3000266	0					
ANR	3002979	Identifier	ff_mpeg4_encode_mb		3000266	0					
ANR	3002980	ArgumentList	s		3000266	1					
ANR	3002981	Argument	s		3000266	0					
ANR	3002982	Identifier	s		3000266	0					
ANR	3002983	Argument	s -> block		3000266	1					
ANR	3002984	PtrMemberAccess	s -> block		3000266	0					
ANR	3002985	Identifier	s		3000266	0					
ANR	3002986	Identifier	block		3000266	1					
ANR	3002987	Argument	motion_x		3000266	2					
ANR	3002988	Identifier	motion_x		3000266	0					
ANR	3002989	Argument	motion_y		3000266	3					
ANR	3002990	Identifier	motion_y		3000266	0					
ANR	3002991	BreakStatement	break ;	701:8:15370:15375	3000266	6	True				
ANR	3002992	Label	case AV_CODEC_ID_MSMPEG4V2 :	703:4:15382:15408	3000266	7	True				
ANR	3002993	Identifier	AV_CODEC_ID_MSMPEG4V2		3000266	0					
ANR	3002994	Label	case AV_CODEC_ID_MSMPEG4V3 :	705:4:15415:15441	3000266	8	True				
ANR	3002995	Identifier	AV_CODEC_ID_MSMPEG4V3		3000266	0					
ANR	3002996	Label	case AV_CODEC_ID_WMV1 :	707:4:15448:15469	3000266	9	True				
ANR	3002997	Identifier	AV_CODEC_ID_WMV1		3000266	0					
ANR	3002998	IfStatement	if ( CONFIG_MSMPEG4_ENCODER )		3000266	10					
ANR	3002999	Condition	CONFIG_MSMPEG4_ENCODER	709:12:15484:15505	3000266	0	True				
ANR	3003000	Identifier	CONFIG_MSMPEG4_ENCODER		3000266	0					
ANR	3003001	ExpressionStatement	"ff_msmpeg4_encode_mb ( s , s -> block , motion_x , motion_y )"	711:12:15521:15574	3000266	1	True				
ANR	3003002	CallExpression	"ff_msmpeg4_encode_mb ( s , s -> block , motion_x , motion_y )"		3000266	0					
ANR	3003003	Callee	ff_msmpeg4_encode_mb		3000266	0					
ANR	3003004	Identifier	ff_msmpeg4_encode_mb		3000266	0					
ANR	3003005	ArgumentList	s		3000266	1					
ANR	3003006	Argument	s		3000266	0					
ANR	3003007	Identifier	s		3000266	0					
ANR	3003008	Argument	s -> block		3000266	1					
ANR	3003009	PtrMemberAccess	s -> block		3000266	0					
ANR	3003010	Identifier	s		3000266	0					
ANR	3003011	Identifier	block		3000266	1					
ANR	3003012	Argument	motion_x		3000266	2					
ANR	3003013	Identifier	motion_x		3000266	0					
ANR	3003014	Argument	motion_y		3000266	3					
ANR	3003015	Identifier	motion_y		3000266	0					
ANR	3003016	BreakStatement	break ;	713:8:15585:15590	3000266	11	True				
ANR	3003017	Label	case AV_CODEC_ID_WMV2 :	715:4:15597:15618	3000266	12	True				
ANR	3003018	Identifier	AV_CODEC_ID_WMV2		3000266	0					
ANR	3003019	IfStatement	if ( CONFIG_WMV2_ENCODER )		3000266	13					
ANR	3003020	Condition	CONFIG_WMV2_ENCODER	717:12:15633:15651	3000266	0	True				
ANR	3003021	Identifier	CONFIG_WMV2_ENCODER		3000266	0					
ANR	3003022	ExpressionStatement	"ff_wmv2_encode_mb ( s , s -> block , motion_x , motion_y )"	719:12:15667:15717	3000266	1	True				
ANR	3003023	CallExpression	"ff_wmv2_encode_mb ( s , s -> block , motion_x , motion_y )"		3000266	0					
ANR	3003024	Callee	ff_wmv2_encode_mb		3000266	0					
ANR	3003025	Identifier	ff_wmv2_encode_mb		3000266	0					
ANR	3003026	ArgumentList	s		3000266	1					
ANR	3003027	Argument	s		3000266	0					
ANR	3003028	Identifier	s		3000266	0					
ANR	3003029	Argument	s -> block		3000266	1					
ANR	3003030	PtrMemberAccess	s -> block		3000266	0					
ANR	3003031	Identifier	s		3000266	0					
ANR	3003032	Identifier	block		3000266	1					
ANR	3003033	Argument	motion_x		3000266	2					
ANR	3003034	Identifier	motion_x		3000266	0					
ANR	3003035	Argument	motion_y		3000266	3					
ANR	3003036	Identifier	motion_y		3000266	0					
ANR	3003037	BreakStatement	break ;	721:8:15728:15733	3000266	14	True				
ANR	3003038	Label	case AV_CODEC_ID_H261 :	723:4:15740:15761	3000266	15	True				
ANR	3003039	Identifier	AV_CODEC_ID_H261		3000266	0					
ANR	3003040	IfStatement	if ( CONFIG_H261_ENCODER )		3000266	16					
ANR	3003041	Condition	CONFIG_H261_ENCODER	725:12:15776:15794	3000266	0	True				
ANR	3003042	Identifier	CONFIG_H261_ENCODER		3000266	0					
ANR	3003043	ExpressionStatement	"ff_h261_encode_mb ( s , s -> block , motion_x , motion_y )"	727:12:15810:15860	3000266	1	True				
ANR	3003044	CallExpression	"ff_h261_encode_mb ( s , s -> block , motion_x , motion_y )"		3000266	0					
ANR	3003045	Callee	ff_h261_encode_mb		3000266	0					
ANR	3003046	Identifier	ff_h261_encode_mb		3000266	0					
ANR	3003047	ArgumentList	s		3000266	1					
ANR	3003048	Argument	s		3000266	0					
ANR	3003049	Identifier	s		3000266	0					
ANR	3003050	Argument	s -> block		3000266	1					
ANR	3003051	PtrMemberAccess	s -> block		3000266	0					
ANR	3003052	Identifier	s		3000266	0					
ANR	3003053	Identifier	block		3000266	1					
ANR	3003054	Argument	motion_x		3000266	2					
ANR	3003055	Identifier	motion_x		3000266	0					
ANR	3003056	Argument	motion_y		3000266	3					
ANR	3003057	Identifier	motion_y		3000266	0					
ANR	3003058	BreakStatement	break ;	729:8:15871:15876	3000266	17	True				
ANR	3003059	Label	case AV_CODEC_ID_H263 :	731:4:15883:15904	3000266	18	True				
ANR	3003060	Identifier	AV_CODEC_ID_H263		3000266	0					
ANR	3003061	Label	case AV_CODEC_ID_H263P :	733:4:15911:15933	3000266	19	True				
ANR	3003062	Identifier	AV_CODEC_ID_H263P		3000266	0					
ANR	3003063	Label	case AV_CODEC_ID_FLV1 :	735:4:15940:15961	3000266	20	True				
ANR	3003064	Identifier	AV_CODEC_ID_FLV1		3000266	0					
ANR	3003065	Label	case AV_CODEC_ID_RV10 :	737:4:15968:15989	3000266	21	True				
ANR	3003066	Identifier	AV_CODEC_ID_RV10		3000266	0					
ANR	3003067	Label	case AV_CODEC_ID_RV20 :	739:4:15996:16017	3000266	22	True				
ANR	3003068	Identifier	AV_CODEC_ID_RV20		3000266	0					
ANR	3003069	IfStatement	if ( CONFIG_H263_ENCODER )		3000266	23					
ANR	3003070	Condition	CONFIG_H263_ENCODER	741:12:16032:16050	3000266	0	True				
ANR	3003071	Identifier	CONFIG_H263_ENCODER		3000266	0					
ANR	3003072	ExpressionStatement	"ff_h263_encode_mb ( s , s -> block , motion_x , motion_y )"	743:12:16066:16116	3000266	1	True				
ANR	3003073	CallExpression	"ff_h263_encode_mb ( s , s -> block , motion_x , motion_y )"		3000266	0					
ANR	3003074	Callee	ff_h263_encode_mb		3000266	0					
ANR	3003075	Identifier	ff_h263_encode_mb		3000266	0					
ANR	3003076	ArgumentList	s		3000266	1					
ANR	3003077	Argument	s		3000266	0					
ANR	3003078	Identifier	s		3000266	0					
ANR	3003079	Argument	s -> block		3000266	1					
ANR	3003080	PtrMemberAccess	s -> block		3000266	0					
ANR	3003081	Identifier	s		3000266	0					
ANR	3003082	Identifier	block		3000266	1					
ANR	3003083	Argument	motion_x		3000266	2					
ANR	3003084	Identifier	motion_x		3000266	0					
ANR	3003085	Argument	motion_y		3000266	3					
ANR	3003086	Identifier	motion_y		3000266	0					
ANR	3003087	BreakStatement	break ;	745:8:16127:16132	3000266	24	True				
ANR	3003088	Label	case AV_CODEC_ID_MJPEG :	747:4:16139:16161	3000266	25	True				
ANR	3003089	Identifier	AV_CODEC_ID_MJPEG		3000266	0					
ANR	3003090	Label	case AV_CODEC_ID_AMV :	749:4:16168:16188	3000266	26	True				
ANR	3003091	Identifier	AV_CODEC_ID_AMV		3000266	0					
ANR	3003092	IfStatement	if ( CONFIG_MJPEG_ENCODER )		3000266	27					
ANR	3003093	Condition	CONFIG_MJPEG_ENCODER	751:12:16203:16222	3000266	0	True				
ANR	3003094	Identifier	CONFIG_MJPEG_ENCODER		3000266	0					
ANR	3003095	ExpressionStatement	"ff_mjpeg_encode_mb ( s , s -> block )"	753:12:16238:16269	3000266	1	True				
ANR	3003096	CallExpression	"ff_mjpeg_encode_mb ( s , s -> block )"		3000266	0					
ANR	3003097	Callee	ff_mjpeg_encode_mb		3000266	0					
ANR	3003098	Identifier	ff_mjpeg_encode_mb		3000266	0					
ANR	3003099	ArgumentList	s		3000266	1					
ANR	3003100	Argument	s		3000266	0					
ANR	3003101	Identifier	s		3000266	0					
ANR	3003102	Argument	s -> block		3000266	1					
ANR	3003103	PtrMemberAccess	s -> block		3000266	0					
ANR	3003104	Identifier	s		3000266	0					
ANR	3003105	Identifier	block		3000266	1					
ANR	3003106	BreakStatement	break ;	755:8:16280:16285	3000266	28	True				
ANR	3003107	Label	default :	757:4:16292:16299	3000266	29	True				
ANR	3003108	Identifier	default		3000266	0					
ANR	3003109	ExpressionStatement	av_assert1 ( 0 )	759:8:16310:16323	3000266	30	True				
ANR	3003110	CallExpression	av_assert1 ( 0 )		3000266	0					
ANR	3003111	Callee	av_assert1		3000266	0					
ANR	3003112	Identifier	av_assert1		3000266	0					
ANR	3003113	ArgumentList	0		3000266	1					
ANR	3003114	Argument	0		3000266	0					
ANR	3003115	PrimaryExpression	0		3000266	0					
ANR	3003116	ReturnType	static av_always_inline void		3000266	1					
ANR	3003117	Identifier	encode_mb_internal		3000266	2					
ANR	3003118	ParameterList	"MpegEncContext * s , int motion_x , int motion_y , int mb_block_height , int mb_block_width , int mb_block_count"		3000266	3					
ANR	3003119	Parameter	MpegEncContext * s	1:48:48:64	3000266	0	True				
ANR	3003120	ParameterType	MpegEncContext *		3000266	0					
ANR	3003121	Identifier	s		3000266	1					
ANR	3003122	Parameter	int motion_x	3:48:116:127	3000266	1	True				
ANR	3003123	ParameterType	int		3000266	0					
ANR	3003124	Identifier	motion_x		3000266	1					
ANR	3003125	Parameter	int motion_y	3:62:130:141	3000266	2	True				
ANR	3003126	ParameterType	int		3000266	0					
ANR	3003127	Identifier	motion_y		3000266	1					
ANR	3003128	Parameter	int mb_block_height	5:48:193:211	3000266	3	True				
ANR	3003129	ParameterType	int		3000266	0					
ANR	3003130	Identifier	mb_block_height		3000266	1					
ANR	3003131	Parameter	int mb_block_width	7:48:263:280	3000266	4	True				
ANR	3003132	ParameterType	int		3000266	0					
ANR	3003133	Identifier	mb_block_width		3000266	1					
ANR	3003134	Parameter	int mb_block_count	9:48:332:349	3000266	5	True				
ANR	3003135	ParameterType	int		3000266	0					
ANR	3003136	Identifier	mb_block_count		3000266	1					
ANR	3003137	CFGEntryNode	ENTRY		3000266		True				
ANR	3003138	CFGExitNode	EXIT		3000266		True				
ANR	3003139	Symbol	CONFIG_H261_ENCODER		3000266						
ANR	3003140	Symbol	mb_block_height		3000266						
ANR	3003141	Symbol	ptr_y		3000266						
ANR	3003142	Symbol	mb_block_width		3000266						
ANR	3003143	Symbol	s -> current_picture		3000266						
ANR	3003144	Symbol	AV_CODEC_ID_AMV		3000266						
ANR	3003145	Symbol	s -> out_format		3000266						
ANR	3003146	Symbol	s -> last_picture . f		3000266						
ANR	3003147	Symbol	* s -> lambda_table		3000266						
ANR	3003148	Symbol	CONFIG_MSMPEG4_ENCODER		3000266						
ANR	3003149	Symbol	s -> dquant		3000266						
ANR	3003150	Symbol	ff_dct_quantize_c		3000266						
ANR	3003151	Symbol	s -> dsp . put_no_rnd_qpel_pixels_tab		3000266						
ANR	3003152	Symbol	s -> new_picture . f . data		3000266						
ANR	3003153	Symbol	av_clip		3000266						
ANR	3003154	Symbol	s -> dest		3000266						
ANR	3003155	Symbol	s -> current_picture_ptr -> qscale_table		3000266						
ANR	3003156	Symbol	s -> mb_intra		3000266						
ANR	3003157	Symbol	s -> chroma_elim_threshold		3000266						
ANR	3003158	Symbol	* mb_y		3000266						
ANR	3003159	Symbol	* mb_x		3000266						
ANR	3003160	Symbol	* s -> current_picture_ptr		3000266						
ANR	3003161	Symbol	s -> edge_emu_buffer		3000266						
ANR	3003162	Symbol	s -> flags		3000266						
ANR	3003163	Symbol	s -> intra_scantable		3000266						
ANR	3003164	Symbol	* s -> current_picture . mc_mb_var		3000266						
ANR	3003165	Symbol	wrap_c		3000266						
ANR	3003166	Symbol	* s -> dsp . ildct_cmp		3000266						
ANR	3003167	Symbol	MV_TYPE_8X8		3000266						
ANR	3003168	Symbol	s -> dsp		3000266						
ANR	3003169	Symbol	* * * s		3000266						
ANR	3003170	Symbol	s -> current_picture . mc_mb_var		3000266						
ANR	3003171	Symbol	s -> mv_dir		3000266						
ANR	3003172	Symbol	CONFIG_MPEG4_ENCODER		3000266						
ANR	3003173	Symbol	FMT_H263		3000266						
ANR	3003174	Symbol	s -> dsp . sad		3000266						
ANR	3003175	Symbol	CONFIG_WMV2_ENCODER		3000266						
ANR	3003176	Symbol	wrap_y		3000266						
ANR	3003177	Symbol	* * s -> intra_scantable . permutated		3000266						
ANR	3003178	Symbol	* s -> dest		3000266						
ANR	3003179	Symbol	s -> next_picture		3000266						
ANR	3003180	Symbol	s -> next_picture . f . data		3000266						
ANR	3003181	Symbol	op_qpix		3000266						
ANR	3003182	Symbol	s -> skipdct		3000266						
ANR	3003183	Symbol	* * s		3000266						
ANR	3003184	Symbol	INT_MAX		3000266						
ANR	3003185	Symbol	last_qp		3000266						
ANR	3003186	Symbol	s -> last_picture		3000266						
ANR	3003187	Symbol	s -> hdsp . put_no_rnd_pixels_tab		3000266						
ANR	3003188	Symbol	s -> luma_elim_threshold		3000266						
ANR	3003189	Symbol	s -> adaptive_quant		3000266						
ANR	3003190	Symbol	ch		3000266						
ANR	3003191	Symbol	* s -> current_picture		3000266						
ANR	3003192	Symbol	i		3000266						
ANR	3003193	Symbol	j		3000266						
ANR	3003194	Symbol	CODEC_FLAG_INTERLACED_DCT		3000266						
ANR	3003195	Symbol	s -> block_last_index		3000266						
ANR	3003196	Symbol	* s -> intra_scantable		3000266						
ANR	3003197	Symbol	s		3000266						
ANR	3003198	Symbol	s -> height		3000266						
ANR	3003199	Symbol	s -> avctx -> ildct_cmp		3000266						
ANR	3003200	Symbol	cw		3000266						
ANR	3003201	Symbol	s -> last_picture . f . data		3000266						
ANR	3003202	Symbol	orig		3000266						
ANR	3003203	Symbol	dest_y		3000266						
ANR	3003204	Symbol	mb_y		3000266						
ANR	3003205	Symbol	MV_DIR_FORWARD		3000266						
ANR	3003206	Symbol	mb_x		3000266						
ANR	3003207	Symbol	s -> block		3000266						
ANR	3003208	Symbol	CODEC_FLAG_GRAY		3000266						
ANR	3003209	Symbol	op_pix		3000266						
ANR	3003210	Symbol	s -> coded_score		3000266						
ANR	3003211	Symbol	CONFIG_H263_ENCODER		3000266						
ANR	3003212	Symbol	FF_MPV_FLAG_CBP_RD		3000266						
ANR	3003213	Symbol	s -> uvlinesize		3000266						
ANR	3003214	Symbol	s -> pict_type		3000266						
ANR	3003215	Symbol	s -> chroma_y_shift		3000266						
ANR	3003216	Symbol	* s -> coded_score		3000266						
ANR	3003217	Symbol	motion_x		3000266						
ANR	3003218	Symbol	s -> c_dc_scale		3000266						
ANR	3003219	Symbol	* * s -> intra_scantable		3000266						
ANR	3003220	Symbol	motion_y		3000266						
ANR	3003221	Symbol	* s -> mb_stride		3000266						
ANR	3003222	Symbol	overflow		3000266						
ANR	3003223	Symbol	CONFIG_MPEG1VIDEO_ENCODER		3000266						
ANR	3003224	Symbol	CONFIG_MJPEG_ENCODER		3000266						
ANR	3003225	Symbol	s -> width		3000266						
ANR	3003226	Symbol	* s -> dsp		3000266						
ANR	3003227	Symbol	s -> lambda_table		3000266						
ANR	3003228	Symbol	s -> dsp . put_qpel_pixels_tab		3000266						
ANR	3003229	Symbol	FMT_MJPEG		3000266						
ANR	3003230	Symbol	s -> interlaced_dct		3000266						
ANR	3003231	Symbol	* s -> dsp . sad		3000266						
ANR	3003232	Symbol	* s -> avctx		3000266						
ANR	3003233	Symbol	* * j		3000266						
ANR	3003234	Symbol	CHROMA_444		3000266						
ANR	3003235	Symbol	* * i		3000266						
ANR	3003236	Symbol	s -> codec_id		3000266						
ANR	3003237	Symbol	NULL		3000266						
ANR	3003238	Symbol	s -> dct_quantize		3000266						
ANR	3003239	Symbol	* weight		3000266						
ANR	3003240	Symbol	s -> hdsp		3000266						
ANR	3003241	Symbol	weight		3000266						
ANR	3003242	Symbol	s -> mb_x		3000266						
ANR	3003243	Symbol	s -> chroma_format		3000266						
ANR	3003244	Symbol	s -> mb_y		3000266						
ANR	3003245	Symbol	s -> new_picture		3000266						
ANR	3003246	Symbol	s -> mv_type		3000266						
ANR	3003247	Symbol	interlaced_score		3000266						
ANR	3003248	Symbol	s -> quantizer_noise_shaping		3000266						
ANR	3003249	Symbol	& overflow		3000266						
ANR	3003250	Symbol	s -> new_picture . f		3000266						
ANR	3003251	Symbol	s -> avctx		3000266						
ANR	3003252	Symbol	s -> lambda		3000266						
ANR	3003253	Symbol	ebuf		3000266						
ANR	3003254	Symbol	progressive_score		3000266						
ANR	3003255	Symbol	s -> dsp . ildct_cmp		3000266						
ANR	3003256	Symbol	s -> hdsp . put_pixels_tab		3000266						
ANR	3003257	Symbol	* * s -> block		3000266						
ANR	3003258	Symbol	s -> qscale		3000266						
ANR	3003259	Symbol	mb_xy		3000266						
ANR	3003260	Symbol	s -> mb_stride		3000266						
ANR	3003261	Symbol	AV_CODEC_ID_MPEG4		3000266						
ANR	3003262	Symbol	* s -> new_picture		3000266						
ANR	3003263	Symbol	* skip_dct		3000266						
ANR	3003264	Symbol	* s -> current_picture_ptr -> qscale_table		3000266						
ANR	3003265	Symbol	s -> vdsp		3000266						
ANR	3003266	Symbol	dest_cb		3000266						
ANR	3003267	Symbol	s -> no_rounding		3000266						
ANR	3003268	Symbol	FF_MPV_FLAG_QP_RD		3000266						
ANR	3003269	Symbol	* orig		3000266						
ANR	3003270	Symbol	s -> linesize		3000266						
ANR	3003271	Symbol	CONFIG_MPEG2VIDEO_ENCODER		3000266						
ANR	3003272	Symbol	ptr_cr		3000266						
ANR	3003273	Symbol	* s -> new_picture . f . data		3000266						
ANR	3003274	Symbol	MV_DIR_BACKWARD		3000266						
ANR	3003275	Symbol	s -> mpv_flags		3000266						
ANR	3003276	Symbol	AV_PICTURE_TYPE_B		3000266						
ANR	3003277	Symbol	MV_DIRECT		3000266						
ANR	3003278	Symbol	* s -> block_last_index		3000266						
ANR	3003279	Symbol	uv_dct_offset		3000266						
ANR	3003280	Symbol	CHROMA_422		3000266						
ANR	3003281	Symbol	s -> intra_scantable . permutated		3000266						
ANR	3003282	Symbol	ptr_cb		3000266						
ANR	3003283	Symbol	* s -> intra_scantable . permutated		3000266						
ANR	3003284	Symbol	s -> next_picture . f		3000266						
ANR	3003285	Symbol	dct_offset		3000266						
ANR	3003286	Symbol	s -> dsp . avg_qpel_pixels_tab		3000266						
ANR	3003287	Symbol	s -> chroma_x_shift		3000266						
ANR	3003288	Symbol	s -> hdsp . avg_pixels_tab		3000266						
ANR	3003289	Symbol	s -> current_picture_ptr		3000266						
ANR	3003290	Symbol	skip_dct		3000266						
ANR	3003291	Symbol	* s -> block		3000266						
ANR	3003292	Symbol	* i		3000266						
ANR	3003293	Symbol	s -> alternate_scan		3000266						
ANR	3003294	Symbol	* j		3000266						
ANR	3003295	Symbol	mb_block_count		3000266						
ANR	3003296	Symbol	* mb_xy		3000266						
ANR	3003297	Symbol	* * s -> current_picture_ptr		3000266						
ANR	3003298	Symbol	* s -> new_picture . f		3000266						
ANR	3003299	Symbol	* s		3000266						
ANR	3003300	Symbol	dct_quantize_refine		3000266						
ANR	3003301	Symbol	dest_cr		3000266						
ANR	3003302	Symbol	FF_CMP_VSSE		3000266						
