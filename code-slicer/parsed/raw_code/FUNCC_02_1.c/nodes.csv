command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	14235	File	/home/p4ultr4n/workplace/ReVeal/raw_code/FUNCC_02_1.c								
ANR	14236	Function	ff_h264_luma_dc_dequant_idct	1:0:0:1221							
ANR	14237	FunctionDef	"ff_h264_luma_dc_dequant_idct (int16_t * _output , int16_t * _input , int qmul)"		14236	0					
ANR	14238	CompoundStatement		1:85:85:1221	14236	0					
ANR	14239	Statement	define	3:1:89:94	14236	0	True				
ANR	14240	Statement	stride	3:8:96:101	14236	1	True				
ANR	14241	Statement	16	3:15:103:104	14236	2	True				
ANR	14242	IdentifierDeclStatement	int i ;	5:4:111:116	14236	3	True				
ANR	14243	IdentifierDecl	i		14236	0					
ANR	14244	IdentifierDeclType	int		14236	0					
ANR	14245	Identifier	i		14236	1					
ANR	14246	IdentifierDeclStatement	int temp [ 16 ] ;	7:4:123:135	14236	4	True				
ANR	14247	IdentifierDecl	temp [ 16 ]		14236	0					
ANR	14248	IdentifierDeclType	int [ 16 ]		14236	0					
ANR	14249	Identifier	temp		14236	1					
ANR	14250	PrimaryExpression	16		14236	2					
ANR	14251	Statement	static	9:4:142:147	14236	5	True				
ANR	14252	IdentifierDeclStatement	"const uint8_t x_offset [ 4 ] = { 0 , 2 * stride , 8 * stride , 10 * stride } ;"	9:11:149:209	14236	6	True				
ANR	14253	IdentifierDecl	"x_offset [ 4 ] = { 0 , 2 * stride , 8 * stride , 10 * stride }"		14236	0					
ANR	14254	IdentifierDeclType	const uint8_t [ 4 ]		14236	0					
ANR	14255	Identifier	x_offset		14236	1					
ANR	14256	PrimaryExpression	4		14236	2					
ANR	14257	AssignmentExpression	"x_offset [ 4 ] = { 0 , 2 * stride , 8 * stride , 10 * stride }"		14236	3		=			
ANR	14258	Identifier	x_offset		14236	0					
ANR	14259	InitializerList	0		14236	1					
ANR	14260	PrimaryExpression	0		14236	0					
ANR	14261	MultiplicativeExpression	2 * stride		14236	1		*			
ANR	14262	PrimaryExpression	2		14236	0					
ANR	14263	Identifier	stride		14236	1					
ANR	14264	MultiplicativeExpression	8 * stride		14236	2		*			
ANR	14265	PrimaryExpression	8		14236	0					
ANR	14266	Identifier	stride		14236	1					
ANR	14267	MultiplicativeExpression	10 * stride		14236	3		*			
ANR	14268	PrimaryExpression	10		14236	0					
ANR	14269	Identifier	stride		14236	1					
ANR	14270	IdentifierDeclStatement	dctcoef * input = ( dctcoef * ) _input ;	11:4:216:249	14236	7	True				
ANR	14271	IdentifierDecl	* input = ( dctcoef * ) _input		14236	0					
ANR	14272	IdentifierDeclType	dctcoef *		14236	0					
ANR	14273	Identifier	input		14236	1					
ANR	14274	AssignmentExpression	* input = ( dctcoef * ) _input		14236	2		=			
ANR	14275	Identifier	input		14236	0					
ANR	14276	CastExpression	( dctcoef * ) _input		14236	1					
ANR	14277	CastTarget	dctcoef *		14236	0					
ANR	14278	Identifier	_input		14236	1					
ANR	14279	IdentifierDeclStatement	dctcoef * output = ( dctcoef * ) _output ;	13:4:256:291	14236	8	True				
ANR	14280	IdentifierDecl	* output = ( dctcoef * ) _output		14236	0					
ANR	14281	IdentifierDeclType	dctcoef *		14236	0					
ANR	14282	Identifier	output		14236	1					
ANR	14283	AssignmentExpression	* output = ( dctcoef * ) _output		14236	2		=			
ANR	14284	Identifier	output		14236	0					
ANR	14285	CastExpression	( dctcoef * ) _output		14236	1					
ANR	14286	CastTarget	dctcoef *		14236	0					
ANR	14287	Identifier	_output		14236	1					
ANR	14288	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		14236	9					
ANR	14289	ForInit	i = 0 ;	17:8:304:307	14236	0	True				
ANR	14290	AssignmentExpression	i = 0		14236	0		=			
ANR	14291	Identifier	i		14236	0					
ANR	14292	PrimaryExpression	0		14236	1					
ANR	14293	Condition	i < 4	17:13:309:311	14236	1	True				
ANR	14294	RelationalExpression	i < 4		14236	0		<			
ANR	14295	Identifier	i		14236	0					
ANR	14296	PrimaryExpression	4		14236	1					
ANR	14297	PostIncDecOperationExpression	i ++	17:18:314:316	14236	2	True				
ANR	14298	Identifier	i		14236	0					
ANR	14299	IncDec	++		14236	1					
ANR	14300	CompoundStatement		25:8:399:440	14236	3					
ANR	14301	IdentifierDeclStatement	const int z0 = input [ 4 * i + 0 ] + input [ 4 * i + 1 ] ;	19:8:329:370	14236	0	True				
ANR	14302	IdentifierDecl	z0 = input [ 4 * i + 0 ] + input [ 4 * i + 1 ]		14236	0					
ANR	14303	IdentifierDeclType	const int		14236	0					
ANR	14304	Identifier	z0		14236	1					
ANR	14305	AssignmentExpression	z0 = input [ 4 * i + 0 ] + input [ 4 * i + 1 ]		14236	2		=			
ANR	14306	Identifier	z0		14236	0					
ANR	14307	AdditiveExpression	input [ 4 * i + 0 ] + input [ 4 * i + 1 ]		14236	1		+			
ANR	14308	ArrayIndexing	input [ 4 * i + 0 ]		14236	0					
ANR	14309	Identifier	input		14236	0					
ANR	14310	AdditiveExpression	4 * i + 0		14236	1		+			
ANR	14311	MultiplicativeExpression	4 * i		14236	0		*			
ANR	14312	PrimaryExpression	4		14236	0					
ANR	14313	Identifier	i		14236	1					
ANR	14314	PrimaryExpression	0		14236	1					
ANR	14315	ArrayIndexing	input [ 4 * i + 1 ]		14236	1					
ANR	14316	Identifier	input		14236	0					
ANR	14317	AdditiveExpression	4 * i + 1		14236	1		+			
ANR	14318	MultiplicativeExpression	4 * i		14236	0		*			
ANR	14319	PrimaryExpression	4		14236	0					
ANR	14320	Identifier	i		14236	1					
ANR	14321	PrimaryExpression	1		14236	1					
ANR	14322	IdentifierDeclStatement	const int z1 = input [ 4 * i + 0 ] - input [ 4 * i + 1 ] ;	21:8:381:422	14236	1	True				
ANR	14323	IdentifierDecl	z1 = input [ 4 * i + 0 ] - input [ 4 * i + 1 ]		14236	0					
ANR	14324	IdentifierDeclType	const int		14236	0					
ANR	14325	Identifier	z1		14236	1					
ANR	14326	AssignmentExpression	z1 = input [ 4 * i + 0 ] - input [ 4 * i + 1 ]		14236	2		=			
ANR	14327	Identifier	z1		14236	0					
ANR	14328	AdditiveExpression	input [ 4 * i + 0 ] - input [ 4 * i + 1 ]		14236	1		-			
ANR	14329	ArrayIndexing	input [ 4 * i + 0 ]		14236	0					
ANR	14330	Identifier	input		14236	0					
ANR	14331	AdditiveExpression	4 * i + 0		14236	1		+			
ANR	14332	MultiplicativeExpression	4 * i		14236	0		*			
ANR	14333	PrimaryExpression	4		14236	0					
ANR	14334	Identifier	i		14236	1					
ANR	14335	PrimaryExpression	0		14236	1					
ANR	14336	ArrayIndexing	input [ 4 * i + 1 ]		14236	1					
ANR	14337	Identifier	input		14236	0					
ANR	14338	AdditiveExpression	4 * i + 1		14236	1		+			
ANR	14339	MultiplicativeExpression	4 * i		14236	0		*			
ANR	14340	PrimaryExpression	4		14236	0					
ANR	14341	Identifier	i		14236	1					
ANR	14342	PrimaryExpression	1		14236	1					
ANR	14343	IdentifierDeclStatement	const int z2 = input [ 4 * i + 2 ] - input [ 4 * i + 3 ] ;	23:8:433:474	14236	2	True				
ANR	14344	IdentifierDecl	z2 = input [ 4 * i + 2 ] - input [ 4 * i + 3 ]		14236	0					
ANR	14345	IdentifierDeclType	const int		14236	0					
ANR	14346	Identifier	z2		14236	1					
ANR	14347	AssignmentExpression	z2 = input [ 4 * i + 2 ] - input [ 4 * i + 3 ]		14236	2		=			
ANR	14348	Identifier	z2		14236	0					
ANR	14349	AdditiveExpression	input [ 4 * i + 2 ] - input [ 4 * i + 3 ]		14236	1		-			
ANR	14350	ArrayIndexing	input [ 4 * i + 2 ]		14236	0					
ANR	14351	Identifier	input		14236	0					
ANR	14352	AdditiveExpression	4 * i + 2		14236	1		+			
ANR	14353	MultiplicativeExpression	4 * i		14236	0		*			
ANR	14354	PrimaryExpression	4		14236	0					
ANR	14355	Identifier	i		14236	1					
ANR	14356	PrimaryExpression	2		14236	1					
ANR	14357	ArrayIndexing	input [ 4 * i + 3 ]		14236	1					
ANR	14358	Identifier	input		14236	0					
ANR	14359	AdditiveExpression	4 * i + 3		14236	1		+			
ANR	14360	MultiplicativeExpression	4 * i		14236	0		*			
ANR	14361	PrimaryExpression	4		14236	0					
ANR	14362	Identifier	i		14236	1					
ANR	14363	PrimaryExpression	3		14236	1					
ANR	14364	IdentifierDeclStatement	const int z3 = input [ 4 * i + 2 ] + input [ 4 * i + 3 ] ;	25:8:485:526	14236	3	True				
ANR	14365	IdentifierDecl	z3 = input [ 4 * i + 2 ] + input [ 4 * i + 3 ]		14236	0					
ANR	14366	IdentifierDeclType	const int		14236	0					
ANR	14367	Identifier	z3		14236	1					
ANR	14368	AssignmentExpression	z3 = input [ 4 * i + 2 ] + input [ 4 * i + 3 ]		14236	2		=			
ANR	14369	Identifier	z3		14236	0					
ANR	14370	AdditiveExpression	input [ 4 * i + 2 ] + input [ 4 * i + 3 ]		14236	1		+			
ANR	14371	ArrayIndexing	input [ 4 * i + 2 ]		14236	0					
ANR	14372	Identifier	input		14236	0					
ANR	14373	AdditiveExpression	4 * i + 2		14236	1		+			
ANR	14374	MultiplicativeExpression	4 * i		14236	0		*			
ANR	14375	PrimaryExpression	4		14236	0					
ANR	14376	Identifier	i		14236	1					
ANR	14377	PrimaryExpression	2		14236	1					
ANR	14378	ArrayIndexing	input [ 4 * i + 3 ]		14236	1					
ANR	14379	Identifier	input		14236	0					
ANR	14380	AdditiveExpression	4 * i + 3		14236	1		+			
ANR	14381	MultiplicativeExpression	4 * i		14236	0		*			
ANR	14382	PrimaryExpression	4		14236	0					
ANR	14383	Identifier	i		14236	1					
ANR	14384	PrimaryExpression	3		14236	1					
ANR	14385	ExpressionStatement	temp [ 4 * i + 0 ] = z0 + z3	29:8:539:557	14236	4	True				
ANR	14386	AssignmentExpression	temp [ 4 * i + 0 ] = z0 + z3		14236	0		=			
ANR	14387	ArrayIndexing	temp [ 4 * i + 0 ]		14236	0					
ANR	14388	Identifier	temp		14236	0					
ANR	14389	AdditiveExpression	4 * i + 0		14236	1		+			
ANR	14390	MultiplicativeExpression	4 * i		14236	0		*			
ANR	14391	PrimaryExpression	4		14236	0					
ANR	14392	Identifier	i		14236	1					
ANR	14393	PrimaryExpression	0		14236	1					
ANR	14394	AdditiveExpression	z0 + z3		14236	1		+			
ANR	14395	Identifier	z0		14236	0					
ANR	14396	Identifier	z3		14236	1					
ANR	14397	ExpressionStatement	temp [ 4 * i + 1 ] = z0 - z3	31:8:568:586	14236	5	True				
ANR	14398	AssignmentExpression	temp [ 4 * i + 1 ] = z0 - z3		14236	0		=			
ANR	14399	ArrayIndexing	temp [ 4 * i + 1 ]		14236	0					
ANR	14400	Identifier	temp		14236	0					
ANR	14401	AdditiveExpression	4 * i + 1		14236	1		+			
ANR	14402	MultiplicativeExpression	4 * i		14236	0		*			
ANR	14403	PrimaryExpression	4		14236	0					
ANR	14404	Identifier	i		14236	1					
ANR	14405	PrimaryExpression	1		14236	1					
ANR	14406	AdditiveExpression	z0 - z3		14236	1		-			
ANR	14407	Identifier	z0		14236	0					
ANR	14408	Identifier	z3		14236	1					
ANR	14409	ExpressionStatement	temp [ 4 * i + 2 ] = z1 - z2	33:8:597:615	14236	6	True				
ANR	14410	AssignmentExpression	temp [ 4 * i + 2 ] = z1 - z2		14236	0		=			
ANR	14411	ArrayIndexing	temp [ 4 * i + 2 ]		14236	0					
ANR	14412	Identifier	temp		14236	0					
ANR	14413	AdditiveExpression	4 * i + 2		14236	1		+			
ANR	14414	MultiplicativeExpression	4 * i		14236	0		*			
ANR	14415	PrimaryExpression	4		14236	0					
ANR	14416	Identifier	i		14236	1					
ANR	14417	PrimaryExpression	2		14236	1					
ANR	14418	AdditiveExpression	z1 - z2		14236	1		-			
ANR	14419	Identifier	z1		14236	0					
ANR	14420	Identifier	z2		14236	1					
ANR	14421	ExpressionStatement	temp [ 4 * i + 3 ] = z1 + z2	35:8:626:644	14236	7	True				
ANR	14422	AssignmentExpression	temp [ 4 * i + 3 ] = z1 + z2		14236	0		=			
ANR	14423	ArrayIndexing	temp [ 4 * i + 3 ]		14236	0					
ANR	14424	Identifier	temp		14236	0					
ANR	14425	AdditiveExpression	4 * i + 3		14236	1		+			
ANR	14426	MultiplicativeExpression	4 * i		14236	0		*			
ANR	14427	PrimaryExpression	4		14236	0					
ANR	14428	Identifier	i		14236	1					
ANR	14429	PrimaryExpression	3		14236	1					
ANR	14430	AdditiveExpression	z1 + z2		14236	1		+			
ANR	14431	Identifier	z1		14236	0					
ANR	14432	Identifier	z2		14236	1					
ANR	14433	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		14236	10					
ANR	14434	ForInit	i = 0 ;	41:8:664:667	14236	0	True				
ANR	14435	AssignmentExpression	i = 0		14236	0		=			
ANR	14436	Identifier	i		14236	0					
ANR	14437	PrimaryExpression	0		14236	1					
ANR	14438	Condition	i < 4	41:13:669:671	14236	1	True				
ANR	14439	RelationalExpression	i < 4		14236	0		<			
ANR	14440	Identifier	i		14236	0					
ANR	14441	PrimaryExpression	4		14236	1					
ANR	14442	PostIncDecOperationExpression	i ++	41:18:674:676	14236	2	True				
ANR	14443	Identifier	i		14236	0					
ANR	14444	IncDec	++		14236	1					
ANR	14445	CompoundStatement		51:8:793:832	14236	3					
ANR	14446	IdentifierDeclStatement	const int offset = x_offset [ i ] ;	43:8:689:718	14236	0	True				
ANR	14447	IdentifierDecl	offset = x_offset [ i ]		14236	0					
ANR	14448	IdentifierDeclType	const int		14236	0					
ANR	14449	Identifier	offset		14236	1					
ANR	14450	AssignmentExpression	offset = x_offset [ i ]		14236	2		=			
ANR	14451	Identifier	offset		14236	0					
ANR	14452	ArrayIndexing	x_offset [ i ]		14236	1					
ANR	14453	Identifier	x_offset		14236	0					
ANR	14454	Identifier	i		14236	1					
ANR	14455	IdentifierDeclStatement	const int z0 = temp [ 4 * 0 + i ] + temp [ 4 * 2 + i ] ;	45:8:729:768	14236	1	True				
ANR	14456	IdentifierDecl	z0 = temp [ 4 * 0 + i ] + temp [ 4 * 2 + i ]		14236	0					
ANR	14457	IdentifierDeclType	const int		14236	0					
ANR	14458	Identifier	z0		14236	1					
ANR	14459	AssignmentExpression	z0 = temp [ 4 * 0 + i ] + temp [ 4 * 2 + i ]		14236	2		=			
ANR	14460	Identifier	z0		14236	0					
ANR	14461	AdditiveExpression	temp [ 4 * 0 + i ] + temp [ 4 * 2 + i ]		14236	1		+			
ANR	14462	ArrayIndexing	temp [ 4 * 0 + i ]		14236	0					
ANR	14463	Identifier	temp		14236	0					
ANR	14464	AdditiveExpression	4 * 0 + i		14236	1		+			
ANR	14465	MultiplicativeExpression	4 * 0		14236	0		*			
ANR	14466	PrimaryExpression	4		14236	0					
ANR	14467	PrimaryExpression	0		14236	1					
ANR	14468	Identifier	i		14236	1					
ANR	14469	ArrayIndexing	temp [ 4 * 2 + i ]		14236	1					
ANR	14470	Identifier	temp		14236	0					
ANR	14471	AdditiveExpression	4 * 2 + i		14236	1		+			
ANR	14472	MultiplicativeExpression	4 * 2		14236	0		*			
ANR	14473	PrimaryExpression	4		14236	0					
ANR	14474	PrimaryExpression	2		14236	1					
ANR	14475	Identifier	i		14236	1					
ANR	14476	IdentifierDeclStatement	const int z1 = temp [ 4 * 0 + i ] - temp [ 4 * 2 + i ] ;	47:8:779:818	14236	2	True				
ANR	14477	IdentifierDecl	z1 = temp [ 4 * 0 + i ] - temp [ 4 * 2 + i ]		14236	0					
ANR	14478	IdentifierDeclType	const int		14236	0					
ANR	14479	Identifier	z1		14236	1					
ANR	14480	AssignmentExpression	z1 = temp [ 4 * 0 + i ] - temp [ 4 * 2 + i ]		14236	2		=			
ANR	14481	Identifier	z1		14236	0					
ANR	14482	AdditiveExpression	temp [ 4 * 0 + i ] - temp [ 4 * 2 + i ]		14236	1		-			
ANR	14483	ArrayIndexing	temp [ 4 * 0 + i ]		14236	0					
ANR	14484	Identifier	temp		14236	0					
ANR	14485	AdditiveExpression	4 * 0 + i		14236	1		+			
ANR	14486	MultiplicativeExpression	4 * 0		14236	0		*			
ANR	14487	PrimaryExpression	4		14236	0					
ANR	14488	PrimaryExpression	0		14236	1					
ANR	14489	Identifier	i		14236	1					
ANR	14490	ArrayIndexing	temp [ 4 * 2 + i ]		14236	1					
ANR	14491	Identifier	temp		14236	0					
ANR	14492	AdditiveExpression	4 * 2 + i		14236	1		+			
ANR	14493	MultiplicativeExpression	4 * 2		14236	0		*			
ANR	14494	PrimaryExpression	4		14236	0					
ANR	14495	PrimaryExpression	2		14236	1					
ANR	14496	Identifier	i		14236	1					
ANR	14497	IdentifierDeclStatement	const int z2 = temp [ 4 * 1 + i ] - temp [ 4 * 3 + i ] ;	49:8:829:868	14236	3	True				
ANR	14498	IdentifierDecl	z2 = temp [ 4 * 1 + i ] - temp [ 4 * 3 + i ]		14236	0					
ANR	14499	IdentifierDeclType	const int		14236	0					
ANR	14500	Identifier	z2		14236	1					
ANR	14501	AssignmentExpression	z2 = temp [ 4 * 1 + i ] - temp [ 4 * 3 + i ]		14236	2		=			
ANR	14502	Identifier	z2		14236	0					
ANR	14503	AdditiveExpression	temp [ 4 * 1 + i ] - temp [ 4 * 3 + i ]		14236	1		-			
ANR	14504	ArrayIndexing	temp [ 4 * 1 + i ]		14236	0					
ANR	14505	Identifier	temp		14236	0					
ANR	14506	AdditiveExpression	4 * 1 + i		14236	1		+			
ANR	14507	MultiplicativeExpression	4 * 1		14236	0		*			
ANR	14508	PrimaryExpression	4		14236	0					
ANR	14509	PrimaryExpression	1		14236	1					
ANR	14510	Identifier	i		14236	1					
ANR	14511	ArrayIndexing	temp [ 4 * 3 + i ]		14236	1					
ANR	14512	Identifier	temp		14236	0					
ANR	14513	AdditiveExpression	4 * 3 + i		14236	1		+			
ANR	14514	MultiplicativeExpression	4 * 3		14236	0		*			
ANR	14515	PrimaryExpression	4		14236	0					
ANR	14516	PrimaryExpression	3		14236	1					
ANR	14517	Identifier	i		14236	1					
ANR	14518	IdentifierDeclStatement	const int z3 = temp [ 4 * 1 + i ] + temp [ 4 * 3 + i ] ;	51:8:879:918	14236	4	True				
ANR	14519	IdentifierDecl	z3 = temp [ 4 * 1 + i ] + temp [ 4 * 3 + i ]		14236	0					
ANR	14520	IdentifierDeclType	const int		14236	0					
ANR	14521	Identifier	z3		14236	1					
ANR	14522	AssignmentExpression	z3 = temp [ 4 * 1 + i ] + temp [ 4 * 3 + i ]		14236	2		=			
ANR	14523	Identifier	z3		14236	0					
ANR	14524	AdditiveExpression	temp [ 4 * 1 + i ] + temp [ 4 * 3 + i ]		14236	1		+			
ANR	14525	ArrayIndexing	temp [ 4 * 1 + i ]		14236	0					
ANR	14526	Identifier	temp		14236	0					
ANR	14527	AdditiveExpression	4 * 1 + i		14236	1		+			
ANR	14528	MultiplicativeExpression	4 * 1		14236	0		*			
ANR	14529	PrimaryExpression	4		14236	0					
ANR	14530	PrimaryExpression	1		14236	1					
ANR	14531	Identifier	i		14236	1					
ANR	14532	ArrayIndexing	temp [ 4 * 3 + i ]		14236	1					
ANR	14533	Identifier	temp		14236	0					
ANR	14534	AdditiveExpression	4 * 3 + i		14236	1		+			
ANR	14535	MultiplicativeExpression	4 * 3		14236	0		*			
ANR	14536	PrimaryExpression	4		14236	0					
ANR	14537	PrimaryExpression	3		14236	1					
ANR	14538	Identifier	i		14236	1					
ANR	14539	ExpressionStatement	output [ stride * 0 + offset ] = ( ( ( ( z0 + z3 ) * qmul + 128 ) >> 8 ) )	55:8:931:989	14236	5	True				
ANR	14540	AssignmentExpression	output [ stride * 0 + offset ] = ( ( ( ( z0 + z3 ) * qmul + 128 ) >> 8 ) )		14236	0		=			
ANR	14541	ArrayIndexing	output [ stride * 0 + offset ]		14236	0					
ANR	14542	Identifier	output		14236	0					
ANR	14543	AdditiveExpression	stride * 0 + offset		14236	1		+			
ANR	14544	MultiplicativeExpression	stride * 0		14236	0		*			
ANR	14545	Identifier	stride		14236	0					
ANR	14546	PrimaryExpression	0		14236	1					
ANR	14547	Identifier	offset		14236	1					
ANR	14548	ShiftExpression	( ( z0 + z3 ) * qmul + 128 ) >> 8		14236	1		>>			
ANR	14549	AdditiveExpression	( z0 + z3 ) * qmul + 128		14236	0		+			
ANR	14550	MultiplicativeExpression	( z0 + z3 ) * qmul		14236	0		*			
ANR	14551	AdditiveExpression	z0 + z3		14236	0		+			
ANR	14552	Identifier	z0		14236	0					
ANR	14553	Identifier	z3		14236	1					
ANR	14554	Identifier	qmul		14236	1					
ANR	14555	PrimaryExpression	128		14236	1					
ANR	14556	PrimaryExpression	8		14236	1					
ANR	14557	ExpressionStatement	output [ stride * 1 + offset ] = ( ( ( ( z1 + z2 ) * qmul + 128 ) >> 8 ) )	57:8:1000:1058	14236	6	True				
ANR	14558	AssignmentExpression	output [ stride * 1 + offset ] = ( ( ( ( z1 + z2 ) * qmul + 128 ) >> 8 ) )		14236	0		=			
ANR	14559	ArrayIndexing	output [ stride * 1 + offset ]		14236	0					
ANR	14560	Identifier	output		14236	0					
ANR	14561	AdditiveExpression	stride * 1 + offset		14236	1		+			
ANR	14562	MultiplicativeExpression	stride * 1		14236	0		*			
ANR	14563	Identifier	stride		14236	0					
ANR	14564	PrimaryExpression	1		14236	1					
ANR	14565	Identifier	offset		14236	1					
ANR	14566	ShiftExpression	( ( z1 + z2 ) * qmul + 128 ) >> 8		14236	1		>>			
ANR	14567	AdditiveExpression	( z1 + z2 ) * qmul + 128		14236	0		+			
ANR	14568	MultiplicativeExpression	( z1 + z2 ) * qmul		14236	0		*			
ANR	14569	AdditiveExpression	z1 + z2		14236	0		+			
ANR	14570	Identifier	z1		14236	0					
ANR	14571	Identifier	z2		14236	1					
ANR	14572	Identifier	qmul		14236	1					
ANR	14573	PrimaryExpression	128		14236	1					
ANR	14574	PrimaryExpression	8		14236	1					
ANR	14575	ExpressionStatement	output [ stride * 4 + offset ] = ( ( ( ( z1 - z2 ) * qmul + 128 ) >> 8 ) )	59:8:1069:1127	14236	7	True				
ANR	14576	AssignmentExpression	output [ stride * 4 + offset ] = ( ( ( ( z1 - z2 ) * qmul + 128 ) >> 8 ) )		14236	0		=			
ANR	14577	ArrayIndexing	output [ stride * 4 + offset ]		14236	0					
ANR	14578	Identifier	output		14236	0					
ANR	14579	AdditiveExpression	stride * 4 + offset		14236	1		+			
ANR	14580	MultiplicativeExpression	stride * 4		14236	0		*			
ANR	14581	Identifier	stride		14236	0					
ANR	14582	PrimaryExpression	4		14236	1					
ANR	14583	Identifier	offset		14236	1					
ANR	14584	ShiftExpression	( ( z1 - z2 ) * qmul + 128 ) >> 8		14236	1		>>			
ANR	14585	AdditiveExpression	( z1 - z2 ) * qmul + 128		14236	0		+			
ANR	14586	MultiplicativeExpression	( z1 - z2 ) * qmul		14236	0		*			
ANR	14587	AdditiveExpression	z1 - z2		14236	0		-			
ANR	14588	Identifier	z1		14236	0					
ANR	14589	Identifier	z2		14236	1					
ANR	14590	Identifier	qmul		14236	1					
ANR	14591	PrimaryExpression	128		14236	1					
ANR	14592	PrimaryExpression	8		14236	1					
ANR	14593	ExpressionStatement	output [ stride * 5 + offset ] = ( ( ( ( z0 - z3 ) * qmul + 128 ) >> 8 ) )	61:8:1138:1196	14236	8	True				
ANR	14594	AssignmentExpression	output [ stride * 5 + offset ] = ( ( ( ( z0 - z3 ) * qmul + 128 ) >> 8 ) )		14236	0		=			
ANR	14595	ArrayIndexing	output [ stride * 5 + offset ]		14236	0					
ANR	14596	Identifier	output		14236	0					
ANR	14597	AdditiveExpression	stride * 5 + offset		14236	1		+			
ANR	14598	MultiplicativeExpression	stride * 5		14236	0		*			
ANR	14599	Identifier	stride		14236	0					
ANR	14600	PrimaryExpression	5		14236	1					
ANR	14601	Identifier	offset		14236	1					
ANR	14602	ShiftExpression	( ( z0 - z3 ) * qmul + 128 ) >> 8		14236	1		>>			
ANR	14603	AdditiveExpression	( z0 - z3 ) * qmul + 128		14236	0		+			
ANR	14604	MultiplicativeExpression	( z0 - z3 ) * qmul		14236	0		*			
ANR	14605	AdditiveExpression	z0 - z3		14236	0		-			
ANR	14606	Identifier	z0		14236	0					
ANR	14607	Identifier	z3		14236	1					
ANR	14608	Identifier	qmul		14236	1					
ANR	14609	PrimaryExpression	128		14236	1					
ANR	14610	PrimaryExpression	8		14236	1					
ANR	14611	Statement	undef	65:1:1207:1211	14236	11	True				
ANR	14612	Statement	stride	65:7:1213:1218	14236	12	True				
ANR	14613	ReturnType	void FUNCC		14236	1					
ANR	14614	Identifier	( ff_h264_luma_dc_dequant_idct )		14236	2					
ANR	14615	Identifier	ff_h264_luma_dc_dequant_idct		14236	3					
ANR	14616	ParameterList	"int16_t * _output , int16_t * _input , int qmul"		14236	4					
ANR	14617	Parameter	int16_t * _output	1:41:41:56	14236	0	True				
ANR	14618	ParameterType	int16_t *		14236	0					
ANR	14619	Identifier	_output		14236	1					
ANR	14620	Parameter	int16_t * _input	1:59:59:73	14236	1	True				
ANR	14621	ParameterType	int16_t *		14236	0					
ANR	14622	Identifier	_input		14236	1					
ANR	14623	Parameter	int qmul	1:76:76:83	14236	2	True				
ANR	14624	ParameterType	int		14236	0					
ANR	14625	Identifier	qmul		14236	1					
ANR	14626	CFGEntryNode	ENTRY		14236		True				
ANR	14627	CFGExitNode	EXIT		14236		True				
ANR	14628	Symbol	_output		14236						
ANR	14629	Symbol	* stride		14236						
ANR	14630	Symbol	temp		14236						
ANR	14631	Symbol	offset		14236						
ANR	14632	Symbol	qmul		14236						
ANR	14633	Symbol	* input		14236						
ANR	14634	Symbol	i		14236						
ANR	14635	Symbol	stride		14236						
ANR	14636	Symbol	x_offset		14236						
ANR	14637	Symbol	* temp		14236						
ANR	14638	Symbol	output		14236						
ANR	14639	Symbol	input		14236						
ANR	14640	Symbol	* i		14236						
ANR	14641	Symbol	z0		14236						
ANR	14642	Symbol	z1		14236						
ANR	14643	Symbol	z2		14236						
ANR	14644	Symbol	z3		14236						
ANR	14645	Symbol	* offset		14236						
ANR	14646	Symbol	_input		14236						
ANR	14647	Symbol	* x_offset		14236						
ANR	14648	Symbol	* output		14236						
