command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6666264	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ppcemb_tlb_check_0.c								
ANR	6666265	Function	ppcemb_tlb_check	1:0:0:1102							
ANR	6666266	FunctionDef	"ppcemb_tlb_check (CPUState * env , ppcemb_tlb_t * tlb , target_phys_addr_t * raddrp , target_ulong address , uint32_t pid , int ext , int i)"		6666265	0					
ANR	6666267	CompoundStatement		9:0:258:1102	6666265	0					
ANR	6666268	IdentifierDeclStatement	target_ulong mask ;	11:4:265:282	6666265	0	True				
ANR	6666269	IdentifierDecl	mask		6666265	0					
ANR	6666270	IdentifierDeclType	target_ulong		6666265	0					
ANR	6666271	Identifier	mask		6666265	1					
ANR	6666272	IfStatement	if ( ! ( tlb -> prot & PAGE_VALID ) )		6666265	1					
ANR	6666273	Condition	! ( tlb -> prot & PAGE_VALID )	17:8:323:347	6666265	0	True				
ANR	6666274	UnaryOperationExpression	! ( tlb -> prot & PAGE_VALID )		6666265	0					
ANR	6666275	UnaryOperator	!		6666265	0					
ANR	6666276	BitAndExpression	tlb -> prot & PAGE_VALID		6666265	1		&			
ANR	6666277	PtrMemberAccess	tlb -> prot		6666265	0					
ANR	6666278	Identifier	tlb		6666265	0					
ANR	6666279	Identifier	prot		6666265	1					
ANR	6666280	Identifier	PAGE_VALID		6666265	1					
ANR	6666281	CompoundStatement		9:35:91:91	6666265	1					
ANR	6666282	ExpressionStatement	"qemu_log ( ""%s: TLB %d not valid\\n"" , __func__ , i )"	19:8:361:408	6666265	0	True				
ANR	6666283	CallExpression	"qemu_log ( ""%s: TLB %d not valid\\n"" , __func__ , i )"		6666265	0					
ANR	6666284	Callee	qemu_log		6666265	0					
ANR	6666285	Identifier	qemu_log		6666265	0					
ANR	6666286	ArgumentList	"""%s: TLB %d not valid\\n"""		6666265	1					
ANR	6666287	Argument	"""%s: TLB %d not valid\\n"""		6666265	0					
ANR	6666288	PrimaryExpression	"""%s: TLB %d not valid\\n"""		6666265	0					
ANR	6666289	Argument	__func__		6666265	1					
ANR	6666290	Identifier	__func__		6666265	0					
ANR	6666291	Argument	i		6666265	2					
ANR	6666292	Identifier	i		6666265	0					
ANR	6666293	ReturnStatement	return - 1 ;	21:8:419:428	6666265	1	True				
ANR	6666294	UnaryOperationExpression	- 1		6666265	0					
ANR	6666295	UnaryOperator	-		6666265	0					
ANR	6666296	PrimaryExpression	1		6666265	1					
ANR	6666297	ExpressionStatement	mask = ~ ( tlb -> size - 1 )	25:4:442:465	6666265	2	True				
ANR	6666298	AssignmentExpression	mask = ~ ( tlb -> size - 1 )		6666265	0		=			
ANR	6666299	Identifier	mask		6666265	0					
ANR	6666300	UnaryOperationExpression	~ ( tlb -> size - 1 )		6666265	1					
ANR	6666301	UnaryOperator	~		6666265	0					
ANR	6666302	AdditiveExpression	tlb -> size - 1		6666265	1		-			
ANR	6666303	PtrMemberAccess	tlb -> size		6666265	0					
ANR	6666304	Identifier	tlb		6666265	0					
ANR	6666305	Identifier	size		6666265	1					
ANR	6666306	PrimaryExpression	1		6666265	1					
ANR	6666307	Statement	LOG_SWTLB	27:4:472:480	6666265	3	True				
ANR	6666308	Statement	(	27:13:481:481	6666265	4	True				
ANR	6666309	Statement	"""%s: TLB %d address """	27:14:482:502	6666265	5	True				
ANR	6666310	Statement	TARGET_FMT_lx	27:36:504:516	6666265	6	True				
ANR	6666311	Statement	""" PID %u <=> """	27:50:518:531	6666265	7	True				
ANR	6666312	Statement	TARGET_FMT_lx	27:65:533:545	6666265	8	True				
ANR	6666313	Statement	""" """	29:14:562:564	6666265	9	True				
ANR	6666314	Statement	TARGET_FMT_lx	29:18:566:578	6666265	10	True				
ANR	6666315	Statement	""" %u\\n"""	29:32:580:586	6666265	11	True				
ANR	6666316	Statement	","	29:39:587:587	6666265	12	True				
ANR	6666317	Statement	__func__	29:41:589:596	6666265	13	True				
ANR	6666318	Statement	","	29:49:597:597	6666265	14	True				
ANR	6666319	Statement	i	29:51:599:599	6666265	15	True				
ANR	6666320	Statement	","	29:52:600:600	6666265	16	True				
ANR	6666321	Statement	address	29:54:602:608	6666265	17	True				
ANR	6666322	Statement	","	29:61:609:609	6666265	18	True				
ANR	6666323	Statement	pid	29:63:611:613	6666265	19	True				
ANR	6666324	Statement	","	29:66:614:614	6666265	20	True				
ANR	6666325	Statement	tlb	29:68:616:618	6666265	21	True				
ANR	6666326	Statement	->	29:71:619:620	6666265	22	True				
ANR	6666327	Statement	EPN	29:73:621:623	6666265	23	True				
ANR	6666328	Statement	","	29:76:624:624	6666265	24	True				
ANR	6666329	Statement	mask	31:14:641:644	6666265	25	True				
ANR	6666330	Statement	","	31:18:645:645	6666265	26	True				
ANR	6666331	Statement	(	31:20:647:647	6666265	27	True				
ANR	6666332	Statement	uint32_t	31:21:648:655	6666265	28	True				
ANR	6666333	Statement	)	31:29:656:656	6666265	29	True				
ANR	6666334	Statement	tlb	31:30:657:659	6666265	30	True				
ANR	6666335	Statement	->	31:33:660:661	6666265	31	True				
ANR	6666336	Statement	PID	31:35:662:664	6666265	32	True				
ANR	6666337	Statement	)	31:38:665:665	6666265	33	True				
ANR	6666338	ExpressionStatement		31:39:666:666	6666265	34	True				
ANR	6666339	IfStatement	if ( tlb -> PID != 0 && tlb -> PID != pid )		6666265	35					
ANR	6666340	Condition	tlb -> PID != 0 && tlb -> PID != pid	35:8:698:729	6666265	0	True				
ANR	6666341	AndExpression	tlb -> PID != 0 && tlb -> PID != pid		6666265	0		&&			
ANR	6666342	EqualityExpression	tlb -> PID != 0		6666265	0		!=			
ANR	6666343	PtrMemberAccess	tlb -> PID		6666265	0					
ANR	6666344	Identifier	tlb		6666265	0					
ANR	6666345	Identifier	PID		6666265	1					
ANR	6666346	PrimaryExpression	0		6666265	1					
ANR	6666347	EqualityExpression	tlb -> PID != pid		6666265	1		!=			
ANR	6666348	PtrMemberAccess	tlb -> PID		6666265	0					
ANR	6666349	Identifier	tlb		6666265	0					
ANR	6666350	Identifier	PID		6666265	1					
ANR	6666351	Identifier	pid		6666265	1					
ANR	6666352	ReturnStatement	return - 1 ;	37:8:741:750	6666265	1	True				
ANR	6666353	UnaryOperationExpression	- 1		6666265	0					
ANR	6666354	UnaryOperator	-		6666265	0					
ANR	6666355	PrimaryExpression	1		6666265	1					
ANR	6666356	IfStatement	if ( ( address & mask ) != tlb -> EPN )		6666265	36					
ANR	6666357	Condition	( address & mask ) != tlb -> EPN	41:8:796:823	6666265	0	True				
ANR	6666358	EqualityExpression	( address & mask ) != tlb -> EPN		6666265	0		!=			
ANR	6666359	BitAndExpression	address & mask		6666265	0		&			
ANR	6666360	Identifier	address		6666265	0					
ANR	6666361	Identifier	mask		6666265	1					
ANR	6666362	PtrMemberAccess	tlb -> EPN		6666265	1					
ANR	6666363	Identifier	tlb		6666265	0					
ANR	6666364	Identifier	EPN		6666265	1					
ANR	6666365	ReturnStatement	return - 1 ;	43:8:835:844	6666265	1	True				
ANR	6666366	UnaryOperationExpression	- 1		6666265	0					
ANR	6666367	UnaryOperator	-		6666265	0					
ANR	6666368	PrimaryExpression	1		6666265	1					
ANR	6666369	ExpressionStatement	* raddrp = ( tlb -> RPN & mask ) | ( address & ~mask )	45:4:851:898	6666265	37	True				
ANR	6666370	AssignmentExpression	* raddrp = ( tlb -> RPN & mask ) | ( address & ~mask )		6666265	0		=			
ANR	6666371	UnaryOperationExpression	* raddrp		6666265	0					
ANR	6666372	UnaryOperator	*		6666265	0					
ANR	6666373	Identifier	raddrp		6666265	1					
ANR	6666374	InclusiveOrExpression	( tlb -> RPN & mask ) | ( address & ~mask )		6666265	1		|			
ANR	6666375	BitAndExpression	tlb -> RPN & mask		6666265	0		&			
ANR	6666376	PtrMemberAccess	tlb -> RPN		6666265	0					
ANR	6666377	Identifier	tlb		6666265	0					
ANR	6666378	Identifier	RPN		6666265	1					
ANR	6666379	Identifier	mask		6666265	1					
ANR	6666380	BitAndExpression	address & ~mask		6666265	1		&			
ANR	6666381	Identifier	address		6666265	0					
ANR	6666382	Identifier	~mask		6666265	1					
ANR	6666383	IfStatement	if ( ext )		6666265	38					
ANR	6666384	Condition	ext	49:8:944:946	6666265	0	True				
ANR	6666385	Identifier	ext		6666265	0					
ANR	6666386	CompoundStatement		41:13:690:690	6666265	1					
ANR	6666387	ExpressionStatement	* raddrp |= ( target_phys_addr_t ) ( tlb -> RPN & 0xF ) << 32	53:8:1014:1067	6666265	0	True				
ANR	6666388	AssignmentExpression	* raddrp |= ( target_phys_addr_t ) ( tlb -> RPN & 0xF ) << 32		6666265	0		|=			
ANR	6666389	UnaryOperationExpression	* raddrp		6666265	0					
ANR	6666390	UnaryOperator	*		6666265	0					
ANR	6666391	Identifier	raddrp		6666265	1					
ANR	6666392	ShiftExpression	( target_phys_addr_t ) ( tlb -> RPN & 0xF ) << 32		6666265	1		<<			
ANR	6666393	CastExpression	( target_phys_addr_t ) ( tlb -> RPN & 0xF )		6666265	0					
ANR	6666394	CastTarget	target_phys_addr_t		6666265	0					
ANR	6666395	BitAndExpression	tlb -> RPN & 0xF		6666265	1		&			
ANR	6666396	PtrMemberAccess	tlb -> RPN		6666265	0					
ANR	6666397	Identifier	tlb		6666265	0					
ANR	6666398	Identifier	RPN		6666265	1					
ANR	6666399	PrimaryExpression	0xF		6666265	1					
ANR	6666400	PrimaryExpression	32		6666265	1					
ANR	6666401	ReturnStatement	return 0 ;	61:4:1091:1099	6666265	39	True				
ANR	6666402	PrimaryExpression	0		6666265	0					
ANR	6666403	ReturnType	static inline int		6666265	1					
ANR	6666404	Identifier	ppcemb_tlb_check		6666265	2					
ANR	6666405	ParameterList	"CPUState * env , ppcemb_tlb_t * tlb , target_phys_addr_t * raddrp , target_ulong address , uint32_t pid , int ext , int i"		6666265	3					
ANR	6666406	Parameter	CPUState * env	1:35:35:47	6666265	0	True				
ANR	6666407	ParameterType	CPUState *		6666265	0					
ANR	6666408	Identifier	env		6666265	1					
ANR	6666409	Parameter	ppcemb_tlb_t * tlb	1:50:50:66	6666265	1	True				
ANR	6666410	ParameterType	ppcemb_tlb_t *		6666265	0					
ANR	6666411	Identifier	tlb		6666265	1					
ANR	6666412	Parameter	target_phys_addr_t * raddrp	3:35:105:130	6666265	2	True				
ANR	6666413	ParameterType	target_phys_addr_t *		6666265	0					
ANR	6666414	Identifier	raddrp		6666265	1					
ANR	6666415	Parameter	target_ulong address	5:35:169:188	6666265	3	True				
ANR	6666416	ParameterType	target_ulong		6666265	0					
ANR	6666417	Identifier	address		6666265	1					
ANR	6666418	Parameter	uint32_t pid	5:57:191:202	6666265	4	True				
ANR	6666419	ParameterType	uint32_t		6666265	0					
ANR	6666420	Identifier	pid		6666265	1					
ANR	6666421	Parameter	int ext	5:71:205:211	6666265	5	True				
ANR	6666422	ParameterType	int		6666265	0					
ANR	6666423	Identifier	ext		6666265	1					
ANR	6666424	Parameter	int i	7:35:250:254	6666265	6	True				
ANR	6666425	ParameterType	int		6666265	0					
ANR	6666426	Identifier	i		6666265	1					
ANR	6666427	CFGEntryNode	ENTRY		6666265		True				
ANR	6666428	CFGExitNode	EXIT		6666265		True				
ANR	6666429	Symbol	ext		6666265						
ANR	6666430	Symbol	raddrp		6666265						
ANR	6666431	Symbol	address		6666265						
ANR	6666432	Symbol	* raddrp		6666265						
ANR	6666433	Symbol	PAGE_VALID		6666265						
ANR	6666434	Symbol	tlb -> size		6666265						
ANR	6666435	Symbol	~mask		6666265						
ANR	6666436	Symbol	i		6666265						
ANR	6666437	Symbol	pid		6666265						
ANR	6666438	Symbol	tlb		6666265						
ANR	6666439	Symbol	env		6666265						
ANR	6666440	Symbol	tlb -> EPN		6666265						
ANR	6666441	Symbol	tlb -> prot		6666265						
ANR	6666442	Symbol	tlb -> RPN		6666265						
ANR	6666443	Symbol	* tlb		6666265						
ANR	6666444	Symbol	__func__		6666265						
ANR	6666445	Symbol	tlb -> PID		6666265						
ANR	6666446	Symbol	mask		6666265						
