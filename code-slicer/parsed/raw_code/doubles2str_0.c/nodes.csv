command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2761928	File	/home/p4ultr4n/workplace/ReVeal/raw_code/doubles2str_0.c								
ANR	2761929	Function	doubles2str	1:0:0:598							
ANR	2761930	FunctionDef	"doubles2str (double * dp , int count , const char * sep)"		2761929	0					
ANR	2761931	CompoundStatement		3:0:66:598	2761929	0					
ANR	2761932	IdentifierDeclStatement	int i ;	5:4:73:78	2761929	0	True				
ANR	2761933	IdentifierDecl	i		2761929	0					
ANR	2761934	IdentifierDeclType	int		2761929	0					
ANR	2761935	Identifier	i		2761929	1					
ANR	2761936	IdentifierDeclStatement	"char * ap , * ap0 ;"	7:4:85:99	2761929	1	True				
ANR	2761937	IdentifierDecl	* ap		2761929	0					
ANR	2761938	IdentifierDeclType	char *		2761929	0					
ANR	2761939	Identifier	ap		2761929	1					
ANR	2761940	IdentifierDecl	* ap0		2761929	1					
ANR	2761941	IdentifierDeclType	char *		2761929	0					
ANR	2761942	Identifier	ap0		2761929	1					
ANR	2761943	IdentifierDeclStatement	int component_len ;	9:4:106:123	2761929	2	True				
ANR	2761944	IdentifierDecl	component_len		2761929	0					
ANR	2761945	IdentifierDeclType	int		2761929	0					
ANR	2761946	Identifier	component_len		2761929	1					
ANR	2761947	IfStatement	if ( ! sep )		2761929	3					
ANR	2761948	Condition	! sep	11:8:134:137	2761929	0	True				
ANR	2761949	UnaryOperationExpression	! sep		2761929	0					
ANR	2761950	UnaryOperator	!		2761929	0					
ANR	2761951	Identifier	sep		2761929	1					
ANR	2761952	ExpressionStatement	"sep = "", """	11:14:140:150	2761929	1	True				
ANR	2761953	AssignmentExpression	"sep = "", """		2761929	0		=			
ANR	2761954	Identifier	sep		2761929	0					
ANR	2761955	PrimaryExpression	""", """		2761929	1					
ANR	2761956	ExpressionStatement	component_len = 15 + strlen ( sep )	13:4:157:189	2761929	4	True				
ANR	2761957	AssignmentExpression	component_len = 15 + strlen ( sep )		2761929	0		=			
ANR	2761958	Identifier	component_len		2761929	0					
ANR	2761959	AdditiveExpression	15 + strlen ( sep )		2761929	1		+			
ANR	2761960	PrimaryExpression	15		2761929	0					
ANR	2761961	CallExpression	strlen ( sep )		2761929	1					
ANR	2761962	Callee	strlen		2761929	0					
ANR	2761963	Identifier	strlen		2761929	0					
ANR	2761964	ArgumentList	sep		2761929	1					
ANR	2761965	Argument	sep		2761929	0					
ANR	2761966	Identifier	sep		2761929	0					
ANR	2761967	ExpressionStatement	ap = av_malloc ( component_len * count )	15:4:196:233	2761929	5	True				
ANR	2761968	AssignmentExpression	ap = av_malloc ( component_len * count )		2761929	0		=			
ANR	2761969	Identifier	ap		2761929	0					
ANR	2761970	CallExpression	av_malloc ( component_len * count )		2761929	1					
ANR	2761971	Callee	av_malloc		2761929	0					
ANR	2761972	Identifier	av_malloc		2761929	0					
ANR	2761973	ArgumentList	component_len * count		2761929	1					
ANR	2761974	Argument	component_len * count		2761929	0					
ANR	2761975	MultiplicativeExpression	component_len * count		2761929	0		*			
ANR	2761976	Identifier	component_len		2761929	0					
ANR	2761977	Identifier	count		2761929	1					
ANR	2761978	IfStatement	if ( ! ap )		2761929	6					
ANR	2761979	Condition	! ap	17:8:244:246	2761929	0	True				
ANR	2761980	UnaryOperationExpression	! ap		2761929	0					
ANR	2761981	UnaryOperator	!		2761929	0					
ANR	2761982	Identifier	ap		2761929	1					
ANR	2761983	ReturnStatement	return NULL ;	19:8:258:269	2761929	1	True				
ANR	2761984	Identifier	NULL		2761929	0					
ANR	2761985	ExpressionStatement	ap0 = ap	21:4:276:286	2761929	7	True				
ANR	2761986	AssignmentExpression	ap0 = ap		2761929	0		=			
ANR	2761987	Identifier	ap0		2761929	0					
ANR	2761988	Identifier	ap		2761929	1					
ANR	2761989	ExpressionStatement	ap [ 0 ] = '\\0'	23:4:293:305	2761929	8	True				
ANR	2761990	AssignmentExpression	ap [ 0 ] = '\\0'		2761929	0		=			
ANR	2761991	ArrayIndexing	ap [ 0 ]		2761929	0					
ANR	2761992	Identifier	ap		2761929	0					
ANR	2761993	PrimaryExpression	0		2761929	1					
ANR	2761994	PrimaryExpression	'\\0'		2761929	1					
ANR	2761995	ForStatement	for ( i = 0 ; i < count ; i ++ )		2761929	9					
ANR	2761996	ForInit	i = 0 ;	25:9:317:322	2761929	0	True				
ANR	2761997	AssignmentExpression	i = 0		2761929	0		=			
ANR	2761998	Identifier	i		2761929	0					
ANR	2761999	PrimaryExpression	0		2761929	1					
ANR	2762000	Condition	i < count	25:16:324:332	2761929	1	True				
ANR	2762001	RelationalExpression	i < count		2761929	0		<			
ANR	2762002	Identifier	i		2761929	0					
ANR	2762003	Identifier	count		2761929	1					
ANR	2762004	PostIncDecOperationExpression	i ++	25:27:335:337	2761929	2	True				
ANR	2762005	Identifier	i		2761929	0					
ANR	2762006	IncDec	++		2761929	1					
ANR	2762007	CompoundStatement		25:8:284:344	2761929	3					
ANR	2762008	IdentifierDeclStatement	"unsigned l = snprintf ( ap , component_len , ""%f%s"" , dp [ i ] , sep ) ;"	27:8:351:411	2761929	0	True				
ANR	2762009	IdentifierDecl	"l = snprintf ( ap , component_len , ""%f%s"" , dp [ i ] , sep )"		2761929	0					
ANR	2762010	IdentifierDeclType	unsigned		2761929	0					
ANR	2762011	Identifier	l		2761929	1					
ANR	2762012	AssignmentExpression	"l = snprintf ( ap , component_len , ""%f%s"" , dp [ i ] , sep )"		2761929	2		=			
ANR	2762013	Identifier	l		2761929	0					
ANR	2762014	CallExpression	"snprintf ( ap , component_len , ""%f%s"" , dp [ i ] , sep )"		2761929	1					
ANR	2762015	Callee	snprintf		2761929	0					
ANR	2762016	Identifier	snprintf		2761929	0					
ANR	2762017	ArgumentList	ap		2761929	1					
ANR	2762018	Argument	ap		2761929	0					
ANR	2762019	Identifier	ap		2761929	0					
ANR	2762020	Argument	component_len		2761929	1					
ANR	2762021	Identifier	component_len		2761929	0					
ANR	2762022	Argument	"""%f%s"""		2761929	2					
ANR	2762023	PrimaryExpression	"""%f%s"""		2761929	0					
ANR	2762024	Argument	dp [ i ]		2761929	3					
ANR	2762025	ArrayIndexing	dp [ i ]		2761929	0					
ANR	2762026	Identifier	dp		2761929	0					
ANR	2762027	Identifier	i		2761929	1					
ANR	2762028	Argument	sep		2761929	4					
ANR	2762029	Identifier	sep		2761929	0					
ANR	2762030	IfStatement	if ( l >= component_len )		2761929	1					
ANR	2762031	Condition	l >= component_len	29:11:425:442	2761929	0	True				
ANR	2762032	RelationalExpression	l >= component_len		2761929	0		>=			
ANR	2762033	Identifier	l		2761929	0					
ANR	2762034	Identifier	component_len		2761929	1					
ANR	2762035	CompoundStatement		27:31:378:378	2761929	1					
ANR	2762036	ExpressionStatement	av_free ( ap0 )	31:12:460:472	2761929	0	True				
ANR	2762037	CallExpression	av_free ( ap0 )		2761929	0					
ANR	2762038	Callee	av_free		2761929	0					
ANR	2762039	Identifier	av_free		2761929	0					
ANR	2762040	ArgumentList	ap0		2761929	1					
ANR	2762041	Argument	ap0		2761929	0					
ANR	2762042	Identifier	ap0		2761929	0					
ANR	2762043	ReturnStatement	return NULL ;	33:12:487:498	2761929	1	True				
ANR	2762044	Identifier	NULL		2761929	0					
ANR	2762045	ExpressionStatement	ap += l	37:8:520:527	2761929	2	True				
ANR	2762046	AssignmentExpression	ap += l		2761929	0		+=			
ANR	2762047	Identifier	ap		2761929	0					
ANR	2762048	Identifier	l		2761929	1					
ANR	2762049	ExpressionStatement	ap0 [ strlen ( ap0 ) - strlen ( sep ) ] = '\\0'	41:4:541:578	2761929	10	True				
ANR	2762050	AssignmentExpression	ap0 [ strlen ( ap0 ) - strlen ( sep ) ] = '\\0'		2761929	0		=			
ANR	2762051	ArrayIndexing	ap0 [ strlen ( ap0 ) - strlen ( sep ) ]		2761929	0					
ANR	2762052	Identifier	ap0		2761929	0					
ANR	2762053	AdditiveExpression	strlen ( ap0 ) - strlen ( sep )		2761929	1		-			
ANR	2762054	CallExpression	strlen ( ap0 )		2761929	0					
ANR	2762055	Callee	strlen		2761929	0					
ANR	2762056	Identifier	strlen		2761929	0					
ANR	2762057	ArgumentList	ap0		2761929	1					
ANR	2762058	Argument	ap0		2761929	0					
ANR	2762059	Identifier	ap0		2761929	0					
ANR	2762060	CallExpression	strlen ( sep )		2761929	1					
ANR	2762061	Callee	strlen		2761929	0					
ANR	2762062	Identifier	strlen		2761929	0					
ANR	2762063	ArgumentList	sep		2761929	1					
ANR	2762064	Argument	sep		2761929	0					
ANR	2762065	Identifier	sep		2761929	0					
ANR	2762066	PrimaryExpression	'\\0'		2761929	1					
ANR	2762067	ReturnStatement	return ap0 ;	43:4:585:595	2761929	11	True				
ANR	2762068	Identifier	ap0		2761929	0					
ANR	2762069	ReturnType	static char *		2761929	1					
ANR	2762070	Identifier	doubles2str		2761929	2					
ANR	2762071	ParameterList	"double * dp , int count , const char * sep"		2761929	3					
ANR	2762072	Parameter	double * dp	1:25:25:34	2761929	0	True				
ANR	2762073	ParameterType	double *		2761929	0					
ANR	2762074	Identifier	dp		2761929	1					
ANR	2762075	Parameter	int count	1:37:37:45	2761929	1	True				
ANR	2762076	ParameterType	int		2761929	0					
ANR	2762077	Identifier	count		2761929	1					
ANR	2762078	Parameter	const char * sep	1:48:48:62	2761929	2	True				
ANR	2762079	ParameterType	const char *		2761929	0					
ANR	2762080	Identifier	sep		2761929	1					
ANR	2762081	CFGEntryNode	ENTRY		2761929		True				
ANR	2762082	CFGExitNode	EXIT		2761929		True				
ANR	2762083	Symbol	ap0		2761929						
ANR	2762084	Symbol	av_malloc		2761929						
ANR	2762085	Symbol	NULL		2761929						
ANR	2762086	Symbol	count		2761929						
ANR	2762087	Symbol	component_len		2761929						
ANR	2762088	Symbol	i		2761929						
ANR	2762089	Symbol	dp		2761929						
ANR	2762090	Symbol	l		2761929						
ANR	2762091	Symbol	ap		2761929						
ANR	2762092	Symbol	strlen		2761929						
ANR	2762093	Symbol	* dp		2761929						
ANR	2762094	Symbol	* i		2761929						
ANR	2762095	Symbol	* strlen		2761929						
ANR	2762096	Symbol	* ap0		2761929						
ANR	2762097	Symbol	* ap		2761929						
ANR	2762098	Symbol	sep		2761929						
ANR	2762099	Symbol	snprintf		2761929						
