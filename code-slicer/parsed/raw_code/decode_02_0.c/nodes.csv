command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1677052	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_02_0.c								
ANR	1677053	Function	decode	1:0:0:1431							
ANR	1677054	FunctionDef	decode (DisasContext * dc)		1677053	0					
ANR	1677055	CompoundStatement		3:0:45:1431	1677053	0					
ANR	1677056	IdentifierDeclStatement	uint32_t ir ;	5:4:52:63	1677053	0	True				
ANR	1677057	IdentifierDecl	ir		1677053	0					
ANR	1677058	IdentifierDeclType	uint32_t		1677053	0					
ANR	1677059	Identifier	ir		1677053	1					
ANR	1677060	IdentifierDeclStatement	int i ;	7:4:70:75	1677053	1	True				
ANR	1677061	IdentifierDecl	i		1677053	0					
ANR	1677062	IdentifierDeclType	int		1677053	0					
ANR	1677063	Identifier	i		1677053	1					
ANR	1677064	IfStatement	if ( unlikely ( qemu_loglevel_mask ( CPU_LOG_TB_OP ) ) )		1677053	2					
ANR	1677065	Condition	unlikely ( qemu_loglevel_mask ( CPU_LOG_TB_OP ) )	11:8:88:130	1677053	0	True				
ANR	1677066	CallExpression	unlikely ( qemu_loglevel_mask ( CPU_LOG_TB_OP ) )		1677053	0					
ANR	1677067	Callee	unlikely		1677053	0					
ANR	1677068	Identifier	unlikely		1677053	0					
ANR	1677069	ArgumentList	qemu_loglevel_mask ( CPU_LOG_TB_OP )		1677053	1					
ANR	1677070	Argument	qemu_loglevel_mask ( CPU_LOG_TB_OP )		1677053	0					
ANR	1677071	CallExpression	qemu_loglevel_mask ( CPU_LOG_TB_OP )		1677053	0					
ANR	1677072	Callee	qemu_loglevel_mask		1677053	0					
ANR	1677073	Identifier	qemu_loglevel_mask		1677053	0					
ANR	1677074	ArgumentList	CPU_LOG_TB_OP		1677053	1					
ANR	1677075	Argument	CPU_LOG_TB_OP		1677053	0					
ANR	1677076	Identifier	CPU_LOG_TB_OP		1677053	0					
ANR	1677077	CompoundStatement		9:53:87:87	1677053	1					
ANR	1677078	ExpressionStatement	tcg_gen_debug_insn_start ( dc -> pc )	13:8:144:176	1677053	0	True				
ANR	1677079	CallExpression	tcg_gen_debug_insn_start ( dc -> pc )		1677053	0					
ANR	1677080	Callee	tcg_gen_debug_insn_start		1677053	0					
ANR	1677081	Identifier	tcg_gen_debug_insn_start		1677053	0					
ANR	1677082	ArgumentList	dc -> pc		1677053	1					
ANR	1677083	Argument	dc -> pc		1677053	0					
ANR	1677084	PtrMemberAccess	dc -> pc		1677053	0					
ANR	1677085	Identifier	dc		1677053	0					
ANR	1677086	Identifier	pc		1677053	1					
ANR	1677087	ExpressionStatement	dc -> ir = ir = ldl_code ( dc -> pc )	19:4:192:222	1677053	3	True				
ANR	1677088	AssignmentExpression	dc -> ir = ir = ldl_code ( dc -> pc )		1677053	0		=			
ANR	1677089	PtrMemberAccess	dc -> ir		1677053	0					
ANR	1677090	Identifier	dc		1677053	0					
ANR	1677091	Identifier	ir		1677053	1					
ANR	1677092	AssignmentExpression	ir = ldl_code ( dc -> pc )		1677053	1		=			
ANR	1677093	Identifier	ir		1677053	0					
ANR	1677094	CallExpression	ldl_code ( dc -> pc )		1677053	1					
ANR	1677095	Callee	ldl_code		1677053	0					
ANR	1677096	Identifier	ldl_code		1677053	0					
ANR	1677097	ArgumentList	dc -> pc		1677053	1					
ANR	1677098	Argument	dc -> pc		1677053	0					
ANR	1677099	PtrMemberAccess	dc -> pc		1677053	0					
ANR	1677100	Identifier	dc		1677053	0					
ANR	1677101	Identifier	pc		1677053	1					
ANR	1677102	ExpressionStatement	"LOG_DIS ( ""%8.8x\\t"" , dc -> ir )"	21:4:229:255	1677053	4	True				
ANR	1677103	CallExpression	"LOG_DIS ( ""%8.8x\\t"" , dc -> ir )"		1677053	0					
ANR	1677104	Callee	LOG_DIS		1677053	0					
ANR	1677105	Identifier	LOG_DIS		1677053	0					
ANR	1677106	ArgumentList	"""%8.8x\\t"""		1677053	1					
ANR	1677107	Argument	"""%8.8x\\t"""		1677053	0					
ANR	1677108	PrimaryExpression	"""%8.8x\\t"""		1677053	0					
ANR	1677109	Argument	dc -> ir		1677053	1					
ANR	1677110	PtrMemberAccess	dc -> ir		1677053	0					
ANR	1677111	Identifier	dc		1677053	0					
ANR	1677112	Identifier	ir		1677053	1					
ANR	1677113	IfStatement	if ( dc -> ir )		1677053	5					
ANR	1677114	Condition	dc -> ir	29:8:397:402	1677053	0	True				
ANR	1677115	PtrMemberAccess	dc -> ir		1677053	0					
ANR	1677116	Identifier	dc		1677053	0					
ANR	1677117	Identifier	ir		1677053	1					
ANR	1677118	CompoundStatement		27:16:359:359	1677053	1					
ANR	1677119	ExpressionStatement	dc -> nr_nops = 0	31:8:416:431	1677053	0	True				
ANR	1677120	AssignmentExpression	dc -> nr_nops = 0		1677053	0		=			
ANR	1677121	PtrMemberAccess	dc -> nr_nops		1677053	0					
ANR	1677122	Identifier	dc		1677053	0					
ANR	1677123	Identifier	nr_nops		1677053	1					
ANR	1677124	PrimaryExpression	0		1677053	1					
ANR	1677125	ElseStatement	else		1677053	0					
ANR	1677126	CompoundStatement		31:11:399:399	1677053	0					
ANR	1677127	ExpressionStatement	"LOG_DIS ( ""nr_nops=%d\\t"" , dc -> nr_nops )"	35:8:456:492	1677053	0	True				
ANR	1677128	CallExpression	"LOG_DIS ( ""nr_nops=%d\\t"" , dc -> nr_nops )"		1677053	0					
ANR	1677129	Callee	LOG_DIS		1677053	0					
ANR	1677130	Identifier	LOG_DIS		1677053	0					
ANR	1677131	ArgumentList	"""nr_nops=%d\\t"""		1677053	1					
ANR	1677132	Argument	"""nr_nops=%d\\t"""		1677053	0					
ANR	1677133	PrimaryExpression	"""nr_nops=%d\\t"""		1677053	0					
ANR	1677134	Argument	dc -> nr_nops		1677053	1					
ANR	1677135	PtrMemberAccess	dc -> nr_nops		1677053	0					
ANR	1677136	Identifier	dc		1677053	0					
ANR	1677137	Identifier	nr_nops		1677053	1					
ANR	1677138	ExpressionStatement	dc -> nr_nops ++	37:8:503:516	1677053	1	True				
ANR	1677139	PostIncDecOperationExpression	dc -> nr_nops ++		1677053	0					
ANR	1677140	PtrMemberAccess	dc -> nr_nops		1677053	0					
ANR	1677141	Identifier	dc		1677053	0					
ANR	1677142	Identifier	nr_nops		1677053	1					
ANR	1677143	IncDec	++		1677053	1					
ANR	1677144	IfStatement	if ( dc -> nr_nops > 4 )		1677053	2					
ANR	1677145	Condition	dc -> nr_nops > 4	39:12:531:545	1677053	0	True				
ANR	1677146	RelationalExpression	dc -> nr_nops > 4		1677053	0		>			
ANR	1677147	PtrMemberAccess	dc -> nr_nops		1677053	0					
ANR	1677148	Identifier	dc		1677053	0					
ANR	1677149	Identifier	nr_nops		1677053	1					
ANR	1677150	PrimaryExpression	4		1677053	1					
ANR	1677151	CompoundStatement		37:29:502:502	1677053	1					
ANR	1677152	ExpressionStatement	"cpu_abort ( dc -> env , ""fetching nop sequence\\n"" )"	41:12:563:608	1677053	0	True				
ANR	1677153	CallExpression	"cpu_abort ( dc -> env , ""fetching nop sequence\\n"" )"		1677053	0					
ANR	1677154	Callee	cpu_abort		1677053	0					
ANR	1677155	Identifier	cpu_abort		1677053	0					
ANR	1677156	ArgumentList	dc -> env		1677053	1					
ANR	1677157	Argument	dc -> env		1677053	0					
ANR	1677158	PtrMemberAccess	dc -> env		1677053	0					
ANR	1677159	Identifier	dc		1677053	0					
ANR	1677160	Identifier	env		1677053	1					
ANR	1677161	Argument	"""fetching nop sequence\\n"""		1677053	1					
ANR	1677162	PrimaryExpression	"""fetching nop sequence\\n"""		1677053	0					
ANR	1677163	ExpressionStatement	"dc -> opcode = EXTRACT_FIELD ( ir , 26 , 31 )"	49:4:635:673	1677053	6	True				
ANR	1677164	AssignmentExpression	"dc -> opcode = EXTRACT_FIELD ( ir , 26 , 31 )"		1677053	0		=			
ANR	1677165	PtrMemberAccess	dc -> opcode		1677053	0					
ANR	1677166	Identifier	dc		1677053	0					
ANR	1677167	Identifier	opcode		1677053	1					
ANR	1677168	CallExpression	"EXTRACT_FIELD ( ir , 26 , 31 )"		1677053	1					
ANR	1677169	Callee	EXTRACT_FIELD		1677053	0					
ANR	1677170	Identifier	EXTRACT_FIELD		1677053	0					
ANR	1677171	ArgumentList	ir		1677053	1					
ANR	1677172	Argument	ir		1677053	0					
ANR	1677173	Identifier	ir		1677053	0					
ANR	1677174	Argument	26		1677053	1					
ANR	1677175	PrimaryExpression	26		1677053	0					
ANR	1677176	Argument	31		1677053	2					
ANR	1677177	PrimaryExpression	31		1677053	0					
ANR	1677178	ExpressionStatement	"dc -> imm5 = EXTRACT_FIELD ( ir , 0 , 4 )"	53:4:682:716	1677053	7	True				
ANR	1677179	AssignmentExpression	"dc -> imm5 = EXTRACT_FIELD ( ir , 0 , 4 )"		1677053	0		=			
ANR	1677180	PtrMemberAccess	dc -> imm5		1677053	0					
ANR	1677181	Identifier	dc		1677053	0					
ANR	1677182	Identifier	imm5		1677053	1					
ANR	1677183	CallExpression	"EXTRACT_FIELD ( ir , 0 , 4 )"		1677053	1					
ANR	1677184	Callee	EXTRACT_FIELD		1677053	0					
ANR	1677185	Identifier	EXTRACT_FIELD		1677053	0					
ANR	1677186	ArgumentList	ir		1677053	1					
ANR	1677187	Argument	ir		1677053	0					
ANR	1677188	Identifier	ir		1677053	0					
ANR	1677189	Argument	0		1677053	1					
ANR	1677190	PrimaryExpression	0		1677053	0					
ANR	1677191	Argument	4		1677053	2					
ANR	1677192	PrimaryExpression	4		1677053	0					
ANR	1677193	ExpressionStatement	"dc -> imm16 = EXTRACT_FIELD ( ir , 0 , 15 )"	55:4:723:759	1677053	8	True				
ANR	1677194	AssignmentExpression	"dc -> imm16 = EXTRACT_FIELD ( ir , 0 , 15 )"		1677053	0		=			
ANR	1677195	PtrMemberAccess	dc -> imm16		1677053	0					
ANR	1677196	Identifier	dc		1677053	0					
ANR	1677197	Identifier	imm16		1677053	1					
ANR	1677198	CallExpression	"EXTRACT_FIELD ( ir , 0 , 15 )"		1677053	1					
ANR	1677199	Callee	EXTRACT_FIELD		1677053	0					
ANR	1677200	Identifier	EXTRACT_FIELD		1677053	0					
ANR	1677201	ArgumentList	ir		1677053	1					
ANR	1677202	Argument	ir		1677053	0					
ANR	1677203	Identifier	ir		1677053	0					
ANR	1677204	Argument	0		1677053	1					
ANR	1677205	PrimaryExpression	0		1677053	0					
ANR	1677206	Argument	15		1677053	2					
ANR	1677207	PrimaryExpression	15		1677053	0					
ANR	1677208	ExpressionStatement	"dc -> imm26 = EXTRACT_FIELD ( ir , 0 , 25 )"	57:4:766:802	1677053	9	True				
ANR	1677209	AssignmentExpression	"dc -> imm26 = EXTRACT_FIELD ( ir , 0 , 25 )"		1677053	0		=			
ANR	1677210	PtrMemberAccess	dc -> imm26		1677053	0					
ANR	1677211	Identifier	dc		1677053	0					
ANR	1677212	Identifier	imm26		1677053	1					
ANR	1677213	CallExpression	"EXTRACT_FIELD ( ir , 0 , 25 )"		1677053	1					
ANR	1677214	Callee	EXTRACT_FIELD		1677053	0					
ANR	1677215	Identifier	EXTRACT_FIELD		1677053	0					
ANR	1677216	ArgumentList	ir		1677053	1					
ANR	1677217	Argument	ir		1677053	0					
ANR	1677218	Identifier	ir		1677053	0					
ANR	1677219	Argument	0		1677053	1					
ANR	1677220	PrimaryExpression	0		1677053	0					
ANR	1677221	Argument	25		1677053	2					
ANR	1677222	PrimaryExpression	25		1677053	0					
ANR	1677223	ExpressionStatement	"dc -> csr = EXTRACT_FIELD ( ir , 21 , 25 )"	61:4:811:846	1677053	10	True				
ANR	1677224	AssignmentExpression	"dc -> csr = EXTRACT_FIELD ( ir , 21 , 25 )"		1677053	0		=			
ANR	1677225	PtrMemberAccess	dc -> csr		1677053	0					
ANR	1677226	Identifier	dc		1677053	0					
ANR	1677227	Identifier	csr		1677053	1					
ANR	1677228	CallExpression	"EXTRACT_FIELD ( ir , 21 , 25 )"		1677053	1					
ANR	1677229	Callee	EXTRACT_FIELD		1677053	0					
ANR	1677230	Identifier	EXTRACT_FIELD		1677053	0					
ANR	1677231	ArgumentList	ir		1677053	1					
ANR	1677232	Argument	ir		1677053	0					
ANR	1677233	Identifier	ir		1677053	0					
ANR	1677234	Argument	21		1677053	1					
ANR	1677235	PrimaryExpression	21		1677053	0					
ANR	1677236	Argument	25		1677053	2					
ANR	1677237	PrimaryExpression	25		1677053	0					
ANR	1677238	ExpressionStatement	"dc -> r0 = EXTRACT_FIELD ( ir , 21 , 25 )"	63:4:853:887	1677053	11	True				
ANR	1677239	AssignmentExpression	"dc -> r0 = EXTRACT_FIELD ( ir , 21 , 25 )"		1677053	0		=			
ANR	1677240	PtrMemberAccess	dc -> r0		1677053	0					
ANR	1677241	Identifier	dc		1677053	0					
ANR	1677242	Identifier	r0		1677053	1					
ANR	1677243	CallExpression	"EXTRACT_FIELD ( ir , 21 , 25 )"		1677053	1					
ANR	1677244	Callee	EXTRACT_FIELD		1677053	0					
ANR	1677245	Identifier	EXTRACT_FIELD		1677053	0					
ANR	1677246	ArgumentList	ir		1677053	1					
ANR	1677247	Argument	ir		1677053	0					
ANR	1677248	Identifier	ir		1677053	0					
ANR	1677249	Argument	21		1677053	1					
ANR	1677250	PrimaryExpression	21		1677053	0					
ANR	1677251	Argument	25		1677053	2					
ANR	1677252	PrimaryExpression	25		1677053	0					
ANR	1677253	ExpressionStatement	"dc -> r1 = EXTRACT_FIELD ( ir , 16 , 20 )"	65:4:894:928	1677053	12	True				
ANR	1677254	AssignmentExpression	"dc -> r1 = EXTRACT_FIELD ( ir , 16 , 20 )"		1677053	0		=			
ANR	1677255	PtrMemberAccess	dc -> r1		1677053	0					
ANR	1677256	Identifier	dc		1677053	0					
ANR	1677257	Identifier	r1		1677053	1					
ANR	1677258	CallExpression	"EXTRACT_FIELD ( ir , 16 , 20 )"		1677053	1					
ANR	1677259	Callee	EXTRACT_FIELD		1677053	0					
ANR	1677260	Identifier	EXTRACT_FIELD		1677053	0					
ANR	1677261	ArgumentList	ir		1677053	1					
ANR	1677262	Argument	ir		1677053	0					
ANR	1677263	Identifier	ir		1677053	0					
ANR	1677264	Argument	16		1677053	1					
ANR	1677265	PrimaryExpression	16		1677053	0					
ANR	1677266	Argument	20		1677053	2					
ANR	1677267	PrimaryExpression	20		1677053	0					
ANR	1677268	ExpressionStatement	"dc -> r2 = EXTRACT_FIELD ( ir , 11 , 15 )"	67:4:935:969	1677053	13	True				
ANR	1677269	AssignmentExpression	"dc -> r2 = EXTRACT_FIELD ( ir , 11 , 15 )"		1677053	0		=			
ANR	1677270	PtrMemberAccess	dc -> r2		1677053	0					
ANR	1677271	Identifier	dc		1677053	0					
ANR	1677272	Identifier	r2		1677053	1					
ANR	1677273	CallExpression	"EXTRACT_FIELD ( ir , 11 , 15 )"		1677053	1					
ANR	1677274	Callee	EXTRACT_FIELD		1677053	0					
ANR	1677275	Identifier	EXTRACT_FIELD		1677053	0					
ANR	1677276	ArgumentList	ir		1677053	1					
ANR	1677277	Argument	ir		1677053	0					
ANR	1677278	Identifier	ir		1677053	0					
ANR	1677279	Argument	11		1677053	1					
ANR	1677280	PrimaryExpression	11		1677053	0					
ANR	1677281	Argument	15		1677053	2					
ANR	1677282	PrimaryExpression	15		1677053	0					
ANR	1677283	IfStatement	if ( ir & ( 1 << 31 ) )		1677053	14					
ANR	1677284	Condition	ir & ( 1 << 31 )	73:8:1030:1043	1677053	0	True				
ANR	1677285	BitAndExpression	ir & ( 1 << 31 )		1677053	0		&			
ANR	1677286	Identifier	ir		1677053	0					
ANR	1677287	ShiftExpression	1 << 31		1677053	1		<<			
ANR	1677288	PrimaryExpression	1		1677053	0					
ANR	1677289	PrimaryExpression	31		1677053	1					
ANR	1677290	CompoundStatement		71:24:1000:1000	1677053	1					
ANR	1677291	ExpressionStatement	dc -> format = OP_FMT_RR	75:8:1057:1079	1677053	0	True				
ANR	1677292	AssignmentExpression	dc -> format = OP_FMT_RR		1677053	0		=			
ANR	1677293	PtrMemberAccess	dc -> format		1677053	0					
ANR	1677294	Identifier	dc		1677053	0					
ANR	1677295	Identifier	format		1677053	1					
ANR	1677296	Identifier	OP_FMT_RR		1677053	1					
ANR	1677297	ElseStatement	else		1677053	0					
ANR	1677298	CompoundStatement		75:11:1047:1047	1677053	0					
ANR	1677299	ExpressionStatement	dc -> format = OP_FMT_RI	79:8:1104:1126	1677053	0	True				
ANR	1677300	AssignmentExpression	dc -> format = OP_FMT_RI		1677053	0		=			
ANR	1677301	PtrMemberAccess	dc -> format		1677053	0					
ANR	1677302	Identifier	dc		1677053	0					
ANR	1677303	Identifier	format		1677053	1					
ANR	1677304	Identifier	OP_FMT_RI		1677053	1					
ANR	1677305	ForStatement	for ( i = 0 ; i < ARRAY_SIZE ( decinfo ) ; i ++ )		1677053	15					
ANR	1677306	ForInit	i = 0 ;	87:9:1187:1192	1677053	0	True				
ANR	1677307	AssignmentExpression	i = 0		1677053	0		=			
ANR	1677308	Identifier	i		1677053	0					
ANR	1677309	PrimaryExpression	0		1677053	1					
ANR	1677310	Condition	i < ARRAY_SIZE ( decinfo )	87:16:1194:1216	1677053	1	True				
ANR	1677311	RelationalExpression	i < ARRAY_SIZE ( decinfo )		1677053	0		<			
ANR	1677312	Identifier	i		1677053	0					
ANR	1677313	CallExpression	ARRAY_SIZE ( decinfo )		1677053	1					
ANR	1677314	Callee	ARRAY_SIZE		1677053	0					
ANR	1677315	Identifier	ARRAY_SIZE		1677053	0					
ANR	1677316	ArgumentList	decinfo		1677053	1					
ANR	1677317	Argument	decinfo		1677053	0					
ANR	1677318	Identifier	decinfo		1677053	0					
ANR	1677319	PostIncDecOperationExpression	i ++	87:41:1219:1221	1677053	2	True				
ANR	1677320	Identifier	i		1677053	0					
ANR	1677321	IncDec	++		1677053	1					
ANR	1677322	CompoundStatement		85:46:1178:1178	1677053	3					
ANR	1677323	IfStatement	if ( ( dc -> opcode & decinfo [ i ] . mask ) == decinfo [ i ] . bits )		1677053	0					
ANR	1677324	Condition	( dc -> opcode & decinfo [ i ] . mask ) == decinfo [ i ] . bits	89:12:1239:1287	1677053	0	True				
ANR	1677325	EqualityExpression	( dc -> opcode & decinfo [ i ] . mask ) == decinfo [ i ] . bits		1677053	0		==			
ANR	1677326	BitAndExpression	dc -> opcode & decinfo [ i ] . mask		1677053	0		&			
ANR	1677327	PtrMemberAccess	dc -> opcode		1677053	0					
ANR	1677328	Identifier	dc		1677053	0					
ANR	1677329	Identifier	opcode		1677053	1					
ANR	1677330	MemberAccess	decinfo [ i ] . mask		1677053	1					
ANR	1677331	ArrayIndexing	decinfo [ i ]		1677053	0					
ANR	1677332	Identifier	decinfo		1677053	0					
ANR	1677333	Identifier	i		1677053	1					
ANR	1677334	Identifier	mask		1677053	1					
ANR	1677335	MemberAccess	decinfo [ i ] . bits		1677053	1					
ANR	1677336	ArrayIndexing	decinfo [ i ]		1677053	0					
ANR	1677337	Identifier	decinfo		1677053	0					
ANR	1677338	Identifier	i		1677053	1					
ANR	1677339	Identifier	bits		1677053	1					
ANR	1677340	CompoundStatement		87:63:1244:1244	1677053	1					
ANR	1677341	ExpressionStatement	decinfo [ i ] . dec ( dc )	91:12:1305:1323	1677053	0	True				
ANR	1677342	CallExpression	decinfo [ i ] . dec ( dc )		1677053	0					
ANR	1677343	Callee	decinfo [ i ] . dec		1677053	0					
ANR	1677344	MemberAccess	decinfo [ i ] . dec		1677053	0					
ANR	1677345	ArrayIndexing	decinfo [ i ]		1677053	0					
ANR	1677346	Identifier	decinfo		1677053	0					
ANR	1677347	Identifier	i		1677053	1					
ANR	1677348	Identifier	dec		1677053	1					
ANR	1677349	ArgumentList	dc		1677053	1					
ANR	1677350	Argument	dc		1677053	0					
ANR	1677351	Identifier	dc		1677053	0					
ANR	1677352	ReturnStatement	return ;	93:12:1338:1344	1677053	1	True				
ANR	1677353	ExpressionStatement	"cpu_abort ( dc -> env , ""unknown opcode 0x%02x\\n"" , dc -> opcode )"	101:4:1371:1428	1677053	16	True				
ANR	1677354	CallExpression	"cpu_abort ( dc -> env , ""unknown opcode 0x%02x\\n"" , dc -> opcode )"		1677053	0					
ANR	1677355	Callee	cpu_abort		1677053	0					
ANR	1677356	Identifier	cpu_abort		1677053	0					
ANR	1677357	ArgumentList	dc -> env		1677053	1					
ANR	1677358	Argument	dc -> env		1677053	0					
ANR	1677359	PtrMemberAccess	dc -> env		1677053	0					
ANR	1677360	Identifier	dc		1677053	0					
ANR	1677361	Identifier	env		1677053	1					
ANR	1677362	Argument	"""unknown opcode 0x%02x\\n"""		1677053	1					
ANR	1677363	PrimaryExpression	"""unknown opcode 0x%02x\\n"""		1677053	0					
ANR	1677364	Argument	dc -> opcode		1677053	2					
ANR	1677365	PtrMemberAccess	dc -> opcode		1677053	0					
ANR	1677366	Identifier	dc		1677053	0					
ANR	1677367	Identifier	opcode		1677053	1					
ANR	1677368	ReturnType	static inline void		1677053	1					
ANR	1677369	Identifier	decode		1677053	2					
ANR	1677370	ParameterList	DisasContext * dc		1677053	3					
ANR	1677371	Parameter	DisasContext * dc	1:26:26:41	1677053	0	True				
ANR	1677372	ParameterType	DisasContext *		1677053	0					
ANR	1677373	Identifier	dc		1677053	1					
ANR	1677374	CFGEntryNode	ENTRY		1677053		True				
ANR	1677375	CFGExitNode	EXIT		1677053		True				
ANR	1677376	Symbol	CPU_LOG_TB_OP		1677053						
ANR	1677377	Symbol	qemu_loglevel_mask		1677053						
ANR	1677378	Symbol	dc -> nr_nops		1677053						
ANR	1677379	Symbol	dc -> csr		1677053						
ANR	1677380	Symbol	dc -> pc		1677053						
ANR	1677381	Symbol	EXTRACT_FIELD		1677053						
ANR	1677382	Symbol	dc -> r0		1677053						
ANR	1677383	Symbol	dc -> r1		1677053						
ANR	1677384	Symbol	decinfo		1677053						
ANR	1677385	Symbol	dc -> r2		1677053						
ANR	1677386	Symbol	dc -> format		1677053						
ANR	1677387	Symbol	decinfo [ i ] . bits		1677053						
ANR	1677388	Symbol	ARRAY_SIZE		1677053						
ANR	1677389	Symbol	unlikely		1677053						
ANR	1677390	Symbol	dc -> opcode		1677053						
ANR	1677391	Symbol	OP_FMT_RI		1677053						
ANR	1677392	Symbol	dc -> env		1677053						
ANR	1677393	Symbol	* dc		1677053						
ANR	1677394	Symbol	dc -> ir		1677053						
ANR	1677395	Symbol	dc -> imm26		1677053						
ANR	1677396	Symbol	ir		1677053						
ANR	1677397	Symbol	i		1677053						
ANR	1677398	Symbol	* i		1677053						
ANR	1677399	Symbol	decinfo [ i ] . mask		1677053						
ANR	1677400	Symbol	OP_FMT_RR		1677053						
ANR	1677401	Symbol	* decinfo		1677053						
ANR	1677402	Symbol	dc -> imm16		1677053						
ANR	1677403	Symbol	ldl_code		1677053						
ANR	1677404	Symbol	dc		1677053						
ANR	1677405	Symbol	dc -> imm5		1677053						
