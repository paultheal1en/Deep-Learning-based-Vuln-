command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6649609	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ppc_spapr_init_1.c								
ANR	6649610	Function	ppc_spapr_init	1:0:0:7178							
ANR	6649611	FunctionDef	"ppc_spapr_init (ram_addr_t ram_size , const char * boot_device , const char * kernel_filename , const char * kernel_cmdline , const char * initrd_filename , const char * cpu_model)"		6649610	0					
ANR	6649612	CompoundStatement		13:0:323:7178	6649610	0					
ANR	6649613	IdentifierDeclStatement	CPUState * env ;	15:4:330:343	6649610	0	True				
ANR	6649614	IdentifierDecl	* env		6649610	0					
ANR	6649615	IdentifierDeclType	CPUState *		6649610	0					
ANR	6649616	Identifier	env		6649610	1					
ANR	6649617	IdentifierDeclStatement	int i ;	17:4:350:355	6649610	1	True				
ANR	6649618	IdentifierDecl	i		6649610	0					
ANR	6649619	IdentifierDeclType	int		6649610	0					
ANR	6649620	Identifier	i		6649610	1					
ANR	6649621	IdentifierDeclStatement	MemoryRegion * sysmem = get_system_memory ( ) ;	19:4:362:404	6649610	2	True				
ANR	6649622	IdentifierDecl	* sysmem = get_system_memory ( )		6649610	0					
ANR	6649623	IdentifierDeclType	MemoryRegion *		6649610	0					
ANR	6649624	Identifier	sysmem		6649610	1					
ANR	6649625	AssignmentExpression	* sysmem = get_system_memory ( )		6649610	2		=			
ANR	6649626	Identifier	sysmem		6649610	0					
ANR	6649627	CallExpression	get_system_memory ( )		6649610	1					
ANR	6649628	Callee	get_system_memory		6649610	0					
ANR	6649629	Identifier	get_system_memory		6649610	0					
ANR	6649630	ArgumentList			6649610	1					
ANR	6649631	IdentifierDeclStatement	"MemoryRegion * ram = g_new ( MemoryRegion , 1 ) ;"	21:4:411:453	6649610	3	True				
ANR	6649632	IdentifierDecl	"* ram = g_new ( MemoryRegion , 1 )"		6649610	0					
ANR	6649633	IdentifierDeclType	MemoryRegion *		6649610	0					
ANR	6649634	Identifier	ram		6649610	1					
ANR	6649635	AssignmentExpression	"* ram = g_new ( MemoryRegion , 1 )"		6649610	2		=			
ANR	6649636	Identifier	ram		6649610	0					
ANR	6649637	CallExpression	"g_new ( MemoryRegion , 1 )"		6649610	1					
ANR	6649638	Callee	g_new		6649610	0					
ANR	6649639	Identifier	g_new		6649610	0					
ANR	6649640	ArgumentList	MemoryRegion		6649610	1					
ANR	6649641	Argument	MemoryRegion		6649610	0					
ANR	6649642	Identifier	MemoryRegion		6649610	0					
ANR	6649643	Argument	1		6649610	1					
ANR	6649644	PrimaryExpression	1		6649610	0					
ANR	6649645	IdentifierDeclStatement	"target_phys_addr_t rma_alloc_size , rma_size ;"	23:4:460:503	6649610	4	True				
ANR	6649646	IdentifierDecl	rma_alloc_size		6649610	0					
ANR	6649647	IdentifierDeclType	target_phys_addr_t		6649610	0					
ANR	6649648	Identifier	rma_alloc_size		6649610	1					
ANR	6649649	IdentifierDecl	rma_size		6649610	1					
ANR	6649650	IdentifierDeclType	target_phys_addr_t		6649610	0					
ANR	6649651	Identifier	rma_size		6649610	1					
ANR	6649652	IdentifierDeclStatement	uint32_t initrd_base ;	25:4:510:530	6649610	5	True				
ANR	6649653	IdentifierDecl	initrd_base		6649610	0					
ANR	6649654	IdentifierDeclType	uint32_t		6649610	0					
ANR	6649655	Identifier	initrd_base		6649610	1					
ANR	6649656	IdentifierDeclStatement	"long kernel_size , initrd_size , fw_size ;"	27:4:537:575	6649610	6	True				
ANR	6649657	IdentifierDecl	kernel_size		6649610	0					
ANR	6649658	IdentifierDeclType	long		6649610	0					
ANR	6649659	Identifier	kernel_size		6649610	1					
ANR	6649660	IdentifierDecl	initrd_size		6649610	1					
ANR	6649661	IdentifierDeclType	long		6649610	0					
ANR	6649662	Identifier	initrd_size		6649610	1					
ANR	6649663	IdentifierDecl	fw_size		6649610	2					
ANR	6649664	IdentifierDeclType	long		6649610	0					
ANR	6649665	Identifier	fw_size		6649610	1					
ANR	6649666	IdentifierDeclStatement	long pteg_shift = 17 ;	29:4:582:602	6649610	7	True				
ANR	6649667	IdentifierDecl	pteg_shift = 17		6649610	0					
ANR	6649668	IdentifierDeclType	long		6649610	0					
ANR	6649669	Identifier	pteg_shift		6649610	1					
ANR	6649670	AssignmentExpression	pteg_shift = 17		6649610	2		=			
ANR	6649671	Identifier	pteg_shift		6649610	0					
ANR	6649672	PrimaryExpression	17		6649610	1					
ANR	6649673	IdentifierDeclStatement	char * filename ;	31:4:609:623	6649610	8	True				
ANR	6649674	IdentifierDecl	* filename		6649610	0					
ANR	6649675	IdentifierDeclType	char *		6649610	0					
ANR	6649676	Identifier	filename		6649610	1					
ANR	6649677	ExpressionStatement	spapr = g_malloc0 ( sizeof ( * spapr ) )	35:4:632:665	6649610	9	True				
ANR	6649678	AssignmentExpression	spapr = g_malloc0 ( sizeof ( * spapr ) )		6649610	0		=			
ANR	6649679	Identifier	spapr		6649610	0					
ANR	6649680	CallExpression	g_malloc0 ( sizeof ( * spapr ) )		6649610	1					
ANR	6649681	Callee	g_malloc0		6649610	0					
ANR	6649682	Identifier	g_malloc0		6649610	0					
ANR	6649683	ArgumentList	sizeof ( * spapr )		6649610	1					
ANR	6649684	Argument	sizeof ( * spapr )		6649610	0					
ANR	6649685	SizeofExpression	sizeof ( * spapr )		6649610	0					
ANR	6649686	Sizeof	sizeof		6649610	0					
ANR	6649687	UnaryOperationExpression	* spapr		6649610	1					
ANR	6649688	UnaryOperator	*		6649610	0					
ANR	6649689	Identifier	spapr		6649610	1					
ANR	6649690	ExpressionStatement	QLIST_INIT ( & spapr -> phbs )	37:4:672:696	6649610	10	True				
ANR	6649691	CallExpression	QLIST_INIT ( & spapr -> phbs )		6649610	0					
ANR	6649692	Callee	QLIST_INIT		6649610	0					
ANR	6649693	Identifier	QLIST_INIT		6649610	0					
ANR	6649694	ArgumentList	& spapr -> phbs		6649610	1					
ANR	6649695	Argument	& spapr -> phbs		6649610	0					
ANR	6649696	UnaryOperationExpression	& spapr -> phbs		6649610	0					
ANR	6649697	UnaryOperator	&		6649610	0					
ANR	6649698	PtrMemberAccess	spapr -> phbs		6649610	1					
ANR	6649699	Identifier	spapr		6649610	0					
ANR	6649700	Identifier	phbs		6649610	1					
ANR	6649701	ExpressionStatement	cpu_ppc_hypercall = emulate_spapr_hypercall	41:4:705:748	6649610	11	True				
ANR	6649702	AssignmentExpression	cpu_ppc_hypercall = emulate_spapr_hypercall		6649610	0		=			
ANR	6649703	Identifier	cpu_ppc_hypercall		6649610	0					
ANR	6649704	Identifier	emulate_spapr_hypercall		6649610	1					
ANR	6649705	ExpressionStatement	"rma_alloc_size = kvmppc_alloc_rma ( ""ppc_spapr.rma"" , sysmem )"	47:4:794:852	6649610	12	True				
ANR	6649706	AssignmentExpression	"rma_alloc_size = kvmppc_alloc_rma ( ""ppc_spapr.rma"" , sysmem )"		6649610	0		=			
ANR	6649707	Identifier	rma_alloc_size		6649610	0					
ANR	6649708	CallExpression	"kvmppc_alloc_rma ( ""ppc_spapr.rma"" , sysmem )"		6649610	1					
ANR	6649709	Callee	kvmppc_alloc_rma		6649610	0					
ANR	6649710	Identifier	kvmppc_alloc_rma		6649610	0					
ANR	6649711	ArgumentList	"""ppc_spapr.rma"""		6649610	1					
ANR	6649712	Argument	"""ppc_spapr.rma"""		6649610	0					
ANR	6649713	PrimaryExpression	"""ppc_spapr.rma"""		6649610	0					
ANR	6649714	Argument	sysmem		6649610	1					
ANR	6649715	Identifier	sysmem		6649610	0					
ANR	6649716	IfStatement	if ( rma_alloc_size == - 1 )		6649610	13					
ANR	6649717	Condition	rma_alloc_size == - 1	51:8:865:884	6649610	0	True				
ANR	6649718	EqualityExpression	rma_alloc_size == - 1		6649610	0		==			
ANR	6649719	Identifier	rma_alloc_size		6649610	0					
ANR	6649720	UnaryOperationExpression	- 1		6649610	1					
ANR	6649721	UnaryOperator	-		6649610	0					
ANR	6649722	PrimaryExpression	1		6649610	1					
ANR	6649723	CompoundStatement		39:30:563:563	6649610	1					
ANR	6649724	ExpressionStatement	"hw_error ( ""qemu: Unable to create RMA\\n"" )"	53:8:898:938	6649610	0	True				
ANR	6649725	CallExpression	"hw_error ( ""qemu: Unable to create RMA\\n"" )"		6649610	0					
ANR	6649726	Callee	hw_error		6649610	0					
ANR	6649727	Identifier	hw_error		6649610	0					
ANR	6649728	ArgumentList	"""qemu: Unable to create RMA\\n"""		6649610	1					
ANR	6649729	Argument	"""qemu: Unable to create RMA\\n"""		6649610	0					
ANR	6649730	PrimaryExpression	"""qemu: Unable to create RMA\\n"""		6649610	0					
ANR	6649731	ExpressionStatement	exit ( 1 )	55:8:949:956	6649610	1	True				
ANR	6649732	CallExpression	exit ( 1 )		6649610	0					
ANR	6649733	Callee	exit		6649610	0					
ANR	6649734	Identifier	exit		6649610	0					
ANR	6649735	ArgumentList	1		6649610	1					
ANR	6649736	Argument	1		6649610	0					
ANR	6649737	PrimaryExpression	1		6649610	0					
ANR	6649738	IfStatement	if ( rma_alloc_size && ( rma_alloc_size < ram_size ) )		6649610	14					
ANR	6649739	Condition	rma_alloc_size && ( rma_alloc_size < ram_size )	59:8:974:1018	6649610	0	True				
ANR	6649740	AndExpression	rma_alloc_size && ( rma_alloc_size < ram_size )		6649610	0		&&			
ANR	6649741	Identifier	rma_alloc_size		6649610	0					
ANR	6649742	RelationalExpression	rma_alloc_size < ram_size		6649610	1		<			
ANR	6649743	Identifier	rma_alloc_size		6649610	0					
ANR	6649744	Identifier	ram_size		6649610	1					
ANR	6649745	CompoundStatement		47:55:697:697	6649610	1					
ANR	6649746	ExpressionStatement	rma_size = rma_alloc_size	61:8:1032:1057	6649610	0	True				
ANR	6649747	AssignmentExpression	rma_size = rma_alloc_size		6649610	0		=			
ANR	6649748	Identifier	rma_size		6649610	0					
ANR	6649749	Identifier	rma_alloc_size		6649610	1					
ANR	6649750	ElseStatement	else		6649610	0					
ANR	6649751	CompoundStatement		51:11:747:747	6649610	0					
ANR	6649752	ExpressionStatement	rma_size = ram_size	65:8:1082:1101	6649610	0	True				
ANR	6649753	AssignmentExpression	rma_size = ram_size		6649610	0		=			
ANR	6649754	Identifier	rma_size		6649610	0					
ANR	6649755	Identifier	ram_size		6649610	1					
ANR	6649756	ExpressionStatement	"spapr -> fdt_addr = MIN ( rma_size , 0x80000000 ) - FDT_MAX_SIZE"	77:4:1315:1373	6649610	15	True				
ANR	6649757	AssignmentExpression	"spapr -> fdt_addr = MIN ( rma_size , 0x80000000 ) - FDT_MAX_SIZE"		6649610	0		=			
ANR	6649758	PtrMemberAccess	spapr -> fdt_addr		6649610	0					
ANR	6649759	Identifier	spapr		6649610	0					
ANR	6649760	Identifier	fdt_addr		6649610	1					
ANR	6649761	AdditiveExpression	"MIN ( rma_size , 0x80000000 ) - FDT_MAX_SIZE"		6649610	1		-			
ANR	6649762	CallExpression	"MIN ( rma_size , 0x80000000 )"		6649610	0					
ANR	6649763	Callee	MIN		6649610	0					
ANR	6649764	Identifier	MIN		6649610	0					
ANR	6649765	ArgumentList	rma_size		6649610	1					
ANR	6649766	Argument	rma_size		6649610	0					
ANR	6649767	Identifier	rma_size		6649610	0					
ANR	6649768	Argument	0x80000000		6649610	1					
ANR	6649769	PrimaryExpression	0x80000000		6649610	0					
ANR	6649770	Identifier	FDT_MAX_SIZE		6649610	1					
ANR	6649771	ExpressionStatement	spapr -> rtas_addr = spapr -> fdt_addr - RTAS_MAX_SIZE	79:4:1380:1430	6649610	16	True				
ANR	6649772	AssignmentExpression	spapr -> rtas_addr = spapr -> fdt_addr - RTAS_MAX_SIZE		6649610	0		=			
ANR	6649773	PtrMemberAccess	spapr -> rtas_addr		6649610	0					
ANR	6649774	Identifier	spapr		6649610	0					
ANR	6649775	Identifier	rtas_addr		6649610	1					
ANR	6649776	AdditiveExpression	spapr -> fdt_addr - RTAS_MAX_SIZE		6649610	1		-			
ANR	6649777	PtrMemberAccess	spapr -> fdt_addr		6649610	0					
ANR	6649778	Identifier	spapr		6649610	0					
ANR	6649779	Identifier	fdt_addr		6649610	1					
ANR	6649780	Identifier	RTAS_MAX_SIZE		6649610	1					
ANR	6649781	IfStatement	if ( cpu_model == NULL )		6649610	17					
ANR	6649782	Condition	cpu_model == NULL	85:8:1464:1480	6649610	0	True				
ANR	6649783	EqualityExpression	cpu_model == NULL		6649610	0		==			
ANR	6649784	Identifier	cpu_model		6649610	0					
ANR	6649785	Identifier	NULL		6649610	1					
ANR	6649786	CompoundStatement		73:27:1159:1159	6649610	1					
ANR	6649787	ExpressionStatement	"cpu_model = kvm_enabled ( ) ? ""host"" : ""POWER7"""	87:8:1494:1539	6649610	0	True				
ANR	6649788	AssignmentExpression	"cpu_model = kvm_enabled ( ) ? ""host"" : ""POWER7"""		6649610	0		=			
ANR	6649789	Identifier	cpu_model		6649610	0					
ANR	6649790	ConditionalExpression	"kvm_enabled ( ) ? ""host"" : ""POWER7"""		6649610	1					
ANR	6649791	Condition	kvm_enabled ( )		6649610	0					
ANR	6649792	CallExpression	kvm_enabled ( )		6649610	0					
ANR	6649793	Callee	kvm_enabled		6649610	0					
ANR	6649794	Identifier	kvm_enabled		6649610	0					
ANR	6649795	ArgumentList			6649610	1					
ANR	6649796	PrimaryExpression	"""host"""		6649610	1					
ANR	6649797	PrimaryExpression	"""POWER7"""		6649610	2					
ANR	6649798	ForStatement	for ( i = 0 ; i < smp_cpus ; i ++ )		6649610	18					
ANR	6649799	ForInit	i = 0 ;	91:9:1558:1563	6649610	0	True				
ANR	6649800	AssignmentExpression	i = 0		6649610	0		=			
ANR	6649801	Identifier	i		6649610	0					
ANR	6649802	PrimaryExpression	0		6649610	1					
ANR	6649803	Condition	i < smp_cpus	91:16:1565:1576	6649610	1	True				
ANR	6649804	RelationalExpression	i < smp_cpus		6649610	0		<			
ANR	6649805	Identifier	i		6649610	0					
ANR	6649806	Identifier	smp_cpus		6649610	1					
ANR	6649807	PostIncDecOperationExpression	i ++	91:30:1579:1581	6649610	2	True				
ANR	6649808	Identifier	i		6649610	0					
ANR	6649809	IncDec	++		6649610	1					
ANR	6649810	CompoundStatement		79:35:1260:1260	6649610	3					
ANR	6649811	ExpressionStatement	env = cpu_init ( cpu_model )	93:8:1595:1620	6649610	0	True				
ANR	6649812	AssignmentExpression	env = cpu_init ( cpu_model )		6649610	0		=			
ANR	6649813	Identifier	env		6649610	0					
ANR	6649814	CallExpression	cpu_init ( cpu_model )		6649610	1					
ANR	6649815	Callee	cpu_init		6649610	0					
ANR	6649816	Identifier	cpu_init		6649610	0					
ANR	6649817	ArgumentList	cpu_model		6649610	1					
ANR	6649818	Argument	cpu_model		6649610	0					
ANR	6649819	Identifier	cpu_model		6649610	0					
ANR	6649820	IfStatement	if ( ! env )		6649610	1					
ANR	6649821	Condition	! env	97:12:1637:1640	6649610	0	True				
ANR	6649822	UnaryOperationExpression	! env		6649610	0					
ANR	6649823	UnaryOperator	!		6649610	0					
ANR	6649824	Identifier	env		6649610	1					
ANR	6649825	CompoundStatement		85:18:1319:1319	6649610	1					
ANR	6649826	ExpressionStatement	"fprintf ( stderr , ""Unable to find PowerPC CPU definition\\n"" )"	99:12:1658:1716	6649610	0	True				
ANR	6649827	CallExpression	"fprintf ( stderr , ""Unable to find PowerPC CPU definition\\n"" )"		6649610	0					
ANR	6649828	Callee	fprintf		6649610	0					
ANR	6649829	Identifier	fprintf		6649610	0					
ANR	6649830	ArgumentList	stderr		6649610	1					
ANR	6649831	Argument	stderr		6649610	0					
ANR	6649832	Identifier	stderr		6649610	0					
ANR	6649833	Argument	"""Unable to find PowerPC CPU definition\\n"""		6649610	1					
ANR	6649834	PrimaryExpression	"""Unable to find PowerPC CPU definition\\n"""		6649610	0					
ANR	6649835	ExpressionStatement	exit ( 1 )	101:12:1731:1738	6649610	1	True				
ANR	6649836	CallExpression	exit ( 1 )		6649610	0					
ANR	6649837	Callee	exit		6649610	0					
ANR	6649838	Identifier	exit		6649610	0					
ANR	6649839	ArgumentList	1		6649610	1					
ANR	6649840	Argument	1		6649610	0					
ANR	6649841	PrimaryExpression	1		6649610	0					
ANR	6649842	ExpressionStatement	"cpu_ppc_tb_init ( env , TIMEBASE_FREQ )"	107:8:1810:1845	6649610	2	True				
ANR	6649843	CallExpression	"cpu_ppc_tb_init ( env , TIMEBASE_FREQ )"		6649610	0					
ANR	6649844	Callee	cpu_ppc_tb_init		6649610	0					
ANR	6649845	Identifier	cpu_ppc_tb_init		6649610	0					
ANR	6649846	ArgumentList	env		6649610	1					
ANR	6649847	Argument	env		6649610	0					
ANR	6649848	Identifier	env		6649610	0					
ANR	6649849	Argument	TIMEBASE_FREQ		6649610	1					
ANR	6649850	Identifier	TIMEBASE_FREQ		6649610	0					
ANR	6649851	ExpressionStatement	"qemu_register_reset ( ( QEMUResetHandler * ) & cpu_reset , env )"	109:8:1856:1912	6649610	3	True				
ANR	6649852	CallExpression	"qemu_register_reset ( ( QEMUResetHandler * ) & cpu_reset , env )"		6649610	0					
ANR	6649853	Callee	qemu_register_reset		6649610	0					
ANR	6649854	Identifier	qemu_register_reset		6649610	0					
ANR	6649855	ArgumentList	( QEMUResetHandler * ) & cpu_reset		6649610	1					
ANR	6649856	Argument	( QEMUResetHandler * ) & cpu_reset		6649610	0					
ANR	6649857	CastExpression	( QEMUResetHandler * ) & cpu_reset		6649610	0					
ANR	6649858	CastTarget	QEMUResetHandler *		6649610	0					
ANR	6649859	UnaryOperationExpression	& cpu_reset		6649610	1					
ANR	6649860	UnaryOperator	&		6649610	0					
ANR	6649861	Identifier	cpu_reset		6649610	1					
ANR	6649862	Argument	env		6649610	1					
ANR	6649863	Identifier	env		6649610	0					
ANR	6649864	ExpressionStatement	env -> hreset_vector = 0x60	113:8:1925:1950	6649610	4	True				
ANR	6649865	AssignmentExpression	env -> hreset_vector = 0x60		6649610	0		=			
ANR	6649866	PtrMemberAccess	env -> hreset_vector		6649610	0					
ANR	6649867	Identifier	env		6649610	0					
ANR	6649868	Identifier	hreset_vector		6649610	1					
ANR	6649869	PrimaryExpression	0x60		6649610	1					
ANR	6649870	ExpressionStatement	env -> hreset_excp_prefix = 0	115:8:1961:1988	6649610	5	True				
ANR	6649871	AssignmentExpression	env -> hreset_excp_prefix = 0		6649610	0		=			
ANR	6649872	PtrMemberAccess	env -> hreset_excp_prefix		6649610	0					
ANR	6649873	Identifier	env		6649610	0					
ANR	6649874	Identifier	hreset_excp_prefix		6649610	1					
ANR	6649875	PrimaryExpression	0		6649610	1					
ANR	6649876	ExpressionStatement	env -> gpr [ 3 ] = env -> cpu_index	117:8:1999:2027	6649610	6	True				
ANR	6649877	AssignmentExpression	env -> gpr [ 3 ] = env -> cpu_index		6649610	0		=			
ANR	6649878	ArrayIndexing	env -> gpr [ 3 ]		6649610	0					
ANR	6649879	PtrMemberAccess	env -> gpr		6649610	0					
ANR	6649880	Identifier	env		6649610	0					
ANR	6649881	Identifier	gpr		6649610	1					
ANR	6649882	PrimaryExpression	3		6649610	1					
ANR	6649883	PtrMemberAccess	env -> cpu_index		6649610	1					
ANR	6649884	Identifier	env		6649610	0					
ANR	6649885	Identifier	cpu_index		6649610	1					
ANR	6649886	ExpressionStatement	spapr -> ram_limit = ram_size	125:4:2067:2094	6649610	19	True				
ANR	6649887	AssignmentExpression	spapr -> ram_limit = ram_size		6649610	0		=			
ANR	6649888	PtrMemberAccess	spapr -> ram_limit		6649610	0					
ANR	6649889	Identifier	spapr		6649610	0					
ANR	6649890	Identifier	ram_limit		6649610	1					
ANR	6649891	Identifier	ram_size		6649610	1					
ANR	6649892	IfStatement	if ( spapr -> ram_limit > rma_alloc_size )		6649610	20					
ANR	6649893	Condition	spapr -> ram_limit > rma_alloc_size	127:8:2105:2137	6649610	0	True				
ANR	6649894	RelationalExpression	spapr -> ram_limit > rma_alloc_size		6649610	0		>			
ANR	6649895	PtrMemberAccess	spapr -> ram_limit		6649610	0					
ANR	6649896	Identifier	spapr		6649610	0					
ANR	6649897	Identifier	ram_limit		6649610	1					
ANR	6649898	Identifier	rma_alloc_size		6649610	1					
ANR	6649899	CompoundStatement		119:8:1877:1935	6649610	1					
ANR	6649900	IdentifierDeclStatement	ram_addr_t nonrma_base = rma_alloc_size ;	129:8:2151:2190	6649610	0	True				
ANR	6649901	IdentifierDecl	nonrma_base = rma_alloc_size		6649610	0					
ANR	6649902	IdentifierDeclType	ram_addr_t		6649610	0					
ANR	6649903	Identifier	nonrma_base		6649610	1					
ANR	6649904	AssignmentExpression	nonrma_base = rma_alloc_size		6649610	2		=			
ANR	6649905	Identifier	rma_alloc_size		6649610	0					
ANR	6649906	Identifier	rma_alloc_size		6649610	1					
ANR	6649907	IdentifierDeclStatement	ram_addr_t nonrma_size = spapr -> ram_limit - rma_alloc_size ;	131:8:2201:2259	6649610	1	True				
ANR	6649908	IdentifierDecl	nonrma_size = spapr -> ram_limit - rma_alloc_size		6649610	0					
ANR	6649909	IdentifierDeclType	ram_addr_t		6649610	0					
ANR	6649910	Identifier	nonrma_size		6649610	1					
ANR	6649911	AssignmentExpression	nonrma_size = spapr -> ram_limit - rma_alloc_size		6649610	2		=			
ANR	6649912	Identifier	nonrma_size		6649610	0					
ANR	6649913	AdditiveExpression	spapr -> ram_limit - rma_alloc_size		6649610	1		-			
ANR	6649914	PtrMemberAccess	spapr -> ram_limit		6649610	0					
ANR	6649915	Identifier	spapr		6649610	0					
ANR	6649916	Identifier	ram_limit		6649610	1					
ANR	6649917	Identifier	rma_alloc_size		6649610	1					
ANR	6649918	ExpressionStatement	"memory_region_init_ram ( ram , ""ppc_spapr.ram"" , nonrma_size )"	135:8:2272:2329	6649610	2	True				
ANR	6649919	CallExpression	"memory_region_init_ram ( ram , ""ppc_spapr.ram"" , nonrma_size )"		6649610	0					
ANR	6649920	Callee	memory_region_init_ram		6649610	0					
ANR	6649921	Identifier	memory_region_init_ram		6649610	0					
ANR	6649922	ArgumentList	ram		6649610	1					
ANR	6649923	Argument	ram		6649610	0					
ANR	6649924	Identifier	ram		6649610	0					
ANR	6649925	Argument	"""ppc_spapr.ram"""		6649610	1					
ANR	6649926	PrimaryExpression	"""ppc_spapr.ram"""		6649610	0					
ANR	6649927	Argument	nonrma_size		6649610	2					
ANR	6649928	Identifier	nonrma_size		6649610	0					
ANR	6649929	ExpressionStatement	vmstate_register_ram_global ( ram )	137:8:2340:2372	6649610	3	True				
ANR	6649930	CallExpression	vmstate_register_ram_global ( ram )		6649610	0					
ANR	6649931	Callee	vmstate_register_ram_global		6649610	0					
ANR	6649932	Identifier	vmstate_register_ram_global		6649610	0					
ANR	6649933	ArgumentList	ram		6649610	1					
ANR	6649934	Argument	ram		6649610	0					
ANR	6649935	Identifier	ram		6649610	0					
ANR	6649936	ExpressionStatement	"memory_region_add_subregion ( sysmem , nonrma_base , ram )"	139:8:2383:2436	6649610	4	True				
ANR	6649937	CallExpression	"memory_region_add_subregion ( sysmem , nonrma_base , ram )"		6649610	0					
ANR	6649938	Callee	memory_region_add_subregion		6649610	0					
ANR	6649939	Identifier	memory_region_add_subregion		6649610	0					
ANR	6649940	ArgumentList	sysmem		6649610	1					
ANR	6649941	Argument	sysmem		6649610	0					
ANR	6649942	Identifier	sysmem		6649610	0					
ANR	6649943	Argument	nonrma_base		6649610	1					
ANR	6649944	Identifier	nonrma_base		6649610	0					
ANR	6649945	Argument	ram		6649610	2					
ANR	6649946	Identifier	ram		6649610	0					
ANR	6649947	Statement	spapr	151:4:2604:2608	6649610	21	True				
ANR	6649948	Statement	->	151:9:2609:2610	6649610	22	True				
ANR	6649949	Statement	htab_size	151:11:2611:2619	6649610	23	True				
ANR	6649950	Statement	=	151:21:2621:2621	6649610	24	True				
ANR	6649951	Statement	1UL	151:23:2623:2625	6649610	25	True				
ANR	6649952	ExpressionStatement	L << ( pteg_shift + 7 )	151:26:2626:2647	6649610	26	True				
ANR	6649953	ShiftExpression	L << ( pteg_shift + 7 )		6649610	0		<<			
ANR	6649954	Identifier	L		6649610	0					
ANR	6649955	AdditiveExpression	pteg_shift + 7		6649610	1		+			
ANR	6649956	Identifier	pteg_shift		6649610	0					
ANR	6649957	PrimaryExpression	7		6649610	1					
ANR	6649958	ExpressionStatement	"spapr -> htab = qemu_memalign ( spapr -> htab_size , spapr -> htab_size )"	153:4:2654:2717	6649610	27	True				
ANR	6649959	AssignmentExpression	"spapr -> htab = qemu_memalign ( spapr -> htab_size , spapr -> htab_size )"		6649610	0		=			
ANR	6649960	PtrMemberAccess	spapr -> htab		6649610	0					
ANR	6649961	Identifier	spapr		6649610	0					
ANR	6649962	Identifier	htab		6649610	1					
ANR	6649963	CallExpression	"qemu_memalign ( spapr -> htab_size , spapr -> htab_size )"		6649610	1					
ANR	6649964	Callee	qemu_memalign		6649610	0					
ANR	6649965	Identifier	qemu_memalign		6649610	0					
ANR	6649966	ArgumentList	spapr -> htab_size		6649610	1					
ANR	6649967	Argument	spapr -> htab_size		6649610	0					
ANR	6649968	PtrMemberAccess	spapr -> htab_size		6649610	0					
ANR	6649969	Identifier	spapr		6649610	0					
ANR	6649970	Identifier	htab_size		6649610	1					
ANR	6649971	Argument	spapr -> htab_size		6649610	1					
ANR	6649972	PtrMemberAccess	spapr -> htab_size		6649610	0					
ANR	6649973	Identifier	spapr		6649610	0					
ANR	6649974	Identifier	htab_size		6649610	1					
ANR	6649975	ForStatement	for ( env = first_cpu ; env != NULL ; env = env -> next_cpu )		6649610	28					
ANR	6649976	ForInit	env = first_cpu ;	157:9:2731:2746	6649610	0	True				
ANR	6649977	AssignmentExpression	env = first_cpu		6649610	0		=			
ANR	6649978	Identifier	env		6649610	0					
ANR	6649979	Identifier	first_cpu		6649610	1					
ANR	6649980	Condition	env != NULL	157:26:2748:2758	6649610	1	True				
ANR	6649981	EqualityExpression	env != NULL		6649610	0		!=			
ANR	6649982	Identifier	env		6649610	0					
ANR	6649983	Identifier	NULL		6649610	1					
ANR	6649984	AssignmentExpression	env = env -> next_cpu	157:39:2761:2779	6649610	2	True	=			
ANR	6649985	Identifier	env		6649610	0					
ANR	6649986	PtrMemberAccess	env -> next_cpu		6649610	1					
ANR	6649987	Identifier	env		6649610	0					
ANR	6649988	Identifier	next_cpu		6649610	1					
ANR	6649989	CompoundStatement		145:60:2458:2458	6649610	3					
ANR	6649990	ExpressionStatement	env -> external_htab = spapr -> htab	159:8:2793:2825	6649610	0	True				
ANR	6649991	AssignmentExpression	env -> external_htab = spapr -> htab		6649610	0		=			
ANR	6649992	PtrMemberAccess	env -> external_htab		6649610	0					
ANR	6649993	Identifier	env		6649610	0					
ANR	6649994	Identifier	external_htab		6649610	1					
ANR	6649995	PtrMemberAccess	spapr -> htab		6649610	1					
ANR	6649996	Identifier	spapr		6649610	0					
ANR	6649997	Identifier	htab		6649610	1					
ANR	6649998	ExpressionStatement	env -> htab_base = - 1	161:8:2836:2855	6649610	1	True				
ANR	6649999	AssignmentExpression	env -> htab_base = - 1		6649610	0		=			
ANR	6650000	PtrMemberAccess	env -> htab_base		6649610	0					
ANR	6650001	Identifier	env		6649610	0					
ANR	6650002	Identifier	htab_base		6649610	1					
ANR	6650003	UnaryOperationExpression	- 1		6649610	1					
ANR	6650004	UnaryOperator	-		6649610	0					
ANR	6650005	PrimaryExpression	1		6649610	1					
ANR	6650006	ExpressionStatement	env -> htab_mask = spapr -> htab_size - 1	163:8:2866:2903	6649610	2	True				
ANR	6650007	AssignmentExpression	env -> htab_mask = spapr -> htab_size - 1		6649610	0		=			
ANR	6650008	PtrMemberAccess	env -> htab_mask		6649610	0					
ANR	6650009	Identifier	env		6649610	0					
ANR	6650010	Identifier	htab_mask		6649610	1					
ANR	6650011	AdditiveExpression	spapr -> htab_size - 1		6649610	1		-			
ANR	6650012	PtrMemberAccess	spapr -> htab_size		6649610	0					
ANR	6650013	Identifier	spapr		6649610	0					
ANR	6650014	Identifier	htab_size		6649610	1					
ANR	6650015	PrimaryExpression	1		6649610	1					
ANR	6650016	ExpressionStatement	env -> spr [ SPR_SDR1 ] = ( unsigned long ) spapr -> htab | ( ( pteg_shift + 7 ) - 18 )	169:8:2964:3067	6649610	3	True				
ANR	6650017	AssignmentExpression	env -> spr [ SPR_SDR1 ] = ( unsigned long ) spapr -> htab | ( ( pteg_shift + 7 ) - 18 )		6649610	0		=			
ANR	6650018	ArrayIndexing	env -> spr [ SPR_SDR1 ]		6649610	0					
ANR	6650019	PtrMemberAccess	env -> spr		6649610	0					
ANR	6650020	Identifier	env		6649610	0					
ANR	6650021	Identifier	spr		6649610	1					
ANR	6650022	Identifier	SPR_SDR1		6649610	1					
ANR	6650023	InclusiveOrExpression	( unsigned long ) spapr -> htab | ( ( pteg_shift + 7 ) - 18 )		6649610	1		|			
ANR	6650024	CastExpression	( unsigned long ) spapr -> htab		6649610	0					
ANR	6650025	CastTarget	unsigned long		6649610	0					
ANR	6650026	PtrMemberAccess	spapr -> htab		6649610	1					
ANR	6650027	Identifier	spapr		6649610	0					
ANR	6650028	Identifier	htab		6649610	1					
ANR	6650029	AdditiveExpression	( pteg_shift + 7 ) - 18		6649610	1		-			
ANR	6650030	AdditiveExpression	pteg_shift + 7		6649610	0		+			
ANR	6650031	Identifier	pteg_shift		6649610	0					
ANR	6650032	PrimaryExpression	7		6649610	1					
ANR	6650033	PrimaryExpression	18		6649610	1					
ANR	6650034	ExpressionStatement	env -> spr [ SPR_HIOR ] = 0	173:8:3078:3100	6649610	4	True				
ANR	6650035	AssignmentExpression	env -> spr [ SPR_HIOR ] = 0		6649610	0		=			
ANR	6650036	ArrayIndexing	env -> spr [ SPR_HIOR ]		6649610	0					
ANR	6650037	PtrMemberAccess	env -> spr		6649610	0					
ANR	6650038	Identifier	env		6649610	0					
ANR	6650039	Identifier	spr		6649610	1					
ANR	6650040	Identifier	SPR_HIOR		6649610	1					
ANR	6650041	PrimaryExpression	0		6649610	1					
ANR	6650042	IfStatement	if ( kvm_enabled ( ) )		6649610	5					
ANR	6650043	Condition	kvm_enabled ( )	177:12:3117:3129	6649610	0	True				
ANR	6650044	CallExpression	kvm_enabled ( )		6649610	0					
ANR	6650045	Callee	kvm_enabled		6649610	0					
ANR	6650046	Identifier	kvm_enabled		6649610	0					
ANR	6650047	ArgumentList			6649610	1					
ANR	6650048	CompoundStatement		165:27:2808:2808	6649610	1					
ANR	6650049	ExpressionStatement	kvmppc_set_papr ( env )	179:12:3147:3167	6649610	0	True				
ANR	6650050	CallExpression	kvmppc_set_papr ( env )		6649610	0					
ANR	6650051	Callee	kvmppc_set_papr		6649610	0					
ANR	6650052	Identifier	kvmppc_set_papr		6649610	0					
ANR	6650053	ArgumentList	env		6649610	1					
ANR	6650054	Argument	env		6649610	0					
ANR	6650055	Identifier	env		6649610	0					
ANR	6650056	ExpressionStatement	"filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , ""spapr-rtas.bin"" )"	187:4:3194:3258	6649610	29	True				
ANR	6650057	AssignmentExpression	"filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , ""spapr-rtas.bin"" )"		6649610	0		=			
ANR	6650058	Identifier	filename		6649610	0					
ANR	6650059	CallExpression	"qemu_find_file ( QEMU_FILE_TYPE_BIOS , ""spapr-rtas.bin"" )"		6649610	1					
ANR	6650060	Callee	qemu_find_file		6649610	0					
ANR	6650061	Identifier	qemu_find_file		6649610	0					
ANR	6650062	ArgumentList	QEMU_FILE_TYPE_BIOS		6649610	1					
ANR	6650063	Argument	QEMU_FILE_TYPE_BIOS		6649610	0					
ANR	6650064	Identifier	QEMU_FILE_TYPE_BIOS		6649610	0					
ANR	6650065	Argument	"""spapr-rtas.bin"""		6649610	1					
ANR	6650066	PrimaryExpression	"""spapr-rtas.bin"""		6649610	0					
ANR	6650067	ExpressionStatement	"spapr -> rtas_size = load_image_targphys ( filename , spapr -> rtas_addr , ram_size - spapr -> rtas_addr )"	189:4:3265:3404	6649610	30	True				
ANR	6650068	AssignmentExpression	"spapr -> rtas_size = load_image_targphys ( filename , spapr -> rtas_addr , ram_size - spapr -> rtas_addr )"		6649610	0		=			
ANR	6650069	PtrMemberAccess	spapr -> rtas_size		6649610	0					
ANR	6650070	Identifier	spapr		6649610	0					
ANR	6650071	Identifier	rtas_size		6649610	1					
ANR	6650072	CallExpression	"load_image_targphys ( filename , spapr -> rtas_addr , ram_size - spapr -> rtas_addr )"		6649610	1					
ANR	6650073	Callee	load_image_targphys		6649610	0					
ANR	6650074	Identifier	load_image_targphys		6649610	0					
ANR	6650075	ArgumentList	filename		6649610	1					
ANR	6650076	Argument	filename		6649610	0					
ANR	6650077	Identifier	filename		6649610	0					
ANR	6650078	Argument	spapr -> rtas_addr		6649610	1					
ANR	6650079	PtrMemberAccess	spapr -> rtas_addr		6649610	0					
ANR	6650080	Identifier	spapr		6649610	0					
ANR	6650081	Identifier	rtas_addr		6649610	1					
ANR	6650082	Argument	ram_size - spapr -> rtas_addr		6649610	2					
ANR	6650083	AdditiveExpression	ram_size - spapr -> rtas_addr		6649610	0		-			
ANR	6650084	Identifier	ram_size		6649610	0					
ANR	6650085	PtrMemberAccess	spapr -> rtas_addr		6649610	1					
ANR	6650086	Identifier	spapr		6649610	0					
ANR	6650087	Identifier	rtas_addr		6649610	1					
ANR	6650088	IfStatement	if ( spapr -> rtas_size < 0 )		6649610	31					
ANR	6650089	Condition	spapr -> rtas_size < 0	193:8:3415:3434	6649610	0	True				
ANR	6650090	RelationalExpression	spapr -> rtas_size < 0		6649610	0		<			
ANR	6650091	PtrMemberAccess	spapr -> rtas_size		6649610	0					
ANR	6650092	Identifier	spapr		6649610	0					
ANR	6650093	Identifier	rtas_size		6649610	1					
ANR	6650094	PrimaryExpression	0		6649610	1					
ANR	6650095	CompoundStatement		181:30:3113:3113	6649610	1					
ANR	6650096	ExpressionStatement	"hw_error ( ""qemu: could not load LPAR rtas '%s'\\n"" , filename )"	195:8:3448:3507	6649610	0	True				
ANR	6650097	CallExpression	"hw_error ( ""qemu: could not load LPAR rtas '%s'\\n"" , filename )"		6649610	0					
ANR	6650098	Callee	hw_error		6649610	0					
ANR	6650099	Identifier	hw_error		6649610	0					
ANR	6650100	ArgumentList	"""qemu: could not load LPAR rtas '%s'\\n"""		6649610	1					
ANR	6650101	Argument	"""qemu: could not load LPAR rtas '%s'\\n"""		6649610	0					
ANR	6650102	PrimaryExpression	"""qemu: could not load LPAR rtas '%s'\\n"""		6649610	0					
ANR	6650103	Argument	filename		6649610	1					
ANR	6650104	Identifier	filename		6649610	0					
ANR	6650105	ExpressionStatement	exit ( 1 )	197:8:3518:3525	6649610	1	True				
ANR	6650106	CallExpression	exit ( 1 )		6649610	0					
ANR	6650107	Callee	exit		6649610	0					
ANR	6650108	Identifier	exit		6649610	0					
ANR	6650109	ArgumentList	1		6649610	1					
ANR	6650110	Argument	1		6649610	0					
ANR	6650111	PrimaryExpression	1		6649610	0					
ANR	6650112	ExpressionStatement	g_free ( filename )	201:4:3539:3555	6649610	32	True				
ANR	6650113	CallExpression	g_free ( filename )		6649610	0					
ANR	6650114	Callee	g_free		6649610	0					
ANR	6650115	Identifier	g_free		6649610	0					
ANR	6650116	ArgumentList	filename		6649610	1					
ANR	6650117	Argument	filename		6649610	0					
ANR	6650118	Identifier	filename		6649610	0					
ANR	6650119	ExpressionStatement	spapr -> icp = xics_system_init ( XICS_IRQS )	207:4:3603:3643	6649610	33	True				
ANR	6650120	AssignmentExpression	spapr -> icp = xics_system_init ( XICS_IRQS )		6649610	0		=			
ANR	6650121	PtrMemberAccess	spapr -> icp		6649610	0					
ANR	6650122	Identifier	spapr		6649610	0					
ANR	6650123	Identifier	icp		6649610	1					
ANR	6650124	CallExpression	xics_system_init ( XICS_IRQS )		6649610	1					
ANR	6650125	Callee	xics_system_init		6649610	0					
ANR	6650126	Identifier	xics_system_init		6649610	0					
ANR	6650127	ArgumentList	XICS_IRQS		6649610	1					
ANR	6650128	Argument	XICS_IRQS		6649610	0					
ANR	6650129	Identifier	XICS_IRQS		6649610	0					
ANR	6650130	ExpressionStatement	spapr -> next_irq = 16	209:4:3650:3670	6649610	34	True				
ANR	6650131	AssignmentExpression	spapr -> next_irq = 16		6649610	0		=			
ANR	6650132	PtrMemberAccess	spapr -> next_irq		6649610	0					
ANR	6650133	Identifier	spapr		6649610	0					
ANR	6650134	Identifier	next_irq		6649610	1					
ANR	6650135	PrimaryExpression	16		6649610	1					
ANR	6650136	ExpressionStatement	spapr -> vio_bus = spapr_vio_bus_init ( )	215:4:3705:3742	6649610	35	True				
ANR	6650137	AssignmentExpression	spapr -> vio_bus = spapr_vio_bus_init ( )		6649610	0		=			
ANR	6650138	PtrMemberAccess	spapr -> vio_bus		6649610	0					
ANR	6650139	Identifier	spapr		6649610	0					
ANR	6650140	Identifier	vio_bus		6649610	1					
ANR	6650141	CallExpression	spapr_vio_bus_init ( )		6649610	1					
ANR	6650142	Callee	spapr_vio_bus_init		6649610	0					
ANR	6650143	Identifier	spapr_vio_bus_init		6649610	0					
ANR	6650144	ArgumentList			6649610	1					
ANR	6650145	ForStatement	for ( i = 0 ; i < MAX_SERIAL_PORTS ; i ++ )		6649610	36					
ANR	6650146	ForInit	i = 0 ;	219:9:3756:3761	6649610	0	True				
ANR	6650147	AssignmentExpression	i = 0		6649610	0		=			
ANR	6650148	Identifier	i		6649610	0					
ANR	6650149	PrimaryExpression	0		6649610	1					
ANR	6650150	Condition	i < MAX_SERIAL_PORTS	219:16:3763:3782	6649610	1	True				
ANR	6650151	RelationalExpression	i < MAX_SERIAL_PORTS		6649610	0		<			
ANR	6650152	Identifier	i		6649610	0					
ANR	6650153	Identifier	MAX_SERIAL_PORTS		6649610	1					
ANR	6650154	PostIncDecOperationExpression	i ++	219:38:3785:3787	6649610	2	True				
ANR	6650155	Identifier	i		6649610	0					
ANR	6650156	IncDec	++		6649610	1					
ANR	6650157	CompoundStatement		207:43:3466:3466	6649610	3					
ANR	6650158	IfStatement	if ( serial_hds [ i ] )		6649610	0					
ANR	6650159	Condition	serial_hds [ i ]	221:12:3805:3817	6649610	0	True				
ANR	6650160	ArrayIndexing	serial_hds [ i ]		6649610	0					
ANR	6650161	Identifier	serial_hds		6649610	0					
ANR	6650162	Identifier	i		6649610	1					
ANR	6650163	CompoundStatement		209:27:3496:3496	6649610	1					
ANR	6650164	ExpressionStatement	"spapr_vty_create ( spapr -> vio_bus , SPAPR_VTY_BASE_ADDRESS + i , serial_hds [ i ] )"	223:12:3835:3940	6649610	0	True				
ANR	6650165	CallExpression	"spapr_vty_create ( spapr -> vio_bus , SPAPR_VTY_BASE_ADDRESS + i , serial_hds [ i ] )"		6649610	0					
ANR	6650166	Callee	spapr_vty_create		6649610	0					
ANR	6650167	Identifier	spapr_vty_create		6649610	0					
ANR	6650168	ArgumentList	spapr -> vio_bus		6649610	1					
ANR	6650169	Argument	spapr -> vio_bus		6649610	0					
ANR	6650170	PtrMemberAccess	spapr -> vio_bus		6649610	0					
ANR	6650171	Identifier	spapr		6649610	0					
ANR	6650172	Identifier	vio_bus		6649610	1					
ANR	6650173	Argument	SPAPR_VTY_BASE_ADDRESS + i		6649610	1					
ANR	6650174	AdditiveExpression	SPAPR_VTY_BASE_ADDRESS + i		6649610	0		+			
ANR	6650175	Identifier	SPAPR_VTY_BASE_ADDRESS		6649610	0					
ANR	6650176	Identifier	i		6649610	1					
ANR	6650177	Argument	serial_hds [ i ]		6649610	2					
ANR	6650178	ArrayIndexing	serial_hds [ i ]		6649610	0					
ANR	6650179	Identifier	serial_hds		6649610	0					
ANR	6650180	Identifier	i		6649610	1					
ANR	6650181	ExpressionStatement	"spapr_create_phb ( spapr , ""pci"" , SPAPR_PCI_BUID , SPAPR_PCI_MEM_WIN_ADDR , SPAPR_PCI_MEM_WIN_SIZE , SPAPR_PCI_IO_WIN_ADDR )"	235:4:3989:4172	6649610	37	True				
ANR	6650182	CallExpression	"spapr_create_phb ( spapr , ""pci"" , SPAPR_PCI_BUID , SPAPR_PCI_MEM_WIN_ADDR , SPAPR_PCI_MEM_WIN_SIZE , SPAPR_PCI_IO_WIN_ADDR )"		6649610	0					
ANR	6650183	Callee	spapr_create_phb		6649610	0					
ANR	6650184	Identifier	spapr_create_phb		6649610	0					
ANR	6650185	ArgumentList	spapr		6649610	1					
ANR	6650186	Argument	spapr		6649610	0					
ANR	6650187	Identifier	spapr		6649610	0					
ANR	6650188	Argument	"""pci"""		6649610	1					
ANR	6650189	PrimaryExpression	"""pci"""		6649610	0					
ANR	6650190	Argument	SPAPR_PCI_BUID		6649610	2					
ANR	6650191	Identifier	SPAPR_PCI_BUID		6649610	0					
ANR	6650192	Argument	SPAPR_PCI_MEM_WIN_ADDR		6649610	3					
ANR	6650193	Identifier	SPAPR_PCI_MEM_WIN_ADDR		6649610	0					
ANR	6650194	Argument	SPAPR_PCI_MEM_WIN_SIZE		6649610	4					
ANR	6650195	Identifier	SPAPR_PCI_MEM_WIN_SIZE		6649610	0					
ANR	6650196	Argument	SPAPR_PCI_IO_WIN_ADDR		6649610	5					
ANR	6650197	Identifier	SPAPR_PCI_IO_WIN_ADDR		6649610	0					
ANR	6650198	ForStatement	for ( i = 0 ; i < nb_nics ; i ++ )		6649610	38					
ANR	6650199	ForInit	i = 0 ;	245:9:4186:4191	6649610	0	True				
ANR	6650200	AssignmentExpression	i = 0		6649610	0		=			
ANR	6650201	Identifier	i		6649610	0					
ANR	6650202	PrimaryExpression	0		6649610	1					
ANR	6650203	Condition	i < nb_nics	245:16:4193:4203	6649610	1	True				
ANR	6650204	RelationalExpression	i < nb_nics		6649610	0		<			
ANR	6650205	Identifier	i		6649610	0					
ANR	6650206	Identifier	nb_nics		6649610	1					
ANR	6650207	PostIncDecOperationExpression	i ++	245:29:4206:4208	6649610	2	True				
ANR	6650208	Identifier	i		6649610	0					
ANR	6650209	IncDec	++		6649610	1					
ANR	6650210	CompoundStatement		235:8:3898:3924	6649610	3					
ANR	6650211	IdentifierDeclStatement	NICInfo * nd = & nd_table [ i ] ;	247:8:4222:4248	6649610	0	True				
ANR	6650212	IdentifierDecl	* nd = & nd_table [ i ]		6649610	0					
ANR	6650213	IdentifierDeclType	NICInfo *		6649610	0					
ANR	6650214	Identifier	nd		6649610	1					
ANR	6650215	AssignmentExpression	* nd = & nd_table [ i ]		6649610	2		=			
ANR	6650216	Identifier	nd		6649610	0					
ANR	6650217	UnaryOperationExpression	& nd_table [ i ]		6649610	1					
ANR	6650218	UnaryOperator	&		6649610	0					
ANR	6650219	ArrayIndexing	nd_table [ i ]		6649610	1					
ANR	6650220	Identifier	nd_table		6649610	0					
ANR	6650221	Identifier	i		6649610	1					
ANR	6650222	IfStatement	if ( ! nd -> model )		6649610	1					
ANR	6650223	Condition	! nd -> model	251:12:4265:4274	6649610	0	True				
ANR	6650224	UnaryOperationExpression	! nd -> model		6649610	0					
ANR	6650225	UnaryOperator	!		6649610	0					
ANR	6650226	PtrMemberAccess	nd -> model		6649610	1					
ANR	6650227	Identifier	nd		6649610	0					
ANR	6650228	Identifier	model		6649610	1					
ANR	6650229	CompoundStatement		239:24:3953:3953	6649610	1					
ANR	6650230	ExpressionStatement	"nd -> model = g_strdup ( ""ibmveth"" )"	253:12:4292:4323	6649610	0	True				
ANR	6650231	AssignmentExpression	"nd -> model = g_strdup ( ""ibmveth"" )"		6649610	0		=			
ANR	6650232	PtrMemberAccess	nd -> model		6649610	0					
ANR	6650233	Identifier	nd		6649610	0					
ANR	6650234	Identifier	model		6649610	1					
ANR	6650235	CallExpression	"g_strdup ( ""ibmveth"" )"		6649610	1					
ANR	6650236	Callee	g_strdup		6649610	0					
ANR	6650237	Identifier	g_strdup		6649610	0					
ANR	6650238	ArgumentList	"""ibmveth"""		6649610	1					
ANR	6650239	Argument	"""ibmveth"""		6649610	0					
ANR	6650240	PrimaryExpression	"""ibmveth"""		6649610	0					
ANR	6650241	IfStatement	"if ( strcmp ( nd -> model , ""ibmveth"" ) == 0 )"		6649610	2					
ANR	6650242	Condition	"strcmp ( nd -> model , ""ibmveth"" ) == 0"	259:12:4351:4383	6649610	0	True				
ANR	6650243	EqualityExpression	"strcmp ( nd -> model , ""ibmveth"" ) == 0"		6649610	0		==			
ANR	6650244	CallExpression	"strcmp ( nd -> model , ""ibmveth"" )"		6649610	0					
ANR	6650245	Callee	strcmp		6649610	0					
ANR	6650246	Identifier	strcmp		6649610	0					
ANR	6650247	ArgumentList	nd -> model		6649610	1					
ANR	6650248	Argument	nd -> model		6649610	0					
ANR	6650249	PtrMemberAccess	nd -> model		6649610	0					
ANR	6650250	Identifier	nd		6649610	0					
ANR	6650251	Identifier	model		6649610	1					
ANR	6650252	Argument	"""ibmveth"""		6649610	1					
ANR	6650253	PrimaryExpression	"""ibmveth"""		6649610	0					
ANR	6650254	PrimaryExpression	0		6649610	1					
ANR	6650255	CompoundStatement		247:47:4062:4062	6649610	1					
ANR	6650256	ExpressionStatement	"spapr_vlan_create ( spapr -> vio_bus , 0x1000 + i , nd )"	261:12:4401:4450	6649610	0	True				
ANR	6650257	CallExpression	"spapr_vlan_create ( spapr -> vio_bus , 0x1000 + i , nd )"		6649610	0					
ANR	6650258	Callee	spapr_vlan_create		6649610	0					
ANR	6650259	Identifier	spapr_vlan_create		6649610	0					
ANR	6650260	ArgumentList	spapr -> vio_bus		6649610	1					
ANR	6650261	Argument	spapr -> vio_bus		6649610	0					
ANR	6650262	PtrMemberAccess	spapr -> vio_bus		6649610	0					
ANR	6650263	Identifier	spapr		6649610	0					
ANR	6650264	Identifier	vio_bus		6649610	1					
ANR	6650265	Argument	0x1000 + i		6649610	1					
ANR	6650266	AdditiveExpression	0x1000 + i		6649610	0		+			
ANR	6650267	PrimaryExpression	0x1000		6649610	0					
ANR	6650268	Identifier	i		6649610	1					
ANR	6650269	Argument	nd		6649610	2					
ANR	6650270	Identifier	nd		6649610	0					
ANR	6650271	ElseStatement	else		6649610	0					
ANR	6650272	CompoundStatement		251:15:4144:4144	6649610	0					
ANR	6650273	ExpressionStatement	"pci_nic_init_nofail ( & nd_table [ i ] , nd -> model , NULL )"	265:12:4483:4533	6649610	0	True				
ANR	6650274	CallExpression	"pci_nic_init_nofail ( & nd_table [ i ] , nd -> model , NULL )"		6649610	0					
ANR	6650275	Callee	pci_nic_init_nofail		6649610	0					
ANR	6650276	Identifier	pci_nic_init_nofail		6649610	0					
ANR	6650277	ArgumentList	& nd_table [ i ]		6649610	1					
ANR	6650278	Argument	& nd_table [ i ]		6649610	0					
ANR	6650279	UnaryOperationExpression	& nd_table [ i ]		6649610	0					
ANR	6650280	UnaryOperator	&		6649610	0					
ANR	6650281	ArrayIndexing	nd_table [ i ]		6649610	1					
ANR	6650282	Identifier	nd_table		6649610	0					
ANR	6650283	Identifier	i		6649610	1					
ANR	6650284	Argument	nd -> model		6649610	1					
ANR	6650285	PtrMemberAccess	nd -> model		6649610	0					
ANR	6650286	Identifier	nd		6649610	0					
ANR	6650287	Identifier	model		6649610	1					
ANR	6650288	Argument	NULL		6649610	2					
ANR	6650289	Identifier	NULL		6649610	0					
ANR	6650290	ForStatement	for ( i = 0 ; i <= drive_get_max_bus ( IF_SCSI ) ; i ++ )		6649610	39					
ANR	6650291	ForInit	i = 0 ;	273:9:4565:4570	6649610	0	True				
ANR	6650292	AssignmentExpression	i = 0		6649610	0		=			
ANR	6650293	Identifier	i		6649610	0					
ANR	6650294	PrimaryExpression	0		6649610	1					
ANR	6650295	Condition	i <= drive_get_max_bus ( IF_SCSI )	273:16:4572:4602	6649610	1	True				
ANR	6650296	RelationalExpression	i <= drive_get_max_bus ( IF_SCSI )		6649610	0		<=			
ANR	6650297	Identifier	i		6649610	0					
ANR	6650298	CallExpression	drive_get_max_bus ( IF_SCSI )		6649610	1					
ANR	6650299	Callee	drive_get_max_bus		6649610	0					
ANR	6650300	Identifier	drive_get_max_bus		6649610	0					
ANR	6650301	ArgumentList	IF_SCSI		6649610	1					
ANR	6650302	Argument	IF_SCSI		6649610	0					
ANR	6650303	Identifier	IF_SCSI		6649610	0					
ANR	6650304	PostIncDecOperationExpression	i ++	273:49:4605:4607	6649610	2	True				
ANR	6650305	Identifier	i		6649610	0					
ANR	6650306	IncDec	++		6649610	1					
ANR	6650307	CompoundStatement		261:54:4286:4286	6649610	3					
ANR	6650308	ExpressionStatement	"spapr_vscsi_create ( spapr -> vio_bus , 0x2000 + i )"	275:8:4621:4667	6649610	0	True				
ANR	6650309	CallExpression	"spapr_vscsi_create ( spapr -> vio_bus , 0x2000 + i )"		6649610	0					
ANR	6650310	Callee	spapr_vscsi_create		6649610	0					
ANR	6650311	Identifier	spapr_vscsi_create		6649610	0					
ANR	6650312	ArgumentList	spapr -> vio_bus		6649610	1					
ANR	6650313	Argument	spapr -> vio_bus		6649610	0					
ANR	6650314	PtrMemberAccess	spapr -> vio_bus		6649610	0					
ANR	6650315	Identifier	spapr		6649610	0					
ANR	6650316	Identifier	vio_bus		6649610	1					
ANR	6650317	Argument	0x2000 + i		6649610	1					
ANR	6650318	AdditiveExpression	0x2000 + i		6649610	0		+			
ANR	6650319	PrimaryExpression	0x2000		6649610	0					
ANR	6650320	Identifier	i		6649610	1					
ANR	6650321	IfStatement	if ( kernel_filename )		6649610	40					
ANR	6650322	Condition	kernel_filename	281:8:4687:4701	6649610	0	True				
ANR	6650323	Identifier	kernel_filename		6649610	0					
ANR	6650324	CompoundStatement		271:8:4391:4411	6649610	1					
ANR	6650325	IdentifierDeclStatement	uint64_t lowaddr = 0 ;	283:8:4715:4735	6649610	0	True				
ANR	6650326	IdentifierDecl	lowaddr = 0		6649610	0					
ANR	6650327	IdentifierDeclType	uint64_t		6649610	0					
ANR	6650328	Identifier	lowaddr		6649610	1					
ANR	6650329	AssignmentExpression	lowaddr = 0		6649610	2		=			
ANR	6650330	Identifier	lowaddr		6649610	0					
ANR	6650331	PrimaryExpression	0		6649610	1					
ANR	6650332	ExpressionStatement	"kernel_size = load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 1 , ELF_MACHINE , 0 )"	287:8:4748:4892	6649610	1	True				
ANR	6650333	AssignmentExpression	"kernel_size = load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 1 , ELF_MACHINE , 0 )"		6649610	0		=			
ANR	6650334	Identifier	kernel_size		6649610	0					
ANR	6650335	CallExpression	"load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 1 , ELF_MACHINE , 0 )"		6649610	1					
ANR	6650336	Callee	load_elf		6649610	0					
ANR	6650337	Identifier	load_elf		6649610	0					
ANR	6650338	ArgumentList	kernel_filename		6649610	1					
ANR	6650339	Argument	kernel_filename		6649610	0					
ANR	6650340	Identifier	kernel_filename		6649610	0					
ANR	6650341	Argument	translate_kernel_address		6649610	1					
ANR	6650342	Identifier	translate_kernel_address		6649610	0					
ANR	6650343	Argument	NULL		6649610	2					
ANR	6650344	Identifier	NULL		6649610	0					
ANR	6650345	Argument	NULL		6649610	3					
ANR	6650346	Identifier	NULL		6649610	0					
ANR	6650347	Argument	& lowaddr		6649610	4					
ANR	6650348	UnaryOperationExpression	& lowaddr		6649610	0					
ANR	6650349	UnaryOperator	&		6649610	0					
ANR	6650350	Identifier	lowaddr		6649610	1					
ANR	6650351	Argument	NULL		6649610	5					
ANR	6650352	Identifier	NULL		6649610	0					
ANR	6650353	Argument	1		6649610	6					
ANR	6650354	PrimaryExpression	1		6649610	0					
ANR	6650355	Argument	ELF_MACHINE		6649610	7					
ANR	6650356	Identifier	ELF_MACHINE		6649610	0					
ANR	6650357	Argument	0		6649610	8					
ANR	6650358	PrimaryExpression	0		6649610	0					
ANR	6650359	IfStatement	if ( kernel_size < 0 )		6649610	2					
ANR	6650360	Condition	kernel_size < 0	291:12:4907:4921	6649610	0	True				
ANR	6650361	RelationalExpression	kernel_size < 0		6649610	0		<			
ANR	6650362	Identifier	kernel_size		6649610	0					
ANR	6650363	PrimaryExpression	0		6649610	1					
ANR	6650364	CompoundStatement		279:29:4600:4600	6649610	1					
ANR	6650365	ExpressionStatement	"kernel_size = load_image_targphys ( kernel_filename , KERNEL_LOAD_ADDR , ram_size - KERNEL_LOAD_ADDR )"	293:12:4939:5130	6649610	0	True				
ANR	6650366	AssignmentExpression	"kernel_size = load_image_targphys ( kernel_filename , KERNEL_LOAD_ADDR , ram_size - KERNEL_LOAD_ADDR )"		6649610	0		=			
ANR	6650367	Identifier	kernel_size		6649610	0					
ANR	6650368	CallExpression	"load_image_targphys ( kernel_filename , KERNEL_LOAD_ADDR , ram_size - KERNEL_LOAD_ADDR )"		6649610	1					
ANR	6650369	Callee	load_image_targphys		6649610	0					
ANR	6650370	Identifier	load_image_targphys		6649610	0					
ANR	6650371	ArgumentList	kernel_filename		6649610	1					
ANR	6650372	Argument	kernel_filename		6649610	0					
ANR	6650373	Identifier	kernel_filename		6649610	0					
ANR	6650374	Argument	KERNEL_LOAD_ADDR		6649610	1					
ANR	6650375	Identifier	KERNEL_LOAD_ADDR		6649610	0					
ANR	6650376	Argument	ram_size - KERNEL_LOAD_ADDR		6649610	2					
ANR	6650377	AdditiveExpression	ram_size - KERNEL_LOAD_ADDR		6649610	0		-			
ANR	6650378	Identifier	ram_size		6649610	0					
ANR	6650379	Identifier	KERNEL_LOAD_ADDR		6649610	1					
ANR	6650380	IfStatement	if ( kernel_size < 0 )		6649610	3					
ANR	6650381	Condition	kernel_size < 0	301:12:5156:5170	6649610	0	True				
ANR	6650382	RelationalExpression	kernel_size < 0		6649610	0		<			
ANR	6650383	Identifier	kernel_size		6649610	0					
ANR	6650384	PrimaryExpression	0		6649610	1					
ANR	6650385	CompoundStatement		289:29:4849:4849	6649610	1					
ANR	6650386	ExpressionStatement	"fprintf ( stderr , ""qemu: could not load kernel '%s'\\n"" , kernel_filename )"	303:12:5188:5279	6649610	0	True				
ANR	6650387	CallExpression	"fprintf ( stderr , ""qemu: could not load kernel '%s'\\n"" , kernel_filename )"		6649610	0					
ANR	6650388	Callee	fprintf		6649610	0					
ANR	6650389	Identifier	fprintf		6649610	0					
ANR	6650390	ArgumentList	stderr		6649610	1					
ANR	6650391	Argument	stderr		6649610	0					
ANR	6650392	Identifier	stderr		6649610	0					
ANR	6650393	Argument	"""qemu: could not load kernel '%s'\\n"""		6649610	1					
ANR	6650394	PrimaryExpression	"""qemu: could not load kernel '%s'\\n"""		6649610	0					
ANR	6650395	Argument	kernel_filename		6649610	2					
ANR	6650396	Identifier	kernel_filename		6649610	0					
ANR	6650397	ExpressionStatement	exit ( 1 )	307:12:5294:5301	6649610	1	True				
ANR	6650398	CallExpression	exit ( 1 )		6649610	0					
ANR	6650399	Callee	exit		6649610	0					
ANR	6650400	Identifier	exit		6649610	0					
ANR	6650401	ArgumentList	1		6649610	1					
ANR	6650402	Argument	1		6649610	0					
ANR	6650403	PrimaryExpression	1		6649610	0					
ANR	6650404	IfStatement	if ( initrd_filename )		6649610	4					
ANR	6650405	Condition	initrd_filename	315:12:5356:5370	6649610	0	True				
ANR	6650406	Identifier	initrd_filename		6649610	0					
ANR	6650407	CompoundStatement		303:29:5049:5049	6649610	1					
ANR	6650408	ExpressionStatement	initrd_base = INITRD_LOAD_ADDR	317:12:5388:5418	6649610	0	True				
ANR	6650409	AssignmentExpression	initrd_base = INITRD_LOAD_ADDR		6649610	0		=			
ANR	6650410	Identifier	initrd_base		6649610	0					
ANR	6650411	Identifier	INITRD_LOAD_ADDR		6649610	1					
ANR	6650412	ExpressionStatement	"initrd_size = load_image_targphys ( initrd_filename , initrd_base , ram_size - initrd_base )"	319:12:5433:5567	6649610	1	True				
ANR	6650413	AssignmentExpression	"initrd_size = load_image_targphys ( initrd_filename , initrd_base , ram_size - initrd_base )"		6649610	0		=			
ANR	6650414	Identifier	initrd_size		6649610	0					
ANR	6650415	CallExpression	"load_image_targphys ( initrd_filename , initrd_base , ram_size - initrd_base )"		6649610	1					
ANR	6650416	Callee	load_image_targphys		6649610	0					
ANR	6650417	Identifier	load_image_targphys		6649610	0					
ANR	6650418	ArgumentList	initrd_filename		6649610	1					
ANR	6650419	Argument	initrd_filename		6649610	0					
ANR	6650420	Identifier	initrd_filename		6649610	0					
ANR	6650421	Argument	initrd_base		6649610	1					
ANR	6650422	Identifier	initrd_base		6649610	0					
ANR	6650423	Argument	ram_size - initrd_base		6649610	2					
ANR	6650424	AdditiveExpression	ram_size - initrd_base		6649610	0		-			
ANR	6650425	Identifier	ram_size		6649610	0					
ANR	6650426	Identifier	initrd_base		6649610	1					
ANR	6650427	IfStatement	if ( initrd_size < 0 )		6649610	2					
ANR	6650428	Condition	initrd_size < 0	323:16:5586:5600	6649610	0	True				
ANR	6650429	RelationalExpression	initrd_size < 0		6649610	0		<			
ANR	6650430	Identifier	initrd_size		6649610	0					
ANR	6650431	PrimaryExpression	0		6649610	1					
ANR	6650432	CompoundStatement		311:33:5279:5279	6649610	1					
ANR	6650433	ExpressionStatement	"fprintf ( stderr , ""qemu: could not load initial ram disk '%s'\\n"" , initrd_filename )"	325:16:5622:5727	6649610	0	True				
ANR	6650434	CallExpression	"fprintf ( stderr , ""qemu: could not load initial ram disk '%s'\\n"" , initrd_filename )"		6649610	0					
ANR	6650435	Callee	fprintf		6649610	0					
ANR	6650436	Identifier	fprintf		6649610	0					
ANR	6650437	ArgumentList	stderr		6649610	1					
ANR	6650438	Argument	stderr		6649610	0					
ANR	6650439	Identifier	stderr		6649610	0					
ANR	6650440	Argument	"""qemu: could not load initial ram disk '%s'\\n"""		6649610	1					
ANR	6650441	PrimaryExpression	"""qemu: could not load initial ram disk '%s'\\n"""		6649610	0					
ANR	6650442	Argument	initrd_filename		6649610	2					
ANR	6650443	Identifier	initrd_filename		6649610	0					
ANR	6650444	ExpressionStatement	exit ( 1 )	329:16:5746:5753	6649610	1	True				
ANR	6650445	CallExpression	exit ( 1 )		6649610	0					
ANR	6650446	Callee	exit		6649610	0					
ANR	6650447	Identifier	exit		6649610	0					
ANR	6650448	ArgumentList	1		6649610	1					
ANR	6650449	Argument	1		6649610	0					
ANR	6650450	PrimaryExpression	1		6649610	0					
ANR	6650451	ElseStatement	else		6649610	0					
ANR	6650452	CompoundStatement		321:15:5462:5462	6649610	0					
ANR	6650453	ExpressionStatement	initrd_base = 0	335:12:5801:5816	6649610	0	True				
ANR	6650454	AssignmentExpression	initrd_base = 0		6649610	0		=			
ANR	6650455	Identifier	initrd_base		6649610	0					
ANR	6650456	PrimaryExpression	0		6649610	1					
ANR	6650457	ExpressionStatement	initrd_size = 0	337:12:5831:5846	6649610	1	True				
ANR	6650458	AssignmentExpression	initrd_size = 0		6649610	0		=			
ANR	6650459	Identifier	initrd_size		6649610	0					
ANR	6650460	PrimaryExpression	0		6649610	1					
ANR	6650461	ExpressionStatement	spapr -> entry_point = KERNEL_LOAD_ADDR	343:8:5870:5907	6649610	5	True				
ANR	6650462	AssignmentExpression	spapr -> entry_point = KERNEL_LOAD_ADDR		6649610	0		=			
ANR	6650463	PtrMemberAccess	spapr -> entry_point		6649610	0					
ANR	6650464	Identifier	spapr		6649610	0					
ANR	6650465	Identifier	entry_point		6649610	1					
ANR	6650466	Identifier	KERNEL_LOAD_ADDR		6649610	1					
ANR	6650467	ElseStatement	else		6649610	0					
ANR	6650468	CompoundStatement		333:11:5597:5597	6649610	0					
ANR	6650469	IfStatement	if ( rma_size < ( MIN_RMA_SLOF << 20 ) )		6649610	0					
ANR	6650470	Condition	rma_size < ( MIN_RMA_SLOF << 20 )	347:12:5936:5966	6649610	0	True				
ANR	6650471	RelationalExpression	rma_size < ( MIN_RMA_SLOF << 20 )		6649610	0		<			
ANR	6650472	Identifier	rma_size		6649610	0					
ANR	6650473	ShiftExpression	MIN_RMA_SLOF << 20		6649610	1		<<			
ANR	6650474	Identifier	MIN_RMA_SLOF		6649610	0					
ANR	6650475	PrimaryExpression	20		6649610	1					
ANR	6650476	CompoundStatement		335:45:5645:5645	6649610	1					
ANR	6650477	Statement	fprintf	349:12:5984:5990	6649610	0	True				
ANR	6650478	Statement	(	349:19:5991:5991	6649610	1	True				
ANR	6650479	Statement	stderr	349:20:5992:5997	6649610	2	True				
ANR	6650480	Statement	","	349:26:5998:5998	6649610	3	True				
ANR	6650481	Statement	"""qemu: pSeries SLOF firmware requires >= """	349:28:6000:6041	6649610	4	True				
ANR	6650482	Statement	"""%ldM guest RMA (Real Mode Area memory)\\n"""	351:20:6064:6105	6649610	5	True				
ANR	6650483	Statement	","	351:62:6106:6106	6649610	6	True				
ANR	6650484	Statement	MIN_RMA_SLOF	351:64:6108:6119	6649610	7	True				
ANR	6650485	Statement	)	351:76:6120:6120	6649610	8	True				
ANR	6650486	ExpressionStatement		351:77:6121:6121	6649610	9	True				
ANR	6650487	ExpressionStatement	exit ( 1 )	353:12:6136:6143	6649610	10	True				
ANR	6650488	CallExpression	exit ( 1 )		6649610	0					
ANR	6650489	Callee	exit		6649610	0					
ANR	6650490	Identifier	exit		6649610	0					
ANR	6650491	ArgumentList	1		6649610	1					
ANR	6650492	Argument	1		6649610	0					
ANR	6650493	PrimaryExpression	1		6649610	0					
ANR	6650494	ExpressionStatement	"filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , FW_FILE_NAME )"	357:8:6165:6225	6649610	1	True				
ANR	6650495	AssignmentExpression	"filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , FW_FILE_NAME )"		6649610	0		=			
ANR	6650496	Identifier	filename		6649610	0					
ANR	6650497	CallExpression	"qemu_find_file ( QEMU_FILE_TYPE_BIOS , FW_FILE_NAME )"		6649610	1					
ANR	6650498	Callee	qemu_find_file		6649610	0					
ANR	6650499	Identifier	qemu_find_file		6649610	0					
ANR	6650500	ArgumentList	QEMU_FILE_TYPE_BIOS		6649610	1					
ANR	6650501	Argument	QEMU_FILE_TYPE_BIOS		6649610	0					
ANR	6650502	Identifier	QEMU_FILE_TYPE_BIOS		6649610	0					
ANR	6650503	Argument	FW_FILE_NAME		6649610	1					
ANR	6650504	Identifier	FW_FILE_NAME		6649610	0					
ANR	6650505	ExpressionStatement	"fw_size = load_image_targphys ( filename , 0 , FW_MAX_SIZE )"	359:8:6236:6291	6649610	2	True				
ANR	6650506	AssignmentExpression	"fw_size = load_image_targphys ( filename , 0 , FW_MAX_SIZE )"		6649610	0		=			
ANR	6650507	Identifier	fw_size		6649610	0					
ANR	6650508	CallExpression	"load_image_targphys ( filename , 0 , FW_MAX_SIZE )"		6649610	1					
ANR	6650509	Callee	load_image_targphys		6649610	0					
ANR	6650510	Identifier	load_image_targphys		6649610	0					
ANR	6650511	ArgumentList	filename		6649610	1					
ANR	6650512	Argument	filename		6649610	0					
ANR	6650513	Identifier	filename		6649610	0					
ANR	6650514	Argument	0		6649610	1					
ANR	6650515	PrimaryExpression	0		6649610	0					
ANR	6650516	Argument	FW_MAX_SIZE		6649610	2					
ANR	6650517	Identifier	FW_MAX_SIZE		6649610	0					
ANR	6650518	IfStatement	if ( fw_size < 0 )		6649610	3					
ANR	6650519	Condition	fw_size < 0	361:12:6306:6316	6649610	0	True				
ANR	6650520	RelationalExpression	fw_size < 0		6649610	0		<			
ANR	6650521	Identifier	fw_size		6649610	0					
ANR	6650522	PrimaryExpression	0		6649610	1					
ANR	6650523	CompoundStatement		349:25:5995:5995	6649610	1					
ANR	6650524	ExpressionStatement	"hw_error ( ""qemu: could not load LPAR rtas '%s'\\n"" , filename )"	363:12:6334:6393	6649610	0	True				
ANR	6650525	CallExpression	"hw_error ( ""qemu: could not load LPAR rtas '%s'\\n"" , filename )"		6649610	0					
ANR	6650526	Callee	hw_error		6649610	0					
ANR	6650527	Identifier	hw_error		6649610	0					
ANR	6650528	ArgumentList	"""qemu: could not load LPAR rtas '%s'\\n"""		6649610	1					
ANR	6650529	Argument	"""qemu: could not load LPAR rtas '%s'\\n"""		6649610	0					
ANR	6650530	PrimaryExpression	"""qemu: could not load LPAR rtas '%s'\\n"""		6649610	0					
ANR	6650531	Argument	filename		6649610	1					
ANR	6650532	Identifier	filename		6649610	0					
ANR	6650533	ExpressionStatement	exit ( 1 )	365:12:6408:6415	6649610	1	True				
ANR	6650534	CallExpression	exit ( 1 )		6649610	0					
ANR	6650535	Callee	exit		6649610	0					
ANR	6650536	Identifier	exit		6649610	0					
ANR	6650537	ArgumentList	1		6649610	1					
ANR	6650538	Argument	1		6649610	0					
ANR	6650539	PrimaryExpression	1		6649610	0					
ANR	6650540	ExpressionStatement	g_free ( filename )	369:8:6437:6453	6649610	4	True				
ANR	6650541	CallExpression	g_free ( filename )		6649610	0					
ANR	6650542	Callee	g_free		6649610	0					
ANR	6650543	Identifier	g_free		6649610	0					
ANR	6650544	ArgumentList	filename		6649610	1					
ANR	6650545	Argument	filename		6649610	0					
ANR	6650546	Identifier	filename		6649610	0					
ANR	6650547	ExpressionStatement	spapr -> entry_point = 0x100	371:8:6464:6490	6649610	5	True				
ANR	6650548	AssignmentExpression	spapr -> entry_point = 0x100		6649610	0		=			
ANR	6650549	PtrMemberAccess	spapr -> entry_point		6649610	0					
ANR	6650550	Identifier	spapr		6649610	0					
ANR	6650551	Identifier	entry_point		6649610	1					
ANR	6650552	PrimaryExpression	0x100		6649610	1					
ANR	6650553	ExpressionStatement	initrd_base = 0	373:8:6501:6516	6649610	6	True				
ANR	6650554	AssignmentExpression	initrd_base = 0		6649610	0		=			
ANR	6650555	Identifier	initrd_base		6649610	0					
ANR	6650556	PrimaryExpression	0		6649610	1					
ANR	6650557	ExpressionStatement	initrd_size = 0	375:8:6527:6542	6649610	7	True				
ANR	6650558	AssignmentExpression	initrd_size = 0		6649610	0		=			
ANR	6650559	Identifier	initrd_size		6649610	0					
ANR	6650560	PrimaryExpression	0		6649610	1					
ANR	6650561	ForStatement	for ( env = first_cpu ; env != NULL ; env = env -> next_cpu )		6649610	8					
ANR	6650562	ForInit	env = first_cpu ;	383:13:6680:6695	6649610	0	True				
ANR	6650563	AssignmentExpression	env = first_cpu		6649610	0		=			
ANR	6650564	Identifier	env		6649610	0					
ANR	6650565	Identifier	first_cpu		6649610	1					
ANR	6650566	Condition	env != NULL	383:30:6697:6707	6649610	1	True				
ANR	6650567	EqualityExpression	env != NULL		6649610	0		!=			
ANR	6650568	Identifier	env		6649610	0					
ANR	6650569	Identifier	NULL		6649610	1					
ANR	6650570	AssignmentExpression	env = env -> next_cpu	383:43:6710:6728	6649610	2	True	=			
ANR	6650571	Identifier	env		6649610	0					
ANR	6650572	PtrMemberAccess	env -> next_cpu		6649610	1					
ANR	6650573	Identifier	env		6649610	0					
ANR	6650574	Identifier	next_cpu		6649610	1					
ANR	6650575	CompoundStatement		371:64:6407:6407	6649610	3					
ANR	6650576	ExpressionStatement	env -> halted = 1	385:12:6746:6761	6649610	0	True				
ANR	6650577	AssignmentExpression	env -> halted = 1		6649610	0		=			
ANR	6650578	PtrMemberAccess	env -> halted		6649610	0					
ANR	6650579	Identifier	env		6649610	0					
ANR	6650580	Identifier	halted		6649610	1					
ANR	6650581	PrimaryExpression	1		6649610	1					
ANR	6650582	ExpressionStatement	"spapr -> fdt_skel = spapr_create_fdt_skel ( cpu_model , rma_size , initrd_base , initrd_size , boot_device , kernel_cmdline , pteg_shift + 7 )"	395:4:6823:7089	6649610	41	True				
ANR	6650583	AssignmentExpression	"spapr -> fdt_skel = spapr_create_fdt_skel ( cpu_model , rma_size , initrd_base , initrd_size , boot_device , kernel_cmdline , pteg_shift + 7 )"		6649610	0		=			
ANR	6650584	PtrMemberAccess	spapr -> fdt_skel		6649610	0					
ANR	6650585	Identifier	spapr		6649610	0					
ANR	6650586	Identifier	fdt_skel		6649610	1					
ANR	6650587	CallExpression	"spapr_create_fdt_skel ( cpu_model , rma_size , initrd_base , initrd_size , boot_device , kernel_cmdline , pteg_shift + 7 )"		6649610	1					
ANR	6650588	Callee	spapr_create_fdt_skel		6649610	0					
ANR	6650589	Identifier	spapr_create_fdt_skel		6649610	0					
ANR	6650590	ArgumentList	cpu_model		6649610	1					
ANR	6650591	Argument	cpu_model		6649610	0					
ANR	6650592	Identifier	cpu_model		6649610	0					
ANR	6650593	Argument	rma_size		6649610	1					
ANR	6650594	Identifier	rma_size		6649610	0					
ANR	6650595	Argument	initrd_base		6649610	2					
ANR	6650596	Identifier	initrd_base		6649610	0					
ANR	6650597	Argument	initrd_size		6649610	3					
ANR	6650598	Identifier	initrd_size		6649610	0					
ANR	6650599	Argument	boot_device		6649610	4					
ANR	6650600	Identifier	boot_device		6649610	0					
ANR	6650601	Argument	kernel_cmdline		6649610	5					
ANR	6650602	Identifier	kernel_cmdline		6649610	0					
ANR	6650603	Argument	pteg_shift + 7		6649610	6					
ANR	6650604	AdditiveExpression	pteg_shift + 7		6649610	0		+			
ANR	6650605	Identifier	pteg_shift		6649610	0					
ANR	6650606	PrimaryExpression	7		6649610	1					
ANR	6650607	ExpressionStatement	assert ( spapr -> fdt_skel != NULL )	403:4:7096:7127	6649610	42	True				
ANR	6650608	CallExpression	assert ( spapr -> fdt_skel != NULL )		6649610	0					
ANR	6650609	Callee	assert		6649610	0					
ANR	6650610	Identifier	assert		6649610	0					
ANR	6650611	ArgumentList	spapr -> fdt_skel != NULL		6649610	1					
ANR	6650612	Argument	spapr -> fdt_skel != NULL		6649610	0					
ANR	6650613	EqualityExpression	spapr -> fdt_skel != NULL		6649610	0		!=			
ANR	6650614	PtrMemberAccess	spapr -> fdt_skel		6649610	0					
ANR	6650615	Identifier	spapr		6649610	0					
ANR	6650616	Identifier	fdt_skel		6649610	1					
ANR	6650617	Identifier	NULL		6649610	1					
ANR	6650618	ExpressionStatement	"qemu_register_reset ( spapr_reset , spapr )"	407:4:7136:7175	6649610	43	True				
ANR	6650619	CallExpression	"qemu_register_reset ( spapr_reset , spapr )"		6649610	0					
ANR	6650620	Callee	qemu_register_reset		6649610	0					
ANR	6650621	Identifier	qemu_register_reset		6649610	0					
ANR	6650622	ArgumentList	spapr_reset		6649610	1					
ANR	6650623	Argument	spapr_reset		6649610	0					
ANR	6650624	Identifier	spapr_reset		6649610	0					
ANR	6650625	Argument	spapr		6649610	1					
ANR	6650626	Identifier	spapr		6649610	0					
ANR	6650627	ReturnType	static void		6649610	1					
ANR	6650628	Identifier	ppc_spapr_init		6649610	2					
ANR	6650629	ParameterList	"ram_addr_t ram_size , const char * boot_device , const char * kernel_filename , const char * kernel_cmdline , const char * initrd_filename , const char * cpu_model"		6649610	3					
ANR	6650630	Parameter	ram_addr_t ram_size	1:27:27:45	6649610	0	True				
ANR	6650631	ParameterType	ram_addr_t		6649610	0					
ANR	6650632	Identifier	ram_size		6649610	1					
ANR	6650633	Parameter	const char * boot_device	3:27:76:98	6649610	1	True				
ANR	6650634	ParameterType	const char *		6649610	0					
ANR	6650635	Identifier	boot_device		6649610	1					
ANR	6650636	Parameter	const char * kernel_filename	5:27:129:155	6649610	2	True				
ANR	6650637	ParameterType	const char *		6649610	0					
ANR	6650638	Identifier	kernel_filename		6649610	1					
ANR	6650639	Parameter	const char * kernel_cmdline	7:27:186:211	6649610	3	True				
ANR	6650640	ParameterType	const char *		6649610	0					
ANR	6650641	Identifier	kernel_cmdline		6649610	1					
ANR	6650642	Parameter	const char * initrd_filename	9:27:242:268	6649610	4	True				
ANR	6650643	ParameterType	const char *		6649610	0					
ANR	6650644	Identifier	initrd_filename		6649610	1					
ANR	6650645	Parameter	const char * cpu_model	11:27:299:319	6649610	5	True				
ANR	6650646	ParameterType	const char *		6649610	0					
ANR	6650647	Identifier	cpu_model		6649610	1					
ANR	6650648	CFGEntryNode	ENTRY		6649610		True				
ANR	6650649	CFGExitNode	EXIT		6649610		True				
ANR	6650650	Symbol	lowaddr		6649610						
ANR	6650651	Symbol	drive_get_max_bus		6649610						
ANR	6650652	Symbol	* SPR_SDR1		6649610						
ANR	6650653	Symbol	cpu_ppc_hypercall		6649610						
ANR	6650654	Symbol	env -> external_htab		6649610						
ANR	6650655	Symbol	g_new		6649610						
ANR	6650656	Symbol	env -> hreset_vector		6649610						
ANR	6650657	Symbol	spapr_reset		6649610						
ANR	6650658	Symbol	ram		6649610						
ANR	6650659	Symbol	kvmppc_alloc_rma		6649610						
ANR	6650660	Symbol	spapr_create_fdt_skel		6649610						
ANR	6650661	Symbol	SPAPR_PCI_MEM_WIN_SIZE		6649610						
ANR	6650662	Symbol	MemoryRegion		6649610						
ANR	6650663	Symbol	spapr		6649610						
ANR	6650664	Symbol	nonrma_size		6649610						
ANR	6650665	Symbol	SPR_HIOR		6649610						
ANR	6650666	Symbol	SPAPR_PCI_MEM_WIN_ADDR		6649610						
ANR	6650667	Symbol	TIMEBASE_FREQ		6649610						
ANR	6650668	Symbol	filename		6649610						
ANR	6650669	Symbol	MIN		6649610						
ANR	6650670	Symbol	* * env		6649610						
ANR	6650671	Symbol	RTAS_MAX_SIZE		6649610						
ANR	6650672	Symbol	spapr -> fdt_addr		6649610						
ANR	6650673	Symbol	spapr -> fdt_skel		6649610						
ANR	6650674	Symbol	FW_MAX_SIZE		6649610						
ANR	6650675	Symbol	cpu_model		6649610						
ANR	6650676	Symbol	load_image_targphys		6649610						
ANR	6650677	Symbol	kvm_enabled		6649610						
ANR	6650678	Symbol	nd_table		6649610						
ANR	6650679	Symbol	rma_size		6649610						
ANR	6650680	Symbol	get_system_memory		6649610						
ANR	6650681	Symbol	xics_system_init		6649610						
ANR	6650682	Symbol	i		6649610						
ANR	6650683	Symbol	FDT_MAX_SIZE		6649610						
ANR	6650684	Symbol	first_cpu		6649610						
ANR	6650685	Symbol	SPAPR_VTY_BASE_ADDRESS		6649610						
ANR	6650686	Symbol	env -> spr		6649610						
ANR	6650687	Symbol	FW_FILE_NAME		6649610						
ANR	6650688	Symbol	ram_size		6649610						
ANR	6650689	Symbol	emulate_spapr_hypercall		6649610						
ANR	6650690	Symbol	nonrma_base		6649610						
ANR	6650691	Symbol	kernel_filename		6649610						
ANR	6650692	Symbol	env -> gpr		6649610						
ANR	6650693	Symbol	serial_hds		6649610						
ANR	6650694	Symbol	spapr -> next_irq		6649610						
ANR	6650695	Symbol	* nd		6649610						
ANR	6650696	Symbol	nb_nics		6649610						
ANR	6650697	Symbol	env -> halted		6649610						
ANR	6650698	Symbol	rma_alloc_size		6649610						
ANR	6650699	Symbol	nd -> model		6649610						
ANR	6650700	Symbol	spapr -> rtas_size		6649610						
ANR	6650701	Symbol	MIN_RMA_SLOF		6649610						
ANR	6650702	Symbol	spapr -> icp		6649610						
ANR	6650703	Symbol	SPAPR_PCI_IO_WIN_ADDR		6649610						
ANR	6650704	Symbol	fw_size		6649610						
ANR	6650705	Symbol	spapr -> htab_size		6649610						
ANR	6650706	Symbol	XICS_IRQS		6649610						
ANR	6650707	Symbol	spapr -> rtas_addr		6649610						
ANR	6650708	Symbol	pteg_shift		6649610						
ANR	6650709	Symbol	env -> htab_mask		6649610						
ANR	6650710	Symbol	& cpu_reset		6649610						
ANR	6650711	Symbol	env -> cpu_index		6649610						
ANR	6650712	Symbol	* SPR_HIOR		6649610						
ANR	6650713	Symbol	kernel_size		6649610						
ANR	6650714	Symbol	strcmp		6649610						
ANR	6650715	Symbol	smp_cpus		6649610						
ANR	6650716	Symbol	NULL		6649610						
ANR	6650717	Symbol	cpu_init		6649610						
ANR	6650718	Symbol	initrd_base		6649610						
ANR	6650719	Symbol	* env		6649610						
ANR	6650720	Symbol	QEMU_FILE_TYPE_BIOS		6649610						
ANR	6650721	Symbol	spapr_vio_bus_init		6649610						
ANR	6650722	Symbol	KERNEL_LOAD_ADDR		6649610						
ANR	6650723	Symbol	stderr		6649610						
ANR	6650724	Symbol	nd		6649610						
ANR	6650725	Symbol	boot_device		6649610						
ANR	6650726	Symbol	env -> htab_base		6649610						
ANR	6650727	Symbol	g_malloc0		6649610						
ANR	6650728	Symbol	load_elf		6649610						
ANR	6650729	Symbol	translate_kernel_address		6649610						
ANR	6650730	Symbol	kernel_cmdline		6649610						
ANR	6650731	Symbol	spapr -> entry_point		6649610						
ANR	6650732	Symbol	initrd_filename		6649610						
ANR	6650733	Symbol	initrd_size		6649610						
ANR	6650734	Symbol	INITRD_LOAD_ADDR		6649610						
ANR	6650735	Symbol	SPAPR_PCI_BUID		6649610						
ANR	6650736	Symbol	ELF_MACHINE		6649610						
ANR	6650737	Symbol	env -> next_cpu		6649610						
ANR	6650738	Symbol	SPR_SDR1		6649610						
ANR	6650739	Symbol	g_strdup		6649610						
ANR	6650740	Symbol	& lowaddr		6649610						
ANR	6650741	Symbol	* spapr		6649610						
ANR	6650742	Symbol	qemu_find_file		6649610						
ANR	6650743	Symbol	spapr -> vio_bus		6649610						
ANR	6650744	Symbol	MAX_SERIAL_PORTS		6649610						
ANR	6650745	Symbol	& spapr -> phbs		6649610						
ANR	6650746	Symbol	env		6649610						
ANR	6650747	Symbol	* serial_hds		6649610						
ANR	6650748	Symbol	* env -> gpr		6649610						
ANR	6650749	Symbol	env -> hreset_excp_prefix		6649610						
ANR	6650750	Symbol	qemu_memalign		6649610						
ANR	6650751	Symbol	* i		6649610						
ANR	6650752	Symbol	IF_SCSI		6649610						
ANR	6650753	Symbol	sysmem		6649610						
ANR	6650754	Symbol	spapr -> htab		6649610						
ANR	6650755	Symbol	spapr -> ram_limit		6649610						
ANR	6650756	Symbol	* env -> spr		6649610						
