command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1647484	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dds_decode_1.c								
ANR	1647485	Function	dds_decode	1:0:0:5331							
ANR	1647486	FunctionDef	"dds_decode (AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt)"		1647485	0					
ANR	1647487	CompoundStatement		5:0:114:5331	1647485	0					
ANR	1647488	IdentifierDeclStatement	DDSContext * ctx = avctx -> priv_data ;	7:4:121:155	1647485	0	True				
ANR	1647489	IdentifierDecl	* ctx = avctx -> priv_data		1647485	0					
ANR	1647490	IdentifierDeclType	DDSContext *		1647485	0					
ANR	1647491	Identifier	ctx		1647485	1					
ANR	1647492	AssignmentExpression	* ctx = avctx -> priv_data		1647485	2		=			
ANR	1647493	Identifier	ctx		1647485	0					
ANR	1647494	PtrMemberAccess	avctx -> priv_data		1647485	1					
ANR	1647495	Identifier	avctx		1647485	0					
ANR	1647496	Identifier	priv_data		1647485	1					
ANR	1647497	IdentifierDeclStatement	GetByteContext * gbc = & ctx -> gbc ;	9:4:162:193	1647485	1	True				
ANR	1647498	IdentifierDecl	* gbc = & ctx -> gbc		1647485	0					
ANR	1647499	IdentifierDeclType	GetByteContext *		1647485	0					
ANR	1647500	Identifier	gbc		1647485	1					
ANR	1647501	AssignmentExpression	* gbc = & ctx -> gbc		1647485	2		=			
ANR	1647502	Identifier	gbc		1647485	0					
ANR	1647503	UnaryOperationExpression	& ctx -> gbc		1647485	1					
ANR	1647504	UnaryOperator	&		1647485	0					
ANR	1647505	PtrMemberAccess	ctx -> gbc		1647485	1					
ANR	1647506	Identifier	ctx		1647485	0					
ANR	1647507	Identifier	gbc		1647485	1					
ANR	1647508	IdentifierDeclStatement	AVFrame * frame = data ;	11:4:200:221	1647485	2	True				
ANR	1647509	IdentifierDecl	* frame = data		1647485	0					
ANR	1647510	IdentifierDeclType	AVFrame *		1647485	0					
ANR	1647511	Identifier	frame		1647485	1					
ANR	1647512	AssignmentExpression	* frame = data		1647485	2		=			
ANR	1647513	Identifier	data		1647485	0					
ANR	1647514	Identifier	data		1647485	1					
ANR	1647515	IdentifierDeclStatement	int mipmap ;	13:4:228:238	1647485	3	True				
ANR	1647516	IdentifierDecl	mipmap		1647485	0					
ANR	1647517	IdentifierDeclType	int		1647485	0					
ANR	1647518	Identifier	mipmap		1647485	1					
ANR	1647519	IdentifierDeclStatement	int ret ;	15:4:245:252	1647485	4	True				
ANR	1647520	IdentifierDecl	ret		1647485	0					
ANR	1647521	IdentifierDeclType	int		1647485	0					
ANR	1647522	Identifier	ret		1647485	1					
ANR	1647523	ExpressionStatement	ff_texturedsp_init ( & ctx -> texdsp )	19:4:261:293	1647485	5	True				
ANR	1647524	CallExpression	ff_texturedsp_init ( & ctx -> texdsp )		1647485	0					
ANR	1647525	Callee	ff_texturedsp_init		1647485	0					
ANR	1647526	Identifier	ff_texturedsp_init		1647485	0					
ANR	1647527	ArgumentList	& ctx -> texdsp		1647485	1					
ANR	1647528	Argument	& ctx -> texdsp		1647485	0					
ANR	1647529	UnaryOperationExpression	& ctx -> texdsp		1647485	0					
ANR	1647530	UnaryOperator	&		1647485	0					
ANR	1647531	PtrMemberAccess	ctx -> texdsp		1647485	1					
ANR	1647532	Identifier	ctx		1647485	0					
ANR	1647533	Identifier	texdsp		1647485	1					
ANR	1647534	ExpressionStatement	"bytestream2_init ( gbc , avpkt -> data , avpkt -> size )"	21:4:300:347	1647485	6	True				
ANR	1647535	CallExpression	"bytestream2_init ( gbc , avpkt -> data , avpkt -> size )"		1647485	0					
ANR	1647536	Callee	bytestream2_init		1647485	0					
ANR	1647537	Identifier	bytestream2_init		1647485	0					
ANR	1647538	ArgumentList	gbc		1647485	1					
ANR	1647539	Argument	gbc		1647485	0					
ANR	1647540	Identifier	gbc		1647485	0					
ANR	1647541	Argument	avpkt -> data		1647485	1					
ANR	1647542	PtrMemberAccess	avpkt -> data		1647485	0					
ANR	1647543	Identifier	avpkt		1647485	0					
ANR	1647544	Identifier	data		1647485	1					
ANR	1647545	Argument	avpkt -> size		1647485	2					
ANR	1647546	PtrMemberAccess	avpkt -> size		1647485	0					
ANR	1647547	Identifier	avpkt		1647485	0					
ANR	1647548	Identifier	size		1647485	1					
ANR	1647549	IfStatement	if ( bytestream2_get_bytes_left ( gbc ) < 128 )		1647485	7					
ANR	1647550	Condition	bytestream2_get_bytes_left ( gbc ) < 128	25:8:360:396	1647485	0	True				
ANR	1647551	RelationalExpression	bytestream2_get_bytes_left ( gbc ) < 128		1647485	0		<			
ANR	1647552	CallExpression	bytestream2_get_bytes_left ( gbc )		1647485	0					
ANR	1647553	Callee	bytestream2_get_bytes_left		1647485	0					
ANR	1647554	Identifier	bytestream2_get_bytes_left		1647485	0					
ANR	1647555	ArgumentList	gbc		1647485	1					
ANR	1647556	Argument	gbc		1647485	0					
ANR	1647557	Identifier	gbc		1647485	0					
ANR	1647558	PrimaryExpression	128		1647485	1					
ANR	1647559	CompoundStatement		21:47:284:284	1647485	1					
ANR	1647560	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Frame is too small (%d).\\n"" , bytestream2_get_bytes_left ( gbc ) )"	27:8:410:516	1647485	0	True				
ANR	1647561	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Frame is too small (%d).\\n"" , bytestream2_get_bytes_left ( gbc ) )"		1647485	0					
ANR	1647562	Callee	av_log		1647485	0					
ANR	1647563	Identifier	av_log		1647485	0					
ANR	1647564	ArgumentList	avctx		1647485	1					
ANR	1647565	Argument	avctx		1647485	0					
ANR	1647566	Identifier	avctx		1647485	0					
ANR	1647567	Argument	AV_LOG_ERROR		1647485	1					
ANR	1647568	Identifier	AV_LOG_ERROR		1647485	0					
ANR	1647569	Argument	"""Frame is too small (%d).\\n"""		1647485	2					
ANR	1647570	PrimaryExpression	"""Frame is too small (%d).\\n"""		1647485	0					
ANR	1647571	Argument	bytestream2_get_bytes_left ( gbc )		1647485	3					
ANR	1647572	CallExpression	bytestream2_get_bytes_left ( gbc )		1647485	0					
ANR	1647573	Callee	bytestream2_get_bytes_left		1647485	0					
ANR	1647574	Identifier	bytestream2_get_bytes_left		1647485	0					
ANR	1647575	ArgumentList	gbc		1647485	1					
ANR	1647576	Argument	gbc		1647485	0					
ANR	1647577	Identifier	gbc		1647485	0					
ANR	1647578	ReturnStatement	return AVERROR_INVALIDDATA ;	31:8:527:553	1647485	1	True				
ANR	1647579	Identifier	AVERROR_INVALIDDATA		1647485	0					
ANR	1647580	IfStatement	"if ( bytestream2_get_le32 ( gbc ) != MKTAG ( 'D' , 'D' , 'S' , ' ' ) || bytestream2_get_le32 ( gbc ) != 124 )"		1647485	8					
ANR	1647581	Condition	"bytestream2_get_le32 ( gbc ) != MKTAG ( 'D' , 'D' , 'S' , ' ' ) || bytestream2_get_le32 ( gbc ) != 124"	37:8:573:671	1647485	0	True				
ANR	1647582	OrExpression	"bytestream2_get_le32 ( gbc ) != MKTAG ( 'D' , 'D' , 'S' , ' ' ) || bytestream2_get_le32 ( gbc ) != 124"		1647485	0		||			
ANR	1647583	EqualityExpression	"bytestream2_get_le32 ( gbc ) != MKTAG ( 'D' , 'D' , 'S' , ' ' )"		1647485	0		!=			
ANR	1647584	CallExpression	bytestream2_get_le32 ( gbc )		1647485	0					
ANR	1647585	Callee	bytestream2_get_le32		1647485	0					
ANR	1647586	Identifier	bytestream2_get_le32		1647485	0					
ANR	1647587	ArgumentList	gbc		1647485	1					
ANR	1647588	Argument	gbc		1647485	0					
ANR	1647589	Identifier	gbc		1647485	0					
ANR	1647590	CallExpression	"MKTAG ( 'D' , 'D' , 'S' , ' ' )"		1647485	1					
ANR	1647591	Callee	MKTAG		1647485	0					
ANR	1647592	Identifier	MKTAG		1647485	0					
ANR	1647593	ArgumentList	'D'		1647485	1					
ANR	1647594	Argument	'D'		1647485	0					
ANR	1647595	PrimaryExpression	'D'		1647485	0					
ANR	1647596	Argument	'D'		1647485	1					
ANR	1647597	PrimaryExpression	'D'		1647485	0					
ANR	1647598	Argument	'S'		1647485	2					
ANR	1647599	PrimaryExpression	'S'		1647485	0					
ANR	1647600	Argument	' '		1647485	3					
ANR	1647601	PrimaryExpression	' '		1647485	0					
ANR	1647602	EqualityExpression	bytestream2_get_le32 ( gbc ) != 124		1647485	1		!=			
ANR	1647603	CallExpression	bytestream2_get_le32 ( gbc )		1647485	0					
ANR	1647604	Callee	bytestream2_get_le32		1647485	0					
ANR	1647605	Identifier	bytestream2_get_le32		1647485	0					
ANR	1647606	ArgumentList	gbc		1647485	1					
ANR	1647607	Argument	gbc		1647485	0					
ANR	1647608	Identifier	gbc		1647485	0					
ANR	1647609	PrimaryExpression	124		1647485	1					
ANR	1647610	CompoundStatement		35:42:559:559	1647485	1					
ANR	1647611	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid DDS header.\\n"" )"	41:8:700:752	1647485	0	True				
ANR	1647612	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid DDS header.\\n"" )"		1647485	0					
ANR	1647613	Callee	av_log		1647485	0					
ANR	1647614	Identifier	av_log		1647485	0					
ANR	1647615	ArgumentList	avctx		1647485	1					
ANR	1647616	Argument	avctx		1647485	0					
ANR	1647617	Identifier	avctx		1647485	0					
ANR	1647618	Argument	AV_LOG_ERROR		1647485	1					
ANR	1647619	Identifier	AV_LOG_ERROR		1647485	0					
ANR	1647620	Argument	"""Invalid DDS header.\\n"""		1647485	2					
ANR	1647621	PrimaryExpression	"""Invalid DDS header.\\n"""		1647485	0					
ANR	1647622	ReturnStatement	return AVERROR_INVALIDDATA ;	43:8:763:789	1647485	1	True				
ANR	1647623	Identifier	AVERROR_INVALIDDATA		1647485	0					
ANR	1647624	ExpressionStatement	"bytestream2_skip ( gbc , 4 )"	49:4:805:829	1647485	9	True				
ANR	1647625	CallExpression	"bytestream2_skip ( gbc , 4 )"		1647485	0					
ANR	1647626	Callee	bytestream2_skip		1647485	0					
ANR	1647627	Identifier	bytestream2_skip		1647485	0					
ANR	1647628	ArgumentList	gbc		1647485	1					
ANR	1647629	Argument	gbc		1647485	0					
ANR	1647630	Identifier	gbc		1647485	0					
ANR	1647631	Argument	4		1647485	1					
ANR	1647632	PrimaryExpression	4		1647485	0					
ANR	1647633	ExpressionStatement	avctx -> height = bytestream2_get_le32 ( gbc )	53:4:847:888	1647485	10	True				
ANR	1647634	AssignmentExpression	avctx -> height = bytestream2_get_le32 ( gbc )		1647485	0		=			
ANR	1647635	PtrMemberAccess	avctx -> height		1647485	0					
ANR	1647636	Identifier	avctx		1647485	0					
ANR	1647637	Identifier	height		1647485	1					
ANR	1647638	CallExpression	bytestream2_get_le32 ( gbc )		1647485	1					
ANR	1647639	Callee	bytestream2_get_le32		1647485	0					
ANR	1647640	Identifier	bytestream2_get_le32		1647485	0					
ANR	1647641	ArgumentList	gbc		1647485	1					
ANR	1647642	Argument	gbc		1647485	0					
ANR	1647643	Identifier	gbc		1647485	0					
ANR	1647644	ExpressionStatement	avctx -> width = bytestream2_get_le32 ( gbc )	55:4:895:936	1647485	11	True				
ANR	1647645	AssignmentExpression	avctx -> width = bytestream2_get_le32 ( gbc )		1647485	0		=			
ANR	1647646	PtrMemberAccess	avctx -> width		1647485	0					
ANR	1647647	Identifier	avctx		1647485	0					
ANR	1647648	Identifier	width		1647485	1					
ANR	1647649	CallExpression	bytestream2_get_le32 ( gbc )		1647485	1					
ANR	1647650	Callee	bytestream2_get_le32		1647485	0					
ANR	1647651	Identifier	bytestream2_get_le32		1647485	0					
ANR	1647652	ArgumentList	gbc		1647485	1					
ANR	1647653	Argument	gbc		1647485	0					
ANR	1647654	Identifier	gbc		1647485	0					
ANR	1647655	ExpressionStatement	"ret = av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx )"	57:4:943:1007	1647485	12	True				
ANR	1647656	AssignmentExpression	"ret = av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx )"		1647485	0		=			
ANR	1647657	Identifier	ret		1647485	0					
ANR	1647658	CallExpression	"av_image_check_size ( avctx -> width , avctx -> height , 0 , avctx )"		1647485	1					
ANR	1647659	Callee	av_image_check_size		1647485	0					
ANR	1647660	Identifier	av_image_check_size		1647485	0					
ANR	1647661	ArgumentList	avctx -> width		1647485	1					
ANR	1647662	Argument	avctx -> width		1647485	0					
ANR	1647663	PtrMemberAccess	avctx -> width		1647485	0					
ANR	1647664	Identifier	avctx		1647485	0					
ANR	1647665	Identifier	width		1647485	1					
ANR	1647666	Argument	avctx -> height		1647485	1					
ANR	1647667	PtrMemberAccess	avctx -> height		1647485	0					
ANR	1647668	Identifier	avctx		1647485	0					
ANR	1647669	Identifier	height		1647485	1					
ANR	1647670	Argument	0		1647485	2					
ANR	1647671	PrimaryExpression	0		1647485	0					
ANR	1647672	Argument	avctx		1647485	3					
ANR	1647673	Identifier	avctx		1647485	0					
ANR	1647674	IfStatement	if ( ret < 0 )		1647485	13					
ANR	1647675	Condition	ret < 0	59:8:1018:1024	1647485	0	True				
ANR	1647676	RelationalExpression	ret < 0		1647485	0		<			
ANR	1647677	Identifier	ret		1647485	0					
ANR	1647678	PrimaryExpression	0		1647485	1					
ANR	1647679	CompoundStatement		55:17:912:912	1647485	1					
ANR	1647680	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid image size %dx%d.\\n"" , avctx -> width , avctx -> height )"	61:8:1038:1141	1647485	0	True				
ANR	1647681	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid image size %dx%d.\\n"" , avctx -> width , avctx -> height )"		1647485	0					
ANR	1647682	Callee	av_log		1647485	0					
ANR	1647683	Identifier	av_log		1647485	0					
ANR	1647684	ArgumentList	avctx		1647485	1					
ANR	1647685	Argument	avctx		1647485	0					
ANR	1647686	Identifier	avctx		1647485	0					
ANR	1647687	Argument	AV_LOG_ERROR		1647485	1					
ANR	1647688	Identifier	AV_LOG_ERROR		1647485	0					
ANR	1647689	Argument	"""Invalid image size %dx%d.\\n"""		1647485	2					
ANR	1647690	PrimaryExpression	"""Invalid image size %dx%d.\\n"""		1647485	0					
ANR	1647691	Argument	avctx -> width		1647485	3					
ANR	1647692	PtrMemberAccess	avctx -> width		1647485	0					
ANR	1647693	Identifier	avctx		1647485	0					
ANR	1647694	Identifier	width		1647485	1					
ANR	1647695	Argument	avctx -> height		1647485	4					
ANR	1647696	PtrMemberAccess	avctx -> height		1647485	0					
ANR	1647697	Identifier	avctx		1647485	0					
ANR	1647698	Identifier	height		1647485	1					
ANR	1647699	ReturnStatement	return ret ;	65:8:1152:1162	1647485	1	True				
ANR	1647700	Identifier	ret		1647485	0					
ANR	1647701	ExpressionStatement	"avctx -> coded_width = FFALIGN ( avctx -> width , TEXTURE_BLOCK_W )"	73:4:1247:1308	1647485	14	True				
ANR	1647702	AssignmentExpression	"avctx -> coded_width = FFALIGN ( avctx -> width , TEXTURE_BLOCK_W )"		1647485	0		=			
ANR	1647703	PtrMemberAccess	avctx -> coded_width		1647485	0					
ANR	1647704	Identifier	avctx		1647485	0					
ANR	1647705	Identifier	coded_width		1647485	1					
ANR	1647706	CallExpression	"FFALIGN ( avctx -> width , TEXTURE_BLOCK_W )"		1647485	1					
ANR	1647707	Callee	FFALIGN		1647485	0					
ANR	1647708	Identifier	FFALIGN		1647485	0					
ANR	1647709	ArgumentList	avctx -> width		1647485	1					
ANR	1647710	Argument	avctx -> width		1647485	0					
ANR	1647711	PtrMemberAccess	avctx -> width		1647485	0					
ANR	1647712	Identifier	avctx		1647485	0					
ANR	1647713	Identifier	width		1647485	1					
ANR	1647714	Argument	TEXTURE_BLOCK_W		1647485	1					
ANR	1647715	Identifier	TEXTURE_BLOCK_W		1647485	0					
ANR	1647716	ExpressionStatement	"avctx -> coded_height = FFALIGN ( avctx -> height , TEXTURE_BLOCK_H )"	75:4:1315:1376	1647485	15	True				
ANR	1647717	AssignmentExpression	"avctx -> coded_height = FFALIGN ( avctx -> height , TEXTURE_BLOCK_H )"		1647485	0		=			
ANR	1647718	PtrMemberAccess	avctx -> coded_height		1647485	0					
ANR	1647719	Identifier	avctx		1647485	0					
ANR	1647720	Identifier	coded_height		1647485	1					
ANR	1647721	CallExpression	"FFALIGN ( avctx -> height , TEXTURE_BLOCK_H )"		1647485	1					
ANR	1647722	Callee	FFALIGN		1647485	0					
ANR	1647723	Identifier	FFALIGN		1647485	0					
ANR	1647724	ArgumentList	avctx -> height		1647485	1					
ANR	1647725	Argument	avctx -> height		1647485	0					
ANR	1647726	PtrMemberAccess	avctx -> height		1647485	0					
ANR	1647727	Identifier	avctx		1647485	0					
ANR	1647728	Identifier	height		1647485	1					
ANR	1647729	Argument	TEXTURE_BLOCK_H		1647485	1					
ANR	1647730	Identifier	TEXTURE_BLOCK_H		1647485	0					
ANR	1647731	ExpressionStatement	"bytestream2_skip ( gbc , 4 )"	79:4:1385:1409	1647485	16	True				
ANR	1647732	CallExpression	"bytestream2_skip ( gbc , 4 )"		1647485	0					
ANR	1647733	Callee	bytestream2_skip		1647485	0					
ANR	1647734	Identifier	bytestream2_skip		1647485	0					
ANR	1647735	ArgumentList	gbc		1647485	1					
ANR	1647736	Argument	gbc		1647485	0					
ANR	1647737	Identifier	gbc		1647485	0					
ANR	1647738	Argument	4		1647485	1					
ANR	1647739	PrimaryExpression	4		1647485	0					
ANR	1647740	ExpressionStatement	"bytestream2_skip ( gbc , 4 )"	81:4:1425:1449	1647485	17	True				
ANR	1647741	CallExpression	"bytestream2_skip ( gbc , 4 )"		1647485	0					
ANR	1647742	Callee	bytestream2_skip		1647485	0					
ANR	1647743	Identifier	bytestream2_skip		1647485	0					
ANR	1647744	ArgumentList	gbc		1647485	1					
ANR	1647745	Argument	gbc		1647485	0					
ANR	1647746	Identifier	gbc		1647485	0					
ANR	1647747	Argument	4		1647485	1					
ANR	1647748	PrimaryExpression	4		1647485	0					
ANR	1647749	ExpressionStatement	mipmap = bytestream2_get_le32 ( gbc )	83:4:1465:1499	1647485	18	True				
ANR	1647750	AssignmentExpression	mipmap = bytestream2_get_le32 ( gbc )		1647485	0		=			
ANR	1647751	Identifier	mipmap		1647485	0					
ANR	1647752	CallExpression	bytestream2_get_le32 ( gbc )		1647485	1					
ANR	1647753	Callee	bytestream2_get_le32		1647485	0					
ANR	1647754	Identifier	bytestream2_get_le32		1647485	0					
ANR	1647755	ArgumentList	gbc		1647485	1					
ANR	1647756	Argument	gbc		1647485	0					
ANR	1647757	Identifier	gbc		1647485	0					
ANR	1647758	IfStatement	if ( mipmap != 0 )		1647485	19					
ANR	1647759	Condition	mipmap != 0	85:8:1510:1520	1647485	0	True				
ANR	1647760	EqualityExpression	mipmap != 0		1647485	0		!=			
ANR	1647761	Identifier	mipmap		1647485	0					
ANR	1647762	PrimaryExpression	0		1647485	1					
ANR	1647763	ExpressionStatement	"av_log ( avctx , AV_LOG_VERBOSE , ""Found %d mipmaps (ignored).\\n"" , mipmap )"	87:8:1532:1602	1647485	1	True				
ANR	1647764	CallExpression	"av_log ( avctx , AV_LOG_VERBOSE , ""Found %d mipmaps (ignored).\\n"" , mipmap )"		1647485	0					
ANR	1647765	Callee	av_log		1647485	0					
ANR	1647766	Identifier	av_log		1647485	0					
ANR	1647767	ArgumentList	avctx		1647485	1					
ANR	1647768	Argument	avctx		1647485	0					
ANR	1647769	Identifier	avctx		1647485	0					
ANR	1647770	Argument	AV_LOG_VERBOSE		1647485	1					
ANR	1647771	Identifier	AV_LOG_VERBOSE		1647485	0					
ANR	1647772	Argument	"""Found %d mipmaps (ignored).\\n"""		1647485	2					
ANR	1647773	PrimaryExpression	"""Found %d mipmaps (ignored).\\n"""		1647485	0					
ANR	1647774	Argument	mipmap		1647485	3					
ANR	1647775	Identifier	mipmap		1647485	0					
ANR	1647776	ExpressionStatement	ret = parse_pixel_format ( avctx )	95:4:1724:1755	1647485	20	True				
ANR	1647777	AssignmentExpression	ret = parse_pixel_format ( avctx )		1647485	0		=			
ANR	1647778	Identifier	ret		1647485	0					
ANR	1647779	CallExpression	parse_pixel_format ( avctx )		1647485	1					
ANR	1647780	Callee	parse_pixel_format		1647485	0					
ANR	1647781	Identifier	parse_pixel_format		1647485	0					
ANR	1647782	ArgumentList	avctx		1647485	1					
ANR	1647783	Argument	avctx		1647485	0					
ANR	1647784	Identifier	avctx		1647485	0					
ANR	1647785	IfStatement	if ( ret < 0 )		1647485	21					
ANR	1647786	Condition	ret < 0	97:8:1766:1772	1647485	0	True				
ANR	1647787	RelationalExpression	ret < 0		1647485	0		<			
ANR	1647788	Identifier	ret		1647485	0					
ANR	1647789	PrimaryExpression	0		1647485	1					
ANR	1647790	ReturnStatement	return ret ;	99:8:1784:1794	1647485	1	True				
ANR	1647791	Identifier	ret		1647485	0					
ANR	1647792	ExpressionStatement	"ret = ff_get_buffer ( avctx , frame , 0 )"	103:4:1803:1839	1647485	22	True				
ANR	1647793	AssignmentExpression	"ret = ff_get_buffer ( avctx , frame , 0 )"		1647485	0		=			
ANR	1647794	Identifier	ret		1647485	0					
ANR	1647795	CallExpression	"ff_get_buffer ( avctx , frame , 0 )"		1647485	1					
ANR	1647796	Callee	ff_get_buffer		1647485	0					
ANR	1647797	Identifier	ff_get_buffer		1647485	0					
ANR	1647798	ArgumentList	avctx		1647485	1					
ANR	1647799	Argument	avctx		1647485	0					
ANR	1647800	Identifier	avctx		1647485	0					
ANR	1647801	Argument	frame		1647485	1					
ANR	1647802	Identifier	frame		1647485	0					
ANR	1647803	Argument	0		1647485	2					
ANR	1647804	PrimaryExpression	0		1647485	0					
ANR	1647805	IfStatement	if ( ret < 0 )		1647485	23					
ANR	1647806	Condition	ret < 0	105:8:1850:1856	1647485	0	True				
ANR	1647807	RelationalExpression	ret < 0		1647485	0		<			
ANR	1647808	Identifier	ret		1647485	0					
ANR	1647809	PrimaryExpression	0		1647485	1					
ANR	1647810	ReturnStatement	return ret ;	107:8:1868:1878	1647485	1	True				
ANR	1647811	Identifier	ret		1647485	0					
ANR	1647812	IfStatement	if ( ctx -> compressed )		1647485	24					
ANR	1647813	Condition	ctx -> compressed	111:8:1891:1905	1647485	0	True				
ANR	1647814	PtrMemberAccess	ctx -> compressed		1647485	0					
ANR	1647815	Identifier	ctx		1647485	0					
ANR	1647816	Identifier	compressed		1647485	1					
ANR	1647817	CompoundStatement		109:8:1804:1932	1647485	1					
ANR	1647818	IdentifierDeclStatement	int size = ( avctx -> coded_height / TEXTURE_BLOCK_H ) * ( avctx -> coded_width / TEXTURE_BLOCK_W ) * ctx -> tex_ratio ;	113:8:1919:2047	1647485	0	True				
ANR	1647819	IdentifierDecl	size = ( avctx -> coded_height / TEXTURE_BLOCK_H ) * ( avctx -> coded_width / TEXTURE_BLOCK_W ) * ctx -> tex_ratio		1647485	0					
ANR	1647820	IdentifierDeclType	int		1647485	0					
ANR	1647821	Identifier	size		1647485	1					
ANR	1647822	AssignmentExpression	size = ( avctx -> coded_height / TEXTURE_BLOCK_H ) * ( avctx -> coded_width / TEXTURE_BLOCK_W ) * ctx -> tex_ratio		1647485	2		=			
ANR	1647823	Identifier	size		1647485	0					
ANR	1647824	MultiplicativeExpression	( avctx -> coded_height / TEXTURE_BLOCK_H ) * ( avctx -> coded_width / TEXTURE_BLOCK_W ) * ctx -> tex_ratio		1647485	1		*			
ANR	1647825	MultiplicativeExpression	avctx -> coded_height / TEXTURE_BLOCK_H		1647485	0		/			
ANR	1647826	PtrMemberAccess	avctx -> coded_height		1647485	0					
ANR	1647827	Identifier	avctx		1647485	0					
ANR	1647828	Identifier	coded_height		1647485	1					
ANR	1647829	Identifier	TEXTURE_BLOCK_H		1647485	1					
ANR	1647830	MultiplicativeExpression	( avctx -> coded_width / TEXTURE_BLOCK_W ) * ctx -> tex_ratio		1647485	1		*			
ANR	1647831	MultiplicativeExpression	avctx -> coded_width / TEXTURE_BLOCK_W		1647485	0		/			
ANR	1647832	PtrMemberAccess	avctx -> coded_width		1647485	0					
ANR	1647833	Identifier	avctx		1647485	0					
ANR	1647834	Identifier	coded_width		1647485	1					
ANR	1647835	Identifier	TEXTURE_BLOCK_W		1647485	1					
ANR	1647836	PtrMemberAccess	ctx -> tex_ratio		1647485	1					
ANR	1647837	Identifier	ctx		1647485	0					
ANR	1647838	Identifier	tex_ratio		1647485	1					
ANR	1647839	ExpressionStatement	"ctx -> slice_count = av_clip ( avctx -> thread_count , 1 , avctx -> coded_height / TEXTURE_BLOCK_H )"	117:8:2058:2183	1647485	1	True				
ANR	1647840	AssignmentExpression	"ctx -> slice_count = av_clip ( avctx -> thread_count , 1 , avctx -> coded_height / TEXTURE_BLOCK_H )"		1647485	0		=			
ANR	1647841	PtrMemberAccess	ctx -> slice_count		1647485	0					
ANR	1647842	Identifier	ctx		1647485	0					
ANR	1647843	Identifier	slice_count		1647485	1					
ANR	1647844	CallExpression	"av_clip ( avctx -> thread_count , 1 , avctx -> coded_height / TEXTURE_BLOCK_H )"		1647485	1					
ANR	1647845	Callee	av_clip		1647485	0					
ANR	1647846	Identifier	av_clip		1647485	0					
ANR	1647847	ArgumentList	avctx -> thread_count		1647485	1					
ANR	1647848	Argument	avctx -> thread_count		1647485	0					
ANR	1647849	PtrMemberAccess	avctx -> thread_count		1647485	0					
ANR	1647850	Identifier	avctx		1647485	0					
ANR	1647851	Identifier	thread_count		1647485	1					
ANR	1647852	Argument	1		1647485	1					
ANR	1647853	PrimaryExpression	1		1647485	0					
ANR	1647854	Argument	avctx -> coded_height / TEXTURE_BLOCK_H		1647485	2					
ANR	1647855	MultiplicativeExpression	avctx -> coded_height / TEXTURE_BLOCK_H		1647485	0		/			
ANR	1647856	PtrMemberAccess	avctx -> coded_height		1647485	0					
ANR	1647857	Identifier	avctx		1647485	0					
ANR	1647858	Identifier	coded_height		1647485	1					
ANR	1647859	Identifier	TEXTURE_BLOCK_H		1647485	1					
ANR	1647860	IfStatement	if ( bytestream2_get_bytes_left ( gbc ) < size )		1647485	2					
ANR	1647861	Condition	bytestream2_get_bytes_left ( gbc ) < size	123:12:2200:2237	1647485	0	True				
ANR	1647862	RelationalExpression	bytestream2_get_bytes_left ( gbc ) < size		1647485	0		<			
ANR	1647863	CallExpression	bytestream2_get_bytes_left ( gbc )		1647485	0					
ANR	1647864	Callee	bytestream2_get_bytes_left		1647485	0					
ANR	1647865	Identifier	bytestream2_get_bytes_left		1647485	0					
ANR	1647866	ArgumentList	gbc		1647485	1					
ANR	1647867	Argument	gbc		1647485	0					
ANR	1647868	Identifier	gbc		1647485	0					
ANR	1647869	Identifier	size		1647485	1					
ANR	1647870	CompoundStatement		119:52:2125:2125	1647485	1					
ANR	1647871	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Compressed Buffer is too small (%d < %d).\\n"" , bytestream2_get_bytes_left ( gbc ) , size )"	125:12:2255:2408	1647485	0	True				
ANR	1647872	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Compressed Buffer is too small (%d < %d).\\n"" , bytestream2_get_bytes_left ( gbc ) , size )"		1647485	0					
ANR	1647873	Callee	av_log		1647485	0					
ANR	1647874	Identifier	av_log		1647485	0					
ANR	1647875	ArgumentList	avctx		1647485	1					
ANR	1647876	Argument	avctx		1647485	0					
ANR	1647877	Identifier	avctx		1647485	0					
ANR	1647878	Argument	AV_LOG_ERROR		1647485	1					
ANR	1647879	Identifier	AV_LOG_ERROR		1647485	0					
ANR	1647880	Argument	"""Compressed Buffer is too small (%d < %d).\\n"""		1647485	2					
ANR	1647881	PrimaryExpression	"""Compressed Buffer is too small (%d < %d).\\n"""		1647485	0					
ANR	1647882	Argument	bytestream2_get_bytes_left ( gbc )		1647485	3					
ANR	1647883	CallExpression	bytestream2_get_bytes_left ( gbc )		1647485	0					
ANR	1647884	Callee	bytestream2_get_bytes_left		1647485	0					
ANR	1647885	Identifier	bytestream2_get_bytes_left		1647485	0					
ANR	1647886	ArgumentList	gbc		1647485	1					
ANR	1647887	Argument	gbc		1647485	0					
ANR	1647888	Identifier	gbc		1647485	0					
ANR	1647889	Argument	size		1647485	4					
ANR	1647890	Identifier	size		1647485	0					
ANR	1647891	ReturnStatement	return AVERROR_INVALIDDATA ;	131:12:2423:2449	1647485	1	True				
ANR	1647892	Identifier	AVERROR_INVALIDDATA		1647485	0					
ANR	1647893	ExpressionStatement	ctx -> tex_data = gbc -> buffer	139:8:2554:2581	1647485	3	True				
ANR	1647894	AssignmentExpression	ctx -> tex_data = gbc -> buffer		1647485	0		=			
ANR	1647895	PtrMemberAccess	ctx -> tex_data		1647485	0					
ANR	1647896	Identifier	ctx		1647485	0					
ANR	1647897	Identifier	tex_data		1647485	1					
ANR	1647898	PtrMemberAccess	gbc -> buffer		1647485	1					
ANR	1647899	Identifier	gbc		1647485	0					
ANR	1647900	Identifier	buffer		1647485	1					
ANR	1647901	ExpressionStatement	"avctx -> execute2 ( avctx , decompress_texture_thread , frame , NULL , ctx -> slice_count )"	141:8:2592:2672	1647485	4	True				
ANR	1647902	CallExpression	"avctx -> execute2 ( avctx , decompress_texture_thread , frame , NULL , ctx -> slice_count )"		1647485	0					
ANR	1647903	Callee	avctx -> execute2		1647485	0					
ANR	1647904	PtrMemberAccess	avctx -> execute2		1647485	0					
ANR	1647905	Identifier	avctx		1647485	0					
ANR	1647906	Identifier	execute2		1647485	1					
ANR	1647907	ArgumentList	avctx		1647485	1					
ANR	1647908	Argument	avctx		1647485	0					
ANR	1647909	Identifier	avctx		1647485	0					
ANR	1647910	Argument	decompress_texture_thread		1647485	1					
ANR	1647911	Identifier	decompress_texture_thread		1647485	0					
ANR	1647912	Argument	frame		1647485	2					
ANR	1647913	Identifier	frame		1647485	0					
ANR	1647914	Argument	NULL		1647485	3					
ANR	1647915	Identifier	NULL		1647485	0					
ANR	1647916	Argument	ctx -> slice_count		1647485	4					
ANR	1647917	PtrMemberAccess	ctx -> slice_count		1647485	0					
ANR	1647918	Identifier	ctx		1647485	0					
ANR	1647919	Identifier	slice_count		1647485	1					
ANR	1647920	ElseStatement	else		1647485	0					
ANR	1647921	IfStatement	if ( ! ctx -> paletted && ctx -> bpp == 4 && avctx -> pix_fmt == AV_PIX_FMT_PAL8 )		1647485	0					
ANR	1647922	Condition	! ctx -> paletted && ctx -> bpp == 4 && avctx -> pix_fmt == AV_PIX_FMT_PAL8	143:15:2690:2757	1647485	0	True				
ANR	1647923	AndExpression	! ctx -> paletted && ctx -> bpp == 4 && avctx -> pix_fmt == AV_PIX_FMT_PAL8		1647485	0		&&			
ANR	1647924	UnaryOperationExpression	! ctx -> paletted		1647485	0					
ANR	1647925	UnaryOperator	!		1647485	0					
ANR	1647926	PtrMemberAccess	ctx -> paletted		1647485	1					
ANR	1647927	Identifier	ctx		1647485	0					
ANR	1647928	Identifier	paletted		1647485	1					
ANR	1647929	AndExpression	ctx -> bpp == 4 && avctx -> pix_fmt == AV_PIX_FMT_PAL8		1647485	1		&&			
ANR	1647930	EqualityExpression	ctx -> bpp == 4		1647485	0		==			
ANR	1647931	PtrMemberAccess	ctx -> bpp		1647485	0					
ANR	1647932	Identifier	ctx		1647485	0					
ANR	1647933	Identifier	bpp		1647485	1					
ANR	1647934	PrimaryExpression	4		1647485	1					
ANR	1647935	EqualityExpression	avctx -> pix_fmt == AV_PIX_FMT_PAL8		1647485	1		==			
ANR	1647936	PtrMemberAccess	avctx -> pix_fmt		1647485	0					
ANR	1647937	Identifier	avctx		1647485	0					
ANR	1647938	Identifier	pix_fmt		1647485	1					
ANR	1647939	Identifier	AV_PIX_FMT_PAL8		1647485	1					
ANR	1647940	CompoundStatement		143:8:2696:2707	1647485	1					
ANR	1647941	IdentifierDeclStatement	uint8_t * dst = frame -> data [ 0 ] ;	145:8:2771:2800	1647485	0	True				
ANR	1647942	IdentifierDecl	* dst = frame -> data [ 0 ]		1647485	0					
ANR	1647943	IdentifierDeclType	uint8_t *		1647485	0					
ANR	1647944	Identifier	dst		1647485	1					
ANR	1647945	AssignmentExpression	* dst = frame -> data [ 0 ]		1647485	2		=			
ANR	1647946	Identifier	dst		1647485	0					
ANR	1647947	ArrayIndexing	frame -> data [ 0 ]		1647485	1					
ANR	1647948	PtrMemberAccess	frame -> data		1647485	0					
ANR	1647949	Identifier	frame		1647485	0					
ANR	1647950	Identifier	data		1647485	1					
ANR	1647951	PrimaryExpression	0		1647485	1					
ANR	1647952	IdentifierDeclStatement	"int x , y , i ;"	147:8:2811:2822	1647485	1	True				
ANR	1647953	IdentifierDecl	x		1647485	0					
ANR	1647954	IdentifierDeclType	int		1647485	0					
ANR	1647955	Identifier	x		1647485	1					
ANR	1647956	IdentifierDecl	y		1647485	1					
ANR	1647957	IdentifierDeclType	int		1647485	0					
ANR	1647958	Identifier	y		1647485	1					
ANR	1647959	IdentifierDecl	i		1647485	2					
ANR	1647960	IdentifierDeclType	int		1647485	0					
ANR	1647961	Identifier	i		1647485	1					
ANR	1647962	ExpressionStatement	"bytestream2_get_buffer ( gbc , frame -> data [ 1 ] , 16 * 4 )"	153:8:2905:2956	1647485	2	True				
ANR	1647963	CallExpression	"bytestream2_get_buffer ( gbc , frame -> data [ 1 ] , 16 * 4 )"		1647485	0					
ANR	1647964	Callee	bytestream2_get_buffer		1647485	0					
ANR	1647965	Identifier	bytestream2_get_buffer		1647485	0					
ANR	1647966	ArgumentList	gbc		1647485	1					
ANR	1647967	Argument	gbc		1647485	0					
ANR	1647968	Identifier	gbc		1647485	0					
ANR	1647969	Argument	frame -> data [ 1 ]		1647485	1					
ANR	1647970	ArrayIndexing	frame -> data [ 1 ]		1647485	0					
ANR	1647971	PtrMemberAccess	frame -> data		1647485	0					
ANR	1647972	Identifier	frame		1647485	0					
ANR	1647973	Identifier	data		1647485	1					
ANR	1647974	PrimaryExpression	1		1647485	1					
ANR	1647975	Argument	16 * 4		1647485	2					
ANR	1647976	MultiplicativeExpression	16 * 4		1647485	0		*			
ANR	1647977	PrimaryExpression	16		1647485	0					
ANR	1647978	PrimaryExpression	4		1647485	1					
ANR	1647979	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		1647485	3					
ANR	1647980	ForInit	i = 0 ;	155:13:2972:2977	1647485	0	True				
ANR	1647981	AssignmentExpression	i = 0		1647485	0		=			
ANR	1647982	Identifier	i		1647485	0					
ANR	1647983	PrimaryExpression	0		1647485	1					
ANR	1647984	Condition	i < 16	155:20:2979:2984	1647485	1	True				
ANR	1647985	RelationalExpression	i < 16		1647485	0		<			
ANR	1647986	Identifier	i		1647485	0					
ANR	1647987	PrimaryExpression	16		1647485	1					
ANR	1647988	PostIncDecOperationExpression	i ++	155:28:2987:2989	1647485	2	True				
ANR	1647989	Identifier	i		1647485	0					
ANR	1647990	IncDec	++		1647485	1					
ANR	1647991	CompoundStatement		151:33:2877:2877	1647485	3					
ANR	1647992	ExpressionStatement	"AV_WN32 ( frame -> data [ 1 ] + i * 4 , ( frame -> data [ 1 ] [ 2 + i * 4 ] << 0 ) + ( frame -> data [ 1 ] [ 1 + i * 4 ] << 8 ) + ( frame -> data [ 1 ] [ 0 + i * 4 ] << 16 ) + ( frame -> data [ 1 ] [ 3 + i * 4 ] << 24 ) )"	157:12:3007:3248	1647485	0	True				
ANR	1647993	CallExpression	"AV_WN32 ( frame -> data [ 1 ] + i * 4 , ( frame -> data [ 1 ] [ 2 + i * 4 ] << 0 ) + ( frame -> data [ 1 ] [ 1 + i * 4 ] << 8 ) + ( frame -> data [ 1 ] [ 0 + i * 4 ] << 16 ) + ( frame -> data [ 1 ] [ 3 + i * 4 ] << 24 ) )"		1647485	0					
ANR	1647994	Callee	AV_WN32		1647485	0					
ANR	1647995	Identifier	AV_WN32		1647485	0					
ANR	1647996	ArgumentList	frame -> data [ 1 ] + i * 4		1647485	1					
ANR	1647997	Argument	frame -> data [ 1 ] + i * 4		1647485	0					
ANR	1647998	AdditiveExpression	frame -> data [ 1 ] + i * 4		1647485	0		+			
ANR	1647999	ArrayIndexing	frame -> data [ 1 ]		1647485	0					
ANR	1648000	PtrMemberAccess	frame -> data		1647485	0					
ANR	1648001	Identifier	frame		1647485	0					
ANR	1648002	Identifier	data		1647485	1					
ANR	1648003	PrimaryExpression	1		1647485	1					
ANR	1648004	MultiplicativeExpression	i * 4		1647485	1		*			
ANR	1648005	Identifier	i		1647485	0					
ANR	1648006	PrimaryExpression	4		1647485	1					
ANR	1648007	Argument	( frame -> data [ 1 ] [ 2 + i * 4 ] << 0 ) + ( frame -> data [ 1 ] [ 1 + i * 4 ] << 8 ) + ( frame -> data [ 1 ] [ 0 + i * 4 ] << 16 ) + ( frame -> data [ 1 ] [ 3 + i * 4 ] << 24 )		1647485	1					
ANR	1648008	AdditiveExpression	( frame -> data [ 1 ] [ 2 + i * 4 ] << 0 ) + ( frame -> data [ 1 ] [ 1 + i * 4 ] << 8 ) + ( frame -> data [ 1 ] [ 0 + i * 4 ] << 16 ) + ( frame -> data [ 1 ] [ 3 + i * 4 ] << 24 )		1647485	0		+			
ANR	1648009	ShiftExpression	frame -> data [ 1 ] [ 2 + i * 4 ] << 0		1647485	0		<<			
ANR	1648010	ArrayIndexing	frame -> data [ 1 ] [ 2 + i * 4 ]		1647485	0					
ANR	1648011	ArrayIndexing	frame -> data [ 1 ]		1647485	0					
ANR	1648012	PtrMemberAccess	frame -> data		1647485	0					
ANR	1648013	Identifier	frame		1647485	0					
ANR	1648014	Identifier	data		1647485	1					
ANR	1648015	PrimaryExpression	1		1647485	1					
ANR	1648016	AdditiveExpression	2 + i * 4		1647485	1		+			
ANR	1648017	PrimaryExpression	2		1647485	0					
ANR	1648018	MultiplicativeExpression	i * 4		1647485	1		*			
ANR	1648019	Identifier	i		1647485	0					
ANR	1648020	PrimaryExpression	4		1647485	1					
ANR	1648021	PrimaryExpression	0		1647485	1					
ANR	1648022	AdditiveExpression	( frame -> data [ 1 ] [ 1 + i * 4 ] << 8 ) + ( frame -> data [ 1 ] [ 0 + i * 4 ] << 16 ) + ( frame -> data [ 1 ] [ 3 + i * 4 ] << 24 )		1647485	1		+			
ANR	1648023	ShiftExpression	frame -> data [ 1 ] [ 1 + i * 4 ] << 8		1647485	0		<<			
ANR	1648024	ArrayIndexing	frame -> data [ 1 ] [ 1 + i * 4 ]		1647485	0					
ANR	1648025	ArrayIndexing	frame -> data [ 1 ]		1647485	0					
ANR	1648026	PtrMemberAccess	frame -> data		1647485	0					
ANR	1648027	Identifier	frame		1647485	0					
ANR	1648028	Identifier	data		1647485	1					
ANR	1648029	PrimaryExpression	1		1647485	1					
ANR	1648030	AdditiveExpression	1 + i * 4		1647485	1		+			
ANR	1648031	PrimaryExpression	1		1647485	0					
ANR	1648032	MultiplicativeExpression	i * 4		1647485	1		*			
ANR	1648033	Identifier	i		1647485	0					
ANR	1648034	PrimaryExpression	4		1647485	1					
ANR	1648035	PrimaryExpression	8		1647485	1					
ANR	1648036	AdditiveExpression	( frame -> data [ 1 ] [ 0 + i * 4 ] << 16 ) + ( frame -> data [ 1 ] [ 3 + i * 4 ] << 24 )		1647485	1		+			
ANR	1648037	ShiftExpression	frame -> data [ 1 ] [ 0 + i * 4 ] << 16		1647485	0		<<			
ANR	1648038	ArrayIndexing	frame -> data [ 1 ] [ 0 + i * 4 ]		1647485	0					
ANR	1648039	ArrayIndexing	frame -> data [ 1 ]		1647485	0					
ANR	1648040	PtrMemberAccess	frame -> data		1647485	0					
ANR	1648041	Identifier	frame		1647485	0					
ANR	1648042	Identifier	data		1647485	1					
ANR	1648043	PrimaryExpression	1		1647485	1					
ANR	1648044	AdditiveExpression	0 + i * 4		1647485	1		+			
ANR	1648045	PrimaryExpression	0		1647485	0					
ANR	1648046	MultiplicativeExpression	i * 4		1647485	1		*			
ANR	1648047	Identifier	i		1647485	0					
ANR	1648048	PrimaryExpression	4		1647485	1					
ANR	1648049	PrimaryExpression	16		1647485	1					
ANR	1648050	ShiftExpression	frame -> data [ 1 ] [ 3 + i * 4 ] << 24		1647485	1		<<			
ANR	1648051	ArrayIndexing	frame -> data [ 1 ] [ 3 + i * 4 ]		1647485	0					
ANR	1648052	ArrayIndexing	frame -> data [ 1 ]		1647485	0					
ANR	1648053	PtrMemberAccess	frame -> data		1647485	0					
ANR	1648054	Identifier	frame		1647485	0					
ANR	1648055	Identifier	data		1647485	1					
ANR	1648056	PrimaryExpression	1		1647485	1					
ANR	1648057	AdditiveExpression	3 + i * 4		1647485	1		+			
ANR	1648058	PrimaryExpression	3		1647485	0					
ANR	1648059	MultiplicativeExpression	i * 4		1647485	1		*			
ANR	1648060	Identifier	i		1647485	0					
ANR	1648061	PrimaryExpression	4		1647485	1					
ANR	1648062	PrimaryExpression	24		1647485	1					
ANR	1648063	ExpressionStatement	frame -> palette_has_changed = 1	171:8:3270:3300	1647485	4	True				
ANR	1648064	AssignmentExpression	frame -> palette_has_changed = 1		1647485	0		=			
ANR	1648065	PtrMemberAccess	frame -> palette_has_changed		1647485	0					
ANR	1648066	Identifier	frame		1647485	0					
ANR	1648067	Identifier	palette_has_changed		1647485	1					
ANR	1648068	PrimaryExpression	1		1647485	1					
ANR	1648069	IfStatement	if ( bytestream2_get_bytes_left ( gbc ) < frame -> height * frame -> width / 2 )		1647485	5					
ANR	1648070	Condition	bytestream2_get_bytes_left ( gbc ) < frame -> height * frame -> width / 2	175:12:3317:3382	1647485	0	True				
ANR	1648071	RelationalExpression	bytestream2_get_bytes_left ( gbc ) < frame -> height * frame -> width / 2		1647485	0		<			
ANR	1648072	CallExpression	bytestream2_get_bytes_left ( gbc )		1647485	0					
ANR	1648073	Callee	bytestream2_get_bytes_left		1647485	0					
ANR	1648074	Identifier	bytestream2_get_bytes_left		1647485	0					
ANR	1648075	ArgumentList	gbc		1647485	1					
ANR	1648076	Argument	gbc		1647485	0					
ANR	1648077	Identifier	gbc		1647485	0					
ANR	1648078	MultiplicativeExpression	frame -> height * frame -> width / 2		1647485	1		*			
ANR	1648079	PtrMemberAccess	frame -> height		1647485	0					
ANR	1648080	Identifier	frame		1647485	0					
ANR	1648081	Identifier	height		1647485	1					
ANR	1648082	MultiplicativeExpression	frame -> width / 2		1647485	1		/			
ANR	1648083	PtrMemberAccess	frame -> width		1647485	0					
ANR	1648084	Identifier	frame		1647485	0					
ANR	1648085	Identifier	width		1647485	1					
ANR	1648086	PrimaryExpression	2		1647485	1					
ANR	1648087	CompoundStatement		171:80:3270:3270	1647485	1					
ANR	1648088	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Buffer is too small (%d < %d).\\n"" , bytestream2_get_bytes_left ( gbc ) , frame -> height * frame -> width / 2 )"	177:12:3400:3550	1647485	0	True				
ANR	1648089	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Buffer is too small (%d < %d).\\n"" , bytestream2_get_bytes_left ( gbc ) , frame -> height * frame -> width / 2 )"		1647485	0					
ANR	1648090	Callee	av_log		1647485	0					
ANR	1648091	Identifier	av_log		1647485	0					
ANR	1648092	ArgumentList	avctx		1647485	1					
ANR	1648093	Argument	avctx		1647485	0					
ANR	1648094	Identifier	avctx		1647485	0					
ANR	1648095	Argument	AV_LOG_ERROR		1647485	1					
ANR	1648096	Identifier	AV_LOG_ERROR		1647485	0					
ANR	1648097	Argument	"""Buffer is too small (%d < %d).\\n"""		1647485	2					
ANR	1648098	PrimaryExpression	"""Buffer is too small (%d < %d).\\n"""		1647485	0					
ANR	1648099	Argument	bytestream2_get_bytes_left ( gbc )		1647485	3					
ANR	1648100	CallExpression	bytestream2_get_bytes_left ( gbc )		1647485	0					
ANR	1648101	Callee	bytestream2_get_bytes_left		1647485	0					
ANR	1648102	Identifier	bytestream2_get_bytes_left		1647485	0					
ANR	1648103	ArgumentList	gbc		1647485	1					
ANR	1648104	Argument	gbc		1647485	0					
ANR	1648105	Identifier	gbc		1647485	0					
ANR	1648106	Argument	frame -> height * frame -> width / 2		1647485	4					
ANR	1648107	MultiplicativeExpression	frame -> height * frame -> width / 2		1647485	0		*			
ANR	1648108	PtrMemberAccess	frame -> height		1647485	0					
ANR	1648109	Identifier	frame		1647485	0					
ANR	1648110	Identifier	height		1647485	1					
ANR	1648111	MultiplicativeExpression	frame -> width / 2		1647485	1		/			
ANR	1648112	PtrMemberAccess	frame -> width		1647485	0					
ANR	1648113	Identifier	frame		1647485	0					
ANR	1648114	Identifier	width		1647485	1					
ANR	1648115	PrimaryExpression	2		1647485	1					
ANR	1648116	ReturnStatement	return AVERROR_INVALIDDATA ;	181:12:3565:3591	1647485	1	True				
ANR	1648117	Identifier	AVERROR_INVALIDDATA		1647485	0					
ANR	1648118	ForStatement	for ( y = 0 ; y < frame -> height ; y ++ )		1647485	6					
ANR	1648119	ForInit	y = 0 ;	187:13:3620:3625	1647485	0	True				
ANR	1648120	AssignmentExpression	y = 0		1647485	0		=			
ANR	1648121	Identifier	y		1647485	0					
ANR	1648122	PrimaryExpression	0		1647485	1					
ANR	1648123	Condition	y < frame -> height	187:20:3627:3643	1647485	1	True				
ANR	1648124	RelationalExpression	y < frame -> height		1647485	0		<			
ANR	1648125	Identifier	y		1647485	0					
ANR	1648126	PtrMemberAccess	frame -> height		1647485	1					
ANR	1648127	Identifier	frame		1647485	0					
ANR	1648128	Identifier	height		1647485	1					
ANR	1648129	PostIncDecOperationExpression	y ++	187:39:3646:3648	1647485	2	True				
ANR	1648130	Identifier	y		1647485	0					
ANR	1648131	IncDec	++		1647485	1					
ANR	1648132	CompoundStatement		183:44:3536:3536	1647485	3					
ANR	1648133	ForStatement	for ( x = 0 ; x < frame -> width ; x += 2 )		1647485	0					
ANR	1648134	ForInit	x = 0 ;	189:17:3671:3676	1647485	0	True				
ANR	1648135	AssignmentExpression	x = 0		1647485	0		=			
ANR	1648136	Identifier	x		1647485	0					
ANR	1648137	PrimaryExpression	0		1647485	1					
ANR	1648138	Condition	x < frame -> width	189:24:3678:3693	1647485	1	True				
ANR	1648139	RelationalExpression	x < frame -> width		1647485	0		<			
ANR	1648140	Identifier	x		1647485	0					
ANR	1648141	PtrMemberAccess	frame -> width		1647485	1					
ANR	1648142	Identifier	frame		1647485	0					
ANR	1648143	Identifier	width		1647485	1					
ANR	1648144	AssignmentExpression	x += 2	189:42:3696:3701	1647485	2	True	+=			
ANR	1648145	Identifier	x		1647485	0					
ANR	1648146	PrimaryExpression	2		1647485	1					
ANR	1648147	CompoundStatement		187:16:3608:3647	1647485	3					
ANR	1648148	IdentifierDeclStatement	uint8_t val = bytestream2_get_byte ( gbc ) ;	191:16:3723:3762	1647485	0	True				
ANR	1648149	IdentifierDecl	val = bytestream2_get_byte ( gbc )		1647485	0					
ANR	1648150	IdentifierDeclType	uint8_t		1647485	0					
ANR	1648151	Identifier	val		1647485	1					
ANR	1648152	AssignmentExpression	val = bytestream2_get_byte ( gbc )		1647485	2		=			
ANR	1648153	Identifier	val		1647485	0					
ANR	1648154	CallExpression	bytestream2_get_byte ( gbc )		1647485	1					
ANR	1648155	Callee	bytestream2_get_byte		1647485	0					
ANR	1648156	Identifier	bytestream2_get_byte		1647485	0					
ANR	1648157	ArgumentList	gbc		1647485	1					
ANR	1648158	Argument	gbc		1647485	0					
ANR	1648159	Identifier	gbc		1647485	0					
ANR	1648160	ExpressionStatement	dst [ x ] = val & 0xF	193:16:3781:3803	1647485	1	True				
ANR	1648161	AssignmentExpression	dst [ x ] = val & 0xF		1647485	0		=			
ANR	1648162	ArrayIndexing	dst [ x ]		1647485	0					
ANR	1648163	Identifier	dst		1647485	0					
ANR	1648164	Identifier	x		1647485	1					
ANR	1648165	BitAndExpression	val & 0xF		1647485	1		&			
ANR	1648166	Identifier	val		1647485	0					
ANR	1648167	PrimaryExpression	0xF		1647485	1					
ANR	1648168	ExpressionStatement	dst [ x + 1 ] = val >> 4	195:16:3822:3843	1647485	2	True				
ANR	1648169	AssignmentExpression	dst [ x + 1 ] = val >> 4		1647485	0		=			
ANR	1648170	ArrayIndexing	dst [ x + 1 ]		1647485	0					
ANR	1648171	Identifier	dst		1647485	0					
ANR	1648172	AdditiveExpression	x + 1		1647485	1		+			
ANR	1648173	Identifier	x		1647485	0					
ANR	1648174	PrimaryExpression	1		1647485	1					
ANR	1648175	ShiftExpression	val >> 4		1647485	1		>>			
ANR	1648176	Identifier	val		1647485	0					
ANR	1648177	PrimaryExpression	4		1647485	1					
ANR	1648178	ExpressionStatement	dst += frame -> linesize [ 0 ]	199:12:3873:3898	1647485	1	True				
ANR	1648179	AssignmentExpression	dst += frame -> linesize [ 0 ]		1647485	0		+=			
ANR	1648180	Identifier	dst		1647485	0					
ANR	1648181	ArrayIndexing	frame -> linesize [ 0 ]		1647485	1					
ANR	1648182	PtrMemberAccess	frame -> linesize		1647485	0					
ANR	1648183	Identifier	frame		1647485	0					
ANR	1648184	Identifier	linesize		1647485	1					
ANR	1648185	PrimaryExpression	0		1647485	1					
ANR	1648186	ElseStatement	else		1647485	0					
ANR	1648187	CompoundStatement		201:8:3819:3888	1647485	0					
ANR	1648188	IdentifierDeclStatement	"int linesize = av_image_get_linesize ( avctx -> pix_fmt , frame -> width , 0 ) ;"	205:8:3934:4003	1647485	0	True				
ANR	1648189	IdentifierDecl	"linesize = av_image_get_linesize ( avctx -> pix_fmt , frame -> width , 0 )"		1647485	0					
ANR	1648190	IdentifierDeclType	int		1647485	0					
ANR	1648191	Identifier	linesize		1647485	1					
ANR	1648192	AssignmentExpression	"linesize = av_image_get_linesize ( avctx -> pix_fmt , frame -> width , 0 )"		1647485	2		=			
ANR	1648193	Identifier	linesize		1647485	0					
ANR	1648194	CallExpression	"av_image_get_linesize ( avctx -> pix_fmt , frame -> width , 0 )"		1647485	1					
ANR	1648195	Callee	av_image_get_linesize		1647485	0					
ANR	1648196	Identifier	av_image_get_linesize		1647485	0					
ANR	1648197	ArgumentList	avctx -> pix_fmt		1647485	1					
ANR	1648198	Argument	avctx -> pix_fmt		1647485	0					
ANR	1648199	PtrMemberAccess	avctx -> pix_fmt		1647485	0					
ANR	1648200	Identifier	avctx		1647485	0					
ANR	1648201	Identifier	pix_fmt		1647485	1					
ANR	1648202	Argument	frame -> width		1647485	1					
ANR	1648203	PtrMemberAccess	frame -> width		1647485	0					
ANR	1648204	Identifier	frame		1647485	0					
ANR	1648205	Identifier	width		1647485	1					
ANR	1648206	Argument	0		1647485	2					
ANR	1648207	PrimaryExpression	0		1647485	0					
ANR	1648208	IfStatement	if ( ctx -> paletted )		1647485	1					
ANR	1648209	Condition	ctx -> paletted	209:12:4020:4032	1647485	0	True				
ANR	1648210	PtrMemberAccess	ctx -> paletted		1647485	0					
ANR	1648211	Identifier	ctx		1647485	0					
ANR	1648212	Identifier	paletted		1647485	1					
ANR	1648213	CompoundStatement		207:12:3935:3940	1647485	1					
ANR	1648214	IdentifierDeclStatement	int i ;	211:12:4050:4055	1647485	0	True				
ANR	1648215	IdentifierDecl	i		1647485	0					
ANR	1648216	IdentifierDeclType	int		1647485	0					
ANR	1648217	Identifier	i		1647485	1					
ANR	1648218	ExpressionStatement	"bytestream2_get_buffer ( gbc , frame -> data [ 1 ] , 256 * 4 )"	215:12:4146:4198	1647485	1	True				
ANR	1648219	CallExpression	"bytestream2_get_buffer ( gbc , frame -> data [ 1 ] , 256 * 4 )"		1647485	0					
ANR	1648220	Callee	bytestream2_get_buffer		1647485	0					
ANR	1648221	Identifier	bytestream2_get_buffer		1647485	0					
ANR	1648222	ArgumentList	gbc		1647485	1					
ANR	1648223	Argument	gbc		1647485	0					
ANR	1648224	Identifier	gbc		1647485	0					
ANR	1648225	Argument	frame -> data [ 1 ]		1647485	1					
ANR	1648226	ArrayIndexing	frame -> data [ 1 ]		1647485	0					
ANR	1648227	PtrMemberAccess	frame -> data		1647485	0					
ANR	1648228	Identifier	frame		1647485	0					
ANR	1648229	Identifier	data		1647485	1					
ANR	1648230	PrimaryExpression	1		1647485	1					
ANR	1648231	Argument	256 * 4		1647485	2					
ANR	1648232	MultiplicativeExpression	256 * 4		1647485	0		*			
ANR	1648233	PrimaryExpression	256		1647485	0					
ANR	1648234	PrimaryExpression	4		1647485	1					
ANR	1648235	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		1647485	2					
ANR	1648236	ForInit	i = 0 ;	217:17:4218:4223	1647485	0	True				
ANR	1648237	AssignmentExpression	i = 0		1647485	0		=			
ANR	1648238	Identifier	i		1647485	0					
ANR	1648239	PrimaryExpression	0		1647485	1					
ANR	1648240	Condition	i < 256	217:24:4225:4231	1647485	1	True				
ANR	1648241	RelationalExpression	i < 256		1647485	0		<			
ANR	1648242	Identifier	i		1647485	0					
ANR	1648243	PrimaryExpression	256		1647485	1					
ANR	1648244	PostIncDecOperationExpression	i ++	217:33:4234:4236	1647485	2	True				
ANR	1648245	Identifier	i		1647485	0					
ANR	1648246	IncDec	++		1647485	1					
ANR	1648247	ExpressionStatement	"AV_WN32 ( frame -> data [ 1 ] + i * 4 , ( frame -> data [ 1 ] [ 2 + i * 4 ] << 0 ) + ( frame -> data [ 1 ] [ 1 + i * 4 ] << 8 ) + ( frame -> data [ 1 ] [ 0 + i * 4 ] << 16 ) + ( frame -> data [ 1 ] [ 3 + i * 4 ] << 24 ) )"	219:16:4256:4517	1647485	3	True				
ANR	1648248	CallExpression	"AV_WN32 ( frame -> data [ 1 ] + i * 4 , ( frame -> data [ 1 ] [ 2 + i * 4 ] << 0 ) + ( frame -> data [ 1 ] [ 1 + i * 4 ] << 8 ) + ( frame -> data [ 1 ] [ 0 + i * 4 ] << 16 ) + ( frame -> data [ 1 ] [ 3 + i * 4 ] << 24 ) )"		1647485	0					
ANR	1648249	Callee	AV_WN32		1647485	0					
ANR	1648250	Identifier	AV_WN32		1647485	0					
ANR	1648251	ArgumentList	frame -> data [ 1 ] + i * 4		1647485	1					
ANR	1648252	Argument	frame -> data [ 1 ] + i * 4		1647485	0					
ANR	1648253	AdditiveExpression	frame -> data [ 1 ] + i * 4		1647485	0		+			
ANR	1648254	ArrayIndexing	frame -> data [ 1 ]		1647485	0					
ANR	1648255	PtrMemberAccess	frame -> data		1647485	0					
ANR	1648256	Identifier	frame		1647485	0					
ANR	1648257	Identifier	data		1647485	1					
ANR	1648258	PrimaryExpression	1		1647485	1					
ANR	1648259	MultiplicativeExpression	i * 4		1647485	1		*			
ANR	1648260	Identifier	i		1647485	0					
ANR	1648261	PrimaryExpression	4		1647485	1					
ANR	1648262	Argument	( frame -> data [ 1 ] [ 2 + i * 4 ] << 0 ) + ( frame -> data [ 1 ] [ 1 + i * 4 ] << 8 ) + ( frame -> data [ 1 ] [ 0 + i * 4 ] << 16 ) + ( frame -> data [ 1 ] [ 3 + i * 4 ] << 24 )		1647485	1					
ANR	1648263	AdditiveExpression	( frame -> data [ 1 ] [ 2 + i * 4 ] << 0 ) + ( frame -> data [ 1 ] [ 1 + i * 4 ] << 8 ) + ( frame -> data [ 1 ] [ 0 + i * 4 ] << 16 ) + ( frame -> data [ 1 ] [ 3 + i * 4 ] << 24 )		1647485	0		+			
ANR	1648264	ShiftExpression	frame -> data [ 1 ] [ 2 + i * 4 ] << 0		1647485	0		<<			
ANR	1648265	ArrayIndexing	frame -> data [ 1 ] [ 2 + i * 4 ]		1647485	0					
ANR	1648266	ArrayIndexing	frame -> data [ 1 ]		1647485	0					
ANR	1648267	PtrMemberAccess	frame -> data		1647485	0					
ANR	1648268	Identifier	frame		1647485	0					
ANR	1648269	Identifier	data		1647485	1					
ANR	1648270	PrimaryExpression	1		1647485	1					
ANR	1648271	AdditiveExpression	2 + i * 4		1647485	1		+			
ANR	1648272	PrimaryExpression	2		1647485	0					
ANR	1648273	MultiplicativeExpression	i * 4		1647485	1		*			
ANR	1648274	Identifier	i		1647485	0					
ANR	1648275	PrimaryExpression	4		1647485	1					
ANR	1648276	PrimaryExpression	0		1647485	1					
ANR	1648277	AdditiveExpression	( frame -> data [ 1 ] [ 1 + i * 4 ] << 8 ) + ( frame -> data [ 1 ] [ 0 + i * 4 ] << 16 ) + ( frame -> data [ 1 ] [ 3 + i * 4 ] << 24 )		1647485	1		+			
ANR	1648278	ShiftExpression	frame -> data [ 1 ] [ 1 + i * 4 ] << 8		1647485	0		<<			
ANR	1648279	ArrayIndexing	frame -> data [ 1 ] [ 1 + i * 4 ]		1647485	0					
ANR	1648280	ArrayIndexing	frame -> data [ 1 ]		1647485	0					
ANR	1648281	PtrMemberAccess	frame -> data		1647485	0					
ANR	1648282	Identifier	frame		1647485	0					
ANR	1648283	Identifier	data		1647485	1					
ANR	1648284	PrimaryExpression	1		1647485	1					
ANR	1648285	AdditiveExpression	1 + i * 4		1647485	1		+			
ANR	1648286	PrimaryExpression	1		1647485	0					
ANR	1648287	MultiplicativeExpression	i * 4		1647485	1		*			
ANR	1648288	Identifier	i		1647485	0					
ANR	1648289	PrimaryExpression	4		1647485	1					
ANR	1648290	PrimaryExpression	8		1647485	1					
ANR	1648291	AdditiveExpression	( frame -> data [ 1 ] [ 0 + i * 4 ] << 16 ) + ( frame -> data [ 1 ] [ 3 + i * 4 ] << 24 )		1647485	1		+			
ANR	1648292	ShiftExpression	frame -> data [ 1 ] [ 0 + i * 4 ] << 16		1647485	0		<<			
ANR	1648293	ArrayIndexing	frame -> data [ 1 ] [ 0 + i * 4 ]		1647485	0					
ANR	1648294	ArrayIndexing	frame -> data [ 1 ]		1647485	0					
ANR	1648295	PtrMemberAccess	frame -> data		1647485	0					
ANR	1648296	Identifier	frame		1647485	0					
ANR	1648297	Identifier	data		1647485	1					
ANR	1648298	PrimaryExpression	1		1647485	1					
ANR	1648299	AdditiveExpression	0 + i * 4		1647485	1		+			
ANR	1648300	PrimaryExpression	0		1647485	0					
ANR	1648301	MultiplicativeExpression	i * 4		1647485	1		*			
ANR	1648302	Identifier	i		1647485	0					
ANR	1648303	PrimaryExpression	4		1647485	1					
ANR	1648304	PrimaryExpression	16		1647485	1					
ANR	1648305	ShiftExpression	frame -> data [ 1 ] [ 3 + i * 4 ] << 24		1647485	1		<<			
ANR	1648306	ArrayIndexing	frame -> data [ 1 ] [ 3 + i * 4 ]		1647485	0					
ANR	1648307	ArrayIndexing	frame -> data [ 1 ]		1647485	0					
ANR	1648308	PtrMemberAccess	frame -> data		1647485	0					
ANR	1648309	Identifier	frame		1647485	0					
ANR	1648310	Identifier	data		1647485	1					
ANR	1648311	PrimaryExpression	1		1647485	1					
ANR	1648312	AdditiveExpression	3 + i * 4		1647485	1		+			
ANR	1648313	PrimaryExpression	3		1647485	0					
ANR	1648314	MultiplicativeExpression	i * 4		1647485	1		*			
ANR	1648315	Identifier	i		1647485	0					
ANR	1648316	PrimaryExpression	4		1647485	1					
ANR	1648317	PrimaryExpression	24		1647485	1					
ANR	1648318	ExpressionStatement	frame -> palette_has_changed = 1	233:12:4534:4564	1647485	3	True				
ANR	1648319	AssignmentExpression	frame -> palette_has_changed = 1		1647485	0		=			
ANR	1648320	PtrMemberAccess	frame -> palette_has_changed		1647485	0					
ANR	1648321	Identifier	frame		1647485	0					
ANR	1648322	Identifier	palette_has_changed		1647485	1					
ANR	1648323	PrimaryExpression	1		1647485	1					
ANR	1648324	IfStatement	if ( bytestream2_get_bytes_left ( gbc ) < frame -> height * linesize )		1647485	2					
ANR	1648325	Condition	bytestream2_get_bytes_left ( gbc ) < frame -> height * linesize	239:12:4592:4649	1647485	0	True				
ANR	1648326	RelationalExpression	bytestream2_get_bytes_left ( gbc ) < frame -> height * linesize		1647485	0		<			
ANR	1648327	CallExpression	bytestream2_get_bytes_left ( gbc )		1647485	0					
ANR	1648328	Callee	bytestream2_get_bytes_left		1647485	0					
ANR	1648329	Identifier	bytestream2_get_bytes_left		1647485	0					
ANR	1648330	ArgumentList	gbc		1647485	1					
ANR	1648331	Argument	gbc		1647485	0					
ANR	1648332	Identifier	gbc		1647485	0					
ANR	1648333	MultiplicativeExpression	frame -> height * linesize		1647485	1		*			
ANR	1648334	PtrMemberAccess	frame -> height		1647485	0					
ANR	1648335	Identifier	frame		1647485	0					
ANR	1648336	Identifier	height		1647485	1					
ANR	1648337	Identifier	linesize		1647485	1					
ANR	1648338	CompoundStatement		235:72:4537:4537	1647485	1					
ANR	1648339	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Buffer is too small (%d < %d).\\n"" , bytestream2_get_bytes_left ( gbc ) , frame -> height * linesize )"	241:12:4667:4809	1647485	0	True				
ANR	1648340	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Buffer is too small (%d < %d).\\n"" , bytestream2_get_bytes_left ( gbc ) , frame -> height * linesize )"		1647485	0					
ANR	1648341	Callee	av_log		1647485	0					
ANR	1648342	Identifier	av_log		1647485	0					
ANR	1648343	ArgumentList	avctx		1647485	1					
ANR	1648344	Argument	avctx		1647485	0					
ANR	1648345	Identifier	avctx		1647485	0					
ANR	1648346	Argument	AV_LOG_ERROR		1647485	1					
ANR	1648347	Identifier	AV_LOG_ERROR		1647485	0					
ANR	1648348	Argument	"""Buffer is too small (%d < %d).\\n"""		1647485	2					
ANR	1648349	PrimaryExpression	"""Buffer is too small (%d < %d).\\n"""		1647485	0					
ANR	1648350	Argument	bytestream2_get_bytes_left ( gbc )		1647485	3					
ANR	1648351	CallExpression	bytestream2_get_bytes_left ( gbc )		1647485	0					
ANR	1648352	Callee	bytestream2_get_bytes_left		1647485	0					
ANR	1648353	Identifier	bytestream2_get_bytes_left		1647485	0					
ANR	1648354	ArgumentList	gbc		1647485	1					
ANR	1648355	Argument	gbc		1647485	0					
ANR	1648356	Identifier	gbc		1647485	0					
ANR	1648357	Argument	frame -> height * linesize		1647485	4					
ANR	1648358	MultiplicativeExpression	frame -> height * linesize		1647485	0		*			
ANR	1648359	PtrMemberAccess	frame -> height		1647485	0					
ANR	1648360	Identifier	frame		1647485	0					
ANR	1648361	Identifier	height		1647485	1					
ANR	1648362	Identifier	linesize		1647485	1					
ANR	1648363	ReturnStatement	return AVERROR_INVALIDDATA ;	245:12:4824:4850	1647485	1	True				
ANR	1648364	Identifier	AVERROR_INVALIDDATA		1647485	0					
ANR	1648365	ExpressionStatement	"av_image_copy_plane ( frame -> data [ 0 ] , frame -> linesize [ 0 ] , gbc -> buffer , linesize , linesize , frame -> height )"	251:8:4874:5035	1647485	3	True				
ANR	1648366	CallExpression	"av_image_copy_plane ( frame -> data [ 0 ] , frame -> linesize [ 0 ] , gbc -> buffer , linesize , linesize , frame -> height )"		1647485	0					
ANR	1648367	Callee	av_image_copy_plane		1647485	0					
ANR	1648368	Identifier	av_image_copy_plane		1647485	0					
ANR	1648369	ArgumentList	frame -> data [ 0 ]		1647485	1					
ANR	1648370	Argument	frame -> data [ 0 ]		1647485	0					
ANR	1648371	ArrayIndexing	frame -> data [ 0 ]		1647485	0					
ANR	1648372	PtrMemberAccess	frame -> data		1647485	0					
ANR	1648373	Identifier	frame		1647485	0					
ANR	1648374	Identifier	data		1647485	1					
ANR	1648375	PrimaryExpression	0		1647485	1					
ANR	1648376	Argument	frame -> linesize [ 0 ]		1647485	1					
ANR	1648377	ArrayIndexing	frame -> linesize [ 0 ]		1647485	0					
ANR	1648378	PtrMemberAccess	frame -> linesize		1647485	0					
ANR	1648379	Identifier	frame		1647485	0					
ANR	1648380	Identifier	linesize		1647485	1					
ANR	1648381	PrimaryExpression	0		1647485	1					
ANR	1648382	Argument	gbc -> buffer		1647485	2					
ANR	1648383	PtrMemberAccess	gbc -> buffer		1647485	0					
ANR	1648384	Identifier	gbc		1647485	0					
ANR	1648385	Identifier	buffer		1647485	1					
ANR	1648386	Argument	linesize		1647485	3					
ANR	1648387	Identifier	linesize		1647485	0					
ANR	1648388	Argument	linesize		1647485	4					
ANR	1648389	Identifier	linesize		1647485	0					
ANR	1648390	Argument	frame -> height		1647485	5					
ANR	1648391	PtrMemberAccess	frame -> height		1647485	0					
ANR	1648392	Identifier	frame		1647485	0					
ANR	1648393	Identifier	height		1647485	1					
ANR	1648394	IfStatement	if ( ctx -> postproc != DDS_NONE )		1647485	25					
ANR	1648395	Condition	ctx -> postproc != DDS_NONE	263:8:5106:5130	1647485	0	True				
ANR	1648396	EqualityExpression	ctx -> postproc != DDS_NONE		1647485	0		!=			
ANR	1648397	PtrMemberAccess	ctx -> postproc		1647485	0					
ANR	1648398	Identifier	ctx		1647485	0					
ANR	1648399	Identifier	postproc		1647485	1					
ANR	1648400	Identifier	DDS_NONE		1647485	1					
ANR	1648401	ExpressionStatement	"run_postproc ( avctx , frame )"	265:8:5142:5168	1647485	1	True				
ANR	1648402	CallExpression	"run_postproc ( avctx , frame )"		1647485	0					
ANR	1648403	Callee	run_postproc		1647485	0					
ANR	1648404	Identifier	run_postproc		1647485	0					
ANR	1648405	ArgumentList	avctx		1647485	1					
ANR	1648406	Argument	avctx		1647485	0					
ANR	1648407	Identifier	avctx		1647485	0					
ANR	1648408	Argument	frame		1647485	1					
ANR	1648409	Identifier	frame		1647485	0					
ANR	1648410	ExpressionStatement	frame -> pict_type = AV_PICTURE_TYPE_I	271:4:5217:5253	1647485	26	True				
ANR	1648411	AssignmentExpression	frame -> pict_type = AV_PICTURE_TYPE_I		1647485	0		=			
ANR	1648412	PtrMemberAccess	frame -> pict_type		1647485	0					
ANR	1648413	Identifier	frame		1647485	0					
ANR	1648414	Identifier	pict_type		1647485	1					
ANR	1648415	Identifier	AV_PICTURE_TYPE_I		1647485	1					
ANR	1648416	ExpressionStatement	frame -> key_frame = 1	273:4:5260:5280	1647485	27	True				
ANR	1648417	AssignmentExpression	frame -> key_frame = 1		1647485	0		=			
ANR	1648418	PtrMemberAccess	frame -> key_frame		1647485	0					
ANR	1648419	Identifier	frame		1647485	0					
ANR	1648420	Identifier	key_frame		1647485	1					
ANR	1648421	PrimaryExpression	1		1647485	1					
ANR	1648422	ExpressionStatement	* got_frame = 1	275:4:5287:5301	1647485	28	True				
ANR	1648423	AssignmentExpression	* got_frame = 1		1647485	0		=			
ANR	1648424	UnaryOperationExpression	* got_frame		1647485	0					
ANR	1648425	UnaryOperator	*		1647485	0					
ANR	1648426	Identifier	got_frame		1647485	1					
ANR	1648427	PrimaryExpression	1		1647485	1					
ANR	1648428	ReturnStatement	return avpkt -> size ;	279:4:5310:5328	1647485	29	True				
ANR	1648429	PtrMemberAccess	avpkt -> size		1647485	0					
ANR	1648430	Identifier	avpkt		1647485	0					
ANR	1648431	Identifier	size		1647485	1					
ANR	1648432	ReturnType	static int		1647485	1					
ANR	1648433	Identifier	dds_decode		1647485	2					
ANR	1648434	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt"		1647485	3					
ANR	1648435	Parameter	AVCodecContext * avctx	1:22:22:42	1647485	0	True				
ANR	1648436	ParameterType	AVCodecContext *		1647485	0					
ANR	1648437	Identifier	avctx		1647485	1					
ANR	1648438	Parameter	void * data	1:45:45:54	1647485	1	True				
ANR	1648439	ParameterType	void *		1647485	0					
ANR	1648440	Identifier	data		1647485	1					
ANR	1648441	Parameter	int * got_frame	3:22:80:93	1647485	2	True				
ANR	1648442	ParameterType	int *		1647485	0					
ANR	1648443	Identifier	got_frame		1647485	1					
ANR	1648444	Parameter	AVPacket * avpkt	3:38:96:110	1647485	3	True				
ANR	1648445	ParameterType	AVPacket *		1647485	0					
ANR	1648446	Identifier	avpkt		1647485	1					
ANR	1648447	CFGEntryNode	ENTRY		1647485		True				
ANR	1648448	CFGExitNode	EXIT		1647485		True				
ANR	1648449	Symbol	* x		1647485						
ANR	1648450	Symbol	data		1647485						
ANR	1648451	Symbol	decompress_texture_thread		1647485						
ANR	1648452	Symbol	AV_PIX_FMT_PAL8		1647485						
ANR	1648453	Symbol	frame -> pict_type		1647485						
ANR	1648454	Symbol	avpkt		1647485						
ANR	1648455	Symbol	ctx -> paletted		1647485						
ANR	1648456	Symbol	av_image_get_linesize		1647485						
ANR	1648457	Symbol	ctx -> bpp		1647485						
ANR	1648458	Symbol	* dst		1647485						
ANR	1648459	Symbol	* * frame		1647485						
ANR	1648460	Symbol	linesize		1647485						
ANR	1648461	Symbol	ff_get_buffer		1647485						
ANR	1648462	Symbol	got_frame		1647485						
ANR	1648463	Symbol	av_clip		1647485						
ANR	1648464	Symbol	frame -> data		1647485						
ANR	1648465	Symbol	ret		1647485						
ANR	1648466	Symbol	avctx -> coded_width		1647485						
ANR	1648467	Symbol	val		1647485						
ANR	1648468	Symbol	NULL		1647485						
ANR	1648469	Symbol	ctx -> postproc		1647485						
ANR	1648470	Symbol	TEXTURE_BLOCK_H		1647485						
ANR	1648471	Symbol	* got_frame		1647485						
ANR	1648472	Symbol	ctx		1647485						
ANR	1648473	Symbol	avctx -> coded_height		1647485						
ANR	1648474	Symbol	* gbc		1647485						
ANR	1648475	Symbol	AV_LOG_VERBOSE		1647485						
ANR	1648476	Symbol	* avctx		1647485						
ANR	1648477	Symbol	size		1647485						
ANR	1648478	Symbol	& ctx -> gbc		1647485						
ANR	1648479	Symbol	FFALIGN		1647485						
ANR	1648480	Symbol	avpkt -> data		1647485						
ANR	1648481	Symbol	avctx -> pix_fmt		1647485						
ANR	1648482	Symbol	& ctx -> texdsp		1647485						
ANR	1648483	Symbol	frame		1647485						
ANR	1648484	Symbol	* frame -> data		1647485						
ANR	1648485	Symbol	dst		1647485						
ANR	1648486	Symbol	* frame		1647485						
ANR	1648487	Symbol	avctx -> width		1647485						
ANR	1648488	Symbol	ctx -> tex_data		1647485						
ANR	1648489	Symbol	parse_pixel_format		1647485						
ANR	1648490	Symbol	* * * frame		1647485						
ANR	1648491	Symbol	ctx -> tex_ratio		1647485						
ANR	1648492	Symbol	avctx -> height		1647485						
ANR	1648493	Symbol	TEXTURE_BLOCK_W		1647485						
ANR	1648494	Symbol	avpkt -> size		1647485						
ANR	1648495	Symbol	AV_PICTURE_TYPE_I		1647485						
ANR	1648496	Symbol	avctx		1647485						
ANR	1648497	Symbol	bytestream2_get_bytes_left		1647485						
ANR	1648498	Symbol	gbc -> buffer		1647485						
ANR	1648499	Symbol	frame -> linesize		1647485						
ANR	1648500	Symbol	DDS_NONE		1647485						
ANR	1648501	Symbol	ctx -> slice_count		1647485						
ANR	1648502	Symbol	* avpkt		1647485						
ANR	1648503	Symbol	av_image_check_size		1647485						
ANR	1648504	Symbol	AV_LOG_ERROR		1647485						
ANR	1648505	Symbol	frame -> key_frame		1647485						
ANR	1648506	Symbol	frame -> palette_has_changed		1647485						
ANR	1648507	Symbol	* frame -> linesize		1647485						
ANR	1648508	Symbol	bytestream2_get_le32		1647485						
ANR	1648509	Symbol	gbc		1647485						
ANR	1648510	Symbol	i		1647485						
ANR	1648511	Symbol	avctx -> thread_count		1647485						
ANR	1648512	Symbol	avctx -> priv_data		1647485						
ANR	1648513	Symbol	ctx -> compressed		1647485						
ANR	1648514	Symbol	* ctx		1647485						
ANR	1648515	Symbol	frame -> height		1647485						
ANR	1648516	Symbol	* i		1647485						
ANR	1648517	Symbol	mipmap		1647485						
ANR	1648518	Symbol	frame -> width		1647485						
ANR	1648519	Symbol	* * frame -> data		1647485						
ANR	1648520	Symbol	x		1647485						
ANR	1648521	Symbol	y		1647485						
ANR	1648522	Symbol	AVERROR_INVALIDDATA		1647485						
ANR	1648523	Symbol	MKTAG		1647485						
ANR	1648524	Symbol	bytestream2_get_byte		1647485						
