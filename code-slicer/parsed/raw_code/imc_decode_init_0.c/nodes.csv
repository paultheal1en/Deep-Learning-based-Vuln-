command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4819593	File	/home/p4ultr4n/workplace/ReVeal/raw_code/imc_decode_init_0.c								
ANR	4819594	Function	imc_decode_init	1:0:0:2893							
ANR	4819595	FunctionDef	imc_decode_init (AVCodecContext * avctx)		4819594	0					
ANR	4819596	CompoundStatement		3:0:59:2893	4819594	0					
ANR	4819597	IdentifierDeclStatement	"int i , j , ret ;"	5:4:66:79	4819594	0	True				
ANR	4819598	IdentifierDecl	i		4819594	0					
ANR	4819599	IdentifierDeclType	int		4819594	0					
ANR	4819600	Identifier	i		4819594	1					
ANR	4819601	IdentifierDecl	j		4819594	1					
ANR	4819602	IdentifierDeclType	int		4819594	0					
ANR	4819603	Identifier	j		4819594	1					
ANR	4819604	IdentifierDecl	ret		4819594	2					
ANR	4819605	IdentifierDeclType	int		4819594	0					
ANR	4819606	Identifier	ret		4819594	1					
ANR	4819607	IdentifierDeclStatement	IMCContext * q = avctx -> priv_data ;	7:4:86:118	4819594	1	True				
ANR	4819608	IdentifierDecl	* q = avctx -> priv_data		4819594	0					
ANR	4819609	IdentifierDeclType	IMCContext *		4819594	0					
ANR	4819610	Identifier	q		4819594	1					
ANR	4819611	AssignmentExpression	* q = avctx -> priv_data		4819594	2		=			
ANR	4819612	Identifier	q		4819594	0					
ANR	4819613	PtrMemberAccess	avctx -> priv_data		4819594	1					
ANR	4819614	Identifier	avctx		4819594	0					
ANR	4819615	Identifier	priv_data		4819594	1					
ANR	4819616	IdentifierDeclStatement	"double r1 , r2 ;"	9:4:125:138	4819594	2	True				
ANR	4819617	IdentifierDecl	r1		4819594	0					
ANR	4819618	IdentifierDeclType	double		4819594	0					
ANR	4819619	Identifier	r1		4819594	1					
ANR	4819620	IdentifierDecl	r2		4819594	1					
ANR	4819621	IdentifierDeclType	double		4819594	0					
ANR	4819622	Identifier	r2		4819594	1					
ANR	4819623	IfStatement	if ( ( avctx -> codec_id == AV_CODEC_ID_IMC && avctx -> channels != 1 ) || ( avctx -> codec_id == AV_CODEC_ID_IAC && avctx -> channels > 2 ) )		4819594	3					
ANR	4819624	Condition	( avctx -> codec_id == AV_CODEC_ID_IMC && avctx -> channels != 1 ) || ( avctx -> codec_id == AV_CODEC_ID_IAC && avctx -> channels > 2 )	13:8:151:282	4819594	0	True				
ANR	4819625	OrExpression	( avctx -> codec_id == AV_CODEC_ID_IMC && avctx -> channels != 1 ) || ( avctx -> codec_id == AV_CODEC_ID_IAC && avctx -> channels > 2 )		4819594	0		||			
ANR	4819626	AndExpression	avctx -> codec_id == AV_CODEC_ID_IMC && avctx -> channels != 1		4819594	0		&&			
ANR	4819627	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_IMC		4819594	0		==			
ANR	4819628	PtrMemberAccess	avctx -> codec_id		4819594	0					
ANR	4819629	Identifier	avctx		4819594	0					
ANR	4819630	Identifier	codec_id		4819594	1					
ANR	4819631	Identifier	AV_CODEC_ID_IMC		4819594	1					
ANR	4819632	EqualityExpression	avctx -> channels != 1		4819594	1		!=			
ANR	4819633	PtrMemberAccess	avctx -> channels		4819594	0					
ANR	4819634	Identifier	avctx		4819594	0					
ANR	4819635	Identifier	channels		4819594	1					
ANR	4819636	PrimaryExpression	1		4819594	1					
ANR	4819637	AndExpression	avctx -> codec_id == AV_CODEC_ID_IAC && avctx -> channels > 2		4819594	1		&&			
ANR	4819638	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_IAC		4819594	0		==			
ANR	4819639	PtrMemberAccess	avctx -> codec_id		4819594	0					
ANR	4819640	Identifier	avctx		4819594	0					
ANR	4819641	Identifier	codec_id		4819594	1					
ANR	4819642	Identifier	AV_CODEC_ID_IAC		4819594	1					
ANR	4819643	RelationalExpression	avctx -> channels > 2		4819594	1		>			
ANR	4819644	PtrMemberAccess	avctx -> channels		4819594	0					
ANR	4819645	Identifier	avctx		4819594	0					
ANR	4819646	Identifier	channels		4819594	1					
ANR	4819647	PrimaryExpression	2		4819594	1					
ANR	4819648	CompoundStatement		13:72:225:225	4819594	1					
ANR	4819649	ExpressionStatement	"av_log_ask_for_sample ( avctx , ""Number of channels is not supported\\n"" )"	17:8:296:365	4819594	0	True				
ANR	4819650	CallExpression	"av_log_ask_for_sample ( avctx , ""Number of channels is not supported\\n"" )"		4819594	0					
ANR	4819651	Callee	av_log_ask_for_sample		4819594	0					
ANR	4819652	Identifier	av_log_ask_for_sample		4819594	0					
ANR	4819653	ArgumentList	avctx		4819594	1					
ANR	4819654	Argument	avctx		4819594	0					
ANR	4819655	Identifier	avctx		4819594	0					
ANR	4819656	Argument	"""Number of channels is not supported\\n"""		4819594	1					
ANR	4819657	PrimaryExpression	"""Number of channels is not supported\\n"""		4819594	0					
ANR	4819658	ReturnStatement	return AVERROR_PATCHWELCOME ;	19:8:376:403	4819594	1	True				
ANR	4819659	Identifier	AVERROR_PATCHWELCOME		4819594	0					
ANR	4819660	ForStatement	for ( j = 0 ; j < avctx -> channels ; j ++ )		4819594	4					
ANR	4819661	ForInit	j = 0 ;	25:9:424:429	4819594	0	True				
ANR	4819662	AssignmentExpression	j = 0		4819594	0		=			
ANR	4819663	Identifier	j		4819594	0					
ANR	4819664	PrimaryExpression	0		4819594	1					
ANR	4819665	Condition	j < avctx -> channels	25:16:431:449	4819594	1	True				
ANR	4819666	RelationalExpression	j < avctx -> channels		4819594	0		<			
ANR	4819667	Identifier	j		4819594	0					
ANR	4819668	PtrMemberAccess	avctx -> channels		4819594	1					
ANR	4819669	Identifier	avctx		4819594	0					
ANR	4819670	Identifier	channels		4819594	1					
ANR	4819671	PostIncDecOperationExpression	j ++	25:37:452:454	4819594	2	True				
ANR	4819672	Identifier	j		4819594	0					
ANR	4819673	IncDec	++		4819594	1					
ANR	4819674	CompoundStatement		23:42:397:397	4819594	3					
ANR	4819675	ExpressionStatement	q -> chctx [ j ] . decoder_reset = 1	27:8:468:497	4819594	0	True				
ANR	4819676	AssignmentExpression	q -> chctx [ j ] . decoder_reset = 1		4819594	0		=			
ANR	4819677	MemberAccess	q -> chctx [ j ] . decoder_reset		4819594	0					
ANR	4819678	ArrayIndexing	q -> chctx [ j ]		4819594	0					
ANR	4819679	PtrMemberAccess	q -> chctx		4819594	0					
ANR	4819680	Identifier	q		4819594	0					
ANR	4819681	Identifier	chctx		4819594	1					
ANR	4819682	Identifier	j		4819594	1					
ANR	4819683	Identifier	decoder_reset		4819594	1					
ANR	4819684	PrimaryExpression	1		4819594	1					
ANR	4819685	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		4819594	1					
ANR	4819686	ForInit	i = 0 ;	31:13:515:520	4819594	0	True				
ANR	4819687	AssignmentExpression	i = 0		4819594	0		=			
ANR	4819688	Identifier	i		4819594	0					
ANR	4819689	PrimaryExpression	0		4819594	1					
ANR	4819690	Condition	i < BANDS	31:20:522:530	4819594	1	True				
ANR	4819691	RelationalExpression	i < BANDS		4819594	0		<			
ANR	4819692	Identifier	i		4819594	0					
ANR	4819693	Identifier	BANDS		4819594	1					
ANR	4819694	PostIncDecOperationExpression	i ++	31:31:533:535	4819594	2	True				
ANR	4819695	Identifier	i		4819594	0					
ANR	4819696	IncDec	++		4819594	1					
ANR	4819697	ExpressionStatement	q -> chctx [ j ] . old_floor [ i ] = 1.0	33:12:551:581	4819594	3	True				
ANR	4819698	AssignmentExpression	q -> chctx [ j ] . old_floor [ i ] = 1.0		4819594	0		=			
ANR	4819699	ArrayIndexing	q -> chctx [ j ] . old_floor [ i ]		4819594	0					
ANR	4819700	MemberAccess	q -> chctx [ j ] . old_floor		4819594	0					
ANR	4819701	ArrayIndexing	q -> chctx [ j ]		4819594	0					
ANR	4819702	PtrMemberAccess	q -> chctx		4819594	0					
ANR	4819703	Identifier	q		4819594	0					
ANR	4819704	Identifier	chctx		4819594	1					
ANR	4819705	Identifier	j		4819594	1					
ANR	4819706	Identifier	old_floor		4819594	1					
ANR	4819707	Identifier	i		4819594	1					
ANR	4819708	PrimaryExpression	1.0		4819594	1					
ANR	4819709	ForStatement	for ( i = 0 ; i < COEFFS / 2 ; i ++ )		4819594	2					
ANR	4819710	ForInit	i = 0 ;	37:13:599:604	4819594	0	True				
ANR	4819711	AssignmentExpression	i = 0		4819594	0		=			
ANR	4819712	Identifier	i		4819594	0					
ANR	4819713	PrimaryExpression	0		4819594	1					
ANR	4819714	Condition	i < COEFFS / 2	37:20:606:619	4819594	1	True				
ANR	4819715	RelationalExpression	i < COEFFS / 2		4819594	0		<			
ANR	4819716	Identifier	i		4819594	0					
ANR	4819717	MultiplicativeExpression	COEFFS / 2		4819594	1		/			
ANR	4819718	Identifier	COEFFS		4819594	0					
ANR	4819719	PrimaryExpression	2		4819594	1					
ANR	4819720	PostIncDecOperationExpression	i ++	37:36:622:624	4819594	2	True				
ANR	4819721	Identifier	i		4819594	0					
ANR	4819722	IncDec	++		4819594	1					
ANR	4819723	ExpressionStatement	q -> chctx [ j ] . last_fft_im [ i ] = 0	39:12:640:670	4819594	3	True				
ANR	4819724	AssignmentExpression	q -> chctx [ j ] . last_fft_im [ i ] = 0		4819594	0		=			
ANR	4819725	ArrayIndexing	q -> chctx [ j ] . last_fft_im [ i ]		4819594	0					
ANR	4819726	MemberAccess	q -> chctx [ j ] . last_fft_im		4819594	0					
ANR	4819727	ArrayIndexing	q -> chctx [ j ]		4819594	0					
ANR	4819728	PtrMemberAccess	q -> chctx		4819594	0					
ANR	4819729	Identifier	q		4819594	0					
ANR	4819730	Identifier	chctx		4819594	1					
ANR	4819731	Identifier	j		4819594	1					
ANR	4819732	Identifier	last_fft_im		4819594	1					
ANR	4819733	Identifier	i		4819594	1					
ANR	4819734	PrimaryExpression	0		4819594	1					
ANR	4819735	ExpressionStatement	"ff_sine_window_init ( q -> mdct_sine_window , COEFFS )"	47:4:761:809	4819594	5	True				
ANR	4819736	CallExpression	"ff_sine_window_init ( q -> mdct_sine_window , COEFFS )"		4819594	0					
ANR	4819737	Callee	ff_sine_window_init		4819594	0					
ANR	4819738	Identifier	ff_sine_window_init		4819594	0					
ANR	4819739	ArgumentList	q -> mdct_sine_window		4819594	1					
ANR	4819740	Argument	q -> mdct_sine_window		4819594	0					
ANR	4819741	PtrMemberAccess	q -> mdct_sine_window		4819594	0					
ANR	4819742	Identifier	q		4819594	0					
ANR	4819743	Identifier	mdct_sine_window		4819594	1					
ANR	4819744	Argument	COEFFS		4819594	1					
ANR	4819745	Identifier	COEFFS		4819594	0					
ANR	4819746	ForStatement	for ( i = 0 ; i < COEFFS ; i ++ )		4819594	6					
ANR	4819747	ForInit	i = 0 ;	49:9:821:826	4819594	0	True				
ANR	4819748	AssignmentExpression	i = 0		4819594	0		=			
ANR	4819749	Identifier	i		4819594	0					
ANR	4819750	PrimaryExpression	0		4819594	1					
ANR	4819751	Condition	i < COEFFS	49:16:828:837	4819594	1	True				
ANR	4819752	RelationalExpression	i < COEFFS		4819594	0		<			
ANR	4819753	Identifier	i		4819594	0					
ANR	4819754	Identifier	COEFFS		4819594	1					
ANR	4819755	PostIncDecOperationExpression	i ++	49:28:840:842	4819594	2	True				
ANR	4819756	Identifier	i		4819594	0					
ANR	4819757	IncDec	++		4819594	1					
ANR	4819758	ExpressionStatement	q -> mdct_sine_window [ i ] *= sqrt ( 2.0 )	51:8:854:889	4819594	3	True				
ANR	4819759	AssignmentExpression	q -> mdct_sine_window [ i ] *= sqrt ( 2.0 )		4819594	0		*=			
ANR	4819760	ArrayIndexing	q -> mdct_sine_window [ i ]		4819594	0					
ANR	4819761	PtrMemberAccess	q -> mdct_sine_window		4819594	0					
ANR	4819762	Identifier	q		4819594	0					
ANR	4819763	Identifier	mdct_sine_window		4819594	1					
ANR	4819764	Identifier	i		4819594	1					
ANR	4819765	CallExpression	sqrt ( 2.0 )		4819594	1					
ANR	4819766	Callee	sqrt		4819594	0					
ANR	4819767	Identifier	sqrt		4819594	0					
ANR	4819768	ArgumentList	2.0		4819594	1					
ANR	4819769	Argument	2.0		4819594	0					
ANR	4819770	PrimaryExpression	2.0		4819594	0					
ANR	4819771	ForStatement	for ( i = 0 ; i < COEFFS / 2 ; i ++ )		4819594	7					
ANR	4819772	ForInit	i = 0 ;	53:9:901:906	4819594	0	True				
ANR	4819773	AssignmentExpression	i = 0		4819594	0		=			
ANR	4819774	Identifier	i		4819594	0					
ANR	4819775	PrimaryExpression	0		4819594	1					
ANR	4819776	Condition	i < COEFFS / 2	53:16:908:921	4819594	1	True				
ANR	4819777	RelationalExpression	i < COEFFS / 2		4819594	0		<			
ANR	4819778	Identifier	i		4819594	0					
ANR	4819779	MultiplicativeExpression	COEFFS / 2		4819594	1		/			
ANR	4819780	Identifier	COEFFS		4819594	0					
ANR	4819781	PrimaryExpression	2		4819594	1					
ANR	4819782	PostIncDecOperationExpression	i ++	53:32:924:926	4819594	2	True				
ANR	4819783	Identifier	i		4819594	0					
ANR	4819784	IncDec	++		4819594	1					
ANR	4819785	CompoundStatement		51:37:869:869	4819594	3					
ANR	4819786	ExpressionStatement	q -> post_cos [ i ] = ( 1.0f / 32768 ) * cos ( i / 256.0 * M_PI )	55:8:940:995	4819594	0	True				
ANR	4819787	AssignmentExpression	q -> post_cos [ i ] = ( 1.0f / 32768 ) * cos ( i / 256.0 * M_PI )		4819594	0		=			
ANR	4819788	ArrayIndexing	q -> post_cos [ i ]		4819594	0					
ANR	4819789	PtrMemberAccess	q -> post_cos		4819594	0					
ANR	4819790	Identifier	q		4819594	0					
ANR	4819791	Identifier	post_cos		4819594	1					
ANR	4819792	Identifier	i		4819594	1					
ANR	4819793	MultiplicativeExpression	( 1.0f / 32768 ) * cos ( i / 256.0 * M_PI )		4819594	1		*			
ANR	4819794	MultiplicativeExpression	1.0f / 32768		4819594	0		/			
ANR	4819795	PrimaryExpression	1.0f		4819594	0					
ANR	4819796	PrimaryExpression	32768		4819594	1					
ANR	4819797	CallExpression	cos ( i / 256.0 * M_PI )		4819594	1					
ANR	4819798	Callee	cos		4819594	0					
ANR	4819799	Identifier	cos		4819594	0					
ANR	4819800	ArgumentList	i / 256.0 * M_PI		4819594	1					
ANR	4819801	Argument	i / 256.0 * M_PI		4819594	0					
ANR	4819802	MultiplicativeExpression	i / 256.0 * M_PI		4819594	0		/			
ANR	4819803	Identifier	i		4819594	0					
ANR	4819804	MultiplicativeExpression	256.0 * M_PI		4819594	1		*			
ANR	4819805	PrimaryExpression	256.0		4819594	0					
ANR	4819806	Identifier	M_PI		4819594	1					
ANR	4819807	ExpressionStatement	q -> post_sin [ i ] = ( 1.0f / 32768 ) * sin ( i / 256.0 * M_PI )	57:8:1006:1061	4819594	1	True				
ANR	4819808	AssignmentExpression	q -> post_sin [ i ] = ( 1.0f / 32768 ) * sin ( i / 256.0 * M_PI )		4819594	0		=			
ANR	4819809	ArrayIndexing	q -> post_sin [ i ]		4819594	0					
ANR	4819810	PtrMemberAccess	q -> post_sin		4819594	0					
ANR	4819811	Identifier	q		4819594	0					
ANR	4819812	Identifier	post_sin		4819594	1					
ANR	4819813	Identifier	i		4819594	1					
ANR	4819814	MultiplicativeExpression	( 1.0f / 32768 ) * sin ( i / 256.0 * M_PI )		4819594	1		*			
ANR	4819815	MultiplicativeExpression	1.0f / 32768		4819594	0		/			
ANR	4819816	PrimaryExpression	1.0f		4819594	0					
ANR	4819817	PrimaryExpression	32768		4819594	1					
ANR	4819818	CallExpression	sin ( i / 256.0 * M_PI )		4819594	1					
ANR	4819819	Callee	sin		4819594	0					
ANR	4819820	Identifier	sin		4819594	0					
ANR	4819821	ArgumentList	i / 256.0 * M_PI		4819594	1					
ANR	4819822	Argument	i / 256.0 * M_PI		4819594	0					
ANR	4819823	MultiplicativeExpression	i / 256.0 * M_PI		4819594	0		/			
ANR	4819824	Identifier	i		4819594	0					
ANR	4819825	MultiplicativeExpression	256.0 * M_PI		4819594	1		*			
ANR	4819826	PrimaryExpression	256.0		4819594	0					
ANR	4819827	Identifier	M_PI		4819594	1					
ANR	4819828	ExpressionStatement	r1 = sin ( ( i * 4.0 + 1.0 ) / 1024.0 * M_PI )	61:8:1074:1115	4819594	2	True				
ANR	4819829	AssignmentExpression	r1 = sin ( ( i * 4.0 + 1.0 ) / 1024.0 * M_PI )		4819594	0		=			
ANR	4819830	Identifier	r1		4819594	0					
ANR	4819831	CallExpression	sin ( ( i * 4.0 + 1.0 ) / 1024.0 * M_PI )		4819594	1					
ANR	4819832	Callee	sin		4819594	0					
ANR	4819833	Identifier	sin		4819594	0					
ANR	4819834	ArgumentList	( i * 4.0 + 1.0 ) / 1024.0 * M_PI		4819594	1					
ANR	4819835	Argument	( i * 4.0 + 1.0 ) / 1024.0 * M_PI		4819594	0					
ANR	4819836	MultiplicativeExpression	( i * 4.0 + 1.0 ) / 1024.0 * M_PI		4819594	0		/			
ANR	4819837	AdditiveExpression	i * 4.0 + 1.0		4819594	0		+			
ANR	4819838	MultiplicativeExpression	i * 4.0		4819594	0		*			
ANR	4819839	Identifier	i		4819594	0					
ANR	4819840	PrimaryExpression	4.0		4819594	1					
ANR	4819841	PrimaryExpression	1.0		4819594	1					
ANR	4819842	MultiplicativeExpression	1024.0 * M_PI		4819594	1		*			
ANR	4819843	PrimaryExpression	1024.0		4819594	0					
ANR	4819844	Identifier	M_PI		4819594	1					
ANR	4819845	ExpressionStatement	r2 = cos ( ( i * 4.0 + 1.0 ) / 1024.0 * M_PI )	63:8:1126:1167	4819594	3	True				
ANR	4819846	AssignmentExpression	r2 = cos ( ( i * 4.0 + 1.0 ) / 1024.0 * M_PI )		4819594	0		=			
ANR	4819847	Identifier	r2		4819594	0					
ANR	4819848	CallExpression	cos ( ( i * 4.0 + 1.0 ) / 1024.0 * M_PI )		4819594	1					
ANR	4819849	Callee	cos		4819594	0					
ANR	4819850	Identifier	cos		4819594	0					
ANR	4819851	ArgumentList	( i * 4.0 + 1.0 ) / 1024.0 * M_PI		4819594	1					
ANR	4819852	Argument	( i * 4.0 + 1.0 ) / 1024.0 * M_PI		4819594	0					
ANR	4819853	MultiplicativeExpression	( i * 4.0 + 1.0 ) / 1024.0 * M_PI		4819594	0		/			
ANR	4819854	AdditiveExpression	i * 4.0 + 1.0		4819594	0		+			
ANR	4819855	MultiplicativeExpression	i * 4.0		4819594	0		*			
ANR	4819856	Identifier	i		4819594	0					
ANR	4819857	PrimaryExpression	4.0		4819594	1					
ANR	4819858	PrimaryExpression	1.0		4819594	1					
ANR	4819859	MultiplicativeExpression	1024.0 * M_PI		4819594	1		*			
ANR	4819860	PrimaryExpression	1024.0		4819594	0					
ANR	4819861	Identifier	M_PI		4819594	1					
ANR	4819862	IfStatement	if ( i & 0x1 )		4819594	4					
ANR	4819863	Condition	i & 0x1	67:12:1184:1190	4819594	0	True				
ANR	4819864	BitAndExpression	i & 0x1		4819594	0		&			
ANR	4819865	Identifier	i		4819594	0					
ANR	4819866	PrimaryExpression	0x1		4819594	1					
ANR	4819867	CompoundStatement		65:21:1133:1133	4819594	1					
ANR	4819868	ExpressionStatement	q -> pre_coef1 [ i ] = ( r1 + r2 ) * sqrt ( 2.0 )	69:12:1208:1248	4819594	0	True				
ANR	4819869	AssignmentExpression	q -> pre_coef1 [ i ] = ( r1 + r2 ) * sqrt ( 2.0 )		4819594	0		=			
ANR	4819870	ArrayIndexing	q -> pre_coef1 [ i ]		4819594	0					
ANR	4819871	PtrMemberAccess	q -> pre_coef1		4819594	0					
ANR	4819872	Identifier	q		4819594	0					
ANR	4819873	Identifier	pre_coef1		4819594	1					
ANR	4819874	Identifier	i		4819594	1					
ANR	4819875	MultiplicativeExpression	( r1 + r2 ) * sqrt ( 2.0 )		4819594	1		*			
ANR	4819876	AdditiveExpression	r1 + r2		4819594	0		+			
ANR	4819877	Identifier	r1		4819594	0					
ANR	4819878	Identifier	r2		4819594	1					
ANR	4819879	CallExpression	sqrt ( 2.0 )		4819594	1					
ANR	4819880	Callee	sqrt		4819594	0					
ANR	4819881	Identifier	sqrt		4819594	0					
ANR	4819882	ArgumentList	2.0		4819594	1					
ANR	4819883	Argument	2.0		4819594	0					
ANR	4819884	PrimaryExpression	2.0		4819594	0					
ANR	4819885	ExpressionStatement	q -> pre_coef2 [ i ] = - ( r1 - r2 ) * sqrt ( 2.0 )	71:12:1263:1303	4819594	1	True				
ANR	4819886	AssignmentExpression	q -> pre_coef2 [ i ] = - ( r1 - r2 ) * sqrt ( 2.0 )		4819594	0		=			
ANR	4819887	ArrayIndexing	q -> pre_coef2 [ i ]		4819594	0					
ANR	4819888	PtrMemberAccess	q -> pre_coef2		4819594	0					
ANR	4819889	Identifier	q		4819594	0					
ANR	4819890	Identifier	pre_coef2		4819594	1					
ANR	4819891	Identifier	i		4819594	1					
ANR	4819892	MultiplicativeExpression	- ( r1 - r2 ) * sqrt ( 2.0 )		4819594	1		*			
ANR	4819893	UnaryOperationExpression	- ( r1 - r2 )		4819594	0					
ANR	4819894	UnaryOperator	-		4819594	0					
ANR	4819895	AdditiveExpression	r1 - r2		4819594	1		-			
ANR	4819896	Identifier	r1		4819594	0					
ANR	4819897	Identifier	r2		4819594	1					
ANR	4819898	CallExpression	sqrt ( 2.0 )		4819594	1					
ANR	4819899	Callee	sqrt		4819594	0					
ANR	4819900	Identifier	sqrt		4819594	0					
ANR	4819901	ArgumentList	2.0		4819594	1					
ANR	4819902	Argument	2.0		4819594	0					
ANR	4819903	PrimaryExpression	2.0		4819594	0					
ANR	4819904	ElseStatement	else		4819594	0					
ANR	4819905	CompoundStatement		71:15:1261:1261	4819594	0					
ANR	4819906	ExpressionStatement	q -> pre_coef1 [ i ] = - ( r1 + r2 ) * sqrt ( 2.0 )	75:12:1336:1376	4819594	0	True				
ANR	4819907	AssignmentExpression	q -> pre_coef1 [ i ] = - ( r1 + r2 ) * sqrt ( 2.0 )		4819594	0		=			
ANR	4819908	ArrayIndexing	q -> pre_coef1 [ i ]		4819594	0					
ANR	4819909	PtrMemberAccess	q -> pre_coef1		4819594	0					
ANR	4819910	Identifier	q		4819594	0					
ANR	4819911	Identifier	pre_coef1		4819594	1					
ANR	4819912	Identifier	i		4819594	1					
ANR	4819913	MultiplicativeExpression	- ( r1 + r2 ) * sqrt ( 2.0 )		4819594	1		*			
ANR	4819914	UnaryOperationExpression	- ( r1 + r2 )		4819594	0					
ANR	4819915	UnaryOperator	-		4819594	0					
ANR	4819916	AdditiveExpression	r1 + r2		4819594	1		+			
ANR	4819917	Identifier	r1		4819594	0					
ANR	4819918	Identifier	r2		4819594	1					
ANR	4819919	CallExpression	sqrt ( 2.0 )		4819594	1					
ANR	4819920	Callee	sqrt		4819594	0					
ANR	4819921	Identifier	sqrt		4819594	0					
ANR	4819922	ArgumentList	2.0		4819594	1					
ANR	4819923	Argument	2.0		4819594	0					
ANR	4819924	PrimaryExpression	2.0		4819594	0					
ANR	4819925	ExpressionStatement	q -> pre_coef2 [ i ] = ( r1 - r2 ) * sqrt ( 2.0 )	77:12:1391:1431	4819594	1	True				
ANR	4819926	AssignmentExpression	q -> pre_coef2 [ i ] = ( r1 - r2 ) * sqrt ( 2.0 )		4819594	0		=			
ANR	4819927	ArrayIndexing	q -> pre_coef2 [ i ]		4819594	0					
ANR	4819928	PtrMemberAccess	q -> pre_coef2		4819594	0					
ANR	4819929	Identifier	q		4819594	0					
ANR	4819930	Identifier	pre_coef2		4819594	1					
ANR	4819931	Identifier	i		4819594	1					
ANR	4819932	MultiplicativeExpression	( r1 - r2 ) * sqrt ( 2.0 )		4819594	1		*			
ANR	4819933	AdditiveExpression	r1 - r2		4819594	0		-			
ANR	4819934	Identifier	r1		4819594	0					
ANR	4819935	Identifier	r2		4819594	1					
ANR	4819936	CallExpression	sqrt ( 2.0 )		4819594	1					
ANR	4819937	Callee	sqrt		4819594	0					
ANR	4819938	Identifier	sqrt		4819594	0					
ANR	4819939	ArgumentList	2.0		4819594	1					
ANR	4819940	Argument	2.0		4819594	0					
ANR	4819941	PrimaryExpression	2.0		4819594	0					
ANR	4819942	ForStatement	for ( i = 0 ; i < 30 ; i ++ )		4819594	8					
ANR	4819943	ForInit	i = 0 ;	89:9:1505:1510	4819594	0	True				
ANR	4819944	AssignmentExpression	i = 0		4819594	0		=			
ANR	4819945	Identifier	i		4819594	0					
ANR	4819946	PrimaryExpression	0		4819594	1					
ANR	4819947	Condition	i < 30	89:16:1512:1517	4819594	1	True				
ANR	4819948	RelationalExpression	i < 30		4819594	0		<			
ANR	4819949	Identifier	i		4819594	0					
ANR	4819950	PrimaryExpression	30		4819594	1					
ANR	4819951	PostIncDecOperationExpression	i ++	89:24:1520:1522	4819594	2	True				
ANR	4819952	Identifier	i		4819594	0					
ANR	4819953	IncDec	++		4819594	1					
ANR	4819954	ExpressionStatement	q -> sqrt_tab [ i ] = sqrt ( i )	91:8:1534:1558	4819594	3	True				
ANR	4819955	AssignmentExpression	q -> sqrt_tab [ i ] = sqrt ( i )		4819594	0		=			
ANR	4819956	ArrayIndexing	q -> sqrt_tab [ i ]		4819594	0					
ANR	4819957	PtrMemberAccess	q -> sqrt_tab		4819594	0					
ANR	4819958	Identifier	q		4819594	0					
ANR	4819959	Identifier	sqrt_tab		4819594	1					
ANR	4819960	Identifier	i		4819594	1					
ANR	4819961	CallExpression	sqrt ( i )		4819594	1					
ANR	4819962	Callee	sqrt		4819594	0					
ANR	4819963	Identifier	sqrt		4819594	0					
ANR	4819964	ArgumentList	i		4819594	1					
ANR	4819965	Argument	i		4819594	0					
ANR	4819966	Identifier	i		4819594	0					
ANR	4819967	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		4819594	9					
ANR	4819968	ForInit	i = 0 ;	97:9:1609:1614	4819594	0	True				
ANR	4819969	AssignmentExpression	i = 0		4819594	0		=			
ANR	4819970	Identifier	i		4819594	0					
ANR	4819971	PrimaryExpression	0		4819594	1					
ANR	4819972	Condition	i < 4	97:16:1616:1620	4819594	1	True				
ANR	4819973	RelationalExpression	i < 4		4819594	0		<			
ANR	4819974	Identifier	i		4819594	0					
ANR	4819975	PrimaryExpression	4		4819594	1					
ANR	4819976	PostIncDecOperationExpression	i ++	97:24:1624:1626	4819594	2	True				
ANR	4819977	Identifier	i		4819594	0					
ANR	4819978	IncDec	++		4819594	1					
ANR	4819979	CompoundStatement		95:29:1569:1569	4819594	3					
ANR	4819980	ForStatement	for ( j = 0 ; j < 4 ; j ++ )		4819594	0					
ANR	4819981	ForInit	j = 0 ;	99:13:1645:1650	4819594	0	True				
ANR	4819982	AssignmentExpression	j = 0		4819594	0		=			
ANR	4819983	Identifier	j		4819594	0					
ANR	4819984	PrimaryExpression	0		4819594	1					
ANR	4819985	Condition	j < 4	99:20:1652:1656	4819594	1	True				
ANR	4819986	RelationalExpression	j < 4		4819594	0		<			
ANR	4819987	Identifier	j		4819594	0					
ANR	4819988	PrimaryExpression	4		4819594	1					
ANR	4819989	PostIncDecOperationExpression	j ++	99:27:1659:1661	4819594	2	True				
ANR	4819990	Identifier	j		4819594	0					
ANR	4819991	IncDec	++		4819594	1					
ANR	4819992	CompoundStatement		97:32:1604:1604	4819594	3					
ANR	4819993	ExpressionStatement	huffman_vlc [ i ] [ j ] . table = & vlc_tables [ vlc_offsets [ i * 4 + j ] ]	101:12:1679:1740	4819594	0	True				
ANR	4819994	AssignmentExpression	huffman_vlc [ i ] [ j ] . table = & vlc_tables [ vlc_offsets [ i * 4 + j ] ]		4819594	0		=			
ANR	4819995	MemberAccess	huffman_vlc [ i ] [ j ] . table		4819594	0					
ANR	4819996	ArrayIndexing	huffman_vlc [ i ] [ j ]		4819594	0					
ANR	4819997	ArrayIndexing	huffman_vlc [ i ]		4819594	0					
ANR	4819998	Identifier	huffman_vlc		4819594	0					
ANR	4819999	Identifier	i		4819594	1					
ANR	4820000	Identifier	j		4819594	1					
ANR	4820001	Identifier	table		4819594	1					
ANR	4820002	UnaryOperationExpression	& vlc_tables [ vlc_offsets [ i * 4 + j ] ]		4819594	1					
ANR	4820003	UnaryOperator	&		4819594	0					
ANR	4820004	ArrayIndexing	vlc_tables [ vlc_offsets [ i * 4 + j ] ]		4819594	1					
ANR	4820005	Identifier	vlc_tables		4819594	0					
ANR	4820006	ArrayIndexing	vlc_offsets [ i * 4 + j ]		4819594	1					
ANR	4820007	Identifier	vlc_offsets		4819594	0					
ANR	4820008	AdditiveExpression	i * 4 + j		4819594	1		+			
ANR	4820009	MultiplicativeExpression	i * 4		4819594	0		*			
ANR	4820010	Identifier	i		4819594	0					
ANR	4820011	PrimaryExpression	4		4819594	1					
ANR	4820012	Identifier	j		4819594	1					
ANR	4820013	ExpressionStatement	huffman_vlc [ i ] [ j ] . table_allocated = vlc_offsets [ i * 4 + j + 1 ] - vlc_offsets [ i * 4 + j ]	103:12:1755:1842	4819594	1	True				
ANR	4820014	AssignmentExpression	huffman_vlc [ i ] [ j ] . table_allocated = vlc_offsets [ i * 4 + j + 1 ] - vlc_offsets [ i * 4 + j ]		4819594	0		=			
ANR	4820015	MemberAccess	huffman_vlc [ i ] [ j ] . table_allocated		4819594	0					
ANR	4820016	ArrayIndexing	huffman_vlc [ i ] [ j ]		4819594	0					
ANR	4820017	ArrayIndexing	huffman_vlc [ i ]		4819594	0					
ANR	4820018	Identifier	huffman_vlc		4819594	0					
ANR	4820019	Identifier	i		4819594	1					
ANR	4820020	Identifier	j		4819594	1					
ANR	4820021	Identifier	table_allocated		4819594	1					
ANR	4820022	AdditiveExpression	vlc_offsets [ i * 4 + j + 1 ] - vlc_offsets [ i * 4 + j ]		4819594	1		-			
ANR	4820023	ArrayIndexing	vlc_offsets [ i * 4 + j + 1 ]		4819594	0					
ANR	4820024	Identifier	vlc_offsets		4819594	0					
ANR	4820025	AdditiveExpression	i * 4 + j + 1		4819594	1		+			
ANR	4820026	MultiplicativeExpression	i * 4		4819594	0		*			
ANR	4820027	Identifier	i		4819594	0					
ANR	4820028	PrimaryExpression	4		4819594	1					
ANR	4820029	AdditiveExpression	j + 1		4819594	1		+			
ANR	4820030	Identifier	j		4819594	0					
ANR	4820031	PrimaryExpression	1		4819594	1					
ANR	4820032	ArrayIndexing	vlc_offsets [ i * 4 + j ]		4819594	1					
ANR	4820033	Identifier	vlc_offsets		4819594	0					
ANR	4820034	AdditiveExpression	i * 4 + j		4819594	1		+			
ANR	4820035	MultiplicativeExpression	i * 4		4819594	0		*			
ANR	4820036	Identifier	i		4819594	0					
ANR	4820037	PrimaryExpression	4		4819594	1					
ANR	4820038	Identifier	j		4819594	1					
ANR	4820039	ExpressionStatement	"init_vlc ( & huffman_vlc [ i ] [ j ] , 9 , imc_huffman_sizes [ i ] , imc_huffman_lens [ i ] [ j ] , 1 , 1 , imc_huffman_bits [ i ] [ j ] , 2 , 2 , INIT_VLC_USE_NEW_STATIC )"	105:12:1857:2039	4819594	2	True				
ANR	4820040	CallExpression	"init_vlc ( & huffman_vlc [ i ] [ j ] , 9 , imc_huffman_sizes [ i ] , imc_huffman_lens [ i ] [ j ] , 1 , 1 , imc_huffman_bits [ i ] [ j ] , 2 , 2 , INIT_VLC_USE_NEW_STATIC )"		4819594	0					
ANR	4820041	Callee	init_vlc		4819594	0					
ANR	4820042	Identifier	init_vlc		4819594	0					
ANR	4820043	ArgumentList	& huffman_vlc [ i ] [ j ]		4819594	1					
ANR	4820044	Argument	& huffman_vlc [ i ] [ j ]		4819594	0					
ANR	4820045	UnaryOperationExpression	& huffman_vlc [ i ] [ j ]		4819594	0					
ANR	4820046	UnaryOperator	&		4819594	0					
ANR	4820047	ArrayIndexing	huffman_vlc [ i ] [ j ]		4819594	1					
ANR	4820048	ArrayIndexing	huffman_vlc [ i ]		4819594	0					
ANR	4820049	Identifier	huffman_vlc		4819594	0					
ANR	4820050	Identifier	i		4819594	1					
ANR	4820051	Identifier	j		4819594	1					
ANR	4820052	Argument	9		4819594	1					
ANR	4820053	PrimaryExpression	9		4819594	0					
ANR	4820054	Argument	imc_huffman_sizes [ i ]		4819594	2					
ANR	4820055	ArrayIndexing	imc_huffman_sizes [ i ]		4819594	0					
ANR	4820056	Identifier	imc_huffman_sizes		4819594	0					
ANR	4820057	Identifier	i		4819594	1					
ANR	4820058	Argument	imc_huffman_lens [ i ] [ j ]		4819594	3					
ANR	4820059	ArrayIndexing	imc_huffman_lens [ i ] [ j ]		4819594	0					
ANR	4820060	ArrayIndexing	imc_huffman_lens [ i ]		4819594	0					
ANR	4820061	Identifier	imc_huffman_lens		4819594	0					
ANR	4820062	Identifier	i		4819594	1					
ANR	4820063	Identifier	j		4819594	1					
ANR	4820064	Argument	1		4819594	4					
ANR	4820065	PrimaryExpression	1		4819594	0					
ANR	4820066	Argument	1		4819594	5					
ANR	4820067	PrimaryExpression	1		4819594	0					
ANR	4820068	Argument	imc_huffman_bits [ i ] [ j ]		4819594	6					
ANR	4820069	ArrayIndexing	imc_huffman_bits [ i ] [ j ]		4819594	0					
ANR	4820070	ArrayIndexing	imc_huffman_bits [ i ]		4819594	0					
ANR	4820071	Identifier	imc_huffman_bits		4819594	0					
ANR	4820072	Identifier	i		4819594	1					
ANR	4820073	Identifier	j		4819594	1					
ANR	4820074	Argument	2		4819594	7					
ANR	4820075	PrimaryExpression	2		4819594	0					
ANR	4820076	Argument	2		4819594	8					
ANR	4820077	PrimaryExpression	2		4819594	0					
ANR	4820078	Argument	INIT_VLC_USE_NEW_STATIC		4819594	9					
ANR	4820079	Identifier	INIT_VLC_USE_NEW_STATIC		4819594	0					
ANR	4820080	IfStatement	if ( avctx -> codec_id == AV_CODEC_ID_IAC )		4819594	10					
ANR	4820081	Condition	avctx -> codec_id == AV_CODEC_ID_IAC	117:8:2070:2103	4819594	0	True				
ANR	4820082	EqualityExpression	avctx -> codec_id == AV_CODEC_ID_IAC		4819594	0		==			
ANR	4820083	PtrMemberAccess	avctx -> codec_id		4819594	0					
ANR	4820084	Identifier	avctx		4819594	0					
ANR	4820085	Identifier	codec_id		4819594	1					
ANR	4820086	Identifier	AV_CODEC_ID_IAC		4819594	1					
ANR	4820087	CompoundStatement		115:44:2046:2046	4819594	1					
ANR	4820088	ExpressionStatement	"iac_generate_tabs ( q , avctx -> sample_rate )"	119:8:2117:2157	4819594	0	True				
ANR	4820089	CallExpression	"iac_generate_tabs ( q , avctx -> sample_rate )"		4819594	0					
ANR	4820090	Callee	iac_generate_tabs		4819594	0					
ANR	4820091	Identifier	iac_generate_tabs		4819594	0					
ANR	4820092	ArgumentList	q		4819594	1					
ANR	4820093	Argument	q		4819594	0					
ANR	4820094	Identifier	q		4819594	0					
ANR	4820095	Argument	avctx -> sample_rate		4819594	1					
ANR	4820096	PtrMemberAccess	avctx -> sample_rate		4819594	0					
ANR	4820097	Identifier	avctx		4819594	0					
ANR	4820098	Identifier	sample_rate		4819594	1					
ANR	4820099	ElseStatement	else		4819594	0					
ANR	4820100	CompoundStatement		119:11:2111:2111	4819594	0					
ANR	4820101	ExpressionStatement	"memcpy ( q -> cyclTab , cyclTab , sizeof ( cyclTab ) )"	123:8:2182:2228	4819594	0	True				
ANR	4820102	CallExpression	"memcpy ( q -> cyclTab , cyclTab , sizeof ( cyclTab ) )"		4819594	0					
ANR	4820103	Callee	memcpy		4819594	0					
ANR	4820104	Identifier	memcpy		4819594	0					
ANR	4820105	ArgumentList	q -> cyclTab		4819594	1					
ANR	4820106	Argument	q -> cyclTab		4819594	0					
ANR	4820107	PtrMemberAccess	q -> cyclTab		4819594	0					
ANR	4820108	Identifier	q		4819594	0					
ANR	4820109	Identifier	cyclTab		4819594	1					
ANR	4820110	Argument	cyclTab		4819594	1					
ANR	4820111	Identifier	cyclTab		4819594	0					
ANR	4820112	Argument	sizeof ( cyclTab )		4819594	2					
ANR	4820113	SizeofExpression	sizeof ( cyclTab )		4819594	0					
ANR	4820114	Sizeof	sizeof		4819594	0					
ANR	4820115	SizeofOperand	cyclTab		4819594	1					
ANR	4820116	ExpressionStatement	"memcpy ( q -> cyclTab2 , cyclTab2 , sizeof ( cyclTab2 ) )"	125:8:2239:2286	4819594	1	True				
ANR	4820117	CallExpression	"memcpy ( q -> cyclTab2 , cyclTab2 , sizeof ( cyclTab2 ) )"		4819594	0					
ANR	4820118	Callee	memcpy		4819594	0					
ANR	4820119	Identifier	memcpy		4819594	0					
ANR	4820120	ArgumentList	q -> cyclTab2		4819594	1					
ANR	4820121	Argument	q -> cyclTab2		4819594	0					
ANR	4820122	PtrMemberAccess	q -> cyclTab2		4819594	0					
ANR	4820123	Identifier	q		4819594	0					
ANR	4820124	Identifier	cyclTab2		4819594	1					
ANR	4820125	Argument	cyclTab2		4819594	1					
ANR	4820126	Identifier	cyclTab2		4819594	0					
ANR	4820127	Argument	sizeof ( cyclTab2 )		4819594	2					
ANR	4820128	SizeofExpression	sizeof ( cyclTab2 )		4819594	0					
ANR	4820129	Sizeof	sizeof		4819594	0					
ANR	4820130	SizeofOperand	cyclTab2		4819594	1					
ANR	4820131	ExpressionStatement	"memcpy ( q -> weights1 , imc_weights1 , sizeof ( imc_weights1 ) )"	127:8:2297:2352	4819594	2	True				
ANR	4820132	CallExpression	"memcpy ( q -> weights1 , imc_weights1 , sizeof ( imc_weights1 ) )"		4819594	0					
ANR	4820133	Callee	memcpy		4819594	0					
ANR	4820134	Identifier	memcpy		4819594	0					
ANR	4820135	ArgumentList	q -> weights1		4819594	1					
ANR	4820136	Argument	q -> weights1		4819594	0					
ANR	4820137	PtrMemberAccess	q -> weights1		4819594	0					
ANR	4820138	Identifier	q		4819594	0					
ANR	4820139	Identifier	weights1		4819594	1					
ANR	4820140	Argument	imc_weights1		4819594	1					
ANR	4820141	Identifier	imc_weights1		4819594	0					
ANR	4820142	Argument	sizeof ( imc_weights1 )		4819594	2					
ANR	4820143	SizeofExpression	sizeof ( imc_weights1 )		4819594	0					
ANR	4820144	Sizeof	sizeof		4819594	0					
ANR	4820145	SizeofOperand	imc_weights1		4819594	1					
ANR	4820146	ExpressionStatement	"memcpy ( q -> weights2 , imc_weights2 , sizeof ( imc_weights2 ) )"	129:8:2363:2418	4819594	3	True				
ANR	4820147	CallExpression	"memcpy ( q -> weights2 , imc_weights2 , sizeof ( imc_weights2 ) )"		4819594	0					
ANR	4820148	Callee	memcpy		4819594	0					
ANR	4820149	Identifier	memcpy		4819594	0					
ANR	4820150	ArgumentList	q -> weights2		4819594	1					
ANR	4820151	Argument	q -> weights2		4819594	0					
ANR	4820152	PtrMemberAccess	q -> weights2		4819594	0					
ANR	4820153	Identifier	q		4819594	0					
ANR	4820154	Identifier	weights2		4819594	1					
ANR	4820155	Argument	imc_weights2		4819594	1					
ANR	4820156	Identifier	imc_weights2		4819594	0					
ANR	4820157	Argument	sizeof ( imc_weights2 )		4819594	2					
ANR	4820158	SizeofExpression	sizeof ( imc_weights2 )		4819594	0					
ANR	4820159	Sizeof	sizeof		4819594	0					
ANR	4820160	SizeofOperand	imc_weights2		4819594	1					
ANR	4820161	IfStatement	"if ( ( ret = ff_fft_init ( & q -> fft , 7 , 1 ) ) )"		4819594	11					
ANR	4820162	Condition	"ret = ff_fft_init ( & q -> fft , 7 , 1 )"	135:8:2438:2471	4819594	0	True				
ANR	4820163	AssignmentExpression	"ret = ff_fft_init ( & q -> fft , 7 , 1 )"		4819594	0		=			
ANR	4820164	Identifier	ret		4819594	0					
ANR	4820165	CallExpression	"ff_fft_init ( & q -> fft , 7 , 1 )"		4819594	1					
ANR	4820166	Callee	ff_fft_init		4819594	0					
ANR	4820167	Identifier	ff_fft_init		4819594	0					
ANR	4820168	ArgumentList	& q -> fft		4819594	1					
ANR	4820169	Argument	& q -> fft		4819594	0					
ANR	4820170	UnaryOperationExpression	& q -> fft		4819594	0					
ANR	4820171	UnaryOperator	&		4819594	0					
ANR	4820172	PtrMemberAccess	q -> fft		4819594	1					
ANR	4820173	Identifier	q		4819594	0					
ANR	4820174	Identifier	fft		4819594	1					
ANR	4820175	Argument	7		4819594	1					
ANR	4820176	PrimaryExpression	7		4819594	0					
ANR	4820177	Argument	1		4819594	2					
ANR	4820178	PrimaryExpression	1		4819594	0					
ANR	4820179	CompoundStatement		133:44:2414:2414	4819594	1					
ANR	4820180	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""FFT init failed\\n"" )"	137:8:2485:2532	4819594	0	True				
ANR	4820181	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""FFT init failed\\n"" )"		4819594	0					
ANR	4820182	Callee	av_log		4819594	0					
ANR	4820183	Identifier	av_log		4819594	0					
ANR	4820184	ArgumentList	avctx		4819594	1					
ANR	4820185	Argument	avctx		4819594	0					
ANR	4820186	Identifier	avctx		4819594	0					
ANR	4820187	Argument	AV_LOG_INFO		4819594	1					
ANR	4820188	Identifier	AV_LOG_INFO		4819594	0					
ANR	4820189	Argument	"""FFT init failed\\n"""		4819594	2					
ANR	4820190	PrimaryExpression	"""FFT init failed\\n"""		4819594	0					
ANR	4820191	ReturnStatement	return ret ;	139:8:2543:2553	4819594	1	True				
ANR	4820192	Identifier	ret		4819594	0					
ANR	4820193	ExpressionStatement	"ff_dsputil_init ( & q -> dsp , avctx )"	143:4:2567:2598	4819594	12	True				
ANR	4820194	CallExpression	"ff_dsputil_init ( & q -> dsp , avctx )"		4819594	0					
ANR	4820195	Callee	ff_dsputil_init		4819594	0					
ANR	4820196	Identifier	ff_dsputil_init		4819594	0					
ANR	4820197	ArgumentList	& q -> dsp		4819594	1					
ANR	4820198	Argument	& q -> dsp		4819594	0					
ANR	4820199	UnaryOperationExpression	& q -> dsp		4819594	0					
ANR	4820200	UnaryOperator	&		4819594	0					
ANR	4820201	PtrMemberAccess	q -> dsp		4819594	1					
ANR	4820202	Identifier	q		4819594	0					
ANR	4820203	Identifier	dsp		4819594	1					
ANR	4820204	Argument	avctx		4819594	1					
ANR	4820205	Identifier	avctx		4819594	0					
ANR	4820206	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_FLTP	145:4:2605:2647	4819594	13	True				
ANR	4820207	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_FLTP		4819594	0		=			
ANR	4820208	PtrMemberAccess	avctx -> sample_fmt		4819594	0					
ANR	4820209	Identifier	avctx		4819594	0					
ANR	4820210	Identifier	sample_fmt		4819594	1					
ANR	4820211	Identifier	AV_SAMPLE_FMT_FLTP		4819594	1					
ANR	4820212	ExpressionStatement	avctx -> channel_layout = avctx -> channels == 1 ? AV_CH_LAYOUT_MONO : AV_CH_LAYOUT_STEREO	147:4:2654:2790	4819594	14	True				
ANR	4820213	AssignmentExpression	avctx -> channel_layout = avctx -> channels == 1 ? AV_CH_LAYOUT_MONO : AV_CH_LAYOUT_STEREO		4819594	0		=			
ANR	4820214	PtrMemberAccess	avctx -> channel_layout		4819594	0					
ANR	4820215	Identifier	avctx		4819594	0					
ANR	4820216	Identifier	channel_layout		4819594	1					
ANR	4820217	ConditionalExpression	avctx -> channels == 1 ? AV_CH_LAYOUT_MONO : AV_CH_LAYOUT_STEREO		4819594	1					
ANR	4820218	Condition	avctx -> channels == 1		4819594	0					
ANR	4820219	EqualityExpression	avctx -> channels == 1		4819594	0		==			
ANR	4820220	PtrMemberAccess	avctx -> channels		4819594	0					
ANR	4820221	Identifier	avctx		4819594	0					
ANR	4820222	Identifier	channels		4819594	1					
ANR	4820223	PrimaryExpression	1		4819594	1					
ANR	4820224	Identifier	AV_CH_LAYOUT_MONO		4819594	1					
ANR	4820225	Identifier	AV_CH_LAYOUT_STEREO		4819594	2					
ANR	4820226	ExpressionStatement	avcodec_get_frame_defaults ( & q -> frame )	153:4:2799:2836	4819594	15	True				
ANR	4820227	CallExpression	avcodec_get_frame_defaults ( & q -> frame )		4819594	0					
ANR	4820228	Callee	avcodec_get_frame_defaults		4819594	0					
ANR	4820229	Identifier	avcodec_get_frame_defaults		4819594	0					
ANR	4820230	ArgumentList	& q -> frame		4819594	1					
ANR	4820231	Argument	& q -> frame		4819594	0					
ANR	4820232	UnaryOperationExpression	& q -> frame		4819594	0					
ANR	4820233	UnaryOperator	&		4819594	0					
ANR	4820234	PtrMemberAccess	q -> frame		4819594	1					
ANR	4820235	Identifier	q		4819594	0					
ANR	4820236	Identifier	frame		4819594	1					
ANR	4820237	ExpressionStatement	avctx -> coded_frame = & q -> frame	155:4:2843:2873	4819594	16	True				
ANR	4820238	AssignmentExpression	avctx -> coded_frame = & q -> frame		4819594	0		=			
ANR	4820239	PtrMemberAccess	avctx -> coded_frame		4819594	0					
ANR	4820240	Identifier	avctx		4819594	0					
ANR	4820241	Identifier	coded_frame		4819594	1					
ANR	4820242	UnaryOperationExpression	& q -> frame		4819594	1					
ANR	4820243	UnaryOperator	&		4819594	0					
ANR	4820244	PtrMemberAccess	q -> frame		4819594	1					
ANR	4820245	Identifier	q		4819594	0					
ANR	4820246	Identifier	frame		4819594	1					
ANR	4820247	ReturnStatement	return 0 ;	159:4:2882:2890	4819594	17	True				
ANR	4820248	PrimaryExpression	0		4819594	0					
ANR	4820249	ReturnType	static av_cold int		4819594	1					
ANR	4820250	Identifier	imc_decode_init		4819594	2					
ANR	4820251	ParameterList	AVCodecContext * avctx		4819594	3					
ANR	4820252	Parameter	AVCodecContext * avctx	1:35:35:55	4819594	0	True				
ANR	4820253	ParameterType	AVCodecContext *		4819594	0					
ANR	4820254	Identifier	avctx		4819594	1					
ANR	4820255	CFGEntryNode	ENTRY		4819594		True				
ANR	4820256	CFGExitNode	EXIT		4819594		True				
ANR	4820257	Symbol	r2		4819594						
ANR	4820258	Symbol	q -> chctx [ j ] . old_floor		4819594						
ANR	4820259	Symbol	imc_weights2		4819594						
ANR	4820260	Symbol	imc_weights1		4819594						
ANR	4820261	Symbol	cos		4819594						
ANR	4820262	Symbol	AV_CH_LAYOUT_STEREO		4819594						
ANR	4820263	Symbol	AV_SAMPLE_FMT_FLTP		4819594						
ANR	4820264	Symbol	huffman_vlc [ i ] [ j ] . table_allocated		4819594						
ANR	4820265	Symbol	AV_CODEC_ID_IAC		4819594						
ANR	4820266	Symbol	M_PI		4819594						
ANR	4820267	Symbol	avctx -> channels		4819594						
ANR	4820268	Symbol	AV_CH_LAYOUT_MONO		4819594						
ANR	4820269	Symbol	* huffman_vlc		4819594						
ANR	4820270	Symbol	sqrt		4819594						
ANR	4820271	Symbol	q -> cyclTab2		4819594						
ANR	4820272	Symbol	AV_CODEC_ID_IMC		4819594						
ANR	4820273	Symbol	* * imc_huffman_lens		4819594						
ANR	4820274	Symbol	q -> cyclTab		4819594						
ANR	4820275	Symbol	cyclTab		4819594						
ANR	4820276	Symbol	ret		4819594						
ANR	4820277	Symbol	* * q -> chctx		4819594						
ANR	4820278	Symbol	q -> post_sin		4819594						
ANR	4820279	Symbol	* * j		4819594						
ANR	4820280	Symbol	q -> sqrt_tab		4819594						
ANR	4820281	Symbol	* * i		4819594						
ANR	4820282	Symbol	avctx -> sample_fmt		4819594						
ANR	4820283	Symbol	* q -> post_cos		4819594						
ANR	4820284	Symbol	q -> pre_coef2		4819594						
ANR	4820285	Symbol	q -> pre_coef1		4819594						
ANR	4820286	Symbol	* vlc_offsets		4819594						
ANR	4820287	Symbol	* q -> chctx [ j ] . old_floor		4819594						
ANR	4820288	Symbol	* * * q		4819594						
ANR	4820289	Symbol	* avctx		4819594						
ANR	4820290	Symbol	* q -> chctx		4819594						
ANR	4820291	Symbol	* q -> chctx [ j ] . last_fft_im		4819594						
ANR	4820292	Symbol	AV_LOG_INFO		4819594						
ANR	4820293	Symbol	* imc_huffman_lens		4819594						
ANR	4820294	Symbol	* q -> mdct_sine_window		4819594						
ANR	4820295	Symbol	INIT_VLC_USE_NEW_STATIC		4819594						
ANR	4820296	Symbol	avctx -> codec_id		4819594						
ANR	4820297	Symbol	* q -> pre_coef2		4819594						
ANR	4820298	Symbol	imc_huffman_sizes		4819594						
ANR	4820299	Symbol	* q -> pre_coef1		4819594						
ANR	4820300	Symbol	vlc_tables		4819594						
ANR	4820301	Symbol	ff_fft_init		4819594						
ANR	4820302	Symbol	* * huffman_vlc		4819594						
ANR	4820303	Symbol	imc_huffman_lens		4819594						
ANR	4820304	Symbol	q -> chctx		4819594						
ANR	4820305	Symbol	* imc_huffman_bits		4819594						
ANR	4820306	Symbol	* q -> sqrt_tab		4819594						
ANR	4820307	Symbol	vlc_offsets		4819594						
ANR	4820308	Symbol	imc_huffman_bits		4819594						
ANR	4820309	Symbol	* q -> post_sin		4819594						
ANR	4820310	Symbol	cyclTab2		4819594						
ANR	4820311	Symbol	COEFFS		4819594						
ANR	4820312	Symbol	avctx -> coded_frame		4819594						
ANR	4820313	Symbol	huffman_vlc [ i ] [ j ] . table		4819594						
ANR	4820314	Symbol	AVERROR_PATCHWELCOME		4819594						
ANR	4820315	Symbol	sin		4819594						
ANR	4820316	Symbol	* * q		4819594						
ANR	4820317	Symbol	avctx		4819594						
ANR	4820318	Symbol	* * imc_huffman_bits		4819594						
ANR	4820319	Symbol	huffman_vlc		4819594						
ANR	4820320	Symbol	q -> weights2		4819594						
ANR	4820321	Symbol	i		4819594						
ANR	4820322	Symbol	q -> weights1		4819594						
ANR	4820323	Symbol	avctx -> channel_layout		4819594						
ANR	4820324	Symbol	j		4819594						
ANR	4820325	Symbol	& q -> fft		4819594						
ANR	4820326	Symbol	avctx -> priv_data		4819594						
ANR	4820327	Symbol	avctx -> sample_rate		4819594						
ANR	4820328	Symbol	q -> chctx [ j ] . decoder_reset		4819594						
ANR	4820329	Symbol	q		4819594						
ANR	4820330	Symbol	q -> mdct_sine_window		4819594						
ANR	4820331	Symbol	q -> post_cos		4819594						
ANR	4820332	Symbol	q -> chctx [ j ] . last_fft_im		4819594						
ANR	4820333	Symbol	* i		4819594						
ANR	4820334	Symbol	* j		4819594						
ANR	4820335	Symbol	& q -> frame		4819594						
ANR	4820336	Symbol	* imc_huffman_sizes		4819594						
ANR	4820337	Symbol	* q		4819594						
ANR	4820338	Symbol	BANDS		4819594						
ANR	4820339	Symbol	r1		4819594						
ANR	4820340	Symbol	& q -> dsp		4819594						
