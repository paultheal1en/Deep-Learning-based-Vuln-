command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5423234	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mem_info_1.c								
ANR	5423235	Function	mem_info	1:0:0:1538							
ANR	5423236	FunctionDef	mem_info (Monitor * mon)		5423235	0					
ANR	5423237	CompoundStatement		3:0:36:1538	5423235	0					
ANR	5423238	IdentifierDeclStatement	CPUState * env ;	5:4:43:56	5423235	0	True				
ANR	5423239	IdentifierDecl	* env		5423235	0					
ANR	5423240	IdentifierDeclType	CPUState *		5423235	0					
ANR	5423241	Identifier	env		5423235	1					
ANR	5423242	IdentifierDeclStatement	"int l1 , l2 , prot , last_prot ;"	7:4:63:90	5423235	1	True				
ANR	5423243	IdentifierDecl	l1		5423235	0					
ANR	5423244	IdentifierDeclType	int		5423235	0					
ANR	5423245	Identifier	l1		5423235	1					
ANR	5423246	IdentifierDecl	l2		5423235	1					
ANR	5423247	IdentifierDeclType	int		5423235	0					
ANR	5423248	Identifier	l2		5423235	1					
ANR	5423249	IdentifierDecl	prot		5423235	2					
ANR	5423250	IdentifierDeclType	int		5423235	0					
ANR	5423251	Identifier	prot		5423235	1					
ANR	5423252	IdentifierDecl	last_prot		5423235	3					
ANR	5423253	IdentifierDeclType	int		5423235	0					
ANR	5423254	Identifier	last_prot		5423235	1					
ANR	5423255	IdentifierDeclStatement	"uint32_t pgd , pde , pte , start , end ;"	9:4:97:131	5423235	2	True				
ANR	5423256	IdentifierDecl	pgd		5423235	0					
ANR	5423257	IdentifierDeclType	uint32_t		5423235	0					
ANR	5423258	Identifier	pgd		5423235	1					
ANR	5423259	IdentifierDecl	pde		5423235	1					
ANR	5423260	IdentifierDeclType	uint32_t		5423235	0					
ANR	5423261	Identifier	pde		5423235	1					
ANR	5423262	IdentifierDecl	pte		5423235	2					
ANR	5423263	IdentifierDeclType	uint32_t		5423235	0					
ANR	5423264	Identifier	pte		5423235	1					
ANR	5423265	IdentifierDecl	start		5423235	3					
ANR	5423266	IdentifierDeclType	uint32_t		5423235	0					
ANR	5423267	Identifier	start		5423235	1					
ANR	5423268	IdentifierDecl	end		5423235	4					
ANR	5423269	IdentifierDeclType	uint32_t		5423235	0					
ANR	5423270	Identifier	end		5423235	1					
ANR	5423271	ExpressionStatement	env = mon_get_cpu ( )	13:4:140:159	5423235	3	True				
ANR	5423272	AssignmentExpression	env = mon_get_cpu ( )		5423235	0		=			
ANR	5423273	Identifier	env		5423235	0					
ANR	5423274	CallExpression	mon_get_cpu ( )		5423235	1					
ANR	5423275	Callee	mon_get_cpu		5423235	0					
ANR	5423276	Identifier	mon_get_cpu		5423235	0					
ANR	5423277	ArgumentList			5423235	1					
ANR	5423278	IfStatement	if ( ! env )		5423235	4					
ANR	5423279	Condition	! env	15:8:170:173	5423235	0	True				
ANR	5423280	UnaryOperationExpression	! env		5423235	0					
ANR	5423281	UnaryOperator	!		5423235	0					
ANR	5423282	Identifier	env		5423235	1					
ANR	5423283	ReturnStatement	return ;	17:8:185:191	5423235	1	True				
ANR	5423284	IfStatement	if ( ! ( env -> cr [ 0 ] & CR0_PG_MASK ) )		5423235	5					
ANR	5423285	Condition	! ( env -> cr [ 0 ] & CR0_PG_MASK )	21:8:204:230	5423235	0	True				
ANR	5423286	UnaryOperationExpression	! ( env -> cr [ 0 ] & CR0_PG_MASK )		5423235	0					
ANR	5423287	UnaryOperator	!		5423235	0					
ANR	5423288	BitAndExpression	env -> cr [ 0 ] & CR0_PG_MASK		5423235	1		&			
ANR	5423289	ArrayIndexing	env -> cr [ 0 ]		5423235	0					
ANR	5423290	PtrMemberAccess	env -> cr		5423235	0					
ANR	5423291	Identifier	env		5423235	0					
ANR	5423292	Identifier	cr		5423235	1					
ANR	5423293	PrimaryExpression	0		5423235	1					
ANR	5423294	Identifier	CR0_PG_MASK		5423235	1					
ANR	5423295	CompoundStatement		19:37:196:196	5423235	1					
ANR	5423296	ExpressionStatement	"monitor_printf ( mon , ""PG disabled\\n"" )"	23:8:244:280	5423235	0	True				
ANR	5423297	CallExpression	"monitor_printf ( mon , ""PG disabled\\n"" )"		5423235	0					
ANR	5423298	Callee	monitor_printf		5423235	0					
ANR	5423299	Identifier	monitor_printf		5423235	0					
ANR	5423300	ArgumentList	mon		5423235	1					
ANR	5423301	Argument	mon		5423235	0					
ANR	5423302	Identifier	mon		5423235	0					
ANR	5423303	Argument	"""PG disabled\\n"""		5423235	1					
ANR	5423304	PrimaryExpression	"""PG disabled\\n"""		5423235	0					
ANR	5423305	ReturnStatement	return ;	25:8:291:297	5423235	1	True				
ANR	5423306	ExpressionStatement	pgd = env -> cr [ 3 ] & ~0xfff	29:4:311:336	5423235	6	True				
ANR	5423307	AssignmentExpression	pgd = env -> cr [ 3 ] & ~0xfff		5423235	0		=			
ANR	5423308	Identifier	pgd		5423235	0					
ANR	5423309	BitAndExpression	env -> cr [ 3 ] & ~0xfff		5423235	1		&			
ANR	5423310	ArrayIndexing	env -> cr [ 3 ]		5423235	0					
ANR	5423311	PtrMemberAccess	env -> cr		5423235	0					
ANR	5423312	Identifier	env		5423235	0					
ANR	5423313	Identifier	cr		5423235	1					
ANR	5423314	PrimaryExpression	3		5423235	1					
ANR	5423315	Identifier	~0xfff		5423235	1					
ANR	5423316	ExpressionStatement	last_prot = 0	31:4:343:356	5423235	7	True				
ANR	5423317	AssignmentExpression	last_prot = 0		5423235	0		=			
ANR	5423318	Identifier	last_prot		5423235	0					
ANR	5423319	PrimaryExpression	0		5423235	1					
ANR	5423320	ExpressionStatement	start = - 1	33:4:363:373	5423235	8	True				
ANR	5423321	AssignmentExpression	start = - 1		5423235	0		=			
ANR	5423322	Identifier	start		5423235	0					
ANR	5423323	UnaryOperationExpression	- 1		5423235	1					
ANR	5423324	UnaryOperator	-		5423235	0					
ANR	5423325	PrimaryExpression	1		5423235	1					
ANR	5423326	ForStatement	for ( l1 = 0 ; l1 < 1024 ; l1 ++ )		5423235	9					
ANR	5423327	ForInit	l1 = 0 ;	35:8:384:390	5423235	0	True				
ANR	5423328	AssignmentExpression	l1 = 0		5423235	0		=			
ANR	5423329	Identifier	l1		5423235	0					
ANR	5423330	PrimaryExpression	0		5423235	1					
ANR	5423331	Condition	l1 < 1024	35:16:392:400	5423235	1	True				
ANR	5423332	RelationalExpression	l1 < 1024		5423235	0		<			
ANR	5423333	Identifier	l1		5423235	0					
ANR	5423334	PrimaryExpression	1024		5423235	1					
ANR	5423335	PostIncDecOperationExpression	l1 ++	35:27:403:406	5423235	2	True				
ANR	5423336	Identifier	l1		5423235	0					
ANR	5423337	IncDec	++		5423235	1					
ANR	5423338	CompoundStatement		33:33:372:372	5423235	3					
ANR	5423339	ExpressionStatement	"cpu_physical_memory_read ( pgd + l1 * 4 , ( uint8_t * ) & pde , 4 )"	37:8:420:478	5423235	0	True				
ANR	5423340	CallExpression	"cpu_physical_memory_read ( pgd + l1 * 4 , ( uint8_t * ) & pde , 4 )"		5423235	0					
ANR	5423341	Callee	cpu_physical_memory_read		5423235	0					
ANR	5423342	Identifier	cpu_physical_memory_read		5423235	0					
ANR	5423343	ArgumentList	pgd + l1 * 4		5423235	1					
ANR	5423344	Argument	pgd + l1 * 4		5423235	0					
ANR	5423345	AdditiveExpression	pgd + l1 * 4		5423235	0		+			
ANR	5423346	Identifier	pgd		5423235	0					
ANR	5423347	MultiplicativeExpression	l1 * 4		5423235	1		*			
ANR	5423348	Identifier	l1		5423235	0					
ANR	5423349	PrimaryExpression	4		5423235	1					
ANR	5423350	Argument	( uint8_t * ) & pde		5423235	1					
ANR	5423351	CastExpression	( uint8_t * ) & pde		5423235	0					
ANR	5423352	CastTarget	uint8_t *		5423235	0					
ANR	5423353	UnaryOperationExpression	& pde		5423235	1					
ANR	5423354	UnaryOperator	&		5423235	0					
ANR	5423355	Identifier	pde		5423235	1					
ANR	5423356	Argument	4		5423235	2					
ANR	5423357	PrimaryExpression	4		5423235	0					
ANR	5423358	ExpressionStatement	pde = le32_to_cpu ( pde )	39:8:489:511	5423235	1	True				
ANR	5423359	AssignmentExpression	pde = le32_to_cpu ( pde )		5423235	0		=			
ANR	5423360	Identifier	pde		5423235	0					
ANR	5423361	CallExpression	le32_to_cpu ( pde )		5423235	1					
ANR	5423362	Callee	le32_to_cpu		5423235	0					
ANR	5423363	Identifier	le32_to_cpu		5423235	0					
ANR	5423364	ArgumentList	pde		5423235	1					
ANR	5423365	Argument	pde		5423235	0					
ANR	5423366	Identifier	pde		5423235	0					
ANR	5423367	ExpressionStatement	end = l1 << 22	41:8:522:536	5423235	2	True				
ANR	5423368	AssignmentExpression	end = l1 << 22		5423235	0		=			
ANR	5423369	Identifier	end		5423235	0					
ANR	5423370	ShiftExpression	l1 << 22		5423235	1		<<			
ANR	5423371	Identifier	l1		5423235	0					
ANR	5423372	PrimaryExpression	22		5423235	1					
ANR	5423373	IfStatement	if ( pde & PG_PRESENT_MASK )		5423235	3					
ANR	5423374	Condition	pde & PG_PRESENT_MASK	43:12:551:571	5423235	0	True				
ANR	5423375	BitAndExpression	pde & PG_PRESENT_MASK		5423235	0		&			
ANR	5423376	Identifier	pde		5423235	0					
ANR	5423377	Identifier	PG_PRESENT_MASK		5423235	1					
ANR	5423378	CompoundStatement		41:35:537:537	5423235	1					
ANR	5423379	IfStatement	if ( ( pde & PG_PSE_MASK ) && ( env -> cr [ 4 ] & CR4_PSE_MASK ) )		5423235	0					
ANR	5423380	Condition	( pde & PG_PSE_MASK ) && ( env -> cr [ 4 ] & CR4_PSE_MASK )	45:16:593:642	5423235	0	True				
ANR	5423381	AndExpression	( pde & PG_PSE_MASK ) && ( env -> cr [ 4 ] & CR4_PSE_MASK )		5423235	0		&&			
ANR	5423382	BitAndExpression	pde & PG_PSE_MASK		5423235	0		&			
ANR	5423383	Identifier	pde		5423235	0					
ANR	5423384	Identifier	PG_PSE_MASK		5423235	1					
ANR	5423385	BitAndExpression	env -> cr [ 4 ] & CR4_PSE_MASK		5423235	1		&			
ANR	5423386	ArrayIndexing	env -> cr [ 4 ]		5423235	0					
ANR	5423387	PtrMemberAccess	env -> cr		5423235	0					
ANR	5423388	Identifier	env		5423235	0					
ANR	5423389	Identifier	cr		5423235	1					
ANR	5423390	PrimaryExpression	4		5423235	1					
ANR	5423391	Identifier	CR4_PSE_MASK		5423235	1					
ANR	5423392	CompoundStatement		43:68:608:608	5423235	1					
ANR	5423393	ExpressionStatement	prot = pde & ( PG_USER_MASK | PG_RW_MASK | PG_PRESENT_MASK )	47:16:664:722	5423235	0	True				
ANR	5423394	AssignmentExpression	prot = pde & ( PG_USER_MASK | PG_RW_MASK | PG_PRESENT_MASK )		5423235	0		=			
ANR	5423395	Identifier	prot		5423235	0					
ANR	5423396	BitAndExpression	pde & ( PG_USER_MASK | PG_RW_MASK | PG_PRESENT_MASK )		5423235	1		&			
ANR	5423397	Identifier	pde		5423235	0					
ANR	5423398	InclusiveOrExpression	PG_USER_MASK | PG_RW_MASK | PG_PRESENT_MASK		5423235	1		|			
ANR	5423399	Identifier	PG_USER_MASK		5423235	0					
ANR	5423400	InclusiveOrExpression	PG_RW_MASK | PG_PRESENT_MASK		5423235	1		|			
ANR	5423401	Identifier	PG_RW_MASK		5423235	0					
ANR	5423402	Identifier	PG_PRESENT_MASK		5423235	1					
ANR	5423403	ExpressionStatement	"mem_print ( mon , & start , & last_prot , end , prot )"	49:16:741:786	5423235	1	True				
ANR	5423404	CallExpression	"mem_print ( mon , & start , & last_prot , end , prot )"		5423235	0					
ANR	5423405	Callee	mem_print		5423235	0					
ANR	5423406	Identifier	mem_print		5423235	0					
ANR	5423407	ArgumentList	mon		5423235	1					
ANR	5423408	Argument	mon		5423235	0					
ANR	5423409	Identifier	mon		5423235	0					
ANR	5423410	Argument	& start		5423235	1					
ANR	5423411	UnaryOperationExpression	& start		5423235	0					
ANR	5423412	UnaryOperator	&		5423235	0					
ANR	5423413	Identifier	start		5423235	1					
ANR	5423414	Argument	& last_prot		5423235	2					
ANR	5423415	UnaryOperationExpression	& last_prot		5423235	0					
ANR	5423416	UnaryOperator	&		5423235	0					
ANR	5423417	Identifier	last_prot		5423235	1					
ANR	5423418	Argument	end		5423235	3					
ANR	5423419	Identifier	end		5423235	0					
ANR	5423420	Argument	prot		5423235	4					
ANR	5423421	Identifier	prot		5423235	0					
ANR	5423422	ElseStatement	else		5423235	0					
ANR	5423423	CompoundStatement		49:19:771:771	5423235	0					
ANR	5423424	ForStatement	for ( l2 = 0 ; l2 < 1024 ; l2 ++ )		5423235	0					
ANR	5423425	ForInit	l2 = 0 ;	53:20:831:837	5423235	0	True				
ANR	5423426	AssignmentExpression	l2 = 0		5423235	0		=			
ANR	5423427	Identifier	l2		5423235	0					
ANR	5423428	PrimaryExpression	0		5423235	1					
ANR	5423429	Condition	l2 < 1024	53:28:839:847	5423235	1	True				
ANR	5423430	RelationalExpression	l2 < 1024		5423235	0		<			
ANR	5423431	Identifier	l2		5423235	0					
ANR	5423432	PrimaryExpression	1024		5423235	1					
ANR	5423433	PostIncDecOperationExpression	l2 ++	53:39:850:853	5423235	2	True				
ANR	5423434	Identifier	l2		5423235	0					
ANR	5423435	IncDec	++		5423235	1					
ANR	5423436	CompoundStatement		51:45:819:819	5423235	3					
ANR	5423437	ExpressionStatement	"cpu_physical_memory_read ( ( pde & ~0xfff ) + l2 * 4 , ( uint8_t * ) & pte , 4 )"	55:20:879:994	5423235	0	True				
ANR	5423438	CallExpression	"cpu_physical_memory_read ( ( pde & ~0xfff ) + l2 * 4 , ( uint8_t * ) & pte , 4 )"		5423235	0					
ANR	5423439	Callee	cpu_physical_memory_read		5423235	0					
ANR	5423440	Identifier	cpu_physical_memory_read		5423235	0					
ANR	5423441	ArgumentList	( pde & ~0xfff ) + l2 * 4		5423235	1					
ANR	5423442	Argument	( pde & ~0xfff ) + l2 * 4		5423235	0					
ANR	5423443	AdditiveExpression	( pde & ~0xfff ) + l2 * 4		5423235	0		+			
ANR	5423444	BitAndExpression	pde & ~0xfff		5423235	0		&			
ANR	5423445	Identifier	pde		5423235	0					
ANR	5423446	Identifier	~0xfff		5423235	1					
ANR	5423447	MultiplicativeExpression	l2 * 4		5423235	1		*			
ANR	5423448	Identifier	l2		5423235	0					
ANR	5423449	PrimaryExpression	4		5423235	1					
ANR	5423450	Argument	( uint8_t * ) & pte		5423235	1					
ANR	5423451	CastExpression	( uint8_t * ) & pte		5423235	0					
ANR	5423452	CastTarget	uint8_t *		5423235	0					
ANR	5423453	UnaryOperationExpression	& pte		5423235	1					
ANR	5423454	UnaryOperator	&		5423235	0					
ANR	5423455	Identifier	pte		5423235	1					
ANR	5423456	Argument	4		5423235	2					
ANR	5423457	PrimaryExpression	4		5423235	0					
ANR	5423458	ExpressionStatement	pte = le32_to_cpu ( pte )	59:20:1017:1039	5423235	1	True				
ANR	5423459	AssignmentExpression	pte = le32_to_cpu ( pte )		5423235	0		=			
ANR	5423460	Identifier	pte		5423235	0					
ANR	5423461	CallExpression	le32_to_cpu ( pte )		5423235	1					
ANR	5423462	Callee	le32_to_cpu		5423235	0					
ANR	5423463	Identifier	le32_to_cpu		5423235	0					
ANR	5423464	ArgumentList	pte		5423235	1					
ANR	5423465	Argument	pte		5423235	0					
ANR	5423466	Identifier	pte		5423235	0					
ANR	5423467	ExpressionStatement	end = ( l1 << 22 ) + ( l2 << 12 )	61:20:1062:1091	5423235	2	True				
ANR	5423468	AssignmentExpression	end = ( l1 << 22 ) + ( l2 << 12 )		5423235	0		=			
ANR	5423469	Identifier	end		5423235	0					
ANR	5423470	AdditiveExpression	( l1 << 22 ) + ( l2 << 12 )		5423235	1		+			
ANR	5423471	ShiftExpression	l1 << 22		5423235	0		<<			
ANR	5423472	Identifier	l1		5423235	0					
ANR	5423473	PrimaryExpression	22		5423235	1					
ANR	5423474	ShiftExpression	l2 << 12		5423235	1		<<			
ANR	5423475	Identifier	l2		5423235	0					
ANR	5423476	PrimaryExpression	12		5423235	1					
ANR	5423477	IfStatement	if ( pte & PG_PRESENT_MASK )		5423235	3					
ANR	5423478	Condition	pte & PG_PRESENT_MASK	63:24:1118:1138	5423235	0	True				
ANR	5423479	BitAndExpression	pte & PG_PRESENT_MASK		5423235	0		&			
ANR	5423480	Identifier	pte		5423235	0					
ANR	5423481	Identifier	PG_PRESENT_MASK		5423235	1					
ANR	5423482	CompoundStatement		61:47:1104:1104	5423235	1					
ANR	5423483	ExpressionStatement	prot = pte & ( PG_USER_MASK | PG_RW_MASK | PG_PRESENT_MASK )	65:24:1168:1226	5423235	0	True				
ANR	5423484	AssignmentExpression	prot = pte & ( PG_USER_MASK | PG_RW_MASK | PG_PRESENT_MASK )		5423235	0		=			
ANR	5423485	Identifier	prot		5423235	0					
ANR	5423486	BitAndExpression	pte & ( PG_USER_MASK | PG_RW_MASK | PG_PRESENT_MASK )		5423235	1		&			
ANR	5423487	Identifier	pte		5423235	0					
ANR	5423488	InclusiveOrExpression	PG_USER_MASK | PG_RW_MASK | PG_PRESENT_MASK		5423235	1		|			
ANR	5423489	Identifier	PG_USER_MASK		5423235	0					
ANR	5423490	InclusiveOrExpression	PG_RW_MASK | PG_PRESENT_MASK		5423235	1		|			
ANR	5423491	Identifier	PG_RW_MASK		5423235	0					
ANR	5423492	Identifier	PG_PRESENT_MASK		5423235	1					
ANR	5423493	ElseStatement	else		5423235	0					
ANR	5423494	CompoundStatement		65:27:1219:1219	5423235	0					
ANR	5423495	ExpressionStatement	prot = 0	69:24:1283:1291	5423235	0	True				
ANR	5423496	AssignmentExpression	prot = 0		5423235	0		=			
ANR	5423497	Identifier	prot		5423235	0					
ANR	5423498	PrimaryExpression	0		5423235	1					
ANR	5423499	ExpressionStatement	"mem_print ( mon , & start , & last_prot , end , prot )"	73:20:1337:1382	5423235	4	True				
ANR	5423500	CallExpression	"mem_print ( mon , & start , & last_prot , end , prot )"		5423235	0					
ANR	5423501	Callee	mem_print		5423235	0					
ANR	5423502	Identifier	mem_print		5423235	0					
ANR	5423503	ArgumentList	mon		5423235	1					
ANR	5423504	Argument	mon		5423235	0					
ANR	5423505	Identifier	mon		5423235	0					
ANR	5423506	Argument	& start		5423235	1					
ANR	5423507	UnaryOperationExpression	& start		5423235	0					
ANR	5423508	UnaryOperator	&		5423235	0					
ANR	5423509	Identifier	start		5423235	1					
ANR	5423510	Argument	& last_prot		5423235	2					
ANR	5423511	UnaryOperationExpression	& last_prot		5423235	0					
ANR	5423512	UnaryOperator	&		5423235	0					
ANR	5423513	Identifier	last_prot		5423235	1					
ANR	5423514	Argument	end		5423235	3					
ANR	5423515	Identifier	end		5423235	0					
ANR	5423516	Argument	prot		5423235	4					
ANR	5423517	Identifier	prot		5423235	0					
ANR	5423518	ElseStatement	else		5423235	0					
ANR	5423519	CompoundStatement		77:15:1397:1397	5423235	0					
ANR	5423520	ExpressionStatement	prot = 0	81:12:1449:1457	5423235	0	True				
ANR	5423521	AssignmentExpression	prot = 0		5423235	0		=			
ANR	5423522	Identifier	prot		5423235	0					
ANR	5423523	PrimaryExpression	0		5423235	1					
ANR	5423524	ExpressionStatement	"mem_print ( mon , & start , & last_prot , end , prot )"	83:12:1472:1517	5423235	1	True				
ANR	5423525	CallExpression	"mem_print ( mon , & start , & last_prot , end , prot )"		5423235	0					
ANR	5423526	Callee	mem_print		5423235	0					
ANR	5423527	Identifier	mem_print		5423235	0					
ANR	5423528	ArgumentList	mon		5423235	1					
ANR	5423529	Argument	mon		5423235	0					
ANR	5423530	Identifier	mon		5423235	0					
ANR	5423531	Argument	& start		5423235	1					
ANR	5423532	UnaryOperationExpression	& start		5423235	0					
ANR	5423533	UnaryOperator	&		5423235	0					
ANR	5423534	Identifier	start		5423235	1					
ANR	5423535	Argument	& last_prot		5423235	2					
ANR	5423536	UnaryOperationExpression	& last_prot		5423235	0					
ANR	5423537	UnaryOperator	&		5423235	0					
ANR	5423538	Identifier	last_prot		5423235	1					
ANR	5423539	Argument	end		5423235	3					
ANR	5423540	Identifier	end		5423235	0					
ANR	5423541	Argument	prot		5423235	4					
ANR	5423542	Identifier	prot		5423235	0					
ANR	5423543	ReturnType	static void		5423235	1					
ANR	5423544	Identifier	mem_info		5423235	2					
ANR	5423545	ParameterList	Monitor * mon		5423235	3					
ANR	5423546	Parameter	Monitor * mon	1:21:21:32	5423235	0	True				
ANR	5423547	ParameterType	Monitor *		5423235	0					
ANR	5423548	Identifier	mon		5423235	1					
ANR	5423549	CFGEntryNode	ENTRY		5423235		True				
ANR	5423550	CFGExitNode	EXIT		5423235		True				
ANR	5423551	Symbol	& pte		5423235						
ANR	5423552	Symbol	* * env		5423235						
ANR	5423553	Symbol	l1		5423235						
ANR	5423554	Symbol	l2		5423235						
ANR	5423555	Symbol	pgd		5423235						
ANR	5423556	Symbol	mon		5423235						
ANR	5423557	Symbol	last_prot		5423235						
ANR	5423558	Symbol	PG_RW_MASK		5423235						
ANR	5423559	Symbol	* env -> cr		5423235						
ANR	5423560	Symbol	& pde		5423235						
ANR	5423561	Symbol	prot		5423235						
ANR	5423562	Symbol	le32_to_cpu		5423235						
ANR	5423563	Symbol	PG_PRESENT_MASK		5423235						
ANR	5423564	Symbol	env -> cr		5423235						
ANR	5423565	Symbol	end		5423235						
ANR	5423566	Symbol	PG_USER_MASK		5423235						
ANR	5423567	Symbol	pte		5423235						
ANR	5423568	Symbol	start		5423235						
ANR	5423569	Symbol	* env		5423235						
ANR	5423570	Symbol	CR0_PG_MASK		5423235						
ANR	5423571	Symbol	& last_prot		5423235						
ANR	5423572	Symbol	PG_PSE_MASK		5423235						
ANR	5423573	Symbol	env		5423235						
ANR	5423574	Symbol	pde		5423235						
ANR	5423575	Symbol	CR4_PSE_MASK		5423235						
ANR	5423576	Symbol	mon_get_cpu		5423235						
ANR	5423577	Symbol	& start		5423235						
ANR	5423578	Symbol	~0xfff		5423235						
