command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5566294	File	/home/p4ultr4n/workplace/ReVeal/raw_code/monitor_parse_0.c								
ANR	5566295	Function	monitor_parse	1:0:0:1128							
ANR	5566296	FunctionDef	"monitor_parse (const char * optarg , const char * mode , bool pretty)"		5566295	0					
ANR	5566297	CompoundStatement		3:0:78:1128	5566295	0					
ANR	5566298	Statement	static	5:4:85:90	5566295	0	True				
ANR	5566299	IdentifierDeclStatement	int monitor_device_index = 0 ;	5:11:92:120	5566295	1	True				
ANR	5566300	IdentifierDecl	monitor_device_index = 0		5566295	0					
ANR	5566301	IdentifierDeclType	int		5566295	0					
ANR	5566302	Identifier	monitor_device_index		5566295	1					
ANR	5566303	AssignmentExpression	monitor_device_index = 0		5566295	2		=			
ANR	5566304	Identifier	monitor_device_index		5566295	0					
ANR	5566305	PrimaryExpression	0		5566295	1					
ANR	5566306	IdentifierDeclStatement	Error * local_err = NULL ;	7:4:127:150	5566295	2	True				
ANR	5566307	IdentifierDecl	* local_err = NULL		5566295	0					
ANR	5566308	IdentifierDeclType	Error *		5566295	0					
ANR	5566309	Identifier	local_err		5566295	1					
ANR	5566310	AssignmentExpression	* local_err = NULL		5566295	2		=			
ANR	5566311	Identifier	NULL		5566295	0					
ANR	5566312	Identifier	NULL		5566295	1					
ANR	5566313	IdentifierDeclStatement	QemuOpts * opts ;	9:4:157:171	5566295	3	True				
ANR	5566314	IdentifierDecl	* opts		5566295	0					
ANR	5566315	IdentifierDeclType	QemuOpts *		5566295	0					
ANR	5566316	Identifier	opts		5566295	1					
ANR	5566317	IdentifierDeclStatement	const char * p ;	11:4:178:191	5566295	4	True				
ANR	5566318	IdentifierDecl	* p		5566295	0					
ANR	5566319	IdentifierDeclType	const char *		5566295	0					
ANR	5566320	Identifier	p		5566295	1					
ANR	5566321	IdentifierDeclStatement	char label [ 32 ] ;	13:4:198:212	5566295	5	True				
ANR	5566322	IdentifierDecl	label [ 32 ]		5566295	0					
ANR	5566323	IdentifierDeclType	char [ 32 ]		5566295	0					
ANR	5566324	Identifier	label		5566295	1					
ANR	5566325	PrimaryExpression	32		5566295	2					
ANR	5566326	IdentifierDeclStatement	int def = 0 ;	15:4:219:230	5566295	6	True				
ANR	5566327	IdentifierDecl	def = 0		5566295	0					
ANR	5566328	IdentifierDeclType	int		5566295	0					
ANR	5566329	Identifier	def		5566295	1					
ANR	5566330	AssignmentExpression	def = 0		5566295	2		=			
ANR	5566331	Identifier	def		5566295	0					
ANR	5566332	PrimaryExpression	0		5566295	1					
ANR	5566333	IfStatement	"if ( strstart ( optarg , ""chardev:"" , & p ) )"		5566295	7					
ANR	5566334	Condition	"strstart ( optarg , ""chardev:"" , & p )"	19:8:243:274	5566295	0	True				
ANR	5566335	CallExpression	"strstart ( optarg , ""chardev:"" , & p )"		5566295	0					
ANR	5566336	Callee	strstart		5566295	0					
ANR	5566337	Identifier	strstart		5566295	0					
ANR	5566338	ArgumentList	optarg		5566295	1					
ANR	5566339	Argument	optarg		5566295	0					
ANR	5566340	Identifier	optarg		5566295	0					
ANR	5566341	Argument	"""chardev:"""		5566295	1					
ANR	5566342	PrimaryExpression	"""chardev:"""		5566295	0					
ANR	5566343	Argument	& p		5566295	2					
ANR	5566344	UnaryOperationExpression	& p		5566295	0					
ANR	5566345	UnaryOperator	&		5566295	0					
ANR	5566346	Identifier	p		5566295	1					
ANR	5566347	CompoundStatement		17:42:198:198	5566295	1					
ANR	5566348	ExpressionStatement	"snprintf ( label , sizeof ( label ) , ""%s"" , p )"	21:8:288:327	5566295	0	True				
ANR	5566349	CallExpression	"snprintf ( label , sizeof ( label ) , ""%s"" , p )"		5566295	0					
ANR	5566350	Callee	snprintf		5566295	0					
ANR	5566351	Identifier	snprintf		5566295	0					
ANR	5566352	ArgumentList	label		5566295	1					
ANR	5566353	Argument	label		5566295	0					
ANR	5566354	Identifier	label		5566295	0					
ANR	5566355	Argument	sizeof ( label )		5566295	1					
ANR	5566356	SizeofExpression	sizeof ( label )		5566295	0					
ANR	5566357	Sizeof	sizeof		5566295	0					
ANR	5566358	SizeofOperand	label		5566295	1					
ANR	5566359	Argument	"""%s"""		5566295	2					
ANR	5566360	PrimaryExpression	"""%s"""		5566295	0					
ANR	5566361	Argument	p		5566295	3					
ANR	5566362	Identifier	p		5566295	0					
ANR	5566363	ElseStatement	else		5566295	0					
ANR	5566364	CompoundStatement		21:11:262:262	5566295	0					
ANR	5566365	ExpressionStatement	"snprintf ( label , sizeof ( label ) , ""compat_monitor%d"" , monitor_device_index )"	25:8:352:442	5566295	0	True				
ANR	5566366	CallExpression	"snprintf ( label , sizeof ( label ) , ""compat_monitor%d"" , monitor_device_index )"		5566295	0					
ANR	5566367	Callee	snprintf		5566295	0					
ANR	5566368	Identifier	snprintf		5566295	0					
ANR	5566369	ArgumentList	label		5566295	1					
ANR	5566370	Argument	label		5566295	0					
ANR	5566371	Identifier	label		5566295	0					
ANR	5566372	Argument	sizeof ( label )		5566295	1					
ANR	5566373	SizeofExpression	sizeof ( label )		5566295	0					
ANR	5566374	Sizeof	sizeof		5566295	0					
ANR	5566375	SizeofOperand	label		5566295	1					
ANR	5566376	Argument	"""compat_monitor%d"""		5566295	2					
ANR	5566377	PrimaryExpression	"""compat_monitor%d"""		5566295	0					
ANR	5566378	Argument	monitor_device_index		5566295	3					
ANR	5566379	Identifier	monitor_device_index		5566295	0					
ANR	5566380	IfStatement	if ( monitor_device_index == 0 )		5566295	1					
ANR	5566381	Condition	monitor_device_index == 0	29:12:457:481	5566295	0	True				
ANR	5566382	EqualityExpression	monitor_device_index == 0		5566295	0		==			
ANR	5566383	Identifier	monitor_device_index		5566295	0					
ANR	5566384	PrimaryExpression	0		5566295	1					
ANR	5566385	CompoundStatement		27:39:405:405	5566295	1					
ANR	5566386	ExpressionStatement	def = 1	31:12:499:506	5566295	0	True				
ANR	5566387	AssignmentExpression	def = 1		5566295	0		=			
ANR	5566388	Identifier	def		5566295	0					
ANR	5566389	PrimaryExpression	1		5566295	1					
ANR	5566390	ExpressionStatement	"opts = qemu_chr_parse_compat ( label , optarg )"	35:8:528:571	5566295	2	True				
ANR	5566391	AssignmentExpression	"opts = qemu_chr_parse_compat ( label , optarg )"		5566295	0		=			
ANR	5566392	Identifier	opts		5566295	0					
ANR	5566393	CallExpression	"qemu_chr_parse_compat ( label , optarg )"		5566295	1					
ANR	5566394	Callee	qemu_chr_parse_compat		5566295	0					
ANR	5566395	Identifier	qemu_chr_parse_compat		5566295	0					
ANR	5566396	ArgumentList	label		5566295	1					
ANR	5566397	Argument	label		5566295	0					
ANR	5566398	Identifier	label		5566295	0					
ANR	5566399	Argument	optarg		5566295	1					
ANR	5566400	Identifier	optarg		5566295	0					
ANR	5566401	IfStatement	if ( ! opts )		5566295	3					
ANR	5566402	Condition	! opts	37:12:586:590	5566295	0	True				
ANR	5566403	UnaryOperationExpression	! opts		5566295	0					
ANR	5566404	UnaryOperator	!		5566295	0					
ANR	5566405	Identifier	opts		5566295	1					
ANR	5566406	CompoundStatement		35:19:514:514	5566295	1					
ANR	5566407	ExpressionStatement	"fprintf ( stderr , ""parse error: %s\\n"" , optarg )"	39:12:608:652	5566295	0	True				
ANR	5566408	CallExpression	"fprintf ( stderr , ""parse error: %s\\n"" , optarg )"		5566295	0					
ANR	5566409	Callee	fprintf		5566295	0					
ANR	5566410	Identifier	fprintf		5566295	0					
ANR	5566411	ArgumentList	stderr		5566295	1					
ANR	5566412	Argument	stderr		5566295	0					
ANR	5566413	Identifier	stderr		5566295	0					
ANR	5566414	Argument	"""parse error: %s\\n"""		5566295	1					
ANR	5566415	PrimaryExpression	"""parse error: %s\\n"""		5566295	0					
ANR	5566416	Argument	optarg		5566295	2					
ANR	5566417	Identifier	optarg		5566295	0					
ANR	5566418	ExpressionStatement	exit ( 1 )	41:12:667:674	5566295	1	True				
ANR	5566419	CallExpression	exit ( 1 )		5566295	0					
ANR	5566420	Callee	exit		5566295	0					
ANR	5566421	Identifier	exit		5566295	0					
ANR	5566422	ArgumentList	1		5566295	1					
ANR	5566423	Argument	1		5566295	0					
ANR	5566424	PrimaryExpression	1		5566295	0					
ANR	5566425	ExpressionStatement	"opts = qemu_opts_create ( qemu_find_opts ( ""mon"" ) , label , 1 , & local_err )"	49:4:701:769	5566295	8	True				
ANR	5566426	AssignmentExpression	"opts = qemu_opts_create ( qemu_find_opts ( ""mon"" ) , label , 1 , & local_err )"		5566295	0		=			
ANR	5566427	Identifier	opts		5566295	0					
ANR	5566428	CallExpression	"qemu_opts_create ( qemu_find_opts ( ""mon"" ) , label , 1 , & local_err )"		5566295	1					
ANR	5566429	Callee	qemu_opts_create		5566295	0					
ANR	5566430	Identifier	qemu_opts_create		5566295	0					
ANR	5566431	ArgumentList	"qemu_find_opts ( ""mon"" )"		5566295	1					
ANR	5566432	Argument	"qemu_find_opts ( ""mon"" )"		5566295	0					
ANR	5566433	CallExpression	"qemu_find_opts ( ""mon"" )"		5566295	0					
ANR	5566434	Callee	qemu_find_opts		5566295	0					
ANR	5566435	Identifier	qemu_find_opts		5566295	0					
ANR	5566436	ArgumentList	"""mon"""		5566295	1					
ANR	5566437	Argument	"""mon"""		5566295	0					
ANR	5566438	PrimaryExpression	"""mon"""		5566295	0					
ANR	5566439	Argument	label		5566295	1					
ANR	5566440	Identifier	label		5566295	0					
ANR	5566441	Argument	1		5566295	2					
ANR	5566442	PrimaryExpression	1		5566295	0					
ANR	5566443	Argument	& local_err		5566295	3					
ANR	5566444	UnaryOperationExpression	& local_err		5566295	0					
ANR	5566445	UnaryOperator	&		5566295	0					
ANR	5566446	Identifier	local_err		5566295	1					
ANR	5566447	IfStatement	if ( ! opts )		5566295	9					
ANR	5566448	Condition	! opts	51:8:780:784	5566295	0	True				
ANR	5566449	UnaryOperationExpression	! opts		5566295	0					
ANR	5566450	UnaryOperator	!		5566295	0					
ANR	5566451	Identifier	opts		5566295	1					
ANR	5566452	CompoundStatement		49:15:708:708	5566295	1					
ANR	5566453	ExpressionStatement	error_report_err ( local_err )	53:8:798:825	5566295	0	True				
ANR	5566454	CallExpression	error_report_err ( local_err )		5566295	0					
ANR	5566455	Callee	error_report_err		5566295	0					
ANR	5566456	Identifier	error_report_err		5566295	0					
ANR	5566457	ArgumentList	local_err		5566295	1					
ANR	5566458	Argument	local_err		5566295	0					
ANR	5566459	Identifier	local_err		5566295	0					
ANR	5566460	ExpressionStatement	exit ( 1 )	55:8:836:843	5566295	1	True				
ANR	5566461	CallExpression	exit ( 1 )		5566295	0					
ANR	5566462	Callee	exit		5566295	0					
ANR	5566463	Identifier	exit		5566295	0					
ANR	5566464	ArgumentList	1		5566295	1					
ANR	5566465	Argument	1		5566295	0					
ANR	5566466	PrimaryExpression	1		5566295	0					
ANR	5566467	ExpressionStatement	"qemu_opt_set ( opts , ""mode"" , mode , & error_abort )"	59:4:857:903	5566295	10	True				
ANR	5566468	CallExpression	"qemu_opt_set ( opts , ""mode"" , mode , & error_abort )"		5566295	0					
ANR	5566469	Callee	qemu_opt_set		5566295	0					
ANR	5566470	Identifier	qemu_opt_set		5566295	0					
ANR	5566471	ArgumentList	opts		5566295	1					
ANR	5566472	Argument	opts		5566295	0					
ANR	5566473	Identifier	opts		5566295	0					
ANR	5566474	Argument	"""mode"""		5566295	1					
ANR	5566475	PrimaryExpression	"""mode"""		5566295	0					
ANR	5566476	Argument	mode		5566295	2					
ANR	5566477	Identifier	mode		5566295	0					
ANR	5566478	Argument	& error_abort		5566295	3					
ANR	5566479	UnaryOperationExpression	& error_abort		5566295	0					
ANR	5566480	UnaryOperator	&		5566295	0					
ANR	5566481	Identifier	error_abort		5566295	1					
ANR	5566482	ExpressionStatement	"qemu_opt_set ( opts , ""chardev"" , label , & error_abort )"	61:4:910:960	5566295	11	True				
ANR	5566483	CallExpression	"qemu_opt_set ( opts , ""chardev"" , label , & error_abort )"		5566295	0					
ANR	5566484	Callee	qemu_opt_set		5566295	0					
ANR	5566485	Identifier	qemu_opt_set		5566295	0					
ANR	5566486	ArgumentList	opts		5566295	1					
ANR	5566487	Argument	opts		5566295	0					
ANR	5566488	Identifier	opts		5566295	0					
ANR	5566489	Argument	"""chardev"""		5566295	1					
ANR	5566490	PrimaryExpression	"""chardev"""		5566295	0					
ANR	5566491	Argument	label		5566295	2					
ANR	5566492	Identifier	label		5566295	0					
ANR	5566493	Argument	& error_abort		5566295	3					
ANR	5566494	UnaryOperationExpression	& error_abort		5566295	0					
ANR	5566495	UnaryOperator	&		5566295	0					
ANR	5566496	Identifier	error_abort		5566295	1					
ANR	5566497	ExpressionStatement	"qemu_opt_set_bool ( opts , ""pretty"" , pretty , & error_abort )"	63:4:967:1022	5566295	12	True				
ANR	5566498	CallExpression	"qemu_opt_set_bool ( opts , ""pretty"" , pretty , & error_abort )"		5566295	0					
ANR	5566499	Callee	qemu_opt_set_bool		5566295	0					
ANR	5566500	Identifier	qemu_opt_set_bool		5566295	0					
ANR	5566501	ArgumentList	opts		5566295	1					
ANR	5566502	Argument	opts		5566295	0					
ANR	5566503	Identifier	opts		5566295	0					
ANR	5566504	Argument	"""pretty"""		5566295	1					
ANR	5566505	PrimaryExpression	"""pretty"""		5566295	0					
ANR	5566506	Argument	pretty		5566295	2					
ANR	5566507	Identifier	pretty		5566295	0					
ANR	5566508	Argument	& error_abort		5566295	3					
ANR	5566509	UnaryOperationExpression	& error_abort		5566295	0					
ANR	5566510	UnaryOperator	&		5566295	0					
ANR	5566511	Identifier	error_abort		5566295	1					
ANR	5566512	IfStatement	if ( def )		5566295	13					
ANR	5566513	Condition	def	65:8:1033:1035	5566295	0	True				
ANR	5566514	Identifier	def		5566295	0					
ANR	5566515	ExpressionStatement	"qemu_opt_set ( opts , ""default"" , ""on"" , & error_abort )"	67:8:1047:1096	5566295	1	True				
ANR	5566516	CallExpression	"qemu_opt_set ( opts , ""default"" , ""on"" , & error_abort )"		5566295	0					
ANR	5566517	Callee	qemu_opt_set		5566295	0					
ANR	5566518	Identifier	qemu_opt_set		5566295	0					
ANR	5566519	ArgumentList	opts		5566295	1					
ANR	5566520	Argument	opts		5566295	0					
ANR	5566521	Identifier	opts		5566295	0					
ANR	5566522	Argument	"""default"""		5566295	1					
ANR	5566523	PrimaryExpression	"""default"""		5566295	0					
ANR	5566524	Argument	"""on"""		5566295	2					
ANR	5566525	PrimaryExpression	"""on"""		5566295	0					
ANR	5566526	Argument	& error_abort		5566295	3					
ANR	5566527	UnaryOperationExpression	& error_abort		5566295	0					
ANR	5566528	UnaryOperator	&		5566295	0					
ANR	5566529	Identifier	error_abort		5566295	1					
ANR	5566530	ExpressionStatement	monitor_device_index ++	69:4:1103:1125	5566295	14	True				
ANR	5566531	PostIncDecOperationExpression	monitor_device_index ++		5566295	0					
ANR	5566532	Identifier	monitor_device_index		5566295	0					
ANR	5566533	IncDec	++		5566295	1					
ANR	5566534	ReturnType	static void		5566295	1					
ANR	5566535	Identifier	monitor_parse		5566295	2					
ANR	5566536	ParameterList	"const char * optarg , const char * mode , bool pretty"		5566295	3					
ANR	5566537	Parameter	const char * optarg	1:26:26:43	5566295	0	True				
ANR	5566538	ParameterType	const char *		5566295	0					
ANR	5566539	Identifier	optarg		5566295	1					
ANR	5566540	Parameter	const char * mode	1:46:46:61	5566295	1	True				
ANR	5566541	ParameterType	const char *		5566295	0					
ANR	5566542	Identifier	mode		5566295	1					
ANR	5566543	Parameter	bool pretty	1:64:64:74	5566295	2	True				
ANR	5566544	ParameterType	bool		5566295	0					
ANR	5566545	Identifier	pretty		5566295	1					
ANR	5566546	CFGEntryNode	ENTRY		5566295		True				
ANR	5566547	CFGExitNode	EXIT		5566295		True				
ANR	5566548	Symbol	monitor_device_index		5566295						
ANR	5566549	Symbol	qemu_find_opts		5566295						
ANR	5566550	Symbol	pretty		5566295						
ANR	5566551	Symbol	NULL		5566295						
ANR	5566552	Symbol	qemu_opts_create		5566295						
ANR	5566553	Symbol	def		5566295						
ANR	5566554	Symbol	qemu_chr_parse_compat		5566295						
ANR	5566555	Symbol	& error_abort		5566295						
ANR	5566556	Symbol	optarg		5566295						
ANR	5566557	Symbol	label		5566295						
ANR	5566558	Symbol	stderr		5566295						
ANR	5566559	Symbol	mode		5566295						
ANR	5566560	Symbol	p		5566295						
ANR	5566561	Symbol	opts		5566295						
ANR	5566562	Symbol	& p		5566295						
ANR	5566563	Symbol	& local_err		5566295						
ANR	5566564	Symbol	strstart		5566295						
ANR	5566565	Symbol	local_err		5566295						
