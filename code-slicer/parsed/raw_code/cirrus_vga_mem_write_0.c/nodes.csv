command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1314974	File	/home/p4ultr4n/workplace/ReVeal/raw_code/cirrus_vga_mem_write_0.c								
ANR	1314975	Function	cirrus_vga_mem_write	1:0:0:1981							
ANR	1314976	FunctionDef	"cirrus_vga_mem_write (void * opaque , target_phys_addr_t addr , uint64_t mem_value , uint32_t size)"		1314975	0					
ANR	1314977	CompoundStatement		9:0:210:1981	1314975	0					
ANR	1314978	IdentifierDeclStatement	CirrusVGAState * s = opaque ;	11:4:217:243	1314975	0	True				
ANR	1314979	IdentifierDecl	* s = opaque		1314975	0					
ANR	1314980	IdentifierDeclType	CirrusVGAState *		1314975	0					
ANR	1314981	Identifier	s		1314975	1					
ANR	1314982	AssignmentExpression	* s = opaque		1314975	2		=			
ANR	1314983	Identifier	opaque		1314975	0					
ANR	1314984	Identifier	opaque		1314975	1					
ANR	1314985	IdentifierDeclStatement	unsigned bank_index ;	13:4:250:269	1314975	1	True				
ANR	1314986	IdentifierDecl	bank_index		1314975	0					
ANR	1314987	IdentifierDeclType	unsigned		1314975	0					
ANR	1314988	Identifier	bank_index		1314975	1					
ANR	1314989	IdentifierDeclStatement	unsigned bank_offset ;	15:4:276:296	1314975	2	True				
ANR	1314990	IdentifierDecl	bank_offset		1314975	0					
ANR	1314991	IdentifierDeclType	unsigned		1314975	0					
ANR	1314992	Identifier	bank_offset		1314975	1					
ANR	1314993	IdentifierDeclStatement	unsigned mode ;	17:4:303:316	1314975	3	True				
ANR	1314994	IdentifierDecl	mode		1314975	0					
ANR	1314995	IdentifierDeclType	unsigned		1314975	0					
ANR	1314996	Identifier	mode		1314975	1					
ANR	1314997	IfStatement	if ( ( s -> vga . sr [ 0x07 ] & 0x01 ) == 0 )		1314975	4					
ANR	1314998	Condition	( s -> vga . sr [ 0x07 ] & 0x01 ) == 0	21:8:329:357	1314975	0	True				
ANR	1314999	EqualityExpression	( s -> vga . sr [ 0x07 ] & 0x01 ) == 0		1314975	0		==			
ANR	1315000	BitAndExpression	s -> vga . sr [ 0x07 ] & 0x01		1314975	0		&			
ANR	1315001	ArrayIndexing	s -> vga . sr [ 0x07 ]		1314975	0					
ANR	1315002	MemberAccess	s -> vga . sr		1314975	0					
ANR	1315003	PtrMemberAccess	s -> vga		1314975	0					
ANR	1315004	Identifier	s		1314975	0					
ANR	1315005	Identifier	vga		1314975	1					
ANR	1315006	Identifier	sr		1314975	1					
ANR	1315007	PrimaryExpression	0x07		1314975	1					
ANR	1315008	PrimaryExpression	0x01		1314975	1					
ANR	1315009	PrimaryExpression	0		1314975	1					
ANR	1315010	CompoundStatement		13:39:149:149	1314975	1					
ANR	1315011	ExpressionStatement	"vga_mem_writeb ( & s -> vga , addr , mem_value )"	23:8:371:411	1314975	0	True				
ANR	1315012	CallExpression	"vga_mem_writeb ( & s -> vga , addr , mem_value )"		1314975	0					
ANR	1315013	Callee	vga_mem_writeb		1314975	0					
ANR	1315014	Identifier	vga_mem_writeb		1314975	0					
ANR	1315015	ArgumentList	& s -> vga		1314975	1					
ANR	1315016	Argument	& s -> vga		1314975	0					
ANR	1315017	UnaryOperationExpression	& s -> vga		1314975	0					
ANR	1315018	UnaryOperator	&		1314975	0					
ANR	1315019	PtrMemberAccess	s -> vga		1314975	1					
ANR	1315020	Identifier	s		1314975	0					
ANR	1315021	Identifier	vga		1314975	1					
ANR	1315022	Argument	addr		1314975	1					
ANR	1315023	Identifier	addr		1314975	0					
ANR	1315024	Argument	mem_value		1314975	2					
ANR	1315025	Identifier	mem_value		1314975	0					
ANR	1315026	ReturnStatement	return ;	25:8:422:428	1314975	1	True				
ANR	1315027	IfStatement	if ( addr < 0x10000 )		1314975	5					
ANR	1315028	Condition	addr < 0x10000	31:8:448:461	1314975	0	True				
ANR	1315029	RelationalExpression	addr < 0x10000		1314975	0		<			
ANR	1315030	Identifier	addr		1314975	0					
ANR	1315031	PrimaryExpression	0x10000		1314975	1					
ANR	1315032	CompoundStatement		23:24:253:253	1314975	1					
ANR	1315033	IfStatement	if ( s -> cirrus_srcptr != s -> cirrus_srcptr_end )		1314975	0					
ANR	1315034	Condition	s -> cirrus_srcptr != s -> cirrus_srcptr_end	33:5:472:511	1314975	0	True				
ANR	1315035	EqualityExpression	s -> cirrus_srcptr != s -> cirrus_srcptr_end		1314975	0		!=			
ANR	1315036	PtrMemberAccess	s -> cirrus_srcptr		1314975	0					
ANR	1315037	Identifier	s		1314975	0					
ANR	1315038	Identifier	cirrus_srcptr		1314975	1					
ANR	1315039	PtrMemberAccess	s -> cirrus_srcptr_end		1314975	1					
ANR	1315040	Identifier	s		1314975	0					
ANR	1315041	Identifier	cirrus_srcptr_end		1314975	1					
ANR	1315042	CompoundStatement		25:47:303:303	1314975	1					
ANR	1315043	ExpressionStatement	* s -> cirrus_srcptr ++ = ( uint8_t ) mem_value	37:5:541:582	1314975	0	True				
ANR	1315044	AssignmentExpression	* s -> cirrus_srcptr ++ = ( uint8_t ) mem_value		1314975	0		=			
ANR	1315045	UnaryOperationExpression	* s -> cirrus_srcptr ++		1314975	0					
ANR	1315046	UnaryOperator	*		1314975	0					
ANR	1315047	PostIncDecOperationExpression	s -> cirrus_srcptr ++		1314975	1					
ANR	1315048	PtrMemberAccess	s -> cirrus_srcptr		1314975	0					
ANR	1315049	Identifier	s		1314975	0					
ANR	1315050	Identifier	cirrus_srcptr		1314975	1					
ANR	1315051	IncDec	++		1314975	1					
ANR	1315052	CastExpression	( uint8_t ) mem_value		1314975	1					
ANR	1315053	CastTarget	uint8_t		1314975	0					
ANR	1315054	Identifier	mem_value		1314975	1					
ANR	1315055	IfStatement	if ( s -> cirrus_srcptr >= s -> cirrus_srcptr_end )		1314975	1					
ANR	1315056	Condition	s -> cirrus_srcptr >= s -> cirrus_srcptr_end	39:9:594:633	1314975	0	True				
ANR	1315057	RelationalExpression	s -> cirrus_srcptr >= s -> cirrus_srcptr_end		1314975	0		>=			
ANR	1315058	PtrMemberAccess	s -> cirrus_srcptr		1314975	0					
ANR	1315059	Identifier	s		1314975	0					
ANR	1315060	Identifier	cirrus_srcptr		1314975	1					
ANR	1315061	PtrMemberAccess	s -> cirrus_srcptr_end		1314975	1					
ANR	1315062	Identifier	s		1314975	0					
ANR	1315063	Identifier	cirrus_srcptr_end		1314975	1					
ANR	1315064	CompoundStatement		31:51:425:425	1314975	1					
ANR	1315065	ExpressionStatement	cirrus_bitblt_cputovideo_next ( s )	41:2:641:673	1314975	0	True				
ANR	1315066	CallExpression	cirrus_bitblt_cputovideo_next ( s )		1314975	0					
ANR	1315067	Callee	cirrus_bitblt_cputovideo_next		1314975	0					
ANR	1315068	Identifier	cirrus_bitblt_cputovideo_next		1314975	0					
ANR	1315069	ArgumentList	s		1314975	1					
ANR	1315070	Argument	s		1314975	0					
ANR	1315071	Identifier	s		1314975	0					
ANR	1315072	ElseStatement	else		1314975	0					
ANR	1315073	CompoundStatement		37:8:481:481	1314975	0					
ANR	1315074	ExpressionStatement	bank_index = addr >> 15	49:5:725:748	1314975	0	True				
ANR	1315075	AssignmentExpression	bank_index = addr >> 15		1314975	0		=			
ANR	1315076	Identifier	bank_index		1314975	0					
ANR	1315077	ShiftExpression	addr >> 15		1314975	1		>>			
ANR	1315078	Identifier	addr		1314975	0					
ANR	1315079	PrimaryExpression	15		1314975	1					
ANR	1315080	ExpressionStatement	bank_offset = addr & 0x7fff	51:5:756:783	1314975	1	True				
ANR	1315081	AssignmentExpression	bank_offset = addr & 0x7fff		1314975	0		=			
ANR	1315082	Identifier	bank_offset		1314975	0					
ANR	1315083	BitAndExpression	addr & 0x7fff		1314975	1		&			
ANR	1315084	Identifier	addr		1314975	0					
ANR	1315085	PrimaryExpression	0x7fff		1314975	1					
ANR	1315086	IfStatement	if ( bank_offset < s -> cirrus_bank_limit [ bank_index ] )		1314975	2					
ANR	1315087	Condition	bank_offset < s -> cirrus_bank_limit [ bank_index ]	53:9:795:840	1314975	0	True				
ANR	1315088	RelationalExpression	bank_offset < s -> cirrus_bank_limit [ bank_index ]		1314975	0		<			
ANR	1315089	Identifier	bank_offset		1314975	0					
ANR	1315090	ArrayIndexing	s -> cirrus_bank_limit [ bank_index ]		1314975	1					
ANR	1315091	PtrMemberAccess	s -> cirrus_bank_limit		1314975	0					
ANR	1315092	Identifier	s		1314975	0					
ANR	1315093	Identifier	cirrus_bank_limit		1314975	1					
ANR	1315094	Identifier	bank_index		1314975	1					
ANR	1315095	CompoundStatement		45:57:632:632	1314975	1					
ANR	1315096	ExpressionStatement	bank_offset += s -> cirrus_bank_base [ bank_index ]	55:2:848:894	1314975	0	True				
ANR	1315097	AssignmentExpression	bank_offset += s -> cirrus_bank_base [ bank_index ]		1314975	0		+=			
ANR	1315098	Identifier	bank_offset		1314975	0					
ANR	1315099	ArrayIndexing	s -> cirrus_bank_base [ bank_index ]		1314975	1					
ANR	1315100	PtrMemberAccess	s -> cirrus_bank_base		1314975	0					
ANR	1315101	Identifier	s		1314975	0					
ANR	1315102	Identifier	cirrus_bank_base		1314975	1					
ANR	1315103	Identifier	bank_index		1314975	1					
ANR	1315104	IfStatement	if ( ( s -> vga . gr [ 0x0B ] & 0x14 ) == 0x14 )		1314975	1					
ANR	1315105	Condition	( s -> vga . gr [ 0x0B ] & 0x14 ) == 0x14	57:6:903:934	1314975	0	True				
ANR	1315106	EqualityExpression	( s -> vga . gr [ 0x0B ] & 0x14 ) == 0x14		1314975	0		==			
ANR	1315107	BitAndExpression	s -> vga . gr [ 0x0B ] & 0x14		1314975	0		&			
ANR	1315108	ArrayIndexing	s -> vga . gr [ 0x0B ]		1314975	0					
ANR	1315109	MemberAccess	s -> vga . gr		1314975	0					
ANR	1315110	PtrMemberAccess	s -> vga		1314975	0					
ANR	1315111	Identifier	s		1314975	0					
ANR	1315112	Identifier	vga		1314975	1					
ANR	1315113	Identifier	gr		1314975	1					
ANR	1315114	PrimaryExpression	0x0B		1314975	1					
ANR	1315115	PrimaryExpression	0x14		1314975	1					
ANR	1315116	PrimaryExpression	0x14		1314975	1					
ANR	1315117	CompoundStatement		49:40:726:726	1314975	1					
ANR	1315118	ExpressionStatement	bank_offset <<= 4	59:6:946:963	1314975	0	True				
ANR	1315119	AssignmentExpression	bank_offset <<= 4		1314975	0		<<=			
ANR	1315120	Identifier	bank_offset		1314975	0					
ANR	1315121	PrimaryExpression	4		1314975	1					
ANR	1315122	ElseStatement	else		1314975	0					
ANR	1315123	IfStatement	if ( s -> vga . gr [ 0x0B ] & 0x02 )		1314975	0					
ANR	1315124	Condition	s -> vga . gr [ 0x0B ] & 0x02	61:13:979:1000	1314975	0	True				
ANR	1315125	BitAndExpression	s -> vga . gr [ 0x0B ] & 0x02		1314975	0		&			
ANR	1315126	ArrayIndexing	s -> vga . gr [ 0x0B ]		1314975	0					
ANR	1315127	MemberAccess	s -> vga . gr		1314975	0					
ANR	1315128	PtrMemberAccess	s -> vga		1314975	0					
ANR	1315129	Identifier	s		1314975	0					
ANR	1315130	Identifier	vga		1314975	1					
ANR	1315131	Identifier	gr		1314975	1					
ANR	1315132	PrimaryExpression	0x0B		1314975	1					
ANR	1315133	PrimaryExpression	0x02		1314975	1					
ANR	1315134	CompoundStatement		53:37:792:792	1314975	1					
ANR	1315135	ExpressionStatement	bank_offset <<= 3	63:6:1012:1029	1314975	0	True				
ANR	1315136	AssignmentExpression	bank_offset <<= 3		1314975	0		<<=			
ANR	1315137	Identifier	bank_offset		1314975	0					
ANR	1315138	PrimaryExpression	3		1314975	1					
ANR	1315139	ExpressionStatement	bank_offset &= s -> cirrus_addr_mask	67:2:1039:1073	1314975	2	True				
ANR	1315140	AssignmentExpression	bank_offset &= s -> cirrus_addr_mask		1314975	0		&=			
ANR	1315141	Identifier	bank_offset		1314975	0					
ANR	1315142	PtrMemberAccess	s -> cirrus_addr_mask		1314975	1					
ANR	1315143	Identifier	s		1314975	0					
ANR	1315144	Identifier	cirrus_addr_mask		1314975	1					
ANR	1315145	ExpressionStatement	mode = s -> vga . gr [ 0x05 ] & 0x7	69:2:1078:1106	1314975	3	True				
ANR	1315146	AssignmentExpression	mode = s -> vga . gr [ 0x05 ] & 0x7		1314975	0		=			
ANR	1315147	Identifier	mode		1314975	0					
ANR	1315148	BitAndExpression	s -> vga . gr [ 0x05 ] & 0x7		1314975	1		&			
ANR	1315149	ArrayIndexing	s -> vga . gr [ 0x05 ]		1314975	0					
ANR	1315150	MemberAccess	s -> vga . gr		1314975	0					
ANR	1315151	PtrMemberAccess	s -> vga		1314975	0					
ANR	1315152	Identifier	s		1314975	0					
ANR	1315153	Identifier	vga		1314975	1					
ANR	1315154	Identifier	gr		1314975	1					
ANR	1315155	PrimaryExpression	0x05		1314975	1					
ANR	1315156	PrimaryExpression	0x7		1314975	1					
ANR	1315157	IfStatement	if ( mode < 4 || mode > 5 || ( ( s -> vga . gr [ 0x0B ] & 0x4 ) == 0 ) )		1314975	4					
ANR	1315158	Condition	mode < 4 || mode > 5 || ( ( s -> vga . gr [ 0x0B ] & 0x4 ) == 0 )	71:6:1115:1168	1314975	0	True				
ANR	1315159	OrExpression	mode < 4 || mode > 5 || ( ( s -> vga . gr [ 0x0B ] & 0x4 ) == 0 )		1314975	0		||			
ANR	1315160	RelationalExpression	mode < 4		1314975	0		<			
ANR	1315161	Identifier	mode		1314975	0					
ANR	1315162	PrimaryExpression	4		1314975	1					
ANR	1315163	OrExpression	mode > 5 || ( ( s -> vga . gr [ 0x0B ] & 0x4 ) == 0 )		1314975	1		||			
ANR	1315164	RelationalExpression	mode > 5		1314975	0		>			
ANR	1315165	Identifier	mode		1314975	0					
ANR	1315166	PrimaryExpression	5		1314975	1					
ANR	1315167	EqualityExpression	( s -> vga . gr [ 0x0B ] & 0x4 ) == 0		1314975	1		==			
ANR	1315168	BitAndExpression	s -> vga . gr [ 0x0B ] & 0x4		1314975	0		&			
ANR	1315169	ArrayIndexing	s -> vga . gr [ 0x0B ]		1314975	0					
ANR	1315170	MemberAccess	s -> vga . gr		1314975	0					
ANR	1315171	PtrMemberAccess	s -> vga		1314975	0					
ANR	1315172	Identifier	s		1314975	0					
ANR	1315173	Identifier	vga		1314975	1					
ANR	1315174	Identifier	gr		1314975	1					
ANR	1315175	PrimaryExpression	0x0B		1314975	1					
ANR	1315176	PrimaryExpression	0x4		1314975	1					
ANR	1315177	PrimaryExpression	0		1314975	1					
ANR	1315178	CompoundStatement		63:62:960:960	1314975	1					
ANR	1315179	ExpressionStatement	* ( s -> vga . vram_ptr + bank_offset ) = mem_value	73:6:1180:1224	1314975	0	True				
ANR	1315180	AssignmentExpression	* ( s -> vga . vram_ptr + bank_offset ) = mem_value		1314975	0		=			
ANR	1315181	UnaryOperationExpression	* ( s -> vga . vram_ptr + bank_offset )		1314975	0					
ANR	1315182	UnaryOperator	*		1314975	0					
ANR	1315183	AdditiveExpression	s -> vga . vram_ptr + bank_offset		1314975	1		+			
ANR	1315184	MemberAccess	s -> vga . vram_ptr		1314975	0					
ANR	1315185	PtrMemberAccess	s -> vga		1314975	0					
ANR	1315186	Identifier	s		1314975	0					
ANR	1315187	Identifier	vga		1314975	1					
ANR	1315188	Identifier	vram_ptr		1314975	1					
ANR	1315189	Identifier	bank_offset		1314975	1					
ANR	1315190	Identifier	mem_value		1314975	1					
ANR	1315191	ExpressionStatement	"memory_region_set_dirty ( & s -> vga . vram , bank_offset , sizeof ( mem_value ) )"	75:20:1247:1361	1314975	1	True				
ANR	1315192	CallExpression	"memory_region_set_dirty ( & s -> vga . vram , bank_offset , sizeof ( mem_value ) )"		1314975	0					
ANR	1315193	Callee	memory_region_set_dirty		1314975	0					
ANR	1315194	Identifier	memory_region_set_dirty		1314975	0					
ANR	1315195	ArgumentList	& s -> vga . vram		1314975	1					
ANR	1315196	Argument	& s -> vga . vram		1314975	0					
ANR	1315197	UnaryOperationExpression	& s -> vga . vram		1314975	0					
ANR	1315198	UnaryOperator	&		1314975	0					
ANR	1315199	MemberAccess	s -> vga . vram		1314975	1					
ANR	1315200	PtrMemberAccess	s -> vga		1314975	0					
ANR	1315201	Identifier	s		1314975	0					
ANR	1315202	Identifier	vga		1314975	1					
ANR	1315203	Identifier	vram		1314975	1					
ANR	1315204	Argument	bank_offset		1314975	1					
ANR	1315205	Identifier	bank_offset		1314975	0					
ANR	1315206	Argument	sizeof ( mem_value )		1314975	2					
ANR	1315207	SizeofExpression	sizeof ( mem_value )		1314975	0					
ANR	1315208	Sizeof	sizeof		1314975	0					
ANR	1315209	SizeofOperand	mem_value		1314975	1					
ANR	1315210	ElseStatement	else		1314975	0					
ANR	1315211	CompoundStatement		71:9:1162:1162	1314975	0					
ANR	1315212	IfStatement	if ( ( s -> vga . gr [ 0x0B ] & 0x14 ) != 0x14 )		1314975	0					
ANR	1315213	Condition	( s -> vga . gr [ 0x0B ] & 0x14 ) != 0x14	81:10:1386:1417	1314975	0	True				
ANR	1315214	EqualityExpression	( s -> vga . gr [ 0x0B ] & 0x14 ) != 0x14		1314975	0		!=			
ANR	1315215	BitAndExpression	s -> vga . gr [ 0x0B ] & 0x14		1314975	0		&			
ANR	1315216	ArrayIndexing	s -> vga . gr [ 0x0B ]		1314975	0					
ANR	1315217	MemberAccess	s -> vga . gr		1314975	0					
ANR	1315218	PtrMemberAccess	s -> vga		1314975	0					
ANR	1315219	Identifier	s		1314975	0					
ANR	1315220	Identifier	vga		1314975	1					
ANR	1315221	Identifier	gr		1314975	1					
ANR	1315222	PrimaryExpression	0x0B		1314975	1					
ANR	1315223	PrimaryExpression	0x14		1314975	1					
ANR	1315224	PrimaryExpression	0x14		1314975	1					
ANR	1315225	CompoundStatement		73:44:1209:1209	1314975	1					
ANR	1315226	ExpressionStatement	"cirrus_mem_writeb_mode4and5_8bpp ( s , mode , bank_offset , mem_value )"	83:3:1426:1509	1314975	0	True				
ANR	1315227	CallExpression	"cirrus_mem_writeb_mode4and5_8bpp ( s , mode , bank_offset , mem_value )"		1314975	0					
ANR	1315228	Callee	cirrus_mem_writeb_mode4and5_8bpp		1314975	0					
ANR	1315229	Identifier	cirrus_mem_writeb_mode4and5_8bpp		1314975	0					
ANR	1315230	ArgumentList	s		1314975	1					
ANR	1315231	Argument	s		1314975	0					
ANR	1315232	Identifier	s		1314975	0					
ANR	1315233	Argument	mode		1314975	1					
ANR	1315234	Identifier	mode		1314975	0					
ANR	1315235	Argument	bank_offset		1314975	2					
ANR	1315236	Identifier	bank_offset		1314975	0					
ANR	1315237	Argument	mem_value		1314975	3					
ANR	1315238	Identifier	mem_value		1314975	0					
ANR	1315239	ElseStatement	else		1314975	0					
ANR	1315240	CompoundStatement		81:13:1314:1314	1314975	0					
ANR	1315241	ExpressionStatement	"cirrus_mem_writeb_mode4and5_16bpp ( s , mode , bank_offset , mem_value )"	91:3:1531:1617	1314975	0	True				
ANR	1315242	CallExpression	"cirrus_mem_writeb_mode4and5_16bpp ( s , mode , bank_offset , mem_value )"		1314975	0					
ANR	1315243	Callee	cirrus_mem_writeb_mode4and5_16bpp		1314975	0					
ANR	1315244	Identifier	cirrus_mem_writeb_mode4and5_16bpp		1314975	0					
ANR	1315245	ArgumentList	s		1314975	1					
ANR	1315246	Argument	s		1314975	0					
ANR	1315247	Identifier	s		1314975	0					
ANR	1315248	Argument	mode		1314975	1					
ANR	1315249	Identifier	mode		1314975	0					
ANR	1315250	Argument	bank_offset		1314975	2					
ANR	1315251	Identifier	bank_offset		1314975	0					
ANR	1315252	Argument	mem_value		1314975	3					
ANR	1315253	Identifier	mem_value		1314975	0					
ANR	1315254	ElseStatement	else		1314975	0					
ANR	1315255	IfStatement	if ( addr >= 0x18000 && addr < 0x18100 )		1314975	0					
ANR	1315256	Condition	addr >= 0x18000 && addr < 0x18100	105:15:1661:1693	1314975	0	True				
ANR	1315257	AndExpression	addr >= 0x18000 && addr < 0x18100		1314975	0		&&			
ANR	1315258	RelationalExpression	addr >= 0x18000		1314975	0		>=			
ANR	1315259	Identifier	addr		1314975	0					
ANR	1315260	PrimaryExpression	0x18000		1314975	1					
ANR	1315261	RelationalExpression	addr < 0x18100		1314975	1		<			
ANR	1315262	Identifier	addr		1314975	0					
ANR	1315263	PrimaryExpression	0x18100		1314975	1					
ANR	1315264	CompoundStatement		97:50:1485:1485	1314975	1					
ANR	1315265	IfStatement	if ( ( s -> vga . sr [ 0x17 ] & 0x44 ) == 0x04 )		1314975	0					
ANR	1315266	Condition	( s -> vga . sr [ 0x17 ] & 0x44 ) == 0x04	109:5:1730:1761	1314975	0	True				
ANR	1315267	EqualityExpression	( s -> vga . sr [ 0x17 ] & 0x44 ) == 0x04		1314975	0		==			
ANR	1315268	BitAndExpression	s -> vga . sr [ 0x17 ] & 0x44		1314975	0		&			
ANR	1315269	ArrayIndexing	s -> vga . sr [ 0x17 ]		1314975	0					
ANR	1315270	MemberAccess	s -> vga . sr		1314975	0					
ANR	1315271	PtrMemberAccess	s -> vga		1314975	0					
ANR	1315272	Identifier	s		1314975	0					
ANR	1315273	Identifier	vga		1314975	1					
ANR	1315274	Identifier	sr		1314975	1					
ANR	1315275	PrimaryExpression	0x17		1314975	1					
ANR	1315276	PrimaryExpression	0x44		1314975	1					
ANR	1315277	PrimaryExpression	0x04		1314975	1					
ANR	1315278	CompoundStatement		101:39:1553:1553	1314975	1					
ANR	1315279	ExpressionStatement	"cirrus_mmio_blt_write ( s , addr & 0xff , mem_value )"	111:5:1772:1820	1314975	0	True				
ANR	1315280	CallExpression	"cirrus_mmio_blt_write ( s , addr & 0xff , mem_value )"		1314975	0					
ANR	1315281	Callee	cirrus_mmio_blt_write		1314975	0					
ANR	1315282	Identifier	cirrus_mmio_blt_write		1314975	0					
ANR	1315283	ArgumentList	s		1314975	1					
ANR	1315284	Argument	s		1314975	0					
ANR	1315285	Identifier	s		1314975	0					
ANR	1315286	Argument	addr & 0xff		1314975	1					
ANR	1315287	BitAndExpression	addr & 0xff		1314975	0		&			
ANR	1315288	Identifier	addr		1314975	0					
ANR	1315289	PrimaryExpression	0xff		1314975	1					
ANR	1315290	Argument	mem_value		1314975	2					
ANR	1315291	Identifier	mem_value		1314975	0					
ANR	1315292	ElseStatement	else		1314975	0					
ANR	1315293	CompoundStatement		107:11:1627:1627	1314975	0					
ANR	1315294	Statement	printf	119:8:1870:1875	1314975	0	True				
ANR	1315295	Statement	(	119:14:1876:1876	1314975	1	True				
ANR	1315296	Statement	"""cirrus: mem_writeb """	119:15:1877:1897	1314975	2	True				
ANR	1315297	Statement	TARGET_FMT_plx	119:37:1899:1912	1314975	3	True				
ANR	1315298	Statement	""" value %02x\\n"""	119:52:1914:1928	1314975	4	True				
ANR	1315299	Statement	","	119:67:1929:1929	1314975	5	True				
ANR	1315300	Statement	addr	119:69:1931:1934	1314975	6	True				
ANR	1315301	Statement	","	119:73:1935:1935	1314975	7	True				
ANR	1315302	Statement	mem_value	121:15:1953:1961	1314975	8	True				
ANR	1315303	Statement	)	121:24:1962:1962	1314975	9	True				
ANR	1315304	ExpressionStatement		121:25:1963:1963	1314975	10	True				
ANR	1315305	ReturnType	static void		1314975	1					
ANR	1315306	Identifier	cirrus_vga_mem_write		1314975	2					
ANR	1315307	ParameterList	"void * opaque , target_phys_addr_t addr , uint64_t mem_value , uint32_t size"		1314975	3					
ANR	1315308	Parameter	void * opaque	1:33:33:44	1314975	0	True				
ANR	1315309	ParameterType	void *		1314975	0					
ANR	1315310	Identifier	opaque		1314975	1					
ANR	1315311	Parameter	target_phys_addr_t addr	3:33:81:103	1314975	1	True				
ANR	1315312	ParameterType	target_phys_addr_t		1314975	0					
ANR	1315313	Identifier	addr		1314975	1					
ANR	1315314	Parameter	uint64_t mem_value	5:33:140:157	1314975	2	True				
ANR	1315315	ParameterType	uint64_t		1314975	0					
ANR	1315316	Identifier	mem_value		1314975	1					
ANR	1315317	Parameter	uint32_t size	7:33:194:206	1314975	3	True				
ANR	1315318	ParameterType	uint32_t		1314975	0					
ANR	1315319	Identifier	size		1314975	1					
ANR	1315320	CFGEntryNode	ENTRY		1314975		True				
ANR	1315321	CFGExitNode	EXIT		1314975		True				
ANR	1315322	Symbol	* bank_offset		1314975						
ANR	1315323	Symbol	& s -> vga . vram		1314975						
ANR	1315324	Symbol	s -> cirrus_srcptr_end		1314975						
ANR	1315325	Symbol	s -> cirrus_bank_limit		1314975						
ANR	1315326	Symbol	* s -> vga . gr		1314975						
ANR	1315327	Symbol	* s -> cirrus_bank_limit		1314975						
ANR	1315328	Symbol	s -> cirrus_bank_base		1314975						
ANR	1315329	Symbol	mem_value		1314975						
ANR	1315330	Symbol	s -> cirrus_addr_mask		1314975						
ANR	1315331	Symbol	& s -> vga		1314975						
ANR	1315332	Symbol	mode		1314975						
ANR	1315333	Symbol	bank_index		1314975						
ANR	1315334	Symbol	* s -> vga . sr		1314975						
ANR	1315335	Symbol	* s -> vga . vram_ptr		1314975						
ANR	1315336	Symbol	* s -> cirrus_bank_base		1314975						
ANR	1315337	Symbol	* * s		1314975						
ANR	1315338	Symbol	addr		1314975						
ANR	1315339	Symbol	s -> vga		1314975						
ANR	1315340	Symbol	* bank_index		1314975						
ANR	1315341	Symbol	* ( s -> vga . vram_ptr + bank_offset )		1314975						
ANR	1315342	Symbol	opaque		1314975						
ANR	1315343	Symbol	* s -> cirrus_srcptr ++		1314975						
ANR	1315344	Symbol	s -> vga . sr		1314975						
ANR	1315345	Symbol	* s -> vga		1314975						
ANR	1315346	Symbol	s -> vga . gr		1314975						
ANR	1315347	Symbol	s -> cirrus_srcptr		1314975						
ANR	1315348	Symbol	s		1314975						
ANR	1315349	Symbol	size		1314975						
ANR	1315350	Symbol	bank_offset		1314975						
ANR	1315351	Symbol	s -> vga . vram_ptr		1314975						
ANR	1315352	Symbol	* s		1314975						
