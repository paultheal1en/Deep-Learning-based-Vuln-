command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8122172	File	/home/p4ultr4n/workplace/ReVeal/raw_code/swri_rematrix_init_1.c								
ANR	8122173	Function	swri_rematrix_init	1:0:0:3607							
ANR	8122174	FunctionDef	swri_rematrix_init (SwrContext * s)		8122173	0					
ANR	8122175	CompoundStatement		1:45:45:3607	8122173	0					
ANR	8122176	IdentifierDeclStatement	"int i , j ;"	3:4:52:60	8122173	0	True				
ANR	8122177	IdentifierDecl	i		8122173	0					
ANR	8122178	IdentifierDeclType	int		8122173	0					
ANR	8122179	Identifier	i		8122173	1					
ANR	8122180	IdentifierDecl	j		8122173	1					
ANR	8122181	IdentifierDeclType	int		8122173	0					
ANR	8122182	Identifier	j		8122173	1					
ANR	8122183	IdentifierDeclStatement	int nb_in = av_get_channel_layout_nb_channels ( s -> in_ch_layout ) ;	5:4:67:130	8122173	1	True				
ANR	8122184	IdentifierDecl	nb_in = av_get_channel_layout_nb_channels ( s -> in_ch_layout )		8122173	0					
ANR	8122185	IdentifierDeclType	int		8122173	0					
ANR	8122186	Identifier	nb_in		8122173	1					
ANR	8122187	AssignmentExpression	nb_in = av_get_channel_layout_nb_channels ( s -> in_ch_layout )		8122173	2		=			
ANR	8122188	Identifier	nb_in		8122173	0					
ANR	8122189	CallExpression	av_get_channel_layout_nb_channels ( s -> in_ch_layout )		8122173	1					
ANR	8122190	Callee	av_get_channel_layout_nb_channels		8122173	0					
ANR	8122191	Identifier	av_get_channel_layout_nb_channels		8122173	0					
ANR	8122192	ArgumentList	s -> in_ch_layout		8122173	1					
ANR	8122193	Argument	s -> in_ch_layout		8122173	0					
ANR	8122194	PtrMemberAccess	s -> in_ch_layout		8122173	0					
ANR	8122195	Identifier	s		8122173	0					
ANR	8122196	Identifier	in_ch_layout		8122173	1					
ANR	8122197	IdentifierDeclStatement	int nb_out = av_get_channel_layout_nb_channels ( s -> out_ch_layout ) ;	7:4:137:201	8122173	2	True				
ANR	8122198	IdentifierDecl	nb_out = av_get_channel_layout_nb_channels ( s -> out_ch_layout )		8122173	0					
ANR	8122199	IdentifierDeclType	int		8122173	0					
ANR	8122200	Identifier	nb_out		8122173	1					
ANR	8122201	AssignmentExpression	nb_out = av_get_channel_layout_nb_channels ( s -> out_ch_layout )		8122173	2		=			
ANR	8122202	Identifier	nb_out		8122173	0					
ANR	8122203	CallExpression	av_get_channel_layout_nb_channels ( s -> out_ch_layout )		8122173	1					
ANR	8122204	Callee	av_get_channel_layout_nb_channels		8122173	0					
ANR	8122205	Identifier	av_get_channel_layout_nb_channels		8122173	0					
ANR	8122206	ArgumentList	s -> out_ch_layout		8122173	1					
ANR	8122207	Argument	s -> out_ch_layout		8122173	0					
ANR	8122208	PtrMemberAccess	s -> out_ch_layout		8122173	0					
ANR	8122209	Identifier	s		8122173	0					
ANR	8122210	Identifier	out_ch_layout		8122173	1					
ANR	8122211	ExpressionStatement	s -> mix_any_f = NULL	11:4:210:229	8122173	3	True				
ANR	8122212	AssignmentExpression	s -> mix_any_f = NULL		8122173	0		=			
ANR	8122213	PtrMemberAccess	s -> mix_any_f		8122173	0					
ANR	8122214	Identifier	s		8122173	0					
ANR	8122215	Identifier	mix_any_f		8122173	1					
ANR	8122216	Identifier	NULL		8122173	1					
ANR	8122217	IfStatement	if ( ! s -> rematrix_custom )		8122173	4					
ANR	8122218	Condition	! s -> rematrix_custom	15:8:242:260	8122173	0	True				
ANR	8122219	UnaryOperationExpression	! s -> rematrix_custom		8122173	0					
ANR	8122220	UnaryOperator	!		8122173	0					
ANR	8122221	PtrMemberAccess	s -> rematrix_custom		8122173	1					
ANR	8122222	Identifier	s		8122173	0					
ANR	8122223	Identifier	rematrix_custom		8122173	1					
ANR	8122224	CompoundStatement		17:8:228:250	8122173	1					
ANR	8122225	IdentifierDeclStatement	int r = auto_matrix ( s ) ;	17:8:274:296	8122173	0	True				
ANR	8122226	IdentifierDecl	r = auto_matrix ( s )		8122173	0					
ANR	8122227	IdentifierDeclType	int		8122173	0					
ANR	8122228	Identifier	r		8122173	1					
ANR	8122229	AssignmentExpression	r = auto_matrix ( s )		8122173	2		=			
ANR	8122230	Identifier	r		8122173	0					
ANR	8122231	CallExpression	auto_matrix ( s )		8122173	1					
ANR	8122232	Callee	auto_matrix		8122173	0					
ANR	8122233	Identifier	auto_matrix		8122173	0					
ANR	8122234	ArgumentList	s		8122173	1					
ANR	8122235	Argument	s		8122173	0					
ANR	8122236	Identifier	s		8122173	0					
ANR	8122237	IfStatement	if ( r )		8122173	1					
ANR	8122238	Condition	r	19:12:311:311	8122173	0	True				
ANR	8122239	Identifier	r		8122173	0					
ANR	8122240	ReturnStatement	return r ;	21:12:327:335	8122173	1	True				
ANR	8122241	Identifier	r		8122173	0					
ANR	8122242	IfStatement	if ( s -> midbuf . fmt == AV_SAMPLE_FMT_S16P )		8122173	5					
ANR	8122243	Condition	s -> midbuf . fmt == AV_SAMPLE_FMT_S16P	25:8:353:387	8122173	0	True				
ANR	8122244	EqualityExpression	s -> midbuf . fmt == AV_SAMPLE_FMT_S16P		8122173	0		==			
ANR	8122245	MemberAccess	s -> midbuf . fmt		8122173	0					
ANR	8122246	PtrMemberAccess	s -> midbuf		8122173	0					
ANR	8122247	Identifier	s		8122173	0					
ANR	8122248	Identifier	midbuf		8122173	1					
ANR	8122249	Identifier	fmt		8122173	1					
ANR	8122250	Identifier	AV_SAMPLE_FMT_S16P		8122173	1					
ANR	8122251	CompoundStatement		25:44:343:343	8122173	1					
ANR	8122252	ExpressionStatement	"s -> native_matrix = av_calloc ( nb_in * nb_out , sizeof ( int ) )"	27:8:400:457	8122173	0	True				
ANR	8122253	AssignmentExpression	"s -> native_matrix = av_calloc ( nb_in * nb_out , sizeof ( int ) )"		8122173	0		=			
ANR	8122254	PtrMemberAccess	s -> native_matrix		8122173	0					
ANR	8122255	Identifier	s		8122173	0					
ANR	8122256	Identifier	native_matrix		8122173	1					
ANR	8122257	CallExpression	"av_calloc ( nb_in * nb_out , sizeof ( int ) )"		8122173	1					
ANR	8122258	Callee	av_calloc		8122173	0					
ANR	8122259	Identifier	av_calloc		8122173	0					
ANR	8122260	ArgumentList	nb_in * nb_out		8122173	1					
ANR	8122261	Argument	nb_in * nb_out		8122173	0					
ANR	8122262	MultiplicativeExpression	nb_in * nb_out		8122173	0		*			
ANR	8122263	Identifier	nb_in		8122173	0					
ANR	8122264	Identifier	nb_out		8122173	1					
ANR	8122265	Argument	sizeof ( int )		8122173	1					
ANR	8122266	SizeofExpression	sizeof ( int )		8122173	0					
ANR	8122267	Sizeof	sizeof		8122173	0					
ANR	8122268	SizeofOperand	int		8122173	1					
ANR	8122269	ExpressionStatement	s -> native_one = av_mallocz ( sizeof ( int ) )	29:8:468:510	8122173	1	True				
ANR	8122270	AssignmentExpression	s -> native_one = av_mallocz ( sizeof ( int ) )		8122173	0		=			
ANR	8122271	PtrMemberAccess	s -> native_one		8122173	0					
ANR	8122272	Identifier	s		8122173	0					
ANR	8122273	Identifier	native_one		8122173	1					
ANR	8122274	CallExpression	av_mallocz ( sizeof ( int ) )		8122173	1					
ANR	8122275	Callee	av_mallocz		8122173	0					
ANR	8122276	Identifier	av_mallocz		8122173	0					
ANR	8122277	ArgumentList	sizeof ( int )		8122173	1					
ANR	8122278	Argument	sizeof ( int )		8122173	0					
ANR	8122279	SizeofExpression	sizeof ( int )		8122173	0					
ANR	8122280	Sizeof	sizeof		8122173	0					
ANR	8122281	SizeofOperand	int		8122173	1					
ANR	8122282	IfStatement	if ( ! s -> native_matrix || ! s -> native_one )		8122173	2					
ANR	8122283	Condition	! s -> native_matrix || ! s -> native_one	31:12:525:559	8122173	0	True				
ANR	8122284	OrExpression	! s -> native_matrix || ! s -> native_one		8122173	0		||			
ANR	8122285	UnaryOperationExpression	! s -> native_matrix		8122173	0					
ANR	8122286	UnaryOperator	!		8122173	0					
ANR	8122287	PtrMemberAccess	s -> native_matrix		8122173	1					
ANR	8122288	Identifier	s		8122173	0					
ANR	8122289	Identifier	native_matrix		8122173	1					
ANR	8122290	UnaryOperationExpression	! s -> native_one		8122173	1					
ANR	8122291	UnaryOperator	!		8122173	0					
ANR	8122292	PtrMemberAccess	s -> native_one		8122173	1					
ANR	8122293	Identifier	s		8122173	0					
ANR	8122294	Identifier	native_one		8122173	1					
ANR	8122295	ReturnStatement	return AVERROR ( ENOMEM ) ;	33:12:575:597	8122173	1	True				
ANR	8122296	CallExpression	AVERROR ( ENOMEM )		8122173	0					
ANR	8122297	Callee	AVERROR		8122173	0					
ANR	8122298	Identifier	AVERROR		8122173	0					
ANR	8122299	ArgumentList	ENOMEM		8122173	1					
ANR	8122300	Argument	ENOMEM		8122173	0					
ANR	8122301	Identifier	ENOMEM		8122173	0					
ANR	8122302	ForStatement	for ( i = 0 ; i < nb_out ; i ++ )		8122173	3					
ANR	8122303	ForInit	i = 0 ;	35:13:613:618	8122173	0	True				
ANR	8122304	AssignmentExpression	i = 0		8122173	0		=			
ANR	8122305	Identifier	i		8122173	0					
ANR	8122306	PrimaryExpression	0		8122173	1					
ANR	8122307	Condition	i < nb_out	35:20:620:629	8122173	1	True				
ANR	8122308	RelationalExpression	i < nb_out		8122173	0		<			
ANR	8122309	Identifier	i		8122173	0					
ANR	8122310	Identifier	nb_out		8122173	1					
ANR	8122311	PostIncDecOperationExpression	i ++	35:32:632:634	8122173	2	True				
ANR	8122312	Identifier	i		8122173	0					
ANR	8122313	IncDec	++		8122173	1					
ANR	8122314	CompoundStatement		37:12:606:620	8122173	3					
ANR	8122315	IdentifierDeclStatement	double rem = 0 ;	37:12:652:666	8122173	0	True				
ANR	8122316	IdentifierDecl	rem = 0		8122173	0					
ANR	8122317	IdentifierDeclType	double		8122173	0					
ANR	8122318	Identifier	rem		8122173	1					
ANR	8122319	AssignmentExpression	rem = 0		8122173	2		=			
ANR	8122320	Identifier	rem		8122173	0					
ANR	8122321	PrimaryExpression	0		8122173	1					
ANR	8122322	ForStatement	for ( j = 0 ; j < nb_in ; j ++ )		8122173	1					
ANR	8122323	ForInit	j = 0 ;	41:17:688:693	8122173	0	True				
ANR	8122324	AssignmentExpression	j = 0		8122173	0		=			
ANR	8122325	Identifier	j		8122173	0					
ANR	8122326	PrimaryExpression	0		8122173	1					
ANR	8122327	Condition	j < nb_in	41:24:695:703	8122173	1	True				
ANR	8122328	RelationalExpression	j < nb_in		8122173	0		<			
ANR	8122329	Identifier	j		8122173	0					
ANR	8122330	Identifier	nb_in		8122173	1					
ANR	8122331	PostIncDecOperationExpression	j ++	41:35:706:708	8122173	2	True				
ANR	8122332	Identifier	j		8122173	0					
ANR	8122333	IncDec	++		8122173	1					
ANR	8122334	CompoundStatement		43:16:684:729	8122173	3					
ANR	8122335	IdentifierDeclStatement	double target = s -> matrix [ i ] [ j ] * 32768 + rem ;	43:16:730:775	8122173	0	True				
ANR	8122336	IdentifierDecl	target = s -> matrix [ i ] [ j ] * 32768 + rem		8122173	0					
ANR	8122337	IdentifierDeclType	double		8122173	0					
ANR	8122338	Identifier	target		8122173	1					
ANR	8122339	AssignmentExpression	target = s -> matrix [ i ] [ j ] * 32768 + rem		8122173	2		=			
ANR	8122340	Identifier	target		8122173	0					
ANR	8122341	AdditiveExpression	s -> matrix [ i ] [ j ] * 32768 + rem		8122173	1		+			
ANR	8122342	MultiplicativeExpression	s -> matrix [ i ] [ j ] * 32768		8122173	0		*			
ANR	8122343	ArrayIndexing	s -> matrix [ i ] [ j ]		8122173	0					
ANR	8122344	ArrayIndexing	s -> matrix [ i ]		8122173	0					
ANR	8122345	PtrMemberAccess	s -> matrix		8122173	0					
ANR	8122346	Identifier	s		8122173	0					
ANR	8122347	Identifier	matrix		8122173	1					
ANR	8122348	Identifier	i		8122173	1					
ANR	8122349	Identifier	j		8122173	1					
ANR	8122350	PrimaryExpression	32768		8122173	1					
ANR	8122351	Identifier	rem		8122173	1					
ANR	8122352	ExpressionStatement	( ( int * ) s -> native_matrix ) [ i * nb_in + j ] = lrintf ( target )	45:16:794:850	8122173	1	True				
ANR	8122353	AssignmentExpression	( ( int * ) s -> native_matrix ) [ i * nb_in + j ] = lrintf ( target )		8122173	0		=			
ANR	8122354	ArrayIndexing	( ( int * ) s -> native_matrix ) [ i * nb_in + j ]		8122173	0					
ANR	8122355	CastExpression	( int * ) s -> native_matrix		8122173	0					
ANR	8122356	CastTarget	int *		8122173	0					
ANR	8122357	PtrMemberAccess	s -> native_matrix		8122173	1					
ANR	8122358	Identifier	s		8122173	0					
ANR	8122359	Identifier	native_matrix		8122173	1					
ANR	8122360	AdditiveExpression	i * nb_in + j		8122173	1		+			
ANR	8122361	MultiplicativeExpression	i * nb_in		8122173	0		*			
ANR	8122362	Identifier	i		8122173	0					
ANR	8122363	Identifier	nb_in		8122173	1					
ANR	8122364	Identifier	j		8122173	1					
ANR	8122365	CallExpression	lrintf ( target )		8122173	1					
ANR	8122366	Callee	lrintf		8122173	0					
ANR	8122367	Identifier	lrintf		8122173	0					
ANR	8122368	ArgumentList	target		8122173	1					
ANR	8122369	Argument	target		8122173	0					
ANR	8122370	Identifier	target		8122173	0					
ANR	8122371	ExpressionStatement	rem += target - ( ( int * ) s -> native_matrix ) [ i * nb_in + j ]	47:16:869:924	8122173	2	True				
ANR	8122372	AssignmentExpression	rem += target - ( ( int * ) s -> native_matrix ) [ i * nb_in + j ]		8122173	0		+=			
ANR	8122373	Identifier	rem		8122173	0					
ANR	8122374	AdditiveExpression	target - ( ( int * ) s -> native_matrix ) [ i * nb_in + j ]		8122173	1		-			
ANR	8122375	Identifier	target		8122173	0					
ANR	8122376	ArrayIndexing	( ( int * ) s -> native_matrix ) [ i * nb_in + j ]		8122173	1					
ANR	8122377	CastExpression	( int * ) s -> native_matrix		8122173	0					
ANR	8122378	CastTarget	int *		8122173	0					
ANR	8122379	PtrMemberAccess	s -> native_matrix		8122173	1					
ANR	8122380	Identifier	s		8122173	0					
ANR	8122381	Identifier	native_matrix		8122173	1					
ANR	8122382	AdditiveExpression	i * nb_in + j		8122173	1		+			
ANR	8122383	MultiplicativeExpression	i * nb_in		8122173	0		*			
ANR	8122384	Identifier	i		8122173	0					
ANR	8122385	Identifier	nb_in		8122173	1					
ANR	8122386	Identifier	j		8122173	1					
ANR	8122387	ExpressionStatement	* ( ( int * ) s -> native_one ) = 32768	53:8:961:991	8122173	4	True				
ANR	8122388	AssignmentExpression	* ( ( int * ) s -> native_one ) = 32768		8122173	0		=			
ANR	8122389	UnaryOperationExpression	* ( ( int * ) s -> native_one )		8122173	0					
ANR	8122390	UnaryOperator	*		8122173	0					
ANR	8122391	CastExpression	( int * ) s -> native_one		8122173	1					
ANR	8122392	CastTarget	int *		8122173	0					
ANR	8122393	PtrMemberAccess	s -> native_one		8122173	1					
ANR	8122394	Identifier	s		8122173	0					
ANR	8122395	Identifier	native_one		8122173	1					
ANR	8122396	PrimaryExpression	32768		8122173	1					
ANR	8122397	ExpressionStatement	s -> mix_1_1_f = ( mix_1_1_func_type * ) copy_s16	55:8:1002:1045	8122173	5	True				
ANR	8122398	AssignmentExpression	s -> mix_1_1_f = ( mix_1_1_func_type * ) copy_s16		8122173	0		=			
ANR	8122399	PtrMemberAccess	s -> mix_1_1_f		8122173	0					
ANR	8122400	Identifier	s		8122173	0					
ANR	8122401	Identifier	mix_1_1_f		8122173	1					
ANR	8122402	CastExpression	( mix_1_1_func_type * ) copy_s16		8122173	1					
ANR	8122403	CastTarget	mix_1_1_func_type *		8122173	0					
ANR	8122404	Identifier	copy_s16		8122173	1					
ANR	8122405	ExpressionStatement	s -> mix_2_1_f = ( mix_2_1_func_type * ) sum2_s16	57:8:1056:1099	8122173	6	True				
ANR	8122406	AssignmentExpression	s -> mix_2_1_f = ( mix_2_1_func_type * ) sum2_s16		8122173	0		=			
ANR	8122407	PtrMemberAccess	s -> mix_2_1_f		8122173	0					
ANR	8122408	Identifier	s		8122173	0					
ANR	8122409	Identifier	mix_2_1_f		8122173	1					
ANR	8122410	CastExpression	( mix_2_1_func_type * ) sum2_s16		8122173	1					
ANR	8122411	CastTarget	mix_2_1_func_type *		8122173	0					
ANR	8122412	Identifier	sum2_s16		8122173	1					
ANR	8122413	ExpressionStatement	s -> mix_any_f = ( mix_any_func_type * ) get_mix_any_func_s16 ( s )	59:8:1110:1168	8122173	7	True				
ANR	8122414	AssignmentExpression	s -> mix_any_f = ( mix_any_func_type * ) get_mix_any_func_s16 ( s )		8122173	0		=			
ANR	8122415	PtrMemberAccess	s -> mix_any_f		8122173	0					
ANR	8122416	Identifier	s		8122173	0					
ANR	8122417	Identifier	mix_any_f		8122173	1					
ANR	8122418	CastExpression	( mix_any_func_type * ) get_mix_any_func_s16 ( s )		8122173	1					
ANR	8122419	CastTarget	mix_any_func_type *		8122173	0					
ANR	8122420	CallExpression	get_mix_any_func_s16 ( s )		8122173	1					
ANR	8122421	Callee	get_mix_any_func_s16		8122173	0					
ANR	8122422	Identifier	get_mix_any_func_s16		8122173	0					
ANR	8122423	ArgumentList	s		8122173	1					
ANR	8122424	Argument	s		8122173	0					
ANR	8122425	Identifier	s		8122173	0					
ANR	8122426	ElseStatement	else		8122173	0					
ANR	8122427	IfStatement	if ( s -> midbuf . fmt == AV_SAMPLE_FMT_FLTP )		8122173	0					
ANR	8122428	Condition	s -> midbuf . fmt == AV_SAMPLE_FMT_FLTP	61:13:1184:1218	8122173	0	True				
ANR	8122429	EqualityExpression	s -> midbuf . fmt == AV_SAMPLE_FMT_FLTP		8122173	0		==			
ANR	8122430	MemberAccess	s -> midbuf . fmt		8122173	0					
ANR	8122431	PtrMemberAccess	s -> midbuf		8122173	0					
ANR	8122432	Identifier	s		8122173	0					
ANR	8122433	Identifier	midbuf		8122173	1					
ANR	8122434	Identifier	fmt		8122173	1					
ANR	8122435	Identifier	AV_SAMPLE_FMT_FLTP		8122173	1					
ANR	8122436	CompoundStatement		61:49:1174:1174	8122173	1					
ANR	8122437	ExpressionStatement	"s -> native_matrix = av_calloc ( nb_in * nb_out , sizeof ( float ) )"	63:8:1231:1290	8122173	0	True				
ANR	8122438	AssignmentExpression	"s -> native_matrix = av_calloc ( nb_in * nb_out , sizeof ( float ) )"		8122173	0		=			
ANR	8122439	PtrMemberAccess	s -> native_matrix		8122173	0					
ANR	8122440	Identifier	s		8122173	0					
ANR	8122441	Identifier	native_matrix		8122173	1					
ANR	8122442	CallExpression	"av_calloc ( nb_in * nb_out , sizeof ( float ) )"		8122173	1					
ANR	8122443	Callee	av_calloc		8122173	0					
ANR	8122444	Identifier	av_calloc		8122173	0					
ANR	8122445	ArgumentList	nb_in * nb_out		8122173	1					
ANR	8122446	Argument	nb_in * nb_out		8122173	0					
ANR	8122447	MultiplicativeExpression	nb_in * nb_out		8122173	0		*			
ANR	8122448	Identifier	nb_in		8122173	0					
ANR	8122449	Identifier	nb_out		8122173	1					
ANR	8122450	Argument	sizeof ( float )		8122173	1					
ANR	8122451	SizeofExpression	sizeof ( float )		8122173	0					
ANR	8122452	Sizeof	sizeof		8122173	0					
ANR	8122453	SizeofOperand	float		8122173	1					
ANR	8122454	ExpressionStatement	s -> native_one = av_mallocz ( sizeof ( float ) )	65:8:1301:1345	8122173	1	True				
ANR	8122455	AssignmentExpression	s -> native_one = av_mallocz ( sizeof ( float ) )		8122173	0		=			
ANR	8122456	PtrMemberAccess	s -> native_one		8122173	0					
ANR	8122457	Identifier	s		8122173	0					
ANR	8122458	Identifier	native_one		8122173	1					
ANR	8122459	CallExpression	av_mallocz ( sizeof ( float ) )		8122173	1					
ANR	8122460	Callee	av_mallocz		8122173	0					
ANR	8122461	Identifier	av_mallocz		8122173	0					
ANR	8122462	ArgumentList	sizeof ( float )		8122173	1					
ANR	8122463	Argument	sizeof ( float )		8122173	0					
ANR	8122464	SizeofExpression	sizeof ( float )		8122173	0					
ANR	8122465	Sizeof	sizeof		8122173	0					
ANR	8122466	SizeofOperand	float		8122173	1					
ANR	8122467	IfStatement	if ( ! s -> native_matrix || ! s -> native_one )		8122173	2					
ANR	8122468	Condition	! s -> native_matrix || ! s -> native_one	67:12:1360:1394	8122173	0	True				
ANR	8122469	OrExpression	! s -> native_matrix || ! s -> native_one		8122173	0		||			
ANR	8122470	UnaryOperationExpression	! s -> native_matrix		8122173	0					
ANR	8122471	UnaryOperator	!		8122173	0					
ANR	8122472	PtrMemberAccess	s -> native_matrix		8122173	1					
ANR	8122473	Identifier	s		8122173	0					
ANR	8122474	Identifier	native_matrix		8122173	1					
ANR	8122475	UnaryOperationExpression	! s -> native_one		8122173	1					
ANR	8122476	UnaryOperator	!		8122173	0					
ANR	8122477	PtrMemberAccess	s -> native_one		8122173	1					
ANR	8122478	Identifier	s		8122173	0					
ANR	8122479	Identifier	native_one		8122173	1					
ANR	8122480	ReturnStatement	return AVERROR ( ENOMEM ) ;	69:12:1410:1432	8122173	1	True				
ANR	8122481	CallExpression	AVERROR ( ENOMEM )		8122173	0					
ANR	8122482	Callee	AVERROR		8122173	0					
ANR	8122483	Identifier	AVERROR		8122173	0					
ANR	8122484	ArgumentList	ENOMEM		8122173	1					
ANR	8122485	Argument	ENOMEM		8122173	0					
ANR	8122486	Identifier	ENOMEM		8122173	0					
ANR	8122487	ForStatement	for ( i = 0 ; i < nb_out ; i ++ )		8122173	3					
ANR	8122488	ForInit	i = 0 ;	71:13:1448:1453	8122173	0	True				
ANR	8122489	AssignmentExpression	i = 0		8122173	0		=			
ANR	8122490	Identifier	i		8122173	0					
ANR	8122491	PrimaryExpression	0		8122173	1					
ANR	8122492	Condition	i < nb_out	71:20:1455:1464	8122173	1	True				
ANR	8122493	RelationalExpression	i < nb_out		8122173	0		<			
ANR	8122494	Identifier	i		8122173	0					
ANR	8122495	Identifier	nb_out		8122173	1					
ANR	8122496	PostIncDecOperationExpression	i ++	71:32:1467:1469	8122173	2	True				
ANR	8122497	Identifier	i		8122173	0					
ANR	8122498	IncDec	++		8122173	1					
ANR	8122499	ForStatement	for ( j = 0 ; j < nb_in ; j ++ )		8122173	3					
ANR	8122500	ForInit	j = 0 ;	73:17:1490:1495	8122173	0	True				
ANR	8122501	AssignmentExpression	j = 0		8122173	0		=			
ANR	8122502	Identifier	j		8122173	0					
ANR	8122503	PrimaryExpression	0		8122173	1					
ANR	8122504	Condition	j < nb_in	73:24:1497:1505	8122173	1	True				
ANR	8122505	RelationalExpression	j < nb_in		8122173	0		<			
ANR	8122506	Identifier	j		8122173	0					
ANR	8122507	Identifier	nb_in		8122173	1					
ANR	8122508	PostIncDecOperationExpression	j ++	73:35:1508:1510	8122173	2	True				
ANR	8122509	Identifier	j		8122173	0					
ANR	8122510	IncDec	++		8122173	1					
ANR	8122511	ExpressionStatement	( ( float * ) s -> native_matrix ) [ i * nb_in + j ] = s -> matrix [ i ] [ j ]	75:16:1530:1589	8122173	3	True				
ANR	8122512	AssignmentExpression	( ( float * ) s -> native_matrix ) [ i * nb_in + j ] = s -> matrix [ i ] [ j ]		8122173	0		=			
ANR	8122513	ArrayIndexing	( ( float * ) s -> native_matrix ) [ i * nb_in + j ]		8122173	0					
ANR	8122514	CastExpression	( float * ) s -> native_matrix		8122173	0					
ANR	8122515	CastTarget	float *		8122173	0					
ANR	8122516	PtrMemberAccess	s -> native_matrix		8122173	1					
ANR	8122517	Identifier	s		8122173	0					
ANR	8122518	Identifier	native_matrix		8122173	1					
ANR	8122519	AdditiveExpression	i * nb_in + j		8122173	1		+			
ANR	8122520	MultiplicativeExpression	i * nb_in		8122173	0		*			
ANR	8122521	Identifier	i		8122173	0					
ANR	8122522	Identifier	nb_in		8122173	1					
ANR	8122523	Identifier	j		8122173	1					
ANR	8122524	ArrayIndexing	s -> matrix [ i ] [ j ]		8122173	1					
ANR	8122525	ArrayIndexing	s -> matrix [ i ]		8122173	0					
ANR	8122526	PtrMemberAccess	s -> matrix		8122173	0					
ANR	8122527	Identifier	s		8122173	0					
ANR	8122528	Identifier	matrix		8122173	1					
ANR	8122529	Identifier	i		8122173	1					
ANR	8122530	Identifier	j		8122173	1					
ANR	8122531	ExpressionStatement	* ( ( float * ) s -> native_one ) = 1.0	77:8:1600:1630	8122173	4	True				
ANR	8122532	AssignmentExpression	* ( ( float * ) s -> native_one ) = 1.0		8122173	0		=			
ANR	8122533	UnaryOperationExpression	* ( ( float * ) s -> native_one )		8122173	0					
ANR	8122534	UnaryOperator	*		8122173	0					
ANR	8122535	CastExpression	( float * ) s -> native_one		8122173	1					
ANR	8122536	CastTarget	float *		8122173	0					
ANR	8122537	PtrMemberAccess	s -> native_one		8122173	1					
ANR	8122538	Identifier	s		8122173	0					
ANR	8122539	Identifier	native_one		8122173	1					
ANR	8122540	PrimaryExpression	1.0		8122173	1					
ANR	8122541	ExpressionStatement	s -> mix_1_1_f = ( mix_1_1_func_type * ) copy_float	79:8:1641:1686	8122173	5	True				
ANR	8122542	AssignmentExpression	s -> mix_1_1_f = ( mix_1_1_func_type * ) copy_float		8122173	0		=			
ANR	8122543	PtrMemberAccess	s -> mix_1_1_f		8122173	0					
ANR	8122544	Identifier	s		8122173	0					
ANR	8122545	Identifier	mix_1_1_f		8122173	1					
ANR	8122546	CastExpression	( mix_1_1_func_type * ) copy_float		8122173	1					
ANR	8122547	CastTarget	mix_1_1_func_type *		8122173	0					
ANR	8122548	Identifier	copy_float		8122173	1					
ANR	8122549	ExpressionStatement	s -> mix_2_1_f = ( mix_2_1_func_type * ) sum2_float	81:8:1697:1742	8122173	6	True				
ANR	8122550	AssignmentExpression	s -> mix_2_1_f = ( mix_2_1_func_type * ) sum2_float		8122173	0		=			
ANR	8122551	PtrMemberAccess	s -> mix_2_1_f		8122173	0					
ANR	8122552	Identifier	s		8122173	0					
ANR	8122553	Identifier	mix_2_1_f		8122173	1					
ANR	8122554	CastExpression	( mix_2_1_func_type * ) sum2_float		8122173	1					
ANR	8122555	CastTarget	mix_2_1_func_type *		8122173	0					
ANR	8122556	Identifier	sum2_float		8122173	1					
ANR	8122557	ExpressionStatement	s -> mix_any_f = ( mix_any_func_type * ) get_mix_any_func_float ( s )	83:8:1753:1813	8122173	7	True				
ANR	8122558	AssignmentExpression	s -> mix_any_f = ( mix_any_func_type * ) get_mix_any_func_float ( s )		8122173	0		=			
ANR	8122559	PtrMemberAccess	s -> mix_any_f		8122173	0					
ANR	8122560	Identifier	s		8122173	0					
ANR	8122561	Identifier	mix_any_f		8122173	1					
ANR	8122562	CastExpression	( mix_any_func_type * ) get_mix_any_func_float ( s )		8122173	1					
ANR	8122563	CastTarget	mix_any_func_type *		8122173	0					
ANR	8122564	CallExpression	get_mix_any_func_float ( s )		8122173	1					
ANR	8122565	Callee	get_mix_any_func_float		8122173	0					
ANR	8122566	Identifier	get_mix_any_func_float		8122173	0					
ANR	8122567	ArgumentList	s		8122173	1					
ANR	8122568	Argument	s		8122173	0					
ANR	8122569	Identifier	s		8122173	0					
ANR	8122570	ElseStatement	else		8122173	0					
ANR	8122571	IfStatement	if ( s -> midbuf . fmt == AV_SAMPLE_FMT_DBLP )		8122173	0					
ANR	8122572	Condition	s -> midbuf . fmt == AV_SAMPLE_FMT_DBLP	85:13:1829:1863	8122173	0	True				
ANR	8122573	EqualityExpression	s -> midbuf . fmt == AV_SAMPLE_FMT_DBLP		8122173	0		==			
ANR	8122574	MemberAccess	s -> midbuf . fmt		8122173	0					
ANR	8122575	PtrMemberAccess	s -> midbuf		8122173	0					
ANR	8122576	Identifier	s		8122173	0					
ANR	8122577	Identifier	midbuf		8122173	1					
ANR	8122578	Identifier	fmt		8122173	1					
ANR	8122579	Identifier	AV_SAMPLE_FMT_DBLP		8122173	1					
ANR	8122580	CompoundStatement		85:49:1819:1819	8122173	1					
ANR	8122581	ExpressionStatement	"s -> native_matrix = av_calloc ( nb_in * nb_out , sizeof ( double ) )"	87:8:1876:1936	8122173	0	True				
ANR	8122582	AssignmentExpression	"s -> native_matrix = av_calloc ( nb_in * nb_out , sizeof ( double ) )"		8122173	0		=			
ANR	8122583	PtrMemberAccess	s -> native_matrix		8122173	0					
ANR	8122584	Identifier	s		8122173	0					
ANR	8122585	Identifier	native_matrix		8122173	1					
ANR	8122586	CallExpression	"av_calloc ( nb_in * nb_out , sizeof ( double ) )"		8122173	1					
ANR	8122587	Callee	av_calloc		8122173	0					
ANR	8122588	Identifier	av_calloc		8122173	0					
ANR	8122589	ArgumentList	nb_in * nb_out		8122173	1					
ANR	8122590	Argument	nb_in * nb_out		8122173	0					
ANR	8122591	MultiplicativeExpression	nb_in * nb_out		8122173	0		*			
ANR	8122592	Identifier	nb_in		8122173	0					
ANR	8122593	Identifier	nb_out		8122173	1					
ANR	8122594	Argument	sizeof ( double )		8122173	1					
ANR	8122595	SizeofExpression	sizeof ( double )		8122173	0					
ANR	8122596	Sizeof	sizeof		8122173	0					
ANR	8122597	SizeofOperand	double		8122173	1					
ANR	8122598	ExpressionStatement	s -> native_one = av_mallocz ( sizeof ( double ) )	89:8:1947:1992	8122173	1	True				
ANR	8122599	AssignmentExpression	s -> native_one = av_mallocz ( sizeof ( double ) )		8122173	0		=			
ANR	8122600	PtrMemberAccess	s -> native_one		8122173	0					
ANR	8122601	Identifier	s		8122173	0					
ANR	8122602	Identifier	native_one		8122173	1					
ANR	8122603	CallExpression	av_mallocz ( sizeof ( double ) )		8122173	1					
ANR	8122604	Callee	av_mallocz		8122173	0					
ANR	8122605	Identifier	av_mallocz		8122173	0					
ANR	8122606	ArgumentList	sizeof ( double )		8122173	1					
ANR	8122607	Argument	sizeof ( double )		8122173	0					
ANR	8122608	SizeofExpression	sizeof ( double )		8122173	0					
ANR	8122609	Sizeof	sizeof		8122173	0					
ANR	8122610	SizeofOperand	double		8122173	1					
ANR	8122611	IfStatement	if ( ! s -> native_matrix || ! s -> native_one )		8122173	2					
ANR	8122612	Condition	! s -> native_matrix || ! s -> native_one	91:12:2007:2041	8122173	0	True				
ANR	8122613	OrExpression	! s -> native_matrix || ! s -> native_one		8122173	0		||			
ANR	8122614	UnaryOperationExpression	! s -> native_matrix		8122173	0					
ANR	8122615	UnaryOperator	!		8122173	0					
ANR	8122616	PtrMemberAccess	s -> native_matrix		8122173	1					
ANR	8122617	Identifier	s		8122173	0					
ANR	8122618	Identifier	native_matrix		8122173	1					
ANR	8122619	UnaryOperationExpression	! s -> native_one		8122173	1					
ANR	8122620	UnaryOperator	!		8122173	0					
ANR	8122621	PtrMemberAccess	s -> native_one		8122173	1					
ANR	8122622	Identifier	s		8122173	0					
ANR	8122623	Identifier	native_one		8122173	1					
ANR	8122624	ReturnStatement	return AVERROR ( ENOMEM ) ;	93:12:2057:2079	8122173	1	True				
ANR	8122625	CallExpression	AVERROR ( ENOMEM )		8122173	0					
ANR	8122626	Callee	AVERROR		8122173	0					
ANR	8122627	Identifier	AVERROR		8122173	0					
ANR	8122628	ArgumentList	ENOMEM		8122173	1					
ANR	8122629	Argument	ENOMEM		8122173	0					
ANR	8122630	Identifier	ENOMEM		8122173	0					
ANR	8122631	ForStatement	for ( i = 0 ; i < nb_out ; i ++ )		8122173	3					
ANR	8122632	ForInit	i = 0 ;	95:13:2095:2100	8122173	0	True				
ANR	8122633	AssignmentExpression	i = 0		8122173	0		=			
ANR	8122634	Identifier	i		8122173	0					
ANR	8122635	PrimaryExpression	0		8122173	1					
ANR	8122636	Condition	i < nb_out	95:20:2102:2111	8122173	1	True				
ANR	8122637	RelationalExpression	i < nb_out		8122173	0		<			
ANR	8122638	Identifier	i		8122173	0					
ANR	8122639	Identifier	nb_out		8122173	1					
ANR	8122640	PostIncDecOperationExpression	i ++	95:32:2114:2116	8122173	2	True				
ANR	8122641	Identifier	i		8122173	0					
ANR	8122642	IncDec	++		8122173	1					
ANR	8122643	ForStatement	for ( j = 0 ; j < nb_in ; j ++ )		8122173	3					
ANR	8122644	ForInit	j = 0 ;	97:17:2137:2142	8122173	0	True				
ANR	8122645	AssignmentExpression	j = 0		8122173	0		=			
ANR	8122646	Identifier	j		8122173	0					
ANR	8122647	PrimaryExpression	0		8122173	1					
ANR	8122648	Condition	j < nb_in	97:24:2144:2152	8122173	1	True				
ANR	8122649	RelationalExpression	j < nb_in		8122173	0		<			
ANR	8122650	Identifier	j		8122173	0					
ANR	8122651	Identifier	nb_in		8122173	1					
ANR	8122652	PostIncDecOperationExpression	j ++	97:35:2155:2157	8122173	2	True				
ANR	8122653	Identifier	j		8122173	0					
ANR	8122654	IncDec	++		8122173	1					
ANR	8122655	ExpressionStatement	( ( double * ) s -> native_matrix ) [ i * nb_in + j ] = s -> matrix [ i ] [ j ]	99:16:2177:2237	8122173	3	True				
ANR	8122656	AssignmentExpression	( ( double * ) s -> native_matrix ) [ i * nb_in + j ] = s -> matrix [ i ] [ j ]		8122173	0		=			
ANR	8122657	ArrayIndexing	( ( double * ) s -> native_matrix ) [ i * nb_in + j ]		8122173	0					
ANR	8122658	CastExpression	( double * ) s -> native_matrix		8122173	0					
ANR	8122659	CastTarget	double *		8122173	0					
ANR	8122660	PtrMemberAccess	s -> native_matrix		8122173	1					
ANR	8122661	Identifier	s		8122173	0					
ANR	8122662	Identifier	native_matrix		8122173	1					
ANR	8122663	AdditiveExpression	i * nb_in + j		8122173	1		+			
ANR	8122664	MultiplicativeExpression	i * nb_in		8122173	0		*			
ANR	8122665	Identifier	i		8122173	0					
ANR	8122666	Identifier	nb_in		8122173	1					
ANR	8122667	Identifier	j		8122173	1					
ANR	8122668	ArrayIndexing	s -> matrix [ i ] [ j ]		8122173	1					
ANR	8122669	ArrayIndexing	s -> matrix [ i ]		8122173	0					
ANR	8122670	PtrMemberAccess	s -> matrix		8122173	0					
ANR	8122671	Identifier	s		8122173	0					
ANR	8122672	Identifier	matrix		8122173	1					
ANR	8122673	Identifier	i		8122173	1					
ANR	8122674	Identifier	j		8122173	1					
ANR	8122675	ExpressionStatement	* ( ( double * ) s -> native_one ) = 1.0	101:8:2248:2279	8122173	4	True				
ANR	8122676	AssignmentExpression	* ( ( double * ) s -> native_one ) = 1.0		8122173	0		=			
ANR	8122677	UnaryOperationExpression	* ( ( double * ) s -> native_one )		8122173	0					
ANR	8122678	UnaryOperator	*		8122173	0					
ANR	8122679	CastExpression	( double * ) s -> native_one		8122173	1					
ANR	8122680	CastTarget	double *		8122173	0					
ANR	8122681	PtrMemberAccess	s -> native_one		8122173	1					
ANR	8122682	Identifier	s		8122173	0					
ANR	8122683	Identifier	native_one		8122173	1					
ANR	8122684	PrimaryExpression	1.0		8122173	1					
ANR	8122685	ExpressionStatement	s -> mix_1_1_f = ( mix_1_1_func_type * ) copy_double	103:8:2290:2336	8122173	5	True				
ANR	8122686	AssignmentExpression	s -> mix_1_1_f = ( mix_1_1_func_type * ) copy_double		8122173	0		=			
ANR	8122687	PtrMemberAccess	s -> mix_1_1_f		8122173	0					
ANR	8122688	Identifier	s		8122173	0					
ANR	8122689	Identifier	mix_1_1_f		8122173	1					
ANR	8122690	CastExpression	( mix_1_1_func_type * ) copy_double		8122173	1					
ANR	8122691	CastTarget	mix_1_1_func_type *		8122173	0					
ANR	8122692	Identifier	copy_double		8122173	1					
ANR	8122693	ExpressionStatement	s -> mix_2_1_f = ( mix_2_1_func_type * ) sum2_double	105:8:2347:2393	8122173	6	True				
ANR	8122694	AssignmentExpression	s -> mix_2_1_f = ( mix_2_1_func_type * ) sum2_double		8122173	0		=			
ANR	8122695	PtrMemberAccess	s -> mix_2_1_f		8122173	0					
ANR	8122696	Identifier	s		8122173	0					
ANR	8122697	Identifier	mix_2_1_f		8122173	1					
ANR	8122698	CastExpression	( mix_2_1_func_type * ) sum2_double		8122173	1					
ANR	8122699	CastTarget	mix_2_1_func_type *		8122173	0					
ANR	8122700	Identifier	sum2_double		8122173	1					
ANR	8122701	ExpressionStatement	s -> mix_any_f = ( mix_any_func_type * ) get_mix_any_func_double ( s )	107:8:2404:2465	8122173	7	True				
ANR	8122702	AssignmentExpression	s -> mix_any_f = ( mix_any_func_type * ) get_mix_any_func_double ( s )		8122173	0		=			
ANR	8122703	PtrMemberAccess	s -> mix_any_f		8122173	0					
ANR	8122704	Identifier	s		8122173	0					
ANR	8122705	Identifier	mix_any_f		8122173	1					
ANR	8122706	CastExpression	( mix_any_func_type * ) get_mix_any_func_double ( s )		8122173	1					
ANR	8122707	CastTarget	mix_any_func_type *		8122173	0					
ANR	8122708	CallExpression	get_mix_any_func_double ( s )		8122173	1					
ANR	8122709	Callee	get_mix_any_func_double		8122173	0					
ANR	8122710	Identifier	get_mix_any_func_double		8122173	0					
ANR	8122711	ArgumentList	s		8122173	1					
ANR	8122712	Argument	s		8122173	0					
ANR	8122713	Identifier	s		8122173	0					
ANR	8122714	ElseStatement	else		8122173	0					
ANR	8122715	IfStatement	if ( s -> midbuf . fmt == AV_SAMPLE_FMT_S32P )		8122173	0					
ANR	8122716	Condition	s -> midbuf . fmt == AV_SAMPLE_FMT_S32P	109:13:2481:2515	8122173	0	True				
ANR	8122717	EqualityExpression	s -> midbuf . fmt == AV_SAMPLE_FMT_S32P		8122173	0		==			
ANR	8122718	MemberAccess	s -> midbuf . fmt		8122173	0					
ANR	8122719	PtrMemberAccess	s -> midbuf		8122173	0					
ANR	8122720	Identifier	s		8122173	0					
ANR	8122721	Identifier	midbuf		8122173	1					
ANR	8122722	Identifier	fmt		8122173	1					
ANR	8122723	Identifier	AV_SAMPLE_FMT_S32P		8122173	1					
ANR	8122724	CompoundStatement		109:49:2471:2471	8122173	1					
ANR	8122725	ExpressionStatement	s -> native_one = av_mallocz ( sizeof ( int ) )	115:8:2643:2685	8122173	0	True				
ANR	8122726	AssignmentExpression	s -> native_one = av_mallocz ( sizeof ( int ) )		8122173	0		=			
ANR	8122727	PtrMemberAccess	s -> native_one		8122173	0					
ANR	8122728	Identifier	s		8122173	0					
ANR	8122729	Identifier	native_one		8122173	1					
ANR	8122730	CallExpression	av_mallocz ( sizeof ( int ) )		8122173	1					
ANR	8122731	Callee	av_mallocz		8122173	0					
ANR	8122732	Identifier	av_mallocz		8122173	0					
ANR	8122733	ArgumentList	sizeof ( int )		8122173	1					
ANR	8122734	Argument	sizeof ( int )		8122173	0					
ANR	8122735	SizeofExpression	sizeof ( int )		8122173	0					
ANR	8122736	Sizeof	sizeof		8122173	0					
ANR	8122737	SizeofOperand	int		8122173	1					
ANR	8122738	IfStatement	if ( ! s -> native_one )		8122173	1					
ANR	8122739	Condition	! s -> native_one	117:12:2700:2713	8122173	0	True				
ANR	8122740	UnaryOperationExpression	! s -> native_one		8122173	0					
ANR	8122741	UnaryOperator	!		8122173	0					
ANR	8122742	PtrMemberAccess	s -> native_one		8122173	1					
ANR	8122743	Identifier	s		8122173	0					
ANR	8122744	Identifier	native_one		8122173	1					
ANR	8122745	ReturnStatement	return AVERROR ( ENOMEM ) ;	119:12:2729:2751	8122173	1	True				
ANR	8122746	CallExpression	AVERROR ( ENOMEM )		8122173	0					
ANR	8122747	Callee	AVERROR		8122173	0					
ANR	8122748	Identifier	AVERROR		8122173	0					
ANR	8122749	ArgumentList	ENOMEM		8122173	1					
ANR	8122750	Argument	ENOMEM		8122173	0					
ANR	8122751	Identifier	ENOMEM		8122173	0					
ANR	8122752	ExpressionStatement	* ( ( int * ) s -> native_one ) = 32768	127:8:2929:2959	8122173	2	True				
ANR	8122753	AssignmentExpression	* ( ( int * ) s -> native_one ) = 32768		8122173	0		=			
ANR	8122754	UnaryOperationExpression	* ( ( int * ) s -> native_one )		8122173	0					
ANR	8122755	UnaryOperator	*		8122173	0					
ANR	8122756	CastExpression	( int * ) s -> native_one		8122173	1					
ANR	8122757	CastTarget	int *		8122173	0					
ANR	8122758	PtrMemberAccess	s -> native_one		8122173	1					
ANR	8122759	Identifier	s		8122173	0					
ANR	8122760	Identifier	native_one		8122173	1					
ANR	8122761	PrimaryExpression	32768		8122173	1					
ANR	8122762	ExpressionStatement	s -> mix_1_1_f = ( mix_1_1_func_type * ) copy_s32	129:8:2970:3013	8122173	3	True				
ANR	8122763	AssignmentExpression	s -> mix_1_1_f = ( mix_1_1_func_type * ) copy_s32		8122173	0		=			
ANR	8122764	PtrMemberAccess	s -> mix_1_1_f		8122173	0					
ANR	8122765	Identifier	s		8122173	0					
ANR	8122766	Identifier	mix_1_1_f		8122173	1					
ANR	8122767	CastExpression	( mix_1_1_func_type * ) copy_s32		8122173	1					
ANR	8122768	CastTarget	mix_1_1_func_type *		8122173	0					
ANR	8122769	Identifier	copy_s32		8122173	1					
ANR	8122770	ExpressionStatement	s -> mix_2_1_f = ( mix_2_1_func_type * ) sum2_s32	131:8:3024:3067	8122173	4	True				
ANR	8122771	AssignmentExpression	s -> mix_2_1_f = ( mix_2_1_func_type * ) sum2_s32		8122173	0		=			
ANR	8122772	PtrMemberAccess	s -> mix_2_1_f		8122173	0					
ANR	8122773	Identifier	s		8122173	0					
ANR	8122774	Identifier	mix_2_1_f		8122173	1					
ANR	8122775	CastExpression	( mix_2_1_func_type * ) sum2_s32		8122173	1					
ANR	8122776	CastTarget	mix_2_1_func_type *		8122173	0					
ANR	8122777	Identifier	sum2_s32		8122173	1					
ANR	8122778	ExpressionStatement	s -> mix_any_f = ( mix_any_func_type * ) get_mix_any_func_s32 ( s )	133:8:3078:3136	8122173	5	True				
ANR	8122779	AssignmentExpression	s -> mix_any_f = ( mix_any_func_type * ) get_mix_any_func_s32 ( s )		8122173	0		=			
ANR	8122780	PtrMemberAccess	s -> mix_any_f		8122173	0					
ANR	8122781	Identifier	s		8122173	0					
ANR	8122782	Identifier	mix_any_f		8122173	1					
ANR	8122783	CastExpression	( mix_any_func_type * ) get_mix_any_func_s32 ( s )		8122173	1					
ANR	8122784	CastTarget	mix_any_func_type *		8122173	0					
ANR	8122785	CallExpression	get_mix_any_func_s32 ( s )		8122173	1					
ANR	8122786	Callee	get_mix_any_func_s32		8122173	0					
ANR	8122787	Identifier	get_mix_any_func_s32		8122173	0					
ANR	8122788	ArgumentList	s		8122173	1					
ANR	8122789	Argument	s		8122173	0					
ANR	8122790	Identifier	s		8122173	0					
ANR	8122791	ElseStatement	else		8122173	0					
ANR	8122792	ExpressionStatement	av_assert0 ( 0 )	137:8:3158:3171	8122173	0	True				
ANR	8122793	CallExpression	av_assert0 ( 0 )		8122173	0					
ANR	8122794	Callee	av_assert0		8122173	0					
ANR	8122795	Identifier	av_assert0		8122173	0					
ANR	8122796	ArgumentList	0		8122173	1					
ANR	8122797	Argument	0		8122173	0					
ANR	8122798	PrimaryExpression	0		8122173	0					
ANR	8122799	ForStatement	for ( i = 0 ; i < SWR_CH_MAX ; i ++ )		8122173	6					
ANR	8122800	ForInit	i = 0 ;	141:9:3219:3224	8122173	0	True				
ANR	8122801	AssignmentExpression	i = 0		8122173	0		=			
ANR	8122802	Identifier	i		8122173	0					
ANR	8122803	PrimaryExpression	0		8122173	1					
ANR	8122804	Condition	i < SWR_CH_MAX	141:16:3226:3239	8122173	1	True				
ANR	8122805	RelationalExpression	i < SWR_CH_MAX		8122173	0		<			
ANR	8122806	Identifier	i		8122173	0					
ANR	8122807	Identifier	SWR_CH_MAX		8122173	1					
ANR	8122808	PostIncDecOperationExpression	i ++	141:32:3242:3244	8122173	2	True				
ANR	8122809	Identifier	i		8122173	0					
ANR	8122810	IncDec	++		8122173	1					
ANR	8122811	CompoundStatement		143:8:3212:3223	8122173	3					
ANR	8122812	IdentifierDeclStatement	int ch_in = 0 ;	143:8:3258:3269	8122173	0	True				
ANR	8122813	IdentifierDecl	ch_in = 0		8122173	0					
ANR	8122814	IdentifierDeclType	int		8122173	0					
ANR	8122815	Identifier	ch_in		8122173	1					
ANR	8122816	AssignmentExpression	ch_in = 0		8122173	2		=			
ANR	8122817	Identifier	ch_in		8122173	0					
ANR	8122818	PrimaryExpression	0		8122173	1					
ANR	8122819	ForStatement	for ( j = 0 ; j < SWR_CH_MAX ; j ++ )		8122173	1					
ANR	8122820	ForInit	j = 0 ;	145:13:3285:3290	8122173	0	True				
ANR	8122821	AssignmentExpression	j = 0		8122173	0		=			
ANR	8122822	Identifier	j		8122173	0					
ANR	8122823	PrimaryExpression	0		8122173	1					
ANR	8122824	Condition	j < SWR_CH_MAX	145:20:3292:3305	8122173	1	True				
ANR	8122825	RelationalExpression	j < SWR_CH_MAX		8122173	0		<			
ANR	8122826	Identifier	j		8122173	0					
ANR	8122827	Identifier	SWR_CH_MAX		8122173	1					
ANR	8122828	PostIncDecOperationExpression	j ++	145:36:3308:3310	8122173	2	True				
ANR	8122829	Identifier	j		8122173	0					
ANR	8122830	IncDec	++		8122173	1					
ANR	8122831	CompoundStatement		145:41:3267:3267	8122173	3					
ANR	8122832	ExpressionStatement	s -> matrix32 [ i ] [ j ] = lrintf ( s -> matrix [ i ] [ j ] * 32768 )	147:12:3328:3378	8122173	0	True				
ANR	8122833	AssignmentExpression	s -> matrix32 [ i ] [ j ] = lrintf ( s -> matrix [ i ] [ j ] * 32768 )		8122173	0		=			
ANR	8122834	ArrayIndexing	s -> matrix32 [ i ] [ j ]		8122173	0					
ANR	8122835	ArrayIndexing	s -> matrix32 [ i ]		8122173	0					
ANR	8122836	PtrMemberAccess	s -> matrix32		8122173	0					
ANR	8122837	Identifier	s		8122173	0					
ANR	8122838	Identifier	matrix32		8122173	1					
ANR	8122839	Identifier	i		8122173	1					
ANR	8122840	Identifier	j		8122173	1					
ANR	8122841	CallExpression	lrintf ( s -> matrix [ i ] [ j ] * 32768 )		8122173	1					
ANR	8122842	Callee	lrintf		8122173	0					
ANR	8122843	Identifier	lrintf		8122173	0					
ANR	8122844	ArgumentList	s -> matrix [ i ] [ j ] * 32768		8122173	1					
ANR	8122845	Argument	s -> matrix [ i ] [ j ] * 32768		8122173	0					
ANR	8122846	MultiplicativeExpression	s -> matrix [ i ] [ j ] * 32768		8122173	0		*			
ANR	8122847	ArrayIndexing	s -> matrix [ i ] [ j ]		8122173	0					
ANR	8122848	ArrayIndexing	s -> matrix [ i ]		8122173	0					
ANR	8122849	PtrMemberAccess	s -> matrix		8122173	0					
ANR	8122850	Identifier	s		8122173	0					
ANR	8122851	Identifier	matrix		8122173	1					
ANR	8122852	Identifier	i		8122173	1					
ANR	8122853	Identifier	j		8122173	1					
ANR	8122854	PrimaryExpression	32768		8122173	1					
ANR	8122855	IfStatement	if ( s -> matrix [ i ] [ j ] )		8122173	1					
ANR	8122856	Condition	s -> matrix [ i ] [ j ]	149:15:3396:3410	8122173	0	True				
ANR	8122857	ArrayIndexing	s -> matrix [ i ] [ j ]		8122173	0					
ANR	8122858	ArrayIndexing	s -> matrix [ i ]		8122173	0					
ANR	8122859	PtrMemberAccess	s -> matrix		8122173	0					
ANR	8122860	Identifier	s		8122173	0					
ANR	8122861	Identifier	matrix		8122173	1					
ANR	8122862	Identifier	i		8122173	1					
ANR	8122863	Identifier	j		8122173	1					
ANR	8122864	ExpressionStatement	s -> matrix_ch [ i ] [ ++ ch_in ] = j	151:16:3430:3457	8122173	1	True				
ANR	8122865	AssignmentExpression	s -> matrix_ch [ i ] [ ++ ch_in ] = j		8122173	0		=			
ANR	8122866	ArrayIndexing	s -> matrix_ch [ i ] [ ++ ch_in ]		8122173	0					
ANR	8122867	ArrayIndexing	s -> matrix_ch [ i ]		8122173	0					
ANR	8122868	PtrMemberAccess	s -> matrix_ch		8122173	0					
ANR	8122869	Identifier	s		8122173	0					
ANR	8122870	Identifier	matrix_ch		8122173	1					
ANR	8122871	Identifier	i		8122173	1					
ANR	8122872	UnaryExpression	++ ch_in		8122173	1					
ANR	8122873	IncDec	++		8122173	0					
ANR	8122874	Identifier	ch_in		8122173	1					
ANR	8122875	Identifier	j		8122173	1					
ANR	8122876	ExpressionStatement	s -> matrix_ch [ i ] [ 0 ] = ch_in	155:8:3479:3504	8122173	2	True				
ANR	8122877	AssignmentExpression	s -> matrix_ch [ i ] [ 0 ] = ch_in		8122173	0		=			
ANR	8122878	ArrayIndexing	s -> matrix_ch [ i ] [ 0 ]		8122173	0					
ANR	8122879	ArrayIndexing	s -> matrix_ch [ i ]		8122173	0					
ANR	8122880	PtrMemberAccess	s -> matrix_ch		8122173	0					
ANR	8122881	Identifier	s		8122173	0					
ANR	8122882	Identifier	matrix_ch		8122173	1					
ANR	8122883	Identifier	i		8122173	1					
ANR	8122884	PrimaryExpression	0		8122173	1					
ANR	8122885	Identifier	ch_in		8122173	1					
ANR	8122886	IfStatement	if ( HAVE_YASM && HAVE_MMX )		8122173	7					
ANR	8122887	Condition	HAVE_YASM && HAVE_MMX	161:7:3523:3543	8122173	0	True				
ANR	8122888	AndExpression	HAVE_YASM && HAVE_MMX		8122173	0		&&			
ANR	8122889	Identifier	HAVE_YASM		8122173	0					
ANR	8122890	Identifier	HAVE_MMX		8122173	1					
ANR	8122891	ReturnStatement	return swri_rematrix_init_x86 ( s ) ;	163:8:3555:3587	8122173	1	True				
ANR	8122892	CallExpression	swri_rematrix_init_x86 ( s )		8122173	0					
ANR	8122893	Callee	swri_rematrix_init_x86		8122173	0					
ANR	8122894	Identifier	swri_rematrix_init_x86		8122173	0					
ANR	8122895	ArgumentList	s		8122173	1					
ANR	8122896	Argument	s		8122173	0					
ANR	8122897	Identifier	s		8122173	0					
ANR	8122898	ReturnStatement	return 0 ;	167:4:3596:3604	8122173	8	True				
ANR	8122899	PrimaryExpression	0		8122173	0					
ANR	8122900	ReturnType	av_cold int		8122173	1					
ANR	8122901	Identifier	swri_rematrix_init		8122173	2					
ANR	8122902	ParameterList	SwrContext * s		8122173	3					
ANR	8122903	Parameter	SwrContext * s	1:31:31:43	8122173	0	True				
ANR	8122904	ParameterType	SwrContext *		8122173	0					
ANR	8122905	Identifier	s		8122173	1					
ANR	8122906	CFGEntryNode	ENTRY		8122173		True				
ANR	8122907	CFGExitNode	EXIT		8122173		True				
ANR	8122908	Symbol	ENOMEM		8122173						
ANR	8122909	Symbol	get_mix_any_func_s16		8122173						
ANR	8122910	Symbol	nb_out		8122173						
ANR	8122911	Symbol	* nb_in		8122173						
ANR	8122912	Symbol	AV_SAMPLE_FMT_FLTP		8122173						
ANR	8122913	Symbol	auto_matrix		8122173						
ANR	8122914	Symbol	* * s -> matrix		8122173						
ANR	8122915	Symbol	s -> out_ch_layout		8122173						
ANR	8122916	Symbol	copy_s32		8122173						
ANR	8122917	Symbol	* s -> matrix32		8122173						
ANR	8122918	Symbol	s -> midbuf . fmt		8122173						
ANR	8122919	Symbol	get_mix_any_func_float		8122173						
ANR	8122920	Symbol	get_mix_any_func_double		8122173						
ANR	8122921	Symbol	rem		8122173						
ANR	8122922	Symbol	sum2_double		8122173						
ANR	8122923	Symbol	ch_in		8122173						
ANR	8122924	Symbol	lrintf		8122173						
ANR	8122925	Symbol	s -> matrix_ch		8122173						
ANR	8122926	Symbol	* * i		8122173						
ANR	8122927	Symbol	* * s -> matrix32		8122173						
ANR	8122928	Symbol	NULL		8122173						
ANR	8122929	Symbol	* s -> native_matrix		8122173						
ANR	8122930	Symbol	AV_SAMPLE_FMT_S32P		8122173						
ANR	8122931	Symbol	av_mallocz		8122173						
ANR	8122932	Symbol	AV_SAMPLE_FMT_S16P		8122173						
ANR	8122933	Symbol	nb_in		8122173						
ANR	8122934	Symbol	sum2_s16		8122173						
ANR	8122935	Symbol	av_get_channel_layout_nb_channels		8122173						
ANR	8122936	Symbol	* s -> matrix		8122173						
ANR	8122937	Symbol	* * * s		8122173						
ANR	8122938	Symbol	s -> midbuf		8122173						
ANR	8122939	Symbol	s -> mix_1_1_f		8122173						
ANR	8122940	Symbol	* s -> native_one		8122173						
ANR	8122941	Symbol	HAVE_YASM		8122173						
ANR	8122942	Symbol	SWR_CH_MAX		8122173						
ANR	8122943	Symbol	s -> native_matrix		8122173						
ANR	8122944	Symbol	s -> mix_2_1_f		8122173						
ANR	8122945	Symbol	copy_float		8122173						
ANR	8122946	Symbol	swri_rematrix_init_x86		8122173						
ANR	8122947	Symbol	AV_SAMPLE_FMT_DBLP		8122173						
ANR	8122948	Symbol	get_mix_any_func_s32		8122173						
ANR	8122949	Symbol	* * s -> matrix_ch		8122173						
ANR	8122950	Symbol	* ch_in		8122173						
ANR	8122951	Symbol	* s -> matrix_ch		8122173						
ANR	8122952	Symbol	s -> mix_any_f		8122173						
ANR	8122953	Symbol	copy_s16		8122173						
ANR	8122954	Symbol	copy_double		8122173						
ANR	8122955	Symbol	* ( ( double * ) s -> native_one )		8122173						
ANR	8122956	Symbol	sum2_s32		8122173						
ANR	8122957	Symbol	* * s		8122173						
ANR	8122958	Symbol	s -> native_one		8122173						
ANR	8122959	Symbol	s -> in_ch_layout		8122173						
ANR	8122960	Symbol	av_calloc		8122173						
ANR	8122961	Symbol	HAVE_MMX		8122173						
ANR	8122962	Symbol	s -> matrix32		8122173						
ANR	8122963	Symbol	i		8122173						
ANR	8122964	Symbol	j		8122173						
ANR	8122965	Symbol	s -> matrix		8122173						
ANR	8122966	Symbol	sum2_float		8122173						
ANR	8122967	Symbol	target		8122173						
ANR	8122968	Symbol	r		8122173						
ANR	8122969	Symbol	s		8122173						
ANR	8122970	Symbol	* i		8122173						
ANR	8122971	Symbol	* ( ( float * ) s -> native_one )		8122173						
ANR	8122972	Symbol	* j		8122173						
ANR	8122973	Symbol	s -> rematrix_custom		8122173						
ANR	8122974	Symbol	* ( ( int * ) s -> native_one )		8122173						
ANR	8122975	Symbol	AVERROR		8122173						
ANR	8122976	Symbol	* s		8122173						
