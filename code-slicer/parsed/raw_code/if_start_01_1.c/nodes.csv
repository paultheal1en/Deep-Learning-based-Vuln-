command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4812973	File	/home/p4ultr4n/workplace/ReVeal/raw_code/if_start_01_1.c								
ANR	4812974	Function	if_start	1:0:0:1739							
ANR	4812975	FunctionDef	if_start (Slirp * slirp)		4812974	0					
ANR	4812976	CompoundStatement		3:0:24:1739	4812974	0					
ANR	4812977	IdentifierDeclStatement	uint64_t now = qemu_get_clock_ns ( rt_clock ) ;	5:4:31:73	4812974	0	True				
ANR	4812978	IdentifierDecl	now = qemu_get_clock_ns ( rt_clock )		4812974	0					
ANR	4812979	IdentifierDeclType	uint64_t		4812974	0					
ANR	4812980	Identifier	now		4812974	1					
ANR	4812981	AssignmentExpression	now = qemu_get_clock_ns ( rt_clock )		4812974	2		=			
ANR	4812982	Identifier	now		4812974	0					
ANR	4812983	CallExpression	qemu_get_clock_ns ( rt_clock )		4812974	1					
ANR	4812984	Callee	qemu_get_clock_ns		4812974	0					
ANR	4812985	Identifier	qemu_get_clock_ns		4812974	0					
ANR	4812986	ArgumentList	rt_clock		4812974	1					
ANR	4812987	Argument	rt_clock		4812974	0					
ANR	4812988	Identifier	rt_clock		4812974	0					
ANR	4812989	IdentifierDeclStatement	int requeued = 0 ;	7:4:80:96	4812974	1	True				
ANR	4812990	IdentifierDecl	requeued = 0		4812974	0					
ANR	4812991	IdentifierDeclType	int		4812974	0					
ANR	4812992	Identifier	requeued		4812974	1					
ANR	4812993	AssignmentExpression	requeued = 0		4812974	2		=			
ANR	4812994	Identifier	requeued		4812974	0					
ANR	4812995	PrimaryExpression	0		4812974	1					
ANR	4812996	IdentifierDeclStatement	"struct mbuf * ifm , * ifqt ;"	9:1:100:123	4812974	2	True				
ANR	4812997	IdentifierDecl	* ifm		4812974	0					
ANR	4812998	IdentifierDeclType	struct mbuf *		4812974	0					
ANR	4812999	Identifier	ifm		4812974	1					
ANR	4813000	IdentifierDecl	* ifqt		4812974	1					
ANR	4813001	IdentifierDeclType	struct mbuf *		4812974	0					
ANR	4813002	Identifier	ifqt		4812974	1					
ANR	4813003	ExpressionStatement	"DEBUG_CALL ( ""if_start"" )"	13:1:129:151	4812974	3	True				
ANR	4813004	CallExpression	"DEBUG_CALL ( ""if_start"" )"		4812974	0					
ANR	4813005	Callee	DEBUG_CALL		4812974	0					
ANR	4813006	Identifier	DEBUG_CALL		4812974	0					
ANR	4813007	ArgumentList	"""if_start"""		4812974	1					
ANR	4813008	Argument	"""if_start"""		4812974	0					
ANR	4813009	PrimaryExpression	"""if_start"""		4812974	0					
ANR	4813010	IfStatement	if ( slirp -> if_queued == 0 )		4812974	4					
ANR	4813011	Condition	slirp -> if_queued == 0	17:5:161:181	4812974	0	True				
ANR	4813012	EqualityExpression	slirp -> if_queued == 0		4812974	0		==			
ANR	4813013	PtrMemberAccess	slirp -> if_queued		4812974	0					
ANR	4813014	Identifier	slirp		4812974	0					
ANR	4813015	Identifier	if_queued		4812974	1					
ANR	4813016	PrimaryExpression	0		4812974	1					
ANR	4813017	ReturnStatement	return ;	19:4:189:195	4812974	1	True				
ANR	4813018	Label	again :	23:1:221:226	4812974	5	True				
ANR	4813019	Identifier	again		4812974	0					
ANR	4813020	IfStatement	if ( ! slirp_can_output ( slirp -> opaque ) )		4812974	6					
ANR	4813021	Condition	! slirp_can_output ( slirp -> opaque )	27:12:286:317	4812974	0	True				
ANR	4813022	UnaryOperationExpression	! slirp_can_output ( slirp -> opaque )		4812974	0					
ANR	4813023	UnaryOperator	!		4812974	0					
ANR	4813024	CallExpression	slirp_can_output ( slirp -> opaque )		4812974	1					
ANR	4813025	Callee	slirp_can_output		4812974	0					
ANR	4813026	Identifier	slirp_can_output		4812974	0					
ANR	4813027	ArgumentList	slirp -> opaque		4812974	1					
ANR	4813028	Argument	slirp -> opaque		4812974	0					
ANR	4813029	PtrMemberAccess	slirp -> opaque		4812974	0					
ANR	4813030	Identifier	slirp		4812974	0					
ANR	4813031	Identifier	opaque		4812974	1					
ANR	4813032	ReturnStatement	return ;	29:12:333:339	4812974	1	True				
ANR	4813033	IfStatement	if ( slirp -> if_fastq . ifq_next != & slirp -> if_fastq )		4812974	7					
ANR	4813034	Condition	slirp -> if_fastq . ifq_next != & slirp -> if_fastq	41:5:467:510	4812974	0	True				
ANR	4813035	EqualityExpression	slirp -> if_fastq . ifq_next != & slirp -> if_fastq		4812974	0		!=			
ANR	4813036	MemberAccess	slirp -> if_fastq . ifq_next		4812974	0					
ANR	4813037	PtrMemberAccess	slirp -> if_fastq		4812974	0					
ANR	4813038	Identifier	slirp		4812974	0					
ANR	4813039	Identifier	if_fastq		4812974	1					
ANR	4813040	Identifier	ifq_next		4812974	1					
ANR	4813041	UnaryOperationExpression	& slirp -> if_fastq		4812974	1					
ANR	4813042	UnaryOperator	&		4812974	0					
ANR	4813043	PtrMemberAccess	slirp -> if_fastq		4812974	1					
ANR	4813044	Identifier	slirp		4812974	0					
ANR	4813045	Identifier	if_fastq		4812974	1					
ANR	4813046	CompoundStatement		39:51:488:488	4812974	1					
ANR	4813047	ExpressionStatement	ifm = slirp -> if_fastq . ifq_next	43:2:518:548	4812974	0	True				
ANR	4813048	AssignmentExpression	ifm = slirp -> if_fastq . ifq_next		4812974	0		=			
ANR	4813049	Identifier	ifm		4812974	0					
ANR	4813050	MemberAccess	slirp -> if_fastq . ifq_next		4812974	1					
ANR	4813051	PtrMemberAccess	slirp -> if_fastq		4812974	0					
ANR	4813052	Identifier	slirp		4812974	0					
ANR	4813053	Identifier	if_fastq		4812974	1					
ANR	4813054	Identifier	ifq_next		4812974	1					
ANR	4813055	ElseStatement	else		4812974	0					
ANR	4813056	CompoundStatement		43:8:534:534	4812974	0					
ANR	4813057	IfStatement	if ( slirp -> next_m != & slirp -> if_batchq )		4812974	0					
ANR	4813058	Condition	slirp -> next_m != & slirp -> if_batchq	49:6:618:651	4812974	0	True				
ANR	4813059	EqualityExpression	slirp -> next_m != & slirp -> if_batchq		4812974	0		!=			
ANR	4813060	PtrMemberAccess	slirp -> next_m		4812974	0					
ANR	4813061	Identifier	slirp		4812974	0					
ANR	4813062	Identifier	next_m		4812974	1					
ANR	4813063	UnaryOperationExpression	& slirp -> if_batchq		4812974	1					
ANR	4813064	UnaryOperator	&		4812974	0					
ANR	4813065	PtrMemberAccess	slirp -> if_batchq		4812974	1					
ANR	4813066	Identifier	slirp		4812974	0					
ANR	4813067	Identifier	if_batchq		4812974	1					
ANR	4813068	ExpressionStatement	ifm = slirp -> next_m	51:5:660:679	4812974	1	True				
ANR	4813069	AssignmentExpression	ifm = slirp -> next_m		4812974	0		=			
ANR	4813070	Identifier	ifm		4812974	0					
ANR	4813071	PtrMemberAccess	slirp -> next_m		4812974	1					
ANR	4813072	Identifier	slirp		4812974	0					
ANR	4813073	Identifier	next_m		4812974	1					
ANR	4813074	ElseStatement	else		4812974	0					
ANR	4813075	ExpressionStatement	ifm = slirp -> if_batchq . ifq_next	55:5:695:726	4812974	0	True				
ANR	4813076	AssignmentExpression	ifm = slirp -> if_batchq . ifq_next		4812974	0		=			
ANR	4813077	Identifier	ifm		4812974	0					
ANR	4813078	MemberAccess	slirp -> if_batchq . ifq_next		4812974	1					
ANR	4813079	PtrMemberAccess	slirp -> if_batchq		4812974	0					
ANR	4813080	Identifier	slirp		4812974	0					
ANR	4813081	Identifier	if_batchq		4812974	1					
ANR	4813082	Identifier	ifq_next		4812974	1					
ANR	4813083	ExpressionStatement	slirp -> next_m = ifm -> ifq_next	61:2:785:814	4812974	1	True				
ANR	4813084	AssignmentExpression	slirp -> next_m = ifm -> ifq_next		4812974	0		=			
ANR	4813085	PtrMemberAccess	slirp -> next_m		4812974	0					
ANR	4813086	Identifier	slirp		4812974	0					
ANR	4813087	Identifier	next_m		4812974	1					
ANR	4813088	PtrMemberAccess	ifm -> ifq_next		4812974	1					
ANR	4813089	Identifier	ifm		4812974	0					
ANR	4813090	Identifier	ifq_next		4812974	1					
ANR	4813091	ExpressionStatement	ifqt = ifm -> ifq_prev	67:1:855:875	4812974	8	True				
ANR	4813092	AssignmentExpression	ifqt = ifm -> ifq_prev		4812974	0		=			
ANR	4813093	Identifier	ifqt		4812974	0					
ANR	4813094	PtrMemberAccess	ifm -> ifq_prev		4812974	1					
ANR	4813095	Identifier	ifm		4812974	0					
ANR	4813096	Identifier	ifq_prev		4812974	1					
ANR	4813097	ExpressionStatement	remque ( ifm )	69:1:879:890	4812974	9	True				
ANR	4813098	CallExpression	remque ( ifm )		4812974	0					
ANR	4813099	Callee	remque		4812974	0					
ANR	4813100	Identifier	remque		4812974	0					
ANR	4813101	ArgumentList	ifm		4812974	1					
ANR	4813102	Argument	ifm		4812974	0					
ANR	4813103	Identifier	ifm		4812974	0					
ANR	4813104	ExpressionStatement	slirp -> if_queued --	71:1:894:912	4812974	10	True				
ANR	4813105	PostIncDecOperationExpression	slirp -> if_queued --		4812974	0					
ANR	4813106	PtrMemberAccess	slirp -> if_queued		4812974	0					
ANR	4813107	Identifier	slirp		4812974	0					
ANR	4813108	Identifier	if_queued		4812974	1					
ANR	4813109	IncDec	--		4812974	1					
ANR	4813110	IfStatement	if ( ifm -> ifs_next != ifm )		4812974	11					
ANR	4813111	Condition	ifm -> ifs_next != ifm	77:5:988:1030	4812974	0	True				
ANR	4813112	EqualityExpression	ifm -> ifs_next != ifm		4812974	0		!=			
ANR	4813113	PtrMemberAccess	ifm -> ifs_next		4812974	0					
ANR	4813114	Identifier	ifm		4812974	0					
ANR	4813115	Identifier	ifs_next		4812974	1					
ANR	4813116	Identifier	ifm		4812974	1					
ANR	4813117	CompoundStatement		75:50:1008:1008	4812974	1					
ANR	4813118	ExpressionStatement	"insque ( ifm -> ifs_next , ifqt )"	79:2:1038:1065	4812974	0	True				
ANR	4813119	CallExpression	"insque ( ifm -> ifs_next , ifqt )"		4812974	0					
ANR	4813120	Callee	insque		4812974	0					
ANR	4813121	Identifier	insque		4812974	0					
ANR	4813122	ArgumentList	ifm -> ifs_next		4812974	1					
ANR	4813123	Argument	ifm -> ifs_next		4812974	0					
ANR	4813124	PtrMemberAccess	ifm -> ifs_next		4812974	0					
ANR	4813125	Identifier	ifm		4812974	0					
ANR	4813126	Identifier	ifs_next		4812974	1					
ANR	4813127	Argument	ifqt		4812974	1					
ANR	4813128	Identifier	ifqt		4812974	0					
ANR	4813129	ExpressionStatement	ifs_remque ( ifm )	81:2:1070:1085	4812974	1	True				
ANR	4813130	CallExpression	ifs_remque ( ifm )		4812974	0					
ANR	4813131	Callee	ifs_remque		4812974	0					
ANR	4813132	Identifier	ifs_remque		4812974	0					
ANR	4813133	ArgumentList	ifm		4812974	1					
ANR	4813134	Argument	ifm		4812974	0					
ANR	4813135	Identifier	ifm		4812974	0					
ANR	4813136	IfStatement	if ( ifm -> ifq_so )		4812974	12					
ANR	4813137	Condition	ifm -> ifq_so	89:5:1124:1134	4812974	0	True				
ANR	4813138	PtrMemberAccess	ifm -> ifq_so		4812974	0					
ANR	4813139	Identifier	ifm		4812974	0					
ANR	4813140	Identifier	ifq_so		4812974	1					
ANR	4813141	CompoundStatement		87:18:1112:1112	4812974	1					
ANR	4813142	IfStatement	if ( -- ifm -> ifq_so -> so_queued == 0 )		4812974	0					
ANR	4813143	Condition	-- ifm -> ifq_so -> so_queued == 0	91:6:1146:1174	4812974	0	True				
ANR	4813144	EqualityExpression	-- ifm -> ifq_so -> so_queued == 0		4812974	0		==			
ANR	4813145	UnaryExpression	-- ifm -> ifq_so -> so_queued		4812974	0					
ANR	4813146	IncDec	--		4812974	0					
ANR	4813147	PtrMemberAccess	ifm -> ifq_so -> so_queued		4812974	1					
ANR	4813148	PtrMemberAccess	ifm -> ifq_so		4812974	0					
ANR	4813149	Identifier	ifm		4812974	0					
ANR	4813150	Identifier	ifq_so		4812974	1					
ANR	4813151	Identifier	so_queued		4812974	1					
ANR	4813152	PrimaryExpression	0		4812974	1					
ANR	4813153	ExpressionStatement	ifm -> ifq_so -> so_nqueued = 0	95:5:1236:1263	4812974	1	True				
ANR	4813154	AssignmentExpression	ifm -> ifq_so -> so_nqueued = 0		4812974	0		=			
ANR	4813155	PtrMemberAccess	ifm -> ifq_so -> so_nqueued		4812974	0					
ANR	4813156	PtrMemberAccess	ifm -> ifq_so		4812974	0					
ANR	4813157	Identifier	ifm		4812974	0					
ANR	4813158	Identifier	ifq_so		4812974	1					
ANR	4813159	Identifier	so_nqueued		4812974	1					
ANR	4813160	PrimaryExpression	0		4812974	1					
ANR	4813161	IfStatement	if ( ifm -> expiration_date < now )		4812974	13					
ANR	4813162	Condition	ifm -> expiration_date < now	101:12:1284:1309	4812974	0	True				
ANR	4813163	RelationalExpression	ifm -> expiration_date < now		4812974	0		<			
ANR	4813164	PtrMemberAccess	ifm -> expiration_date		4812974	0					
ANR	4813165	Identifier	ifm		4812974	0					
ANR	4813166	Identifier	expiration_date		4812974	1					
ANR	4813167	Identifier	now		4812974	1					
ANR	4813168	CompoundStatement		99:40:1287:1287	4812974	1					
ANR	4813169	ExpressionStatement	m_free ( ifm )	105:12:1354:1365	4812974	0	True				
ANR	4813170	CallExpression	m_free ( ifm )		4812974	0					
ANR	4813171	Callee	m_free		4812974	0					
ANR	4813172	Identifier	m_free		4812974	0					
ANR	4813173	ArgumentList	ifm		4812974	1					
ANR	4813174	Argument	ifm		4812974	0					
ANR	4813175	Identifier	ifm		4812974	0					
ANR	4813176	ElseStatement	else		4812974	0					
ANR	4813177	CompoundStatement		105:15:1358:1358	4812974	0					
ANR	4813178	IfStatement	"if ( if_encap ( slirp , ifm ) )"		4812974	0					
ANR	4813179	Condition	"if_encap ( slirp , ifm )"	111:16:1456:1475	4812974	0	True				
ANR	4813180	CallExpression	"if_encap ( slirp , ifm )"		4812974	0					
ANR	4813181	Callee	if_encap		4812974	0					
ANR	4813182	Identifier	if_encap		4812974	0					
ANR	4813183	ArgumentList	slirp		4812974	1					
ANR	4813184	Argument	slirp		4812974	0					
ANR	4813185	Identifier	slirp		4812974	0					
ANR	4813186	Argument	ifm		4812974	1					
ANR	4813187	Identifier	ifm		4812974	0					
ANR	4813188	CompoundStatement		109:38:1453:1453	4812974	1					
ANR	4813189	ExpressionStatement	m_free ( ifm )	113:16:1497:1508	4812974	0	True				
ANR	4813190	CallExpression	m_free ( ifm )		4812974	0					
ANR	4813191	Callee	m_free		4812974	0					
ANR	4813192	Identifier	m_free		4812974	0					
ANR	4813193	ArgumentList	ifm		4812974	1					
ANR	4813194	Argument	ifm		4812974	0					
ANR	4813195	Identifier	ifm		4812974	0					
ANR	4813196	ElseStatement	else		4812974	0					
ANR	4813197	CompoundStatement		113:19:1505:1505	4812974	0					
ANR	4813198	ExpressionStatement	"insque ( ifm , ifqt )"	119:16:1581:1598	4812974	0	True				
ANR	4813199	CallExpression	"insque ( ifm , ifqt )"		4812974	0					
ANR	4813200	Callee	insque		4812974	0					
ANR	4813201	Identifier	insque		4812974	0					
ANR	4813202	ArgumentList	ifm		4812974	1					
ANR	4813203	Argument	ifm		4812974	0					
ANR	4813204	Identifier	ifm		4812974	0					
ANR	4813205	Argument	ifqt		4812974	1					
ANR	4813206	Identifier	ifqt		4812974	0					
ANR	4813207	ExpressionStatement	requeued ++	121:16:1617:1627	4812974	1	True				
ANR	4813208	PostIncDecOperationExpression	requeued ++		4812974	0					
ANR	4813209	Identifier	requeued		4812974	0					
ANR	4813210	IncDec	++		4812974	1					
ANR	4813211	IfStatement	if ( slirp -> if_queued )		4812974	14					
ANR	4813212	Condition	slirp -> if_queued	129:5:1663:1678	4812974	0	True				
ANR	4813213	PtrMemberAccess	slirp -> if_queued		4812974	0					
ANR	4813214	Identifier	slirp		4812974	0					
ANR	4813215	Identifier	if_queued		4812974	1					
ANR	4813216	GotoStatement	goto again ;	131:4:1686:1696	4812974	1	True				
ANR	4813217	Identifier	again		4812974	0					
ANR	4813218	ExpressionStatement	slirp -> if_queued = requeued	135:8:1709:1736	4812974	15	True				
ANR	4813219	AssignmentExpression	slirp -> if_queued = requeued		4812974	0		=			
ANR	4813220	PtrMemberAccess	slirp -> if_queued		4812974	0					
ANR	4813221	Identifier	slirp		4812974	0					
ANR	4813222	Identifier	if_queued		4812974	1					
ANR	4813223	Identifier	requeued		4812974	1					
ANR	4813224	Identifier	if_start		4812974	1					
ANR	4813225	ParameterList	Slirp * slirp		4812974	2					
ANR	4813226	Parameter	Slirp * slirp	1:9:9:20	4812974	0	True				
ANR	4813227	ParameterType	Slirp *		4812974	0					
ANR	4813228	Identifier	slirp		4812974	1					
ANR	4813229	CFGEntryNode	ENTRY		4812974		True				
ANR	4813230	CFGExitNode	EXIT		4812974		True				
ANR	4813231	Symbol	ifm -> ifq_next		4812974						
ANR	4813232	Symbol	* * ifm		4812974						
ANR	4813233	Symbol	slirp -> if_queued		4812974						
ANR	4813234	Symbol	ifm -> expiration_date		4812974						
ANR	4813235	Symbol	rt_clock		4812974						
ANR	4813236	Symbol	slirp -> if_batchq . ifq_next		4812974						
ANR	4813237	Symbol	ifm -> ifq_so		4812974						
ANR	4813238	Symbol	* slirp		4812974						
ANR	4813239	Symbol	ifm -> ifq_so -> so_queued		4812974						
ANR	4813240	Symbol	if_encap		4812974						
ANR	4813241	Symbol	ifm -> ifs_next		4812974						
ANR	4813242	Symbol	* ifm -> ifq_so		4812974						
ANR	4813243	Symbol	slirp_can_output		4812974						
ANR	4813244	Symbol	& slirp -> if_batchq		4812974						
ANR	4813245	Symbol	now		4812974						
ANR	4813246	Symbol	qemu_get_clock_ns		4812974						
ANR	4813247	Symbol	& slirp -> if_fastq		4812974						
ANR	4813248	Symbol	* ifm		4812974						
ANR	4813249	Symbol	slirp		4812974						
ANR	4813250	Symbol	requeued		4812974						
ANR	4813251	Symbol	slirp -> if_batchq		4812974						
ANR	4813252	Symbol	slirp -> opaque		4812974						
ANR	4813253	Symbol	slirp -> if_fastq . ifq_next		4812974						
ANR	4813254	Symbol	ifqt		4812974						
ANR	4813255	Symbol	ifm		4812974						
ANR	4813256	Symbol	slirp -> next_m		4812974						
ANR	4813257	Symbol	slirp -> if_fastq		4812974						
ANR	4813258	Symbol	ifm -> ifq_so -> so_nqueued		4812974						
ANR	4813259	Symbol	ifm -> ifq_prev		4812974						
