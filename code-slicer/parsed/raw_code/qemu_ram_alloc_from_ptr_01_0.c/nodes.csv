command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7010365	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_ram_alloc_from_ptr_01_0.c								
ANR	7010366	Function	qemu_ram_alloc_from_ptr	1:0:0:1416							
ANR	7010367	FunctionDef	"qemu_ram_alloc_from_ptr (DeviceState * dev , const char * name , ram_addr_t size , void * host)"		7010366	0					
ANR	7010368	CompoundStatement		5:0:126:1416	7010366	0					
ANR	7010369	IdentifierDeclStatement	"RAMBlock * new_block , * block ;"	7:4:133:160	7010366	0	True				
ANR	7010370	IdentifierDecl	* new_block		7010366	0					
ANR	7010371	IdentifierDeclType	RAMBlock *		7010366	0					
ANR	7010372	Identifier	new_block		7010366	1					
ANR	7010373	IdentifierDecl	* block		7010366	1					
ANR	7010374	IdentifierDeclType	RAMBlock *		7010366	0					
ANR	7010375	Identifier	block		7010366	1					
ANR	7010376	ExpressionStatement	size = TARGET_PAGE_ALIGN ( size )	11:4:169:199	7010366	1	True				
ANR	7010377	AssignmentExpression	size = TARGET_PAGE_ALIGN ( size )		7010366	0		=			
ANR	7010378	Identifier	size		7010366	0					
ANR	7010379	CallExpression	TARGET_PAGE_ALIGN ( size )		7010366	1					
ANR	7010380	Callee	TARGET_PAGE_ALIGN		7010366	0					
ANR	7010381	Identifier	TARGET_PAGE_ALIGN		7010366	0					
ANR	7010382	ArgumentList	size		7010366	1					
ANR	7010383	Argument	size		7010366	0					
ANR	7010384	Identifier	size		7010366	0					
ANR	7010385	ExpressionStatement	new_block = qemu_mallocz ( sizeof ( * new_block ) )	13:4:206:250	7010366	2	True				
ANR	7010386	AssignmentExpression	new_block = qemu_mallocz ( sizeof ( * new_block ) )		7010366	0		=			
ANR	7010387	Identifier	new_block		7010366	0					
ANR	7010388	CallExpression	qemu_mallocz ( sizeof ( * new_block ) )		7010366	1					
ANR	7010389	Callee	qemu_mallocz		7010366	0					
ANR	7010390	Identifier	qemu_mallocz		7010366	0					
ANR	7010391	ArgumentList	sizeof ( * new_block )		7010366	1					
ANR	7010392	Argument	sizeof ( * new_block )		7010366	0					
ANR	7010393	SizeofExpression	sizeof ( * new_block )		7010366	0					
ANR	7010394	Sizeof	sizeof		7010366	0					
ANR	7010395	UnaryOperationExpression	* new_block		7010366	1					
ANR	7010396	UnaryOperator	*		7010366	0					
ANR	7010397	Identifier	new_block		7010366	1					
ANR	7010398	IfStatement	if ( dev && dev -> parent_bus && dev -> parent_bus -> info -> get_dev_path )		7010366	3					
ANR	7010399	Condition	dev && dev -> parent_bus && dev -> parent_bus -> info -> get_dev_path	17:8:263:323	7010366	0	True				
ANR	7010400	AndExpression	dev && dev -> parent_bus && dev -> parent_bus -> info -> get_dev_path		7010366	0		&&			
ANR	7010401	Identifier	dev		7010366	0					
ANR	7010402	AndExpression	dev -> parent_bus && dev -> parent_bus -> info -> get_dev_path		7010366	1		&&			
ANR	7010403	PtrMemberAccess	dev -> parent_bus		7010366	0					
ANR	7010404	Identifier	dev		7010366	0					
ANR	7010405	Identifier	parent_bus		7010366	1					
ANR	7010406	PtrMemberAccess	dev -> parent_bus -> info -> get_dev_path		7010366	1					
ANR	7010407	PtrMemberAccess	dev -> parent_bus -> info		7010366	0					
ANR	7010408	PtrMemberAccess	dev -> parent_bus		7010366	0					
ANR	7010409	Identifier	dev		7010366	0					
ANR	7010410	Identifier	parent_bus		7010366	1					
ANR	7010411	Identifier	info		7010366	1					
ANR	7010412	Identifier	get_dev_path		7010366	1					
ANR	7010413	CompoundStatement		15:8:210:261	7010366	1					
ANR	7010414	IdentifierDeclStatement	char * id = dev -> parent_bus -> info -> get_dev_path ( dev ) ;	19:8:337:388	7010366	0	True				
ANR	7010415	IdentifierDecl	* id = dev -> parent_bus -> info -> get_dev_path ( dev )		7010366	0					
ANR	7010416	IdentifierDeclType	char *		7010366	0					
ANR	7010417	Identifier	id		7010366	1					
ANR	7010418	AssignmentExpression	* id = dev -> parent_bus -> info -> get_dev_path ( dev )		7010366	2		=			
ANR	7010419	Identifier	id		7010366	0					
ANR	7010420	CallExpression	dev -> parent_bus -> info -> get_dev_path ( dev )		7010366	1					
ANR	7010421	Callee	dev -> parent_bus -> info -> get_dev_path		7010366	0					
ANR	7010422	PtrMemberAccess	dev -> parent_bus -> info -> get_dev_path		7010366	0					
ANR	7010423	PtrMemberAccess	dev -> parent_bus -> info		7010366	0					
ANR	7010424	PtrMemberAccess	dev -> parent_bus		7010366	0					
ANR	7010425	Identifier	dev		7010366	0					
ANR	7010426	Identifier	parent_bus		7010366	1					
ANR	7010427	Identifier	info		7010366	1					
ANR	7010428	Identifier	get_dev_path		7010366	1					
ANR	7010429	ArgumentList	dev		7010366	1					
ANR	7010430	Argument	dev		7010366	0					
ANR	7010431	Identifier	dev		7010366	0					
ANR	7010432	IfStatement	if ( id )		7010366	1					
ANR	7010433	Condition	id	21:12:403:404	7010366	0	True				
ANR	7010434	Identifier	id		7010366	0					
ANR	7010435	CompoundStatement		17:16:280:280	7010366	1					
ANR	7010436	ExpressionStatement	"snprintf ( new_block -> idstr , sizeof ( new_block -> idstr ) , ""%s/"" , id )"	23:12:422:485	7010366	0	True				
ANR	7010437	CallExpression	"snprintf ( new_block -> idstr , sizeof ( new_block -> idstr ) , ""%s/"" , id )"		7010366	0					
ANR	7010438	Callee	snprintf		7010366	0					
ANR	7010439	Identifier	snprintf		7010366	0					
ANR	7010440	ArgumentList	new_block -> idstr		7010366	1					
ANR	7010441	Argument	new_block -> idstr		7010366	0					
ANR	7010442	PtrMemberAccess	new_block -> idstr		7010366	0					
ANR	7010443	Identifier	new_block		7010366	0					
ANR	7010444	Identifier	idstr		7010366	1					
ANR	7010445	Argument	sizeof ( new_block -> idstr )		7010366	1					
ANR	7010446	SizeofExpression	sizeof ( new_block -> idstr )		7010366	0					
ANR	7010447	Sizeof	sizeof		7010366	0					
ANR	7010448	PtrMemberAccess	new_block -> idstr		7010366	1					
ANR	7010449	Identifier	new_block		7010366	0					
ANR	7010450	Identifier	idstr		7010366	1					
ANR	7010451	Argument	"""%s/"""		7010366	2					
ANR	7010452	PrimaryExpression	"""%s/"""		7010366	0					
ANR	7010453	Argument	id		7010366	3					
ANR	7010454	Identifier	id		7010366	0					
ANR	7010455	ExpressionStatement	qemu_free ( id )	25:12:500:513	7010366	1	True				
ANR	7010456	CallExpression	qemu_free ( id )		7010366	0					
ANR	7010457	Callee	qemu_free		7010366	0					
ANR	7010458	Identifier	qemu_free		7010366	0					
ANR	7010459	ArgumentList	id		7010366	1					
ANR	7010460	Argument	id		7010366	0					
ANR	7010461	Identifier	id		7010366	0					
ANR	7010462	ExpressionStatement	"pstrcat ( new_block -> idstr , sizeof ( new_block -> idstr ) , name )"	31:4:538:595	7010366	4	True				
ANR	7010463	CallExpression	"pstrcat ( new_block -> idstr , sizeof ( new_block -> idstr ) , name )"		7010366	0					
ANR	7010464	Callee	pstrcat		7010366	0					
ANR	7010465	Identifier	pstrcat		7010366	0					
ANR	7010466	ArgumentList	new_block -> idstr		7010366	1					
ANR	7010467	Argument	new_block -> idstr		7010366	0					
ANR	7010468	PtrMemberAccess	new_block -> idstr		7010366	0					
ANR	7010469	Identifier	new_block		7010366	0					
ANR	7010470	Identifier	idstr		7010366	1					
ANR	7010471	Argument	sizeof ( new_block -> idstr )		7010366	1					
ANR	7010472	SizeofExpression	sizeof ( new_block -> idstr )		7010366	0					
ANR	7010473	Sizeof	sizeof		7010366	0					
ANR	7010474	PtrMemberAccess	new_block -> idstr		7010366	1					
ANR	7010475	Identifier	new_block		7010366	0					
ANR	7010476	Identifier	idstr		7010366	1					
ANR	7010477	Argument	name		7010366	2					
ANR	7010478	Identifier	name		7010366	0					
ANR	7010479	Statement	QLIST_FOREACH	35:4:604:616	7010366	5	True				
ANR	7010480	Statement	(	35:17:617:617	7010366	6	True				
ANR	7010481	Statement	block	35:18:618:622	7010366	7	True				
ANR	7010482	Statement	","	35:23:623:623	7010366	8	True				
ANR	7010483	Statement	&	35:25:625:625	7010366	9	True				
ANR	7010484	Statement	ram_list	35:26:626:633	7010366	10	True				
ANR	7010485	Statement	.	35:34:634:634	7010366	11	True				
ANR	7010486	Statement	blocks	35:35:635:640	7010366	12	True				
ANR	7010487	Statement	","	35:41:641:641	7010366	13	True				
ANR	7010488	Statement	next	35:43:643:646	7010366	14	True				
ANR	7010489	Statement	)	35:47:647:647	7010366	15	True				
ANR	7010490	CompoundStatement		31:49:522:522	7010366	16					
ANR	7010491	IfStatement	"if ( ! strcmp ( block -> idstr , new_block -> idstr ) )"		7010366	0					
ANR	7010492	Condition	"! strcmp ( block -> idstr , new_block -> idstr )"	37:12:664:702	7010366	0	True				
ANR	7010493	UnaryOperationExpression	"! strcmp ( block -> idstr , new_block -> idstr )"		7010366	0					
ANR	7010494	UnaryOperator	!		7010366	0					
ANR	7010495	CallExpression	"strcmp ( block -> idstr , new_block -> idstr )"		7010366	1					
ANR	7010496	Callee	strcmp		7010366	0					
ANR	7010497	Identifier	strcmp		7010366	0					
ANR	7010498	ArgumentList	block -> idstr		7010366	1					
ANR	7010499	Argument	block -> idstr		7010366	0					
ANR	7010500	PtrMemberAccess	block -> idstr		7010366	0					
ANR	7010501	Identifier	block		7010366	0					
ANR	7010502	Identifier	idstr		7010366	1					
ANR	7010503	Argument	new_block -> idstr		7010366	1					
ANR	7010504	PtrMemberAccess	new_block -> idstr		7010366	0					
ANR	7010505	Identifier	new_block		7010366	0					
ANR	7010506	Identifier	idstr		7010366	1					
ANR	7010507	CompoundStatement		33:53:578:578	7010366	1					
ANR	7010508	ExpressionStatement	"fprintf ( stderr , ""RAMBlock \\""%s\\"" already registered, abort!\\n"" , new_block -> idstr )"	39:12:720:822	7010366	0	True				
ANR	7010509	CallExpression	"fprintf ( stderr , ""RAMBlock \\""%s\\"" already registered, abort!\\n"" , new_block -> idstr )"		7010366	0					
ANR	7010510	Callee	fprintf		7010366	0					
ANR	7010511	Identifier	fprintf		7010366	0					
ANR	7010512	ArgumentList	stderr		7010366	1					
ANR	7010513	Argument	stderr		7010366	0					
ANR	7010514	Identifier	stderr		7010366	0					
ANR	7010515	Argument	"""RAMBlock \\""%s\\"" already registered, abort!\\n"""		7010366	1					
ANR	7010516	PrimaryExpression	"""RAMBlock \\""%s\\"" already registered, abort!\\n"""		7010366	0					
ANR	7010517	Argument	new_block -> idstr		7010366	2					
ANR	7010518	PtrMemberAccess	new_block -> idstr		7010366	0					
ANR	7010519	Identifier	new_block		7010366	0					
ANR	7010520	Identifier	idstr		7010366	1					
ANR	7010521	ExpressionStatement	abort ( )	43:12:837:844	7010366	1	True				
ANR	7010522	CallExpression	abort ( )		7010366	0					
ANR	7010523	Callee	abort		7010366	0					
ANR	7010524	Identifier	abort		7010366	0					
ANR	7010525	ArgumentList			7010366	1					
ANR	7010526	ExpressionStatement	new_block -> host = host	51:4:871:893	7010366	17	True				
ANR	7010527	AssignmentExpression	new_block -> host = host		7010366	0		=			
ANR	7010528	PtrMemberAccess	new_block -> host		7010366	0					
ANR	7010529	Identifier	new_block		7010366	0					
ANR	7010530	Identifier	host		7010366	1					
ANR	7010531	Identifier	host		7010366	1					
ANR	7010532	ExpressionStatement	new_block -> offset = find_ram_offset ( size )	55:4:902:943	7010366	18	True				
ANR	7010533	AssignmentExpression	new_block -> offset = find_ram_offset ( size )		7010366	0		=			
ANR	7010534	PtrMemberAccess	new_block -> offset		7010366	0					
ANR	7010535	Identifier	new_block		7010366	0					
ANR	7010536	Identifier	offset		7010366	1					
ANR	7010537	CallExpression	find_ram_offset ( size )		7010366	1					
ANR	7010538	Callee	find_ram_offset		7010366	0					
ANR	7010539	Identifier	find_ram_offset		7010366	0					
ANR	7010540	ArgumentList	size		7010366	1					
ANR	7010541	Argument	size		7010366	0					
ANR	7010542	Identifier	size		7010366	0					
ANR	7010543	ExpressionStatement	new_block -> length = size	57:4:950:974	7010366	19	True				
ANR	7010544	AssignmentExpression	new_block -> length = size		7010366	0		=			
ANR	7010545	PtrMemberAccess	new_block -> length		7010366	0					
ANR	7010546	Identifier	new_block		7010366	0					
ANR	7010547	Identifier	length		7010366	1					
ANR	7010548	Identifier	size		7010366	1					
ANR	7010549	ExpressionStatement	"QLIST_INSERT_HEAD ( & ram_list . blocks , new_block , next )"	61:4:983:1035	7010366	20	True				
ANR	7010550	CallExpression	"QLIST_INSERT_HEAD ( & ram_list . blocks , new_block , next )"		7010366	0					
ANR	7010551	Callee	QLIST_INSERT_HEAD		7010366	0					
ANR	7010552	Identifier	QLIST_INSERT_HEAD		7010366	0					
ANR	7010553	ArgumentList	& ram_list . blocks		7010366	1					
ANR	7010554	Argument	& ram_list . blocks		7010366	0					
ANR	7010555	UnaryOperationExpression	& ram_list . blocks		7010366	0					
ANR	7010556	UnaryOperator	&		7010366	0					
ANR	7010557	MemberAccess	ram_list . blocks		7010366	1					
ANR	7010558	Identifier	ram_list		7010366	0					
ANR	7010559	Identifier	blocks		7010366	1					
ANR	7010560	Argument	new_block		7010366	1					
ANR	7010561	Identifier	new_block		7010366	0					
ANR	7010562	Argument	next		7010366	2					
ANR	7010563	Identifier	next		7010366	0					
ANR	7010564	ExpressionStatement	"ram_list . phys_dirty = qemu_realloc ( ram_list . phys_dirty , last_ram_offset ( ) >> TARGET_PAGE_BITS )"	65:4:1044:1178	7010366	21	True				
ANR	7010565	AssignmentExpression	"ram_list . phys_dirty = qemu_realloc ( ram_list . phys_dirty , last_ram_offset ( ) >> TARGET_PAGE_BITS )"		7010366	0		=			
ANR	7010566	MemberAccess	ram_list . phys_dirty		7010366	0					
ANR	7010567	Identifier	ram_list		7010366	0					
ANR	7010568	Identifier	phys_dirty		7010366	1					
ANR	7010569	CallExpression	"qemu_realloc ( ram_list . phys_dirty , last_ram_offset ( ) >> TARGET_PAGE_BITS )"		7010366	1					
ANR	7010570	Callee	qemu_realloc		7010366	0					
ANR	7010571	Identifier	qemu_realloc		7010366	0					
ANR	7010572	ArgumentList	ram_list . phys_dirty		7010366	1					
ANR	7010573	Argument	ram_list . phys_dirty		7010366	0					
ANR	7010574	MemberAccess	ram_list . phys_dirty		7010366	0					
ANR	7010575	Identifier	ram_list		7010366	0					
ANR	7010576	Identifier	phys_dirty		7010366	1					
ANR	7010577	Argument	last_ram_offset ( ) >> TARGET_PAGE_BITS		7010366	1					
ANR	7010578	ShiftExpression	last_ram_offset ( ) >> TARGET_PAGE_BITS		7010366	0		>>			
ANR	7010579	CallExpression	last_ram_offset ( )		7010366	0					
ANR	7010580	Callee	last_ram_offset		7010366	0					
ANR	7010581	Identifier	last_ram_offset		7010366	0					
ANR	7010582	ArgumentList			7010366	1					
ANR	7010583	Identifier	TARGET_PAGE_BITS		7010366	1					
ANR	7010584	ExpressionStatement	"memset ( ram_list . phys_dirty + ( new_block -> offset >> TARGET_PAGE_BITS ) , 0xff , size >> TARGET_PAGE_BITS )"	69:4:1185:1298	7010366	22	True				
ANR	7010585	CallExpression	"memset ( ram_list . phys_dirty + ( new_block -> offset >> TARGET_PAGE_BITS ) , 0xff , size >> TARGET_PAGE_BITS )"		7010366	0					
ANR	7010586	Callee	memset		7010366	0					
ANR	7010587	Identifier	memset		7010366	0					
ANR	7010588	ArgumentList	ram_list . phys_dirty + ( new_block -> offset >> TARGET_PAGE_BITS )		7010366	1					
ANR	7010589	Argument	ram_list . phys_dirty + ( new_block -> offset >> TARGET_PAGE_BITS )		7010366	0					
ANR	7010590	AdditiveExpression	ram_list . phys_dirty + ( new_block -> offset >> TARGET_PAGE_BITS )		7010366	0		+			
ANR	7010591	MemberAccess	ram_list . phys_dirty		7010366	0					
ANR	7010592	Identifier	ram_list		7010366	0					
ANR	7010593	Identifier	phys_dirty		7010366	1					
ANR	7010594	ShiftExpression	new_block -> offset >> TARGET_PAGE_BITS		7010366	1		>>			
ANR	7010595	PtrMemberAccess	new_block -> offset		7010366	0					
ANR	7010596	Identifier	new_block		7010366	0					
ANR	7010597	Identifier	offset		7010366	1					
ANR	7010598	Identifier	TARGET_PAGE_BITS		7010366	1					
ANR	7010599	Argument	0xff		7010366	1					
ANR	7010600	PrimaryExpression	0xff		7010366	0					
ANR	7010601	Argument	size >> TARGET_PAGE_BITS		7010366	2					
ANR	7010602	ShiftExpression	size >> TARGET_PAGE_BITS		7010366	0		>>			
ANR	7010603	Identifier	size		7010366	0					
ANR	7010604	Identifier	TARGET_PAGE_BITS		7010366	1					
ANR	7010605	IfStatement	if ( kvm_enabled ( ) )		7010366	23					
ANR	7010606	Condition	kvm_enabled ( )	75:8:1311:1323	7010366	0	True				
ANR	7010607	CallExpression	kvm_enabled ( )		7010366	0					
ANR	7010608	Callee	kvm_enabled		7010366	0					
ANR	7010609	Identifier	kvm_enabled		7010366	0					
ANR	7010610	ArgumentList			7010366	1					
ANR	7010611	ExpressionStatement	"kvm_setup_guest_memory ( new_block -> host , size )"	77:8:1335:1380	7010366	1	True				
ANR	7010612	CallExpression	"kvm_setup_guest_memory ( new_block -> host , size )"		7010366	0					
ANR	7010613	Callee	kvm_setup_guest_memory		7010366	0					
ANR	7010614	Identifier	kvm_setup_guest_memory		7010366	0					
ANR	7010615	ArgumentList	new_block -> host		7010366	1					
ANR	7010616	Argument	new_block -> host		7010366	0					
ANR	7010617	PtrMemberAccess	new_block -> host		7010366	0					
ANR	7010618	Identifier	new_block		7010366	0					
ANR	7010619	Identifier	host		7010366	1					
ANR	7010620	Argument	size		7010366	1					
ANR	7010621	Identifier	size		7010366	0					
ANR	7010622	ReturnStatement	return new_block -> offset ;	81:4:1389:1413	7010366	24	True				
ANR	7010623	PtrMemberAccess	new_block -> offset		7010366	0					
ANR	7010624	Identifier	new_block		7010366	0					
ANR	7010625	Identifier	offset		7010366	1					
ANR	7010626	ReturnType	ram_addr_t		7010366	1					
ANR	7010627	Identifier	qemu_ram_alloc_from_ptr		7010366	2					
ANR	7010628	ParameterList	"DeviceState * dev , const char * name , ram_addr_t size , void * host"		7010366	3					
ANR	7010629	Parameter	DeviceState * dev	1:35:35:50	7010366	0	True				
ANR	7010630	ParameterType	DeviceState *		7010366	0					
ANR	7010631	Identifier	dev		7010366	1					
ANR	7010632	Parameter	const char * name	1:53:53:68	7010366	1	True				
ANR	7010633	ParameterType	const char *		7010366	0					
ANR	7010634	Identifier	name		7010366	1					
ANR	7010635	Parameter	ram_addr_t size	3:24:96:110	7010366	2	True				
ANR	7010636	ParameterType	ram_addr_t		7010366	0					
ANR	7010637	Identifier	size		7010366	1					
ANR	7010638	Parameter	void * host	3:41:113:122	7010366	3	True				
ANR	7010639	ParameterType	void *		7010366	0					
ANR	7010640	Identifier	host		7010366	1					
ANR	7010641	CFGEntryNode	ENTRY		7010366		True				
ANR	7010642	CFGExitNode	EXIT		7010366		True				
ANR	7010643	Symbol	* dev		7010366						
ANR	7010644	Symbol	next		7010366						
ANR	7010645	Symbol	new_block -> idstr		7010366						
ANR	7010646	Symbol	find_ram_offset		7010366						
ANR	7010647	Symbol	TARGET_PAGE_ALIGN		7010366						
ANR	7010648	Symbol	* new_block		7010366						
ANR	7010649	Symbol	* * * dev		7010366						
ANR	7010650	Symbol	dev		7010366						
ANR	7010651	Symbol	new_block		7010366						
ANR	7010652	Symbol	kvm_enabled		7010366						
ANR	7010653	Symbol	host		7010366						
ANR	7010654	Symbol	* * dev -> parent_bus		7010366						
ANR	7010655	Symbol	block		7010366						
ANR	7010656	Symbol	new_block -> length		7010366						
ANR	7010657	Symbol	id		7010366						
ANR	7010658	Symbol	ram_list . phys_dirty		7010366						
ANR	7010659	Symbol	strcmp		7010366						
ANR	7010660	Symbol	last_ram_offset		7010366						
ANR	7010661	Symbol	& ram_list . blocks		7010366						
ANR	7010662	Symbol	dev -> parent_bus -> info -> get_dev_path		7010366						
ANR	7010663	Symbol	* * dev		7010366						
ANR	7010664	Symbol	TARGET_PAGE_BITS		7010366						
ANR	7010665	Symbol	stderr		7010366						
ANR	7010666	Symbol	* block		7010366						
ANR	7010667	Symbol	ram_list		7010366						
ANR	7010668	Symbol	new_block -> offset		7010366						
ANR	7010669	Symbol	size		7010366						
ANR	7010670	Symbol	dev -> parent_bus -> info		7010366						
ANR	7010671	Symbol	block -> idstr		7010366						
ANR	7010672	Symbol	qemu_realloc		7010366						
ANR	7010673	Symbol	name		7010366						
ANR	7010674	Symbol	dev -> parent_bus		7010366						
ANR	7010675	Symbol	* dev -> parent_bus -> info		7010366						
ANR	7010676	Symbol	new_block -> host		7010366						
ANR	7010677	Symbol	qemu_mallocz		7010366						
ANR	7010678	Symbol	& ram_list		7010366						
ANR	7010679	Symbol	* dev -> parent_bus		7010366						
