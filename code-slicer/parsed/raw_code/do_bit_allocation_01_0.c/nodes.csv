command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2564895	File	/home/p4ultr4n/workplace/ReVeal/raw_code/do_bit_allocation_01_0.c								
ANR	2564896	Function	do_bit_allocation	1:0:0:1334							
ANR	2564897	FunctionDef	"do_bit_allocation (AC3DecodeContext * ctx , int flags)"		2564896	0					
ANR	2564898	CompoundStatement		3:0:64:1334	2564896	0					
ANR	2564899	IdentifierDeclStatement	ac3_audio_block * ab = & ctx -> audio_block ;	5:4:71:110	2564896	0	True				
ANR	2564900	IdentifierDecl	* ab = & ctx -> audio_block		2564896	0					
ANR	2564901	IdentifierDeclType	ac3_audio_block *		2564896	0					
ANR	2564902	Identifier	ab		2564896	1					
ANR	2564903	AssignmentExpression	* ab = & ctx -> audio_block		2564896	2		=			
ANR	2564904	Identifier	ab		2564896	0					
ANR	2564905	UnaryOperationExpression	& ctx -> audio_block		2564896	1					
ANR	2564906	UnaryOperator	&		2564896	0					
ANR	2564907	PtrMemberAccess	ctx -> audio_block		2564896	1					
ANR	2564908	Identifier	ctx		2564896	0					
ANR	2564909	Identifier	audio_block		2564896	1					
ANR	2564910	IdentifierDeclStatement	"int i , snroffst = 0 ;"	7:4:117:136	2564896	1	True				
ANR	2564911	IdentifierDecl	i		2564896	0					
ANR	2564912	IdentifierDeclType	int		2564896	0					
ANR	2564913	Identifier	i		2564896	1					
ANR	2564914	IdentifierDecl	snroffst = 0		2564896	1					
ANR	2564915	IdentifierDeclType	int		2564896	0					
ANR	2564916	Identifier	snroffst		2564896	1					
ANR	2564917	AssignmentExpression	snroffst = 0		2564896	2		=			
ANR	2564918	Identifier	snroffst		2564896	0					
ANR	2564919	PrimaryExpression	0		2564896	1					
ANR	2564920	IfStatement	if ( ! flags )		2564896	2					
ANR	2564921	Condition	! flags	11:8:149:154	2564896	0	True				
ANR	2564922	UnaryOperationExpression	! flags		2564896	0					
ANR	2564923	UnaryOperator	!		2564896	0					
ANR	2564924	Identifier	flags		2564896	1					
ANR	2564925	ReturnStatement	return 0 ;	13:8:203:211	2564896	1	True				
ANR	2564926	PrimaryExpression	0		2564896	0					
ANR	2564927	IfStatement	if ( ab -> flags & AC3_AB_SNROFFSTE )		2564896	3					
ANR	2564928	Condition	ab -> flags & AC3_AB_SNROFFSTE	17:8:224:251	2564896	0	True				
ANR	2564929	BitAndExpression	ab -> flags & AC3_AB_SNROFFSTE		2564896	0		&			
ANR	2564930	PtrMemberAccess	ab -> flags		2564896	0					
ANR	2564931	Identifier	ab		2564896	0					
ANR	2564932	Identifier	flags		2564896	1					
ANR	2564933	Identifier	AC3_AB_SNROFFSTE		2564896	1					
ANR	2564934	CompoundStatement		15:38:189:189	2564896	1					
ANR	2564935	ExpressionStatement	snroffst += ab -> csnroffst	19:8:304:329	2564896	0	True				
ANR	2564936	AssignmentExpression	snroffst += ab -> csnroffst		2564896	0		+=			
ANR	2564937	Identifier	snroffst		2564896	0					
ANR	2564938	PtrMemberAccess	ab -> csnroffst		2564896	1					
ANR	2564939	Identifier	ab		2564896	0					
ANR	2564940	Identifier	csnroffst		2564896	1					
ANR	2564941	IfStatement	if ( ab -> flags & AC3_AB_CPLINU )		2564896	1					
ANR	2564942	Condition	ab -> flags & AC3_AB_CPLINU	21:12:344:368	2564896	0	True				
ANR	2564943	BitAndExpression	ab -> flags & AC3_AB_CPLINU		2564896	0		&			
ANR	2564944	PtrMemberAccess	ab -> flags		2564896	0					
ANR	2564945	Identifier	ab		2564896	0					
ANR	2564946	Identifier	flags		2564896	1					
ANR	2564947	Identifier	AC3_AB_CPLINU		2564896	1					
ANR	2564948	ExpressionStatement	snroffst += ab -> cplfsnroffst	23:12:384:412	2564896	1	True				
ANR	2564949	AssignmentExpression	snroffst += ab -> cplfsnroffst		2564896	0		+=			
ANR	2564950	Identifier	snroffst		2564896	0					
ANR	2564951	PtrMemberAccess	ab -> cplfsnroffst		2564896	1					
ANR	2564952	Identifier	ab		2564896	0					
ANR	2564953	Identifier	cplfsnroffst		2564896	1					
ANR	2564954	ForStatement	for ( i = 0 ; i < ctx -> bsi . nfchans ; i ++ )		2564896	2					
ANR	2564955	ForInit	i = 0 ;	25:13:428:433	2564896	0	True				
ANR	2564956	AssignmentExpression	i = 0		2564896	0		=			
ANR	2564957	Identifier	i		2564896	0					
ANR	2564958	PrimaryExpression	0		2564896	1					
ANR	2564959	Condition	i < ctx -> bsi . nfchans	25:20:435:454	2564896	1	True				
ANR	2564960	RelationalExpression	i < ctx -> bsi . nfchans		2564896	0		<			
ANR	2564961	Identifier	i		2564896	0					
ANR	2564962	MemberAccess	ctx -> bsi . nfchans		2564896	1					
ANR	2564963	PtrMemberAccess	ctx -> bsi		2564896	0					
ANR	2564964	Identifier	ctx		2564896	0					
ANR	2564965	Identifier	bsi		2564896	1					
ANR	2564966	Identifier	nfchans		2564896	1					
ANR	2564967	PostIncDecOperationExpression	i ++	25:42:457:459	2564896	2	True				
ANR	2564968	Identifier	i		2564896	0					
ANR	2564969	IncDec	++		2564896	1					
ANR	2564970	ExpressionStatement	snroffst += ab -> fsnroffst [ i ]	27:12:475:503	2564896	3	True				
ANR	2564971	AssignmentExpression	snroffst += ab -> fsnroffst [ i ]		2564896	0		+=			
ANR	2564972	Identifier	snroffst		2564896	0					
ANR	2564973	ArrayIndexing	ab -> fsnroffst [ i ]		2564896	1					
ANR	2564974	PtrMemberAccess	ab -> fsnroffst		2564896	0					
ANR	2564975	Identifier	ab		2564896	0					
ANR	2564976	Identifier	fsnroffst		2564896	1					
ANR	2564977	Identifier	i		2564896	1					
ANR	2564978	IfStatement	if ( ctx -> bsi . flags & AC3_BSI_LFEON )		2564896	3					
ANR	2564979	Condition	ctx -> bsi . flags & AC3_BSI_LFEON	29:12:518:547	2564896	0	True				
ANR	2564980	BitAndExpression	ctx -> bsi . flags & AC3_BSI_LFEON		2564896	0		&			
ANR	2564981	MemberAccess	ctx -> bsi . flags		2564896	0					
ANR	2564982	PtrMemberAccess	ctx -> bsi		2564896	0					
ANR	2564983	Identifier	ctx		2564896	0					
ANR	2564984	Identifier	bsi		2564896	1					
ANR	2564985	Identifier	flags		2564896	1					
ANR	2564986	Identifier	AC3_BSI_LFEON		2564896	1					
ANR	2564987	ExpressionStatement	snroffst += ab -> lfefsnroffst	31:12:563:591	2564896	1	True				
ANR	2564988	AssignmentExpression	snroffst += ab -> lfefsnroffst		2564896	0		+=			
ANR	2564989	Identifier	snroffst		2564896	0					
ANR	2564990	PtrMemberAccess	ab -> lfefsnroffst		2564896	1					
ANR	2564991	Identifier	ab		2564896	0					
ANR	2564992	Identifier	lfefsnroffst		2564896	1					
ANR	2564993	IfStatement	if ( ! snroffst )		2564896	4					
ANR	2564994	Condition	! snroffst	33:12:606:614	2564896	0	True				
ANR	2564995	UnaryOperationExpression	! snroffst		2564896	0					
ANR	2564996	UnaryOperator	!		2564896	0					
ANR	2564997	Identifier	snroffst		2564896	1					
ANR	2564998	CompoundStatement		31:23:552:552	2564896	1					
ANR	2564999	ExpressionStatement	"memset ( ab -> cplbap , 0 , sizeof ( ab -> cplbap ) )"	35:12:632:674	2564896	0	True				
ANR	2565000	CallExpression	"memset ( ab -> cplbap , 0 , sizeof ( ab -> cplbap ) )"		2564896	0					
ANR	2565001	Callee	memset		2564896	0					
ANR	2565002	Identifier	memset		2564896	0					
ANR	2565003	ArgumentList	ab -> cplbap		2564896	1					
ANR	2565004	Argument	ab -> cplbap		2564896	0					
ANR	2565005	PtrMemberAccess	ab -> cplbap		2564896	0					
ANR	2565006	Identifier	ab		2564896	0					
ANR	2565007	Identifier	cplbap		2564896	1					
ANR	2565008	Argument	0		2564896	1					
ANR	2565009	PrimaryExpression	0		2564896	0					
ANR	2565010	Argument	sizeof ( ab -> cplbap )		2564896	2					
ANR	2565011	SizeofExpression	sizeof ( ab -> cplbap )		2564896	0					
ANR	2565012	Sizeof	sizeof		2564896	0					
ANR	2565013	PtrMemberAccess	ab -> cplbap		2564896	1					
ANR	2565014	Identifier	ab		2564896	0					
ANR	2565015	Identifier	cplbap		2564896	1					
ANR	2565016	ForStatement	for ( i = 0 ; i < ctx -> bsi . nfchans ; i ++ )		2564896	1					
ANR	2565017	ForInit	i = 0 ;	37:17:694:699	2564896	0	True				
ANR	2565018	AssignmentExpression	i = 0		2564896	0		=			
ANR	2565019	Identifier	i		2564896	0					
ANR	2565020	PrimaryExpression	0		2564896	1					
ANR	2565021	Condition	i < ctx -> bsi . nfchans	37:24:701:720	2564896	1	True				
ANR	2565022	RelationalExpression	i < ctx -> bsi . nfchans		2564896	0		<			
ANR	2565023	Identifier	i		2564896	0					
ANR	2565024	MemberAccess	ctx -> bsi . nfchans		2564896	1					
ANR	2565025	PtrMemberAccess	ctx -> bsi		2564896	0					
ANR	2565026	Identifier	ctx		2564896	0					
ANR	2565027	Identifier	bsi		2564896	1					
ANR	2565028	Identifier	nfchans		2564896	1					
ANR	2565029	PostIncDecOperationExpression	i ++	37:46:723:725	2564896	2	True				
ANR	2565030	Identifier	i		2564896	0					
ANR	2565031	IncDec	++		2564896	1					
ANR	2565032	ExpressionStatement	"memset ( ab -> bap [ i ] , 0 , sizeof ( ab -> bap [ i ] ) )"	39:16:745:787	2564896	3	True				
ANR	2565033	CallExpression	"memset ( ab -> bap [ i ] , 0 , sizeof ( ab -> bap [ i ] ) )"		2564896	0					
ANR	2565034	Callee	memset		2564896	0					
ANR	2565035	Identifier	memset		2564896	0					
ANR	2565036	ArgumentList	ab -> bap [ i ]		2564896	1					
ANR	2565037	Argument	ab -> bap [ i ]		2564896	0					
ANR	2565038	ArrayIndexing	ab -> bap [ i ]		2564896	0					
ANR	2565039	PtrMemberAccess	ab -> bap		2564896	0					
ANR	2565040	Identifier	ab		2564896	0					
ANR	2565041	Identifier	bap		2564896	1					
ANR	2565042	Identifier	i		2564896	1					
ANR	2565043	Argument	0		2564896	1					
ANR	2565044	PrimaryExpression	0		2564896	0					
ANR	2565045	Argument	sizeof ( ab -> bap [ i ] )		2564896	2					
ANR	2565046	SizeofExpression	sizeof ( ab -> bap [ i ] )		2564896	0					
ANR	2565047	Sizeof	sizeof		2564896	0					
ANR	2565048	ArrayIndexing	ab -> bap [ i ]		2564896	1					
ANR	2565049	PtrMemberAccess	ab -> bap		2564896	0					
ANR	2565050	Identifier	ab		2564896	0					
ANR	2565051	Identifier	bap		2564896	1					
ANR	2565052	Identifier	i		2564896	1					
ANR	2565053	ExpressionStatement	"memset ( ab -> lfebap , 0 , sizeof ( ab -> lfebap ) )"	41:12:802:844	2564896	2	True				
ANR	2565054	CallExpression	"memset ( ab -> lfebap , 0 , sizeof ( ab -> lfebap ) )"		2564896	0					
ANR	2565055	Callee	memset		2564896	0					
ANR	2565056	Identifier	memset		2564896	0					
ANR	2565057	ArgumentList	ab -> lfebap		2564896	1					
ANR	2565058	Argument	ab -> lfebap		2564896	0					
ANR	2565059	PtrMemberAccess	ab -> lfebap		2564896	0					
ANR	2565060	Identifier	ab		2564896	0					
ANR	2565061	Identifier	lfebap		2564896	1					
ANR	2565062	Argument	0		2564896	1					
ANR	2565063	PrimaryExpression	0		2564896	0					
ANR	2565064	Argument	sizeof ( ab -> lfebap )		2564896	2					
ANR	2565065	SizeofExpression	sizeof ( ab -> lfebap )		2564896	0					
ANR	2565066	Sizeof	sizeof		2564896	0					
ANR	2565067	PtrMemberAccess	ab -> lfebap		2564896	1					
ANR	2565068	Identifier	ab		2564896	0					
ANR	2565069	Identifier	lfebap		2564896	1					
ANR	2565070	ReturnStatement	return 0 ;	45:12:861:869	2564896	3	True				
ANR	2565071	PrimaryExpression	0		2564896	0					
ANR	2565072	IfStatement	if ( ( ab -> flags & AC3_AB_CPLINU ) && ( flags & 64 ) )		2564896	4					
ANR	2565073	Condition	( ab -> flags & AC3_AB_CPLINU ) && ( flags & 64 )	55:8:934:976	2564896	0	True				
ANR	2565074	AndExpression	( ab -> flags & AC3_AB_CPLINU ) && ( flags & 64 )		2564896	0		&&			
ANR	2565075	BitAndExpression	ab -> flags & AC3_AB_CPLINU		2564896	0		&			
ANR	2565076	PtrMemberAccess	ab -> flags		2564896	0					
ANR	2565077	Identifier	ab		2564896	0					
ANR	2565078	Identifier	flags		2564896	1					
ANR	2565079	Identifier	AC3_AB_CPLINU		2564896	1					
ANR	2565080	BitAndExpression	flags & 64		2564896	1		&			
ANR	2565081	Identifier	flags		2564896	0					
ANR	2565082	PrimaryExpression	64		2564896	1					
ANR	2565083	IfStatement	"if ( _do_bit_allocation ( ctx , 5 ) )"		2564896	1					
ANR	2565084	Condition	"_do_bit_allocation ( ctx , 5 )"	57:12:992:1017	2564896	0	True				
ANR	2565085	CallExpression	"_do_bit_allocation ( ctx , 5 )"		2564896	0					
ANR	2565086	Callee	_do_bit_allocation		2564896	0					
ANR	2565087	Identifier	_do_bit_allocation		2564896	0					
ANR	2565088	ArgumentList	ctx		2564896	1					
ANR	2565089	Argument	ctx		2564896	0					
ANR	2565090	Identifier	ctx		2564896	0					
ANR	2565091	Argument	5		2564896	1					
ANR	2565092	PrimaryExpression	5		2564896	0					
ANR	2565093	ReturnStatement	return - 1 ;	59:12:1033:1042	2564896	1	True				
ANR	2565094	UnaryOperationExpression	- 1		2564896	0					
ANR	2565095	UnaryOperator	-		2564896	0					
ANR	2565096	PrimaryExpression	1		2564896	1					
ANR	2565097	ForStatement	for ( i = 0 ; i < ctx -> bsi . nfchans ; i ++ )		2564896	5					
ANR	2565098	ForInit	i = 0 ;	61:9:1054:1059	2564896	0	True				
ANR	2565099	AssignmentExpression	i = 0		2564896	0		=			
ANR	2565100	Identifier	i		2564896	0					
ANR	2565101	PrimaryExpression	0		2564896	1					
ANR	2565102	Condition	i < ctx -> bsi . nfchans	61:16:1061:1080	2564896	1	True				
ANR	2565103	RelationalExpression	i < ctx -> bsi . nfchans		2564896	0		<			
ANR	2565104	Identifier	i		2564896	0					
ANR	2565105	MemberAccess	ctx -> bsi . nfchans		2564896	1					
ANR	2565106	PtrMemberAccess	ctx -> bsi		2564896	0					
ANR	2565107	Identifier	ctx		2564896	0					
ANR	2565108	Identifier	bsi		2564896	1					
ANR	2565109	Identifier	nfchans		2564896	1					
ANR	2565110	PostIncDecOperationExpression	i ++	61:38:1083:1085	2564896	2	True				
ANR	2565111	Identifier	i		2564896	0					
ANR	2565112	IncDec	++		2564896	1					
ANR	2565113	IfStatement	if ( flags & ( 1 << i ) )		2564896	3					
ANR	2565114	Condition	flags & ( 1 << i )	63:12:1101:1116	2564896	0	True				
ANR	2565115	BitAndExpression	flags & ( 1 << i )		2564896	0		&			
ANR	2565116	Identifier	flags		2564896	0					
ANR	2565117	ShiftExpression	1 << i		2564896	1		<<			
ANR	2565118	PrimaryExpression	1		2564896	0					
ANR	2565119	Identifier	i		2564896	1					
ANR	2565120	IfStatement	"if ( _do_bit_allocation ( ctx , i ) )"		2564896	1					
ANR	2565121	Condition	"_do_bit_allocation ( ctx , i )"	65:16:1136:1161	2564896	0	True				
ANR	2565122	CallExpression	"_do_bit_allocation ( ctx , i )"		2564896	0					
ANR	2565123	Callee	_do_bit_allocation		2564896	0					
ANR	2565124	Identifier	_do_bit_allocation		2564896	0					
ANR	2565125	ArgumentList	ctx		2564896	1					
ANR	2565126	Argument	ctx		2564896	0					
ANR	2565127	Identifier	ctx		2564896	0					
ANR	2565128	Argument	i		2564896	1					
ANR	2565129	Identifier	i		2564896	0					
ANR	2565130	ReturnStatement	return - 1 ;	67:16:1181:1190	2564896	1	True				
ANR	2565131	UnaryOperationExpression	- 1		2564896	0					
ANR	2565132	UnaryOperator	-		2564896	0					
ANR	2565133	PrimaryExpression	1		2564896	1					
ANR	2565134	IfStatement	if ( ( ctx -> bsi . flags & AC3_BSI_LFEON ) && ( flags & 32 ) )		2564896	6					
ANR	2565135	Condition	( ctx -> bsi . flags & AC3_BSI_LFEON ) && ( flags & 32 )	69:8:1201:1248	2564896	0	True				
ANR	2565136	AndExpression	( ctx -> bsi . flags & AC3_BSI_LFEON ) && ( flags & 32 )		2564896	0		&&			
ANR	2565137	BitAndExpression	ctx -> bsi . flags & AC3_BSI_LFEON		2564896	0		&			
ANR	2565138	MemberAccess	ctx -> bsi . flags		2564896	0					
ANR	2565139	PtrMemberAccess	ctx -> bsi		2564896	0					
ANR	2565140	Identifier	ctx		2564896	0					
ANR	2565141	Identifier	bsi		2564896	1					
ANR	2565142	Identifier	flags		2564896	1					
ANR	2565143	Identifier	AC3_BSI_LFEON		2564896	1					
ANR	2565144	BitAndExpression	flags & 32		2564896	1		&			
ANR	2565145	Identifier	flags		2564896	0					
ANR	2565146	PrimaryExpression	32		2564896	1					
ANR	2565147	IfStatement	"if ( _do_bit_allocation ( ctx , 6 ) )"		2564896	1					
ANR	2565148	Condition	"_do_bit_allocation ( ctx , 6 )"	71:12:1264:1289	2564896	0	True				
ANR	2565149	CallExpression	"_do_bit_allocation ( ctx , 6 )"		2564896	0					
ANR	2565150	Callee	_do_bit_allocation		2564896	0					
ANR	2565151	Identifier	_do_bit_allocation		2564896	0					
ANR	2565152	ArgumentList	ctx		2564896	1					
ANR	2565153	Argument	ctx		2564896	0					
ANR	2565154	Identifier	ctx		2564896	0					
ANR	2565155	Argument	6		2564896	1					
ANR	2565156	PrimaryExpression	6		2564896	0					
ANR	2565157	ReturnStatement	return - 1 ;	73:12:1305:1314	2564896	1	True				
ANR	2565158	UnaryOperationExpression	- 1		2564896	0					
ANR	2565159	UnaryOperator	-		2564896	0					
ANR	2565160	PrimaryExpression	1		2564896	1					
ANR	2565161	ReturnStatement	return 0 ;	77:4:1323:1331	2564896	7	True				
ANR	2565162	PrimaryExpression	0		2564896	0					
ANR	2565163	ReturnType	static int		2564896	1					
ANR	2565164	Identifier	do_bit_allocation		2564896	2					
ANR	2565165	ParameterList	"AC3DecodeContext * ctx , int flags"		2564896	3					
ANR	2565166	Parameter	AC3DecodeContext * ctx	1:29:29:49	2564896	0	True				
ANR	2565167	ParameterType	AC3DecodeContext *		2564896	0					
ANR	2565168	Identifier	ctx		2564896	1					
ANR	2565169	Parameter	int flags	1:52:52:60	2564896	1	True				
ANR	2565170	ParameterType	int		2564896	0					
ANR	2565171	Identifier	flags		2564896	1					
ANR	2565172	CFGEntryNode	ENTRY		2564896		True				
ANR	2565173	CFGExitNode	EXIT		2564896		True				
ANR	2565174	Symbol	* ab		2564896						
ANR	2565175	Symbol	flags		2564896						
ANR	2565176	Symbol	ab -> cplbap		2564896						
ANR	2565177	Symbol	& ctx -> audio_block		2564896						
ANR	2565178	Symbol	ab -> lfefsnroffst		2564896						
ANR	2565179	Symbol	* * ab		2564896						
ANR	2565180	Symbol	snroffst		2564896						
ANR	2565181	Symbol	ctx -> bsi . nfchans		2564896						
ANR	2565182	Symbol	* ab -> bap		2564896						
ANR	2565183	Symbol	AC3_AB_SNROFFSTE		2564896						
ANR	2565184	Symbol	AC3_BSI_LFEON		2564896						
ANR	2565185	Symbol	ab -> csnroffst		2564896						
ANR	2565186	Symbol	ab		2564896						
ANR	2565187	Symbol	ab -> flags		2564896						
ANR	2565188	Symbol	ctx -> bsi		2564896						
ANR	2565189	Symbol	ctx		2564896						
ANR	2565190	Symbol	* ab -> fsnroffst		2564896						
ANR	2565191	Symbol	i		2564896						
ANR	2565192	Symbol	_do_bit_allocation		2564896						
ANR	2565193	Symbol	ab -> fsnroffst		2564896						
ANR	2565194	Symbol	ab -> lfebap		2564896						
ANR	2565195	Symbol	ab -> cplfsnroffst		2564896						
ANR	2565196	Symbol	ab -> bap		2564896						
ANR	2565197	Symbol	* ctx		2564896						
ANR	2565198	Symbol	AC3_AB_CPLINU		2564896						
ANR	2565199	Symbol	* i		2564896						
ANR	2565200	Symbol	ctx -> bsi . flags		2564896						
