command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6123424	File	/home/p4ultr4n/workplace/ReVeal/raw_code/oggvorbis_encode_frame_01_0.c								
ANR	6123425	Function	oggvorbis_encode_frame	1:0:0:1875							
ANR	6123426	FunctionDef	"oggvorbis_encode_frame (AVCodecContext * avccontext , unsigned char * packets , int buf_size , void * data)"		6123425	0					
ANR	6123427	CompoundStatement		7:0:127:1875	6123425	0					
ANR	6123428	IdentifierDeclStatement	OggVorbisContext * context = avccontext -> priv_data ;	9:4:134:184	6123425	0	True				
ANR	6123429	IdentifierDecl	* context = avccontext -> priv_data		6123425	0					
ANR	6123430	IdentifierDeclType	OggVorbisContext *		6123425	0					
ANR	6123431	Identifier	context		6123425	1					
ANR	6123432	AssignmentExpression	* context = avccontext -> priv_data		6123425	2		=			
ANR	6123433	Identifier	context		6123425	0					
ANR	6123434	PtrMemberAccess	avccontext -> priv_data		6123425	1					
ANR	6123435	Identifier	avccontext		6123425	0					
ANR	6123436	Identifier	priv_data		6123425	1					
ANR	6123437	IdentifierDeclStatement	float * * buffer ;	11:4:191:206	6123425	1	True				
ANR	6123438	IdentifierDecl	* * buffer		6123425	0					
ANR	6123439	IdentifierDeclType	float * *		6123425	0					
ANR	6123440	Identifier	buffer		6123425	1					
ANR	6123441	IdentifierDeclStatement	ogg_packet op ;	13:4:213:227	6123425	2	True				
ANR	6123442	IdentifierDecl	op		6123425	0					
ANR	6123443	IdentifierDeclType	ogg_packet		6123425	0					
ANR	6123444	Identifier	op		6123425	1					
ANR	6123445	IdentifierDeclStatement	signed char * audio = data ;	15:4:234:260	6123425	3	True				
ANR	6123446	IdentifierDecl	* audio = data		6123425	0					
ANR	6123447	IdentifierDeclType	signed char *		6123425	0					
ANR	6123448	Identifier	audio		6123425	1					
ANR	6123449	AssignmentExpression	* audio = data		6123425	2		=			
ANR	6123450	Identifier	data		6123425	0					
ANR	6123451	Identifier	data		6123425	1					
ANR	6123452	IdentifierDeclStatement	"int l , samples = OGGVORBIS_FRAME_SIZE ;"	17:4:267:305	6123425	4	True				
ANR	6123453	IdentifierDecl	l		6123425	0					
ANR	6123454	IdentifierDeclType	int		6123425	0					
ANR	6123455	Identifier	l		6123425	1					
ANR	6123456	IdentifierDecl	samples = OGGVORBIS_FRAME_SIZE		6123425	1					
ANR	6123457	IdentifierDeclType	int		6123425	0					
ANR	6123458	Identifier	samples		6123425	1					
ANR	6123459	AssignmentExpression	samples = OGGVORBIS_FRAME_SIZE		6123425	2		=			
ANR	6123460	Identifier	OGGVORBIS_FRAME_SIZE		6123425	0					
ANR	6123461	Identifier	OGGVORBIS_FRAME_SIZE		6123425	1					
ANR	6123462	ExpressionStatement	"buffer = vorbis_analysis_buffer ( & context -> vd , samples )"	21:4:314:369	6123425	5	True				
ANR	6123463	AssignmentExpression	"buffer = vorbis_analysis_buffer ( & context -> vd , samples )"		6123425	0		=			
ANR	6123464	Identifier	buffer		6123425	0					
ANR	6123465	CallExpression	"vorbis_analysis_buffer ( & context -> vd , samples )"		6123425	1					
ANR	6123466	Callee	vorbis_analysis_buffer		6123425	0					
ANR	6123467	Identifier	vorbis_analysis_buffer		6123425	0					
ANR	6123468	ArgumentList	& context -> vd		6123425	1					
ANR	6123469	Argument	& context -> vd		6123425	0					
ANR	6123470	UnaryOperationExpression	& context -> vd		6123425	0					
ANR	6123471	UnaryOperator	&		6123425	0					
ANR	6123472	PtrMemberAccess	context -> vd		6123425	1					
ANR	6123473	Identifier	context		6123425	0					
ANR	6123474	Identifier	vd		6123425	1					
ANR	6123475	Argument	samples		6123425	1					
ANR	6123476	Identifier	samples		6123425	0					
ANR	6123477	IfStatement	if ( context -> vi . channels == 1 )		6123425	6					
ANR	6123478	Condition	context -> vi . channels == 1	25:7:381:405	6123425	0	True				
ANR	6123479	EqualityExpression	context -> vi . channels == 1		6123425	0		==			
ANR	6123480	MemberAccess	context -> vi . channels		6123425	0					
ANR	6123481	PtrMemberAccess	context -> vi		6123425	0					
ANR	6123482	Identifier	context		6123425	0					
ANR	6123483	Identifier	vi		6123425	1					
ANR	6123484	Identifier	channels		6123425	1					
ANR	6123485	PrimaryExpression	1		6123425	1					
ANR	6123486	CompoundStatement		19:34:280:280	6123425	1					
ANR	6123487	ForStatement	for ( l = 0 ; l < samples ; l ++ )		6123425	0					
ANR	6123488	ForInit	l = 0 ;	27:5:416:422	6123425	0	True				
ANR	6123489	AssignmentExpression	l = 0		6123425	0		=			
ANR	6123490	Identifier	l		6123425	0					
ANR	6123491	PrimaryExpression	0		6123425	1					
ANR	6123492	Condition	l < samples	27:13:424:434	6123425	1	True				
ANR	6123493	RelationalExpression	l < samples		6123425	0		<			
ANR	6123494	Identifier	l		6123425	0					
ANR	6123495	Identifier	samples		6123425	1					
ANR	6123496	PostIncDecOperationExpression	l ++	27:27:438:440	6123425	2	True				
ANR	6123497	Identifier	l		6123425	0					
ANR	6123498	IncDec	++		6123425	1					
ANR	6123499	ExpressionStatement	buffer [ 0 ] [ l ] = ( ( audio [ l * 2 + 1 ] << 8 ) | ( 0x00ff & ( int ) audio [ l * 2 ] ) ) / 32768.f	29:5:449:514	6123425	3	True				
ANR	6123500	AssignmentExpression	buffer [ 0 ] [ l ] = ( ( audio [ l * 2 + 1 ] << 8 ) | ( 0x00ff & ( int ) audio [ l * 2 ] ) ) / 32768.f		6123425	0		=			
ANR	6123501	ArrayIndexing	buffer [ 0 ] [ l ]		6123425	0					
ANR	6123502	ArrayIndexing	buffer [ 0 ]		6123425	0					
ANR	6123503	Identifier	buffer		6123425	0					
ANR	6123504	PrimaryExpression	0		6123425	1					
ANR	6123505	Identifier	l		6123425	1					
ANR	6123506	MultiplicativeExpression	( ( audio [ l * 2 + 1 ] << 8 ) | ( 0x00ff & ( int ) audio [ l * 2 ] ) ) / 32768.f		6123425	1		/			
ANR	6123507	InclusiveOrExpression	( audio [ l * 2 + 1 ] << 8 ) | ( 0x00ff & ( int ) audio [ l * 2 ] )		6123425	0		|			
ANR	6123508	ShiftExpression	audio [ l * 2 + 1 ] << 8		6123425	0		<<			
ANR	6123509	ArrayIndexing	audio [ l * 2 + 1 ]		6123425	0					
ANR	6123510	Identifier	audio		6123425	0					
ANR	6123511	AdditiveExpression	l * 2 + 1		6123425	1		+			
ANR	6123512	MultiplicativeExpression	l * 2		6123425	0		*			
ANR	6123513	Identifier	l		6123425	0					
ANR	6123514	PrimaryExpression	2		6123425	1					
ANR	6123515	PrimaryExpression	1		6123425	1					
ANR	6123516	PrimaryExpression	8		6123425	1					
ANR	6123517	BitAndExpression	0x00ff & ( int ) audio [ l * 2 ]		6123425	1		&			
ANR	6123518	PrimaryExpression	0x00ff		6123425	0					
ANR	6123519	CastExpression	( int ) audio [ l * 2 ]		6123425	1					
ANR	6123520	CastTarget	int		6123425	0					
ANR	6123521	ArrayIndexing	audio [ l * 2 ]		6123425	1					
ANR	6123522	Identifier	audio		6123425	0					
ANR	6123523	MultiplicativeExpression	l * 2		6123425	1		*			
ANR	6123524	Identifier	l		6123425	0					
ANR	6123525	PrimaryExpression	2		6123425	1					
ANR	6123526	PrimaryExpression	32768.f		6123425	1					
ANR	6123527	ElseStatement	else		6123425	0					
ANR	6123528	CompoundStatement		25:11:400:400	6123425	0					
ANR	6123529	ForStatement	for ( l = 0 ; l < samples ; l ++ )		6123425	0					
ANR	6123530	ForInit	l = 0 ;	33:5:536:542	6123425	0	True				
ANR	6123531	AssignmentExpression	l = 0		6123425	0		=			
ANR	6123532	Identifier	l		6123425	0					
ANR	6123533	PrimaryExpression	0		6123425	1					
ANR	6123534	Condition	l < samples	33:13:544:554	6123425	1	True				
ANR	6123535	RelationalExpression	l < samples		6123425	0		<			
ANR	6123536	Identifier	l		6123425	0					
ANR	6123537	Identifier	samples		6123425	1					
ANR	6123538	PostIncDecOperationExpression	l ++	33:27:558:560	6123425	2	True				
ANR	6123539	Identifier	l		6123425	0					
ANR	6123540	IncDec	++		6123425	1					
ANR	6123541	CompoundStatement		27:31:434:434	6123425	3					
ANR	6123542	ExpressionStatement	buffer [ 0 ] [ l ] = ( ( audio [ l * 4 + 1 ] << 8 ) | ( 0x00ff & ( int ) audio [ l * 4 ] ) ) / 32768.f	35:5:570:635	6123425	0	True				
ANR	6123543	AssignmentExpression	buffer [ 0 ] [ l ] = ( ( audio [ l * 4 + 1 ] << 8 ) | ( 0x00ff & ( int ) audio [ l * 4 ] ) ) / 32768.f		6123425	0		=			
ANR	6123544	ArrayIndexing	buffer [ 0 ] [ l ]		6123425	0					
ANR	6123545	ArrayIndexing	buffer [ 0 ]		6123425	0					
ANR	6123546	Identifier	buffer		6123425	0					
ANR	6123547	PrimaryExpression	0		6123425	1					
ANR	6123548	Identifier	l		6123425	1					
ANR	6123549	MultiplicativeExpression	( ( audio [ l * 4 + 1 ] << 8 ) | ( 0x00ff & ( int ) audio [ l * 4 ] ) ) / 32768.f		6123425	1		/			
ANR	6123550	InclusiveOrExpression	( audio [ l * 4 + 1 ] << 8 ) | ( 0x00ff & ( int ) audio [ l * 4 ] )		6123425	0		|			
ANR	6123551	ShiftExpression	audio [ l * 4 + 1 ] << 8		6123425	0		<<			
ANR	6123552	ArrayIndexing	audio [ l * 4 + 1 ]		6123425	0					
ANR	6123553	Identifier	audio		6123425	0					
ANR	6123554	AdditiveExpression	l * 4 + 1		6123425	1		+			
ANR	6123555	MultiplicativeExpression	l * 4		6123425	0		*			
ANR	6123556	Identifier	l		6123425	0					
ANR	6123557	PrimaryExpression	4		6123425	1					
ANR	6123558	PrimaryExpression	1		6123425	1					
ANR	6123559	PrimaryExpression	8		6123425	1					
ANR	6123560	BitAndExpression	0x00ff & ( int ) audio [ l * 4 ]		6123425	1		&			
ANR	6123561	PrimaryExpression	0x00ff		6123425	0					
ANR	6123562	CastExpression	( int ) audio [ l * 4 ]		6123425	1					
ANR	6123563	CastTarget	int		6123425	0					
ANR	6123564	ArrayIndexing	audio [ l * 4 ]		6123425	1					
ANR	6123565	Identifier	audio		6123425	0					
ANR	6123566	MultiplicativeExpression	l * 4		6123425	1		*			
ANR	6123567	Identifier	l		6123425	0					
ANR	6123568	PrimaryExpression	4		6123425	1					
ANR	6123569	PrimaryExpression	32768.f		6123425	1					
ANR	6123570	ExpressionStatement	buffer [ 1 ] [ l ] = ( ( audio [ l * 4 + 3 ] << 8 ) | ( 0x00ff & ( int ) audio [ l * 4 + 2 ] ) ) / 32768.f	37:5:643:710	6123425	1	True				
ANR	6123571	AssignmentExpression	buffer [ 1 ] [ l ] = ( ( audio [ l * 4 + 3 ] << 8 ) | ( 0x00ff & ( int ) audio [ l * 4 + 2 ] ) ) / 32768.f		6123425	0		=			
ANR	6123572	ArrayIndexing	buffer [ 1 ] [ l ]		6123425	0					
ANR	6123573	ArrayIndexing	buffer [ 1 ]		6123425	0					
ANR	6123574	Identifier	buffer		6123425	0					
ANR	6123575	PrimaryExpression	1		6123425	1					
ANR	6123576	Identifier	l		6123425	1					
ANR	6123577	MultiplicativeExpression	( ( audio [ l * 4 + 3 ] << 8 ) | ( 0x00ff & ( int ) audio [ l * 4 + 2 ] ) ) / 32768.f		6123425	1		/			
ANR	6123578	InclusiveOrExpression	( audio [ l * 4 + 3 ] << 8 ) | ( 0x00ff & ( int ) audio [ l * 4 + 2 ] )		6123425	0		|			
ANR	6123579	ShiftExpression	audio [ l * 4 + 3 ] << 8		6123425	0		<<			
ANR	6123580	ArrayIndexing	audio [ l * 4 + 3 ]		6123425	0					
ANR	6123581	Identifier	audio		6123425	0					
ANR	6123582	AdditiveExpression	l * 4 + 3		6123425	1		+			
ANR	6123583	MultiplicativeExpression	l * 4		6123425	0		*			
ANR	6123584	Identifier	l		6123425	0					
ANR	6123585	PrimaryExpression	4		6123425	1					
ANR	6123586	PrimaryExpression	3		6123425	1					
ANR	6123587	PrimaryExpression	8		6123425	1					
ANR	6123588	BitAndExpression	0x00ff & ( int ) audio [ l * 4 + 2 ]		6123425	1		&			
ANR	6123589	PrimaryExpression	0x00ff		6123425	0					
ANR	6123590	CastExpression	( int ) audio [ l * 4 + 2 ]		6123425	1					
ANR	6123591	CastTarget	int		6123425	0					
ANR	6123592	ArrayIndexing	audio [ l * 4 + 2 ]		6123425	1					
ANR	6123593	Identifier	audio		6123425	0					
ANR	6123594	AdditiveExpression	l * 4 + 2		6123425	1		+			
ANR	6123595	MultiplicativeExpression	l * 4		6123425	0		*			
ANR	6123596	Identifier	l		6123425	0					
ANR	6123597	PrimaryExpression	4		6123425	1					
ANR	6123598	PrimaryExpression	2		6123425	1					
ANR	6123599	PrimaryExpression	32768.f		6123425	1					
ANR	6123600	ExpressionStatement	"vorbis_analysis_wrote ( & context -> vd , samples )"	45:4:734:779	6123425	7	True				
ANR	6123601	CallExpression	"vorbis_analysis_wrote ( & context -> vd , samples )"		6123425	0					
ANR	6123602	Callee	vorbis_analysis_wrote		6123425	0					
ANR	6123603	Identifier	vorbis_analysis_wrote		6123425	0					
ANR	6123604	ArgumentList	& context -> vd		6123425	1					
ANR	6123605	Argument	& context -> vd		6123425	0					
ANR	6123606	UnaryOperationExpression	& context -> vd		6123425	0					
ANR	6123607	UnaryOperator	&		6123425	0					
ANR	6123608	PtrMemberAccess	context -> vd		6123425	1					
ANR	6123609	Identifier	context		6123425	0					
ANR	6123610	Identifier	vd		6123425	1					
ANR	6123611	Argument	samples		6123425	1					
ANR	6123612	Identifier	samples		6123425	0					
ANR	6123613	WhileStatement	"while ( vorbis_analysis_blockout ( & context -> vd , & context -> vb ) == 1 )"		6123425	8					
ANR	6123614	Condition	"vorbis_analysis_blockout ( & context -> vd , & context -> vb ) == 1"	49:10:795:851	6123425	0	True				
ANR	6123615	EqualityExpression	"vorbis_analysis_blockout ( & context -> vd , & context -> vb ) == 1"		6123425	0		==			
ANR	6123616	CallExpression	"vorbis_analysis_blockout ( & context -> vd , & context -> vb )"		6123425	0					
ANR	6123617	Callee	vorbis_analysis_blockout		6123425	0					
ANR	6123618	Identifier	vorbis_analysis_blockout		6123425	0					
ANR	6123619	ArgumentList	& context -> vd		6123425	1					
ANR	6123620	Argument	& context -> vd		6123425	0					
ANR	6123621	UnaryOperationExpression	& context -> vd		6123425	0					
ANR	6123622	UnaryOperator	&		6123425	0					
ANR	6123623	PtrMemberAccess	context -> vd		6123425	1					
ANR	6123624	Identifier	context		6123425	0					
ANR	6123625	Identifier	vd		6123425	1					
ANR	6123626	Argument	& context -> vb		6123425	1					
ANR	6123627	UnaryOperationExpression	& context -> vb		6123425	0					
ANR	6123628	UnaryOperator	&		6123425	0					
ANR	6123629	PtrMemberAccess	context -> vb		6123425	1					
ANR	6123630	Identifier	context		6123425	0					
ANR	6123631	Identifier	vb		6123425	1					
ANR	6123632	PrimaryExpression	1		6123425	1					
ANR	6123633	CompoundStatement		43:69:726:726	6123425	1					
ANR	6123634	ExpressionStatement	"vorbis_analysis ( & context -> vb , NULL )"	51:1:858:893	6123425	0	True				
ANR	6123635	CallExpression	"vorbis_analysis ( & context -> vb , NULL )"		6123425	0					
ANR	6123636	Callee	vorbis_analysis		6123425	0					
ANR	6123637	Identifier	vorbis_analysis		6123425	0					
ANR	6123638	ArgumentList	& context -> vb		6123425	1					
ANR	6123639	Argument	& context -> vb		6123425	0					
ANR	6123640	UnaryOperationExpression	& context -> vb		6123425	0					
ANR	6123641	UnaryOperator	&		6123425	0					
ANR	6123642	PtrMemberAccess	context -> vb		6123425	1					
ANR	6123643	Identifier	context		6123425	0					
ANR	6123644	Identifier	vb		6123425	1					
ANR	6123645	Argument	NULL		6123425	1					
ANR	6123646	Identifier	NULL		6123425	0					
ANR	6123647	ExpressionStatement	vorbis_bitrate_addblock ( & context -> vb )	53:1:897:935	6123425	1	True				
ANR	6123648	CallExpression	vorbis_bitrate_addblock ( & context -> vb )		6123425	0					
ANR	6123649	Callee	vorbis_bitrate_addblock		6123425	0					
ANR	6123650	Identifier	vorbis_bitrate_addblock		6123425	0					
ANR	6123651	ArgumentList	& context -> vb		6123425	1					
ANR	6123652	Argument	& context -> vb		6123425	0					
ANR	6123653	UnaryOperationExpression	& context -> vb		6123425	0					
ANR	6123654	UnaryOperator	&		6123425	0					
ANR	6123655	PtrMemberAccess	context -> vb		6123425	1					
ANR	6123656	Identifier	context		6123425	0					
ANR	6123657	Identifier	vb		6123425	1					
ANR	6123658	WhileStatement	"while ( vorbis_bitrate_flushpacket ( & context -> vd , & op ) )"		6123425	2					
ANR	6123659	Condition	"vorbis_bitrate_flushpacket ( & context -> vd , & op )"	57:7:947:991	6123425	0	True				
ANR	6123660	CallExpression	"vorbis_bitrate_flushpacket ( & context -> vd , & op )"		6123425	0					
ANR	6123661	Callee	vorbis_bitrate_flushpacket		6123425	0					
ANR	6123662	Identifier	vorbis_bitrate_flushpacket		6123425	0					
ANR	6123663	ArgumentList	& context -> vd		6123425	1					
ANR	6123664	Argument	& context -> vd		6123425	0					
ANR	6123665	UnaryOperationExpression	& context -> vd		6123425	0					
ANR	6123666	UnaryOperator	&		6123425	0					
ANR	6123667	PtrMemberAccess	context -> vd		6123425	1					
ANR	6123668	Identifier	context		6123425	0					
ANR	6123669	Identifier	vd		6123425	1					
ANR	6123670	Argument	& op		6123425	1					
ANR	6123671	UnaryOperationExpression	& op		6123425	0					
ANR	6123672	UnaryOperator	&		6123425	0					
ANR	6123673	Identifier	op		6123425	1					
ANR	6123674	CompoundStatement		51:54:866:866	6123425	1					
ANR	6123675	ExpressionStatement	"memcpy ( context -> buffer + context -> buffer_index , & op , sizeof ( ogg_packet ) )"	59:12:1009:1081	6123425	0	True				
ANR	6123676	CallExpression	"memcpy ( context -> buffer + context -> buffer_index , & op , sizeof ( ogg_packet ) )"		6123425	0					
ANR	6123677	Callee	memcpy		6123425	0					
ANR	6123678	Identifier	memcpy		6123425	0					
ANR	6123679	ArgumentList	context -> buffer + context -> buffer_index		6123425	1					
ANR	6123680	Argument	context -> buffer + context -> buffer_index		6123425	0					
ANR	6123681	AdditiveExpression	context -> buffer + context -> buffer_index		6123425	0		+			
ANR	6123682	PtrMemberAccess	context -> buffer		6123425	0					
ANR	6123683	Identifier	context		6123425	0					
ANR	6123684	Identifier	buffer		6123425	1					
ANR	6123685	PtrMemberAccess	context -> buffer_index		6123425	1					
ANR	6123686	Identifier	context		6123425	0					
ANR	6123687	Identifier	buffer_index		6123425	1					
ANR	6123688	Argument	& op		6123425	1					
ANR	6123689	UnaryOperationExpression	& op		6123425	0					
ANR	6123690	UnaryOperator	&		6123425	0					
ANR	6123691	Identifier	op		6123425	1					
ANR	6123692	Argument	sizeof ( ogg_packet )		6123425	2					
ANR	6123693	SizeofExpression	sizeof ( ogg_packet )		6123425	0					
ANR	6123694	Sizeof	sizeof		6123425	0					
ANR	6123695	SizeofOperand	ogg_packet		6123425	1					
ANR	6123696	ExpressionStatement	context -> buffer_index += sizeof ( ogg_packet )	61:12:1096:1139	6123425	1	True				
ANR	6123697	AssignmentExpression	context -> buffer_index += sizeof ( ogg_packet )		6123425	0		+=			
ANR	6123698	PtrMemberAccess	context -> buffer_index		6123425	0					
ANR	6123699	Identifier	context		6123425	0					
ANR	6123700	Identifier	buffer_index		6123425	1					
ANR	6123701	SizeofExpression	sizeof ( ogg_packet )		6123425	1					
ANR	6123702	Sizeof	sizeof		6123425	0					
ANR	6123703	SizeofOperand	ogg_packet		6123425	1					
ANR	6123704	ExpressionStatement	"memcpy ( context -> buffer + context -> buffer_index , op . packet , op . bytes )"	63:12:1154:1222	6123425	2	True				
ANR	6123705	CallExpression	"memcpy ( context -> buffer + context -> buffer_index , op . packet , op . bytes )"		6123425	0					
ANR	6123706	Callee	memcpy		6123425	0					
ANR	6123707	Identifier	memcpy		6123425	0					
ANR	6123708	ArgumentList	context -> buffer + context -> buffer_index		6123425	1					
ANR	6123709	Argument	context -> buffer + context -> buffer_index		6123425	0					
ANR	6123710	AdditiveExpression	context -> buffer + context -> buffer_index		6123425	0		+			
ANR	6123711	PtrMemberAccess	context -> buffer		6123425	0					
ANR	6123712	Identifier	context		6123425	0					
ANR	6123713	Identifier	buffer		6123425	1					
ANR	6123714	PtrMemberAccess	context -> buffer_index		6123425	1					
ANR	6123715	Identifier	context		6123425	0					
ANR	6123716	Identifier	buffer_index		6123425	1					
ANR	6123717	Argument	op . packet		6123425	1					
ANR	6123718	MemberAccess	op . packet		6123425	0					
ANR	6123719	Identifier	op		6123425	0					
ANR	6123720	Identifier	packet		6123425	1					
ANR	6123721	Argument	op . bytes		6123425	2					
ANR	6123722	MemberAccess	op . bytes		6123425	0					
ANR	6123723	Identifier	op		6123425	0					
ANR	6123724	Identifier	bytes		6123425	1					
ANR	6123725	ExpressionStatement	context -> buffer_index += op . bytes	65:12:1237:1270	6123425	3	True				
ANR	6123726	AssignmentExpression	context -> buffer_index += op . bytes		6123425	0		+=			
ANR	6123727	PtrMemberAccess	context -> buffer_index		6123425	0					
ANR	6123728	Identifier	context		6123425	0					
ANR	6123729	Identifier	buffer_index		6123425	1					
ANR	6123730	MemberAccess	op . bytes		6123425	1					
ANR	6123731	Identifier	op		6123425	0					
ANR	6123732	Identifier	bytes		6123425	1					
ANR	6123733	IfStatement	if ( context -> buffer_index )		6123425	9					
ANR	6123734	Condition	context -> buffer_index	75:7:1389:1409	6123425	0	True				
ANR	6123735	PtrMemberAccess	context -> buffer_index		6123425	0					
ANR	6123736	Identifier	context		6123425	0					
ANR	6123737	Identifier	buffer_index		6123425	1					
ANR	6123738	CompoundStatement		71:8:1294:1339	6123425	1					
ANR	6123739	IdentifierDeclStatement	ogg_packet * op2 = ( ogg_packet * ) context -> buffer ;	77:8:1422:1467	6123425	0	True				
ANR	6123740	IdentifierDecl	* op2 = ( ogg_packet * ) context -> buffer		6123425	0					
ANR	6123741	IdentifierDeclType	ogg_packet *		6123425	0					
ANR	6123742	Identifier	op2		6123425	1					
ANR	6123743	AssignmentExpression	* op2 = ( ogg_packet * ) context -> buffer		6123425	2		=			
ANR	6123744	Identifier	op2		6123425	0					
ANR	6123745	CastExpression	( ogg_packet * ) context -> buffer		6123425	1					
ANR	6123746	CastTarget	ogg_packet *		6123425	0					
ANR	6123747	PtrMemberAccess	context -> buffer		6123425	1					
ANR	6123748	Identifier	context		6123425	0					
ANR	6123749	Identifier	buffer		6123425	1					
ANR	6123750	ExpressionStatement	op2 -> packet = context -> buffer + sizeof ( ogg_packet )	79:8:1478:1528	6123425	1	True				
ANR	6123751	AssignmentExpression	op2 -> packet = context -> buffer + sizeof ( ogg_packet )		6123425	0		=			
ANR	6123752	PtrMemberAccess	op2 -> packet		6123425	0					
ANR	6123753	Identifier	op2		6123425	0					
ANR	6123754	Identifier	packet		6123425	1					
ANR	6123755	AdditiveExpression	context -> buffer + sizeof ( ogg_packet )		6123425	1		+			
ANR	6123756	PtrMemberAccess	context -> buffer		6123425	0					
ANR	6123757	Identifier	context		6123425	0					
ANR	6123758	Identifier	buffer		6123425	1					
ANR	6123759	SizeofExpression	sizeof ( ogg_packet )		6123425	1					
ANR	6123760	Sizeof	sizeof		6123425	0					
ANR	6123761	SizeofOperand	ogg_packet		6123425	1					
ANR	6123762	ExpressionStatement	l = op2 -> bytes	81:8:1539:1553	6123425	2	True				
ANR	6123763	AssignmentExpression	l = op2 -> bytes		6123425	0		=			
ANR	6123764	Identifier	l		6123425	0					
ANR	6123765	PtrMemberAccess	op2 -> bytes		6123425	1					
ANR	6123766	Identifier	op2		6123425	0					
ANR	6123767	Identifier	bytes		6123425	1					
ANR	6123768	ExpressionStatement	"memcpy ( packets , op2 -> packet , l )"	85:8:1574:1605	6123425	3	True				
ANR	6123769	CallExpression	"memcpy ( packets , op2 -> packet , l )"		6123425	0					
ANR	6123770	Callee	memcpy		6123425	0					
ANR	6123771	Identifier	memcpy		6123425	0					
ANR	6123772	ArgumentList	packets		6123425	1					
ANR	6123773	Argument	packets		6123425	0					
ANR	6123774	Identifier	packets		6123425	0					
ANR	6123775	Argument	op2 -> packet		6123425	1					
ANR	6123776	PtrMemberAccess	op2 -> packet		6123425	0					
ANR	6123777	Identifier	op2		6123425	0					
ANR	6123778	Identifier	packet		6123425	1					
ANR	6123779	Argument	l		6123425	2					
ANR	6123780	Identifier	l		6123425	0					
ANR	6123781	ExpressionStatement	context -> buffer_index -= l + sizeof ( ogg_packet )	87:8:1616:1663	6123425	4	True				
ANR	6123782	AssignmentExpression	context -> buffer_index -= l + sizeof ( ogg_packet )		6123425	0		-=			
ANR	6123783	PtrMemberAccess	context -> buffer_index		6123425	0					
ANR	6123784	Identifier	context		6123425	0					
ANR	6123785	Identifier	buffer_index		6123425	1					
ANR	6123786	AdditiveExpression	l + sizeof ( ogg_packet )		6123425	1		+			
ANR	6123787	Identifier	l		6123425	0					
ANR	6123788	SizeofExpression	sizeof ( ogg_packet )		6123425	1					
ANR	6123789	Sizeof	sizeof		6123425	0					
ANR	6123790	SizeofOperand	ogg_packet		6123425	1					
ANR	6123791	ExpressionStatement	"memcpy ( context -> buffer , context -> buffer + l + sizeof ( ogg_packet ) , context -> buffer_index )"	89:8:1674:1762	6123425	5	True				
ANR	6123792	CallExpression	"memcpy ( context -> buffer , context -> buffer + l + sizeof ( ogg_packet ) , context -> buffer_index )"		6123425	0					
ANR	6123793	Callee	memcpy		6123425	0					
ANR	6123794	Identifier	memcpy		6123425	0					
ANR	6123795	ArgumentList	context -> buffer		6123425	1					
ANR	6123796	Argument	context -> buffer		6123425	0					
ANR	6123797	PtrMemberAccess	context -> buffer		6123425	0					
ANR	6123798	Identifier	context		6123425	0					
ANR	6123799	Identifier	buffer		6123425	1					
ANR	6123800	Argument	context -> buffer + l + sizeof ( ogg_packet )		6123425	1					
ANR	6123801	AdditiveExpression	context -> buffer + l + sizeof ( ogg_packet )		6123425	0		+			
ANR	6123802	PtrMemberAccess	context -> buffer		6123425	0					
ANR	6123803	Identifier	context		6123425	0					
ANR	6123804	Identifier	buffer		6123425	1					
ANR	6123805	AdditiveExpression	l + sizeof ( ogg_packet )		6123425	1		+			
ANR	6123806	Identifier	l		6123425	0					
ANR	6123807	SizeofExpression	sizeof ( ogg_packet )		6123425	1					
ANR	6123808	Sizeof	sizeof		6123425	0					
ANR	6123809	SizeofOperand	ogg_packet		6123425	1					
ANR	6123810	Argument	context -> buffer_index		6123425	2					
ANR	6123811	PtrMemberAccess	context -> buffer_index		6123425	0					
ANR	6123812	Identifier	context		6123425	0					
ANR	6123813	Identifier	buffer_index		6123425	1					
ANR	6123814	ReturnStatement	return l ;	95:8:1840:1848	6123425	6	True				
ANR	6123815	Identifier	l		6123425	0					
ANR	6123816	ReturnStatement	return 0 ;	101:4:1864:1872	6123425	10	True				
ANR	6123817	PrimaryExpression	0		6123425	0					
ANR	6123818	ReturnType	static int		6123425	1					
ANR	6123819	Identifier	oggvorbis_encode_frame		6123425	2					
ANR	6123820	ParameterList	"AVCodecContext * avccontext , unsigned char * packets , int buf_size , void * data"		6123425	3					
ANR	6123821	Parameter	AVCodecContext * avccontext	1:34:34:59	6123425	0	True				
ANR	6123822	ParameterType	AVCodecContext *		6123425	0					
ANR	6123823	Identifier	avccontext		6123425	1					
ANR	6123824	Parameter	unsigned char * packets	3:6:69:90	6123425	1	True				
ANR	6123825	ParameterType	unsigned char *		6123425	0					
ANR	6123826	Identifier	packets		6123425	1					
ANR	6123827	Parameter	int buf_size	5:6:100:111	6123425	2	True				
ANR	6123828	ParameterType	int		6123425	0					
ANR	6123829	Identifier	buf_size		6123425	1					
ANR	6123830	Parameter	void * data	5:20:114:123	6123425	3	True				
ANR	6123831	ParameterType	void *		6123425	0					
ANR	6123832	Identifier	data		6123425	1					
ANR	6123833	CFGEntryNode	ENTRY		6123425		True				
ANR	6123834	CFGExitNode	EXIT		6123425		True				
ANR	6123835	Symbol	op2 -> bytes		6123425						
ANR	6123836	Symbol	OGGVORBIS_FRAME_SIZE		6123425						
ANR	6123837	Symbol	* * buffer		6123425						
ANR	6123838	Symbol	context -> buffer_index		6123425						
ANR	6123839	Symbol	data		6123425						
ANR	6123840	Symbol	& context -> vd		6123425						
ANR	6123841	Symbol	vorbis_analysis_blockout		6123425						
ANR	6123842	Symbol	& context -> vb		6123425						
ANR	6123843	Symbol	& op		6123425						
ANR	6123844	Symbol	avccontext		6123425						
ANR	6123845	Symbol	packets		6123425						
ANR	6123846	Symbol	* audio		6123425						
ANR	6123847	Symbol	vorbis_bitrate_flushpacket		6123425						
ANR	6123848	Symbol	context		6123425						
ANR	6123849	Symbol	avccontext -> priv_data		6123425						
ANR	6123850	Symbol	buffer		6123425						
ANR	6123851	Symbol	audio		6123425						
ANR	6123852	Symbol	* op2		6123425						
ANR	6123853	Symbol	context -> vi . channels		6123425						
ANR	6123854	Symbol	context -> vi		6123425						
ANR	6123855	Symbol	op		6123425						
ANR	6123856	Symbol	* buffer		6123425						
ANR	6123857	Symbol	NULL		6123425						
ANR	6123858	Symbol	op . packet		6123425						
ANR	6123859	Symbol	buf_size		6123425						
ANR	6123860	Symbol	l		6123425						
ANR	6123861	Symbol	samples		6123425						
ANR	6123862	Symbol	* context		6123425						
ANR	6123863	Symbol	context -> buffer		6123425						
ANR	6123864	Symbol	op2		6123425						
ANR	6123865	Symbol	* avccontext		6123425						
ANR	6123866	Symbol	op2 -> packet		6123425						
ANR	6123867	Symbol	* l		6123425						
ANR	6123868	Symbol	vorbis_analysis_buffer		6123425						
ANR	6123869	Symbol	op . bytes		6123425						
