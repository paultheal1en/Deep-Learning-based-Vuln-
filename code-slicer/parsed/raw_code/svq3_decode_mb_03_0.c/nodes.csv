command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8080159	File	/home/p4ultr4n/workplace/ReVeal/raw_code/svq3_decode_mb_03_0.c								
ANR	8080160	Function	svq3_decode_mb	1:0:0:11100							
ANR	8080161	FunctionDef	"svq3_decode_mb (H264Context * h , unsigned int mb_type)"		8080160	0					
ANR	8080162	CompoundStatement		3:0:65:11100	8080160	0					
ANR	8080163	IdentifierDeclStatement	"int i , j , k , m , dir , mode ;"	5:4:72:97	8080160	0	True				
ANR	8080164	IdentifierDecl	i		8080160	0					
ANR	8080165	IdentifierDeclType	int		8080160	0					
ANR	8080166	Identifier	i		8080160	1					
ANR	8080167	IdentifierDecl	j		8080160	1					
ANR	8080168	IdentifierDeclType	int		8080160	0					
ANR	8080169	Identifier	j		8080160	1					
ANR	8080170	IdentifierDecl	k		8080160	2					
ANR	8080171	IdentifierDeclType	int		8080160	0					
ANR	8080172	Identifier	k		8080160	1					
ANR	8080173	IdentifierDecl	m		8080160	3					
ANR	8080174	IdentifierDeclType	int		8080160	0					
ANR	8080175	Identifier	m		8080160	1					
ANR	8080176	IdentifierDecl	dir		8080160	4					
ANR	8080177	IdentifierDeclType	int		8080160	0					
ANR	8080178	Identifier	dir		8080160	1					
ANR	8080179	IdentifierDecl	mode		8080160	5					
ANR	8080180	IdentifierDeclType	int		8080160	0					
ANR	8080181	Identifier	mode		8080160	1					
ANR	8080182	IdentifierDeclStatement	int cbp = 0 ;	7:4:104:115	8080160	1	True				
ANR	8080183	IdentifierDecl	cbp = 0		8080160	0					
ANR	8080184	IdentifierDeclType	int		8080160	0					
ANR	8080185	Identifier	cbp		8080160	1					
ANR	8080186	AssignmentExpression	cbp = 0		8080160	2		=			
ANR	8080187	Identifier	cbp		8080160	0					
ANR	8080188	PrimaryExpression	0		8080160	1					
ANR	8080189	IdentifierDeclStatement	uint32_t vlc ;	9:4:122:134	8080160	2	True				
ANR	8080190	IdentifierDecl	vlc		8080160	0					
ANR	8080191	IdentifierDeclType	uint32_t		8080160	0					
ANR	8080192	Identifier	vlc		8080160	1					
ANR	8080193	IdentifierDeclStatement	"int8_t * top , * left ;"	11:4:141:159	8080160	3	True				
ANR	8080194	IdentifierDecl	* top		8080160	0					
ANR	8080195	IdentifierDeclType	int8_t *		8080160	0					
ANR	8080196	Identifier	top		8080160	1					
ANR	8080197	IdentifierDecl	* left		8080160	1					
ANR	8080198	IdentifierDeclType	int8_t *		8080160	0					
ANR	8080199	Identifier	left		8080160	1					
ANR	8080200	Statement	MpegEncContext	13:4:166:179	8080160	4	True				
ANR	8080201	Statement	*	13:19:181:181	8080160	5	True				
ANR	8080202	Statement	const	13:20:182:186	8080160	6	True				
ANR	8080203	ExpressionStatement	s = ( MpegEncContext * ) h	13:26:188:212	8080160	7	True				
ANR	8080204	AssignmentExpression	s = ( MpegEncContext * ) h		8080160	0		=			
ANR	8080205	Identifier	s		8080160	0					
ANR	8080206	CastExpression	( MpegEncContext * ) h		8080160	1					
ANR	8080207	CastTarget	MpegEncContext *		8080160	0					
ANR	8080208	Identifier	h		8080160	1					
ANR	8080209	IdentifierDeclStatement	const int mb_xy = h -> mb_xy ;	15:4:219:245	8080160	8	True				
ANR	8080210	IdentifierDecl	mb_xy = h -> mb_xy		8080160	0					
ANR	8080211	IdentifierDeclType	const int		8080160	0					
ANR	8080212	Identifier	mb_xy		8080160	1					
ANR	8080213	AssignmentExpression	mb_xy = h -> mb_xy		8080160	2		=			
ANR	8080214	Identifier	mb_xy		8080160	0					
ANR	8080215	PtrMemberAccess	h -> mb_xy		8080160	1					
ANR	8080216	Identifier	h		8080160	0					
ANR	8080217	Identifier	mb_xy		8080160	1					
ANR	8080218	IdentifierDeclStatement	const int b_xy = 4 * s -> mb_x + 4 * s -> mb_y * h -> b_stride ;	17:4:252:303	8080160	9	True				
ANR	8080219	IdentifierDecl	b_xy = 4 * s -> mb_x + 4 * s -> mb_y * h -> b_stride		8080160	0					
ANR	8080220	IdentifierDeclType	const int		8080160	0					
ANR	8080221	Identifier	b_xy		8080160	1					
ANR	8080222	AssignmentExpression	b_xy = 4 * s -> mb_x + 4 * s -> mb_y * h -> b_stride		8080160	2		=			
ANR	8080223	Identifier	b_xy		8080160	0					
ANR	8080224	AdditiveExpression	4 * s -> mb_x + 4 * s -> mb_y * h -> b_stride		8080160	1		+			
ANR	8080225	MultiplicativeExpression	4 * s -> mb_x		8080160	0		*			
ANR	8080226	PrimaryExpression	4		8080160	0					
ANR	8080227	PtrMemberAccess	s -> mb_x		8080160	1					
ANR	8080228	Identifier	s		8080160	0					
ANR	8080229	Identifier	mb_x		8080160	1					
ANR	8080230	MultiplicativeExpression	4 * s -> mb_y * h -> b_stride		8080160	1		*			
ANR	8080231	PrimaryExpression	4		8080160	0					
ANR	8080232	MultiplicativeExpression	s -> mb_y * h -> b_stride		8080160	1		*			
ANR	8080233	PtrMemberAccess	s -> mb_y		8080160	0					
ANR	8080234	Identifier	s		8080160	0					
ANR	8080235	Identifier	mb_y		8080160	1					
ANR	8080236	PtrMemberAccess	h -> b_stride		8080160	1					
ANR	8080237	Identifier	h		8080160	0					
ANR	8080238	Identifier	b_stride		8080160	1					
ANR	8080239	ExpressionStatement	h -> top_samples_available = ( s -> mb_y == 0 ) ? 0x33FF : 0xFFFF	21:4:312:376	8080160	10	True				
ANR	8080240	AssignmentExpression	h -> top_samples_available = ( s -> mb_y == 0 ) ? 0x33FF : 0xFFFF		8080160	0		=			
ANR	8080241	PtrMemberAccess	h -> top_samples_available		8080160	0					
ANR	8080242	Identifier	h		8080160	0					
ANR	8080243	Identifier	top_samples_available		8080160	1					
ANR	8080244	ConditionalExpression	( s -> mb_y == 0 ) ? 0x33FF : 0xFFFF		8080160	1					
ANR	8080245	Condition	s -> mb_y == 0		8080160	0					
ANR	8080246	EqualityExpression	s -> mb_y == 0		8080160	0		==			
ANR	8080247	PtrMemberAccess	s -> mb_y		8080160	0					
ANR	8080248	Identifier	s		8080160	0					
ANR	8080249	Identifier	mb_y		8080160	1					
ANR	8080250	PrimaryExpression	0		8080160	1					
ANR	8080251	PrimaryExpression	0x33FF		8080160	1					
ANR	8080252	PrimaryExpression	0xFFFF		8080160	2					
ANR	8080253	ExpressionStatement	h -> left_samples_available = ( s -> mb_x == 0 ) ? 0x5F5F : 0xFFFF	23:4:383:447	8080160	11	True				
ANR	8080254	AssignmentExpression	h -> left_samples_available = ( s -> mb_x == 0 ) ? 0x5F5F : 0xFFFF		8080160	0		=			
ANR	8080255	PtrMemberAccess	h -> left_samples_available		8080160	0					
ANR	8080256	Identifier	h		8080160	0					
ANR	8080257	Identifier	left_samples_available		8080160	1					
ANR	8080258	ConditionalExpression	( s -> mb_x == 0 ) ? 0x5F5F : 0xFFFF		8080160	1					
ANR	8080259	Condition	s -> mb_x == 0		8080160	0					
ANR	8080260	EqualityExpression	s -> mb_x == 0		8080160	0		==			
ANR	8080261	PtrMemberAccess	s -> mb_x		8080160	0					
ANR	8080262	Identifier	s		8080160	0					
ANR	8080263	Identifier	mb_x		8080160	1					
ANR	8080264	PrimaryExpression	0		8080160	1					
ANR	8080265	PrimaryExpression	0x5F5F		8080160	1					
ANR	8080266	PrimaryExpression	0xFFFF		8080160	2					
ANR	8080267	ExpressionStatement	h -> topright_samples_available = 0xFFFF	25:4:454:492	8080160	12	True				
ANR	8080268	AssignmentExpression	h -> topright_samples_available = 0xFFFF		8080160	0		=			
ANR	8080269	PtrMemberAccess	h -> topright_samples_available		8080160	0					
ANR	8080270	Identifier	h		8080160	0					
ANR	8080271	Identifier	topright_samples_available		8080160	1					
ANR	8080272	PrimaryExpression	0xFFFF		8080160	1					
ANR	8080273	IfStatement	if ( mb_type == 0 )		8080160	13					
ANR	8080274	Condition	mb_type == 0	29:8:505:516	8080160	0	True				
ANR	8080275	EqualityExpression	mb_type == 0		8080160	0		==			
ANR	8080276	Identifier	mb_type		8080160	0					
ANR	8080277	PrimaryExpression	0		8080160	1					
ANR	8080278	CompoundStatement		27:22:453:453	8080160	1					
ANR	8080279	IfStatement	if ( s -> pict_type == FF_P_TYPE || s -> next_picture . mb_type [ mb_xy ] == - 1 )		8080160	0					
ANR	8080280	Condition	s -> pict_type == FF_P_TYPE || s -> next_picture . mb_type [ mb_xy ] == - 1	31:12:555:619	8080160	0	True				
ANR	8080281	OrExpression	s -> pict_type == FF_P_TYPE || s -> next_picture . mb_type [ mb_xy ] == - 1		8080160	0		||			
ANR	8080282	EqualityExpression	s -> pict_type == FF_P_TYPE		8080160	0		==			
ANR	8080283	PtrMemberAccess	s -> pict_type		8080160	0					
ANR	8080284	Identifier	s		8080160	0					
ANR	8080285	Identifier	pict_type		8080160	1					
ANR	8080286	Identifier	FF_P_TYPE		8080160	1					
ANR	8080287	EqualityExpression	s -> next_picture . mb_type [ mb_xy ] == - 1		8080160	1		==			
ANR	8080288	ArrayIndexing	s -> next_picture . mb_type [ mb_xy ]		8080160	0					
ANR	8080289	MemberAccess	s -> next_picture . mb_type		8080160	0					
ANR	8080290	PtrMemberAccess	s -> next_picture		8080160	0					
ANR	8080291	Identifier	s		8080160	0					
ANR	8080292	Identifier	next_picture		8080160	1					
ANR	8080293	Identifier	mb_type		8080160	1					
ANR	8080294	Identifier	mb_xy		8080160	1					
ANR	8080295	UnaryOperationExpression	- 1		8080160	1					
ANR	8080296	UnaryOperator	-		8080160	0					
ANR	8080297	PrimaryExpression	1		8080160	1					
ANR	8080298	CompoundStatement		29:79:556:556	8080160	1					
ANR	8080299	ExpressionStatement	"svq3_mc_dir_part ( s , 16 * s -> mb_x , 16 * s -> mb_y , 16 , 16 , 0 , 0 , 0 , 0 , 0 , 0 )"	33:12:637:706	8080160	0	True				
ANR	8080300	CallExpression	"svq3_mc_dir_part ( s , 16 * s -> mb_x , 16 * s -> mb_y , 16 , 16 , 0 , 0 , 0 , 0 , 0 , 0 )"		8080160	0					
ANR	8080301	Callee	svq3_mc_dir_part		8080160	0					
ANR	8080302	Identifier	svq3_mc_dir_part		8080160	0					
ANR	8080303	ArgumentList	s		8080160	1					
ANR	8080304	Argument	s		8080160	0					
ANR	8080305	Identifier	s		8080160	0					
ANR	8080306	Argument	16 * s -> mb_x		8080160	1					
ANR	8080307	MultiplicativeExpression	16 * s -> mb_x		8080160	0		*			
ANR	8080308	PrimaryExpression	16		8080160	0					
ANR	8080309	PtrMemberAccess	s -> mb_x		8080160	1					
ANR	8080310	Identifier	s		8080160	0					
ANR	8080311	Identifier	mb_x		8080160	1					
ANR	8080312	Argument	16 * s -> mb_y		8080160	2					
ANR	8080313	MultiplicativeExpression	16 * s -> mb_y		8080160	0		*			
ANR	8080314	PrimaryExpression	16		8080160	0					
ANR	8080315	PtrMemberAccess	s -> mb_y		8080160	1					
ANR	8080316	Identifier	s		8080160	0					
ANR	8080317	Identifier	mb_y		8080160	1					
ANR	8080318	Argument	16		8080160	3					
ANR	8080319	PrimaryExpression	16		8080160	0					
ANR	8080320	Argument	16		8080160	4					
ANR	8080321	PrimaryExpression	16		8080160	0					
ANR	8080322	Argument	0		8080160	5					
ANR	8080323	PrimaryExpression	0		8080160	0					
ANR	8080324	Argument	0		8080160	6					
ANR	8080325	PrimaryExpression	0		8080160	0					
ANR	8080326	Argument	0		8080160	7					
ANR	8080327	PrimaryExpression	0		8080160	0					
ANR	8080328	Argument	0		8080160	8					
ANR	8080329	PrimaryExpression	0		8080160	0					
ANR	8080330	Argument	0		8080160	9					
ANR	8080331	PrimaryExpression	0		8080160	0					
ANR	8080332	Argument	0		8080160	10					
ANR	8080333	PrimaryExpression	0		8080160	0					
ANR	8080334	IfStatement	if ( s -> pict_type == FF_B_TYPE )		8080160	1					
ANR	8080335	Condition	s -> pict_type == FF_B_TYPE	37:16:727:751	8080160	0	True				
ANR	8080336	EqualityExpression	s -> pict_type == FF_B_TYPE		8080160	0		==			
ANR	8080337	PtrMemberAccess	s -> pict_type		8080160	0					
ANR	8080338	Identifier	s		8080160	0					
ANR	8080339	Identifier	pict_type		8080160	1					
ANR	8080340	Identifier	FF_B_TYPE		8080160	1					
ANR	8080341	CompoundStatement		35:43:688:688	8080160	1					
ANR	8080342	ExpressionStatement	"svq3_mc_dir_part ( s , 16 * s -> mb_x , 16 * s -> mb_y , 16 , 16 , 0 , 0 , 0 , 0 , 1 , 1 )"	39:16:773:842	8080160	0	True				
ANR	8080343	CallExpression	"svq3_mc_dir_part ( s , 16 * s -> mb_x , 16 * s -> mb_y , 16 , 16 , 0 , 0 , 0 , 0 , 1 , 1 )"		8080160	0					
ANR	8080344	Callee	svq3_mc_dir_part		8080160	0					
ANR	8080345	Identifier	svq3_mc_dir_part		8080160	0					
ANR	8080346	ArgumentList	s		8080160	1					
ANR	8080347	Argument	s		8080160	0					
ANR	8080348	Identifier	s		8080160	0					
ANR	8080349	Argument	16 * s -> mb_x		8080160	1					
ANR	8080350	MultiplicativeExpression	16 * s -> mb_x		8080160	0		*			
ANR	8080351	PrimaryExpression	16		8080160	0					
ANR	8080352	PtrMemberAccess	s -> mb_x		8080160	1					
ANR	8080353	Identifier	s		8080160	0					
ANR	8080354	Identifier	mb_x		8080160	1					
ANR	8080355	Argument	16 * s -> mb_y		8080160	2					
ANR	8080356	MultiplicativeExpression	16 * s -> mb_y		8080160	0		*			
ANR	8080357	PrimaryExpression	16		8080160	0					
ANR	8080358	PtrMemberAccess	s -> mb_y		8080160	1					
ANR	8080359	Identifier	s		8080160	0					
ANR	8080360	Identifier	mb_y		8080160	1					
ANR	8080361	Argument	16		8080160	3					
ANR	8080362	PrimaryExpression	16		8080160	0					
ANR	8080363	Argument	16		8080160	4					
ANR	8080364	PrimaryExpression	16		8080160	0					
ANR	8080365	Argument	0		8080160	5					
ANR	8080366	PrimaryExpression	0		8080160	0					
ANR	8080367	Argument	0		8080160	6					
ANR	8080368	PrimaryExpression	0		8080160	0					
ANR	8080369	Argument	0		8080160	7					
ANR	8080370	PrimaryExpression	0		8080160	0					
ANR	8080371	Argument	0		8080160	8					
ANR	8080372	PrimaryExpression	0		8080160	0					
ANR	8080373	Argument	1		8080160	9					
ANR	8080374	PrimaryExpression	1		8080160	0					
ANR	8080375	Argument	1		8080160	10					
ANR	8080376	PrimaryExpression	1		8080160	0					
ANR	8080377	ExpressionStatement	mb_type = MB_TYPE_SKIP	45:12:874:896	8080160	2	True				
ANR	8080378	AssignmentExpression	mb_type = MB_TYPE_SKIP		8080160	0		=			
ANR	8080379	Identifier	mb_type		8080160	0					
ANR	8080380	Identifier	MB_TYPE_SKIP		8080160	1					
ANR	8080381	ElseStatement	else		8080160	0					
ANR	8080382	CompoundStatement		45:15:848:848	8080160	0					
ANR	8080383	ExpressionStatement	"mb_type = FFMIN ( s -> next_picture . mb_type [ mb_xy ] , 6 )"	49:12:929:979	8080160	0	True				
ANR	8080384	AssignmentExpression	"mb_type = FFMIN ( s -> next_picture . mb_type [ mb_xy ] , 6 )"		8080160	0		=			
ANR	8080385	Identifier	mb_type		8080160	0					
ANR	8080386	CallExpression	"FFMIN ( s -> next_picture . mb_type [ mb_xy ] , 6 )"		8080160	1					
ANR	8080387	Callee	FFMIN		8080160	0					
ANR	8080388	Identifier	FFMIN		8080160	0					
ANR	8080389	ArgumentList	s -> next_picture . mb_type [ mb_xy ]		8080160	1					
ANR	8080390	Argument	s -> next_picture . mb_type [ mb_xy ]		8080160	0					
ANR	8080391	ArrayIndexing	s -> next_picture . mb_type [ mb_xy ]		8080160	0					
ANR	8080392	MemberAccess	s -> next_picture . mb_type		8080160	0					
ANR	8080393	PtrMemberAccess	s -> next_picture		8080160	0					
ANR	8080394	Identifier	s		8080160	0					
ANR	8080395	Identifier	next_picture		8080160	1					
ANR	8080396	Identifier	mb_type		8080160	1					
ANR	8080397	Identifier	mb_xy		8080160	1					
ANR	8080398	Argument	6		8080160	1					
ANR	8080399	PrimaryExpression	6		8080160	0					
ANR	8080400	IfStatement	"if ( svq3_mc_dir ( h , mb_type , PREDICT_MODE , 0 , 0 ) < 0 )"		8080160	1					
ANR	8080401	Condition	"svq3_mc_dir ( h , mb_type , PREDICT_MODE , 0 , 0 ) < 0"	51:16:998:1044	8080160	0	True				
ANR	8080402	RelationalExpression	"svq3_mc_dir ( h , mb_type , PREDICT_MODE , 0 , 0 ) < 0"		8080160	0		<			
ANR	8080403	CallExpression	"svq3_mc_dir ( h , mb_type , PREDICT_MODE , 0 , 0 )"		8080160	0					
ANR	8080404	Callee	svq3_mc_dir		8080160	0					
ANR	8080405	Identifier	svq3_mc_dir		8080160	0					
ANR	8080406	ArgumentList	h		8080160	1					
ANR	8080407	Argument	h		8080160	0					
ANR	8080408	Identifier	h		8080160	0					
ANR	8080409	Argument	mb_type		8080160	1					
ANR	8080410	Identifier	mb_type		8080160	0					
ANR	8080411	Argument	PREDICT_MODE		8080160	2					
ANR	8080412	Identifier	PREDICT_MODE		8080160	0					
ANR	8080413	Argument	0		8080160	3					
ANR	8080414	PrimaryExpression	0		8080160	0					
ANR	8080415	Argument	0		8080160	4					
ANR	8080416	PrimaryExpression	0		8080160	0					
ANR	8080417	PrimaryExpression	0		8080160	1					
ANR	8080418	ReturnStatement	return - 1 ;	53:16:1064:1073	8080160	1	True				
ANR	8080419	UnaryOperationExpression	- 1		8080160	0					
ANR	8080420	UnaryOperator	-		8080160	0					
ANR	8080421	PrimaryExpression	1		8080160	1					
ANR	8080422	IfStatement	"if ( svq3_mc_dir ( h , mb_type , PREDICT_MODE , 1 , 1 ) < 0 )"		8080160	2					
ANR	8080423	Condition	"svq3_mc_dir ( h , mb_type , PREDICT_MODE , 1 , 1 ) < 0"	55:16:1092:1138	8080160	0	True				
ANR	8080424	RelationalExpression	"svq3_mc_dir ( h , mb_type , PREDICT_MODE , 1 , 1 ) < 0"		8080160	0		<			
ANR	8080425	CallExpression	"svq3_mc_dir ( h , mb_type , PREDICT_MODE , 1 , 1 )"		8080160	0					
ANR	8080426	Callee	svq3_mc_dir		8080160	0					
ANR	8080427	Identifier	svq3_mc_dir		8080160	0					
ANR	8080428	ArgumentList	h		8080160	1					
ANR	8080429	Argument	h		8080160	0					
ANR	8080430	Identifier	h		8080160	0					
ANR	8080431	Argument	mb_type		8080160	1					
ANR	8080432	Identifier	mb_type		8080160	0					
ANR	8080433	Argument	PREDICT_MODE		8080160	2					
ANR	8080434	Identifier	PREDICT_MODE		8080160	0					
ANR	8080435	Argument	1		8080160	3					
ANR	8080436	PrimaryExpression	1		8080160	0					
ANR	8080437	Argument	1		8080160	4					
ANR	8080438	PrimaryExpression	1		8080160	0					
ANR	8080439	PrimaryExpression	0		8080160	1					
ANR	8080440	ReturnStatement	return - 1 ;	57:16:1158:1167	8080160	1	True				
ANR	8080441	UnaryOperationExpression	- 1		8080160	0					
ANR	8080442	UnaryOperator	-		8080160	0					
ANR	8080443	PrimaryExpression	1		8080160	1					
ANR	8080444	ExpressionStatement	mb_type = MB_TYPE_16x16	61:12:1184:1207	8080160	3	True				
ANR	8080445	AssignmentExpression	mb_type = MB_TYPE_16x16		8080160	0		=			
ANR	8080446	Identifier	mb_type		8080160	0					
ANR	8080447	Identifier	MB_TYPE_16x16		8080160	1					
ANR	8080448	ElseStatement	else		8080160	0					
ANR	8080449	IfStatement	if ( mb_type < 8 )		8080160	0					
ANR	8080450	Condition	mb_type < 8	65:15:1236:1246	8080160	0	True				
ANR	8080451	RelationalExpression	mb_type < 8		8080160	0		<			
ANR	8080452	Identifier	mb_type		8080160	0					
ANR	8080453	PrimaryExpression	8		8080160	1					
ANR	8080454	CompoundStatement		63:28:1183:1183	8080160	1					
ANR	8080455	IfStatement	if ( h -> thirdpel_flag && h -> halfpel_flag == ! get_bits1 ( & s -> gb ) )		8080160	0					
ANR	8080456	Condition	h -> thirdpel_flag && h -> halfpel_flag == ! get_bits1 ( & s -> gb )	67:12:1280:1337	8080160	0	True				
ANR	8080457	AndExpression	h -> thirdpel_flag && h -> halfpel_flag == ! get_bits1 ( & s -> gb )		8080160	0		&&			
ANR	8080458	PtrMemberAccess	h -> thirdpel_flag		8080160	0					
ANR	8080459	Identifier	h		8080160	0					
ANR	8080460	Identifier	thirdpel_flag		8080160	1					
ANR	8080461	EqualityExpression	h -> halfpel_flag == ! get_bits1 ( & s -> gb )		8080160	1		==			
ANR	8080462	PtrMemberAccess	h -> halfpel_flag		8080160	0					
ANR	8080463	Identifier	h		8080160	0					
ANR	8080464	Identifier	halfpel_flag		8080160	1					
ANR	8080465	UnaryOperationExpression	! get_bits1 ( & s -> gb )		8080160	1					
ANR	8080466	UnaryOperator	!		8080160	0					
ANR	8080467	CallExpression	get_bits1 ( & s -> gb )		8080160	1					
ANR	8080468	Callee	get_bits1		8080160	0					
ANR	8080469	Identifier	get_bits1		8080160	0					
ANR	8080470	ArgumentList	& s -> gb		8080160	1					
ANR	8080471	Argument	& s -> gb		8080160	0					
ANR	8080472	UnaryOperationExpression	& s -> gb		8080160	0					
ANR	8080473	UnaryOperator	&		8080160	0					
ANR	8080474	PtrMemberAccess	s -> gb		8080160	1					
ANR	8080475	Identifier	s		8080160	0					
ANR	8080476	Identifier	gb		8080160	1					
ANR	8080477	CompoundStatement		65:72:1274:1274	8080160	1					
ANR	8080478	ExpressionStatement	mode = THIRDPEL_MODE	69:12:1355:1375	8080160	0	True				
ANR	8080479	AssignmentExpression	mode = THIRDPEL_MODE		8080160	0		=			
ANR	8080480	Identifier	mode		8080160	0					
ANR	8080481	Identifier	THIRDPEL_MODE		8080160	1					
ANR	8080482	ElseStatement	else		8080160	0					
ANR	8080483	IfStatement	if ( h -> halfpel_flag && h -> thirdpel_flag == ! get_bits1 ( & s -> gb ) )		8080160	0					
ANR	8080484	Condition	h -> halfpel_flag && h -> thirdpel_flag == ! get_bits1 ( & s -> gb )	71:19:1397:1454	8080160	0	True				
ANR	8080485	AndExpression	h -> halfpel_flag && h -> thirdpel_flag == ! get_bits1 ( & s -> gb )		8080160	0		&&			
ANR	8080486	PtrMemberAccess	h -> halfpel_flag		8080160	0					
ANR	8080487	Identifier	h		8080160	0					
ANR	8080488	Identifier	halfpel_flag		8080160	1					
ANR	8080489	EqualityExpression	h -> thirdpel_flag == ! get_bits1 ( & s -> gb )		8080160	1		==			
ANR	8080490	PtrMemberAccess	h -> thirdpel_flag		8080160	0					
ANR	8080491	Identifier	h		8080160	0					
ANR	8080492	Identifier	thirdpel_flag		8080160	1					
ANR	8080493	UnaryOperationExpression	! get_bits1 ( & s -> gb )		8080160	1					
ANR	8080494	UnaryOperator	!		8080160	0					
ANR	8080495	CallExpression	get_bits1 ( & s -> gb )		8080160	1					
ANR	8080496	Callee	get_bits1		8080160	0					
ANR	8080497	Identifier	get_bits1		8080160	0					
ANR	8080498	ArgumentList	& s -> gb		8080160	1					
ANR	8080499	Argument	& s -> gb		8080160	0					
ANR	8080500	UnaryOperationExpression	& s -> gb		8080160	0					
ANR	8080501	UnaryOperator	&		8080160	0					
ANR	8080502	PtrMemberAccess	s -> gb		8080160	1					
ANR	8080503	Identifier	s		8080160	0					
ANR	8080504	Identifier	gb		8080160	1					
ANR	8080505	CompoundStatement		69:79:1391:1391	8080160	1					
ANR	8080506	ExpressionStatement	mode = HALFPEL_MODE	73:12:1472:1491	8080160	0	True				
ANR	8080507	AssignmentExpression	mode = HALFPEL_MODE		8080160	0		=			
ANR	8080508	Identifier	mode		8080160	0					
ANR	8080509	Identifier	HALFPEL_MODE		8080160	1					
ANR	8080510	ElseStatement	else		8080160	0					
ANR	8080511	CompoundStatement		73:15:1443:1443	8080160	0					
ANR	8080512	ExpressionStatement	mode = FULLPEL_MODE	77:12:1524:1543	8080160	0	True				
ANR	8080513	AssignmentExpression	mode = FULLPEL_MODE		8080160	0		=			
ANR	8080514	Identifier	mode		8080160	0					
ANR	8080515	Identifier	FULLPEL_MODE		8080160	1					
ANR	8080516	ForStatement	for ( m = 0 ; m < 2 ; m ++ )		8080160	1					
ANR	8080517	ForInit	m = 0 ;	101:13:1771:1776	8080160	0	True				
ANR	8080518	AssignmentExpression	m = 0		8080160	0		=			
ANR	8080519	Identifier	m		8080160	0					
ANR	8080520	PrimaryExpression	0		8080160	1					
ANR	8080521	Condition	m < 2	101:20:1778:1782	8080160	1	True				
ANR	8080522	RelationalExpression	m < 2		8080160	0		<			
ANR	8080523	Identifier	m		8080160	0					
ANR	8080524	PrimaryExpression	2		8080160	1					
ANR	8080525	PostIncDecOperationExpression	m ++	101:27:1785:1787	8080160	2	True				
ANR	8080526	Identifier	m		8080160	0					
ANR	8080527	IncDec	++		8080160	1					
ANR	8080528	CompoundStatement		99:32:1724:1724	8080160	3					
ANR	8080529	IfStatement	if ( s -> mb_x > 0 && h -> intra4x4_pred_mode [ mb_xy - 1 ] [ 0 ] != - 1 )		8080160	0					
ANR	8080530	Condition	s -> mb_x > 0 && h -> intra4x4_pred_mode [ mb_xy - 1 ] [ 0 ] != - 1	103:16:1809:1864	8080160	0	True				
ANR	8080531	AndExpression	s -> mb_x > 0 && h -> intra4x4_pred_mode [ mb_xy - 1 ] [ 0 ] != - 1		8080160	0		&&			
ANR	8080532	RelationalExpression	s -> mb_x > 0		8080160	0		>			
ANR	8080533	PtrMemberAccess	s -> mb_x		8080160	0					
ANR	8080534	Identifier	s		8080160	0					
ANR	8080535	Identifier	mb_x		8080160	1					
ANR	8080536	PrimaryExpression	0		8080160	1					
ANR	8080537	EqualityExpression	h -> intra4x4_pred_mode [ mb_xy - 1 ] [ 0 ] != - 1		8080160	1		!=			
ANR	8080538	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - 1 ] [ 0 ]		8080160	0					
ANR	8080539	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - 1 ]		8080160	0					
ANR	8080540	PtrMemberAccess	h -> intra4x4_pred_mode		8080160	0					
ANR	8080541	Identifier	h		8080160	0					
ANR	8080542	Identifier	intra4x4_pred_mode		8080160	1					
ANR	8080543	AdditiveExpression	mb_xy - 1		8080160	1		-			
ANR	8080544	Identifier	mb_xy		8080160	0					
ANR	8080545	PrimaryExpression	1		8080160	1					
ANR	8080546	PrimaryExpression	0		8080160	1					
ANR	8080547	UnaryOperationExpression	- 1		8080160	1					
ANR	8080548	UnaryOperator	-		8080160	0					
ANR	8080549	PrimaryExpression	1		8080160	1					
ANR	8080550	CompoundStatement		101:74:1801:1801	8080160	1					
ANR	8080551	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8080160	0					
ANR	8080552	ForInit	i = 0 ;	105:21:1891:1896	8080160	0	True				
ANR	8080553	AssignmentExpression	i = 0		8080160	0		=			
ANR	8080554	Identifier	i		8080160	0					
ANR	8080555	PrimaryExpression	0		8080160	1					
ANR	8080556	Condition	i < 4	105:28:1898:1902	8080160	1	True				
ANR	8080557	RelationalExpression	i < 4		8080160	0		<			
ANR	8080558	Identifier	i		8080160	0					
ANR	8080559	PrimaryExpression	4		8080160	1					
ANR	8080560	PostIncDecOperationExpression	i ++	105:35:1905:1907	8080160	2	True				
ANR	8080561	Identifier	i		8080160	0					
ANR	8080562	IncDec	++		8080160	1					
ANR	8080563	CompoundStatement		103:40:1844:1844	8080160	3					
ANR	8080564	ExpressionStatement	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 + i * 8 ] = * ( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - 1 + i * h -> b_stride ]	107:20:1933:2056	8080160	0	True				
ANR	8080565	AssignmentExpression	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 + i * 8 ] = * ( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - 1 + i * h -> b_stride ]		8080160	0		=			
ANR	8080566	UnaryOperationExpression	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 + i * 8 ]		8080160	0					
ANR	8080567	UnaryOperator	*		8080160	0					
ANR	8080568	CastExpression	( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 + i * 8 ]		8080160	1					
ANR	8080569	CastTarget	uint32_t *		8080160	0					
ANR	8080570	ArrayIndexing	h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 + i * 8 ]		8080160	1					
ANR	8080571	ArrayIndexing	h -> mv_cache [ m ]		8080160	0					
ANR	8080572	PtrMemberAccess	h -> mv_cache		8080160	0					
ANR	8080573	Identifier	h		8080160	0					
ANR	8080574	Identifier	mv_cache		8080160	1					
ANR	8080575	Identifier	m		8080160	1					
ANR	8080576	AdditiveExpression	scan8 [ 0 ] - 1 + i * 8		8080160	1		-			
ANR	8080577	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8080578	Identifier	scan8		8080160	0					
ANR	8080579	PrimaryExpression	0		8080160	1					
ANR	8080580	AdditiveExpression	1 + i * 8		8080160	1		+			
ANR	8080581	PrimaryExpression	1		8080160	0					
ANR	8080582	MultiplicativeExpression	i * 8		8080160	1		*			
ANR	8080583	Identifier	i		8080160	0					
ANR	8080584	PrimaryExpression	8		8080160	1					
ANR	8080585	UnaryOperationExpression	* ( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - 1 + i * h -> b_stride ]		8080160	1					
ANR	8080586	UnaryOperator	*		8080160	0					
ANR	8080587	CastExpression	( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - 1 + i * h -> b_stride ]		8080160	1					
ANR	8080588	CastTarget	uint32_t *		8080160	0					
ANR	8080589	ArrayIndexing	s -> current_picture . motion_val [ m ] [ b_xy - 1 + i * h -> b_stride ]		8080160	1					
ANR	8080590	ArrayIndexing	s -> current_picture . motion_val [ m ]		8080160	0					
ANR	8080591	MemberAccess	s -> current_picture . motion_val		8080160	0					
ANR	8080592	PtrMemberAccess	s -> current_picture		8080160	0					
ANR	8080593	Identifier	s		8080160	0					
ANR	8080594	Identifier	current_picture		8080160	1					
ANR	8080595	Identifier	motion_val		8080160	1					
ANR	8080596	Identifier	m		8080160	1					
ANR	8080597	AdditiveExpression	b_xy - 1 + i * h -> b_stride		8080160	1		-			
ANR	8080598	Identifier	b_xy		8080160	0					
ANR	8080599	AdditiveExpression	1 + i * h -> b_stride		8080160	1		+			
ANR	8080600	PrimaryExpression	1		8080160	0					
ANR	8080601	MultiplicativeExpression	i * h -> b_stride		8080160	1		*			
ANR	8080602	Identifier	i		8080160	0					
ANR	8080603	PtrMemberAccess	h -> b_stride		8080160	1					
ANR	8080604	Identifier	h		8080160	0					
ANR	8080605	Identifier	b_stride		8080160	1					
ANR	8080606	ElseStatement	else		8080160	0					
ANR	8080607	CompoundStatement		109:19:2031:2031	8080160	0					
ANR	8080608	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8080160	0					
ANR	8080609	ForInit	i = 0 ;	113:21:2121:2126	8080160	0	True				
ANR	8080610	AssignmentExpression	i = 0		8080160	0		=			
ANR	8080611	Identifier	i		8080160	0					
ANR	8080612	PrimaryExpression	0		8080160	1					
ANR	8080613	Condition	i < 4	113:28:2128:2132	8080160	1	True				
ANR	8080614	RelationalExpression	i < 4		8080160	0		<			
ANR	8080615	Identifier	i		8080160	0					
ANR	8080616	PrimaryExpression	4		8080160	1					
ANR	8080617	PostIncDecOperationExpression	i ++	113:35:2135:2137	8080160	2	True				
ANR	8080618	Identifier	i		8080160	0					
ANR	8080619	IncDec	++		8080160	1					
ANR	8080620	CompoundStatement		111:40:2074:2074	8080160	3					
ANR	8080621	ExpressionStatement	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 + i * 8 ] = 0	115:20:2163:2215	8080160	0	True				
ANR	8080622	AssignmentExpression	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 + i * 8 ] = 0		8080160	0		=			
ANR	8080623	UnaryOperationExpression	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 + i * 8 ]		8080160	0					
ANR	8080624	UnaryOperator	*		8080160	0					
ANR	8080625	CastExpression	( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 + i * 8 ]		8080160	1					
ANR	8080626	CastTarget	uint32_t *		8080160	0					
ANR	8080627	ArrayIndexing	h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 + i * 8 ]		8080160	1					
ANR	8080628	ArrayIndexing	h -> mv_cache [ m ]		8080160	0					
ANR	8080629	PtrMemberAccess	h -> mv_cache		8080160	0					
ANR	8080630	Identifier	h		8080160	0					
ANR	8080631	Identifier	mv_cache		8080160	1					
ANR	8080632	Identifier	m		8080160	1					
ANR	8080633	AdditiveExpression	scan8 [ 0 ] - 1 + i * 8		8080160	1		-			
ANR	8080634	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8080635	Identifier	scan8		8080160	0					
ANR	8080636	PrimaryExpression	0		8080160	1					
ANR	8080637	AdditiveExpression	1 + i * 8		8080160	1		+			
ANR	8080638	PrimaryExpression	1		8080160	0					
ANR	8080639	MultiplicativeExpression	i * 8		8080160	1		*			
ANR	8080640	Identifier	i		8080160	0					
ANR	8080641	PrimaryExpression	8		8080160	1					
ANR	8080642	PrimaryExpression	0		8080160	1					
ANR	8080643	IfStatement	if ( s -> mb_y > 0 )		8080160	1					
ANR	8080644	Condition	s -> mb_y > 0	121:16:2268:2278	8080160	0	True				
ANR	8080645	RelationalExpression	s -> mb_y > 0		8080160	0		>			
ANR	8080646	PtrMemberAccess	s -> mb_y		8080160	0					
ANR	8080647	Identifier	s		8080160	0					
ANR	8080648	Identifier	mb_y		8080160	1					
ANR	8080649	PrimaryExpression	0		8080160	1					
ANR	8080650	CompoundStatement		119:29:2215:2215	8080160	1					
ANR	8080651	ExpressionStatement	"memcpy ( h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 * 8 ] , s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride ] , 4 * 2 * sizeof ( int16_t ) )"	123:16:2300:2413	8080160	0	True				
ANR	8080652	CallExpression	"memcpy ( h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 * 8 ] , s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride ] , 4 * 2 * sizeof ( int16_t ) )"		8080160	0					
ANR	8080653	Callee	memcpy		8080160	0					
ANR	8080654	Identifier	memcpy		8080160	0					
ANR	8080655	ArgumentList	h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 * 8 ]		8080160	1					
ANR	8080656	Argument	h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 * 8 ]		8080160	0					
ANR	8080657	ArrayIndexing	h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 * 8 ]		8080160	0					
ANR	8080658	ArrayIndexing	h -> mv_cache [ m ]		8080160	0					
ANR	8080659	PtrMemberAccess	h -> mv_cache		8080160	0					
ANR	8080660	Identifier	h		8080160	0					
ANR	8080661	Identifier	mv_cache		8080160	1					
ANR	8080662	Identifier	m		8080160	1					
ANR	8080663	AdditiveExpression	scan8 [ 0 ] - 1 * 8		8080160	1		-			
ANR	8080664	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8080665	Identifier	scan8		8080160	0					
ANR	8080666	PrimaryExpression	0		8080160	1					
ANR	8080667	MultiplicativeExpression	1 * 8		8080160	1		*			
ANR	8080668	PrimaryExpression	1		8080160	0					
ANR	8080669	PrimaryExpression	8		8080160	1					
ANR	8080670	Argument	s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride ]		8080160	1					
ANR	8080671	ArrayIndexing	s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride ]		8080160	0					
ANR	8080672	ArrayIndexing	s -> current_picture . motion_val [ m ]		8080160	0					
ANR	8080673	MemberAccess	s -> current_picture . motion_val		8080160	0					
ANR	8080674	PtrMemberAccess	s -> current_picture		8080160	0					
ANR	8080675	Identifier	s		8080160	0					
ANR	8080676	Identifier	current_picture		8080160	1					
ANR	8080677	Identifier	motion_val		8080160	1					
ANR	8080678	Identifier	m		8080160	1					
ANR	8080679	AdditiveExpression	b_xy - h -> b_stride		8080160	1		-			
ANR	8080680	Identifier	b_xy		8080160	0					
ANR	8080681	PtrMemberAccess	h -> b_stride		8080160	1					
ANR	8080682	Identifier	h		8080160	0					
ANR	8080683	Identifier	b_stride		8080160	1					
ANR	8080684	Argument	4 * 2 * sizeof ( int16_t )		8080160	2					
ANR	8080685	MultiplicativeExpression	4 * 2 * sizeof ( int16_t )		8080160	0		*			
ANR	8080686	PrimaryExpression	4		8080160	0					
ANR	8080687	MultiplicativeExpression	2 * sizeof ( int16_t )		8080160	1		*			
ANR	8080688	PrimaryExpression	2		8080160	0					
ANR	8080689	SizeofExpression	sizeof ( int16_t )		8080160	1					
ANR	8080690	Sizeof	sizeof		8080160	0					
ANR	8080691	SizeofOperand	int16_t		8080160	1					
ANR	8080692	ExpressionStatement	"memset ( & h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 * 8 ] , ( h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ] == - 1 ) ? PART_NOT_AVAILABLE : 1 , 4 )"	125:16:2432:2556	8080160	1	True				
ANR	8080693	CallExpression	"memset ( & h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 * 8 ] , ( h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ] == - 1 ) ? PART_NOT_AVAILABLE : 1 , 4 )"		8080160	0					
ANR	8080694	Callee	memset		8080160	0					
ANR	8080695	Identifier	memset		8080160	0					
ANR	8080696	ArgumentList	& h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 * 8 ]		8080160	1					
ANR	8080697	Argument	& h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 * 8 ]		8080160	0					
ANR	8080698	UnaryOperationExpression	& h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 * 8 ]		8080160	0					
ANR	8080699	UnaryOperator	&		8080160	0					
ANR	8080700	ArrayIndexing	h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 * 8 ]		8080160	1					
ANR	8080701	ArrayIndexing	h -> ref_cache [ m ]		8080160	0					
ANR	8080702	PtrMemberAccess	h -> ref_cache		8080160	0					
ANR	8080703	Identifier	h		8080160	0					
ANR	8080704	Identifier	ref_cache		8080160	1					
ANR	8080705	Identifier	m		8080160	1					
ANR	8080706	AdditiveExpression	scan8 [ 0 ] - 1 * 8		8080160	1		-			
ANR	8080707	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8080708	Identifier	scan8		8080160	0					
ANR	8080709	PrimaryExpression	0		8080160	1					
ANR	8080710	MultiplicativeExpression	1 * 8		8080160	1		*			
ANR	8080711	PrimaryExpression	1		8080160	0					
ANR	8080712	PrimaryExpression	8		8080160	1					
ANR	8080713	Argument	( h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ] == - 1 ) ? PART_NOT_AVAILABLE : 1		8080160	1					
ANR	8080714	ConditionalExpression	( h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ] == - 1 ) ? PART_NOT_AVAILABLE : 1		8080160	0					
ANR	8080715	Condition	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ] == - 1		8080160	0					
ANR	8080716	EqualityExpression	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ] == - 1		8080160	0		==			
ANR	8080717	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ]		8080160	0					
ANR	8080718	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ]		8080160	0					
ANR	8080719	PtrMemberAccess	h -> intra4x4_pred_mode		8080160	0					
ANR	8080720	Identifier	h		8080160	0					
ANR	8080721	Identifier	intra4x4_pred_mode		8080160	1					
ANR	8080722	AdditiveExpression	mb_xy - s -> mb_stride		8080160	1		-			
ANR	8080723	Identifier	mb_xy		8080160	0					
ANR	8080724	PtrMemberAccess	s -> mb_stride		8080160	1					
ANR	8080725	Identifier	s		8080160	0					
ANR	8080726	Identifier	mb_stride		8080160	1					
ANR	8080727	PrimaryExpression	4		8080160	1					
ANR	8080728	UnaryOperationExpression	- 1		8080160	1					
ANR	8080729	UnaryOperator	-		8080160	0					
ANR	8080730	PrimaryExpression	1		8080160	1					
ANR	8080731	Identifier	PART_NOT_AVAILABLE		8080160	1					
ANR	8080732	PrimaryExpression	1		8080160	2					
ANR	8080733	Argument	4		8080160	2					
ANR	8080734	PrimaryExpression	4		8080160	0					
ANR	8080735	IfStatement	if ( s -> mb_x < ( s -> mb_width - 1 ) )		8080160	2					
ANR	8080736	Condition	s -> mb_x < ( s -> mb_width - 1 )	129:20:2581:2607	8080160	0	True				
ANR	8080737	RelationalExpression	s -> mb_x < ( s -> mb_width - 1 )		8080160	0		<			
ANR	8080738	PtrMemberAccess	s -> mb_x		8080160	0					
ANR	8080739	Identifier	s		8080160	0					
ANR	8080740	Identifier	mb_x		8080160	1					
ANR	8080741	AdditiveExpression	s -> mb_width - 1		8080160	1		-			
ANR	8080742	PtrMemberAccess	s -> mb_width		8080160	0					
ANR	8080743	Identifier	s		8080160	0					
ANR	8080744	Identifier	mb_width		8080160	1					
ANR	8080745	PrimaryExpression	1		8080160	1					
ANR	8080746	CompoundStatement		127:49:2544:2544	8080160	1					
ANR	8080747	ExpressionStatement	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] + 4 - 1 * 8 ] = * ( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride + 4 ]	131:20:2633:2754	8080160	0	True				
ANR	8080748	AssignmentExpression	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] + 4 - 1 * 8 ] = * ( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride + 4 ]		8080160	0		=			
ANR	8080749	UnaryOperationExpression	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] + 4 - 1 * 8 ]		8080160	0					
ANR	8080750	UnaryOperator	*		8080160	0					
ANR	8080751	CastExpression	( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] + 4 - 1 * 8 ]		8080160	1					
ANR	8080752	CastTarget	uint32_t *		8080160	0					
ANR	8080753	ArrayIndexing	h -> mv_cache [ m ] [ scan8 [ 0 ] + 4 - 1 * 8 ]		8080160	1					
ANR	8080754	ArrayIndexing	h -> mv_cache [ m ]		8080160	0					
ANR	8080755	PtrMemberAccess	h -> mv_cache		8080160	0					
ANR	8080756	Identifier	h		8080160	0					
ANR	8080757	Identifier	mv_cache		8080160	1					
ANR	8080758	Identifier	m		8080160	1					
ANR	8080759	AdditiveExpression	scan8 [ 0 ] + 4 - 1 * 8		8080160	1		+			
ANR	8080760	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8080761	Identifier	scan8		8080160	0					
ANR	8080762	PrimaryExpression	0		8080160	1					
ANR	8080763	AdditiveExpression	4 - 1 * 8		8080160	1		-			
ANR	8080764	PrimaryExpression	4		8080160	0					
ANR	8080765	MultiplicativeExpression	1 * 8		8080160	1		*			
ANR	8080766	PrimaryExpression	1		8080160	0					
ANR	8080767	PrimaryExpression	8		8080160	1					
ANR	8080768	UnaryOperationExpression	* ( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride + 4 ]		8080160	1					
ANR	8080769	UnaryOperator	*		8080160	0					
ANR	8080770	CastExpression	( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride + 4 ]		8080160	1					
ANR	8080771	CastTarget	uint32_t *		8080160	0					
ANR	8080772	ArrayIndexing	s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride + 4 ]		8080160	1					
ANR	8080773	ArrayIndexing	s -> current_picture . motion_val [ m ]		8080160	0					
ANR	8080774	MemberAccess	s -> current_picture . motion_val		8080160	0					
ANR	8080775	PtrMemberAccess	s -> current_picture		8080160	0					
ANR	8080776	Identifier	s		8080160	0					
ANR	8080777	Identifier	current_picture		8080160	1					
ANR	8080778	Identifier	motion_val		8080160	1					
ANR	8080779	Identifier	m		8080160	1					
ANR	8080780	AdditiveExpression	b_xy - h -> b_stride + 4		8080160	1		-			
ANR	8080781	Identifier	b_xy		8080160	0					
ANR	8080782	AdditiveExpression	h -> b_stride + 4		8080160	1		+			
ANR	8080783	PtrMemberAccess	h -> b_stride		8080160	0					
ANR	8080784	Identifier	h		8080160	0					
ANR	8080785	Identifier	b_stride		8080160	1					
ANR	8080786	PrimaryExpression	4		8080160	1					
ANR	8080787	ExpressionStatement	h -> ref_cache [ m ] [ scan8 [ 0 ] + 4 - 1 * 8 ] = ( h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride + 1 ] [ 0 ] == - 1 || h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ] == - 1 ) ? PART_NOT_AVAILABLE : 1	133:20:2777:3009	8080160	1	True				
ANR	8080788	AssignmentExpression	h -> ref_cache [ m ] [ scan8 [ 0 ] + 4 - 1 * 8 ] = ( h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride + 1 ] [ 0 ] == - 1 || h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ] == - 1 ) ? PART_NOT_AVAILABLE : 1		8080160	0		=			
ANR	8080789	ArrayIndexing	h -> ref_cache [ m ] [ scan8 [ 0 ] + 4 - 1 * 8 ]		8080160	0					
ANR	8080790	ArrayIndexing	h -> ref_cache [ m ]		8080160	0					
ANR	8080791	PtrMemberAccess	h -> ref_cache		8080160	0					
ANR	8080792	Identifier	h		8080160	0					
ANR	8080793	Identifier	ref_cache		8080160	1					
ANR	8080794	Identifier	m		8080160	1					
ANR	8080795	AdditiveExpression	scan8 [ 0 ] + 4 - 1 * 8		8080160	1		+			
ANR	8080796	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8080797	Identifier	scan8		8080160	0					
ANR	8080798	PrimaryExpression	0		8080160	1					
ANR	8080799	AdditiveExpression	4 - 1 * 8		8080160	1		-			
ANR	8080800	PrimaryExpression	4		8080160	0					
ANR	8080801	MultiplicativeExpression	1 * 8		8080160	1		*			
ANR	8080802	PrimaryExpression	1		8080160	0					
ANR	8080803	PrimaryExpression	8		8080160	1					
ANR	8080804	ConditionalExpression	( h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride + 1 ] [ 0 ] == - 1 || h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ] == - 1 ) ? PART_NOT_AVAILABLE : 1		8080160	1					
ANR	8080805	Condition	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride + 1 ] [ 0 ] == - 1 || h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ] == - 1		8080160	0					
ANR	8080806	OrExpression	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride + 1 ] [ 0 ] == - 1 || h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ] == - 1		8080160	0		||			
ANR	8080807	EqualityExpression	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride + 1 ] [ 0 ] == - 1		8080160	0		==			
ANR	8080808	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride + 1 ] [ 0 ]		8080160	0					
ANR	8080809	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride + 1 ]		8080160	0					
ANR	8080810	PtrMemberAccess	h -> intra4x4_pred_mode		8080160	0					
ANR	8080811	Identifier	h		8080160	0					
ANR	8080812	Identifier	intra4x4_pred_mode		8080160	1					
ANR	8080813	AdditiveExpression	mb_xy - s -> mb_stride + 1		8080160	1		-			
ANR	8080814	Identifier	mb_xy		8080160	0					
ANR	8080815	AdditiveExpression	s -> mb_stride + 1		8080160	1		+			
ANR	8080816	PtrMemberAccess	s -> mb_stride		8080160	0					
ANR	8080817	Identifier	s		8080160	0					
ANR	8080818	Identifier	mb_stride		8080160	1					
ANR	8080819	PrimaryExpression	1		8080160	1					
ANR	8080820	PrimaryExpression	0		8080160	1					
ANR	8080821	UnaryOperationExpression	- 1		8080160	1					
ANR	8080822	UnaryOperator	-		8080160	0					
ANR	8080823	PrimaryExpression	1		8080160	1					
ANR	8080824	EqualityExpression	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ] == - 1		8080160	1		==			
ANR	8080825	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ]		8080160	0					
ANR	8080826	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ]		8080160	0					
ANR	8080827	PtrMemberAccess	h -> intra4x4_pred_mode		8080160	0					
ANR	8080828	Identifier	h		8080160	0					
ANR	8080829	Identifier	intra4x4_pred_mode		8080160	1					
ANR	8080830	AdditiveExpression	mb_xy - s -> mb_stride		8080160	1		-			
ANR	8080831	Identifier	mb_xy		8080160	0					
ANR	8080832	PtrMemberAccess	s -> mb_stride		8080160	1					
ANR	8080833	Identifier	s		8080160	0					
ANR	8080834	Identifier	mb_stride		8080160	1					
ANR	8080835	PrimaryExpression	4		8080160	1					
ANR	8080836	UnaryOperationExpression	- 1		8080160	1					
ANR	8080837	UnaryOperator	-		8080160	0					
ANR	8080838	PrimaryExpression	1		8080160	1					
ANR	8080839	Identifier	PART_NOT_AVAILABLE		8080160	1					
ANR	8080840	PrimaryExpression	1		8080160	2					
ANR	8080841	ElseStatement	else		8080160	0					
ANR	8080842	ExpressionStatement	h -> ref_cache [ m ] [ scan8 [ 0 ] + 4 - 1 * 8 ] = PART_NOT_AVAILABLE	141:20:3055:3111	8080160	0	True				
ANR	8080843	AssignmentExpression	h -> ref_cache [ m ] [ scan8 [ 0 ] + 4 - 1 * 8 ] = PART_NOT_AVAILABLE		8080160	0		=			
ANR	8080844	ArrayIndexing	h -> ref_cache [ m ] [ scan8 [ 0 ] + 4 - 1 * 8 ]		8080160	0					
ANR	8080845	ArrayIndexing	h -> ref_cache [ m ]		8080160	0					
ANR	8080846	PtrMemberAccess	h -> ref_cache		8080160	0					
ANR	8080847	Identifier	h		8080160	0					
ANR	8080848	Identifier	ref_cache		8080160	1					
ANR	8080849	Identifier	m		8080160	1					
ANR	8080850	AdditiveExpression	scan8 [ 0 ] + 4 - 1 * 8		8080160	1		+			
ANR	8080851	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8080852	Identifier	scan8		8080160	0					
ANR	8080853	PrimaryExpression	0		8080160	1					
ANR	8080854	AdditiveExpression	4 - 1 * 8		8080160	1		-			
ANR	8080855	PrimaryExpression	4		8080160	0					
ANR	8080856	MultiplicativeExpression	1 * 8		8080160	1		*			
ANR	8080857	PrimaryExpression	1		8080160	0					
ANR	8080858	PrimaryExpression	8		8080160	1					
ANR	8080859	Identifier	PART_NOT_AVAILABLE		8080160	1					
ANR	8080860	IfStatement	if ( s -> mb_x > 0 )		8080160	3					
ANR	8080861	Condition	s -> mb_x > 0	143:20:3134:3144	8080160	0	True				
ANR	8080862	RelationalExpression	s -> mb_x > 0		8080160	0		>			
ANR	8080863	PtrMemberAccess	s -> mb_x		8080160	0					
ANR	8080864	Identifier	s		8080160	0					
ANR	8080865	Identifier	mb_x		8080160	1					
ANR	8080866	PrimaryExpression	0		8080160	1					
ANR	8080867	CompoundStatement		141:33:3081:3081	8080160	1					
ANR	8080868	ExpressionStatement	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 - 1 * 8 ] = * ( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride - 1 ]	145:20:3170:3291	8080160	0	True				
ANR	8080869	AssignmentExpression	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 - 1 * 8 ] = * ( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride - 1 ]		8080160	0		=			
ANR	8080870	UnaryOperationExpression	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 - 1 * 8 ]		8080160	0					
ANR	8080871	UnaryOperator	*		8080160	0					
ANR	8080872	CastExpression	( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 - 1 * 8 ]		8080160	1					
ANR	8080873	CastTarget	uint32_t *		8080160	0					
ANR	8080874	ArrayIndexing	h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 - 1 * 8 ]		8080160	1					
ANR	8080875	ArrayIndexing	h -> mv_cache [ m ]		8080160	0					
ANR	8080876	PtrMemberAccess	h -> mv_cache		8080160	0					
ANR	8080877	Identifier	h		8080160	0					
ANR	8080878	Identifier	mv_cache		8080160	1					
ANR	8080879	Identifier	m		8080160	1					
ANR	8080880	AdditiveExpression	scan8 [ 0 ] - 1 - 1 * 8		8080160	1		-			
ANR	8080881	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8080882	Identifier	scan8		8080160	0					
ANR	8080883	PrimaryExpression	0		8080160	1					
ANR	8080884	AdditiveExpression	1 - 1 * 8		8080160	1		-			
ANR	8080885	PrimaryExpression	1		8080160	0					
ANR	8080886	MultiplicativeExpression	1 * 8		8080160	1		*			
ANR	8080887	PrimaryExpression	1		8080160	0					
ANR	8080888	PrimaryExpression	8		8080160	1					
ANR	8080889	UnaryOperationExpression	* ( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride - 1 ]		8080160	1					
ANR	8080890	UnaryOperator	*		8080160	0					
ANR	8080891	CastExpression	( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride - 1 ]		8080160	1					
ANR	8080892	CastTarget	uint32_t *		8080160	0					
ANR	8080893	ArrayIndexing	s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride - 1 ]		8080160	1					
ANR	8080894	ArrayIndexing	s -> current_picture . motion_val [ m ]		8080160	0					
ANR	8080895	MemberAccess	s -> current_picture . motion_val		8080160	0					
ANR	8080896	PtrMemberAccess	s -> current_picture		8080160	0					
ANR	8080897	Identifier	s		8080160	0					
ANR	8080898	Identifier	current_picture		8080160	1					
ANR	8080899	Identifier	motion_val		8080160	1					
ANR	8080900	Identifier	m		8080160	1					
ANR	8080901	AdditiveExpression	b_xy - h -> b_stride - 1		8080160	1		-			
ANR	8080902	Identifier	b_xy		8080160	0					
ANR	8080903	AdditiveExpression	h -> b_stride - 1		8080160	1		-			
ANR	8080904	PtrMemberAccess	h -> b_stride		8080160	0					
ANR	8080905	Identifier	h		8080160	0					
ANR	8080906	Identifier	b_stride		8080160	1					
ANR	8080907	PrimaryExpression	1		8080160	1					
ANR	8080908	ExpressionStatement	h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 - 1 * 8 ] = ( h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride - 1 ] [ 3 ] == - 1 ) ? PART_NOT_AVAILABLE : 1	147:20:3314:3435	8080160	1	True				
ANR	8080909	AssignmentExpression	h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 - 1 * 8 ] = ( h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride - 1 ] [ 3 ] == - 1 ) ? PART_NOT_AVAILABLE : 1		8080160	0		=			
ANR	8080910	ArrayIndexing	h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 - 1 * 8 ]		8080160	0					
ANR	8080911	ArrayIndexing	h -> ref_cache [ m ]		8080160	0					
ANR	8080912	PtrMemberAccess	h -> ref_cache		8080160	0					
ANR	8080913	Identifier	h		8080160	0					
ANR	8080914	Identifier	ref_cache		8080160	1					
ANR	8080915	Identifier	m		8080160	1					
ANR	8080916	AdditiveExpression	scan8 [ 0 ] - 1 - 1 * 8		8080160	1		-			
ANR	8080917	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8080918	Identifier	scan8		8080160	0					
ANR	8080919	PrimaryExpression	0		8080160	1					
ANR	8080920	AdditiveExpression	1 - 1 * 8		8080160	1		-			
ANR	8080921	PrimaryExpression	1		8080160	0					
ANR	8080922	MultiplicativeExpression	1 * 8		8080160	1		*			
ANR	8080923	PrimaryExpression	1		8080160	0					
ANR	8080924	PrimaryExpression	8		8080160	1					
ANR	8080925	ConditionalExpression	( h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride - 1 ] [ 3 ] == - 1 ) ? PART_NOT_AVAILABLE : 1		8080160	1					
ANR	8080926	Condition	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride - 1 ] [ 3 ] == - 1		8080160	0					
ANR	8080927	EqualityExpression	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride - 1 ] [ 3 ] == - 1		8080160	0		==			
ANR	8080928	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride - 1 ] [ 3 ]		8080160	0					
ANR	8080929	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride - 1 ]		8080160	0					
ANR	8080930	PtrMemberAccess	h -> intra4x4_pred_mode		8080160	0					
ANR	8080931	Identifier	h		8080160	0					
ANR	8080932	Identifier	intra4x4_pred_mode		8080160	1					
ANR	8080933	AdditiveExpression	mb_xy - s -> mb_stride - 1		8080160	1		-			
ANR	8080934	Identifier	mb_xy		8080160	0					
ANR	8080935	AdditiveExpression	s -> mb_stride - 1		8080160	1		-			
ANR	8080936	PtrMemberAccess	s -> mb_stride		8080160	0					
ANR	8080937	Identifier	s		8080160	0					
ANR	8080938	Identifier	mb_stride		8080160	1					
ANR	8080939	PrimaryExpression	1		8080160	1					
ANR	8080940	PrimaryExpression	3		8080160	1					
ANR	8080941	UnaryOperationExpression	- 1		8080160	1					
ANR	8080942	UnaryOperator	-		8080160	0					
ANR	8080943	PrimaryExpression	1		8080160	1					
ANR	8080944	Identifier	PART_NOT_AVAILABLE		8080160	1					
ANR	8080945	PrimaryExpression	1		8080160	2					
ANR	8080946	ElseStatement	else		8080160	0					
ANR	8080947	ExpressionStatement	h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 - 1 * 8 ] = PART_NOT_AVAILABLE	151:20:3481:3537	8080160	0	True				
ANR	8080948	AssignmentExpression	h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 - 1 * 8 ] = PART_NOT_AVAILABLE		8080160	0		=			
ANR	8080949	ArrayIndexing	h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 - 1 * 8 ]		8080160	0					
ANR	8080950	ArrayIndexing	h -> ref_cache [ m ]		8080160	0					
ANR	8080951	PtrMemberAccess	h -> ref_cache		8080160	0					
ANR	8080952	Identifier	h		8080160	0					
ANR	8080953	Identifier	ref_cache		8080160	1					
ANR	8080954	Identifier	m		8080160	1					
ANR	8080955	AdditiveExpression	scan8 [ 0 ] - 1 - 1 * 8		8080160	1		-			
ANR	8080956	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8080957	Identifier	scan8		8080160	0					
ANR	8080958	PrimaryExpression	0		8080160	1					
ANR	8080959	AdditiveExpression	1 - 1 * 8		8080160	1		-			
ANR	8080960	PrimaryExpression	1		8080160	0					
ANR	8080961	MultiplicativeExpression	1 * 8		8080160	1		*			
ANR	8080962	PrimaryExpression	1		8080160	0					
ANR	8080963	PrimaryExpression	8		8080160	1					
ANR	8080964	Identifier	PART_NOT_AVAILABLE		8080160	1					
ANR	8080965	ElseStatement	else		8080160	0					
ANR	8080966	ExpressionStatement	"memset ( & h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 * 8 - 1 ] , PART_NOT_AVAILABLE , 8 )"	155:16:3575:3642	8080160	0	True				
ANR	8080967	CallExpression	"memset ( & h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 * 8 - 1 ] , PART_NOT_AVAILABLE , 8 )"		8080160	0					
ANR	8080968	Callee	memset		8080160	0					
ANR	8080969	Identifier	memset		8080160	0					
ANR	8080970	ArgumentList	& h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 * 8 - 1 ]		8080160	1					
ANR	8080971	Argument	& h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 * 8 - 1 ]		8080160	0					
ANR	8080972	UnaryOperationExpression	& h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 * 8 - 1 ]		8080160	0					
ANR	8080973	UnaryOperator	&		8080160	0					
ANR	8080974	ArrayIndexing	h -> ref_cache [ m ] [ scan8 [ 0 ] - 1 * 8 - 1 ]		8080160	1					
ANR	8080975	ArrayIndexing	h -> ref_cache [ m ]		8080160	0					
ANR	8080976	PtrMemberAccess	h -> ref_cache		8080160	0					
ANR	8080977	Identifier	h		8080160	0					
ANR	8080978	Identifier	ref_cache		8080160	1					
ANR	8080979	Identifier	m		8080160	1					
ANR	8080980	AdditiveExpression	scan8 [ 0 ] - 1 * 8 - 1		8080160	1		-			
ANR	8080981	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8080982	Identifier	scan8		8080160	0					
ANR	8080983	PrimaryExpression	0		8080160	1					
ANR	8080984	AdditiveExpression	1 * 8 - 1		8080160	1		-			
ANR	8080985	MultiplicativeExpression	1 * 8		8080160	0		*			
ANR	8080986	PrimaryExpression	1		8080160	0					
ANR	8080987	PrimaryExpression	8		8080160	1					
ANR	8080988	PrimaryExpression	1		8080160	1					
ANR	8080989	Argument	PART_NOT_AVAILABLE		8080160	1					
ANR	8080990	Identifier	PART_NOT_AVAILABLE		8080160	0					
ANR	8080991	Argument	8		8080160	2					
ANR	8080992	PrimaryExpression	8		8080160	0					
ANR	8080993	IfStatement	if ( s -> pict_type != FF_B_TYPE )		8080160	2					
ANR	8080994	Condition	s -> pict_type != FF_B_TYPE	159:16:3663:3687	8080160	0	True				
ANR	8080995	EqualityExpression	s -> pict_type != FF_B_TYPE		8080160	0		!=			
ANR	8080996	PtrMemberAccess	s -> pict_type		8080160	0					
ANR	8080997	Identifier	s		8080160	0					
ANR	8080998	Identifier	pict_type		8080160	1					
ANR	8080999	Identifier	FF_B_TYPE		8080160	1					
ANR	8081000	BreakStatement	break ;	161:16:3707:3712	8080160	1	True				
ANR	8081001	IfStatement	if ( s -> pict_type == FF_P_TYPE )		8080160	2					
ANR	8081002	Condition	s -> pict_type == FF_P_TYPE	169:12:3802:3826	8080160	0	True				
ANR	8081003	EqualityExpression	s -> pict_type == FF_P_TYPE		8080160	0		==			
ANR	8081004	PtrMemberAccess	s -> pict_type		8080160	0					
ANR	8081005	Identifier	s		8080160	0					
ANR	8081006	Identifier	pict_type		8080160	1					
ANR	8081007	Identifier	FF_P_TYPE		8080160	1					
ANR	8081008	CompoundStatement		167:39:3763:3763	8080160	1					
ANR	8081009	IfStatement	"if ( svq3_mc_dir ( h , ( mb_type - 1 ) , mode , 0 , 0 ) < 0 )"		8080160	0					
ANR	8081010	Condition	"svq3_mc_dir ( h , ( mb_type - 1 ) , mode , 0 , 0 ) < 0"	171:16:3848:3892	8080160	0	True				
ANR	8081011	RelationalExpression	"svq3_mc_dir ( h , ( mb_type - 1 ) , mode , 0 , 0 ) < 0"		8080160	0		<			
ANR	8081012	CallExpression	"svq3_mc_dir ( h , ( mb_type - 1 ) , mode , 0 , 0 )"		8080160	0					
ANR	8081013	Callee	svq3_mc_dir		8080160	0					
ANR	8081014	Identifier	svq3_mc_dir		8080160	0					
ANR	8081015	ArgumentList	h		8080160	1					
ANR	8081016	Argument	h		8080160	0					
ANR	8081017	Identifier	h		8080160	0					
ANR	8081018	Argument	mb_type - 1		8080160	1					
ANR	8081019	AdditiveExpression	mb_type - 1		8080160	0		-			
ANR	8081020	Identifier	mb_type		8080160	0					
ANR	8081021	PrimaryExpression	1		8080160	1					
ANR	8081022	Argument	mode		8080160	2					
ANR	8081023	Identifier	mode		8080160	0					
ANR	8081024	Argument	0		8080160	3					
ANR	8081025	PrimaryExpression	0		8080160	0					
ANR	8081026	Argument	0		8080160	4					
ANR	8081027	PrimaryExpression	0		8080160	0					
ANR	8081028	PrimaryExpression	0		8080160	1					
ANR	8081029	ReturnStatement	return - 1 ;	173:16:3912:3921	8080160	1	True				
ANR	8081030	UnaryOperationExpression	- 1		8080160	0					
ANR	8081031	UnaryOperator	-		8080160	0					
ANR	8081032	PrimaryExpression	1		8080160	1					
ANR	8081033	ElseStatement	else		8080160	0					
ANR	8081034	CompoundStatement		173:15:3873:3873	8080160	0					
ANR	8081035	IfStatement	if ( mb_type != 2 )		8080160	0					
ANR	8081036	Condition	mb_type != 2	177:16:3981:3992	8080160	0	True				
ANR	8081037	EqualityExpression	mb_type != 2		8080160	0		!=			
ANR	8081038	Identifier	mb_type		8080160	0					
ANR	8081039	PrimaryExpression	2		8080160	1					
ANR	8081040	CompoundStatement		175:30:3929:3929	8080160	1					
ANR	8081041	IfStatement	"if ( svq3_mc_dir ( h , 0 , mode , 0 , 0 ) < 0 )"		8080160	0					
ANR	8081042	Condition	"svq3_mc_dir ( h , 0 , mode , 0 , 0 ) < 0"	179:20:4018:4050	8080160	0	True				
ANR	8081043	RelationalExpression	"svq3_mc_dir ( h , 0 , mode , 0 , 0 ) < 0"		8080160	0		<			
ANR	8081044	CallExpression	"svq3_mc_dir ( h , 0 , mode , 0 , 0 )"		8080160	0					
ANR	8081045	Callee	svq3_mc_dir		8080160	0					
ANR	8081046	Identifier	svq3_mc_dir		8080160	0					
ANR	8081047	ArgumentList	h		8080160	1					
ANR	8081048	Argument	h		8080160	0					
ANR	8081049	Identifier	h		8080160	0					
ANR	8081050	Argument	0		8080160	1					
ANR	8081051	PrimaryExpression	0		8080160	0					
ANR	8081052	Argument	mode		8080160	2					
ANR	8081053	Identifier	mode		8080160	0					
ANR	8081054	Argument	0		8080160	3					
ANR	8081055	PrimaryExpression	0		8080160	0					
ANR	8081056	Argument	0		8080160	4					
ANR	8081057	PrimaryExpression	0		8080160	0					
ANR	8081058	PrimaryExpression	0		8080160	1					
ANR	8081059	ReturnStatement	return - 1 ;	181:20:4074:4083	8080160	1	True				
ANR	8081060	UnaryOperationExpression	- 1		8080160	0					
ANR	8081061	UnaryOperator	-		8080160	0					
ANR	8081062	PrimaryExpression	1		8080160	1					
ANR	8081063	ElseStatement	else		8080160	0					
ANR	8081064	CompoundStatement		181:19:4039:4039	8080160	0					
ANR	8081065	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8080160	0					
ANR	8081066	ForInit	i = 0 ;	185:21:4129:4134	8080160	0	True				
ANR	8081067	AssignmentExpression	i = 0		8080160	0		=			
ANR	8081068	Identifier	i		8080160	0					
ANR	8081069	PrimaryExpression	0		8080160	1					
ANR	8081070	Condition	i < 4	185:28:4136:4140	8080160	1	True				
ANR	8081071	RelationalExpression	i < 4		8080160	0		<			
ANR	8081072	Identifier	i		8080160	0					
ANR	8081073	PrimaryExpression	4		8080160	1					
ANR	8081074	PostIncDecOperationExpression	i ++	185:35:4143:4145	8080160	2	True				
ANR	8081075	Identifier	i		8080160	0					
ANR	8081076	IncDec	++		8080160	1					
ANR	8081077	CompoundStatement		183:40:4082:4082	8080160	3					
ANR	8081078	ExpressionStatement	"memset ( s -> current_picture . motion_val [ 0 ] [ b_xy + i * h -> b_stride ] , 0 , 4 * 2 * sizeof ( int16_t ) )"	187:20:4171:4257	8080160	0	True				
ANR	8081079	CallExpression	"memset ( s -> current_picture . motion_val [ 0 ] [ b_xy + i * h -> b_stride ] , 0 , 4 * 2 * sizeof ( int16_t ) )"		8080160	0					
ANR	8081080	Callee	memset		8080160	0					
ANR	8081081	Identifier	memset		8080160	0					
ANR	8081082	ArgumentList	s -> current_picture . motion_val [ 0 ] [ b_xy + i * h -> b_stride ]		8080160	1					
ANR	8081083	Argument	s -> current_picture . motion_val [ 0 ] [ b_xy + i * h -> b_stride ]		8080160	0					
ANR	8081084	ArrayIndexing	s -> current_picture . motion_val [ 0 ] [ b_xy + i * h -> b_stride ]		8080160	0					
ANR	8081085	ArrayIndexing	s -> current_picture . motion_val [ 0 ]		8080160	0					
ANR	8081086	MemberAccess	s -> current_picture . motion_val		8080160	0					
ANR	8081087	PtrMemberAccess	s -> current_picture		8080160	0					
ANR	8081088	Identifier	s		8080160	0					
ANR	8081089	Identifier	current_picture		8080160	1					
ANR	8081090	Identifier	motion_val		8080160	1					
ANR	8081091	PrimaryExpression	0		8080160	1					
ANR	8081092	AdditiveExpression	b_xy + i * h -> b_stride		8080160	1		+			
ANR	8081093	Identifier	b_xy		8080160	0					
ANR	8081094	MultiplicativeExpression	i * h -> b_stride		8080160	1		*			
ANR	8081095	Identifier	i		8080160	0					
ANR	8081096	PtrMemberAccess	h -> b_stride		8080160	1					
ANR	8081097	Identifier	h		8080160	0					
ANR	8081098	Identifier	b_stride		8080160	1					
ANR	8081099	Argument	0		8080160	1					
ANR	8081100	PrimaryExpression	0		8080160	0					
ANR	8081101	Argument	4 * 2 * sizeof ( int16_t )		8080160	2					
ANR	8081102	MultiplicativeExpression	4 * 2 * sizeof ( int16_t )		8080160	0		*			
ANR	8081103	PrimaryExpression	4		8080160	0					
ANR	8081104	MultiplicativeExpression	2 * sizeof ( int16_t )		8080160	1		*			
ANR	8081105	PrimaryExpression	2		8080160	0					
ANR	8081106	SizeofExpression	sizeof ( int16_t )		8080160	1					
ANR	8081107	Sizeof	sizeof		8080160	0					
ANR	8081108	SizeofOperand	int16_t		8080160	1					
ANR	8081109	IfStatement	if ( mb_type != 1 )		8080160	1					
ANR	8081110	Condition	mb_type != 1	193:16:4310:4321	8080160	0	True				
ANR	8081111	EqualityExpression	mb_type != 1		8080160	0		!=			
ANR	8081112	Identifier	mb_type		8080160	0					
ANR	8081113	PrimaryExpression	1		8080160	1					
ANR	8081114	CompoundStatement		191:30:4258:4258	8080160	1					
ANR	8081115	IfStatement	"if ( svq3_mc_dir ( h , 0 , mode , 1 , ( mb_type == 3 ) ) < 0 )"		8080160	0					
ANR	8081116	Condition	"svq3_mc_dir ( h , 0 , mode , 1 , ( mb_type == 3 ) ) < 0"	195:20:4347:4392	8080160	0	True				
ANR	8081117	RelationalExpression	"svq3_mc_dir ( h , 0 , mode , 1 , ( mb_type == 3 ) ) < 0"		8080160	0		<			
ANR	8081118	CallExpression	"svq3_mc_dir ( h , 0 , mode , 1 , ( mb_type == 3 ) )"		8080160	0					
ANR	8081119	Callee	svq3_mc_dir		8080160	0					
ANR	8081120	Identifier	svq3_mc_dir		8080160	0					
ANR	8081121	ArgumentList	h		8080160	1					
ANR	8081122	Argument	h		8080160	0					
ANR	8081123	Identifier	h		8080160	0					
ANR	8081124	Argument	0		8080160	1					
ANR	8081125	PrimaryExpression	0		8080160	0					
ANR	8081126	Argument	mode		8080160	2					
ANR	8081127	Identifier	mode		8080160	0					
ANR	8081128	Argument	1		8080160	3					
ANR	8081129	PrimaryExpression	1		8080160	0					
ANR	8081130	Argument	mb_type == 3		8080160	4					
ANR	8081131	EqualityExpression	mb_type == 3		8080160	0		==			
ANR	8081132	Identifier	mb_type		8080160	0					
ANR	8081133	PrimaryExpression	3		8080160	1					
ANR	8081134	PrimaryExpression	0		8080160	1					
ANR	8081135	ReturnStatement	return - 1 ;	197:20:4416:4425	8080160	1	True				
ANR	8081136	UnaryOperationExpression	- 1		8080160	0					
ANR	8081137	UnaryOperator	-		8080160	0					
ANR	8081138	PrimaryExpression	1		8080160	1					
ANR	8081139	ElseStatement	else		8080160	0					
ANR	8081140	CompoundStatement		197:19:4381:4381	8080160	0					
ANR	8081141	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8080160	0					
ANR	8081142	ForInit	i = 0 ;	201:21:4471:4476	8080160	0	True				
ANR	8081143	AssignmentExpression	i = 0		8080160	0		=			
ANR	8081144	Identifier	i		8080160	0					
ANR	8081145	PrimaryExpression	0		8080160	1					
ANR	8081146	Condition	i < 4	201:28:4478:4482	8080160	1	True				
ANR	8081147	RelationalExpression	i < 4		8080160	0		<			
ANR	8081148	Identifier	i		8080160	0					
ANR	8081149	PrimaryExpression	4		8080160	1					
ANR	8081150	PostIncDecOperationExpression	i ++	201:35:4485:4487	8080160	2	True				
ANR	8081151	Identifier	i		8080160	0					
ANR	8081152	IncDec	++		8080160	1					
ANR	8081153	CompoundStatement		199:40:4424:4424	8080160	3					
ANR	8081154	ExpressionStatement	"memset ( s -> current_picture . motion_val [ 1 ] [ b_xy + i * h -> b_stride ] , 0 , 4 * 2 * sizeof ( int16_t ) )"	203:20:4513:4599	8080160	0	True				
ANR	8081155	CallExpression	"memset ( s -> current_picture . motion_val [ 1 ] [ b_xy + i * h -> b_stride ] , 0 , 4 * 2 * sizeof ( int16_t ) )"		8080160	0					
ANR	8081156	Callee	memset		8080160	0					
ANR	8081157	Identifier	memset		8080160	0					
ANR	8081158	ArgumentList	s -> current_picture . motion_val [ 1 ] [ b_xy + i * h -> b_stride ]		8080160	1					
ANR	8081159	Argument	s -> current_picture . motion_val [ 1 ] [ b_xy + i * h -> b_stride ]		8080160	0					
ANR	8081160	ArrayIndexing	s -> current_picture . motion_val [ 1 ] [ b_xy + i * h -> b_stride ]		8080160	0					
ANR	8081161	ArrayIndexing	s -> current_picture . motion_val [ 1 ]		8080160	0					
ANR	8081162	MemberAccess	s -> current_picture . motion_val		8080160	0					
ANR	8081163	PtrMemberAccess	s -> current_picture		8080160	0					
ANR	8081164	Identifier	s		8080160	0					
ANR	8081165	Identifier	current_picture		8080160	1					
ANR	8081166	Identifier	motion_val		8080160	1					
ANR	8081167	PrimaryExpression	1		8080160	1					
ANR	8081168	AdditiveExpression	b_xy + i * h -> b_stride		8080160	1		+			
ANR	8081169	Identifier	b_xy		8080160	0					
ANR	8081170	MultiplicativeExpression	i * h -> b_stride		8080160	1		*			
ANR	8081171	Identifier	i		8080160	0					
ANR	8081172	PtrMemberAccess	h -> b_stride		8080160	1					
ANR	8081173	Identifier	h		8080160	0					
ANR	8081174	Identifier	b_stride		8080160	1					
ANR	8081175	Argument	0		8080160	1					
ANR	8081176	PrimaryExpression	0		8080160	0					
ANR	8081177	Argument	4 * 2 * sizeof ( int16_t )		8080160	2					
ANR	8081178	MultiplicativeExpression	4 * 2 * sizeof ( int16_t )		8080160	0		*			
ANR	8081179	PrimaryExpression	4		8080160	0					
ANR	8081180	MultiplicativeExpression	2 * sizeof ( int16_t )		8080160	1		*			
ANR	8081181	PrimaryExpression	2		8080160	0					
ANR	8081182	SizeofExpression	sizeof ( int16_t )		8080160	1					
ANR	8081183	Sizeof	sizeof		8080160	0					
ANR	8081184	SizeofOperand	int16_t		8080160	1					
ANR	8081185	ExpressionStatement	mb_type = MB_TYPE_16x16	213:8:4657:4680	8080160	3	True				
ANR	8081186	AssignmentExpression	mb_type = MB_TYPE_16x16		8080160	0		=			
ANR	8081187	Identifier	mb_type		8080160	0					
ANR	8081188	Identifier	MB_TYPE_16x16		8080160	1					
ANR	8081189	ElseStatement	else		8080160	0					
ANR	8081190	IfStatement	if ( mb_type == 8 || mb_type == 33 )		8080160	0					
ANR	8081191	Condition	mb_type == 8 || mb_type == 33	215:15:4698:4726	8080160	0	True				
ANR	8081192	OrExpression	mb_type == 8 || mb_type == 33		8080160	0		||			
ANR	8081193	EqualityExpression	mb_type == 8		8080160	0		==			
ANR	8081194	Identifier	mb_type		8080160	0					
ANR	8081195	PrimaryExpression	8		8080160	1					
ANR	8081196	EqualityExpression	mb_type == 33		8080160	1		==			
ANR	8081197	Identifier	mb_type		8080160	0					
ANR	8081198	PrimaryExpression	33		8080160	1					
ANR	8081199	CompoundStatement		213:46:4663:4663	8080160	1					
ANR	8081200	ExpressionStatement	"memset ( h -> intra4x4_pred_mode_cache , - 1 , 8 * 5 * sizeof ( int8_t ) )"	217:8:4757:4816	8080160	0	True				
ANR	8081201	CallExpression	"memset ( h -> intra4x4_pred_mode_cache , - 1 , 8 * 5 * sizeof ( int8_t ) )"		8080160	0					
ANR	8081202	Callee	memset		8080160	0					
ANR	8081203	Identifier	memset		8080160	0					
ANR	8081204	ArgumentList	h -> intra4x4_pred_mode_cache		8080160	1					
ANR	8081205	Argument	h -> intra4x4_pred_mode_cache		8080160	0					
ANR	8081206	PtrMemberAccess	h -> intra4x4_pred_mode_cache		8080160	0					
ANR	8081207	Identifier	h		8080160	0					
ANR	8081208	Identifier	intra4x4_pred_mode_cache		8080160	1					
ANR	8081209	Argument	- 1		8080160	1					
ANR	8081210	UnaryOperationExpression	- 1		8080160	0					
ANR	8081211	UnaryOperator	-		8080160	0					
ANR	8081212	PrimaryExpression	1		8080160	1					
ANR	8081213	Argument	8 * 5 * sizeof ( int8_t )		8080160	2					
ANR	8081214	MultiplicativeExpression	8 * 5 * sizeof ( int8_t )		8080160	0		*			
ANR	8081215	PrimaryExpression	8		8080160	0					
ANR	8081216	MultiplicativeExpression	5 * sizeof ( int8_t )		8080160	1		*			
ANR	8081217	PrimaryExpression	5		8080160	0					
ANR	8081218	SizeofExpression	sizeof ( int8_t )		8080160	1					
ANR	8081219	Sizeof	sizeof		8080160	0					
ANR	8081220	SizeofOperand	int8_t		8080160	1					
ANR	8081221	IfStatement	if ( mb_type == 8 )		8080160	1					
ANR	8081222	Condition	mb_type == 8	221:12:4833:4844	8080160	0	True				
ANR	8081223	EqualityExpression	mb_type == 8		8080160	0		==			
ANR	8081224	Identifier	mb_type		8080160	0					
ANR	8081225	PrimaryExpression	8		8080160	1					
ANR	8081226	CompoundStatement		219:26:4781:4781	8080160	1					
ANR	8081227	IfStatement	if ( s -> mb_x > 0 )		8080160	0					
ANR	8081228	Condition	s -> mb_x > 0	223:16:4866:4876	8080160	0	True				
ANR	8081229	RelationalExpression	s -> mb_x > 0		8080160	0		>			
ANR	8081230	PtrMemberAccess	s -> mb_x		8080160	0					
ANR	8081231	Identifier	s		8080160	0					
ANR	8081232	Identifier	mb_x		8080160	1					
ANR	8081233	PrimaryExpression	0		8080160	1					
ANR	8081234	CompoundStatement		221:29:4813:4813	8080160	1					
ANR	8081235	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8080160	0					
ANR	8081236	ForInit	i = 0 ;	225:21:4903:4908	8080160	0	True				
ANR	8081237	AssignmentExpression	i = 0		8080160	0		=			
ANR	8081238	Identifier	i		8080160	0					
ANR	8081239	PrimaryExpression	0		8080160	1					
ANR	8081240	Condition	i < 4	225:28:4910:4914	8080160	1	True				
ANR	8081241	RelationalExpression	i < 4		8080160	0		<			
ANR	8081242	Identifier	i		8080160	0					
ANR	8081243	PrimaryExpression	4		8080160	1					
ANR	8081244	PostIncDecOperationExpression	i ++	225:35:4917:4919	8080160	2	True				
ANR	8081245	Identifier	i		8080160	0					
ANR	8081246	IncDec	++		8080160	1					
ANR	8081247	CompoundStatement		223:40:4856:4856	8080160	3					
ANR	8081248	ExpressionStatement	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] - 1 + i * 8 ] = h -> intra4x4_pred_mode [ mb_xy - 1 ] [ i ]	227:20:4945:5030	8080160	0	True				
ANR	8081249	AssignmentExpression	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] - 1 + i * 8 ] = h -> intra4x4_pred_mode [ mb_xy - 1 ] [ i ]		8080160	0		=			
ANR	8081250	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] - 1 + i * 8 ]		8080160	0					
ANR	8081251	PtrMemberAccess	h -> intra4x4_pred_mode_cache		8080160	0					
ANR	8081252	Identifier	h		8080160	0					
ANR	8081253	Identifier	intra4x4_pred_mode_cache		8080160	1					
ANR	8081254	AdditiveExpression	scan8 [ 0 ] - 1 + i * 8		8080160	1		-			
ANR	8081255	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8081256	Identifier	scan8		8080160	0					
ANR	8081257	PrimaryExpression	0		8080160	1					
ANR	8081258	AdditiveExpression	1 + i * 8		8080160	1		+			
ANR	8081259	PrimaryExpression	1		8080160	0					
ANR	8081260	MultiplicativeExpression	i * 8		8080160	1		*			
ANR	8081261	Identifier	i		8080160	0					
ANR	8081262	PrimaryExpression	8		8080160	1					
ANR	8081263	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - 1 ] [ i ]		8080160	1					
ANR	8081264	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - 1 ]		8080160	0					
ANR	8081265	PtrMemberAccess	h -> intra4x4_pred_mode		8080160	0					
ANR	8081266	Identifier	h		8080160	0					
ANR	8081267	Identifier	intra4x4_pred_mode		8080160	1					
ANR	8081268	AdditiveExpression	mb_xy - 1		8080160	1		-			
ANR	8081269	Identifier	mb_xy		8080160	0					
ANR	8081270	PrimaryExpression	1		8080160	1					
ANR	8081271	Identifier	i		8080160	1					
ANR	8081272	IfStatement	if ( h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] - 1 ] == - 1 )		8080160	1					
ANR	8081273	Condition	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] - 1 ] == - 1	231:20:5072:5118	8080160	0	True				
ANR	8081274	EqualityExpression	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] - 1 ] == - 1		8080160	0		==			
ANR	8081275	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] - 1 ]		8080160	0					
ANR	8081276	PtrMemberAccess	h -> intra4x4_pred_mode_cache		8080160	0					
ANR	8081277	Identifier	h		8080160	0					
ANR	8081278	Identifier	intra4x4_pred_mode_cache		8080160	1					
ANR	8081279	AdditiveExpression	scan8 [ 0 ] - 1		8080160	1		-			
ANR	8081280	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8081281	Identifier	scan8		8080160	0					
ANR	8081282	PrimaryExpression	0		8080160	1					
ANR	8081283	PrimaryExpression	1		8080160	1					
ANR	8081284	UnaryOperationExpression	- 1		8080160	1					
ANR	8081285	UnaryOperator	-		8080160	0					
ANR	8081286	PrimaryExpression	1		8080160	1					
ANR	8081287	CompoundStatement		229:69:5055:5055	8080160	1					
ANR	8081288	ExpressionStatement	h -> left_samples_available = 0x5F5F	233:20:5144:5178	8080160	0	True				
ANR	8081289	AssignmentExpression	h -> left_samples_available = 0x5F5F		8080160	0		=			
ANR	8081290	PtrMemberAccess	h -> left_samples_available		8080160	0					
ANR	8081291	Identifier	h		8080160	0					
ANR	8081292	Identifier	left_samples_available		8080160	1					
ANR	8081293	PrimaryExpression	0x5F5F		8080160	1					
ANR	8081294	IfStatement	if ( s -> mb_y > 0 )		8080160	1					
ANR	8081295	Condition	s -> mb_y > 0	239:16:5231:5241	8080160	0	True				
ANR	8081296	RelationalExpression	s -> mb_y > 0		8080160	0		>			
ANR	8081297	PtrMemberAccess	s -> mb_y		8080160	0					
ANR	8081298	Identifier	s		8080160	0					
ANR	8081299	Identifier	mb_y		8080160	1					
ANR	8081300	PrimaryExpression	0		8080160	1					
ANR	8081301	CompoundStatement		237:29:5178:5178	8080160	1					
ANR	8081302	ExpressionStatement	h -> intra4x4_pred_mode_cache [ 4 + 8 * 0 ] = h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ]	241:16:5263:5346	8080160	0	True				
ANR	8081303	AssignmentExpression	h -> intra4x4_pred_mode_cache [ 4 + 8 * 0 ] = h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ]		8080160	0		=			
ANR	8081304	ArrayIndexing	h -> intra4x4_pred_mode_cache [ 4 + 8 * 0 ]		8080160	0					
ANR	8081305	PtrMemberAccess	h -> intra4x4_pred_mode_cache		8080160	0					
ANR	8081306	Identifier	h		8080160	0					
ANR	8081307	Identifier	intra4x4_pred_mode_cache		8080160	1					
ANR	8081308	AdditiveExpression	4 + 8 * 0		8080160	1		+			
ANR	8081309	PrimaryExpression	4		8080160	0					
ANR	8081310	MultiplicativeExpression	8 * 0		8080160	1		*			
ANR	8081311	PrimaryExpression	8		8080160	0					
ANR	8081312	PrimaryExpression	0		8080160	1					
ANR	8081313	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 4 ]		8080160	1					
ANR	8081314	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ]		8080160	0					
ANR	8081315	PtrMemberAccess	h -> intra4x4_pred_mode		8080160	0					
ANR	8081316	Identifier	h		8080160	0					
ANR	8081317	Identifier	intra4x4_pred_mode		8080160	1					
ANR	8081318	AdditiveExpression	mb_xy - s -> mb_stride		8080160	1		-			
ANR	8081319	Identifier	mb_xy		8080160	0					
ANR	8081320	PtrMemberAccess	s -> mb_stride		8080160	1					
ANR	8081321	Identifier	s		8080160	0					
ANR	8081322	Identifier	mb_stride		8080160	1					
ANR	8081323	PrimaryExpression	4		8080160	1					
ANR	8081324	ExpressionStatement	h -> intra4x4_pred_mode_cache [ 5 + 8 * 0 ] = h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 5 ]	243:16:5365:5448	8080160	1	True				
ANR	8081325	AssignmentExpression	h -> intra4x4_pred_mode_cache [ 5 + 8 * 0 ] = h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 5 ]		8080160	0		=			
ANR	8081326	ArrayIndexing	h -> intra4x4_pred_mode_cache [ 5 + 8 * 0 ]		8080160	0					
ANR	8081327	PtrMemberAccess	h -> intra4x4_pred_mode_cache		8080160	0					
ANR	8081328	Identifier	h		8080160	0					
ANR	8081329	Identifier	intra4x4_pred_mode_cache		8080160	1					
ANR	8081330	AdditiveExpression	5 + 8 * 0		8080160	1		+			
ANR	8081331	PrimaryExpression	5		8080160	0					
ANR	8081332	MultiplicativeExpression	8 * 0		8080160	1		*			
ANR	8081333	PrimaryExpression	8		8080160	0					
ANR	8081334	PrimaryExpression	0		8080160	1					
ANR	8081335	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 5 ]		8080160	1					
ANR	8081336	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ]		8080160	0					
ANR	8081337	PtrMemberAccess	h -> intra4x4_pred_mode		8080160	0					
ANR	8081338	Identifier	h		8080160	0					
ANR	8081339	Identifier	intra4x4_pred_mode		8080160	1					
ANR	8081340	AdditiveExpression	mb_xy - s -> mb_stride		8080160	1		-			
ANR	8081341	Identifier	mb_xy		8080160	0					
ANR	8081342	PtrMemberAccess	s -> mb_stride		8080160	1					
ANR	8081343	Identifier	s		8080160	0					
ANR	8081344	Identifier	mb_stride		8080160	1					
ANR	8081345	PrimaryExpression	5		8080160	1					
ANR	8081346	ExpressionStatement	h -> intra4x4_pred_mode_cache [ 6 + 8 * 0 ] = h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 6 ]	245:16:5467:5550	8080160	2	True				
ANR	8081347	AssignmentExpression	h -> intra4x4_pred_mode_cache [ 6 + 8 * 0 ] = h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 6 ]		8080160	0		=			
ANR	8081348	ArrayIndexing	h -> intra4x4_pred_mode_cache [ 6 + 8 * 0 ]		8080160	0					
ANR	8081349	PtrMemberAccess	h -> intra4x4_pred_mode_cache		8080160	0					
ANR	8081350	Identifier	h		8080160	0					
ANR	8081351	Identifier	intra4x4_pred_mode_cache		8080160	1					
ANR	8081352	AdditiveExpression	6 + 8 * 0		8080160	1		+			
ANR	8081353	PrimaryExpression	6		8080160	0					
ANR	8081354	MultiplicativeExpression	8 * 0		8080160	1		*			
ANR	8081355	PrimaryExpression	8		8080160	0					
ANR	8081356	PrimaryExpression	0		8080160	1					
ANR	8081357	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 6 ]		8080160	1					
ANR	8081358	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ]		8080160	0					
ANR	8081359	PtrMemberAccess	h -> intra4x4_pred_mode		8080160	0					
ANR	8081360	Identifier	h		8080160	0					
ANR	8081361	Identifier	intra4x4_pred_mode		8080160	1					
ANR	8081362	AdditiveExpression	mb_xy - s -> mb_stride		8080160	1		-			
ANR	8081363	Identifier	mb_xy		8080160	0					
ANR	8081364	PtrMemberAccess	s -> mb_stride		8080160	1					
ANR	8081365	Identifier	s		8080160	0					
ANR	8081366	Identifier	mb_stride		8080160	1					
ANR	8081367	PrimaryExpression	6		8080160	1					
ANR	8081368	ExpressionStatement	h -> intra4x4_pred_mode_cache [ 7 + 8 * 0 ] = h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 3 ]	247:16:5569:5652	8080160	3	True				
ANR	8081369	AssignmentExpression	h -> intra4x4_pred_mode_cache [ 7 + 8 * 0 ] = h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 3 ]		8080160	0		=			
ANR	8081370	ArrayIndexing	h -> intra4x4_pred_mode_cache [ 7 + 8 * 0 ]		8080160	0					
ANR	8081371	PtrMemberAccess	h -> intra4x4_pred_mode_cache		8080160	0					
ANR	8081372	Identifier	h		8080160	0					
ANR	8081373	Identifier	intra4x4_pred_mode_cache		8080160	1					
ANR	8081374	AdditiveExpression	7 + 8 * 0		8080160	1		+			
ANR	8081375	PrimaryExpression	7		8080160	0					
ANR	8081376	MultiplicativeExpression	8 * 0		8080160	1		*			
ANR	8081377	PrimaryExpression	8		8080160	0					
ANR	8081378	PrimaryExpression	0		8080160	1					
ANR	8081379	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ] [ 3 ]		8080160	1					
ANR	8081380	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy - s -> mb_stride ]		8080160	0					
ANR	8081381	PtrMemberAccess	h -> intra4x4_pred_mode		8080160	0					
ANR	8081382	Identifier	h		8080160	0					
ANR	8081383	Identifier	intra4x4_pred_mode		8080160	1					
ANR	8081384	AdditiveExpression	mb_xy - s -> mb_stride		8080160	1		-			
ANR	8081385	Identifier	mb_xy		8080160	0					
ANR	8081386	PtrMemberAccess	s -> mb_stride		8080160	1					
ANR	8081387	Identifier	s		8080160	0					
ANR	8081388	Identifier	mb_stride		8080160	1					
ANR	8081389	PrimaryExpression	3		8080160	1					
ANR	8081390	IfStatement	if ( h -> intra4x4_pred_mode_cache [ 4 + 8 * 0 ] == - 1 )		8080160	4					
ANR	8081391	Condition	h -> intra4x4_pred_mode_cache [ 4 + 8 * 0 ] == - 1	251:20:5677:5716	8080160	0	True				
ANR	8081392	EqualityExpression	h -> intra4x4_pred_mode_cache [ 4 + 8 * 0 ] == - 1		8080160	0		==			
ANR	8081393	ArrayIndexing	h -> intra4x4_pred_mode_cache [ 4 + 8 * 0 ]		8080160	0					
ANR	8081394	PtrMemberAccess	h -> intra4x4_pred_mode_cache		8080160	0					
ANR	8081395	Identifier	h		8080160	0					
ANR	8081396	Identifier	intra4x4_pred_mode_cache		8080160	1					
ANR	8081397	AdditiveExpression	4 + 8 * 0		8080160	1		+			
ANR	8081398	PrimaryExpression	4		8080160	0					
ANR	8081399	MultiplicativeExpression	8 * 0		8080160	1		*			
ANR	8081400	PrimaryExpression	8		8080160	0					
ANR	8081401	PrimaryExpression	0		8080160	1					
ANR	8081402	UnaryOperationExpression	- 1		8080160	1					
ANR	8081403	UnaryOperator	-		8080160	0					
ANR	8081404	PrimaryExpression	1		8080160	1					
ANR	8081405	CompoundStatement		249:62:5653:5653	8080160	1					
ANR	8081406	ExpressionStatement	h -> top_samples_available = 0x33FF	253:20:5742:5775	8080160	0	True				
ANR	8081407	AssignmentExpression	h -> top_samples_available = 0x33FF		8080160	0		=			
ANR	8081408	PtrMemberAccess	h -> top_samples_available		8080160	0					
ANR	8081409	Identifier	h		8080160	0					
ANR	8081410	Identifier	top_samples_available		8080160	1					
ANR	8081411	PrimaryExpression	0x33FF		8080160	1					
ANR	8081412	ForStatement	for ( i = 0 ; i < 16 ; i += 2 )		8080160	2					
ANR	8081413	ForInit	i = 0 ;	263:17:5890:5895	8080160	0	True				
ANR	8081414	AssignmentExpression	i = 0		8080160	0		=			
ANR	8081415	Identifier	i		8080160	0					
ANR	8081416	PrimaryExpression	0		8080160	1					
ANR	8081417	Condition	i < 16	263:24:5897:5902	8080160	1	True				
ANR	8081418	RelationalExpression	i < 16		8080160	0		<			
ANR	8081419	Identifier	i		8080160	0					
ANR	8081420	PrimaryExpression	16		8080160	1					
ANR	8081421	AssignmentExpression	i += 2	263:32:5905:5908	8080160	2	True	+=			
ANR	8081422	Identifier	i		8080160	0					
ANR	8081423	PrimaryExpression	2		8080160	1					
ANR	8081424	CompoundStatement		261:38:5845:5845	8080160	3					
ANR	8081425	ExpressionStatement	vlc = svq3_get_ue_golomb ( & s -> gb )	265:16:5930:5962	8080160	0	True				
ANR	8081426	AssignmentExpression	vlc = svq3_get_ue_golomb ( & s -> gb )		8080160	0		=			
ANR	8081427	Identifier	vlc		8080160	0					
ANR	8081428	CallExpression	svq3_get_ue_golomb ( & s -> gb )		8080160	1					
ANR	8081429	Callee	svq3_get_ue_golomb		8080160	0					
ANR	8081430	Identifier	svq3_get_ue_golomb		8080160	0					
ANR	8081431	ArgumentList	& s -> gb		8080160	1					
ANR	8081432	Argument	& s -> gb		8080160	0					
ANR	8081433	UnaryOperationExpression	& s -> gb		8080160	0					
ANR	8081434	UnaryOperator	&		8080160	0					
ANR	8081435	PtrMemberAccess	s -> gb		8080160	1					
ANR	8081436	Identifier	s		8080160	0					
ANR	8081437	Identifier	gb		8080160	1					
ANR	8081438	IfStatement	if ( vlc >= 25 )		8080160	1					
ANR	8081439	Condition	vlc >= 25	269:20:5987:5995	8080160	0	True				
ANR	8081440	RelationalExpression	vlc >= 25		8080160	0		>=			
ANR	8081441	Identifier	vlc		8080160	0					
ANR	8081442	PrimaryExpression	25		8080160	1					
ANR	8081443	CompoundStatement		267:30:5931:5931	8080160	1					
ANR	8081444	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""luma prediction:%d\\n"" , vlc )"	271:20:6020:6081	8080160	0	True				
ANR	8081445	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""luma prediction:%d\\n"" , vlc )"		8080160	0					
ANR	8081446	Callee	av_log		8080160	0					
ANR	8081447	Identifier	av_log		8080160	0					
ANR	8081448	ArgumentList	h -> s . avctx		8080160	1					
ANR	8081449	Argument	h -> s . avctx		8080160	0					
ANR	8081450	MemberAccess	h -> s . avctx		8080160	0					
ANR	8081451	PtrMemberAccess	h -> s		8080160	0					
ANR	8081452	Identifier	h		8080160	0					
ANR	8081453	Identifier	s		8080160	1					
ANR	8081454	Identifier	avctx		8080160	1					
ANR	8081455	Argument	AV_LOG_ERROR		8080160	1					
ANR	8081456	Identifier	AV_LOG_ERROR		8080160	0					
ANR	8081457	Argument	"""luma prediction:%d\\n"""		8080160	2					
ANR	8081458	PrimaryExpression	"""luma prediction:%d\\n"""		8080160	0					
ANR	8081459	Argument	vlc		8080160	3					
ANR	8081460	Identifier	vlc		8080160	0					
ANR	8081461	ReturnStatement	return - 1 ;	273:20:6104:6113	8080160	1	True				
ANR	8081462	UnaryOperationExpression	- 1		8080160	0					
ANR	8081463	UnaryOperator	-		8080160	0					
ANR	8081464	PrimaryExpression	1		8080160	1					
ANR	8081465	ExpressionStatement	left = & h -> intra4x4_pred_mode_cache [ scan8 [ i ] - 1 ]	279:16:6153:6205	8080160	2	True				
ANR	8081466	AssignmentExpression	left = & h -> intra4x4_pred_mode_cache [ scan8 [ i ] - 1 ]		8080160	0		=			
ANR	8081467	Identifier	left		8080160	0					
ANR	8081468	UnaryOperationExpression	& h -> intra4x4_pred_mode_cache [ scan8 [ i ] - 1 ]		8080160	1					
ANR	8081469	UnaryOperator	&		8080160	0					
ANR	8081470	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ i ] - 1 ]		8080160	1					
ANR	8081471	PtrMemberAccess	h -> intra4x4_pred_mode_cache		8080160	0					
ANR	8081472	Identifier	h		8080160	0					
ANR	8081473	Identifier	intra4x4_pred_mode_cache		8080160	1					
ANR	8081474	AdditiveExpression	scan8 [ i ] - 1		8080160	1		-			
ANR	8081475	ArrayIndexing	scan8 [ i ]		8080160	0					
ANR	8081476	Identifier	scan8		8080160	0					
ANR	8081477	Identifier	i		8080160	1					
ANR	8081478	PrimaryExpression	1		8080160	1					
ANR	8081479	ExpressionStatement	top = & h -> intra4x4_pred_mode_cache [ scan8 [ i ] - 8 ]	281:16:6224:6276	8080160	3	True				
ANR	8081480	AssignmentExpression	top = & h -> intra4x4_pred_mode_cache [ scan8 [ i ] - 8 ]		8080160	0		=			
ANR	8081481	Identifier	top		8080160	0					
ANR	8081482	UnaryOperationExpression	& h -> intra4x4_pred_mode_cache [ scan8 [ i ] - 8 ]		8080160	1					
ANR	8081483	UnaryOperator	&		8080160	0					
ANR	8081484	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ i ] - 8 ]		8080160	1					
ANR	8081485	PtrMemberAccess	h -> intra4x4_pred_mode_cache		8080160	0					
ANR	8081486	Identifier	h		8080160	0					
ANR	8081487	Identifier	intra4x4_pred_mode_cache		8080160	1					
ANR	8081488	AdditiveExpression	scan8 [ i ] - 8		8080160	1		-			
ANR	8081489	ArrayIndexing	scan8 [ i ]		8080160	0					
ANR	8081490	Identifier	scan8		8080160	0					
ANR	8081491	Identifier	i		8080160	1					
ANR	8081492	PrimaryExpression	8		8080160	1					
ANR	8081493	ExpressionStatement	left [ 1 ] = svq3_pred_1 [ top [ 0 ] + 1 ] [ left [ 0 ] + 1 ] [ svq3_pred_0 [ vlc ] [ 0 ] ]	285:16:6297:6364	8080160	4	True				
ANR	8081494	AssignmentExpression	left [ 1 ] = svq3_pred_1 [ top [ 0 ] + 1 ] [ left [ 0 ] + 1 ] [ svq3_pred_0 [ vlc ] [ 0 ] ]		8080160	0		=			
ANR	8081495	ArrayIndexing	left [ 1 ]		8080160	0					
ANR	8081496	Identifier	left		8080160	0					
ANR	8081497	PrimaryExpression	1		8080160	1					
ANR	8081498	ArrayIndexing	svq3_pred_1 [ top [ 0 ] + 1 ] [ left [ 0 ] + 1 ] [ svq3_pred_0 [ vlc ] [ 0 ] ]		8080160	1					
ANR	8081499	ArrayIndexing	svq3_pred_1 [ top [ 0 ] + 1 ] [ left [ 0 ] + 1 ]		8080160	0					
ANR	8081500	ArrayIndexing	svq3_pred_1 [ top [ 0 ] + 1 ]		8080160	0					
ANR	8081501	Identifier	svq3_pred_1		8080160	0					
ANR	8081502	AdditiveExpression	top [ 0 ] + 1		8080160	1		+			
ANR	8081503	ArrayIndexing	top [ 0 ]		8080160	0					
ANR	8081504	Identifier	top		8080160	0					
ANR	8081505	PrimaryExpression	0		8080160	1					
ANR	8081506	PrimaryExpression	1		8080160	1					
ANR	8081507	AdditiveExpression	left [ 0 ] + 1		8080160	1		+			
ANR	8081508	ArrayIndexing	left [ 0 ]		8080160	0					
ANR	8081509	Identifier	left		8080160	0					
ANR	8081510	PrimaryExpression	0		8080160	1					
ANR	8081511	PrimaryExpression	1		8080160	1					
ANR	8081512	ArrayIndexing	svq3_pred_0 [ vlc ] [ 0 ]		8080160	1					
ANR	8081513	ArrayIndexing	svq3_pred_0 [ vlc ]		8080160	0					
ANR	8081514	Identifier	svq3_pred_0		8080160	0					
ANR	8081515	Identifier	vlc		8080160	1					
ANR	8081516	PrimaryExpression	0		8080160	1					
ANR	8081517	ExpressionStatement	left [ 2 ] = svq3_pred_1 [ top [ 1 ] + 1 ] [ left [ 1 ] + 1 ] [ svq3_pred_0 [ vlc ] [ 1 ] ]	287:16:6383:6450	8080160	5	True				
ANR	8081518	AssignmentExpression	left [ 2 ] = svq3_pred_1 [ top [ 1 ] + 1 ] [ left [ 1 ] + 1 ] [ svq3_pred_0 [ vlc ] [ 1 ] ]		8080160	0		=			
ANR	8081519	ArrayIndexing	left [ 2 ]		8080160	0					
ANR	8081520	Identifier	left		8080160	0					
ANR	8081521	PrimaryExpression	2		8080160	1					
ANR	8081522	ArrayIndexing	svq3_pred_1 [ top [ 1 ] + 1 ] [ left [ 1 ] + 1 ] [ svq3_pred_0 [ vlc ] [ 1 ] ]		8080160	1					
ANR	8081523	ArrayIndexing	svq3_pred_1 [ top [ 1 ] + 1 ] [ left [ 1 ] + 1 ]		8080160	0					
ANR	8081524	ArrayIndexing	svq3_pred_1 [ top [ 1 ] + 1 ]		8080160	0					
ANR	8081525	Identifier	svq3_pred_1		8080160	0					
ANR	8081526	AdditiveExpression	top [ 1 ] + 1		8080160	1		+			
ANR	8081527	ArrayIndexing	top [ 1 ]		8080160	0					
ANR	8081528	Identifier	top		8080160	0					
ANR	8081529	PrimaryExpression	1		8080160	1					
ANR	8081530	PrimaryExpression	1		8080160	1					
ANR	8081531	AdditiveExpression	left [ 1 ] + 1		8080160	1		+			
ANR	8081532	ArrayIndexing	left [ 1 ]		8080160	0					
ANR	8081533	Identifier	left		8080160	0					
ANR	8081534	PrimaryExpression	1		8080160	1					
ANR	8081535	PrimaryExpression	1		8080160	1					
ANR	8081536	ArrayIndexing	svq3_pred_0 [ vlc ] [ 1 ]		8080160	1					
ANR	8081537	ArrayIndexing	svq3_pred_0 [ vlc ]		8080160	0					
ANR	8081538	Identifier	svq3_pred_0		8080160	0					
ANR	8081539	Identifier	vlc		8080160	1					
ANR	8081540	PrimaryExpression	1		8080160	1					
ANR	8081541	IfStatement	if ( left [ 1 ] == - 1 || left [ 2 ] == - 1 )		8080160	6					
ANR	8081542	Condition	left [ 1 ] == - 1 || left [ 2 ] == - 1	291:20:6475:6504	8080160	0	True				
ANR	8081543	OrExpression	left [ 1 ] == - 1 || left [ 2 ] == - 1		8080160	0		||			
ANR	8081544	EqualityExpression	left [ 1 ] == - 1		8080160	0		==			
ANR	8081545	ArrayIndexing	left [ 1 ]		8080160	0					
ANR	8081546	Identifier	left		8080160	0					
ANR	8081547	PrimaryExpression	1		8080160	1					
ANR	8081548	UnaryOperationExpression	- 1		8080160	1					
ANR	8081549	UnaryOperator	-		8080160	0					
ANR	8081550	PrimaryExpression	1		8080160	1					
ANR	8081551	EqualityExpression	left [ 2 ] == - 1		8080160	1		==			
ANR	8081552	ArrayIndexing	left [ 2 ]		8080160	0					
ANR	8081553	Identifier	left		8080160	0					
ANR	8081554	PrimaryExpression	2		8080160	1					
ANR	8081555	UnaryOperationExpression	- 1		8080160	1					
ANR	8081556	UnaryOperator	-		8080160	0					
ANR	8081557	PrimaryExpression	1		8080160	1					
ANR	8081558	CompoundStatement		289:51:6440:6440	8080160	1					
ANR	8081559	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""weird prediction\\n"" )"	293:20:6529:6583	8080160	0	True				
ANR	8081560	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""weird prediction\\n"" )"		8080160	0					
ANR	8081561	Callee	av_log		8080160	0					
ANR	8081562	Identifier	av_log		8080160	0					
ANR	8081563	ArgumentList	h -> s . avctx		8080160	1					
ANR	8081564	Argument	h -> s . avctx		8080160	0					
ANR	8081565	MemberAccess	h -> s . avctx		8080160	0					
ANR	8081566	PtrMemberAccess	h -> s		8080160	0					
ANR	8081567	Identifier	h		8080160	0					
ANR	8081568	Identifier	s		8080160	1					
ANR	8081569	Identifier	avctx		8080160	1					
ANR	8081570	Argument	AV_LOG_ERROR		8080160	1					
ANR	8081571	Identifier	AV_LOG_ERROR		8080160	0					
ANR	8081572	Argument	"""weird prediction\\n"""		8080160	2					
ANR	8081573	PrimaryExpression	"""weird prediction\\n"""		8080160	0					
ANR	8081574	ReturnStatement	return - 1 ;	295:20:6606:6615	8080160	1	True				
ANR	8081575	UnaryOperationExpression	- 1		8080160	0					
ANR	8081576	UnaryOperator	-		8080160	0					
ANR	8081577	PrimaryExpression	1		8080160	1					
ANR	8081578	ElseStatement	else		8080160	0					
ANR	8081579	CompoundStatement		299:15:6601:6601	8080160	0					
ANR	8081580	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8080160	0					
ANR	8081581	ForInit	i = 0 ;	303:17:6734:6739	8080160	0	True				
ANR	8081582	AssignmentExpression	i = 0		8080160	0		=			
ANR	8081583	Identifier	i		8080160	0					
ANR	8081584	PrimaryExpression	0		8080160	1					
ANR	8081585	Condition	i < 4	303:24:6741:6745	8080160	1	True				
ANR	8081586	RelationalExpression	i < 4		8080160	0		<			
ANR	8081587	Identifier	i		8080160	0					
ANR	8081588	PrimaryExpression	4		8080160	1					
ANR	8081589	PostIncDecOperationExpression	i ++	303:31:6748:6750	8080160	2	True				
ANR	8081590	Identifier	i		8080160	0					
ANR	8081591	IncDec	++		8080160	1					
ANR	8081592	CompoundStatement		301:36:6687:6687	8080160	3					
ANR	8081593	ExpressionStatement	"memset ( & h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ] , DC_PRED , 4 )"	305:16:6772:6836	8080160	0	True				
ANR	8081594	CallExpression	"memset ( & h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ] , DC_PRED , 4 )"		8080160	0					
ANR	8081595	Callee	memset		8080160	0					
ANR	8081596	Identifier	memset		8080160	0					
ANR	8081597	ArgumentList	& h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ]		8080160	1					
ANR	8081598	Argument	& h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ]		8080160	0					
ANR	8081599	UnaryOperationExpression	& h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ]		8080160	0					
ANR	8081600	UnaryOperator	&		8080160	0					
ANR	8081601	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ]		8080160	1					
ANR	8081602	PtrMemberAccess	h -> intra4x4_pred_mode_cache		8080160	0					
ANR	8081603	Identifier	h		8080160	0					
ANR	8081604	Identifier	intra4x4_pred_mode_cache		8080160	1					
ANR	8081605	AdditiveExpression	scan8 [ 0 ] + 8 * i		8080160	1		+			
ANR	8081606	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8081607	Identifier	scan8		8080160	0					
ANR	8081608	PrimaryExpression	0		8080160	1					
ANR	8081609	MultiplicativeExpression	8 * i		8080160	1		*			
ANR	8081610	PrimaryExpression	8		8080160	0					
ANR	8081611	Identifier	i		8080160	1					
ANR	8081612	Argument	DC_PRED		8080160	1					
ANR	8081613	Identifier	DC_PRED		8080160	0					
ANR	8081614	Argument	4		8080160	2					
ANR	8081615	PrimaryExpression	4		8080160	0					
ANR	8081616	ExpressionStatement	ff_h264_write_back_intra_pred_mode ( h )	313:8:6875:6912	8080160	2	True				
ANR	8081617	CallExpression	ff_h264_write_back_intra_pred_mode ( h )		8080160	0					
ANR	8081618	Callee	ff_h264_write_back_intra_pred_mode		8080160	0					
ANR	8081619	Identifier	ff_h264_write_back_intra_pred_mode		8080160	0					
ANR	8081620	ArgumentList	h		8080160	1					
ANR	8081621	Argument	h		8080160	0					
ANR	8081622	Identifier	h		8080160	0					
ANR	8081623	IfStatement	if ( mb_type == 8 )		8080160	3					
ANR	8081624	Condition	mb_type == 8	317:12:6929:6940	8080160	0	True				
ANR	8081625	EqualityExpression	mb_type == 8		8080160	0		==			
ANR	8081626	Identifier	mb_type		8080160	0					
ANR	8081627	PrimaryExpression	8		8080160	1					
ANR	8081628	CompoundStatement		315:26:6877:6877	8080160	1					
ANR	8081629	ExpressionStatement	ff_h264_check_intra4x4_pred_mode ( h )	319:12:6958:6993	8080160	0	True				
ANR	8081630	CallExpression	ff_h264_check_intra4x4_pred_mode ( h )		8080160	0					
ANR	8081631	Callee	ff_h264_check_intra4x4_pred_mode		8080160	0					
ANR	8081632	Identifier	ff_h264_check_intra4x4_pred_mode		8080160	0					
ANR	8081633	ArgumentList	h		8080160	1					
ANR	8081634	Argument	h		8080160	0					
ANR	8081635	Identifier	h		8080160	0					
ANR	8081636	ExpressionStatement	h -> top_samples_available = ( s -> mb_y == 0 ) ? 0x33FF : 0xFFFF	323:12:7010:7070	8080160	1	True				
ANR	8081637	AssignmentExpression	h -> top_samples_available = ( s -> mb_y == 0 ) ? 0x33FF : 0xFFFF		8080160	0		=			
ANR	8081638	PtrMemberAccess	h -> top_samples_available		8080160	0					
ANR	8081639	Identifier	h		8080160	0					
ANR	8081640	Identifier	top_samples_available		8080160	1					
ANR	8081641	ConditionalExpression	( s -> mb_y == 0 ) ? 0x33FF : 0xFFFF		8080160	1					
ANR	8081642	Condition	s -> mb_y == 0		8080160	0					
ANR	8081643	EqualityExpression	s -> mb_y == 0		8080160	0		==			
ANR	8081644	PtrMemberAccess	s -> mb_y		8080160	0					
ANR	8081645	Identifier	s		8080160	0					
ANR	8081646	Identifier	mb_y		8080160	1					
ANR	8081647	PrimaryExpression	0		8080160	1					
ANR	8081648	PrimaryExpression	0x33FF		8080160	1					
ANR	8081649	PrimaryExpression	0xFFFF		8080160	2					
ANR	8081650	ExpressionStatement	h -> left_samples_available = ( s -> mb_x == 0 ) ? 0x5F5F : 0xFFFF	325:12:7085:7145	8080160	2	True				
ANR	8081651	AssignmentExpression	h -> left_samples_available = ( s -> mb_x == 0 ) ? 0x5F5F : 0xFFFF		8080160	0		=			
ANR	8081652	PtrMemberAccess	h -> left_samples_available		8080160	0					
ANR	8081653	Identifier	h		8080160	0					
ANR	8081654	Identifier	left_samples_available		8080160	1					
ANR	8081655	ConditionalExpression	( s -> mb_x == 0 ) ? 0x5F5F : 0xFFFF		8080160	1					
ANR	8081656	Condition	s -> mb_x == 0		8080160	0					
ANR	8081657	EqualityExpression	s -> mb_x == 0		8080160	0		==			
ANR	8081658	PtrMemberAccess	s -> mb_x		8080160	0					
ANR	8081659	Identifier	s		8080160	0					
ANR	8081660	Identifier	mb_x		8080160	1					
ANR	8081661	PrimaryExpression	0		8080160	1					
ANR	8081662	PrimaryExpression	0x5F5F		8080160	1					
ANR	8081663	PrimaryExpression	0xFFFF		8080160	2					
ANR	8081664	ElseStatement	else		8080160	0					
ANR	8081665	CompoundStatement		325:15:7097:7097	8080160	0					
ANR	8081666	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8080160	0					
ANR	8081667	ForInit	i = 0 ;	329:17:7183:7188	8080160	0	True				
ANR	8081668	AssignmentExpression	i = 0		8080160	0		=			
ANR	8081669	Identifier	i		8080160	0					
ANR	8081670	PrimaryExpression	0		8080160	1					
ANR	8081671	Condition	i < 4	329:24:7190:7194	8080160	1	True				
ANR	8081672	RelationalExpression	i < 4		8080160	0		<			
ANR	8081673	Identifier	i		8080160	0					
ANR	8081674	PrimaryExpression	4		8080160	1					
ANR	8081675	PostIncDecOperationExpression	i ++	329:31:7197:7199	8080160	2	True				
ANR	8081676	Identifier	i		8080160	0					
ANR	8081677	IncDec	++		8080160	1					
ANR	8081678	CompoundStatement		327:36:7136:7136	8080160	3					
ANR	8081679	ExpressionStatement	"memset ( & h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ] , DC_128_PRED , 4 )"	331:16:7221:7289	8080160	0	True				
ANR	8081680	CallExpression	"memset ( & h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ] , DC_128_PRED , 4 )"		8080160	0					
ANR	8081681	Callee	memset		8080160	0					
ANR	8081682	Identifier	memset		8080160	0					
ANR	8081683	ArgumentList	& h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ]		8080160	1					
ANR	8081684	Argument	& h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ]		8080160	0					
ANR	8081685	UnaryOperationExpression	& h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ]		8080160	0					
ANR	8081686	UnaryOperator	&		8080160	0					
ANR	8081687	ArrayIndexing	h -> intra4x4_pred_mode_cache [ scan8 [ 0 ] + 8 * i ]		8080160	1					
ANR	8081688	PtrMemberAccess	h -> intra4x4_pred_mode_cache		8080160	0					
ANR	8081689	Identifier	h		8080160	0					
ANR	8081690	Identifier	intra4x4_pred_mode_cache		8080160	1					
ANR	8081691	AdditiveExpression	scan8 [ 0 ] + 8 * i		8080160	1		+			
ANR	8081692	ArrayIndexing	scan8 [ 0 ]		8080160	0					
ANR	8081693	Identifier	scan8		8080160	0					
ANR	8081694	PrimaryExpression	0		8080160	1					
ANR	8081695	MultiplicativeExpression	8 * i		8080160	1		*			
ANR	8081696	PrimaryExpression	8		8080160	0					
ANR	8081697	Identifier	i		8080160	1					
ANR	8081698	Argument	DC_128_PRED		8080160	1					
ANR	8081699	Identifier	DC_128_PRED		8080160	0					
ANR	8081700	Argument	4		8080160	2					
ANR	8081701	PrimaryExpression	4		8080160	0					
ANR	8081702	ExpressionStatement	h -> top_samples_available = 0x33FF	337:12:7321:7355	8080160	1	True				
ANR	8081703	AssignmentExpression	h -> top_samples_available = 0x33FF		8080160	0		=			
ANR	8081704	PtrMemberAccess	h -> top_samples_available		8080160	0					
ANR	8081705	Identifier	h		8080160	0					
ANR	8081706	Identifier	top_samples_available		8080160	1					
ANR	8081707	PrimaryExpression	0x33FF		8080160	1					
ANR	8081708	ExpressionStatement	h -> left_samples_available = 0x5F5F	339:12:7370:7404	8080160	2	True				
ANR	8081709	AssignmentExpression	h -> left_samples_available = 0x5F5F		8080160	0		=			
ANR	8081710	PtrMemberAccess	h -> left_samples_available		8080160	0					
ANR	8081711	Identifier	h		8080160	0					
ANR	8081712	Identifier	left_samples_available		8080160	1					
ANR	8081713	PrimaryExpression	0x5F5F		8080160	1					
ANR	8081714	ExpressionStatement	mb_type = MB_TYPE_INTRA4x4	345:8:7428:7454	8080160	4	True				
ANR	8081715	AssignmentExpression	mb_type = MB_TYPE_INTRA4x4		8080160	0		=			
ANR	8081716	Identifier	mb_type		8080160	0					
ANR	8081717	Identifier	MB_TYPE_INTRA4x4		8080160	1					
ANR	8081718	ElseStatement	else		8080160	0					
ANR	8081719	CompoundStatement		345:11:7402:7402	8080160	0					
ANR	8081720	ExpressionStatement	dir = i_mb_type_info [ mb_type - 8 ] . pred_mode	349:8:7517:7560	8080160	0	True				
ANR	8081721	AssignmentExpression	dir = i_mb_type_info [ mb_type - 8 ] . pred_mode		8080160	0		=			
ANR	8081722	Identifier	dir		8080160	0					
ANR	8081723	MemberAccess	i_mb_type_info [ mb_type - 8 ] . pred_mode		8080160	1					
ANR	8081724	ArrayIndexing	i_mb_type_info [ mb_type - 8 ]		8080160	0					
ANR	8081725	Identifier	i_mb_type_info		8080160	0					
ANR	8081726	AdditiveExpression	mb_type - 8		8080160	1		-			
ANR	8081727	Identifier	mb_type		8080160	0					
ANR	8081728	PrimaryExpression	8		8080160	1					
ANR	8081729	Identifier	pred_mode		8080160	1					
ANR	8081730	ExpressionStatement	dir = ( dir >> 1 ) ^ 3 * ( dir & 1 ) ^ 1	351:8:7571:7605	8080160	1	True				
ANR	8081731	AssignmentExpression	dir = ( dir >> 1 ) ^ 3 * ( dir & 1 ) ^ 1		8080160	0		=			
ANR	8081732	Identifier	dir		8080160	0					
ANR	8081733	ExclusiveOrExpression	( dir >> 1 ) ^ 3 * ( dir & 1 ) ^ 1		8080160	1		^			
ANR	8081734	ShiftExpression	dir >> 1		8080160	0		>>			
ANR	8081735	Identifier	dir		8080160	0					
ANR	8081736	PrimaryExpression	1		8080160	1					
ANR	8081737	ExclusiveOrExpression	3 * ( dir & 1 ) ^ 1		8080160	1		^			
ANR	8081738	MultiplicativeExpression	3 * ( dir & 1 )		8080160	0		*			
ANR	8081739	PrimaryExpression	3		8080160	0					
ANR	8081740	BitAndExpression	dir & 1		8080160	1		&			
ANR	8081741	Identifier	dir		8080160	0					
ANR	8081742	PrimaryExpression	1		8080160	1					
ANR	8081743	PrimaryExpression	1		8080160	1					
ANR	8081744	IfStatement	"if ( ( h -> intra16x16_pred_mode = ff_h264_check_intra_pred_mode ( h , dir ) ) == - 1 )"		8080160	2					
ANR	8081745	Condition	"( h -> intra16x16_pred_mode = ff_h264_check_intra_pred_mode ( h , dir ) ) == - 1"	355:12:7622:7692	8080160	0	True				
ANR	8081746	EqualityExpression	"( h -> intra16x16_pred_mode = ff_h264_check_intra_pred_mode ( h , dir ) ) == - 1"		8080160	0		==			
ANR	8081747	AssignmentExpression	"h -> intra16x16_pred_mode = ff_h264_check_intra_pred_mode ( h , dir )"		8080160	0		=			
ANR	8081748	PtrMemberAccess	h -> intra16x16_pred_mode		8080160	0					
ANR	8081749	Identifier	h		8080160	0					
ANR	8081750	Identifier	intra16x16_pred_mode		8080160	1					
ANR	8081751	CallExpression	"ff_h264_check_intra_pred_mode ( h , dir )"		8080160	1					
ANR	8081752	Callee	ff_h264_check_intra_pred_mode		8080160	0					
ANR	8081753	Identifier	ff_h264_check_intra_pred_mode		8080160	0					
ANR	8081754	ArgumentList	h		8080160	1					
ANR	8081755	Argument	h		8080160	0					
ANR	8081756	Identifier	h		8080160	0					
ANR	8081757	Argument	dir		8080160	1					
ANR	8081758	Identifier	dir		8080160	0					
ANR	8081759	UnaryOperationExpression	- 1		8080160	1					
ANR	8081760	UnaryOperator	-		8080160	0					
ANR	8081761	PrimaryExpression	1		8080160	1					
ANR	8081762	CompoundStatement		353:84:7628:7628	8080160	1					
ANR	8081763	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""check_intra_pred_mode = -1\\n"" )"	357:12:7709:7773	8080160	0	True				
ANR	8081764	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""check_intra_pred_mode = -1\\n"" )"		8080160	0					
ANR	8081765	Callee	av_log		8080160	0					
ANR	8081766	Identifier	av_log		8080160	0					
ANR	8081767	ArgumentList	h -> s . avctx		8080160	1					
ANR	8081768	Argument	h -> s . avctx		8080160	0					
ANR	8081769	MemberAccess	h -> s . avctx		8080160	0					
ANR	8081770	PtrMemberAccess	h -> s		8080160	0					
ANR	8081771	Identifier	h		8080160	0					
ANR	8081772	Identifier	s		8080160	1					
ANR	8081773	Identifier	avctx		8080160	1					
ANR	8081774	Argument	AV_LOG_ERROR		8080160	1					
ANR	8081775	Identifier	AV_LOG_ERROR		8080160	0					
ANR	8081776	Argument	"""check_intra_pred_mode = -1\\n"""		8080160	2					
ANR	8081777	PrimaryExpression	"""check_intra_pred_mode = -1\\n"""		8080160	0					
ANR	8081778	ReturnStatement	return - 1 ;	359:12:7788:7797	8080160	1	True				
ANR	8081779	UnaryOperationExpression	- 1		8080160	0					
ANR	8081780	UnaryOperator	-		8080160	0					
ANR	8081781	PrimaryExpression	1		8080160	1					
ANR	8081782	ExpressionStatement	cbp = i_mb_type_info [ mb_type - 8 ] . cbp	365:8:7821:7858	8080160	3	True				
ANR	8081783	AssignmentExpression	cbp = i_mb_type_info [ mb_type - 8 ] . cbp		8080160	0		=			
ANR	8081784	Identifier	cbp		8080160	0					
ANR	8081785	MemberAccess	i_mb_type_info [ mb_type - 8 ] . cbp		8080160	1					
ANR	8081786	ArrayIndexing	i_mb_type_info [ mb_type - 8 ]		8080160	0					
ANR	8081787	Identifier	i_mb_type_info		8080160	0					
ANR	8081788	AdditiveExpression	mb_type - 8		8080160	1		-			
ANR	8081789	Identifier	mb_type		8080160	0					
ANR	8081790	PrimaryExpression	8		8080160	1					
ANR	8081791	Identifier	cbp		8080160	1					
ANR	8081792	ExpressionStatement	mb_type = MB_TYPE_INTRA16x16	367:8:7869:7897	8080160	4	True				
ANR	8081793	AssignmentExpression	mb_type = MB_TYPE_INTRA16x16		8080160	0		=			
ANR	8081794	Identifier	mb_type		8080160	0					
ANR	8081795	Identifier	MB_TYPE_INTRA16x16		8080160	1					
ANR	8081796	IfStatement	if ( ! IS_INTER ( mb_type ) && s -> pict_type != FF_I_TYPE )		8080160	14					
ANR	8081797	Condition	! IS_INTER ( mb_type ) && s -> pict_type != FF_I_TYPE	373:8:7917:7963	8080160	0	True				
ANR	8081798	AndExpression	! IS_INTER ( mb_type ) && s -> pict_type != FF_I_TYPE		8080160	0		&&			
ANR	8081799	UnaryOperationExpression	! IS_INTER ( mb_type )		8080160	0					
ANR	8081800	UnaryOperator	!		8080160	0					
ANR	8081801	CallExpression	IS_INTER ( mb_type )		8080160	1					
ANR	8081802	Callee	IS_INTER		8080160	0					
ANR	8081803	Identifier	IS_INTER		8080160	0					
ANR	8081804	ArgumentList	mb_type		8080160	1					
ANR	8081805	Argument	mb_type		8080160	0					
ANR	8081806	Identifier	mb_type		8080160	0					
ANR	8081807	EqualityExpression	s -> pict_type != FF_I_TYPE		8080160	1		!=			
ANR	8081808	PtrMemberAccess	s -> pict_type		8080160	0					
ANR	8081809	Identifier	s		8080160	0					
ANR	8081810	Identifier	pict_type		8080160	1					
ANR	8081811	Identifier	FF_I_TYPE		8080160	1					
ANR	8081812	CompoundStatement		371:57:7900:7900	8080160	1					
ANR	8081813	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8080160	0					
ANR	8081814	ForInit	i = 0 ;	375:13:7982:7987	8080160	0	True				
ANR	8081815	AssignmentExpression	i = 0		8080160	0		=			
ANR	8081816	Identifier	i		8080160	0					
ANR	8081817	PrimaryExpression	0		8080160	1					
ANR	8081818	Condition	i < 4	375:20:7989:7993	8080160	1	True				
ANR	8081819	RelationalExpression	i < 4		8080160	0		<			
ANR	8081820	Identifier	i		8080160	0					
ANR	8081821	PrimaryExpression	4		8080160	1					
ANR	8081822	PostIncDecOperationExpression	i ++	375:27:7996:7998	8080160	2	True				
ANR	8081823	Identifier	i		8080160	0					
ANR	8081824	IncDec	++		8080160	1					
ANR	8081825	CompoundStatement		373:32:7935:7935	8080160	3					
ANR	8081826	ExpressionStatement	"memset ( s -> current_picture . motion_val [ 0 ] [ b_xy + i * h -> b_stride ] , 0 , 4 * 2 * sizeof ( int16_t ) )"	377:12:8016:8102	8080160	0	True				
ANR	8081827	CallExpression	"memset ( s -> current_picture . motion_val [ 0 ] [ b_xy + i * h -> b_stride ] , 0 , 4 * 2 * sizeof ( int16_t ) )"		8080160	0					
ANR	8081828	Callee	memset		8080160	0					
ANR	8081829	Identifier	memset		8080160	0					
ANR	8081830	ArgumentList	s -> current_picture . motion_val [ 0 ] [ b_xy + i * h -> b_stride ]		8080160	1					
ANR	8081831	Argument	s -> current_picture . motion_val [ 0 ] [ b_xy + i * h -> b_stride ]		8080160	0					
ANR	8081832	ArrayIndexing	s -> current_picture . motion_val [ 0 ] [ b_xy + i * h -> b_stride ]		8080160	0					
ANR	8081833	ArrayIndexing	s -> current_picture . motion_val [ 0 ]		8080160	0					
ANR	8081834	MemberAccess	s -> current_picture . motion_val		8080160	0					
ANR	8081835	PtrMemberAccess	s -> current_picture		8080160	0					
ANR	8081836	Identifier	s		8080160	0					
ANR	8081837	Identifier	current_picture		8080160	1					
ANR	8081838	Identifier	motion_val		8080160	1					
ANR	8081839	PrimaryExpression	0		8080160	1					
ANR	8081840	AdditiveExpression	b_xy + i * h -> b_stride		8080160	1		+			
ANR	8081841	Identifier	b_xy		8080160	0					
ANR	8081842	MultiplicativeExpression	i * h -> b_stride		8080160	1		*			
ANR	8081843	Identifier	i		8080160	0					
ANR	8081844	PtrMemberAccess	h -> b_stride		8080160	1					
ANR	8081845	Identifier	h		8080160	0					
ANR	8081846	Identifier	b_stride		8080160	1					
ANR	8081847	Argument	0		8080160	1					
ANR	8081848	PrimaryExpression	0		8080160	0					
ANR	8081849	Argument	4 * 2 * sizeof ( int16_t )		8080160	2					
ANR	8081850	MultiplicativeExpression	4 * 2 * sizeof ( int16_t )		8080160	0		*			
ANR	8081851	PrimaryExpression	4		8080160	0					
ANR	8081852	MultiplicativeExpression	2 * sizeof ( int16_t )		8080160	1		*			
ANR	8081853	PrimaryExpression	2		8080160	0					
ANR	8081854	SizeofExpression	sizeof ( int16_t )		8080160	1					
ANR	8081855	Sizeof	sizeof		8080160	0					
ANR	8081856	SizeofOperand	int16_t		8080160	1					
ANR	8081857	IfStatement	if ( s -> pict_type == FF_B_TYPE )		8080160	1					
ANR	8081858	Condition	s -> pict_type == FF_B_TYPE	381:12:8128:8152	8080160	0	True				
ANR	8081859	EqualityExpression	s -> pict_type == FF_B_TYPE		8080160	0		==			
ANR	8081860	PtrMemberAccess	s -> pict_type		8080160	0					
ANR	8081861	Identifier	s		8080160	0					
ANR	8081862	Identifier	pict_type		8080160	1					
ANR	8081863	Identifier	FF_B_TYPE		8080160	1					
ANR	8081864	CompoundStatement		379:39:8089:8089	8080160	1					
ANR	8081865	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8080160	0					
ANR	8081866	ForInit	i = 0 ;	383:17:8175:8180	8080160	0	True				
ANR	8081867	AssignmentExpression	i = 0		8080160	0		=			
ANR	8081868	Identifier	i		8080160	0					
ANR	8081869	PrimaryExpression	0		8080160	1					
ANR	8081870	Condition	i < 4	383:24:8182:8186	8080160	1	True				
ANR	8081871	RelationalExpression	i < 4		8080160	0		<			
ANR	8081872	Identifier	i		8080160	0					
ANR	8081873	PrimaryExpression	4		8080160	1					
ANR	8081874	PostIncDecOperationExpression	i ++	383:31:8189:8191	8080160	2	True				
ANR	8081875	Identifier	i		8080160	0					
ANR	8081876	IncDec	++		8080160	1					
ANR	8081877	CompoundStatement		381:36:8128:8128	8080160	3					
ANR	8081878	ExpressionStatement	"memset ( s -> current_picture . motion_val [ 1 ] [ b_xy + i * h -> b_stride ] , 0 , 4 * 2 * sizeof ( int16_t ) )"	385:16:8213:8299	8080160	0	True				
ANR	8081879	CallExpression	"memset ( s -> current_picture . motion_val [ 1 ] [ b_xy + i * h -> b_stride ] , 0 , 4 * 2 * sizeof ( int16_t ) )"		8080160	0					
ANR	8081880	Callee	memset		8080160	0					
ANR	8081881	Identifier	memset		8080160	0					
ANR	8081882	ArgumentList	s -> current_picture . motion_val [ 1 ] [ b_xy + i * h -> b_stride ]		8080160	1					
ANR	8081883	Argument	s -> current_picture . motion_val [ 1 ] [ b_xy + i * h -> b_stride ]		8080160	0					
ANR	8081884	ArrayIndexing	s -> current_picture . motion_val [ 1 ] [ b_xy + i * h -> b_stride ]		8080160	0					
ANR	8081885	ArrayIndexing	s -> current_picture . motion_val [ 1 ]		8080160	0					
ANR	8081886	MemberAccess	s -> current_picture . motion_val		8080160	0					
ANR	8081887	PtrMemberAccess	s -> current_picture		8080160	0					
ANR	8081888	Identifier	s		8080160	0					
ANR	8081889	Identifier	current_picture		8080160	1					
ANR	8081890	Identifier	motion_val		8080160	1					
ANR	8081891	PrimaryExpression	1		8080160	1					
ANR	8081892	AdditiveExpression	b_xy + i * h -> b_stride		8080160	1		+			
ANR	8081893	Identifier	b_xy		8080160	0					
ANR	8081894	MultiplicativeExpression	i * h -> b_stride		8080160	1		*			
ANR	8081895	Identifier	i		8080160	0					
ANR	8081896	PtrMemberAccess	h -> b_stride		8080160	1					
ANR	8081897	Identifier	h		8080160	0					
ANR	8081898	Identifier	b_stride		8080160	1					
ANR	8081899	Argument	0		8080160	1					
ANR	8081900	PrimaryExpression	0		8080160	0					
ANR	8081901	Argument	4 * 2 * sizeof ( int16_t )		8080160	2					
ANR	8081902	MultiplicativeExpression	4 * 2 * sizeof ( int16_t )		8080160	0		*			
ANR	8081903	PrimaryExpression	4		8080160	0					
ANR	8081904	MultiplicativeExpression	2 * sizeof ( int16_t )		8080160	1		*			
ANR	8081905	PrimaryExpression	2		8080160	0					
ANR	8081906	SizeofExpression	sizeof ( int16_t )		8080160	1					
ANR	8081907	Sizeof	sizeof		8080160	0					
ANR	8081908	SizeofOperand	int16_t		8080160	1					
ANR	8081909	IfStatement	if ( ! IS_INTRA4x4 ( mb_type ) )		8080160	15					
ANR	8081910	Condition	! IS_INTRA4x4 ( mb_type )	393:8:8343:8363	8080160	0	True				
ANR	8081911	UnaryOperationExpression	! IS_INTRA4x4 ( mb_type )		8080160	0					
ANR	8081912	UnaryOperator	!		8080160	0					
ANR	8081913	CallExpression	IS_INTRA4x4 ( mb_type )		8080160	1					
ANR	8081914	Callee	IS_INTRA4x4		8080160	0					
ANR	8081915	Identifier	IS_INTRA4x4		8080160	0					
ANR	8081916	ArgumentList	mb_type		8080160	1					
ANR	8081917	Argument	mb_type		8080160	0					
ANR	8081918	Identifier	mb_type		8080160	0					
ANR	8081919	CompoundStatement		391:31:8300:8300	8080160	1					
ANR	8081920	ExpressionStatement	"memset ( h -> intra4x4_pred_mode [ mb_xy ] , DC_PRED , 8 )"	395:8:8377:8425	8080160	0	True				
ANR	8081921	CallExpression	"memset ( h -> intra4x4_pred_mode [ mb_xy ] , DC_PRED , 8 )"		8080160	0					
ANR	8081922	Callee	memset		8080160	0					
ANR	8081923	Identifier	memset		8080160	0					
ANR	8081924	ArgumentList	h -> intra4x4_pred_mode [ mb_xy ]		8080160	1					
ANR	8081925	Argument	h -> intra4x4_pred_mode [ mb_xy ]		8080160	0					
ANR	8081926	ArrayIndexing	h -> intra4x4_pred_mode [ mb_xy ]		8080160	0					
ANR	8081927	PtrMemberAccess	h -> intra4x4_pred_mode		8080160	0					
ANR	8081928	Identifier	h		8080160	0					
ANR	8081929	Identifier	intra4x4_pred_mode		8080160	1					
ANR	8081930	Identifier	mb_xy		8080160	1					
ANR	8081931	Argument	DC_PRED		8080160	1					
ANR	8081932	Identifier	DC_PRED		8080160	0					
ANR	8081933	Argument	8		8080160	2					
ANR	8081934	PrimaryExpression	8		8080160	0					
ANR	8081935	IfStatement	if ( ! IS_SKIP ( mb_type ) || s -> pict_type == FF_B_TYPE )		8080160	16					
ANR	8081936	Condition	! IS_SKIP ( mb_type ) || s -> pict_type == FF_B_TYPE	399:8:8443:8488	8080160	0	True				
ANR	8081937	OrExpression	! IS_SKIP ( mb_type ) || s -> pict_type == FF_B_TYPE		8080160	0		||			
ANR	8081938	UnaryOperationExpression	! IS_SKIP ( mb_type )		8080160	0					
ANR	8081939	UnaryOperator	!		8080160	0					
ANR	8081940	CallExpression	IS_SKIP ( mb_type )		8080160	1					
ANR	8081941	Callee	IS_SKIP		8080160	0					
ANR	8081942	Identifier	IS_SKIP		8080160	0					
ANR	8081943	ArgumentList	mb_type		8080160	1					
ANR	8081944	Argument	mb_type		8080160	0					
ANR	8081945	Identifier	mb_type		8080160	0					
ANR	8081946	EqualityExpression	s -> pict_type == FF_B_TYPE		8080160	1		==			
ANR	8081947	PtrMemberAccess	s -> pict_type		8080160	0					
ANR	8081948	Identifier	s		8080160	0					
ANR	8081949	Identifier	pict_type		8080160	1					
ANR	8081950	Identifier	FF_B_TYPE		8080160	1					
ANR	8081951	CompoundStatement		397:56:8425:8425	8080160	1					
ANR	8081952	ExpressionStatement	"memset ( h -> non_zero_count_cache + 8 , 0 , 4 * 9 * sizeof ( uint8_t ) )"	401:8:8502:8561	8080160	0	True				
ANR	8081953	CallExpression	"memset ( h -> non_zero_count_cache + 8 , 0 , 4 * 9 * sizeof ( uint8_t ) )"		8080160	0					
ANR	8081954	Callee	memset		8080160	0					
ANR	8081955	Identifier	memset		8080160	0					
ANR	8081956	ArgumentList	h -> non_zero_count_cache + 8		8080160	1					
ANR	8081957	Argument	h -> non_zero_count_cache + 8		8080160	0					
ANR	8081958	AdditiveExpression	h -> non_zero_count_cache + 8		8080160	0		+			
ANR	8081959	PtrMemberAccess	h -> non_zero_count_cache		8080160	0					
ANR	8081960	Identifier	h		8080160	0					
ANR	8081961	Identifier	non_zero_count_cache		8080160	1					
ANR	8081962	PrimaryExpression	8		8080160	1					
ANR	8081963	Argument	0		8080160	1					
ANR	8081964	PrimaryExpression	0		8080160	0					
ANR	8081965	Argument	4 * 9 * sizeof ( uint8_t )		8080160	2					
ANR	8081966	MultiplicativeExpression	4 * 9 * sizeof ( uint8_t )		8080160	0		*			
ANR	8081967	PrimaryExpression	4		8080160	0					
ANR	8081968	MultiplicativeExpression	9 * sizeof ( uint8_t )		8080160	1		*			
ANR	8081969	PrimaryExpression	9		8080160	0					
ANR	8081970	SizeofExpression	sizeof ( uint8_t )		8080160	1					
ANR	8081971	Sizeof	sizeof		8080160	0					
ANR	8081972	SizeofOperand	uint8_t		8080160	1					
ANR	8081973	ExpressionStatement	s -> dsp . clear_blocks ( h -> mb )	403:8:8572:8598	8080160	1	True				
ANR	8081974	CallExpression	s -> dsp . clear_blocks ( h -> mb )		8080160	0					
ANR	8081975	Callee	s -> dsp . clear_blocks		8080160	0					
ANR	8081976	MemberAccess	s -> dsp . clear_blocks		8080160	0					
ANR	8081977	PtrMemberAccess	s -> dsp		8080160	0					
ANR	8081978	Identifier	s		8080160	0					
ANR	8081979	Identifier	dsp		8080160	1					
ANR	8081980	Identifier	clear_blocks		8080160	1					
ANR	8081981	ArgumentList	h -> mb		8080160	1					
ANR	8081982	Argument	h -> mb		8080160	0					
ANR	8081983	PtrMemberAccess	h -> mb		8080160	0					
ANR	8081984	Identifier	h		8080160	0					
ANR	8081985	Identifier	mb		8080160	1					
ANR	8081986	IfStatement	if ( ! IS_INTRA16x16 ( mb_type ) && ( ! IS_SKIP ( mb_type ) || s -> pict_type == FF_B_TYPE ) )		8080160	17					
ANR	8081987	Condition	! IS_INTRA16x16 ( mb_type ) && ( ! IS_SKIP ( mb_type ) || s -> pict_type == FF_B_TYPE )	409:8:8618:8692	8080160	0	True				
ANR	8081988	AndExpression	! IS_INTRA16x16 ( mb_type ) && ( ! IS_SKIP ( mb_type ) || s -> pict_type == FF_B_TYPE )		8080160	0		&&			
ANR	8081989	UnaryOperationExpression	! IS_INTRA16x16 ( mb_type )		8080160	0					
ANR	8081990	UnaryOperator	!		8080160	0					
ANR	8081991	CallExpression	IS_INTRA16x16 ( mb_type )		8080160	1					
ANR	8081992	Callee	IS_INTRA16x16		8080160	0					
ANR	8081993	Identifier	IS_INTRA16x16		8080160	0					
ANR	8081994	ArgumentList	mb_type		8080160	1					
ANR	8081995	Argument	mb_type		8080160	0					
ANR	8081996	Identifier	mb_type		8080160	0					
ANR	8081997	OrExpression	! IS_SKIP ( mb_type ) || s -> pict_type == FF_B_TYPE		8080160	1		||			
ANR	8081998	UnaryOperationExpression	! IS_SKIP ( mb_type )		8080160	0					
ANR	8081999	UnaryOperator	!		8080160	0					
ANR	8082000	CallExpression	IS_SKIP ( mb_type )		8080160	1					
ANR	8082001	Callee	IS_SKIP		8080160	0					
ANR	8082002	Identifier	IS_SKIP		8080160	0					
ANR	8082003	ArgumentList	mb_type		8080160	1					
ANR	8082004	Argument	mb_type		8080160	0					
ANR	8082005	Identifier	mb_type		8080160	0					
ANR	8082006	EqualityExpression	s -> pict_type == FF_B_TYPE		8080160	1		==			
ANR	8082007	PtrMemberAccess	s -> pict_type		8080160	0					
ANR	8082008	Identifier	s		8080160	0					
ANR	8082009	Identifier	pict_type		8080160	1					
ANR	8082010	Identifier	FF_B_TYPE		8080160	1					
ANR	8082011	CompoundStatement		407:85:8629:8629	8080160	1					
ANR	8082012	IfStatement	if ( ( vlc = svq3_get_ue_golomb ( & s -> gb ) ) >= 48 )		8080160	0					
ANR	8082013	Condition	( vlc = svq3_get_ue_golomb ( & s -> gb ) ) >= 48	411:12:8710:8749	8080160	0	True				
ANR	8082014	RelationalExpression	( vlc = svq3_get_ue_golomb ( & s -> gb ) ) >= 48		8080160	0		>=			
ANR	8082015	AssignmentExpression	vlc = svq3_get_ue_golomb ( & s -> gb )		8080160	0		=			
ANR	8082016	Identifier	vlc		8080160	0					
ANR	8082017	CallExpression	svq3_get_ue_golomb ( & s -> gb )		8080160	1					
ANR	8082018	Callee	svq3_get_ue_golomb		8080160	0					
ANR	8082019	Identifier	svq3_get_ue_golomb		8080160	0					
ANR	8082020	ArgumentList	& s -> gb		8080160	1					
ANR	8082021	Argument	& s -> gb		8080160	0					
ANR	8082022	UnaryOperationExpression	& s -> gb		8080160	0					
ANR	8082023	UnaryOperator	&		8080160	0					
ANR	8082024	PtrMemberAccess	s -> gb		8080160	1					
ANR	8082025	Identifier	s		8080160	0					
ANR	8082026	Identifier	gb		8080160	1					
ANR	8082027	PrimaryExpression	48		8080160	1					
ANR	8082028	CompoundStatement		409:53:8685:8685	8080160	1					
ANR	8082029	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""cbp_vlc=%d\\n"" , vlc )"	413:12:8766:8819	8080160	0	True				
ANR	8082030	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""cbp_vlc=%d\\n"" , vlc )"		8080160	0					
ANR	8082031	Callee	av_log		8080160	0					
ANR	8082032	Identifier	av_log		8080160	0					
ANR	8082033	ArgumentList	h -> s . avctx		8080160	1					
ANR	8082034	Argument	h -> s . avctx		8080160	0					
ANR	8082035	MemberAccess	h -> s . avctx		8080160	0					
ANR	8082036	PtrMemberAccess	h -> s		8080160	0					
ANR	8082037	Identifier	h		8080160	0					
ANR	8082038	Identifier	s		8080160	1					
ANR	8082039	Identifier	avctx		8080160	1					
ANR	8082040	Argument	AV_LOG_ERROR		8080160	1					
ANR	8082041	Identifier	AV_LOG_ERROR		8080160	0					
ANR	8082042	Argument	"""cbp_vlc=%d\\n"""		8080160	2					
ANR	8082043	PrimaryExpression	"""cbp_vlc=%d\\n"""		8080160	0					
ANR	8082044	Argument	vlc		8080160	3					
ANR	8082045	Identifier	vlc		8080160	0					
ANR	8082046	ReturnStatement	return - 1 ;	415:12:8834:8843	8080160	1	True				
ANR	8082047	UnaryOperationExpression	- 1		8080160	0					
ANR	8082048	UnaryOperator	-		8080160	0					
ANR	8082049	PrimaryExpression	1		8080160	1					
ANR	8082050	ExpressionStatement	cbp = IS_INTRA ( mb_type ) ? golomb_to_intra4x4_cbp [ vlc ] : golomb_to_inter_cbp [ vlc ]	421:8:8867:8947	8080160	1	True				
ANR	8082051	AssignmentExpression	cbp = IS_INTRA ( mb_type ) ? golomb_to_intra4x4_cbp [ vlc ] : golomb_to_inter_cbp [ vlc ]		8080160	0		=			
ANR	8082052	Identifier	cbp		8080160	0					
ANR	8082053	ConditionalExpression	IS_INTRA ( mb_type ) ? golomb_to_intra4x4_cbp [ vlc ] : golomb_to_inter_cbp [ vlc ]		8080160	1					
ANR	8082054	Condition	IS_INTRA ( mb_type )		8080160	0					
ANR	8082055	CallExpression	IS_INTRA ( mb_type )		8080160	0					
ANR	8082056	Callee	IS_INTRA		8080160	0					
ANR	8082057	Identifier	IS_INTRA		8080160	0					
ANR	8082058	ArgumentList	mb_type		8080160	1					
ANR	8082059	Argument	mb_type		8080160	0					
ANR	8082060	Identifier	mb_type		8080160	0					
ANR	8082061	ArrayIndexing	golomb_to_intra4x4_cbp [ vlc ]		8080160	1					
ANR	8082062	Identifier	golomb_to_intra4x4_cbp		8080160	0					
ANR	8082063	Identifier	vlc		8080160	1					
ANR	8082064	ArrayIndexing	golomb_to_inter_cbp [ vlc ]		8080160	2					
ANR	8082065	Identifier	golomb_to_inter_cbp		8080160	0					
ANR	8082066	Identifier	vlc		8080160	1					
ANR	8082067	IfStatement	if ( IS_INTRA16x16 ( mb_type ) || ( s -> pict_type != FF_I_TYPE && s -> adaptive_quant && cbp ) )		8080160	18					
ANR	8082068	Condition	IS_INTRA16x16 ( mb_type ) || ( s -> pict_type != FF_I_TYPE && s -> adaptive_quant && cbp )	425:8:8965:9045	8080160	0	True				
ANR	8082069	OrExpression	IS_INTRA16x16 ( mb_type ) || ( s -> pict_type != FF_I_TYPE && s -> adaptive_quant && cbp )		8080160	0		||			
ANR	8082070	CallExpression	IS_INTRA16x16 ( mb_type )		8080160	0					
ANR	8082071	Callee	IS_INTRA16x16		8080160	0					
ANR	8082072	Identifier	IS_INTRA16x16		8080160	0					
ANR	8082073	ArgumentList	mb_type		8080160	1					
ANR	8082074	Argument	mb_type		8080160	0					
ANR	8082075	Identifier	mb_type		8080160	0					
ANR	8082076	AndExpression	s -> pict_type != FF_I_TYPE && s -> adaptive_quant && cbp		8080160	1		&&			
ANR	8082077	EqualityExpression	s -> pict_type != FF_I_TYPE		8080160	0		!=			
ANR	8082078	PtrMemberAccess	s -> pict_type		8080160	0					
ANR	8082079	Identifier	s		8080160	0					
ANR	8082080	Identifier	pict_type		8080160	1					
ANR	8082081	Identifier	FF_I_TYPE		8080160	1					
ANR	8082082	AndExpression	s -> adaptive_quant && cbp		8080160	1		&&			
ANR	8082083	PtrMemberAccess	s -> adaptive_quant		8080160	0					
ANR	8082084	Identifier	s		8080160	0					
ANR	8082085	Identifier	adaptive_quant		8080160	1					
ANR	8082086	Identifier	cbp		8080160	1					
ANR	8082087	CompoundStatement		423:91:8982:8982	8080160	1					
ANR	8082088	ExpressionStatement	s -> qscale += svq3_get_se_golomb ( & s -> gb )	427:8:9059:9098	8080160	0	True				
ANR	8082089	AssignmentExpression	s -> qscale += svq3_get_se_golomb ( & s -> gb )		8080160	0		+=			
ANR	8082090	PtrMemberAccess	s -> qscale		8080160	0					
ANR	8082091	Identifier	s		8080160	0					
ANR	8082092	Identifier	qscale		8080160	1					
ANR	8082093	CallExpression	svq3_get_se_golomb ( & s -> gb )		8080160	1					
ANR	8082094	Callee	svq3_get_se_golomb		8080160	0					
ANR	8082095	Identifier	svq3_get_se_golomb		8080160	0					
ANR	8082096	ArgumentList	& s -> gb		8080160	1					
ANR	8082097	Argument	& s -> gb		8080160	0					
ANR	8082098	UnaryOperationExpression	& s -> gb		8080160	0					
ANR	8082099	UnaryOperator	&		8080160	0					
ANR	8082100	PtrMemberAccess	s -> gb		8080160	1					
ANR	8082101	Identifier	s		8080160	0					
ANR	8082102	Identifier	gb		8080160	1					
ANR	8082103	IfStatement	if ( s -> qscale > 31 )		8080160	1					
ANR	8082104	Condition	s -> qscale > 31	431:12:9115:9128	8080160	0	True				
ANR	8082105	RelationalExpression	s -> qscale > 31		8080160	0		>			
ANR	8082106	PtrMemberAccess	s -> qscale		8080160	0					
ANR	8082107	Identifier	s		8080160	0					
ANR	8082108	Identifier	qscale		8080160	1					
ANR	8082109	PrimaryExpression	31		8080160	1					
ANR	8082110	CompoundStatement		429:27:9064:9064	8080160	1					
ANR	8082111	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""qscale:%d\\n"" , s -> qscale )"	433:12:9145:9203	8080160	0	True				
ANR	8082112	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""qscale:%d\\n"" , s -> qscale )"		8080160	0					
ANR	8082113	Callee	av_log		8080160	0					
ANR	8082114	Identifier	av_log		8080160	0					
ANR	8082115	ArgumentList	h -> s . avctx		8080160	1					
ANR	8082116	Argument	h -> s . avctx		8080160	0					
ANR	8082117	MemberAccess	h -> s . avctx		8080160	0					
ANR	8082118	PtrMemberAccess	h -> s		8080160	0					
ANR	8082119	Identifier	h		8080160	0					
ANR	8082120	Identifier	s		8080160	1					
ANR	8082121	Identifier	avctx		8080160	1					
ANR	8082122	Argument	AV_LOG_ERROR		8080160	1					
ANR	8082123	Identifier	AV_LOG_ERROR		8080160	0					
ANR	8082124	Argument	"""qscale:%d\\n"""		8080160	2					
ANR	8082125	PrimaryExpression	"""qscale:%d\\n"""		8080160	0					
ANR	8082126	Argument	s -> qscale		8080160	3					
ANR	8082127	PtrMemberAccess	s -> qscale		8080160	0					
ANR	8082128	Identifier	s		8080160	0					
ANR	8082129	Identifier	qscale		8080160	1					
ANR	8082130	ReturnStatement	return - 1 ;	435:12:9218:9227	8080160	1	True				
ANR	8082131	UnaryOperationExpression	- 1		8080160	0					
ANR	8082132	UnaryOperator	-		8080160	0					
ANR	8082133	PrimaryExpression	1		8080160	1					
ANR	8082134	IfStatement	if ( IS_INTRA16x16 ( mb_type ) )		8080160	19					
ANR	8082135	Condition	IS_INTRA16x16 ( mb_type )	441:8:9256:9277	8080160	0	True				
ANR	8082136	CallExpression	IS_INTRA16x16 ( mb_type )		8080160	0					
ANR	8082137	Callee	IS_INTRA16x16		8080160	0					
ANR	8082138	Identifier	IS_INTRA16x16		8080160	0					
ANR	8082139	ArgumentList	mb_type		8080160	1					
ANR	8082140	Argument	mb_type		8080160	0					
ANR	8082141	Identifier	mb_type		8080160	0					
ANR	8082142	CompoundStatement		439:32:9214:9214	8080160	1					
ANR	8082143	IfStatement	"if ( svq3_decode_block ( & s -> gb , h -> mb , 0 , 0 ) )"		8080160	0					
ANR	8082144	Condition	"svq3_decode_block ( & s -> gb , h -> mb , 0 , 0 )"	443:12:9295:9332	8080160	0	True				
ANR	8082145	CallExpression	"svq3_decode_block ( & s -> gb , h -> mb , 0 , 0 )"		8080160	0					
ANR	8082146	Callee	svq3_decode_block		8080160	0					
ANR	8082147	Identifier	svq3_decode_block		8080160	0					
ANR	8082148	ArgumentList	& s -> gb		8080160	1					
ANR	8082149	Argument	& s -> gb		8080160	0					
ANR	8082150	UnaryOperationExpression	& s -> gb		8080160	0					
ANR	8082151	UnaryOperator	&		8080160	0					
ANR	8082152	PtrMemberAccess	s -> gb		8080160	1					
ANR	8082153	Identifier	s		8080160	0					
ANR	8082154	Identifier	gb		8080160	1					
ANR	8082155	Argument	h -> mb		8080160	1					
ANR	8082156	PtrMemberAccess	h -> mb		8080160	0					
ANR	8082157	Identifier	h		8080160	0					
ANR	8082158	Identifier	mb		8080160	1					
ANR	8082159	Argument	0		8080160	2					
ANR	8082160	PrimaryExpression	0		8080160	0					
ANR	8082161	Argument	0		8080160	3					
ANR	8082162	PrimaryExpression	0		8080160	0					
ANR	8082163	CompoundStatement		441:51:9268:9268	8080160	1					
ANR	8082164	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""error while decoding intra luma dc\\n"" )"	445:12:9349:9421	8080160	0	True				
ANR	8082165	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""error while decoding intra luma dc\\n"" )"		8080160	0					
ANR	8082166	Callee	av_log		8080160	0					
ANR	8082167	Identifier	av_log		8080160	0					
ANR	8082168	ArgumentList	h -> s . avctx		8080160	1					
ANR	8082169	Argument	h -> s . avctx		8080160	0					
ANR	8082170	MemberAccess	h -> s . avctx		8080160	0					
ANR	8082171	PtrMemberAccess	h -> s		8080160	0					
ANR	8082172	Identifier	h		8080160	0					
ANR	8082173	Identifier	s		8080160	1					
ANR	8082174	Identifier	avctx		8080160	1					
ANR	8082175	Argument	AV_LOG_ERROR		8080160	1					
ANR	8082176	Identifier	AV_LOG_ERROR		8080160	0					
ANR	8082177	Argument	"""error while decoding intra luma dc\\n"""		8080160	2					
ANR	8082178	PrimaryExpression	"""error while decoding intra luma dc\\n"""		8080160	0					
ANR	8082179	ReturnStatement	return - 1 ;	447:12:9436:9445	8080160	1	True				
ANR	8082180	UnaryOperationExpression	- 1		8080160	0					
ANR	8082181	UnaryOperator	-		8080160	0					
ANR	8082182	PrimaryExpression	1		8080160	1					
ANR	8082183	IfStatement	if ( cbp )		8080160	20					
ANR	8082184	Condition	cbp	455:8:9476:9478	8080160	0	True				
ANR	8082185	Identifier	cbp		8080160	0					
ANR	8082186	CompoundStatement		457:8:9485:9552	8080160	1					
ANR	8082187	IdentifierDeclStatement	const int index = IS_INTRA16x16 ( mb_type ) ? 1 : 0 ;	457:8:9492:9540	8080160	0	True				
ANR	8082188	IdentifierDecl	index = IS_INTRA16x16 ( mb_type ) ? 1 : 0		8080160	0					
ANR	8082189	IdentifierDeclType	const int		8080160	0					
ANR	8082190	Identifier	index		8080160	1					
ANR	8082191	AssignmentExpression	index = IS_INTRA16x16 ( mb_type ) ? 1 : 0		8080160	2		=			
ANR	8082192	Identifier	index		8080160	0					
ANR	8082193	ConditionalExpression	IS_INTRA16x16 ( mb_type ) ? 1 : 0		8080160	1					
ANR	8082194	Condition	IS_INTRA16x16 ( mb_type )		8080160	0					
ANR	8082195	CallExpression	IS_INTRA16x16 ( mb_type )		8080160	0					
ANR	8082196	Callee	IS_INTRA16x16		8080160	0					
ANR	8082197	Identifier	IS_INTRA16x16		8080160	0					
ANR	8082198	ArgumentList	mb_type		8080160	1					
ANR	8082199	Argument	mb_type		8080160	0					
ANR	8082200	Identifier	mb_type		8080160	0					
ANR	8082201	PrimaryExpression	1		8080160	1					
ANR	8082202	PrimaryExpression	0		8080160	2					
ANR	8082203	IdentifierDeclStatement	const int type = ( ( s -> qscale < 24 && IS_INTRA4x4 ( mb_type ) ) ? 2 : 1 ) ;	459:8:9551:9618	8080160	1	True				
ANR	8082204	IdentifierDecl	type = ( ( s -> qscale < 24 && IS_INTRA4x4 ( mb_type ) ) ? 2 : 1 )		8080160	0					
ANR	8082205	IdentifierDeclType	const int		8080160	0					
ANR	8082206	Identifier	type		8080160	1					
ANR	8082207	AssignmentExpression	type = ( ( s -> qscale < 24 && IS_INTRA4x4 ( mb_type ) ) ? 2 : 1 )		8080160	2		=			
ANR	8082208	Identifier	type		8080160	0					
ANR	8082209	ConditionalExpression	( s -> qscale < 24 && IS_INTRA4x4 ( mb_type ) ) ? 2 : 1		8080160	1					
ANR	8082210	Condition	s -> qscale < 24 && IS_INTRA4x4 ( mb_type )		8080160	0					
ANR	8082211	AndExpression	s -> qscale < 24 && IS_INTRA4x4 ( mb_type )		8080160	0		&&			
ANR	8082212	RelationalExpression	s -> qscale < 24		8080160	0		<			
ANR	8082213	PtrMemberAccess	s -> qscale		8080160	0					
ANR	8082214	Identifier	s		8080160	0					
ANR	8082215	Identifier	qscale		8080160	1					
ANR	8082216	PrimaryExpression	24		8080160	1					
ANR	8082217	CallExpression	IS_INTRA4x4 ( mb_type )		8080160	1					
ANR	8082218	Callee	IS_INTRA4x4		8080160	0					
ANR	8082219	Identifier	IS_INTRA4x4		8080160	0					
ANR	8082220	ArgumentList	mb_type		8080160	1					
ANR	8082221	Argument	mb_type		8080160	0					
ANR	8082222	Identifier	mb_type		8080160	0					
ANR	8082223	PrimaryExpression	2		8080160	1					
ANR	8082224	PrimaryExpression	1		8080160	2					
ANR	8082225	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		8080160	2					
ANR	8082226	ForInit	i = 0 ;	463:13:9636:9641	8080160	0	True				
ANR	8082227	AssignmentExpression	i = 0		8080160	0		=			
ANR	8082228	Identifier	i		8080160	0					
ANR	8082229	PrimaryExpression	0		8080160	1					
ANR	8082230	Condition	i < 4	463:20:9643:9647	8080160	1	True				
ANR	8082231	RelationalExpression	i < 4		8080160	0		<			
ANR	8082232	Identifier	i		8080160	0					
ANR	8082233	PrimaryExpression	4		8080160	1					
ANR	8082234	PostIncDecOperationExpression	i ++	463:27:9650:9652	8080160	2	True				
ANR	8082235	Identifier	i		8080160	0					
ANR	8082236	IncDec	++		8080160	1					
ANR	8082237	CompoundStatement		461:32:9589:9589	8080160	3					
ANR	8082238	IfStatement	if ( ( cbp & ( 1 << i ) ) )		8080160	0					
ANR	8082239	Condition	cbp & ( 1 << i )	465:16:9674:9689	8080160	0	True				
ANR	8082240	BitAndExpression	cbp & ( 1 << i )		8080160	0		&			
ANR	8082241	Identifier	cbp		8080160	0					
ANR	8082242	ShiftExpression	1 << i		8080160	1		<<			
ANR	8082243	PrimaryExpression	1		8080160	0					
ANR	8082244	Identifier	i		8080160	1					
ANR	8082245	CompoundStatement		463:34:9626:9626	8080160	1					
ANR	8082246	ForStatement	for ( j = 0 ; j < 4 ; j ++ )		8080160	0					
ANR	8082247	ForInit	j = 0 ;	467:21:9716:9721	8080160	0	True				
ANR	8082248	AssignmentExpression	j = 0		8080160	0		=			
ANR	8082249	Identifier	j		8080160	0					
ANR	8082250	PrimaryExpression	0		8080160	1					
ANR	8082251	Condition	j < 4	467:28:9723:9727	8080160	1	True				
ANR	8082252	RelationalExpression	j < 4		8080160	0		<			
ANR	8082253	Identifier	j		8080160	0					
ANR	8082254	PrimaryExpression	4		8080160	1					
ANR	8082255	PostIncDecOperationExpression	j ++	467:35:9730:9732	8080160	2	True				
ANR	8082256	Identifier	j		8080160	0					
ANR	8082257	IncDec	++		8080160	1					
ANR	8082258	CompoundStatement		465:40:9669:9669	8080160	3					
ANR	8082259	ExpressionStatement	k = index ? ( ( j & 1 ) + 2 * ( i & 1 ) + 2 * ( j & 2 ) + 4 * ( i & 2 ) ) : ( 4 * i + j )	469:20:9758:9819	8080160	0	True				
ANR	8082260	AssignmentExpression	k = index ? ( ( j & 1 ) + 2 * ( i & 1 ) + 2 * ( j & 2 ) + 4 * ( i & 2 ) ) : ( 4 * i + j )		8080160	0		=			
ANR	8082261	Identifier	k		8080160	0					
ANR	8082262	ConditionalExpression	index ? ( ( j & 1 ) + 2 * ( i & 1 ) + 2 * ( j & 2 ) + 4 * ( i & 2 ) ) : ( 4 * i + j )		8080160	1					
ANR	8082263	Condition	index		8080160	0					
ANR	8082264	Identifier	index		8080160	0					
ANR	8082265	AdditiveExpression	( j & 1 ) + 2 * ( i & 1 ) + 2 * ( j & 2 ) + 4 * ( i & 2 )		8080160	1		+			
ANR	8082266	BitAndExpression	j & 1		8080160	0		&			
ANR	8082267	Identifier	j		8080160	0					
ANR	8082268	PrimaryExpression	1		8080160	1					
ANR	8082269	AdditiveExpression	2 * ( i & 1 ) + 2 * ( j & 2 ) + 4 * ( i & 2 )		8080160	1		+			
ANR	8082270	MultiplicativeExpression	2 * ( i & 1 )		8080160	0		*			
ANR	8082271	PrimaryExpression	2		8080160	0					
ANR	8082272	BitAndExpression	i & 1		8080160	1		&			
ANR	8082273	Identifier	i		8080160	0					
ANR	8082274	PrimaryExpression	1		8080160	1					
ANR	8082275	AdditiveExpression	2 * ( j & 2 ) + 4 * ( i & 2 )		8080160	1		+			
ANR	8082276	MultiplicativeExpression	2 * ( j & 2 )		8080160	0		*			
ANR	8082277	PrimaryExpression	2		8080160	0					
ANR	8082278	BitAndExpression	j & 2		8080160	1		&			
ANR	8082279	Identifier	j		8080160	0					
ANR	8082280	PrimaryExpression	2		8080160	1					
ANR	8082281	MultiplicativeExpression	4 * ( i & 2 )		8080160	1		*			
ANR	8082282	PrimaryExpression	4		8080160	0					
ANR	8082283	BitAndExpression	i & 2		8080160	1		&			
ANR	8082284	Identifier	i		8080160	0					
ANR	8082285	PrimaryExpression	2		8080160	1					
ANR	8082286	AdditiveExpression	4 * i + j		8080160	2		+			
ANR	8082287	MultiplicativeExpression	4 * i		8080160	0		*			
ANR	8082288	PrimaryExpression	4		8080160	0					
ANR	8082289	Identifier	i		8080160	1					
ANR	8082290	Identifier	j		8080160	1					
ANR	8082291	ExpressionStatement	h -> non_zero_count_cache [ scan8 [ k ] ] = 1	471:20:9842:9881	8080160	1	True				
ANR	8082292	AssignmentExpression	h -> non_zero_count_cache [ scan8 [ k ] ] = 1		8080160	0		=			
ANR	8082293	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ k ] ]		8080160	0					
ANR	8082294	PtrMemberAccess	h -> non_zero_count_cache		8080160	0					
ANR	8082295	Identifier	h		8080160	0					
ANR	8082296	Identifier	non_zero_count_cache		8080160	1					
ANR	8082297	ArrayIndexing	scan8 [ k ]		8080160	1					
ANR	8082298	Identifier	scan8		8080160	0					
ANR	8082299	Identifier	k		8080160	1					
ANR	8082300	PrimaryExpression	1		8080160	1					
ANR	8082301	IfStatement	"if ( svq3_decode_block ( & s -> gb , & h -> mb [ 16 * k ] , index , type ) )"		8080160	2					
ANR	8082302	Condition	"svq3_decode_block ( & s -> gb , & h -> mb [ 16 * k ] , index , type )"	475:24:9910:9961	8080160	0	True				
ANR	8082303	CallExpression	"svq3_decode_block ( & s -> gb , & h -> mb [ 16 * k ] , index , type )"		8080160	0					
ANR	8082304	Callee	svq3_decode_block		8080160	0					
ANR	8082305	Identifier	svq3_decode_block		8080160	0					
ANR	8082306	ArgumentList	& s -> gb		8080160	1					
ANR	8082307	Argument	& s -> gb		8080160	0					
ANR	8082308	UnaryOperationExpression	& s -> gb		8080160	0					
ANR	8082309	UnaryOperator	&		8080160	0					
ANR	8082310	PtrMemberAccess	s -> gb		8080160	1					
ANR	8082311	Identifier	s		8080160	0					
ANR	8082312	Identifier	gb		8080160	1					
ANR	8082313	Argument	& h -> mb [ 16 * k ]		8080160	1					
ANR	8082314	UnaryOperationExpression	& h -> mb [ 16 * k ]		8080160	0					
ANR	8082315	UnaryOperator	&		8080160	0					
ANR	8082316	ArrayIndexing	h -> mb [ 16 * k ]		8080160	1					
ANR	8082317	PtrMemberAccess	h -> mb		8080160	0					
ANR	8082318	Identifier	h		8080160	0					
ANR	8082319	Identifier	mb		8080160	1					
ANR	8082320	MultiplicativeExpression	16 * k		8080160	1		*			
ANR	8082321	PrimaryExpression	16		8080160	0					
ANR	8082322	Identifier	k		8080160	1					
ANR	8082323	Argument	index		8080160	2					
ANR	8082324	Identifier	index		8080160	0					
ANR	8082325	Argument	type		8080160	3					
ANR	8082326	Identifier	type		8080160	0					
ANR	8082327	CompoundStatement		473:77:9897:9897	8080160	1					
ANR	8082328	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""error while decoding block\\n"" )"	477:24:9990:10054	8080160	0	True				
ANR	8082329	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""error while decoding block\\n"" )"		8080160	0					
ANR	8082330	Callee	av_log		8080160	0					
ANR	8082331	Identifier	av_log		8080160	0					
ANR	8082332	ArgumentList	h -> s . avctx		8080160	1					
ANR	8082333	Argument	h -> s . avctx		8080160	0					
ANR	8082334	MemberAccess	h -> s . avctx		8080160	0					
ANR	8082335	PtrMemberAccess	h -> s		8080160	0					
ANR	8082336	Identifier	h		8080160	0					
ANR	8082337	Identifier	s		8080160	1					
ANR	8082338	Identifier	avctx		8080160	1					
ANR	8082339	Argument	AV_LOG_ERROR		8080160	1					
ANR	8082340	Identifier	AV_LOG_ERROR		8080160	0					
ANR	8082341	Argument	"""error while decoding block\\n"""		8080160	2					
ANR	8082342	PrimaryExpression	"""error while decoding block\\n"""		8080160	0					
ANR	8082343	ReturnStatement	return - 1 ;	479:24:10081:10090	8080160	1	True				
ANR	8082344	UnaryOperationExpression	- 1		8080160	0					
ANR	8082345	UnaryOperator	-		8080160	0					
ANR	8082346	PrimaryExpression	1		8080160	1					
ANR	8082347	IfStatement	if ( ( cbp & 0x30 ) )		8080160	3					
ANR	8082348	Condition	cbp & 0x30	491:12:10175:10186	8080160	0	True				
ANR	8082349	BitAndExpression	cbp & 0x30		8080160	0		&			
ANR	8082350	Identifier	cbp		8080160	0					
ANR	8082351	PrimaryExpression	0x30		8080160	1					
ANR	8082352	CompoundStatement		489:26:10123:10123	8080160	1					
ANR	8082353	ForStatement	for ( i = 0 ; i < 2 ; ++ i )		8080160	0					
ANR	8082354	ForInit	i = 0 ;	493:17:10209:10214	8080160	0	True				
ANR	8082355	AssignmentExpression	i = 0		8080160	0		=			
ANR	8082356	Identifier	i		8080160	0					
ANR	8082357	PrimaryExpression	0		8080160	1					
ANR	8082358	Condition	i < 2	493:24:10216:10220	8080160	1	True				
ANR	8082359	RelationalExpression	i < 2		8080160	0		<			
ANR	8082360	Identifier	i		8080160	0					
ANR	8082361	PrimaryExpression	2		8080160	1					
ANR	8082362	UnaryExpression	++ i	493:31:10223:10225	8080160	2	True				
ANR	8082363	IncDec	++		8080160	0					
ANR	8082364	Identifier	i		8080160	1					
ANR	8082365	CompoundStatement		491:36:10162:10162	8080160	3					
ANR	8082366	IfStatement	"if ( svq3_decode_block ( & s -> gb , & h -> mb [ 16 * ( 16 + 4 * i ) ] , 0 , 3 ) )"		8080160	0					
ANR	8082367	Condition	"svq3_decode_block ( & s -> gb , & h -> mb [ 16 * ( 16 + 4 * i ) ] , 0 , 3 )"	495:18:10249:10302	8080160	0	True				
ANR	8082368	CallExpression	"svq3_decode_block ( & s -> gb , & h -> mb [ 16 * ( 16 + 4 * i ) ] , 0 , 3 )"		8080160	0					
ANR	8082369	Callee	svq3_decode_block		8080160	0					
ANR	8082370	Identifier	svq3_decode_block		8080160	0					
ANR	8082371	ArgumentList	& s -> gb		8080160	1					
ANR	8082372	Argument	& s -> gb		8080160	0					
ANR	8082373	UnaryOperationExpression	& s -> gb		8080160	0					
ANR	8082374	UnaryOperator	&		8080160	0					
ANR	8082375	PtrMemberAccess	s -> gb		8080160	1					
ANR	8082376	Identifier	s		8080160	0					
ANR	8082377	Identifier	gb		8080160	1					
ANR	8082378	Argument	& h -> mb [ 16 * ( 16 + 4 * i ) ]		8080160	1					
ANR	8082379	UnaryOperationExpression	& h -> mb [ 16 * ( 16 + 4 * i ) ]		8080160	0					
ANR	8082380	UnaryOperator	&		8080160	0					
ANR	8082381	ArrayIndexing	h -> mb [ 16 * ( 16 + 4 * i ) ]		8080160	1					
ANR	8082382	PtrMemberAccess	h -> mb		8080160	0					
ANR	8082383	Identifier	h		8080160	0					
ANR	8082384	Identifier	mb		8080160	1					
ANR	8082385	MultiplicativeExpression	16 * ( 16 + 4 * i )		8080160	1		*			
ANR	8082386	PrimaryExpression	16		8080160	0					
ANR	8082387	AdditiveExpression	16 + 4 * i		8080160	1		+			
ANR	8082388	PrimaryExpression	16		8080160	0					
ANR	8082389	MultiplicativeExpression	4 * i		8080160	1		*			
ANR	8082390	PrimaryExpression	4		8080160	0					
ANR	8082391	Identifier	i		8080160	1					
ANR	8082392	Argument	0		8080160	2					
ANR	8082393	PrimaryExpression	0		8080160	0					
ANR	8082394	Argument	3		8080160	3					
ANR	8082395	PrimaryExpression	3		8080160	0					
ANR	8082396	CompoundStatement		493:73:10238:10238	8080160	1					
ANR	8082397	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""error while decoding chroma dc block\\n"" )"	497:16:10323:10397	8080160	0	True				
ANR	8082398	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""error while decoding chroma dc block\\n"" )"		8080160	0					
ANR	8082399	Callee	av_log		8080160	0					
ANR	8082400	Identifier	av_log		8080160	0					
ANR	8082401	ArgumentList	h -> s . avctx		8080160	1					
ANR	8082402	Argument	h -> s . avctx		8080160	0					
ANR	8082403	MemberAccess	h -> s . avctx		8080160	0					
ANR	8082404	PtrMemberAccess	h -> s		8080160	0					
ANR	8082405	Identifier	h		8080160	0					
ANR	8082406	Identifier	s		8080160	1					
ANR	8082407	Identifier	avctx		8080160	1					
ANR	8082408	Argument	AV_LOG_ERROR		8080160	1					
ANR	8082409	Identifier	AV_LOG_ERROR		8080160	0					
ANR	8082410	Argument	"""error while decoding chroma dc block\\n"""		8080160	2					
ANR	8082411	PrimaryExpression	"""error while decoding chroma dc block\\n"""		8080160	0					
ANR	8082412	ReturnStatement	return - 1 ;	499:16:10416:10425	8080160	1	True				
ANR	8082413	UnaryOperationExpression	- 1		8080160	0					
ANR	8082414	UnaryOperator	-		8080160	0					
ANR	8082415	PrimaryExpression	1		8080160	1					
ANR	8082416	IfStatement	if ( ( cbp & 0x20 ) )		8080160	1					
ANR	8082417	Condition	cbp & 0x20	507:16:10478:10489	8080160	0	True				
ANR	8082418	BitAndExpression	cbp & 0x20		8080160	0		&			
ANR	8082419	Identifier	cbp		8080160	0					
ANR	8082420	PrimaryExpression	0x20		8080160	1					
ANR	8082421	CompoundStatement		505:30:10426:10426	8080160	1					
ANR	8082422	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		8080160	0					
ANR	8082423	ForInit	i = 0 ;	509:21:10516:10521	8080160	0	True				
ANR	8082424	AssignmentExpression	i = 0		8080160	0		=			
ANR	8082425	Identifier	i		8080160	0					
ANR	8082426	PrimaryExpression	0		8080160	1					
ANR	8082427	Condition	i < 8	509:28:10523:10527	8080160	1	True				
ANR	8082428	RelationalExpression	i < 8		8080160	0		<			
ANR	8082429	Identifier	i		8080160	0					
ANR	8082430	PrimaryExpression	8		8080160	1					
ANR	8082431	PostIncDecOperationExpression	i ++	509:35:10530:10532	8080160	2	True				
ANR	8082432	Identifier	i		8080160	0					
ANR	8082433	IncDec	++		8080160	1					
ANR	8082434	CompoundStatement		507:40:10469:10469	8080160	3					
ANR	8082435	ExpressionStatement	h -> non_zero_count_cache [ scan8 [ 16 + i ] ] = 1	511:20:10558:10600	8080160	0	True				
ANR	8082436	AssignmentExpression	h -> non_zero_count_cache [ scan8 [ 16 + i ] ] = 1		8080160	0		=			
ANR	8082437	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ 16 + i ] ]		8080160	0					
ANR	8082438	PtrMemberAccess	h -> non_zero_count_cache		8080160	0					
ANR	8082439	Identifier	h		8080160	0					
ANR	8082440	Identifier	non_zero_count_cache		8080160	1					
ANR	8082441	ArrayIndexing	scan8 [ 16 + i ]		8080160	1					
ANR	8082442	Identifier	scan8		8080160	0					
ANR	8082443	AdditiveExpression	16 + i		8080160	1		+			
ANR	8082444	PrimaryExpression	16		8080160	0					
ANR	8082445	Identifier	i		8080160	1					
ANR	8082446	PrimaryExpression	1		8080160	1					
ANR	8082447	IfStatement	"if ( svq3_decode_block ( & s -> gb , & h -> mb [ 16 * ( 16 + i ) ] , 1 , 1 ) )"		8080160	1					
ANR	8082448	Condition	"svq3_decode_block ( & s -> gb , & h -> mb [ 16 * ( 16 + i ) ] , 1 , 1 )"	515:24:10629:10680	8080160	0	True				
ANR	8082449	CallExpression	"svq3_decode_block ( & s -> gb , & h -> mb [ 16 * ( 16 + i ) ] , 1 , 1 )"		8080160	0					
ANR	8082450	Callee	svq3_decode_block		8080160	0					
ANR	8082451	Identifier	svq3_decode_block		8080160	0					
ANR	8082452	ArgumentList	& s -> gb		8080160	1					
ANR	8082453	Argument	& s -> gb		8080160	0					
ANR	8082454	UnaryOperationExpression	& s -> gb		8080160	0					
ANR	8082455	UnaryOperator	&		8080160	0					
ANR	8082456	PtrMemberAccess	s -> gb		8080160	1					
ANR	8082457	Identifier	s		8080160	0					
ANR	8082458	Identifier	gb		8080160	1					
ANR	8082459	Argument	& h -> mb [ 16 * ( 16 + i ) ]		8080160	1					
ANR	8082460	UnaryOperationExpression	& h -> mb [ 16 * ( 16 + i ) ]		8080160	0					
ANR	8082461	UnaryOperator	&		8080160	0					
ANR	8082462	ArrayIndexing	h -> mb [ 16 * ( 16 + i ) ]		8080160	1					
ANR	8082463	PtrMemberAccess	h -> mb		8080160	0					
ANR	8082464	Identifier	h		8080160	0					
ANR	8082465	Identifier	mb		8080160	1					
ANR	8082466	MultiplicativeExpression	16 * ( 16 + i )		8080160	1		*			
ANR	8082467	PrimaryExpression	16		8080160	0					
ANR	8082468	AdditiveExpression	16 + i		8080160	1		+			
ANR	8082469	PrimaryExpression	16		8080160	0					
ANR	8082470	Identifier	i		8080160	1					
ANR	8082471	Argument	1		8080160	2					
ANR	8082472	PrimaryExpression	1		8080160	0					
ANR	8082473	Argument	1		8080160	3					
ANR	8082474	PrimaryExpression	1		8080160	0					
ANR	8082475	CompoundStatement		513:77:10616:10616	8080160	1					
ANR	8082476	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""error while decoding chroma ac block\\n"" )"	517:24:10709:10783	8080160	0	True				
ANR	8082477	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""error while decoding chroma ac block\\n"" )"		8080160	0					
ANR	8082478	Callee	av_log		8080160	0					
ANR	8082479	Identifier	av_log		8080160	0					
ANR	8082480	ArgumentList	h -> s . avctx		8080160	1					
ANR	8082481	Argument	h -> s . avctx		8080160	0					
ANR	8082482	MemberAccess	h -> s . avctx		8080160	0					
ANR	8082483	PtrMemberAccess	h -> s		8080160	0					
ANR	8082484	Identifier	h		8080160	0					
ANR	8082485	Identifier	s		8080160	1					
ANR	8082486	Identifier	avctx		8080160	1					
ANR	8082487	Argument	AV_LOG_ERROR		8080160	1					
ANR	8082488	Identifier	AV_LOG_ERROR		8080160	0					
ANR	8082489	Argument	"""error while decoding chroma ac block\\n"""		8080160	2					
ANR	8082490	PrimaryExpression	"""error while decoding chroma ac block\\n"""		8080160	0					
ANR	8082491	ReturnStatement	return - 1 ;	519:24:10810:10819	8080160	1	True				
ANR	8082492	UnaryOperationExpression	- 1		8080160	0					
ANR	8082493	UnaryOperator	-		8080160	0					
ANR	8082494	PrimaryExpression	1		8080160	1					
ANR	8082495	ExpressionStatement	h -> cbp = cbp	533:4:10903:10914	8080160	21	True				
ANR	8082496	AssignmentExpression	h -> cbp = cbp		8080160	0		=			
ANR	8082497	PtrMemberAccess	h -> cbp		8080160	0					
ANR	8082498	Identifier	h		8080160	0					
ANR	8082499	Identifier	cbp		8080160	1					
ANR	8082500	Identifier	cbp		8080160	1					
ANR	8082501	ExpressionStatement	s -> current_picture . mb_type [ mb_xy ] = mb_type	535:4:10921:10964	8080160	22	True				
ANR	8082502	AssignmentExpression	s -> current_picture . mb_type [ mb_xy ] = mb_type		8080160	0		=			
ANR	8082503	ArrayIndexing	s -> current_picture . mb_type [ mb_xy ]		8080160	0					
ANR	8082504	MemberAccess	s -> current_picture . mb_type		8080160	0					
ANR	8082505	PtrMemberAccess	s -> current_picture		8080160	0					
ANR	8082506	Identifier	s		8080160	0					
ANR	8082507	Identifier	current_picture		8080160	1					
ANR	8082508	Identifier	mb_type		8080160	1					
ANR	8082509	Identifier	mb_xy		8080160	1					
ANR	8082510	Identifier	mb_type		8080160	1					
ANR	8082511	IfStatement	if ( IS_INTRA ( mb_type ) )		8080160	23					
ANR	8082512	Condition	IS_INTRA ( mb_type )	539:8:10977:10993	8080160	0	True				
ANR	8082513	CallExpression	IS_INTRA ( mb_type )		8080160	0					
ANR	8082514	Callee	IS_INTRA		8080160	0					
ANR	8082515	Identifier	IS_INTRA		8080160	0					
ANR	8082516	ArgumentList	mb_type		8080160	1					
ANR	8082517	Argument	mb_type		8080160	0					
ANR	8082518	Identifier	mb_type		8080160	0					
ANR	8082519	CompoundStatement		537:27:10930:10930	8080160	1					
ANR	8082520	ExpressionStatement	"h -> chroma_pred_mode = ff_h264_check_intra_pred_mode ( h , DC_PRED8x8 )"	541:8:11007:11073	8080160	0	True				
ANR	8082521	AssignmentExpression	"h -> chroma_pred_mode = ff_h264_check_intra_pred_mode ( h , DC_PRED8x8 )"		8080160	0		=			
ANR	8082522	PtrMemberAccess	h -> chroma_pred_mode		8080160	0					
ANR	8082523	Identifier	h		8080160	0					
ANR	8082524	Identifier	chroma_pred_mode		8080160	1					
ANR	8082525	CallExpression	"ff_h264_check_intra_pred_mode ( h , DC_PRED8x8 )"		8080160	1					
ANR	8082526	Callee	ff_h264_check_intra_pred_mode		8080160	0					
ANR	8082527	Identifier	ff_h264_check_intra_pred_mode		8080160	0					
ANR	8082528	ArgumentList	h		8080160	1					
ANR	8082529	Argument	h		8080160	0					
ANR	8082530	Identifier	h		8080160	0					
ANR	8082531	Argument	DC_PRED8x8		8080160	1					
ANR	8082532	Identifier	DC_PRED8x8		8080160	0					
ANR	8082533	ReturnStatement	return 0 ;	547:4:11089:11097	8080160	24	True				
ANR	8082534	PrimaryExpression	0		8080160	0					
ANR	8082535	ReturnType	static int		8080160	1					
ANR	8082536	Identifier	svq3_decode_mb		8080160	2					
ANR	8082537	ParameterList	"H264Context * h , unsigned int mb_type"		8080160	3					
ANR	8082538	Parameter	H264Context * h	1:26:26:39	8080160	0	True				
ANR	8082539	ParameterType	H264Context *		8080160	0					
ANR	8082540	Identifier	h		8080160	1					
ANR	8082541	Parameter	unsigned int mb_type	1:42:42:61	8080160	1	True				
ANR	8082542	ParameterType	unsigned int		8080160	0					
ANR	8082543	Identifier	mb_type		8080160	1					
ANR	8082544	CFGEntryNode	ENTRY		8080160		True				
ANR	8082545	CFGExitNode	EXIT		8080160		True				
ANR	8082546	Symbol	* golomb_to_intra4x4_cbp		8080160						
ANR	8082547	Symbol	* ( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride + 4 ]		8080160						
ANR	8082548	Symbol	* scan8		8080160						
ANR	8082549	Symbol	s -> current_picture		8080160						
ANR	8082550	Symbol	type		8080160						
ANR	8082551	Symbol	h -> s . avctx		8080160						
ANR	8082552	Symbol	h -> top_samples_available		8080160						
ANR	8082553	Symbol	svq3_decode_block		8080160						
ANR	8082554	Symbol	s -> next_picture . mb_type		8080160						
ANR	8082555	Symbol	h -> mb		8080160						
ANR	8082556	Symbol	h -> left_samples_available		8080160						
ANR	8082557	Symbol	mb_type		8080160						
ANR	8082558	Symbol	h -> halfpel_flag		8080160						
ANR	8082559	Symbol	* vlc		8080160						
ANR	8082560	Symbol	* * * svq3_pred_0		8080160						
ANR	8082561	Symbol	HALFPEL_MODE		8080160						
ANR	8082562	Symbol	* * * svq3_pred_1		8080160						
ANR	8082563	Symbol	* s -> next_picture		8080160						
ANR	8082564	Symbol	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 + i * 8 ]		8080160						
ANR	8082565	Symbol	svq3_pred_0		8080160						
ANR	8082566	Symbol	svq3_pred_1		8080160						
ANR	8082567	Symbol	* * top		8080160						
ANR	8082568	Symbol	index		8080160						
ANR	8082569	Symbol	* * * vlc		8080160						
ANR	8082570	Symbol	* golomb_to_inter_cbp		8080160						
ANR	8082571	Symbol	h -> s		8080160						
ANR	8082572	Symbol	s -> dsp		8080160						
ANR	8082573	Symbol	* * * s		8080160						
ANR	8082574	Symbol	& s -> gb		8080160						
ANR	8082575	Symbol	* * * m		8080160						
ANR	8082576	Symbol	left		8080160						
ANR	8082577	Symbol	* * svq3_pred_0		8080160						
ANR	8082578	Symbol	* * * h		8080160						
ANR	8082579	Symbol	* * svq3_pred_1		8080160						
ANR	8082580	Symbol	* s -> current_picture . mb_type		8080160						
ANR	8082581	Symbol	DC_PRED		8080160						
ANR	8082582	Symbol	* top		8080160						
ANR	8082583	Symbol	h -> cbp		8080160						
ANR	8082584	Symbol	s -> next_picture		8080160						
ANR	8082585	Symbol	IS_INTER		8080160						
ANR	8082586	Symbol	* * h -> intra4x4_pred_mode		8080160						
ANR	8082587	Symbol	* h -> intra4x4_pred_mode		8080160						
ANR	8082588	Symbol	MB_TYPE_SKIP		8080160						
ANR	8082589	Symbol	MB_TYPE_INTRA4x4		8080160						
ANR	8082590	Symbol	h -> thirdpel_flag		8080160						
ANR	8082591	Symbol	top		8080160						
ANR	8082592	Symbol	* * s		8080160						
ANR	8082593	Symbol	* * h -> mv_cache		8080160						
ANR	8082594	Symbol	* * m		8080160						
ANR	8082595	Symbol	* * h -> ref_cache		8080160						
ANR	8082596	Symbol	h -> b_stride		8080160						
ANR	8082597	Symbol	* s -> next_picture . mb_type		8080160						
ANR	8082598	Symbol	s -> adaptive_quant		8080160						
ANR	8082599	Symbol	h -> intra4x4_pred_mode_cache		8080160						
ANR	8082600	Symbol	FF_I_TYPE		8080160						
ANR	8082601	Symbol	AV_LOG_ERROR		8080160						
ANR	8082602	Symbol	h -> intra16x16_pred_mode		8080160						
ANR	8082603	Symbol	i_mb_type_info [ mb_type - 8 ] . pred_mode		8080160						
ANR	8082604	Symbol	FULLPEL_MODE		8080160						
ANR	8082605	Symbol	* s -> current_picture		8080160						
ANR	8082606	Symbol	* i_mb_type_info		8080160						
ANR	8082607	Symbol	svq3_get_ue_golomb		8080160						
ANR	8082608	Symbol	h		8080160						
ANR	8082609	Symbol	THIRDPEL_MODE		8080160						
ANR	8082610	Symbol	* * * s -> current_picture		8080160						
ANR	8082611	Symbol	i		8080160						
ANR	8082612	Symbol	j		8080160						
ANR	8082613	Symbol	k		8080160						
ANR	8082614	Symbol	vlc		8080160						
ANR	8082615	Symbol	golomb_to_inter_cbp		8080160						
ANR	8082616	Symbol	m		8080160						
ANR	8082617	Symbol	i_mb_type_info [ mb_type - 8 ] . cbp		8080160						
ANR	8082618	Symbol	s		8080160						
ANR	8082619	Symbol	h -> intra4x4_pred_mode		8080160						
ANR	8082620	Symbol	ff_h264_check_intra_pred_mode		8080160						
ANR	8082621	Symbol	* * s -> mb_stride		8080160						
ANR	8082622	Symbol	PREDICT_MODE		8080160						
ANR	8082623	Symbol	* * h -> b_stride		8080160						
ANR	8082624	Symbol	* * * * s		8080160						
ANR	8082625	Symbol	s -> mb_width		8080160						
ANR	8082626	Symbol	i_mb_type_info		8080160						
ANR	8082627	Symbol	FFMIN		8080160						
ANR	8082628	Symbol	s -> pict_type		8080160						
ANR	8082629	Symbol	dir		8080160						
ANR	8082630	Symbol	* * * scan8		8080160						
ANR	8082631	Symbol	* * * * h		8080160						
ANR	8082632	Symbol	mode		8080160						
ANR	8082633	Symbol	h -> topright_samples_available		8080160						
ANR	8082634	Symbol	* * mb_xy		8080160						
ANR	8082635	Symbol	* s -> mb_stride		8080160						
ANR	8082636	Symbol	* s -> current_picture . motion_val		8080160						
ANR	8082637	Symbol	s -> current_picture . motion_val		8080160						
ANR	8082638	Symbol	* * s -> current_picture		8080160						
ANR	8082639	Symbol	* h -> b_stride		8080160						
ANR	8082640	Symbol	* left		8080160						
ANR	8082641	Symbol	* * k		8080160						
ANR	8082642	Symbol	* * i		8080160						
ANR	8082643	Symbol	* h -> mv_cache		8080160						
ANR	8082644	Symbol	* * h		8080160						
ANR	8082645	Symbol	get_bits1		8080160						
ANR	8082646	Symbol	IS_INTRA4x4		8080160						
ANR	8082647	Symbol	* b_xy		8080160						
ANR	8082648	Symbol	* * * * top		8080160						
ANR	8082649	Symbol	* * left		8080160						
ANR	8082650	Symbol	* h -> intra4x4_pred_mode_cache		8080160						
ANR	8082651	Symbol	* * scan8		8080160						
ANR	8082652	Symbol	s -> mb_x		8080160						
ANR	8082653	Symbol	s -> mb_y		8080160						
ANR	8082654	Symbol	MB_TYPE_16x16		8080160						
ANR	8082655	Symbol	DC_PRED8x8		8080160						
ANR	8082656	Symbol	FF_P_TYPE		8080160						
ANR	8082657	Symbol	DC_128_PRED		8080160						
ANR	8082658	Symbol	* mb_type		8080160						
ANR	8082659	Symbol	* * b_xy		8080160						
ANR	8082660	Symbol	* * vlc		8080160						
ANR	8082661	Symbol	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] - 1 - 1 * 8 ]		8080160						
ANR	8082662	Symbol	golomb_to_intra4x4_cbp		8080160						
ANR	8082663	Symbol	s -> qscale		8080160						
ANR	8082664	Symbol	* * * s -> current_picture . motion_val		8080160						
ANR	8082665	Symbol	mb_xy		8080160						
ANR	8082666	Symbol	s -> mb_stride		8080160						
ANR	8082667	Symbol	* svq3_pred_1		8080160						
ANR	8082668	Symbol	* svq3_pred_0		8080160						
ANR	8082669	Symbol	IS_INTRA		8080160						
ANR	8082670	Symbol	s -> current_picture . mb_type		8080160						
ANR	8082671	Symbol	FF_B_TYPE		8080160						
ANR	8082672	Symbol	h -> ref_cache		8080160						
ANR	8082673	Symbol	* * s -> current_picture . motion_val		8080160						
ANR	8082674	Symbol	b_xy		8080160						
ANR	8082675	Symbol	* * * top		8080160						
ANR	8082676	Symbol	* h -> non_zero_count_cache		8080160						
ANR	8082677	Symbol	scan8		8080160						
ANR	8082678	Symbol	* * * h -> mv_cache		8080160						
ANR	8082679	Symbol	* * * left		8080160						
ANR	8082680	Symbol	IS_SKIP		8080160						
ANR	8082681	Symbol	* ( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - h -> b_stride - 1 ]		8080160						
ANR	8082682	Symbol	h -> chroma_pred_mode		8080160						
ANR	8082683	Symbol	h -> non_zero_count_cache		8080160						
ANR	8082684	Symbol	svq3_get_se_golomb		8080160						
ANR	8082685	Symbol	svq3_mc_dir		8080160						
ANR	8082686	Symbol	* ( uint32_t * ) h -> mv_cache [ m ] [ scan8 [ 0 ] + 4 - 1 * 8 ]		8080160						
ANR	8082687	Symbol	MB_TYPE_INTRA16x16		8080160						
ANR	8082688	Symbol	cbp		8080160						
ANR	8082689	Symbol	h -> mb_xy		8080160						
ANR	8082690	Symbol	PART_NOT_AVAILABLE		8080160						
ANR	8082691	Symbol	* h		8080160						
ANR	8082692	Symbol	* i		8080160						
ANR	8082693	Symbol	h -> mv_cache		8080160						
ANR	8082694	Symbol	* k		8080160						
ANR	8082695	Symbol	* m		8080160						
ANR	8082696	Symbol	IS_INTRA16x16		8080160						
ANR	8082697	Symbol	* mb_xy		8080160						
ANR	8082698	Symbol	* ( uint32_t * ) s -> current_picture . motion_val [ m ] [ b_xy - 1 + i * h -> b_stride ]		8080160						
ANR	8082699	Symbol	* s		8080160						
ANR	8082700	Symbol	* h -> ref_cache		8080160						
