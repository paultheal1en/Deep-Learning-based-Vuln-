command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7930263	File	/home/p4ultr4n/workplace/ReVeal/raw_code/spapr_memory_pre_plug_1.c								
ANR	7930264	Function	spapr_memory_pre_plug	1:0:0:871							
ANR	7930265	FunctionDef	"spapr_memory_pre_plug (HotplugHandler * hotplug_dev , DeviceState * dev , Error * * errp)"		7930264	0					
ANR	7930266	CompoundStatement		5:0:131:871	7930264	0					
ANR	7930267	IdentifierDeclStatement	PCDIMMDevice * dimm = PC_DIMM ( dev ) ;	7:4:138:171	7930264	0	True				
ANR	7930268	IdentifierDecl	* dimm = PC_DIMM ( dev )		7930264	0					
ANR	7930269	IdentifierDeclType	PCDIMMDevice *		7930264	0					
ANR	7930270	Identifier	dimm		7930264	1					
ANR	7930271	AssignmentExpression	* dimm = PC_DIMM ( dev )		7930264	2		=			
ANR	7930272	Identifier	dimm		7930264	0					
ANR	7930273	CallExpression	PC_DIMM ( dev )		7930264	1					
ANR	7930274	Callee	PC_DIMM		7930264	0					
ANR	7930275	Identifier	PC_DIMM		7930264	0					
ANR	7930276	ArgumentList	dev		7930264	1					
ANR	7930277	Argument	dev		7930264	0					
ANR	7930278	Identifier	dev		7930264	0					
ANR	7930279	IdentifierDeclStatement	PCDIMMDeviceClass * ddc = PC_DIMM_GET_CLASS ( dimm ) ;	9:4:178:226	7930264	1	True				
ANR	7930280	IdentifierDecl	* ddc = PC_DIMM_GET_CLASS ( dimm )		7930264	0					
ANR	7930281	IdentifierDeclType	PCDIMMDeviceClass *		7930264	0					
ANR	7930282	Identifier	ddc		7930264	1					
ANR	7930283	AssignmentExpression	* ddc = PC_DIMM_GET_CLASS ( dimm )		7930264	2		=			
ANR	7930284	Identifier	ddc		7930264	0					
ANR	7930285	CallExpression	PC_DIMM_GET_CLASS ( dimm )		7930264	1					
ANR	7930286	Callee	PC_DIMM_GET_CLASS		7930264	0					
ANR	7930287	Identifier	PC_DIMM_GET_CLASS		7930264	0					
ANR	7930288	ArgumentList	dimm		7930264	1					
ANR	7930289	Argument	dimm		7930264	0					
ANR	7930290	Identifier	dimm		7930264	0					
ANR	7930291	IdentifierDeclStatement	MemoryRegion * mr = ddc -> get_memory_region ( dimm ) ;	11:4:233:280	7930264	2	True				
ANR	7930292	IdentifierDecl	* mr = ddc -> get_memory_region ( dimm )		7930264	0					
ANR	7930293	IdentifierDeclType	MemoryRegion *		7930264	0					
ANR	7930294	Identifier	mr		7930264	1					
ANR	7930295	AssignmentExpression	* mr = ddc -> get_memory_region ( dimm )		7930264	2		=			
ANR	7930296	Identifier	mr		7930264	0					
ANR	7930297	CallExpression	ddc -> get_memory_region ( dimm )		7930264	1					
ANR	7930298	Callee	ddc -> get_memory_region		7930264	0					
ANR	7930299	PtrMemberAccess	ddc -> get_memory_region		7930264	0					
ANR	7930300	Identifier	ddc		7930264	0					
ANR	7930301	Identifier	get_memory_region		7930264	1					
ANR	7930302	ArgumentList	dimm		7930264	1					
ANR	7930303	Argument	dimm		7930264	0					
ANR	7930304	Identifier	dimm		7930264	0					
ANR	7930305	IdentifierDeclStatement	uint64_t size = memory_region_size ( mr ) ;	13:4:287:325	7930264	3	True				
ANR	7930306	IdentifierDecl	size = memory_region_size ( mr )		7930264	0					
ANR	7930307	IdentifierDeclType	uint64_t		7930264	0					
ANR	7930308	Identifier	size		7930264	1					
ANR	7930309	AssignmentExpression	size = memory_region_size ( mr )		7930264	2		=			
ANR	7930310	Identifier	size		7930264	0					
ANR	7930311	CallExpression	memory_region_size ( mr )		7930264	1					
ANR	7930312	Callee	memory_region_size		7930264	0					
ANR	7930313	Identifier	memory_region_size		7930264	0					
ANR	7930314	ArgumentList	mr		7930264	1					
ANR	7930315	Argument	mr		7930264	0					
ANR	7930316	Identifier	mr		7930264	0					
ANR	7930317	IdentifierDeclStatement	char * mem_dev ;	15:4:332:345	7930264	4	True				
ANR	7930318	IdentifierDecl	* mem_dev		7930264	0					
ANR	7930319	IdentifierDeclType	char *		7930264	0					
ANR	7930320	Identifier	mem_dev		7930264	1					
ANR	7930321	IfStatement	if ( size % SPAPR_MEMORY_BLOCK_SIZE )		7930264	5					
ANR	7930322	Condition	size % SPAPR_MEMORY_BLOCK_SIZE	19:8:358:387	7930264	0	True				
ANR	7930323	MultiplicativeExpression	size % SPAPR_MEMORY_BLOCK_SIZE		7930264	0		%			
ANR	7930324	Identifier	size		7930264	0					
ANR	7930325	Identifier	SPAPR_MEMORY_BLOCK_SIZE		7930264	1					
ANR	7930326	CompoundStatement		15:40:258:258	7930264	1					
ANR	7930327	Statement	error_setg	21:8:401:410	7930264	0	True				
ANR	7930328	Statement	(	21:18:411:411	7930264	1	True				
ANR	7930329	Statement	errp	21:19:412:415	7930264	2	True				
ANR	7930330	Statement	","	21:23:416:416	7930264	3	True				
ANR	7930331	Statement	"""Hotplugged memory size must be a multiple of """	21:25:418:464	7930264	4	True				
ANR	7930332	Statement	"""%lld MB"""	23:22:489:497	7930264	5	True				
ANR	7930333	Statement	","	23:31:498:498	7930264	6	True				
ANR	7930334	Statement	SPAPR_MEMORY_BLOCK_SIZE	23:33:500:522	7930264	7	True				
ANR	7930335	Statement	/	23:57:524:524	7930264	8	True				
ANR	7930336	Statement	M_BYTE	23:59:526:531	7930264	9	True				
ANR	7930337	Statement	)	23:65:532:532	7930264	10	True				
ANR	7930338	ExpressionStatement		23:66:533:533	7930264	11	True				
ANR	7930339	ReturnStatement	return ;	25:8:544:550	7930264	12	True				
ANR	7930340	ExpressionStatement	"mem_dev = object_property_get_str ( OBJECT ( dimm ) , PC_DIMM_MEMDEV_PROP , NULL )"	31:4:566:640	7930264	6	True				
ANR	7930341	AssignmentExpression	"mem_dev = object_property_get_str ( OBJECT ( dimm ) , PC_DIMM_MEMDEV_PROP , NULL )"		7930264	0		=			
ANR	7930342	Identifier	mem_dev		7930264	0					
ANR	7930343	CallExpression	"object_property_get_str ( OBJECT ( dimm ) , PC_DIMM_MEMDEV_PROP , NULL )"		7930264	1					
ANR	7930344	Callee	object_property_get_str		7930264	0					
ANR	7930345	Identifier	object_property_get_str		7930264	0					
ANR	7930346	ArgumentList	OBJECT ( dimm )		7930264	1					
ANR	7930347	Argument	OBJECT ( dimm )		7930264	0					
ANR	7930348	CallExpression	OBJECT ( dimm )		7930264	0					
ANR	7930349	Callee	OBJECT		7930264	0					
ANR	7930350	Identifier	OBJECT		7930264	0					
ANR	7930351	ArgumentList	dimm		7930264	1					
ANR	7930352	Argument	dimm		7930264	0					
ANR	7930353	Identifier	dimm		7930264	0					
ANR	7930354	Argument	PC_DIMM_MEMDEV_PROP		7930264	1					
ANR	7930355	Identifier	PC_DIMM_MEMDEV_PROP		7930264	0					
ANR	7930356	Argument	NULL		7930264	2					
ANR	7930357	Identifier	NULL		7930264	0					
ANR	7930358	IfStatement	if ( mem_dev && ! kvmppc_is_mem_backend_page_size_ok ( mem_dev ) )		7930264	7					
ANR	7930359	Condition	mem_dev && ! kvmppc_is_mem_backend_page_size_ok ( mem_dev )	33:8:651:705	7930264	0	True				
ANR	7930360	AndExpression	mem_dev && ! kvmppc_is_mem_backend_page_size_ok ( mem_dev )		7930264	0		&&			
ANR	7930361	Identifier	mem_dev		7930264	0					
ANR	7930362	UnaryOperationExpression	! kvmppc_is_mem_backend_page_size_ok ( mem_dev )		7930264	1					
ANR	7930363	UnaryOperator	!		7930264	0					
ANR	7930364	CallExpression	kvmppc_is_mem_backend_page_size_ok ( mem_dev )		7930264	1					
ANR	7930365	Callee	kvmppc_is_mem_backend_page_size_ok		7930264	0					
ANR	7930366	Identifier	kvmppc_is_mem_backend_page_size_ok		7930264	0					
ANR	7930367	ArgumentList	mem_dev		7930264	1					
ANR	7930368	Argument	mem_dev		7930264	0					
ANR	7930369	Identifier	mem_dev		7930264	0					
ANR	7930370	CompoundStatement		29:65:576:576	7930264	1					
ANR	7930371	Statement	error_setg	35:8:719:728	7930264	0	True				
ANR	7930372	Statement	(	35:18:729:729	7930264	1	True				
ANR	7930373	Statement	errp	35:19:730:733	7930264	2	True				
ANR	7930374	Statement	","	35:23:734:734	7930264	3	True				
ANR	7930375	Statement	"""Memory backend has bad page size. """	35:25:736:771	7930264	4	True				
ANR	7930376	Statement	"""Use 'memory-backend-file' with correct mem-path."""	37:19:793:842	7930264	5	True				
ANR	7930377	Statement	)	37:69:843:843	7930264	6	True				
ANR	7930378	ExpressionStatement		37:70:844:844	7930264	7	True				
ANR	7930379	ReturnStatement	return ;	39:8:855:861	7930264	8	True				
ANR	7930380	ReturnType	static void		7930264	1					
ANR	7930381	Identifier	spapr_memory_pre_plug		7930264	2					
ANR	7930382	ParameterList	"HotplugHandler * hotplug_dev , DeviceState * dev , Error * * errp"		7930264	3					
ANR	7930383	Parameter	HotplugHandler * hotplug_dev	1:34:34:60	7930264	0	True				
ANR	7930384	ParameterType	HotplugHandler *		7930264	0					
ANR	7930385	Identifier	hotplug_dev		7930264	1					
ANR	7930386	Parameter	DeviceState * dev	1:63:63:78	7930264	1	True				
ANR	7930387	ParameterType	DeviceState *		7930264	0					
ANR	7930388	Identifier	dev		7930264	1					
ANR	7930389	Parameter	Error * * errp	3:34:116:127	7930264	2	True				
ANR	7930390	ParameterType	Error * *		7930264	0					
ANR	7930391	Identifier	errp		7930264	1					
ANR	7930392	CFGEntryNode	ENTRY		7930264		True				
ANR	7930393	CFGExitNode	EXIT		7930264		True				
ANR	7930394	Symbol	ddc		7930264						
ANR	7930395	Symbol	memory_region_size		7930264						
ANR	7930396	Symbol	NULL		7930264						
ANR	7930397	Symbol	errp		7930264						
ANR	7930398	Symbol	mr		7930264						
ANR	7930399	Symbol	mem_dev		7930264						
ANR	7930400	Symbol	dimm		7930264						
ANR	7930401	Symbol	object_property_get_str		7930264						
ANR	7930402	Symbol	OBJECT		7930264						
ANR	7930403	Symbol	ddc -> get_memory_region		7930264						
ANR	7930404	Symbol	PC_DIMM_MEMDEV_PROP		7930264						
ANR	7930405	Symbol	kvmppc_is_mem_backend_page_size_ok		7930264						
ANR	7930406	Symbol	PC_DIMM		7930264						
ANR	7930407	Symbol	* ddc		7930264						
ANR	7930408	Symbol	SPAPR_MEMORY_BLOCK_SIZE		7930264						
ANR	7930409	Symbol	dev		7930264						
ANR	7930410	Symbol	size		7930264						
ANR	7930411	Symbol	hotplug_dev		7930264						
ANR	7930412	Symbol	PC_DIMM_GET_CLASS		7930264						
