command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5956644	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ne2000_can_receive_1.c								
ANR	5956645	Function	ne2000_can_receive	1:0:0:455							
ANR	5956646	FunctionDef	ne2000_can_receive (void * opaque)		5956645	0					
ANR	5956647	CompoundStatement		3:0:45:455	5956645	0					
ANR	5956648	IdentifierDeclStatement	NE2000State * s = opaque ;	5:4:52:75	5956645	0	True				
ANR	5956649	IdentifierDecl	* s = opaque		5956645	0					
ANR	5956650	IdentifierDeclType	NE2000State *		5956645	0					
ANR	5956651	Identifier	s		5956645	1					
ANR	5956652	AssignmentExpression	* s = opaque		5956645	2		=			
ANR	5956653	Identifier	opaque		5956645	0					
ANR	5956654	Identifier	opaque		5956645	1					
ANR	5956655	IdentifierDeclStatement	"int avail , index , boundary ;"	7:4:82:108	5956645	1	True				
ANR	5956656	IdentifierDecl	avail		5956645	0					
ANR	5956657	IdentifierDeclType	int		5956645	0					
ANR	5956658	Identifier	avail		5956645	1					
ANR	5956659	IdentifierDecl	index		5956645	1					
ANR	5956660	IdentifierDeclType	int		5956645	0					
ANR	5956661	Identifier	index		5956645	1					
ANR	5956662	IdentifierDecl	boundary		5956645	2					
ANR	5956663	IdentifierDeclType	int		5956645	0					
ANR	5956664	Identifier	boundary		5956645	1					
ANR	5956665	IfStatement	if ( s -> cmd & E8390_STOP )		5956645	2					
ANR	5956666	Condition	s -> cmd & E8390_STOP	11:8:125:143	5956645	0	True				
ANR	5956667	BitAndExpression	s -> cmd & E8390_STOP		5956645	0		&			
ANR	5956668	PtrMemberAccess	s -> cmd		5956645	0					
ANR	5956669	Identifier	s		5956645	0					
ANR	5956670	Identifier	cmd		5956645	1					
ANR	5956671	Identifier	E8390_STOP		5956645	1					
ANR	5956672	ReturnStatement	return 0 ;	13:8:155:163	5956645	1	True				
ANR	5956673	PrimaryExpression	0		5956645	0					
ANR	5956674	ExpressionStatement	index = s -> curpag << 8	15:4:170:192	5956645	3	True				
ANR	5956675	AssignmentExpression	index = s -> curpag << 8		5956645	0		=			
ANR	5956676	Identifier	index		5956645	0					
ANR	5956677	ShiftExpression	s -> curpag << 8		5956645	1		<<			
ANR	5956678	PtrMemberAccess	s -> curpag		5956645	0					
ANR	5956679	Identifier	s		5956645	0					
ANR	5956680	Identifier	curpag		5956645	1					
ANR	5956681	PrimaryExpression	8		5956645	1					
ANR	5956682	ExpressionStatement	boundary = s -> boundary << 8	17:4:199:226	5956645	4	True				
ANR	5956683	AssignmentExpression	boundary = s -> boundary << 8		5956645	0		=			
ANR	5956684	Identifier	boundary		5956645	0					
ANR	5956685	ShiftExpression	s -> boundary << 8		5956645	1		<<			
ANR	5956686	PtrMemberAccess	s -> boundary		5956645	0					
ANR	5956687	Identifier	s		5956645	0					
ANR	5956688	Identifier	boundary		5956645	1					
ANR	5956689	PrimaryExpression	8		5956645	1					
ANR	5956690	IfStatement	if ( index < boundary )		5956645	5					
ANR	5956691	Condition	index < boundary	19:8:237:252	5956645	0	True				
ANR	5956692	RelationalExpression	index < boundary		5956645	0		<			
ANR	5956693	Identifier	index		5956645	0					
ANR	5956694	Identifier	boundary		5956645	1					
ANR	5956695	ExpressionStatement	avail = boundary - index	21:8:264:288	5956645	1	True				
ANR	5956696	AssignmentExpression	avail = boundary - index		5956645	0		=			
ANR	5956697	Identifier	avail		5956645	0					
ANR	5956698	AdditiveExpression	boundary - index		5956645	1		-			
ANR	5956699	Identifier	boundary		5956645	0					
ANR	5956700	Identifier	index		5956645	1					
ANR	5956701	ElseStatement	else		5956645	0					
ANR	5956702	ExpressionStatement	avail = ( s -> stop - s -> start ) - ( index - boundary )	25:8:309:358	5956645	0	True				
ANR	5956703	AssignmentExpression	avail = ( s -> stop - s -> start ) - ( index - boundary )		5956645	0		=			
ANR	5956704	Identifier	avail		5956645	0					
ANR	5956705	AdditiveExpression	( s -> stop - s -> start ) - ( index - boundary )		5956645	1		-			
ANR	5956706	AdditiveExpression	s -> stop - s -> start		5956645	0		-			
ANR	5956707	PtrMemberAccess	s -> stop		5956645	0					
ANR	5956708	Identifier	s		5956645	0					
ANR	5956709	Identifier	stop		5956645	1					
ANR	5956710	PtrMemberAccess	s -> start		5956645	1					
ANR	5956711	Identifier	s		5956645	0					
ANR	5956712	Identifier	start		5956645	1					
ANR	5956713	AdditiveExpression	index - boundary		5956645	1		-			
ANR	5956714	Identifier	index		5956645	0					
ANR	5956715	Identifier	boundary		5956645	1					
ANR	5956716	IfStatement	if ( avail < ( MAX_ETH_FRAME_SIZE + 4 ) )		5956645	6					
ANR	5956717	Condition	avail < ( MAX_ETH_FRAME_SIZE + 4 )	27:8:369:400	5956645	0	True				
ANR	5956718	RelationalExpression	avail < ( MAX_ETH_FRAME_SIZE + 4 )		5956645	0		<			
ANR	5956719	Identifier	avail		5956645	0					
ANR	5956720	AdditiveExpression	MAX_ETH_FRAME_SIZE + 4		5956645	1		+			
ANR	5956721	Identifier	MAX_ETH_FRAME_SIZE		5956645	0					
ANR	5956722	PrimaryExpression	4		5956645	1					
ANR	5956723	ReturnStatement	return 0 ;	29:8:412:420	5956645	1	True				
ANR	5956724	PrimaryExpression	0		5956645	0					
ANR	5956725	ReturnStatement	return MAX_ETH_FRAME_SIZE ;	31:4:427:452	5956645	7	True				
ANR	5956726	Identifier	MAX_ETH_FRAME_SIZE		5956645	0					
ANR	5956727	ReturnType	static int		5956645	1					
ANR	5956728	Identifier	ne2000_can_receive		5956645	2					
ANR	5956729	ParameterList	void * opaque		5956645	3					
ANR	5956730	Parameter	void * opaque	1:30:30:41	5956645	0	True				
ANR	5956731	ParameterType	void *		5956645	0					
ANR	5956732	Identifier	opaque		5956645	1					
ANR	5956733	CFGEntryNode	ENTRY		5956645		True				
ANR	5956734	CFGExitNode	EXIT		5956645		True				
ANR	5956735	Symbol	boundary		5956645						
ANR	5956736	Symbol	s -> curpag		5956645						
ANR	5956737	Symbol	avail		5956645						
ANR	5956738	Symbol	opaque		5956645						
ANR	5956739	Symbol	s -> stop		5956645						
ANR	5956740	Symbol	E8390_STOP		5956645						
ANR	5956741	Symbol	s -> start		5956645						
ANR	5956742	Symbol	index		5956645						
ANR	5956743	Symbol	s -> cmd		5956645						
ANR	5956744	Symbol	s -> boundary		5956645						
ANR	5956745	Symbol	MAX_ETH_FRAME_SIZE		5956645						
ANR	5956746	Symbol	s		5956645						
ANR	5956747	Symbol	* s		5956645						
