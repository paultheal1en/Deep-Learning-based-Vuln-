command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5076144	File	/home/p4ultr4n/workplace/ReVeal/raw_code/kmvc_decode_inter_8x8_01_1.c								
ANR	5076145	Function	kmvc_decode_inter_8x8	1:0:0:5336							
ANR	5076146	FunctionDef	"kmvc_decode_inter_8x8 (KmvcContext * ctx , const uint8_t * src , int src_size , int w , int h)"		5076145	0					
ANR	5076147	CompoundStatement		3:0:102:5336	5076145	0					
ANR	5076148	IdentifierDeclStatement	BitBuf bb ;	5:4:109:118	5076145	0	True				
ANR	5076149	IdentifierDecl	bb		5076145	0					
ANR	5076150	IdentifierDeclType	BitBuf		5076145	0					
ANR	5076151	Identifier	bb		5076145	1					
ANR	5076152	IdentifierDeclStatement	"int res , val ;"	7:4:125:137	5076145	1	True				
ANR	5076153	IdentifierDecl	res		5076145	0					
ANR	5076154	IdentifierDeclType	int		5076145	0					
ANR	5076155	Identifier	res		5076145	1					
ANR	5076156	IdentifierDecl	val		5076145	1					
ANR	5076157	IdentifierDeclType	int		5076145	0					
ANR	5076158	Identifier	val		5076145	1					
ANR	5076159	IdentifierDeclStatement	"int i , j ;"	9:4:144:152	5076145	2	True				
ANR	5076160	IdentifierDecl	i		5076145	0					
ANR	5076161	IdentifierDeclType	int		5076145	0					
ANR	5076162	Identifier	i		5076145	1					
ANR	5076163	IdentifierDecl	j		5076145	1					
ANR	5076164	IdentifierDeclType	int		5076145	0					
ANR	5076165	Identifier	j		5076145	1					
ANR	5076166	IdentifierDeclStatement	"int bx , by ;"	11:4:159:169	5076145	3	True				
ANR	5076167	IdentifierDecl	bx		5076145	0					
ANR	5076168	IdentifierDeclType	int		5076145	0					
ANR	5076169	Identifier	bx		5076145	1					
ANR	5076170	IdentifierDecl	by		5076145	1					
ANR	5076171	IdentifierDeclType	int		5076145	0					
ANR	5076172	Identifier	by		5076145	1					
ANR	5076173	IdentifierDeclStatement	"int l0x , l1x , l0y , l1y ;"	13:4:176:198	5076145	4	True				
ANR	5076174	IdentifierDecl	l0x		5076145	0					
ANR	5076175	IdentifierDeclType	int		5076145	0					
ANR	5076176	Identifier	l0x		5076145	1					
ANR	5076177	IdentifierDecl	l1x		5076145	1					
ANR	5076178	IdentifierDeclType	int		5076145	0					
ANR	5076179	Identifier	l1x		5076145	1					
ANR	5076180	IdentifierDecl	l0y		5076145	2					
ANR	5076181	IdentifierDeclType	int		5076145	0					
ANR	5076182	Identifier	l0y		5076145	1					
ANR	5076183	IdentifierDecl	l1y		5076145	3					
ANR	5076184	IdentifierDeclType	int		5076145	0					
ANR	5076185	Identifier	l1y		5076145	1					
ANR	5076186	IdentifierDeclStatement	"int mx , my ;"	15:4:205:215	5076145	5	True				
ANR	5076187	IdentifierDecl	mx		5076145	0					
ANR	5076188	IdentifierDeclType	int		5076145	0					
ANR	5076189	Identifier	mx		5076145	1					
ANR	5076190	IdentifierDecl	my		5076145	1					
ANR	5076191	IdentifierDeclType	int		5076145	0					
ANR	5076192	Identifier	my		5076145	1					
ANR	5076193	IdentifierDeclStatement	const uint8_t * src_end = src + src_size ;	17:4:222:261	5076145	6	True				
ANR	5076194	IdentifierDecl	* src_end = src + src_size		5076145	0					
ANR	5076195	IdentifierDeclType	const uint8_t *		5076145	0					
ANR	5076196	Identifier	src_end		5076145	1					
ANR	5076197	AssignmentExpression	* src_end = src + src_size		5076145	2		=			
ANR	5076198	Identifier	src_end		5076145	0					
ANR	5076199	AdditiveExpression	src + src_size		5076145	1		+			
ANR	5076200	Identifier	src		5076145	0					
ANR	5076201	Identifier	src_size		5076145	1					
ANR	5076202	ExpressionStatement	"kmvc_init_getbits ( bb , src )"	21:4:270:296	5076145	7	True				
ANR	5076203	CallExpression	"kmvc_init_getbits ( bb , src )"		5076145	0					
ANR	5076204	Callee	kmvc_init_getbits		5076145	0					
ANR	5076205	Identifier	kmvc_init_getbits		5076145	0					
ANR	5076206	ArgumentList	bb		5076145	1					
ANR	5076207	Argument	bb		5076145	0					
ANR	5076208	Identifier	bb		5076145	0					
ANR	5076209	Argument	src		5076145	1					
ANR	5076210	Identifier	src		5076145	0					
ANR	5076211	ForStatement	for ( by = 0 ; by < h ; by += 8 )		5076145	8					
ANR	5076212	ForInit	by = 0 ;	25:9:310:316	5076145	0	True				
ANR	5076213	AssignmentExpression	by = 0		5076145	0		=			
ANR	5076214	Identifier	by		5076145	0					
ANR	5076215	PrimaryExpression	0		5076145	1					
ANR	5076216	Condition	by < h	25:17:318:323	5076145	1	True				
ANR	5076217	RelationalExpression	by < h		5076145	0		<			
ANR	5076218	Identifier	by		5076145	0					
ANR	5076219	Identifier	h		5076145	1					
ANR	5076220	AssignmentExpression	by += 8	25:25:326:332	5076145	2	True	+=			
ANR	5076221	Identifier	by		5076145	0					
ANR	5076222	PrimaryExpression	8		5076145	1					
ANR	5076223	ForStatement	for ( bx = 0 ; bx < w ; bx += 8 )		5076145	3					
ANR	5076224	ForInit	bx = 0 ;	27:13:349:355	5076145	0	True				
ANR	5076225	AssignmentExpression	bx = 0		5076145	0		=			
ANR	5076226	Identifier	bx		5076145	0					
ANR	5076227	PrimaryExpression	0		5076145	1					
ANR	5076228	Condition	bx < w	27:21:357:362	5076145	1	True				
ANR	5076229	RelationalExpression	bx < w		5076145	0		<			
ANR	5076230	Identifier	bx		5076145	0					
ANR	5076231	Identifier	w		5076145	1					
ANR	5076232	AssignmentExpression	bx += 8	27:29:365:371	5076145	2	True	+=			
ANR	5076233	Identifier	bx		5076145	0					
ANR	5076234	PrimaryExpression	8		5076145	1					
ANR	5076235	CompoundStatement		25:38:271:271	5076145	3					
ANR	5076236	ExpressionStatement	"kmvc_getbit ( bb , src , src_end , res )"	29:12:389:423	5076145	0	True				
ANR	5076237	CallExpression	"kmvc_getbit ( bb , src , src_end , res )"		5076145	0					
ANR	5076238	Callee	kmvc_getbit		5076145	0					
ANR	5076239	Identifier	kmvc_getbit		5076145	0					
ANR	5076240	ArgumentList	bb		5076145	1					
ANR	5076241	Argument	bb		5076145	0					
ANR	5076242	Identifier	bb		5076145	0					
ANR	5076243	Argument	src		5076145	1					
ANR	5076244	Identifier	src		5076145	0					
ANR	5076245	Argument	src_end		5076145	2					
ANR	5076246	Identifier	src_end		5076145	0					
ANR	5076247	Argument	res		5076145	3					
ANR	5076248	Identifier	res		5076145	0					
ANR	5076249	IfStatement	if ( ! res )		5076145	1					
ANR	5076250	Condition	! res	31:16:442:445	5076145	0	True				
ANR	5076251	UnaryOperationExpression	! res		5076145	0					
ANR	5076252	UnaryOperator	!		5076145	0					
ANR	5076253	Identifier	res		5076145	1					
ANR	5076254	CompoundStatement		29:22:345:345	5076145	1					
ANR	5076255	ExpressionStatement	"kmvc_getbit ( bb , src , src_end , res )"	33:16:467:501	5076145	0	True				
ANR	5076256	CallExpression	"kmvc_getbit ( bb , src , src_end , res )"		5076145	0					
ANR	5076257	Callee	kmvc_getbit		5076145	0					
ANR	5076258	Identifier	kmvc_getbit		5076145	0					
ANR	5076259	ArgumentList	bb		5076145	1					
ANR	5076260	Argument	bb		5076145	0					
ANR	5076261	Identifier	bb		5076145	0					
ANR	5076262	Argument	src		5076145	1					
ANR	5076263	Identifier	src		5076145	0					
ANR	5076264	Argument	src_end		5076145	2					
ANR	5076265	Identifier	src_end		5076145	0					
ANR	5076266	Argument	res		5076145	3					
ANR	5076267	Identifier	res		5076145	0					
ANR	5076268	IfStatement	if ( ! res )		5076145	1					
ANR	5076269	Condition	! res	35:20:524:527	5076145	0	True				
ANR	5076270	UnaryOperationExpression	! res		5076145	0					
ANR	5076271	UnaryOperator	!		5076145	0					
ANR	5076272	Identifier	res		5076145	1					
ANR	5076273	CompoundStatement		33:26:427:427	5076145	1					
ANR	5076274	IfStatement	if ( src >= src_end )		5076145	0					
ANR	5076275	Condition	src >= src_end	37:24:585:598	5076145	0	True				
ANR	5076276	RelationalExpression	src >= src_end		5076145	0		>=			
ANR	5076277	Identifier	src		5076145	0					
ANR	5076278	Identifier	src_end		5076145	1					
ANR	5076279	CompoundStatement		35:40:498:498	5076145	1					
ANR	5076280	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"	39:24:628:678	5076145	0	True				
ANR	5076281	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"		5076145	0					
ANR	5076282	Callee	av_log		5076145	0					
ANR	5076283	Identifier	av_log		5076145	0					
ANR	5076284	ArgumentList	ctx -> avctx		5076145	1					
ANR	5076285	Argument	ctx -> avctx		5076145	0					
ANR	5076286	PtrMemberAccess	ctx -> avctx		5076145	0					
ANR	5076287	Identifier	ctx		5076145	0					
ANR	5076288	Identifier	avctx		5076145	1					
ANR	5076289	Argument	AV_LOG_ERROR		5076145	1					
ANR	5076290	Identifier	AV_LOG_ERROR		5076145	0					
ANR	5076291	Argument	"""Data overrun\\n"""		5076145	2					
ANR	5076292	PrimaryExpression	"""Data overrun\\n"""		5076145	0					
ANR	5076293	ReturnStatement	return AVERROR_INVALIDDATA ;	41:24:705:731	5076145	1	True				
ANR	5076294	Identifier	AVERROR_INVALIDDATA		5076145	0					
ANR	5076295	ExpressionStatement	val = * src ++	45:20:777:789	5076145	1	True				
ANR	5076296	AssignmentExpression	val = * src ++		5076145	0		=			
ANR	5076297	Identifier	val		5076145	0					
ANR	5076298	UnaryOperationExpression	* src ++		5076145	1					
ANR	5076299	UnaryOperator	*		5076145	0					
ANR	5076300	PostIncDecOperationExpression	src ++		5076145	1					
ANR	5076301	Identifier	src		5076145	0					
ANR	5076302	IncDec	++		5076145	1					
ANR	5076303	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		5076145	2					
ANR	5076304	ForInit	i = 0 ;	47:25:817:822	5076145	0	True				
ANR	5076305	AssignmentExpression	i = 0		5076145	0		=			
ANR	5076306	Identifier	i		5076145	0					
ANR	5076307	PrimaryExpression	0		5076145	1					
ANR	5076308	Condition	i < 64	47:32:824:829	5076145	1	True				
ANR	5076309	RelationalExpression	i < 64		5076145	0		<			
ANR	5076310	Identifier	i		5076145	0					
ANR	5076311	PrimaryExpression	64		5076145	1					
ANR	5076312	PostIncDecOperationExpression	i ++	47:40:832:834	5076145	2	True				
ANR	5076313	Identifier	i		5076145	0					
ANR	5076314	IncDec	++		5076145	1					
ANR	5076315	ExpressionStatement	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) ) = val"	49:24:862:912	5076145	3	True				
ANR	5076316	AssignmentExpression	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) ) = val"		5076145	0		=			
ANR	5076317	CallExpression	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) )"		5076145	0					
ANR	5076318	Callee	BLK		5076145	0					
ANR	5076319	Identifier	BLK		5076145	0					
ANR	5076320	ArgumentList	ctx -> cur		5076145	1					
ANR	5076321	Argument	ctx -> cur		5076145	0					
ANR	5076322	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5076323	Identifier	ctx		5076145	0					
ANR	5076324	Identifier	cur		5076145	1					
ANR	5076325	Argument	bx + ( i & 0x7 )		5076145	1					
ANR	5076326	AdditiveExpression	bx + ( i & 0x7 )		5076145	0		+			
ANR	5076327	Identifier	bx		5076145	0					
ANR	5076328	BitAndExpression	i & 0x7		5076145	1		&			
ANR	5076329	Identifier	i		5076145	0					
ANR	5076330	PrimaryExpression	0x7		5076145	1					
ANR	5076331	Argument	by + ( i >> 3 )		5076145	2					
ANR	5076332	AdditiveExpression	by + ( i >> 3 )		5076145	0		+			
ANR	5076333	Identifier	by		5076145	0					
ANR	5076334	ShiftExpression	i >> 3		5076145	1		>>			
ANR	5076335	Identifier	i		5076145	0					
ANR	5076336	PrimaryExpression	3		5076145	1					
ANR	5076337	Identifier	val		5076145	1					
ANR	5076338	ElseStatement	else		5076145	0					
ANR	5076339	CompoundStatement		49:23:835:835	5076145	0					
ANR	5076340	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		5076145	0					
ANR	5076341	ForInit	i = 0 ;	53:25:1007:1012	5076145	0	True				
ANR	5076342	AssignmentExpression	i = 0		5076145	0		=			
ANR	5076343	Identifier	i		5076145	0					
ANR	5076344	PrimaryExpression	0		5076145	1					
ANR	5076345	Condition	i < 64	53:32:1014:1019	5076145	1	True				
ANR	5076346	RelationalExpression	i < 64		5076145	0		<			
ANR	5076347	Identifier	i		5076145	0					
ANR	5076348	PrimaryExpression	64		5076145	1					
ANR	5076349	PostIncDecOperationExpression	i ++	53:40:1022:1024	5076145	2	True				
ANR	5076350	Identifier	i		5076145	0					
ANR	5076351	IncDec	++		5076145	1					
ANR	5076352	ExpressionStatement	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) ) = BLK ( ctx -> prev , bx + ( i & 0x7 ) , by + ( i >> 3 ) )"	55:24:1052:1173	5076145	3	True				
ANR	5076353	AssignmentExpression	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) ) = BLK ( ctx -> prev , bx + ( i & 0x7 ) , by + ( i >> 3 ) )"		5076145	0		=			
ANR	5076354	CallExpression	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) )"		5076145	0					
ANR	5076355	Callee	BLK		5076145	0					
ANR	5076356	Identifier	BLK		5076145	0					
ANR	5076357	ArgumentList	ctx -> cur		5076145	1					
ANR	5076358	Argument	ctx -> cur		5076145	0					
ANR	5076359	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5076360	Identifier	ctx		5076145	0					
ANR	5076361	Identifier	cur		5076145	1					
ANR	5076362	Argument	bx + ( i & 0x7 )		5076145	1					
ANR	5076363	AdditiveExpression	bx + ( i & 0x7 )		5076145	0		+			
ANR	5076364	Identifier	bx		5076145	0					
ANR	5076365	BitAndExpression	i & 0x7		5076145	1		&			
ANR	5076366	Identifier	i		5076145	0					
ANR	5076367	PrimaryExpression	0x7		5076145	1					
ANR	5076368	Argument	by + ( i >> 3 )		5076145	2					
ANR	5076369	AdditiveExpression	by + ( i >> 3 )		5076145	0		+			
ANR	5076370	Identifier	by		5076145	0					
ANR	5076371	ShiftExpression	i >> 3		5076145	1		>>			
ANR	5076372	Identifier	i		5076145	0					
ANR	5076373	PrimaryExpression	3		5076145	1					
ANR	5076374	CallExpression	"BLK ( ctx -> prev , bx + ( i & 0x7 ) , by + ( i >> 3 ) )"		5076145	1					
ANR	5076375	Callee	BLK		5076145	0					
ANR	5076376	Identifier	BLK		5076145	0					
ANR	5076377	ArgumentList	ctx -> prev		5076145	1					
ANR	5076378	Argument	ctx -> prev		5076145	0					
ANR	5076379	PtrMemberAccess	ctx -> prev		5076145	0					
ANR	5076380	Identifier	ctx		5076145	0					
ANR	5076381	Identifier	prev		5076145	1					
ANR	5076382	Argument	bx + ( i & 0x7 )		5076145	1					
ANR	5076383	AdditiveExpression	bx + ( i & 0x7 )		5076145	0		+			
ANR	5076384	Identifier	bx		5076145	0					
ANR	5076385	BitAndExpression	i & 0x7		5076145	1		&			
ANR	5076386	Identifier	i		5076145	0					
ANR	5076387	PrimaryExpression	0x7		5076145	1					
ANR	5076388	Argument	by + ( i >> 3 )		5076145	2					
ANR	5076389	AdditiveExpression	by + ( i >> 3 )		5076145	0		+			
ANR	5076390	Identifier	by		5076145	0					
ANR	5076391	ShiftExpression	i >> 3		5076145	1		>>			
ANR	5076392	Identifier	i		5076145	0					
ANR	5076393	PrimaryExpression	3		5076145	1					
ANR	5076394	ElseStatement	else		5076145	0					
ANR	5076395	CompoundStatement		59:19:1111:1111	5076145	0					
ANR	5076396	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		5076145	0					
ANR	5076397	ForInit	i = 0 ;	63:21:1278:1283	5076145	0	True				
ANR	5076398	AssignmentExpression	i = 0		5076145	0		=			
ANR	5076399	Identifier	i		5076145	0					
ANR	5076400	PrimaryExpression	0		5076145	1					
ANR	5076401	Condition	i < 4	63:28:1285:1289	5076145	1	True				
ANR	5076402	RelationalExpression	i < 4		5076145	0		<			
ANR	5076403	Identifier	i		5076145	0					
ANR	5076404	PrimaryExpression	4		5076145	1					
ANR	5076405	PostIncDecOperationExpression	i ++	63:35:1292:1294	5076145	2	True				
ANR	5076406	Identifier	i		5076145	0					
ANR	5076407	IncDec	++		5076145	1					
ANR	5076408	CompoundStatement		61:40:1194:1194	5076145	3					
ANR	5076409	ExpressionStatement	l0x = bx + ( i & 1 ) * 4	65:20:1320:1342	5076145	0	True				
ANR	5076410	AssignmentExpression	l0x = bx + ( i & 1 ) * 4		5076145	0		=			
ANR	5076411	Identifier	l0x		5076145	0					
ANR	5076412	AdditiveExpression	bx + ( i & 1 ) * 4		5076145	1		+			
ANR	5076413	Identifier	bx		5076145	0					
ANR	5076414	MultiplicativeExpression	( i & 1 ) * 4		5076145	1		*			
ANR	5076415	BitAndExpression	i & 1		5076145	0		&			
ANR	5076416	Identifier	i		5076145	0					
ANR	5076417	PrimaryExpression	1		5076145	1					
ANR	5076418	PrimaryExpression	4		5076145	1					
ANR	5076419	ExpressionStatement	l0y = by + ( i & 2 ) * 2	67:20:1365:1387	5076145	1	True				
ANR	5076420	AssignmentExpression	l0y = by + ( i & 2 ) * 2		5076145	0		=			
ANR	5076421	Identifier	l0y		5076145	0					
ANR	5076422	AdditiveExpression	by + ( i & 2 ) * 2		5076145	1		+			
ANR	5076423	Identifier	by		5076145	0					
ANR	5076424	MultiplicativeExpression	( i & 2 ) * 2		5076145	1		*			
ANR	5076425	BitAndExpression	i & 2		5076145	0		&			
ANR	5076426	Identifier	i		5076145	0					
ANR	5076427	PrimaryExpression	2		5076145	1					
ANR	5076428	PrimaryExpression	2		5076145	1					
ANR	5076429	ExpressionStatement	"kmvc_getbit ( bb , src , src_end , res )"	69:20:1410:1444	5076145	2	True				
ANR	5076430	CallExpression	"kmvc_getbit ( bb , src , src_end , res )"		5076145	0					
ANR	5076431	Callee	kmvc_getbit		5076145	0					
ANR	5076432	Identifier	kmvc_getbit		5076145	0					
ANR	5076433	ArgumentList	bb		5076145	1					
ANR	5076434	Argument	bb		5076145	0					
ANR	5076435	Identifier	bb		5076145	0					
ANR	5076436	Argument	src		5076145	1					
ANR	5076437	Identifier	src		5076145	0					
ANR	5076438	Argument	src_end		5076145	2					
ANR	5076439	Identifier	src_end		5076145	0					
ANR	5076440	Argument	res		5076145	3					
ANR	5076441	Identifier	res		5076145	0					
ANR	5076442	IfStatement	if ( ! res )		5076145	3					
ANR	5076443	Condition	! res	71:24:1471:1474	5076145	0	True				
ANR	5076444	UnaryOperationExpression	! res		5076145	0					
ANR	5076445	UnaryOperator	!		5076145	0					
ANR	5076446	Identifier	res		5076145	1					
ANR	5076447	CompoundStatement		69:30:1374:1374	5076145	1					
ANR	5076448	ExpressionStatement	"kmvc_getbit ( bb , src , src_end , res )"	73:24:1504:1538	5076145	0	True				
ANR	5076449	CallExpression	"kmvc_getbit ( bb , src , src_end , res )"		5076145	0					
ANR	5076450	Callee	kmvc_getbit		5076145	0					
ANR	5076451	Identifier	kmvc_getbit		5076145	0					
ANR	5076452	ArgumentList	bb		5076145	1					
ANR	5076453	Argument	bb		5076145	0					
ANR	5076454	Identifier	bb		5076145	0					
ANR	5076455	Argument	src		5076145	1					
ANR	5076456	Identifier	src		5076145	0					
ANR	5076457	Argument	src_end		5076145	2					
ANR	5076458	Identifier	src_end		5076145	0					
ANR	5076459	Argument	res		5076145	3					
ANR	5076460	Identifier	res		5076145	0					
ANR	5076461	IfStatement	if ( ! res )		5076145	1					
ANR	5076462	Condition	! res	75:28:1569:1572	5076145	0	True				
ANR	5076463	UnaryOperationExpression	! res		5076145	0					
ANR	5076464	UnaryOperator	!		5076145	0					
ANR	5076465	Identifier	res		5076145	1					
ANR	5076466	CompoundStatement		73:34:1472:1472	5076145	1					
ANR	5076467	IfStatement	if ( src >= src_end )		5076145	0					
ANR	5076468	Condition	src >= src_end	77:32:1638:1651	5076145	0	True				
ANR	5076469	RelationalExpression	src >= src_end		5076145	0		>=			
ANR	5076470	Identifier	src		5076145	0					
ANR	5076471	Identifier	src_end		5076145	1					
ANR	5076472	CompoundStatement		75:48:1551:1551	5076145	1					
ANR	5076473	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"	79:32:1689:1739	5076145	0	True				
ANR	5076474	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"		5076145	0					
ANR	5076475	Callee	av_log		5076145	0					
ANR	5076476	Identifier	av_log		5076145	0					
ANR	5076477	ArgumentList	ctx -> avctx		5076145	1					
ANR	5076478	Argument	ctx -> avctx		5076145	0					
ANR	5076479	PtrMemberAccess	ctx -> avctx		5076145	0					
ANR	5076480	Identifier	ctx		5076145	0					
ANR	5076481	Identifier	avctx		5076145	1					
ANR	5076482	Argument	AV_LOG_ERROR		5076145	1					
ANR	5076483	Identifier	AV_LOG_ERROR		5076145	0					
ANR	5076484	Argument	"""Data overrun\\n"""		5076145	2					
ANR	5076485	PrimaryExpression	"""Data overrun\\n"""		5076145	0					
ANR	5076486	ReturnStatement	return AVERROR_INVALIDDATA ;	81:32:1774:1800	5076145	1	True				
ANR	5076487	Identifier	AVERROR_INVALIDDATA		5076145	0					
ANR	5076488	ExpressionStatement	val = * src ++	85:28:1862:1874	5076145	1	True				
ANR	5076489	AssignmentExpression	val = * src ++		5076145	0		=			
ANR	5076490	Identifier	val		5076145	0					
ANR	5076491	UnaryOperationExpression	* src ++		5076145	1					
ANR	5076492	UnaryOperator	*		5076145	0					
ANR	5076493	PostIncDecOperationExpression	src ++		5076145	1					
ANR	5076494	Identifier	src		5076145	0					
ANR	5076495	IncDec	++		5076145	1					
ANR	5076496	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		5076145	2					
ANR	5076497	ForInit	j = 0 ;	87:33:1910:1915	5076145	0	True				
ANR	5076498	AssignmentExpression	j = 0		5076145	0		=			
ANR	5076499	Identifier	j		5076145	0					
ANR	5076500	PrimaryExpression	0		5076145	1					
ANR	5076501	Condition	j < 16	87:40:1917:1922	5076145	1	True				
ANR	5076502	RelationalExpression	j < 16		5076145	0		<			
ANR	5076503	Identifier	j		5076145	0					
ANR	5076504	PrimaryExpression	16		5076145	1					
ANR	5076505	PostIncDecOperationExpression	j ++	87:48:1925:1927	5076145	2	True				
ANR	5076506	Identifier	j		5076145	0					
ANR	5076507	IncDec	++		5076145	1					
ANR	5076508	ExpressionStatement	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) ) = val"	89:32:1963:2013	5076145	3	True				
ANR	5076509	AssignmentExpression	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) ) = val"		5076145	0		=			
ANR	5076510	CallExpression	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) )"		5076145	0					
ANR	5076511	Callee	BLK		5076145	0					
ANR	5076512	Identifier	BLK		5076145	0					
ANR	5076513	ArgumentList	ctx -> cur		5076145	1					
ANR	5076514	Argument	ctx -> cur		5076145	0					
ANR	5076515	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5076516	Identifier	ctx		5076145	0					
ANR	5076517	Identifier	cur		5076145	1					
ANR	5076518	Argument	l0x + ( j & 3 )		5076145	1					
ANR	5076519	AdditiveExpression	l0x + ( j & 3 )		5076145	0		+			
ANR	5076520	Identifier	l0x		5076145	0					
ANR	5076521	BitAndExpression	j & 3		5076145	1		&			
ANR	5076522	Identifier	j		5076145	0					
ANR	5076523	PrimaryExpression	3		5076145	1					
ANR	5076524	Argument	l0y + ( j >> 2 )		5076145	2					
ANR	5076525	AdditiveExpression	l0y + ( j >> 2 )		5076145	0		+			
ANR	5076526	Identifier	l0y		5076145	0					
ANR	5076527	ShiftExpression	j >> 2		5076145	1		>>			
ANR	5076528	Identifier	j		5076145	0					
ANR	5076529	PrimaryExpression	2		5076145	1					
ANR	5076530	Identifier	val		5076145	1					
ANR	5076531	ElseStatement	else		5076145	0					
ANR	5076532	CompoundStatement		89:31:1944:1944	5076145	0					
ANR	5076533	IfStatement	if ( src >= src_end )		5076145	0					
ANR	5076534	Condition	src >= src_end	93:32:2103:2116	5076145	0	True				
ANR	5076535	RelationalExpression	src >= src_end		5076145	0		>=			
ANR	5076536	Identifier	src		5076145	0					
ANR	5076537	Identifier	src_end		5076145	1					
ANR	5076538	CompoundStatement		91:48:2016:2016	5076145	1					
ANR	5076539	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"	95:32:2154:2204	5076145	0	True				
ANR	5076540	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"		5076145	0					
ANR	5076541	Callee	av_log		5076145	0					
ANR	5076542	Identifier	av_log		5076145	0					
ANR	5076543	ArgumentList	ctx -> avctx		5076145	1					
ANR	5076544	Argument	ctx -> avctx		5076145	0					
ANR	5076545	PtrMemberAccess	ctx -> avctx		5076145	0					
ANR	5076546	Identifier	ctx		5076145	0					
ANR	5076547	Identifier	avctx		5076145	1					
ANR	5076548	Argument	AV_LOG_ERROR		5076145	1					
ANR	5076549	Identifier	AV_LOG_ERROR		5076145	0					
ANR	5076550	Argument	"""Data overrun\\n"""		5076145	2					
ANR	5076551	PrimaryExpression	"""Data overrun\\n"""		5076145	0					
ANR	5076552	ReturnStatement	return AVERROR_INVALIDDATA ;	97:32:2239:2265	5076145	1	True				
ANR	5076553	Identifier	AVERROR_INVALIDDATA		5076145	0					
ANR	5076554	ExpressionStatement	val = * src ++	101:28:2327:2339	5076145	1	True				
ANR	5076555	AssignmentExpression	val = * src ++		5076145	0		=			
ANR	5076556	Identifier	val		5076145	0					
ANR	5076557	UnaryOperationExpression	* src ++		5076145	1					
ANR	5076558	UnaryOperator	*		5076145	0					
ANR	5076559	PostIncDecOperationExpression	src ++		5076145	1					
ANR	5076560	Identifier	src		5076145	0					
ANR	5076561	IncDec	++		5076145	1					
ANR	5076562	ExpressionStatement	mx = ( val & 0xF ) - 8	103:28:2370:2390	5076145	2	True				
ANR	5076563	AssignmentExpression	mx = ( val & 0xF ) - 8		5076145	0		=			
ANR	5076564	Identifier	mx		5076145	0					
ANR	5076565	AdditiveExpression	( val & 0xF ) - 8		5076145	1		-			
ANR	5076566	BitAndExpression	val & 0xF		5076145	0		&			
ANR	5076567	Identifier	val		5076145	0					
ANR	5076568	PrimaryExpression	0xF		5076145	1					
ANR	5076569	PrimaryExpression	8		5076145	1					
ANR	5076570	ExpressionStatement	my = ( val >> 4 ) - 8	105:28:2421:2440	5076145	3	True				
ANR	5076571	AssignmentExpression	my = ( val >> 4 ) - 8		5076145	0		=			
ANR	5076572	Identifier	my		5076145	0					
ANR	5076573	AdditiveExpression	( val >> 4 ) - 8		5076145	1		-			
ANR	5076574	ShiftExpression	val >> 4		5076145	0		>>			
ANR	5076575	Identifier	val		5076145	0					
ANR	5076576	PrimaryExpression	4		5076145	1					
ANR	5076577	PrimaryExpression	8		5076145	1					
ANR	5076578	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		5076145	4					
ANR	5076579	ForInit	j = 0 ;	107:33:2476:2481	5076145	0	True				
ANR	5076580	AssignmentExpression	j = 0		5076145	0		=			
ANR	5076581	Identifier	j		5076145	0					
ANR	5076582	PrimaryExpression	0		5076145	1					
ANR	5076583	Condition	j < 16	107:40:2483:2488	5076145	1	True				
ANR	5076584	RelationalExpression	j < 16		5076145	0		<			
ANR	5076585	Identifier	j		5076145	0					
ANR	5076586	PrimaryExpression	16		5076145	1					
ANR	5076587	PostIncDecOperationExpression	j ++	107:48:2491:2493	5076145	2	True				
ANR	5076588	Identifier	j		5076145	0					
ANR	5076589	IncDec	++		5076145	1					
ANR	5076590	ExpressionStatement	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) ) = BLK ( ctx -> prev , l0x + ( j & 3 ) + mx , l0y + ( j >> 2 ) + my )"	109:32:2529:2668	5076145	3	True				
ANR	5076591	AssignmentExpression	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) ) = BLK ( ctx -> prev , l0x + ( j & 3 ) + mx , l0y + ( j >> 2 ) + my )"		5076145	0		=			
ANR	5076592	CallExpression	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) )"		5076145	0					
ANR	5076593	Callee	BLK		5076145	0					
ANR	5076594	Identifier	BLK		5076145	0					
ANR	5076595	ArgumentList	ctx -> cur		5076145	1					
ANR	5076596	Argument	ctx -> cur		5076145	0					
ANR	5076597	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5076598	Identifier	ctx		5076145	0					
ANR	5076599	Identifier	cur		5076145	1					
ANR	5076600	Argument	l0x + ( j & 3 )		5076145	1					
ANR	5076601	AdditiveExpression	l0x + ( j & 3 )		5076145	0		+			
ANR	5076602	Identifier	l0x		5076145	0					
ANR	5076603	BitAndExpression	j & 3		5076145	1		&			
ANR	5076604	Identifier	j		5076145	0					
ANR	5076605	PrimaryExpression	3		5076145	1					
ANR	5076606	Argument	l0y + ( j >> 2 )		5076145	2					
ANR	5076607	AdditiveExpression	l0y + ( j >> 2 )		5076145	0		+			
ANR	5076608	Identifier	l0y		5076145	0					
ANR	5076609	ShiftExpression	j >> 2		5076145	1		>>			
ANR	5076610	Identifier	j		5076145	0					
ANR	5076611	PrimaryExpression	2		5076145	1					
ANR	5076612	CallExpression	"BLK ( ctx -> prev , l0x + ( j & 3 ) + mx , l0y + ( j >> 2 ) + my )"		5076145	1					
ANR	5076613	Callee	BLK		5076145	0					
ANR	5076614	Identifier	BLK		5076145	0					
ANR	5076615	ArgumentList	ctx -> prev		5076145	1					
ANR	5076616	Argument	ctx -> prev		5076145	0					
ANR	5076617	PtrMemberAccess	ctx -> prev		5076145	0					
ANR	5076618	Identifier	ctx		5076145	0					
ANR	5076619	Identifier	prev		5076145	1					
ANR	5076620	Argument	l0x + ( j & 3 ) + mx		5076145	1					
ANR	5076621	AdditiveExpression	l0x + ( j & 3 ) + mx		5076145	0		+			
ANR	5076622	Identifier	l0x		5076145	0					
ANR	5076623	AdditiveExpression	( j & 3 ) + mx		5076145	1		+			
ANR	5076624	BitAndExpression	j & 3		5076145	0		&			
ANR	5076625	Identifier	j		5076145	0					
ANR	5076626	PrimaryExpression	3		5076145	1					
ANR	5076627	Identifier	mx		5076145	1					
ANR	5076628	Argument	l0y + ( j >> 2 ) + my		5076145	2					
ANR	5076629	AdditiveExpression	l0y + ( j >> 2 ) + my		5076145	0		+			
ANR	5076630	Identifier	l0y		5076145	0					
ANR	5076631	AdditiveExpression	( j >> 2 ) + my		5076145	1		+			
ANR	5076632	ShiftExpression	j >> 2		5076145	0		>>			
ANR	5076633	Identifier	j		5076145	0					
ANR	5076634	PrimaryExpression	2		5076145	1					
ANR	5076635	Identifier	my		5076145	1					
ANR	5076636	ElseStatement	else		5076145	0					
ANR	5076637	CompoundStatement		113:27:2622:2622	5076145	0					
ANR	5076638	ForStatement	for ( j = 0 ; j < 4 ; j ++ )		5076145	0					
ANR	5076639	ForInit	j = 0 ;	117:29:2793:2798	5076145	0	True				
ANR	5076640	AssignmentExpression	j = 0		5076145	0		=			
ANR	5076641	Identifier	j		5076145	0					
ANR	5076642	PrimaryExpression	0		5076145	1					
ANR	5076643	Condition	j < 4	117:36:2800:2804	5076145	1	True				
ANR	5076644	RelationalExpression	j < 4		5076145	0		<			
ANR	5076645	Identifier	j		5076145	0					
ANR	5076646	PrimaryExpression	4		5076145	1					
ANR	5076647	PostIncDecOperationExpression	j ++	117:43:2807:2809	5076145	2	True				
ANR	5076648	Identifier	j		5076145	0					
ANR	5076649	IncDec	++		5076145	1					
ANR	5076650	CompoundStatement		115:48:2709:2709	5076145	3					
ANR	5076651	ExpressionStatement	l1x = l0x + ( j & 1 ) * 2	119:28:2843:2866	5076145	0	True				
ANR	5076652	AssignmentExpression	l1x = l0x + ( j & 1 ) * 2		5076145	0		=			
ANR	5076653	Identifier	l1x		5076145	0					
ANR	5076654	AdditiveExpression	l0x + ( j & 1 ) * 2		5076145	1		+			
ANR	5076655	Identifier	l0x		5076145	0					
ANR	5076656	MultiplicativeExpression	( j & 1 ) * 2		5076145	1		*			
ANR	5076657	BitAndExpression	j & 1		5076145	0		&			
ANR	5076658	Identifier	j		5076145	0					
ANR	5076659	PrimaryExpression	1		5076145	1					
ANR	5076660	PrimaryExpression	2		5076145	1					
ANR	5076661	ExpressionStatement	l1y = l0y + ( j & 2 )	121:28:2897:2916	5076145	1	True				
ANR	5076662	AssignmentExpression	l1y = l0y + ( j & 2 )		5076145	0		=			
ANR	5076663	Identifier	l1y		5076145	0					
ANR	5076664	AdditiveExpression	l0y + ( j & 2 )		5076145	1		+			
ANR	5076665	Identifier	l0y		5076145	0					
ANR	5076666	BitAndExpression	j & 2		5076145	1		&			
ANR	5076667	Identifier	j		5076145	0					
ANR	5076668	PrimaryExpression	2		5076145	1					
ANR	5076669	ExpressionStatement	"kmvc_getbit ( bb , src , src_end , res )"	123:28:2947:2981	5076145	2	True				
ANR	5076670	CallExpression	"kmvc_getbit ( bb , src , src_end , res )"		5076145	0					
ANR	5076671	Callee	kmvc_getbit		5076145	0					
ANR	5076672	Identifier	kmvc_getbit		5076145	0					
ANR	5076673	ArgumentList	bb		5076145	1					
ANR	5076674	Argument	bb		5076145	0					
ANR	5076675	Identifier	bb		5076145	0					
ANR	5076676	Argument	src		5076145	1					
ANR	5076677	Identifier	src		5076145	0					
ANR	5076678	Argument	src_end		5076145	2					
ANR	5076679	Identifier	src_end		5076145	0					
ANR	5076680	Argument	res		5076145	3					
ANR	5076681	Identifier	res		5076145	0					
ANR	5076682	IfStatement	if ( ! res )		5076145	3					
ANR	5076683	Condition	! res	125:32:3016:3019	5076145	0	True				
ANR	5076684	UnaryOperationExpression	! res		5076145	0					
ANR	5076685	UnaryOperator	!		5076145	0					
ANR	5076686	Identifier	res		5076145	1					
ANR	5076687	CompoundStatement		123:38:2919:2919	5076145	1					
ANR	5076688	ExpressionStatement	"kmvc_getbit ( bb , src , src_end , res )"	127:32:3057:3091	5076145	0	True				
ANR	5076689	CallExpression	"kmvc_getbit ( bb , src , src_end , res )"		5076145	0					
ANR	5076690	Callee	kmvc_getbit		5076145	0					
ANR	5076691	Identifier	kmvc_getbit		5076145	0					
ANR	5076692	ArgumentList	bb		5076145	1					
ANR	5076693	Argument	bb		5076145	0					
ANR	5076694	Identifier	bb		5076145	0					
ANR	5076695	Argument	src		5076145	1					
ANR	5076696	Identifier	src		5076145	0					
ANR	5076697	Argument	src_end		5076145	2					
ANR	5076698	Identifier	src_end		5076145	0					
ANR	5076699	Argument	res		5076145	3					
ANR	5076700	Identifier	res		5076145	0					
ANR	5076701	IfStatement	if ( ! res )		5076145	1					
ANR	5076702	Condition	! res	129:36:3130:3133	5076145	0	True				
ANR	5076703	UnaryOperationExpression	! res		5076145	0					
ANR	5076704	UnaryOperator	!		5076145	0					
ANR	5076705	Identifier	res		5076145	1					
ANR	5076706	CompoundStatement		127:42:3033:3033	5076145	1					
ANR	5076707	IfStatement	if ( src >= src_end )		5076145	0					
ANR	5076708	Condition	src >= src_end	131:40:3207:3220	5076145	0	True				
ANR	5076709	RelationalExpression	src >= src_end		5076145	0		>=			
ANR	5076710	Identifier	src		5076145	0					
ANR	5076711	Identifier	src_end		5076145	1					
ANR	5076712	CompoundStatement		129:56:3120:3120	5076145	1					
ANR	5076713	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"	133:40:3266:3316	5076145	0	True				
ANR	5076714	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"		5076145	0					
ANR	5076715	Callee	av_log		5076145	0					
ANR	5076716	Identifier	av_log		5076145	0					
ANR	5076717	ArgumentList	ctx -> avctx		5076145	1					
ANR	5076718	Argument	ctx -> avctx		5076145	0					
ANR	5076719	PtrMemberAccess	ctx -> avctx		5076145	0					
ANR	5076720	Identifier	ctx		5076145	0					
ANR	5076721	Identifier	avctx		5076145	1					
ANR	5076722	Argument	AV_LOG_ERROR		5076145	1					
ANR	5076723	Identifier	AV_LOG_ERROR		5076145	0					
ANR	5076724	Argument	"""Data overrun\\n"""		5076145	2					
ANR	5076725	PrimaryExpression	"""Data overrun\\n"""		5076145	0					
ANR	5076726	ReturnStatement	return AVERROR_INVALIDDATA ;	135:40:3359:3385	5076145	1	True				
ANR	5076727	Identifier	AVERROR_INVALIDDATA		5076145	0					
ANR	5076728	ExpressionStatement	val = * src ++	139:36:3463:3475	5076145	1	True				
ANR	5076729	AssignmentExpression	val = * src ++		5076145	0		=			
ANR	5076730	Identifier	val		5076145	0					
ANR	5076731	UnaryOperationExpression	* src ++		5076145	1					
ANR	5076732	UnaryOperator	*		5076145	0					
ANR	5076733	PostIncDecOperationExpression	src ++		5076145	1					
ANR	5076734	Identifier	src		5076145	0					
ANR	5076735	IncDec	++		5076145	1					
ANR	5076736	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y ) = val"	141:36:3514:3543	5076145	2	True				
ANR	5076737	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y ) = val"		5076145	0		=			
ANR	5076738	CallExpression	"BLK ( ctx -> cur , l1x , l1y )"		5076145	0					
ANR	5076739	Callee	BLK		5076145	0					
ANR	5076740	Identifier	BLK		5076145	0					
ANR	5076741	ArgumentList	ctx -> cur		5076145	1					
ANR	5076742	Argument	ctx -> cur		5076145	0					
ANR	5076743	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5076744	Identifier	ctx		5076145	0					
ANR	5076745	Identifier	cur		5076145	1					
ANR	5076746	Argument	l1x		5076145	1					
ANR	5076747	Identifier	l1x		5076145	0					
ANR	5076748	Argument	l1y		5076145	2					
ANR	5076749	Identifier	l1y		5076145	0					
ANR	5076750	Identifier	val		5076145	1					
ANR	5076751	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y ) = val"	143:36:3582:3615	5076145	3	True				
ANR	5076752	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y ) = val"		5076145	0		=			
ANR	5076753	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y )"		5076145	0					
ANR	5076754	Callee	BLK		5076145	0					
ANR	5076755	Identifier	BLK		5076145	0					
ANR	5076756	ArgumentList	ctx -> cur		5076145	1					
ANR	5076757	Argument	ctx -> cur		5076145	0					
ANR	5076758	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5076759	Identifier	ctx		5076145	0					
ANR	5076760	Identifier	cur		5076145	1					
ANR	5076761	Argument	l1x + 1		5076145	1					
ANR	5076762	AdditiveExpression	l1x + 1		5076145	0		+			
ANR	5076763	Identifier	l1x		5076145	0					
ANR	5076764	PrimaryExpression	1		5076145	1					
ANR	5076765	Argument	l1y		5076145	2					
ANR	5076766	Identifier	l1y		5076145	0					
ANR	5076767	Identifier	val		5076145	1					
ANR	5076768	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y + 1 ) = val"	145:36:3654:3687	5076145	4	True				
ANR	5076769	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y + 1 ) = val"		5076145	0		=			
ANR	5076770	CallExpression	"BLK ( ctx -> cur , l1x , l1y + 1 )"		5076145	0					
ANR	5076771	Callee	BLK		5076145	0					
ANR	5076772	Identifier	BLK		5076145	0					
ANR	5076773	ArgumentList	ctx -> cur		5076145	1					
ANR	5076774	Argument	ctx -> cur		5076145	0					
ANR	5076775	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5076776	Identifier	ctx		5076145	0					
ANR	5076777	Identifier	cur		5076145	1					
ANR	5076778	Argument	l1x		5076145	1					
ANR	5076779	Identifier	l1x		5076145	0					
ANR	5076780	Argument	l1y + 1		5076145	2					
ANR	5076781	AdditiveExpression	l1y + 1		5076145	0		+			
ANR	5076782	Identifier	l1y		5076145	0					
ANR	5076783	PrimaryExpression	1		5076145	1					
ANR	5076784	Identifier	val		5076145	1					
ANR	5076785	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = val"	147:36:3726:3763	5076145	5	True				
ANR	5076786	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = val"		5076145	0		=			
ANR	5076787	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 )"		5076145	0					
ANR	5076788	Callee	BLK		5076145	0					
ANR	5076789	Identifier	BLK		5076145	0					
ANR	5076790	ArgumentList	ctx -> cur		5076145	1					
ANR	5076791	Argument	ctx -> cur		5076145	0					
ANR	5076792	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5076793	Identifier	ctx		5076145	0					
ANR	5076794	Identifier	cur		5076145	1					
ANR	5076795	Argument	l1x + 1		5076145	1					
ANR	5076796	AdditiveExpression	l1x + 1		5076145	0		+			
ANR	5076797	Identifier	l1x		5076145	0					
ANR	5076798	PrimaryExpression	1		5076145	1					
ANR	5076799	Argument	l1y + 1		5076145	2					
ANR	5076800	AdditiveExpression	l1y + 1		5076145	0		+			
ANR	5076801	Identifier	l1y		5076145	0					
ANR	5076802	PrimaryExpression	1		5076145	1					
ANR	5076803	Identifier	val		5076145	1					
ANR	5076804	ElseStatement	else		5076145	0					
ANR	5076805	CompoundStatement		147:39:3702:3702	5076145	0					
ANR	5076806	IfStatement	if ( src >= src_end )		5076145	0					
ANR	5076807	Condition	src >= src_end	151:40:3869:3882	5076145	0	True				
ANR	5076808	RelationalExpression	src >= src_end		5076145	0		>=			
ANR	5076809	Identifier	src		5076145	0					
ANR	5076810	Identifier	src_end		5076145	1					
ANR	5076811	CompoundStatement		149:56:3782:3782	5076145	1					
ANR	5076812	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"	153:40:3928:3978	5076145	0	True				
ANR	5076813	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"		5076145	0					
ANR	5076814	Callee	av_log		5076145	0					
ANR	5076815	Identifier	av_log		5076145	0					
ANR	5076816	ArgumentList	ctx -> avctx		5076145	1					
ANR	5076817	Argument	ctx -> avctx		5076145	0					
ANR	5076818	PtrMemberAccess	ctx -> avctx		5076145	0					
ANR	5076819	Identifier	ctx		5076145	0					
ANR	5076820	Identifier	avctx		5076145	1					
ANR	5076821	Argument	AV_LOG_ERROR		5076145	1					
ANR	5076822	Identifier	AV_LOG_ERROR		5076145	0					
ANR	5076823	Argument	"""Data overrun\\n"""		5076145	2					
ANR	5076824	PrimaryExpression	"""Data overrun\\n"""		5076145	0					
ANR	5076825	ReturnStatement	return AVERROR_INVALIDDATA ;	155:40:4021:4047	5076145	1	True				
ANR	5076826	Identifier	AVERROR_INVALIDDATA		5076145	0					
ANR	5076827	ExpressionStatement	val = * src ++	159:36:4125:4137	5076145	1	True				
ANR	5076828	AssignmentExpression	val = * src ++		5076145	0		=			
ANR	5076829	Identifier	val		5076145	0					
ANR	5076830	UnaryOperationExpression	* src ++		5076145	1					
ANR	5076831	UnaryOperator	*		5076145	0					
ANR	5076832	PostIncDecOperationExpression	src ++		5076145	1					
ANR	5076833	Identifier	src		5076145	0					
ANR	5076834	IncDec	++		5076145	1					
ANR	5076835	ExpressionStatement	mx = ( val & 0xF ) - 8	161:36:4176:4196	5076145	2	True				
ANR	5076836	AssignmentExpression	mx = ( val & 0xF ) - 8		5076145	0		=			
ANR	5076837	Identifier	mx		5076145	0					
ANR	5076838	AdditiveExpression	( val & 0xF ) - 8		5076145	1		-			
ANR	5076839	BitAndExpression	val & 0xF		5076145	0		&			
ANR	5076840	Identifier	val		5076145	0					
ANR	5076841	PrimaryExpression	0xF		5076145	1					
ANR	5076842	PrimaryExpression	8		5076145	1					
ANR	5076843	ExpressionStatement	my = ( val >> 4 ) - 8	163:36:4235:4254	5076145	3	True				
ANR	5076844	AssignmentExpression	my = ( val >> 4 ) - 8		5076145	0		=			
ANR	5076845	Identifier	my		5076145	0					
ANR	5076846	AdditiveExpression	( val >> 4 ) - 8		5076145	1		-			
ANR	5076847	ShiftExpression	val >> 4		5076145	0		>>			
ANR	5076848	Identifier	val		5076145	0					
ANR	5076849	PrimaryExpression	4		5076145	1					
ANR	5076850	PrimaryExpression	8		5076145	1					
ANR	5076851	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y ) = BLK ( ctx -> prev , l1x + mx , l1y + my )"	165:36:4293:4353	5076145	4	True				
ANR	5076852	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y ) = BLK ( ctx -> prev , l1x + mx , l1y + my )"		5076145	0		=			
ANR	5076853	CallExpression	"BLK ( ctx -> cur , l1x , l1y )"		5076145	0					
ANR	5076854	Callee	BLK		5076145	0					
ANR	5076855	Identifier	BLK		5076145	0					
ANR	5076856	ArgumentList	ctx -> cur		5076145	1					
ANR	5076857	Argument	ctx -> cur		5076145	0					
ANR	5076858	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5076859	Identifier	ctx		5076145	0					
ANR	5076860	Identifier	cur		5076145	1					
ANR	5076861	Argument	l1x		5076145	1					
ANR	5076862	Identifier	l1x		5076145	0					
ANR	5076863	Argument	l1y		5076145	2					
ANR	5076864	Identifier	l1y		5076145	0					
ANR	5076865	CallExpression	"BLK ( ctx -> prev , l1x + mx , l1y + my )"		5076145	1					
ANR	5076866	Callee	BLK		5076145	0					
ANR	5076867	Identifier	BLK		5076145	0					
ANR	5076868	ArgumentList	ctx -> prev		5076145	1					
ANR	5076869	Argument	ctx -> prev		5076145	0					
ANR	5076870	PtrMemberAccess	ctx -> prev		5076145	0					
ANR	5076871	Identifier	ctx		5076145	0					
ANR	5076872	Identifier	prev		5076145	1					
ANR	5076873	Argument	l1x + mx		5076145	1					
ANR	5076874	AdditiveExpression	l1x + mx		5076145	0		+			
ANR	5076875	Identifier	l1x		5076145	0					
ANR	5076876	Identifier	mx		5076145	1					
ANR	5076877	Argument	l1y + my		5076145	2					
ANR	5076878	AdditiveExpression	l1y + my		5076145	0		+			
ANR	5076879	Identifier	l1y		5076145	0					
ANR	5076880	Identifier	my		5076145	1					
ANR	5076881	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y ) = BLK ( ctx -> prev , l1x + 1 + mx , l1y + my )"	167:36:4392:4501	5076145	5	True				
ANR	5076882	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y ) = BLK ( ctx -> prev , l1x + 1 + mx , l1y + my )"		5076145	0		=			
ANR	5076883	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y )"		5076145	0					
ANR	5076884	Callee	BLK		5076145	0					
ANR	5076885	Identifier	BLK		5076145	0					
ANR	5076886	ArgumentList	ctx -> cur		5076145	1					
ANR	5076887	Argument	ctx -> cur		5076145	0					
ANR	5076888	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5076889	Identifier	ctx		5076145	0					
ANR	5076890	Identifier	cur		5076145	1					
ANR	5076891	Argument	l1x + 1		5076145	1					
ANR	5076892	AdditiveExpression	l1x + 1		5076145	0		+			
ANR	5076893	Identifier	l1x		5076145	0					
ANR	5076894	PrimaryExpression	1		5076145	1					
ANR	5076895	Argument	l1y		5076145	2					
ANR	5076896	Identifier	l1y		5076145	0					
ANR	5076897	CallExpression	"BLK ( ctx -> prev , l1x + 1 + mx , l1y + my )"		5076145	1					
ANR	5076898	Callee	BLK		5076145	0					
ANR	5076899	Identifier	BLK		5076145	0					
ANR	5076900	ArgumentList	ctx -> prev		5076145	1					
ANR	5076901	Argument	ctx -> prev		5076145	0					
ANR	5076902	PtrMemberAccess	ctx -> prev		5076145	0					
ANR	5076903	Identifier	ctx		5076145	0					
ANR	5076904	Identifier	prev		5076145	1					
ANR	5076905	Argument	l1x + 1 + mx		5076145	1					
ANR	5076906	AdditiveExpression	l1x + 1 + mx		5076145	0		+			
ANR	5076907	Identifier	l1x		5076145	0					
ANR	5076908	AdditiveExpression	1 + mx		5076145	1		+			
ANR	5076909	PrimaryExpression	1		5076145	0					
ANR	5076910	Identifier	mx		5076145	1					
ANR	5076911	Argument	l1y + my		5076145	2					
ANR	5076912	AdditiveExpression	l1y + my		5076145	0		+			
ANR	5076913	Identifier	l1y		5076145	0					
ANR	5076914	Identifier	my		5076145	1					
ANR	5076915	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y + 1 ) = BLK ( ctx -> prev , l1x + mx , l1y + 1 + my )"	171:36:4540:4649	5076145	6	True				
ANR	5076916	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y + 1 ) = BLK ( ctx -> prev , l1x + mx , l1y + 1 + my )"		5076145	0		=			
ANR	5076917	CallExpression	"BLK ( ctx -> cur , l1x , l1y + 1 )"		5076145	0					
ANR	5076918	Callee	BLK		5076145	0					
ANR	5076919	Identifier	BLK		5076145	0					
ANR	5076920	ArgumentList	ctx -> cur		5076145	1					
ANR	5076921	Argument	ctx -> cur		5076145	0					
ANR	5076922	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5076923	Identifier	ctx		5076145	0					
ANR	5076924	Identifier	cur		5076145	1					
ANR	5076925	Argument	l1x		5076145	1					
ANR	5076926	Identifier	l1x		5076145	0					
ANR	5076927	Argument	l1y + 1		5076145	2					
ANR	5076928	AdditiveExpression	l1y + 1		5076145	0		+			
ANR	5076929	Identifier	l1y		5076145	0					
ANR	5076930	PrimaryExpression	1		5076145	1					
ANR	5076931	CallExpression	"BLK ( ctx -> prev , l1x + mx , l1y + 1 + my )"		5076145	1					
ANR	5076932	Callee	BLK		5076145	0					
ANR	5076933	Identifier	BLK		5076145	0					
ANR	5076934	ArgumentList	ctx -> prev		5076145	1					
ANR	5076935	Argument	ctx -> prev		5076145	0					
ANR	5076936	PtrMemberAccess	ctx -> prev		5076145	0					
ANR	5076937	Identifier	ctx		5076145	0					
ANR	5076938	Identifier	prev		5076145	1					
ANR	5076939	Argument	l1x + mx		5076145	1					
ANR	5076940	AdditiveExpression	l1x + mx		5076145	0		+			
ANR	5076941	Identifier	l1x		5076145	0					
ANR	5076942	Identifier	mx		5076145	1					
ANR	5076943	Argument	l1y + 1 + my		5076145	2					
ANR	5076944	AdditiveExpression	l1y + 1 + my		5076145	0		+			
ANR	5076945	Identifier	l1y		5076145	0					
ANR	5076946	AdditiveExpression	1 + my		5076145	1		+			
ANR	5076947	PrimaryExpression	1		5076145	0					
ANR	5076948	Identifier	my		5076145	1					
ANR	5076949	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = BLK ( ctx -> prev , l1x + 1 + mx , l1y + 1 + my )"	175:36:4688:4805	5076145	7	True				
ANR	5076950	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = BLK ( ctx -> prev , l1x + 1 + mx , l1y + 1 + my )"		5076145	0		=			
ANR	5076951	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 )"		5076145	0					
ANR	5076952	Callee	BLK		5076145	0					
ANR	5076953	Identifier	BLK		5076145	0					
ANR	5076954	ArgumentList	ctx -> cur		5076145	1					
ANR	5076955	Argument	ctx -> cur		5076145	0					
ANR	5076956	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5076957	Identifier	ctx		5076145	0					
ANR	5076958	Identifier	cur		5076145	1					
ANR	5076959	Argument	l1x + 1		5076145	1					
ANR	5076960	AdditiveExpression	l1x + 1		5076145	0		+			
ANR	5076961	Identifier	l1x		5076145	0					
ANR	5076962	PrimaryExpression	1		5076145	1					
ANR	5076963	Argument	l1y + 1		5076145	2					
ANR	5076964	AdditiveExpression	l1y + 1		5076145	0		+			
ANR	5076965	Identifier	l1y		5076145	0					
ANR	5076966	PrimaryExpression	1		5076145	1					
ANR	5076967	CallExpression	"BLK ( ctx -> prev , l1x + 1 + mx , l1y + 1 + my )"		5076145	1					
ANR	5076968	Callee	BLK		5076145	0					
ANR	5076969	Identifier	BLK		5076145	0					
ANR	5076970	ArgumentList	ctx -> prev		5076145	1					
ANR	5076971	Argument	ctx -> prev		5076145	0					
ANR	5076972	PtrMemberAccess	ctx -> prev		5076145	0					
ANR	5076973	Identifier	ctx		5076145	0					
ANR	5076974	Identifier	prev		5076145	1					
ANR	5076975	Argument	l1x + 1 + mx		5076145	1					
ANR	5076976	AdditiveExpression	l1x + 1 + mx		5076145	0		+			
ANR	5076977	Identifier	l1x		5076145	0					
ANR	5076978	AdditiveExpression	1 + mx		5076145	1		+			
ANR	5076979	PrimaryExpression	1		5076145	0					
ANR	5076980	Identifier	mx		5076145	1					
ANR	5076981	Argument	l1y + 1 + my		5076145	2					
ANR	5076982	AdditiveExpression	l1y + 1 + my		5076145	0		+			
ANR	5076983	Identifier	l1y		5076145	0					
ANR	5076984	AdditiveExpression	1 + my		5076145	1		+			
ANR	5076985	PrimaryExpression	1		5076145	0					
ANR	5076986	Identifier	my		5076145	1					
ANR	5076987	ElseStatement	else		5076145	0					
ANR	5076988	CompoundStatement		179:35:4775:4775	5076145	0					
ANR	5076989	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y ) = * src ++"	183:32:4941:4973	5076145	0	True				
ANR	5076990	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y ) = * src ++"		5076145	0		=			
ANR	5076991	CallExpression	"BLK ( ctx -> cur , l1x , l1y )"		5076145	0					
ANR	5076992	Callee	BLK		5076145	0					
ANR	5076993	Identifier	BLK		5076145	0					
ANR	5076994	ArgumentList	ctx -> cur		5076145	1					
ANR	5076995	Argument	ctx -> cur		5076145	0					
ANR	5076996	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5076997	Identifier	ctx		5076145	0					
ANR	5076998	Identifier	cur		5076145	1					
ANR	5076999	Argument	l1x		5076145	1					
ANR	5077000	Identifier	l1x		5076145	0					
ANR	5077001	Argument	l1y		5076145	2					
ANR	5077002	Identifier	l1y		5076145	0					
ANR	5077003	UnaryOperationExpression	* src ++		5076145	1					
ANR	5077004	UnaryOperator	*		5076145	0					
ANR	5077005	PostIncDecOperationExpression	src ++		5076145	1					
ANR	5077006	Identifier	src		5076145	0					
ANR	5077007	IncDec	++		5076145	1					
ANR	5077008	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y ) = * src ++"	185:32:5008:5044	5076145	1	True				
ANR	5077009	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y ) = * src ++"		5076145	0		=			
ANR	5077010	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y )"		5076145	0					
ANR	5077011	Callee	BLK		5076145	0					
ANR	5077012	Identifier	BLK		5076145	0					
ANR	5077013	ArgumentList	ctx -> cur		5076145	1					
ANR	5077014	Argument	ctx -> cur		5076145	0					
ANR	5077015	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5077016	Identifier	ctx		5076145	0					
ANR	5077017	Identifier	cur		5076145	1					
ANR	5077018	Argument	l1x + 1		5076145	1					
ANR	5077019	AdditiveExpression	l1x + 1		5076145	0		+			
ANR	5077020	Identifier	l1x		5076145	0					
ANR	5077021	PrimaryExpression	1		5076145	1					
ANR	5077022	Argument	l1y		5076145	2					
ANR	5077023	Identifier	l1y		5076145	0					
ANR	5077024	UnaryOperationExpression	* src ++		5076145	1					
ANR	5077025	UnaryOperator	*		5076145	0					
ANR	5077026	PostIncDecOperationExpression	src ++		5076145	1					
ANR	5077027	Identifier	src		5076145	0					
ANR	5077028	IncDec	++		5076145	1					
ANR	5077029	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y + 1 ) = * src ++"	187:32:5079:5115	5076145	2	True				
ANR	5077030	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y + 1 ) = * src ++"		5076145	0		=			
ANR	5077031	CallExpression	"BLK ( ctx -> cur , l1x , l1y + 1 )"		5076145	0					
ANR	5077032	Callee	BLK		5076145	0					
ANR	5077033	Identifier	BLK		5076145	0					
ANR	5077034	ArgumentList	ctx -> cur		5076145	1					
ANR	5077035	Argument	ctx -> cur		5076145	0					
ANR	5077036	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5077037	Identifier	ctx		5076145	0					
ANR	5077038	Identifier	cur		5076145	1					
ANR	5077039	Argument	l1x		5076145	1					
ANR	5077040	Identifier	l1x		5076145	0					
ANR	5077041	Argument	l1y + 1		5076145	2					
ANR	5077042	AdditiveExpression	l1y + 1		5076145	0		+			
ANR	5077043	Identifier	l1y		5076145	0					
ANR	5077044	PrimaryExpression	1		5076145	1					
ANR	5077045	UnaryOperationExpression	* src ++		5076145	1					
ANR	5077046	UnaryOperator	*		5076145	0					
ANR	5077047	PostIncDecOperationExpression	src ++		5076145	1					
ANR	5077048	Identifier	src		5076145	0					
ANR	5077049	IncDec	++		5076145	1					
ANR	5077050	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = * src ++"	189:32:5150:5190	5076145	3	True				
ANR	5077051	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = * src ++"		5076145	0		=			
ANR	5077052	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 )"		5076145	0					
ANR	5077053	Callee	BLK		5076145	0					
ANR	5077054	Identifier	BLK		5076145	0					
ANR	5077055	ArgumentList	ctx -> cur		5076145	1					
ANR	5077056	Argument	ctx -> cur		5076145	0					
ANR	5077057	PtrMemberAccess	ctx -> cur		5076145	0					
ANR	5077058	Identifier	ctx		5076145	0					
ANR	5077059	Identifier	cur		5076145	1					
ANR	5077060	Argument	l1x + 1		5076145	1					
ANR	5077061	AdditiveExpression	l1x + 1		5076145	0		+			
ANR	5077062	Identifier	l1x		5076145	0					
ANR	5077063	PrimaryExpression	1		5076145	1					
ANR	5077064	Argument	l1y + 1		5076145	2					
ANR	5077065	AdditiveExpression	l1y + 1		5076145	0		+			
ANR	5077066	Identifier	l1y		5076145	0					
ANR	5077067	PrimaryExpression	1		5076145	1					
ANR	5077068	UnaryOperationExpression	* src ++		5076145	1					
ANR	5077069	UnaryOperator	*		5076145	0					
ANR	5077070	PostIncDecOperationExpression	src ++		5076145	1					
ANR	5077071	Identifier	src		5076145	0					
ANR	5077072	IncDec	++		5076145	1					
ANR	5077073	ReturnStatement	return 0 ;	205:4:5325:5333	5076145	9	True				
ANR	5077074	PrimaryExpression	0		5076145	0					
ANR	5077075	ReturnType	static int		5076145	1					
ANR	5077076	Identifier	kmvc_decode_inter_8x8		5076145	2					
ANR	5077077	ParameterList	"KmvcContext * ctx , const uint8_t * src , int src_size , int w , int h"		5076145	3					
ANR	5077078	Parameter	KmvcContext * ctx	1:33:33:49	5076145	0	True				
ANR	5077079	ParameterType	KmvcContext *		5076145	0					
ANR	5077080	Identifier	ctx		5076145	1					
ANR	5077081	Parameter	const uint8_t * src	1:52:52:70	5076145	1	True				
ANR	5077082	ParameterType	const uint8_t *		5076145	0					
ANR	5077083	Identifier	src		5076145	1					
ANR	5077084	Parameter	int src_size	1:73:73:84	5076145	2	True				
ANR	5077085	ParameterType	int		5076145	0					
ANR	5077086	Identifier	src_size		5076145	1					
ANR	5077087	Parameter	int w	1:87:87:91	5076145	3	True				
ANR	5077088	ParameterType	int		5076145	0					
ANR	5077089	Identifier	w		5076145	1					
ANR	5077090	Parameter	int h	1:94:94:98	5076145	4	True				
ANR	5077091	ParameterType	int		5076145	0					
ANR	5077092	Identifier	h		5076145	1					
ANR	5077093	CFGEntryNode	ENTRY		5076145		True				
ANR	5077094	CFGExitNode	EXIT		5076145		True				
ANR	5077095	Symbol	bb		5076145						
ANR	5077096	Symbol	BLK		5076145						
ANR	5077097	Symbol	l1x		5076145						
ANR	5077098	Symbol	src_end		5076145						
ANR	5077099	Symbol	l1y		5076145						
ANR	5077100	Symbol	bx		5076145						
ANR	5077101	Symbol	by		5076145						
ANR	5077102	Symbol	val		5076145						
ANR	5077103	Symbol	res		5076145						
ANR	5077104	Symbol	AV_LOG_ERROR		5076145						
ANR	5077105	Symbol	src		5076145						
ANR	5077106	Symbol	ctx		5076145						
ANR	5077107	Symbol	ctx -> prev		5076145						
ANR	5077108	Symbol	h		5076145						
ANR	5077109	Symbol	i		5076145						
ANR	5077110	Symbol	j		5076145						
ANR	5077111	Symbol	mx		5076145						
ANR	5077112	Symbol	ctx -> cur		5076145						
ANR	5077113	Symbol	my		5076145						
ANR	5077114	Symbol	* ctx		5076145						
ANR	5077115	Symbol	src_size		5076145						
ANR	5077116	Symbol	ctx -> avctx		5076145						
ANR	5077117	Symbol	l0y		5076145						
ANR	5077118	Symbol	l0x		5076145						
ANR	5077119	Symbol	w		5076145						
ANR	5077120	Symbol	* src ++		5076145						
ANR	5077121	Symbol	AVERROR_INVALIDDATA		5076145						
