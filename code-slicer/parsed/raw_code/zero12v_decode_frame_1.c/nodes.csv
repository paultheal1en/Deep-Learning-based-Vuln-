command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9635996	File	/home/p4ultr4n/workplace/ReVeal/raw_code/zero12v_decode_frame_1.c								
ANR	9635997	Function	zero12v_decode_frame	1:0:0:3723							
ANR	9635998	FunctionDef	"zero12v_decode_frame (AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt)"		9635997	0					
ANR	9635999	CompoundStatement		5:0:134:3723	9635997	0					
ANR	9636000	IdentifierDeclStatement	"int line = 0 , ret ;"	7:4:141:158	9635997	0	True				
ANR	9636001	IdentifierDecl	line = 0		9635997	0					
ANR	9636002	IdentifierDeclType	int		9635997	0					
ANR	9636003	Identifier	line		9635997	1					
ANR	9636004	AssignmentExpression	line = 0		9635997	2		=			
ANR	9636005	Identifier	line		9635997	0					
ANR	9636006	PrimaryExpression	0		9635997	1					
ANR	9636007	IdentifierDecl	ret		9635997	1					
ANR	9636008	IdentifierDeclType	int		9635997	0					
ANR	9636009	Identifier	ret		9635997	1					
ANR	9636010	IdentifierDeclStatement	const int width = avctx -> width ;	9:4:165:195	9635997	1	True				
ANR	9636011	IdentifierDecl	width = avctx -> width		9635997	0					
ANR	9636012	IdentifierDeclType	const int		9635997	0					
ANR	9636013	Identifier	width		9635997	1					
ANR	9636014	AssignmentExpression	width = avctx -> width		9635997	2		=			
ANR	9636015	Identifier	width		9635997	0					
ANR	9636016	PtrMemberAccess	avctx -> width		9635997	1					
ANR	9636017	Identifier	avctx		9635997	0					
ANR	9636018	Identifier	width		9635997	1					
ANR	9636019	IdentifierDeclStatement	AVFrame * pic = data ;	11:4:202:221	9635997	2	True				
ANR	9636020	IdentifierDecl	* pic = data		9635997	0					
ANR	9636021	IdentifierDeclType	AVFrame *		9635997	0					
ANR	9636022	Identifier	pic		9635997	1					
ANR	9636023	AssignmentExpression	* pic = data		9635997	2		=			
ANR	9636024	Identifier	data		9635997	0					
ANR	9636025	Identifier	data		9635997	1					
ANR	9636026	IdentifierDeclStatement	"uint16_t * y , * u , * v ;"	13:4:228:247	9635997	3	True				
ANR	9636027	IdentifierDecl	* y		9635997	0					
ANR	9636028	IdentifierDeclType	uint16_t *		9635997	0					
ANR	9636029	Identifier	y		9635997	1					
ANR	9636030	IdentifierDecl	* u		9635997	1					
ANR	9636031	IdentifierDeclType	uint16_t *		9635997	0					
ANR	9636032	Identifier	u		9635997	1					
ANR	9636033	IdentifierDecl	* v		9635997	2					
ANR	9636034	IdentifierDeclType	uint16_t *		9635997	0					
ANR	9636035	Identifier	v		9635997	1					
ANR	9636036	IdentifierDeclStatement	"const uint8_t * line_end , * src = avpkt -> data ;"	15:4:254:297	9635997	4	True				
ANR	9636037	IdentifierDecl	* line_end		9635997	0					
ANR	9636038	IdentifierDeclType	const uint8_t *		9635997	0					
ANR	9636039	Identifier	line_end		9635997	1					
ANR	9636040	IdentifierDecl	* src = avpkt -> data		9635997	1					
ANR	9636041	IdentifierDeclType	const uint8_t *		9635997	0					
ANR	9636042	Identifier	src		9635997	1					
ANR	9636043	AssignmentExpression	* src = avpkt -> data		9635997	2		=			
ANR	9636044	Identifier	src		9635997	0					
ANR	9636045	PtrMemberAccess	avpkt -> data		9635997	1					
ANR	9636046	Identifier	avpkt		9635997	0					
ANR	9636047	Identifier	data		9635997	1					
ANR	9636048	IdentifierDeclStatement	int stride = avctx -> width * 8 / 3 ;	17:4:304:337	9635997	5	True				
ANR	9636049	IdentifierDecl	stride = avctx -> width * 8 / 3		9635997	0					
ANR	9636050	IdentifierDeclType	int		9635997	0					
ANR	9636051	Identifier	stride		9635997	1					
ANR	9636052	AssignmentExpression	stride = avctx -> width * 8 / 3		9635997	2		=			
ANR	9636053	Identifier	stride		9635997	0					
ANR	9636054	MultiplicativeExpression	avctx -> width * 8 / 3		9635997	1		*			
ANR	9636055	PtrMemberAccess	avctx -> width		9635997	0					
ANR	9636056	Identifier	avctx		9635997	0					
ANR	9636057	Identifier	width		9635997	1					
ANR	9636058	MultiplicativeExpression	8 / 3		9635997	1		/			
ANR	9636059	PrimaryExpression	8		9635997	0					
ANR	9636060	PrimaryExpression	3		9635997	1					
ANR	9636061	IfStatement	if ( width == 1 )		9635997	6					
ANR	9636062	Condition	width == 1	21:8:350:359	9635997	0	True				
ANR	9636063	EqualityExpression	width == 1		9635997	0		==			
ANR	9636064	Identifier	width		9635997	0					
ANR	9636065	PrimaryExpression	1		9635997	1					
ANR	9636066	CompoundStatement		17:20:227:227	9635997	1					
ANR	9636067	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Width 1 not supported.\\n"" )"	23:8:373:428	9635997	0	True				
ANR	9636068	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Width 1 not supported.\\n"" )"		9635997	0					
ANR	9636069	Callee	av_log		9635997	0					
ANR	9636070	Identifier	av_log		9635997	0					
ANR	9636071	ArgumentList	avctx		9635997	1					
ANR	9636072	Argument	avctx		9635997	0					
ANR	9636073	Identifier	avctx		9635997	0					
ANR	9636074	Argument	AV_LOG_ERROR		9635997	1					
ANR	9636075	Identifier	AV_LOG_ERROR		9635997	0					
ANR	9636076	Argument	"""Width 1 not supported.\\n"""		9635997	2					
ANR	9636077	PrimaryExpression	"""Width 1 not supported.\\n"""		9635997	0					
ANR	9636078	ReturnStatement	return AVERROR_INVALIDDATA ;	25:8:439:465	9635997	1	True				
ANR	9636079	Identifier	AVERROR_INVALIDDATA		9635997	0					
ANR	9636080	IfStatement	"if ( avctx -> codec_tag == MKTAG ( '0' , '1' , '2' , 'v' ) && avpkt -> size % avctx -> height == 0 && avpkt -> size / avctx -> height * 3 >= width * 8 )"		9635997	7					
ANR	9636081	Condition	"avctx -> codec_tag == MKTAG ( '0' , '1' , '2' , 'v' ) && avpkt -> size % avctx -> height == 0 && avpkt -> size / avctx -> height * 3 >= width * 8"	31:11:488:634	9635997	0	True				
ANR	9636082	AndExpression	"avctx -> codec_tag == MKTAG ( '0' , '1' , '2' , 'v' ) && avpkt -> size % avctx -> height == 0 && avpkt -> size / avctx -> height * 3 >= width * 8"		9635997	0		&&			
ANR	9636083	EqualityExpression	"avctx -> codec_tag == MKTAG ( '0' , '1' , '2' , 'v' )"		9635997	0		==			
ANR	9636084	PtrMemberAccess	avctx -> codec_tag		9635997	0					
ANR	9636085	Identifier	avctx		9635997	0					
ANR	9636086	Identifier	codec_tag		9635997	1					
ANR	9636087	CallExpression	"MKTAG ( '0' , '1' , '2' , 'v' )"		9635997	1					
ANR	9636088	Callee	MKTAG		9635997	0					
ANR	9636089	Identifier	MKTAG		9635997	0					
ANR	9636090	ArgumentList	'0'		9635997	1					
ANR	9636091	Argument	'0'		9635997	0					
ANR	9636092	PrimaryExpression	'0'		9635997	0					
ANR	9636093	Argument	'1'		9635997	1					
ANR	9636094	PrimaryExpression	'1'		9635997	0					
ANR	9636095	Argument	'2'		9635997	2					
ANR	9636096	PrimaryExpression	'2'		9635997	0					
ANR	9636097	Argument	'v'		9635997	3					
ANR	9636098	PrimaryExpression	'v'		9635997	0					
ANR	9636099	AndExpression	avpkt -> size % avctx -> height == 0 && avpkt -> size / avctx -> height * 3 >= width * 8		9635997	1		&&			
ANR	9636100	EqualityExpression	avpkt -> size % avctx -> height == 0		9635997	0		==			
ANR	9636101	MultiplicativeExpression	avpkt -> size % avctx -> height		9635997	0		%			
ANR	9636102	PtrMemberAccess	avpkt -> size		9635997	0					
ANR	9636103	Identifier	avpkt		9635997	0					
ANR	9636104	Identifier	size		9635997	1					
ANR	9636105	PtrMemberAccess	avctx -> height		9635997	1					
ANR	9636106	Identifier	avctx		9635997	0					
ANR	9636107	Identifier	height		9635997	1					
ANR	9636108	PrimaryExpression	0		9635997	1					
ANR	9636109	RelationalExpression	avpkt -> size / avctx -> height * 3 >= width * 8		9635997	1		>=			
ANR	9636110	MultiplicativeExpression	avpkt -> size / avctx -> height * 3		9635997	0		/			
ANR	9636111	PtrMemberAccess	avpkt -> size		9635997	0					
ANR	9636112	Identifier	avpkt		9635997	0					
ANR	9636113	Identifier	size		9635997	1					
ANR	9636114	MultiplicativeExpression	avctx -> height * 3		9635997	1		*			
ANR	9636115	PtrMemberAccess	avctx -> height		9635997	0					
ANR	9636116	Identifier	avctx		9635997	0					
ANR	9636117	Identifier	height		9635997	1					
ANR	9636118	PrimaryExpression	3		9635997	1					
ANR	9636119	MultiplicativeExpression	width * 8		9635997	1		*			
ANR	9636120	Identifier	width		9635997	0					
ANR	9636121	PrimaryExpression	8		9635997	1					
ANR	9636122	ExpressionStatement	stride = avpkt -> size / avctx -> height	37:8:646:682	9635997	1	True				
ANR	9636123	AssignmentExpression	stride = avpkt -> size / avctx -> height		9635997	0		=			
ANR	9636124	Identifier	stride		9635997	0					
ANR	9636125	MultiplicativeExpression	avpkt -> size / avctx -> height		9635997	1		/			
ANR	9636126	PtrMemberAccess	avpkt -> size		9635997	0					
ANR	9636127	Identifier	avpkt		9635997	0					
ANR	9636128	Identifier	size		9635997	1					
ANR	9636129	PtrMemberAccess	avctx -> height		9635997	1					
ANR	9636130	Identifier	avctx		9635997	0					
ANR	9636131	Identifier	height		9635997	1					
ANR	9636132	IfStatement	if ( avpkt -> size < avctx -> height * stride )		9635997	8					
ANR	9636133	Condition	avpkt -> size < avctx -> height * stride	41:8:695:730	9635997	0	True				
ANR	9636134	RelationalExpression	avpkt -> size < avctx -> height * stride		9635997	0		<			
ANR	9636135	PtrMemberAccess	avpkt -> size		9635997	0					
ANR	9636136	Identifier	avpkt		9635997	0					
ANR	9636137	Identifier	size		9635997	1					
ANR	9636138	MultiplicativeExpression	avctx -> height * stride		9635997	1		*			
ANR	9636139	PtrMemberAccess	avctx -> height		9635997	0					
ANR	9636140	Identifier	avctx		9635997	0					
ANR	9636141	Identifier	height		9635997	1					
ANR	9636142	Identifier	stride		9635997	1					
ANR	9636143	CompoundStatement		37:46:598:598	9635997	1					
ANR	9636144	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Packet too small: %d instead of %d\\n"" , avpkt -> size , avctx -> height * stride )"	43:8:744:864	9635997	0	True				
ANR	9636145	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Packet too small: %d instead of %d\\n"" , avpkt -> size , avctx -> height * stride )"		9635997	0					
ANR	9636146	Callee	av_log		9635997	0					
ANR	9636147	Identifier	av_log		9635997	0					
ANR	9636148	ArgumentList	avctx		9635997	1					
ANR	9636149	Argument	avctx		9635997	0					
ANR	9636150	Identifier	avctx		9635997	0					
ANR	9636151	Argument	AV_LOG_ERROR		9635997	1					
ANR	9636152	Identifier	AV_LOG_ERROR		9635997	0					
ANR	9636153	Argument	"""Packet too small: %d instead of %d\\n"""		9635997	2					
ANR	9636154	PrimaryExpression	"""Packet too small: %d instead of %d\\n"""		9635997	0					
ANR	9636155	Argument	avpkt -> size		9635997	3					
ANR	9636156	PtrMemberAccess	avpkt -> size		9635997	0					
ANR	9636157	Identifier	avpkt		9635997	0					
ANR	9636158	Identifier	size		9635997	1					
ANR	9636159	Argument	avctx -> height * stride		9635997	4					
ANR	9636160	MultiplicativeExpression	avctx -> height * stride		9635997	0		*			
ANR	9636161	PtrMemberAccess	avctx -> height		9635997	0					
ANR	9636162	Identifier	avctx		9635997	0					
ANR	9636163	Identifier	height		9635997	1					
ANR	9636164	Identifier	stride		9635997	1					
ANR	9636165	ReturnStatement	return AVERROR_INVALIDDATA ;	47:8:875:901	9635997	1	True				
ANR	9636166	Identifier	AVERROR_INVALIDDATA		9635997	0					
ANR	9636167	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , pic , 0 ) ) < 0 )"		9635997	9					
ANR	9636168	Condition	"( ret = ff_get_buffer ( avctx , pic , 0 ) ) < 0"	53:8:921:960	9635997	0	True				
ANR	9636169	RelationalExpression	"( ret = ff_get_buffer ( avctx , pic , 0 ) ) < 0"		9635997	0		<			
ANR	9636170	AssignmentExpression	"ret = ff_get_buffer ( avctx , pic , 0 )"		9635997	0		=			
ANR	9636171	Identifier	ret		9635997	0					
ANR	9636172	CallExpression	"ff_get_buffer ( avctx , pic , 0 )"		9635997	1					
ANR	9636173	Callee	ff_get_buffer		9635997	0					
ANR	9636174	Identifier	ff_get_buffer		9635997	0					
ANR	9636175	ArgumentList	avctx		9635997	1					
ANR	9636176	Argument	avctx		9635997	0					
ANR	9636177	Identifier	avctx		9635997	0					
ANR	9636178	Argument	pic		9635997	1					
ANR	9636179	Identifier	pic		9635997	0					
ANR	9636180	Argument	0		9635997	2					
ANR	9636181	PrimaryExpression	0		9635997	0					
ANR	9636182	PrimaryExpression	0		9635997	1					
ANR	9636183	ReturnStatement	return ret ;	55:8:972:982	9635997	1	True				
ANR	9636184	Identifier	ret		9635997	0					
ANR	9636185	ExpressionStatement	pic -> pict_type = AV_PICTURE_TYPE_I	59:4:991:1025	9635997	10	True				
ANR	9636186	AssignmentExpression	pic -> pict_type = AV_PICTURE_TYPE_I		9635997	0		=			
ANR	9636187	PtrMemberAccess	pic -> pict_type		9635997	0					
ANR	9636188	Identifier	pic		9635997	0					
ANR	9636189	Identifier	pict_type		9635997	1					
ANR	9636190	Identifier	AV_PICTURE_TYPE_I		9635997	1					
ANR	9636191	ExpressionStatement	pic -> key_frame = 1	61:4:1032:1050	9635997	11	True				
ANR	9636192	AssignmentExpression	pic -> key_frame = 1		9635997	0		=			
ANR	9636193	PtrMemberAccess	pic -> key_frame		9635997	0					
ANR	9636194	Identifier	pic		9635997	0					
ANR	9636195	Identifier	key_frame		9635997	1					
ANR	9636196	PrimaryExpression	1		9635997	1					
ANR	9636197	ExpressionStatement	y = ( uint16_t * ) pic -> data [ 0 ]	65:4:1059:1087	9635997	12	True				
ANR	9636198	AssignmentExpression	y = ( uint16_t * ) pic -> data [ 0 ]		9635997	0		=			
ANR	9636199	Identifier	y		9635997	0					
ANR	9636200	CastExpression	( uint16_t * ) pic -> data [ 0 ]		9635997	1					
ANR	9636201	CastTarget	uint16_t *		9635997	0					
ANR	9636202	ArrayIndexing	pic -> data [ 0 ]		9635997	1					
ANR	9636203	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636204	Identifier	pic		9635997	0					
ANR	9636205	Identifier	data		9635997	1					
ANR	9636206	PrimaryExpression	0		9635997	1					
ANR	9636207	ExpressionStatement	u = ( uint16_t * ) pic -> data [ 1 ]	67:4:1094:1122	9635997	13	True				
ANR	9636208	AssignmentExpression	u = ( uint16_t * ) pic -> data [ 1 ]		9635997	0		=			
ANR	9636209	Identifier	u		9635997	0					
ANR	9636210	CastExpression	( uint16_t * ) pic -> data [ 1 ]		9635997	1					
ANR	9636211	CastTarget	uint16_t *		9635997	0					
ANR	9636212	ArrayIndexing	pic -> data [ 1 ]		9635997	1					
ANR	9636213	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636214	Identifier	pic		9635997	0					
ANR	9636215	Identifier	data		9635997	1					
ANR	9636216	PrimaryExpression	1		9635997	1					
ANR	9636217	ExpressionStatement	v = ( uint16_t * ) pic -> data [ 2 ]	69:4:1129:1157	9635997	14	True				
ANR	9636218	AssignmentExpression	v = ( uint16_t * ) pic -> data [ 2 ]		9635997	0		=			
ANR	9636219	Identifier	v		9635997	0					
ANR	9636220	CastExpression	( uint16_t * ) pic -> data [ 2 ]		9635997	1					
ANR	9636221	CastTarget	uint16_t *		9635997	0					
ANR	9636222	ArrayIndexing	pic -> data [ 2 ]		9635997	1					
ANR	9636223	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636224	Identifier	pic		9635997	0					
ANR	9636225	Identifier	data		9635997	1					
ANR	9636226	PrimaryExpression	2		9635997	1					
ANR	9636227	ExpressionStatement	line_end = avpkt -> data + stride	71:4:1164:1195	9635997	15	True				
ANR	9636228	AssignmentExpression	line_end = avpkt -> data + stride		9635997	0		=			
ANR	9636229	Identifier	line_end		9635997	0					
ANR	9636230	AdditiveExpression	avpkt -> data + stride		9635997	1		+			
ANR	9636231	PtrMemberAccess	avpkt -> data		9635997	0					
ANR	9636232	Identifier	avpkt		9635997	0					
ANR	9636233	Identifier	data		9635997	1					
ANR	9636234	Identifier	stride		9635997	1					
ANR	9636235	WhileStatement	while ( line ++ < avctx -> height )		9635997	16					
ANR	9636236	Condition	line ++ < avctx -> height	75:11:1211:1232	9635997	0	True				
ANR	9636237	RelationalExpression	line ++ < avctx -> height		9635997	0		<			
ANR	9636238	PostIncDecOperationExpression	line ++		9635997	0					
ANR	9636239	Identifier	line		9635997	0					
ANR	9636240	IncDec	++		9635997	1					
ANR	9636241	PtrMemberAccess	avctx -> height		9635997	1					
ANR	9636242	Identifier	avctx		9635997	0					
ANR	9636243	Identifier	height		9635997	1					
ANR	9636244	CompoundStatement		71:35:1100:1100	9635997	1					
ANR	9636245	WhileStatement	while ( 1 )		9635997	0					
ANR	9636246	Condition	1	77:15:1253:1253	9635997	0	True				
ANR	9636247	PrimaryExpression	1		9635997	0					
ANR	9636248	CompoundStatement		75:12:1136:1161	9635997	1					
ANR	9636249	IdentifierDeclStatement	uint32_t t = AV_RL32 ( src ) ;	79:12:1271:1296	9635997	0	True				
ANR	9636250	IdentifierDecl	t = AV_RL32 ( src )		9635997	0					
ANR	9636251	IdentifierDeclType	uint32_t		9635997	0					
ANR	9636252	Identifier	t		9635997	1					
ANR	9636253	AssignmentExpression	t = AV_RL32 ( src )		9635997	2		=			
ANR	9636254	Identifier	t		9635997	0					
ANR	9636255	CallExpression	AV_RL32 ( src )		9635997	1					
ANR	9636256	Callee	AV_RL32		9635997	0					
ANR	9636257	Identifier	AV_RL32		9635997	0					
ANR	9636258	ArgumentList	src		9635997	1					
ANR	9636259	Argument	src		9635997	0					
ANR	9636260	Identifier	src		9635997	0					
ANR	9636261	ExpressionStatement	src += 4	81:12:1311:1319	9635997	1	True				
ANR	9636262	AssignmentExpression	src += 4		9635997	0		+=			
ANR	9636263	Identifier	src		9635997	0					
ANR	9636264	PrimaryExpression	4		9635997	1					
ANR	9636265	ExpressionStatement	* u ++ = t << 6 & 0xFFC0	83:12:1334:1357	9635997	2	True				
ANR	9636266	AssignmentExpression	* u ++ = t << 6 & 0xFFC0		9635997	0		=			
ANR	9636267	UnaryOperationExpression	* u ++		9635997	0					
ANR	9636268	UnaryOperator	*		9635997	0					
ANR	9636269	PostIncDecOperationExpression	u ++		9635997	1					
ANR	9636270	Identifier	u		9635997	0					
ANR	9636271	IncDec	++		9635997	1					
ANR	9636272	BitAndExpression	t << 6 & 0xFFC0		9635997	1		&			
ANR	9636273	ShiftExpression	t << 6		9635997	0		<<			
ANR	9636274	Identifier	t		9635997	0					
ANR	9636275	PrimaryExpression	6		9635997	1					
ANR	9636276	PrimaryExpression	0xFFC0		9635997	1					
ANR	9636277	ExpressionStatement	* y ++ = t >> 4 & 0xFFC0	85:12:1372:1395	9635997	3	True				
ANR	9636278	AssignmentExpression	* y ++ = t >> 4 & 0xFFC0		9635997	0		=			
ANR	9636279	UnaryOperationExpression	* y ++		9635997	0					
ANR	9636280	UnaryOperator	*		9635997	0					
ANR	9636281	PostIncDecOperationExpression	y ++		9635997	1					
ANR	9636282	Identifier	y		9635997	0					
ANR	9636283	IncDec	++		9635997	1					
ANR	9636284	BitAndExpression	t >> 4 & 0xFFC0		9635997	1		&			
ANR	9636285	ShiftExpression	t >> 4		9635997	0		>>			
ANR	9636286	Identifier	t		9635997	0					
ANR	9636287	PrimaryExpression	4		9635997	1					
ANR	9636288	PrimaryExpression	0xFFC0		9635997	1					
ANR	9636289	ExpressionStatement	* v ++ = t >> 14 & 0xFFC0	87:12:1410:1433	9635997	4	True				
ANR	9636290	AssignmentExpression	* v ++ = t >> 14 & 0xFFC0		9635997	0		=			
ANR	9636291	UnaryOperationExpression	* v ++		9635997	0					
ANR	9636292	UnaryOperator	*		9635997	0					
ANR	9636293	PostIncDecOperationExpression	v ++		9635997	1					
ANR	9636294	Identifier	v		9635997	0					
ANR	9636295	IncDec	++		9635997	1					
ANR	9636296	BitAndExpression	t >> 14 & 0xFFC0		9635997	1		&			
ANR	9636297	ShiftExpression	t >> 14		9635997	0		>>			
ANR	9636298	Identifier	t		9635997	0					
ANR	9636299	PrimaryExpression	14		9635997	1					
ANR	9636300	PrimaryExpression	0xFFC0		9635997	1					
ANR	9636301	IfStatement	if ( src >= line_end - 1 )		9635997	5					
ANR	9636302	Condition	src >= line_end - 1	91:16:1454:1472	9635997	0	True				
ANR	9636303	RelationalExpression	src >= line_end - 1		9635997	0		>=			
ANR	9636304	Identifier	src		9635997	0					
ANR	9636305	AdditiveExpression	line_end - 1		9635997	1		-			
ANR	9636306	Identifier	line_end		9635997	0					
ANR	9636307	PrimaryExpression	1		9635997	1					
ANR	9636308	CompoundStatement		87:37:1340:1340	9635997	1					
ANR	9636309	ExpressionStatement	* y = 0x80	93:16:1494:1503	9635997	0	True				
ANR	9636310	AssignmentExpression	* y = 0x80		9635997	0		=			
ANR	9636311	UnaryOperationExpression	* y		9635997	0					
ANR	9636312	UnaryOperator	*		9635997	0					
ANR	9636313	Identifier	y		9635997	1					
ANR	9636314	PrimaryExpression	0x80		9635997	1					
ANR	9636315	ExpressionStatement	src ++	95:16:1522:1527	9635997	1	True				
ANR	9636316	PostIncDecOperationExpression	src ++		9635997	0					
ANR	9636317	Identifier	src		9635997	0					
ANR	9636318	IncDec	++		9635997	1					
ANR	9636319	ExpressionStatement	line_end += stride	97:16:1546:1564	9635997	2	True				
ANR	9636320	AssignmentExpression	line_end += stride		9635997	0		+=			
ANR	9636321	Identifier	line_end		9635997	0					
ANR	9636322	Identifier	stride		9635997	1					
ANR	9636323	ExpressionStatement	y = ( uint16_t * ) ( pic -> data [ 0 ] + line * pic -> linesize [ 0 ] )	99:16:1583:1639	9635997	3	True				
ANR	9636324	AssignmentExpression	y = ( uint16_t * ) ( pic -> data [ 0 ] + line * pic -> linesize [ 0 ] )		9635997	0		=			
ANR	9636325	Identifier	y		9635997	0					
ANR	9636326	CastExpression	( uint16_t * ) ( pic -> data [ 0 ] + line * pic -> linesize [ 0 ] )		9635997	1					
ANR	9636327	CastTarget	uint16_t *		9635997	0					
ANR	9636328	AdditiveExpression	pic -> data [ 0 ] + line * pic -> linesize [ 0 ]		9635997	1		+			
ANR	9636329	ArrayIndexing	pic -> data [ 0 ]		9635997	0					
ANR	9636330	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636331	Identifier	pic		9635997	0					
ANR	9636332	Identifier	data		9635997	1					
ANR	9636333	PrimaryExpression	0		9635997	1					
ANR	9636334	MultiplicativeExpression	line * pic -> linesize [ 0 ]		9635997	1		*			
ANR	9636335	Identifier	line		9635997	0					
ANR	9636336	ArrayIndexing	pic -> linesize [ 0 ]		9635997	1					
ANR	9636337	PtrMemberAccess	pic -> linesize		9635997	0					
ANR	9636338	Identifier	pic		9635997	0					
ANR	9636339	Identifier	linesize		9635997	1					
ANR	9636340	PrimaryExpression	0		9635997	1					
ANR	9636341	ExpressionStatement	u = ( uint16_t * ) ( pic -> data [ 1 ] + line * pic -> linesize [ 1 ] )	101:16:1658:1714	9635997	4	True				
ANR	9636342	AssignmentExpression	u = ( uint16_t * ) ( pic -> data [ 1 ] + line * pic -> linesize [ 1 ] )		9635997	0		=			
ANR	9636343	Identifier	u		9635997	0					
ANR	9636344	CastExpression	( uint16_t * ) ( pic -> data [ 1 ] + line * pic -> linesize [ 1 ] )		9635997	1					
ANR	9636345	CastTarget	uint16_t *		9635997	0					
ANR	9636346	AdditiveExpression	pic -> data [ 1 ] + line * pic -> linesize [ 1 ]		9635997	1		+			
ANR	9636347	ArrayIndexing	pic -> data [ 1 ]		9635997	0					
ANR	9636348	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636349	Identifier	pic		9635997	0					
ANR	9636350	Identifier	data		9635997	1					
ANR	9636351	PrimaryExpression	1		9635997	1					
ANR	9636352	MultiplicativeExpression	line * pic -> linesize [ 1 ]		9635997	1		*			
ANR	9636353	Identifier	line		9635997	0					
ANR	9636354	ArrayIndexing	pic -> linesize [ 1 ]		9635997	1					
ANR	9636355	PtrMemberAccess	pic -> linesize		9635997	0					
ANR	9636356	Identifier	pic		9635997	0					
ANR	9636357	Identifier	linesize		9635997	1					
ANR	9636358	PrimaryExpression	1		9635997	1					
ANR	9636359	ExpressionStatement	v = ( uint16_t * ) ( pic -> data [ 2 ] + line * pic -> linesize [ 2 ] )	103:16:1733:1789	9635997	5	True				
ANR	9636360	AssignmentExpression	v = ( uint16_t * ) ( pic -> data [ 2 ] + line * pic -> linesize [ 2 ] )		9635997	0		=			
ANR	9636361	Identifier	v		9635997	0					
ANR	9636362	CastExpression	( uint16_t * ) ( pic -> data [ 2 ] + line * pic -> linesize [ 2 ] )		9635997	1					
ANR	9636363	CastTarget	uint16_t *		9635997	0					
ANR	9636364	AdditiveExpression	pic -> data [ 2 ] + line * pic -> linesize [ 2 ]		9635997	1		+			
ANR	9636365	ArrayIndexing	pic -> data [ 2 ]		9635997	0					
ANR	9636366	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636367	Identifier	pic		9635997	0					
ANR	9636368	Identifier	data		9635997	1					
ANR	9636369	PrimaryExpression	2		9635997	1					
ANR	9636370	MultiplicativeExpression	line * pic -> linesize [ 2 ]		9635997	1		*			
ANR	9636371	Identifier	line		9635997	0					
ANR	9636372	ArrayIndexing	pic -> linesize [ 2 ]		9635997	1					
ANR	9636373	PtrMemberAccess	pic -> linesize		9635997	0					
ANR	9636374	Identifier	pic		9635997	0					
ANR	9636375	Identifier	linesize		9635997	1					
ANR	9636376	PrimaryExpression	2		9635997	1					
ANR	9636377	BreakStatement	break ;	105:16:1808:1813	9635997	6	True				
ANR	9636378	ExpressionStatement	t = AV_RL32 ( src )	111:12:1845:1861	9635997	6	True				
ANR	9636379	AssignmentExpression	t = AV_RL32 ( src )		9635997	0		=			
ANR	9636380	Identifier	t		9635997	0					
ANR	9636381	CallExpression	AV_RL32 ( src )		9635997	1					
ANR	9636382	Callee	AV_RL32		9635997	0					
ANR	9636383	Identifier	AV_RL32		9635997	0					
ANR	9636384	ArgumentList	src		9635997	1					
ANR	9636385	Argument	src		9635997	0					
ANR	9636386	Identifier	src		9635997	0					
ANR	9636387	ExpressionStatement	src += 4	113:12:1876:1884	9635997	7	True				
ANR	9636388	AssignmentExpression	src += 4		9635997	0		+=			
ANR	9636389	Identifier	src		9635997	0					
ANR	9636390	PrimaryExpression	4		9635997	1					
ANR	9636391	ExpressionStatement	* y ++ = t << 6 & 0xFFC0	115:12:1899:1922	9635997	8	True				
ANR	9636392	AssignmentExpression	* y ++ = t << 6 & 0xFFC0		9635997	0		=			
ANR	9636393	UnaryOperationExpression	* y ++		9635997	0					
ANR	9636394	UnaryOperator	*		9635997	0					
ANR	9636395	PostIncDecOperationExpression	y ++		9635997	1					
ANR	9636396	Identifier	y		9635997	0					
ANR	9636397	IncDec	++		9635997	1					
ANR	9636398	BitAndExpression	t << 6 & 0xFFC0		9635997	1		&			
ANR	9636399	ShiftExpression	t << 6		9635997	0		<<			
ANR	9636400	Identifier	t		9635997	0					
ANR	9636401	PrimaryExpression	6		9635997	1					
ANR	9636402	PrimaryExpression	0xFFC0		9635997	1					
ANR	9636403	ExpressionStatement	* u ++ = t >> 4 & 0xFFC0	117:12:1937:1960	9635997	9	True				
ANR	9636404	AssignmentExpression	* u ++ = t >> 4 & 0xFFC0		9635997	0		=			
ANR	9636405	UnaryOperationExpression	* u ++		9635997	0					
ANR	9636406	UnaryOperator	*		9635997	0					
ANR	9636407	PostIncDecOperationExpression	u ++		9635997	1					
ANR	9636408	Identifier	u		9635997	0					
ANR	9636409	IncDec	++		9635997	1					
ANR	9636410	BitAndExpression	t >> 4 & 0xFFC0		9635997	1		&			
ANR	9636411	ShiftExpression	t >> 4		9635997	0		>>			
ANR	9636412	Identifier	t		9635997	0					
ANR	9636413	PrimaryExpression	4		9635997	1					
ANR	9636414	PrimaryExpression	0xFFC0		9635997	1					
ANR	9636415	ExpressionStatement	* y ++ = t >> 14 & 0xFFC0	119:12:1975:1998	9635997	10	True				
ANR	9636416	AssignmentExpression	* y ++ = t >> 14 & 0xFFC0		9635997	0		=			
ANR	9636417	UnaryOperationExpression	* y ++		9635997	0					
ANR	9636418	UnaryOperator	*		9635997	0					
ANR	9636419	PostIncDecOperationExpression	y ++		9635997	1					
ANR	9636420	Identifier	y		9635997	0					
ANR	9636421	IncDec	++		9635997	1					
ANR	9636422	BitAndExpression	t >> 14 & 0xFFC0		9635997	1		&			
ANR	9636423	ShiftExpression	t >> 14		9635997	0		>>			
ANR	9636424	Identifier	t		9635997	0					
ANR	9636425	PrimaryExpression	14		9635997	1					
ANR	9636426	PrimaryExpression	0xFFC0		9635997	1					
ANR	9636427	IfStatement	if ( src >= line_end - 2 )		9635997	11					
ANR	9636428	Condition	src >= line_end - 2	121:16:2017:2035	9635997	0	True				
ANR	9636429	RelationalExpression	src >= line_end - 2		9635997	0		>=			
ANR	9636430	Identifier	src		9635997	0					
ANR	9636431	AdditiveExpression	line_end - 2		9635997	1		-			
ANR	9636432	Identifier	line_end		9635997	0					
ANR	9636433	PrimaryExpression	2		9635997	1					
ANR	9636434	CompoundStatement		117:37:1903:1903	9635997	1					
ANR	9636435	IfStatement	if ( ! ( width & 1 ) )		9635997	0					
ANR	9636436	Condition	! ( width & 1 )	123:20:2061:2072	9635997	0	True				
ANR	9636437	UnaryOperationExpression	! ( width & 1 )		9635997	0					
ANR	9636438	UnaryOperator	!		9635997	0					
ANR	9636439	BitAndExpression	width & 1		9635997	1		&			
ANR	9636440	Identifier	width		9635997	0					
ANR	9636441	PrimaryExpression	1		9635997	1					
ANR	9636442	CompoundStatement		119:34:1940:1940	9635997	1					
ANR	9636443	ExpressionStatement	* y = 0x80	125:20:2098:2107	9635997	0	True				
ANR	9636444	AssignmentExpression	* y = 0x80		9635997	0		=			
ANR	9636445	UnaryOperationExpression	* y		9635997	0					
ANR	9636446	UnaryOperator	*		9635997	0					
ANR	9636447	Identifier	y		9635997	1					
ANR	9636448	PrimaryExpression	0x80		9635997	1					
ANR	9636449	ExpressionStatement	src += 2	127:20:2130:2138	9635997	1	True				
ANR	9636450	AssignmentExpression	src += 2		9635997	0		+=			
ANR	9636451	Identifier	src		9635997	0					
ANR	9636452	PrimaryExpression	2		9635997	1					
ANR	9636453	ExpressionStatement	line_end += stride	131:16:2176:2194	9635997	1	True				
ANR	9636454	AssignmentExpression	line_end += stride		9635997	0		+=			
ANR	9636455	Identifier	line_end		9635997	0					
ANR	9636456	Identifier	stride		9635997	1					
ANR	9636457	ExpressionStatement	y = ( uint16_t * ) ( pic -> data [ 0 ] + line * pic -> linesize [ 0 ] )	133:16:2213:2269	9635997	2	True				
ANR	9636458	AssignmentExpression	y = ( uint16_t * ) ( pic -> data [ 0 ] + line * pic -> linesize [ 0 ] )		9635997	0		=			
ANR	9636459	Identifier	y		9635997	0					
ANR	9636460	CastExpression	( uint16_t * ) ( pic -> data [ 0 ] + line * pic -> linesize [ 0 ] )		9635997	1					
ANR	9636461	CastTarget	uint16_t *		9635997	0					
ANR	9636462	AdditiveExpression	pic -> data [ 0 ] + line * pic -> linesize [ 0 ]		9635997	1		+			
ANR	9636463	ArrayIndexing	pic -> data [ 0 ]		9635997	0					
ANR	9636464	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636465	Identifier	pic		9635997	0					
ANR	9636466	Identifier	data		9635997	1					
ANR	9636467	PrimaryExpression	0		9635997	1					
ANR	9636468	MultiplicativeExpression	line * pic -> linesize [ 0 ]		9635997	1		*			
ANR	9636469	Identifier	line		9635997	0					
ANR	9636470	ArrayIndexing	pic -> linesize [ 0 ]		9635997	1					
ANR	9636471	PtrMemberAccess	pic -> linesize		9635997	0					
ANR	9636472	Identifier	pic		9635997	0					
ANR	9636473	Identifier	linesize		9635997	1					
ANR	9636474	PrimaryExpression	0		9635997	1					
ANR	9636475	ExpressionStatement	u = ( uint16_t * ) ( pic -> data [ 1 ] + line * pic -> linesize [ 1 ] )	135:16:2288:2344	9635997	3	True				
ANR	9636476	AssignmentExpression	u = ( uint16_t * ) ( pic -> data [ 1 ] + line * pic -> linesize [ 1 ] )		9635997	0		=			
ANR	9636477	Identifier	u		9635997	0					
ANR	9636478	CastExpression	( uint16_t * ) ( pic -> data [ 1 ] + line * pic -> linesize [ 1 ] )		9635997	1					
ANR	9636479	CastTarget	uint16_t *		9635997	0					
ANR	9636480	AdditiveExpression	pic -> data [ 1 ] + line * pic -> linesize [ 1 ]		9635997	1		+			
ANR	9636481	ArrayIndexing	pic -> data [ 1 ]		9635997	0					
ANR	9636482	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636483	Identifier	pic		9635997	0					
ANR	9636484	Identifier	data		9635997	1					
ANR	9636485	PrimaryExpression	1		9635997	1					
ANR	9636486	MultiplicativeExpression	line * pic -> linesize [ 1 ]		9635997	1		*			
ANR	9636487	Identifier	line		9635997	0					
ANR	9636488	ArrayIndexing	pic -> linesize [ 1 ]		9635997	1					
ANR	9636489	PtrMemberAccess	pic -> linesize		9635997	0					
ANR	9636490	Identifier	pic		9635997	0					
ANR	9636491	Identifier	linesize		9635997	1					
ANR	9636492	PrimaryExpression	1		9635997	1					
ANR	9636493	ExpressionStatement	v = ( uint16_t * ) ( pic -> data [ 2 ] + line * pic -> linesize [ 2 ] )	137:16:2363:2419	9635997	4	True				
ANR	9636494	AssignmentExpression	v = ( uint16_t * ) ( pic -> data [ 2 ] + line * pic -> linesize [ 2 ] )		9635997	0		=			
ANR	9636495	Identifier	v		9635997	0					
ANR	9636496	CastExpression	( uint16_t * ) ( pic -> data [ 2 ] + line * pic -> linesize [ 2 ] )		9635997	1					
ANR	9636497	CastTarget	uint16_t *		9635997	0					
ANR	9636498	AdditiveExpression	pic -> data [ 2 ] + line * pic -> linesize [ 2 ]		9635997	1		+			
ANR	9636499	ArrayIndexing	pic -> data [ 2 ]		9635997	0					
ANR	9636500	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636501	Identifier	pic		9635997	0					
ANR	9636502	Identifier	data		9635997	1					
ANR	9636503	PrimaryExpression	2		9635997	1					
ANR	9636504	MultiplicativeExpression	line * pic -> linesize [ 2 ]		9635997	1		*			
ANR	9636505	Identifier	line		9635997	0					
ANR	9636506	ArrayIndexing	pic -> linesize [ 2 ]		9635997	1					
ANR	9636507	PtrMemberAccess	pic -> linesize		9635997	0					
ANR	9636508	Identifier	pic		9635997	0					
ANR	9636509	Identifier	linesize		9635997	1					
ANR	9636510	PrimaryExpression	2		9635997	1					
ANR	9636511	BreakStatement	break ;	139:16:2438:2443	9635997	5	True				
ANR	9636512	ExpressionStatement	t = AV_RL32 ( src )	145:12:2475:2491	9635997	12	True				
ANR	9636513	AssignmentExpression	t = AV_RL32 ( src )		9635997	0		=			
ANR	9636514	Identifier	t		9635997	0					
ANR	9636515	CallExpression	AV_RL32 ( src )		9635997	1					
ANR	9636516	Callee	AV_RL32		9635997	0					
ANR	9636517	Identifier	AV_RL32		9635997	0					
ANR	9636518	ArgumentList	src		9635997	1					
ANR	9636519	Argument	src		9635997	0					
ANR	9636520	Identifier	src		9635997	0					
ANR	9636521	ExpressionStatement	src += 4	147:12:2506:2514	9635997	13	True				
ANR	9636522	AssignmentExpression	src += 4		9635997	0		+=			
ANR	9636523	Identifier	src		9635997	0					
ANR	9636524	PrimaryExpression	4		9635997	1					
ANR	9636525	ExpressionStatement	* v ++ = t << 6 & 0xFFC0	149:12:2529:2552	9635997	14	True				
ANR	9636526	AssignmentExpression	* v ++ = t << 6 & 0xFFC0		9635997	0		=			
ANR	9636527	UnaryOperationExpression	* v ++		9635997	0					
ANR	9636528	UnaryOperator	*		9635997	0					
ANR	9636529	PostIncDecOperationExpression	v ++		9635997	1					
ANR	9636530	Identifier	v		9635997	0					
ANR	9636531	IncDec	++		9635997	1					
ANR	9636532	BitAndExpression	t << 6 & 0xFFC0		9635997	1		&			
ANR	9636533	ShiftExpression	t << 6		9635997	0		<<			
ANR	9636534	Identifier	t		9635997	0					
ANR	9636535	PrimaryExpression	6		9635997	1					
ANR	9636536	PrimaryExpression	0xFFC0		9635997	1					
ANR	9636537	ExpressionStatement	* y ++ = t >> 4 & 0xFFC0	151:12:2567:2590	9635997	15	True				
ANR	9636538	AssignmentExpression	* y ++ = t >> 4 & 0xFFC0		9635997	0		=			
ANR	9636539	UnaryOperationExpression	* y ++		9635997	0					
ANR	9636540	UnaryOperator	*		9635997	0					
ANR	9636541	PostIncDecOperationExpression	y ++		9635997	1					
ANR	9636542	Identifier	y		9635997	0					
ANR	9636543	IncDec	++		9635997	1					
ANR	9636544	BitAndExpression	t >> 4 & 0xFFC0		9635997	1		&			
ANR	9636545	ShiftExpression	t >> 4		9635997	0		>>			
ANR	9636546	Identifier	t		9635997	0					
ANR	9636547	PrimaryExpression	4		9635997	1					
ANR	9636548	PrimaryExpression	0xFFC0		9635997	1					
ANR	9636549	ExpressionStatement	* u ++ = t >> 14 & 0xFFC0	153:12:2605:2628	9635997	16	True				
ANR	9636550	AssignmentExpression	* u ++ = t >> 14 & 0xFFC0		9635997	0		=			
ANR	9636551	UnaryOperationExpression	* u ++		9635997	0					
ANR	9636552	UnaryOperator	*		9635997	0					
ANR	9636553	PostIncDecOperationExpression	u ++		9635997	1					
ANR	9636554	Identifier	u		9635997	0					
ANR	9636555	IncDec	++		9635997	1					
ANR	9636556	BitAndExpression	t >> 14 & 0xFFC0		9635997	1		&			
ANR	9636557	ShiftExpression	t >> 14		9635997	0		>>			
ANR	9636558	Identifier	t		9635997	0					
ANR	9636559	PrimaryExpression	14		9635997	1					
ANR	9636560	PrimaryExpression	0xFFC0		9635997	1					
ANR	9636561	IfStatement	if ( src >= line_end - 1 )		9635997	17					
ANR	9636562	Condition	src >= line_end - 1	157:16:2649:2667	9635997	0	True				
ANR	9636563	RelationalExpression	src >= line_end - 1		9635997	0		>=			
ANR	9636564	Identifier	src		9635997	0					
ANR	9636565	AdditiveExpression	line_end - 1		9635997	1		-			
ANR	9636566	Identifier	line_end		9635997	0					
ANR	9636567	PrimaryExpression	1		9635997	1					
ANR	9636568	CompoundStatement		153:37:2535:2535	9635997	1					
ANR	9636569	ExpressionStatement	* y = 0x80	159:16:2689:2698	9635997	0	True				
ANR	9636570	AssignmentExpression	* y = 0x80		9635997	0		=			
ANR	9636571	UnaryOperationExpression	* y		9635997	0					
ANR	9636572	UnaryOperator	*		9635997	0					
ANR	9636573	Identifier	y		9635997	1					
ANR	9636574	PrimaryExpression	0x80		9635997	1					
ANR	9636575	ExpressionStatement	src ++	161:16:2717:2722	9635997	1	True				
ANR	9636576	PostIncDecOperationExpression	src ++		9635997	0					
ANR	9636577	Identifier	src		9635997	0					
ANR	9636578	IncDec	++		9635997	1					
ANR	9636579	ExpressionStatement	line_end += stride	163:16:2741:2759	9635997	2	True				
ANR	9636580	AssignmentExpression	line_end += stride		9635997	0		+=			
ANR	9636581	Identifier	line_end		9635997	0					
ANR	9636582	Identifier	stride		9635997	1					
ANR	9636583	ExpressionStatement	y = ( uint16_t * ) ( pic -> data [ 0 ] + line * pic -> linesize [ 0 ] )	165:16:2778:2834	9635997	3	True				
ANR	9636584	AssignmentExpression	y = ( uint16_t * ) ( pic -> data [ 0 ] + line * pic -> linesize [ 0 ] )		9635997	0		=			
ANR	9636585	Identifier	y		9635997	0					
ANR	9636586	CastExpression	( uint16_t * ) ( pic -> data [ 0 ] + line * pic -> linesize [ 0 ] )		9635997	1					
ANR	9636587	CastTarget	uint16_t *		9635997	0					
ANR	9636588	AdditiveExpression	pic -> data [ 0 ] + line * pic -> linesize [ 0 ]		9635997	1		+			
ANR	9636589	ArrayIndexing	pic -> data [ 0 ]		9635997	0					
ANR	9636590	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636591	Identifier	pic		9635997	0					
ANR	9636592	Identifier	data		9635997	1					
ANR	9636593	PrimaryExpression	0		9635997	1					
ANR	9636594	MultiplicativeExpression	line * pic -> linesize [ 0 ]		9635997	1		*			
ANR	9636595	Identifier	line		9635997	0					
ANR	9636596	ArrayIndexing	pic -> linesize [ 0 ]		9635997	1					
ANR	9636597	PtrMemberAccess	pic -> linesize		9635997	0					
ANR	9636598	Identifier	pic		9635997	0					
ANR	9636599	Identifier	linesize		9635997	1					
ANR	9636600	PrimaryExpression	0		9635997	1					
ANR	9636601	ExpressionStatement	u = ( uint16_t * ) ( pic -> data [ 1 ] + line * pic -> linesize [ 1 ] )	167:16:2853:2909	9635997	4	True				
ANR	9636602	AssignmentExpression	u = ( uint16_t * ) ( pic -> data [ 1 ] + line * pic -> linesize [ 1 ] )		9635997	0		=			
ANR	9636603	Identifier	u		9635997	0					
ANR	9636604	CastExpression	( uint16_t * ) ( pic -> data [ 1 ] + line * pic -> linesize [ 1 ] )		9635997	1					
ANR	9636605	CastTarget	uint16_t *		9635997	0					
ANR	9636606	AdditiveExpression	pic -> data [ 1 ] + line * pic -> linesize [ 1 ]		9635997	1		+			
ANR	9636607	ArrayIndexing	pic -> data [ 1 ]		9635997	0					
ANR	9636608	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636609	Identifier	pic		9635997	0					
ANR	9636610	Identifier	data		9635997	1					
ANR	9636611	PrimaryExpression	1		9635997	1					
ANR	9636612	MultiplicativeExpression	line * pic -> linesize [ 1 ]		9635997	1		*			
ANR	9636613	Identifier	line		9635997	0					
ANR	9636614	ArrayIndexing	pic -> linesize [ 1 ]		9635997	1					
ANR	9636615	PtrMemberAccess	pic -> linesize		9635997	0					
ANR	9636616	Identifier	pic		9635997	0					
ANR	9636617	Identifier	linesize		9635997	1					
ANR	9636618	PrimaryExpression	1		9635997	1					
ANR	9636619	ExpressionStatement	v = ( uint16_t * ) ( pic -> data [ 2 ] + line * pic -> linesize [ 2 ] )	169:16:2928:2984	9635997	5	True				
ANR	9636620	AssignmentExpression	v = ( uint16_t * ) ( pic -> data [ 2 ] + line * pic -> linesize [ 2 ] )		9635997	0		=			
ANR	9636621	Identifier	v		9635997	0					
ANR	9636622	CastExpression	( uint16_t * ) ( pic -> data [ 2 ] + line * pic -> linesize [ 2 ] )		9635997	1					
ANR	9636623	CastTarget	uint16_t *		9635997	0					
ANR	9636624	AdditiveExpression	pic -> data [ 2 ] + line * pic -> linesize [ 2 ]		9635997	1		+			
ANR	9636625	ArrayIndexing	pic -> data [ 2 ]		9635997	0					
ANR	9636626	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636627	Identifier	pic		9635997	0					
ANR	9636628	Identifier	data		9635997	1					
ANR	9636629	PrimaryExpression	2		9635997	1					
ANR	9636630	MultiplicativeExpression	line * pic -> linesize [ 2 ]		9635997	1		*			
ANR	9636631	Identifier	line		9635997	0					
ANR	9636632	ArrayIndexing	pic -> linesize [ 2 ]		9635997	1					
ANR	9636633	PtrMemberAccess	pic -> linesize		9635997	0					
ANR	9636634	Identifier	pic		9635997	0					
ANR	9636635	Identifier	linesize		9635997	1					
ANR	9636636	PrimaryExpression	2		9635997	1					
ANR	9636637	BreakStatement	break ;	171:16:3003:3008	9635997	6	True				
ANR	9636638	ExpressionStatement	t = AV_RL32 ( src )	177:12:3040:3056	9635997	18	True				
ANR	9636639	AssignmentExpression	t = AV_RL32 ( src )		9635997	0		=			
ANR	9636640	Identifier	t		9635997	0					
ANR	9636641	CallExpression	AV_RL32 ( src )		9635997	1					
ANR	9636642	Callee	AV_RL32		9635997	0					
ANR	9636643	Identifier	AV_RL32		9635997	0					
ANR	9636644	ArgumentList	src		9635997	1					
ANR	9636645	Argument	src		9635997	0					
ANR	9636646	Identifier	src		9635997	0					
ANR	9636647	ExpressionStatement	src += 4	179:12:3071:3079	9635997	19	True				
ANR	9636648	AssignmentExpression	src += 4		9635997	0		+=			
ANR	9636649	Identifier	src		9635997	0					
ANR	9636650	PrimaryExpression	4		9635997	1					
ANR	9636651	ExpressionStatement	* y ++ = t << 6 & 0xFFC0	181:12:3094:3117	9635997	20	True				
ANR	9636652	AssignmentExpression	* y ++ = t << 6 & 0xFFC0		9635997	0		=			
ANR	9636653	UnaryOperationExpression	* y ++		9635997	0					
ANR	9636654	UnaryOperator	*		9635997	0					
ANR	9636655	PostIncDecOperationExpression	y ++		9635997	1					
ANR	9636656	Identifier	y		9635997	0					
ANR	9636657	IncDec	++		9635997	1					
ANR	9636658	BitAndExpression	t << 6 & 0xFFC0		9635997	1		&			
ANR	9636659	ShiftExpression	t << 6		9635997	0		<<			
ANR	9636660	Identifier	t		9635997	0					
ANR	9636661	PrimaryExpression	6		9635997	1					
ANR	9636662	PrimaryExpression	0xFFC0		9635997	1					
ANR	9636663	ExpressionStatement	* v ++ = t >> 4 & 0xFFC0	183:12:3132:3155	9635997	21	True				
ANR	9636664	AssignmentExpression	* v ++ = t >> 4 & 0xFFC0		9635997	0		=			
ANR	9636665	UnaryOperationExpression	* v ++		9635997	0					
ANR	9636666	UnaryOperator	*		9635997	0					
ANR	9636667	PostIncDecOperationExpression	v ++		9635997	1					
ANR	9636668	Identifier	v		9635997	0					
ANR	9636669	IncDec	++		9635997	1					
ANR	9636670	BitAndExpression	t >> 4 & 0xFFC0		9635997	1		&			
ANR	9636671	ShiftExpression	t >> 4		9635997	0		>>			
ANR	9636672	Identifier	t		9635997	0					
ANR	9636673	PrimaryExpression	4		9635997	1					
ANR	9636674	PrimaryExpression	0xFFC0		9635997	1					
ANR	9636675	ExpressionStatement	* y ++ = t >> 14 & 0xFFC0	185:12:3170:3193	9635997	22	True				
ANR	9636676	AssignmentExpression	* y ++ = t >> 14 & 0xFFC0		9635997	0		=			
ANR	9636677	UnaryOperationExpression	* y ++		9635997	0					
ANR	9636678	UnaryOperator	*		9635997	0					
ANR	9636679	PostIncDecOperationExpression	y ++		9635997	1					
ANR	9636680	Identifier	y		9635997	0					
ANR	9636681	IncDec	++		9635997	1					
ANR	9636682	BitAndExpression	t >> 14 & 0xFFC0		9635997	1		&			
ANR	9636683	ShiftExpression	t >> 14		9635997	0		>>			
ANR	9636684	Identifier	t		9635997	0					
ANR	9636685	PrimaryExpression	14		9635997	1					
ANR	9636686	PrimaryExpression	0xFFC0		9635997	1					
ANR	9636687	IfStatement	if ( src >= line_end - 2 )		9635997	23					
ANR	9636688	Condition	src >= line_end - 2	189:16:3214:3232	9635997	0	True				
ANR	9636689	RelationalExpression	src >= line_end - 2		9635997	0		>=			
ANR	9636690	Identifier	src		9635997	0					
ANR	9636691	AdditiveExpression	line_end - 2		9635997	1		-			
ANR	9636692	Identifier	line_end		9635997	0					
ANR	9636693	PrimaryExpression	2		9635997	1					
ANR	9636694	CompoundStatement		185:37:3100:3100	9635997	1					
ANR	9636695	IfStatement	if ( width & 1 )		9635997	0					
ANR	9636696	Condition	width & 1	191:20:3258:3266	9635997	0	True				
ANR	9636697	BitAndExpression	width & 1		9635997	0		&			
ANR	9636698	Identifier	width		9635997	0					
ANR	9636699	PrimaryExpression	1		9635997	1					
ANR	9636700	CompoundStatement		187:31:3134:3134	9635997	1					
ANR	9636701	ExpressionStatement	* y = 0x80	193:20:3292:3301	9635997	0	True				
ANR	9636702	AssignmentExpression	* y = 0x80		9635997	0		=			
ANR	9636703	UnaryOperationExpression	* y		9635997	0					
ANR	9636704	UnaryOperator	*		9635997	0					
ANR	9636705	Identifier	y		9635997	1					
ANR	9636706	PrimaryExpression	0x80		9635997	1					
ANR	9636707	ExpressionStatement	src += 2	195:20:3324:3332	9635997	1	True				
ANR	9636708	AssignmentExpression	src += 2		9635997	0		+=			
ANR	9636709	Identifier	src		9635997	0					
ANR	9636710	PrimaryExpression	2		9635997	1					
ANR	9636711	ExpressionStatement	line_end += stride	199:16:3370:3388	9635997	1	True				
ANR	9636712	AssignmentExpression	line_end += stride		9635997	0		+=			
ANR	9636713	Identifier	line_end		9635997	0					
ANR	9636714	Identifier	stride		9635997	1					
ANR	9636715	ExpressionStatement	y = ( uint16_t * ) ( pic -> data [ 0 ] + line * pic -> linesize [ 0 ] )	201:16:3407:3463	9635997	2	True				
ANR	9636716	AssignmentExpression	y = ( uint16_t * ) ( pic -> data [ 0 ] + line * pic -> linesize [ 0 ] )		9635997	0		=			
ANR	9636717	Identifier	y		9635997	0					
ANR	9636718	CastExpression	( uint16_t * ) ( pic -> data [ 0 ] + line * pic -> linesize [ 0 ] )		9635997	1					
ANR	9636719	CastTarget	uint16_t *		9635997	0					
ANR	9636720	AdditiveExpression	pic -> data [ 0 ] + line * pic -> linesize [ 0 ]		9635997	1		+			
ANR	9636721	ArrayIndexing	pic -> data [ 0 ]		9635997	0					
ANR	9636722	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636723	Identifier	pic		9635997	0					
ANR	9636724	Identifier	data		9635997	1					
ANR	9636725	PrimaryExpression	0		9635997	1					
ANR	9636726	MultiplicativeExpression	line * pic -> linesize [ 0 ]		9635997	1		*			
ANR	9636727	Identifier	line		9635997	0					
ANR	9636728	ArrayIndexing	pic -> linesize [ 0 ]		9635997	1					
ANR	9636729	PtrMemberAccess	pic -> linesize		9635997	0					
ANR	9636730	Identifier	pic		9635997	0					
ANR	9636731	Identifier	linesize		9635997	1					
ANR	9636732	PrimaryExpression	0		9635997	1					
ANR	9636733	ExpressionStatement	u = ( uint16_t * ) ( pic -> data [ 1 ] + line * pic -> linesize [ 1 ] )	203:16:3482:3538	9635997	3	True				
ANR	9636734	AssignmentExpression	u = ( uint16_t * ) ( pic -> data [ 1 ] + line * pic -> linesize [ 1 ] )		9635997	0		=			
ANR	9636735	Identifier	u		9635997	0					
ANR	9636736	CastExpression	( uint16_t * ) ( pic -> data [ 1 ] + line * pic -> linesize [ 1 ] )		9635997	1					
ANR	9636737	CastTarget	uint16_t *		9635997	0					
ANR	9636738	AdditiveExpression	pic -> data [ 1 ] + line * pic -> linesize [ 1 ]		9635997	1		+			
ANR	9636739	ArrayIndexing	pic -> data [ 1 ]		9635997	0					
ANR	9636740	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636741	Identifier	pic		9635997	0					
ANR	9636742	Identifier	data		9635997	1					
ANR	9636743	PrimaryExpression	1		9635997	1					
ANR	9636744	MultiplicativeExpression	line * pic -> linesize [ 1 ]		9635997	1		*			
ANR	9636745	Identifier	line		9635997	0					
ANR	9636746	ArrayIndexing	pic -> linesize [ 1 ]		9635997	1					
ANR	9636747	PtrMemberAccess	pic -> linesize		9635997	0					
ANR	9636748	Identifier	pic		9635997	0					
ANR	9636749	Identifier	linesize		9635997	1					
ANR	9636750	PrimaryExpression	1		9635997	1					
ANR	9636751	ExpressionStatement	v = ( uint16_t * ) ( pic -> data [ 2 ] + line * pic -> linesize [ 2 ] )	205:16:3557:3613	9635997	4	True				
ANR	9636752	AssignmentExpression	v = ( uint16_t * ) ( pic -> data [ 2 ] + line * pic -> linesize [ 2 ] )		9635997	0		=			
ANR	9636753	Identifier	v		9635997	0					
ANR	9636754	CastExpression	( uint16_t * ) ( pic -> data [ 2 ] + line * pic -> linesize [ 2 ] )		9635997	1					
ANR	9636755	CastTarget	uint16_t *		9635997	0					
ANR	9636756	AdditiveExpression	pic -> data [ 2 ] + line * pic -> linesize [ 2 ]		9635997	1		+			
ANR	9636757	ArrayIndexing	pic -> data [ 2 ]		9635997	0					
ANR	9636758	PtrMemberAccess	pic -> data		9635997	0					
ANR	9636759	Identifier	pic		9635997	0					
ANR	9636760	Identifier	data		9635997	1					
ANR	9636761	PrimaryExpression	2		9635997	1					
ANR	9636762	MultiplicativeExpression	line * pic -> linesize [ 2 ]		9635997	1		*			
ANR	9636763	Identifier	line		9635997	0					
ANR	9636764	ArrayIndexing	pic -> linesize [ 2 ]		9635997	1					
ANR	9636765	PtrMemberAccess	pic -> linesize		9635997	0					
ANR	9636766	Identifier	pic		9635997	0					
ANR	9636767	Identifier	linesize		9635997	1					
ANR	9636768	PrimaryExpression	2		9635997	1					
ANR	9636769	BreakStatement	break ;	207:16:3632:3637	9635997	5	True				
ANR	9636770	ExpressionStatement	* got_frame = 1	217:4:3679:3693	9635997	17	True				
ANR	9636771	AssignmentExpression	* got_frame = 1		9635997	0		=			
ANR	9636772	UnaryOperationExpression	* got_frame		9635997	0					
ANR	9636773	UnaryOperator	*		9635997	0					
ANR	9636774	Identifier	got_frame		9635997	1					
ANR	9636775	PrimaryExpression	1		9635997	1					
ANR	9636776	ReturnStatement	return avpkt -> size ;	221:4:3702:3720	9635997	18	True				
ANR	9636777	PtrMemberAccess	avpkt -> size		9635997	0					
ANR	9636778	Identifier	avpkt		9635997	0					
ANR	9636779	Identifier	size		9635997	1					
ANR	9636780	ReturnType	static int		9635997	1					
ANR	9636781	Identifier	zero12v_decode_frame		9635997	2					
ANR	9636782	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt"		9635997	3					
ANR	9636783	Parameter	AVCodecContext * avctx	1:32:32:52	9635997	0	True				
ANR	9636784	ParameterType	AVCodecContext *		9635997	0					
ANR	9636785	Identifier	avctx		9635997	1					
ANR	9636786	Parameter	void * data	1:55:55:64	9635997	1	True				
ANR	9636787	ParameterType	void *		9635997	0					
ANR	9636788	Identifier	data		9635997	1					
ANR	9636789	Parameter	int * got_frame	3:32:100:113	9635997	2	True				
ANR	9636790	ParameterType	int *		9635997	0					
ANR	9636791	Identifier	got_frame		9635997	1					
ANR	9636792	Parameter	AVPacket * avpkt	3:48:116:130	9635997	3	True				
ANR	9636793	ParameterType	AVPacket *		9635997	0					
ANR	9636794	Identifier	avpkt		9635997	1					
ANR	9636795	CFGEntryNode	ENTRY		9635997		True				
ANR	9636796	CFGExitNode	EXIT		9635997		True				
ANR	9636797	Symbol	* y		9635997						
ANR	9636798	Symbol	data		9635997						
ANR	9636799	Symbol	* u ++		9635997						
ANR	9636800	Symbol	line		9635997						
ANR	9636801	Symbol	pic -> key_frame		9635997						
ANR	9636802	Symbol	avctx -> width		9635997						
ANR	9636803	Symbol	avpkt		9635997						
ANR	9636804	Symbol	pic		9635997						
ANR	9636805	Symbol	stride		9635997						
ANR	9636806	Symbol	line_end		9635997						
ANR	9636807	Symbol	avctx -> height		9635997						
ANR	9636808	Symbol	ff_get_buffer		9635997						
ANR	9636809	Symbol	got_frame		9635997						
ANR	9636810	Symbol	avpkt -> size		9635997						
ANR	9636811	Symbol	* pic -> data		9635997						
ANR	9636812	Symbol	AV_PICTURE_TYPE_I		9635997						
ANR	9636813	Symbol	* pic -> linesize		9635997						
ANR	9636814	Symbol	avctx		9635997						
ANR	9636815	Symbol	avctx -> codec_tag		9635997						
ANR	9636816	Symbol	* * pic		9635997						
ANR	9636817	Symbol	ret		9635997						
ANR	9636818	Symbol	* avpkt		9635997						
ANR	9636819	Symbol	pic -> data		9635997						
ANR	9636820	Symbol	AV_LOG_ERROR		9635997						
ANR	9636821	Symbol	* v ++		9635997						
ANR	9636822	Symbol	* got_frame		9635997						
ANR	9636823	Symbol	src		9635997						
ANR	9636824	Symbol	pic -> linesize		9635997						
ANR	9636825	Symbol	pic -> pict_type		9635997						
ANR	9636826	Symbol	* avctx		9635997						
ANR	9636827	Symbol	* pic		9635997						
ANR	9636828	Symbol	t		9635997						
ANR	9636829	Symbol	u		9635997						
ANR	9636830	Symbol	AV_RL32		9635997						
ANR	9636831	Symbol	v		9635997						
ANR	9636832	Symbol	width		9635997						
ANR	9636833	Symbol	* y ++		9635997						
ANR	9636834	Symbol	y		9635997						
ANR	9636835	Symbol	AVERROR_INVALIDDATA		9635997						
ANR	9636836	Symbol	avpkt -> data		9635997						
ANR	9636837	Symbol	MKTAG		9635997						
