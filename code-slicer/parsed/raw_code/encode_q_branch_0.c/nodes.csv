command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3030190	File	/home/p4ultr4n/workplace/ReVeal/raw_code/encode_q_branch_0.c								
ANR	3030191	Function	encode_q_branch	1:0:0:9716							
ANR	3030192	FunctionDef	"encode_q_branch (SnowContext * s , int level , int x , int y)"		3030191	0					
ANR	3030193	CompoundStatement		1:67:67:9716	3030191	0					
ANR	3030194	IdentifierDeclStatement	uint8_t p_buffer [ 1024 ] ;	3:4:74:96	3030191	0	True				
ANR	3030195	IdentifierDecl	p_buffer [ 1024 ]		3030191	0					
ANR	3030196	IdentifierDeclType	uint8_t [ 1024 ]		3030191	0					
ANR	3030197	Identifier	p_buffer		3030191	1					
ANR	3030198	PrimaryExpression	1024		3030191	2					
ANR	3030199	IdentifierDeclStatement	uint8_t i_buffer [ 1024 ] ;	5:4:103:125	3030191	1	True				
ANR	3030200	IdentifierDecl	i_buffer [ 1024 ]		3030191	0					
ANR	3030201	IdentifierDeclType	uint8_t [ 1024 ]		3030191	0					
ANR	3030202	Identifier	i_buffer		3030191	1					
ANR	3030203	PrimaryExpression	1024		3030191	2					
ANR	3030204	IdentifierDeclStatement	uint8_t p_state [ sizeof ( s -> block_state ) ] ;	7:4:132:171	3030191	2	True				
ANR	3030205	IdentifierDecl	p_state [ sizeof ( s -> block_state ) ]		3030191	0					
ANR	3030206	IdentifierDeclType	uint8_t [ sizeof ( s -> block_state ) ]		3030191	0					
ANR	3030207	Identifier	p_state		3030191	1					
ANR	3030208	SizeofExpression	sizeof ( s -> block_state )		3030191	2					
ANR	3030209	Sizeof	sizeof		3030191	0					
ANR	3030210	PtrMemberAccess	s -> block_state		3030191	1					
ANR	3030211	Identifier	s		3030191	0					
ANR	3030212	Identifier	block_state		3030191	1					
ANR	3030213	IdentifierDeclStatement	uint8_t i_state [ sizeof ( s -> block_state ) ] ;	9:4:178:217	3030191	3	True				
ANR	3030214	IdentifierDecl	i_state [ sizeof ( s -> block_state ) ]		3030191	0					
ANR	3030215	IdentifierDeclType	uint8_t [ sizeof ( s -> block_state ) ]		3030191	0					
ANR	3030216	Identifier	i_state		3030191	1					
ANR	3030217	SizeofExpression	sizeof ( s -> block_state )		3030191	2					
ANR	3030218	Sizeof	sizeof		3030191	0					
ANR	3030219	PtrMemberAccess	s -> block_state		3030191	1					
ANR	3030220	Identifier	s		3030191	0					
ANR	3030221	Identifier	block_state		3030191	1					
ANR	3030222	IdentifierDeclStatement	"RangeCoder pc , ic ;"	11:4:224:241	3030191	4	True				
ANR	3030223	IdentifierDecl	pc		3030191	0					
ANR	3030224	IdentifierDeclType	RangeCoder		3030191	0					
ANR	3030225	Identifier	pc		3030191	1					
ANR	3030226	IdentifierDecl	ic		3030191	1					
ANR	3030227	IdentifierDeclType	RangeCoder		3030191	0					
ANR	3030228	Identifier	ic		3030191	1					
ANR	3030229	IdentifierDeclStatement	uint8_t * pbbak = s -> c . bytestream ;	13:4:248:279	3030191	5	True				
ANR	3030230	IdentifierDecl	* pbbak = s -> c . bytestream		3030191	0					
ANR	3030231	IdentifierDeclType	uint8_t *		3030191	0					
ANR	3030232	Identifier	pbbak		3030191	1					
ANR	3030233	AssignmentExpression	* pbbak = s -> c . bytestream		3030191	2		=			
ANR	3030234	Identifier	pbbak		3030191	0					
ANR	3030235	MemberAccess	s -> c . bytestream		3030191	1					
ANR	3030236	PtrMemberAccess	s -> c		3030191	0					
ANR	3030237	Identifier	s		3030191	0					
ANR	3030238	Identifier	c		3030191	1					
ANR	3030239	Identifier	bytestream		3030191	1					
ANR	3030240	IdentifierDeclStatement	uint8_t * pbbak_start = s -> c . bytestream_start ;	15:4:286:329	3030191	6	True				
ANR	3030241	IdentifierDecl	* pbbak_start = s -> c . bytestream_start		3030191	0					
ANR	3030242	IdentifierDeclType	uint8_t *		3030191	0					
ANR	3030243	Identifier	pbbak_start		3030191	1					
ANR	3030244	AssignmentExpression	* pbbak_start = s -> c . bytestream_start		3030191	2		=			
ANR	3030245	Identifier	pbbak_start		3030191	0					
ANR	3030246	MemberAccess	s -> c . bytestream_start		3030191	1					
ANR	3030247	PtrMemberAccess	s -> c		3030191	0					
ANR	3030248	Identifier	s		3030191	0					
ANR	3030249	Identifier	c		3030191	1					
ANR	3030250	Identifier	bytestream_start		3030191	1					
ANR	3030251	IdentifierDeclStatement	"int score , score2 , iscore , i_len , p_len , block_s , sum , base_bits ;"	17:4:336:400	3030191	7	True				
ANR	3030252	IdentifierDecl	score		3030191	0					
ANR	3030253	IdentifierDeclType	int		3030191	0					
ANR	3030254	Identifier	score		3030191	1					
ANR	3030255	IdentifierDecl	score2		3030191	1					
ANR	3030256	IdentifierDeclType	int		3030191	0					
ANR	3030257	Identifier	score2		3030191	1					
ANR	3030258	IdentifierDecl	iscore		3030191	2					
ANR	3030259	IdentifierDeclType	int		3030191	0					
ANR	3030260	Identifier	iscore		3030191	1					
ANR	3030261	IdentifierDecl	i_len		3030191	3					
ANR	3030262	IdentifierDeclType	int		3030191	0					
ANR	3030263	Identifier	i_len		3030191	1					
ANR	3030264	IdentifierDecl	p_len		3030191	4					
ANR	3030265	IdentifierDeclType	int		3030191	0					
ANR	3030266	Identifier	p_len		3030191	1					
ANR	3030267	IdentifierDecl	block_s		3030191	5					
ANR	3030268	IdentifierDeclType	int		3030191	0					
ANR	3030269	Identifier	block_s		3030191	1					
ANR	3030270	IdentifierDecl	sum		3030191	6					
ANR	3030271	IdentifierDeclType	int		3030191	0					
ANR	3030272	Identifier	sum		3030191	1					
ANR	3030273	IdentifierDecl	base_bits		3030191	7					
ANR	3030274	IdentifierDeclType	int		3030191	0					
ANR	3030275	Identifier	base_bits		3030191	1					
ANR	3030276	IdentifierDeclStatement	const int w = s -> b_width << s -> block_max_depth ;	19:4:407:453	3030191	8	True				
ANR	3030277	IdentifierDecl	w = s -> b_width << s -> block_max_depth		3030191	0					
ANR	3030278	IdentifierDeclType	const int		3030191	0					
ANR	3030279	Identifier	w		3030191	1					
ANR	3030280	AssignmentExpression	w = s -> b_width << s -> block_max_depth		3030191	2		=			
ANR	3030281	Identifier	w		3030191	0					
ANR	3030282	ShiftExpression	s -> b_width << s -> block_max_depth		3030191	1		<<			
ANR	3030283	PtrMemberAccess	s -> b_width		3030191	0					
ANR	3030284	Identifier	s		3030191	0					
ANR	3030285	Identifier	b_width		3030191	1					
ANR	3030286	PtrMemberAccess	s -> block_max_depth		3030191	1					
ANR	3030287	Identifier	s		3030191	0					
ANR	3030288	Identifier	block_max_depth		3030191	1					
ANR	3030289	IdentifierDeclStatement	const int h = s -> b_height << s -> block_max_depth ;	21:4:460:506	3030191	9	True				
ANR	3030290	IdentifierDecl	h = s -> b_height << s -> block_max_depth		3030191	0					
ANR	3030291	IdentifierDeclType	const int		3030191	0					
ANR	3030292	Identifier	h		3030191	1					
ANR	3030293	AssignmentExpression	h = s -> b_height << s -> block_max_depth		3030191	2		=			
ANR	3030294	Identifier	h		3030191	0					
ANR	3030295	ShiftExpression	s -> b_height << s -> block_max_depth		3030191	1		<<			
ANR	3030296	PtrMemberAccess	s -> b_height		3030191	0					
ANR	3030297	Identifier	s		3030191	0					
ANR	3030298	Identifier	b_height		3030191	1					
ANR	3030299	PtrMemberAccess	s -> block_max_depth		3030191	1					
ANR	3030300	Identifier	s		3030191	0					
ANR	3030301	Identifier	block_max_depth		3030191	1					
ANR	3030302	IdentifierDeclStatement	const int rem_depth = s -> block_max_depth - level ;	23:4:513:560	3030191	10	True				
ANR	3030303	IdentifierDecl	rem_depth = s -> block_max_depth - level		3030191	0					
ANR	3030304	IdentifierDeclType	const int		3030191	0					
ANR	3030305	Identifier	rem_depth		3030191	1					
ANR	3030306	AssignmentExpression	rem_depth = s -> block_max_depth - level		3030191	2		=			
ANR	3030307	Identifier	rem_depth		3030191	0					
ANR	3030308	AdditiveExpression	s -> block_max_depth - level		3030191	1		-			
ANR	3030309	PtrMemberAccess	s -> block_max_depth		3030191	0					
ANR	3030310	Identifier	s		3030191	0					
ANR	3030311	Identifier	block_max_depth		3030191	1					
ANR	3030312	Identifier	level		3030191	1					
ANR	3030313	IdentifierDeclStatement	const int index = ( x + y * w ) << rem_depth ;	25:4:567:606	3030191	11	True				
ANR	3030314	IdentifierDecl	index = ( x + y * w ) << rem_depth		3030191	0					
ANR	3030315	IdentifierDeclType	const int		3030191	0					
ANR	3030316	Identifier	index		3030191	1					
ANR	3030317	AssignmentExpression	index = ( x + y * w ) << rem_depth		3030191	2		=			
ANR	3030318	Identifier	index		3030191	0					
ANR	3030319	ShiftExpression	( x + y * w ) << rem_depth		3030191	1		<<			
ANR	3030320	AdditiveExpression	x + y * w		3030191	0		+			
ANR	3030321	Identifier	x		3030191	0					
ANR	3030322	MultiplicativeExpression	y * w		3030191	1		*			
ANR	3030323	Identifier	y		3030191	0					
ANR	3030324	Identifier	w		3030191	1					
ANR	3030325	Identifier	rem_depth		3030191	1					
ANR	3030326	IdentifierDeclStatement	const int block_w = 1 << ( LOG2_MB_SIZE - level ) ;	27:4:613:657	3030191	12	True				
ANR	3030327	IdentifierDecl	block_w = 1 << ( LOG2_MB_SIZE - level )		3030191	0					
ANR	3030328	IdentifierDeclType	const int		3030191	0					
ANR	3030329	Identifier	block_w		3030191	1					
ANR	3030330	AssignmentExpression	block_w = 1 << ( LOG2_MB_SIZE - level )		3030191	2		=			
ANR	3030331	Identifier	block_w		3030191	0					
ANR	3030332	ShiftExpression	1 << ( LOG2_MB_SIZE - level )		3030191	1		<<			
ANR	3030333	PrimaryExpression	1		3030191	0					
ANR	3030334	AdditiveExpression	LOG2_MB_SIZE - level		3030191	1		-			
ANR	3030335	Identifier	LOG2_MB_SIZE		3030191	0					
ANR	3030336	Identifier	level		3030191	1					
ANR	3030337	IdentifierDeclStatement	int trx = ( x + 1 ) << rem_depth ;	29:4:664:689	3030191	13	True				
ANR	3030338	IdentifierDecl	trx = ( x + 1 ) << rem_depth		3030191	0					
ANR	3030339	IdentifierDeclType	int		3030191	0					
ANR	3030340	Identifier	trx		3030191	1					
ANR	3030341	AssignmentExpression	trx = ( x + 1 ) << rem_depth		3030191	2		=			
ANR	3030342	Identifier	trx		3030191	0					
ANR	3030343	ShiftExpression	( x + 1 ) << rem_depth		3030191	1		<<			
ANR	3030344	AdditiveExpression	x + 1		3030191	0		+			
ANR	3030345	Identifier	x		3030191	0					
ANR	3030346	PrimaryExpression	1		3030191	1					
ANR	3030347	Identifier	rem_depth		3030191	1					
ANR	3030348	Statement	int	31:4:696:698	3030191	14	True				
ANR	3030349	TryStatement	try		3030191	15					
ANR	3030350	Statement	=		3030191	0					
ANR	3030351	ExpressionStatement	( y + 1 ) << rem_depth	31:13:705:721	3030191	16	True				
ANR	3030352	ShiftExpression	( y + 1 ) << rem_depth		3030191	0		<<			
ANR	3030353	AdditiveExpression	y + 1		3030191	0		+			
ANR	3030354	Identifier	y		3030191	0					
ANR	3030355	PrimaryExpression	1		3030191	1					
ANR	3030356	Identifier	rem_depth		3030191	1					
ANR	3030357	IdentifierDeclStatement	const BlockNode * left = x ? & s -> block [ index - 1 ] : & null_block ;	33:4:728:789	3030191	17	True				
ANR	3030358	IdentifierDecl	* left = x ? & s -> block [ index - 1 ] : & null_block		3030191	0					
ANR	3030359	IdentifierDeclType	const BlockNode *		3030191	0					
ANR	3030360	Identifier	left		3030191	1					
ANR	3030361	AssignmentExpression	* left = x ? & s -> block [ index - 1 ] : & null_block		3030191	2		=			
ANR	3030362	Identifier	left		3030191	0					
ANR	3030363	ConditionalExpression	x ? & s -> block [ index - 1 ] : & null_block		3030191	1					
ANR	3030364	Condition	x		3030191	0					
ANR	3030365	Identifier	x		3030191	0					
ANR	3030366	UnaryOperationExpression	& s -> block [ index - 1 ]		3030191	1					
ANR	3030367	UnaryOperator	&		3030191	0					
ANR	3030368	ArrayIndexing	s -> block [ index - 1 ]		3030191	1					
ANR	3030369	PtrMemberAccess	s -> block		3030191	0					
ANR	3030370	Identifier	s		3030191	0					
ANR	3030371	Identifier	block		3030191	1					
ANR	3030372	AdditiveExpression	index - 1		3030191	1		-			
ANR	3030373	Identifier	index		3030191	0					
ANR	3030374	PrimaryExpression	1		3030191	1					
ANR	3030375	UnaryOperationExpression	& null_block		3030191	2					
ANR	3030376	UnaryOperator	&		3030191	0					
ANR	3030377	Identifier	null_block		3030191	1					
ANR	3030378	IdentifierDeclStatement	const BlockNode * top = y ? & s -> block [ index - w ] : & null_block ;	35:4:796:857	3030191	18	True				
ANR	3030379	IdentifierDecl	* top = y ? & s -> block [ index - w ] : & null_block		3030191	0					
ANR	3030380	IdentifierDeclType	const BlockNode *		3030191	0					
ANR	3030381	Identifier	top		3030191	1					
ANR	3030382	AssignmentExpression	* top = y ? & s -> block [ index - w ] : & null_block		3030191	2		=			
ANR	3030383	Identifier	top		3030191	0					
ANR	3030384	ConditionalExpression	y ? & s -> block [ index - w ] : & null_block		3030191	1					
ANR	3030385	Condition	y		3030191	0					
ANR	3030386	Identifier	y		3030191	0					
ANR	3030387	UnaryOperationExpression	& s -> block [ index - w ]		3030191	1					
ANR	3030388	UnaryOperator	&		3030191	0					
ANR	3030389	ArrayIndexing	s -> block [ index - w ]		3030191	1					
ANR	3030390	PtrMemberAccess	s -> block		3030191	0					
ANR	3030391	Identifier	s		3030191	0					
ANR	3030392	Identifier	block		3030191	1					
ANR	3030393	AdditiveExpression	index - w		3030191	1		-			
ANR	3030394	Identifier	index		3030191	0					
ANR	3030395	Identifier	w		3030191	1					
ANR	3030396	UnaryOperationExpression	& null_block		3030191	2					
ANR	3030397	UnaryOperator	&		3030191	0					
ANR	3030398	Identifier	null_block		3030191	1					
ANR	3030399	IdentifierDeclStatement	const BlockNode * right = trx < w ? & s -> block [ index + 1 ] : & null_block ;	37:4:864:929	3030191	19	True				
ANR	3030400	IdentifierDecl	* right = trx < w ? & s -> block [ index + 1 ] : & null_block		3030191	0					
ANR	3030401	IdentifierDeclType	const BlockNode *		3030191	0					
ANR	3030402	Identifier	right		3030191	1					
ANR	3030403	AssignmentExpression	* right = trx < w ? & s -> block [ index + 1 ] : & null_block		3030191	2		=			
ANR	3030404	Identifier	right		3030191	0					
ANR	3030405	ConditionalExpression	trx < w ? & s -> block [ index + 1 ] : & null_block		3030191	1					
ANR	3030406	Condition	trx < w		3030191	0					
ANR	3030407	RelationalExpression	trx < w		3030191	0		<			
ANR	3030408	Identifier	trx		3030191	0					
ANR	3030409	Identifier	w		3030191	1					
ANR	3030410	UnaryOperationExpression	& s -> block [ index + 1 ]		3030191	1					
ANR	3030411	UnaryOperator	&		3030191	0					
ANR	3030412	ArrayIndexing	s -> block [ index + 1 ]		3030191	1					
ANR	3030413	PtrMemberAccess	s -> block		3030191	0					
ANR	3030414	Identifier	s		3030191	0					
ANR	3030415	Identifier	block		3030191	1					
ANR	3030416	AdditiveExpression	index + 1		3030191	1		+			
ANR	3030417	Identifier	index		3030191	0					
ANR	3030418	PrimaryExpression	1		3030191	1					
ANR	3030419	UnaryOperationExpression	& null_block		3030191	2					
ANR	3030420	UnaryOperator	&		3030191	0					
ANR	3030421	Identifier	null_block		3030191	1					
ANR	3030422	Statement	const	39:4:936:940	3030191	20	True				
ANR	3030423	Statement	BlockNode	39:10:942:950	3030191	21	True				
ANR	3030424	Statement	*	39:20:952:952	3030191	22	True				
ANR	3030425	Statement	bottom	39:21:953:958	3030191	23	True				
ANR	3030426	Statement	=	39:27:959:959	3030191	24	True				
ANR	3030427	TryStatement	try		3030191	25					
ANR	3030428	Statement	<		3030191	0					
ANR	3030429	ExpressionStatement	h ? & s -> block [ index + w ] : & null_block	39:33:965:1001	3030191	26	True				
ANR	3030430	ConditionalExpression	h ? & s -> block [ index + w ] : & null_block		3030191	0					
ANR	3030431	Condition	h		3030191	0					
ANR	3030432	Identifier	h		3030191	0					
ANR	3030433	UnaryOperationExpression	& s -> block [ index + w ]		3030191	1					
ANR	3030434	UnaryOperator	&		3030191	0					
ANR	3030435	ArrayIndexing	s -> block [ index + w ]		3030191	1					
ANR	3030436	PtrMemberAccess	s -> block		3030191	0					
ANR	3030437	Identifier	s		3030191	0					
ANR	3030438	Identifier	block		3030191	1					
ANR	3030439	AdditiveExpression	index + w		3030191	1		+			
ANR	3030440	Identifier	index		3030191	0					
ANR	3030441	Identifier	w		3030191	1					
ANR	3030442	UnaryOperationExpression	& null_block		3030191	2					
ANR	3030443	UnaryOperator	&		3030191	0					
ANR	3030444	Identifier	null_block		3030191	1					
ANR	3030445	IdentifierDeclStatement	const BlockNode * tl = y && x ? & s -> block [ index - w - 1 ] : left ;	41:4:1008:1069	3030191	27	True				
ANR	3030446	IdentifierDecl	* tl = y && x ? & s -> block [ index - w - 1 ] : left		3030191	0					
ANR	3030447	IdentifierDeclType	const BlockNode *		3030191	0					
ANR	3030448	Identifier	tl		3030191	1					
ANR	3030449	AssignmentExpression	* tl = y && x ? & s -> block [ index - w - 1 ] : left		3030191	2		=			
ANR	3030450	Identifier	tl		3030191	0					
ANR	3030451	ConditionalExpression	y && x ? & s -> block [ index - w - 1 ] : left		3030191	1					
ANR	3030452	Condition	y && x		3030191	0					
ANR	3030453	AndExpression	y && x		3030191	0		&&			
ANR	3030454	Identifier	y		3030191	0					
ANR	3030455	Identifier	x		3030191	1					
ANR	3030456	UnaryOperationExpression	& s -> block [ index - w - 1 ]		3030191	1					
ANR	3030457	UnaryOperator	&		3030191	0					
ANR	3030458	ArrayIndexing	s -> block [ index - w - 1 ]		3030191	1					
ANR	3030459	PtrMemberAccess	s -> block		3030191	0					
ANR	3030460	Identifier	s		3030191	0					
ANR	3030461	Identifier	block		3030191	1					
ANR	3030462	AdditiveExpression	index - w - 1		3030191	1		-			
ANR	3030463	Identifier	index		3030191	0					
ANR	3030464	AdditiveExpression	w - 1		3030191	1		-			
ANR	3030465	Identifier	w		3030191	0					
ANR	3030466	PrimaryExpression	1		3030191	1					
ANR	3030467	Identifier	left		3030191	2					
ANR	3030468	IdentifierDeclStatement	const BlockNode * tr = y && trx < w && ( ( x & 1 ) == 0 || level == 0 ) ? & s -> block [ index - w + ( 1 << rem_depth ) ] : tl ;	43:4:1076:1178	3030191	28	True				
ANR	3030469	IdentifierDecl	* tr = y && trx < w && ( ( x & 1 ) == 0 || level == 0 ) ? & s -> block [ index - w + ( 1 << rem_depth ) ] : tl		3030191	0					
ANR	3030470	IdentifierDeclType	const BlockNode *		3030191	0					
ANR	3030471	Identifier	tr		3030191	1					
ANR	3030472	AssignmentExpression	* tr = y && trx < w && ( ( x & 1 ) == 0 || level == 0 ) ? & s -> block [ index - w + ( 1 << rem_depth ) ] : tl		3030191	2		=			
ANR	3030473	Identifier	tr		3030191	0					
ANR	3030474	ConditionalExpression	y && trx < w && ( ( x & 1 ) == 0 || level == 0 ) ? & s -> block [ index - w + ( 1 << rem_depth ) ] : tl		3030191	1					
ANR	3030475	Condition	y && trx < w && ( ( x & 1 ) == 0 || level == 0 )		3030191	0					
ANR	3030476	AndExpression	y && trx < w && ( ( x & 1 ) == 0 || level == 0 )		3030191	0		&&			
ANR	3030477	Identifier	y		3030191	0					
ANR	3030478	AndExpression	trx < w && ( ( x & 1 ) == 0 || level == 0 )		3030191	1		&&			
ANR	3030479	RelationalExpression	trx < w		3030191	0		<			
ANR	3030480	Identifier	trx		3030191	0					
ANR	3030481	Identifier	w		3030191	1					
ANR	3030482	OrExpression	( x & 1 ) == 0 || level == 0		3030191	1		||			
ANR	3030483	EqualityExpression	( x & 1 ) == 0		3030191	0		==			
ANR	3030484	BitAndExpression	x & 1		3030191	0		&			
ANR	3030485	Identifier	x		3030191	0					
ANR	3030486	PrimaryExpression	1		3030191	1					
ANR	3030487	PrimaryExpression	0		3030191	1					
ANR	3030488	EqualityExpression	level == 0		3030191	1		==			
ANR	3030489	Identifier	level		3030191	0					
ANR	3030490	PrimaryExpression	0		3030191	1					
ANR	3030491	UnaryOperationExpression	& s -> block [ index - w + ( 1 << rem_depth ) ]		3030191	1					
ANR	3030492	UnaryOperator	&		3030191	0					
ANR	3030493	ArrayIndexing	s -> block [ index - w + ( 1 << rem_depth ) ]		3030191	1					
ANR	3030494	PtrMemberAccess	s -> block		3030191	0					
ANR	3030495	Identifier	s		3030191	0					
ANR	3030496	Identifier	block		3030191	1					
ANR	3030497	AdditiveExpression	index - w + ( 1 << rem_depth )		3030191	1		-			
ANR	3030498	Identifier	index		3030191	0					
ANR	3030499	AdditiveExpression	w + ( 1 << rem_depth )		3030191	1		+			
ANR	3030500	Identifier	w		3030191	0					
ANR	3030501	ShiftExpression	1 << rem_depth		3030191	1		<<			
ANR	3030502	PrimaryExpression	1		3030191	0					
ANR	3030503	Identifier	rem_depth		3030191	1					
ANR	3030504	Identifier	tl		3030191	2					
ANR	3030505	IdentifierDeclStatement	int pl = left -> color [ 0 ] ;	45:4:1200:1223	3030191	29	True				
ANR	3030506	IdentifierDecl	pl = left -> color [ 0 ]		3030191	0					
ANR	3030507	IdentifierDeclType	int		3030191	0					
ANR	3030508	Identifier	pl		3030191	1					
ANR	3030509	AssignmentExpression	pl = left -> color [ 0 ]		3030191	2		=			
ANR	3030510	Identifier	pl		3030191	0					
ANR	3030511	ArrayIndexing	left -> color [ 0 ]		3030191	1					
ANR	3030512	PtrMemberAccess	left -> color		3030191	0					
ANR	3030513	Identifier	left		3030191	0					
ANR	3030514	Identifier	color		3030191	1					
ANR	3030515	PrimaryExpression	0		3030191	1					
ANR	3030516	IdentifierDeclStatement	int pcb = left -> color [ 1 ] ;	47:4:1230:1253	3030191	30	True				
ANR	3030517	IdentifierDecl	pcb = left -> color [ 1 ]		3030191	0					
ANR	3030518	IdentifierDeclType	int		3030191	0					
ANR	3030519	Identifier	pcb		3030191	1					
ANR	3030520	AssignmentExpression	pcb = left -> color [ 1 ]		3030191	2		=			
ANR	3030521	Identifier	pcb		3030191	0					
ANR	3030522	ArrayIndexing	left -> color [ 1 ]		3030191	1					
ANR	3030523	PtrMemberAccess	left -> color		3030191	0					
ANR	3030524	Identifier	left		3030191	0					
ANR	3030525	Identifier	color		3030191	1					
ANR	3030526	PrimaryExpression	1		3030191	1					
ANR	3030527	IdentifierDeclStatement	int pcr = left -> color [ 2 ] ;	49:4:1260:1283	3030191	31	True				
ANR	3030528	IdentifierDecl	pcr = left -> color [ 2 ]		3030191	0					
ANR	3030529	IdentifierDeclType	int		3030191	0					
ANR	3030530	Identifier	pcr		3030191	1					
ANR	3030531	AssignmentExpression	pcr = left -> color [ 2 ]		3030191	2		=			
ANR	3030532	Identifier	pcr		3030191	0					
ANR	3030533	ArrayIndexing	left -> color [ 2 ]		3030191	1					
ANR	3030534	PtrMemberAccess	left -> color		3030191	0					
ANR	3030535	Identifier	left		3030191	0					
ANR	3030536	Identifier	color		3030191	1					
ANR	3030537	PrimaryExpression	2		3030191	1					
ANR	3030538	IdentifierDeclStatement	"int pmx , pmy ;"	51:4:1290:1302	3030191	32	True				
ANR	3030539	IdentifierDecl	pmx		3030191	0					
ANR	3030540	IdentifierDeclType	int		3030191	0					
ANR	3030541	Identifier	pmx		3030191	1					
ANR	3030542	IdentifierDecl	pmy		3030191	1					
ANR	3030543	IdentifierDeclType	int		3030191	0					
ANR	3030544	Identifier	pmy		3030191	1					
ANR	3030545	IdentifierDeclStatement	"int mx = 0 , my = 0 ;"	53:4:1309:1323	3030191	33	True				
ANR	3030546	IdentifierDecl	mx = 0		3030191	0					
ANR	3030547	IdentifierDeclType	int		3030191	0					
ANR	3030548	Identifier	mx		3030191	1					
ANR	3030549	AssignmentExpression	mx = 0		3030191	2		=			
ANR	3030550	Identifier	mx		3030191	0					
ANR	3030551	PrimaryExpression	0		3030191	1					
ANR	3030552	IdentifierDecl	my = 0		3030191	1					
ANR	3030553	IdentifierDeclType	int		3030191	0					
ANR	3030554	Identifier	my		3030191	1					
ANR	3030555	AssignmentExpression	my = 0		3030191	2		=			
ANR	3030556	Identifier	my		3030191	0					
ANR	3030557	PrimaryExpression	0		3030191	1					
ANR	3030558	IdentifierDeclStatement	"int l , cr , cb ;"	55:4:1330:1341	3030191	34	True				
ANR	3030559	IdentifierDecl	l		3030191	0					
ANR	3030560	IdentifierDeclType	int		3030191	0					
ANR	3030561	Identifier	l		3030191	1					
ANR	3030562	IdentifierDecl	cr		3030191	1					
ANR	3030563	IdentifierDeclType	int		3030191	0					
ANR	3030564	Identifier	cr		3030191	1					
ANR	3030565	IdentifierDecl	cb		3030191	2					
ANR	3030566	IdentifierDeclType	int		3030191	0					
ANR	3030567	Identifier	cb		3030191	1					
ANR	3030568	IdentifierDeclStatement	const int stride = s -> current_picture -> linesize [ 0 ] ;	57:4:1348:1397	3030191	35	True				
ANR	3030569	IdentifierDecl	stride = s -> current_picture -> linesize [ 0 ]		3030191	0					
ANR	3030570	IdentifierDeclType	const int		3030191	0					
ANR	3030571	Identifier	stride		3030191	1					
ANR	3030572	AssignmentExpression	stride = s -> current_picture -> linesize [ 0 ]		3030191	2		=			
ANR	3030573	Identifier	stride		3030191	0					
ANR	3030574	ArrayIndexing	s -> current_picture -> linesize [ 0 ]		3030191	1					
ANR	3030575	PtrMemberAccess	s -> current_picture -> linesize		3030191	0					
ANR	3030576	PtrMemberAccess	s -> current_picture		3030191	0					
ANR	3030577	Identifier	s		3030191	0					
ANR	3030578	Identifier	current_picture		3030191	1					
ANR	3030579	Identifier	linesize		3030191	1					
ANR	3030580	PrimaryExpression	0		3030191	1					
ANR	3030581	IdentifierDeclStatement	const int uvstride = s -> current_picture -> linesize [ 1 ] ;	59:4:1404:1455	3030191	36	True				
ANR	3030582	IdentifierDecl	uvstride = s -> current_picture -> linesize [ 1 ]		3030191	0					
ANR	3030583	IdentifierDeclType	const int		3030191	0					
ANR	3030584	Identifier	uvstride		3030191	1					
ANR	3030585	AssignmentExpression	uvstride = s -> current_picture -> linesize [ 1 ]		3030191	2		=			
ANR	3030586	Identifier	uvstride		3030191	0					
ANR	3030587	ArrayIndexing	s -> current_picture -> linesize [ 1 ]		3030191	1					
ANR	3030588	PtrMemberAccess	s -> current_picture -> linesize		3030191	0					
ANR	3030589	PtrMemberAccess	s -> current_picture		3030191	0					
ANR	3030590	Identifier	s		3030191	0					
ANR	3030591	Identifier	current_picture		3030191	1					
ANR	3030592	Identifier	linesize		3030191	1					
ANR	3030593	PrimaryExpression	1		3030191	1					
ANR	3030594	IdentifierDeclStatement	"uint8_t * current_data [ 3 ] = { s -> input_picture -> data [ 0 ] + ( x + y * stride ) * block_w , s -> input_picture -> data [ 1 ] + ( ( x * block_w ) >> s -> chroma_h_shift ) + ( ( y * uvstride * block_w ) >> s -> chroma_v_shift ) , s -> input_picture -> data [ 2 ] + ( ( x * block_w ) >> s -> chroma_h_shift ) + ( ( y * uvstride * block_w ) >> s -> chroma_v_shift ) } ;"	61:4:1462:1821	3030191	37	True				
ANR	3030595	IdentifierDecl	"* current_data [ 3 ] = { s -> input_picture -> data [ 0 ] + ( x + y * stride ) * block_w , s -> input_picture -> data [ 1 ] + ( ( x * block_w ) >> s -> chroma_h_shift ) + ( ( y * uvstride * block_w ) >> s -> chroma_v_shift ) , s -> input_picture -> data [ 2 ] + ( ( x * block_w ) >> s -> chroma_h_shift ) + ( ( y * uvstride * block_w ) >> s -> chroma_v_shift ) }"		3030191	0					
ANR	3030596	IdentifierDeclType	uint8_t * [ 3 ]		3030191	0					
ANR	3030597	Identifier	current_data		3030191	1					
ANR	3030598	PrimaryExpression	3		3030191	2					
ANR	3030599	AssignmentExpression	"* current_data [ 3 ] = { s -> input_picture -> data [ 0 ] + ( x + y * stride ) * block_w , s -> input_picture -> data [ 1 ] + ( ( x * block_w ) >> s -> chroma_h_shift ) + ( ( y * uvstride * block_w ) >> s -> chroma_v_shift ) , s -> input_picture -> data [ 2 ] + ( ( x * block_w ) >> s -> chroma_h_shift ) + ( ( y * uvstride * block_w ) >> s -> chroma_v_shift ) }"		3030191	3		=			
ANR	3030600	Identifier	current_data		3030191	0					
ANR	3030601	InitializerList	s -> input_picture -> data [ 0 ] + ( x + y * stride ) * block_w		3030191	1					
ANR	3030602	AdditiveExpression	s -> input_picture -> data [ 0 ] + ( x + y * stride ) * block_w		3030191	0		+			
ANR	3030603	ArrayIndexing	s -> input_picture -> data [ 0 ]		3030191	0					
ANR	3030604	PtrMemberAccess	s -> input_picture -> data		3030191	0					
ANR	3030605	PtrMemberAccess	s -> input_picture		3030191	0					
ANR	3030606	Identifier	s		3030191	0					
ANR	3030607	Identifier	input_picture		3030191	1					
ANR	3030608	Identifier	data		3030191	1					
ANR	3030609	PrimaryExpression	0		3030191	1					
ANR	3030610	MultiplicativeExpression	( x + y * stride ) * block_w		3030191	1		*			
ANR	3030611	AdditiveExpression	x + y * stride		3030191	0		+			
ANR	3030612	Identifier	x		3030191	0					
ANR	3030613	MultiplicativeExpression	y * stride		3030191	1		*			
ANR	3030614	Identifier	y		3030191	0					
ANR	3030615	Identifier	stride		3030191	1					
ANR	3030616	Identifier	block_w		3030191	1					
ANR	3030617	AdditiveExpression	s -> input_picture -> data [ 1 ] + ( ( x * block_w ) >> s -> chroma_h_shift ) + ( ( y * uvstride * block_w ) >> s -> chroma_v_shift )		3030191	1		+			
ANR	3030618	ArrayIndexing	s -> input_picture -> data [ 1 ]		3030191	0					
ANR	3030619	PtrMemberAccess	s -> input_picture -> data		3030191	0					
ANR	3030620	PtrMemberAccess	s -> input_picture		3030191	0					
ANR	3030621	Identifier	s		3030191	0					
ANR	3030622	Identifier	input_picture		3030191	1					
ANR	3030623	Identifier	data		3030191	1					
ANR	3030624	PrimaryExpression	1		3030191	1					
ANR	3030625	AdditiveExpression	( ( x * block_w ) >> s -> chroma_h_shift ) + ( ( y * uvstride * block_w ) >> s -> chroma_v_shift )		3030191	1		+			
ANR	3030626	ShiftExpression	( x * block_w ) >> s -> chroma_h_shift		3030191	0		>>			
ANR	3030627	MultiplicativeExpression	x * block_w		3030191	0		*			
ANR	3030628	Identifier	x		3030191	0					
ANR	3030629	Identifier	block_w		3030191	1					
ANR	3030630	PtrMemberAccess	s -> chroma_h_shift		3030191	1					
ANR	3030631	Identifier	s		3030191	0					
ANR	3030632	Identifier	chroma_h_shift		3030191	1					
ANR	3030633	ShiftExpression	( y * uvstride * block_w ) >> s -> chroma_v_shift		3030191	1		>>			
ANR	3030634	MultiplicativeExpression	y * uvstride * block_w		3030191	0		*			
ANR	3030635	Identifier	y		3030191	0					
ANR	3030636	MultiplicativeExpression	uvstride * block_w		3030191	1		*			
ANR	3030637	Identifier	uvstride		3030191	0					
ANR	3030638	Identifier	block_w		3030191	1					
ANR	3030639	PtrMemberAccess	s -> chroma_v_shift		3030191	1					
ANR	3030640	Identifier	s		3030191	0					
ANR	3030641	Identifier	chroma_v_shift		3030191	1					
ANR	3030642	AdditiveExpression	s -> input_picture -> data [ 2 ] + ( ( x * block_w ) >> s -> chroma_h_shift ) + ( ( y * uvstride * block_w ) >> s -> chroma_v_shift )		3030191	2		+			
ANR	3030643	ArrayIndexing	s -> input_picture -> data [ 2 ]		3030191	0					
ANR	3030644	PtrMemberAccess	s -> input_picture -> data		3030191	0					
ANR	3030645	PtrMemberAccess	s -> input_picture		3030191	0					
ANR	3030646	Identifier	s		3030191	0					
ANR	3030647	Identifier	input_picture		3030191	1					
ANR	3030648	Identifier	data		3030191	1					
ANR	3030649	PrimaryExpression	2		3030191	1					
ANR	3030650	AdditiveExpression	( ( x * block_w ) >> s -> chroma_h_shift ) + ( ( y * uvstride * block_w ) >> s -> chroma_v_shift )		3030191	1		+			
ANR	3030651	ShiftExpression	( x * block_w ) >> s -> chroma_h_shift		3030191	0		>>			
ANR	3030652	MultiplicativeExpression	x * block_w		3030191	0		*			
ANR	3030653	Identifier	x		3030191	0					
ANR	3030654	Identifier	block_w		3030191	1					
ANR	3030655	PtrMemberAccess	s -> chroma_h_shift		3030191	1					
ANR	3030656	Identifier	s		3030191	0					
ANR	3030657	Identifier	chroma_h_shift		3030191	1					
ANR	3030658	ShiftExpression	( y * uvstride * block_w ) >> s -> chroma_v_shift		3030191	1		>>			
ANR	3030659	MultiplicativeExpression	y * uvstride * block_w		3030191	0		*			
ANR	3030660	Identifier	y		3030191	0					
ANR	3030661	MultiplicativeExpression	uvstride * block_w		3030191	1		*			
ANR	3030662	Identifier	uvstride		3030191	0					
ANR	3030663	Identifier	block_w		3030191	1					
ANR	3030664	PtrMemberAccess	s -> chroma_v_shift		3030191	1					
ANR	3030665	Identifier	s		3030191	0					
ANR	3030666	Identifier	chroma_v_shift		3030191	1					
ANR	3030667	Statement	int	67:4:1828:1830	3030191	38	True				
ANR	3030668	ExpressionStatement	P [ 10 ] [ 2 ]	67:8:1832:1840	3030191	39	True				
ANR	3030669	ArrayIndexing	P [ 10 ] [ 2 ]		3030191	0					
ANR	3030670	ArrayIndexing	P [ 10 ]		3030191	0					
ANR	3030671	Identifier	P		3030191	0					
ANR	3030672	PrimaryExpression	10		3030191	1					
ANR	3030673	PrimaryExpression	2		3030191	1					
ANR	3030674	Statement	int16_t	69:4:1847:1853	3030191	40	True				
ANR	3030675	ExpressionStatement	last_mv [ 3 ] [ 2 ]	69:12:1855:1868	3030191	41	True				
ANR	3030676	ArrayIndexing	last_mv [ 3 ] [ 2 ]		3030191	0					
ANR	3030677	ArrayIndexing	last_mv [ 3 ]		3030191	0					
ANR	3030678	Identifier	last_mv		3030191	0					
ANR	3030679	PrimaryExpression	3		3030191	1					
ANR	3030680	PrimaryExpression	2		3030191	1					
ANR	3030681	IdentifierDeclStatement	int qpel = ! ! ( s -> avctx -> flags & AV_CODEC_FLAG_QPEL ) ;	71:4:1875:1925	3030191	42	True				
ANR	3030682	IdentifierDecl	qpel = ! ! ( s -> avctx -> flags & AV_CODEC_FLAG_QPEL )		3030191	0					
ANR	3030683	IdentifierDeclType	int		3030191	0					
ANR	3030684	Identifier	qpel		3030191	1					
ANR	3030685	AssignmentExpression	qpel = ! ! ( s -> avctx -> flags & AV_CODEC_FLAG_QPEL )		3030191	2		=			
ANR	3030686	Identifier	qpel		3030191	0					
ANR	3030687	UnaryOperationExpression	! ! ( s -> avctx -> flags & AV_CODEC_FLAG_QPEL )		3030191	1					
ANR	3030688	UnaryOperator	!		3030191	0					
ANR	3030689	UnaryOperationExpression	! ( s -> avctx -> flags & AV_CODEC_FLAG_QPEL )		3030191	1					
ANR	3030690	UnaryOperator	!		3030191	0					
ANR	3030691	BitAndExpression	s -> avctx -> flags & AV_CODEC_FLAG_QPEL		3030191	1		&			
ANR	3030692	PtrMemberAccess	s -> avctx -> flags		3030191	0					
ANR	3030693	PtrMemberAccess	s -> avctx		3030191	0					
ANR	3030694	Identifier	s		3030191	0					
ANR	3030695	Identifier	avctx		3030191	1					
ANR	3030696	Identifier	flags		3030191	1					
ANR	3030697	Identifier	AV_CODEC_FLAG_QPEL		3030191	1					
ANR	3030698	IdentifierDeclStatement	const int shift = 1 + qpel ;	73:4:1941:1964	3030191	43	True				
ANR	3030699	IdentifierDecl	shift = 1 + qpel		3030191	0					
ANR	3030700	IdentifierDeclType	const int		3030191	0					
ANR	3030701	Identifier	shift		3030191	1					
ANR	3030702	AssignmentExpression	shift = 1 + qpel		3030191	2		=			
ANR	3030703	Identifier	shift		3030191	0					
ANR	3030704	AdditiveExpression	1 + qpel		3030191	1		+			
ANR	3030705	PrimaryExpression	1		3030191	0					
ANR	3030706	Identifier	qpel		3030191	1					
ANR	3030707	IdentifierDeclStatement	MotionEstContext * c = & s -> m . me ;	75:4:1971:2000	3030191	44	True				
ANR	3030708	IdentifierDecl	* c = & s -> m . me		3030191	0					
ANR	3030709	IdentifierDeclType	MotionEstContext *		3030191	0					
ANR	3030710	Identifier	c		3030191	1					
ANR	3030711	AssignmentExpression	* c = & s -> m . me		3030191	2		=			
ANR	3030712	Identifier	c		3030191	0					
ANR	3030713	UnaryOperationExpression	& s -> m . me		3030191	1					
ANR	3030714	UnaryOperator	&		3030191	0					
ANR	3030715	MemberAccess	s -> m . me		3030191	1					
ANR	3030716	PtrMemberAccess	s -> m		3030191	0					
ANR	3030717	Identifier	s		3030191	0					
ANR	3030718	Identifier	m		3030191	1					
ANR	3030719	Identifier	me		3030191	1					
ANR	3030720	IdentifierDeclStatement	int ref_context = av_log2 ( 2 * left -> ref ) + av_log2 ( 2 * top -> ref ) ;	77:4:2007:2066	3030191	45	True				
ANR	3030721	IdentifierDecl	ref_context = av_log2 ( 2 * left -> ref ) + av_log2 ( 2 * top -> ref )		3030191	0					
ANR	3030722	IdentifierDeclType	int		3030191	0					
ANR	3030723	Identifier	ref_context		3030191	1					
ANR	3030724	AssignmentExpression	ref_context = av_log2 ( 2 * left -> ref ) + av_log2 ( 2 * top -> ref )		3030191	2		=			
ANR	3030725	Identifier	ref_context		3030191	0					
ANR	3030726	AdditiveExpression	av_log2 ( 2 * left -> ref ) + av_log2 ( 2 * top -> ref )		3030191	1		+			
ANR	3030727	CallExpression	av_log2 ( 2 * left -> ref )		3030191	0					
ANR	3030728	Callee	av_log2		3030191	0					
ANR	3030729	Identifier	av_log2		3030191	0					
ANR	3030730	ArgumentList	2 * left -> ref		3030191	1					
ANR	3030731	Argument	2 * left -> ref		3030191	0					
ANR	3030732	MultiplicativeExpression	2 * left -> ref		3030191	0		*			
ANR	3030733	PrimaryExpression	2		3030191	0					
ANR	3030734	PtrMemberAccess	left -> ref		3030191	1					
ANR	3030735	Identifier	left		3030191	0					
ANR	3030736	Identifier	ref		3030191	1					
ANR	3030737	CallExpression	av_log2 ( 2 * top -> ref )		3030191	1					
ANR	3030738	Callee	av_log2		3030191	0					
ANR	3030739	Identifier	av_log2		3030191	0					
ANR	3030740	ArgumentList	2 * top -> ref		3030191	1					
ANR	3030741	Argument	2 * top -> ref		3030191	0					
ANR	3030742	MultiplicativeExpression	2 * top -> ref		3030191	0		*			
ANR	3030743	PrimaryExpression	2		3030191	0					
ANR	3030744	PtrMemberAccess	top -> ref		3030191	1					
ANR	3030745	Identifier	top		3030191	0					
ANR	3030746	Identifier	ref		3030191	1					
ANR	3030747	IdentifierDeclStatement	int mx_context = av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) ) ;	79:4:2073:2125	3030191	46	True				
ANR	3030748	IdentifierDecl	mx_context = av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) )		3030191	0					
ANR	3030749	IdentifierDeclType	int		3030191	0					
ANR	3030750	Identifier	mx_context		3030191	1					
ANR	3030751	AssignmentExpression	mx_context = av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) )		3030191	2		=			
ANR	3030752	Identifier	mx_context		3030191	0					
ANR	3030753	CallExpression	av_log2 ( 2 * FFABS ( left -> mx - top -> mx ) )		3030191	1					
ANR	3030754	Callee	av_log2		3030191	0					
ANR	3030755	Identifier	av_log2		3030191	0					
ANR	3030756	ArgumentList	2 * FFABS ( left -> mx - top -> mx )		3030191	1					
ANR	3030757	Argument	2 * FFABS ( left -> mx - top -> mx )		3030191	0					
ANR	3030758	MultiplicativeExpression	2 * FFABS ( left -> mx - top -> mx )		3030191	0		*			
ANR	3030759	PrimaryExpression	2		3030191	0					
ANR	3030760	CallExpression	FFABS ( left -> mx - top -> mx )		3030191	1					
ANR	3030761	Callee	FFABS		3030191	0					
ANR	3030762	Identifier	FFABS		3030191	0					
ANR	3030763	ArgumentList	left -> mx - top -> mx		3030191	1					
ANR	3030764	Argument	left -> mx - top -> mx		3030191	0					
ANR	3030765	AdditiveExpression	left -> mx - top -> mx		3030191	0		-			
ANR	3030766	PtrMemberAccess	left -> mx		3030191	0					
ANR	3030767	Identifier	left		3030191	0					
ANR	3030768	Identifier	mx		3030191	1					
ANR	3030769	PtrMemberAccess	top -> mx		3030191	1					
ANR	3030770	Identifier	top		3030191	0					
ANR	3030771	Identifier	mx		3030191	1					
ANR	3030772	IdentifierDeclStatement	int my_context = av_log2 ( 2 * FFABS ( left -> my - top -> my ) ) ;	81:4:2132:2184	3030191	47	True				
ANR	3030773	IdentifierDecl	my_context = av_log2 ( 2 * FFABS ( left -> my - top -> my ) )		3030191	0					
ANR	3030774	IdentifierDeclType	int		3030191	0					
ANR	3030775	Identifier	my_context		3030191	1					
ANR	3030776	AssignmentExpression	my_context = av_log2 ( 2 * FFABS ( left -> my - top -> my ) )		3030191	2		=			
ANR	3030777	Identifier	my_context		3030191	0					
ANR	3030778	CallExpression	av_log2 ( 2 * FFABS ( left -> my - top -> my ) )		3030191	1					
ANR	3030779	Callee	av_log2		3030191	0					
ANR	3030780	Identifier	av_log2		3030191	0					
ANR	3030781	ArgumentList	2 * FFABS ( left -> my - top -> my )		3030191	1					
ANR	3030782	Argument	2 * FFABS ( left -> my - top -> my )		3030191	0					
ANR	3030783	MultiplicativeExpression	2 * FFABS ( left -> my - top -> my )		3030191	0		*			
ANR	3030784	PrimaryExpression	2		3030191	0					
ANR	3030785	CallExpression	FFABS ( left -> my - top -> my )		3030191	1					
ANR	3030786	Callee	FFABS		3030191	0					
ANR	3030787	Identifier	FFABS		3030191	0					
ANR	3030788	ArgumentList	left -> my - top -> my		3030191	1					
ANR	3030789	Argument	left -> my - top -> my		3030191	0					
ANR	3030790	AdditiveExpression	left -> my - top -> my		3030191	0		-			
ANR	3030791	PtrMemberAccess	left -> my		3030191	0					
ANR	3030792	Identifier	left		3030191	0					
ANR	3030793	Identifier	my		3030191	1					
ANR	3030794	PtrMemberAccess	top -> my		3030191	1					
ANR	3030795	Identifier	top		3030191	0					
ANR	3030796	Identifier	my		3030191	1					
ANR	3030797	IdentifierDeclStatement	int s_context = 2 * left -> level + 2 * top -> level + tl -> level + tr -> level ;	83:4:2191:2258	3030191	48	True				
ANR	3030798	IdentifierDecl	s_context = 2 * left -> level + 2 * top -> level + tl -> level + tr -> level		3030191	0					
ANR	3030799	IdentifierDeclType	int		3030191	0					
ANR	3030800	Identifier	s_context		3030191	1					
ANR	3030801	AssignmentExpression	s_context = 2 * left -> level + 2 * top -> level + tl -> level + tr -> level		3030191	2		=			
ANR	3030802	Identifier	s_context		3030191	0					
ANR	3030803	AdditiveExpression	2 * left -> level + 2 * top -> level + tl -> level + tr -> level		3030191	1		+			
ANR	3030804	MultiplicativeExpression	2 * left -> level		3030191	0		*			
ANR	3030805	PrimaryExpression	2		3030191	0					
ANR	3030806	PtrMemberAccess	left -> level		3030191	1					
ANR	3030807	Identifier	left		3030191	0					
ANR	3030808	Identifier	level		3030191	1					
ANR	3030809	AdditiveExpression	2 * top -> level + tl -> level + tr -> level		3030191	1		+			
ANR	3030810	MultiplicativeExpression	2 * top -> level		3030191	0		*			
ANR	3030811	PrimaryExpression	2		3030191	0					
ANR	3030812	PtrMemberAccess	top -> level		3030191	1					
ANR	3030813	Identifier	top		3030191	0					
ANR	3030814	Identifier	level		3030191	1					
ANR	3030815	AdditiveExpression	tl -> level + tr -> level		3030191	1		+			
ANR	3030816	PtrMemberAccess	tl -> level		3030191	0					
ANR	3030817	Identifier	tl		3030191	0					
ANR	3030818	Identifier	level		3030191	1					
ANR	3030819	PtrMemberAccess	tr -> level		3030191	1					
ANR	3030820	Identifier	tr		3030191	0					
ANR	3030821	Identifier	level		3030191	1					
ANR	3030822	IdentifierDeclStatement	"int ref , best_ref , ref_score , ref_mx , ref_my ;"	85:4:2265:2309	3030191	49	True				
ANR	3030823	IdentifierDecl	ref		3030191	0					
ANR	3030824	IdentifierDeclType	int		3030191	0					
ANR	3030825	Identifier	ref		3030191	1					
ANR	3030826	IdentifierDecl	best_ref		3030191	1					
ANR	3030827	IdentifierDeclType	int		3030191	0					
ANR	3030828	Identifier	best_ref		3030191	1					
ANR	3030829	IdentifierDecl	ref_score		3030191	2					
ANR	3030830	IdentifierDeclType	int		3030191	0					
ANR	3030831	Identifier	ref_score		3030191	1					
ANR	3030832	IdentifierDecl	ref_mx		3030191	3					
ANR	3030833	IdentifierDeclType	int		3030191	0					
ANR	3030834	Identifier	ref_mx		3030191	1					
ANR	3030835	IdentifierDecl	ref_my		3030191	4					
ANR	3030836	IdentifierDeclType	int		3030191	0					
ANR	3030837	Identifier	ref_my		3030191	1					
ANR	3030838	ExpressionStatement	av_assert0 ( sizeof ( s -> block_state ) >= 256 )	89:4:2318:2359	3030191	50	True				
ANR	3030839	CallExpression	av_assert0 ( sizeof ( s -> block_state ) >= 256 )		3030191	0					
ANR	3030840	Callee	av_assert0		3030191	0					
ANR	3030841	Identifier	av_assert0		3030191	0					
ANR	3030842	ArgumentList	sizeof ( s -> block_state ) >= 256		3030191	1					
ANR	3030843	Argument	sizeof ( s -> block_state ) >= 256		3030191	0					
ANR	3030844	RelationalExpression	sizeof ( s -> block_state ) >= 256		3030191	0		>=			
ANR	3030845	SizeofExpression	sizeof ( s -> block_state )		3030191	0					
ANR	3030846	Sizeof	sizeof		3030191	0					
ANR	3030847	PtrMemberAccess	s -> block_state		3030191	1					
ANR	3030848	Identifier	s		3030191	0					
ANR	3030849	Identifier	block_state		3030191	1					
ANR	3030850	PrimaryExpression	256		3030191	1					
ANR	3030851	IfStatement	if ( s -> keyframe )		3030191	51					
ANR	3030852	Condition	s -> keyframe	91:7:2369:2379	3030191	0	True				
ANR	3030853	PtrMemberAccess	s -> keyframe		3030191	0					
ANR	3030854	Identifier	s		3030191	0					
ANR	3030855	Identifier	keyframe		3030191	1					
ANR	3030856	CompoundStatement		91:19:2313:2313	3030191	1					
ANR	3030857	ExpressionStatement	"set_blocks ( s , level , x , y , pl , pcb , pcr , 0 , 0 , 0 , BLOCK_INTRA )"	93:8:2392:2454	3030191	0	True				
ANR	3030858	CallExpression	"set_blocks ( s , level , x , y , pl , pcb , pcr , 0 , 0 , 0 , BLOCK_INTRA )"		3030191	0					
ANR	3030859	Callee	set_blocks		3030191	0					
ANR	3030860	Identifier	set_blocks		3030191	0					
ANR	3030861	ArgumentList	s		3030191	1					
ANR	3030862	Argument	s		3030191	0					
ANR	3030863	Identifier	s		3030191	0					
ANR	3030864	Argument	level		3030191	1					
ANR	3030865	Identifier	level		3030191	0					
ANR	3030866	Argument	x		3030191	2					
ANR	3030867	Identifier	x		3030191	0					
ANR	3030868	Argument	y		3030191	3					
ANR	3030869	Identifier	y		3030191	0					
ANR	3030870	Argument	pl		3030191	4					
ANR	3030871	Identifier	pl		3030191	0					
ANR	3030872	Argument	pcb		3030191	5					
ANR	3030873	Identifier	pcb		3030191	0					
ANR	3030874	Argument	pcr		3030191	6					
ANR	3030875	Identifier	pcr		3030191	0					
ANR	3030876	Argument	0		3030191	7					
ANR	3030877	PrimaryExpression	0		3030191	0					
ANR	3030878	Argument	0		3030191	8					
ANR	3030879	PrimaryExpression	0		3030191	0					
ANR	3030880	Argument	0		3030191	9					
ANR	3030881	PrimaryExpression	0		3030191	0					
ANR	3030882	Argument	BLOCK_INTRA		3030191	10					
ANR	3030883	Identifier	BLOCK_INTRA		3030191	0					
ANR	3030884	ReturnStatement	return 0 ;	95:8:2465:2473	3030191	1	True				
ANR	3030885	PrimaryExpression	0		3030191	0					
ANR	3030886	ExpressionStatement	P_LEFT [ 0 ] = left -> mx	105:4:2523:2542	3030191	52	True				
ANR	3030887	AssignmentExpression	P_LEFT [ 0 ] = left -> mx		3030191	0		=			
ANR	3030888	ArrayIndexing	P_LEFT [ 0 ]		3030191	0					
ANR	3030889	Identifier	P_LEFT		3030191	0					
ANR	3030890	PrimaryExpression	0		3030191	1					
ANR	3030891	PtrMemberAccess	left -> mx		3030191	1					
ANR	3030892	Identifier	left		3030191	0					
ANR	3030893	Identifier	mx		3030191	1					
ANR	3030894	ExpressionStatement	P_LEFT [ 1 ] = left -> my	107:4:2549:2568	3030191	53	True				
ANR	3030895	AssignmentExpression	P_LEFT [ 1 ] = left -> my		3030191	0		=			
ANR	3030896	ArrayIndexing	P_LEFT [ 1 ]		3030191	0					
ANR	3030897	Identifier	P_LEFT		3030191	0					
ANR	3030898	PrimaryExpression	1		3030191	1					
ANR	3030899	PtrMemberAccess	left -> my		3030191	1					
ANR	3030900	Identifier	left		3030191	0					
ANR	3030901	Identifier	my		3030191	1					
ANR	3030902	ExpressionStatement	P_TOP [ 0 ] = top -> mx	109:4:2575:2593	3030191	54	True				
ANR	3030903	AssignmentExpression	P_TOP [ 0 ] = top -> mx		3030191	0		=			
ANR	3030904	ArrayIndexing	P_TOP [ 0 ]		3030191	0					
ANR	3030905	Identifier	P_TOP		3030191	0					
ANR	3030906	PrimaryExpression	0		3030191	1					
ANR	3030907	PtrMemberAccess	top -> mx		3030191	1					
ANR	3030908	Identifier	top		3030191	0					
ANR	3030909	Identifier	mx		3030191	1					
ANR	3030910	ExpressionStatement	P_TOP [ 1 ] = top -> my	111:4:2600:2618	3030191	55	True				
ANR	3030911	AssignmentExpression	P_TOP [ 1 ] = top -> my		3030191	0		=			
ANR	3030912	ArrayIndexing	P_TOP [ 1 ]		3030191	0					
ANR	3030913	Identifier	P_TOP		3030191	0					
ANR	3030914	PrimaryExpression	1		3030191	1					
ANR	3030915	PtrMemberAccess	top -> my		3030191	1					
ANR	3030916	Identifier	top		3030191	0					
ANR	3030917	Identifier	my		3030191	1					
ANR	3030918	ExpressionStatement	P_TOPRIGHT [ 0 ] = tr -> mx	113:4:2625:2646	3030191	56	True				
ANR	3030919	AssignmentExpression	P_TOPRIGHT [ 0 ] = tr -> mx		3030191	0		=			
ANR	3030920	ArrayIndexing	P_TOPRIGHT [ 0 ]		3030191	0					
ANR	3030921	Identifier	P_TOPRIGHT		3030191	0					
ANR	3030922	PrimaryExpression	0		3030191	1					
ANR	3030923	PtrMemberAccess	tr -> mx		3030191	1					
ANR	3030924	Identifier	tr		3030191	0					
ANR	3030925	Identifier	mx		3030191	1					
ANR	3030926	ExpressionStatement	P_TOPRIGHT [ 1 ] = tr -> my	115:4:2653:2674	3030191	57	True				
ANR	3030927	AssignmentExpression	P_TOPRIGHT [ 1 ] = tr -> my		3030191	0		=			
ANR	3030928	ArrayIndexing	P_TOPRIGHT [ 1 ]		3030191	0					
ANR	3030929	Identifier	P_TOPRIGHT		3030191	0					
ANR	3030930	PrimaryExpression	1		3030191	1					
ANR	3030931	PtrMemberAccess	tr -> my		3030191	1					
ANR	3030932	Identifier	tr		3030191	0					
ANR	3030933	Identifier	my		3030191	1					
ANR	3030934	ExpressionStatement	last_mv [ 0 ] [ 0 ] = s -> block [ index ] . mx	119:4:2683:2716	3030191	58	True				
ANR	3030935	AssignmentExpression	last_mv [ 0 ] [ 0 ] = s -> block [ index ] . mx		3030191	0		=			
ANR	3030936	ArrayIndexing	last_mv [ 0 ] [ 0 ]		3030191	0					
ANR	3030937	ArrayIndexing	last_mv [ 0 ]		3030191	0					
ANR	3030938	Identifier	last_mv		3030191	0					
ANR	3030939	PrimaryExpression	0		3030191	1					
ANR	3030940	PrimaryExpression	0		3030191	1					
ANR	3030941	MemberAccess	s -> block [ index ] . mx		3030191	1					
ANR	3030942	ArrayIndexing	s -> block [ index ]		3030191	0					
ANR	3030943	PtrMemberAccess	s -> block		3030191	0					
ANR	3030944	Identifier	s		3030191	0					
ANR	3030945	Identifier	block		3030191	1					
ANR	3030946	Identifier	index		3030191	1					
ANR	3030947	Identifier	mx		3030191	1					
ANR	3030948	ExpressionStatement	last_mv [ 0 ] [ 1 ] = s -> block [ index ] . my	121:4:2723:2756	3030191	59	True				
ANR	3030949	AssignmentExpression	last_mv [ 0 ] [ 1 ] = s -> block [ index ] . my		3030191	0		=			
ANR	3030950	ArrayIndexing	last_mv [ 0 ] [ 1 ]		3030191	0					
ANR	3030951	ArrayIndexing	last_mv [ 0 ]		3030191	0					
ANR	3030952	Identifier	last_mv		3030191	0					
ANR	3030953	PrimaryExpression	0		3030191	1					
ANR	3030954	PrimaryExpression	1		3030191	1					
ANR	3030955	MemberAccess	s -> block [ index ] . my		3030191	1					
ANR	3030956	ArrayIndexing	s -> block [ index ]		3030191	0					
ANR	3030957	PtrMemberAccess	s -> block		3030191	0					
ANR	3030958	Identifier	s		3030191	0					
ANR	3030959	Identifier	block		3030191	1					
ANR	3030960	Identifier	index		3030191	1					
ANR	3030961	Identifier	my		3030191	1					
ANR	3030962	ExpressionStatement	last_mv [ 1 ] [ 0 ] = right -> mx	123:4:2763:2787	3030191	60	True				
ANR	3030963	AssignmentExpression	last_mv [ 1 ] [ 0 ] = right -> mx		3030191	0		=			
ANR	3030964	ArrayIndexing	last_mv [ 1 ] [ 0 ]		3030191	0					
ANR	3030965	ArrayIndexing	last_mv [ 1 ]		3030191	0					
ANR	3030966	Identifier	last_mv		3030191	0					
ANR	3030967	PrimaryExpression	1		3030191	1					
ANR	3030968	PrimaryExpression	0		3030191	1					
ANR	3030969	PtrMemberAccess	right -> mx		3030191	1					
ANR	3030970	Identifier	right		3030191	0					
ANR	3030971	Identifier	mx		3030191	1					
ANR	3030972	ExpressionStatement	last_mv [ 1 ] [ 1 ] = right -> my	125:4:2794:2818	3030191	61	True				
ANR	3030973	AssignmentExpression	last_mv [ 1 ] [ 1 ] = right -> my		3030191	0		=			
ANR	3030974	ArrayIndexing	last_mv [ 1 ] [ 1 ]		3030191	0					
ANR	3030975	ArrayIndexing	last_mv [ 1 ]		3030191	0					
ANR	3030976	Identifier	last_mv		3030191	0					
ANR	3030977	PrimaryExpression	1		3030191	1					
ANR	3030978	PrimaryExpression	1		3030191	1					
ANR	3030979	PtrMemberAccess	right -> my		3030191	1					
ANR	3030980	Identifier	right		3030191	0					
ANR	3030981	Identifier	my		3030191	1					
ANR	3030982	ExpressionStatement	last_mv [ 2 ] [ 0 ] = bottom -> mx	127:4:2825:2850	3030191	62	True				
ANR	3030983	AssignmentExpression	last_mv [ 2 ] [ 0 ] = bottom -> mx		3030191	0		=			
ANR	3030984	ArrayIndexing	last_mv [ 2 ] [ 0 ]		3030191	0					
ANR	3030985	ArrayIndexing	last_mv [ 2 ]		3030191	0					
ANR	3030986	Identifier	last_mv		3030191	0					
ANR	3030987	PrimaryExpression	2		3030191	1					
ANR	3030988	PrimaryExpression	0		3030191	1					
ANR	3030989	PtrMemberAccess	bottom -> mx		3030191	1					
ANR	3030990	Identifier	bottom		3030191	0					
ANR	3030991	Identifier	mx		3030191	1					
ANR	3030992	ExpressionStatement	last_mv [ 2 ] [ 1 ] = bottom -> my	129:4:2857:2882	3030191	63	True				
ANR	3030993	AssignmentExpression	last_mv [ 2 ] [ 1 ] = bottom -> my		3030191	0		=			
ANR	3030994	ArrayIndexing	last_mv [ 2 ] [ 1 ]		3030191	0					
ANR	3030995	ArrayIndexing	last_mv [ 2 ]		3030191	0					
ANR	3030996	Identifier	last_mv		3030191	0					
ANR	3030997	PrimaryExpression	2		3030191	1					
ANR	3030998	PrimaryExpression	1		3030191	1					
ANR	3030999	PtrMemberAccess	bottom -> my		3030191	1					
ANR	3031000	Identifier	bottom		3030191	0					
ANR	3031001	Identifier	my		3030191	1					
ANR	3031002	ExpressionStatement	s -> m . mb_stride = 2	133:4:2891:2907	3030191	64	True				
ANR	3031003	AssignmentExpression	s -> m . mb_stride = 2		3030191	0		=			
ANR	3031004	MemberAccess	s -> m . mb_stride		3030191	0					
ANR	3031005	PtrMemberAccess	s -> m		3030191	0					
ANR	3031006	Identifier	s		3030191	0					
ANR	3031007	Identifier	m		3030191	1					
ANR	3031008	Identifier	mb_stride		3030191	1					
ANR	3031009	PrimaryExpression	2		3030191	1					
ANR	3031010	ExpressionStatement	s -> m . mb_x = s -> m . mb_y = 0	135:4:2914:2942	3030191	65	True				
ANR	3031011	AssignmentExpression	s -> m . mb_x = s -> m . mb_y = 0		3030191	0		=			
ANR	3031012	MemberAccess	s -> m . mb_x		3030191	0					
ANR	3031013	PtrMemberAccess	s -> m		3030191	0					
ANR	3031014	Identifier	s		3030191	0					
ANR	3031015	Identifier	m		3030191	1					
ANR	3031016	Identifier	mb_x		3030191	1					
ANR	3031017	AssignmentExpression	s -> m . mb_y = 0		3030191	1		=			
ANR	3031018	MemberAccess	s -> m . mb_y		3030191	0					
ANR	3031019	PtrMemberAccess	s -> m		3030191	0					
ANR	3031020	Identifier	s		3030191	0					
ANR	3031021	Identifier	m		3030191	1					
ANR	3031022	Identifier	mb_y		3030191	1					
ANR	3031023	PrimaryExpression	0		3030191	1					
ANR	3031024	ExpressionStatement	c -> skip = 0	139:4:2949:2959	3030191	66	True				
ANR	3031025	AssignmentExpression	c -> skip = 0		3030191	0		=			
ANR	3031026	PtrMemberAccess	c -> skip		3030191	0					
ANR	3031027	Identifier	c		3030191	0					
ANR	3031028	Identifier	skip		3030191	1					
ANR	3031029	PrimaryExpression	0		3030191	1					
ANR	3031030	ExpressionStatement	av_assert1 ( c -> stride == stride )	143:4:2968:3003	3030191	67	True				
ANR	3031031	CallExpression	av_assert1 ( c -> stride == stride )		3030191	0					
ANR	3031032	Callee	av_assert1		3030191	0					
ANR	3031033	Identifier	av_assert1		3030191	0					
ANR	3031034	ArgumentList	c -> stride == stride		3030191	1					
ANR	3031035	Argument	c -> stride == stride		3030191	0					
ANR	3031036	EqualityExpression	c -> stride == stride		3030191	0		==			
ANR	3031037	PtrMemberAccess	c -> stride		3030191	0					
ANR	3031038	Identifier	c		3030191	0					
ANR	3031039	Identifier	stride		3030191	1					
ANR	3031040	Identifier	stride		3030191	1					
ANR	3031041	ExpressionStatement	av_assert1 ( c -> uvstride == uvstride )	145:4:3010:3045	3030191	68	True				
ANR	3031042	CallExpression	av_assert1 ( c -> uvstride == uvstride )		3030191	0					
ANR	3031043	Callee	av_assert1		3030191	0					
ANR	3031044	Identifier	av_assert1		3030191	0					
ANR	3031045	ArgumentList	c -> uvstride == uvstride		3030191	1					
ANR	3031046	Argument	c -> uvstride == uvstride		3030191	0					
ANR	3031047	EqualityExpression	c -> uvstride == uvstride		3030191	0		==			
ANR	3031048	PtrMemberAccess	c -> uvstride		3030191	0					
ANR	3031049	Identifier	c		3030191	0					
ANR	3031050	Identifier	uvstride		3030191	1					
ANR	3031051	Identifier	uvstride		3030191	1					
ANR	3031052	ExpressionStatement	"c -> penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_cmp )"	149:4:3054:3136	3030191	69	True				
ANR	3031053	AssignmentExpression	"c -> penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_cmp )"		3030191	0		=			
ANR	3031054	PtrMemberAccess	c -> penalty_factor		3030191	0					
ANR	3031055	Identifier	c		3030191	0					
ANR	3031056	Identifier	penalty_factor		3030191	1					
ANR	3031057	CallExpression	"get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_cmp )"		3030191	1					
ANR	3031058	Callee	get_penalty_factor		3030191	0					
ANR	3031059	Identifier	get_penalty_factor		3030191	0					
ANR	3031060	ArgumentList	s -> lambda		3030191	1					
ANR	3031061	Argument	s -> lambda		3030191	0					
ANR	3031062	PtrMemberAccess	s -> lambda		3030191	0					
ANR	3031063	Identifier	s		3030191	0					
ANR	3031064	Identifier	lambda		3030191	1					
ANR	3031065	Argument	s -> lambda2		3030191	1					
ANR	3031066	PtrMemberAccess	s -> lambda2		3030191	0					
ANR	3031067	Identifier	s		3030191	0					
ANR	3031068	Identifier	lambda2		3030191	1					
ANR	3031069	Argument	c -> avctx -> me_cmp		3030191	2					
ANR	3031070	PtrMemberAccess	c -> avctx -> me_cmp		3030191	0					
ANR	3031071	PtrMemberAccess	c -> avctx		3030191	0					
ANR	3031072	Identifier	c		3030191	0					
ANR	3031073	Identifier	avctx		3030191	1					
ANR	3031074	Identifier	me_cmp		3030191	1					
ANR	3031075	ExpressionStatement	"c -> sub_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_sub_cmp )"	151:4:3143:3229	3030191	70	True				
ANR	3031076	AssignmentExpression	"c -> sub_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_sub_cmp )"		3030191	0		=			
ANR	3031077	PtrMemberAccess	c -> sub_penalty_factor		3030191	0					
ANR	3031078	Identifier	c		3030191	0					
ANR	3031079	Identifier	sub_penalty_factor		3030191	1					
ANR	3031080	CallExpression	"get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_sub_cmp )"		3030191	1					
ANR	3031081	Callee	get_penalty_factor		3030191	0					
ANR	3031082	Identifier	get_penalty_factor		3030191	0					
ANR	3031083	ArgumentList	s -> lambda		3030191	1					
ANR	3031084	Argument	s -> lambda		3030191	0					
ANR	3031085	PtrMemberAccess	s -> lambda		3030191	0					
ANR	3031086	Identifier	s		3030191	0					
ANR	3031087	Identifier	lambda		3030191	1					
ANR	3031088	Argument	s -> lambda2		3030191	1					
ANR	3031089	PtrMemberAccess	s -> lambda2		3030191	0					
ANR	3031090	Identifier	s		3030191	0					
ANR	3031091	Identifier	lambda2		3030191	1					
ANR	3031092	Argument	c -> avctx -> me_sub_cmp		3030191	2					
ANR	3031093	PtrMemberAccess	c -> avctx -> me_sub_cmp		3030191	0					
ANR	3031094	PtrMemberAccess	c -> avctx		3030191	0					
ANR	3031095	Identifier	c		3030191	0					
ANR	3031096	Identifier	avctx		3030191	1					
ANR	3031097	Identifier	me_sub_cmp		3030191	1					
ANR	3031098	ExpressionStatement	"c -> mb_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> mb_cmp )"	153:4:3236:3318	3030191	71	True				
ANR	3031099	AssignmentExpression	"c -> mb_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> mb_cmp )"		3030191	0		=			
ANR	3031100	PtrMemberAccess	c -> mb_penalty_factor		3030191	0					
ANR	3031101	Identifier	c		3030191	0					
ANR	3031102	Identifier	mb_penalty_factor		3030191	1					
ANR	3031103	CallExpression	"get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> mb_cmp )"		3030191	1					
ANR	3031104	Callee	get_penalty_factor		3030191	0					
ANR	3031105	Identifier	get_penalty_factor		3030191	0					
ANR	3031106	ArgumentList	s -> lambda		3030191	1					
ANR	3031107	Argument	s -> lambda		3030191	0					
ANR	3031108	PtrMemberAccess	s -> lambda		3030191	0					
ANR	3031109	Identifier	s		3030191	0					
ANR	3031110	Identifier	lambda		3030191	1					
ANR	3031111	Argument	s -> lambda2		3030191	1					
ANR	3031112	PtrMemberAccess	s -> lambda2		3030191	0					
ANR	3031113	Identifier	s		3030191	0					
ANR	3031114	Identifier	lambda2		3030191	1					
ANR	3031115	Argument	c -> avctx -> mb_cmp		3030191	2					
ANR	3031116	PtrMemberAccess	c -> avctx -> mb_cmp		3030191	0					
ANR	3031117	PtrMemberAccess	c -> avctx		3030191	0					
ANR	3031118	Identifier	c		3030191	0					
ANR	3031119	Identifier	avctx		3030191	1					
ANR	3031120	Identifier	mb_cmp		3030191	1					
ANR	3031121	ExpressionStatement	c -> current_mv_penalty = c -> mv_penalty [ s -> m . f_code = 1 ] + MAX_MV	155:4:3325:3385	3030191	72	True				
ANR	3031122	AssignmentExpression	c -> current_mv_penalty = c -> mv_penalty [ s -> m . f_code = 1 ] + MAX_MV		3030191	0		=			
ANR	3031123	PtrMemberAccess	c -> current_mv_penalty		3030191	0					
ANR	3031124	Identifier	c		3030191	0					
ANR	3031125	Identifier	current_mv_penalty		3030191	1					
ANR	3031126	AdditiveExpression	c -> mv_penalty [ s -> m . f_code = 1 ] + MAX_MV		3030191	1		+			
ANR	3031127	ArrayIndexing	c -> mv_penalty [ s -> m . f_code = 1 ]		3030191	0					
ANR	3031128	PtrMemberAccess	c -> mv_penalty		3030191	0					
ANR	3031129	Identifier	c		3030191	0					
ANR	3031130	Identifier	mv_penalty		3030191	1					
ANR	3031131	AssignmentExpression	s -> m . f_code = 1		3030191	1		=			
ANR	3031132	MemberAccess	s -> m . f_code		3030191	0					
ANR	3031133	PtrMemberAccess	s -> m		3030191	0					
ANR	3031134	Identifier	s		3030191	0					
ANR	3031135	Identifier	m		3030191	1					
ANR	3031136	Identifier	f_code		3030191	1					
ANR	3031137	PrimaryExpression	1		3030191	1					
ANR	3031138	Identifier	MAX_MV		3030191	1					
ANR	3031139	ExpressionStatement	c -> xmin = - x * block_w - 16 + 3	159:4:3394:3422	3030191	73	True				
ANR	3031140	AssignmentExpression	c -> xmin = - x * block_w - 16 + 3		3030191	0		=			
ANR	3031141	PtrMemberAccess	c -> xmin		3030191	0					
ANR	3031142	Identifier	c		3030191	0					
ANR	3031143	Identifier	xmin		3030191	1					
ANR	3031144	AdditiveExpression	- x * block_w - 16 + 3		3030191	1		-			
ANR	3031145	MultiplicativeExpression	- x * block_w		3030191	0		*			
ANR	3031146	UnaryOperationExpression	- x		3030191	0					
ANR	3031147	UnaryOperator	-		3030191	0					
ANR	3031148	Identifier	x		3030191	1					
ANR	3031149	Identifier	block_w		3030191	1					
ANR	3031150	AdditiveExpression	16 + 3		3030191	1		+			
ANR	3031151	PrimaryExpression	16		3030191	0					
ANR	3031152	PrimaryExpression	3		3030191	1					
ANR	3031153	ExpressionStatement	c -> ymin = - y * block_w - 16 + 3	161:4:3429:3457	3030191	74	True				
ANR	3031154	AssignmentExpression	c -> ymin = - y * block_w - 16 + 3		3030191	0		=			
ANR	3031155	PtrMemberAccess	c -> ymin		3030191	0					
ANR	3031156	Identifier	c		3030191	0					
ANR	3031157	Identifier	ymin		3030191	1					
ANR	3031158	AdditiveExpression	- y * block_w - 16 + 3		3030191	1		-			
ANR	3031159	MultiplicativeExpression	- y * block_w		3030191	0		*			
ANR	3031160	UnaryOperationExpression	- y		3030191	0					
ANR	3031161	UnaryOperator	-		3030191	0					
ANR	3031162	Identifier	y		3030191	1					
ANR	3031163	Identifier	block_w		3030191	1					
ANR	3031164	AdditiveExpression	16 + 3		3030191	1		+			
ANR	3031165	PrimaryExpression	16		3030191	0					
ANR	3031166	PrimaryExpression	3		3030191	1					
ANR	3031167	ExpressionStatement	c -> xmax = - ( x + 1 ) * block_w + ( w << ( LOG2_MB_SIZE - s -> block_max_depth ) ) + 16 - 3	163:4:3464:3539	3030191	75	True				
ANR	3031168	AssignmentExpression	c -> xmax = - ( x + 1 ) * block_w + ( w << ( LOG2_MB_SIZE - s -> block_max_depth ) ) + 16 - 3		3030191	0		=			
ANR	3031169	PtrMemberAccess	c -> xmax		3030191	0					
ANR	3031170	Identifier	c		3030191	0					
ANR	3031171	Identifier	xmax		3030191	1					
ANR	3031172	AdditiveExpression	- ( x + 1 ) * block_w + ( w << ( LOG2_MB_SIZE - s -> block_max_depth ) ) + 16 - 3		3030191	1		+			
ANR	3031173	MultiplicativeExpression	- ( x + 1 ) * block_w		3030191	0		*			
ANR	3031174	UnaryOperationExpression	- ( x + 1 )		3030191	0					
ANR	3031175	UnaryOperator	-		3030191	0					
ANR	3031176	AdditiveExpression	x + 1		3030191	1		+			
ANR	3031177	Identifier	x		3030191	0					
ANR	3031178	PrimaryExpression	1		3030191	1					
ANR	3031179	Identifier	block_w		3030191	1					
ANR	3031180	AdditiveExpression	( w << ( LOG2_MB_SIZE - s -> block_max_depth ) ) + 16 - 3		3030191	1		+			
ANR	3031181	ShiftExpression	w << ( LOG2_MB_SIZE - s -> block_max_depth )		3030191	0		<<			
ANR	3031182	Identifier	w		3030191	0					
ANR	3031183	AdditiveExpression	LOG2_MB_SIZE - s -> block_max_depth		3030191	1		-			
ANR	3031184	Identifier	LOG2_MB_SIZE		3030191	0					
ANR	3031185	PtrMemberAccess	s -> block_max_depth		3030191	1					
ANR	3031186	Identifier	s		3030191	0					
ANR	3031187	Identifier	block_max_depth		3030191	1					
ANR	3031188	AdditiveExpression	16 - 3		3030191	1		-			
ANR	3031189	PrimaryExpression	16		3030191	0					
ANR	3031190	PrimaryExpression	3		3030191	1					
ANR	3031191	ExpressionStatement	c -> ymax = - ( y + 1 ) * block_w + ( h << ( LOG2_MB_SIZE - s -> block_max_depth ) ) + 16 - 3	165:4:3546:3621	3030191	76	True				
ANR	3031192	AssignmentExpression	c -> ymax = - ( y + 1 ) * block_w + ( h << ( LOG2_MB_SIZE - s -> block_max_depth ) ) + 16 - 3		3030191	0		=			
ANR	3031193	PtrMemberAccess	c -> ymax		3030191	0					
ANR	3031194	Identifier	c		3030191	0					
ANR	3031195	Identifier	ymax		3030191	1					
ANR	3031196	AdditiveExpression	- ( y + 1 ) * block_w + ( h << ( LOG2_MB_SIZE - s -> block_max_depth ) ) + 16 - 3		3030191	1		+			
ANR	3031197	MultiplicativeExpression	- ( y + 1 ) * block_w		3030191	0		*			
ANR	3031198	UnaryOperationExpression	- ( y + 1 )		3030191	0					
ANR	3031199	UnaryOperator	-		3030191	0					
ANR	3031200	AdditiveExpression	y + 1		3030191	1		+			
ANR	3031201	Identifier	y		3030191	0					
ANR	3031202	PrimaryExpression	1		3030191	1					
ANR	3031203	Identifier	block_w		3030191	1					
ANR	3031204	AdditiveExpression	( h << ( LOG2_MB_SIZE - s -> block_max_depth ) ) + 16 - 3		3030191	1		+			
ANR	3031205	ShiftExpression	h << ( LOG2_MB_SIZE - s -> block_max_depth )		3030191	0		<<			
ANR	3031206	Identifier	h		3030191	0					
ANR	3031207	AdditiveExpression	LOG2_MB_SIZE - s -> block_max_depth		3030191	1		-			
ANR	3031208	Identifier	LOG2_MB_SIZE		3030191	0					
ANR	3031209	PtrMemberAccess	s -> block_max_depth		3030191	1					
ANR	3031210	Identifier	s		3030191	0					
ANR	3031211	Identifier	block_max_depth		3030191	1					
ANR	3031212	AdditiveExpression	16 - 3		3030191	1		-			
ANR	3031213	PrimaryExpression	16		3030191	0					
ANR	3031214	PrimaryExpression	3		3030191	1					
ANR	3031215	IfStatement	if ( P_LEFT [ 0 ] > ( c -> xmax << shift ) )		3030191	77					
ANR	3031216	Condition	P_LEFT [ 0 ] > ( c -> xmax << shift )	169:7:3633:3664	3030191	0	True				
ANR	3031217	RelationalExpression	P_LEFT [ 0 ] > ( c -> xmax << shift )		3030191	0		>			
ANR	3031218	ArrayIndexing	P_LEFT [ 0 ]		3030191	0					
ANR	3031219	Identifier	P_LEFT		3030191	0					
ANR	3031220	PrimaryExpression	0		3030191	1					
ANR	3031221	ShiftExpression	c -> xmax << shift		3030191	1		<<			
ANR	3031222	PtrMemberAccess	c -> xmax		3030191	0					
ANR	3031223	Identifier	c		3030191	0					
ANR	3031224	Identifier	xmax		3030191	1					
ANR	3031225	Identifier	shift		3030191	1					
ANR	3031226	ExpressionStatement	P_LEFT [ 0 ] = ( c -> xmax << shift )	169:41:3667:3698	3030191	1	True				
ANR	3031227	AssignmentExpression	P_LEFT [ 0 ] = ( c -> xmax << shift )		3030191	0		=			
ANR	3031228	ArrayIndexing	P_LEFT [ 0 ]		3030191	0					
ANR	3031229	Identifier	P_LEFT		3030191	0					
ANR	3031230	PrimaryExpression	0		3030191	1					
ANR	3031231	ShiftExpression	c -> xmax << shift		3030191	1		<<			
ANR	3031232	PtrMemberAccess	c -> xmax		3030191	0					
ANR	3031233	Identifier	c		3030191	0					
ANR	3031234	Identifier	xmax		3030191	1					
ANR	3031235	Identifier	shift		3030191	1					
ANR	3031236	IfStatement	if ( P_LEFT [ 1 ] > ( c -> ymax << shift ) )		3030191	78					
ANR	3031237	Condition	P_LEFT [ 1 ] > ( c -> ymax << shift )	171:7:3708:3739	3030191	0	True				
ANR	3031238	RelationalExpression	P_LEFT [ 1 ] > ( c -> ymax << shift )		3030191	0		>			
ANR	3031239	ArrayIndexing	P_LEFT [ 1 ]		3030191	0					
ANR	3031240	Identifier	P_LEFT		3030191	0					
ANR	3031241	PrimaryExpression	1		3030191	1					
ANR	3031242	ShiftExpression	c -> ymax << shift		3030191	1		<<			
ANR	3031243	PtrMemberAccess	c -> ymax		3030191	0					
ANR	3031244	Identifier	c		3030191	0					
ANR	3031245	Identifier	ymax		3030191	1					
ANR	3031246	Identifier	shift		3030191	1					
ANR	3031247	ExpressionStatement	P_LEFT [ 1 ] = ( c -> ymax << shift )	171:41:3742:3773	3030191	1	True				
ANR	3031248	AssignmentExpression	P_LEFT [ 1 ] = ( c -> ymax << shift )		3030191	0		=			
ANR	3031249	ArrayIndexing	P_LEFT [ 1 ]		3030191	0					
ANR	3031250	Identifier	P_LEFT		3030191	0					
ANR	3031251	PrimaryExpression	1		3030191	1					
ANR	3031252	ShiftExpression	c -> ymax << shift		3030191	1		<<			
ANR	3031253	PtrMemberAccess	c -> ymax		3030191	0					
ANR	3031254	Identifier	c		3030191	0					
ANR	3031255	Identifier	ymax		3030191	1					
ANR	3031256	Identifier	shift		3030191	1					
ANR	3031257	IfStatement	if ( P_TOP [ 0 ] > ( c -> xmax << shift ) )		3030191	79					
ANR	3031258	Condition	P_TOP [ 0 ] > ( c -> xmax << shift )	173:7:3783:3814	3030191	0	True				
ANR	3031259	RelationalExpression	P_TOP [ 0 ] > ( c -> xmax << shift )		3030191	0		>			
ANR	3031260	ArrayIndexing	P_TOP [ 0 ]		3030191	0					
ANR	3031261	Identifier	P_TOP		3030191	0					
ANR	3031262	PrimaryExpression	0		3030191	1					
ANR	3031263	ShiftExpression	c -> xmax << shift		3030191	1		<<			
ANR	3031264	PtrMemberAccess	c -> xmax		3030191	0					
ANR	3031265	Identifier	c		3030191	0					
ANR	3031266	Identifier	xmax		3030191	1					
ANR	3031267	Identifier	shift		3030191	1					
ANR	3031268	ExpressionStatement	P_TOP [ 0 ] = ( c -> xmax << shift )	173:41:3817:3848	3030191	1	True				
ANR	3031269	AssignmentExpression	P_TOP [ 0 ] = ( c -> xmax << shift )		3030191	0		=			
ANR	3031270	ArrayIndexing	P_TOP [ 0 ]		3030191	0					
ANR	3031271	Identifier	P_TOP		3030191	0					
ANR	3031272	PrimaryExpression	0		3030191	1					
ANR	3031273	ShiftExpression	c -> xmax << shift		3030191	1		<<			
ANR	3031274	PtrMemberAccess	c -> xmax		3030191	0					
ANR	3031275	Identifier	c		3030191	0					
ANR	3031276	Identifier	xmax		3030191	1					
ANR	3031277	Identifier	shift		3030191	1					
ANR	3031278	IfStatement	if ( P_TOP [ 1 ] > ( c -> ymax << shift ) )		3030191	80					
ANR	3031279	Condition	P_TOP [ 1 ] > ( c -> ymax << shift )	175:7:3858:3889	3030191	0	True				
ANR	3031280	RelationalExpression	P_TOP [ 1 ] > ( c -> ymax << shift )		3030191	0		>			
ANR	3031281	ArrayIndexing	P_TOP [ 1 ]		3030191	0					
ANR	3031282	Identifier	P_TOP		3030191	0					
ANR	3031283	PrimaryExpression	1		3030191	1					
ANR	3031284	ShiftExpression	c -> ymax << shift		3030191	1		<<			
ANR	3031285	PtrMemberAccess	c -> ymax		3030191	0					
ANR	3031286	Identifier	c		3030191	0					
ANR	3031287	Identifier	ymax		3030191	1					
ANR	3031288	Identifier	shift		3030191	1					
ANR	3031289	ExpressionStatement	P_TOP [ 1 ] = ( c -> ymax << shift )	175:41:3892:3923	3030191	1	True				
ANR	3031290	AssignmentExpression	P_TOP [ 1 ] = ( c -> ymax << shift )		3030191	0		=			
ANR	3031291	ArrayIndexing	P_TOP [ 1 ]		3030191	0					
ANR	3031292	Identifier	P_TOP		3030191	0					
ANR	3031293	PrimaryExpression	1		3030191	1					
ANR	3031294	ShiftExpression	c -> ymax << shift		3030191	1		<<			
ANR	3031295	PtrMemberAccess	c -> ymax		3030191	0					
ANR	3031296	Identifier	c		3030191	0					
ANR	3031297	Identifier	ymax		3030191	1					
ANR	3031298	Identifier	shift		3030191	1					
ANR	3031299	IfStatement	if ( P_TOPRIGHT [ 0 ] < ( c -> xmin << shift ) )		3030191	81					
ANR	3031300	Condition	P_TOPRIGHT [ 0 ] < ( c -> xmin << shift )	177:7:3933:3964	3030191	0	True				
ANR	3031301	RelationalExpression	P_TOPRIGHT [ 0 ] < ( c -> xmin << shift )		3030191	0		<			
ANR	3031302	ArrayIndexing	P_TOPRIGHT [ 0 ]		3030191	0					
ANR	3031303	Identifier	P_TOPRIGHT		3030191	0					
ANR	3031304	PrimaryExpression	0		3030191	1					
ANR	3031305	ShiftExpression	c -> xmin << shift		3030191	1		<<			
ANR	3031306	PtrMemberAccess	c -> xmin		3030191	0					
ANR	3031307	Identifier	c		3030191	0					
ANR	3031308	Identifier	xmin		3030191	1					
ANR	3031309	Identifier	shift		3030191	1					
ANR	3031310	ExpressionStatement	P_TOPRIGHT [ 0 ] = ( c -> xmin << shift )	177:41:3967:3998	3030191	1	True				
ANR	3031311	AssignmentExpression	P_TOPRIGHT [ 0 ] = ( c -> xmin << shift )		3030191	0		=			
ANR	3031312	ArrayIndexing	P_TOPRIGHT [ 0 ]		3030191	0					
ANR	3031313	Identifier	P_TOPRIGHT		3030191	0					
ANR	3031314	PrimaryExpression	0		3030191	1					
ANR	3031315	ShiftExpression	c -> xmin << shift		3030191	1		<<			
ANR	3031316	PtrMemberAccess	c -> xmin		3030191	0					
ANR	3031317	Identifier	c		3030191	0					
ANR	3031318	Identifier	xmin		3030191	1					
ANR	3031319	Identifier	shift		3030191	1					
ANR	3031320	IfStatement	if ( P_TOPRIGHT [ 0 ] > ( c -> xmax << shift ) )		3030191	82					
ANR	3031321	Condition	P_TOPRIGHT [ 0 ] > ( c -> xmax << shift )	179:7:4008:4039	3030191	0	True				
ANR	3031322	RelationalExpression	P_TOPRIGHT [ 0 ] > ( c -> xmax << shift )		3030191	0		>			
ANR	3031323	ArrayIndexing	P_TOPRIGHT [ 0 ]		3030191	0					
ANR	3031324	Identifier	P_TOPRIGHT		3030191	0					
ANR	3031325	PrimaryExpression	0		3030191	1					
ANR	3031326	ShiftExpression	c -> xmax << shift		3030191	1		<<			
ANR	3031327	PtrMemberAccess	c -> xmax		3030191	0					
ANR	3031328	Identifier	c		3030191	0					
ANR	3031329	Identifier	xmax		3030191	1					
ANR	3031330	Identifier	shift		3030191	1					
ANR	3031331	ExpressionStatement	P_TOPRIGHT [ 0 ] = ( c -> xmax << shift )	179:41:4042:4073	3030191	1	True				
ANR	3031332	AssignmentExpression	P_TOPRIGHT [ 0 ] = ( c -> xmax << shift )		3030191	0		=			
ANR	3031333	ArrayIndexing	P_TOPRIGHT [ 0 ]		3030191	0					
ANR	3031334	Identifier	P_TOPRIGHT		3030191	0					
ANR	3031335	PrimaryExpression	0		3030191	1					
ANR	3031336	ShiftExpression	c -> xmax << shift		3030191	1		<<			
ANR	3031337	PtrMemberAccess	c -> xmax		3030191	0					
ANR	3031338	Identifier	c		3030191	0					
ANR	3031339	Identifier	xmax		3030191	1					
ANR	3031340	Identifier	shift		3030191	1					
ANR	3031341	IfStatement	if ( P_TOPRIGHT [ 1 ] > ( c -> ymax << shift ) )		3030191	83					
ANR	3031342	Condition	P_TOPRIGHT [ 1 ] > ( c -> ymax << shift )	181:7:4104:4135	3030191	0	True				
ANR	3031343	RelationalExpression	P_TOPRIGHT [ 1 ] > ( c -> ymax << shift )		3030191	0		>			
ANR	3031344	ArrayIndexing	P_TOPRIGHT [ 1 ]		3030191	0					
ANR	3031345	Identifier	P_TOPRIGHT		3030191	0					
ANR	3031346	PrimaryExpression	1		3030191	1					
ANR	3031347	ShiftExpression	c -> ymax << shift		3030191	1		<<			
ANR	3031348	PtrMemberAccess	c -> ymax		3030191	0					
ANR	3031349	Identifier	c		3030191	0					
ANR	3031350	Identifier	ymax		3030191	1					
ANR	3031351	Identifier	shift		3030191	1					
ANR	3031352	ExpressionStatement	P_TOPRIGHT [ 1 ] = ( c -> ymax << shift )	181:41:4138:4169	3030191	1	True				
ANR	3031353	AssignmentExpression	P_TOPRIGHT [ 1 ] = ( c -> ymax << shift )		3030191	0		=			
ANR	3031354	ArrayIndexing	P_TOPRIGHT [ 1 ]		3030191	0					
ANR	3031355	Identifier	P_TOPRIGHT		3030191	0					
ANR	3031356	PrimaryExpression	1		3030191	1					
ANR	3031357	ShiftExpression	c -> ymax << shift		3030191	1		<<			
ANR	3031358	PtrMemberAccess	c -> ymax		3030191	0					
ANR	3031359	Identifier	c		3030191	0					
ANR	3031360	Identifier	ymax		3030191	1					
ANR	3031361	Identifier	shift		3030191	1					
ANR	3031362	ExpressionStatement	"P_MEDIAN [ 0 ] = mid_pred ( P_LEFT [ 0 ] , P_TOP [ 0 ] , P_TOPRIGHT [ 0 ] )"	185:4:4178:4235	3030191	84	True				
ANR	3031363	AssignmentExpression	"P_MEDIAN [ 0 ] = mid_pred ( P_LEFT [ 0 ] , P_TOP [ 0 ] , P_TOPRIGHT [ 0 ] )"		3030191	0		=			
ANR	3031364	ArrayIndexing	P_MEDIAN [ 0 ]		3030191	0					
ANR	3031365	Identifier	P_MEDIAN		3030191	0					
ANR	3031366	PrimaryExpression	0		3030191	1					
ANR	3031367	CallExpression	"mid_pred ( P_LEFT [ 0 ] , P_TOP [ 0 ] , P_TOPRIGHT [ 0 ] )"		3030191	1					
ANR	3031368	Callee	mid_pred		3030191	0					
ANR	3031369	Identifier	mid_pred		3030191	0					
ANR	3031370	ArgumentList	P_LEFT [ 0 ]		3030191	1					
ANR	3031371	Argument	P_LEFT [ 0 ]		3030191	0					
ANR	3031372	ArrayIndexing	P_LEFT [ 0 ]		3030191	0					
ANR	3031373	Identifier	P_LEFT		3030191	0					
ANR	3031374	PrimaryExpression	0		3030191	1					
ANR	3031375	Argument	P_TOP [ 0 ]		3030191	1					
ANR	3031376	ArrayIndexing	P_TOP [ 0 ]		3030191	0					
ANR	3031377	Identifier	P_TOP		3030191	0					
ANR	3031378	PrimaryExpression	0		3030191	1					
ANR	3031379	Argument	P_TOPRIGHT [ 0 ]		3030191	2					
ANR	3031380	ArrayIndexing	P_TOPRIGHT [ 0 ]		3030191	0					
ANR	3031381	Identifier	P_TOPRIGHT		3030191	0					
ANR	3031382	PrimaryExpression	0		3030191	1					
ANR	3031383	ExpressionStatement	"P_MEDIAN [ 1 ] = mid_pred ( P_LEFT [ 1 ] , P_TOP [ 1 ] , P_TOPRIGHT [ 1 ] )"	187:4:4242:4299	3030191	85	True				
ANR	3031384	AssignmentExpression	"P_MEDIAN [ 1 ] = mid_pred ( P_LEFT [ 1 ] , P_TOP [ 1 ] , P_TOPRIGHT [ 1 ] )"		3030191	0		=			
ANR	3031385	ArrayIndexing	P_MEDIAN [ 1 ]		3030191	0					
ANR	3031386	Identifier	P_MEDIAN		3030191	0					
ANR	3031387	PrimaryExpression	1		3030191	1					
ANR	3031388	CallExpression	"mid_pred ( P_LEFT [ 1 ] , P_TOP [ 1 ] , P_TOPRIGHT [ 1 ] )"		3030191	1					
ANR	3031389	Callee	mid_pred		3030191	0					
ANR	3031390	Identifier	mid_pred		3030191	0					
ANR	3031391	ArgumentList	P_LEFT [ 1 ]		3030191	1					
ANR	3031392	Argument	P_LEFT [ 1 ]		3030191	0					
ANR	3031393	ArrayIndexing	P_LEFT [ 1 ]		3030191	0					
ANR	3031394	Identifier	P_LEFT		3030191	0					
ANR	3031395	PrimaryExpression	1		3030191	1					
ANR	3031396	Argument	P_TOP [ 1 ]		3030191	1					
ANR	3031397	ArrayIndexing	P_TOP [ 1 ]		3030191	0					
ANR	3031398	Identifier	P_TOP		3030191	0					
ANR	3031399	PrimaryExpression	1		3030191	1					
ANR	3031400	Argument	P_TOPRIGHT [ 1 ]		3030191	2					
ANR	3031401	ArrayIndexing	P_TOPRIGHT [ 1 ]		3030191	0					
ANR	3031402	Identifier	P_TOPRIGHT		3030191	0					
ANR	3031403	PrimaryExpression	1		3030191	1					
ANR	3031404	IfStatement	if ( ! y )		3030191	86					
ANR	3031405	Condition	! y	191:8:4312:4313	3030191	0	True				
ANR	3031406	UnaryOperationExpression	! y		3030191	0					
ANR	3031407	UnaryOperator	!		3030191	0					
ANR	3031408	Identifier	y		3030191	1					
ANR	3031409	CompoundStatement		191:12:4248:4248	3030191	1					
ANR	3031410	ExpressionStatement	c -> pred_x = P_LEFT [ 0 ]	193:8:4327:4347	3030191	0	True				
ANR	3031411	AssignmentExpression	c -> pred_x = P_LEFT [ 0 ]		3030191	0		=			
ANR	3031412	PtrMemberAccess	c -> pred_x		3030191	0					
ANR	3031413	Identifier	c		3030191	0					
ANR	3031414	Identifier	pred_x		3030191	1					
ANR	3031415	ArrayIndexing	P_LEFT [ 0 ]		3030191	1					
ANR	3031416	Identifier	P_LEFT		3030191	0					
ANR	3031417	PrimaryExpression	0		3030191	1					
ANR	3031418	ExpressionStatement	c -> pred_y = P_LEFT [ 1 ]	195:8:4358:4378	3030191	1	True				
ANR	3031419	AssignmentExpression	c -> pred_y = P_LEFT [ 1 ]		3030191	0		=			
ANR	3031420	PtrMemberAccess	c -> pred_y		3030191	0					
ANR	3031421	Identifier	c		3030191	0					
ANR	3031422	Identifier	pred_y		3030191	1					
ANR	3031423	ArrayIndexing	P_LEFT [ 1 ]		3030191	1					
ANR	3031424	Identifier	P_LEFT		3030191	0					
ANR	3031425	PrimaryExpression	1		3030191	1					
ANR	3031426	ElseStatement	else		3030191	0					
ANR	3031427	CompoundStatement		197:11:4324:4324	3030191	0					
ANR	3031428	ExpressionStatement	c -> pred_x = P_MEDIAN [ 0 ]	199:8:4403:4426	3030191	0	True				
ANR	3031429	AssignmentExpression	c -> pred_x = P_MEDIAN [ 0 ]		3030191	0		=			
ANR	3031430	PtrMemberAccess	c -> pred_x		3030191	0					
ANR	3031431	Identifier	c		3030191	0					
ANR	3031432	Identifier	pred_x		3030191	1					
ANR	3031433	ArrayIndexing	P_MEDIAN [ 0 ]		3030191	1					
ANR	3031434	Identifier	P_MEDIAN		3030191	0					
ANR	3031435	PrimaryExpression	0		3030191	1					
ANR	3031436	ExpressionStatement	c -> pred_y = P_MEDIAN [ 1 ]	201:8:4437:4460	3030191	1	True				
ANR	3031437	AssignmentExpression	c -> pred_y = P_MEDIAN [ 1 ]		3030191	0		=			
ANR	3031438	PtrMemberAccess	c -> pred_y		3030191	0					
ANR	3031439	Identifier	c		3030191	0					
ANR	3031440	Identifier	pred_y		3030191	1					
ANR	3031441	ArrayIndexing	P_MEDIAN [ 1 ]		3030191	1					
ANR	3031442	Identifier	P_MEDIAN		3030191	0					
ANR	3031443	PrimaryExpression	1		3030191	1					
ANR	3031444	ExpressionStatement	score = INT_MAX	207:4:4476:4490	3030191	87	True				
ANR	3031445	AssignmentExpression	score = INT_MAX		3030191	0		=			
ANR	3031446	Identifier	score		3030191	0					
ANR	3031447	Identifier	INT_MAX		3030191	1					
ANR	3031448	ExpressionStatement	best_ref = 0	209:4:4497:4508	3030191	88	True				
ANR	3031449	AssignmentExpression	best_ref = 0		3030191	0		=			
ANR	3031450	Identifier	best_ref		3030191	0					
ANR	3031451	PrimaryExpression	0		3030191	1					
ANR	3031452	ForStatement	for ( ref = 0 ; ref < s -> ref_frames ; ref ++ )		3030191	89					
ANR	3031453	ForInit	ref = 0 ;	211:8:4519:4524	3030191	0	True				
ANR	3031454	AssignmentExpression	ref = 0		3030191	0		=			
ANR	3031455	Identifier	ref		3030191	0					
ANR	3031456	PrimaryExpression	0		3030191	1					
ANR	3031457	Condition	ref < s -> ref_frames	211:15:4526:4542	3030191	1	True				
ANR	3031458	RelationalExpression	ref < s -> ref_frames		3030191	0		<			
ANR	3031459	Identifier	ref		3030191	0					
ANR	3031460	PtrMemberAccess	s -> ref_frames		3030191	1					
ANR	3031461	Identifier	s		3030191	0					
ANR	3031462	Identifier	ref_frames		3030191	1					
ANR	3031463	PostIncDecOperationExpression	ref ++	211:34:4545:4549	3030191	2	True				
ANR	3031464	Identifier	ref		3030191	0					
ANR	3031465	IncDec	++		3030191	1					
ANR	3031466	CompoundStatement		211:40:4483:4483	3030191	3					
ANR	3031467	ExpressionStatement	"init_ref ( c , current_data , s -> last_picture [ ref ] -> data , NULL , block_w * x , block_w * y , 0 )"	213:8:4562:4646	3030191	0	True				
ANR	3031468	CallExpression	"init_ref ( c , current_data , s -> last_picture [ ref ] -> data , NULL , block_w * x , block_w * y , 0 )"		3030191	0					
ANR	3031469	Callee	init_ref		3030191	0					
ANR	3031470	Identifier	init_ref		3030191	0					
ANR	3031471	ArgumentList	c		3030191	1					
ANR	3031472	Argument	c		3030191	0					
ANR	3031473	Identifier	c		3030191	0					
ANR	3031474	Argument	current_data		3030191	1					
ANR	3031475	Identifier	current_data		3030191	0					
ANR	3031476	Argument	s -> last_picture [ ref ] -> data		3030191	2					
ANR	3031477	PtrMemberAccess	s -> last_picture [ ref ] -> data		3030191	0					
ANR	3031478	ArrayIndexing	s -> last_picture [ ref ]		3030191	0					
ANR	3031479	PtrMemberAccess	s -> last_picture		3030191	0					
ANR	3031480	Identifier	s		3030191	0					
ANR	3031481	Identifier	last_picture		3030191	1					
ANR	3031482	Identifier	ref		3030191	1					
ANR	3031483	Identifier	data		3030191	1					
ANR	3031484	Argument	NULL		3030191	3					
ANR	3031485	Identifier	NULL		3030191	0					
ANR	3031486	Argument	block_w * x		3030191	4					
ANR	3031487	MultiplicativeExpression	block_w * x		3030191	0		*			
ANR	3031488	Identifier	block_w		3030191	0					
ANR	3031489	Identifier	x		3030191	1					
ANR	3031490	Argument	block_w * y		3030191	5					
ANR	3031491	MultiplicativeExpression	block_w * y		3030191	0		*			
ANR	3031492	Identifier	block_w		3030191	0					
ANR	3031493	Identifier	y		3030191	1					
ANR	3031494	Argument	0		3030191	6					
ANR	3031495	PrimaryExpression	0		3030191	0					
ANR	3031496	ExpressionStatement	"ref_score = ff_epzs_motion_search ( & s -> m , & ref_mx , & ref_my , P , 0 , 0 , last_mv , ( 1 << 16 ) >> shift , level - LOG2_MB_SIZE + 4 , block_w )"	217:8:4659:4837	3030191	1	True				
ANR	3031497	AssignmentExpression	"ref_score = ff_epzs_motion_search ( & s -> m , & ref_mx , & ref_my , P , 0 , 0 , last_mv , ( 1 << 16 ) >> shift , level - LOG2_MB_SIZE + 4 , block_w )"		3030191	0		=			
ANR	3031498	Identifier	ref_score		3030191	0					
ANR	3031499	CallExpression	"ff_epzs_motion_search ( & s -> m , & ref_mx , & ref_my , P , 0 , 0 , last_mv , ( 1 << 16 ) >> shift , level - LOG2_MB_SIZE + 4 , block_w )"		3030191	1					
ANR	3031500	Callee	ff_epzs_motion_search		3030191	0					
ANR	3031501	Identifier	ff_epzs_motion_search		3030191	0					
ANR	3031502	ArgumentList	& s -> m		3030191	1					
ANR	3031503	Argument	& s -> m		3030191	0					
ANR	3031504	UnaryOperationExpression	& s -> m		3030191	0					
ANR	3031505	UnaryOperator	&		3030191	0					
ANR	3031506	PtrMemberAccess	s -> m		3030191	1					
ANR	3031507	Identifier	s		3030191	0					
ANR	3031508	Identifier	m		3030191	1					
ANR	3031509	Argument	& ref_mx		3030191	1					
ANR	3031510	UnaryOperationExpression	& ref_mx		3030191	0					
ANR	3031511	UnaryOperator	&		3030191	0					
ANR	3031512	Identifier	ref_mx		3030191	1					
ANR	3031513	Argument	& ref_my		3030191	2					
ANR	3031514	UnaryOperationExpression	& ref_my		3030191	0					
ANR	3031515	UnaryOperator	&		3030191	0					
ANR	3031516	Identifier	ref_my		3030191	1					
ANR	3031517	Argument	P		3030191	3					
ANR	3031518	Identifier	P		3030191	0					
ANR	3031519	Argument	0		3030191	4					
ANR	3031520	PrimaryExpression	0		3030191	0					
ANR	3031521	Argument	0		3030191	5					
ANR	3031522	PrimaryExpression	0		3030191	0					
ANR	3031523	Argument	last_mv		3030191	6					
ANR	3031524	Identifier	last_mv		3030191	0					
ANR	3031525	Argument	( 1 << 16 ) >> shift		3030191	7					
ANR	3031526	ShiftExpression	( 1 << 16 ) >> shift		3030191	0		>>			
ANR	3031527	ShiftExpression	1 << 16		3030191	0		<<			
ANR	3031528	PrimaryExpression	1		3030191	0					
ANR	3031529	PrimaryExpression	16		3030191	1					
ANR	3031530	Identifier	shift		3030191	1					
ANR	3031531	Argument	level - LOG2_MB_SIZE + 4		3030191	8					
ANR	3031532	AdditiveExpression	level - LOG2_MB_SIZE + 4		3030191	0		-			
ANR	3031533	Identifier	level		3030191	0					
ANR	3031534	AdditiveExpression	LOG2_MB_SIZE + 4		3030191	1		+			
ANR	3031535	Identifier	LOG2_MB_SIZE		3030191	0					
ANR	3031536	PrimaryExpression	4		3030191	1					
ANR	3031537	Argument	block_w		3030191	9					
ANR	3031538	Identifier	block_w		3030191	0					
ANR	3031539	ExpressionStatement	av_assert2 ( ref_mx >= c -> xmin )	223:8:4850:4879	3030191	2	True				
ANR	3031540	CallExpression	av_assert2 ( ref_mx >= c -> xmin )		3030191	0					
ANR	3031541	Callee	av_assert2		3030191	0					
ANR	3031542	Identifier	av_assert2		3030191	0					
ANR	3031543	ArgumentList	ref_mx >= c -> xmin		3030191	1					
ANR	3031544	Argument	ref_mx >= c -> xmin		3030191	0					
ANR	3031545	RelationalExpression	ref_mx >= c -> xmin		3030191	0		>=			
ANR	3031546	Identifier	ref_mx		3030191	0					
ANR	3031547	PtrMemberAccess	c -> xmin		3030191	1					
ANR	3031548	Identifier	c		3030191	0					
ANR	3031549	Identifier	xmin		3030191	1					
ANR	3031550	ExpressionStatement	av_assert2 ( ref_mx <= c -> xmax )	225:8:4890:4919	3030191	3	True				
ANR	3031551	CallExpression	av_assert2 ( ref_mx <= c -> xmax )		3030191	0					
ANR	3031552	Callee	av_assert2		3030191	0					
ANR	3031553	Identifier	av_assert2		3030191	0					
ANR	3031554	ArgumentList	ref_mx <= c -> xmax		3030191	1					
ANR	3031555	Argument	ref_mx <= c -> xmax		3030191	0					
ANR	3031556	RelationalExpression	ref_mx <= c -> xmax		3030191	0		<=			
ANR	3031557	Identifier	ref_mx		3030191	0					
ANR	3031558	PtrMemberAccess	c -> xmax		3030191	1					
ANR	3031559	Identifier	c		3030191	0					
ANR	3031560	Identifier	xmax		3030191	1					
ANR	3031561	ExpressionStatement	av_assert2 ( ref_my >= c -> ymin )	227:8:4930:4959	3030191	4	True				
ANR	3031562	CallExpression	av_assert2 ( ref_my >= c -> ymin )		3030191	0					
ANR	3031563	Callee	av_assert2		3030191	0					
ANR	3031564	Identifier	av_assert2		3030191	0					
ANR	3031565	ArgumentList	ref_my >= c -> ymin		3030191	1					
ANR	3031566	Argument	ref_my >= c -> ymin		3030191	0					
ANR	3031567	RelationalExpression	ref_my >= c -> ymin		3030191	0		>=			
ANR	3031568	Identifier	ref_my		3030191	0					
ANR	3031569	PtrMemberAccess	c -> ymin		3030191	1					
ANR	3031570	Identifier	c		3030191	0					
ANR	3031571	Identifier	ymin		3030191	1					
ANR	3031572	ExpressionStatement	av_assert2 ( ref_my <= c -> ymax )	229:8:4970:4999	3030191	5	True				
ANR	3031573	CallExpression	av_assert2 ( ref_my <= c -> ymax )		3030191	0					
ANR	3031574	Callee	av_assert2		3030191	0					
ANR	3031575	Identifier	av_assert2		3030191	0					
ANR	3031576	ArgumentList	ref_my <= c -> ymax		3030191	1					
ANR	3031577	Argument	ref_my <= c -> ymax		3030191	0					
ANR	3031578	RelationalExpression	ref_my <= c -> ymax		3030191	0		<=			
ANR	3031579	Identifier	ref_my		3030191	0					
ANR	3031580	PtrMemberAccess	c -> ymax		3030191	1					
ANR	3031581	Identifier	c		3030191	0					
ANR	3031582	Identifier	ymax		3030191	1					
ANR	3031583	ExpressionStatement	"ref_score = c -> sub_motion_search ( & s -> m , & ref_mx , & ref_my , ref_score , 0 , 0 , level - LOG2_MB_SIZE + 4 , block_w )"	233:8:5012:5116	3030191	6	True				
ANR	3031584	AssignmentExpression	"ref_score = c -> sub_motion_search ( & s -> m , & ref_mx , & ref_my , ref_score , 0 , 0 , level - LOG2_MB_SIZE + 4 , block_w )"		3030191	0		=			
ANR	3031585	Identifier	ref_score		3030191	0					
ANR	3031586	CallExpression	"c -> sub_motion_search ( & s -> m , & ref_mx , & ref_my , ref_score , 0 , 0 , level - LOG2_MB_SIZE + 4 , block_w )"		3030191	1					
ANR	3031587	Callee	c -> sub_motion_search		3030191	0					
ANR	3031588	PtrMemberAccess	c -> sub_motion_search		3030191	0					
ANR	3031589	Identifier	c		3030191	0					
ANR	3031590	Identifier	sub_motion_search		3030191	1					
ANR	3031591	ArgumentList	& s -> m		3030191	1					
ANR	3031592	Argument	& s -> m		3030191	0					
ANR	3031593	UnaryOperationExpression	& s -> m		3030191	0					
ANR	3031594	UnaryOperator	&		3030191	0					
ANR	3031595	PtrMemberAccess	s -> m		3030191	1					
ANR	3031596	Identifier	s		3030191	0					
ANR	3031597	Identifier	m		3030191	1					
ANR	3031598	Argument	& ref_mx		3030191	1					
ANR	3031599	UnaryOperationExpression	& ref_mx		3030191	0					
ANR	3031600	UnaryOperator	&		3030191	0					
ANR	3031601	Identifier	ref_mx		3030191	1					
ANR	3031602	Argument	& ref_my		3030191	2					
ANR	3031603	UnaryOperationExpression	& ref_my		3030191	0					
ANR	3031604	UnaryOperator	&		3030191	0					
ANR	3031605	Identifier	ref_my		3030191	1					
ANR	3031606	Argument	ref_score		3030191	3					
ANR	3031607	Identifier	ref_score		3030191	0					
ANR	3031608	Argument	0		3030191	4					
ANR	3031609	PrimaryExpression	0		3030191	0					
ANR	3031610	Argument	0		3030191	5					
ANR	3031611	PrimaryExpression	0		3030191	0					
ANR	3031612	Argument	level - LOG2_MB_SIZE + 4		3030191	6					
ANR	3031613	AdditiveExpression	level - LOG2_MB_SIZE + 4		3030191	0		-			
ANR	3031614	Identifier	level		3030191	0					
ANR	3031615	AdditiveExpression	LOG2_MB_SIZE + 4		3030191	1		+			
ANR	3031616	Identifier	LOG2_MB_SIZE		3030191	0					
ANR	3031617	PrimaryExpression	4		3030191	1					
ANR	3031618	Argument	block_w		3030191	7					
ANR	3031619	Identifier	block_w		3030191	0					
ANR	3031620	ExpressionStatement	"ref_score = ff_get_mb_score ( & s -> m , ref_mx , ref_my , 0 , 0 , level - LOG2_MB_SIZE + 4 , block_w , 0 )"	235:8:5127:5216	3030191	7	True				
ANR	3031621	AssignmentExpression	"ref_score = ff_get_mb_score ( & s -> m , ref_mx , ref_my , 0 , 0 , level - LOG2_MB_SIZE + 4 , block_w , 0 )"		3030191	0		=			
ANR	3031622	Identifier	ref_score		3030191	0					
ANR	3031623	CallExpression	"ff_get_mb_score ( & s -> m , ref_mx , ref_my , 0 , 0 , level - LOG2_MB_SIZE + 4 , block_w , 0 )"		3030191	1					
ANR	3031624	Callee	ff_get_mb_score		3030191	0					
ANR	3031625	Identifier	ff_get_mb_score		3030191	0					
ANR	3031626	ArgumentList	& s -> m		3030191	1					
ANR	3031627	Argument	& s -> m		3030191	0					
ANR	3031628	UnaryOperationExpression	& s -> m		3030191	0					
ANR	3031629	UnaryOperator	&		3030191	0					
ANR	3031630	PtrMemberAccess	s -> m		3030191	1					
ANR	3031631	Identifier	s		3030191	0					
ANR	3031632	Identifier	m		3030191	1					
ANR	3031633	Argument	ref_mx		3030191	1					
ANR	3031634	Identifier	ref_mx		3030191	0					
ANR	3031635	Argument	ref_my		3030191	2					
ANR	3031636	Identifier	ref_my		3030191	0					
ANR	3031637	Argument	0		3030191	3					
ANR	3031638	PrimaryExpression	0		3030191	0					
ANR	3031639	Argument	0		3030191	4					
ANR	3031640	PrimaryExpression	0		3030191	0					
ANR	3031641	Argument	level - LOG2_MB_SIZE + 4		3030191	5					
ANR	3031642	AdditiveExpression	level - LOG2_MB_SIZE + 4		3030191	0		-			
ANR	3031643	Identifier	level		3030191	0					
ANR	3031644	AdditiveExpression	LOG2_MB_SIZE + 4		3030191	1		+			
ANR	3031645	Identifier	LOG2_MB_SIZE		3030191	0					
ANR	3031646	PrimaryExpression	4		3030191	1					
ANR	3031647	Argument	block_w		3030191	6					
ANR	3031648	Identifier	block_w		3030191	0					
ANR	3031649	Argument	0		3030191	7					
ANR	3031650	PrimaryExpression	0		3030191	0					
ANR	3031651	ExpressionStatement	ref_score += 2 * av_log2 ( 2 * ref ) * c -> penalty_factor	237:8:5227:5273	3030191	8	True				
ANR	3031652	AssignmentExpression	ref_score += 2 * av_log2 ( 2 * ref ) * c -> penalty_factor		3030191	0		+=			
ANR	3031653	Identifier	ref_score		3030191	0					
ANR	3031654	MultiplicativeExpression	2 * av_log2 ( 2 * ref ) * c -> penalty_factor		3030191	1		*			
ANR	3031655	PrimaryExpression	2		3030191	0					
ANR	3031656	MultiplicativeExpression	av_log2 ( 2 * ref ) * c -> penalty_factor		3030191	1		*			
ANR	3031657	CallExpression	av_log2 ( 2 * ref )		3030191	0					
ANR	3031658	Callee	av_log2		3030191	0					
ANR	3031659	Identifier	av_log2		3030191	0					
ANR	3031660	ArgumentList	2 * ref		3030191	1					
ANR	3031661	Argument	2 * ref		3030191	0					
ANR	3031662	MultiplicativeExpression	2 * ref		3030191	0		*			
ANR	3031663	PrimaryExpression	2		3030191	0					
ANR	3031664	Identifier	ref		3030191	1					
ANR	3031665	PtrMemberAccess	c -> penalty_factor		3030191	1					
ANR	3031666	Identifier	c		3030191	0					
ANR	3031667	Identifier	penalty_factor		3030191	1					
ANR	3031668	IfStatement	if ( s -> ref_mvs [ ref ] )		3030191	9					
ANR	3031669	Condition	s -> ref_mvs [ ref ]	239:11:5287:5301	3030191	0	True				
ANR	3031670	ArrayIndexing	s -> ref_mvs [ ref ]		3030191	0					
ANR	3031671	PtrMemberAccess	s -> ref_mvs		3030191	0					
ANR	3031672	Identifier	s		3030191	0					
ANR	3031673	Identifier	ref_mvs		3030191	1					
ANR	3031674	Identifier	ref		3030191	1					
ANR	3031675	CompoundStatement		239:27:5235:5235	3030191	1					
ANR	3031676	ExpressionStatement	s -> ref_mvs [ ref ] [ index ] [ 0 ] = ref_mx	241:12:5318:5351	3030191	0	True				
ANR	3031677	AssignmentExpression	s -> ref_mvs [ ref ] [ index ] [ 0 ] = ref_mx		3030191	0		=			
ANR	3031678	ArrayIndexing	s -> ref_mvs [ ref ] [ index ] [ 0 ]		3030191	0					
ANR	3031679	ArrayIndexing	s -> ref_mvs [ ref ] [ index ]		3030191	0					
ANR	3031680	ArrayIndexing	s -> ref_mvs [ ref ]		3030191	0					
ANR	3031681	PtrMemberAccess	s -> ref_mvs		3030191	0					
ANR	3031682	Identifier	s		3030191	0					
ANR	3031683	Identifier	ref_mvs		3030191	1					
ANR	3031684	Identifier	ref		3030191	1					
ANR	3031685	Identifier	index		3030191	1					
ANR	3031686	PrimaryExpression	0		3030191	1					
ANR	3031687	Identifier	ref_mx		3030191	1					
ANR	3031688	ExpressionStatement	s -> ref_mvs [ ref ] [ index ] [ 1 ] = ref_my	243:12:5366:5399	3030191	1	True				
ANR	3031689	AssignmentExpression	s -> ref_mvs [ ref ] [ index ] [ 1 ] = ref_my		3030191	0		=			
ANR	3031690	ArrayIndexing	s -> ref_mvs [ ref ] [ index ] [ 1 ]		3030191	0					
ANR	3031691	ArrayIndexing	s -> ref_mvs [ ref ] [ index ]		3030191	0					
ANR	3031692	ArrayIndexing	s -> ref_mvs [ ref ]		3030191	0					
ANR	3031693	PtrMemberAccess	s -> ref_mvs		3030191	0					
ANR	3031694	Identifier	s		3030191	0					
ANR	3031695	Identifier	ref_mvs		3030191	1					
ANR	3031696	Identifier	ref		3030191	1					
ANR	3031697	Identifier	index		3030191	1					
ANR	3031698	PrimaryExpression	1		3030191	1					
ANR	3031699	Identifier	ref_my		3030191	1					
ANR	3031700	ExpressionStatement	s -> ref_scores [ ref ] [ index ] = ref_score	245:12:5414:5450	3030191	2	True				
ANR	3031701	AssignmentExpression	s -> ref_scores [ ref ] [ index ] = ref_score		3030191	0		=			
ANR	3031702	ArrayIndexing	s -> ref_scores [ ref ] [ index ]		3030191	0					
ANR	3031703	ArrayIndexing	s -> ref_scores [ ref ]		3030191	0					
ANR	3031704	PtrMemberAccess	s -> ref_scores		3030191	0					
ANR	3031705	Identifier	s		3030191	0					
ANR	3031706	Identifier	ref_scores		3030191	1					
ANR	3031707	Identifier	ref		3030191	1					
ANR	3031708	Identifier	index		3030191	1					
ANR	3031709	Identifier	ref_score		3030191	1					
ANR	3031710	IfStatement	if ( score > ref_score )		3030191	10					
ANR	3031711	Condition	score > ref_score	249:11:5475:5491	3030191	0	True				
ANR	3031712	RelationalExpression	score > ref_score		3030191	0		>			
ANR	3031713	Identifier	score		3030191	0					
ANR	3031714	Identifier	ref_score		3030191	1					
ANR	3031715	CompoundStatement		249:29:5425:5425	3030191	1					
ANR	3031716	ExpressionStatement	score = ref_score	251:12:5508:5524	3030191	0	True				
ANR	3031717	AssignmentExpression	score = ref_score		3030191	0		=			
ANR	3031718	Identifier	score		3030191	0					
ANR	3031719	Identifier	ref_score		3030191	1					
ANR	3031720	ExpressionStatement	best_ref = ref	253:12:5539:5552	3030191	1	True				
ANR	3031721	AssignmentExpression	best_ref = ref		3030191	0		=			
ANR	3031722	Identifier	best_ref		3030191	0					
ANR	3031723	Identifier	ref		3030191	1					
ANR	3031724	ExpressionStatement	mx = ref_mx	255:12:5567:5577	3030191	2	True				
ANR	3031725	AssignmentExpression	mx = ref_mx		3030191	0		=			
ANR	3031726	Identifier	mx		3030191	0					
ANR	3031727	Identifier	ref_mx		3030191	1					
ANR	3031728	ExpressionStatement	my = ref_my	257:12:5592:5602	3030191	3	True				
ANR	3031729	AssignmentExpression	my = ref_my		3030191	0		=			
ANR	3031730	Identifier	my		3030191	0					
ANR	3031731	Identifier	ref_my		3030191	1					
ANR	3031732	ExpressionStatement	base_bits = get_rac_count ( & s -> c ) - 8 * ( s -> c . bytestream - s -> c . bytestream_start )	269:4:5747:5824	3030191	90	True				
ANR	3031733	AssignmentExpression	base_bits = get_rac_count ( & s -> c ) - 8 * ( s -> c . bytestream - s -> c . bytestream_start )		3030191	0		=			
ANR	3031734	Identifier	base_bits		3030191	0					
ANR	3031735	AdditiveExpression	get_rac_count ( & s -> c ) - 8 * ( s -> c . bytestream - s -> c . bytestream_start )		3030191	1		-			
ANR	3031736	CallExpression	get_rac_count ( & s -> c )		3030191	0					
ANR	3031737	Callee	get_rac_count		3030191	0					
ANR	3031738	Identifier	get_rac_count		3030191	0					
ANR	3031739	ArgumentList	& s -> c		3030191	1					
ANR	3031740	Argument	& s -> c		3030191	0					
ANR	3031741	UnaryOperationExpression	& s -> c		3030191	0					
ANR	3031742	UnaryOperator	&		3030191	0					
ANR	3031743	PtrMemberAccess	s -> c		3030191	1					
ANR	3031744	Identifier	s		3030191	0					
ANR	3031745	Identifier	c		3030191	1					
ANR	3031746	MultiplicativeExpression	8 * ( s -> c . bytestream - s -> c . bytestream_start )		3030191	1		*			
ANR	3031747	PrimaryExpression	8		3030191	0					
ANR	3031748	AdditiveExpression	s -> c . bytestream - s -> c . bytestream_start		3030191	1		-			
ANR	3031749	MemberAccess	s -> c . bytestream		3030191	0					
ANR	3031750	PtrMemberAccess	s -> c		3030191	0					
ANR	3031751	Identifier	s		3030191	0					
ANR	3031752	Identifier	c		3030191	1					
ANR	3031753	Identifier	bytestream		3030191	1					
ANR	3031754	MemberAccess	s -> c . bytestream_start		3030191	1					
ANR	3031755	PtrMemberAccess	s -> c		3030191	0					
ANR	3031756	Identifier	s		3030191	0					
ANR	3031757	Identifier	c		3030191	1					
ANR	3031758	Identifier	bytestream_start		3030191	1					
ANR	3031759	ExpressionStatement	pc = s -> c	271:4:5831:5839	3030191	91	True				
ANR	3031760	AssignmentExpression	pc = s -> c		3030191	0		=			
ANR	3031761	Identifier	pc		3030191	0					
ANR	3031762	PtrMemberAccess	s -> c		3030191	1					
ANR	3031763	Identifier	s		3030191	0					
ANR	3031764	Identifier	c		3030191	1					
ANR	3031765	ExpressionStatement	pc . bytestream_start = pc . bytestream = p_buffer	273:4:5846:5895	3030191	92	True				
ANR	3031766	AssignmentExpression	pc . bytestream_start = pc . bytestream = p_buffer		3030191	0		=			
ANR	3031767	MemberAccess	pc . bytestream_start		3030191	0					
ANR	3031768	Identifier	pc		3030191	0					
ANR	3031769	Identifier	bytestream_start		3030191	1					
ANR	3031770	AssignmentExpression	pc . bytestream = p_buffer		3030191	1		=			
ANR	3031771	MemberAccess	pc . bytestream		3030191	0					
ANR	3031772	Identifier	pc		3030191	0					
ANR	3031773	Identifier	bytestream		3030191	1					
ANR	3031774	Identifier	p_buffer		3030191	1					
ANR	3031775	ExpressionStatement	"memcpy ( p_state , s -> block_state , sizeof ( s -> block_state ) )"	277:4:5943:5998	3030191	93	True				
ANR	3031776	CallExpression	"memcpy ( p_state , s -> block_state , sizeof ( s -> block_state ) )"		3030191	0					
ANR	3031777	Callee	memcpy		3030191	0					
ANR	3031778	Identifier	memcpy		3030191	0					
ANR	3031779	ArgumentList	p_state		3030191	1					
ANR	3031780	Argument	p_state		3030191	0					
ANR	3031781	Identifier	p_state		3030191	0					
ANR	3031782	Argument	s -> block_state		3030191	1					
ANR	3031783	PtrMemberAccess	s -> block_state		3030191	0					
ANR	3031784	Identifier	s		3030191	0					
ANR	3031785	Identifier	block_state		3030191	1					
ANR	3031786	Argument	sizeof ( s -> block_state )		3030191	2					
ANR	3031787	SizeofExpression	sizeof ( s -> block_state )		3030191	0					
ANR	3031788	Sizeof	sizeof		3030191	0					
ANR	3031789	PtrMemberAccess	s -> block_state		3030191	1					
ANR	3031790	Identifier	s		3030191	0					
ANR	3031791	Identifier	block_state		3030191	1					
ANR	3031792	IfStatement	if ( level != s -> block_max_depth )		3030191	94					
ANR	3031793	Condition	level != s -> block_max_depth	281:7:6010:6034	3030191	0	True				
ANR	3031794	EqualityExpression	level != s -> block_max_depth		3030191	0		!=			
ANR	3031795	Identifier	level		3030191	0					
ANR	3031796	PtrMemberAccess	s -> block_max_depth		3030191	1					
ANR	3031797	Identifier	s		3030191	0					
ANR	3031798	Identifier	block_max_depth		3030191	1					
ANR	3031799	ExpressionStatement	"put_rac ( & pc , & p_state [ 4 + s_context ] , 1 )"	283:8:6046:6086	3030191	1	True				
ANR	3031800	CallExpression	"put_rac ( & pc , & p_state [ 4 + s_context ] , 1 )"		3030191	0					
ANR	3031801	Callee	put_rac		3030191	0					
ANR	3031802	Identifier	put_rac		3030191	0					
ANR	3031803	ArgumentList	& pc		3030191	1					
ANR	3031804	Argument	& pc		3030191	0					
ANR	3031805	UnaryOperationExpression	& pc		3030191	0					
ANR	3031806	UnaryOperator	&		3030191	0					
ANR	3031807	Identifier	pc		3030191	1					
ANR	3031808	Argument	& p_state [ 4 + s_context ]		3030191	1					
ANR	3031809	UnaryOperationExpression	& p_state [ 4 + s_context ]		3030191	0					
ANR	3031810	UnaryOperator	&		3030191	0					
ANR	3031811	ArrayIndexing	p_state [ 4 + s_context ]		3030191	1					
ANR	3031812	Identifier	p_state		3030191	0					
ANR	3031813	AdditiveExpression	4 + s_context		3030191	1		+			
ANR	3031814	PrimaryExpression	4		3030191	0					
ANR	3031815	Identifier	s_context		3030191	1					
ANR	3031816	Argument	1		3030191	2					
ANR	3031817	PrimaryExpression	1		3030191	0					
ANR	3031818	ExpressionStatement	"put_rac ( & pc , & p_state [ 1 + left -> type + top -> type ] , 0 )"	285:4:6093:6146	3030191	95	True				
ANR	3031819	CallExpression	"put_rac ( & pc , & p_state [ 1 + left -> type + top -> type ] , 0 )"		3030191	0					
ANR	3031820	Callee	put_rac		3030191	0					
ANR	3031821	Identifier	put_rac		3030191	0					
ANR	3031822	ArgumentList	& pc		3030191	1					
ANR	3031823	Argument	& pc		3030191	0					
ANR	3031824	UnaryOperationExpression	& pc		3030191	0					
ANR	3031825	UnaryOperator	&		3030191	0					
ANR	3031826	Identifier	pc		3030191	1					
ANR	3031827	Argument	& p_state [ 1 + left -> type + top -> type ]		3030191	1					
ANR	3031828	UnaryOperationExpression	& p_state [ 1 + left -> type + top -> type ]		3030191	0					
ANR	3031829	UnaryOperator	&		3030191	0					
ANR	3031830	ArrayIndexing	p_state [ 1 + left -> type + top -> type ]		3030191	1					
ANR	3031831	Identifier	p_state		3030191	0					
ANR	3031832	AdditiveExpression	1 + left -> type + top -> type		3030191	1		+			
ANR	3031833	PrimaryExpression	1		3030191	0					
ANR	3031834	AdditiveExpression	left -> type + top -> type		3030191	1		+			
ANR	3031835	PtrMemberAccess	left -> type		3030191	0					
ANR	3031836	Identifier	left		3030191	0					
ANR	3031837	Identifier	type		3030191	1					
ANR	3031838	PtrMemberAccess	top -> type		3030191	1					
ANR	3031839	Identifier	top		3030191	0					
ANR	3031840	Identifier	type		3030191	1					
ANR	3031841	Argument	0		3030191	2					
ANR	3031842	PrimaryExpression	0		3030191	0					
ANR	3031843	IfStatement	if ( s -> ref_frames > 1 )		3030191	96					
ANR	3031844	Condition	s -> ref_frames > 1	287:7:6156:6172	3030191	0	True				
ANR	3031845	RelationalExpression	s -> ref_frames > 1		3030191	0		>			
ANR	3031846	PtrMemberAccess	s -> ref_frames		3030191	0					
ANR	3031847	Identifier	s		3030191	0					
ANR	3031848	Identifier	ref_frames		3030191	1					
ANR	3031849	PrimaryExpression	1		3030191	1					
ANR	3031850	ExpressionStatement	"put_symbol ( & pc , & p_state [ 128 + 1024 + 32 * ref_context ] , best_ref , 0 )"	289:8:6184:6251	3030191	1	True				
ANR	3031851	CallExpression	"put_symbol ( & pc , & p_state [ 128 + 1024 + 32 * ref_context ] , best_ref , 0 )"		3030191	0					
ANR	3031852	Callee	put_symbol		3030191	0					
ANR	3031853	Identifier	put_symbol		3030191	0					
ANR	3031854	ArgumentList	& pc		3030191	1					
ANR	3031855	Argument	& pc		3030191	0					
ANR	3031856	UnaryOperationExpression	& pc		3030191	0					
ANR	3031857	UnaryOperator	&		3030191	0					
ANR	3031858	Identifier	pc		3030191	1					
ANR	3031859	Argument	& p_state [ 128 + 1024 + 32 * ref_context ]		3030191	1					
ANR	3031860	UnaryOperationExpression	& p_state [ 128 + 1024 + 32 * ref_context ]		3030191	0					
ANR	3031861	UnaryOperator	&		3030191	0					
ANR	3031862	ArrayIndexing	p_state [ 128 + 1024 + 32 * ref_context ]		3030191	1					
ANR	3031863	Identifier	p_state		3030191	0					
ANR	3031864	AdditiveExpression	128 + 1024 + 32 * ref_context		3030191	1		+			
ANR	3031865	PrimaryExpression	128		3030191	0					
ANR	3031866	AdditiveExpression	1024 + 32 * ref_context		3030191	1		+			
ANR	3031867	PrimaryExpression	1024		3030191	0					
ANR	3031868	MultiplicativeExpression	32 * ref_context		3030191	1		*			
ANR	3031869	PrimaryExpression	32		3030191	0					
ANR	3031870	Identifier	ref_context		3030191	1					
ANR	3031871	Argument	best_ref		3030191	2					
ANR	3031872	Identifier	best_ref		3030191	0					
ANR	3031873	Argument	0		3030191	3					
ANR	3031874	PrimaryExpression	0		3030191	0					
ANR	3031875	ExpressionStatement	"pred_mv ( s , & pmx , & pmy , best_ref , left , top , tr )"	291:4:6258:6305	3030191	97	True				
ANR	3031876	CallExpression	"pred_mv ( s , & pmx , & pmy , best_ref , left , top , tr )"		3030191	0					
ANR	3031877	Callee	pred_mv		3030191	0					
ANR	3031878	Identifier	pred_mv		3030191	0					
ANR	3031879	ArgumentList	s		3030191	1					
ANR	3031880	Argument	s		3030191	0					
ANR	3031881	Identifier	s		3030191	0					
ANR	3031882	Argument	& pmx		3030191	1					
ANR	3031883	UnaryOperationExpression	& pmx		3030191	0					
ANR	3031884	UnaryOperator	&		3030191	0					
ANR	3031885	Identifier	pmx		3030191	1					
ANR	3031886	Argument	& pmy		3030191	2					
ANR	3031887	UnaryOperationExpression	& pmy		3030191	0					
ANR	3031888	UnaryOperator	&		3030191	0					
ANR	3031889	Identifier	pmy		3030191	1					
ANR	3031890	Argument	best_ref		3030191	3					
ANR	3031891	Identifier	best_ref		3030191	0					
ANR	3031892	Argument	left		3030191	4					
ANR	3031893	Identifier	left		3030191	0					
ANR	3031894	Argument	top		3030191	5					
ANR	3031895	Identifier	top		3030191	0					
ANR	3031896	Argument	tr		3030191	6					
ANR	3031897	Identifier	tr		3030191	0					
ANR	3031898	ExpressionStatement	"put_symbol ( & pc , & p_state [ 128 + 32 * ( mx_context + 16 * ! ! best_ref ) ] , mx - pmx , 1 )"	293:4:6312:6389	3030191	98	True				
ANR	3031899	CallExpression	"put_symbol ( & pc , & p_state [ 128 + 32 * ( mx_context + 16 * ! ! best_ref ) ] , mx - pmx , 1 )"		3030191	0					
ANR	3031900	Callee	put_symbol		3030191	0					
ANR	3031901	Identifier	put_symbol		3030191	0					
ANR	3031902	ArgumentList	& pc		3030191	1					
ANR	3031903	Argument	& pc		3030191	0					
ANR	3031904	UnaryOperationExpression	& pc		3030191	0					
ANR	3031905	UnaryOperator	&		3030191	0					
ANR	3031906	Identifier	pc		3030191	1					
ANR	3031907	Argument	& p_state [ 128 + 32 * ( mx_context + 16 * ! ! best_ref ) ]		3030191	1					
ANR	3031908	UnaryOperationExpression	& p_state [ 128 + 32 * ( mx_context + 16 * ! ! best_ref ) ]		3030191	0					
ANR	3031909	UnaryOperator	&		3030191	0					
ANR	3031910	ArrayIndexing	p_state [ 128 + 32 * ( mx_context + 16 * ! ! best_ref ) ]		3030191	1					
ANR	3031911	Identifier	p_state		3030191	0					
ANR	3031912	AdditiveExpression	128 + 32 * ( mx_context + 16 * ! ! best_ref )		3030191	1		+			
ANR	3031913	PrimaryExpression	128		3030191	0					
ANR	3031914	MultiplicativeExpression	32 * ( mx_context + 16 * ! ! best_ref )		3030191	1		*			
ANR	3031915	PrimaryExpression	32		3030191	0					
ANR	3031916	AdditiveExpression	mx_context + 16 * ! ! best_ref		3030191	1		+			
ANR	3031917	Identifier	mx_context		3030191	0					
ANR	3031918	MultiplicativeExpression	16 * ! ! best_ref		3030191	1		*			
ANR	3031919	PrimaryExpression	16		3030191	0					
ANR	3031920	UnaryOperationExpression	! ! best_ref		3030191	1					
ANR	3031921	UnaryOperator	!		3030191	0					
ANR	3031922	UnaryOperationExpression	! best_ref		3030191	1					
ANR	3031923	UnaryOperator	!		3030191	0					
ANR	3031924	Identifier	best_ref		3030191	1					
ANR	3031925	Argument	mx - pmx		3030191	2					
ANR	3031926	AdditiveExpression	mx - pmx		3030191	0		-			
ANR	3031927	Identifier	mx		3030191	0					
ANR	3031928	Identifier	pmx		3030191	1					
ANR	3031929	Argument	1		3030191	3					
ANR	3031930	PrimaryExpression	1		3030191	0					
ANR	3031931	ExpressionStatement	"put_symbol ( & pc , & p_state [ 128 + 32 * ( my_context + 16 * ! ! best_ref ) ] , my - pmy , 1 )"	295:4:6396:6473	3030191	99	True				
ANR	3031932	CallExpression	"put_symbol ( & pc , & p_state [ 128 + 32 * ( my_context + 16 * ! ! best_ref ) ] , my - pmy , 1 )"		3030191	0					
ANR	3031933	Callee	put_symbol		3030191	0					
ANR	3031934	Identifier	put_symbol		3030191	0					
ANR	3031935	ArgumentList	& pc		3030191	1					
ANR	3031936	Argument	& pc		3030191	0					
ANR	3031937	UnaryOperationExpression	& pc		3030191	0					
ANR	3031938	UnaryOperator	&		3030191	0					
ANR	3031939	Identifier	pc		3030191	1					
ANR	3031940	Argument	& p_state [ 128 + 32 * ( my_context + 16 * ! ! best_ref ) ]		3030191	1					
ANR	3031941	UnaryOperationExpression	& p_state [ 128 + 32 * ( my_context + 16 * ! ! best_ref ) ]		3030191	0					
ANR	3031942	UnaryOperator	&		3030191	0					
ANR	3031943	ArrayIndexing	p_state [ 128 + 32 * ( my_context + 16 * ! ! best_ref ) ]		3030191	1					
ANR	3031944	Identifier	p_state		3030191	0					
ANR	3031945	AdditiveExpression	128 + 32 * ( my_context + 16 * ! ! best_ref )		3030191	1		+			
ANR	3031946	PrimaryExpression	128		3030191	0					
ANR	3031947	MultiplicativeExpression	32 * ( my_context + 16 * ! ! best_ref )		3030191	1		*			
ANR	3031948	PrimaryExpression	32		3030191	0					
ANR	3031949	AdditiveExpression	my_context + 16 * ! ! best_ref		3030191	1		+			
ANR	3031950	Identifier	my_context		3030191	0					
ANR	3031951	MultiplicativeExpression	16 * ! ! best_ref		3030191	1		*			
ANR	3031952	PrimaryExpression	16		3030191	0					
ANR	3031953	UnaryOperationExpression	! ! best_ref		3030191	1					
ANR	3031954	UnaryOperator	!		3030191	0					
ANR	3031955	UnaryOperationExpression	! best_ref		3030191	1					
ANR	3031956	UnaryOperator	!		3030191	0					
ANR	3031957	Identifier	best_ref		3030191	1					
ANR	3031958	Argument	my - pmy		3030191	2					
ANR	3031959	AdditiveExpression	my - pmy		3030191	0		-			
ANR	3031960	Identifier	my		3030191	0					
ANR	3031961	Identifier	pmy		3030191	1					
ANR	3031962	Argument	1		3030191	3					
ANR	3031963	PrimaryExpression	1		3030191	0					
ANR	3031964	ExpressionStatement	p_len = pc . bytestream - pc . bytestream_start	297:4:6480:6522	3030191	100	True				
ANR	3031965	AssignmentExpression	p_len = pc . bytestream - pc . bytestream_start		3030191	0		=			
ANR	3031966	Identifier	p_len		3030191	0					
ANR	3031967	AdditiveExpression	pc . bytestream - pc . bytestream_start		3030191	1		-			
ANR	3031968	MemberAccess	pc . bytestream		3030191	0					
ANR	3031969	Identifier	pc		3030191	0					
ANR	3031970	Identifier	bytestream		3030191	1					
ANR	3031971	MemberAccess	pc . bytestream_start		3030191	1					
ANR	3031972	Identifier	pc		3030191	0					
ANR	3031973	Identifier	bytestream_start		3030191	1					
ANR	3031974	ExpressionStatement	score += ( s -> lambda2 * ( get_rac_count ( & pc ) - base_bits ) ) >> FF_LAMBDA_SHIFT	299:4:6529:6598	3030191	101	True				
ANR	3031975	AssignmentExpression	score += ( s -> lambda2 * ( get_rac_count ( & pc ) - base_bits ) ) >> FF_LAMBDA_SHIFT		3030191	0		+=			
ANR	3031976	Identifier	score		3030191	0					
ANR	3031977	ShiftExpression	( s -> lambda2 * ( get_rac_count ( & pc ) - base_bits ) ) >> FF_LAMBDA_SHIFT		3030191	1		>>			
ANR	3031978	MultiplicativeExpression	s -> lambda2 * ( get_rac_count ( & pc ) - base_bits )		3030191	0		*			
ANR	3031979	PtrMemberAccess	s -> lambda2		3030191	0					
ANR	3031980	Identifier	s		3030191	0					
ANR	3031981	Identifier	lambda2		3030191	1					
ANR	3031982	AdditiveExpression	get_rac_count ( & pc ) - base_bits		3030191	1		-			
ANR	3031983	CallExpression	get_rac_count ( & pc )		3030191	0					
ANR	3031984	Callee	get_rac_count		3030191	0					
ANR	3031985	Identifier	get_rac_count		3030191	0					
ANR	3031986	ArgumentList	& pc		3030191	1					
ANR	3031987	Argument	& pc		3030191	0					
ANR	3031988	UnaryOperationExpression	& pc		3030191	0					
ANR	3031989	UnaryOperator	&		3030191	0					
ANR	3031990	Identifier	pc		3030191	1					
ANR	3031991	Identifier	base_bits		3030191	1					
ANR	3031992	Identifier	FF_LAMBDA_SHIFT		3030191	1					
ANR	3031993	ExpressionStatement	block_s = block_w * block_w	303:4:6607:6631	3030191	102	True				
ANR	3031994	AssignmentExpression	block_s = block_w * block_w		3030191	0		=			
ANR	3031995	Identifier	block_s		3030191	0					
ANR	3031996	MultiplicativeExpression	block_w * block_w		3030191	1		*			
ANR	3031997	Identifier	block_w		3030191	0					
ANR	3031998	Identifier	block_w		3030191	1					
ANR	3031999	ExpressionStatement	"sum = pix_sum ( current_data [ 0 ] , stride , block_w , block_w )"	305:4:6638:6694	3030191	103	True				
ANR	3032000	AssignmentExpression	"sum = pix_sum ( current_data [ 0 ] , stride , block_w , block_w )"		3030191	0		=			
ANR	3032001	Identifier	sum		3030191	0					
ANR	3032002	CallExpression	"pix_sum ( current_data [ 0 ] , stride , block_w , block_w )"		3030191	1					
ANR	3032003	Callee	pix_sum		3030191	0					
ANR	3032004	Identifier	pix_sum		3030191	0					
ANR	3032005	ArgumentList	current_data [ 0 ]		3030191	1					
ANR	3032006	Argument	current_data [ 0 ]		3030191	0					
ANR	3032007	ArrayIndexing	current_data [ 0 ]		3030191	0					
ANR	3032008	Identifier	current_data		3030191	0					
ANR	3032009	PrimaryExpression	0		3030191	1					
ANR	3032010	Argument	stride		3030191	1					
ANR	3032011	Identifier	stride		3030191	0					
ANR	3032012	Argument	block_w		3030191	2					
ANR	3032013	Identifier	block_w		3030191	0					
ANR	3032014	Argument	block_w		3030191	3					
ANR	3032015	Identifier	block_w		3030191	0					
ANR	3032016	ExpressionStatement	l = ( sum + block_s / 2 ) / block_s	307:4:6701:6729	3030191	104	True				
ANR	3032017	AssignmentExpression	l = ( sum + block_s / 2 ) / block_s		3030191	0		=			
ANR	3032018	Identifier	l		3030191	0					
ANR	3032019	MultiplicativeExpression	( sum + block_s / 2 ) / block_s		3030191	1		/			
ANR	3032020	AdditiveExpression	sum + block_s / 2		3030191	0		+			
ANR	3032021	Identifier	sum		3030191	0					
ANR	3032022	MultiplicativeExpression	block_s / 2		3030191	1		/			
ANR	3032023	Identifier	block_s		3030191	0					
ANR	3032024	PrimaryExpression	2		3030191	1					
ANR	3032025	Identifier	block_s		3030191	1					
ANR	3032026	ExpressionStatement	"iscore = pix_norm1 ( current_data [ 0 ] , stride , block_w ) - 2 * l * sum + l * l * block_s"	309:4:6736:6812	3030191	105	True				
ANR	3032027	AssignmentExpression	"iscore = pix_norm1 ( current_data [ 0 ] , stride , block_w ) - 2 * l * sum + l * l * block_s"		3030191	0		=			
ANR	3032028	Identifier	iscore		3030191	0					
ANR	3032029	AdditiveExpression	"pix_norm1 ( current_data [ 0 ] , stride , block_w ) - 2 * l * sum + l * l * block_s"		3030191	1		-			
ANR	3032030	CallExpression	"pix_norm1 ( current_data [ 0 ] , stride , block_w )"		3030191	0					
ANR	3032031	Callee	pix_norm1		3030191	0					
ANR	3032032	Identifier	pix_norm1		3030191	0					
ANR	3032033	ArgumentList	current_data [ 0 ]		3030191	1					
ANR	3032034	Argument	current_data [ 0 ]		3030191	0					
ANR	3032035	ArrayIndexing	current_data [ 0 ]		3030191	0					
ANR	3032036	Identifier	current_data		3030191	0					
ANR	3032037	PrimaryExpression	0		3030191	1					
ANR	3032038	Argument	stride		3030191	1					
ANR	3032039	Identifier	stride		3030191	0					
ANR	3032040	Argument	block_w		3030191	2					
ANR	3032041	Identifier	block_w		3030191	0					
ANR	3032042	AdditiveExpression	2 * l * sum + l * l * block_s		3030191	1		+			
ANR	3032043	MultiplicativeExpression	2 * l * sum		3030191	0		*			
ANR	3032044	PrimaryExpression	2		3030191	0					
ANR	3032045	MultiplicativeExpression	l * sum		3030191	1		*			
ANR	3032046	Identifier	l		3030191	0					
ANR	3032047	Identifier	sum		3030191	1					
ANR	3032048	MultiplicativeExpression	l * l * block_s		3030191	1		*			
ANR	3032049	Identifier	l		3030191	0					
ANR	3032050	MultiplicativeExpression	l * block_s		3030191	1		*			
ANR	3032051	Identifier	l		3030191	0					
ANR	3032052	Identifier	block_s		3030191	1					
ANR	3032053	IfStatement	if ( s -> nb_planes > 2 )		3030191	106					
ANR	3032054	Condition	s -> nb_planes > 2	313:8:6825:6840	3030191	0	True				
ANR	3032055	RelationalExpression	s -> nb_planes > 2		3030191	0		>			
ANR	3032056	PtrMemberAccess	s -> nb_planes		3030191	0					
ANR	3032057	Identifier	s		3030191	0					
ANR	3032058	Identifier	nb_planes		3030191	1					
ANR	3032059	PrimaryExpression	2		3030191	1					
ANR	3032060	CompoundStatement		313:26:6775:6775	3030191	1					
ANR	3032061	ExpressionStatement	block_s = block_w * block_w >> ( s -> chroma_h_shift + s -> chroma_v_shift )	315:8:6854:6919	3030191	0	True				
ANR	3032062	AssignmentExpression	block_s = block_w * block_w >> ( s -> chroma_h_shift + s -> chroma_v_shift )		3030191	0		=			
ANR	3032063	Identifier	block_s		3030191	0					
ANR	3032064	ShiftExpression	block_w * block_w >> ( s -> chroma_h_shift + s -> chroma_v_shift )		3030191	1		>>			
ANR	3032065	MultiplicativeExpression	block_w * block_w		3030191	0		*			
ANR	3032066	Identifier	block_w		3030191	0					
ANR	3032067	Identifier	block_w		3030191	1					
ANR	3032068	AdditiveExpression	s -> chroma_h_shift + s -> chroma_v_shift		3030191	1		+			
ANR	3032069	PtrMemberAccess	s -> chroma_h_shift		3030191	0					
ANR	3032070	Identifier	s		3030191	0					
ANR	3032071	Identifier	chroma_h_shift		3030191	1					
ANR	3032072	PtrMemberAccess	s -> chroma_v_shift		3030191	1					
ANR	3032073	Identifier	s		3030191	0					
ANR	3032074	Identifier	chroma_v_shift		3030191	1					
ANR	3032075	ExpressionStatement	"sum = pix_sum ( current_data [ 1 ] , uvstride , block_w >> s -> chroma_h_shift , block_w >> s -> chroma_v_shift )"	317:8:6930:7026	3030191	1	True				
ANR	3032076	AssignmentExpression	"sum = pix_sum ( current_data [ 1 ] , uvstride , block_w >> s -> chroma_h_shift , block_w >> s -> chroma_v_shift )"		3030191	0		=			
ANR	3032077	Identifier	sum		3030191	0					
ANR	3032078	CallExpression	"pix_sum ( current_data [ 1 ] , uvstride , block_w >> s -> chroma_h_shift , block_w >> s -> chroma_v_shift )"		3030191	1					
ANR	3032079	Callee	pix_sum		3030191	0					
ANR	3032080	Identifier	pix_sum		3030191	0					
ANR	3032081	ArgumentList	current_data [ 1 ]		3030191	1					
ANR	3032082	Argument	current_data [ 1 ]		3030191	0					
ANR	3032083	ArrayIndexing	current_data [ 1 ]		3030191	0					
ANR	3032084	Identifier	current_data		3030191	0					
ANR	3032085	PrimaryExpression	1		3030191	1					
ANR	3032086	Argument	uvstride		3030191	1					
ANR	3032087	Identifier	uvstride		3030191	0					
ANR	3032088	Argument	block_w >> s -> chroma_h_shift		3030191	2					
ANR	3032089	ShiftExpression	block_w >> s -> chroma_h_shift		3030191	0		>>			
ANR	3032090	Identifier	block_w		3030191	0					
ANR	3032091	PtrMemberAccess	s -> chroma_h_shift		3030191	1					
ANR	3032092	Identifier	s		3030191	0					
ANR	3032093	Identifier	chroma_h_shift		3030191	1					
ANR	3032094	Argument	block_w >> s -> chroma_v_shift		3030191	3					
ANR	3032095	ShiftExpression	block_w >> s -> chroma_v_shift		3030191	0		>>			
ANR	3032096	Identifier	block_w		3030191	0					
ANR	3032097	PtrMemberAccess	s -> chroma_v_shift		3030191	1					
ANR	3032098	Identifier	s		3030191	0					
ANR	3032099	Identifier	chroma_v_shift		3030191	1					
ANR	3032100	ExpressionStatement	cb = ( sum + block_s / 2 ) / block_s	319:8:7037:7066	3030191	2	True				
ANR	3032101	AssignmentExpression	cb = ( sum + block_s / 2 ) / block_s		3030191	0		=			
ANR	3032102	Identifier	cb		3030191	0					
ANR	3032103	MultiplicativeExpression	( sum + block_s / 2 ) / block_s		3030191	1		/			
ANR	3032104	AdditiveExpression	sum + block_s / 2		3030191	0		+			
ANR	3032105	Identifier	sum		3030191	0					
ANR	3032106	MultiplicativeExpression	block_s / 2		3030191	1		/			
ANR	3032107	Identifier	block_s		3030191	0					
ANR	3032108	PrimaryExpression	2		3030191	1					
ANR	3032109	Identifier	block_s		3030191	1					
ANR	3032110	ExpressionStatement	"sum = pix_sum ( current_data [ 2 ] , uvstride , block_w >> s -> chroma_h_shift , block_w >> s -> chroma_v_shift )"	323:8:7177:7273	3030191	3	True				
ANR	3032111	AssignmentExpression	"sum = pix_sum ( current_data [ 2 ] , uvstride , block_w >> s -> chroma_h_shift , block_w >> s -> chroma_v_shift )"		3030191	0		=			
ANR	3032112	Identifier	sum		3030191	0					
ANR	3032113	CallExpression	"pix_sum ( current_data [ 2 ] , uvstride , block_w >> s -> chroma_h_shift , block_w >> s -> chroma_v_shift )"		3030191	1					
ANR	3032114	Callee	pix_sum		3030191	0					
ANR	3032115	Identifier	pix_sum		3030191	0					
ANR	3032116	ArgumentList	current_data [ 2 ]		3030191	1					
ANR	3032117	Argument	current_data [ 2 ]		3030191	0					
ANR	3032118	ArrayIndexing	current_data [ 2 ]		3030191	0					
ANR	3032119	Identifier	current_data		3030191	0					
ANR	3032120	PrimaryExpression	2		3030191	1					
ANR	3032121	Argument	uvstride		3030191	1					
ANR	3032122	Identifier	uvstride		3030191	0					
ANR	3032123	Argument	block_w >> s -> chroma_h_shift		3030191	2					
ANR	3032124	ShiftExpression	block_w >> s -> chroma_h_shift		3030191	0		>>			
ANR	3032125	Identifier	block_w		3030191	0					
ANR	3032126	PtrMemberAccess	s -> chroma_h_shift		3030191	1					
ANR	3032127	Identifier	s		3030191	0					
ANR	3032128	Identifier	chroma_h_shift		3030191	1					
ANR	3032129	Argument	block_w >> s -> chroma_v_shift		3030191	3					
ANR	3032130	ShiftExpression	block_w >> s -> chroma_v_shift		3030191	0		>>			
ANR	3032131	Identifier	block_w		3030191	0					
ANR	3032132	PtrMemberAccess	s -> chroma_v_shift		3030191	1					
ANR	3032133	Identifier	s		3030191	0					
ANR	3032134	Identifier	chroma_v_shift		3030191	1					
ANR	3032135	ExpressionStatement	cr = ( sum + block_s / 2 ) / block_s	325:8:7284:7313	3030191	4	True				
ANR	3032136	AssignmentExpression	cr = ( sum + block_s / 2 ) / block_s		3030191	0		=			
ANR	3032137	Identifier	cr		3030191	0					
ANR	3032138	MultiplicativeExpression	( sum + block_s / 2 ) / block_s		3030191	1		/			
ANR	3032139	AdditiveExpression	sum + block_s / 2		3030191	0		+			
ANR	3032140	Identifier	sum		3030191	0					
ANR	3032141	MultiplicativeExpression	block_s / 2		3030191	1		/			
ANR	3032142	Identifier	block_s		3030191	0					
ANR	3032143	PrimaryExpression	2		3030191	1					
ANR	3032144	Identifier	block_s		3030191	1					
ANR	3032145	ElseStatement	else		3030191	0					
ANR	3032146	ExpressionStatement	cb = cr = 0	331:8:7435:7446	3030191	0	True				
ANR	3032147	AssignmentExpression	cb = cr = 0		3030191	0		=			
ANR	3032148	Identifier	cb		3030191	0					
ANR	3032149	AssignmentExpression	cr = 0		3030191	1		=			
ANR	3032150	Identifier	cr		3030191	0					
ANR	3032151	PrimaryExpression	0		3030191	1					
ANR	3032152	ExpressionStatement	ic = s -> c	335:4:7455:7463	3030191	107	True				
ANR	3032153	AssignmentExpression	ic = s -> c		3030191	0		=			
ANR	3032154	Identifier	ic		3030191	0					
ANR	3032155	PtrMemberAccess	s -> c		3030191	1					
ANR	3032156	Identifier	s		3030191	0					
ANR	3032157	Identifier	c		3030191	1					
ANR	3032158	ExpressionStatement	ic . bytestream_start = ic . bytestream = i_buffer	337:4:7470:7519	3030191	108	True				
ANR	3032159	AssignmentExpression	ic . bytestream_start = ic . bytestream = i_buffer		3030191	0		=			
ANR	3032160	MemberAccess	ic . bytestream_start		3030191	0					
ANR	3032161	Identifier	ic		3030191	0					
ANR	3032162	Identifier	bytestream_start		3030191	1					
ANR	3032163	AssignmentExpression	ic . bytestream = i_buffer		3030191	1		=			
ANR	3032164	MemberAccess	ic . bytestream		3030191	0					
ANR	3032165	Identifier	ic		3030191	0					
ANR	3032166	Identifier	bytestream		3030191	1					
ANR	3032167	Identifier	i_buffer		3030191	1					
ANR	3032168	ExpressionStatement	"memcpy ( i_state , s -> block_state , sizeof ( s -> block_state ) )"	341:4:7567:7622	3030191	109	True				
ANR	3032169	CallExpression	"memcpy ( i_state , s -> block_state , sizeof ( s -> block_state ) )"		3030191	0					
ANR	3032170	Callee	memcpy		3030191	0					
ANR	3032171	Identifier	memcpy		3030191	0					
ANR	3032172	ArgumentList	i_state		3030191	1					
ANR	3032173	Argument	i_state		3030191	0					
ANR	3032174	Identifier	i_state		3030191	0					
ANR	3032175	Argument	s -> block_state		3030191	1					
ANR	3032176	PtrMemberAccess	s -> block_state		3030191	0					
ANR	3032177	Identifier	s		3030191	0					
ANR	3032178	Identifier	block_state		3030191	1					
ANR	3032179	Argument	sizeof ( s -> block_state )		3030191	2					
ANR	3032180	SizeofExpression	sizeof ( s -> block_state )		3030191	0					
ANR	3032181	Sizeof	sizeof		3030191	0					
ANR	3032182	PtrMemberAccess	s -> block_state		3030191	1					
ANR	3032183	Identifier	s		3030191	0					
ANR	3032184	Identifier	block_state		3030191	1					
ANR	3032185	IfStatement	if ( level != s -> block_max_depth )		3030191	110					
ANR	3032186	Condition	level != s -> block_max_depth	343:7:7632:7656	3030191	0	True				
ANR	3032187	EqualityExpression	level != s -> block_max_depth		3030191	0		!=			
ANR	3032188	Identifier	level		3030191	0					
ANR	3032189	PtrMemberAccess	s -> block_max_depth		3030191	1					
ANR	3032190	Identifier	s		3030191	0					
ANR	3032191	Identifier	block_max_depth		3030191	1					
ANR	3032192	ExpressionStatement	"put_rac ( & ic , & i_state [ 4 + s_context ] , 1 )"	345:8:7668:7708	3030191	1	True				
ANR	3032193	CallExpression	"put_rac ( & ic , & i_state [ 4 + s_context ] , 1 )"		3030191	0					
ANR	3032194	Callee	put_rac		3030191	0					
ANR	3032195	Identifier	put_rac		3030191	0					
ANR	3032196	ArgumentList	& ic		3030191	1					
ANR	3032197	Argument	& ic		3030191	0					
ANR	3032198	UnaryOperationExpression	& ic		3030191	0					
ANR	3032199	UnaryOperator	&		3030191	0					
ANR	3032200	Identifier	ic		3030191	1					
ANR	3032201	Argument	& i_state [ 4 + s_context ]		3030191	1					
ANR	3032202	UnaryOperationExpression	& i_state [ 4 + s_context ]		3030191	0					
ANR	3032203	UnaryOperator	&		3030191	0					
ANR	3032204	ArrayIndexing	i_state [ 4 + s_context ]		3030191	1					
ANR	3032205	Identifier	i_state		3030191	0					
ANR	3032206	AdditiveExpression	4 + s_context		3030191	1		+			
ANR	3032207	PrimaryExpression	4		3030191	0					
ANR	3032208	Identifier	s_context		3030191	1					
ANR	3032209	Argument	1		3030191	2					
ANR	3032210	PrimaryExpression	1		3030191	0					
ANR	3032211	ExpressionStatement	"put_rac ( & ic , & i_state [ 1 + left -> type + top -> type ] , 1 )"	347:4:7715:7768	3030191	111	True				
ANR	3032212	CallExpression	"put_rac ( & ic , & i_state [ 1 + left -> type + top -> type ] , 1 )"		3030191	0					
ANR	3032213	Callee	put_rac		3030191	0					
ANR	3032214	Identifier	put_rac		3030191	0					
ANR	3032215	ArgumentList	& ic		3030191	1					
ANR	3032216	Argument	& ic		3030191	0					
ANR	3032217	UnaryOperationExpression	& ic		3030191	0					
ANR	3032218	UnaryOperator	&		3030191	0					
ANR	3032219	Identifier	ic		3030191	1					
ANR	3032220	Argument	& i_state [ 1 + left -> type + top -> type ]		3030191	1					
ANR	3032221	UnaryOperationExpression	& i_state [ 1 + left -> type + top -> type ]		3030191	0					
ANR	3032222	UnaryOperator	&		3030191	0					
ANR	3032223	ArrayIndexing	i_state [ 1 + left -> type + top -> type ]		3030191	1					
ANR	3032224	Identifier	i_state		3030191	0					
ANR	3032225	AdditiveExpression	1 + left -> type + top -> type		3030191	1		+			
ANR	3032226	PrimaryExpression	1		3030191	0					
ANR	3032227	AdditiveExpression	left -> type + top -> type		3030191	1		+			
ANR	3032228	PtrMemberAccess	left -> type		3030191	0					
ANR	3032229	Identifier	left		3030191	0					
ANR	3032230	Identifier	type		3030191	1					
ANR	3032231	PtrMemberAccess	top -> type		3030191	1					
ANR	3032232	Identifier	top		3030191	0					
ANR	3032233	Identifier	type		3030191	1					
ANR	3032234	Argument	1		3030191	2					
ANR	3032235	PrimaryExpression	1		3030191	0					
ANR	3032236	ExpressionStatement	"put_symbol ( & ic , & i_state [ 32 ] , l - pl , 1 )"	349:4:7775:7815	3030191	112	True				
ANR	3032237	CallExpression	"put_symbol ( & ic , & i_state [ 32 ] , l - pl , 1 )"		3030191	0					
ANR	3032238	Callee	put_symbol		3030191	0					
ANR	3032239	Identifier	put_symbol		3030191	0					
ANR	3032240	ArgumentList	& ic		3030191	1					
ANR	3032241	Argument	& ic		3030191	0					
ANR	3032242	UnaryOperationExpression	& ic		3030191	0					
ANR	3032243	UnaryOperator	&		3030191	0					
ANR	3032244	Identifier	ic		3030191	1					
ANR	3032245	Argument	& i_state [ 32 ]		3030191	1					
ANR	3032246	UnaryOperationExpression	& i_state [ 32 ]		3030191	0					
ANR	3032247	UnaryOperator	&		3030191	0					
ANR	3032248	ArrayIndexing	i_state [ 32 ]		3030191	1					
ANR	3032249	Identifier	i_state		3030191	0					
ANR	3032250	PrimaryExpression	32		3030191	1					
ANR	3032251	Argument	l - pl		3030191	2					
ANR	3032252	AdditiveExpression	l - pl		3030191	0		-			
ANR	3032253	Identifier	l		3030191	0					
ANR	3032254	Identifier	pl		3030191	1					
ANR	3032255	Argument	1		3030191	3					
ANR	3032256	PrimaryExpression	1		3030191	0					
ANR	3032257	IfStatement	if ( s -> nb_planes > 2 )		3030191	113					
ANR	3032258	Condition	s -> nb_planes > 2	351:8:7826:7841	3030191	0	True				
ANR	3032259	RelationalExpression	s -> nb_planes > 2		3030191	0		>			
ANR	3032260	PtrMemberAccess	s -> nb_planes		3030191	0					
ANR	3032261	Identifier	s		3030191	0					
ANR	3032262	Identifier	nb_planes		3030191	1					
ANR	3032263	PrimaryExpression	2		3030191	1					
ANR	3032264	CompoundStatement		351:26:7776:7776	3030191	1					
ANR	3032265	ExpressionStatement	"put_symbol ( & ic , & i_state [ 64 ] , cb - pcb , 1 )"	353:8:7855:7895	3030191	0	True				
ANR	3032266	CallExpression	"put_symbol ( & ic , & i_state [ 64 ] , cb - pcb , 1 )"		3030191	0					
ANR	3032267	Callee	put_symbol		3030191	0					
ANR	3032268	Identifier	put_symbol		3030191	0					
ANR	3032269	ArgumentList	& ic		3030191	1					
ANR	3032270	Argument	& ic		3030191	0					
ANR	3032271	UnaryOperationExpression	& ic		3030191	0					
ANR	3032272	UnaryOperator	&		3030191	0					
ANR	3032273	Identifier	ic		3030191	1					
ANR	3032274	Argument	& i_state [ 64 ]		3030191	1					
ANR	3032275	UnaryOperationExpression	& i_state [ 64 ]		3030191	0					
ANR	3032276	UnaryOperator	&		3030191	0					
ANR	3032277	ArrayIndexing	i_state [ 64 ]		3030191	1					
ANR	3032278	Identifier	i_state		3030191	0					
ANR	3032279	PrimaryExpression	64		3030191	1					
ANR	3032280	Argument	cb - pcb		3030191	2					
ANR	3032281	AdditiveExpression	cb - pcb		3030191	0		-			
ANR	3032282	Identifier	cb		3030191	0					
ANR	3032283	Identifier	pcb		3030191	1					
ANR	3032284	Argument	1		3030191	3					
ANR	3032285	PrimaryExpression	1		3030191	0					
ANR	3032286	ExpressionStatement	"put_symbol ( & ic , & i_state [ 96 ] , cr - pcr , 1 )"	355:8:7906:7946	3030191	1	True				
ANR	3032287	CallExpression	"put_symbol ( & ic , & i_state [ 96 ] , cr - pcr , 1 )"		3030191	0					
ANR	3032288	Callee	put_symbol		3030191	0					
ANR	3032289	Identifier	put_symbol		3030191	0					
ANR	3032290	ArgumentList	& ic		3030191	1					
ANR	3032291	Argument	& ic		3030191	0					
ANR	3032292	UnaryOperationExpression	& ic		3030191	0					
ANR	3032293	UnaryOperator	&		3030191	0					
ANR	3032294	Identifier	ic		3030191	1					
ANR	3032295	Argument	& i_state [ 96 ]		3030191	1					
ANR	3032296	UnaryOperationExpression	& i_state [ 96 ]		3030191	0					
ANR	3032297	UnaryOperator	&		3030191	0					
ANR	3032298	ArrayIndexing	i_state [ 96 ]		3030191	1					
ANR	3032299	Identifier	i_state		3030191	0					
ANR	3032300	PrimaryExpression	96		3030191	1					
ANR	3032301	Argument	cr - pcr		3030191	2					
ANR	3032302	AdditiveExpression	cr - pcr		3030191	0		-			
ANR	3032303	Identifier	cr		3030191	0					
ANR	3032304	Identifier	pcr		3030191	1					
ANR	3032305	Argument	1		3030191	3					
ANR	3032306	PrimaryExpression	1		3030191	0					
ANR	3032307	ExpressionStatement	i_len = ic . bytestream - ic . bytestream_start	359:4:7960:8002	3030191	114	True				
ANR	3032308	AssignmentExpression	i_len = ic . bytestream - ic . bytestream_start		3030191	0		=			
ANR	3032309	Identifier	i_len		3030191	0					
ANR	3032310	AdditiveExpression	ic . bytestream - ic . bytestream_start		3030191	1		-			
ANR	3032311	MemberAccess	ic . bytestream		3030191	0					
ANR	3032312	Identifier	ic		3030191	0					
ANR	3032313	Identifier	bytestream		3030191	1					
ANR	3032314	MemberAccess	ic . bytestream_start		3030191	1					
ANR	3032315	Identifier	ic		3030191	0					
ANR	3032316	Identifier	bytestream_start		3030191	1					
ANR	3032317	ExpressionStatement	iscore += ( s -> lambda2 * ( get_rac_count ( & ic ) - base_bits ) ) >> FF_LAMBDA_SHIFT	361:4:8009:8079	3030191	115	True				
ANR	3032318	AssignmentExpression	iscore += ( s -> lambda2 * ( get_rac_count ( & ic ) - base_bits ) ) >> FF_LAMBDA_SHIFT		3030191	0		+=			
ANR	3032319	Identifier	iscore		3030191	0					
ANR	3032320	ShiftExpression	( s -> lambda2 * ( get_rac_count ( & ic ) - base_bits ) ) >> FF_LAMBDA_SHIFT		3030191	1		>>			
ANR	3032321	MultiplicativeExpression	s -> lambda2 * ( get_rac_count ( & ic ) - base_bits )		3030191	0		*			
ANR	3032322	PtrMemberAccess	s -> lambda2		3030191	0					
ANR	3032323	Identifier	s		3030191	0					
ANR	3032324	Identifier	lambda2		3030191	1					
ANR	3032325	AdditiveExpression	get_rac_count ( & ic ) - base_bits		3030191	1		-			
ANR	3032326	CallExpression	get_rac_count ( & ic )		3030191	0					
ANR	3032327	Callee	get_rac_count		3030191	0					
ANR	3032328	Identifier	get_rac_count		3030191	0					
ANR	3032329	ArgumentList	& ic		3030191	1					
ANR	3032330	Argument	& ic		3030191	0					
ANR	3032331	UnaryOperationExpression	& ic		3030191	0					
ANR	3032332	UnaryOperator	&		3030191	0					
ANR	3032333	Identifier	ic		3030191	1					
ANR	3032334	Identifier	base_bits		3030191	1					
ANR	3032335	Identifier	FF_LAMBDA_SHIFT		3030191	1					
ANR	3032336	ExpressionStatement	av_assert1 ( iscore < 255 * 255 * 256 + s -> lambda2 * 10 )	365:4:8088:8136	3030191	116	True				
ANR	3032337	CallExpression	av_assert1 ( iscore < 255 * 255 * 256 + s -> lambda2 * 10 )		3030191	0					
ANR	3032338	Callee	av_assert1		3030191	0					
ANR	3032339	Identifier	av_assert1		3030191	0					
ANR	3032340	ArgumentList	iscore < 255 * 255 * 256 + s -> lambda2 * 10		3030191	1					
ANR	3032341	Argument	iscore < 255 * 255 * 256 + s -> lambda2 * 10		3030191	0					
ANR	3032342	RelationalExpression	iscore < 255 * 255 * 256 + s -> lambda2 * 10		3030191	0		<			
ANR	3032343	Identifier	iscore		3030191	0					
ANR	3032344	AdditiveExpression	255 * 255 * 256 + s -> lambda2 * 10		3030191	1		+			
ANR	3032345	MultiplicativeExpression	255 * 255 * 256		3030191	0		*			
ANR	3032346	PrimaryExpression	255		3030191	0					
ANR	3032347	MultiplicativeExpression	255 * 256		3030191	1		*			
ANR	3032348	PrimaryExpression	255		3030191	0					
ANR	3032349	PrimaryExpression	256		3030191	1					
ANR	3032350	MultiplicativeExpression	s -> lambda2 * 10		3030191	1		*			
ANR	3032351	PtrMemberAccess	s -> lambda2		3030191	0					
ANR	3032352	Identifier	s		3030191	0					
ANR	3032353	Identifier	lambda2		3030191	1					
ANR	3032354	PrimaryExpression	10		3030191	1					
ANR	3032355	ExpressionStatement	av_assert1 ( iscore >= 0 )	367:4:8143:8166	3030191	117	True				
ANR	3032356	CallExpression	av_assert1 ( iscore >= 0 )		3030191	0					
ANR	3032357	Callee	av_assert1		3030191	0					
ANR	3032358	Identifier	av_assert1		3030191	0					
ANR	3032359	ArgumentList	iscore >= 0		3030191	1					
ANR	3032360	Argument	iscore >= 0		3030191	0					
ANR	3032361	RelationalExpression	iscore >= 0		3030191	0		>=			
ANR	3032362	Identifier	iscore		3030191	0					
ANR	3032363	PrimaryExpression	0		3030191	1					
ANR	3032364	ExpressionStatement	av_assert1 ( l >= 0 && l <= 255 )	369:4:8173:8199	3030191	118	True				
ANR	3032365	CallExpression	av_assert1 ( l >= 0 && l <= 255 )		3030191	0					
ANR	3032366	Callee	av_assert1		3030191	0					
ANR	3032367	Identifier	av_assert1		3030191	0					
ANR	3032368	ArgumentList	l >= 0 && l <= 255		3030191	1					
ANR	3032369	Argument	l >= 0 && l <= 255		3030191	0					
ANR	3032370	AndExpression	l >= 0 && l <= 255		3030191	0		&&			
ANR	3032371	RelationalExpression	l >= 0		3030191	0		>=			
ANR	3032372	Identifier	l		3030191	0					
ANR	3032373	PrimaryExpression	0		3030191	1					
ANR	3032374	RelationalExpression	l <= 255		3030191	1		<=			
ANR	3032375	Identifier	l		3030191	0					
ANR	3032376	PrimaryExpression	255		3030191	1					
ANR	3032377	ExpressionStatement	av_assert1 ( pl >= 0 && pl <= 255 )	371:4:8206:8234	3030191	119	True				
ANR	3032378	CallExpression	av_assert1 ( pl >= 0 && pl <= 255 )		3030191	0					
ANR	3032379	Callee	av_assert1		3030191	0					
ANR	3032380	Identifier	av_assert1		3030191	0					
ANR	3032381	ArgumentList	pl >= 0 && pl <= 255		3030191	1					
ANR	3032382	Argument	pl >= 0 && pl <= 255		3030191	0					
ANR	3032383	AndExpression	pl >= 0 && pl <= 255		3030191	0		&&			
ANR	3032384	RelationalExpression	pl >= 0		3030191	0		>=			
ANR	3032385	Identifier	pl		3030191	0					
ANR	3032386	PrimaryExpression	0		3030191	1					
ANR	3032387	RelationalExpression	pl <= 255		3030191	1		<=			
ANR	3032388	Identifier	pl		3030191	0					
ANR	3032389	PrimaryExpression	255		3030191	1					
ANR	3032390	IfStatement	if ( level == 0 )		3030191	120					
ANR	3032391	Condition	level == 0	375:7:8246:8253	3030191	0	True				
ANR	3032392	EqualityExpression	level == 0		3030191	0		==			
ANR	3032393	Identifier	level		3030191	0					
ANR	3032394	PrimaryExpression	0		3030191	1					
ANR	3032395	CompoundStatement		379:8:8230:8250	3030191	1					
ANR	3032396	IdentifierDeclStatement	int varc = iscore >> 8 ;	377:8:8266:8287	3030191	0	True				
ANR	3032397	IdentifierDecl	varc = iscore >> 8		3030191	0					
ANR	3032398	IdentifierDeclType	int		3030191	0					
ANR	3032399	Identifier	varc		3030191	1					
ANR	3032400	AssignmentExpression	varc = iscore >> 8		3030191	2		=			
ANR	3032401	Identifier	varc		3030191	0					
ANR	3032402	ShiftExpression	iscore >> 8		3030191	1		>>			
ANR	3032403	Identifier	iscore		3030191	0					
ANR	3032404	PrimaryExpression	8		3030191	1					
ANR	3032405	IdentifierDeclStatement	int vard = score >> 8 ;	379:8:8298:8318	3030191	1	True				
ANR	3032406	IdentifierDecl	vard = score >> 8		3030191	0					
ANR	3032407	IdentifierDeclType	int		3030191	0					
ANR	3032408	Identifier	vard		3030191	1					
ANR	3032409	AssignmentExpression	vard = score >> 8		3030191	2		=			
ANR	3032410	Identifier	vard		3030191	0					
ANR	3032411	ShiftExpression	score >> 8		3030191	1		>>			
ANR	3032412	Identifier	score		3030191	0					
ANR	3032413	PrimaryExpression	8		3030191	1					
ANR	3032414	IfStatement	if ( vard <= 64 || vard < varc )		3030191	2					
ANR	3032415	Condition	vard <= 64 || vard < varc	381:12:8333:8357	3030191	0	True				
ANR	3032416	OrExpression	vard <= 64 || vard < varc		3030191	0		||			
ANR	3032417	RelationalExpression	vard <= 64		3030191	0		<=			
ANR	3032418	Identifier	vard		3030191	0					
ANR	3032419	PrimaryExpression	64		3030191	1					
ANR	3032420	RelationalExpression	vard < varc		3030191	1		<			
ANR	3032421	Identifier	vard		3030191	0					
ANR	3032422	Identifier	varc		3030191	1					
ANR	3032423	ExpressionStatement	c -> scene_change_score += ff_sqrt ( vard ) - ff_sqrt ( varc )	383:12:8373:8426	3030191	1	True				
ANR	3032424	AssignmentExpression	c -> scene_change_score += ff_sqrt ( vard ) - ff_sqrt ( varc )		3030191	0		+=			
ANR	3032425	PtrMemberAccess	c -> scene_change_score		3030191	0					
ANR	3032426	Identifier	c		3030191	0					
ANR	3032427	Identifier	scene_change_score		3030191	1					
ANR	3032428	AdditiveExpression	ff_sqrt ( vard ) - ff_sqrt ( varc )		3030191	1		-			
ANR	3032429	CallExpression	ff_sqrt ( vard )		3030191	0					
ANR	3032430	Callee	ff_sqrt		3030191	0					
ANR	3032431	Identifier	ff_sqrt		3030191	0					
ANR	3032432	ArgumentList	vard		3030191	1					
ANR	3032433	Argument	vard		3030191	0					
ANR	3032434	Identifier	vard		3030191	0					
ANR	3032435	CallExpression	ff_sqrt ( varc )		3030191	1					
ANR	3032436	Callee	ff_sqrt		3030191	0					
ANR	3032437	Identifier	ff_sqrt		3030191	0					
ANR	3032438	ArgumentList	varc		3030191	1					
ANR	3032439	Argument	varc		3030191	0					
ANR	3032440	Identifier	varc		3030191	0					
ANR	3032441	ElseStatement	else		3030191	0					
ANR	3032442	ExpressionStatement	c -> scene_change_score += s -> m . qscale	387:12:8455:8490	3030191	0	True				
ANR	3032443	AssignmentExpression	c -> scene_change_score += s -> m . qscale		3030191	0		+=			
ANR	3032444	PtrMemberAccess	c -> scene_change_score		3030191	0					
ANR	3032445	Identifier	c		3030191	0					
ANR	3032446	Identifier	scene_change_score		3030191	1					
ANR	3032447	MemberAccess	s -> m . qscale		3030191	1					
ANR	3032448	PtrMemberAccess	s -> m		3030191	0					
ANR	3032449	Identifier	s		3030191	0					
ANR	3032450	Identifier	m		3030191	1					
ANR	3032451	Identifier	qscale		3030191	1					
ANR	3032452	IfStatement	if ( level != s -> block_max_depth )		3030191	121					
ANR	3032453	Condition	level != s -> block_max_depth	393:7:8509:8533	3030191	0	True				
ANR	3032454	EqualityExpression	level != s -> block_max_depth		3030191	0		!=			
ANR	3032455	Identifier	level		3030191	0					
ANR	3032456	PtrMemberAccess	s -> block_max_depth		3030191	1					
ANR	3032457	Identifier	s		3030191	0					
ANR	3032458	Identifier	block_max_depth		3030191	1					
ANR	3032459	CompoundStatement		393:33:8467:8467	3030191	1					
ANR	3032460	ExpressionStatement	"put_rac ( & s -> c , & s -> block_state [ 4 + s_context ] , 0 )"	395:8:8546:8595	3030191	0	True				
ANR	3032461	CallExpression	"put_rac ( & s -> c , & s -> block_state [ 4 + s_context ] , 0 )"		3030191	0					
ANR	3032462	Callee	put_rac		3030191	0					
ANR	3032463	Identifier	put_rac		3030191	0					
ANR	3032464	ArgumentList	& s -> c		3030191	1					
ANR	3032465	Argument	& s -> c		3030191	0					
ANR	3032466	UnaryOperationExpression	& s -> c		3030191	0					
ANR	3032467	UnaryOperator	&		3030191	0					
ANR	3032468	PtrMemberAccess	s -> c		3030191	1					
ANR	3032469	Identifier	s		3030191	0					
ANR	3032470	Identifier	c		3030191	1					
ANR	3032471	Argument	& s -> block_state [ 4 + s_context ]		3030191	1					
ANR	3032472	UnaryOperationExpression	& s -> block_state [ 4 + s_context ]		3030191	0					
ANR	3032473	UnaryOperator	&		3030191	0					
ANR	3032474	ArrayIndexing	s -> block_state [ 4 + s_context ]		3030191	1					
ANR	3032475	PtrMemberAccess	s -> block_state		3030191	0					
ANR	3032476	Identifier	s		3030191	0					
ANR	3032477	Identifier	block_state		3030191	1					
ANR	3032478	AdditiveExpression	4 + s_context		3030191	1		+			
ANR	3032479	PrimaryExpression	4		3030191	0					
ANR	3032480	Identifier	s_context		3030191	1					
ANR	3032481	Argument	0		3030191	2					
ANR	3032482	PrimaryExpression	0		3030191	0					
ANR	3032483	ExpressionStatement	"score2 = encode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 0 )"	397:8:8606:8656	3030191	1	True				
ANR	3032484	AssignmentExpression	"score2 = encode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 0 )"		3030191	0		=			
ANR	3032485	Identifier	score2		3030191	0					
ANR	3032486	CallExpression	"encode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 0 )"		3030191	1					
ANR	3032487	Callee	encode_q_branch		3030191	0					
ANR	3032488	Identifier	encode_q_branch		3030191	0					
ANR	3032489	ArgumentList	s		3030191	1					
ANR	3032490	Argument	s		3030191	0					
ANR	3032491	Identifier	s		3030191	0					
ANR	3032492	Argument	level + 1		3030191	1					
ANR	3032493	AdditiveExpression	level + 1		3030191	0		+			
ANR	3032494	Identifier	level		3030191	0					
ANR	3032495	PrimaryExpression	1		3030191	1					
ANR	3032496	Argument	2 * x + 0		3030191	2					
ANR	3032497	AdditiveExpression	2 * x + 0		3030191	0		+			
ANR	3032498	MultiplicativeExpression	2 * x		3030191	0		*			
ANR	3032499	PrimaryExpression	2		3030191	0					
ANR	3032500	Identifier	x		3030191	1					
ANR	3032501	PrimaryExpression	0		3030191	1					
ANR	3032502	Argument	2 * y + 0		3030191	3					
ANR	3032503	AdditiveExpression	2 * y + 0		3030191	0		+			
ANR	3032504	MultiplicativeExpression	2 * y		3030191	0		*			
ANR	3032505	PrimaryExpression	2		3030191	0					
ANR	3032506	Identifier	y		3030191	1					
ANR	3032507	PrimaryExpression	0		3030191	1					
ANR	3032508	ExpressionStatement	"score2 += encode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 0 )"	399:8:8667:8717	3030191	2	True				
ANR	3032509	AssignmentExpression	"score2 += encode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 0 )"		3030191	0		+=			
ANR	3032510	Identifier	score2		3030191	0					
ANR	3032511	CallExpression	"encode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 0 )"		3030191	1					
ANR	3032512	Callee	encode_q_branch		3030191	0					
ANR	3032513	Identifier	encode_q_branch		3030191	0					
ANR	3032514	ArgumentList	s		3030191	1					
ANR	3032515	Argument	s		3030191	0					
ANR	3032516	Identifier	s		3030191	0					
ANR	3032517	Argument	level + 1		3030191	1					
ANR	3032518	AdditiveExpression	level + 1		3030191	0		+			
ANR	3032519	Identifier	level		3030191	0					
ANR	3032520	PrimaryExpression	1		3030191	1					
ANR	3032521	Argument	2 * x + 1		3030191	2					
ANR	3032522	AdditiveExpression	2 * x + 1		3030191	0		+			
ANR	3032523	MultiplicativeExpression	2 * x		3030191	0		*			
ANR	3032524	PrimaryExpression	2		3030191	0					
ANR	3032525	Identifier	x		3030191	1					
ANR	3032526	PrimaryExpression	1		3030191	1					
ANR	3032527	Argument	2 * y + 0		3030191	3					
ANR	3032528	AdditiveExpression	2 * y + 0		3030191	0		+			
ANR	3032529	MultiplicativeExpression	2 * y		3030191	0		*			
ANR	3032530	PrimaryExpression	2		3030191	0					
ANR	3032531	Identifier	y		3030191	1					
ANR	3032532	PrimaryExpression	0		3030191	1					
ANR	3032533	ExpressionStatement	"score2 += encode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 1 )"	401:8:8728:8778	3030191	3	True				
ANR	3032534	AssignmentExpression	"score2 += encode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 1 )"		3030191	0		+=			
ANR	3032535	Identifier	score2		3030191	0					
ANR	3032536	CallExpression	"encode_q_branch ( s , level + 1 , 2 * x + 0 , 2 * y + 1 )"		3030191	1					
ANR	3032537	Callee	encode_q_branch		3030191	0					
ANR	3032538	Identifier	encode_q_branch		3030191	0					
ANR	3032539	ArgumentList	s		3030191	1					
ANR	3032540	Argument	s		3030191	0					
ANR	3032541	Identifier	s		3030191	0					
ANR	3032542	Argument	level + 1		3030191	1					
ANR	3032543	AdditiveExpression	level + 1		3030191	0		+			
ANR	3032544	Identifier	level		3030191	0					
ANR	3032545	PrimaryExpression	1		3030191	1					
ANR	3032546	Argument	2 * x + 0		3030191	2					
ANR	3032547	AdditiveExpression	2 * x + 0		3030191	0		+			
ANR	3032548	MultiplicativeExpression	2 * x		3030191	0		*			
ANR	3032549	PrimaryExpression	2		3030191	0					
ANR	3032550	Identifier	x		3030191	1					
ANR	3032551	PrimaryExpression	0		3030191	1					
ANR	3032552	Argument	2 * y + 1		3030191	3					
ANR	3032553	AdditiveExpression	2 * y + 1		3030191	0		+			
ANR	3032554	MultiplicativeExpression	2 * y		3030191	0		*			
ANR	3032555	PrimaryExpression	2		3030191	0					
ANR	3032556	Identifier	y		3030191	1					
ANR	3032557	PrimaryExpression	1		3030191	1					
ANR	3032558	ExpressionStatement	"score2 += encode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 1 )"	403:8:8789:8839	3030191	4	True				
ANR	3032559	AssignmentExpression	"score2 += encode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 1 )"		3030191	0		+=			
ANR	3032560	Identifier	score2		3030191	0					
ANR	3032561	CallExpression	"encode_q_branch ( s , level + 1 , 2 * x + 1 , 2 * y + 1 )"		3030191	1					
ANR	3032562	Callee	encode_q_branch		3030191	0					
ANR	3032563	Identifier	encode_q_branch		3030191	0					
ANR	3032564	ArgumentList	s		3030191	1					
ANR	3032565	Argument	s		3030191	0					
ANR	3032566	Identifier	s		3030191	0					
ANR	3032567	Argument	level + 1		3030191	1					
ANR	3032568	AdditiveExpression	level + 1		3030191	0		+			
ANR	3032569	Identifier	level		3030191	0					
ANR	3032570	PrimaryExpression	1		3030191	1					
ANR	3032571	Argument	2 * x + 1		3030191	2					
ANR	3032572	AdditiveExpression	2 * x + 1		3030191	0		+			
ANR	3032573	MultiplicativeExpression	2 * x		3030191	0		*			
ANR	3032574	PrimaryExpression	2		3030191	0					
ANR	3032575	Identifier	x		3030191	1					
ANR	3032576	PrimaryExpression	1		3030191	1					
ANR	3032577	Argument	2 * y + 1		3030191	3					
ANR	3032578	AdditiveExpression	2 * y + 1		3030191	0		+			
ANR	3032579	MultiplicativeExpression	2 * y		3030191	0		*			
ANR	3032580	PrimaryExpression	2		3030191	0					
ANR	3032581	Identifier	y		3030191	1					
ANR	3032582	PrimaryExpression	1		3030191	1					
ANR	3032583	ExpressionStatement	score2 += s -> lambda2 >> FF_LAMBDA_SHIFT	405:8:8850:8886	3030191	5	True				
ANR	3032584	AssignmentExpression	score2 += s -> lambda2 >> FF_LAMBDA_SHIFT		3030191	0		+=			
ANR	3032585	Identifier	score2		3030191	0					
ANR	3032586	ShiftExpression	s -> lambda2 >> FF_LAMBDA_SHIFT		3030191	1		>>			
ANR	3032587	PtrMemberAccess	s -> lambda2		3030191	0					
ANR	3032588	Identifier	s		3030191	0					
ANR	3032589	Identifier	lambda2		3030191	1					
ANR	3032590	Identifier	FF_LAMBDA_SHIFT		3030191	1					
ANR	3032591	IfStatement	if ( score2 < score && score2 < iscore )		3030191	6					
ANR	3032592	Condition	score2 < score && score2 < iscore	409:11:8931:8963	3030191	0	True				
ANR	3032593	AndExpression	score2 < score && score2 < iscore		3030191	0		&&			
ANR	3032594	RelationalExpression	score2 < score		3030191	0		<			
ANR	3032595	Identifier	score2		3030191	0					
ANR	3032596	Identifier	score		3030191	1					
ANR	3032597	RelationalExpression	score2 < iscore		3030191	1		<			
ANR	3032598	Identifier	score2		3030191	0					
ANR	3032599	Identifier	iscore		3030191	1					
ANR	3032600	ReturnStatement	return score2 ;	411:12:8979:8992	3030191	1	True				
ANR	3032601	Identifier	score2		3030191	0					
ANR	3032602	IfStatement	if ( iscore < score )		3030191	122					
ANR	3032603	Condition	iscore < score	417:7:9011:9024	3030191	0	True				
ANR	3032604	RelationalExpression	iscore < score		3030191	0		<			
ANR	3032605	Identifier	iscore		3030191	0					
ANR	3032606	Identifier	score		3030191	1					
ANR	3032607	CompoundStatement		417:22:8958:8958	3030191	1					
ANR	3032608	ExpressionStatement	"pred_mv ( s , & pmx , & pmy , 0 , left , top , tr )"	419:8:9037:9077	3030191	0	True				
ANR	3032609	CallExpression	"pred_mv ( s , & pmx , & pmy , 0 , left , top , tr )"		3030191	0					
ANR	3032610	Callee	pred_mv		3030191	0					
ANR	3032611	Identifier	pred_mv		3030191	0					
ANR	3032612	ArgumentList	s		3030191	1					
ANR	3032613	Argument	s		3030191	0					
ANR	3032614	Identifier	s		3030191	0					
ANR	3032615	Argument	& pmx		3030191	1					
ANR	3032616	UnaryOperationExpression	& pmx		3030191	0					
ANR	3032617	UnaryOperator	&		3030191	0					
ANR	3032618	Identifier	pmx		3030191	1					
ANR	3032619	Argument	& pmy		3030191	2					
ANR	3032620	UnaryOperationExpression	& pmy		3030191	0					
ANR	3032621	UnaryOperator	&		3030191	0					
ANR	3032622	Identifier	pmy		3030191	1					
ANR	3032623	Argument	0		3030191	3					
ANR	3032624	PrimaryExpression	0		3030191	0					
ANR	3032625	Argument	left		3030191	4					
ANR	3032626	Identifier	left		3030191	0					
ANR	3032627	Argument	top		3030191	5					
ANR	3032628	Identifier	top		3030191	0					
ANR	3032629	Argument	tr		3030191	6					
ANR	3032630	Identifier	tr		3030191	0					
ANR	3032631	ExpressionStatement	"memcpy ( pbbak , i_buffer , i_len )"	421:8:9088:9118	3030191	1	True				
ANR	3032632	CallExpression	"memcpy ( pbbak , i_buffer , i_len )"		3030191	0					
ANR	3032633	Callee	memcpy		3030191	0					
ANR	3032634	Identifier	memcpy		3030191	0					
ANR	3032635	ArgumentList	pbbak		3030191	1					
ANR	3032636	Argument	pbbak		3030191	0					
ANR	3032637	Identifier	pbbak		3030191	0					
ANR	3032638	Argument	i_buffer		3030191	1					
ANR	3032639	Identifier	i_buffer		3030191	0					
ANR	3032640	Argument	i_len		3030191	2					
ANR	3032641	Identifier	i_len		3030191	0					
ANR	3032642	ExpressionStatement	s -> c = ic	423:8:9129:9137	3030191	2	True				
ANR	3032643	AssignmentExpression	s -> c = ic		3030191	0		=			
ANR	3032644	PtrMemberAccess	s -> c		3030191	0					
ANR	3032645	Identifier	s		3030191	0					
ANR	3032646	Identifier	c		3030191	1					
ANR	3032647	Identifier	ic		3030191	1					
ANR	3032648	ExpressionStatement	s -> c . bytestream_start = pbbak_start	425:8:9148:9182	3030191	3	True				
ANR	3032649	AssignmentExpression	s -> c . bytestream_start = pbbak_start		3030191	0		=			
ANR	3032650	MemberAccess	s -> c . bytestream_start		3030191	0					
ANR	3032651	PtrMemberAccess	s -> c		3030191	0					
ANR	3032652	Identifier	s		3030191	0					
ANR	3032653	Identifier	c		3030191	1					
ANR	3032654	Identifier	bytestream_start		3030191	1					
ANR	3032655	Identifier	pbbak_start		3030191	1					
ANR	3032656	ExpressionStatement	s -> c . bytestream = pbbak + i_len	427:8:9193:9223	3030191	4	True				
ANR	3032657	AssignmentExpression	s -> c . bytestream = pbbak + i_len		3030191	0		=			
ANR	3032658	MemberAccess	s -> c . bytestream		3030191	0					
ANR	3032659	PtrMemberAccess	s -> c		3030191	0					
ANR	3032660	Identifier	s		3030191	0					
ANR	3032661	Identifier	c		3030191	1					
ANR	3032662	Identifier	bytestream		3030191	1					
ANR	3032663	AdditiveExpression	pbbak + i_len		3030191	1		+			
ANR	3032664	Identifier	pbbak		3030191	0					
ANR	3032665	Identifier	i_len		3030191	1					
ANR	3032666	ExpressionStatement	"set_blocks ( s , level , x , y , l , cb , cr , pmx , pmy , 0 , BLOCK_INTRA )"	429:8:9234:9297	3030191	5	True				
ANR	3032667	CallExpression	"set_blocks ( s , level , x , y , l , cb , cr , pmx , pmy , 0 , BLOCK_INTRA )"		3030191	0					
ANR	3032668	Callee	set_blocks		3030191	0					
ANR	3032669	Identifier	set_blocks		3030191	0					
ANR	3032670	ArgumentList	s		3030191	1					
ANR	3032671	Argument	s		3030191	0					
ANR	3032672	Identifier	s		3030191	0					
ANR	3032673	Argument	level		3030191	1					
ANR	3032674	Identifier	level		3030191	0					
ANR	3032675	Argument	x		3030191	2					
ANR	3032676	Identifier	x		3030191	0					
ANR	3032677	Argument	y		3030191	3					
ANR	3032678	Identifier	y		3030191	0					
ANR	3032679	Argument	l		3030191	4					
ANR	3032680	Identifier	l		3030191	0					
ANR	3032681	Argument	cb		3030191	5					
ANR	3032682	Identifier	cb		3030191	0					
ANR	3032683	Argument	cr		3030191	6					
ANR	3032684	Identifier	cr		3030191	0					
ANR	3032685	Argument	pmx		3030191	7					
ANR	3032686	Identifier	pmx		3030191	0					
ANR	3032687	Argument	pmy		3030191	8					
ANR	3032688	Identifier	pmy		3030191	0					
ANR	3032689	Argument	0		3030191	9					
ANR	3032690	PrimaryExpression	0		3030191	0					
ANR	3032691	Argument	BLOCK_INTRA		3030191	10					
ANR	3032692	Identifier	BLOCK_INTRA		3030191	0					
ANR	3032693	ExpressionStatement	"memcpy ( s -> block_state , i_state , sizeof ( s -> block_state ) )"	431:8:9308:9363	3030191	6	True				
ANR	3032694	CallExpression	"memcpy ( s -> block_state , i_state , sizeof ( s -> block_state ) )"		3030191	0					
ANR	3032695	Callee	memcpy		3030191	0					
ANR	3032696	Identifier	memcpy		3030191	0					
ANR	3032697	ArgumentList	s -> block_state		3030191	1					
ANR	3032698	Argument	s -> block_state		3030191	0					
ANR	3032699	PtrMemberAccess	s -> block_state		3030191	0					
ANR	3032700	Identifier	s		3030191	0					
ANR	3032701	Identifier	block_state		3030191	1					
ANR	3032702	Argument	i_state		3030191	1					
ANR	3032703	Identifier	i_state		3030191	0					
ANR	3032704	Argument	sizeof ( s -> block_state )		3030191	2					
ANR	3032705	SizeofExpression	sizeof ( s -> block_state )		3030191	0					
ANR	3032706	Sizeof	sizeof		3030191	0					
ANR	3032707	PtrMemberAccess	s -> block_state		3030191	1					
ANR	3032708	Identifier	s		3030191	0					
ANR	3032709	Identifier	block_state		3030191	1					
ANR	3032710	ReturnStatement	return iscore ;	433:8:9374:9387	3030191	7	True				
ANR	3032711	Identifier	iscore		3030191	0					
ANR	3032712	ElseStatement	else		3030191	0					
ANR	3032713	CompoundStatement		435:9:9331:9331	3030191	0					
ANR	3032714	ExpressionStatement	"memcpy ( pbbak , p_buffer , p_len )"	437:8:9410:9440	3030191	0	True				
ANR	3032715	CallExpression	"memcpy ( pbbak , p_buffer , p_len )"		3030191	0					
ANR	3032716	Callee	memcpy		3030191	0					
ANR	3032717	Identifier	memcpy		3030191	0					
ANR	3032718	ArgumentList	pbbak		3030191	1					
ANR	3032719	Argument	pbbak		3030191	0					
ANR	3032720	Identifier	pbbak		3030191	0					
ANR	3032721	Argument	p_buffer		3030191	1					
ANR	3032722	Identifier	p_buffer		3030191	0					
ANR	3032723	Argument	p_len		3030191	2					
ANR	3032724	Identifier	p_len		3030191	0					
ANR	3032725	ExpressionStatement	s -> c = pc	439:8:9451:9459	3030191	1	True				
ANR	3032726	AssignmentExpression	s -> c = pc		3030191	0		=			
ANR	3032727	PtrMemberAccess	s -> c		3030191	0					
ANR	3032728	Identifier	s		3030191	0					
ANR	3032729	Identifier	c		3030191	1					
ANR	3032730	Identifier	pc		3030191	1					
ANR	3032731	ExpressionStatement	s -> c . bytestream_start = pbbak_start	441:8:9470:9504	3030191	2	True				
ANR	3032732	AssignmentExpression	s -> c . bytestream_start = pbbak_start		3030191	0		=			
ANR	3032733	MemberAccess	s -> c . bytestream_start		3030191	0					
ANR	3032734	PtrMemberAccess	s -> c		3030191	0					
ANR	3032735	Identifier	s		3030191	0					
ANR	3032736	Identifier	c		3030191	1					
ANR	3032737	Identifier	bytestream_start		3030191	1					
ANR	3032738	Identifier	pbbak_start		3030191	1					
ANR	3032739	ExpressionStatement	s -> c . bytestream = pbbak + p_len	443:8:9515:9545	3030191	3	True				
ANR	3032740	AssignmentExpression	s -> c . bytestream = pbbak + p_len		3030191	0		=			
ANR	3032741	MemberAccess	s -> c . bytestream		3030191	0					
ANR	3032742	PtrMemberAccess	s -> c		3030191	0					
ANR	3032743	Identifier	s		3030191	0					
ANR	3032744	Identifier	c		3030191	1					
ANR	3032745	Identifier	bytestream		3030191	1					
ANR	3032746	AdditiveExpression	pbbak + p_len		3030191	1		+			
ANR	3032747	Identifier	pbbak		3030191	0					
ANR	3032748	Identifier	p_len		3030191	1					
ANR	3032749	ExpressionStatement	"set_blocks ( s , level , x , y , pl , pcb , pcr , mx , my , best_ref , 0 )"	445:8:9556:9617	3030191	4	True				
ANR	3032750	CallExpression	"set_blocks ( s , level , x , y , pl , pcb , pcr , mx , my , best_ref , 0 )"		3030191	0					
ANR	3032751	Callee	set_blocks		3030191	0					
ANR	3032752	Identifier	set_blocks		3030191	0					
ANR	3032753	ArgumentList	s		3030191	1					
ANR	3032754	Argument	s		3030191	0					
ANR	3032755	Identifier	s		3030191	0					
ANR	3032756	Argument	level		3030191	1					
ANR	3032757	Identifier	level		3030191	0					
ANR	3032758	Argument	x		3030191	2					
ANR	3032759	Identifier	x		3030191	0					
ANR	3032760	Argument	y		3030191	3					
ANR	3032761	Identifier	y		3030191	0					
ANR	3032762	Argument	pl		3030191	4					
ANR	3032763	Identifier	pl		3030191	0					
ANR	3032764	Argument	pcb		3030191	5					
ANR	3032765	Identifier	pcb		3030191	0					
ANR	3032766	Argument	pcr		3030191	6					
ANR	3032767	Identifier	pcr		3030191	0					
ANR	3032768	Argument	mx		3030191	7					
ANR	3032769	Identifier	mx		3030191	0					
ANR	3032770	Argument	my		3030191	8					
ANR	3032771	Identifier	my		3030191	0					
ANR	3032772	Argument	best_ref		3030191	9					
ANR	3032773	Identifier	best_ref		3030191	0					
ANR	3032774	Argument	0		3030191	10					
ANR	3032775	PrimaryExpression	0		3030191	0					
ANR	3032776	ExpressionStatement	"memcpy ( s -> block_state , p_state , sizeof ( s -> block_state ) )"	447:8:9628:9683	3030191	5	True				
ANR	3032777	CallExpression	"memcpy ( s -> block_state , p_state , sizeof ( s -> block_state ) )"		3030191	0					
ANR	3032778	Callee	memcpy		3030191	0					
ANR	3032779	Identifier	memcpy		3030191	0					
ANR	3032780	ArgumentList	s -> block_state		3030191	1					
ANR	3032781	Argument	s -> block_state		3030191	0					
ANR	3032782	PtrMemberAccess	s -> block_state		3030191	0					
ANR	3032783	Identifier	s		3030191	0					
ANR	3032784	Identifier	block_state		3030191	1					
ANR	3032785	Argument	p_state		3030191	1					
ANR	3032786	Identifier	p_state		3030191	0					
ANR	3032787	Argument	sizeof ( s -> block_state )		3030191	2					
ANR	3032788	SizeofExpression	sizeof ( s -> block_state )		3030191	0					
ANR	3032789	Sizeof	sizeof		3030191	0					
ANR	3032790	PtrMemberAccess	s -> block_state		3030191	1					
ANR	3032791	Identifier	s		3030191	0					
ANR	3032792	Identifier	block_state		3030191	1					
ANR	3032793	ReturnStatement	return score ;	449:8:9694:9706	3030191	6	True				
ANR	3032794	Identifier	score		3030191	0					
ANR	3032795	ReturnType	static int		3030191	1					
ANR	3032796	Identifier	encode_q_branch		3030191	2					
ANR	3032797	ParameterList	"SnowContext * s , int level , int x , int y"		3030191	3					
ANR	3032798	Parameter	SnowContext * s	1:27:27:40	3030191	0	True				
ANR	3032799	ParameterType	SnowContext *		3030191	0					
ANR	3032800	Identifier	s		3030191	1					
ANR	3032801	Parameter	int level	1:43:43:51	3030191	1	True				
ANR	3032802	ParameterType	int		3030191	0					
ANR	3032803	Identifier	level		3030191	1					
ANR	3032804	Parameter	int x	1:54:54:58	3030191	2	True				
ANR	3032805	ParameterType	int		3030191	0					
ANR	3032806	Identifier	x		3030191	1					
ANR	3032807	Parameter	int y	1:61:61:65	3030191	3	True				
ANR	3032808	ParameterType	int		3030191	0					
ANR	3032809	Identifier	y		3030191	1					
ANR	3032810	CFGEntryNode	ENTRY		3030191		True				
ANR	3032811	CFGExitNode	EXIT		3030191		True				
ANR	3032812	CFGErrorNode	ERROR		3030191		True				
ANR	3032813	CFGErrorNode	ERROR		3030191		True				
ANR	3032814	Symbol	score2		3030191						
ANR	3032815	Symbol	s -> b_width		3030191						
ANR	3032816	Symbol	ff_sqrt		3030191						
ANR	3032817	Symbol	base_bits		3030191						
ANR	3032818	Symbol	shift		3030191						
ANR	3032819	Symbol	s -> c . bytestream		3030191						
ANR	3032820	Symbol	s -> keyframe		3030191						
ANR	3032821	Symbol	stride		3030191						
ANR	3032822	Symbol	s -> current_picture		3030191						
ANR	3032823	Symbol	left -> ref		3030191						
ANR	3032824	Symbol	score		3030191						
ANR	3032825	Symbol	* * * ref		3030191						
ANR	3032826	Symbol	left -> mx		3030191						
ANR	3032827	Symbol	pmx		3030191						
ANR	3032828	Symbol	left -> my		3030191						
ANR	3032829	Symbol	c -> mb_penalty_factor		3030191						
ANR	3032830	Symbol	pmy		3030191						
ANR	3032831	Symbol	c -> mv_penalty		3030191						
ANR	3032832	Symbol	* tr		3030191						
ANR	3032833	Symbol	vard		3030191						
ANR	3032834	Symbol	left -> level		3030191						
ANR	3032835	Symbol	varc		3030191						
ANR	3032836	Symbol	i_state		3030191						
ANR	3032837	Symbol	c -> avctx -> mb_cmp		3030191						
ANR	3032838	Symbol	& s -> c		3030191						
ANR	3032839	Symbol	left		3030191						
ANR	3032840	Symbol	* * s -> last_picture		3030191						
ANR	3032841	Symbol	& pc		3030191						
ANR	3032842	Symbol	* tl		3030191						
ANR	3032843	Symbol	ff_get_mb_score		3030191						
ANR	3032844	Symbol	* top		3030191						
ANR	3032845	Symbol	tr -> level		3030191						
ANR	3032846	Symbol	c -> ymax		3030191						
ANR	3032847	Symbol	c -> uvstride		3030191						
ANR	3032848	Symbol	* c -> avctx		3030191						
ANR	3032849	Symbol	* * s -> ref_mvs		3030191						
ANR	3032850	Symbol	* * * s -> ref_mvs		3030191						
ANR	3032851	Symbol	sum		3030191						
ANR	3032852	Symbol	top -> ref		3030191						
ANR	3032853	Symbol	P		3030191						
ANR	3032854	Symbol	c -> avctx -> me_sub_cmp		3030191						
ANR	3032855	Symbol	P_TOP		3030191						
ANR	3032856	Symbol	* s -> last_picture		3030191						
ANR	3032857	Symbol	cb		3030191						
ANR	3032858	Symbol	top -> my		3030191						
ANR	3032859	Symbol	c		3030191						
ANR	3032860	Symbol	uvstride		3030191						
ANR	3032861	Symbol	BLOCK_INTRA		3030191						
ANR	3032862	Symbol	LOG2_MB_SIZE		3030191						
ANR	3032863	Symbol	h		3030191						
ANR	3032864	Symbol	FFABS		3030191						
ANR	3032865	Symbol	& ref_my		3030191						
ANR	3032866	Symbol	& ref_mx		3030191						
ANR	3032867	Symbol	right		3030191						
ANR	3032868	Symbol	l		3030191						
ANR	3032869	Symbol	best_ref		3030191						
ANR	3032870	Symbol	cr		3030191						
ANR	3032871	Symbol	i_buffer		3030191						
ANR	3032872	Symbol	s		3030191						
ANR	3032873	Symbol	s -> lambda2		3030191						
ANR	3032874	Symbol	c -> penalty_factor		3030191						
ANR	3032875	Symbol	w		3030191						
ANR	3032876	Symbol	x		3030191						
ANR	3032877	Symbol	tl		3030191						
ANR	3032878	Symbol	y		3030191						
ANR	3032879	Symbol	iscore		3030191						
ANR	3032880	Symbol	s -> block		3030191						
ANR	3032881	Symbol	tr		3030191						
ANR	3032882	Symbol	s -> input_picture		3030191						
ANR	3032883	Symbol	* right		3030191						
ANR	3032884	Symbol	top -> mx		3030191						
ANR	3032885	Symbol	* P_TOPRIGHT		3030191						
ANR	3032886	Symbol	s -> ref_scores		3030191						
ANR	3032887	Symbol	pbbak		3030191						
ANR	3032888	Symbol	P_TOPRIGHT		3030191						
ANR	3032889	Symbol	s -> c . bytestream_start		3030191						
ANR	3032890	Symbol	ref_mx		3030191						
ANR	3032891	Symbol	ref		3030191						
ANR	3032892	Symbol	ic . bytestream_start		3030191						
ANR	3032893	Symbol	AV_CODEC_FLAG_QPEL		3030191						
ANR	3032894	Symbol	s -> current_picture -> linesize		3030191						
ANR	3032895	Symbol	ref_my		3030191						
ANR	3032896	Symbol	* s -> ref_mvs		3030191						
ANR	3032897	Symbol	* s -> avctx		3030191						
ANR	3032898	Symbol	* * c		3030191						
ANR	3032899	Symbol	c -> sub_penalty_factor		3030191						
ANR	3032900	Symbol	* s -> current_picture -> linesize		3030191						
ANR	3032901	Symbol	* current_data		3030191						
ANR	3032902	Symbol	c -> avctx		3030191						
ANR	3032903	Symbol	s -> m . qscale		3030191						
ANR	3032904	Symbol	s -> block_state		3030191						
ANR	3032905	Symbol	* P_MEDIAN		3030191						
ANR	3032906	Symbol	s -> lambda		3030191						
ANR	3032907	Symbol	s -> m . mb_y		3030191						
ANR	3032908	Symbol	s -> m . mb_x		3030191						
ANR	3032909	Symbol	last_mv		3030191						
ANR	3032910	Symbol	tl -> level		3030191						
ANR	3032911	Symbol	* * last_mv		3030191						
ANR	3032912	Symbol	pix_norm1		3030191						
ANR	3032913	Symbol	P_MEDIAN		3030191						
ANR	3032914	Symbol	i_len		3030191						
ANR	3032915	Symbol	& s -> m		3030191						
ANR	3032916	Symbol	pcb		3030191						
ANR	3032917	Symbol	* P_LEFT		3030191						
ANR	3032918	Symbol	mid_pred		3030191						
ANR	3032919	Symbol	* * index		3030191						
ANR	3032920	Symbol	pcr		3030191						
ANR	3032921	Symbol	c -> xmax		3030191						
ANR	3032922	Symbol	left -> type		3030191						
ANR	3032923	Symbol	* * ref		3030191						
ANR	3032924	Symbol	* s -> ref_scores		3030191						
ANR	3032925	Symbol	my_context		3030191						
ANR	3032926	Symbol	rem_depth		3030191						
ANR	3032927	Symbol	s -> block [ index ] . my		3030191						
ANR	3032928	Symbol	s -> block [ index ] . mx		3030191						
ANR	3032929	Symbol	ff_epzs_motion_search		3030191						
ANR	3032930	Symbol	& pmy		3030191						
ANR	3032931	Symbol	pix_sum		3030191						
ANR	3032932	Symbol	& pmx		3030191						
ANR	3032933	Symbol	* index		3030191						
ANR	3032934	Symbol	right -> mx		3030191						
ANR	3032935	Symbol	pc . bytestream		3030191						
ANR	3032936	Symbol	right -> my		3030191						
ANR	3032937	Symbol	bottom -> my		3030191						
ANR	3032938	Symbol	bottom -> mx		3030191						
ANR	3032939	Symbol	c -> skip		3030191						
ANR	3032940	Symbol	* left -> color		3030191						
ANR	3032941	Symbol	ic		3030191						
ANR	3032942	Symbol	p_buffer		3030191						
ANR	3032943	Symbol	c -> pred_y		3030191						
ANR	3032944	Symbol	c -> pred_x		3030191						
ANR	3032945	Symbol	index		3030191						
ANR	3032946	Symbol	s -> avctx -> flags		3030191						
ANR	3032947	Symbol	pbbak_start		3030191						
ANR	3032948	Symbol	* * * s		3030191						
ANR	3032949	Symbol	qpel		3030191						
ANR	3032950	Symbol	s -> ref_mvs		3030191						
ANR	3032951	Symbol	current_data		3030191						
ANR	3032952	Symbol	* * s -> ref_scores		3030191						
ANR	3032953	Symbol	get_rac_count		3030191						
ANR	3032954	Symbol	av_log2		3030191						
ANR	3032955	Symbol	& ic		3030191						
ANR	3032956	Symbol	& s -> m . me		3030191						
ANR	3032957	Symbol	s -> block_max_depth		3030191						
ANR	3032958	Symbol	ref_score		3030191						
ANR	3032959	Symbol	s -> last_picture [ ref ] -> data		3030191						
ANR	3032960	Symbol	* * s -> input_picture		3030191						
ANR	3032961	Symbol	s -> c		3030191						
ANR	3032962	Symbol	top		3030191						
ANR	3032963	Symbol	c -> ymin		3030191						
ANR	3032964	Symbol	* * s		3030191						
ANR	3032965	Symbol	INT_MAX		3030191						
ANR	3032966	Symbol	s -> last_picture		3030191						
ANR	3032967	Symbol	s -> m		3030191						
ANR	3032968	Symbol	ref_context		3030191						
ANR	3032969	Symbol	p_state		3030191						
ANR	3032970	Symbol	* s -> current_picture		3030191						
ANR	3032971	Symbol	c -> stride		3030191						
ANR	3032972	Symbol	* last_mv		3030191						
ANR	3032973	Symbol	s -> b_height		3030191						
ANR	3032974	Symbol	P_LEFT		3030191						
ANR	3032975	Symbol	s -> nb_planes		3030191						
ANR	3032976	Symbol	* * * * s		3030191						
ANR	3032977	Symbol	s -> chroma_h_shift		3030191						
ANR	3032978	Symbol	p_len		3030191						
ANR	3032979	Symbol	& null_block		3030191						
ANR	3032980	Symbol	tr -> mx		3030191						
ANR	3032981	Symbol	tr -> my		3030191						
ANR	3032982	Symbol	* left		3030191						
ANR	3032983	Symbol	* * s -> current_picture		3030191						
ANR	3032984	Symbol	c -> current_mv_penalty		3030191						
ANR	3032985	Symbol	NULL		3030191						
ANR	3032986	Symbol	* P_TOP		3030191						
ANR	3032987	Symbol	level		3030191						
ANR	3032988	Symbol	bottom		3030191						
ANR	3032989	Symbol	MAX_MV		3030191						
ANR	3032990	Symbol	* bottom		3030191						
ANR	3032991	Symbol	* * left		3030191						
ANR	3032992	Symbol	mx		3030191						
ANR	3032993	Symbol	top -> level		3030191						
ANR	3032994	Symbol	my		3030191						
ANR	3032995	Symbol	get_penalty_factor		3030191						
ANR	3032996	Symbol	c -> scene_change_score		3030191						
ANR	3032997	Symbol	top -> type		3030191						
ANR	3032998	Symbol	s -> chroma_v_shift		3030191						
ANR	3032999	Symbol	trx		3030191						
ANR	3033000	Symbol	mx_context		3030191						
ANR	3033001	Symbol	s -> avctx		3030191						
ANR	3033002	Symbol	left -> color		3030191						
ANR	3033003	Symbol	* c -> mv_penalty		3030191						
ANR	3033004	Symbol	ic . bytestream		3030191						
ANR	3033005	Symbol	* s -> input_picture -> data		3030191						
ANR	3033006	Symbol	s -> m . mb_stride		3030191						
ANR	3033007	Symbol	* P		3030191						
ANR	3033008	Symbol	s_context		3030191						
ANR	3033009	Symbol	c -> avctx -> me_cmp		3030191						
ANR	3033010	Symbol	FF_LAMBDA_SHIFT		3030191						
ANR	3033011	Symbol	* c		3030191						
ANR	3033012	Symbol	* s -> input_picture		3030191						
ANR	3033013	Symbol	* s -> block		3030191						
ANR	3033014	Symbol	c -> xmin		3030191						
ANR	3033015	Symbol	encode_q_branch		3030191						
ANR	3033016	Symbol	pc		3030191						
ANR	3033017	Symbol	pc . bytestream_start		3030191						
ANR	3033018	Symbol	c -> sub_motion_search		3030191						
ANR	3033019	Symbol	block_s		3030191						
ANR	3033020	Symbol	s -> input_picture -> data		3030191						
ANR	3033021	Symbol	s -> ref_frames		3030191						
ANR	3033022	Symbol	s -> m . f_code		3030191						
ANR	3033023	Symbol	pl		3030191						
ANR	3033024	Symbol	* s		3030191						
ANR	3033025	Symbol	block_w		3030191						
ANR	3033026	Symbol	* ref		3030191						
