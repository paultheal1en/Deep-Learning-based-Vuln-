command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7218694	File	/home/p4ultr4n/workplace/ReVeal/raw_code/rac_get_model_sym_1.c								
ANR	7218695	Function	rac_get_model_sym	1:0:0:729							
ANR	7218696	FunctionDef	"rac_get_model_sym (RangeCoder * c , Model * m)"		7218695	0					
ANR	7218697	CompoundStatement		3:0:55:729	7218695	0					
ANR	7218698	IdentifierDeclStatement	"int prob , prob2 , helper , val ;"	5:4:62:90	7218695	0	True				
ANR	7218699	IdentifierDecl	prob		7218695	0					
ANR	7218700	IdentifierDeclType	int		7218695	0					
ANR	7218701	Identifier	prob		7218695	1					
ANR	7218702	IdentifierDecl	prob2		7218695	1					
ANR	7218703	IdentifierDeclType	int		7218695	0					
ANR	7218704	Identifier	prob2		7218695	1					
ANR	7218705	IdentifierDecl	helper		7218695	2					
ANR	7218706	IdentifierDeclType	int		7218695	0					
ANR	7218707	Identifier	helper		7218695	1					
ANR	7218708	IdentifierDecl	val		7218695	3					
ANR	7218709	IdentifierDeclType	int		7218695	0					
ANR	7218710	Identifier	val		7218695	1					
ANR	7218711	IdentifierDeclStatement	"int end , end2 ;"	7:4:97:110	7218695	1	True				
ANR	7218712	IdentifierDecl	end		7218695	0					
ANR	7218713	IdentifierDeclType	int		7218695	0					
ANR	7218714	Identifier	end		7218695	1					
ANR	7218715	IdentifierDecl	end2		7218695	1					
ANR	7218716	IdentifierDeclType	int		7218695	0					
ANR	7218717	Identifier	end2		7218695	1					
ANR	7218718	ExpressionStatement	prob = 0	11:4:119:133	7218695	2	True				
ANR	7218719	AssignmentExpression	prob = 0		7218695	0		=			
ANR	7218720	Identifier	prob		7218695	0					
ANR	7218721	PrimaryExpression	0		7218695	1					
ANR	7218722	ExpressionStatement	prob2 = c -> range	13:4:140:161	7218695	3	True				
ANR	7218723	AssignmentExpression	prob2 = c -> range		7218695	0		=			
ANR	7218724	Identifier	prob2		7218695	0					
ANR	7218725	PtrMemberAccess	c -> range		7218695	1					
ANR	7218726	Identifier	c		7218695	0					
ANR	7218727	Identifier	range		7218695	1					
ANR	7218728	ExpressionStatement	c -> range >>= MODEL_SCALE	15:4:168:192	7218695	4	True				
ANR	7218729	AssignmentExpression	c -> range >>= MODEL_SCALE		7218695	0		>>=			
ANR	7218730	PtrMemberAccess	c -> range		7218695	0					
ANR	7218731	Identifier	c		7218695	0					
ANR	7218732	Identifier	range		7218695	1					
ANR	7218733	Identifier	MODEL_SCALE		7218695	1					
ANR	7218734	ExpressionStatement	val = 0	17:4:199:213	7218695	5	True				
ANR	7218735	AssignmentExpression	val = 0		7218695	0		=			
ANR	7218736	Identifier	val		7218695	0					
ANR	7218737	PrimaryExpression	0		7218695	1					
ANR	7218738	ExpressionStatement	end = m -> num_syms >> 1	19:4:220:249	7218695	6	True				
ANR	7218739	AssignmentExpression	end = m -> num_syms >> 1		7218695	0		=			
ANR	7218740	Identifier	end		7218695	0					
ANR	7218741	ShiftExpression	m -> num_syms >> 1		7218695	1		>>			
ANR	7218742	PtrMemberAccess	m -> num_syms		7218695	0					
ANR	7218743	Identifier	m		7218695	0					
ANR	7218744	Identifier	num_syms		7218695	1					
ANR	7218745	PrimaryExpression	1		7218695	1					
ANR	7218746	ExpressionStatement	end2 = m -> num_syms	21:4:256:280	7218695	7	True				
ANR	7218747	AssignmentExpression	end2 = m -> num_syms		7218695	0		=			
ANR	7218748	Identifier	end2		7218695	0					
ANR	7218749	PtrMemberAccess	m -> num_syms		7218695	1					
ANR	7218750	Identifier	m		7218695	0					
ANR	7218751	Identifier	num_syms		7218695	1					
ANR	7218752	DoStatement	do		7218695	8					
ANR	7218753	CompoundStatement		21:7:234:234	7218695	0					
ANR	7218754	ExpressionStatement	helper = m -> freqs [ end ] * c -> range	25:8:301:334	7218695	0	True				
ANR	7218755	AssignmentExpression	helper = m -> freqs [ end ] * c -> range		7218695	0		=			
ANR	7218756	Identifier	helper		7218695	0					
ANR	7218757	MultiplicativeExpression	m -> freqs [ end ] * c -> range		7218695	1		*			
ANR	7218758	ArrayIndexing	m -> freqs [ end ]		7218695	0					
ANR	7218759	PtrMemberAccess	m -> freqs		7218695	0					
ANR	7218760	Identifier	m		7218695	0					
ANR	7218761	Identifier	freqs		7218695	1					
ANR	7218762	Identifier	end		7218695	1					
ANR	7218763	PtrMemberAccess	c -> range		7218695	1					
ANR	7218764	Identifier	c		7218695	0					
ANR	7218765	Identifier	range		7218695	1					
ANR	7218766	IfStatement	if ( helper <= c -> low )		7218695	1					
ANR	7218767	Condition	helper <= c -> low	27:12:349:364	7218695	0	True				
ANR	7218768	RelationalExpression	helper <= c -> low		7218695	0		<=			
ANR	7218769	Identifier	helper		7218695	0					
ANR	7218770	PtrMemberAccess	c -> low		7218695	1					
ANR	7218771	Identifier	c		7218695	0					
ANR	7218772	Identifier	low		7218695	1					
ANR	7218773	CompoundStatement		25:30:311:311	7218695	1					
ANR	7218774	ExpressionStatement	val = end	29:12:382:393	7218695	0	True				
ANR	7218775	AssignmentExpression	val = end		7218695	0		=			
ANR	7218776	Identifier	val		7218695	0					
ANR	7218777	Identifier	end		7218695	1					
ANR	7218778	ExpressionStatement	prob = helper	31:12:408:422	7218695	1	True				
ANR	7218779	AssignmentExpression	prob = helper		7218695	0		=			
ANR	7218780	Identifier	prob		7218695	0					
ANR	7218781	Identifier	helper		7218695	1					
ANR	7218782	ElseStatement	else		7218695	0					
ANR	7218783	CompoundStatement		31:15:384:384	7218695	0					
ANR	7218784	ExpressionStatement	end2 = end	35:12:455:466	7218695	0	True				
ANR	7218785	AssignmentExpression	end2 = end		7218695	0		=			
ANR	7218786	Identifier	end2		7218695	0					
ANR	7218787	Identifier	end		7218695	1					
ANR	7218788	ExpressionStatement	prob2 = helper	37:12:481:495	7218695	1	True				
ANR	7218789	AssignmentExpression	prob2 = helper		7218695	0		=			
ANR	7218790	Identifier	prob2		7218695	0					
ANR	7218791	Identifier	helper		7218695	1					
ANR	7218792	ExpressionStatement	end = ( end2 + val ) >> 1	41:8:517:540	7218695	2	True				
ANR	7218793	AssignmentExpression	end = ( end2 + val ) >> 1		7218695	0		=			
ANR	7218794	Identifier	end		7218695	0					
ANR	7218795	ShiftExpression	( end2 + val ) >> 1		7218695	1		>>			
ANR	7218796	AdditiveExpression	end2 + val		7218695	0		+			
ANR	7218797	Identifier	end2		7218695	0					
ANR	7218798	Identifier	val		7218695	1					
ANR	7218799	PrimaryExpression	1		7218695	1					
ANR	7218800	Condition	end != val	43:13:556:565	7218695	1	True				
ANR	7218801	EqualityExpression	end != val		7218695	0		!=			
ANR	7218802	Identifier	end		7218695	0					
ANR	7218803	Identifier	val		7218695	1					
ANR	7218804	ExpressionStatement	c -> low -= prob	45:4:574:589	7218695	9	True				
ANR	7218805	AssignmentExpression	c -> low -= prob		7218695	0		-=			
ANR	7218806	PtrMemberAccess	c -> low		7218695	0					
ANR	7218807	Identifier	c		7218695	0					
ANR	7218808	Identifier	low		7218695	1					
ANR	7218809	Identifier	prob		7218695	1					
ANR	7218810	ExpressionStatement	c -> range = prob2 - prob	47:4:596:619	7218695	10	True				
ANR	7218811	AssignmentExpression	c -> range = prob2 - prob		7218695	0		=			
ANR	7218812	PtrMemberAccess	c -> range		7218695	0					
ANR	7218813	Identifier	c		7218695	0					
ANR	7218814	Identifier	range		7218695	1					
ANR	7218815	AdditiveExpression	prob2 - prob		7218695	1		-			
ANR	7218816	Identifier	prob2		7218695	0					
ANR	7218817	Identifier	prob		7218695	1					
ANR	7218818	IfStatement	if ( c -> range < RAC_BOTTOM )		7218695	11					
ANR	7218819	Condition	c -> range < RAC_BOTTOM	49:8:630:650	7218695	0	True				
ANR	7218820	RelationalExpression	c -> range < RAC_BOTTOM		7218695	0		<			
ANR	7218821	PtrMemberAccess	c -> range		7218695	0					
ANR	7218822	Identifier	c		7218695	0					
ANR	7218823	Identifier	range		7218695	1					
ANR	7218824	Identifier	RAC_BOTTOM		7218695	1					
ANR	7218825	ExpressionStatement	rac_normalise ( c )	51:8:662:678	7218695	1	True				
ANR	7218826	CallExpression	rac_normalise ( c )		7218695	0					
ANR	7218827	Callee	rac_normalise		7218695	0					
ANR	7218828	Identifier	rac_normalise		7218695	0					
ANR	7218829	ArgumentList	c		7218695	1					
ANR	7218830	Argument	c		7218695	0					
ANR	7218831	Identifier	c		7218695	0					
ANR	7218832	ExpressionStatement	"model_update ( m , val )"	55:4:687:707	7218695	12	True				
ANR	7218833	CallExpression	"model_update ( m , val )"		7218695	0					
ANR	7218834	Callee	model_update		7218695	0					
ANR	7218835	Identifier	model_update		7218695	0					
ANR	7218836	ArgumentList	m		7218695	1					
ANR	7218837	Argument	m		7218695	0					
ANR	7218838	Identifier	m		7218695	0					
ANR	7218839	Argument	val		7218695	1					
ANR	7218840	Identifier	val		7218695	0					
ANR	7218841	ReturnStatement	return val ;	59:4:716:726	7218695	13	True				
ANR	7218842	Identifier	val		7218695	0					
ANR	7218843	ReturnType	static int		7218695	1					
ANR	7218844	Identifier	rac_get_model_sym		7218695	2					
ANR	7218845	ParameterList	"RangeCoder * c , Model * m"		7218695	3					
ANR	7218846	Parameter	RangeCoder * c	1:29:29:41	7218695	0	True				
ANR	7218847	ParameterType	RangeCoder *		7218695	0					
ANR	7218848	Identifier	c		7218695	1					
ANR	7218849	Parameter	Model * m	1:44:44:51	7218695	1	True				
ANR	7218850	ParameterType	Model *		7218695	0					
ANR	7218851	Identifier	m		7218695	1					
ANR	7218852	CFGEntryNode	ENTRY		7218695		True				
ANR	7218853	CFGExitNode	EXIT		7218695		True				
ANR	7218854	Symbol	val		7218695						
ANR	7218855	Symbol	prob		7218695						
ANR	7218856	Symbol	prob2		7218695						
ANR	7218857	Symbol	c		7218695						
ANR	7218858	Symbol	* m -> freqs		7218695						
ANR	7218859	Symbol	m -> freqs		7218695						
ANR	7218860	Symbol	m		7218695						
ANR	7218861	Symbol	* c		7218695						
ANR	7218862	Symbol	MODEL_SCALE		7218695						
ANR	7218863	Symbol	c -> range		7218695						
ANR	7218864	Symbol	RAC_BOTTOM		7218695						
ANR	7218865	Symbol	helper		7218695						
ANR	7218866	Symbol	m -> num_syms		7218695						
ANR	7218867	Symbol	* m		7218695						
ANR	7218868	Symbol	end2		7218695						
ANR	7218869	Symbol	end		7218695						
ANR	7218870	Symbol	* end		7218695						
ANR	7218871	Symbol	c -> low		7218695						
ANR	7218872	Symbol	* * m		7218695						
