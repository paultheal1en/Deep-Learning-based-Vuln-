command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3007039	File	/home/p4ultr4n/workplace/ReVeal/raw_code/encode_mode_1.c								
ANR	3007040	Function	encode_mode	1:0:0:4371							
ANR	3007041	FunctionDef	"encode_mode (CinepakEncContext * s , CinepakMode mode , int h , int v1_size , int v4_size , int v4 , AVPicture * scratch_pict , strip_info * info , unsigned char * buf)"		3007040	0					
ANR	3007042	CompoundStatement		3:0:168:4371	3007040	0					
ANR	3007043	IdentifierDeclStatement	"int x , y , z , flags , bits , temp_size , header_ofs , ret = 0 , mb_count = s -> w * h / MB_AREA ;"	5:4:175:262	3007040	0	True				
ANR	3007044	IdentifierDecl	x		3007040	0					
ANR	3007045	IdentifierDeclType	int		3007040	0					
ANR	3007046	Identifier	x		3007040	1					
ANR	3007047	IdentifierDecl	y		3007040	1					
ANR	3007048	IdentifierDeclType	int		3007040	0					
ANR	3007049	Identifier	y		3007040	1					
ANR	3007050	IdentifierDecl	z		3007040	2					
ANR	3007051	IdentifierDeclType	int		3007040	0					
ANR	3007052	Identifier	z		3007040	1					
ANR	3007053	IdentifierDecl	flags		3007040	3					
ANR	3007054	IdentifierDeclType	int		3007040	0					
ANR	3007055	Identifier	flags		3007040	1					
ANR	3007056	IdentifierDecl	bits		3007040	4					
ANR	3007057	IdentifierDeclType	int		3007040	0					
ANR	3007058	Identifier	bits		3007040	1					
ANR	3007059	IdentifierDecl	temp_size		3007040	5					
ANR	3007060	IdentifierDeclType	int		3007040	0					
ANR	3007061	Identifier	temp_size		3007040	1					
ANR	3007062	IdentifierDecl	header_ofs		3007040	6					
ANR	3007063	IdentifierDeclType	int		3007040	0					
ANR	3007064	Identifier	header_ofs		3007040	1					
ANR	3007065	IdentifierDecl	ret = 0		3007040	7					
ANR	3007066	IdentifierDeclType	int		3007040	0					
ANR	3007067	Identifier	ret		3007040	1					
ANR	3007068	AssignmentExpression	ret = 0		3007040	2		=			
ANR	3007069	Identifier	ret		3007040	0					
ANR	3007070	PrimaryExpression	0		3007040	1					
ANR	3007071	IdentifierDecl	mb_count = s -> w * h / MB_AREA		3007040	8					
ANR	3007072	IdentifierDeclType	int		3007040	0					
ANR	3007073	Identifier	mb_count		3007040	1					
ANR	3007074	AssignmentExpression	mb_count = s -> w * h / MB_AREA		3007040	2		=			
ANR	3007075	Identifier	mb_count		3007040	0					
ANR	3007076	MultiplicativeExpression	s -> w * h / MB_AREA		3007040	1		*			
ANR	3007077	PtrMemberAccess	s -> w		3007040	0					
ANR	3007078	Identifier	s		3007040	0					
ANR	3007079	Identifier	w		3007040	1					
ANR	3007080	MultiplicativeExpression	h / MB_AREA		3007040	1		/			
ANR	3007081	Identifier	h		3007040	0					
ANR	3007082	Identifier	MB_AREA		3007040	1					
ANR	3007083	IdentifierDeclStatement	"int needs_extra_bit , should_write_temp ;"	7:4:269:307	3007040	1	True				
ANR	3007084	IdentifierDecl	needs_extra_bit		3007040	0					
ANR	3007085	IdentifierDeclType	int		3007040	0					
ANR	3007086	Identifier	needs_extra_bit		3007040	1					
ANR	3007087	IdentifierDecl	should_write_temp		3007040	1					
ANR	3007088	IdentifierDeclType	int		3007040	0					
ANR	3007089	Identifier	should_write_temp		3007040	1					
ANR	3007090	IdentifierDeclStatement	unsigned char temp [ 64 ] ;	9:4:314:336	3007040	2	True				
ANR	3007091	IdentifierDecl	temp [ 64 ]		3007040	0					
ANR	3007092	IdentifierDeclType	unsigned char [ 64 ]		3007040	0					
ANR	3007093	Identifier	temp		3007040	1					
ANR	3007094	PrimaryExpression	64		3007040	2					
ANR	3007095	IdentifierDeclStatement	mb_info * mb ;	11:4:385:396	3007040	3	True				
ANR	3007096	IdentifierDecl	* mb		3007040	0					
ANR	3007097	IdentifierDeclType	mb_info *		3007040	0					
ANR	3007098	Identifier	mb		3007040	1					
ANR	3007099	IdentifierDeclStatement	AVPicture sub_scratch ;	13:4:403:424	3007040	4	True				
ANR	3007100	IdentifierDecl	sub_scratch		3007040	0					
ANR	3007101	IdentifierDeclType	AVPicture		3007040	0					
ANR	3007102	Identifier	sub_scratch		3007040	1					
ANR	3007103	IfStatement	if ( v1_size )		3007040	5					
ANR	3007104	Condition	v1_size	19:7:460:466	3007040	0	True				
ANR	3007105	Identifier	v1_size		3007040	0					
ANR	3007106	ExpressionStatement	"ret += encode_codebook ( s , info -> v1_codebook , v1_size , 0x22 , 0x26 , buf + ret )"	21:8:478:554	3007040	1	True				
ANR	3007107	AssignmentExpression	"ret += encode_codebook ( s , info -> v1_codebook , v1_size , 0x22 , 0x26 , buf + ret )"		3007040	0		+=			
ANR	3007108	Identifier	ret		3007040	0					
ANR	3007109	CallExpression	"encode_codebook ( s , info -> v1_codebook , v1_size , 0x22 , 0x26 , buf + ret )"		3007040	1					
ANR	3007110	Callee	encode_codebook		3007040	0					
ANR	3007111	Identifier	encode_codebook		3007040	0					
ANR	3007112	ArgumentList	s		3007040	1					
ANR	3007113	Argument	s		3007040	0					
ANR	3007114	Identifier	s		3007040	0					
ANR	3007115	Argument	info -> v1_codebook		3007040	1					
ANR	3007116	PtrMemberAccess	info -> v1_codebook		3007040	0					
ANR	3007117	Identifier	info		3007040	0					
ANR	3007118	Identifier	v1_codebook		3007040	1					
ANR	3007119	Argument	v1_size		3007040	2					
ANR	3007120	Identifier	v1_size		3007040	0					
ANR	3007121	Argument	0x22		3007040	3					
ANR	3007122	PrimaryExpression	0x22		3007040	0					
ANR	3007123	Argument	0x26		3007040	4					
ANR	3007124	PrimaryExpression	0x26		3007040	0					
ANR	3007125	Argument	buf + ret		3007040	5					
ANR	3007126	AdditiveExpression	buf + ret		3007040	0		+			
ANR	3007127	Identifier	buf		3007040	0					
ANR	3007128	Identifier	ret		3007040	1					
ANR	3007129	IfStatement	if ( v4_size )		3007040	6					
ANR	3007130	Condition	v4_size	25:7:566:572	3007040	0	True				
ANR	3007131	Identifier	v4_size		3007040	0					
ANR	3007132	ExpressionStatement	"ret += encode_codebook ( s , info -> v4_codebook , v4_size , 0x20 , 0x24 , buf + ret )"	27:8:584:660	3007040	1	True				
ANR	3007133	AssignmentExpression	"ret += encode_codebook ( s , info -> v4_codebook , v4_size , 0x20 , 0x24 , buf + ret )"		3007040	0		+=			
ANR	3007134	Identifier	ret		3007040	0					
ANR	3007135	CallExpression	"encode_codebook ( s , info -> v4_codebook , v4_size , 0x20 , 0x24 , buf + ret )"		3007040	1					
ANR	3007136	Callee	encode_codebook		3007040	0					
ANR	3007137	Identifier	encode_codebook		3007040	0					
ANR	3007138	ArgumentList	s		3007040	1					
ANR	3007139	Argument	s		3007040	0					
ANR	3007140	Identifier	s		3007040	0					
ANR	3007141	Argument	info -> v4_codebook		3007040	1					
ANR	3007142	PtrMemberAccess	info -> v4_codebook		3007040	0					
ANR	3007143	Identifier	info		3007040	0					
ANR	3007144	Identifier	v4_codebook		3007040	1					
ANR	3007145	Argument	v4_size		3007040	2					
ANR	3007146	Identifier	v4_size		3007040	0					
ANR	3007147	Argument	0x20		3007040	3					
ANR	3007148	PrimaryExpression	0x20		3007040	0					
ANR	3007149	Argument	0x24		3007040	4					
ANR	3007150	PrimaryExpression	0x24		3007040	0					
ANR	3007151	Argument	buf + ret		3007040	5					
ANR	3007152	AdditiveExpression	buf + ret		3007040	0		+			
ANR	3007153	Identifier	buf		3007040	0					
ANR	3007154	Identifier	ret		3007040	1					
ANR	3007155	ForStatement	for ( z = y = 0 ; y < h ; y += MB_SIZE )		3007040	7					
ANR	3007156	ForInit	z = y = 0 ;	33:8:703:712	3007040	0	True				
ANR	3007157	AssignmentExpression	z = y = 0		3007040	0		=			
ANR	3007158	Identifier	z		3007040	0					
ANR	3007159	AssignmentExpression	y = 0		3007040	1		=			
ANR	3007160	Identifier	y		3007040	0					
ANR	3007161	PrimaryExpression	0		3007040	1					
ANR	3007162	Condition	y < h	33:19:714:718	3007040	1	True				
ANR	3007163	RelationalExpression	y < h		3007040	0		<			
ANR	3007164	Identifier	y		3007040	0					
ANR	3007165	Identifier	h		3007040	1					
ANR	3007166	AssignmentExpression	y += MB_SIZE	33:26:721:732	3007040	2	True	+=			
ANR	3007167	Identifier	y		3007040	0					
ANR	3007168	Identifier	MB_SIZE		3007040	1					
ANR	3007169	CompoundStatement		31:40:566:566	3007040	3					
ANR	3007170	ForStatement	"for ( x = 0 ; x < s -> w ; x += MB_SIZE , z ++ )"		3007040	0					
ANR	3007171	ForInit	x = 0 ;	35:12:750:755	3007040	0	True				
ANR	3007172	AssignmentExpression	x = 0		3007040	0		=			
ANR	3007173	Identifier	x		3007040	0					
ANR	3007174	PrimaryExpression	0		3007040	1					
ANR	3007175	Condition	x < s -> w	35:19:757:764	3007040	1	True				
ANR	3007176	RelationalExpression	x < s -> w		3007040	0		<			
ANR	3007177	Identifier	x		3007040	0					
ANR	3007178	PtrMemberAccess	s -> w		3007040	1					
ANR	3007179	Identifier	s		3007040	0					
ANR	3007180	Identifier	w		3007040	1					
ANR	3007181	Expression	"x += MB_SIZE , z ++"	35:29:767:783	3007040	2	True				
ANR	3007182	AssignmentExpression	x += MB_SIZE		3007040	0		+=			
ANR	3007183	Identifier	x		3007040	0					
ANR	3007184	Identifier	MB_SIZE		3007040	1					
ANR	3007185	PostIncDecOperationExpression	z ++		3007040	1					
ANR	3007186	Identifier	z		3007040	0					
ANR	3007187	IncDec	++		3007040	1					
ANR	3007188	CompoundStatement		33:48:617:617	3007040	3					
ANR	3007189	ExpressionStatement	mb = & s -> mb [ z ]	37:12:801:815	3007040	0	True				
ANR	3007190	AssignmentExpression	mb = & s -> mb [ z ]		3007040	0		=			
ANR	3007191	Identifier	mb		3007040	0					
ANR	3007192	UnaryOperationExpression	& s -> mb [ z ]		3007040	1					
ANR	3007193	UnaryOperator	&		3007040	0					
ANR	3007194	ArrayIndexing	s -> mb [ z ]		3007040	1					
ANR	3007195	PtrMemberAccess	s -> mb		3007040	0					
ANR	3007196	Identifier	s		3007040	0					
ANR	3007197	Identifier	mb		3007040	1					
ANR	3007198	Identifier	z		3007040	1					
ANR	3007199	IfStatement	if ( mode == MODE_MC && mb -> best_encoding == ENC_SKIP )		3007040	1					
ANR	3007200	Condition	mode == MODE_MC && mb -> best_encoding == ENC_SKIP	41:15:835:882	3007040	0	True				
ANR	3007201	AndExpression	mode == MODE_MC && mb -> best_encoding == ENC_SKIP		3007040	0		&&			
ANR	3007202	EqualityExpression	mode == MODE_MC		3007040	0		==			
ANR	3007203	Identifier	mode		3007040	0					
ANR	3007204	Identifier	MODE_MC		3007040	1					
ANR	3007205	EqualityExpression	mb -> best_encoding == ENC_SKIP		3007040	1		==			
ANR	3007206	PtrMemberAccess	mb -> best_encoding		3007040	0					
ANR	3007207	Identifier	mb		3007040	0					
ANR	3007208	Identifier	best_encoding		3007040	1					
ANR	3007209	Identifier	ENC_SKIP		3007040	1					
ANR	3007210	ContinueStatement	continue ;	43:16:902:910	3007040	1	True				
ANR	3007211	ExpressionStatement	"get_sub_picture ( s , x , y , scratch_pict , & sub_scratch )"	47:12:927:979	3007040	2	True				
ANR	3007212	CallExpression	"get_sub_picture ( s , x , y , scratch_pict , & sub_scratch )"		3007040	0					
ANR	3007213	Callee	get_sub_picture		3007040	0					
ANR	3007214	Identifier	get_sub_picture		3007040	0					
ANR	3007215	ArgumentList	s		3007040	1					
ANR	3007216	Argument	s		3007040	0					
ANR	3007217	Identifier	s		3007040	0					
ANR	3007218	Argument	x		3007040	1					
ANR	3007219	Identifier	x		3007040	0					
ANR	3007220	Argument	y		3007040	2					
ANR	3007221	Identifier	y		3007040	0					
ANR	3007222	Argument	scratch_pict		3007040	3					
ANR	3007223	Identifier	scratch_pict		3007040	0					
ANR	3007224	Argument	& sub_scratch		3007040	4					
ANR	3007225	UnaryOperationExpression	& sub_scratch		3007040	0					
ANR	3007226	UnaryOperator	&		3007040	0					
ANR	3007227	Identifier	sub_scratch		3007040	1					
ANR	3007228	IfStatement	if ( mode == MODE_V1_ONLY || mb -> best_encoding == ENC_V1 )		3007040	3					
ANR	3007229	Condition	mode == MODE_V1_ONLY || mb -> best_encoding == ENC_V1	51:15:999:1049	3007040	0	True				
ANR	3007230	OrExpression	mode == MODE_V1_ONLY || mb -> best_encoding == ENC_V1		3007040	0		||			
ANR	3007231	EqualityExpression	mode == MODE_V1_ONLY		3007040	0		==			
ANR	3007232	Identifier	mode		3007040	0					
ANR	3007233	Identifier	MODE_V1_ONLY		3007040	1					
ANR	3007234	EqualityExpression	mb -> best_encoding == ENC_V1		3007040	1		==			
ANR	3007235	PtrMemberAccess	mb -> best_encoding		3007040	0					
ANR	3007236	Identifier	mb		3007040	0					
ANR	3007237	Identifier	best_encoding		3007040	1					
ANR	3007238	Identifier	ENC_V1		3007040	1					
ANR	3007239	ExpressionStatement	"decode_v1_vector ( s , & sub_scratch , mb , info )"	53:16:1069:1112	3007040	1	True				
ANR	3007240	CallExpression	"decode_v1_vector ( s , & sub_scratch , mb , info )"		3007040	0					
ANR	3007241	Callee	decode_v1_vector		3007040	0					
ANR	3007242	Identifier	decode_v1_vector		3007040	0					
ANR	3007243	ArgumentList	s		3007040	1					
ANR	3007244	Argument	s		3007040	0					
ANR	3007245	Identifier	s		3007040	0					
ANR	3007246	Argument	& sub_scratch		3007040	1					
ANR	3007247	UnaryOperationExpression	& sub_scratch		3007040	0					
ANR	3007248	UnaryOperator	&		3007040	0					
ANR	3007249	Identifier	sub_scratch		3007040	1					
ANR	3007250	Argument	mb		3007040	2					
ANR	3007251	Identifier	mb		3007040	0					
ANR	3007252	Argument	info		3007040	3					
ANR	3007253	Identifier	info		3007040	0					
ANR	3007254	ElseStatement	else		3007040	0					
ANR	3007255	IfStatement	if ( mode != MODE_V1_ONLY && mb -> best_encoding == ENC_V4 )		3007040	0					
ANR	3007256	Condition	mode != MODE_V1_ONLY && mb -> best_encoding == ENC_V4	55:20:1135:1185	3007040	0	True				
ANR	3007257	AndExpression	mode != MODE_V1_ONLY && mb -> best_encoding == ENC_V4		3007040	0		&&			
ANR	3007258	EqualityExpression	mode != MODE_V1_ONLY		3007040	0		!=			
ANR	3007259	Identifier	mode		3007040	0					
ANR	3007260	Identifier	MODE_V1_ONLY		3007040	1					
ANR	3007261	EqualityExpression	mb -> best_encoding == ENC_V4		3007040	1		==			
ANR	3007262	PtrMemberAccess	mb -> best_encoding		3007040	0					
ANR	3007263	Identifier	mb		3007040	0					
ANR	3007264	Identifier	best_encoding		3007040	1					
ANR	3007265	Identifier	ENC_V4		3007040	1					
ANR	3007266	ExpressionStatement	"decode_v4_vector ( s , & sub_scratch , mb -> v4_vector [ v4 ] , info )"	57:16:1205:1263	3007040	1	True				
ANR	3007267	CallExpression	"decode_v4_vector ( s , & sub_scratch , mb -> v4_vector [ v4 ] , info )"		3007040	0					
ANR	3007268	Callee	decode_v4_vector		3007040	0					
ANR	3007269	Identifier	decode_v4_vector		3007040	0					
ANR	3007270	ArgumentList	s		3007040	1					
ANR	3007271	Argument	s		3007040	0					
ANR	3007272	Identifier	s		3007040	0					
ANR	3007273	Argument	& sub_scratch		3007040	1					
ANR	3007274	UnaryOperationExpression	& sub_scratch		3007040	0					
ANR	3007275	UnaryOperator	&		3007040	0					
ANR	3007276	Identifier	sub_scratch		3007040	1					
ANR	3007277	Argument	mb -> v4_vector [ v4 ]		3007040	2					
ANR	3007278	ArrayIndexing	mb -> v4_vector [ v4 ]		3007040	0					
ANR	3007279	PtrMemberAccess	mb -> v4_vector		3007040	0					
ANR	3007280	Identifier	mb		3007040	0					
ANR	3007281	Identifier	v4_vector		3007040	1					
ANR	3007282	Identifier	v4		3007040	1					
ANR	3007283	Argument	info		3007040	3					
ANR	3007284	Identifier	info		3007040	0					
ANR	3007285	SwitchStatement	switch ( mode )		3007040	8					
ANR	3007286	Condition	mode	65:11:1297:1300	3007040	0	True				
ANR	3007287	Identifier	mode		3007040	0					
ANR	3007288	CompoundStatement		63:17:1134:1134	3007040	1					
ANR	3007289	Label	case MODE_V1_ONLY :	67:4:1310:1327	3007040	0	True				
ANR	3007290	Identifier	MODE_V1_ONLY		3007040	0					
ANR	3007291	ExpressionStatement	"ret += write_chunk_header ( buf + ret , 0x32 , mb_count )"	71:8:1409:1461	3007040	1	True				
ANR	3007292	AssignmentExpression	"ret += write_chunk_header ( buf + ret , 0x32 , mb_count )"		3007040	0		+=			
ANR	3007293	Identifier	ret		3007040	0					
ANR	3007294	CallExpression	"write_chunk_header ( buf + ret , 0x32 , mb_count )"		3007040	1					
ANR	3007295	Callee	write_chunk_header		3007040	0					
ANR	3007296	Identifier	write_chunk_header		3007040	0					
ANR	3007297	ArgumentList	buf + ret		3007040	1					
ANR	3007298	Argument	buf + ret		3007040	0					
ANR	3007299	AdditiveExpression	buf + ret		3007040	0		+			
ANR	3007300	Identifier	buf		3007040	0					
ANR	3007301	Identifier	ret		3007040	1					
ANR	3007302	Argument	0x32		3007040	1					
ANR	3007303	PrimaryExpression	0x32		3007040	0					
ANR	3007304	Argument	mb_count		3007040	2					
ANR	3007305	Identifier	mb_count		3007040	0					
ANR	3007306	ForStatement	for ( x = 0 ; x < mb_count ; x ++ )		3007040	2					
ANR	3007307	ForInit	x = 0 ;	75:12:1478:1483	3007040	0	True				
ANR	3007308	AssignmentExpression	x = 0		3007040	0		=			
ANR	3007309	Identifier	x		3007040	0					
ANR	3007310	PrimaryExpression	0		3007040	1					
ANR	3007311	Condition	x < mb_count	75:19:1485:1496	3007040	1	True				
ANR	3007312	RelationalExpression	x < mb_count		3007040	0		<			
ANR	3007313	Identifier	x		3007040	0					
ANR	3007314	Identifier	mb_count		3007040	1					
ANR	3007315	PostIncDecOperationExpression	x ++	75:33:1499:1501	3007040	2	True				
ANR	3007316	Identifier	x		3007040	0					
ANR	3007317	IncDec	++		3007040	1					
ANR	3007318	ExpressionStatement	buf [ ret ++ ] = s -> mb [ x ] . v1_vector	77:12:1517:1548	3007040	3	True				
ANR	3007319	AssignmentExpression	buf [ ret ++ ] = s -> mb [ x ] . v1_vector		3007040	0		=			
ANR	3007320	ArrayIndexing	buf [ ret ++ ]		3007040	0					
ANR	3007321	Identifier	buf		3007040	0					
ANR	3007322	PostIncDecOperationExpression	ret ++		3007040	1					
ANR	3007323	Identifier	ret		3007040	0					
ANR	3007324	IncDec	++		3007040	1					
ANR	3007325	MemberAccess	s -> mb [ x ] . v1_vector		3007040	1					
ANR	3007326	ArrayIndexing	s -> mb [ x ]		3007040	0					
ANR	3007327	PtrMemberAccess	s -> mb		3007040	0					
ANR	3007328	Identifier	s		3007040	0					
ANR	3007329	Identifier	mb		3007040	1					
ANR	3007330	Identifier	x		3007040	1					
ANR	3007331	Identifier	v1_vector		3007040	1					
ANR	3007332	BreakStatement	break ;	81:8:1561:1566	3007040	3	True				
ANR	3007333	Label	case MODE_V1_V4 :	83:4:1573:1588	3007040	4	True				
ANR	3007334	Identifier	MODE_V1_V4		3007040	0					
ANR	3007335	ExpressionStatement	header_ofs = ret	87:8:1635:1651	3007040	5	True				
ANR	3007336	AssignmentExpression	header_ofs = ret		3007040	0		=			
ANR	3007337	Identifier	header_ofs		3007040	0					
ANR	3007338	Identifier	ret		3007040	1					
ANR	3007339	ExpressionStatement	ret += CHUNK_HEADER_SIZE	89:8:1662:1686	3007040	6	True				
ANR	3007340	AssignmentExpression	ret += CHUNK_HEADER_SIZE		3007040	0		+=			
ANR	3007341	Identifier	ret		3007040	0					
ANR	3007342	Identifier	CHUNK_HEADER_SIZE		3007040	1					
ANR	3007343	ForStatement	for ( x = 0 ; x < mb_count ; x += 32 )		3007040	7					
ANR	3007344	ForInit	x = 0 ;	93:12:1703:1708	3007040	0	True				
ANR	3007345	AssignmentExpression	x = 0		3007040	0		=			
ANR	3007346	Identifier	x		3007040	0					
ANR	3007347	PrimaryExpression	0		3007040	1					
ANR	3007348	Condition	x < mb_count	93:19:1710:1721	3007040	1	True				
ANR	3007349	RelationalExpression	x < mb_count		3007040	0		<			
ANR	3007350	Identifier	x		3007040	0					
ANR	3007351	Identifier	mb_count		3007040	1					
ANR	3007352	AssignmentExpression	x += 32	93:33:1724:1730	3007040	2	True	+=			
ANR	3007353	Identifier	x		3007040	0					
ANR	3007354	PrimaryExpression	32		3007040	1					
ANR	3007355	CompoundStatement		91:42:1564:1564	3007040	3					
ANR	3007356	ExpressionStatement	flags = 0	95:12:1748:1757	3007040	0	True				
ANR	3007357	AssignmentExpression	flags = 0		3007040	0		=			
ANR	3007358	Identifier	flags		3007040	0					
ANR	3007359	PrimaryExpression	0		3007040	1					
ANR	3007360	ForStatement	"for ( y = x ; y < FFMIN ( x + 32 , mb_count ) ; y ++ )"		3007040	1					
ANR	3007361	ForInit	y = x ;	97:16:1776:1781	3007040	0	True				
ANR	3007362	AssignmentExpression	y = x		3007040	0		=			
ANR	3007363	Identifier	y		3007040	0					
ANR	3007364	Identifier	x		3007040	1					
ANR	3007365	Condition	"y < FFMIN ( x + 32 , mb_count )"	97:23:1783:1807	3007040	1	True				
ANR	3007366	RelationalExpression	"y < FFMIN ( x + 32 , mb_count )"		3007040	0		<			
ANR	3007367	Identifier	y		3007040	0					
ANR	3007368	CallExpression	"FFMIN ( x + 32 , mb_count )"		3007040	1					
ANR	3007369	Callee	FFMIN		3007040	0					
ANR	3007370	Identifier	FFMIN		3007040	0					
ANR	3007371	ArgumentList	x + 32		3007040	1					
ANR	3007372	Argument	x + 32		3007040	0					
ANR	3007373	AdditiveExpression	x + 32		3007040	0		+			
ANR	3007374	Identifier	x		3007040	0					
ANR	3007375	PrimaryExpression	32		3007040	1					
ANR	3007376	Argument	mb_count		3007040	1					
ANR	3007377	Identifier	mb_count		3007040	0					
ANR	3007378	PostIncDecOperationExpression	y ++	97:50:1810:1812	3007040	2	True				
ANR	3007379	Identifier	y		3007040	0					
ANR	3007380	IncDec	++		3007040	1					
ANR	3007381	IfStatement	if ( s -> mb [ y ] . best_encoding == ENC_V4 )		3007040	3					
ANR	3007382	Condition	s -> mb [ y ] . best_encoding == ENC_V4	99:19:1835:1866	3007040	0	True				
ANR	3007383	EqualityExpression	s -> mb [ y ] . best_encoding == ENC_V4		3007040	0		==			
ANR	3007384	MemberAccess	s -> mb [ y ] . best_encoding		3007040	0					
ANR	3007385	ArrayIndexing	s -> mb [ y ]		3007040	0					
ANR	3007386	PtrMemberAccess	s -> mb		3007040	0					
ANR	3007387	Identifier	s		3007040	0					
ANR	3007388	Identifier	mb		3007040	1					
ANR	3007389	Identifier	y		3007040	1					
ANR	3007390	Identifier	best_encoding		3007040	1					
ANR	3007391	Identifier	ENC_V4		3007040	1					
ANR	3007392	ExpressionStatement	flags |= 1 << ( 31 - y + x )	101:20:1890:1916	3007040	1	True				
ANR	3007393	AssignmentExpression	flags |= 1 << ( 31 - y + x )		3007040	0		|=			
ANR	3007394	Identifier	flags		3007040	0					
ANR	3007395	ShiftExpression	1 << ( 31 - y + x )		3007040	1		<<			
ANR	3007396	PrimaryExpression	1		3007040	0					
ANR	3007397	AdditiveExpression	31 - y + x		3007040	1		-			
ANR	3007398	PrimaryExpression	31		3007040	0					
ANR	3007399	AdditiveExpression	y + x		3007040	1		+			
ANR	3007400	Identifier	y		3007040	0					
ANR	3007401	Identifier	x		3007040	1					
ANR	3007402	ExpressionStatement	"AV_WB32 ( & buf [ ret ] , flags )"	105:12:1933:1958	3007040	2	True				
ANR	3007403	CallExpression	"AV_WB32 ( & buf [ ret ] , flags )"		3007040	0					
ANR	3007404	Callee	AV_WB32		3007040	0					
ANR	3007405	Identifier	AV_WB32		3007040	0					
ANR	3007406	ArgumentList	& buf [ ret ]		3007040	1					
ANR	3007407	Argument	& buf [ ret ]		3007040	0					
ANR	3007408	UnaryOperationExpression	& buf [ ret ]		3007040	0					
ANR	3007409	UnaryOperator	&		3007040	0					
ANR	3007410	ArrayIndexing	buf [ ret ]		3007040	1					
ANR	3007411	Identifier	buf		3007040	0					
ANR	3007412	Identifier	ret		3007040	1					
ANR	3007413	Argument	flags		3007040	1					
ANR	3007414	Identifier	flags		3007040	0					
ANR	3007415	ExpressionStatement	ret += 4	107:12:1973:1981	3007040	3	True				
ANR	3007416	AssignmentExpression	ret += 4		3007040	0		+=			
ANR	3007417	Identifier	ret		3007040	0					
ANR	3007418	PrimaryExpression	4		3007040	1					
ANR	3007419	ForStatement	"for ( y = x ; y < FFMIN ( x + 32 , mb_count ) ; y ++ )"		3007040	4					
ANR	3007420	ForInit	y = x ;	111:16:2002:2007	3007040	0	True				
ANR	3007421	AssignmentExpression	y = x		3007040	0		=			
ANR	3007422	Identifier	y		3007040	0					
ANR	3007423	Identifier	x		3007040	1					
ANR	3007424	Condition	"y < FFMIN ( x + 32 , mb_count )"	111:23:2009:2033	3007040	1	True				
ANR	3007425	RelationalExpression	"y < FFMIN ( x + 32 , mb_count )"		3007040	0		<			
ANR	3007426	Identifier	y		3007040	0					
ANR	3007427	CallExpression	"FFMIN ( x + 32 , mb_count )"		3007040	1					
ANR	3007428	Callee	FFMIN		3007040	0					
ANR	3007429	Identifier	FFMIN		3007040	0					
ANR	3007430	ArgumentList	x + 32		3007040	1					
ANR	3007431	Argument	x + 32		3007040	0					
ANR	3007432	AdditiveExpression	x + 32		3007040	0		+			
ANR	3007433	Identifier	x		3007040	0					
ANR	3007434	PrimaryExpression	32		3007040	1					
ANR	3007435	Argument	mb_count		3007040	1					
ANR	3007436	Identifier	mb_count		3007040	0					
ANR	3007437	PostIncDecOperationExpression	y ++	111:50:2036:2038	3007040	2	True				
ANR	3007438	Identifier	y		3007040	0					
ANR	3007439	IncDec	++		3007040	1					
ANR	3007440	CompoundStatement		109:55:1872:1872	3007040	3					
ANR	3007441	ExpressionStatement	mb = & s -> mb [ y ]	113:16:2060:2074	3007040	0	True				
ANR	3007442	AssignmentExpression	mb = & s -> mb [ y ]		3007040	0		=			
ANR	3007443	Identifier	mb		3007040	0					
ANR	3007444	UnaryOperationExpression	& s -> mb [ y ]		3007040	1					
ANR	3007445	UnaryOperator	&		3007040	0					
ANR	3007446	ArrayIndexing	s -> mb [ y ]		3007040	1					
ANR	3007447	PtrMemberAccess	s -> mb		3007040	0					
ANR	3007448	Identifier	s		3007040	0					
ANR	3007449	Identifier	mb		3007040	1					
ANR	3007450	Identifier	y		3007040	1					
ANR	3007451	IfStatement	if ( mb -> best_encoding == ENC_V1 )		3007040	1					
ANR	3007452	Condition	mb -> best_encoding == ENC_V1	117:19:2098:2124	3007040	0	True				
ANR	3007453	EqualityExpression	mb -> best_encoding == ENC_V1		3007040	0		==			
ANR	3007454	PtrMemberAccess	mb -> best_encoding		3007040	0					
ANR	3007455	Identifier	mb		3007040	0					
ANR	3007456	Identifier	best_encoding		3007040	1					
ANR	3007457	Identifier	ENC_V1		3007040	1					
ANR	3007458	ExpressionStatement	buf [ ret ++ ] = mb -> v1_vector	119:20:2148:2174	3007040	1	True				
ANR	3007459	AssignmentExpression	buf [ ret ++ ] = mb -> v1_vector		3007040	0		=			
ANR	3007460	ArrayIndexing	buf [ ret ++ ]		3007040	0					
ANR	3007461	Identifier	buf		3007040	0					
ANR	3007462	PostIncDecOperationExpression	ret ++		3007040	1					
ANR	3007463	Identifier	ret		3007040	0					
ANR	3007464	IncDec	++		3007040	1					
ANR	3007465	PtrMemberAccess	mb -> v1_vector		3007040	1					
ANR	3007466	Identifier	mb		3007040	0					
ANR	3007467	Identifier	v1_vector		3007040	1					
ANR	3007468	ElseStatement	else		3007040	0					
ANR	3007469	ForStatement	for ( z = 0 ; z < 4 ; z ++ )		3007040	0					
ANR	3007470	ForInit	z = 0 ;	123:24:2223:2228	3007040	0	True				
ANR	3007471	AssignmentExpression	z = 0		3007040	0		=			
ANR	3007472	Identifier	z		3007040	0					
ANR	3007473	PrimaryExpression	0		3007040	1					
ANR	3007474	Condition	z < 4	123:31:2230:2234	3007040	1	True				
ANR	3007475	RelationalExpression	z < 4		3007040	0		<			
ANR	3007476	Identifier	z		3007040	0					
ANR	3007477	PrimaryExpression	4		3007040	1					
ANR	3007478	PostIncDecOperationExpression	z ++	123:38:2237:2239	3007040	2	True				
ANR	3007479	Identifier	z		3007040	0					
ANR	3007480	IncDec	++		3007040	1					
ANR	3007481	ExpressionStatement	buf [ ret ++ ] = mb -> v4_vector [ v4 ] [ z ]	125:24:2267:2300	3007040	3	True				
ANR	3007482	AssignmentExpression	buf [ ret ++ ] = mb -> v4_vector [ v4 ] [ z ]		3007040	0		=			
ANR	3007483	ArrayIndexing	buf [ ret ++ ]		3007040	0					
ANR	3007484	Identifier	buf		3007040	0					
ANR	3007485	PostIncDecOperationExpression	ret ++		3007040	1					
ANR	3007486	Identifier	ret		3007040	0					
ANR	3007487	IncDec	++		3007040	1					
ANR	3007488	ArrayIndexing	mb -> v4_vector [ v4 ] [ z ]		3007040	1					
ANR	3007489	ArrayIndexing	mb -> v4_vector [ v4 ]		3007040	0					
ANR	3007490	PtrMemberAccess	mb -> v4_vector		3007040	0					
ANR	3007491	Identifier	mb		3007040	0					
ANR	3007492	Identifier	v4_vector		3007040	1					
ANR	3007493	Identifier	v4		3007040	1					
ANR	3007494	Identifier	z		3007040	1					
ANR	3007495	ExpressionStatement	"write_chunk_header ( buf + header_ofs , 0x30 , ret - header_ofs - CHUNK_HEADER_SIZE )"	133:8:2339:2419	3007040	8	True				
ANR	3007496	CallExpression	"write_chunk_header ( buf + header_ofs , 0x30 , ret - header_ofs - CHUNK_HEADER_SIZE )"		3007040	0					
ANR	3007497	Callee	write_chunk_header		3007040	0					
ANR	3007498	Identifier	write_chunk_header		3007040	0					
ANR	3007499	ArgumentList	buf + header_ofs		3007040	1					
ANR	3007500	Argument	buf + header_ofs		3007040	0					
ANR	3007501	AdditiveExpression	buf + header_ofs		3007040	0		+			
ANR	3007502	Identifier	buf		3007040	0					
ANR	3007503	Identifier	header_ofs		3007040	1					
ANR	3007504	Argument	0x30		3007040	1					
ANR	3007505	PrimaryExpression	0x30		3007040	0					
ANR	3007506	Argument	ret - header_ofs - CHUNK_HEADER_SIZE		3007040	2					
ANR	3007507	AdditiveExpression	ret - header_ofs - CHUNK_HEADER_SIZE		3007040	0		-			
ANR	3007508	Identifier	ret		3007040	0					
ANR	3007509	AdditiveExpression	header_ofs - CHUNK_HEADER_SIZE		3007040	1		-			
ANR	3007510	Identifier	header_ofs		3007040	0					
ANR	3007511	Identifier	CHUNK_HEADER_SIZE		3007040	1					
ANR	3007512	BreakStatement	break ;	137:8:2432:2437	3007040	9	True				
ANR	3007513	Label	case MODE_MC :	139:4:2444:2456	3007040	10	True				
ANR	3007514	Identifier	MODE_MC		3007040	0					
ANR	3007515	ExpressionStatement	header_ofs = ret	143:8:2503:2519	3007040	11	True				
ANR	3007516	AssignmentExpression	header_ofs = ret		3007040	0		=			
ANR	3007517	Identifier	header_ofs		3007040	0					
ANR	3007518	Identifier	ret		3007040	1					
ANR	3007519	ExpressionStatement	ret += CHUNK_HEADER_SIZE	145:8:2530:2554	3007040	12	True				
ANR	3007520	AssignmentExpression	ret += CHUNK_HEADER_SIZE		3007040	0		+=			
ANR	3007521	Identifier	ret		3007040	0					
ANR	3007522	Identifier	CHUNK_HEADER_SIZE		3007040	1					
ANR	3007523	ExpressionStatement	flags = bits = temp_size = 0	147:8:2565:2593	3007040	13	True				
ANR	3007524	AssignmentExpression	flags = bits = temp_size = 0		3007040	0		=			
ANR	3007525	Identifier	flags		3007040	0					
ANR	3007526	AssignmentExpression	bits = temp_size = 0		3007040	1		=			
ANR	3007527	Identifier	bits		3007040	0					
ANR	3007528	AssignmentExpression	temp_size = 0		3007040	1		=			
ANR	3007529	Identifier	temp_size		3007040	0					
ANR	3007530	PrimaryExpression	0		3007040	1					
ANR	3007531	ForStatement	for ( x = 0 ; x < mb_count ; x ++ )		3007040	14					
ANR	3007532	ForInit	x = 0 ;	151:12:2610:2615	3007040	0	True				
ANR	3007533	AssignmentExpression	x = 0		3007040	0		=			
ANR	3007534	Identifier	x		3007040	0					
ANR	3007535	PrimaryExpression	0		3007040	1					
ANR	3007536	Condition	x < mb_count	151:19:2617:2628	3007040	1	True				
ANR	3007537	RelationalExpression	x < mb_count		3007040	0		<			
ANR	3007538	Identifier	x		3007040	0					
ANR	3007539	Identifier	mb_count		3007040	1					
ANR	3007540	PostIncDecOperationExpression	x ++	151:33:2631:2633	3007040	2	True				
ANR	3007541	Identifier	x		3007040	0					
ANR	3007542	IncDec	++		3007040	1					
ANR	3007543	CompoundStatement		149:38:2467:2467	3007040	3					
ANR	3007544	ExpressionStatement	mb = & s -> mb [ x ]	153:12:2651:2665	3007040	0	True				
ANR	3007545	AssignmentExpression	mb = & s -> mb [ x ]		3007040	0		=			
ANR	3007546	Identifier	mb		3007040	0					
ANR	3007547	UnaryOperationExpression	& s -> mb [ x ]		3007040	1					
ANR	3007548	UnaryOperator	&		3007040	0					
ANR	3007549	ArrayIndexing	s -> mb [ x ]		3007040	1					
ANR	3007550	PtrMemberAccess	s -> mb		3007040	0					
ANR	3007551	Identifier	s		3007040	0					
ANR	3007552	Identifier	mb		3007040	1					
ANR	3007553	Identifier	x		3007040	1					
ANR	3007554	ExpressionStatement	flags |= ( mb -> best_encoding != ENC_SKIP ) << ( 31 - bits ++ )	155:12:2680:2737	3007040	1	True				
ANR	3007555	AssignmentExpression	flags |= ( mb -> best_encoding != ENC_SKIP ) << ( 31 - bits ++ )		3007040	0		|=			
ANR	3007556	Identifier	flags		3007040	0					
ANR	3007557	ShiftExpression	( mb -> best_encoding != ENC_SKIP ) << ( 31 - bits ++ )		3007040	1		<<			
ANR	3007558	EqualityExpression	mb -> best_encoding != ENC_SKIP		3007040	0		!=			
ANR	3007559	PtrMemberAccess	mb -> best_encoding		3007040	0					
ANR	3007560	Identifier	mb		3007040	0					
ANR	3007561	Identifier	best_encoding		3007040	1					
ANR	3007562	Identifier	ENC_SKIP		3007040	1					
ANR	3007563	AdditiveExpression	31 - bits ++		3007040	1		-			
ANR	3007564	PrimaryExpression	31		3007040	0					
ANR	3007565	PostIncDecOperationExpression	bits ++		3007040	1					
ANR	3007566	Identifier	bits		3007040	0					
ANR	3007567	IncDec	++		3007040	1					
ANR	3007568	ExpressionStatement	needs_extra_bit = 0	157:12:2752:2771	3007040	2	True				
ANR	3007569	AssignmentExpression	needs_extra_bit = 0		3007040	0		=			
ANR	3007570	Identifier	needs_extra_bit		3007040	0					
ANR	3007571	PrimaryExpression	0		3007040	1					
ANR	3007572	ExpressionStatement	should_write_temp = 0	159:12:2786:2807	3007040	3	True				
ANR	3007573	AssignmentExpression	should_write_temp = 0		3007040	0		=			
ANR	3007574	Identifier	should_write_temp		3007040	0					
ANR	3007575	PrimaryExpression	0		3007040	1					
ANR	3007576	IfStatement	if ( mb -> best_encoding != ENC_SKIP )		3007040	4					
ANR	3007577	Condition	mb -> best_encoding != ENC_SKIP	163:15:2827:2855	3007040	0	True				
ANR	3007578	EqualityExpression	mb -> best_encoding != ENC_SKIP		3007040	0		!=			
ANR	3007579	PtrMemberAccess	mb -> best_encoding		3007040	0					
ANR	3007580	Identifier	mb		3007040	0					
ANR	3007581	Identifier	best_encoding		3007040	1					
ANR	3007582	Identifier	ENC_SKIP		3007040	1					
ANR	3007583	CompoundStatement		161:46:2689:2689	3007040	1					
ANR	3007584	IfStatement	if ( bits < 32 )		3007040	0					
ANR	3007585	Condition	bits < 32	165:19:2880:2888	3007040	0	True				
ANR	3007586	RelationalExpression	bits < 32		3007040	0		<			
ANR	3007587	Identifier	bits		3007040	0					
ANR	3007588	PrimaryExpression	32		3007040	1					
ANR	3007589	ExpressionStatement	flags |= ( mb -> best_encoding == ENC_V4 ) << ( 31 - bits ++ )	167:20:2912:2967	3007040	1	True				
ANR	3007590	AssignmentExpression	flags |= ( mb -> best_encoding == ENC_V4 ) << ( 31 - bits ++ )		3007040	0		|=			
ANR	3007591	Identifier	flags		3007040	0					
ANR	3007592	ShiftExpression	( mb -> best_encoding == ENC_V4 ) << ( 31 - bits ++ )		3007040	1		<<			
ANR	3007593	EqualityExpression	mb -> best_encoding == ENC_V4		3007040	0		==			
ANR	3007594	PtrMemberAccess	mb -> best_encoding		3007040	0					
ANR	3007595	Identifier	mb		3007040	0					
ANR	3007596	Identifier	best_encoding		3007040	1					
ANR	3007597	Identifier	ENC_V4		3007040	1					
ANR	3007598	AdditiveExpression	31 - bits ++		3007040	1		-			
ANR	3007599	PrimaryExpression	31		3007040	0					
ANR	3007600	PostIncDecOperationExpression	bits ++		3007040	1					
ANR	3007601	Identifier	bits		3007040	0					
ANR	3007602	IncDec	++		3007040	1					
ANR	3007603	ElseStatement	else		3007040	0					
ANR	3007604	ExpressionStatement	needs_extra_bit = 1	171:20:3012:3031	3007040	0	True				
ANR	3007605	AssignmentExpression	needs_extra_bit = 1		3007040	0		=			
ANR	3007606	Identifier	needs_extra_bit		3007040	0					
ANR	3007607	PrimaryExpression	1		3007040	1					
ANR	3007608	IfStatement	if ( bits == 32 )		3007040	5					
ANR	3007609	Condition	bits == 32	177:15:3066:3075	3007040	0	True				
ANR	3007610	EqualityExpression	bits == 32		3007040	0		==			
ANR	3007611	Identifier	bits		3007040	0					
ANR	3007612	PrimaryExpression	32		3007040	1					
ANR	3007613	CompoundStatement		175:27:2909:2909	3007040	1					
ANR	3007614	ExpressionStatement	"AV_WB32 ( & buf [ ret ] , flags )"	179:16:3097:3122	3007040	0	True				
ANR	3007615	CallExpression	"AV_WB32 ( & buf [ ret ] , flags )"		3007040	0					
ANR	3007616	Callee	AV_WB32		3007040	0					
ANR	3007617	Identifier	AV_WB32		3007040	0					
ANR	3007618	ArgumentList	& buf [ ret ]		3007040	1					
ANR	3007619	Argument	& buf [ ret ]		3007040	0					
ANR	3007620	UnaryOperationExpression	& buf [ ret ]		3007040	0					
ANR	3007621	UnaryOperator	&		3007040	0					
ANR	3007622	ArrayIndexing	buf [ ret ]		3007040	1					
ANR	3007623	Identifier	buf		3007040	0					
ANR	3007624	Identifier	ret		3007040	1					
ANR	3007625	Argument	flags		3007040	1					
ANR	3007626	Identifier	flags		3007040	0					
ANR	3007627	ExpressionStatement	ret += 4	181:16:3141:3149	3007040	1	True				
ANR	3007628	AssignmentExpression	ret += 4		3007040	0		+=			
ANR	3007629	Identifier	ret		3007040	0					
ANR	3007630	PrimaryExpression	4		3007040	1					
ANR	3007631	ExpressionStatement	flags = bits = 0	183:16:3168:3184	3007040	2	True				
ANR	3007632	AssignmentExpression	flags = bits = 0		3007040	0		=			
ANR	3007633	Identifier	flags		3007040	0					
ANR	3007634	AssignmentExpression	bits = 0		3007040	1		=			
ANR	3007635	Identifier	bits		3007040	0					
ANR	3007636	PrimaryExpression	0		3007040	1					
ANR	3007637	IfStatement	if ( mb -> best_encoding == ENC_SKIP || needs_extra_bit )		3007040	3					
ANR	3007638	Condition	mb -> best_encoding == ENC_SKIP || needs_extra_bit	187:19:3208:3255	3007040	0	True				
ANR	3007639	OrExpression	mb -> best_encoding == ENC_SKIP || needs_extra_bit		3007040	0		||			
ANR	3007640	EqualityExpression	mb -> best_encoding == ENC_SKIP		3007040	0		==			
ANR	3007641	PtrMemberAccess	mb -> best_encoding		3007040	0					
ANR	3007642	Identifier	mb		3007040	0					
ANR	3007643	Identifier	best_encoding		3007040	1					
ANR	3007644	Identifier	ENC_SKIP		3007040	1					
ANR	3007645	Identifier	needs_extra_bit		3007040	1					
ANR	3007646	CompoundStatement		185:69:3089:3089	3007040	1					
ANR	3007647	ExpressionStatement	"memcpy ( & buf [ ret ] , temp , temp_size )"	189:20:3281:3315	3007040	0	True				
ANR	3007648	CallExpression	"memcpy ( & buf [ ret ] , temp , temp_size )"		3007040	0					
ANR	3007649	Callee	memcpy		3007040	0					
ANR	3007650	Identifier	memcpy		3007040	0					
ANR	3007651	ArgumentList	& buf [ ret ]		3007040	1					
ANR	3007652	Argument	& buf [ ret ]		3007040	0					
ANR	3007653	UnaryOperationExpression	& buf [ ret ]		3007040	0					
ANR	3007654	UnaryOperator	&		3007040	0					
ANR	3007655	ArrayIndexing	buf [ ret ]		3007040	1					
ANR	3007656	Identifier	buf		3007040	0					
ANR	3007657	Identifier	ret		3007040	1					
ANR	3007658	Argument	temp		3007040	1					
ANR	3007659	Identifier	temp		3007040	0					
ANR	3007660	Argument	temp_size		3007040	2					
ANR	3007661	Identifier	temp_size		3007040	0					
ANR	3007662	ExpressionStatement	ret += temp_size	191:20:3338:3354	3007040	1	True				
ANR	3007663	AssignmentExpression	ret += temp_size		3007040	0		+=			
ANR	3007664	Identifier	ret		3007040	0					
ANR	3007665	Identifier	temp_size		3007040	1					
ANR	3007666	ExpressionStatement	temp_size = 0	193:20:3377:3390	3007040	2	True				
ANR	3007667	AssignmentExpression	temp_size = 0		3007040	0		=			
ANR	3007668	Identifier	temp_size		3007040	0					
ANR	3007669	PrimaryExpression	0		3007040	1					
ANR	3007670	ElseStatement	else		3007040	0					
ANR	3007671	ExpressionStatement	should_write_temp = 1	197:20:3437:3458	3007040	0	True				
ANR	3007672	AssignmentExpression	should_write_temp = 1		3007040	0		=			
ANR	3007673	Identifier	should_write_temp		3007040	0					
ANR	3007674	PrimaryExpression	1		3007040	1					
ANR	3007675	IfStatement	if ( needs_extra_bit )		3007040	6					
ANR	3007676	Condition	needs_extra_bit	203:15:3493:3507	3007040	0	True				
ANR	3007677	Identifier	needs_extra_bit		3007040	0					
ANR	3007678	CompoundStatement		201:32:3341:3341	3007040	1					
ANR	3007679	ExpressionStatement	flags = ( mb -> best_encoding == ENC_V4 ) << 31	205:16:3529:3572	3007040	0	True				
ANR	3007680	AssignmentExpression	flags = ( mb -> best_encoding == ENC_V4 ) << 31		3007040	0		=			
ANR	3007681	Identifier	flags		3007040	0					
ANR	3007682	ShiftExpression	( mb -> best_encoding == ENC_V4 ) << 31		3007040	1		<<			
ANR	3007683	EqualityExpression	mb -> best_encoding == ENC_V4		3007040	0		==			
ANR	3007684	PtrMemberAccess	mb -> best_encoding		3007040	0					
ANR	3007685	Identifier	mb		3007040	0					
ANR	3007686	Identifier	best_encoding		3007040	1					
ANR	3007687	Identifier	ENC_V4		3007040	1					
ANR	3007688	PrimaryExpression	31		3007040	1					
ANR	3007689	ExpressionStatement	bits = 1	207:16:3591:3599	3007040	1	True				
ANR	3007690	AssignmentExpression	bits = 1		3007040	0		=			
ANR	3007691	Identifier	bits		3007040	0					
ANR	3007692	PrimaryExpression	1		3007040	1					
ANR	3007693	IfStatement	if ( mb -> best_encoding == ENC_V1 )		3007040	7					
ANR	3007694	Condition	mb -> best_encoding == ENC_V1	213:15:3634:3660	3007040	0	True				
ANR	3007695	EqualityExpression	mb -> best_encoding == ENC_V1		3007040	0		==			
ANR	3007696	PtrMemberAccess	mb -> best_encoding		3007040	0					
ANR	3007697	Identifier	mb		3007040	0					
ANR	3007698	Identifier	best_encoding		3007040	1					
ANR	3007699	Identifier	ENC_V1		3007040	1					
ANR	3007700	ExpressionStatement	temp [ temp_size ++ ] = mb -> v1_vector	215:16:3680:3713	3007040	1	True				
ANR	3007701	AssignmentExpression	temp [ temp_size ++ ] = mb -> v1_vector		3007040	0		=			
ANR	3007702	ArrayIndexing	temp [ temp_size ++ ]		3007040	0					
ANR	3007703	Identifier	temp		3007040	0					
ANR	3007704	PostIncDecOperationExpression	temp_size ++		3007040	1					
ANR	3007705	Identifier	temp_size		3007040	0					
ANR	3007706	IncDec	++		3007040	1					
ANR	3007707	PtrMemberAccess	mb -> v1_vector		3007040	1					
ANR	3007708	Identifier	mb		3007040	0					
ANR	3007709	Identifier	v1_vector		3007040	1					
ANR	3007710	ElseStatement	else		3007040	0					
ANR	3007711	IfStatement	if ( mb -> best_encoding == ENC_V4 )		3007040	0					
ANR	3007712	Condition	mb -> best_encoding == ENC_V4	217:20:3736:3762	3007040	0	True				
ANR	3007713	EqualityExpression	mb -> best_encoding == ENC_V4		3007040	0		==			
ANR	3007714	PtrMemberAccess	mb -> best_encoding		3007040	0					
ANR	3007715	Identifier	mb		3007040	0					
ANR	3007716	Identifier	best_encoding		3007040	1					
ANR	3007717	Identifier	ENC_V4		3007040	1					
ANR	3007718	ForStatement	for ( z = 0 ; z < 4 ; z ++ )		3007040	1					
ANR	3007719	ForInit	z = 0 ;	219:20:3786:3791	3007040	0	True				
ANR	3007720	AssignmentExpression	z = 0		3007040	0		=			
ANR	3007721	Identifier	z		3007040	0					
ANR	3007722	PrimaryExpression	0		3007040	1					
ANR	3007723	Condition	z < 4	219:27:3793:3797	3007040	1	True				
ANR	3007724	RelationalExpression	z < 4		3007040	0		<			
ANR	3007725	Identifier	z		3007040	0					
ANR	3007726	PrimaryExpression	4		3007040	1					
ANR	3007727	PostIncDecOperationExpression	z ++	219:34:3800:3802	3007040	2	True				
ANR	3007728	Identifier	z		3007040	0					
ANR	3007729	IncDec	++		3007040	1					
ANR	3007730	ExpressionStatement	temp [ temp_size ++ ] = mb -> v4_vector [ v4 ] [ z ]	221:20:3826:3866	3007040	3	True				
ANR	3007731	AssignmentExpression	temp [ temp_size ++ ] = mb -> v4_vector [ v4 ] [ z ]		3007040	0		=			
ANR	3007732	ArrayIndexing	temp [ temp_size ++ ]		3007040	0					
ANR	3007733	Identifier	temp		3007040	0					
ANR	3007734	PostIncDecOperationExpression	temp_size ++		3007040	1					
ANR	3007735	Identifier	temp_size		3007040	0					
ANR	3007736	IncDec	++		3007040	1					
ANR	3007737	ArrayIndexing	mb -> v4_vector [ v4 ] [ z ]		3007040	1					
ANR	3007738	ArrayIndexing	mb -> v4_vector [ v4 ]		3007040	0					
ANR	3007739	PtrMemberAccess	mb -> v4_vector		3007040	0					
ANR	3007740	Identifier	mb		3007040	0					
ANR	3007741	Identifier	v4_vector		3007040	1					
ANR	3007742	Identifier	v4		3007040	1					
ANR	3007743	Identifier	z		3007040	1					
ANR	3007744	IfStatement	if ( should_write_temp )		3007040	8					
ANR	3007745	Condition	should_write_temp	225:15:3886:3902	3007040	0	True				
ANR	3007746	Identifier	should_write_temp		3007040	0					
ANR	3007747	CompoundStatement		223:34:3736:3736	3007040	1					
ANR	3007748	ExpressionStatement	"memcpy ( & buf [ ret ] , temp , temp_size )"	227:16:3924:3958	3007040	0	True				
ANR	3007749	CallExpression	"memcpy ( & buf [ ret ] , temp , temp_size )"		3007040	0					
ANR	3007750	Callee	memcpy		3007040	0					
ANR	3007751	Identifier	memcpy		3007040	0					
ANR	3007752	ArgumentList	& buf [ ret ]		3007040	1					
ANR	3007753	Argument	& buf [ ret ]		3007040	0					
ANR	3007754	UnaryOperationExpression	& buf [ ret ]		3007040	0					
ANR	3007755	UnaryOperator	&		3007040	0					
ANR	3007756	ArrayIndexing	buf [ ret ]		3007040	1					
ANR	3007757	Identifier	buf		3007040	0					
ANR	3007758	Identifier	ret		3007040	1					
ANR	3007759	Argument	temp		3007040	1					
ANR	3007760	Identifier	temp		3007040	0					
ANR	3007761	Argument	temp_size		3007040	2					
ANR	3007762	Identifier	temp_size		3007040	0					
ANR	3007763	ExpressionStatement	ret += temp_size	229:16:3977:3993	3007040	1	True				
ANR	3007764	AssignmentExpression	ret += temp_size		3007040	0		+=			
ANR	3007765	Identifier	ret		3007040	0					
ANR	3007766	Identifier	temp_size		3007040	1					
ANR	3007767	ExpressionStatement	temp_size = 0	231:16:4012:4025	3007040	2	True				
ANR	3007768	AssignmentExpression	temp_size = 0		3007040	0		=			
ANR	3007769	Identifier	temp_size		3007040	0					
ANR	3007770	PrimaryExpression	0		3007040	1					
ANR	3007771	IfStatement	if ( bits > 0 )		3007040	15					
ANR	3007772	Condition	bits > 0	239:11:4067:4074	3007040	0	True				
ANR	3007773	RelationalExpression	bits > 0		3007040	0		>			
ANR	3007774	Identifier	bits		3007040	0					
ANR	3007775	PrimaryExpression	0		3007040	1					
ANR	3007776	CompoundStatement		237:21:3908:3908	3007040	1					
ANR	3007777	ExpressionStatement	"AV_WB32 ( & buf [ ret ] , flags )"	241:12:4092:4117	3007040	0	True				
ANR	3007778	CallExpression	"AV_WB32 ( & buf [ ret ] , flags )"		3007040	0					
ANR	3007779	Callee	AV_WB32		3007040	0					
ANR	3007780	Identifier	AV_WB32		3007040	0					
ANR	3007781	ArgumentList	& buf [ ret ]		3007040	1					
ANR	3007782	Argument	& buf [ ret ]		3007040	0					
ANR	3007783	UnaryOperationExpression	& buf [ ret ]		3007040	0					
ANR	3007784	UnaryOperator	&		3007040	0					
ANR	3007785	ArrayIndexing	buf [ ret ]		3007040	1					
ANR	3007786	Identifier	buf		3007040	0					
ANR	3007787	Identifier	ret		3007040	1					
ANR	3007788	Argument	flags		3007040	1					
ANR	3007789	Identifier	flags		3007040	0					
ANR	3007790	ExpressionStatement	ret += 4	243:12:4132:4140	3007040	1	True				
ANR	3007791	AssignmentExpression	ret += 4		3007040	0		+=			
ANR	3007792	Identifier	ret		3007040	0					
ANR	3007793	PrimaryExpression	4		3007040	1					
ANR	3007794	ExpressionStatement	"memcpy ( & buf [ ret ] , temp , temp_size )"	245:12:4155:4189	3007040	2	True				
ANR	3007795	CallExpression	"memcpy ( & buf [ ret ] , temp , temp_size )"		3007040	0					
ANR	3007796	Callee	memcpy		3007040	0					
ANR	3007797	Identifier	memcpy		3007040	0					
ANR	3007798	ArgumentList	& buf [ ret ]		3007040	1					
ANR	3007799	Argument	& buf [ ret ]		3007040	0					
ANR	3007800	UnaryOperationExpression	& buf [ ret ]		3007040	0					
ANR	3007801	UnaryOperator	&		3007040	0					
ANR	3007802	ArrayIndexing	buf [ ret ]		3007040	1					
ANR	3007803	Identifier	buf		3007040	0					
ANR	3007804	Identifier	ret		3007040	1					
ANR	3007805	Argument	temp		3007040	1					
ANR	3007806	Identifier	temp		3007040	0					
ANR	3007807	Argument	temp_size		3007040	2					
ANR	3007808	Identifier	temp_size		3007040	0					
ANR	3007809	ExpressionStatement	ret += temp_size	247:12:4204:4220	3007040	3	True				
ANR	3007810	AssignmentExpression	ret += temp_size		3007040	0		+=			
ANR	3007811	Identifier	ret		3007040	0					
ANR	3007812	Identifier	temp_size		3007040	1					
ANR	3007813	ExpressionStatement	"write_chunk_header ( buf + header_ofs , 0x31 , ret - header_ofs - CHUNK_HEADER_SIZE )"	253:8:4244:4324	3007040	16	True				
ANR	3007814	CallExpression	"write_chunk_header ( buf + header_ofs , 0x31 , ret - header_ofs - CHUNK_HEADER_SIZE )"		3007040	0					
ANR	3007815	Callee	write_chunk_header		3007040	0					
ANR	3007816	Identifier	write_chunk_header		3007040	0					
ANR	3007817	ArgumentList	buf + header_ofs		3007040	1					
ANR	3007818	Argument	buf + header_ofs		3007040	0					
ANR	3007819	AdditiveExpression	buf + header_ofs		3007040	0		+			
ANR	3007820	Identifier	buf		3007040	0					
ANR	3007821	Identifier	header_ofs		3007040	1					
ANR	3007822	Argument	0x31		3007040	1					
ANR	3007823	PrimaryExpression	0x31		3007040	0					
ANR	3007824	Argument	ret - header_ofs - CHUNK_HEADER_SIZE		3007040	2					
ANR	3007825	AdditiveExpression	ret - header_ofs - CHUNK_HEADER_SIZE		3007040	0		-			
ANR	3007826	Identifier	ret		3007040	0					
ANR	3007827	AdditiveExpression	header_ofs - CHUNK_HEADER_SIZE		3007040	1		-			
ANR	3007828	Identifier	header_ofs		3007040	0					
ANR	3007829	Identifier	CHUNK_HEADER_SIZE		3007040	1					
ANR	3007830	BreakStatement	break ;	257:8:4337:4342	3007040	17	True				
ANR	3007831	ReturnStatement	return ret ;	263:4:4358:4368	3007040	9	True				
ANR	3007832	Identifier	ret		3007040	0					
ANR	3007833	ReturnType	static int		3007040	1					
ANR	3007834	Identifier	encode_mode		3007040	2					
ANR	3007835	ParameterList	"CinepakEncContext * s , CinepakMode mode , int h , int v1_size , int v4_size , int v4 , AVPicture * scratch_pict , strip_info * info , unsigned char * buf"		3007040	3					
ANR	3007836	Parameter	CinepakEncContext * s	1:23:23:42	3007040	0	True				
ANR	3007837	ParameterType	CinepakEncContext *		3007040	0					
ANR	3007838	Identifier	s		3007040	1					
ANR	3007839	Parameter	CinepakMode mode	1:45:45:60	3007040	1	True				
ANR	3007840	ParameterType	CinepakMode		3007040	0					
ANR	3007841	Identifier	mode		3007040	1					
ANR	3007842	Parameter	int h	1:63:63:67	3007040	2	True				
ANR	3007843	ParameterType	int		3007040	0					
ANR	3007844	Identifier	h		3007040	1					
ANR	3007845	Parameter	int v1_size	1:70:70:80	3007040	3	True				
ANR	3007846	ParameterType	int		3007040	0					
ANR	3007847	Identifier	v1_size		3007040	1					
ANR	3007848	Parameter	int v4_size	1:83:83:93	3007040	4	True				
ANR	3007849	ParameterType	int		3007040	0					
ANR	3007850	Identifier	v4_size		3007040	1					
ANR	3007851	Parameter	int v4	1:96:96:101	3007040	5	True				
ANR	3007852	ParameterType	int		3007040	0					
ANR	3007853	Identifier	v4		3007040	1					
ANR	3007854	Parameter	AVPicture * scratch_pict	1:104:104:126	3007040	6	True				
ANR	3007855	ParameterType	AVPicture *		3007040	0					
ANR	3007856	Identifier	scratch_pict		3007040	1					
ANR	3007857	Parameter	strip_info * info	1:129:129:144	3007040	7	True				
ANR	3007858	ParameterType	strip_info *		3007040	0					
ANR	3007859	Identifier	info		3007040	1					
ANR	3007860	Parameter	unsigned char * buf	1:147:147:164	3007040	8	True				
ANR	3007861	ParameterType	unsigned char *		3007040	0					
ANR	3007862	Identifier	buf		3007040	1					
ANR	3007863	CFGEntryNode	ENTRY		3007040		True				
ANR	3007864	CFGExitNode	EXIT		3007040		True				
ANR	3007865	Symbol	* x		3007040						
ANR	3007866	Symbol	* * mb		3007040						
ANR	3007867	Symbol	* y		3007040						
ANR	3007868	Symbol	* z		3007040						
ANR	3007869	Symbol	& sub_scratch		3007040						
ANR	3007870	Symbol	FFMIN		3007040						
ANR	3007871	Symbol	mb -> best_encoding		3007040						
ANR	3007872	Symbol	* * * mb		3007040						
ANR	3007873	Symbol	mode		3007040						
ANR	3007874	Symbol	s -> mb [ x ] . v1_vector		3007040						
ANR	3007875	Symbol	mb		3007040						
ANR	3007876	Symbol	scratch_pict		3007040						
ANR	3007877	Symbol	info		3007040						
ANR	3007878	Symbol	ret		3007040						
ANR	3007879	Symbol	* buf		3007040						
ANR	3007880	Symbol	mb_count		3007040						
ANR	3007881	Symbol	sub_scratch		3007040						
ANR	3007882	Symbol	* v4		3007040						
ANR	3007883	Symbol	bits		3007040						
ANR	3007884	Symbol	* * mb -> v4_vector		3007040						
ANR	3007885	Symbol	header_ofs		3007040						
ANR	3007886	Symbol	MB_SIZE		3007040						
ANR	3007887	Symbol	mb -> v1_vector		3007040						
ANR	3007888	Symbol	* temp		3007040						
ANR	3007889	Symbol	s -> w		3007040						
ANR	3007890	Symbol	* mb -> v4_vector		3007040						
ANR	3007891	Symbol	flags		3007040						
ANR	3007892	Symbol	MB_AREA		3007040						
ANR	3007893	Symbol	encode_codebook		3007040						
ANR	3007894	Symbol	write_chunk_header		3007040						
ANR	3007895	Symbol	* mb		3007040						
ANR	3007896	Symbol	* * s		3007040						
ANR	3007897	Symbol	info -> v1_codebook		3007040						
ANR	3007898	Symbol	MODE_MC		3007040						
ANR	3007899	Symbol	temp		3007040						
ANR	3007900	Symbol	CHUNK_HEADER_SIZE		3007040						
ANR	3007901	Symbol	temp_size		3007040						
ANR	3007902	Symbol	info -> v4_codebook		3007040						
ANR	3007903	Symbol	h		3007040						
ANR	3007904	Symbol	v1_size		3007040						
ANR	3007905	Symbol	* * v4		3007040						
ANR	3007906	Symbol	v4_size		3007040						
ANR	3007907	Symbol	s -> mb		3007040						
ANR	3007908	Symbol	ENC_SKIP		3007040						
ANR	3007909	Symbol	ENC_V1		3007040						
ANR	3007910	Symbol	ENC_V4		3007040						
ANR	3007911	Symbol	MODE_V1_ONLY		3007040						
ANR	3007912	Symbol	s -> mb [ y ] . best_encoding		3007040						
ANR	3007913	Symbol	should_write_temp		3007040						
ANR	3007914	Symbol	mb -> v4_vector		3007040						
ANR	3007915	Symbol	buf		3007040						
ANR	3007916	Symbol	s		3007040						
ANR	3007917	Symbol	x		3007040						
ANR	3007918	Symbol	y		3007040						
ANR	3007919	Symbol	z		3007040						
ANR	3007920	Symbol	needs_extra_bit		3007040						
ANR	3007921	Symbol	* info		3007040						
ANR	3007922	Symbol	* s		3007040						
ANR	3007923	Symbol	v4		3007040						
ANR	3007924	Symbol	* s -> mb		3007040						
