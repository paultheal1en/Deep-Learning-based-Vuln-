command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9343427	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vpx_init_0.c								
ANR	9343428	Function	vpx_init	1:0:0:6597							
ANR	9343429	FunctionDef	"vpx_init (AVCodecContext * avctx , const struct vpx_codec_iface * iface)"		9343428	0					
ANR	9343430	CompoundStatement		5:0:118:6597	9343428	0					
ANR	9343431	IdentifierDeclStatement	VP8Context * ctx = avctx -> priv_data ;	7:4:125:159	9343428	0	True				
ANR	9343432	IdentifierDecl	* ctx = avctx -> priv_data		9343428	0					
ANR	9343433	IdentifierDeclType	VP8Context *		9343428	0					
ANR	9343434	Identifier	ctx		9343428	1					
ANR	9343435	AssignmentExpression	* ctx = avctx -> priv_data		9343428	2		=			
ANR	9343436	Identifier	ctx		9343428	0					
ANR	9343437	PtrMemberAccess	avctx -> priv_data		9343428	1					
ANR	9343438	Identifier	avctx		9343428	0					
ANR	9343439	Identifier	priv_data		9343428	1					
ANR	9343440	IdentifierDeclStatement	struct vpx_codec_enc_cfg enccfg = { 0 } ;	9:4:166:205	9343428	1	True				
ANR	9343441	IdentifierDecl	enccfg = { 0 }		9343428	0					
ANR	9343442	IdentifierDeclType	struct vpx_codec_enc_cfg		9343428	0					
ANR	9343443	Identifier	enccfg		9343428	1					
ANR	9343444	AssignmentExpression	enccfg = { 0 }		9343428	2		=			
ANR	9343445	Identifier	enccfg		9343428	0					
ANR	9343446	InitializerList	0		9343428	1					
ANR	9343447	PrimaryExpression	0		9343428	0					
ANR	9343448	IdentifierDeclStatement	int res ;	11:4:212:219	9343428	2	True				
ANR	9343449	IdentifierDecl	res		9343428	0					
ANR	9343450	IdentifierDeclType	int		9343428	0					
ANR	9343451	Identifier	res		9343428	1					
ANR	9343452	ExpressionStatement	"av_log ( avctx , AV_LOG_INFO , ""%s\\n"" , vpx_codec_version_str ( ) )"	15:4:228:287	9343428	3	True				
ANR	9343453	CallExpression	"av_log ( avctx , AV_LOG_INFO , ""%s\\n"" , vpx_codec_version_str ( ) )"		9343428	0					
ANR	9343454	Callee	av_log		9343428	0					
ANR	9343455	Identifier	av_log		9343428	0					
ANR	9343456	ArgumentList	avctx		9343428	1					
ANR	9343457	Argument	avctx		9343428	0					
ANR	9343458	Identifier	avctx		9343428	0					
ANR	9343459	Argument	AV_LOG_INFO		9343428	1					
ANR	9343460	Identifier	AV_LOG_INFO		9343428	0					
ANR	9343461	Argument	"""%s\\n"""		9343428	2					
ANR	9343462	PrimaryExpression	"""%s\\n"""		9343428	0					
ANR	9343463	Argument	vpx_codec_version_str ( )		9343428	3					
ANR	9343464	CallExpression	vpx_codec_version_str ( )		9343428	0					
ANR	9343465	Callee	vpx_codec_version_str		9343428	0					
ANR	9343466	Identifier	vpx_codec_version_str		9343428	0					
ANR	9343467	ArgumentList			9343428	1					
ANR	9343468	ExpressionStatement	"av_log ( avctx , AV_LOG_VERBOSE , ""%s\\n"" , vpx_codec_build_config ( ) )"	17:4:294:357	9343428	4	True				
ANR	9343469	CallExpression	"av_log ( avctx , AV_LOG_VERBOSE , ""%s\\n"" , vpx_codec_build_config ( ) )"		9343428	0					
ANR	9343470	Callee	av_log		9343428	0					
ANR	9343471	Identifier	av_log		9343428	0					
ANR	9343472	ArgumentList	avctx		9343428	1					
ANR	9343473	Argument	avctx		9343428	0					
ANR	9343474	Identifier	avctx		9343428	0					
ANR	9343475	Argument	AV_LOG_VERBOSE		9343428	1					
ANR	9343476	Identifier	AV_LOG_VERBOSE		9343428	0					
ANR	9343477	Argument	"""%s\\n"""		9343428	2					
ANR	9343478	PrimaryExpression	"""%s\\n"""		9343428	0					
ANR	9343479	Argument	vpx_codec_build_config ( )		9343428	3					
ANR	9343480	CallExpression	vpx_codec_build_config ( )		9343428	0					
ANR	9343481	Callee	vpx_codec_build_config		9343428	0					
ANR	9343482	Identifier	vpx_codec_build_config		9343428	0					
ANR	9343483	ArgumentList			9343428	1					
ANR	9343484	IfStatement	"if ( ( res = vpx_codec_enc_config_default ( iface , & enccfg , 0 ) ) != VPX_CODEC_OK )"		9343428	5					
ANR	9343485	Condition	"( res = vpx_codec_enc_config_default ( iface , & enccfg , 0 ) ) != VPX_CODEC_OK"	21:8:370:440	9343428	0	True				
ANR	9343486	EqualityExpression	"( res = vpx_codec_enc_config_default ( iface , & enccfg , 0 ) ) != VPX_CODEC_OK"		9343428	0		!=			
ANR	9343487	AssignmentExpression	"res = vpx_codec_enc_config_default ( iface , & enccfg , 0 )"		9343428	0		=			
ANR	9343488	Identifier	res		9343428	0					
ANR	9343489	CallExpression	"vpx_codec_enc_config_default ( iface , & enccfg , 0 )"		9343428	1					
ANR	9343490	Callee	vpx_codec_enc_config_default		9343428	0					
ANR	9343491	Identifier	vpx_codec_enc_config_default		9343428	0					
ANR	9343492	ArgumentList	iface		9343428	1					
ANR	9343493	Argument	iface		9343428	0					
ANR	9343494	Identifier	iface		9343428	0					
ANR	9343495	Argument	& enccfg		9343428	1					
ANR	9343496	UnaryOperationExpression	& enccfg		9343428	0					
ANR	9343497	UnaryOperator	&		9343428	0					
ANR	9343498	Identifier	enccfg		9343428	1					
ANR	9343499	Argument	0		9343428	2					
ANR	9343500	PrimaryExpression	0		9343428	0					
ANR	9343501	Identifier	VPX_CODEC_OK		9343428	1					
ANR	9343502	CompoundStatement		17:81:324:324	9343428	1					
ANR	9343503	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Failed to get config: %s\\n"" , vpx_codec_err_to_string ( res ) )"	23:8:454:557	9343428	0	True				
ANR	9343504	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Failed to get config: %s\\n"" , vpx_codec_err_to_string ( res ) )"		9343428	0					
ANR	9343505	Callee	av_log		9343428	0					
ANR	9343506	Identifier	av_log		9343428	0					
ANR	9343507	ArgumentList	avctx		9343428	1					
ANR	9343508	Argument	avctx		9343428	0					
ANR	9343509	Identifier	avctx		9343428	0					
ANR	9343510	Argument	AV_LOG_ERROR		9343428	1					
ANR	9343511	Identifier	AV_LOG_ERROR		9343428	0					
ANR	9343512	Argument	"""Failed to get config: %s\\n"""		9343428	2					
ANR	9343513	PrimaryExpression	"""Failed to get config: %s\\n"""		9343428	0					
ANR	9343514	Argument	vpx_codec_err_to_string ( res )		9343428	3					
ANR	9343515	CallExpression	vpx_codec_err_to_string ( res )		9343428	0					
ANR	9343516	Callee	vpx_codec_err_to_string		9343428	0					
ANR	9343517	Identifier	vpx_codec_err_to_string		9343428	0					
ANR	9343518	ArgumentList	res		9343428	1					
ANR	9343519	Argument	res		9343428	0					
ANR	9343520	Identifier	res		9343428	0					
ANR	9343521	ReturnStatement	return AVERROR ( EINVAL ) ;	27:8:568:590	9343428	1	True				
ANR	9343522	CallExpression	AVERROR ( EINVAL )		9343428	0					
ANR	9343523	Callee	AVERROR		9343428	0					
ANR	9343524	Identifier	AVERROR		9343428	0					
ANR	9343525	ArgumentList	EINVAL		9343428	1					
ANR	9343526	Argument	EINVAL		9343428	0					
ANR	9343527	Identifier	EINVAL		9343428	0					
ANR	9343528	ExpressionStatement	"dump_enc_cfg ( avctx , & enccfg )"	31:4:604:632	9343428	6	True				
ANR	9343529	CallExpression	"dump_enc_cfg ( avctx , & enccfg )"		9343428	0					
ANR	9343530	Callee	dump_enc_cfg		9343428	0					
ANR	9343531	Identifier	dump_enc_cfg		9343428	0					
ANR	9343532	ArgumentList	avctx		9343428	1					
ANR	9343533	Argument	avctx		9343428	0					
ANR	9343534	Identifier	avctx		9343428	0					
ANR	9343535	Argument	& enccfg		9343428	1					
ANR	9343536	UnaryOperationExpression	& enccfg		9343428	0					
ANR	9343537	UnaryOperator	&		9343428	0					
ANR	9343538	Identifier	enccfg		9343428	1					
ANR	9343539	ExpressionStatement	enccfg . g_w = avctx -> width	35:4:641:677	9343428	7	True				
ANR	9343540	AssignmentExpression	enccfg . g_w = avctx -> width		9343428	0		=			
ANR	9343541	MemberAccess	enccfg . g_w		9343428	0					
ANR	9343542	Identifier	enccfg		9343428	0					
ANR	9343543	Identifier	g_w		9343428	1					
ANR	9343544	PtrMemberAccess	avctx -> width		9343428	1					
ANR	9343545	Identifier	avctx		9343428	0					
ANR	9343546	Identifier	width		9343428	1					
ANR	9343547	ExpressionStatement	enccfg . g_h = avctx -> height	37:4:684:721	9343428	8	True				
ANR	9343548	AssignmentExpression	enccfg . g_h = avctx -> height		9343428	0		=			
ANR	9343549	MemberAccess	enccfg . g_h		9343428	0					
ANR	9343550	Identifier	enccfg		9343428	0					
ANR	9343551	Identifier	g_h		9343428	1					
ANR	9343552	PtrMemberAccess	avctx -> height		9343428	1					
ANR	9343553	Identifier	avctx		9343428	0					
ANR	9343554	Identifier	height		9343428	1					
ANR	9343555	ExpressionStatement	enccfg . g_timebase . num = avctx -> time_base . num	39:4:728:772	9343428	9	True				
ANR	9343556	AssignmentExpression	enccfg . g_timebase . num = avctx -> time_base . num		9343428	0		=			
ANR	9343557	MemberAccess	enccfg . g_timebase . num		9343428	0					
ANR	9343558	MemberAccess	enccfg . g_timebase		9343428	0					
ANR	9343559	Identifier	enccfg		9343428	0					
ANR	9343560	Identifier	g_timebase		9343428	1					
ANR	9343561	Identifier	num		9343428	1					
ANR	9343562	MemberAccess	avctx -> time_base . num		9343428	1					
ANR	9343563	PtrMemberAccess	avctx -> time_base		9343428	0					
ANR	9343564	Identifier	avctx		9343428	0					
ANR	9343565	Identifier	time_base		9343428	1					
ANR	9343566	Identifier	num		9343428	1					
ANR	9343567	ExpressionStatement	enccfg . g_timebase . den = avctx -> time_base . den	41:4:779:823	9343428	10	True				
ANR	9343568	AssignmentExpression	enccfg . g_timebase . den = avctx -> time_base . den		9343428	0		=			
ANR	9343569	MemberAccess	enccfg . g_timebase . den		9343428	0					
ANR	9343570	MemberAccess	enccfg . g_timebase		9343428	0					
ANR	9343571	Identifier	enccfg		9343428	0					
ANR	9343572	Identifier	g_timebase		9343428	1					
ANR	9343573	Identifier	den		9343428	1					
ANR	9343574	MemberAccess	avctx -> time_base . den		9343428	1					
ANR	9343575	PtrMemberAccess	avctx -> time_base		9343428	0					
ANR	9343576	Identifier	avctx		9343428	0					
ANR	9343577	Identifier	time_base		9343428	1					
ANR	9343578	Identifier	den		9343428	1					
ANR	9343579	ExpressionStatement	enccfg . g_threads = avctx -> thread_count	43:4:830:873	9343428	11	True				
ANR	9343580	AssignmentExpression	enccfg . g_threads = avctx -> thread_count		9343428	0		=			
ANR	9343581	MemberAccess	enccfg . g_threads		9343428	0					
ANR	9343582	Identifier	enccfg		9343428	0					
ANR	9343583	Identifier	g_threads		9343428	1					
ANR	9343584	PtrMemberAccess	avctx -> thread_count		9343428	1					
ANR	9343585	Identifier	avctx		9343428	0					
ANR	9343586	Identifier	thread_count		9343428	1					
ANR	9343587	IfStatement	if ( ctx -> lag_in_frames >= 0 )		9343428	12					
ANR	9343588	Condition	ctx -> lag_in_frames >= 0	47:8:886:908	9343428	0	True				
ANR	9343589	RelationalExpression	ctx -> lag_in_frames >= 0		9343428	0		>=			
ANR	9343590	PtrMemberAccess	ctx -> lag_in_frames		9343428	0					
ANR	9343591	Identifier	ctx		9343428	0					
ANR	9343592	Identifier	lag_in_frames		9343428	1					
ANR	9343593	PrimaryExpression	0		9343428	1					
ANR	9343594	ExpressionStatement	enccfg . g_lag_in_frames = ctx -> lag_in_frames	49:8:920:963	9343428	1	True				
ANR	9343595	AssignmentExpression	enccfg . g_lag_in_frames = ctx -> lag_in_frames		9343428	0		=			
ANR	9343596	MemberAccess	enccfg . g_lag_in_frames		9343428	0					
ANR	9343597	Identifier	enccfg		9343428	0					
ANR	9343598	Identifier	g_lag_in_frames		9343428	1					
ANR	9343599	PtrMemberAccess	ctx -> lag_in_frames		9343428	1					
ANR	9343600	Identifier	ctx		9343428	0					
ANR	9343601	Identifier	lag_in_frames		9343428	1					
ANR	9343602	IfStatement	if ( avctx -> flags & CODEC_FLAG_PASS1 )		9343428	13					
ANR	9343603	Condition	avctx -> flags & CODEC_FLAG_PASS1	53:8:976:1006	9343428	0	True				
ANR	9343604	BitAndExpression	avctx -> flags & CODEC_FLAG_PASS1		9343428	0		&			
ANR	9343605	PtrMemberAccess	avctx -> flags		9343428	0					
ANR	9343606	Identifier	avctx		9343428	0					
ANR	9343607	Identifier	flags		9343428	1					
ANR	9343608	Identifier	CODEC_FLAG_PASS1		9343428	1					
ANR	9343609	ExpressionStatement	enccfg . g_pass = VPX_RC_FIRST_PASS	55:8:1018:1051	9343428	1	True				
ANR	9343610	AssignmentExpression	enccfg . g_pass = VPX_RC_FIRST_PASS		9343428	0		=			
ANR	9343611	MemberAccess	enccfg . g_pass		9343428	0					
ANR	9343612	Identifier	enccfg		9343428	0					
ANR	9343613	Identifier	g_pass		9343428	1					
ANR	9343614	Identifier	VPX_RC_FIRST_PASS		9343428	1					
ANR	9343615	ElseStatement	else		9343428	0					
ANR	9343616	IfStatement	if ( avctx -> flags & CODEC_FLAG_PASS2 )		9343428	0					
ANR	9343617	Condition	avctx -> flags & CODEC_FLAG_PASS2	57:13:1067:1097	9343428	0	True				
ANR	9343618	BitAndExpression	avctx -> flags & CODEC_FLAG_PASS2		9343428	0		&			
ANR	9343619	PtrMemberAccess	avctx -> flags		9343428	0					
ANR	9343620	Identifier	avctx		9343428	0					
ANR	9343621	Identifier	flags		9343428	1					
ANR	9343622	Identifier	CODEC_FLAG_PASS2		9343428	1					
ANR	9343623	ExpressionStatement	enccfg . g_pass = VPX_RC_LAST_PASS	59:8:1109:1141	9343428	1	True				
ANR	9343624	AssignmentExpression	enccfg . g_pass = VPX_RC_LAST_PASS		9343428	0		=			
ANR	9343625	MemberAccess	enccfg . g_pass		9343428	0					
ANR	9343626	Identifier	enccfg		9343428	0					
ANR	9343627	Identifier	g_pass		9343428	1					
ANR	9343628	Identifier	VPX_RC_LAST_PASS		9343428	1					
ANR	9343629	ElseStatement	else		9343428	0					
ANR	9343630	ExpressionStatement	enccfg . g_pass = VPX_RC_ONE_PASS	63:8:1162:1193	9343428	0	True				
ANR	9343631	AssignmentExpression	enccfg . g_pass = VPX_RC_ONE_PASS		9343428	0		=			
ANR	9343632	MemberAccess	enccfg . g_pass		9343428	0					
ANR	9343633	Identifier	enccfg		9343428	0					
ANR	9343634	Identifier	g_pass		9343428	1					
ANR	9343635	Identifier	VPX_RC_ONE_PASS		9343428	1					
ANR	9343636	IfStatement	if ( ! avctx -> bit_rate )		9343428	14					
ANR	9343637	Condition	! avctx -> bit_rate	67:8:1206:1221	9343428	0	True				
ANR	9343638	UnaryOperationExpression	! avctx -> bit_rate		9343428	0					
ANR	9343639	UnaryOperator	!		9343428	0					
ANR	9343640	PtrMemberAccess	avctx -> bit_rate		9343428	1					
ANR	9343641	Identifier	avctx		9343428	0					
ANR	9343642	Identifier	bit_rate		9343428	1					
ANR	9343643	ExpressionStatement	avctx -> bit_rate = enccfg . rc_target_bitrate * 1000	69:8:1233:1282	9343428	1	True				
ANR	9343644	AssignmentExpression	avctx -> bit_rate = enccfg . rc_target_bitrate * 1000		9343428	0		=			
ANR	9343645	PtrMemberAccess	avctx -> bit_rate		9343428	0					
ANR	9343646	Identifier	avctx		9343428	0					
ANR	9343647	Identifier	bit_rate		9343428	1					
ANR	9343648	MultiplicativeExpression	enccfg . rc_target_bitrate * 1000		9343428	1		*			
ANR	9343649	MemberAccess	enccfg . rc_target_bitrate		9343428	0					
ANR	9343650	Identifier	enccfg		9343428	0					
ANR	9343651	Identifier	rc_target_bitrate		9343428	1					
ANR	9343652	PrimaryExpression	1000		9343428	1					
ANR	9343653	ElseStatement	else		9343428	0					
ANR	9343654	ExpressionStatement	"enccfg . rc_target_bitrate = av_rescale_rnd ( avctx -> bit_rate , 1 , 1000 , AV_ROUND_NEAR_INF )"	73:8:1303:1436	9343428	0	True				
ANR	9343655	AssignmentExpression	"enccfg . rc_target_bitrate = av_rescale_rnd ( avctx -> bit_rate , 1 , 1000 , AV_ROUND_NEAR_INF )"		9343428	0		=			
ANR	9343656	MemberAccess	enccfg . rc_target_bitrate		9343428	0					
ANR	9343657	Identifier	enccfg		9343428	0					
ANR	9343658	Identifier	rc_target_bitrate		9343428	1					
ANR	9343659	CallExpression	"av_rescale_rnd ( avctx -> bit_rate , 1 , 1000 , AV_ROUND_NEAR_INF )"		9343428	1					
ANR	9343660	Callee	av_rescale_rnd		9343428	0					
ANR	9343661	Identifier	av_rescale_rnd		9343428	0					
ANR	9343662	ArgumentList	avctx -> bit_rate		9343428	1					
ANR	9343663	Argument	avctx -> bit_rate		9343428	0					
ANR	9343664	PtrMemberAccess	avctx -> bit_rate		9343428	0					
ANR	9343665	Identifier	avctx		9343428	0					
ANR	9343666	Identifier	bit_rate		9343428	1					
ANR	9343667	Argument	1		9343428	1					
ANR	9343668	PrimaryExpression	1		9343428	0					
ANR	9343669	Argument	1000		9343428	2					
ANR	9343670	PrimaryExpression	1000		9343428	0					
ANR	9343671	Argument	AV_ROUND_NEAR_INF		9343428	3					
ANR	9343672	Identifier	AV_ROUND_NEAR_INF		9343428	0					
ANR	9343673	IfStatement	if ( ctx -> crf )		9343428	15					
ANR	9343674	Condition	ctx -> crf	79:8:1449:1456	9343428	0	True				
ANR	9343675	PtrMemberAccess	ctx -> crf		9343428	0					
ANR	9343676	Identifier	ctx		9343428	0					
ANR	9343677	Identifier	crf		9343428	1					
ANR	9343678	ExpressionStatement	enccfg . rc_end_usage = VPX_CQ	81:8:1468:1496	9343428	1	True				
ANR	9343679	AssignmentExpression	enccfg . rc_end_usage = VPX_CQ		9343428	0		=			
ANR	9343680	MemberAccess	enccfg . rc_end_usage		9343428	0					
ANR	9343681	Identifier	enccfg		9343428	0					
ANR	9343682	Identifier	rc_end_usage		9343428	1					
ANR	9343683	Identifier	VPX_CQ		9343428	1					
ANR	9343684	ElseStatement	else		9343428	0					
ANR	9343685	IfStatement	if ( avctx -> rc_min_rate == avctx -> rc_max_rate && avctx -> rc_min_rate == avctx -> bit_rate )		9343428	0					
ANR	9343686	Condition	avctx -> rc_min_rate == avctx -> rc_max_rate && avctx -> rc_min_rate == avctx -> bit_rate	83:13:1512:1606	9343428	0	True				
ANR	9343687	AndExpression	avctx -> rc_min_rate == avctx -> rc_max_rate && avctx -> rc_min_rate == avctx -> bit_rate		9343428	0		&&			
ANR	9343688	EqualityExpression	avctx -> rc_min_rate == avctx -> rc_max_rate		9343428	0		==			
ANR	9343689	PtrMemberAccess	avctx -> rc_min_rate		9343428	0					
ANR	9343690	Identifier	avctx		9343428	0					
ANR	9343691	Identifier	rc_min_rate		9343428	1					
ANR	9343692	PtrMemberAccess	avctx -> rc_max_rate		9343428	1					
ANR	9343693	Identifier	avctx		9343428	0					
ANR	9343694	Identifier	rc_max_rate		9343428	1					
ANR	9343695	EqualityExpression	avctx -> rc_min_rate == avctx -> bit_rate		9343428	1		==			
ANR	9343696	PtrMemberAccess	avctx -> rc_min_rate		9343428	0					
ANR	9343697	Identifier	avctx		9343428	0					
ANR	9343698	Identifier	rc_min_rate		9343428	1					
ANR	9343699	PtrMemberAccess	avctx -> bit_rate		9343428	1					
ANR	9343700	Identifier	avctx		9343428	0					
ANR	9343701	Identifier	bit_rate		9343428	1					
ANR	9343702	ExpressionStatement	enccfg . rc_end_usage = VPX_CBR	87:8:1618:1647	9343428	1	True				
ANR	9343703	AssignmentExpression	enccfg . rc_end_usage = VPX_CBR		9343428	0		=			
ANR	9343704	MemberAccess	enccfg . rc_end_usage		9343428	0					
ANR	9343705	Identifier	enccfg		9343428	0					
ANR	9343706	Identifier	rc_end_usage		9343428	1					
ANR	9343707	Identifier	VPX_CBR		9343428	1					
ANR	9343708	IfStatement	if ( avctx -> qmin > 0 )		9343428	16					
ANR	9343709	Condition	avctx -> qmin > 0	91:8:1660:1674	9343428	0	True				
ANR	9343710	RelationalExpression	avctx -> qmin > 0		9343428	0		>			
ANR	9343711	PtrMemberAccess	avctx -> qmin		9343428	0					
ANR	9343712	Identifier	avctx		9343428	0					
ANR	9343713	Identifier	qmin		9343428	1					
ANR	9343714	PrimaryExpression	0		9343428	1					
ANR	9343715	ExpressionStatement	enccfg . rc_min_quantizer = avctx -> qmin	93:8:1686:1723	9343428	1	True				
ANR	9343716	AssignmentExpression	enccfg . rc_min_quantizer = avctx -> qmin		9343428	0		=			
ANR	9343717	MemberAccess	enccfg . rc_min_quantizer		9343428	0					
ANR	9343718	Identifier	enccfg		9343428	0					
ANR	9343719	Identifier	rc_min_quantizer		9343428	1					
ANR	9343720	PtrMemberAccess	avctx -> qmin		9343428	1					
ANR	9343721	Identifier	avctx		9343428	0					
ANR	9343722	Identifier	qmin		9343428	1					
ANR	9343723	IfStatement	if ( avctx -> qmax > 0 )		9343428	17					
ANR	9343724	Condition	avctx -> qmax > 0	95:8:1734:1748	9343428	0	True				
ANR	9343725	RelationalExpression	avctx -> qmax > 0		9343428	0		>			
ANR	9343726	PtrMemberAccess	avctx -> qmax		9343428	0					
ANR	9343727	Identifier	avctx		9343428	0					
ANR	9343728	Identifier	qmax		9343428	1					
ANR	9343729	PrimaryExpression	0		9343428	1					
ANR	9343730	ExpressionStatement	enccfg . rc_max_quantizer = avctx -> qmax	97:8:1760:1797	9343428	1	True				
ANR	9343731	AssignmentExpression	enccfg . rc_max_quantizer = avctx -> qmax		9343428	0		=			
ANR	9343732	MemberAccess	enccfg . rc_max_quantizer		9343428	0					
ANR	9343733	Identifier	enccfg		9343428	0					
ANR	9343734	Identifier	rc_max_quantizer		9343428	1					
ANR	9343735	PtrMemberAccess	avctx -> qmax		9343428	1					
ANR	9343736	Identifier	avctx		9343428	0					
ANR	9343737	Identifier	qmax		9343428	1					
ANR	9343738	ExpressionStatement	enccfg . rc_dropframe_thresh = avctx -> frame_skip_threshold	99:4:1804:1860	9343428	18	True				
ANR	9343739	AssignmentExpression	enccfg . rc_dropframe_thresh = avctx -> frame_skip_threshold		9343428	0		=			
ANR	9343740	MemberAccess	enccfg . rc_dropframe_thresh		9343428	0					
ANR	9343741	Identifier	enccfg		9343428	0					
ANR	9343742	Identifier	rc_dropframe_thresh		9343428	1					
ANR	9343743	PtrMemberAccess	avctx -> frame_skip_threshold		9343428	1					
ANR	9343744	Identifier	avctx		9343428	0					
ANR	9343745	Identifier	frame_skip_threshold		9343428	1					
ANR	9343746	ExpressionStatement	enccfg . rc_2pass_vbr_bias_pct = round ( avctx -> qcompress * 100 )	105:4:1905:1975	9343428	19	True				
ANR	9343747	AssignmentExpression	enccfg . rc_2pass_vbr_bias_pct = round ( avctx -> qcompress * 100 )		9343428	0		=			
ANR	9343748	MemberAccess	enccfg . rc_2pass_vbr_bias_pct		9343428	0					
ANR	9343749	Identifier	enccfg		9343428	0					
ANR	9343750	Identifier	rc_2pass_vbr_bias_pct		9343428	1					
ANR	9343751	CallExpression	round ( avctx -> qcompress * 100 )		9343428	1					
ANR	9343752	Callee	round		9343428	0					
ANR	9343753	Identifier	round		9343428	0					
ANR	9343754	ArgumentList	avctx -> qcompress * 100		9343428	1					
ANR	9343755	Argument	avctx -> qcompress * 100		9343428	0					
ANR	9343756	MultiplicativeExpression	avctx -> qcompress * 100		9343428	0		*			
ANR	9343757	PtrMemberAccess	avctx -> qcompress		9343428	0					
ANR	9343758	Identifier	avctx		9343428	0					
ANR	9343759	Identifier	qcompress		9343428	1					
ANR	9343760	PrimaryExpression	100		9343428	1					
ANR	9343761	Statement	enccfg	107:4:1982:1987	9343428	20	True				
ANR	9343762	Statement	.	107:10:1988:1988	9343428	21	True				
ANR	9343763	Statement	rc_2pass_vbr_minsection_pct	107:11:1989:2015	9343428	22	True				
ANR	9343764	Statement	=	107:43:2021:2021	9343428	23	True				
ANR	9343765	Statement	avctx	109:8:2032:2036	9343428	24	True				
ANR	9343766	Statement	->	109:13:2037:2038	9343428	25	True				
ANR	9343767	Statement	rc_min_rate	109:15:2039:2049	9343428	26	True				
ANR	9343768	Statement	*	109:27:2051:2051	9343428	27	True				
ANR	9343769	Statement	100L	109:29:2053:2056	9343428	28	True				
ANR	9343770	ExpressionStatement	L / avctx -> bit_rate	109:33:2057:2076	9343428	29	True				
ANR	9343771	MultiplicativeExpression	L / avctx -> bit_rate		9343428	0		/			
ANR	9343772	Identifier	L		9343428	0					
ANR	9343773	PtrMemberAccess	avctx -> bit_rate		9343428	1					
ANR	9343774	Identifier	avctx		9343428	0					
ANR	9343775	Identifier	bit_rate		9343428	1					
ANR	9343776	IfStatement	if ( avctx -> rc_max_rate )		9343428	30					
ANR	9343777	Condition	avctx -> rc_max_rate	111:8:2087:2104	9343428	0	True				
ANR	9343778	PtrMemberAccess	avctx -> rc_max_rate		9343428	0					
ANR	9343779	Identifier	avctx		9343428	0					
ANR	9343780	Identifier	rc_max_rate		9343428	1					
ANR	9343781	Statement	enccfg	113:8:2116:2121	9343428	1	True				
ANR	9343782	Statement	.	113:14:2122:2122	9343428	31	True				
ANR	9343783	Statement	rc_2pass_vbr_maxsection_pct	113:15:2123:2149	9343428	32	True				
ANR	9343784	Statement	=	113:43:2151:2151	9343428	33	True				
ANR	9343785	Statement	avctx	115:12:2166:2170	9343428	34	True				
ANR	9343786	Statement	->	115:17:2171:2172	9343428	35	True				
ANR	9343787	Statement	rc_max_rate	115:19:2173:2183	9343428	36	True				
ANR	9343788	Statement	*	115:31:2185:2185	9343428	37	True				
ANR	9343789	Statement	100L	115:33:2187:2190	9343428	38	True				
ANR	9343790	ExpressionStatement	L / avctx -> bit_rate	115:37:2191:2210	9343428	39	True				
ANR	9343791	MultiplicativeExpression	L / avctx -> bit_rate		9343428	0		/			
ANR	9343792	Identifier	L		9343428	0					
ANR	9343793	PtrMemberAccess	avctx -> bit_rate		9343428	1					
ANR	9343794	Identifier	avctx		9343428	0					
ANR	9343795	Identifier	bit_rate		9343428	1					
ANR	9343796	IfStatement	if ( avctx -> rc_buffer_size )		9343428	40					
ANR	9343797	Condition	avctx -> rc_buffer_size	119:8:2223:2243	9343428	0	True				
ANR	9343798	PtrMemberAccess	avctx -> rc_buffer_size		9343428	0					
ANR	9343799	Identifier	avctx		9343428	0					
ANR	9343800	Identifier	rc_buffer_size		9343428	1					
ANR	9343801	Statement	enccfg	121:8:2255:2260	9343428	1	True				
ANR	9343802	Statement	.	121:14:2261:2261	9343428	41	True				
ANR	9343803	Statement	rc_buf_sz	121:15:2262:2270	9343428	42	True				
ANR	9343804	Statement	=	121:33:2280:2280	9343428	43	True				
ANR	9343805	Statement	avctx	123:12:2295:2299	9343428	44	True				
ANR	9343806	Statement	->	123:17:2300:2301	9343428	45	True				
ANR	9343807	Statement	rc_buffer_size	123:19:2302:2315	9343428	46	True				
ANR	9343808	Statement	*	123:34:2317:2317	9343428	47	True				
ANR	9343809	Statement	1000L	123:36:2319:2323	9343428	48	True				
ANR	9343810	ExpressionStatement	L / avctx -> bit_rate	123:41:2324:2343	9343428	49	True				
ANR	9343811	MultiplicativeExpression	L / avctx -> bit_rate		9343428	0		/			
ANR	9343812	Identifier	L		9343428	0					
ANR	9343813	PtrMemberAccess	avctx -> bit_rate		9343428	1					
ANR	9343814	Identifier	avctx		9343428	0					
ANR	9343815	Identifier	bit_rate		9343428	1					
ANR	9343816	IfStatement	if ( avctx -> rc_initial_buffer_occupancy )		9343428	50					
ANR	9343817	Condition	avctx -> rc_initial_buffer_occupancy	125:8:2354:2387	9343428	0	True				
ANR	9343818	PtrMemberAccess	avctx -> rc_initial_buffer_occupancy		9343428	0					
ANR	9343819	Identifier	avctx		9343428	0					
ANR	9343820	Identifier	rc_initial_buffer_occupancy		9343428	1					
ANR	9343821	Statement	enccfg	127:8:2399:2404	9343428	1	True				
ANR	9343822	Statement	.	127:14:2405:2405	9343428	51	True				
ANR	9343823	Statement	rc_buf_initial_sz	127:15:2406:2422	9343428	52	True				
ANR	9343824	Statement	=	127:33:2424:2424	9343428	53	True				
ANR	9343825	Statement	avctx	129:12:2439:2443	9343428	54	True				
ANR	9343826	Statement	->	129:17:2444:2445	9343428	55	True				
ANR	9343827	Statement	rc_initial_buffer_occupancy	129:19:2446:2472	9343428	56	True				
ANR	9343828	Statement	*	129:47:2474:2474	9343428	57	True				
ANR	9343829	Statement	1000L	129:49:2476:2480	9343428	58	True				
ANR	9343830	ExpressionStatement	L / avctx -> bit_rate	129:54:2481:2500	9343428	59	True				
ANR	9343831	MultiplicativeExpression	L / avctx -> bit_rate		9343428	0		/			
ANR	9343832	Identifier	L		9343428	0					
ANR	9343833	PtrMemberAccess	avctx -> bit_rate		9343428	1					
ANR	9343834	Identifier	avctx		9343428	0					
ANR	9343835	Identifier	bit_rate		9343428	1					
ANR	9343836	ExpressionStatement	enccfg . rc_buf_optimal_sz = enccfg . rc_buf_sz * 5 / 6	131:4:2507:2562	9343428	60	True				
ANR	9343837	AssignmentExpression	enccfg . rc_buf_optimal_sz = enccfg . rc_buf_sz * 5 / 6		9343428	0		=			
ANR	9343838	MemberAccess	enccfg . rc_buf_optimal_sz		9343428	0					
ANR	9343839	Identifier	enccfg		9343428	0					
ANR	9343840	Identifier	rc_buf_optimal_sz		9343428	1					
ANR	9343841	MultiplicativeExpression	enccfg . rc_buf_sz * 5 / 6		9343428	1		*			
ANR	9343842	MemberAccess	enccfg . rc_buf_sz		9343428	0					
ANR	9343843	Identifier	enccfg		9343428	0					
ANR	9343844	Identifier	rc_buf_sz		9343428	1					
ANR	9343845	MultiplicativeExpression	5 / 6		9343428	1		/			
ANR	9343846	PrimaryExpression	5		9343428	0					
ANR	9343847	PrimaryExpression	6		9343428	1					
ANR	9343848	IfStatement	if ( avctx -> keyint_min >= 0 && avctx -> keyint_min == avctx -> gop_size )		9343428	61					
ANR	9343849	Condition	avctx -> keyint_min >= 0 && avctx -> keyint_min == avctx -> gop_size	137:8:2650:2711	9343428	0	True				
ANR	9343850	AndExpression	avctx -> keyint_min >= 0 && avctx -> keyint_min == avctx -> gop_size		9343428	0		&&			
ANR	9343851	RelationalExpression	avctx -> keyint_min >= 0		9343428	0		>=			
ANR	9343852	PtrMemberAccess	avctx -> keyint_min		9343428	0					
ANR	9343853	Identifier	avctx		9343428	0					
ANR	9343854	Identifier	keyint_min		9343428	1					
ANR	9343855	PrimaryExpression	0		9343428	1					
ANR	9343856	EqualityExpression	avctx -> keyint_min == avctx -> gop_size		9343428	1		==			
ANR	9343857	PtrMemberAccess	avctx -> keyint_min		9343428	0					
ANR	9343858	Identifier	avctx		9343428	0					
ANR	9343859	Identifier	keyint_min		9343428	1					
ANR	9343860	PtrMemberAccess	avctx -> gop_size		9343428	1					
ANR	9343861	Identifier	avctx		9343428	0					
ANR	9343862	Identifier	gop_size		9343428	1					
ANR	9343863	ExpressionStatement	enccfg . kf_min_dist = avctx -> keyint_min	139:8:2723:2761	9343428	1	True				
ANR	9343864	AssignmentExpression	enccfg . kf_min_dist = avctx -> keyint_min		9343428	0		=			
ANR	9343865	MemberAccess	enccfg . kf_min_dist		9343428	0					
ANR	9343866	Identifier	enccfg		9343428	0					
ANR	9343867	Identifier	kf_min_dist		9343428	1					
ANR	9343868	PtrMemberAccess	avctx -> keyint_min		9343428	1					
ANR	9343869	Identifier	avctx		9343428	0					
ANR	9343870	Identifier	keyint_min		9343428	1					
ANR	9343871	IfStatement	if ( avctx -> gop_size >= 0 )		9343428	62					
ANR	9343872	Condition	avctx -> gop_size >= 0	141:8:2772:2791	9343428	0	True				
ANR	9343873	RelationalExpression	avctx -> gop_size >= 0		9343428	0		>=			
ANR	9343874	PtrMemberAccess	avctx -> gop_size		9343428	0					
ANR	9343875	Identifier	avctx		9343428	0					
ANR	9343876	Identifier	gop_size		9343428	1					
ANR	9343877	PrimaryExpression	0		9343428	1					
ANR	9343878	ExpressionStatement	enccfg . kf_max_dist = avctx -> gop_size	143:8:2803:2839	9343428	1	True				
ANR	9343879	AssignmentExpression	enccfg . kf_max_dist = avctx -> gop_size		9343428	0		=			
ANR	9343880	MemberAccess	enccfg . kf_max_dist		9343428	0					
ANR	9343881	Identifier	enccfg		9343428	0					
ANR	9343882	Identifier	kf_max_dist		9343428	1					
ANR	9343883	PtrMemberAccess	avctx -> gop_size		9343428	1					
ANR	9343884	Identifier	avctx		9343428	0					
ANR	9343885	Identifier	gop_size		9343428	1					
ANR	9343886	IfStatement	if ( enccfg . g_pass == VPX_RC_FIRST_PASS )		9343428	63					
ANR	9343887	Condition	enccfg . g_pass == VPX_RC_FIRST_PASS	147:8:2852:2885	9343428	0	True				
ANR	9343888	EqualityExpression	enccfg . g_pass == VPX_RC_FIRST_PASS		9343428	0		==			
ANR	9343889	MemberAccess	enccfg . g_pass		9343428	0					
ANR	9343890	Identifier	enccfg		9343428	0					
ANR	9343891	Identifier	g_pass		9343428	1					
ANR	9343892	Identifier	VPX_RC_FIRST_PASS		9343428	1					
ANR	9343893	ExpressionStatement	enccfg . g_lag_in_frames = 0	149:8:2897:2923	9343428	1	True				
ANR	9343894	AssignmentExpression	enccfg . g_lag_in_frames = 0		9343428	0		=			
ANR	9343895	MemberAccess	enccfg . g_lag_in_frames		9343428	0					
ANR	9343896	Identifier	enccfg		9343428	0					
ANR	9343897	Identifier	g_lag_in_frames		9343428	1					
ANR	9343898	PrimaryExpression	0		9343428	1					
ANR	9343899	ElseStatement	else		9343428	0					
ANR	9343900	IfStatement	if ( enccfg . g_pass == VPX_RC_LAST_PASS )		9343428	0					
ANR	9343901	Condition	enccfg . g_pass == VPX_RC_LAST_PASS	151:13:2939:2971	9343428	0	True				
ANR	9343902	EqualityExpression	enccfg . g_pass == VPX_RC_LAST_PASS		9343428	0		==			
ANR	9343903	MemberAccess	enccfg . g_pass		9343428	0					
ANR	9343904	Identifier	enccfg		9343428	0					
ANR	9343905	Identifier	g_pass		9343428	1					
ANR	9343906	Identifier	VPX_RC_LAST_PASS		9343428	1					
ANR	9343907	CompoundStatement		149:8:2866:2886	9343428	1					
ANR	9343908	IdentifierDeclStatement	"int decode_size , ret ;"	153:8:2985:3005	9343428	0	True				
ANR	9343909	IdentifierDecl	decode_size		9343428	0					
ANR	9343910	IdentifierDeclType	int		9343428	0					
ANR	9343911	Identifier	decode_size		9343428	1					
ANR	9343912	IdentifierDecl	ret		9343428	1					
ANR	9343913	IdentifierDeclType	int		9343428	0					
ANR	9343914	Identifier	ret		9343428	1					
ANR	9343915	IfStatement	if ( ! avctx -> stats_in )		9343428	1					
ANR	9343916	Condition	! avctx -> stats_in	157:12:3022:3037	9343428	0	True				
ANR	9343917	UnaryOperationExpression	! avctx -> stats_in		9343428	0					
ANR	9343918	UnaryOperator	!		9343428	0					
ANR	9343919	PtrMemberAccess	avctx -> stats_in		9343428	1					
ANR	9343920	Identifier	avctx		9343428	0					
ANR	9343921	Identifier	stats_in		9343428	1					
ANR	9343922	CompoundStatement		153:30:2921:2921	9343428	1					
ANR	9343923	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""No stats file for second pass\\n"" )"	159:12:3055:3117	9343428	0	True				
ANR	9343924	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""No stats file for second pass\\n"" )"		9343428	0					
ANR	9343925	Callee	av_log		9343428	0					
ANR	9343926	Identifier	av_log		9343428	0					
ANR	9343927	ArgumentList	avctx		9343428	1					
ANR	9343928	Argument	avctx		9343428	0					
ANR	9343929	Identifier	avctx		9343428	0					
ANR	9343930	Argument	AV_LOG_ERROR		9343428	1					
ANR	9343931	Identifier	AV_LOG_ERROR		9343428	0					
ANR	9343932	Argument	"""No stats file for second pass\\n"""		9343428	2					
ANR	9343933	PrimaryExpression	"""No stats file for second pass\\n"""		9343428	0					
ANR	9343934	ReturnStatement	return AVERROR_INVALIDDATA ;	161:12:3132:3158	9343428	1	True				
ANR	9343935	Identifier	AVERROR_INVALIDDATA		9343428	0					
ANR	9343936	ExpressionStatement	ctx -> twopass_stats . sz = strlen ( avctx -> stats_in ) * 3 / 4	167:8:3182:3238	9343428	2	True				
ANR	9343937	AssignmentExpression	ctx -> twopass_stats . sz = strlen ( avctx -> stats_in ) * 3 / 4		9343428	0		=			
ANR	9343938	MemberAccess	ctx -> twopass_stats . sz		9343428	0					
ANR	9343939	PtrMemberAccess	ctx -> twopass_stats		9343428	0					
ANR	9343940	Identifier	ctx		9343428	0					
ANR	9343941	Identifier	twopass_stats		9343428	1					
ANR	9343942	Identifier	sz		9343428	1					
ANR	9343943	MultiplicativeExpression	strlen ( avctx -> stats_in ) * 3 / 4		9343428	1		*			
ANR	9343944	CallExpression	strlen ( avctx -> stats_in )		9343428	0					
ANR	9343945	Callee	strlen		9343428	0					
ANR	9343946	Identifier	strlen		9343428	0					
ANR	9343947	ArgumentList	avctx -> stats_in		9343428	1					
ANR	9343948	Argument	avctx -> stats_in		9343428	0					
ANR	9343949	PtrMemberAccess	avctx -> stats_in		9343428	0					
ANR	9343950	Identifier	avctx		9343428	0					
ANR	9343951	Identifier	stats_in		9343428	1					
ANR	9343952	MultiplicativeExpression	3 / 4		9343428	1		/			
ANR	9343953	PrimaryExpression	3		9343428	0					
ANR	9343954	PrimaryExpression	4		9343428	1					
ANR	9343955	ExpressionStatement	"ret = av_reallocp ( & ctx -> twopass_stats . buf , ctx -> twopass_stats . sz )"	169:8:3249:3314	9343428	3	True				
ANR	9343956	AssignmentExpression	"ret = av_reallocp ( & ctx -> twopass_stats . buf , ctx -> twopass_stats . sz )"		9343428	0		=			
ANR	9343957	Identifier	ret		9343428	0					
ANR	9343958	CallExpression	"av_reallocp ( & ctx -> twopass_stats . buf , ctx -> twopass_stats . sz )"		9343428	1					
ANR	9343959	Callee	av_reallocp		9343428	0					
ANR	9343960	Identifier	av_reallocp		9343428	0					
ANR	9343961	ArgumentList	& ctx -> twopass_stats . buf		9343428	1					
ANR	9343962	Argument	& ctx -> twopass_stats . buf		9343428	0					
ANR	9343963	UnaryOperationExpression	& ctx -> twopass_stats . buf		9343428	0					
ANR	9343964	UnaryOperator	&		9343428	0					
ANR	9343965	MemberAccess	ctx -> twopass_stats . buf		9343428	1					
ANR	9343966	PtrMemberAccess	ctx -> twopass_stats		9343428	0					
ANR	9343967	Identifier	ctx		9343428	0					
ANR	9343968	Identifier	twopass_stats		9343428	1					
ANR	9343969	Identifier	buf		9343428	1					
ANR	9343970	Argument	ctx -> twopass_stats . sz		9343428	1					
ANR	9343971	MemberAccess	ctx -> twopass_stats . sz		9343428	0					
ANR	9343972	PtrMemberAccess	ctx -> twopass_stats		9343428	0					
ANR	9343973	Identifier	ctx		9343428	0					
ANR	9343974	Identifier	twopass_stats		9343428	1					
ANR	9343975	Identifier	sz		9343428	1					
ANR	9343976	IfStatement	if ( ret < 0 )		9343428	4					
ANR	9343977	Condition	ret < 0	171:12:3329:3335	9343428	0	True				
ANR	9343978	RelationalExpression	ret < 0		9343428	0		<			
ANR	9343979	Identifier	ret		9343428	0					
ANR	9343980	PrimaryExpression	0		9343428	1					
ANR	9343981	CompoundStatement		167:21:3219:3219	9343428	1					
ANR	9343982	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Stat buffer alloc (%zu bytes) failed\\n"" , ctx -> twopass_stats . sz )"	173:12:3353:3485	9343428	0	True				
ANR	9343983	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Stat buffer alloc (%zu bytes) failed\\n"" , ctx -> twopass_stats . sz )"		9343428	0					
ANR	9343984	Callee	av_log		9343428	0					
ANR	9343985	Identifier	av_log		9343428	0					
ANR	9343986	ArgumentList	avctx		9343428	1					
ANR	9343987	Argument	avctx		9343428	0					
ANR	9343988	Identifier	avctx		9343428	0					
ANR	9343989	Argument	AV_LOG_ERROR		9343428	1					
ANR	9343990	Identifier	AV_LOG_ERROR		9343428	0					
ANR	9343991	Argument	"""Stat buffer alloc (%zu bytes) failed\\n"""		9343428	2					
ANR	9343992	PrimaryExpression	"""Stat buffer alloc (%zu bytes) failed\\n"""		9343428	0					
ANR	9343993	Argument	ctx -> twopass_stats . sz		9343428	3					
ANR	9343994	MemberAccess	ctx -> twopass_stats . sz		9343428	0					
ANR	9343995	PtrMemberAccess	ctx -> twopass_stats		9343428	0					
ANR	9343996	Identifier	ctx		9343428	0					
ANR	9343997	Identifier	twopass_stats		9343428	1					
ANR	9343998	Identifier	sz		9343428	1					
ANR	9343999	ReturnStatement	return ret ;	179:12:3500:3510	9343428	1	True				
ANR	9344000	Identifier	ret		9343428	0					
ANR	9344001	ExpressionStatement	"decode_size = av_base64_decode ( ctx -> twopass_stats . buf , avctx -> stats_in , ctx -> twopass_stats . sz )"	183:8:3532:3666	9343428	5	True				
ANR	9344002	AssignmentExpression	"decode_size = av_base64_decode ( ctx -> twopass_stats . buf , avctx -> stats_in , ctx -> twopass_stats . sz )"		9343428	0		=			
ANR	9344003	Identifier	decode_size		9343428	0					
ANR	9344004	CallExpression	"av_base64_decode ( ctx -> twopass_stats . buf , avctx -> stats_in , ctx -> twopass_stats . sz )"		9343428	1					
ANR	9344005	Callee	av_base64_decode		9343428	0					
ANR	9344006	Identifier	av_base64_decode		9343428	0					
ANR	9344007	ArgumentList	ctx -> twopass_stats . buf		9343428	1					
ANR	9344008	Argument	ctx -> twopass_stats . buf		9343428	0					
ANR	9344009	MemberAccess	ctx -> twopass_stats . buf		9343428	0					
ANR	9344010	PtrMemberAccess	ctx -> twopass_stats		9343428	0					
ANR	9344011	Identifier	ctx		9343428	0					
ANR	9344012	Identifier	twopass_stats		9343428	1					
ANR	9344013	Identifier	buf		9343428	1					
ANR	9344014	Argument	avctx -> stats_in		9343428	1					
ANR	9344015	PtrMemberAccess	avctx -> stats_in		9343428	0					
ANR	9344016	Identifier	avctx		9343428	0					
ANR	9344017	Identifier	stats_in		9343428	1					
ANR	9344018	Argument	ctx -> twopass_stats . sz		9343428	2					
ANR	9344019	MemberAccess	ctx -> twopass_stats . sz		9343428	0					
ANR	9344020	PtrMemberAccess	ctx -> twopass_stats		9343428	0					
ANR	9344021	Identifier	ctx		9343428	0					
ANR	9344022	Identifier	twopass_stats		9343428	1					
ANR	9344023	Identifier	sz		9343428	1					
ANR	9344024	IfStatement	if ( decode_size < 0 )		9343428	6					
ANR	9344025	Condition	decode_size < 0	187:12:3681:3695	9343428	0	True				
ANR	9344026	RelationalExpression	decode_size < 0		9343428	0		<			
ANR	9344027	Identifier	decode_size		9343428	0					
ANR	9344028	PrimaryExpression	0		9343428	1					
ANR	9344029	CompoundStatement		183:29:3579:3579	9343428	1					
ANR	9344030	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Stat buffer decode failed\\n"" )"	189:12:3713:3771	9343428	0	True				
ANR	9344031	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Stat buffer decode failed\\n"" )"		9343428	0					
ANR	9344032	Callee	av_log		9343428	0					
ANR	9344033	Identifier	av_log		9343428	0					
ANR	9344034	ArgumentList	avctx		9343428	1					
ANR	9344035	Argument	avctx		9343428	0					
ANR	9344036	Identifier	avctx		9343428	0					
ANR	9344037	Argument	AV_LOG_ERROR		9343428	1					
ANR	9344038	Identifier	AV_LOG_ERROR		9343428	0					
ANR	9344039	Argument	"""Stat buffer decode failed\\n"""		9343428	2					
ANR	9344040	PrimaryExpression	"""Stat buffer decode failed\\n"""		9343428	0					
ANR	9344041	ReturnStatement	return AVERROR_INVALIDDATA ;	191:12:3786:3812	9343428	1	True				
ANR	9344042	Identifier	AVERROR_INVALIDDATA		9343428	0					
ANR	9344043	ExpressionStatement	ctx -> twopass_stats . sz = decode_size	197:8:3836:3876	9343428	7	True				
ANR	9344044	AssignmentExpression	ctx -> twopass_stats . sz = decode_size		9343428	0		=			
ANR	9344045	MemberAccess	ctx -> twopass_stats . sz		9343428	0					
ANR	9344046	PtrMemberAccess	ctx -> twopass_stats		9343428	0					
ANR	9344047	Identifier	ctx		9343428	0					
ANR	9344048	Identifier	twopass_stats		9343428	1					
ANR	9344049	Identifier	sz		9343428	1					
ANR	9344050	Identifier	decode_size		9343428	1					
ANR	9344051	ExpressionStatement	enccfg . rc_twopass_stats_in = ctx -> twopass_stats	199:8:3887:3934	9343428	8	True				
ANR	9344052	AssignmentExpression	enccfg . rc_twopass_stats_in = ctx -> twopass_stats		9343428	0		=			
ANR	9344053	MemberAccess	enccfg . rc_twopass_stats_in		9343428	0					
ANR	9344054	Identifier	enccfg		9343428	0					
ANR	9344055	Identifier	rc_twopass_stats_in		9343428	1					
ANR	9344056	PtrMemberAccess	ctx -> twopass_stats		9343428	1					
ANR	9344057	Identifier	ctx		9343428	0					
ANR	9344058	Identifier	twopass_stats		9343428	1					
ANR	9344059	IfStatement	if ( avctx -> profile != FF_PROFILE_UNKNOWN )		9343428	64					
ANR	9344060	Condition	avctx -> profile != FF_PROFILE_UNKNOWN	211:8:4130:4165	9343428	0	True				
ANR	9344061	EqualityExpression	avctx -> profile != FF_PROFILE_UNKNOWN		9343428	0		!=			
ANR	9344062	PtrMemberAccess	avctx -> profile		9343428	0					
ANR	9344063	Identifier	avctx		9343428	0					
ANR	9344064	Identifier	profile		9343428	1					
ANR	9344065	Identifier	FF_PROFILE_UNKNOWN		9343428	1					
ANR	9344066	ExpressionStatement	enccfg . g_profile = avctx -> profile	213:8:4177:4210	9343428	1	True				
ANR	9344067	AssignmentExpression	enccfg . g_profile = avctx -> profile		9343428	0		=			
ANR	9344068	MemberAccess	enccfg . g_profile		9343428	0					
ANR	9344069	Identifier	enccfg		9343428	0					
ANR	9344070	Identifier	g_profile		9343428	1					
ANR	9344071	PtrMemberAccess	avctx -> profile		9343428	1					
ANR	9344072	Identifier	avctx		9343428	0					
ANR	9344073	Identifier	profile		9343428	1					
ANR	9344074	ElseStatement	else		9343428	0					
ANR	9344075	IfStatement	if ( avctx -> pix_fmt == AV_PIX_FMT_YUV420P )		9343428	0					
ANR	9344076	Condition	avctx -> pix_fmt == AV_PIX_FMT_YUV420P	215:13:4226:4261	9343428	0	True				
ANR	9344077	EqualityExpression	avctx -> pix_fmt == AV_PIX_FMT_YUV420P		9343428	0		==			
ANR	9344078	PtrMemberAccess	avctx -> pix_fmt		9343428	0					
ANR	9344079	Identifier	avctx		9343428	0					
ANR	9344080	Identifier	pix_fmt		9343428	1					
ANR	9344081	Identifier	AV_PIX_FMT_YUV420P		9343428	1					
ANR	9344082	ExpressionStatement	avctx -> profile = enccfg . g_profile = FF_PROFILE_VP9_0	217:8:4273:4325	9343428	1	True				
ANR	9344083	AssignmentExpression	avctx -> profile = enccfg . g_profile = FF_PROFILE_VP9_0		9343428	0		=			
ANR	9344084	PtrMemberAccess	avctx -> profile		9343428	0					
ANR	9344085	Identifier	avctx		9343428	0					
ANR	9344086	Identifier	profile		9343428	1					
ANR	9344087	AssignmentExpression	enccfg . g_profile = FF_PROFILE_VP9_0		9343428	1		=			
ANR	9344088	MemberAccess	enccfg . g_profile		9343428	0					
ANR	9344089	Identifier	enccfg		9343428	0					
ANR	9344090	Identifier	g_profile		9343428	1					
ANR	9344091	Identifier	FF_PROFILE_VP9_0		9343428	1					
ANR	9344092	ElseStatement	else		9343428	0					
ANR	9344093	ExpressionStatement	avctx -> profile = enccfg . g_profile = FF_PROFILE_VP9_1	221:8:4346:4398	9343428	0	True				
ANR	9344094	AssignmentExpression	avctx -> profile = enccfg . g_profile = FF_PROFILE_VP9_1		9343428	0		=			
ANR	9344095	PtrMemberAccess	avctx -> profile		9343428	0					
ANR	9344096	Identifier	avctx		9343428	0					
ANR	9344097	Identifier	profile		9343428	1					
ANR	9344098	AssignmentExpression	enccfg . g_profile = FF_PROFILE_VP9_1		9343428	1		=			
ANR	9344099	MemberAccess	enccfg . g_profile		9343428	0					
ANR	9344100	Identifier	enccfg		9343428	0					
ANR	9344101	Identifier	g_profile		9343428	1					
ANR	9344102	Identifier	FF_PROFILE_VP9_1		9343428	1					
ANR	9344103	ExpressionStatement	enccfg . g_error_resilient = ctx -> error_resilient	225:4:4407:4454	9343428	65	True				
ANR	9344104	AssignmentExpression	enccfg . g_error_resilient = ctx -> error_resilient		9343428	0		=			
ANR	9344105	MemberAccess	enccfg . g_error_resilient		9343428	0					
ANR	9344106	Identifier	enccfg		9343428	0					
ANR	9344107	Identifier	g_error_resilient		9343428	1					
ANR	9344108	PtrMemberAccess	ctx -> error_resilient		9343428	1					
ANR	9344109	Identifier	ctx		9343428	0					
ANR	9344110	Identifier	error_resilient		9343428	1					
ANR	9344111	ExpressionStatement	"dump_enc_cfg ( avctx , & enccfg )"	229:4:4463:4491	9343428	66	True				
ANR	9344112	CallExpression	"dump_enc_cfg ( avctx , & enccfg )"		9343428	0					
ANR	9344113	Callee	dump_enc_cfg		9343428	0					
ANR	9344114	Identifier	dump_enc_cfg		9343428	0					
ANR	9344115	ArgumentList	avctx		9343428	1					
ANR	9344116	Argument	avctx		9343428	0					
ANR	9344117	Identifier	avctx		9343428	0					
ANR	9344118	Argument	& enccfg		9343428	1					
ANR	9344119	UnaryOperationExpression	& enccfg		9343428	0					
ANR	9344120	UnaryOperator	&		9343428	0					
ANR	9344121	Identifier	enccfg		9343428	1					
ANR	9344122	ExpressionStatement	"res = vpx_codec_enc_init ( & ctx -> encoder , iface , & enccfg , 0 )"	233:4:4535:4593	9343428	67	True				
ANR	9344123	AssignmentExpression	"res = vpx_codec_enc_init ( & ctx -> encoder , iface , & enccfg , 0 )"		9343428	0		=			
ANR	9344124	Identifier	res		9343428	0					
ANR	9344125	CallExpression	"vpx_codec_enc_init ( & ctx -> encoder , iface , & enccfg , 0 )"		9343428	1					
ANR	9344126	Callee	vpx_codec_enc_init		9343428	0					
ANR	9344127	Identifier	vpx_codec_enc_init		9343428	0					
ANR	9344128	ArgumentList	& ctx -> encoder		9343428	1					
ANR	9344129	Argument	& ctx -> encoder		9343428	0					
ANR	9344130	UnaryOperationExpression	& ctx -> encoder		9343428	0					
ANR	9344131	UnaryOperator	&		9343428	0					
ANR	9344132	PtrMemberAccess	ctx -> encoder		9343428	1					
ANR	9344133	Identifier	ctx		9343428	0					
ANR	9344134	Identifier	encoder		9343428	1					
ANR	9344135	Argument	iface		9343428	1					
ANR	9344136	Identifier	iface		9343428	0					
ANR	9344137	Argument	& enccfg		9343428	2					
ANR	9344138	UnaryOperationExpression	& enccfg		9343428	0					
ANR	9344139	UnaryOperator	&		9343428	0					
ANR	9344140	Identifier	enccfg		9343428	1					
ANR	9344141	Argument	0		9343428	3					
ANR	9344142	PrimaryExpression	0		9343428	0					
ANR	9344143	IfStatement	if ( res != VPX_CODEC_OK )		9343428	68					
ANR	9344144	Condition	res != VPX_CODEC_OK	235:8:4604:4622	9343428	0	True				
ANR	9344145	EqualityExpression	res != VPX_CODEC_OK		9343428	0		!=			
ANR	9344146	Identifier	res		9343428	0					
ANR	9344147	Identifier	VPX_CODEC_OK		9343428	1					
ANR	9344148	CompoundStatement		231:29:4506:4506	9343428	1					
ANR	9344149	ExpressionStatement	"log_encoder_error ( avctx , ""Failed to initialize encoder"" )"	237:8:4636:4692	9343428	0	True				
ANR	9344150	CallExpression	"log_encoder_error ( avctx , ""Failed to initialize encoder"" )"		9343428	0					
ANR	9344151	Callee	log_encoder_error		9343428	0					
ANR	9344152	Identifier	log_encoder_error		9343428	0					
ANR	9344153	ArgumentList	avctx		9343428	1					
ANR	9344154	Argument	avctx		9343428	0					
ANR	9344155	Identifier	avctx		9343428	0					
ANR	9344156	Argument	"""Failed to initialize encoder"""		9343428	1					
ANR	9344157	PrimaryExpression	"""Failed to initialize encoder"""		9343428	0					
ANR	9344158	ReturnStatement	return AVERROR ( EINVAL ) ;	239:8:4703:4725	9343428	1	True				
ANR	9344159	CallExpression	AVERROR ( EINVAL )		9343428	0					
ANR	9344160	Callee	AVERROR		9343428	0					
ANR	9344161	Identifier	AVERROR		9343428	0					
ANR	9344162	ArgumentList	EINVAL		9343428	1					
ANR	9344163	Argument	EINVAL		9343428	0					
ANR	9344164	Identifier	EINVAL		9343428	0					
ANR	9344165	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""vpx_codec_control\\n"" )"	247:4:4810:4860	9343428	69	True				
ANR	9344166	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""vpx_codec_control\\n"" )"		9343428	0					
ANR	9344167	Callee	av_log		9343428	0					
ANR	9344168	Identifier	av_log		9343428	0					
ANR	9344169	ArgumentList	avctx		9343428	1					
ANR	9344170	Argument	avctx		9343428	0					
ANR	9344171	Identifier	avctx		9343428	0					
ANR	9344172	Argument	AV_LOG_DEBUG		9343428	1					
ANR	9344173	Identifier	AV_LOG_DEBUG		9343428	0					
ANR	9344174	Argument	"""vpx_codec_control\\n"""		9343428	2					
ANR	9344175	PrimaryExpression	"""vpx_codec_control\\n"""		9343428	0					
ANR	9344176	IfStatement	if ( ctx -> cpu_used != INT_MIN )		9343428	70					
ANR	9344177	Condition	ctx -> cpu_used != INT_MIN	249:8:4871:4894	9343428	0	True				
ANR	9344178	EqualityExpression	ctx -> cpu_used != INT_MIN		9343428	0		!=			
ANR	9344179	PtrMemberAccess	ctx -> cpu_used		9343428	0					
ANR	9344180	Identifier	ctx		9343428	0					
ANR	9344181	Identifier	cpu_used		9343428	1					
ANR	9344182	Identifier	INT_MIN		9343428	1					
ANR	9344183	ExpressionStatement	"codecctl_int ( avctx , VP8E_SET_CPUUSED , ctx -> cpu_used )"	251:8:4906:4967	9343428	1	True				
ANR	9344184	CallExpression	"codecctl_int ( avctx , VP8E_SET_CPUUSED , ctx -> cpu_used )"		9343428	0					
ANR	9344185	Callee	codecctl_int		9343428	0					
ANR	9344186	Identifier	codecctl_int		9343428	0					
ANR	9344187	ArgumentList	avctx		9343428	1					
ANR	9344188	Argument	avctx		9343428	0					
ANR	9344189	Identifier	avctx		9343428	0					
ANR	9344190	Argument	VP8E_SET_CPUUSED		9343428	1					
ANR	9344191	Identifier	VP8E_SET_CPUUSED		9343428	0					
ANR	9344192	Argument	ctx -> cpu_used		9343428	2					
ANR	9344193	PtrMemberAccess	ctx -> cpu_used		9343428	0					
ANR	9344194	Identifier	ctx		9343428	0					
ANR	9344195	Identifier	cpu_used		9343428	1					
ANR	9344196	IfStatement	if ( ctx -> auto_alt_ref >= 0 )		9343428	71					
ANR	9344197	Condition	ctx -> auto_alt_ref >= 0	253:8:4978:4999	9343428	0	True				
ANR	9344198	RelationalExpression	ctx -> auto_alt_ref >= 0		9343428	0		>=			
ANR	9344199	PtrMemberAccess	ctx -> auto_alt_ref		9343428	0					
ANR	9344200	Identifier	ctx		9343428	0					
ANR	9344201	Identifier	auto_alt_ref		9343428	1					
ANR	9344202	PrimaryExpression	0		9343428	1					
ANR	9344203	ExpressionStatement	"codecctl_int ( avctx , VP8E_SET_ENABLEAUTOALTREF , ctx -> auto_alt_ref )"	255:8:5011:5076	9343428	1	True				
ANR	9344204	CallExpression	"codecctl_int ( avctx , VP8E_SET_ENABLEAUTOALTREF , ctx -> auto_alt_ref )"		9343428	0					
ANR	9344205	Callee	codecctl_int		9343428	0					
ANR	9344206	Identifier	codecctl_int		9343428	0					
ANR	9344207	ArgumentList	avctx		9343428	1					
ANR	9344208	Argument	avctx		9343428	0					
ANR	9344209	Identifier	avctx		9343428	0					
ANR	9344210	Argument	VP8E_SET_ENABLEAUTOALTREF		9343428	1					
ANR	9344211	Identifier	VP8E_SET_ENABLEAUTOALTREF		9343428	0					
ANR	9344212	Argument	ctx -> auto_alt_ref		9343428	2					
ANR	9344213	PtrMemberAccess	ctx -> auto_alt_ref		9343428	0					
ANR	9344214	Identifier	ctx		9343428	0					
ANR	9344215	Identifier	auto_alt_ref		9343428	1					
ANR	9344216	IfStatement	if ( ctx -> arnr_max_frames >= 0 )		9343428	72					
ANR	9344217	Condition	ctx -> arnr_max_frames >= 0	257:8:5087:5111	9343428	0	True				
ANR	9344218	RelationalExpression	ctx -> arnr_max_frames >= 0		9343428	0		>=			
ANR	9344219	PtrMemberAccess	ctx -> arnr_max_frames		9343428	0					
ANR	9344220	Identifier	ctx		9343428	0					
ANR	9344221	Identifier	arnr_max_frames		9343428	1					
ANR	9344222	PrimaryExpression	0		9343428	1					
ANR	9344223	ExpressionStatement	"codecctl_int ( avctx , VP8E_SET_ARNR_MAXFRAMES , ctx -> arnr_max_frames )"	259:8:5123:5191	9343428	1	True				
ANR	9344224	CallExpression	"codecctl_int ( avctx , VP8E_SET_ARNR_MAXFRAMES , ctx -> arnr_max_frames )"		9343428	0					
ANR	9344225	Callee	codecctl_int		9343428	0					
ANR	9344226	Identifier	codecctl_int		9343428	0					
ANR	9344227	ArgumentList	avctx		9343428	1					
ANR	9344228	Argument	avctx		9343428	0					
ANR	9344229	Identifier	avctx		9343428	0					
ANR	9344230	Argument	VP8E_SET_ARNR_MAXFRAMES		9343428	1					
ANR	9344231	Identifier	VP8E_SET_ARNR_MAXFRAMES		9343428	0					
ANR	9344232	Argument	ctx -> arnr_max_frames		9343428	2					
ANR	9344233	PtrMemberAccess	ctx -> arnr_max_frames		9343428	0					
ANR	9344234	Identifier	ctx		9343428	0					
ANR	9344235	Identifier	arnr_max_frames		9343428	1					
ANR	9344236	IfStatement	if ( ctx -> arnr_strength >= 0 )		9343428	73					
ANR	9344237	Condition	ctx -> arnr_strength >= 0	261:8:5202:5224	9343428	0	True				
ANR	9344238	RelationalExpression	ctx -> arnr_strength >= 0		9343428	0		>=			
ANR	9344239	PtrMemberAccess	ctx -> arnr_strength		9343428	0					
ANR	9344240	Identifier	ctx		9343428	0					
ANR	9344241	Identifier	arnr_strength		9343428	1					
ANR	9344242	PrimaryExpression	0		9343428	1					
ANR	9344243	ExpressionStatement	"codecctl_int ( avctx , VP8E_SET_ARNR_STRENGTH , ctx -> arnr_strength )"	263:8:5236:5302	9343428	1	True				
ANR	9344244	CallExpression	"codecctl_int ( avctx , VP8E_SET_ARNR_STRENGTH , ctx -> arnr_strength )"		9343428	0					
ANR	9344245	Callee	codecctl_int		9343428	0					
ANR	9344246	Identifier	codecctl_int		9343428	0					
ANR	9344247	ArgumentList	avctx		9343428	1					
ANR	9344248	Argument	avctx		9343428	0					
ANR	9344249	Identifier	avctx		9343428	0					
ANR	9344250	Argument	VP8E_SET_ARNR_STRENGTH		9343428	1					
ANR	9344251	Identifier	VP8E_SET_ARNR_STRENGTH		9343428	0					
ANR	9344252	Argument	ctx -> arnr_strength		9343428	2					
ANR	9344253	PtrMemberAccess	ctx -> arnr_strength		9343428	0					
ANR	9344254	Identifier	ctx		9343428	0					
ANR	9344255	Identifier	arnr_strength		9343428	1					
ANR	9344256	IfStatement	if ( ctx -> arnr_type >= 0 )		9343428	74					
ANR	9344257	Condition	ctx -> arnr_type >= 0	265:8:5313:5331	9343428	0	True				
ANR	9344258	RelationalExpression	ctx -> arnr_type >= 0		9343428	0		>=			
ANR	9344259	PtrMemberAccess	ctx -> arnr_type		9343428	0					
ANR	9344260	Identifier	ctx		9343428	0					
ANR	9344261	Identifier	arnr_type		9343428	1					
ANR	9344262	PrimaryExpression	0		9343428	1					
ANR	9344263	ExpressionStatement	"codecctl_int ( avctx , VP8E_SET_ARNR_TYPE , ctx -> arnr_type )"	267:8:5343:5405	9343428	1	True				
ANR	9344264	CallExpression	"codecctl_int ( avctx , VP8E_SET_ARNR_TYPE , ctx -> arnr_type )"		9343428	0					
ANR	9344265	Callee	codecctl_int		9343428	0					
ANR	9344266	Identifier	codecctl_int		9343428	0					
ANR	9344267	ArgumentList	avctx		9343428	1					
ANR	9344268	Argument	avctx		9343428	0					
ANR	9344269	Identifier	avctx		9343428	0					
ANR	9344270	Argument	VP8E_SET_ARNR_TYPE		9343428	1					
ANR	9344271	Identifier	VP8E_SET_ARNR_TYPE		9343428	0					
ANR	9344272	Argument	ctx -> arnr_type		9343428	2					
ANR	9344273	PtrMemberAccess	ctx -> arnr_type		9343428	0					
ANR	9344274	Identifier	ctx		9343428	0					
ANR	9344275	Identifier	arnr_type		9343428	1					
ANR	9344276	IfStatement	if ( CONFIG_LIBVPX_VP8_ENCODER && iface == & vpx_codec_vp8_cx_algo )		9343428	75					
ANR	9344277	Condition	CONFIG_LIBVPX_VP8_ENCODER && iface == & vpx_codec_vp8_cx_algo	271:8:5418:5477	9343428	0	True				
ANR	9344278	AndExpression	CONFIG_LIBVPX_VP8_ENCODER && iface == & vpx_codec_vp8_cx_algo		9343428	0		&&			
ANR	9344279	Identifier	CONFIG_LIBVPX_VP8_ENCODER		9343428	0					
ANR	9344280	EqualityExpression	iface == & vpx_codec_vp8_cx_algo		9343428	1		==			
ANR	9344281	Identifier	iface		9343428	0					
ANR	9344282	UnaryOperationExpression	& vpx_codec_vp8_cx_algo		9343428	1					
ANR	9344283	UnaryOperator	&		9343428	0					
ANR	9344284	Identifier	vpx_codec_vp8_cx_algo		9343428	1					
ANR	9344285	CompoundStatement		267:70:5361:5361	9343428	1					
ANR	9344286	ExpressionStatement	"codecctl_int ( avctx , VP8E_SET_NOISE_SENSITIVITY , avctx -> noise_reduction )"	273:8:5491:5562	9343428	0	True				
ANR	9344287	CallExpression	"codecctl_int ( avctx , VP8E_SET_NOISE_SENSITIVITY , avctx -> noise_reduction )"		9343428	0					
ANR	9344288	Callee	codecctl_int		9343428	0					
ANR	9344289	Identifier	codecctl_int		9343428	0					
ANR	9344290	ArgumentList	avctx		9343428	1					
ANR	9344291	Argument	avctx		9343428	0					
ANR	9344292	Identifier	avctx		9343428	0					
ANR	9344293	Argument	VP8E_SET_NOISE_SENSITIVITY		9343428	1					
ANR	9344294	Identifier	VP8E_SET_NOISE_SENSITIVITY		9343428	0					
ANR	9344295	Argument	avctx -> noise_reduction		9343428	2					
ANR	9344296	PtrMemberAccess	avctx -> noise_reduction		9343428	0					
ANR	9344297	Identifier	avctx		9343428	0					
ANR	9344298	Identifier	noise_reduction		9343428	1					
ANR	9344299	ExpressionStatement	"codecctl_int ( avctx , VP8E_SET_TOKEN_PARTITIONS , av_log2 ( avctx -> slices ) )"	275:8:5573:5644	9343428	1	True				
ANR	9344300	CallExpression	"codecctl_int ( avctx , VP8E_SET_TOKEN_PARTITIONS , av_log2 ( avctx -> slices ) )"		9343428	0					
ANR	9344301	Callee	codecctl_int		9343428	0					
ANR	9344302	Identifier	codecctl_int		9343428	0					
ANR	9344303	ArgumentList	avctx		9343428	1					
ANR	9344304	Argument	avctx		9343428	0					
ANR	9344305	Identifier	avctx		9343428	0					
ANR	9344306	Argument	VP8E_SET_TOKEN_PARTITIONS		9343428	1					
ANR	9344307	Identifier	VP8E_SET_TOKEN_PARTITIONS		9343428	0					
ANR	9344308	Argument	av_log2 ( avctx -> slices )		9343428	2					
ANR	9344309	CallExpression	av_log2 ( avctx -> slices )		9343428	0					
ANR	9344310	Callee	av_log2		9343428	0					
ANR	9344311	Identifier	av_log2		9343428	0					
ANR	9344312	ArgumentList	avctx -> slices		9343428	1					
ANR	9344313	Argument	avctx -> slices		9343428	0					
ANR	9344314	PtrMemberAccess	avctx -> slices		9343428	0					
ANR	9344315	Identifier	avctx		9343428	0					
ANR	9344316	Identifier	slices		9343428	1					
ANR	9344317	Statement	FF_DISABLE_DEPRECATION_WARNINGS	281:4:5678:5708	9343428	76	True				
ANR	9344318	IfStatement	if ( avctx -> mb_threshold )		9343428	77					
ANR	9344319	Condition	avctx -> mb_threshold	283:8:5719:5737	9343428	0	True				
ANR	9344320	PtrMemberAccess	avctx -> mb_threshold		9343428	0					
ANR	9344321	Identifier	avctx		9343428	0					
ANR	9344322	Identifier	mb_threshold		9343428	1					
ANR	9344323	CompoundStatement		279:29:5621:5621	9343428	1					
ANR	9344324	Statement	av_log	285:8:5751:5756	9343428	0	True				
ANR	9344325	Statement	(	285:14:5757:5757	9343428	1	True				
ANR	9344326	Statement	avctx	285:15:5758:5762	9343428	2	True				
ANR	9344327	Statement	","	285:20:5763:5763	9343428	3	True				
ANR	9344328	Statement	AV_LOG_WARNING	285:22:5765:5778	9343428	4	True				
ANR	9344329	Statement	","	285:36:5779:5779	9343428	5	True				
ANR	9344330	Statement	"""The mb_threshold option is deprecated, """	285:38:5781:5821	9343428	6	True				
ANR	9344331	Statement	"""use the static-thresh private option instead.\\n"""	287:15:5839:5887	9343428	7	True				
ANR	9344332	Statement	)	287:64:5888:5888	9343428	8	True				
ANR	9344333	ExpressionStatement		287:65:5889:5889	9343428	9	True				
ANR	9344334	ExpressionStatement	ctx -> static_thresh = avctx -> mb_threshold	289:8:5900:5940	9343428	10	True				
ANR	9344335	AssignmentExpression	ctx -> static_thresh = avctx -> mb_threshold		9343428	0		=			
ANR	9344336	PtrMemberAccess	ctx -> static_thresh		9343428	0					
ANR	9344337	Identifier	ctx		9343428	0					
ANR	9344338	Identifier	static_thresh		9343428	1					
ANR	9344339	PtrMemberAccess	avctx -> mb_threshold		9343428	1					
ANR	9344340	Identifier	avctx		9343428	0					
ANR	9344341	Identifier	mb_threshold		9343428	1					
ANR	9344342	Statement	FF_ENABLE_DEPRECATION_WARNINGS	293:4:5954:5983	9343428	78	True				
ANR	9344343	ExpressionStatement	"codecctl_int ( avctx , VP8E_SET_STATIC_THRESHOLD , ctx -> static_thresh )"	297:4:5998:6065	9343428	79	True				
ANR	9344344	CallExpression	"codecctl_int ( avctx , VP8E_SET_STATIC_THRESHOLD , ctx -> static_thresh )"		9343428	0					
ANR	9344345	Callee	codecctl_int		9343428	0					
ANR	9344346	Identifier	codecctl_int		9343428	0					
ANR	9344347	ArgumentList	avctx		9343428	1					
ANR	9344348	Argument	avctx		9343428	0					
ANR	9344349	Identifier	avctx		9343428	0					
ANR	9344350	Argument	VP8E_SET_STATIC_THRESHOLD		9343428	1					
ANR	9344351	Identifier	VP8E_SET_STATIC_THRESHOLD		9343428	0					
ANR	9344352	Argument	ctx -> static_thresh		9343428	2					
ANR	9344353	PtrMemberAccess	ctx -> static_thresh		9343428	0					
ANR	9344354	Identifier	ctx		9343428	0					
ANR	9344355	Identifier	static_thresh		9343428	1					
ANR	9344356	ExpressionStatement	"codecctl_int ( avctx , VP8E_SET_CQ_LEVEL , ctx -> crf )"	299:4:6072:6129	9343428	80	True				
ANR	9344357	CallExpression	"codecctl_int ( avctx , VP8E_SET_CQ_LEVEL , ctx -> crf )"		9343428	0					
ANR	9344358	Callee	codecctl_int		9343428	0					
ANR	9344359	Identifier	codecctl_int		9343428	0					
ANR	9344360	ArgumentList	avctx		9343428	1					
ANR	9344361	Argument	avctx		9343428	0					
ANR	9344362	Identifier	avctx		9343428	0					
ANR	9344363	Argument	VP8E_SET_CQ_LEVEL		9343428	1					
ANR	9344364	Identifier	VP8E_SET_CQ_LEVEL		9343428	0					
ANR	9344365	Argument	ctx -> crf		9343428	2					
ANR	9344366	PtrMemberAccess	ctx -> crf		9343428	0					
ANR	9344367	Identifier	ctx		9343428	0					
ANR	9344368	Identifier	crf		9343428	1					
ANR	9344369	ExpressionStatement	"vpx_img_wrap ( & ctx -> rawimg , ff_vpx_pixfmt_to_imgfmt ( avctx -> pix_fmt ) , avctx -> width , avctx -> height , 1 , ( unsigned char * ) 1 )"	305:4:6226:6363	9343428	81	True				
ANR	9344370	CallExpression	"vpx_img_wrap ( & ctx -> rawimg , ff_vpx_pixfmt_to_imgfmt ( avctx -> pix_fmt ) , avctx -> width , avctx -> height , 1 , ( unsigned char * ) 1 )"		9343428	0					
ANR	9344371	Callee	vpx_img_wrap		9343428	0					
ANR	9344372	Identifier	vpx_img_wrap		9343428	0					
ANR	9344373	ArgumentList	& ctx -> rawimg		9343428	1					
ANR	9344374	Argument	& ctx -> rawimg		9343428	0					
ANR	9344375	UnaryOperationExpression	& ctx -> rawimg		9343428	0					
ANR	9344376	UnaryOperator	&		9343428	0					
ANR	9344377	PtrMemberAccess	ctx -> rawimg		9343428	1					
ANR	9344378	Identifier	ctx		9343428	0					
ANR	9344379	Identifier	rawimg		9343428	1					
ANR	9344380	Argument	ff_vpx_pixfmt_to_imgfmt ( avctx -> pix_fmt )		9343428	1					
ANR	9344381	CallExpression	ff_vpx_pixfmt_to_imgfmt ( avctx -> pix_fmt )		9343428	0					
ANR	9344382	Callee	ff_vpx_pixfmt_to_imgfmt		9343428	0					
ANR	9344383	Identifier	ff_vpx_pixfmt_to_imgfmt		9343428	0					
ANR	9344384	ArgumentList	avctx -> pix_fmt		9343428	1					
ANR	9344385	Argument	avctx -> pix_fmt		9343428	0					
ANR	9344386	PtrMemberAccess	avctx -> pix_fmt		9343428	0					
ANR	9344387	Identifier	avctx		9343428	0					
ANR	9344388	Identifier	pix_fmt		9343428	1					
ANR	9344389	Argument	avctx -> width		9343428	2					
ANR	9344390	PtrMemberAccess	avctx -> width		9343428	0					
ANR	9344391	Identifier	avctx		9343428	0					
ANR	9344392	Identifier	width		9343428	1					
ANR	9344393	Argument	avctx -> height		9343428	3					
ANR	9344394	PtrMemberAccess	avctx -> height		9343428	0					
ANR	9344395	Identifier	avctx		9343428	0					
ANR	9344396	Identifier	height		9343428	1					
ANR	9344397	Argument	1		9343428	4					
ANR	9344398	PrimaryExpression	1		9343428	0					
ANR	9344399	Argument	( unsigned char * ) 1		9343428	5					
ANR	9344400	CastExpression	( unsigned char * ) 1		9343428	0					
ANR	9344401	CastTarget	unsigned char *		9343428	0					
ANR	9344402	PrimaryExpression	1		9343428	1					
ANR	9344403	ExpressionStatement	avctx -> coded_frame = av_frame_alloc ( )	311:4:6372:6409	9343428	82	True				
ANR	9344404	AssignmentExpression	avctx -> coded_frame = av_frame_alloc ( )		9343428	0		=			
ANR	9344405	PtrMemberAccess	avctx -> coded_frame		9343428	0					
ANR	9344406	Identifier	avctx		9343428	0					
ANR	9344407	Identifier	coded_frame		9343428	1					
ANR	9344408	CallExpression	av_frame_alloc ( )		9343428	1					
ANR	9344409	Callee	av_frame_alloc		9343428	0					
ANR	9344410	Identifier	av_frame_alloc		9343428	0					
ANR	9344411	ArgumentList			9343428	1					
ANR	9344412	IfStatement	if ( ! avctx -> coded_frame )		9343428	83					
ANR	9344413	Condition	! avctx -> coded_frame	313:8:6420:6438	9343428	0	True				
ANR	9344414	UnaryOperationExpression	! avctx -> coded_frame		9343428	0					
ANR	9344415	UnaryOperator	!		9343428	0					
ANR	9344416	PtrMemberAccess	avctx -> coded_frame		9343428	1					
ANR	9344417	Identifier	avctx		9343428	0					
ANR	9344418	Identifier	coded_frame		9343428	1					
ANR	9344419	CompoundStatement		309:29:6322:6322	9343428	1					
ANR	9344420	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error allocating coded frame\\n"" )"	315:8:6452:6513	9343428	0	True				
ANR	9344421	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error allocating coded frame\\n"" )"		9343428	0					
ANR	9344422	Callee	av_log		9343428	0					
ANR	9344423	Identifier	av_log		9343428	0					
ANR	9344424	ArgumentList	avctx		9343428	1					
ANR	9344425	Argument	avctx		9343428	0					
ANR	9344426	Identifier	avctx		9343428	0					
ANR	9344427	Argument	AV_LOG_ERROR		9343428	1					
ANR	9344428	Identifier	AV_LOG_ERROR		9343428	0					
ANR	9344429	Argument	"""Error allocating coded frame\\n"""		9343428	2					
ANR	9344430	PrimaryExpression	"""Error allocating coded frame\\n"""		9343428	0					
ANR	9344431	ExpressionStatement	vp8_free ( avctx )	317:8:6524:6539	9343428	1	True				
ANR	9344432	CallExpression	vp8_free ( avctx )		9343428	0					
ANR	9344433	Callee	vp8_free		9343428	0					
ANR	9344434	Identifier	vp8_free		9343428	0					
ANR	9344435	ArgumentList	avctx		9343428	1					
ANR	9344436	Argument	avctx		9343428	0					
ANR	9344437	Identifier	avctx		9343428	0					
ANR	9344438	ReturnStatement	return AVERROR ( ENOMEM ) ;	319:8:6550:6572	9343428	2	True				
ANR	9344439	CallExpression	AVERROR ( ENOMEM )		9343428	0					
ANR	9344440	Callee	AVERROR		9343428	0					
ANR	9344441	Identifier	AVERROR		9343428	0					
ANR	9344442	ArgumentList	ENOMEM		9343428	1					
ANR	9344443	Argument	ENOMEM		9343428	0					
ANR	9344444	Identifier	ENOMEM		9343428	0					
ANR	9344445	ReturnStatement	return 0 ;	323:4:6586:6594	9343428	84	True				
ANR	9344446	PrimaryExpression	0		9343428	0					
ANR	9344447	ReturnType	static av_cold int		9343428	1					
ANR	9344448	Identifier	vpx_init		9343428	2					
ANR	9344449	ParameterList	"AVCodecContext * avctx , const struct vpx_codec_iface * iface"		9343428	3					
ANR	9344450	Parameter	AVCodecContext * avctx	1:28:28:48	9343428	0	True				
ANR	9344451	ParameterType	AVCodecContext *		9343428	0					
ANR	9344452	Identifier	avctx		9343428	1					
ANR	9344453	Parameter	const struct vpx_codec_iface * iface	3:28:80:114	9343428	1	True				
ANR	9344454	ParameterType	const struct vpx_codec_iface *		9343428	0					
ANR	9344455	Identifier	iface		9343428	1					
ANR	9344456	CFGEntryNode	ENTRY		9343428		True				
ANR	9344457	CFGExitNode	EXIT		9343428		True				
ANR	9344458	Symbol	ctx -> crf		9343428						
ANR	9344459	Symbol	avctx -> slices		9343428						
ANR	9344460	Symbol	enccfg . rc_buf_sz		9343428						
ANR	9344461	Symbol	ENOMEM		9343428						
ANR	9344462	Symbol	VPX_RC_LAST_PASS		9343428						
ANR	9344463	Symbol	enccfg . g_error_resilient		9343428						
ANR	9344464	Symbol	VP8E_SET_ENABLEAUTOALTREF		9343428						
ANR	9344465	Symbol	VP8E_SET_STATIC_THRESHOLD		9343428						
ANR	9344466	Symbol	av_rescale_rnd		9343428						
ANR	9344467	Symbol	avctx -> rc_min_rate		9343428						
ANR	9344468	Symbol	FF_PROFILE_UNKNOWN		9343428						
ANR	9344469	Symbol	AV_LOG_DEBUG		9343428						
ANR	9344470	Symbol	CODEC_FLAG_PASS2		9343428						
ANR	9344471	Symbol	CODEC_FLAG_PASS1		9343428						
ANR	9344472	Symbol	VP8E_SET_NOISE_SENSITIVITY		9343428						
ANR	9344473	Symbol	FF_PROFILE_VP9_0		9343428						
ANR	9344474	Symbol	enccfg . rc_target_bitrate		9343428						
ANR	9344475	Symbol	FF_PROFILE_VP9_1		9343428						
ANR	9344476	Symbol	ctx		9343428						
ANR	9344477	Symbol	enccfg . kf_max_dist		9343428						
ANR	9344478	Symbol	VPX_CBR		9343428						
ANR	9344479	Symbol	AV_LOG_VERBOSE		9343428						
ANR	9344480	Symbol	enccfg . g_threads		9343428						
ANR	9344481	Symbol	avctx -> bit_rate		9343428						
ANR	9344482	Symbol	& ctx -> twopass_stats . buf		9343428						
ANR	9344483	Symbol	enccfg . rc_min_quantizer		9343428						
ANR	9344484	Symbol	av_reallocp		9343428						
ANR	9344485	Symbol	enccfg . kf_min_dist		9343428						
ANR	9344486	Symbol	avctx -> pix_fmt		9343428						
ANR	9344487	Symbol	ctx -> arnr_type		9343428						
ANR	9344488	Symbol	av_log2		9343428						
ANR	9344489	Symbol	AV_LOG_INFO		9343428						
ANR	9344490	Symbol	VPX_CQ		9343428						
ANR	9344491	Symbol	VP8E_SET_ARNR_STRENGTH		9343428						
ANR	9344492	Symbol	VPX_RC_FIRST_PASS		9343428						
ANR	9344493	Symbol	avctx -> width		9343428						
ANR	9344494	Symbol	VPX_RC_ONE_PASS		9343428						
ANR	9344495	Symbol	& enccfg		9343428						
ANR	9344496	Symbol	INT_MIN		9343428						
ANR	9344497	Symbol	vpx_codec_build_config		9343428						
ANR	9344498	Symbol	ctx -> twopass_stats . buf		9343428						
ANR	9344499	Symbol	VP8E_SET_CQ_LEVEL		9343428						
ANR	9344500	Symbol	avctx -> time_base		9343428						
ANR	9344501	Symbol	& vpx_codec_vp8_cx_algo		9343428						
ANR	9344502	Symbol	avctx -> time_base . den		9343428						
ANR	9344503	Symbol	avctx		9343428						
ANR	9344504	Symbol	ctx -> cpu_used		9343428						
ANR	9344505	Symbol	avctx -> mb_threshold		9343428						
ANR	9344506	Symbol	AV_LOG_ERROR		9343428						
ANR	9344507	Symbol	avctx -> keyint_min		9343428						
ANR	9344508	Symbol	enccfg . g_timebase . den		9343428						
ANR	9344509	Symbol	ctx -> twopass_stats . sz		9343428						
ANR	9344510	Symbol	& ctx -> encoder		9343428						
ANR	9344511	Symbol	avctx -> thread_count		9343428						
ANR	9344512	Symbol	* ctx		9343428						
ANR	9344513	Symbol	EINVAL		9343428						
ANR	9344514	Symbol	ctx -> auto_alt_ref		9343428						
ANR	9344515	Symbol	VP8E_SET_ARNR_MAXFRAMES		9343428						
ANR	9344516	Symbol	AVERROR_INVALIDDATA		9343428						
ANR	9344517	Symbol	enccfg . g_lag_in_frames		9343428						
ANR	9344518	Symbol	ctx -> static_thresh		9343428						
ANR	9344519	Symbol	avctx -> gop_size		9343428						
ANR	9344520	Symbol	avctx -> noise_reduction		9343428						
ANR	9344521	Symbol	vpx_codec_version_str		9343428						
ANR	9344522	Symbol	enccfg . rc_dropframe_thresh		9343428						
ANR	9344523	Symbol	enccfg . g_timebase		9343428						
ANR	9344524	Symbol	enccfg . g_h		9343428						
ANR	9344525	Symbol	enccfg . rc_end_usage		9343428						
ANR	9344526	Symbol	enccfg . g_profile		9343428						
ANR	9344527	Symbol	decode_size		9343428						
ANR	9344528	Symbol	strlen		9343428						
ANR	9344529	Symbol	enccfg . g_w		9343428						
ANR	9344530	Symbol	CONFIG_LIBVPX_VP8_ENCODER		9343428						
ANR	9344531	Symbol	avctx -> flags		9343428						
ANR	9344532	Symbol	enccfg . rc_twopass_stats_in		9343428						
ANR	9344533	Symbol	avctx -> frame_skip_threshold		9343428						
ANR	9344534	Symbol	VP8E_SET_TOKEN_PARTITIONS		9343428						
ANR	9344535	Symbol	ret		9343428						
ANR	9344536	Symbol	res		9343428						
ANR	9344537	Symbol	avctx -> qmax		9343428						
ANR	9344538	Symbol	avctx -> rc_max_rate		9343428						
ANR	9344539	Symbol	ctx -> twopass_stats		9343428						
ANR	9344540	Symbol	AV_PIX_FMT_YUV420P		9343428						
ANR	9344541	Symbol	av_frame_alloc		9343428						
ANR	9344542	Symbol	iface		9343428						
ANR	9344543	Symbol	* avctx		9343428						
ANR	9344544	Symbol	ff_vpx_pixfmt_to_imgfmt		9343428						
ANR	9344545	Symbol	avctx -> stats_in		9343428						
ANR	9344546	Symbol	VP8E_SET_CPUUSED		9343428						
ANR	9344547	Symbol	ctx -> lag_in_frames		9343428						
ANR	9344548	Symbol	avctx -> qmin		9343428						
ANR	9344549	Symbol	avctx -> qcompress		9343428						
ANR	9344550	Symbol	enccfg . rc_2pass_vbr_bias_pct		9343428						
ANR	9344551	Symbol	av_base64_decode		9343428						
ANR	9344552	Symbol	VPX_CODEC_OK		9343428						
ANR	9344553	Symbol	enccfg . rc_max_quantizer		9343428						
ANR	9344554	Symbol	VP8E_SET_ARNR_TYPE		9343428						
ANR	9344555	Symbol	vpx_codec_enc_init		9343428						
ANR	9344556	Symbol	ctx -> arnr_max_frames		9343428						
ANR	9344557	Symbol	avctx -> height		9343428						
ANR	9344558	Symbol	avctx -> time_base . num		9343428						
ANR	9344559	Symbol	enccfg . g_pass		9343428						
ANR	9344560	Symbol	ctx -> error_resilient		9343428						
ANR	9344561	Symbol	avctx -> coded_frame		9343428						
ANR	9344562	Symbol	avctx -> rc_initial_buffer_occupancy		9343428						
ANR	9344563	Symbol	enccfg		9343428						
ANR	9344564	Symbol	avctx -> profile		9343428						
ANR	9344565	Symbol	vpx_codec_enc_config_default		9343428						
ANR	9344566	Symbol	& ctx -> twopass_stats		9343428						
ANR	9344567	Symbol	avctx -> priv_data		9343428						
ANR	9344568	Symbol	enccfg . g_timebase . num		9343428						
ANR	9344569	Symbol	& ctx -> rawimg		9343428						
ANR	9344570	Symbol	vpx_codec_err_to_string		9343428						
ANR	9344571	Symbol	round		9343428						
ANR	9344572	Symbol	avctx -> rc_buffer_size		9343428						
ANR	9344573	Symbol	enccfg . rc_buf_optimal_sz		9343428						
ANR	9344574	Symbol	ctx -> arnr_strength		9343428						
ANR	9344575	Symbol	AVERROR		9343428						
ANR	9344576	Symbol	AV_ROUND_NEAR_INF		9343428						
