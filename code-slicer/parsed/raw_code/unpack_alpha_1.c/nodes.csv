command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8627353	File	/home/p4ultr4n/workplace/ReVeal/raw_code/unpack_alpha_1.c								
ANR	8627354	Function	unpack_alpha	1:0:0:1348							
ANR	8627355	FunctionDef	"unpack_alpha (GetBitContext * gb , uint16_t * dst , int num_coeffs , const int num_bits)"		8627354	0					
ANR	8627356	CompoundStatement		5:0:122:1348	8627354	0					
ANR	8627357	IdentifierDeclStatement	const int mask = ( 1 << num_bits ) - 1 ;	7:4:129:165	8627354	0	True				
ANR	8627358	IdentifierDecl	mask = ( 1 << num_bits ) - 1		8627354	0					
ANR	8627359	IdentifierDeclType	const int		8627354	0					
ANR	8627360	Identifier	mask		8627354	1					
ANR	8627361	AssignmentExpression	mask = ( 1 << num_bits ) - 1		8627354	2		=			
ANR	8627362	Identifier	mask		8627354	0					
ANR	8627363	AdditiveExpression	( 1 << num_bits ) - 1		8627354	1		-			
ANR	8627364	ShiftExpression	1 << num_bits		8627354	0		<<			
ANR	8627365	PrimaryExpression	1		8627354	0					
ANR	8627366	Identifier	num_bits		8627354	1					
ANR	8627367	PrimaryExpression	1		8627354	1					
ANR	8627368	IdentifierDeclStatement	"int i , idx , val , alpha_val ;"	9:4:172:198	8627354	1	True				
ANR	8627369	IdentifierDecl	i		8627354	0					
ANR	8627370	IdentifierDeclType	int		8627354	0					
ANR	8627371	Identifier	i		8627354	1					
ANR	8627372	IdentifierDecl	idx		8627354	1					
ANR	8627373	IdentifierDeclType	int		8627354	0					
ANR	8627374	Identifier	idx		8627354	1					
ANR	8627375	IdentifierDecl	val		8627354	2					
ANR	8627376	IdentifierDeclType	int		8627354	0					
ANR	8627377	Identifier	val		8627354	1					
ANR	8627378	IdentifierDecl	alpha_val		8627354	3					
ANR	8627379	IdentifierDeclType	int		8627354	0					
ANR	8627380	Identifier	alpha_val		8627354	1					
ANR	8627381	ExpressionStatement	idx = 0	13:4:207:220	8627354	2	True				
ANR	8627382	AssignmentExpression	idx = 0		8627354	0		=			
ANR	8627383	Identifier	idx		8627354	0					
ANR	8627384	PrimaryExpression	0		8627354	1					
ANR	8627385	ExpressionStatement	alpha_val = mask	15:4:227:243	8627354	3	True				
ANR	8627386	AssignmentExpression	alpha_val = mask		8627354	0		=			
ANR	8627387	Identifier	alpha_val		8627354	0					
ANR	8627388	Identifier	mask		8627354	1					
ANR	8627389	DoStatement	do		8627354	4					
ANR	8627390	CompoundStatement		13:7:130:130	8627354	0					
ANR	8627391	DoStatement	do		8627354	0					
ANR	8627392	CompoundStatement		15:11:144:144	8627354	0					
ANR	8627393	IfStatement	if ( get_bits1 ( gb ) )		8627354	0					
ANR	8627394	Condition	get_bits1 ( gb )	21:16:286:298	8627354	0	True				
ANR	8627395	CallExpression	get_bits1 ( gb )		8627354	0					
ANR	8627396	Callee	get_bits1		8627354	0					
ANR	8627397	Identifier	get_bits1		8627354	0					
ANR	8627398	ArgumentList	gb		8627354	1					
ANR	8627399	Argument	gb		8627354	0					
ANR	8627400	Identifier	gb		8627354	0					
ANR	8627401	ExpressionStatement	"val = get_bits ( gb , num_bits )"	23:16:318:346	8627354	1	True				
ANR	8627402	AssignmentExpression	"val = get_bits ( gb , num_bits )"		8627354	0		=			
ANR	8627403	Identifier	val		8627354	0					
ANR	8627404	CallExpression	"get_bits ( gb , num_bits )"		8627354	1					
ANR	8627405	Callee	get_bits		8627354	0					
ANR	8627406	Identifier	get_bits		8627354	0					
ANR	8627407	ArgumentList	gb		8627354	1					
ANR	8627408	Argument	gb		8627354	0					
ANR	8627409	Identifier	gb		8627354	0					
ANR	8627410	Argument	num_bits		8627354	1					
ANR	8627411	Identifier	num_bits		8627354	0					
ANR	8627412	ElseStatement	else		8627354	0					
ANR	8627413	CompoundStatement		23:16:262:270	8627354	0					
ANR	8627414	IdentifierDeclStatement	int sign ;	27:16:385:393	8627354	0	True				
ANR	8627415	IdentifierDecl	sign		8627354	0					
ANR	8627416	IdentifierDeclType	int		8627354	0					
ANR	8627417	Identifier	sign		8627354	1					
ANR	8627418	ExpressionStatement	"val = get_bits ( gb , num_bits == 16 ? 7 : 4 )"	29:16:412:455	8627354	1	True				
ANR	8627419	AssignmentExpression	"val = get_bits ( gb , num_bits == 16 ? 7 : 4 )"		8627354	0		=			
ANR	8627420	Identifier	val		8627354	0					
ANR	8627421	CallExpression	"get_bits ( gb , num_bits == 16 ? 7 : 4 )"		8627354	1					
ANR	8627422	Callee	get_bits		8627354	0					
ANR	8627423	Identifier	get_bits		8627354	0					
ANR	8627424	ArgumentList	gb		8627354	1					
ANR	8627425	Argument	gb		8627354	0					
ANR	8627426	Identifier	gb		8627354	0					
ANR	8627427	Argument	num_bits == 16 ? 7 : 4		8627354	1					
ANR	8627428	ConditionalExpression	num_bits == 16 ? 7 : 4		8627354	0					
ANR	8627429	Condition	num_bits == 16		8627354	0					
ANR	8627430	EqualityExpression	num_bits == 16		8627354	0		==			
ANR	8627431	Identifier	num_bits		8627354	0					
ANR	8627432	PrimaryExpression	16		8627354	1					
ANR	8627433	PrimaryExpression	7		8627354	1					
ANR	8627434	PrimaryExpression	4		8627354	2					
ANR	8627435	ExpressionStatement	sign = val & 1	31:16:474:488	8627354	2	True				
ANR	8627436	AssignmentExpression	sign = val & 1		8627354	0		=			
ANR	8627437	Identifier	sign		8627354	0					
ANR	8627438	BitAndExpression	val & 1		8627354	1		&			
ANR	8627439	Identifier	val		8627354	0					
ANR	8627440	PrimaryExpression	1		8627354	1					
ANR	8627441	ExpressionStatement	val = ( val + 2 ) >> 1	33:16:507:528	8627354	3	True				
ANR	8627442	AssignmentExpression	val = ( val + 2 ) >> 1		8627354	0		=			
ANR	8627443	Identifier	val		8627354	0					
ANR	8627444	ShiftExpression	( val + 2 ) >> 1		8627354	1		>>			
ANR	8627445	AdditiveExpression	val + 2		8627354	0		+			
ANR	8627446	Identifier	val		8627354	0					
ANR	8627447	PrimaryExpression	2		8627354	1					
ANR	8627448	PrimaryExpression	1		8627354	1					
ANR	8627449	IfStatement	if ( sign )		8627354	4					
ANR	8627450	Condition	sign	35:20:551:554	8627354	0	True				
ANR	8627451	Identifier	sign		8627354	0					
ANR	8627452	ExpressionStatement	val = - val	37:20:578:588	8627354	1	True				
ANR	8627453	AssignmentExpression	val = - val		8627354	0		=			
ANR	8627454	Identifier	val		8627354	0					
ANR	8627455	UnaryOperationExpression	- val		8627354	1					
ANR	8627456	UnaryOperator	-		8627354	0					
ANR	8627457	Identifier	val		8627354	1					
ANR	8627458	ExpressionStatement	alpha_val = ( alpha_val + val ) & mask	41:12:618:654	8627354	1	True				
ANR	8627459	AssignmentExpression	alpha_val = ( alpha_val + val ) & mask		8627354	0		=			
ANR	8627460	Identifier	alpha_val		8627354	0					
ANR	8627461	BitAndExpression	( alpha_val + val ) & mask		8627354	1		&			
ANR	8627462	AdditiveExpression	alpha_val + val		8627354	0		+			
ANR	8627463	Identifier	alpha_val		8627354	0					
ANR	8627464	Identifier	val		8627354	1					
ANR	8627465	Identifier	mask		8627354	1					
ANR	8627466	IfStatement	if ( num_bits == 16 )		8627354	2					
ANR	8627467	Condition	num_bits == 16	43:16:673:686	8627354	0	True				
ANR	8627468	EqualityExpression	num_bits == 16		8627354	0		==			
ANR	8627469	Identifier	num_bits		8627354	0					
ANR	8627470	PrimaryExpression	16		8627354	1					
ANR	8627471	ExpressionStatement	dst [ idx ++ ] = alpha_val >> 6	45:16:706:733	8627354	1	True				
ANR	8627472	AssignmentExpression	dst [ idx ++ ] = alpha_val >> 6		8627354	0		=			
ANR	8627473	ArrayIndexing	dst [ idx ++ ]		8627354	0					
ANR	8627474	Identifier	dst		8627354	0					
ANR	8627475	PostIncDecOperationExpression	idx ++		8627354	1					
ANR	8627476	Identifier	idx		8627354	0					
ANR	8627477	IncDec	++		8627354	1					
ANR	8627478	ShiftExpression	alpha_val >> 6		8627354	1		>>			
ANR	8627479	Identifier	alpha_val		8627354	0					
ANR	8627480	PrimaryExpression	6		8627354	1					
ANR	8627481	ElseStatement	else		8627354	0					
ANR	8627482	ExpressionStatement	dst [ idx ++ ] = ( alpha_val << 2 ) | ( alpha_val >> 6 )	49:16:770:818	8627354	0	True				
ANR	8627483	AssignmentExpression	dst [ idx ++ ] = ( alpha_val << 2 ) | ( alpha_val >> 6 )		8627354	0		=			
ANR	8627484	ArrayIndexing	dst [ idx ++ ]		8627354	0					
ANR	8627485	Identifier	dst		8627354	0					
ANR	8627486	PostIncDecOperationExpression	idx ++		8627354	1					
ANR	8627487	Identifier	idx		8627354	0					
ANR	8627488	IncDec	++		8627354	1					
ANR	8627489	InclusiveOrExpression	( alpha_val << 2 ) | ( alpha_val >> 6 )		8627354	1		|			
ANR	8627490	ShiftExpression	alpha_val << 2		8627354	0		<<			
ANR	8627491	Identifier	alpha_val		8627354	0					
ANR	8627492	PrimaryExpression	2		8627354	1					
ANR	8627493	ShiftExpression	alpha_val >> 6		8627354	1		>>			
ANR	8627494	Identifier	alpha_val		8627354	0					
ANR	8627495	PrimaryExpression	6		8627354	1					
ANR	8627496	IfStatement	if ( idx == num_coeffs - 1 )		8627354	3					
ANR	8627497	Condition	idx == num_coeffs - 1	51:16:837:857	8627354	0	True				
ANR	8627498	EqualityExpression	idx == num_coeffs - 1		8627354	0		==			
ANR	8627499	Identifier	idx		8627354	0					
ANR	8627500	AdditiveExpression	num_coeffs - 1		8627354	1		-			
ANR	8627501	Identifier	num_coeffs		8627354	0					
ANR	8627502	PrimaryExpression	1		8627354	1					
ANR	8627503	BreakStatement	break ;	53:16:877:882	8627354	1	True				
ANR	8627504	Condition	get_bits1 ( gb )	55:17:902:914	8627354	1	True				
ANR	8627505	CallExpression	get_bits1 ( gb )		8627354	0					
ANR	8627506	Callee	get_bits1		8627354	0					
ANR	8627507	Identifier	get_bits1		8627354	0					
ANR	8627508	ArgumentList	gb		8627354	1					
ANR	8627509	Argument	gb		8627354	0					
ANR	8627510	Identifier	gb		8627354	0					
ANR	8627511	ExpressionStatement	"val = get_bits ( gb , 4 )"	57:8:927:948	8627354	1	True				
ANR	8627512	AssignmentExpression	"val = get_bits ( gb , 4 )"		8627354	0		=			
ANR	8627513	Identifier	val		8627354	0					
ANR	8627514	CallExpression	"get_bits ( gb , 4 )"		8627354	1					
ANR	8627515	Callee	get_bits		8627354	0					
ANR	8627516	Identifier	get_bits		8627354	0					
ANR	8627517	ArgumentList	gb		8627354	1					
ANR	8627518	Argument	gb		8627354	0					
ANR	8627519	Identifier	gb		8627354	0					
ANR	8627520	Argument	4		8627354	1					
ANR	8627521	PrimaryExpression	4		8627354	0					
ANR	8627522	IfStatement	if ( ! val )		8627354	2					
ANR	8627523	Condition	! val	59:12:963:966	8627354	0	True				
ANR	8627524	UnaryOperationExpression	! val		8627354	0					
ANR	8627525	UnaryOperator	!		8627354	0					
ANR	8627526	Identifier	val		8627354	1					
ANR	8627527	ExpressionStatement	"val = get_bits ( gb , 11 )"	61:12:982:1004	8627354	1	True				
ANR	8627528	AssignmentExpression	"val = get_bits ( gb , 11 )"		8627354	0		=			
ANR	8627529	Identifier	val		8627354	0					
ANR	8627530	CallExpression	"get_bits ( gb , 11 )"		8627354	1					
ANR	8627531	Callee	get_bits		8627354	0					
ANR	8627532	Identifier	get_bits		8627354	0					
ANR	8627533	ArgumentList	gb		8627354	1					
ANR	8627534	Argument	gb		8627354	0					
ANR	8627535	Identifier	gb		8627354	0					
ANR	8627536	Argument	11		8627354	1					
ANR	8627537	PrimaryExpression	11		8627354	0					
ANR	8627538	IfStatement	if ( idx + val > num_coeffs )		8627354	3					
ANR	8627539	Condition	idx + val > num_coeffs	63:12:1019:1040	8627354	0	True				
ANR	8627540	RelationalExpression	idx + val > num_coeffs		8627354	0		>			
ANR	8627541	AdditiveExpression	idx + val		8627354	0		+			
ANR	8627542	Identifier	idx		8627354	0					
ANR	8627543	Identifier	val		8627354	1					
ANR	8627544	Identifier	num_coeffs		8627354	1					
ANR	8627545	ExpressionStatement	val = num_coeffs - idx	65:12:1056:1078	8627354	1	True				
ANR	8627546	AssignmentExpression	val = num_coeffs - idx		8627354	0		=			
ANR	8627547	Identifier	val		8627354	0					
ANR	8627548	AdditiveExpression	num_coeffs - idx		8627354	1		-			
ANR	8627549	Identifier	num_coeffs		8627354	0					
ANR	8627550	Identifier	idx		8627354	1					
ANR	8627551	IfStatement	if ( num_bits == 16 )		8627354	4					
ANR	8627552	Condition	num_bits == 16	67:12:1093:1106	8627354	0	True				
ANR	8627553	EqualityExpression	num_bits == 16		8627354	0		==			
ANR	8627554	Identifier	num_bits		8627354	0					
ANR	8627555	PrimaryExpression	16		8627354	1					
ANR	8627556	ForStatement	for ( i = 0 ; i < val ; i ++ )		8627354	1					
ANR	8627557	ForInit	i = 0 ;	69:17:1127:1132	8627354	0	True				
ANR	8627558	AssignmentExpression	i = 0		8627354	0		=			
ANR	8627559	Identifier	i		8627354	0					
ANR	8627560	PrimaryExpression	0		8627354	1					
ANR	8627561	Condition	i < val	69:24:1134:1140	8627354	1	True				
ANR	8627562	RelationalExpression	i < val		8627354	0		<			
ANR	8627563	Identifier	i		8627354	0					
ANR	8627564	Identifier	val		8627354	1					
ANR	8627565	PostIncDecOperationExpression	i ++	69:33:1143:1145	8627354	2	True				
ANR	8627566	Identifier	i		8627354	0					
ANR	8627567	IncDec	++		8627354	1					
ANR	8627568	ExpressionStatement	dst [ idx ++ ] = alpha_val >> 6	71:16:1165:1192	8627354	3	True				
ANR	8627569	AssignmentExpression	dst [ idx ++ ] = alpha_val >> 6		8627354	0		=			
ANR	8627570	ArrayIndexing	dst [ idx ++ ]		8627354	0					
ANR	8627571	Identifier	dst		8627354	0					
ANR	8627572	PostIncDecOperationExpression	idx ++		8627354	1					
ANR	8627573	Identifier	idx		8627354	0					
ANR	8627574	IncDec	++		8627354	1					
ANR	8627575	ShiftExpression	alpha_val >> 6		8627354	1		>>			
ANR	8627576	Identifier	alpha_val		8627354	0					
ANR	8627577	PrimaryExpression	6		8627354	1					
ANR	8627578	ElseStatement	else		8627354	0					
ANR	8627579	ForStatement	for ( i = 0 ; i < val ; i ++ )		8627354	0					
ANR	8627580	ForInit	i = 0 ;	75:17:1226:1231	8627354	0	True				
ANR	8627581	AssignmentExpression	i = 0		8627354	0		=			
ANR	8627582	Identifier	i		8627354	0					
ANR	8627583	PrimaryExpression	0		8627354	1					
ANR	8627584	Condition	i < val	75:24:1233:1239	8627354	1	True				
ANR	8627585	RelationalExpression	i < val		8627354	0		<			
ANR	8627586	Identifier	i		8627354	0					
ANR	8627587	Identifier	val		8627354	1					
ANR	8627588	PostIncDecOperationExpression	i ++	75:33:1242:1244	8627354	2	True				
ANR	8627589	Identifier	i		8627354	0					
ANR	8627590	IncDec	++		8627354	1					
ANR	8627591	ExpressionStatement	dst [ idx ++ ] = ( alpha_val << 2 ) | ( alpha_val >> 6 )	77:16:1264:1312	8627354	3	True				
ANR	8627592	AssignmentExpression	dst [ idx ++ ] = ( alpha_val << 2 ) | ( alpha_val >> 6 )		8627354	0		=			
ANR	8627593	ArrayIndexing	dst [ idx ++ ]		8627354	0					
ANR	8627594	Identifier	dst		8627354	0					
ANR	8627595	PostIncDecOperationExpression	idx ++		8627354	1					
ANR	8627596	Identifier	idx		8627354	0					
ANR	8627597	IncDec	++		8627354	1					
ANR	8627598	InclusiveOrExpression	( alpha_val << 2 ) | ( alpha_val >> 6 )		8627354	1		|			
ANR	8627599	ShiftExpression	alpha_val << 2		8627354	0		<<			
ANR	8627600	Identifier	alpha_val		8627354	0					
ANR	8627601	PrimaryExpression	2		8627354	1					
ANR	8627602	ShiftExpression	alpha_val >> 6		8627354	1		>>			
ANR	8627603	Identifier	alpha_val		8627354	0					
ANR	8627604	PrimaryExpression	6		8627354	1					
ANR	8627605	Condition	idx < num_coeffs	79:13:1328:1343	8627354	1	True				
ANR	8627606	RelationalExpression	idx < num_coeffs		8627354	0		<			
ANR	8627607	Identifier	idx		8627354	0					
ANR	8627608	Identifier	num_coeffs		8627354	1					
ANR	8627609	ReturnType	static void		8627354	1					
ANR	8627610	Identifier	unpack_alpha		8627354	2					
ANR	8627611	ParameterList	"GetBitContext * gb , uint16_t * dst , int num_coeffs , const int num_bits"		8627354	3					
ANR	8627612	Parameter	GetBitContext * gb	1:25:25:41	8627354	0	True				
ANR	8627613	ParameterType	GetBitContext *		8627354	0					
ANR	8627614	Identifier	gb		8627354	1					
ANR	8627615	Parameter	uint16_t * dst	1:44:44:56	8627354	1	True				
ANR	8627616	ParameterType	uint16_t *		8627354	0					
ANR	8627617	Identifier	dst		8627354	1					
ANR	8627618	Parameter	int num_coeffs	1:59:59:72	8627354	2	True				
ANR	8627619	ParameterType	int		8627354	0					
ANR	8627620	Identifier	num_coeffs		8627354	1					
ANR	8627621	Parameter	const int num_bits	3:25:101:118	8627354	3	True				
ANR	8627622	ParameterType	const int		8627354	0					
ANR	8627623	Identifier	num_bits		8627354	1					
ANR	8627624	CFGEntryNode	ENTRY		8627354		True				
ANR	8627625	CFGExitNode	EXIT		8627354		True				
ANR	8627626	Symbol	val		8627354						
ANR	8627627	Symbol	alpha_val		8627354						
ANR	8627628	Symbol	dst		8627354						
ANR	8627629	Symbol	get_bits		8627354						
ANR	8627630	Symbol	get_bits1		8627354						
ANR	8627631	Symbol	sign		8627354						
ANR	8627632	Symbol	i		8627354						
ANR	8627633	Symbol	* dst		8627354						
ANR	8627634	Symbol	num_coeffs		8627354						
ANR	8627635	Symbol	gb		8627354						
ANR	8627636	Symbol	num_bits		8627354						
ANR	8627637	Symbol	idx		8627354						
ANR	8627638	Symbol	mask		8627354						
