command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2946584	File	/home/p4ultr4n/workplace/ReVeal/raw_code/eightsvx_decode_frame_1.c								
ANR	2946585	Function	eightsvx_decode_frame	1:0:0:2667							
ANR	2946586	FunctionDef	"eightsvx_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		2946585	0					
ANR	2946587	CompoundStatement		5:0:140:2667	2946585	0					
ANR	2946588	IdentifierDeclStatement	EightSvxContext * esc = avctx -> priv_data ;	7:4:147:186	2946585	0	True				
ANR	2946589	IdentifierDecl	* esc = avctx -> priv_data		2946585	0					
ANR	2946590	IdentifierDeclType	EightSvxContext *		2946585	0					
ANR	2946591	Identifier	esc		2946585	1					
ANR	2946592	AssignmentExpression	* esc = avctx -> priv_data		2946585	2		=			
ANR	2946593	Identifier	esc		2946585	0					
ANR	2946594	PtrMemberAccess	avctx -> priv_data		2946585	1					
ANR	2946595	Identifier	avctx		2946585	0					
ANR	2946596	Identifier	priv_data		2946585	1					
ANR	2946597	IdentifierDeclStatement	"int n , out_data_size , ret ;"	9:4:193:218	2946585	1	True				
ANR	2946598	IdentifierDecl	n		2946585	0					
ANR	2946599	IdentifierDeclType	int		2946585	0					
ANR	2946600	Identifier	n		2946585	1					
ANR	2946601	IdentifierDecl	out_data_size		2946585	1					
ANR	2946602	IdentifierDeclType	int		2946585	0					
ANR	2946603	Identifier	out_data_size		2946585	1					
ANR	2946604	IdentifierDecl	ret		2946585	2					
ANR	2946605	IdentifierDeclType	int		2946585	0					
ANR	2946606	Identifier	ret		2946585	1					
ANR	2946607	IdentifierDeclStatement	"uint8_t * src , * dst ;"	11:4:225:243	2946585	2	True				
ANR	2946608	IdentifierDecl	* src		2946585	0					
ANR	2946609	IdentifierDeclType	uint8_t *		2946585	0					
ANR	2946610	Identifier	src		2946585	1					
ANR	2946611	IdentifierDecl	* dst		2946585	1					
ANR	2946612	IdentifierDeclType	uint8_t *		2946585	0					
ANR	2946613	Identifier	dst		2946585	1					
ANR	2946614	IfStatement	if ( ! esc -> samples && avpkt )		2946585	3					
ANR	2946615	Condition	! esc -> samples && avpkt	17:8:306:327	2946585	0	True				
ANR	2946616	AndExpression	! esc -> samples && avpkt		2946585	0		&&			
ANR	2946617	UnaryOperationExpression	! esc -> samples		2946585	0					
ANR	2946618	UnaryOperator	!		2946585	0					
ANR	2946619	PtrMemberAccess	esc -> samples		2946585	1					
ANR	2946620	Identifier	esc		2946585	0					
ANR	2946621	Identifier	samples		2946585	1					
ANR	2946622	Identifier	avpkt		2946585	1					
ANR	2946623	CompoundStatement		15:8:200:241	2946585	1					
ANR	2946624	IdentifierDeclStatement	"uint8_t * deinterleaved_samples , * p = NULL ;"	19:8:341:382	2946585	0	True				
ANR	2946625	IdentifierDecl	* deinterleaved_samples		2946585	0					
ANR	2946626	IdentifierDeclType	uint8_t *		2946585	0					
ANR	2946627	Identifier	deinterleaved_samples		2946585	1					
ANR	2946628	IdentifierDecl	* p = NULL		2946585	1					
ANR	2946629	IdentifierDeclType	uint8_t *		2946585	0					
ANR	2946630	Identifier	p		2946585	1					
ANR	2946631	AssignmentExpression	* p = NULL		2946585	2		=			
ANR	2946632	Identifier	NULL		2946585	0					
ANR	2946633	Identifier	NULL		2946585	1					
ANR	2946634	ExpressionStatement	esc -> samples_size = ! esc -> table ? avpkt -> size : avctx -> channels + ( avpkt -> size - avctx -> channels ) * 2	23:8:395:507	2946585	1	True				
ANR	2946635	AssignmentExpression	esc -> samples_size = ! esc -> table ? avpkt -> size : avctx -> channels + ( avpkt -> size - avctx -> channels ) * 2		2946585	0		=			
ANR	2946636	PtrMemberAccess	esc -> samples_size		2946585	0					
ANR	2946637	Identifier	esc		2946585	0					
ANR	2946638	Identifier	samples_size		2946585	1					
ANR	2946639	ConditionalExpression	! esc -> table ? avpkt -> size : avctx -> channels + ( avpkt -> size - avctx -> channels ) * 2		2946585	1					
ANR	2946640	Condition	! esc -> table		2946585	0					
ANR	2946641	UnaryOperationExpression	! esc -> table		2946585	0					
ANR	2946642	UnaryOperator	!		2946585	0					
ANR	2946643	PtrMemberAccess	esc -> table		2946585	1					
ANR	2946644	Identifier	esc		2946585	0					
ANR	2946645	Identifier	table		2946585	1					
ANR	2946646	PtrMemberAccess	avpkt -> size		2946585	1					
ANR	2946647	Identifier	avpkt		2946585	0					
ANR	2946648	Identifier	size		2946585	1					
ANR	2946649	AdditiveExpression	avctx -> channels + ( avpkt -> size - avctx -> channels ) * 2		2946585	2		+			
ANR	2946650	PtrMemberAccess	avctx -> channels		2946585	0					
ANR	2946651	Identifier	avctx		2946585	0					
ANR	2946652	Identifier	channels		2946585	1					
ANR	2946653	MultiplicativeExpression	( avpkt -> size - avctx -> channels ) * 2		2946585	1		*			
ANR	2946654	AdditiveExpression	avpkt -> size - avctx -> channels		2946585	0		-			
ANR	2946655	PtrMemberAccess	avpkt -> size		2946585	0					
ANR	2946656	Identifier	avpkt		2946585	0					
ANR	2946657	Identifier	size		2946585	1					
ANR	2946658	PtrMemberAccess	avctx -> channels		2946585	1					
ANR	2946659	Identifier	avctx		2946585	0					
ANR	2946660	Identifier	channels		2946585	1					
ANR	2946661	PrimaryExpression	2		2946585	1					
ANR	2946662	IfStatement	if ( ! ( esc -> samples = av_malloc ( esc -> samples_size ) ) )		2946585	2					
ANR	2946663	Condition	! ( esc -> samples = av_malloc ( esc -> samples_size ) )	27:12:522:567	2946585	0	True				
ANR	2946664	UnaryOperationExpression	! ( esc -> samples = av_malloc ( esc -> samples_size ) )		2946585	0					
ANR	2946665	UnaryOperator	!		2946585	0					
ANR	2946666	AssignmentExpression	esc -> samples = av_malloc ( esc -> samples_size )		2946585	1		=			
ANR	2946667	PtrMemberAccess	esc -> samples		2946585	0					
ANR	2946668	Identifier	esc		2946585	0					
ANR	2946669	Identifier	samples		2946585	1					
ANR	2946670	CallExpression	av_malloc ( esc -> samples_size )		2946585	1					
ANR	2946671	Callee	av_malloc		2946585	0					
ANR	2946672	Identifier	av_malloc		2946585	0					
ANR	2946673	ArgumentList	esc -> samples_size		2946585	1					
ANR	2946674	Argument	esc -> samples_size		2946585	0					
ANR	2946675	PtrMemberAccess	esc -> samples_size		2946585	0					
ANR	2946676	Identifier	esc		2946585	0					
ANR	2946677	Identifier	samples_size		2946585	1					
ANR	2946678	ReturnStatement	return AVERROR ( ENOMEM ) ;	29:12:583:605	2946585	1	True				
ANR	2946679	CallExpression	AVERROR ( ENOMEM )		2946585	0					
ANR	2946680	Callee	AVERROR		2946585	0					
ANR	2946681	Identifier	AVERROR		2946585	0					
ANR	2946682	ArgumentList	ENOMEM		2946585	1					
ANR	2946683	Argument	ENOMEM		2946585	0					
ANR	2946684	Identifier	ENOMEM		2946585	0					
ANR	2946685	IfStatement	if ( esc -> table )		2946585	3					
ANR	2946686	Condition	esc -> table	35:12:648:657	2946585	0	True				
ANR	2946687	PtrMemberAccess	esc -> table		2946585	0					
ANR	2946688	Identifier	esc		2946585	0					
ANR	2946689	Identifier	table		2946585	1					
ANR	2946690	CompoundStatement		39:12:649:677	2946585	1					
ANR	2946691	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	37:12:675:707	2946585	0	True				
ANR	2946692	IdentifierDecl	* buf = avpkt -> data		2946585	0					
ANR	2946693	IdentifierDeclType	const uint8_t *		2946585	0					
ANR	2946694	Identifier	buf		2946585	1					
ANR	2946695	AssignmentExpression	* buf = avpkt -> data		2946585	2		=			
ANR	2946696	Identifier	buf		2946585	0					
ANR	2946697	PtrMemberAccess	avpkt -> data		2946585	1					
ANR	2946698	Identifier	avpkt		2946585	0					
ANR	2946699	Identifier	data		2946585	1					
ANR	2946700	IdentifierDeclStatement	uint8_t * dst ;	39:12:722:734	2946585	1	True				
ANR	2946701	IdentifierDecl	* dst		2946585	0					
ANR	2946702	IdentifierDeclType	uint8_t *		2946585	0					
ANR	2946703	Identifier	dst		2946585	1					
ANR	2946704	IdentifierDeclStatement	int buf_size = avpkt -> size ;	41:12:749:775	2946585	2	True				
ANR	2946705	IdentifierDecl	buf_size = avpkt -> size		2946585	0					
ANR	2946706	IdentifierDeclType	int		2946585	0					
ANR	2946707	Identifier	buf_size		2946585	1					
ANR	2946708	AssignmentExpression	buf_size = avpkt -> size		2946585	2		=			
ANR	2946709	Identifier	buf_size		2946585	0					
ANR	2946710	PtrMemberAccess	avpkt -> size		2946585	1					
ANR	2946711	Identifier	avpkt		2946585	0					
ANR	2946712	Identifier	size		2946585	1					
ANR	2946713	IdentifierDeclStatement	"int i , n = esc -> samples_size ;"	43:12:790:818	2946585	3	True				
ANR	2946714	IdentifierDecl	i		2946585	0					
ANR	2946715	IdentifierDeclType	int		2946585	0					
ANR	2946716	Identifier	i		2946585	1					
ANR	2946717	IdentifierDecl	n = esc -> samples_size		2946585	1					
ANR	2946718	IdentifierDeclType	int		2946585	0					
ANR	2946719	Identifier	n		2946585	1					
ANR	2946720	AssignmentExpression	n = esc -> samples_size		2946585	2		=			
ANR	2946721	Identifier	n		2946585	0					
ANR	2946722	PtrMemberAccess	esc -> samples_size		2946585	1					
ANR	2946723	Identifier	esc		2946585	0					
ANR	2946724	Identifier	samples_size		2946585	1					
ANR	2946725	IfStatement	if ( buf_size < 2 )		2946585	4					
ANR	2946726	Condition	buf_size < 2	47:16:839:850	2946585	0	True				
ANR	2946727	RelationalExpression	buf_size < 2		2946585	0		<			
ANR	2946728	Identifier	buf_size		2946585	0					
ANR	2946729	PrimaryExpression	2		2946585	1					
ANR	2946730	CompoundStatement		43:30:712:712	2946585	1					
ANR	2946731	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""packet size is too small\\n"" )"	49:16:872:929	2946585	0	True				
ANR	2946732	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""packet size is too small\\n"" )"		2946585	0					
ANR	2946733	Callee	av_log		2946585	0					
ANR	2946734	Identifier	av_log		2946585	0					
ANR	2946735	ArgumentList	avctx		2946585	1					
ANR	2946736	Argument	avctx		2946585	0					
ANR	2946737	Identifier	avctx		2946585	0					
ANR	2946738	Argument	AV_LOG_ERROR		2946585	1					
ANR	2946739	Identifier	AV_LOG_ERROR		2946585	0					
ANR	2946740	Argument	"""packet size is too small\\n"""		2946585	2					
ANR	2946741	PrimaryExpression	"""packet size is too small\\n"""		2946585	0					
ANR	2946742	ReturnStatement	return AVERROR ( EINVAL ) ;	51:16:948:970	2946585	1	True				
ANR	2946743	CallExpression	AVERROR ( EINVAL )		2946585	0					
ANR	2946744	Callee	AVERROR		2946585	0					
ANR	2946745	Identifier	AVERROR		2946585	0					
ANR	2946746	ArgumentList	EINVAL		2946585	1					
ANR	2946747	Argument	EINVAL		2946585	0					
ANR	2946748	Identifier	EINVAL		2946585	0					
ANR	2946749	IfStatement	if ( ! ( deinterleaved_samples = av_mallocz ( n ) ) )		2946585	5					
ANR	2946750	Condition	! ( deinterleaved_samples = av_mallocz ( n ) )	55:16:1004:1043	2946585	0	True				
ANR	2946751	UnaryOperationExpression	! ( deinterleaved_samples = av_mallocz ( n ) )		2946585	0					
ANR	2946752	UnaryOperator	!		2946585	0					
ANR	2946753	AssignmentExpression	deinterleaved_samples = av_mallocz ( n )		2946585	1		=			
ANR	2946754	Identifier	deinterleaved_samples		2946585	0					
ANR	2946755	CallExpression	av_mallocz ( n )		2946585	1					
ANR	2946756	Callee	av_mallocz		2946585	0					
ANR	2946757	Identifier	av_mallocz		2946585	0					
ANR	2946758	ArgumentList	n		2946585	1					
ANR	2946759	Argument	n		2946585	0					
ANR	2946760	Identifier	n		2946585	0					
ANR	2946761	ReturnStatement	return AVERROR ( ENOMEM ) ;	57:16:1063:1085	2946585	1	True				
ANR	2946762	CallExpression	AVERROR ( ENOMEM )		2946585	0					
ANR	2946763	Callee	AVERROR		2946585	0					
ANR	2946764	Identifier	AVERROR		2946585	0					
ANR	2946765	ArgumentList	ENOMEM		2946585	1					
ANR	2946766	Argument	ENOMEM		2946585	0					
ANR	2946767	Identifier	ENOMEM		2946585	0					
ANR	2946768	ExpressionStatement	dst = p = deinterleaved_samples	59:12:1100:1131	2946585	6	True				
ANR	2946769	AssignmentExpression	dst = p = deinterleaved_samples		2946585	0		=			
ANR	2946770	Identifier	dst		2946585	0					
ANR	2946771	AssignmentExpression	p = deinterleaved_samples		2946585	1		=			
ANR	2946772	Identifier	p		2946585	0					
ANR	2946773	Identifier	deinterleaved_samples		2946585	1					
ANR	2946774	ExpressionStatement	dst = deinterleaved_samples	65:12:1230:1257	2946585	7	True				
ANR	2946775	AssignmentExpression	dst = deinterleaved_samples		2946585	0		=			
ANR	2946776	Identifier	dst		2946585	0					
ANR	2946777	Identifier	deinterleaved_samples		2946585	1					
ANR	2946778	ForStatement	for ( i = 0 ; i < avctx -> channels ; i ++ )		2946585	8					
ANR	2946779	ForInit	i = 0 ;	67:17:1277:1282	2946585	0	True				
ANR	2946780	AssignmentExpression	i = 0		2946585	0		=			
ANR	2946781	Identifier	i		2946585	0					
ANR	2946782	PrimaryExpression	0		2946585	1					
ANR	2946783	Condition	i < avctx -> channels	67:24:1284:1302	2946585	1	True				
ANR	2946784	RelationalExpression	i < avctx -> channels		2946585	0		<			
ANR	2946785	Identifier	i		2946585	0					
ANR	2946786	PtrMemberAccess	avctx -> channels		2946585	1					
ANR	2946787	Identifier	avctx		2946585	0					
ANR	2946788	Identifier	channels		2946585	1					
ANR	2946789	PostIncDecOperationExpression	i ++	67:45:1305:1307	2946585	2	True				
ANR	2946790	Identifier	i		2946585	0					
ANR	2946791	IncDec	++		2946585	1					
ANR	2946792	CompoundStatement		63:50:1169:1169	2946585	3					
ANR	2946793	ExpressionStatement	"delta_decode ( dst , buf + 1 , buf_size / avctx -> channels - 1 , buf [ 0 ] , esc -> table )"	69:16:1329:1407	2946585	0	True				
ANR	2946794	CallExpression	"delta_decode ( dst , buf + 1 , buf_size / avctx -> channels - 1 , buf [ 0 ] , esc -> table )"		2946585	0					
ANR	2946795	Callee	delta_decode		2946585	0					
ANR	2946796	Identifier	delta_decode		2946585	0					
ANR	2946797	ArgumentList	dst		2946585	1					
ANR	2946798	Argument	dst		2946585	0					
ANR	2946799	Identifier	dst		2946585	0					
ANR	2946800	Argument	buf + 1		2946585	1					
ANR	2946801	AdditiveExpression	buf + 1		2946585	0		+			
ANR	2946802	Identifier	buf		2946585	0					
ANR	2946803	PrimaryExpression	1		2946585	1					
ANR	2946804	Argument	buf_size / avctx -> channels - 1		2946585	2					
ANR	2946805	AdditiveExpression	buf_size / avctx -> channels - 1		2946585	0		-			
ANR	2946806	MultiplicativeExpression	buf_size / avctx -> channels		2946585	0		/			
ANR	2946807	Identifier	buf_size		2946585	0					
ANR	2946808	PtrMemberAccess	avctx -> channels		2946585	1					
ANR	2946809	Identifier	avctx		2946585	0					
ANR	2946810	Identifier	channels		2946585	1					
ANR	2946811	PrimaryExpression	1		2946585	1					
ANR	2946812	Argument	buf [ 0 ]		2946585	3					
ANR	2946813	ArrayIndexing	buf [ 0 ]		2946585	0					
ANR	2946814	Identifier	buf		2946585	0					
ANR	2946815	PrimaryExpression	0		2946585	1					
ANR	2946816	Argument	esc -> table		2946585	4					
ANR	2946817	PtrMemberAccess	esc -> table		2946585	0					
ANR	2946818	Identifier	esc		2946585	0					
ANR	2946819	Identifier	table		2946585	1					
ANR	2946820	ExpressionStatement	buf += buf_size / avctx -> channels	71:16:1426:1459	2946585	1	True				
ANR	2946821	AssignmentExpression	buf += buf_size / avctx -> channels		2946585	0		+=			
ANR	2946822	Identifier	buf		2946585	0					
ANR	2946823	MultiplicativeExpression	buf_size / avctx -> channels		2946585	1		/			
ANR	2946824	Identifier	buf_size		2946585	0					
ANR	2946825	PtrMemberAccess	avctx -> channels		2946585	1					
ANR	2946826	Identifier	avctx		2946585	0					
ANR	2946827	Identifier	channels		2946585	1					
ANR	2946828	ExpressionStatement	dst += n / avctx -> channels - 1	73:16:1478:1508	2946585	2	True				
ANR	2946829	AssignmentExpression	dst += n / avctx -> channels - 1		2946585	0		+=			
ANR	2946830	Identifier	dst		2946585	0					
ANR	2946831	AdditiveExpression	n / avctx -> channels - 1		2946585	1		-			
ANR	2946832	MultiplicativeExpression	n / avctx -> channels		2946585	0		/			
ANR	2946833	Identifier	n		2946585	0					
ANR	2946834	PtrMemberAccess	avctx -> channels		2946585	1					
ANR	2946835	Identifier	avctx		2946585	0					
ANR	2946836	Identifier	channels		2946585	1					
ANR	2946837	PrimaryExpression	1		2946585	1					
ANR	2946838	ElseStatement	else		2946585	0					
ANR	2946839	CompoundStatement		73:15:1400:1400	2946585	0					
ANR	2946840	ExpressionStatement	deinterleaved_samples = avpkt -> data	79:12:1556:1591	2946585	0	True				
ANR	2946841	AssignmentExpression	deinterleaved_samples = avpkt -> data		2946585	0		=			
ANR	2946842	Identifier	deinterleaved_samples		2946585	0					
ANR	2946843	PtrMemberAccess	avpkt -> data		2946585	1					
ANR	2946844	Identifier	avpkt		2946585	0					
ANR	2946845	Identifier	data		2946585	1					
ANR	2946846	IfStatement	if ( avctx -> channels == 2 )		2946585	4					
ANR	2946847	Condition	avctx -> channels == 2	85:12:1619:1638	2946585	0	True				
ANR	2946848	EqualityExpression	avctx -> channels == 2		2946585	0		==			
ANR	2946849	PtrMemberAccess	avctx -> channels		2946585	0					
ANR	2946850	Identifier	avctx		2946585	0					
ANR	2946851	Identifier	channels		2946585	1					
ANR	2946852	PrimaryExpression	2		2946585	1					
ANR	2946853	ExpressionStatement	"interleave_stereo ( esc -> samples , deinterleaved_samples , esc -> samples_size )"	87:12:1654:1727	2946585	1	True				
ANR	2946854	CallExpression	"interleave_stereo ( esc -> samples , deinterleaved_samples , esc -> samples_size )"		2946585	0					
ANR	2946855	Callee	interleave_stereo		2946585	0					
ANR	2946856	Identifier	interleave_stereo		2946585	0					
ANR	2946857	ArgumentList	esc -> samples		2946585	1					
ANR	2946858	Argument	esc -> samples		2946585	0					
ANR	2946859	PtrMemberAccess	esc -> samples		2946585	0					
ANR	2946860	Identifier	esc		2946585	0					
ANR	2946861	Identifier	samples		2946585	1					
ANR	2946862	Argument	deinterleaved_samples		2946585	1					
ANR	2946863	Identifier	deinterleaved_samples		2946585	0					
ANR	2946864	Argument	esc -> samples_size		2946585	2					
ANR	2946865	PtrMemberAccess	esc -> samples_size		2946585	0					
ANR	2946866	Identifier	esc		2946585	0					
ANR	2946867	Identifier	samples_size		2946585	1					
ANR	2946868	ElseStatement	else		2946585	0					
ANR	2946869	ExpressionStatement	"memcpy ( esc -> samples , deinterleaved_samples , esc -> samples_size )"	91:12:1756:1818	2946585	0	True				
ANR	2946870	CallExpression	"memcpy ( esc -> samples , deinterleaved_samples , esc -> samples_size )"		2946585	0					
ANR	2946871	Callee	memcpy		2946585	0					
ANR	2946872	Identifier	memcpy		2946585	0					
ANR	2946873	ArgumentList	esc -> samples		2946585	1					
ANR	2946874	Argument	esc -> samples		2946585	0					
ANR	2946875	PtrMemberAccess	esc -> samples		2946585	0					
ANR	2946876	Identifier	esc		2946585	0					
ANR	2946877	Identifier	samples		2946585	1					
ANR	2946878	Argument	deinterleaved_samples		2946585	1					
ANR	2946879	Identifier	deinterleaved_samples		2946585	0					
ANR	2946880	Argument	esc -> samples_size		2946585	2					
ANR	2946881	PtrMemberAccess	esc -> samples_size		2946585	0					
ANR	2946882	Identifier	esc		2946585	0					
ANR	2946883	Identifier	samples_size		2946585	1					
ANR	2946884	ExpressionStatement	av_freep ( & p )	93:8:1829:1841	2946585	5	True				
ANR	2946885	CallExpression	av_freep ( & p )		2946585	0					
ANR	2946886	Callee	av_freep		2946585	0					
ANR	2946887	Identifier	av_freep		2946585	0					
ANR	2946888	ArgumentList	& p		2946585	1					
ANR	2946889	Argument	& p		2946585	0					
ANR	2946890	UnaryOperationExpression	& p		2946585	0					
ANR	2946891	UnaryOperator	&		2946585	0					
ANR	2946892	Identifier	p		2946585	1					
ANR	2946893	ExpressionStatement	av_assert1 ( ! ( esc -> samples_size % avctx -> channels || esc -> samples_idx % avctx -> channels ) )	101:4:1886:1974	2946585	4	True				
ANR	2946894	CallExpression	av_assert1 ( ! ( esc -> samples_size % avctx -> channels || esc -> samples_idx % avctx -> channels ) )		2946585	0					
ANR	2946895	Callee	av_assert1		2946585	0					
ANR	2946896	Identifier	av_assert1		2946585	0					
ANR	2946897	ArgumentList	! ( esc -> samples_size % avctx -> channels || esc -> samples_idx % avctx -> channels )		2946585	1					
ANR	2946898	Argument	! ( esc -> samples_size % avctx -> channels || esc -> samples_idx % avctx -> channels )		2946585	0					
ANR	2946899	UnaryOperationExpression	! ( esc -> samples_size % avctx -> channels || esc -> samples_idx % avctx -> channels )		2946585	0					
ANR	2946900	UnaryOperator	!		2946585	0					
ANR	2946901	OrExpression	esc -> samples_size % avctx -> channels || esc -> samples_idx % avctx -> channels		2946585	1		||			
ANR	2946902	MultiplicativeExpression	esc -> samples_size % avctx -> channels		2946585	0		%			
ANR	2946903	PtrMemberAccess	esc -> samples_size		2946585	0					
ANR	2946904	Identifier	esc		2946585	0					
ANR	2946905	Identifier	samples_size		2946585	1					
ANR	2946906	PtrMemberAccess	avctx -> channels		2946585	1					
ANR	2946907	Identifier	avctx		2946585	0					
ANR	2946908	Identifier	channels		2946585	1					
ANR	2946909	MultiplicativeExpression	esc -> samples_idx % avctx -> channels		2946585	1		%			
ANR	2946910	PtrMemberAccess	esc -> samples_idx		2946585	0					
ANR	2946911	Identifier	esc		2946585	0					
ANR	2946912	Identifier	samples_idx		2946585	1					
ANR	2946913	PtrMemberAccess	avctx -> channels		2946585	1					
ANR	2946914	Identifier	avctx		2946585	0					
ANR	2946915	Identifier	channels		2946585	1					
ANR	2946916	ExpressionStatement	"esc -> frame . nb_samples = FFMIN ( MAX_FRAME_SIZE , esc -> samples_size - esc -> samples_idx ) / avctx -> channels"	103:4:1981:2083	2946585	5	True				
ANR	2946917	AssignmentExpression	"esc -> frame . nb_samples = FFMIN ( MAX_FRAME_SIZE , esc -> samples_size - esc -> samples_idx ) / avctx -> channels"		2946585	0		=			
ANR	2946918	MemberAccess	esc -> frame . nb_samples		2946585	0					
ANR	2946919	PtrMemberAccess	esc -> frame		2946585	0					
ANR	2946920	Identifier	esc		2946585	0					
ANR	2946921	Identifier	frame		2946585	1					
ANR	2946922	Identifier	nb_samples		2946585	1					
ANR	2946923	MultiplicativeExpression	"FFMIN ( MAX_FRAME_SIZE , esc -> samples_size - esc -> samples_idx ) / avctx -> channels"		2946585	1		/			
ANR	2946924	CallExpression	"FFMIN ( MAX_FRAME_SIZE , esc -> samples_size - esc -> samples_idx )"		2946585	0					
ANR	2946925	Callee	FFMIN		2946585	0					
ANR	2946926	Identifier	FFMIN		2946585	0					
ANR	2946927	ArgumentList	MAX_FRAME_SIZE		2946585	1					
ANR	2946928	Argument	MAX_FRAME_SIZE		2946585	0					
ANR	2946929	Identifier	MAX_FRAME_SIZE		2946585	0					
ANR	2946930	Argument	esc -> samples_size - esc -> samples_idx		2946585	1					
ANR	2946931	AdditiveExpression	esc -> samples_size - esc -> samples_idx		2946585	0		-			
ANR	2946932	PtrMemberAccess	esc -> samples_size		2946585	0					
ANR	2946933	Identifier	esc		2946585	0					
ANR	2946934	Identifier	samples_size		2946585	1					
ANR	2946935	PtrMemberAccess	esc -> samples_idx		2946585	1					
ANR	2946936	Identifier	esc		2946585	0					
ANR	2946937	Identifier	samples_idx		2946585	1					
ANR	2946938	PtrMemberAccess	avctx -> channels		2946585	1					
ANR	2946939	Identifier	avctx		2946585	0					
ANR	2946940	Identifier	channels		2946585	1					
ANR	2946941	IfStatement	"if ( ( ret = avctx -> get_buffer ( avctx , & esc -> frame ) ) < 0 )"		2946585	6					
ANR	2946942	Condition	"( ret = avctx -> get_buffer ( avctx , & esc -> frame ) ) < 0"	105:8:2094:2142	2946585	0	True				
ANR	2946943	RelationalExpression	"( ret = avctx -> get_buffer ( avctx , & esc -> frame ) ) < 0"		2946585	0		<			
ANR	2946944	AssignmentExpression	"ret = avctx -> get_buffer ( avctx , & esc -> frame )"		2946585	0		=			
ANR	2946945	Identifier	ret		2946585	0					
ANR	2946946	CallExpression	"avctx -> get_buffer ( avctx , & esc -> frame )"		2946585	1					
ANR	2946947	Callee	avctx -> get_buffer		2946585	0					
ANR	2946948	PtrMemberAccess	avctx -> get_buffer		2946585	0					
ANR	2946949	Identifier	avctx		2946585	0					
ANR	2946950	Identifier	get_buffer		2946585	1					
ANR	2946951	ArgumentList	avctx		2946585	1					
ANR	2946952	Argument	avctx		2946585	0					
ANR	2946953	Identifier	avctx		2946585	0					
ANR	2946954	Argument	& esc -> frame		2946585	1					
ANR	2946955	UnaryOperationExpression	& esc -> frame		2946585	0					
ANR	2946956	UnaryOperator	&		2946585	0					
ANR	2946957	PtrMemberAccess	esc -> frame		2946585	1					
ANR	2946958	Identifier	esc		2946585	0					
ANR	2946959	Identifier	frame		2946585	1					
ANR	2946960	PrimaryExpression	0		2946585	1					
ANR	2946961	CompoundStatement		101:59:2004:2004	2946585	1					
ANR	2946962	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	107:8:2156:2208	2946585	0	True				
ANR	2946963	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		2946585	0					
ANR	2946964	Callee	av_log		2946585	0					
ANR	2946965	Identifier	av_log		2946585	0					
ANR	2946966	ArgumentList	avctx		2946585	1					
ANR	2946967	Argument	avctx		2946585	0					
ANR	2946968	Identifier	avctx		2946585	0					
ANR	2946969	Argument	AV_LOG_ERROR		2946585	1					
ANR	2946970	Identifier	AV_LOG_ERROR		2946585	0					
ANR	2946971	Argument	"""get_buffer() failed\\n"""		2946585	2					
ANR	2946972	PrimaryExpression	"""get_buffer() failed\\n"""		2946585	0					
ANR	2946973	ReturnStatement	return ret ;	109:8:2219:2229	2946585	1	True				
ANR	2946974	Identifier	ret		2946585	0					
ANR	2946975	ExpressionStatement	* got_frame_ptr = 1	115:4:2245:2265	2946585	7	True				
ANR	2946976	AssignmentExpression	* got_frame_ptr = 1		2946585	0		=			
ANR	2946977	UnaryOperationExpression	* got_frame_ptr		2946585	0					
ANR	2946978	UnaryOperator	*		2946585	0					
ANR	2946979	Identifier	got_frame_ptr		2946585	1					
ANR	2946980	PrimaryExpression	1		2946585	1					
ANR	2946981	ExpressionStatement	* ( AVFrame * ) data = esc -> frame	117:4:2272:2301	2946585	8	True				
ANR	2946982	AssignmentExpression	* ( AVFrame * ) data = esc -> frame		2946585	0		=			
ANR	2946983	UnaryOperationExpression	* ( AVFrame * ) data		2946585	0					
ANR	2946984	UnaryOperator	*		2946585	0					
ANR	2946985	CastExpression	( AVFrame * ) data		2946585	1					
ANR	2946986	CastTarget	AVFrame *		2946585	0					
ANR	2946987	Identifier	data		2946585	1					
ANR	2946988	PtrMemberAccess	esc -> frame		2946585	1					
ANR	2946989	Identifier	esc		2946585	0					
ANR	2946990	Identifier	frame		2946585	1					
ANR	2946991	ExpressionStatement	dst = esc -> frame . data [ 0 ]	121:4:2310:2334	2946585	9	True				
ANR	2946992	AssignmentExpression	dst = esc -> frame . data [ 0 ]		2946585	0		=			
ANR	2946993	Identifier	dst		2946585	0					
ANR	2946994	ArrayIndexing	esc -> frame . data [ 0 ]		2946585	1					
ANR	2946995	MemberAccess	esc -> frame . data		2946585	0					
ANR	2946996	PtrMemberAccess	esc -> frame		2946585	0					
ANR	2946997	Identifier	esc		2946585	0					
ANR	2946998	Identifier	frame		2946585	1					
ANR	2946999	Identifier	data		2946585	1					
ANR	2947000	PrimaryExpression	0		2946585	1					
ANR	2947001	ExpressionStatement	src = esc -> samples + esc -> samples_idx	123:4:2341:2378	2946585	10	True				
ANR	2947002	AssignmentExpression	src = esc -> samples + esc -> samples_idx		2946585	0		=			
ANR	2947003	Identifier	src		2946585	0					
ANR	2947004	AdditiveExpression	esc -> samples + esc -> samples_idx		2946585	1		+			
ANR	2947005	PtrMemberAccess	esc -> samples		2946585	0					
ANR	2947006	Identifier	esc		2946585	0					
ANR	2947007	Identifier	samples		2946585	1					
ANR	2947008	PtrMemberAccess	esc -> samples_idx		2946585	1					
ANR	2947009	Identifier	esc		2946585	0					
ANR	2947010	Identifier	samples_idx		2946585	1					
ANR	2947011	ExpressionStatement	out_data_size = esc -> frame . nb_samples * avctx -> channels	125:4:2385:2440	2946585	11	True				
ANR	2947012	AssignmentExpression	out_data_size = esc -> frame . nb_samples * avctx -> channels		2946585	0		=			
ANR	2947013	Identifier	out_data_size		2946585	0					
ANR	2947014	MultiplicativeExpression	esc -> frame . nb_samples * avctx -> channels		2946585	1		*			
ANR	2947015	MemberAccess	esc -> frame . nb_samples		2946585	0					
ANR	2947016	PtrMemberAccess	esc -> frame		2946585	0					
ANR	2947017	Identifier	esc		2946585	0					
ANR	2947018	Identifier	frame		2946585	1					
ANR	2947019	Identifier	nb_samples		2946585	1					
ANR	2947020	PtrMemberAccess	avctx -> channels		2946585	1					
ANR	2947021	Identifier	avctx		2946585	0					
ANR	2947022	Identifier	channels		2946585	1					
ANR	2947023	ForStatement	for ( n = out_data_size ; n > 0 ; n -- )		2946585	12					
ANR	2947024	ForInit	n = out_data_size ;	127:9:2452:2469	2946585	0	True				
ANR	2947025	AssignmentExpression	n = out_data_size		2946585	0		=			
ANR	2947026	Identifier	n		2946585	0					
ANR	2947027	Identifier	out_data_size		2946585	1					
ANR	2947028	Condition	n > 0	127:28:2471:2475	2946585	1	True				
ANR	2947029	RelationalExpression	n > 0		2946585	0		>			
ANR	2947030	Identifier	n		2946585	0					
ANR	2947031	PrimaryExpression	0		2946585	1					
ANR	2947032	PostIncDecOperationExpression	n --	127:35:2478:2480	2946585	2	True				
ANR	2947033	Identifier	n		2946585	0					
ANR	2947034	IncDec	--		2946585	1					
ANR	2947035	ExpressionStatement	* dst ++ = * src ++ + 128	129:8:2492:2513	2946585	3	True				
ANR	2947036	AssignmentExpression	* dst ++ = * src ++ + 128		2946585	0		=			
ANR	2947037	UnaryOperationExpression	* dst ++		2946585	0					
ANR	2947038	UnaryOperator	*		2946585	0					
ANR	2947039	PostIncDecOperationExpression	dst ++		2946585	1					
ANR	2947040	Identifier	dst		2946585	0					
ANR	2947041	IncDec	++		2946585	1					
ANR	2947042	AdditiveExpression	* src ++ + 128		2946585	1		+			
ANR	2947043	UnaryOperationExpression	* src ++		2946585	0					
ANR	2947044	UnaryOperator	*		2946585	0					
ANR	2947045	PostIncDecOperationExpression	src ++		2946585	1					
ANR	2947046	Identifier	src		2946585	0					
ANR	2947047	IncDec	++		2946585	1					
ANR	2947048	PrimaryExpression	128		2946585	1					
ANR	2947049	ExpressionStatement	esc -> samples_idx += out_data_size	131:4:2520:2553	2946585	13	True				
ANR	2947050	AssignmentExpression	esc -> samples_idx += out_data_size		2946585	0		+=			
ANR	2947051	PtrMemberAccess	esc -> samples_idx		2946585	0					
ANR	2947052	Identifier	esc		2946585	0					
ANR	2947053	Identifier	samples_idx		2946585	1					
ANR	2947054	Identifier	out_data_size		2946585	1					
ANR	2947055	ReturnStatement	return esc -> table ? ( avctx -> frame_number == 0 ) * 2 + out_data_size / 2 : out_data_size ;	135:4:2562:2664	2946585	14	True				
ANR	2947056	ConditionalExpression	esc -> table ? ( avctx -> frame_number == 0 ) * 2 + out_data_size / 2 : out_data_size		2946585	0					
ANR	2947057	Condition	esc -> table		2946585	0					
ANR	2947058	PtrMemberAccess	esc -> table		2946585	0					
ANR	2947059	Identifier	esc		2946585	0					
ANR	2947060	Identifier	table		2946585	1					
ANR	2947061	AdditiveExpression	( avctx -> frame_number == 0 ) * 2 + out_data_size / 2		2946585	1		+			
ANR	2947062	MultiplicativeExpression	( avctx -> frame_number == 0 ) * 2		2946585	0		*			
ANR	2947063	EqualityExpression	avctx -> frame_number == 0		2946585	0		==			
ANR	2947064	PtrMemberAccess	avctx -> frame_number		2946585	0					
ANR	2947065	Identifier	avctx		2946585	0					
ANR	2947066	Identifier	frame_number		2946585	1					
ANR	2947067	PrimaryExpression	0		2946585	1					
ANR	2947068	PrimaryExpression	2		2946585	1					
ANR	2947069	MultiplicativeExpression	out_data_size / 2		2946585	1		/			
ANR	2947070	Identifier	out_data_size		2946585	0					
ANR	2947071	PrimaryExpression	2		2946585	1					
ANR	2947072	Identifier	out_data_size		2946585	2					
ANR	2947073	ReturnType	static int		2946585	1					
ANR	2947074	Identifier	eightsvx_decode_frame		2946585	2					
ANR	2947075	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		2946585	3					
ANR	2947076	Parameter	AVCodecContext * avctx	1:33:33:53	2946585	0	True				
ANR	2947077	ParameterType	AVCodecContext *		2946585	0					
ANR	2947078	Identifier	avctx		2946585	1					
ANR	2947079	Parameter	void * data	1:56:56:65	2946585	1	True				
ANR	2947080	ParameterType	void *		2946585	0					
ANR	2947081	Identifier	data		2946585	1					
ANR	2947082	Parameter	int * got_frame_ptr	3:33:102:119	2946585	2	True				
ANR	2947083	ParameterType	int *		2946585	0					
ANR	2947084	Identifier	got_frame_ptr		2946585	1					
ANR	2947085	Parameter	AVPacket * avpkt	3:53:122:136	2946585	3	True				
ANR	2947086	ParameterType	AVPacket *		2946585	0					
ANR	2947087	Identifier	avpkt		2946585	1					
ANR	2947088	CFGEntryNode	ENTRY		2946585		True				
ANR	2947089	CFGExitNode	EXIT		2946585		True				
ANR	2947090	Symbol	av_malloc		2946585						
ANR	2947091	Symbol	ENOMEM		2946585						
ANR	2947092	Symbol	data		2946585						
ANR	2947093	Symbol	esc -> frame		2946585						
ANR	2947094	Symbol	FFMIN		2946585						
ANR	2947095	Symbol	got_frame_ptr		2946585						
ANR	2947096	Symbol	avpkt		2946585						
ANR	2947097	Symbol	avctx -> channels		2946585						
ANR	2947098	Symbol	* esc -> frame . data		2946585						
ANR	2947099	Symbol	& esc -> frame		2946585						
ANR	2947100	Symbol	ret		2946585						
ANR	2947101	Symbol	* esc		2946585						
ANR	2947102	Symbol	* buf		2946585						
ANR	2947103	Symbol	NULL		2946585						
ANR	2947104	Symbol	esc -> table		2946585						
ANR	2947105	Symbol	buf_size		2946585						
ANR	2947106	Symbol	av_mallocz		2946585						
ANR	2947107	Symbol	esc -> frame . data		2946585						
ANR	2947108	Symbol	* avctx		2946585						
ANR	2947109	Symbol	* dst ++		2946585						
ANR	2947110	Symbol	* src ++		2946585						
ANR	2947111	Symbol	avpkt -> data		2946585						
ANR	2947112	Symbol	esc -> frame . nb_samples		2946585						
ANR	2947113	Symbol	dst		2946585						
ANR	2947114	Symbol	* * esc		2946585						
ANR	2947115	Symbol	esc -> samples		2946585						
ANR	2947116	Symbol	avpkt -> size		2946585						
ANR	2947117	Symbol	avctx -> frame_number		2946585						
ANR	2947118	Symbol	avctx		2946585						
ANR	2947119	Symbol	deinterleaved_samples		2946585						
ANR	2947120	Symbol	esc -> samples_size		2946585						
ANR	2947121	Symbol	* avpkt		2946585						
ANR	2947122	Symbol	AV_LOG_ERROR		2946585						
ANR	2947123	Symbol	avctx -> get_buffer		2946585						
ANR	2947124	Symbol	src		2946585						
ANR	2947125	Symbol	* got_frame_ptr		2946585						
ANR	2947126	Symbol	i		2946585						
ANR	2947127	Symbol	avctx -> priv_data		2946585						
ANR	2947128	Symbol	n		2946585						
ANR	2947129	Symbol	* esc -> frame		2946585						
ANR	2947130	Symbol	p		2946585						
ANR	2947131	Symbol	EINVAL		2946585						
ANR	2947132	Symbol	esc -> samples_idx		2946585						
ANR	2947133	Symbol	buf		2946585						
ANR	2947134	Symbol	esc		2946585						
ANR	2947135	Symbol	& p		2946585						
ANR	2947136	Symbol	MAX_FRAME_SIZE		2946585						
ANR	2947137	Symbol	AVERROR		2946585						
ANR	2947138	Symbol	* ( AVFrame * ) data		2946585						
ANR	2947139	Symbol	out_data_size		2946585						
ANR	2947140	Symbol	* data		2946585						
