command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3325030	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_h264_check_intra_pred_mode_01_0.c								
ANR	3325031	Function	ff_h264_check_intra_pred_mode	1:0:0:1192							
ANR	3325032	FunctionDef	"ff_h264_check_intra_pred_mode (H264Context * h , int mode)"		3325031	0					
ANR	3325033	CompoundStatement		1:59:59:1192	3325031	0					
ANR	3325034	Statement	MpegEncContext	3:4:66:79	3325031	0	True				
ANR	3325035	Statement	*	3:19:81:81	3325031	1	True				
ANR	3325036	Statement	const	3:21:83:87	3325031	2	True				
ANR	3325037	ExpressionStatement	s = & h -> s	3:27:89:98	3325031	3	True				
ANR	3325038	AssignmentExpression	s = & h -> s		3325031	0		=			
ANR	3325039	Identifier	s		3325031	0					
ANR	3325040	UnaryOperationExpression	& h -> s		3325031	1					
ANR	3325041	UnaryOperator	&		3325031	0					
ANR	3325042	PtrMemberAccess	h -> s		3325031	1					
ANR	3325043	Identifier	h		3325031	0					
ANR	3325044	Identifier	s		3325031	1					
ANR	3325045	Statement	static	5:4:105:110	3325031	4	True				
ANR	3325046	IdentifierDeclStatement	"const int8_t top [ 7 ] = { LEFT_DC_PRED8x8 , 1 , - 1 , - 1 } ;"	5:11:112:160	3325031	5	True				
ANR	3325047	IdentifierDecl	"top [ 7 ] = { LEFT_DC_PRED8x8 , 1 , - 1 , - 1 }"		3325031	0					
ANR	3325048	IdentifierDeclType	const int8_t [ 7 ]		3325031	0					
ANR	3325049	Identifier	top		3325031	1					
ANR	3325050	PrimaryExpression	7		3325031	2					
ANR	3325051	AssignmentExpression	"top [ 7 ] = { LEFT_DC_PRED8x8 , 1 , - 1 , - 1 }"		3325031	3		=			
ANR	3325052	Identifier	top		3325031	0					
ANR	3325053	InitializerList	LEFT_DC_PRED8x8		3325031	1					
ANR	3325054	Identifier	LEFT_DC_PRED8x8		3325031	0					
ANR	3325055	PrimaryExpression	1		3325031	1					
ANR	3325056	UnaryOperationExpression	- 1		3325031	2					
ANR	3325057	UnaryOperator	-		3325031	0					
ANR	3325058	PrimaryExpression	1		3325031	1					
ANR	3325059	UnaryOperationExpression	- 1		3325031	3					
ANR	3325060	UnaryOperator	-		3325031	0					
ANR	3325061	PrimaryExpression	1		3325031	1					
ANR	3325062	Statement	static	7:4:167:172	3325031	6	True				
ANR	3325063	IdentifierDeclStatement	"const int8_t left [ 7 ] = { TOP_DC_PRED8x8 , - 1 , 2 , - 1 , DC_128_PRED8x8 } ;"	7:11:174:237	3325031	7	True				
ANR	3325064	IdentifierDecl	"left [ 7 ] = { TOP_DC_PRED8x8 , - 1 , 2 , - 1 , DC_128_PRED8x8 }"		3325031	0					
ANR	3325065	IdentifierDeclType	const int8_t [ 7 ]		3325031	0					
ANR	3325066	Identifier	left		3325031	1					
ANR	3325067	PrimaryExpression	7		3325031	2					
ANR	3325068	AssignmentExpression	"left [ 7 ] = { TOP_DC_PRED8x8 , - 1 , 2 , - 1 , DC_128_PRED8x8 }"		3325031	3		=			
ANR	3325069	Identifier	left		3325031	0					
ANR	3325070	InitializerList	TOP_DC_PRED8x8		3325031	1					
ANR	3325071	Identifier	TOP_DC_PRED8x8		3325031	0					
ANR	3325072	UnaryOperationExpression	- 1		3325031	1					
ANR	3325073	UnaryOperator	-		3325031	0					
ANR	3325074	PrimaryExpression	1		3325031	1					
ANR	3325075	PrimaryExpression	2		3325031	2					
ANR	3325076	UnaryOperationExpression	- 1		3325031	3					
ANR	3325077	UnaryOperator	-		3325031	0					
ANR	3325078	PrimaryExpression	1		3325031	1					
ANR	3325079	Identifier	DC_128_PRED8x8		3325031	4					
ANR	3325080	IfStatement	if ( mode > 6U )		3325031	8					
ANR	3325081	Condition	mode > 6U	11:7:249:257	3325031	0	True				
ANR	3325082	RelationalExpression	mode > 6U		3325031	0		>			
ANR	3325083	Identifier	mode		3325031	0					
ANR	3325084	PrimaryExpression	6U		3325031	1					
ANR	3325085	CompoundStatement		11:18:200:200	3325031	1					
ANR	3325086	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""out of range intra chroma pred mode at %d %d\\n"" , s -> mb_x , s -> mb_y )"	13:8:271:371	3325031	0	True				
ANR	3325087	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""out of range intra chroma pred mode at %d %d\\n"" , s -> mb_x , s -> mb_y )"		3325031	0					
ANR	3325088	Callee	av_log		3325031	0					
ANR	3325089	Identifier	av_log		3325031	0					
ANR	3325090	ArgumentList	h -> s . avctx		3325031	1					
ANR	3325091	Argument	h -> s . avctx		3325031	0					
ANR	3325092	MemberAccess	h -> s . avctx		3325031	0					
ANR	3325093	PtrMemberAccess	h -> s		3325031	0					
ANR	3325094	Identifier	h		3325031	0					
ANR	3325095	Identifier	s		3325031	1					
ANR	3325096	Identifier	avctx		3325031	1					
ANR	3325097	Argument	AV_LOG_ERROR		3325031	1					
ANR	3325098	Identifier	AV_LOG_ERROR		3325031	0					
ANR	3325099	Argument	"""out of range intra chroma pred mode at %d %d\\n"""		3325031	2					
ANR	3325100	PrimaryExpression	"""out of range intra chroma pred mode at %d %d\\n"""		3325031	0					
ANR	3325101	Argument	s -> mb_x		3325031	3					
ANR	3325102	PtrMemberAccess	s -> mb_x		3325031	0					
ANR	3325103	Identifier	s		3325031	0					
ANR	3325104	Identifier	mb_x		3325031	1					
ANR	3325105	Argument	s -> mb_y		3325031	4					
ANR	3325106	PtrMemberAccess	s -> mb_y		3325031	0					
ANR	3325107	Identifier	s		3325031	0					
ANR	3325108	Identifier	mb_y		3325031	1					
ANR	3325109	ReturnStatement	return - 1 ;	15:8:382:391	3325031	1	True				
ANR	3325110	UnaryOperationExpression	- 1		3325031	0					
ANR	3325111	UnaryOperator	-		3325031	0					
ANR	3325112	PrimaryExpression	1		3325031	1					
ANR	3325113	IfStatement	if ( ! ( h -> top_samples_available & 0x8000 ) )		3325031	9					
ANR	3325114	Condition	! ( h -> top_samples_available & 0x8000 )	21:7:410:443	3325031	0	True				
ANR	3325115	UnaryOperationExpression	! ( h -> top_samples_available & 0x8000 )		3325031	0					
ANR	3325116	UnaryOperator	!		3325031	0					
ANR	3325117	BitAndExpression	h -> top_samples_available & 0x8000		3325031	1		&			
ANR	3325118	PtrMemberAccess	h -> top_samples_available		3325031	0					
ANR	3325119	Identifier	h		3325031	0					
ANR	3325120	Identifier	top_samples_available		3325031	1					
ANR	3325121	PrimaryExpression	0x8000		3325031	1					
ANR	3325122	CompoundStatement		21:42:385:385	3325031	1					
ANR	3325123	ExpressionStatement	mode = top [ mode ]	23:8:456:473	3325031	0	True				
ANR	3325124	AssignmentExpression	mode = top [ mode ]		3325031	0		=			
ANR	3325125	Identifier	mode		3325031	0					
ANR	3325126	ArrayIndexing	top [ mode ]		3325031	1					
ANR	3325127	Identifier	top		3325031	0					
ANR	3325128	Identifier	mode		3325031	1					
ANR	3325129	IfStatement	if ( mode < 0 )		3325031	1					
ANR	3325130	Condition	mode < 0	25:11:487:492	3325031	0	True				
ANR	3325131	RelationalExpression	mode < 0		3325031	0		<			
ANR	3325132	Identifier	mode		3325031	0					
ANR	3325133	PrimaryExpression	0		3325031	1					
ANR	3325134	CompoundStatement		25:18:434:434	3325031	1					
ANR	3325135	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""top block unavailable for requested intra mode at %d %d\\n"" , s -> mb_x , s -> mb_y )"	27:12:509:620	3325031	0	True				
ANR	3325136	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""top block unavailable for requested intra mode at %d %d\\n"" , s -> mb_x , s -> mb_y )"		3325031	0					
ANR	3325137	Callee	av_log		3325031	0					
ANR	3325138	Identifier	av_log		3325031	0					
ANR	3325139	ArgumentList	h -> s . avctx		3325031	1					
ANR	3325140	Argument	h -> s . avctx		3325031	0					
ANR	3325141	MemberAccess	h -> s . avctx		3325031	0					
ANR	3325142	PtrMemberAccess	h -> s		3325031	0					
ANR	3325143	Identifier	h		3325031	0					
ANR	3325144	Identifier	s		3325031	1					
ANR	3325145	Identifier	avctx		3325031	1					
ANR	3325146	Argument	AV_LOG_ERROR		3325031	1					
ANR	3325147	Identifier	AV_LOG_ERROR		3325031	0					
ANR	3325148	Argument	"""top block unavailable for requested intra mode at %d %d\\n"""		3325031	2					
ANR	3325149	PrimaryExpression	"""top block unavailable for requested intra mode at %d %d\\n"""		3325031	0					
ANR	3325150	Argument	s -> mb_x		3325031	3					
ANR	3325151	PtrMemberAccess	s -> mb_x		3325031	0					
ANR	3325152	Identifier	s		3325031	0					
ANR	3325153	Identifier	mb_x		3325031	1					
ANR	3325154	Argument	s -> mb_y		3325031	4					
ANR	3325155	PtrMemberAccess	s -> mb_y		3325031	0					
ANR	3325156	Identifier	s		3325031	0					
ANR	3325157	Identifier	mb_y		3325031	1					
ANR	3325158	ReturnStatement	return - 1 ;	29:12:635:644	3325031	1	True				
ANR	3325159	UnaryOperationExpression	- 1		3325031	0					
ANR	3325160	UnaryOperator	-		3325031	0					
ANR	3325161	PrimaryExpression	1		3325031	1					
ANR	3325162	IfStatement	if ( ( h -> left_samples_available & 0x8080 ) != 0x8080 )		3325031	10					
ANR	3325163	Condition	( h -> left_samples_available & 0x8080 ) != 0x8080	37:7:674:717	3325031	0	True				
ANR	3325164	EqualityExpression	( h -> left_samples_available & 0x8080 ) != 0x8080		3325031	0		!=			
ANR	3325165	BitAndExpression	h -> left_samples_available & 0x8080		3325031	0		&			
ANR	3325166	PtrMemberAccess	h -> left_samples_available		3325031	0					
ANR	3325167	Identifier	h		3325031	0					
ANR	3325168	Identifier	left_samples_available		3325031	1					
ANR	3325169	PrimaryExpression	0x8080		3325031	1					
ANR	3325170	PrimaryExpression	0x8080		3325031	1					
ANR	3325171	CompoundStatement		37:52:659:659	3325031	1					
ANR	3325172	ExpressionStatement	mode = left [ mode ]	39:8:730:748	3325031	0	True				
ANR	3325173	AssignmentExpression	mode = left [ mode ]		3325031	0		=			
ANR	3325174	Identifier	mode		3325031	0					
ANR	3325175	ArrayIndexing	left [ mode ]		3325031	1					
ANR	3325176	Identifier	left		3325031	0					
ANR	3325177	Identifier	mode		3325031	1					
ANR	3325178	IfStatement	if ( h -> left_samples_available & 0x8080 )		3325031	1					
ANR	3325179	Condition	h -> left_samples_available & 0x8080	41:11:762:793	3325031	0	True				
ANR	3325180	BitAndExpression	h -> left_samples_available & 0x8080		3325031	0		&			
ANR	3325181	PtrMemberAccess	h -> left_samples_available		3325031	0					
ANR	3325182	Identifier	h		3325031	0					
ANR	3325183	Identifier	left_samples_available		3325031	1					
ANR	3325184	PrimaryExpression	0x8080		3325031	1					
ANR	3325185	CompoundStatement		41:44:735:735	3325031	1					
ANR	3325186	ExpressionStatement	mode = ALZHEIMER_DC_L0T_PRED8x8 + ( ! ( h -> left_samples_available & 0x8000 ) ) + 2 * ( mode == DC_128_PRED8x8 )	43:12:869:968	3325031	0	True				
ANR	3325187	AssignmentExpression	mode = ALZHEIMER_DC_L0T_PRED8x8 + ( ! ( h -> left_samples_available & 0x8000 ) ) + 2 * ( mode == DC_128_PRED8x8 )		3325031	0		=			
ANR	3325188	Identifier	mode		3325031	0					
ANR	3325189	AdditiveExpression	ALZHEIMER_DC_L0T_PRED8x8 + ( ! ( h -> left_samples_available & 0x8000 ) ) + 2 * ( mode == DC_128_PRED8x8 )		3325031	1		+			
ANR	3325190	Identifier	ALZHEIMER_DC_L0T_PRED8x8		3325031	0					
ANR	3325191	AdditiveExpression	( ! ( h -> left_samples_available & 0x8000 ) ) + 2 * ( mode == DC_128_PRED8x8 )		3325031	1		+			
ANR	3325192	UnaryOperationExpression	! ( h -> left_samples_available & 0x8000 )		3325031	0					
ANR	3325193	UnaryOperator	!		3325031	0					
ANR	3325194	BitAndExpression	h -> left_samples_available & 0x8000		3325031	1		&			
ANR	3325195	PtrMemberAccess	h -> left_samples_available		3325031	0					
ANR	3325196	Identifier	h		3325031	0					
ANR	3325197	Identifier	left_samples_available		3325031	1					
ANR	3325198	PrimaryExpression	0x8000		3325031	1					
ANR	3325199	MultiplicativeExpression	2 * ( mode == DC_128_PRED8x8 )		3325031	1		*			
ANR	3325200	PrimaryExpression	2		3325031	0					
ANR	3325201	EqualityExpression	mode == DC_128_PRED8x8		3325031	1		==			
ANR	3325202	Identifier	mode		3325031	0					
ANR	3325203	Identifier	DC_128_PRED8x8		3325031	1					
ANR	3325204	IfStatement	if ( mode < 0 )		3325031	2					
ANR	3325205	Condition	mode < 0	47:11:993:998	3325031	0	True				
ANR	3325206	RelationalExpression	mode < 0		3325031	0		<			
ANR	3325207	Identifier	mode		3325031	0					
ANR	3325208	PrimaryExpression	0		3325031	1					
ANR	3325209	CompoundStatement		47:18:940:940	3325031	1					
ANR	3325210	ExpressionStatement	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""left block unavailable for requested intra mode at %d %d\\n"" , s -> mb_x , s -> mb_y )"	49:12:1015:1127	3325031	0	True				
ANR	3325211	CallExpression	"av_log ( h -> s . avctx , AV_LOG_ERROR , ""left block unavailable for requested intra mode at %d %d\\n"" , s -> mb_x , s -> mb_y )"		3325031	0					
ANR	3325212	Callee	av_log		3325031	0					
ANR	3325213	Identifier	av_log		3325031	0					
ANR	3325214	ArgumentList	h -> s . avctx		3325031	1					
ANR	3325215	Argument	h -> s . avctx		3325031	0					
ANR	3325216	MemberAccess	h -> s . avctx		3325031	0					
ANR	3325217	PtrMemberAccess	h -> s		3325031	0					
ANR	3325218	Identifier	h		3325031	0					
ANR	3325219	Identifier	s		3325031	1					
ANR	3325220	Identifier	avctx		3325031	1					
ANR	3325221	Argument	AV_LOG_ERROR		3325031	1					
ANR	3325222	Identifier	AV_LOG_ERROR		3325031	0					
ANR	3325223	Argument	"""left block unavailable for requested intra mode at %d %d\\n"""		3325031	2					
ANR	3325224	PrimaryExpression	"""left block unavailable for requested intra mode at %d %d\\n"""		3325031	0					
ANR	3325225	Argument	s -> mb_x		3325031	3					
ANR	3325226	PtrMemberAccess	s -> mb_x		3325031	0					
ANR	3325227	Identifier	s		3325031	0					
ANR	3325228	Identifier	mb_x		3325031	1					
ANR	3325229	Argument	s -> mb_y		3325031	4					
ANR	3325230	PtrMemberAccess	s -> mb_y		3325031	0					
ANR	3325231	Identifier	s		3325031	0					
ANR	3325232	Identifier	mb_y		3325031	1					
ANR	3325233	ReturnStatement	return - 1 ;	51:12:1142:1151	3325031	1	True				
ANR	3325234	UnaryOperationExpression	- 1		3325031	0					
ANR	3325235	UnaryOperator	-		3325031	0					
ANR	3325236	PrimaryExpression	1		3325031	1					
ANR	3325237	ReturnStatement	return mode ;	59:4:1178:1189	3325031	11	True				
ANR	3325238	Identifier	mode		3325031	0					
ANR	3325239	ReturnType	int		3325031	1					
ANR	3325240	Identifier	ff_h264_check_intra_pred_mode		3325031	2					
ANR	3325241	ParameterList	"H264Context * h , int mode"		3325031	3					
ANR	3325242	Parameter	H264Context * h	1:34:34:47	3325031	0	True				
ANR	3325243	ParameterType	H264Context *		3325031	0					
ANR	3325244	Identifier	h		3325031	1					
ANR	3325245	Parameter	int mode	1:50:50:57	3325031	1	True				
ANR	3325246	ParameterType	int		3325031	0					
ANR	3325247	Identifier	mode		3325031	1					
ANR	3325248	CFGEntryNode	ENTRY		3325031		True				
ANR	3325249	CFGExitNode	EXIT		3325031		True				
ANR	3325250	Symbol	LEFT_DC_PRED8x8		3325031						
ANR	3325251	Symbol	AV_LOG_ERROR		3325031						
ANR	3325252	Symbol	h		3325031						
ANR	3325253	Symbol	h -> s		3325031						
ANR	3325254	Symbol	ALZHEIMER_DC_L0T_PRED8x8		3325031						
ANR	3325255	Symbol	h -> s . avctx		3325031						
ANR	3325256	Symbol	s -> mb_x		3325031						
ANR	3325257	Symbol	s -> mb_y		3325031						
ANR	3325258	Symbol	mode		3325031						
ANR	3325259	Symbol	& h -> s		3325031						
ANR	3325260	Symbol	* h		3325031						
ANR	3325261	Symbol	h -> top_samples_available		3325031						
ANR	3325262	Symbol	s		3325031						
ANR	3325263	Symbol	top		3325031						
ANR	3325264	Symbol	left		3325031						
ANR	3325265	Symbol	h -> left_samples_available		3325031						
ANR	3325266	Symbol	* mode		3325031						
ANR	3325267	Symbol	TOP_DC_PRED8x8		3325031						
ANR	3325268	Symbol	* left		3325031						
ANR	3325269	Symbol	DC_128_PRED8x8		3325031						
ANR	3325270	Symbol	* s		3325031						
ANR	3325271	Symbol	* top		3325031						
