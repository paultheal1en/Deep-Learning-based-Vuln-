command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6311648	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_cube_1.c								
ANR	6311649	Function	parse_cube	1:0:0:2065							
ANR	6311650	FunctionDef	"parse_cube (AVFilterContext * ctx , FILE * f)"		6311649	0					
ANR	6311651	CompoundStatement		3:0:54:2065	6311649	0					
ANR	6311652	IdentifierDeclStatement	LUT3DContext * lut3d = ctx -> priv ;	5:4:61:92	6311649	0	True				
ANR	6311653	IdentifierDecl	* lut3d = ctx -> priv		6311649	0					
ANR	6311654	IdentifierDeclType	LUT3DContext *		6311649	0					
ANR	6311655	Identifier	lut3d		6311649	1					
ANR	6311656	AssignmentExpression	* lut3d = ctx -> priv		6311649	2		=			
ANR	6311657	Identifier	lut3d		6311649	0					
ANR	6311658	PtrMemberAccess	ctx -> priv		6311649	1					
ANR	6311659	Identifier	ctx		6311649	0					
ANR	6311660	Identifier	priv		6311649	1					
ANR	6311661	IdentifierDeclStatement	char line [ MAX_LINE_SIZE ] ;	7:4:99:123	6311649	1	True				
ANR	6311662	IdentifierDecl	line [ MAX_LINE_SIZE ]		6311649	0					
ANR	6311663	IdentifierDeclType	char [ MAX_LINE_SIZE ]		6311649	0					
ANR	6311664	Identifier	line		6311649	1					
ANR	6311665	Identifier	MAX_LINE_SIZE		6311649	2					
ANR	6311666	IdentifierDeclStatement	"float min [ 3 ] = { 0.0 , 0.0 , 0.0 } ;"	9:4:130:160	6311649	2	True				
ANR	6311667	IdentifierDecl	"min [ 3 ] = { 0.0 , 0.0 , 0.0 }"		6311649	0					
ANR	6311668	IdentifierDeclType	float [ 3 ]		6311649	0					
ANR	6311669	Identifier	min		6311649	1					
ANR	6311670	PrimaryExpression	3		6311649	2					
ANR	6311671	AssignmentExpression	"min [ 3 ] = { 0.0 , 0.0 , 0.0 }"		6311649	3		=			
ANR	6311672	Identifier	min		6311649	0					
ANR	6311673	InitializerList	0.0		6311649	1					
ANR	6311674	PrimaryExpression	0.0		6311649	0					
ANR	6311675	PrimaryExpression	0.0		6311649	1					
ANR	6311676	PrimaryExpression	0.0		6311649	2					
ANR	6311677	IdentifierDeclStatement	"float max [ 3 ] = { 1.0 , 1.0 , 1.0 } ;"	11:4:167:197	6311649	3	True				
ANR	6311678	IdentifierDecl	"max [ 3 ] = { 1.0 , 1.0 , 1.0 }"		6311649	0					
ANR	6311679	IdentifierDeclType	float [ 3 ]		6311649	0					
ANR	6311680	Identifier	max		6311649	1					
ANR	6311681	PrimaryExpression	3		6311649	2					
ANR	6311682	AssignmentExpression	"max [ 3 ] = { 1.0 , 1.0 , 1.0 }"		6311649	3		=			
ANR	6311683	Identifier	max		6311649	0					
ANR	6311684	InitializerList	1.0		6311649	1					
ANR	6311685	PrimaryExpression	1.0		6311649	0					
ANR	6311686	PrimaryExpression	1.0		6311649	1					
ANR	6311687	PrimaryExpression	1.0		6311649	2					
ANR	6311688	WhileStatement	"while ( fgets ( line , sizeof ( line ) , f ) )"		6311649	4					
ANR	6311689	Condition	"fgets ( line , sizeof ( line ) , f )"	15:11:213:240	6311649	0	True				
ANR	6311690	CallExpression	"fgets ( line , sizeof ( line ) , f )"		6311649	0					
ANR	6311691	Callee	fgets		6311649	0					
ANR	6311692	Identifier	fgets		6311649	0					
ANR	6311693	ArgumentList	line		6311649	1					
ANR	6311694	Argument	line		6311649	0					
ANR	6311695	Identifier	line		6311649	0					
ANR	6311696	Argument	sizeof ( line )		6311649	1					
ANR	6311697	SizeofExpression	sizeof ( line )		6311649	0					
ANR	6311698	Sizeof	sizeof		6311649	0					
ANR	6311699	SizeofOperand	line		6311649	1					
ANR	6311700	Argument	f		6311649	2					
ANR	6311701	Identifier	f		6311649	0					
ANR	6311702	CompoundStatement		13:41:188:188	6311649	1					
ANR	6311703	IfStatement	"if ( ! strncmp ( line , ""LUT_3D_SIZE "" , 12 ) )"		6311649	0					
ANR	6311704	Condition	"! strncmp ( line , ""LUT_3D_SIZE "" , 12 )"	17:12:258:291	6311649	0	True				
ANR	6311705	UnaryOperationExpression	"! strncmp ( line , ""LUT_3D_SIZE "" , 12 )"		6311649	0					
ANR	6311706	UnaryOperator	!		6311649	0					
ANR	6311707	CallExpression	"strncmp ( line , ""LUT_3D_SIZE "" , 12 )"		6311649	1					
ANR	6311708	Callee	strncmp		6311649	0					
ANR	6311709	Identifier	strncmp		6311649	0					
ANR	6311710	ArgumentList	line		6311649	1					
ANR	6311711	Argument	line		6311649	0					
ANR	6311712	Identifier	line		6311649	0					
ANR	6311713	Argument	"""LUT_3D_SIZE """		6311649	1					
ANR	6311714	PrimaryExpression	"""LUT_3D_SIZE """		6311649	0					
ANR	6311715	Argument	12		6311649	2					
ANR	6311716	PrimaryExpression	12		6311649	0					
ANR	6311717	CompoundStatement		19:12:280:323	6311649	1					
ANR	6311718	IdentifierDeclStatement	"int i , j , k ;"	19:12:309:320	6311649	0	True				
ANR	6311719	IdentifierDecl	i		6311649	0					
ANR	6311720	IdentifierDeclType	int		6311649	0					
ANR	6311721	Identifier	i		6311649	1					
ANR	6311722	IdentifierDecl	j		6311649	1					
ANR	6311723	IdentifierDeclType	int		6311649	0					
ANR	6311724	Identifier	j		6311649	1					
ANR	6311725	IdentifierDecl	k		6311649	2					
ANR	6311726	IdentifierDeclType	int		6311649	0					
ANR	6311727	Identifier	k		6311649	1					
ANR	6311728	IdentifierDeclStatement	"const int size = strtol ( line + 12 , NULL , 0 ) ;"	21:12:335:378	6311649	1	True				
ANR	6311729	IdentifierDecl	"size = strtol ( line + 12 , NULL , 0 )"		6311649	0					
ANR	6311730	IdentifierDeclType	const int		6311649	0					
ANR	6311731	Identifier	size		6311649	1					
ANR	6311732	AssignmentExpression	"size = strtol ( line + 12 , NULL , 0 )"		6311649	2		=			
ANR	6311733	Identifier	size		6311649	0					
ANR	6311734	CallExpression	"strtol ( line + 12 , NULL , 0 )"		6311649	1					
ANR	6311735	Callee	strtol		6311649	0					
ANR	6311736	Identifier	strtol		6311649	0					
ANR	6311737	ArgumentList	line + 12		6311649	1					
ANR	6311738	Argument	line + 12		6311649	0					
ANR	6311739	AdditiveExpression	line + 12		6311649	0		+			
ANR	6311740	Identifier	line		6311649	0					
ANR	6311741	PrimaryExpression	12		6311649	1					
ANR	6311742	Argument	NULL		6311649	1					
ANR	6311743	Identifier	NULL		6311649	0					
ANR	6311744	Argument	0		6311649	2					
ANR	6311745	PrimaryExpression	0		6311649	0					
ANR	6311746	IfStatement	if ( size > MAX_LEVEL )		6311649	2					
ANR	6311747	Condition	size > MAX_LEVEL	25:16:399:414	6311649	0	True				
ANR	6311748	RelationalExpression	size > MAX_LEVEL		6311649	0		>			
ANR	6311749	Identifier	size		6311649	0					
ANR	6311750	Identifier	MAX_LEVEL		6311649	1					
ANR	6311751	CompoundStatement		23:34:362:362	6311649	1					
ANR	6311752	ExpressionStatement	"av_log ( ctx , AV_LOG_ERROR , ""Too large 3D LUT\\n"" )"	27:16:436:483	6311649	0	True				
ANR	6311753	CallExpression	"av_log ( ctx , AV_LOG_ERROR , ""Too large 3D LUT\\n"" )"		6311649	0					
ANR	6311754	Callee	av_log		6311649	0					
ANR	6311755	Identifier	av_log		6311649	0					
ANR	6311756	ArgumentList	ctx		6311649	1					
ANR	6311757	Argument	ctx		6311649	0					
ANR	6311758	Identifier	ctx		6311649	0					
ANR	6311759	Argument	AV_LOG_ERROR		6311649	1					
ANR	6311760	Identifier	AV_LOG_ERROR		6311649	0					
ANR	6311761	Argument	"""Too large 3D LUT\\n"""		6311649	2					
ANR	6311762	PrimaryExpression	"""Too large 3D LUT\\n"""		6311649	0					
ANR	6311763	ReturnStatement	return AVERROR ( EINVAL ) ;	29:16:502:524	6311649	1	True				
ANR	6311764	CallExpression	AVERROR ( EINVAL )		6311649	0					
ANR	6311765	Callee	AVERROR		6311649	0					
ANR	6311766	Identifier	AVERROR		6311649	0					
ANR	6311767	ArgumentList	EINVAL		6311649	1					
ANR	6311768	Argument	EINVAL		6311649	0					
ANR	6311769	Identifier	EINVAL		6311649	0					
ANR	6311770	ExpressionStatement	lut3d -> lutsize = size	33:12:554:575	6311649	3	True				
ANR	6311771	AssignmentExpression	lut3d -> lutsize = size		6311649	0		=			
ANR	6311772	PtrMemberAccess	lut3d -> lutsize		6311649	0					
ANR	6311773	Identifier	lut3d		6311649	0					
ANR	6311774	Identifier	lutsize		6311649	1					
ANR	6311775	Identifier	size		6311649	1					
ANR	6311776	ForStatement	for ( k = 0 ; k < size ; k ++ )		6311649	4					
ANR	6311777	ForInit	k = 0 ;	35:17:595:600	6311649	0	True				
ANR	6311778	AssignmentExpression	k = 0		6311649	0		=			
ANR	6311779	Identifier	k		6311649	0					
ANR	6311780	PrimaryExpression	0		6311649	1					
ANR	6311781	Condition	k < size	35:24:602:609	6311649	1	True				
ANR	6311782	RelationalExpression	k < size		6311649	0		<			
ANR	6311783	Identifier	k		6311649	0					
ANR	6311784	Identifier	size		6311649	1					
ANR	6311785	PostIncDecOperationExpression	k ++	35:34:612:614	6311649	2	True				
ANR	6311786	Identifier	k		6311649	0					
ANR	6311787	IncDec	++		6311649	1					
ANR	6311788	CompoundStatement		33:39:562:562	6311649	3					
ANR	6311789	ForStatement	for ( j = 0 ; j < size ; j ++ )		6311649	0					
ANR	6311790	ForInit	j = 0 ;	37:21:641:646	6311649	0	True				
ANR	6311791	AssignmentExpression	j = 0		6311649	0		=			
ANR	6311792	Identifier	j		6311649	0					
ANR	6311793	PrimaryExpression	0		6311649	1					
ANR	6311794	Condition	j < size	37:28:648:655	6311649	1	True				
ANR	6311795	RelationalExpression	j < size		6311649	0		<			
ANR	6311796	Identifier	j		6311649	0					
ANR	6311797	Identifier	size		6311649	1					
ANR	6311798	PostIncDecOperationExpression	j ++	37:38:658:660	6311649	2	True				
ANR	6311799	Identifier	j		6311649	0					
ANR	6311800	IncDec	++		6311649	1					
ANR	6311801	CompoundStatement		35:43:608:608	6311649	3					
ANR	6311802	ForStatement	for ( i = 0 ; i < size ; i ++ )		6311649	0					
ANR	6311803	ForInit	i = 0 ;	39:25:691:696	6311649	0	True				
ANR	6311804	AssignmentExpression	i = 0		6311649	0		=			
ANR	6311805	Identifier	i		6311649	0					
ANR	6311806	PrimaryExpression	0		6311649	1					
ANR	6311807	Condition	i < size	39:32:698:705	6311649	1	True				
ANR	6311808	RelationalExpression	i < size		6311649	0		<			
ANR	6311809	Identifier	i		6311649	0					
ANR	6311810	Identifier	size		6311649	1					
ANR	6311811	PostIncDecOperationExpression	i ++	39:42:708:710	6311649	2	True				
ANR	6311812	Identifier	i		6311649	0					
ANR	6311813	IncDec	++		6311649	1					
ANR	6311814	CompoundStatement		39:24:685:726	6311649	3					
ANR	6311815	IdentifierDeclStatement	struct rgbvec * vec = & lut3d -> lut [ k ] [ j ] [ i ] ;	41:24:740:781	6311649	0	True				
ANR	6311816	IdentifierDecl	* vec = & lut3d -> lut [ k ] [ j ] [ i ]		6311649	0					
ANR	6311817	IdentifierDeclType	struct rgbvec *		6311649	0					
ANR	6311818	Identifier	vec		6311649	1					
ANR	6311819	AssignmentExpression	* vec = & lut3d -> lut [ k ] [ j ] [ i ]		6311649	2		=			
ANR	6311820	Identifier	vec		6311649	0					
ANR	6311821	UnaryOperationExpression	& lut3d -> lut [ k ] [ j ] [ i ]		6311649	1					
ANR	6311822	UnaryOperator	&		6311649	0					
ANR	6311823	ArrayIndexing	lut3d -> lut [ k ] [ j ] [ i ]		6311649	1					
ANR	6311824	ArrayIndexing	lut3d -> lut [ k ] [ j ]		6311649	0					
ANR	6311825	ArrayIndexing	lut3d -> lut [ k ]		6311649	0					
ANR	6311826	PtrMemberAccess	lut3d -> lut		6311649	0					
ANR	6311827	Identifier	lut3d		6311649	0					
ANR	6311828	Identifier	lut		6311649	1					
ANR	6311829	Identifier	k		6311649	1					
ANR	6311830	Identifier	j		6311649	1					
ANR	6311831	Identifier	i		6311649	1					
ANR	6311832	DoStatement	do		6311649	1					
ANR	6311833	CompoundStatement		43:27:758:758	6311649	0					
ANR	6311834	ExpressionStatement	NEXT_LINE ( 0 )	47:28:844:856	6311649	0	True				
ANR	6311835	CallExpression	NEXT_LINE ( 0 )		6311649	0					
ANR	6311836	Callee	NEXT_LINE		6311649	0					
ANR	6311837	Identifier	NEXT_LINE		6311649	0					
ANR	6311838	ArgumentList	0		6311649	1					
ANR	6311839	Argument	0		6311649	0					
ANR	6311840	PrimaryExpression	0		6311649	0					
ANR	6311841	IfStatement	"if ( ! strncmp ( line , ""DOMAIN_"" , 7 ) )"		6311649	1					
ANR	6311842	Condition	"! strncmp ( line , ""DOMAIN_"" , 7 )"	49:32:891:918	6311649	0	True				
ANR	6311843	UnaryOperationExpression	"! strncmp ( line , ""DOMAIN_"" , 7 )"		6311649	0					
ANR	6311844	UnaryOperator	!		6311649	0					
ANR	6311845	CallExpression	"strncmp ( line , ""DOMAIN_"" , 7 )"		6311649	1					
ANR	6311846	Callee	strncmp		6311649	0					
ANR	6311847	Identifier	strncmp		6311649	0					
ANR	6311848	ArgumentList	line		6311649	1					
ANR	6311849	Argument	line		6311649	0					
ANR	6311850	Identifier	line		6311649	0					
ANR	6311851	Argument	"""DOMAIN_"""		6311649	1					
ANR	6311852	PrimaryExpression	"""DOMAIN_"""		6311649	0					
ANR	6311853	Argument	7		6311649	2					
ANR	6311854	PrimaryExpression	7		6311649	0					
ANR	6311855	CompoundStatement		49:32:901:919	6311649	1					
ANR	6311856	IdentifierDeclStatement	float * vals = NULL ;	51:32:956:974	6311649	0	True				
ANR	6311857	IdentifierDecl	* vals = NULL		6311649	0					
ANR	6311858	IdentifierDeclType	float *		6311649	0					
ANR	6311859	Identifier	vals		6311649	1					
ANR	6311860	AssignmentExpression	* vals = NULL		6311649	2		=			
ANR	6311861	Identifier	NULL		6311649	0					
ANR	6311862	Identifier	NULL		6311649	1					
ANR	6311863	IfStatement	"if ( ! strncmp ( line + 7 , ""MIN "" , 4 ) )"		6311649	1					
ANR	6311864	Condition	"! strncmp ( line + 7 , ""MIN "" , 4 )"	53:41:1018:1046	6311649	0	True				
ANR	6311865	UnaryOperationExpression	"! strncmp ( line + 7 , ""MIN "" , 4 )"		6311649	0					
ANR	6311866	UnaryOperator	!		6311649	0					
ANR	6311867	CallExpression	"strncmp ( line + 7 , ""MIN "" , 4 )"		6311649	1					
ANR	6311868	Callee	strncmp		6311649	0					
ANR	6311869	Identifier	strncmp		6311649	0					
ANR	6311870	ArgumentList	line + 7		6311649	1					
ANR	6311871	Argument	line + 7		6311649	0					
ANR	6311872	AdditiveExpression	line + 7		6311649	0		+			
ANR	6311873	Identifier	line		6311649	0					
ANR	6311874	PrimaryExpression	7		6311649	1					
ANR	6311875	Argument	"""MIN """		6311649	1					
ANR	6311876	PrimaryExpression	"""MIN """		6311649	0					
ANR	6311877	Argument	4		6311649	2					
ANR	6311878	PrimaryExpression	4		6311649	0					
ANR	6311879	ExpressionStatement	vals = min	53:72:1049:1059	6311649	1	True				
ANR	6311880	AssignmentExpression	vals = min		6311649	0		=			
ANR	6311881	Identifier	vals		6311649	0					
ANR	6311882	Identifier	min		6311649	1					
ANR	6311883	ElseStatement	else		6311649	0					
ANR	6311884	IfStatement	"if ( ! strncmp ( line + 7 , ""MAX "" , 4 ) )"		6311649	0					
ANR	6311885	Condition	"! strncmp ( line + 7 , ""MAX "" , 4 )"	55:41:1103:1131	6311649	0	True				
ANR	6311886	UnaryOperationExpression	"! strncmp ( line + 7 , ""MAX "" , 4 )"		6311649	0					
ANR	6311887	UnaryOperator	!		6311649	0					
ANR	6311888	CallExpression	"strncmp ( line + 7 , ""MAX "" , 4 )"		6311649	1					
ANR	6311889	Callee	strncmp		6311649	0					
ANR	6311890	Identifier	strncmp		6311649	0					
ANR	6311891	ArgumentList	line + 7		6311649	1					
ANR	6311892	Argument	line + 7		6311649	0					
ANR	6311893	AdditiveExpression	line + 7		6311649	0		+			
ANR	6311894	Identifier	line		6311649	0					
ANR	6311895	PrimaryExpression	7		6311649	1					
ANR	6311896	Argument	"""MAX """		6311649	1					
ANR	6311897	PrimaryExpression	"""MAX """		6311649	0					
ANR	6311898	Argument	4		6311649	2					
ANR	6311899	PrimaryExpression	4		6311649	0					
ANR	6311900	ExpressionStatement	vals = max	55:72:1134:1144	6311649	1	True				
ANR	6311901	AssignmentExpression	vals = max		6311649	0		=			
ANR	6311902	Identifier	vals		6311649	0					
ANR	6311903	Identifier	max		6311649	1					
ANR	6311904	IfStatement	if ( ! vals )		6311649	2					
ANR	6311905	Condition	! vals	57:36:1183:1187	6311649	0	True				
ANR	6311906	UnaryOperationExpression	! vals		6311649	0					
ANR	6311907	UnaryOperator	!		6311649	0					
ANR	6311908	Identifier	vals		6311649	1					
ANR	6311909	ReturnStatement	return AVERROR_INVALIDDATA ;	59:36:1227:1253	6311649	1	True				
ANR	6311910	Identifier	AVERROR_INVALIDDATA		6311649	0					
ANR	6311911	ExpressionStatement	"sscanf ( line + 11 , ""%f %f %f"" , vals , vals + 1 , vals + 2 )"	61:32:1288:1343	6311649	3	True				
ANR	6311912	CallExpression	"sscanf ( line + 11 , ""%f %f %f"" , vals , vals + 1 , vals + 2 )"		6311649	0					
ANR	6311913	Callee	sscanf		6311649	0					
ANR	6311914	Identifier	sscanf		6311649	0					
ANR	6311915	ArgumentList	line + 11		6311649	1					
ANR	6311916	Argument	line + 11		6311649	0					
ANR	6311917	AdditiveExpression	line + 11		6311649	0		+			
ANR	6311918	Identifier	line		6311649	0					
ANR	6311919	PrimaryExpression	11		6311649	1					
ANR	6311920	Argument	"""%f %f %f"""		6311649	1					
ANR	6311921	PrimaryExpression	"""%f %f %f"""		6311649	0					
ANR	6311922	Argument	vals		6311649	2					
ANR	6311923	Identifier	vals		6311649	0					
ANR	6311924	Argument	vals + 1		6311649	3					
ANR	6311925	AdditiveExpression	vals + 1		6311649	0		+			
ANR	6311926	Identifier	vals		6311649	0					
ANR	6311927	PrimaryExpression	1		6311649	1					
ANR	6311928	Argument	vals + 2		6311649	4					
ANR	6311929	AdditiveExpression	vals + 2		6311649	0		+			
ANR	6311930	Identifier	vals		6311649	0					
ANR	6311931	PrimaryExpression	2		6311649	1					
ANR	6311932	ExpressionStatement	"av_log ( ctx , AV_LOG_DEBUG , ""min: %f %f %f | max: %f %f %f\\n"" , min [ 0 ] , min [ 1 ] , min [ 2 ] , max [ 0 ] , max [ 1 ] , max [ 2 ] )"	63:32:1378:1526	6311649	4	True				
ANR	6311933	CallExpression	"av_log ( ctx , AV_LOG_DEBUG , ""min: %f %f %f | max: %f %f %f\\n"" , min [ 0 ] , min [ 1 ] , min [ 2 ] , max [ 0 ] , max [ 1 ] , max [ 2 ] )"		6311649	0					
ANR	6311934	Callee	av_log		6311649	0					
ANR	6311935	Identifier	av_log		6311649	0					
ANR	6311936	ArgumentList	ctx		6311649	1					
ANR	6311937	Argument	ctx		6311649	0					
ANR	6311938	Identifier	ctx		6311649	0					
ANR	6311939	Argument	AV_LOG_DEBUG		6311649	1					
ANR	6311940	Identifier	AV_LOG_DEBUG		6311649	0					
ANR	6311941	Argument	"""min: %f %f %f | max: %f %f %f\\n"""		6311649	2					
ANR	6311942	PrimaryExpression	"""min: %f %f %f | max: %f %f %f\\n"""		6311649	0					
ANR	6311943	Argument	min [ 0 ]		6311649	3					
ANR	6311944	ArrayIndexing	min [ 0 ]		6311649	0					
ANR	6311945	Identifier	min		6311649	0					
ANR	6311946	PrimaryExpression	0		6311649	1					
ANR	6311947	Argument	min [ 1 ]		6311649	4					
ANR	6311948	ArrayIndexing	min [ 1 ]		6311649	0					
ANR	6311949	Identifier	min		6311649	0					
ANR	6311950	PrimaryExpression	1		6311649	1					
ANR	6311951	Argument	min [ 2 ]		6311649	5					
ANR	6311952	ArrayIndexing	min [ 2 ]		6311649	0					
ANR	6311953	Identifier	min		6311649	0					
ANR	6311954	PrimaryExpression	2		6311649	1					
ANR	6311955	Argument	max [ 0 ]		6311649	6					
ANR	6311956	ArrayIndexing	max [ 0 ]		6311649	0					
ANR	6311957	Identifier	max		6311649	0					
ANR	6311958	PrimaryExpression	0		6311649	1					
ANR	6311959	Argument	max [ 1 ]		6311649	7					
ANR	6311960	ArrayIndexing	max [ 1 ]		6311649	0					
ANR	6311961	Identifier	max		6311649	0					
ANR	6311962	PrimaryExpression	1		6311649	1					
ANR	6311963	Argument	max [ 2 ]		6311649	8					
ANR	6311964	ArrayIndexing	max [ 2 ]		6311649	0					
ANR	6311965	Identifier	max		6311649	0					
ANR	6311966	PrimaryExpression	2		6311649	1					
ANR	6311967	ContinueStatement	continue ;	67:32:1561:1569	6311649	5	True				
ANR	6311968	Condition	skip_line ( line )	71:33:1636:1650	6311649	1	True				
ANR	6311969	CallExpression	skip_line ( line )		6311649	0					
ANR	6311970	Callee	skip_line		6311649	0					
ANR	6311971	Identifier	skip_line		6311649	0					
ANR	6311972	ArgumentList	line		6311649	1					
ANR	6311973	Argument	line		6311649	0					
ANR	6311974	Identifier	line		6311649	0					
ANR	6311975	IfStatement	"if ( sscanf ( line , ""%f %f %f"" , & vec -> r , & vec -> g , & vec -> b ) != 3 )"		6311649	2					
ANR	6311976	Condition	"sscanf ( line , ""%f %f %f"" , & vec -> r , & vec -> g , & vec -> b ) != 3"	73:28:1683:1738	6311649	0	True				
ANR	6311977	EqualityExpression	"sscanf ( line , ""%f %f %f"" , & vec -> r , & vec -> g , & vec -> b ) != 3"		6311649	0		!=			
ANR	6311978	CallExpression	"sscanf ( line , ""%f %f %f"" , & vec -> r , & vec -> g , & vec -> b )"		6311649	0					
ANR	6311979	Callee	sscanf		6311649	0					
ANR	6311980	Identifier	sscanf		6311649	0					
ANR	6311981	ArgumentList	line		6311649	1					
ANR	6311982	Argument	line		6311649	0					
ANR	6311983	Identifier	line		6311649	0					
ANR	6311984	Argument	"""%f %f %f"""		6311649	1					
ANR	6311985	PrimaryExpression	"""%f %f %f"""		6311649	0					
ANR	6311986	Argument	& vec -> r		6311649	2					
ANR	6311987	UnaryOperationExpression	& vec -> r		6311649	0					
ANR	6311988	UnaryOperator	&		6311649	0					
ANR	6311989	PtrMemberAccess	vec -> r		6311649	1					
ANR	6311990	Identifier	vec		6311649	0					
ANR	6311991	Identifier	r		6311649	1					
ANR	6311992	Argument	& vec -> g		6311649	3					
ANR	6311993	UnaryOperationExpression	& vec -> g		6311649	0					
ANR	6311994	UnaryOperator	&		6311649	0					
ANR	6311995	PtrMemberAccess	vec -> g		6311649	1					
ANR	6311996	Identifier	vec		6311649	0					
ANR	6311997	Identifier	g		6311649	1					
ANR	6311998	Argument	& vec -> b		6311649	4					
ANR	6311999	UnaryOperationExpression	& vec -> b		6311649	0					
ANR	6312000	UnaryOperator	&		6311649	0					
ANR	6312001	PtrMemberAccess	vec -> b		6311649	1					
ANR	6312002	Identifier	vec		6311649	0					
ANR	6312003	Identifier	b		6311649	1					
ANR	6312004	PrimaryExpression	3		6311649	1					
ANR	6312005	ReturnStatement	return AVERROR_INVALIDDATA ;	75:28:1770:1796	6311649	1	True				
ANR	6312006	Identifier	AVERROR_INVALIDDATA		6311649	0					
ANR	6312007	ExpressionStatement	vec -> r *= max [ 0 ] - min [ 0 ]	77:24:1823:1848	6311649	3	True				
ANR	6312008	AssignmentExpression	vec -> r *= max [ 0 ] - min [ 0 ]		6311649	0		*=			
ANR	6312009	PtrMemberAccess	vec -> r		6311649	0					
ANR	6312010	Identifier	vec		6311649	0					
ANR	6312011	Identifier	r		6311649	1					
ANR	6312012	AdditiveExpression	max [ 0 ] - min [ 0 ]		6311649	1		-			
ANR	6312013	ArrayIndexing	max [ 0 ]		6311649	0					
ANR	6312014	Identifier	max		6311649	0					
ANR	6312015	PrimaryExpression	0		6311649	1					
ANR	6312016	ArrayIndexing	min [ 0 ]		6311649	1					
ANR	6312017	Identifier	min		6311649	0					
ANR	6312018	PrimaryExpression	0		6311649	1					
ANR	6312019	ExpressionStatement	vec -> g *= max [ 1 ] - min [ 1 ]	79:24:1875:1900	6311649	4	True				
ANR	6312020	AssignmentExpression	vec -> g *= max [ 1 ] - min [ 1 ]		6311649	0		*=			
ANR	6312021	PtrMemberAccess	vec -> g		6311649	0					
ANR	6312022	Identifier	vec		6311649	0					
ANR	6312023	Identifier	g		6311649	1					
ANR	6312024	AdditiveExpression	max [ 1 ] - min [ 1 ]		6311649	1		-			
ANR	6312025	ArrayIndexing	max [ 1 ]		6311649	0					
ANR	6312026	Identifier	max		6311649	0					
ANR	6312027	PrimaryExpression	1		6311649	1					
ANR	6312028	ArrayIndexing	min [ 1 ]		6311649	1					
ANR	6312029	Identifier	min		6311649	0					
ANR	6312030	PrimaryExpression	1		6311649	1					
ANR	6312031	ExpressionStatement	vec -> b *= max [ 2 ] - min [ 2 ]	81:24:1927:1952	6311649	5	True				
ANR	6312032	AssignmentExpression	vec -> b *= max [ 2 ] - min [ 2 ]		6311649	0		*=			
ANR	6312033	PtrMemberAccess	vec -> b		6311649	0					
ANR	6312034	Identifier	vec		6311649	0					
ANR	6312035	Identifier	b		6311649	1					
ANR	6312036	AdditiveExpression	max [ 2 ] - min [ 2 ]		6311649	1		-			
ANR	6312037	ArrayIndexing	max [ 2 ]		6311649	0					
ANR	6312038	Identifier	max		6311649	0					
ANR	6312039	PrimaryExpression	2		6311649	1					
ANR	6312040	ArrayIndexing	min [ 2 ]		6311649	1					
ANR	6312041	Identifier	min		6311649	0					
ANR	6312042	PrimaryExpression	2		6311649	1					
ANR	6312043	BreakStatement	break ;	89:12:2024:2029	6311649	5	True				
ANR	6312044	ReturnStatement	return 0 ;	95:4:2054:2062	6311649	5	True				
ANR	6312045	PrimaryExpression	0		6311649	0					
ANR	6312046	ReturnType	static int		6311649	1					
ANR	6312047	Identifier	parse_cube		6311649	2					
ANR	6312048	ParameterList	"AVFilterContext * ctx , FILE * f"		6311649	3					
ANR	6312049	Parameter	AVFilterContext * ctx	1:22:22:41	6311649	0	True				
ANR	6312050	ParameterType	AVFilterContext *		6311649	0					
ANR	6312051	Identifier	ctx		6311649	1					
ANR	6312052	Parameter	FILE * f	1:44:44:50	6311649	1	True				
ANR	6312053	ParameterType	FILE *		6311649	0					
ANR	6312054	Identifier	f		6311649	1					
ANR	6312055	CFGEntryNode	ENTRY		6311649		True				
ANR	6312056	CFGExitNode	EXIT		6311649		True				
ANR	6312057	Symbol	lut3d -> lut		6311649						
ANR	6312058	Symbol	vals		6311649						
ANR	6312059	Symbol	line		6311649						
ANR	6312060	Symbol	lut3d -> lutsize		6311649						
ANR	6312061	Symbol	* * lut3d -> lut		6311649						
ANR	6312062	Symbol	fgets		6311649						
ANR	6312063	Symbol	* max		6311649						
ANR	6312064	Symbol	strncmp		6311649						
ANR	6312065	Symbol	min		6311649						
ANR	6312066	Symbol	strtol		6311649						
ANR	6312067	Symbol	vec		6311649						
ANR	6312068	Symbol	& vec -> r		6311649						
ANR	6312069	Symbol	vec -> b		6311649						
ANR	6312070	Symbol	* * lut3d		6311649						
ANR	6312071	Symbol	AV_LOG_DEBUG		6311649						
ANR	6312072	Symbol	* * k		6311649						
ANR	6312073	Symbol	skip_line		6311649						
ANR	6312074	Symbol	& vec -> g		6311649						
ANR	6312075	Symbol	NULL		6311649						
ANR	6312076	Symbol	AV_LOG_ERROR		6311649						
ANR	6312077	Symbol	max		6311649						
ANR	6312078	Symbol	& vec -> b		6311649						
ANR	6312079	Symbol	ctx		6311649						
ANR	6312080	Symbol	f		6311649						
ANR	6312081	Symbol	* * * lut3d		6311649						
ANR	6312082	Symbol	vec -> r		6311649						
ANR	6312083	Symbol	i		6311649						
ANR	6312084	Symbol	j		6311649						
ANR	6312085	Symbol	ctx -> priv		6311649						
ANR	6312086	Symbol	k		6311649						
ANR	6312087	Symbol	vec -> g		6311649						
ANR	6312088	Symbol	* ctx		6311649						
ANR	6312089	Symbol	* lut3d		6311649						
ANR	6312090	Symbol	EINVAL		6311649						
ANR	6312091	Symbol	* lut3d -> lut		6311649						
ANR	6312092	Symbol	lut3d		6311649						
ANR	6312093	Symbol	size		6311649						
ANR	6312094	Symbol	* j		6311649						
ANR	6312095	Symbol	* k		6311649						
ANR	6312096	Symbol	sscanf		6311649						
ANR	6312097	Symbol	AVERROR_INVALIDDATA		6311649						
ANR	6312098	Symbol	MAX_LEVEL		6311649						
ANR	6312099	Symbol	AVERROR		6311649						
ANR	6312100	Symbol	* min		6311649						
ANR	6312101	Symbol	* vec		6311649						
