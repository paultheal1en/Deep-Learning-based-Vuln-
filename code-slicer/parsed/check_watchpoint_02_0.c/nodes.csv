command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1286504	File	/home/p4ultr4n/workplace/ReVeal/raw_code/check_watchpoint_02_0.c								
ANR	1286505	Function	check_watchpoint	1:0:0:1728							
ANR	1286506	FunctionDef	"check_watchpoint (int offset , int len_mask , int flags)"		1286505	0					
ANR	1286507	CompoundStatement		3:0:67:1728	1286505	0					
ANR	1286508	IdentifierDeclStatement	CPUArchState * env = cpu_single_env ;	5:4:74:108	1286505	0	True				
ANR	1286509	IdentifierDecl	* env = cpu_single_env		1286505	0					
ANR	1286510	IdentifierDeclType	CPUArchState *		1286505	0					
ANR	1286511	Identifier	env		1286505	1					
ANR	1286512	AssignmentExpression	* env = cpu_single_env		1286505	2		=			
ANR	1286513	Identifier	cpu_single_env		1286505	0					
ANR	1286514	Identifier	cpu_single_env		1286505	1					
ANR	1286515	IdentifierDeclStatement	"target_ulong pc , cs_base ;"	7:4:115:139	1286505	1	True				
ANR	1286516	IdentifierDecl	pc		1286505	0					
ANR	1286517	IdentifierDeclType	target_ulong		1286505	0					
ANR	1286518	Identifier	pc		1286505	1					
ANR	1286519	IdentifierDecl	cs_base		1286505	1					
ANR	1286520	IdentifierDeclType	target_ulong		1286505	0					
ANR	1286521	Identifier	cs_base		1286505	1					
ANR	1286522	IdentifierDeclStatement	TranslationBlock * tb ;	9:4:146:166	1286505	2	True				
ANR	1286523	IdentifierDecl	* tb		1286505	0					
ANR	1286524	IdentifierDeclType	TranslationBlock *		1286505	0					
ANR	1286525	Identifier	tb		1286505	1					
ANR	1286526	IdentifierDeclStatement	target_ulong vaddr ;	11:4:173:191	1286505	3	True				
ANR	1286527	IdentifierDecl	vaddr		1286505	0					
ANR	1286528	IdentifierDeclType	target_ulong		1286505	0					
ANR	1286529	Identifier	vaddr		1286505	1					
ANR	1286530	IdentifierDeclStatement	CPUWatchpoint * wp ;	13:4:198:215	1286505	4	True				
ANR	1286531	IdentifierDecl	* wp		1286505	0					
ANR	1286532	IdentifierDeclType	CPUWatchpoint *		1286505	0					
ANR	1286533	Identifier	wp		1286505	1					
ANR	1286534	IdentifierDeclStatement	int cpu_flags ;	15:4:222:235	1286505	5	True				
ANR	1286535	IdentifierDecl	cpu_flags		1286505	0					
ANR	1286536	IdentifierDeclType	int		1286505	0					
ANR	1286537	Identifier	cpu_flags		1286505	1					
ANR	1286538	IfStatement	if ( env -> watchpoint_hit )		1286505	6					
ANR	1286539	Condition	env -> watchpoint_hit	19:8:248:266	1286505	0	True				
ANR	1286540	PtrMemberAccess	env -> watchpoint_hit		1286505	0					
ANR	1286541	Identifier	env		1286505	0					
ANR	1286542	Identifier	watchpoint_hit		1286505	1					
ANR	1286543	CompoundStatement		17:29:201:201	1286505	1					
ANR	1286544	ExpressionStatement	"cpu_interrupt ( env , CPU_INTERRUPT_DEBUG )"	27:8:452:491	1286505	0	True				
ANR	1286545	CallExpression	"cpu_interrupt ( env , CPU_INTERRUPT_DEBUG )"		1286505	0					
ANR	1286546	Callee	cpu_interrupt		1286505	0					
ANR	1286547	Identifier	cpu_interrupt		1286505	0					
ANR	1286548	ArgumentList	env		1286505	1					
ANR	1286549	Argument	env		1286505	0					
ANR	1286550	Identifier	env		1286505	0					
ANR	1286551	Argument	CPU_INTERRUPT_DEBUG		1286505	1					
ANR	1286552	Identifier	CPU_INTERRUPT_DEBUG		1286505	0					
ANR	1286553	ReturnStatement	return ;	29:8:502:508	1286505	1	True				
ANR	1286554	ExpressionStatement	vaddr = ( env -> mem_io_vaddr & TARGET_PAGE_MASK ) + offset	33:4:522:577	1286505	7	True				
ANR	1286555	AssignmentExpression	vaddr = ( env -> mem_io_vaddr & TARGET_PAGE_MASK ) + offset		1286505	0		=			
ANR	1286556	Identifier	vaddr		1286505	0					
ANR	1286557	AdditiveExpression	( env -> mem_io_vaddr & TARGET_PAGE_MASK ) + offset		1286505	1		+			
ANR	1286558	BitAndExpression	env -> mem_io_vaddr & TARGET_PAGE_MASK		1286505	0		&			
ANR	1286559	PtrMemberAccess	env -> mem_io_vaddr		1286505	0					
ANR	1286560	Identifier	env		1286505	0					
ANR	1286561	Identifier	mem_io_vaddr		1286505	1					
ANR	1286562	Identifier	TARGET_PAGE_MASK		1286505	1					
ANR	1286563	Identifier	offset		1286505	1					
ANR	1286564	Statement	QTAILQ_FOREACH	35:4:584:597	1286505	8	True				
ANR	1286565	Statement	(	35:18:598:598	1286505	9	True				
ANR	1286566	Statement	wp	35:19:599:600	1286505	10	True				
ANR	1286567	Statement	","	35:21:601:601	1286505	11	True				
ANR	1286568	Statement	&	35:23:603:603	1286505	12	True				
ANR	1286569	Statement	env	35:24:604:606	1286505	13	True				
ANR	1286570	Statement	->	35:27:607:608	1286505	14	True				
ANR	1286571	Statement	watchpoints	35:29:609:619	1286505	15	True				
ANR	1286572	Statement	","	35:40:620:620	1286505	16	True				
ANR	1286573	Statement	entry	35:42:622:626	1286505	17	True				
ANR	1286574	Statement	)	35:47:627:627	1286505	18	True				
ANR	1286575	CompoundStatement		33:49:561:561	1286505	19					
ANR	1286576	IfStatement	if ( ( vaddr == ( wp -> vaddr & len_mask ) || ( vaddr & wp -> len_mask ) == wp -> vaddr ) && ( wp -> flags & flags ) )		1286505	0					
ANR	1286577	Condition	( vaddr == ( wp -> vaddr & len_mask ) || ( vaddr & wp -> len_mask ) == wp -> vaddr ) && ( wp -> flags & flags )	37:12:644:752	1286505	0	True				
ANR	1286578	AndExpression	( vaddr == ( wp -> vaddr & len_mask ) || ( vaddr & wp -> len_mask ) == wp -> vaddr ) && ( wp -> flags & flags )		1286505	0		&&			
ANR	1286579	OrExpression	vaddr == ( wp -> vaddr & len_mask ) || ( vaddr & wp -> len_mask ) == wp -> vaddr		1286505	0		||			
ANR	1286580	EqualityExpression	vaddr == ( wp -> vaddr & len_mask )		1286505	0		==			
ANR	1286581	Identifier	vaddr		1286505	0					
ANR	1286582	BitAndExpression	wp -> vaddr & len_mask		1286505	1		&			
ANR	1286583	PtrMemberAccess	wp -> vaddr		1286505	0					
ANR	1286584	Identifier	wp		1286505	0					
ANR	1286585	Identifier	vaddr		1286505	1					
ANR	1286586	Identifier	len_mask		1286505	1					
ANR	1286587	EqualityExpression	( vaddr & wp -> len_mask ) == wp -> vaddr		1286505	1		==			
ANR	1286588	BitAndExpression	vaddr & wp -> len_mask		1286505	0		&			
ANR	1286589	Identifier	vaddr		1286505	0					
ANR	1286590	PtrMemberAccess	wp -> len_mask		1286505	1					
ANR	1286591	Identifier	wp		1286505	0					
ANR	1286592	Identifier	len_mask		1286505	1					
ANR	1286593	PtrMemberAccess	wp -> vaddr		1286505	1					
ANR	1286594	Identifier	wp		1286505	0					
ANR	1286595	Identifier	vaddr		1286505	1					
ANR	1286596	BitAndExpression	wp -> flags & flags		1286505	1		&			
ANR	1286597	PtrMemberAccess	wp -> flags		1286505	0					
ANR	1286598	Identifier	wp		1286505	0					
ANR	1286599	Identifier	flags		1286505	1					
ANR	1286600	Identifier	flags		1286505	1					
ANR	1286601	CompoundStatement		37:74:687:687	1286505	1					
ANR	1286602	ExpressionStatement	wp -> flags |= BP_WATCHPOINT_HIT	41:12:770:800	1286505	0	True				
ANR	1286603	AssignmentExpression	wp -> flags |= BP_WATCHPOINT_HIT		1286505	0		|=			
ANR	1286604	PtrMemberAccess	wp -> flags		1286505	0					
ANR	1286605	Identifier	wp		1286505	0					
ANR	1286606	Identifier	flags		1286505	1					
ANR	1286607	Identifier	BP_WATCHPOINT_HIT		1286505	1					
ANR	1286608	IfStatement	if ( ! env -> watchpoint_hit )		1286505	1					
ANR	1286609	Condition	! env -> watchpoint_hit	43:16:819:838	1286505	0	True				
ANR	1286610	UnaryOperationExpression	! env -> watchpoint_hit		1286505	0					
ANR	1286611	UnaryOperator	!		1286505	0					
ANR	1286612	PtrMemberAccess	env -> watchpoint_hit		1286505	1					
ANR	1286613	Identifier	env		1286505	0					
ANR	1286614	Identifier	watchpoint_hit		1286505	1					
ANR	1286615	CompoundStatement		41:38:773:773	1286505	1					
ANR	1286616	ExpressionStatement	env -> watchpoint_hit = wp	45:16:860:884	1286505	0	True				
ANR	1286617	AssignmentExpression	env -> watchpoint_hit = wp		1286505	0		=			
ANR	1286618	PtrMemberAccess	env -> watchpoint_hit		1286505	0					
ANR	1286619	Identifier	env		1286505	0					
ANR	1286620	Identifier	watchpoint_hit		1286505	1					
ANR	1286621	Identifier	wp		1286505	1					
ANR	1286622	ExpressionStatement	tb = tb_find_pc ( env -> mem_io_pc )	47:16:903:934	1286505	1	True				
ANR	1286623	AssignmentExpression	tb = tb_find_pc ( env -> mem_io_pc )		1286505	0		=			
ANR	1286624	Identifier	tb		1286505	0					
ANR	1286625	CallExpression	tb_find_pc ( env -> mem_io_pc )		1286505	1					
ANR	1286626	Callee	tb_find_pc		1286505	0					
ANR	1286627	Identifier	tb_find_pc		1286505	0					
ANR	1286628	ArgumentList	env -> mem_io_pc		1286505	1					
ANR	1286629	Argument	env -> mem_io_pc		1286505	0					
ANR	1286630	PtrMemberAccess	env -> mem_io_pc		1286505	0					
ANR	1286631	Identifier	env		1286505	0					
ANR	1286632	Identifier	mem_io_pc		1286505	1					
ANR	1286633	IfStatement	if ( ! tb )		1286505	2					
ANR	1286634	Condition	! tb	49:20:957:959	1286505	0	True				
ANR	1286635	UnaryOperationExpression	! tb		1286505	0					
ANR	1286636	UnaryOperator	!		1286505	0					
ANR	1286637	Identifier	tb		1286505	1					
ANR	1286638	CompoundStatement		47:25:894:894	1286505	1					
ANR	1286639	Statement	cpu_abort	51:20:985:993	1286505	0	True				
ANR	1286640	Statement	(	51:29:994:994	1286505	1	True				
ANR	1286641	Statement	env	51:30:995:997	1286505	2	True				
ANR	1286642	Statement	","	51:33:998:998	1286505	3	True				
ANR	1286643	Statement	"""check_watchpoint: could not find TB for """	51:35:1000:1041	1286505	4	True				
ANR	1286644	Statement	"""pc=%p"""	53:30:1074:1080	1286505	5	True				
ANR	1286645	Statement	","	53:37:1081:1081	1286505	6	True				
ANR	1286646	Statement	(	53:39:1083:1083	1286505	7	True				
ANR	1286647	Statement	void	53:40:1084:1087	1286505	8	True				
ANR	1286648	Statement	*	53:45:1089:1089	1286505	9	True				
ANR	1286649	Statement	)	53:46:1090:1090	1286505	10	True				
ANR	1286650	Statement	env	53:47:1091:1093	1286505	11	True				
ANR	1286651	Statement	->	53:50:1094:1095	1286505	12	True				
ANR	1286652	Statement	mem_io_pc	53:52:1096:1104	1286505	13	True				
ANR	1286653	Statement	)	53:61:1105:1105	1286505	14	True				
ANR	1286654	ExpressionStatement		53:62:1106:1106	1286505	15	True				
ANR	1286655	ExpressionStatement	"cpu_restore_state ( tb , env , env -> mem_io_pc )"	57:16:1144:1186	1286505	3	True				
ANR	1286656	CallExpression	"cpu_restore_state ( tb , env , env -> mem_io_pc )"		1286505	0					
ANR	1286657	Callee	cpu_restore_state		1286505	0					
ANR	1286658	Identifier	cpu_restore_state		1286505	0					
ANR	1286659	ArgumentList	tb		1286505	1					
ANR	1286660	Argument	tb		1286505	0					
ANR	1286661	Identifier	tb		1286505	0					
ANR	1286662	Argument	env		1286505	1					
ANR	1286663	Identifier	env		1286505	0					
ANR	1286664	Argument	env -> mem_io_pc		1286505	2					
ANR	1286665	PtrMemberAccess	env -> mem_io_pc		1286505	0					
ANR	1286666	Identifier	env		1286505	0					
ANR	1286667	Identifier	mem_io_pc		1286505	1					
ANR	1286668	ExpressionStatement	"tb_phys_invalidate ( tb , - 1 )"	59:16:1205:1231	1286505	4	True				
ANR	1286669	CallExpression	"tb_phys_invalidate ( tb , - 1 )"		1286505	0					
ANR	1286670	Callee	tb_phys_invalidate		1286505	0					
ANR	1286671	Identifier	tb_phys_invalidate		1286505	0					
ANR	1286672	ArgumentList	tb		1286505	1					
ANR	1286673	Argument	tb		1286505	0					
ANR	1286674	Identifier	tb		1286505	0					
ANR	1286675	Argument	- 1		1286505	1					
ANR	1286676	UnaryOperationExpression	- 1		1286505	0					
ANR	1286677	UnaryOperator	-		1286505	0					
ANR	1286678	PrimaryExpression	1		1286505	1					
ANR	1286679	IfStatement	if ( wp -> flags & BP_STOP_BEFORE_ACCESS )		1286505	5					
ANR	1286680	Condition	wp -> flags & BP_STOP_BEFORE_ACCESS	61:20:1254:1286	1286505	0	True				
ANR	1286681	BitAndExpression	wp -> flags & BP_STOP_BEFORE_ACCESS		1286505	0		&			
ANR	1286682	PtrMemberAccess	wp -> flags		1286505	0					
ANR	1286683	Identifier	wp		1286505	0					
ANR	1286684	Identifier	flags		1286505	1					
ANR	1286685	Identifier	BP_STOP_BEFORE_ACCESS		1286505	1					
ANR	1286686	CompoundStatement		59:55:1221:1221	1286505	1					
ANR	1286687	ExpressionStatement	env -> exception_index = EXCP_DEBUG	63:20:1312:1345	1286505	0	True				
ANR	1286688	AssignmentExpression	env -> exception_index = EXCP_DEBUG		1286505	0		=			
ANR	1286689	PtrMemberAccess	env -> exception_index		1286505	0					
ANR	1286690	Identifier	env		1286505	0					
ANR	1286691	Identifier	exception_index		1286505	1					
ANR	1286692	Identifier	EXCP_DEBUG		1286505	1					
ANR	1286693	ExpressionStatement	cpu_loop_exit ( env )	65:20:1368:1386	1286505	1	True				
ANR	1286694	CallExpression	cpu_loop_exit ( env )		1286505	0					
ANR	1286695	Callee	cpu_loop_exit		1286505	0					
ANR	1286696	Identifier	cpu_loop_exit		1286505	0					
ANR	1286697	ArgumentList	env		1286505	1					
ANR	1286698	Argument	env		1286505	0					
ANR	1286699	Identifier	env		1286505	0					
ANR	1286700	ElseStatement	else		1286505	0					
ANR	1286701	CompoundStatement		65:23:1344:1344	1286505	0					
ANR	1286702	ExpressionStatement	"cpu_get_tb_cpu_state ( env , & pc , & cs_base , & cpu_flags )"	69:20:1435:1487	1286505	0	True				
ANR	1286703	CallExpression	"cpu_get_tb_cpu_state ( env , & pc , & cs_base , & cpu_flags )"		1286505	0					
ANR	1286704	Callee	cpu_get_tb_cpu_state		1286505	0					
ANR	1286705	Identifier	cpu_get_tb_cpu_state		1286505	0					
ANR	1286706	ArgumentList	env		1286505	1					
ANR	1286707	Argument	env		1286505	0					
ANR	1286708	Identifier	env		1286505	0					
ANR	1286709	Argument	& pc		1286505	1					
ANR	1286710	UnaryOperationExpression	& pc		1286505	0					
ANR	1286711	UnaryOperator	&		1286505	0					
ANR	1286712	Identifier	pc		1286505	1					
ANR	1286713	Argument	& cs_base		1286505	2					
ANR	1286714	UnaryOperationExpression	& cs_base		1286505	0					
ANR	1286715	UnaryOperator	&		1286505	0					
ANR	1286716	Identifier	cs_base		1286505	1					
ANR	1286717	Argument	& cpu_flags		1286505	3					
ANR	1286718	UnaryOperationExpression	& cpu_flags		1286505	0					
ANR	1286719	UnaryOperator	&		1286505	0					
ANR	1286720	Identifier	cpu_flags		1286505	1					
ANR	1286721	ExpressionStatement	"tb_gen_code ( env , pc , cs_base , cpu_flags , 1 )"	71:20:1510:1553	1286505	1	True				
ANR	1286722	CallExpression	"tb_gen_code ( env , pc , cs_base , cpu_flags , 1 )"		1286505	0					
ANR	1286723	Callee	tb_gen_code		1286505	0					
ANR	1286724	Identifier	tb_gen_code		1286505	0					
ANR	1286725	ArgumentList	env		1286505	1					
ANR	1286726	Argument	env		1286505	0					
ANR	1286727	Identifier	env		1286505	0					
ANR	1286728	Argument	pc		1286505	1					
ANR	1286729	Identifier	pc		1286505	0					
ANR	1286730	Argument	cs_base		1286505	2					
ANR	1286731	Identifier	cs_base		1286505	0					
ANR	1286732	Argument	cpu_flags		1286505	3					
ANR	1286733	Identifier	cpu_flags		1286505	0					
ANR	1286734	Argument	1		1286505	4					
ANR	1286735	PrimaryExpression	1		1286505	0					
ANR	1286736	ExpressionStatement	"cpu_resume_from_signal ( env , NULL )"	73:20:1576:1609	1286505	2	True				
ANR	1286737	CallExpression	"cpu_resume_from_signal ( env , NULL )"		1286505	0					
ANR	1286738	Callee	cpu_resume_from_signal		1286505	0					
ANR	1286739	Identifier	cpu_resume_from_signal		1286505	0					
ANR	1286740	ArgumentList	env		1286505	1					
ANR	1286741	Argument	env		1286505	0					
ANR	1286742	Identifier	env		1286505	0					
ANR	1286743	Argument	NULL		1286505	1					
ANR	1286744	Identifier	NULL		1286505	0					
ANR	1286745	ElseStatement	else		1286505	0					
ANR	1286746	CompoundStatement		77:15:1593:1593	1286505	0					
ANR	1286747	ExpressionStatement	wp -> flags &= ~BP_WATCHPOINT_HIT	81:12:1676:1707	1286505	0	True				
ANR	1286748	AssignmentExpression	wp -> flags &= ~BP_WATCHPOINT_HIT		1286505	0		&=			
ANR	1286749	PtrMemberAccess	wp -> flags		1286505	0					
ANR	1286750	Identifier	wp		1286505	0					
ANR	1286751	Identifier	flags		1286505	1					
ANR	1286752	Identifier	~BP_WATCHPOINT_HIT		1286505	1					
ANR	1286753	ReturnType	static void		1286505	1					
ANR	1286754	Identifier	check_watchpoint		1286505	2					
ANR	1286755	ParameterList	"int offset , int len_mask , int flags"		1286505	3					
ANR	1286756	Parameter	int offset	1:29:29:38	1286505	0	True				
ANR	1286757	ParameterType	int		1286505	0					
ANR	1286758	Identifier	offset		1286505	1					
ANR	1286759	Parameter	int len_mask	1:41:41:52	1286505	1	True				
ANR	1286760	ParameterType	int		1286505	0					
ANR	1286761	Identifier	len_mask		1286505	1					
ANR	1286762	Parameter	int flags	1:55:55:63	1286505	2	True				
ANR	1286763	ParameterType	int		1286505	0					
ANR	1286764	Identifier	flags		1286505	1					
ANR	1286765	CFGEntryNode	ENTRY		1286505		True				
ANR	1286766	CFGExitNode	EXIT		1286505		True				
ANR	1286767	Symbol	wp -> vaddr		1286505						
ANR	1286768	Symbol	tb_find_pc		1286505						
ANR	1286769	Symbol	flags		1286505						
ANR	1286770	Symbol	TARGET_PAGE_MASK		1286505						
ANR	1286771	Symbol	vaddr		1286505						
ANR	1286772	Symbol	BP_WATCHPOINT_HIT		1286505						
ANR	1286773	Symbol	cpu_single_env		1286505						
ANR	1286774	Symbol	env -> mem_io_vaddr		1286505						
ANR	1286775	Symbol	wp		1286505						
ANR	1286776	Symbol	* wp		1286505						
ANR	1286777	Symbol	env -> watchpoint_hit		1286505						
ANR	1286778	Symbol	CPU_INTERRUPT_DEBUG		1286505						
ANR	1286779	Symbol	~BP_WATCHPOINT_HIT		1286505						
ANR	1286780	Symbol	len_mask		1286505						
ANR	1286781	Symbol	NULL		1286505						
ANR	1286782	Symbol	offset		1286505						
ANR	1286783	Symbol	* env		1286505						
ANR	1286784	Symbol	env		1286505						
ANR	1286785	Symbol	cs_base		1286505						
ANR	1286786	Symbol	tb		1286505						
ANR	1286787	Symbol	cpu_flags		1286505						
ANR	1286788	Symbol	env -> mem_io_pc		1286505						
ANR	1286789	Symbol	pc		1286505						
ANR	1286790	Symbol	BP_STOP_BEFORE_ACCESS		1286505						
ANR	1286791	Symbol	& cpu_flags		1286505						
ANR	1286792	Symbol	EXCP_DEBUG		1286505						
ANR	1286793	Symbol	env -> exception_index		1286505						
ANR	1286794	Symbol	& cs_base		1286505						
ANR	1286795	Symbol	wp -> len_mask		1286505						
ANR	1286796	Symbol	& pc		1286505						
ANR	1286797	Symbol	wp -> flags		1286505						
