command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1125765	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bt_parse_0.c								
ANR	1125766	Function	bt_parse	1:0:0:1160							
ANR	1125767	FunctionDef	bt_parse (const char * opt)		1125766	0					
ANR	1125768	CompoundStatement		3:0:38:1160	1125766	0					
ANR	1125769	IdentifierDeclStatement	"const char * endp , * p ;"	5:4:45:65	1125766	0	True				
ANR	1125770	IdentifierDecl	* endp		1125766	0					
ANR	1125771	IdentifierDeclType	const char *		1125766	0					
ANR	1125772	Identifier	endp		1125766	1					
ANR	1125773	IdentifierDecl	* p		1125766	1					
ANR	1125774	IdentifierDeclType	const char *		1125766	0					
ANR	1125775	Identifier	p		1125766	1					
ANR	1125776	IdentifierDeclStatement	int vlan ;	7:4:72:80	1125766	1	True				
ANR	1125777	IdentifierDecl	vlan		1125766	0					
ANR	1125778	IdentifierDeclType	int		1125766	0					
ANR	1125779	Identifier	vlan		1125766	1					
ANR	1125780	IfStatement	"if ( strstart ( opt , ""hci"" , & endp ) )"		1125766	2					
ANR	1125781	Condition	"strstart ( opt , ""hci"" , & endp )"	11:8:93:119	1125766	0	True				
ANR	1125782	CallExpression	"strstart ( opt , ""hci"" , & endp )"		1125766	0					
ANR	1125783	Callee	strstart		1125766	0					
ANR	1125784	Identifier	strstart		1125766	0					
ANR	1125785	ArgumentList	opt		1125766	1					
ANR	1125786	Argument	opt		1125766	0					
ANR	1125787	Identifier	opt		1125766	0					
ANR	1125788	Argument	"""hci"""		1125766	1					
ANR	1125789	PrimaryExpression	"""hci"""		1125766	0					
ANR	1125790	Argument	& endp		1125766	2					
ANR	1125791	UnaryOperationExpression	& endp		1125766	0					
ANR	1125792	UnaryOperator	&		1125766	0					
ANR	1125793	Identifier	endp		1125766	1					
ANR	1125794	CompoundStatement		9:37:83:83	1125766	1					
ANR	1125795	IfStatement	"if ( ! * endp || * endp == ',' )"		1125766	0					
ANR	1125796	Condition	"! * endp || * endp == ','"	13:12:137:158	1125766	0	True				
ANR	1125797	OrExpression	"! * endp || * endp == ','"		1125766	0		||			
ANR	1125798	UnaryOperationExpression	! * endp		1125766	0					
ANR	1125799	UnaryOperator	!		1125766	0					
ANR	1125800	UnaryOperationExpression	* endp		1125766	1					
ANR	1125801	UnaryOperator	*		1125766	0					
ANR	1125802	Identifier	endp		1125766	1					
ANR	1125803	EqualityExpression	"* endp == ','"		1125766	1		==			
ANR	1125804	UnaryOperationExpression	* endp		1125766	0					
ANR	1125805	UnaryOperator	*		1125766	0					
ANR	1125806	Identifier	endp		1125766	1					
ANR	1125807	PrimaryExpression	"','"		1125766	1					
ANR	1125808	CompoundStatement		11:36:122:122	1125766	1					
ANR	1125809	IfStatement	if ( * endp )		1125766	0					
ANR	1125810	Condition	* endp	15:16:180:184	1125766	0	True				
ANR	1125811	UnaryOperationExpression	* endp		1125766	0					
ANR	1125812	UnaryOperator	*		1125766	0					
ANR	1125813	Identifier	endp		1125766	1					
ANR	1125814	IfStatement	"if ( ! strstart ( endp , "",vlan="" , 0 ) )"		1125766	1					
ANR	1125815	Condition	"! strstart ( endp , "",vlan="" , 0 )"	17:20:208:235	1125766	0	True				
ANR	1125816	UnaryOperationExpression	"! strstart ( endp , "",vlan="" , 0 )"		1125766	0					
ANR	1125817	UnaryOperator	!		1125766	0					
ANR	1125818	CallExpression	"strstart ( endp , "",vlan="" , 0 )"		1125766	1					
ANR	1125819	Callee	strstart		1125766	0					
ANR	1125820	Identifier	strstart		1125766	0					
ANR	1125821	ArgumentList	endp		1125766	1					
ANR	1125822	Argument	endp		1125766	0					
ANR	1125823	Identifier	endp		1125766	0					
ANR	1125824	Argument	""",vlan="""		1125766	1					
ANR	1125825	PrimaryExpression	""",vlan="""		1125766	0					
ANR	1125826	Argument	0		1125766	2					
ANR	1125827	PrimaryExpression	0		1125766	0					
ANR	1125828	ExpressionStatement	opt = endp + 1	19:20:259:273	1125766	1	True				
ANR	1125829	AssignmentExpression	opt = endp + 1		1125766	0		=			
ANR	1125830	Identifier	opt		1125766	0					
ANR	1125831	AdditiveExpression	endp + 1		1125766	1		+			
ANR	1125832	Identifier	endp		1125766	0					
ANR	1125833	PrimaryExpression	1		1125766	1					
ANR	1125834	ReturnStatement	return bt_hci_parse ( opt ) ;	23:12:290:314	1125766	1	True				
ANR	1125835	CallExpression	bt_hci_parse ( opt )		1125766	0					
ANR	1125836	Callee	bt_hci_parse		1125766	0					
ANR	1125837	Identifier	bt_hci_parse		1125766	0					
ANR	1125838	ArgumentList	opt		1125766	1					
ANR	1125839	Argument	opt		1125766	0					
ANR	1125840	Identifier	opt		1125766	0					
ANR	1125841	ElseStatement	else		1125766	0					
ANR	1125842	IfStatement	"if ( strstart ( opt , ""vhci"" , & endp ) )"		1125766	0					
ANR	1125843	Condition	"strstart ( opt , ""vhci"" , & endp )"	27:15:342:369	1125766	0	True				
ANR	1125844	CallExpression	"strstart ( opt , ""vhci"" , & endp )"		1125766	0					
ANR	1125845	Callee	strstart		1125766	0					
ANR	1125846	Identifier	strstart		1125766	0					
ANR	1125847	ArgumentList	opt		1125766	1					
ANR	1125848	Argument	opt		1125766	0					
ANR	1125849	Identifier	opt		1125766	0					
ANR	1125850	Argument	"""vhci"""		1125766	1					
ANR	1125851	PrimaryExpression	"""vhci"""		1125766	0					
ANR	1125852	Argument	& endp		1125766	2					
ANR	1125853	UnaryOperationExpression	& endp		1125766	0					
ANR	1125854	UnaryOperator	&		1125766	0					
ANR	1125855	Identifier	endp		1125766	1					
ANR	1125856	CompoundStatement		25:45:333:333	1125766	1					
ANR	1125857	IfStatement	"if ( ! * endp || * endp == ',' )"		1125766	0					
ANR	1125858	Condition	"! * endp || * endp == ','"	29:12:387:408	1125766	0	True				
ANR	1125859	OrExpression	"! * endp || * endp == ','"		1125766	0		||			
ANR	1125860	UnaryOperationExpression	! * endp		1125766	0					
ANR	1125861	UnaryOperator	!		1125766	0					
ANR	1125862	UnaryOperationExpression	* endp		1125766	1					
ANR	1125863	UnaryOperator	*		1125766	0					
ANR	1125864	Identifier	endp		1125766	1					
ANR	1125865	EqualityExpression	"* endp == ','"		1125766	1		==			
ANR	1125866	UnaryOperationExpression	* endp		1125766	0					
ANR	1125867	UnaryOperator	*		1125766	0					
ANR	1125868	Identifier	endp		1125766	1					
ANR	1125869	PrimaryExpression	"','"		1125766	1					
ANR	1125870	CompoundStatement		27:36:372:372	1125766	1					
ANR	1125871	IfStatement	if ( * endp )		1125766	0					
ANR	1125872	Condition	* endp	31:16:430:434	1125766	0	True				
ANR	1125873	UnaryOperationExpression	* endp		1125766	0					
ANR	1125874	UnaryOperator	*		1125766	0					
ANR	1125875	Identifier	endp		1125766	1					
ANR	1125876	CompoundStatement		29:23:398:398	1125766	1					
ANR	1125877	IfStatement	"if ( strstart ( endp , "",vlan="" , & p ) )"		1125766	0					
ANR	1125878	Condition	"strstart ( endp , "",vlan="" , & p )"	33:20:460:487	1125766	0	True				
ANR	1125879	CallExpression	"strstart ( endp , "",vlan="" , & p )"		1125766	0					
ANR	1125880	Callee	strstart		1125766	0					
ANR	1125881	Identifier	strstart		1125766	0					
ANR	1125882	ArgumentList	endp		1125766	1					
ANR	1125883	Argument	endp		1125766	0					
ANR	1125884	Identifier	endp		1125766	0					
ANR	1125885	Argument	""",vlan="""		1125766	1					
ANR	1125886	PrimaryExpression	""",vlan="""		1125766	0					
ANR	1125887	Argument	& p		1125766	2					
ANR	1125888	UnaryOperationExpression	& p		1125766	0					
ANR	1125889	UnaryOperator	&		1125766	0					
ANR	1125890	Identifier	p		1125766	1					
ANR	1125891	CompoundStatement		31:50:451:451	1125766	1					
ANR	1125892	ExpressionStatement	"vlan = strtol ( p , ( char * * ) & endp , 0 )"	35:20:513:549	1125766	0	True				
ANR	1125893	AssignmentExpression	"vlan = strtol ( p , ( char * * ) & endp , 0 )"		1125766	0		=			
ANR	1125894	Identifier	vlan		1125766	0					
ANR	1125895	CallExpression	"strtol ( p , ( char * * ) & endp , 0 )"		1125766	1					
ANR	1125896	Callee	strtol		1125766	0					
ANR	1125897	Identifier	strtol		1125766	0					
ANR	1125898	ArgumentList	p		1125766	1					
ANR	1125899	Argument	p		1125766	0					
ANR	1125900	Identifier	p		1125766	0					
ANR	1125901	Argument	( char * * ) & endp		1125766	1					
ANR	1125902	CastExpression	( char * * ) & endp		1125766	0					
ANR	1125903	CastTarget	char * *		1125766	0					
ANR	1125904	UnaryOperationExpression	& endp		1125766	1					
ANR	1125905	UnaryOperator	&		1125766	0					
ANR	1125906	Identifier	endp		1125766	1					
ANR	1125907	Argument	0		1125766	2					
ANR	1125908	PrimaryExpression	0		1125766	0					
ANR	1125909	IfStatement	if ( * endp )		1125766	1					
ANR	1125910	Condition	* endp	37:24:576:580	1125766	0	True				
ANR	1125911	UnaryOperationExpression	* endp		1125766	0					
ANR	1125912	UnaryOperator	*		1125766	0					
ANR	1125913	Identifier	endp		1125766	1					
ANR	1125914	CompoundStatement		35:31:544:544	1125766	1					
ANR	1125915	ExpressionStatement	"fprintf ( stderr , ""qemu: bad scatternet '%s'\\n"" , p )"	39:24:610:659	1125766	0	True				
ANR	1125916	CallExpression	"fprintf ( stderr , ""qemu: bad scatternet '%s'\\n"" , p )"		1125766	0					
ANR	1125917	Callee	fprintf		1125766	0					
ANR	1125918	Identifier	fprintf		1125766	0					
ANR	1125919	ArgumentList	stderr		1125766	1					
ANR	1125920	Argument	stderr		1125766	0					
ANR	1125921	Identifier	stderr		1125766	0					
ANR	1125922	Argument	"""qemu: bad scatternet '%s'\\n"""		1125766	1					
ANR	1125923	PrimaryExpression	"""qemu: bad scatternet '%s'\\n"""		1125766	0					
ANR	1125924	Argument	p		1125766	2					
ANR	1125925	Identifier	p		1125766	0					
ANR	1125926	ReturnStatement	return 1 ;	41:24:686:694	1125766	1	True				
ANR	1125927	PrimaryExpression	1		1125766	0					
ANR	1125928	ElseStatement	else		1125766	0					
ANR	1125929	CompoundStatement		43:23:704:704	1125766	0					
ANR	1125930	ExpressionStatement	"fprintf ( stderr , ""qemu: bad parameter '%s'\\n"" , endp + 1 )"	47:20:766:821	1125766	0	True				
ANR	1125931	CallExpression	"fprintf ( stderr , ""qemu: bad parameter '%s'\\n"" , endp + 1 )"		1125766	0					
ANR	1125932	Callee	fprintf		1125766	0					
ANR	1125933	Identifier	fprintf		1125766	0					
ANR	1125934	ArgumentList	stderr		1125766	1					
ANR	1125935	Argument	stderr		1125766	0					
ANR	1125936	Identifier	stderr		1125766	0					
ANR	1125937	Argument	"""qemu: bad parameter '%s'\\n"""		1125766	1					
ANR	1125938	PrimaryExpression	"""qemu: bad parameter '%s'\\n"""		1125766	0					
ANR	1125939	Argument	endp + 1		1125766	2					
ANR	1125940	AdditiveExpression	endp + 1		1125766	0		+			
ANR	1125941	Identifier	endp		1125766	0					
ANR	1125942	PrimaryExpression	1		1125766	1					
ANR	1125943	ReturnStatement	return 1 ;	49:20:844:852	1125766	1	True				
ANR	1125944	PrimaryExpression	1		1125766	0					
ANR	1125945	ElseStatement	else		1125766	0					
ANR	1125946	ExpressionStatement	vlan = 0	55:16:910:918	1125766	0	True				
ANR	1125947	AssignmentExpression	vlan = 0		1125766	0		=			
ANR	1125948	Identifier	vlan		1125766	0					
ANR	1125949	PrimaryExpression	0		1125766	1					
ANR	1125950	ExpressionStatement	bt_vhci_add ( vlan )	59:12:935:952	1125766	1	True				
ANR	1125951	CallExpression	bt_vhci_add ( vlan )		1125766	0					
ANR	1125952	Callee	bt_vhci_add		1125766	0					
ANR	1125953	Identifier	bt_vhci_add		1125766	0					
ANR	1125954	ArgumentList	vlan		1125766	1					
ANR	1125955	Argument	vlan		1125766	0					
ANR	1125956	Identifier	vlan		1125766	0					
ANR	1125957	ReturnStatement	return 0 ;	61:12:967:975	1125766	2	True				
ANR	1125958	PrimaryExpression	0		1125766	0					
ANR	1125959	ElseStatement	else		1125766	0					
ANR	1125960	IfStatement	"if ( strstart ( opt , ""device:"" , & endp ) )"		1125766	0					
ANR	1125961	Condition	"strstart ( opt , ""device:"" , & endp )"	65:15:1004:1034	1125766	0	True				
ANR	1125962	CallExpression	"strstart ( opt , ""device:"" , & endp )"		1125766	0					
ANR	1125963	Callee	strstart		1125766	0					
ANR	1125964	Identifier	strstart		1125766	0					
ANR	1125965	ArgumentList	opt		1125766	1					
ANR	1125966	Argument	opt		1125766	0					
ANR	1125967	Identifier	opt		1125766	0					
ANR	1125968	Argument	"""device:"""		1125766	1					
ANR	1125969	PrimaryExpression	"""device:"""		1125766	0					
ANR	1125970	Argument	& endp		1125766	2					
ANR	1125971	UnaryOperationExpression	& endp		1125766	0					
ANR	1125972	UnaryOperator	&		1125766	0					
ANR	1125973	Identifier	endp		1125766	1					
ANR	1125974	ReturnStatement	return ! bt_device_add ( endp ) ;	67:8:1046:1073	1125766	1	True				
ANR	1125975	UnaryOperationExpression	! bt_device_add ( endp )		1125766	0					
ANR	1125976	UnaryOperator	!		1125766	0					
ANR	1125977	CallExpression	bt_device_add ( endp )		1125766	1					
ANR	1125978	Callee	bt_device_add		1125766	0					
ANR	1125979	Identifier	bt_device_add		1125766	0					
ANR	1125980	ArgumentList	endp		1125766	1					
ANR	1125981	Argument	endp		1125766	0					
ANR	1125982	Identifier	endp		1125766	0					
ANR	1125983	ExpressionStatement	"fprintf ( stderr , ""qemu: bad bluetooth parameter '%s'\\n"" , opt )"	71:4:1082:1142	1125766	3	True				
ANR	1125984	CallExpression	"fprintf ( stderr , ""qemu: bad bluetooth parameter '%s'\\n"" , opt )"		1125766	0					
ANR	1125985	Callee	fprintf		1125766	0					
ANR	1125986	Identifier	fprintf		1125766	0					
ANR	1125987	ArgumentList	stderr		1125766	1					
ANR	1125988	Argument	stderr		1125766	0					
ANR	1125989	Identifier	stderr		1125766	0					
ANR	1125990	Argument	"""qemu: bad bluetooth parameter '%s'\\n"""		1125766	1					
ANR	1125991	PrimaryExpression	"""qemu: bad bluetooth parameter '%s'\\n"""		1125766	0					
ANR	1125992	Argument	opt		1125766	2					
ANR	1125993	Identifier	opt		1125766	0					
ANR	1125994	ReturnStatement	return 1 ;	73:4:1149:1157	1125766	4	True				
ANR	1125995	PrimaryExpression	1		1125766	0					
ANR	1125996	ReturnType	static int		1125766	1					
ANR	1125997	Identifier	bt_parse		1125766	2					
ANR	1125998	ParameterList	const char * opt		1125766	3					
ANR	1125999	Parameter	const char * opt	1:20:20:34	1125766	0	True				
ANR	1126000	ParameterType	const char *		1125766	0					
ANR	1126001	Identifier	opt		1125766	1					
ANR	1126002	CFGEntryNode	ENTRY		1125766		True				
ANR	1126003	CFGExitNode	EXIT		1125766		True				
ANR	1126004	Symbol	p		1125766						
ANR	1126005	Symbol	opt		1125766						
ANR	1126006	Symbol	bt_hci_parse		1125766						
ANR	1126007	Symbol	vlan		1125766						
ANR	1126008	Symbol	& endp		1125766						
ANR	1126009	Symbol	* endp		1125766						
ANR	1126010	Symbol	strtol		1125766						
ANR	1126011	Symbol	& p		1125766						
ANR	1126012	Symbol	endp		1125766						
ANR	1126013	Symbol	strstart		1125766						
ANR	1126014	Symbol	stderr		1125766						
ANR	1126015	Symbol	bt_device_add		1125766						
