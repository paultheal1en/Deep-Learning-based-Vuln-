command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8197777	File	/home/p4ultr4n/workplace/ReVeal/raw_code/tcg_constant_folding_0.c								
ANR	8197778	Function	tcg_constant_folding	1:0:0:27496							
ANR	8197779	FunctionDef	tcg_constant_folding (TCGContext * s)		8197778	0					
ANR	8197780	CompoundStatement		3:0:49:27496	8197778	0					
ANR	8197781	IdentifierDeclStatement	"int oi , oi_next , nb_temps , nb_globals ;"	5:4:56:93	8197778	0	True				
ANR	8197782	IdentifierDecl	oi		8197778	0					
ANR	8197783	IdentifierDeclType	int		8197778	0					
ANR	8197784	Identifier	oi		8197778	1					
ANR	8197785	IdentifierDecl	oi_next		8197778	1					
ANR	8197786	IdentifierDeclType	int		8197778	0					
ANR	8197787	Identifier	oi_next		8197778	1					
ANR	8197788	IdentifierDecl	nb_temps		8197778	2					
ANR	8197789	IdentifierDeclType	int		8197778	0					
ANR	8197790	Identifier	nb_temps		8197778	1					
ANR	8197791	IdentifierDecl	nb_globals		8197778	3					
ANR	8197792	IdentifierDeclType	int		8197778	0					
ANR	8197793	Identifier	nb_globals		8197778	1					
ANR	8197794	ExpressionStatement	nb_temps = s -> nb_temps	19:4:365:387	8197778	1	True				
ANR	8197795	AssignmentExpression	nb_temps = s -> nb_temps		8197778	0		=			
ANR	8197796	Identifier	nb_temps		8197778	0					
ANR	8197797	PtrMemberAccess	s -> nb_temps		8197778	1					
ANR	8197798	Identifier	s		8197778	0					
ANR	8197799	Identifier	nb_temps		8197778	1					
ANR	8197800	ExpressionStatement	nb_globals = s -> nb_globals	21:4:394:420	8197778	2	True				
ANR	8197801	AssignmentExpression	nb_globals = s -> nb_globals		8197778	0		=			
ANR	8197802	Identifier	nb_globals		8197778	0					
ANR	8197803	PtrMemberAccess	s -> nb_globals		8197778	1					
ANR	8197804	Identifier	s		8197778	0					
ANR	8197805	Identifier	nb_globals		8197778	1					
ANR	8197806	ExpressionStatement	reset_all_temps ( nb_temps )	23:4:427:452	8197778	3	True				
ANR	8197807	CallExpression	reset_all_temps ( nb_temps )		8197778	0					
ANR	8197808	Callee	reset_all_temps		8197778	0					
ANR	8197809	Identifier	reset_all_temps		8197778	0					
ANR	8197810	ArgumentList	nb_temps		8197778	1					
ANR	8197811	Argument	nb_temps		8197778	0					
ANR	8197812	Identifier	nb_temps		8197778	0					
ANR	8197813	ForStatement	for ( oi = s -> gen_first_op_idx ; oi >= 0 ; oi = oi_next )		8197778	4					
ANR	8197814	ForInit	oi = s -> gen_first_op_idx ;	27:9:466:490	8197778	0	True				
ANR	8197815	AssignmentExpression	oi = s -> gen_first_op_idx		8197778	0		=			
ANR	8197816	Identifier	oi		8197778	0					
ANR	8197817	PtrMemberAccess	s -> gen_first_op_idx		8197778	1					
ANR	8197818	Identifier	s		8197778	0					
ANR	8197819	Identifier	gen_first_op_idx		8197778	1					
ANR	8197820	Condition	oi >= 0	27:35:492:498	8197778	1	True				
ANR	8197821	RelationalExpression	oi >= 0		8197778	0		>=			
ANR	8197822	Identifier	oi		8197778	0					
ANR	8197823	PrimaryExpression	0		8197778	1					
ANR	8197824	AssignmentExpression	oi = oi_next	27:44:501:512	8197778	2	True	=			
ANR	8197825	Identifier	oi		8197778	0					
ANR	8197826	Identifier	oi_next		8197778	1					
ANR	8197827	CompoundStatement		41:8:731:770	8197778	3					
ANR	8197828	IdentifierDeclStatement	"tcg_target_ulong mask , partmask , affected ;"	29:8:526:567	8197778	0	True				
ANR	8197829	IdentifierDecl	mask		8197778	0					
ANR	8197830	IdentifierDeclType	tcg_target_ulong		8197778	0					
ANR	8197831	Identifier	mask		8197778	1					
ANR	8197832	IdentifierDecl	partmask		8197778	1					
ANR	8197833	IdentifierDeclType	tcg_target_ulong		8197778	0					
ANR	8197834	Identifier	partmask		8197778	1					
ANR	8197835	IdentifierDecl	affected		8197778	2					
ANR	8197836	IdentifierDeclType	tcg_target_ulong		8197778	0					
ANR	8197837	Identifier	affected		8197778	1					
ANR	8197838	IdentifierDeclStatement	"int nb_oargs , nb_iargs , i ;"	31:8:578:603	8197778	1	True				
ANR	8197839	IdentifierDecl	nb_oargs		8197778	0					
ANR	8197840	IdentifierDeclType	int		8197778	0					
ANR	8197841	Identifier	nb_oargs		8197778	1					
ANR	8197842	IdentifierDecl	nb_iargs		8197778	1					
ANR	8197843	IdentifierDeclType	int		8197778	0					
ANR	8197844	Identifier	nb_iargs		8197778	1					
ANR	8197845	IdentifierDecl	i		8197778	2					
ANR	8197846	IdentifierDeclType	int		8197778	0					
ANR	8197847	Identifier	i		8197778	1					
ANR	8197848	IdentifierDeclStatement	TCGArg tmp ;	33:8:614:624	8197778	2	True				
ANR	8197849	IdentifierDecl	tmp		8197778	0					
ANR	8197850	IdentifierDeclType	TCGArg		8197778	0					
ANR	8197851	Identifier	tmp		8197778	1					
ANR	8197852	Statement	TCGOp	37:8:637:641	8197778	3	True				
ANR	8197853	Statement	*	37:14:643:643	8197778	4	True				
ANR	8197854	Statement	const	37:16:645:649	8197778	5	True				
ANR	8197855	ExpressionStatement	op = & s -> gen_op_buf [ oi ]	37:22:651:674	8197778	6	True				
ANR	8197856	AssignmentExpression	op = & s -> gen_op_buf [ oi ]		8197778	0		=			
ANR	8197857	Identifier	op		8197778	0					
ANR	8197858	UnaryOperationExpression	& s -> gen_op_buf [ oi ]		8197778	1					
ANR	8197859	UnaryOperator	&		8197778	0					
ANR	8197860	ArrayIndexing	s -> gen_op_buf [ oi ]		8197778	1					
ANR	8197861	PtrMemberAccess	s -> gen_op_buf		8197778	0					
ANR	8197862	Identifier	s		8197778	0					
ANR	8197863	Identifier	gen_op_buf		8197778	1					
ANR	8197864	Identifier	oi		8197778	1					
ANR	8197865	Statement	TCGArg	39:8:685:690	8197778	7	True				
ANR	8197866	Statement	*	39:15:692:692	8197778	8	True				
ANR	8197867	Statement	const	39:17:694:698	8197778	9	True				
ANR	8197868	ExpressionStatement	args = & s -> gen_opparam_buf [ op -> args ]	39:23:700:736	8197778	10	True				
ANR	8197869	AssignmentExpression	args = & s -> gen_opparam_buf [ op -> args ]		8197778	0		=			
ANR	8197870	Identifier	args		8197778	0					
ANR	8197871	UnaryOperationExpression	& s -> gen_opparam_buf [ op -> args ]		8197778	1					
ANR	8197872	UnaryOperator	&		8197778	0					
ANR	8197873	ArrayIndexing	s -> gen_opparam_buf [ op -> args ]		8197778	1					
ANR	8197874	PtrMemberAccess	s -> gen_opparam_buf		8197778	0					
ANR	8197875	Identifier	s		8197778	0					
ANR	8197876	Identifier	gen_opparam_buf		8197778	1					
ANR	8197877	PtrMemberAccess	op -> args		8197778	1					
ANR	8197878	Identifier	op		8197778	0					
ANR	8197879	Identifier	args		8197778	1					
ANR	8197880	IdentifierDeclStatement	TCGOpcode opc = op -> opc ;	41:8:747:770	8197778	11	True				
ANR	8197881	IdentifierDecl	opc = op -> opc		8197778	0					
ANR	8197882	IdentifierDeclType	TCGOpcode		8197778	0					
ANR	8197883	Identifier	opc		8197778	1					
ANR	8197884	AssignmentExpression	opc = op -> opc		8197778	2		=			
ANR	8197885	Identifier	opc		8197778	0					
ANR	8197886	PtrMemberAccess	op -> opc		8197778	1					
ANR	8197887	Identifier	op		8197778	0					
ANR	8197888	Identifier	opc		8197778	1					
ANR	8197889	IdentifierDeclStatement	const TCGOpDef * def = & tcg_op_defs [ opc ] ;	43:8:781:820	8197778	12	True				
ANR	8197890	IdentifierDecl	* def = & tcg_op_defs [ opc ]		8197778	0					
ANR	8197891	IdentifierDeclType	const TCGOpDef *		8197778	0					
ANR	8197892	Identifier	def		8197778	1					
ANR	8197893	AssignmentExpression	* def = & tcg_op_defs [ opc ]		8197778	2		=			
ANR	8197894	Identifier	def		8197778	0					
ANR	8197895	UnaryOperationExpression	& tcg_op_defs [ opc ]		8197778	1					
ANR	8197896	UnaryOperator	&		8197778	0					
ANR	8197897	ArrayIndexing	tcg_op_defs [ opc ]		8197778	1					
ANR	8197898	Identifier	tcg_op_defs		8197778	0					
ANR	8197899	Identifier	opc		8197778	1					
ANR	8197900	ExpressionStatement	oi_next = op -> next	47:8:833:851	8197778	13	True				
ANR	8197901	AssignmentExpression	oi_next = op -> next		8197778	0		=			
ANR	8197902	Identifier	oi_next		8197778	0					
ANR	8197903	PtrMemberAccess	op -> next		8197778	1					
ANR	8197904	Identifier	op		8197778	0					
ANR	8197905	Identifier	next		8197778	1					
ANR	8197906	IfStatement	if ( opc == INDEX_op_call )		8197778	14					
ANR	8197907	Condition	opc == INDEX_op_call	49:12:866:885	8197778	0	True				
ANR	8197908	EqualityExpression	opc == INDEX_op_call		8197778	0		==			
ANR	8197909	Identifier	opc		8197778	0					
ANR	8197910	Identifier	INDEX_op_call		8197778	1					
ANR	8197911	CompoundStatement		47:34:838:838	8197778	1					
ANR	8197912	ExpressionStatement	nb_oargs = op -> callo	51:12:903:923	8197778	0	True				
ANR	8197913	AssignmentExpression	nb_oargs = op -> callo		8197778	0		=			
ANR	8197914	Identifier	nb_oargs		8197778	0					
ANR	8197915	PtrMemberAccess	op -> callo		8197778	1					
ANR	8197916	Identifier	op		8197778	0					
ANR	8197917	Identifier	callo		8197778	1					
ANR	8197918	ExpressionStatement	nb_iargs = op -> calli	53:12:938:958	8197778	1	True				
ANR	8197919	AssignmentExpression	nb_iargs = op -> calli		8197778	0		=			
ANR	8197920	Identifier	nb_iargs		8197778	0					
ANR	8197921	PtrMemberAccess	op -> calli		8197778	1					
ANR	8197922	Identifier	op		8197778	0					
ANR	8197923	Identifier	calli		8197778	1					
ANR	8197924	ElseStatement	else		8197778	0					
ANR	8197925	CompoundStatement		53:15:926:926	8197778	0					
ANR	8197926	ExpressionStatement	nb_oargs = def -> nb_oargs	57:12:991:1015	8197778	0	True				
ANR	8197927	AssignmentExpression	nb_oargs = def -> nb_oargs		8197778	0		=			
ANR	8197928	Identifier	nb_oargs		8197778	0					
ANR	8197929	PtrMemberAccess	def -> nb_oargs		8197778	1					
ANR	8197930	Identifier	def		8197778	0					
ANR	8197931	Identifier	nb_oargs		8197778	1					
ANR	8197932	ExpressionStatement	nb_iargs = def -> nb_iargs	59:12:1030:1054	8197778	1	True				
ANR	8197933	AssignmentExpression	nb_iargs = def -> nb_iargs		8197778	0		=			
ANR	8197934	Identifier	nb_iargs		8197778	0					
ANR	8197935	PtrMemberAccess	def -> nb_iargs		8197778	1					
ANR	8197936	Identifier	def		8197778	0					
ANR	8197937	Identifier	nb_iargs		8197778	1					
ANR	8197938	ForStatement	for ( i = nb_oargs ; i < nb_oargs + nb_iargs ; i ++ )		8197778	15					
ANR	8197939	ForInit	i = nb_oargs ;	67:13:1118:1130	8197778	0	True				
ANR	8197940	AssignmentExpression	i = nb_oargs		8197778	0		=			
ANR	8197941	Identifier	i		8197778	0					
ANR	8197942	Identifier	nb_oargs		8197778	1					
ANR	8197943	Condition	i < nb_oargs + nb_iargs	67:27:1132:1154	8197778	1	True				
ANR	8197944	RelationalExpression	i < nb_oargs + nb_iargs		8197778	0		<			
ANR	8197945	Identifier	i		8197778	0					
ANR	8197946	AdditiveExpression	nb_oargs + nb_iargs		8197778	1		+			
ANR	8197947	Identifier	nb_oargs		8197778	0					
ANR	8197948	Identifier	nb_iargs		8197778	1					
ANR	8197949	PostIncDecOperationExpression	i ++	67:52:1157:1159	8197778	2	True				
ANR	8197950	Identifier	i		8197778	0					
ANR	8197951	IncDec	++		8197778	1					
ANR	8197952	CompoundStatement		65:57:1112:1112	8197778	3					
ANR	8197953	IfStatement	if ( temps [ args [ i ] ] . state == TCG_TEMP_COPY )		8197778	0					
ANR	8197954	Condition	temps [ args [ i ] ] . state == TCG_TEMP_COPY	69:16:1181:1217	8197778	0	True				
ANR	8197955	EqualityExpression	temps [ args [ i ] ] . state == TCG_TEMP_COPY		8197778	0		==			
ANR	8197956	MemberAccess	temps [ args [ i ] ] . state		8197778	0					
ANR	8197957	ArrayIndexing	temps [ args [ i ] ]		8197778	0					
ANR	8197958	Identifier	temps		8197778	0					
ANR	8197959	ArrayIndexing	args [ i ]		8197778	1					
ANR	8197960	Identifier	args		8197778	0					
ANR	8197961	Identifier	i		8197778	1					
ANR	8197962	Identifier	state		8197778	1					
ANR	8197963	Identifier	TCG_TEMP_COPY		8197778	1					
ANR	8197964	CompoundStatement		67:55:1170:1170	8197778	1					
ANR	8197965	ExpressionStatement	"args [ i ] = find_better_copy ( s , args [ i ] )"	71:16:1239:1277	8197778	0	True				
ANR	8197966	AssignmentExpression	"args [ i ] = find_better_copy ( s , args [ i ] )"		8197778	0		=			
ANR	8197967	ArrayIndexing	args [ i ]		8197778	0					
ANR	8197968	Identifier	args		8197778	0					
ANR	8197969	Identifier	i		8197778	1					
ANR	8197970	CallExpression	"find_better_copy ( s , args [ i ] )"		8197778	1					
ANR	8197971	Callee	find_better_copy		8197778	0					
ANR	8197972	Identifier	find_better_copy		8197778	0					
ANR	8197973	ArgumentList	s		8197778	1					
ANR	8197974	Argument	s		8197778	0					
ANR	8197975	Identifier	s		8197778	0					
ANR	8197976	Argument	args [ i ]		8197778	1					
ANR	8197977	ArrayIndexing	args [ i ]		8197778	0					
ANR	8197978	Identifier	args		8197778	0					
ANR	8197979	Identifier	i		8197778	1					
ANR	8197980	SwitchStatement	switch ( opc )		8197778	16					
ANR	8197981	Condition	opc	81:16:1396:1398	8197778	0	True				
ANR	8197982	Identifier	opc		8197778	0					
ANR	8197983	CompoundStatement		79:21:1351:1351	8197778	1					
ANR	8197984	Statement	CASE_OP_32_64	83:8:1412:1424	8197778	0	True				
ANR	8197985	Statement	(	83:21:1425:1425	8197778	1	True				
ANR	8197986	Statement	add	83:22:1426:1428	8197778	2	True				
ANR	8197987	Statement	)	83:25:1429:1429	8197778	3	True				
ANR	8197988	Statement	:	83:26:1430:1430	8197778	4	True				
ANR	8197989	Statement	CASE_OP_32_64	85:8:1441:1453	8197778	5	True				
ANR	8197990	Statement	(	85:21:1454:1454	8197778	6	True				
ANR	8197991	Statement	mul	85:22:1455:1457	8197778	7	True				
ANR	8197992	Statement	)	85:25:1458:1458	8197778	8	True				
ANR	8197993	Statement	:	85:26:1459:1459	8197778	9	True				
ANR	8197994	Statement	CASE_OP_32_64	87:8:1470:1482	8197778	10	True				
ANR	8197995	Statement	(	87:21:1483:1483	8197778	11	True				
ANR	8197996	Statement	and	87:22:1484:1486	8197778	12	True				
ANR	8197997	Statement	)	87:25:1487:1487	8197778	13	True				
ANR	8197998	Statement	:	87:26:1488:1488	8197778	14	True				
ANR	8197999	Statement	CASE_OP_32_64	89:8:1499:1511	8197778	15	True				
ANR	8198000	Statement	(	89:21:1512:1512	8197778	16	True				
ANR	8198001	Statement	or	89:22:1513:1514	8197778	17	True				
ANR	8198002	Statement	)	89:24:1515:1515	8197778	18	True				
ANR	8198003	Statement	:	89:25:1516:1516	8197778	19	True				
ANR	8198004	Statement	CASE_OP_32_64	91:8:1527:1539	8197778	20	True				
ANR	8198005	Statement	(	91:21:1540:1540	8197778	21	True				
ANR	8198006	Statement	xor	91:22:1541:1543	8197778	22	True				
ANR	8198007	Statement	)	91:25:1544:1544	8197778	23	True				
ANR	8198008	Statement	:	91:26:1545:1545	8197778	24	True				
ANR	8198009	Statement	CASE_OP_32_64	93:8:1556:1568	8197778	25	True				
ANR	8198010	Statement	(	93:21:1569:1569	8197778	26	True				
ANR	8198011	Statement	eqv	93:22:1570:1572	8197778	27	True				
ANR	8198012	Statement	)	93:25:1573:1573	8197778	28	True				
ANR	8198013	Statement	:	93:26:1574:1574	8197778	29	True				
ANR	8198014	Statement	CASE_OP_32_64	95:8:1585:1597	8197778	30	True				
ANR	8198015	Statement	(	95:21:1598:1598	8197778	31	True				
ANR	8198016	Statement	nand	95:22:1599:1602	8197778	32	True				
ANR	8198017	Statement	)	95:26:1603:1603	8197778	33	True				
ANR	8198018	Statement	:	95:27:1604:1604	8197778	34	True				
ANR	8198019	Statement	CASE_OP_32_64	97:8:1615:1627	8197778	35	True				
ANR	8198020	Statement	(	97:21:1628:1628	8197778	36	True				
ANR	8198021	Statement	nor	97:22:1629:1631	8197778	37	True				
ANR	8198022	Statement	)	97:25:1632:1632	8197778	38	True				
ANR	8198023	Statement	:	97:26:1633:1633	8197778	39	True				
ANR	8198024	Statement	CASE_OP_32_64	99:8:1644:1656	8197778	40	True				
ANR	8198025	Statement	(	99:21:1657:1657	8197778	41	True				
ANR	8198026	Statement	muluh	99:22:1658:1662	8197778	42	True				
ANR	8198027	Statement	)	99:27:1663:1663	8197778	43	True				
ANR	8198028	Statement	:	99:28:1664:1664	8197778	44	True				
ANR	8198029	Statement	CASE_OP_32_64	101:8:1675:1687	8197778	45	True				
ANR	8198030	Statement	(	101:21:1688:1688	8197778	46	True				
ANR	8198031	Statement	mulsh	101:22:1689:1693	8197778	47	True				
ANR	8198032	Statement	)	101:27:1694:1694	8197778	48	True				
ANR	8198033	Statement	:	101:28:1695:1695	8197778	49	True				
ANR	8198034	ExpressionStatement	"swap_commutative ( args [ 0 ] , & args [ 1 ] , & args [ 2 ] )"	103:12:1710:1755	8197778	50	True				
ANR	8198035	CallExpression	"swap_commutative ( args [ 0 ] , & args [ 1 ] , & args [ 2 ] )"		8197778	0					
ANR	8198036	Callee	swap_commutative		8197778	0					
ANR	8198037	Identifier	swap_commutative		8197778	0					
ANR	8198038	ArgumentList	args [ 0 ]		8197778	1					
ANR	8198039	Argument	args [ 0 ]		8197778	0					
ANR	8198040	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8198041	Identifier	args		8197778	0					
ANR	8198042	PrimaryExpression	0		8197778	1					
ANR	8198043	Argument	& args [ 1 ]		8197778	1					
ANR	8198044	UnaryOperationExpression	& args [ 1 ]		8197778	0					
ANR	8198045	UnaryOperator	&		8197778	0					
ANR	8198046	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198047	Identifier	args		8197778	0					
ANR	8198048	PrimaryExpression	1		8197778	1					
ANR	8198049	Argument	& args [ 2 ]		8197778	2					
ANR	8198050	UnaryOperationExpression	& args [ 2 ]		8197778	0					
ANR	8198051	UnaryOperator	&		8197778	0					
ANR	8198052	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198053	Identifier	args		8197778	0					
ANR	8198054	PrimaryExpression	2		8197778	1					
ANR	8198055	BreakStatement	break ;	105:12:1770:1775	8197778	51	True				
ANR	8198056	Statement	CASE_OP_32_64	107:8:1786:1798	8197778	52	True				
ANR	8198057	Statement	(	107:21:1799:1799	8197778	53	True				
ANR	8198058	Statement	brcond	107:22:1800:1805	8197778	54	True				
ANR	8198059	Statement	)	107:28:1806:1806	8197778	55	True				
ANR	8198060	Statement	:	107:29:1807:1807	8197778	56	True				
ANR	8198061	IfStatement	"if ( swap_commutative ( - 1 , & args [ 0 ] , & args [ 1 ] ) )"		8197778	57					
ANR	8198062	Condition	"swap_commutative ( - 1 , & args [ 0 ] , & args [ 1 ] )"	109:16:1826:1865	8197778	0	True				
ANR	8198063	CallExpression	"swap_commutative ( - 1 , & args [ 0 ] , & args [ 1 ] )"		8197778	0					
ANR	8198064	Callee	swap_commutative		8197778	0					
ANR	8198065	Identifier	swap_commutative		8197778	0					
ANR	8198066	ArgumentList	- 1		8197778	1					
ANR	8198067	Argument	- 1		8197778	0					
ANR	8198068	UnaryOperationExpression	- 1		8197778	0					
ANR	8198069	UnaryOperator	-		8197778	0					
ANR	8198070	PrimaryExpression	1		8197778	1					
ANR	8198071	Argument	& args [ 0 ]		8197778	1					
ANR	8198072	UnaryOperationExpression	& args [ 0 ]		8197778	0					
ANR	8198073	UnaryOperator	&		8197778	0					
ANR	8198074	ArrayIndexing	args [ 0 ]		8197778	1					
ANR	8198075	Identifier	args		8197778	0					
ANR	8198076	PrimaryExpression	0		8197778	1					
ANR	8198077	Argument	& args [ 1 ]		8197778	2					
ANR	8198078	UnaryOperationExpression	& args [ 1 ]		8197778	0					
ANR	8198079	UnaryOperator	&		8197778	0					
ANR	8198080	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198081	Identifier	args		8197778	0					
ANR	8198082	PrimaryExpression	1		8197778	1					
ANR	8198083	CompoundStatement		107:58:1818:1818	8197778	1					
ANR	8198084	ExpressionStatement	args [ 2 ] = tcg_swap_cond ( args [ 2 ] )	111:16:1887:1919	8197778	0	True				
ANR	8198085	AssignmentExpression	args [ 2 ] = tcg_swap_cond ( args [ 2 ] )		8197778	0		=			
ANR	8198086	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8198087	Identifier	args		8197778	0					
ANR	8198088	PrimaryExpression	2		8197778	1					
ANR	8198089	CallExpression	tcg_swap_cond ( args [ 2 ] )		8197778	1					
ANR	8198090	Callee	tcg_swap_cond		8197778	0					
ANR	8198091	Identifier	tcg_swap_cond		8197778	0					
ANR	8198092	ArgumentList	args [ 2 ]		8197778	1					
ANR	8198093	Argument	args [ 2 ]		8197778	0					
ANR	8198094	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8198095	Identifier	args		8197778	0					
ANR	8198096	PrimaryExpression	2		8197778	1					
ANR	8198097	BreakStatement	break ;	115:12:1949:1954	8197778	58	True				
ANR	8198098	Statement	CASE_OP_32_64	117:8:1965:1977	8197778	59	True				
ANR	8198099	Statement	(	117:21:1978:1978	8197778	60	True				
ANR	8198100	Statement	setcond	117:22:1979:1985	8197778	61	True				
ANR	8198101	Statement	)	117:29:1986:1986	8197778	62	True				
ANR	8198102	Statement	:	117:30:1987:1987	8197778	63	True				
ANR	8198103	IfStatement	"if ( swap_commutative ( args [ 0 ] , & args [ 1 ] , & args [ 2 ] ) )"		8197778	64					
ANR	8198104	Condition	"swap_commutative ( args [ 0 ] , & args [ 1 ] , & args [ 2 ] )"	119:16:2006:2050	8197778	0	True				
ANR	8198105	CallExpression	"swap_commutative ( args [ 0 ] , & args [ 1 ] , & args [ 2 ] )"		8197778	0					
ANR	8198106	Callee	swap_commutative		8197778	0					
ANR	8198107	Identifier	swap_commutative		8197778	0					
ANR	8198108	ArgumentList	args [ 0 ]		8197778	1					
ANR	8198109	Argument	args [ 0 ]		8197778	0					
ANR	8198110	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8198111	Identifier	args		8197778	0					
ANR	8198112	PrimaryExpression	0		8197778	1					
ANR	8198113	Argument	& args [ 1 ]		8197778	1					
ANR	8198114	UnaryOperationExpression	& args [ 1 ]		8197778	0					
ANR	8198115	UnaryOperator	&		8197778	0					
ANR	8198116	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198117	Identifier	args		8197778	0					
ANR	8198118	PrimaryExpression	1		8197778	1					
ANR	8198119	Argument	& args [ 2 ]		8197778	2					
ANR	8198120	UnaryOperationExpression	& args [ 2 ]		8197778	0					
ANR	8198121	UnaryOperator	&		8197778	0					
ANR	8198122	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198123	Identifier	args		8197778	0					
ANR	8198124	PrimaryExpression	2		8197778	1					
ANR	8198125	CompoundStatement		117:63:2003:2003	8197778	1					
ANR	8198126	ExpressionStatement	args [ 3 ] = tcg_swap_cond ( args [ 3 ] )	121:16:2072:2104	8197778	0	True				
ANR	8198127	AssignmentExpression	args [ 3 ] = tcg_swap_cond ( args [ 3 ] )		8197778	0		=			
ANR	8198128	ArrayIndexing	args [ 3 ]		8197778	0					
ANR	8198129	Identifier	args		8197778	0					
ANR	8198130	PrimaryExpression	3		8197778	1					
ANR	8198131	CallExpression	tcg_swap_cond ( args [ 3 ] )		8197778	1					
ANR	8198132	Callee	tcg_swap_cond		8197778	0					
ANR	8198133	Identifier	tcg_swap_cond		8197778	0					
ANR	8198134	ArgumentList	args [ 3 ]		8197778	1					
ANR	8198135	Argument	args [ 3 ]		8197778	0					
ANR	8198136	ArrayIndexing	args [ 3 ]		8197778	0					
ANR	8198137	Identifier	args		8197778	0					
ANR	8198138	PrimaryExpression	3		8197778	1					
ANR	8198139	BreakStatement	break ;	125:12:2134:2139	8197778	65	True				
ANR	8198140	Statement	CASE_OP_32_64	127:8:2150:2162	8197778	66	True				
ANR	8198141	Statement	(	127:21:2163:2163	8197778	67	True				
ANR	8198142	Statement	movcond	127:22:2164:2170	8197778	68	True				
ANR	8198143	Statement	)	127:29:2171:2171	8197778	69	True				
ANR	8198144	Statement	:	127:30:2172:2172	8197778	70	True				
ANR	8198145	IfStatement	"if ( swap_commutative ( - 1 , & args [ 1 ] , & args [ 2 ] ) )"		8197778	71					
ANR	8198146	Condition	"swap_commutative ( - 1 , & args [ 1 ] , & args [ 2 ] )"	129:16:2191:2230	8197778	0	True				
ANR	8198147	CallExpression	"swap_commutative ( - 1 , & args [ 1 ] , & args [ 2 ] )"		8197778	0					
ANR	8198148	Callee	swap_commutative		8197778	0					
ANR	8198149	Identifier	swap_commutative		8197778	0					
ANR	8198150	ArgumentList	- 1		8197778	1					
ANR	8198151	Argument	- 1		8197778	0					
ANR	8198152	UnaryOperationExpression	- 1		8197778	0					
ANR	8198153	UnaryOperator	-		8197778	0					
ANR	8198154	PrimaryExpression	1		8197778	1					
ANR	8198155	Argument	& args [ 1 ]		8197778	1					
ANR	8198156	UnaryOperationExpression	& args [ 1 ]		8197778	0					
ANR	8198157	UnaryOperator	&		8197778	0					
ANR	8198158	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198159	Identifier	args		8197778	0					
ANR	8198160	PrimaryExpression	1		8197778	1					
ANR	8198161	Argument	& args [ 2 ]		8197778	2					
ANR	8198162	UnaryOperationExpression	& args [ 2 ]		8197778	0					
ANR	8198163	UnaryOperator	&		8197778	0					
ANR	8198164	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198165	Identifier	args		8197778	0					
ANR	8198166	PrimaryExpression	2		8197778	1					
ANR	8198167	CompoundStatement		127:58:2183:2183	8197778	1					
ANR	8198168	ExpressionStatement	args [ 5 ] = tcg_swap_cond ( args [ 5 ] )	131:16:2252:2284	8197778	0	True				
ANR	8198169	AssignmentExpression	args [ 5 ] = tcg_swap_cond ( args [ 5 ] )		8197778	0		=			
ANR	8198170	ArrayIndexing	args [ 5 ]		8197778	0					
ANR	8198171	Identifier	args		8197778	0					
ANR	8198172	PrimaryExpression	5		8197778	1					
ANR	8198173	CallExpression	tcg_swap_cond ( args [ 5 ] )		8197778	1					
ANR	8198174	Callee	tcg_swap_cond		8197778	0					
ANR	8198175	Identifier	tcg_swap_cond		8197778	0					
ANR	8198176	ArgumentList	args [ 5 ]		8197778	1					
ANR	8198177	Argument	args [ 5 ]		8197778	0					
ANR	8198178	ArrayIndexing	args [ 5 ]		8197778	0					
ANR	8198179	Identifier	args		8197778	0					
ANR	8198180	PrimaryExpression	5		8197778	1					
ANR	8198181	IfStatement	"if ( swap_commutative ( args [ 0 ] , & args [ 4 ] , & args [ 3 ] ) )"		8197778	72					
ANR	8198182	Condition	"swap_commutative ( args [ 0 ] , & args [ 4 ] , & args [ 3 ] )"	141:16:2516:2560	8197778	0	True				
ANR	8198183	CallExpression	"swap_commutative ( args [ 0 ] , & args [ 4 ] , & args [ 3 ] )"		8197778	0					
ANR	8198184	Callee	swap_commutative		8197778	0					
ANR	8198185	Identifier	swap_commutative		8197778	0					
ANR	8198186	ArgumentList	args [ 0 ]		8197778	1					
ANR	8198187	Argument	args [ 0 ]		8197778	0					
ANR	8198188	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8198189	Identifier	args		8197778	0					
ANR	8198190	PrimaryExpression	0		8197778	1					
ANR	8198191	Argument	& args [ 4 ]		8197778	1					
ANR	8198192	UnaryOperationExpression	& args [ 4 ]		8197778	0					
ANR	8198193	UnaryOperator	&		8197778	0					
ANR	8198194	ArrayIndexing	args [ 4 ]		8197778	1					
ANR	8198195	Identifier	args		8197778	0					
ANR	8198196	PrimaryExpression	4		8197778	1					
ANR	8198197	Argument	& args [ 3 ]		8197778	2					
ANR	8198198	UnaryOperationExpression	& args [ 3 ]		8197778	0					
ANR	8198199	UnaryOperator	&		8197778	0					
ANR	8198200	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8198201	Identifier	args		8197778	0					
ANR	8198202	PrimaryExpression	3		8197778	1					
ANR	8198203	CompoundStatement		139:63:2513:2513	8197778	1					
ANR	8198204	ExpressionStatement	args [ 5 ] = tcg_invert_cond ( args [ 5 ] )	143:16:2582:2616	8197778	0	True				
ANR	8198205	AssignmentExpression	args [ 5 ] = tcg_invert_cond ( args [ 5 ] )		8197778	0		=			
ANR	8198206	ArrayIndexing	args [ 5 ]		8197778	0					
ANR	8198207	Identifier	args		8197778	0					
ANR	8198208	PrimaryExpression	5		8197778	1					
ANR	8198209	CallExpression	tcg_invert_cond ( args [ 5 ] )		8197778	1					
ANR	8198210	Callee	tcg_invert_cond		8197778	0					
ANR	8198211	Identifier	tcg_invert_cond		8197778	0					
ANR	8198212	ArgumentList	args [ 5 ]		8197778	1					
ANR	8198213	Argument	args [ 5 ]		8197778	0					
ANR	8198214	ArrayIndexing	args [ 5 ]		8197778	0					
ANR	8198215	Identifier	args		8197778	0					
ANR	8198216	PrimaryExpression	5		8197778	1					
ANR	8198217	BreakStatement	break ;	147:12:2646:2651	8197778	73	True				
ANR	8198218	Statement	CASE_OP_32_64	149:8:2662:2674	8197778	74	True				
ANR	8198219	Statement	(	149:21:2675:2675	8197778	75	True				
ANR	8198220	Statement	add2	149:22:2676:2679	8197778	76	True				
ANR	8198221	Statement	)	149:26:2680:2680	8197778	77	True				
ANR	8198222	Statement	:	149:27:2681:2681	8197778	78	True				
ANR	8198223	ExpressionStatement	"swap_commutative ( args [ 0 ] , & args [ 2 ] , & args [ 4 ] )"	151:12:2696:2741	8197778	79	True				
ANR	8198224	CallExpression	"swap_commutative ( args [ 0 ] , & args [ 2 ] , & args [ 4 ] )"		8197778	0					
ANR	8198225	Callee	swap_commutative		8197778	0					
ANR	8198226	Identifier	swap_commutative		8197778	0					
ANR	8198227	ArgumentList	args [ 0 ]		8197778	1					
ANR	8198228	Argument	args [ 0 ]		8197778	0					
ANR	8198229	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8198230	Identifier	args		8197778	0					
ANR	8198231	PrimaryExpression	0		8197778	1					
ANR	8198232	Argument	& args [ 2 ]		8197778	1					
ANR	8198233	UnaryOperationExpression	& args [ 2 ]		8197778	0					
ANR	8198234	UnaryOperator	&		8197778	0					
ANR	8198235	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198236	Identifier	args		8197778	0					
ANR	8198237	PrimaryExpression	2		8197778	1					
ANR	8198238	Argument	& args [ 4 ]		8197778	2					
ANR	8198239	UnaryOperationExpression	& args [ 4 ]		8197778	0					
ANR	8198240	UnaryOperator	&		8197778	0					
ANR	8198241	ArrayIndexing	args [ 4 ]		8197778	1					
ANR	8198242	Identifier	args		8197778	0					
ANR	8198243	PrimaryExpression	4		8197778	1					
ANR	8198244	ExpressionStatement	"swap_commutative ( args [ 1 ] , & args [ 3 ] , & args [ 5 ] )"	153:12:2756:2801	8197778	80	True				
ANR	8198245	CallExpression	"swap_commutative ( args [ 1 ] , & args [ 3 ] , & args [ 5 ] )"		8197778	0					
ANR	8198246	Callee	swap_commutative		8197778	0					
ANR	8198247	Identifier	swap_commutative		8197778	0					
ANR	8198248	ArgumentList	args [ 1 ]		8197778	1					
ANR	8198249	Argument	args [ 1 ]		8197778	0					
ANR	8198250	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8198251	Identifier	args		8197778	0					
ANR	8198252	PrimaryExpression	1		8197778	1					
ANR	8198253	Argument	& args [ 3 ]		8197778	1					
ANR	8198254	UnaryOperationExpression	& args [ 3 ]		8197778	0					
ANR	8198255	UnaryOperator	&		8197778	0					
ANR	8198256	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8198257	Identifier	args		8197778	0					
ANR	8198258	PrimaryExpression	3		8197778	1					
ANR	8198259	Argument	& args [ 5 ]		8197778	2					
ANR	8198260	UnaryOperationExpression	& args [ 5 ]		8197778	0					
ANR	8198261	UnaryOperator	&		8197778	0					
ANR	8198262	ArrayIndexing	args [ 5 ]		8197778	1					
ANR	8198263	Identifier	args		8197778	0					
ANR	8198264	PrimaryExpression	5		8197778	1					
ANR	8198265	BreakStatement	break ;	155:12:2816:2821	8197778	81	True				
ANR	8198266	Statement	CASE_OP_32_64	157:8:2832:2844	8197778	82	True				
ANR	8198267	Statement	(	157:21:2845:2845	8197778	83	True				
ANR	8198268	Statement	mulu2	157:22:2846:2850	8197778	84	True				
ANR	8198269	Statement	)	157:27:2851:2851	8197778	85	True				
ANR	8198270	Statement	:	157:28:2852:2852	8197778	86	True				
ANR	8198271	Statement	CASE_OP_32_64	159:8:2863:2875	8197778	87	True				
ANR	8198272	Statement	(	159:21:2876:2876	8197778	88	True				
ANR	8198273	Statement	muls2	159:22:2877:2881	8197778	89	True				
ANR	8198274	Statement	)	159:27:2882:2882	8197778	90	True				
ANR	8198275	Statement	:	159:28:2883:2883	8197778	91	True				
ANR	8198276	ExpressionStatement	"swap_commutative ( args [ 0 ] , & args [ 2 ] , & args [ 3 ] )"	161:12:2898:2943	8197778	92	True				
ANR	8198277	CallExpression	"swap_commutative ( args [ 0 ] , & args [ 2 ] , & args [ 3 ] )"		8197778	0					
ANR	8198278	Callee	swap_commutative		8197778	0					
ANR	8198279	Identifier	swap_commutative		8197778	0					
ANR	8198280	ArgumentList	args [ 0 ]		8197778	1					
ANR	8198281	Argument	args [ 0 ]		8197778	0					
ANR	8198282	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8198283	Identifier	args		8197778	0					
ANR	8198284	PrimaryExpression	0		8197778	1					
ANR	8198285	Argument	& args [ 2 ]		8197778	1					
ANR	8198286	UnaryOperationExpression	& args [ 2 ]		8197778	0					
ANR	8198287	UnaryOperator	&		8197778	0					
ANR	8198288	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198289	Identifier	args		8197778	0					
ANR	8198290	PrimaryExpression	2		8197778	1					
ANR	8198291	Argument	& args [ 3 ]		8197778	2					
ANR	8198292	UnaryOperationExpression	& args [ 3 ]		8197778	0					
ANR	8198293	UnaryOperator	&		8197778	0					
ANR	8198294	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8198295	Identifier	args		8197778	0					
ANR	8198296	PrimaryExpression	3		8197778	1					
ANR	8198297	BreakStatement	break ;	163:12:2958:2963	8197778	93	True				
ANR	8198298	Label	case INDEX_op_brcond2_i32 :	165:8:2974:2999	8197778	94	True				
ANR	8198299	Identifier	INDEX_op_brcond2_i32		8197778	0					
ANR	8198300	IfStatement	"if ( swap_commutative2 ( & args [ 0 ] , & args [ 2 ] ) )"		8197778	95					
ANR	8198301	Condition	"swap_commutative2 ( & args [ 0 ] , & args [ 2 ] )"	167:16:3018:3054	8197778	0	True				
ANR	8198302	CallExpression	"swap_commutative2 ( & args [ 0 ] , & args [ 2 ] )"		8197778	0					
ANR	8198303	Callee	swap_commutative2		8197778	0					
ANR	8198304	Identifier	swap_commutative2		8197778	0					
ANR	8198305	ArgumentList	& args [ 0 ]		8197778	1					
ANR	8198306	Argument	& args [ 0 ]		8197778	0					
ANR	8198307	UnaryOperationExpression	& args [ 0 ]		8197778	0					
ANR	8198308	UnaryOperator	&		8197778	0					
ANR	8198309	ArrayIndexing	args [ 0 ]		8197778	1					
ANR	8198310	Identifier	args		8197778	0					
ANR	8198311	PrimaryExpression	0		8197778	1					
ANR	8198312	Argument	& args [ 2 ]		8197778	1					
ANR	8198313	UnaryOperationExpression	& args [ 2 ]		8197778	0					
ANR	8198314	UnaryOperator	&		8197778	0					
ANR	8198315	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198316	Identifier	args		8197778	0					
ANR	8198317	PrimaryExpression	2		8197778	1					
ANR	8198318	CompoundStatement		165:55:3007:3007	8197778	1					
ANR	8198319	ExpressionStatement	args [ 4 ] = tcg_swap_cond ( args [ 4 ] )	169:16:3076:3108	8197778	0	True				
ANR	8198320	AssignmentExpression	args [ 4 ] = tcg_swap_cond ( args [ 4 ] )		8197778	0		=			
ANR	8198321	ArrayIndexing	args [ 4 ]		8197778	0					
ANR	8198322	Identifier	args		8197778	0					
ANR	8198323	PrimaryExpression	4		8197778	1					
ANR	8198324	CallExpression	tcg_swap_cond ( args [ 4 ] )		8197778	1					
ANR	8198325	Callee	tcg_swap_cond		8197778	0					
ANR	8198326	Identifier	tcg_swap_cond		8197778	0					
ANR	8198327	ArgumentList	args [ 4 ]		8197778	1					
ANR	8198328	Argument	args [ 4 ]		8197778	0					
ANR	8198329	ArrayIndexing	args [ 4 ]		8197778	0					
ANR	8198330	Identifier	args		8197778	0					
ANR	8198331	PrimaryExpression	4		8197778	1					
ANR	8198332	BreakStatement	break ;	173:12:3138:3143	8197778	96	True				
ANR	8198333	Label	case INDEX_op_setcond2_i32 :	175:8:3154:3180	8197778	97	True				
ANR	8198334	Identifier	INDEX_op_setcond2_i32		8197778	0					
ANR	8198335	IfStatement	"if ( swap_commutative2 ( & args [ 1 ] , & args [ 3 ] ) )"		8197778	98					
ANR	8198336	Condition	"swap_commutative2 ( & args [ 1 ] , & args [ 3 ] )"	177:16:3199:3235	8197778	0	True				
ANR	8198337	CallExpression	"swap_commutative2 ( & args [ 1 ] , & args [ 3 ] )"		8197778	0					
ANR	8198338	Callee	swap_commutative2		8197778	0					
ANR	8198339	Identifier	swap_commutative2		8197778	0					
ANR	8198340	ArgumentList	& args [ 1 ]		8197778	1					
ANR	8198341	Argument	& args [ 1 ]		8197778	0					
ANR	8198342	UnaryOperationExpression	& args [ 1 ]		8197778	0					
ANR	8198343	UnaryOperator	&		8197778	0					
ANR	8198344	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198345	Identifier	args		8197778	0					
ANR	8198346	PrimaryExpression	1		8197778	1					
ANR	8198347	Argument	& args [ 3 ]		8197778	1					
ANR	8198348	UnaryOperationExpression	& args [ 3 ]		8197778	0					
ANR	8198349	UnaryOperator	&		8197778	0					
ANR	8198350	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8198351	Identifier	args		8197778	0					
ANR	8198352	PrimaryExpression	3		8197778	1					
ANR	8198353	CompoundStatement		175:55:3188:3188	8197778	1					
ANR	8198354	ExpressionStatement	args [ 5 ] = tcg_swap_cond ( args [ 5 ] )	179:16:3257:3289	8197778	0	True				
ANR	8198355	AssignmentExpression	args [ 5 ] = tcg_swap_cond ( args [ 5 ] )		8197778	0		=			
ANR	8198356	ArrayIndexing	args [ 5 ]		8197778	0					
ANR	8198357	Identifier	args		8197778	0					
ANR	8198358	PrimaryExpression	5		8197778	1					
ANR	8198359	CallExpression	tcg_swap_cond ( args [ 5 ] )		8197778	1					
ANR	8198360	Callee	tcg_swap_cond		8197778	0					
ANR	8198361	Identifier	tcg_swap_cond		8197778	0					
ANR	8198362	ArgumentList	args [ 5 ]		8197778	1					
ANR	8198363	Argument	args [ 5 ]		8197778	0					
ANR	8198364	ArrayIndexing	args [ 5 ]		8197778	0					
ANR	8198365	Identifier	args		8197778	0					
ANR	8198366	PrimaryExpression	5		8197778	1					
ANR	8198367	BreakStatement	break ;	183:12:3319:3324	8197778	99	True				
ANR	8198368	Label	default :	185:8:3335:3342	8197778	100	True				
ANR	8198369	Identifier	default		8197778	0					
ANR	8198370	BreakStatement	break ;	187:12:3357:3362	8197778	101	True				
ANR	8198371	SwitchStatement	switch ( opc )		8197778	17					
ANR	8198372	Condition	opc	197:16:3517:3519	8197778	0	True				
ANR	8198373	Identifier	opc		8197778	0					
ANR	8198374	CompoundStatement		195:21:3472:3472	8197778	1					
ANR	8198375	Statement	CASE_OP_32_64	199:8:3533:3545	8197778	0	True				
ANR	8198376	Statement	(	199:21:3546:3546	8197778	1	True				
ANR	8198377	Statement	shl	199:22:3547:3549	8197778	2	True				
ANR	8198378	Statement	)	199:25:3550:3550	8197778	3	True				
ANR	8198379	Statement	:	199:26:3551:3551	8197778	4	True				
ANR	8198380	Statement	CASE_OP_32_64	201:8:3562:3574	8197778	5	True				
ANR	8198381	Statement	(	201:21:3575:3575	8197778	6	True				
ANR	8198382	Statement	shr	201:22:3576:3578	8197778	7	True				
ANR	8198383	Statement	)	201:25:3579:3579	8197778	8	True				
ANR	8198384	Statement	:	201:26:3580:3580	8197778	9	True				
ANR	8198385	Statement	CASE_OP_32_64	203:8:3591:3603	8197778	10	True				
ANR	8198386	Statement	(	203:21:3604:3604	8197778	11	True				
ANR	8198387	Statement	sar	203:22:3605:3607	8197778	12	True				
ANR	8198388	Statement	)	203:25:3608:3608	8197778	13	True				
ANR	8198389	Statement	:	203:26:3609:3609	8197778	14	True				
ANR	8198390	Statement	CASE_OP_32_64	205:8:3620:3632	8197778	15	True				
ANR	8198391	Statement	(	205:21:3633:3633	8197778	16	True				
ANR	8198392	Statement	rotl	205:22:3634:3637	8197778	17	True				
ANR	8198393	Statement	)	205:26:3638:3638	8197778	18	True				
ANR	8198394	Statement	:	205:27:3639:3639	8197778	19	True				
ANR	8198395	Statement	CASE_OP_32_64	207:8:3650:3662	8197778	20	True				
ANR	8198396	Statement	(	207:21:3663:3663	8197778	21	True				
ANR	8198397	Statement	rotr	207:22:3664:3667	8197778	22	True				
ANR	8198398	Statement	)	207:26:3668:3668	8197778	23	True				
ANR	8198399	Statement	:	207:27:3669:3669	8197778	24	True				
ANR	8198400	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0 )		8197778	25					
ANR	8198401	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0	209:16:3688:3769	8197778	0	True				
ANR	8198402	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0		8197778	0		&&			
ANR	8198403	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8198404	MemberAccess	temps [ args [ 1 ] ] . state		8197778	0					
ANR	8198405	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8198406	Identifier	temps		8197778	0					
ANR	8198407	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198408	Identifier	args		8197778	0					
ANR	8198409	PrimaryExpression	1		8197778	1					
ANR	8198410	Identifier	state		8197778	1					
ANR	8198411	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198412	EqualityExpression	temps [ args [ 1 ] ] . val == 0		8197778	1		==			
ANR	8198413	MemberAccess	temps [ args [ 1 ] ] . val		8197778	0					
ANR	8198414	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8198415	Identifier	temps		8197778	0					
ANR	8198416	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198417	Identifier	args		8197778	0					
ANR	8198418	PrimaryExpression	1		8197778	1					
ANR	8198419	Identifier	val		8197778	1					
ANR	8198420	PrimaryExpression	0		8197778	1					
ANR	8198421	CompoundStatement		209:44:3722:3722	8197778	1					
ANR	8198422	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"	213:16:3791:3832	8197778	0	True				
ANR	8198423	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"		8197778	0					
ANR	8198424	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8198425	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8198426	ArgumentList	s		8197778	1					
ANR	8198427	Argument	s		8197778	0					
ANR	8198428	Identifier	s		8197778	0					
ANR	8198429	Argument	op		8197778	1					
ANR	8198430	Identifier	op		8197778	0					
ANR	8198431	Argument	args		8197778	2					
ANR	8198432	Identifier	args		8197778	0					
ANR	8198433	Argument	args [ 0 ]		8197778	3					
ANR	8198434	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8198435	Identifier	args		8197778	0					
ANR	8198436	PrimaryExpression	0		8197778	1					
ANR	8198437	Argument	0		8197778	4					
ANR	8198438	PrimaryExpression	0		8197778	0					
ANR	8198439	ContinueStatement	continue ;	215:16:3851:3859	8197778	1	True				
ANR	8198440	BreakStatement	break ;	219:12:3889:3894	8197778	26	True				
ANR	8198441	Statement	CASE_OP_32_64	221:8:3905:3917	8197778	27	True				
ANR	8198442	Statement	(	221:21:3918:3918	8197778	28	True				
ANR	8198443	Statement	sub	221:22:3919:3921	8197778	29	True				
ANR	8198444	Statement	)	221:25:3922:3922	8197778	30	True				
ANR	8198445	Statement	:	221:26:3923:3923	8197778	31	True				
ANR	8198446	CompoundStatement		225:16:3942:3955	8197778	32					
ANR	8198447	IdentifierDeclStatement	TCGOpcode neg_op ;	225:16:3957:3973	8197778	0	True				
ANR	8198448	IdentifierDecl	neg_op		8197778	0					
ANR	8198449	IdentifierDeclType	TCGOpcode		8197778	0					
ANR	8198450	Identifier	neg_op		8197778	1					
ANR	8198451	IdentifierDeclStatement	bool have_neg ;	227:16:3992:4005	8197778	1	True				
ANR	8198452	IdentifierDecl	have_neg		8197778	0					
ANR	8198453	IdentifierDeclType	bool		8197778	0					
ANR	8198454	Identifier	have_neg		8197778	1					
ANR	8198455	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8197778	2					
ANR	8198456	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	231:20:4030:4067	8197778	0	True				
ANR	8198457	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8198458	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8198459	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8198460	Identifier	temps		8197778	0					
ANR	8198461	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198462	Identifier	args		8197778	0					
ANR	8198463	PrimaryExpression	2		8197778	1					
ANR	8198464	Identifier	state		8197778	1					
ANR	8198465	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198466	CompoundStatement		229:60:4020:4020	8197778	1					
ANR	8198467	BreakStatement	break ;	235:20:4160:4165	8197778	0	True				
ANR	8198468	IfStatement	if ( opc == INDEX_op_sub_i32 )		8197778	3					
ANR	8198469	Condition	opc == INDEX_op_sub_i32	239:20:4207:4229	8197778	0	True				
ANR	8198470	EqualityExpression	opc == INDEX_op_sub_i32		8197778	0		==			
ANR	8198471	Identifier	opc		8197778	0					
ANR	8198472	Identifier	INDEX_op_sub_i32		8197778	1					
ANR	8198473	CompoundStatement		237:45:4182:4182	8197778	1					
ANR	8198474	ExpressionStatement	neg_op = INDEX_op_neg_i32	241:20:4255:4280	8197778	0	True				
ANR	8198475	AssignmentExpression	neg_op = INDEX_op_neg_i32		8197778	0		=			
ANR	8198476	Identifier	neg_op		8197778	0					
ANR	8198477	Identifier	INDEX_op_neg_i32		8197778	1					
ANR	8198478	ExpressionStatement	have_neg = TCG_TARGET_HAS_neg_i32	243:20:4303:4336	8197778	1	True				
ANR	8198479	AssignmentExpression	have_neg = TCG_TARGET_HAS_neg_i32		8197778	0		=			
ANR	8198480	Identifier	have_neg		8197778	0					
ANR	8198481	Identifier	TCG_TARGET_HAS_neg_i32		8197778	1					
ANR	8198482	ElseStatement	else		8197778	0					
ANR	8198483	CompoundStatement		243:23:4312:4312	8197778	0					
ANR	8198484	ExpressionStatement	neg_op = INDEX_op_neg_i64	247:20:4385:4410	8197778	0	True				
ANR	8198485	AssignmentExpression	neg_op = INDEX_op_neg_i64		8197778	0		=			
ANR	8198486	Identifier	neg_op		8197778	0					
ANR	8198487	Identifier	INDEX_op_neg_i64		8197778	1					
ANR	8198488	ExpressionStatement	have_neg = TCG_TARGET_HAS_neg_i64	249:20:4433:4466	8197778	1	True				
ANR	8198489	AssignmentExpression	have_neg = TCG_TARGET_HAS_neg_i64		8197778	0		=			
ANR	8198490	Identifier	have_neg		8197778	0					
ANR	8198491	Identifier	TCG_TARGET_HAS_neg_i64		8197778	1					
ANR	8198492	IfStatement	if ( ! have_neg )		8197778	4					
ANR	8198493	Condition	! have_neg	253:20:4508:4516	8197778	0	True				
ANR	8198494	UnaryOperationExpression	! have_neg		8197778	0					
ANR	8198495	UnaryOperator	!		8197778	0					
ANR	8198496	Identifier	have_neg		8197778	1					
ANR	8198497	CompoundStatement		251:31:4469:4469	8197778	1					
ANR	8198498	BreakStatement	break ;	255:20:4542:4547	8197778	0	True				
ANR	8198499	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0 )		8197778	5					
ANR	8198500	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0	259:20:4589:4674	8197778	0	True				
ANR	8198501	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0		8197778	0		&&			
ANR	8198502	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8198503	MemberAccess	temps [ args [ 1 ] ] . state		8197778	0					
ANR	8198504	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8198505	Identifier	temps		8197778	0					
ANR	8198506	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198507	Identifier	args		8197778	0					
ANR	8198508	PrimaryExpression	1		8197778	1					
ANR	8198509	Identifier	state		8197778	1					
ANR	8198510	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198511	EqualityExpression	temps [ args [ 1 ] ] . val == 0		8197778	1		==			
ANR	8198512	MemberAccess	temps [ args [ 1 ] ] . val		8197778	0					
ANR	8198513	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8198514	Identifier	temps		8197778	0					
ANR	8198515	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198516	Identifier	args		8197778	0					
ANR	8198517	PrimaryExpression	1		8197778	1					
ANR	8198518	Identifier	val		8197778	1					
ANR	8198519	PrimaryExpression	0		8197778	1					
ANR	8198520	CompoundStatement		259:48:4627:4627	8197778	1					
ANR	8198521	ExpressionStatement	op -> opc = neg_op	263:20:4700:4716	8197778	0	True				
ANR	8198522	AssignmentExpression	op -> opc = neg_op		8197778	0		=			
ANR	8198523	PtrMemberAccess	op -> opc		8197778	0					
ANR	8198524	Identifier	op		8197778	0					
ANR	8198525	Identifier	opc		8197778	1					
ANR	8198526	Identifier	neg_op		8197778	1					
ANR	8198527	ExpressionStatement	reset_temp ( args [ 0 ] )	265:20:4739:4758	8197778	1	True				
ANR	8198528	CallExpression	reset_temp ( args [ 0 ] )		8197778	0					
ANR	8198529	Callee	reset_temp		8197778	0					
ANR	8198530	Identifier	reset_temp		8197778	0					
ANR	8198531	ArgumentList	args [ 0 ]		8197778	1					
ANR	8198532	Argument	args [ 0 ]		8197778	0					
ANR	8198533	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8198534	Identifier	args		8197778	0					
ANR	8198535	PrimaryExpression	0		8197778	1					
ANR	8198536	ExpressionStatement	args [ 1 ] = args [ 2 ]	267:20:4781:4798	8197778	2	True				
ANR	8198537	AssignmentExpression	args [ 1 ] = args [ 2 ]		8197778	0		=			
ANR	8198538	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8198539	Identifier	args		8197778	0					
ANR	8198540	PrimaryExpression	1		8197778	1					
ANR	8198541	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198542	Identifier	args		8197778	0					
ANR	8198543	PrimaryExpression	2		8197778	1					
ANR	8198544	ContinueStatement	continue ;	269:20:4821:4829	8197778	3	True				
ANR	8198545	BreakStatement	break ;	275:12:4878:4883	8197778	33	True				
ANR	8198546	Statement	CASE_OP_32_64	277:8:4894:4906	8197778	34	True				
ANR	8198547	Statement	(	277:21:4907:4907	8197778	35	True				
ANR	8198548	Statement	xor	277:22:4908:4910	8197778	36	True				
ANR	8198549	Statement	)	277:25:4911:4911	8197778	37	True				
ANR	8198550	Statement	:	277:26:4912:4912	8197778	38	True				
ANR	8198551	Statement	CASE_OP_32_64	279:8:4923:4935	8197778	39	True				
ANR	8198552	Statement	(	279:21:4936:4936	8197778	40	True				
ANR	8198553	Statement	nand	279:22:4937:4940	8197778	41	True				
ANR	8198554	Statement	)	279:26:4941:4941	8197778	42	True				
ANR	8198555	Statement	:	279:27:4942:4942	8197778	43	True				
ANR	8198556	IfStatement	if ( temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1 )		8197778	44					
ANR	8198557	Condition	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1	281:16:4961:5102	8197778	0	True				
ANR	8198558	AndExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1		8197778	0		&&			
ANR	8198559	EqualityExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST		8197778	0		!=			
ANR	8198560	MemberAccess	temps [ args [ 1 ] ] . state		8197778	0					
ANR	8198561	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8198562	Identifier	temps		8197778	0					
ANR	8198563	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198564	Identifier	args		8197778	0					
ANR	8198565	PrimaryExpression	1		8197778	1					
ANR	8198566	Identifier	state		8197778	1					
ANR	8198567	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198568	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1		8197778	1		&&			
ANR	8198569	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8198570	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8198571	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8198572	Identifier	temps		8197778	0					
ANR	8198573	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198574	Identifier	args		8197778	0					
ANR	8198575	PrimaryExpression	2		8197778	1					
ANR	8198576	Identifier	state		8197778	1					
ANR	8198577	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198578	EqualityExpression	temps [ args [ 2 ] ] . val == - 1		8197778	1		==			
ANR	8198579	MemberAccess	temps [ args [ 2 ] ] . val		8197778	0					
ANR	8198580	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8198581	Identifier	temps		8197778	0					
ANR	8198582	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198583	Identifier	args		8197778	0					
ANR	8198584	PrimaryExpression	2		8197778	1					
ANR	8198585	Identifier	val		8197778	1					
ANR	8198586	UnaryOperationExpression	- 1		8197778	1					
ANR	8198587	UnaryOperator	-		8197778	0					
ANR	8198588	PrimaryExpression	1		8197778	1					
ANR	8198589	CompoundStatement		283:45:5055:5055	8197778	1					
ANR	8198590	ExpressionStatement	i = 1	287:16:5124:5129	8197778	0	True				
ANR	8198591	AssignmentExpression	i = 1		8197778	0		=			
ANR	8198592	Identifier	i		8197778	0					
ANR	8198593	PrimaryExpression	1		8197778	1					
ANR	8198594	GotoStatement	goto try_not ;	289:16:5148:5160	8197778	1	True				
ANR	8198595	Identifier	try_not		8197778	0					
ANR	8198596	BreakStatement	break ;	293:12:5190:5195	8197778	45	True				
ANR	8198597	Statement	CASE_OP_32_64	295:8:5206:5218	8197778	46	True				
ANR	8198598	Statement	(	295:21:5219:5219	8197778	47	True				
ANR	8198599	Statement	nor	295:22:5220:5222	8197778	48	True				
ANR	8198600	Statement	)	295:25:5223:5223	8197778	49	True				
ANR	8198601	Statement	:	295:26:5224:5224	8197778	50	True				
ANR	8198602	IfStatement	if ( temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 )		8197778	51					
ANR	8198603	Condition	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0	297:16:5243:5383	8197778	0	True				
ANR	8198604	AndExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0		8197778	0		&&			
ANR	8198605	EqualityExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST		8197778	0		!=			
ANR	8198606	MemberAccess	temps [ args [ 1 ] ] . state		8197778	0					
ANR	8198607	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8198608	Identifier	temps		8197778	0					
ANR	8198609	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198610	Identifier	args		8197778	0					
ANR	8198611	PrimaryExpression	1		8197778	1					
ANR	8198612	Identifier	state		8197778	1					
ANR	8198613	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198614	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0		8197778	1		&&			
ANR	8198615	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8198616	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8198617	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8198618	Identifier	temps		8197778	0					
ANR	8198619	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198620	Identifier	args		8197778	0					
ANR	8198621	PrimaryExpression	2		8197778	1					
ANR	8198622	Identifier	state		8197778	1					
ANR	8198623	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198624	EqualityExpression	temps [ args [ 2 ] ] . val == 0		8197778	1		==			
ANR	8198625	MemberAccess	temps [ args [ 2 ] ] . val		8197778	0					
ANR	8198626	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8198627	Identifier	temps		8197778	0					
ANR	8198628	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198629	Identifier	args		8197778	0					
ANR	8198630	PrimaryExpression	2		8197778	1					
ANR	8198631	Identifier	val		8197778	1					
ANR	8198632	PrimaryExpression	0		8197778	1					
ANR	8198633	CompoundStatement		299:44:5336:5336	8197778	1					
ANR	8198634	ExpressionStatement	i = 1	303:16:5405:5410	8197778	0	True				
ANR	8198635	AssignmentExpression	i = 1		8197778	0		=			
ANR	8198636	Identifier	i		8197778	0					
ANR	8198637	PrimaryExpression	1		8197778	1					
ANR	8198638	GotoStatement	goto try_not ;	305:16:5429:5441	8197778	1	True				
ANR	8198639	Identifier	try_not		8197778	0					
ANR	8198640	BreakStatement	break ;	309:12:5471:5476	8197778	52	True				
ANR	8198641	Statement	CASE_OP_32_64	311:8:5487:5499	8197778	53	True				
ANR	8198642	Statement	(	311:21:5500:5500	8197778	54	True				
ANR	8198643	Statement	andc	311:22:5501:5504	8197778	55	True				
ANR	8198644	Statement	)	311:26:5505:5505	8197778	56	True				
ANR	8198645	Statement	:	311:27:5506:5506	8197778	57	True				
ANR	8198646	IfStatement	if ( temps [ args [ 2 ] ] . state != TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == - 1 )		8197778	58					
ANR	8198647	Condition	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == - 1	313:16:5525:5666	8197778	0	True				
ANR	8198648	AndExpression	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == - 1		8197778	0		&&			
ANR	8198649	EqualityExpression	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST		8197778	0		!=			
ANR	8198650	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8198651	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8198652	Identifier	temps		8197778	0					
ANR	8198653	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198654	Identifier	args		8197778	0					
ANR	8198655	PrimaryExpression	2		8197778	1					
ANR	8198656	Identifier	state		8197778	1					
ANR	8198657	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198658	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == - 1		8197778	1		&&			
ANR	8198659	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8198660	MemberAccess	temps [ args [ 1 ] ] . state		8197778	0					
ANR	8198661	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8198662	Identifier	temps		8197778	0					
ANR	8198663	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198664	Identifier	args		8197778	0					
ANR	8198665	PrimaryExpression	1		8197778	1					
ANR	8198666	Identifier	state		8197778	1					
ANR	8198667	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198668	EqualityExpression	temps [ args [ 1 ] ] . val == - 1		8197778	1		==			
ANR	8198669	MemberAccess	temps [ args [ 1 ] ] . val		8197778	0					
ANR	8198670	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8198671	Identifier	temps		8197778	0					
ANR	8198672	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198673	Identifier	args		8197778	0					
ANR	8198674	PrimaryExpression	1		8197778	1					
ANR	8198675	Identifier	val		8197778	1					
ANR	8198676	UnaryOperationExpression	- 1		8197778	1					
ANR	8198677	UnaryOperator	-		8197778	0					
ANR	8198678	PrimaryExpression	1		8197778	1					
ANR	8198679	CompoundStatement		315:45:5619:5619	8197778	1					
ANR	8198680	ExpressionStatement	i = 2	319:16:5688:5693	8197778	0	True				
ANR	8198681	AssignmentExpression	i = 2		8197778	0		=			
ANR	8198682	Identifier	i		8197778	0					
ANR	8198683	PrimaryExpression	2		8197778	1					
ANR	8198684	GotoStatement	goto try_not ;	321:16:5712:5724	8197778	1	True				
ANR	8198685	Identifier	try_not		8197778	0					
ANR	8198686	BreakStatement	break ;	325:12:5754:5759	8197778	59	True				
ANR	8198687	Statement	CASE_OP_32_64	327:8:5770:5782	8197778	60	True				
ANR	8198688	Statement	(	327:21:5783:5783	8197778	61	True				
ANR	8198689	Statement	orc	327:22:5784:5786	8197778	62	True				
ANR	8198690	Statement	)	327:25:5787:5787	8197778	63	True				
ANR	8198691	Statement	:	327:26:5788:5788	8197778	64	True				
ANR	8198692	Statement	CASE_OP_32_64	329:8:5799:5811	8197778	65	True				
ANR	8198693	Statement	(	329:21:5812:5812	8197778	66	True				
ANR	8198694	Statement	eqv	329:22:5813:5815	8197778	67	True				
ANR	8198695	Statement	)	329:25:5816:5816	8197778	68	True				
ANR	8198696	Statement	:	329:26:5817:5817	8197778	69	True				
ANR	8198697	IfStatement	if ( temps [ args [ 2 ] ] . state != TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0 )		8197778	70					
ANR	8198698	Condition	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0	331:16:5836:5976	8197778	0	True				
ANR	8198699	AndExpression	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST && temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0		8197778	0		&&			
ANR	8198700	EqualityExpression	temps [ args [ 2 ] ] . state != TCG_TEMP_CONST		8197778	0		!=			
ANR	8198701	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8198702	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8198703	Identifier	temps		8197778	0					
ANR	8198704	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198705	Identifier	args		8197778	0					
ANR	8198706	PrimaryExpression	2		8197778	1					
ANR	8198707	Identifier	state		8197778	1					
ANR	8198708	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198709	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 1 ] ] . val == 0		8197778	1		&&			
ANR	8198710	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8198711	MemberAccess	temps [ args [ 1 ] ] . state		8197778	0					
ANR	8198712	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8198713	Identifier	temps		8197778	0					
ANR	8198714	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198715	Identifier	args		8197778	0					
ANR	8198716	PrimaryExpression	1		8197778	1					
ANR	8198717	Identifier	state		8197778	1					
ANR	8198718	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198719	EqualityExpression	temps [ args [ 1 ] ] . val == 0		8197778	1		==			
ANR	8198720	MemberAccess	temps [ args [ 1 ] ] . val		8197778	0					
ANR	8198721	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8198722	Identifier	temps		8197778	0					
ANR	8198723	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198724	Identifier	args		8197778	0					
ANR	8198725	PrimaryExpression	1		8197778	1					
ANR	8198726	Identifier	val		8197778	1					
ANR	8198727	PrimaryExpression	0		8197778	1					
ANR	8198728	CompoundStatement		333:44:5929:5929	8197778	1					
ANR	8198729	ExpressionStatement	i = 2	337:16:5998:6003	8197778	0	True				
ANR	8198730	AssignmentExpression	i = 2		8197778	0		=			
ANR	8198731	Identifier	i		8197778	0					
ANR	8198732	PrimaryExpression	2		8197778	1					
ANR	8198733	GotoStatement	goto try_not ;	339:16:6022:6034	8197778	1	True				
ANR	8198734	Identifier	try_not		8197778	0					
ANR	8198735	BreakStatement	break ;	343:12:6064:6069	8197778	71	True				
ANR	8198736	Label	try_not :	345:8:6080:6087	8197778	72	True				
ANR	8198737	Identifier	try_not		8197778	0					
ANR	8198738	CompoundStatement		349:16:6106:6119	8197778	73					
ANR	8198739	IdentifierDeclStatement	TCGOpcode not_op ;	349:16:6121:6137	8197778	0	True				
ANR	8198740	IdentifierDecl	not_op		8197778	0					
ANR	8198741	IdentifierDeclType	TCGOpcode		8197778	0					
ANR	8198742	Identifier	not_op		8197778	1					
ANR	8198743	IdentifierDeclStatement	bool have_not ;	351:16:6156:6169	8197778	1	True				
ANR	8198744	IdentifierDecl	have_not		8197778	0					
ANR	8198745	IdentifierDeclType	bool		8197778	0					
ANR	8198746	Identifier	have_not		8197778	1					
ANR	8198747	IfStatement	if ( def -> flags & TCG_OPF_64BIT )		8197778	2					
ANR	8198748	Condition	def -> flags & TCG_OPF_64BIT	355:20:6194:6219	8197778	0	True				
ANR	8198749	BitAndExpression	def -> flags & TCG_OPF_64BIT		8197778	0		&			
ANR	8198750	PtrMemberAccess	def -> flags		8197778	0					
ANR	8198751	Identifier	def		8197778	0					
ANR	8198752	Identifier	flags		8197778	1					
ANR	8198753	Identifier	TCG_OPF_64BIT		8197778	1					
ANR	8198754	CompoundStatement		353:48:6172:6172	8197778	1					
ANR	8198755	ExpressionStatement	not_op = INDEX_op_not_i64	357:20:6245:6270	8197778	0	True				
ANR	8198756	AssignmentExpression	not_op = INDEX_op_not_i64		8197778	0		=			
ANR	8198757	Identifier	not_op		8197778	0					
ANR	8198758	Identifier	INDEX_op_not_i64		8197778	1					
ANR	8198759	ExpressionStatement	have_not = TCG_TARGET_HAS_not_i64	359:20:6293:6326	8197778	1	True				
ANR	8198760	AssignmentExpression	have_not = TCG_TARGET_HAS_not_i64		8197778	0		=			
ANR	8198761	Identifier	have_not		8197778	0					
ANR	8198762	Identifier	TCG_TARGET_HAS_not_i64		8197778	1					
ANR	8198763	ElseStatement	else		8197778	0					
ANR	8198764	CompoundStatement		359:23:6302:6302	8197778	0					
ANR	8198765	ExpressionStatement	not_op = INDEX_op_not_i32	363:20:6375:6400	8197778	0	True				
ANR	8198766	AssignmentExpression	not_op = INDEX_op_not_i32		8197778	0		=			
ANR	8198767	Identifier	not_op		8197778	0					
ANR	8198768	Identifier	INDEX_op_not_i32		8197778	1					
ANR	8198769	ExpressionStatement	have_not = TCG_TARGET_HAS_not_i32	365:20:6423:6456	8197778	1	True				
ANR	8198770	AssignmentExpression	have_not = TCG_TARGET_HAS_not_i32		8197778	0		=			
ANR	8198771	Identifier	have_not		8197778	0					
ANR	8198772	Identifier	TCG_TARGET_HAS_not_i32		8197778	1					
ANR	8198773	IfStatement	if ( ! have_not )		8197778	3					
ANR	8198774	Condition	! have_not	369:20:6498:6506	8197778	0	True				
ANR	8198775	UnaryOperationExpression	! have_not		8197778	0					
ANR	8198776	UnaryOperator	!		8197778	0					
ANR	8198777	Identifier	have_not		8197778	1					
ANR	8198778	CompoundStatement		367:31:6459:6459	8197778	1					
ANR	8198779	BreakStatement	break ;	371:20:6532:6537	8197778	0	True				
ANR	8198780	ExpressionStatement	op -> opc = not_op	375:16:6575:6591	8197778	4	True				
ANR	8198781	AssignmentExpression	op -> opc = not_op		8197778	0		=			
ANR	8198782	PtrMemberAccess	op -> opc		8197778	0					
ANR	8198783	Identifier	op		8197778	0					
ANR	8198784	Identifier	opc		8197778	1					
ANR	8198785	Identifier	not_op		8197778	1					
ANR	8198786	ExpressionStatement	reset_temp ( args [ 0 ] )	377:16:6610:6629	8197778	5	True				
ANR	8198787	CallExpression	reset_temp ( args [ 0 ] )		8197778	0					
ANR	8198788	Callee	reset_temp		8197778	0					
ANR	8198789	Identifier	reset_temp		8197778	0					
ANR	8198790	ArgumentList	args [ 0 ]		8197778	1					
ANR	8198791	Argument	args [ 0 ]		8197778	0					
ANR	8198792	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8198793	Identifier	args		8197778	0					
ANR	8198794	PrimaryExpression	0		8197778	1					
ANR	8198795	ExpressionStatement	args [ 1 ] = args [ i ]	379:16:6648:6665	8197778	6	True				
ANR	8198796	AssignmentExpression	args [ 1 ] = args [ i ]		8197778	0		=			
ANR	8198797	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8198798	Identifier	args		8197778	0					
ANR	8198799	PrimaryExpression	1		8197778	1					
ANR	8198800	ArrayIndexing	args [ i ]		8197778	1					
ANR	8198801	Identifier	args		8197778	0					
ANR	8198802	Identifier	i		8197778	1					
ANR	8198803	ContinueStatement	continue ;	381:16:6684:6692	8197778	7	True				
ANR	8198804	Label	default :	385:8:6718:6725	8197778	74	True				
ANR	8198805	Identifier	default		8197778	0					
ANR	8198806	BreakStatement	break ;	387:12:6740:6745	8197778	75	True				
ANR	8198807	SwitchStatement	switch ( opc )		8197778	18					
ANR	8198808	Condition	opc	395:16:6851:6853	8197778	0	True				
ANR	8198809	Identifier	opc		8197778	0					
ANR	8198810	CompoundStatement		393:21:6806:6806	8197778	1					
ANR	8198811	Statement	CASE_OP_32_64	397:8:6867:6879	8197778	0	True				
ANR	8198812	Statement	(	397:21:6880:6880	8197778	1	True				
ANR	8198813	Statement	add	397:22:6881:6883	8197778	2	True				
ANR	8198814	Statement	)	397:25:6884:6884	8197778	3	True				
ANR	8198815	Statement	:	397:26:6885:6885	8197778	4	True				
ANR	8198816	Statement	CASE_OP_32_64	399:8:6896:6908	8197778	5	True				
ANR	8198817	Statement	(	399:21:6909:6909	8197778	6	True				
ANR	8198818	Statement	sub	399:22:6910:6912	8197778	7	True				
ANR	8198819	Statement	)	399:25:6913:6913	8197778	8	True				
ANR	8198820	Statement	:	399:26:6914:6914	8197778	9	True				
ANR	8198821	Statement	CASE_OP_32_64	401:8:6925:6937	8197778	10	True				
ANR	8198822	Statement	(	401:21:6938:6938	8197778	11	True				
ANR	8198823	Statement	shl	401:22:6939:6941	8197778	12	True				
ANR	8198824	Statement	)	401:25:6942:6942	8197778	13	True				
ANR	8198825	Statement	:	401:26:6943:6943	8197778	14	True				
ANR	8198826	Statement	CASE_OP_32_64	403:8:6954:6966	8197778	15	True				
ANR	8198827	Statement	(	403:21:6967:6967	8197778	16	True				
ANR	8198828	Statement	shr	403:22:6968:6970	8197778	17	True				
ANR	8198829	Statement	)	403:25:6971:6971	8197778	18	True				
ANR	8198830	Statement	:	403:26:6972:6972	8197778	19	True				
ANR	8198831	Statement	CASE_OP_32_64	405:8:6983:6995	8197778	20	True				
ANR	8198832	Statement	(	405:21:6996:6996	8197778	21	True				
ANR	8198833	Statement	sar	405:22:6997:6999	8197778	22	True				
ANR	8198834	Statement	)	405:25:7000:7000	8197778	23	True				
ANR	8198835	Statement	:	405:26:7001:7001	8197778	24	True				
ANR	8198836	Statement	CASE_OP_32_64	407:8:7012:7024	8197778	25	True				
ANR	8198837	Statement	(	407:21:7025:7025	8197778	26	True				
ANR	8198838	Statement	rotl	407:22:7026:7029	8197778	27	True				
ANR	8198839	Statement	)	407:26:7030:7030	8197778	28	True				
ANR	8198840	Statement	:	407:27:7031:7031	8197778	29	True				
ANR	8198841	Statement	CASE_OP_32_64	409:8:7042:7054	8197778	30	True				
ANR	8198842	Statement	(	409:21:7055:7055	8197778	31	True				
ANR	8198843	Statement	rotr	409:22:7056:7059	8197778	32	True				
ANR	8198844	Statement	)	409:26:7060:7060	8197778	33	True				
ANR	8198845	Statement	:	409:27:7061:7061	8197778	34	True				
ANR	8198846	Statement	CASE_OP_32_64	411:8:7072:7084	8197778	35	True				
ANR	8198847	Statement	(	411:21:7085:7085	8197778	36	True				
ANR	8198848	Statement	or	411:22:7086:7087	8197778	37	True				
ANR	8198849	Statement	)	411:24:7088:7088	8197778	38	True				
ANR	8198850	Statement	:	411:25:7089:7089	8197778	39	True				
ANR	8198851	Statement	CASE_OP_32_64	413:8:7100:7112	8197778	40	True				
ANR	8198852	Statement	(	413:21:7113:7113	8197778	41	True				
ANR	8198853	Statement	xor	413:22:7114:7116	8197778	42	True				
ANR	8198854	Statement	)	413:25:7117:7117	8197778	43	True				
ANR	8198855	Statement	:	413:26:7118:7118	8197778	44	True				
ANR	8198856	Statement	CASE_OP_32_64	415:8:7129:7141	8197778	45	True				
ANR	8198857	Statement	(	415:21:7142:7142	8197778	46	True				
ANR	8198858	Statement	andc	415:22:7143:7146	8197778	47	True				
ANR	8198859	Statement	)	415:26:7147:7147	8197778	48	True				
ANR	8198860	Statement	:	415:27:7148:7148	8197778	49	True				
ANR	8198861	IfStatement	if ( temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 )		8197778	50					
ANR	8198862	Condition	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0	417:16:7167:7307	8197778	0	True				
ANR	8198863	AndExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0		8197778	0		&&			
ANR	8198864	EqualityExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST		8197778	0		!=			
ANR	8198865	MemberAccess	temps [ args [ 1 ] ] . state		8197778	0					
ANR	8198866	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8198867	Identifier	temps		8197778	0					
ANR	8198868	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198869	Identifier	args		8197778	0					
ANR	8198870	PrimaryExpression	1		8197778	1					
ANR	8198871	Identifier	state		8197778	1					
ANR	8198872	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198873	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0		8197778	1		&&			
ANR	8198874	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8198875	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8198876	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8198877	Identifier	temps		8197778	0					
ANR	8198878	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198879	Identifier	args		8197778	0					
ANR	8198880	PrimaryExpression	2		8197778	1					
ANR	8198881	Identifier	state		8197778	1					
ANR	8198882	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198883	EqualityExpression	temps [ args [ 2 ] ] . val == 0		8197778	1		==			
ANR	8198884	MemberAccess	temps [ args [ 2 ] ] . val		8197778	0					
ANR	8198885	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8198886	Identifier	temps		8197778	0					
ANR	8198887	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198888	Identifier	args		8197778	0					
ANR	8198889	PrimaryExpression	2		8197778	1					
ANR	8198890	Identifier	val		8197778	1					
ANR	8198891	PrimaryExpression	0		8197778	1					
ANR	8198892	CompoundStatement		419:44:7260:7260	8197778	1					
ANR	8198893	ExpressionStatement	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"	423:16:7329:7375	8197778	0	True				
ANR	8198894	CallExpression	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"		8197778	0					
ANR	8198895	Callee	tcg_opt_gen_mov		8197778	0					
ANR	8198896	Identifier	tcg_opt_gen_mov		8197778	0					
ANR	8198897	ArgumentList	s		8197778	1					
ANR	8198898	Argument	s		8197778	0					
ANR	8198899	Identifier	s		8197778	0					
ANR	8198900	Argument	op		8197778	1					
ANR	8198901	Identifier	op		8197778	0					
ANR	8198902	Argument	args		8197778	2					
ANR	8198903	Identifier	args		8197778	0					
ANR	8198904	Argument	args [ 0 ]		8197778	3					
ANR	8198905	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8198906	Identifier	args		8197778	0					
ANR	8198907	PrimaryExpression	0		8197778	1					
ANR	8198908	Argument	args [ 1 ]		8197778	4					
ANR	8198909	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8198910	Identifier	args		8197778	0					
ANR	8198911	PrimaryExpression	1		8197778	1					
ANR	8198912	ContinueStatement	continue ;	425:16:7394:7402	8197778	1	True				
ANR	8198913	BreakStatement	break ;	429:12:7432:7437	8197778	51	True				
ANR	8198914	Statement	CASE_OP_32_64	431:8:7448:7460	8197778	52	True				
ANR	8198915	Statement	(	431:21:7461:7461	8197778	53	True				
ANR	8198916	Statement	and	431:22:7462:7464	8197778	54	True				
ANR	8198917	Statement	)	431:25:7465:7465	8197778	55	True				
ANR	8198918	Statement	:	431:26:7466:7466	8197778	56	True				
ANR	8198919	Statement	CASE_OP_32_64	433:8:7477:7489	8197778	57	True				
ANR	8198920	Statement	(	433:21:7490:7490	8197778	58	True				
ANR	8198921	Statement	orc	433:22:7491:7493	8197778	59	True				
ANR	8198922	Statement	)	433:25:7494:7494	8197778	60	True				
ANR	8198923	Statement	:	433:26:7495:7495	8197778	61	True				
ANR	8198924	Statement	CASE_OP_32_64	435:8:7506:7518	8197778	62	True				
ANR	8198925	Statement	(	435:21:7519:7519	8197778	63	True				
ANR	8198926	Statement	eqv	435:22:7520:7522	8197778	64	True				
ANR	8198927	Statement	)	435:25:7523:7523	8197778	65	True				
ANR	8198928	Statement	:	435:26:7524:7524	8197778	66	True				
ANR	8198929	IfStatement	if ( temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1 )		8197778	67					
ANR	8198930	Condition	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1	437:16:7543:7684	8197778	0	True				
ANR	8198931	AndExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1		8197778	0		&&			
ANR	8198932	EqualityExpression	temps [ args [ 1 ] ] . state != TCG_TEMP_CONST		8197778	0		!=			
ANR	8198933	MemberAccess	temps [ args [ 1 ] ] . state		8197778	0					
ANR	8198934	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8198935	Identifier	temps		8197778	0					
ANR	8198936	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8198937	Identifier	args		8197778	0					
ANR	8198938	PrimaryExpression	1		8197778	1					
ANR	8198939	Identifier	state		8197778	1					
ANR	8198940	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198941	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == - 1		8197778	1		&&			
ANR	8198942	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8198943	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8198944	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8198945	Identifier	temps		8197778	0					
ANR	8198946	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198947	Identifier	args		8197778	0					
ANR	8198948	PrimaryExpression	2		8197778	1					
ANR	8198949	Identifier	state		8197778	1					
ANR	8198950	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8198951	EqualityExpression	temps [ args [ 2 ] ] . val == - 1		8197778	1		==			
ANR	8198952	MemberAccess	temps [ args [ 2 ] ] . val		8197778	0					
ANR	8198953	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8198954	Identifier	temps		8197778	0					
ANR	8198955	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8198956	Identifier	args		8197778	0					
ANR	8198957	PrimaryExpression	2		8197778	1					
ANR	8198958	Identifier	val		8197778	1					
ANR	8198959	UnaryOperationExpression	- 1		8197778	1					
ANR	8198960	UnaryOperator	-		8197778	0					
ANR	8198961	PrimaryExpression	1		8197778	1					
ANR	8198962	CompoundStatement		439:45:7637:7637	8197778	1					
ANR	8198963	ExpressionStatement	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"	443:16:7706:7752	8197778	0	True				
ANR	8198964	CallExpression	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"		8197778	0					
ANR	8198965	Callee	tcg_opt_gen_mov		8197778	0					
ANR	8198966	Identifier	tcg_opt_gen_mov		8197778	0					
ANR	8198967	ArgumentList	s		8197778	1					
ANR	8198968	Argument	s		8197778	0					
ANR	8198969	Identifier	s		8197778	0					
ANR	8198970	Argument	op		8197778	1					
ANR	8198971	Identifier	op		8197778	0					
ANR	8198972	Argument	args		8197778	2					
ANR	8198973	Identifier	args		8197778	0					
ANR	8198974	Argument	args [ 0 ]		8197778	3					
ANR	8198975	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8198976	Identifier	args		8197778	0					
ANR	8198977	PrimaryExpression	0		8197778	1					
ANR	8198978	Argument	args [ 1 ]		8197778	4					
ANR	8198979	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8198980	Identifier	args		8197778	0					
ANR	8198981	PrimaryExpression	1		8197778	1					
ANR	8198982	ContinueStatement	continue ;	445:16:7771:7779	8197778	1	True				
ANR	8198983	BreakStatement	break ;	449:12:7809:7814	8197778	68	True				
ANR	8198984	Label	default :	451:8:7825:7832	8197778	69	True				
ANR	8198985	Identifier	default		8197778	0					
ANR	8198986	BreakStatement	break ;	453:12:7847:7852	8197778	70	True				
ANR	8198987	ExpressionStatement	mask = - 1	463:8:7998:8007	8197778	19	True				
ANR	8198988	AssignmentExpression	mask = - 1		8197778	0		=			
ANR	8198989	Identifier	mask		8197778	0					
ANR	8198990	UnaryOperationExpression	- 1		8197778	1					
ANR	8198991	UnaryOperator	-		8197778	0					
ANR	8198992	PrimaryExpression	1		8197778	1					
ANR	8198993	ExpressionStatement	affected = - 1	465:8:8018:8031	8197778	20	True				
ANR	8198994	AssignmentExpression	affected = - 1		8197778	0		=			
ANR	8198995	Identifier	affected		8197778	0					
ANR	8198996	UnaryOperationExpression	- 1		8197778	1					
ANR	8198997	UnaryOperator	-		8197778	0					
ANR	8198998	PrimaryExpression	1		8197778	1					
ANR	8198999	SwitchStatement	switch ( opc )		8197778	21					
ANR	8199000	Condition	opc	467:16:8050:8052	8197778	0	True				
ANR	8199001	Identifier	opc		8197778	0					
ANR	8199002	CompoundStatement		465:21:8005:8005	8197778	1					
ANR	8199003	Statement	CASE_OP_32_64	469:8:8066:8078	8197778	0	True				
ANR	8199004	Statement	(	469:21:8079:8079	8197778	1	True				
ANR	8199005	Statement	ext8s	469:22:8080:8084	8197778	2	True				
ANR	8199006	Statement	)	469:27:8085:8085	8197778	3	True				
ANR	8199007	Statement	:	469:28:8086:8086	8197778	4	True				
ANR	8199008	IfStatement	if ( ( temps [ args [ 1 ] ] . mask & 0x80 ) != 0 )		8197778	5					
ANR	8199009	Condition	( temps [ args [ 1 ] ] . mask & 0x80 ) != 0	471:16:8105:8137	8197778	0	True				
ANR	8199010	EqualityExpression	( temps [ args [ 1 ] ] . mask & 0x80 ) != 0		8197778	0		!=			
ANR	8199011	BitAndExpression	temps [ args [ 1 ] ] . mask & 0x80		8197778	0		&			
ANR	8199012	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199013	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199014	Identifier	temps		8197778	0					
ANR	8199015	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199016	Identifier	args		8197778	0					
ANR	8199017	PrimaryExpression	1		8197778	1					
ANR	8199018	Identifier	mask		8197778	1					
ANR	8199019	PrimaryExpression	0x80		8197778	1					
ANR	8199020	PrimaryExpression	0		8197778	1					
ANR	8199021	CompoundStatement		469:51:8090:8090	8197778	1					
ANR	8199022	BreakStatement	break ;	473:16:8159:8164	8197778	0	True				
ANR	8199023	Statement	CASE_OP_32_64	477:8:8190:8202	8197778	6	True				
ANR	8199024	Statement	(	477:21:8203:8203	8197778	7	True				
ANR	8199025	Statement	ext8u	477:22:8204:8208	8197778	8	True				
ANR	8199026	Statement	)	477:27:8209:8209	8197778	9	True				
ANR	8199027	Statement	:	477:28:8210:8210	8197778	10	True				
ANR	8199028	ExpressionStatement	mask = 0xff	479:12:8225:8236	8197778	11	True				
ANR	8199029	AssignmentExpression	mask = 0xff		8197778	0		=			
ANR	8199030	Identifier	mask		8197778	0					
ANR	8199031	PrimaryExpression	0xff		8197778	1					
ANR	8199032	GotoStatement	goto and_const ;	481:12:8251:8265	8197778	12	True				
ANR	8199033	Identifier	and_const		8197778	0					
ANR	8199034	Statement	CASE_OP_32_64	483:8:8276:8288	8197778	13	True				
ANR	8199035	Statement	(	483:21:8289:8289	8197778	14	True				
ANR	8199036	Statement	ext16s	483:22:8290:8295	8197778	15	True				
ANR	8199037	Statement	)	483:28:8296:8296	8197778	16	True				
ANR	8199038	Statement	:	483:29:8297:8297	8197778	17	True				
ANR	8199039	IfStatement	if ( ( temps [ args [ 1 ] ] . mask & 0x8000 ) != 0 )		8197778	18					
ANR	8199040	Condition	( temps [ args [ 1 ] ] . mask & 0x8000 ) != 0	485:16:8316:8350	8197778	0	True				
ANR	8199041	EqualityExpression	( temps [ args [ 1 ] ] . mask & 0x8000 ) != 0		8197778	0		!=			
ANR	8199042	BitAndExpression	temps [ args [ 1 ] ] . mask & 0x8000		8197778	0		&			
ANR	8199043	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199044	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199045	Identifier	temps		8197778	0					
ANR	8199046	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199047	Identifier	args		8197778	0					
ANR	8199048	PrimaryExpression	1		8197778	1					
ANR	8199049	Identifier	mask		8197778	1					
ANR	8199050	PrimaryExpression	0x8000		8197778	1					
ANR	8199051	PrimaryExpression	0		8197778	1					
ANR	8199052	CompoundStatement		483:53:8303:8303	8197778	1					
ANR	8199053	BreakStatement	break ;	487:16:8372:8377	8197778	0	True				
ANR	8199054	Statement	CASE_OP_32_64	491:8:8403:8415	8197778	19	True				
ANR	8199055	Statement	(	491:21:8416:8416	8197778	20	True				
ANR	8199056	Statement	ext16u	491:22:8417:8422	8197778	21	True				
ANR	8199057	Statement	)	491:28:8423:8423	8197778	22	True				
ANR	8199058	Statement	:	491:29:8424:8424	8197778	23	True				
ANR	8199059	ExpressionStatement	mask = 0xffff	493:12:8439:8452	8197778	24	True				
ANR	8199060	AssignmentExpression	mask = 0xffff		8197778	0		=			
ANR	8199061	Identifier	mask		8197778	0					
ANR	8199062	PrimaryExpression	0xffff		8197778	1					
ANR	8199063	GotoStatement	goto and_const ;	495:12:8467:8481	8197778	25	True				
ANR	8199064	Identifier	and_const		8197778	0					
ANR	8199065	Label	case INDEX_op_ext32s_i64 :	497:8:8492:8516	8197778	26	True				
ANR	8199066	Identifier	INDEX_op_ext32s_i64		8197778	0					
ANR	8199067	IfStatement	if ( ( temps [ args [ 1 ] ] . mask & 0x80000000 ) != 0 )		8197778	27					
ANR	8199068	Condition	( temps [ args [ 1 ] ] . mask & 0x80000000 ) != 0	499:16:8535:8573	8197778	0	True				
ANR	8199069	EqualityExpression	( temps [ args [ 1 ] ] . mask & 0x80000000 ) != 0		8197778	0		!=			
ANR	8199070	BitAndExpression	temps [ args [ 1 ] ] . mask & 0x80000000		8197778	0		&			
ANR	8199071	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199072	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199073	Identifier	temps		8197778	0					
ANR	8199074	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199075	Identifier	args		8197778	0					
ANR	8199076	PrimaryExpression	1		8197778	1					
ANR	8199077	Identifier	mask		8197778	1					
ANR	8199078	PrimaryExpression	0x80000000		8197778	1					
ANR	8199079	PrimaryExpression	0		8197778	1					
ANR	8199080	CompoundStatement		497:57:8526:8526	8197778	1					
ANR	8199081	BreakStatement	break ;	501:16:8595:8600	8197778	0	True				
ANR	8199082	Label	case INDEX_op_ext32u_i64 :	505:8:8626:8650	8197778	28	True				
ANR	8199083	Identifier	INDEX_op_ext32u_i64		8197778	0					
ANR	8199084	ExpressionStatement	mask = 0xffffffffU	507:12:8665:8683	8197778	29	True				
ANR	8199085	AssignmentExpression	mask = 0xffffffffU		8197778	0		=			
ANR	8199086	Identifier	mask		8197778	0					
ANR	8199087	PrimaryExpression	0xffffffffU		8197778	1					
ANR	8199088	GotoStatement	goto and_const ;	509:12:8698:8712	8197778	30	True				
ANR	8199089	Identifier	and_const		8197778	0					
ANR	8199090	Statement	CASE_OP_32_64	513:8:8725:8737	8197778	31	True				
ANR	8199091	Statement	(	513:21:8738:8738	8197778	32	True				
ANR	8199092	Statement	and	513:22:8739:8741	8197778	33	True				
ANR	8199093	Statement	)	513:25:8742:8742	8197778	34	True				
ANR	8199094	Statement	:	513:26:8743:8743	8197778	35	True				
ANR	8199095	ExpressionStatement	mask = temps [ args [ 2 ] ] . mask	515:12:8758:8784	8197778	36	True				
ANR	8199096	AssignmentExpression	mask = temps [ args [ 2 ] ] . mask		8197778	0		=			
ANR	8199097	Identifier	mask		8197778	0					
ANR	8199098	MemberAccess	temps [ args [ 2 ] ] . mask		8197778	1					
ANR	8199099	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199100	Identifier	temps		8197778	0					
ANR	8199101	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199102	Identifier	args		8197778	0					
ANR	8199103	PrimaryExpression	2		8197778	1					
ANR	8199104	Identifier	mask		8197778	1					
ANR	8199105	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8197778	37					
ANR	8199106	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	517:16:8803:8840	8197778	0	True				
ANR	8199107	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8199108	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8199109	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199110	Identifier	temps		8197778	0					
ANR	8199111	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199112	Identifier	args		8197778	0					
ANR	8199113	PrimaryExpression	2		8197778	1					
ANR	8199114	Identifier	state		8197778	1					
ANR	8199115	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8199116	CompoundStatement		515:56:8793:8793	8197778	1					
ANR	8199117	Label	and_const :	519:8:8854:8863	8197778	0	True				
ANR	8199118	Identifier	and_const		8197778	0					
ANR	8199119	ExpressionStatement	affected = temps [ args [ 1 ] ] . mask & ~mask	521:16:8882:8920	8197778	1	True				
ANR	8199120	AssignmentExpression	affected = temps [ args [ 1 ] ] . mask & ~mask		8197778	0		=			
ANR	8199121	Identifier	affected		8197778	0					
ANR	8199122	BitAndExpression	temps [ args [ 1 ] ] . mask & ~mask		8197778	1		&			
ANR	8199123	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199124	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199125	Identifier	temps		8197778	0					
ANR	8199126	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199127	Identifier	args		8197778	0					
ANR	8199128	PrimaryExpression	1		8197778	1					
ANR	8199129	Identifier	mask		8197778	1					
ANR	8199130	Identifier	~mask		8197778	1					
ANR	8199131	ExpressionStatement	mask = temps [ args [ 1 ] ] . mask & mask	525:12:8950:8983	8197778	38	True				
ANR	8199132	AssignmentExpression	mask = temps [ args [ 1 ] ] . mask & mask		8197778	0		=			
ANR	8199133	Identifier	mask		8197778	0					
ANR	8199134	BitAndExpression	temps [ args [ 1 ] ] . mask & mask		8197778	1		&			
ANR	8199135	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199136	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199137	Identifier	temps		8197778	0					
ANR	8199138	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199139	Identifier	args		8197778	0					
ANR	8199140	PrimaryExpression	1		8197778	1					
ANR	8199141	Identifier	mask		8197778	1					
ANR	8199142	Identifier	mask		8197778	1					
ANR	8199143	BreakStatement	break ;	527:12:8998:9003	8197778	39	True				
ANR	8199144	Statement	CASE_OP_32_64	531:8:9016:9028	8197778	40	True				
ANR	8199145	Statement	(	531:21:9029:9029	8197778	41	True				
ANR	8199146	Statement	andc	531:22:9030:9033	8197778	42	True				
ANR	8199147	Statement	)	531:26:9034:9034	8197778	43	True				
ANR	8199148	Statement	:	531:27:9035:9035	8197778	44	True				
ANR	8199149	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8197778	45					
ANR	8199150	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	537:16:9201:9238	8197778	0	True				
ANR	8199151	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8199152	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8199153	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199154	Identifier	temps		8197778	0					
ANR	8199155	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199156	Identifier	args		8197778	0					
ANR	8199157	PrimaryExpression	2		8197778	1					
ANR	8199158	Identifier	state		8197778	1					
ANR	8199159	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8199160	CompoundStatement		535:56:9191:9191	8197778	1					
ANR	8199161	ExpressionStatement	mask = ~temps [ args [ 2 ] ] . mask	539:16:9260:9287	8197778	0	True				
ANR	8199162	AssignmentExpression	mask = ~temps [ args [ 2 ] ] . mask		8197778	0		=			
ANR	8199163	Identifier	mask		8197778	0					
ANR	8199164	MemberAccess	~temps [ args [ 2 ] ] . mask		8197778	1					
ANR	8199165	ArrayIndexing	~temps [ args [ 2 ] ]		8197778	0					
ANR	8199166	Identifier	~temps		8197778	0					
ANR	8199167	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199168	Identifier	args		8197778	0					
ANR	8199169	PrimaryExpression	2		8197778	1					
ANR	8199170	Identifier	mask		8197778	1					
ANR	8199171	GotoStatement	goto and_const ;	541:16:9306:9320	8197778	1	True				
ANR	8199172	Identifier	and_const		8197778	0					
ANR	8199173	ExpressionStatement	mask = temps [ args [ 1 ] ] . mask	547:12:9427:9453	8197778	46	True				
ANR	8199174	AssignmentExpression	mask = temps [ args [ 1 ] ] . mask		8197778	0		=			
ANR	8199175	Identifier	mask		8197778	0					
ANR	8199176	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	1					
ANR	8199177	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199178	Identifier	temps		8197778	0					
ANR	8199179	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199180	Identifier	args		8197778	0					
ANR	8199181	PrimaryExpression	1		8197778	1					
ANR	8199182	Identifier	mask		8197778	1					
ANR	8199183	BreakStatement	break ;	549:12:9468:9473	8197778	47	True				
ANR	8199184	Label	case INDEX_op_sar_i32 :	553:8:9486:9507	8197778	48	True				
ANR	8199185	Identifier	INDEX_op_sar_i32		8197778	0					
ANR	8199186	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8197778	49					
ANR	8199187	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	555:16:9526:9563	8197778	0	True				
ANR	8199188	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8199189	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8199190	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199191	Identifier	temps		8197778	0					
ANR	8199192	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199193	Identifier	args		8197778	0					
ANR	8199194	PrimaryExpression	2		8197778	1					
ANR	8199195	Identifier	state		8197778	1					
ANR	8199196	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8199197	CompoundStatement		553:56:9516:9516	8197778	1					
ANR	8199198	ExpressionStatement	tmp = temps [ args [ 2 ] ] . val & 31	557:16:9585:9614	8197778	0	True				
ANR	8199199	AssignmentExpression	tmp = temps [ args [ 2 ] ] . val & 31		8197778	0		=			
ANR	8199200	Identifier	tmp		8197778	0					
ANR	8199201	BitAndExpression	temps [ args [ 2 ] ] . val & 31		8197778	1		&			
ANR	8199202	MemberAccess	temps [ args [ 2 ] ] . val		8197778	0					
ANR	8199203	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199204	Identifier	temps		8197778	0					
ANR	8199205	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199206	Identifier	args		8197778	0					
ANR	8199207	PrimaryExpression	2		8197778	1					
ANR	8199208	Identifier	val		8197778	1					
ANR	8199209	PrimaryExpression	31		8197778	1					
ANR	8199210	ExpressionStatement	mask = ( int32_t ) temps [ args [ 1 ] ] . mask >> tmp	559:16:9633:9675	8197778	1	True				
ANR	8199211	AssignmentExpression	mask = ( int32_t ) temps [ args [ 1 ] ] . mask >> tmp		8197778	0		=			
ANR	8199212	Identifier	mask		8197778	0					
ANR	8199213	ShiftExpression	( int32_t ) temps [ args [ 1 ] ] . mask >> tmp		8197778	1		>>			
ANR	8199214	CastExpression	( int32_t ) temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199215	CastTarget	int32_t		8197778	0					
ANR	8199216	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	1					
ANR	8199217	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199218	Identifier	temps		8197778	0					
ANR	8199219	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199220	Identifier	args		8197778	0					
ANR	8199221	PrimaryExpression	1		8197778	1					
ANR	8199222	Identifier	mask		8197778	1					
ANR	8199223	Identifier	tmp		8197778	1					
ANR	8199224	BreakStatement	break ;	563:12:9705:9710	8197778	50	True				
ANR	8199225	Label	case INDEX_op_sar_i64 :	565:8:9721:9742	8197778	51	True				
ANR	8199226	Identifier	INDEX_op_sar_i64		8197778	0					
ANR	8199227	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8197778	52					
ANR	8199228	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	567:16:9761:9798	8197778	0	True				
ANR	8199229	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8199230	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8199231	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199232	Identifier	temps		8197778	0					
ANR	8199233	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199234	Identifier	args		8197778	0					
ANR	8199235	PrimaryExpression	2		8197778	1					
ANR	8199236	Identifier	state		8197778	1					
ANR	8199237	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8199238	CompoundStatement		565:56:9751:9751	8197778	1					
ANR	8199239	ExpressionStatement	tmp = temps [ args [ 2 ] ] . val & 63	569:16:9820:9849	8197778	0	True				
ANR	8199240	AssignmentExpression	tmp = temps [ args [ 2 ] ] . val & 63		8197778	0		=			
ANR	8199241	Identifier	tmp		8197778	0					
ANR	8199242	BitAndExpression	temps [ args [ 2 ] ] . val & 63		8197778	1		&			
ANR	8199243	MemberAccess	temps [ args [ 2 ] ] . val		8197778	0					
ANR	8199244	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199245	Identifier	temps		8197778	0					
ANR	8199246	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199247	Identifier	args		8197778	0					
ANR	8199248	PrimaryExpression	2		8197778	1					
ANR	8199249	Identifier	val		8197778	1					
ANR	8199250	PrimaryExpression	63		8197778	1					
ANR	8199251	ExpressionStatement	mask = ( int64_t ) temps [ args [ 1 ] ] . mask >> tmp	571:16:9868:9910	8197778	1	True				
ANR	8199252	AssignmentExpression	mask = ( int64_t ) temps [ args [ 1 ] ] . mask >> tmp		8197778	0		=			
ANR	8199253	Identifier	mask		8197778	0					
ANR	8199254	ShiftExpression	( int64_t ) temps [ args [ 1 ] ] . mask >> tmp		8197778	1		>>			
ANR	8199255	CastExpression	( int64_t ) temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199256	CastTarget	int64_t		8197778	0					
ANR	8199257	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	1					
ANR	8199258	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199259	Identifier	temps		8197778	0					
ANR	8199260	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199261	Identifier	args		8197778	0					
ANR	8199262	PrimaryExpression	1		8197778	1					
ANR	8199263	Identifier	mask		8197778	1					
ANR	8199264	Identifier	tmp		8197778	1					
ANR	8199265	BreakStatement	break ;	575:12:9940:9945	8197778	53	True				
ANR	8199266	Label	case INDEX_op_shr_i32 :	579:8:9958:9979	8197778	54	True				
ANR	8199267	Identifier	INDEX_op_shr_i32		8197778	0					
ANR	8199268	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8197778	55					
ANR	8199269	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	581:16:9998:10035	8197778	0	True				
ANR	8199270	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8199271	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8199272	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199273	Identifier	temps		8197778	0					
ANR	8199274	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199275	Identifier	args		8197778	0					
ANR	8199276	PrimaryExpression	2		8197778	1					
ANR	8199277	Identifier	state		8197778	1					
ANR	8199278	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8199279	CompoundStatement		579:56:9988:9988	8197778	1					
ANR	8199280	ExpressionStatement	tmp = temps [ args [ 2 ] ] . val & 31	583:16:10057:10086	8197778	0	True				
ANR	8199281	AssignmentExpression	tmp = temps [ args [ 2 ] ] . val & 31		8197778	0		=			
ANR	8199282	Identifier	tmp		8197778	0					
ANR	8199283	BitAndExpression	temps [ args [ 2 ] ] . val & 31		8197778	1		&			
ANR	8199284	MemberAccess	temps [ args [ 2 ] ] . val		8197778	0					
ANR	8199285	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199286	Identifier	temps		8197778	0					
ANR	8199287	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199288	Identifier	args		8197778	0					
ANR	8199289	PrimaryExpression	2		8197778	1					
ANR	8199290	Identifier	val		8197778	1					
ANR	8199291	PrimaryExpression	31		8197778	1					
ANR	8199292	ExpressionStatement	mask = ( uint32_t ) temps [ args [ 1 ] ] . mask >> tmp	585:16:10105:10148	8197778	1	True				
ANR	8199293	AssignmentExpression	mask = ( uint32_t ) temps [ args [ 1 ] ] . mask >> tmp		8197778	0		=			
ANR	8199294	Identifier	mask		8197778	0					
ANR	8199295	ShiftExpression	( uint32_t ) temps [ args [ 1 ] ] . mask >> tmp		8197778	1		>>			
ANR	8199296	CastExpression	( uint32_t ) temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199297	CastTarget	uint32_t		8197778	0					
ANR	8199298	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	1					
ANR	8199299	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199300	Identifier	temps		8197778	0					
ANR	8199301	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199302	Identifier	args		8197778	0					
ANR	8199303	PrimaryExpression	1		8197778	1					
ANR	8199304	Identifier	mask		8197778	1					
ANR	8199305	Identifier	tmp		8197778	1					
ANR	8199306	BreakStatement	break ;	589:12:10178:10183	8197778	56	True				
ANR	8199307	Label	case INDEX_op_shr_i64 :	591:8:10194:10215	8197778	57	True				
ANR	8199308	Identifier	INDEX_op_shr_i64		8197778	0					
ANR	8199309	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8197778	58					
ANR	8199310	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	593:16:10234:10271	8197778	0	True				
ANR	8199311	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8199312	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8199313	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199314	Identifier	temps		8197778	0					
ANR	8199315	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199316	Identifier	args		8197778	0					
ANR	8199317	PrimaryExpression	2		8197778	1					
ANR	8199318	Identifier	state		8197778	1					
ANR	8199319	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8199320	CompoundStatement		591:56:10224:10224	8197778	1					
ANR	8199321	ExpressionStatement	tmp = temps [ args [ 2 ] ] . val & 63	595:16:10293:10322	8197778	0	True				
ANR	8199322	AssignmentExpression	tmp = temps [ args [ 2 ] ] . val & 63		8197778	0		=			
ANR	8199323	Identifier	tmp		8197778	0					
ANR	8199324	BitAndExpression	temps [ args [ 2 ] ] . val & 63		8197778	1		&			
ANR	8199325	MemberAccess	temps [ args [ 2 ] ] . val		8197778	0					
ANR	8199326	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199327	Identifier	temps		8197778	0					
ANR	8199328	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199329	Identifier	args		8197778	0					
ANR	8199330	PrimaryExpression	2		8197778	1					
ANR	8199331	Identifier	val		8197778	1					
ANR	8199332	PrimaryExpression	63		8197778	1					
ANR	8199333	ExpressionStatement	mask = ( uint64_t ) temps [ args [ 1 ] ] . mask >> tmp	597:16:10341:10384	8197778	1	True				
ANR	8199334	AssignmentExpression	mask = ( uint64_t ) temps [ args [ 1 ] ] . mask >> tmp		8197778	0		=			
ANR	8199335	Identifier	mask		8197778	0					
ANR	8199336	ShiftExpression	( uint64_t ) temps [ args [ 1 ] ] . mask >> tmp		8197778	1		>>			
ANR	8199337	CastExpression	( uint64_t ) temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199338	CastTarget	uint64_t		8197778	0					
ANR	8199339	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	1					
ANR	8199340	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199341	Identifier	temps		8197778	0					
ANR	8199342	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199343	Identifier	args		8197778	0					
ANR	8199344	PrimaryExpression	1		8197778	1					
ANR	8199345	Identifier	mask		8197778	1					
ANR	8199346	Identifier	tmp		8197778	1					
ANR	8199347	BreakStatement	break ;	601:12:10414:10419	8197778	59	True				
ANR	8199348	Label	case INDEX_op_trunc_shr_i32 :	605:8:10432:10459	8197778	60	True				
ANR	8199349	Identifier	INDEX_op_trunc_shr_i32		8197778	0					
ANR	8199350	ExpressionStatement	mask = ( uint64_t ) temps [ args [ 1 ] ] . mask >> args [ 2 ]	607:12:10474:10521	8197778	61	True				
ANR	8199351	AssignmentExpression	mask = ( uint64_t ) temps [ args [ 1 ] ] . mask >> args [ 2 ]		8197778	0		=			
ANR	8199352	Identifier	mask		8197778	0					
ANR	8199353	ShiftExpression	( uint64_t ) temps [ args [ 1 ] ] . mask >> args [ 2 ]		8197778	1		>>			
ANR	8199354	CastExpression	( uint64_t ) temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199355	CastTarget	uint64_t		8197778	0					
ANR	8199356	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	1					
ANR	8199357	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199358	Identifier	temps		8197778	0					
ANR	8199359	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199360	Identifier	args		8197778	0					
ANR	8199361	PrimaryExpression	1		8197778	1					
ANR	8199362	Identifier	mask		8197778	1					
ANR	8199363	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199364	Identifier	args		8197778	0					
ANR	8199365	PrimaryExpression	2		8197778	1					
ANR	8199366	BreakStatement	break ;	609:12:10536:10541	8197778	62	True				
ANR	8199367	Statement	CASE_OP_32_64	613:8:10554:10566	8197778	63	True				
ANR	8199368	Statement	(	613:21:10567:10567	8197778	64	True				
ANR	8199369	Statement	shl	613:22:10568:10570	8197778	65	True				
ANR	8199370	Statement	)	613:25:10571:10571	8197778	66	True				
ANR	8199371	Statement	:	613:26:10572:10572	8197778	67	True				
ANR	8199372	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8197778	68					
ANR	8199373	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	615:16:10591:10628	8197778	0	True				
ANR	8199374	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8199375	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8199376	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199377	Identifier	temps		8197778	0					
ANR	8199378	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199379	Identifier	args		8197778	0					
ANR	8199380	PrimaryExpression	2		8197778	1					
ANR	8199381	Identifier	state		8197778	1					
ANR	8199382	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8199383	CompoundStatement		613:56:10581:10581	8197778	1					
ANR	8199384	ExpressionStatement	tmp = temps [ args [ 2 ] ] . val & ( TCG_TARGET_REG_BITS - 1 )	617:16:10650:10702	8197778	0	True				
ANR	8199385	AssignmentExpression	tmp = temps [ args [ 2 ] ] . val & ( TCG_TARGET_REG_BITS - 1 )		8197778	0		=			
ANR	8199386	Identifier	tmp		8197778	0					
ANR	8199387	BitAndExpression	temps [ args [ 2 ] ] . val & ( TCG_TARGET_REG_BITS - 1 )		8197778	1		&			
ANR	8199388	MemberAccess	temps [ args [ 2 ] ] . val		8197778	0					
ANR	8199389	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199390	Identifier	temps		8197778	0					
ANR	8199391	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199392	Identifier	args		8197778	0					
ANR	8199393	PrimaryExpression	2		8197778	1					
ANR	8199394	Identifier	val		8197778	1					
ANR	8199395	AdditiveExpression	TCG_TARGET_REG_BITS - 1		8197778	1		-			
ANR	8199396	Identifier	TCG_TARGET_REG_BITS		8197778	0					
ANR	8199397	PrimaryExpression	1		8197778	1					
ANR	8199398	ExpressionStatement	mask = temps [ args [ 1 ] ] . mask << tmp	619:16:10721:10754	8197778	1	True				
ANR	8199399	AssignmentExpression	mask = temps [ args [ 1 ] ] . mask << tmp		8197778	0		=			
ANR	8199400	Identifier	mask		8197778	0					
ANR	8199401	ShiftExpression	temps [ args [ 1 ] ] . mask << tmp		8197778	1		<<			
ANR	8199402	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199403	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199404	Identifier	temps		8197778	0					
ANR	8199405	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199406	Identifier	args		8197778	0					
ANR	8199407	PrimaryExpression	1		8197778	1					
ANR	8199408	Identifier	mask		8197778	1					
ANR	8199409	Identifier	tmp		8197778	1					
ANR	8199410	BreakStatement	break ;	623:12:10784:10789	8197778	69	True				
ANR	8199411	Statement	CASE_OP_32_64	627:8:10802:10814	8197778	70	True				
ANR	8199412	Statement	(	627:21:10815:10815	8197778	71	True				
ANR	8199413	Statement	neg	627:22:10816:10818	8197778	72	True				
ANR	8199414	Statement	)	627:25:10819:10819	8197778	73	True				
ANR	8199415	Statement	:	627:26:10820:10820	8197778	74	True				
ANR	8199416	ExpressionStatement	mask = - ( temps [ args [ 1 ] ] . mask & - temps [ args [ 1 ] ] . mask )	631:12:10903:10955	8197778	75	True				
ANR	8199417	AssignmentExpression	mask = - ( temps [ args [ 1 ] ] . mask & - temps [ args [ 1 ] ] . mask )		8197778	0		=			
ANR	8199418	Identifier	mask		8197778	0					
ANR	8199419	UnaryOperationExpression	- ( temps [ args [ 1 ] ] . mask & - temps [ args [ 1 ] ] . mask )		8197778	1					
ANR	8199420	UnaryOperator	-		8197778	0					
ANR	8199421	BitAndExpression	temps [ args [ 1 ] ] . mask & - temps [ args [ 1 ] ] . mask		8197778	1		&			
ANR	8199422	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199423	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199424	Identifier	temps		8197778	0					
ANR	8199425	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199426	Identifier	args		8197778	0					
ANR	8199427	PrimaryExpression	1		8197778	1					
ANR	8199428	Identifier	mask		8197778	1					
ANR	8199429	UnaryOperationExpression	- temps [ args [ 1 ] ] . mask		8197778	1					
ANR	8199430	UnaryOperator	-		8197778	0					
ANR	8199431	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	1					
ANR	8199432	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199433	Identifier	temps		8197778	0					
ANR	8199434	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199435	Identifier	args		8197778	0					
ANR	8199436	PrimaryExpression	1		8197778	1					
ANR	8199437	Identifier	mask		8197778	1					
ANR	8199438	BreakStatement	break ;	633:12:10970:10975	8197778	76	True				
ANR	8199439	Statement	CASE_OP_32_64	637:8:10988:11000	8197778	77	True				
ANR	8199440	Statement	(	637:21:11001:11001	8197778	78	True				
ANR	8199441	Statement	deposit	637:22:11002:11008	8197778	79	True				
ANR	8199442	Statement	)	637:29:11009:11009	8197778	80	True				
ANR	8199443	Statement	:	637:30:11010:11010	8197778	81	True				
ANR	8199444	ExpressionStatement	"mask = deposit64 ( temps [ args [ 1 ] ] . mask , args [ 3 ] , args [ 4 ] , temps [ args [ 2 ] ] . mask )"	639:12:11025:11131	8197778	82	True				
ANR	8199445	AssignmentExpression	"mask = deposit64 ( temps [ args [ 1 ] ] . mask , args [ 3 ] , args [ 4 ] , temps [ args [ 2 ] ] . mask )"		8197778	0		=			
ANR	8199446	Identifier	mask		8197778	0					
ANR	8199447	CallExpression	"deposit64 ( temps [ args [ 1 ] ] . mask , args [ 3 ] , args [ 4 ] , temps [ args [ 2 ] ] . mask )"		8197778	1					
ANR	8199448	Callee	deposit64		8197778	0					
ANR	8199449	Identifier	deposit64		8197778	0					
ANR	8199450	ArgumentList	temps [ args [ 1 ] ] . mask		8197778	1					
ANR	8199451	Argument	temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199452	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199453	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199454	Identifier	temps		8197778	0					
ANR	8199455	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199456	Identifier	args		8197778	0					
ANR	8199457	PrimaryExpression	1		8197778	1					
ANR	8199458	Identifier	mask		8197778	1					
ANR	8199459	Argument	args [ 3 ]		8197778	1					
ANR	8199460	ArrayIndexing	args [ 3 ]		8197778	0					
ANR	8199461	Identifier	args		8197778	0					
ANR	8199462	PrimaryExpression	3		8197778	1					
ANR	8199463	Argument	args [ 4 ]		8197778	2					
ANR	8199464	ArrayIndexing	args [ 4 ]		8197778	0					
ANR	8199465	Identifier	args		8197778	0					
ANR	8199466	PrimaryExpression	4		8197778	1					
ANR	8199467	Argument	temps [ args [ 2 ] ] . mask		8197778	3					
ANR	8199468	MemberAccess	temps [ args [ 2 ] ] . mask		8197778	0					
ANR	8199469	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199470	Identifier	temps		8197778	0					
ANR	8199471	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199472	Identifier	args		8197778	0					
ANR	8199473	PrimaryExpression	2		8197778	1					
ANR	8199474	Identifier	mask		8197778	1					
ANR	8199475	BreakStatement	break ;	643:12:11146:11151	8197778	83	True				
ANR	8199476	Statement	CASE_OP_32_64	647:8:11164:11176	8197778	84	True				
ANR	8199477	Statement	(	647:21:11177:11177	8197778	85	True				
ANR	8199478	Statement	or	647:22:11178:11179	8197778	86	True				
ANR	8199479	Statement	)	647:24:11180:11180	8197778	87	True				
ANR	8199480	Statement	:	647:25:11181:11181	8197778	88	True				
ANR	8199481	Statement	CASE_OP_32_64	649:8:11192:11204	8197778	89	True				
ANR	8199482	Statement	(	649:21:11205:11205	8197778	90	True				
ANR	8199483	Statement	xor	649:22:11206:11208	8197778	91	True				
ANR	8199484	Statement	)	649:25:11209:11209	8197778	92	True				
ANR	8199485	Statement	:	649:26:11210:11210	8197778	93	True				
ANR	8199486	ExpressionStatement	mask = temps [ args [ 1 ] ] . mask | temps [ args [ 2 ] ] . mask	651:12:11225:11273	8197778	94	True				
ANR	8199487	AssignmentExpression	mask = temps [ args [ 1 ] ] . mask | temps [ args [ 2 ] ] . mask		8197778	0		=			
ANR	8199488	Identifier	mask		8197778	0					
ANR	8199489	InclusiveOrExpression	temps [ args [ 1 ] ] . mask | temps [ args [ 2 ] ] . mask		8197778	1		|			
ANR	8199490	MemberAccess	temps [ args [ 1 ] ] . mask		8197778	0					
ANR	8199491	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8199492	Identifier	temps		8197778	0					
ANR	8199493	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8199494	Identifier	args		8197778	0					
ANR	8199495	PrimaryExpression	1		8197778	1					
ANR	8199496	Identifier	mask		8197778	1					
ANR	8199497	MemberAccess	temps [ args [ 2 ] ] . mask		8197778	1					
ANR	8199498	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199499	Identifier	temps		8197778	0					
ANR	8199500	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199501	Identifier	args		8197778	0					
ANR	8199502	PrimaryExpression	2		8197778	1					
ANR	8199503	Identifier	mask		8197778	1					
ANR	8199504	BreakStatement	break ;	653:12:11288:11293	8197778	95	True				
ANR	8199505	Statement	CASE_OP_32_64	657:8:11306:11318	8197778	96	True				
ANR	8199506	Statement	(	657:21:11319:11319	8197778	97	True				
ANR	8199507	Statement	setcond	657:22:11320:11326	8197778	98	True				
ANR	8199508	Statement	)	657:29:11327:11327	8197778	99	True				
ANR	8199509	Statement	:	657:30:11328:11328	8197778	100	True				
ANR	8199510	Label	case INDEX_op_setcond2_i32 :	659:8:11339:11365	8197778	101	True				
ANR	8199511	Identifier	INDEX_op_setcond2_i32		8197778	0					
ANR	8199512	ExpressionStatement	mask = 1	661:12:11380:11388	8197778	102	True				
ANR	8199513	AssignmentExpression	mask = 1		8197778	0		=			
ANR	8199514	Identifier	mask		8197778	0					
ANR	8199515	PrimaryExpression	1		8197778	1					
ANR	8199516	BreakStatement	break ;	663:12:11403:11408	8197778	103	True				
ANR	8199517	Statement	CASE_OP_32_64	667:8:11421:11433	8197778	104	True				
ANR	8199518	Statement	(	667:21:11434:11434	8197778	105	True				
ANR	8199519	Statement	movcond	667:22:11435:11441	8197778	106	True				
ANR	8199520	Statement	)	667:29:11442:11442	8197778	107	True				
ANR	8199521	Statement	:	667:30:11443:11443	8197778	108	True				
ANR	8199522	ExpressionStatement	mask = temps [ args [ 3 ] ] . mask | temps [ args [ 4 ] ] . mask	669:12:11458:11506	8197778	109	True				
ANR	8199523	AssignmentExpression	mask = temps [ args [ 3 ] ] . mask | temps [ args [ 4 ] ] . mask		8197778	0		=			
ANR	8199524	Identifier	mask		8197778	0					
ANR	8199525	InclusiveOrExpression	temps [ args [ 3 ] ] . mask | temps [ args [ 4 ] ] . mask		8197778	1		|			
ANR	8199526	MemberAccess	temps [ args [ 3 ] ] . mask		8197778	0					
ANR	8199527	ArrayIndexing	temps [ args [ 3 ] ]		8197778	0					
ANR	8199528	Identifier	temps		8197778	0					
ANR	8199529	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8199530	Identifier	args		8197778	0					
ANR	8199531	PrimaryExpression	3		8197778	1					
ANR	8199532	Identifier	mask		8197778	1					
ANR	8199533	MemberAccess	temps [ args [ 4 ] ] . mask		8197778	1					
ANR	8199534	ArrayIndexing	temps [ args [ 4 ] ]		8197778	0					
ANR	8199535	Identifier	temps		8197778	0					
ANR	8199536	ArrayIndexing	args [ 4 ]		8197778	1					
ANR	8199537	Identifier	args		8197778	0					
ANR	8199538	PrimaryExpression	4		8197778	1					
ANR	8199539	Identifier	mask		8197778	1					
ANR	8199540	BreakStatement	break ;	671:12:11521:11526	8197778	110	True				
ANR	8199541	Statement	CASE_OP_32_64	675:8:11539:11551	8197778	111	True				
ANR	8199542	Statement	(	675:21:11552:11552	8197778	112	True				
ANR	8199543	Statement	ld8u	675:22:11553:11556	8197778	113	True				
ANR	8199544	Statement	)	675:26:11557:11557	8197778	114	True				
ANR	8199545	Statement	:	675:27:11558:11558	8197778	115	True				
ANR	8199546	ExpressionStatement	mask = 0xff	677:12:11573:11584	8197778	116	True				
ANR	8199547	AssignmentExpression	mask = 0xff		8197778	0		=			
ANR	8199548	Identifier	mask		8197778	0					
ANR	8199549	PrimaryExpression	0xff		8197778	1					
ANR	8199550	BreakStatement	break ;	679:12:11599:11604	8197778	117	True				
ANR	8199551	Statement	CASE_OP_32_64	681:8:11615:11627	8197778	118	True				
ANR	8199552	Statement	(	681:21:11628:11628	8197778	119	True				
ANR	8199553	Statement	ld16u	681:22:11629:11633	8197778	120	True				
ANR	8199554	Statement	)	681:27:11634:11634	8197778	121	True				
ANR	8199555	Statement	:	681:28:11635:11635	8197778	122	True				
ANR	8199556	ExpressionStatement	mask = 0xffff	683:12:11650:11663	8197778	123	True				
ANR	8199557	AssignmentExpression	mask = 0xffff		8197778	0		=			
ANR	8199558	Identifier	mask		8197778	0					
ANR	8199559	PrimaryExpression	0xffff		8197778	1					
ANR	8199560	BreakStatement	break ;	685:12:11678:11683	8197778	124	True				
ANR	8199561	Label	case INDEX_op_ld32u_i64 :	687:8:11694:11717	8197778	125	True				
ANR	8199562	Identifier	INDEX_op_ld32u_i64		8197778	0					
ANR	8199563	ExpressionStatement	mask = 0xffffffffu	689:12:11732:11750	8197778	126	True				
ANR	8199564	AssignmentExpression	mask = 0xffffffffu		8197778	0		=			
ANR	8199565	Identifier	mask		8197778	0					
ANR	8199566	PrimaryExpression	0xffffffffu		8197778	1					
ANR	8199567	BreakStatement	break ;	691:12:11765:11770	8197778	127	True				
ANR	8199568	Statement	CASE_OP_32_64	695:8:11783:11795	8197778	128	True				
ANR	8199569	Statement	(	695:21:11796:11796	8197778	129	True				
ANR	8199570	Statement	qemu_ld	695:22:11797:11803	8197778	130	True				
ANR	8199571	Statement	)	695:29:11804:11804	8197778	131	True				
ANR	8199572	Statement	:	695:30:11805:11805	8197778	132	True				
ANR	8199573	CompoundStatement		699:16:11850:11878	8197778	133					
ANR	8199574	IdentifierDeclStatement	TCGMemOpIdx oi = args [ nb_oargs + nb_iargs ] ;	699:16:11839:11881	8197778	0	True				
ANR	8199575	IdentifierDecl	oi = args [ nb_oargs + nb_iargs ]		8197778	0					
ANR	8199576	IdentifierDeclType	TCGMemOpIdx		8197778	0					
ANR	8199577	Identifier	oi		8197778	1					
ANR	8199578	AssignmentExpression	oi = args [ nb_oargs + nb_iargs ]		8197778	2		=			
ANR	8199579	Identifier	oi		8197778	0					
ANR	8199580	ArrayIndexing	args [ nb_oargs + nb_iargs ]		8197778	1					
ANR	8199581	Identifier	args		8197778	0					
ANR	8199582	AdditiveExpression	nb_oargs + nb_iargs		8197778	1		+			
ANR	8199583	Identifier	nb_oargs		8197778	0					
ANR	8199584	Identifier	nb_iargs		8197778	1					
ANR	8199585	IdentifierDeclStatement	TCGMemOp mop = get_memop ( oi ) ;	701:16:11900:11928	8197778	1	True				
ANR	8199586	IdentifierDecl	mop = get_memop ( oi )		8197778	0					
ANR	8199587	IdentifierDeclType	TCGMemOp		8197778	0					
ANR	8199588	Identifier	mop		8197778	1					
ANR	8199589	AssignmentExpression	mop = get_memop ( oi )		8197778	2		=			
ANR	8199590	Identifier	mop		8197778	0					
ANR	8199591	CallExpression	get_memop ( oi )		8197778	1					
ANR	8199592	Callee	get_memop		8197778	0					
ANR	8199593	Identifier	get_memop		8197778	0					
ANR	8199594	ArgumentList	oi		8197778	1					
ANR	8199595	Argument	oi		8197778	0					
ANR	8199596	Identifier	oi		8197778	0					
ANR	8199597	IfStatement	if ( ! ( mop & MO_SIGN ) )		8197778	2					
ANR	8199598	Condition	! ( mop & MO_SIGN )	703:20:11951:11966	8197778	0	True				
ANR	8199599	UnaryOperationExpression	! ( mop & MO_SIGN )		8197778	0					
ANR	8199600	UnaryOperator	!		8197778	0					
ANR	8199601	BitAndExpression	mop & MO_SIGN		8197778	1		&			
ANR	8199602	Identifier	mop		8197778	0					
ANR	8199603	Identifier	MO_SIGN		8197778	1					
ANR	8199604	CompoundStatement		701:38:11919:11919	8197778	1					
ANR	8199605	Statement	mask	705:20:11992:11995	8197778	0	True				
ANR	8199606	Statement	=	705:25:11997:11997	8197778	1	True				
ANR	8199607	Statement	(	705:27:11999:11999	8197778	2	True				
ANR	8199608	Statement	2UL	705:28:12000:12002	8197778	3	True				
ANR	8199609	Statement	L	705:31:12003:12003	8197778	4	True				
ANR	8199610	Statement	<<	705:33:12005:12006	8197778	5	True				
ANR	8199611	Statement	(	705:36:12008:12008	8197778	6	True				
ANR	8199612	Statement	(	705:37:12009:12009	8197778	7	True				
ANR	8199613	Statement	8	705:38:12010:12010	8197778	8	True				
ANR	8199614	Statement	<<	705:40:12012:12013	8197778	9	True				
ANR	8199615	Statement	(	705:43:12015:12015	8197778	10	True				
ANR	8199616	Statement	mop	705:44:12016:12018	8197778	11	True				
ANR	8199617	Statement	&	705:48:12020:12020	8197778	12	True				
ANR	8199618	Statement	MO_SIZE	705:50:12022:12028	8197778	13	True				
ANR	8199619	Statement	)	705:57:12029:12029	8197778	14	True				
ANR	8199620	Statement	)	705:58:12030:12030	8197778	15	True				
ANR	8199621	Statement	-	705:60:12032:12032	8197778	16	True				
ANR	8199622	Statement	1	705:62:12034:12034	8197778	17	True				
ANR	8199623	Statement	)	705:63:12035:12035	8197778	18	True				
ANR	8199624	Statement	)	705:64:12036:12036	8197778	19	True				
ANR	8199625	ExpressionStatement	- 1	705:66:12038:12041	8197778	20	True				
ANR	8199626	UnaryOperationExpression	- 1		8197778	0					
ANR	8199627	UnaryOperator	-		8197778	0					
ANR	8199628	PrimaryExpression	1		8197778	1					
ANR	8199629	BreakStatement	break ;	711:12:12090:12095	8197778	134	True				
ANR	8199630	Label	default :	715:8:12108:12115	8197778	135	True				
ANR	8199631	Identifier	default		8197778	0					
ANR	8199632	BreakStatement	break ;	717:12:12130:12135	8197778	136	True				
ANR	8199633	ExpressionStatement	partmask = mask	729:8:12380:12395	8197778	22	True				
ANR	8199634	AssignmentExpression	partmask = mask		8197778	0		=			
ANR	8199635	Identifier	partmask		8197778	0					
ANR	8199636	Identifier	mask		8197778	1					
ANR	8199637	IfStatement	if ( ! ( def -> flags & TCG_OPF_64BIT ) )		8197778	23					
ANR	8199638	Condition	! ( def -> flags & TCG_OPF_64BIT )	731:12:12410:12438	8197778	0	True				
ANR	8199639	UnaryOperationExpression	! ( def -> flags & TCG_OPF_64BIT )		8197778	0					
ANR	8199640	UnaryOperator	!		8197778	0					
ANR	8199641	BitAndExpression	def -> flags & TCG_OPF_64BIT		8197778	1		&			
ANR	8199642	PtrMemberAccess	def -> flags		8197778	0					
ANR	8199643	Identifier	def		8197778	0					
ANR	8199644	Identifier	flags		8197778	1					
ANR	8199645	Identifier	TCG_OPF_64BIT		8197778	1					
ANR	8199646	CompoundStatement		729:43:12391:12391	8197778	1					
ANR	8199647	ExpressionStatement	mask |= ~ ( tcg_target_ulong ) 0xffffffffu	733:12:12456:12494	8197778	0	True				
ANR	8199648	AssignmentExpression	mask |= ~ ( tcg_target_ulong ) 0xffffffffu		8197778	0		|=			
ANR	8199649	Identifier	mask		8197778	0					
ANR	8199650	UnaryOperationExpression	~ ( tcg_target_ulong ) 0xffffffffu		8197778	1					
ANR	8199651	UnaryOperator	~		8197778	0					
ANR	8199652	CastExpression	( tcg_target_ulong ) 0xffffffffu		8197778	1					
ANR	8199653	CastTarget	tcg_target_ulong		8197778	0					
ANR	8199654	PrimaryExpression	0xffffffffu		8197778	1					
ANR	8199655	ExpressionStatement	partmask &= 0xffffffffu	735:12:12509:12532	8197778	1	True				
ANR	8199656	AssignmentExpression	partmask &= 0xffffffffu		8197778	0		&=			
ANR	8199657	Identifier	partmask		8197778	0					
ANR	8199658	PrimaryExpression	0xffffffffu		8197778	1					
ANR	8199659	ExpressionStatement	affected &= 0xffffffffu	737:12:12547:12570	8197778	2	True				
ANR	8199660	AssignmentExpression	affected &= 0xffffffffu		8197778	0		&=			
ANR	8199661	Identifier	affected		8197778	0					
ANR	8199662	PrimaryExpression	0xffffffffu		8197778	1					
ANR	8199663	IfStatement	if ( partmask == 0 )		8197778	24					
ANR	8199664	Condition	partmask == 0	743:12:12598:12610	8197778	0	True				
ANR	8199665	EqualityExpression	partmask == 0		8197778	0		==			
ANR	8199666	Identifier	partmask		8197778	0					
ANR	8199667	PrimaryExpression	0		8197778	1					
ANR	8199668	CompoundStatement		741:27:12563:12563	8197778	1					
ANR	8199669	ExpressionStatement	assert ( nb_oargs == 1 )	745:12:12628:12649	8197778	0	True				
ANR	8199670	CallExpression	assert ( nb_oargs == 1 )		8197778	0					
ANR	8199671	Callee	assert		8197778	0					
ANR	8199672	Identifier	assert		8197778	0					
ANR	8199673	ArgumentList	nb_oargs == 1		8197778	1					
ANR	8199674	Argument	nb_oargs == 1		8197778	0					
ANR	8199675	EqualityExpression	nb_oargs == 1		8197778	0		==			
ANR	8199676	Identifier	nb_oargs		8197778	0					
ANR	8199677	PrimaryExpression	1		8197778	1					
ANR	8199678	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"	747:12:12664:12705	8197778	1	True				
ANR	8199679	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"		8197778	0					
ANR	8199680	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8199681	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8199682	ArgumentList	s		8197778	1					
ANR	8199683	Argument	s		8197778	0					
ANR	8199684	Identifier	s		8197778	0					
ANR	8199685	Argument	op		8197778	1					
ANR	8199686	Identifier	op		8197778	0					
ANR	8199687	Argument	args		8197778	2					
ANR	8199688	Identifier	args		8197778	0					
ANR	8199689	Argument	args [ 0 ]		8197778	3					
ANR	8199690	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8199691	Identifier	args		8197778	0					
ANR	8199692	PrimaryExpression	0		8197778	1					
ANR	8199693	Argument	0		8197778	4					
ANR	8199694	PrimaryExpression	0		8197778	0					
ANR	8199695	ContinueStatement	continue ;	749:12:12720:12728	8197778	2	True				
ANR	8199696	IfStatement	if ( affected == 0 )		8197778	25					
ANR	8199697	Condition	affected == 0	753:12:12754:12766	8197778	0	True				
ANR	8199698	EqualityExpression	affected == 0		8197778	0		==			
ANR	8199699	Identifier	affected		8197778	0					
ANR	8199700	PrimaryExpression	0		8197778	1					
ANR	8199701	CompoundStatement		751:27:12719:12719	8197778	1					
ANR	8199702	ExpressionStatement	assert ( nb_oargs == 1 )	755:12:12784:12805	8197778	0	True				
ANR	8199703	CallExpression	assert ( nb_oargs == 1 )		8197778	0					
ANR	8199704	Callee	assert		8197778	0					
ANR	8199705	Identifier	assert		8197778	0					
ANR	8199706	ArgumentList	nb_oargs == 1		8197778	1					
ANR	8199707	Argument	nb_oargs == 1		8197778	0					
ANR	8199708	EqualityExpression	nb_oargs == 1		8197778	0		==			
ANR	8199709	Identifier	nb_oargs		8197778	0					
ANR	8199710	PrimaryExpression	1		8197778	1					
ANR	8199711	ExpressionStatement	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"	757:12:12820:12866	8197778	1	True				
ANR	8199712	CallExpression	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"		8197778	0					
ANR	8199713	Callee	tcg_opt_gen_mov		8197778	0					
ANR	8199714	Identifier	tcg_opt_gen_mov		8197778	0					
ANR	8199715	ArgumentList	s		8197778	1					
ANR	8199716	Argument	s		8197778	0					
ANR	8199717	Identifier	s		8197778	0					
ANR	8199718	Argument	op		8197778	1					
ANR	8199719	Identifier	op		8197778	0					
ANR	8199720	Argument	args		8197778	2					
ANR	8199721	Identifier	args		8197778	0					
ANR	8199722	Argument	args [ 0 ]		8197778	3					
ANR	8199723	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8199724	Identifier	args		8197778	0					
ANR	8199725	PrimaryExpression	0		8197778	1					
ANR	8199726	Argument	args [ 1 ]		8197778	4					
ANR	8199727	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8199728	Identifier	args		8197778	0					
ANR	8199729	PrimaryExpression	1		8197778	1					
ANR	8199730	ContinueStatement	continue ;	759:12:12881:12889	8197778	2	True				
ANR	8199731	SwitchStatement	switch ( opc )		8197778	26					
ANR	8199732	Condition	opc	767:16:12992:12994	8197778	0	True				
ANR	8199733	Identifier	opc		8197778	0					
ANR	8199734	CompoundStatement		765:21:12947:12947	8197778	1					
ANR	8199735	Statement	CASE_OP_32_64	769:8:13008:13020	8197778	0	True				
ANR	8199736	Statement	(	769:21:13021:13021	8197778	1	True				
ANR	8199737	Statement	and	769:22:13022:13024	8197778	2	True				
ANR	8199738	Statement	)	769:25:13025:13025	8197778	3	True				
ANR	8199739	Statement	:	769:26:13026:13026	8197778	4	True				
ANR	8199740	Statement	CASE_OP_32_64	771:8:13037:13049	8197778	5	True				
ANR	8199741	Statement	(	771:21:13050:13050	8197778	6	True				
ANR	8199742	Statement	mul	771:22:13051:13053	8197778	7	True				
ANR	8199743	Statement	)	771:25:13054:13054	8197778	8	True				
ANR	8199744	Statement	:	771:26:13055:13055	8197778	9	True				
ANR	8199745	Statement	CASE_OP_32_64	773:8:13066:13078	8197778	10	True				
ANR	8199746	Statement	(	773:21:13079:13079	8197778	11	True				
ANR	8199747	Statement	muluh	773:22:13080:13084	8197778	12	True				
ANR	8199748	Statement	)	773:27:13085:13085	8197778	13	True				
ANR	8199749	Statement	:	773:28:13086:13086	8197778	14	True				
ANR	8199750	Statement	CASE_OP_32_64	775:8:13097:13109	8197778	15	True				
ANR	8199751	Statement	(	775:21:13110:13110	8197778	16	True				
ANR	8199752	Statement	mulsh	775:22:13111:13115	8197778	17	True				
ANR	8199753	Statement	)	775:27:13116:13116	8197778	18	True				
ANR	8199754	Statement	:	775:28:13117:13117	8197778	19	True				
ANR	8199755	IfStatement	if ( ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 ) )		8197778	20					
ANR	8199756	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0	777:16:13136:13219	8197778	0	True				
ANR	8199757	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0		8197778	0		&&			
ANR	8199758	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8199759	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8199760	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199761	Identifier	temps		8197778	0					
ANR	8199762	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199763	Identifier	args		8197778	0					
ANR	8199764	PrimaryExpression	2		8197778	1					
ANR	8199765	Identifier	state		8197778	1					
ANR	8199766	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8199767	EqualityExpression	temps [ args [ 2 ] ] . val == 0		8197778	1		==			
ANR	8199768	MemberAccess	temps [ args [ 2 ] ] . val		8197778	0					
ANR	8199769	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8199770	Identifier	temps		8197778	0					
ANR	8199771	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8199772	Identifier	args		8197778	0					
ANR	8199773	PrimaryExpression	2		8197778	1					
ANR	8199774	Identifier	val		8197778	1					
ANR	8199775	PrimaryExpression	0		8197778	1					
ANR	8199776	CompoundStatement		777:45:13172:13172	8197778	1					
ANR	8199777	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"	781:16:13241:13282	8197778	0	True				
ANR	8199778	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"		8197778	0					
ANR	8199779	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8199780	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8199781	ArgumentList	s		8197778	1					
ANR	8199782	Argument	s		8197778	0					
ANR	8199783	Identifier	s		8197778	0					
ANR	8199784	Argument	op		8197778	1					
ANR	8199785	Identifier	op		8197778	0					
ANR	8199786	Argument	args		8197778	2					
ANR	8199787	Identifier	args		8197778	0					
ANR	8199788	Argument	args [ 0 ]		8197778	3					
ANR	8199789	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8199790	Identifier	args		8197778	0					
ANR	8199791	PrimaryExpression	0		8197778	1					
ANR	8199792	Argument	0		8197778	4					
ANR	8199793	PrimaryExpression	0		8197778	0					
ANR	8199794	ContinueStatement	continue ;	783:16:13301:13309	8197778	1	True				
ANR	8199795	BreakStatement	break ;	787:12:13339:13344	8197778	21	True				
ANR	8199796	Label	default :	789:8:13355:13362	8197778	22	True				
ANR	8199797	Identifier	default		8197778	0					
ANR	8199798	BreakStatement	break ;	791:12:13377:13382	8197778	23	True				
ANR	8199799	SwitchStatement	switch ( opc )		8197778	27					
ANR	8199800	Condition	opc	799:16:13484:13486	8197778	0	True				
ANR	8199801	Identifier	opc		8197778	0					
ANR	8199802	CompoundStatement		797:21:13439:13439	8197778	1					
ANR	8199803	Statement	CASE_OP_32_64	801:8:13500:13512	8197778	0	True				
ANR	8199804	Statement	(	801:21:13513:13513	8197778	1	True				
ANR	8199805	Statement	or	801:22:13514:13515	8197778	2	True				
ANR	8199806	Statement	)	801:24:13516:13516	8197778	3	True				
ANR	8199807	Statement	:	801:25:13517:13517	8197778	4	True				
ANR	8199808	Statement	CASE_OP_32_64	803:8:13528:13540	8197778	5	True				
ANR	8199809	Statement	(	803:21:13541:13541	8197778	6	True				
ANR	8199810	Statement	and	803:22:13542:13544	8197778	7	True				
ANR	8199811	Statement	)	803:25:13545:13545	8197778	8	True				
ANR	8199812	Statement	:	803:26:13546:13546	8197778	9	True				
ANR	8199813	IfStatement	"if ( temps_are_copies ( args [ 1 ] , args [ 2 ] ) )"		8197778	10					
ANR	8199814	Condition	"temps_are_copies ( args [ 1 ] , args [ 2 ] )"	805:16:13565:13598	8197778	0	True				
ANR	8199815	CallExpression	"temps_are_copies ( args [ 1 ] , args [ 2 ] )"		8197778	0					
ANR	8199816	Callee	temps_are_copies		8197778	0					
ANR	8199817	Identifier	temps_are_copies		8197778	0					
ANR	8199818	ArgumentList	args [ 1 ]		8197778	1					
ANR	8199819	Argument	args [ 1 ]		8197778	0					
ANR	8199820	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8199821	Identifier	args		8197778	0					
ANR	8199822	PrimaryExpression	1		8197778	1					
ANR	8199823	Argument	args [ 2 ]		8197778	1					
ANR	8199824	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8199825	Identifier	args		8197778	0					
ANR	8199826	PrimaryExpression	2		8197778	1					
ANR	8199827	CompoundStatement		803:52:13551:13551	8197778	1					
ANR	8199828	ExpressionStatement	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"	807:16:13620:13666	8197778	0	True				
ANR	8199829	CallExpression	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"		8197778	0					
ANR	8199830	Callee	tcg_opt_gen_mov		8197778	0					
ANR	8199831	Identifier	tcg_opt_gen_mov		8197778	0					
ANR	8199832	ArgumentList	s		8197778	1					
ANR	8199833	Argument	s		8197778	0					
ANR	8199834	Identifier	s		8197778	0					
ANR	8199835	Argument	op		8197778	1					
ANR	8199836	Identifier	op		8197778	0					
ANR	8199837	Argument	args		8197778	2					
ANR	8199838	Identifier	args		8197778	0					
ANR	8199839	Argument	args [ 0 ]		8197778	3					
ANR	8199840	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8199841	Identifier	args		8197778	0					
ANR	8199842	PrimaryExpression	0		8197778	1					
ANR	8199843	Argument	args [ 1 ]		8197778	4					
ANR	8199844	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8199845	Identifier	args		8197778	0					
ANR	8199846	PrimaryExpression	1		8197778	1					
ANR	8199847	ContinueStatement	continue ;	809:16:13685:13693	8197778	1	True				
ANR	8199848	BreakStatement	break ;	813:12:13723:13728	8197778	11	True				
ANR	8199849	Label	default :	815:8:13739:13746	8197778	12	True				
ANR	8199850	Identifier	default		8197778	0					
ANR	8199851	BreakStatement	break ;	817:12:13761:13766	8197778	13	True				
ANR	8199852	SwitchStatement	switch ( opc )		8197778	28					
ANR	8199853	Condition	opc	825:16:13869:13871	8197778	0	True				
ANR	8199854	Identifier	opc		8197778	0					
ANR	8199855	CompoundStatement		823:21:13824:13824	8197778	1					
ANR	8199856	Statement	CASE_OP_32_64	827:8:13885:13897	8197778	0	True				
ANR	8199857	Statement	(	827:21:13898:13898	8197778	1	True				
ANR	8199858	Statement	andc	827:22:13899:13902	8197778	2	True				
ANR	8199859	Statement	)	827:26:13903:13903	8197778	3	True				
ANR	8199860	Statement	:	827:27:13904:13904	8197778	4	True				
ANR	8199861	Statement	CASE_OP_32_64	829:8:13915:13927	8197778	5	True				
ANR	8199862	Statement	(	829:21:13928:13928	8197778	6	True				
ANR	8199863	Statement	sub	829:22:13929:13931	8197778	7	True				
ANR	8199864	Statement	)	829:25:13932:13932	8197778	8	True				
ANR	8199865	Statement	:	829:26:13933:13933	8197778	9	True				
ANR	8199866	Statement	CASE_OP_32_64	831:8:13944:13956	8197778	10	True				
ANR	8199867	Statement	(	831:21:13957:13957	8197778	11	True				
ANR	8199868	Statement	xor	831:22:13958:13960	8197778	12	True				
ANR	8199869	Statement	)	831:25:13961:13961	8197778	13	True				
ANR	8199870	Statement	:	831:26:13962:13962	8197778	14	True				
ANR	8199871	IfStatement	"if ( temps_are_copies ( args [ 1 ] , args [ 2 ] ) )"		8197778	15					
ANR	8199872	Condition	"temps_are_copies ( args [ 1 ] , args [ 2 ] )"	833:16:13981:14014	8197778	0	True				
ANR	8199873	CallExpression	"temps_are_copies ( args [ 1 ] , args [ 2 ] )"		8197778	0					
ANR	8199874	Callee	temps_are_copies		8197778	0					
ANR	8199875	Identifier	temps_are_copies		8197778	0					
ANR	8199876	ArgumentList	args [ 1 ]		8197778	1					
ANR	8199877	Argument	args [ 1 ]		8197778	0					
ANR	8199878	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8199879	Identifier	args		8197778	0					
ANR	8199880	PrimaryExpression	1		8197778	1					
ANR	8199881	Argument	args [ 2 ]		8197778	1					
ANR	8199882	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8199883	Identifier	args		8197778	0					
ANR	8199884	PrimaryExpression	2		8197778	1					
ANR	8199885	CompoundStatement		831:52:13967:13967	8197778	1					
ANR	8199886	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"	835:16:14036:14077	8197778	0	True				
ANR	8199887	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , 0 )"		8197778	0					
ANR	8199888	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8199889	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8199890	ArgumentList	s		8197778	1					
ANR	8199891	Argument	s		8197778	0					
ANR	8199892	Identifier	s		8197778	0					
ANR	8199893	Argument	op		8197778	1					
ANR	8199894	Identifier	op		8197778	0					
ANR	8199895	Argument	args		8197778	2					
ANR	8199896	Identifier	args		8197778	0					
ANR	8199897	Argument	args [ 0 ]		8197778	3					
ANR	8199898	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8199899	Identifier	args		8197778	0					
ANR	8199900	PrimaryExpression	0		8197778	1					
ANR	8199901	Argument	0		8197778	4					
ANR	8199902	PrimaryExpression	0		8197778	0					
ANR	8199903	ContinueStatement	continue ;	837:16:14096:14104	8197778	1	True				
ANR	8199904	BreakStatement	break ;	841:12:14134:14139	8197778	16	True				
ANR	8199905	Label	default :	843:8:14150:14157	8197778	17	True				
ANR	8199906	Identifier	default		8197778	0					
ANR	8199907	BreakStatement	break ;	845:12:14172:14177	8197778	18	True				
ANR	8199908	SwitchStatement	switch ( opc )		8197778	29					
ANR	8199909	Condition	opc	857:16:14431:14433	8197778	0	True				
ANR	8199910	Identifier	opc		8197778	0					
ANR	8199911	CompoundStatement		855:21:14386:14386	8197778	1					
ANR	8199912	Statement	CASE_OP_32_64	859:8:14447:14459	8197778	0	True				
ANR	8199913	Statement	(	859:21:14460:14460	8197778	1	True				
ANR	8199914	Statement	mov	859:22:14461:14463	8197778	2	True				
ANR	8199915	Statement	)	859:25:14464:14464	8197778	3	True				
ANR	8199916	Statement	:	859:26:14465:14465	8197778	4	True				
ANR	8199917	ExpressionStatement	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"	861:12:14480:14526	8197778	5	True				
ANR	8199918	CallExpression	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 1 ] )"		8197778	0					
ANR	8199919	Callee	tcg_opt_gen_mov		8197778	0					
ANR	8199920	Identifier	tcg_opt_gen_mov		8197778	0					
ANR	8199921	ArgumentList	s		8197778	1					
ANR	8199922	Argument	s		8197778	0					
ANR	8199923	Identifier	s		8197778	0					
ANR	8199924	Argument	op		8197778	1					
ANR	8199925	Identifier	op		8197778	0					
ANR	8199926	Argument	args		8197778	2					
ANR	8199927	Identifier	args		8197778	0					
ANR	8199928	Argument	args [ 0 ]		8197778	3					
ANR	8199929	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8199930	Identifier	args		8197778	0					
ANR	8199931	PrimaryExpression	0		8197778	1					
ANR	8199932	Argument	args [ 1 ]		8197778	4					
ANR	8199933	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8199934	Identifier	args		8197778	0					
ANR	8199935	PrimaryExpression	1		8197778	1					
ANR	8199936	BreakStatement	break ;	863:12:14541:14546	8197778	6	True				
ANR	8199937	Statement	CASE_OP_32_64	865:8:14557:14569	8197778	7	True				
ANR	8199938	Statement	(	865:21:14570:14570	8197778	8	True				
ANR	8199939	Statement	movi	865:22:14571:14574	8197778	9	True				
ANR	8199940	Statement	)	865:26:14575:14575	8197778	10	True				
ANR	8199941	Statement	:	865:27:14576:14576	8197778	11	True				
ANR	8199942	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , args [ 1 ] )"	867:12:14591:14638	8197778	12	True				
ANR	8199943	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , args [ 1 ] )"		8197778	0					
ANR	8199944	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8199945	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8199946	ArgumentList	s		8197778	1					
ANR	8199947	Argument	s		8197778	0					
ANR	8199948	Identifier	s		8197778	0					
ANR	8199949	Argument	op		8197778	1					
ANR	8199950	Identifier	op		8197778	0					
ANR	8199951	Argument	args		8197778	2					
ANR	8199952	Identifier	args		8197778	0					
ANR	8199953	Argument	args [ 0 ]		8197778	3					
ANR	8199954	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8199955	Identifier	args		8197778	0					
ANR	8199956	PrimaryExpression	0		8197778	1					
ANR	8199957	Argument	args [ 1 ]		8197778	4					
ANR	8199958	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8199959	Identifier	args		8197778	0					
ANR	8199960	PrimaryExpression	1		8197778	1					
ANR	8199961	BreakStatement	break ;	869:12:14653:14658	8197778	13	True				
ANR	8199962	Statement	CASE_OP_32_64	873:8:14671:14683	8197778	14	True				
ANR	8199963	Statement	(	873:21:14684:14684	8197778	15	True				
ANR	8199964	Statement	not	873:22:14685:14687	8197778	16	True				
ANR	8199965	Statement	)	873:25:14688:14688	8197778	17	True				
ANR	8199966	Statement	:	873:26:14689:14689	8197778	18	True				
ANR	8199967	Statement	CASE_OP_32_64	875:8:14700:14712	8197778	19	True				
ANR	8199968	Statement	(	875:21:14713:14713	8197778	20	True				
ANR	8199969	Statement	neg	875:22:14714:14716	8197778	21	True				
ANR	8199970	Statement	)	875:25:14717:14717	8197778	22	True				
ANR	8199971	Statement	:	875:26:14718:14718	8197778	23	True				
ANR	8199972	Statement	CASE_OP_32_64	877:8:14729:14741	8197778	24	True				
ANR	8199973	Statement	(	877:21:14742:14742	8197778	25	True				
ANR	8199974	Statement	ext8s	877:22:14743:14747	8197778	26	True				
ANR	8199975	Statement	)	877:27:14748:14748	8197778	27	True				
ANR	8199976	Statement	:	877:28:14749:14749	8197778	28	True				
ANR	8199977	Statement	CASE_OP_32_64	879:8:14760:14772	8197778	29	True				
ANR	8199978	Statement	(	879:21:14773:14773	8197778	30	True				
ANR	8199979	Statement	ext8u	879:22:14774:14778	8197778	31	True				
ANR	8199980	Statement	)	879:27:14779:14779	8197778	32	True				
ANR	8199981	Statement	:	879:28:14780:14780	8197778	33	True				
ANR	8199982	Statement	CASE_OP_32_64	881:8:14791:14803	8197778	34	True				
ANR	8199983	Statement	(	881:21:14804:14804	8197778	35	True				
ANR	8199984	Statement	ext16s	881:22:14805:14810	8197778	36	True				
ANR	8199985	Statement	)	881:28:14811:14811	8197778	37	True				
ANR	8199986	Statement	:	881:29:14812:14812	8197778	38	True				
ANR	8199987	Statement	CASE_OP_32_64	883:8:14823:14835	8197778	39	True				
ANR	8199988	Statement	(	883:21:14836:14836	8197778	40	True				
ANR	8199989	Statement	ext16u	883:22:14837:14842	8197778	41	True				
ANR	8199990	Statement	)	883:28:14843:14843	8197778	42	True				
ANR	8199991	Statement	:	883:29:14844:14844	8197778	43	True				
ANR	8199992	Label	case INDEX_op_ext32s_i64 :	885:8:14855:14879	8197778	44	True				
ANR	8199993	Identifier	INDEX_op_ext32s_i64		8197778	0					
ANR	8199994	Label	case INDEX_op_ext32u_i64 :	887:8:14890:14914	8197778	45	True				
ANR	8199995	Identifier	INDEX_op_ext32u_i64		8197778	0					
ANR	8199996	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST )		8197778	46					
ANR	8199997	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST	889:16:14933:14970	8197778	0	True				
ANR	8199998	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8199999	MemberAccess	temps [ args [ 1 ] ] . state		8197778	0					
ANR	8200000	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8200001	Identifier	temps		8197778	0					
ANR	8200002	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8200003	Identifier	args		8197778	0					
ANR	8200004	PrimaryExpression	1		8197778	1					
ANR	8200005	Identifier	state		8197778	1					
ANR	8200006	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8200007	CompoundStatement		887:56:14923:14923	8197778	1					
ANR	8200008	ExpressionStatement	"tmp = do_constant_folding ( opc , temps [ args [ 1 ] ] . val , 0 )"	891:16:14992:15045	8197778	0	True				
ANR	8200009	AssignmentExpression	"tmp = do_constant_folding ( opc , temps [ args [ 1 ] ] . val , 0 )"		8197778	0		=			
ANR	8200010	Identifier	tmp		8197778	0					
ANR	8200011	CallExpression	"do_constant_folding ( opc , temps [ args [ 1 ] ] . val , 0 )"		8197778	1					
ANR	8200012	Callee	do_constant_folding		8197778	0					
ANR	8200013	Identifier	do_constant_folding		8197778	0					
ANR	8200014	ArgumentList	opc		8197778	1					
ANR	8200015	Argument	opc		8197778	0					
ANR	8200016	Identifier	opc		8197778	0					
ANR	8200017	Argument	temps [ args [ 1 ] ] . val		8197778	1					
ANR	8200018	MemberAccess	temps [ args [ 1 ] ] . val		8197778	0					
ANR	8200019	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8200020	Identifier	temps		8197778	0					
ANR	8200021	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8200022	Identifier	args		8197778	0					
ANR	8200023	PrimaryExpression	1		8197778	1					
ANR	8200024	Identifier	val		8197778	1					
ANR	8200025	Argument	0		8197778	2					
ANR	8200026	PrimaryExpression	0		8197778	0					
ANR	8200027	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"	893:16:15064:15107	8197778	1	True				
ANR	8200028	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"		8197778	0					
ANR	8200029	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8200030	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8200031	ArgumentList	s		8197778	1					
ANR	8200032	Argument	s		8197778	0					
ANR	8200033	Identifier	s		8197778	0					
ANR	8200034	Argument	op		8197778	1					
ANR	8200035	Identifier	op		8197778	0					
ANR	8200036	Argument	args		8197778	2					
ANR	8200037	Identifier	args		8197778	0					
ANR	8200038	Argument	args [ 0 ]		8197778	3					
ANR	8200039	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8200040	Identifier	args		8197778	0					
ANR	8200041	PrimaryExpression	0		8197778	1					
ANR	8200042	Argument	tmp		8197778	4					
ANR	8200043	Identifier	tmp		8197778	0					
ANR	8200044	BreakStatement	break ;	895:16:15126:15131	8197778	2	True				
ANR	8200045	GotoStatement	goto do_default ;	899:12:15161:15176	8197778	47	True				
ANR	8200046	Identifier	do_default		8197778	0					
ANR	8200047	Label	case INDEX_op_trunc_shr_i32 :	903:8:15189:15216	8197778	48	True				
ANR	8200048	Identifier	INDEX_op_trunc_shr_i32		8197778	0					
ANR	8200049	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST )		8197778	49					
ANR	8200050	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST	905:16:15235:15272	8197778	0	True				
ANR	8200051	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8200052	MemberAccess	temps [ args [ 1 ] ] . state		8197778	0					
ANR	8200053	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8200054	Identifier	temps		8197778	0					
ANR	8200055	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8200056	Identifier	args		8197778	0					
ANR	8200057	PrimaryExpression	1		8197778	1					
ANR	8200058	Identifier	state		8197778	1					
ANR	8200059	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8200060	CompoundStatement		903:56:15225:15225	8197778	1					
ANR	8200061	ExpressionStatement	"tmp = do_constant_folding ( opc , temps [ args [ 1 ] ] . val , args [ 2 ] )"	907:16:15294:15353	8197778	0	True				
ANR	8200062	AssignmentExpression	"tmp = do_constant_folding ( opc , temps [ args [ 1 ] ] . val , args [ 2 ] )"		8197778	0		=			
ANR	8200063	Identifier	tmp		8197778	0					
ANR	8200064	CallExpression	"do_constant_folding ( opc , temps [ args [ 1 ] ] . val , args [ 2 ] )"		8197778	1					
ANR	8200065	Callee	do_constant_folding		8197778	0					
ANR	8200066	Identifier	do_constant_folding		8197778	0					
ANR	8200067	ArgumentList	opc		8197778	1					
ANR	8200068	Argument	opc		8197778	0					
ANR	8200069	Identifier	opc		8197778	0					
ANR	8200070	Argument	temps [ args [ 1 ] ] . val		8197778	1					
ANR	8200071	MemberAccess	temps [ args [ 1 ] ] . val		8197778	0					
ANR	8200072	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8200073	Identifier	temps		8197778	0					
ANR	8200074	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8200075	Identifier	args		8197778	0					
ANR	8200076	PrimaryExpression	1		8197778	1					
ANR	8200077	Identifier	val		8197778	1					
ANR	8200078	Argument	args [ 2 ]		8197778	2					
ANR	8200079	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8200080	Identifier	args		8197778	0					
ANR	8200081	PrimaryExpression	2		8197778	1					
ANR	8200082	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"	909:16:15372:15415	8197778	1	True				
ANR	8200083	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"		8197778	0					
ANR	8200084	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8200085	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8200086	ArgumentList	s		8197778	1					
ANR	8200087	Argument	s		8197778	0					
ANR	8200088	Identifier	s		8197778	0					
ANR	8200089	Argument	op		8197778	1					
ANR	8200090	Identifier	op		8197778	0					
ANR	8200091	Argument	args		8197778	2					
ANR	8200092	Identifier	args		8197778	0					
ANR	8200093	Argument	args [ 0 ]		8197778	3					
ANR	8200094	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8200095	Identifier	args		8197778	0					
ANR	8200096	PrimaryExpression	0		8197778	1					
ANR	8200097	Argument	tmp		8197778	4					
ANR	8200098	Identifier	tmp		8197778	0					
ANR	8200099	BreakStatement	break ;	911:16:15434:15439	8197778	2	True				
ANR	8200100	GotoStatement	goto do_default ;	915:12:15469:15484	8197778	50	True				
ANR	8200101	Identifier	do_default		8197778	0					
ANR	8200102	Statement	CASE_OP_32_64	919:8:15497:15509	8197778	51	True				
ANR	8200103	Statement	(	919:21:15510:15510	8197778	52	True				
ANR	8200104	Statement	add	919:22:15511:15513	8197778	53	True				
ANR	8200105	Statement	)	919:25:15514:15514	8197778	54	True				
ANR	8200106	Statement	:	919:26:15515:15515	8197778	55	True				
ANR	8200107	Statement	CASE_OP_32_64	921:8:15526:15538	8197778	56	True				
ANR	8200108	Statement	(	921:21:15539:15539	8197778	57	True				
ANR	8200109	Statement	sub	921:22:15540:15542	8197778	58	True				
ANR	8200110	Statement	)	921:25:15543:15543	8197778	59	True				
ANR	8200111	Statement	:	921:26:15544:15544	8197778	60	True				
ANR	8200112	Statement	CASE_OP_32_64	923:8:15555:15567	8197778	61	True				
ANR	8200113	Statement	(	923:21:15568:15568	8197778	62	True				
ANR	8200114	Statement	mul	923:22:15569:15571	8197778	63	True				
ANR	8200115	Statement	)	923:25:15572:15572	8197778	64	True				
ANR	8200116	Statement	:	923:26:15573:15573	8197778	65	True				
ANR	8200117	Statement	CASE_OP_32_64	925:8:15584:15596	8197778	66	True				
ANR	8200118	Statement	(	925:21:15597:15597	8197778	67	True				
ANR	8200119	Statement	or	925:22:15598:15599	8197778	68	True				
ANR	8200120	Statement	)	925:24:15600:15600	8197778	69	True				
ANR	8200121	Statement	:	925:25:15601:15601	8197778	70	True				
ANR	8200122	Statement	CASE_OP_32_64	927:8:15612:15624	8197778	71	True				
ANR	8200123	Statement	(	927:21:15625:15625	8197778	72	True				
ANR	8200124	Statement	and	927:22:15626:15628	8197778	73	True				
ANR	8200125	Statement	)	927:25:15629:15629	8197778	74	True				
ANR	8200126	Statement	:	927:26:15630:15630	8197778	75	True				
ANR	8200127	Statement	CASE_OP_32_64	929:8:15641:15653	8197778	76	True				
ANR	8200128	Statement	(	929:21:15654:15654	8197778	77	True				
ANR	8200129	Statement	xor	929:22:15655:15657	8197778	78	True				
ANR	8200130	Statement	)	929:25:15658:15658	8197778	79	True				
ANR	8200131	Statement	:	929:26:15659:15659	8197778	80	True				
ANR	8200132	Statement	CASE_OP_32_64	931:8:15670:15682	8197778	81	True				
ANR	8200133	Statement	(	931:21:15683:15683	8197778	82	True				
ANR	8200134	Statement	shl	931:22:15684:15686	8197778	83	True				
ANR	8200135	Statement	)	931:25:15687:15687	8197778	84	True				
ANR	8200136	Statement	:	931:26:15688:15688	8197778	85	True				
ANR	8200137	Statement	CASE_OP_32_64	933:8:15699:15711	8197778	86	True				
ANR	8200138	Statement	(	933:21:15712:15712	8197778	87	True				
ANR	8200139	Statement	shr	933:22:15713:15715	8197778	88	True				
ANR	8200140	Statement	)	933:25:15716:15716	8197778	89	True				
ANR	8200141	Statement	:	933:26:15717:15717	8197778	90	True				
ANR	8200142	Statement	CASE_OP_32_64	935:8:15728:15740	8197778	91	True				
ANR	8200143	Statement	(	935:21:15741:15741	8197778	92	True				
ANR	8200144	Statement	sar	935:22:15742:15744	8197778	93	True				
ANR	8200145	Statement	)	935:25:15745:15745	8197778	94	True				
ANR	8200146	Statement	:	935:26:15746:15746	8197778	95	True				
ANR	8200147	Statement	CASE_OP_32_64	937:8:15757:15769	8197778	96	True				
ANR	8200148	Statement	(	937:21:15770:15770	8197778	97	True				
ANR	8200149	Statement	rotl	937:22:15771:15774	8197778	98	True				
ANR	8200150	Statement	)	937:26:15775:15775	8197778	99	True				
ANR	8200151	Statement	:	937:27:15776:15776	8197778	100	True				
ANR	8200152	Statement	CASE_OP_32_64	939:8:15787:15799	8197778	101	True				
ANR	8200153	Statement	(	939:21:15800:15800	8197778	102	True				
ANR	8200154	Statement	rotr	939:22:15801:15804	8197778	103	True				
ANR	8200155	Statement	)	939:26:15805:15805	8197778	104	True				
ANR	8200156	Statement	:	939:27:15806:15806	8197778	105	True				
ANR	8200157	Statement	CASE_OP_32_64	941:8:15817:15829	8197778	106	True				
ANR	8200158	Statement	(	941:21:15830:15830	8197778	107	True				
ANR	8200159	Statement	andc	941:22:15831:15834	8197778	108	True				
ANR	8200160	Statement	)	941:26:15835:15835	8197778	109	True				
ANR	8200161	Statement	:	941:27:15836:15836	8197778	110	True				
ANR	8200162	Statement	CASE_OP_32_64	943:8:15847:15859	8197778	111	True				
ANR	8200163	Statement	(	943:21:15860:15860	8197778	112	True				
ANR	8200164	Statement	orc	943:22:15861:15863	8197778	113	True				
ANR	8200165	Statement	)	943:25:15864:15864	8197778	114	True				
ANR	8200166	Statement	:	943:26:15865:15865	8197778	115	True				
ANR	8200167	Statement	CASE_OP_32_64	945:8:15876:15888	8197778	116	True				
ANR	8200168	Statement	(	945:21:15889:15889	8197778	117	True				
ANR	8200169	Statement	eqv	945:22:15890:15892	8197778	118	True				
ANR	8200170	Statement	)	945:25:15893:15893	8197778	119	True				
ANR	8200171	Statement	:	945:26:15894:15894	8197778	120	True				
ANR	8200172	Statement	CASE_OP_32_64	947:8:15905:15917	8197778	121	True				
ANR	8200173	Statement	(	947:21:15918:15918	8197778	122	True				
ANR	8200174	Statement	nand	947:22:15919:15922	8197778	123	True				
ANR	8200175	Statement	)	947:26:15923:15923	8197778	124	True				
ANR	8200176	Statement	:	947:27:15924:15924	8197778	125	True				
ANR	8200177	Statement	CASE_OP_32_64	949:8:15935:15947	8197778	126	True				
ANR	8200178	Statement	(	949:21:15948:15948	8197778	127	True				
ANR	8200179	Statement	nor	949:22:15949:15951	8197778	128	True				
ANR	8200180	Statement	)	949:25:15952:15952	8197778	129	True				
ANR	8200181	Statement	:	949:26:15953:15953	8197778	130	True				
ANR	8200182	Statement	CASE_OP_32_64	951:8:15964:15976	8197778	131	True				
ANR	8200183	Statement	(	951:21:15977:15977	8197778	132	True				
ANR	8200184	Statement	muluh	951:22:15978:15982	8197778	133	True				
ANR	8200185	Statement	)	951:27:15983:15983	8197778	134	True				
ANR	8200186	Statement	:	951:28:15984:15984	8197778	135	True				
ANR	8200187	Statement	CASE_OP_32_64	953:8:15995:16007	8197778	136	True				
ANR	8200188	Statement	(	953:21:16008:16008	8197778	137	True				
ANR	8200189	Statement	mulsh	953:22:16009:16013	8197778	138	True				
ANR	8200190	Statement	)	953:27:16014:16014	8197778	139	True				
ANR	8200191	Statement	:	953:28:16015:16015	8197778	140	True				
ANR	8200192	Statement	CASE_OP_32_64	955:8:16026:16038	8197778	141	True				
ANR	8200193	Statement	(	955:21:16039:16039	8197778	142	True				
ANR	8200194	Statement	div	955:22:16040:16042	8197778	143	True				
ANR	8200195	Statement	)	955:25:16043:16043	8197778	144	True				
ANR	8200196	Statement	:	955:26:16044:16044	8197778	145	True				
ANR	8200197	Statement	CASE_OP_32_64	957:8:16055:16067	8197778	146	True				
ANR	8200198	Statement	(	957:21:16068:16068	8197778	147	True				
ANR	8200199	Statement	divu	957:22:16069:16072	8197778	148	True				
ANR	8200200	Statement	)	957:26:16073:16073	8197778	149	True				
ANR	8200201	Statement	:	957:27:16074:16074	8197778	150	True				
ANR	8200202	Statement	CASE_OP_32_64	959:8:16085:16097	8197778	151	True				
ANR	8200203	Statement	(	959:21:16098:16098	8197778	152	True				
ANR	8200204	Statement	rem	959:22:16099:16101	8197778	153	True				
ANR	8200205	Statement	)	959:25:16102:16102	8197778	154	True				
ANR	8200206	Statement	:	959:26:16103:16103	8197778	155	True				
ANR	8200207	Statement	CASE_OP_32_64	961:8:16114:16126	8197778	156	True				
ANR	8200208	Statement	(	961:21:16127:16127	8197778	157	True				
ANR	8200209	Statement	remu	961:22:16128:16131	8197778	158	True				
ANR	8200210	Statement	)	961:26:16132:16132	8197778	159	True				
ANR	8200211	Statement	:	961:27:16133:16133	8197778	160	True				
ANR	8200212	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8197778	161					
ANR	8200213	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	963:16:16152:16248	8197778	0	True				
ANR	8200214	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		&&			
ANR	8200215	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8200216	MemberAccess	temps [ args [ 1 ] ] . state		8197778	0					
ANR	8200217	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8200218	Identifier	temps		8197778	0					
ANR	8200219	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8200220	Identifier	args		8197778	0					
ANR	8200221	PrimaryExpression	1		8197778	1					
ANR	8200222	Identifier	state		8197778	1					
ANR	8200223	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8200224	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	1		==			
ANR	8200225	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8200226	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8200227	Identifier	temps		8197778	0					
ANR	8200228	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8200229	Identifier	args		8197778	0					
ANR	8200230	PrimaryExpression	2		8197778	1					
ANR	8200231	Identifier	state		8197778	1					
ANR	8200232	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8200233	CompoundStatement		963:59:16201:16201	8197778	1					
ANR	8200234	ExpressionStatement	"tmp = do_constant_folding ( opc , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val )"	967:16:16270:16383	8197778	0	True				
ANR	8200235	AssignmentExpression	"tmp = do_constant_folding ( opc , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val )"		8197778	0		=			
ANR	8200236	Identifier	tmp		8197778	0					
ANR	8200237	CallExpression	"do_constant_folding ( opc , temps [ args [ 1 ] ] . val , temps [ args [ 2 ] ] . val )"		8197778	1					
ANR	8200238	Callee	do_constant_folding		8197778	0					
ANR	8200239	Identifier	do_constant_folding		8197778	0					
ANR	8200240	ArgumentList	opc		8197778	1					
ANR	8200241	Argument	opc		8197778	0					
ANR	8200242	Identifier	opc		8197778	0					
ANR	8200243	Argument	temps [ args [ 1 ] ] . val		8197778	1					
ANR	8200244	MemberAccess	temps [ args [ 1 ] ] . val		8197778	0					
ANR	8200245	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8200246	Identifier	temps		8197778	0					
ANR	8200247	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8200248	Identifier	args		8197778	0					
ANR	8200249	PrimaryExpression	1		8197778	1					
ANR	8200250	Identifier	val		8197778	1					
ANR	8200251	Argument	temps [ args [ 2 ] ] . val		8197778	2					
ANR	8200252	MemberAccess	temps [ args [ 2 ] ] . val		8197778	0					
ANR	8200253	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8200254	Identifier	temps		8197778	0					
ANR	8200255	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8200256	Identifier	args		8197778	0					
ANR	8200257	PrimaryExpression	2		8197778	1					
ANR	8200258	Identifier	val		8197778	1					
ANR	8200259	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"	971:16:16402:16445	8197778	1	True				
ANR	8200260	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"		8197778	0					
ANR	8200261	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8200262	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8200263	ArgumentList	s		8197778	1					
ANR	8200264	Argument	s		8197778	0					
ANR	8200265	Identifier	s		8197778	0					
ANR	8200266	Argument	op		8197778	1					
ANR	8200267	Identifier	op		8197778	0					
ANR	8200268	Argument	args		8197778	2					
ANR	8200269	Identifier	args		8197778	0					
ANR	8200270	Argument	args [ 0 ]		8197778	3					
ANR	8200271	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8200272	Identifier	args		8197778	0					
ANR	8200273	PrimaryExpression	0		8197778	1					
ANR	8200274	Argument	tmp		8197778	4					
ANR	8200275	Identifier	tmp		8197778	0					
ANR	8200276	BreakStatement	break ;	973:16:16464:16469	8197778	2	True				
ANR	8200277	GotoStatement	goto do_default ;	977:12:16499:16514	8197778	162	True				
ANR	8200278	Identifier	do_default		8197778	0					
ANR	8200279	Statement	CASE_OP_32_64	981:8:16527:16539	8197778	163	True				
ANR	8200280	Statement	(	981:21:16540:16540	8197778	164	True				
ANR	8200281	Statement	deposit	981:22:16541:16547	8197778	165	True				
ANR	8200282	Statement	)	981:29:16548:16548	8197778	166	True				
ANR	8200283	Statement	:	981:30:16549:16549	8197778	167	True				
ANR	8200284	IfStatement	if ( temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST )		8197778	168					
ANR	8200285	Condition	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST	983:16:16568:16664	8197778	0	True				
ANR	8200286	AndExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		&&			
ANR	8200287	EqualityExpression	temps [ args [ 1 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8200288	MemberAccess	temps [ args [ 1 ] ] . state		8197778	0					
ANR	8200289	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8200290	Identifier	temps		8197778	0					
ANR	8200291	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8200292	Identifier	args		8197778	0					
ANR	8200293	PrimaryExpression	1		8197778	1					
ANR	8200294	Identifier	state		8197778	1					
ANR	8200295	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8200296	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	1		==			
ANR	8200297	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8200298	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8200299	Identifier	temps		8197778	0					
ANR	8200300	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8200301	Identifier	args		8197778	0					
ANR	8200302	PrimaryExpression	2		8197778	1					
ANR	8200303	Identifier	state		8197778	1					
ANR	8200304	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8200305	CompoundStatement		983:59:16617:16617	8197778	1					
ANR	8200306	ExpressionStatement	"tmp = deposit64 ( temps [ args [ 1 ] ] . val , args [ 3 ] , args [ 4 ] , temps [ args [ 2 ] ] . val )"	987:16:16686:16792	8197778	0	True				
ANR	8200307	AssignmentExpression	"tmp = deposit64 ( temps [ args [ 1 ] ] . val , args [ 3 ] , args [ 4 ] , temps [ args [ 2 ] ] . val )"		8197778	0		=			
ANR	8200308	Identifier	tmp		8197778	0					
ANR	8200309	CallExpression	"deposit64 ( temps [ args [ 1 ] ] . val , args [ 3 ] , args [ 4 ] , temps [ args [ 2 ] ] . val )"		8197778	1					
ANR	8200310	Callee	deposit64		8197778	0					
ANR	8200311	Identifier	deposit64		8197778	0					
ANR	8200312	ArgumentList	temps [ args [ 1 ] ] . val		8197778	1					
ANR	8200313	Argument	temps [ args [ 1 ] ] . val		8197778	0					
ANR	8200314	MemberAccess	temps [ args [ 1 ] ] . val		8197778	0					
ANR	8200315	ArrayIndexing	temps [ args [ 1 ] ]		8197778	0					
ANR	8200316	Identifier	temps		8197778	0					
ANR	8200317	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8200318	Identifier	args		8197778	0					
ANR	8200319	PrimaryExpression	1		8197778	1					
ANR	8200320	Identifier	val		8197778	1					
ANR	8200321	Argument	args [ 3 ]		8197778	1					
ANR	8200322	ArrayIndexing	args [ 3 ]		8197778	0					
ANR	8200323	Identifier	args		8197778	0					
ANR	8200324	PrimaryExpression	3		8197778	1					
ANR	8200325	Argument	args [ 4 ]		8197778	2					
ANR	8200326	ArrayIndexing	args [ 4 ]		8197778	0					
ANR	8200327	Identifier	args		8197778	0					
ANR	8200328	PrimaryExpression	4		8197778	1					
ANR	8200329	Argument	temps [ args [ 2 ] ] . val		8197778	3					
ANR	8200330	MemberAccess	temps [ args [ 2 ] ] . val		8197778	0					
ANR	8200331	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8200332	Identifier	temps		8197778	0					
ANR	8200333	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8200334	Identifier	args		8197778	0					
ANR	8200335	PrimaryExpression	2		8197778	1					
ANR	8200336	Identifier	val		8197778	1					
ANR	8200337	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"	991:16:16811:16854	8197778	1	True				
ANR	8200338	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"		8197778	0					
ANR	8200339	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8200340	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8200341	ArgumentList	s		8197778	1					
ANR	8200342	Argument	s		8197778	0					
ANR	8200343	Identifier	s		8197778	0					
ANR	8200344	Argument	op		8197778	1					
ANR	8200345	Identifier	op		8197778	0					
ANR	8200346	Argument	args		8197778	2					
ANR	8200347	Identifier	args		8197778	0					
ANR	8200348	Argument	args [ 0 ]		8197778	3					
ANR	8200349	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8200350	Identifier	args		8197778	0					
ANR	8200351	PrimaryExpression	0		8197778	1					
ANR	8200352	Argument	tmp		8197778	4					
ANR	8200353	Identifier	tmp		8197778	0					
ANR	8200354	BreakStatement	break ;	993:16:16873:16878	8197778	2	True				
ANR	8200355	GotoStatement	goto do_default ;	997:12:16908:16923	8197778	169	True				
ANR	8200356	Identifier	do_default		8197778	0					
ANR	8200357	Statement	CASE_OP_32_64	1001:8:16936:16948	8197778	170	True				
ANR	8200358	Statement	(	1001:21:16949:16949	8197778	171	True				
ANR	8200359	Statement	setcond	1001:22:16950:16956	8197778	172	True				
ANR	8200360	Statement	)	1001:29:16957:16957	8197778	173	True				
ANR	8200361	Statement	:	1001:30:16958:16958	8197778	174	True				
ANR	8200362	ExpressionStatement	"tmp = do_constant_folding_cond ( opc , args [ 1 ] , args [ 2 ] , args [ 3 ] )"	1003:12:16973:17035	8197778	175	True				
ANR	8200363	AssignmentExpression	"tmp = do_constant_folding_cond ( opc , args [ 1 ] , args [ 2 ] , args [ 3 ] )"		8197778	0		=			
ANR	8200364	Identifier	tmp		8197778	0					
ANR	8200365	CallExpression	"do_constant_folding_cond ( opc , args [ 1 ] , args [ 2 ] , args [ 3 ] )"		8197778	1					
ANR	8200366	Callee	do_constant_folding_cond		8197778	0					
ANR	8200367	Identifier	do_constant_folding_cond		8197778	0					
ANR	8200368	ArgumentList	opc		8197778	1					
ANR	8200369	Argument	opc		8197778	0					
ANR	8200370	Identifier	opc		8197778	0					
ANR	8200371	Argument	args [ 1 ]		8197778	1					
ANR	8200372	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8200373	Identifier	args		8197778	0					
ANR	8200374	PrimaryExpression	1		8197778	1					
ANR	8200375	Argument	args [ 2 ]		8197778	2					
ANR	8200376	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8200377	Identifier	args		8197778	0					
ANR	8200378	PrimaryExpression	2		8197778	1					
ANR	8200379	Argument	args [ 3 ]		8197778	3					
ANR	8200380	ArrayIndexing	args [ 3 ]		8197778	0					
ANR	8200381	Identifier	args		8197778	0					
ANR	8200382	PrimaryExpression	3		8197778	1					
ANR	8200383	IfStatement	if ( tmp != 2 )		8197778	176					
ANR	8200384	Condition	tmp != 2	1005:16:17054:17061	8197778	0	True				
ANR	8200385	EqualityExpression	tmp != 2		8197778	0		!=			
ANR	8200386	Identifier	tmp		8197778	0					
ANR	8200387	PrimaryExpression	2		8197778	1					
ANR	8200388	CompoundStatement		1003:26:17014:17014	8197778	1					
ANR	8200389	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"	1007:16:17083:17126	8197778	0	True				
ANR	8200390	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"		8197778	0					
ANR	8200391	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8200392	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8200393	ArgumentList	s		8197778	1					
ANR	8200394	Argument	s		8197778	0					
ANR	8200395	Identifier	s		8197778	0					
ANR	8200396	Argument	op		8197778	1					
ANR	8200397	Identifier	op		8197778	0					
ANR	8200398	Argument	args		8197778	2					
ANR	8200399	Identifier	args		8197778	0					
ANR	8200400	Argument	args [ 0 ]		8197778	3					
ANR	8200401	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8200402	Identifier	args		8197778	0					
ANR	8200403	PrimaryExpression	0		8197778	1					
ANR	8200404	Argument	tmp		8197778	4					
ANR	8200405	Identifier	tmp		8197778	0					
ANR	8200406	BreakStatement	break ;	1009:16:17145:17150	8197778	1	True				
ANR	8200407	GotoStatement	goto do_default ;	1013:12:17180:17195	8197778	177	True				
ANR	8200408	Identifier	do_default		8197778	0					
ANR	8200409	Statement	CASE_OP_32_64	1017:8:17208:17220	8197778	178	True				
ANR	8200410	Statement	(	1017:21:17221:17221	8197778	179	True				
ANR	8200411	Statement	brcond	1017:22:17222:17227	8197778	180	True				
ANR	8200412	Statement	)	1017:28:17228:17228	8197778	181	True				
ANR	8200413	Statement	:	1017:29:17229:17229	8197778	182	True				
ANR	8200414	ExpressionStatement	"tmp = do_constant_folding_cond ( opc , args [ 0 ] , args [ 1 ] , args [ 2 ] )"	1019:12:17244:17306	8197778	183	True				
ANR	8200415	AssignmentExpression	"tmp = do_constant_folding_cond ( opc , args [ 0 ] , args [ 1 ] , args [ 2 ] )"		8197778	0		=			
ANR	8200416	Identifier	tmp		8197778	0					
ANR	8200417	CallExpression	"do_constant_folding_cond ( opc , args [ 0 ] , args [ 1 ] , args [ 2 ] )"		8197778	1					
ANR	8200418	Callee	do_constant_folding_cond		8197778	0					
ANR	8200419	Identifier	do_constant_folding_cond		8197778	0					
ANR	8200420	ArgumentList	opc		8197778	1					
ANR	8200421	Argument	opc		8197778	0					
ANR	8200422	Identifier	opc		8197778	0					
ANR	8200423	Argument	args [ 0 ]		8197778	1					
ANR	8200424	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8200425	Identifier	args		8197778	0					
ANR	8200426	PrimaryExpression	0		8197778	1					
ANR	8200427	Argument	args [ 1 ]		8197778	2					
ANR	8200428	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8200429	Identifier	args		8197778	0					
ANR	8200430	PrimaryExpression	1		8197778	1					
ANR	8200431	Argument	args [ 2 ]		8197778	3					
ANR	8200432	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8200433	Identifier	args		8197778	0					
ANR	8200434	PrimaryExpression	2		8197778	1					
ANR	8200435	IfStatement	if ( tmp != 2 )		8197778	184					
ANR	8200436	Condition	tmp != 2	1021:16:17325:17332	8197778	0	True				
ANR	8200437	EqualityExpression	tmp != 2		8197778	0		!=			
ANR	8200438	Identifier	tmp		8197778	0					
ANR	8200439	PrimaryExpression	2		8197778	1					
ANR	8200440	CompoundStatement		1019:26:17285:17285	8197778	1					
ANR	8200441	IfStatement	if ( tmp )		8197778	0					
ANR	8200442	Condition	tmp	1023:20:17358:17360	8197778	0	True				
ANR	8200443	Identifier	tmp		8197778	0					
ANR	8200444	CompoundStatement		1021:25:17313:17313	8197778	1					
ANR	8200445	ExpressionStatement	reset_all_temps ( nb_temps )	1025:20:17386:17411	8197778	0	True				
ANR	8200446	CallExpression	reset_all_temps ( nb_temps )		8197778	0					
ANR	8200447	Callee	reset_all_temps		8197778	0					
ANR	8200448	Identifier	reset_all_temps		8197778	0					
ANR	8200449	ArgumentList	nb_temps		8197778	1					
ANR	8200450	Argument	nb_temps		8197778	0					
ANR	8200451	Identifier	nb_temps		8197778	0					
ANR	8200452	ExpressionStatement	op -> opc = INDEX_op_br	1027:20:17434:17455	8197778	1	True				
ANR	8200453	AssignmentExpression	op -> opc = INDEX_op_br		8197778	0		=			
ANR	8200454	PtrMemberAccess	op -> opc		8197778	0					
ANR	8200455	Identifier	op		8197778	0					
ANR	8200456	Identifier	opc		8197778	1					
ANR	8200457	Identifier	INDEX_op_br		8197778	1					
ANR	8200458	ExpressionStatement	args [ 0 ] = args [ 3 ]	1029:20:17478:17495	8197778	2	True				
ANR	8200459	AssignmentExpression	args [ 0 ] = args [ 3 ]		8197778	0		=			
ANR	8200460	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8200461	Identifier	args		8197778	0					
ANR	8200462	PrimaryExpression	0		8197778	1					
ANR	8200463	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8200464	Identifier	args		8197778	0					
ANR	8200465	PrimaryExpression	3		8197778	1					
ANR	8200466	ElseStatement	else		8197778	0					
ANR	8200467	CompoundStatement		1029:23:17471:17471	8197778	0					
ANR	8200468	ExpressionStatement	"tcg_op_remove ( s , op )"	1033:20:17544:17564	8197778	0	True				
ANR	8200469	CallExpression	"tcg_op_remove ( s , op )"		8197778	0					
ANR	8200470	Callee	tcg_op_remove		8197778	0					
ANR	8200471	Identifier	tcg_op_remove		8197778	0					
ANR	8200472	ArgumentList	s		8197778	1					
ANR	8200473	Argument	s		8197778	0					
ANR	8200474	Identifier	s		8197778	0					
ANR	8200475	Argument	op		8197778	1					
ANR	8200476	Identifier	op		8197778	0					
ANR	8200477	BreakStatement	break ;	1037:16:17602:17607	8197778	1	True				
ANR	8200478	GotoStatement	goto do_default ;	1041:12:17637:17652	8197778	185	True				
ANR	8200479	Identifier	do_default		8197778	0					
ANR	8200480	Statement	CASE_OP_32_64	1045:8:17665:17677	8197778	186	True				
ANR	8200481	Statement	(	1045:21:17678:17678	8197778	187	True				
ANR	8200482	Statement	movcond	1045:22:17679:17685	8197778	188	True				
ANR	8200483	Statement	)	1045:29:17686:17686	8197778	189	True				
ANR	8200484	Statement	:	1045:30:17687:17687	8197778	190	True				
ANR	8200485	ExpressionStatement	"tmp = do_constant_folding_cond ( opc , args [ 1 ] , args [ 2 ] , args [ 5 ] )"	1047:12:17702:17764	8197778	191	True				
ANR	8200486	AssignmentExpression	"tmp = do_constant_folding_cond ( opc , args [ 1 ] , args [ 2 ] , args [ 5 ] )"		8197778	0		=			
ANR	8200487	Identifier	tmp		8197778	0					
ANR	8200488	CallExpression	"do_constant_folding_cond ( opc , args [ 1 ] , args [ 2 ] , args [ 5 ] )"		8197778	1					
ANR	8200489	Callee	do_constant_folding_cond		8197778	0					
ANR	8200490	Identifier	do_constant_folding_cond		8197778	0					
ANR	8200491	ArgumentList	opc		8197778	1					
ANR	8200492	Argument	opc		8197778	0					
ANR	8200493	Identifier	opc		8197778	0					
ANR	8200494	Argument	args [ 1 ]		8197778	1					
ANR	8200495	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8200496	Identifier	args		8197778	0					
ANR	8200497	PrimaryExpression	1		8197778	1					
ANR	8200498	Argument	args [ 2 ]		8197778	2					
ANR	8200499	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8200500	Identifier	args		8197778	0					
ANR	8200501	PrimaryExpression	2		8197778	1					
ANR	8200502	Argument	args [ 5 ]		8197778	3					
ANR	8200503	ArrayIndexing	args [ 5 ]		8197778	0					
ANR	8200504	Identifier	args		8197778	0					
ANR	8200505	PrimaryExpression	5		8197778	1					
ANR	8200506	IfStatement	if ( tmp != 2 )		8197778	192					
ANR	8200507	Condition	tmp != 2	1049:16:17783:17790	8197778	0	True				
ANR	8200508	EqualityExpression	tmp != 2		8197778	0		!=			
ANR	8200509	Identifier	tmp		8197778	0					
ANR	8200510	PrimaryExpression	2		8197778	1					
ANR	8200511	CompoundStatement		1047:26:17743:17743	8197778	1					
ANR	8200512	ExpressionStatement	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 4 - tmp ] )"	1051:16:17812:17862	8197778	0	True				
ANR	8200513	CallExpression	"tcg_opt_gen_mov ( s , op , args , args [ 0 ] , args [ 4 - tmp ] )"		8197778	0					
ANR	8200514	Callee	tcg_opt_gen_mov		8197778	0					
ANR	8200515	Identifier	tcg_opt_gen_mov		8197778	0					
ANR	8200516	ArgumentList	s		8197778	1					
ANR	8200517	Argument	s		8197778	0					
ANR	8200518	Identifier	s		8197778	0					
ANR	8200519	Argument	op		8197778	1					
ANR	8200520	Identifier	op		8197778	0					
ANR	8200521	Argument	args		8197778	2					
ANR	8200522	Identifier	args		8197778	0					
ANR	8200523	Argument	args [ 0 ]		8197778	3					
ANR	8200524	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8200525	Identifier	args		8197778	0					
ANR	8200526	PrimaryExpression	0		8197778	1					
ANR	8200527	Argument	args [ 4 - tmp ]		8197778	4					
ANR	8200528	ArrayIndexing	args [ 4 - tmp ]		8197778	0					
ANR	8200529	Identifier	args		8197778	0					
ANR	8200530	AdditiveExpression	4 - tmp		8197778	1		-			
ANR	8200531	PrimaryExpression	4		8197778	0					
ANR	8200532	Identifier	tmp		8197778	1					
ANR	8200533	BreakStatement	break ;	1053:16:17881:17886	8197778	1	True				
ANR	8200534	GotoStatement	goto do_default ;	1057:12:17916:17931	8197778	193	True				
ANR	8200535	Identifier	do_default		8197778	0					
ANR	8200536	Label	case INDEX_op_add2_i32 :	1061:8:17944:17966	8197778	194	True				
ANR	8200537	Identifier	INDEX_op_add2_i32		8197778	0					
ANR	8200538	Label	case INDEX_op_sub2_i32 :	1063:8:17977:17999	8197778	195	True				
ANR	8200539	Identifier	INDEX_op_sub2_i32		8197778	0					
ANR	8200540	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 5 ] ] . state == TCG_TEMP_CONST )		8197778	196					
ANR	8200541	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 5 ] ] . state == TCG_TEMP_CONST	1065:16:18018:18232	8197778	0	True				
ANR	8200542	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 5 ] ] . state == TCG_TEMP_CONST		8197778	0		&&			
ANR	8200543	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8200544	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8200545	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8200546	Identifier	temps		8197778	0					
ANR	8200547	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8200548	Identifier	args		8197778	0					
ANR	8200549	PrimaryExpression	2		8197778	1					
ANR	8200550	Identifier	state		8197778	1					
ANR	8200551	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8200552	AndExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 5 ] ] . state == TCG_TEMP_CONST		8197778	1		&&			
ANR	8200553	EqualityExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8200554	MemberAccess	temps [ args [ 3 ] ] . state		8197778	0					
ANR	8200555	ArrayIndexing	temps [ args [ 3 ] ]		8197778	0					
ANR	8200556	Identifier	temps		8197778	0					
ANR	8200557	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8200558	Identifier	args		8197778	0					
ANR	8200559	PrimaryExpression	3		8197778	1					
ANR	8200560	Identifier	state		8197778	1					
ANR	8200561	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8200562	AndExpression	temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 5 ] ] . state == TCG_TEMP_CONST		8197778	1		&&			
ANR	8200563	EqualityExpression	temps [ args [ 4 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8200564	MemberAccess	temps [ args [ 4 ] ] . state		8197778	0					
ANR	8200565	ArrayIndexing	temps [ args [ 4 ] ]		8197778	0					
ANR	8200566	Identifier	temps		8197778	0					
ANR	8200567	ArrayIndexing	args [ 4 ]		8197778	1					
ANR	8200568	Identifier	args		8197778	0					
ANR	8200569	PrimaryExpression	4		8197778	1					
ANR	8200570	Identifier	state		8197778	1					
ANR	8200571	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8200572	EqualityExpression	temps [ args [ 5 ] ] . state == TCG_TEMP_CONST		8197778	1		==			
ANR	8200573	MemberAccess	temps [ args [ 5 ] ] . state		8197778	0					
ANR	8200574	ArrayIndexing	temps [ args [ 5 ] ]		8197778	0					
ANR	8200575	Identifier	temps		8197778	0					
ANR	8200576	ArrayIndexing	args [ 5 ]		8197778	1					
ANR	8200577	Identifier	args		8197778	0					
ANR	8200578	PrimaryExpression	5		8197778	1					
ANR	8200579	Identifier	state		8197778	1					
ANR	8200580	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8200581	CompoundStatement		1087:16:18631:18677	8197778	1					
ANR	8200582	IdentifierDeclStatement	uint32_t al = temps [ args [ 2 ] ] . val ;	1073:16:18254:18286	8197778	0	True				
ANR	8200583	IdentifierDecl	al = temps [ args [ 2 ] ] . val		8197778	0					
ANR	8200584	IdentifierDeclType	uint32_t		8197778	0					
ANR	8200585	Identifier	al		8197778	1					
ANR	8200586	AssignmentExpression	al = temps [ args [ 2 ] ] . val		8197778	2		=			
ANR	8200587	Identifier	al		8197778	0					
ANR	8200588	MemberAccess	temps [ args [ 2 ] ] . val		8197778	1					
ANR	8200589	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8200590	Identifier	temps		8197778	0					
ANR	8200591	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8200592	Identifier	args		8197778	0					
ANR	8200593	PrimaryExpression	2		8197778	1					
ANR	8200594	Identifier	val		8197778	1					
ANR	8200595	IdentifierDeclStatement	uint32_t ah = temps [ args [ 3 ] ] . val ;	1075:16:18305:18337	8197778	1	True				
ANR	8200596	IdentifierDecl	ah = temps [ args [ 3 ] ] . val		8197778	0					
ANR	8200597	IdentifierDeclType	uint32_t		8197778	0					
ANR	8200598	Identifier	ah		8197778	1					
ANR	8200599	AssignmentExpression	ah = temps [ args [ 3 ] ] . val		8197778	2		=			
ANR	8200600	Identifier	ah		8197778	0					
ANR	8200601	MemberAccess	temps [ args [ 3 ] ] . val		8197778	1					
ANR	8200602	ArrayIndexing	temps [ args [ 3 ] ]		8197778	0					
ANR	8200603	Identifier	temps		8197778	0					
ANR	8200604	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8200605	Identifier	args		8197778	0					
ANR	8200606	PrimaryExpression	3		8197778	1					
ANR	8200607	Identifier	val		8197778	1					
ANR	8200608	IdentifierDeclStatement	uint32_t bl = temps [ args [ 4 ] ] . val ;	1077:16:18356:18388	8197778	2	True				
ANR	8200609	IdentifierDecl	bl = temps [ args [ 4 ] ] . val		8197778	0					
ANR	8200610	IdentifierDeclType	uint32_t		8197778	0					
ANR	8200611	Identifier	bl		8197778	1					
ANR	8200612	AssignmentExpression	bl = temps [ args [ 4 ] ] . val		8197778	2		=			
ANR	8200613	Identifier	bl		8197778	0					
ANR	8200614	MemberAccess	temps [ args [ 4 ] ] . val		8197778	1					
ANR	8200615	ArrayIndexing	temps [ args [ 4 ] ]		8197778	0					
ANR	8200616	Identifier	temps		8197778	0					
ANR	8200617	ArrayIndexing	args [ 4 ]		8197778	1					
ANR	8200618	Identifier	args		8197778	0					
ANR	8200619	PrimaryExpression	4		8197778	1					
ANR	8200620	Identifier	val		8197778	1					
ANR	8200621	IdentifierDeclStatement	uint32_t bh = temps [ args [ 5 ] ] . val ;	1079:16:18407:18439	8197778	3	True				
ANR	8200622	IdentifierDecl	bh = temps [ args [ 5 ] ] . val		8197778	0					
ANR	8200623	IdentifierDeclType	uint32_t		8197778	0					
ANR	8200624	Identifier	bh		8197778	1					
ANR	8200625	AssignmentExpression	bh = temps [ args [ 5 ] ] . val		8197778	2		=			
ANR	8200626	Identifier	bh		8197778	0					
ANR	8200627	MemberAccess	temps [ args [ 5 ] ] . val		8197778	1					
ANR	8200628	ArrayIndexing	temps [ args [ 5 ] ]		8197778	0					
ANR	8200629	Identifier	temps		8197778	0					
ANR	8200630	ArrayIndexing	args [ 5 ]		8197778	1					
ANR	8200631	Identifier	args		8197778	0					
ANR	8200632	PrimaryExpression	5		8197778	1					
ANR	8200633	Identifier	val		8197778	1					
ANR	8200634	IdentifierDeclStatement	uint64_t a = ( ( uint64_t ) ah << 32 ) | al ;	1081:16:18458:18496	8197778	4	True				
ANR	8200635	IdentifierDecl	a = ( ( uint64_t ) ah << 32 ) | al		8197778	0					
ANR	8200636	IdentifierDeclType	uint64_t		8197778	0					
ANR	8200637	Identifier	a		8197778	1					
ANR	8200638	AssignmentExpression	a = ( ( uint64_t ) ah << 32 ) | al		8197778	2		=			
ANR	8200639	Identifier	a		8197778	0					
ANR	8200640	InclusiveOrExpression	( ( uint64_t ) ah << 32 ) | al		8197778	1		|			
ANR	8200641	ShiftExpression	( uint64_t ) ah << 32		8197778	0		<<			
ANR	8200642	CastExpression	( uint64_t ) ah		8197778	0					
ANR	8200643	CastTarget	uint64_t		8197778	0					
ANR	8200644	Identifier	ah		8197778	1					
ANR	8200645	PrimaryExpression	32		8197778	1					
ANR	8200646	Identifier	al		8197778	1					
ANR	8200647	IdentifierDeclStatement	uint64_t b = ( ( uint64_t ) bh << 32 ) | bl ;	1083:16:18515:18553	8197778	5	True				
ANR	8200648	IdentifierDecl	b = ( ( uint64_t ) bh << 32 ) | bl		8197778	0					
ANR	8200649	IdentifierDeclType	uint64_t		8197778	0					
ANR	8200650	Identifier	b		8197778	1					
ANR	8200651	AssignmentExpression	b = ( ( uint64_t ) bh << 32 ) | bl		8197778	2		=			
ANR	8200652	Identifier	b		8197778	0					
ANR	8200653	InclusiveOrExpression	( ( uint64_t ) bh << 32 ) | bl		8197778	1		|			
ANR	8200654	ShiftExpression	( uint64_t ) bh << 32		8197778	0		<<			
ANR	8200655	CastExpression	( uint64_t ) bh		8197778	0					
ANR	8200656	CastTarget	uint64_t		8197778	0					
ANR	8200657	Identifier	bh		8197778	1					
ANR	8200658	PrimaryExpression	32		8197778	1					
ANR	8200659	Identifier	bl		8197778	1					
ANR	8200660	IdentifierDeclStatement	"TCGArg rl , rh ;"	1085:16:18572:18585	8197778	6	True				
ANR	8200661	IdentifierDecl	rl		8197778	0					
ANR	8200662	IdentifierDeclType	TCGArg		8197778	0					
ANR	8200663	Identifier	rl		8197778	1					
ANR	8200664	IdentifierDecl	rh		8197778	1					
ANR	8200665	IdentifierDeclType	TCGArg		8197778	0					
ANR	8200666	Identifier	rh		8197778	1					
ANR	8200667	IdentifierDeclStatement	"TCGOp * op2 = insert_op_before ( s , op , INDEX_op_movi_i32 , 2 ) ;"	1087:16:18604:18662	8197778	7	True				
ANR	8200668	IdentifierDecl	"* op2 = insert_op_before ( s , op , INDEX_op_movi_i32 , 2 )"		8197778	0					
ANR	8200669	IdentifierDeclType	TCGOp *		8197778	0					
ANR	8200670	Identifier	op2		8197778	1					
ANR	8200671	AssignmentExpression	"* op2 = insert_op_before ( s , op , INDEX_op_movi_i32 , 2 )"		8197778	2		=			
ANR	8200672	Identifier	op2		8197778	0					
ANR	8200673	CallExpression	"insert_op_before ( s , op , INDEX_op_movi_i32 , 2 )"		8197778	1					
ANR	8200674	Callee	insert_op_before		8197778	0					
ANR	8200675	Identifier	insert_op_before		8197778	0					
ANR	8200676	ArgumentList	s		8197778	1					
ANR	8200677	Argument	s		8197778	0					
ANR	8200678	Identifier	s		8197778	0					
ANR	8200679	Argument	op		8197778	1					
ANR	8200680	Identifier	op		8197778	0					
ANR	8200681	Argument	INDEX_op_movi_i32		8197778	2					
ANR	8200682	Identifier	INDEX_op_movi_i32		8197778	0					
ANR	8200683	Argument	2		8197778	3					
ANR	8200684	PrimaryExpression	2		8197778	0					
ANR	8200685	IdentifierDeclStatement	TCGArg * args2 = & s -> gen_opparam_buf [ op2 -> args ] ;	1089:16:18681:18727	8197778	8	True				
ANR	8200686	IdentifierDecl	* args2 = & s -> gen_opparam_buf [ op2 -> args ]		8197778	0					
ANR	8200687	IdentifierDeclType	TCGArg *		8197778	0					
ANR	8200688	Identifier	args2		8197778	1					
ANR	8200689	AssignmentExpression	* args2 = & s -> gen_opparam_buf [ op2 -> args ]		8197778	2		=			
ANR	8200690	Identifier	args2		8197778	0					
ANR	8200691	UnaryOperationExpression	& s -> gen_opparam_buf [ op2 -> args ]		8197778	1					
ANR	8200692	UnaryOperator	&		8197778	0					
ANR	8200693	ArrayIndexing	s -> gen_opparam_buf [ op2 -> args ]		8197778	1					
ANR	8200694	PtrMemberAccess	s -> gen_opparam_buf		8197778	0					
ANR	8200695	Identifier	s		8197778	0					
ANR	8200696	Identifier	gen_opparam_buf		8197778	1					
ANR	8200697	PtrMemberAccess	op2 -> args		8197778	1					
ANR	8200698	Identifier	op2		8197778	0					
ANR	8200699	Identifier	args		8197778	1					
ANR	8200700	IfStatement	if ( opc == INDEX_op_add2_i32 )		8197778	9					
ANR	8200701	Condition	opc == INDEX_op_add2_i32	1093:20:18752:18775	8197778	0	True				
ANR	8200702	EqualityExpression	opc == INDEX_op_add2_i32		8197778	0		==			
ANR	8200703	Identifier	opc		8197778	0					
ANR	8200704	Identifier	INDEX_op_add2_i32		8197778	1					
ANR	8200705	CompoundStatement		1091:46:18728:18728	8197778	1					
ANR	8200706	ExpressionStatement	a += b	1095:20:18801:18807	8197778	0	True				
ANR	8200707	AssignmentExpression	a += b		8197778	0		+=			
ANR	8200708	Identifier	a		8197778	0					
ANR	8200709	Identifier	b		8197778	1					
ANR	8200710	ElseStatement	else		8197778	0					
ANR	8200711	CompoundStatement		1095:23:18783:18783	8197778	0					
ANR	8200712	ExpressionStatement	a -= b	1099:20:18856:18862	8197778	0	True				
ANR	8200713	AssignmentExpression	a -= b		8197778	0		-=			
ANR	8200714	Identifier	a		8197778	0					
ANR	8200715	Identifier	b		8197778	1					
ANR	8200716	ExpressionStatement	rl = args [ 0 ]	1105:16:18902:18914	8197778	10	True				
ANR	8200717	AssignmentExpression	rl = args [ 0 ]		8197778	0		=			
ANR	8200718	Identifier	rl		8197778	0					
ANR	8200719	ArrayIndexing	args [ 0 ]		8197778	1					
ANR	8200720	Identifier	args		8197778	0					
ANR	8200721	PrimaryExpression	0		8197778	1					
ANR	8200722	ExpressionStatement	rh = args [ 1 ]	1107:16:18933:18945	8197778	11	True				
ANR	8200723	AssignmentExpression	rh = args [ 1 ]		8197778	0		=			
ANR	8200724	Identifier	rh		8197778	0					
ANR	8200725	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8200726	Identifier	args		8197778	0					
ANR	8200727	PrimaryExpression	1		8197778	1					
ANR	8200728	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , rl , ( uint32_t ) a )"	1109:16:18964:19010	8197778	12	True				
ANR	8200729	CallExpression	"tcg_opt_gen_movi ( s , op , args , rl , ( uint32_t ) a )"		8197778	0					
ANR	8200730	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8200731	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8200732	ArgumentList	s		8197778	1					
ANR	8200733	Argument	s		8197778	0					
ANR	8200734	Identifier	s		8197778	0					
ANR	8200735	Argument	op		8197778	1					
ANR	8200736	Identifier	op		8197778	0					
ANR	8200737	Argument	args		8197778	2					
ANR	8200738	Identifier	args		8197778	0					
ANR	8200739	Argument	rl		8197778	3					
ANR	8200740	Identifier	rl		8197778	0					
ANR	8200741	Argument	( uint32_t ) a		8197778	4					
ANR	8200742	CastExpression	( uint32_t ) a		8197778	0					
ANR	8200743	CastTarget	uint32_t		8197778	0					
ANR	8200744	Identifier	a		8197778	1					
ANR	8200745	ExpressionStatement	"tcg_opt_gen_movi ( s , op2 , args2 , rh , ( uint32_t ) ( a >> 32 ) )"	1111:16:19029:19085	8197778	13	True				
ANR	8200746	CallExpression	"tcg_opt_gen_movi ( s , op2 , args2 , rh , ( uint32_t ) ( a >> 32 ) )"		8197778	0					
ANR	8200747	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8200748	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8200749	ArgumentList	s		8197778	1					
ANR	8200750	Argument	s		8197778	0					
ANR	8200751	Identifier	s		8197778	0					
ANR	8200752	Argument	op2		8197778	1					
ANR	8200753	Identifier	op2		8197778	0					
ANR	8200754	Argument	args2		8197778	2					
ANR	8200755	Identifier	args2		8197778	0					
ANR	8200756	Argument	rh		8197778	3					
ANR	8200757	Identifier	rh		8197778	0					
ANR	8200758	Argument	( uint32_t ) ( a >> 32 )		8197778	4					
ANR	8200759	CastExpression	( uint32_t ) ( a >> 32 )		8197778	0					
ANR	8200760	CastTarget	uint32_t		8197778	0					
ANR	8200761	ShiftExpression	a >> 32		8197778	1		>>			
ANR	8200762	Identifier	a		8197778	0					
ANR	8200763	PrimaryExpression	32		8197778	1					
ANR	8200764	ExpressionStatement	oi_next = op2 -> next	1117:16:19184:19203	8197778	14	True				
ANR	8200765	AssignmentExpression	oi_next = op2 -> next		8197778	0		=			
ANR	8200766	Identifier	oi_next		8197778	0					
ANR	8200767	PtrMemberAccess	op2 -> next		8197778	1					
ANR	8200768	Identifier	op2		8197778	0					
ANR	8200769	Identifier	next		8197778	1					
ANR	8200770	BreakStatement	break ;	1119:16:19222:19227	8197778	15	True				
ANR	8200771	GotoStatement	goto do_default ;	1123:12:19257:19272	8197778	197	True				
ANR	8200772	Identifier	do_default		8197778	0					
ANR	8200773	Label	case INDEX_op_mulu2_i32 :	1127:8:19285:19308	8197778	198	True				
ANR	8200774	Identifier	INDEX_op_mulu2_i32		8197778	0					
ANR	8200775	IfStatement	if ( temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST )		8197778	199					
ANR	8200776	Condition	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST	1129:16:19327:19423	8197778	0	True				
ANR	8200777	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST		8197778	0		&&			
ANR	8200778	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8200779	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8200780	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8200781	Identifier	temps		8197778	0					
ANR	8200782	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8200783	Identifier	args		8197778	0					
ANR	8200784	PrimaryExpression	2		8197778	1					
ANR	8200785	Identifier	state		8197778	1					
ANR	8200786	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8200787	EqualityExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST		8197778	1		==			
ANR	8200788	MemberAccess	temps [ args [ 3 ] ] . state		8197778	0					
ANR	8200789	ArrayIndexing	temps [ args [ 3 ] ]		8197778	0					
ANR	8200790	Identifier	temps		8197778	0					
ANR	8200791	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8200792	Identifier	args		8197778	0					
ANR	8200793	PrimaryExpression	3		8197778	1					
ANR	8200794	Identifier	state		8197778	1					
ANR	8200795	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8200796	CompoundStatement		1141:16:19651:19697	8197778	1					
ANR	8200797	IdentifierDeclStatement	uint32_t a = temps [ args [ 2 ] ] . val ;	1133:16:19445:19476	8197778	0	True				
ANR	8200798	IdentifierDecl	a = temps [ args [ 2 ] ] . val		8197778	0					
ANR	8200799	IdentifierDeclType	uint32_t		8197778	0					
ANR	8200800	Identifier	a		8197778	1					
ANR	8200801	AssignmentExpression	a = temps [ args [ 2 ] ] . val		8197778	2		=			
ANR	8200802	Identifier	a		8197778	0					
ANR	8200803	MemberAccess	temps [ args [ 2 ] ] . val		8197778	1					
ANR	8200804	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8200805	Identifier	temps		8197778	0					
ANR	8200806	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8200807	Identifier	args		8197778	0					
ANR	8200808	PrimaryExpression	2		8197778	1					
ANR	8200809	Identifier	val		8197778	1					
ANR	8200810	IdentifierDeclStatement	uint32_t b = temps [ args [ 3 ] ] . val ;	1135:16:19495:19526	8197778	1	True				
ANR	8200811	IdentifierDecl	b = temps [ args [ 3 ] ] . val		8197778	0					
ANR	8200812	IdentifierDeclType	uint32_t		8197778	0					
ANR	8200813	Identifier	b		8197778	1					
ANR	8200814	AssignmentExpression	b = temps [ args [ 3 ] ] . val		8197778	2		=			
ANR	8200815	Identifier	b		8197778	0					
ANR	8200816	MemberAccess	temps [ args [ 3 ] ] . val		8197778	1					
ANR	8200817	ArrayIndexing	temps [ args [ 3 ] ]		8197778	0					
ANR	8200818	Identifier	temps		8197778	0					
ANR	8200819	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8200820	Identifier	args		8197778	0					
ANR	8200821	PrimaryExpression	3		8197778	1					
ANR	8200822	Identifier	val		8197778	1					
ANR	8200823	IdentifierDeclStatement	uint64_t r = ( uint64_t ) a * b ;	1137:16:19545:19573	8197778	2	True				
ANR	8200824	IdentifierDecl	r = ( uint64_t ) a * b		8197778	0					
ANR	8200825	IdentifierDeclType	uint64_t		8197778	0					
ANR	8200826	Identifier	r		8197778	1					
ANR	8200827	AssignmentExpression	r = ( uint64_t ) a * b		8197778	2		=			
ANR	8200828	Identifier	r		8197778	0					
ANR	8200829	MultiplicativeExpression	( uint64_t ) a * b		8197778	1		*			
ANR	8200830	CastExpression	( uint64_t ) a		8197778	0					
ANR	8200831	CastTarget	uint64_t		8197778	0					
ANR	8200832	Identifier	a		8197778	1					
ANR	8200833	Identifier	b		8197778	1					
ANR	8200834	IdentifierDeclStatement	"TCGArg rl , rh ;"	1139:16:19592:19605	8197778	3	True				
ANR	8200835	IdentifierDecl	rl		8197778	0					
ANR	8200836	IdentifierDeclType	TCGArg		8197778	0					
ANR	8200837	Identifier	rl		8197778	1					
ANR	8200838	IdentifierDecl	rh		8197778	1					
ANR	8200839	IdentifierDeclType	TCGArg		8197778	0					
ANR	8200840	Identifier	rh		8197778	1					
ANR	8200841	IdentifierDeclStatement	"TCGOp * op2 = insert_op_before ( s , op , INDEX_op_movi_i32 , 2 ) ;"	1141:16:19624:19682	8197778	4	True				
ANR	8200842	IdentifierDecl	"* op2 = insert_op_before ( s , op , INDEX_op_movi_i32 , 2 )"		8197778	0					
ANR	8200843	IdentifierDeclType	TCGOp *		8197778	0					
ANR	8200844	Identifier	op2		8197778	1					
ANR	8200845	AssignmentExpression	"* op2 = insert_op_before ( s , op , INDEX_op_movi_i32 , 2 )"		8197778	2		=			
ANR	8200846	Identifier	op2		8197778	0					
ANR	8200847	CallExpression	"insert_op_before ( s , op , INDEX_op_movi_i32 , 2 )"		8197778	1					
ANR	8200848	Callee	insert_op_before		8197778	0					
ANR	8200849	Identifier	insert_op_before		8197778	0					
ANR	8200850	ArgumentList	s		8197778	1					
ANR	8200851	Argument	s		8197778	0					
ANR	8200852	Identifier	s		8197778	0					
ANR	8200853	Argument	op		8197778	1					
ANR	8200854	Identifier	op		8197778	0					
ANR	8200855	Argument	INDEX_op_movi_i32		8197778	2					
ANR	8200856	Identifier	INDEX_op_movi_i32		8197778	0					
ANR	8200857	Argument	2		8197778	3					
ANR	8200858	PrimaryExpression	2		8197778	0					
ANR	8200859	IdentifierDeclStatement	TCGArg * args2 = & s -> gen_opparam_buf [ op2 -> args ] ;	1143:16:19701:19747	8197778	5	True				
ANR	8200860	IdentifierDecl	* args2 = & s -> gen_opparam_buf [ op2 -> args ]		8197778	0					
ANR	8200861	IdentifierDeclType	TCGArg *		8197778	0					
ANR	8200862	Identifier	args2		8197778	1					
ANR	8200863	AssignmentExpression	* args2 = & s -> gen_opparam_buf [ op2 -> args ]		8197778	2		=			
ANR	8200864	Identifier	args2		8197778	0					
ANR	8200865	UnaryOperationExpression	& s -> gen_opparam_buf [ op2 -> args ]		8197778	1					
ANR	8200866	UnaryOperator	&		8197778	0					
ANR	8200867	ArrayIndexing	s -> gen_opparam_buf [ op2 -> args ]		8197778	1					
ANR	8200868	PtrMemberAccess	s -> gen_opparam_buf		8197778	0					
ANR	8200869	Identifier	s		8197778	0					
ANR	8200870	Identifier	gen_opparam_buf		8197778	1					
ANR	8200871	PtrMemberAccess	op2 -> args		8197778	1					
ANR	8200872	Identifier	op2		8197778	0					
ANR	8200873	Identifier	args		8197778	1					
ANR	8200874	ExpressionStatement	rl = args [ 0 ]	1147:16:19768:19780	8197778	6	True				
ANR	8200875	AssignmentExpression	rl = args [ 0 ]		8197778	0		=			
ANR	8200876	Identifier	rl		8197778	0					
ANR	8200877	ArrayIndexing	args [ 0 ]		8197778	1					
ANR	8200878	Identifier	args		8197778	0					
ANR	8200879	PrimaryExpression	0		8197778	1					
ANR	8200880	ExpressionStatement	rh = args [ 1 ]	1149:16:19799:19811	8197778	7	True				
ANR	8200881	AssignmentExpression	rh = args [ 1 ]		8197778	0		=			
ANR	8200882	Identifier	rh		8197778	0					
ANR	8200883	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8200884	Identifier	args		8197778	0					
ANR	8200885	PrimaryExpression	1		8197778	1					
ANR	8200886	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , rl , ( uint32_t ) r )"	1151:16:19830:19876	8197778	8	True				
ANR	8200887	CallExpression	"tcg_opt_gen_movi ( s , op , args , rl , ( uint32_t ) r )"		8197778	0					
ANR	8200888	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8200889	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8200890	ArgumentList	s		8197778	1					
ANR	8200891	Argument	s		8197778	0					
ANR	8200892	Identifier	s		8197778	0					
ANR	8200893	Argument	op		8197778	1					
ANR	8200894	Identifier	op		8197778	0					
ANR	8200895	Argument	args		8197778	2					
ANR	8200896	Identifier	args		8197778	0					
ANR	8200897	Argument	rl		8197778	3					
ANR	8200898	Identifier	rl		8197778	0					
ANR	8200899	Argument	( uint32_t ) r		8197778	4					
ANR	8200900	CastExpression	( uint32_t ) r		8197778	0					
ANR	8200901	CastTarget	uint32_t		8197778	0					
ANR	8200902	Identifier	r		8197778	1					
ANR	8200903	ExpressionStatement	"tcg_opt_gen_movi ( s , op2 , args2 , rh , ( uint32_t ) ( r >> 32 ) )"	1153:16:19895:19951	8197778	9	True				
ANR	8200904	CallExpression	"tcg_opt_gen_movi ( s , op2 , args2 , rh , ( uint32_t ) ( r >> 32 ) )"		8197778	0					
ANR	8200905	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8200906	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8200907	ArgumentList	s		8197778	1					
ANR	8200908	Argument	s		8197778	0					
ANR	8200909	Identifier	s		8197778	0					
ANR	8200910	Argument	op2		8197778	1					
ANR	8200911	Identifier	op2		8197778	0					
ANR	8200912	Argument	args2		8197778	2					
ANR	8200913	Identifier	args2		8197778	0					
ANR	8200914	Argument	rh		8197778	3					
ANR	8200915	Identifier	rh		8197778	0					
ANR	8200916	Argument	( uint32_t ) ( r >> 32 )		8197778	4					
ANR	8200917	CastExpression	( uint32_t ) ( r >> 32 )		8197778	0					
ANR	8200918	CastTarget	uint32_t		8197778	0					
ANR	8200919	ShiftExpression	r >> 32		8197778	1		>>			
ANR	8200920	Identifier	r		8197778	0					
ANR	8200921	PrimaryExpression	32		8197778	1					
ANR	8200922	ExpressionStatement	oi_next = op2 -> next	1159:16:20050:20069	8197778	10	True				
ANR	8200923	AssignmentExpression	oi_next = op2 -> next		8197778	0		=			
ANR	8200924	Identifier	oi_next		8197778	0					
ANR	8200925	PtrMemberAccess	op2 -> next		8197778	1					
ANR	8200926	Identifier	op2		8197778	0					
ANR	8200927	Identifier	next		8197778	1					
ANR	8200928	BreakStatement	break ;	1161:16:20088:20093	8197778	11	True				
ANR	8200929	GotoStatement	goto do_default ;	1165:12:20123:20138	8197778	200	True				
ANR	8200930	Identifier	do_default		8197778	0					
ANR	8200931	Label	case INDEX_op_brcond2_i32 :	1169:8:20151:20176	8197778	201	True				
ANR	8200932	Identifier	INDEX_op_brcond2_i32		8197778	0					
ANR	8200933	ExpressionStatement	"tmp = do_constant_folding_cond2 ( & args [ 0 ] , & args [ 2 ] , args [ 4 ] )"	1171:12:20191:20251	8197778	202	True				
ANR	8200934	AssignmentExpression	"tmp = do_constant_folding_cond2 ( & args [ 0 ] , & args [ 2 ] , args [ 4 ] )"		8197778	0		=			
ANR	8200935	Identifier	tmp		8197778	0					
ANR	8200936	CallExpression	"do_constant_folding_cond2 ( & args [ 0 ] , & args [ 2 ] , args [ 4 ] )"		8197778	1					
ANR	8200937	Callee	do_constant_folding_cond2		8197778	0					
ANR	8200938	Identifier	do_constant_folding_cond2		8197778	0					
ANR	8200939	ArgumentList	& args [ 0 ]		8197778	1					
ANR	8200940	Argument	& args [ 0 ]		8197778	0					
ANR	8200941	UnaryOperationExpression	& args [ 0 ]		8197778	0					
ANR	8200942	UnaryOperator	&		8197778	0					
ANR	8200943	ArrayIndexing	args [ 0 ]		8197778	1					
ANR	8200944	Identifier	args		8197778	0					
ANR	8200945	PrimaryExpression	0		8197778	1					
ANR	8200946	Argument	& args [ 2 ]		8197778	1					
ANR	8200947	UnaryOperationExpression	& args [ 2 ]		8197778	0					
ANR	8200948	UnaryOperator	&		8197778	0					
ANR	8200949	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8200950	Identifier	args		8197778	0					
ANR	8200951	PrimaryExpression	2		8197778	1					
ANR	8200952	Argument	args [ 4 ]		8197778	2					
ANR	8200953	ArrayIndexing	args [ 4 ]		8197778	0					
ANR	8200954	Identifier	args		8197778	0					
ANR	8200955	PrimaryExpression	4		8197778	1					
ANR	8200956	IfStatement	if ( tmp != 2 )		8197778	203					
ANR	8200957	Condition	tmp != 2	1173:16:20270:20277	8197778	0	True				
ANR	8200958	EqualityExpression	tmp != 2		8197778	0		!=			
ANR	8200959	Identifier	tmp		8197778	0					
ANR	8200960	PrimaryExpression	2		8197778	1					
ANR	8200961	CompoundStatement		1171:26:20230:20230	8197778	1					
ANR	8200962	IfStatement	if ( tmp )		8197778	0					
ANR	8200963	Condition	tmp	1175:20:20303:20305	8197778	0	True				
ANR	8200964	Identifier	tmp		8197778	0					
ANR	8200965	CompoundStatement		1173:25:20258:20258	8197778	1					
ANR	8200966	Label	do_brcond_true :	1177:12:20323:20337	8197778	0	True				
ANR	8200967	Identifier	do_brcond_true		8197778	0					
ANR	8200968	ExpressionStatement	reset_all_temps ( nb_temps )	1179:20:20360:20385	8197778	1	True				
ANR	8200969	CallExpression	reset_all_temps ( nb_temps )		8197778	0					
ANR	8200970	Callee	reset_all_temps		8197778	0					
ANR	8200971	Identifier	reset_all_temps		8197778	0					
ANR	8200972	ArgumentList	nb_temps		8197778	1					
ANR	8200973	Argument	nb_temps		8197778	0					
ANR	8200974	Identifier	nb_temps		8197778	0					
ANR	8200975	ExpressionStatement	op -> opc = INDEX_op_br	1181:20:20408:20429	8197778	2	True				
ANR	8200976	AssignmentExpression	op -> opc = INDEX_op_br		8197778	0		=			
ANR	8200977	PtrMemberAccess	op -> opc		8197778	0					
ANR	8200978	Identifier	op		8197778	0					
ANR	8200979	Identifier	opc		8197778	1					
ANR	8200980	Identifier	INDEX_op_br		8197778	1					
ANR	8200981	ExpressionStatement	args [ 0 ] = args [ 5 ]	1183:20:20452:20469	8197778	3	True				
ANR	8200982	AssignmentExpression	args [ 0 ] = args [ 5 ]		8197778	0		=			
ANR	8200983	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8200984	Identifier	args		8197778	0					
ANR	8200985	PrimaryExpression	0		8197778	1					
ANR	8200986	ArrayIndexing	args [ 5 ]		8197778	1					
ANR	8200987	Identifier	args		8197778	0					
ANR	8200988	PrimaryExpression	5		8197778	1					
ANR	8200989	ElseStatement	else		8197778	0					
ANR	8200990	CompoundStatement		1183:23:20445:20445	8197778	0					
ANR	8200991	Label	do_brcond_false :	1187:12:20510:20525	8197778	0	True				
ANR	8200992	Identifier	do_brcond_false		8197778	0					
ANR	8200993	ExpressionStatement	"tcg_op_remove ( s , op )"	1189:20:20548:20568	8197778	1	True				
ANR	8200994	CallExpression	"tcg_op_remove ( s , op )"		8197778	0					
ANR	8200995	Callee	tcg_op_remove		8197778	0					
ANR	8200996	Identifier	tcg_op_remove		8197778	0					
ANR	8200997	ArgumentList	s		8197778	1					
ANR	8200998	Argument	s		8197778	0					
ANR	8200999	Identifier	s		8197778	0					
ANR	8201000	Argument	op		8197778	1					
ANR	8201001	Identifier	op		8197778	0					
ANR	8201002	ElseStatement	else		8197778	0					
ANR	8201003	IfStatement	if ( ( args [ 4 ] == TCG_COND_LT || args [ 4 ] == TCG_COND_GE ) && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 && temps [ args [ 3 ] ] . val == 0 )		8197778	0					
ANR	8201004	Condition	( args [ 4 ] == TCG_COND_LT || args [ 4 ] == TCG_COND_GE ) && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 && temps [ args [ 3 ] ] . val == 0	1193:23:20613:20896	8197778	0	True				
ANR	8201005	AndExpression	( args [ 4 ] == TCG_COND_LT || args [ 4 ] == TCG_COND_GE ) && temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 && temps [ args [ 3 ] ] . val == 0		8197778	0		&&			
ANR	8201006	OrExpression	args [ 4 ] == TCG_COND_LT || args [ 4 ] == TCG_COND_GE		8197778	0		||			
ANR	8201007	EqualityExpression	args [ 4 ] == TCG_COND_LT		8197778	0		==			
ANR	8201008	ArrayIndexing	args [ 4 ]		8197778	0					
ANR	8201009	Identifier	args		8197778	0					
ANR	8201010	PrimaryExpression	4		8197778	1					
ANR	8201011	Identifier	TCG_COND_LT		8197778	1					
ANR	8201012	EqualityExpression	args [ 4 ] == TCG_COND_GE		8197778	1		==			
ANR	8201013	ArrayIndexing	args [ 4 ]		8197778	0					
ANR	8201014	Identifier	args		8197778	0					
ANR	8201015	PrimaryExpression	4		8197778	1					
ANR	8201016	Identifier	TCG_COND_GE		8197778	1					
ANR	8201017	AndExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 && temps [ args [ 3 ] ] . val == 0		8197778	1		&&			
ANR	8201018	EqualityExpression	temps [ args [ 2 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8201019	MemberAccess	temps [ args [ 2 ] ] . state		8197778	0					
ANR	8201020	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8201021	Identifier	temps		8197778	0					
ANR	8201022	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8201023	Identifier	args		8197778	0					
ANR	8201024	PrimaryExpression	2		8197778	1					
ANR	8201025	Identifier	state		8197778	1					
ANR	8201026	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8201027	AndExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 2 ] ] . val == 0 && temps [ args [ 3 ] ] . val == 0		8197778	1		&&			
ANR	8201028	EqualityExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8201029	MemberAccess	temps [ args [ 3 ] ] . state		8197778	0					
ANR	8201030	ArrayIndexing	temps [ args [ 3 ] ]		8197778	0					
ANR	8201031	Identifier	temps		8197778	0					
ANR	8201032	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8201033	Identifier	args		8197778	0					
ANR	8201034	PrimaryExpression	3		8197778	1					
ANR	8201035	Identifier	state		8197778	1					
ANR	8201036	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8201037	AndExpression	temps [ args [ 2 ] ] . val == 0 && temps [ args [ 3 ] ] . val == 0		8197778	1		&&			
ANR	8201038	EqualityExpression	temps [ args [ 2 ] ] . val == 0		8197778	0		==			
ANR	8201039	MemberAccess	temps [ args [ 2 ] ] . val		8197778	0					
ANR	8201040	ArrayIndexing	temps [ args [ 2 ] ]		8197778	0					
ANR	8201041	Identifier	temps		8197778	0					
ANR	8201042	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8201043	Identifier	args		8197778	0					
ANR	8201044	PrimaryExpression	2		8197778	1					
ANR	8201045	Identifier	val		8197778	1					
ANR	8201046	PrimaryExpression	0		8197778	1					
ANR	8201047	EqualityExpression	temps [ args [ 3 ] ] . val == 0		8197778	1		==			
ANR	8201048	MemberAccess	temps [ args [ 3 ] ] . val		8197778	0					
ANR	8201049	ArrayIndexing	temps [ args [ 3 ] ]		8197778	0					
ANR	8201050	Identifier	temps		8197778	0					
ANR	8201051	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8201052	Identifier	args		8197778	0					
ANR	8201053	PrimaryExpression	3		8197778	1					
ANR	8201054	Identifier	val		8197778	1					
ANR	8201055	PrimaryExpression	0		8197778	1					
ANR	8201056	CompoundStatement		1199:51:20849:20849	8197778	1					
ANR	8201057	Label	do_brcond_high :	1207:12:21044:21058	8197778	0	True				
ANR	8201058	Identifier	do_brcond_high		8197778	0					
ANR	8201059	ExpressionStatement	reset_all_temps ( nb_temps )	1209:16:21077:21102	8197778	1	True				
ANR	8201060	CallExpression	reset_all_temps ( nb_temps )		8197778	0					
ANR	8201061	Callee	reset_all_temps		8197778	0					
ANR	8201062	Identifier	reset_all_temps		8197778	0					
ANR	8201063	ArgumentList	nb_temps		8197778	1					
ANR	8201064	Argument	nb_temps		8197778	0					
ANR	8201065	Identifier	nb_temps		8197778	0					
ANR	8201066	ExpressionStatement	op -> opc = INDEX_op_brcond_i32	1211:16:21121:21150	8197778	2	True				
ANR	8201067	AssignmentExpression	op -> opc = INDEX_op_brcond_i32		8197778	0		=			
ANR	8201068	PtrMemberAccess	op -> opc		8197778	0					
ANR	8201069	Identifier	op		8197778	0					
ANR	8201070	Identifier	opc		8197778	1					
ANR	8201071	Identifier	INDEX_op_brcond_i32		8197778	1					
ANR	8201072	ExpressionStatement	args [ 0 ] = args [ 1 ]	1213:16:21169:21186	8197778	3	True				
ANR	8201073	AssignmentExpression	args [ 0 ] = args [ 1 ]		8197778	0		=			
ANR	8201074	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8201075	Identifier	args		8197778	0					
ANR	8201076	PrimaryExpression	0		8197778	1					
ANR	8201077	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8201078	Identifier	args		8197778	0					
ANR	8201079	PrimaryExpression	1		8197778	1					
ANR	8201080	ExpressionStatement	args [ 1 ] = args [ 3 ]	1215:16:21205:21222	8197778	4	True				
ANR	8201081	AssignmentExpression	args [ 1 ] = args [ 3 ]		8197778	0		=			
ANR	8201082	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8201083	Identifier	args		8197778	0					
ANR	8201084	PrimaryExpression	1		8197778	1					
ANR	8201085	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8201086	Identifier	args		8197778	0					
ANR	8201087	PrimaryExpression	3		8197778	1					
ANR	8201088	ExpressionStatement	args [ 2 ] = args [ 4 ]	1217:16:21241:21258	8197778	5	True				
ANR	8201089	AssignmentExpression	args [ 2 ] = args [ 4 ]		8197778	0		=			
ANR	8201090	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8201091	Identifier	args		8197778	0					
ANR	8201092	PrimaryExpression	2		8197778	1					
ANR	8201093	ArrayIndexing	args [ 4 ]		8197778	1					
ANR	8201094	Identifier	args		8197778	0					
ANR	8201095	PrimaryExpression	4		8197778	1					
ANR	8201096	ExpressionStatement	args [ 3 ] = args [ 5 ]	1219:16:21277:21294	8197778	6	True				
ANR	8201097	AssignmentExpression	args [ 3 ] = args [ 5 ]		8197778	0		=			
ANR	8201098	ArrayIndexing	args [ 3 ]		8197778	0					
ANR	8201099	Identifier	args		8197778	0					
ANR	8201100	PrimaryExpression	3		8197778	1					
ANR	8201101	ArrayIndexing	args [ 5 ]		8197778	1					
ANR	8201102	Identifier	args		8197778	0					
ANR	8201103	PrimaryExpression	5		8197778	1					
ANR	8201104	ElseStatement	else		8197778	0					
ANR	8201105	IfStatement	if ( args [ 4 ] == TCG_COND_EQ )		8197778	0					
ANR	8201106	Condition	args [ 4 ] == TCG_COND_EQ	1221:23:21320:21341	8197778	0	True				
ANR	8201107	EqualityExpression	args [ 4 ] == TCG_COND_EQ		8197778	0		==			
ANR	8201108	ArrayIndexing	args [ 4 ]		8197778	0					
ANR	8201109	Identifier	args		8197778	0					
ANR	8201110	PrimaryExpression	4		8197778	1					
ANR	8201111	Identifier	TCG_COND_EQ		8197778	1					
ANR	8201112	CompoundStatement		1219:47:21294:21294	8197778	1					
ANR	8201113	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 0 ] , args [ 2 ] , TCG_COND_EQ )"	1227:16:21473:21603	8197778	0	True				
ANR	8201114	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 0 ] , args [ 2 ] , TCG_COND_EQ )"		8197778	0		=			
ANR	8201115	Identifier	tmp		8197778	0					
ANR	8201116	CallExpression	"do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 0 ] , args [ 2 ] , TCG_COND_EQ )"		8197778	1					
ANR	8201117	Callee	do_constant_folding_cond		8197778	0					
ANR	8201118	Identifier	do_constant_folding_cond		8197778	0					
ANR	8201119	ArgumentList	INDEX_op_brcond_i32		8197778	1					
ANR	8201120	Argument	INDEX_op_brcond_i32		8197778	0					
ANR	8201121	Identifier	INDEX_op_brcond_i32		8197778	0					
ANR	8201122	Argument	args [ 0 ]		8197778	1					
ANR	8201123	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8201124	Identifier	args		8197778	0					
ANR	8201125	PrimaryExpression	0		8197778	1					
ANR	8201126	Argument	args [ 2 ]		8197778	2					
ANR	8201127	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8201128	Identifier	args		8197778	0					
ANR	8201129	PrimaryExpression	2		8197778	1					
ANR	8201130	Argument	TCG_COND_EQ		8197778	3					
ANR	8201131	Identifier	TCG_COND_EQ		8197778	0					
ANR	8201132	IfStatement	if ( tmp == 0 )		8197778	1					
ANR	8201133	Condition	tmp == 0	1231:20:21626:21633	8197778	0	True				
ANR	8201134	EqualityExpression	tmp == 0		8197778	0		==			
ANR	8201135	Identifier	tmp		8197778	0					
ANR	8201136	PrimaryExpression	0		8197778	1					
ANR	8201137	CompoundStatement		1229:30:21586:21586	8197778	1					
ANR	8201138	GotoStatement	goto do_brcond_false ;	1233:20:21659:21679	8197778	0	True				
ANR	8201139	Identifier	do_brcond_false		8197778	0					
ANR	8201140	ElseStatement	else		8197778	0					
ANR	8201141	IfStatement	if ( tmp == 1 )		8197778	0					
ANR	8201142	Condition	tmp == 1	1235:27:21709:21716	8197778	0	True				
ANR	8201143	EqualityExpression	tmp == 1		8197778	0		==			
ANR	8201144	Identifier	tmp		8197778	0					
ANR	8201145	PrimaryExpression	1		8197778	1					
ANR	8201146	CompoundStatement		1233:37:21669:21669	8197778	1					
ANR	8201147	GotoStatement	goto do_brcond_high ;	1237:20:21742:21761	8197778	0	True				
ANR	8201148	Identifier	do_brcond_high		8197778	0					
ANR	8201149	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_EQ )"	1241:16:21799:21929	8197778	2	True				
ANR	8201150	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_EQ )"		8197778	0		=			
ANR	8201151	Identifier	tmp		8197778	0					
ANR	8201152	CallExpression	"do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_EQ )"		8197778	1					
ANR	8201153	Callee	do_constant_folding_cond		8197778	0					
ANR	8201154	Identifier	do_constant_folding_cond		8197778	0					
ANR	8201155	ArgumentList	INDEX_op_brcond_i32		8197778	1					
ANR	8201156	Argument	INDEX_op_brcond_i32		8197778	0					
ANR	8201157	Identifier	INDEX_op_brcond_i32		8197778	0					
ANR	8201158	Argument	args [ 1 ]		8197778	1					
ANR	8201159	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8201160	Identifier	args		8197778	0					
ANR	8201161	PrimaryExpression	1		8197778	1					
ANR	8201162	Argument	args [ 3 ]		8197778	2					
ANR	8201163	ArrayIndexing	args [ 3 ]		8197778	0					
ANR	8201164	Identifier	args		8197778	0					
ANR	8201165	PrimaryExpression	3		8197778	1					
ANR	8201166	Argument	TCG_COND_EQ		8197778	3					
ANR	8201167	Identifier	TCG_COND_EQ		8197778	0					
ANR	8201168	IfStatement	if ( tmp == 0 )		8197778	3					
ANR	8201169	Condition	tmp == 0	1245:20:21952:21959	8197778	0	True				
ANR	8201170	EqualityExpression	tmp == 0		8197778	0		==			
ANR	8201171	Identifier	tmp		8197778	0					
ANR	8201172	PrimaryExpression	0		8197778	1					
ANR	8201173	CompoundStatement		1243:30:21912:21912	8197778	1					
ANR	8201174	GotoStatement	goto do_brcond_false ;	1247:20:21985:22005	8197778	0	True				
ANR	8201175	Identifier	do_brcond_false		8197778	0					
ANR	8201176	ElseStatement	else		8197778	0					
ANR	8201177	IfStatement	if ( tmp != 1 )		8197778	0					
ANR	8201178	Condition	tmp != 1	1249:27:22035:22042	8197778	0	True				
ANR	8201179	EqualityExpression	tmp != 1		8197778	0		!=			
ANR	8201180	Identifier	tmp		8197778	0					
ANR	8201181	PrimaryExpression	1		8197778	1					
ANR	8201182	CompoundStatement		1247:37:21995:21995	8197778	1					
ANR	8201183	GotoStatement	goto do_default ;	1251:20:22068:22083	8197778	0	True				
ANR	8201184	Identifier	do_default		8197778	0					
ANR	8201185	Label	do_brcond_low :	1255:12:22117:22130	8197778	4	True				
ANR	8201186	Identifier	do_brcond_low		8197778	0					
ANR	8201187	ExpressionStatement	reset_all_temps ( nb_temps )	1257:16:22149:22174	8197778	5	True				
ANR	8201188	CallExpression	reset_all_temps ( nb_temps )		8197778	0					
ANR	8201189	Callee	reset_all_temps		8197778	0					
ANR	8201190	Identifier	reset_all_temps		8197778	0					
ANR	8201191	ArgumentList	nb_temps		8197778	1					
ANR	8201192	Argument	nb_temps		8197778	0					
ANR	8201193	Identifier	nb_temps		8197778	0					
ANR	8201194	ExpressionStatement	op -> opc = INDEX_op_brcond_i32	1259:16:22193:22222	8197778	6	True				
ANR	8201195	AssignmentExpression	op -> opc = INDEX_op_brcond_i32		8197778	0		=			
ANR	8201196	PtrMemberAccess	op -> opc		8197778	0					
ANR	8201197	Identifier	op		8197778	0					
ANR	8201198	Identifier	opc		8197778	1					
ANR	8201199	Identifier	INDEX_op_brcond_i32		8197778	1					
ANR	8201200	ExpressionStatement	args [ 1 ] = args [ 2 ]	1261:16:22241:22258	8197778	7	True				
ANR	8201201	AssignmentExpression	args [ 1 ] = args [ 2 ]		8197778	0		=			
ANR	8201202	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8201203	Identifier	args		8197778	0					
ANR	8201204	PrimaryExpression	1		8197778	1					
ANR	8201205	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8201206	Identifier	args		8197778	0					
ANR	8201207	PrimaryExpression	2		8197778	1					
ANR	8201208	ExpressionStatement	args [ 2 ] = args [ 4 ]	1263:16:22277:22294	8197778	8	True				
ANR	8201209	AssignmentExpression	args [ 2 ] = args [ 4 ]		8197778	0		=			
ANR	8201210	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8201211	Identifier	args		8197778	0					
ANR	8201212	PrimaryExpression	2		8197778	1					
ANR	8201213	ArrayIndexing	args [ 4 ]		8197778	1					
ANR	8201214	Identifier	args		8197778	0					
ANR	8201215	PrimaryExpression	4		8197778	1					
ANR	8201216	ExpressionStatement	args [ 3 ] = args [ 5 ]	1265:16:22313:22330	8197778	9	True				
ANR	8201217	AssignmentExpression	args [ 3 ] = args [ 5 ]		8197778	0		=			
ANR	8201218	ArrayIndexing	args [ 3 ]		8197778	0					
ANR	8201219	Identifier	args		8197778	0					
ANR	8201220	PrimaryExpression	3		8197778	1					
ANR	8201221	ArrayIndexing	args [ 5 ]		8197778	1					
ANR	8201222	Identifier	args		8197778	0					
ANR	8201223	PrimaryExpression	5		8197778	1					
ANR	8201224	ElseStatement	else		8197778	0					
ANR	8201225	IfStatement	if ( args [ 4 ] == TCG_COND_NE )		8197778	0					
ANR	8201226	Condition	args [ 4 ] == TCG_COND_NE	1267:23:22356:22377	8197778	0	True				
ANR	8201227	EqualityExpression	args [ 4 ] == TCG_COND_NE		8197778	0		==			
ANR	8201228	ArrayIndexing	args [ 4 ]		8197778	0					
ANR	8201229	Identifier	args		8197778	0					
ANR	8201230	PrimaryExpression	4		8197778	1					
ANR	8201231	Identifier	TCG_COND_NE		8197778	1					
ANR	8201232	CompoundStatement		1265:47:22330:22330	8197778	1					
ANR	8201233	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 0 ] , args [ 2 ] , TCG_COND_NE )"	1273:16:22509:22639	8197778	0	True				
ANR	8201234	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 0 ] , args [ 2 ] , TCG_COND_NE )"		8197778	0		=			
ANR	8201235	Identifier	tmp		8197778	0					
ANR	8201236	CallExpression	"do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 0 ] , args [ 2 ] , TCG_COND_NE )"		8197778	1					
ANR	8201237	Callee	do_constant_folding_cond		8197778	0					
ANR	8201238	Identifier	do_constant_folding_cond		8197778	0					
ANR	8201239	ArgumentList	INDEX_op_brcond_i32		8197778	1					
ANR	8201240	Argument	INDEX_op_brcond_i32		8197778	0					
ANR	8201241	Identifier	INDEX_op_brcond_i32		8197778	0					
ANR	8201242	Argument	args [ 0 ]		8197778	1					
ANR	8201243	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8201244	Identifier	args		8197778	0					
ANR	8201245	PrimaryExpression	0		8197778	1					
ANR	8201246	Argument	args [ 2 ]		8197778	2					
ANR	8201247	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8201248	Identifier	args		8197778	0					
ANR	8201249	PrimaryExpression	2		8197778	1					
ANR	8201250	Argument	TCG_COND_NE		8197778	3					
ANR	8201251	Identifier	TCG_COND_NE		8197778	0					
ANR	8201252	IfStatement	if ( tmp == 0 )		8197778	1					
ANR	8201253	Condition	tmp == 0	1277:20:22662:22669	8197778	0	True				
ANR	8201254	EqualityExpression	tmp == 0		8197778	0		==			
ANR	8201255	Identifier	tmp		8197778	0					
ANR	8201256	PrimaryExpression	0		8197778	1					
ANR	8201257	CompoundStatement		1275:30:22622:22622	8197778	1					
ANR	8201258	GotoStatement	goto do_brcond_high ;	1279:20:22695:22714	8197778	0	True				
ANR	8201259	Identifier	do_brcond_high		8197778	0					
ANR	8201260	ElseStatement	else		8197778	0					
ANR	8201261	IfStatement	if ( tmp == 1 )		8197778	0					
ANR	8201262	Condition	tmp == 1	1281:27:22744:22751	8197778	0	True				
ANR	8201263	EqualityExpression	tmp == 1		8197778	0		==			
ANR	8201264	Identifier	tmp		8197778	0					
ANR	8201265	PrimaryExpression	1		8197778	1					
ANR	8201266	CompoundStatement		1279:37:22704:22704	8197778	1					
ANR	8201267	GotoStatement	goto do_brcond_true ;	1283:20:22777:22796	8197778	0	True				
ANR	8201268	Identifier	do_brcond_true		8197778	0					
ANR	8201269	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_NE )"	1287:16:22834:22964	8197778	2	True				
ANR	8201270	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_NE )"		8197778	0		=			
ANR	8201271	Identifier	tmp		8197778	0					
ANR	8201272	CallExpression	"do_constant_folding_cond ( INDEX_op_brcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_NE )"		8197778	1					
ANR	8201273	Callee	do_constant_folding_cond		8197778	0					
ANR	8201274	Identifier	do_constant_folding_cond		8197778	0					
ANR	8201275	ArgumentList	INDEX_op_brcond_i32		8197778	1					
ANR	8201276	Argument	INDEX_op_brcond_i32		8197778	0					
ANR	8201277	Identifier	INDEX_op_brcond_i32		8197778	0					
ANR	8201278	Argument	args [ 1 ]		8197778	1					
ANR	8201279	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8201280	Identifier	args		8197778	0					
ANR	8201281	PrimaryExpression	1		8197778	1					
ANR	8201282	Argument	args [ 3 ]		8197778	2					
ANR	8201283	ArrayIndexing	args [ 3 ]		8197778	0					
ANR	8201284	Identifier	args		8197778	0					
ANR	8201285	PrimaryExpression	3		8197778	1					
ANR	8201286	Argument	TCG_COND_NE		8197778	3					
ANR	8201287	Identifier	TCG_COND_NE		8197778	0					
ANR	8201288	IfStatement	if ( tmp == 0 )		8197778	3					
ANR	8201289	Condition	tmp == 0	1291:20:22987:22994	8197778	0	True				
ANR	8201290	EqualityExpression	tmp == 0		8197778	0		==			
ANR	8201291	Identifier	tmp		8197778	0					
ANR	8201292	PrimaryExpression	0		8197778	1					
ANR	8201293	CompoundStatement		1289:30:22947:22947	8197778	1					
ANR	8201294	GotoStatement	goto do_brcond_low ;	1293:20:23020:23038	8197778	0	True				
ANR	8201295	Identifier	do_brcond_low		8197778	0					
ANR	8201296	ElseStatement	else		8197778	0					
ANR	8201297	IfStatement	if ( tmp == 1 )		8197778	0					
ANR	8201298	Condition	tmp == 1	1295:27:23068:23075	8197778	0	True				
ANR	8201299	EqualityExpression	tmp == 1		8197778	0		==			
ANR	8201300	Identifier	tmp		8197778	0					
ANR	8201301	PrimaryExpression	1		8197778	1					
ANR	8201302	CompoundStatement		1293:37:23028:23028	8197778	1					
ANR	8201303	GotoStatement	goto do_brcond_true ;	1297:20:23101:23120	8197778	0	True				
ANR	8201304	Identifier	do_brcond_true		8197778	0					
ANR	8201305	GotoStatement	goto do_default ;	1301:16:23158:23173	8197778	4	True				
ANR	8201306	Identifier	do_default		8197778	0					
ANR	8201307	ElseStatement	else		8197778	0					
ANR	8201308	CompoundStatement		1301:19:23145:23145	8197778	0					
ANR	8201309	GotoStatement	goto do_default ;	1305:16:23214:23229	8197778	0	True				
ANR	8201310	Identifier	do_default		8197778	0					
ANR	8201311	BreakStatement	break ;	1309:12:23259:23264	8197778	204	True				
ANR	8201312	Label	case INDEX_op_setcond2_i32 :	1313:8:23277:23303	8197778	205	True				
ANR	8201313	Identifier	INDEX_op_setcond2_i32		8197778	0					
ANR	8201314	ExpressionStatement	"tmp = do_constant_folding_cond2 ( & args [ 1 ] , & args [ 3 ] , args [ 5 ] )"	1315:12:23318:23378	8197778	206	True				
ANR	8201315	AssignmentExpression	"tmp = do_constant_folding_cond2 ( & args [ 1 ] , & args [ 3 ] , args [ 5 ] )"		8197778	0		=			
ANR	8201316	Identifier	tmp		8197778	0					
ANR	8201317	CallExpression	"do_constant_folding_cond2 ( & args [ 1 ] , & args [ 3 ] , args [ 5 ] )"		8197778	1					
ANR	8201318	Callee	do_constant_folding_cond2		8197778	0					
ANR	8201319	Identifier	do_constant_folding_cond2		8197778	0					
ANR	8201320	ArgumentList	& args [ 1 ]		8197778	1					
ANR	8201321	Argument	& args [ 1 ]		8197778	0					
ANR	8201322	UnaryOperationExpression	& args [ 1 ]		8197778	0					
ANR	8201323	UnaryOperator	&		8197778	0					
ANR	8201324	ArrayIndexing	args [ 1 ]		8197778	1					
ANR	8201325	Identifier	args		8197778	0					
ANR	8201326	PrimaryExpression	1		8197778	1					
ANR	8201327	Argument	& args [ 3 ]		8197778	1					
ANR	8201328	UnaryOperationExpression	& args [ 3 ]		8197778	0					
ANR	8201329	UnaryOperator	&		8197778	0					
ANR	8201330	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8201331	Identifier	args		8197778	0					
ANR	8201332	PrimaryExpression	3		8197778	1					
ANR	8201333	Argument	args [ 5 ]		8197778	2					
ANR	8201334	ArrayIndexing	args [ 5 ]		8197778	0					
ANR	8201335	Identifier	args		8197778	0					
ANR	8201336	PrimaryExpression	5		8197778	1					
ANR	8201337	IfStatement	if ( tmp != 2 )		8197778	207					
ANR	8201338	Condition	tmp != 2	1317:16:23397:23404	8197778	0	True				
ANR	8201339	EqualityExpression	tmp != 2		8197778	0		!=			
ANR	8201340	Identifier	tmp		8197778	0					
ANR	8201341	PrimaryExpression	2		8197778	1					
ANR	8201342	CompoundStatement		1315:26:23357:23357	8197778	1					
ANR	8201343	Label	do_setcond_const :	1319:12:23422:23438	8197778	0	True				
ANR	8201344	Identifier	do_setcond_const		8197778	0					
ANR	8201345	ExpressionStatement	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"	1321:16:23457:23500	8197778	1	True				
ANR	8201346	CallExpression	"tcg_opt_gen_movi ( s , op , args , args [ 0 ] , tmp )"		8197778	0					
ANR	8201347	Callee	tcg_opt_gen_movi		8197778	0					
ANR	8201348	Identifier	tcg_opt_gen_movi		8197778	0					
ANR	8201349	ArgumentList	s		8197778	1					
ANR	8201350	Argument	s		8197778	0					
ANR	8201351	Identifier	s		8197778	0					
ANR	8201352	Argument	op		8197778	1					
ANR	8201353	Identifier	op		8197778	0					
ANR	8201354	Argument	args		8197778	2					
ANR	8201355	Identifier	args		8197778	0					
ANR	8201356	Argument	args [ 0 ]		8197778	3					
ANR	8201357	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8201358	Identifier	args		8197778	0					
ANR	8201359	PrimaryExpression	0		8197778	1					
ANR	8201360	Argument	tmp		8197778	4					
ANR	8201361	Identifier	tmp		8197778	0					
ANR	8201362	ElseStatement	else		8197778	0					
ANR	8201363	IfStatement	if ( ( args [ 5 ] == TCG_COND_LT || args [ 5 ] == TCG_COND_GE ) && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . val == 0 && temps [ args [ 4 ] ] . val == 0 )		8197778	0					
ANR	8201364	Condition	( args [ 5 ] == TCG_COND_LT || args [ 5 ] == TCG_COND_GE ) && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . val == 0 && temps [ args [ 4 ] ] . val == 0	1323:23:23526:23809	8197778	0	True				
ANR	8201365	AndExpression	( args [ 5 ] == TCG_COND_LT || args [ 5 ] == TCG_COND_GE ) && temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . val == 0 && temps [ args [ 4 ] ] . val == 0		8197778	0		&&			
ANR	8201366	OrExpression	args [ 5 ] == TCG_COND_LT || args [ 5 ] == TCG_COND_GE		8197778	0		||			
ANR	8201367	EqualityExpression	args [ 5 ] == TCG_COND_LT		8197778	0		==			
ANR	8201368	ArrayIndexing	args [ 5 ]		8197778	0					
ANR	8201369	Identifier	args		8197778	0					
ANR	8201370	PrimaryExpression	5		8197778	1					
ANR	8201371	Identifier	TCG_COND_LT		8197778	1					
ANR	8201372	EqualityExpression	args [ 5 ] == TCG_COND_GE		8197778	1		==			
ANR	8201373	ArrayIndexing	args [ 5 ]		8197778	0					
ANR	8201374	Identifier	args		8197778	0					
ANR	8201375	PrimaryExpression	5		8197778	1					
ANR	8201376	Identifier	TCG_COND_GE		8197778	1					
ANR	8201377	AndExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST && temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . val == 0 && temps [ args [ 4 ] ] . val == 0		8197778	1		&&			
ANR	8201378	EqualityExpression	temps [ args [ 3 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8201379	MemberAccess	temps [ args [ 3 ] ] . state		8197778	0					
ANR	8201380	ArrayIndexing	temps [ args [ 3 ] ]		8197778	0					
ANR	8201381	Identifier	temps		8197778	0					
ANR	8201382	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8201383	Identifier	args		8197778	0					
ANR	8201384	PrimaryExpression	3		8197778	1					
ANR	8201385	Identifier	state		8197778	1					
ANR	8201386	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8201387	AndExpression	temps [ args [ 4 ] ] . state == TCG_TEMP_CONST && temps [ args [ 3 ] ] . val == 0 && temps [ args [ 4 ] ] . val == 0		8197778	1		&&			
ANR	8201388	EqualityExpression	temps [ args [ 4 ] ] . state == TCG_TEMP_CONST		8197778	0		==			
ANR	8201389	MemberAccess	temps [ args [ 4 ] ] . state		8197778	0					
ANR	8201390	ArrayIndexing	temps [ args [ 4 ] ]		8197778	0					
ANR	8201391	Identifier	temps		8197778	0					
ANR	8201392	ArrayIndexing	args [ 4 ]		8197778	1					
ANR	8201393	Identifier	args		8197778	0					
ANR	8201394	PrimaryExpression	4		8197778	1					
ANR	8201395	Identifier	state		8197778	1					
ANR	8201396	Identifier	TCG_TEMP_CONST		8197778	1					
ANR	8201397	AndExpression	temps [ args [ 3 ] ] . val == 0 && temps [ args [ 4 ] ] . val == 0		8197778	1		&&			
ANR	8201398	EqualityExpression	temps [ args [ 3 ] ] . val == 0		8197778	0		==			
ANR	8201399	MemberAccess	temps [ args [ 3 ] ] . val		8197778	0					
ANR	8201400	ArrayIndexing	temps [ args [ 3 ] ]		8197778	0					
ANR	8201401	Identifier	temps		8197778	0					
ANR	8201402	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8201403	Identifier	args		8197778	0					
ANR	8201404	PrimaryExpression	3		8197778	1					
ANR	8201405	Identifier	val		8197778	1					
ANR	8201406	PrimaryExpression	0		8197778	1					
ANR	8201407	EqualityExpression	temps [ args [ 4 ] ] . val == 0		8197778	1		==			
ANR	8201408	MemberAccess	temps [ args [ 4 ] ] . val		8197778	0					
ANR	8201409	ArrayIndexing	temps [ args [ 4 ] ]		8197778	0					
ANR	8201410	Identifier	temps		8197778	0					
ANR	8201411	ArrayIndexing	args [ 4 ]		8197778	1					
ANR	8201412	Identifier	args		8197778	0					
ANR	8201413	PrimaryExpression	4		8197778	1					
ANR	8201414	Identifier	val		8197778	1					
ANR	8201415	PrimaryExpression	0		8197778	1					
ANR	8201416	CompoundStatement		1329:51:23762:23762	8197778	1					
ANR	8201417	Label	do_setcond_high :	1337:12:23957:23972	8197778	0	True				
ANR	8201418	Identifier	do_setcond_high		8197778	0					
ANR	8201419	ExpressionStatement	reset_temp ( args [ 0 ] )	1339:16:23991:24010	8197778	1	True				
ANR	8201420	CallExpression	reset_temp ( args [ 0 ] )		8197778	0					
ANR	8201421	Callee	reset_temp		8197778	0					
ANR	8201422	Identifier	reset_temp		8197778	0					
ANR	8201423	ArgumentList	args [ 0 ]		8197778	1					
ANR	8201424	Argument	args [ 0 ]		8197778	0					
ANR	8201425	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8201426	Identifier	args		8197778	0					
ANR	8201427	PrimaryExpression	0		8197778	1					
ANR	8201428	ExpressionStatement	temps [ args [ 0 ] ] . mask = 1	1341:16:24029:24052	8197778	2	True				
ANR	8201429	AssignmentExpression	temps [ args [ 0 ] ] . mask = 1		8197778	0		=			
ANR	8201430	MemberAccess	temps [ args [ 0 ] ] . mask		8197778	0					
ANR	8201431	ArrayIndexing	temps [ args [ 0 ] ]		8197778	0					
ANR	8201432	Identifier	temps		8197778	0					
ANR	8201433	ArrayIndexing	args [ 0 ]		8197778	1					
ANR	8201434	Identifier	args		8197778	0					
ANR	8201435	PrimaryExpression	0		8197778	1					
ANR	8201436	Identifier	mask		8197778	1					
ANR	8201437	PrimaryExpression	1		8197778	1					
ANR	8201438	ExpressionStatement	op -> opc = INDEX_op_setcond_i32	1343:16:24071:24101	8197778	3	True				
ANR	8201439	AssignmentExpression	op -> opc = INDEX_op_setcond_i32		8197778	0		=			
ANR	8201440	PtrMemberAccess	op -> opc		8197778	0					
ANR	8201441	Identifier	op		8197778	0					
ANR	8201442	Identifier	opc		8197778	1					
ANR	8201443	Identifier	INDEX_op_setcond_i32		8197778	1					
ANR	8201444	ExpressionStatement	args [ 1 ] = args [ 2 ]	1345:16:24120:24137	8197778	4	True				
ANR	8201445	AssignmentExpression	args [ 1 ] = args [ 2 ]		8197778	0		=			
ANR	8201446	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8201447	Identifier	args		8197778	0					
ANR	8201448	PrimaryExpression	1		8197778	1					
ANR	8201449	ArrayIndexing	args [ 2 ]		8197778	1					
ANR	8201450	Identifier	args		8197778	0					
ANR	8201451	PrimaryExpression	2		8197778	1					
ANR	8201452	ExpressionStatement	args [ 2 ] = args [ 4 ]	1347:16:24156:24173	8197778	5	True				
ANR	8201453	AssignmentExpression	args [ 2 ] = args [ 4 ]		8197778	0		=			
ANR	8201454	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8201455	Identifier	args		8197778	0					
ANR	8201456	PrimaryExpression	2		8197778	1					
ANR	8201457	ArrayIndexing	args [ 4 ]		8197778	1					
ANR	8201458	Identifier	args		8197778	0					
ANR	8201459	PrimaryExpression	4		8197778	1					
ANR	8201460	ExpressionStatement	args [ 3 ] = args [ 5 ]	1349:16:24192:24209	8197778	6	True				
ANR	8201461	AssignmentExpression	args [ 3 ] = args [ 5 ]		8197778	0		=			
ANR	8201462	ArrayIndexing	args [ 3 ]		8197778	0					
ANR	8201463	Identifier	args		8197778	0					
ANR	8201464	PrimaryExpression	3		8197778	1					
ANR	8201465	ArrayIndexing	args [ 5 ]		8197778	1					
ANR	8201466	Identifier	args		8197778	0					
ANR	8201467	PrimaryExpression	5		8197778	1					
ANR	8201468	ElseStatement	else		8197778	0					
ANR	8201469	IfStatement	if ( args [ 5 ] == TCG_COND_EQ )		8197778	0					
ANR	8201470	Condition	args [ 5 ] == TCG_COND_EQ	1351:23:24235:24256	8197778	0	True				
ANR	8201471	EqualityExpression	args [ 5 ] == TCG_COND_EQ		8197778	0		==			
ANR	8201472	ArrayIndexing	args [ 5 ]		8197778	0					
ANR	8201473	Identifier	args		8197778	0					
ANR	8201474	PrimaryExpression	5		8197778	1					
ANR	8201475	Identifier	TCG_COND_EQ		8197778	1					
ANR	8201476	CompoundStatement		1349:47:24209:24209	8197778	1					
ANR	8201477	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_EQ )"	1357:16:24388:24519	8197778	0	True				
ANR	8201478	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_EQ )"		8197778	0		=			
ANR	8201479	Identifier	tmp		8197778	0					
ANR	8201480	CallExpression	"do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_EQ )"		8197778	1					
ANR	8201481	Callee	do_constant_folding_cond		8197778	0					
ANR	8201482	Identifier	do_constant_folding_cond		8197778	0					
ANR	8201483	ArgumentList	INDEX_op_setcond_i32		8197778	1					
ANR	8201484	Argument	INDEX_op_setcond_i32		8197778	0					
ANR	8201485	Identifier	INDEX_op_setcond_i32		8197778	0					
ANR	8201486	Argument	args [ 1 ]		8197778	1					
ANR	8201487	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8201488	Identifier	args		8197778	0					
ANR	8201489	PrimaryExpression	1		8197778	1					
ANR	8201490	Argument	args [ 3 ]		8197778	2					
ANR	8201491	ArrayIndexing	args [ 3 ]		8197778	0					
ANR	8201492	Identifier	args		8197778	0					
ANR	8201493	PrimaryExpression	3		8197778	1					
ANR	8201494	Argument	TCG_COND_EQ		8197778	3					
ANR	8201495	Identifier	TCG_COND_EQ		8197778	0					
ANR	8201496	IfStatement	if ( tmp == 0 )		8197778	1					
ANR	8201497	Condition	tmp == 0	1361:20:24542:24549	8197778	0	True				
ANR	8201498	EqualityExpression	tmp == 0		8197778	0		==			
ANR	8201499	Identifier	tmp		8197778	0					
ANR	8201500	PrimaryExpression	0		8197778	1					
ANR	8201501	CompoundStatement		1359:30:24502:24502	8197778	1					
ANR	8201502	GotoStatement	goto do_setcond_const ;	1363:20:24575:24596	8197778	0	True				
ANR	8201503	Identifier	do_setcond_const		8197778	0					
ANR	8201504	ElseStatement	else		8197778	0					
ANR	8201505	IfStatement	if ( tmp == 1 )		8197778	0					
ANR	8201506	Condition	tmp == 1	1365:27:24626:24633	8197778	0	True				
ANR	8201507	EqualityExpression	tmp == 1		8197778	0		==			
ANR	8201508	Identifier	tmp		8197778	0					
ANR	8201509	PrimaryExpression	1		8197778	1					
ANR	8201510	CompoundStatement		1363:37:24586:24586	8197778	1					
ANR	8201511	GotoStatement	goto do_setcond_high ;	1367:20:24659:24679	8197778	0	True				
ANR	8201512	Identifier	do_setcond_high		8197778	0					
ANR	8201513	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 2 ] , args [ 4 ] , TCG_COND_EQ )"	1371:16:24717:24848	8197778	2	True				
ANR	8201514	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 2 ] , args [ 4 ] , TCG_COND_EQ )"		8197778	0		=			
ANR	8201515	Identifier	tmp		8197778	0					
ANR	8201516	CallExpression	"do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 2 ] , args [ 4 ] , TCG_COND_EQ )"		8197778	1					
ANR	8201517	Callee	do_constant_folding_cond		8197778	0					
ANR	8201518	Identifier	do_constant_folding_cond		8197778	0					
ANR	8201519	ArgumentList	INDEX_op_setcond_i32		8197778	1					
ANR	8201520	Argument	INDEX_op_setcond_i32		8197778	0					
ANR	8201521	Identifier	INDEX_op_setcond_i32		8197778	0					
ANR	8201522	Argument	args [ 2 ]		8197778	1					
ANR	8201523	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8201524	Identifier	args		8197778	0					
ANR	8201525	PrimaryExpression	2		8197778	1					
ANR	8201526	Argument	args [ 4 ]		8197778	2					
ANR	8201527	ArrayIndexing	args [ 4 ]		8197778	0					
ANR	8201528	Identifier	args		8197778	0					
ANR	8201529	PrimaryExpression	4		8197778	1					
ANR	8201530	Argument	TCG_COND_EQ		8197778	3					
ANR	8201531	Identifier	TCG_COND_EQ		8197778	0					
ANR	8201532	IfStatement	if ( tmp == 0 )		8197778	3					
ANR	8201533	Condition	tmp == 0	1375:20:24871:24878	8197778	0	True				
ANR	8201534	EqualityExpression	tmp == 0		8197778	0		==			
ANR	8201535	Identifier	tmp		8197778	0					
ANR	8201536	PrimaryExpression	0		8197778	1					
ANR	8201537	CompoundStatement		1373:30:24831:24831	8197778	1					
ANR	8201538	GotoStatement	goto do_setcond_high ;	1377:20:24904:24924	8197778	0	True				
ANR	8201539	Identifier	do_setcond_high		8197778	0					
ANR	8201540	ElseStatement	else		8197778	0					
ANR	8201541	IfStatement	if ( tmp != 1 )		8197778	0					
ANR	8201542	Condition	tmp != 1	1379:27:24954:24961	8197778	0	True				
ANR	8201543	EqualityExpression	tmp != 1		8197778	0		!=			
ANR	8201544	Identifier	tmp		8197778	0					
ANR	8201545	PrimaryExpression	1		8197778	1					
ANR	8201546	CompoundStatement		1377:37:24914:24914	8197778	1					
ANR	8201547	GotoStatement	goto do_default ;	1381:20:24987:25002	8197778	0	True				
ANR	8201548	Identifier	do_default		8197778	0					
ANR	8201549	Label	do_setcond_low :	1385:12:25036:25050	8197778	4	True				
ANR	8201550	Identifier	do_setcond_low		8197778	0					
ANR	8201551	ExpressionStatement	reset_temp ( args [ 0 ] )	1387:16:25069:25088	8197778	5	True				
ANR	8201552	CallExpression	reset_temp ( args [ 0 ] )		8197778	0					
ANR	8201553	Callee	reset_temp		8197778	0					
ANR	8201554	Identifier	reset_temp		8197778	0					
ANR	8201555	ArgumentList	args [ 0 ]		8197778	1					
ANR	8201556	Argument	args [ 0 ]		8197778	0					
ANR	8201557	ArrayIndexing	args [ 0 ]		8197778	0					
ANR	8201558	Identifier	args		8197778	0					
ANR	8201559	PrimaryExpression	0		8197778	1					
ANR	8201560	ExpressionStatement	temps [ args [ 0 ] ] . mask = 1	1389:16:25107:25130	8197778	6	True				
ANR	8201561	AssignmentExpression	temps [ args [ 0 ] ] . mask = 1		8197778	0		=			
ANR	8201562	MemberAccess	temps [ args [ 0 ] ] . mask		8197778	0					
ANR	8201563	ArrayIndexing	temps [ args [ 0 ] ]		8197778	0					
ANR	8201564	Identifier	temps		8197778	0					
ANR	8201565	ArrayIndexing	args [ 0 ]		8197778	1					
ANR	8201566	Identifier	args		8197778	0					
ANR	8201567	PrimaryExpression	0		8197778	1					
ANR	8201568	Identifier	mask		8197778	1					
ANR	8201569	PrimaryExpression	1		8197778	1					
ANR	8201570	ExpressionStatement	op -> opc = INDEX_op_setcond_i32	1391:16:25149:25179	8197778	7	True				
ANR	8201571	AssignmentExpression	op -> opc = INDEX_op_setcond_i32		8197778	0		=			
ANR	8201572	PtrMemberAccess	op -> opc		8197778	0					
ANR	8201573	Identifier	op		8197778	0					
ANR	8201574	Identifier	opc		8197778	1					
ANR	8201575	Identifier	INDEX_op_setcond_i32		8197778	1					
ANR	8201576	ExpressionStatement	args [ 2 ] = args [ 3 ]	1393:16:25198:25215	8197778	8	True				
ANR	8201577	AssignmentExpression	args [ 2 ] = args [ 3 ]		8197778	0		=			
ANR	8201578	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8201579	Identifier	args		8197778	0					
ANR	8201580	PrimaryExpression	2		8197778	1					
ANR	8201581	ArrayIndexing	args [ 3 ]		8197778	1					
ANR	8201582	Identifier	args		8197778	0					
ANR	8201583	PrimaryExpression	3		8197778	1					
ANR	8201584	ExpressionStatement	args [ 3 ] = args [ 5 ]	1395:16:25234:25251	8197778	9	True				
ANR	8201585	AssignmentExpression	args [ 3 ] = args [ 5 ]		8197778	0		=			
ANR	8201586	ArrayIndexing	args [ 3 ]		8197778	0					
ANR	8201587	Identifier	args		8197778	0					
ANR	8201588	PrimaryExpression	3		8197778	1					
ANR	8201589	ArrayIndexing	args [ 5 ]		8197778	1					
ANR	8201590	Identifier	args		8197778	0					
ANR	8201591	PrimaryExpression	5		8197778	1					
ANR	8201592	ElseStatement	else		8197778	0					
ANR	8201593	IfStatement	if ( args [ 5 ] == TCG_COND_NE )		8197778	0					
ANR	8201594	Condition	args [ 5 ] == TCG_COND_NE	1397:23:25277:25298	8197778	0	True				
ANR	8201595	EqualityExpression	args [ 5 ] == TCG_COND_NE		8197778	0		==			
ANR	8201596	ArrayIndexing	args [ 5 ]		8197778	0					
ANR	8201597	Identifier	args		8197778	0					
ANR	8201598	PrimaryExpression	5		8197778	1					
ANR	8201599	Identifier	TCG_COND_NE		8197778	1					
ANR	8201600	CompoundStatement		1395:47:25251:25251	8197778	1					
ANR	8201601	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_NE )"	1403:16:25430:25561	8197778	0	True				
ANR	8201602	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_NE )"		8197778	0		=			
ANR	8201603	Identifier	tmp		8197778	0					
ANR	8201604	CallExpression	"do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 1 ] , args [ 3 ] , TCG_COND_NE )"		8197778	1					
ANR	8201605	Callee	do_constant_folding_cond		8197778	0					
ANR	8201606	Identifier	do_constant_folding_cond		8197778	0					
ANR	8201607	ArgumentList	INDEX_op_setcond_i32		8197778	1					
ANR	8201608	Argument	INDEX_op_setcond_i32		8197778	0					
ANR	8201609	Identifier	INDEX_op_setcond_i32		8197778	0					
ANR	8201610	Argument	args [ 1 ]		8197778	1					
ANR	8201611	ArrayIndexing	args [ 1 ]		8197778	0					
ANR	8201612	Identifier	args		8197778	0					
ANR	8201613	PrimaryExpression	1		8197778	1					
ANR	8201614	Argument	args [ 3 ]		8197778	2					
ANR	8201615	ArrayIndexing	args [ 3 ]		8197778	0					
ANR	8201616	Identifier	args		8197778	0					
ANR	8201617	PrimaryExpression	3		8197778	1					
ANR	8201618	Argument	TCG_COND_NE		8197778	3					
ANR	8201619	Identifier	TCG_COND_NE		8197778	0					
ANR	8201620	IfStatement	if ( tmp == 0 )		8197778	1					
ANR	8201621	Condition	tmp == 0	1407:20:25584:25591	8197778	0	True				
ANR	8201622	EqualityExpression	tmp == 0		8197778	0		==			
ANR	8201623	Identifier	tmp		8197778	0					
ANR	8201624	PrimaryExpression	0		8197778	1					
ANR	8201625	CompoundStatement		1405:30:25544:25544	8197778	1					
ANR	8201626	GotoStatement	goto do_setcond_high ;	1409:20:25617:25637	8197778	0	True				
ANR	8201627	Identifier	do_setcond_high		8197778	0					
ANR	8201628	ElseStatement	else		8197778	0					
ANR	8201629	IfStatement	if ( tmp == 1 )		8197778	0					
ANR	8201630	Condition	tmp == 1	1411:27:25667:25674	8197778	0	True				
ANR	8201631	EqualityExpression	tmp == 1		8197778	0		==			
ANR	8201632	Identifier	tmp		8197778	0					
ANR	8201633	PrimaryExpression	1		8197778	1					
ANR	8201634	CompoundStatement		1409:37:25627:25627	8197778	1					
ANR	8201635	GotoStatement	goto do_setcond_const ;	1413:20:25700:25721	8197778	0	True				
ANR	8201636	Identifier	do_setcond_const		8197778	0					
ANR	8201637	ExpressionStatement	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 2 ] , args [ 4 ] , TCG_COND_NE )"	1417:16:25759:25890	8197778	2	True				
ANR	8201638	AssignmentExpression	"tmp = do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 2 ] , args [ 4 ] , TCG_COND_NE )"		8197778	0		=			
ANR	8201639	Identifier	tmp		8197778	0					
ANR	8201640	CallExpression	"do_constant_folding_cond ( INDEX_op_setcond_i32 , args [ 2 ] , args [ 4 ] , TCG_COND_NE )"		8197778	1					
ANR	8201641	Callee	do_constant_folding_cond		8197778	0					
ANR	8201642	Identifier	do_constant_folding_cond		8197778	0					
ANR	8201643	ArgumentList	INDEX_op_setcond_i32		8197778	1					
ANR	8201644	Argument	INDEX_op_setcond_i32		8197778	0					
ANR	8201645	Identifier	INDEX_op_setcond_i32		8197778	0					
ANR	8201646	Argument	args [ 2 ]		8197778	1					
ANR	8201647	ArrayIndexing	args [ 2 ]		8197778	0					
ANR	8201648	Identifier	args		8197778	0					
ANR	8201649	PrimaryExpression	2		8197778	1					
ANR	8201650	Argument	args [ 4 ]		8197778	2					
ANR	8201651	ArrayIndexing	args [ 4 ]		8197778	0					
ANR	8201652	Identifier	args		8197778	0					
ANR	8201653	PrimaryExpression	4		8197778	1					
ANR	8201654	Argument	TCG_COND_NE		8197778	3					
ANR	8201655	Identifier	TCG_COND_NE		8197778	0					
ANR	8201656	IfStatement	if ( tmp == 0 )		8197778	3					
ANR	8201657	Condition	tmp == 0	1421:20:25913:25920	8197778	0	True				
ANR	8201658	EqualityExpression	tmp == 0		8197778	0		==			
ANR	8201659	Identifier	tmp		8197778	0					
ANR	8201660	PrimaryExpression	0		8197778	1					
ANR	8201661	CompoundStatement		1419:30:25873:25873	8197778	1					
ANR	8201662	GotoStatement	goto do_setcond_low ;	1423:20:25946:25965	8197778	0	True				
ANR	8201663	Identifier	do_setcond_low		8197778	0					
ANR	8201664	ElseStatement	else		8197778	0					
ANR	8201665	IfStatement	if ( tmp == 1 )		8197778	0					
ANR	8201666	Condition	tmp == 1	1425:27:25995:26002	8197778	0	True				
ANR	8201667	EqualityExpression	tmp == 1		8197778	0		==			
ANR	8201668	Identifier	tmp		8197778	0					
ANR	8201669	PrimaryExpression	1		8197778	1					
ANR	8201670	CompoundStatement		1423:37:25955:25955	8197778	1					
ANR	8201671	GotoStatement	goto do_setcond_const ;	1427:20:26028:26049	8197778	0	True				
ANR	8201672	Identifier	do_setcond_const		8197778	0					
ANR	8201673	GotoStatement	goto do_default ;	1431:16:26087:26102	8197778	4	True				
ANR	8201674	Identifier	do_default		8197778	0					
ANR	8201675	ElseStatement	else		8197778	0					
ANR	8201676	CompoundStatement		1431:19:26074:26074	8197778	0					
ANR	8201677	GotoStatement	goto do_default ;	1435:16:26143:26158	8197778	0	True				
ANR	8201678	Identifier	do_default		8197778	0					
ANR	8201679	BreakStatement	break ;	1439:12:26188:26193	8197778	208	True				
ANR	8201680	Label	case INDEX_op_call :	1443:8:26206:26224	8197778	209	True				
ANR	8201681	Identifier	INDEX_op_call		8197778	0					
ANR	8201682	IfStatement	if ( ! ( args [ nb_oargs + nb_iargs + 1 ] & ( TCG_CALL_NO_READ_GLOBALS | TCG_CALL_NO_WRITE_GLOBALS ) ) )		8197778	210					
ANR	8201683	Condition	! ( args [ nb_oargs + nb_iargs + 1 ] & ( TCG_CALL_NO_READ_GLOBALS | TCG_CALL_NO_WRITE_GLOBALS ) )	1445:16:26243:26350	8197778	0	True				
ANR	8201684	UnaryOperationExpression	! ( args [ nb_oargs + nb_iargs + 1 ] & ( TCG_CALL_NO_READ_GLOBALS | TCG_CALL_NO_WRITE_GLOBALS ) )		8197778	0					
ANR	8201685	UnaryOperator	!		8197778	0					
ANR	8201686	BitAndExpression	args [ nb_oargs + nb_iargs + 1 ] & ( TCG_CALL_NO_READ_GLOBALS | TCG_CALL_NO_WRITE_GLOBALS )		8197778	1		&			
ANR	8201687	ArrayIndexing	args [ nb_oargs + nb_iargs + 1 ]		8197778	0					
ANR	8201688	Identifier	args		8197778	0					
ANR	8201689	AdditiveExpression	nb_oargs + nb_iargs + 1		8197778	1		+			
ANR	8201690	Identifier	nb_oargs		8197778	0					
ANR	8201691	AdditiveExpression	nb_iargs + 1		8197778	1		+			
ANR	8201692	Identifier	nb_iargs		8197778	0					
ANR	8201693	PrimaryExpression	1		8197778	1					
ANR	8201694	InclusiveOrExpression	TCG_CALL_NO_READ_GLOBALS | TCG_CALL_NO_WRITE_GLOBALS		8197778	1		|			
ANR	8201695	Identifier	TCG_CALL_NO_READ_GLOBALS		8197778	0					
ANR	8201696	Identifier	TCG_CALL_NO_WRITE_GLOBALS		8197778	1					
ANR	8201697	CompoundStatement		1445:77:26303:26303	8197778	1					
ANR	8201698	ForStatement	for ( i = 0 ; i < nb_globals ; i ++ )		8197778	0					
ANR	8201699	ForInit	i = 0 ;	1449:21:26377:26382	8197778	0	True				
ANR	8201700	AssignmentExpression	i = 0		8197778	0		=			
ANR	8201701	Identifier	i		8197778	0					
ANR	8201702	PrimaryExpression	0		8197778	1					
ANR	8201703	Condition	i < nb_globals	1449:28:26384:26397	8197778	1	True				
ANR	8201704	RelationalExpression	i < nb_globals		8197778	0		<			
ANR	8201705	Identifier	i		8197778	0					
ANR	8201706	Identifier	nb_globals		8197778	1					
ANR	8201707	PostIncDecOperationExpression	i ++	1449:44:26400:26402	8197778	2	True				
ANR	8201708	Identifier	i		8197778	0					
ANR	8201709	IncDec	++		8197778	1					
ANR	8201710	CompoundStatement		1447:49:26355:26355	8197778	3					
ANR	8201711	ExpressionStatement	reset_temp ( i )	1451:20:26428:26441	8197778	0	True				
ANR	8201712	CallExpression	reset_temp ( i )		8197778	0					
ANR	8201713	Callee	reset_temp		8197778	0					
ANR	8201714	Identifier	reset_temp		8197778	0					
ANR	8201715	ArgumentList	i		8197778	1					
ANR	8201716	Argument	i		8197778	0					
ANR	8201717	Identifier	i		8197778	0					
ANR	8201718	GotoStatement	goto do_reset_output ;	1457:12:26490:26510	8197778	211	True				
ANR	8201719	Identifier	do_reset_output		8197778	0					
ANR	8201720	Label	default :	1461:8:26523:26530	8197778	212	True				
ANR	8201721	Identifier	default		8197778	0					
ANR	8201722	Label	do_default :	1463:8:26541:26551	8197778	213	True				
ANR	8201723	Identifier	do_default		8197778	0					
ANR	8201724	IfStatement	if ( def -> flags & TCG_OPF_BB_END )		8197778	214					
ANR	8201725	Condition	def -> flags & TCG_OPF_BB_END	1475:16:26943:26969	8197778	0	True				
ANR	8201726	BitAndExpression	def -> flags & TCG_OPF_BB_END		8197778	0		&			
ANR	8201727	PtrMemberAccess	def -> flags		8197778	0					
ANR	8201728	Identifier	def		8197778	0					
ANR	8201729	Identifier	flags		8197778	1					
ANR	8201730	Identifier	TCG_OPF_BB_END		8197778	1					
ANR	8201731	CompoundStatement		1473:45:26922:26922	8197778	1					
ANR	8201732	ExpressionStatement	reset_all_temps ( nb_temps )	1477:16:26991:27016	8197778	0	True				
ANR	8201733	CallExpression	reset_all_temps ( nb_temps )		8197778	0					
ANR	8201734	Callee	reset_all_temps		8197778	0					
ANR	8201735	Identifier	reset_all_temps		8197778	0					
ANR	8201736	ArgumentList	nb_temps		8197778	1					
ANR	8201737	Argument	nb_temps		8197778	0					
ANR	8201738	Identifier	nb_temps		8197778	0					
ANR	8201739	ElseStatement	else		8197778	0					
ANR	8201740	CompoundStatement		1477:19:26988:26988	8197778	0					
ANR	8201741	Label	do_reset_output :	1481:8:27049:27064	8197778	0	True				
ANR	8201742	Identifier	do_reset_output		8197778	0					
ANR	8201743	ForStatement	for ( i = 0 ; i < nb_oargs ; i ++ )		8197778	1					
ANR	8201744	ForInit	i = 0 ;	1483:21:27088:27093	8197778	0	True				
ANR	8201745	AssignmentExpression	i = 0		8197778	0		=			
ANR	8201746	Identifier	i		8197778	0					
ANR	8201747	PrimaryExpression	0		8197778	1					
ANR	8201748	Condition	i < nb_oargs	1483:28:27095:27106	8197778	1	True				
ANR	8201749	RelationalExpression	i < nb_oargs		8197778	0		<			
ANR	8201750	Identifier	i		8197778	0					
ANR	8201751	Identifier	nb_oargs		8197778	1					
ANR	8201752	PostIncDecOperationExpression	i ++	1483:42:27109:27111	8197778	2	True				
ANR	8201753	Identifier	i		8197778	0					
ANR	8201754	IncDec	++		8197778	1					
ANR	8201755	CompoundStatement		1481:47:27064:27064	8197778	3					
ANR	8201756	ExpressionStatement	reset_temp ( args [ i ] )	1485:20:27137:27156	8197778	0	True				
ANR	8201757	CallExpression	reset_temp ( args [ i ] )		8197778	0					
ANR	8201758	Callee	reset_temp		8197778	0					
ANR	8201759	Identifier	reset_temp		8197778	0					
ANR	8201760	ArgumentList	args [ i ]		8197778	1					
ANR	8201761	Argument	args [ i ]		8197778	0					
ANR	8201762	ArrayIndexing	args [ i ]		8197778	0					
ANR	8201763	Identifier	args		8197778	0					
ANR	8201764	Identifier	i		8197778	1					
ANR	8201765	IfStatement	if ( i == 0 )		8197778	1					
ANR	8201766	Condition	i == 0	1491:24:27337:27342	8197778	0	True				
ANR	8201767	EqualityExpression	i == 0		8197778	0		==			
ANR	8201768	Identifier	i		8197778	0					
ANR	8201769	PrimaryExpression	0		8197778	1					
ANR	8201770	CompoundStatement		1489:32:27295:27295	8197778	1					
ANR	8201771	ExpressionStatement	temps [ args [ i ] ] . mask = mask	1493:24:27372:27398	8197778	0	True				
ANR	8201772	AssignmentExpression	temps [ args [ i ] ] . mask = mask		8197778	0		=			
ANR	8201773	MemberAccess	temps [ args [ i ] ] . mask		8197778	0					
ANR	8201774	ArrayIndexing	temps [ args [ i ] ]		8197778	0					
ANR	8201775	Identifier	temps		8197778	0					
ANR	8201776	ArrayIndexing	args [ i ]		8197778	1					
ANR	8201777	Identifier	args		8197778	0					
ANR	8201778	Identifier	i		8197778	1					
ANR	8201779	Identifier	mask		8197778	1					
ANR	8201780	Identifier	mask		8197778	1					
ANR	8201781	BreakStatement	break ;	1501:12:27470:27475	8197778	215	True				
ANR	8201782	ReturnType	static void		8197778	1					
ANR	8201783	Identifier	tcg_constant_folding		8197778	2					
ANR	8201784	ParameterList	TCGContext * s		8197778	3					
ANR	8201785	Parameter	TCGContext * s	1:33:33:45	8197778	0	True				
ANR	8201786	ParameterType	TCGContext *		8197778	0					
ANR	8201787	Identifier	s		8197778	1					
ANR	8201788	CFGEntryNode	ENTRY		8197778		True				
ANR	8201789	CFGExitNode	EXIT		8197778		True				
ANR	8201790	Symbol	def -> nb_oargs		8197778						
ANR	8201791	Symbol	find_better_copy		8197778						
ANR	8201792	Symbol	temps [ args [ 1 ] ] . mask		8197778						
ANR	8201793	Symbol	def		8197778						
ANR	8201794	Symbol	TCG_TARGET_HAS_not_i64		8197778						
ANR	8201795	Symbol	TCG_TARGET_HAS_neg_i64		8197778						
ANR	8201796	Symbol	mop		8197778						
ANR	8201797	Symbol	INDEX_op_not_i64		8197778						
ANR	8201798	Symbol	INDEX_op_neg_i64		8197778						
ANR	8201799	Symbol	temps [ args [ 3 ] ] . val		8197778						
ANR	8201800	Symbol	tmp		8197778						
ANR	8201801	Symbol	INDEX_op_call		8197778						
ANR	8201802	Symbol	s -> nb_temps		8197778						
ANR	8201803	Symbol	* op2		8197778						
ANR	8201804	Symbol	temps [ args [ 4 ] ] . mask		8197778						
ANR	8201805	Symbol	def -> flags		8197778						
ANR	8201806	Symbol	* nb_iargs		8197778						
ANR	8201807	Symbol	tcg_swap_cond		8197778						
ANR	8201808	Symbol	s -> gen_opparam_buf		8197778						
ANR	8201809	Symbol	TCG_COND_NE		8197778						
ANR	8201810	Symbol	do_constant_folding_cond2		8197778						
ANR	8201811	Symbol	swap_commutative2		8197778						
ANR	8201812	Symbol	ah		8197778						
ANR	8201813	Symbol	al		8197778						
ANR	8201814	Symbol	TCG_COND_EQ		8197778						
ANR	8201815	Symbol	nb_globals		8197778						
ANR	8201816	Symbol	temps [ args [ 2 ] ] . val		8197778						
ANR	8201817	Symbol	INDEX_op_movi_i32		8197778						
ANR	8201818	Symbol	rh		8197778						
ANR	8201819	Symbol	tcg_op_defs		8197778						
ANR	8201820	Symbol	rl		8197778						
ANR	8201821	Symbol	op2 -> args		8197778						
ANR	8201822	Symbol	temps [ args [ 3 ] ] . state		8197778						
ANR	8201823	Symbol	* tmp		8197778						
ANR	8201824	Symbol	nb_temps		8197778						
ANR	8201825	Symbol	temps [ args [ 4 ] ] . state		8197778						
ANR	8201826	Symbol	bh		8197778						
ANR	8201827	Symbol	~mask		8197778						
ANR	8201828	Symbol	MO_SIGN		8197778						
ANR	8201829	Symbol	bl		8197778						
ANR	8201830	Symbol	temps [ args [ 1 ] ] . state		8197778						
ANR	8201831	Symbol	temps [ args [ 5 ] ] . val		8197778						
ANR	8201832	Symbol	temps [ args [ 2 ] ] . state		8197778						
ANR	8201833	Symbol	* def		8197778						
ANR	8201834	Symbol	temps [ args [ 0 ] ] . mask		8197778						
ANR	8201835	Symbol	* nb_oargs		8197778						
ANR	8201836	Symbol	oi_next		8197778						
ANR	8201837	Symbol	TCG_TEMP_COPY		8197778						
ANR	8201838	Symbol	* temps		8197778						
ANR	8201839	Symbol	* ~temps		8197778						
ANR	8201840	Symbol	op2 -> next		8197778						
ANR	8201841	Symbol	temps [ args [ 5 ] ] . state		8197778						
ANR	8201842	Symbol	s -> gen_first_op_idx		8197778						
ANR	8201843	Symbol	a		8197778						
ANR	8201844	Symbol	b		8197778						
ANR	8201845	Symbol	temps [ args [ 3 ] ] . mask		8197778						
ANR	8201846	Symbol	i		8197778						
ANR	8201847	Symbol	op -> callo		8197778						
ANR	8201848	Symbol	temps [ args [ i ] ] . state		8197778						
ANR	8201849	Symbol	def -> nb_iargs		8197778						
ANR	8201850	Symbol	tcg_invert_cond		8197778						
ANR	8201851	Symbol	op2		8197778						
ANR	8201852	Symbol	r		8197778						
ANR	8201853	Symbol	s		8197778						
ANR	8201854	Symbol	TCG_COND_LT		8197778						
ANR	8201855	Symbol	TCG_TARGET_HAS_not_i32		8197778						
ANR	8201856	Symbol	args2		8197778						
ANR	8201857	Symbol	temps [ args [ 2 ] ] . mask		8197778						
ANR	8201858	Symbol	partmask		8197778						
ANR	8201859	Symbol	* op		8197778						
ANR	8201860	Symbol	neg_op		8197778						
ANR	8201861	Symbol	INDEX_op_setcond_i32		8197778						
ANR	8201862	Symbol	temps		8197778						
ANR	8201863	Symbol	nb_iargs		8197778						
ANR	8201864	Symbol	op -> args		8197778						
ANR	8201865	Symbol	* args		8197778						
ANR	8201866	Symbol	insert_op_before		8197778						
ANR	8201867	Symbol	op -> calli		8197778						
ANR	8201868	Symbol	* * args		8197778						
ANR	8201869	Symbol	swap_commutative		8197778						
ANR	8201870	Symbol	~temps [ args [ 2 ] ] . mask		8197778						
ANR	8201871	Symbol	* * i		8197778						
ANR	8201872	Symbol	TCG_TEMP_CONST		8197778						
ANR	8201873	Symbol	opc		8197778						
ANR	8201874	Symbol	INDEX_op_br		8197778						
ANR	8201875	Symbol	TCG_OPF_64BIT		8197778						
ANR	8201876	Symbol	s -> gen_op_buf		8197778						
ANR	8201877	Symbol	TCG_OPF_BB_END		8197778						
ANR	8201878	Symbol	affected		8197778						
ANR	8201879	Symbol	INDEX_op_not_i32		8197778						
ANR	8201880	Symbol	have_not		8197778						
ANR	8201881	Symbol	get_memop		8197778						
ANR	8201882	Symbol	INDEX_op_neg_i32		8197778						
ANR	8201883	Symbol	do_constant_folding		8197778						
ANR	8201884	Symbol	INDEX_op_sub_i32		8197778						
ANR	8201885	Symbol	not_op		8197778						
ANR	8201886	Symbol	nb_oargs		8197778						
ANR	8201887	Symbol	temps_are_copies		8197778						
ANR	8201888	Symbol	oi		8197778						
ANR	8201889	Symbol	TCG_CALL_NO_READ_GLOBALS		8197778						
ANR	8201890	Symbol	temps [ args [ 1 ] ] . val		8197778						
ANR	8201891	Symbol	TCG_COND_GE		8197778						
ANR	8201892	Symbol	mask		8197778						
ANR	8201893	Symbol	INDEX_op_add2_i32		8197778						
ANR	8201894	Symbol	op		8197778						
ANR	8201895	Symbol	TCG_CALL_NO_WRITE_GLOBALS		8197778						
ANR	8201896	Symbol	deposit64		8197778						
ANR	8201897	Symbol	temps [ args [ 4 ] ] . val		8197778						
ANR	8201898	Symbol	op -> opc		8197778						
ANR	8201899	Symbol	temps [ args [ i ] ] . mask		8197778						
ANR	8201900	Symbol	op -> next		8197778						
ANR	8201901	Symbol	TCG_TARGET_REG_BITS		8197778						
ANR	8201902	Symbol	TCG_TARGET_HAS_neg_i32		8197778						
ANR	8201903	Symbol	args		8197778						
ANR	8201904	Symbol	s -> nb_globals		8197778						
ANR	8201905	Symbol	* i		8197778						
ANR	8201906	Symbol	~temps		8197778						
ANR	8201907	Symbol	have_neg		8197778						
ANR	8201908	Symbol	do_constant_folding_cond		8197778						
ANR	8201909	Symbol	INDEX_op_brcond_i32		8197778						
ANR	8201910	Symbol	* s		8197778						
