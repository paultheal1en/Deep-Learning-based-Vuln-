command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5514088	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mjpeg_decode_scan_progressive_ac_1.c								
ANR	5514089	Function	mjpeg_decode_scan_progressive_ac	1:0:0:2386							
ANR	5514090	FunctionDef	"mjpeg_decode_scan_progressive_ac (MJpegDecodeContext * s , int ss , int se , int Ah , int Al)"		5514089	0					
ANR	5514091	CompoundStatement		5:0:145:2386	5514089	0					
ANR	5514092	IdentifierDeclStatement	"int mb_x , mb_y ;"	7:4:152:166	5514089	0	True				
ANR	5514093	IdentifierDecl	mb_x		5514089	0					
ANR	5514094	IdentifierDeclType	int		5514089	0					
ANR	5514095	Identifier	mb_x		5514089	1					
ANR	5514096	IdentifierDecl	mb_y		5514089	1					
ANR	5514097	IdentifierDeclType	int		5514089	0					
ANR	5514098	Identifier	mb_y		5514089	1					
ANR	5514099	IdentifierDeclStatement	int EOBRUN = 0 ;	9:4:173:187	5514089	1	True				
ANR	5514100	IdentifierDecl	EOBRUN = 0		5514089	0					
ANR	5514101	IdentifierDeclType	int		5514089	0					
ANR	5514102	Identifier	EOBRUN		5514089	1					
ANR	5514103	AssignmentExpression	EOBRUN = 0		5514089	2		=			
ANR	5514104	Identifier	EOBRUN		5514089	0					
ANR	5514105	PrimaryExpression	0		5514089	1					
ANR	5514106	IdentifierDeclStatement	int c = s -> comp_index [ 0 ] ;	11:4:194:218	5514089	2	True				
ANR	5514107	IdentifierDecl	c = s -> comp_index [ 0 ]		5514089	0					
ANR	5514108	IdentifierDeclType	int		5514089	0					
ANR	5514109	Identifier	c		5514089	1					
ANR	5514110	AssignmentExpression	c = s -> comp_index [ 0 ]		5514089	2		=			
ANR	5514111	Identifier	c		5514089	0					
ANR	5514112	ArrayIndexing	s -> comp_index [ 0 ]		5514089	1					
ANR	5514113	PtrMemberAccess	s -> comp_index		5514089	0					
ANR	5514114	Identifier	s		5514089	0					
ANR	5514115	Identifier	comp_index		5514089	1					
ANR	5514116	PrimaryExpression	0		5514089	1					
ANR	5514117	IdentifierDeclStatement	uint8_t * data = s -> picture_ptr -> data [ c ] ;	13:4:225:264	5514089	3	True				
ANR	5514118	IdentifierDecl	* data = s -> picture_ptr -> data [ c ]		5514089	0					
ANR	5514119	IdentifierDeclType	uint8_t *		5514089	0					
ANR	5514120	Identifier	data		5514089	1					
ANR	5514121	AssignmentExpression	* data = s -> picture_ptr -> data [ c ]		5514089	2		=			
ANR	5514122	Identifier	data		5514089	0					
ANR	5514123	ArrayIndexing	s -> picture_ptr -> data [ c ]		5514089	1					
ANR	5514124	PtrMemberAccess	s -> picture_ptr -> data		5514089	0					
ANR	5514125	PtrMemberAccess	s -> picture_ptr		5514089	0					
ANR	5514126	Identifier	s		5514089	0					
ANR	5514127	Identifier	picture_ptr		5514089	1					
ANR	5514128	Identifier	data		5514089	1					
ANR	5514129	Identifier	c		5514089	1					
ANR	5514130	IdentifierDeclStatement	int linesize = s -> linesize [ c ] ;	15:4:271:301	5514089	4	True				
ANR	5514131	IdentifierDecl	linesize = s -> linesize [ c ]		5514089	0					
ANR	5514132	IdentifierDeclType	int		5514089	0					
ANR	5514133	Identifier	linesize		5514089	1					
ANR	5514134	AssignmentExpression	linesize = s -> linesize [ c ]		5514089	2		=			
ANR	5514135	Identifier	linesize		5514089	0					
ANR	5514136	ArrayIndexing	s -> linesize [ c ]		5514089	1					
ANR	5514137	PtrMemberAccess	s -> linesize		5514089	0					
ANR	5514138	Identifier	s		5514089	0					
ANR	5514139	Identifier	linesize		5514089	1					
ANR	5514140	Identifier	c		5514089	1					
ANR	5514141	IdentifierDeclStatement	int last_scan = 0 ;	17:4:308:325	5514089	5	True				
ANR	5514142	IdentifierDecl	last_scan = 0		5514089	0					
ANR	5514143	IdentifierDeclType	int		5514089	0					
ANR	5514144	Identifier	last_scan		5514089	1					
ANR	5514145	AssignmentExpression	last_scan = 0		5514089	2		=			
ANR	5514146	Identifier	last_scan		5514089	0					
ANR	5514147	PrimaryExpression	0		5514089	1					
ANR	5514148	IdentifierDeclStatement	int16_t * quant_matrix = s -> quant_matrixes [ s -> quant_sindex [ 0 ] ] ;	19:4:332:393	5514089	6	True				
ANR	5514149	IdentifierDecl	* quant_matrix = s -> quant_matrixes [ s -> quant_sindex [ 0 ] ]		5514089	0					
ANR	5514150	IdentifierDeclType	int16_t *		5514089	0					
ANR	5514151	Identifier	quant_matrix		5514089	1					
ANR	5514152	AssignmentExpression	* quant_matrix = s -> quant_matrixes [ s -> quant_sindex [ 0 ] ]		5514089	2		=			
ANR	5514153	Identifier	quant_matrix		5514089	0					
ANR	5514154	ArrayIndexing	s -> quant_matrixes [ s -> quant_sindex [ 0 ] ]		5514089	1					
ANR	5514155	PtrMemberAccess	s -> quant_matrixes		5514089	0					
ANR	5514156	Identifier	s		5514089	0					
ANR	5514157	Identifier	quant_matrixes		5514089	1					
ANR	5514158	ArrayIndexing	s -> quant_sindex [ 0 ]		5514089	1					
ANR	5514159	PtrMemberAccess	s -> quant_sindex		5514089	0					
ANR	5514160	Identifier	s		5514089	0					
ANR	5514161	Identifier	quant_sindex		5514089	1					
ANR	5514162	PrimaryExpression	0		5514089	1					
ANR	5514163	IdentifierDeclStatement	int bytes_per_pixel = 1 + ( s -> bits > 8 ) ;	21:4:400:439	5514089	7	True				
ANR	5514164	IdentifierDecl	bytes_per_pixel = 1 + ( s -> bits > 8 )		5514089	0					
ANR	5514165	IdentifierDeclType	int		5514089	0					
ANR	5514166	Identifier	bytes_per_pixel		5514089	1					
ANR	5514167	AssignmentExpression	bytes_per_pixel = 1 + ( s -> bits > 8 )		5514089	2		=			
ANR	5514168	Identifier	bytes_per_pixel		5514089	0					
ANR	5514169	AdditiveExpression	1 + ( s -> bits > 8 )		5514089	1		+			
ANR	5514170	PrimaryExpression	1		5514089	0					
ANR	5514171	RelationalExpression	s -> bits > 8		5514089	1		>			
ANR	5514172	PtrMemberAccess	s -> bits		5514089	0					
ANR	5514173	Identifier	s		5514089	0					
ANR	5514174	Identifier	bits		5514089	1					
ANR	5514175	PrimaryExpression	8		5514089	1					
ANR	5514176	ExpressionStatement	av_assert0 ( ss >= 0 && Ah >= 0 && Al >= 0 )	25:4:448:483	5514089	8	True				
ANR	5514177	CallExpression	av_assert0 ( ss >= 0 && Ah >= 0 && Al >= 0 )		5514089	0					
ANR	5514178	Callee	av_assert0		5514089	0					
ANR	5514179	Identifier	av_assert0		5514089	0					
ANR	5514180	ArgumentList	ss >= 0 && Ah >= 0 && Al >= 0		5514089	1					
ANR	5514181	Argument	ss >= 0 && Ah >= 0 && Al >= 0		5514089	0					
ANR	5514182	AndExpression	ss >= 0 && Ah >= 0 && Al >= 0		5514089	0		&&			
ANR	5514183	RelationalExpression	ss >= 0		5514089	0		>=			
ANR	5514184	Identifier	ss		5514089	0					
ANR	5514185	PrimaryExpression	0		5514089	1					
ANR	5514186	AndExpression	Ah >= 0 && Al >= 0		5514089	1		&&			
ANR	5514187	RelationalExpression	Ah >= 0		5514089	0		>=			
ANR	5514188	Identifier	Ah		5514089	0					
ANR	5514189	PrimaryExpression	0		5514089	1					
ANR	5514190	RelationalExpression	Al >= 0		5514089	1		>=			
ANR	5514191	Identifier	Al		5514089	0					
ANR	5514192	PrimaryExpression	0		5514089	1					
ANR	5514193	IfStatement	if ( se < ss || se > 63 )		5514089	9					
ANR	5514194	Condition	se < ss || se > 63	27:8:494:511	5514089	0	True				
ANR	5514195	OrExpression	se < ss || se > 63		5514089	0		||			
ANR	5514196	RelationalExpression	se < ss		5514089	0		<			
ANR	5514197	Identifier	se		5514089	0					
ANR	5514198	Identifier	ss		5514089	1					
ANR	5514199	RelationalExpression	se > 63		5514089	1		>			
ANR	5514200	Identifier	se		5514089	0					
ANR	5514201	PrimaryExpression	63		5514089	1					
ANR	5514202	CompoundStatement		23:28:368:368	5514089	1					
ANR	5514203	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""SS/SE %d/%d is invalid\\n"" , ss , se )"	29:8:525:591	5514089	0	True				
ANR	5514204	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""SS/SE %d/%d is invalid\\n"" , ss , se )"		5514089	0					
ANR	5514205	Callee	av_log		5514089	0					
ANR	5514206	Identifier	av_log		5514089	0					
ANR	5514207	ArgumentList	s -> avctx		5514089	1					
ANR	5514208	Argument	s -> avctx		5514089	0					
ANR	5514209	PtrMemberAccess	s -> avctx		5514089	0					
ANR	5514210	Identifier	s		5514089	0					
ANR	5514211	Identifier	avctx		5514089	1					
ANR	5514212	Argument	AV_LOG_ERROR		5514089	1					
ANR	5514213	Identifier	AV_LOG_ERROR		5514089	0					
ANR	5514214	Argument	"""SS/SE %d/%d is invalid\\n"""		5514089	2					
ANR	5514215	PrimaryExpression	"""SS/SE %d/%d is invalid\\n"""		5514089	0					
ANR	5514216	Argument	ss		5514089	3					
ANR	5514217	Identifier	ss		5514089	0					
ANR	5514218	Argument	se		5514089	4					
ANR	5514219	Identifier	se		5514089	0					
ANR	5514220	ReturnStatement	return AVERROR_INVALIDDATA ;	31:8:602:628	5514089	1	True				
ANR	5514221	Identifier	AVERROR_INVALIDDATA		5514089	0					
ANR	5514222	IfStatement	if ( ! Al )		5514089	10					
ANR	5514223	Condition	! Al	37:8:648:650	5514089	0	True				
ANR	5514224	UnaryOperationExpression	! Al		5514089	0					
ANR	5514225	UnaryOperator	!		5514089	0					
ANR	5514226	Identifier	Al		5514089	1					
ANR	5514227	CompoundStatement		33:13:507:507	5514089	1					
ANR	5514228	Statement	s	39:8:664:664	5514089	0	True				
ANR	5514229	Statement	->	39:9:665:666	5514089	1	True				
ANR	5514230	Statement	coefs_finished	39:11:667:680	5514089	2	True				
ANR	5514231	Statement	[	39:25:681:681	5514089	3	True				
ANR	5514232	Statement	c	39:26:682:682	5514089	4	True				
ANR	5514233	Statement	]	39:27:683:683	5514089	5	True				
ANR	5514234	Statement	|=	39:29:685:686	5514089	6	True				
ANR	5514235	Statement	(	39:32:688:688	5514089	7	True				
ANR	5514236	Statement	2L	39:33:689:690	5514089	8	True				
ANR	5514237	Statement	L	39:35:691:691	5514089	9	True				
ANR	5514238	Statement	<<	39:37:693:694	5514089	10	True				
ANR	5514239	Statement	se	39:40:696:697	5514089	11	True				
ANR	5514240	Statement	)	39:42:698:698	5514089	12	True				
ANR	5514241	Statement	-	39:44:700:700	5514089	13	True				
ANR	5514242	Statement	(	39:46:702:702	5514089	14	True				
ANR	5514243	Statement	1L	39:47:703:704	5514089	15	True				
ANR	5514244	Statement	L	39:49:705:705	5514089	16	True				
ANR	5514245	Statement	<<	39:51:707:708	5514089	17	True				
ANR	5514246	Statement	ss	39:54:710:711	5514089	18	True				
ANR	5514247	Statement	)	39:56:712:712	5514089	19	True				
ANR	5514248	ExpressionStatement		39:57:713:713	5514089	20	True				
ANR	5514249	ExpressionStatement	last_scan = ! ~s -> coefs_finished [ c ]	41:8:724:758	5514089	21	True				
ANR	5514250	AssignmentExpression	last_scan = ! ~s -> coefs_finished [ c ]		5514089	0		=			
ANR	5514251	Identifier	last_scan		5514089	0					
ANR	5514252	UnaryOperationExpression	! ~s -> coefs_finished [ c ]		5514089	1					
ANR	5514253	UnaryOperator	!		5514089	0					
ANR	5514254	ArrayIndexing	~s -> coefs_finished [ c ]		5514089	1					
ANR	5514255	PtrMemberAccess	~s -> coefs_finished		5514089	0					
ANR	5514256	Identifier	~s		5514089	0					
ANR	5514257	Identifier	coefs_finished		5514089	1					
ANR	5514258	Identifier	c		5514089	1					
ANR	5514259	IfStatement	if ( s -> interlaced && s -> bottom_field )		5514089	11					
ANR	5514260	Condition	s -> interlaced && s -> bottom_field	47:8:778:809	5514089	0	True				
ANR	5514261	AndExpression	s -> interlaced && s -> bottom_field		5514089	0		&&			
ANR	5514262	PtrMemberAccess	s -> interlaced		5514089	0					
ANR	5514263	Identifier	s		5514089	0					
ANR	5514264	Identifier	interlaced		5514089	1					
ANR	5514265	PtrMemberAccess	s -> bottom_field		5514089	1					
ANR	5514266	Identifier	s		5514089	0					
ANR	5514267	Identifier	bottom_field		5514089	1					
ANR	5514268	ExpressionStatement	data += linesize >> 1	49:8:821:842	5514089	1	True				
ANR	5514269	AssignmentExpression	data += linesize >> 1		5514089	0		+=			
ANR	5514270	Identifier	data		5514089	0					
ANR	5514271	ShiftExpression	linesize >> 1		5514089	1		>>			
ANR	5514272	Identifier	linesize		5514089	0					
ANR	5514273	PrimaryExpression	1		5514089	1					
ANR	5514274	ExpressionStatement	s -> restart_count = 0	53:4:851:871	5514089	12	True				
ANR	5514275	AssignmentExpression	s -> restart_count = 0		5514089	0		=			
ANR	5514276	PtrMemberAccess	s -> restart_count		5514089	0					
ANR	5514277	Identifier	s		5514089	0					
ANR	5514278	Identifier	restart_count		5514089	1					
ANR	5514279	PrimaryExpression	0		5514089	1					
ANR	5514280	ForStatement	for ( mb_y = 0 ; mb_y < s -> mb_height ; mb_y ++ )		5514089	13					
ANR	5514281	ForInit	mb_y = 0 ;	57:9:885:893	5514089	0	True				
ANR	5514282	AssignmentExpression	mb_y = 0		5514089	0		=			
ANR	5514283	Identifier	mb_y		5514089	0					
ANR	5514284	PrimaryExpression	0		5514089	1					
ANR	5514285	Condition	mb_y < s -> mb_height	57:19:895:913	5514089	1	True				
ANR	5514286	RelationalExpression	mb_y < s -> mb_height		5514089	0		<			
ANR	5514287	Identifier	mb_y		5514089	0					
ANR	5514288	PtrMemberAccess	s -> mb_height		5514089	1					
ANR	5514289	Identifier	s		5514089	0					
ANR	5514290	Identifier	mb_height		5514089	1					
ANR	5514291	PostIncDecOperationExpression	mb_y ++	57:40:916:921	5514089	2	True				
ANR	5514292	Identifier	mb_y		5514089	0					
ANR	5514293	IncDec	++		5514089	1					
ANR	5514294	CompoundStatement		61:8:980:1029	5514089	3					
ANR	5514295	IdentifierDeclStatement	uint8_t * ptr = data + ( mb_y * linesize * 8 >> s -> avctx -> lowres ) ;	59:8:935:1002	5514089	0	True				
ANR	5514296	IdentifierDecl	* ptr = data + ( mb_y * linesize * 8 >> s -> avctx -> lowres )		5514089	0					
ANR	5514297	IdentifierDeclType	uint8_t *		5514089	0					
ANR	5514298	Identifier	ptr		5514089	1					
ANR	5514299	AssignmentExpression	* ptr = data + ( mb_y * linesize * 8 >> s -> avctx -> lowres )		5514089	2		=			
ANR	5514300	Identifier	ptr		5514089	0					
ANR	5514301	AdditiveExpression	data + ( mb_y * linesize * 8 >> s -> avctx -> lowres )		5514089	1		+			
ANR	5514302	Identifier	data		5514089	0					
ANR	5514303	ShiftExpression	mb_y * linesize * 8 >> s -> avctx -> lowres		5514089	1		>>			
ANR	5514304	MultiplicativeExpression	mb_y * linesize * 8		5514089	0		*			
ANR	5514305	Identifier	mb_y		5514089	0					
ANR	5514306	MultiplicativeExpression	linesize * 8		5514089	1		*			
ANR	5514307	Identifier	linesize		5514089	0					
ANR	5514308	PrimaryExpression	8		5514089	1					
ANR	5514309	PtrMemberAccess	s -> avctx -> lowres		5514089	1					
ANR	5514310	PtrMemberAccess	s -> avctx		5514089	0					
ANR	5514311	Identifier	s		5514089	0					
ANR	5514312	Identifier	avctx		5514089	1					
ANR	5514313	Identifier	lowres		5514089	1					
ANR	5514314	IdentifierDeclStatement	int block_idx = mb_y * s -> block_stride [ c ] ;	61:8:1013:1057	5514089	1	True				
ANR	5514315	IdentifierDecl	block_idx = mb_y * s -> block_stride [ c ]		5514089	0					
ANR	5514316	IdentifierDeclType	int		5514089	0					
ANR	5514317	Identifier	block_idx		5514089	1					
ANR	5514318	AssignmentExpression	block_idx = mb_y * s -> block_stride [ c ]		5514089	2		=			
ANR	5514319	Identifier	block_idx		5514089	0					
ANR	5514320	MultiplicativeExpression	mb_y * s -> block_stride [ c ]		5514089	1		*			
ANR	5514321	Identifier	mb_y		5514089	0					
ANR	5514322	ArrayIndexing	s -> block_stride [ c ]		5514089	1					
ANR	5514323	PtrMemberAccess	s -> block_stride		5514089	0					
ANR	5514324	Identifier	s		5514089	0					
ANR	5514325	Identifier	block_stride		5514089	1					
ANR	5514326	Identifier	c		5514089	1					
ANR	5514327	IdentifierDeclStatement	int16_t ( * block ) [ 64 ] = & s -> blocks [ c ] [ block_idx ] ;	63:8:1068:1115	5514089	2	True				
ANR	5514328	IdentifierDecl	( * block ) [ 64 ] = & s -> blocks [ c ] [ block_idx ]		5514089	0					
ANR	5514329	IdentifierDeclType	int16_t ( * ) [ 64 ]		5514089	0					
ANR	5514330	Identifier	block		5514089	1					
ANR	5514331	PrimaryExpression	64		5514089	2					
ANR	5514332	AssignmentExpression	( * block ) [ 64 ] = & s -> blocks [ c ] [ block_idx ]		5514089	3		=			
ANR	5514333	Identifier	block		5514089	0					
ANR	5514334	UnaryOperationExpression	& s -> blocks [ c ] [ block_idx ]		5514089	1					
ANR	5514335	UnaryOperator	&		5514089	0					
ANR	5514336	ArrayIndexing	s -> blocks [ c ] [ block_idx ]		5514089	1					
ANR	5514337	ArrayIndexing	s -> blocks [ c ]		5514089	0					
ANR	5514338	PtrMemberAccess	s -> blocks		5514089	0					
ANR	5514339	Identifier	s		5514089	0					
ANR	5514340	Identifier	blocks		5514089	1					
ANR	5514341	Identifier	c		5514089	1					
ANR	5514342	Identifier	block_idx		5514089	1					
ANR	5514343	IdentifierDeclStatement	uint8_t * last_nnz = & s -> last_nnz [ c ] [ block_idx ] ;	65:8:1126:1175	5514089	3	True				
ANR	5514344	IdentifierDecl	* last_nnz = & s -> last_nnz [ c ] [ block_idx ]		5514089	0					
ANR	5514345	IdentifierDeclType	uint8_t *		5514089	0					
ANR	5514346	Identifier	last_nnz		5514089	1					
ANR	5514347	AssignmentExpression	* last_nnz = & s -> last_nnz [ c ] [ block_idx ]		5514089	2		=			
ANR	5514348	Identifier	last_nnz		5514089	0					
ANR	5514349	UnaryOperationExpression	& s -> last_nnz [ c ] [ block_idx ]		5514089	1					
ANR	5514350	UnaryOperator	&		5514089	0					
ANR	5514351	ArrayIndexing	s -> last_nnz [ c ] [ block_idx ]		5514089	1					
ANR	5514352	ArrayIndexing	s -> last_nnz [ c ]		5514089	0					
ANR	5514353	PtrMemberAccess	s -> last_nnz		5514089	0					
ANR	5514354	Identifier	s		5514089	0					
ANR	5514355	Identifier	last_nnz		5514089	1					
ANR	5514356	Identifier	c		5514089	1					
ANR	5514357	Identifier	block_idx		5514089	1					
ANR	5514358	ForStatement	"for ( mb_x = 0 ; mb_x < s -> mb_width ; mb_x ++ , block ++ , last_nnz ++ )"		5514089	4					
ANR	5514359	ForInit	mb_x = 0 ;	67:13:1191:1199	5514089	0	True				
ANR	5514360	AssignmentExpression	mb_x = 0		5514089	0		=			
ANR	5514361	Identifier	mb_x		5514089	0					
ANR	5514362	PrimaryExpression	0		5514089	1					
ANR	5514363	Condition	mb_x < s -> mb_width	67:23:1201:1218	5514089	1	True				
ANR	5514364	RelationalExpression	mb_x < s -> mb_width		5514089	0		<			
ANR	5514365	Identifier	mb_x		5514089	0					
ANR	5514366	PtrMemberAccess	s -> mb_width		5514089	1					
ANR	5514367	Identifier	s		5514089	0					
ANR	5514368	Identifier	mb_width		5514089	1					
ANR	5514369	Expression	"mb_x ++ , block ++ , last_nnz ++"	67:43:1221:1247	5514089	2	True				
ANR	5514370	PostIncDecOperationExpression	mb_x ++		5514089	0					
ANR	5514371	Identifier	mb_x		5514089	0					
ANR	5514372	IncDec	++		5514089	1					
ANR	5514373	Expression	"block ++ , last_nnz ++"		5514089	1					
ANR	5514374	PostIncDecOperationExpression	block ++		5514089	0					
ANR	5514375	Identifier	block		5514089	0					
ANR	5514376	IncDec	++		5514089	1					
ANR	5514377	PostIncDecOperationExpression	last_nnz ++		5514089	1					
ANR	5514378	Identifier	last_nnz		5514089	0					
ANR	5514379	IncDec	++		5514089	1					
ANR	5514380	CompoundStatement		65:16:1123:1130	5514089	3					
ANR	5514381	IdentifierDeclStatement	int ret ;	69:16:1269:1276	5514089	0	True				
ANR	5514382	IdentifierDecl	ret		5514089	0					
ANR	5514383	IdentifierDeclType	int		5514089	0					
ANR	5514384	Identifier	ret		5514089	1					
ANR	5514385	IfStatement	if ( s -> restart_interval && ! s -> restart_count )		5514089	1					
ANR	5514386	Condition	s -> restart_interval && ! s -> restart_count	71:20:1299:1338	5514089	0	True				
ANR	5514387	AndExpression	s -> restart_interval && ! s -> restart_count		5514089	0		&&			
ANR	5514388	PtrMemberAccess	s -> restart_interval		5514089	0					
ANR	5514389	Identifier	s		5514089	0					
ANR	5514390	Identifier	restart_interval		5514089	1					
ANR	5514391	UnaryOperationExpression	! s -> restart_count		5514089	1					
ANR	5514392	UnaryOperator	!		5514089	0					
ANR	5514393	PtrMemberAccess	s -> restart_count		5514089	1					
ANR	5514394	Identifier	s		5514089	0					
ANR	5514395	Identifier	restart_count		5514089	1					
ANR	5514396	ExpressionStatement	s -> restart_count = s -> restart_interval	73:20:1362:1400	5514089	1	True				
ANR	5514397	AssignmentExpression	s -> restart_count = s -> restart_interval		5514089	0		=			
ANR	5514398	PtrMemberAccess	s -> restart_count		5514089	0					
ANR	5514399	Identifier	s		5514089	0					
ANR	5514400	Identifier	restart_count		5514089	1					
ANR	5514401	PtrMemberAccess	s -> restart_interval		5514089	1					
ANR	5514402	Identifier	s		5514089	0					
ANR	5514403	Identifier	restart_interval		5514089	1					
ANR	5514404	IfStatement	if ( Ah )		5514089	2					
ANR	5514405	Condition	Ah	77:20:1425:1426	5514089	0	True				
ANR	5514406	Identifier	Ah		5514089	0					
ANR	5514407	ExpressionStatement	"ret = decode_block_refinement ( s , * block , last_nnz , s -> ac_index [ 0 ] , quant_matrix , ss , se , Al , & EOBRUN )"	79:20:1450:1602	5514089	1	True				
ANR	5514408	AssignmentExpression	"ret = decode_block_refinement ( s , * block , last_nnz , s -> ac_index [ 0 ] , quant_matrix , ss , se , Al , & EOBRUN )"		5514089	0		=			
ANR	5514409	Identifier	ret		5514089	0					
ANR	5514410	CallExpression	"decode_block_refinement ( s , * block , last_nnz , s -> ac_index [ 0 ] , quant_matrix , ss , se , Al , & EOBRUN )"		5514089	1					
ANR	5514411	Callee	decode_block_refinement		5514089	0					
ANR	5514412	Identifier	decode_block_refinement		5514089	0					
ANR	5514413	ArgumentList	s		5514089	1					
ANR	5514414	Argument	s		5514089	0					
ANR	5514415	Identifier	s		5514089	0					
ANR	5514416	Argument	* block		5514089	1					
ANR	5514417	UnaryOperationExpression	* block		5514089	0					
ANR	5514418	UnaryOperator	*		5514089	0					
ANR	5514419	Identifier	block		5514089	1					
ANR	5514420	Argument	last_nnz		5514089	2					
ANR	5514421	Identifier	last_nnz		5514089	0					
ANR	5514422	Argument	s -> ac_index [ 0 ]		5514089	3					
ANR	5514423	ArrayIndexing	s -> ac_index [ 0 ]		5514089	0					
ANR	5514424	PtrMemberAccess	s -> ac_index		5514089	0					
ANR	5514425	Identifier	s		5514089	0					
ANR	5514426	Identifier	ac_index		5514089	1					
ANR	5514427	PrimaryExpression	0		5514089	1					
ANR	5514428	Argument	quant_matrix		5514089	4					
ANR	5514429	Identifier	quant_matrix		5514089	0					
ANR	5514430	Argument	ss		5514089	5					
ANR	5514431	Identifier	ss		5514089	0					
ANR	5514432	Argument	se		5514089	6					
ANR	5514433	Identifier	se		5514089	0					
ANR	5514434	Argument	Al		5514089	7					
ANR	5514435	Identifier	Al		5514089	0					
ANR	5514436	Argument	& EOBRUN		5514089	8					
ANR	5514437	UnaryOperationExpression	& EOBRUN		5514089	0					
ANR	5514438	UnaryOperator	&		5514089	0					
ANR	5514439	Identifier	EOBRUN		5514089	1					
ANR	5514440	ElseStatement	else		5514089	0					
ANR	5514441	ExpressionStatement	"ret = decode_block_progressive ( s , * block , last_nnz , s -> ac_index [ 0 ] , quant_matrix , ss , se , Al , & EOBRUN )"	85:20:1647:1801	5514089	0	True				
ANR	5514442	AssignmentExpression	"ret = decode_block_progressive ( s , * block , last_nnz , s -> ac_index [ 0 ] , quant_matrix , ss , se , Al , & EOBRUN )"		5514089	0		=			
ANR	5514443	Identifier	ret		5514089	0					
ANR	5514444	CallExpression	"decode_block_progressive ( s , * block , last_nnz , s -> ac_index [ 0 ] , quant_matrix , ss , se , Al , & EOBRUN )"		5514089	1					
ANR	5514445	Callee	decode_block_progressive		5514089	0					
ANR	5514446	Identifier	decode_block_progressive		5514089	0					
ANR	5514447	ArgumentList	s		5514089	1					
ANR	5514448	Argument	s		5514089	0					
ANR	5514449	Identifier	s		5514089	0					
ANR	5514450	Argument	* block		5514089	1					
ANR	5514451	UnaryOperationExpression	* block		5514089	0					
ANR	5514452	UnaryOperator	*		5514089	0					
ANR	5514453	Identifier	block		5514089	1					
ANR	5514454	Argument	last_nnz		5514089	2					
ANR	5514455	Identifier	last_nnz		5514089	0					
ANR	5514456	Argument	s -> ac_index [ 0 ]		5514089	3					
ANR	5514457	ArrayIndexing	s -> ac_index [ 0 ]		5514089	0					
ANR	5514458	PtrMemberAccess	s -> ac_index		5514089	0					
ANR	5514459	Identifier	s		5514089	0					
ANR	5514460	Identifier	ac_index		5514089	1					
ANR	5514461	PrimaryExpression	0		5514089	1					
ANR	5514462	Argument	quant_matrix		5514089	4					
ANR	5514463	Identifier	quant_matrix		5514089	0					
ANR	5514464	Argument	ss		5514089	5					
ANR	5514465	Identifier	ss		5514089	0					
ANR	5514466	Argument	se		5514089	6					
ANR	5514467	Identifier	se		5514089	0					
ANR	5514468	Argument	Al		5514089	7					
ANR	5514469	Identifier	Al		5514089	0					
ANR	5514470	Argument	& EOBRUN		5514089	8					
ANR	5514471	UnaryOperationExpression	& EOBRUN		5514089	0					
ANR	5514472	UnaryOperator	&		5514089	0					
ANR	5514473	Identifier	EOBRUN		5514089	1					
ANR	5514474	IfStatement	if ( ret < 0 )		5514089	3					
ANR	5514475	Condition	ret < 0	89:20:1824:1830	5514089	0	True				
ANR	5514476	RelationalExpression	ret < 0		5514089	0		<			
ANR	5514477	Identifier	ret		5514089	0					
ANR	5514478	PrimaryExpression	0		5514089	1					
ANR	5514479	CompoundStatement		85:29:1687:1687	5514089	1					
ANR	5514480	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""error y=%d x=%d\\n"" , mb_y , mb_x )"	91:20:1856:1947	5514089	0	True				
ANR	5514481	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""error y=%d x=%d\\n"" , mb_y , mb_x )"		5514089	0					
ANR	5514482	Callee	av_log		5514089	0					
ANR	5514483	Identifier	av_log		5514089	0					
ANR	5514484	ArgumentList	s -> avctx		5514089	1					
ANR	5514485	Argument	s -> avctx		5514089	0					
ANR	5514486	PtrMemberAccess	s -> avctx		5514089	0					
ANR	5514487	Identifier	s		5514089	0					
ANR	5514488	Identifier	avctx		5514089	1					
ANR	5514489	Argument	AV_LOG_ERROR		5514089	1					
ANR	5514490	Identifier	AV_LOG_ERROR		5514089	0					
ANR	5514491	Argument	"""error y=%d x=%d\\n"""		5514089	2					
ANR	5514492	PrimaryExpression	"""error y=%d x=%d\\n"""		5514089	0					
ANR	5514493	Argument	mb_y		5514089	3					
ANR	5514494	Identifier	mb_y		5514089	0					
ANR	5514495	Argument	mb_x		5514089	4					
ANR	5514496	Identifier	mb_x		5514089	0					
ANR	5514497	ReturnStatement	return AVERROR_INVALIDDATA ;	95:20:1970:1996	5514089	1	True				
ANR	5514498	Identifier	AVERROR_INVALIDDATA		5514089	0					
ANR	5514499	IfStatement	if ( last_scan )		5514089	4					
ANR	5514500	Condition	last_scan	101:16:2036:2044	5514089	0	True				
ANR	5514501	Identifier	last_scan		5514089	0					
ANR	5514502	CompoundStatement		97:27:1901:1901	5514089	1					
ANR	5514503	ExpressionStatement	"s -> dsp . idct_put ( ptr , linesize , * block )"	103:20:2070:2108	5514089	0	True				
ANR	5514504	CallExpression	"s -> dsp . idct_put ( ptr , linesize , * block )"		5514089	0					
ANR	5514505	Callee	s -> dsp . idct_put		5514089	0					
ANR	5514506	MemberAccess	s -> dsp . idct_put		5514089	0					
ANR	5514507	PtrMemberAccess	s -> dsp		5514089	0					
ANR	5514508	Identifier	s		5514089	0					
ANR	5514509	Identifier	dsp		5514089	1					
ANR	5514510	Identifier	idct_put		5514089	1					
ANR	5514511	ArgumentList	ptr		5514089	1					
ANR	5514512	Argument	ptr		5514089	0					
ANR	5514513	Identifier	ptr		5514089	0					
ANR	5514514	Argument	linesize		5514089	1					
ANR	5514515	Identifier	linesize		5514089	0					
ANR	5514516	Argument	* block		5514089	2					
ANR	5514517	UnaryOperationExpression	* block		5514089	0					
ANR	5514518	UnaryOperator	*		5514089	0					
ANR	5514519	Identifier	block		5514089	1					
ANR	5514520	IfStatement	if ( s -> bits & 7 )		5514089	1					
ANR	5514521	Condition	s -> bits & 7	105:24:2135:2145	5514089	0	True				
ANR	5514522	BitAndExpression	s -> bits & 7		5514089	0		&			
ANR	5514523	PtrMemberAccess	s -> bits		5514089	0					
ANR	5514524	Identifier	s		5514089	0					
ANR	5514525	Identifier	bits		5514089	1					
ANR	5514526	PrimaryExpression	7		5514089	1					
ANR	5514527	ExpressionStatement	"shift_output ( s , ptr , linesize )"	107:24:2173:2203	5514089	1	True				
ANR	5514528	CallExpression	"shift_output ( s , ptr , linesize )"		5514089	0					
ANR	5514529	Callee	shift_output		5514089	0					
ANR	5514530	Identifier	shift_output		5514089	0					
ANR	5514531	ArgumentList	s		5514089	1					
ANR	5514532	Argument	s		5514089	0					
ANR	5514533	Identifier	s		5514089	0					
ANR	5514534	Argument	ptr		5514089	1					
ANR	5514535	Identifier	ptr		5514089	0					
ANR	5514536	Argument	linesize		5514089	2					
ANR	5514537	Identifier	linesize		5514089	0					
ANR	5514538	ExpressionStatement	ptr += bytes_per_pixel * 8 >> s -> avctx -> lowres	109:20:2226:2270	5514089	2	True				
ANR	5514539	AssignmentExpression	ptr += bytes_per_pixel * 8 >> s -> avctx -> lowres		5514089	0		+=			
ANR	5514540	Identifier	ptr		5514089	0					
ANR	5514541	ShiftExpression	bytes_per_pixel * 8 >> s -> avctx -> lowres		5514089	1		>>			
ANR	5514542	MultiplicativeExpression	bytes_per_pixel * 8		5514089	0		*			
ANR	5514543	Identifier	bytes_per_pixel		5514089	0					
ANR	5514544	PrimaryExpression	8		5514089	1					
ANR	5514545	PtrMemberAccess	s -> avctx -> lowres		5514089	1					
ANR	5514546	PtrMemberAccess	s -> avctx		5514089	0					
ANR	5514547	Identifier	s		5514089	0					
ANR	5514548	Identifier	avctx		5514089	1					
ANR	5514549	Identifier	lowres		5514089	1					
ANR	5514550	IfStatement	"if ( handle_rstn ( s , 0 ) )"		5514089	5					
ANR	5514551	Condition	"handle_rstn ( s , 0 )"	113:16:2304:2320	5514089	0	True				
ANR	5514552	CallExpression	"handle_rstn ( s , 0 )"		5514089	0					
ANR	5514553	Callee	handle_rstn		5514089	0					
ANR	5514554	Identifier	handle_rstn		5514089	0					
ANR	5514555	ArgumentList	s		5514089	1					
ANR	5514556	Argument	s		5514089	0					
ANR	5514557	Identifier	s		5514089	0					
ANR	5514558	Argument	0		5514089	1					
ANR	5514559	PrimaryExpression	0		5514089	0					
ANR	5514560	ExpressionStatement	EOBRUN = 0	115:16:2340:2350	5514089	1	True				
ANR	5514561	AssignmentExpression	EOBRUN = 0		5514089	0		=			
ANR	5514562	Identifier	EOBRUN		5514089	0					
ANR	5514563	PrimaryExpression	0		5514089	1					
ANR	5514564	ReturnStatement	return 0 ;	121:4:2375:2383	5514089	14	True				
ANR	5514565	PrimaryExpression	0		5514089	0					
ANR	5514566	ReturnType	static int		5514089	1					
ANR	5514567	Identifier	mjpeg_decode_scan_progressive_ac		5514089	2					
ANR	5514568	ParameterList	"MJpegDecodeContext * s , int ss , int se , int Ah , int Al"		5514089	3					
ANR	5514569	Parameter	MJpegDecodeContext * s	1:44:44:64	5514089	0	True				
ANR	5514570	ParameterType	MJpegDecodeContext *		5514089	0					
ANR	5514571	Identifier	s		5514089	1					
ANR	5514572	Parameter	int ss	1:67:67:72	5514089	1	True				
ANR	5514573	ParameterType	int		5514089	0					
ANR	5514574	Identifier	ss		5514089	1					
ANR	5514575	Parameter	int se	3:44:120:125	5514089	2	True				
ANR	5514576	ParameterType	int		5514089	0					
ANR	5514577	Identifier	se		5514089	1					
ANR	5514578	Parameter	int Ah	3:52:128:133	5514089	3	True				
ANR	5514579	ParameterType	int		5514089	0					
ANR	5514580	Identifier	Ah		5514089	1					
ANR	5514581	Parameter	int Al	3:60:136:141	5514089	4	True				
ANR	5514582	ParameterType	int		5514089	0					
ANR	5514583	Identifier	Al		5514089	1					
ANR	5514584	CFGEntryNode	ENTRY		5514089		True				
ANR	5514585	CFGExitNode	EXIT		5514089		True				
ANR	5514586	Symbol	s -> picture_ptr		5514089						
ANR	5514587	Symbol	data		5514089						
ANR	5514588	Symbol	* s -> picture_ptr -> data		5514089						
ANR	5514589	Symbol	last_scan		5514089						
ANR	5514590	Symbol	s -> mb_width		5514089						
ANR	5514591	Symbol	s -> picture_ptr -> data		5514089						
ANR	5514592	Symbol	quant_matrix		5514089						
ANR	5514593	Symbol	block_idx		5514089						
ANR	5514594	Symbol	linesize		5514089						
ANR	5514595	Symbol	s -> quant_sindex		5514089						
ANR	5514596	Symbol	last_nnz		5514089						
ANR	5514597	Symbol	s -> restart_interval		5514089						
ANR	5514598	Symbol	block		5514089						
ANR	5514599	Symbol	bytes_per_pixel		5514089						
ANR	5514600	Symbol	ret		5514089						
ANR	5514601	Symbol	* s -> avctx		5514089						
ANR	5514602	Symbol	* s -> last_nnz		5514089						
ANR	5514603	Symbol	* * s -> quant_sindex		5514089						
ANR	5514604	Symbol	* * ~s		5514089						
ANR	5514605	Symbol	s -> mb_height		5514089						
ANR	5514606	Symbol	* s -> blocks		5514089						
ANR	5514607	Symbol	EOBRUN		5514089						
ANR	5514608	Symbol	* s -> block_stride		5514089						
ANR	5514609	Symbol	* s -> ac_index		5514089						
ANR	5514610	Symbol	& EOBRUN		5514089						
ANR	5514611	Symbol	decode_block_refinement		5514089						
ANR	5514612	Symbol	decode_block_progressive		5514089						
ANR	5514613	Symbol	s -> dsp		5514089						
ANR	5514614	Symbol	* * * s		5514089						
ANR	5514615	Symbol	~s		5514089						
ANR	5514616	Symbol	s -> comp_index		5514089						
ANR	5514617	Symbol	handle_rstn		5514089						
ANR	5514618	Symbol	s -> avctx		5514089						
ANR	5514619	Symbol	~s -> coefs_finished		5514089						
ANR	5514620	Symbol	s -> restart_count		5514089						
ANR	5514621	Symbol	* s -> comp_index		5514089						
ANR	5514622	Symbol	* ~s -> coefs_finished		5514089						
ANR	5514623	Symbol	Ah		5514089						
ANR	5514624	Symbol	s -> interlaced		5514089						
ANR	5514625	Symbol	Al		5514089						
ANR	5514626	Symbol	s -> blocks		5514089						
ANR	5514627	Symbol	s -> avctx -> lowres		5514089						
ANR	5514628	Symbol	s -> block_stride		5514089						
ANR	5514629	Symbol	s -> last_nnz		5514089						
ANR	5514630	Symbol	se		5514089						
ANR	5514631	Symbol	* s -> quant_matrixes		5514089						
ANR	5514632	Symbol	s -> linesize		5514089						
ANR	5514633	Symbol	* * s		5514089						
ANR	5514634	Symbol	* s -> linesize		5514089						
ANR	5514635	Symbol	s -> ac_index		5514089						
ANR	5514636	Symbol	ss		5514089						
ANR	5514637	Symbol	c		5514089						
ANR	5514638	Symbol	AV_LOG_ERROR		5514089						
ANR	5514639	Symbol	* s -> quant_sindex		5514089						
ANR	5514640	Symbol	* c		5514089						
ANR	5514641	Symbol	ptr		5514089						
ANR	5514642	Symbol	* block		5514089						
ANR	5514643	Symbol	s -> bits		5514089						
ANR	5514644	Symbol	s		5514089						
ANR	5514645	Symbol	s -> bottom_field		5514089						
ANR	5514646	Symbol	* s -> picture_ptr		5514089						
ANR	5514647	Symbol	* * s -> picture_ptr		5514089						
ANR	5514648	Symbol	* ~s		5514089						
ANR	5514649	Symbol	AVERROR_INVALIDDATA		5514089						
ANR	5514650	Symbol	mb_y		5514089						
ANR	5514651	Symbol	mb_x		5514089						
ANR	5514652	Symbol	* s		5514089						
ANR	5514653	Symbol	s -> quant_matrixes		5514089						
