command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	349100	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ac3_decode_frame_02_0.c								
ANR	349101	Function	ac3_decode_frame	1:0:0:3795							
ANR	349102	FunctionDef	"ac3_decode_frame (AVCodecContext * avctx , void * data , int * data_size , const uint8_t * buf , int buf_size)"		349101	0					
ANR	349103	CompoundStatement		5:0:144:3795	349101	0					
ANR	349104	IdentifierDeclStatement	AC3DecodeContext * s = avctx -> priv_data ;	7:4:151:189	349101	0	True				
ANR	349105	IdentifierDecl	* s = avctx -> priv_data		349101	0					
ANR	349106	IdentifierDeclType	AC3DecodeContext *		349101	0					
ANR	349107	Identifier	s		349101	1					
ANR	349108	AssignmentExpression	* s = avctx -> priv_data		349101	2		=			
ANR	349109	Identifier	s		349101	0					
ANR	349110	PtrMemberAccess	avctx -> priv_data		349101	1					
ANR	349111	Identifier	avctx		349101	0					
ANR	349112	Identifier	priv_data		349101	1					
ANR	349113	IdentifierDeclStatement	int16_t * out_samples = ( int16_t * ) data ;	9:4:196:234	349101	1	True				
ANR	349114	IdentifierDecl	* out_samples = ( int16_t * ) data		349101	0					
ANR	349115	IdentifierDeclType	int16_t *		349101	0					
ANR	349116	Identifier	out_samples		349101	1					
ANR	349117	AssignmentExpression	* out_samples = ( int16_t * ) data		349101	2		=			
ANR	349118	Identifier	out_samples		349101	0					
ANR	349119	CastExpression	( int16_t * ) data		349101	1					
ANR	349120	CastTarget	int16_t *		349101	0					
ANR	349121	Identifier	data		349101	1					
ANR	349122	IdentifierDeclStatement	"int i , blk , ch , err ;"	11:4:241:260	349101	2	True				
ANR	349123	IdentifierDecl	i		349101	0					
ANR	349124	IdentifierDeclType	int		349101	0					
ANR	349125	Identifier	i		349101	1					
ANR	349126	IdentifierDecl	blk		349101	1					
ANR	349127	IdentifierDeclType	int		349101	0					
ANR	349128	Identifier	blk		349101	1					
ANR	349129	IdentifierDecl	ch		349101	2					
ANR	349130	IdentifierDeclType	int		349101	0					
ANR	349131	Identifier	ch		349101	1					
ANR	349132	IdentifierDecl	err		349101	3					
ANR	349133	IdentifierDeclType	int		349101	0					
ANR	349134	Identifier	err		349101	1					
ANR	349135	IfStatement	if ( s -> input_buffer )		349101	3					
ANR	349136	Condition	s -> input_buffer	17:8:348:362	349101	0	True				
ANR	349137	PtrMemberAccess	s -> input_buffer		349101	0					
ANR	349138	Identifier	s		349101	0					
ANR	349139	Identifier	input_buffer		349101	1					
ANR	349140	CompoundStatement		13:25:220:220	349101	1					
ANR	349141	ExpressionStatement	"memcpy ( s -> input_buffer , buf , FFMIN ( buf_size , AC3_MAX_FRAME_SIZE ) )"	23:8:532:597	349101	0	True				
ANR	349142	CallExpression	"memcpy ( s -> input_buffer , buf , FFMIN ( buf_size , AC3_MAX_FRAME_SIZE ) )"		349101	0					
ANR	349143	Callee	memcpy		349101	0					
ANR	349144	Identifier	memcpy		349101	0					
ANR	349145	ArgumentList	s -> input_buffer		349101	1					
ANR	349146	Argument	s -> input_buffer		349101	0					
ANR	349147	PtrMemberAccess	s -> input_buffer		349101	0					
ANR	349148	Identifier	s		349101	0					
ANR	349149	Identifier	input_buffer		349101	1					
ANR	349150	Argument	buf		349101	1					
ANR	349151	Identifier	buf		349101	0					
ANR	349152	Argument	"FFMIN ( buf_size , AC3_MAX_FRAME_SIZE )"		349101	2					
ANR	349153	CallExpression	"FFMIN ( buf_size , AC3_MAX_FRAME_SIZE )"		349101	0					
ANR	349154	Callee	FFMIN		349101	0					
ANR	349155	Identifier	FFMIN		349101	0					
ANR	349156	ArgumentList	buf_size		349101	1					
ANR	349157	Argument	buf_size		349101	0					
ANR	349158	Identifier	buf_size		349101	0					
ANR	349159	Argument	AC3_MAX_FRAME_SIZE		349101	1					
ANR	349160	Identifier	AC3_MAX_FRAME_SIZE		349101	0					
ANR	349161	ExpressionStatement	"init_get_bits ( & s -> gbc , s -> input_buffer , buf_size * 8 )"	25:8:608:661	349101	1	True				
ANR	349162	CallExpression	"init_get_bits ( & s -> gbc , s -> input_buffer , buf_size * 8 )"		349101	0					
ANR	349163	Callee	init_get_bits		349101	0					
ANR	349164	Identifier	init_get_bits		349101	0					
ANR	349165	ArgumentList	& s -> gbc		349101	1					
ANR	349166	Argument	& s -> gbc		349101	0					
ANR	349167	UnaryOperationExpression	& s -> gbc		349101	0					
ANR	349168	UnaryOperator	&		349101	0					
ANR	349169	PtrMemberAccess	s -> gbc		349101	1					
ANR	349170	Identifier	s		349101	0					
ANR	349171	Identifier	gbc		349101	1					
ANR	349172	Argument	s -> input_buffer		349101	1					
ANR	349173	PtrMemberAccess	s -> input_buffer		349101	0					
ANR	349174	Identifier	s		349101	0					
ANR	349175	Identifier	input_buffer		349101	1					
ANR	349176	Argument	buf_size * 8		349101	2					
ANR	349177	MultiplicativeExpression	buf_size * 8		349101	0		*			
ANR	349178	Identifier	buf_size		349101	0					
ANR	349179	PrimaryExpression	8		349101	1					
ANR	349180	ElseStatement	else		349101	0					
ANR	349181	CompoundStatement		23:11:530:530	349101	0					
ANR	349182	ExpressionStatement	"init_get_bits ( & s -> gbc , buf , buf_size * 8 )"	29:8:686:727	349101	0	True				
ANR	349183	CallExpression	"init_get_bits ( & s -> gbc , buf , buf_size * 8 )"		349101	0					
ANR	349184	Callee	init_get_bits		349101	0					
ANR	349185	Identifier	init_get_bits		349101	0					
ANR	349186	ArgumentList	& s -> gbc		349101	1					
ANR	349187	Argument	& s -> gbc		349101	0					
ANR	349188	UnaryOperationExpression	& s -> gbc		349101	0					
ANR	349189	UnaryOperator	&		349101	0					
ANR	349190	PtrMemberAccess	s -> gbc		349101	1					
ANR	349191	Identifier	s		349101	0					
ANR	349192	Identifier	gbc		349101	1					
ANR	349193	Argument	buf		349101	1					
ANR	349194	Identifier	buf		349101	0					
ANR	349195	Argument	buf_size * 8		349101	2					
ANR	349196	MultiplicativeExpression	buf_size * 8		349101	0		*			
ANR	349197	Identifier	buf_size		349101	0					
ANR	349198	PrimaryExpression	8		349101	1					
ANR	349199	ExpressionStatement	err = ac3_parse_header ( s )	37:4:773:798	349101	4	True				
ANR	349200	AssignmentExpression	err = ac3_parse_header ( s )		349101	0		=			
ANR	349201	Identifier	err		349101	0					
ANR	349202	CallExpression	ac3_parse_header ( s )		349101	1					
ANR	349203	Callee	ac3_parse_header		349101	0					
ANR	349204	Identifier	ac3_parse_header		349101	0					
ANR	349205	ArgumentList	s		349101	1					
ANR	349206	Argument	s		349101	0					
ANR	349207	Identifier	s		349101	0					
ANR	349208	IfStatement	if ( err )		349101	5					
ANR	349209	Condition	err	39:7:808:810	349101	0	True				
ANR	349210	Identifier	err		349101	0					
ANR	349211	CompoundStatement		35:12:668:668	349101	1					
ANR	349212	SwitchStatement	switch ( err )		349101	0					
ANR	349213	Condition	err	41:15:831:833	349101	0	True				
ANR	349214	Identifier	err		349101	0					
ANR	349215	CompoundStatement		37:20:691:691	349101	1					
ANR	349216	Label	case AC3_PARSE_ERROR_SYNC :	43:12:851:876	349101	0	True				
ANR	349217	Identifier	AC3_PARSE_ERROR_SYNC		349101	0					
ANR	349218	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame sync error : cannot use error concealment\\n"" )"	45:16:895:975	349101	1	True				
ANR	349219	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame sync error : cannot use error concealment\\n"" )"		349101	0					
ANR	349220	Callee	av_log		349101	0					
ANR	349221	Identifier	av_log		349101	0					
ANR	349222	ArgumentList	avctx		349101	1					
ANR	349223	Argument	avctx		349101	0					
ANR	349224	Identifier	avctx		349101	0					
ANR	349225	Argument	AV_LOG_ERROR		349101	1					
ANR	349226	Identifier	AV_LOG_ERROR		349101	0					
ANR	349227	Argument	"""frame sync error : cannot use error concealment\\n"""		349101	2					
ANR	349228	PrimaryExpression	"""frame sync error : cannot use error concealment\\n"""		349101	0					
ANR	349229	ReturnStatement	return - 1 ;	47:16:994:1003	349101	2	True				
ANR	349230	UnaryOperationExpression	- 1		349101	0					
ANR	349231	UnaryOperator	-		349101	0					
ANR	349232	PrimaryExpression	1		349101	1					
ANR	349233	Label	case AC3_PARSE_ERROR_BSID :	49:12:1018:1043	349101	3	True				
ANR	349234	Identifier	AC3_PARSE_ERROR_BSID		349101	0					
ANR	349235	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid bitstream id\\n"" )"	51:16:1062:1115	349101	4	True				
ANR	349236	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid bitstream id\\n"" )"		349101	0					
ANR	349237	Callee	av_log		349101	0					
ANR	349238	Identifier	av_log		349101	0					
ANR	349239	ArgumentList	avctx		349101	1					
ANR	349240	Argument	avctx		349101	0					
ANR	349241	Identifier	avctx		349101	0					
ANR	349242	Argument	AV_LOG_ERROR		349101	1					
ANR	349243	Identifier	AV_LOG_ERROR		349101	0					
ANR	349244	Argument	"""invalid bitstream id\\n"""		349101	2					
ANR	349245	PrimaryExpression	"""invalid bitstream id\\n"""		349101	0					
ANR	349246	BreakStatement	break ;	53:16:1134:1139	349101	5	True				
ANR	349247	Label	case AC3_PARSE_ERROR_SAMPLE_RATE :	55:12:1154:1186	349101	6	True				
ANR	349248	Identifier	AC3_PARSE_ERROR_SAMPLE_RATE		349101	0					
ANR	349249	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid sample rate\\n"" )"	57:16:1205:1257	349101	7	True				
ANR	349250	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid sample rate\\n"" )"		349101	0					
ANR	349251	Callee	av_log		349101	0					
ANR	349252	Identifier	av_log		349101	0					
ANR	349253	ArgumentList	avctx		349101	1					
ANR	349254	Argument	avctx		349101	0					
ANR	349255	Identifier	avctx		349101	0					
ANR	349256	Argument	AV_LOG_ERROR		349101	1					
ANR	349257	Identifier	AV_LOG_ERROR		349101	0					
ANR	349258	Argument	"""invalid sample rate\\n"""		349101	2					
ANR	349259	PrimaryExpression	"""invalid sample rate\\n"""		349101	0					
ANR	349260	BreakStatement	break ;	59:16:1276:1281	349101	8	True				
ANR	349261	Label	case AC3_PARSE_ERROR_FRAME_SIZE :	61:12:1296:1327	349101	9	True				
ANR	349262	Identifier	AC3_PARSE_ERROR_FRAME_SIZE		349101	0					
ANR	349263	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame size\\n"" )"	63:16:1346:1397	349101	10	True				
ANR	349264	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame size\\n"" )"		349101	0					
ANR	349265	Callee	av_log		349101	0					
ANR	349266	Identifier	av_log		349101	0					
ANR	349267	ArgumentList	avctx		349101	1					
ANR	349268	Argument	avctx		349101	0					
ANR	349269	Identifier	avctx		349101	0					
ANR	349270	Argument	AV_LOG_ERROR		349101	1					
ANR	349271	Identifier	AV_LOG_ERROR		349101	0					
ANR	349272	Argument	"""invalid frame size\\n"""		349101	2					
ANR	349273	PrimaryExpression	"""invalid frame size\\n"""		349101	0					
ANR	349274	BreakStatement	break ;	65:16:1416:1421	349101	11	True				
ANR	349275	Label	case AC3_PARSE_ERROR_FRAME_TYPE :	67:12:1436:1467	349101	12	True				
ANR	349276	Identifier	AC3_PARSE_ERROR_FRAME_TYPE		349101	0					
ANR	349277	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame type\\n"" )"	69:16:1486:1537	349101	13	True				
ANR	349278	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame type\\n"" )"		349101	0					
ANR	349279	Callee	av_log		349101	0					
ANR	349280	Identifier	av_log		349101	0					
ANR	349281	ArgumentList	avctx		349101	1					
ANR	349282	Argument	avctx		349101	0					
ANR	349283	Identifier	avctx		349101	0					
ANR	349284	Argument	AV_LOG_ERROR		349101	1					
ANR	349285	Identifier	AV_LOG_ERROR		349101	0					
ANR	349286	Argument	"""invalid frame type\\n"""		349101	2					
ANR	349287	PrimaryExpression	"""invalid frame type\\n"""		349101	0					
ANR	349288	BreakStatement	break ;	71:16:1556:1561	349101	14	True				
ANR	349289	Label	default :	73:12:1576:1583	349101	15	True				
ANR	349290	Identifier	default		349101	0					
ANR	349291	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid header\\n"" )"	75:16:1602:1649	349101	16	True				
ANR	349292	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid header\\n"" )"		349101	0					
ANR	349293	Callee	av_log		349101	0					
ANR	349294	Identifier	av_log		349101	0					
ANR	349295	ArgumentList	avctx		349101	1					
ANR	349296	Argument	avctx		349101	0					
ANR	349297	Identifier	avctx		349101	0					
ANR	349298	Argument	AV_LOG_ERROR		349101	1					
ANR	349299	Identifier	AV_LOG_ERROR		349101	0					
ANR	349300	Argument	"""invalid header\\n"""		349101	2					
ANR	349301	PrimaryExpression	"""invalid header\\n"""		349101	0					
ANR	349302	BreakStatement	break ;	77:16:1668:1673	349101	17	True				
ANR	349303	IfStatement	if ( s -> frame_size > buf_size )		349101	6					
ANR	349304	Condition	s -> frame_size > buf_size	87:7:1766:1789	349101	0	True				
ANR	349305	RelationalExpression	s -> frame_size > buf_size		349101	0		>			
ANR	349306	PtrMemberAccess	s -> frame_size		349101	0					
ANR	349307	Identifier	s		349101	0					
ANR	349308	Identifier	frame_size		349101	1					
ANR	349309	Identifier	buf_size		349101	1					
ANR	349310	CompoundStatement		83:33:1647:1647	349101	1					
ANR	349311	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""incomplete frame\\n"" )"	89:8:1803:1852	349101	0	True				
ANR	349312	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""incomplete frame\\n"" )"		349101	0					
ANR	349313	Callee	av_log		349101	0					
ANR	349314	Identifier	av_log		349101	0					
ANR	349315	ArgumentList	avctx		349101	1					
ANR	349316	Argument	avctx		349101	0					
ANR	349317	Identifier	avctx		349101	0					
ANR	349318	Argument	AV_LOG_ERROR		349101	1					
ANR	349319	Identifier	AV_LOG_ERROR		349101	0					
ANR	349320	Argument	"""incomplete frame\\n"""		349101	2					
ANR	349321	PrimaryExpression	"""incomplete frame\\n"""		349101	0					
ANR	349322	ReturnStatement	return - 1 ;	91:8:1863:1872	349101	1	True				
ANR	349323	UnaryOperationExpression	- 1		349101	0					
ANR	349324	UnaryOperator	-		349101	0					
ANR	349325	PrimaryExpression	1		349101	1					
ANR	349326	IfStatement	if ( ! err && avctx -> error_resilience >= FF_ER_CAREFUL )		349101	7					
ANR	349327	Condition	! err && avctx -> error_resilience >= FF_ER_CAREFUL	99:7:1925:1972	349101	0	True				
ANR	349328	AndExpression	! err && avctx -> error_resilience >= FF_ER_CAREFUL		349101	0		&&			
ANR	349329	UnaryOperationExpression	! err		349101	0					
ANR	349330	UnaryOperator	!		349101	0					
ANR	349331	Identifier	err		349101	1					
ANR	349332	RelationalExpression	avctx -> error_resilience >= FF_ER_CAREFUL		349101	1		>=			
ANR	349333	PtrMemberAccess	avctx -> error_resilience		349101	0					
ANR	349334	Identifier	avctx		349101	0					
ANR	349335	Identifier	error_resilience		349101	1					
ANR	349336	Identifier	FF_ER_CAREFUL		349101	1					
ANR	349337	CompoundStatement		95:57:1830:1830	349101	1					
ANR	349338	IfStatement	"if ( av_crc ( av_crc_get_table ( AV_CRC_16_ANSI ) , 0 , & buf [ 2 ] , s -> frame_size - 2 ) )"		349101	0					
ANR	349339	Condition	"av_crc ( av_crc_get_table ( AV_CRC_16_ANSI ) , 0 , & buf [ 2 ] , s -> frame_size - 2 )"	101:11:1989:2057	349101	0	True				
ANR	349340	CallExpression	"av_crc ( av_crc_get_table ( AV_CRC_16_ANSI ) , 0 , & buf [ 2 ] , s -> frame_size - 2 )"		349101	0					
ANR	349341	Callee	av_crc		349101	0					
ANR	349342	Identifier	av_crc		349101	0					
ANR	349343	ArgumentList	av_crc_get_table ( AV_CRC_16_ANSI )		349101	1					
ANR	349344	Argument	av_crc_get_table ( AV_CRC_16_ANSI )		349101	0					
ANR	349345	CallExpression	av_crc_get_table ( AV_CRC_16_ANSI )		349101	0					
ANR	349346	Callee	av_crc_get_table		349101	0					
ANR	349347	Identifier	av_crc_get_table		349101	0					
ANR	349348	ArgumentList	AV_CRC_16_ANSI		349101	1					
ANR	349349	Argument	AV_CRC_16_ANSI		349101	0					
ANR	349350	Identifier	AV_CRC_16_ANSI		349101	0					
ANR	349351	Argument	0		349101	1					
ANR	349352	PrimaryExpression	0		349101	0					
ANR	349353	Argument	& buf [ 2 ]		349101	2					
ANR	349354	UnaryOperationExpression	& buf [ 2 ]		349101	0					
ANR	349355	UnaryOperator	&		349101	0					
ANR	349356	ArrayIndexing	buf [ 2 ]		349101	1					
ANR	349357	Identifier	buf		349101	0					
ANR	349358	PrimaryExpression	2		349101	1					
ANR	349359	Argument	s -> frame_size - 2		349101	3					
ANR	349360	AdditiveExpression	s -> frame_size - 2		349101	0		-			
ANR	349361	PtrMemberAccess	s -> frame_size		349101	0					
ANR	349362	Identifier	s		349101	0					
ANR	349363	Identifier	frame_size		349101	1					
ANR	349364	PrimaryExpression	2		349101	1					
ANR	349365	CompoundStatement		97:82:1915:1915	349101	1					
ANR	349366	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame CRC mismatch\\n"" )"	103:12:2075:2126	349101	0	True				
ANR	349367	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame CRC mismatch\\n"" )"		349101	0					
ANR	349368	Callee	av_log		349101	0					
ANR	349369	Identifier	av_log		349101	0					
ANR	349370	ArgumentList	avctx		349101	1					
ANR	349371	Argument	avctx		349101	0					
ANR	349372	Identifier	avctx		349101	0					
ANR	349373	Argument	AV_LOG_ERROR		349101	1					
ANR	349374	Identifier	AV_LOG_ERROR		349101	0					
ANR	349375	Argument	"""frame CRC mismatch\\n"""		349101	2					
ANR	349376	PrimaryExpression	"""frame CRC mismatch\\n"""		349101	0					
ANR	349377	ExpressionStatement	err = 1	105:12:2141:2148	349101	1	True				
ANR	349378	AssignmentExpression	err = 1		349101	0		=			
ANR	349379	Identifier	err		349101	0					
ANR	349380	PrimaryExpression	1		349101	1					
ANR	349381	IfStatement	if ( ! err )		349101	8					
ANR	349382	Condition	! err	115:8:2227:2230	349101	0	True				
ANR	349383	UnaryOperationExpression	! err		349101	0					
ANR	349384	UnaryOperator	!		349101	0					
ANR	349385	Identifier	err		349101	1					
ANR	349386	CompoundStatement		111:14:2088:2088	349101	1					
ANR	349387	ExpressionStatement	avctx -> sample_rate = s -> sample_rate	117:8:2244:2279	349101	0	True				
ANR	349388	AssignmentExpression	avctx -> sample_rate = s -> sample_rate		349101	0		=			
ANR	349389	PtrMemberAccess	avctx -> sample_rate		349101	0					
ANR	349390	Identifier	avctx		349101	0					
ANR	349391	Identifier	sample_rate		349101	1					
ANR	349392	PtrMemberAccess	s -> sample_rate		349101	1					
ANR	349393	Identifier	s		349101	0					
ANR	349394	Identifier	sample_rate		349101	1					
ANR	349395	ExpressionStatement	avctx -> bit_rate = s -> bit_rate	119:8:2290:2319	349101	1	True				
ANR	349396	AssignmentExpression	avctx -> bit_rate = s -> bit_rate		349101	0		=			
ANR	349397	PtrMemberAccess	avctx -> bit_rate		349101	0					
ANR	349398	Identifier	avctx		349101	0					
ANR	349399	Identifier	bit_rate		349101	1					
ANR	349400	PtrMemberAccess	s -> bit_rate		349101	1					
ANR	349401	Identifier	s		349101	0					
ANR	349402	Identifier	bit_rate		349101	1					
ANR	349403	ExpressionStatement	s -> out_channels = s -> channels	125:8:2362:2391	349101	2	True				
ANR	349404	AssignmentExpression	s -> out_channels = s -> channels		349101	0		=			
ANR	349405	PtrMemberAccess	s -> out_channels		349101	0					
ANR	349406	Identifier	s		349101	0					
ANR	349407	Identifier	out_channels		349101	1					
ANR	349408	PtrMemberAccess	s -> channels		349101	1					
ANR	349409	Identifier	s		349101	0					
ANR	349410	Identifier	channels		349101	1					
ANR	349411	ExpressionStatement	s -> output_mode = s -> channel_mode	127:8:2402:2434	349101	3	True				
ANR	349412	AssignmentExpression	s -> output_mode = s -> channel_mode		349101	0		=			
ANR	349413	PtrMemberAccess	s -> output_mode		349101	0					
ANR	349414	Identifier	s		349101	0					
ANR	349415	Identifier	output_mode		349101	1					
ANR	349416	PtrMemberAccess	s -> channel_mode		349101	1					
ANR	349417	Identifier	s		349101	0					
ANR	349418	Identifier	channel_mode		349101	1					
ANR	349419	IfStatement	if ( s -> lfe_on )		349101	4					
ANR	349420	Condition	s -> lfe_on	129:11:2448:2456	349101	0	True				
ANR	349421	PtrMemberAccess	s -> lfe_on		349101	0					
ANR	349422	Identifier	s		349101	0					
ANR	349423	Identifier	lfe_on		349101	1					
ANR	349424	ExpressionStatement	s -> output_mode |= AC3_OUTPUT_LFEON	131:12:2472:2506	349101	1	True				
ANR	349425	AssignmentExpression	s -> output_mode |= AC3_OUTPUT_LFEON		349101	0		|=			
ANR	349426	PtrMemberAccess	s -> output_mode		349101	0					
ANR	349427	Identifier	s		349101	0					
ANR	349428	Identifier	output_mode		349101	1					
ANR	349429	Identifier	AC3_OUTPUT_LFEON		349101	1					
ANR	349430	IfStatement	if ( avctx -> request_channels > 0 && avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels )		349101	5					
ANR	349431	Condition	avctx -> request_channels > 0 && avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels	133:12:2521:2637	349101	0	True				
ANR	349432	AndExpression	avctx -> request_channels > 0 && avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels		349101	0		&&			
ANR	349433	RelationalExpression	avctx -> request_channels > 0		349101	0		>			
ANR	349434	PtrMemberAccess	avctx -> request_channels		349101	0					
ANR	349435	Identifier	avctx		349101	0					
ANR	349436	Identifier	request_channels		349101	1					
ANR	349437	PrimaryExpression	0		349101	1					
ANR	349438	AndExpression	avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels		349101	1		&&			
ANR	349439	RelationalExpression	avctx -> request_channels <= 2		349101	0		<=			
ANR	349440	PtrMemberAccess	avctx -> request_channels		349101	0					
ANR	349441	Identifier	avctx		349101	0					
ANR	349442	Identifier	request_channels		349101	1					
ANR	349443	PrimaryExpression	2		349101	1					
ANR	349444	RelationalExpression	avctx -> request_channels < s -> channels		349101	1		<			
ANR	349445	PtrMemberAccess	avctx -> request_channels		349101	0					
ANR	349446	Identifier	avctx		349101	0					
ANR	349447	Identifier	request_channels		349101	1					
ANR	349448	PtrMemberAccess	s -> channels		349101	1					
ANR	349449	Identifier	s		349101	0					
ANR	349450	Identifier	channels		349101	1					
ANR	349451	CompoundStatement		131:55:2495:2495	349101	1					
ANR	349452	ExpressionStatement	s -> out_channels = avctx -> request_channels	137:12:2655:2696	349101	0	True				
ANR	349453	AssignmentExpression	s -> out_channels = avctx -> request_channels		349101	0		=			
ANR	349454	PtrMemberAccess	s -> out_channels		349101	0					
ANR	349455	Identifier	s		349101	0					
ANR	349456	Identifier	out_channels		349101	1					
ANR	349457	PtrMemberAccess	avctx -> request_channels		349101	1					
ANR	349458	Identifier	avctx		349101	0					
ANR	349459	Identifier	request_channels		349101	1					
ANR	349460	ExpressionStatement	s -> output_mode = avctx -> request_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO	139:12:2711:2795	349101	1	True				
ANR	349461	AssignmentExpression	s -> output_mode = avctx -> request_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		349101	0		=			
ANR	349462	PtrMemberAccess	s -> output_mode		349101	0					
ANR	349463	Identifier	s		349101	0					
ANR	349464	Identifier	output_mode		349101	1					
ANR	349465	ConditionalExpression	avctx -> request_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		349101	1					
ANR	349466	Condition	avctx -> request_channels == 1		349101	0					
ANR	349467	EqualityExpression	avctx -> request_channels == 1		349101	0		==			
ANR	349468	PtrMemberAccess	avctx -> request_channels		349101	0					
ANR	349469	Identifier	avctx		349101	0					
ANR	349470	Identifier	request_channels		349101	1					
ANR	349471	PrimaryExpression	1		349101	1					
ANR	349472	Identifier	AC3_CHMODE_MONO		349101	1					
ANR	349473	Identifier	AC3_CHMODE_STEREO		349101	2					
ANR	349474	ExpressionStatement	avctx -> channels = s -> out_channels	143:8:2817:2850	349101	6	True				
ANR	349475	AssignmentExpression	avctx -> channels = s -> out_channels		349101	0		=			
ANR	349476	PtrMemberAccess	avctx -> channels		349101	0					
ANR	349477	Identifier	avctx		349101	0					
ANR	349478	Identifier	channels		349101	1					
ANR	349479	PtrMemberAccess	s -> out_channels		349101	1					
ANR	349480	Identifier	s		349101	0					
ANR	349481	Identifier	out_channels		349101	1					
ANR	349482	IfStatement	if ( s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels ) )		349101	7					
ANR	349483	Condition	s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )	149:11:2919:3045	349101	0	True				
ANR	349484	AndExpression	s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )		349101	0		&&			
ANR	349485	EqualityExpression	s -> channels != s -> out_channels		349101	0		!=			
ANR	349486	PtrMemberAccess	s -> channels		349101	0					
ANR	349487	Identifier	s		349101	0					
ANR	349488	Identifier	channels		349101	1					
ANR	349489	PtrMemberAccess	s -> out_channels		349101	1					
ANR	349490	Identifier	s		349101	0					
ANR	349491	Identifier	out_channels		349101	1					
ANR	349492	UnaryOperationExpression	! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )		349101	1					
ANR	349493	UnaryOperator	!		349101	0					
ANR	349494	AndExpression	( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels		349101	1		&&			
ANR	349495	BitAndExpression	s -> output_mode & AC3_OUTPUT_LFEON		349101	0		&			
ANR	349496	PtrMemberAccess	s -> output_mode		349101	0					
ANR	349497	Identifier	s		349101	0					
ANR	349498	Identifier	output_mode		349101	1					
ANR	349499	Identifier	AC3_OUTPUT_LFEON		349101	1					
ANR	349500	EqualityExpression	s -> fbw_channels == s -> out_channels		349101	1		==			
ANR	349501	PtrMemberAccess	s -> fbw_channels		349101	0					
ANR	349502	Identifier	s		349101	0					
ANR	349503	Identifier	fbw_channels		349101	1					
ANR	349504	PtrMemberAccess	s -> out_channels		349101	1					
ANR	349505	Identifier	s		349101	0					
ANR	349506	Identifier	out_channels		349101	1					
ANR	349507	CompoundStatement		147:53:2903:2903	349101	1					
ANR	349508	ExpressionStatement	set_downmix_coeffs ( s )	153:12:3063:3084	349101	0	True				
ANR	349509	CallExpression	set_downmix_coeffs ( s )		349101	0					
ANR	349510	Callee	set_downmix_coeffs		349101	0					
ANR	349511	Identifier	set_downmix_coeffs		349101	0					
ANR	349512	ArgumentList	s		349101	1					
ANR	349513	Argument	s		349101	0					
ANR	349514	Identifier	s		349101	0					
ANR	349515	ElseStatement	else		349101	0					
ANR	349516	IfStatement	if ( ! s -> out_channels )		349101	0					
ANR	349517	Condition	! s -> out_channels	157:15:3113:3128	349101	0	True				
ANR	349518	UnaryOperationExpression	! s -> out_channels		349101	0					
ANR	349519	UnaryOperator	!		349101	0					
ANR	349520	PtrMemberAccess	s -> out_channels		349101	1					
ANR	349521	Identifier	s		349101	0					
ANR	349522	Identifier	out_channels		349101	1					
ANR	349523	CompoundStatement		153:33:2986:2986	349101	1					
ANR	349524	ExpressionStatement	s -> out_channels = avctx -> channels	159:8:3142:3175	349101	0	True				
ANR	349525	AssignmentExpression	s -> out_channels = avctx -> channels		349101	0		=			
ANR	349526	PtrMemberAccess	s -> out_channels		349101	0					
ANR	349527	Identifier	s		349101	0					
ANR	349528	Identifier	out_channels		349101	1					
ANR	349529	PtrMemberAccess	avctx -> channels		349101	1					
ANR	349530	Identifier	avctx		349101	0					
ANR	349531	Identifier	channels		349101	1					
ANR	349532	IfStatement	if ( s -> out_channels < s -> channels )		349101	1					
ANR	349533	Condition	s -> out_channels < s -> channels	161:11:3189:3217	349101	0	True				
ANR	349534	RelationalExpression	s -> out_channels < s -> channels		349101	0		<			
ANR	349535	PtrMemberAccess	s -> out_channels		349101	0					
ANR	349536	Identifier	s		349101	0					
ANR	349537	Identifier	out_channels		349101	1					
ANR	349538	PtrMemberAccess	s -> channels		349101	1					
ANR	349539	Identifier	s		349101	0					
ANR	349540	Identifier	channels		349101	1					
ANR	349541	ExpressionStatement	s -> output_mode = s -> out_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO	163:12:3233:3309	349101	1	True				
ANR	349542	AssignmentExpression	s -> output_mode = s -> out_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		349101	0		=			
ANR	349543	PtrMemberAccess	s -> output_mode		349101	0					
ANR	349544	Identifier	s		349101	0					
ANR	349545	Identifier	output_mode		349101	1					
ANR	349546	ConditionalExpression	s -> out_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		349101	1					
ANR	349547	Condition	s -> out_channels == 1		349101	0					
ANR	349548	EqualityExpression	s -> out_channels == 1		349101	0		==			
ANR	349549	PtrMemberAccess	s -> out_channels		349101	0					
ANR	349550	Identifier	s		349101	0					
ANR	349551	Identifier	out_channels		349101	1					
ANR	349552	PrimaryExpression	1		349101	1					
ANR	349553	Identifier	AC3_CHMODE_MONO		349101	1					
ANR	349554	Identifier	AC3_CHMODE_STEREO		349101	2					
ANR	349555	ForStatement	for ( blk = 0 ; blk < NB_BLOCKS ; blk ++ )		349101	9					
ANR	349556	ForInit	blk = 0 ;	171:9:3364:3371	349101	0	True				
ANR	349557	AssignmentExpression	blk = 0		349101	0		=			
ANR	349558	Identifier	blk		349101	0					
ANR	349559	PrimaryExpression	0		349101	1					
ANR	349560	Condition	blk < NB_BLOCKS	171:18:3373:3387	349101	1	True				
ANR	349561	RelationalExpression	blk < NB_BLOCKS		349101	0		<			
ANR	349562	Identifier	blk		349101	0					
ANR	349563	Identifier	NB_BLOCKS		349101	1					
ANR	349564	PostIncDecOperationExpression	blk ++	171:35:3390:3394	349101	2	True				
ANR	349565	Identifier	blk		349101	0					
ANR	349566	IncDec	++		349101	1					
ANR	349567	CompoundStatement		167:42:3252:3252	349101	3					
ANR	349568	IfStatement	"if ( ! err && ac3_parse_audio_block ( s , blk ) )"		349101	0					
ANR	349569	Condition	"! err && ac3_parse_audio_block ( s , blk )"	173:12:3412:3448	349101	0	True				
ANR	349570	AndExpression	"! err && ac3_parse_audio_block ( s , blk )"		349101	0		&&			
ANR	349571	UnaryOperationExpression	! err		349101	0					
ANR	349572	UnaryOperator	!		349101	0					
ANR	349573	Identifier	err		349101	1					
ANR	349574	CallExpression	"ac3_parse_audio_block ( s , blk )"		349101	1					
ANR	349575	Callee	ac3_parse_audio_block		349101	0					
ANR	349576	Identifier	ac3_parse_audio_block		349101	0					
ANR	349577	ArgumentList	s		349101	1					
ANR	349578	Argument	s		349101	0					
ANR	349579	Identifier	s		349101	0					
ANR	349580	Argument	blk		349101	1					
ANR	349581	Identifier	blk		349101	0					
ANR	349582	CompoundStatement		169:51:3306:3306	349101	1					
ANR	349583	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""error parsing the audio block\\n"" )"	175:12:3466:3528	349101	0	True				
ANR	349584	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""error parsing the audio block\\n"" )"		349101	0					
ANR	349585	Callee	av_log		349101	0					
ANR	349586	Identifier	av_log		349101	0					
ANR	349587	ArgumentList	avctx		349101	1					
ANR	349588	Argument	avctx		349101	0					
ANR	349589	Identifier	avctx		349101	0					
ANR	349590	Argument	AV_LOG_ERROR		349101	1					
ANR	349591	Identifier	AV_LOG_ERROR		349101	0					
ANR	349592	Argument	"""error parsing the audio block\\n"""		349101	2					
ANR	349593	PrimaryExpression	"""error parsing the audio block\\n"""		349101	0					
ANR	349594	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		349101	1					
ANR	349595	ForInit	i = 0 ;	179:13:3555:3560	349101	0	True				
ANR	349596	AssignmentExpression	i = 0		349101	0		=			
ANR	349597	Identifier	i		349101	0					
ANR	349598	PrimaryExpression	0		349101	1					
ANR	349599	Condition	i < 256	179:20:3562:3568	349101	1	True				
ANR	349600	RelationalExpression	i < 256		349101	0		<			
ANR	349601	Identifier	i		349101	0					
ANR	349602	PrimaryExpression	256		349101	1					
ANR	349603	PostIncDecOperationExpression	i ++	179:29:3571:3573	349101	2	True				
ANR	349604	Identifier	i		349101	0					
ANR	349605	IncDec	++		349101	1					
ANR	349606	ForStatement	for ( ch = 0 ; ch < s -> out_channels ; ch ++ )		349101	3					
ANR	349607	ForInit	ch = 0 ;	181:17:3594:3600	349101	0	True				
ANR	349608	AssignmentExpression	ch = 0		349101	0		=			
ANR	349609	Identifier	ch		349101	0					
ANR	349610	PrimaryExpression	0		349101	1					
ANR	349611	Condition	ch < s -> out_channels	181:25:3602:3621	349101	1	True				
ANR	349612	RelationalExpression	ch < s -> out_channels		349101	0		<			
ANR	349613	Identifier	ch		349101	0					
ANR	349614	PtrMemberAccess	s -> out_channels		349101	1					
ANR	349615	Identifier	s		349101	0					
ANR	349616	Identifier	out_channels		349101	1					
ANR	349617	PostIncDecOperationExpression	ch ++	181:47:3624:3627	349101	2	True				
ANR	349618	Identifier	ch		349101	0					
ANR	349619	IncDec	++		349101	1					
ANR	349620	ExpressionStatement	* ( out_samples ++ ) = s -> int_output [ ch ] [ i ]	183:16:3647:3686	349101	3	True				
ANR	349621	AssignmentExpression	* ( out_samples ++ ) = s -> int_output [ ch ] [ i ]		349101	0		=			
ANR	349622	UnaryOperationExpression	* ( out_samples ++ )		349101	0					
ANR	349623	UnaryOperator	*		349101	0					
ANR	349624	PostIncDecOperationExpression	out_samples ++		349101	1					
ANR	349625	Identifier	out_samples		349101	0					
ANR	349626	IncDec	++		349101	1					
ANR	349627	ArrayIndexing	s -> int_output [ ch ] [ i ]		349101	1					
ANR	349628	ArrayIndexing	s -> int_output [ ch ]		349101	0					
ANR	349629	PtrMemberAccess	s -> int_output		349101	0					
ANR	349630	Identifier	s		349101	0					
ANR	349631	Identifier	int_output		349101	1					
ANR	349632	Identifier	ch		349101	1					
ANR	349633	Identifier	i		349101	1					
ANR	349634	ExpressionStatement	* data_size = NB_BLOCKS * 256 * avctx -> channels * sizeof ( int16_t )	187:4:3700:3765	349101	10	True				
ANR	349635	AssignmentExpression	* data_size = NB_BLOCKS * 256 * avctx -> channels * sizeof ( int16_t )		349101	0		=			
ANR	349636	UnaryOperationExpression	* data_size		349101	0					
ANR	349637	UnaryOperator	*		349101	0					
ANR	349638	Identifier	data_size		349101	1					
ANR	349639	MultiplicativeExpression	NB_BLOCKS * 256 * avctx -> channels * sizeof ( int16_t )		349101	1		*			
ANR	349640	Identifier	NB_BLOCKS		349101	0					
ANR	349641	MultiplicativeExpression	256 * avctx -> channels * sizeof ( int16_t )		349101	1		*			
ANR	349642	PrimaryExpression	256		349101	0					
ANR	349643	MultiplicativeExpression	avctx -> channels * sizeof ( int16_t )		349101	1		*			
ANR	349644	PtrMemberAccess	avctx -> channels		349101	0					
ANR	349645	Identifier	avctx		349101	0					
ANR	349646	Identifier	channels		349101	1					
ANR	349647	SizeofExpression	sizeof ( int16_t )		349101	1					
ANR	349648	Sizeof	sizeof		349101	0					
ANR	349649	SizeofOperand	int16_t		349101	1					
ANR	349650	ReturnStatement	return s -> frame_size ;	189:4:3772:3792	349101	11	True				
ANR	349651	PtrMemberAccess	s -> frame_size		349101	0					
ANR	349652	Identifier	s		349101	0					
ANR	349653	Identifier	frame_size		349101	1					
ANR	349654	ReturnType	static int		349101	1					
ANR	349655	Identifier	ac3_decode_frame		349101	2					
ANR	349656	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , const uint8_t * buf , int buf_size"		349101	3					
ANR	349657	Parameter	AVCodecContext * avctx	1:28:28:49	349101	0	True				
ANR	349658	ParameterType	AVCodecContext *		349101	0					
ANR	349659	Identifier	avctx		349101	1					
ANR	349660	Parameter	void * data	1:52:52:61	349101	1	True				
ANR	349661	ParameterType	void *		349101	0					
ANR	349662	Identifier	data		349101	1					
ANR	349663	Parameter	int * data_size	1:64:64:77	349101	2	True				
ANR	349664	ParameterType	int *		349101	0					
ANR	349665	Identifier	data_size		349101	1					
ANR	349666	Parameter	const uint8_t * buf	3:28:109:126	349101	3	True				
ANR	349667	ParameterType	const uint8_t *		349101	0					
ANR	349668	Identifier	buf		349101	1					
ANR	349669	Parameter	int buf_size	3:48:129:140	349101	4	True				
ANR	349670	ParameterType	int		349101	0					
ANR	349671	Identifier	buf_size		349101	1					
ANR	349672	CFGEntryNode	ENTRY		349101		True				
ANR	349673	CFGExitNode	EXIT		349101		True				
ANR	349674	Symbol	data		349101						
ANR	349675	Symbol	* ( out_samples ++ )		349101						
ANR	349676	Symbol	* ch		349101						
ANR	349677	Symbol	FFMIN		349101						
ANR	349678	Symbol	* data_size		349101						
ANR	349679	Symbol	* * s -> int_output		349101						
ANR	349680	Symbol	s -> lfe_on		349101						
ANR	349681	Symbol	avctx -> channels		349101						
ANR	349682	Symbol	AC3_CHMODE_STEREO		349101						
ANR	349683	Symbol	s -> channel_mode		349101						
ANR	349684	Symbol	data_size		349101						
ANR	349685	Symbol	AV_CRC_16_ANSI		349101						
ANR	349686	Symbol	* s -> int_output		349101						
ANR	349687	Symbol	FF_ER_CAREFUL		349101						
ANR	349688	Symbol	buf_size		349101						
ANR	349689	Symbol	s -> input_buffer		349101						
ANR	349690	Symbol	& s -> gbc		349101						
ANR	349691	Symbol	AC3_OUTPUT_LFEON		349101						
ANR	349692	Symbol	s -> bit_rate		349101						
ANR	349693	Symbol	* * * s		349101						
ANR	349694	Symbol	avctx -> request_channels		349101						
ANR	349695	Symbol	avctx -> error_resilience		349101						
ANR	349696	Symbol	s -> sample_rate		349101						
ANR	349697	Symbol	* avctx		349101						
ANR	349698	Symbol	avctx -> bit_rate		349101						
ANR	349699	Symbol	NB_BLOCKS		349101						
ANR	349700	Symbol	s -> frame_size		349101						
ANR	349701	Symbol	s -> fbw_channels		349101						
ANR	349702	Symbol	s -> output_mode		349101						
ANR	349703	Symbol	AC3_MAX_FRAME_SIZE		349101						
ANR	349704	Symbol	s -> channels		349101						
ANR	349705	Symbol	s -> int_output		349101						
ANR	349706	Symbol	s -> out_channels		349101						
ANR	349707	Symbol	* * ch		349101						
ANR	349708	Symbol	* * s		349101						
ANR	349709	Symbol	avctx		349101						
ANR	349710	Symbol	blk		349101						
ANR	349711	Symbol	err		349101						
ANR	349712	Symbol	AV_LOG_ERROR		349101						
ANR	349713	Symbol	ch		349101						
ANR	349714	Symbol	i		349101						
ANR	349715	Symbol	out_samples		349101						
ANR	349716	Symbol	ac3_parse_audio_block		349101						
ANR	349717	Symbol	avctx -> priv_data		349101						
ANR	349718	Symbol	avctx -> sample_rate		349101						
ANR	349719	Symbol	AC3_CHMODE_MONO		349101						
ANR	349720	Symbol	buf		349101						
ANR	349721	Symbol	s		349101						
ANR	349722	Symbol	* i		349101						
ANR	349723	Symbol	av_crc		349101						
ANR	349724	Symbol	ac3_parse_header		349101						
ANR	349725	Symbol	* s		349101						
ANR	349726	Symbol	av_crc_get_table		349101						
