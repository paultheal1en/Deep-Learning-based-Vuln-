command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3547245	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_mjpeg_find_marker_1.c								
ANR	3547246	Function	ff_mjpeg_find_marker	1:0:0:2903							
ANR	3547247	FunctionDef	"ff_mjpeg_find_marker (MJpegDecodeContext * s , const uint8_t * * buf_ptr , const uint8_t * buf_end , const uint8_t * * unescaped_buf_ptr , int * unescaped_buf_size)"		3547246	0					
ANR	3547248	CompoundStatement		9:0:236:2903	3547246	0					
ANR	3547249	IdentifierDeclStatement	int start_code ;	11:4:243:257	3547246	0	True				
ANR	3547250	IdentifierDecl	start_code		3547246	0					
ANR	3547251	IdentifierDeclType	int		3547246	0					
ANR	3547252	Identifier	start_code		3547246	1					
ANR	3547253	ExpressionStatement	"start_code = find_marker ( buf_ptr , buf_end )"	13:4:264:306	3547246	1	True				
ANR	3547254	AssignmentExpression	"start_code = find_marker ( buf_ptr , buf_end )"		3547246	0		=			
ANR	3547255	Identifier	start_code		3547246	0					
ANR	3547256	CallExpression	"find_marker ( buf_ptr , buf_end )"		3547246	1					
ANR	3547257	Callee	find_marker		3547246	0					
ANR	3547258	Identifier	find_marker		3547246	0					
ANR	3547259	ArgumentList	buf_ptr		3547246	1					
ANR	3547260	Argument	buf_ptr		3547246	0					
ANR	3547261	Identifier	buf_ptr		3547246	0					
ANR	3547262	Argument	buf_end		3547246	1					
ANR	3547263	Identifier	buf_end		3547246	0					
ANR	3547264	ExpressionStatement	"av_fast_padded_malloc ( & s -> buffer , & s -> buffer_size , buf_end - * buf_ptr )"	17:4:315:385	3547246	2	True				
ANR	3547265	CallExpression	"av_fast_padded_malloc ( & s -> buffer , & s -> buffer_size , buf_end - * buf_ptr )"		3547246	0					
ANR	3547266	Callee	av_fast_padded_malloc		3547246	0					
ANR	3547267	Identifier	av_fast_padded_malloc		3547246	0					
ANR	3547268	ArgumentList	& s -> buffer		3547246	1					
ANR	3547269	Argument	& s -> buffer		3547246	0					
ANR	3547270	UnaryOperationExpression	& s -> buffer		3547246	0					
ANR	3547271	UnaryOperator	&		3547246	0					
ANR	3547272	PtrMemberAccess	s -> buffer		3547246	1					
ANR	3547273	Identifier	s		3547246	0					
ANR	3547274	Identifier	buffer		3547246	1					
ANR	3547275	Argument	& s -> buffer_size		3547246	1					
ANR	3547276	UnaryOperationExpression	& s -> buffer_size		3547246	0					
ANR	3547277	UnaryOperator	&		3547246	0					
ANR	3547278	PtrMemberAccess	s -> buffer_size		3547246	1					
ANR	3547279	Identifier	s		3547246	0					
ANR	3547280	Identifier	buffer_size		3547246	1					
ANR	3547281	Argument	buf_end - * buf_ptr		3547246	2					
ANR	3547282	AdditiveExpression	buf_end - * buf_ptr		3547246	0		-			
ANR	3547283	Identifier	buf_end		3547246	0					
ANR	3547284	UnaryOperationExpression	* buf_ptr		3547246	1					
ANR	3547285	UnaryOperator	*		3547246	0					
ANR	3547286	Identifier	buf_ptr		3547246	1					
ANR	3547287	IfStatement	if ( ! s -> buffer )		3547246	3					
ANR	3547288	Condition	! s -> buffer	19:8:396:405	3547246	0	True				
ANR	3547289	UnaryOperationExpression	! s -> buffer		3547246	0					
ANR	3547290	UnaryOperator	!		3547246	0					
ANR	3547291	PtrMemberAccess	s -> buffer		3547246	1					
ANR	3547292	Identifier	s		3547246	0					
ANR	3547293	Identifier	buffer		3547246	1					
ANR	3547294	ReturnStatement	return AVERROR ( ENOMEM ) ;	21:8:417:439	3547246	1	True				
ANR	3547295	CallExpression	AVERROR ( ENOMEM )		3547246	0					
ANR	3547296	Callee	AVERROR		3547246	0					
ANR	3547297	Identifier	AVERROR		3547246	0					
ANR	3547298	ArgumentList	ENOMEM		3547246	1					
ANR	3547299	Argument	ENOMEM		3547246	0					
ANR	3547300	Identifier	ENOMEM		3547246	0					
ANR	3547301	IfStatement	if ( start_code == SOS && ! s -> ls )		3547246	4					
ANR	3547302	Condition	start_code == SOS && ! s -> ls	27:8:521:547	3547246	0	True				
ANR	3547303	AndExpression	start_code == SOS && ! s -> ls		3547246	0		&&			
ANR	3547304	EqualityExpression	start_code == SOS		3547246	0		==			
ANR	3547305	Identifier	start_code		3547246	0					
ANR	3547306	Identifier	SOS		3547246	1					
ANR	3547307	UnaryOperationExpression	! s -> ls		3547246	1					
ANR	3547308	UnaryOperator	!		3547246	0					
ANR	3547309	PtrMemberAccess	s -> ls		3547246	1					
ANR	3547310	Identifier	s		3547246	0					
ANR	3547311	Identifier	ls		3547246	1					
ANR	3547312	CompoundStatement		23:8:364:388	3547246	1					
ANR	3547313	IdentifierDeclStatement	const uint8_t * src = * buf_ptr ;	29:8:561:590	3547246	0	True				
ANR	3547314	IdentifierDecl	* src = * buf_ptr		3547246	0					
ANR	3547315	IdentifierDeclType	const uint8_t *		3547246	0					
ANR	3547316	Identifier	src		3547246	1					
ANR	3547317	AssignmentExpression	* src = * buf_ptr		3547246	2		=			
ANR	3547318	Identifier	src		3547246	0					
ANR	3547319	UnaryOperationExpression	* buf_ptr		3547246	1					
ANR	3547320	UnaryOperator	*		3547246	0					
ANR	3547321	Identifier	buf_ptr		3547246	1					
ANR	3547322	IdentifierDeclStatement	uint8_t * dst = s -> buffer ;	31:8:601:625	3547246	1	True				
ANR	3547323	IdentifierDecl	* dst = s -> buffer		3547246	0					
ANR	3547324	IdentifierDeclType	uint8_t *		3547246	0					
ANR	3547325	Identifier	dst		3547246	1					
ANR	3547326	AssignmentExpression	* dst = s -> buffer		3547246	2		=			
ANR	3547327	Identifier	dst		3547246	0					
ANR	3547328	PtrMemberAccess	s -> buffer		3547246	1					
ANR	3547329	Identifier	s		3547246	0					
ANR	3547330	Identifier	buffer		3547246	1					
ANR	3547331	WhileStatement	while ( src < buf_end )		3547246	2					
ANR	3547332	Condition	src < buf_end	35:15:645:657	3547246	0	True				
ANR	3547333	RelationalExpression	src < buf_end		3547246	0		<			
ANR	3547334	Identifier	src		3547246	0					
ANR	3547335	Identifier	buf_end		3547246	1					
ANR	3547336	CompoundStatement		29:12:438:458	3547246	1					
ANR	3547337	IdentifierDeclStatement	uint8_t x = * ( src ++ ) ;	37:12:675:695	3547246	0	True				
ANR	3547338	IdentifierDecl	x = * ( src ++ )		3547246	0					
ANR	3547339	IdentifierDeclType	uint8_t		3547246	0					
ANR	3547340	Identifier	x		3547246	1					
ANR	3547341	AssignmentExpression	x = * ( src ++ )		3547246	2		=			
ANR	3547342	Identifier	x		3547246	0					
ANR	3547343	UnaryOperationExpression	* ( src ++ )		3547246	1					
ANR	3547344	UnaryOperator	*		3547246	0					
ANR	3547345	PostIncDecOperationExpression	src ++		3547246	1					
ANR	3547346	Identifier	src		3547246	0					
ANR	3547347	IncDec	++		3547246	1					
ANR	3547348	ExpressionStatement	* ( dst ++ ) = x	41:12:712:724	3547246	1	True				
ANR	3547349	AssignmentExpression	* ( dst ++ ) = x		3547246	0		=			
ANR	3547350	UnaryOperationExpression	* ( dst ++ )		3547246	0					
ANR	3547351	UnaryOperator	*		3547246	0					
ANR	3547352	PostIncDecOperationExpression	dst ++		3547246	1					
ANR	3547353	Identifier	dst		3547246	0					
ANR	3547354	IncDec	++		3547246	1					
ANR	3547355	Identifier	x		3547246	1					
ANR	3547356	IfStatement	if ( s -> avctx -> codec_id != AV_CODEC_ID_THP )		3547246	2					
ANR	3547357	Condition	s -> avctx -> codec_id != AV_CODEC_ID_THP	43:16:743:779	3547246	0	True				
ANR	3547358	EqualityExpression	s -> avctx -> codec_id != AV_CODEC_ID_THP		3547246	0		!=			
ANR	3547359	PtrMemberAccess	s -> avctx -> codec_id		3547246	0					
ANR	3547360	PtrMemberAccess	s -> avctx		3547246	0					
ANR	3547361	Identifier	s		3547246	0					
ANR	3547362	Identifier	avctx		3547246	1					
ANR	3547363	Identifier	codec_id		3547246	1					
ANR	3547364	Identifier	AV_CODEC_ID_THP		3547246	1					
ANR	3547365	CompoundStatement		35:55:545:545	3547246	1					
ANR	3547366	IfStatement	if ( x == 0xff )		3547246	0					
ANR	3547367	Condition	x == 0xff	45:20:805:813	3547246	0	True				
ANR	3547368	EqualityExpression	x == 0xff		3547246	0		==			
ANR	3547369	Identifier	x		3547246	0					
ANR	3547370	PrimaryExpression	0xff		3547246	1					
ANR	3547371	CompoundStatement		37:31:579:579	3547246	1					
ANR	3547372	WhileStatement	while ( src < buf_end && x == 0xff )		3547246	0					
ANR	3547373	Condition	src < buf_end && x == 0xff	47:27:846:871	3547246	0	True				
ANR	3547374	AndExpression	src < buf_end && x == 0xff		3547246	0		&&			
ANR	3547375	RelationalExpression	src < buf_end		3547246	0		<			
ANR	3547376	Identifier	src		3547246	0					
ANR	3547377	Identifier	buf_end		3547246	1					
ANR	3547378	EqualityExpression	x == 0xff		3547246	1		==			
ANR	3547379	Identifier	x		3547246	0					
ANR	3547380	PrimaryExpression	0xff		3547246	1					
ANR	3547381	ExpressionStatement	x = * ( src ++ )	49:24:899:911	3547246	1	True				
ANR	3547382	AssignmentExpression	x = * ( src ++ )		3547246	0		=			
ANR	3547383	Identifier	x		3547246	0					
ANR	3547384	UnaryOperationExpression	* ( src ++ )		3547246	1					
ANR	3547385	UnaryOperator	*		3547246	0					
ANR	3547386	PostIncDecOperationExpression	src ++		3547246	1					
ANR	3547387	Identifier	src		3547246	0					
ANR	3547388	IncDec	++		3547246	1					
ANR	3547389	IfStatement	if ( x >= 0xd0 && x <= 0xd7 )		3547246	1					
ANR	3547390	Condition	x >= 0xd0 && x <= 0xd7	53:24:940:961	3547246	0	True				
ANR	3547391	AndExpression	x >= 0xd0 && x <= 0xd7		3547246	0		&&			
ANR	3547392	RelationalExpression	x >= 0xd0		3547246	0		>=			
ANR	3547393	Identifier	x		3547246	0					
ANR	3547394	PrimaryExpression	0xd0		3547246	1					
ANR	3547395	RelationalExpression	x <= 0xd7		3547246	1		<=			
ANR	3547396	Identifier	x		3547246	0					
ANR	3547397	PrimaryExpression	0xd7		3547246	1					
ANR	3547398	ExpressionStatement	* ( dst ++ ) = x	55:24:989:1001	3547246	1	True				
ANR	3547399	AssignmentExpression	* ( dst ++ ) = x		3547246	0		=			
ANR	3547400	UnaryOperationExpression	* ( dst ++ )		3547246	0					
ANR	3547401	UnaryOperator	*		3547246	0					
ANR	3547402	PostIncDecOperationExpression	dst ++		3547246	1					
ANR	3547403	Identifier	dst		3547246	0					
ANR	3547404	IncDec	++		3547246	1					
ANR	3547405	Identifier	x		3547246	1					
ANR	3547406	ElseStatement	else		3547246	0					
ANR	3547407	IfStatement	if ( x )		3547246	0					
ANR	3547408	Condition	x	57:29:1033:1033	3547246	0	True				
ANR	3547409	Identifier	x		3547246	0					
ANR	3547410	BreakStatement	break ;	59:24:1061:1066	3547246	1	True				
ANR	3547411	ExpressionStatement	* unescaped_buf_ptr = s -> buffer	67:8:1122:1153	3547246	3	True				
ANR	3547412	AssignmentExpression	* unescaped_buf_ptr = s -> buffer		3547246	0		=			
ANR	3547413	UnaryOperationExpression	* unescaped_buf_ptr		3547246	0					
ANR	3547414	UnaryOperator	*		3547246	0					
ANR	3547415	Identifier	unescaped_buf_ptr		3547246	1					
ANR	3547416	PtrMemberAccess	s -> buffer		3547246	1					
ANR	3547417	Identifier	s		3547246	0					
ANR	3547418	Identifier	buffer		3547246	1					
ANR	3547419	ExpressionStatement	* unescaped_buf_size = dst - s -> buffer	69:8:1164:1201	3547246	4	True				
ANR	3547420	AssignmentExpression	* unescaped_buf_size = dst - s -> buffer		3547246	0		=			
ANR	3547421	UnaryOperationExpression	* unescaped_buf_size		3547246	0					
ANR	3547422	UnaryOperator	*		3547246	0					
ANR	3547423	Identifier	unescaped_buf_size		3547246	1					
ANR	3547424	AdditiveExpression	dst - s -> buffer		3547246	1		-			
ANR	3547425	Identifier	dst		3547246	0					
ANR	3547426	PtrMemberAccess	s -> buffer		3547246	1					
ANR	3547427	Identifier	s		3547246	0					
ANR	3547428	Identifier	buffer		3547246	1					
ANR	3547429	ExpressionStatement	"memset ( s -> buffer + * unescaped_buf_size , 0 , AV_INPUT_BUFFER_PADDING_SIZE )"	71:8:1212:1300	3547246	5	True				
ANR	3547430	CallExpression	"memset ( s -> buffer + * unescaped_buf_size , 0 , AV_INPUT_BUFFER_PADDING_SIZE )"		3547246	0					
ANR	3547431	Callee	memset		3547246	0					
ANR	3547432	Identifier	memset		3547246	0					
ANR	3547433	ArgumentList	s -> buffer + * unescaped_buf_size		3547246	1					
ANR	3547434	Argument	s -> buffer + * unescaped_buf_size		3547246	0					
ANR	3547435	AdditiveExpression	s -> buffer + * unescaped_buf_size		3547246	0		+			
ANR	3547436	PtrMemberAccess	s -> buffer		3547246	0					
ANR	3547437	Identifier	s		3547246	0					
ANR	3547438	Identifier	buffer		3547246	1					
ANR	3547439	UnaryOperationExpression	* unescaped_buf_size		3547246	1					
ANR	3547440	UnaryOperator	*		3547246	0					
ANR	3547441	Identifier	unescaped_buf_size		3547246	1					
ANR	3547442	Argument	0		3547246	1					
ANR	3547443	PrimaryExpression	0		3547246	0					
ANR	3547444	Argument	AV_INPUT_BUFFER_PADDING_SIZE		3547246	2					
ANR	3547445	Identifier	AV_INPUT_BUFFER_PADDING_SIZE		3547246	0					
ANR	3547446	Statement	av_log	77:8:1313:1318	3547246	6	True				
ANR	3547447	Statement	(	77:14:1319:1319	3547246	7	True				
ANR	3547448	Statement	s	77:15:1320:1320	3547246	8	True				
ANR	3547449	Statement	->	77:16:1321:1322	3547246	9	True				
ANR	3547450	Statement	avctx	77:18:1323:1327	3547246	10	True				
ANR	3547451	Statement	","	77:23:1328:1328	3547246	11	True				
ANR	3547452	Statement	AV_LOG_DEBUG	77:25:1330:1341	3547246	12	True				
ANR	3547453	Statement	","	77:37:1342:1342	3547246	13	True				
ANR	3547454	Statement	"""escaping removed %"""	77:39:1344:1363	3547246	14	True				
ANR	3547455	Statement	PTRDIFF_SPECIFIER	77:59:1364:1380	3547246	15	True				
ANR	3547456	Statement	""" bytes\\n"""	77:76:1381:1390	3547246	16	True				
ANR	3547457	Statement	","	77:86:1391:1391	3547246	17	True				
ANR	3547458	Statement	(	79:15:1409:1409	3547246	18	True				
ANR	3547459	Statement	buf_end	79:16:1410:1416	3547246	19	True				
ANR	3547460	Statement	-	79:24:1418:1418	3547246	20	True				
ANR	3547461	Statement	*	79:26:1420:1420	3547246	21	True				
ANR	3547462	Statement	buf_ptr	79:27:1421:1427	3547246	22	True				
ANR	3547463	Statement	)	79:34:1428:1428	3547246	23	True				
ANR	3547464	Statement	-	79:36:1430:1430	3547246	24	True				
ANR	3547465	Statement	(	79:38:1432:1432	3547246	25	True				
ANR	3547466	Statement	dst	79:39:1433:1435	3547246	26	True				
ANR	3547467	Statement	-	79:43:1437:1437	3547246	27	True				
ANR	3547468	Statement	s	79:45:1439:1439	3547246	28	True				
ANR	3547469	Statement	->	79:46:1440:1441	3547246	29	True				
ANR	3547470	Statement	buffer	79:48:1442:1447	3547246	30	True				
ANR	3547471	Statement	)	79:54:1448:1448	3547246	31	True				
ANR	3547472	Statement	)	79:55:1449:1449	3547246	32	True				
ANR	3547473	ExpressionStatement		79:56:1450:1450	3547246	33	True				
ANR	3547474	ElseStatement	else		3547246	0					
ANR	3547475	IfStatement	if ( start_code == SOS && s -> ls )		3547246	0					
ANR	3547476	Condition	start_code == SOS && s -> ls	81:15:1468:1493	3547246	0	True				
ANR	3547477	AndExpression	start_code == SOS && s -> ls		3547246	0		&&			
ANR	3547478	EqualityExpression	start_code == SOS		3547246	0		==			
ANR	3547479	Identifier	start_code		3547246	0					
ANR	3547480	Identifier	SOS		3547246	1					
ANR	3547481	PtrMemberAccess	s -> ls		3547246	1					
ANR	3547482	Identifier	s		3547246	0					
ANR	3547483	Identifier	ls		3547246	1					
ANR	3547484	CompoundStatement		83:8:1401:1417	3547246	1					
ANR	3547485	IdentifierDeclStatement	const uint8_t * src = * buf_ptr ;	83:8:1507:1536	3547246	0	True				
ANR	3547486	IdentifierDecl	* src = * buf_ptr		3547246	0					
ANR	3547487	IdentifierDeclType	const uint8_t *		3547246	0					
ANR	3547488	Identifier	src		3547246	1					
ANR	3547489	AssignmentExpression	* src = * buf_ptr		3547246	2		=			
ANR	3547490	Identifier	src		3547246	0					
ANR	3547491	UnaryOperationExpression	* buf_ptr		3547246	1					
ANR	3547492	UnaryOperator	*		3547246	0					
ANR	3547493	Identifier	buf_ptr		3547246	1					
ANR	3547494	IdentifierDeclStatement	uint8_t * dst = s -> buffer ;	85:8:1547:1572	3547246	1	True				
ANR	3547495	IdentifierDecl	* dst = s -> buffer		3547246	0					
ANR	3547496	IdentifierDeclType	uint8_t *		3547246	0					
ANR	3547497	Identifier	dst		3547246	1					
ANR	3547498	AssignmentExpression	* dst = s -> buffer		3547246	2		=			
ANR	3547499	Identifier	dst		3547246	0					
ANR	3547500	PtrMemberAccess	s -> buffer		3547246	1					
ANR	3547501	Identifier	s		3547246	0					
ANR	3547502	Identifier	buffer		3547246	1					
ANR	3547503	IdentifierDeclStatement	int bit_count = 0 ;	87:8:1583:1600	3547246	2	True				
ANR	3547504	IdentifierDecl	bit_count = 0		3547246	0					
ANR	3547505	IdentifierDeclType	int		3547246	0					
ANR	3547506	Identifier	bit_count		3547246	1					
ANR	3547507	AssignmentExpression	bit_count = 0		3547246	2		=			
ANR	3547508	Identifier	bit_count		3547246	0					
ANR	3547509	PrimaryExpression	0		3547246	1					
ANR	3547510	IdentifierDeclStatement	"int t = 0 , b = 0 ;"	89:8:1611:1627	3547246	3	True				
ANR	3547511	IdentifierDecl	t = 0		3547246	0					
ANR	3547512	IdentifierDeclType	int		3547246	0					
ANR	3547513	Identifier	t		3547246	1					
ANR	3547514	AssignmentExpression	t = 0		3547246	2		=			
ANR	3547515	Identifier	t		3547246	0					
ANR	3547516	PrimaryExpression	0		3547246	1					
ANR	3547517	IdentifierDecl	b = 0		3547246	1					
ANR	3547518	IdentifierDeclType	int		3547246	0					
ANR	3547519	Identifier	b		3547246	1					
ANR	3547520	AssignmentExpression	b = 0		3547246	2		=			
ANR	3547521	Identifier	b		3547246	0					
ANR	3547522	PrimaryExpression	0		3547246	1					
ANR	3547523	IdentifierDeclStatement	PutBitContext pb ;	91:8:1638:1654	3547246	4	True				
ANR	3547524	IdentifierDecl	pb		3547246	0					
ANR	3547525	IdentifierDeclType	PutBitContext		3547246	0					
ANR	3547526	Identifier	pb		3547246	1					
ANR	3547527	WhileStatement	while ( src + t < buf_end )		3547246	5					
ANR	3547528	Condition	src + t < buf_end	97:15:1701:1717	3547246	0	True				
ANR	3547529	RelationalExpression	src + t < buf_end		3547246	0		<			
ANR	3547530	AdditiveExpression	src + t		3547246	0		+			
ANR	3547531	Identifier	src		3547246	0					
ANR	3547532	Identifier	t		3547246	1					
ANR	3547533	Identifier	buf_end		3547246	1					
ANR	3547534	CompoundStatement		91:12:1498:1518	3547246	1					
ANR	3547535	IdentifierDeclStatement	uint8_t x = src [ t ++ ] ;	99:12:1735:1755	3547246	0	True				
ANR	3547536	IdentifierDecl	x = src [ t ++ ]		3547246	0					
ANR	3547537	IdentifierDeclType	uint8_t		3547246	0					
ANR	3547538	Identifier	x		3547246	1					
ANR	3547539	AssignmentExpression	x = src [ t ++ ]		3547246	2		=			
ANR	3547540	Identifier	x		3547246	0					
ANR	3547541	ArrayIndexing	src [ t ++ ]		3547246	1					
ANR	3547542	Identifier	src		3547246	0					
ANR	3547543	PostIncDecOperationExpression	t ++		3547246	1					
ANR	3547544	Identifier	t		3547246	0					
ANR	3547545	IncDec	++		3547246	1					
ANR	3547546	IfStatement	if ( x == 0xff )		3547246	1					
ANR	3547547	Condition	x == 0xff	101:16:1774:1782	3547246	0	True				
ANR	3547548	EqualityExpression	x == 0xff		3547246	0		==			
ANR	3547549	Identifier	x		3547246	0					
ANR	3547550	PrimaryExpression	0xff		3547246	1					
ANR	3547551	CompoundStatement		93:27:1548:1548	3547246	1					
ANR	3547552	WhileStatement	while ( ( src + t < buf_end ) && x == 0xff )		3547246	0					
ANR	3547553	Condition	( src + t < buf_end ) && x == 0xff	103:23:1811:1842	3547246	0	True				
ANR	3547554	AndExpression	( src + t < buf_end ) && x == 0xff		3547246	0		&&			
ANR	3547555	RelationalExpression	src + t < buf_end		3547246	0		<			
ANR	3547556	AdditiveExpression	src + t		3547246	0		+			
ANR	3547557	Identifier	src		3547246	0					
ANR	3547558	Identifier	t		3547246	1					
ANR	3547559	Identifier	buf_end		3547246	1					
ANR	3547560	EqualityExpression	x == 0xff		3547246	1		==			
ANR	3547561	Identifier	x		3547246	0					
ANR	3547562	PrimaryExpression	0xff		3547246	1					
ANR	3547563	ExpressionStatement	x = src [ t ++ ]	105:20:1866:1878	3547246	1	True				
ANR	3547564	AssignmentExpression	x = src [ t ++ ]		3547246	0		=			
ANR	3547565	Identifier	x		3547246	0					
ANR	3547566	ArrayIndexing	src [ t ++ ]		3547246	1					
ANR	3547567	Identifier	src		3547246	0					
ANR	3547568	PostIncDecOperationExpression	t ++		3547246	1					
ANR	3547569	Identifier	t		3547246	0					
ANR	3547570	IncDec	++		3547246	1					
ANR	3547571	IfStatement	if ( x & 0x80 )		3547246	1					
ANR	3547572	Condition	x & 0x80	107:20:1901:1908	3547246	0	True				
ANR	3547573	BitAndExpression	x & 0x80		3547246	0		&			
ANR	3547574	Identifier	x		3547246	0					
ANR	3547575	PrimaryExpression	0x80		3547246	1					
ANR	3547576	CompoundStatement		99:30:1674:1674	3547246	1					
ANR	3547577	ExpressionStatement	"t -= FFMIN ( 2 , t )"	109:20:1934:1950	3547246	0	True				
ANR	3547578	AssignmentExpression	"t -= FFMIN ( 2 , t )"		3547246	0		-=			
ANR	3547579	Identifier	t		3547246	0					
ANR	3547580	CallExpression	"FFMIN ( 2 , t )"		3547246	1					
ANR	3547581	Callee	FFMIN		3547246	0					
ANR	3547582	Identifier	FFMIN		3547246	0					
ANR	3547583	ArgumentList	2		3547246	1					
ANR	3547584	Argument	2		3547246	0					
ANR	3547585	PrimaryExpression	2		3547246	0					
ANR	3547586	Argument	t		3547246	1					
ANR	3547587	Identifier	t		3547246	0					
ANR	3547588	BreakStatement	break ;	111:20:1973:1978	3547246	1	True				
ANR	3547589	ExpressionStatement	bit_count = t * 8	119:8:2034:2051	3547246	6	True				
ANR	3547590	AssignmentExpression	bit_count = t * 8		3547246	0		=			
ANR	3547591	Identifier	bit_count		3547246	0					
ANR	3547592	MultiplicativeExpression	t * 8		3547246	1		*			
ANR	3547593	Identifier	t		3547246	0					
ANR	3547594	PrimaryExpression	8		3547246	1					
ANR	3547595	ExpressionStatement	"init_put_bits ( & pb , dst , t )"	121:8:2062:2088	3547246	7	True				
ANR	3547596	CallExpression	"init_put_bits ( & pb , dst , t )"		3547246	0					
ANR	3547597	Callee	init_put_bits		3547246	0					
ANR	3547598	Identifier	init_put_bits		3547246	0					
ANR	3547599	ArgumentList	& pb		3547246	1					
ANR	3547600	Argument	& pb		3547246	0					
ANR	3547601	UnaryOperationExpression	& pb		3547246	0					
ANR	3547602	UnaryOperator	&		3547246	0					
ANR	3547603	Identifier	pb		3547246	1					
ANR	3547604	Argument	dst		3547246	1					
ANR	3547605	Identifier	dst		3547246	0					
ANR	3547606	Argument	t		3547246	2					
ANR	3547607	Identifier	t		3547246	0					
ANR	3547608	WhileStatement	while ( b < t )		3547246	8					
ANR	3547609	Condition	b < t	127:15:2142:2146	3547246	0	True				
ANR	3547610	RelationalExpression	b < t		3547246	0		<			
ANR	3547611	Identifier	b		3547246	0					
ANR	3547612	Identifier	t		3547246	1					
ANR	3547613	CompoundStatement		121:12:1927:1947	3547246	1					
ANR	3547614	IdentifierDeclStatement	uint8_t x = src [ b ++ ] ;	129:12:2164:2184	3547246	0	True				
ANR	3547615	IdentifierDecl	x = src [ b ++ ]		3547246	0					
ANR	3547616	IdentifierDeclType	uint8_t		3547246	0					
ANR	3547617	Identifier	x		3547246	1					
ANR	3547618	AssignmentExpression	x = src [ b ++ ]		3547246	2		=			
ANR	3547619	Identifier	x		3547246	0					
ANR	3547620	ArrayIndexing	src [ b ++ ]		3547246	1					
ANR	3547621	Identifier	src		3547246	0					
ANR	3547622	PostIncDecOperationExpression	b ++		3547246	1					
ANR	3547623	Identifier	b		3547246	0					
ANR	3547624	IncDec	++		3547246	1					
ANR	3547625	ExpressionStatement	"put_bits ( & pb , 8 , x )"	131:12:2199:2218	3547246	1	True				
ANR	3547626	CallExpression	"put_bits ( & pb , 8 , x )"		3547246	0					
ANR	3547627	Callee	put_bits		3547246	0					
ANR	3547628	Identifier	put_bits		3547246	0					
ANR	3547629	ArgumentList	& pb		3547246	1					
ANR	3547630	Argument	& pb		3547246	0					
ANR	3547631	UnaryOperationExpression	& pb		3547246	0					
ANR	3547632	UnaryOperator	&		3547246	0					
ANR	3547633	Identifier	pb		3547246	1					
ANR	3547634	Argument	8		3547246	1					
ANR	3547635	PrimaryExpression	8		3547246	0					
ANR	3547636	Argument	x		3547246	2					
ANR	3547637	Identifier	x		3547246	0					
ANR	3547638	IfStatement	if ( x == 0xFF )		3547246	2					
ANR	3547639	Condition	x == 0xFF	133:16:2237:2245	3547246	0	True				
ANR	3547640	EqualityExpression	x == 0xFF		3547246	0		==			
ANR	3547641	Identifier	x		3547246	0					
ANR	3547642	PrimaryExpression	0xFF		3547246	1					
ANR	3547643	CompoundStatement		125:27:2011:2011	3547246	1					
ANR	3547644	ExpressionStatement	x = src [ b ++ ]	135:16:2267:2279	3547246	0	True				
ANR	3547645	AssignmentExpression	x = src [ b ++ ]		3547246	0		=			
ANR	3547646	Identifier	x		3547246	0					
ANR	3547647	ArrayIndexing	src [ b ++ ]		3547246	1					
ANR	3547648	Identifier	src		3547246	0					
ANR	3547649	PostIncDecOperationExpression	b ++		3547246	1					
ANR	3547650	Identifier	b		3547246	0					
ANR	3547651	IncDec	++		3547246	1					
ANR	3547652	IfStatement	if ( x & 0x80 )		3547246	1					
ANR	3547653	Condition	x & 0x80	137:20:2302:2309	3547246	0	True				
ANR	3547654	BitAndExpression	x & 0x80		3547246	0		&			
ANR	3547655	Identifier	x		3547246	0					
ANR	3547656	PrimaryExpression	0x80		3547246	1					
ANR	3547657	CompoundStatement		129:30:2075:2075	3547246	1					
ANR	3547658	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_WARNING , ""Invalid escape sequence\\n"" )"	139:20:2335:2396	3547246	0	True				
ANR	3547659	CallExpression	"av_log ( s -> avctx , AV_LOG_WARNING , ""Invalid escape sequence\\n"" )"		3547246	0					
ANR	3547660	Callee	av_log		3547246	0					
ANR	3547661	Identifier	av_log		3547246	0					
ANR	3547662	ArgumentList	s -> avctx		3547246	1					
ANR	3547663	Argument	s -> avctx		3547246	0					
ANR	3547664	PtrMemberAccess	s -> avctx		3547246	0					
ANR	3547665	Identifier	s		3547246	0					
ANR	3547666	Identifier	avctx		3547246	1					
ANR	3547667	Argument	AV_LOG_WARNING		3547246	1					
ANR	3547668	Identifier	AV_LOG_WARNING		3547246	0					
ANR	3547669	Argument	"""Invalid escape sequence\\n"""		3547246	2					
ANR	3547670	PrimaryExpression	"""Invalid escape sequence\\n"""		3547246	0					
ANR	3547671	ExpressionStatement	x &= 0x7f	141:20:2419:2428	3547246	1	True				
ANR	3547672	AssignmentExpression	x &= 0x7f		3547246	0		&=			
ANR	3547673	Identifier	x		3547246	0					
ANR	3547674	PrimaryExpression	0x7f		3547246	1					
ANR	3547675	ExpressionStatement	"put_bits ( & pb , 7 , x )"	145:16:2466:2485	3547246	2	True				
ANR	3547676	CallExpression	"put_bits ( & pb , 7 , x )"		3547246	0					
ANR	3547677	Callee	put_bits		3547246	0					
ANR	3547678	Identifier	put_bits		3547246	0					
ANR	3547679	ArgumentList	& pb		3547246	1					
ANR	3547680	Argument	& pb		3547246	0					
ANR	3547681	UnaryOperationExpression	& pb		3547246	0					
ANR	3547682	UnaryOperator	&		3547246	0					
ANR	3547683	Identifier	pb		3547246	1					
ANR	3547684	Argument	7		3547246	1					
ANR	3547685	PrimaryExpression	7		3547246	0					
ANR	3547686	Argument	x		3547246	2					
ANR	3547687	Identifier	x		3547246	0					
ANR	3547688	ExpressionStatement	bit_count --	147:16:2504:2515	3547246	3	True				
ANR	3547689	PostIncDecOperationExpression	bit_count --		3547246	0					
ANR	3547690	Identifier	bit_count		3547246	0					
ANR	3547691	IncDec	--		3547246	1					
ANR	3547692	ExpressionStatement	flush_put_bits ( & pb )	153:8:2552:2571	3547246	9	True				
ANR	3547693	CallExpression	flush_put_bits ( & pb )		3547246	0					
ANR	3547694	Callee	flush_put_bits		3547246	0					
ANR	3547695	Identifier	flush_put_bits		3547246	0					
ANR	3547696	ArgumentList	& pb		3547246	1					
ANR	3547697	Argument	& pb		3547246	0					
ANR	3547698	UnaryOperationExpression	& pb		3547246	0					
ANR	3547699	UnaryOperator	&		3547246	0					
ANR	3547700	Identifier	pb		3547246	1					
ANR	3547701	ExpressionStatement	* unescaped_buf_ptr = dst	157:8:2584:2609	3547246	10	True				
ANR	3547702	AssignmentExpression	* unescaped_buf_ptr = dst		3547246	0		=			
ANR	3547703	UnaryOperationExpression	* unescaped_buf_ptr		3547246	0					
ANR	3547704	UnaryOperator	*		3547246	0					
ANR	3547705	Identifier	unescaped_buf_ptr		3547246	1					
ANR	3547706	Identifier	dst		3547246	1					
ANR	3547707	ExpressionStatement	* unescaped_buf_size = ( bit_count + 7 ) >> 3	159:8:2620:2662	3547246	11	True				
ANR	3547708	AssignmentExpression	* unescaped_buf_size = ( bit_count + 7 ) >> 3		3547246	0		=			
ANR	3547709	UnaryOperationExpression	* unescaped_buf_size		3547246	0					
ANR	3547710	UnaryOperator	*		3547246	0					
ANR	3547711	Identifier	unescaped_buf_size		3547246	1					
ANR	3547712	ShiftExpression	( bit_count + 7 ) >> 3		3547246	1		>>			
ANR	3547713	AdditiveExpression	bit_count + 7		3547246	0		+			
ANR	3547714	Identifier	bit_count		3547246	0					
ANR	3547715	PrimaryExpression	7		3547246	1					
ANR	3547716	PrimaryExpression	3		3547246	1					
ANR	3547717	ExpressionStatement	"memset ( s -> buffer + * unescaped_buf_size , 0 , AV_INPUT_BUFFER_PADDING_SIZE )"	161:8:2673:2761	3547246	12	True				
ANR	3547718	CallExpression	"memset ( s -> buffer + * unescaped_buf_size , 0 , AV_INPUT_BUFFER_PADDING_SIZE )"		3547246	0					
ANR	3547719	Callee	memset		3547246	0					
ANR	3547720	Identifier	memset		3547246	0					
ANR	3547721	ArgumentList	s -> buffer + * unescaped_buf_size		3547246	1					
ANR	3547722	Argument	s -> buffer + * unescaped_buf_size		3547246	0					
ANR	3547723	AdditiveExpression	s -> buffer + * unescaped_buf_size		3547246	0		+			
ANR	3547724	PtrMemberAccess	s -> buffer		3547246	0					
ANR	3547725	Identifier	s		3547246	0					
ANR	3547726	Identifier	buffer		3547246	1					
ANR	3547727	UnaryOperationExpression	* unescaped_buf_size		3547246	1					
ANR	3547728	UnaryOperator	*		3547246	0					
ANR	3547729	Identifier	unescaped_buf_size		3547246	1					
ANR	3547730	Argument	0		3547246	1					
ANR	3547731	PrimaryExpression	0		3547246	0					
ANR	3547732	Argument	AV_INPUT_BUFFER_PADDING_SIZE		3547246	2					
ANR	3547733	Identifier	AV_INPUT_BUFFER_PADDING_SIZE		3547246	0					
ANR	3547734	ElseStatement	else		3547246	0					
ANR	3547735	CompoundStatement		157:11:2538:2538	3547246	0					
ANR	3547736	ExpressionStatement	* unescaped_buf_ptr = * buf_ptr	167:8:2786:2816	3547246	0	True				
ANR	3547737	AssignmentExpression	* unescaped_buf_ptr = * buf_ptr		3547246	0		=			
ANR	3547738	UnaryOperationExpression	* unescaped_buf_ptr		3547246	0					
ANR	3547739	UnaryOperator	*		3547246	0					
ANR	3547740	Identifier	unescaped_buf_ptr		3547246	1					
ANR	3547741	UnaryOperationExpression	* buf_ptr		3547246	1					
ANR	3547742	UnaryOperator	*		3547246	0					
ANR	3547743	Identifier	buf_ptr		3547246	1					
ANR	3547744	ExpressionStatement	* unescaped_buf_size = buf_end - * buf_ptr	169:8:2827:2867	3547246	1	True				
ANR	3547745	AssignmentExpression	* unescaped_buf_size = buf_end - * buf_ptr		3547246	0		=			
ANR	3547746	UnaryOperationExpression	* unescaped_buf_size		3547246	0					
ANR	3547747	UnaryOperator	*		3547246	0					
ANR	3547748	Identifier	unescaped_buf_size		3547246	1					
ANR	3547749	AdditiveExpression	buf_end - * buf_ptr		3547246	1		-			
ANR	3547750	Identifier	buf_end		3547246	0					
ANR	3547751	UnaryOperationExpression	* buf_ptr		3547246	1					
ANR	3547752	UnaryOperator	*		3547246	0					
ANR	3547753	Identifier	buf_ptr		3547246	1					
ANR	3547754	ReturnStatement	return start_code ;	175:4:2883:2900	3547246	5	True				
ANR	3547755	Identifier	start_code		3547246	0					
ANR	3547756	ReturnType	int		3547246	1					
ANR	3547757	Identifier	ff_mjpeg_find_marker		3547246	2					
ANR	3547758	ParameterList	"MJpegDecodeContext * s , const uint8_t * * buf_ptr , const uint8_t * buf_end , const uint8_t * * unescaped_buf_ptr , int * unescaped_buf_size"		3547246	3					
ANR	3547759	Parameter	MJpegDecodeContext * s	1:25:25:45	3547246	0	True				
ANR	3547760	ParameterType	MJpegDecodeContext *		3547246	0					
ANR	3547761	Identifier	s		3547246	1					
ANR	3547762	Parameter	const uint8_t * * buf_ptr	3:25:74:96	3547246	1	True				
ANR	3547763	ParameterType	const uint8_t * *		3547246	0					
ANR	3547764	Identifier	buf_ptr		3547246	1					
ANR	3547765	Parameter	const uint8_t * buf_end	3:50:99:120	3547246	2	True				
ANR	3547766	ParameterType	const uint8_t *		3547246	0					
ANR	3547767	Identifier	buf_end		3547246	1					
ANR	3547768	Parameter	const uint8_t * * unescaped_buf_ptr	5:25:149:181	3547246	3	True				
ANR	3547769	ParameterType	const uint8_t * *		3547246	0					
ANR	3547770	Identifier	unescaped_buf_ptr		3547246	1					
ANR	3547771	Parameter	int * unescaped_buf_size	7:25:210:232	3547246	4	True				
ANR	3547772	ParameterType	int *		3547246	0					
ANR	3547773	Identifier	unescaped_buf_size		3547246	1					
ANR	3547774	CFGEntryNode	ENTRY		3547246		True				
ANR	3547775	CFGExitNode	EXIT		3547246		True				
ANR	3547776	Symbol	ENOMEM		3547246						
ANR	3547777	Symbol	dst		3547246						
ANR	3547778	Symbol	unescaped_buf_size		3547246						
ANR	3547779	Symbol	s -> avctx -> codec_id		3547246						
ANR	3547780	Symbol	unescaped_buf_ptr		3547246						
ANR	3547781	Symbol	FFMIN		3547246						
ANR	3547782	Symbol	AV_INPUT_BUFFER_PADDING_SIZE		3547246						
ANR	3547783	Symbol	* src		3547246						
ANR	3547784	Symbol	& s -> buffer_size		3547246						
ANR	3547785	Symbol	find_marker		3547246						
ANR	3547786	Symbol	* * s		3547246						
ANR	3547787	Symbol	buf_end		3547246						
ANR	3547788	Symbol	AV_CODEC_ID_THP		3547246						
ANR	3547789	Symbol	start_code		3547246						
ANR	3547790	Symbol	* buf_ptr		3547246						
ANR	3547791	Symbol	* s -> avctx		3547246						
ANR	3547792	Symbol	b		3547246						
ANR	3547793	Symbol	* unescaped_buf_ptr		3547246						
ANR	3547794	Symbol	* ( src ++ )		3547246						
ANR	3547795	Symbol	src		3547246						
ANR	3547796	Symbol	* unescaped_buf_size		3547246						
ANR	3547797	Symbol	& s -> buffer		3547246						
ANR	3547798	Symbol	buf_ptr		3547246						
ANR	3547799	Symbol	pb		3547246						
ANR	3547800	Symbol	s		3547246						
ANR	3547801	Symbol	t		3547246						
ANR	3547802	Symbol	SOS		3547246						
ANR	3547803	Symbol	s -> ls		3547246						
ANR	3547804	Symbol	x		3547246						
ANR	3547805	Symbol	bit_count		3547246						
ANR	3547806	Symbol	AVERROR		3547246						
ANR	3547807	Symbol	* ( dst ++ )		3547246						
ANR	3547808	Symbol	s -> avctx		3547246						
ANR	3547809	Symbol	AV_LOG_WARNING		3547246						
ANR	3547810	Symbol	* s		3547246						
ANR	3547811	Symbol	& pb		3547246						
ANR	3547812	Symbol	s -> buffer		3547246						
