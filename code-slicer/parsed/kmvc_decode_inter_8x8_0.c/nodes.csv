command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5075080	File	/home/p4ultr4n/workplace/ReVeal/raw_code/kmvc_decode_inter_8x8_0.c								
ANR	5075081	Function	kmvc_decode_inter_8x8	1:0:0:5268							
ANR	5075082	FunctionDef	"kmvc_decode_inter_8x8 (KmvcContext * ctx , int w , int h)"		5075081	0					
ANR	5075083	CompoundStatement		3:0:67:5268	5075081	0					
ANR	5075084	IdentifierDeclStatement	BitBuf bb ;	5:4:74:83	5075081	0	True				
ANR	5075085	IdentifierDecl	bb		5075081	0					
ANR	5075086	IdentifierDeclType	BitBuf		5075081	0					
ANR	5075087	Identifier	bb		5075081	1					
ANR	5075088	IdentifierDeclStatement	"int res , val ;"	7:4:90:102	5075081	1	True				
ANR	5075089	IdentifierDecl	res		5075081	0					
ANR	5075090	IdentifierDeclType	int		5075081	0					
ANR	5075091	Identifier	res		5075081	1					
ANR	5075092	IdentifierDecl	val		5075081	1					
ANR	5075093	IdentifierDeclType	int		5075081	0					
ANR	5075094	Identifier	val		5075081	1					
ANR	5075095	IdentifierDeclStatement	"int i , j ;"	9:4:109:117	5075081	2	True				
ANR	5075096	IdentifierDecl	i		5075081	0					
ANR	5075097	IdentifierDeclType	int		5075081	0					
ANR	5075098	Identifier	i		5075081	1					
ANR	5075099	IdentifierDecl	j		5075081	1					
ANR	5075100	IdentifierDeclType	int		5075081	0					
ANR	5075101	Identifier	j		5075081	1					
ANR	5075102	IdentifierDeclStatement	"int bx , by ;"	11:4:124:134	5075081	3	True				
ANR	5075103	IdentifierDecl	bx		5075081	0					
ANR	5075104	IdentifierDeclType	int		5075081	0					
ANR	5075105	Identifier	bx		5075081	1					
ANR	5075106	IdentifierDecl	by		5075081	1					
ANR	5075107	IdentifierDeclType	int		5075081	0					
ANR	5075108	Identifier	by		5075081	1					
ANR	5075109	IdentifierDeclStatement	"int l0x , l1x , l0y , l1y ;"	13:4:141:163	5075081	4	True				
ANR	5075110	IdentifierDecl	l0x		5075081	0					
ANR	5075111	IdentifierDeclType	int		5075081	0					
ANR	5075112	Identifier	l0x		5075081	1					
ANR	5075113	IdentifierDecl	l1x		5075081	1					
ANR	5075114	IdentifierDeclType	int		5075081	0					
ANR	5075115	Identifier	l1x		5075081	1					
ANR	5075116	IdentifierDecl	l0y		5075081	2					
ANR	5075117	IdentifierDeclType	int		5075081	0					
ANR	5075118	Identifier	l0y		5075081	1					
ANR	5075119	IdentifierDecl	l1y		5075081	3					
ANR	5075120	IdentifierDeclType	int		5075081	0					
ANR	5075121	Identifier	l1y		5075081	1					
ANR	5075122	IdentifierDeclStatement	"int mx , my ;"	15:4:170:180	5075081	5	True				
ANR	5075123	IdentifierDecl	mx		5075081	0					
ANR	5075124	IdentifierDeclType	int		5075081	0					
ANR	5075125	Identifier	mx		5075081	1					
ANR	5075126	IdentifierDecl	my		5075081	1					
ANR	5075127	IdentifierDeclType	int		5075081	0					
ANR	5075128	Identifier	my		5075081	1					
ANR	5075129	ExpressionStatement	"kmvc_init_getbits ( bb , & ctx -> g )"	19:4:189:219	5075081	6	True				
ANR	5075130	CallExpression	"kmvc_init_getbits ( bb , & ctx -> g )"		5075081	0					
ANR	5075131	Callee	kmvc_init_getbits		5075081	0					
ANR	5075132	Identifier	kmvc_init_getbits		5075081	0					
ANR	5075133	ArgumentList	bb		5075081	1					
ANR	5075134	Argument	bb		5075081	0					
ANR	5075135	Identifier	bb		5075081	0					
ANR	5075136	Argument	& ctx -> g		5075081	1					
ANR	5075137	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075138	UnaryOperator	&		5075081	0					
ANR	5075139	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075140	Identifier	ctx		5075081	0					
ANR	5075141	Identifier	g		5075081	1					
ANR	5075142	ForStatement	for ( by = 0 ; by < h ; by += 8 )		5075081	7					
ANR	5075143	ForInit	by = 0 ;	23:9:233:239	5075081	0	True				
ANR	5075144	AssignmentExpression	by = 0		5075081	0		=			
ANR	5075145	Identifier	by		5075081	0					
ANR	5075146	PrimaryExpression	0		5075081	1					
ANR	5075147	Condition	by < h	23:17:241:246	5075081	1	True				
ANR	5075148	RelationalExpression	by < h		5075081	0		<			
ANR	5075149	Identifier	by		5075081	0					
ANR	5075150	Identifier	h		5075081	1					
ANR	5075151	AssignmentExpression	by += 8	23:25:249:255	5075081	2	True	+=			
ANR	5075152	Identifier	by		5075081	0					
ANR	5075153	PrimaryExpression	8		5075081	1					
ANR	5075154	ForStatement	for ( bx = 0 ; bx < w ; bx += 8 )		5075081	3					
ANR	5075155	ForInit	bx = 0 ;	25:13:272:278	5075081	0	True				
ANR	5075156	AssignmentExpression	bx = 0		5075081	0		=			
ANR	5075157	Identifier	bx		5075081	0					
ANR	5075158	PrimaryExpression	0		5075081	1					
ANR	5075159	Condition	bx < w	25:21:280:285	5075081	1	True				
ANR	5075160	RelationalExpression	bx < w		5075081	0		<			
ANR	5075161	Identifier	bx		5075081	0					
ANR	5075162	Identifier	w		5075081	1					
ANR	5075163	AssignmentExpression	bx += 8	25:29:288:294	5075081	2	True	+=			
ANR	5075164	Identifier	bx		5075081	0					
ANR	5075165	PrimaryExpression	8		5075081	1					
ANR	5075166	CompoundStatement		23:38:229:229	5075081	3					
ANR	5075167	ExpressionStatement	"kmvc_getbit ( bb , & ctx -> g , res )"	27:12:312:341	5075081	0	True				
ANR	5075168	CallExpression	"kmvc_getbit ( bb , & ctx -> g , res )"		5075081	0					
ANR	5075169	Callee	kmvc_getbit		5075081	0					
ANR	5075170	Identifier	kmvc_getbit		5075081	0					
ANR	5075171	ArgumentList	bb		5075081	1					
ANR	5075172	Argument	bb		5075081	0					
ANR	5075173	Identifier	bb		5075081	0					
ANR	5075174	Argument	& ctx -> g		5075081	1					
ANR	5075175	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075176	UnaryOperator	&		5075081	0					
ANR	5075177	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075178	Identifier	ctx		5075081	0					
ANR	5075179	Identifier	g		5075081	1					
ANR	5075180	Argument	res		5075081	2					
ANR	5075181	Identifier	res		5075081	0					
ANR	5075182	IfStatement	if ( ! res )		5075081	1					
ANR	5075183	Condition	! res	29:16:360:363	5075081	0	True				
ANR	5075184	UnaryOperationExpression	! res		5075081	0					
ANR	5075185	UnaryOperator	!		5075081	0					
ANR	5075186	Identifier	res		5075081	1					
ANR	5075187	CompoundStatement		27:22:298:298	5075081	1					
ANR	5075188	ExpressionStatement	"kmvc_getbit ( bb , & ctx -> g , res )"	31:16:385:414	5075081	0	True				
ANR	5075189	CallExpression	"kmvc_getbit ( bb , & ctx -> g , res )"		5075081	0					
ANR	5075190	Callee	kmvc_getbit		5075081	0					
ANR	5075191	Identifier	kmvc_getbit		5075081	0					
ANR	5075192	ArgumentList	bb		5075081	1					
ANR	5075193	Argument	bb		5075081	0					
ANR	5075194	Identifier	bb		5075081	0					
ANR	5075195	Argument	& ctx -> g		5075081	1					
ANR	5075196	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075197	UnaryOperator	&		5075081	0					
ANR	5075198	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075199	Identifier	ctx		5075081	0					
ANR	5075200	Identifier	g		5075081	1					
ANR	5075201	Argument	res		5075081	2					
ANR	5075202	Identifier	res		5075081	0					
ANR	5075203	IfStatement	if ( ! res )		5075081	1					
ANR	5075204	Condition	! res	33:20:437:440	5075081	0	True				
ANR	5075205	UnaryOperationExpression	! res		5075081	0					
ANR	5075206	UnaryOperator	!		5075081	0					
ANR	5075207	Identifier	res		5075081	1					
ANR	5075208	CompoundStatement		31:26:375:375	5075081	1					
ANR	5075209	IfStatement	if ( ! bytestream2_get_bytes_left ( & ctx -> g ) )		5075081	0					
ANR	5075210	Condition	! bytestream2_get_bytes_left ( & ctx -> g )	35:24:498:533	5075081	0	True				
ANR	5075211	UnaryOperationExpression	! bytestream2_get_bytes_left ( & ctx -> g )		5075081	0					
ANR	5075212	UnaryOperator	!		5075081	0					
ANR	5075213	CallExpression	bytestream2_get_bytes_left ( & ctx -> g )		5075081	1					
ANR	5075214	Callee	bytestream2_get_bytes_left		5075081	0					
ANR	5075215	Identifier	bytestream2_get_bytes_left		5075081	0					
ANR	5075216	ArgumentList	& ctx -> g		5075081	1					
ANR	5075217	Argument	& ctx -> g		5075081	0					
ANR	5075218	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075219	UnaryOperator	&		5075081	0					
ANR	5075220	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075221	Identifier	ctx		5075081	0					
ANR	5075222	Identifier	g		5075081	1					
ANR	5075223	CompoundStatement		33:62:468:468	5075081	1					
ANR	5075224	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"	37:24:563:613	5075081	0	True				
ANR	5075225	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"		5075081	0					
ANR	5075226	Callee	av_log		5075081	0					
ANR	5075227	Identifier	av_log		5075081	0					
ANR	5075228	ArgumentList	ctx -> avctx		5075081	1					
ANR	5075229	Argument	ctx -> avctx		5075081	0					
ANR	5075230	PtrMemberAccess	ctx -> avctx		5075081	0					
ANR	5075231	Identifier	ctx		5075081	0					
ANR	5075232	Identifier	avctx		5075081	1					
ANR	5075233	Argument	AV_LOG_ERROR		5075081	1					
ANR	5075234	Identifier	AV_LOG_ERROR		5075081	0					
ANR	5075235	Argument	"""Data overrun\\n"""		5075081	2					
ANR	5075236	PrimaryExpression	"""Data overrun\\n"""		5075081	0					
ANR	5075237	ReturnStatement	return AVERROR_INVALIDDATA ;	39:24:640:666	5075081	1	True				
ANR	5075238	Identifier	AVERROR_INVALIDDATA		5075081	0					
ANR	5075239	ExpressionStatement	val = bytestream2_get_byte ( & ctx -> g )	43:20:712:747	5075081	1	True				
ANR	5075240	AssignmentExpression	val = bytestream2_get_byte ( & ctx -> g )		5075081	0		=			
ANR	5075241	Identifier	val		5075081	0					
ANR	5075242	CallExpression	bytestream2_get_byte ( & ctx -> g )		5075081	1					
ANR	5075243	Callee	bytestream2_get_byte		5075081	0					
ANR	5075244	Identifier	bytestream2_get_byte		5075081	0					
ANR	5075245	ArgumentList	& ctx -> g		5075081	1					
ANR	5075246	Argument	& ctx -> g		5075081	0					
ANR	5075247	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075248	UnaryOperator	&		5075081	0					
ANR	5075249	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075250	Identifier	ctx		5075081	0					
ANR	5075251	Identifier	g		5075081	1					
ANR	5075252	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		5075081	2					
ANR	5075253	ForInit	i = 0 ;	45:25:775:780	5075081	0	True				
ANR	5075254	AssignmentExpression	i = 0		5075081	0		=			
ANR	5075255	Identifier	i		5075081	0					
ANR	5075256	PrimaryExpression	0		5075081	1					
ANR	5075257	Condition	i < 64	45:32:782:787	5075081	1	True				
ANR	5075258	RelationalExpression	i < 64		5075081	0		<			
ANR	5075259	Identifier	i		5075081	0					
ANR	5075260	PrimaryExpression	64		5075081	1					
ANR	5075261	PostIncDecOperationExpression	i ++	45:40:790:792	5075081	2	True				
ANR	5075262	Identifier	i		5075081	0					
ANR	5075263	IncDec	++		5075081	1					
ANR	5075264	ExpressionStatement	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) ) = val"	47:24:820:870	5075081	3	True				
ANR	5075265	AssignmentExpression	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) ) = val"		5075081	0		=			
ANR	5075266	CallExpression	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) )"		5075081	0					
ANR	5075267	Callee	BLK		5075081	0					
ANR	5075268	Identifier	BLK		5075081	0					
ANR	5075269	ArgumentList	ctx -> cur		5075081	1					
ANR	5075270	Argument	ctx -> cur		5075081	0					
ANR	5075271	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5075272	Identifier	ctx		5075081	0					
ANR	5075273	Identifier	cur		5075081	1					
ANR	5075274	Argument	bx + ( i & 0x7 )		5075081	1					
ANR	5075275	AdditiveExpression	bx + ( i & 0x7 )		5075081	0		+			
ANR	5075276	Identifier	bx		5075081	0					
ANR	5075277	BitAndExpression	i & 0x7		5075081	1		&			
ANR	5075278	Identifier	i		5075081	0					
ANR	5075279	PrimaryExpression	0x7		5075081	1					
ANR	5075280	Argument	by + ( i >> 3 )		5075081	2					
ANR	5075281	AdditiveExpression	by + ( i >> 3 )		5075081	0		+			
ANR	5075282	Identifier	by		5075081	0					
ANR	5075283	ShiftExpression	i >> 3		5075081	1		>>			
ANR	5075284	Identifier	i		5075081	0					
ANR	5075285	PrimaryExpression	3		5075081	1					
ANR	5075286	Identifier	val		5075081	1					
ANR	5075287	ElseStatement	else		5075081	0					
ANR	5075288	CompoundStatement		47:23:828:828	5075081	0					
ANR	5075289	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		5075081	0					
ANR	5075290	ForInit	i = 0 ;	51:25:965:970	5075081	0	True				
ANR	5075291	AssignmentExpression	i = 0		5075081	0		=			
ANR	5075292	Identifier	i		5075081	0					
ANR	5075293	PrimaryExpression	0		5075081	1					
ANR	5075294	Condition	i < 64	51:32:972:977	5075081	1	True				
ANR	5075295	RelationalExpression	i < 64		5075081	0		<			
ANR	5075296	Identifier	i		5075081	0					
ANR	5075297	PrimaryExpression	64		5075081	1					
ANR	5075298	PostIncDecOperationExpression	i ++	51:40:980:982	5075081	2	True				
ANR	5075299	Identifier	i		5075081	0					
ANR	5075300	IncDec	++		5075081	1					
ANR	5075301	ExpressionStatement	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) ) = BLK ( ctx -> prev , bx + ( i & 0x7 ) , by + ( i >> 3 ) )"	53:24:1010:1131	5075081	3	True				
ANR	5075302	AssignmentExpression	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) ) = BLK ( ctx -> prev , bx + ( i & 0x7 ) , by + ( i >> 3 ) )"		5075081	0		=			
ANR	5075303	CallExpression	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) )"		5075081	0					
ANR	5075304	Callee	BLK		5075081	0					
ANR	5075305	Identifier	BLK		5075081	0					
ANR	5075306	ArgumentList	ctx -> cur		5075081	1					
ANR	5075307	Argument	ctx -> cur		5075081	0					
ANR	5075308	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5075309	Identifier	ctx		5075081	0					
ANR	5075310	Identifier	cur		5075081	1					
ANR	5075311	Argument	bx + ( i & 0x7 )		5075081	1					
ANR	5075312	AdditiveExpression	bx + ( i & 0x7 )		5075081	0		+			
ANR	5075313	Identifier	bx		5075081	0					
ANR	5075314	BitAndExpression	i & 0x7		5075081	1		&			
ANR	5075315	Identifier	i		5075081	0					
ANR	5075316	PrimaryExpression	0x7		5075081	1					
ANR	5075317	Argument	by + ( i >> 3 )		5075081	2					
ANR	5075318	AdditiveExpression	by + ( i >> 3 )		5075081	0		+			
ANR	5075319	Identifier	by		5075081	0					
ANR	5075320	ShiftExpression	i >> 3		5075081	1		>>			
ANR	5075321	Identifier	i		5075081	0					
ANR	5075322	PrimaryExpression	3		5075081	1					
ANR	5075323	CallExpression	"BLK ( ctx -> prev , bx + ( i & 0x7 ) , by + ( i >> 3 ) )"		5075081	1					
ANR	5075324	Callee	BLK		5075081	0					
ANR	5075325	Identifier	BLK		5075081	0					
ANR	5075326	ArgumentList	ctx -> prev		5075081	1					
ANR	5075327	Argument	ctx -> prev		5075081	0					
ANR	5075328	PtrMemberAccess	ctx -> prev		5075081	0					
ANR	5075329	Identifier	ctx		5075081	0					
ANR	5075330	Identifier	prev		5075081	1					
ANR	5075331	Argument	bx + ( i & 0x7 )		5075081	1					
ANR	5075332	AdditiveExpression	bx + ( i & 0x7 )		5075081	0		+			
ANR	5075333	Identifier	bx		5075081	0					
ANR	5075334	BitAndExpression	i & 0x7		5075081	1		&			
ANR	5075335	Identifier	i		5075081	0					
ANR	5075336	PrimaryExpression	0x7		5075081	1					
ANR	5075337	Argument	by + ( i >> 3 )		5075081	2					
ANR	5075338	AdditiveExpression	by + ( i >> 3 )		5075081	0		+			
ANR	5075339	Identifier	by		5075081	0					
ANR	5075340	ShiftExpression	i >> 3		5075081	1		>>			
ANR	5075341	Identifier	i		5075081	0					
ANR	5075342	PrimaryExpression	3		5075081	1					
ANR	5075343	ElseStatement	else		5075081	0					
ANR	5075344	CompoundStatement		57:19:1104:1104	5075081	0					
ANR	5075345	IfStatement	if ( ! bytestream2_get_bytes_left ( & ctx -> g ) )		5075081	0					
ANR	5075346	Condition	! bytestream2_get_bytes_left ( & ctx -> g )	61:20:1235:1270	5075081	0	True				
ANR	5075347	UnaryOperationExpression	! bytestream2_get_bytes_left ( & ctx -> g )		5075081	0					
ANR	5075348	UnaryOperator	!		5075081	0					
ANR	5075349	CallExpression	bytestream2_get_bytes_left ( & ctx -> g )		5075081	1					
ANR	5075350	Callee	bytestream2_get_bytes_left		5075081	0					
ANR	5075351	Identifier	bytestream2_get_bytes_left		5075081	0					
ANR	5075352	ArgumentList	& ctx -> g		5075081	1					
ANR	5075353	Argument	& ctx -> g		5075081	0					
ANR	5075354	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075355	UnaryOperator	&		5075081	0					
ANR	5075356	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075357	Identifier	ctx		5075081	0					
ANR	5075358	Identifier	g		5075081	1					
ANR	5075359	CompoundStatement		59:58:1205:1205	5075081	1					
ANR	5075360	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"	63:20:1296:1346	5075081	0	True				
ANR	5075361	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"		5075081	0					
ANR	5075362	Callee	av_log		5075081	0					
ANR	5075363	Identifier	av_log		5075081	0					
ANR	5075364	ArgumentList	ctx -> avctx		5075081	1					
ANR	5075365	Argument	ctx -> avctx		5075081	0					
ANR	5075366	PtrMemberAccess	ctx -> avctx		5075081	0					
ANR	5075367	Identifier	ctx		5075081	0					
ANR	5075368	Identifier	avctx		5075081	1					
ANR	5075369	Argument	AV_LOG_ERROR		5075081	1					
ANR	5075370	Identifier	AV_LOG_ERROR		5075081	0					
ANR	5075371	Argument	"""Data overrun\\n"""		5075081	2					
ANR	5075372	PrimaryExpression	"""Data overrun\\n"""		5075081	0					
ANR	5075373	ReturnStatement	return AVERROR_INVALIDDATA ;	65:20:1369:1395	5075081	1	True				
ANR	5075374	Identifier	AVERROR_INVALIDDATA		5075081	0					
ANR	5075375	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		5075081	1					
ANR	5075376	ForInit	i = 0 ;	69:21:1438:1443	5075081	0	True				
ANR	5075377	AssignmentExpression	i = 0		5075081	0		=			
ANR	5075378	Identifier	i		5075081	0					
ANR	5075379	PrimaryExpression	0		5075081	1					
ANR	5075380	Condition	i < 4	69:28:1445:1449	5075081	1	True				
ANR	5075381	RelationalExpression	i < 4		5075081	0		<			
ANR	5075382	Identifier	i		5075081	0					
ANR	5075383	PrimaryExpression	4		5075081	1					
ANR	5075384	PostIncDecOperationExpression	i ++	69:35:1452:1454	5075081	2	True				
ANR	5075385	Identifier	i		5075081	0					
ANR	5075386	IncDec	++		5075081	1					
ANR	5075387	CompoundStatement		67:40:1389:1389	5075081	3					
ANR	5075388	ExpressionStatement	l0x = bx + ( i & 1 ) * 4	71:20:1480:1502	5075081	0	True				
ANR	5075389	AssignmentExpression	l0x = bx + ( i & 1 ) * 4		5075081	0		=			
ANR	5075390	Identifier	l0x		5075081	0					
ANR	5075391	AdditiveExpression	bx + ( i & 1 ) * 4		5075081	1		+			
ANR	5075392	Identifier	bx		5075081	0					
ANR	5075393	MultiplicativeExpression	( i & 1 ) * 4		5075081	1		*			
ANR	5075394	BitAndExpression	i & 1		5075081	0		&			
ANR	5075395	Identifier	i		5075081	0					
ANR	5075396	PrimaryExpression	1		5075081	1					
ANR	5075397	PrimaryExpression	4		5075081	1					
ANR	5075398	ExpressionStatement	l0y = by + ( i & 2 ) * 2	73:20:1525:1547	5075081	1	True				
ANR	5075399	AssignmentExpression	l0y = by + ( i & 2 ) * 2		5075081	0		=			
ANR	5075400	Identifier	l0y		5075081	0					
ANR	5075401	AdditiveExpression	by + ( i & 2 ) * 2		5075081	1		+			
ANR	5075402	Identifier	by		5075081	0					
ANR	5075403	MultiplicativeExpression	( i & 2 ) * 2		5075081	1		*			
ANR	5075404	BitAndExpression	i & 2		5075081	0		&			
ANR	5075405	Identifier	i		5075081	0					
ANR	5075406	PrimaryExpression	2		5075081	1					
ANR	5075407	PrimaryExpression	2		5075081	1					
ANR	5075408	ExpressionStatement	"kmvc_getbit ( bb , & ctx -> g , res )"	75:20:1570:1599	5075081	2	True				
ANR	5075409	CallExpression	"kmvc_getbit ( bb , & ctx -> g , res )"		5075081	0					
ANR	5075410	Callee	kmvc_getbit		5075081	0					
ANR	5075411	Identifier	kmvc_getbit		5075081	0					
ANR	5075412	ArgumentList	bb		5075081	1					
ANR	5075413	Argument	bb		5075081	0					
ANR	5075414	Identifier	bb		5075081	0					
ANR	5075415	Argument	& ctx -> g		5075081	1					
ANR	5075416	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075417	UnaryOperator	&		5075081	0					
ANR	5075418	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075419	Identifier	ctx		5075081	0					
ANR	5075420	Identifier	g		5075081	1					
ANR	5075421	Argument	res		5075081	2					
ANR	5075422	Identifier	res		5075081	0					
ANR	5075423	IfStatement	if ( ! res )		5075081	3					
ANR	5075424	Condition	! res	77:24:1626:1629	5075081	0	True				
ANR	5075425	UnaryOperationExpression	! res		5075081	0					
ANR	5075426	UnaryOperator	!		5075081	0					
ANR	5075427	Identifier	res		5075081	1					
ANR	5075428	CompoundStatement		75:30:1564:1564	5075081	1					
ANR	5075429	ExpressionStatement	"kmvc_getbit ( bb , & ctx -> g , res )"	79:24:1659:1688	5075081	0	True				
ANR	5075430	CallExpression	"kmvc_getbit ( bb , & ctx -> g , res )"		5075081	0					
ANR	5075431	Callee	kmvc_getbit		5075081	0					
ANR	5075432	Identifier	kmvc_getbit		5075081	0					
ANR	5075433	ArgumentList	bb		5075081	1					
ANR	5075434	Argument	bb		5075081	0					
ANR	5075435	Identifier	bb		5075081	0					
ANR	5075436	Argument	& ctx -> g		5075081	1					
ANR	5075437	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075438	UnaryOperator	&		5075081	0					
ANR	5075439	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075440	Identifier	ctx		5075081	0					
ANR	5075441	Identifier	g		5075081	1					
ANR	5075442	Argument	res		5075081	2					
ANR	5075443	Identifier	res		5075081	0					
ANR	5075444	IfStatement	if ( ! res )		5075081	1					
ANR	5075445	Condition	! res	81:28:1719:1722	5075081	0	True				
ANR	5075446	UnaryOperationExpression	! res		5075081	0					
ANR	5075447	UnaryOperator	!		5075081	0					
ANR	5075448	Identifier	res		5075081	1					
ANR	5075449	CompoundStatement		79:34:1657:1657	5075081	1					
ANR	5075450	ExpressionStatement	val = bytestream2_get_byte ( & ctx -> g )	83:28:1784:1819	5075081	0	True				
ANR	5075451	AssignmentExpression	val = bytestream2_get_byte ( & ctx -> g )		5075081	0		=			
ANR	5075452	Identifier	val		5075081	0					
ANR	5075453	CallExpression	bytestream2_get_byte ( & ctx -> g )		5075081	1					
ANR	5075454	Callee	bytestream2_get_byte		5075081	0					
ANR	5075455	Identifier	bytestream2_get_byte		5075081	0					
ANR	5075456	ArgumentList	& ctx -> g		5075081	1					
ANR	5075457	Argument	& ctx -> g		5075081	0					
ANR	5075458	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075459	UnaryOperator	&		5075081	0					
ANR	5075460	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075461	Identifier	ctx		5075081	0					
ANR	5075462	Identifier	g		5075081	1					
ANR	5075463	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		5075081	1					
ANR	5075464	ForInit	j = 0 ;	85:33:1855:1860	5075081	0	True				
ANR	5075465	AssignmentExpression	j = 0		5075081	0		=			
ANR	5075466	Identifier	j		5075081	0					
ANR	5075467	PrimaryExpression	0		5075081	1					
ANR	5075468	Condition	j < 16	85:40:1862:1867	5075081	1	True				
ANR	5075469	RelationalExpression	j < 16		5075081	0		<			
ANR	5075470	Identifier	j		5075081	0					
ANR	5075471	PrimaryExpression	16		5075081	1					
ANR	5075472	PostIncDecOperationExpression	j ++	85:48:1870:1872	5075081	2	True				
ANR	5075473	Identifier	j		5075081	0					
ANR	5075474	IncDec	++		5075081	1					
ANR	5075475	ExpressionStatement	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) ) = val"	87:32:1908:1958	5075081	3	True				
ANR	5075476	AssignmentExpression	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) ) = val"		5075081	0		=			
ANR	5075477	CallExpression	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) )"		5075081	0					
ANR	5075478	Callee	BLK		5075081	0					
ANR	5075479	Identifier	BLK		5075081	0					
ANR	5075480	ArgumentList	ctx -> cur		5075081	1					
ANR	5075481	Argument	ctx -> cur		5075081	0					
ANR	5075482	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5075483	Identifier	ctx		5075081	0					
ANR	5075484	Identifier	cur		5075081	1					
ANR	5075485	Argument	l0x + ( j & 3 )		5075081	1					
ANR	5075486	AdditiveExpression	l0x + ( j & 3 )		5075081	0		+			
ANR	5075487	Identifier	l0x		5075081	0					
ANR	5075488	BitAndExpression	j & 3		5075081	1		&			
ANR	5075489	Identifier	j		5075081	0					
ANR	5075490	PrimaryExpression	3		5075081	1					
ANR	5075491	Argument	l0y + ( j >> 2 )		5075081	2					
ANR	5075492	AdditiveExpression	l0y + ( j >> 2 )		5075081	0		+			
ANR	5075493	Identifier	l0y		5075081	0					
ANR	5075494	ShiftExpression	j >> 2		5075081	1		>>			
ANR	5075495	Identifier	j		5075081	0					
ANR	5075496	PrimaryExpression	2		5075081	1					
ANR	5075497	Identifier	val		5075081	1					
ANR	5075498	ElseStatement	else		5075081	0					
ANR	5075499	CompoundStatement		87:31:1924:1924	5075081	0					
ANR	5075500	ExpressionStatement	val = bytestream2_get_byte ( & ctx -> g )	91:28:2044:2079	5075081	0	True				
ANR	5075501	AssignmentExpression	val = bytestream2_get_byte ( & ctx -> g )		5075081	0		=			
ANR	5075502	Identifier	val		5075081	0					
ANR	5075503	CallExpression	bytestream2_get_byte ( & ctx -> g )		5075081	1					
ANR	5075504	Callee	bytestream2_get_byte		5075081	0					
ANR	5075505	Identifier	bytestream2_get_byte		5075081	0					
ANR	5075506	ArgumentList	& ctx -> g		5075081	1					
ANR	5075507	Argument	& ctx -> g		5075081	0					
ANR	5075508	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075509	UnaryOperator	&		5075081	0					
ANR	5075510	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075511	Identifier	ctx		5075081	0					
ANR	5075512	Identifier	g		5075081	1					
ANR	5075513	ExpressionStatement	mx = ( val & 0xF ) - 8	93:28:2110:2130	5075081	1	True				
ANR	5075514	AssignmentExpression	mx = ( val & 0xF ) - 8		5075081	0		=			
ANR	5075515	Identifier	mx		5075081	0					
ANR	5075516	AdditiveExpression	( val & 0xF ) - 8		5075081	1		-			
ANR	5075517	BitAndExpression	val & 0xF		5075081	0		&			
ANR	5075518	Identifier	val		5075081	0					
ANR	5075519	PrimaryExpression	0xF		5075081	1					
ANR	5075520	PrimaryExpression	8		5075081	1					
ANR	5075521	ExpressionStatement	my = ( val >> 4 ) - 8	95:28:2161:2180	5075081	2	True				
ANR	5075522	AssignmentExpression	my = ( val >> 4 ) - 8		5075081	0		=			
ANR	5075523	Identifier	my		5075081	0					
ANR	5075524	AdditiveExpression	( val >> 4 ) - 8		5075081	1		-			
ANR	5075525	ShiftExpression	val >> 4		5075081	0		>>			
ANR	5075526	Identifier	val		5075081	0					
ANR	5075527	PrimaryExpression	4		5075081	1					
ANR	5075528	PrimaryExpression	8		5075081	1					
ANR	5075529	IfStatement	if ( ( l0x + mx ) + 320 * ( l0y + my ) < 0 || ( l0x + mx ) + 320 * ( l0y + my ) > 318 * 198 )		5075081	3					
ANR	5075530	Condition	( l0x + mx ) + 320 * ( l0y + my ) < 0 || ( l0x + mx ) + 320 * ( l0y + my ) > 318 * 198	97:32:2215:2278	5075081	0	True				
ANR	5075531	OrExpression	( l0x + mx ) + 320 * ( l0y + my ) < 0 || ( l0x + mx ) + 320 * ( l0y + my ) > 318 * 198		5075081	0		||			
ANR	5075532	RelationalExpression	( l0x + mx ) + 320 * ( l0y + my ) < 0		5075081	0		<			
ANR	5075533	AdditiveExpression	( l0x + mx ) + 320 * ( l0y + my )		5075081	0		+			
ANR	5075534	AdditiveExpression	l0x + mx		5075081	0		+			
ANR	5075535	Identifier	l0x		5075081	0					
ANR	5075536	Identifier	mx		5075081	1					
ANR	5075537	MultiplicativeExpression	320 * ( l0y + my )		5075081	1		*			
ANR	5075538	PrimaryExpression	320		5075081	0					
ANR	5075539	AdditiveExpression	l0y + my		5075081	1		+			
ANR	5075540	Identifier	l0y		5075081	0					
ANR	5075541	Identifier	my		5075081	1					
ANR	5075542	PrimaryExpression	0		5075081	1					
ANR	5075543	RelationalExpression	( l0x + mx ) + 320 * ( l0y + my ) > 318 * 198		5075081	1		>			
ANR	5075544	AdditiveExpression	( l0x + mx ) + 320 * ( l0y + my )		5075081	0		+			
ANR	5075545	AdditiveExpression	l0x + mx		5075081	0		+			
ANR	5075546	Identifier	l0x		5075081	0					
ANR	5075547	Identifier	mx		5075081	1					
ANR	5075548	MultiplicativeExpression	320 * ( l0y + my )		5075081	1		*			
ANR	5075549	PrimaryExpression	320		5075081	0					
ANR	5075550	AdditiveExpression	l0y + my		5075081	1		+			
ANR	5075551	Identifier	l0y		5075081	0					
ANR	5075552	Identifier	my		5075081	1					
ANR	5075553	MultiplicativeExpression	318 * 198		5075081	1		*			
ANR	5075554	PrimaryExpression	318		5075081	0					
ANR	5075555	PrimaryExpression	198		5075081	1					
ANR	5075556	CompoundStatement		95:98:2213:2213	5075081	1					
ANR	5075557	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Invalid MV\\n"" )"	99:32:2316:2364	5075081	0	True				
ANR	5075558	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Invalid MV\\n"" )"		5075081	0					
ANR	5075559	Callee	av_log		5075081	0					
ANR	5075560	Identifier	av_log		5075081	0					
ANR	5075561	ArgumentList	ctx -> avctx		5075081	1					
ANR	5075562	Argument	ctx -> avctx		5075081	0					
ANR	5075563	PtrMemberAccess	ctx -> avctx		5075081	0					
ANR	5075564	Identifier	ctx		5075081	0					
ANR	5075565	Identifier	avctx		5075081	1					
ANR	5075566	Argument	AV_LOG_ERROR		5075081	1					
ANR	5075567	Identifier	AV_LOG_ERROR		5075081	0					
ANR	5075568	Argument	"""Invalid MV\\n"""		5075081	2					
ANR	5075569	PrimaryExpression	"""Invalid MV\\n"""		5075081	0					
ANR	5075570	ReturnStatement	return AVERROR_INVALIDDATA ;	101:32:2399:2425	5075081	1	True				
ANR	5075571	Identifier	AVERROR_INVALIDDATA		5075081	0					
ANR	5075572	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		5075081	4					
ANR	5075573	ForInit	j = 0 ;	105:33:2492:2497	5075081	0	True				
ANR	5075574	AssignmentExpression	j = 0		5075081	0		=			
ANR	5075575	Identifier	j		5075081	0					
ANR	5075576	PrimaryExpression	0		5075081	1					
ANR	5075577	Condition	j < 16	105:40:2499:2504	5075081	1	True				
ANR	5075578	RelationalExpression	j < 16		5075081	0		<			
ANR	5075579	Identifier	j		5075081	0					
ANR	5075580	PrimaryExpression	16		5075081	1					
ANR	5075581	PostIncDecOperationExpression	j ++	105:48:2507:2509	5075081	2	True				
ANR	5075582	Identifier	j		5075081	0					
ANR	5075583	IncDec	++		5075081	1					
ANR	5075584	ExpressionStatement	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) ) = BLK ( ctx -> prev , l0x + ( j & 3 ) + mx , l0y + ( j >> 2 ) + my )"	107:32:2545:2684	5075081	3	True				
ANR	5075585	AssignmentExpression	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) ) = BLK ( ctx -> prev , l0x + ( j & 3 ) + mx , l0y + ( j >> 2 ) + my )"		5075081	0		=			
ANR	5075586	CallExpression	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) )"		5075081	0					
ANR	5075587	Callee	BLK		5075081	0					
ANR	5075588	Identifier	BLK		5075081	0					
ANR	5075589	ArgumentList	ctx -> cur		5075081	1					
ANR	5075590	Argument	ctx -> cur		5075081	0					
ANR	5075591	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5075592	Identifier	ctx		5075081	0					
ANR	5075593	Identifier	cur		5075081	1					
ANR	5075594	Argument	l0x + ( j & 3 )		5075081	1					
ANR	5075595	AdditiveExpression	l0x + ( j & 3 )		5075081	0		+			
ANR	5075596	Identifier	l0x		5075081	0					
ANR	5075597	BitAndExpression	j & 3		5075081	1		&			
ANR	5075598	Identifier	j		5075081	0					
ANR	5075599	PrimaryExpression	3		5075081	1					
ANR	5075600	Argument	l0y + ( j >> 2 )		5075081	2					
ANR	5075601	AdditiveExpression	l0y + ( j >> 2 )		5075081	0		+			
ANR	5075602	Identifier	l0y		5075081	0					
ANR	5075603	ShiftExpression	j >> 2		5075081	1		>>			
ANR	5075604	Identifier	j		5075081	0					
ANR	5075605	PrimaryExpression	2		5075081	1					
ANR	5075606	CallExpression	"BLK ( ctx -> prev , l0x + ( j & 3 ) + mx , l0y + ( j >> 2 ) + my )"		5075081	1					
ANR	5075607	Callee	BLK		5075081	0					
ANR	5075608	Identifier	BLK		5075081	0					
ANR	5075609	ArgumentList	ctx -> prev		5075081	1					
ANR	5075610	Argument	ctx -> prev		5075081	0					
ANR	5075611	PtrMemberAccess	ctx -> prev		5075081	0					
ANR	5075612	Identifier	ctx		5075081	0					
ANR	5075613	Identifier	prev		5075081	1					
ANR	5075614	Argument	l0x + ( j & 3 ) + mx		5075081	1					
ANR	5075615	AdditiveExpression	l0x + ( j & 3 ) + mx		5075081	0		+			
ANR	5075616	Identifier	l0x		5075081	0					
ANR	5075617	AdditiveExpression	( j & 3 ) + mx		5075081	1		+			
ANR	5075618	BitAndExpression	j & 3		5075081	0		&			
ANR	5075619	Identifier	j		5075081	0					
ANR	5075620	PrimaryExpression	3		5075081	1					
ANR	5075621	Identifier	mx		5075081	1					
ANR	5075622	Argument	l0y + ( j >> 2 ) + my		5075081	2					
ANR	5075623	AdditiveExpression	l0y + ( j >> 2 ) + my		5075081	0		+			
ANR	5075624	Identifier	l0y		5075081	0					
ANR	5075625	AdditiveExpression	( j >> 2 ) + my		5075081	1		+			
ANR	5075626	ShiftExpression	j >> 2		5075081	0		>>			
ANR	5075627	Identifier	j		5075081	0					
ANR	5075628	PrimaryExpression	2		5075081	1					
ANR	5075629	Identifier	my		5075081	1					
ANR	5075630	ElseStatement	else		5075081	0					
ANR	5075631	CompoundStatement		111:27:2673:2673	5075081	0					
ANR	5075632	ForStatement	for ( j = 0 ; j < 4 ; j ++ )		5075081	0					
ANR	5075633	ForInit	j = 0 ;	115:29:2809:2814	5075081	0	True				
ANR	5075634	AssignmentExpression	j = 0		5075081	0		=			
ANR	5075635	Identifier	j		5075081	0					
ANR	5075636	PrimaryExpression	0		5075081	1					
ANR	5075637	Condition	j < 4	115:36:2816:2820	5075081	1	True				
ANR	5075638	RelationalExpression	j < 4		5075081	0		<			
ANR	5075639	Identifier	j		5075081	0					
ANR	5075640	PrimaryExpression	4		5075081	1					
ANR	5075641	PostIncDecOperationExpression	j ++	115:43:2823:2825	5075081	2	True				
ANR	5075642	Identifier	j		5075081	0					
ANR	5075643	IncDec	++		5075081	1					
ANR	5075644	CompoundStatement		113:48:2760:2760	5075081	3					
ANR	5075645	ExpressionStatement	l1x = l0x + ( j & 1 ) * 2	117:28:2859:2882	5075081	0	True				
ANR	5075646	AssignmentExpression	l1x = l0x + ( j & 1 ) * 2		5075081	0		=			
ANR	5075647	Identifier	l1x		5075081	0					
ANR	5075648	AdditiveExpression	l0x + ( j & 1 ) * 2		5075081	1		+			
ANR	5075649	Identifier	l0x		5075081	0					
ANR	5075650	MultiplicativeExpression	( j & 1 ) * 2		5075081	1		*			
ANR	5075651	BitAndExpression	j & 1		5075081	0		&			
ANR	5075652	Identifier	j		5075081	0					
ANR	5075653	PrimaryExpression	1		5075081	1					
ANR	5075654	PrimaryExpression	2		5075081	1					
ANR	5075655	ExpressionStatement	l1y = l0y + ( j & 2 )	119:28:2913:2932	5075081	1	True				
ANR	5075656	AssignmentExpression	l1y = l0y + ( j & 2 )		5075081	0		=			
ANR	5075657	Identifier	l1y		5075081	0					
ANR	5075658	AdditiveExpression	l0y + ( j & 2 )		5075081	1		+			
ANR	5075659	Identifier	l0y		5075081	0					
ANR	5075660	BitAndExpression	j & 2		5075081	1		&			
ANR	5075661	Identifier	j		5075081	0					
ANR	5075662	PrimaryExpression	2		5075081	1					
ANR	5075663	ExpressionStatement	"kmvc_getbit ( bb , & ctx -> g , res )"	121:28:2963:2992	5075081	2	True				
ANR	5075664	CallExpression	"kmvc_getbit ( bb , & ctx -> g , res )"		5075081	0					
ANR	5075665	Callee	kmvc_getbit		5075081	0					
ANR	5075666	Identifier	kmvc_getbit		5075081	0					
ANR	5075667	ArgumentList	bb		5075081	1					
ANR	5075668	Argument	bb		5075081	0					
ANR	5075669	Identifier	bb		5075081	0					
ANR	5075670	Argument	& ctx -> g		5075081	1					
ANR	5075671	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075672	UnaryOperator	&		5075081	0					
ANR	5075673	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075674	Identifier	ctx		5075081	0					
ANR	5075675	Identifier	g		5075081	1					
ANR	5075676	Argument	res		5075081	2					
ANR	5075677	Identifier	res		5075081	0					
ANR	5075678	IfStatement	if ( ! res )		5075081	3					
ANR	5075679	Condition	! res	123:32:3027:3030	5075081	0	True				
ANR	5075680	UnaryOperationExpression	! res		5075081	0					
ANR	5075681	UnaryOperator	!		5075081	0					
ANR	5075682	Identifier	res		5075081	1					
ANR	5075683	CompoundStatement		121:38:2965:2965	5075081	1					
ANR	5075684	ExpressionStatement	"kmvc_getbit ( bb , & ctx -> g , res )"	125:32:3068:3097	5075081	0	True				
ANR	5075685	CallExpression	"kmvc_getbit ( bb , & ctx -> g , res )"		5075081	0					
ANR	5075686	Callee	kmvc_getbit		5075081	0					
ANR	5075687	Identifier	kmvc_getbit		5075081	0					
ANR	5075688	ArgumentList	bb		5075081	1					
ANR	5075689	Argument	bb		5075081	0					
ANR	5075690	Identifier	bb		5075081	0					
ANR	5075691	Argument	& ctx -> g		5075081	1					
ANR	5075692	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075693	UnaryOperator	&		5075081	0					
ANR	5075694	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075695	Identifier	ctx		5075081	0					
ANR	5075696	Identifier	g		5075081	1					
ANR	5075697	Argument	res		5075081	2					
ANR	5075698	Identifier	res		5075081	0					
ANR	5075699	IfStatement	if ( ! res )		5075081	1					
ANR	5075700	Condition	! res	127:36:3136:3139	5075081	0	True				
ANR	5075701	UnaryOperationExpression	! res		5075081	0					
ANR	5075702	UnaryOperator	!		5075081	0					
ANR	5075703	Identifier	res		5075081	1					
ANR	5075704	CompoundStatement		125:42:3074:3074	5075081	1					
ANR	5075705	ExpressionStatement	val = bytestream2_get_byte ( & ctx -> g )	129:36:3209:3244	5075081	0	True				
ANR	5075706	AssignmentExpression	val = bytestream2_get_byte ( & ctx -> g )		5075081	0		=			
ANR	5075707	Identifier	val		5075081	0					
ANR	5075708	CallExpression	bytestream2_get_byte ( & ctx -> g )		5075081	1					
ANR	5075709	Callee	bytestream2_get_byte		5075081	0					
ANR	5075710	Identifier	bytestream2_get_byte		5075081	0					
ANR	5075711	ArgumentList	& ctx -> g		5075081	1					
ANR	5075712	Argument	& ctx -> g		5075081	0					
ANR	5075713	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075714	UnaryOperator	&		5075081	0					
ANR	5075715	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075716	Identifier	ctx		5075081	0					
ANR	5075717	Identifier	g		5075081	1					
ANR	5075718	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y ) = val"	131:36:3283:3312	5075081	1	True				
ANR	5075719	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y ) = val"		5075081	0		=			
ANR	5075720	CallExpression	"BLK ( ctx -> cur , l1x , l1y )"		5075081	0					
ANR	5075721	Callee	BLK		5075081	0					
ANR	5075722	Identifier	BLK		5075081	0					
ANR	5075723	ArgumentList	ctx -> cur		5075081	1					
ANR	5075724	Argument	ctx -> cur		5075081	0					
ANR	5075725	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5075726	Identifier	ctx		5075081	0					
ANR	5075727	Identifier	cur		5075081	1					
ANR	5075728	Argument	l1x		5075081	1					
ANR	5075729	Identifier	l1x		5075081	0					
ANR	5075730	Argument	l1y		5075081	2					
ANR	5075731	Identifier	l1y		5075081	0					
ANR	5075732	Identifier	val		5075081	1					
ANR	5075733	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y ) = val"	133:36:3351:3384	5075081	2	True				
ANR	5075734	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y ) = val"		5075081	0		=			
ANR	5075735	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y )"		5075081	0					
ANR	5075736	Callee	BLK		5075081	0					
ANR	5075737	Identifier	BLK		5075081	0					
ANR	5075738	ArgumentList	ctx -> cur		5075081	1					
ANR	5075739	Argument	ctx -> cur		5075081	0					
ANR	5075740	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5075741	Identifier	ctx		5075081	0					
ANR	5075742	Identifier	cur		5075081	1					
ANR	5075743	Argument	l1x + 1		5075081	1					
ANR	5075744	AdditiveExpression	l1x + 1		5075081	0		+			
ANR	5075745	Identifier	l1x		5075081	0					
ANR	5075746	PrimaryExpression	1		5075081	1					
ANR	5075747	Argument	l1y		5075081	2					
ANR	5075748	Identifier	l1y		5075081	0					
ANR	5075749	Identifier	val		5075081	1					
ANR	5075750	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y + 1 ) = val"	135:36:3423:3456	5075081	3	True				
ANR	5075751	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y + 1 ) = val"		5075081	0		=			
ANR	5075752	CallExpression	"BLK ( ctx -> cur , l1x , l1y + 1 )"		5075081	0					
ANR	5075753	Callee	BLK		5075081	0					
ANR	5075754	Identifier	BLK		5075081	0					
ANR	5075755	ArgumentList	ctx -> cur		5075081	1					
ANR	5075756	Argument	ctx -> cur		5075081	0					
ANR	5075757	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5075758	Identifier	ctx		5075081	0					
ANR	5075759	Identifier	cur		5075081	1					
ANR	5075760	Argument	l1x		5075081	1					
ANR	5075761	Identifier	l1x		5075081	0					
ANR	5075762	Argument	l1y + 1		5075081	2					
ANR	5075763	AdditiveExpression	l1y + 1		5075081	0		+			
ANR	5075764	Identifier	l1y		5075081	0					
ANR	5075765	PrimaryExpression	1		5075081	1					
ANR	5075766	Identifier	val		5075081	1					
ANR	5075767	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = val"	137:36:3495:3532	5075081	4	True				
ANR	5075768	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = val"		5075081	0		=			
ANR	5075769	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 )"		5075081	0					
ANR	5075770	Callee	BLK		5075081	0					
ANR	5075771	Identifier	BLK		5075081	0					
ANR	5075772	ArgumentList	ctx -> cur		5075081	1					
ANR	5075773	Argument	ctx -> cur		5075081	0					
ANR	5075774	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5075775	Identifier	ctx		5075081	0					
ANR	5075776	Identifier	cur		5075081	1					
ANR	5075777	Argument	l1x + 1		5075081	1					
ANR	5075778	AdditiveExpression	l1x + 1		5075081	0		+			
ANR	5075779	Identifier	l1x		5075081	0					
ANR	5075780	PrimaryExpression	1		5075081	1					
ANR	5075781	Argument	l1y + 1		5075081	2					
ANR	5075782	AdditiveExpression	l1y + 1		5075081	0		+			
ANR	5075783	Identifier	l1y		5075081	0					
ANR	5075784	PrimaryExpression	1		5075081	1					
ANR	5075785	Identifier	val		5075081	1					
ANR	5075786	ElseStatement	else		5075081	0					
ANR	5075787	CompoundStatement		137:39:3506:3506	5075081	0					
ANR	5075788	ExpressionStatement	val = bytestream2_get_byte ( & ctx -> g )	141:36:3634:3669	5075081	0	True				
ANR	5075789	AssignmentExpression	val = bytestream2_get_byte ( & ctx -> g )		5075081	0		=			
ANR	5075790	Identifier	val		5075081	0					
ANR	5075791	CallExpression	bytestream2_get_byte ( & ctx -> g )		5075081	1					
ANR	5075792	Callee	bytestream2_get_byte		5075081	0					
ANR	5075793	Identifier	bytestream2_get_byte		5075081	0					
ANR	5075794	ArgumentList	& ctx -> g		5075081	1					
ANR	5075795	Argument	& ctx -> g		5075081	0					
ANR	5075796	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5075797	UnaryOperator	&		5075081	0					
ANR	5075798	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5075799	Identifier	ctx		5075081	0					
ANR	5075800	Identifier	g		5075081	1					
ANR	5075801	ExpressionStatement	mx = ( val & 0xF ) - 8	143:36:3708:3728	5075081	1	True				
ANR	5075802	AssignmentExpression	mx = ( val & 0xF ) - 8		5075081	0		=			
ANR	5075803	Identifier	mx		5075081	0					
ANR	5075804	AdditiveExpression	( val & 0xF ) - 8		5075081	1		-			
ANR	5075805	BitAndExpression	val & 0xF		5075081	0		&			
ANR	5075806	Identifier	val		5075081	0					
ANR	5075807	PrimaryExpression	0xF		5075081	1					
ANR	5075808	PrimaryExpression	8		5075081	1					
ANR	5075809	ExpressionStatement	my = ( val >> 4 ) - 8	145:36:3767:3786	5075081	2	True				
ANR	5075810	AssignmentExpression	my = ( val >> 4 ) - 8		5075081	0		=			
ANR	5075811	Identifier	my		5075081	0					
ANR	5075812	AdditiveExpression	( val >> 4 ) - 8		5075081	1		-			
ANR	5075813	ShiftExpression	val >> 4		5075081	0		>>			
ANR	5075814	Identifier	val		5075081	0					
ANR	5075815	PrimaryExpression	4		5075081	1					
ANR	5075816	PrimaryExpression	8		5075081	1					
ANR	5075817	IfStatement	if ( ( l1x + mx ) + 320 * ( l1y + my ) < 0 || ( l1x + mx ) + 320 * ( l1y + my ) > 318 * 198 )		5075081	3					
ANR	5075818	Condition	( l1x + mx ) + 320 * ( l1y + my ) < 0 || ( l1x + mx ) + 320 * ( l1y + my ) > 318 * 198	147:40:3829:3892	5075081	0	True				
ANR	5075819	OrExpression	( l1x + mx ) + 320 * ( l1y + my ) < 0 || ( l1x + mx ) + 320 * ( l1y + my ) > 318 * 198		5075081	0		||			
ANR	5075820	RelationalExpression	( l1x + mx ) + 320 * ( l1y + my ) < 0		5075081	0		<			
ANR	5075821	AdditiveExpression	( l1x + mx ) + 320 * ( l1y + my )		5075081	0		+			
ANR	5075822	AdditiveExpression	l1x + mx		5075081	0		+			
ANR	5075823	Identifier	l1x		5075081	0					
ANR	5075824	Identifier	mx		5075081	1					
ANR	5075825	MultiplicativeExpression	320 * ( l1y + my )		5075081	1		*			
ANR	5075826	PrimaryExpression	320		5075081	0					
ANR	5075827	AdditiveExpression	l1y + my		5075081	1		+			
ANR	5075828	Identifier	l1y		5075081	0					
ANR	5075829	Identifier	my		5075081	1					
ANR	5075830	PrimaryExpression	0		5075081	1					
ANR	5075831	RelationalExpression	( l1x + mx ) + 320 * ( l1y + my ) > 318 * 198		5075081	1		>			
ANR	5075832	AdditiveExpression	( l1x + mx ) + 320 * ( l1y + my )		5075081	0		+			
ANR	5075833	AdditiveExpression	l1x + mx		5075081	0		+			
ANR	5075834	Identifier	l1x		5075081	0					
ANR	5075835	Identifier	mx		5075081	1					
ANR	5075836	MultiplicativeExpression	320 * ( l1y + my )		5075081	1		*			
ANR	5075837	PrimaryExpression	320		5075081	0					
ANR	5075838	AdditiveExpression	l1y + my		5075081	1		+			
ANR	5075839	Identifier	l1y		5075081	0					
ANR	5075840	Identifier	my		5075081	1					
ANR	5075841	MultiplicativeExpression	318 * 198		5075081	1		*			
ANR	5075842	PrimaryExpression	318		5075081	0					
ANR	5075843	PrimaryExpression	198		5075081	1					
ANR	5075844	CompoundStatement		145:106:3827:3827	5075081	1					
ANR	5075845	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Invalid MV\\n"" )"	149:40:3938:3986	5075081	0	True				
ANR	5075846	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Invalid MV\\n"" )"		5075081	0					
ANR	5075847	Callee	av_log		5075081	0					
ANR	5075848	Identifier	av_log		5075081	0					
ANR	5075849	ArgumentList	ctx -> avctx		5075081	1					
ANR	5075850	Argument	ctx -> avctx		5075081	0					
ANR	5075851	PtrMemberAccess	ctx -> avctx		5075081	0					
ANR	5075852	Identifier	ctx		5075081	0					
ANR	5075853	Identifier	avctx		5075081	1					
ANR	5075854	Argument	AV_LOG_ERROR		5075081	1					
ANR	5075855	Identifier	AV_LOG_ERROR		5075081	0					
ANR	5075856	Argument	"""Invalid MV\\n"""		5075081	2					
ANR	5075857	PrimaryExpression	"""Invalid MV\\n"""		5075081	0					
ANR	5075858	ReturnStatement	return AVERROR_INVALIDDATA ;	151:40:4029:4055	5075081	1	True				
ANR	5075859	Identifier	AVERROR_INVALIDDATA		5075081	0					
ANR	5075860	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y ) = BLK ( ctx -> prev , l1x + mx , l1y + my )"	155:36:4133:4193	5075081	4	True				
ANR	5075861	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y ) = BLK ( ctx -> prev , l1x + mx , l1y + my )"		5075081	0		=			
ANR	5075862	CallExpression	"BLK ( ctx -> cur , l1x , l1y )"		5075081	0					
ANR	5075863	Callee	BLK		5075081	0					
ANR	5075864	Identifier	BLK		5075081	0					
ANR	5075865	ArgumentList	ctx -> cur		5075081	1					
ANR	5075866	Argument	ctx -> cur		5075081	0					
ANR	5075867	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5075868	Identifier	ctx		5075081	0					
ANR	5075869	Identifier	cur		5075081	1					
ANR	5075870	Argument	l1x		5075081	1					
ANR	5075871	Identifier	l1x		5075081	0					
ANR	5075872	Argument	l1y		5075081	2					
ANR	5075873	Identifier	l1y		5075081	0					
ANR	5075874	CallExpression	"BLK ( ctx -> prev , l1x + mx , l1y + my )"		5075081	1					
ANR	5075875	Callee	BLK		5075081	0					
ANR	5075876	Identifier	BLK		5075081	0					
ANR	5075877	ArgumentList	ctx -> prev		5075081	1					
ANR	5075878	Argument	ctx -> prev		5075081	0					
ANR	5075879	PtrMemberAccess	ctx -> prev		5075081	0					
ANR	5075880	Identifier	ctx		5075081	0					
ANR	5075881	Identifier	prev		5075081	1					
ANR	5075882	Argument	l1x + mx		5075081	1					
ANR	5075883	AdditiveExpression	l1x + mx		5075081	0		+			
ANR	5075884	Identifier	l1x		5075081	0					
ANR	5075885	Identifier	mx		5075081	1					
ANR	5075886	Argument	l1y + my		5075081	2					
ANR	5075887	AdditiveExpression	l1y + my		5075081	0		+			
ANR	5075888	Identifier	l1y		5075081	0					
ANR	5075889	Identifier	my		5075081	1					
ANR	5075890	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y ) = BLK ( ctx -> prev , l1x + 1 + mx , l1y + my )"	157:36:4232:4341	5075081	5	True				
ANR	5075891	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y ) = BLK ( ctx -> prev , l1x + 1 + mx , l1y + my )"		5075081	0		=			
ANR	5075892	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y )"		5075081	0					
ANR	5075893	Callee	BLK		5075081	0					
ANR	5075894	Identifier	BLK		5075081	0					
ANR	5075895	ArgumentList	ctx -> cur		5075081	1					
ANR	5075896	Argument	ctx -> cur		5075081	0					
ANR	5075897	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5075898	Identifier	ctx		5075081	0					
ANR	5075899	Identifier	cur		5075081	1					
ANR	5075900	Argument	l1x + 1		5075081	1					
ANR	5075901	AdditiveExpression	l1x + 1		5075081	0		+			
ANR	5075902	Identifier	l1x		5075081	0					
ANR	5075903	PrimaryExpression	1		5075081	1					
ANR	5075904	Argument	l1y		5075081	2					
ANR	5075905	Identifier	l1y		5075081	0					
ANR	5075906	CallExpression	"BLK ( ctx -> prev , l1x + 1 + mx , l1y + my )"		5075081	1					
ANR	5075907	Callee	BLK		5075081	0					
ANR	5075908	Identifier	BLK		5075081	0					
ANR	5075909	ArgumentList	ctx -> prev		5075081	1					
ANR	5075910	Argument	ctx -> prev		5075081	0					
ANR	5075911	PtrMemberAccess	ctx -> prev		5075081	0					
ANR	5075912	Identifier	ctx		5075081	0					
ANR	5075913	Identifier	prev		5075081	1					
ANR	5075914	Argument	l1x + 1 + mx		5075081	1					
ANR	5075915	AdditiveExpression	l1x + 1 + mx		5075081	0		+			
ANR	5075916	Identifier	l1x		5075081	0					
ANR	5075917	AdditiveExpression	1 + mx		5075081	1		+			
ANR	5075918	PrimaryExpression	1		5075081	0					
ANR	5075919	Identifier	mx		5075081	1					
ANR	5075920	Argument	l1y + my		5075081	2					
ANR	5075921	AdditiveExpression	l1y + my		5075081	0		+			
ANR	5075922	Identifier	l1y		5075081	0					
ANR	5075923	Identifier	my		5075081	1					
ANR	5075924	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y + 1 ) = BLK ( ctx -> prev , l1x + mx , l1y + 1 + my )"	161:36:4380:4489	5075081	6	True				
ANR	5075925	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y + 1 ) = BLK ( ctx -> prev , l1x + mx , l1y + 1 + my )"		5075081	0		=			
ANR	5075926	CallExpression	"BLK ( ctx -> cur , l1x , l1y + 1 )"		5075081	0					
ANR	5075927	Callee	BLK		5075081	0					
ANR	5075928	Identifier	BLK		5075081	0					
ANR	5075929	ArgumentList	ctx -> cur		5075081	1					
ANR	5075930	Argument	ctx -> cur		5075081	0					
ANR	5075931	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5075932	Identifier	ctx		5075081	0					
ANR	5075933	Identifier	cur		5075081	1					
ANR	5075934	Argument	l1x		5075081	1					
ANR	5075935	Identifier	l1x		5075081	0					
ANR	5075936	Argument	l1y + 1		5075081	2					
ANR	5075937	AdditiveExpression	l1y + 1		5075081	0		+			
ANR	5075938	Identifier	l1y		5075081	0					
ANR	5075939	PrimaryExpression	1		5075081	1					
ANR	5075940	CallExpression	"BLK ( ctx -> prev , l1x + mx , l1y + 1 + my )"		5075081	1					
ANR	5075941	Callee	BLK		5075081	0					
ANR	5075942	Identifier	BLK		5075081	0					
ANR	5075943	ArgumentList	ctx -> prev		5075081	1					
ANR	5075944	Argument	ctx -> prev		5075081	0					
ANR	5075945	PtrMemberAccess	ctx -> prev		5075081	0					
ANR	5075946	Identifier	ctx		5075081	0					
ANR	5075947	Identifier	prev		5075081	1					
ANR	5075948	Argument	l1x + mx		5075081	1					
ANR	5075949	AdditiveExpression	l1x + mx		5075081	0		+			
ANR	5075950	Identifier	l1x		5075081	0					
ANR	5075951	Identifier	mx		5075081	1					
ANR	5075952	Argument	l1y + 1 + my		5075081	2					
ANR	5075953	AdditiveExpression	l1y + 1 + my		5075081	0		+			
ANR	5075954	Identifier	l1y		5075081	0					
ANR	5075955	AdditiveExpression	1 + my		5075081	1		+			
ANR	5075956	PrimaryExpression	1		5075081	0					
ANR	5075957	Identifier	my		5075081	1					
ANR	5075958	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = BLK ( ctx -> prev , l1x + 1 + mx , l1y + 1 + my )"	165:36:4528:4645	5075081	7	True				
ANR	5075959	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = BLK ( ctx -> prev , l1x + 1 + mx , l1y + 1 + my )"		5075081	0		=			
ANR	5075960	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 )"		5075081	0					
ANR	5075961	Callee	BLK		5075081	0					
ANR	5075962	Identifier	BLK		5075081	0					
ANR	5075963	ArgumentList	ctx -> cur		5075081	1					
ANR	5075964	Argument	ctx -> cur		5075081	0					
ANR	5075965	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5075966	Identifier	ctx		5075081	0					
ANR	5075967	Identifier	cur		5075081	1					
ANR	5075968	Argument	l1x + 1		5075081	1					
ANR	5075969	AdditiveExpression	l1x + 1		5075081	0		+			
ANR	5075970	Identifier	l1x		5075081	0					
ANR	5075971	PrimaryExpression	1		5075081	1					
ANR	5075972	Argument	l1y + 1		5075081	2					
ANR	5075973	AdditiveExpression	l1y + 1		5075081	0		+			
ANR	5075974	Identifier	l1y		5075081	0					
ANR	5075975	PrimaryExpression	1		5075081	1					
ANR	5075976	CallExpression	"BLK ( ctx -> prev , l1x + 1 + mx , l1y + 1 + my )"		5075081	1					
ANR	5075977	Callee	BLK		5075081	0					
ANR	5075978	Identifier	BLK		5075081	0					
ANR	5075979	ArgumentList	ctx -> prev		5075081	1					
ANR	5075980	Argument	ctx -> prev		5075081	0					
ANR	5075981	PtrMemberAccess	ctx -> prev		5075081	0					
ANR	5075982	Identifier	ctx		5075081	0					
ANR	5075983	Identifier	prev		5075081	1					
ANR	5075984	Argument	l1x + 1 + mx		5075081	1					
ANR	5075985	AdditiveExpression	l1x + 1 + mx		5075081	0		+			
ANR	5075986	Identifier	l1x		5075081	0					
ANR	5075987	AdditiveExpression	1 + mx		5075081	1		+			
ANR	5075988	PrimaryExpression	1		5075081	0					
ANR	5075989	Identifier	mx		5075081	1					
ANR	5075990	Argument	l1y + 1 + my		5075081	2					
ANR	5075991	AdditiveExpression	l1y + 1 + my		5075081	0		+			
ANR	5075992	Identifier	l1y		5075081	0					
ANR	5075993	AdditiveExpression	1 + my		5075081	1		+			
ANR	5075994	PrimaryExpression	1		5075081	0					
ANR	5075995	Identifier	my		5075081	1					
ANR	5075996	ElseStatement	else		5075081	0					
ANR	5075997	CompoundStatement		169:35:4650:4650	5075081	0					
ANR	5075998	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y ) = bytestream2_get_byte ( & ctx -> g )"	173:32:4781:4836	5075081	0	True				
ANR	5075999	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y ) = bytestream2_get_byte ( & ctx -> g )"		5075081	0		=			
ANR	5076000	CallExpression	"BLK ( ctx -> cur , l1x , l1y )"		5075081	0					
ANR	5076001	Callee	BLK		5075081	0					
ANR	5076002	Identifier	BLK		5075081	0					
ANR	5076003	ArgumentList	ctx -> cur		5075081	1					
ANR	5076004	Argument	ctx -> cur		5075081	0					
ANR	5076005	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5076006	Identifier	ctx		5075081	0					
ANR	5076007	Identifier	cur		5075081	1					
ANR	5076008	Argument	l1x		5075081	1					
ANR	5076009	Identifier	l1x		5075081	0					
ANR	5076010	Argument	l1y		5075081	2					
ANR	5076011	Identifier	l1y		5075081	0					
ANR	5076012	CallExpression	bytestream2_get_byte ( & ctx -> g )		5075081	1					
ANR	5076013	Callee	bytestream2_get_byte		5075081	0					
ANR	5076014	Identifier	bytestream2_get_byte		5075081	0					
ANR	5076015	ArgumentList	& ctx -> g		5075081	1					
ANR	5076016	Argument	& ctx -> g		5075081	0					
ANR	5076017	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5076018	UnaryOperator	&		5075081	0					
ANR	5076019	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5076020	Identifier	ctx		5075081	0					
ANR	5076021	Identifier	g		5075081	1					
ANR	5076022	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y ) = bytestream2_get_byte ( & ctx -> g )"	175:32:4871:4930	5075081	1	True				
ANR	5076023	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y ) = bytestream2_get_byte ( & ctx -> g )"		5075081	0		=			
ANR	5076024	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y )"		5075081	0					
ANR	5076025	Callee	BLK		5075081	0					
ANR	5076026	Identifier	BLK		5075081	0					
ANR	5076027	ArgumentList	ctx -> cur		5075081	1					
ANR	5076028	Argument	ctx -> cur		5075081	0					
ANR	5076029	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5076030	Identifier	ctx		5075081	0					
ANR	5076031	Identifier	cur		5075081	1					
ANR	5076032	Argument	l1x + 1		5075081	1					
ANR	5076033	AdditiveExpression	l1x + 1		5075081	0		+			
ANR	5076034	Identifier	l1x		5075081	0					
ANR	5076035	PrimaryExpression	1		5075081	1					
ANR	5076036	Argument	l1y		5075081	2					
ANR	5076037	Identifier	l1y		5075081	0					
ANR	5076038	CallExpression	bytestream2_get_byte ( & ctx -> g )		5075081	1					
ANR	5076039	Callee	bytestream2_get_byte		5075081	0					
ANR	5076040	Identifier	bytestream2_get_byte		5075081	0					
ANR	5076041	ArgumentList	& ctx -> g		5075081	1					
ANR	5076042	Argument	& ctx -> g		5075081	0					
ANR	5076043	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5076044	UnaryOperator	&		5075081	0					
ANR	5076045	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5076046	Identifier	ctx		5075081	0					
ANR	5076047	Identifier	g		5075081	1					
ANR	5076048	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y + 1 ) = bytestream2_get_byte ( & ctx -> g )"	177:32:4965:5024	5075081	2	True				
ANR	5076049	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y + 1 ) = bytestream2_get_byte ( & ctx -> g )"		5075081	0		=			
ANR	5076050	CallExpression	"BLK ( ctx -> cur , l1x , l1y + 1 )"		5075081	0					
ANR	5076051	Callee	BLK		5075081	0					
ANR	5076052	Identifier	BLK		5075081	0					
ANR	5076053	ArgumentList	ctx -> cur		5075081	1					
ANR	5076054	Argument	ctx -> cur		5075081	0					
ANR	5076055	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5076056	Identifier	ctx		5075081	0					
ANR	5076057	Identifier	cur		5075081	1					
ANR	5076058	Argument	l1x		5075081	1					
ANR	5076059	Identifier	l1x		5075081	0					
ANR	5076060	Argument	l1y + 1		5075081	2					
ANR	5076061	AdditiveExpression	l1y + 1		5075081	0		+			
ANR	5076062	Identifier	l1y		5075081	0					
ANR	5076063	PrimaryExpression	1		5075081	1					
ANR	5076064	CallExpression	bytestream2_get_byte ( & ctx -> g )		5075081	1					
ANR	5076065	Callee	bytestream2_get_byte		5075081	0					
ANR	5076066	Identifier	bytestream2_get_byte		5075081	0					
ANR	5076067	ArgumentList	& ctx -> g		5075081	1					
ANR	5076068	Argument	& ctx -> g		5075081	0					
ANR	5076069	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5076070	UnaryOperator	&		5075081	0					
ANR	5076071	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5076072	Identifier	ctx		5075081	0					
ANR	5076073	Identifier	g		5075081	1					
ANR	5076074	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = bytestream2_get_byte ( & ctx -> g )"	179:32:5059:5122	5075081	3	True				
ANR	5076075	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = bytestream2_get_byte ( & ctx -> g )"		5075081	0		=			
ANR	5076076	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 )"		5075081	0					
ANR	5076077	Callee	BLK		5075081	0					
ANR	5076078	Identifier	BLK		5075081	0					
ANR	5076079	ArgumentList	ctx -> cur		5075081	1					
ANR	5076080	Argument	ctx -> cur		5075081	0					
ANR	5076081	PtrMemberAccess	ctx -> cur		5075081	0					
ANR	5076082	Identifier	ctx		5075081	0					
ANR	5076083	Identifier	cur		5075081	1					
ANR	5076084	Argument	l1x + 1		5075081	1					
ANR	5076085	AdditiveExpression	l1x + 1		5075081	0		+			
ANR	5076086	Identifier	l1x		5075081	0					
ANR	5076087	PrimaryExpression	1		5075081	1					
ANR	5076088	Argument	l1y + 1		5075081	2					
ANR	5076089	AdditiveExpression	l1y + 1		5075081	0		+			
ANR	5076090	Identifier	l1y		5075081	0					
ANR	5076091	PrimaryExpression	1		5075081	1					
ANR	5076092	CallExpression	bytestream2_get_byte ( & ctx -> g )		5075081	1					
ANR	5076093	Callee	bytestream2_get_byte		5075081	0					
ANR	5076094	Identifier	bytestream2_get_byte		5075081	0					
ANR	5076095	ArgumentList	& ctx -> g		5075081	1					
ANR	5076096	Argument	& ctx -> g		5075081	0					
ANR	5076097	UnaryOperationExpression	& ctx -> g		5075081	0					
ANR	5076098	UnaryOperator	&		5075081	0					
ANR	5076099	PtrMemberAccess	ctx -> g		5075081	1					
ANR	5076100	Identifier	ctx		5075081	0					
ANR	5076101	Identifier	g		5075081	1					
ANR	5076102	ReturnStatement	return 0 ;	195:4:5257:5265	5075081	8	True				
ANR	5076103	PrimaryExpression	0		5075081	0					
ANR	5076104	ReturnType	static int		5075081	1					
ANR	5076105	Identifier	kmvc_decode_inter_8x8		5075081	2					
ANR	5076106	ParameterList	"KmvcContext * ctx , int w , int h"		5075081	3					
ANR	5076107	Parameter	KmvcContext * ctx	1:33:33:49	5075081	0	True				
ANR	5076108	ParameterType	KmvcContext *		5075081	0					
ANR	5076109	Identifier	ctx		5075081	1					
ANR	5076110	Parameter	int w	1:52:52:56	5075081	1	True				
ANR	5076111	ParameterType	int		5075081	0					
ANR	5076112	Identifier	w		5075081	1					
ANR	5076113	Parameter	int h	1:59:59:63	5075081	2	True				
ANR	5076114	ParameterType	int		5075081	0					
ANR	5076115	Identifier	h		5075081	1					
ANR	5076116	CFGEntryNode	ENTRY		5075081		True				
ANR	5076117	CFGExitNode	EXIT		5075081		True				
ANR	5076118	Symbol	bb		5075081						
ANR	5076119	Symbol	BLK		5075081						
ANR	5076120	Symbol	l1x		5075081						
ANR	5076121	Symbol	l1y		5075081						
ANR	5076122	Symbol	bx		5075081						
ANR	5076123	Symbol	by		5075081						
ANR	5076124	Symbol	bytestream2_get_bytes_left		5075081						
ANR	5076125	Symbol	val		5075081						
ANR	5076126	Symbol	res		5075081						
ANR	5076127	Symbol	AV_LOG_ERROR		5075081						
ANR	5076128	Symbol	ctx		5075081						
ANR	5076129	Symbol	ctx -> prev		5075081						
ANR	5076130	Symbol	h		5075081						
ANR	5076131	Symbol	i		5075081						
ANR	5076132	Symbol	j		5075081						
ANR	5076133	Symbol	mx		5075081						
ANR	5076134	Symbol	ctx -> cur		5075081						
ANR	5076135	Symbol	my		5075081						
ANR	5076136	Symbol	* ctx		5075081						
ANR	5076137	Symbol	& ctx -> g		5075081						
ANR	5076138	Symbol	ctx -> avctx		5075081						
ANR	5076139	Symbol	l0y		5075081						
ANR	5076140	Symbol	l0x		5075081						
ANR	5076141	Symbol	w		5075081						
ANR	5076142	Symbol	AVERROR_INVALIDDATA		5075081						
ANR	5076143	Symbol	bytestream2_get_byte		5075081						
