command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8833613	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vc1_decode_i_block_adv_01_1.c								
ANR	8833614	Function	vc1_decode_i_block_adv	1:0:0:6355							
ANR	8833615	FunctionDef	"vc1_decode_i_block_adv (VC1Context * v , DCTELEM block [ 64 ] , int n , int coded , int codingset , int mquant)"		8833614	0					
ANR	8833616	CompoundStatement		3:0:114:6355	8833614	0					
ANR	8833617	IdentifierDeclStatement	GetBitContext * gb = & v -> s . gb ;	5:4:121:149	8833614	0	True				
ANR	8833618	IdentifierDecl	* gb = & v -> s . gb		8833614	0					
ANR	8833619	IdentifierDeclType	GetBitContext *		8833614	0					
ANR	8833620	Identifier	gb		8833614	1					
ANR	8833621	AssignmentExpression	* gb = & v -> s . gb		8833614	2		=			
ANR	8833622	Identifier	gb		8833614	0					
ANR	8833623	UnaryOperationExpression	& v -> s . gb		8833614	1					
ANR	8833624	UnaryOperator	&		8833614	0					
ANR	8833625	MemberAccess	v -> s . gb		8833614	1					
ANR	8833626	PtrMemberAccess	v -> s		8833614	0					
ANR	8833627	Identifier	v		8833614	0					
ANR	8833628	Identifier	s		8833614	1					
ANR	8833629	Identifier	gb		8833614	1					
ANR	8833630	IdentifierDeclStatement	MpegEncContext * s = & v -> s ;	7:4:156:181	8833614	1	True				
ANR	8833631	IdentifierDecl	* s = & v -> s		8833614	0					
ANR	8833632	IdentifierDeclType	MpegEncContext *		8833614	0					
ANR	8833633	Identifier	s		8833614	1					
ANR	8833634	AssignmentExpression	* s = & v -> s		8833614	2		=			
ANR	8833635	Identifier	s		8833614	0					
ANR	8833636	UnaryOperationExpression	& v -> s		8833614	1					
ANR	8833637	UnaryOperator	&		8833614	0					
ANR	8833638	PtrMemberAccess	v -> s		8833614	1					
ANR	8833639	Identifier	v		8833614	0					
ANR	8833640	Identifier	s		8833614	1					
ANR	8833641	IdentifierDeclStatement	int dc_pred_dir = 0 ;	9:4:188:207	8833614	2	True				
ANR	8833642	IdentifierDecl	dc_pred_dir = 0		8833614	0					
ANR	8833643	IdentifierDeclType	int		8833614	0					
ANR	8833644	Identifier	dc_pred_dir		8833614	1					
ANR	8833645	AssignmentExpression	dc_pred_dir = 0		8833614	2		=			
ANR	8833646	Identifier	dc_pred_dir		8833614	0					
ANR	8833647	PrimaryExpression	0		8833614	1					
ANR	8833648	IdentifierDeclStatement	"int run_diff , i ;"	11:4:256:271	8833614	3	True				
ANR	8833649	IdentifierDecl	run_diff		8833614	0					
ANR	8833650	IdentifierDeclType	int		8833614	0					
ANR	8833651	Identifier	run_diff		8833614	1					
ANR	8833652	IdentifierDecl	i		8833614	1					
ANR	8833653	IdentifierDeclType	int		8833614	0					
ANR	8833654	Identifier	i		8833614	1					
ANR	8833655	IdentifierDeclStatement	int16_t * dc_val ;	13:4:278:293	8833614	4	True				
ANR	8833656	IdentifierDecl	* dc_val		8833614	0					
ANR	8833657	IdentifierDeclType	int16_t *		8833614	0					
ANR	8833658	Identifier	dc_val		8833614	1					
ANR	8833659	IdentifierDeclStatement	"int16_t * ac_val , * ac_val2 ;"	15:4:300:325	8833614	5	True				
ANR	8833660	IdentifierDecl	* ac_val		8833614	0					
ANR	8833661	IdentifierDeclType	int16_t *		8833614	0					
ANR	8833662	Identifier	ac_val		8833614	1					
ANR	8833663	IdentifierDecl	* ac_val2		8833614	1					
ANR	8833664	IdentifierDeclType	int16_t *		8833614	0					
ANR	8833665	Identifier	ac_val2		8833614	1					
ANR	8833666	IdentifierDeclStatement	int dcdiff ;	17:4:332:342	8833614	6	True				
ANR	8833667	IdentifierDecl	dcdiff		8833614	0					
ANR	8833668	IdentifierDeclType	int		8833614	0					
ANR	8833669	Identifier	dcdiff		8833614	1					
ANR	8833670	IdentifierDeclStatement	"int a_avail = v -> a_avail , c_avail = v -> c_avail ;"	19:4:349:395	8833614	7	True				
ANR	8833671	IdentifierDecl	a_avail = v -> a_avail		8833614	0					
ANR	8833672	IdentifierDeclType	int		8833614	0					
ANR	8833673	Identifier	a_avail		8833614	1					
ANR	8833674	AssignmentExpression	a_avail = v -> a_avail		8833614	2		=			
ANR	8833675	Identifier	a_avail		8833614	0					
ANR	8833676	PtrMemberAccess	v -> a_avail		8833614	1					
ANR	8833677	Identifier	v		8833614	0					
ANR	8833678	Identifier	a_avail		8833614	1					
ANR	8833679	IdentifierDecl	c_avail = v -> c_avail		8833614	1					
ANR	8833680	IdentifierDeclType	int		8833614	0					
ANR	8833681	Identifier	c_avail		8833614	1					
ANR	8833682	AssignmentExpression	c_avail = v -> c_avail		8833614	2		=			
ANR	8833683	Identifier	c_avail		8833614	0					
ANR	8833684	PtrMemberAccess	v -> c_avail		8833614	1					
ANR	8833685	Identifier	v		8833614	0					
ANR	8833686	Identifier	c_avail		8833614	1					
ANR	8833687	IdentifierDeclStatement	int use_pred = s -> ac_pred ;	21:4:402:427	8833614	8	True				
ANR	8833688	IdentifierDecl	use_pred = s -> ac_pred		8833614	0					
ANR	8833689	IdentifierDeclType	int		8833614	0					
ANR	8833690	Identifier	use_pred		8833614	1					
ANR	8833691	AssignmentExpression	use_pred = s -> ac_pred		8833614	2		=			
ANR	8833692	Identifier	use_pred		8833614	0					
ANR	8833693	PtrMemberAccess	s -> ac_pred		8833614	1					
ANR	8833694	Identifier	s		8833614	0					
ANR	8833695	Identifier	ac_pred		8833614	1					
ANR	8833696	IdentifierDeclStatement	int scale ;	23:4:434:443	8833614	9	True				
ANR	8833697	IdentifierDecl	scale		8833614	0					
ANR	8833698	IdentifierDeclType	int		8833614	0					
ANR	8833699	Identifier	scale		8833614	1					
ANR	8833700	IdentifierDeclStatement	"int q1 , q2 = 0 ;"	25:4:450:464	8833614	10	True				
ANR	8833701	IdentifierDecl	q1		8833614	0					
ANR	8833702	IdentifierDeclType	int		8833614	0					
ANR	8833703	Identifier	q1		8833614	1					
ANR	8833704	IdentifierDecl	q2 = 0		8833614	1					
ANR	8833705	IdentifierDeclType	int		8833614	0					
ANR	8833706	Identifier	q2		8833614	1					
ANR	8833707	AssignmentExpression	q2 = 0		8833614	2		=			
ANR	8833708	Identifier	q2		8833614	0					
ANR	8833709	PrimaryExpression	0		8833614	1					
ANR	8833710	IdentifierDeclStatement	int mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride ;	27:4:471:516	8833614	11	True				
ANR	8833711	IdentifierDecl	mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride		8833614	0					
ANR	8833712	IdentifierDeclType	int		8833614	0					
ANR	8833713	Identifier	mb_pos		8833614	1					
ANR	8833714	AssignmentExpression	mb_pos = s -> mb_x + s -> mb_y * s -> mb_stride		8833614	2		=			
ANR	8833715	Identifier	mb_pos		8833614	0					
ANR	8833716	AdditiveExpression	s -> mb_x + s -> mb_y * s -> mb_stride		8833614	1		+			
ANR	8833717	PtrMemberAccess	s -> mb_x		8833614	0					
ANR	8833718	Identifier	s		8833614	0					
ANR	8833719	Identifier	mb_x		8833614	1					
ANR	8833720	MultiplicativeExpression	s -> mb_y * s -> mb_stride		8833614	1		*			
ANR	8833721	PtrMemberAccess	s -> mb_y		8833614	0					
ANR	8833722	Identifier	s		8833614	0					
ANR	8833723	Identifier	mb_y		8833614	1					
ANR	8833724	PtrMemberAccess	s -> mb_stride		8833614	1					
ANR	8833725	Identifier	s		8833614	0					
ANR	8833726	Identifier	mb_stride		8833614	1					
ANR	8833727	IfStatement	if ( n < 4 )		8833614	12					
ANR	8833728	Condition	n < 4	33:8:560:564	8833614	0	True				
ANR	8833729	RelationalExpression	n < 4		8833614	0		<			
ANR	8833730	Identifier	n		8833614	0					
ANR	8833731	PrimaryExpression	4		8833614	1					
ANR	8833732	CompoundStatement		31:15:452:452	8833614	1					
ANR	8833733	ExpressionStatement	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"	35:8:578:666	8833614	0	True				
ANR	8833734	AssignmentExpression	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8833614	0		=			
ANR	8833735	Identifier	dcdiff		8833614	0					
ANR	8833736	CallExpression	"get_vlc2 ( & s -> gb , ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8833614	1					
ANR	8833737	Callee	get_vlc2		8833614	0					
ANR	8833738	Identifier	get_vlc2		8833614	0					
ANR	8833739	ArgumentList	& s -> gb		8833614	1					
ANR	8833740	Argument	& s -> gb		8833614	0					
ANR	8833741	UnaryOperationExpression	& s -> gb		8833614	0					
ANR	8833742	UnaryOperator	&		8833614	0					
ANR	8833743	PtrMemberAccess	s -> gb		8833614	1					
ANR	8833744	Identifier	s		8833614	0					
ANR	8833745	Identifier	gb		8833614	1					
ANR	8833746	Argument	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8833614	1					
ANR	8833747	MemberAccess	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8833614	0					
ANR	8833748	ArrayIndexing	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ]		8833614	0					
ANR	8833749	Identifier	ff_msmp4_dc_luma_vlc		8833614	0					
ANR	8833750	PtrMemberAccess	s -> dc_table_index		8833614	1					
ANR	8833751	Identifier	s		8833614	0					
ANR	8833752	Identifier	dc_table_index		8833614	1					
ANR	8833753	Identifier	table		8833614	1					
ANR	8833754	Argument	DC_VLC_BITS		8833614	2					
ANR	8833755	Identifier	DC_VLC_BITS		8833614	0					
ANR	8833756	Argument	3		8833614	3					
ANR	8833757	PrimaryExpression	3		8833614	0					
ANR	8833758	ElseStatement	else		8833614	0					
ANR	8833759	CompoundStatement		35:11:565:565	8833614	0					
ANR	8833760	ExpressionStatement	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"	39:8:691:781	8833614	0	True				
ANR	8833761	AssignmentExpression	"dcdiff = get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8833614	0		=			
ANR	8833762	Identifier	dcdiff		8833614	0					
ANR	8833763	CallExpression	"get_vlc2 ( & s -> gb , ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table , DC_VLC_BITS , 3 )"		8833614	1					
ANR	8833764	Callee	get_vlc2		8833614	0					
ANR	8833765	Identifier	get_vlc2		8833614	0					
ANR	8833766	ArgumentList	& s -> gb		8833614	1					
ANR	8833767	Argument	& s -> gb		8833614	0					
ANR	8833768	UnaryOperationExpression	& s -> gb		8833614	0					
ANR	8833769	UnaryOperator	&		8833614	0					
ANR	8833770	PtrMemberAccess	s -> gb		8833614	1					
ANR	8833771	Identifier	s		8833614	0					
ANR	8833772	Identifier	gb		8833614	1					
ANR	8833773	Argument	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8833614	1					
ANR	8833774	MemberAccess	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8833614	0					
ANR	8833775	ArrayIndexing	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ]		8833614	0					
ANR	8833776	Identifier	ff_msmp4_dc_chroma_vlc		8833614	0					
ANR	8833777	PtrMemberAccess	s -> dc_table_index		8833614	1					
ANR	8833778	Identifier	s		8833614	0					
ANR	8833779	Identifier	dc_table_index		8833614	1					
ANR	8833780	Identifier	table		8833614	1					
ANR	8833781	Argument	DC_VLC_BITS		8833614	2					
ANR	8833782	Identifier	DC_VLC_BITS		8833614	0					
ANR	8833783	Argument	3		8833614	3					
ANR	8833784	PrimaryExpression	3		8833614	0					
ANR	8833785	IfStatement	if ( dcdiff < 0 )		8833614	13					
ANR	8833786	Condition	dcdiff < 0	43:8:799:808	8833614	0	True				
ANR	8833787	RelationalExpression	dcdiff < 0		8833614	0		<			
ANR	8833788	Identifier	dcdiff		8833614	0					
ANR	8833789	PrimaryExpression	0		8833614	1					
ANR	8833790	CompoundStatement		41:19:695:695	8833614	1					
ANR	8833791	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Illegal DC VLC\\n"" )"	45:8:821:871	8833614	0	True				
ANR	8833792	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Illegal DC VLC\\n"" )"		8833614	0					
ANR	8833793	Callee	av_log		8833614	0					
ANR	8833794	Identifier	av_log		8833614	0					
ANR	8833795	ArgumentList	s -> avctx		8833614	1					
ANR	8833796	Argument	s -> avctx		8833614	0					
ANR	8833797	PtrMemberAccess	s -> avctx		8833614	0					
ANR	8833798	Identifier	s		8833614	0					
ANR	8833799	Identifier	avctx		8833614	1					
ANR	8833800	Argument	AV_LOG_ERROR		8833614	1					
ANR	8833801	Identifier	AV_LOG_ERROR		8833614	0					
ANR	8833802	Argument	"""Illegal DC VLC\\n"""		8833614	2					
ANR	8833803	PrimaryExpression	"""Illegal DC VLC\\n"""		8833614	0					
ANR	8833804	ReturnStatement	return - 1 ;	47:8:882:891	8833614	1	True				
ANR	8833805	UnaryOperationExpression	- 1		8833614	0					
ANR	8833806	UnaryOperator	-		8833614	0					
ANR	8833807	PrimaryExpression	1		8833614	1					
ANR	8833808	IfStatement	if ( dcdiff )		8833614	14					
ANR	8833809	Condition	dcdiff	51:8:909:914	8833614	0	True				
ANR	8833810	Identifier	dcdiff		8833614	0					
ANR	8833811	CompoundStatement		51:4:807:807	8833614	1					
ANR	8833812	IfStatement	if ( dcdiff == 119 )		8833614	0					
ANR	8833813	Condition	dcdiff == 119	55:12:937:949	8833614	0	True				
ANR	8833814	EqualityExpression	dcdiff == 119		8833614	0		==			
ANR	8833815	Identifier	dcdiff		8833614	0					
ANR	8833816	PrimaryExpression	119		8833614	1					
ANR	8833817	CompoundStatement		55:8:868:868	8833614	1					
ANR	8833818	IfStatement	if ( mquant == 1 )		8833614	0					
ANR	8833819	Condition	mquant == 1	61:16:1036:1046	8833614	0	True				
ANR	8833820	EqualityExpression	mquant == 1		8833614	0		==			
ANR	8833821	Identifier	mquant		8833614	0					
ANR	8833822	PrimaryExpression	1		8833614	1					
ANR	8833823	ExpressionStatement	"dcdiff = get_bits ( gb , 10 )"	61:29:1049:1074	8833614	1	True				
ANR	8833824	AssignmentExpression	"dcdiff = get_bits ( gb , 10 )"		8833614	0		=			
ANR	8833825	Identifier	dcdiff		8833614	0					
ANR	8833826	CallExpression	"get_bits ( gb , 10 )"		8833614	1					
ANR	8833827	Callee	get_bits		8833614	0					
ANR	8833828	Identifier	get_bits		8833614	0					
ANR	8833829	ArgumentList	gb		8833614	1					
ANR	8833830	Argument	gb		8833614	0					
ANR	8833831	Identifier	gb		8833614	0					
ANR	8833832	Argument	10		8833614	1					
ANR	8833833	PrimaryExpression	10		8833614	0					
ANR	8833834	ElseStatement	else		8833614	0					
ANR	8833835	IfStatement	if ( mquant == 2 )		8833614	0					
ANR	8833836	Condition	mquant == 2	63:21:1098:1108	8833614	0	True				
ANR	8833837	EqualityExpression	mquant == 2		8833614	0		==			
ANR	8833838	Identifier	mquant		8833614	0					
ANR	8833839	PrimaryExpression	2		8833614	1					
ANR	8833840	ExpressionStatement	"dcdiff = get_bits ( gb , 9 )"	63:34:1111:1135	8833614	1	True				
ANR	8833841	AssignmentExpression	"dcdiff = get_bits ( gb , 9 )"		8833614	0		=			
ANR	8833842	Identifier	dcdiff		8833614	0					
ANR	8833843	CallExpression	"get_bits ( gb , 9 )"		8833614	1					
ANR	8833844	Callee	get_bits		8833614	0					
ANR	8833845	Identifier	get_bits		8833614	0					
ANR	8833846	ArgumentList	gb		8833614	1					
ANR	8833847	Argument	gb		8833614	0					
ANR	8833848	Identifier	gb		8833614	0					
ANR	8833849	Argument	9		8833614	1					
ANR	8833850	PrimaryExpression	9		8833614	0					
ANR	8833851	ElseStatement	else		8833614	0					
ANR	8833852	ExpressionStatement	"dcdiff = get_bits ( gb , 8 )"	65:17:1155:1179	8833614	0	True				
ANR	8833853	AssignmentExpression	"dcdiff = get_bits ( gb , 8 )"		8833614	0		=			
ANR	8833854	Identifier	dcdiff		8833614	0					
ANR	8833855	CallExpression	"get_bits ( gb , 8 )"		8833614	1					
ANR	8833856	Callee	get_bits		8833614	0					
ANR	8833857	Identifier	get_bits		8833614	0					
ANR	8833858	ArgumentList	gb		8833614	1					
ANR	8833859	Argument	gb		8833614	0					
ANR	8833860	Identifier	gb		8833614	0					
ANR	8833861	Argument	8		8833614	1					
ANR	8833862	PrimaryExpression	8		8833614	0					
ANR	8833863	ElseStatement	else		8833614	0					
ANR	8833864	CompoundStatement		69:8:1100:1100	8833614	0					
ANR	8833865	IfStatement	if ( mquant == 1 )		8833614	0					
ANR	8833866	Condition	mquant == 1	73:16:1234:1244	8833614	0	True				
ANR	8833867	EqualityExpression	mquant == 1		8833614	0		==			
ANR	8833868	Identifier	mquant		8833614	0					
ANR	8833869	PrimaryExpression	1		8833614	1					
ANR	8833870	ExpressionStatement	"dcdiff = ( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"	75:16:1264:1306	8833614	1	True				
ANR	8833871	AssignmentExpression	"dcdiff = ( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"		8833614	0		=			
ANR	8833872	Identifier	dcdiff		8833614	0					
ANR	8833873	AdditiveExpression	"( dcdiff << 2 ) + get_bits ( gb , 2 ) - 3"		8833614	1		+			
ANR	8833874	ShiftExpression	dcdiff << 2		8833614	0		<<			
ANR	8833875	Identifier	dcdiff		8833614	0					
ANR	8833876	PrimaryExpression	2		8833614	1					
ANR	8833877	AdditiveExpression	"get_bits ( gb , 2 ) - 3"		8833614	1		-			
ANR	8833878	CallExpression	"get_bits ( gb , 2 )"		8833614	0					
ANR	8833879	Callee	get_bits		8833614	0					
ANR	8833880	Identifier	get_bits		8833614	0					
ANR	8833881	ArgumentList	gb		8833614	1					
ANR	8833882	Argument	gb		8833614	0					
ANR	8833883	Identifier	gb		8833614	0					
ANR	8833884	Argument	2		8833614	1					
ANR	8833885	PrimaryExpression	2		8833614	0					
ANR	8833886	PrimaryExpression	3		8833614	1					
ANR	8833887	ElseStatement	else		8833614	0					
ANR	8833888	IfStatement	if ( mquant == 2 )		8833614	0					
ANR	8833889	Condition	mquant == 2	77:21:1330:1340	8833614	0	True				
ANR	8833890	EqualityExpression	mquant == 2		8833614	0		==			
ANR	8833891	Identifier	mquant		8833614	0					
ANR	8833892	PrimaryExpression	2		8833614	1					
ANR	8833893	ExpressionStatement	"dcdiff = ( dcdiff << 1 ) + get_bits ( gb , 1 ) - 1"	79:16:1360:1402	8833614	1	True				
ANR	8833894	AssignmentExpression	"dcdiff = ( dcdiff << 1 ) + get_bits ( gb , 1 ) - 1"		8833614	0		=			
ANR	8833895	Identifier	dcdiff		8833614	0					
ANR	8833896	AdditiveExpression	"( dcdiff << 1 ) + get_bits ( gb , 1 ) - 1"		8833614	1		+			
ANR	8833897	ShiftExpression	dcdiff << 1		8833614	0		<<			
ANR	8833898	Identifier	dcdiff		8833614	0					
ANR	8833899	PrimaryExpression	1		8833614	1					
ANR	8833900	AdditiveExpression	"get_bits ( gb , 1 ) - 1"		8833614	1		-			
ANR	8833901	CallExpression	"get_bits ( gb , 1 )"		8833614	0					
ANR	8833902	Callee	get_bits		8833614	0					
ANR	8833903	Identifier	get_bits		8833614	0					
ANR	8833904	ArgumentList	gb		8833614	1					
ANR	8833905	Argument	gb		8833614	0					
ANR	8833906	Identifier	gb		8833614	0					
ANR	8833907	Argument	1		8833614	1					
ANR	8833908	PrimaryExpression	1		8833614	0					
ANR	8833909	PrimaryExpression	1		8833614	1					
ANR	8833910	IfStatement	"if ( get_bits ( gb , 1 ) )"		8833614	1					
ANR	8833911	Condition	"get_bits ( gb , 1 )"	83:12:1428:1442	8833614	0	True				
ANR	8833912	CallExpression	"get_bits ( gb , 1 )"		8833614	0					
ANR	8833913	Callee	get_bits		8833614	0					
ANR	8833914	Identifier	get_bits		8833614	0					
ANR	8833915	ArgumentList	gb		8833614	1					
ANR	8833916	Argument	gb		8833614	0					
ANR	8833917	Identifier	gb		8833614	0					
ANR	8833918	Argument	1		8833614	1					
ANR	8833919	PrimaryExpression	1		8833614	0					
ANR	8833920	ExpressionStatement	dcdiff = - dcdiff	85:12:1458:1474	8833614	1	True				
ANR	8833921	AssignmentExpression	dcdiff = - dcdiff		8833614	0		=			
ANR	8833922	Identifier	dcdiff		8833614	0					
ANR	8833923	UnaryOperationExpression	- dcdiff		8833614	1					
ANR	8833924	UnaryOperator	-		8833614	0					
ANR	8833925	Identifier	dcdiff		8833614	1					
ANR	8833926	ExpressionStatement	"dcdiff += vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , v -> a_avail , v -> c_avail , & dc_val , & dc_pred_dir )"	93:4:1512:1610	8833614	15	True				
ANR	8833927	AssignmentExpression	"dcdiff += vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , v -> a_avail , v -> c_avail , & dc_val , & dc_pred_dir )"		8833614	0		+=			
ANR	8833928	Identifier	dcdiff		8833614	0					
ANR	8833929	CallExpression	"vc1_pred_dc ( & v -> s , v -> overlap , mquant , n , v -> a_avail , v -> c_avail , & dc_val , & dc_pred_dir )"		8833614	1					
ANR	8833930	Callee	vc1_pred_dc		8833614	0					
ANR	8833931	Identifier	vc1_pred_dc		8833614	0					
ANR	8833932	ArgumentList	& v -> s		8833614	1					
ANR	8833933	Argument	& v -> s		8833614	0					
ANR	8833934	UnaryOperationExpression	& v -> s		8833614	0					
ANR	8833935	UnaryOperator	&		8833614	0					
ANR	8833936	PtrMemberAccess	v -> s		8833614	1					
ANR	8833937	Identifier	v		8833614	0					
ANR	8833938	Identifier	s		8833614	1					
ANR	8833939	Argument	v -> overlap		8833614	1					
ANR	8833940	PtrMemberAccess	v -> overlap		8833614	0					
ANR	8833941	Identifier	v		8833614	0					
ANR	8833942	Identifier	overlap		8833614	1					
ANR	8833943	Argument	mquant		8833614	2					
ANR	8833944	Identifier	mquant		8833614	0					
ANR	8833945	Argument	n		8833614	3					
ANR	8833946	Identifier	n		8833614	0					
ANR	8833947	Argument	v -> a_avail		8833614	4					
ANR	8833948	PtrMemberAccess	v -> a_avail		8833614	0					
ANR	8833949	Identifier	v		8833614	0					
ANR	8833950	Identifier	a_avail		8833614	1					
ANR	8833951	Argument	v -> c_avail		8833614	5					
ANR	8833952	PtrMemberAccess	v -> c_avail		8833614	0					
ANR	8833953	Identifier	v		8833614	0					
ANR	8833954	Identifier	c_avail		8833614	1					
ANR	8833955	Argument	& dc_val		8833614	6					
ANR	8833956	UnaryOperationExpression	& dc_val		8833614	0					
ANR	8833957	UnaryOperator	&		8833614	0					
ANR	8833958	Identifier	dc_val		8833614	1					
ANR	8833959	Argument	& dc_pred_dir		8833614	7					
ANR	8833960	UnaryOperationExpression	& dc_pred_dir		8833614	0					
ANR	8833961	UnaryOperator	&		8833614	0					
ANR	8833962	Identifier	dc_pred_dir		8833614	1					
ANR	8833963	ExpressionStatement	* dc_val = dcdiff	95:4:1617:1633	8833614	16	True				
ANR	8833964	AssignmentExpression	* dc_val = dcdiff		8833614	0		=			
ANR	8833965	UnaryOperationExpression	* dc_val		8833614	0					
ANR	8833966	UnaryOperator	*		8833614	0					
ANR	8833967	Identifier	dc_val		8833614	1					
ANR	8833968	Identifier	dcdiff		8833614	1					
ANR	8833969	IfStatement	if ( n < 4 )		8833614	17					
ANR	8833970	Condition	n < 4	101:8:1707:1711	8833614	0	True				
ANR	8833971	RelationalExpression	n < 4		8833614	0		<			
ANR	8833972	Identifier	n		8833614	0					
ANR	8833973	PrimaryExpression	4		8833614	1					
ANR	8833974	CompoundStatement		99:15:1599:1599	8833614	1					
ANR	8833975	ExpressionStatement	block [ 0 ] = dcdiff * s -> y_dc_scale	103:8:1725:1758	8833614	0	True				
ANR	8833976	AssignmentExpression	block [ 0 ] = dcdiff * s -> y_dc_scale		8833614	0		=			
ANR	8833977	ArrayIndexing	block [ 0 ]		8833614	0					
ANR	8833978	Identifier	block		8833614	0					
ANR	8833979	PrimaryExpression	0		8833614	1					
ANR	8833980	MultiplicativeExpression	dcdiff * s -> y_dc_scale		8833614	1		*			
ANR	8833981	Identifier	dcdiff		8833614	0					
ANR	8833982	PtrMemberAccess	s -> y_dc_scale		8833614	1					
ANR	8833983	Identifier	s		8833614	0					
ANR	8833984	Identifier	y_dc_scale		8833614	1					
ANR	8833985	ElseStatement	else		8833614	0					
ANR	8833986	CompoundStatement		103:11:1657:1657	8833614	0					
ANR	8833987	ExpressionStatement	block [ 0 ] = dcdiff * s -> c_dc_scale	107:8:1783:1816	8833614	0	True				
ANR	8833988	AssignmentExpression	block [ 0 ] = dcdiff * s -> c_dc_scale		8833614	0		=			
ANR	8833989	ArrayIndexing	block [ 0 ]		8833614	0					
ANR	8833990	Identifier	block		8833614	0					
ANR	8833991	PrimaryExpression	0		8833614	1					
ANR	8833992	MultiplicativeExpression	dcdiff * s -> c_dc_scale		8833614	1		*			
ANR	8833993	Identifier	dcdiff		8833614	0					
ANR	8833994	PtrMemberAccess	s -> c_dc_scale		8833614	1					
ANR	8833995	Identifier	s		8833614	0					
ANR	8833996	Identifier	c_dc_scale		8833614	1					
ANR	8833997	ExpressionStatement	run_diff = 0	113:4:1848:1860	8833614	18	True				
ANR	8833998	AssignmentExpression	run_diff = 0		8833614	0		=			
ANR	8833999	Identifier	run_diff		8833614	0					
ANR	8834000	PrimaryExpression	0		8833614	1					
ANR	8834001	ExpressionStatement	i = 0	115:4:1867:1872	8833614	19	True				
ANR	8834002	AssignmentExpression	i = 0		8833614	0		=			
ANR	8834003	Identifier	i		8833614	0					
ANR	8834004	PrimaryExpression	0		8833614	1					
ANR	8834005	ExpressionStatement	i = 1	121:4:1900:1905	8833614	20	True				
ANR	8834006	AssignmentExpression	i = 1		8833614	0		=			
ANR	8834007	Identifier	i		8833614	0					
ANR	8834008	PrimaryExpression	1		8833614	1					
ANR	8834009	IfStatement	if ( ! a_avail )		8833614	21					
ANR	8834010	Condition	! a_avail	127:7:1988:1995	8833614	0	True				
ANR	8834011	UnaryOperationExpression	! a_avail		8833614	0					
ANR	8834012	UnaryOperator	!		8833614	0					
ANR	8834013	Identifier	a_avail		8833614	1					
ANR	8834014	ExpressionStatement	dc_pred_dir = 1	127:17:1998:2013	8833614	1	True				
ANR	8834015	AssignmentExpression	dc_pred_dir = 1		8833614	0		=			
ANR	8834016	Identifier	dc_pred_dir		8833614	0					
ANR	8834017	PrimaryExpression	1		8833614	1					
ANR	8834018	IfStatement	if ( ! c_avail )		8833614	22					
ANR	8834019	Condition	! c_avail	129:7:2023:2030	8833614	0	True				
ANR	8834020	UnaryOperationExpression	! c_avail		8833614	0					
ANR	8834021	UnaryOperator	!		8833614	0					
ANR	8834022	Identifier	c_avail		8833614	1					
ANR	8834023	ExpressionStatement	dc_pred_dir = 0	129:17:2033:2048	8833614	1	True				
ANR	8834024	AssignmentExpression	dc_pred_dir = 0		8833614	0		=			
ANR	8834025	Identifier	dc_pred_dir		8833614	0					
ANR	8834026	PrimaryExpression	0		8833614	1					
ANR	8834027	IfStatement	if ( ! a_avail && ! c_avail )		8833614	23					
ANR	8834028	Condition	! a_avail && ! c_avail	131:7:2058:2077	8833614	0	True				
ANR	8834029	AndExpression	! a_avail && ! c_avail		8833614	0		&&			
ANR	8834030	UnaryOperationExpression	! a_avail		8833614	0					
ANR	8834031	UnaryOperator	!		8833614	0					
ANR	8834032	Identifier	a_avail		8833614	1					
ANR	8834033	UnaryOperationExpression	! c_avail		8833614	1					
ANR	8834034	UnaryOperator	!		8833614	0					
ANR	8834035	Identifier	c_avail		8833614	1					
ANR	8834036	ExpressionStatement	use_pred = 0	131:29:2080:2092	8833614	1	True				
ANR	8834037	AssignmentExpression	use_pred = 0		8833614	0		=			
ANR	8834038	Identifier	use_pred		8833614	0					
ANR	8834039	PrimaryExpression	0		8833614	1					
ANR	8834040	ExpressionStatement	ac_val = s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16	133:4:2099:2148	8833614	24	True				
ANR	8834041	AssignmentExpression	ac_val = s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16		8833614	0		=			
ANR	8834042	Identifier	ac_val		8833614	0					
ANR	8834043	AdditiveExpression	s -> ac_val [ 0 ] [ 0 ] + s -> block_index [ n ] * 16		8833614	1		+			
ANR	8834044	ArrayIndexing	s -> ac_val [ 0 ] [ 0 ]		8833614	0					
ANR	8834045	ArrayIndexing	s -> ac_val [ 0 ]		8833614	0					
ANR	8834046	PtrMemberAccess	s -> ac_val		8833614	0					
ANR	8834047	Identifier	s		8833614	0					
ANR	8834048	Identifier	ac_val		8833614	1					
ANR	8834049	PrimaryExpression	0		8833614	1					
ANR	8834050	PrimaryExpression	0		8833614	1					
ANR	8834051	MultiplicativeExpression	s -> block_index [ n ] * 16		8833614	1		*			
ANR	8834052	ArrayIndexing	s -> block_index [ n ]		8833614	0					
ANR	8834053	PtrMemberAccess	s -> block_index		8833614	0					
ANR	8834054	Identifier	s		8833614	0					
ANR	8834055	Identifier	block_index		8833614	1					
ANR	8834056	Identifier	n		8833614	1					
ANR	8834057	PrimaryExpression	16		8833614	1					
ANR	8834058	ExpressionStatement	ac_val2 = ac_val	135:4:2155:2171	8833614	25	True				
ANR	8834059	AssignmentExpression	ac_val2 = ac_val		8833614	0		=			
ANR	8834060	Identifier	ac_val2		8833614	0					
ANR	8834061	Identifier	ac_val		8833614	1					
ANR	8834062	ExpressionStatement	scale = mquant * 2 + v -> halfpq	139:4:2180:2210	8833614	26	True				
ANR	8834063	AssignmentExpression	scale = mquant * 2 + v -> halfpq		8833614	0		=			
ANR	8834064	Identifier	scale		8833614	0					
ANR	8834065	AdditiveExpression	mquant * 2 + v -> halfpq		8833614	1		+			
ANR	8834066	MultiplicativeExpression	mquant * 2		8833614	0		*			
ANR	8834067	Identifier	mquant		8833614	0					
ANR	8834068	PrimaryExpression	2		8833614	1					
ANR	8834069	PtrMemberAccess	v -> halfpq		8833614	1					
ANR	8834070	Identifier	v		8833614	0					
ANR	8834071	Identifier	halfpq		8833614	1					
ANR	8834072	IfStatement	if ( dc_pred_dir )		8833614	27					
ANR	8834073	Condition	dc_pred_dir	143:7:2222:2232	8833614	0	True				
ANR	8834074	Identifier	dc_pred_dir		8833614	0					
ANR	8834075	ExpressionStatement	ac_val -= 16	145:8:2251:2263	8833614	1	True				
ANR	8834076	AssignmentExpression	ac_val -= 16		8833614	0		-=			
ANR	8834077	Identifier	ac_val		8833614	0					
ANR	8834078	PrimaryExpression	16		8833614	1					
ANR	8834079	ElseStatement	else		8833614	0					
ANR	8834080	ExpressionStatement	ac_val -= 16 * s -> block_wrap [ n ]	149:8:2290:2321	8833614	0	True				
ANR	8834081	AssignmentExpression	ac_val -= 16 * s -> block_wrap [ n ]		8833614	0		-=			
ANR	8834082	Identifier	ac_val		8833614	0					
ANR	8834083	MultiplicativeExpression	16 * s -> block_wrap [ n ]		8833614	1		*			
ANR	8834084	PrimaryExpression	16		8833614	0					
ANR	8834085	ArrayIndexing	s -> block_wrap [ n ]		8833614	1					
ANR	8834086	PtrMemberAccess	s -> block_wrap		8833614	0					
ANR	8834087	Identifier	s		8833614	0					
ANR	8834088	Identifier	block_wrap		8833614	1					
ANR	8834089	Identifier	n		8833614	1					
ANR	8834090	ExpressionStatement	q1 = s -> current_picture . qscale_table [ mb_pos ]	153:4:2330:2374	8833614	28	True				
ANR	8834091	AssignmentExpression	q1 = s -> current_picture . qscale_table [ mb_pos ]		8833614	0		=			
ANR	8834092	Identifier	q1		8833614	0					
ANR	8834093	ArrayIndexing	s -> current_picture . qscale_table [ mb_pos ]		8833614	1					
ANR	8834094	MemberAccess	s -> current_picture . qscale_table		8833614	0					
ANR	8834095	PtrMemberAccess	s -> current_picture		8833614	0					
ANR	8834096	Identifier	s		8833614	0					
ANR	8834097	Identifier	current_picture		8833614	1					
ANR	8834098	Identifier	qscale_table		8833614	1					
ANR	8834099	Identifier	mb_pos		8833614	1					
ANR	8834100	IfStatement	if ( dc_pred_dir && c_avail )		8833614	29					
ANR	8834101	Condition	dc_pred_dir && c_avail	155:7:2384:2405	8833614	0	True				
ANR	8834102	AndExpression	dc_pred_dir && c_avail		8833614	0		&&			
ANR	8834103	Identifier	dc_pred_dir		8833614	0					
ANR	8834104	Identifier	c_avail		8833614	1					
ANR	8834105	ExpressionStatement	q2 = s -> current_picture . qscale_table [ mb_pos - 1 ]	155:31:2408:2456	8833614	1	True				
ANR	8834106	AssignmentExpression	q2 = s -> current_picture . qscale_table [ mb_pos - 1 ]		8833614	0		=			
ANR	8834107	Identifier	q2		8833614	0					
ANR	8834108	ArrayIndexing	s -> current_picture . qscale_table [ mb_pos - 1 ]		8833614	1					
ANR	8834109	MemberAccess	s -> current_picture . qscale_table		8833614	0					
ANR	8834110	PtrMemberAccess	s -> current_picture		8833614	0					
ANR	8834111	Identifier	s		8833614	0					
ANR	8834112	Identifier	current_picture		8833614	1					
ANR	8834113	Identifier	qscale_table		8833614	1					
ANR	8834114	AdditiveExpression	mb_pos - 1		8833614	1		-			
ANR	8834115	Identifier	mb_pos		8833614	0					
ANR	8834116	PrimaryExpression	1		8833614	1					
ANR	8834117	IfStatement	if ( ! dc_pred_dir && a_avail )		8833614	30					
ANR	8834118	Condition	! dc_pred_dir && a_avail	157:7:2466:2488	8833614	0	True				
ANR	8834119	AndExpression	! dc_pred_dir && a_avail		8833614	0		&&			
ANR	8834120	UnaryOperationExpression	! dc_pred_dir		8833614	0					
ANR	8834121	UnaryOperator	!		8833614	0					
ANR	8834122	Identifier	dc_pred_dir		8833614	1					
ANR	8834123	Identifier	a_avail		8833614	1					
ANR	8834124	ExpressionStatement	q2 = s -> current_picture . qscale_table [ mb_pos - s -> mb_stride ]	157:32:2491:2550	8833614	1	True				
ANR	8834125	AssignmentExpression	q2 = s -> current_picture . qscale_table [ mb_pos - s -> mb_stride ]		8833614	0		=			
ANR	8834126	Identifier	q2		8833614	0					
ANR	8834127	ArrayIndexing	s -> current_picture . qscale_table [ mb_pos - s -> mb_stride ]		8833614	1					
ANR	8834128	MemberAccess	s -> current_picture . qscale_table		8833614	0					
ANR	8834129	PtrMemberAccess	s -> current_picture		8833614	0					
ANR	8834130	Identifier	s		8833614	0					
ANR	8834131	Identifier	current_picture		8833614	1					
ANR	8834132	Identifier	qscale_table		8833614	1					
ANR	8834133	AdditiveExpression	mb_pos - s -> mb_stride		8833614	1		-			
ANR	8834134	Identifier	mb_pos		8833614	0					
ANR	8834135	PtrMemberAccess	s -> mb_stride		8833614	1					
ANR	8834136	Identifier	s		8833614	0					
ANR	8834137	Identifier	mb_stride		8833614	1					
ANR	8834138	IfStatement	if ( n && n < 4 )		8833614	31					
ANR	8834139	Condition	n && n < 4	159:7:2560:2567	8833614	0	True				
ANR	8834140	AndExpression	n && n < 4		8833614	0		&&			
ANR	8834141	Identifier	n		8833614	0					
ANR	8834142	RelationalExpression	n < 4		8833614	1		<			
ANR	8834143	Identifier	n		8833614	0					
ANR	8834144	PrimaryExpression	4		8833614	1					
ANR	8834145	ExpressionStatement	q2 = q1	159:17:2570:2577	8833614	1	True				
ANR	8834146	AssignmentExpression	q2 = q1		8833614	0		=			
ANR	8834147	Identifier	q2		8833614	0					
ANR	8834148	Identifier	q1		8833614	1					
ANR	8834149	IfStatement	if ( coded )		8833614	32					
ANR	8834150	Condition	coded	163:7:2589:2593	8833614	0	True				
ANR	8834151	Identifier	coded		8833614	0					
ANR	8834152	CompoundStatement		167:8:2561:2566	8833614	1					
ANR	8834153	IdentifierDeclStatement	"int last = 0 , skip , value ;"	165:8:2607:2632	8833614	0	True				
ANR	8834154	IdentifierDecl	last = 0		8833614	0					
ANR	8834155	IdentifierDeclType	int		8833614	0					
ANR	8834156	Identifier	last		8833614	1					
ANR	8834157	AssignmentExpression	last = 0		8833614	2		=			
ANR	8834158	Identifier	last		8833614	0					
ANR	8834159	PrimaryExpression	0		8833614	1					
ANR	8834160	IdentifierDecl	skip		8833614	1					
ANR	8834161	IdentifierDeclType	int		8833614	0					
ANR	8834162	Identifier	skip		8833614	1					
ANR	8834163	IdentifierDecl	value		8833614	2					
ANR	8834164	IdentifierDeclType	int		8833614	0					
ANR	8834165	Identifier	value		8833614	1					
ANR	8834166	IdentifierDeclStatement	const int8_t * zz_table ;	167:8:2643:2665	8833614	1	True				
ANR	8834167	IdentifierDecl	* zz_table		8833614	0					
ANR	8834168	IdentifierDeclType	const int8_t *		8833614	0					
ANR	8834169	Identifier	zz_table		8833614	1					
ANR	8834170	IdentifierDeclStatement	int k ;	169:8:2676:2681	8833614	2	True				
ANR	8834171	IdentifierDecl	k		8833614	0					
ANR	8834172	IdentifierDeclType	int		8833614	0					
ANR	8834173	Identifier	k		8833614	1					
ANR	8834174	IfStatement	if ( v -> s . ac_pred )		8833614	3					
ANR	8834175	Condition	v -> s . ac_pred	173:11:2697:2708	8833614	0	True				
ANR	8834176	MemberAccess	v -> s . ac_pred		8833614	0					
ANR	8834177	PtrMemberAccess	v -> s		8833614	0					
ANR	8834178	Identifier	v		8833614	0					
ANR	8834179	Identifier	s		8833614	1					
ANR	8834180	Identifier	ac_pred		8833614	1					
ANR	8834181	CompoundStatement		171:25:2596:2596	8833614	1					
ANR	8834182	IfStatement	if ( ! dc_pred_dir )		8833614	0					
ANR	8834183	Condition	! dc_pred_dir	175:15:2729:2740	8833614	0	True				
ANR	8834184	UnaryOperationExpression	! dc_pred_dir		8833614	0					
ANR	8834185	UnaryOperator	!		8833614	0					
ANR	8834186	Identifier	dc_pred_dir		8833614	1					
ANR	8834187	ExpressionStatement	zz_table = vc1_horizontal_zz	177:16:2760:2788	8833614	1	True				
ANR	8834188	AssignmentExpression	zz_table = vc1_horizontal_zz		8833614	0		=			
ANR	8834189	Identifier	zz_table		8833614	0					
ANR	8834190	Identifier	vc1_horizontal_zz		8833614	1					
ANR	8834191	ElseStatement	else		8833614	0					
ANR	8834192	ExpressionStatement	zz_table = vc1_vertical_zz	181:16:2825:2851	8833614	0	True				
ANR	8834193	AssignmentExpression	zz_table = vc1_vertical_zz		8833614	0		=			
ANR	8834194	Identifier	zz_table		8833614	0					
ANR	8834195	Identifier	vc1_vertical_zz		8833614	1					
ANR	8834196	ElseStatement	else		8833614	0					
ANR	8834197	ExpressionStatement	zz_table = vc1_normal_zz	185:12:2882:2906	8833614	0	True				
ANR	8834198	AssignmentExpression	zz_table = vc1_normal_zz		8833614	0		=			
ANR	8834199	Identifier	zz_table		8833614	0					
ANR	8834200	Identifier	vc1_normal_zz		8833614	1					
ANR	8834201	WhileStatement	while ( ! last )		8833614	4					
ANR	8834202	Condition	! last	189:15:2926:2930	8833614	0	True				
ANR	8834203	UnaryOperationExpression	! last		8833614	0					
ANR	8834204	UnaryOperator	!		8833614	0					
ANR	8834205	Identifier	last		8833614	1					
ANR	8834206	CompoundStatement		187:22:2818:2818	8833614	1					
ANR	8834207	ExpressionStatement	"vc1_decode_ac_coeff ( v , & last , & skip , & value , codingset )"	191:12:2948:3003	8833614	0	True				
ANR	8834208	CallExpression	"vc1_decode_ac_coeff ( v , & last , & skip , & value , codingset )"		8833614	0					
ANR	8834209	Callee	vc1_decode_ac_coeff		8833614	0					
ANR	8834210	Identifier	vc1_decode_ac_coeff		8833614	0					
ANR	8834211	ArgumentList	v		8833614	1					
ANR	8834212	Argument	v		8833614	0					
ANR	8834213	Identifier	v		8833614	0					
ANR	8834214	Argument	& last		8833614	1					
ANR	8834215	UnaryOperationExpression	& last		8833614	0					
ANR	8834216	UnaryOperator	&		8833614	0					
ANR	8834217	Identifier	last		8833614	1					
ANR	8834218	Argument	& skip		8833614	2					
ANR	8834219	UnaryOperationExpression	& skip		8833614	0					
ANR	8834220	UnaryOperator	&		8833614	0					
ANR	8834221	Identifier	skip		8833614	1					
ANR	8834222	Argument	& value		8833614	3					
ANR	8834223	UnaryOperationExpression	& value		8833614	0					
ANR	8834224	UnaryOperator	&		8833614	0					
ANR	8834225	Identifier	value		8833614	1					
ANR	8834226	Argument	codingset		8833614	4					
ANR	8834227	Identifier	codingset		8833614	0					
ANR	8834228	ExpressionStatement	i += skip	193:12:3018:3027	8833614	1	True				
ANR	8834229	AssignmentExpression	i += skip		8833614	0		+=			
ANR	8834230	Identifier	i		8833614	0					
ANR	8834231	Identifier	skip		8833614	1					
ANR	8834232	IfStatement	if ( i > 63 )		8833614	2					
ANR	8834233	Condition	i > 63	195:15:3045:3050	8833614	0	True				
ANR	8834234	RelationalExpression	i > 63		8833614	0		>			
ANR	8834235	Identifier	i		8833614	0					
ANR	8834236	PrimaryExpression	63		8833614	1					
ANR	8834237	BreakStatement	break ;	197:16:3070:3075	8833614	1	True				
ANR	8834238	ExpressionStatement	block [ zz_table [ i ++ ] ] = value	199:12:3090:3118	8833614	3	True				
ANR	8834239	AssignmentExpression	block [ zz_table [ i ++ ] ] = value		8833614	0		=			
ANR	8834240	ArrayIndexing	block [ zz_table [ i ++ ] ]		8833614	0					
ANR	8834241	Identifier	block		8833614	0					
ANR	8834242	ArrayIndexing	zz_table [ i ++ ]		8833614	1					
ANR	8834243	Identifier	zz_table		8833614	0					
ANR	8834244	PostIncDecOperationExpression	i ++		8833614	1					
ANR	8834245	Identifier	i		8833614	0					
ANR	8834246	IncDec	++		8833614	1					
ANR	8834247	Identifier	value		8833614	1					
ANR	8834248	IfStatement	if ( use_pred )		8833614	5					
ANR	8834249	Condition	use_pred	207:11:3190:3197	8833614	0	True				
ANR	8834250	Identifier	use_pred		8833614	0					
ANR	8834251	CompoundStatement		205:21:3085:3085	8833614	1					
ANR	8834252	IfStatement	if ( q2 && q1 != q2 )		8833614	0					
ANR	8834253	Condition	q2 && q1 != q2	211:15:3263:3274	8833614	0	True				
ANR	8834254	AndExpression	q2 && q1 != q2		8833614	0		&&			
ANR	8834255	Identifier	q2		8833614	0					
ANR	8834256	EqualityExpression	q1 != q2		8833614	1		!=			
ANR	8834257	Identifier	q1		8833614	0					
ANR	8834258	Identifier	q2		8833614	1					
ANR	8834259	CompoundStatement		209:29:3162:3162	8833614	1					
ANR	8834260	ExpressionStatement	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1	213:16:3296:3345	8833614	0	True				
ANR	8834261	AssignmentExpression	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	0		=			
ANR	8834262	Identifier	q1		8833614	0					
ANR	8834263	AdditiveExpression	q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	1		+			
ANR	8834264	MultiplicativeExpression	q1 * 2		8833614	0		*			
ANR	8834265	Identifier	q1		8833614	0					
ANR	8834266	PrimaryExpression	2		8833614	1					
ANR	8834267	AdditiveExpression	( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	1		-			
ANR	8834268	ConditionalExpression	( q1 == v -> pq ) ? v -> halfpq : 0		8833614	0					
ANR	8834269	Condition	q1 == v -> pq		8833614	0					
ANR	8834270	EqualityExpression	q1 == v -> pq		8833614	0		==			
ANR	8834271	Identifier	q1		8833614	0					
ANR	8834272	PtrMemberAccess	v -> pq		8833614	1					
ANR	8834273	Identifier	v		8833614	0					
ANR	8834274	Identifier	pq		8833614	1					
ANR	8834275	PtrMemberAccess	v -> halfpq		8833614	1					
ANR	8834276	Identifier	v		8833614	0					
ANR	8834277	Identifier	halfpq		8833614	1					
ANR	8834278	PrimaryExpression	0		8833614	2					
ANR	8834279	PrimaryExpression	1		8833614	1					
ANR	8834280	ExpressionStatement	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1	215:16:3364:3413	8833614	1	True				
ANR	8834281	AssignmentExpression	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	0		=			
ANR	8834282	Identifier	q2		8833614	0					
ANR	8834283	AdditiveExpression	q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	1		+			
ANR	8834284	MultiplicativeExpression	q2 * 2		8833614	0		*			
ANR	8834285	Identifier	q2		8833614	0					
ANR	8834286	PrimaryExpression	2		8833614	1					
ANR	8834287	AdditiveExpression	( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	1		-			
ANR	8834288	ConditionalExpression	( q2 == v -> pq ) ? v -> halfpq : 0		8833614	0					
ANR	8834289	Condition	q2 == v -> pq		8833614	0					
ANR	8834290	EqualityExpression	q2 == v -> pq		8833614	0		==			
ANR	8834291	Identifier	q2		8833614	0					
ANR	8834292	PtrMemberAccess	v -> pq		8833614	1					
ANR	8834293	Identifier	v		8833614	0					
ANR	8834294	Identifier	pq		8833614	1					
ANR	8834295	PtrMemberAccess	v -> halfpq		8833614	1					
ANR	8834296	Identifier	v		8833614	0					
ANR	8834297	Identifier	halfpq		8833614	1					
ANR	8834298	PrimaryExpression	0		8833614	2					
ANR	8834299	PrimaryExpression	1		8833614	1					
ANR	8834300	IfStatement	if ( dc_pred_dir )		8833614	2					
ANR	8834301	Condition	dc_pred_dir	219:19:3437:3447	8833614	0	True				
ANR	8834302	Identifier	dc_pred_dir		8833614	0					
ANR	8834303	CompoundStatement		217:32:3335:3335	8833614	1					
ANR	8834304	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8833614	0					
ANR	8834305	ForInit	k = 1 ;	221:24:3484:3489	8833614	0	True				
ANR	8834306	AssignmentExpression	k = 1		8833614	0		=			
ANR	8834307	Identifier	k		8833614	0					
ANR	8834308	PrimaryExpression	1		8833614	1					
ANR	8834309	Condition	k < 8	221:31:3491:3495	8833614	1	True				
ANR	8834310	RelationalExpression	k < 8		8833614	0		<			
ANR	8834311	Identifier	k		8833614	0					
ANR	8834312	PrimaryExpression	8		8833614	1					
ANR	8834313	PostIncDecOperationExpression	k ++	221:38:3498:3500	8833614	2	True				
ANR	8834314	Identifier	k		8833614	0					
ANR	8834315	IncDec	++		8833614	1					
ANR	8834316	ExpressionStatement	block [ k << 3 ] += ( ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	223:24:3528:3599	8833614	3	True				
ANR	8834317	AssignmentExpression	block [ k << 3 ] += ( ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8833614	0		+=			
ANR	8834318	ArrayIndexing	block [ k << 3 ]		8833614	0					
ANR	8834319	Identifier	block		8833614	0					
ANR	8834320	ShiftExpression	k << 3		8833614	1		<<			
ANR	8834321	Identifier	k		8833614	0					
ANR	8834322	PrimaryExpression	3		8833614	1					
ANR	8834323	ShiftExpression	( ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8833614	1		>>			
ANR	8834324	AdditiveExpression	ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000		8833614	0		+			
ANR	8834325	MultiplicativeExpression	ac_val [ k ] * q2 * vc1_dqscale [ q1 - 1 ]		8833614	0		*			
ANR	8834326	ArrayIndexing	ac_val [ k ]		8833614	0					
ANR	8834327	Identifier	ac_val		8833614	0					
ANR	8834328	Identifier	k		8833614	1					
ANR	8834329	MultiplicativeExpression	q2 * vc1_dqscale [ q1 - 1 ]		8833614	1		*			
ANR	8834330	Identifier	q2		8833614	0					
ANR	8834331	ArrayIndexing	vc1_dqscale [ q1 - 1 ]		8833614	1					
ANR	8834332	Identifier	vc1_dqscale		8833614	0					
ANR	8834333	AdditiveExpression	q1 - 1		8833614	1		-			
ANR	8834334	Identifier	q1		8833614	0					
ANR	8834335	PrimaryExpression	1		8833614	1					
ANR	8834336	PrimaryExpression	0x20000		8833614	1					
ANR	8834337	PrimaryExpression	18		8833614	1					
ANR	8834338	ElseStatement	else		8833614	0					
ANR	8834339	CompoundStatement		223:23:3510:3510	8833614	0					
ANR	8834340	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8833614	0					
ANR	8834341	ForInit	k = 1 ;	227:24:3658:3663	8833614	0	True				
ANR	8834342	AssignmentExpression	k = 1		8833614	0		=			
ANR	8834343	Identifier	k		8833614	0					
ANR	8834344	PrimaryExpression	1		8833614	1					
ANR	8834345	Condition	k < 8	227:31:3665:3669	8833614	1	True				
ANR	8834346	RelationalExpression	k < 8		8833614	0		<			
ANR	8834347	Identifier	k		8833614	0					
ANR	8834348	PrimaryExpression	8		8833614	1					
ANR	8834349	PostIncDecOperationExpression	k ++	227:38:3672:3674	8833614	2	True				
ANR	8834350	Identifier	k		8833614	0					
ANR	8834351	IncDec	++		8833614	1					
ANR	8834352	ExpressionStatement	block [ k ] += ( ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	229:24:3702:3772	8833614	3	True				
ANR	8834353	AssignmentExpression	block [ k ] += ( ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8833614	0		+=			
ANR	8834354	ArrayIndexing	block [ k ]		8833614	0					
ANR	8834355	Identifier	block		8833614	0					
ANR	8834356	Identifier	k		8833614	1					
ANR	8834357	ShiftExpression	( ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8833614	1		>>			
ANR	8834358	AdditiveExpression	ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000		8833614	0		+			
ANR	8834359	MultiplicativeExpression	ac_val [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ]		8833614	0		*			
ANR	8834360	ArrayIndexing	ac_val [ k + 8 ]		8833614	0					
ANR	8834361	Identifier	ac_val		8833614	0					
ANR	8834362	AdditiveExpression	k + 8		8833614	1		+			
ANR	8834363	Identifier	k		8833614	0					
ANR	8834364	PrimaryExpression	8		8833614	1					
ANR	8834365	MultiplicativeExpression	q2 * vc1_dqscale [ q1 - 1 ]		8833614	1		*			
ANR	8834366	Identifier	q2		8833614	0					
ANR	8834367	ArrayIndexing	vc1_dqscale [ q1 - 1 ]		8833614	1					
ANR	8834368	Identifier	vc1_dqscale		8833614	0					
ANR	8834369	AdditiveExpression	q1 - 1		8833614	1		-			
ANR	8834370	Identifier	q1		8833614	0					
ANR	8834371	PrimaryExpression	1		8833614	1					
ANR	8834372	PrimaryExpression	0x20000		8833614	1					
ANR	8834373	PrimaryExpression	18		8833614	1					
ANR	8834374	ElseStatement	else		8833614	0					
ANR	8834375	CompoundStatement		231:19:3698:3698	8833614	0					
ANR	8834376	IfStatement	if ( dc_pred_dir )		8833614	0					
ANR	8834377	Condition	dc_pred_dir	235:19:3835:3845	8833614	0	True				
ANR	8834378	Identifier	dc_pred_dir		8833614	0					
ANR	8834379	CompoundStatement		233:32:3733:3733	8833614	1					
ANR	8834380	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8833614	0					
ANR	8834381	ForInit	k = 1 ;	237:24:3882:3887	8833614	0	True				
ANR	8834382	AssignmentExpression	k = 1		8833614	0		=			
ANR	8834383	Identifier	k		8833614	0					
ANR	8834384	PrimaryExpression	1		8833614	1					
ANR	8834385	Condition	k < 8	237:31:3889:3893	8833614	1	True				
ANR	8834386	RelationalExpression	k < 8		8833614	0		<			
ANR	8834387	Identifier	k		8833614	0					
ANR	8834388	PrimaryExpression	8		8833614	1					
ANR	8834389	PostIncDecOperationExpression	k ++	237:38:3896:3898	8833614	2	True				
ANR	8834390	Identifier	k		8833614	0					
ANR	8834391	IncDec	++		8833614	1					
ANR	8834392	ExpressionStatement	block [ k << 3 ] += ac_val [ k ]	239:24:3926:3952	8833614	3	True				
ANR	8834393	AssignmentExpression	block [ k << 3 ] += ac_val [ k ]		8833614	0		+=			
ANR	8834394	ArrayIndexing	block [ k << 3 ]		8833614	0					
ANR	8834395	Identifier	block		8833614	0					
ANR	8834396	ShiftExpression	k << 3		8833614	1		<<			
ANR	8834397	Identifier	k		8833614	0					
ANR	8834398	PrimaryExpression	3		8833614	1					
ANR	8834399	ArrayIndexing	ac_val [ k ]		8833614	1					
ANR	8834400	Identifier	ac_val		8833614	0					
ANR	8834401	Identifier	k		8833614	1					
ANR	8834402	ElseStatement	else		8833614	0					
ANR	8834403	CompoundStatement		239:23:3863:3863	8833614	0					
ANR	8834404	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8833614	0					
ANR	8834405	ForInit	k = 1 ;	243:24:4011:4016	8833614	0	True				
ANR	8834406	AssignmentExpression	k = 1		8833614	0		=			
ANR	8834407	Identifier	k		8833614	0					
ANR	8834408	PrimaryExpression	1		8833614	1					
ANR	8834409	Condition	k < 8	243:31:4018:4022	8833614	1	True				
ANR	8834410	RelationalExpression	k < 8		8833614	0		<			
ANR	8834411	Identifier	k		8833614	0					
ANR	8834412	PrimaryExpression	8		8833614	1					
ANR	8834413	PostIncDecOperationExpression	k ++	243:38:4025:4027	8833614	2	True				
ANR	8834414	Identifier	k		8833614	0					
ANR	8834415	IncDec	++		8833614	1					
ANR	8834416	ExpressionStatement	block [ k ] += ac_val [ k + 8 ]	245:24:4055:4080	8833614	3	True				
ANR	8834417	AssignmentExpression	block [ k ] += ac_val [ k + 8 ]		8833614	0		+=			
ANR	8834418	ArrayIndexing	block [ k ]		8833614	0					
ANR	8834419	Identifier	block		8833614	0					
ANR	8834420	Identifier	k		8833614	1					
ANR	8834421	ArrayIndexing	ac_val [ k + 8 ]		8833614	1					
ANR	8834422	Identifier	ac_val		8833614	0					
ANR	8834423	AdditiveExpression	k + 8		8833614	1		+			
ANR	8834424	Identifier	k		8833614	0					
ANR	8834425	PrimaryExpression	8		8833614	1					
ANR	8834426	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8833614	6					
ANR	8834427	ForInit	k = 1 ;	255:12:4193:4198	8833614	0	True				
ANR	8834428	AssignmentExpression	k = 1		8833614	0		=			
ANR	8834429	Identifier	k		8833614	0					
ANR	8834430	PrimaryExpression	1		8833614	1					
ANR	8834431	Condition	k < 8	255:19:4200:4204	8833614	1	True				
ANR	8834432	RelationalExpression	k < 8		8833614	0		<			
ANR	8834433	Identifier	k		8833614	0					
ANR	8834434	PrimaryExpression	8		8833614	1					
ANR	8834435	PostIncDecOperationExpression	k ++	255:26:4207:4209	8833614	2	True				
ANR	8834436	Identifier	k		8833614	0					
ANR	8834437	IncDec	++		8833614	1					
ANR	8834438	CompoundStatement		253:31:4097:4097	8833614	3					
ANR	8834439	ExpressionStatement	ac_val2 [ k ] = block [ k << 3 ]	257:12:4227:4253	8833614	0	True				
ANR	8834440	AssignmentExpression	ac_val2 [ k ] = block [ k << 3 ]		8833614	0		=			
ANR	8834441	ArrayIndexing	ac_val2 [ k ]		8833614	0					
ANR	8834442	Identifier	ac_val2		8833614	0					
ANR	8834443	Identifier	k		8833614	1					
ANR	8834444	ArrayIndexing	block [ k << 3 ]		8833614	1					
ANR	8834445	Identifier	block		8833614	0					
ANR	8834446	ShiftExpression	k << 3		8833614	1		<<			
ANR	8834447	Identifier	k		8833614	0					
ANR	8834448	PrimaryExpression	3		8833614	1					
ANR	8834449	ExpressionStatement	ac_val2 [ k + 8 ] = block [ k ]	259:12:4268:4293	8833614	1	True				
ANR	8834450	AssignmentExpression	ac_val2 [ k + 8 ] = block [ k ]		8833614	0		=			
ANR	8834451	ArrayIndexing	ac_val2 [ k + 8 ]		8833614	0					
ANR	8834452	Identifier	ac_val2		8833614	0					
ANR	8834453	AdditiveExpression	k + 8		8833614	1		+			
ANR	8834454	Identifier	k		8833614	0					
ANR	8834455	PrimaryExpression	8		8833614	1					
ANR	8834456	ArrayIndexing	block [ k ]		8833614	1					
ANR	8834457	Identifier	block		8833614	0					
ANR	8834458	Identifier	k		8833614	1					
ANR	8834459	ForStatement	for ( k = 1 ; k < 64 ; k ++ )		8833614	7					
ANR	8834460	ForInit	k = 1 ;	267:12:4352:4357	8833614	0	True				
ANR	8834461	AssignmentExpression	k = 1		8833614	0		=			
ANR	8834462	Identifier	k		8833614	0					
ANR	8834463	PrimaryExpression	1		8833614	1					
ANR	8834464	Condition	k < 64	267:19:4359:4364	8833614	1	True				
ANR	8834465	RelationalExpression	k < 64		8833614	0		<			
ANR	8834466	Identifier	k		8833614	0					
ANR	8834467	PrimaryExpression	64		8833614	1					
ANR	8834468	PostIncDecOperationExpression	k ++	267:27:4367:4369	8833614	2	True				
ANR	8834469	Identifier	k		8833614	0					
ANR	8834470	IncDec	++		8833614	1					
ANR	8834471	IfStatement	if ( block [ k ] )		8833614	3					
ANR	8834472	Condition	block [ k ]	269:15:4388:4395	8833614	0	True				
ANR	8834473	ArrayIndexing	block [ k ]		8833614	0					
ANR	8834474	Identifier	block		8833614	0					
ANR	8834475	Identifier	k		8833614	1					
ANR	8834476	CompoundStatement		267:25:4283:4283	8833614	1					
ANR	8834477	ExpressionStatement	block [ k ] *= scale	271:16:4417:4434	8833614	0	True				
ANR	8834478	AssignmentExpression	block [ k ] *= scale		8833614	0		*=			
ANR	8834479	ArrayIndexing	block [ k ]		8833614	0					
ANR	8834480	Identifier	block		8833614	0					
ANR	8834481	Identifier	k		8833614	1					
ANR	8834482	Identifier	scale		8833614	1					
ANR	8834483	IfStatement	if ( ! v -> pquantizer )		8833614	1					
ANR	8834484	Condition	! v -> pquantizer	273:19:4456:4469	8833614	0	True				
ANR	8834485	UnaryOperationExpression	! v -> pquantizer		8833614	0					
ANR	8834486	UnaryOperator	!		8833614	0					
ANR	8834487	PtrMemberAccess	v -> pquantizer		8833614	1					
ANR	8834488	Identifier	v		8833614	0					
ANR	8834489	Identifier	pquantizer		8833614	1					
ANR	8834490	ExpressionStatement	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant	275:20:4493:4538	8833614	1	True				
ANR	8834491	AssignmentExpression	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant		8833614	0		+=			
ANR	8834492	ArrayIndexing	block [ k ]		8833614	0					
ANR	8834493	Identifier	block		8833614	0					
ANR	8834494	Identifier	k		8833614	1					
ANR	8834495	ConditionalExpression	( block [ k ] < 0 ) ? - mquant : mquant		8833614	1					
ANR	8834496	Condition	block [ k ] < 0		8833614	0					
ANR	8834497	RelationalExpression	block [ k ] < 0		8833614	0		<			
ANR	8834498	ArrayIndexing	block [ k ]		8833614	0					
ANR	8834499	Identifier	block		8833614	0					
ANR	8834500	Identifier	k		8833614	1					
ANR	8834501	PrimaryExpression	0		8833614	1					
ANR	8834502	UnaryOperationExpression	- mquant		8833614	1					
ANR	8834503	UnaryOperator	-		8833614	0					
ANR	8834504	Identifier	mquant		8833614	1					
ANR	8834505	Identifier	mquant		8833614	2					
ANR	8834506	IfStatement	if ( use_pred )		8833614	8					
ANR	8834507	Condition	use_pred	281:11:4569:4576	8833614	0	True				
ANR	8834508	Identifier	use_pred		8833614	0					
ANR	8834509	ExpressionStatement	i = 63	281:21:4579:4585	8833614	1	True				
ANR	8834510	AssignmentExpression	i = 63		8833614	0		=			
ANR	8834511	Identifier	i		8833614	0					
ANR	8834512	PrimaryExpression	63		8833614	1					
ANR	8834513	ElseStatement	else		8833614	0					
ANR	8834514	CompoundStatement		283:8:4511:4516	8833614	0					
ANR	8834515	IdentifierDeclStatement	int k ;	285:8:4626:4631	8833614	0	True				
ANR	8834516	IdentifierDecl	k		8833614	0					
ANR	8834517	IdentifierDeclType	int		8833614	0					
ANR	8834518	Identifier	k		8833614	1					
ANR	8834519	ExpressionStatement	"memset ( ac_val2 , 0 , 16 * 2 )"	289:8:4644:4670	8833614	1	True				
ANR	8834520	CallExpression	"memset ( ac_val2 , 0 , 16 * 2 )"		8833614	0					
ANR	8834521	Callee	memset		8833614	0					
ANR	8834522	Identifier	memset		8833614	0					
ANR	8834523	ArgumentList	ac_val2		8833614	1					
ANR	8834524	Argument	ac_val2		8833614	0					
ANR	8834525	Identifier	ac_val2		8833614	0					
ANR	8834526	Argument	0		8833614	1					
ANR	8834527	PrimaryExpression	0		8833614	0					
ANR	8834528	Argument	16 * 2		8833614	2					
ANR	8834529	MultiplicativeExpression	16 * 2		8833614	0		*			
ANR	8834530	PrimaryExpression	16		8833614	0					
ANR	8834531	PrimaryExpression	2		8833614	1					
ANR	8834532	IfStatement	if ( dc_pred_dir )		8833614	2					
ANR	8834533	Condition	dc_pred_dir	291:11:4684:4694	8833614	0	True				
ANR	8834534	Identifier	dc_pred_dir		8833614	0					
ANR	8834535	CompoundStatement		289:24:4582:4582	8833614	1					
ANR	8834536	IfStatement	if ( use_pred )		8833614	0					
ANR	8834537	Condition	use_pred	293:15:4721:4728	8833614	0	True				
ANR	8834538	Identifier	use_pred		8833614	0					
ANR	8834539	CompoundStatement		291:25:4616:4616	8833614	1					
ANR	8834540	ExpressionStatement	"memcpy ( ac_val2 , ac_val , 8 * 2 )"	295:16:4750:4780	8833614	0	True				
ANR	8834541	CallExpression	"memcpy ( ac_val2 , ac_val , 8 * 2 )"		8833614	0					
ANR	8834542	Callee	memcpy		8833614	0					
ANR	8834543	Identifier	memcpy		8833614	0					
ANR	8834544	ArgumentList	ac_val2		8833614	1					
ANR	8834545	Argument	ac_val2		8833614	0					
ANR	8834546	Identifier	ac_val2		8833614	0					
ANR	8834547	Argument	ac_val		8833614	1					
ANR	8834548	Identifier	ac_val		8833614	0					
ANR	8834549	Argument	8 * 2		8833614	2					
ANR	8834550	MultiplicativeExpression	8 * 2		8833614	0		*			
ANR	8834551	PrimaryExpression	8		8833614	0					
ANR	8834552	PrimaryExpression	2		8833614	1					
ANR	8834553	IfStatement	if ( q2 && q1 != q2 )		8833614	1					
ANR	8834554	Condition	q2 && q1 != q2	297:19:4802:4813	8833614	0	True				
ANR	8834555	AndExpression	q2 && q1 != q2		8833614	0		&&			
ANR	8834556	Identifier	q2		8833614	0					
ANR	8834557	EqualityExpression	q1 != q2		8833614	1		!=			
ANR	8834558	Identifier	q1		8833614	0					
ANR	8834559	Identifier	q2		8833614	1					
ANR	8834560	CompoundStatement		295:33:4701:4701	8833614	1					
ANR	8834561	ExpressionStatement	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1	299:20:4839:4888	8833614	0	True				
ANR	8834562	AssignmentExpression	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	0		=			
ANR	8834563	Identifier	q1		8833614	0					
ANR	8834564	AdditiveExpression	q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	1		+			
ANR	8834565	MultiplicativeExpression	q1 * 2		8833614	0		*			
ANR	8834566	Identifier	q1		8833614	0					
ANR	8834567	PrimaryExpression	2		8833614	1					
ANR	8834568	AdditiveExpression	( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	1		-			
ANR	8834569	ConditionalExpression	( q1 == v -> pq ) ? v -> halfpq : 0		8833614	0					
ANR	8834570	Condition	q1 == v -> pq		8833614	0					
ANR	8834571	EqualityExpression	q1 == v -> pq		8833614	0		==			
ANR	8834572	Identifier	q1		8833614	0					
ANR	8834573	PtrMemberAccess	v -> pq		8833614	1					
ANR	8834574	Identifier	v		8833614	0					
ANR	8834575	Identifier	pq		8833614	1					
ANR	8834576	PtrMemberAccess	v -> halfpq		8833614	1					
ANR	8834577	Identifier	v		8833614	0					
ANR	8834578	Identifier	halfpq		8833614	1					
ANR	8834579	PrimaryExpression	0		8833614	2					
ANR	8834580	PrimaryExpression	1		8833614	1					
ANR	8834581	ExpressionStatement	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1	301:20:4911:4960	8833614	1	True				
ANR	8834582	AssignmentExpression	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	0		=			
ANR	8834583	Identifier	q2		8833614	0					
ANR	8834584	AdditiveExpression	q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	1		+			
ANR	8834585	MultiplicativeExpression	q2 * 2		8833614	0		*			
ANR	8834586	Identifier	q2		8833614	0					
ANR	8834587	PrimaryExpression	2		8833614	1					
ANR	8834588	AdditiveExpression	( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	1		-			
ANR	8834589	ConditionalExpression	( q2 == v -> pq ) ? v -> halfpq : 0		8833614	0					
ANR	8834590	Condition	q2 == v -> pq		8833614	0					
ANR	8834591	EqualityExpression	q2 == v -> pq		8833614	0		==			
ANR	8834592	Identifier	q2		8833614	0					
ANR	8834593	PtrMemberAccess	v -> pq		8833614	1					
ANR	8834594	Identifier	v		8833614	0					
ANR	8834595	Identifier	pq		8833614	1					
ANR	8834596	PtrMemberAccess	v -> halfpq		8833614	1					
ANR	8834597	Identifier	v		8833614	0					
ANR	8834598	Identifier	halfpq		8833614	1					
ANR	8834599	PrimaryExpression	0		8833614	2					
ANR	8834600	PrimaryExpression	1		8833614	1					
ANR	8834601	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8833614	2					
ANR	8834602	ForInit	k = 1 ;	303:24:4987:4992	8833614	0	True				
ANR	8834603	AssignmentExpression	k = 1		8833614	0		=			
ANR	8834604	Identifier	k		8833614	0					
ANR	8834605	PrimaryExpression	1		8833614	1					
ANR	8834606	Condition	k < 8	303:31:4994:4998	8833614	1	True				
ANR	8834607	RelationalExpression	k < 8		8833614	0		<			
ANR	8834608	Identifier	k		8833614	0					
ANR	8834609	PrimaryExpression	8		8833614	1					
ANR	8834610	PostIncDecOperationExpression	k ++	303:38:5001:5003	8833614	2	True				
ANR	8834611	Identifier	k		8833614	0					
ANR	8834612	IncDec	++		8833614	1					
ANR	8834613	ExpressionStatement	ac_val2 [ k ] = ( ac_val2 [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	305:24:5031:5099	8833614	3	True				
ANR	8834614	AssignmentExpression	ac_val2 [ k ] = ( ac_val2 [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8833614	0		=			
ANR	8834615	ArrayIndexing	ac_val2 [ k ]		8833614	0					
ANR	8834616	Identifier	ac_val2		8833614	0					
ANR	8834617	Identifier	k		8833614	1					
ANR	8834618	ShiftExpression	( ac_val2 [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8833614	1		>>			
ANR	8834619	AdditiveExpression	ac_val2 [ k ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000		8833614	0		+			
ANR	8834620	MultiplicativeExpression	ac_val2 [ k ] * q2 * vc1_dqscale [ q1 - 1 ]		8833614	0		*			
ANR	8834621	ArrayIndexing	ac_val2 [ k ]		8833614	0					
ANR	8834622	Identifier	ac_val2		8833614	0					
ANR	8834623	Identifier	k		8833614	1					
ANR	8834624	MultiplicativeExpression	q2 * vc1_dqscale [ q1 - 1 ]		8833614	1		*			
ANR	8834625	Identifier	q2		8833614	0					
ANR	8834626	ArrayIndexing	vc1_dqscale [ q1 - 1 ]		8833614	1					
ANR	8834627	Identifier	vc1_dqscale		8833614	0					
ANR	8834628	AdditiveExpression	q1 - 1		8833614	1		-			
ANR	8834629	Identifier	q1		8833614	0					
ANR	8834630	PrimaryExpression	1		8833614	1					
ANR	8834631	PrimaryExpression	0x20000		8833614	1					
ANR	8834632	PrimaryExpression	18		8833614	1					
ANR	8834633	ElseStatement	else		8833614	0					
ANR	8834634	CompoundStatement		309:15:5036:5036	8833614	0					
ANR	8834635	IfStatement	if ( use_pred )		8833614	0					
ANR	8834636	Condition	use_pred	313:15:5174:5181	8833614	0	True				
ANR	8834637	Identifier	use_pred		8833614	0					
ANR	8834638	CompoundStatement		311:25:5069:5069	8833614	1					
ANR	8834639	ExpressionStatement	"memcpy ( ac_val2 + 8 , ac_val + 8 , 8 * 2 )"	315:16:5203:5241	8833614	0	True				
ANR	8834640	CallExpression	"memcpy ( ac_val2 + 8 , ac_val + 8 , 8 * 2 )"		8833614	0					
ANR	8834641	Callee	memcpy		8833614	0					
ANR	8834642	Identifier	memcpy		8833614	0					
ANR	8834643	ArgumentList	ac_val2 + 8		8833614	1					
ANR	8834644	Argument	ac_val2 + 8		8833614	0					
ANR	8834645	AdditiveExpression	ac_val2 + 8		8833614	0		+			
ANR	8834646	Identifier	ac_val2		8833614	0					
ANR	8834647	PrimaryExpression	8		8833614	1					
ANR	8834648	Argument	ac_val + 8		8833614	1					
ANR	8834649	AdditiveExpression	ac_val + 8		8833614	0		+			
ANR	8834650	Identifier	ac_val		8833614	0					
ANR	8834651	PrimaryExpression	8		8833614	1					
ANR	8834652	Argument	8 * 2		8833614	2					
ANR	8834653	MultiplicativeExpression	8 * 2		8833614	0		*			
ANR	8834654	PrimaryExpression	8		8833614	0					
ANR	8834655	PrimaryExpression	2		8833614	1					
ANR	8834656	IfStatement	if ( q2 && q1 != q2 )		8833614	1					
ANR	8834657	Condition	q2 && q1 != q2	317:19:5263:5274	8833614	0	True				
ANR	8834658	AndExpression	q2 && q1 != q2		8833614	0		&&			
ANR	8834659	Identifier	q2		8833614	0					
ANR	8834660	EqualityExpression	q1 != q2		8833614	1		!=			
ANR	8834661	Identifier	q1		8833614	0					
ANR	8834662	Identifier	q2		8833614	1					
ANR	8834663	CompoundStatement		315:33:5162:5162	8833614	1					
ANR	8834664	ExpressionStatement	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1	319:20:5300:5349	8833614	0	True				
ANR	8834665	AssignmentExpression	q1 = q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	0		=			
ANR	8834666	Identifier	q1		8833614	0					
ANR	8834667	AdditiveExpression	q1 * 2 + ( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	1		+			
ANR	8834668	MultiplicativeExpression	q1 * 2		8833614	0		*			
ANR	8834669	Identifier	q1		8833614	0					
ANR	8834670	PrimaryExpression	2		8833614	1					
ANR	8834671	AdditiveExpression	( ( q1 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	1		-			
ANR	8834672	ConditionalExpression	( q1 == v -> pq ) ? v -> halfpq : 0		8833614	0					
ANR	8834673	Condition	q1 == v -> pq		8833614	0					
ANR	8834674	EqualityExpression	q1 == v -> pq		8833614	0		==			
ANR	8834675	Identifier	q1		8833614	0					
ANR	8834676	PtrMemberAccess	v -> pq		8833614	1					
ANR	8834677	Identifier	v		8833614	0					
ANR	8834678	Identifier	pq		8833614	1					
ANR	8834679	PtrMemberAccess	v -> halfpq		8833614	1					
ANR	8834680	Identifier	v		8833614	0					
ANR	8834681	Identifier	halfpq		8833614	1					
ANR	8834682	PrimaryExpression	0		8833614	2					
ANR	8834683	PrimaryExpression	1		8833614	1					
ANR	8834684	ExpressionStatement	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1	321:20:5372:5421	8833614	1	True				
ANR	8834685	AssignmentExpression	q2 = q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	0		=			
ANR	8834686	Identifier	q2		8833614	0					
ANR	8834687	AdditiveExpression	q2 * 2 + ( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	1		+			
ANR	8834688	MultiplicativeExpression	q2 * 2		8833614	0		*			
ANR	8834689	Identifier	q2		8833614	0					
ANR	8834690	PrimaryExpression	2		8833614	1					
ANR	8834691	AdditiveExpression	( ( q2 == v -> pq ) ? v -> halfpq : 0 ) - 1		8833614	1		-			
ANR	8834692	ConditionalExpression	( q2 == v -> pq ) ? v -> halfpq : 0		8833614	0					
ANR	8834693	Condition	q2 == v -> pq		8833614	0					
ANR	8834694	EqualityExpression	q2 == v -> pq		8833614	0		==			
ANR	8834695	Identifier	q2		8833614	0					
ANR	8834696	PtrMemberAccess	v -> pq		8833614	1					
ANR	8834697	Identifier	v		8833614	0					
ANR	8834698	Identifier	pq		8833614	1					
ANR	8834699	PtrMemberAccess	v -> halfpq		8833614	1					
ANR	8834700	Identifier	v		8833614	0					
ANR	8834701	Identifier	halfpq		8833614	1					
ANR	8834702	PrimaryExpression	0		8833614	2					
ANR	8834703	PrimaryExpression	1		8833614	1					
ANR	8834704	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8833614	2					
ANR	8834705	ForInit	k = 1 ;	323:24:5448:5453	8833614	0	True				
ANR	8834706	AssignmentExpression	k = 1		8833614	0		=			
ANR	8834707	Identifier	k		8833614	0					
ANR	8834708	PrimaryExpression	1		8833614	1					
ANR	8834709	Condition	k < 8	323:31:5455:5459	8833614	1	True				
ANR	8834710	RelationalExpression	k < 8		8833614	0		<			
ANR	8834711	Identifier	k		8833614	0					
ANR	8834712	PrimaryExpression	8		8833614	1					
ANR	8834713	PostIncDecOperationExpression	k ++	323:38:5462:5464	8833614	2	True				
ANR	8834714	Identifier	k		8833614	0					
ANR	8834715	IncDec	++		8833614	1					
ANR	8834716	ExpressionStatement	ac_val2 [ k + 8 ] = ( ac_val2 [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18	325:24:5492:5568	8833614	3	True				
ANR	8834717	AssignmentExpression	ac_val2 [ k + 8 ] = ( ac_val2 [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8833614	0		=			
ANR	8834718	ArrayIndexing	ac_val2 [ k + 8 ]		8833614	0					
ANR	8834719	Identifier	ac_val2		8833614	0					
ANR	8834720	AdditiveExpression	k + 8		8833614	1		+			
ANR	8834721	Identifier	k		8833614	0					
ANR	8834722	PrimaryExpression	8		8833614	1					
ANR	8834723	ShiftExpression	( ac_val2 [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000 ) >> 18		8833614	1		>>			
ANR	8834724	AdditiveExpression	ac_val2 [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ] + 0x20000		8833614	0		+			
ANR	8834725	MultiplicativeExpression	ac_val2 [ k + 8 ] * q2 * vc1_dqscale [ q1 - 1 ]		8833614	0		*			
ANR	8834726	ArrayIndexing	ac_val2 [ k + 8 ]		8833614	0					
ANR	8834727	Identifier	ac_val2		8833614	0					
ANR	8834728	AdditiveExpression	k + 8		8833614	1		+			
ANR	8834729	Identifier	k		8833614	0					
ANR	8834730	PrimaryExpression	8		8833614	1					
ANR	8834731	MultiplicativeExpression	q2 * vc1_dqscale [ q1 - 1 ]		8833614	1		*			
ANR	8834732	Identifier	q2		8833614	0					
ANR	8834733	ArrayIndexing	vc1_dqscale [ q1 - 1 ]		8833614	1					
ANR	8834734	Identifier	vc1_dqscale		8833614	0					
ANR	8834735	AdditiveExpression	q1 - 1		8833614	1		-			
ANR	8834736	Identifier	q1		8833614	0					
ANR	8834737	PrimaryExpression	1		8833614	1					
ANR	8834738	PrimaryExpression	0x20000		8833614	1					
ANR	8834739	PrimaryExpression	18		8833614	1					
ANR	8834740	IfStatement	if ( use_pred )		8833614	3					
ANR	8834741	Condition	use_pred	337:11:5674:5681	8833614	0	True				
ANR	8834742	Identifier	use_pred		8833614	0					
ANR	8834743	CompoundStatement		335:21:5569:5569	8833614	1					
ANR	8834744	IfStatement	if ( dc_pred_dir )		8833614	0					
ANR	8834745	Condition	dc_pred_dir	339:15:5702:5712	8833614	0	True				
ANR	8834746	Identifier	dc_pred_dir		8833614	0					
ANR	8834747	CompoundStatement		337:28:5600:5600	8833614	1					
ANR	8834748	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8833614	0					
ANR	8834749	ForInit	k = 1 ;	341:20:5745:5750	8833614	0	True				
ANR	8834750	AssignmentExpression	k = 1		8833614	0		=			
ANR	8834751	Identifier	k		8833614	0					
ANR	8834752	PrimaryExpression	1		8833614	1					
ANR	8834753	Condition	k < 8	341:27:5752:5756	8833614	1	True				
ANR	8834754	RelationalExpression	k < 8		8833614	0		<			
ANR	8834755	Identifier	k		8833614	0					
ANR	8834756	PrimaryExpression	8		8833614	1					
ANR	8834757	PostIncDecOperationExpression	k ++	341:34:5759:5761	8833614	2	True				
ANR	8834758	Identifier	k		8833614	0					
ANR	8834759	IncDec	++		8833614	1					
ANR	8834760	CompoundStatement		339:39:5649:5649	8833614	3					
ANR	8834761	ExpressionStatement	block [ k << 3 ] = ac_val2 [ k ] * scale	343:20:5787:5821	8833614	0	True				
ANR	8834762	AssignmentExpression	block [ k << 3 ] = ac_val2 [ k ] * scale		8833614	0		=			
ANR	8834763	ArrayIndexing	block [ k << 3 ]		8833614	0					
ANR	8834764	Identifier	block		8833614	0					
ANR	8834765	ShiftExpression	k << 3		8833614	1		<<			
ANR	8834766	Identifier	k		8833614	0					
ANR	8834767	PrimaryExpression	3		8833614	1					
ANR	8834768	MultiplicativeExpression	ac_val2 [ k ] * scale		8833614	1		*			
ANR	8834769	ArrayIndexing	ac_val2 [ k ]		8833614	0					
ANR	8834770	Identifier	ac_val2		8833614	0					
ANR	8834771	Identifier	k		8833614	1					
ANR	8834772	Identifier	scale		8833614	1					
ANR	8834773	IfStatement	if ( ! v -> pquantizer && block [ k << 3 ] )		8833614	1					
ANR	8834774	Condition	! v -> pquantizer && block [ k << 3 ]	345:23:5847:5877	8833614	0	True				
ANR	8834775	AndExpression	! v -> pquantizer && block [ k << 3 ]		8833614	0		&&			
ANR	8834776	UnaryOperationExpression	! v -> pquantizer		8833614	0					
ANR	8834777	UnaryOperator	!		8833614	0					
ANR	8834778	PtrMemberAccess	v -> pquantizer		8833614	1					
ANR	8834779	Identifier	v		8833614	0					
ANR	8834780	Identifier	pquantizer		8833614	1					
ANR	8834781	ArrayIndexing	block [ k << 3 ]		8833614	1					
ANR	8834782	Identifier	block		8833614	0					
ANR	8834783	ShiftExpression	k << 3		8833614	1		<<			
ANR	8834784	Identifier	k		8833614	0					
ANR	8834785	PrimaryExpression	3		8833614	1					
ANR	8834786	ExpressionStatement	block [ k << 3 ] += ( block [ k << 3 ] < 0 ) ? - mquant : mquant	347:24:5905:5960	8833614	1	True				
ANR	8834787	AssignmentExpression	block [ k << 3 ] += ( block [ k << 3 ] < 0 ) ? - mquant : mquant		8833614	0		+=			
ANR	8834788	ArrayIndexing	block [ k << 3 ]		8833614	0					
ANR	8834789	Identifier	block		8833614	0					
ANR	8834790	ShiftExpression	k << 3		8833614	1		<<			
ANR	8834791	Identifier	k		8833614	0					
ANR	8834792	PrimaryExpression	3		8833614	1					
ANR	8834793	ConditionalExpression	( block [ k << 3 ] < 0 ) ? - mquant : mquant		8833614	1					
ANR	8834794	Condition	block [ k << 3 ] < 0		8833614	0					
ANR	8834795	RelationalExpression	block [ k << 3 ] < 0		8833614	0		<			
ANR	8834796	ArrayIndexing	block [ k << 3 ]		8833614	0					
ANR	8834797	Identifier	block		8833614	0					
ANR	8834798	ShiftExpression	k << 3		8833614	1		<<			
ANR	8834799	Identifier	k		8833614	0					
ANR	8834800	PrimaryExpression	3		8833614	1					
ANR	8834801	PrimaryExpression	0		8833614	1					
ANR	8834802	UnaryOperationExpression	- mquant		8833614	1					
ANR	8834803	UnaryOperator	-		8833614	0					
ANR	8834804	Identifier	mquant		8833614	1					
ANR	8834805	Identifier	mquant		8833614	2					
ANR	8834806	ElseStatement	else		8833614	0					
ANR	8834807	CompoundStatement		349:19:5886:5886	8833614	0					
ANR	8834808	ForStatement	for ( k = 1 ; k < 8 ; k ++ )		8833614	0					
ANR	8834809	ForInit	k = 1 ;	353:20:6030:6035	8833614	0	True				
ANR	8834810	AssignmentExpression	k = 1		8833614	0		=			
ANR	8834811	Identifier	k		8833614	0					
ANR	8834812	PrimaryExpression	1		8833614	1					
ANR	8834813	Condition	k < 8	353:27:6037:6041	8833614	1	True				
ANR	8834814	RelationalExpression	k < 8		8833614	0		<			
ANR	8834815	Identifier	k		8833614	0					
ANR	8834816	PrimaryExpression	8		8833614	1					
ANR	8834817	PostIncDecOperationExpression	k ++	353:34:6044:6046	8833614	2	True				
ANR	8834818	Identifier	k		8833614	0					
ANR	8834819	IncDec	++		8833614	1					
ANR	8834820	CompoundStatement		351:39:5934:5934	8833614	3					
ANR	8834821	ExpressionStatement	block [ k ] = ac_val2 [ k + 8 ] * scale	355:20:6072:6105	8833614	0	True				
ANR	8834822	AssignmentExpression	block [ k ] = ac_val2 [ k + 8 ] * scale		8833614	0		=			
ANR	8834823	ArrayIndexing	block [ k ]		8833614	0					
ANR	8834824	Identifier	block		8833614	0					
ANR	8834825	Identifier	k		8833614	1					
ANR	8834826	MultiplicativeExpression	ac_val2 [ k + 8 ] * scale		8833614	1		*			
ANR	8834827	ArrayIndexing	ac_val2 [ k + 8 ]		8833614	0					
ANR	8834828	Identifier	ac_val2		8833614	0					
ANR	8834829	AdditiveExpression	k + 8		8833614	1		+			
ANR	8834830	Identifier	k		8833614	0					
ANR	8834831	PrimaryExpression	8		8833614	1					
ANR	8834832	Identifier	scale		8833614	1					
ANR	8834833	IfStatement	if ( ! v -> pquantizer && block [ k ] )		8833614	1					
ANR	8834834	Condition	! v -> pquantizer && block [ k ]	357:23:6131:6156	8833614	0	True				
ANR	8834835	AndExpression	! v -> pquantizer && block [ k ]		8833614	0		&&			
ANR	8834836	UnaryOperationExpression	! v -> pquantizer		8833614	0					
ANR	8834837	UnaryOperator	!		8833614	0					
ANR	8834838	PtrMemberAccess	v -> pquantizer		8833614	1					
ANR	8834839	Identifier	v		8833614	0					
ANR	8834840	Identifier	pquantizer		8833614	1					
ANR	8834841	ArrayIndexing	block [ k ]		8833614	1					
ANR	8834842	Identifier	block		8833614	0					
ANR	8834843	Identifier	k		8833614	1					
ANR	8834844	ExpressionStatement	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant	359:24:6184:6229	8833614	1	True				
ANR	8834845	AssignmentExpression	block [ k ] += ( block [ k ] < 0 ) ? - mquant : mquant		8833614	0		+=			
ANR	8834846	ArrayIndexing	block [ k ]		8833614	0					
ANR	8834847	Identifier	block		8833614	0					
ANR	8834848	Identifier	k		8833614	1					
ANR	8834849	ConditionalExpression	( block [ k ] < 0 ) ? - mquant : mquant		8833614	1					
ANR	8834850	Condition	block [ k ] < 0		8833614	0					
ANR	8834851	RelationalExpression	block [ k ] < 0		8833614	0		<			
ANR	8834852	ArrayIndexing	block [ k ]		8833614	0					
ANR	8834853	Identifier	block		8833614	0					
ANR	8834854	Identifier	k		8833614	1					
ANR	8834855	PrimaryExpression	0		8833614	1					
ANR	8834856	UnaryOperationExpression	- mquant		8833614	1					
ANR	8834857	UnaryOperator	-		8833614	0					
ANR	8834858	Identifier	mquant		8833614	1					
ANR	8834859	Identifier	mquant		8833614	2					
ANR	8834860	ExpressionStatement	i = 63	365:12:6278:6284	8833614	1	True				
ANR	8834861	AssignmentExpression	i = 63		8833614	0		=			
ANR	8834862	Identifier	i		8833614	0					
ANR	8834863	PrimaryExpression	63		8833614	1					
ANR	8834864	ExpressionStatement	s -> block_last_index [ n ] = i	371:4:6309:6335	8833614	33	True				
ANR	8834865	AssignmentExpression	s -> block_last_index [ n ] = i		8833614	0		=			
ANR	8834866	ArrayIndexing	s -> block_last_index [ n ]		8833614	0					
ANR	8834867	PtrMemberAccess	s -> block_last_index		8833614	0					
ANR	8834868	Identifier	s		8833614	0					
ANR	8834869	Identifier	block_last_index		8833614	1					
ANR	8834870	Identifier	n		8833614	1					
ANR	8834871	Identifier	i		8833614	1					
ANR	8834872	ReturnStatement	return 0 ;	375:4:6344:6352	8833614	34	True				
ANR	8834873	PrimaryExpression	0		8833614	0					
ANR	8834874	ReturnType	static int		8833614	1					
ANR	8834875	Identifier	vc1_decode_i_block_adv		8833614	2					
ANR	8834876	ParameterList	"VC1Context * v , DCTELEM block [ 64 ] , int n , int coded , int codingset , int mquant"		8833614	3					
ANR	8834877	Parameter	VC1Context * v	1:34:34:46	8833614	0	True				
ANR	8834878	ParameterType	VC1Context *		8833614	0					
ANR	8834879	Identifier	v		8833614	1					
ANR	8834880	Parameter	DCTELEM block [ 64 ]	1:49:49:65	8833614	1	True				
ANR	8834881	ParameterType	DCTELEM [ 64 ]		8833614	0					
ANR	8834882	Identifier	block		8833614	1					
ANR	8834883	Parameter	int n	1:68:68:72	8833614	2	True				
ANR	8834884	ParameterType	int		8833614	0					
ANR	8834885	Identifier	n		8833614	1					
ANR	8834886	Parameter	int coded	1:75:75:83	8833614	3	True				
ANR	8834887	ParameterType	int		8833614	0					
ANR	8834888	Identifier	coded		8833614	1					
ANR	8834889	Parameter	int codingset	1:86:86:98	8833614	4	True				
ANR	8834890	ParameterType	int		8833614	0					
ANR	8834891	Identifier	codingset		8833614	1					
ANR	8834892	Parameter	int mquant	1:101:101:110	8833614	5	True				
ANR	8834893	ParameterType	int		8833614	0					
ANR	8834894	Identifier	mquant		8833614	1					
ANR	8834895	CFGEntryNode	ENTRY		8833614		True				
ANR	8834896	CFGExitNode	EXIT		8833614		True				
ANR	8834897	Symbol	& v -> s		8833614						
ANR	8834898	Symbol	* v		8833614						
ANR	8834899	Symbol	* ff_msmp4_dc_chroma_vlc		8833614						
ANR	8834900	Symbol	s -> block_wrap		8833614						
ANR	8834901	Symbol	vc1_horizontal_zz		8833614						
ANR	8834902	Symbol	& value		8833614						
ANR	8834903	Symbol	vc1_normal_zz		8833614						
ANR	8834904	Symbol	s -> block_index		8833614						
ANR	8834905	Symbol	* q1		8833614						
ANR	8834906	Symbol	get_bits		8833614						
ANR	8834907	Symbol	* zz_table		8833614						
ANR	8834908	Symbol	v -> a_avail		8833614						
ANR	8834909	Symbol	s -> current_picture		8833614						
ANR	8834910	Symbol	s -> ac_val		8833614						
ANR	8834911	Symbol	s -> c_dc_scale		8833614						
ANR	8834912	Symbol	* s -> block_wrap		8833614						
ANR	8834913	Symbol	* s -> block_index		8833614						
ANR	8834914	Symbol	* s -> mb_stride		8833614						
ANR	8834915	Symbol	* s -> current_picture . qscale_table		8833614						
ANR	8834916	Symbol	mquant		8833614						
ANR	8834917	Symbol	block		8833614						
ANR	8834918	Symbol	v -> s		8833614						
ANR	8834919	Symbol	dc_pred_dir		8833614						
ANR	8834920	Symbol	& last		8833614						
ANR	8834921	Symbol	c_avail		8833614						
ANR	8834922	Symbol	ac_val		8833614						
ANR	8834923	Symbol	run_diff		8833614						
ANR	8834924	Symbol	last		8833614						
ANR	8834925	Symbol	dc_val		8833614						
ANR	8834926	Symbol	* mb_pos		8833614						
ANR	8834927	Symbol	s -> current_picture . qscale_table		8833614						
ANR	8834928	Symbol	s -> mb_x		8833614						
ANR	8834929	Symbol	* * * s		8833614						
ANR	8834930	Symbol	* * s -> ac_val		8833614						
ANR	8834931	Symbol	s -> mb_y		8833614						
ANR	8834932	Symbol	& s -> gb		8833614						
ANR	8834933	Symbol	coded		8833614						
ANR	8834934	Symbol	ac_val2		8833614						
ANR	8834935	Symbol	v -> s . ac_pred		8833614						
ANR	8834936	Symbol	mb_pos		8833614						
ANR	8834937	Symbol	vc1_pred_dc		8833614						
ANR	8834938	Symbol	zz_table		8833614						
ANR	8834939	Symbol	vc1_vertical_zz		8833614						
ANR	8834940	Symbol	s -> avctx		8833614						
ANR	8834941	Symbol	* vc1_dqscale		8833614						
ANR	8834942	Symbol	dcdiff		8833614						
ANR	8834943	Symbol	ff_msmp4_dc_luma_vlc [ s -> dc_table_index ] . table		8833614						
ANR	8834944	Symbol	v -> c_avail		8833614						
ANR	8834945	Symbol	ff_msmp4_dc_chroma_vlc		8833614						
ANR	8834946	Symbol	* ac_val2		8833614						
ANR	8834947	Symbol	use_pred		8833614						
ANR	8834948	Symbol	s -> mb_stride		8833614						
ANR	8834949	Symbol	* ff_msmp4_dc_luma_vlc		8833614						
ANR	8834950	Symbol	scale		8833614						
ANR	8834951	Symbol	* s -> dc_table_index		8833614						
ANR	8834952	Symbol	ff_msmp4_dc_chroma_vlc [ s -> dc_table_index ] . table		8833614						
ANR	8834953	Symbol	skip		8833614						
ANR	8834954	Symbol	codingset		8833614						
ANR	8834955	Symbol	v -> overlap		8833614						
ANR	8834956	Symbol	v -> pquantizer		8833614						
ANR	8834957	Symbol	s -> y_dc_scale		8833614						
ANR	8834958	Symbol	* * s		8833614						
ANR	8834959	Symbol	gb		8833614						
ANR	8834960	Symbol	s -> ac_pred		8833614						
ANR	8834961	Symbol	value		8833614						
ANR	8834962	Symbol	q1		8833614						
ANR	8834963	Symbol	q2		8833614						
ANR	8834964	Symbol	* s -> block_last_index		8833614						
ANR	8834965	Symbol	& dc_val		8833614						
ANR	8834966	Symbol	AV_LOG_ERROR		8833614						
ANR	8834967	Symbol	* ac_val		8833614						
ANR	8834968	Symbol	* s -> current_picture		8833614						
ANR	8834969	Symbol	& v -> s . gb		8833614						
ANR	8834970	Symbol	v -> halfpq		8833614						
ANR	8834971	Symbol	i		8833614						
ANR	8834972	Symbol	& skip		8833614						
ANR	8834973	Symbol	* dc_val		8833614						
ANR	8834974	Symbol	k		8833614						
ANR	8834975	Symbol	* s -> ac_val		8833614						
ANR	8834976	Symbol	n		8833614						
ANR	8834977	Symbol	ff_msmp4_dc_luma_vlc		8833614						
ANR	8834978	Symbol	& dc_pred_dir		8833614						
ANR	8834979	Symbol	* block		8833614						
ANR	8834980	Symbol	* * zz_table		8833614						
ANR	8834981	Symbol	s -> block_last_index		8833614						
ANR	8834982	Symbol	s -> dc_table_index		8833614						
ANR	8834983	Symbol	DC_VLC_BITS		8833614						
ANR	8834984	Symbol	s		8833614						
ANR	8834985	Symbol	* k		8833614						
ANR	8834986	Symbol	v		8833614						
ANR	8834987	Symbol	a_avail		8833614						
ANR	8834988	Symbol	v -> pq		8833614						
ANR	8834989	Symbol	* n		8833614						
ANR	8834990	Symbol	get_vlc2		8833614						
ANR	8834991	Symbol	* s		8833614						
ANR	8834992	Symbol	vc1_dqscale		8833614						
