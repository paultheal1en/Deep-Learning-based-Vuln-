command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1420859	File	/home/p4ultr4n/workplace/ReVeal/raw_code/cook_decode_init_01_1.c								
ANR	1420860	Function	cook_decode_init	1:0:0:8603							
ANR	1420861	FunctionDef	cook_decode_init (AVCodecContext * avctx)		1420860	0					
ANR	1420862	CompoundStatement		3:0:60:8603	1420860	0					
ANR	1420863	IdentifierDeclStatement	COOKContext * q = avctx -> priv_data ;	5:4:67:100	1420860	0	True				
ANR	1420864	IdentifierDecl	* q = avctx -> priv_data		1420860	0					
ANR	1420865	IdentifierDeclType	COOKContext *		1420860	0					
ANR	1420866	Identifier	q		1420860	1					
ANR	1420867	AssignmentExpression	* q = avctx -> priv_data		1420860	2		=			
ANR	1420868	Identifier	q		1420860	0					
ANR	1420869	PtrMemberAccess	avctx -> priv_data		1420860	1					
ANR	1420870	Identifier	avctx		1420860	0					
ANR	1420871	Identifier	priv_data		1420860	1					
ANR	1420872	IdentifierDeclStatement	const uint8_t * edata_ptr = avctx -> extradata ;	7:4:107:150	1420860	1	True				
ANR	1420873	IdentifierDecl	* edata_ptr = avctx -> extradata		1420860	0					
ANR	1420874	IdentifierDeclType	const uint8_t *		1420860	0					
ANR	1420875	Identifier	edata_ptr		1420860	1					
ANR	1420876	AssignmentExpression	* edata_ptr = avctx -> extradata		1420860	2		=			
ANR	1420877	Identifier	edata_ptr		1420860	0					
ANR	1420878	PtrMemberAccess	avctx -> extradata		1420860	1					
ANR	1420879	Identifier	avctx		1420860	0					
ANR	1420880	Identifier	extradata		1420860	1					
ANR	1420881	IdentifierDeclStatement	const uint8_t * edata_ptr_end = edata_ptr + avctx -> extradata_size ;	9:4:157:221	1420860	2	True				
ANR	1420882	IdentifierDecl	* edata_ptr_end = edata_ptr + avctx -> extradata_size		1420860	0					
ANR	1420883	IdentifierDeclType	const uint8_t *		1420860	0					
ANR	1420884	Identifier	edata_ptr_end		1420860	1					
ANR	1420885	AssignmentExpression	* edata_ptr_end = edata_ptr + avctx -> extradata_size		1420860	2		=			
ANR	1420886	Identifier	edata_ptr_end		1420860	0					
ANR	1420887	AdditiveExpression	edata_ptr + avctx -> extradata_size		1420860	1		+			
ANR	1420888	Identifier	edata_ptr		1420860	0					
ANR	1420889	PtrMemberAccess	avctx -> extradata_size		1420860	1					
ANR	1420890	Identifier	avctx		1420860	0					
ANR	1420891	Identifier	extradata_size		1420860	1					
ANR	1420892	IdentifierDeclStatement	int extradata_size = avctx -> extradata_size ;	11:4:228:270	1420860	3	True				
ANR	1420893	IdentifierDecl	extradata_size = avctx -> extradata_size		1420860	0					
ANR	1420894	IdentifierDeclType	int		1420860	0					
ANR	1420895	Identifier	extradata_size		1420860	1					
ANR	1420896	AssignmentExpression	extradata_size = avctx -> extradata_size		1420860	2		=			
ANR	1420897	Identifier	extradata_size		1420860	0					
ANR	1420898	PtrMemberAccess	avctx -> extradata_size		1420860	1					
ANR	1420899	Identifier	avctx		1420860	0					
ANR	1420900	Identifier	extradata_size		1420860	1					
ANR	1420901	IdentifierDeclStatement	int s = 0 ;	13:4:277:286	1420860	4	True				
ANR	1420902	IdentifierDecl	s = 0		1420860	0					
ANR	1420903	IdentifierDeclType	int		1420860	0					
ANR	1420904	Identifier	s		1420860	1					
ANR	1420905	AssignmentExpression	s = 0		1420860	2		=			
ANR	1420906	Identifier	s		1420860	0					
ANR	1420907	PrimaryExpression	0		1420860	1					
ANR	1420908	IdentifierDeclStatement	unsigned int channel_mask = 0 ;	15:4:293:322	1420860	5	True				
ANR	1420909	IdentifierDecl	channel_mask = 0		1420860	0					
ANR	1420910	IdentifierDeclType	unsigned int		1420860	0					
ANR	1420911	Identifier	channel_mask		1420860	1					
ANR	1420912	AssignmentExpression	channel_mask = 0		1420860	2		=			
ANR	1420913	Identifier	channel_mask		1420860	0					
ANR	1420914	PrimaryExpression	0		1420860	1					
ANR	1420915	IdentifierDeclStatement	int samples_per_frame ;	17:4:329:350	1420860	6	True				
ANR	1420916	IdentifierDecl	samples_per_frame		1420860	0					
ANR	1420917	IdentifierDeclType	int		1420860	0					
ANR	1420918	Identifier	samples_per_frame		1420860	1					
ANR	1420919	IdentifierDeclStatement	int ret ;	19:4:357:364	1420860	7	True				
ANR	1420920	IdentifierDecl	ret		1420860	0					
ANR	1420921	IdentifierDeclType	int		1420860	0					
ANR	1420922	Identifier	ret		1420860	1					
ANR	1420923	ExpressionStatement	q -> avctx = avctx	21:4:371:387	1420860	8	True				
ANR	1420924	AssignmentExpression	q -> avctx = avctx		1420860	0		=			
ANR	1420925	PtrMemberAccess	q -> avctx		1420860	0					
ANR	1420926	Identifier	q		1420860	0					
ANR	1420927	Identifier	avctx		1420860	1					
ANR	1420928	Identifier	avctx		1420860	1					
ANR	1420929	IfStatement	if ( extradata_size < 8 )		1420860	9					
ANR	1420930	Condition	extradata_size < 8	27:8:454:471	1420860	0	True				
ANR	1420931	RelationalExpression	extradata_size < 8		1420860	0		<			
ANR	1420932	Identifier	extradata_size		1420860	0					
ANR	1420933	PrimaryExpression	8		1420860	1					
ANR	1420934	CompoundStatement		25:28:413:413	1420860	1					
ANR	1420935	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Necessary extradata missing!\\n"" )"	29:8:485:546	1420860	0	True				
ANR	1420936	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Necessary extradata missing!\\n"" )"		1420860	0					
ANR	1420937	Callee	av_log		1420860	0					
ANR	1420938	Identifier	av_log		1420860	0					
ANR	1420939	ArgumentList	avctx		1420860	1					
ANR	1420940	Argument	avctx		1420860	0					
ANR	1420941	Identifier	avctx		1420860	0					
ANR	1420942	Argument	AV_LOG_ERROR		1420860	1					
ANR	1420943	Identifier	AV_LOG_ERROR		1420860	0					
ANR	1420944	Argument	"""Necessary extradata missing!\\n"""		1420860	2					
ANR	1420945	PrimaryExpression	"""Necessary extradata missing!\\n"""		1420860	0					
ANR	1420946	ReturnStatement	return AVERROR_INVALIDDATA ;	31:8:557:583	1420860	1	True				
ANR	1420947	Identifier	AVERROR_INVALIDDATA		1420860	0					
ANR	1420948	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""codecdata_length=%d\\n"" , avctx -> extradata_size )"	35:4:597:672	1420860	10	True				
ANR	1420949	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""codecdata_length=%d\\n"" , avctx -> extradata_size )"		1420860	0					
ANR	1420950	Callee	av_log		1420860	0					
ANR	1420951	Identifier	av_log		1420860	0					
ANR	1420952	ArgumentList	avctx		1420860	1					
ANR	1420953	Argument	avctx		1420860	0					
ANR	1420954	Identifier	avctx		1420860	0					
ANR	1420955	Argument	AV_LOG_DEBUG		1420860	1					
ANR	1420956	Identifier	AV_LOG_DEBUG		1420860	0					
ANR	1420957	Argument	"""codecdata_length=%d\\n"""		1420860	2					
ANR	1420958	PrimaryExpression	"""codecdata_length=%d\\n"""		1420860	0					
ANR	1420959	Argument	avctx -> extradata_size		1420860	3					
ANR	1420960	PtrMemberAccess	avctx -> extradata_size		1420860	0					
ANR	1420961	Identifier	avctx		1420860	0					
ANR	1420962	Identifier	extradata_size		1420860	1					
ANR	1420963	IfStatement	if ( ! avctx -> channels )		1420860	11					
ANR	1420964	Condition	! avctx -> channels	41:8:746:761	1420860	0	True				
ANR	1420965	UnaryOperationExpression	! avctx -> channels		1420860	0					
ANR	1420966	UnaryOperator	!		1420860	0					
ANR	1420967	PtrMemberAccess	avctx -> channels		1420860	1					
ANR	1420968	Identifier	avctx		1420860	0					
ANR	1420969	Identifier	channels		1420860	1					
ANR	1420970	CompoundStatement		39:26:703:703	1420860	1					
ANR	1420971	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid number of channels\\n"" )"	43:8:775:834	1420860	0	True				
ANR	1420972	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid number of channels\\n"" )"		1420860	0					
ANR	1420973	Callee	av_log		1420860	0					
ANR	1420974	Identifier	av_log		1420860	0					
ANR	1420975	ArgumentList	avctx		1420860	1					
ANR	1420976	Argument	avctx		1420860	0					
ANR	1420977	Identifier	avctx		1420860	0					
ANR	1420978	Argument	AV_LOG_ERROR		1420860	1					
ANR	1420979	Identifier	AV_LOG_ERROR		1420860	0					
ANR	1420980	Argument	"""Invalid number of channels\\n"""		1420860	2					
ANR	1420981	PrimaryExpression	"""Invalid number of channels\\n"""		1420860	0					
ANR	1420982	ReturnStatement	return AVERROR_INVALIDDATA ;	45:8:845:871	1420860	1	True				
ANR	1420983	Identifier	AVERROR_INVALIDDATA		1420860	0					
ANR	1420984	ExpressionStatement	"av_lfg_init ( & q -> random_state , 0 )"	53:4:914:946	1420860	12	True				
ANR	1420985	CallExpression	"av_lfg_init ( & q -> random_state , 0 )"		1420860	0					
ANR	1420986	Callee	av_lfg_init		1420860	0					
ANR	1420987	Identifier	av_lfg_init		1420860	0					
ANR	1420988	ArgumentList	& q -> random_state		1420860	1					
ANR	1420989	Argument	& q -> random_state		1420860	0					
ANR	1420990	UnaryOperationExpression	& q -> random_state		1420860	0					
ANR	1420991	UnaryOperator	&		1420860	0					
ANR	1420992	PtrMemberAccess	q -> random_state		1420860	1					
ANR	1420993	Identifier	q		1420860	0					
ANR	1420994	Identifier	random_state		1420860	1					
ANR	1420995	Argument	0		1420860	1					
ANR	1420996	PrimaryExpression	0		1420860	0					
ANR	1420997	ExpressionStatement	ff_audiodsp_init ( & q -> adsp )	57:4:955:981	1420860	13	True				
ANR	1420998	CallExpression	ff_audiodsp_init ( & q -> adsp )		1420860	0					
ANR	1420999	Callee	ff_audiodsp_init		1420860	0					
ANR	1421000	Identifier	ff_audiodsp_init		1420860	0					
ANR	1421001	ArgumentList	& q -> adsp		1420860	1					
ANR	1421002	Argument	& q -> adsp		1420860	0					
ANR	1421003	UnaryOperationExpression	& q -> adsp		1420860	0					
ANR	1421004	UnaryOperator	&		1420860	0					
ANR	1421005	PtrMemberAccess	q -> adsp		1420860	1					
ANR	1421006	Identifier	q		1420860	0					
ANR	1421007	Identifier	adsp		1420860	1					
ANR	1421008	WhileStatement	while ( edata_ptr < edata_ptr_end )		1420860	14					
ANR	1421009	Condition	edata_ptr < edata_ptr_end	61:11:997:1021	1420860	0	True				
ANR	1421010	RelationalExpression	edata_ptr < edata_ptr_end		1420860	0		<			
ANR	1421011	Identifier	edata_ptr		1420860	0					
ANR	1421012	Identifier	edata_ptr_end		1420860	1					
ANR	1421013	CompoundStatement		59:38:963:963	1420860	1					
ANR	1421014	IfStatement	if ( extradata_size >= 8 )		1420860	0					
ANR	1421015	Condition	extradata_size >= 8	67:12:1172:1190	1420860	0	True				
ANR	1421016	RelationalExpression	extradata_size >= 8		1420860	0		>=			
ANR	1421017	Identifier	extradata_size		1420860	0					
ANR	1421018	PrimaryExpression	8		1420860	1					
ANR	1421019	CompoundStatement		65:33:1132:1132	1420860	1					
ANR	1421020	ExpressionStatement	q -> subpacket [ s ] . cookversion = bytestream_get_be32 ( & edata_ptr )	69:12:1208:1269	1420860	0	True				
ANR	1421021	AssignmentExpression	q -> subpacket [ s ] . cookversion = bytestream_get_be32 ( & edata_ptr )		1420860	0		=			
ANR	1421022	MemberAccess	q -> subpacket [ s ] . cookversion		1420860	0					
ANR	1421023	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421024	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421025	Identifier	q		1420860	0					
ANR	1421026	Identifier	subpacket		1420860	1					
ANR	1421027	Identifier	s		1420860	1					
ANR	1421028	Identifier	cookversion		1420860	1					
ANR	1421029	CallExpression	bytestream_get_be32 ( & edata_ptr )		1420860	1					
ANR	1421030	Callee	bytestream_get_be32		1420860	0					
ANR	1421031	Identifier	bytestream_get_be32		1420860	0					
ANR	1421032	ArgumentList	& edata_ptr		1420860	1					
ANR	1421033	Argument	& edata_ptr		1420860	0					
ANR	1421034	UnaryOperationExpression	& edata_ptr		1420860	0					
ANR	1421035	UnaryOperator	&		1420860	0					
ANR	1421036	Identifier	edata_ptr		1420860	1					
ANR	1421037	ExpressionStatement	samples_per_frame = bytestream_get_be16 ( & edata_ptr )	71:12:1284:1345	1420860	1	True				
ANR	1421038	AssignmentExpression	samples_per_frame = bytestream_get_be16 ( & edata_ptr )		1420860	0		=			
ANR	1421039	Identifier	samples_per_frame		1420860	0					
ANR	1421040	CallExpression	bytestream_get_be16 ( & edata_ptr )		1420860	1					
ANR	1421041	Callee	bytestream_get_be16		1420860	0					
ANR	1421042	Identifier	bytestream_get_be16		1420860	0					
ANR	1421043	ArgumentList	& edata_ptr		1420860	1					
ANR	1421044	Argument	& edata_ptr		1420860	0					
ANR	1421045	UnaryOperationExpression	& edata_ptr		1420860	0					
ANR	1421046	UnaryOperator	&		1420860	0					
ANR	1421047	Identifier	edata_ptr		1420860	1					
ANR	1421048	ExpressionStatement	q -> subpacket [ s ] . subbands = bytestream_get_be16 ( & edata_ptr )	73:12:1360:1418	1420860	2	True				
ANR	1421049	AssignmentExpression	q -> subpacket [ s ] . subbands = bytestream_get_be16 ( & edata_ptr )		1420860	0		=			
ANR	1421050	MemberAccess	q -> subpacket [ s ] . subbands		1420860	0					
ANR	1421051	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421052	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421053	Identifier	q		1420860	0					
ANR	1421054	Identifier	subpacket		1420860	1					
ANR	1421055	Identifier	s		1420860	1					
ANR	1421056	Identifier	subbands		1420860	1					
ANR	1421057	CallExpression	bytestream_get_be16 ( & edata_ptr )		1420860	1					
ANR	1421058	Callee	bytestream_get_be16		1420860	0					
ANR	1421059	Identifier	bytestream_get_be16		1420860	0					
ANR	1421060	ArgumentList	& edata_ptr		1420860	1					
ANR	1421061	Argument	& edata_ptr		1420860	0					
ANR	1421062	UnaryOperationExpression	& edata_ptr		1420860	0					
ANR	1421063	UnaryOperator	&		1420860	0					
ANR	1421064	Identifier	edata_ptr		1420860	1					
ANR	1421065	ExpressionStatement	extradata_size -= 8	75:12:1433:1452	1420860	3	True				
ANR	1421066	AssignmentExpression	extradata_size -= 8		1420860	0		-=			
ANR	1421067	Identifier	extradata_size		1420860	0					
ANR	1421068	PrimaryExpression	8		1420860	1					
ANR	1421069	IfStatement	if ( extradata_size >= 8 )		1420860	1					
ANR	1421070	Condition	extradata_size >= 8	79:12:1478:1496	1420860	0	True				
ANR	1421071	RelationalExpression	extradata_size >= 8		1420860	0		>=			
ANR	1421072	Identifier	extradata_size		1420860	0					
ANR	1421073	PrimaryExpression	8		1420860	1					
ANR	1421074	CompoundStatement		77:33:1438:1438	1420860	1					
ANR	1421075	ExpressionStatement	bytestream_get_be32 ( & edata_ptr )	81:12:1514:1545	1420860	0	True				
ANR	1421076	CallExpression	bytestream_get_be32 ( & edata_ptr )		1420860	0					
ANR	1421077	Callee	bytestream_get_be32		1420860	0					
ANR	1421078	Identifier	bytestream_get_be32		1420860	0					
ANR	1421079	ArgumentList	& edata_ptr		1420860	1					
ANR	1421080	Argument	& edata_ptr		1420860	0					
ANR	1421081	UnaryOperationExpression	& edata_ptr		1420860	0					
ANR	1421082	UnaryOperator	&		1420860	0					
ANR	1421083	Identifier	edata_ptr		1420860	1					
ANR	1421084	ExpressionStatement	q -> subpacket [ s ] . js_subband_start = bytestream_get_be16 ( & edata_ptr )	83:12:1581:1647	1420860	1	True				
ANR	1421085	AssignmentExpression	q -> subpacket [ s ] . js_subband_start = bytestream_get_be16 ( & edata_ptr )		1420860	0		=			
ANR	1421086	MemberAccess	q -> subpacket [ s ] . js_subband_start		1420860	0					
ANR	1421087	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421088	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421089	Identifier	q		1420860	0					
ANR	1421090	Identifier	subpacket		1420860	1					
ANR	1421091	Identifier	s		1420860	1					
ANR	1421092	Identifier	js_subband_start		1420860	1					
ANR	1421093	CallExpression	bytestream_get_be16 ( & edata_ptr )		1420860	1					
ANR	1421094	Callee	bytestream_get_be16		1420860	0					
ANR	1421095	Identifier	bytestream_get_be16		1420860	0					
ANR	1421096	ArgumentList	& edata_ptr		1420860	1					
ANR	1421097	Argument	& edata_ptr		1420860	0					
ANR	1421098	UnaryOperationExpression	& edata_ptr		1420860	0					
ANR	1421099	UnaryOperator	&		1420860	0					
ANR	1421100	Identifier	edata_ptr		1420860	1					
ANR	1421101	ExpressionStatement	q -> subpacket [ s ] . js_vlc_bits = bytestream_get_be16 ( & edata_ptr )	85:12:1662:1723	1420860	2	True				
ANR	1421102	AssignmentExpression	q -> subpacket [ s ] . js_vlc_bits = bytestream_get_be16 ( & edata_ptr )		1420860	0		=			
ANR	1421103	MemberAccess	q -> subpacket [ s ] . js_vlc_bits		1420860	0					
ANR	1421104	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421105	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421106	Identifier	q		1420860	0					
ANR	1421107	Identifier	subpacket		1420860	1					
ANR	1421108	Identifier	s		1420860	1					
ANR	1421109	Identifier	js_vlc_bits		1420860	1					
ANR	1421110	CallExpression	bytestream_get_be16 ( & edata_ptr )		1420860	1					
ANR	1421111	Callee	bytestream_get_be16		1420860	0					
ANR	1421112	Identifier	bytestream_get_be16		1420860	0					
ANR	1421113	ArgumentList	& edata_ptr		1420860	1					
ANR	1421114	Argument	& edata_ptr		1420860	0					
ANR	1421115	UnaryOperationExpression	& edata_ptr		1420860	0					
ANR	1421116	UnaryOperator	&		1420860	0					
ANR	1421117	Identifier	edata_ptr		1420860	1					
ANR	1421118	ExpressionStatement	extradata_size -= 8	87:12:1738:1757	1420860	3	True				
ANR	1421119	AssignmentExpression	extradata_size -= 8		1420860	0		-=			
ANR	1421120	Identifier	extradata_size		1420860	0					
ANR	1421121	PrimaryExpression	8		1420860	1					
ANR	1421122	ExpressionStatement	q -> subpacket [ s ] . samples_per_channel = samples_per_frame / avctx -> channels	95:8:1836:1909	1420860	2	True				
ANR	1421123	AssignmentExpression	q -> subpacket [ s ] . samples_per_channel = samples_per_frame / avctx -> channels		1420860	0		=			
ANR	1421124	MemberAccess	q -> subpacket [ s ] . samples_per_channel		1420860	0					
ANR	1421125	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421126	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421127	Identifier	q		1420860	0					
ANR	1421128	Identifier	subpacket		1420860	1					
ANR	1421129	Identifier	s		1420860	1					
ANR	1421130	Identifier	samples_per_channel		1420860	1					
ANR	1421131	MultiplicativeExpression	samples_per_frame / avctx -> channels		1420860	1		/			
ANR	1421132	Identifier	samples_per_frame		1420860	0					
ANR	1421133	PtrMemberAccess	avctx -> channels		1420860	1					
ANR	1421134	Identifier	avctx		1420860	0					
ANR	1421135	Identifier	channels		1420860	1					
ANR	1421136	ExpressionStatement	q -> subpacket [ s ] . bits_per_subpacket = avctx -> block_align * 8	97:8:1920:1979	1420860	3	True				
ANR	1421137	AssignmentExpression	q -> subpacket [ s ] . bits_per_subpacket = avctx -> block_align * 8		1420860	0		=			
ANR	1421138	MemberAccess	q -> subpacket [ s ] . bits_per_subpacket		1420860	0					
ANR	1421139	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421140	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421141	Identifier	q		1420860	0					
ANR	1421142	Identifier	subpacket		1420860	1					
ANR	1421143	Identifier	s		1420860	1					
ANR	1421144	Identifier	bits_per_subpacket		1420860	1					
ANR	1421145	MultiplicativeExpression	avctx -> block_align * 8		1420860	1		*			
ANR	1421146	PtrMemberAccess	avctx -> block_align		1420860	0					
ANR	1421147	Identifier	avctx		1420860	0					
ANR	1421148	Identifier	block_align		1420860	1					
ANR	1421149	PrimaryExpression	8		1420860	1					
ANR	1421150	ExpressionStatement	q -> subpacket [ s ] . log2_numvector_size = 5	103:8:2039:2078	1420860	4	True				
ANR	1421151	AssignmentExpression	q -> subpacket [ s ] . log2_numvector_size = 5		1420860	0		=			
ANR	1421152	MemberAccess	q -> subpacket [ s ] . log2_numvector_size		1420860	0					
ANR	1421153	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421154	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421155	Identifier	q		1420860	0					
ANR	1421156	Identifier	subpacket		1420860	1					
ANR	1421157	Identifier	s		1420860	1					
ANR	1421158	Identifier	log2_numvector_size		1420860	1					
ANR	1421159	PrimaryExpression	5		1420860	1					
ANR	1421160	ExpressionStatement	q -> subpacket [ s ] . total_subbands = q -> subpacket [ s ] . subbands	105:8:2089:2146	1420860	5	True				
ANR	1421161	AssignmentExpression	q -> subpacket [ s ] . total_subbands = q -> subpacket [ s ] . subbands		1420860	0		=			
ANR	1421162	MemberAccess	q -> subpacket [ s ] . total_subbands		1420860	0					
ANR	1421163	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421164	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421165	Identifier	q		1420860	0					
ANR	1421166	Identifier	subpacket		1420860	1					
ANR	1421167	Identifier	s		1420860	1					
ANR	1421168	Identifier	total_subbands		1420860	1					
ANR	1421169	MemberAccess	q -> subpacket [ s ] . subbands		1420860	1					
ANR	1421170	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421171	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421172	Identifier	q		1420860	0					
ANR	1421173	Identifier	subpacket		1420860	1					
ANR	1421174	Identifier	s		1420860	1					
ANR	1421175	Identifier	subbands		1420860	1					
ANR	1421176	ExpressionStatement	q -> subpacket [ s ] . num_channels = 1	107:8:2157:2189	1420860	6	True				
ANR	1421177	AssignmentExpression	q -> subpacket [ s ] . num_channels = 1		1420860	0		=			
ANR	1421178	MemberAccess	q -> subpacket [ s ] . num_channels		1420860	0					
ANR	1421179	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421180	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421181	Identifier	q		1420860	0					
ANR	1421182	Identifier	subpacket		1420860	1					
ANR	1421183	Identifier	s		1420860	1					
ANR	1421184	Identifier	num_channels		1420860	1					
ANR	1421185	PrimaryExpression	1		1420860	1					
ANR	1421186	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""subpacket[%i].cookversion=%x\\n"" , s , q -> subpacket [ s ] . cookversion )"	115:8:2258:2367	1420860	7	True				
ANR	1421187	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""subpacket[%i].cookversion=%x\\n"" , s , q -> subpacket [ s ] . cookversion )"		1420860	0					
ANR	1421188	Callee	av_log		1420860	0					
ANR	1421189	Identifier	av_log		1420860	0					
ANR	1421190	ArgumentList	avctx		1420860	1					
ANR	1421191	Argument	avctx		1420860	0					
ANR	1421192	Identifier	avctx		1420860	0					
ANR	1421193	Argument	AV_LOG_DEBUG		1420860	1					
ANR	1421194	Identifier	AV_LOG_DEBUG		1420860	0					
ANR	1421195	Argument	"""subpacket[%i].cookversion=%x\\n"""		1420860	2					
ANR	1421196	PrimaryExpression	"""subpacket[%i].cookversion=%x\\n"""		1420860	0					
ANR	1421197	Argument	s		1420860	3					
ANR	1421198	Identifier	s		1420860	0					
ANR	1421199	Argument	q -> subpacket [ s ] . cookversion		1420860	4					
ANR	1421200	MemberAccess	q -> subpacket [ s ] . cookversion		1420860	0					
ANR	1421201	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421202	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421203	Identifier	q		1420860	0					
ANR	1421204	Identifier	subpacket		1420860	1					
ANR	1421205	Identifier	s		1420860	1					
ANR	1421206	Identifier	cookversion		1420860	1					
ANR	1421207	ExpressionStatement	q -> subpacket [ s ] . joint_stereo = 0	119:8:2378:2410	1420860	8	True				
ANR	1421208	AssignmentExpression	q -> subpacket [ s ] . joint_stereo = 0		1420860	0		=			
ANR	1421209	MemberAccess	q -> subpacket [ s ] . joint_stereo		1420860	0					
ANR	1421210	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421211	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421212	Identifier	q		1420860	0					
ANR	1421213	Identifier	subpacket		1420860	1					
ANR	1421214	Identifier	s		1420860	1					
ANR	1421215	Identifier	joint_stereo		1420860	1					
ANR	1421216	PrimaryExpression	0		1420860	1					
ANR	1421217	SwitchStatement	switch ( q -> subpacket [ s ] . cookversion )		1420860	9					
ANR	1421218	Condition	q -> subpacket [ s ] . cookversion	121:16:2429:2455	1420860	0	True				
ANR	1421219	MemberAccess	q -> subpacket [ s ] . cookversion		1420860	0					
ANR	1421220	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421221	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421222	Identifier	q		1420860	0					
ANR	1421223	Identifier	subpacket		1420860	1					
ANR	1421224	Identifier	s		1420860	1					
ANR	1421225	Identifier	cookversion		1420860	1					
ANR	1421226	CompoundStatement		119:45:2397:2397	1420860	1					
ANR	1421227	Label	case MONO :	123:8:2469:2478	1420860	0	True				
ANR	1421228	Identifier	MONO		1420860	0					
ANR	1421229	IfStatement	if ( avctx -> channels != 1 )		1420860	1					
ANR	1421230	Condition	avctx -> channels != 1	125:16:2497:2516	1420860	0	True				
ANR	1421231	EqualityExpression	avctx -> channels != 1		1420860	0		!=			
ANR	1421232	PtrMemberAccess	avctx -> channels		1420860	0					
ANR	1421233	Identifier	avctx		1420860	0					
ANR	1421234	Identifier	channels		1420860	1					
ANR	1421235	PrimaryExpression	1		1420860	1					
ANR	1421236	CompoundStatement		123:38:2458:2458	1420860	1					
ANR	1421237	ExpressionStatement	"avpriv_request_sample ( avctx , ""Container channels != 1"" )"	127:16:2538:2593	1420860	0	True				
ANR	1421238	CallExpression	"avpriv_request_sample ( avctx , ""Container channels != 1"" )"		1420860	0					
ANR	1421239	Callee	avpriv_request_sample		1420860	0					
ANR	1421240	Identifier	avpriv_request_sample		1420860	0					
ANR	1421241	ArgumentList	avctx		1420860	1					
ANR	1421242	Argument	avctx		1420860	0					
ANR	1421243	Identifier	avctx		1420860	0					
ANR	1421244	Argument	"""Container channels != 1"""		1420860	1					
ANR	1421245	PrimaryExpression	"""Container channels != 1"""		1420860	0					
ANR	1421246	ReturnStatement	return AVERROR_PATCHWELCOME ;	129:16:2612:2639	1420860	1	True				
ANR	1421247	Identifier	AVERROR_PATCHWELCOME		1420860	0					
ANR	1421248	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""MONO\\n"" )"	133:12:2669:2706	1420860	2	True				
ANR	1421249	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""MONO\\n"" )"		1420860	0					
ANR	1421250	Callee	av_log		1420860	0					
ANR	1421251	Identifier	av_log		1420860	0					
ANR	1421252	ArgumentList	avctx		1420860	1					
ANR	1421253	Argument	avctx		1420860	0					
ANR	1421254	Identifier	avctx		1420860	0					
ANR	1421255	Argument	AV_LOG_DEBUG		1420860	1					
ANR	1421256	Identifier	AV_LOG_DEBUG		1420860	0					
ANR	1421257	Argument	"""MONO\\n"""		1420860	2					
ANR	1421258	PrimaryExpression	"""MONO\\n"""		1420860	0					
ANR	1421259	BreakStatement	break ;	135:12:2721:2726	1420860	3	True				
ANR	1421260	Label	case STEREO :	137:8:2737:2748	1420860	4	True				
ANR	1421261	Identifier	STEREO		1420860	0					
ANR	1421262	IfStatement	if ( avctx -> channels != 1 )		1420860	5					
ANR	1421263	Condition	avctx -> channels != 1	139:16:2767:2786	1420860	0	True				
ANR	1421264	EqualityExpression	avctx -> channels != 1		1420860	0		!=			
ANR	1421265	PtrMemberAccess	avctx -> channels		1420860	0					
ANR	1421266	Identifier	avctx		1420860	0					
ANR	1421267	Identifier	channels		1420860	1					
ANR	1421268	PrimaryExpression	1		1420860	1					
ANR	1421269	CompoundStatement		137:38:2728:2728	1420860	1					
ANR	1421270	ExpressionStatement	q -> subpacket [ s ] . bits_per_subpdiv = 1	141:16:2808:2844	1420860	0	True				
ANR	1421271	AssignmentExpression	q -> subpacket [ s ] . bits_per_subpdiv = 1		1420860	0		=			
ANR	1421272	MemberAccess	q -> subpacket [ s ] . bits_per_subpdiv		1420860	0					
ANR	1421273	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421274	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421275	Identifier	q		1420860	0					
ANR	1421276	Identifier	subpacket		1420860	1					
ANR	1421277	Identifier	s		1420860	1					
ANR	1421278	Identifier	bits_per_subpdiv		1420860	1					
ANR	1421279	PrimaryExpression	1		1420860	1					
ANR	1421280	ExpressionStatement	q -> subpacket [ s ] . num_channels = 2	143:16:2863:2895	1420860	1	True				
ANR	1421281	AssignmentExpression	q -> subpacket [ s ] . num_channels = 2		1420860	0		=			
ANR	1421282	MemberAccess	q -> subpacket [ s ] . num_channels		1420860	0					
ANR	1421283	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421284	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421285	Identifier	q		1420860	0					
ANR	1421286	Identifier	subpacket		1420860	1					
ANR	1421287	Identifier	s		1420860	1					
ANR	1421288	Identifier	num_channels		1420860	1					
ANR	1421289	PrimaryExpression	2		1420860	1					
ANR	1421290	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""STEREO\\n"" )"	147:12:2925:2964	1420860	6	True				
ANR	1421291	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""STEREO\\n"" )"		1420860	0					
ANR	1421292	Callee	av_log		1420860	0					
ANR	1421293	Identifier	av_log		1420860	0					
ANR	1421294	ArgumentList	avctx		1420860	1					
ANR	1421295	Argument	avctx		1420860	0					
ANR	1421296	Identifier	avctx		1420860	0					
ANR	1421297	Argument	AV_LOG_DEBUG		1420860	1					
ANR	1421298	Identifier	AV_LOG_DEBUG		1420860	0					
ANR	1421299	Argument	"""STEREO\\n"""		1420860	2					
ANR	1421300	PrimaryExpression	"""STEREO\\n"""		1420860	0					
ANR	1421301	BreakStatement	break ;	149:12:2979:2984	1420860	7	True				
ANR	1421302	Label	case JOINT_STEREO :	151:8:2995:3012	1420860	8	True				
ANR	1421303	Identifier	JOINT_STEREO		1420860	0					
ANR	1421304	IfStatement	if ( avctx -> channels != 2 )		1420860	9					
ANR	1421305	Condition	avctx -> channels != 2	153:16:3031:3050	1420860	0	True				
ANR	1421306	EqualityExpression	avctx -> channels != 2		1420860	0		!=			
ANR	1421307	PtrMemberAccess	avctx -> channels		1420860	0					
ANR	1421308	Identifier	avctx		1420860	0					
ANR	1421309	Identifier	channels		1420860	1					
ANR	1421310	PrimaryExpression	2		1420860	1					
ANR	1421311	CompoundStatement		151:38:2992:2992	1420860	1					
ANR	1421312	ExpressionStatement	"avpriv_request_sample ( avctx , ""Container channels != 2"" )"	155:16:3072:3127	1420860	0	True				
ANR	1421313	CallExpression	"avpriv_request_sample ( avctx , ""Container channels != 2"" )"		1420860	0					
ANR	1421314	Callee	avpriv_request_sample		1420860	0					
ANR	1421315	Identifier	avpriv_request_sample		1420860	0					
ANR	1421316	ArgumentList	avctx		1420860	1					
ANR	1421317	Argument	avctx		1420860	0					
ANR	1421318	Identifier	avctx		1420860	0					
ANR	1421319	Argument	"""Container channels != 2"""		1420860	1					
ANR	1421320	PrimaryExpression	"""Container channels != 2"""		1420860	0					
ANR	1421321	ReturnStatement	return AVERROR_PATCHWELCOME ;	157:16:3146:3173	1420860	1	True				
ANR	1421322	Identifier	AVERROR_PATCHWELCOME		1420860	0					
ANR	1421323	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""JOINT_STEREO\\n"" )"	161:12:3203:3248	1420860	10	True				
ANR	1421324	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""JOINT_STEREO\\n"" )"		1420860	0					
ANR	1421325	Callee	av_log		1420860	0					
ANR	1421326	Identifier	av_log		1420860	0					
ANR	1421327	ArgumentList	avctx		1420860	1					
ANR	1421328	Argument	avctx		1420860	0					
ANR	1421329	Identifier	avctx		1420860	0					
ANR	1421330	Argument	AV_LOG_DEBUG		1420860	1					
ANR	1421331	Identifier	AV_LOG_DEBUG		1420860	0					
ANR	1421332	Argument	"""JOINT_STEREO\\n"""		1420860	2					
ANR	1421333	PrimaryExpression	"""JOINT_STEREO\\n"""		1420860	0					
ANR	1421334	IfStatement	if ( avctx -> extradata_size >= 16 )		1420860	11					
ANR	1421335	Condition	avctx -> extradata_size >= 16	163:16:3267:3293	1420860	0	True				
ANR	1421336	RelationalExpression	avctx -> extradata_size >= 16		1420860	0		>=			
ANR	1421337	PtrMemberAccess	avctx -> extradata_size		1420860	0					
ANR	1421338	Identifier	avctx		1420860	0					
ANR	1421339	Identifier	extradata_size		1420860	1					
ANR	1421340	PrimaryExpression	16		1420860	1					
ANR	1421341	CompoundStatement		161:45:3235:3235	1420860	1					
ANR	1421342	ExpressionStatement	q -> subpacket [ s ] . total_subbands = q -> subpacket [ s ] . subbands + q -> subpacket [ s ] . js_subband_start	165:16:3315:3457	1420860	0	True				
ANR	1421343	AssignmentExpression	q -> subpacket [ s ] . total_subbands = q -> subpacket [ s ] . subbands + q -> subpacket [ s ] . js_subband_start		1420860	0		=			
ANR	1421344	MemberAccess	q -> subpacket [ s ] . total_subbands		1420860	0					
ANR	1421345	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421346	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421347	Identifier	q		1420860	0					
ANR	1421348	Identifier	subpacket		1420860	1					
ANR	1421349	Identifier	s		1420860	1					
ANR	1421350	Identifier	total_subbands		1420860	1					
ANR	1421351	AdditiveExpression	q -> subpacket [ s ] . subbands + q -> subpacket [ s ] . js_subband_start		1420860	1		+			
ANR	1421352	MemberAccess	q -> subpacket [ s ] . subbands		1420860	0					
ANR	1421353	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421354	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421355	Identifier	q		1420860	0					
ANR	1421356	Identifier	subpacket		1420860	1					
ANR	1421357	Identifier	s		1420860	1					
ANR	1421358	Identifier	subbands		1420860	1					
ANR	1421359	MemberAccess	q -> subpacket [ s ] . js_subband_start		1420860	1					
ANR	1421360	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421361	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421362	Identifier	q		1420860	0					
ANR	1421363	Identifier	subpacket		1420860	1					
ANR	1421364	Identifier	s		1420860	1					
ANR	1421365	Identifier	js_subband_start		1420860	1					
ANR	1421366	ExpressionStatement	q -> subpacket [ s ] . joint_stereo = 1	169:16:3476:3508	1420860	1	True				
ANR	1421367	AssignmentExpression	q -> subpacket [ s ] . joint_stereo = 1		1420860	0		=			
ANR	1421368	MemberAccess	q -> subpacket [ s ] . joint_stereo		1420860	0					
ANR	1421369	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421370	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421371	Identifier	q		1420860	0					
ANR	1421372	Identifier	subpacket		1420860	1					
ANR	1421373	Identifier	s		1420860	1					
ANR	1421374	Identifier	joint_stereo		1420860	1					
ANR	1421375	PrimaryExpression	1		1420860	1					
ANR	1421376	ExpressionStatement	q -> subpacket [ s ] . num_channels = 2	171:16:3527:3559	1420860	2	True				
ANR	1421377	AssignmentExpression	q -> subpacket [ s ] . num_channels = 2		1420860	0		=			
ANR	1421378	MemberAccess	q -> subpacket [ s ] . num_channels		1420860	0					
ANR	1421379	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421380	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421381	Identifier	q		1420860	0					
ANR	1421382	Identifier	subpacket		1420860	1					
ANR	1421383	Identifier	s		1420860	1					
ANR	1421384	Identifier	num_channels		1420860	1					
ANR	1421385	PrimaryExpression	2		1420860	1					
ANR	1421386	IfStatement	if ( q -> subpacket [ s ] . samples_per_channel > 256 )		1420860	12					
ANR	1421387	Condition	q -> subpacket [ s ] . samples_per_channel > 256	175:16:3593:3633	1420860	0	True				
ANR	1421388	RelationalExpression	q -> subpacket [ s ] . samples_per_channel > 256		1420860	0		>			
ANR	1421389	MemberAccess	q -> subpacket [ s ] . samples_per_channel		1420860	0					
ANR	1421390	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421391	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421392	Identifier	q		1420860	0					
ANR	1421393	Identifier	subpacket		1420860	1					
ANR	1421394	Identifier	s		1420860	1					
ANR	1421395	Identifier	samples_per_channel		1420860	1					
ANR	1421396	PrimaryExpression	256		1420860	1					
ANR	1421397	CompoundStatement		173:59:3575:3575	1420860	1					
ANR	1421398	ExpressionStatement	q -> subpacket [ s ] . log2_numvector_size = 6	177:16:3655:3694	1420860	0	True				
ANR	1421399	AssignmentExpression	q -> subpacket [ s ] . log2_numvector_size = 6		1420860	0		=			
ANR	1421400	MemberAccess	q -> subpacket [ s ] . log2_numvector_size		1420860	0					
ANR	1421401	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421402	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421403	Identifier	q		1420860	0					
ANR	1421404	Identifier	subpacket		1420860	1					
ANR	1421405	Identifier	s		1420860	1					
ANR	1421406	Identifier	log2_numvector_size		1420860	1					
ANR	1421407	PrimaryExpression	6		1420860	1					
ANR	1421408	IfStatement	if ( q -> subpacket [ s ] . samples_per_channel > 512 )		1420860	13					
ANR	1421409	Condition	q -> subpacket [ s ] . samples_per_channel > 512	181:16:3728:3768	1420860	0	True				
ANR	1421410	RelationalExpression	q -> subpacket [ s ] . samples_per_channel > 512		1420860	0		>			
ANR	1421411	MemberAccess	q -> subpacket [ s ] . samples_per_channel		1420860	0					
ANR	1421412	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421413	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421414	Identifier	q		1420860	0					
ANR	1421415	Identifier	subpacket		1420860	1					
ANR	1421416	Identifier	s		1420860	1					
ANR	1421417	Identifier	samples_per_channel		1420860	1					
ANR	1421418	PrimaryExpression	512		1420860	1					
ANR	1421419	CompoundStatement		179:59:3710:3710	1420860	1					
ANR	1421420	ExpressionStatement	q -> subpacket [ s ] . log2_numvector_size = 7	183:16:3790:3829	1420860	0	True				
ANR	1421421	AssignmentExpression	q -> subpacket [ s ] . log2_numvector_size = 7		1420860	0		=			
ANR	1421422	MemberAccess	q -> subpacket [ s ] . log2_numvector_size		1420860	0					
ANR	1421423	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421424	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421425	Identifier	q		1420860	0					
ANR	1421426	Identifier	subpacket		1420860	1					
ANR	1421427	Identifier	s		1420860	1					
ANR	1421428	Identifier	log2_numvector_size		1420860	1					
ANR	1421429	PrimaryExpression	7		1420860	1					
ANR	1421430	BreakStatement	break ;	187:12:3859:3864	1420860	14	True				
ANR	1421431	Label	case MC_COOK :	189:8:3875:3887	1420860	15	True				
ANR	1421432	Identifier	MC_COOK		1420860	0					
ANR	1421433	ExpressionStatement	"av_log ( avctx , AV_LOG_DEBUG , ""MULTI_CHANNEL\\n"" )"	191:12:3902:3948	1420860	16	True				
ANR	1421434	CallExpression	"av_log ( avctx , AV_LOG_DEBUG , ""MULTI_CHANNEL\\n"" )"		1420860	0					
ANR	1421435	Callee	av_log		1420860	0					
ANR	1421436	Identifier	av_log		1420860	0					
ANR	1421437	ArgumentList	avctx		1420860	1					
ANR	1421438	Argument	avctx		1420860	0					
ANR	1421439	Identifier	avctx		1420860	0					
ANR	1421440	Argument	AV_LOG_DEBUG		1420860	1					
ANR	1421441	Identifier	AV_LOG_DEBUG		1420860	0					
ANR	1421442	Argument	"""MULTI_CHANNEL\\n"""		1420860	2					
ANR	1421443	PrimaryExpression	"""MULTI_CHANNEL\\n"""		1420860	0					
ANR	1421444	IfStatement	if ( extradata_size >= 4 )		1420860	17					
ANR	1421445	Condition	extradata_size >= 4	193:16:3967:3985	1420860	0	True				
ANR	1421446	RelationalExpression	extradata_size >= 4		1420860	0		>=			
ANR	1421447	Identifier	extradata_size		1420860	0					
ANR	1421448	PrimaryExpression	4		1420860	1					
ANR	1421449	ExpressionStatement	channel_mask |= q -> subpacket [ s ] . channel_mask = bytestream_get_be32 ( & edata_ptr )	195:16:4005:4083	1420860	1	True				
ANR	1421450	AssignmentExpression	channel_mask |= q -> subpacket [ s ] . channel_mask = bytestream_get_be32 ( & edata_ptr )		1420860	0		|=			
ANR	1421451	Identifier	channel_mask		1420860	0					
ANR	1421452	AssignmentExpression	q -> subpacket [ s ] . channel_mask = bytestream_get_be32 ( & edata_ptr )		1420860	1		=			
ANR	1421453	MemberAccess	q -> subpacket [ s ] . channel_mask		1420860	0					
ANR	1421454	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421455	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421456	Identifier	q		1420860	0					
ANR	1421457	Identifier	subpacket		1420860	1					
ANR	1421458	Identifier	s		1420860	1					
ANR	1421459	Identifier	channel_mask		1420860	1					
ANR	1421460	CallExpression	bytestream_get_be32 ( & edata_ptr )		1420860	1					
ANR	1421461	Callee	bytestream_get_be32		1420860	0					
ANR	1421462	Identifier	bytestream_get_be32		1420860	0					
ANR	1421463	ArgumentList	& edata_ptr		1420860	1					
ANR	1421464	Argument	& edata_ptr		1420860	0					
ANR	1421465	UnaryOperationExpression	& edata_ptr		1420860	0					
ANR	1421466	UnaryOperator	&		1420860	0					
ANR	1421467	Identifier	edata_ptr		1420860	1					
ANR	1421468	IfStatement	if ( av_get_channel_layout_nb_channels ( q -> subpacket [ s ] . channel_mask ) > 1 )		1420860	18					
ANR	1421469	Condition	av_get_channel_layout_nb_channels ( q -> subpacket [ s ] . channel_mask ) > 1	199:16:4104:4170	1420860	0	True				
ANR	1421470	RelationalExpression	av_get_channel_layout_nb_channels ( q -> subpacket [ s ] . channel_mask ) > 1		1420860	0		>			
ANR	1421471	CallExpression	av_get_channel_layout_nb_channels ( q -> subpacket [ s ] . channel_mask )		1420860	0					
ANR	1421472	Callee	av_get_channel_layout_nb_channels		1420860	0					
ANR	1421473	Identifier	av_get_channel_layout_nb_channels		1420860	0					
ANR	1421474	ArgumentList	q -> subpacket [ s ] . channel_mask		1420860	1					
ANR	1421475	Argument	q -> subpacket [ s ] . channel_mask		1420860	0					
ANR	1421476	MemberAccess	q -> subpacket [ s ] . channel_mask		1420860	0					
ANR	1421477	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421478	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421479	Identifier	q		1420860	0					
ANR	1421480	Identifier	subpacket		1420860	1					
ANR	1421481	Identifier	s		1420860	1					
ANR	1421482	Identifier	channel_mask		1420860	1					
ANR	1421483	PrimaryExpression	1		1420860	1					
ANR	1421484	CompoundStatement		197:85:4112:4112	1420860	1					
ANR	1421485	ExpressionStatement	q -> subpacket [ s ] . total_subbands = q -> subpacket [ s ] . subbands + q -> subpacket [ s ] . js_subband_start	201:16:4192:4334	1420860	0	True				
ANR	1421486	AssignmentExpression	q -> subpacket [ s ] . total_subbands = q -> subpacket [ s ] . subbands + q -> subpacket [ s ] . js_subband_start		1420860	0		=			
ANR	1421487	MemberAccess	q -> subpacket [ s ] . total_subbands		1420860	0					
ANR	1421488	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421489	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421490	Identifier	q		1420860	0					
ANR	1421491	Identifier	subpacket		1420860	1					
ANR	1421492	Identifier	s		1420860	1					
ANR	1421493	Identifier	total_subbands		1420860	1					
ANR	1421494	AdditiveExpression	q -> subpacket [ s ] . subbands + q -> subpacket [ s ] . js_subband_start		1420860	1		+			
ANR	1421495	MemberAccess	q -> subpacket [ s ] . subbands		1420860	0					
ANR	1421496	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421497	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421498	Identifier	q		1420860	0					
ANR	1421499	Identifier	subpacket		1420860	1					
ANR	1421500	Identifier	s		1420860	1					
ANR	1421501	Identifier	subbands		1420860	1					
ANR	1421502	MemberAccess	q -> subpacket [ s ] . js_subband_start		1420860	1					
ANR	1421503	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421504	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421505	Identifier	q		1420860	0					
ANR	1421506	Identifier	subpacket		1420860	1					
ANR	1421507	Identifier	s		1420860	1					
ANR	1421508	Identifier	js_subband_start		1420860	1					
ANR	1421509	ExpressionStatement	q -> subpacket [ s ] . joint_stereo = 1	205:16:4353:4385	1420860	1	True				
ANR	1421510	AssignmentExpression	q -> subpacket [ s ] . joint_stereo = 1		1420860	0		=			
ANR	1421511	MemberAccess	q -> subpacket [ s ] . joint_stereo		1420860	0					
ANR	1421512	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421513	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421514	Identifier	q		1420860	0					
ANR	1421515	Identifier	subpacket		1420860	1					
ANR	1421516	Identifier	s		1420860	1					
ANR	1421517	Identifier	joint_stereo		1420860	1					
ANR	1421518	PrimaryExpression	1		1420860	1					
ANR	1421519	ExpressionStatement	q -> subpacket [ s ] . num_channels = 2	207:16:4404:4436	1420860	2	True				
ANR	1421520	AssignmentExpression	q -> subpacket [ s ] . num_channels = 2		1420860	0		=			
ANR	1421521	MemberAccess	q -> subpacket [ s ] . num_channels		1420860	0					
ANR	1421522	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421523	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421524	Identifier	q		1420860	0					
ANR	1421525	Identifier	subpacket		1420860	1					
ANR	1421526	Identifier	s		1420860	1					
ANR	1421527	Identifier	num_channels		1420860	1					
ANR	1421528	PrimaryExpression	2		1420860	1					
ANR	1421529	ExpressionStatement	q -> subpacket [ s ] . samples_per_channel = samples_per_frame >> 1	209:16:4455:4515	1420860	3	True				
ANR	1421530	AssignmentExpression	q -> subpacket [ s ] . samples_per_channel = samples_per_frame >> 1		1420860	0		=			
ANR	1421531	MemberAccess	q -> subpacket [ s ] . samples_per_channel		1420860	0					
ANR	1421532	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421533	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421534	Identifier	q		1420860	0					
ANR	1421535	Identifier	subpacket		1420860	1					
ANR	1421536	Identifier	s		1420860	1					
ANR	1421537	Identifier	samples_per_channel		1420860	1					
ANR	1421538	ShiftExpression	samples_per_frame >> 1		1420860	1		>>			
ANR	1421539	Identifier	samples_per_frame		1420860	0					
ANR	1421540	PrimaryExpression	1		1420860	1					
ANR	1421541	IfStatement	if ( q -> subpacket [ s ] . samples_per_channel > 256 )		1420860	4					
ANR	1421542	Condition	q -> subpacket [ s ] . samples_per_channel > 256	213:20:4540:4580	1420860	0	True				
ANR	1421543	RelationalExpression	q -> subpacket [ s ] . samples_per_channel > 256		1420860	0		>			
ANR	1421544	MemberAccess	q -> subpacket [ s ] . samples_per_channel		1420860	0					
ANR	1421545	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421546	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421547	Identifier	q		1420860	0					
ANR	1421548	Identifier	subpacket		1420860	1					
ANR	1421549	Identifier	s		1420860	1					
ANR	1421550	Identifier	samples_per_channel		1420860	1					
ANR	1421551	PrimaryExpression	256		1420860	1					
ANR	1421552	CompoundStatement		211:63:4522:4522	1420860	1					
ANR	1421553	ExpressionStatement	q -> subpacket [ s ] . log2_numvector_size = 6	215:20:4606:4645	1420860	0	True				
ANR	1421554	AssignmentExpression	q -> subpacket [ s ] . log2_numvector_size = 6		1420860	0		=			
ANR	1421555	MemberAccess	q -> subpacket [ s ] . log2_numvector_size		1420860	0					
ANR	1421556	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421557	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421558	Identifier	q		1420860	0					
ANR	1421559	Identifier	subpacket		1420860	1					
ANR	1421560	Identifier	s		1420860	1					
ANR	1421561	Identifier	log2_numvector_size		1420860	1					
ANR	1421562	PrimaryExpression	6		1420860	1					
ANR	1421563	IfStatement	if ( q -> subpacket [ s ] . samples_per_channel > 512 )		1420860	5					
ANR	1421564	Condition	q -> subpacket [ s ] . samples_per_channel > 512	219:20:4687:4727	1420860	0	True				
ANR	1421565	RelationalExpression	q -> subpacket [ s ] . samples_per_channel > 512		1420860	0		>			
ANR	1421566	MemberAccess	q -> subpacket [ s ] . samples_per_channel		1420860	0					
ANR	1421567	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421568	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421569	Identifier	q		1420860	0					
ANR	1421570	Identifier	subpacket		1420860	1					
ANR	1421571	Identifier	s		1420860	1					
ANR	1421572	Identifier	samples_per_channel		1420860	1					
ANR	1421573	PrimaryExpression	512		1420860	1					
ANR	1421574	CompoundStatement		217:63:4669:4669	1420860	1					
ANR	1421575	ExpressionStatement	q -> subpacket [ s ] . log2_numvector_size = 7	221:20:4753:4792	1420860	0	True				
ANR	1421576	AssignmentExpression	q -> subpacket [ s ] . log2_numvector_size = 7		1420860	0		=			
ANR	1421577	MemberAccess	q -> subpacket [ s ] . log2_numvector_size		1420860	0					
ANR	1421578	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421579	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421580	Identifier	q		1420860	0					
ANR	1421581	Identifier	subpacket		1420860	1					
ANR	1421582	Identifier	s		1420860	1					
ANR	1421583	Identifier	log2_numvector_size		1420860	1					
ANR	1421584	PrimaryExpression	7		1420860	1					
ANR	1421585	ElseStatement	else		1420860	0					
ANR	1421586	ExpressionStatement	q -> subpacket [ s ] . samples_per_channel = samples_per_frame	227:16:4850:4905	1420860	0	True				
ANR	1421587	AssignmentExpression	q -> subpacket [ s ] . samples_per_channel = samples_per_frame		1420860	0		=			
ANR	1421588	MemberAccess	q -> subpacket [ s ] . samples_per_channel		1420860	0					
ANR	1421589	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421590	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421591	Identifier	q		1420860	0					
ANR	1421592	Identifier	subpacket		1420860	1					
ANR	1421593	Identifier	s		1420860	1					
ANR	1421594	Identifier	samples_per_channel		1420860	1					
ANR	1421595	Identifier	samples_per_frame		1420860	1					
ANR	1421596	BreakStatement	break ;	231:12:4922:4927	1420860	19	True				
ANR	1421597	Label	default :	233:8:4938:4945	1420860	20	True				
ANR	1421598	Identifier	default		1420860	0					
ANR	1421599	ExpressionStatement	"avpriv_request_sample ( avctx , ""Cook version %d"" , q -> subpacket [ s ] . cookversion )"	235:12:4960:5071	1420860	21	True				
ANR	1421600	CallExpression	"avpriv_request_sample ( avctx , ""Cook version %d"" , q -> subpacket [ s ] . cookversion )"		1420860	0					
ANR	1421601	Callee	avpriv_request_sample		1420860	0					
ANR	1421602	Identifier	avpriv_request_sample		1420860	0					
ANR	1421603	ArgumentList	avctx		1420860	1					
ANR	1421604	Argument	avctx		1420860	0					
ANR	1421605	Identifier	avctx		1420860	0					
ANR	1421606	Argument	"""Cook version %d"""		1420860	1					
ANR	1421607	PrimaryExpression	"""Cook version %d"""		1420860	0					
ANR	1421608	Argument	q -> subpacket [ s ] . cookversion		1420860	2					
ANR	1421609	MemberAccess	q -> subpacket [ s ] . cookversion		1420860	0					
ANR	1421610	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421611	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421612	Identifier	q		1420860	0					
ANR	1421613	Identifier	subpacket		1420860	1					
ANR	1421614	Identifier	s		1420860	1					
ANR	1421615	Identifier	cookversion		1420860	1					
ANR	1421616	ReturnStatement	return AVERROR_PATCHWELCOME ;	239:12:5086:5113	1420860	22	True				
ANR	1421617	Identifier	AVERROR_PATCHWELCOME		1420860	0					
ANR	1421618	IfStatement	if ( s > 1 && q -> subpacket [ s ] . samples_per_channel != q -> samples_per_channel )		1420860	10					
ANR	1421619	Condition	s > 1 && q -> subpacket [ s ] . samples_per_channel != q -> samples_per_channel	245:12:5141:5210	1420860	0	True				
ANR	1421620	AndExpression	s > 1 && q -> subpacket [ s ] . samples_per_channel != q -> samples_per_channel		1420860	0		&&			
ANR	1421621	RelationalExpression	s > 1		1420860	0		>			
ANR	1421622	Identifier	s		1420860	0					
ANR	1421623	PrimaryExpression	1		1420860	1					
ANR	1421624	EqualityExpression	q -> subpacket [ s ] . samples_per_channel != q -> samples_per_channel		1420860	1		!=			
ANR	1421625	MemberAccess	q -> subpacket [ s ] . samples_per_channel		1420860	0					
ANR	1421626	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421627	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421628	Identifier	q		1420860	0					
ANR	1421629	Identifier	subpacket		1420860	1					
ANR	1421630	Identifier	s		1420860	1					
ANR	1421631	Identifier	samples_per_channel		1420860	1					
ANR	1421632	PtrMemberAccess	q -> samples_per_channel		1420860	1					
ANR	1421633	Identifier	q		1420860	0					
ANR	1421634	Identifier	samples_per_channel		1420860	1					
ANR	1421635	CompoundStatement		243:84:5152:5152	1420860	1					
ANR	1421636	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""different number of samples per channel!\\n"" )"	247:12:5228:5301	1420860	0	True				
ANR	1421637	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""different number of samples per channel!\\n"" )"		1420860	0					
ANR	1421638	Callee	av_log		1420860	0					
ANR	1421639	Identifier	av_log		1420860	0					
ANR	1421640	ArgumentList	avctx		1420860	1					
ANR	1421641	Argument	avctx		1420860	0					
ANR	1421642	Identifier	avctx		1420860	0					
ANR	1421643	Argument	AV_LOG_ERROR		1420860	1					
ANR	1421644	Identifier	AV_LOG_ERROR		1420860	0					
ANR	1421645	Argument	"""different number of samples per channel!\\n"""		1420860	2					
ANR	1421646	PrimaryExpression	"""different number of samples per channel!\\n"""		1420860	0					
ANR	1421647	ReturnStatement	return AVERROR_INVALIDDATA ;	249:12:5316:5342	1420860	1	True				
ANR	1421648	Identifier	AVERROR_INVALIDDATA		1420860	0					
ANR	1421649	ElseStatement	else		1420860	0					
ANR	1421650	ExpressionStatement	q -> samples_per_channel = q -> subpacket [ 0 ] . samples_per_channel	253:12:5373:5433	1420860	0	True				
ANR	1421651	AssignmentExpression	q -> samples_per_channel = q -> subpacket [ 0 ] . samples_per_channel		1420860	0		=			
ANR	1421652	PtrMemberAccess	q -> samples_per_channel		1420860	0					
ANR	1421653	Identifier	q		1420860	0					
ANR	1421654	Identifier	samples_per_channel		1420860	1					
ANR	1421655	MemberAccess	q -> subpacket [ 0 ] . samples_per_channel		1420860	1					
ANR	1421656	ArrayIndexing	q -> subpacket [ 0 ]		1420860	0					
ANR	1421657	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421658	Identifier	q		1420860	0					
ANR	1421659	Identifier	subpacket		1420860	1					
ANR	1421660	PrimaryExpression	0		1420860	1					
ANR	1421661	Identifier	samples_per_channel		1420860	1					
ANR	1421662	ExpressionStatement	q -> subpacket [ s ] . numvector_size = ( 1 << q -> subpacket [ s ] . log2_numvector_size )	261:8:5493:5568	1420860	11	True				
ANR	1421663	AssignmentExpression	q -> subpacket [ s ] . numvector_size = ( 1 << q -> subpacket [ s ] . log2_numvector_size )		1420860	0		=			
ANR	1421664	MemberAccess	q -> subpacket [ s ] . numvector_size		1420860	0					
ANR	1421665	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421666	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421667	Identifier	q		1420860	0					
ANR	1421668	Identifier	subpacket		1420860	1					
ANR	1421669	Identifier	s		1420860	1					
ANR	1421670	Identifier	numvector_size		1420860	1					
ANR	1421671	ShiftExpression	1 << q -> subpacket [ s ] . log2_numvector_size		1420860	1		<<			
ANR	1421672	PrimaryExpression	1		1420860	0					
ANR	1421673	MemberAccess	q -> subpacket [ s ] . log2_numvector_size		1420860	1					
ANR	1421674	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421675	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421676	Identifier	q		1420860	0					
ANR	1421677	Identifier	subpacket		1420860	1					
ANR	1421678	Identifier	s		1420860	1					
ANR	1421679	Identifier	log2_numvector_size		1420860	1					
ANR	1421680	IfStatement	if ( q -> subpacket [ s ] . total_subbands > 53 )		1420860	12					
ANR	1421681	Condition	q -> subpacket [ s ] . total_subbands > 53	267:12:5678:5712	1420860	0	True				
ANR	1421682	RelationalExpression	q -> subpacket [ s ] . total_subbands > 53		1420860	0		>			
ANR	1421683	MemberAccess	q -> subpacket [ s ] . total_subbands		1420860	0					
ANR	1421684	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421685	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421686	Identifier	q		1420860	0					
ANR	1421687	Identifier	subpacket		1420860	1					
ANR	1421688	Identifier	s		1420860	1					
ANR	1421689	Identifier	total_subbands		1420860	1					
ANR	1421690	PrimaryExpression	53		1420860	1					
ANR	1421691	CompoundStatement		265:49:5654:5654	1420860	1					
ANR	1421692	ExpressionStatement	"avpriv_request_sample ( avctx , ""total_subbands > 53"" )"	269:12:5730:5781	1420860	0	True				
ANR	1421693	CallExpression	"avpriv_request_sample ( avctx , ""total_subbands > 53"" )"		1420860	0					
ANR	1421694	Callee	avpriv_request_sample		1420860	0					
ANR	1421695	Identifier	avpriv_request_sample		1420860	0					
ANR	1421696	ArgumentList	avctx		1420860	1					
ANR	1421697	Argument	avctx		1420860	0					
ANR	1421698	Identifier	avctx		1420860	0					
ANR	1421699	Argument	"""total_subbands > 53"""		1420860	1					
ANR	1421700	PrimaryExpression	"""total_subbands > 53"""		1420860	0					
ANR	1421701	ReturnStatement	return AVERROR_PATCHWELCOME ;	271:12:5796:5823	1420860	1	True				
ANR	1421702	Identifier	AVERROR_PATCHWELCOME		1420860	0					
ANR	1421703	IfStatement	if ( ( q -> subpacket [ s ] . js_vlc_bits > 6 ) || ( q -> subpacket [ s ] . js_vlc_bits < 2 * q -> subpacket [ s ] . joint_stereo ) )		1420860	13					
ANR	1421704	Condition	( q -> subpacket [ s ] . js_vlc_bits > 6 ) || ( q -> subpacket [ s ] . js_vlc_bits < 2 * q -> subpacket [ s ] . joint_stereo )	277:12:5851:5964	1420860	0	True				
ANR	1421705	OrExpression	( q -> subpacket [ s ] . js_vlc_bits > 6 ) || ( q -> subpacket [ s ] . js_vlc_bits < 2 * q -> subpacket [ s ] . joint_stereo )		1420860	0		||			
ANR	1421706	RelationalExpression	q -> subpacket [ s ] . js_vlc_bits > 6		1420860	0		>			
ANR	1421707	MemberAccess	q -> subpacket [ s ] . js_vlc_bits		1420860	0					
ANR	1421708	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421709	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421710	Identifier	q		1420860	0					
ANR	1421711	Identifier	subpacket		1420860	1					
ANR	1421712	Identifier	s		1420860	1					
ANR	1421713	Identifier	js_vlc_bits		1420860	1					
ANR	1421714	PrimaryExpression	6		1420860	1					
ANR	1421715	RelationalExpression	q -> subpacket [ s ] . js_vlc_bits < 2 * q -> subpacket [ s ] . joint_stereo		1420860	1		<			
ANR	1421716	MemberAccess	q -> subpacket [ s ] . js_vlc_bits		1420860	0					
ANR	1421717	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421718	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421719	Identifier	q		1420860	0					
ANR	1421720	Identifier	subpacket		1420860	1					
ANR	1421721	Identifier	s		1420860	1					
ANR	1421722	Identifier	js_vlc_bits		1420860	1					
ANR	1421723	MultiplicativeExpression	2 * q -> subpacket [ s ] . joint_stereo		1420860	1		*			
ANR	1421724	PrimaryExpression	2		1420860	0					
ANR	1421725	MemberAccess	q -> subpacket [ s ] . joint_stereo		1420860	1					
ANR	1421726	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421727	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421728	Identifier	q		1420860	0					
ANR	1421729	Identifier	subpacket		1420860	1					
ANR	1421730	Identifier	s		1420860	1					
ANR	1421731	Identifier	joint_stereo		1420860	1					
ANR	1421732	CompoundStatement		277:78:5906:5906	1420860	1					
ANR	1421733	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""js_vlc_bits = %d, only >= %d and <= 6 allowed!\\n"" , q -> subpacket [ s ] . js_vlc_bits , 2 * q -> subpacket [ s ] . joint_stereo )"	281:12:5982:6144	1420860	0	True				
ANR	1421734	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""js_vlc_bits = %d, only >= %d and <= 6 allowed!\\n"" , q -> subpacket [ s ] . js_vlc_bits , 2 * q -> subpacket [ s ] . joint_stereo )"		1420860	0					
ANR	1421735	Callee	av_log		1420860	0					
ANR	1421736	Identifier	av_log		1420860	0					
ANR	1421737	ArgumentList	avctx		1420860	1					
ANR	1421738	Argument	avctx		1420860	0					
ANR	1421739	Identifier	avctx		1420860	0					
ANR	1421740	Argument	AV_LOG_ERROR		1420860	1					
ANR	1421741	Identifier	AV_LOG_ERROR		1420860	0					
ANR	1421742	Argument	"""js_vlc_bits = %d, only >= %d and <= 6 allowed!\\n"""		1420860	2					
ANR	1421743	PrimaryExpression	"""js_vlc_bits = %d, only >= %d and <= 6 allowed!\\n"""		1420860	0					
ANR	1421744	Argument	q -> subpacket [ s ] . js_vlc_bits		1420860	3					
ANR	1421745	MemberAccess	q -> subpacket [ s ] . js_vlc_bits		1420860	0					
ANR	1421746	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421747	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421748	Identifier	q		1420860	0					
ANR	1421749	Identifier	subpacket		1420860	1					
ANR	1421750	Identifier	s		1420860	1					
ANR	1421751	Identifier	js_vlc_bits		1420860	1					
ANR	1421752	Argument	2 * q -> subpacket [ s ] . joint_stereo		1420860	4					
ANR	1421753	MultiplicativeExpression	2 * q -> subpacket [ s ] . joint_stereo		1420860	0		*			
ANR	1421754	PrimaryExpression	2		1420860	0					
ANR	1421755	MemberAccess	q -> subpacket [ s ] . joint_stereo		1420860	1					
ANR	1421756	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421757	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421758	Identifier	q		1420860	0					
ANR	1421759	Identifier	subpacket		1420860	1					
ANR	1421760	Identifier	s		1420860	1					
ANR	1421761	Identifier	joint_stereo		1420860	1					
ANR	1421762	ReturnStatement	return AVERROR_INVALIDDATA ;	285:12:6159:6185	1420860	1	True				
ANR	1421763	Identifier	AVERROR_INVALIDDATA		1420860	0					
ANR	1421764	IfStatement	if ( q -> subpacket [ s ] . subbands > 50 )		1420860	14					
ANR	1421765	Condition	q -> subpacket [ s ] . subbands > 50	291:12:6213:6241	1420860	0	True				
ANR	1421766	RelationalExpression	q -> subpacket [ s ] . subbands > 50		1420860	0		>			
ANR	1421767	MemberAccess	q -> subpacket [ s ] . subbands		1420860	0					
ANR	1421768	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421769	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421770	Identifier	q		1420860	0					
ANR	1421771	Identifier	subpacket		1420860	1					
ANR	1421772	Identifier	s		1420860	1					
ANR	1421773	Identifier	subbands		1420860	1					
ANR	1421774	PrimaryExpression	50		1420860	1					
ANR	1421775	CompoundStatement		289:43:6183:6183	1420860	1					
ANR	1421776	ExpressionStatement	"avpriv_request_sample ( avctx , ""subbands > 50"" )"	293:12:6259:6304	1420860	0	True				
ANR	1421777	CallExpression	"avpriv_request_sample ( avctx , ""subbands > 50"" )"		1420860	0					
ANR	1421778	Callee	avpriv_request_sample		1420860	0					
ANR	1421779	Identifier	avpriv_request_sample		1420860	0					
ANR	1421780	ArgumentList	avctx		1420860	1					
ANR	1421781	Argument	avctx		1420860	0					
ANR	1421782	Identifier	avctx		1420860	0					
ANR	1421783	Argument	"""subbands > 50"""		1420860	1					
ANR	1421784	PrimaryExpression	"""subbands > 50"""		1420860	0					
ANR	1421785	ReturnStatement	return AVERROR_PATCHWELCOME ;	295:12:6319:6346	1420860	1	True				
ANR	1421786	Identifier	AVERROR_PATCHWELCOME		1420860	0					
ANR	1421787	ExpressionStatement	q -> subpacket [ s ] . gains1 . now = q -> subpacket [ s ] . gain_1	299:8:6368:6424	1420860	15	True				
ANR	1421788	AssignmentExpression	q -> subpacket [ s ] . gains1 . now = q -> subpacket [ s ] . gain_1		1420860	0		=			
ANR	1421789	MemberAccess	q -> subpacket [ s ] . gains1 . now		1420860	0					
ANR	1421790	MemberAccess	q -> subpacket [ s ] . gains1		1420860	0					
ANR	1421791	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421792	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421793	Identifier	q		1420860	0					
ANR	1421794	Identifier	subpacket		1420860	1					
ANR	1421795	Identifier	s		1420860	1					
ANR	1421796	Identifier	gains1		1420860	1					
ANR	1421797	Identifier	now		1420860	1					
ANR	1421798	MemberAccess	q -> subpacket [ s ] . gain_1		1420860	1					
ANR	1421799	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421800	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421801	Identifier	q		1420860	0					
ANR	1421802	Identifier	subpacket		1420860	1					
ANR	1421803	Identifier	s		1420860	1					
ANR	1421804	Identifier	gain_1		1420860	1					
ANR	1421805	ExpressionStatement	q -> subpacket [ s ] . gains1 . previous = q -> subpacket [ s ] . gain_2	301:8:6435:6491	1420860	16	True				
ANR	1421806	AssignmentExpression	q -> subpacket [ s ] . gains1 . previous = q -> subpacket [ s ] . gain_2		1420860	0		=			
ANR	1421807	MemberAccess	q -> subpacket [ s ] . gains1 . previous		1420860	0					
ANR	1421808	MemberAccess	q -> subpacket [ s ] . gains1		1420860	0					
ANR	1421809	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421810	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421811	Identifier	q		1420860	0					
ANR	1421812	Identifier	subpacket		1420860	1					
ANR	1421813	Identifier	s		1420860	1					
ANR	1421814	Identifier	gains1		1420860	1					
ANR	1421815	Identifier	previous		1420860	1					
ANR	1421816	MemberAccess	q -> subpacket [ s ] . gain_2		1420860	1					
ANR	1421817	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421818	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421819	Identifier	q		1420860	0					
ANR	1421820	Identifier	subpacket		1420860	1					
ANR	1421821	Identifier	s		1420860	1					
ANR	1421822	Identifier	gain_2		1420860	1					
ANR	1421823	ExpressionStatement	q -> subpacket [ s ] . gains2 . now = q -> subpacket [ s ] . gain_3	303:8:6502:6558	1420860	17	True				
ANR	1421824	AssignmentExpression	q -> subpacket [ s ] . gains2 . now = q -> subpacket [ s ] . gain_3		1420860	0		=			
ANR	1421825	MemberAccess	q -> subpacket [ s ] . gains2 . now		1420860	0					
ANR	1421826	MemberAccess	q -> subpacket [ s ] . gains2		1420860	0					
ANR	1421827	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421828	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421829	Identifier	q		1420860	0					
ANR	1421830	Identifier	subpacket		1420860	1					
ANR	1421831	Identifier	s		1420860	1					
ANR	1421832	Identifier	gains2		1420860	1					
ANR	1421833	Identifier	now		1420860	1					
ANR	1421834	MemberAccess	q -> subpacket [ s ] . gain_3		1420860	1					
ANR	1421835	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421836	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421837	Identifier	q		1420860	0					
ANR	1421838	Identifier	subpacket		1420860	1					
ANR	1421839	Identifier	s		1420860	1					
ANR	1421840	Identifier	gain_3		1420860	1					
ANR	1421841	ExpressionStatement	q -> subpacket [ s ] . gains2 . previous = q -> subpacket [ s ] . gain_4	305:8:6569:6625	1420860	18	True				
ANR	1421842	AssignmentExpression	q -> subpacket [ s ] . gains2 . previous = q -> subpacket [ s ] . gain_4		1420860	0		=			
ANR	1421843	MemberAccess	q -> subpacket [ s ] . gains2 . previous		1420860	0					
ANR	1421844	MemberAccess	q -> subpacket [ s ] . gains2		1420860	0					
ANR	1421845	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421846	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421847	Identifier	q		1420860	0					
ANR	1421848	Identifier	subpacket		1420860	1					
ANR	1421849	Identifier	s		1420860	1					
ANR	1421850	Identifier	gains2		1420860	1					
ANR	1421851	Identifier	previous		1420860	1					
ANR	1421852	MemberAccess	q -> subpacket [ s ] . gain_4		1420860	1					
ANR	1421853	ArrayIndexing	q -> subpacket [ s ]		1420860	0					
ANR	1421854	PtrMemberAccess	q -> subpacket		1420860	0					
ANR	1421855	Identifier	q		1420860	0					
ANR	1421856	Identifier	subpacket		1420860	1					
ANR	1421857	Identifier	s		1420860	1					
ANR	1421858	Identifier	gain_4		1420860	1					
ANR	1421859	ExpressionStatement	q -> num_subpackets ++	309:8:6638:6657	1420860	19	True				
ANR	1421860	PostIncDecOperationExpression	q -> num_subpackets ++		1420860	0					
ANR	1421861	PtrMemberAccess	q -> num_subpackets		1420860	0					
ANR	1421862	Identifier	q		1420860	0					
ANR	1421863	Identifier	num_subpackets		1420860	1					
ANR	1421864	IncDec	++		1420860	1					
ANR	1421865	ExpressionStatement	s ++	311:8:6668:6671	1420860	20	True				
ANR	1421866	PostIncDecOperationExpression	s ++		1420860	0					
ANR	1421867	Identifier	s		1420860	0					
ANR	1421868	IncDec	++		1420860	1					
ANR	1421869	IfStatement	if ( s > MAX_SUBPACKETS )		1420860	21					
ANR	1421870	Condition	s > MAX_SUBPACKETS	313:12:6686:6703	1420860	0	True				
ANR	1421871	RelationalExpression	s > MAX_SUBPACKETS		1420860	0		>			
ANR	1421872	Identifier	s		1420860	0					
ANR	1421873	Identifier	MAX_SUBPACKETS		1420860	1					
ANR	1421874	CompoundStatement		311:32:6645:6645	1420860	1					
ANR	1421875	ExpressionStatement	"avpriv_request_sample ( avctx , ""subpackets > %d"" , MAX_SUBPACKETS )"	315:12:6721:6784	1420860	0	True				
ANR	1421876	CallExpression	"avpriv_request_sample ( avctx , ""subpackets > %d"" , MAX_SUBPACKETS )"		1420860	0					
ANR	1421877	Callee	avpriv_request_sample		1420860	0					
ANR	1421878	Identifier	avpriv_request_sample		1420860	0					
ANR	1421879	ArgumentList	avctx		1420860	1					
ANR	1421880	Argument	avctx		1420860	0					
ANR	1421881	Identifier	avctx		1420860	0					
ANR	1421882	Argument	"""subpackets > %d"""		1420860	1					
ANR	1421883	PrimaryExpression	"""subpackets > %d"""		1420860	0					
ANR	1421884	Argument	MAX_SUBPACKETS		1420860	2					
ANR	1421885	Identifier	MAX_SUBPACKETS		1420860	0					
ANR	1421886	ReturnStatement	return AVERROR_PATCHWELCOME ;	317:12:6799:6826	1420860	1	True				
ANR	1421887	Identifier	AVERROR_PATCHWELCOME		1420860	0					
ANR	1421888	ExpressionStatement	init_pow2table ( )	325:4:6878:6894	1420860	15	True				
ANR	1421889	CallExpression	init_pow2table ( )		1420860	0					
ANR	1421890	Callee	init_pow2table		1420860	0					
ANR	1421891	Identifier	init_pow2table		1420860	0					
ANR	1421892	ArgumentList			1420860	1					
ANR	1421893	ExpressionStatement	init_gain_table ( q )	327:4:6901:6919	1420860	16	True				
ANR	1421894	CallExpression	init_gain_table ( q )		1420860	0					
ANR	1421895	Callee	init_gain_table		1420860	0					
ANR	1421896	Identifier	init_gain_table		1420860	0					
ANR	1421897	ArgumentList	q		1420860	1					
ANR	1421898	Argument	q		1420860	0					
ANR	1421899	Identifier	q		1420860	0					
ANR	1421900	ExpressionStatement	init_cplscales_table ( q )	329:4:6926:6949	1420860	17	True				
ANR	1421901	CallExpression	init_cplscales_table ( q )		1420860	0					
ANR	1421902	Callee	init_cplscales_table		1420860	0					
ANR	1421903	Identifier	init_cplscales_table		1420860	0					
ANR	1421904	ArgumentList	q		1420860	1					
ANR	1421905	Argument	q		1420860	0					
ANR	1421906	Identifier	q		1420860	0					
ANR	1421907	IfStatement	if ( ( ret = init_cook_vlc_tables ( q ) ) )		1420860	18					
ANR	1421908	Condition	ret = init_cook_vlc_tables ( q )	333:8:6962:6992	1420860	0	True				
ANR	1421909	AssignmentExpression	ret = init_cook_vlc_tables ( q )		1420860	0		=			
ANR	1421910	Identifier	ret		1420860	0					
ANR	1421911	CallExpression	init_cook_vlc_tables ( q )		1420860	1					
ANR	1421912	Callee	init_cook_vlc_tables		1420860	0					
ANR	1421913	Identifier	init_cook_vlc_tables		1420860	0					
ANR	1421914	ArgumentList	q		1420860	1					
ANR	1421915	Argument	q		1420860	0					
ANR	1421916	Identifier	q		1420860	0					
ANR	1421917	ReturnStatement	return ret ;	335:8:7004:7014	1420860	1	True				
ANR	1421918	Identifier	ret		1420860	0					
ANR	1421919	IfStatement	if ( avctx -> block_align >= UINT_MAX / 2 )		1420860	19					
ANR	1421920	Condition	avctx -> block_align >= UINT_MAX / 2	341:8:7029:7062	1420860	0	True				
ANR	1421921	RelationalExpression	avctx -> block_align >= UINT_MAX / 2		1420860	0		>=			
ANR	1421922	PtrMemberAccess	avctx -> block_align		1420860	0					
ANR	1421923	Identifier	avctx		1420860	0					
ANR	1421924	Identifier	block_align		1420860	1					
ANR	1421925	MultiplicativeExpression	UINT_MAX / 2		1420860	1		/			
ANR	1421926	Identifier	UINT_MAX		1420860	0					
ANR	1421927	PrimaryExpression	2		1420860	1					
ANR	1421928	ReturnStatement	return AVERROR ( EINVAL ) ;	343:8:7074:7096	1420860	1	True				
ANR	1421929	CallExpression	AVERROR ( EINVAL )		1420860	0					
ANR	1421930	Callee	AVERROR		1420860	0					
ANR	1421931	Identifier	AVERROR		1420860	0					
ANR	1421932	ArgumentList	EINVAL		1420860	1					
ANR	1421933	Argument	EINVAL		1420860	0					
ANR	1421934	Identifier	EINVAL		1420860	0					
ANR	1421935	ExpressionStatement	q -> decoded_bytes_buffer = av_mallocz ( avctx -> block_align + DECODE_BYTES_PAD1 ( avctx -> block_align ) + AV_INPUT_BUFFER_PADDING_SIZE )	353:4:7271:7447	1420860	20	True				
ANR	1421936	AssignmentExpression	q -> decoded_bytes_buffer = av_mallocz ( avctx -> block_align + DECODE_BYTES_PAD1 ( avctx -> block_align ) + AV_INPUT_BUFFER_PADDING_SIZE )		1420860	0		=			
ANR	1421937	PtrMemberAccess	q -> decoded_bytes_buffer		1420860	0					
ANR	1421938	Identifier	q		1420860	0					
ANR	1421939	Identifier	decoded_bytes_buffer		1420860	1					
ANR	1421940	CallExpression	av_mallocz ( avctx -> block_align + DECODE_BYTES_PAD1 ( avctx -> block_align ) + AV_INPUT_BUFFER_PADDING_SIZE )		1420860	1					
ANR	1421941	Callee	av_mallocz		1420860	0					
ANR	1421942	Identifier	av_mallocz		1420860	0					
ANR	1421943	ArgumentList	avctx -> block_align + DECODE_BYTES_PAD1 ( avctx -> block_align ) + AV_INPUT_BUFFER_PADDING_SIZE		1420860	1					
ANR	1421944	Argument	avctx -> block_align + DECODE_BYTES_PAD1 ( avctx -> block_align ) + AV_INPUT_BUFFER_PADDING_SIZE		1420860	0					
ANR	1421945	AdditiveExpression	avctx -> block_align + DECODE_BYTES_PAD1 ( avctx -> block_align ) + AV_INPUT_BUFFER_PADDING_SIZE		1420860	0		+			
ANR	1421946	PtrMemberAccess	avctx -> block_align		1420860	0					
ANR	1421947	Identifier	avctx		1420860	0					
ANR	1421948	Identifier	block_align		1420860	1					
ANR	1421949	AdditiveExpression	DECODE_BYTES_PAD1 ( avctx -> block_align ) + AV_INPUT_BUFFER_PADDING_SIZE		1420860	1		+			
ANR	1421950	CallExpression	DECODE_BYTES_PAD1 ( avctx -> block_align )		1420860	0					
ANR	1421951	Callee	DECODE_BYTES_PAD1		1420860	0					
ANR	1421952	Identifier	DECODE_BYTES_PAD1		1420860	0					
ANR	1421953	ArgumentList	avctx -> block_align		1420860	1					
ANR	1421954	Argument	avctx -> block_align		1420860	0					
ANR	1421955	PtrMemberAccess	avctx -> block_align		1420860	0					
ANR	1421956	Identifier	avctx		1420860	0					
ANR	1421957	Identifier	block_align		1420860	1					
ANR	1421958	Identifier	AV_INPUT_BUFFER_PADDING_SIZE		1420860	1					
ANR	1421959	IfStatement	if ( ! q -> decoded_bytes_buffer )		1420860	21					
ANR	1421960	Condition	! q -> decoded_bytes_buffer	361:8:7458:7481	1420860	0	True				
ANR	1421961	UnaryOperationExpression	! q -> decoded_bytes_buffer		1420860	0					
ANR	1421962	UnaryOperator	!		1420860	0					
ANR	1421963	PtrMemberAccess	q -> decoded_bytes_buffer		1420860	1					
ANR	1421964	Identifier	q		1420860	0					
ANR	1421965	Identifier	decoded_bytes_buffer		1420860	1					
ANR	1421966	ReturnStatement	return AVERROR ( ENOMEM ) ;	363:8:7493:7515	1420860	1	True				
ANR	1421967	CallExpression	AVERROR ( ENOMEM )		1420860	0					
ANR	1421968	Callee	AVERROR		1420860	0					
ANR	1421969	Identifier	AVERROR		1420860	0					
ANR	1421970	ArgumentList	ENOMEM		1420860	1					
ANR	1421971	Argument	ENOMEM		1420860	0					
ANR	1421972	Identifier	ENOMEM		1420860	0					
ANR	1421973	IfStatement	if ( ( ret = init_cook_mlt ( q ) ) )		1420860	22					
ANR	1421974	Condition	ret = init_cook_mlt ( q )	369:8:7561:7584	1420860	0	True				
ANR	1421975	AssignmentExpression	ret = init_cook_mlt ( q )		1420860	0		=			
ANR	1421976	Identifier	ret		1420860	0					
ANR	1421977	CallExpression	init_cook_mlt ( q )		1420860	1					
ANR	1421978	Callee	init_cook_mlt		1420860	0					
ANR	1421979	Identifier	init_cook_mlt		1420860	0					
ANR	1421980	ArgumentList	q		1420860	1					
ANR	1421981	Argument	q		1420860	0					
ANR	1421982	Identifier	q		1420860	0					
ANR	1421983	ReturnStatement	return ret ;	371:8:7596:7606	1420860	1	True				
ANR	1421984	Identifier	ret		1420860	0					
ANR	1421985	IfStatement	if ( 1 )		1420860	23					
ANR	1421986	Condition	1	377:8:7673:7673	1420860	0	True				
ANR	1421987	PrimaryExpression	1		1420860	0					
ANR	1421988	CompoundStatement		375:11:7615:7615	1420860	1					
ANR	1421989	ExpressionStatement	q -> scalar_dequant = scalar_dequant_float	379:8:7687:7728	1420860	0	True				
ANR	1421990	AssignmentExpression	q -> scalar_dequant = scalar_dequant_float		1420860	0		=			
ANR	1421991	PtrMemberAccess	q -> scalar_dequant		1420860	0					
ANR	1421992	Identifier	q		1420860	0					
ANR	1421993	Identifier	scalar_dequant		1420860	1					
ANR	1421994	Identifier	scalar_dequant_float		1420860	1					
ANR	1421995	ExpressionStatement	q -> decouple = decouple_float	381:8:7739:7774	1420860	1	True				
ANR	1421996	AssignmentExpression	q -> decouple = decouple_float		1420860	0		=			
ANR	1421997	PtrMemberAccess	q -> decouple		1420860	0					
ANR	1421998	Identifier	q		1420860	0					
ANR	1421999	Identifier	decouple		1420860	1					
ANR	1422000	Identifier	decouple_float		1420860	1					
ANR	1422001	ExpressionStatement	q -> imlt_window = imlt_window_float	383:8:7785:7823	1420860	2	True				
ANR	1422002	AssignmentExpression	q -> imlt_window = imlt_window_float		1420860	0		=			
ANR	1422003	PtrMemberAccess	q -> imlt_window		1420860	0					
ANR	1422004	Identifier	q		1420860	0					
ANR	1422005	Identifier	imlt_window		1420860	1					
ANR	1422006	Identifier	imlt_window_float		1420860	1					
ANR	1422007	ExpressionStatement	q -> interpolate = interpolate_float	385:8:7834:7872	1420860	3	True				
ANR	1422008	AssignmentExpression	q -> interpolate = interpolate_float		1420860	0		=			
ANR	1422009	PtrMemberAccess	q -> interpolate		1420860	0					
ANR	1422010	Identifier	q		1420860	0					
ANR	1422011	Identifier	interpolate		1420860	1					
ANR	1422012	Identifier	interpolate_float		1420860	1					
ANR	1422013	ExpressionStatement	q -> saturate_output = saturate_output_float	387:8:7883:7925	1420860	4	True				
ANR	1422014	AssignmentExpression	q -> saturate_output = saturate_output_float		1420860	0		=			
ANR	1422015	PtrMemberAccess	q -> saturate_output		1420860	0					
ANR	1422016	Identifier	q		1420860	0					
ANR	1422017	Identifier	saturate_output		1420860	1					
ANR	1422018	Identifier	saturate_output_float		1420860	1					
ANR	1422019	IfStatement	if ( q -> samples_per_channel != 256 && q -> samples_per_channel != 512 && q -> samples_per_channel != 1024 )		1420860	24					
ANR	1422020	Condition	q -> samples_per_channel != 256 && q -> samples_per_channel != 512 && q -> samples_per_channel != 1024	395:8:8034:8138	1420860	0	True				
ANR	1422021	AndExpression	q -> samples_per_channel != 256 && q -> samples_per_channel != 512 && q -> samples_per_channel != 1024		1420860	0		&&			
ANR	1422022	EqualityExpression	q -> samples_per_channel != 256		1420860	0		!=			
ANR	1422023	PtrMemberAccess	q -> samples_per_channel		1420860	0					
ANR	1422024	Identifier	q		1420860	0					
ANR	1422025	Identifier	samples_per_channel		1420860	1					
ANR	1422026	PrimaryExpression	256		1420860	1					
ANR	1422027	AndExpression	q -> samples_per_channel != 512 && q -> samples_per_channel != 1024		1420860	1		&&			
ANR	1422028	EqualityExpression	q -> samples_per_channel != 512		1420860	0		!=			
ANR	1422029	PtrMemberAccess	q -> samples_per_channel		1420860	0					
ANR	1422030	Identifier	q		1420860	0					
ANR	1422031	Identifier	samples_per_channel		1420860	1					
ANR	1422032	PrimaryExpression	512		1420860	1					
ANR	1422033	EqualityExpression	q -> samples_per_channel != 1024		1420860	1		!=			
ANR	1422034	PtrMemberAccess	q -> samples_per_channel		1420860	0					
ANR	1422035	Identifier	q		1420860	0					
ANR	1422036	Identifier	samples_per_channel		1420860	1					
ANR	1422037	PrimaryExpression	1024		1420860	1					
ANR	1422038	CompoundStatement		395:40:8080:8080	1420860	1					
ANR	1422039	ExpressionStatement	"avpriv_request_sample ( avctx , ""samples_per_channel = %d"" , q -> samples_per_channel )"	399:8:8152:8263	1420860	0	True				
ANR	1422040	CallExpression	"avpriv_request_sample ( avctx , ""samples_per_channel = %d"" , q -> samples_per_channel )"		1420860	0					
ANR	1422041	Callee	avpriv_request_sample		1420860	0					
ANR	1422042	Identifier	avpriv_request_sample		1420860	0					
ANR	1422043	ArgumentList	avctx		1420860	1					
ANR	1422044	Argument	avctx		1420860	0					
ANR	1422045	Identifier	avctx		1420860	0					
ANR	1422046	Argument	"""samples_per_channel = %d"""		1420860	1					
ANR	1422047	PrimaryExpression	"""samples_per_channel = %d"""		1420860	0					
ANR	1422048	Argument	q -> samples_per_channel		1420860	2					
ANR	1422049	PtrMemberAccess	q -> samples_per_channel		1420860	0					
ANR	1422050	Identifier	q		1420860	0					
ANR	1422051	Identifier	samples_per_channel		1420860	1					
ANR	1422052	ReturnStatement	return AVERROR_PATCHWELCOME ;	403:8:8274:8301	1420860	1	True				
ANR	1422053	Identifier	AVERROR_PATCHWELCOME		1420860	0					
ANR	1422054	ExpressionStatement	avctx -> sample_fmt = AV_SAMPLE_FMT_FLTP	409:4:8317:8355	1420860	25	True				
ANR	1422055	AssignmentExpression	avctx -> sample_fmt = AV_SAMPLE_FMT_FLTP		1420860	0		=			
ANR	1422056	PtrMemberAccess	avctx -> sample_fmt		1420860	0					
ANR	1422057	Identifier	avctx		1420860	0					
ANR	1422058	Identifier	sample_fmt		1420860	1					
ANR	1422059	Identifier	AV_SAMPLE_FMT_FLTP		1420860	1					
ANR	1422060	IfStatement	if ( channel_mask )		1420860	26					
ANR	1422061	Condition	channel_mask	411:8:8366:8377	1420860	0	True				
ANR	1422062	Identifier	channel_mask		1420860	0					
ANR	1422063	ExpressionStatement	avctx -> channel_layout = channel_mask	413:8:8389:8425	1420860	1	True				
ANR	1422064	AssignmentExpression	avctx -> channel_layout = channel_mask		1420860	0		=			
ANR	1422065	PtrMemberAccess	avctx -> channel_layout		1420860	0					
ANR	1422066	Identifier	avctx		1420860	0					
ANR	1422067	Identifier	channel_layout		1420860	1					
ANR	1422068	Identifier	channel_mask		1420860	1					
ANR	1422069	ElseStatement	else		1420860	0					
ANR	1422070	ExpressionStatement	avctx -> channel_layout = ( avctx -> channels == 2 ) ? AV_CH_LAYOUT_STEREO : AV_CH_LAYOUT_MONO	417:8:8446:8534	1420860	0	True				
ANR	1422071	AssignmentExpression	avctx -> channel_layout = ( avctx -> channels == 2 ) ? AV_CH_LAYOUT_STEREO : AV_CH_LAYOUT_MONO		1420860	0		=			
ANR	1422072	PtrMemberAccess	avctx -> channel_layout		1420860	0					
ANR	1422073	Identifier	avctx		1420860	0					
ANR	1422074	Identifier	channel_layout		1420860	1					
ANR	1422075	ConditionalExpression	( avctx -> channels == 2 ) ? AV_CH_LAYOUT_STEREO : AV_CH_LAYOUT_MONO		1420860	1					
ANR	1422076	Condition	avctx -> channels == 2		1420860	0					
ANR	1422077	EqualityExpression	avctx -> channels == 2		1420860	0		==			
ANR	1422078	PtrMemberAccess	avctx -> channels		1420860	0					
ANR	1422079	Identifier	avctx		1420860	0					
ANR	1422080	Identifier	channels		1420860	1					
ANR	1422081	PrimaryExpression	2		1420860	1					
ANR	1422082	Identifier	AV_CH_LAYOUT_STEREO		1420860	1					
ANR	1422083	Identifier	AV_CH_LAYOUT_MONO		1420860	2					
ANR	1422084	ExpressionStatement	dump_cook_context ( q )	423:4:8557:8577	1420860	27	True				
ANR	1422085	CallExpression	dump_cook_context ( q )		1420860	0					
ANR	1422086	Callee	dump_cook_context		1420860	0					
ANR	1422087	Identifier	dump_cook_context		1420860	0					
ANR	1422088	ArgumentList	q		1420860	1					
ANR	1422089	Argument	q		1420860	0					
ANR	1422090	Identifier	q		1420860	0					
ANR	1422091	ReturnStatement	return 0 ;	427:4:8592:8600	1420860	28	True				
ANR	1422092	PrimaryExpression	0		1420860	0					
ANR	1422093	ReturnType	static av_cold int		1420860	1					
ANR	1422094	Identifier	cook_decode_init		1420860	2					
ANR	1422095	ParameterList	AVCodecContext * avctx		1420860	3					
ANR	1422096	Parameter	AVCodecContext * avctx	1:36:36:56	1420860	0	True				
ANR	1422097	ParameterType	AVCodecContext *		1420860	0					
ANR	1422098	Identifier	avctx		1420860	1					
ANR	1422099	CFGEntryNode	ENTRY		1420860		True				
ANR	1422100	CFGExitNode	EXIT		1420860		True				
ANR	1422101	Symbol	ENOMEM		1420860						
ANR	1422102	Symbol	bytestream_get_be16		1420860						
ANR	1422103	Symbol	AV_CH_LAYOUT_STEREO		1420860						
ANR	1422104	Symbol	AV_SAMPLE_FMT_FLTP		1420860						
ANR	1422105	Symbol	extradata_size		1420860						
ANR	1422106	Symbol	samples_per_frame		1420860						
ANR	1422107	Symbol	q -> avctx		1420860						
ANR	1422108	Symbol	AV_INPUT_BUFFER_PADDING_SIZE		1420860						
ANR	1422109	Symbol	DECODE_BYTES_PAD1		1420860						
ANR	1422110	Symbol	& edata_ptr		1420860						
ANR	1422111	Symbol	channel_mask		1420860						
ANR	1422112	Symbol	UINT_MAX		1420860						
ANR	1422113	Symbol	avctx -> channels		1420860						
ANR	1422114	Symbol	q -> subpacket [ s ] . gains2 . previous		1420860						
ANR	1422115	Symbol	AV_CH_LAYOUT_MONO		1420860						
ANR	1422116	Symbol	& q -> adsp		1420860						
ANR	1422117	Symbol	edata_ptr		1420860						
ANR	1422118	Symbol	AV_LOG_DEBUG		1420860						
ANR	1422119	Symbol	ret		1420860						
ANR	1422120	Symbol	avctx -> sample_fmt		1420860						
ANR	1422121	Symbol	av_mallocz		1420860						
ANR	1422122	Symbol	q -> subpacket [ s ] . js_vlc_bits		1420860						
ANR	1422123	Symbol	scalar_dequant_float		1420860						
ANR	1422124	Symbol	interpolate_float		1420860						
ANR	1422125	Symbol	av_get_channel_layout_nb_channels		1420860						
ANR	1422126	Symbol	q -> imlt_window		1420860						
ANR	1422127	Symbol	* avctx		1420860						
ANR	1422128	Symbol	init_cook_vlc_tables		1420860						
ANR	1422129	Symbol	MAX_SUBPACKETS		1420860						
ANR	1422130	Symbol	imlt_window_float		1420860						
ANR	1422131	Symbol	q -> subpacket [ s ] . gains2 . now		1420860						
ANR	1422132	Symbol	q -> decoded_bytes_buffer		1420860						
ANR	1422133	Symbol	& q -> random_state		1420860						
ANR	1422134	Symbol	* q -> subpacket		1420860						
ANR	1422135	Symbol	q -> decouple		1420860						
ANR	1422136	Symbol	q -> interpolate		1420860						
ANR	1422137	Symbol	q -> subpacket [ s ] . cookversion		1420860						
ANR	1422138	Symbol	q -> subpacket [ s ] . log2_numvector_size		1420860						
ANR	1422139	Symbol	q -> subpacket [ s ] . gains1 . previous		1420860						
ANR	1422140	Symbol	q -> subpacket [ s ] . total_subbands		1420860						
ANR	1422141	Symbol	q -> subpacket [ s ] . numvector_size		1420860						
ANR	1422142	Symbol	q -> subpacket [ s ] . bits_per_subpacket		1420860						
ANR	1422143	Symbol	bytestream_get_be32		1420860						
ANR	1422144	Symbol	q -> subpacket [ s ] . gains1 . now		1420860						
ANR	1422145	Symbol	avctx -> block_align		1420860						
ANR	1422146	Symbol	q -> subpacket [ s ] . gain_2		1420860						
ANR	1422147	Symbol	q -> scalar_dequant		1420860						
ANR	1422148	Symbol	q -> subpacket [ s ] . gain_1		1420860						
ANR	1422149	Symbol	q -> subpacket [ s ] . gain_4		1420860						
ANR	1422150	Symbol	q -> subpacket [ s ] . gain_3		1420860						
ANR	1422151	Symbol	q -> subpacket [ s ] . bits_per_subpdiv		1420860						
ANR	1422152	Symbol	AVERROR_PATCHWELCOME		1420860						
ANR	1422153	Symbol	* * q		1420860						
ANR	1422154	Symbol	avctx		1420860						
ANR	1422155	Symbol	q -> subpacket [ s ] . samples_per_channel		1420860						
ANR	1422156	Symbol	q -> samples_per_channel		1420860						
ANR	1422157	Symbol	q -> saturate_output		1420860						
ANR	1422158	Symbol	avctx -> extradata		1420860						
ANR	1422159	Symbol	q -> subpacket [ s ] . subbands		1420860						
ANR	1422160	Symbol	init_cook_mlt		1420860						
ANR	1422161	Symbol	saturate_output_float		1420860						
ANR	1422162	Symbol	q -> subpacket [ s ] . js_subband_start		1420860						
ANR	1422163	Symbol	q -> subpacket [ s ] . channel_mask		1420860						
ANR	1422164	Symbol	AV_LOG_ERROR		1420860						
ANR	1422165	Symbol	q -> subpacket [ 0 ] . samples_per_channel		1420860						
ANR	1422166	Symbol	avctx -> extradata_size		1420860						
ANR	1422167	Symbol	q -> subpacket		1420860						
ANR	1422168	Symbol	q -> subpacket [ s ] . joint_stereo		1420860						
ANR	1422169	Symbol	avctx -> channel_layout		1420860						
ANR	1422170	Symbol	avctx -> priv_data		1420860						
ANR	1422171	Symbol	decouple_float		1420860						
ANR	1422172	Symbol	q -> subpacket [ s ] . num_channels		1420860						
ANR	1422173	Symbol	EINVAL		1420860						
ANR	1422174	Symbol	q		1420860						
ANR	1422175	Symbol	s		1420860						
ANR	1422176	Symbol	edata_ptr_end		1420860						
ANR	1422177	Symbol	q -> subpacket [ s ] . gains2		1420860						
ANR	1422178	Symbol	q -> subpacket [ s ] . gains1		1420860						
ANR	1422179	Symbol	AVERROR_INVALIDDATA		1420860						
ANR	1422180	Symbol	* q		1420860						
ANR	1422181	Symbol	AVERROR		1420860						
ANR	1422182	Symbol	* s		1420860						
ANR	1422183	Symbol	q -> num_subpackets		1420860						
