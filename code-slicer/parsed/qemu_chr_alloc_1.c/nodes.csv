command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6947693	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_chr_alloc_1.c								
ANR	6947694	Function	qemu_chr_alloc	1:0:0:823							
ANR	6947695	FunctionDef	"qemu_chr_alloc (ChardevCommon * backend , Error * * errp)"		6947694	0					
ANR	6947696	CompoundStatement		3:0:71:823	6947694	0					
ANR	6947697	IdentifierDeclStatement	CharDriverState * chr = g_malloc0 ( sizeof ( CharDriverState ) ) ;	5:4:78:135	6947694	0	True				
ANR	6947698	IdentifierDecl	* chr = g_malloc0 ( sizeof ( CharDriverState ) )		6947694	0					
ANR	6947699	IdentifierDeclType	CharDriverState *		6947694	0					
ANR	6947700	Identifier	chr		6947694	1					
ANR	6947701	AssignmentExpression	* chr = g_malloc0 ( sizeof ( CharDriverState ) )		6947694	2		=			
ANR	6947702	Identifier	chr		6947694	0					
ANR	6947703	CallExpression	g_malloc0 ( sizeof ( CharDriverState ) )		6947694	1					
ANR	6947704	Callee	g_malloc0		6947694	0					
ANR	6947705	Identifier	g_malloc0		6947694	0					
ANR	6947706	ArgumentList	sizeof ( CharDriverState )		6947694	1					
ANR	6947707	Argument	sizeof ( CharDriverState )		6947694	0					
ANR	6947708	SizeofExpression	sizeof ( CharDriverState )		6947694	0					
ANR	6947709	Sizeof	sizeof		6947694	0					
ANR	6947710	SizeofOperand	CharDriverState		6947694	1					
ANR	6947711	ExpressionStatement	qemu_mutex_init ( & chr -> chr_write_lock )	7:4:142:179	6947694	1	True				
ANR	6947712	CallExpression	qemu_mutex_init ( & chr -> chr_write_lock )		6947694	0					
ANR	6947713	Callee	qemu_mutex_init		6947694	0					
ANR	6947714	Identifier	qemu_mutex_init		6947694	0					
ANR	6947715	ArgumentList	& chr -> chr_write_lock		6947694	1					
ANR	6947716	Argument	& chr -> chr_write_lock		6947694	0					
ANR	6947717	UnaryOperationExpression	& chr -> chr_write_lock		6947694	0					
ANR	6947718	UnaryOperator	&		6947694	0					
ANR	6947719	PtrMemberAccess	chr -> chr_write_lock		6947694	1					
ANR	6947720	Identifier	chr		6947694	0					
ANR	6947721	Identifier	chr_write_lock		6947694	1					
ANR	6947722	ExpressionStatement	chr -> mux_idx = - 1	11:4:188:205	6947694	2	True				
ANR	6947723	AssignmentExpression	chr -> mux_idx = - 1		6947694	0		=			
ANR	6947724	PtrMemberAccess	chr -> mux_idx		6947694	0					
ANR	6947725	Identifier	chr		6947694	0					
ANR	6947726	Identifier	mux_idx		6947694	1					
ANR	6947727	UnaryOperationExpression	- 1		6947694	1					
ANR	6947728	UnaryOperator	-		6947694	0					
ANR	6947729	PrimaryExpression	1		6947694	1					
ANR	6947730	IfStatement	if ( backend -> has_logfile )		6947694	3					
ANR	6947731	Condition	backend -> has_logfile	13:8:216:235	6947694	0	True				
ANR	6947732	PtrMemberAccess	backend -> has_logfile		6947694	0					
ANR	6947733	Identifier	backend		6947694	0					
ANR	6947734	Identifier	has_logfile		6947694	1					
ANR	6947735	CompoundStatement		13:8:177:207	6947694	1					
ANR	6947736	IdentifierDeclStatement	int flags = O_WRONLY | O_CREAT ;	15:8:249:279	6947694	0	True				
ANR	6947737	IdentifierDecl	flags = O_WRONLY | O_CREAT		6947694	0					
ANR	6947738	IdentifierDeclType	int		6947694	0					
ANR	6947739	Identifier	flags		6947694	1					
ANR	6947740	AssignmentExpression	flags = O_WRONLY | O_CREAT		6947694	2		=			
ANR	6947741	Identifier	flags		6947694	0					
ANR	6947742	InclusiveOrExpression	O_WRONLY | O_CREAT		6947694	1		|			
ANR	6947743	Identifier	O_WRONLY		6947694	0					
ANR	6947744	Identifier	O_CREAT		6947694	1					
ANR	6947745	IfStatement	if ( backend -> has_logappend && backend -> logappend )		6947694	1					
ANR	6947746	Condition	backend -> has_logappend && backend -> logappend	17:12:294:350	6947694	0	True				
ANR	6947747	AndExpression	backend -> has_logappend && backend -> logappend		6947694	0		&&			
ANR	6947748	PtrMemberAccess	backend -> has_logappend		6947694	0					
ANR	6947749	Identifier	backend		6947694	0					
ANR	6947750	Identifier	has_logappend		6947694	1					
ANR	6947751	PtrMemberAccess	backend -> logappend		6947694	1					
ANR	6947752	Identifier	backend		6947694	0					
ANR	6947753	Identifier	logappend		6947694	1					
ANR	6947754	CompoundStatement		17:32:281:281	6947694	1					
ANR	6947755	ExpressionStatement	flags |= O_APPEND	21:12:368:385	6947694	0	True				
ANR	6947756	AssignmentExpression	flags |= O_APPEND		6947694	0		|=			
ANR	6947757	Identifier	flags		6947694	0					
ANR	6947758	Identifier	O_APPEND		6947694	1					
ANR	6947759	ElseStatement	else		6947694	0					
ANR	6947760	CompoundStatement		21:15:331:331	6947694	0					
ANR	6947761	ExpressionStatement	flags |= O_TRUNC	25:12:418:434	6947694	0	True				
ANR	6947762	AssignmentExpression	flags |= O_TRUNC		6947694	0		|=			
ANR	6947763	Identifier	flags		6947694	0					
ANR	6947764	Identifier	O_TRUNC		6947694	1					
ANR	6947765	ExpressionStatement	"chr -> logfd = qemu_open ( backend -> logfile , flags , 0666 )"	29:8:456:509	6947694	2	True				
ANR	6947766	AssignmentExpression	"chr -> logfd = qemu_open ( backend -> logfile , flags , 0666 )"		6947694	0		=			
ANR	6947767	PtrMemberAccess	chr -> logfd		6947694	0					
ANR	6947768	Identifier	chr		6947694	0					
ANR	6947769	Identifier	logfd		6947694	1					
ANR	6947770	CallExpression	"qemu_open ( backend -> logfile , flags , 0666 )"		6947694	1					
ANR	6947771	Callee	qemu_open		6947694	0					
ANR	6947772	Identifier	qemu_open		6947694	0					
ANR	6947773	ArgumentList	backend -> logfile		6947694	1					
ANR	6947774	Argument	backend -> logfile		6947694	0					
ANR	6947775	PtrMemberAccess	backend -> logfile		6947694	0					
ANR	6947776	Identifier	backend		6947694	0					
ANR	6947777	Identifier	logfile		6947694	1					
ANR	6947778	Argument	flags		6947694	1					
ANR	6947779	Identifier	flags		6947694	0					
ANR	6947780	Argument	0666		6947694	2					
ANR	6947781	PrimaryExpression	0666		6947694	0					
ANR	6947782	IfStatement	if ( chr -> logfd < 0 )		6947694	3					
ANR	6947783	Condition	chr -> logfd < 0	31:12:524:537	6947694	0	True				
ANR	6947784	RelationalExpression	chr -> logfd < 0		6947694	0		<			
ANR	6947785	PtrMemberAccess	chr -> logfd		6947694	0					
ANR	6947786	Identifier	chr		6947694	0					
ANR	6947787	Identifier	logfd		6947694	1					
ANR	6947788	PrimaryExpression	0		6947694	1					
ANR	6947789	CompoundStatement		29:28:468:468	6947694	1					
ANR	6947790	ExpressionStatement	"error_setg_errno ( errp , errno , ""Unable to open logfile %s"" , backend -> logfile )"	33:12:555:691	6947694	0	True				
ANR	6947791	CallExpression	"error_setg_errno ( errp , errno , ""Unable to open logfile %s"" , backend -> logfile )"		6947694	0					
ANR	6947792	Callee	error_setg_errno		6947694	0					
ANR	6947793	Identifier	error_setg_errno		6947694	0					
ANR	6947794	ArgumentList	errp		6947694	1					
ANR	6947795	Argument	errp		6947694	0					
ANR	6947796	Identifier	errp		6947694	0					
ANR	6947797	Argument	errno		6947694	1					
ANR	6947798	Identifier	errno		6947694	0					
ANR	6947799	Argument	"""Unable to open logfile %s"""		6947694	2					
ANR	6947800	PrimaryExpression	"""Unable to open logfile %s"""		6947694	0					
ANR	6947801	Argument	backend -> logfile		6947694	3					
ANR	6947802	PtrMemberAccess	backend -> logfile		6947694	0					
ANR	6947803	Identifier	backend		6947694	0					
ANR	6947804	Identifier	logfile		6947694	1					
ANR	6947805	ExpressionStatement	g_free ( chr )	39:12:706:717	6947694	1	True				
ANR	6947806	CallExpression	g_free ( chr )		6947694	0					
ANR	6947807	Callee	g_free		6947694	0					
ANR	6947808	Identifier	g_free		6947694	0					
ANR	6947809	ArgumentList	chr		6947694	1					
ANR	6947810	Argument	chr		6947694	0					
ANR	6947811	Identifier	chr		6947694	0					
ANR	6947812	ReturnStatement	return NULL ;	41:12:732:743	6947694	2	True				
ANR	6947813	Identifier	NULL		6947694	0					
ANR	6947814	ElseStatement	else		6947694	0					
ANR	6947815	CompoundStatement		43:11:696:696	6947694	0					
ANR	6947816	ExpressionStatement	chr -> logfd = - 1	47:8:779:794	6947694	0	True				
ANR	6947817	AssignmentExpression	chr -> logfd = - 1		6947694	0		=			
ANR	6947818	PtrMemberAccess	chr -> logfd		6947694	0					
ANR	6947819	Identifier	chr		6947694	0					
ANR	6947820	Identifier	logfd		6947694	1					
ANR	6947821	UnaryOperationExpression	- 1		6947694	1					
ANR	6947822	UnaryOperator	-		6947694	0					
ANR	6947823	PrimaryExpression	1		6947694	1					
ANR	6947824	ReturnStatement	return chr ;	53:4:810:820	6947694	4	True				
ANR	6947825	Identifier	chr		6947694	0					
ANR	6947826	ReturnType	CharDriverState *		6947694	1					
ANR	6947827	Identifier	qemu_chr_alloc		6947694	2					
ANR	6947828	ParameterList	"ChardevCommon * backend , Error * * errp"		6947694	3					
ANR	6947829	Parameter	ChardevCommon * backend	1:32:32:53	6947694	0	True				
ANR	6947830	ParameterType	ChardevCommon *		6947694	0					
ANR	6947831	Identifier	backend		6947694	1					
ANR	6947832	Parameter	Error * * errp	1:56:56:67	6947694	1	True				
ANR	6947833	ParameterType	Error * *		6947694	0					
ANR	6947834	Identifier	errp		6947694	1					
ANR	6947835	CFGEntryNode	ENTRY		6947694		True				
ANR	6947836	CFGExitNode	EXIT		6947694		True				
ANR	6947837	Symbol	& chr -> chr_write_lock		6947694						
ANR	6947838	Symbol	errno		6947694						
ANR	6947839	Symbol	backend -> logappend		6947694						
ANR	6947840	Symbol	NULL		6947694						
ANR	6947841	Symbol	errp		6947694						
ANR	6947842	Symbol	qemu_open		6947694						
ANR	6947843	Symbol	O_CREAT		6947694						
ANR	6947844	Symbol	* chr		6947694						
ANR	6947845	Symbol	flags		6947694						
ANR	6947846	Symbol	chr		6947694						
ANR	6947847	Symbol	O_APPEND		6947694						
ANR	6947848	Symbol	chr -> logfd		6947694						
ANR	6947849	Symbol	O_TRUNC		6947694						
ANR	6947850	Symbol	* backend		6947694						
ANR	6947851	Symbol	backend -> has_logappend		6947694						
ANR	6947852	Symbol	backend		6947694						
ANR	6947853	Symbol	g_malloc0		6947694						
ANR	6947854	Symbol	chr -> mux_idx		6947694						
ANR	6947855	Symbol	backend -> has_logfile		6947694						
ANR	6947856	Symbol	O_WRONLY		6947694						
ANR	6947857	Symbol	backend -> logfile		6947694						
