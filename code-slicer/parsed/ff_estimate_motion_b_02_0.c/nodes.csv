command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3263683	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_estimate_motion_b_02_0.c								
ANR	3263684	Function	ff_estimate_motion_b	1:0:0:3381							
ANR	3263685	FunctionDef	"ff_estimate_motion_b (MpegEncContext * s , int mb_x , int mb_y , int16_t ( * mv_table ) [ 2 ] , int ref_index , int f_code)"		3263684	0					
ANR	3263686	CompoundStatement		5:0:148:3381	3263684	0					
ANR	3263687	Statement	MotionEstContext	7:4:155:170	3263684	0	True				
ANR	3263688	Statement	*	7:21:172:172	3263684	1	True				
ANR	3263689	Statement	const	7:23:174:178	3263684	2	True				
ANR	3263690	ExpressionStatement	c = & s -> me	7:29:180:189	3263684	3	True				
ANR	3263691	AssignmentExpression	c = & s -> me		3263684	0		=			
ANR	3263692	Identifier	c		3263684	0					
ANR	3263693	UnaryOperationExpression	& s -> me		3263684	1					
ANR	3263694	UnaryOperator	&		3263684	0					
ANR	3263695	PtrMemberAccess	s -> me		3263684	1					
ANR	3263696	Identifier	s		3263684	0					
ANR	3263697	Identifier	me		3263684	1					
ANR	3263698	IdentifierDeclStatement	"int mx , my , dmin ;"	9:4:196:212	3263684	4	True				
ANR	3263699	IdentifierDecl	mx		3263684	0					
ANR	3263700	IdentifierDeclType	int		3263684	0					
ANR	3263701	Identifier	mx		3263684	1					
ANR	3263702	IdentifierDecl	my		3263684	1					
ANR	3263703	IdentifierDeclType	int		3263684	0					
ANR	3263704	Identifier	my		3263684	1					
ANR	3263705	IdentifierDecl	dmin		3263684	2					
ANR	3263706	IdentifierDeclType	int		3263684	0					
ANR	3263707	Identifier	dmin		3263684	1					
ANR	3263708	Statement	int	11:4:219:221	3263684	5	True				
ANR	3263709	ExpressionStatement	P [ 10 ] [ 2 ]	11:8:223:231	3263684	6	True				
ANR	3263710	ArrayIndexing	P [ 10 ] [ 2 ]		3263684	0					
ANR	3263711	ArrayIndexing	P [ 10 ]		3263684	0					
ANR	3263712	Identifier	P		3263684	0					
ANR	3263713	PrimaryExpression	10		3263684	1					
ANR	3263714	PrimaryExpression	2		3263684	1					
ANR	3263715	IdentifierDeclStatement	const int shift = 1 + s -> quarter_sample ;	13:4:238:274	3263684	7	True				
ANR	3263716	IdentifierDecl	shift = 1 + s -> quarter_sample		3263684	0					
ANR	3263717	IdentifierDeclType	const int		3263684	0					
ANR	3263718	Identifier	shift		3263684	1					
ANR	3263719	AssignmentExpression	shift = 1 + s -> quarter_sample		3263684	2		=			
ANR	3263720	Identifier	shift		3263684	0					
ANR	3263721	AdditiveExpression	1 + s -> quarter_sample		3263684	1		+			
ANR	3263722	PrimaryExpression	1		3263684	0					
ANR	3263723	PtrMemberAccess	s -> quarter_sample		3263684	1					
ANR	3263724	Identifier	s		3263684	0					
ANR	3263725	Identifier	quarter_sample		3263684	1					
ANR	3263726	IdentifierDeclStatement	const int mot_stride = s -> mb_stride ;	15:4:281:316	3263684	8	True				
ANR	3263727	IdentifierDecl	mot_stride = s -> mb_stride		3263684	0					
ANR	3263728	IdentifierDeclType	const int		3263684	0					
ANR	3263729	Identifier	mot_stride		3263684	1					
ANR	3263730	AssignmentExpression	mot_stride = s -> mb_stride		3263684	2		=			
ANR	3263731	Identifier	mot_stride		3263684	0					
ANR	3263732	PtrMemberAccess	s -> mb_stride		3263684	1					
ANR	3263733	Identifier	s		3263684	0					
ANR	3263734	Identifier	mb_stride		3263684	1					
ANR	3263735	IdentifierDeclStatement	const int mot_xy = mb_y * mot_stride + mb_x ;	17:4:323:364	3263684	9	True				
ANR	3263736	IdentifierDecl	mot_xy = mb_y * mot_stride + mb_x		3263684	0					
ANR	3263737	IdentifierDeclType	const int		3263684	0					
ANR	3263738	Identifier	mot_xy		3263684	1					
ANR	3263739	AssignmentExpression	mot_xy = mb_y * mot_stride + mb_x		3263684	2		=			
ANR	3263740	Identifier	mot_xy		3263684	0					
ANR	3263741	AdditiveExpression	mb_y * mot_stride + mb_x		3263684	1		+			
ANR	3263742	MultiplicativeExpression	mb_y * mot_stride		3263684	0		*			
ANR	3263743	Identifier	mb_y		3263684	0					
ANR	3263744	Identifier	mot_stride		3263684	1					
ANR	3263745	Identifier	mb_x		3263684	1					
ANR	3263746	Statement	uint8_t	19:4:371:377	3263684	10	True				
ANR	3263747	Statement	*	19:12:379:379	3263684	11	True				
ANR	3263748	Statement	const	19:14:381:385	3263684	12	True				
ANR	3263749	ExpressionStatement	mv_penalty = c -> mv_penalty [ f_code ] + MAX_MV	19:20:387:429	3263684	13	True				
ANR	3263750	AssignmentExpression	mv_penalty = c -> mv_penalty [ f_code ] + MAX_MV		3263684	0		=			
ANR	3263751	Identifier	mv_penalty		3263684	0					
ANR	3263752	AdditiveExpression	c -> mv_penalty [ f_code ] + MAX_MV		3263684	1		+			
ANR	3263753	ArrayIndexing	c -> mv_penalty [ f_code ]		3263684	0					
ANR	3263754	PtrMemberAccess	c -> mv_penalty		3263684	0					
ANR	3263755	Identifier	c		3263684	0					
ANR	3263756	Identifier	mv_penalty		3263684	1					
ANR	3263757	Identifier	f_code		3263684	1					
ANR	3263758	Identifier	MAX_MV		3263684	1					
ANR	3263759	IdentifierDeclStatement	int mv_scale ;	21:4:436:448	3263684	14	True				
ANR	3263760	IdentifierDecl	mv_scale		3263684	0					
ANR	3263761	IdentifierDeclType	int		3263684	0					
ANR	3263762	Identifier	mv_scale		3263684	1					
ANR	3263763	ExpressionStatement	"c -> penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_cmp )"	25:4:465:547	3263684	15	True				
ANR	3263764	AssignmentExpression	"c -> penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_cmp )"		3263684	0		=			
ANR	3263765	PtrMemberAccess	c -> penalty_factor		3263684	0					
ANR	3263766	Identifier	c		3263684	0					
ANR	3263767	Identifier	penalty_factor		3263684	1					
ANR	3263768	CallExpression	"get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_cmp )"		3263684	1					
ANR	3263769	Callee	get_penalty_factor		3263684	0					
ANR	3263770	Identifier	get_penalty_factor		3263684	0					
ANR	3263771	ArgumentList	s -> lambda		3263684	1					
ANR	3263772	Argument	s -> lambda		3263684	0					
ANR	3263773	PtrMemberAccess	s -> lambda		3263684	0					
ANR	3263774	Identifier	s		3263684	0					
ANR	3263775	Identifier	lambda		3263684	1					
ANR	3263776	Argument	s -> lambda2		3263684	1					
ANR	3263777	PtrMemberAccess	s -> lambda2		3263684	0					
ANR	3263778	Identifier	s		3263684	0					
ANR	3263779	Identifier	lambda2		3263684	1					
ANR	3263780	Argument	c -> avctx -> me_cmp		3263684	2					
ANR	3263781	PtrMemberAccess	c -> avctx -> me_cmp		3263684	0					
ANR	3263782	PtrMemberAccess	c -> avctx		3263684	0					
ANR	3263783	Identifier	c		3263684	0					
ANR	3263784	Identifier	avctx		3263684	1					
ANR	3263785	Identifier	me_cmp		3263684	1					
ANR	3263786	ExpressionStatement	"c -> sub_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_sub_cmp )"	27:4:554:640	3263684	16	True				
ANR	3263787	AssignmentExpression	"c -> sub_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_sub_cmp )"		3263684	0		=			
ANR	3263788	PtrMemberAccess	c -> sub_penalty_factor		3263684	0					
ANR	3263789	Identifier	c		3263684	0					
ANR	3263790	Identifier	sub_penalty_factor		3263684	1					
ANR	3263791	CallExpression	"get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_sub_cmp )"		3263684	1					
ANR	3263792	Callee	get_penalty_factor		3263684	0					
ANR	3263793	Identifier	get_penalty_factor		3263684	0					
ANR	3263794	ArgumentList	s -> lambda		3263684	1					
ANR	3263795	Argument	s -> lambda		3263684	0					
ANR	3263796	PtrMemberAccess	s -> lambda		3263684	0					
ANR	3263797	Identifier	s		3263684	0					
ANR	3263798	Identifier	lambda		3263684	1					
ANR	3263799	Argument	s -> lambda2		3263684	1					
ANR	3263800	PtrMemberAccess	s -> lambda2		3263684	0					
ANR	3263801	Identifier	s		3263684	0					
ANR	3263802	Identifier	lambda2		3263684	1					
ANR	3263803	Argument	c -> avctx -> me_sub_cmp		3263684	2					
ANR	3263804	PtrMemberAccess	c -> avctx -> me_sub_cmp		3263684	0					
ANR	3263805	PtrMemberAccess	c -> avctx		3263684	0					
ANR	3263806	Identifier	c		3263684	0					
ANR	3263807	Identifier	avctx		3263684	1					
ANR	3263808	Identifier	me_sub_cmp		3263684	1					
ANR	3263809	ExpressionStatement	"c -> mb_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> mb_cmp )"	29:4:647:729	3263684	17	True				
ANR	3263810	AssignmentExpression	"c -> mb_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> mb_cmp )"		3263684	0		=			
ANR	3263811	PtrMemberAccess	c -> mb_penalty_factor		3263684	0					
ANR	3263812	Identifier	c		3263684	0					
ANR	3263813	Identifier	mb_penalty_factor		3263684	1					
ANR	3263814	CallExpression	"get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> mb_cmp )"		3263684	1					
ANR	3263815	Callee	get_penalty_factor		3263684	0					
ANR	3263816	Identifier	get_penalty_factor		3263684	0					
ANR	3263817	ArgumentList	s -> lambda		3263684	1					
ANR	3263818	Argument	s -> lambda		3263684	0					
ANR	3263819	PtrMemberAccess	s -> lambda		3263684	0					
ANR	3263820	Identifier	s		3263684	0					
ANR	3263821	Identifier	lambda		3263684	1					
ANR	3263822	Argument	s -> lambda2		3263684	1					
ANR	3263823	PtrMemberAccess	s -> lambda2		3263684	0					
ANR	3263824	Identifier	s		3263684	0					
ANR	3263825	Identifier	lambda2		3263684	1					
ANR	3263826	Argument	c -> avctx -> mb_cmp		3263684	2					
ANR	3263827	PtrMemberAccess	c -> avctx -> mb_cmp		3263684	0					
ANR	3263828	PtrMemberAccess	c -> avctx		3263684	0					
ANR	3263829	Identifier	c		3263684	0					
ANR	3263830	Identifier	avctx		3263684	1					
ANR	3263831	Identifier	mb_cmp		3263684	1					
ANR	3263832	ExpressionStatement	c -> current_mv_penalty = mv_penalty	31:4:736:769	3263684	18	True				
ANR	3263833	AssignmentExpression	c -> current_mv_penalty = mv_penalty		3263684	0		=			
ANR	3263834	PtrMemberAccess	c -> current_mv_penalty		3263684	0					
ANR	3263835	Identifier	c		3263684	0					
ANR	3263836	Identifier	current_mv_penalty		3263684	1					
ANR	3263837	Identifier	mv_penalty		3263684	1					
ANR	3263838	ExpressionStatement	"get_limits ( s , 16 * mb_x , 16 * mb_y )"	35:4:778:809	3263684	19	True				
ANR	3263839	CallExpression	"get_limits ( s , 16 * mb_x , 16 * mb_y )"		3263684	0					
ANR	3263840	Callee	get_limits		3263684	0					
ANR	3263841	Identifier	get_limits		3263684	0					
ANR	3263842	ArgumentList	s		3263684	1					
ANR	3263843	Argument	s		3263684	0					
ANR	3263844	Identifier	s		3263684	0					
ANR	3263845	Argument	16 * mb_x		3263684	1					
ANR	3263846	MultiplicativeExpression	16 * mb_x		3263684	0		*			
ANR	3263847	PrimaryExpression	16		3263684	0					
ANR	3263848	Identifier	mb_x		3263684	1					
ANR	3263849	Argument	16 * mb_y		3263684	2					
ANR	3263850	MultiplicativeExpression	16 * mb_y		3263684	0		*			
ANR	3263851	PrimaryExpression	16		3263684	0					
ANR	3263852	Identifier	mb_y		3263684	1					
ANR	3263853	SwitchStatement	switch ( s -> me_method )		3263684	20					
ANR	3263854	Condition	s -> me_method	39:11:825:836	3263684	0	True				
ANR	3263855	PtrMemberAccess	s -> me_method		3263684	0					
ANR	3263856	Identifier	s		3263684	0					
ANR	3263857	Identifier	me_method		3263684	1					
ANR	3263858	CompoundStatement		35:25:690:690	3263684	1					
ANR	3263859	Label	case ME_ZERO :	41:4:846:858	3263684	0	True				
ANR	3263860	Identifier	ME_ZERO		3263684	0					
ANR	3263861	Label	default :	43:4:865:872	3263684	1	True				
ANR	3263862	Identifier	default		3263684	0					
ANR	3263863	ExpressionStatement	"no_motion_search ( s , & mx , & my )"	45:1:876:905	3263684	2	True				
ANR	3263864	CallExpression	"no_motion_search ( s , & mx , & my )"		3263684	0					
ANR	3263865	Callee	no_motion_search		3263684	0					
ANR	3263866	Identifier	no_motion_search		3263684	0					
ANR	3263867	ArgumentList	s		3263684	1					
ANR	3263868	Argument	s		3263684	0					
ANR	3263869	Identifier	s		3263684	0					
ANR	3263870	Argument	& mx		3263684	1					
ANR	3263871	UnaryOperationExpression	& mx		3263684	0					
ANR	3263872	UnaryOperator	&		3263684	0					
ANR	3263873	Identifier	mx		3263684	1					
ANR	3263874	Argument	& my		3263684	2					
ANR	3263875	UnaryOperationExpression	& my		3263684	0					
ANR	3263876	UnaryOperator	&		3263684	0					
ANR	3263877	Identifier	my		3263684	1					
ANR	3263878	ExpressionStatement	dmin = 0	47:8:916:924	3263684	3	True				
ANR	3263879	AssignmentExpression	dmin = 0		3263684	0		=			
ANR	3263880	Identifier	dmin		3263684	0					
ANR	3263881	PrimaryExpression	0		3263684	1					
ANR	3263882	ExpressionStatement	mx -= mb_x * 16	49:8:935:947	3263684	4	True				
ANR	3263883	AssignmentExpression	mx -= mb_x * 16		3263684	0		-=			
ANR	3263884	Identifier	mx		3263684	0					
ANR	3263885	MultiplicativeExpression	mb_x * 16		3263684	1		*			
ANR	3263886	Identifier	mb_x		3263684	0					
ANR	3263887	PrimaryExpression	16		3263684	1					
ANR	3263888	ExpressionStatement	my -= mb_y * 16	51:8:958:970	3263684	5	True				
ANR	3263889	AssignmentExpression	my -= mb_y * 16		3263684	0		-=			
ANR	3263890	Identifier	my		3263684	0					
ANR	3263891	MultiplicativeExpression	mb_y * 16		3263684	1		*			
ANR	3263892	Identifier	mb_y		3263684	0					
ANR	3263893	PrimaryExpression	16		3263684	1					
ANR	3263894	BreakStatement	break ;	53:8:981:986	3263684	6	True				
ANR	3263895	Label	case ME_FULL :	57:4:1000:1012	3263684	7	True				
ANR	3263896	Identifier	ME_FULL		3263684	0					
ANR	3263897	ExpressionStatement	"dmin = full_motion_search ( s , & mx , & my , range , ref_picture )"	59:1:1016:1074	3263684	8	True				
ANR	3263898	AssignmentExpression	"dmin = full_motion_search ( s , & mx , & my , range , ref_picture )"		3263684	0		=			
ANR	3263899	Identifier	dmin		3263684	0					
ANR	3263900	CallExpression	"full_motion_search ( s , & mx , & my , range , ref_picture )"		3263684	1					
ANR	3263901	Callee	full_motion_search		3263684	0					
ANR	3263902	Identifier	full_motion_search		3263684	0					
ANR	3263903	ArgumentList	s		3263684	1					
ANR	3263904	Argument	s		3263684	0					
ANR	3263905	Identifier	s		3263684	0					
ANR	3263906	Argument	& mx		3263684	1					
ANR	3263907	UnaryOperationExpression	& mx		3263684	0					
ANR	3263908	UnaryOperator	&		3263684	0					
ANR	3263909	Identifier	mx		3263684	1					
ANR	3263910	Argument	& my		3263684	2					
ANR	3263911	UnaryOperationExpression	& my		3263684	0					
ANR	3263912	UnaryOperator	&		3263684	0					
ANR	3263913	Identifier	my		3263684	1					
ANR	3263914	Argument	range		3263684	3					
ANR	3263915	Identifier	range		3263684	0					
ANR	3263916	Argument	ref_picture		3263684	4					
ANR	3263917	Identifier	ref_picture		3263684	0					
ANR	3263918	ExpressionStatement	mx -= mb_x * 16	61:8:1085:1097	3263684	9	True				
ANR	3263919	AssignmentExpression	mx -= mb_x * 16		3263684	0		-=			
ANR	3263920	Identifier	mx		3263684	0					
ANR	3263921	MultiplicativeExpression	mb_x * 16		3263684	1		*			
ANR	3263922	Identifier	mb_x		3263684	0					
ANR	3263923	PrimaryExpression	16		3263684	1					
ANR	3263924	ExpressionStatement	my -= mb_y * 16	63:8:1108:1120	3263684	10	True				
ANR	3263925	AssignmentExpression	my -= mb_y * 16		3263684	0		-=			
ANR	3263926	Identifier	my		3263684	0					
ANR	3263927	MultiplicativeExpression	mb_y * 16		3263684	1		*			
ANR	3263928	Identifier	mb_y		3263684	0					
ANR	3263929	PrimaryExpression	16		3263684	1					
ANR	3263930	BreakStatement	break ;	65:8:1131:1136	3263684	11	True				
ANR	3263931	Label	case ME_LOG :	67:4:1143:1154	3263684	12	True				
ANR	3263932	Identifier	ME_LOG		3263684	0					
ANR	3263933	ExpressionStatement	"dmin = log_motion_search ( s , & mx , & my , range / 2 , ref_picture )"	69:1:1158:1219	3263684	13	True				
ANR	3263934	AssignmentExpression	"dmin = log_motion_search ( s , & mx , & my , range / 2 , ref_picture )"		3263684	0		=			
ANR	3263935	Identifier	dmin		3263684	0					
ANR	3263936	CallExpression	"log_motion_search ( s , & mx , & my , range / 2 , ref_picture )"		3263684	1					
ANR	3263937	Callee	log_motion_search		3263684	0					
ANR	3263938	Identifier	log_motion_search		3263684	0					
ANR	3263939	ArgumentList	s		3263684	1					
ANR	3263940	Argument	s		3263684	0					
ANR	3263941	Identifier	s		3263684	0					
ANR	3263942	Argument	& mx		3263684	1					
ANR	3263943	UnaryOperationExpression	& mx		3263684	0					
ANR	3263944	UnaryOperator	&		3263684	0					
ANR	3263945	Identifier	mx		3263684	1					
ANR	3263946	Argument	& my		3263684	2					
ANR	3263947	UnaryOperationExpression	& my		3263684	0					
ANR	3263948	UnaryOperator	&		3263684	0					
ANR	3263949	Identifier	my		3263684	1					
ANR	3263950	Argument	range / 2		3263684	3					
ANR	3263951	MultiplicativeExpression	range / 2		3263684	0		/			
ANR	3263952	Identifier	range		3263684	0					
ANR	3263953	PrimaryExpression	2		3263684	1					
ANR	3263954	Argument	ref_picture		3263684	4					
ANR	3263955	Identifier	ref_picture		3263684	0					
ANR	3263956	ExpressionStatement	mx -= mb_x * 16	71:8:1230:1242	3263684	14	True				
ANR	3263957	AssignmentExpression	mx -= mb_x * 16		3263684	0		-=			
ANR	3263958	Identifier	mx		3263684	0					
ANR	3263959	MultiplicativeExpression	mb_x * 16		3263684	1		*			
ANR	3263960	Identifier	mb_x		3263684	0					
ANR	3263961	PrimaryExpression	16		3263684	1					
ANR	3263962	ExpressionStatement	my -= mb_y * 16	73:8:1253:1265	3263684	15	True				
ANR	3263963	AssignmentExpression	my -= mb_y * 16		3263684	0		-=			
ANR	3263964	Identifier	my		3263684	0					
ANR	3263965	MultiplicativeExpression	mb_y * 16		3263684	1		*			
ANR	3263966	Identifier	mb_y		3263684	0					
ANR	3263967	PrimaryExpression	16		3263684	1					
ANR	3263968	BreakStatement	break ;	75:8:1276:1281	3263684	16	True				
ANR	3263969	Label	case ME_PHODS :	77:4:1288:1301	3263684	17	True				
ANR	3263970	Identifier	ME_PHODS		3263684	0					
ANR	3263971	ExpressionStatement	"dmin = phods_motion_search ( s , & mx , & my , range / 2 , ref_picture )"	79:1:1305:1368	3263684	18	True				
ANR	3263972	AssignmentExpression	"dmin = phods_motion_search ( s , & mx , & my , range / 2 , ref_picture )"		3263684	0		=			
ANR	3263973	Identifier	dmin		3263684	0					
ANR	3263974	CallExpression	"phods_motion_search ( s , & mx , & my , range / 2 , ref_picture )"		3263684	1					
ANR	3263975	Callee	phods_motion_search		3263684	0					
ANR	3263976	Identifier	phods_motion_search		3263684	0					
ANR	3263977	ArgumentList	s		3263684	1					
ANR	3263978	Argument	s		3263684	0					
ANR	3263979	Identifier	s		3263684	0					
ANR	3263980	Argument	& mx		3263684	1					
ANR	3263981	UnaryOperationExpression	& mx		3263684	0					
ANR	3263982	UnaryOperator	&		3263684	0					
ANR	3263983	Identifier	mx		3263684	1					
ANR	3263984	Argument	& my		3263684	2					
ANR	3263985	UnaryOperationExpression	& my		3263684	0					
ANR	3263986	UnaryOperator	&		3263684	0					
ANR	3263987	Identifier	my		3263684	1					
ANR	3263988	Argument	range / 2		3263684	3					
ANR	3263989	MultiplicativeExpression	range / 2		3263684	0		/			
ANR	3263990	Identifier	range		3263684	0					
ANR	3263991	PrimaryExpression	2		3263684	1					
ANR	3263992	Argument	ref_picture		3263684	4					
ANR	3263993	Identifier	ref_picture		3263684	0					
ANR	3263994	ExpressionStatement	mx -= mb_x * 16	81:8:1379:1391	3263684	19	True				
ANR	3263995	AssignmentExpression	mx -= mb_x * 16		3263684	0		-=			
ANR	3263996	Identifier	mx		3263684	0					
ANR	3263997	MultiplicativeExpression	mb_x * 16		3263684	1		*			
ANR	3263998	Identifier	mb_x		3263684	0					
ANR	3263999	PrimaryExpression	16		3263684	1					
ANR	3264000	ExpressionStatement	my -= mb_y * 16	83:8:1402:1414	3263684	20	True				
ANR	3264001	AssignmentExpression	my -= mb_y * 16		3263684	0		-=			
ANR	3264002	Identifier	my		3263684	0					
ANR	3264003	MultiplicativeExpression	mb_y * 16		3263684	1		*			
ANR	3264004	Identifier	mb_y		3263684	0					
ANR	3264005	PrimaryExpression	16		3263684	1					
ANR	3264006	BreakStatement	break ;	85:8:1425:1430	3263684	21	True				
ANR	3264007	Label	case ME_X1 :	89:4:1445:1455	3263684	22	True				
ANR	3264008	Identifier	ME_X1		3263684	0					
ANR	3264009	Label	case ME_EPZS :	91:4:1462:1474	3263684	23	True				
ANR	3264010	Identifier	ME_EPZS		3263684	0					
ANR	3264011	CompoundStatement		89:7:1335:1335	3263684	24					
ANR	3264012	ExpressionStatement	P_LEFT [ 0 ] = mv_table [ mot_xy - 1 ] [ 0 ]	95:12:1499:1541	3263684	0	True				
ANR	3264013	AssignmentExpression	P_LEFT [ 0 ] = mv_table [ mot_xy - 1 ] [ 0 ]		3263684	0		=			
ANR	3264014	ArrayIndexing	P_LEFT [ 0 ]		3263684	0					
ANR	3264015	Identifier	P_LEFT		3263684	0					
ANR	3264016	PrimaryExpression	0		3263684	1					
ANR	3264017	ArrayIndexing	mv_table [ mot_xy - 1 ] [ 0 ]		3263684	1					
ANR	3264018	ArrayIndexing	mv_table [ mot_xy - 1 ]		3263684	0					
ANR	3264019	Identifier	mv_table		3263684	0					
ANR	3264020	AdditiveExpression	mot_xy - 1		3263684	1		-			
ANR	3264021	Identifier	mot_xy		3263684	0					
ANR	3264022	PrimaryExpression	1		3263684	1					
ANR	3264023	PrimaryExpression	0		3263684	1					
ANR	3264024	ExpressionStatement	P_LEFT [ 1 ] = mv_table [ mot_xy - 1 ] [ 1 ]	97:12:1556:1598	3263684	1	True				
ANR	3264025	AssignmentExpression	P_LEFT [ 1 ] = mv_table [ mot_xy - 1 ] [ 1 ]		3263684	0		=			
ANR	3264026	ArrayIndexing	P_LEFT [ 1 ]		3263684	0					
ANR	3264027	Identifier	P_LEFT		3263684	0					
ANR	3264028	PrimaryExpression	1		3263684	1					
ANR	3264029	ArrayIndexing	mv_table [ mot_xy - 1 ] [ 1 ]		3263684	1					
ANR	3264030	ArrayIndexing	mv_table [ mot_xy - 1 ]		3263684	0					
ANR	3264031	Identifier	mv_table		3263684	0					
ANR	3264032	AdditiveExpression	mot_xy - 1		3263684	1		-			
ANR	3264033	Identifier	mot_xy		3263684	0					
ANR	3264034	PrimaryExpression	1		3263684	1					
ANR	3264035	PrimaryExpression	1		3263684	1					
ANR	3264036	IfStatement	if ( P_LEFT [ 0 ] > ( c -> xmax << shift ) )		3263684	2					
ANR	3264037	Condition	P_LEFT [ 0 ] > ( c -> xmax << shift )	101:15:1618:1651	3263684	0	True				
ANR	3264038	RelationalExpression	P_LEFT [ 0 ] > ( c -> xmax << shift )		3263684	0		>			
ANR	3264039	ArrayIndexing	P_LEFT [ 0 ]		3263684	0					
ANR	3264040	Identifier	P_LEFT		3263684	0					
ANR	3264041	PrimaryExpression	0		3263684	1					
ANR	3264042	ShiftExpression	c -> xmax << shift		3263684	1		<<			
ANR	3264043	PtrMemberAccess	c -> xmax		3263684	0					
ANR	3264044	Identifier	c		3263684	0					
ANR	3264045	Identifier	xmax		3263684	1					
ANR	3264046	Identifier	shift		3263684	1					
ANR	3264047	ExpressionStatement	P_LEFT [ 0 ] = ( c -> xmax << shift )	101:51:1654:1688	3263684	1	True				
ANR	3264048	AssignmentExpression	P_LEFT [ 0 ] = ( c -> xmax << shift )		3263684	0		=			
ANR	3264049	ArrayIndexing	P_LEFT [ 0 ]		3263684	0					
ANR	3264050	Identifier	P_LEFT		3263684	0					
ANR	3264051	PrimaryExpression	0		3263684	1					
ANR	3264052	ShiftExpression	c -> xmax << shift		3263684	1		<<			
ANR	3264053	PtrMemberAccess	c -> xmax		3263684	0					
ANR	3264054	Identifier	c		3263684	0					
ANR	3264055	Identifier	xmax		3263684	1					
ANR	3264056	Identifier	shift		3263684	1					
ANR	3264057	IfStatement	if ( ! s -> first_slice_line )		3263684	3					
ANR	3264058	Condition	! s -> first_slice_line	107:16:1756:1775	3263684	0	True				
ANR	3264059	UnaryOperationExpression	! s -> first_slice_line		3263684	0					
ANR	3264060	UnaryOperator	!		3263684	0					
ANR	3264061	PtrMemberAccess	s -> first_slice_line		3263684	1					
ANR	3264062	Identifier	s		3263684	0					
ANR	3264063	Identifier	first_slice_line		3263684	1					
ANR	3264064	CompoundStatement		103:38:1629:1629	3263684	1					
ANR	3264065	ExpressionStatement	P_TOP [ 0 ] = mv_table [ mot_xy - mot_stride ] [ 0 ]	109:16:1797:1853	3263684	0	True				
ANR	3264066	AssignmentExpression	P_TOP [ 0 ] = mv_table [ mot_xy - mot_stride ] [ 0 ]		3263684	0		=			
ANR	3264067	ArrayIndexing	P_TOP [ 0 ]		3263684	0					
ANR	3264068	Identifier	P_TOP		3263684	0					
ANR	3264069	PrimaryExpression	0		3263684	1					
ANR	3264070	ArrayIndexing	mv_table [ mot_xy - mot_stride ] [ 0 ]		3263684	1					
ANR	3264071	ArrayIndexing	mv_table [ mot_xy - mot_stride ]		3263684	0					
ANR	3264072	Identifier	mv_table		3263684	0					
ANR	3264073	AdditiveExpression	mot_xy - mot_stride		3263684	1		-			
ANR	3264074	Identifier	mot_xy		3263684	0					
ANR	3264075	Identifier	mot_stride		3263684	1					
ANR	3264076	PrimaryExpression	0		3263684	1					
ANR	3264077	ExpressionStatement	P_TOP [ 1 ] = mv_table [ mot_xy - mot_stride ] [ 1 ]	111:16:1872:1928	3263684	1	True				
ANR	3264078	AssignmentExpression	P_TOP [ 1 ] = mv_table [ mot_xy - mot_stride ] [ 1 ]		3263684	0		=			
ANR	3264079	ArrayIndexing	P_TOP [ 1 ]		3263684	0					
ANR	3264080	Identifier	P_TOP		3263684	0					
ANR	3264081	PrimaryExpression	1		3263684	1					
ANR	3264082	ArrayIndexing	mv_table [ mot_xy - mot_stride ] [ 1 ]		3263684	1					
ANR	3264083	ArrayIndexing	mv_table [ mot_xy - mot_stride ]		3263684	0					
ANR	3264084	Identifier	mv_table		3263684	0					
ANR	3264085	AdditiveExpression	mot_xy - mot_stride		3263684	1		-			
ANR	3264086	Identifier	mot_xy		3263684	0					
ANR	3264087	Identifier	mot_stride		3263684	1					
ANR	3264088	PrimaryExpression	1		3263684	1					
ANR	3264089	ExpressionStatement	P_TOPRIGHT [ 0 ] = mv_table [ mot_xy - mot_stride + 1 ] [ 0 ]	113:16:1947:2008	3263684	2	True				
ANR	3264090	AssignmentExpression	P_TOPRIGHT [ 0 ] = mv_table [ mot_xy - mot_stride + 1 ] [ 0 ]		3263684	0		=			
ANR	3264091	ArrayIndexing	P_TOPRIGHT [ 0 ]		3263684	0					
ANR	3264092	Identifier	P_TOPRIGHT		3263684	0					
ANR	3264093	PrimaryExpression	0		3263684	1					
ANR	3264094	ArrayIndexing	mv_table [ mot_xy - mot_stride + 1 ] [ 0 ]		3263684	1					
ANR	3264095	ArrayIndexing	mv_table [ mot_xy - mot_stride + 1 ]		3263684	0					
ANR	3264096	Identifier	mv_table		3263684	0					
ANR	3264097	AdditiveExpression	mot_xy - mot_stride + 1		3263684	1		-			
ANR	3264098	Identifier	mot_xy		3263684	0					
ANR	3264099	AdditiveExpression	mot_stride + 1		3263684	1		+			
ANR	3264100	Identifier	mot_stride		3263684	0					
ANR	3264101	PrimaryExpression	1		3263684	1					
ANR	3264102	PrimaryExpression	0		3263684	1					
ANR	3264103	ExpressionStatement	P_TOPRIGHT [ 1 ] = mv_table [ mot_xy - mot_stride + 1 ] [ 1 ]	115:16:2027:2088	3263684	3	True				
ANR	3264104	AssignmentExpression	P_TOPRIGHT [ 1 ] = mv_table [ mot_xy - mot_stride + 1 ] [ 1 ]		3263684	0		=			
ANR	3264105	ArrayIndexing	P_TOPRIGHT [ 1 ]		3263684	0					
ANR	3264106	Identifier	P_TOPRIGHT		3263684	0					
ANR	3264107	PrimaryExpression	1		3263684	1					
ANR	3264108	ArrayIndexing	mv_table [ mot_xy - mot_stride + 1 ] [ 1 ]		3263684	1					
ANR	3264109	ArrayIndexing	mv_table [ mot_xy - mot_stride + 1 ]		3263684	0					
ANR	3264110	Identifier	mv_table		3263684	0					
ANR	3264111	AdditiveExpression	mot_xy - mot_stride + 1		3263684	1		-			
ANR	3264112	Identifier	mot_xy		3263684	0					
ANR	3264113	AdditiveExpression	mot_stride + 1		3263684	1		+			
ANR	3264114	Identifier	mot_stride		3263684	0					
ANR	3264115	PrimaryExpression	1		3263684	1					
ANR	3264116	PrimaryExpression	1		3263684	1					
ANR	3264117	IfStatement	if ( P_TOP [ 1 ] > ( c -> ymax << shift ) )		3263684	4					
ANR	3264118	Condition	P_TOP [ 1 ] > ( c -> ymax << shift )	117:19:2110:2136	3263684	0	True				
ANR	3264119	RelationalExpression	P_TOP [ 1 ] > ( c -> ymax << shift )		3263684	0		>			
ANR	3264120	ArrayIndexing	P_TOP [ 1 ]		3263684	0					
ANR	3264121	Identifier	P_TOP		3263684	0					
ANR	3264122	PrimaryExpression	1		3263684	1					
ANR	3264123	ShiftExpression	c -> ymax << shift		3263684	1		<<			
ANR	3264124	PtrMemberAccess	c -> ymax		3263684	0					
ANR	3264125	Identifier	c		3263684	0					
ANR	3264126	Identifier	ymax		3263684	1					
ANR	3264127	Identifier	shift		3263684	1					
ANR	3264128	ExpressionStatement	P_TOP [ 1 ] = ( c -> ymax << shift )	117:48:2139:2165	3263684	1	True				
ANR	3264129	AssignmentExpression	P_TOP [ 1 ] = ( c -> ymax << shift )		3263684	0		=			
ANR	3264130	ArrayIndexing	P_TOP [ 1 ]		3263684	0					
ANR	3264131	Identifier	P_TOP		3263684	0					
ANR	3264132	PrimaryExpression	1		3263684	1					
ANR	3264133	ShiftExpression	c -> ymax << shift		3263684	1		<<			
ANR	3264134	PtrMemberAccess	c -> ymax		3263684	0					
ANR	3264135	Identifier	c		3263684	0					
ANR	3264136	Identifier	ymax		3263684	1					
ANR	3264137	Identifier	shift		3263684	1					
ANR	3264138	IfStatement	if ( P_TOPRIGHT [ 0 ] < ( c -> xmin << shift ) )		3263684	5					
ANR	3264139	Condition	P_TOPRIGHT [ 0 ] < ( c -> xmin << shift )	119:19:2187:2218	3263684	0	True				
ANR	3264140	RelationalExpression	P_TOPRIGHT [ 0 ] < ( c -> xmin << shift )		3263684	0		<			
ANR	3264141	ArrayIndexing	P_TOPRIGHT [ 0 ]		3263684	0					
ANR	3264142	Identifier	P_TOPRIGHT		3263684	0					
ANR	3264143	PrimaryExpression	0		3263684	1					
ANR	3264144	ShiftExpression	c -> xmin << shift		3263684	1		<<			
ANR	3264145	PtrMemberAccess	c -> xmin		3263684	0					
ANR	3264146	Identifier	c		3263684	0					
ANR	3264147	Identifier	xmin		3263684	1					
ANR	3264148	Identifier	shift		3263684	1					
ANR	3264149	ExpressionStatement	P_TOPRIGHT [ 0 ] = ( c -> xmin << shift )	119:53:2221:2252	3263684	1	True				
ANR	3264150	AssignmentExpression	P_TOPRIGHT [ 0 ] = ( c -> xmin << shift )		3263684	0		=			
ANR	3264151	ArrayIndexing	P_TOPRIGHT [ 0 ]		3263684	0					
ANR	3264152	Identifier	P_TOPRIGHT		3263684	0					
ANR	3264153	PrimaryExpression	0		3263684	1					
ANR	3264154	ShiftExpression	c -> xmin << shift		3263684	1		<<			
ANR	3264155	PtrMemberAccess	c -> xmin		3263684	0					
ANR	3264156	Identifier	c		3263684	0					
ANR	3264157	Identifier	xmin		3263684	1					
ANR	3264158	Identifier	shift		3263684	1					
ANR	3264159	IfStatement	if ( P_TOPRIGHT [ 1 ] > ( c -> ymax << shift ) )		3263684	6					
ANR	3264160	Condition	P_TOPRIGHT [ 1 ] > ( c -> ymax << shift )	121:19:2274:2305	3263684	0	True				
ANR	3264161	RelationalExpression	P_TOPRIGHT [ 1 ] > ( c -> ymax << shift )		3263684	0		>			
ANR	3264162	ArrayIndexing	P_TOPRIGHT [ 1 ]		3263684	0					
ANR	3264163	Identifier	P_TOPRIGHT		3263684	0					
ANR	3264164	PrimaryExpression	1		3263684	1					
ANR	3264165	ShiftExpression	c -> ymax << shift		3263684	1		<<			
ANR	3264166	PtrMemberAccess	c -> ymax		3263684	0					
ANR	3264167	Identifier	c		3263684	0					
ANR	3264168	Identifier	ymax		3263684	1					
ANR	3264169	Identifier	shift		3263684	1					
ANR	3264170	ExpressionStatement	P_TOPRIGHT [ 1 ] = ( c -> ymax << shift )	121:53:2308:2339	3263684	1	True				
ANR	3264171	AssignmentExpression	P_TOPRIGHT [ 1 ] = ( c -> ymax << shift )		3263684	0		=			
ANR	3264172	ArrayIndexing	P_TOPRIGHT [ 1 ]		3263684	0					
ANR	3264173	Identifier	P_TOPRIGHT		3263684	0					
ANR	3264174	PrimaryExpression	1		3263684	1					
ANR	3264175	ShiftExpression	c -> ymax << shift		3263684	1		<<			
ANR	3264176	PtrMemberAccess	c -> ymax		3263684	0					
ANR	3264177	Identifier	c		3263684	0					
ANR	3264178	Identifier	ymax		3263684	1					
ANR	3264179	Identifier	shift		3263684	1					
ANR	3264180	ExpressionStatement	"P_MEDIAN [ 0 ] = mid_pred ( P_LEFT [ 0 ] , P_TOP [ 0 ] , P_TOPRIGHT [ 0 ] )"	125:16:2368:2425	3263684	7	True				
ANR	3264181	AssignmentExpression	"P_MEDIAN [ 0 ] = mid_pred ( P_LEFT [ 0 ] , P_TOP [ 0 ] , P_TOPRIGHT [ 0 ] )"		3263684	0		=			
ANR	3264182	ArrayIndexing	P_MEDIAN [ 0 ]		3263684	0					
ANR	3264183	Identifier	P_MEDIAN		3263684	0					
ANR	3264184	PrimaryExpression	0		3263684	1					
ANR	3264185	CallExpression	"mid_pred ( P_LEFT [ 0 ] , P_TOP [ 0 ] , P_TOPRIGHT [ 0 ] )"		3263684	1					
ANR	3264186	Callee	mid_pred		3263684	0					
ANR	3264187	Identifier	mid_pred		3263684	0					
ANR	3264188	ArgumentList	P_LEFT [ 0 ]		3263684	1					
ANR	3264189	Argument	P_LEFT [ 0 ]		3263684	0					
ANR	3264190	ArrayIndexing	P_LEFT [ 0 ]		3263684	0					
ANR	3264191	Identifier	P_LEFT		3263684	0					
ANR	3264192	PrimaryExpression	0		3263684	1					
ANR	3264193	Argument	P_TOP [ 0 ]		3263684	1					
ANR	3264194	ArrayIndexing	P_TOP [ 0 ]		3263684	0					
ANR	3264195	Identifier	P_TOP		3263684	0					
ANR	3264196	PrimaryExpression	0		3263684	1					
ANR	3264197	Argument	P_TOPRIGHT [ 0 ]		3263684	2					
ANR	3264198	ArrayIndexing	P_TOPRIGHT [ 0 ]		3263684	0					
ANR	3264199	Identifier	P_TOPRIGHT		3263684	0					
ANR	3264200	PrimaryExpression	0		3263684	1					
ANR	3264201	ExpressionStatement	"P_MEDIAN [ 1 ] = mid_pred ( P_LEFT [ 1 ] , P_TOP [ 1 ] , P_TOPRIGHT [ 1 ] )"	127:16:2444:2501	3263684	8	True				
ANR	3264202	AssignmentExpression	"P_MEDIAN [ 1 ] = mid_pred ( P_LEFT [ 1 ] , P_TOP [ 1 ] , P_TOPRIGHT [ 1 ] )"		3263684	0		=			
ANR	3264203	ArrayIndexing	P_MEDIAN [ 1 ]		3263684	0					
ANR	3264204	Identifier	P_MEDIAN		3263684	0					
ANR	3264205	PrimaryExpression	1		3263684	1					
ANR	3264206	CallExpression	"mid_pred ( P_LEFT [ 1 ] , P_TOP [ 1 ] , P_TOPRIGHT [ 1 ] )"		3263684	1					
ANR	3264207	Callee	mid_pred		3263684	0					
ANR	3264208	Identifier	mid_pred		3263684	0					
ANR	3264209	ArgumentList	P_LEFT [ 1 ]		3263684	1					
ANR	3264210	Argument	P_LEFT [ 1 ]		3263684	0					
ANR	3264211	ArrayIndexing	P_LEFT [ 1 ]		3263684	0					
ANR	3264212	Identifier	P_LEFT		3263684	0					
ANR	3264213	PrimaryExpression	1		3263684	1					
ANR	3264214	Argument	P_TOP [ 1 ]		3263684	1					
ANR	3264215	ArrayIndexing	P_TOP [ 1 ]		3263684	0					
ANR	3264216	Identifier	P_TOP		3263684	0					
ANR	3264217	PrimaryExpression	1		3263684	1					
ANR	3264218	Argument	P_TOPRIGHT [ 1 ]		3263684	2					
ANR	3264219	ArrayIndexing	P_TOPRIGHT [ 1 ]		3263684	0					
ANR	3264220	Identifier	P_TOPRIGHT		3263684	0					
ANR	3264221	PrimaryExpression	1		3263684	1					
ANR	3264222	ExpressionStatement	c -> pred_x = P_LEFT [ 0 ]	131:12:2531:2551	3263684	4	True				
ANR	3264223	AssignmentExpression	c -> pred_x = P_LEFT [ 0 ]		3263684	0		=			
ANR	3264224	PtrMemberAccess	c -> pred_x		3263684	0					
ANR	3264225	Identifier	c		3263684	0					
ANR	3264226	Identifier	pred_x		3263684	1					
ANR	3264227	ArrayIndexing	P_LEFT [ 0 ]		3263684	1					
ANR	3264228	Identifier	P_LEFT		3263684	0					
ANR	3264229	PrimaryExpression	0		3263684	1					
ANR	3264230	ExpressionStatement	c -> pred_y = P_LEFT [ 1 ]	133:12:2566:2586	3263684	5	True				
ANR	3264231	AssignmentExpression	c -> pred_y = P_LEFT [ 1 ]		3263684	0		=			
ANR	3264232	PtrMemberAccess	c -> pred_y		3263684	0					
ANR	3264233	Identifier	c		3263684	0					
ANR	3264234	Identifier	pred_y		3263684	1					
ANR	3264235	ArrayIndexing	P_LEFT [ 1 ]		3263684	1					
ANR	3264236	Identifier	P_LEFT		3263684	0					
ANR	3264237	PrimaryExpression	1		3263684	1					
ANR	3264238	IfStatement	if ( mv_table == s -> b_forw_mv_table )		3263684	25					
ANR	3264239	Condition	mv_table == s -> b_forw_mv_table	139:11:2621:2650	3263684	0	True				
ANR	3264240	EqualityExpression	mv_table == s -> b_forw_mv_table		3263684	0		==			
ANR	3264241	Identifier	mv_table		3263684	0					
ANR	3264242	PtrMemberAccess	s -> b_forw_mv_table		3263684	1					
ANR	3264243	Identifier	s		3263684	0					
ANR	3264244	Identifier	b_forw_mv_table		3263684	1					
ANR	3264245	CompoundStatement		135:42:2503:2503	3263684	1					
ANR	3264246	ExpressionStatement	mv_scale = ( s -> pb_time << 16 ) / ( s -> pp_time << shift )	141:12:2667:2715	3263684	0	True				
ANR	3264247	AssignmentExpression	mv_scale = ( s -> pb_time << 16 ) / ( s -> pp_time << shift )		3263684	0		=			
ANR	3264248	Identifier	mv_scale		3263684	0					
ANR	3264249	MultiplicativeExpression	( s -> pb_time << 16 ) / ( s -> pp_time << shift )		3263684	1		/			
ANR	3264250	ShiftExpression	s -> pb_time << 16		3263684	0		<<			
ANR	3264251	PtrMemberAccess	s -> pb_time		3263684	0					
ANR	3264252	Identifier	s		3263684	0					
ANR	3264253	Identifier	pb_time		3263684	1					
ANR	3264254	PrimaryExpression	16		3263684	1					
ANR	3264255	ShiftExpression	s -> pp_time << shift		3263684	1		<<			
ANR	3264256	PtrMemberAccess	s -> pp_time		3263684	0					
ANR	3264257	Identifier	s		3263684	0					
ANR	3264258	Identifier	pp_time		3263684	1					
ANR	3264259	Identifier	shift		3263684	1					
ANR	3264260	ElseStatement	else		3263684	0					
ANR	3264261	CompoundStatement		139:13:2582:2582	3263684	0					
ANR	3264262	ExpressionStatement	mv_scale = ( ( s -> pb_time - s -> pp_time ) << 16 ) / ( s -> pp_time << shift )	145:12:2746:2809	3263684	0	True				
ANR	3264263	AssignmentExpression	mv_scale = ( ( s -> pb_time - s -> pp_time ) << 16 ) / ( s -> pp_time << shift )		3263684	0		=			
ANR	3264264	Identifier	mv_scale		3263684	0					
ANR	3264265	MultiplicativeExpression	( ( s -> pb_time - s -> pp_time ) << 16 ) / ( s -> pp_time << shift )		3263684	1		/			
ANR	3264266	ShiftExpression	( s -> pb_time - s -> pp_time ) << 16		3263684	0		<<			
ANR	3264267	AdditiveExpression	s -> pb_time - s -> pp_time		3263684	0		-			
ANR	3264268	PtrMemberAccess	s -> pb_time		3263684	0					
ANR	3264269	Identifier	s		3263684	0					
ANR	3264270	Identifier	pb_time		3263684	1					
ANR	3264271	PtrMemberAccess	s -> pp_time		3263684	1					
ANR	3264272	Identifier	s		3263684	0					
ANR	3264273	Identifier	pp_time		3263684	1					
ANR	3264274	PrimaryExpression	16		3263684	1					
ANR	3264275	ShiftExpression	s -> pp_time << shift		3263684	1		<<			
ANR	3264276	PtrMemberAccess	s -> pp_time		3263684	0					
ANR	3264277	Identifier	s		3263684	0					
ANR	3264278	Identifier	pp_time		3263684	1					
ANR	3264279	Identifier	shift		3263684	1					
ANR	3264280	ExpressionStatement	"dmin = ff_epzs_motion_search ( s , & mx , & my , P , 0 , ref_index , s -> p_mv_table , mv_scale , 0 , 16 )"	151:8:2841:2931	3263684	26	True				
ANR	3264281	AssignmentExpression	"dmin = ff_epzs_motion_search ( s , & mx , & my , P , 0 , ref_index , s -> p_mv_table , mv_scale , 0 , 16 )"		3263684	0		=			
ANR	3264282	Identifier	dmin		3263684	0					
ANR	3264283	CallExpression	"ff_epzs_motion_search ( s , & mx , & my , P , 0 , ref_index , s -> p_mv_table , mv_scale , 0 , 16 )"		3263684	1					
ANR	3264284	Callee	ff_epzs_motion_search		3263684	0					
ANR	3264285	Identifier	ff_epzs_motion_search		3263684	0					
ANR	3264286	ArgumentList	s		3263684	1					
ANR	3264287	Argument	s		3263684	0					
ANR	3264288	Identifier	s		3263684	0					
ANR	3264289	Argument	& mx		3263684	1					
ANR	3264290	UnaryOperationExpression	& mx		3263684	0					
ANR	3264291	UnaryOperator	&		3263684	0					
ANR	3264292	Identifier	mx		3263684	1					
ANR	3264293	Argument	& my		3263684	2					
ANR	3264294	UnaryOperationExpression	& my		3263684	0					
ANR	3264295	UnaryOperator	&		3263684	0					
ANR	3264296	Identifier	my		3263684	1					
ANR	3264297	Argument	P		3263684	3					
ANR	3264298	Identifier	P		3263684	0					
ANR	3264299	Argument	0		3263684	4					
ANR	3264300	PrimaryExpression	0		3263684	0					
ANR	3264301	Argument	ref_index		3263684	5					
ANR	3264302	Identifier	ref_index		3263684	0					
ANR	3264303	Argument	s -> p_mv_table		3263684	6					
ANR	3264304	PtrMemberAccess	s -> p_mv_table		3263684	0					
ANR	3264305	Identifier	s		3263684	0					
ANR	3264306	Identifier	p_mv_table		3263684	1					
ANR	3264307	Argument	mv_scale		3263684	7					
ANR	3264308	Identifier	mv_scale		3263684	0					
ANR	3264309	Argument	0		3263684	8					
ANR	3264310	PrimaryExpression	0		3263684	0					
ANR	3264311	Argument	16		3263684	9					
ANR	3264312	PrimaryExpression	16		3263684	0					
ANR	3264313	BreakStatement	break ;	155:8:2945:2950	3263684	27	True				
ANR	3264314	ExpressionStatement	"dmin = c -> sub_motion_search ( s , & mx , & my , dmin , 0 , ref_index , 0 , 16 )"	161:4:2970:3036	3263684	21	True				
ANR	3264315	AssignmentExpression	"dmin = c -> sub_motion_search ( s , & mx , & my , dmin , 0 , ref_index , 0 , 16 )"		3263684	0		=			
ANR	3264316	Identifier	dmin		3263684	0					
ANR	3264317	CallExpression	"c -> sub_motion_search ( s , & mx , & my , dmin , 0 , ref_index , 0 , 16 )"		3263684	1					
ANR	3264318	Callee	c -> sub_motion_search		3263684	0					
ANR	3264319	PtrMemberAccess	c -> sub_motion_search		3263684	0					
ANR	3264320	Identifier	c		3263684	0					
ANR	3264321	Identifier	sub_motion_search		3263684	1					
ANR	3264322	ArgumentList	s		3263684	1					
ANR	3264323	Argument	s		3263684	0					
ANR	3264324	Identifier	s		3263684	0					
ANR	3264325	Argument	& mx		3263684	1					
ANR	3264326	UnaryOperationExpression	& mx		3263684	0					
ANR	3264327	UnaryOperator	&		3263684	0					
ANR	3264328	Identifier	mx		3263684	1					
ANR	3264329	Argument	& my		3263684	2					
ANR	3264330	UnaryOperationExpression	& my		3263684	0					
ANR	3264331	UnaryOperator	&		3263684	0					
ANR	3264332	Identifier	my		3263684	1					
ANR	3264333	Argument	dmin		3263684	3					
ANR	3264334	Identifier	dmin		3263684	0					
ANR	3264335	Argument	0		3263684	4					
ANR	3264336	PrimaryExpression	0		3263684	0					
ANR	3264337	Argument	ref_index		3263684	5					
ANR	3264338	Identifier	ref_index		3263684	0					
ANR	3264339	Argument	0		3263684	6					
ANR	3264340	PrimaryExpression	0		3263684	0					
ANR	3264341	Argument	16		3263684	7					
ANR	3264342	PrimaryExpression	16		3263684	0					
ANR	3264343	IfStatement	if ( c -> avctx -> me_sub_cmp != c -> avctx -> mb_cmp && ! c -> skip )		3263684	22					
ANR	3264344	Condition	c -> avctx -> me_sub_cmp != c -> avctx -> mb_cmp && ! c -> skip	165:7:3083:3134	3263684	0	True				
ANR	3264345	AndExpression	c -> avctx -> me_sub_cmp != c -> avctx -> mb_cmp && ! c -> skip		3263684	0		&&			
ANR	3264346	EqualityExpression	c -> avctx -> me_sub_cmp != c -> avctx -> mb_cmp		3263684	0		!=			
ANR	3264347	PtrMemberAccess	c -> avctx -> me_sub_cmp		3263684	0					
ANR	3264348	PtrMemberAccess	c -> avctx		3263684	0					
ANR	3264349	Identifier	c		3263684	0					
ANR	3264350	Identifier	avctx		3263684	1					
ANR	3264351	Identifier	me_sub_cmp		3263684	1					
ANR	3264352	PtrMemberAccess	c -> avctx -> mb_cmp		3263684	1					
ANR	3264353	PtrMemberAccess	c -> avctx		3263684	0					
ANR	3264354	Identifier	c		3263684	0					
ANR	3264355	Identifier	avctx		3263684	1					
ANR	3264356	Identifier	mb_cmp		3263684	1					
ANR	3264357	UnaryOperationExpression	! c -> skip		3263684	1					
ANR	3264358	UnaryOperator	!		3263684	0					
ANR	3264359	PtrMemberAccess	c -> skip		3263684	1					
ANR	3264360	Identifier	c		3263684	0					
ANR	3264361	Identifier	skip		3263684	1					
ANR	3264362	ExpressionStatement	"dmin = get_mb_score ( s , mx , my , 0 , ref_index )"	167:8:3146:3189	3263684	1	True				
ANR	3264363	AssignmentExpression	"dmin = get_mb_score ( s , mx , my , 0 , ref_index )"		3263684	0		=			
ANR	3264364	Identifier	dmin		3263684	0					
ANR	3264365	CallExpression	"get_mb_score ( s , mx , my , 0 , ref_index )"		3263684	1					
ANR	3264366	Callee	get_mb_score		3263684	0					
ANR	3264367	Identifier	get_mb_score		3263684	0					
ANR	3264368	ArgumentList	s		3263684	1					
ANR	3264369	Argument	s		3263684	0					
ANR	3264370	Identifier	s		3263684	0					
ANR	3264371	Argument	mx		3263684	1					
ANR	3264372	Identifier	mx		3263684	0					
ANR	3264373	Argument	my		3263684	2					
ANR	3264374	Identifier	my		3263684	0					
ANR	3264375	Argument	0		3263684	3					
ANR	3264376	PrimaryExpression	0		3263684	0					
ANR	3264377	Argument	ref_index		3263684	4					
ANR	3264378	Identifier	ref_index		3263684	0					
ANR	3264379	ExpressionStatement	mv_table [ mot_xy ] [ 0 ] = mx	175:4:3305:3328	3263684	23	True				
ANR	3264380	AssignmentExpression	mv_table [ mot_xy ] [ 0 ] = mx		3263684	0		=			
ANR	3264381	ArrayIndexing	mv_table [ mot_xy ] [ 0 ]		3263684	0					
ANR	3264382	ArrayIndexing	mv_table [ mot_xy ]		3263684	0					
ANR	3264383	Identifier	mv_table		3263684	0					
ANR	3264384	Identifier	mot_xy		3263684	1					
ANR	3264385	PrimaryExpression	0		3263684	1					
ANR	3264386	Identifier	mx		3263684	1					
ANR	3264387	ExpressionStatement	mv_table [ mot_xy ] [ 1 ] = my	177:4:3335:3358	3263684	24	True				
ANR	3264388	AssignmentExpression	mv_table [ mot_xy ] [ 1 ] = my		3263684	0		=			
ANR	3264389	ArrayIndexing	mv_table [ mot_xy ] [ 1 ]		3263684	0					
ANR	3264390	ArrayIndexing	mv_table [ mot_xy ]		3263684	0					
ANR	3264391	Identifier	mv_table		3263684	0					
ANR	3264392	Identifier	mot_xy		3263684	1					
ANR	3264393	PrimaryExpression	1		3263684	1					
ANR	3264394	Identifier	my		3263684	1					
ANR	3264395	ReturnStatement	return dmin ;	181:4:3367:3378	3263684	25	True				
ANR	3264396	Identifier	dmin		3263684	0					
ANR	3264397	ReturnType	static int		3263684	1					
ANR	3264398	Identifier	ff_estimate_motion_b		3263684	2					
ANR	3264399	ParameterList	"MpegEncContext * s , int mb_x , int mb_y , int16_t ( * mv_table ) [ 2 ] , int ref_index , int f_code"		3263684	3					
ANR	3264400	Parameter	MpegEncContext * s	1:32:32:49	3263684	0	True				
ANR	3264401	ParameterType	MpegEncContext *		3263684	0					
ANR	3264402	Identifier	s		3263684	1					
ANR	3264403	Parameter	int mb_x	3:23:76:83	3263684	1	True				
ANR	3264404	ParameterType	int		3263684	0					
ANR	3264405	Identifier	mb_x		3263684	1					
ANR	3264406	Parameter	int mb_y	3:33:86:93	3263684	2	True				
ANR	3264407	ParameterType	int		3263684	0					
ANR	3264408	Identifier	mb_y		3263684	1					
ANR	3264409	Parameter	int16_t ( * mv_table ) [ 2 ]	3:43:96:117	3263684	3	True				
ANR	3264410	ParameterType	([ 2 ] int16_t) *		3263684	0					
ANR	3264411	Identifier	mv_table		3263684	1					
ANR	3264412	Parameter	int ref_index	3:67:120:132	3263684	4	True				
ANR	3264413	ParameterType	int		3263684	0					
ANR	3264414	Identifier	ref_index		3263684	1					
ANR	3264415	Parameter	int f_code	3:82:135:144	3263684	5	True				
ANR	3264416	ParameterType	int		3263684	0					
ANR	3264417	Identifier	f_code		3263684	1					
ANR	3264418	CFGEntryNode	ENTRY		3263684		True				
ANR	3264419	CFGExitNode	EXIT		3263684		True				
ANR	3264420	Symbol	* P_TOPRIGHT		3263684						
ANR	3264421	Symbol	ff_epzs_motion_search		3263684						
ANR	3264422	Symbol	ref_index		3263684						
ANR	3264423	Symbol	shift		3263684						
ANR	3264424	Symbol	P_TOPRIGHT		3263684						
ANR	3264425	Symbol	c -> skip		3263684						
ANR	3264426	Symbol	* mot_xy		3263684						
ANR	3264427	Symbol	mv_table		3263684						
ANR	3264428	Symbol	mot_stride		3263684						
ANR	3264429	Symbol	c -> mb_penalty_factor		3263684						
ANR	3264430	Symbol	mot_xy		3263684						
ANR	3264431	Symbol	c -> current_mv_penalty		3263684						
ANR	3264432	Symbol	* * mot_xy		3263684						
ANR	3264433	Symbol	c -> mv_penalty		3263684						
ANR	3264434	Symbol	* P_TOP		3263684						
ANR	3264435	Symbol	* * mv_table		3263684						
ANR	3264436	Symbol	MAX_MV		3263684						
ANR	3264437	Symbol	* mot_stride		3263684						
ANR	3264438	Symbol	c -> pred_y		3263684						
ANR	3264439	Symbol	c -> pred_x		3263684						
ANR	3264440	Symbol	* * c		3263684						
ANR	3264441	Symbol	* mv_table		3263684						
ANR	3264442	Symbol	s -> p_mv_table		3263684						
ANR	3264443	Symbol	mv_scale		3263684						
ANR	3264444	Symbol	c -> sub_penalty_factor		3263684						
ANR	3264445	Symbol	mx		3263684						
ANR	3264446	Symbol	my		3263684						
ANR	3264447	Symbol	get_penalty_factor		3263684						
ANR	3264448	Symbol	* * mot_stride		3263684						
ANR	3264449	Symbol	phods_motion_search		3263684						
ANR	3264450	Symbol	c -> avctx -> mb_cmp		3263684						
ANR	3264451	Symbol	full_motion_search		3263684						
ANR	3264452	Symbol	s -> pb_time		3263684						
ANR	3264453	Symbol	get_mb_score		3263684						
ANR	3264454	Symbol	c -> avctx		3263684						
ANR	3264455	Symbol	* P_MEDIAN		3263684						
ANR	3264456	Symbol	s -> me_method		3263684						
ANR	3264457	Symbol	s -> lambda		3263684						
ANR	3264458	Symbol	c -> ymax		3263684						
ANR	3264459	Symbol	dmin		3263684						
ANR	3264460	Symbol	s -> first_slice_line		3263684						
ANR	3264461	Symbol	s -> pp_time		3263684						
ANR	3264462	Symbol	* c -> avctx		3263684						
ANR	3264463	Symbol	P_MEDIAN		3263684						
ANR	3264464	Symbol	s -> mb_stride		3263684						
ANR	3264465	Symbol	range		3263684						
ANR	3264466	Symbol	* c -> mv_penalty		3263684						
ANR	3264467	Symbol	P		3263684						
ANR	3264468	Symbol	f_code		3263684						
ANR	3264469	Symbol	c -> avctx -> me_sub_cmp		3263684						
ANR	3264470	Symbol	P_TOP		3263684						
ANR	3264471	Symbol	* P_LEFT		3263684						
ANR	3264472	Symbol	* P		3263684						
ANR	3264473	Symbol	mid_pred		3263684						
ANR	3264474	Symbol	mv_penalty		3263684						
ANR	3264475	Symbol	s -> b_forw_mv_table		3263684						
ANR	3264476	Symbol	c -> xmax		3263684						
ANR	3264477	Symbol	c		3263684						
ANR	3264478	Symbol	ref_picture		3263684						
ANR	3264479	Symbol	s -> quarter_sample		3263684						
ANR	3264480	Symbol	c -> avctx -> me_cmp		3263684						
ANR	3264481	Symbol	& s -> me		3263684						
ANR	3264482	Symbol	* f_code		3263684						
ANR	3264483	Symbol	* c		3263684						
ANR	3264484	Symbol	c -> xmin		3263684						
ANR	3264485	Symbol	log_motion_search		3263684						
ANR	3264486	Symbol	s		3263684						
ANR	3264487	Symbol	s -> lambda2		3263684						
ANR	3264488	Symbol	c -> penalty_factor		3263684						
ANR	3264489	Symbol	& mx		3263684						
ANR	3264490	Symbol	P_LEFT		3263684						
ANR	3264491	Symbol	c -> sub_motion_search		3263684						
ANR	3264492	Symbol	& my		3263684						
ANR	3264493	Symbol	mb_y		3263684						
ANR	3264494	Symbol	mb_x		3263684						
ANR	3264495	Symbol	* s		3263684						
