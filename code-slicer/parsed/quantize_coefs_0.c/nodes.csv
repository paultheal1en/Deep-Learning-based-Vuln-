command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7181580	File	/home/p4ultr4n/workplace/ReVeal/raw_code/quantize_coefs_0.c								
ANR	7181581	Function	quantize_coefs	1:0:0:534							
ANR	7181582	FunctionDef	"quantize_coefs (double * coef , int * idx , float * lpc , int order)"		7181581	0					
ANR	7181583	CompoundStatement		3:0:74:534	7181581	0					
ANR	7181584	IdentifierDeclStatement	int i ;	5:4:81:86	7181581	0	True				
ANR	7181585	IdentifierDecl	i		7181581	0					
ANR	7181586	IdentifierDeclType	int		7181581	0					
ANR	7181587	Identifier	i		7181581	1					
ANR	7181588	IdentifierDeclStatement	uint8_t u_coef ;	7:4:93:107	7181581	1	True				
ANR	7181589	IdentifierDecl	u_coef		7181581	0					
ANR	7181590	IdentifierDeclType	uint8_t		7181581	0					
ANR	7181591	Identifier	u_coef		7181581	1					
ANR	7181592	IdentifierDeclStatement	const float * quant_arr = tns_tmp2_map [ TNS_Q_BITS == 4 ] ;	9:4:114:168	7181581	2	True				
ANR	7181593	IdentifierDecl	* quant_arr = tns_tmp2_map [ TNS_Q_BITS == 4 ]		7181581	0					
ANR	7181594	IdentifierDeclType	const float *		7181581	0					
ANR	7181595	Identifier	quant_arr		7181581	1					
ANR	7181596	AssignmentExpression	* quant_arr = tns_tmp2_map [ TNS_Q_BITS == 4 ]		7181581	2		=			
ANR	7181597	Identifier	quant_arr		7181581	0					
ANR	7181598	ArrayIndexing	tns_tmp2_map [ TNS_Q_BITS == 4 ]		7181581	1					
ANR	7181599	Identifier	tns_tmp2_map		7181581	0					
ANR	7181600	EqualityExpression	TNS_Q_BITS == 4		7181581	1		==			
ANR	7181601	Identifier	TNS_Q_BITS		7181581	0					
ANR	7181602	PrimaryExpression	4		7181581	1					
ANR	7181603	IdentifierDeclStatement	const double iqfac_p = ( ( 1 << ( TNS_Q_BITS - 1 ) ) - 0.5 ) / ( M_PI / 2.0 ) ;	11:4:175:238	7181581	3	True				
ANR	7181604	IdentifierDecl	iqfac_p = ( ( 1 << ( TNS_Q_BITS - 1 ) ) - 0.5 ) / ( M_PI / 2.0 )		7181581	0					
ANR	7181605	IdentifierDeclType	const double		7181581	0					
ANR	7181606	Identifier	iqfac_p		7181581	1					
ANR	7181607	AssignmentExpression	iqfac_p = ( ( 1 << ( TNS_Q_BITS - 1 ) ) - 0.5 ) / ( M_PI / 2.0 )		7181581	2		=			
ANR	7181608	Identifier	iqfac_p		7181581	0					
ANR	7181609	MultiplicativeExpression	( ( 1 << ( TNS_Q_BITS - 1 ) ) - 0.5 ) / ( M_PI / 2.0 )		7181581	1		/			
ANR	7181610	AdditiveExpression	( 1 << ( TNS_Q_BITS - 1 ) ) - 0.5		7181581	0		-			
ANR	7181611	ShiftExpression	1 << ( TNS_Q_BITS - 1 )		7181581	0		<<			
ANR	7181612	PrimaryExpression	1		7181581	0					
ANR	7181613	AdditiveExpression	TNS_Q_BITS - 1		7181581	1		-			
ANR	7181614	Identifier	TNS_Q_BITS		7181581	0					
ANR	7181615	PrimaryExpression	1		7181581	1					
ANR	7181616	PrimaryExpression	0.5		7181581	1					
ANR	7181617	MultiplicativeExpression	M_PI / 2.0		7181581	1		/			
ANR	7181618	Identifier	M_PI		7181581	0					
ANR	7181619	PrimaryExpression	2.0		7181581	1					
ANR	7181620	IdentifierDeclStatement	const double iqfac_m = ( ( 1 << ( TNS_Q_BITS - 1 ) ) + 0.5 ) / ( M_PI / 2.0 ) ;	13:4:245:308	7181581	4	True				
ANR	7181621	IdentifierDecl	iqfac_m = ( ( 1 << ( TNS_Q_BITS - 1 ) ) + 0.5 ) / ( M_PI / 2.0 )		7181581	0					
ANR	7181622	IdentifierDeclType	const double		7181581	0					
ANR	7181623	Identifier	iqfac_m		7181581	1					
ANR	7181624	AssignmentExpression	iqfac_m = ( ( 1 << ( TNS_Q_BITS - 1 ) ) + 0.5 ) / ( M_PI / 2.0 )		7181581	2		=			
ANR	7181625	Identifier	iqfac_m		7181581	0					
ANR	7181626	MultiplicativeExpression	( ( 1 << ( TNS_Q_BITS - 1 ) ) + 0.5 ) / ( M_PI / 2.0 )		7181581	1		/			
ANR	7181627	AdditiveExpression	( 1 << ( TNS_Q_BITS - 1 ) ) + 0.5		7181581	0		+			
ANR	7181628	ShiftExpression	1 << ( TNS_Q_BITS - 1 )		7181581	0		<<			
ANR	7181629	PrimaryExpression	1		7181581	0					
ANR	7181630	AdditiveExpression	TNS_Q_BITS - 1		7181581	1		-			
ANR	7181631	Identifier	TNS_Q_BITS		7181581	0					
ANR	7181632	PrimaryExpression	1		7181581	1					
ANR	7181633	PrimaryExpression	0.5		7181581	1					
ANR	7181634	MultiplicativeExpression	M_PI / 2.0		7181581	1		/			
ANR	7181635	Identifier	M_PI		7181581	0					
ANR	7181636	PrimaryExpression	2.0		7181581	1					
ANR	7181637	ForStatement	for ( i = 0 ; i < order ; i ++ )		7181581	5					
ANR	7181638	ForInit	i = 0 ;	15:9:320:325	7181581	0	True				
ANR	7181639	AssignmentExpression	i = 0		7181581	0		=			
ANR	7181640	Identifier	i		7181581	0					
ANR	7181641	PrimaryExpression	0		7181581	1					
ANR	7181642	Condition	i < order	15:16:327:335	7181581	1	True				
ANR	7181643	RelationalExpression	i < order		7181581	0		<			
ANR	7181644	Identifier	i		7181581	0					
ANR	7181645	Identifier	order		7181581	1					
ANR	7181646	PostIncDecOperationExpression	i ++	15:27:338:340	7181581	2	True				
ANR	7181647	Identifier	i		7181581	0					
ANR	7181648	IncDec	++		7181581	1					
ANR	7181649	CompoundStatement		13:32:268:268	7181581	3					
ANR	7181650	ExpressionStatement	idx [ i ] = ceilf ( asin ( coef [ i ] ) * ( ( coef [ i ] >= 0 ) ? iqfac_p : iqfac_m ) )	17:8:354:420	7181581	0	True				
ANR	7181651	AssignmentExpression	idx [ i ] = ceilf ( asin ( coef [ i ] ) * ( ( coef [ i ] >= 0 ) ? iqfac_p : iqfac_m ) )		7181581	0		=			
ANR	7181652	ArrayIndexing	idx [ i ]		7181581	0					
ANR	7181653	Identifier	idx		7181581	0					
ANR	7181654	Identifier	i		7181581	1					
ANR	7181655	CallExpression	ceilf ( asin ( coef [ i ] ) * ( ( coef [ i ] >= 0 ) ? iqfac_p : iqfac_m ) )		7181581	1					
ANR	7181656	Callee	ceilf		7181581	0					
ANR	7181657	Identifier	ceilf		7181581	0					
ANR	7181658	ArgumentList	asin ( coef [ i ] ) * ( ( coef [ i ] >= 0 ) ? iqfac_p : iqfac_m )		7181581	1					
ANR	7181659	Argument	asin ( coef [ i ] ) * ( ( coef [ i ] >= 0 ) ? iqfac_p : iqfac_m )		7181581	0					
ANR	7181660	MultiplicativeExpression	asin ( coef [ i ] ) * ( ( coef [ i ] >= 0 ) ? iqfac_p : iqfac_m )		7181581	0		*			
ANR	7181661	CallExpression	asin ( coef [ i ] )		7181581	0					
ANR	7181662	Callee	asin		7181581	0					
ANR	7181663	Identifier	asin		7181581	0					
ANR	7181664	ArgumentList	coef [ i ]		7181581	1					
ANR	7181665	Argument	coef [ i ]		7181581	0					
ANR	7181666	ArrayIndexing	coef [ i ]		7181581	0					
ANR	7181667	Identifier	coef		7181581	0					
ANR	7181668	Identifier	i		7181581	1					
ANR	7181669	ConditionalExpression	( coef [ i ] >= 0 ) ? iqfac_p : iqfac_m		7181581	1					
ANR	7181670	Condition	coef [ i ] >= 0		7181581	0					
ANR	7181671	RelationalExpression	coef [ i ] >= 0		7181581	0		>=			
ANR	7181672	ArrayIndexing	coef [ i ]		7181581	0					
ANR	7181673	Identifier	coef		7181581	0					
ANR	7181674	Identifier	i		7181581	1					
ANR	7181675	PrimaryExpression	0		7181581	1					
ANR	7181676	Identifier	iqfac_p		7181581	1					
ANR	7181677	Identifier	iqfac_m		7181581	2					
ANR	7181678	ExpressionStatement	u_coef = ( idx [ i ] ) & ( ~ ( ~0 << TNS_Q_BITS ) )	19:8:431:468	7181581	1	True				
ANR	7181679	AssignmentExpression	u_coef = ( idx [ i ] ) & ( ~ ( ~0 << TNS_Q_BITS ) )		7181581	0		=			
ANR	7181680	Identifier	u_coef		7181581	0					
ANR	7181681	BitAndExpression	( idx [ i ] ) & ( ~ ( ~0 << TNS_Q_BITS ) )		7181581	1		&			
ANR	7181682	ArrayIndexing	idx [ i ]		7181581	0					
ANR	7181683	Identifier	idx		7181581	0					
ANR	7181684	Identifier	i		7181581	1					
ANR	7181685	UnaryOperationExpression	~ ( ~0 << TNS_Q_BITS )		7181581	1					
ANR	7181686	UnaryOperator	~		7181581	0					
ANR	7181687	ShiftExpression	~0 << TNS_Q_BITS		7181581	1		<<			
ANR	7181688	Identifier	~0		7181581	0					
ANR	7181689	Identifier	TNS_Q_BITS		7181581	1					
ANR	7181690	ExpressionStatement	lpc [ i ] = quant_arr [ u_coef ]	21:8:479:505	7181581	2	True				
ANR	7181691	AssignmentExpression	lpc [ i ] = quant_arr [ u_coef ]		7181581	0		=			
ANR	7181692	ArrayIndexing	lpc [ i ]		7181581	0					
ANR	7181693	Identifier	lpc		7181581	0					
ANR	7181694	Identifier	i		7181581	1					
ANR	7181695	ArrayIndexing	quant_arr [ u_coef ]		7181581	1					
ANR	7181696	Identifier	quant_arr		7181581	0					
ANR	7181697	Identifier	u_coef		7181581	1					
ANR	7181698	ReturnStatement	return order ;	25:4:519:531	7181581	6	True				
ANR	7181699	Identifier	order		7181581	0					
ANR	7181700	ReturnType	static int		7181581	1					
ANR	7181701	Identifier	quantize_coefs		7181581	2					
ANR	7181702	ParameterList	"double * coef , int * idx , float * lpc , int order"		7181581	3					
ANR	7181703	Parameter	double * coef	1:26:26:37	7181581	0	True				
ANR	7181704	ParameterType	double *		7181581	0					
ANR	7181705	Identifier	coef		7181581	1					
ANR	7181706	Parameter	int * idx	1:40:40:47	7181581	1	True				
ANR	7181707	ParameterType	int *		7181581	0					
ANR	7181708	Identifier	idx		7181581	1					
ANR	7181709	Parameter	float * lpc	1:50:50:59	7181581	2	True				
ANR	7181710	ParameterType	float *		7181581	0					
ANR	7181711	Identifier	lpc		7181581	1					
ANR	7181712	Parameter	int order	1:62:62:70	7181581	3	True				
ANR	7181713	ParameterType	int		7181581	0					
ANR	7181714	Identifier	order		7181581	1					
ANR	7181715	CFGEntryNode	ENTRY		7181581		True				
ANR	7181716	CFGExitNode	EXIT		7181581		True				
ANR	7181717	Symbol	* TNS_Q_BITS		7181581						
ANR	7181718	Symbol	iqfac_m		7181581						
ANR	7181719	Symbol	coef		7181581						
ANR	7181720	Symbol	ceilf		7181581						
ANR	7181721	Symbol	* u_coef		7181581						
ANR	7181722	Symbol	u_coef		7181581						
ANR	7181723	Symbol	i		7181581						
ANR	7181724	Symbol	* lpc		7181581						
ANR	7181725	Symbol	TNS_Q_BITS		7181581						
ANR	7181726	Symbol	M_PI		7181581						
ANR	7181727	Symbol	* tns_tmp2_map		7181581						
ANR	7181728	Symbol	~0		7181581						
ANR	7181729	Symbol	* i		7181581						
ANR	7181730	Symbol	* idx		7181581						
ANR	7181731	Symbol	quant_arr		7181581						
ANR	7181732	Symbol	asin		7181581						
ANR	7181733	Symbol	idx		7181581						
ANR	7181734	Symbol	tns_tmp2_map		7181581						
ANR	7181735	Symbol	iqfac_p		7181581						
ANR	7181736	Symbol	* quant_arr		7181581						
ANR	7181737	Symbol	lpc		7181581						
ANR	7181738	Symbol	* coef		7181581						
ANR	7181739	Symbol	order		7181581						
