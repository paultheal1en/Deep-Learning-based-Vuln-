command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6107685	File	/home/p4ultr4n/workplace/ReVeal/raw_code/object_dynamic_cast_0.c								
ANR	6107686	Function	object_dynamic_cast	1:0:0:783							
ANR	6107687	FunctionDef	"object_dynamic_cast (Object * obj , const char * typename)"		6107686	0					
ANR	6107688	CompoundStatement		3:0:64:783	6107686	0					
ANR	6107689	IdentifierDeclStatement	GSList * i ;	5:4:71:80	6107686	0	True				
ANR	6107690	IdentifierDecl	* i		6107686	0					
ANR	6107691	IdentifierDeclType	GSList *		6107686	0					
ANR	6107692	Identifier	i		6107686	1					
ANR	6107693	IfStatement	"if ( object_is_type ( obj , typename ) )"		6107686	1					
ANR	6107694	Condition	"object_is_type ( obj , typename )"	11:8:143:171	6107686	0	True				
ANR	6107695	CallExpression	"object_is_type ( obj , typename )"		6107686	0					
ANR	6107696	Callee	object_is_type		6107686	0					
ANR	6107697	Identifier	object_is_type		6107686	0					
ANR	6107698	ArgumentList	obj		6107686	1					
ANR	6107699	Argument	obj		6107686	0					
ANR	6107700	Identifier	obj		6107686	0					
ANR	6107701	Argument	typename		6107686	1					
ANR	6107702	Identifier	typename		6107686	0					
ANR	6107703	CompoundStatement		9:39:109:109	6107686	1					
ANR	6107704	ReturnStatement	return obj ;	13:8:185:195	6107686	0	True				
ANR	6107705	Identifier	obj		6107686	0					
ANR	6107706	ForStatement	for ( i = obj -> interfaces ; i ; i = i -> next )		6107686	2					
ANR	6107707	ForInit	i = obj -> interfaces ;	21:9:269:288	6107686	0	True				
ANR	6107708	AssignmentExpression	i = obj -> interfaces		6107686	0		=			
ANR	6107709	Identifier	i		6107686	0					
ANR	6107710	PtrMemberAccess	obj -> interfaces		6107686	1					
ANR	6107711	Identifier	obj		6107686	0					
ANR	6107712	Identifier	interfaces		6107686	1					
ANR	6107713	Condition	i	21:30:290:290	6107686	1	True				
ANR	6107714	Identifier	i		6107686	0					
ANR	6107715	AssignmentExpression	i = i -> next	21:33:293:303	6107686	2	True	=			
ANR	6107716	Identifier	i		6107686	0					
ANR	6107717	PtrMemberAccess	i -> next		6107686	1					
ANR	6107718	Identifier	i		6107686	0					
ANR	6107719	Identifier	next		6107686	1					
ANR	6107720	CompoundStatement		21:8:252:278	6107686	3					
ANR	6107721	IdentifierDeclStatement	Interface * iface = i -> data ;	23:8:317:343	6107686	0	True				
ANR	6107722	IdentifierDecl	* iface = i -> data		6107686	0					
ANR	6107723	IdentifierDeclType	Interface *		6107686	0					
ANR	6107724	Identifier	iface		6107686	1					
ANR	6107725	AssignmentExpression	* iface = i -> data		6107686	2		=			
ANR	6107726	Identifier	iface		6107686	0					
ANR	6107727	PtrMemberAccess	i -> data		6107686	1					
ANR	6107728	Identifier	i		6107686	0					
ANR	6107729	Identifier	data		6107686	1					
ANR	6107730	IfStatement	"if ( object_is_type ( OBJECT ( iface ) , typename ) )"		6107686	1					
ANR	6107731	Condition	"object_is_type ( OBJECT ( iface ) , typename )"	27:12:360:398	6107686	0	True				
ANR	6107732	CallExpression	"object_is_type ( OBJECT ( iface ) , typename )"		6107686	0					
ANR	6107733	Callee	object_is_type		6107686	0					
ANR	6107734	Identifier	object_is_type		6107686	0					
ANR	6107735	ArgumentList	OBJECT ( iface )		6107686	1					
ANR	6107736	Argument	OBJECT ( iface )		6107686	0					
ANR	6107737	CallExpression	OBJECT ( iface )		6107686	0					
ANR	6107738	Callee	OBJECT		6107686	0					
ANR	6107739	Identifier	OBJECT		6107686	0					
ANR	6107740	ArgumentList	iface		6107686	1					
ANR	6107741	Argument	iface		6107686	0					
ANR	6107742	Identifier	iface		6107686	0					
ANR	6107743	Argument	typename		6107686	1					
ANR	6107744	Identifier	typename		6107686	0					
ANR	6107745	CompoundStatement		25:53:336:336	6107686	1					
ANR	6107746	ReturnStatement	return OBJECT ( iface ) ;	29:12:416:436	6107686	0	True				
ANR	6107747	CallExpression	OBJECT ( iface )		6107686	0					
ANR	6107748	Callee	OBJECT		6107686	0					
ANR	6107749	Identifier	OBJECT		6107686	0					
ANR	6107750	ArgumentList	iface		6107686	1					
ANR	6107751	Argument	iface		6107686	0					
ANR	6107752	Identifier	iface		6107686	0					
ANR	6107753	IfStatement	"if ( object_is_type ( obj , TYPE_INTERFACE ) )"		6107686	3					
ANR	6107754	Condition	"object_is_type ( obj , TYPE_INTERFACE )"	41:8:574:608	6107686	0	True				
ANR	6107755	CallExpression	"object_is_type ( obj , TYPE_INTERFACE )"		6107686	0					
ANR	6107756	Callee	object_is_type		6107686	0					
ANR	6107757	Identifier	object_is_type		6107686	0					
ANR	6107758	ArgumentList	obj		6107686	1					
ANR	6107759	Argument	obj		6107686	0					
ANR	6107760	Identifier	obj		6107686	0					
ANR	6107761	Argument	TYPE_INTERFACE		6107686	1					
ANR	6107762	Identifier	TYPE_INTERFACE		6107686	0					
ANR	6107763	CompoundStatement		41:8:557:590	6107686	1					
ANR	6107764	IdentifierDeclStatement	Interface * iface = INTERFACE ( obj ) ;	43:8:622:655	6107686	0	True				
ANR	6107765	IdentifierDecl	* iface = INTERFACE ( obj )		6107686	0					
ANR	6107766	IdentifierDeclType	Interface *		6107686	0					
ANR	6107767	Identifier	iface		6107686	1					
ANR	6107768	AssignmentExpression	* iface = INTERFACE ( obj )		6107686	2		=			
ANR	6107769	Identifier	iface		6107686	0					
ANR	6107770	CallExpression	INTERFACE ( obj )		6107686	1					
ANR	6107771	Callee	INTERFACE		6107686	0					
ANR	6107772	Identifier	INTERFACE		6107686	0					
ANR	6107773	ArgumentList	obj		6107686	1					
ANR	6107774	Argument	obj		6107686	0					
ANR	6107775	Identifier	obj		6107686	0					
ANR	6107776	IfStatement	"if ( object_is_type ( iface -> obj , typename ) )"		6107686	1					
ANR	6107777	Condition	"object_is_type ( iface -> obj , typename )"	47:12:672:707	6107686	0	True				
ANR	6107778	CallExpression	"object_is_type ( iface -> obj , typename )"		6107686	0					
ANR	6107779	Callee	object_is_type		6107686	0					
ANR	6107780	Identifier	object_is_type		6107686	0					
ANR	6107781	ArgumentList	iface -> obj		6107686	1					
ANR	6107782	Argument	iface -> obj		6107686	0					
ANR	6107783	PtrMemberAccess	iface -> obj		6107686	0					
ANR	6107784	Identifier	iface		6107686	0					
ANR	6107785	Identifier	obj		6107686	1					
ANR	6107786	Argument	typename		6107686	1					
ANR	6107787	Identifier	typename		6107686	0					
ANR	6107788	CompoundStatement		45:50:645:645	6107686	1					
ANR	6107789	ReturnStatement	return iface -> obj ;	49:12:725:742	6107686	0	True				
ANR	6107790	PtrMemberAccess	iface -> obj		6107686	0					
ANR	6107791	Identifier	iface		6107686	0					
ANR	6107792	Identifier	obj		6107686	1					
ANR	6107793	ReturnStatement	return NULL ;	57:4:769:780	6107686	4	True				
ANR	6107794	Identifier	NULL		6107686	0					
ANR	6107795	ReturnType	Object *		6107686	1					
ANR	6107796	Identifier	object_dynamic_cast		6107686	2					
ANR	6107797	ParameterList	"Object * obj , const char * typename"		6107686	3					
ANR	6107798	Parameter	Object * obj	1:28:28:38	6107686	0	True				
ANR	6107799	ParameterType	Object *		6107686	0					
ANR	6107800	Identifier	obj		6107686	1					
ANR	6107801	Parameter	const char * typename	1:41:41:60	6107686	1	True				
ANR	6107802	ParameterType	const char *		6107686	0					
ANR	6107803	Identifier	typename		6107686	1					
ANR	6107804	CFGEntryNode	ENTRY		6107686		True				
ANR	6107805	CFGExitNode	EXIT		6107686		True				
ANR	6107806	Symbol	* obj		6107686						
ANR	6107807	Symbol	NULL		6107686						
ANR	6107808	Symbol	* iface		6107686						
ANR	6107809	Symbol	i		6107686						
ANR	6107810	Symbol	iface -> obj		6107686						
ANR	6107811	Symbol	OBJECT		6107686						
ANR	6107812	Symbol	obj -> interfaces		6107686						
ANR	6107813	Symbol	i -> data		6107686						
ANR	6107814	Symbol	iface		6107686						
ANR	6107815	Symbol	* i		6107686						
ANR	6107816	Symbol	INTERFACE		6107686						
ANR	6107817	Symbol	obj		6107686						
ANR	6107818	Symbol	i -> next		6107686						
ANR	6107819	Symbol	TYPE_INTERFACE		6107686						
ANR	6107820	Symbol	typename		6107686						
ANR	6107821	Symbol	object_is_type		6107686						
