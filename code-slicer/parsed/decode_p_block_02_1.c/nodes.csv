command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1984440	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_p_block_02_1.c								
ANR	1984441	Function	decode_p_block	1:0:0:2793							
ANR	1984442	FunctionDef	"decode_p_block (FourXContext * f , uint16_t * dst , uint16_t * src , int log2w , int log2h , int stride)"		1984441	0					
ANR	1984443	CompoundStatement		5:0:135:2793	1984441	0					
ANR	1984444	IdentifierDeclStatement	const int index = size2index [ log2h ] [ log2w ] ;	7:4:142:184	1984441	0	True				
ANR	1984445	IdentifierDecl	index = size2index [ log2h ] [ log2w ]		1984441	0					
ANR	1984446	IdentifierDeclType	const int		1984441	0					
ANR	1984447	Identifier	index		1984441	1					
ANR	1984448	AssignmentExpression	index = size2index [ log2h ] [ log2w ]		1984441	2		=			
ANR	1984449	Identifier	index		1984441	0					
ANR	1984450	ArrayIndexing	size2index [ log2h ] [ log2w ]		1984441	1					
ANR	1984451	ArrayIndexing	size2index [ log2h ]		1984441	0					
ANR	1984452	Identifier	size2index		1984441	0					
ANR	1984453	Identifier	log2h		1984441	1					
ANR	1984454	Identifier	log2w		1984441	1					
ANR	1984455	IdentifierDeclStatement	const int h = 1 << log2h ;	9:4:191:219	1984441	1	True				
ANR	1984456	IdentifierDecl	h = 1 << log2h		1984441	0					
ANR	1984457	IdentifierDeclType	const int		1984441	0					
ANR	1984458	Identifier	h		1984441	1					
ANR	1984459	AssignmentExpression	h = 1 << log2h		1984441	2		=			
ANR	1984460	Identifier	h		1984441	0					
ANR	1984461	ShiftExpression	1 << log2h		1984441	1		<<			
ANR	1984462	PrimaryExpression	1		1984441	0					
ANR	1984463	Identifier	log2h		1984441	1					
ANR	1984464	IdentifierDeclStatement	"int code = get_vlc2 ( & f -> gb , block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table , BLOCK_TYPE_VLC_BITS , 1 ) ;"	11:4:226:399	1984441	2	True				
ANR	1984465	IdentifierDecl	"code = get_vlc2 ( & f -> gb , block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table , BLOCK_TYPE_VLC_BITS , 1 )"		1984441	0					
ANR	1984466	IdentifierDeclType	int		1984441	0					
ANR	1984467	Identifier	code		1984441	1					
ANR	1984468	AssignmentExpression	"code = get_vlc2 ( & f -> gb , block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table , BLOCK_TYPE_VLC_BITS , 1 )"		1984441	2		=			
ANR	1984469	Identifier	code		1984441	0					
ANR	1984470	CallExpression	"get_vlc2 ( & f -> gb , block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table , BLOCK_TYPE_VLC_BITS , 1 )"		1984441	1					
ANR	1984471	Callee	get_vlc2		1984441	0					
ANR	1984472	Identifier	get_vlc2		1984441	0					
ANR	1984473	ArgumentList	& f -> gb		1984441	1					
ANR	1984474	Argument	& f -> gb		1984441	0					
ANR	1984475	UnaryOperationExpression	& f -> gb		1984441	0					
ANR	1984476	UnaryOperator	&		1984441	0					
ANR	1984477	PtrMemberAccess	f -> gb		1984441	1					
ANR	1984478	Identifier	f		1984441	0					
ANR	1984479	Identifier	gb		1984441	1					
ANR	1984480	Argument	block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table		1984441	1					
ANR	1984481	MemberAccess	block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table		1984441	0					
ANR	1984482	ArrayIndexing	block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ]		1984441	0					
ANR	1984483	ArrayIndexing	block_type_vlc [ 1 - ( f -> version > 1 ) ]		1984441	0					
ANR	1984484	Identifier	block_type_vlc		1984441	0					
ANR	1984485	AdditiveExpression	1 - ( f -> version > 1 )		1984441	1		-			
ANR	1984486	PrimaryExpression	1		1984441	0					
ANR	1984487	RelationalExpression	f -> version > 1		1984441	1		>			
ANR	1984488	PtrMemberAccess	f -> version		1984441	0					
ANR	1984489	Identifier	f		1984441	0					
ANR	1984490	Identifier	version		1984441	1					
ANR	1984491	PrimaryExpression	1		1984441	1					
ANR	1984492	Identifier	index		1984441	1					
ANR	1984493	Identifier	table		1984441	1					
ANR	1984494	Argument	BLOCK_TYPE_VLC_BITS		1984441	2					
ANR	1984495	Identifier	BLOCK_TYPE_VLC_BITS		1984441	0					
ANR	1984496	Argument	1		1984441	3					
ANR	1984497	PrimaryExpression	1		1984441	0					
ANR	1984498	IdentifierDeclStatement	uint16_t * start = ( uint16_t * ) f -> last_picture -> data [ 0 ] ;	17:4:406:460	1984441	3	True				
ANR	1984499	IdentifierDecl	* start = ( uint16_t * ) f -> last_picture -> data [ 0 ]		1984441	0					
ANR	1984500	IdentifierDeclType	uint16_t *		1984441	0					
ANR	1984501	Identifier	start		1984441	1					
ANR	1984502	AssignmentExpression	* start = ( uint16_t * ) f -> last_picture -> data [ 0 ]		1984441	2		=			
ANR	1984503	Identifier	start		1984441	0					
ANR	1984504	CastExpression	( uint16_t * ) f -> last_picture -> data [ 0 ]		1984441	1					
ANR	1984505	CastTarget	uint16_t *		1984441	0					
ANR	1984506	ArrayIndexing	f -> last_picture -> data [ 0 ]		1984441	1					
ANR	1984507	PtrMemberAccess	f -> last_picture -> data		1984441	0					
ANR	1984508	PtrMemberAccess	f -> last_picture		1984441	0					
ANR	1984509	Identifier	f		1984441	0					
ANR	1984510	Identifier	last_picture		1984441	1					
ANR	1984511	Identifier	data		1984441	1					
ANR	1984512	PrimaryExpression	0		1984441	1					
ANR	1984513	IdentifierDeclStatement	uint16_t * end = start + stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w ) ;	19:4:467:543	1984441	4	True				
ANR	1984514	IdentifierDecl	* end = start + stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w )		1984441	0					
ANR	1984515	IdentifierDeclType	uint16_t *		1984441	0					
ANR	1984516	Identifier	end		1984441	1					
ANR	1984517	AssignmentExpression	* end = start + stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w )		1984441	2		=			
ANR	1984518	Identifier	end		1984441	0					
ANR	1984519	AdditiveExpression	start + stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w )		1984441	1		+			
ANR	1984520	Identifier	start		1984441	0					
ANR	1984521	AdditiveExpression	stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w )		1984441	1		-			
ANR	1984522	MultiplicativeExpression	stride * ( f -> avctx -> height - h + 1 )		1984441	0		*			
ANR	1984523	Identifier	stride		1984441	0					
ANR	1984524	AdditiveExpression	f -> avctx -> height - h + 1		1984441	1		-			
ANR	1984525	PtrMemberAccess	f -> avctx -> height		1984441	0					
ANR	1984526	PtrMemberAccess	f -> avctx		1984441	0					
ANR	1984527	Identifier	f		1984441	0					
ANR	1984528	Identifier	avctx		1984441	1					
ANR	1984529	Identifier	height		1984441	1					
ANR	1984530	AdditiveExpression	h + 1		1984441	1		+			
ANR	1984531	Identifier	h		1984441	0					
ANR	1984532	PrimaryExpression	1		1984441	1					
ANR	1984533	ShiftExpression	1 << log2w		1984441	1		<<			
ANR	1984534	PrimaryExpression	1		1984441	0					
ANR	1984535	Identifier	log2w		1984441	1					
ANR	1984536	IdentifierDeclStatement	int ret ;	21:4:550:557	1984441	5	True				
ANR	1984537	IdentifierDecl	ret		1984441	0					
ANR	1984538	IdentifierDeclType	int		1984441	0					
ANR	1984539	Identifier	ret		1984441	1					
ANR	1984540	IfStatement	if ( code < 0 || code > 6 || log2w < 0 )		1984441	6					
ANR	1984541	Condition	code < 0 || code > 6 || log2w < 0	25:8:570:602	1984441	0	True				
ANR	1984542	OrExpression	code < 0 || code > 6 || log2w < 0		1984441	0		||			
ANR	1984543	RelationalExpression	code < 0		1984441	0		<			
ANR	1984544	Identifier	code		1984441	0					
ANR	1984545	PrimaryExpression	0		1984441	1					
ANR	1984546	OrExpression	code > 6 || log2w < 0		1984441	1		||			
ANR	1984547	RelationalExpression	code > 6		1984441	0		>			
ANR	1984548	Identifier	code		1984441	0					
ANR	1984549	PrimaryExpression	6		1984441	1					
ANR	1984550	RelationalExpression	log2w < 0		1984441	1		<			
ANR	1984551	Identifier	log2w		1984441	0					
ANR	1984552	PrimaryExpression	0		1984441	1					
ANR	1984553	ReturnStatement	return AVERROR_INVALIDDATA ;	27:8:614:640	1984441	1	True				
ANR	1984554	Identifier	AVERROR_INVALIDDATA		1984441	0					
ANR	1984555	IfStatement	if ( code == 0 )		1984441	7					
ANR	1984556	Condition	code == 0	31:8:653:661	1984441	0	True				
ANR	1984557	EqualityExpression	code == 0		1984441	0		==			
ANR	1984558	Identifier	code		1984441	0					
ANR	1984559	PrimaryExpression	0		1984441	1					
ANR	1984560	CompoundStatement		27:19:528:528	1984441	1					
ANR	1984561	ExpressionStatement	src += f -> mv [ bytestream2_get_byte ( & f -> g ) ]	33:8:675:716	1984441	0	True				
ANR	1984562	AssignmentExpression	src += f -> mv [ bytestream2_get_byte ( & f -> g ) ]		1984441	0		+=			
ANR	1984563	Identifier	src		1984441	0					
ANR	1984564	ArrayIndexing	f -> mv [ bytestream2_get_byte ( & f -> g ) ]		1984441	1					
ANR	1984565	PtrMemberAccess	f -> mv		1984441	0					
ANR	1984566	Identifier	f		1984441	0					
ANR	1984567	Identifier	mv		1984441	1					
ANR	1984568	CallExpression	bytestream2_get_byte ( & f -> g )		1984441	1					
ANR	1984569	Callee	bytestream2_get_byte		1984441	0					
ANR	1984570	Identifier	bytestream2_get_byte		1984441	0					
ANR	1984571	ArgumentList	& f -> g		1984441	1					
ANR	1984572	Argument	& f -> g		1984441	0					
ANR	1984573	UnaryOperationExpression	& f -> g		1984441	0					
ANR	1984574	UnaryOperator	&		1984441	0					
ANR	1984575	PtrMemberAccess	f -> g		1984441	1					
ANR	1984576	Identifier	f		1984441	0					
ANR	1984577	Identifier	g		1984441	1					
ANR	1984578	IfStatement	if ( start > src || src > end )		1984441	1					
ANR	1984579	Condition	start > src || src > end	35:12:731:754	1984441	0	True				
ANR	1984580	OrExpression	start > src || src > end		1984441	0		||			
ANR	1984581	RelationalExpression	start > src		1984441	0		>			
ANR	1984582	Identifier	start		1984441	0					
ANR	1984583	Identifier	src		1984441	1					
ANR	1984584	RelationalExpression	src > end		1984441	1		>			
ANR	1984585	Identifier	src		1984441	0					
ANR	1984586	Identifier	end		1984441	1					
ANR	1984587	CompoundStatement		31:38:621:621	1984441	1					
ANR	1984588	ExpressionStatement	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"	37:12:772:821	1984441	0	True				
ANR	1984589	CallExpression	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"		1984441	0					
ANR	1984590	Callee	av_log		1984441	0					
ANR	1984591	Identifier	av_log		1984441	0					
ANR	1984592	ArgumentList	f -> avctx		1984441	1					
ANR	1984593	Argument	f -> avctx		1984441	0					
ANR	1984594	PtrMemberAccess	f -> avctx		1984441	0					
ANR	1984595	Identifier	f		1984441	0					
ANR	1984596	Identifier	avctx		1984441	1					
ANR	1984597	Argument	AV_LOG_ERROR		1984441	1					
ANR	1984598	Identifier	AV_LOG_ERROR		1984441	0					
ANR	1984599	Argument	"""mv out of pic\\n"""		1984441	2					
ANR	1984600	PrimaryExpression	"""mv out of pic\\n"""		1984441	0					
ANR	1984601	ReturnStatement	return AVERROR_INVALIDDATA ;	39:12:836:862	1984441	1	True				
ANR	1984602	Identifier	AVERROR_INVALIDDATA		1984441	0					
ANR	1984603	ExpressionStatement	"mcdc ( dst , src , log2w , h , stride , 1 , 0 )"	43:8:884:922	1984441	2	True				
ANR	1984604	CallExpression	"mcdc ( dst , src , log2w , h , stride , 1 , 0 )"		1984441	0					
ANR	1984605	Callee	mcdc		1984441	0					
ANR	1984606	Identifier	mcdc		1984441	0					
ANR	1984607	ArgumentList	dst		1984441	1					
ANR	1984608	Argument	dst		1984441	0					
ANR	1984609	Identifier	dst		1984441	0					
ANR	1984610	Argument	src		1984441	1					
ANR	1984611	Identifier	src		1984441	0					
ANR	1984612	Argument	log2w		1984441	2					
ANR	1984613	Identifier	log2w		1984441	0					
ANR	1984614	Argument	h		1984441	3					
ANR	1984615	Identifier	h		1984441	0					
ANR	1984616	Argument	stride		1984441	4					
ANR	1984617	Identifier	stride		1984441	0					
ANR	1984618	Argument	1		1984441	5					
ANR	1984619	PrimaryExpression	1		1984441	0					
ANR	1984620	Argument	0		1984441	6					
ANR	1984621	PrimaryExpression	0		1984441	0					
ANR	1984622	ElseStatement	else		1984441	0					
ANR	1984623	IfStatement	if ( code == 1 )		1984441	0					
ANR	1984624	Condition	code == 1	45:15:940:948	1984441	0	True				
ANR	1984625	EqualityExpression	code == 1		1984441	0		==			
ANR	1984626	Identifier	code		1984441	0					
ANR	1984627	PrimaryExpression	1		1984441	1					
ANR	1984628	CompoundStatement		41:26:815:815	1984441	1					
ANR	1984629	ExpressionStatement	log2h --	47:8:962:969	1984441	0	True				
ANR	1984630	PostIncDecOperationExpression	log2h --		1984441	0					
ANR	1984631	Identifier	log2h		1984441	0					
ANR	1984632	IncDec	--		1984441	1					
ANR	1984633	IfStatement	"if ( ( ret = decode_p_block ( f , dst , src , log2w , log2h , stride ) ) < 0 )"		1984441	1					
ANR	1984634	Condition	"( ret = decode_p_block ( f , dst , src , log2w , log2h , stride ) ) < 0"	49:12:984:1044	1984441	0	True				
ANR	1984635	RelationalExpression	"( ret = decode_p_block ( f , dst , src , log2w , log2h , stride ) ) < 0"		1984441	0		<			
ANR	1984636	AssignmentExpression	"ret = decode_p_block ( f , dst , src , log2w , log2h , stride )"		1984441	0		=			
ANR	1984637	Identifier	ret		1984441	0					
ANR	1984638	CallExpression	"decode_p_block ( f , dst , src , log2w , log2h , stride )"		1984441	1					
ANR	1984639	Callee	decode_p_block		1984441	0					
ANR	1984640	Identifier	decode_p_block		1984441	0					
ANR	1984641	ArgumentList	f		1984441	1					
ANR	1984642	Argument	f		1984441	0					
ANR	1984643	Identifier	f		1984441	0					
ANR	1984644	Argument	dst		1984441	1					
ANR	1984645	Identifier	dst		1984441	0					
ANR	1984646	Argument	src		1984441	2					
ANR	1984647	Identifier	src		1984441	0					
ANR	1984648	Argument	log2w		1984441	3					
ANR	1984649	Identifier	log2w		1984441	0					
ANR	1984650	Argument	log2h		1984441	4					
ANR	1984651	Identifier	log2h		1984441	0					
ANR	1984652	Argument	stride		1984441	5					
ANR	1984653	Identifier	stride		1984441	0					
ANR	1984654	PrimaryExpression	0		1984441	1					
ANR	1984655	ReturnStatement	return ret ;	51:12:1060:1070	1984441	1	True				
ANR	1984656	Identifier	ret		1984441	0					
ANR	1984657	IfStatement	"if ( ( ret = decode_p_block ( f , dst + ( stride << log2h ) , src + ( stride << log2h ) , log2w , log2h , stride ) ) < 0 )"		1984441	2					
ANR	1984658	Condition	"( ret = decode_p_block ( f , dst + ( stride << log2h ) , src + ( stride << log2h ) , log2w , log2h , stride ) ) < 0"	53:12:1085:1255	1984441	0	True				
ANR	1984659	RelationalExpression	"( ret = decode_p_block ( f , dst + ( stride << log2h ) , src + ( stride << log2h ) , log2w , log2h , stride ) ) < 0"		1984441	0		<			
ANR	1984660	AssignmentExpression	"ret = decode_p_block ( f , dst + ( stride << log2h ) , src + ( stride << log2h ) , log2w , log2h , stride )"		1984441	0		=			
ANR	1984661	Identifier	ret		1984441	0					
ANR	1984662	CallExpression	"decode_p_block ( f , dst + ( stride << log2h ) , src + ( stride << log2h ) , log2w , log2h , stride )"		1984441	1					
ANR	1984663	Callee	decode_p_block		1984441	0					
ANR	1984664	Identifier	decode_p_block		1984441	0					
ANR	1984665	ArgumentList	f		1984441	1					
ANR	1984666	Argument	f		1984441	0					
ANR	1984667	Identifier	f		1984441	0					
ANR	1984668	Argument	dst + ( stride << log2h )		1984441	1					
ANR	1984669	AdditiveExpression	dst + ( stride << log2h )		1984441	0		+			
ANR	1984670	Identifier	dst		1984441	0					
ANR	1984671	ShiftExpression	stride << log2h		1984441	1		<<			
ANR	1984672	Identifier	stride		1984441	0					
ANR	1984673	Identifier	log2h		1984441	1					
ANR	1984674	Argument	src + ( stride << log2h )		1984441	2					
ANR	1984675	AdditiveExpression	src + ( stride << log2h )		1984441	0		+			
ANR	1984676	Identifier	src		1984441	0					
ANR	1984677	ShiftExpression	stride << log2h		1984441	1		<<			
ANR	1984678	Identifier	stride		1984441	0					
ANR	1984679	Identifier	log2h		1984441	1					
ANR	1984680	Argument	log2w		1984441	3					
ANR	1984681	Identifier	log2w		1984441	0					
ANR	1984682	Argument	log2h		1984441	4					
ANR	1984683	Identifier	log2h		1984441	0					
ANR	1984684	Argument	stride		1984441	5					
ANR	1984685	Identifier	stride		1984441	0					
ANR	1984686	PrimaryExpression	0		1984441	1					
ANR	1984687	ReturnStatement	return ret ;	59:12:1271:1281	1984441	1	True				
ANR	1984688	Identifier	ret		1984441	0					
ANR	1984689	ElseStatement	else		1984441	0					
ANR	1984690	IfStatement	if ( code == 2 )		1984441	0					
ANR	1984691	Condition	code == 2	61:15:1299:1307	1984441	0	True				
ANR	1984692	EqualityExpression	code == 2		1984441	0		==			
ANR	1984693	Identifier	code		1984441	0					
ANR	1984694	PrimaryExpression	2		1984441	1					
ANR	1984695	CompoundStatement		57:26:1174:1174	1984441	1					
ANR	1984696	ExpressionStatement	log2w --	63:8:1321:1328	1984441	0	True				
ANR	1984697	PostIncDecOperationExpression	log2w --		1984441	0					
ANR	1984698	Identifier	log2w		1984441	0					
ANR	1984699	IncDec	--		1984441	1					
ANR	1984700	IfStatement	"if ( ( ret = decode_p_block ( f , dst , src , log2w , log2h , stride ) ) < 0 )"		1984441	1					
ANR	1984701	Condition	"( ret = decode_p_block ( f , dst , src , log2w , log2h , stride ) ) < 0"	65:12:1343:1404	1984441	0	True				
ANR	1984702	RelationalExpression	"( ret = decode_p_block ( f , dst , src , log2w , log2h , stride ) ) < 0"		1984441	0		<			
ANR	1984703	AssignmentExpression	"ret = decode_p_block ( f , dst , src , log2w , log2h , stride )"		1984441	0		=			
ANR	1984704	Identifier	ret		1984441	0					
ANR	1984705	CallExpression	"decode_p_block ( f , dst , src , log2w , log2h , stride )"		1984441	1					
ANR	1984706	Callee	decode_p_block		1984441	0					
ANR	1984707	Identifier	decode_p_block		1984441	0					
ANR	1984708	ArgumentList	f		1984441	1					
ANR	1984709	Argument	f		1984441	0					
ANR	1984710	Identifier	f		1984441	0					
ANR	1984711	Argument	dst		1984441	1					
ANR	1984712	Identifier	dst		1984441	0					
ANR	1984713	Argument	src		1984441	2					
ANR	1984714	Identifier	src		1984441	0					
ANR	1984715	Argument	log2w		1984441	3					
ANR	1984716	Identifier	log2w		1984441	0					
ANR	1984717	Argument	log2h		1984441	4					
ANR	1984718	Identifier	log2h		1984441	0					
ANR	1984719	Argument	stride		1984441	5					
ANR	1984720	Identifier	stride		1984441	0					
ANR	1984721	PrimaryExpression	0		1984441	1					
ANR	1984722	ReturnStatement	return ret ;	67:12:1420:1430	1984441	1	True				
ANR	1984723	Identifier	ret		1984441	0					
ANR	1984724	IfStatement	"if ( ( ret = decode_p_block ( f , dst + ( 1 << log2w ) , src + ( 1 << log2w ) , log2w , log2h , stride ) ) < 0 )"		1984441	2					
ANR	1984725	Condition	"( ret = decode_p_block ( f , dst + ( 1 << log2w ) , src + ( 1 << log2w ) , log2w , log2h , stride ) ) < 0"	69:12:1445:1605	1984441	0	True				
ANR	1984726	RelationalExpression	"( ret = decode_p_block ( f , dst + ( 1 << log2w ) , src + ( 1 << log2w ) , log2w , log2h , stride ) ) < 0"		1984441	0		<			
ANR	1984727	AssignmentExpression	"ret = decode_p_block ( f , dst + ( 1 << log2w ) , src + ( 1 << log2w ) , log2w , log2h , stride )"		1984441	0		=			
ANR	1984728	Identifier	ret		1984441	0					
ANR	1984729	CallExpression	"decode_p_block ( f , dst + ( 1 << log2w ) , src + ( 1 << log2w ) , log2w , log2h , stride )"		1984441	1					
ANR	1984730	Callee	decode_p_block		1984441	0					
ANR	1984731	Identifier	decode_p_block		1984441	0					
ANR	1984732	ArgumentList	f		1984441	1					
ANR	1984733	Argument	f		1984441	0					
ANR	1984734	Identifier	f		1984441	0					
ANR	1984735	Argument	dst + ( 1 << log2w )		1984441	1					
ANR	1984736	AdditiveExpression	dst + ( 1 << log2w )		1984441	0		+			
ANR	1984737	Identifier	dst		1984441	0					
ANR	1984738	ShiftExpression	1 << log2w		1984441	1		<<			
ANR	1984739	PrimaryExpression	1		1984441	0					
ANR	1984740	Identifier	log2w		1984441	1					
ANR	1984741	Argument	src + ( 1 << log2w )		1984441	2					
ANR	1984742	AdditiveExpression	src + ( 1 << log2w )		1984441	0		+			
ANR	1984743	Identifier	src		1984441	0					
ANR	1984744	ShiftExpression	1 << log2w		1984441	1		<<			
ANR	1984745	PrimaryExpression	1		1984441	0					
ANR	1984746	Identifier	log2w		1984441	1					
ANR	1984747	Argument	log2w		1984441	3					
ANR	1984748	Identifier	log2w		1984441	0					
ANR	1984749	Argument	log2h		1984441	4					
ANR	1984750	Identifier	log2h		1984441	0					
ANR	1984751	Argument	stride		1984441	5					
ANR	1984752	Identifier	stride		1984441	0					
ANR	1984753	PrimaryExpression	0		1984441	1					
ANR	1984754	ReturnStatement	return ret ;	75:12:1621:1631	1984441	1	True				
ANR	1984755	Identifier	ret		1984441	0					
ANR	1984756	ElseStatement	else		1984441	0					
ANR	1984757	IfStatement	if ( code == 3 && f -> version < 2 )		1984441	0					
ANR	1984758	Condition	code == 3 && f -> version < 2	77:15:1649:1675	1984441	0	True				
ANR	1984759	AndExpression	code == 3 && f -> version < 2		1984441	0		&&			
ANR	1984760	EqualityExpression	code == 3		1984441	0		==			
ANR	1984761	Identifier	code		1984441	0					
ANR	1984762	PrimaryExpression	3		1984441	1					
ANR	1984763	RelationalExpression	f -> version < 2		1984441	1		<			
ANR	1984764	PtrMemberAccess	f -> version		1984441	0					
ANR	1984765	Identifier	f		1984441	0					
ANR	1984766	Identifier	version		1984441	1					
ANR	1984767	PrimaryExpression	2		1984441	1					
ANR	1984768	CompoundStatement		73:44:1542:1542	1984441	1					
ANR	1984769	IfStatement	if ( start > src || src > end )		1984441	0					
ANR	1984770	Condition	start > src || src > end	79:12:1693:1716	1984441	0	True				
ANR	1984771	OrExpression	start > src || src > end		1984441	0		||			
ANR	1984772	RelationalExpression	start > src		1984441	0		>			
ANR	1984773	Identifier	start		1984441	0					
ANR	1984774	Identifier	src		1984441	1					
ANR	1984775	RelationalExpression	src > end		1984441	1		>			
ANR	1984776	Identifier	src		1984441	0					
ANR	1984777	Identifier	end		1984441	1					
ANR	1984778	CompoundStatement		75:38:1583:1583	1984441	1					
ANR	1984779	ExpressionStatement	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"	81:12:1734:1783	1984441	0	True				
ANR	1984780	CallExpression	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"		1984441	0					
ANR	1984781	Callee	av_log		1984441	0					
ANR	1984782	Identifier	av_log		1984441	0					
ANR	1984783	ArgumentList	f -> avctx		1984441	1					
ANR	1984784	Argument	f -> avctx		1984441	0					
ANR	1984785	PtrMemberAccess	f -> avctx		1984441	0					
ANR	1984786	Identifier	f		1984441	0					
ANR	1984787	Identifier	avctx		1984441	1					
ANR	1984788	Argument	AV_LOG_ERROR		1984441	1					
ANR	1984789	Identifier	AV_LOG_ERROR		1984441	0					
ANR	1984790	Argument	"""mv out of pic\\n"""		1984441	2					
ANR	1984791	PrimaryExpression	"""mv out of pic\\n"""		1984441	0					
ANR	1984792	ReturnStatement	return AVERROR_INVALIDDATA ;	83:12:1798:1824	1984441	1	True				
ANR	1984793	Identifier	AVERROR_INVALIDDATA		1984441	0					
ANR	1984794	ExpressionStatement	"mcdc ( dst , src , log2w , h , stride , 1 , 0 )"	87:8:1846:1884	1984441	1	True				
ANR	1984795	CallExpression	"mcdc ( dst , src , log2w , h , stride , 1 , 0 )"		1984441	0					
ANR	1984796	Callee	mcdc		1984441	0					
ANR	1984797	Identifier	mcdc		1984441	0					
ANR	1984798	ArgumentList	dst		1984441	1					
ANR	1984799	Argument	dst		1984441	0					
ANR	1984800	Identifier	dst		1984441	0					
ANR	1984801	Argument	src		1984441	1					
ANR	1984802	Identifier	src		1984441	0					
ANR	1984803	Argument	log2w		1984441	2					
ANR	1984804	Identifier	log2w		1984441	0					
ANR	1984805	Argument	h		1984441	3					
ANR	1984806	Identifier	h		1984441	0					
ANR	1984807	Argument	stride		1984441	4					
ANR	1984808	Identifier	stride		1984441	0					
ANR	1984809	Argument	1		1984441	5					
ANR	1984810	PrimaryExpression	1		1984441	0					
ANR	1984811	Argument	0		1984441	6					
ANR	1984812	PrimaryExpression	0		1984441	0					
ANR	1984813	ElseStatement	else		1984441	0					
ANR	1984814	IfStatement	if ( code == 4 )		1984441	0					
ANR	1984815	Condition	code == 4	89:15:1902:1910	1984441	0	True				
ANR	1984816	EqualityExpression	code == 4		1984441	0		==			
ANR	1984817	Identifier	code		1984441	0					
ANR	1984818	PrimaryExpression	4		1984441	1					
ANR	1984819	CompoundStatement		85:26:1777:1777	1984441	1					
ANR	1984820	ExpressionStatement	src += f -> mv [ bytestream2_get_byte ( & f -> g ) ]	91:8:1924:1965	1984441	0	True				
ANR	1984821	AssignmentExpression	src += f -> mv [ bytestream2_get_byte ( & f -> g ) ]		1984441	0		+=			
ANR	1984822	Identifier	src		1984441	0					
ANR	1984823	ArrayIndexing	f -> mv [ bytestream2_get_byte ( & f -> g ) ]		1984441	1					
ANR	1984824	PtrMemberAccess	f -> mv		1984441	0					
ANR	1984825	Identifier	f		1984441	0					
ANR	1984826	Identifier	mv		1984441	1					
ANR	1984827	CallExpression	bytestream2_get_byte ( & f -> g )		1984441	1					
ANR	1984828	Callee	bytestream2_get_byte		1984441	0					
ANR	1984829	Identifier	bytestream2_get_byte		1984441	0					
ANR	1984830	ArgumentList	& f -> g		1984441	1					
ANR	1984831	Argument	& f -> g		1984441	0					
ANR	1984832	UnaryOperationExpression	& f -> g		1984441	0					
ANR	1984833	UnaryOperator	&		1984441	0					
ANR	1984834	PtrMemberAccess	f -> g		1984441	1					
ANR	1984835	Identifier	f		1984441	0					
ANR	1984836	Identifier	g		1984441	1					
ANR	1984837	IfStatement	if ( start > src || src > end )		1984441	1					
ANR	1984838	Condition	start > src || src > end	93:12:1980:2003	1984441	0	True				
ANR	1984839	OrExpression	start > src || src > end		1984441	0		||			
ANR	1984840	RelationalExpression	start > src		1984441	0		>			
ANR	1984841	Identifier	start		1984441	0					
ANR	1984842	Identifier	src		1984441	1					
ANR	1984843	RelationalExpression	src > end		1984441	1		>			
ANR	1984844	Identifier	src		1984441	0					
ANR	1984845	Identifier	end		1984441	1					
ANR	1984846	CompoundStatement		89:38:1870:1870	1984441	1					
ANR	1984847	ExpressionStatement	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"	95:12:2021:2070	1984441	0	True				
ANR	1984848	CallExpression	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"		1984441	0					
ANR	1984849	Callee	av_log		1984441	0					
ANR	1984850	Identifier	av_log		1984441	0					
ANR	1984851	ArgumentList	f -> avctx		1984441	1					
ANR	1984852	Argument	f -> avctx		1984441	0					
ANR	1984853	PtrMemberAccess	f -> avctx		1984441	0					
ANR	1984854	Identifier	f		1984441	0					
ANR	1984855	Identifier	avctx		1984441	1					
ANR	1984856	Argument	AV_LOG_ERROR		1984441	1					
ANR	1984857	Identifier	AV_LOG_ERROR		1984441	0					
ANR	1984858	Argument	"""mv out of pic\\n"""		1984441	2					
ANR	1984859	PrimaryExpression	"""mv out of pic\\n"""		1984441	0					
ANR	1984860	ReturnStatement	return AVERROR_INVALIDDATA ;	97:12:2085:2111	1984441	1	True				
ANR	1984861	Identifier	AVERROR_INVALIDDATA		1984441	0					
ANR	1984862	ExpressionStatement	"mcdc ( dst , src , log2w , h , stride , 1 , bytestream2_get_le16 ( & f -> g2 ) )"	101:8:2133:2198	1984441	2	True				
ANR	1984863	CallExpression	"mcdc ( dst , src , log2w , h , stride , 1 , bytestream2_get_le16 ( & f -> g2 ) )"		1984441	0					
ANR	1984864	Callee	mcdc		1984441	0					
ANR	1984865	Identifier	mcdc		1984441	0					
ANR	1984866	ArgumentList	dst		1984441	1					
ANR	1984867	Argument	dst		1984441	0					
ANR	1984868	Identifier	dst		1984441	0					
ANR	1984869	Argument	src		1984441	1					
ANR	1984870	Identifier	src		1984441	0					
ANR	1984871	Argument	log2w		1984441	2					
ANR	1984872	Identifier	log2w		1984441	0					
ANR	1984873	Argument	h		1984441	3					
ANR	1984874	Identifier	h		1984441	0					
ANR	1984875	Argument	stride		1984441	4					
ANR	1984876	Identifier	stride		1984441	0					
ANR	1984877	Argument	1		1984441	5					
ANR	1984878	PrimaryExpression	1		1984441	0					
ANR	1984879	Argument	bytestream2_get_le16 ( & f -> g2 )		1984441	6					
ANR	1984880	CallExpression	bytestream2_get_le16 ( & f -> g2 )		1984441	0					
ANR	1984881	Callee	bytestream2_get_le16		1984441	0					
ANR	1984882	Identifier	bytestream2_get_le16		1984441	0					
ANR	1984883	ArgumentList	& f -> g2		1984441	1					
ANR	1984884	Argument	& f -> g2		1984441	0					
ANR	1984885	UnaryOperationExpression	& f -> g2		1984441	0					
ANR	1984886	UnaryOperator	&		1984441	0					
ANR	1984887	PtrMemberAccess	f -> g2		1984441	1					
ANR	1984888	Identifier	f		1984441	0					
ANR	1984889	Identifier	g2		1984441	1					
ANR	1984890	ElseStatement	else		1984441	0					
ANR	1984891	IfStatement	if ( code == 5 )		1984441	0					
ANR	1984892	Condition	code == 5	103:15:2216:2224	1984441	0	True				
ANR	1984893	EqualityExpression	code == 5		1984441	0		==			
ANR	1984894	Identifier	code		1984441	0					
ANR	1984895	PrimaryExpression	5		1984441	1					
ANR	1984896	CompoundStatement		99:26:2091:2091	1984441	1					
ANR	1984897	IfStatement	if ( start > src || src > end )		1984441	0					
ANR	1984898	Condition	start > src || src > end	105:12:2242:2265	1984441	0	True				
ANR	1984899	OrExpression	start > src || src > end		1984441	0		||			
ANR	1984900	RelationalExpression	start > src		1984441	0		>			
ANR	1984901	Identifier	start		1984441	0					
ANR	1984902	Identifier	src		1984441	1					
ANR	1984903	RelationalExpression	src > end		1984441	1		>			
ANR	1984904	Identifier	src		1984441	0					
ANR	1984905	Identifier	end		1984441	1					
ANR	1984906	CompoundStatement		101:38:2132:2132	1984441	1					
ANR	1984907	ExpressionStatement	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"	107:12:2283:2332	1984441	0	True				
ANR	1984908	CallExpression	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"		1984441	0					
ANR	1984909	Callee	av_log		1984441	0					
ANR	1984910	Identifier	av_log		1984441	0					
ANR	1984911	ArgumentList	f -> avctx		1984441	1					
ANR	1984912	Argument	f -> avctx		1984441	0					
ANR	1984913	PtrMemberAccess	f -> avctx		1984441	0					
ANR	1984914	Identifier	f		1984441	0					
ANR	1984915	Identifier	avctx		1984441	1					
ANR	1984916	Argument	AV_LOG_ERROR		1984441	1					
ANR	1984917	Identifier	AV_LOG_ERROR		1984441	0					
ANR	1984918	Argument	"""mv out of pic\\n"""		1984441	2					
ANR	1984919	PrimaryExpression	"""mv out of pic\\n"""		1984441	0					
ANR	1984920	ReturnStatement	return AVERROR_INVALIDDATA ;	109:12:2347:2373	1984441	1	True				
ANR	1984921	Identifier	AVERROR_INVALIDDATA		1984441	0					
ANR	1984922	ExpressionStatement	"mcdc ( dst , src , log2w , h , stride , 0 , bytestream2_get_le16 ( & f -> g2 ) )"	113:8:2395:2460	1984441	1	True				
ANR	1984923	CallExpression	"mcdc ( dst , src , log2w , h , stride , 0 , bytestream2_get_le16 ( & f -> g2 ) )"		1984441	0					
ANR	1984924	Callee	mcdc		1984441	0					
ANR	1984925	Identifier	mcdc		1984441	0					
ANR	1984926	ArgumentList	dst		1984441	1					
ANR	1984927	Argument	dst		1984441	0					
ANR	1984928	Identifier	dst		1984441	0					
ANR	1984929	Argument	src		1984441	1					
ANR	1984930	Identifier	src		1984441	0					
ANR	1984931	Argument	log2w		1984441	2					
ANR	1984932	Identifier	log2w		1984441	0					
ANR	1984933	Argument	h		1984441	3					
ANR	1984934	Identifier	h		1984441	0					
ANR	1984935	Argument	stride		1984441	4					
ANR	1984936	Identifier	stride		1984441	0					
ANR	1984937	Argument	0		1984441	5					
ANR	1984938	PrimaryExpression	0		1984441	0					
ANR	1984939	Argument	bytestream2_get_le16 ( & f -> g2 )		1984441	6					
ANR	1984940	CallExpression	bytestream2_get_le16 ( & f -> g2 )		1984441	0					
ANR	1984941	Callee	bytestream2_get_le16		1984441	0					
ANR	1984942	Identifier	bytestream2_get_le16		1984441	0					
ANR	1984943	ArgumentList	& f -> g2		1984441	1					
ANR	1984944	Argument	& f -> g2		1984441	0					
ANR	1984945	UnaryOperationExpression	& f -> g2		1984441	0					
ANR	1984946	UnaryOperator	&		1984441	0					
ANR	1984947	PtrMemberAccess	f -> g2		1984441	1					
ANR	1984948	Identifier	f		1984441	0					
ANR	1984949	Identifier	g2		1984441	1					
ANR	1984950	ElseStatement	else		1984441	0					
ANR	1984951	IfStatement	if ( code == 6 )		1984441	0					
ANR	1984952	Condition	code == 6	115:15:2478:2486	1984441	0	True				
ANR	1984953	EqualityExpression	code == 6		1984441	0		==			
ANR	1984954	Identifier	code		1984441	0					
ANR	1984955	PrimaryExpression	6		1984441	1					
ANR	1984956	CompoundStatement		111:26:2353:2353	1984441	1					
ANR	1984957	IfStatement	if ( log2w )		1984441	0					
ANR	1984958	Condition	log2w	117:12:2504:2508	1984441	0	True				
ANR	1984959	Identifier	log2w		1984441	0					
ANR	1984960	CompoundStatement		113:19:2375:2375	1984441	1					
ANR	1984961	ExpressionStatement	dst [ 0 ] = bytestream2_get_le16 ( & f -> g2 )	119:12:2526:2568	1984441	0	True				
ANR	1984962	AssignmentExpression	dst [ 0 ] = bytestream2_get_le16 ( & f -> g2 )		1984441	0		=			
ANR	1984963	ArrayIndexing	dst [ 0 ]		1984441	0					
ANR	1984964	Identifier	dst		1984441	0					
ANR	1984965	PrimaryExpression	0		1984441	1					
ANR	1984966	CallExpression	bytestream2_get_le16 ( & f -> g2 )		1984441	1					
ANR	1984967	Callee	bytestream2_get_le16		1984441	0					
ANR	1984968	Identifier	bytestream2_get_le16		1984441	0					
ANR	1984969	ArgumentList	& f -> g2		1984441	1					
ANR	1984970	Argument	& f -> g2		1984441	0					
ANR	1984971	UnaryOperationExpression	& f -> g2		1984441	0					
ANR	1984972	UnaryOperator	&		1984441	0					
ANR	1984973	PtrMemberAccess	f -> g2		1984441	1					
ANR	1984974	Identifier	f		1984441	0					
ANR	1984975	Identifier	g2		1984441	1					
ANR	1984976	ExpressionStatement	dst [ 1 ] = bytestream2_get_le16 ( & f -> g2 )	121:12:2583:2625	1984441	1	True				
ANR	1984977	AssignmentExpression	dst [ 1 ] = bytestream2_get_le16 ( & f -> g2 )		1984441	0		=			
ANR	1984978	ArrayIndexing	dst [ 1 ]		1984441	0					
ANR	1984979	Identifier	dst		1984441	0					
ANR	1984980	PrimaryExpression	1		1984441	1					
ANR	1984981	CallExpression	bytestream2_get_le16 ( & f -> g2 )		1984441	1					
ANR	1984982	Callee	bytestream2_get_le16		1984441	0					
ANR	1984983	Identifier	bytestream2_get_le16		1984441	0					
ANR	1984984	ArgumentList	& f -> g2		1984441	1					
ANR	1984985	Argument	& f -> g2		1984441	0					
ANR	1984986	UnaryOperationExpression	& f -> g2		1984441	0					
ANR	1984987	UnaryOperator	&		1984441	0					
ANR	1984988	PtrMemberAccess	f -> g2		1984441	1					
ANR	1984989	Identifier	f		1984441	0					
ANR	1984990	Identifier	g2		1984441	1					
ANR	1984991	ElseStatement	else		1984441	0					
ANR	1984992	CompoundStatement		119:15:2507:2507	1984441	0					
ANR	1984993	ExpressionStatement	dst [ 0 ] = bytestream2_get_le16 ( & f -> g2 )	125:12:2658:2700	1984441	0	True				
ANR	1984994	AssignmentExpression	dst [ 0 ] = bytestream2_get_le16 ( & f -> g2 )		1984441	0		=			
ANR	1984995	ArrayIndexing	dst [ 0 ]		1984441	0					
ANR	1984996	Identifier	dst		1984441	0					
ANR	1984997	PrimaryExpression	0		1984441	1					
ANR	1984998	CallExpression	bytestream2_get_le16 ( & f -> g2 )		1984441	1					
ANR	1984999	Callee	bytestream2_get_le16		1984441	0					
ANR	1985000	Identifier	bytestream2_get_le16		1984441	0					
ANR	1985001	ArgumentList	& f -> g2		1984441	1					
ANR	1985002	Argument	& f -> g2		1984441	0					
ANR	1985003	UnaryOperationExpression	& f -> g2		1984441	0					
ANR	1985004	UnaryOperator	&		1984441	0					
ANR	1985005	PtrMemberAccess	f -> g2		1984441	1					
ANR	1985006	Identifier	f		1984441	0					
ANR	1985007	Identifier	g2		1984441	1					
ANR	1985008	ExpressionStatement	dst [ stride ] = bytestream2_get_le16 ( & f -> g2 )	127:12:2715:2757	1984441	1	True				
ANR	1985009	AssignmentExpression	dst [ stride ] = bytestream2_get_le16 ( & f -> g2 )		1984441	0		=			
ANR	1985010	ArrayIndexing	dst [ stride ]		1984441	0					
ANR	1985011	Identifier	dst		1984441	0					
ANR	1985012	Identifier	stride		1984441	1					
ANR	1985013	CallExpression	bytestream2_get_le16 ( & f -> g2 )		1984441	1					
ANR	1985014	Callee	bytestream2_get_le16		1984441	0					
ANR	1985015	Identifier	bytestream2_get_le16		1984441	0					
ANR	1985016	ArgumentList	& f -> g2		1984441	1					
ANR	1985017	Argument	& f -> g2		1984441	0					
ANR	1985018	UnaryOperationExpression	& f -> g2		1984441	0					
ANR	1985019	UnaryOperator	&		1984441	0					
ANR	1985020	PtrMemberAccess	f -> g2		1984441	1					
ANR	1985021	Identifier	f		1984441	0					
ANR	1985022	Identifier	g2		1984441	1					
ANR	1985023	ReturnStatement	return 0 ;	133:4:2782:2790	1984441	8	True				
ANR	1985024	PrimaryExpression	0		1984441	0					
ANR	1985025	ReturnType	static int		1984441	1					
ANR	1985026	Identifier	decode_p_block		1984441	2					
ANR	1985027	ParameterList	"FourXContext * f , uint16_t * dst , uint16_t * src , int log2w , int log2h , int stride"		1984441	3					
ANR	1985028	Parameter	FourXContext * f	1:26:26:40	1984441	0	True				
ANR	1985029	ParameterType	FourXContext *		1984441	0					
ANR	1985030	Identifier	f		1984441	1					
ANR	1985031	Parameter	uint16_t * dst	1:43:43:55	1984441	1	True				
ANR	1985032	ParameterType	uint16_t *		1984441	0					
ANR	1985033	Identifier	dst		1984441	1					
ANR	1985034	Parameter	uint16_t * src	1:58:58:70	1984441	2	True				
ANR	1985035	ParameterType	uint16_t *		1984441	0					
ANR	1985036	Identifier	src		1984441	1					
ANR	1985037	Parameter	int log2w	3:26:100:108	1984441	3	True				
ANR	1985038	ParameterType	int		1984441	0					
ANR	1985039	Identifier	log2w		1984441	1					
ANR	1985040	Parameter	int log2h	3:37:111:119	1984441	4	True				
ANR	1985041	ParameterType	int		1984441	0					
ANR	1985042	Identifier	log2h		1984441	1					
ANR	1985043	Parameter	int stride	3:48:122:131	1984441	5	True				
ANR	1985044	ParameterType	int		1984441	0					
ANR	1985045	Identifier	stride		1984441	1					
ANR	1985046	CFGEntryNode	ENTRY		1984441		True				
ANR	1985047	CFGExitNode	EXIT		1984441		True				
ANR	1985048	Symbol	* stride		1984441						
ANR	1985049	Symbol	* f -> mv		1984441						
ANR	1985050	Symbol	* index		1984441						
ANR	1985051	Symbol	stride		1984441						
ANR	1985052	Symbol	* * size2index		1984441						
ANR	1985053	Symbol	* dst		1984441						
ANR	1985054	Symbol	f -> version		1984441						
ANR	1985055	Symbol	f -> last_picture -> data		1984441						
ANR	1985056	Symbol	* f -> last_picture -> data		1984441						
ANR	1985057	Symbol	log2h		1984441						
ANR	1985058	Symbol	size2index		1984441						
ANR	1985059	Symbol	ret		1984441						
ANR	1985060	Symbol	* f -> version		1984441						
ANR	1985061	Symbol	bytestream2_get_le16		1984441						
ANR	1985062	Symbol	* * f		1984441						
ANR	1985063	Symbol	* * log2h		1984441						
ANR	1985064	Symbol	block_type_vlc		1984441						
ANR	1985065	Symbol	index		1984441						
ANR	1985066	Symbol	* bytestream2_get_byte		1984441						
ANR	1985067	Symbol	* * * f		1984441						
ANR	1985068	Symbol	* * block_type_vlc		1984441						
ANR	1985069	Symbol	* log2h		1984441						
ANR	1985070	Symbol	code		1984441						
ANR	1985071	Symbol	dst		1984441						
ANR	1985072	Symbol	* f -> last_picture		1984441						
ANR	1985073	Symbol	BLOCK_TYPE_VLC_BITS		1984441						
ANR	1985074	Symbol	f -> avctx		1984441						
ANR	1985075	Symbol	& f -> gb		1984441						
ANR	1985076	Symbol	block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table		1984441						
ANR	1985077	Symbol	f -> mv		1984441						
ANR	1985078	Symbol	* log2w		1984441						
ANR	1985079	Symbol	end		1984441						
ANR	1985080	Symbol	* * f -> version		1984441						
ANR	1985081	Symbol	* block_type_vlc		1984441						
ANR	1985082	Symbol	* f -> avctx		1984441						
ANR	1985083	Symbol	AV_LOG_ERROR		1984441						
ANR	1985084	Symbol	src		1984441						
ANR	1985085	Symbol	f		1984441						
ANR	1985086	Symbol	f -> last_picture		1984441						
ANR	1985087	Symbol	h		1984441						
ANR	1985088	Symbol	start		1984441						
ANR	1985089	Symbol	* size2index		1984441						
ANR	1985090	Symbol	log2w		1984441						
ANR	1985091	Symbol	* * f -> last_picture		1984441						
ANR	1985092	Symbol	* f		1984441						
ANR	1985093	Symbol	decode_p_block		1984441						
ANR	1985094	Symbol	f -> avctx -> height		1984441						
ANR	1985095	Symbol	& f -> g		1984441						
ANR	1985096	Symbol	AVERROR_INVALIDDATA		1984441						
ANR	1985097	Symbol	get_vlc2		1984441						
ANR	1985098	Symbol	bytestream2_get_byte		1984441						
ANR	1985099	Symbol	& f -> g2		1984441						
