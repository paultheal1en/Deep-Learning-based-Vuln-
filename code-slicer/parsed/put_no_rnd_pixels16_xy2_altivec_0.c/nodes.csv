command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6773301	File	/home/p4ultr4n/workplace/ReVeal/raw_code/put_no_rnd_pixels16_xy2_altivec_0.c								
ANR	6773302	Function	put_no_rnd_pixels16_xy2_altivec	1:0:0:4621							
ANR	6773303	FunctionDef	"put_no_rnd_pixels16_xy2_altivec (uint8_t * block , const uint8_t * pixels , int line_size , int h)"		6773302	0					
ANR	6773304	CompoundStatement		3:0:101:4621	6773302	0					
ANR	6773305	ExpressionStatement	"POWERPC_TBL_DECLARE ( altivec_put_no_rnd_pixels16_xy2_num , 1 )"	5:0:104:163	6773302	0	True				
ANR	6773306	CallExpression	"POWERPC_TBL_DECLARE ( altivec_put_no_rnd_pixels16_xy2_num , 1 )"		6773302	0					
ANR	6773307	Callee	POWERPC_TBL_DECLARE		6773302	0					
ANR	6773308	Identifier	POWERPC_TBL_DECLARE		6773302	0					
ANR	6773309	ArgumentList	altivec_put_no_rnd_pixels16_xy2_num		6773302	1					
ANR	6773310	Argument	altivec_put_no_rnd_pixels16_xy2_num		6773302	0					
ANR	6773311	Identifier	altivec_put_no_rnd_pixels16_xy2_num		6773302	0					
ANR	6773312	Argument	1		6773302	1					
ANR	6773313	PrimaryExpression	1		6773302	0					
ANR	6773314	IdentifierDeclStatement	int j ;	9:4:207:212	6773302	1	True				
ANR	6773315	IdentifierDecl	j		6773302	0					
ANR	6773316	IdentifierDeclType	int		6773302	0					
ANR	6773317	Identifier	j		6773302	1					
ANR	6773318	ExpressionStatement	"POWERPC_TBL_START_COUNT ( altivec_put_no_rnd_pixels16_xy2_num , 1 )"	11:0:215:278	6773302	2	True				
ANR	6773319	CallExpression	"POWERPC_TBL_START_COUNT ( altivec_put_no_rnd_pixels16_xy2_num , 1 )"		6773302	0					
ANR	6773320	Callee	POWERPC_TBL_START_COUNT		6773302	0					
ANR	6773321	Identifier	POWERPC_TBL_START_COUNT		6773302	0					
ANR	6773322	ArgumentList	altivec_put_no_rnd_pixels16_xy2_num		6773302	1					
ANR	6773323	Argument	altivec_put_no_rnd_pixels16_xy2_num		6773302	0					
ANR	6773324	Identifier	altivec_put_no_rnd_pixels16_xy2_num		6773302	0					
ANR	6773325	Argument	1		6773302	1					
ANR	6773326	PrimaryExpression	1		6773302	0					
ANR	6773327	ForStatement	for ( j = 0 ; j < 4 ; j ++ )		6773302	3					
ANR	6773328	ForInit	j = 0 ;	13:11:292:297	6773302	0	True				
ANR	6773329	AssignmentExpression	j = 0		6773302	0		=			
ANR	6773330	Identifier	j		6773302	0					
ANR	6773331	PrimaryExpression	0		6773302	1					
ANR	6773332	Condition	j < 4	13:18:299:303	6773302	1	True				
ANR	6773333	RelationalExpression	j < 4		6773302	0		<			
ANR	6773334	Identifier	j		6773302	0					
ANR	6773335	PrimaryExpression	4		6773302	1					
ANR	6773336	PostIncDecOperationExpression	j ++	13:25:306:308	6773302	2	True				
ANR	6773337	Identifier	j		6773302	0					
ANR	6773338	IncDec	++		6773302	1					
ANR	6773339	CompoundStatement		29:6:562:577	6773302	3					
ANR	6773340	IdentifierDeclStatement	int i ;	15:6:320:325	6773302	0	True				
ANR	6773341	IdentifierDecl	i		6773302	0					
ANR	6773342	IdentifierDeclType	int		6773302	0					
ANR	6773343	Identifier	i		6773302	1					
ANR	6773344	IdentifierDeclStatement	const uint32_t a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ;	17:6:334:398	6773302	1	True				
ANR	6773345	IdentifierDecl	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6773302	0					
ANR	6773346	IdentifierDeclType	const uint32_t		6773302	0					
ANR	6773347	Identifier	a		6773302	1					
ANR	6773348	AssignmentExpression	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6773302	2		=			
ANR	6773349	Identifier	a		6773302	0					
ANR	6773350	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6773302	1					
ANR	6773351	CastExpression	( const struct unaligned_32 * ) ( pixels )		6773302	0					
ANR	6773352	CastTarget	const struct unaligned_32 *		6773302	0					
ANR	6773353	Identifier	pixels		6773302	1					
ANR	6773354	Identifier	l		6773302	1					
ANR	6773355	IdentifierDeclStatement	const uint32_t b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l ) ;	19:6:407:484	6773302	2	True				
ANR	6773356	IdentifierDecl	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6773302	0					
ANR	6773357	IdentifierDeclType	const uint32_t		6773302	0					
ANR	6773358	Identifier	b		6773302	1					
ANR	6773359	AssignmentExpression	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6773302	2		=			
ANR	6773360	Identifier	b		6773302	0					
ANR	6773361	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6773302	1					
ANR	6773362	CastExpression	( const struct unaligned_32 * ) ( pixels + 1 )		6773302	0					
ANR	6773363	CastTarget	const struct unaligned_32 *		6773302	0					
ANR	6773364	AdditiveExpression	pixels + 1		6773302	1		+			
ANR	6773365	Identifier	pixels		6773302	0					
ANR	6773366	PrimaryExpression	1		6773302	1					
ANR	6773367	Identifier	l		6773302	1					
ANR	6773368	IdentifierDeclStatement	uint32_t l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL ;	23:6:493:570	6773302	3	True				
ANR	6773369	IdentifierDecl	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL		6773302	0					
ANR	6773370	IdentifierDeclType	uint32_t		6773302	0					
ANR	6773371	Identifier	l0		6773302	1					
ANR	6773372	AssignmentExpression	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL		6773302	2		=			
ANR	6773373	Identifier	l0		6773302	0					
ANR	6773374	AdditiveExpression	( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL		6773302	1		+			
ANR	6773375	BitAndExpression	a & 0x03030303UL		6773302	0		&			
ANR	6773376	Identifier	a		6773302	0					
ANR	6773377	PrimaryExpression	0x03030303UL		6773302	1					
ANR	6773378	AdditiveExpression	( b & 0x03030303UL ) + 0x01010101UL		6773302	1		+			
ANR	6773379	BitAndExpression	b & 0x03030303UL		6773302	0		&			
ANR	6773380	Identifier	b		6773302	0					
ANR	6773381	PrimaryExpression	0x03030303UL		6773302	1					
ANR	6773382	PrimaryExpression	0x01010101UL		6773302	1					
ANR	6773383	IdentifierDeclStatement	uint32_t h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 ) ;	27:6:579:655	6773302	4	True				
ANR	6773384	IdentifierDecl	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773302	0					
ANR	6773385	IdentifierDeclType	uint32_t		6773302	0					
ANR	6773386	Identifier	h0		6773302	1					
ANR	6773387	AssignmentExpression	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773302	2		=			
ANR	6773388	Identifier	h0		6773302	0					
ANR	6773389	AdditiveExpression	( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773302	1		+			
ANR	6773390	ShiftExpression	( a & 0xFCFCFCFCUL ) >> 2		6773302	0		>>			
ANR	6773391	BitAndExpression	a & 0xFCFCFCFCUL		6773302	0		&			
ANR	6773392	Identifier	a		6773302	0					
ANR	6773393	PrimaryExpression	0xFCFCFCFCUL		6773302	1					
ANR	6773394	PrimaryExpression	2		6773302	1					
ANR	6773395	ShiftExpression	( b & 0xFCFCFCFCUL ) >> 2		6773302	1		>>			
ANR	6773396	BitAndExpression	b & 0xFCFCFCFCUL		6773302	0		&			
ANR	6773397	Identifier	b		6773302	0					
ANR	6773398	PrimaryExpression	0xFCFCFCFCUL		6773302	1					
ANR	6773399	PrimaryExpression	2		6773302	1					
ANR	6773400	IdentifierDeclStatement	"uint32_t l1 , h1 ;"	31:6:664:679	6773302	5	True				
ANR	6773401	IdentifierDecl	l1		6773302	0					
ANR	6773402	IdentifierDeclType	uint32_t		6773302	0					
ANR	6773403	Identifier	l1		6773302	1					
ANR	6773404	IdentifierDecl	h1		6773302	1					
ANR	6773405	IdentifierDeclType	uint32_t		6773302	0					
ANR	6773406	Identifier	h1		6773302	1					
ANR	6773407	ExpressionStatement	pixels += line_size	33:6:688:707	6773302	6	True				
ANR	6773408	AssignmentExpression	pixels += line_size		6773302	0		+=			
ANR	6773409	Identifier	pixels		6773302	0					
ANR	6773410	Identifier	line_size		6773302	1					
ANR	6773411	ForStatement	for ( i = 0 ; i < h ; i += 2 )		6773302	7					
ANR	6773412	ForInit	i = 0 ;	35:11:721:726	6773302	0	True				
ANR	6773413	AssignmentExpression	i = 0		6773302	0		=			
ANR	6773414	Identifier	i		6773302	0					
ANR	6773415	PrimaryExpression	0		6773302	1					
ANR	6773416	Condition	i < h	35:18:728:732	6773302	1	True				
ANR	6773417	RelationalExpression	i < h		6773302	0		<			
ANR	6773418	Identifier	i		6773302	0					
ANR	6773419	Identifier	h		6773302	1					
ANR	6773420	AssignmentExpression	i += 2	35:25:735:740	6773302	2	True	+=			
ANR	6773421	Identifier	i		6773302	0					
ANR	6773422	PrimaryExpression	2		6773302	1					
ANR	6773423	CompoundStatement		37:8:721:783	6773302	3					
ANR	6773424	IdentifierDeclStatement	uint32_t a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l ) ;	37:8:754:812	6773302	0	True				
ANR	6773425	IdentifierDecl	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6773302	0					
ANR	6773426	IdentifierDeclType	uint32_t		6773302	0					
ANR	6773427	Identifier	a		6773302	1					
ANR	6773428	AssignmentExpression	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6773302	2		=			
ANR	6773429	Identifier	a		6773302	0					
ANR	6773430	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6773302	1					
ANR	6773431	CastExpression	( const struct unaligned_32 * ) ( pixels )		6773302	0					
ANR	6773432	CastTarget	const struct unaligned_32 *		6773302	0					
ANR	6773433	Identifier	pixels		6773302	1					
ANR	6773434	Identifier	l		6773302	1					
ANR	6773435	IdentifierDeclStatement	uint32_t b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l ) ;	39:8:823:885	6773302	1	True				
ANR	6773436	IdentifierDecl	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6773302	0					
ANR	6773437	IdentifierDeclType	uint32_t		6773302	0					
ANR	6773438	Identifier	b		6773302	1					
ANR	6773439	AssignmentExpression	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6773302	2		=			
ANR	6773440	Identifier	b		6773302	0					
ANR	6773441	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6773302	1					
ANR	6773442	CastExpression	( const struct unaligned_32 * ) ( pixels + 1 )		6773302	0					
ANR	6773443	CastTarget	const struct unaligned_32 *		6773302	0					
ANR	6773444	AdditiveExpression	pixels + 1		6773302	1		+			
ANR	6773445	Identifier	pixels		6773302	0					
ANR	6773446	PrimaryExpression	1		6773302	1					
ANR	6773447	Identifier	l		6773302	1					
ANR	6773448	ExpressionStatement	l1 = ( a & 0x03030303UL ) + ( b & 0x03030303UL )	41:8:896:940	6773302	2	True				
ANR	6773449	AssignmentExpression	l1 = ( a & 0x03030303UL ) + ( b & 0x03030303UL )		6773302	0		=			
ANR	6773450	Identifier	l1		6773302	0					
ANR	6773451	AdditiveExpression	( a & 0x03030303UL ) + ( b & 0x03030303UL )		6773302	1		+			
ANR	6773452	BitAndExpression	a & 0x03030303UL		6773302	0		&			
ANR	6773453	Identifier	a		6773302	0					
ANR	6773454	PrimaryExpression	0x03030303UL		6773302	1					
ANR	6773455	BitAndExpression	b & 0x03030303UL		6773302	1		&			
ANR	6773456	Identifier	b		6773302	0					
ANR	6773457	PrimaryExpression	0x03030303UL		6773302	1					
ANR	6773458	ExpressionStatement	h1 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )	43:8:951:1009	6773302	3	True				
ANR	6773459	AssignmentExpression	h1 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773302	0		=			
ANR	6773460	Identifier	h1		6773302	0					
ANR	6773461	AdditiveExpression	( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773302	1		+			
ANR	6773462	ShiftExpression	( a & 0xFCFCFCFCUL ) >> 2		6773302	0		>>			
ANR	6773463	BitAndExpression	a & 0xFCFCFCFCUL		6773302	0		&			
ANR	6773464	Identifier	a		6773302	0					
ANR	6773465	PrimaryExpression	0xFCFCFCFCUL		6773302	1					
ANR	6773466	PrimaryExpression	2		6773302	1					
ANR	6773467	ShiftExpression	( b & 0xFCFCFCFCUL ) >> 2		6773302	1		>>			
ANR	6773468	BitAndExpression	b & 0xFCFCFCFCUL		6773302	0		&			
ANR	6773469	Identifier	b		6773302	0					
ANR	6773470	PrimaryExpression	0xFCFCFCFCUL		6773302	1					
ANR	6773471	PrimaryExpression	2		6773302	1					
ANR	6773472	ExpressionStatement	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )	45:8:1020:1098	6773302	4	True				
ANR	6773473	AssignmentExpression	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6773302	0		=			
ANR	6773474	UnaryOperationExpression	* ( ( uint32_t * ) block )		6773302	0					
ANR	6773475	UnaryOperator	*		6773302	0					
ANR	6773476	CastExpression	( uint32_t * ) block		6773302	1					
ANR	6773477	CastTarget	uint32_t *		6773302	0					
ANR	6773478	Identifier	block		6773302	1					
ANR	6773479	AdditiveExpression	h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6773302	1		+			
ANR	6773480	Identifier	h0		6773302	0					
ANR	6773481	AdditiveExpression	h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6773302	1		+			
ANR	6773482	Identifier	h1		6773302	0					
ANR	6773483	BitAndExpression	( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL		6773302	1		&			
ANR	6773484	ShiftExpression	( l0 + l1 ) >> 2		6773302	0		>>			
ANR	6773485	AdditiveExpression	l0 + l1		6773302	0		+			
ANR	6773486	Identifier	l0		6773302	0					
ANR	6773487	Identifier	l1		6773302	1					
ANR	6773488	PrimaryExpression	2		6773302	1					
ANR	6773489	PrimaryExpression	0x0F0F0F0FUL		6773302	1					
ANR	6773490	ExpressionStatement	pixels += line_size	49:8:1109:1128	6773302	5	True				
ANR	6773491	AssignmentExpression	pixels += line_size		6773302	0		+=			
ANR	6773492	Identifier	pixels		6773302	0					
ANR	6773493	Identifier	line_size		6773302	1					
ANR	6773494	ExpressionStatement	block += line_size	51:8:1139:1157	6773302	6	True				
ANR	6773495	AssignmentExpression	block += line_size		6773302	0		+=			
ANR	6773496	Identifier	block		6773302	0					
ANR	6773497	Identifier	line_size		6773302	1					
ANR	6773498	ExpressionStatement	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )	53:8:1168:1217	6773302	7	True				
ANR	6773499	AssignmentExpression	a = ( ( ( const struct unaligned_32 * ) ( pixels ) ) -> l )		6773302	0		=			
ANR	6773500	Identifier	a		6773302	0					
ANR	6773501	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6773302	1					
ANR	6773502	CastExpression	( const struct unaligned_32 * ) ( pixels )		6773302	0					
ANR	6773503	CastTarget	const struct unaligned_32 *		6773302	0					
ANR	6773504	Identifier	pixels		6773302	1					
ANR	6773505	Identifier	l		6773302	1					
ANR	6773506	ExpressionStatement	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )	55:8:1228:1281	6773302	8	True				
ANR	6773507	AssignmentExpression	b = ( ( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l )		6773302	0		=			
ANR	6773508	Identifier	b		6773302	0					
ANR	6773509	PtrMemberAccess	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6773302	1					
ANR	6773510	CastExpression	( const struct unaligned_32 * ) ( pixels + 1 )		6773302	0					
ANR	6773511	CastTarget	const struct unaligned_32 *		6773302	0					
ANR	6773512	AdditiveExpression	pixels + 1		6773302	1		+			
ANR	6773513	Identifier	pixels		6773302	0					
ANR	6773514	PrimaryExpression	1		6773302	1					
ANR	6773515	Identifier	l		6773302	1					
ANR	6773516	ExpressionStatement	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL	57:8:1292:1351	6773302	9	True				
ANR	6773517	AssignmentExpression	l0 = ( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL		6773302	0		=			
ANR	6773518	Identifier	l0		6773302	0					
ANR	6773519	AdditiveExpression	( a & 0x03030303UL ) + ( b & 0x03030303UL ) + 0x01010101UL		6773302	1		+			
ANR	6773520	BitAndExpression	a & 0x03030303UL		6773302	0		&			
ANR	6773521	Identifier	a		6773302	0					
ANR	6773522	PrimaryExpression	0x03030303UL		6773302	1					
ANR	6773523	AdditiveExpression	( b & 0x03030303UL ) + 0x01010101UL		6773302	1		+			
ANR	6773524	BitAndExpression	b & 0x03030303UL		6773302	0		&			
ANR	6773525	Identifier	b		6773302	0					
ANR	6773526	PrimaryExpression	0x03030303UL		6773302	1					
ANR	6773527	PrimaryExpression	0x01010101UL		6773302	1					
ANR	6773528	ExpressionStatement	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )	59:8:1362:1420	6773302	10	True				
ANR	6773529	AssignmentExpression	h0 = ( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773302	0		=			
ANR	6773530	Identifier	h0		6773302	0					
ANR	6773531	AdditiveExpression	( ( a & 0xFCFCFCFCUL ) >> 2 ) + ( ( b & 0xFCFCFCFCUL ) >> 2 )		6773302	1		+			
ANR	6773532	ShiftExpression	( a & 0xFCFCFCFCUL ) >> 2		6773302	0		>>			
ANR	6773533	BitAndExpression	a & 0xFCFCFCFCUL		6773302	0		&			
ANR	6773534	Identifier	a		6773302	0					
ANR	6773535	PrimaryExpression	0xFCFCFCFCUL		6773302	1					
ANR	6773536	PrimaryExpression	2		6773302	1					
ANR	6773537	ShiftExpression	( b & 0xFCFCFCFCUL ) >> 2		6773302	1		>>			
ANR	6773538	BitAndExpression	b & 0xFCFCFCFCUL		6773302	0		&			
ANR	6773539	Identifier	b		6773302	0					
ANR	6773540	PrimaryExpression	0xFCFCFCFCUL		6773302	1					
ANR	6773541	PrimaryExpression	2		6773302	1					
ANR	6773542	ExpressionStatement	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )	61:8:1431:1509	6773302	11	True				
ANR	6773543	AssignmentExpression	* ( ( uint32_t * ) block ) = h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6773302	0		=			
ANR	6773544	UnaryOperationExpression	* ( ( uint32_t * ) block )		6773302	0					
ANR	6773545	UnaryOperator	*		6773302	0					
ANR	6773546	CastExpression	( uint32_t * ) block		6773302	1					
ANR	6773547	CastTarget	uint32_t *		6773302	0					
ANR	6773548	Identifier	block		6773302	1					
ANR	6773549	AdditiveExpression	h0 + h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6773302	1		+			
ANR	6773550	Identifier	h0		6773302	0					
ANR	6773551	AdditiveExpression	h1 + ( ( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL )		6773302	1		+			
ANR	6773552	Identifier	h1		6773302	0					
ANR	6773553	BitAndExpression	( ( l0 + l1 ) >> 2 ) & 0x0F0F0F0FUL		6773302	1		&			
ANR	6773554	ShiftExpression	( l0 + l1 ) >> 2		6773302	0		>>			
ANR	6773555	AdditiveExpression	l0 + l1		6773302	0		+			
ANR	6773556	Identifier	l0		6773302	0					
ANR	6773557	Identifier	l1		6773302	1					
ANR	6773558	PrimaryExpression	2		6773302	1					
ANR	6773559	PrimaryExpression	0x0F0F0F0FUL		6773302	1					
ANR	6773560	ExpressionStatement	pixels += line_size	65:8:1520:1539	6773302	12	True				
ANR	6773561	AssignmentExpression	pixels += line_size		6773302	0		+=			
ANR	6773562	Identifier	pixels		6773302	0					
ANR	6773563	Identifier	line_size		6773302	1					
ANR	6773564	ExpressionStatement	block += line_size	67:8:1550:1568	6773302	13	True				
ANR	6773565	AssignmentExpression	block += line_size		6773302	0		+=			
ANR	6773566	Identifier	block		6773302	0					
ANR	6773567	Identifier	line_size		6773302	1					
ANR	6773568	ExpressionStatement	pixels += 4 - line_size * ( h + 1 )	69:8:1579:1612	6773302	8	True				
ANR	6773569	AssignmentExpression	pixels += 4 - line_size * ( h + 1 )		6773302	0		+=			
ANR	6773570	Identifier	pixels		6773302	0					
ANR	6773571	AdditiveExpression	4 - line_size * ( h + 1 )		6773302	1		-			
ANR	6773572	PrimaryExpression	4		6773302	0					
ANR	6773573	MultiplicativeExpression	line_size * ( h + 1 )		6773302	1		*			
ANR	6773574	Identifier	line_size		6773302	0					
ANR	6773575	AdditiveExpression	h + 1		6773302	1		+			
ANR	6773576	Identifier	h		6773302	0					
ANR	6773577	PrimaryExpression	1		6773302	1					
ANR	6773578	ExpressionStatement	block += 4 - line_size * h	71:6:1621:1647	6773302	9	True				
ANR	6773579	AssignmentExpression	block += 4 - line_size * h		6773302	0		+=			
ANR	6773580	Identifier	block		6773302	0					
ANR	6773581	AdditiveExpression	4 - line_size * h		6773302	1		-			
ANR	6773582	PrimaryExpression	4		6773302	0					
ANR	6773583	MultiplicativeExpression	line_size * h		6773302	1		*			
ANR	6773584	Identifier	line_size		6773302	0					
ANR	6773585	Identifier	h		6773302	1					
ANR	6773586	ExpressionStatement	"POWERPC_TBL_STOP_COUNT ( altivec_put_no_rnd_pixels16_xy2_num , 1 )"	77:0:1659:1721	6773302	4	True				
ANR	6773587	CallExpression	"POWERPC_TBL_STOP_COUNT ( altivec_put_no_rnd_pixels16_xy2_num , 1 )"		6773302	0					
ANR	6773588	Callee	POWERPC_TBL_STOP_COUNT		6773302	0					
ANR	6773589	Identifier	POWERPC_TBL_STOP_COUNT		6773302	0					
ANR	6773590	ArgumentList	altivec_put_no_rnd_pixels16_xy2_num		6773302	1					
ANR	6773591	Argument	altivec_put_no_rnd_pixels16_xy2_num		6773302	0					
ANR	6773592	Identifier	altivec_put_no_rnd_pixels16_xy2_num		6773302	0					
ANR	6773593	Argument	1		6773302	1					
ANR	6773594	PrimaryExpression	1		6773302	0					
ANR	6773595	ReturnType	void		6773302	1					
ANR	6773596	Identifier	put_no_rnd_pixels16_xy2_altivec		6773302	2					
ANR	6773597	ParameterList	"uint8_t * block , const uint8_t * pixels , int line_size , int h"		6773302	3					
ANR	6773598	Parameter	uint8_t * block	1:37:37:51	6773302	0	True				
ANR	6773599	ParameterType	uint8_t *		6773302	0					
ANR	6773600	Identifier	block		6773302	1					
ANR	6773601	Parameter	const uint8_t * pixels	1:54:54:75	6773302	1	True				
ANR	6773602	ParameterType	const uint8_t *		6773302	0					
ANR	6773603	Identifier	pixels		6773302	1					
ANR	6773604	Parameter	int line_size	1:78:78:90	6773302	2	True				
ANR	6773605	ParameterType	int		6773302	0					
ANR	6773606	Identifier	line_size		6773302	1					
ANR	6773607	Parameter	int h	1:93:93:97	6773302	3	True				
ANR	6773608	ParameterType	int		6773302	0					
ANR	6773609	Identifier	h		6773302	1					
ANR	6773610	CFGEntryNode	ENTRY		6773302		True				
ANR	6773611	CFGExitNode	EXIT		6773302		True				
ANR	6773612	Symbol	a		6773302						
ANR	6773613	Symbol	b		6773302						
ANR	6773614	Symbol	( ( const struct unaligned_32 * ) ( pixels ) ) -> l		6773302						
ANR	6773615	Symbol	l0		6773302						
ANR	6773616	Symbol	l1		6773302						
ANR	6773617	Symbol	* ( ( uint32_t * ) block )		6773302						
ANR	6773618	Symbol	h		6773302						
ANR	6773619	Symbol	( ( const struct unaligned_32 * ) ( pixels + 1 ) ) -> l		6773302						
ANR	6773620	Symbol	h0		6773302						
ANR	6773621	Symbol	i		6773302						
ANR	6773622	Symbol	h1		6773302						
ANR	6773623	Symbol	j		6773302						
ANR	6773624	Symbol	* block		6773302						
ANR	6773625	Symbol	pixels		6773302						
ANR	6773626	Symbol	* pixels		6773302						
ANR	6773627	Symbol	block		6773302						
ANR	6773628	Symbol	line_size		6773302						
ANR	6773629	Symbol	altivec_put_no_rnd_pixels16_xy2_num		6773302						
