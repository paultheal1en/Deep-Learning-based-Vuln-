command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3130663	File	/home/p4ultr4n/workplace/ReVeal/raw_code/exynos4210_pmu_read_0.c								
ANR	3130664	Function	exynos4210_pmu_read	1:0:0:659							
ANR	3130665	FunctionDef	"exynos4210_pmu_read (void * opaque , target_phys_addr_t offset , unsigned size)"		3130664	0					
ANR	3130666	CompoundStatement		5:0:130:659	3130664	0					
ANR	3130667	IdentifierDeclStatement	Exynos4210PmuState * s = ( Exynos4210PmuState * ) opaque ;	7:4:137:189	3130664	0	True				
ANR	3130668	IdentifierDecl	* s = ( Exynos4210PmuState * ) opaque		3130664	0					
ANR	3130669	IdentifierDeclType	Exynos4210PmuState *		3130664	0					
ANR	3130670	Identifier	s		3130664	1					
ANR	3130671	AssignmentExpression	* s = ( Exynos4210PmuState * ) opaque		3130664	2		=			
ANR	3130672	Identifier	s		3130664	0					
ANR	3130673	CastExpression	( Exynos4210PmuState * ) opaque		3130664	1					
ANR	3130674	CastTarget	Exynos4210PmuState *		3130664	0					
ANR	3130675	Identifier	opaque		3130664	1					
ANR	3130676	IdentifierDeclStatement	unsigned i ;	9:4:196:206	3130664	1	True				
ANR	3130677	IdentifierDecl	i		3130664	0					
ANR	3130678	IdentifierDeclType	unsigned		3130664	0					
ANR	3130679	Identifier	i		3130664	1					
ANR	3130680	IdentifierDeclStatement	const Exynos4210PmuReg * reg_p = exynos4210_pmu_regs ;	11:4:213:264	3130664	2	True				
ANR	3130681	IdentifierDecl	* reg_p = exynos4210_pmu_regs		3130664	0					
ANR	3130682	IdentifierDeclType	const Exynos4210PmuReg *		3130664	0					
ANR	3130683	Identifier	reg_p		3130664	1					
ANR	3130684	AssignmentExpression	* reg_p = exynos4210_pmu_regs		3130664	2		=			
ANR	3130685	Identifier	exynos4210_pmu_regs		3130664	0					
ANR	3130686	Identifier	exynos4210_pmu_regs		3130664	1					
ANR	3130687	ForStatement	for ( i = 0 ; i < PMU_NUM_OF_REGISTERS ; i ++ )		3130664	3					
ANR	3130688	ForInit	i = 0 ;	15:9:278:283	3130664	0	True				
ANR	3130689	AssignmentExpression	i = 0		3130664	0		=			
ANR	3130690	Identifier	i		3130664	0					
ANR	3130691	PrimaryExpression	0		3130664	1					
ANR	3130692	Condition	i < PMU_NUM_OF_REGISTERS	15:16:285:308	3130664	1	True				
ANR	3130693	RelationalExpression	i < PMU_NUM_OF_REGISTERS		3130664	0		<			
ANR	3130694	Identifier	i		3130664	0					
ANR	3130695	Identifier	PMU_NUM_OF_REGISTERS		3130664	1					
ANR	3130696	PostIncDecOperationExpression	i ++	15:42:311:313	3130664	2	True				
ANR	3130697	Identifier	i		3130664	0					
ANR	3130698	IncDec	++		3130664	1					
ANR	3130699	CompoundStatement		11:47:185:185	3130664	3					
ANR	3130700	IfStatement	if ( reg_p -> offset == offset )		3130664	0					
ANR	3130701	Condition	reg_p -> offset == offset	17:12:331:353	3130664	0	True				
ANR	3130702	EqualityExpression	reg_p -> offset == offset		3130664	0		==			
ANR	3130703	PtrMemberAccess	reg_p -> offset		3130664	0					
ANR	3130704	Identifier	reg_p		3130664	0					
ANR	3130705	Identifier	offset		3130664	1					
ANR	3130706	Identifier	offset		3130664	1					
ANR	3130707	CompoundStatement		13:37:225:225	3130664	1					
ANR	3130708	ExpressionStatement	"PRINT_DEBUG_EXTEND ( ""%s [0x%04x] -> 0x%04x\\n"" , reg_p -> name , ( uint32_t ) offset , s -> reg [ i ] )"	19:12:371:494	3130664	0	True				
ANR	3130709	CallExpression	"PRINT_DEBUG_EXTEND ( ""%s [0x%04x] -> 0x%04x\\n"" , reg_p -> name , ( uint32_t ) offset , s -> reg [ i ] )"		3130664	0					
ANR	3130710	Callee	PRINT_DEBUG_EXTEND		3130664	0					
ANR	3130711	Identifier	PRINT_DEBUG_EXTEND		3130664	0					
ANR	3130712	ArgumentList	"""%s [0x%04x] -> 0x%04x\\n"""		3130664	1					
ANR	3130713	Argument	"""%s [0x%04x] -> 0x%04x\\n"""		3130664	0					
ANR	3130714	PrimaryExpression	"""%s [0x%04x] -> 0x%04x\\n"""		3130664	0					
ANR	3130715	Argument	reg_p -> name		3130664	1					
ANR	3130716	PtrMemberAccess	reg_p -> name		3130664	0					
ANR	3130717	Identifier	reg_p		3130664	0					
ANR	3130718	Identifier	name		3130664	1					
ANR	3130719	Argument	( uint32_t ) offset		3130664	2					
ANR	3130720	CastExpression	( uint32_t ) offset		3130664	0					
ANR	3130721	CastTarget	uint32_t		3130664	0					
ANR	3130722	Identifier	offset		3130664	1					
ANR	3130723	Argument	s -> reg [ i ]		3130664	3					
ANR	3130724	ArrayIndexing	s -> reg [ i ]		3130664	0					
ANR	3130725	PtrMemberAccess	s -> reg		3130664	0					
ANR	3130726	Identifier	s		3130664	0					
ANR	3130727	Identifier	reg		3130664	1					
ANR	3130728	Identifier	i		3130664	1					
ANR	3130729	ReturnStatement	return s -> reg [ i ] ;	23:12:509:525	3130664	1	True				
ANR	3130730	ArrayIndexing	s -> reg [ i ]		3130664	0					
ANR	3130731	PtrMemberAccess	s -> reg		3130664	0					
ANR	3130732	Identifier	s		3130664	0					
ANR	3130733	Identifier	reg		3130664	1					
ANR	3130734	Identifier	i		3130664	1					
ANR	3130735	ExpressionStatement	reg_p ++	27:8:547:554	3130664	1	True				
ANR	3130736	PostIncDecOperationExpression	reg_p ++		3130664	0					
ANR	3130737	Identifier	reg_p		3130664	0					
ANR	3130738	IncDec	++		3130664	1					
ANR	3130739	ExpressionStatement	"PRINT_DEBUG ( ""QEMU PMU ERROR: bad read offset 0x%04x\\n"" , ( uint32_t ) offset )"	31:4:568:641	3130664	4	True				
ANR	3130740	CallExpression	"PRINT_DEBUG ( ""QEMU PMU ERROR: bad read offset 0x%04x\\n"" , ( uint32_t ) offset )"		3130664	0					
ANR	3130741	Callee	PRINT_DEBUG		3130664	0					
ANR	3130742	Identifier	PRINT_DEBUG		3130664	0					
ANR	3130743	ArgumentList	"""QEMU PMU ERROR: bad read offset 0x%04x\\n"""		3130664	1					
ANR	3130744	Argument	"""QEMU PMU ERROR: bad read offset 0x%04x\\n"""		3130664	0					
ANR	3130745	PrimaryExpression	"""QEMU PMU ERROR: bad read offset 0x%04x\\n"""		3130664	0					
ANR	3130746	Argument	( uint32_t ) offset		3130664	1					
ANR	3130747	CastExpression	( uint32_t ) offset		3130664	0					
ANR	3130748	CastTarget	uint32_t		3130664	0					
ANR	3130749	Identifier	offset		3130664	1					
ANR	3130750	ReturnStatement	return 0 ;	33:4:648:656	3130664	5	True				
ANR	3130751	PrimaryExpression	0		3130664	0					
ANR	3130752	ReturnType	static uint64_t		3130664	1					
ANR	3130753	Identifier	exynos4210_pmu_read		3130664	2					
ANR	3130754	ParameterList	"void * opaque , target_phys_addr_t offset , unsigned size"		3130664	3					
ANR	3130755	Parameter	void * opaque	1:36:36:47	3130664	0	True				
ANR	3130756	ParameterType	void *		3130664	0					
ANR	3130757	Identifier	opaque		3130664	1					
ANR	3130758	Parameter	target_phys_addr_t offset	1:50:50:74	3130664	1	True				
ANR	3130759	ParameterType	target_phys_addr_t		3130664	0					
ANR	3130760	Identifier	offset		3130664	1					
ANR	3130761	Parameter	unsigned size	3:36:114:126	3130664	2	True				
ANR	3130762	ParameterType	unsigned		3130664	0					
ANR	3130763	Identifier	size		3130664	1					
ANR	3130764	CFGEntryNode	ENTRY		3130664		True				
ANR	3130765	CFGExitNode	EXIT		3130664		True				
ANR	3130766	Symbol	s -> reg		3130664						
ANR	3130767	Symbol	PMU_NUM_OF_REGISTERS		3130664						
ANR	3130768	Symbol	reg_p -> offset		3130664						
ANR	3130769	Symbol	opaque		3130664						
ANR	3130770	Symbol	offset		3130664						
ANR	3130771	Symbol	exynos4210_pmu_regs		3130664						
ANR	3130772	Symbol	* s -> reg		3130664						
ANR	3130773	Symbol	i		3130664						
ANR	3130774	Symbol	reg_p		3130664						
ANR	3130775	Symbol	s		3130664						
ANR	3130776	Symbol	* i		3130664						
ANR	3130777	Symbol	size		3130664						
ANR	3130778	Symbol	* * s		3130664						
ANR	3130779	Symbol	* reg_p		3130664						
ANR	3130780	Symbol	reg_p -> name		3130664						
ANR	3130781	Symbol	* s		3130664						
