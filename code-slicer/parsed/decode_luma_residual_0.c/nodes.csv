command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1881168	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_luma_residual_0.c								
ANR	1881169	Function	decode_luma_residual	1:0:0:3091							
ANR	1881170	FunctionDef	"decode_luma_residual (const H264Context * h , H264SliceContext * sl , GetBitContext * gb , const uint8_t * scan , const uint8_t * scan8x8 , int pixel_shift , int mb_type , int cbp , int p)"		1881169	0					
ANR	1881171	CompoundStatement		9:0:258:3091	1881169	0					
ANR	1881172	IdentifierDeclStatement	"int i4x4 , i8x8 ;"	11:4:265:279	1881169	0	True				
ANR	1881173	IdentifierDecl	i4x4		1881169	0					
ANR	1881174	IdentifierDeclType	int		1881169	0					
ANR	1881175	Identifier	i4x4		1881169	1					
ANR	1881176	IdentifierDecl	i8x8		1881169	1					
ANR	1881177	IdentifierDeclType	int		1881169	0					
ANR	1881178	Identifier	i8x8		1881169	1					
ANR	1881179	IdentifierDeclStatement	int qscale = p == 0 ? sl -> qscale : sl -> chroma_qp [ p - 1 ] ;	13:4:286:341	1881169	1	True				
ANR	1881180	IdentifierDecl	qscale = p == 0 ? sl -> qscale : sl -> chroma_qp [ p - 1 ]		1881169	0					
ANR	1881181	IdentifierDeclType	int		1881169	0					
ANR	1881182	Identifier	qscale		1881169	1					
ANR	1881183	AssignmentExpression	qscale = p == 0 ? sl -> qscale : sl -> chroma_qp [ p - 1 ]		1881169	2		=			
ANR	1881184	Identifier	qscale		1881169	0					
ANR	1881185	ConditionalExpression	p == 0 ? sl -> qscale : sl -> chroma_qp [ p - 1 ]		1881169	1					
ANR	1881186	Condition	p == 0		1881169	0					
ANR	1881187	EqualityExpression	p == 0		1881169	0		==			
ANR	1881188	Identifier	p		1881169	0					
ANR	1881189	PrimaryExpression	0		1881169	1					
ANR	1881190	PtrMemberAccess	sl -> qscale		1881169	1					
ANR	1881191	Identifier	sl		1881169	0					
ANR	1881192	Identifier	qscale		1881169	1					
ANR	1881193	ArrayIndexing	sl -> chroma_qp [ p - 1 ]		1881169	2					
ANR	1881194	PtrMemberAccess	sl -> chroma_qp		1881169	0					
ANR	1881195	Identifier	sl		1881169	0					
ANR	1881196	Identifier	chroma_qp		1881169	1					
ANR	1881197	AdditiveExpression	p - 1		1881169	1		-			
ANR	1881198	Identifier	p		1881169	0					
ANR	1881199	PrimaryExpression	1		1881169	1					
ANR	1881200	IfStatement	if ( IS_INTRA16x16 ( mb_type ) )		1881169	2					
ANR	1881201	Condition	IS_INTRA16x16 ( mb_type )	15:7:351:372	1881169	0	True				
ANR	1881202	CallExpression	IS_INTRA16x16 ( mb_type )		1881169	0					
ANR	1881203	Callee	IS_INTRA16x16		1881169	0					
ANR	1881204	Identifier	IS_INTRA16x16		1881169	0					
ANR	1881205	ArgumentList	mb_type		1881169	1					
ANR	1881206	Argument	mb_type		1881169	0					
ANR	1881207	Identifier	mb_type		1881169	0					
ANR	1881208	CompoundStatement		7:30:115:115	1881169	1					
ANR	1881209	ExpressionStatement	AV_ZERO128 ( sl -> mb_luma_dc [ p ] + 0 )	17:8:385:416	1881169	0	True				
ANR	1881210	CallExpression	AV_ZERO128 ( sl -> mb_luma_dc [ p ] + 0 )		1881169	0					
ANR	1881211	Callee	AV_ZERO128		1881169	0					
ANR	1881212	Identifier	AV_ZERO128		1881169	0					
ANR	1881213	ArgumentList	sl -> mb_luma_dc [ p ] + 0		1881169	1					
ANR	1881214	Argument	sl -> mb_luma_dc [ p ] + 0		1881169	0					
ANR	1881215	AdditiveExpression	sl -> mb_luma_dc [ p ] + 0		1881169	0		+			
ANR	1881216	ArrayIndexing	sl -> mb_luma_dc [ p ]		1881169	0					
ANR	1881217	PtrMemberAccess	sl -> mb_luma_dc		1881169	0					
ANR	1881218	Identifier	sl		1881169	0					
ANR	1881219	Identifier	mb_luma_dc		1881169	1					
ANR	1881220	Identifier	p		1881169	1					
ANR	1881221	PrimaryExpression	0		1881169	1					
ANR	1881222	ExpressionStatement	AV_ZERO128 ( sl -> mb_luma_dc [ p ] + 8 )	19:8:427:458	1881169	1	True				
ANR	1881223	CallExpression	AV_ZERO128 ( sl -> mb_luma_dc [ p ] + 8 )		1881169	0					
ANR	1881224	Callee	AV_ZERO128		1881169	0					
ANR	1881225	Identifier	AV_ZERO128		1881169	0					
ANR	1881226	ArgumentList	sl -> mb_luma_dc [ p ] + 8		1881169	1					
ANR	1881227	Argument	sl -> mb_luma_dc [ p ] + 8		1881169	0					
ANR	1881228	AdditiveExpression	sl -> mb_luma_dc [ p ] + 8		1881169	0		+			
ANR	1881229	ArrayIndexing	sl -> mb_luma_dc [ p ]		1881169	0					
ANR	1881230	PtrMemberAccess	sl -> mb_luma_dc		1881169	0					
ANR	1881231	Identifier	sl		1881169	0					
ANR	1881232	Identifier	mb_luma_dc		1881169	1					
ANR	1881233	Identifier	p		1881169	1					
ANR	1881234	PrimaryExpression	8		1881169	1					
ANR	1881235	ExpressionStatement	AV_ZERO128 ( sl -> mb_luma_dc [ p ] + 16 )	21:8:469:501	1881169	2	True				
ANR	1881236	CallExpression	AV_ZERO128 ( sl -> mb_luma_dc [ p ] + 16 )		1881169	0					
ANR	1881237	Callee	AV_ZERO128		1881169	0					
ANR	1881238	Identifier	AV_ZERO128		1881169	0					
ANR	1881239	ArgumentList	sl -> mb_luma_dc [ p ] + 16		1881169	1					
ANR	1881240	Argument	sl -> mb_luma_dc [ p ] + 16		1881169	0					
ANR	1881241	AdditiveExpression	sl -> mb_luma_dc [ p ] + 16		1881169	0		+			
ANR	1881242	ArrayIndexing	sl -> mb_luma_dc [ p ]		1881169	0					
ANR	1881243	PtrMemberAccess	sl -> mb_luma_dc		1881169	0					
ANR	1881244	Identifier	sl		1881169	0					
ANR	1881245	Identifier	mb_luma_dc		1881169	1					
ANR	1881246	Identifier	p		1881169	1					
ANR	1881247	PrimaryExpression	16		1881169	1					
ANR	1881248	ExpressionStatement	AV_ZERO128 ( sl -> mb_luma_dc [ p ] + 24 )	23:8:512:544	1881169	3	True				
ANR	1881249	CallExpression	AV_ZERO128 ( sl -> mb_luma_dc [ p ] + 24 )		1881169	0					
ANR	1881250	Callee	AV_ZERO128		1881169	0					
ANR	1881251	Identifier	AV_ZERO128		1881169	0					
ANR	1881252	ArgumentList	sl -> mb_luma_dc [ p ] + 24		1881169	1					
ANR	1881253	Argument	sl -> mb_luma_dc [ p ] + 24		1881169	0					
ANR	1881254	AdditiveExpression	sl -> mb_luma_dc [ p ] + 24		1881169	0		+			
ANR	1881255	ArrayIndexing	sl -> mb_luma_dc [ p ]		1881169	0					
ANR	1881256	PtrMemberAccess	sl -> mb_luma_dc		1881169	0					
ANR	1881257	Identifier	sl		1881169	0					
ANR	1881258	Identifier	mb_luma_dc		1881169	1					
ANR	1881259	Identifier	p		1881169	1					
ANR	1881260	PrimaryExpression	24		1881169	1					
ANR	1881261	IfStatement	"if ( decode_residual ( h , sl , gb , sl -> mb_luma_dc [ p ] , LUMA_DC_BLOCK_INDEX + p , scan , NULL , 16 ) < 0 )"		1881169	4					
ANR	1881262	Condition	"decode_residual ( h , sl , gb , sl -> mb_luma_dc [ p ] , LUMA_DC_BLOCK_INDEX + p , scan , NULL , 16 ) < 0"	25:12:559:648	1881169	0	True				
ANR	1881263	RelationalExpression	"decode_residual ( h , sl , gb , sl -> mb_luma_dc [ p ] , LUMA_DC_BLOCK_INDEX + p , scan , NULL , 16 ) < 0"		1881169	0		<			
ANR	1881264	CallExpression	"decode_residual ( h , sl , gb , sl -> mb_luma_dc [ p ] , LUMA_DC_BLOCK_INDEX + p , scan , NULL , 16 )"		1881169	0					
ANR	1881265	Callee	decode_residual		1881169	0					
ANR	1881266	Identifier	decode_residual		1881169	0					
ANR	1881267	ArgumentList	h		1881169	1					
ANR	1881268	Argument	h		1881169	0					
ANR	1881269	Identifier	h		1881169	0					
ANR	1881270	Argument	sl		1881169	1					
ANR	1881271	Identifier	sl		1881169	0					
ANR	1881272	Argument	gb		1881169	2					
ANR	1881273	Identifier	gb		1881169	0					
ANR	1881274	Argument	sl -> mb_luma_dc [ p ]		1881169	3					
ANR	1881275	ArrayIndexing	sl -> mb_luma_dc [ p ]		1881169	0					
ANR	1881276	PtrMemberAccess	sl -> mb_luma_dc		1881169	0					
ANR	1881277	Identifier	sl		1881169	0					
ANR	1881278	Identifier	mb_luma_dc		1881169	1					
ANR	1881279	Identifier	p		1881169	1					
ANR	1881280	Argument	LUMA_DC_BLOCK_INDEX + p		1881169	4					
ANR	1881281	AdditiveExpression	LUMA_DC_BLOCK_INDEX + p		1881169	0		+			
ANR	1881282	Identifier	LUMA_DC_BLOCK_INDEX		1881169	0					
ANR	1881283	Identifier	p		1881169	1					
ANR	1881284	Argument	scan		1881169	5					
ANR	1881285	Identifier	scan		1881169	0					
ANR	1881286	Argument	NULL		1881169	6					
ANR	1881287	Identifier	NULL		1881169	0					
ANR	1881288	Argument	16		1881169	7					
ANR	1881289	PrimaryExpression	16		1881169	0					
ANR	1881290	PrimaryExpression	0		1881169	1					
ANR	1881291	CompoundStatement		17:104:392:392	1881169	1					
ANR	1881292	ReturnStatement	return - 1 ;	27:12:666:675	1881169	0	True				
ANR	1881293	UnaryOperationExpression	- 1		1881169	0					
ANR	1881294	UnaryOperator	-		1881169	0					
ANR	1881295	PrimaryExpression	1		1881169	1					
ANR	1881296	ExpressionStatement	assert ( ( cbp & 15 ) == 0 || ( cbp & 15 ) == 15 )	33:8:755:794	1881169	5	True				
ANR	1881297	CallExpression	assert ( ( cbp & 15 ) == 0 || ( cbp & 15 ) == 15 )		1881169	0					
ANR	1881298	Callee	assert		1881169	0					
ANR	1881299	Identifier	assert		1881169	0					
ANR	1881300	ArgumentList	( cbp & 15 ) == 0 || ( cbp & 15 ) == 15		1881169	1					
ANR	1881301	Argument	( cbp & 15 ) == 0 || ( cbp & 15 ) == 15		1881169	0					
ANR	1881302	OrExpression	( cbp & 15 ) == 0 || ( cbp & 15 ) == 15		1881169	0		||			
ANR	1881303	EqualityExpression	( cbp & 15 ) == 0		1881169	0		==			
ANR	1881304	BitAndExpression	cbp & 15		1881169	0		&			
ANR	1881305	Identifier	cbp		1881169	0					
ANR	1881306	PrimaryExpression	15		1881169	1					
ANR	1881307	PrimaryExpression	0		1881169	1					
ANR	1881308	EqualityExpression	( cbp & 15 ) == 15		1881169	1		==			
ANR	1881309	BitAndExpression	cbp & 15		1881169	0		&			
ANR	1881310	Identifier	cbp		1881169	0					
ANR	1881311	PrimaryExpression	15		1881169	1					
ANR	1881312	PrimaryExpression	15		1881169	1					
ANR	1881313	IfStatement	if ( cbp & 15 )		1881169	6					
ANR	1881314	Condition	cbp & 15	37:11:810:815	1881169	0	True				
ANR	1881315	BitAndExpression	cbp & 15		1881169	0		&			
ANR	1881316	Identifier	cbp		1881169	0					
ANR	1881317	PrimaryExpression	15		1881169	1					
ANR	1881318	CompoundStatement		29:18:558:558	1881169	1					
ANR	1881319	ForStatement	for ( i8x8 = 0 ; i8x8 < 4 ; i8x8 ++ )		1881169	0					
ANR	1881320	ForInit	i8x8 = 0 ;	39:16:836:842	1881169	0	True				
ANR	1881321	AssignmentExpression	i8x8 = 0		1881169	0		=			
ANR	1881322	Identifier	i8x8		1881169	0					
ANR	1881323	PrimaryExpression	0		1881169	1					
ANR	1881324	Condition	i8x8 < 4	39:24:844:849	1881169	1	True				
ANR	1881325	RelationalExpression	i8x8 < 4		1881169	0		<			
ANR	1881326	Identifier	i8x8		1881169	0					
ANR	1881327	PrimaryExpression	4		1881169	1					
ANR	1881328	PostIncDecOperationExpression	i8x8 ++	39:32:852:857	1881169	2	True				
ANR	1881329	Identifier	i8x8		1881169	0					
ANR	1881330	IncDec	++		1881169	1					
ANR	1881331	CompoundStatement		31:39:600:600	1881169	3					
ANR	1881332	ForStatement	for ( i4x4 = 0 ; i4x4 < 4 ; i4x4 ++ )		1881169	0					
ANR	1881333	ForInit	i4x4 = 0 ;	41:20:882:888	1881169	0	True				
ANR	1881334	AssignmentExpression	i4x4 = 0		1881169	0		=			
ANR	1881335	Identifier	i4x4		1881169	0					
ANR	1881336	PrimaryExpression	0		1881169	1					
ANR	1881337	Condition	i4x4 < 4	41:28:890:895	1881169	1	True				
ANR	1881338	RelationalExpression	i4x4 < 4		1881169	0		<			
ANR	1881339	Identifier	i4x4		1881169	0					
ANR	1881340	PrimaryExpression	4		1881169	1					
ANR	1881341	PostIncDecOperationExpression	i4x4 ++	41:36:898:903	1881169	2	True				
ANR	1881342	Identifier	i4x4		1881169	0					
ANR	1881343	IncDec	++		1881169	1					
ANR	1881344	CompoundStatement		35:20:669:706	1881169	3					
ANR	1881345	IdentifierDeclStatement	const int index = i4x4 + 4 * i8x8 + p * 16 ;	43:20:928:965	1881169	0	True				
ANR	1881346	IdentifierDecl	index = i4x4 + 4 * i8x8 + p * 16		1881169	0					
ANR	1881347	IdentifierDeclType	const int		1881169	0					
ANR	1881348	Identifier	index		1881169	1					
ANR	1881349	AssignmentExpression	index = i4x4 + 4 * i8x8 + p * 16		1881169	2		=			
ANR	1881350	Identifier	index		1881169	0					
ANR	1881351	AdditiveExpression	i4x4 + 4 * i8x8 + p * 16		1881169	1		+			
ANR	1881352	Identifier	i4x4		1881169	0					
ANR	1881353	AdditiveExpression	4 * i8x8 + p * 16		1881169	1		+			
ANR	1881354	MultiplicativeExpression	4 * i8x8		1881169	0		*			
ANR	1881355	PrimaryExpression	4		1881169	0					
ANR	1881356	Identifier	i8x8		1881169	1					
ANR	1881357	MultiplicativeExpression	p * 16		1881169	1		*			
ANR	1881358	Identifier	p		1881169	0					
ANR	1881359	PrimaryExpression	16		1881169	1					
ANR	1881360	IfStatement	"if ( decode_residual ( h , sl , gb , sl -> mb + ( 16 * index << pixel_shift ) , index , scan + 1 , h -> dequant4_coeff [ p ] [ qscale ] , 15 ) < 0 )"		1881169	1					
ANR	1881361	Condition	"decode_residual ( h , sl , gb , sl -> mb + ( 16 * index << pixel_shift ) , index , scan + 1 , h -> dequant4_coeff [ p ] [ qscale ] , 15 ) < 0"	45:24:992:1133	1881169	0	True				
ANR	1881362	RelationalExpression	"decode_residual ( h , sl , gb , sl -> mb + ( 16 * index << pixel_shift ) , index , scan + 1 , h -> dequant4_coeff [ p ] [ qscale ] , 15 ) < 0"		1881169	0		<			
ANR	1881363	CallExpression	"decode_residual ( h , sl , gb , sl -> mb + ( 16 * index << pixel_shift ) , index , scan + 1 , h -> dequant4_coeff [ p ] [ qscale ] , 15 )"		1881169	0					
ANR	1881364	Callee	decode_residual		1881169	0					
ANR	1881365	Identifier	decode_residual		1881169	0					
ANR	1881366	ArgumentList	h		1881169	1					
ANR	1881367	Argument	h		1881169	0					
ANR	1881368	Identifier	h		1881169	0					
ANR	1881369	Argument	sl		1881169	1					
ANR	1881370	Identifier	sl		1881169	0					
ANR	1881371	Argument	gb		1881169	2					
ANR	1881372	Identifier	gb		1881169	0					
ANR	1881373	Argument	sl -> mb + ( 16 * index << pixel_shift )		1881169	3					
ANR	1881374	AdditiveExpression	sl -> mb + ( 16 * index << pixel_shift )		1881169	0		+			
ANR	1881375	PtrMemberAccess	sl -> mb		1881169	0					
ANR	1881376	Identifier	sl		1881169	0					
ANR	1881377	Identifier	mb		1881169	1					
ANR	1881378	ShiftExpression	16 * index << pixel_shift		1881169	1		<<			
ANR	1881379	MultiplicativeExpression	16 * index		1881169	0		*			
ANR	1881380	PrimaryExpression	16		1881169	0					
ANR	1881381	Identifier	index		1881169	1					
ANR	1881382	Identifier	pixel_shift		1881169	1					
ANR	1881383	Argument	index		1881169	4					
ANR	1881384	Identifier	index		1881169	0					
ANR	1881385	Argument	scan + 1		1881169	5					
ANR	1881386	AdditiveExpression	scan + 1		1881169	0		+			
ANR	1881387	Identifier	scan		1881169	0					
ANR	1881388	PrimaryExpression	1		1881169	1					
ANR	1881389	Argument	h -> dequant4_coeff [ p ] [ qscale ]		1881169	6					
ANR	1881390	ArrayIndexing	h -> dequant4_coeff [ p ] [ qscale ]		1881169	0					
ANR	1881391	ArrayIndexing	h -> dequant4_coeff [ p ]		1881169	0					
ANR	1881392	PtrMemberAccess	h -> dequant4_coeff		1881169	0					
ANR	1881393	Identifier	h		1881169	0					
ANR	1881394	Identifier	dequant4_coeff		1881169	1					
ANR	1881395	Identifier	p		1881169	1					
ANR	1881396	Identifier	qscale		1881169	1					
ANR	1881397	Argument	15		1881169	7					
ANR	1881398	PrimaryExpression	15		1881169	0					
ANR	1881399	PrimaryExpression	0		1881169	1					
ANR	1881400	CompoundStatement		39:80:877:877	1881169	1					
ANR	1881401	ReturnStatement	return - 1 ;	49:24:1163:1172	1881169	0	True				
ANR	1881402	UnaryOperationExpression	- 1		1881169	0					
ANR	1881403	UnaryOperator	-		1881169	0					
ANR	1881404	PrimaryExpression	1		1881169	1					
ANR	1881405	ReturnStatement	return 0xf ;	57:12:1244:1254	1881169	1	True				
ANR	1881406	PrimaryExpression	0xf		1881169	0					
ANR	1881407	ElseStatement	else		1881169	0					
ANR	1881408	CompoundStatement		51:13:1011:1011	1881169	0					
ANR	1881409	ExpressionStatement	"fill_rectangle ( & sl -> non_zero_count_cache [ scan8 [ p * 16 ] ] , 4 , 4 , 8 , 0 , 1 )"	61:12:1285:1354	1881169	0	True				
ANR	1881410	CallExpression	"fill_rectangle ( & sl -> non_zero_count_cache [ scan8 [ p * 16 ] ] , 4 , 4 , 8 , 0 , 1 )"		1881169	0					
ANR	1881411	Callee	fill_rectangle		1881169	0					
ANR	1881412	Identifier	fill_rectangle		1881169	0					
ANR	1881413	ArgumentList	& sl -> non_zero_count_cache [ scan8 [ p * 16 ] ]		1881169	1					
ANR	1881414	Argument	& sl -> non_zero_count_cache [ scan8 [ p * 16 ] ]		1881169	0					
ANR	1881415	UnaryOperationExpression	& sl -> non_zero_count_cache [ scan8 [ p * 16 ] ]		1881169	0					
ANR	1881416	UnaryOperator	&		1881169	0					
ANR	1881417	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ p * 16 ] ]		1881169	1					
ANR	1881418	PtrMemberAccess	sl -> non_zero_count_cache		1881169	0					
ANR	1881419	Identifier	sl		1881169	0					
ANR	1881420	Identifier	non_zero_count_cache		1881169	1					
ANR	1881421	ArrayIndexing	scan8 [ p * 16 ]		1881169	1					
ANR	1881422	Identifier	scan8		1881169	0					
ANR	1881423	MultiplicativeExpression	p * 16		1881169	1		*			
ANR	1881424	Identifier	p		1881169	0					
ANR	1881425	PrimaryExpression	16		1881169	1					
ANR	1881426	Argument	4		1881169	1					
ANR	1881427	PrimaryExpression	4		1881169	0					
ANR	1881428	Argument	4		1881169	2					
ANR	1881429	PrimaryExpression	4		1881169	0					
ANR	1881430	Argument	8		1881169	3					
ANR	1881431	PrimaryExpression	8		1881169	0					
ANR	1881432	Argument	0		1881169	4					
ANR	1881433	PrimaryExpression	0		1881169	0					
ANR	1881434	Argument	1		1881169	5					
ANR	1881435	PrimaryExpression	1		1881169	0					
ANR	1881436	ReturnStatement	return 0 ;	63:12:1369:1377	1881169	1	True				
ANR	1881437	PrimaryExpression	0		1881169	0					
ANR	1881438	ElseStatement	else		1881169	0					
ANR	1881439	CompoundStatement		65:8:1305:1320	1881169	0					
ANR	1881440	IdentifierDeclStatement	int cqm = ( IS_INTRA ( mb_type ) ? 0 : 3 ) + p ;	69:8:1411:1450	1881169	0	True				
ANR	1881441	IdentifierDecl	cqm = ( IS_INTRA ( mb_type ) ? 0 : 3 ) + p		1881169	0					
ANR	1881442	IdentifierDeclType	int		1881169	0					
ANR	1881443	Identifier	cqm		1881169	1					
ANR	1881444	AssignmentExpression	cqm = ( IS_INTRA ( mb_type ) ? 0 : 3 ) + p		1881169	2		=			
ANR	1881445	Identifier	cqm		1881169	0					
ANR	1881446	AdditiveExpression	( IS_INTRA ( mb_type ) ? 0 : 3 ) + p		1881169	1		+			
ANR	1881447	ConditionalExpression	IS_INTRA ( mb_type ) ? 0 : 3		1881169	0					
ANR	1881448	Condition	IS_INTRA ( mb_type )		1881169	0					
ANR	1881449	CallExpression	IS_INTRA ( mb_type )		1881169	0					
ANR	1881450	Callee	IS_INTRA		1881169	0					
ANR	1881451	Identifier	IS_INTRA		1881169	0					
ANR	1881452	ArgumentList	mb_type		1881169	1					
ANR	1881453	Argument	mb_type		1881169	0					
ANR	1881454	Identifier	mb_type		1881169	0					
ANR	1881455	PrimaryExpression	0		1881169	1					
ANR	1881456	PrimaryExpression	3		1881169	2					
ANR	1881457	Identifier	p		1881169	1					
ANR	1881458	IdentifierDeclStatement	int new_cbp = 0 ;	73:8:1564:1579	1881169	1	True				
ANR	1881459	IdentifierDecl	new_cbp = 0		1881169	0					
ANR	1881460	IdentifierDeclType	int		1881169	0					
ANR	1881461	Identifier	new_cbp		1881169	1					
ANR	1881462	AssignmentExpression	new_cbp = 0		1881169	2		=			
ANR	1881463	Identifier	new_cbp		1881169	0					
ANR	1881464	PrimaryExpression	0		1881169	1					
ANR	1881465	ForStatement	for ( i8x8 = 0 ; i8x8 < 4 ; i8x8 ++ )		1881169	2					
ANR	1881466	ForInit	i8x8 = 0 ;	75:12:1594:1600	1881169	0	True				
ANR	1881467	AssignmentExpression	i8x8 = 0		1881169	0		=			
ANR	1881468	Identifier	i8x8		1881169	0					
ANR	1881469	PrimaryExpression	0		1881169	1					
ANR	1881470	Condition	i8x8 < 4	75:20:1602:1607	1881169	1	True				
ANR	1881471	RelationalExpression	i8x8 < 4		1881169	0		<			
ANR	1881472	Identifier	i8x8		1881169	0					
ANR	1881473	PrimaryExpression	4		1881169	1					
ANR	1881474	PostIncDecOperationExpression	i8x8 ++	75:28:1610:1615	1881169	2	True				
ANR	1881475	Identifier	i8x8		1881169	0					
ANR	1881476	IncDec	++		1881169	1					
ANR	1881477	CompoundStatement		67:35:1358:1358	1881169	3					
ANR	1881478	IfStatement	if ( cbp & ( 1 << i8x8 ) )		1881169	0					
ANR	1881479	Condition	cbp & ( 1 << i8x8 )	77:15:1635:1649	1881169	0	True				
ANR	1881480	BitAndExpression	cbp & ( 1 << i8x8 )		1881169	0		&			
ANR	1881481	Identifier	cbp		1881169	0					
ANR	1881482	ShiftExpression	1 << i8x8		1881169	1		<<			
ANR	1881483	PrimaryExpression	1		1881169	0					
ANR	1881484	Identifier	i8x8		1881169	1					
ANR	1881485	CompoundStatement		69:31:1392:1392	1881169	1					
ANR	1881486	IfStatement	if ( IS_8x8DCT ( mb_type ) )		1881169	0					
ANR	1881487	Condition	IS_8x8DCT ( mb_type )	79:19:1673:1690	1881169	0	True				
ANR	1881488	CallExpression	IS_8x8DCT ( mb_type )		1881169	0					
ANR	1881489	Callee	IS_8x8DCT		1881169	0					
ANR	1881490	Identifier	IS_8x8DCT		1881169	0					
ANR	1881491	ArgumentList	mb_type		1881169	1					
ANR	1881492	Argument	mb_type		1881169	0					
ANR	1881493	Identifier	mb_type		1881169	0					
ANR	1881494	CompoundStatement		75:20:1531:1543	1881169	1					
ANR	1881495	IdentifierDeclStatement	int16_t * buf = & sl -> mb [ 64 * i8x8 + 256 * p << pixel_shift ] ;	81:20:1715:1767	1881169	0	True				
ANR	1881496	IdentifierDecl	* buf = & sl -> mb [ 64 * i8x8 + 256 * p << pixel_shift ]		1881169	0					
ANR	1881497	IdentifierDeclType	int16_t *		1881169	0					
ANR	1881498	Identifier	buf		1881169	1					
ANR	1881499	AssignmentExpression	* buf = & sl -> mb [ 64 * i8x8 + 256 * p << pixel_shift ]		1881169	2		=			
ANR	1881500	Identifier	buf		1881169	0					
ANR	1881501	UnaryOperationExpression	& sl -> mb [ 64 * i8x8 + 256 * p << pixel_shift ]		1881169	1					
ANR	1881502	UnaryOperator	&		1881169	0					
ANR	1881503	ArrayIndexing	sl -> mb [ 64 * i8x8 + 256 * p << pixel_shift ]		1881169	1					
ANR	1881504	PtrMemberAccess	sl -> mb		1881169	0					
ANR	1881505	Identifier	sl		1881169	0					
ANR	1881506	Identifier	mb		1881169	1					
ANR	1881507	ShiftExpression	64 * i8x8 + 256 * p << pixel_shift		1881169	1		<<			
ANR	1881508	AdditiveExpression	64 * i8x8 + 256 * p		1881169	0		+			
ANR	1881509	MultiplicativeExpression	64 * i8x8		1881169	0		*			
ANR	1881510	PrimaryExpression	64		1881169	0					
ANR	1881511	Identifier	i8x8		1881169	1					
ANR	1881512	MultiplicativeExpression	256 * p		1881169	1		*			
ANR	1881513	PrimaryExpression	256		1881169	0					
ANR	1881514	Identifier	p		1881169	1					
ANR	1881515	Identifier	pixel_shift		1881169	1					
ANR	1881516	IdentifierDeclStatement	uint8_t * nnz ;	83:20:1790:1802	1881169	1	True				
ANR	1881517	IdentifierDecl	* nnz		1881169	0					
ANR	1881518	IdentifierDeclType	uint8_t *		1881169	0					
ANR	1881519	Identifier	nnz		1881169	1					
ANR	1881520	ForStatement	for ( i4x4 = 0 ; i4x4 < 4 ; i4x4 ++ )		1881169	2					
ANR	1881521	ForInit	i4x4 = 0 ;	85:24:1829:1835	1881169	0	True				
ANR	1881522	AssignmentExpression	i4x4 = 0		1881169	0		=			
ANR	1881523	Identifier	i4x4		1881169	0					
ANR	1881524	PrimaryExpression	0		1881169	1					
ANR	1881525	Condition	i4x4 < 4	85:32:1837:1842	1881169	1	True				
ANR	1881526	RelationalExpression	i4x4 < 4		1881169	0		<			
ANR	1881527	Identifier	i4x4		1881169	0					
ANR	1881528	PrimaryExpression	4		1881169	1					
ANR	1881529	PostIncDecOperationExpression	i4x4 ++	85:40:1845:1850	1881169	2	True				
ANR	1881530	Identifier	i4x4		1881169	0					
ANR	1881531	IncDec	++		1881169	1					
ANR	1881532	CompoundStatement		79:24:1620:1657	1881169	3					
ANR	1881533	IdentifierDeclStatement	const int index = i4x4 + 4 * i8x8 + p * 16 ;	87:24:1879:1916	1881169	0	True				
ANR	1881534	IdentifierDecl	index = i4x4 + 4 * i8x8 + p * 16		1881169	0					
ANR	1881535	IdentifierDeclType	const int		1881169	0					
ANR	1881536	Identifier	index		1881169	1					
ANR	1881537	AssignmentExpression	index = i4x4 + 4 * i8x8 + p * 16		1881169	2		=			
ANR	1881538	Identifier	index		1881169	0					
ANR	1881539	AdditiveExpression	i4x4 + 4 * i8x8 + p * 16		1881169	1		+			
ANR	1881540	Identifier	i4x4		1881169	0					
ANR	1881541	AdditiveExpression	4 * i8x8 + p * 16		1881169	1		+			
ANR	1881542	MultiplicativeExpression	4 * i8x8		1881169	0		*			
ANR	1881543	PrimaryExpression	4		1881169	0					
ANR	1881544	Identifier	i8x8		1881169	1					
ANR	1881545	MultiplicativeExpression	p * 16		1881169	1		*			
ANR	1881546	Identifier	p		1881169	0					
ANR	1881547	PrimaryExpression	16		1881169	1					
ANR	1881548	IfStatement	"if ( decode_residual ( h , sl , gb , buf , index , scan8x8 + 16 * i4x4 , h -> dequant8_coeff [ cqm ] [ qscale ] , 16 ) < 0 )"		1881169	1					
ANR	1881549	Condition	"decode_residual ( h , sl , gb , buf , index , scan8x8 + 16 * i4x4 , h -> dequant8_coeff [ cqm ] [ qscale ] , 16 ) < 0"	89:28:1947:2086	1881169	0	True				
ANR	1881550	RelationalExpression	"decode_residual ( h , sl , gb , buf , index , scan8x8 + 16 * i4x4 , h -> dequant8_coeff [ cqm ] [ qscale ] , 16 ) < 0"		1881169	0		<			
ANR	1881551	CallExpression	"decode_residual ( h , sl , gb , buf , index , scan8x8 + 16 * i4x4 , h -> dequant8_coeff [ cqm ] [ qscale ] , 16 )"		1881169	0					
ANR	1881552	Callee	decode_residual		1881169	0					
ANR	1881553	Identifier	decode_residual		1881169	0					
ANR	1881554	ArgumentList	h		1881169	1					
ANR	1881555	Argument	h		1881169	0					
ANR	1881556	Identifier	h		1881169	0					
ANR	1881557	Argument	sl		1881169	1					
ANR	1881558	Identifier	sl		1881169	0					
ANR	1881559	Argument	gb		1881169	2					
ANR	1881560	Identifier	gb		1881169	0					
ANR	1881561	Argument	buf		1881169	3					
ANR	1881562	Identifier	buf		1881169	0					
ANR	1881563	Argument	index		1881169	4					
ANR	1881564	Identifier	index		1881169	0					
ANR	1881565	Argument	scan8x8 + 16 * i4x4		1881169	5					
ANR	1881566	AdditiveExpression	scan8x8 + 16 * i4x4		1881169	0		+			
ANR	1881567	Identifier	scan8x8		1881169	0					
ANR	1881568	MultiplicativeExpression	16 * i4x4		1881169	1		*			
ANR	1881569	PrimaryExpression	16		1881169	0					
ANR	1881570	Identifier	i4x4		1881169	1					
ANR	1881571	Argument	h -> dequant8_coeff [ cqm ] [ qscale ]		1881169	6					
ANR	1881572	ArrayIndexing	h -> dequant8_coeff [ cqm ] [ qscale ]		1881169	0					
ANR	1881573	ArrayIndexing	h -> dequant8_coeff [ cqm ]		1881169	0					
ANR	1881574	PtrMemberAccess	h -> dequant8_coeff		1881169	0					
ANR	1881575	Identifier	h		1881169	0					
ANR	1881576	Identifier	dequant8_coeff		1881169	1					
ANR	1881577	Identifier	cqm		1881169	1					
ANR	1881578	Identifier	qscale		1881169	1					
ANR	1881579	Argument	16		1881169	7					
ANR	1881580	PrimaryExpression	16		1881169	0					
ANR	1881581	PrimaryExpression	0		1881169	1					
ANR	1881582	ReturnStatement	return - 1 ;	93:28:2119:2128	1881169	1	True				
ANR	1881583	UnaryOperationExpression	- 1		1881169	0					
ANR	1881584	UnaryOperator	-		1881169	0					
ANR	1881585	PrimaryExpression	1		1881169	1					
ANR	1881586	ExpressionStatement	nnz = & sl -> non_zero_count_cache [ scan8 [ 4 * i8x8 + p * 16 ] ]	97:20:2174:2231	1881169	3	True				
ANR	1881587	AssignmentExpression	nnz = & sl -> non_zero_count_cache [ scan8 [ 4 * i8x8 + p * 16 ] ]		1881169	0		=			
ANR	1881588	Identifier	nnz		1881169	0					
ANR	1881589	UnaryOperationExpression	& sl -> non_zero_count_cache [ scan8 [ 4 * i8x8 + p * 16 ] ]		1881169	1					
ANR	1881590	UnaryOperator	&		1881169	0					
ANR	1881591	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ 4 * i8x8 + p * 16 ] ]		1881169	1					
ANR	1881592	PtrMemberAccess	sl -> non_zero_count_cache		1881169	0					
ANR	1881593	Identifier	sl		1881169	0					
ANR	1881594	Identifier	non_zero_count_cache		1881169	1					
ANR	1881595	ArrayIndexing	scan8 [ 4 * i8x8 + p * 16 ]		1881169	1					
ANR	1881596	Identifier	scan8		1881169	0					
ANR	1881597	AdditiveExpression	4 * i8x8 + p * 16		1881169	1		+			
ANR	1881598	MultiplicativeExpression	4 * i8x8		1881169	0		*			
ANR	1881599	PrimaryExpression	4		1881169	0					
ANR	1881600	Identifier	i8x8		1881169	1					
ANR	1881601	MultiplicativeExpression	p * 16		1881169	1		*			
ANR	1881602	Identifier	p		1881169	0					
ANR	1881603	PrimaryExpression	16		1881169	1					
ANR	1881604	ExpressionStatement	nnz [ 0 ] += nnz [ 1 ] + nnz [ 8 ] + nnz [ 9 ]	99:20:2254:2288	1881169	4	True				
ANR	1881605	AssignmentExpression	nnz [ 0 ] += nnz [ 1 ] + nnz [ 8 ] + nnz [ 9 ]		1881169	0		+=			
ANR	1881606	ArrayIndexing	nnz [ 0 ]		1881169	0					
ANR	1881607	Identifier	nnz		1881169	0					
ANR	1881608	PrimaryExpression	0		1881169	1					
ANR	1881609	AdditiveExpression	nnz [ 1 ] + nnz [ 8 ] + nnz [ 9 ]		1881169	1		+			
ANR	1881610	ArrayIndexing	nnz [ 1 ]		1881169	0					
ANR	1881611	Identifier	nnz		1881169	0					
ANR	1881612	PrimaryExpression	1		1881169	1					
ANR	1881613	AdditiveExpression	nnz [ 8 ] + nnz [ 9 ]		1881169	1		+			
ANR	1881614	ArrayIndexing	nnz [ 8 ]		1881169	0					
ANR	1881615	Identifier	nnz		1881169	0					
ANR	1881616	PrimaryExpression	8		1881169	1					
ANR	1881617	ArrayIndexing	nnz [ 9 ]		1881169	1					
ANR	1881618	Identifier	nnz		1881169	0					
ANR	1881619	PrimaryExpression	9		1881169	1					
ANR	1881620	ExpressionStatement	new_cbp |= ! ! nnz [ 0 ] << i8x8	101:20:2311:2338	1881169	5	True				
ANR	1881621	AssignmentExpression	new_cbp |= ! ! nnz [ 0 ] << i8x8		1881169	0		|=			
ANR	1881622	Identifier	new_cbp		1881169	0					
ANR	1881623	ShiftExpression	! ! nnz [ 0 ] << i8x8		1881169	1		<<			
ANR	1881624	UnaryOperationExpression	! ! nnz [ 0 ]		1881169	0					
ANR	1881625	UnaryOperator	!		1881169	0					
ANR	1881626	UnaryOperationExpression	! nnz [ 0 ]		1881169	1					
ANR	1881627	UnaryOperator	!		1881169	0					
ANR	1881628	ArrayIndexing	nnz [ 0 ]		1881169	1					
ANR	1881629	Identifier	nnz		1881169	0					
ANR	1881630	PrimaryExpression	0		1881169	1					
ANR	1881631	Identifier	i8x8		1881169	1					
ANR	1881632	ElseStatement	else		1881169	0					
ANR	1881633	CompoundStatement		95:21:2103:2103	1881169	0					
ANR	1881634	ForStatement	for ( i4x4 = 0 ; i4x4 < 4 ; i4x4 ++ )		1881169	0					
ANR	1881635	ForInit	i4x4 = 0 ;	105:24:2389:2395	1881169	0	True				
ANR	1881636	AssignmentExpression	i4x4 = 0		1881169	0		=			
ANR	1881637	Identifier	i4x4		1881169	0					
ANR	1881638	PrimaryExpression	0		1881169	1					
ANR	1881639	Condition	i4x4 < 4	105:32:2397:2402	1881169	1	True				
ANR	1881640	RelationalExpression	i4x4 < 4		1881169	0		<			
ANR	1881641	Identifier	i4x4		1881169	0					
ANR	1881642	PrimaryExpression	4		1881169	1					
ANR	1881643	PostIncDecOperationExpression	i4x4 ++	105:40:2405:2410	1881169	2	True				
ANR	1881644	Identifier	i4x4		1881169	0					
ANR	1881645	IncDec	++		1881169	1					
ANR	1881646	CompoundStatement		99:24:2180:2217	1881169	3					
ANR	1881647	IdentifierDeclStatement	const int index = i4x4 + 4 * i8x8 + p * 16 ;	107:24:2439:2476	1881169	0	True				
ANR	1881648	IdentifierDecl	index = i4x4 + 4 * i8x8 + p * 16		1881169	0					
ANR	1881649	IdentifierDeclType	const int		1881169	0					
ANR	1881650	Identifier	index		1881169	1					
ANR	1881651	AssignmentExpression	index = i4x4 + 4 * i8x8 + p * 16		1881169	2		=			
ANR	1881652	Identifier	index		1881169	0					
ANR	1881653	AdditiveExpression	i4x4 + 4 * i8x8 + p * 16		1881169	1		+			
ANR	1881654	Identifier	i4x4		1881169	0					
ANR	1881655	AdditiveExpression	4 * i8x8 + p * 16		1881169	1		+			
ANR	1881656	MultiplicativeExpression	4 * i8x8		1881169	0		*			
ANR	1881657	PrimaryExpression	4		1881169	0					
ANR	1881658	Identifier	i8x8		1881169	1					
ANR	1881659	MultiplicativeExpression	p * 16		1881169	1		*			
ANR	1881660	Identifier	p		1881169	0					
ANR	1881661	PrimaryExpression	16		1881169	1					
ANR	1881662	IfStatement	"if ( decode_residual ( h , sl , gb , sl -> mb + ( 16 * index << pixel_shift ) , index , scan , h -> dequant4_coeff [ cqm ] [ qscale ] , 16 ) < 0 )"		1881169	1					
ANR	1881663	Condition	"decode_residual ( h , sl , gb , sl -> mb + ( 16 * index << pixel_shift ) , index , scan , h -> dequant4_coeff [ cqm ] [ qscale ] , 16 ) < 0"	109:28:2507:2666	1881169	0	True				
ANR	1881664	RelationalExpression	"decode_residual ( h , sl , gb , sl -> mb + ( 16 * index << pixel_shift ) , index , scan , h -> dequant4_coeff [ cqm ] [ qscale ] , 16 ) < 0"		1881169	0		<			
ANR	1881665	CallExpression	"decode_residual ( h , sl , gb , sl -> mb + ( 16 * index << pixel_shift ) , index , scan , h -> dequant4_coeff [ cqm ] [ qscale ] , 16 )"		1881169	0					
ANR	1881666	Callee	decode_residual		1881169	0					
ANR	1881667	Identifier	decode_residual		1881169	0					
ANR	1881668	ArgumentList	h		1881169	1					
ANR	1881669	Argument	h		1881169	0					
ANR	1881670	Identifier	h		1881169	0					
ANR	1881671	Argument	sl		1881169	1					
ANR	1881672	Identifier	sl		1881169	0					
ANR	1881673	Argument	gb		1881169	2					
ANR	1881674	Identifier	gb		1881169	0					
ANR	1881675	Argument	sl -> mb + ( 16 * index << pixel_shift )		1881169	3					
ANR	1881676	AdditiveExpression	sl -> mb + ( 16 * index << pixel_shift )		1881169	0		+			
ANR	1881677	PtrMemberAccess	sl -> mb		1881169	0					
ANR	1881678	Identifier	sl		1881169	0					
ANR	1881679	Identifier	mb		1881169	1					
ANR	1881680	ShiftExpression	16 * index << pixel_shift		1881169	1		<<			
ANR	1881681	MultiplicativeExpression	16 * index		1881169	0		*			
ANR	1881682	PrimaryExpression	16		1881169	0					
ANR	1881683	Identifier	index		1881169	1					
ANR	1881684	Identifier	pixel_shift		1881169	1					
ANR	1881685	Argument	index		1881169	4					
ANR	1881686	Identifier	index		1881169	0					
ANR	1881687	Argument	scan		1881169	5					
ANR	1881688	Identifier	scan		1881169	0					
ANR	1881689	Argument	h -> dequant4_coeff [ cqm ] [ qscale ]		1881169	6					
ANR	1881690	ArrayIndexing	h -> dequant4_coeff [ cqm ] [ qscale ]		1881169	0					
ANR	1881691	ArrayIndexing	h -> dequant4_coeff [ cqm ]		1881169	0					
ANR	1881692	PtrMemberAccess	h -> dequant4_coeff		1881169	0					
ANR	1881693	Identifier	h		1881169	0					
ANR	1881694	Identifier	dequant4_coeff		1881169	1					
ANR	1881695	Identifier	cqm		1881169	1					
ANR	1881696	Identifier	qscale		1881169	1					
ANR	1881697	Argument	16		1881169	7					
ANR	1881698	PrimaryExpression	16		1881169	0					
ANR	1881699	PrimaryExpression	0		1881169	1					
ANR	1881700	CompoundStatement		103:91:2410:2410	1881169	1					
ANR	1881701	ReturnStatement	return - 1 ;	113:28:2700:2709	1881169	0	True				
ANR	1881702	UnaryOperationExpression	- 1		1881169	0					
ANR	1881703	UnaryOperator	-		1881169	0					
ANR	1881704	PrimaryExpression	1		1881169	1					
ANR	1881705	ExpressionStatement	new_cbp |= sl -> non_zero_count_cache [ scan8 [ index ] ] << i8x8	117:24:2763:2820	1881169	2	True				
ANR	1881706	AssignmentExpression	new_cbp |= sl -> non_zero_count_cache [ scan8 [ index ] ] << i8x8		1881169	0		|=			
ANR	1881707	Identifier	new_cbp		1881169	0					
ANR	1881708	ShiftExpression	sl -> non_zero_count_cache [ scan8 [ index ] ] << i8x8		1881169	1		<<			
ANR	1881709	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ index ] ]		1881169	0					
ANR	1881710	PtrMemberAccess	sl -> non_zero_count_cache		1881169	0					
ANR	1881711	Identifier	sl		1881169	0					
ANR	1881712	Identifier	non_zero_count_cache		1881169	1					
ANR	1881713	ArrayIndexing	scan8 [ index ]		1881169	1					
ANR	1881714	Identifier	scan8		1881169	0					
ANR	1881715	Identifier	index		1881169	1					
ANR	1881716	Identifier	i8x8		1881169	1					
ANR	1881717	ElseStatement	else		1881169	0					
ANR	1881718	CompoundStatement		115:17:2623:2623	1881169	0					
ANR	1881719	Statement	uint8_t	125:16:2901:2907	1881169	0	True				
ANR	1881720	Statement	*	125:24:2909:2909	1881169	1	True				
ANR	1881721	Statement	const	125:26:2911:2915	1881169	2	True				
ANR	1881722	ExpressionStatement	nnz = & sl -> non_zero_count_cache [ scan8 [ 4 * i8x8 + p * 16 ] ]	125:32:2917:2974	1881169	3	True				
ANR	1881723	AssignmentExpression	nnz = & sl -> non_zero_count_cache [ scan8 [ 4 * i8x8 + p * 16 ] ]		1881169	0		=			
ANR	1881724	Identifier	nnz		1881169	0					
ANR	1881725	UnaryOperationExpression	& sl -> non_zero_count_cache [ scan8 [ 4 * i8x8 + p * 16 ] ]		1881169	1					
ANR	1881726	UnaryOperator	&		1881169	0					
ANR	1881727	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ 4 * i8x8 + p * 16 ] ]		1881169	1					
ANR	1881728	PtrMemberAccess	sl -> non_zero_count_cache		1881169	0					
ANR	1881729	Identifier	sl		1881169	0					
ANR	1881730	Identifier	non_zero_count_cache		1881169	1					
ANR	1881731	ArrayIndexing	scan8 [ 4 * i8x8 + p * 16 ]		1881169	1					
ANR	1881732	Identifier	scan8		1881169	0					
ANR	1881733	AdditiveExpression	4 * i8x8 + p * 16		1881169	1		+			
ANR	1881734	MultiplicativeExpression	4 * i8x8		1881169	0		*			
ANR	1881735	PrimaryExpression	4		1881169	0					
ANR	1881736	Identifier	i8x8		1881169	1					
ANR	1881737	MultiplicativeExpression	p * 16		1881169	1		*			
ANR	1881738	Identifier	p		1881169	0					
ANR	1881739	PrimaryExpression	16		1881169	1					
ANR	1881740	ExpressionStatement	nnz [ 0 ] = nnz [ 1 ] = nnz [ 8 ] = nnz [ 9 ] = 0	127:16:2993:3030	1881169	4	True				
ANR	1881741	AssignmentExpression	nnz [ 0 ] = nnz [ 1 ] = nnz [ 8 ] = nnz [ 9 ] = 0		1881169	0		=			
ANR	1881742	ArrayIndexing	nnz [ 0 ]		1881169	0					
ANR	1881743	Identifier	nnz		1881169	0					
ANR	1881744	PrimaryExpression	0		1881169	1					
ANR	1881745	AssignmentExpression	nnz [ 1 ] = nnz [ 8 ] = nnz [ 9 ] = 0		1881169	1		=			
ANR	1881746	ArrayIndexing	nnz [ 1 ]		1881169	0					
ANR	1881747	Identifier	nnz		1881169	0					
ANR	1881748	PrimaryExpression	1		1881169	1					
ANR	1881749	AssignmentExpression	nnz [ 8 ] = nnz [ 9 ] = 0		1881169	1		=			
ANR	1881750	ArrayIndexing	nnz [ 8 ]		1881169	0					
ANR	1881751	Identifier	nnz		1881169	0					
ANR	1881752	PrimaryExpression	8		1881169	1					
ANR	1881753	AssignmentExpression	nnz [ 9 ] = 0		1881169	1		=			
ANR	1881754	ArrayIndexing	nnz [ 9 ]		1881169	0					
ANR	1881755	Identifier	nnz		1881169	0					
ANR	1881756	PrimaryExpression	9		1881169	1					
ANR	1881757	PrimaryExpression	0		1881169	1					
ANR	1881758	ReturnStatement	return new_cbp ;	133:8:3067:3081	1881169	3	True				
ANR	1881759	Identifier	new_cbp		1881169	0					
ANR	1881760	ReturnType	int		1881169	1					
ANR	1881761	Identifier	decode_luma_residual		1881169	2					
ANR	1881762	ParameterList	"const H264Context * h , H264SliceContext * sl , GetBitContext * gb , const uint8_t * scan , const uint8_t * scan8x8 , int pixel_shift , int mb_type , int cbp , int p"		1881169	3					
ANR	1881763	Parameter	const H264Context * h	1:25:25:44	1881169	0	True				
ANR	1881764	ParameterType	const H264Context *		1881169	0					
ANR	1881765	Identifier	h		1881169	1					
ANR	1881766	Parameter	H264SliceContext * sl	1:47:47:66	1881169	1	True				
ANR	1881767	ParameterType	H264SliceContext *		1881169	0					
ANR	1881768	Identifier	sl		1881169	1					
ANR	1881769	Parameter	GetBitContext * gb	3:25:95:111	1881169	2	True				
ANR	1881770	ParameterType	GetBitContext *		1881169	0					
ANR	1881771	Identifier	gb		1881169	1					
ANR	1881772	Parameter	const uint8_t * scan	3:44:114:132	1881169	3	True				
ANR	1881773	ParameterType	const uint8_t *		1881169	0					
ANR	1881774	Identifier	scan		1881169	1					
ANR	1881775	Parameter	const uint8_t * scan8x8	5:25:161:182	1881169	4	True				
ANR	1881776	ParameterType	const uint8_t *		1881169	0					
ANR	1881777	Identifier	scan8x8		1881169	1					
ANR	1881778	Parameter	int pixel_shift	5:49:185:199	1881169	5	True				
ANR	1881779	ParameterType	int		1881169	0					
ANR	1881780	Identifier	pixel_shift		1881169	1					
ANR	1881781	Parameter	int mb_type	7:25:228:238	1881169	6	True				
ANR	1881782	ParameterType	int		1881169	0					
ANR	1881783	Identifier	mb_type		1881169	1					
ANR	1881784	Parameter	int cbp	7:38:241:247	1881169	7	True				
ANR	1881785	ParameterType	int		1881169	0					
ANR	1881786	Identifier	cbp		1881169	1					
ANR	1881787	Parameter	int p	7:47:250:254	1881169	8	True				
ANR	1881788	ParameterType	int		1881169	0					
ANR	1881789	Identifier	p		1881169	1					
ANR	1881790	CFGEntryNode	ENTRY		1881169		True				
ANR	1881791	CFGExitNode	EXIT		1881169		True				
ANR	1881792	Symbol	h -> dequant4_coeff		1881169						
ANR	1881793	Symbol	* scan8		1881169						
ANR	1881794	Symbol	* index		1881169						
ANR	1881795	Symbol	* * cqm		1881169						
ANR	1881796	Symbol	* cqm		1881169						
ANR	1881797	Symbol	mb_type		1881169						
ANR	1881798	Symbol	* sl -> non_zero_count_cache		1881169						
ANR	1881799	Symbol	decode_residual		1881169						
ANR	1881800	Symbol	* sl		1881169						
ANR	1881801	Symbol	sl -> chroma_qp		1881169						
ANR	1881802	Symbol	h -> dequant8_coeff		1881169						
ANR	1881803	Symbol	* qscale		1881169						
ANR	1881804	Symbol	NULL		1881169						
ANR	1881805	Symbol	* * h		1881169						
ANR	1881806	Symbol	* nnz		1881169						
ANR	1881807	Symbol	sl -> mb		1881169						
ANR	1881808	Symbol	index		1881169						
ANR	1881809	Symbol	* * scan8		1881169						
ANR	1881810	Symbol	qscale		1881169						
ANR	1881811	Symbol	sl -> non_zero_count_cache		1881169						
ANR	1881812	Symbol	* * * h		1881169						
ANR	1881813	Symbol	* i8x8		1881169						
ANR	1881814	Symbol	nnz		1881169						
ANR	1881815	Symbol	scan8x8		1881169						
ANR	1881816	Symbol	* sl -> chroma_qp		1881169						
ANR	1881817	Symbol	* h -> dequant8_coeff		1881169						
ANR	1881818	Symbol	cqm		1881169						
ANR	1881819	Symbol	* * sl		1881169						
ANR	1881820	Symbol	scan		1881169						
ANR	1881821	Symbol	IS_8x8DCT		1881169						
ANR	1881822	Symbol	IS_INTRA		1881169						
ANR	1881823	Symbol	sl -> mb_luma_dc		1881169						
ANR	1881824	Symbol	pixel_shift		1881169						
ANR	1881825	Symbol	new_cbp		1881169						
ANR	1881826	Symbol	i4x4		1881169						
ANR	1881827	Symbol	scan8		1881169						
ANR	1881828	Symbol	sl		1881169						
ANR	1881829	Symbol	gb		1881169						
ANR	1881830	Symbol	* * p		1881169						
ANR	1881831	Symbol	* * h -> dequant8_coeff		1881169						
ANR	1881832	Symbol	* * index		1881169						
ANR	1881833	Symbol	* h -> dequant4_coeff		1881169						
ANR	1881834	Symbol	i8x8		1881169						
ANR	1881835	Symbol	sl -> qscale		1881169						
ANR	1881836	Symbol	h		1881169						
ANR	1881837	Symbol	* sl -> mb_luma_dc		1881169						
ANR	1881838	Symbol	cbp		1881169						
ANR	1881839	Symbol	p		1881169						
ANR	1881840	Symbol	* h		1881169						
ANR	1881841	Symbol	buf		1881169						
ANR	1881842	Symbol	IS_INTRA16x16		1881169						
ANR	1881843	Symbol	* p		1881169						
ANR	1881844	Symbol	* * h -> dequant4_coeff		1881169						
ANR	1881845	Symbol	LUMA_DC_BLOCK_INDEX		1881169						
