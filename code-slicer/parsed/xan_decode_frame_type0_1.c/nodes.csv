command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9502611	File	/home/p4ultr4n/workplace/ReVeal/raw_code/xan_decode_frame_type0_1.c								
ANR	9502612	Function	xan_decode_frame_type0	1:0:0:2524							
ANR	9502613	FunctionDef	"xan_decode_frame_type0 (AVCodecContext * avctx , AVPacket * avpkt)"		9502612	0					
ANR	9502614	CompoundStatement		3:0:75:2524	9502612	0					
ANR	9502615	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	5:4:82:114	9502612	0	True				
ANR	9502616	IdentifierDecl	* buf = avpkt -> data		9502612	0					
ANR	9502617	IdentifierDeclType	const uint8_t *		9502612	0					
ANR	9502618	Identifier	buf		9502612	1					
ANR	9502619	AssignmentExpression	* buf = avpkt -> data		9502612	2		=			
ANR	9502620	Identifier	buf		9502612	0					
ANR	9502621	PtrMemberAccess	avpkt -> data		9502612	1					
ANR	9502622	Identifier	avpkt		9502612	0					
ANR	9502623	Identifier	data		9502612	1					
ANR	9502624	IdentifierDeclStatement	XanContext * s = avctx -> priv_data ;	7:4:121:153	9502612	1	True				
ANR	9502625	IdentifierDecl	* s = avctx -> priv_data		9502612	0					
ANR	9502626	IdentifierDeclType	XanContext *		9502612	0					
ANR	9502627	Identifier	s		9502612	1					
ANR	9502628	AssignmentExpression	* s = avctx -> priv_data		9502612	2		=			
ANR	9502629	Identifier	s		9502612	0					
ANR	9502630	PtrMemberAccess	avctx -> priv_data		9502612	1					
ANR	9502631	Identifier	avctx		9502612	0					
ANR	9502632	Identifier	priv_data		9502612	1					
ANR	9502633	IdentifierDeclStatement	"uint8_t * ybuf , * prev_buf , * src = s -> scratch_buffer ;"	9:4:160:210	9502612	2	True				
ANR	9502634	IdentifierDecl	* ybuf		9502612	0					
ANR	9502635	IdentifierDeclType	uint8_t *		9502612	0					
ANR	9502636	Identifier	ybuf		9502612	1					
ANR	9502637	IdentifierDecl	* prev_buf		9502612	1					
ANR	9502638	IdentifierDeclType	uint8_t *		9502612	0					
ANR	9502639	Identifier	prev_buf		9502612	1					
ANR	9502640	IdentifierDecl	* src = s -> scratch_buffer		9502612	2					
ANR	9502641	IdentifierDeclType	uint8_t *		9502612	0					
ANR	9502642	Identifier	src		9502612	1					
ANR	9502643	AssignmentExpression	* src = s -> scratch_buffer		9502612	2		=			
ANR	9502644	Identifier	src		9502612	0					
ANR	9502645	PtrMemberAccess	s -> scratch_buffer		9502612	1					
ANR	9502646	Identifier	s		9502612	0					
ANR	9502647	Identifier	scratch_buffer		9502612	1					
ANR	9502648	IdentifierDeclStatement	"unsigned chroma_off , corr_off ;"	11:4:217:247	9502612	3	True				
ANR	9502649	IdentifierDecl	chroma_off		9502612	0					
ANR	9502650	IdentifierDeclType	unsigned		9502612	0					
ANR	9502651	Identifier	chroma_off		9502612	1					
ANR	9502652	IdentifierDecl	corr_off		9502612	1					
ANR	9502653	IdentifierDeclType	unsigned		9502612	0					
ANR	9502654	Identifier	corr_off		9502612	1					
ANR	9502655	IdentifierDeclStatement	"int cur , last , size ;"	13:4:254:273	9502612	4	True				
ANR	9502656	IdentifierDecl	cur		9502612	0					
ANR	9502657	IdentifierDeclType	int		9502612	0					
ANR	9502658	Identifier	cur		9502612	1					
ANR	9502659	IdentifierDecl	last		9502612	1					
ANR	9502660	IdentifierDeclType	int		9502612	0					
ANR	9502661	Identifier	last		9502612	1					
ANR	9502662	IdentifierDecl	size		9502612	2					
ANR	9502663	IdentifierDeclType	int		9502612	0					
ANR	9502664	Identifier	size		9502612	1					
ANR	9502665	IdentifierDeclStatement	"int i , j ;"	15:4:280:288	9502612	5	True				
ANR	9502666	IdentifierDecl	i		9502612	0					
ANR	9502667	IdentifierDeclType	int		9502612	0					
ANR	9502668	Identifier	i		9502612	1					
ANR	9502669	IdentifierDecl	j		9502612	1					
ANR	9502670	IdentifierDeclType	int		9502612	0					
ANR	9502671	Identifier	j		9502612	1					
ANR	9502672	IdentifierDeclStatement	int ret ;	17:4:295:302	9502612	6	True				
ANR	9502673	IdentifierDecl	ret		9502612	0					
ANR	9502674	IdentifierDeclType	int		9502612	0					
ANR	9502675	Identifier	ret		9502612	1					
ANR	9502676	ExpressionStatement	corr_off = AV_RL32 ( buf + 8 )	21:4:311:340	9502612	7	True				
ANR	9502677	AssignmentExpression	corr_off = AV_RL32 ( buf + 8 )		9502612	0		=			
ANR	9502678	Identifier	corr_off		9502612	0					
ANR	9502679	CallExpression	AV_RL32 ( buf + 8 )		9502612	1					
ANR	9502680	Callee	AV_RL32		9502612	0					
ANR	9502681	Identifier	AV_RL32		9502612	0					
ANR	9502682	ArgumentList	buf + 8		9502612	1					
ANR	9502683	Argument	buf + 8		9502612	0					
ANR	9502684	AdditiveExpression	buf + 8		9502612	0		+			
ANR	9502685	Identifier	buf		9502612	0					
ANR	9502686	PrimaryExpression	8		9502612	1					
ANR	9502687	ExpressionStatement	chroma_off = AV_RL32 ( buf + 4 )	23:4:347:376	9502612	8	True				
ANR	9502688	AssignmentExpression	chroma_off = AV_RL32 ( buf + 4 )		9502612	0		=			
ANR	9502689	Identifier	chroma_off		9502612	0					
ANR	9502690	CallExpression	AV_RL32 ( buf + 4 )		9502612	1					
ANR	9502691	Callee	AV_RL32		9502612	0					
ANR	9502692	Identifier	AV_RL32		9502612	0					
ANR	9502693	ArgumentList	buf + 4		9502612	1					
ANR	9502694	Argument	buf + 4		9502612	0					
ANR	9502695	AdditiveExpression	buf + 4		9502612	0		+			
ANR	9502696	Identifier	buf		9502612	0					
ANR	9502697	PrimaryExpression	4		9502612	1					
ANR	9502698	IfStatement	"if ( ( ret = xan_decode_chroma ( avctx , avpkt ) ) != 0 )"		9502612	9					
ANR	9502699	Condition	"( ret = xan_decode_chroma ( avctx , avpkt ) ) != 0"	27:8:389:432	9502612	0	True				
ANR	9502700	EqualityExpression	"( ret = xan_decode_chroma ( avctx , avpkt ) ) != 0"		9502612	0		!=			
ANR	9502701	AssignmentExpression	"ret = xan_decode_chroma ( avctx , avpkt )"		9502612	0		=			
ANR	9502702	Identifier	ret		9502612	0					
ANR	9502703	CallExpression	"xan_decode_chroma ( avctx , avpkt )"		9502612	1					
ANR	9502704	Callee	xan_decode_chroma		9502612	0					
ANR	9502705	Identifier	xan_decode_chroma		9502612	0					
ANR	9502706	ArgumentList	avctx		9502612	1					
ANR	9502707	Argument	avctx		9502612	0					
ANR	9502708	Identifier	avctx		9502612	0					
ANR	9502709	Argument	avpkt		9502612	1					
ANR	9502710	Identifier	avpkt		9502612	0					
ANR	9502711	PrimaryExpression	0		9502612	1					
ANR	9502712	ReturnStatement	return ret ;	29:8:444:454	9502612	1	True				
ANR	9502713	Identifier	ret		9502612	0					
ANR	9502714	ExpressionStatement	size = avpkt -> size - 4	33:4:463:485	9502612	10	True				
ANR	9502715	AssignmentExpression	size = avpkt -> size - 4		9502612	0		=			
ANR	9502716	Identifier	size		9502612	0					
ANR	9502717	AdditiveExpression	avpkt -> size - 4		9502612	1		-			
ANR	9502718	PtrMemberAccess	avpkt -> size		9502612	0					
ANR	9502719	Identifier	avpkt		9502612	0					
ANR	9502720	Identifier	size		9502612	1					
ANR	9502721	PrimaryExpression	4		9502612	1					
ANR	9502722	IfStatement	if ( corr_off >= avpkt -> size )		9502612	11					
ANR	9502723	Condition	corr_off >= avpkt -> size	35:8:496:518	9502612	0	True				
ANR	9502724	RelationalExpression	corr_off >= avpkt -> size		9502612	0		>=			
ANR	9502725	Identifier	corr_off		9502612	0					
ANR	9502726	PtrMemberAccess	avpkt -> size		9502612	1					
ANR	9502727	Identifier	avpkt		9502612	0					
ANR	9502728	Identifier	size		9502612	1					
ANR	9502729	CompoundStatement		33:33:445:445	9502612	1					
ANR	9502730	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""Ignoring invalid correction block position\\n"" )"	37:8:532:609	9502612	0	True				
ANR	9502731	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""Ignoring invalid correction block position\\n"" )"		9502612	0					
ANR	9502732	Callee	av_log		9502612	0					
ANR	9502733	Identifier	av_log		9502612	0					
ANR	9502734	ArgumentList	avctx		9502612	1					
ANR	9502735	Argument	avctx		9502612	0					
ANR	9502736	Identifier	avctx		9502612	0					
ANR	9502737	Argument	AV_LOG_WARNING		9502612	1					
ANR	9502738	Identifier	AV_LOG_WARNING		9502612	0					
ANR	9502739	Argument	"""Ignoring invalid correction block position\\n"""		9502612	2					
ANR	9502740	PrimaryExpression	"""Ignoring invalid correction block position\\n"""		9502612	0					
ANR	9502741	ExpressionStatement	corr_off = 0	39:8:620:632	9502612	1	True				
ANR	9502742	AssignmentExpression	corr_off = 0		9502612	0		=			
ANR	9502743	Identifier	corr_off		9502612	0					
ANR	9502744	PrimaryExpression	0		9502612	1					
ANR	9502745	IfStatement	if ( corr_off )		9502612	12					
ANR	9502746	Condition	corr_off	43:8:650:657	9502612	0	True				
ANR	9502747	Identifier	corr_off		9502612	0					
ANR	9502748	ExpressionStatement	size = corr_off	45:8:669:684	9502612	1	True				
ANR	9502749	AssignmentExpression	size = corr_off		9502612	0		=			
ANR	9502750	Identifier	size		9502612	0					
ANR	9502751	Identifier	corr_off		9502612	1					
ANR	9502752	IfStatement	if ( chroma_off )		9502612	13					
ANR	9502753	Condition	chroma_off	47:8:695:704	9502612	0	True				
ANR	9502754	Identifier	chroma_off		9502612	0					
ANR	9502755	ExpressionStatement	"size = FFMIN ( size , chroma_off )"	49:8:716:746	9502612	1	True				
ANR	9502756	AssignmentExpression	"size = FFMIN ( size , chroma_off )"		9502612	0		=			
ANR	9502757	Identifier	size		9502612	0					
ANR	9502758	CallExpression	"FFMIN ( size , chroma_off )"		9502612	1					
ANR	9502759	Callee	FFMIN		9502612	0					
ANR	9502760	Identifier	FFMIN		9502612	0					
ANR	9502761	ArgumentList	size		9502612	1					
ANR	9502762	Argument	size		9502612	0					
ANR	9502763	Identifier	size		9502612	0					
ANR	9502764	Argument	chroma_off		9502612	1					
ANR	9502765	Identifier	chroma_off		9502612	0					
ANR	9502766	ExpressionStatement	"ret = xan_unpack_luma ( buf + 12 , size , src , s -> buffer_size >> 1 )"	51:4:753:816	9502612	14	True				
ANR	9502767	AssignmentExpression	"ret = xan_unpack_luma ( buf + 12 , size , src , s -> buffer_size >> 1 )"		9502612	0		=			
ANR	9502768	Identifier	ret		9502612	0					
ANR	9502769	CallExpression	"xan_unpack_luma ( buf + 12 , size , src , s -> buffer_size >> 1 )"		9502612	1					
ANR	9502770	Callee	xan_unpack_luma		9502612	0					
ANR	9502771	Identifier	xan_unpack_luma		9502612	0					
ANR	9502772	ArgumentList	buf + 12		9502612	1					
ANR	9502773	Argument	buf + 12		9502612	0					
ANR	9502774	AdditiveExpression	buf + 12		9502612	0		+			
ANR	9502775	Identifier	buf		9502612	0					
ANR	9502776	PrimaryExpression	12		9502612	1					
ANR	9502777	Argument	size		9502612	1					
ANR	9502778	Identifier	size		9502612	0					
ANR	9502779	Argument	src		9502612	2					
ANR	9502780	Identifier	src		9502612	0					
ANR	9502781	Argument	s -> buffer_size >> 1		9502612	3					
ANR	9502782	ShiftExpression	s -> buffer_size >> 1		9502612	0		>>			
ANR	9502783	PtrMemberAccess	s -> buffer_size		9502612	0					
ANR	9502784	Identifier	s		9502612	0					
ANR	9502785	Identifier	buffer_size		9502612	1					
ANR	9502786	PrimaryExpression	1		9502612	1					
ANR	9502787	IfStatement	if ( ret )		9502612	15					
ANR	9502788	Condition	ret	53:8:827:829	9502612	0	True				
ANR	9502789	Identifier	ret		9502612	0					
ANR	9502790	CompoundStatement		51:13:756:756	9502612	1					
ANR	9502791	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Luma decoding failed\\n"" )"	55:8:843:896	9502612	0	True				
ANR	9502792	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Luma decoding failed\\n"" )"		9502612	0					
ANR	9502793	Callee	av_log		9502612	0					
ANR	9502794	Identifier	av_log		9502612	0					
ANR	9502795	ArgumentList	avctx		9502612	1					
ANR	9502796	Argument	avctx		9502612	0					
ANR	9502797	Identifier	avctx		9502612	0					
ANR	9502798	Argument	AV_LOG_ERROR		9502612	1					
ANR	9502799	Identifier	AV_LOG_ERROR		9502612	0					
ANR	9502800	Argument	"""Luma decoding failed\\n"""		9502612	2					
ANR	9502801	PrimaryExpression	"""Luma decoding failed\\n"""		9502612	0					
ANR	9502802	ReturnStatement	return ret ;	57:8:907:917	9502612	1	True				
ANR	9502803	Identifier	ret		9502612	0					
ANR	9502804	ExpressionStatement	ybuf = s -> y_buffer	63:4:933:951	9502612	16	True				
ANR	9502805	AssignmentExpression	ybuf = s -> y_buffer		9502612	0		=			
ANR	9502806	Identifier	ybuf		9502612	0					
ANR	9502807	PtrMemberAccess	s -> y_buffer		9502612	1					
ANR	9502808	Identifier	s		9502612	0					
ANR	9502809	Identifier	y_buffer		9502612	1					
ANR	9502810	ExpressionStatement	last = * src ++	65:4:958:971	9502612	17	True				
ANR	9502811	AssignmentExpression	last = * src ++		9502612	0		=			
ANR	9502812	Identifier	last		9502612	0					
ANR	9502813	UnaryOperationExpression	* src ++		9502612	1					
ANR	9502814	UnaryOperator	*		9502612	0					
ANR	9502815	PostIncDecOperationExpression	src ++		9502612	1					
ANR	9502816	Identifier	src		9502612	0					
ANR	9502817	IncDec	++		9502612	1					
ANR	9502818	ExpressionStatement	ybuf [ 0 ] = last << 1	67:4:978:997	9502612	18	True				
ANR	9502819	AssignmentExpression	ybuf [ 0 ] = last << 1		9502612	0		=			
ANR	9502820	ArrayIndexing	ybuf [ 0 ]		9502612	0					
ANR	9502821	Identifier	ybuf		9502612	0					
ANR	9502822	PrimaryExpression	0		9502612	1					
ANR	9502823	ShiftExpression	last << 1		9502612	1		<<			
ANR	9502824	Identifier	last		9502612	0					
ANR	9502825	PrimaryExpression	1		9502612	1					
ANR	9502826	ForStatement	for ( j = 1 ; j < avctx -> width - 1 ; j += 2 )		9502612	19					
ANR	9502827	ForInit	j = 1 ;	69:9:1009:1014	9502612	0	True				
ANR	9502828	AssignmentExpression	j = 1		9502612	0		=			
ANR	9502829	Identifier	j		9502612	0					
ANR	9502830	PrimaryExpression	1		9502612	1					
ANR	9502831	Condition	j < avctx -> width - 1	69:16:1016:1035	9502612	1	True				
ANR	9502832	RelationalExpression	j < avctx -> width - 1		9502612	0		<			
ANR	9502833	Identifier	j		9502612	0					
ANR	9502834	AdditiveExpression	avctx -> width - 1		9502612	1		-			
ANR	9502835	PtrMemberAccess	avctx -> width		9502612	0					
ANR	9502836	Identifier	avctx		9502612	0					
ANR	9502837	Identifier	width		9502612	1					
ANR	9502838	PrimaryExpression	1		9502612	1					
ANR	9502839	AssignmentExpression	j += 2	69:38:1038:1043	9502612	2	True	+=			
ANR	9502840	Identifier	j		9502612	0					
ANR	9502841	PrimaryExpression	2		9502612	1					
ANR	9502842	CompoundStatement		67:46:970:970	9502612	3					
ANR	9502843	ExpressionStatement	cur = ( last + * src ++ ) & 0x1F	71:8:1057:1085	9502612	0	True				
ANR	9502844	AssignmentExpression	cur = ( last + * src ++ ) & 0x1F		9502612	0		=			
ANR	9502845	Identifier	cur		9502612	0					
ANR	9502846	BitAndExpression	( last + * src ++ ) & 0x1F		9502612	1		&			
ANR	9502847	AdditiveExpression	last + * src ++		9502612	0		+			
ANR	9502848	Identifier	last		9502612	0					
ANR	9502849	UnaryOperationExpression	* src ++		9502612	1					
ANR	9502850	UnaryOperator	*		9502612	0					
ANR	9502851	PostIncDecOperationExpression	src ++		9502612	1					
ANR	9502852	Identifier	src		9502612	0					
ANR	9502853	IncDec	++		9502612	1					
ANR	9502854	PrimaryExpression	0x1F		9502612	1					
ANR	9502855	ExpressionStatement	ybuf [ j ] = last + cur	73:8:1096:1118	9502612	1	True				
ANR	9502856	AssignmentExpression	ybuf [ j ] = last + cur		9502612	0		=			
ANR	9502857	ArrayIndexing	ybuf [ j ]		9502612	0					
ANR	9502858	Identifier	ybuf		9502612	0					
ANR	9502859	Identifier	j		9502612	1					
ANR	9502860	AdditiveExpression	last + cur		9502612	1		+			
ANR	9502861	Identifier	last		9502612	0					
ANR	9502862	Identifier	cur		9502612	1					
ANR	9502863	ExpressionStatement	ybuf [ j + 1 ] = cur << 1	75:8:1129:1149	9502612	2	True				
ANR	9502864	AssignmentExpression	ybuf [ j + 1 ] = cur << 1		9502612	0		=			
ANR	9502865	ArrayIndexing	ybuf [ j + 1 ]		9502612	0					
ANR	9502866	Identifier	ybuf		9502612	0					
ANR	9502867	AdditiveExpression	j + 1		9502612	1		+			
ANR	9502868	Identifier	j		9502612	0					
ANR	9502869	PrimaryExpression	1		9502612	1					
ANR	9502870	ShiftExpression	cur << 1		9502612	1		<<			
ANR	9502871	Identifier	cur		9502612	0					
ANR	9502872	PrimaryExpression	1		9502612	1					
ANR	9502873	ExpressionStatement	last = cur	77:8:1160:1170	9502612	3	True				
ANR	9502874	AssignmentExpression	last = cur		9502612	0		=			
ANR	9502875	Identifier	last		9502612	0					
ANR	9502876	Identifier	cur		9502612	1					
ANR	9502877	ExpressionStatement	ybuf [ j ] = last << 1	81:4:1184:1204	9502612	20	True				
ANR	9502878	AssignmentExpression	ybuf [ j ] = last << 1		9502612	0		=			
ANR	9502879	ArrayIndexing	ybuf [ j ]		9502612	0					
ANR	9502880	Identifier	ybuf		9502612	0					
ANR	9502881	Identifier	j		9502612	1					
ANR	9502882	ShiftExpression	last << 1		9502612	1		<<			
ANR	9502883	Identifier	last		9502612	0					
ANR	9502884	PrimaryExpression	1		9502612	1					
ANR	9502885	ExpressionStatement	prev_buf = ybuf	83:4:1211:1226	9502612	21	True				
ANR	9502886	AssignmentExpression	prev_buf = ybuf		9502612	0		=			
ANR	9502887	Identifier	prev_buf		9502612	0					
ANR	9502888	Identifier	ybuf		9502612	1					
ANR	9502889	ExpressionStatement	ybuf += avctx -> width	85:4:1233:1253	9502612	22	True				
ANR	9502890	AssignmentExpression	ybuf += avctx -> width		9502612	0		+=			
ANR	9502891	Identifier	ybuf		9502612	0					
ANR	9502892	PtrMemberAccess	avctx -> width		9502612	1					
ANR	9502893	Identifier	avctx		9502612	0					
ANR	9502894	Identifier	width		9502612	1					
ANR	9502895	ForStatement	for ( i = 1 ; i < avctx -> height ; i ++ )		9502612	23					
ANR	9502896	ForInit	i = 1 ;	89:9:1267:1272	9502612	0	True				
ANR	9502897	AssignmentExpression	i = 1		9502612	0		=			
ANR	9502898	Identifier	i		9502612	0					
ANR	9502899	PrimaryExpression	1		9502612	1					
ANR	9502900	Condition	i < avctx -> height	89:16:1274:1290	9502612	1	True				
ANR	9502901	RelationalExpression	i < avctx -> height		9502612	0		<			
ANR	9502902	Identifier	i		9502612	0					
ANR	9502903	PtrMemberAccess	avctx -> height		9502612	1					
ANR	9502904	Identifier	avctx		9502612	0					
ANR	9502905	Identifier	height		9502612	1					
ANR	9502906	PostIncDecOperationExpression	i ++	89:35:1293:1295	9502612	2	True				
ANR	9502907	Identifier	i		9502612	0					
ANR	9502908	IncDec	++		9502612	1					
ANR	9502909	CompoundStatement		87:40:1222:1222	9502612	3					
ANR	9502910	ExpressionStatement	last = ( ( prev_buf [ 0 ] >> 1 ) + * src ++ ) & 0x1F	91:8:1309:1352	9502612	0	True				
ANR	9502911	AssignmentExpression	last = ( ( prev_buf [ 0 ] >> 1 ) + * src ++ ) & 0x1F		9502612	0		=			
ANR	9502912	Identifier	last		9502612	0					
ANR	9502913	BitAndExpression	( ( prev_buf [ 0 ] >> 1 ) + * src ++ ) & 0x1F		9502612	1		&			
ANR	9502914	AdditiveExpression	( prev_buf [ 0 ] >> 1 ) + * src ++		9502612	0		+			
ANR	9502915	ShiftExpression	prev_buf [ 0 ] >> 1		9502612	0		>>			
ANR	9502916	ArrayIndexing	prev_buf [ 0 ]		9502612	0					
ANR	9502917	Identifier	prev_buf		9502612	0					
ANR	9502918	PrimaryExpression	0		9502612	1					
ANR	9502919	PrimaryExpression	1		9502612	1					
ANR	9502920	UnaryOperationExpression	* src ++		9502612	1					
ANR	9502921	UnaryOperator	*		9502612	0					
ANR	9502922	PostIncDecOperationExpression	src ++		9502612	1					
ANR	9502923	Identifier	src		9502612	0					
ANR	9502924	IncDec	++		9502612	1					
ANR	9502925	PrimaryExpression	0x1F		9502612	1					
ANR	9502926	ExpressionStatement	ybuf [ 0 ] = last << 1	93:8:1363:1382	9502612	1	True				
ANR	9502927	AssignmentExpression	ybuf [ 0 ] = last << 1		9502612	0		=			
ANR	9502928	ArrayIndexing	ybuf [ 0 ]		9502612	0					
ANR	9502929	Identifier	ybuf		9502612	0					
ANR	9502930	PrimaryExpression	0		9502612	1					
ANR	9502931	ShiftExpression	last << 1		9502612	1		<<			
ANR	9502932	Identifier	last		9502612	0					
ANR	9502933	PrimaryExpression	1		9502612	1					
ANR	9502934	ForStatement	for ( j = 1 ; j < avctx -> width - 1 ; j += 2 )		9502612	2					
ANR	9502935	ForInit	j = 1 ;	95:13:1398:1403	9502612	0	True				
ANR	9502936	AssignmentExpression	j = 1		9502612	0		=			
ANR	9502937	Identifier	j		9502612	0					
ANR	9502938	PrimaryExpression	1		9502612	1					
ANR	9502939	Condition	j < avctx -> width - 1	95:20:1405:1424	9502612	1	True				
ANR	9502940	RelationalExpression	j < avctx -> width - 1		9502612	0		<			
ANR	9502941	Identifier	j		9502612	0					
ANR	9502942	AdditiveExpression	avctx -> width - 1		9502612	1		-			
ANR	9502943	PtrMemberAccess	avctx -> width		9502612	0					
ANR	9502944	Identifier	avctx		9502612	0					
ANR	9502945	Identifier	width		9502612	1					
ANR	9502946	PrimaryExpression	1		9502612	1					
ANR	9502947	AssignmentExpression	j += 2	95:42:1427:1432	9502612	2	True	+=			
ANR	9502948	Identifier	j		9502612	0					
ANR	9502949	PrimaryExpression	2		9502612	1					
ANR	9502950	CompoundStatement		93:50:1359:1359	9502612	3					
ANR	9502951	ExpressionStatement	cur = ( ( prev_buf [ j + 1 ] >> 1 ) + * src ++ ) & 0x1F	97:12:1450:1496	9502612	0	True				
ANR	9502952	AssignmentExpression	cur = ( ( prev_buf [ j + 1 ] >> 1 ) + * src ++ ) & 0x1F		9502612	0		=			
ANR	9502953	Identifier	cur		9502612	0					
ANR	9502954	BitAndExpression	( ( prev_buf [ j + 1 ] >> 1 ) + * src ++ ) & 0x1F		9502612	1		&			
ANR	9502955	AdditiveExpression	( prev_buf [ j + 1 ] >> 1 ) + * src ++		9502612	0		+			
ANR	9502956	ShiftExpression	prev_buf [ j + 1 ] >> 1		9502612	0		>>			
ANR	9502957	ArrayIndexing	prev_buf [ j + 1 ]		9502612	0					
ANR	9502958	Identifier	prev_buf		9502612	0					
ANR	9502959	AdditiveExpression	j + 1		9502612	1		+			
ANR	9502960	Identifier	j		9502612	0					
ANR	9502961	PrimaryExpression	1		9502612	1					
ANR	9502962	PrimaryExpression	1		9502612	1					
ANR	9502963	UnaryOperationExpression	* src ++		9502612	1					
ANR	9502964	UnaryOperator	*		9502612	0					
ANR	9502965	PostIncDecOperationExpression	src ++		9502612	1					
ANR	9502966	Identifier	src		9502612	0					
ANR	9502967	IncDec	++		9502612	1					
ANR	9502968	PrimaryExpression	0x1F		9502612	1					
ANR	9502969	ExpressionStatement	ybuf [ j ] = last + cur	99:12:1511:1533	9502612	1	True				
ANR	9502970	AssignmentExpression	ybuf [ j ] = last + cur		9502612	0		=			
ANR	9502971	ArrayIndexing	ybuf [ j ]		9502612	0					
ANR	9502972	Identifier	ybuf		9502612	0					
ANR	9502973	Identifier	j		9502612	1					
ANR	9502974	AdditiveExpression	last + cur		9502612	1		+			
ANR	9502975	Identifier	last		9502612	0					
ANR	9502976	Identifier	cur		9502612	1					
ANR	9502977	ExpressionStatement	ybuf [ j + 1 ] = cur << 1	101:12:1548:1568	9502612	2	True				
ANR	9502978	AssignmentExpression	ybuf [ j + 1 ] = cur << 1		9502612	0		=			
ANR	9502979	ArrayIndexing	ybuf [ j + 1 ]		9502612	0					
ANR	9502980	Identifier	ybuf		9502612	0					
ANR	9502981	AdditiveExpression	j + 1		9502612	1		+			
ANR	9502982	Identifier	j		9502612	0					
ANR	9502983	PrimaryExpression	1		9502612	1					
ANR	9502984	ShiftExpression	cur << 1		9502612	1		<<			
ANR	9502985	Identifier	cur		9502612	0					
ANR	9502986	PrimaryExpression	1		9502612	1					
ANR	9502987	ExpressionStatement	last = cur	103:12:1583:1593	9502612	3	True				
ANR	9502988	AssignmentExpression	last = cur		9502612	0		=			
ANR	9502989	Identifier	last		9502612	0					
ANR	9502990	Identifier	cur		9502612	1					
ANR	9502991	ExpressionStatement	ybuf [ j ] = last << 1	107:8:1615:1634	9502612	3	True				
ANR	9502992	AssignmentExpression	ybuf [ j ] = last << 1		9502612	0		=			
ANR	9502993	ArrayIndexing	ybuf [ j ]		9502612	0					
ANR	9502994	Identifier	ybuf		9502612	0					
ANR	9502995	Identifier	j		9502612	1					
ANR	9502996	ShiftExpression	last << 1		9502612	1		<<			
ANR	9502997	Identifier	last		9502612	0					
ANR	9502998	PrimaryExpression	1		9502612	1					
ANR	9502999	ExpressionStatement	prev_buf = ybuf	109:8:1645:1660	9502612	4	True				
ANR	9503000	AssignmentExpression	prev_buf = ybuf		9502612	0		=			
ANR	9503001	Identifier	prev_buf		9502612	0					
ANR	9503002	Identifier	ybuf		9502612	1					
ANR	9503003	ExpressionStatement	ybuf += avctx -> width	111:8:1671:1691	9502612	5	True				
ANR	9503004	AssignmentExpression	ybuf += avctx -> width		9502612	0		+=			
ANR	9503005	Identifier	ybuf		9502612	0					
ANR	9503006	PtrMemberAccess	avctx -> width		9502612	1					
ANR	9503007	Identifier	avctx		9502612	0					
ANR	9503008	Identifier	width		9502612	1					
ANR	9503009	IfStatement	if ( corr_off )		9502612	24					
ANR	9503010	Condition	corr_off	117:8:1711:1718	9502612	0	True				
ANR	9503011	Identifier	corr_off		9502612	0					
ANR	9503012	CompoundStatement		117:8:1656:1678	9502612	1					
ANR	9503013	IdentifierDeclStatement	"int corr_end , dec_size ;"	119:8:1732:1754	9502612	0	True				
ANR	9503014	IdentifierDecl	corr_end		9502612	0					
ANR	9503015	IdentifierDeclType	int		9502612	0					
ANR	9503016	Identifier	corr_end		9502612	1					
ANR	9503017	IdentifierDecl	dec_size		9502612	1					
ANR	9503018	IdentifierDeclType	int		9502612	0					
ANR	9503019	Identifier	dec_size		9502612	1					
ANR	9503020	ExpressionStatement	corr_end = avpkt -> size	123:8:1767:1789	9502612	1	True				
ANR	9503021	AssignmentExpression	corr_end = avpkt -> size		9502612	0		=			
ANR	9503022	Identifier	corr_end		9502612	0					
ANR	9503023	PtrMemberAccess	avpkt -> size		9502612	1					
ANR	9503024	Identifier	avpkt		9502612	0					
ANR	9503025	Identifier	size		9502612	1					
ANR	9503026	IfStatement	if ( chroma_off > corr_off )		9502612	2					
ANR	9503027	Condition	chroma_off > corr_off	125:12:1804:1824	9502612	0	True				
ANR	9503028	RelationalExpression	chroma_off > corr_off		9502612	0		>			
ANR	9503029	Identifier	chroma_off		9502612	0					
ANR	9503030	Identifier	corr_off		9502612	1					
ANR	9503031	ExpressionStatement	corr_end = chroma_off	127:12:1840:1861	9502612	1	True				
ANR	9503032	AssignmentExpression	corr_end = chroma_off		9502612	0		=			
ANR	9503033	Identifier	corr_end		9502612	0					
ANR	9503034	Identifier	chroma_off		9502612	1					
ANR	9503035	ExpressionStatement	"dec_size = xan_unpack ( s -> scratch_buffer , s -> buffer_size , avpkt -> data + 8 + corr_off , corr_end - corr_off )"	129:8:1872:2039	9502612	3	True				
ANR	9503036	AssignmentExpression	"dec_size = xan_unpack ( s -> scratch_buffer , s -> buffer_size , avpkt -> data + 8 + corr_off , corr_end - corr_off )"		9502612	0		=			
ANR	9503037	Identifier	dec_size		9502612	0					
ANR	9503038	CallExpression	"xan_unpack ( s -> scratch_buffer , s -> buffer_size , avpkt -> data + 8 + corr_off , corr_end - corr_off )"		9502612	1					
ANR	9503039	Callee	xan_unpack		9502612	0					
ANR	9503040	Identifier	xan_unpack		9502612	0					
ANR	9503041	ArgumentList	s -> scratch_buffer		9502612	1					
ANR	9503042	Argument	s -> scratch_buffer		9502612	0					
ANR	9503043	PtrMemberAccess	s -> scratch_buffer		9502612	0					
ANR	9503044	Identifier	s		9502612	0					
ANR	9503045	Identifier	scratch_buffer		9502612	1					
ANR	9503046	Argument	s -> buffer_size		9502612	1					
ANR	9503047	PtrMemberAccess	s -> buffer_size		9502612	0					
ANR	9503048	Identifier	s		9502612	0					
ANR	9503049	Identifier	buffer_size		9502612	1					
ANR	9503050	Argument	avpkt -> data + 8 + corr_off		9502612	2					
ANR	9503051	AdditiveExpression	avpkt -> data + 8 + corr_off		9502612	0		+			
ANR	9503052	PtrMemberAccess	avpkt -> data		9502612	0					
ANR	9503053	Identifier	avpkt		9502612	0					
ANR	9503054	Identifier	data		9502612	1					
ANR	9503055	AdditiveExpression	8 + corr_off		9502612	1		+			
ANR	9503056	PrimaryExpression	8		9502612	0					
ANR	9503057	Identifier	corr_off		9502612	1					
ANR	9503058	Argument	corr_end - corr_off		9502612	3					
ANR	9503059	AdditiveExpression	corr_end - corr_off		9502612	0		-			
ANR	9503060	Identifier	corr_end		9502612	0					
ANR	9503061	Identifier	corr_off		9502612	1					
ANR	9503062	IfStatement	if ( dec_size < 0 )		9502612	4					
ANR	9503063	Condition	dec_size < 0	135:12:2054:2065	9502612	0	True				
ANR	9503064	RelationalExpression	dec_size < 0		9502612	0		<			
ANR	9503065	Identifier	dec_size		9502612	0					
ANR	9503066	PrimaryExpression	0		9502612	1					
ANR	9503067	ExpressionStatement	dec_size = 0	137:12:2081:2093	9502612	1	True				
ANR	9503068	AssignmentExpression	dec_size = 0		9502612	0		=			
ANR	9503069	Identifier	dec_size		9502612	0					
ANR	9503070	PrimaryExpression	0		9502612	1					
ANR	9503071	ForStatement	for ( i = 0 ; i < dec_size ; i ++ )		9502612	5					
ANR	9503072	ForInit	i = 0 ;	139:13:2109:2114	9502612	0	True				
ANR	9503073	AssignmentExpression	i = 0		9502612	0		=			
ANR	9503074	Identifier	i		9502612	0					
ANR	9503075	PrimaryExpression	0		9502612	1					
ANR	9503076	Condition	i < dec_size	139:20:2116:2127	9502612	1	True				
ANR	9503077	RelationalExpression	i < dec_size		9502612	0		<			
ANR	9503078	Identifier	i		9502612	0					
ANR	9503079	Identifier	dec_size		9502612	1					
ANR	9503080	PostIncDecOperationExpression	i ++	139:34:2130:2132	9502612	2	True				
ANR	9503081	Identifier	i		9502612	0					
ANR	9503082	IncDec	++		9502612	1					
ANR	9503083	ExpressionStatement	s -> y_buffer [ i * 2 + 1 ] = ( s -> y_buffer [ i * 2 + 1 ] + ( s -> scratch_buffer [ i ] << 1 ) ) & 0x3F	141:12:2148:2226	9502612	3	True				
ANR	9503084	AssignmentExpression	s -> y_buffer [ i * 2 + 1 ] = ( s -> y_buffer [ i * 2 + 1 ] + ( s -> scratch_buffer [ i ] << 1 ) ) & 0x3F		9502612	0		=			
ANR	9503085	ArrayIndexing	s -> y_buffer [ i * 2 + 1 ]		9502612	0					
ANR	9503086	PtrMemberAccess	s -> y_buffer		9502612	0					
ANR	9503087	Identifier	s		9502612	0					
ANR	9503088	Identifier	y_buffer		9502612	1					
ANR	9503089	AdditiveExpression	i * 2 + 1		9502612	1		+			
ANR	9503090	MultiplicativeExpression	i * 2		9502612	0		*			
ANR	9503091	Identifier	i		9502612	0					
ANR	9503092	PrimaryExpression	2		9502612	1					
ANR	9503093	PrimaryExpression	1		9502612	1					
ANR	9503094	BitAndExpression	( s -> y_buffer [ i * 2 + 1 ] + ( s -> scratch_buffer [ i ] << 1 ) ) & 0x3F		9502612	1		&			
ANR	9503095	AdditiveExpression	s -> y_buffer [ i * 2 + 1 ] + ( s -> scratch_buffer [ i ] << 1 )		9502612	0		+			
ANR	9503096	ArrayIndexing	s -> y_buffer [ i * 2 + 1 ]		9502612	0					
ANR	9503097	PtrMemberAccess	s -> y_buffer		9502612	0					
ANR	9503098	Identifier	s		9502612	0					
ANR	9503099	Identifier	y_buffer		9502612	1					
ANR	9503100	AdditiveExpression	i * 2 + 1		9502612	1		+			
ANR	9503101	MultiplicativeExpression	i * 2		9502612	0		*			
ANR	9503102	Identifier	i		9502612	0					
ANR	9503103	PrimaryExpression	2		9502612	1					
ANR	9503104	PrimaryExpression	1		9502612	1					
ANR	9503105	ShiftExpression	s -> scratch_buffer [ i ] << 1		9502612	1		<<			
ANR	9503106	ArrayIndexing	s -> scratch_buffer [ i ]		9502612	0					
ANR	9503107	PtrMemberAccess	s -> scratch_buffer		9502612	0					
ANR	9503108	Identifier	s		9502612	0					
ANR	9503109	Identifier	scratch_buffer		9502612	1					
ANR	9503110	Identifier	i		9502612	1					
ANR	9503111	PrimaryExpression	1		9502612	1					
ANR	9503112	PrimaryExpression	0x3F		9502612	1					
ANR	9503113	ExpressionStatement	src = s -> y_buffer	147:4:2242:2260	9502612	25	True				
ANR	9503114	AssignmentExpression	src = s -> y_buffer		9502612	0		=			
ANR	9503115	Identifier	src		9502612	0					
ANR	9503116	PtrMemberAccess	s -> y_buffer		9502612	1					
ANR	9503117	Identifier	s		9502612	0					
ANR	9503118	Identifier	y_buffer		9502612	1					
ANR	9503119	ExpressionStatement	ybuf = s -> pic . data [ 0 ]	149:4:2267:2288	9502612	26	True				
ANR	9503120	AssignmentExpression	ybuf = s -> pic . data [ 0 ]		9502612	0		=			
ANR	9503121	Identifier	ybuf		9502612	0					
ANR	9503122	ArrayIndexing	s -> pic . data [ 0 ]		9502612	1					
ANR	9503123	MemberAccess	s -> pic . data		9502612	0					
ANR	9503124	PtrMemberAccess	s -> pic		9502612	0					
ANR	9503125	Identifier	s		9502612	0					
ANR	9503126	Identifier	pic		9502612	1					
ANR	9503127	Identifier	data		9502612	1					
ANR	9503128	PrimaryExpression	0		9502612	1					
ANR	9503129	ForStatement	for ( j = 0 ; j < avctx -> height ; j ++ )		9502612	27					
ANR	9503130	ForInit	j = 0 ;	151:9:2300:2305	9502612	0	True				
ANR	9503131	AssignmentExpression	j = 0		9502612	0		=			
ANR	9503132	Identifier	j		9502612	0					
ANR	9503133	PrimaryExpression	0		9502612	1					
ANR	9503134	Condition	j < avctx -> height	151:16:2307:2323	9502612	1	True				
ANR	9503135	RelationalExpression	j < avctx -> height		9502612	0		<			
ANR	9503136	Identifier	j		9502612	0					
ANR	9503137	PtrMemberAccess	avctx -> height		9502612	1					
ANR	9503138	Identifier	avctx		9502612	0					
ANR	9503139	Identifier	height		9502612	1					
ANR	9503140	PostIncDecOperationExpression	j ++	151:35:2326:2328	9502612	2	True				
ANR	9503141	Identifier	j		9502612	0					
ANR	9503142	IncDec	++		9502612	1					
ANR	9503143	CompoundStatement		149:40:2255:2255	9502612	3					
ANR	9503144	ForStatement	for ( i = 0 ; i < avctx -> width ; i ++ )		9502612	0					
ANR	9503145	ForInit	i = 0 ;	153:13:2347:2352	9502612	0	True				
ANR	9503146	AssignmentExpression	i = 0		9502612	0		=			
ANR	9503147	Identifier	i		9502612	0					
ANR	9503148	PrimaryExpression	0		9502612	1					
ANR	9503149	Condition	i < avctx -> width	153:20:2354:2369	9502612	1	True				
ANR	9503150	RelationalExpression	i < avctx -> width		9502612	0		<			
ANR	9503151	Identifier	i		9502612	0					
ANR	9503152	PtrMemberAccess	avctx -> width		9502612	1					
ANR	9503153	Identifier	avctx		9502612	0					
ANR	9503154	Identifier	width		9502612	1					
ANR	9503155	PostIncDecOperationExpression	i ++	153:38:2372:2374	9502612	2	True				
ANR	9503156	Identifier	i		9502612	0					
ANR	9503157	IncDec	++		9502612	1					
ANR	9503158	ExpressionStatement	ybuf [ i ] = ( src [ i ] << 2 ) | ( src [ i ] >> 3 )	155:12:2390:2429	9502612	3	True				
ANR	9503159	AssignmentExpression	ybuf [ i ] = ( src [ i ] << 2 ) | ( src [ i ] >> 3 )		9502612	0		=			
ANR	9503160	ArrayIndexing	ybuf [ i ]		9502612	0					
ANR	9503161	Identifier	ybuf		9502612	0					
ANR	9503162	Identifier	i		9502612	1					
ANR	9503163	InclusiveOrExpression	( src [ i ] << 2 ) | ( src [ i ] >> 3 )		9502612	1		|			
ANR	9503164	ShiftExpression	src [ i ] << 2		9502612	0		<<			
ANR	9503165	ArrayIndexing	src [ i ]		9502612	0					
ANR	9503166	Identifier	src		9502612	0					
ANR	9503167	Identifier	i		9502612	1					
ANR	9503168	PrimaryExpression	2		9502612	1					
ANR	9503169	ShiftExpression	src [ i ] >> 3		9502612	1		>>			
ANR	9503170	ArrayIndexing	src [ i ]		9502612	0					
ANR	9503171	Identifier	src		9502612	0					
ANR	9503172	Identifier	i		9502612	1					
ANR	9503173	PrimaryExpression	3		9502612	1					
ANR	9503174	ExpressionStatement	src += avctx -> width	157:8:2440:2460	9502612	1	True				
ANR	9503175	AssignmentExpression	src += avctx -> width		9502612	0		+=			
ANR	9503176	Identifier	src		9502612	0					
ANR	9503177	PtrMemberAccess	avctx -> width		9502612	1					
ANR	9503178	Identifier	avctx		9502612	0					
ANR	9503179	Identifier	width		9502612	1					
ANR	9503180	ExpressionStatement	ybuf += s -> pic . linesize [ 0 ]	159:8:2471:2497	9502612	2	True				
ANR	9503181	AssignmentExpression	ybuf += s -> pic . linesize [ 0 ]		9502612	0		+=			
ANR	9503182	Identifier	ybuf		9502612	0					
ANR	9503183	ArrayIndexing	s -> pic . linesize [ 0 ]		9502612	1					
ANR	9503184	MemberAccess	s -> pic . linesize		9502612	0					
ANR	9503185	PtrMemberAccess	s -> pic		9502612	0					
ANR	9503186	Identifier	s		9502612	0					
ANR	9503187	Identifier	pic		9502612	1					
ANR	9503188	Identifier	linesize		9502612	1					
ANR	9503189	PrimaryExpression	0		9502612	1					
ANR	9503190	ReturnStatement	return 0 ;	165:4:2513:2521	9502612	28	True				
ANR	9503191	PrimaryExpression	0		9502612	0					
ANR	9503192	ReturnType	static int		9502612	1					
ANR	9503193	Identifier	xan_decode_frame_type0		9502612	2					
ANR	9503194	ParameterList	"AVCodecContext * avctx , AVPacket * avpkt"		9502612	3					
ANR	9503195	Parameter	AVCodecContext * avctx	1:34:34:54	9502612	0	True				
ANR	9503196	ParameterType	AVCodecContext *		9502612	0					
ANR	9503197	Identifier	avctx		9502612	1					
ANR	9503198	Parameter	AVPacket * avpkt	1:57:57:71	9502612	1	True				
ANR	9503199	ParameterType	AVPacket *		9502612	0					
ANR	9503200	Identifier	avpkt		9502612	1					
ANR	9503201	CFGEntryNode	ENTRY		9502612		True				
ANR	9503202	CFGExitNode	EXIT		9502612		True				
ANR	9503203	Symbol	* s -> pic . linesize		9502612						
ANR	9503204	Symbol	FFMIN		9502612						
ANR	9503205	Symbol	avpkt		9502612						
ANR	9503206	Symbol	* src		9502612						
ANR	9503207	Symbol	* s -> pic . data		9502612						
ANR	9503208	Symbol	ret		9502612						
ANR	9503209	Symbol	last		9502612						
ANR	9503210	Symbol	xan_decode_chroma		9502612						
ANR	9503211	Symbol	corr_end		9502612						
ANR	9503212	Symbol	xan_unpack_luma		9502612						
ANR	9503213	Symbol	* avctx		9502612						
ANR	9503214	Symbol	size		9502612						
ANR	9503215	Symbol	* prev_buf		9502612						
ANR	9503216	Symbol	dec_size		9502612						
ANR	9503217	Symbol	s -> buffer_size		9502612						
ANR	9503218	Symbol	* ybuf		9502612						
ANR	9503219	Symbol	* src ++		9502612						
ANR	9503220	Symbol	avpkt -> data		9502612						
ANR	9503221	Symbol	corr_off		9502612						
ANR	9503222	Symbol	* s -> y_buffer		9502612						
ANR	9503223	Symbol	cur		9502612						
ANR	9503224	Symbol	s -> pic . linesize		9502612						
ANR	9503225	Symbol	avctx -> width		9502612						
ANR	9503226	Symbol	avctx -> height		9502612						
ANR	9503227	Symbol	* s -> pic		9502612						
ANR	9503228	Symbol	* * s		9502612						
ANR	9503229	Symbol	avpkt -> size		9502612						
ANR	9503230	Symbol	s -> pic		9502612						
ANR	9503231	Symbol	* s -> scratch_buffer		9502612						
ANR	9503232	Symbol	avctx		9502612						
ANR	9503233	Symbol	* avpkt		9502612						
ANR	9503234	Symbol	ybuf		9502612						
ANR	9503235	Symbol	AV_LOG_ERROR		9502612						
ANR	9503236	Symbol	src		9502612						
ANR	9503237	Symbol	prev_buf		9502612						
ANR	9503238	Symbol	i		9502612						
ANR	9503239	Symbol	j		9502612						
ANR	9503240	Symbol	avctx -> priv_data		9502612						
ANR	9503241	Symbol	s -> scratch_buffer		9502612						
ANR	9503242	Symbol	buf		9502612						
ANR	9503243	Symbol	s		9502612						
ANR	9503244	Symbol	* i		9502612						
ANR	9503245	Symbol	* j		9502612						
ANR	9503246	Symbol	AV_RL32		9502612						
ANR	9503247	Symbol	chroma_off		9502612						
ANR	9503248	Symbol	xan_unpack		9502612						
ANR	9503249	Symbol	s -> pic . data		9502612						
ANR	9503250	Symbol	AV_LOG_WARNING		9502612						
ANR	9503251	Symbol	* s		9502612						
ANR	9503252	Symbol	s -> y_buffer		9502612						
