command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	333810	File	/home/p4ultr4n/workplace/ReVeal/raw_code/aac_encode_frame_01_0.c								
ANR	333811	Function	aac_encode_frame	1:0:0:14569							
ANR	333812	FunctionDef	"aac_encode_frame (AVCodecContext * avctx , AVPacket * avpkt , const AVFrame * frame , int * got_packet_ptr)"		333811	0					
ANR	333813	CompoundStatement		5:0:141:14569	333811	0					
ANR	333814	IdentifierDeclStatement	AACEncContext * s = avctx -> priv_data ;	7:4:148:183	333811	0	True				
ANR	333815	IdentifierDecl	* s = avctx -> priv_data		333811	0					
ANR	333816	IdentifierDeclType	AACEncContext *		333811	0					
ANR	333817	Identifier	s		333811	1					
ANR	333818	AssignmentExpression	* s = avctx -> priv_data		333811	2		=			
ANR	333819	Identifier	s		333811	0					
ANR	333820	PtrMemberAccess	avctx -> priv_data		333811	1					
ANR	333821	Identifier	avctx		333811	0					
ANR	333822	Identifier	priv_data		333811	1					
ANR	333823	IdentifierDeclStatement	"float * * samples = s -> planar_samples , * samples2 , * la , * overlap ;"	9:4:190:251	333811	1	True				
ANR	333824	IdentifierDecl	* * samples = s -> planar_samples		333811	0					
ANR	333825	IdentifierDeclType	float * *		333811	0					
ANR	333826	Identifier	samples		333811	1					
ANR	333827	AssignmentExpression	* * samples = s -> planar_samples		333811	2		=			
ANR	333828	Identifier	samples		333811	0					
ANR	333829	PtrMemberAccess	s -> planar_samples		333811	1					
ANR	333830	Identifier	s		333811	0					
ANR	333831	Identifier	planar_samples		333811	1					
ANR	333832	IdentifierDecl	* samples2		333811	1					
ANR	333833	IdentifierDeclType	float *		333811	0					
ANR	333834	Identifier	samples2		333811	1					
ANR	333835	IdentifierDecl	* la		333811	2					
ANR	333836	IdentifierDeclType	float *		333811	0					
ANR	333837	Identifier	la		333811	1					
ANR	333838	IdentifierDecl	* overlap		333811	3					
ANR	333839	IdentifierDeclType	float *		333811	0					
ANR	333840	Identifier	overlap		333811	1					
ANR	333841	IdentifierDeclStatement	ChannelElement * cpe ;	11:4:258:277	333811	2	True				
ANR	333842	IdentifierDecl	* cpe		333811	0					
ANR	333843	IdentifierDeclType	ChannelElement *		333811	0					
ANR	333844	Identifier	cpe		333811	1					
ANR	333845	IdentifierDeclStatement	SingleChannelElement * sce ;	13:4:284:309	333811	3	True				
ANR	333846	IdentifierDecl	* sce		333811	0					
ANR	333847	IdentifierDeclType	SingleChannelElement *		333811	0					
ANR	333848	Identifier	sce		333811	1					
ANR	333849	IdentifierDeclStatement	IndividualChannelStream * ics ;	15:4:316:344	333811	4	True				
ANR	333850	IdentifierDecl	* ics		333811	0					
ANR	333851	IdentifierDeclType	IndividualChannelStream *		333811	0					
ANR	333852	Identifier	ics		333811	1					
ANR	333853	IdentifierDeclStatement	"int i , its , ch , w , chans , tag , start_ch , ret , frame_bits ;"	17:4:351:407	333811	5	True				
ANR	333854	IdentifierDecl	i		333811	0					
ANR	333855	IdentifierDeclType	int		333811	0					
ANR	333856	Identifier	i		333811	1					
ANR	333857	IdentifierDecl	its		333811	1					
ANR	333858	IdentifierDeclType	int		333811	0					
ANR	333859	Identifier	its		333811	1					
ANR	333860	IdentifierDecl	ch		333811	2					
ANR	333861	IdentifierDeclType	int		333811	0					
ANR	333862	Identifier	ch		333811	1					
ANR	333863	IdentifierDecl	w		333811	3					
ANR	333864	IdentifierDeclType	int		333811	0					
ANR	333865	Identifier	w		333811	1					
ANR	333866	IdentifierDecl	chans		333811	4					
ANR	333867	IdentifierDeclType	int		333811	0					
ANR	333868	Identifier	chans		333811	1					
ANR	333869	IdentifierDecl	tag		333811	5					
ANR	333870	IdentifierDeclType	int		333811	0					
ANR	333871	Identifier	tag		333811	1					
ANR	333872	IdentifierDecl	start_ch		333811	6					
ANR	333873	IdentifierDeclType	int		333811	0					
ANR	333874	Identifier	start_ch		333811	1					
ANR	333875	IdentifierDecl	ret		333811	7					
ANR	333876	IdentifierDeclType	int		333811	0					
ANR	333877	Identifier	ret		333811	1					
ANR	333878	IdentifierDecl	frame_bits		333811	8					
ANR	333879	IdentifierDeclType	int		333811	0					
ANR	333880	Identifier	frame_bits		333811	1					
ANR	333881	IdentifierDeclStatement	"int target_bits , rate_bits , too_many_bits , too_few_bits ;"	19:4:414:469	333811	6	True				
ANR	333882	IdentifierDecl	target_bits		333811	0					
ANR	333883	IdentifierDeclType	int		333811	0					
ANR	333884	Identifier	target_bits		333811	1					
ANR	333885	IdentifierDecl	rate_bits		333811	1					
ANR	333886	IdentifierDeclType	int		333811	0					
ANR	333887	Identifier	rate_bits		333811	1					
ANR	333888	IdentifierDecl	too_many_bits		333811	2					
ANR	333889	IdentifierDeclType	int		333811	0					
ANR	333890	Identifier	too_many_bits		333811	1					
ANR	333891	IdentifierDecl	too_few_bits		333811	3					
ANR	333892	IdentifierDeclType	int		333811	0					
ANR	333893	Identifier	too_few_bits		333811	1					
ANR	333894	IdentifierDeclStatement	"int ms_mode = 0 , is_mode = 0 , tns_mode = 0 , pred_mode = 0 ;"	21:4:476:533	333811	7	True				
ANR	333895	IdentifierDecl	ms_mode = 0		333811	0					
ANR	333896	IdentifierDeclType	int		333811	0					
ANR	333897	Identifier	ms_mode		333811	1					
ANR	333898	AssignmentExpression	ms_mode = 0		333811	2		=			
ANR	333899	Identifier	ms_mode		333811	0					
ANR	333900	PrimaryExpression	0		333811	1					
ANR	333901	IdentifierDecl	is_mode = 0		333811	1					
ANR	333902	IdentifierDeclType	int		333811	0					
ANR	333903	Identifier	is_mode		333811	1					
ANR	333904	AssignmentExpression	is_mode = 0		333811	2		=			
ANR	333905	Identifier	is_mode		333811	0					
ANR	333906	PrimaryExpression	0		333811	1					
ANR	333907	IdentifierDecl	tns_mode = 0		333811	2					
ANR	333908	IdentifierDeclType	int		333811	0					
ANR	333909	Identifier	tns_mode		333811	1					
ANR	333910	AssignmentExpression	tns_mode = 0		333811	2		=			
ANR	333911	Identifier	tns_mode		333811	0					
ANR	333912	PrimaryExpression	0		333811	1					
ANR	333913	IdentifierDecl	pred_mode = 0		333811	3					
ANR	333914	IdentifierDeclType	int		333811	0					
ANR	333915	Identifier	pred_mode		333811	1					
ANR	333916	AssignmentExpression	pred_mode = 0		333811	2		=			
ANR	333917	Identifier	pred_mode		333811	0					
ANR	333918	PrimaryExpression	0		333811	1					
ANR	333919	IdentifierDeclStatement	int chan_el_counter [ 4 ] ;	23:4:540:562	333811	8	True				
ANR	333920	IdentifierDecl	chan_el_counter [ 4 ]		333811	0					
ANR	333921	IdentifierDeclType	int [ 4 ]		333811	0					
ANR	333922	Identifier	chan_el_counter		333811	1					
ANR	333923	PrimaryExpression	4		333811	2					
ANR	333924	IdentifierDeclStatement	FFPsyWindowInfo windows [ AAC_MAX_CHANNELS ] ;	25:4:569:610	333811	9	True				
ANR	333925	IdentifierDecl	windows [ AAC_MAX_CHANNELS ]		333811	0					
ANR	333926	IdentifierDeclType	FFPsyWindowInfo [ AAC_MAX_CHANNELS ]		333811	0					
ANR	333927	Identifier	windows		333811	1					
ANR	333928	Identifier	AAC_MAX_CHANNELS		333811	2					
ANR	333929	IfStatement	if ( s -> last_frame == 2 )		333811	10					
ANR	333930	Condition	s -> last_frame == 2	29:8:623:640	333811	0	True				
ANR	333931	EqualityExpression	s -> last_frame == 2		333811	0		==			
ANR	333932	PtrMemberAccess	s -> last_frame		333811	0					
ANR	333933	Identifier	s		333811	0					
ANR	333934	Identifier	last_frame		333811	1					
ANR	333935	PrimaryExpression	2		333811	1					
ANR	333936	ReturnStatement	return 0 ;	31:8:652:660	333811	1	True				
ANR	333937	PrimaryExpression	0		333811	0					
ANR	333938	IfStatement	if ( frame )		333811	11					
ANR	333939	Condition	frame	37:8:711:715	333811	0	True				
ANR	333940	Identifier	frame		333811	0					
ANR	333941	CompoundStatement		33:15:576:576	333811	1					
ANR	333942	IfStatement	"if ( ( ret = ff_af_queue_add ( & s -> afq , frame ) ) < 0 )"		333811	0					
ANR	333943	Condition	"( ret = ff_af_queue_add ( & s -> afq , frame ) ) < 0"	39:12:733:775	333811	0	True				
ANR	333944	RelationalExpression	"( ret = ff_af_queue_add ( & s -> afq , frame ) ) < 0"		333811	0		<			
ANR	333945	AssignmentExpression	"ret = ff_af_queue_add ( & s -> afq , frame )"		333811	0		=			
ANR	333946	Identifier	ret		333811	0					
ANR	333947	CallExpression	"ff_af_queue_add ( & s -> afq , frame )"		333811	1					
ANR	333948	Callee	ff_af_queue_add		333811	0					
ANR	333949	Identifier	ff_af_queue_add		333811	0					
ANR	333950	ArgumentList	& s -> afq		333811	1					
ANR	333951	Argument	& s -> afq		333811	0					
ANR	333952	UnaryOperationExpression	& s -> afq		333811	0					
ANR	333953	UnaryOperator	&		333811	0					
ANR	333954	PtrMemberAccess	s -> afq		333811	1					
ANR	333955	Identifier	s		333811	0					
ANR	333956	Identifier	afq		333811	1					
ANR	333957	Argument	frame		333811	1					
ANR	333958	Identifier	frame		333811	0					
ANR	333959	PrimaryExpression	0		333811	1					
ANR	333960	ReturnStatement	return ret ;	41:12:791:801	333811	1	True				
ANR	333961	Identifier	ret		333811	0					
ANR	333962	ExpressionStatement	"copy_input_samples ( s , frame )"	47:4:817:845	333811	12	True				
ANR	333963	CallExpression	"copy_input_samples ( s , frame )"		333811	0					
ANR	333964	Callee	copy_input_samples		333811	0					
ANR	333965	Identifier	copy_input_samples		333811	0					
ANR	333966	ArgumentList	s		333811	1					
ANR	333967	Argument	s		333811	0					
ANR	333968	Identifier	s		333811	0					
ANR	333969	Argument	frame		333811	1					
ANR	333970	Identifier	frame		333811	0					
ANR	333971	IfStatement	if ( s -> psypp )		333811	13					
ANR	333972	Condition	s -> psypp	49:8:856:863	333811	0	True				
ANR	333973	PtrMemberAccess	s -> psypp		333811	0					
ANR	333974	Identifier	s		333811	0					
ANR	333975	Identifier	psypp		333811	1					
ANR	333976	ExpressionStatement	"ff_psy_preprocess ( s -> psypp , s -> planar_samples , s -> channels )"	51:8:875:934	333811	1	True				
ANR	333977	CallExpression	"ff_psy_preprocess ( s -> psypp , s -> planar_samples , s -> channels )"		333811	0					
ANR	333978	Callee	ff_psy_preprocess		333811	0					
ANR	333979	Identifier	ff_psy_preprocess		333811	0					
ANR	333980	ArgumentList	s -> psypp		333811	1					
ANR	333981	Argument	s -> psypp		333811	0					
ANR	333982	PtrMemberAccess	s -> psypp		333811	0					
ANR	333983	Identifier	s		333811	0					
ANR	333984	Identifier	psypp		333811	1					
ANR	333985	Argument	s -> planar_samples		333811	1					
ANR	333986	PtrMemberAccess	s -> planar_samples		333811	0					
ANR	333987	Identifier	s		333811	0					
ANR	333988	Identifier	planar_samples		333811	1					
ANR	333989	Argument	s -> channels		333811	2					
ANR	333990	PtrMemberAccess	s -> channels		333811	0					
ANR	333991	Identifier	s		333811	0					
ANR	333992	Identifier	channels		333811	1					
ANR	333993	IfStatement	if ( ! avctx -> frame_number )		333811	14					
ANR	333994	Condition	! avctx -> frame_number	55:8:947:966	333811	0	True				
ANR	333995	UnaryOperationExpression	! avctx -> frame_number		333811	0					
ANR	333996	UnaryOperator	!		333811	0					
ANR	333997	PtrMemberAccess	avctx -> frame_number		333811	1					
ANR	333998	Identifier	avctx		333811	0					
ANR	333999	Identifier	frame_number		333811	1					
ANR	334000	ReturnStatement	return 0 ;	57:8:978:986	333811	1	True				
ANR	334001	PrimaryExpression	0		333811	0					
ANR	334002	ExpressionStatement	start_ch = 0	61:4:995:1007	333811	15	True				
ANR	334003	AssignmentExpression	start_ch = 0		333811	0		=			
ANR	334004	Identifier	start_ch		333811	0					
ANR	334005	PrimaryExpression	0		333811	1					
ANR	334006	ForStatement	for ( i = 0 ; i < s -> chan_map [ 0 ] ; i ++ )		333811	16					
ANR	334007	ForInit	i = 0 ;	63:9:1019:1024	333811	0	True				
ANR	334008	AssignmentExpression	i = 0		333811	0		=			
ANR	334009	Identifier	i		333811	0					
ANR	334010	PrimaryExpression	0		333811	1					
ANR	334011	Condition	i < s -> chan_map [ 0 ]	63:16:1026:1043	333811	1	True				
ANR	334012	RelationalExpression	i < s -> chan_map [ 0 ]		333811	0		<			
ANR	334013	Identifier	i		333811	0					
ANR	334014	ArrayIndexing	s -> chan_map [ 0 ]		333811	1					
ANR	334015	PtrMemberAccess	s -> chan_map		333811	0					
ANR	334016	Identifier	s		333811	0					
ANR	334017	Identifier	chan_map		333811	1					
ANR	334018	PrimaryExpression	0		333811	1					
ANR	334019	PostIncDecOperationExpression	i ++	63:36:1046:1048	333811	2	True				
ANR	334020	Identifier	i		333811	0					
ANR	334021	IncDec	++		333811	1					
ANR	334022	CompoundStatement		61:8:920:960	333811	3					
ANR	334023	IdentifierDeclStatement	FFPsyWindowInfo * wi = windows + start_ch ;	65:8:1062:1102	333811	0	True				
ANR	334024	IdentifierDecl	* wi = windows + start_ch		333811	0					
ANR	334025	IdentifierDeclType	FFPsyWindowInfo *		333811	0					
ANR	334026	Identifier	wi		333811	1					
ANR	334027	AssignmentExpression	* wi = windows + start_ch		333811	2		=			
ANR	334028	Identifier	wi		333811	0					
ANR	334029	AdditiveExpression	windows + start_ch		333811	1		+			
ANR	334030	Identifier	windows		333811	0					
ANR	334031	Identifier	start_ch		333811	1					
ANR	334032	ExpressionStatement	tag = s -> chan_map [ i + 1 ]	67:8:1113:1140	333811	1	True				
ANR	334033	AssignmentExpression	tag = s -> chan_map [ i + 1 ]		333811	0		=			
ANR	334034	Identifier	tag		333811	0					
ANR	334035	ArrayIndexing	s -> chan_map [ i + 1 ]		333811	1					
ANR	334036	PtrMemberAccess	s -> chan_map		333811	0					
ANR	334037	Identifier	s		333811	0					
ANR	334038	Identifier	chan_map		333811	1					
ANR	334039	AdditiveExpression	i + 1		333811	1		+			
ANR	334040	Identifier	i		333811	0					
ANR	334041	PrimaryExpression	1		333811	1					
ANR	334042	ExpressionStatement	chans = tag == TYPE_CPE ? 2 : 1	69:8:1151:1185	333811	2	True				
ANR	334043	AssignmentExpression	chans = tag == TYPE_CPE ? 2 : 1		333811	0		=			
ANR	334044	Identifier	chans		333811	0					
ANR	334045	ConditionalExpression	tag == TYPE_CPE ? 2 : 1		333811	1					
ANR	334046	Condition	tag == TYPE_CPE		333811	0					
ANR	334047	EqualityExpression	tag == TYPE_CPE		333811	0		==			
ANR	334048	Identifier	tag		333811	0					
ANR	334049	Identifier	TYPE_CPE		333811	1					
ANR	334050	PrimaryExpression	2		333811	1					
ANR	334051	PrimaryExpression	1		333811	2					
ANR	334052	ExpressionStatement	cpe = & s -> cpe [ i ]	71:8:1196:1217	333811	3	True				
ANR	334053	AssignmentExpression	cpe = & s -> cpe [ i ]		333811	0		=			
ANR	334054	Identifier	cpe		333811	0					
ANR	334055	UnaryOperationExpression	& s -> cpe [ i ]		333811	1					
ANR	334056	UnaryOperator	&		333811	0					
ANR	334057	ArrayIndexing	s -> cpe [ i ]		333811	1					
ANR	334058	PtrMemberAccess	s -> cpe		333811	0					
ANR	334059	Identifier	s		333811	0					
ANR	334060	Identifier	cpe		333811	1					
ANR	334061	Identifier	i		333811	1					
ANR	334062	ForStatement	for ( ch = 0 ; ch < chans ; ch ++ )		333811	4					
ANR	334063	ForInit	ch = 0 ;	73:13:1233:1239	333811	0	True				
ANR	334064	AssignmentExpression	ch = 0		333811	0		=			
ANR	334065	Identifier	ch		333811	0					
ANR	334066	PrimaryExpression	0		333811	1					
ANR	334067	Condition	ch < chans	73:21:1241:1250	333811	1	True				
ANR	334068	RelationalExpression	ch < chans		333811	0		<			
ANR	334069	Identifier	ch		333811	0					
ANR	334070	Identifier	chans		333811	1					
ANR	334071	PostIncDecOperationExpression	ch ++	73:33:1253:1256	333811	2	True				
ANR	334072	Identifier	ch		333811	0					
ANR	334073	IncDec	++		333811	1					
ANR	334074	CompoundStatement		71:12:1132:1159	333811	3					
ANR	334075	IdentifierDeclStatement	float clip_avoidance_factor ;	75:12:1274:1301	333811	0	True				
ANR	334076	IdentifierDecl	clip_avoidance_factor		333811	0					
ANR	334077	IdentifierDeclType	float		333811	0					
ANR	334078	Identifier	clip_avoidance_factor		333811	1					
ANR	334079	ExpressionStatement	sce = & cpe -> ch [ ch ]	77:12:1316:1334	333811	1	True				
ANR	334080	AssignmentExpression	sce = & cpe -> ch [ ch ]		333811	0		=			
ANR	334081	Identifier	sce		333811	0					
ANR	334082	UnaryOperationExpression	& cpe -> ch [ ch ]		333811	1					
ANR	334083	UnaryOperator	&		333811	0					
ANR	334084	ArrayIndexing	cpe -> ch [ ch ]		333811	1					
ANR	334085	PtrMemberAccess	cpe -> ch		333811	0					
ANR	334086	Identifier	cpe		333811	0					
ANR	334087	Identifier	ch		333811	1					
ANR	334088	Identifier	ch		333811	1					
ANR	334089	ExpressionStatement	ics = & sce -> ics	79:12:1349:1364	333811	2	True				
ANR	334090	AssignmentExpression	ics = & sce -> ics		333811	0		=			
ANR	334091	Identifier	ics		333811	0					
ANR	334092	UnaryOperationExpression	& sce -> ics		333811	1					
ANR	334093	UnaryOperator	&		333811	0					
ANR	334094	PtrMemberAccess	sce -> ics		333811	1					
ANR	334095	Identifier	sce		333811	0					
ANR	334096	Identifier	ics		333811	1					
ANR	334097	ExpressionStatement	s -> cur_channel = start_ch + ch	81:12:1379:1409	333811	3	True				
ANR	334098	AssignmentExpression	s -> cur_channel = start_ch + ch		333811	0		=			
ANR	334099	PtrMemberAccess	s -> cur_channel		333811	0					
ANR	334100	Identifier	s		333811	0					
ANR	334101	Identifier	cur_channel		333811	1					
ANR	334102	AdditiveExpression	start_ch + ch		333811	1		+			
ANR	334103	Identifier	start_ch		333811	0					
ANR	334104	Identifier	ch		333811	1					
ANR	334105	ExpressionStatement	overlap = & samples [ s -> cur_channel ] [ 0 ]	83:12:1424:1462	333811	4	True				
ANR	334106	AssignmentExpression	overlap = & samples [ s -> cur_channel ] [ 0 ]		333811	0		=			
ANR	334107	Identifier	overlap		333811	0					
ANR	334108	UnaryOperationExpression	& samples [ s -> cur_channel ] [ 0 ]		333811	1					
ANR	334109	UnaryOperator	&		333811	0					
ANR	334110	ArrayIndexing	samples [ s -> cur_channel ] [ 0 ]		333811	1					
ANR	334111	ArrayIndexing	samples [ s -> cur_channel ]		333811	0					
ANR	334112	Identifier	samples		333811	0					
ANR	334113	PtrMemberAccess	s -> cur_channel		333811	1					
ANR	334114	Identifier	s		333811	0					
ANR	334115	Identifier	cur_channel		333811	1					
ANR	334116	PrimaryExpression	0		333811	1					
ANR	334117	ExpressionStatement	samples2 = overlap + 1024	85:12:1477:1502	333811	5	True				
ANR	334118	AssignmentExpression	samples2 = overlap + 1024		333811	0		=			
ANR	334119	Identifier	samples2		333811	0					
ANR	334120	AdditiveExpression	overlap + 1024		333811	1		+			
ANR	334121	Identifier	overlap		333811	0					
ANR	334122	PrimaryExpression	1024		333811	1					
ANR	334123	ExpressionStatement	la = samples2 + ( 448 + 64 )	87:12:1517:1547	333811	6	True				
ANR	334124	AssignmentExpression	la = samples2 + ( 448 + 64 )		333811	0		=			
ANR	334125	Identifier	la		333811	0					
ANR	334126	AdditiveExpression	samples2 + ( 448 + 64 )		333811	1		+			
ANR	334127	Identifier	samples2		333811	0					
ANR	334128	AdditiveExpression	448 + 64		333811	1		+			
ANR	334129	PrimaryExpression	448		333811	0					
ANR	334130	PrimaryExpression	64		333811	1					
ANR	334131	IfStatement	if ( ! frame )		333811	7					
ANR	334132	Condition	! frame	89:16:1566:1571	333811	0	True				
ANR	334133	UnaryOperationExpression	! frame		333811	0					
ANR	334134	UnaryOperator	!		333811	0					
ANR	334135	Identifier	frame		333811	1					
ANR	334136	ExpressionStatement	la = NULL	91:16:1591:1600	333811	1	True				
ANR	334137	AssignmentExpression	la = NULL		333811	0		=			
ANR	334138	Identifier	la		333811	0					
ANR	334139	Identifier	NULL		333811	1					
ANR	334140	IfStatement	if ( tag == TYPE_LFE )		333811	8					
ANR	334141	Condition	tag == TYPE_LFE	93:16:1619:1633	333811	0	True				
ANR	334142	EqualityExpression	tag == TYPE_LFE		333811	0		==			
ANR	334143	Identifier	tag		333811	0					
ANR	334144	Identifier	TYPE_LFE		333811	1					
ANR	334145	CompoundStatement		89:33:1494:1494	333811	1					
ANR	334146	ExpressionStatement	wi [ ch ] . window_type [ 0 ] = ONLY_LONG_SEQUENCE	95:16:1655:1697	333811	0	True				
ANR	334147	AssignmentExpression	wi [ ch ] . window_type [ 0 ] = ONLY_LONG_SEQUENCE		333811	0		=			
ANR	334148	ArrayIndexing	wi [ ch ] . window_type [ 0 ]		333811	0					
ANR	334149	MemberAccess	wi [ ch ] . window_type		333811	0					
ANR	334150	ArrayIndexing	wi [ ch ]		333811	0					
ANR	334151	Identifier	wi		333811	0					
ANR	334152	Identifier	ch		333811	1					
ANR	334153	Identifier	window_type		333811	1					
ANR	334154	PrimaryExpression	0		333811	1					
ANR	334155	Identifier	ONLY_LONG_SEQUENCE		333811	1					
ANR	334156	ExpressionStatement	wi [ ch ] . window_shape = 0	97:16:1716:1741	333811	1	True				
ANR	334157	AssignmentExpression	wi [ ch ] . window_shape = 0		333811	0		=			
ANR	334158	MemberAccess	wi [ ch ] . window_shape		333811	0					
ANR	334159	ArrayIndexing	wi [ ch ]		333811	0					
ANR	334160	Identifier	wi		333811	0					
ANR	334161	Identifier	ch		333811	1					
ANR	334162	Identifier	window_shape		333811	1					
ANR	334163	PrimaryExpression	0		333811	1					
ANR	334164	ExpressionStatement	wi [ ch ] . num_windows = 1	99:16:1760:1785	333811	2	True				
ANR	334165	AssignmentExpression	wi [ ch ] . num_windows = 1		333811	0		=			
ANR	334166	MemberAccess	wi [ ch ] . num_windows		333811	0					
ANR	334167	ArrayIndexing	wi [ ch ]		333811	0					
ANR	334168	Identifier	wi		333811	0					
ANR	334169	Identifier	ch		333811	1					
ANR	334170	Identifier	num_windows		333811	1					
ANR	334171	PrimaryExpression	1		333811	1					
ANR	334172	ExpressionStatement	wi [ ch ] . grouping [ 0 ] = 1	101:16:1804:1829	333811	3	True				
ANR	334173	AssignmentExpression	wi [ ch ] . grouping [ 0 ] = 1		333811	0		=			
ANR	334174	ArrayIndexing	wi [ ch ] . grouping [ 0 ]		333811	0					
ANR	334175	MemberAccess	wi [ ch ] . grouping		333811	0					
ANR	334176	ArrayIndexing	wi [ ch ]		333811	0					
ANR	334177	Identifier	wi		333811	0					
ANR	334178	Identifier	ch		333811	1					
ANR	334179	Identifier	grouping		333811	1					
ANR	334180	PrimaryExpression	0		333811	1					
ANR	334181	PrimaryExpression	1		333811	1					
ANR	334182	ExpressionStatement	ics -> num_swb = s -> samplerate_index >= 8 ? 1 : 3	113:16:2101:2148	333811	4	True				
ANR	334183	AssignmentExpression	ics -> num_swb = s -> samplerate_index >= 8 ? 1 : 3		333811	0		=			
ANR	334184	PtrMemberAccess	ics -> num_swb		333811	0					
ANR	334185	Identifier	ics		333811	0					
ANR	334186	Identifier	num_swb		333811	1					
ANR	334187	ConditionalExpression	s -> samplerate_index >= 8 ? 1 : 3		333811	1					
ANR	334188	Condition	s -> samplerate_index >= 8		333811	0					
ANR	334189	RelationalExpression	s -> samplerate_index >= 8		333811	0		>=			
ANR	334190	PtrMemberAccess	s -> samplerate_index		333811	0					
ANR	334191	Identifier	s		333811	0					
ANR	334192	Identifier	samplerate_index		333811	1					
ANR	334193	PrimaryExpression	8		333811	1					
ANR	334194	PrimaryExpression	1		333811	1					
ANR	334195	PrimaryExpression	3		333811	2					
ANR	334196	ElseStatement	else		333811	0					
ANR	334197	CompoundStatement		111:19:2028:2028	333811	0					
ANR	334198	ExpressionStatement	"wi [ ch ] = s -> psy . model -> window ( & s -> psy , samples2 , la , s -> cur_channel , ics -> window_sequence [ 0 ] )"	117:16:2189:2329	333811	0	True				
ANR	334199	AssignmentExpression	"wi [ ch ] = s -> psy . model -> window ( & s -> psy , samples2 , la , s -> cur_channel , ics -> window_sequence [ 0 ] )"		333811	0		=			
ANR	334200	ArrayIndexing	wi [ ch ]		333811	0					
ANR	334201	Identifier	wi		333811	0					
ANR	334202	Identifier	ch		333811	1					
ANR	334203	CallExpression	"s -> psy . model -> window ( & s -> psy , samples2 , la , s -> cur_channel , ics -> window_sequence [ 0 ] )"		333811	1					
ANR	334204	Callee	s -> psy . model -> window		333811	0					
ANR	334205	PtrMemberAccess	s -> psy . model -> window		333811	0					
ANR	334206	MemberAccess	s -> psy . model		333811	0					
ANR	334207	PtrMemberAccess	s -> psy		333811	0					
ANR	334208	Identifier	s		333811	0					
ANR	334209	Identifier	psy		333811	1					
ANR	334210	Identifier	model		333811	1					
ANR	334211	Identifier	window		333811	1					
ANR	334212	ArgumentList	& s -> psy		333811	1					
ANR	334213	Argument	& s -> psy		333811	0					
ANR	334214	UnaryOperationExpression	& s -> psy		333811	0					
ANR	334215	UnaryOperator	&		333811	0					
ANR	334216	PtrMemberAccess	s -> psy		333811	1					
ANR	334217	Identifier	s		333811	0					
ANR	334218	Identifier	psy		333811	1					
ANR	334219	Argument	samples2		333811	1					
ANR	334220	Identifier	samples2		333811	0					
ANR	334221	Argument	la		333811	2					
ANR	334222	Identifier	la		333811	0					
ANR	334223	Argument	s -> cur_channel		333811	3					
ANR	334224	PtrMemberAccess	s -> cur_channel		333811	0					
ANR	334225	Identifier	s		333811	0					
ANR	334226	Identifier	cur_channel		333811	1					
ANR	334227	Argument	ics -> window_sequence [ 0 ]		333811	4					
ANR	334228	ArrayIndexing	ics -> window_sequence [ 0 ]		333811	0					
ANR	334229	PtrMemberAccess	ics -> window_sequence		333811	0					
ANR	334230	Identifier	ics		333811	0					
ANR	334231	Identifier	window_sequence		333811	1					
ANR	334232	PrimaryExpression	0		333811	1					
ANR	334233	ExpressionStatement	ics -> window_sequence [ 1 ] = ics -> window_sequence [ 0 ]	123:12:2359:2408	333811	9	True				
ANR	334234	AssignmentExpression	ics -> window_sequence [ 1 ] = ics -> window_sequence [ 0 ]		333811	0		=			
ANR	334235	ArrayIndexing	ics -> window_sequence [ 1 ]		333811	0					
ANR	334236	PtrMemberAccess	ics -> window_sequence		333811	0					
ANR	334237	Identifier	ics		333811	0					
ANR	334238	Identifier	window_sequence		333811	1					
ANR	334239	PrimaryExpression	1		333811	1					
ANR	334240	ArrayIndexing	ics -> window_sequence [ 0 ]		333811	1					
ANR	334241	PtrMemberAccess	ics -> window_sequence		333811	0					
ANR	334242	Identifier	ics		333811	0					
ANR	334243	Identifier	window_sequence		333811	1					
ANR	334244	PrimaryExpression	0		333811	1					
ANR	334245	ExpressionStatement	ics -> window_sequence [ 0 ] = wi [ ch ] . window_type [ 0 ]	125:12:2423:2470	333811	10	True				
ANR	334246	AssignmentExpression	ics -> window_sequence [ 0 ] = wi [ ch ] . window_type [ 0 ]		333811	0		=			
ANR	334247	ArrayIndexing	ics -> window_sequence [ 0 ]		333811	0					
ANR	334248	PtrMemberAccess	ics -> window_sequence		333811	0					
ANR	334249	Identifier	ics		333811	0					
ANR	334250	Identifier	window_sequence		333811	1					
ANR	334251	PrimaryExpression	0		333811	1					
ANR	334252	ArrayIndexing	wi [ ch ] . window_type [ 0 ]		333811	1					
ANR	334253	MemberAccess	wi [ ch ] . window_type		333811	0					
ANR	334254	ArrayIndexing	wi [ ch ]		333811	0					
ANR	334255	Identifier	wi		333811	0					
ANR	334256	Identifier	ch		333811	1					
ANR	334257	Identifier	window_type		333811	1					
ANR	334258	PrimaryExpression	0		333811	1					
ANR	334259	ExpressionStatement	ics -> use_kb_window [ 1 ] = ics -> use_kb_window [ 0 ]	127:12:2485:2532	333811	11	True				
ANR	334260	AssignmentExpression	ics -> use_kb_window [ 1 ] = ics -> use_kb_window [ 0 ]		333811	0		=			
ANR	334261	ArrayIndexing	ics -> use_kb_window [ 1 ]		333811	0					
ANR	334262	PtrMemberAccess	ics -> use_kb_window		333811	0					
ANR	334263	Identifier	ics		333811	0					
ANR	334264	Identifier	use_kb_window		333811	1					
ANR	334265	PrimaryExpression	1		333811	1					
ANR	334266	ArrayIndexing	ics -> use_kb_window [ 0 ]		333811	1					
ANR	334267	PtrMemberAccess	ics -> use_kb_window		333811	0					
ANR	334268	Identifier	ics		333811	0					
ANR	334269	Identifier	use_kb_window		333811	1					
ANR	334270	PrimaryExpression	0		333811	1					
ANR	334271	ExpressionStatement	ics -> use_kb_window [ 0 ] = wi [ ch ] . window_shape	129:12:2547:2592	333811	12	True				
ANR	334272	AssignmentExpression	ics -> use_kb_window [ 0 ] = wi [ ch ] . window_shape		333811	0		=			
ANR	334273	ArrayIndexing	ics -> use_kb_window [ 0 ]		333811	0					
ANR	334274	PtrMemberAccess	ics -> use_kb_window		333811	0					
ANR	334275	Identifier	ics		333811	0					
ANR	334276	Identifier	use_kb_window		333811	1					
ANR	334277	PrimaryExpression	0		333811	1					
ANR	334278	MemberAccess	wi [ ch ] . window_shape		333811	1					
ANR	334279	ArrayIndexing	wi [ ch ]		333811	0					
ANR	334280	Identifier	wi		333811	0					
ANR	334281	Identifier	ch		333811	1					
ANR	334282	Identifier	window_shape		333811	1					
ANR	334283	ExpressionStatement	ics -> num_windows = wi [ ch ] . num_windows	131:12:2607:2651	333811	13	True				
ANR	334284	AssignmentExpression	ics -> num_windows = wi [ ch ] . num_windows		333811	0		=			
ANR	334285	PtrMemberAccess	ics -> num_windows		333811	0					
ANR	334286	Identifier	ics		333811	0					
ANR	334287	Identifier	num_windows		333811	1					
ANR	334288	MemberAccess	wi [ ch ] . num_windows		333811	1					
ANR	334289	ArrayIndexing	wi [ ch ]		333811	0					
ANR	334290	Identifier	wi		333811	0					
ANR	334291	Identifier	ch		333811	1					
ANR	334292	Identifier	num_windows		333811	1					
ANR	334293	ExpressionStatement	ics -> swb_sizes = s -> psy . bands [ ics -> num_windows == 8 ]	133:12:2666:2731	333811	14	True				
ANR	334294	AssignmentExpression	ics -> swb_sizes = s -> psy . bands [ ics -> num_windows == 8 ]		333811	0		=			
ANR	334295	PtrMemberAccess	ics -> swb_sizes		333811	0					
ANR	334296	Identifier	ics		333811	0					
ANR	334297	Identifier	swb_sizes		333811	1					
ANR	334298	ArrayIndexing	s -> psy . bands [ ics -> num_windows == 8 ]		333811	1					
ANR	334299	MemberAccess	s -> psy . bands		333811	0					
ANR	334300	PtrMemberAccess	s -> psy		333811	0					
ANR	334301	Identifier	s		333811	0					
ANR	334302	Identifier	psy		333811	1					
ANR	334303	Identifier	bands		333811	1					
ANR	334304	EqualityExpression	ics -> num_windows == 8		333811	1		==			
ANR	334305	PtrMemberAccess	ics -> num_windows		333811	0					
ANR	334306	Identifier	ics		333811	0					
ANR	334307	Identifier	num_windows		333811	1					
ANR	334308	PrimaryExpression	8		333811	1					
ANR	334309	ExpressionStatement	ics -> num_swb = tag == TYPE_LFE ? ics -> num_swb : s -> psy . num_bands [ ics -> num_windows == 8 ]	135:12:2746:2844	333811	15	True				
ANR	334310	AssignmentExpression	ics -> num_swb = tag == TYPE_LFE ? ics -> num_swb : s -> psy . num_bands [ ics -> num_windows == 8 ]		333811	0		=			
ANR	334311	PtrMemberAccess	ics -> num_swb		333811	0					
ANR	334312	Identifier	ics		333811	0					
ANR	334313	Identifier	num_swb		333811	1					
ANR	334314	ConditionalExpression	tag == TYPE_LFE ? ics -> num_swb : s -> psy . num_bands [ ics -> num_windows == 8 ]		333811	1					
ANR	334315	Condition	tag == TYPE_LFE		333811	0					
ANR	334316	EqualityExpression	tag == TYPE_LFE		333811	0		==			
ANR	334317	Identifier	tag		333811	0					
ANR	334318	Identifier	TYPE_LFE		333811	1					
ANR	334319	PtrMemberAccess	ics -> num_swb		333811	1					
ANR	334320	Identifier	ics		333811	0					
ANR	334321	Identifier	num_swb		333811	1					
ANR	334322	ArrayIndexing	s -> psy . num_bands [ ics -> num_windows == 8 ]		333811	2					
ANR	334323	MemberAccess	s -> psy . num_bands		333811	0					
ANR	334324	PtrMemberAccess	s -> psy		333811	0					
ANR	334325	Identifier	s		333811	0					
ANR	334326	Identifier	psy		333811	1					
ANR	334327	Identifier	num_bands		333811	1					
ANR	334328	EqualityExpression	ics -> num_windows == 8		333811	1		==			
ANR	334329	PtrMemberAccess	ics -> num_windows		333811	0					
ANR	334330	Identifier	ics		333811	0					
ANR	334331	Identifier	num_windows		333811	1					
ANR	334332	PrimaryExpression	8		333811	1					
ANR	334333	ExpressionStatement	"ics -> max_sfb = FFMIN ( ics -> max_sfb , ics -> num_swb )"	137:12:2859:2918	333811	16	True				
ANR	334334	AssignmentExpression	"ics -> max_sfb = FFMIN ( ics -> max_sfb , ics -> num_swb )"		333811	0		=			
ANR	334335	PtrMemberAccess	ics -> max_sfb		333811	0					
ANR	334336	Identifier	ics		333811	0					
ANR	334337	Identifier	max_sfb		333811	1					
ANR	334338	CallExpression	"FFMIN ( ics -> max_sfb , ics -> num_swb )"		333811	1					
ANR	334339	Callee	FFMIN		333811	0					
ANR	334340	Identifier	FFMIN		333811	0					
ANR	334341	ArgumentList	ics -> max_sfb		333811	1					
ANR	334342	Argument	ics -> max_sfb		333811	0					
ANR	334343	PtrMemberAccess	ics -> max_sfb		333811	0					
ANR	334344	Identifier	ics		333811	0					
ANR	334345	Identifier	max_sfb		333811	1					
ANR	334346	Argument	ics -> num_swb		333811	1					
ANR	334347	PtrMemberAccess	ics -> num_swb		333811	0					
ANR	334348	Identifier	ics		333811	0					
ANR	334349	Identifier	num_swb		333811	1					
ANR	334350	ExpressionStatement	ics -> swb_offset = wi [ ch ] . window_type [ 0 ] == EIGHT_SHORT_SEQUENCE ? ff_swb_offset_128 [ s -> samplerate_index ] : ff_swb_offset_1024 [ s -> samplerate_index ]	139:12:2933:3169	333811	17	True				
ANR	334351	AssignmentExpression	ics -> swb_offset = wi [ ch ] . window_type [ 0 ] == EIGHT_SHORT_SEQUENCE ? ff_swb_offset_128 [ s -> samplerate_index ] : ff_swb_offset_1024 [ s -> samplerate_index ]		333811	0		=			
ANR	334352	PtrMemberAccess	ics -> swb_offset		333811	0					
ANR	334353	Identifier	ics		333811	0					
ANR	334354	Identifier	swb_offset		333811	1					
ANR	334355	ConditionalExpression	wi [ ch ] . window_type [ 0 ] == EIGHT_SHORT_SEQUENCE ? ff_swb_offset_128 [ s -> samplerate_index ] : ff_swb_offset_1024 [ s -> samplerate_index ]		333811	1					
ANR	334356	Condition	wi [ ch ] . window_type [ 0 ] == EIGHT_SHORT_SEQUENCE		333811	0					
ANR	334357	EqualityExpression	wi [ ch ] . window_type [ 0 ] == EIGHT_SHORT_SEQUENCE		333811	0		==			
ANR	334358	ArrayIndexing	wi [ ch ] . window_type [ 0 ]		333811	0					
ANR	334359	MemberAccess	wi [ ch ] . window_type		333811	0					
ANR	334360	ArrayIndexing	wi [ ch ]		333811	0					
ANR	334361	Identifier	wi		333811	0					
ANR	334362	Identifier	ch		333811	1					
ANR	334363	Identifier	window_type		333811	1					
ANR	334364	PrimaryExpression	0		333811	1					
ANR	334365	Identifier	EIGHT_SHORT_SEQUENCE		333811	1					
ANR	334366	ArrayIndexing	ff_swb_offset_128 [ s -> samplerate_index ]		333811	1					
ANR	334367	Identifier	ff_swb_offset_128		333811	0					
ANR	334368	PtrMemberAccess	s -> samplerate_index		333811	1					
ANR	334369	Identifier	s		333811	0					
ANR	334370	Identifier	samplerate_index		333811	1					
ANR	334371	ArrayIndexing	ff_swb_offset_1024 [ s -> samplerate_index ]		333811	2					
ANR	334372	Identifier	ff_swb_offset_1024		333811	0					
ANR	334373	PtrMemberAccess	s -> samplerate_index		333811	1					
ANR	334374	Identifier	s		333811	0					
ANR	334375	Identifier	samplerate_index		333811	1					
ANR	334376	ExpressionStatement	ics -> tns_max_bands = wi [ ch ] . window_type [ 0 ] == EIGHT_SHORT_SEQUENCE ? ff_tns_max_bands_128 [ s -> samplerate_index ] : ff_tns_max_bands_1024 [ s -> samplerate_index ]	145:12:3184:3426	333811	18	True				
ANR	334377	AssignmentExpression	ics -> tns_max_bands = wi [ ch ] . window_type [ 0 ] == EIGHT_SHORT_SEQUENCE ? ff_tns_max_bands_128 [ s -> samplerate_index ] : ff_tns_max_bands_1024 [ s -> samplerate_index ]		333811	0		=			
ANR	334378	PtrMemberAccess	ics -> tns_max_bands		333811	0					
ANR	334379	Identifier	ics		333811	0					
ANR	334380	Identifier	tns_max_bands		333811	1					
ANR	334381	ConditionalExpression	wi [ ch ] . window_type [ 0 ] == EIGHT_SHORT_SEQUENCE ? ff_tns_max_bands_128 [ s -> samplerate_index ] : ff_tns_max_bands_1024 [ s -> samplerate_index ]		333811	1					
ANR	334382	Condition	wi [ ch ] . window_type [ 0 ] == EIGHT_SHORT_SEQUENCE		333811	0					
ANR	334383	EqualityExpression	wi [ ch ] . window_type [ 0 ] == EIGHT_SHORT_SEQUENCE		333811	0		==			
ANR	334384	ArrayIndexing	wi [ ch ] . window_type [ 0 ]		333811	0					
ANR	334385	MemberAccess	wi [ ch ] . window_type		333811	0					
ANR	334386	ArrayIndexing	wi [ ch ]		333811	0					
ANR	334387	Identifier	wi		333811	0					
ANR	334388	Identifier	ch		333811	1					
ANR	334389	Identifier	window_type		333811	1					
ANR	334390	PrimaryExpression	0		333811	1					
ANR	334391	Identifier	EIGHT_SHORT_SEQUENCE		333811	1					
ANR	334392	ArrayIndexing	ff_tns_max_bands_128 [ s -> samplerate_index ]		333811	1					
ANR	334393	Identifier	ff_tns_max_bands_128		333811	0					
ANR	334394	PtrMemberAccess	s -> samplerate_index		333811	1					
ANR	334395	Identifier	s		333811	0					
ANR	334396	Identifier	samplerate_index		333811	1					
ANR	334397	ArrayIndexing	ff_tns_max_bands_1024 [ s -> samplerate_index ]		333811	2					
ANR	334398	Identifier	ff_tns_max_bands_1024		333811	0					
ANR	334399	PtrMemberAccess	s -> samplerate_index		333811	1					
ANR	334400	Identifier	s		333811	0					
ANR	334401	Identifier	samplerate_index		333811	1					
ANR	334402	ExpressionStatement	clip_avoidance_factor = 0.0f	151:12:3441:3469	333811	19	True				
ANR	334403	AssignmentExpression	clip_avoidance_factor = 0.0f		333811	0		=			
ANR	334404	Identifier	clip_avoidance_factor		333811	0					
ANR	334405	PrimaryExpression	0.0f		333811	1					
ANR	334406	ForStatement	for ( w = 0 ; w < ics -> num_windows ; w ++ )		333811	20					
ANR	334407	ForInit	w = 0 ;	153:17:3489:3494	333811	0	True				
ANR	334408	AssignmentExpression	w = 0		333811	0		=			
ANR	334409	Identifier	w		333811	0					
ANR	334410	PrimaryExpression	0		333811	1					
ANR	334411	Condition	w < ics -> num_windows	153:24:3496:3515	333811	1	True				
ANR	334412	RelationalExpression	w < ics -> num_windows		333811	0		<			
ANR	334413	Identifier	w		333811	0					
ANR	334414	PtrMemberAccess	ics -> num_windows		333811	1					
ANR	334415	Identifier	ics		333811	0					
ANR	334416	Identifier	num_windows		333811	1					
ANR	334417	PostIncDecOperationExpression	w ++	153:46:3518:3520	333811	2	True				
ANR	334418	Identifier	w		333811	0					
ANR	334419	IncDec	++		333811	1					
ANR	334420	ExpressionStatement	ics -> group_len [ w ] = wi [ ch ] . grouping [ w ]	155:16:3540:3578	333811	3	True				
ANR	334421	AssignmentExpression	ics -> group_len [ w ] = wi [ ch ] . grouping [ w ]		333811	0		=			
ANR	334422	ArrayIndexing	ics -> group_len [ w ]		333811	0					
ANR	334423	PtrMemberAccess	ics -> group_len		333811	0					
ANR	334424	Identifier	ics		333811	0					
ANR	334425	Identifier	group_len		333811	1					
ANR	334426	Identifier	w		333811	1					
ANR	334427	ArrayIndexing	wi [ ch ] . grouping [ w ]		333811	1					
ANR	334428	MemberAccess	wi [ ch ] . grouping		333811	0					
ANR	334429	ArrayIndexing	wi [ ch ]		333811	0					
ANR	334430	Identifier	wi		333811	0					
ANR	334431	Identifier	ch		333811	1					
ANR	334432	Identifier	grouping		333811	1					
ANR	334433	Identifier	w		333811	1					
ANR	334434	ForStatement	for ( w = 0 ; w < ics -> num_windows ; w ++ )		333811	21					
ANR	334435	ForInit	w = 0 ;	157:17:3598:3603	333811	0	True				
ANR	334436	AssignmentExpression	w = 0		333811	0		=			
ANR	334437	Identifier	w		333811	0					
ANR	334438	PrimaryExpression	0		333811	1					
ANR	334439	Condition	w < ics -> num_windows	157:24:3605:3624	333811	1	True				
ANR	334440	RelationalExpression	w < ics -> num_windows		333811	0		<			
ANR	334441	Identifier	w		333811	0					
ANR	334442	PtrMemberAccess	ics -> num_windows		333811	1					
ANR	334443	Identifier	ics		333811	0					
ANR	334444	Identifier	num_windows		333811	1					
ANR	334445	PostIncDecOperationExpression	w ++	157:46:3627:3629	333811	2	True				
ANR	334446	Identifier	w		333811	0					
ANR	334447	IncDec	++		333811	1					
ANR	334448	CompoundStatement		153:51:3490:3490	333811	3					
ANR	334449	IfStatement	if ( wi [ ch ] . clipping [ w ] > CLIP_AVOIDANCE_FACTOR )		333811	0					
ANR	334450	Condition	wi [ ch ] . clipping [ w ] > CLIP_AVOIDANCE_FACTOR	159:20:3655:3696	333811	0	True				
ANR	334451	RelationalExpression	wi [ ch ] . clipping [ w ] > CLIP_AVOIDANCE_FACTOR		333811	0		>			
ANR	334452	ArrayIndexing	wi [ ch ] . clipping [ w ]		333811	0					
ANR	334453	MemberAccess	wi [ ch ] . clipping		333811	0					
ANR	334454	ArrayIndexing	wi [ ch ]		333811	0					
ANR	334455	Identifier	wi		333811	0					
ANR	334456	Identifier	ch		333811	1					
ANR	334457	Identifier	clipping		333811	1					
ANR	334458	Identifier	w		333811	1					
ANR	334459	Identifier	CLIP_AVOIDANCE_FACTOR		333811	1					
ANR	334460	CompoundStatement		155:64:3557:3557	333811	1					
ANR	334461	ExpressionStatement	ics -> window_clipping [ w ] = 1	161:20:3722:3749	333811	0	True				
ANR	334462	AssignmentExpression	ics -> window_clipping [ w ] = 1		333811	0		=			
ANR	334463	ArrayIndexing	ics -> window_clipping [ w ]		333811	0					
ANR	334464	PtrMemberAccess	ics -> window_clipping		333811	0					
ANR	334465	Identifier	ics		333811	0					
ANR	334466	Identifier	window_clipping		333811	1					
ANR	334467	Identifier	w		333811	1					
ANR	334468	PrimaryExpression	1		333811	1					
ANR	334469	ExpressionStatement	"clip_avoidance_factor = FFMAX ( clip_avoidance_factor , wi [ ch ] . clipping [ w ] )"	163:20:3772:3844	333811	1	True				
ANR	334470	AssignmentExpression	"clip_avoidance_factor = FFMAX ( clip_avoidance_factor , wi [ ch ] . clipping [ w ] )"		333811	0		=			
ANR	334471	Identifier	clip_avoidance_factor		333811	0					
ANR	334472	CallExpression	"FFMAX ( clip_avoidance_factor , wi [ ch ] . clipping [ w ] )"		333811	1					
ANR	334473	Callee	FFMAX		333811	0					
ANR	334474	Identifier	FFMAX		333811	0					
ANR	334475	ArgumentList	clip_avoidance_factor		333811	1					
ANR	334476	Argument	clip_avoidance_factor		333811	0					
ANR	334477	Identifier	clip_avoidance_factor		333811	0					
ANR	334478	Argument	wi [ ch ] . clipping [ w ]		333811	1					
ANR	334479	ArrayIndexing	wi [ ch ] . clipping [ w ]		333811	0					
ANR	334480	MemberAccess	wi [ ch ] . clipping		333811	0					
ANR	334481	ArrayIndexing	wi [ ch ]		333811	0					
ANR	334482	Identifier	wi		333811	0					
ANR	334483	Identifier	ch		333811	1					
ANR	334484	Identifier	clipping		333811	1					
ANR	334485	Identifier	w		333811	1					
ANR	334486	ElseStatement	else		333811	0					
ANR	334487	CompoundStatement		161:23:3728:3728	333811	0					
ANR	334488	ExpressionStatement	ics -> window_clipping [ w ] = 0	167:20:3893:3920	333811	0	True				
ANR	334489	AssignmentExpression	ics -> window_clipping [ w ] = 0		333811	0		=			
ANR	334490	ArrayIndexing	ics -> window_clipping [ w ]		333811	0					
ANR	334491	PtrMemberAccess	ics -> window_clipping		333811	0					
ANR	334492	Identifier	ics		333811	0					
ANR	334493	Identifier	window_clipping		333811	1					
ANR	334494	Identifier	w		333811	1					
ANR	334495	PrimaryExpression	0		333811	1					
ANR	334496	IfStatement	if ( clip_avoidance_factor > CLIP_AVOIDANCE_FACTOR )		333811	22					
ANR	334497	Condition	clip_avoidance_factor > CLIP_AVOIDANCE_FACTOR	173:16:3973:4017	333811	0	True				
ANR	334498	RelationalExpression	clip_avoidance_factor > CLIP_AVOIDANCE_FACTOR		333811	0		>			
ANR	334499	Identifier	clip_avoidance_factor		333811	0					
ANR	334500	Identifier	CLIP_AVOIDANCE_FACTOR		333811	1					
ANR	334501	CompoundStatement		169:63:3878:3878	333811	1					
ANR	334502	ExpressionStatement	ics -> clip_avoidance_factor = CLIP_AVOIDANCE_FACTOR / clip_avoidance_factor	175:16:4039:4113	333811	0	True				
ANR	334503	AssignmentExpression	ics -> clip_avoidance_factor = CLIP_AVOIDANCE_FACTOR / clip_avoidance_factor		333811	0		=			
ANR	334504	PtrMemberAccess	ics -> clip_avoidance_factor		333811	0					
ANR	334505	Identifier	ics		333811	0					
ANR	334506	Identifier	clip_avoidance_factor		333811	1					
ANR	334507	MultiplicativeExpression	CLIP_AVOIDANCE_FACTOR / clip_avoidance_factor		333811	1		/			
ANR	334508	Identifier	CLIP_AVOIDANCE_FACTOR		333811	0					
ANR	334509	Identifier	clip_avoidance_factor		333811	1					
ANR	334510	ElseStatement	else		333811	0					
ANR	334511	CompoundStatement		173:19:3993:3993	333811	0					
ANR	334512	ExpressionStatement	ics -> clip_avoidance_factor = 1.0f	179:16:4154:4187	333811	0	True				
ANR	334513	AssignmentExpression	ics -> clip_avoidance_factor = 1.0f		333811	0		=			
ANR	334514	PtrMemberAccess	ics -> clip_avoidance_factor		333811	0					
ANR	334515	Identifier	ics		333811	0					
ANR	334516	Identifier	clip_avoidance_factor		333811	1					
ANR	334517	PrimaryExpression	1.0f		333811	1					
ANR	334518	ExpressionStatement	"apply_window_and_mdct ( s , sce , overlap )"	185:12:4219:4257	333811	23	True				
ANR	334519	CallExpression	"apply_window_and_mdct ( s , sce , overlap )"		333811	0					
ANR	334520	Callee	apply_window_and_mdct		333811	0					
ANR	334521	Identifier	apply_window_and_mdct		333811	0					
ANR	334522	ArgumentList	s		333811	1					
ANR	334523	Argument	s		333811	0					
ANR	334524	Identifier	s		333811	0					
ANR	334525	Argument	sce		333811	1					
ANR	334526	Identifier	sce		333811	0					
ANR	334527	Argument	overlap		333811	2					
ANR	334528	Identifier	overlap		333811	0					
ANR	334529	IfStatement	if ( s -> options . ltp && s -> coder -> update_ltp )		333811	24					
ANR	334530	Condition	s -> options . ltp && s -> coder -> update_ltp	189:16:4278:4315	333811	0	True				
ANR	334531	AndExpression	s -> options . ltp && s -> coder -> update_ltp		333811	0		&&			
ANR	334532	MemberAccess	s -> options . ltp		333811	0					
ANR	334533	PtrMemberAccess	s -> options		333811	0					
ANR	334534	Identifier	s		333811	0					
ANR	334535	Identifier	options		333811	1					
ANR	334536	Identifier	ltp		333811	1					
ANR	334537	PtrMemberAccess	s -> coder -> update_ltp		333811	1					
ANR	334538	PtrMemberAccess	s -> coder		333811	0					
ANR	334539	Identifier	s		333811	0					
ANR	334540	Identifier	coder		333811	1					
ANR	334541	Identifier	update_ltp		333811	1					
ANR	334542	CompoundStatement		185:56:4176:4176	333811	1					
ANR	334543	ExpressionStatement	"s -> coder -> update_ltp ( s , sce )"	191:16:4337:4365	333811	0	True				
ANR	334544	CallExpression	"s -> coder -> update_ltp ( s , sce )"		333811	0					
ANR	334545	Callee	s -> coder -> update_ltp		333811	0					
ANR	334546	PtrMemberAccess	s -> coder -> update_ltp		333811	0					
ANR	334547	PtrMemberAccess	s -> coder		333811	0					
ANR	334548	Identifier	s		333811	0					
ANR	334549	Identifier	coder		333811	1					
ANR	334550	Identifier	update_ltp		333811	1					
ANR	334551	ArgumentList	s		333811	1					
ANR	334552	Argument	s		333811	0					
ANR	334553	Identifier	s		333811	0					
ANR	334554	Argument	sce		333811	1					
ANR	334555	Identifier	sce		333811	0					
ANR	334556	ExpressionStatement	"apply_window [ sce -> ics . window_sequence [ 0 ] ] ( s -> fdsp , sce , & sce -> ltp_state [ 0 ] )"	193:16:4384:4459	333811	1	True				
ANR	334557	CallExpression	"apply_window [ sce -> ics . window_sequence [ 0 ] ] ( s -> fdsp , sce , & sce -> ltp_state [ 0 ] )"		333811	0					
ANR	334558	Callee	apply_window [ sce -> ics . window_sequence [ 0 ] ]		333811	0					
ANR	334559	ArrayIndexing	apply_window [ sce -> ics . window_sequence [ 0 ] ]		333811	0					
ANR	334560	Identifier	apply_window		333811	0					
ANR	334561	ArrayIndexing	sce -> ics . window_sequence [ 0 ]		333811	1					
ANR	334562	MemberAccess	sce -> ics . window_sequence		333811	0					
ANR	334563	PtrMemberAccess	sce -> ics		333811	0					
ANR	334564	Identifier	sce		333811	0					
ANR	334565	Identifier	ics		333811	1					
ANR	334566	Identifier	window_sequence		333811	1					
ANR	334567	PrimaryExpression	0		333811	1					
ANR	334568	ArgumentList	s -> fdsp		333811	1					
ANR	334569	Argument	s -> fdsp		333811	0					
ANR	334570	PtrMemberAccess	s -> fdsp		333811	0					
ANR	334571	Identifier	s		333811	0					
ANR	334572	Identifier	fdsp		333811	1					
ANR	334573	Argument	sce		333811	1					
ANR	334574	Identifier	sce		333811	0					
ANR	334575	Argument	& sce -> ltp_state [ 0 ]		333811	2					
ANR	334576	UnaryOperationExpression	& sce -> ltp_state [ 0 ]		333811	0					
ANR	334577	UnaryOperator	&		333811	0					
ANR	334578	ArrayIndexing	sce -> ltp_state [ 0 ]		333811	1					
ANR	334579	PtrMemberAccess	sce -> ltp_state		333811	0					
ANR	334580	Identifier	sce		333811	0					
ANR	334581	Identifier	ltp_state		333811	1					
ANR	334582	PrimaryExpression	0		333811	1					
ANR	334583	ExpressionStatement	"s -> mdct1024 . mdct_calc ( & s -> mdct1024 , sce -> lcoeffs , sce -> ret_buf )"	195:16:4478:4541	333811	2	True				
ANR	334584	CallExpression	"s -> mdct1024 . mdct_calc ( & s -> mdct1024 , sce -> lcoeffs , sce -> ret_buf )"		333811	0					
ANR	334585	Callee	s -> mdct1024 . mdct_calc		333811	0					
ANR	334586	MemberAccess	s -> mdct1024 . mdct_calc		333811	0					
ANR	334587	PtrMemberAccess	s -> mdct1024		333811	0					
ANR	334588	Identifier	s		333811	0					
ANR	334589	Identifier	mdct1024		333811	1					
ANR	334590	Identifier	mdct_calc		333811	1					
ANR	334591	ArgumentList	& s -> mdct1024		333811	1					
ANR	334592	Argument	& s -> mdct1024		333811	0					
ANR	334593	UnaryOperationExpression	& s -> mdct1024		333811	0					
ANR	334594	UnaryOperator	&		333811	0					
ANR	334595	PtrMemberAccess	s -> mdct1024		333811	1					
ANR	334596	Identifier	s		333811	0					
ANR	334597	Identifier	mdct1024		333811	1					
ANR	334598	Argument	sce -> lcoeffs		333811	1					
ANR	334599	PtrMemberAccess	sce -> lcoeffs		333811	0					
ANR	334600	Identifier	sce		333811	0					
ANR	334601	Identifier	lcoeffs		333811	1					
ANR	334602	Argument	sce -> ret_buf		333811	2					
ANR	334603	PtrMemberAccess	sce -> ret_buf		333811	0					
ANR	334604	Identifier	sce		333811	0					
ANR	334605	Identifier	ret_buf		333811	1					
ANR	334606	IfStatement	if ( isnan ( cpe -> ch -> coeffs [ 0 ] ) )		333811	25					
ANR	334607	Condition	isnan ( cpe -> ch -> coeffs [ 0 ] )	201:16:4577:4601	333811	0	True				
ANR	334608	CallExpression	isnan ( cpe -> ch -> coeffs [ 0 ] )		333811	0					
ANR	334609	Callee	isnan		333811	0					
ANR	334610	Identifier	isnan		333811	0					
ANR	334611	ArgumentList	cpe -> ch -> coeffs [ 0 ]		333811	1					
ANR	334612	Argument	cpe -> ch -> coeffs [ 0 ]		333811	0					
ANR	334613	ArrayIndexing	cpe -> ch -> coeffs [ 0 ]		333811	0					
ANR	334614	PtrMemberAccess	cpe -> ch -> coeffs		333811	0					
ANR	334615	PtrMemberAccess	cpe -> ch		333811	0					
ANR	334616	Identifier	cpe		333811	0					
ANR	334617	Identifier	ch		333811	1					
ANR	334618	Identifier	coeffs		333811	1					
ANR	334619	PrimaryExpression	0		333811	1					
ANR	334620	CompoundStatement		197:43:4462:4462	333811	1					
ANR	334621	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Input contains NaN\\n"" )"	203:16:4623:4674	333811	0	True				
ANR	334622	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Input contains NaN\\n"" )"		333811	0					
ANR	334623	Callee	av_log		333811	0					
ANR	334624	Identifier	av_log		333811	0					
ANR	334625	ArgumentList	avctx		333811	1					
ANR	334626	Argument	avctx		333811	0					
ANR	334627	Identifier	avctx		333811	0					
ANR	334628	Argument	AV_LOG_ERROR		333811	1					
ANR	334629	Identifier	AV_LOG_ERROR		333811	0					
ANR	334630	Argument	"""Input contains NaN\\n"""		333811	2					
ANR	334631	PrimaryExpression	"""Input contains NaN\\n"""		333811	0					
ANR	334632	ReturnStatement	return AVERROR ( EINVAL ) ;	205:16:4693:4715	333811	1	True				
ANR	334633	CallExpression	AVERROR ( EINVAL )		333811	0					
ANR	334634	Callee	AVERROR		333811	0					
ANR	334635	Identifier	AVERROR		333811	0					
ANR	334636	ArgumentList	EINVAL		333811	1					
ANR	334637	Argument	EINVAL		333811	0					
ANR	334638	Identifier	EINVAL		333811	0					
ANR	334639	ExpressionStatement	"avoid_clipping ( s , sce )"	209:12:4745:4767	333811	26	True				
ANR	334640	CallExpression	"avoid_clipping ( s , sce )"		333811	0					
ANR	334641	Callee	avoid_clipping		333811	0					
ANR	334642	Identifier	avoid_clipping		333811	0					
ANR	334643	ArgumentList	s		333811	1					
ANR	334644	Argument	s		333811	0					
ANR	334645	Identifier	s		333811	0					
ANR	334646	Argument	sce		333811	1					
ANR	334647	Identifier	sce		333811	0					
ANR	334648	ExpressionStatement	start_ch += chans	213:8:4789:4806	333811	5	True				
ANR	334649	AssignmentExpression	start_ch += chans		333811	0		+=			
ANR	334650	Identifier	start_ch		333811	0					
ANR	334651	Identifier	chans		333811	1					
ANR	334652	IfStatement	"if ( ( ret = ff_alloc_packet2 ( avctx , avpkt , 8192 * s -> channels , 0 ) ) < 0 )"		333811	17					
ANR	334653	Condition	"( ret = ff_alloc_packet2 ( avctx , avpkt , 8192 * s -> channels , 0 ) ) < 0"	217:8:4824:4888	333811	0	True				
ANR	334654	RelationalExpression	"( ret = ff_alloc_packet2 ( avctx , avpkt , 8192 * s -> channels , 0 ) ) < 0"		333811	0		<			
ANR	334655	AssignmentExpression	"ret = ff_alloc_packet2 ( avctx , avpkt , 8192 * s -> channels , 0 )"		333811	0		=			
ANR	334656	Identifier	ret		333811	0					
ANR	334657	CallExpression	"ff_alloc_packet2 ( avctx , avpkt , 8192 * s -> channels , 0 )"		333811	1					
ANR	334658	Callee	ff_alloc_packet2		333811	0					
ANR	334659	Identifier	ff_alloc_packet2		333811	0					
ANR	334660	ArgumentList	avctx		333811	1					
ANR	334661	Argument	avctx		333811	0					
ANR	334662	Identifier	avctx		333811	0					
ANR	334663	Argument	avpkt		333811	1					
ANR	334664	Identifier	avpkt		333811	0					
ANR	334665	Argument	8192 * s -> channels		333811	2					
ANR	334666	MultiplicativeExpression	8192 * s -> channels		333811	0		*			
ANR	334667	PrimaryExpression	8192		333811	0					
ANR	334668	PtrMemberAccess	s -> channels		333811	1					
ANR	334669	Identifier	s		333811	0					
ANR	334670	Identifier	channels		333811	1					
ANR	334671	Argument	0		333811	3					
ANR	334672	PrimaryExpression	0		333811	0					
ANR	334673	PrimaryExpression	0		333811	1					
ANR	334674	ReturnStatement	return ret ;	219:8:4900:4910	333811	1	True				
ANR	334675	Identifier	ret		333811	0					
ANR	334676	ExpressionStatement	frame_bits = its = 0	221:4:4917:4937	333811	18	True				
ANR	334677	AssignmentExpression	frame_bits = its = 0		333811	0		=			
ANR	334678	Identifier	frame_bits		333811	0					
ANR	334679	AssignmentExpression	its = 0		333811	1		=			
ANR	334680	Identifier	its		333811	0					
ANR	334681	PrimaryExpression	0		333811	1					
ANR	334682	DoStatement	do		333811	19					
ANR	334683	CompoundStatement		219:7:4805:4805	333811	0					
ANR	334684	ExpressionStatement	"init_put_bits ( & s -> pb , avpkt -> data , avpkt -> size )"	225:8:4958:5005	333811	0	True				
ANR	334685	CallExpression	"init_put_bits ( & s -> pb , avpkt -> data , avpkt -> size )"		333811	0					
ANR	334686	Callee	init_put_bits		333811	0					
ANR	334687	Identifier	init_put_bits		333811	0					
ANR	334688	ArgumentList	& s -> pb		333811	1					
ANR	334689	Argument	& s -> pb		333811	0					
ANR	334690	UnaryOperationExpression	& s -> pb		333811	0					
ANR	334691	UnaryOperator	&		333811	0					
ANR	334692	PtrMemberAccess	s -> pb		333811	1					
ANR	334693	Identifier	s		333811	0					
ANR	334694	Identifier	pb		333811	1					
ANR	334695	Argument	avpkt -> data		333811	1					
ANR	334696	PtrMemberAccess	avpkt -> data		333811	0					
ANR	334697	Identifier	avpkt		333811	0					
ANR	334698	Identifier	data		333811	1					
ANR	334699	Argument	avpkt -> size		333811	2					
ANR	334700	PtrMemberAccess	avpkt -> size		333811	0					
ANR	334701	Identifier	avpkt		333811	0					
ANR	334702	Identifier	size		333811	1					
ANR	334703	IfStatement	if ( ( avctx -> frame_number & 0xFF ) == 1 && ! ( avctx -> flags & AV_CODEC_FLAG_BITEXACT ) )		333811	1					
ANR	334704	Condition	( avctx -> frame_number & 0xFF ) == 1 && ! ( avctx -> flags & AV_CODEC_FLAG_BITEXACT )	229:12:5022:5096	333811	0	True				
ANR	334705	AndExpression	( avctx -> frame_number & 0xFF ) == 1 && ! ( avctx -> flags & AV_CODEC_FLAG_BITEXACT )		333811	0		&&			
ANR	334706	EqualityExpression	( avctx -> frame_number & 0xFF ) == 1		333811	0		==			
ANR	334707	BitAndExpression	avctx -> frame_number & 0xFF		333811	0		&			
ANR	334708	PtrMemberAccess	avctx -> frame_number		333811	0					
ANR	334709	Identifier	avctx		333811	0					
ANR	334710	Identifier	frame_number		333811	1					
ANR	334711	PrimaryExpression	0xFF		333811	1					
ANR	334712	PrimaryExpression	1		333811	1					
ANR	334713	UnaryOperationExpression	! ( avctx -> flags & AV_CODEC_FLAG_BITEXACT )		333811	1					
ANR	334714	UnaryOperator	!		333811	0					
ANR	334715	BitAndExpression	avctx -> flags & AV_CODEC_FLAG_BITEXACT		333811	1		&			
ANR	334716	PtrMemberAccess	avctx -> flags		333811	0					
ANR	334717	Identifier	avctx		333811	0					
ANR	334718	Identifier	flags		333811	1					
ANR	334719	Identifier	AV_CODEC_FLAG_BITEXACT		333811	1					
ANR	334720	ExpressionStatement	"put_bitstream_info ( s , LIBAVCODEC_IDENT )"	231:12:5112:5151	333811	1	True				
ANR	334721	CallExpression	"put_bitstream_info ( s , LIBAVCODEC_IDENT )"		333811	0					
ANR	334722	Callee	put_bitstream_info		333811	0					
ANR	334723	Identifier	put_bitstream_info		333811	0					
ANR	334724	ArgumentList	s		333811	1					
ANR	334725	Argument	s		333811	0					
ANR	334726	Identifier	s		333811	0					
ANR	334727	Argument	LIBAVCODEC_IDENT		333811	1					
ANR	334728	Identifier	LIBAVCODEC_IDENT		333811	0					
ANR	334729	ExpressionStatement	start_ch = 0	233:8:5162:5174	333811	2	True				
ANR	334730	AssignmentExpression	start_ch = 0		333811	0		=			
ANR	334731	Identifier	start_ch		333811	0					
ANR	334732	PrimaryExpression	0		333811	1					
ANR	334733	ExpressionStatement	target_bits = 0	235:8:5185:5200	333811	3	True				
ANR	334734	AssignmentExpression	target_bits = 0		333811	0		=			
ANR	334735	Identifier	target_bits		333811	0					
ANR	334736	PrimaryExpression	0		333811	1					
ANR	334737	ExpressionStatement	"memset ( chan_el_counter , 0 , sizeof ( chan_el_counter ) )"	237:8:5211:5262	333811	4	True				
ANR	334738	CallExpression	"memset ( chan_el_counter , 0 , sizeof ( chan_el_counter ) )"		333811	0					
ANR	334739	Callee	memset		333811	0					
ANR	334740	Identifier	memset		333811	0					
ANR	334741	ArgumentList	chan_el_counter		333811	1					
ANR	334742	Argument	chan_el_counter		333811	0					
ANR	334743	Identifier	chan_el_counter		333811	0					
ANR	334744	Argument	0		333811	1					
ANR	334745	PrimaryExpression	0		333811	0					
ANR	334746	Argument	sizeof ( chan_el_counter )		333811	2					
ANR	334747	SizeofExpression	sizeof ( chan_el_counter )		333811	0					
ANR	334748	Sizeof	sizeof		333811	0					
ANR	334749	SizeofOperand	chan_el_counter		333811	1					
ANR	334750	ForStatement	for ( i = 0 ; i < s -> chan_map [ 0 ] ; i ++ )		333811	5					
ANR	334751	ForInit	i = 0 ;	239:13:5278:5283	333811	0	True				
ANR	334752	AssignmentExpression	i = 0		333811	0		=			
ANR	334753	Identifier	i		333811	0					
ANR	334754	PrimaryExpression	0		333811	1					
ANR	334755	Condition	i < s -> chan_map [ 0 ]	239:20:5285:5302	333811	1	True				
ANR	334756	RelationalExpression	i < s -> chan_map [ 0 ]		333811	0		<			
ANR	334757	Identifier	i		333811	0					
ANR	334758	ArrayIndexing	s -> chan_map [ 0 ]		333811	1					
ANR	334759	PtrMemberAccess	s -> chan_map		333811	0					
ANR	334760	Identifier	s		333811	0					
ANR	334761	Identifier	chan_map		333811	1					
ANR	334762	PrimaryExpression	0		333811	1					
ANR	334763	PostIncDecOperationExpression	i ++	239:40:5305:5307	333811	2	True				
ANR	334764	Identifier	i		333811	0					
ANR	334765	IncDec	++		333811	1					
ANR	334766	CompoundStatement		239:12:5238:5260	333811	3					
ANR	334767	IdentifierDeclStatement	FFPsyWindowInfo * wi = windows + start_ch ;	241:12:5325:5365	333811	0	True				
ANR	334768	IdentifierDecl	* wi = windows + start_ch		333811	0					
ANR	334769	IdentifierDeclType	FFPsyWindowInfo *		333811	0					
ANR	334770	Identifier	wi		333811	1					
ANR	334771	AssignmentExpression	* wi = windows + start_ch		333811	2		=			
ANR	334772	Identifier	wi		333811	0					
ANR	334773	AdditiveExpression	windows + start_ch		333811	1		+			
ANR	334774	Identifier	windows		333811	0					
ANR	334775	Identifier	start_ch		333811	1					
ANR	334776	IdentifierDeclStatement	const float * coeffs [ 2 ] ;	243:12:5380:5402	333811	1	True				
ANR	334777	IdentifierDecl	* coeffs [ 2 ]		333811	0					
ANR	334778	IdentifierDeclType	const float * [ 2 ]		333811	0					
ANR	334779	Identifier	coeffs		333811	1					
ANR	334780	PrimaryExpression	2		333811	2					
ANR	334781	ExpressionStatement	tag = s -> chan_map [ i + 1 ]	245:12:5417:5444	333811	2	True				
ANR	334782	AssignmentExpression	tag = s -> chan_map [ i + 1 ]		333811	0		=			
ANR	334783	Identifier	tag		333811	0					
ANR	334784	ArrayIndexing	s -> chan_map [ i + 1 ]		333811	1					
ANR	334785	PtrMemberAccess	s -> chan_map		333811	0					
ANR	334786	Identifier	s		333811	0					
ANR	334787	Identifier	chan_map		333811	1					
ANR	334788	AdditiveExpression	i + 1		333811	1		+			
ANR	334789	Identifier	i		333811	0					
ANR	334790	PrimaryExpression	1		333811	1					
ANR	334791	ExpressionStatement	chans = tag == TYPE_CPE ? 2 : 1	247:12:5459:5493	333811	3	True				
ANR	334792	AssignmentExpression	chans = tag == TYPE_CPE ? 2 : 1		333811	0		=			
ANR	334793	Identifier	chans		333811	0					
ANR	334794	ConditionalExpression	tag == TYPE_CPE ? 2 : 1		333811	1					
ANR	334795	Condition	tag == TYPE_CPE		333811	0					
ANR	334796	EqualityExpression	tag == TYPE_CPE		333811	0		==			
ANR	334797	Identifier	tag		333811	0					
ANR	334798	Identifier	TYPE_CPE		333811	1					
ANR	334799	PrimaryExpression	2		333811	1					
ANR	334800	PrimaryExpression	1		333811	2					
ANR	334801	ExpressionStatement	cpe = & s -> cpe [ i ]	249:12:5508:5529	333811	4	True				
ANR	334802	AssignmentExpression	cpe = & s -> cpe [ i ]		333811	0		=			
ANR	334803	Identifier	cpe		333811	0					
ANR	334804	UnaryOperationExpression	& s -> cpe [ i ]		333811	1					
ANR	334805	UnaryOperator	&		333811	0					
ANR	334806	ArrayIndexing	s -> cpe [ i ]		333811	1					
ANR	334807	PtrMemberAccess	s -> cpe		333811	0					
ANR	334808	Identifier	s		333811	0					
ANR	334809	Identifier	cpe		333811	1					
ANR	334810	Identifier	i		333811	1					
ANR	334811	ExpressionStatement	cpe -> common_window = 0	251:12:5544:5566	333811	5	True				
ANR	334812	AssignmentExpression	cpe -> common_window = 0		333811	0		=			
ANR	334813	PtrMemberAccess	cpe -> common_window		333811	0					
ANR	334814	Identifier	cpe		333811	0					
ANR	334815	Identifier	common_window		333811	1					
ANR	334816	PrimaryExpression	0		333811	1					
ANR	334817	ExpressionStatement	"memset ( cpe -> is_mask , 0 , sizeof ( cpe -> is_mask ) )"	253:12:5581:5626	333811	6	True				
ANR	334818	CallExpression	"memset ( cpe -> is_mask , 0 , sizeof ( cpe -> is_mask ) )"		333811	0					
ANR	334819	Callee	memset		333811	0					
ANR	334820	Identifier	memset		333811	0					
ANR	334821	ArgumentList	cpe -> is_mask		333811	1					
ANR	334822	Argument	cpe -> is_mask		333811	0					
ANR	334823	PtrMemberAccess	cpe -> is_mask		333811	0					
ANR	334824	Identifier	cpe		333811	0					
ANR	334825	Identifier	is_mask		333811	1					
ANR	334826	Argument	0		333811	1					
ANR	334827	PrimaryExpression	0		333811	0					
ANR	334828	Argument	sizeof ( cpe -> is_mask )		333811	2					
ANR	334829	SizeofExpression	sizeof ( cpe -> is_mask )		333811	0					
ANR	334830	Sizeof	sizeof		333811	0					
ANR	334831	PtrMemberAccess	cpe -> is_mask		333811	1					
ANR	334832	Identifier	cpe		333811	0					
ANR	334833	Identifier	is_mask		333811	1					
ANR	334834	ExpressionStatement	"memset ( cpe -> ms_mask , 0 , sizeof ( cpe -> ms_mask ) )"	255:12:5641:5686	333811	7	True				
ANR	334835	CallExpression	"memset ( cpe -> ms_mask , 0 , sizeof ( cpe -> ms_mask ) )"		333811	0					
ANR	334836	Callee	memset		333811	0					
ANR	334837	Identifier	memset		333811	0					
ANR	334838	ArgumentList	cpe -> ms_mask		333811	1					
ANR	334839	Argument	cpe -> ms_mask		333811	0					
ANR	334840	PtrMemberAccess	cpe -> ms_mask		333811	0					
ANR	334841	Identifier	cpe		333811	0					
ANR	334842	Identifier	ms_mask		333811	1					
ANR	334843	Argument	0		333811	1					
ANR	334844	PrimaryExpression	0		333811	0					
ANR	334845	Argument	sizeof ( cpe -> ms_mask )		333811	2					
ANR	334846	SizeofExpression	sizeof ( cpe -> ms_mask )		333811	0					
ANR	334847	Sizeof	sizeof		333811	0					
ANR	334848	PtrMemberAccess	cpe -> ms_mask		333811	1					
ANR	334849	Identifier	cpe		333811	0					
ANR	334850	Identifier	ms_mask		333811	1					
ANR	334851	ExpressionStatement	"put_bits ( & s -> pb , 3 , tag )"	257:12:5701:5725	333811	8	True				
ANR	334852	CallExpression	"put_bits ( & s -> pb , 3 , tag )"		333811	0					
ANR	334853	Callee	put_bits		333811	0					
ANR	334854	Identifier	put_bits		333811	0					
ANR	334855	ArgumentList	& s -> pb		333811	1					
ANR	334856	Argument	& s -> pb		333811	0					
ANR	334857	UnaryOperationExpression	& s -> pb		333811	0					
ANR	334858	UnaryOperator	&		333811	0					
ANR	334859	PtrMemberAccess	s -> pb		333811	1					
ANR	334860	Identifier	s		333811	0					
ANR	334861	Identifier	pb		333811	1					
ANR	334862	Argument	3		333811	1					
ANR	334863	PrimaryExpression	3		333811	0					
ANR	334864	Argument	tag		333811	2					
ANR	334865	Identifier	tag		333811	0					
ANR	334866	ExpressionStatement	"put_bits ( & s -> pb , 4 , chan_el_counter [ tag ] ++ )"	259:12:5740:5783	333811	9	True				
ANR	334867	CallExpression	"put_bits ( & s -> pb , 4 , chan_el_counter [ tag ] ++ )"		333811	0					
ANR	334868	Callee	put_bits		333811	0					
ANR	334869	Identifier	put_bits		333811	0					
ANR	334870	ArgumentList	& s -> pb		333811	1					
ANR	334871	Argument	& s -> pb		333811	0					
ANR	334872	UnaryOperationExpression	& s -> pb		333811	0					
ANR	334873	UnaryOperator	&		333811	0					
ANR	334874	PtrMemberAccess	s -> pb		333811	1					
ANR	334875	Identifier	s		333811	0					
ANR	334876	Identifier	pb		333811	1					
ANR	334877	Argument	4		333811	1					
ANR	334878	PrimaryExpression	4		333811	0					
ANR	334879	Argument	chan_el_counter [ tag ] ++		333811	2					
ANR	334880	PostIncDecOperationExpression	chan_el_counter [ tag ] ++		333811	0					
ANR	334881	ArrayIndexing	chan_el_counter [ tag ]		333811	0					
ANR	334882	Identifier	chan_el_counter		333811	0					
ANR	334883	Identifier	tag		333811	1					
ANR	334884	IncDec	++		333811	1					
ANR	334885	ForStatement	for ( ch = 0 ; ch < chans ; ch ++ )		333811	10					
ANR	334886	ForInit	ch = 0 ;	261:17:5803:5809	333811	0	True				
ANR	334887	AssignmentExpression	ch = 0		333811	0		=			
ANR	334888	Identifier	ch		333811	0					
ANR	334889	PrimaryExpression	0		333811	1					
ANR	334890	Condition	ch < chans	261:25:5811:5820	333811	1	True				
ANR	334891	RelationalExpression	ch < chans		333811	0		<			
ANR	334892	Identifier	ch		333811	0					
ANR	334893	Identifier	chans		333811	1					
ANR	334894	PostIncDecOperationExpression	ch ++	261:37:5823:5826	333811	2	True				
ANR	334895	Identifier	ch		333811	0					
ANR	334896	IncDec	++		333811	1					
ANR	334897	CompoundStatement		257:43:5687:5687	333811	3					
ANR	334898	ExpressionStatement	sce = & cpe -> ch [ ch ]	263:16:5848:5866	333811	0	True				
ANR	334899	AssignmentExpression	sce = & cpe -> ch [ ch ]		333811	0		=			
ANR	334900	Identifier	sce		333811	0					
ANR	334901	UnaryOperationExpression	& cpe -> ch [ ch ]		333811	1					
ANR	334902	UnaryOperator	&		333811	0					
ANR	334903	ArrayIndexing	cpe -> ch [ ch ]		333811	1					
ANR	334904	PtrMemberAccess	cpe -> ch		333811	0					
ANR	334905	Identifier	cpe		333811	0					
ANR	334906	Identifier	ch		333811	1					
ANR	334907	Identifier	ch		333811	1					
ANR	334908	ExpressionStatement	coeffs [ ch ] = sce -> coeffs	265:16:5885:5909	333811	1	True				
ANR	334909	AssignmentExpression	coeffs [ ch ] = sce -> coeffs		333811	0		=			
ANR	334910	ArrayIndexing	coeffs [ ch ]		333811	0					
ANR	334911	Identifier	coeffs		333811	0					
ANR	334912	Identifier	ch		333811	1					
ANR	334913	PtrMemberAccess	sce -> coeffs		333811	1					
ANR	334914	Identifier	sce		333811	0					
ANR	334915	Identifier	coeffs		333811	1					
ANR	334916	ExpressionStatement	sce -> ics . predictor_present = 0	267:16:5928:5958	333811	2	True				
ANR	334917	AssignmentExpression	sce -> ics . predictor_present = 0		333811	0		=			
ANR	334918	MemberAccess	sce -> ics . predictor_present		333811	0					
ANR	334919	PtrMemberAccess	sce -> ics		333811	0					
ANR	334920	Identifier	sce		333811	0					
ANR	334921	Identifier	ics		333811	1					
ANR	334922	Identifier	predictor_present		333811	1					
ANR	334923	PrimaryExpression	0		333811	1					
ANR	334924	ExpressionStatement	sce -> ics . ltp . present = 0	269:16:5977:6001	333811	3	True				
ANR	334925	AssignmentExpression	sce -> ics . ltp . present = 0		333811	0		=			
ANR	334926	MemberAccess	sce -> ics . ltp . present		333811	0					
ANR	334927	MemberAccess	sce -> ics . ltp		333811	0					
ANR	334928	PtrMemberAccess	sce -> ics		333811	0					
ANR	334929	Identifier	sce		333811	0					
ANR	334930	Identifier	ics		333811	1					
ANR	334931	Identifier	ltp		333811	1					
ANR	334932	Identifier	present		333811	1					
ANR	334933	PrimaryExpression	0		333811	1					
ANR	334934	ExpressionStatement	"memset ( sce -> ics . ltp . used , 0 , sizeof ( sce -> ics . ltp . used ) )"	271:16:6020:6075	333811	4	True				
ANR	334935	CallExpression	"memset ( sce -> ics . ltp . used , 0 , sizeof ( sce -> ics . ltp . used ) )"		333811	0					
ANR	334936	Callee	memset		333811	0					
ANR	334937	Identifier	memset		333811	0					
ANR	334938	ArgumentList	sce -> ics . ltp . used		333811	1					
ANR	334939	Argument	sce -> ics . ltp . used		333811	0					
ANR	334940	MemberAccess	sce -> ics . ltp . used		333811	0					
ANR	334941	MemberAccess	sce -> ics . ltp		333811	0					
ANR	334942	PtrMemberAccess	sce -> ics		333811	0					
ANR	334943	Identifier	sce		333811	0					
ANR	334944	Identifier	ics		333811	1					
ANR	334945	Identifier	ltp		333811	1					
ANR	334946	Identifier	used		333811	1					
ANR	334947	Argument	0		333811	1					
ANR	334948	PrimaryExpression	0		333811	0					
ANR	334949	Argument	sizeof ( sce -> ics . ltp . used )		333811	2					
ANR	334950	SizeofExpression	sizeof ( sce -> ics . ltp . used )		333811	0					
ANR	334951	Sizeof	sizeof		333811	0					
ANR	334952	MemberAccess	sce -> ics . ltp . used		333811	1					
ANR	334953	MemberAccess	sce -> ics . ltp		333811	0					
ANR	334954	PtrMemberAccess	sce -> ics		333811	0					
ANR	334955	Identifier	sce		333811	0					
ANR	334956	Identifier	ics		333811	1					
ANR	334957	Identifier	ltp		333811	1					
ANR	334958	Identifier	used		333811	1					
ANR	334959	ExpressionStatement	"memset ( sce -> ics . prediction_used , 0 , sizeof ( sce -> ics . prediction_used ) )"	273:16:6094:6163	333811	5	True				
ANR	334960	CallExpression	"memset ( sce -> ics . prediction_used , 0 , sizeof ( sce -> ics . prediction_used ) )"		333811	0					
ANR	334961	Callee	memset		333811	0					
ANR	334962	Identifier	memset		333811	0					
ANR	334963	ArgumentList	sce -> ics . prediction_used		333811	1					
ANR	334964	Argument	sce -> ics . prediction_used		333811	0					
ANR	334965	MemberAccess	sce -> ics . prediction_used		333811	0					
ANR	334966	PtrMemberAccess	sce -> ics		333811	0					
ANR	334967	Identifier	sce		333811	0					
ANR	334968	Identifier	ics		333811	1					
ANR	334969	Identifier	prediction_used		333811	1					
ANR	334970	Argument	0		333811	1					
ANR	334971	PrimaryExpression	0		333811	0					
ANR	334972	Argument	sizeof ( sce -> ics . prediction_used )		333811	2					
ANR	334973	SizeofExpression	sizeof ( sce -> ics . prediction_used )		333811	0					
ANR	334974	Sizeof	sizeof		333811	0					
ANR	334975	MemberAccess	sce -> ics . prediction_used		333811	1					
ANR	334976	PtrMemberAccess	sce -> ics		333811	0					
ANR	334977	Identifier	sce		333811	0					
ANR	334978	Identifier	ics		333811	1					
ANR	334979	Identifier	prediction_used		333811	1					
ANR	334980	ExpressionStatement	"memset ( & sce -> tns , 0 , sizeof ( TemporalNoiseShaping ) )"	275:16:6182:6232	333811	6	True				
ANR	334981	CallExpression	"memset ( & sce -> tns , 0 , sizeof ( TemporalNoiseShaping ) )"		333811	0					
ANR	334982	Callee	memset		333811	0					
ANR	334983	Identifier	memset		333811	0					
ANR	334984	ArgumentList	& sce -> tns		333811	1					
ANR	334985	Argument	& sce -> tns		333811	0					
ANR	334986	UnaryOperationExpression	& sce -> tns		333811	0					
ANR	334987	UnaryOperator	&		333811	0					
ANR	334988	PtrMemberAccess	sce -> tns		333811	1					
ANR	334989	Identifier	sce		333811	0					
ANR	334990	Identifier	tns		333811	1					
ANR	334991	Argument	0		333811	1					
ANR	334992	PrimaryExpression	0		333811	0					
ANR	334993	Argument	sizeof ( TemporalNoiseShaping )		333811	2					
ANR	334994	SizeofExpression	sizeof ( TemporalNoiseShaping )		333811	0					
ANR	334995	Sizeof	sizeof		333811	0					
ANR	334996	SizeofOperand	TemporalNoiseShaping		333811	1					
ANR	334997	ForStatement	for ( w = 0 ; w < 128 ; w ++ )		333811	7					
ANR	334998	ForInit	w = 0 ;	277:21:6256:6261	333811	0	True				
ANR	334999	AssignmentExpression	w = 0		333811	0		=			
ANR	335000	Identifier	w		333811	0					
ANR	335001	PrimaryExpression	0		333811	1					
ANR	335002	Condition	w < 128	277:28:6263:6269	333811	1	True				
ANR	335003	RelationalExpression	w < 128		333811	0		<			
ANR	335004	Identifier	w		333811	0					
ANR	335005	PrimaryExpression	128		333811	1					
ANR	335006	PostIncDecOperationExpression	w ++	277:37:6272:6274	333811	2	True				
ANR	335007	Identifier	w		333811	0					
ANR	335008	IncDec	++		333811	1					
ANR	335009	IfStatement	if ( sce -> band_type [ w ] > RESERVED_BT )		333811	3					
ANR	335010	Condition	sce -> band_type [ w ] > RESERVED_BT	279:24:6302:6332	333811	0	True				
ANR	335011	RelationalExpression	sce -> band_type [ w ] > RESERVED_BT		333811	0		>			
ANR	335012	ArrayIndexing	sce -> band_type [ w ]		333811	0					
ANR	335013	PtrMemberAccess	sce -> band_type		333811	0					
ANR	335014	Identifier	sce		333811	0					
ANR	335015	Identifier	band_type		333811	1					
ANR	335016	Identifier	w		333811	1					
ANR	335017	Identifier	RESERVED_BT		333811	1					
ANR	335018	ExpressionStatement	sce -> band_type [ w ] = 0	281:24:6360:6381	333811	1	True				
ANR	335019	AssignmentExpression	sce -> band_type [ w ] = 0		333811	0		=			
ANR	335020	ArrayIndexing	sce -> band_type [ w ]		333811	0					
ANR	335021	PtrMemberAccess	sce -> band_type		333811	0					
ANR	335022	Identifier	sce		333811	0					
ANR	335023	Identifier	band_type		333811	1					
ANR	335024	Identifier	w		333811	1					
ANR	335025	PrimaryExpression	0		333811	1					
ANR	335026	ExpressionStatement	s -> psy . bitres . alloc = - 1	285:12:6411:6435	333811	11	True				
ANR	335027	AssignmentExpression	s -> psy . bitres . alloc = - 1		333811	0		=			
ANR	335028	MemberAccess	s -> psy . bitres . alloc		333811	0					
ANR	335029	MemberAccess	s -> psy . bitres		333811	0					
ANR	335030	PtrMemberAccess	s -> psy		333811	0					
ANR	335031	Identifier	s		333811	0					
ANR	335032	Identifier	psy		333811	1					
ANR	335033	Identifier	bitres		333811	1					
ANR	335034	Identifier	alloc		333811	1					
ANR	335035	UnaryOperationExpression	- 1		333811	1					
ANR	335036	UnaryOperator	-		333811	0					
ANR	335037	PrimaryExpression	1		333811	1					
ANR	335038	ExpressionStatement	s -> psy . bitres . bits = s -> last_frame_pb_count / s -> channels	287:12:6450:6507	333811	12	True				
ANR	335039	AssignmentExpression	s -> psy . bitres . bits = s -> last_frame_pb_count / s -> channels		333811	0		=			
ANR	335040	MemberAccess	s -> psy . bitres . bits		333811	0					
ANR	335041	MemberAccess	s -> psy . bitres		333811	0					
ANR	335042	PtrMemberAccess	s -> psy		333811	0					
ANR	335043	Identifier	s		333811	0					
ANR	335044	Identifier	psy		333811	1					
ANR	335045	Identifier	bitres		333811	1					
ANR	335046	Identifier	bits		333811	1					
ANR	335047	MultiplicativeExpression	s -> last_frame_pb_count / s -> channels		333811	1		/			
ANR	335048	PtrMemberAccess	s -> last_frame_pb_count		333811	0					
ANR	335049	Identifier	s		333811	0					
ANR	335050	Identifier	last_frame_pb_count		333811	1					
ANR	335051	PtrMemberAccess	s -> channels		333811	1					
ANR	335052	Identifier	s		333811	0					
ANR	335053	Identifier	channels		333811	1					
ANR	335054	ExpressionStatement	"s -> psy . model -> analyze ( & s -> psy , start_ch , coeffs , wi )"	289:12:6522:6574	333811	13	True				
ANR	335055	CallExpression	"s -> psy . model -> analyze ( & s -> psy , start_ch , coeffs , wi )"		333811	0					
ANR	335056	Callee	s -> psy . model -> analyze		333811	0					
ANR	335057	PtrMemberAccess	s -> psy . model -> analyze		333811	0					
ANR	335058	MemberAccess	s -> psy . model		333811	0					
ANR	335059	PtrMemberAccess	s -> psy		333811	0					
ANR	335060	Identifier	s		333811	0					
ANR	335061	Identifier	psy		333811	1					
ANR	335062	Identifier	model		333811	1					
ANR	335063	Identifier	analyze		333811	1					
ANR	335064	ArgumentList	& s -> psy		333811	1					
ANR	335065	Argument	& s -> psy		333811	0					
ANR	335066	UnaryOperationExpression	& s -> psy		333811	0					
ANR	335067	UnaryOperator	&		333811	0					
ANR	335068	PtrMemberAccess	s -> psy		333811	1					
ANR	335069	Identifier	s		333811	0					
ANR	335070	Identifier	psy		333811	1					
ANR	335071	Argument	start_ch		333811	1					
ANR	335072	Identifier	start_ch		333811	0					
ANR	335073	Argument	coeffs		333811	2					
ANR	335074	Identifier	coeffs		333811	0					
ANR	335075	Argument	wi		333811	3					
ANR	335076	Identifier	wi		333811	0					
ANR	335077	IfStatement	if ( s -> psy . bitres . alloc > 0 )		333811	14					
ANR	335078	Condition	s -> psy . bitres . alloc > 0	291:16:6593:6615	333811	0	True				
ANR	335079	RelationalExpression	s -> psy . bitres . alloc > 0		333811	0		>			
ANR	335080	MemberAccess	s -> psy . bitres . alloc		333811	0					
ANR	335081	MemberAccess	s -> psy . bitres		333811	0					
ANR	335082	PtrMemberAccess	s -> psy		333811	0					
ANR	335083	Identifier	s		333811	0					
ANR	335084	Identifier	psy		333811	1					
ANR	335085	Identifier	bitres		333811	1					
ANR	335086	Identifier	alloc		333811	1					
ANR	335087	PrimaryExpression	0		333811	1					
ANR	335088	CompoundStatement		287:41:6476:6476	333811	1					
ANR	335089	ExpressionStatement	target_bits += s -> psy . bitres . alloc * ( s -> lambda / ( avctx -> global_quality ? avctx -> global_quality : 120 ) )	295:16:6733:6858	333811	0	True				
ANR	335090	AssignmentExpression	target_bits += s -> psy . bitres . alloc * ( s -> lambda / ( avctx -> global_quality ? avctx -> global_quality : 120 ) )		333811	0		+=			
ANR	335091	Identifier	target_bits		333811	0					
ANR	335092	MultiplicativeExpression	s -> psy . bitres . alloc * ( s -> lambda / ( avctx -> global_quality ? avctx -> global_quality : 120 ) )		333811	1		*			
ANR	335093	MemberAccess	s -> psy . bitres . alloc		333811	0					
ANR	335094	MemberAccess	s -> psy . bitres		333811	0					
ANR	335095	PtrMemberAccess	s -> psy		333811	0					
ANR	335096	Identifier	s		333811	0					
ANR	335097	Identifier	psy		333811	1					
ANR	335098	Identifier	bitres		333811	1					
ANR	335099	Identifier	alloc		333811	1					
ANR	335100	MultiplicativeExpression	s -> lambda / ( avctx -> global_quality ? avctx -> global_quality : 120 )		333811	1		/			
ANR	335101	PtrMemberAccess	s -> lambda		333811	0					
ANR	335102	Identifier	s		333811	0					
ANR	335103	Identifier	lambda		333811	1					
ANR	335104	ConditionalExpression	avctx -> global_quality ? avctx -> global_quality : 120		333811	1					
ANR	335105	Condition	avctx -> global_quality		333811	0					
ANR	335106	PtrMemberAccess	avctx -> global_quality		333811	0					
ANR	335107	Identifier	avctx		333811	0					
ANR	335108	Identifier	global_quality		333811	1					
ANR	335109	PtrMemberAccess	avctx -> global_quality		333811	1					
ANR	335110	Identifier	avctx		333811	0					
ANR	335111	Identifier	global_quality		333811	1					
ANR	335112	PrimaryExpression	120		333811	2					
ANR	335113	ExpressionStatement	s -> psy . bitres . alloc /= chans	299:16:6877:6905	333811	1	True				
ANR	335114	AssignmentExpression	s -> psy . bitres . alloc /= chans		333811	0		/=			
ANR	335115	MemberAccess	s -> psy . bitres . alloc		333811	0					
ANR	335116	MemberAccess	s -> psy . bitres		333811	0					
ANR	335117	PtrMemberAccess	s -> psy		333811	0					
ANR	335118	Identifier	s		333811	0					
ANR	335119	Identifier	psy		333811	1					
ANR	335120	Identifier	bitres		333811	1					
ANR	335121	Identifier	alloc		333811	1					
ANR	335122	Identifier	chans		333811	1					
ANR	335123	ExpressionStatement	s -> cur_type = tag	303:12:6935:6952	333811	15	True				
ANR	335124	AssignmentExpression	s -> cur_type = tag		333811	0		=			
ANR	335125	PtrMemberAccess	s -> cur_type		333811	0					
ANR	335126	Identifier	s		333811	0					
ANR	335127	Identifier	cur_type		333811	1					
ANR	335128	Identifier	tag		333811	1					
ANR	335129	ForStatement	for ( ch = 0 ; ch < chans ; ch ++ )		333811	16					
ANR	335130	ForInit	ch = 0 ;	305:17:6972:6978	333811	0	True				
ANR	335131	AssignmentExpression	ch = 0		333811	0		=			
ANR	335132	Identifier	ch		333811	0					
ANR	335133	PrimaryExpression	0		333811	1					
ANR	335134	Condition	ch < chans	305:25:6980:6989	333811	1	True				
ANR	335135	RelationalExpression	ch < chans		333811	0		<			
ANR	335136	Identifier	ch		333811	0					
ANR	335137	Identifier	chans		333811	1					
ANR	335138	PostIncDecOperationExpression	ch ++	305:37:6992:6995	333811	2	True				
ANR	335139	Identifier	ch		333811	0					
ANR	335140	IncDec	++		333811	1					
ANR	335141	CompoundStatement		301:43:6856:6856	333811	3					
ANR	335142	ExpressionStatement	s -> cur_channel = start_ch + ch	307:16:7017:7047	333811	0	True				
ANR	335143	AssignmentExpression	s -> cur_channel = start_ch + ch		333811	0		=			
ANR	335144	PtrMemberAccess	s -> cur_channel		333811	0					
ANR	335145	Identifier	s		333811	0					
ANR	335146	Identifier	cur_channel		333811	1					
ANR	335147	AdditiveExpression	start_ch + ch		333811	1		+			
ANR	335148	Identifier	start_ch		333811	0					
ANR	335149	Identifier	ch		333811	1					
ANR	335150	IfStatement	if ( s -> options . pns && s -> coder -> mark_pns )		333811	1					
ANR	335151	Condition	s -> options . pns && s -> coder -> mark_pns	309:20:7070:7105	333811	0	True				
ANR	335152	AndExpression	s -> options . pns && s -> coder -> mark_pns		333811	0		&&			
ANR	335153	MemberAccess	s -> options . pns		333811	0					
ANR	335154	PtrMemberAccess	s -> options		333811	0					
ANR	335155	Identifier	s		333811	0					
ANR	335156	Identifier	options		333811	1					
ANR	335157	Identifier	pns		333811	1					
ANR	335158	PtrMemberAccess	s -> coder -> mark_pns		333811	1					
ANR	335159	PtrMemberAccess	s -> coder		333811	0					
ANR	335160	Identifier	s		333811	0					
ANR	335161	Identifier	coder		333811	1					
ANR	335162	Identifier	mark_pns		333811	1					
ANR	335163	ExpressionStatement	"s -> coder -> mark_pns ( s , avctx , & cpe -> ch [ ch ] )"	311:20:7129:7171	333811	1	True				
ANR	335164	CallExpression	"s -> coder -> mark_pns ( s , avctx , & cpe -> ch [ ch ] )"		333811	0					
ANR	335165	Callee	s -> coder -> mark_pns		333811	0					
ANR	335166	PtrMemberAccess	s -> coder -> mark_pns		333811	0					
ANR	335167	PtrMemberAccess	s -> coder		333811	0					
ANR	335168	Identifier	s		333811	0					
ANR	335169	Identifier	coder		333811	1					
ANR	335170	Identifier	mark_pns		333811	1					
ANR	335171	ArgumentList	s		333811	1					
ANR	335172	Argument	s		333811	0					
ANR	335173	Identifier	s		333811	0					
ANR	335174	Argument	avctx		333811	1					
ANR	335175	Identifier	avctx		333811	0					
ANR	335176	Argument	& cpe -> ch [ ch ]		333811	2					
ANR	335177	UnaryOperationExpression	& cpe -> ch [ ch ]		333811	0					
ANR	335178	UnaryOperator	&		333811	0					
ANR	335179	ArrayIndexing	cpe -> ch [ ch ]		333811	1					
ANR	335180	PtrMemberAccess	cpe -> ch		333811	0					
ANR	335181	Identifier	cpe		333811	0					
ANR	335182	Identifier	ch		333811	1					
ANR	335183	Identifier	ch		333811	1					
ANR	335184	ExpressionStatement	"s -> coder -> search_for_quantizers ( avctx , s , & cpe -> ch [ ch ] , s -> lambda )"	313:16:7190:7256	333811	2	True				
ANR	335185	CallExpression	"s -> coder -> search_for_quantizers ( avctx , s , & cpe -> ch [ ch ] , s -> lambda )"		333811	0					
ANR	335186	Callee	s -> coder -> search_for_quantizers		333811	0					
ANR	335187	PtrMemberAccess	s -> coder -> search_for_quantizers		333811	0					
ANR	335188	PtrMemberAccess	s -> coder		333811	0					
ANR	335189	Identifier	s		333811	0					
ANR	335190	Identifier	coder		333811	1					
ANR	335191	Identifier	search_for_quantizers		333811	1					
ANR	335192	ArgumentList	avctx		333811	1					
ANR	335193	Argument	avctx		333811	0					
ANR	335194	Identifier	avctx		333811	0					
ANR	335195	Argument	s		333811	1					
ANR	335196	Identifier	s		333811	0					
ANR	335197	Argument	& cpe -> ch [ ch ]		333811	2					
ANR	335198	UnaryOperationExpression	& cpe -> ch [ ch ]		333811	0					
ANR	335199	UnaryOperator	&		333811	0					
ANR	335200	ArrayIndexing	cpe -> ch [ ch ]		333811	1					
ANR	335201	PtrMemberAccess	cpe -> ch		333811	0					
ANR	335202	Identifier	cpe		333811	0					
ANR	335203	Identifier	ch		333811	1					
ANR	335204	Identifier	ch		333811	1					
ANR	335205	Argument	s -> lambda		333811	3					
ANR	335206	PtrMemberAccess	s -> lambda		333811	0					
ANR	335207	Identifier	s		333811	0					
ANR	335208	Identifier	lambda		333811	1					
ANR	335209	IfStatement	if ( chans > 1 && wi [ 0 ] . window_type [ 0 ] == wi [ 1 ] . window_type [ 0 ] && wi [ 0 ] . window_shape == wi [ 1 ] . window_shape )		333811	17					
ANR	335210	Condition	chans > 1 && wi [ 0 ] . window_type [ 0 ] == wi [ 1 ] . window_type [ 0 ] && wi [ 0 ] . window_shape == wi [ 1 ] . window_shape	317:16:7290:7426	333811	0	True				
ANR	335211	AndExpression	chans > 1 && wi [ 0 ] . window_type [ 0 ] == wi [ 1 ] . window_type [ 0 ] && wi [ 0 ] . window_shape == wi [ 1 ] . window_shape		333811	0		&&			
ANR	335212	RelationalExpression	chans > 1		333811	0		>			
ANR	335213	Identifier	chans		333811	0					
ANR	335214	PrimaryExpression	1		333811	1					
ANR	335215	AndExpression	wi [ 0 ] . window_type [ 0 ] == wi [ 1 ] . window_type [ 0 ] && wi [ 0 ] . window_shape == wi [ 1 ] . window_shape		333811	1		&&			
ANR	335216	EqualityExpression	wi [ 0 ] . window_type [ 0 ] == wi [ 1 ] . window_type [ 0 ]		333811	0		==			
ANR	335217	ArrayIndexing	wi [ 0 ] . window_type [ 0 ]		333811	0					
ANR	335218	MemberAccess	wi [ 0 ] . window_type		333811	0					
ANR	335219	ArrayIndexing	wi [ 0 ]		333811	0					
ANR	335220	Identifier	wi		333811	0					
ANR	335221	PrimaryExpression	0		333811	1					
ANR	335222	Identifier	window_type		333811	1					
ANR	335223	PrimaryExpression	0		333811	1					
ANR	335224	ArrayIndexing	wi [ 1 ] . window_type [ 0 ]		333811	1					
ANR	335225	MemberAccess	wi [ 1 ] . window_type		333811	0					
ANR	335226	ArrayIndexing	wi [ 1 ]		333811	0					
ANR	335227	Identifier	wi		333811	0					
ANR	335228	PrimaryExpression	1		333811	1					
ANR	335229	Identifier	window_type		333811	1					
ANR	335230	PrimaryExpression	0		333811	1					
ANR	335231	EqualityExpression	wi [ 0 ] . window_shape == wi [ 1 ] . window_shape		333811	1		==			
ANR	335232	MemberAccess	wi [ 0 ] . window_shape		333811	0					
ANR	335233	ArrayIndexing	wi [ 0 ]		333811	0					
ANR	335234	Identifier	wi		333811	0					
ANR	335235	PrimaryExpression	0		333811	1					
ANR	335236	Identifier	window_shape		333811	1					
ANR	335237	MemberAccess	wi [ 1 ] . window_shape		333811	1					
ANR	335238	ArrayIndexing	wi [ 1 ]		333811	0					
ANR	335239	Identifier	wi		333811	0					
ANR	335240	PrimaryExpression	1		333811	1					
ANR	335241	Identifier	window_shape		333811	1					
ANR	335242	CompoundStatement		317:63:7287:7287	333811	1					
ANR	335243	ExpressionStatement	cpe -> common_window = 1	325:16:7450:7472	333811	0	True				
ANR	335244	AssignmentExpression	cpe -> common_window = 1		333811	0		=			
ANR	335245	PtrMemberAccess	cpe -> common_window		333811	0					
ANR	335246	Identifier	cpe		333811	0					
ANR	335247	Identifier	common_window		333811	1					
ANR	335248	PrimaryExpression	1		333811	1					
ANR	335249	ForStatement	for ( w = 0 ; w < wi [ 0 ] . num_windows ; w ++ )		333811	1					
ANR	335250	ForInit	w = 0 ;	327:21:7496:7501	333811	0	True				
ANR	335251	AssignmentExpression	w = 0		333811	0		=			
ANR	335252	Identifier	w		333811	0					
ANR	335253	PrimaryExpression	0		333811	1					
ANR	335254	Condition	w < wi [ 0 ] . num_windows	327:28:7503:7523	333811	1	True				
ANR	335255	RelationalExpression	w < wi [ 0 ] . num_windows		333811	0		<			
ANR	335256	Identifier	w		333811	0					
ANR	335257	MemberAccess	wi [ 0 ] . num_windows		333811	1					
ANR	335258	ArrayIndexing	wi [ 0 ]		333811	0					
ANR	335259	Identifier	wi		333811	0					
ANR	335260	PrimaryExpression	0		333811	1					
ANR	335261	Identifier	num_windows		333811	1					
ANR	335262	PostIncDecOperationExpression	w ++	327:51:7526:7528	333811	2	True				
ANR	335263	Identifier	w		333811	0					
ANR	335264	IncDec	++		333811	1					
ANR	335265	CompoundStatement		323:56:7389:7389	333811	3					
ANR	335266	IfStatement	if ( wi [ 0 ] . grouping [ w ] != wi [ 1 ] . grouping [ w ] )		333811	0					
ANR	335267	Condition	wi [ 0 ] . grouping [ w ] != wi [ 1 ] . grouping [ w ]	329:24:7558:7595	333811	0	True				
ANR	335268	EqualityExpression	wi [ 0 ] . grouping [ w ] != wi [ 1 ] . grouping [ w ]		333811	0		!=			
ANR	335269	ArrayIndexing	wi [ 0 ] . grouping [ w ]		333811	0					
ANR	335270	MemberAccess	wi [ 0 ] . grouping		333811	0					
ANR	335271	ArrayIndexing	wi [ 0 ]		333811	0					
ANR	335272	Identifier	wi		333811	0					
ANR	335273	PrimaryExpression	0		333811	1					
ANR	335274	Identifier	grouping		333811	1					
ANR	335275	Identifier	w		333811	1					
ANR	335276	ArrayIndexing	wi [ 1 ] . grouping [ w ]		333811	1					
ANR	335277	MemberAccess	wi [ 1 ] . grouping		333811	0					
ANR	335278	ArrayIndexing	wi [ 1 ]		333811	0					
ANR	335279	Identifier	wi		333811	0					
ANR	335280	PrimaryExpression	1		333811	1					
ANR	335281	Identifier	grouping		333811	1					
ANR	335282	Identifier	w		333811	1					
ANR	335283	CompoundStatement		325:64:7456:7456	333811	1					
ANR	335284	ExpressionStatement	cpe -> common_window = 0	331:24:7625:7647	333811	0	True				
ANR	335285	AssignmentExpression	cpe -> common_window = 0		333811	0		=			
ANR	335286	PtrMemberAccess	cpe -> common_window		333811	0					
ANR	335287	Identifier	cpe		333811	0					
ANR	335288	Identifier	common_window		333811	1					
ANR	335289	PrimaryExpression	0		333811	1					
ANR	335290	BreakStatement	break ;	333:24:7674:7679	333811	1	True				
ANR	335291	ForStatement	for ( ch = 0 ; ch < chans ; ch ++ )		333811	18					
ANR	335292	ForInit	ch = 0 ;	341:17:7756:7762	333811	0	True				
ANR	335293	AssignmentExpression	ch = 0		333811	0		=			
ANR	335294	Identifier	ch		333811	0					
ANR	335295	PrimaryExpression	0		333811	1					
ANR	335296	Condition	ch < chans	341:25:7764:7773	333811	1	True				
ANR	335297	RelationalExpression	ch < chans		333811	0		<			
ANR	335298	Identifier	ch		333811	0					
ANR	335299	Identifier	chans		333811	1					
ANR	335300	PostIncDecOperationExpression	ch ++	341:37:7776:7779	333811	2	True				
ANR	335301	Identifier	ch		333811	0					
ANR	335302	IncDec	++		333811	1					
ANR	335303	CompoundStatement		337:43:7640:7640	333811	3					
ANR	335304	ExpressionStatement	sce = & cpe -> ch [ ch ]	343:16:7819:7837	333811	0	True				
ANR	335305	AssignmentExpression	sce = & cpe -> ch [ ch ]		333811	0		=			
ANR	335306	Identifier	sce		333811	0					
ANR	335307	UnaryOperationExpression	& cpe -> ch [ ch ]		333811	1					
ANR	335308	UnaryOperator	&		333811	0					
ANR	335309	ArrayIndexing	cpe -> ch [ ch ]		333811	1					
ANR	335310	PtrMemberAccess	cpe -> ch		333811	0					
ANR	335311	Identifier	cpe		333811	0					
ANR	335312	Identifier	ch		333811	1					
ANR	335313	Identifier	ch		333811	1					
ANR	335314	ExpressionStatement	s -> cur_channel = start_ch + ch	345:16:7856:7886	333811	1	True				
ANR	335315	AssignmentExpression	s -> cur_channel = start_ch + ch		333811	0		=			
ANR	335316	PtrMemberAccess	s -> cur_channel		333811	0					
ANR	335317	Identifier	s		333811	0					
ANR	335318	Identifier	cur_channel		333811	1					
ANR	335319	AdditiveExpression	start_ch + ch		333811	1		+			
ANR	335320	Identifier	start_ch		333811	0					
ANR	335321	Identifier	ch		333811	1					
ANR	335322	IfStatement	if ( s -> options . tns && s -> coder -> search_for_tns )		333811	2					
ANR	335323	Condition	s -> options . tns && s -> coder -> search_for_tns	347:20:7909:7950	333811	0	True				
ANR	335324	AndExpression	s -> options . tns && s -> coder -> search_for_tns		333811	0		&&			
ANR	335325	MemberAccess	s -> options . tns		333811	0					
ANR	335326	PtrMemberAccess	s -> options		333811	0					
ANR	335327	Identifier	s		333811	0					
ANR	335328	Identifier	options		333811	1					
ANR	335329	Identifier	tns		333811	1					
ANR	335330	PtrMemberAccess	s -> coder -> search_for_tns		333811	1					
ANR	335331	PtrMemberAccess	s -> coder		333811	0					
ANR	335332	Identifier	s		333811	0					
ANR	335333	Identifier	coder		333811	1					
ANR	335334	Identifier	search_for_tns		333811	1					
ANR	335335	ExpressionStatement	"s -> coder -> search_for_tns ( s , sce )"	349:20:7974:8006	333811	1	True				
ANR	335336	CallExpression	"s -> coder -> search_for_tns ( s , sce )"		333811	0					
ANR	335337	Callee	s -> coder -> search_for_tns		333811	0					
ANR	335338	PtrMemberAccess	s -> coder -> search_for_tns		333811	0					
ANR	335339	PtrMemberAccess	s -> coder		333811	0					
ANR	335340	Identifier	s		333811	0					
ANR	335341	Identifier	coder		333811	1					
ANR	335342	Identifier	search_for_tns		333811	1					
ANR	335343	ArgumentList	s		333811	1					
ANR	335344	Argument	s		333811	0					
ANR	335345	Identifier	s		333811	0					
ANR	335346	Argument	sce		333811	1					
ANR	335347	Identifier	sce		333811	0					
ANR	335348	IfStatement	if ( s -> options . tns && s -> coder -> apply_tns_filt )		333811	3					
ANR	335349	Condition	s -> options . tns && s -> coder -> apply_tns_filt	351:20:8029:8070	333811	0	True				
ANR	335350	AndExpression	s -> options . tns && s -> coder -> apply_tns_filt		333811	0		&&			
ANR	335351	MemberAccess	s -> options . tns		333811	0					
ANR	335352	PtrMemberAccess	s -> options		333811	0					
ANR	335353	Identifier	s		333811	0					
ANR	335354	Identifier	options		333811	1					
ANR	335355	Identifier	tns		333811	1					
ANR	335356	PtrMemberAccess	s -> coder -> apply_tns_filt		333811	1					
ANR	335357	PtrMemberAccess	s -> coder		333811	0					
ANR	335358	Identifier	s		333811	0					
ANR	335359	Identifier	coder		333811	1					
ANR	335360	Identifier	apply_tns_filt		333811	1					
ANR	335361	ExpressionStatement	"s -> coder -> apply_tns_filt ( s , sce )"	353:20:8094:8126	333811	1	True				
ANR	335362	CallExpression	"s -> coder -> apply_tns_filt ( s , sce )"		333811	0					
ANR	335363	Callee	s -> coder -> apply_tns_filt		333811	0					
ANR	335364	PtrMemberAccess	s -> coder -> apply_tns_filt		333811	0					
ANR	335365	PtrMemberAccess	s -> coder		333811	0					
ANR	335366	Identifier	s		333811	0					
ANR	335367	Identifier	coder		333811	1					
ANR	335368	Identifier	apply_tns_filt		333811	1					
ANR	335369	ArgumentList	s		333811	1					
ANR	335370	Argument	s		333811	0					
ANR	335371	Identifier	s		333811	0					
ANR	335372	Argument	sce		333811	1					
ANR	335373	Identifier	sce		333811	0					
ANR	335374	IfStatement	if ( sce -> tns . present )		333811	4					
ANR	335375	Condition	sce -> tns . present	355:20:8149:8164	333811	0	True				
ANR	335376	MemberAccess	sce -> tns . present		333811	0					
ANR	335377	PtrMemberAccess	sce -> tns		333811	0					
ANR	335378	Identifier	sce		333811	0					
ANR	335379	Identifier	tns		333811	1					
ANR	335380	Identifier	present		333811	1					
ANR	335381	ExpressionStatement	tns_mode = 1	357:20:8188:8200	333811	1	True				
ANR	335382	AssignmentExpression	tns_mode = 1		333811	0		=			
ANR	335383	Identifier	tns_mode		333811	0					
ANR	335384	PrimaryExpression	1		333811	1					
ANR	335385	IfStatement	if ( s -> options . pns && s -> coder -> search_for_pns )		333811	5					
ANR	335386	Condition	s -> options . pns && s -> coder -> search_for_pns	359:20:8223:8264	333811	0	True				
ANR	335387	AndExpression	s -> options . pns && s -> coder -> search_for_pns		333811	0		&&			
ANR	335388	MemberAccess	s -> options . pns		333811	0					
ANR	335389	PtrMemberAccess	s -> options		333811	0					
ANR	335390	Identifier	s		333811	0					
ANR	335391	Identifier	options		333811	1					
ANR	335392	Identifier	pns		333811	1					
ANR	335393	PtrMemberAccess	s -> coder -> search_for_pns		333811	1					
ANR	335394	PtrMemberAccess	s -> coder		333811	0					
ANR	335395	Identifier	s		333811	0					
ANR	335396	Identifier	coder		333811	1					
ANR	335397	Identifier	search_for_pns		333811	1					
ANR	335398	ExpressionStatement	"s -> coder -> search_for_pns ( s , avctx , sce )"	361:20:8288:8327	333811	1	True				
ANR	335399	CallExpression	"s -> coder -> search_for_pns ( s , avctx , sce )"		333811	0					
ANR	335400	Callee	s -> coder -> search_for_pns		333811	0					
ANR	335401	PtrMemberAccess	s -> coder -> search_for_pns		333811	0					
ANR	335402	PtrMemberAccess	s -> coder		333811	0					
ANR	335403	Identifier	s		333811	0					
ANR	335404	Identifier	coder		333811	1					
ANR	335405	Identifier	search_for_pns		333811	1					
ANR	335406	ArgumentList	s		333811	1					
ANR	335407	Argument	s		333811	0					
ANR	335408	Identifier	s		333811	0					
ANR	335409	Argument	avctx		333811	1					
ANR	335410	Identifier	avctx		333811	0					
ANR	335411	Argument	sce		333811	2					
ANR	335412	Identifier	sce		333811	0					
ANR	335413	ExpressionStatement	s -> cur_channel = start_ch	365:12:8357:8382	333811	19	True				
ANR	335414	AssignmentExpression	s -> cur_channel = start_ch		333811	0		=			
ANR	335415	PtrMemberAccess	s -> cur_channel		333811	0					
ANR	335416	Identifier	s		333811	0					
ANR	335417	Identifier	cur_channel		333811	1					
ANR	335418	Identifier	start_ch		333811	1					
ANR	335419	IfStatement	if ( s -> options . intensity_stereo )		333811	20					
ANR	335420	Condition	s -> options . intensity_stereo	367:16:8401:8427	333811	0	True				
ANR	335421	MemberAccess	s -> options . intensity_stereo		333811	0					
ANR	335422	PtrMemberAccess	s -> options		333811	0					
ANR	335423	Identifier	s		333811	0					
ANR	335424	Identifier	options		333811	1					
ANR	335425	Identifier	intensity_stereo		333811	1					
ANR	335426	CompoundStatement		363:45:8288:8288	333811	1					
ANR	335427	IfStatement	if ( s -> coder -> search_for_is )		333811	0					
ANR	335428	Condition	s -> coder -> search_for_is	369:20:8476:8498	333811	0	True				
ANR	335429	PtrMemberAccess	s -> coder -> search_for_is		333811	0					
ANR	335430	PtrMemberAccess	s -> coder		333811	0					
ANR	335431	Identifier	s		333811	0					
ANR	335432	Identifier	coder		333811	1					
ANR	335433	Identifier	search_for_is		333811	1					
ANR	335434	ExpressionStatement	"s -> coder -> search_for_is ( s , avctx , cpe )"	371:20:8522:8560	333811	1	True				
ANR	335435	CallExpression	"s -> coder -> search_for_is ( s , avctx , cpe )"		333811	0					
ANR	335436	Callee	s -> coder -> search_for_is		333811	0					
ANR	335437	PtrMemberAccess	s -> coder -> search_for_is		333811	0					
ANR	335438	PtrMemberAccess	s -> coder		333811	0					
ANR	335439	Identifier	s		333811	0					
ANR	335440	Identifier	coder		333811	1					
ANR	335441	Identifier	search_for_is		333811	1					
ANR	335442	ArgumentList	s		333811	1					
ANR	335443	Argument	s		333811	0					
ANR	335444	Identifier	s		333811	0					
ANR	335445	Argument	avctx		333811	1					
ANR	335446	Identifier	avctx		333811	0					
ANR	335447	Argument	cpe		333811	2					
ANR	335448	Identifier	cpe		333811	0					
ANR	335449	IfStatement	if ( cpe -> is_mode )		333811	1					
ANR	335450	Condition	cpe -> is_mode	373:20:8583:8594	333811	0	True				
ANR	335451	PtrMemberAccess	cpe -> is_mode		333811	0					
ANR	335452	Identifier	cpe		333811	0					
ANR	335453	Identifier	is_mode		333811	1					
ANR	335454	ExpressionStatement	is_mode = 1	373:34:8597:8608	333811	1	True				
ANR	335455	AssignmentExpression	is_mode = 1		333811	0		=			
ANR	335456	Identifier	is_mode		333811	0					
ANR	335457	PrimaryExpression	1		333811	1					
ANR	335458	ExpressionStatement	apply_intensity_stereo ( cpe )	375:16:8627:8654	333811	2	True				
ANR	335459	CallExpression	apply_intensity_stereo ( cpe )		333811	0					
ANR	335460	Callee	apply_intensity_stereo		333811	0					
ANR	335461	Identifier	apply_intensity_stereo		333811	0					
ANR	335462	ArgumentList	cpe		333811	1					
ANR	335463	Argument	cpe		333811	0					
ANR	335464	Identifier	cpe		333811	0					
ANR	335465	IfStatement	if ( s -> options . pred )		333811	21					
ANR	335466	Condition	s -> options . pred	379:16:8688:8702	333811	0	True				
ANR	335467	MemberAccess	s -> options . pred		333811	0					
ANR	335468	PtrMemberAccess	s -> options		333811	0					
ANR	335469	Identifier	s		333811	0					
ANR	335470	Identifier	options		333811	1					
ANR	335471	Identifier	pred		333811	1					
ANR	335472	CompoundStatement		375:33:8563:8563	333811	1					
ANR	335473	ForStatement	for ( ch = 0 ; ch < chans ; ch ++ )		333811	0					
ANR	335474	ForInit	ch = 0 ;	381:21:8746:8752	333811	0	True				
ANR	335475	AssignmentExpression	ch = 0		333811	0		=			
ANR	335476	Identifier	ch		333811	0					
ANR	335477	PrimaryExpression	0		333811	1					
ANR	335478	Condition	ch < chans	381:29:8754:8763	333811	1	True				
ANR	335479	RelationalExpression	ch < chans		333811	0		<			
ANR	335480	Identifier	ch		333811	0					
ANR	335481	Identifier	chans		333811	1					
ANR	335482	PostIncDecOperationExpression	ch ++	381:41:8766:8769	333811	2	True				
ANR	335483	Identifier	ch		333811	0					
ANR	335484	IncDec	++		333811	1					
ANR	335485	CompoundStatement		377:47:8630:8630	333811	3					
ANR	335486	ExpressionStatement	sce = & cpe -> ch [ ch ]	383:20:8795:8813	333811	0	True				
ANR	335487	AssignmentExpression	sce = & cpe -> ch [ ch ]		333811	0		=			
ANR	335488	Identifier	sce		333811	0					
ANR	335489	UnaryOperationExpression	& cpe -> ch [ ch ]		333811	1					
ANR	335490	UnaryOperator	&		333811	0					
ANR	335491	ArrayIndexing	cpe -> ch [ ch ]		333811	1					
ANR	335492	PtrMemberAccess	cpe -> ch		333811	0					
ANR	335493	Identifier	cpe		333811	0					
ANR	335494	Identifier	ch		333811	1					
ANR	335495	Identifier	ch		333811	1					
ANR	335496	ExpressionStatement	s -> cur_channel = start_ch + ch	385:20:8836:8866	333811	1	True				
ANR	335497	AssignmentExpression	s -> cur_channel = start_ch + ch		333811	0		=			
ANR	335498	PtrMemberAccess	s -> cur_channel		333811	0					
ANR	335499	Identifier	s		333811	0					
ANR	335500	Identifier	cur_channel		333811	1					
ANR	335501	AdditiveExpression	start_ch + ch		333811	1		+			
ANR	335502	Identifier	start_ch		333811	0					
ANR	335503	Identifier	ch		333811	1					
ANR	335504	IfStatement	if ( s -> options . pred && s -> coder -> search_for_pred )		333811	2					
ANR	335505	Condition	s -> options . pred && s -> coder -> search_for_pred	387:24:8893:8936	333811	0	True				
ANR	335506	AndExpression	s -> options . pred && s -> coder -> search_for_pred		333811	0		&&			
ANR	335507	MemberAccess	s -> options . pred		333811	0					
ANR	335508	PtrMemberAccess	s -> options		333811	0					
ANR	335509	Identifier	s		333811	0					
ANR	335510	Identifier	options		333811	1					
ANR	335511	Identifier	pred		333811	1					
ANR	335512	PtrMemberAccess	s -> coder -> search_for_pred		333811	1					
ANR	335513	PtrMemberAccess	s -> coder		333811	0					
ANR	335514	Identifier	s		333811	0					
ANR	335515	Identifier	coder		333811	1					
ANR	335516	Identifier	search_for_pred		333811	1					
ANR	335517	ExpressionStatement	"s -> coder -> search_for_pred ( s , sce )"	389:24:8964:8997	333811	1	True				
ANR	335518	CallExpression	"s -> coder -> search_for_pred ( s , sce )"		333811	0					
ANR	335519	Callee	s -> coder -> search_for_pred		333811	0					
ANR	335520	PtrMemberAccess	s -> coder -> search_for_pred		333811	0					
ANR	335521	PtrMemberAccess	s -> coder		333811	0					
ANR	335522	Identifier	s		333811	0					
ANR	335523	Identifier	coder		333811	1					
ANR	335524	Identifier	search_for_pred		333811	1					
ANR	335525	ArgumentList	s		333811	1					
ANR	335526	Argument	s		333811	0					
ANR	335527	Identifier	s		333811	0					
ANR	335528	Argument	sce		333811	1					
ANR	335529	Identifier	sce		333811	0					
ANR	335530	IfStatement	if ( cpe -> ch [ ch ] . ics . predictor_present )		333811	3					
ANR	335531	Condition	cpe -> ch [ ch ] . ics . predictor_present	391:24:9024:9056	333811	0	True				
ANR	335532	MemberAccess	cpe -> ch [ ch ] . ics . predictor_present		333811	0					
ANR	335533	MemberAccess	cpe -> ch [ ch ] . ics		333811	0					
ANR	335534	ArrayIndexing	cpe -> ch [ ch ]		333811	0					
ANR	335535	PtrMemberAccess	cpe -> ch		333811	0					
ANR	335536	Identifier	cpe		333811	0					
ANR	335537	Identifier	ch		333811	1					
ANR	335538	Identifier	ch		333811	1					
ANR	335539	Identifier	ics		333811	1					
ANR	335540	Identifier	predictor_present		333811	1					
ANR	335541	ExpressionStatement	pred_mode = 1	391:59:9059:9072	333811	1	True				
ANR	335542	AssignmentExpression	pred_mode = 1		333811	0		=			
ANR	335543	Identifier	pred_mode		333811	0					
ANR	335544	PrimaryExpression	1		333811	1					
ANR	335545	IfStatement	if ( s -> coder -> adjust_common_pred )		333811	1					
ANR	335546	Condition	s -> coder -> adjust_common_pred	395:20:9114:9141	333811	0	True				
ANR	335547	PtrMemberAccess	s -> coder -> adjust_common_pred		333811	0					
ANR	335548	PtrMemberAccess	s -> coder		333811	0					
ANR	335549	Identifier	s		333811	0					
ANR	335550	Identifier	coder		333811	1					
ANR	335551	Identifier	adjust_common_pred		333811	1					
ANR	335552	ExpressionStatement	"s -> coder -> adjust_common_pred ( s , cpe )"	397:20:9165:9201	333811	1	True				
ANR	335553	CallExpression	"s -> coder -> adjust_common_pred ( s , cpe )"		333811	0					
ANR	335554	Callee	s -> coder -> adjust_common_pred		333811	0					
ANR	335555	PtrMemberAccess	s -> coder -> adjust_common_pred		333811	0					
ANR	335556	PtrMemberAccess	s -> coder		333811	0					
ANR	335557	Identifier	s		333811	0					
ANR	335558	Identifier	coder		333811	1					
ANR	335559	Identifier	adjust_common_pred		333811	1					
ANR	335560	ArgumentList	s		333811	1					
ANR	335561	Argument	s		333811	0					
ANR	335562	Identifier	s		333811	0					
ANR	335563	Argument	cpe		333811	1					
ANR	335564	Identifier	cpe		333811	0					
ANR	335565	ForStatement	for ( ch = 0 ; ch < chans ; ch ++ )		333811	2					
ANR	335566	ForInit	ch = 0 ;	399:21:9225:9231	333811	0	True				
ANR	335567	AssignmentExpression	ch = 0		333811	0		=			
ANR	335568	Identifier	ch		333811	0					
ANR	335569	PrimaryExpression	0		333811	1					
ANR	335570	Condition	ch < chans	399:29:9233:9242	333811	1	True				
ANR	335571	RelationalExpression	ch < chans		333811	0		<			
ANR	335572	Identifier	ch		333811	0					
ANR	335573	Identifier	chans		333811	1					
ANR	335574	PostIncDecOperationExpression	ch ++	399:41:9245:9248	333811	2	True				
ANR	335575	Identifier	ch		333811	0					
ANR	335576	IncDec	++		333811	1					
ANR	335577	CompoundStatement		395:47:9109:9109	333811	3					
ANR	335578	ExpressionStatement	sce = & cpe -> ch [ ch ]	401:20:9274:9292	333811	0	True				
ANR	335579	AssignmentExpression	sce = & cpe -> ch [ ch ]		333811	0		=			
ANR	335580	Identifier	sce		333811	0					
ANR	335581	UnaryOperationExpression	& cpe -> ch [ ch ]		333811	1					
ANR	335582	UnaryOperator	&		333811	0					
ANR	335583	ArrayIndexing	cpe -> ch [ ch ]		333811	1					
ANR	335584	PtrMemberAccess	cpe -> ch		333811	0					
ANR	335585	Identifier	cpe		333811	0					
ANR	335586	Identifier	ch		333811	1					
ANR	335587	Identifier	ch		333811	1					
ANR	335588	ExpressionStatement	s -> cur_channel = start_ch + ch	403:20:9315:9345	333811	1	True				
ANR	335589	AssignmentExpression	s -> cur_channel = start_ch + ch		333811	0		=			
ANR	335590	PtrMemberAccess	s -> cur_channel		333811	0					
ANR	335591	Identifier	s		333811	0					
ANR	335592	Identifier	cur_channel		333811	1					
ANR	335593	AdditiveExpression	start_ch + ch		333811	1		+			
ANR	335594	Identifier	start_ch		333811	0					
ANR	335595	Identifier	ch		333811	1					
ANR	335596	IfStatement	if ( s -> options . pred && s -> coder -> apply_main_pred )		333811	2					
ANR	335597	Condition	s -> options . pred && s -> coder -> apply_main_pred	405:24:9372:9415	333811	0	True				
ANR	335598	AndExpression	s -> options . pred && s -> coder -> apply_main_pred		333811	0		&&			
ANR	335599	MemberAccess	s -> options . pred		333811	0					
ANR	335600	PtrMemberAccess	s -> options		333811	0					
ANR	335601	Identifier	s		333811	0					
ANR	335602	Identifier	options		333811	1					
ANR	335603	Identifier	pred		333811	1					
ANR	335604	PtrMemberAccess	s -> coder -> apply_main_pred		333811	1					
ANR	335605	PtrMemberAccess	s -> coder		333811	0					
ANR	335606	Identifier	s		333811	0					
ANR	335607	Identifier	coder		333811	1					
ANR	335608	Identifier	apply_main_pred		333811	1					
ANR	335609	ExpressionStatement	"s -> coder -> apply_main_pred ( s , sce )"	407:24:9443:9476	333811	1	True				
ANR	335610	CallExpression	"s -> coder -> apply_main_pred ( s , sce )"		333811	0					
ANR	335611	Callee	s -> coder -> apply_main_pred		333811	0					
ANR	335612	PtrMemberAccess	s -> coder -> apply_main_pred		333811	0					
ANR	335613	PtrMemberAccess	s -> coder		333811	0					
ANR	335614	Identifier	s		333811	0					
ANR	335615	Identifier	coder		333811	1					
ANR	335616	Identifier	apply_main_pred		333811	1					
ANR	335617	ArgumentList	s		333811	1					
ANR	335618	Argument	s		333811	0					
ANR	335619	Identifier	s		333811	0					
ANR	335620	Argument	sce		333811	1					
ANR	335621	Identifier	sce		333811	0					
ANR	335622	ExpressionStatement	s -> cur_channel = start_ch	411:16:9514:9539	333811	3	True				
ANR	335623	AssignmentExpression	s -> cur_channel = start_ch		333811	0		=			
ANR	335624	PtrMemberAccess	s -> cur_channel		333811	0					
ANR	335625	Identifier	s		333811	0					
ANR	335626	Identifier	cur_channel		333811	1					
ANR	335627	Identifier	start_ch		333811	1					
ANR	335628	IfStatement	if ( s -> options . mid_side )		333811	22					
ANR	335629	Condition	s -> options . mid_side	415:16:9573:9591	333811	0	True				
ANR	335630	MemberAccess	s -> options . mid_side		333811	0					
ANR	335631	PtrMemberAccess	s -> options		333811	0					
ANR	335632	Identifier	s		333811	0					
ANR	335633	Identifier	options		333811	1					
ANR	335634	Identifier	mid_side		333811	1					
ANR	335635	CompoundStatement		411:37:9452:9452	333811	1					
ANR	335636	IfStatement	if ( s -> options . mid_side == - 1 && s -> coder -> search_for_ms )		333811	0					
ANR	335637	Condition	s -> options . mid_side == - 1 && s -> coder -> search_for_ms	417:20:9639:9690	333811	0	True				
ANR	335638	AndExpression	s -> options . mid_side == - 1 && s -> coder -> search_for_ms		333811	0		&&			
ANR	335639	EqualityExpression	s -> options . mid_side == - 1		333811	0		==			
ANR	335640	MemberAccess	s -> options . mid_side		333811	0					
ANR	335641	PtrMemberAccess	s -> options		333811	0					
ANR	335642	Identifier	s		333811	0					
ANR	335643	Identifier	options		333811	1					
ANR	335644	Identifier	mid_side		333811	1					
ANR	335645	UnaryOperationExpression	- 1		333811	1					
ANR	335646	UnaryOperator	-		333811	0					
ANR	335647	PrimaryExpression	1		333811	1					
ANR	335648	PtrMemberAccess	s -> coder -> search_for_ms		333811	1					
ANR	335649	PtrMemberAccess	s -> coder		333811	0					
ANR	335650	Identifier	s		333811	0					
ANR	335651	Identifier	coder		333811	1					
ANR	335652	Identifier	search_for_ms		333811	1					
ANR	335653	ExpressionStatement	"s -> coder -> search_for_ms ( s , cpe )"	419:20:9714:9745	333811	1	True				
ANR	335654	CallExpression	"s -> coder -> search_for_ms ( s , cpe )"		333811	0					
ANR	335655	Callee	s -> coder -> search_for_ms		333811	0					
ANR	335656	PtrMemberAccess	s -> coder -> search_for_ms		333811	0					
ANR	335657	PtrMemberAccess	s -> coder		333811	0					
ANR	335658	Identifier	s		333811	0					
ANR	335659	Identifier	coder		333811	1					
ANR	335660	Identifier	search_for_ms		333811	1					
ANR	335661	ArgumentList	s		333811	1					
ANR	335662	Argument	s		333811	0					
ANR	335663	Identifier	s		333811	0					
ANR	335664	Argument	cpe		333811	1					
ANR	335665	Identifier	cpe		333811	0					
ANR	335666	ElseStatement	else		333811	0					
ANR	335667	IfStatement	if ( cpe -> common_window )		333811	0					
ANR	335668	Condition	cpe -> common_window	421:25:9773:9790	333811	0	True				
ANR	335669	PtrMemberAccess	cpe -> common_window		333811	0					
ANR	335670	Identifier	cpe		333811	0					
ANR	335671	Identifier	common_window		333811	1					
ANR	335672	ExpressionStatement	"memset ( cpe -> ms_mask , 1 , sizeof ( cpe -> ms_mask ) )"	423:20:9814:9859	333811	1	True				
ANR	335673	CallExpression	"memset ( cpe -> ms_mask , 1 , sizeof ( cpe -> ms_mask ) )"		333811	0					
ANR	335674	Callee	memset		333811	0					
ANR	335675	Identifier	memset		333811	0					
ANR	335676	ArgumentList	cpe -> ms_mask		333811	1					
ANR	335677	Argument	cpe -> ms_mask		333811	0					
ANR	335678	PtrMemberAccess	cpe -> ms_mask		333811	0					
ANR	335679	Identifier	cpe		333811	0					
ANR	335680	Identifier	ms_mask		333811	1					
ANR	335681	Argument	1		333811	1					
ANR	335682	PrimaryExpression	1		333811	0					
ANR	335683	Argument	sizeof ( cpe -> ms_mask )		333811	2					
ANR	335684	SizeofExpression	sizeof ( cpe -> ms_mask )		333811	0					
ANR	335685	Sizeof	sizeof		333811	0					
ANR	335686	PtrMemberAccess	cpe -> ms_mask		333811	1					
ANR	335687	Identifier	cpe		333811	0					
ANR	335688	Identifier	ms_mask		333811	1					
ANR	335689	ExpressionStatement	apply_mid_side_stereo ( cpe )	425:16:9878:9904	333811	1	True				
ANR	335690	CallExpression	apply_mid_side_stereo ( cpe )		333811	0					
ANR	335691	Callee	apply_mid_side_stereo		333811	0					
ANR	335692	Identifier	apply_mid_side_stereo		333811	0					
ANR	335693	ArgumentList	cpe		333811	1					
ANR	335694	Argument	cpe		333811	0					
ANR	335695	Identifier	cpe		333811	0					
ANR	335696	ExpressionStatement	"adjust_frame_information ( cpe , chans )"	429:12:9934:9970	333811	23	True				
ANR	335697	CallExpression	"adjust_frame_information ( cpe , chans )"		333811	0					
ANR	335698	Callee	adjust_frame_information		333811	0					
ANR	335699	Identifier	adjust_frame_information		333811	0					
ANR	335700	ArgumentList	cpe		333811	1					
ANR	335701	Argument	cpe		333811	0					
ANR	335702	Identifier	cpe		333811	0					
ANR	335703	Argument	chans		333811	1					
ANR	335704	Identifier	chans		333811	0					
ANR	335705	IfStatement	if ( s -> options . ltp )		333811	24					
ANR	335706	Condition	s -> options . ltp	431:16:9989:10002	333811	0	True				
ANR	335707	MemberAccess	s -> options . ltp		333811	0					
ANR	335708	PtrMemberAccess	s -> options		333811	0					
ANR	335709	Identifier	s		333811	0					
ANR	335710	Identifier	options		333811	1					
ANR	335711	Identifier	ltp		333811	1					
ANR	335712	CompoundStatement		427:32:9863:9863	333811	1					
ANR	335713	ForStatement	for ( ch = 0 ; ch < chans ; ch ++ )		333811	0					
ANR	335714	ForInit	ch = 0 ;	433:21:10039:10045	333811	0	True				
ANR	335715	AssignmentExpression	ch = 0		333811	0		=			
ANR	335716	Identifier	ch		333811	0					
ANR	335717	PrimaryExpression	0		333811	1					
ANR	335718	Condition	ch < chans	433:29:10047:10056	333811	1	True				
ANR	335719	RelationalExpression	ch < chans		333811	0		<			
ANR	335720	Identifier	ch		333811	0					
ANR	335721	Identifier	chans		333811	1					
ANR	335722	PostIncDecOperationExpression	ch ++	433:41:10059:10062	333811	2	True				
ANR	335723	Identifier	ch		333811	0					
ANR	335724	IncDec	++		333811	1					
ANR	335725	CompoundStatement		429:47:9923:9923	333811	3					
ANR	335726	ExpressionStatement	sce = & cpe -> ch [ ch ]	435:20:10088:10106	333811	0	True				
ANR	335727	AssignmentExpression	sce = & cpe -> ch [ ch ]		333811	0		=			
ANR	335728	Identifier	sce		333811	0					
ANR	335729	UnaryOperationExpression	& cpe -> ch [ ch ]		333811	1					
ANR	335730	UnaryOperator	&		333811	0					
ANR	335731	ArrayIndexing	cpe -> ch [ ch ]		333811	1					
ANR	335732	PtrMemberAccess	cpe -> ch		333811	0					
ANR	335733	Identifier	cpe		333811	0					
ANR	335734	Identifier	ch		333811	1					
ANR	335735	Identifier	ch		333811	1					
ANR	335736	ExpressionStatement	s -> cur_channel = start_ch + ch	437:20:10129:10159	333811	1	True				
ANR	335737	AssignmentExpression	s -> cur_channel = start_ch + ch		333811	0		=			
ANR	335738	PtrMemberAccess	s -> cur_channel		333811	0					
ANR	335739	Identifier	s		333811	0					
ANR	335740	Identifier	cur_channel		333811	1					
ANR	335741	AdditiveExpression	start_ch + ch		333811	1		+			
ANR	335742	Identifier	start_ch		333811	0					
ANR	335743	Identifier	ch		333811	1					
ANR	335744	IfStatement	if ( s -> coder -> search_for_ltp )		333811	2					
ANR	335745	Condition	s -> coder -> search_for_ltp	439:24:10186:10209	333811	0	True				
ANR	335746	PtrMemberAccess	s -> coder -> search_for_ltp		333811	0					
ANR	335747	PtrMemberAccess	s -> coder		333811	0					
ANR	335748	Identifier	s		333811	0					
ANR	335749	Identifier	coder		333811	1					
ANR	335750	Identifier	search_for_ltp		333811	1					
ANR	335751	ExpressionStatement	"s -> coder -> search_for_ltp ( s , sce , cpe -> common_window )"	441:24:10237:10289	333811	1	True				
ANR	335752	CallExpression	"s -> coder -> search_for_ltp ( s , sce , cpe -> common_window )"		333811	0					
ANR	335753	Callee	s -> coder -> search_for_ltp		333811	0					
ANR	335754	PtrMemberAccess	s -> coder -> search_for_ltp		333811	0					
ANR	335755	PtrMemberAccess	s -> coder		333811	0					
ANR	335756	Identifier	s		333811	0					
ANR	335757	Identifier	coder		333811	1					
ANR	335758	Identifier	search_for_ltp		333811	1					
ANR	335759	ArgumentList	s		333811	1					
ANR	335760	Argument	s		333811	0					
ANR	335761	Identifier	s		333811	0					
ANR	335762	Argument	sce		333811	1					
ANR	335763	Identifier	sce		333811	0					
ANR	335764	Argument	cpe -> common_window		333811	2					
ANR	335765	PtrMemberAccess	cpe -> common_window		333811	0					
ANR	335766	Identifier	cpe		333811	0					
ANR	335767	Identifier	common_window		333811	1					
ANR	335768	IfStatement	if ( sce -> ics . ltp . present )		333811	3					
ANR	335769	Condition	sce -> ics . ltp . present	443:24:10316:10335	333811	0	True				
ANR	335770	MemberAccess	sce -> ics . ltp . present		333811	0					
ANR	335771	MemberAccess	sce -> ics . ltp		333811	0					
ANR	335772	PtrMemberAccess	sce -> ics		333811	0					
ANR	335773	Identifier	sce		333811	0					
ANR	335774	Identifier	ics		333811	1					
ANR	335775	Identifier	ltp		333811	1					
ANR	335776	Identifier	present		333811	1					
ANR	335777	ExpressionStatement	pred_mode = 1	443:46:10338:10351	333811	1	True				
ANR	335778	AssignmentExpression	pred_mode = 1		333811	0		=			
ANR	335779	Identifier	pred_mode		333811	0					
ANR	335780	PrimaryExpression	1		333811	1					
ANR	335781	ExpressionStatement	s -> cur_channel = start_ch	447:16:10389:10414	333811	1	True				
ANR	335782	AssignmentExpression	s -> cur_channel = start_ch		333811	0		=			
ANR	335783	PtrMemberAccess	s -> cur_channel		333811	0					
ANR	335784	Identifier	s		333811	0					
ANR	335785	Identifier	cur_channel		333811	1					
ANR	335786	Identifier	start_ch		333811	1					
ANR	335787	IfStatement	if ( s -> coder -> adjust_common_ltp )		333811	2					
ANR	335788	Condition	s -> coder -> adjust_common_ltp	449:20:10437:10463	333811	0	True				
ANR	335789	PtrMemberAccess	s -> coder -> adjust_common_ltp		333811	0					
ANR	335790	PtrMemberAccess	s -> coder		333811	0					
ANR	335791	Identifier	s		333811	0					
ANR	335792	Identifier	coder		333811	1					
ANR	335793	Identifier	adjust_common_ltp		333811	1					
ANR	335794	ExpressionStatement	"s -> coder -> adjust_common_ltp ( s , cpe )"	451:20:10487:10522	333811	1	True				
ANR	335795	CallExpression	"s -> coder -> adjust_common_ltp ( s , cpe )"		333811	0					
ANR	335796	Callee	s -> coder -> adjust_common_ltp		333811	0					
ANR	335797	PtrMemberAccess	s -> coder -> adjust_common_ltp		333811	0					
ANR	335798	PtrMemberAccess	s -> coder		333811	0					
ANR	335799	Identifier	s		333811	0					
ANR	335800	Identifier	coder		333811	1					
ANR	335801	Identifier	adjust_common_ltp		333811	1					
ANR	335802	ArgumentList	s		333811	1					
ANR	335803	Argument	s		333811	0					
ANR	335804	Identifier	s		333811	0					
ANR	335805	Argument	cpe		333811	1					
ANR	335806	Identifier	cpe		333811	0					
ANR	335807	IfStatement	if ( chans == 2 )		333811	25					
ANR	335808	Condition	chans == 2	455:16:10556:10565	333811	0	True				
ANR	335809	EqualityExpression	chans == 2		333811	0		==			
ANR	335810	Identifier	chans		333811	0					
ANR	335811	PrimaryExpression	2		333811	1					
ANR	335812	CompoundStatement		451:28:10426:10426	333811	1					
ANR	335813	ExpressionStatement	"put_bits ( & s -> pb , 1 , cpe -> common_window )"	457:16:10587:10626	333811	0	True				
ANR	335814	CallExpression	"put_bits ( & s -> pb , 1 , cpe -> common_window )"		333811	0					
ANR	335815	Callee	put_bits		333811	0					
ANR	335816	Identifier	put_bits		333811	0					
ANR	335817	ArgumentList	& s -> pb		333811	1					
ANR	335818	Argument	& s -> pb		333811	0					
ANR	335819	UnaryOperationExpression	& s -> pb		333811	0					
ANR	335820	UnaryOperator	&		333811	0					
ANR	335821	PtrMemberAccess	s -> pb		333811	1					
ANR	335822	Identifier	s		333811	0					
ANR	335823	Identifier	pb		333811	1					
ANR	335824	Argument	1		333811	1					
ANR	335825	PrimaryExpression	1		333811	0					
ANR	335826	Argument	cpe -> common_window		333811	2					
ANR	335827	PtrMemberAccess	cpe -> common_window		333811	0					
ANR	335828	Identifier	cpe		333811	0					
ANR	335829	Identifier	common_window		333811	1					
ANR	335830	IfStatement	if ( cpe -> common_window )		333811	1					
ANR	335831	Condition	cpe -> common_window	459:20:10649:10666	333811	0	True				
ANR	335832	PtrMemberAccess	cpe -> common_window		333811	0					
ANR	335833	Identifier	cpe		333811	0					
ANR	335834	Identifier	common_window		333811	1					
ANR	335835	CompoundStatement		455:40:10527:10527	333811	1					
ANR	335836	ExpressionStatement	"put_ics_info ( s , & cpe -> ch [ 0 ] . ics )"	461:20:10692:10724	333811	0	True				
ANR	335837	CallExpression	"put_ics_info ( s , & cpe -> ch [ 0 ] . ics )"		333811	0					
ANR	335838	Callee	put_ics_info		333811	0					
ANR	335839	Identifier	put_ics_info		333811	0					
ANR	335840	ArgumentList	s		333811	1					
ANR	335841	Argument	s		333811	0					
ANR	335842	Identifier	s		333811	0					
ANR	335843	Argument	& cpe -> ch [ 0 ] . ics		333811	1					
ANR	335844	UnaryOperationExpression	& cpe -> ch [ 0 ] . ics		333811	0					
ANR	335845	UnaryOperator	&		333811	0					
ANR	335846	MemberAccess	cpe -> ch [ 0 ] . ics		333811	1					
ANR	335847	ArrayIndexing	cpe -> ch [ 0 ]		333811	0					
ANR	335848	PtrMemberAccess	cpe -> ch		333811	0					
ANR	335849	Identifier	cpe		333811	0					
ANR	335850	Identifier	ch		333811	1					
ANR	335851	PrimaryExpression	0		333811	1					
ANR	335852	Identifier	ics		333811	1					
ANR	335853	IfStatement	if ( s -> coder -> encode_main_pred )		333811	1					
ANR	335854	Condition	s -> coder -> encode_main_pred	463:24:10751:10776	333811	0	True				
ANR	335855	PtrMemberAccess	s -> coder -> encode_main_pred		333811	0					
ANR	335856	PtrMemberAccess	s -> coder		333811	0					
ANR	335857	Identifier	s		333811	0					
ANR	335858	Identifier	coder		333811	1					
ANR	335859	Identifier	encode_main_pred		333811	1					
ANR	335860	ExpressionStatement	"s -> coder -> encode_main_pred ( s , & cpe -> ch [ 0 ] )"	465:24:10804:10846	333811	1	True				
ANR	335861	CallExpression	"s -> coder -> encode_main_pred ( s , & cpe -> ch [ 0 ] )"		333811	0					
ANR	335862	Callee	s -> coder -> encode_main_pred		333811	0					
ANR	335863	PtrMemberAccess	s -> coder -> encode_main_pred		333811	0					
ANR	335864	PtrMemberAccess	s -> coder		333811	0					
ANR	335865	Identifier	s		333811	0					
ANR	335866	Identifier	coder		333811	1					
ANR	335867	Identifier	encode_main_pred		333811	1					
ANR	335868	ArgumentList	s		333811	1					
ANR	335869	Argument	s		333811	0					
ANR	335870	Identifier	s		333811	0					
ANR	335871	Argument	& cpe -> ch [ 0 ]		333811	1					
ANR	335872	UnaryOperationExpression	& cpe -> ch [ 0 ]		333811	0					
ANR	335873	UnaryOperator	&		333811	0					
ANR	335874	ArrayIndexing	cpe -> ch [ 0 ]		333811	1					
ANR	335875	PtrMemberAccess	cpe -> ch		333811	0					
ANR	335876	Identifier	cpe		333811	0					
ANR	335877	Identifier	ch		333811	1					
ANR	335878	PrimaryExpression	0		333811	1					
ANR	335879	IfStatement	if ( s -> coder -> encode_ltp_info )		333811	2					
ANR	335880	Condition	s -> coder -> encode_ltp_info	467:24:10873:10897	333811	0	True				
ANR	335881	PtrMemberAccess	s -> coder -> encode_ltp_info		333811	0					
ANR	335882	PtrMemberAccess	s -> coder		333811	0					
ANR	335883	Identifier	s		333811	0					
ANR	335884	Identifier	coder		333811	1					
ANR	335885	Identifier	encode_ltp_info		333811	1					
ANR	335886	ExpressionStatement	"s -> coder -> encode_ltp_info ( s , & cpe -> ch [ 0 ] , 1 )"	469:24:10925:10969	333811	1	True				
ANR	335887	CallExpression	"s -> coder -> encode_ltp_info ( s , & cpe -> ch [ 0 ] , 1 )"		333811	0					
ANR	335888	Callee	s -> coder -> encode_ltp_info		333811	0					
ANR	335889	PtrMemberAccess	s -> coder -> encode_ltp_info		333811	0					
ANR	335890	PtrMemberAccess	s -> coder		333811	0					
ANR	335891	Identifier	s		333811	0					
ANR	335892	Identifier	coder		333811	1					
ANR	335893	Identifier	encode_ltp_info		333811	1					
ANR	335894	ArgumentList	s		333811	1					
ANR	335895	Argument	s		333811	0					
ANR	335896	Identifier	s		333811	0					
ANR	335897	Argument	& cpe -> ch [ 0 ]		333811	1					
ANR	335898	UnaryOperationExpression	& cpe -> ch [ 0 ]		333811	0					
ANR	335899	UnaryOperator	&		333811	0					
ANR	335900	ArrayIndexing	cpe -> ch [ 0 ]		333811	1					
ANR	335901	PtrMemberAccess	cpe -> ch		333811	0					
ANR	335902	Identifier	cpe		333811	0					
ANR	335903	Identifier	ch		333811	1					
ANR	335904	PrimaryExpression	0		333811	1					
ANR	335905	Argument	1		333811	2					
ANR	335906	PrimaryExpression	1		333811	0					
ANR	335907	ExpressionStatement	"encode_ms_info ( & s -> pb , cpe )"	471:20:10992:11019	333811	3	True				
ANR	335908	CallExpression	"encode_ms_info ( & s -> pb , cpe )"		333811	0					
ANR	335909	Callee	encode_ms_info		333811	0					
ANR	335910	Identifier	encode_ms_info		333811	0					
ANR	335911	ArgumentList	& s -> pb		333811	1					
ANR	335912	Argument	& s -> pb		333811	0					
ANR	335913	UnaryOperationExpression	& s -> pb		333811	0					
ANR	335914	UnaryOperator	&		333811	0					
ANR	335915	PtrMemberAccess	s -> pb		333811	1					
ANR	335916	Identifier	s		333811	0					
ANR	335917	Identifier	pb		333811	1					
ANR	335918	Argument	cpe		333811	1					
ANR	335919	Identifier	cpe		333811	0					
ANR	335920	IfStatement	if ( cpe -> ms_mode )		333811	4					
ANR	335921	Condition	cpe -> ms_mode	473:24:11046:11057	333811	0	True				
ANR	335922	PtrMemberAccess	cpe -> ms_mode		333811	0					
ANR	335923	Identifier	cpe		333811	0					
ANR	335924	Identifier	ms_mode		333811	1					
ANR	335925	ExpressionStatement	ms_mode = 1	473:38:11060:11071	333811	1	True				
ANR	335926	AssignmentExpression	ms_mode = 1		333811	0		=			
ANR	335927	Identifier	ms_mode		333811	0					
ANR	335928	PrimaryExpression	1		333811	1					
ANR	335929	ForStatement	for ( ch = 0 ; ch < chans ; ch ++ )		333811	26					
ANR	335930	ForInit	ch = 0 ;	479:17:11125:11131	333811	0	True				
ANR	335931	AssignmentExpression	ch = 0		333811	0		=			
ANR	335932	Identifier	ch		333811	0					
ANR	335933	PrimaryExpression	0		333811	1					
ANR	335934	Condition	ch < chans	479:25:11133:11142	333811	1	True				
ANR	335935	RelationalExpression	ch < chans		333811	0		<			
ANR	335936	Identifier	ch		333811	0					
ANR	335937	Identifier	chans		333811	1					
ANR	335938	PostIncDecOperationExpression	ch ++	479:37:11145:11148	333811	2	True				
ANR	335939	Identifier	ch		333811	0					
ANR	335940	IncDec	++		333811	1					
ANR	335941	CompoundStatement		475:43:11009:11009	333811	3					
ANR	335942	ExpressionStatement	s -> cur_channel = start_ch + ch	481:16:11170:11200	333811	0	True				
ANR	335943	AssignmentExpression	s -> cur_channel = start_ch + ch		333811	0		=			
ANR	335944	PtrMemberAccess	s -> cur_channel		333811	0					
ANR	335945	Identifier	s		333811	0					
ANR	335946	Identifier	cur_channel		333811	1					
ANR	335947	AdditiveExpression	start_ch + ch		333811	1		+			
ANR	335948	Identifier	start_ch		333811	0					
ANR	335949	Identifier	ch		333811	1					
ANR	335950	ExpressionStatement	"encode_individual_channel ( avctx , s , & cpe -> ch [ ch ] , cpe -> common_window )"	483:16:11219:11288	333811	1	True				
ANR	335951	CallExpression	"encode_individual_channel ( avctx , s , & cpe -> ch [ ch ] , cpe -> common_window )"		333811	0					
ANR	335952	Callee	encode_individual_channel		333811	0					
ANR	335953	Identifier	encode_individual_channel		333811	0					
ANR	335954	ArgumentList	avctx		333811	1					
ANR	335955	Argument	avctx		333811	0					
ANR	335956	Identifier	avctx		333811	0					
ANR	335957	Argument	s		333811	1					
ANR	335958	Identifier	s		333811	0					
ANR	335959	Argument	& cpe -> ch [ ch ]		333811	2					
ANR	335960	UnaryOperationExpression	& cpe -> ch [ ch ]		333811	0					
ANR	335961	UnaryOperator	&		333811	0					
ANR	335962	ArrayIndexing	cpe -> ch [ ch ]		333811	1					
ANR	335963	PtrMemberAccess	cpe -> ch		333811	0					
ANR	335964	Identifier	cpe		333811	0					
ANR	335965	Identifier	ch		333811	1					
ANR	335966	Identifier	ch		333811	1					
ANR	335967	Argument	cpe -> common_window		333811	3					
ANR	335968	PtrMemberAccess	cpe -> common_window		333811	0					
ANR	335969	Identifier	cpe		333811	0					
ANR	335970	Identifier	common_window		333811	1					
ANR	335971	ExpressionStatement	start_ch += chans	487:12:11318:11335	333811	27	True				
ANR	335972	AssignmentExpression	start_ch += chans		333811	0		+=			
ANR	335973	Identifier	start_ch		333811	0					
ANR	335974	Identifier	chans		333811	1					
ANR	335975	IfStatement	if ( avctx -> flags & CODEC_FLAG_QSCALE )		333811	6					
ANR	335976	Condition	avctx -> flags & CODEC_FLAG_QSCALE	493:12:11363:11394	333811	0	True				
ANR	335977	BitAndExpression	avctx -> flags & CODEC_FLAG_QSCALE		333811	0		&			
ANR	335978	PtrMemberAccess	avctx -> flags		333811	0					
ANR	335979	Identifier	avctx		333811	0					
ANR	335980	Identifier	flags		333811	1					
ANR	335981	Identifier	CODEC_FLAG_QSCALE		333811	1					
ANR	335982	CompoundStatement		489:46:11255:11255	333811	1					
ANR	335983	BreakStatement	break ;	497:12:11485:11490	333811	0	True				
ANR	335984	ExpressionStatement	frame_bits = put_bits_count ( & s -> pb )	511:8:11706:11741	333811	7	True				
ANR	335985	AssignmentExpression	frame_bits = put_bits_count ( & s -> pb )		333811	0		=			
ANR	335986	Identifier	frame_bits		333811	0					
ANR	335987	CallExpression	put_bits_count ( & s -> pb )		333811	1					
ANR	335988	Callee	put_bits_count		333811	0					
ANR	335989	Identifier	put_bits_count		333811	0					
ANR	335990	ArgumentList	& s -> pb		333811	1					
ANR	335991	Argument	& s -> pb		333811	0					
ANR	335992	UnaryOperationExpression	& s -> pb		333811	0					
ANR	335993	UnaryOperator	&		333811	0					
ANR	335994	PtrMemberAccess	s -> pb		333811	1					
ANR	335995	Identifier	s		333811	0					
ANR	335996	Identifier	pb		333811	1					
ANR	335997	ExpressionStatement	rate_bits = avctx -> bit_rate * 1024 / avctx -> sample_rate	513:8:11752:11807	333811	8	True				
ANR	335998	AssignmentExpression	rate_bits = avctx -> bit_rate * 1024 / avctx -> sample_rate		333811	0		=			
ANR	335999	Identifier	rate_bits		333811	0					
ANR	336000	MultiplicativeExpression	avctx -> bit_rate * 1024 / avctx -> sample_rate		333811	1		*			
ANR	336001	PtrMemberAccess	avctx -> bit_rate		333811	0					
ANR	336002	Identifier	avctx		333811	0					
ANR	336003	Identifier	bit_rate		333811	1					
ANR	336004	MultiplicativeExpression	1024 / avctx -> sample_rate		333811	1		/			
ANR	336005	PrimaryExpression	1024		333811	0					
ANR	336006	PtrMemberAccess	avctx -> sample_rate		333811	1					
ANR	336007	Identifier	avctx		333811	0					
ANR	336008	Identifier	sample_rate		333811	1					
ANR	336009	ExpressionStatement	"rate_bits = FFMIN ( rate_bits , 6144 * s -> channels - 3 )"	515:8:11818:11870	333811	9	True				
ANR	336010	AssignmentExpression	"rate_bits = FFMIN ( rate_bits , 6144 * s -> channels - 3 )"		333811	0		=			
ANR	336011	Identifier	rate_bits		333811	0					
ANR	336012	CallExpression	"FFMIN ( rate_bits , 6144 * s -> channels - 3 )"		333811	1					
ANR	336013	Callee	FFMIN		333811	0					
ANR	336014	Identifier	FFMIN		333811	0					
ANR	336015	ArgumentList	rate_bits		333811	1					
ANR	336016	Argument	rate_bits		333811	0					
ANR	336017	Identifier	rate_bits		333811	0					
ANR	336018	Argument	6144 * s -> channels - 3		333811	1					
ANR	336019	AdditiveExpression	6144 * s -> channels - 3		333811	0		-			
ANR	336020	MultiplicativeExpression	6144 * s -> channels		333811	0		*			
ANR	336021	PrimaryExpression	6144		333811	0					
ANR	336022	PtrMemberAccess	s -> channels		333811	1					
ANR	336023	Identifier	s		333811	0					
ANR	336024	Identifier	channels		333811	1					
ANR	336025	PrimaryExpression	3		333811	1					
ANR	336026	ExpressionStatement	"too_many_bits = FFMAX ( target_bits , rate_bits )"	517:8:11881:11926	333811	10	True				
ANR	336027	AssignmentExpression	"too_many_bits = FFMAX ( target_bits , rate_bits )"		333811	0		=			
ANR	336028	Identifier	too_many_bits		333811	0					
ANR	336029	CallExpression	"FFMAX ( target_bits , rate_bits )"		333811	1					
ANR	336030	Callee	FFMAX		333811	0					
ANR	336031	Identifier	FFMAX		333811	0					
ANR	336032	ArgumentList	target_bits		333811	1					
ANR	336033	Argument	target_bits		333811	0					
ANR	336034	Identifier	target_bits		333811	0					
ANR	336035	Argument	rate_bits		333811	1					
ANR	336036	Identifier	rate_bits		333811	0					
ANR	336037	ExpressionStatement	"too_many_bits = FFMIN ( too_many_bits , 6144 * s -> channels - 3 )"	519:8:11937:11997	333811	11	True				
ANR	336038	AssignmentExpression	"too_many_bits = FFMIN ( too_many_bits , 6144 * s -> channels - 3 )"		333811	0		=			
ANR	336039	Identifier	too_many_bits		333811	0					
ANR	336040	CallExpression	"FFMIN ( too_many_bits , 6144 * s -> channels - 3 )"		333811	1					
ANR	336041	Callee	FFMIN		333811	0					
ANR	336042	Identifier	FFMIN		333811	0					
ANR	336043	ArgumentList	too_many_bits		333811	1					
ANR	336044	Argument	too_many_bits		333811	0					
ANR	336045	Identifier	too_many_bits		333811	0					
ANR	336046	Argument	6144 * s -> channels - 3		333811	1					
ANR	336047	AdditiveExpression	6144 * s -> channels - 3		333811	0		-			
ANR	336048	MultiplicativeExpression	6144 * s -> channels		333811	0		*			
ANR	336049	PrimaryExpression	6144		333811	0					
ANR	336050	PtrMemberAccess	s -> channels		333811	1					
ANR	336051	Identifier	s		333811	0					
ANR	336052	Identifier	channels		333811	1					
ANR	336053	PrimaryExpression	3		333811	1					
ANR	336054	ExpressionStatement	"too_few_bits = FFMIN ( FFMAX ( rate_bits - rate_bits / 4 , target_bits ) , too_many_bits )"	521:8:12008:12088	333811	12	True				
ANR	336055	AssignmentExpression	"too_few_bits = FFMIN ( FFMAX ( rate_bits - rate_bits / 4 , target_bits ) , too_many_bits )"		333811	0		=			
ANR	336056	Identifier	too_few_bits		333811	0					
ANR	336057	CallExpression	"FFMIN ( FFMAX ( rate_bits - rate_bits / 4 , target_bits ) , too_many_bits )"		333811	1					
ANR	336058	Callee	FFMIN		333811	0					
ANR	336059	Identifier	FFMIN		333811	0					
ANR	336060	ArgumentList	"FFMAX ( rate_bits - rate_bits / 4 , target_bits )"		333811	1					
ANR	336061	Argument	"FFMAX ( rate_bits - rate_bits / 4 , target_bits )"		333811	0					
ANR	336062	CallExpression	"FFMAX ( rate_bits - rate_bits / 4 , target_bits )"		333811	0					
ANR	336063	Callee	FFMAX		333811	0					
ANR	336064	Identifier	FFMAX		333811	0					
ANR	336065	ArgumentList	rate_bits - rate_bits / 4		333811	1					
ANR	336066	Argument	rate_bits - rate_bits / 4		333811	0					
ANR	336067	AdditiveExpression	rate_bits - rate_bits / 4		333811	0		-			
ANR	336068	Identifier	rate_bits		333811	0					
ANR	336069	MultiplicativeExpression	rate_bits / 4		333811	1		/			
ANR	336070	Identifier	rate_bits		333811	0					
ANR	336071	PrimaryExpression	4		333811	1					
ANR	336072	Argument	target_bits		333811	1					
ANR	336073	Identifier	target_bits		333811	0					
ANR	336074	Argument	too_many_bits		333811	1					
ANR	336075	Identifier	too_many_bits		333811	0					
ANR	336076	ExpressionStatement	too_few_bits = too_few_bits - too_few_bits / 8	527:8:12168:12212	333811	13	True				
ANR	336077	AssignmentExpression	too_few_bits = too_few_bits - too_few_bits / 8		333811	0		=			
ANR	336078	Identifier	too_few_bits		333811	0					
ANR	336079	AdditiveExpression	too_few_bits - too_few_bits / 8		333811	1		-			
ANR	336080	Identifier	too_few_bits		333811	0					
ANR	336081	MultiplicativeExpression	too_few_bits / 8		333811	1		/			
ANR	336082	Identifier	too_few_bits		333811	0					
ANR	336083	PrimaryExpression	8		333811	1					
ANR	336084	ExpressionStatement	too_many_bits = too_many_bits + too_many_bits / 2	529:8:12223:12270	333811	14	True				
ANR	336085	AssignmentExpression	too_many_bits = too_many_bits + too_many_bits / 2		333811	0		=			
ANR	336086	Identifier	too_many_bits		333811	0					
ANR	336087	AdditiveExpression	too_many_bits + too_many_bits / 2		333811	1		+			
ANR	336088	Identifier	too_many_bits		333811	0					
ANR	336089	MultiplicativeExpression	too_many_bits / 2		333811	1		/			
ANR	336090	Identifier	too_many_bits		333811	0					
ANR	336091	PrimaryExpression	2		333811	1					
ANR	336092	IfStatement	if ( its == 0 || ( its < 5 && ( frame_bits < too_few_bits || frame_bits > too_many_bits ) ) || frame_bits >= 6144 * s -> channels - 3 )		333811	15					
ANR	336093	Condition	its == 0 || ( its < 5 && ( frame_bits < too_few_bits || frame_bits > too_many_bits ) ) || frame_bits >= 6144 * s -> channels - 3	533:15:12290:12477	333811	0	True				
ANR	336094	OrExpression	its == 0 || ( its < 5 && ( frame_bits < too_few_bits || frame_bits > too_many_bits ) ) || frame_bits >= 6144 * s -> channels - 3		333811	0		||			
ANR	336095	EqualityExpression	its == 0		333811	0		==			
ANR	336096	Identifier	its		333811	0					
ANR	336097	PrimaryExpression	0		333811	1					
ANR	336098	OrExpression	( its < 5 && ( frame_bits < too_few_bits || frame_bits > too_many_bits ) ) || frame_bits >= 6144 * s -> channels - 3		333811	1		||			
ANR	336099	AndExpression	its < 5 && ( frame_bits < too_few_bits || frame_bits > too_many_bits )		333811	0		&&			
ANR	336100	RelationalExpression	its < 5		333811	0		<			
ANR	336101	Identifier	its		333811	0					
ANR	336102	PrimaryExpression	5		333811	1					
ANR	336103	OrExpression	frame_bits < too_few_bits || frame_bits > too_many_bits		333811	1		||			
ANR	336104	RelationalExpression	frame_bits < too_few_bits		333811	0		<			
ANR	336105	Identifier	frame_bits		333811	0					
ANR	336106	Identifier	too_few_bits		333811	1					
ANR	336107	RelationalExpression	frame_bits > too_many_bits		333811	1		>			
ANR	336108	Identifier	frame_bits		333811	0					
ANR	336109	Identifier	too_many_bits		333811	1					
ANR	336110	RelationalExpression	frame_bits >= 6144 * s -> channels - 3		333811	1		>=			
ANR	336111	Identifier	frame_bits		333811	0					
ANR	336112	AdditiveExpression	6144 * s -> channels - 3		333811	1		-			
ANR	336113	MultiplicativeExpression	6144 * s -> channels		333811	0		*			
ANR	336114	PrimaryExpression	6144		333811	0					
ANR	336115	PtrMemberAccess	s -> channels		333811	1					
ANR	336116	Identifier	s		333811	0					
ANR	336117	Identifier	channels		333811	1					
ANR	336118	PrimaryExpression	3		333811	1					
ANR	336119	CompoundStatement		537:12:12364:12409	333811	1					
ANR	336120	IdentifierDeclStatement	float ratio = ( ( float ) rate_bits ) / frame_bits ;	541:12:12506:12551	333811	0	True				
ANR	336121	IdentifierDecl	ratio = ( ( float ) rate_bits ) / frame_bits		333811	0					
ANR	336122	IdentifierDeclType	float		333811	0					
ANR	336123	Identifier	ratio		333811	1					
ANR	336124	AssignmentExpression	ratio = ( ( float ) rate_bits ) / frame_bits		333811	2		=			
ANR	336125	Identifier	ratio		333811	0					
ANR	336126	MultiplicativeExpression	( ( float ) rate_bits ) / frame_bits		333811	1		/			
ANR	336127	CastExpression	( float ) rate_bits		333811	0					
ANR	336128	CastTarget	float		333811	0					
ANR	336129	Identifier	rate_bits		333811	1					
ANR	336130	Identifier	frame_bits		333811	1					
ANR	336131	IfStatement	if ( frame_bits >= too_few_bits && frame_bits <= too_many_bits )		333811	1					
ANR	336132	Condition	frame_bits >= too_few_bits && frame_bits <= too_many_bits	545:16:12572:12628	333811	0	True				
ANR	336133	AndExpression	frame_bits >= too_few_bits && frame_bits <= too_many_bits		333811	0		&&			
ANR	336134	RelationalExpression	frame_bits >= too_few_bits		333811	0		>=			
ANR	336135	Identifier	frame_bits		333811	0					
ANR	336136	Identifier	too_few_bits		333811	1					
ANR	336137	RelationalExpression	frame_bits <= too_many_bits		333811	1		<=			
ANR	336138	Identifier	frame_bits		333811	0					
ANR	336139	Identifier	too_many_bits		333811	1					
ANR	336140	CompoundStatement		541:75:12489:12489	333811	1					
ANR	336141	ExpressionStatement	ratio = sqrtf ( sqrtf ( ratio ) )	559:16:13013:13040	333811	0	True				
ANR	336142	AssignmentExpression	ratio = sqrtf ( sqrtf ( ratio ) )		333811	0		=			
ANR	336143	Identifier	ratio		333811	0					
ANR	336144	CallExpression	sqrtf ( sqrtf ( ratio ) )		333811	1					
ANR	336145	Callee	sqrtf		333811	0					
ANR	336146	Identifier	sqrtf		333811	0					
ANR	336147	ArgumentList	sqrtf ( ratio )		333811	1					
ANR	336148	Argument	sqrtf ( ratio )		333811	0					
ANR	336149	CallExpression	sqrtf ( ratio )		333811	0					
ANR	336150	Callee	sqrtf		333811	0					
ANR	336151	Identifier	sqrtf		333811	0					
ANR	336152	ArgumentList	ratio		333811	1					
ANR	336153	Argument	ratio		333811	0					
ANR	336154	Identifier	ratio		333811	0					
ANR	336155	ExpressionStatement	"ratio = av_clipf ( ratio , 0.9f , 1.1f )"	561:16:13059:13094	333811	1	True				
ANR	336156	AssignmentExpression	"ratio = av_clipf ( ratio , 0.9f , 1.1f )"		333811	0		=			
ANR	336157	Identifier	ratio		333811	0					
ANR	336158	CallExpression	"av_clipf ( ratio , 0.9f , 1.1f )"		333811	1					
ANR	336159	Callee	av_clipf		333811	0					
ANR	336160	Identifier	av_clipf		333811	0					
ANR	336161	ArgumentList	ratio		333811	1					
ANR	336162	Argument	ratio		333811	0					
ANR	336163	Identifier	ratio		333811	0					
ANR	336164	Argument	0.9f		333811	1					
ANR	336165	PrimaryExpression	0.9f		333811	0					
ANR	336166	Argument	1.1f		333811	2					
ANR	336167	PrimaryExpression	1.1f		333811	0					
ANR	336168	ElseStatement	else		333811	0					
ANR	336169	CompoundStatement		559:19:12974:12974	333811	0					
ANR	336170	ExpressionStatement	ratio = sqrtf ( ratio )	567:16:13177:13197	333811	0	True				
ANR	336171	AssignmentExpression	ratio = sqrtf ( ratio )		333811	0		=			
ANR	336172	Identifier	ratio		333811	0					
ANR	336173	CallExpression	sqrtf ( ratio )		333811	1					
ANR	336174	Callee	sqrtf		333811	0					
ANR	336175	Identifier	sqrtf		333811	0					
ANR	336176	ArgumentList	ratio		333811	1					
ANR	336177	Argument	ratio		333811	0					
ANR	336178	Identifier	ratio		333811	0					
ANR	336179	ExpressionStatement	"s -> lambda = FFMIN ( s -> lambda * ratio , 65536.f )"	571:12:13227:13272	333811	2	True				
ANR	336180	AssignmentExpression	"s -> lambda = FFMIN ( s -> lambda * ratio , 65536.f )"		333811	0		=			
ANR	336181	PtrMemberAccess	s -> lambda		333811	0					
ANR	336182	Identifier	s		333811	0					
ANR	336183	Identifier	lambda		333811	1					
ANR	336184	CallExpression	"FFMIN ( s -> lambda * ratio , 65536.f )"		333811	1					
ANR	336185	Callee	FFMIN		333811	0					
ANR	336186	Identifier	FFMIN		333811	0					
ANR	336187	ArgumentList	s -> lambda * ratio		333811	1					
ANR	336188	Argument	s -> lambda * ratio		333811	0					
ANR	336189	MultiplicativeExpression	s -> lambda * ratio		333811	0		*			
ANR	336190	PtrMemberAccess	s -> lambda		333811	0					
ANR	336191	Identifier	s		333811	0					
ANR	336192	Identifier	lambda		333811	1					
ANR	336193	Identifier	ratio		333811	1					
ANR	336194	Argument	65536.f		333811	1					
ANR	336195	PrimaryExpression	65536.f		333811	0					
ANR	336196	IfStatement	if ( ratio > 0.9f && ratio < 1.1f )		333811	3					
ANR	336197	Condition	ratio > 0.9f && ratio < 1.1f	577:16:13370:13397	333811	0	True				
ANR	336198	AndExpression	ratio > 0.9f && ratio < 1.1f		333811	0		&&			
ANR	336199	RelationalExpression	ratio > 0.9f		333811	0		>			
ANR	336200	Identifier	ratio		333811	0					
ANR	336201	PrimaryExpression	0.9f		333811	1					
ANR	336202	RelationalExpression	ratio < 1.1f		333811	1		<			
ANR	336203	Identifier	ratio		333811	0					
ANR	336204	PrimaryExpression	1.1f		333811	1					
ANR	336205	CompoundStatement		573:46:13258:13258	333811	1					
ANR	336206	BreakStatement	break ;	579:16:13419:13424	333811	0	True				
ANR	336207	ElseStatement	else		333811	0					
ANR	336208	CompoundStatement		577:19:13304:13304	333811	0					
ANR	336209	IfStatement	if ( is_mode || ms_mode || tns_mode || pred_mode )		333811	0					
ANR	336210	Condition	is_mode || ms_mode || tns_mode || pred_mode	583:20:13469:13511	333811	0	True				
ANR	336211	OrExpression	is_mode || ms_mode || tns_mode || pred_mode		333811	0		||			
ANR	336212	Identifier	is_mode		333811	0					
ANR	336213	OrExpression	ms_mode || tns_mode || pred_mode		333811	1		||			
ANR	336214	Identifier	ms_mode		333811	0					
ANR	336215	OrExpression	tns_mode || pred_mode		333811	1		||			
ANR	336216	Identifier	tns_mode		333811	0					
ANR	336217	Identifier	pred_mode		333811	1					
ANR	336218	CompoundStatement		579:65:13372:13372	333811	1					
ANR	336219	ForStatement	for ( i = 0 ; i < s -> chan_map [ 0 ] ; i ++ )		333811	0					
ANR	336220	ForInit	i = 0 ;	585:25:13542:13547	333811	0	True				
ANR	336221	AssignmentExpression	i = 0		333811	0		=			
ANR	336222	Identifier	i		333811	0					
ANR	336223	PrimaryExpression	0		333811	1					
ANR	336224	Condition	i < s -> chan_map [ 0 ]	585:32:13549:13566	333811	1	True				
ANR	336225	RelationalExpression	i < s -> chan_map [ 0 ]		333811	0		<			
ANR	336226	Identifier	i		333811	0					
ANR	336227	ArrayIndexing	s -> chan_map [ 0 ]		333811	1					
ANR	336228	PtrMemberAccess	s -> chan_map		333811	0					
ANR	336229	Identifier	s		333811	0					
ANR	336230	Identifier	chan_map		333811	1					
ANR	336231	PrimaryExpression	0		333811	1					
ANR	336232	PostIncDecOperationExpression	i ++	585:52:13569:13571	333811	2	True				
ANR	336233	Identifier	i		333811	0					
ANR	336234	IncDec	++		333811	1					
ANR	336235	CompoundStatement		581:57:13432:13432	333811	3					
ANR	336236	ExpressionStatement	chans = tag == TYPE_CPE ? 2 : 1	589:24:13649:13680	333811	0	True				
ANR	336237	AssignmentExpression	chans = tag == TYPE_CPE ? 2 : 1		333811	0		=			
ANR	336238	Identifier	chans		333811	0					
ANR	336239	ConditionalExpression	tag == TYPE_CPE ? 2 : 1		333811	1					
ANR	336240	Condition	tag == TYPE_CPE		333811	0					
ANR	336241	EqualityExpression	tag == TYPE_CPE		333811	0		==			
ANR	336242	Identifier	tag		333811	0					
ANR	336243	Identifier	TYPE_CPE		333811	1					
ANR	336244	PrimaryExpression	2		333811	1					
ANR	336245	PrimaryExpression	1		333811	2					
ANR	336246	ExpressionStatement	cpe = & s -> cpe [ i ]	591:24:13707:13723	333811	1	True				
ANR	336247	AssignmentExpression	cpe = & s -> cpe [ i ]		333811	0		=			
ANR	336248	Identifier	cpe		333811	0					
ANR	336249	UnaryOperationExpression	& s -> cpe [ i ]		333811	1					
ANR	336250	UnaryOperator	&		333811	0					
ANR	336251	ArrayIndexing	s -> cpe [ i ]		333811	1					
ANR	336252	PtrMemberAccess	s -> cpe		333811	0					
ANR	336253	Identifier	s		333811	0					
ANR	336254	Identifier	cpe		333811	1					
ANR	336255	Identifier	i		333811	1					
ANR	336256	ForStatement	for ( ch = 0 ; ch < chans ; ch ++ )		333811	2					
ANR	336257	ForInit	ch = 0 ;	593:29:13755:13761	333811	0	True				
ANR	336258	AssignmentExpression	ch = 0		333811	0		=			
ANR	336259	Identifier	ch		333811	0					
ANR	336260	PrimaryExpression	0		333811	1					
ANR	336261	Condition	ch < chans	593:37:13763:13772	333811	1	True				
ANR	336262	RelationalExpression	ch < chans		333811	0		<			
ANR	336263	Identifier	ch		333811	0					
ANR	336264	Identifier	chans		333811	1					
ANR	336265	PostIncDecOperationExpression	ch ++	593:49:13775:13778	333811	2	True				
ANR	336266	Identifier	ch		333811	0					
ANR	336267	IncDec	++		333811	1					
ANR	336268	ExpressionStatement	"memcpy ( cpe -> ch [ ch ] . coeffs , cpe -> ch [ ch ] . pcoeffs , sizeof ( cpe -> ch [ ch ] . coeffs ) )"	595:28:13810:13885	333811	3	True				
ANR	336269	CallExpression	"memcpy ( cpe -> ch [ ch ] . coeffs , cpe -> ch [ ch ] . pcoeffs , sizeof ( cpe -> ch [ ch ] . coeffs ) )"		333811	0					
ANR	336270	Callee	memcpy		333811	0					
ANR	336271	Identifier	memcpy		333811	0					
ANR	336272	ArgumentList	cpe -> ch [ ch ] . coeffs		333811	1					
ANR	336273	Argument	cpe -> ch [ ch ] . coeffs		333811	0					
ANR	336274	MemberAccess	cpe -> ch [ ch ] . coeffs		333811	0					
ANR	336275	ArrayIndexing	cpe -> ch [ ch ]		333811	0					
ANR	336276	PtrMemberAccess	cpe -> ch		333811	0					
ANR	336277	Identifier	cpe		333811	0					
ANR	336278	Identifier	ch		333811	1					
ANR	336279	Identifier	ch		333811	1					
ANR	336280	Identifier	coeffs		333811	1					
ANR	336281	Argument	cpe -> ch [ ch ] . pcoeffs		333811	1					
ANR	336282	MemberAccess	cpe -> ch [ ch ] . pcoeffs		333811	0					
ANR	336283	ArrayIndexing	cpe -> ch [ ch ]		333811	0					
ANR	336284	PtrMemberAccess	cpe -> ch		333811	0					
ANR	336285	Identifier	cpe		333811	0					
ANR	336286	Identifier	ch		333811	1					
ANR	336287	Identifier	ch		333811	1					
ANR	336288	Identifier	pcoeffs		333811	1					
ANR	336289	Argument	sizeof ( cpe -> ch [ ch ] . coeffs )		333811	2					
ANR	336290	SizeofExpression	sizeof ( cpe -> ch [ ch ] . coeffs )		333811	0					
ANR	336291	Sizeof	sizeof		333811	0					
ANR	336292	MemberAccess	cpe -> ch [ ch ] . coeffs		333811	1					
ANR	336293	ArrayIndexing	cpe -> ch [ ch ]		333811	0					
ANR	336294	PtrMemberAccess	cpe -> ch		333811	0					
ANR	336295	Identifier	cpe		333811	0					
ANR	336296	Identifier	ch		333811	1					
ANR	336297	Identifier	ch		333811	1					
ANR	336298	Identifier	coeffs		333811	1					
ANR	336299	ExpressionStatement	its ++	601:16:13946:13951	333811	1	True				
ANR	336300	PostIncDecOperationExpression	its ++		333811	0					
ANR	336301	Identifier	its		333811	0					
ANR	336302	IncDec	++		333811	1					
ANR	336303	ElseStatement	else		333811	0					
ANR	336304	CompoundStatement		601:15:13842:13842	333811	0					
ANR	336305	BreakStatement	break ;	607:12:13999:14004	333811	0	True				
ANR	336306	Condition	1	611:13:14031:14031	333811	1	True				
ANR	336307	PrimaryExpression	1		333811	0					
ANR	336308	IfStatement	if ( s -> options . ltp && s -> coder -> ltp_insert_new_frame )		333811	20					
ANR	336309	Condition	s -> options . ltp && s -> coder -> ltp_insert_new_frame	615:8:14046:14093	333811	0	True				
ANR	336310	AndExpression	s -> options . ltp && s -> coder -> ltp_insert_new_frame		333811	0		&&			
ANR	336311	MemberAccess	s -> options . ltp		333811	0					
ANR	336312	PtrMemberAccess	s -> options		333811	0					
ANR	336313	Identifier	s		333811	0					
ANR	336314	Identifier	options		333811	1					
ANR	336315	Identifier	ltp		333811	1					
ANR	336316	PtrMemberAccess	s -> coder -> ltp_insert_new_frame		333811	1					
ANR	336317	PtrMemberAccess	s -> coder		333811	0					
ANR	336318	Identifier	s		333811	0					
ANR	336319	Identifier	coder		333811	1					
ANR	336320	Identifier	ltp_insert_new_frame		333811	1					
ANR	336321	ExpressionStatement	s -> coder -> ltp_insert_new_frame ( s )	617:8:14105:14138	333811	1	True				
ANR	336322	CallExpression	s -> coder -> ltp_insert_new_frame ( s )		333811	0					
ANR	336323	Callee	s -> coder -> ltp_insert_new_frame		333811	0					
ANR	336324	PtrMemberAccess	s -> coder -> ltp_insert_new_frame		333811	0					
ANR	336325	PtrMemberAccess	s -> coder		333811	0					
ANR	336326	Identifier	s		333811	0					
ANR	336327	Identifier	coder		333811	1					
ANR	336328	Identifier	ltp_insert_new_frame		333811	1					
ANR	336329	ArgumentList	s		333811	1					
ANR	336330	Argument	s		333811	0					
ANR	336331	Identifier	s		333811	0					
ANR	336332	ExpressionStatement	"put_bits ( & s -> pb , 3 , TYPE_END )"	621:4:14147:14176	333811	21	True				
ANR	336333	CallExpression	"put_bits ( & s -> pb , 3 , TYPE_END )"		333811	0					
ANR	336334	Callee	put_bits		333811	0					
ANR	336335	Identifier	put_bits		333811	0					
ANR	336336	ArgumentList	& s -> pb		333811	1					
ANR	336337	Argument	& s -> pb		333811	0					
ANR	336338	UnaryOperationExpression	& s -> pb		333811	0					
ANR	336339	UnaryOperator	&		333811	0					
ANR	336340	PtrMemberAccess	s -> pb		333811	1					
ANR	336341	Identifier	s		333811	0					
ANR	336342	Identifier	pb		333811	1					
ANR	336343	Argument	3		333811	1					
ANR	336344	PrimaryExpression	3		333811	0					
ANR	336345	Argument	TYPE_END		333811	2					
ANR	336346	Identifier	TYPE_END		333811	0					
ANR	336347	ExpressionStatement	flush_put_bits ( & s -> pb )	623:4:14183:14205	333811	22	True				
ANR	336348	CallExpression	flush_put_bits ( & s -> pb )		333811	0					
ANR	336349	Callee	flush_put_bits		333811	0					
ANR	336350	Identifier	flush_put_bits		333811	0					
ANR	336351	ArgumentList	& s -> pb		333811	1					
ANR	336352	Argument	& s -> pb		333811	0					
ANR	336353	UnaryOperationExpression	& s -> pb		333811	0					
ANR	336354	UnaryOperator	&		333811	0					
ANR	336355	PtrMemberAccess	s -> pb		333811	1					
ANR	336356	Identifier	s		333811	0					
ANR	336357	Identifier	pb		333811	1					
ANR	336358	ExpressionStatement	s -> last_frame_pb_count = put_bits_count ( & s -> pb )	627:4:14214:14261	333811	23	True				
ANR	336359	AssignmentExpression	s -> last_frame_pb_count = put_bits_count ( & s -> pb )		333811	0		=			
ANR	336360	PtrMemberAccess	s -> last_frame_pb_count		333811	0					
ANR	336361	Identifier	s		333811	0					
ANR	336362	Identifier	last_frame_pb_count		333811	1					
ANR	336363	CallExpression	put_bits_count ( & s -> pb )		333811	1					
ANR	336364	Callee	put_bits_count		333811	0					
ANR	336365	Identifier	put_bits_count		333811	0					
ANR	336366	ArgumentList	& s -> pb		333811	1					
ANR	336367	Argument	& s -> pb		333811	0					
ANR	336368	UnaryOperationExpression	& s -> pb		333811	0					
ANR	336369	UnaryOperator	&		333811	0					
ANR	336370	PtrMemberAccess	s -> pb		333811	1					
ANR	336371	Identifier	s		333811	0					
ANR	336372	Identifier	pb		333811	1					
ANR	336373	ExpressionStatement	s -> lambda_sum += s -> lambda	631:4:14270:14296	333811	24	True				
ANR	336374	AssignmentExpression	s -> lambda_sum += s -> lambda		333811	0		+=			
ANR	336375	PtrMemberAccess	s -> lambda_sum		333811	0					
ANR	336376	Identifier	s		333811	0					
ANR	336377	Identifier	lambda_sum		333811	1					
ANR	336378	PtrMemberAccess	s -> lambda		333811	1					
ANR	336379	Identifier	s		333811	0					
ANR	336380	Identifier	lambda		333811	1					
ANR	336381	ExpressionStatement	s -> lambda_count ++	633:4:14303:14320	333811	25	True				
ANR	336382	PostIncDecOperationExpression	s -> lambda_count ++		333811	0					
ANR	336383	PtrMemberAccess	s -> lambda_count		333811	0					
ANR	336384	Identifier	s		333811	0					
ANR	336385	Identifier	lambda_count		333811	1					
ANR	336386	IncDec	++		333811	1					
ANR	336387	IfStatement	if ( ! frame )		333811	26					
ANR	336388	Condition	! frame	637:8:14333:14338	333811	0	True				
ANR	336389	UnaryOperationExpression	! frame		333811	0					
ANR	336390	UnaryOperator	!		333811	0					
ANR	336391	Identifier	frame		333811	1					
ANR	336392	ExpressionStatement	s -> last_frame ++	639:8:14350:14365	333811	1	True				
ANR	336393	PostIncDecOperationExpression	s -> last_frame ++		333811	0					
ANR	336394	PtrMemberAccess	s -> last_frame		333811	0					
ANR	336395	Identifier	s		333811	0					
ANR	336396	Identifier	last_frame		333811	1					
ANR	336397	IncDec	++		333811	1					
ANR	336398	ExpressionStatement	"ff_af_queue_remove ( & s -> afq , avctx -> frame_size , & avpkt -> pts , & avpkt -> duration )"	643:4:14374:14475	333811	27	True				
ANR	336399	CallExpression	"ff_af_queue_remove ( & s -> afq , avctx -> frame_size , & avpkt -> pts , & avpkt -> duration )"		333811	0					
ANR	336400	Callee	ff_af_queue_remove		333811	0					
ANR	336401	Identifier	ff_af_queue_remove		333811	0					
ANR	336402	ArgumentList	& s -> afq		333811	1					
ANR	336403	Argument	& s -> afq		333811	0					
ANR	336404	UnaryOperationExpression	& s -> afq		333811	0					
ANR	336405	UnaryOperator	&		333811	0					
ANR	336406	PtrMemberAccess	s -> afq		333811	1					
ANR	336407	Identifier	s		333811	0					
ANR	336408	Identifier	afq		333811	1					
ANR	336409	Argument	avctx -> frame_size		333811	1					
ANR	336410	PtrMemberAccess	avctx -> frame_size		333811	0					
ANR	336411	Identifier	avctx		333811	0					
ANR	336412	Identifier	frame_size		333811	1					
ANR	336413	Argument	& avpkt -> pts		333811	2					
ANR	336414	UnaryOperationExpression	& avpkt -> pts		333811	0					
ANR	336415	UnaryOperator	&		333811	0					
ANR	336416	PtrMemberAccess	avpkt -> pts		333811	1					
ANR	336417	Identifier	avpkt		333811	0					
ANR	336418	Identifier	pts		333811	1					
ANR	336419	Argument	& avpkt -> duration		333811	3					
ANR	336420	UnaryOperationExpression	& avpkt -> duration		333811	0					
ANR	336421	UnaryOperator	&		333811	0					
ANR	336422	PtrMemberAccess	avpkt -> duration		333811	1					
ANR	336423	Identifier	avpkt		333811	0					
ANR	336424	Identifier	duration		333811	1					
ANR	336425	ExpressionStatement	avpkt -> size = put_bits_count ( & s -> pb ) >> 3	649:4:14484:14525	333811	28	True				
ANR	336426	AssignmentExpression	avpkt -> size = put_bits_count ( & s -> pb ) >> 3		333811	0		=			
ANR	336427	PtrMemberAccess	avpkt -> size		333811	0					
ANR	336428	Identifier	avpkt		333811	0					
ANR	336429	Identifier	size		333811	1					
ANR	336430	ShiftExpression	put_bits_count ( & s -> pb ) >> 3		333811	1		>>			
ANR	336431	CallExpression	put_bits_count ( & s -> pb )		333811	0					
ANR	336432	Callee	put_bits_count		333811	0					
ANR	336433	Identifier	put_bits_count		333811	0					
ANR	336434	ArgumentList	& s -> pb		333811	1					
ANR	336435	Argument	& s -> pb		333811	0					
ANR	336436	UnaryOperationExpression	& s -> pb		333811	0					
ANR	336437	UnaryOperator	&		333811	0					
ANR	336438	PtrMemberAccess	s -> pb		333811	1					
ANR	336439	Identifier	s		333811	0					
ANR	336440	Identifier	pb		333811	1					
ANR	336441	PrimaryExpression	3		333811	1					
ANR	336442	ExpressionStatement	* got_packet_ptr = 1	651:4:14532:14551	333811	29	True				
ANR	336443	AssignmentExpression	* got_packet_ptr = 1		333811	0		=			
ANR	336444	UnaryOperationExpression	* got_packet_ptr		333811	0					
ANR	336445	UnaryOperator	*		333811	0					
ANR	336446	Identifier	got_packet_ptr		333811	1					
ANR	336447	PrimaryExpression	1		333811	1					
ANR	336448	ReturnStatement	return 0 ;	653:4:14558:14566	333811	30	True				
ANR	336449	PrimaryExpression	0		333811	0					
ANR	336450	ReturnType	static int		333811	1					
ANR	336451	Identifier	aac_encode_frame		333811	2					
ANR	336452	ParameterList	"AVCodecContext * avctx , AVPacket * avpkt , const AVFrame * frame , int * got_packet_ptr"		333811	3					
ANR	336453	Parameter	AVCodecContext * avctx	1:28:28:48	333811	0	True				
ANR	336454	ParameterType	AVCodecContext *		333811	0					
ANR	336455	Identifier	avctx		333811	1					
ANR	336456	Parameter	AVPacket * avpkt	1:51:51:65	333811	1	True				
ANR	336457	ParameterType	AVPacket *		333811	0					
ANR	336458	Identifier	avpkt		333811	1					
ANR	336459	Parameter	const AVFrame * frame	3:28:97:116	333811	2	True				
ANR	336460	ParameterType	const AVFrame *		333811	0					
ANR	336461	Identifier	frame		333811	1					
ANR	336462	Parameter	int * got_packet_ptr	3:50:119:137	333811	3	True				
ANR	336463	ParameterType	int *		333811	0					
ANR	336464	Identifier	got_packet_ptr		333811	1					
ANR	336465	CFGEntryNode	ENTRY		333811		True				
ANR	336466	CFGExitNode	EXIT		333811		True				
ANR	336467	Symbol	* w		333811						
ANR	336468	Symbol	* ch		333811						
ANR	336469	Symbol	avpkt		333811						
ANR	336470	Symbol	* got_packet_ptr		333811						
ANR	336471	Symbol	wi [ 1 ] . window_type		333811						
ANR	336472	Symbol	s -> psy . bitres . alloc		333811						
ANR	336473	Symbol	sce		333811						
ANR	336474	Symbol	sce -> coeffs		333811						
ANR	336475	Symbol	sce -> band_type		333811						
ANR	336476	Symbol	* ics -> window_sequence		333811						
ANR	336477	Symbol	ics -> num_windows		333811						
ANR	336478	Symbol	pred_mode		333811						
ANR	336479	Symbol	* wi [ 1 ] . grouping		333811						
ANR	336480	Symbol	s -> coder		333811						
ANR	336481	Symbol	s -> last_frame		333811						
ANR	336482	Symbol	* * cpe -> ch		333811						
ANR	336483	Symbol	* ff_swb_offset_128		333811						
ANR	336484	Symbol	* cpe -> ch -> coeffs		333811						
ANR	336485	Symbol	EIGHT_SHORT_SEQUENCE		333811						
ANR	336486	Symbol	s -> coder -> encode_main_pred		333811						
ANR	336487	Symbol	too_few_bits		333811						
ANR	336488	Symbol	& s -> pb		333811						
ANR	336489	Symbol	avctx -> frame_size		333811						
ANR	336490	Symbol	sce -> ics		333811						
ANR	336491	Symbol	s -> coder -> search_for_ms		333811						
ANR	336492	Symbol	tns_mode		333811						
ANR	336493	Symbol	& s -> psy		333811						
ANR	336494	Symbol	sce -> ics . ltp . present		333811						
ANR	336495	Symbol	isnan		333811						
ANR	336496	Symbol	s -> coder -> encode_ltp_info		333811						
ANR	336497	Symbol	* s -> coder		333811						
ANR	336498	Symbol	avctx -> frame_number		333811						
ANR	336499	Symbol	avctx		333811						
ANR	336500	Symbol	TYPE_END		333811						
ANR	336501	Symbol	AV_CODEC_FLAG_BITEXACT		333811						
ANR	336502	Symbol	ch		333811						
ANR	336503	Symbol	ics -> window_sequence		333811						
ANR	336504	Symbol	ics -> use_kb_window		333811						
ANR	336505	Symbol	s -> options . intensity_stereo		333811						
ANR	336506	Symbol	put_bits_count		333811						
ANR	336507	Symbol	i		333811						
ANR	336508	Symbol	* s -> chan_map		333811						
ANR	336509	Symbol	CLIP_AVOIDANCE_FACTOR		333811						
ANR	336510	Symbol	ics -> max_sfb		333811						
ANR	336511	Symbol	s		333811						
ANR	336512	Symbol	sce -> lcoeffs		333811						
ANR	336513	Symbol	wi [ 1 ] . window_shape		333811						
ANR	336514	Symbol	sce -> ics . prediction_used		333811						
ANR	336515	Symbol	* sce -> band_type		333811						
ANR	336516	Symbol	w		333811						
ANR	336517	Symbol	s -> psy . bands		333811						
ANR	336518	Symbol	s -> options		333811						
ANR	336519	Symbol	cpe -> ch [ ch ] . pcoeffs		333811						
ANR	336520	Symbol	ics -> tns_max_bands		333811						
ANR	336521	Symbol	ratio		333811						
ANR	336522	Symbol	s -> options . pns		333811						
ANR	336523	Symbol	ff_af_queue_add		333811						
ANR	336524	Symbol	samples2		333811						
ANR	336525	Symbol	FFMIN		333811						
ANR	336526	Symbol	s -> planar_samples		333811						
ANR	336527	Symbol	sce -> ics . predictor_present		333811						
ANR	336528	Symbol	ff_swb_offset_1024		333811						
ANR	336529	Symbol	* samples		333811						
ANR	336530	Symbol	ics		333811						
ANR	336531	Symbol	TYPE_CPE		333811						
ANR	336532	Symbol	* wi		333811						
ANR	336533	Symbol	s -> psy . model -> window		333811						
ANR	336534	Symbol	* s -> psy . num_bands		333811						
ANR	336535	Symbol	ret		333811						
ANR	336536	Symbol	coeffs		333811						
ANR	336537	Symbol	CODEC_FLAG_QSCALE		333811						
ANR	336538	Symbol	wi [ 0 ] . window_type		333811						
ANR	336539	Symbol	* coeffs		333811						
ANR	336540	Symbol	wi [ ch ] . num_windows		333811						
ANR	336541	Symbol	* s -> psy		333811						
ANR	336542	Symbol	its		333811						
ANR	336543	Symbol	s -> chan_map		333811						
ANR	336544	Symbol	apply_window		333811						
ANR	336545	Symbol	s -> coder -> mark_pns		333811						
ANR	336546	Symbol	cpe -> common_window		333811						
ANR	336547	Symbol	s -> coder -> adjust_common_ltp		333811						
ANR	336548	Symbol	overlap		333811						
ANR	336549	Symbol	wi [ ch ] . clipping		333811						
ANR	336550	Symbol	wi [ 1 ] . grouping		333811						
ANR	336551	Symbol	ics -> window_clipping		333811						
ANR	336552	Symbol	s -> lambda_sum		333811						
ANR	336553	Symbol	* s -> samplerate_index		333811						
ANR	336554	Symbol	* s -> cur_channel		333811						
ANR	336555	Symbol	s -> lambda		333811						
ANR	336556	Symbol	frame		333811						
ANR	336557	Symbol	av_clipf		333811						
ANR	336558	Symbol	wi [ 0 ] . window_shape		333811						
ANR	336559	Symbol	chans		333811						
ANR	336560	Symbol	* s -> psy . model		333811						
ANR	336561	Symbol	* ics -> use_kb_window		333811						
ANR	336562	Symbol	s -> lambda_count		333811						
ANR	336563	Symbol	* tag		333811						
ANR	336564	Symbol	s -> coder -> search_for_is		333811						
ANR	336565	Symbol	s -> coder -> update_ltp		333811						
ANR	336566	Symbol	ff_alloc_packet2		333811						
ANR	336567	Symbol	cpe -> is_mode		333811						
ANR	336568	Symbol	wi [ ch ] . window_shape		333811						
ANR	336569	Symbol	clip_avoidance_factor		333811						
ANR	336570	Symbol	ics -> group_len		333811						
ANR	336571	Symbol	wi		333811						
ANR	336572	Symbol	ics -> num_swb		333811						
ANR	336573	Symbol	* sce -> ics . window_sequence		333811						
ANR	336574	Symbol	cpe -> ch [ ch ] . coeffs		333811						
ANR	336575	Symbol	* wi [ 1 ] . window_type		333811						
ANR	336576	Symbol	sce -> tns		333811						
ANR	336577	Symbol	s -> fdsp		333811						
ANR	336578	Symbol	cpe -> ms_mask		333811						
ANR	336579	Symbol	sce -> tns . present		333811						
ANR	336580	Symbol	windows		333811						
ANR	336581	Symbol	* * ics		333811						
ANR	336582	Symbol	s -> coder -> search_for_tns		333811						
ANR	336583	Symbol	s -> coder -> adjust_common_pred		333811						
ANR	336584	Symbol	s -> coder -> ltp_insert_new_frame		333811						
ANR	336585	Symbol	wi [ ch ] . grouping		333811						
ANR	336586	Symbol	* cpe		333811						
ANR	336587	Symbol	& avpkt -> pts		333811						
ANR	336588	Symbol	& sce -> ics		333811						
ANR	336589	Symbol	s -> psy		333811						
ANR	336590	Symbol	sce -> ics . ltp . used		333811						
ANR	336591	Symbol	s -> coder -> apply_tns_filt		333811						
ANR	336592	Symbol	* ff_tns_max_bands_128		333811						
ANR	336593	Symbol	* * * cpe		333811						
ANR	336594	Symbol	ics -> clip_avoidance_factor		333811						
ANR	336595	Symbol	* chan_el_counter		333811						
ANR	336596	Symbol	start_ch		333811						
ANR	336597	Symbol	samples		333811						
ANR	336598	Symbol	ms_mode		333811						
ANR	336599	Symbol	avctx -> global_quality		333811						
ANR	336600	Symbol	avctx -> bit_rate		333811						
ANR	336601	Symbol	& avpkt -> duration		333811						
ANR	336602	Symbol	ONLY_LONG_SEQUENCE		333811						
ANR	336603	Symbol	* * wi		333811						
ANR	336604	Symbol	chan_el_counter		333811						
ANR	336605	Symbol	s -> coder -> search_for_ltp		333811						
ANR	336606	Symbol	frame_bits		333811						
ANR	336607	Symbol	target_bits		333811						
ANR	336608	Symbol	* ff_tns_max_bands_1024		333811						
ANR	336609	Symbol	* ics -> group_len		333811						
ANR	336610	Symbol	LIBAVCODEC_IDENT		333811						
ANR	336611	Symbol	s -> options . ltp		333811						
ANR	336612	Symbol	s -> options . mid_side		333811						
ANR	336613	Symbol	cpe -> ch [ ch ] . ics		333811						
ANR	336614	Symbol	s -> psy . model		333811						
ANR	336615	Symbol	ics -> swb_offset		333811						
ANR	336616	Symbol	* * s		333811						
ANR	336617	Symbol	s -> coder -> search_for_pred		333811						
ANR	336618	Symbol	sce -> ret_buf		333811						
ANR	336619	Symbol	& cpe -> ch [ 0 ] . ics		333811						
ANR	336620	Symbol	sce -> ics . window_sequence		333811						
ANR	336621	Symbol	AV_LOG_ERROR		333811						
ANR	336622	Symbol	* * sce		333811						
ANR	336623	Symbol	avctx -> sample_rate		333811						
ANR	336624	Symbol	* wi [ ch ] . clipping		333811						
ANR	336625	Symbol	* wi [ 0 ] . window_type		333811						
ANR	336626	Symbol	EINVAL		333811						
ANR	336627	Symbol	s -> psy . bitres		333811						
ANR	336628	Symbol	la		333811						
ANR	336629	Symbol	FFMAX		333811						
ANR	336630	Symbol	* sce		333811						
ANR	336631	Symbol	ff_swb_offset_128		333811						
ANR	336632	Symbol	is_mode		333811						
ANR	336633	Symbol	s -> psy . bitres . bits		333811						
ANR	336634	Symbol	* cpe -> ch		333811						
ANR	336635	Symbol	cpe -> is_mask		333811						
ANR	336636	Symbol	* wi [ ch ] . window_type		333811						
ANR	336637	Symbol	cpe -> ch -> coeffs		333811						
ANR	336638	Symbol	s -> psy . num_bands		333811						
ANR	336639	Symbol	RESERVED_BT		333811						
ANR	336640	Symbol	* s -> psy . bands		333811						
ANR	336641	Symbol	s -> cur_channel		333811						
ANR	336642	Symbol	s -> mdct1024		333811						
ANR	336643	Symbol	cpe		333811						
ANR	336644	Symbol	avctx -> flags		333811						
ANR	336645	Symbol	tag		333811						
ANR	336646	Symbol	s -> samplerate_index		333811						
ANR	336647	Symbol	* wi [ 0 ] . grouping		333811						
ANR	336648	Symbol	& s -> afq		333811						
ANR	336649	Symbol	NULL		333811						
ANR	336650	Symbol	ics -> swb_sizes		333811						
ANR	336651	Symbol	sce -> ltp_state		333811						
ANR	336652	Symbol	& sce -> tns		333811						
ANR	336653	Symbol	s -> options . pred		333811						
ANR	336654	Symbol	wi [ 0 ] . grouping		333811						
ANR	336655	Symbol	too_many_bits		333811						
ANR	336656	Symbol	cpe -> ch		333811						
ANR	336657	Symbol	cpe -> ms_mode		333811						
ANR	336658	Symbol	* avctx		333811						
ANR	336659	Symbol	wi [ 0 ] . num_windows		333811						
ANR	336660	Symbol	s -> options . tns		333811						
ANR	336661	Symbol	* ff_swb_offset_1024		333811						
ANR	336662	Symbol	avpkt -> data		333811						
ANR	336663	Symbol	wi [ ch ] . window_type		333811						
ANR	336664	Symbol	* wi [ ch ] . grouping		333811						
ANR	336665	Symbol	* ics -> num_windows		333811						
ANR	336666	Symbol	s -> cpe		333811						
ANR	336667	Symbol	* ics -> window_clipping		333811						
ANR	336668	Symbol	s -> channels		333811						
ANR	336669	Symbol	& s -> mdct1024		333811						
ANR	336670	Symbol	sqrtf		333811						
ANR	336671	Symbol	* * ch		333811						
ANR	336672	Symbol	* sce -> ics		333811						
ANR	336673	Symbol	avpkt -> size		333811						
ANR	336674	Symbol	s -> cur_type		333811						
ANR	336675	Symbol	ff_tns_max_bands_128		333811						
ANR	336676	Symbol	* avpkt		333811						
ANR	336677	Symbol	s -> last_frame_pb_count		333811						
ANR	336678	Symbol	rate_bits		333811						
ANR	336679	Symbol	cpe -> ch [ ch ] . ics . predictor_present		333811						
ANR	336680	Symbol	s -> coder -> search_for_pns		333811						
ANR	336681	Symbol	s -> psypp		333811						
ANR	336682	Symbol	avctx -> priv_data		333811						
ANR	336683	Symbol	* * cpe		333811						
ANR	336684	Symbol	TYPE_LFE		333811						
ANR	336685	Symbol	s -> coder -> apply_main_pred		333811						
ANR	336686	Symbol	* i		333811						
ANR	336687	Symbol	ff_tns_max_bands_1024		333811						
ANR	336688	Symbol	sce -> ics . ltp		333811						
ANR	336689	Symbol	got_packet_ptr		333811						
ANR	336690	Symbol	AVERROR		333811						
ANR	336691	Symbol	* ics		333811						
ANR	336692	Symbol	* s		333811						
