command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6007705	File	/home/p4ultr4n/workplace/ReVeal/raw_code/net_tap_init_0.c								
ANR	6007706	Function	net_tap_init	1:0:0:1035							
ANR	6007707	FunctionDef	"net_tap_init (VLANState * vlan , const char * model , const char * name , const char * ifname1 , const char * setup_script , const char * down_script)"		6007706	0					
ANR	6007708	CompoundStatement		7:0:201:1035	6007706	0					
ANR	6007709	IdentifierDeclStatement	TAPState * s ;	9:4:208:219	6007706	0	True				
ANR	6007710	IdentifierDecl	* s		6007706	0					
ANR	6007711	IdentifierDeclType	TAPState *		6007706	0					
ANR	6007712	Identifier	s		6007706	1					
ANR	6007713	IdentifierDeclStatement	int fd ;	11:4:226:232	6007706	1	True				
ANR	6007714	IdentifierDecl	fd		6007706	0					
ANR	6007715	IdentifierDeclType	int		6007706	0					
ANR	6007716	Identifier	fd		6007706	1					
ANR	6007717	IdentifierDeclStatement	char ifname [ 128 ] ;	13:4:239:255	6007706	2	True				
ANR	6007718	IdentifierDecl	ifname [ 128 ]		6007706	0					
ANR	6007719	IdentifierDeclType	char [ 128 ]		6007706	0					
ANR	6007720	Identifier	ifname		6007706	1					
ANR	6007721	PrimaryExpression	128		6007706	2					
ANR	6007722	IfStatement	if ( ifname1 != NULL )		6007706	3					
ANR	6007723	Condition	ifname1 != NULL	17:8:268:282	6007706	0	True				
ANR	6007724	EqualityExpression	ifname1 != NULL		6007706	0		!=			
ANR	6007725	Identifier	ifname1		6007706	0					
ANR	6007726	Identifier	NULL		6007706	1					
ANR	6007727	ExpressionStatement	"pstrcpy ( ifname , sizeof ( ifname ) , ifname1 )"	19:8:294:334	6007706	1	True				
ANR	6007728	CallExpression	"pstrcpy ( ifname , sizeof ( ifname ) , ifname1 )"		6007706	0					
ANR	6007729	Callee	pstrcpy		6007706	0					
ANR	6007730	Identifier	pstrcpy		6007706	0					
ANR	6007731	ArgumentList	ifname		6007706	1					
ANR	6007732	Argument	ifname		6007706	0					
ANR	6007733	Identifier	ifname		6007706	0					
ANR	6007734	Argument	sizeof ( ifname )		6007706	1					
ANR	6007735	SizeofExpression	sizeof ( ifname )		6007706	0					
ANR	6007736	Sizeof	sizeof		6007706	0					
ANR	6007737	SizeofOperand	ifname		6007706	1					
ANR	6007738	Argument	ifname1		6007706	2					
ANR	6007739	Identifier	ifname1		6007706	0					
ANR	6007740	ElseStatement	else		6007706	0					
ANR	6007741	ExpressionStatement	ifname [ 0 ] = '\\0'	23:8:355:371	6007706	0	True				
ANR	6007742	AssignmentExpression	ifname [ 0 ] = '\\0'		6007706	0		=			
ANR	6007743	ArrayIndexing	ifname [ 0 ]		6007706	0					
ANR	6007744	Identifier	ifname		6007706	0					
ANR	6007745	PrimaryExpression	0		6007706	1					
ANR	6007746	PrimaryExpression	'\\0'		6007706	1					
ANR	6007747	ExpressionStatement	"TFR ( fd = tap_open ( ifname , sizeof ( ifname ) ) )"	25:4:378:420	6007706	4	True				
ANR	6007748	CallExpression	"TFR ( fd = tap_open ( ifname , sizeof ( ifname ) ) )"		6007706	0					
ANR	6007749	Callee	TFR		6007706	0					
ANR	6007750	Identifier	TFR		6007706	0					
ANR	6007751	ArgumentList	"fd = tap_open ( ifname , sizeof ( ifname ) )"		6007706	1					
ANR	6007752	Argument	"fd = tap_open ( ifname , sizeof ( ifname ) )"		6007706	0					
ANR	6007753	AssignmentExpression	"fd = tap_open ( ifname , sizeof ( ifname ) )"		6007706	0		=			
ANR	6007754	Identifier	fd		6007706	0					
ANR	6007755	CallExpression	"tap_open ( ifname , sizeof ( ifname ) )"		6007706	1					
ANR	6007756	Callee	tap_open		6007706	0					
ANR	6007757	Identifier	tap_open		6007706	0					
ANR	6007758	ArgumentList	ifname		6007706	1					
ANR	6007759	Argument	ifname		6007706	0					
ANR	6007760	Identifier	ifname		6007706	0					
ANR	6007761	Argument	sizeof ( ifname )		6007706	1					
ANR	6007762	SizeofExpression	sizeof ( ifname )		6007706	0					
ANR	6007763	Sizeof	sizeof		6007706	0					
ANR	6007764	SizeofOperand	ifname		6007706	1					
ANR	6007765	IfStatement	if ( fd < 0 )		6007706	5					
ANR	6007766	Condition	fd < 0	27:8:431:436	6007706	0	True				
ANR	6007767	RelationalExpression	fd < 0		6007706	0		<			
ANR	6007768	Identifier	fd		6007706	0					
ANR	6007769	PrimaryExpression	0		6007706	1					
ANR	6007770	ReturnStatement	return - 1 ;	29:8:448:457	6007706	1	True				
ANR	6007771	UnaryOperationExpression	- 1		6007706	0					
ANR	6007772	UnaryOperator	-		6007706	0					
ANR	6007773	PrimaryExpression	1		6007706	1					
ANR	6007774	IfStatement	"if ( ! setup_script || ! strcmp ( setup_script , ""no"" ) )"		6007706	6					
ANR	6007775	Condition	"! setup_script || ! strcmp ( setup_script , ""no"" )"	33:8:470:513	6007706	0	True				
ANR	6007776	OrExpression	"! setup_script || ! strcmp ( setup_script , ""no"" )"		6007706	0		||			
ANR	6007777	UnaryOperationExpression	! setup_script		6007706	0					
ANR	6007778	UnaryOperator	!		6007706	0					
ANR	6007779	Identifier	setup_script		6007706	1					
ANR	6007780	UnaryOperationExpression	"! strcmp ( setup_script , ""no"" )"		6007706	1					
ANR	6007781	UnaryOperator	!		6007706	0					
ANR	6007782	CallExpression	"strcmp ( setup_script , ""no"" )"		6007706	1					
ANR	6007783	Callee	strcmp		6007706	0					
ANR	6007784	Identifier	strcmp		6007706	0					
ANR	6007785	ArgumentList	setup_script		6007706	1					
ANR	6007786	Argument	setup_script		6007706	0					
ANR	6007787	Identifier	setup_script		6007706	0					
ANR	6007788	Argument	"""no"""		6007706	1					
ANR	6007789	PrimaryExpression	"""no"""		6007706	0					
ANR	6007790	ExpressionStatement	"setup_script = """""	35:8:525:542	6007706	1	True				
ANR	6007791	AssignmentExpression	"setup_script = """""		6007706	0		=			
ANR	6007792	Identifier	setup_script		6007706	0					
ANR	6007793	PrimaryExpression	""""""		6007706	1					
ANR	6007794	IfStatement	if ( setup_script [ 0 ] != '\\0' )		6007706	7					
ANR	6007795	Condition	setup_script [ 0 ] != '\\0'	37:8:553:575	6007706	0	True				
ANR	6007796	EqualityExpression	setup_script [ 0 ] != '\\0'		6007706	0		!=			
ANR	6007797	ArrayIndexing	setup_script [ 0 ]		6007706	0					
ANR	6007798	Identifier	setup_script		6007706	0					
ANR	6007799	PrimaryExpression	0		6007706	1					
ANR	6007800	PrimaryExpression	'\\0'		6007706	1					
ANR	6007801	CompoundStatement		31:33:376:376	6007706	1					
ANR	6007802	IfStatement	"if ( launch_script ( setup_script , ifname , fd ) )"		6007706	0					
ANR	6007803	Condition	"launch_script ( setup_script , ifname , fd )"	39:5:586:624	6007706	0	True				
ANR	6007804	CallExpression	"launch_script ( setup_script , ifname , fd )"		6007706	0					
ANR	6007805	Callee	launch_script		6007706	0					
ANR	6007806	Identifier	launch_script		6007706	0					
ANR	6007807	ArgumentList	setup_script		6007706	1					
ANR	6007808	Argument	setup_script		6007706	0					
ANR	6007809	Identifier	setup_script		6007706	0					
ANR	6007810	Argument	ifname		6007706	1					
ANR	6007811	Identifier	ifname		6007706	0					
ANR	6007812	Argument	fd		6007706	2					
ANR	6007813	Identifier	fd		6007706	0					
ANR	6007814	ReturnStatement	return - 1 ;	41:5:633:642	6007706	1	True				
ANR	6007815	UnaryOperationExpression	- 1		6007706	0					
ANR	6007816	UnaryOperator	-		6007706	0					
ANR	6007817	PrimaryExpression	1		6007706	1					
ANR	6007818	ExpressionStatement	"s = net_tap_fd_init ( vlan , model , name , fd )"	45:4:656:698	6007706	8	True				
ANR	6007819	AssignmentExpression	"s = net_tap_fd_init ( vlan , model , name , fd )"		6007706	0		=			
ANR	6007820	Identifier	s		6007706	0					
ANR	6007821	CallExpression	"net_tap_fd_init ( vlan , model , name , fd )"		6007706	1					
ANR	6007822	Callee	net_tap_fd_init		6007706	0					
ANR	6007823	Identifier	net_tap_fd_init		6007706	0					
ANR	6007824	ArgumentList	vlan		6007706	1					
ANR	6007825	Argument	vlan		6007706	0					
ANR	6007826	Identifier	vlan		6007706	0					
ANR	6007827	Argument	model		6007706	1					
ANR	6007828	Identifier	model		6007706	0					
ANR	6007829	Argument	name		6007706	2					
ANR	6007830	Identifier	name		6007706	0					
ANR	6007831	Argument	fd		6007706	3					
ANR	6007832	Identifier	fd		6007706	0					
ANR	6007833	IfStatement	if ( ! s )		6007706	9					
ANR	6007834	Condition	! s	47:8:709:710	6007706	0	True				
ANR	6007835	UnaryOperationExpression	! s		6007706	0					
ANR	6007836	UnaryOperator	!		6007706	0					
ANR	6007837	Identifier	s		6007706	1					
ANR	6007838	ReturnStatement	return - 1 ;	49:8:722:731	6007706	1	True				
ANR	6007839	UnaryOperationExpression	- 1		6007706	0					
ANR	6007840	UnaryOperator	-		6007706	0					
ANR	6007841	PrimaryExpression	1		6007706	1					
ANR	6007842	ExpressionStatement	"snprintf ( s -> vc -> info_str , sizeof ( s -> vc -> info_str ) , ""ifname=%s,script=%s,downscript=%s"" , ifname , setup_script , down_script )"	51:4:738:888	6007706	10	True				
ANR	6007843	CallExpression	"snprintf ( s -> vc -> info_str , sizeof ( s -> vc -> info_str ) , ""ifname=%s,script=%s,downscript=%s"" , ifname , setup_script , down_script )"		6007706	0					
ANR	6007844	Callee	snprintf		6007706	0					
ANR	6007845	Identifier	snprintf		6007706	0					
ANR	6007846	ArgumentList	s -> vc -> info_str		6007706	1					
ANR	6007847	Argument	s -> vc -> info_str		6007706	0					
ANR	6007848	PtrMemberAccess	s -> vc -> info_str		6007706	0					
ANR	6007849	PtrMemberAccess	s -> vc		6007706	0					
ANR	6007850	Identifier	s		6007706	0					
ANR	6007851	Identifier	vc		6007706	1					
ANR	6007852	Identifier	info_str		6007706	1					
ANR	6007853	Argument	sizeof ( s -> vc -> info_str )		6007706	1					
ANR	6007854	SizeofExpression	sizeof ( s -> vc -> info_str )		6007706	0					
ANR	6007855	Sizeof	sizeof		6007706	0					
ANR	6007856	PtrMemberAccess	s -> vc -> info_str		6007706	1					
ANR	6007857	PtrMemberAccess	s -> vc		6007706	0					
ANR	6007858	Identifier	s		6007706	0					
ANR	6007859	Identifier	vc		6007706	1					
ANR	6007860	Identifier	info_str		6007706	1					
ANR	6007861	Argument	"""ifname=%s,script=%s,downscript=%s"""		6007706	2					
ANR	6007862	PrimaryExpression	"""ifname=%s,script=%s,downscript=%s"""		6007706	0					
ANR	6007863	Argument	ifname		6007706	3					
ANR	6007864	Identifier	ifname		6007706	0					
ANR	6007865	Argument	setup_script		6007706	4					
ANR	6007866	Identifier	setup_script		6007706	0					
ANR	6007867	Argument	down_script		6007706	5					
ANR	6007868	Identifier	down_script		6007706	0					
ANR	6007869	IfStatement	"if ( down_script && strcmp ( down_script , ""no"" ) )"		6007706	11					
ANR	6007870	Condition	"down_script && strcmp ( down_script , ""no"" )"	57:8:899:938	6007706	0	True				
ANR	6007871	AndExpression	"down_script && strcmp ( down_script , ""no"" )"		6007706	0		&&			
ANR	6007872	Identifier	down_script		6007706	0					
ANR	6007873	CallExpression	"strcmp ( down_script , ""no"" )"		6007706	1					
ANR	6007874	Callee	strcmp		6007706	0					
ANR	6007875	Identifier	strcmp		6007706	0					
ANR	6007876	ArgumentList	down_script		6007706	1					
ANR	6007877	Argument	down_script		6007706	0					
ANR	6007878	Identifier	down_script		6007706	0					
ANR	6007879	Argument	"""no"""		6007706	1					
ANR	6007880	PrimaryExpression	"""no"""		6007706	0					
ANR	6007881	ExpressionStatement	"snprintf ( s -> down_script , sizeof ( s -> down_script ) , ""%s"" , down_script )"	59:8:950:1017	6007706	1	True				
ANR	6007882	CallExpression	"snprintf ( s -> down_script , sizeof ( s -> down_script ) , ""%s"" , down_script )"		6007706	0					
ANR	6007883	Callee	snprintf		6007706	0					
ANR	6007884	Identifier	snprintf		6007706	0					
ANR	6007885	ArgumentList	s -> down_script		6007706	1					
ANR	6007886	Argument	s -> down_script		6007706	0					
ANR	6007887	PtrMemberAccess	s -> down_script		6007706	0					
ANR	6007888	Identifier	s		6007706	0					
ANR	6007889	Identifier	down_script		6007706	1					
ANR	6007890	Argument	sizeof ( s -> down_script )		6007706	1					
ANR	6007891	SizeofExpression	sizeof ( s -> down_script )		6007706	0					
ANR	6007892	Sizeof	sizeof		6007706	0					
ANR	6007893	PtrMemberAccess	s -> down_script		6007706	1					
ANR	6007894	Identifier	s		6007706	0					
ANR	6007895	Identifier	down_script		6007706	1					
ANR	6007896	Argument	"""%s"""		6007706	2					
ANR	6007897	PrimaryExpression	"""%s"""		6007706	0					
ANR	6007898	Argument	down_script		6007706	3					
ANR	6007899	Identifier	down_script		6007706	0					
ANR	6007900	ReturnStatement	return 0 ;	61:4:1024:1032	6007706	12	True				
ANR	6007901	PrimaryExpression	0		6007706	0					
ANR	6007902	ReturnType	static int		6007706	1					
ANR	6007903	Identifier	net_tap_init		6007706	2					
ANR	6007904	ParameterList	"VLANState * vlan , const char * model , const char * name , const char * ifname1 , const char * setup_script , const char * down_script"		6007706	3					
ANR	6007905	Parameter	VLANState * vlan	1:24:24:38	6007706	0	True				
ANR	6007906	ParameterType	VLANState *		6007706	0					
ANR	6007907	Identifier	vlan		6007706	1					
ANR	6007908	Parameter	const char * model	1:41:41:57	6007706	1	True				
ANR	6007909	ParameterType	const char *		6007706	0					
ANR	6007910	Identifier	model		6007706	1					
ANR	6007911	Parameter	const char * name	3:24:85:100	6007706	2	True				
ANR	6007912	ParameterType	const char *		6007706	0					
ANR	6007913	Identifier	name		6007706	1					
ANR	6007914	Parameter	const char * ifname1	3:42:103:121	6007706	3	True				
ANR	6007915	ParameterType	const char *		6007706	0					
ANR	6007916	Identifier	ifname1		6007706	1					
ANR	6007917	Parameter	const char * setup_script	5:24:149:172	6007706	4	True				
ANR	6007918	ParameterType	const char *		6007706	0					
ANR	6007919	Identifier	setup_script		6007706	1					
ANR	6007920	Parameter	const char * down_script	5:50:175:197	6007706	5	True				
ANR	6007921	ParameterType	const char *		6007706	0					
ANR	6007922	Identifier	down_script		6007706	1					
ANR	6007923	CFGEntryNode	ENTRY		6007706		True				
ANR	6007924	CFGExitNode	EXIT		6007706		True				
ANR	6007925	Symbol	strcmp		6007706						
ANR	6007926	Symbol	setup_script		6007706						
ANR	6007927	Symbol	NULL		6007706						
ANR	6007928	Symbol	launch_script		6007706						
ANR	6007929	Symbol	net_tap_fd_init		6007706						
ANR	6007930	Symbol	* s -> vc		6007706						
ANR	6007931	Symbol	* ifname		6007706						
ANR	6007932	Symbol	* setup_script		6007706						
ANR	6007933	Symbol	ifname1		6007706						
ANR	6007934	Symbol	s -> vc		6007706						
ANR	6007935	Symbol	s		6007706						
ANR	6007936	Symbol	s -> down_script		6007706						
ANR	6007937	Symbol	vlan		6007706						
ANR	6007938	Symbol	tap_open		6007706						
ANR	6007939	Symbol	ifname		6007706						
ANR	6007940	Symbol	s -> vc -> info_str		6007706						
ANR	6007941	Symbol	name		6007706						
ANR	6007942	Symbol	* * s		6007706						
ANR	6007943	Symbol	model		6007706						
ANR	6007944	Symbol	down_script		6007706						
ANR	6007945	Symbol	* s		6007706						
ANR	6007946	Symbol	fd		6007706						
