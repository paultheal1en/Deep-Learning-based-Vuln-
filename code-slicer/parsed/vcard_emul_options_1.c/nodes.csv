command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8917668	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vcard_emul_options_1.c								
ANR	8917669	Function	vcard_emul_options	1:0:0:4087							
ANR	8917670	FunctionDef	vcard_emul_options (const char * args)		8917669	0					
ANR	8917671	CompoundStatement		3:0:38:4087	8917669	0					
ANR	8917672	IdentifierDeclStatement	int reader_count = 0 ;	5:4:45:65	8917669	0	True				
ANR	8917673	IdentifierDecl	reader_count = 0		8917669	0					
ANR	8917674	IdentifierDeclType	int		8917669	0					
ANR	8917675	Identifier	reader_count		8917669	1					
ANR	8917676	AssignmentExpression	reader_count = 0		8917669	2		=			
ANR	8917677	Identifier	reader_count		8917669	0					
ANR	8917678	PrimaryExpression	0		8917669	1					
ANR	8917679	IdentifierDeclStatement	VCardEmulOptions * opts ;	7:4:72:94	8917669	1	True				
ANR	8917680	IdentifierDecl	* opts		8917669	0					
ANR	8917681	IdentifierDeclType	VCardEmulOptions *		8917669	0					
ANR	8917682	Identifier	opts		8917669	1					
ANR	8917683	ExpressionStatement	"memcpy ( & options , & default_options , sizeof ( options ) )"	13:4:182:233	8917669	2	True				
ANR	8917684	CallExpression	"memcpy ( & options , & default_options , sizeof ( options ) )"		8917669	0					
ANR	8917685	Callee	memcpy		8917669	0					
ANR	8917686	Identifier	memcpy		8917669	0					
ANR	8917687	ArgumentList	& options		8917669	1					
ANR	8917688	Argument	& options		8917669	0					
ANR	8917689	UnaryOperationExpression	& options		8917669	0					
ANR	8917690	UnaryOperator	&		8917669	0					
ANR	8917691	Identifier	options		8917669	1					
ANR	8917692	Argument	& default_options		8917669	1					
ANR	8917693	UnaryOperationExpression	& default_options		8917669	0					
ANR	8917694	UnaryOperator	&		8917669	0					
ANR	8917695	Identifier	default_options		8917669	1					
ANR	8917696	Argument	sizeof ( options )		8917669	2					
ANR	8917697	SizeofExpression	sizeof ( options )		8917669	0					
ANR	8917698	Sizeof	sizeof		8917669	0					
ANR	8917699	SizeofOperand	options		8917669	1					
ANR	8917700	ExpressionStatement	opts = & options	15:4:240:255	8917669	3	True				
ANR	8917701	AssignmentExpression	opts = & options		8917669	0		=			
ANR	8917702	Identifier	opts		8917669	0					
ANR	8917703	UnaryOperationExpression	& options		8917669	1					
ANR	8917704	UnaryOperator	&		8917669	0					
ANR	8917705	Identifier	options		8917669	1					
ANR	8917706	DoStatement	do		8917669	4					
ANR	8917707	CompoundStatement		17:7:228:228	8917669	0					
ANR	8917708	ExpressionStatement	args = strip ( args )	21:8:278:296	8917669	0	True				
ANR	8917709	AssignmentExpression	args = strip ( args )		8917669	0		=			
ANR	8917710	Identifier	args		8917669	0					
ANR	8917711	CallExpression	strip ( args )		8917669	1					
ANR	8917712	Callee	strip		8917669	0					
ANR	8917713	Identifier	strip		8917669	0					
ANR	8917714	ArgumentList	args		8917669	1					
ANR	8917715	Argument	args		8917669	0					
ANR	8917716	Identifier	args		8917669	0					
ANR	8917717	IfStatement	"if ( * args == ',' )"		8917669	1					
ANR	8917718	Condition	"* args == ','"	23:12:346:357	8917669	0	True				
ANR	8917719	EqualityExpression	"* args == ','"		8917669	0		==			
ANR	8917720	UnaryOperationExpression	* args		8917669	0					
ANR	8917721	UnaryOperator	*		8917669	0					
ANR	8917722	Identifier	args		8917669	1					
ANR	8917723	PrimaryExpression	"','"		8917669	1					
ANR	8917724	CompoundStatement		21:26:321:321	8917669	1					
ANR	8917725	ContinueStatement	continue ;	25:12:375:383	8917669	0	True				
ANR	8917726	IfStatement	"if ( strncmp ( args , ""soft="" , 5 ) == 0 )"		8917669	2					
ANR	8917727	Condition	"strncmp ( args , ""soft="" , 5 ) == 0"	33:12:524:553	8917669	0	True				
ANR	8917728	EqualityExpression	"strncmp ( args , ""soft="" , 5 ) == 0"		8917669	0		==			
ANR	8917729	CallExpression	"strncmp ( args , ""soft="" , 5 )"		8917669	0					
ANR	8917730	Callee	strncmp		8917669	0					
ANR	8917731	Identifier	strncmp		8917669	0					
ANR	8917732	ArgumentList	args		8917669	1					
ANR	8917733	Argument	args		8917669	0					
ANR	8917734	Identifier	args		8917669	0					
ANR	8917735	Argument	"""soft="""		8917669	1					
ANR	8917736	PrimaryExpression	"""soft="""		8917669	0					
ANR	8917737	Argument	5		8917669	2					
ANR	8917738	PrimaryExpression	5		8917669	0					
ANR	8917739	PrimaryExpression	0		8917669	1					
ANR	8917740	CompoundStatement		51:12:833:872	8917669	1					
ANR	8917741	IdentifierDeclStatement	const char * name ;	35:12:571:587	8917669	0	True				
ANR	8917742	IdentifierDecl	* name		8917669	0					
ANR	8917743	IdentifierDeclType	const char *		8917669	0					
ANR	8917744	Identifier	name		8917669	1					
ANR	8917745	IdentifierDeclStatement	size_t name_length ;	37:12:602:620	8917669	1	True				
ANR	8917746	IdentifierDecl	name_length		8917669	0					
ANR	8917747	IdentifierDeclType	size_t		8917669	0					
ANR	8917748	Identifier	name_length		8917669	1					
ANR	8917749	IdentifierDeclStatement	const char * vname ;	39:12:635:652	8917669	2	True				
ANR	8917750	IdentifierDecl	* vname		8917669	0					
ANR	8917751	IdentifierDeclType	const char *		8917669	0					
ANR	8917752	Identifier	vname		8917669	1					
ANR	8917753	IdentifierDeclStatement	size_t vname_length ;	41:12:667:686	8917669	3	True				
ANR	8917754	IdentifierDecl	vname_length		8917669	0					
ANR	8917755	IdentifierDeclType	size_t		8917669	0					
ANR	8917756	Identifier	vname_length		8917669	1					
ANR	8917757	IdentifierDeclStatement	const char * type_params ;	43:12:701:724	8917669	4	True				
ANR	8917758	IdentifierDecl	* type_params		8917669	0					
ANR	8917759	IdentifierDeclType	const char *		8917669	0					
ANR	8917760	Identifier	type_params		8917669	1					
ANR	8917761	IdentifierDeclStatement	size_t type_params_length ;	45:12:739:764	8917669	5	True				
ANR	8917762	IdentifierDecl	type_params_length		8917669	0					
ANR	8917763	IdentifierDeclType	size_t		8917669	0					
ANR	8917764	Identifier	type_params_length		8917669	1					
ANR	8917765	IdentifierDeclStatement	char type_str [ 100 ] ;	47:12:779:797	8917669	6	True				
ANR	8917766	IdentifierDecl	type_str [ 100 ]		8917669	0					
ANR	8917767	IdentifierDeclType	char [ 100 ]		8917669	0					
ANR	8917768	Identifier	type_str		8917669	1					
ANR	8917769	PrimaryExpression	100		8917669	2					
ANR	8917770	IdentifierDeclStatement	VCardEmulType type ;	49:12:812:830	8917669	7	True				
ANR	8917771	IdentifierDecl	type		8917669	0					
ANR	8917772	IdentifierDeclType	VCardEmulType		8917669	0					
ANR	8917773	Identifier	type		8917669	1					
ANR	8917774	IdentifierDeclStatement	"int count , i ;"	51:12:845:857	8917669	8	True				
ANR	8917775	IdentifierDecl	count		8917669	0					
ANR	8917776	IdentifierDeclType	int		8917669	0					
ANR	8917777	Identifier	count		8917669	1					
ANR	8917778	IdentifierDecl	i		8917669	1					
ANR	8917779	IdentifierDeclType	int		8917669	0					
ANR	8917780	Identifier	i		8917669	1					
ANR	8917781	IdentifierDeclStatement	VirtualReaderOptions * vreaderOpt = NULL ;	53:12:872:911	8917669	9	True				
ANR	8917782	IdentifierDecl	* vreaderOpt = NULL		8917669	0					
ANR	8917783	IdentifierDeclType	VirtualReaderOptions *		8917669	0					
ANR	8917784	Identifier	vreaderOpt		8917669	1					
ANR	8917785	AssignmentExpression	* vreaderOpt = NULL		8917669	2		=			
ANR	8917786	Identifier	NULL		8917669	0					
ANR	8917787	Identifier	NULL		8917669	1					
ANR	8917788	ExpressionStatement	args = strip ( args + 5 )	57:12:928:950	8917669	10	True				
ANR	8917789	AssignmentExpression	args = strip ( args + 5 )		8917669	0		=			
ANR	8917790	Identifier	args		8917669	0					
ANR	8917791	CallExpression	strip ( args + 5 )		8917669	1					
ANR	8917792	Callee	strip		8917669	0					
ANR	8917793	Identifier	strip		8917669	0					
ANR	8917794	ArgumentList	args + 5		8917669	1					
ANR	8917795	Argument	args + 5		8917669	0					
ANR	8917796	AdditiveExpression	args + 5		8917669	0		+			
ANR	8917797	Identifier	args		8917669	0					
ANR	8917798	PrimaryExpression	5		8917669	1					
ANR	8917799	IfStatement	if ( * args != '(' )		8917669	11					
ANR	8917800	Condition	* args != '('	59:16:969:980	8917669	0	True				
ANR	8917801	EqualityExpression	* args != '('		8917669	0		!=			
ANR	8917802	UnaryOperationExpression	* args		8917669	0					
ANR	8917803	UnaryOperator	*		8917669	0					
ANR	8917804	Identifier	args		8917669	1					
ANR	8917805	PrimaryExpression	'('		8917669	1					
ANR	8917806	CompoundStatement		57:30:944:944	8917669	1					
ANR	8917807	ContinueStatement	continue ;	61:16:1002:1010	8917669	0	True				
ANR	8917808	ExpressionStatement	args = strip ( args + 1 )	65:12:1040:1060	8917669	12	True				
ANR	8917809	AssignmentExpression	args = strip ( args + 1 )		8917669	0		=			
ANR	8917810	Identifier	args		8917669	0					
ANR	8917811	CallExpression	strip ( args + 1 )		8917669	1					
ANR	8917812	Callee	strip		8917669	0					
ANR	8917813	Identifier	strip		8917669	0					
ANR	8917814	ArgumentList	args + 1		8917669	1					
ANR	8917815	Argument	args + 1		8917669	0					
ANR	8917816	AdditiveExpression	args + 1		8917669	0		+			
ANR	8917817	Identifier	args		8917669	0					
ANR	8917818	PrimaryExpression	1		8917669	1					
ANR	8917819	Statement	NEXT_TOKEN	69:12:1077:1086	8917669	13	True				
ANR	8917820	Statement	(	69:22:1087:1087	8917669	14	True				
ANR	8917821	Statement	name	69:23:1088:1091	8917669	15	True				
ANR	8917822	Statement	)	69:27:1092:1092	8917669	16	True				
ANR	8917823	Statement	NEXT_TOKEN	71:12:1107:1116	8917669	17	True				
ANR	8917824	Statement	(	71:22:1117:1117	8917669	18	True				
ANR	8917825	Statement	vname	71:23:1118:1122	8917669	19	True				
ANR	8917826	Statement	)	71:28:1123:1123	8917669	20	True				
ANR	8917827	Statement	NEXT_TOKEN	73:12:1138:1147	8917669	21	True				
ANR	8917828	ExpressionStatement	"( type_params ) type_params_length = MIN ( type_params_length , sizeof ( type_str ) - 1 )"	73:22:1148:1239	8917669	22	True				
ANR	8917829	AssignmentExpression	"( type_params ) type_params_length = MIN ( type_params_length , sizeof ( type_str ) - 1 )"		8917669	0		=			
ANR	8917830	CastExpression	( type_params ) type_params_length		8917669	0					
ANR	8917831	CastTarget	type_params		8917669	0					
ANR	8917832	Identifier	type_params_length		8917669	1					
ANR	8917833	CallExpression	"MIN ( type_params_length , sizeof ( type_str ) - 1 )"		8917669	1					
ANR	8917834	Callee	MIN		8917669	0					
ANR	8917835	Identifier	MIN		8917669	0					
ANR	8917836	ArgumentList	type_params_length		8917669	1					
ANR	8917837	Argument	type_params_length		8917669	0					
ANR	8917838	Identifier	type_params_length		8917669	0					
ANR	8917839	Argument	sizeof ( type_str ) - 1		8917669	1					
ANR	8917840	AdditiveExpression	sizeof ( type_str ) - 1		8917669	0		-			
ANR	8917841	SizeofExpression	sizeof ( type_str )		8917669	0					
ANR	8917842	Sizeof	sizeof		8917669	0					
ANR	8917843	SizeofOperand	type_str		8917669	1					
ANR	8917844	PrimaryExpression	1		8917669	1					
ANR	8917845	ExpressionStatement	"memcpy ( type_str , type_params , type_params_length )"	77:12:1254:1303	8917669	23	True				
ANR	8917846	CallExpression	"memcpy ( type_str , type_params , type_params_length )"		8917669	0					
ANR	8917847	Callee	memcpy		8917669	0					
ANR	8917848	Identifier	memcpy		8917669	0					
ANR	8917849	ArgumentList	type_str		8917669	1					
ANR	8917850	Argument	type_str		8917669	0					
ANR	8917851	Identifier	type_str		8917669	0					
ANR	8917852	Argument	type_params		8917669	1					
ANR	8917853	Identifier	type_params		8917669	0					
ANR	8917854	Argument	type_params_length		8917669	2					
ANR	8917855	Identifier	type_params_length		8917669	0					
ANR	8917856	ExpressionStatement	type_str [ type_params_length ] = '\\0'	79:12:1318:1353	8917669	24	True				
ANR	8917857	AssignmentExpression	type_str [ type_params_length ] = '\\0'		8917669	0		=			
ANR	8917858	ArrayIndexing	type_str [ type_params_length ]		8917669	0					
ANR	8917859	Identifier	type_str		8917669	0					
ANR	8917860	Identifier	type_params_length		8917669	1					
ANR	8917861	PrimaryExpression	'\\0'		8917669	1					
ANR	8917862	ExpressionStatement	type = vcard_emul_type_from_string ( type_str )	81:12:1368:1412	8917669	25	True				
ANR	8917863	AssignmentExpression	type = vcard_emul_type_from_string ( type_str )		8917669	0		=			
ANR	8917864	Identifier	type		8917669	0					
ANR	8917865	CallExpression	vcard_emul_type_from_string ( type_str )		8917669	1					
ANR	8917866	Callee	vcard_emul_type_from_string		8917669	0					
ANR	8917867	Identifier	vcard_emul_type_from_string		8917669	0					
ANR	8917868	ArgumentList	type_str		8917669	1					
ANR	8917869	Argument	type_str		8917669	0					
ANR	8917870	Identifier	type_str		8917669	0					
ANR	8917871	Statement	NEXT_TOKEN	85:12:1429:1438	8917669	26	True				
ANR	8917872	Statement	(	85:22:1439:1439	8917669	27	True				
ANR	8917873	Statement	type_params	85:23:1440:1450	8917669	28	True				
ANR	8917874	Statement	)	85:34:1451:1451	8917669	29	True				
ANR	8917875	IfStatement	if ( * args == 0 )		8917669	30					
ANR	8917876	Condition	* args == 0	89:16:1472:1481	8917669	0	True				
ANR	8917877	EqualityExpression	* args == 0		8917669	0		==			
ANR	8917878	UnaryOperationExpression	* args		8917669	0					
ANR	8917879	UnaryOperator	*		8917669	0					
ANR	8917880	Identifier	args		8917669	1					
ANR	8917881	PrimaryExpression	0		8917669	1					
ANR	8917882	CompoundStatement		87:28:1445:1445	8917669	1					
ANR	8917883	BreakStatement	break ;	91:16:1503:1508	8917669	0	True				
ANR	8917884	IfStatement	if ( opts -> vreader_count >= reader_count )		8917669	31					
ANR	8917885	Condition	opts -> vreader_count >= reader_count	97:16:1544:1578	8917669	0	True				
ANR	8917886	RelationalExpression	opts -> vreader_count >= reader_count		8917669	0		>=			
ANR	8917887	PtrMemberAccess	opts -> vreader_count		8917669	0					
ANR	8917888	Identifier	opts		8917669	0					
ANR	8917889	Identifier	vreader_count		8917669	1					
ANR	8917890	Identifier	reader_count		8917669	1					
ANR	8917891	CompoundStatement		95:53:1542:1542	8917669	1					
ANR	8917892	ExpressionStatement	reader_count += READER_STEP	99:16:1600:1627	8917669	0	True				
ANR	8917893	AssignmentExpression	reader_count += READER_STEP		8917669	0		+=			
ANR	8917894	Identifier	reader_count		8917669	0					
ANR	8917895	Identifier	READER_STEP		8917669	1					
ANR	8917896	ExpressionStatement	"vreaderOpt = g_renew ( VirtualReaderOptions , opts -> vreader , reader_count )"	101:16:1646:1755	8917669	1	True				
ANR	8917897	AssignmentExpression	"vreaderOpt = g_renew ( VirtualReaderOptions , opts -> vreader , reader_count )"		8917669	0		=			
ANR	8917898	Identifier	vreaderOpt		8917669	0					
ANR	8917899	CallExpression	"g_renew ( VirtualReaderOptions , opts -> vreader , reader_count )"		8917669	1					
ANR	8917900	Callee	g_renew		8917669	0					
ANR	8917901	Identifier	g_renew		8917669	0					
ANR	8917902	ArgumentList	VirtualReaderOptions		8917669	1					
ANR	8917903	Argument	VirtualReaderOptions		8917669	0					
ANR	8917904	Identifier	VirtualReaderOptions		8917669	0					
ANR	8917905	Argument	opts -> vreader		8917669	1					
ANR	8917906	PtrMemberAccess	opts -> vreader		8917669	0					
ANR	8917907	Identifier	opts		8917669	0					
ANR	8917908	Identifier	vreader		8917669	1					
ANR	8917909	Argument	reader_count		8917669	2					
ANR	8917910	Identifier	reader_count		8917669	0					
ANR	8917911	ExpressionStatement	opts -> vreader = vreaderOpt	107:12:1785:1811	8917669	32	True				
ANR	8917912	AssignmentExpression	opts -> vreader = vreaderOpt		8917669	0		=			
ANR	8917913	PtrMemberAccess	opts -> vreader		8917669	0					
ANR	8917914	Identifier	opts		8917669	0					
ANR	8917915	Identifier	vreader		8917669	1					
ANR	8917916	Identifier	vreaderOpt		8917669	1					
ANR	8917917	ExpressionStatement	vreaderOpt = & vreaderOpt [ opts -> vreader_count ]	109:12:1826:1871	8917669	33	True				
ANR	8917918	AssignmentExpression	vreaderOpt = & vreaderOpt [ opts -> vreader_count ]		8917669	0		=			
ANR	8917919	Identifier	vreaderOpt		8917669	0					
ANR	8917920	UnaryOperationExpression	& vreaderOpt [ opts -> vreader_count ]		8917669	1					
ANR	8917921	UnaryOperator	&		8917669	0					
ANR	8917922	ArrayIndexing	vreaderOpt [ opts -> vreader_count ]		8917669	1					
ANR	8917923	Identifier	vreaderOpt		8917669	0					
ANR	8917924	PtrMemberAccess	opts -> vreader_count		8917669	1					
ANR	8917925	Identifier	opts		8917669	0					
ANR	8917926	Identifier	vreader_count		8917669	1					
ANR	8917927	ExpressionStatement	"vreaderOpt -> name = g_strndup ( name , name_length )"	111:12:1886:1933	8917669	34	True				
ANR	8917928	AssignmentExpression	"vreaderOpt -> name = g_strndup ( name , name_length )"		8917669	0		=			
ANR	8917929	PtrMemberAccess	vreaderOpt -> name		8917669	0					
ANR	8917930	Identifier	vreaderOpt		8917669	0					
ANR	8917931	Identifier	name		8917669	1					
ANR	8917932	CallExpression	"g_strndup ( name , name_length )"		8917669	1					
ANR	8917933	Callee	g_strndup		8917669	0					
ANR	8917934	Identifier	g_strndup		8917669	0					
ANR	8917935	ArgumentList	name		8917669	1					
ANR	8917936	Argument	name		8917669	0					
ANR	8917937	Identifier	name		8917669	0					
ANR	8917938	Argument	name_length		8917669	1					
ANR	8917939	Identifier	name_length		8917669	0					
ANR	8917940	ExpressionStatement	"vreaderOpt -> vname = g_strndup ( vname , vname_length )"	113:12:1948:1998	8917669	35	True				
ANR	8917941	AssignmentExpression	"vreaderOpt -> vname = g_strndup ( vname , vname_length )"		8917669	0		=			
ANR	8917942	PtrMemberAccess	vreaderOpt -> vname		8917669	0					
ANR	8917943	Identifier	vreaderOpt		8917669	0					
ANR	8917944	Identifier	vname		8917669	1					
ANR	8917945	CallExpression	"g_strndup ( vname , vname_length )"		8917669	1					
ANR	8917946	Callee	g_strndup		8917669	0					
ANR	8917947	Identifier	g_strndup		8917669	0					
ANR	8917948	ArgumentList	vname		8917669	1					
ANR	8917949	Argument	vname		8917669	0					
ANR	8917950	Identifier	vname		8917669	0					
ANR	8917951	Argument	vname_length		8917669	1					
ANR	8917952	Identifier	vname_length		8917669	0					
ANR	8917953	ExpressionStatement	vreaderOpt -> card_type = type	115:12:2013:2041	8917669	36	True				
ANR	8917954	AssignmentExpression	vreaderOpt -> card_type = type		8917669	0		=			
ANR	8917955	PtrMemberAccess	vreaderOpt -> card_type		8917669	0					
ANR	8917956	Identifier	vreaderOpt		8917669	0					
ANR	8917957	Identifier	card_type		8917669	1					
ANR	8917958	Identifier	type		8917669	1					
ANR	8917959	ExpressionStatement	"vreaderOpt -> type_params = g_strndup ( type_params , type_params_length )"	117:12:2056:2141	8917669	37	True				
ANR	8917960	AssignmentExpression	"vreaderOpt -> type_params = g_strndup ( type_params , type_params_length )"		8917669	0		=			
ANR	8917961	PtrMemberAccess	vreaderOpt -> type_params		8917669	0					
ANR	8917962	Identifier	vreaderOpt		8917669	0					
ANR	8917963	Identifier	type_params		8917669	1					
ANR	8917964	CallExpression	"g_strndup ( type_params , type_params_length )"		8917669	1					
ANR	8917965	Callee	g_strndup		8917669	0					
ANR	8917966	Identifier	g_strndup		8917669	0					
ANR	8917967	ArgumentList	type_params		8917669	1					
ANR	8917968	Argument	type_params		8917669	0					
ANR	8917969	Identifier	type_params		8917669	0					
ANR	8917970	Argument	type_params_length		8917669	1					
ANR	8917971	Identifier	type_params_length		8917669	0					
ANR	8917972	ExpressionStatement	"count = count_tokens ( args , ',' , ')' ) + 1"	121:12:2156:2196	8917669	38	True				
ANR	8917973	AssignmentExpression	"count = count_tokens ( args , ',' , ')' ) + 1"		8917669	0		=			
ANR	8917974	Identifier	count		8917669	0					
ANR	8917975	AdditiveExpression	"count_tokens ( args , ',' , ')' ) + 1"		8917669	1		+			
ANR	8917976	CallExpression	"count_tokens ( args , ',' , ')' )"		8917669	0					
ANR	8917977	Callee	count_tokens		8917669	0					
ANR	8917978	Identifier	count_tokens		8917669	0					
ANR	8917979	ArgumentList	args		8917669	1					
ANR	8917980	Argument	args		8917669	0					
ANR	8917981	Identifier	args		8917669	0					
ANR	8917982	Argument	"','"		8917669	1					
ANR	8917983	PrimaryExpression	"','"		8917669	0					
ANR	8917984	Argument	')'		8917669	2					
ANR	8917985	PrimaryExpression	')'		8917669	0					
ANR	8917986	PrimaryExpression	1		8917669	1					
ANR	8917987	ExpressionStatement	vreaderOpt -> cert_count = count	123:12:2211:2241	8917669	39	True				
ANR	8917988	AssignmentExpression	vreaderOpt -> cert_count = count		8917669	0		=			
ANR	8917989	PtrMemberAccess	vreaderOpt -> cert_count		8917669	0					
ANR	8917990	Identifier	vreaderOpt		8917669	0					
ANR	8917991	Identifier	cert_count		8917669	1					
ANR	8917992	Identifier	count		8917669	1					
ANR	8917993	Statement	vreaderOpt	125:12:2256:2265	8917669	40	True				
ANR	8917994	Statement	->	125:22:2266:2267	8917669	41	True				
ANR	8917995	Statement	cert_name	125:24:2268:2276	8917669	42	True				
ANR	8917996	Statement	=	125:34:2278:2278	8917669	43	True				
ANR	8917997	Statement	g_new	125:36:2280:2284	8917669	44	True				
ANR	8917998	Statement	(	125:41:2285:2285	8917669	45	True				
ANR	8917999	Statement	char	125:42:2286:2289	8917669	46	True				
ANR	8918000	Statement	*	125:47:2291:2291	8917669	47	True				
ANR	8918001	Statement	","	125:48:2292:2292	8917669	48	True				
ANR	8918002	Statement	count	125:50:2294:2298	8917669	49	True				
ANR	8918003	Statement	)	125:55:2299:2299	8917669	50	True				
ANR	8918004	ExpressionStatement		125:56:2300:2300	8917669	51	True				
ANR	8918005	ForStatement	for ( i = 0 ; i < count ; i ++ )		8917669	52					
ANR	8918006	ForInit	i = 0 ;	127:17:2320:2325	8917669	0	True				
ANR	8918007	AssignmentExpression	i = 0		8917669	0		=			
ANR	8918008	Identifier	i		8917669	0					
ANR	8918009	PrimaryExpression	0		8917669	1					
ANR	8918010	Condition	i < count	127:24:2327:2335	8917669	1	True				
ANR	8918011	RelationalExpression	i < count		8917669	0		<			
ANR	8918012	Identifier	i		8917669	0					
ANR	8918013	Identifier	count		8917669	1					
ANR	8918014	PostIncDecOperationExpression	i ++	127:35:2338:2340	8917669	2	True				
ANR	8918015	Identifier	i		8917669	0					
ANR	8918016	IncDec	++		8917669	1					
ANR	8918017	CompoundStatement		127:16:2323:2346	8917669	3					
ANR	8918018	IdentifierDeclStatement	const char * cert = args ;	129:16:2362:2385	8917669	0	True				
ANR	8918019	IdentifierDecl	* cert = args		8917669	0					
ANR	8918020	IdentifierDeclType	const char *		8917669	0					
ANR	8918021	Identifier	cert		8917669	1					
ANR	8918022	AssignmentExpression	* cert = args		8917669	2		=			
ANR	8918023	Identifier	args		8917669	0					
ANR	8918024	Identifier	args		8917669	1					
ANR	8918025	ExpressionStatement	"args = strpbrk ( args , "",)"" )"	131:16:2404:2430	8917669	1	True				
ANR	8918026	AssignmentExpression	"args = strpbrk ( args , "",)"" )"		8917669	0		=			
ANR	8918027	Identifier	args		8917669	0					
ANR	8918028	CallExpression	"strpbrk ( args , "",)"" )"		8917669	1					
ANR	8918029	Callee	strpbrk		8917669	0					
ANR	8918030	Identifier	strpbrk		8917669	0					
ANR	8918031	ArgumentList	args		8917669	1					
ANR	8918032	Argument	args		8917669	0					
ANR	8918033	Identifier	args		8917669	0					
ANR	8918034	Argument	""",)"""		8917669	1					
ANR	8918035	PrimaryExpression	""",)"""		8917669	0					
ANR	8918036	ExpressionStatement	"vreaderOpt -> cert_name [ i ] = g_strndup ( cert , args - cert )"	133:16:2449:2504	8917669	2	True				
ANR	8918037	AssignmentExpression	"vreaderOpt -> cert_name [ i ] = g_strndup ( cert , args - cert )"		8917669	0		=			
ANR	8918038	ArrayIndexing	vreaderOpt -> cert_name [ i ]		8917669	0					
ANR	8918039	PtrMemberAccess	vreaderOpt -> cert_name		8917669	0					
ANR	8918040	Identifier	vreaderOpt		8917669	0					
ANR	8918041	Identifier	cert_name		8917669	1					
ANR	8918042	Identifier	i		8917669	1					
ANR	8918043	CallExpression	"g_strndup ( cert , args - cert )"		8917669	1					
ANR	8918044	Callee	g_strndup		8917669	0					
ANR	8918045	Identifier	g_strndup		8917669	0					
ANR	8918046	ArgumentList	cert		8917669	1					
ANR	8918047	Argument	cert		8917669	0					
ANR	8918048	Identifier	cert		8917669	0					
ANR	8918049	Argument	args - cert		8917669	1					
ANR	8918050	AdditiveExpression	args - cert		8917669	0		-			
ANR	8918051	Identifier	args		8917669	0					
ANR	8918052	Identifier	cert		8917669	1					
ANR	8918053	ExpressionStatement	args = strip ( args + 1 )	135:16:2523:2543	8917669	3	True				
ANR	8918054	AssignmentExpression	args = strip ( args + 1 )		8917669	0		=			
ANR	8918055	Identifier	args		8917669	0					
ANR	8918056	CallExpression	strip ( args + 1 )		8917669	1					
ANR	8918057	Callee	strip		8917669	0					
ANR	8918058	Identifier	strip		8917669	0					
ANR	8918059	ArgumentList	args + 1		8917669	1					
ANR	8918060	Argument	args + 1		8917669	0					
ANR	8918061	AdditiveExpression	args + 1		8917669	0		+			
ANR	8918062	Identifier	args		8917669	0					
ANR	8918063	PrimaryExpression	1		8917669	1					
ANR	8918064	IfStatement	if ( * args == ')' )		8917669	53					
ANR	8918065	Condition	* args == ')'	139:16:2577:2588	8917669	0	True				
ANR	8918066	EqualityExpression	* args == ')'		8917669	0		==			
ANR	8918067	UnaryOperationExpression	* args		8917669	0					
ANR	8918068	UnaryOperator	*		8917669	0					
ANR	8918069	Identifier	args		8917669	1					
ANR	8918070	PrimaryExpression	')'		8917669	1					
ANR	8918071	CompoundStatement		137:30:2552:2552	8917669	1					
ANR	8918072	ExpressionStatement	args ++	141:16:2610:2616	8917669	0	True				
ANR	8918073	PostIncDecOperationExpression	args ++		8917669	0					
ANR	8918074	Identifier	args		8917669	0					
ANR	8918075	IncDec	++		8917669	1					
ANR	8918076	ExpressionStatement	opts -> vreader_count ++	145:12:2646:2667	8917669	54	True				
ANR	8918077	PostIncDecOperationExpression	opts -> vreader_count ++		8917669	0					
ANR	8918078	PtrMemberAccess	opts -> vreader_count		8917669	0					
ANR	8918079	Identifier	opts		8917669	0					
ANR	8918080	Identifier	vreader_count		8917669	1					
ANR	8918081	IncDec	++		8917669	1					
ANR	8918082	ElseStatement	else		8917669	0					
ANR	8918083	IfStatement	"if ( strncmp ( args , ""use_hw="" , 7 ) == 0 )"		8917669	0					
ANR	8918084	Condition	"strncmp ( args , ""use_hw="" , 7 ) == 0"	149:19:2712:2743	8917669	0	True				
ANR	8918085	EqualityExpression	"strncmp ( args , ""use_hw="" , 7 ) == 0"		8917669	0		==			
ANR	8918086	CallExpression	"strncmp ( args , ""use_hw="" , 7 )"		8917669	0					
ANR	8918087	Callee	strncmp		8917669	0					
ANR	8918088	Identifier	strncmp		8917669	0					
ANR	8918089	ArgumentList	args		8917669	1					
ANR	8918090	Argument	args		8917669	0					
ANR	8918091	Identifier	args		8917669	0					
ANR	8918092	Argument	"""use_hw="""		8917669	1					
ANR	8918093	PrimaryExpression	"""use_hw="""		8917669	0					
ANR	8918094	Argument	7		8917669	2					
ANR	8918095	PrimaryExpression	7		8917669	0					
ANR	8918096	PrimaryExpression	0		8917669	1					
ANR	8918097	CompoundStatement		147:53:2707:2707	8917669	1					
ANR	8918098	ExpressionStatement	args = strip ( args + 7 )	151:12:2761:2781	8917669	0	True				
ANR	8918099	AssignmentExpression	args = strip ( args + 7 )		8917669	0		=			
ANR	8918100	Identifier	args		8917669	0					
ANR	8918101	CallExpression	strip ( args + 7 )		8917669	1					
ANR	8918102	Callee	strip		8917669	0					
ANR	8918103	Identifier	strip		8917669	0					
ANR	8918104	ArgumentList	args + 7		8917669	1					
ANR	8918105	Argument	args + 7		8917669	0					
ANR	8918106	AdditiveExpression	args + 7		8917669	0		+			
ANR	8918107	Identifier	args		8917669	0					
ANR	8918108	PrimaryExpression	7		8917669	1					
ANR	8918109	IfStatement	if ( * args == '0' || * args == 'N' || * args == 'n' || * args == 'F' )		8917669	1					
ANR	8918110	Condition	* args == '0' || * args == 'N' || * args == 'n' || * args == 'F'	153:16:2800:2859	8917669	0	True				
ANR	8918111	OrExpression	* args == '0' || * args == 'N' || * args == 'n' || * args == 'F'		8917669	0		||			
ANR	8918112	EqualityExpression	* args == '0'		8917669	0		==			
ANR	8918113	UnaryOperationExpression	* args		8917669	0					
ANR	8918114	UnaryOperator	*		8917669	0					
ANR	8918115	Identifier	args		8917669	1					
ANR	8918116	PrimaryExpression	'0'		8917669	1					
ANR	8918117	OrExpression	* args == 'N' || * args == 'n' || * args == 'F'		8917669	1		||			
ANR	8918118	EqualityExpression	* args == 'N'		8917669	0		==			
ANR	8918119	UnaryOperationExpression	* args		8917669	0					
ANR	8918120	UnaryOperator	*		8917669	0					
ANR	8918121	Identifier	args		8917669	1					
ANR	8918122	PrimaryExpression	'N'		8917669	1					
ANR	8918123	OrExpression	* args == 'n' || * args == 'F'		8917669	1		||			
ANR	8918124	EqualityExpression	* args == 'n'		8917669	0		==			
ANR	8918125	UnaryOperationExpression	* args		8917669	0					
ANR	8918126	UnaryOperator	*		8917669	0					
ANR	8918127	Identifier	args		8917669	1					
ANR	8918128	PrimaryExpression	'n'		8917669	1					
ANR	8918129	EqualityExpression	* args == 'F'		8917669	1		==			
ANR	8918130	UnaryOperationExpression	* args		8917669	0					
ANR	8918131	UnaryOperator	*		8917669	0					
ANR	8918132	Identifier	args		8917669	1					
ANR	8918133	PrimaryExpression	'F'		8917669	1					
ANR	8918134	CompoundStatement		151:78:2823:2823	8917669	1					
ANR	8918135	ExpressionStatement	opts -> use_hw = PR_FALSE	155:16:2881:2904	8917669	0	True				
ANR	8918136	AssignmentExpression	opts -> use_hw = PR_FALSE		8917669	0		=			
ANR	8918137	PtrMemberAccess	opts -> use_hw		8917669	0					
ANR	8918138	Identifier	opts		8917669	0					
ANR	8918139	Identifier	use_hw		8917669	1					
ANR	8918140	Identifier	PR_FALSE		8917669	1					
ANR	8918141	ElseStatement	else		8917669	0					
ANR	8918142	CompoundStatement		155:19:2887:2887	8917669	0					
ANR	8918143	ExpressionStatement	opts -> use_hw = PR_TRUE	159:16:2945:2967	8917669	0	True				
ANR	8918144	AssignmentExpression	opts -> use_hw = PR_TRUE		8917669	0		=			
ANR	8918145	PtrMemberAccess	opts -> use_hw		8917669	0					
ANR	8918146	Identifier	opts		8917669	0					
ANR	8918147	Identifier	use_hw		8917669	1					
ANR	8918148	Identifier	PR_TRUE		8917669	1					
ANR	8918149	ExpressionStatement	args = find_blank ( args )	163:12:2997:3020	8917669	2	True				
ANR	8918150	AssignmentExpression	args = find_blank ( args )		8917669	0		=			
ANR	8918151	Identifier	args		8917669	0					
ANR	8918152	CallExpression	find_blank ( args )		8917669	1					
ANR	8918153	Callee	find_blank		8917669	0					
ANR	8918154	Identifier	find_blank		8917669	0					
ANR	8918155	ArgumentList	args		8917669	1					
ANR	8918156	Argument	args		8917669	0					
ANR	8918157	Identifier	args		8917669	0					
ANR	8918158	ElseStatement	else		8917669	0					
ANR	8918159	IfStatement	"if ( strncmp ( args , ""hw_type="" , 8 ) == 0 )"		8917669	0					
ANR	8918160	Condition	"strncmp ( args , ""hw_type="" , 8 ) == 0"	167:19:3066:3098	8917669	0	True				
ANR	8918161	EqualityExpression	"strncmp ( args , ""hw_type="" , 8 ) == 0"		8917669	0		==			
ANR	8918162	CallExpression	"strncmp ( args , ""hw_type="" , 8 )"		8917669	0					
ANR	8918163	Callee	strncmp		8917669	0					
ANR	8918164	Identifier	strncmp		8917669	0					
ANR	8918165	ArgumentList	args		8917669	1					
ANR	8918166	Argument	args		8917669	0					
ANR	8918167	Identifier	args		8917669	0					
ANR	8918168	Argument	"""hw_type="""		8917669	1					
ANR	8918169	PrimaryExpression	"""hw_type="""		8917669	0					
ANR	8918170	Argument	8		8917669	2					
ANR	8918171	PrimaryExpression	8		8917669	0					
ANR	8918172	PrimaryExpression	0		8917669	1					
ANR	8918173	CompoundStatement		165:54:3062:3062	8917669	1					
ANR	8918174	ExpressionStatement	args = strip ( args + 8 )	169:12:3116:3136	8917669	0	True				
ANR	8918175	AssignmentExpression	args = strip ( args + 8 )		8917669	0		=			
ANR	8918176	Identifier	args		8917669	0					
ANR	8918177	CallExpression	strip ( args + 8 )		8917669	1					
ANR	8918178	Callee	strip		8917669	0					
ANR	8918179	Identifier	strip		8917669	0					
ANR	8918180	ArgumentList	args + 8		8917669	1					
ANR	8918181	Argument	args + 8		8917669	0					
ANR	8918182	AdditiveExpression	args + 8		8917669	0		+			
ANR	8918183	Identifier	args		8917669	0					
ANR	8918184	PrimaryExpression	8		8917669	1					
ANR	8918185	ExpressionStatement	opts -> hw_card_type = vcard_emul_type_from_string ( args )	171:12:3151:3205	8917669	1	True				
ANR	8918186	AssignmentExpression	opts -> hw_card_type = vcard_emul_type_from_string ( args )		8917669	0		=			
ANR	8918187	PtrMemberAccess	opts -> hw_card_type		8917669	0					
ANR	8918188	Identifier	opts		8917669	0					
ANR	8918189	Identifier	hw_card_type		8917669	1					
ANR	8918190	CallExpression	vcard_emul_type_from_string ( args )		8917669	1					
ANR	8918191	Callee	vcard_emul_type_from_string		8917669	0					
ANR	8918192	Identifier	vcard_emul_type_from_string		8917669	0					
ANR	8918193	ArgumentList	args		8917669	1					
ANR	8918194	Argument	args		8917669	0					
ANR	8918195	Identifier	args		8917669	0					
ANR	8918196	ExpressionStatement	args = find_blank ( args )	173:12:3220:3243	8917669	2	True				
ANR	8918197	AssignmentExpression	args = find_blank ( args )		8917669	0		=			
ANR	8918198	Identifier	args		8917669	0					
ANR	8918199	CallExpression	find_blank ( args )		8917669	1					
ANR	8918200	Callee	find_blank		8917669	0					
ANR	8918201	Identifier	find_blank		8917669	0					
ANR	8918202	ArgumentList	args		8917669	1					
ANR	8918203	Argument	args		8917669	0					
ANR	8918204	Identifier	args		8917669	0					
ANR	8918205	ElseStatement	else		8917669	0					
ANR	8918206	IfStatement	"if ( strncmp ( args , ""hw_params="" , 10 ) == 0 )"		8917669	0					
ANR	8918207	Condition	"strncmp ( args , ""hw_params="" , 10 ) == 0"	177:19:3291:3326	8917669	0	True				
ANR	8918208	EqualityExpression	"strncmp ( args , ""hw_params="" , 10 ) == 0"		8917669	0		==			
ANR	8918209	CallExpression	"strncmp ( args , ""hw_params="" , 10 )"		8917669	0					
ANR	8918210	Callee	strncmp		8917669	0					
ANR	8918211	Identifier	strncmp		8917669	0					
ANR	8918212	ArgumentList	args		8917669	1					
ANR	8918213	Argument	args		8917669	0					
ANR	8918214	Identifier	args		8917669	0					
ANR	8918215	Argument	"""hw_params="""		8917669	1					
ANR	8918216	PrimaryExpression	"""hw_params="""		8917669	0					
ANR	8918217	Argument	10		8917669	2					
ANR	8918218	PrimaryExpression	10		8917669	0					
ANR	8918219	PrimaryExpression	0		8917669	1					
ANR	8918220	CompoundStatement		177:12:3305:3323	8917669	1					
ANR	8918221	IdentifierDeclStatement	const char * params ;	179:12:3344:3362	8917669	0	True				
ANR	8918222	IdentifierDecl	* params		8917669	0					
ANR	8918223	IdentifierDeclType	const char *		8917669	0					
ANR	8918224	Identifier	params		8917669	1					
ANR	8918225	ExpressionStatement	args = strip ( args + 10 )	181:12:3377:3398	8917669	1	True				
ANR	8918226	AssignmentExpression	args = strip ( args + 10 )		8917669	0		=			
ANR	8918227	Identifier	args		8917669	0					
ANR	8918228	CallExpression	strip ( args + 10 )		8917669	1					
ANR	8918229	Callee	strip		8917669	0					
ANR	8918230	Identifier	strip		8917669	0					
ANR	8918231	ArgumentList	args + 10		8917669	1					
ANR	8918232	Argument	args + 10		8917669	0					
ANR	8918233	AdditiveExpression	args + 10		8917669	0		+			
ANR	8918234	Identifier	args		8917669	0					
ANR	8918235	PrimaryExpression	10		8917669	1					
ANR	8918236	ExpressionStatement	params = args	183:12:3413:3426	8917669	2	True				
ANR	8918237	AssignmentExpression	params = args		8917669	0		=			
ANR	8918238	Identifier	params		8917669	0					
ANR	8918239	Identifier	args		8917669	1					
ANR	8918240	ExpressionStatement	args = find_blank ( args )	185:12:3441:3464	8917669	3	True				
ANR	8918241	AssignmentExpression	args = find_blank ( args )		8917669	0		=			
ANR	8918242	Identifier	args		8917669	0					
ANR	8918243	CallExpression	find_blank ( args )		8917669	1					
ANR	8918244	Callee	find_blank		8917669	0					
ANR	8918245	Identifier	find_blank		8917669	0					
ANR	8918246	ArgumentList	args		8917669	1					
ANR	8918247	Argument	args		8917669	0					
ANR	8918248	Identifier	args		8917669	0					
ANR	8918249	ExpressionStatement	"opts -> hw_type_params = g_strndup ( params , args - params )"	187:12:3479:3532	8917669	4	True				
ANR	8918250	AssignmentExpression	"opts -> hw_type_params = g_strndup ( params , args - params )"		8917669	0		=			
ANR	8918251	PtrMemberAccess	opts -> hw_type_params		8917669	0					
ANR	8918252	Identifier	opts		8917669	0					
ANR	8918253	Identifier	hw_type_params		8917669	1					
ANR	8918254	CallExpression	"g_strndup ( params , args - params )"		8917669	1					
ANR	8918255	Callee	g_strndup		8917669	0					
ANR	8918256	Identifier	g_strndup		8917669	0					
ANR	8918257	ArgumentList	params		8917669	1					
ANR	8918258	Argument	params		8917669	0					
ANR	8918259	Identifier	params		8917669	0					
ANR	8918260	Argument	args - params		8917669	1					
ANR	8918261	AdditiveExpression	args - params		8917669	0		-			
ANR	8918262	Identifier	args		8917669	0					
ANR	8918263	Identifier	params		8917669	1					
ANR	8918264	ElseStatement	else		8917669	0					
ANR	8918265	IfStatement	"if ( strncmp ( args , ""db="" , 3 ) == 0 )"		8917669	0					
ANR	8918266	Condition	"strncmp ( args , ""db="" , 3 ) == 0"	191:19:3590:3617	8917669	0	True				
ANR	8918267	EqualityExpression	"strncmp ( args , ""db="" , 3 ) == 0"		8917669	0		==			
ANR	8918268	CallExpression	"strncmp ( args , ""db="" , 3 )"		8917669	0					
ANR	8918269	Callee	strncmp		8917669	0					
ANR	8918270	Identifier	strncmp		8917669	0					
ANR	8918271	ArgumentList	args		8917669	1					
ANR	8918272	Argument	args		8917669	0					
ANR	8918273	Identifier	args		8917669	0					
ANR	8918274	Argument	"""db="""		8917669	1					
ANR	8918275	PrimaryExpression	"""db="""		8917669	0					
ANR	8918276	Argument	3		8917669	2					
ANR	8918277	PrimaryExpression	3		8917669	0					
ANR	8918278	PrimaryExpression	0		8917669	1					
ANR	8918279	CompoundStatement		191:12:3596:3610	8917669	1					
ANR	8918280	IdentifierDeclStatement	const char * db ;	193:12:3635:3649	8917669	0	True				
ANR	8918281	IdentifierDecl	* db		8917669	0					
ANR	8918282	IdentifierDeclType	const char *		8917669	0					
ANR	8918283	Identifier	db		8917669	1					
ANR	8918284	ExpressionStatement	args = strip ( args + 3 )	195:12:3664:3684	8917669	1	True				
ANR	8918285	AssignmentExpression	args = strip ( args + 3 )		8917669	0		=			
ANR	8918286	Identifier	args		8917669	0					
ANR	8918287	CallExpression	strip ( args + 3 )		8917669	1					
ANR	8918288	Callee	strip		8917669	0					
ANR	8918289	Identifier	strip		8917669	0					
ANR	8918290	ArgumentList	args + 3		8917669	1					
ANR	8918291	Argument	args + 3		8917669	0					
ANR	8918292	AdditiveExpression	args + 3		8917669	0		+			
ANR	8918293	Identifier	args		8917669	0					
ANR	8918294	PrimaryExpression	3		8917669	1					
ANR	8918295	IfStatement	"if ( * args != '""' )"		8917669	2					
ANR	8918296	Condition	"* args != '""'"	197:16:3703:3714	8917669	0	True				
ANR	8918297	EqualityExpression	"* args != '""'"		8917669	0		!=			
ANR	8918298	UnaryOperationExpression	* args		8917669	0					
ANR	8918299	UnaryOperator	*		8917669	0					
ANR	8918300	Identifier	args		8917669	1					
ANR	8918301	PrimaryExpression	"'""'"		8917669	1					
ANR	8918302	CompoundStatement		195:30:3678:3678	8917669	1					
ANR	8918303	ContinueStatement	continue ;	199:16:3736:3744	8917669	0	True				
ANR	8918304	ExpressionStatement	args ++	203:12:3774:3780	8917669	3	True				
ANR	8918305	PostIncDecOperationExpression	args ++		8917669	0					
ANR	8918306	Identifier	args		8917669	0					
ANR	8918307	IncDec	++		8917669	1					
ANR	8918308	ExpressionStatement	db = args	205:12:3795:3804	8917669	4	True				
ANR	8918309	AssignmentExpression	db = args		8917669	0		=			
ANR	8918310	Identifier	db		8917669	0					
ANR	8918311	Identifier	args		8917669	1					
ANR	8918312	ExpressionStatement	"args = strpbrk ( args , ""\\""\\n"" )"	207:12:3819:3847	8917669	5	True				
ANR	8918313	AssignmentExpression	"args = strpbrk ( args , ""\\""\\n"" )"		8917669	0		=			
ANR	8918314	Identifier	args		8917669	0					
ANR	8918315	CallExpression	"strpbrk ( args , ""\\""\\n"" )"		8917669	1					
ANR	8918316	Callee	strpbrk		8917669	0					
ANR	8918317	Identifier	strpbrk		8917669	0					
ANR	8918318	ArgumentList	args		8917669	1					
ANR	8918319	Argument	args		8917669	0					
ANR	8918320	Identifier	args		8917669	0					
ANR	8918321	Argument	"""\\""\\n"""		8917669	1					
ANR	8918322	PrimaryExpression	"""\\""\\n"""		8917669	0					
ANR	8918323	ExpressionStatement	"opts -> nss_db = g_strndup ( db , args - db )"	209:12:3862:3899	8917669	6	True				
ANR	8918324	AssignmentExpression	"opts -> nss_db = g_strndup ( db , args - db )"		8917669	0		=			
ANR	8918325	PtrMemberAccess	opts -> nss_db		8917669	0					
ANR	8918326	Identifier	opts		8917669	0					
ANR	8918327	Identifier	nss_db		8917669	1					
ANR	8918328	CallExpression	"g_strndup ( db , args - db )"		8917669	1					
ANR	8918329	Callee	g_strndup		8917669	0					
ANR	8918330	Identifier	g_strndup		8917669	0					
ANR	8918331	ArgumentList	db		8917669	1					
ANR	8918332	Argument	db		8917669	0					
ANR	8918333	Identifier	db		8917669	0					
ANR	8918334	Argument	args - db		8917669	1					
ANR	8918335	AdditiveExpression	args - db		8917669	0		-			
ANR	8918336	Identifier	args		8917669	0					
ANR	8918337	Identifier	db		8917669	1					
ANR	8918338	IfStatement	if ( * args != 0 )		8917669	7					
ANR	8918339	Condition	* args != 0	211:16:3918:3927	8917669	0	True				
ANR	8918340	EqualityExpression	* args != 0		8917669	0		!=			
ANR	8918341	UnaryOperationExpression	* args		8917669	0					
ANR	8918342	UnaryOperator	*		8917669	0					
ANR	8918343	Identifier	args		8917669	1					
ANR	8918344	PrimaryExpression	0		8917669	1					
ANR	8918345	CompoundStatement		209:28:3891:3891	8917669	1					
ANR	8918346	ExpressionStatement	args ++	213:16:3949:3955	8917669	0	True				
ANR	8918347	PostIncDecOperationExpression	args ++		8917669	0					
ANR	8918348	Identifier	args		8917669	0					
ANR	8918349	IncDec	++		8917669	1					
ANR	8918350	ElseStatement	else		8917669	0					
ANR	8918351	CompoundStatement		215:15:3949:3949	8917669	0					
ANR	8918352	ExpressionStatement	args = find_blank ( args )	219:12:4003:4026	8917669	0	True				
ANR	8918353	AssignmentExpression	args = find_blank ( args )		8917669	0		=			
ANR	8918354	Identifier	args		8917669	0					
ANR	8918355	CallExpression	find_blank ( args )		8917669	1					
ANR	8918356	Callee	find_blank		8917669	0					
ANR	8918357	Identifier	find_blank		8917669	0					
ANR	8918358	ArgumentList	args		8917669	1					
ANR	8918359	Argument	args		8917669	0					
ANR	8918360	Identifier	args		8917669	0					
ANR	8918361	Condition	* args != 0	223:13:4053:4062	8917669	1	True				
ANR	8918362	EqualityExpression	* args != 0		8917669	0		!=			
ANR	8918363	UnaryOperationExpression	* args		8917669	0					
ANR	8918364	UnaryOperator	*		8917669	0					
ANR	8918365	Identifier	args		8917669	1					
ANR	8918366	PrimaryExpression	0		8917669	1					
ANR	8918367	ReturnStatement	return opts ;	227:4:4073:4084	8917669	5	True				
ANR	8918368	Identifier	opts		8917669	0					
ANR	8918369	Identifier	vcard_emul_options		8917669	1					
ANR	8918370	ParameterList	const char * args		8917669	2					
ANR	8918371	Parameter	const char * args	1:19:19:34	8917669	0	True				
ANR	8918372	ParameterType	const char *		8917669	0					
ANR	8918373	Identifier	args		8917669	1					
ANR	8918374	CFGEntryNode	ENTRY		8917669		True				
ANR	8918375	CFGExitNode	EXIT		8917669		True				
ANR	8918376	Symbol	g_renew		8917669						
ANR	8918377	Symbol	strpbrk		8917669						
ANR	8918378	Symbol	vreaderOpt -> cert_name		8917669						
ANR	8918379	Symbol	name_length		8917669						
ANR	8918380	Symbol	cert		8917669						
ANR	8918381	Symbol	type		8917669						
ANR	8918382	Symbol	opts -> hw_type_params		8917669						
ANR	8918383	Symbol	* args		8917669						
ANR	8918384	Symbol	strncmp		8917669						
ANR	8918385	Symbol	* vreaderOpt -> cert_name		8917669						
ANR	8918386	Symbol	type_params		8917669						
ANR	8918387	Symbol	strip		8917669						
ANR	8918388	Symbol	opts		8917669						
ANR	8918389	Symbol	reader_count		8917669						
ANR	8918390	Symbol	vname_length		8917669						
ANR	8918391	Symbol	type_str		8917669						
ANR	8918392	Symbol	NULL		8917669						
ANR	8918393	Symbol	opts -> nss_db		8917669						
ANR	8918394	Symbol	count		8917669						
ANR	8918395	Symbol	vreaderOpt -> cert_count		8917669						
ANR	8918396	Symbol	params		8917669						
ANR	8918397	Symbol	* type_str		8917669						
ANR	8918398	Symbol	vreaderOpt -> name		8917669						
ANR	8918399	Symbol	vname		8917669						
ANR	8918400	Symbol	MIN		8917669						
ANR	8918401	Symbol	* type_params_length		8917669						
ANR	8918402	Symbol	PR_FALSE		8917669						
ANR	8918403	Symbol	name		8917669						
ANR	8918404	Symbol	opts -> vreader		8917669						
ANR	8918405	Symbol	count_tokens		8917669						
ANR	8918406	Symbol	VirtualReaderOptions		8917669						
ANR	8918407	Symbol	vreaderOpt -> vname		8917669						
ANR	8918408	Symbol	opts -> hw_card_type		8917669						
ANR	8918409	Symbol	vreaderOpt -> type_params		8917669						
ANR	8918410	Symbol	type_params_length		8917669						
ANR	8918411	Symbol	READER_STEP		8917669						
ANR	8918412	Symbol	g_strndup		8917669						
ANR	8918413	Symbol	opts -> vreader_count		8917669						
ANR	8918414	Symbol	& default_options		8917669						
ANR	8918415	Symbol	vreaderOpt -> card_type		8917669						
ANR	8918416	Symbol	i		8917669						
ANR	8918417	Symbol	* * vreaderOpt		8917669						
ANR	8918418	Symbol	PR_TRUE		8917669						
ANR	8918419	Symbol	args		8917669						
ANR	8918420	Symbol	& options		8917669						
ANR	8918421	Symbol	* i		8917669						
ANR	8918422	Symbol	* opts		8917669						
ANR	8918423	Symbol	vreaderOpt		8917669						
ANR	8918424	Symbol	find_blank		8917669						
ANR	8918425	Symbol	* vreaderOpt		8917669						
ANR	8918426	Symbol	vcard_emul_type_from_string		8917669						
ANR	8918427	Symbol	db		8917669						
ANR	8918428	Symbol	opts -> use_hw		8917669						
