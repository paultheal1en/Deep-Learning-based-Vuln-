command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	502815	File	/home/p4ultr4n/workplace/ReVeal/raw_code/aiocb_needs_copy_0.c								
ANR	502816	Function	aiocb_needs_copy	1:0:0:293							
ANR	502817	FunctionDef	aiocb_needs_copy (struct qemu_paiocb * aiocb)		502816	0					
ANR	502818	CompoundStatement		3:0:56:293	502816	0					
ANR	502819	IfStatement	if ( aiocb -> aio_flags & QEMU_AIO_SECTOR_ALIGNED )		502816	0					
ANR	502820	Condition	aiocb -> aio_flags & QEMU_AIO_SECTOR_ALIGNED	5:8:67:108	502816	0	True				
ANR	502821	BitAndExpression	aiocb -> aio_flags & QEMU_AIO_SECTOR_ALIGNED		502816	0		&			
ANR	502822	PtrMemberAccess	aiocb -> aio_flags		502816	0					
ANR	502823	Identifier	aiocb		502816	0					
ANR	502824	Identifier	aio_flags		502816	1					
ANR	502825	Identifier	QEMU_AIO_SECTOR_ALIGNED		502816	1					
ANR	502826	CompoundStatement		5:8:65:70	502816	1					
ANR	502827	IdentifierDeclStatement	int i ;	7:8:122:127	502816	0	True				
ANR	502828	IdentifierDecl	i		502816	0					
ANR	502829	IdentifierDeclType	int		502816	0					
ANR	502830	Identifier	i		502816	1					
ANR	502831	ForStatement	for ( i = 0 ; i < aiocb -> aio_niov ; i ++ )		502816	1					
ANR	502832	ForInit	i = 0 ;	11:13:145:150	502816	0	True				
ANR	502833	AssignmentExpression	i = 0		502816	0		=			
ANR	502834	Identifier	i		502816	0					
ANR	502835	PrimaryExpression	0		502816	1					
ANR	502836	Condition	i < aiocb -> aio_niov	11:20:152:170	502816	1	True				
ANR	502837	RelationalExpression	i < aiocb -> aio_niov		502816	0		<			
ANR	502838	Identifier	i		502816	0					
ANR	502839	PtrMemberAccess	aiocb -> aio_niov		502816	1					
ANR	502840	Identifier	aiocb		502816	0					
ANR	502841	Identifier	aio_niov		502816	1					
ANR	502842	PostIncDecOperationExpression	i ++	11:41:173:175	502816	2	True				
ANR	502843	Identifier	i		502816	0					
ANR	502844	IncDec	++		502816	1					
ANR	502845	IfStatement	if ( ( uintptr_t ) aiocb -> aio_iov [ i ] . iov_base % 512 )		502816	3					
ANR	502846	Condition	( uintptr_t ) aiocb -> aio_iov [ i ] . iov_base % 512	13:16:195:238	502816	0	True				
ANR	502847	MultiplicativeExpression	( uintptr_t ) aiocb -> aio_iov [ i ] . iov_base % 512		502816	0		%			
ANR	502848	CastExpression	( uintptr_t ) aiocb -> aio_iov [ i ] . iov_base		502816	0					
ANR	502849	CastTarget	uintptr_t		502816	0					
ANR	502850	MemberAccess	aiocb -> aio_iov [ i ] . iov_base		502816	1					
ANR	502851	ArrayIndexing	aiocb -> aio_iov [ i ]		502816	0					
ANR	502852	PtrMemberAccess	aiocb -> aio_iov		502816	0					
ANR	502853	Identifier	aiocb		502816	0					
ANR	502854	Identifier	aio_iov		502816	1					
ANR	502855	Identifier	i		502816	1					
ANR	502856	Identifier	iov_base		502816	1					
ANR	502857	PrimaryExpression	512		502816	1					
ANR	502858	ReturnStatement	return 1 ;	15:16:258:266	502816	1	True				
ANR	502859	PrimaryExpression	1		502816	0					
ANR	502860	ReturnStatement	return 0 ;	21:4:282:290	502816	1	True				
ANR	502861	PrimaryExpression	0		502816	0					
ANR	502862	ReturnType	static int		502816	1					
ANR	502863	Identifier	aiocb_needs_copy		502816	2					
ANR	502864	ParameterList	struct qemu_paiocb * aiocb		502816	3					
ANR	502865	Parameter	struct qemu_paiocb * aiocb	1:28:28:52	502816	0	True				
ANR	502866	ParameterType	struct qemu_paiocb *		502816	0					
ANR	502867	Identifier	aiocb		502816	1					
ANR	502868	CFGEntryNode	ENTRY		502816		True				
ANR	502869	CFGExitNode	EXIT		502816		True				
ANR	502870	Symbol	aiocb -> aio_flags		502816						
ANR	502871	Symbol	* * aiocb		502816						
ANR	502872	Symbol	aiocb -> aio_iov [ i ] . iov_base		502816						
ANR	502873	Symbol	* i		502816						
ANR	502874	Symbol	QEMU_AIO_SECTOR_ALIGNED		502816						
ANR	502875	Symbol	aiocb -> aio_niov		502816						
ANR	502876	Symbol	* aiocb -> aio_iov		502816						
ANR	502877	Symbol	aiocb -> aio_iov		502816						
ANR	502878	Symbol	* aiocb		502816						
ANR	502879	Symbol	i		502816						
ANR	502880	Symbol	aiocb		502816						
