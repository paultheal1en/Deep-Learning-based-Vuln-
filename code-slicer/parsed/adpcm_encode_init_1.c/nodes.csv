command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	463640	File	/home/p4ultr4n/workplace/ReVeal/raw_code/adpcm_encode_init_1.c								
ANR	463641	Function	adpcm_encode_init	1:0:0:3238							
ANR	463642	FunctionDef	adpcm_encode_init (AVCodecContext * avctx)		463641	0					
ANR	463643	CompoundStatement		3:0:61:3238	463641	0					
ANR	463644	IdentifierDeclStatement	ADPCMEncodeContext * s = avctx -> priv_data ;	5:4:68:108	463641	0	True				
ANR	463645	IdentifierDecl	* s = avctx -> priv_data		463641	0					
ANR	463646	IdentifierDeclType	ADPCMEncodeContext *		463641	0					
ANR	463647	Identifier	s		463641	1					
ANR	463648	AssignmentExpression	* s = avctx -> priv_data		463641	2		=			
ANR	463649	Identifier	s		463641	0					
ANR	463650	PtrMemberAccess	avctx -> priv_data		463641	1					
ANR	463651	Identifier	avctx		463641	0					
ANR	463652	Identifier	priv_data		463641	1					
ANR	463653	IdentifierDeclStatement	uint8_t * extradata ;	7:4:115:133	463641	1	True				
ANR	463654	IdentifierDecl	* extradata		463641	0					
ANR	463655	IdentifierDeclType	uint8_t *		463641	0					
ANR	463656	Identifier	extradata		463641	1					
ANR	463657	IdentifierDeclStatement	int i ;	9:4:140:145	463641	2	True				
ANR	463658	IdentifierDecl	i		463641	0					
ANR	463659	IdentifierDeclType	int		463641	0					
ANR	463660	Identifier	i		463641	1					
ANR	463661	IfStatement	if ( avctx -> channels > 2 )		463641	3					
ANR	463662	Condition	avctx -> channels > 2	11:8:156:174	463641	0	True				
ANR	463663	RelationalExpression	avctx -> channels > 2		463641	0		>			
ANR	463664	PtrMemberAccess	avctx -> channels		463641	0					
ANR	463665	Identifier	avctx		463641	0					
ANR	463666	Identifier	channels		463641	1					
ANR	463667	PrimaryExpression	2		463641	1					
ANR	463668	ReturnStatement	return - 1 ;	13:8:186:195	463641	1	True				
ANR	463669	UnaryOperationExpression	- 1		463641	0					
ANR	463670	UnaryOperator	-		463641	0					
ANR	463671	PrimaryExpression	1		463641	1					
ANR	463672	IfStatement	if ( avctx -> trellis && ( unsigned ) avctx -> trellis > 16U )		463641	4					
ANR	463673	Condition	avctx -> trellis && ( unsigned ) avctx -> trellis > 16U	17:8:237:284	463641	0	True				
ANR	463674	AndExpression	avctx -> trellis && ( unsigned ) avctx -> trellis > 16U		463641	0		&&			
ANR	463675	PtrMemberAccess	avctx -> trellis		463641	0					
ANR	463676	Identifier	avctx		463641	0					
ANR	463677	Identifier	trellis		463641	1					
ANR	463678	RelationalExpression	( unsigned ) avctx -> trellis > 16U		463641	1		>			
ANR	463679	CastExpression	( unsigned ) avctx -> trellis		463641	0					
ANR	463680	CastTarget	unsigned		463641	0					
ANR	463681	PtrMemberAccess	avctx -> trellis		463641	1					
ANR	463682	Identifier	avctx		463641	0					
ANR	463683	Identifier	trellis		463641	1					
ANR	463684	PrimaryExpression	16U		463641	1					
ANR	463685	CompoundStatement		15:58:225:225	463641	1					
ANR	463686	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid trellis size\\n"" )"	19:8:298:351	463641	0	True				
ANR	463687	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid trellis size\\n"" )"		463641	0					
ANR	463688	Callee	av_log		463641	0					
ANR	463689	Identifier	av_log		463641	0					
ANR	463690	ArgumentList	avctx		463641	1					
ANR	463691	Argument	avctx		463641	0					
ANR	463692	Identifier	avctx		463641	0					
ANR	463693	Argument	AV_LOG_ERROR		463641	1					
ANR	463694	Identifier	AV_LOG_ERROR		463641	0					
ANR	463695	Argument	"""invalid trellis size\\n"""		463641	2					
ANR	463696	PrimaryExpression	"""invalid trellis size\\n"""		463641	0					
ANR	463697	ReturnStatement	return - 1 ;	21:8:362:371	463641	1	True				
ANR	463698	UnaryOperationExpression	- 1		463641	0					
ANR	463699	UnaryOperator	-		463641	0					
ANR	463700	PrimaryExpression	1		463641	1					
ANR	463701	IfStatement	if ( avctx -> trellis )		463641	5					
ANR	463702	Condition	avctx -> trellis	27:8:391:404	463641	0	True				
ANR	463703	PtrMemberAccess	avctx -> trellis		463641	0					
ANR	463704	Identifier	avctx		463641	0					
ANR	463705	Identifier	trellis		463641	1					
ANR	463706	CompoundStatement		29:8:402:445	463641	1					
ANR	463707	IdentifierDeclStatement	int frontier = 1 << avctx -> trellis ;	29:8:418:453	463641	0	True				
ANR	463708	IdentifierDecl	frontier = 1 << avctx -> trellis		463641	0					
ANR	463709	IdentifierDeclType	int		463641	0					
ANR	463710	Identifier	frontier		463641	1					
ANR	463711	AssignmentExpression	frontier = 1 << avctx -> trellis		463641	2		=			
ANR	463712	Identifier	frontier		463641	0					
ANR	463713	ShiftExpression	1 << avctx -> trellis		463641	1		<<			
ANR	463714	PrimaryExpression	1		463641	0					
ANR	463715	PtrMemberAccess	avctx -> trellis		463641	1					
ANR	463716	Identifier	avctx		463641	0					
ANR	463717	Identifier	trellis		463641	1					
ANR	463718	IdentifierDeclStatement	int max_paths = frontier * FREEZE_INTERVAL ;	31:8:464:507	463641	1	True				
ANR	463719	IdentifierDecl	max_paths = frontier * FREEZE_INTERVAL		463641	0					
ANR	463720	IdentifierDeclType	int		463641	0					
ANR	463721	Identifier	max_paths		463641	1					
ANR	463722	AssignmentExpression	max_paths = frontier * FREEZE_INTERVAL		463641	2		=			
ANR	463723	Identifier	max_paths		463641	0					
ANR	463724	MultiplicativeExpression	frontier * FREEZE_INTERVAL		463641	1		*			
ANR	463725	Identifier	frontier		463641	0					
ANR	463726	Identifier	FREEZE_INTERVAL		463641	1					
ANR	463727	ExpressionStatement	"FF_ALLOC_OR_GOTO ( avctx , s -> paths , max_paths * sizeof ( * s -> paths ) , error )"	33:8:518:615	463641	2	True				
ANR	463728	CallExpression	"FF_ALLOC_OR_GOTO ( avctx , s -> paths , max_paths * sizeof ( * s -> paths ) , error )"		463641	0					
ANR	463729	Callee	FF_ALLOC_OR_GOTO		463641	0					
ANR	463730	Identifier	FF_ALLOC_OR_GOTO		463641	0					
ANR	463731	ArgumentList	avctx		463641	1					
ANR	463732	Argument	avctx		463641	0					
ANR	463733	Identifier	avctx		463641	0					
ANR	463734	Argument	s -> paths		463641	1					
ANR	463735	PtrMemberAccess	s -> paths		463641	0					
ANR	463736	Identifier	s		463641	0					
ANR	463737	Identifier	paths		463641	1					
ANR	463738	Argument	max_paths * sizeof ( * s -> paths )		463641	2					
ANR	463739	MultiplicativeExpression	max_paths * sizeof ( * s -> paths )		463641	0		*			
ANR	463740	Identifier	max_paths		463641	0					
ANR	463741	SizeofExpression	sizeof ( * s -> paths )		463641	1					
ANR	463742	Sizeof	sizeof		463641	0					
ANR	463743	UnaryOperationExpression	* s -> paths		463641	1					
ANR	463744	UnaryOperator	*		463641	0					
ANR	463745	PtrMemberAccess	s -> paths		463641	1					
ANR	463746	Identifier	s		463641	0					
ANR	463747	Identifier	paths		463641	1					
ANR	463748	Argument	error		463641	3					
ANR	463749	Identifier	error		463641	0					
ANR	463750	ExpressionStatement	"FF_ALLOC_OR_GOTO ( avctx , s -> node_buf , 2 * frontier * sizeof ( * s -> node_buf ) , error )"	37:8:626:733	463641	3	True				
ANR	463751	CallExpression	"FF_ALLOC_OR_GOTO ( avctx , s -> node_buf , 2 * frontier * sizeof ( * s -> node_buf ) , error )"		463641	0					
ANR	463752	Callee	FF_ALLOC_OR_GOTO		463641	0					
ANR	463753	Identifier	FF_ALLOC_OR_GOTO		463641	0					
ANR	463754	ArgumentList	avctx		463641	1					
ANR	463755	Argument	avctx		463641	0					
ANR	463756	Identifier	avctx		463641	0					
ANR	463757	Argument	s -> node_buf		463641	1					
ANR	463758	PtrMemberAccess	s -> node_buf		463641	0					
ANR	463759	Identifier	s		463641	0					
ANR	463760	Identifier	node_buf		463641	1					
ANR	463761	Argument	2 * frontier * sizeof ( * s -> node_buf )		463641	2					
ANR	463762	MultiplicativeExpression	2 * frontier * sizeof ( * s -> node_buf )		463641	0		*			
ANR	463763	PrimaryExpression	2		463641	0					
ANR	463764	MultiplicativeExpression	frontier * sizeof ( * s -> node_buf )		463641	1		*			
ANR	463765	Identifier	frontier		463641	0					
ANR	463766	SizeofExpression	sizeof ( * s -> node_buf )		463641	1					
ANR	463767	Sizeof	sizeof		463641	0					
ANR	463768	UnaryOperationExpression	* s -> node_buf		463641	1					
ANR	463769	UnaryOperator	*		463641	0					
ANR	463770	PtrMemberAccess	s -> node_buf		463641	1					
ANR	463771	Identifier	s		463641	0					
ANR	463772	Identifier	node_buf		463641	1					
ANR	463773	Argument	error		463641	3					
ANR	463774	Identifier	error		463641	0					
ANR	463775	ExpressionStatement	"FF_ALLOC_OR_GOTO ( avctx , s -> nodep_buf , 2 * frontier * sizeof ( * s -> nodep_buf ) , error )"	41:8:744:852	463641	4	True				
ANR	463776	CallExpression	"FF_ALLOC_OR_GOTO ( avctx , s -> nodep_buf , 2 * frontier * sizeof ( * s -> nodep_buf ) , error )"		463641	0					
ANR	463777	Callee	FF_ALLOC_OR_GOTO		463641	0					
ANR	463778	Identifier	FF_ALLOC_OR_GOTO		463641	0					
ANR	463779	ArgumentList	avctx		463641	1					
ANR	463780	Argument	avctx		463641	0					
ANR	463781	Identifier	avctx		463641	0					
ANR	463782	Argument	s -> nodep_buf		463641	1					
ANR	463783	PtrMemberAccess	s -> nodep_buf		463641	0					
ANR	463784	Identifier	s		463641	0					
ANR	463785	Identifier	nodep_buf		463641	1					
ANR	463786	Argument	2 * frontier * sizeof ( * s -> nodep_buf )		463641	2					
ANR	463787	MultiplicativeExpression	2 * frontier * sizeof ( * s -> nodep_buf )		463641	0		*			
ANR	463788	PrimaryExpression	2		463641	0					
ANR	463789	MultiplicativeExpression	frontier * sizeof ( * s -> nodep_buf )		463641	1		*			
ANR	463790	Identifier	frontier		463641	0					
ANR	463791	SizeofExpression	sizeof ( * s -> nodep_buf )		463641	1					
ANR	463792	Sizeof	sizeof		463641	0					
ANR	463793	UnaryOperationExpression	* s -> nodep_buf		463641	1					
ANR	463794	UnaryOperator	*		463641	0					
ANR	463795	PtrMemberAccess	s -> nodep_buf		463641	1					
ANR	463796	Identifier	s		463641	0					
ANR	463797	Identifier	nodep_buf		463641	1					
ANR	463798	Argument	error		463641	3					
ANR	463799	Identifier	error		463641	0					
ANR	463800	ExpressionStatement	"FF_ALLOC_OR_GOTO ( avctx , s -> trellis_hash , 65536 * sizeof ( * s -> trellis_hash ) , error )"	45:8:863:970	463641	5	True				
ANR	463801	CallExpression	"FF_ALLOC_OR_GOTO ( avctx , s -> trellis_hash , 65536 * sizeof ( * s -> trellis_hash ) , error )"		463641	0					
ANR	463802	Callee	FF_ALLOC_OR_GOTO		463641	0					
ANR	463803	Identifier	FF_ALLOC_OR_GOTO		463641	0					
ANR	463804	ArgumentList	avctx		463641	1					
ANR	463805	Argument	avctx		463641	0					
ANR	463806	Identifier	avctx		463641	0					
ANR	463807	Argument	s -> trellis_hash		463641	1					
ANR	463808	PtrMemberAccess	s -> trellis_hash		463641	0					
ANR	463809	Identifier	s		463641	0					
ANR	463810	Identifier	trellis_hash		463641	1					
ANR	463811	Argument	65536 * sizeof ( * s -> trellis_hash )		463641	2					
ANR	463812	MultiplicativeExpression	65536 * sizeof ( * s -> trellis_hash )		463641	0		*			
ANR	463813	PrimaryExpression	65536		463641	0					
ANR	463814	SizeofExpression	sizeof ( * s -> trellis_hash )		463641	1					
ANR	463815	Sizeof	sizeof		463641	0					
ANR	463816	UnaryOperationExpression	* s -> trellis_hash		463641	1					
ANR	463817	UnaryOperator	*		463641	0					
ANR	463818	PtrMemberAccess	s -> trellis_hash		463641	1					
ANR	463819	Identifier	s		463641	0					
ANR	463820	Identifier	trellis_hash		463641	1					
ANR	463821	Argument	error		463641	3					
ANR	463822	Identifier	error		463641	0					
ANR	463823	ExpressionStatement	avctx -> bits_per_coded_sample = av_get_bits_per_sample ( avctx -> codec -> id )	53:4:986:1057	463641	6	True				
ANR	463824	AssignmentExpression	avctx -> bits_per_coded_sample = av_get_bits_per_sample ( avctx -> codec -> id )		463641	0		=			
ANR	463825	PtrMemberAccess	avctx -> bits_per_coded_sample		463641	0					
ANR	463826	Identifier	avctx		463641	0					
ANR	463827	Identifier	bits_per_coded_sample		463641	1					
ANR	463828	CallExpression	av_get_bits_per_sample ( avctx -> codec -> id )		463641	1					
ANR	463829	Callee	av_get_bits_per_sample		463641	0					
ANR	463830	Identifier	av_get_bits_per_sample		463641	0					
ANR	463831	ArgumentList	avctx -> codec -> id		463641	1					
ANR	463832	Argument	avctx -> codec -> id		463641	0					
ANR	463833	PtrMemberAccess	avctx -> codec -> id		463641	0					
ANR	463834	PtrMemberAccess	avctx -> codec		463641	0					
ANR	463835	Identifier	avctx		463641	0					
ANR	463836	Identifier	codec		463641	1					
ANR	463837	Identifier	id		463641	1					
ANR	463838	SwitchStatement	switch ( avctx -> codec -> id )		463641	7					
ANR	463839	Condition	avctx -> codec -> id	57:12:1074:1089	463641	0	True				
ANR	463840	PtrMemberAccess	avctx -> codec -> id		463641	0					
ANR	463841	PtrMemberAccess	avctx -> codec		463641	0					
ANR	463842	Identifier	avctx		463641	0					
ANR	463843	Identifier	codec		463641	1					
ANR	463844	Identifier	id		463641	1					
ANR	463845	CompoundStatement		55:30:1030:1030	463641	1					
ANR	463846	Label	case CODEC_ID_ADPCM_IMA_WAV :	59:4:1099:1126	463641	0	True				
ANR	463847	Identifier	CODEC_ID_ADPCM_IMA_WAV		463641	0					
ANR	463848	ExpressionStatement	avctx -> frame_size = ( BLKSIZE - 4 * avctx -> channels ) * 8 / ( 4 * avctx -> channels ) + 1	65:8:1242:1354	463641	1	True				
ANR	463849	AssignmentExpression	avctx -> frame_size = ( BLKSIZE - 4 * avctx -> channels ) * 8 / ( 4 * avctx -> channels ) + 1		463641	0		=			
ANR	463850	PtrMemberAccess	avctx -> frame_size		463641	0					
ANR	463851	Identifier	avctx		463641	0					
ANR	463852	Identifier	frame_size		463641	1					
ANR	463853	AdditiveExpression	( BLKSIZE - 4 * avctx -> channels ) * 8 / ( 4 * avctx -> channels ) + 1		463641	1		+			
ANR	463854	MultiplicativeExpression	( BLKSIZE - 4 * avctx -> channels ) * 8 / ( 4 * avctx -> channels )		463641	0		*			
ANR	463855	AdditiveExpression	BLKSIZE - 4 * avctx -> channels		463641	0		-			
ANR	463856	Identifier	BLKSIZE		463641	0					
ANR	463857	MultiplicativeExpression	4 * avctx -> channels		463641	1		*			
ANR	463858	PrimaryExpression	4		463641	0					
ANR	463859	PtrMemberAccess	avctx -> channels		463641	1					
ANR	463860	Identifier	avctx		463641	0					
ANR	463861	Identifier	channels		463641	1					
ANR	463862	MultiplicativeExpression	8 / ( 4 * avctx -> channels )		463641	1		/			
ANR	463863	PrimaryExpression	8		463641	0					
ANR	463864	MultiplicativeExpression	4 * avctx -> channels		463641	1		*			
ANR	463865	PrimaryExpression	4		463641	0					
ANR	463866	PtrMemberAccess	avctx -> channels		463641	1					
ANR	463867	Identifier	avctx		463641	0					
ANR	463868	Identifier	channels		463641	1					
ANR	463869	PrimaryExpression	1		463641	1					
ANR	463870	ExpressionStatement	avctx -> block_align = BLKSIZE	73:8:1468:1496	463641	2	True				
ANR	463871	AssignmentExpression	avctx -> block_align = BLKSIZE		463641	0		=			
ANR	463872	PtrMemberAccess	avctx -> block_align		463641	0					
ANR	463873	Identifier	avctx		463641	0					
ANR	463874	Identifier	block_align		463641	1					
ANR	463875	Identifier	BLKSIZE		463641	1					
ANR	463876	BreakStatement	break ;	75:8:1507:1512	463641	3	True				
ANR	463877	Label	case CODEC_ID_ADPCM_IMA_QT :	77:4:1519:1545	463641	4	True				
ANR	463878	Identifier	CODEC_ID_ADPCM_IMA_QT		463641	0					
ANR	463879	ExpressionStatement	avctx -> frame_size = 64	79:8:1556:1579	463641	5	True				
ANR	463880	AssignmentExpression	avctx -> frame_size = 64		463641	0		=			
ANR	463881	PtrMemberAccess	avctx -> frame_size		463641	0					
ANR	463882	Identifier	avctx		463641	0					
ANR	463883	Identifier	frame_size		463641	1					
ANR	463884	PrimaryExpression	64		463641	1					
ANR	463885	ExpressionStatement	avctx -> block_align = 34 * avctx -> channels	81:8:1590:1631	463641	6	True				
ANR	463886	AssignmentExpression	avctx -> block_align = 34 * avctx -> channels		463641	0		=			
ANR	463887	PtrMemberAccess	avctx -> block_align		463641	0					
ANR	463888	Identifier	avctx		463641	0					
ANR	463889	Identifier	block_align		463641	1					
ANR	463890	MultiplicativeExpression	34 * avctx -> channels		463641	1		*			
ANR	463891	PrimaryExpression	34		463641	0					
ANR	463892	PtrMemberAccess	avctx -> channels		463641	1					
ANR	463893	Identifier	avctx		463641	0					
ANR	463894	Identifier	channels		463641	1					
ANR	463895	BreakStatement	break ;	83:8:1642:1647	463641	7	True				
ANR	463896	Label	case CODEC_ID_ADPCM_MS :	85:4:1654:1676	463641	8	True				
ANR	463897	Identifier	CODEC_ID_ADPCM_MS		463641	0					
ANR	463898	ExpressionStatement	avctx -> frame_size = ( BLKSIZE - 7 * avctx -> channels ) * 2 / avctx -> channels + 2	91:8:1792:1899	463641	9	True				
ANR	463899	AssignmentExpression	avctx -> frame_size = ( BLKSIZE - 7 * avctx -> channels ) * 2 / avctx -> channels + 2		463641	0		=			
ANR	463900	PtrMemberAccess	avctx -> frame_size		463641	0					
ANR	463901	Identifier	avctx		463641	0					
ANR	463902	Identifier	frame_size		463641	1					
ANR	463903	AdditiveExpression	( BLKSIZE - 7 * avctx -> channels ) * 2 / avctx -> channels + 2		463641	1		+			
ANR	463904	MultiplicativeExpression	( BLKSIZE - 7 * avctx -> channels ) * 2 / avctx -> channels		463641	0		*			
ANR	463905	AdditiveExpression	BLKSIZE - 7 * avctx -> channels		463641	0		-			
ANR	463906	Identifier	BLKSIZE		463641	0					
ANR	463907	MultiplicativeExpression	7 * avctx -> channels		463641	1		*			
ANR	463908	PrimaryExpression	7		463641	0					
ANR	463909	PtrMemberAccess	avctx -> channels		463641	1					
ANR	463910	Identifier	avctx		463641	0					
ANR	463911	Identifier	channels		463641	1					
ANR	463912	MultiplicativeExpression	2 / avctx -> channels		463641	1		/			
ANR	463913	PrimaryExpression	2		463641	0					
ANR	463914	PtrMemberAccess	avctx -> channels		463641	1					
ANR	463915	Identifier	avctx		463641	0					
ANR	463916	Identifier	channels		463641	1					
ANR	463917	PrimaryExpression	2		463641	1					
ANR	463918	ExpressionStatement	avctx -> block_align = BLKSIZE	95:8:1910:1941	463641	10	True				
ANR	463919	AssignmentExpression	avctx -> block_align = BLKSIZE		463641	0		=			
ANR	463920	PtrMemberAccess	avctx -> block_align		463641	0					
ANR	463921	Identifier	avctx		463641	0					
ANR	463922	Identifier	block_align		463641	1					
ANR	463923	Identifier	BLKSIZE		463641	1					
ANR	463924	ExpressionStatement	avctx -> extradata_size = 32	97:8:1952:1978	463641	11	True				
ANR	463925	AssignmentExpression	avctx -> extradata_size = 32		463641	0		=			
ANR	463926	PtrMemberAccess	avctx -> extradata_size		463641	0					
ANR	463927	Identifier	avctx		463641	0					
ANR	463928	Identifier	extradata_size		463641	1					
ANR	463929	PrimaryExpression	32		463641	1					
ANR	463930	ExpressionStatement	extradata = avctx -> extradata = av_malloc ( avctx -> extradata_size )	99:8:1989:2052	463641	12	True				
ANR	463931	AssignmentExpression	extradata = avctx -> extradata = av_malloc ( avctx -> extradata_size )		463641	0		=			
ANR	463932	Identifier	extradata		463641	0					
ANR	463933	AssignmentExpression	avctx -> extradata = av_malloc ( avctx -> extradata_size )		463641	1		=			
ANR	463934	PtrMemberAccess	avctx -> extradata		463641	0					
ANR	463935	Identifier	avctx		463641	0					
ANR	463936	Identifier	extradata		463641	1					
ANR	463937	CallExpression	av_malloc ( avctx -> extradata_size )		463641	1					
ANR	463938	Callee	av_malloc		463641	0					
ANR	463939	Identifier	av_malloc		463641	0					
ANR	463940	ArgumentList	avctx -> extradata_size		463641	1					
ANR	463941	Argument	avctx -> extradata_size		463641	0					
ANR	463942	PtrMemberAccess	avctx -> extradata_size		463641	0					
ANR	463943	Identifier	avctx		463641	0					
ANR	463944	Identifier	extradata_size		463641	1					
ANR	463945	IfStatement	if ( ! extradata )		463641	13					
ANR	463946	Condition	! extradata	101:12:2067:2076	463641	0	True				
ANR	463947	UnaryOperationExpression	! extradata		463641	0					
ANR	463948	UnaryOperator	!		463641	0					
ANR	463949	Identifier	extradata		463641	1					
ANR	463950	ReturnStatement	return AVERROR ( ENOMEM ) ;	103:12:2092:2114	463641	1	True				
ANR	463951	CallExpression	AVERROR ( ENOMEM )		463641	0					
ANR	463952	Callee	AVERROR		463641	0					
ANR	463953	Identifier	AVERROR		463641	0					
ANR	463954	ArgumentList	ENOMEM		463641	1					
ANR	463955	Argument	ENOMEM		463641	0					
ANR	463956	Identifier	ENOMEM		463641	0					
ANR	463957	ExpressionStatement	"bytestream_put_le16 ( & extradata , avctx -> frame_size )"	105:8:2125:2175	463641	14	True				
ANR	463958	CallExpression	"bytestream_put_le16 ( & extradata , avctx -> frame_size )"		463641	0					
ANR	463959	Callee	bytestream_put_le16		463641	0					
ANR	463960	Identifier	bytestream_put_le16		463641	0					
ANR	463961	ArgumentList	& extradata		463641	1					
ANR	463962	Argument	& extradata		463641	0					
ANR	463963	UnaryOperationExpression	& extradata		463641	0					
ANR	463964	UnaryOperator	&		463641	0					
ANR	463965	Identifier	extradata		463641	1					
ANR	463966	Argument	avctx -> frame_size		463641	1					
ANR	463967	PtrMemberAccess	avctx -> frame_size		463641	0					
ANR	463968	Identifier	avctx		463641	0					
ANR	463969	Identifier	frame_size		463641	1					
ANR	463970	ExpressionStatement	"bytestream_put_le16 ( & extradata , 7 )"	107:8:2186:2220	463641	15	True				
ANR	463971	CallExpression	"bytestream_put_le16 ( & extradata , 7 )"		463641	0					
ANR	463972	Callee	bytestream_put_le16		463641	0					
ANR	463973	Identifier	bytestream_put_le16		463641	0					
ANR	463974	ArgumentList	& extradata		463641	1					
ANR	463975	Argument	& extradata		463641	0					
ANR	463976	UnaryOperationExpression	& extradata		463641	0					
ANR	463977	UnaryOperator	&		463641	0					
ANR	463978	Identifier	extradata		463641	1					
ANR	463979	Argument	7		463641	1					
ANR	463980	PrimaryExpression	7		463641	0					
ANR	463981	ForStatement	for ( i = 0 ; i < 7 ; i ++ )		463641	16					
ANR	463982	ForInit	i = 0 ;	109:13:2251:2256	463641	0	True				
ANR	463983	AssignmentExpression	i = 0		463641	0		=			
ANR	463984	Identifier	i		463641	0					
ANR	463985	PrimaryExpression	0		463641	1					
ANR	463986	Condition	i < 7	109:20:2258:2262	463641	1	True				
ANR	463987	RelationalExpression	i < 7		463641	0		<			
ANR	463988	Identifier	i		463641	0					
ANR	463989	PrimaryExpression	7		463641	1					
ANR	463990	PostIncDecOperationExpression	i ++	109:27:2265:2267	463641	2	True				
ANR	463991	Identifier	i		463641	0					
ANR	463992	IncDec	++		463641	1					
ANR	463993	CompoundStatement		107:32:2208:2208	463641	3					
ANR	463994	ExpressionStatement	"bytestream_put_le16 ( & extradata , ff_adpcm_AdaptCoeff1 [ i ] * 4 )"	111:12:2285:2345	463641	0	True				
ANR	463995	CallExpression	"bytestream_put_le16 ( & extradata , ff_adpcm_AdaptCoeff1 [ i ] * 4 )"		463641	0					
ANR	463996	Callee	bytestream_put_le16		463641	0					
ANR	463997	Identifier	bytestream_put_le16		463641	0					
ANR	463998	ArgumentList	& extradata		463641	1					
ANR	463999	Argument	& extradata		463641	0					
ANR	464000	UnaryOperationExpression	& extradata		463641	0					
ANR	464001	UnaryOperator	&		463641	0					
ANR	464002	Identifier	extradata		463641	1					
ANR	464003	Argument	ff_adpcm_AdaptCoeff1 [ i ] * 4		463641	1					
ANR	464004	MultiplicativeExpression	ff_adpcm_AdaptCoeff1 [ i ] * 4		463641	0		*			
ANR	464005	ArrayIndexing	ff_adpcm_AdaptCoeff1 [ i ]		463641	0					
ANR	464006	Identifier	ff_adpcm_AdaptCoeff1		463641	0					
ANR	464007	Identifier	i		463641	1					
ANR	464008	PrimaryExpression	4		463641	1					
ANR	464009	ExpressionStatement	"bytestream_put_le16 ( & extradata , ff_adpcm_AdaptCoeff2 [ i ] * 4 )"	113:12:2360:2420	463641	1	True				
ANR	464010	CallExpression	"bytestream_put_le16 ( & extradata , ff_adpcm_AdaptCoeff2 [ i ] * 4 )"		463641	0					
ANR	464011	Callee	bytestream_put_le16		463641	0					
ANR	464012	Identifier	bytestream_put_le16		463641	0					
ANR	464013	ArgumentList	& extradata		463641	1					
ANR	464014	Argument	& extradata		463641	0					
ANR	464015	UnaryOperationExpression	& extradata		463641	0					
ANR	464016	UnaryOperator	&		463641	0					
ANR	464017	Identifier	extradata		463641	1					
ANR	464018	Argument	ff_adpcm_AdaptCoeff2 [ i ] * 4		463641	1					
ANR	464019	MultiplicativeExpression	ff_adpcm_AdaptCoeff2 [ i ] * 4		463641	0		*			
ANR	464020	ArrayIndexing	ff_adpcm_AdaptCoeff2 [ i ]		463641	0					
ANR	464021	Identifier	ff_adpcm_AdaptCoeff2		463641	0					
ANR	464022	Identifier	i		463641	1					
ANR	464023	PrimaryExpression	4		463641	1					
ANR	464024	BreakStatement	break ;	117:8:2442:2447	463641	17	True				
ANR	464025	Label	case CODEC_ID_ADPCM_YAMAHA :	119:4:2454:2480	463641	18	True				
ANR	464026	Identifier	CODEC_ID_ADPCM_YAMAHA		463641	0					
ANR	464027	ExpressionStatement	avctx -> frame_size = BLKSIZE * avctx -> channels	121:8:2491:2537	463641	19	True				
ANR	464028	AssignmentExpression	avctx -> frame_size = BLKSIZE * avctx -> channels		463641	0		=			
ANR	464029	PtrMemberAccess	avctx -> frame_size		463641	0					
ANR	464030	Identifier	avctx		463641	0					
ANR	464031	Identifier	frame_size		463641	1					
ANR	464032	MultiplicativeExpression	BLKSIZE * avctx -> channels		463641	1		*			
ANR	464033	Identifier	BLKSIZE		463641	0					
ANR	464034	PtrMemberAccess	avctx -> channels		463641	1					
ANR	464035	Identifier	avctx		463641	0					
ANR	464036	Identifier	channels		463641	1					
ANR	464037	ExpressionStatement	avctx -> block_align = BLKSIZE	123:8:2548:2576	463641	20	True				
ANR	464038	AssignmentExpression	avctx -> block_align = BLKSIZE		463641	0		=			
ANR	464039	PtrMemberAccess	avctx -> block_align		463641	0					
ANR	464040	Identifier	avctx		463641	0					
ANR	464041	Identifier	block_align		463641	1					
ANR	464042	Identifier	BLKSIZE		463641	1					
ANR	464043	BreakStatement	break ;	125:8:2587:2592	463641	21	True				
ANR	464044	Label	case CODEC_ID_ADPCM_SWF :	127:4:2599:2622	463641	22	True				
ANR	464045	Identifier	CODEC_ID_ADPCM_SWF		463641	0					
ANR	464046	IfStatement	if ( avctx -> sample_rate != 11025 && avctx -> sample_rate != 22050 && avctx -> sample_rate != 44100 )		463641	23					
ANR	464047	Condition	avctx -> sample_rate != 11025 && avctx -> sample_rate != 22050 && avctx -> sample_rate != 44100	129:12:2637:2751	463641	0	True				
ANR	464048	AndExpression	avctx -> sample_rate != 11025 && avctx -> sample_rate != 22050 && avctx -> sample_rate != 44100		463641	0		&&			
ANR	464049	EqualityExpression	avctx -> sample_rate != 11025		463641	0		!=			
ANR	464050	PtrMemberAccess	avctx -> sample_rate		463641	0					
ANR	464051	Identifier	avctx		463641	0					
ANR	464052	Identifier	sample_rate		463641	1					
ANR	464053	PrimaryExpression	11025		463641	1					
ANR	464054	AndExpression	avctx -> sample_rate != 22050 && avctx -> sample_rate != 44100		463641	1		&&			
ANR	464055	EqualityExpression	avctx -> sample_rate != 22050		463641	0		!=			
ANR	464056	PtrMemberAccess	avctx -> sample_rate		463641	0					
ANR	464057	Identifier	avctx		463641	0					
ANR	464058	Identifier	sample_rate		463641	1					
ANR	464059	PrimaryExpression	22050		463641	1					
ANR	464060	EqualityExpression	avctx -> sample_rate != 44100		463641	1		!=			
ANR	464061	PtrMemberAccess	avctx -> sample_rate		463641	0					
ANR	464062	Identifier	avctx		463641	0					
ANR	464063	Identifier	sample_rate		463641	1					
ANR	464064	PrimaryExpression	44100		463641	1					
ANR	464065	CompoundStatement		131:41:2692:2692	463641	1					
ANR	464066	Statement	av_log	135:12:2769:2774	463641	0	True				
ANR	464067	Statement	(	135:18:2775:2775	463641	1	True				
ANR	464068	Statement	avctx	135:19:2776:2780	463641	2	True				
ANR	464069	Statement	","	135:24:2781:2781	463641	3	True				
ANR	464070	Statement	AV_LOG_ERROR	135:26:2783:2794	463641	4	True				
ANR	464071	Statement	","	135:38:2795:2795	463641	5	True				
ANR	464072	Statement	"""Sample rate must be 11025, """	135:40:2797:2825	463641	6	True				
ANR	464073	Statement	"""22050 or 44100\\n"""	137:19:2847:2864	463641	7	True				
ANR	464074	Statement	)	137:37:2865:2865	463641	8	True				
ANR	464075	ExpressionStatement		137:38:2866:2866	463641	9	True				
ANR	464076	GotoStatement	goto error ;	139:12:2881:2891	463641	10	True				
ANR	464077	Identifier	error		463641	0					
ANR	464078	ExpressionStatement	avctx -> frame_size = 512 * ( avctx -> sample_rate / 11025 )	143:8:2913:2967	463641	24	True				
ANR	464079	AssignmentExpression	avctx -> frame_size = 512 * ( avctx -> sample_rate / 11025 )		463641	0		=			
ANR	464080	PtrMemberAccess	avctx -> frame_size		463641	0					
ANR	464081	Identifier	avctx		463641	0					
ANR	464082	Identifier	frame_size		463641	1					
ANR	464083	MultiplicativeExpression	512 * ( avctx -> sample_rate / 11025 )		463641	1		*			
ANR	464084	PrimaryExpression	512		463641	0					
ANR	464085	MultiplicativeExpression	avctx -> sample_rate / 11025		463641	1		/			
ANR	464086	PtrMemberAccess	avctx -> sample_rate		463641	0					
ANR	464087	Identifier	avctx		463641	0					
ANR	464088	Identifier	sample_rate		463641	1					
ANR	464089	PrimaryExpression	11025		463641	1					
ANR	464090	BreakStatement	break ;	145:8:2978:2983	463641	25	True				
ANR	464091	Label	default :	147:4:2990:2997	463641	26	True				
ANR	464092	Identifier	default		463641	0					
ANR	464093	GotoStatement	goto error ;	149:8:3008:3018	463641	27	True				
ANR	464094	Identifier	error		463641	0					
ANR	464095	ExpressionStatement	avctx -> coded_frame = avcodec_alloc_frame ( )	155:4:3034:3076	463641	8	True				
ANR	464096	AssignmentExpression	avctx -> coded_frame = avcodec_alloc_frame ( )		463641	0		=			
ANR	464097	PtrMemberAccess	avctx -> coded_frame		463641	0					
ANR	464098	Identifier	avctx		463641	0					
ANR	464099	Identifier	coded_frame		463641	1					
ANR	464100	CallExpression	avcodec_alloc_frame ( )		463641	1					
ANR	464101	Callee	avcodec_alloc_frame		463641	0					
ANR	464102	Identifier	avcodec_alloc_frame		463641	0					
ANR	464103	ArgumentList			463641	1					
ANR	464104	ReturnStatement	return 0 ;	159:4:3085:3093	463641	9	True				
ANR	464105	PrimaryExpression	0		463641	0					
ANR	464106	Label	error :	161:0:3096:3101	463641	10	True				
ANR	464107	Identifier	error		463641	0					
ANR	464108	ExpressionStatement	av_freep ( & s -> paths )	163:4:3108:3127	463641	11	True				
ANR	464109	CallExpression	av_freep ( & s -> paths )		463641	0					
ANR	464110	Callee	av_freep		463641	0					
ANR	464111	Identifier	av_freep		463641	0					
ANR	464112	ArgumentList	& s -> paths		463641	1					
ANR	464113	Argument	& s -> paths		463641	0					
ANR	464114	UnaryOperationExpression	& s -> paths		463641	0					
ANR	464115	UnaryOperator	&		463641	0					
ANR	464116	PtrMemberAccess	s -> paths		463641	1					
ANR	464117	Identifier	s		463641	0					
ANR	464118	Identifier	paths		463641	1					
ANR	464119	ExpressionStatement	av_freep ( & s -> node_buf )	165:4:3134:3156	463641	12	True				
ANR	464120	CallExpression	av_freep ( & s -> node_buf )		463641	0					
ANR	464121	Callee	av_freep		463641	0					
ANR	464122	Identifier	av_freep		463641	0					
ANR	464123	ArgumentList	& s -> node_buf		463641	1					
ANR	464124	Argument	& s -> node_buf		463641	0					
ANR	464125	UnaryOperationExpression	& s -> node_buf		463641	0					
ANR	464126	UnaryOperator	&		463641	0					
ANR	464127	PtrMemberAccess	s -> node_buf		463641	1					
ANR	464128	Identifier	s		463641	0					
ANR	464129	Identifier	node_buf		463641	1					
ANR	464130	ExpressionStatement	av_freep ( & s -> nodep_buf )	167:4:3163:3186	463641	13	True				
ANR	464131	CallExpression	av_freep ( & s -> nodep_buf )		463641	0					
ANR	464132	Callee	av_freep		463641	0					
ANR	464133	Identifier	av_freep		463641	0					
ANR	464134	ArgumentList	& s -> nodep_buf		463641	1					
ANR	464135	Argument	& s -> nodep_buf		463641	0					
ANR	464136	UnaryOperationExpression	& s -> nodep_buf		463641	0					
ANR	464137	UnaryOperator	&		463641	0					
ANR	464138	PtrMemberAccess	s -> nodep_buf		463641	1					
ANR	464139	Identifier	s		463641	0					
ANR	464140	Identifier	nodep_buf		463641	1					
ANR	464141	ExpressionStatement	av_freep ( & s -> trellis_hash )	169:4:3193:3219	463641	14	True				
ANR	464142	CallExpression	av_freep ( & s -> trellis_hash )		463641	0					
ANR	464143	Callee	av_freep		463641	0					
ANR	464144	Identifier	av_freep		463641	0					
ANR	464145	ArgumentList	& s -> trellis_hash		463641	1					
ANR	464146	Argument	& s -> trellis_hash		463641	0					
ANR	464147	UnaryOperationExpression	& s -> trellis_hash		463641	0					
ANR	464148	UnaryOperator	&		463641	0					
ANR	464149	PtrMemberAccess	s -> trellis_hash		463641	1					
ANR	464150	Identifier	s		463641	0					
ANR	464151	Identifier	trellis_hash		463641	1					
ANR	464152	ReturnStatement	return - 1 ;	171:4:3226:3235	463641	15	True				
ANR	464153	UnaryOperationExpression	- 1		463641	0					
ANR	464154	UnaryOperator	-		463641	0					
ANR	464155	PrimaryExpression	1		463641	1					
ANR	464156	ReturnType	static av_cold int		463641	1					
ANR	464157	Identifier	adpcm_encode_init		463641	2					
ANR	464158	ParameterList	AVCodecContext * avctx		463641	3					
ANR	464159	Parameter	AVCodecContext * avctx	1:37:37:57	463641	0	True				
ANR	464160	ParameterType	AVCodecContext *		463641	0					
ANR	464161	Identifier	avctx		463641	1					
ANR	464162	CFGEntryNode	ENTRY		463641		True				
ANR	464163	CFGExitNode	EXIT		463641		True				
ANR	464164	Symbol	av_malloc		463641						
ANR	464165	Symbol	* s -> trellis_hash		463641						
ANR	464166	Symbol	ENOMEM		463641						
ANR	464167	Symbol	* ff_adpcm_AdaptCoeff1		463641						
ANR	464168	Symbol	* ff_adpcm_AdaptCoeff2		463641						
ANR	464169	Symbol	avcodec_alloc_frame		463641						
ANR	464170	Symbol	max_paths		463641						
ANR	464171	Symbol	s -> node_buf		463641						
ANR	464172	Symbol	avctx -> channels		463641						
ANR	464173	Symbol	BLKSIZE		463641						
ANR	464174	Symbol	* s -> paths		463641						
ANR	464175	Symbol	FREEZE_INTERVAL		463641						
ANR	464176	Symbol	* avctx -> codec		463641						
ANR	464177	Symbol	s -> paths		463641						
ANR	464178	Symbol	avctx -> codec		463641						
ANR	464179	Symbol	* s -> nodep_buf		463641						
ANR	464180	Symbol	* * avctx		463641						
ANR	464181	Symbol	ff_adpcm_AdaptCoeff1		463641						
ANR	464182	Symbol	ff_adpcm_AdaptCoeff2		463641						
ANR	464183	Symbol	* avctx		463641						
ANR	464184	Symbol	s -> nodep_buf		463641						
ANR	464185	Symbol	avctx -> frame_size		463641						
ANR	464186	Symbol	avctx -> bits_per_coded_sample		463641						
ANR	464187	Symbol	& s -> node_buf		463641						
ANR	464188	Symbol	error		463641						
ANR	464189	Symbol	& s -> paths		463641						
ANR	464190	Symbol	& extradata		463641						
ANR	464191	Symbol	avctx -> block_align		463641						
ANR	464192	Symbol	avctx -> coded_frame		463641						
ANR	464193	Symbol	avctx -> trellis		463641						
ANR	464194	Symbol	extradata		463641						
ANR	464195	Symbol	* * s		463641						
ANR	464196	Symbol	& s -> trellis_hash		463641						
ANR	464197	Symbol	avctx		463641						
ANR	464198	Symbol	frontier		463641						
ANR	464199	Symbol	avctx -> extradata		463641						
ANR	464200	Symbol	av_get_bits_per_sample		463641						
ANR	464201	Symbol	AV_LOG_ERROR		463641						
ANR	464202	Symbol	s -> trellis_hash		463641						
ANR	464203	Symbol	avctx -> extradata_size		463641						
ANR	464204	Symbol	i		463641						
ANR	464205	Symbol	* s -> node_buf		463641						
ANR	464206	Symbol	avctx -> priv_data		463641						
ANR	464207	Symbol	avctx -> sample_rate		463641						
ANR	464208	Symbol	avctx -> codec -> id		463641						
ANR	464209	Symbol	& s -> nodep_buf		463641						
ANR	464210	Symbol	s		463641						
ANR	464211	Symbol	* i		463641						
ANR	464212	Symbol	AVERROR		463641						
ANR	464213	Symbol	* s		463641						
