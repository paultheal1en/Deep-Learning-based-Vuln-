command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8020067	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sun4c_hw_init_1.c								
ANR	8020068	Function	sun4c_hw_init	1:0:0:5938							
ANR	8020069	FunctionDef	"sun4c_hw_init (const struct hwdef * hwdef , ram_addr_t RAM_size , const char * boot_device , DisplayState * ds , const char * kernel_filename , const char * kernel_cmdline , const char * initrd_filename , const char * cpu_model)"		8020068	0					
ANR	8020070	CompoundStatement		11:0:335:5938	8020068	0					
ANR	8020071	IdentifierDeclStatement	CPUState * env ;	13:4:342:355	8020068	0	True				
ANR	8020072	IdentifierDecl	* env		8020068	0					
ANR	8020073	IdentifierDeclType	CPUState *		8020068	0					
ANR	8020074	Identifier	env		8020068	1					
ANR	8020075	IdentifierDeclStatement	unsigned int i ;	15:4:362:376	8020068	1	True				
ANR	8020076	IdentifierDecl	i		8020068	0					
ANR	8020077	IdentifierDeclType	unsigned int		8020068	0					
ANR	8020078	Identifier	i		8020068	1					
ANR	8020079	IdentifierDeclStatement	"void * iommu , * espdma , * ledma , * main_esp , * nvram ;"	17:4:383:430	8020068	2	True				
ANR	8020080	IdentifierDecl	* iommu		8020068	0					
ANR	8020081	IdentifierDeclType	void *		8020068	0					
ANR	8020082	Identifier	iommu		8020068	1					
ANR	8020083	IdentifierDecl	* espdma		8020068	1					
ANR	8020084	IdentifierDeclType	void *		8020068	0					
ANR	8020085	Identifier	espdma		8020068	1					
ANR	8020086	IdentifierDecl	* ledma		8020068	2					
ANR	8020087	IdentifierDeclType	void *		8020068	0					
ANR	8020088	Identifier	ledma		8020068	1					
ANR	8020089	IdentifierDecl	* main_esp		8020068	3					
ANR	8020090	IdentifierDeclType	void *		8020068	0					
ANR	8020091	Identifier	main_esp		8020068	1					
ANR	8020092	IdentifierDecl	* nvram		8020068	4					
ANR	8020093	IdentifierDeclType	void *		8020068	0					
ANR	8020094	Identifier	nvram		8020068	1					
ANR	8020095	IdentifierDeclStatement	"qemu_irq * cpu_irqs , * slavio_irq , * espdma_irq , * ledma_irq ;"	19:4:437:493	8020068	3	True				
ANR	8020096	IdentifierDecl	* cpu_irqs		8020068	0					
ANR	8020097	IdentifierDeclType	qemu_irq *		8020068	0					
ANR	8020098	Identifier	cpu_irqs		8020068	1					
ANR	8020099	IdentifierDecl	* slavio_irq		8020068	1					
ANR	8020100	IdentifierDeclType	qemu_irq *		8020068	0					
ANR	8020101	Identifier	slavio_irq		8020068	1					
ANR	8020102	IdentifierDecl	* espdma_irq		8020068	2					
ANR	8020103	IdentifierDeclType	qemu_irq *		8020068	0					
ANR	8020104	Identifier	espdma_irq		8020068	1					
ANR	8020105	IdentifierDecl	* ledma_irq		8020068	3					
ANR	8020106	IdentifierDeclType	qemu_irq *		8020068	0					
ANR	8020107	Identifier	ledma_irq		8020068	1					
ANR	8020108	IdentifierDeclStatement	"qemu_irq * esp_reset , * le_reset ;"	21:4:500:530	8020068	4	True				
ANR	8020109	IdentifierDecl	* esp_reset		8020068	0					
ANR	8020110	IdentifierDeclType	qemu_irq *		8020068	0					
ANR	8020111	Identifier	esp_reset		8020068	1					
ANR	8020112	IdentifierDecl	* le_reset		8020068	1					
ANR	8020113	IdentifierDeclType	qemu_irq *		8020068	0					
ANR	8020114	Identifier	le_reset		8020068	1					
ANR	8020115	IdentifierDeclStatement	qemu_irq * fdc_tc ;	23:4:537:553	8020068	5	True				
ANR	8020116	IdentifierDecl	* fdc_tc		8020068	0					
ANR	8020117	IdentifierDeclType	qemu_irq *		8020068	0					
ANR	8020118	Identifier	fdc_tc		8020068	1					
ANR	8020119	IdentifierDeclStatement	"unsigned long prom_offset , kernel_size ;"	25:4:560:598	8020068	6	True				
ANR	8020120	IdentifierDecl	prom_offset		8020068	0					
ANR	8020121	IdentifierDeclType	unsigned long		8020068	0					
ANR	8020122	Identifier	prom_offset		8020068	1					
ANR	8020123	IdentifierDecl	kernel_size		8020068	1					
ANR	8020124	IdentifierDeclType	unsigned long		8020068	0					
ANR	8020125	Identifier	kernel_size		8020068	1					
ANR	8020126	IdentifierDeclStatement	int ret ;	27:4:605:612	8020068	7	True				
ANR	8020127	IdentifierDecl	ret		8020068	0					
ANR	8020128	IdentifierDeclType	int		8020068	0					
ANR	8020129	Identifier	ret		8020068	1					
ANR	8020130	IdentifierDeclStatement	char buf [ 1024 ] ;	29:4:619:633	8020068	8	True				
ANR	8020131	IdentifierDecl	buf [ 1024 ]		8020068	0					
ANR	8020132	IdentifierDeclType	char [ 1024 ]		8020068	0					
ANR	8020133	Identifier	buf		8020068	1					
ANR	8020134	PrimaryExpression	1024		8020068	2					
ANR	8020135	IdentifierDeclStatement	BlockDriverState * fd [ MAX_FD ] ;	31:4:640:668	8020068	9	True				
ANR	8020136	IdentifierDecl	* fd [ MAX_FD ]		8020068	0					
ANR	8020137	IdentifierDeclType	BlockDriverState * [ MAX_FD ]		8020068	0					
ANR	8020138	Identifier	fd		8020068	1					
ANR	8020139	Identifier	MAX_FD		8020068	2					
ANR	8020140	IdentifierDeclStatement	int drive_index ;	33:4:675:690	8020068	10	True				
ANR	8020141	IdentifierDecl	drive_index		8020068	0					
ANR	8020142	IdentifierDeclType	int		8020068	0					
ANR	8020143	Identifier	drive_index		8020068	1					
ANR	8020144	IdentifierDeclStatement	void * fw_cfg ;	35:4:697:709	8020068	11	True				
ANR	8020145	IdentifierDecl	* fw_cfg		8020068	0					
ANR	8020146	IdentifierDeclType	void *		8020068	0					
ANR	8020147	Identifier	fw_cfg		8020068	1					
ANR	8020148	IfStatement	if ( ! cpu_model )		8020068	12					
ANR	8020149	Condition	! cpu_model	41:8:742:751	8020068	0	True				
ANR	8020150	UnaryOperationExpression	! cpu_model		8020068	0					
ANR	8020151	UnaryOperator	!		8020068	0					
ANR	8020152	Identifier	cpu_model		8020068	1					
ANR	8020153	ExpressionStatement	cpu_model = hwdef -> default_cpu_model	43:8:763:799	8020068	1	True				
ANR	8020154	AssignmentExpression	cpu_model = hwdef -> default_cpu_model		8020068	0		=			
ANR	8020155	Identifier	cpu_model		8020068	0					
ANR	8020156	PtrMemberAccess	hwdef -> default_cpu_model		8020068	1					
ANR	8020157	Identifier	hwdef		8020068	0					
ANR	8020158	Identifier	default_cpu_model		8020068	1					
ANR	8020159	ExpressionStatement	env = cpu_init ( cpu_model )	47:4:808:833	8020068	13	True				
ANR	8020160	AssignmentExpression	env = cpu_init ( cpu_model )		8020068	0		=			
ANR	8020161	Identifier	env		8020068	0					
ANR	8020162	CallExpression	cpu_init ( cpu_model )		8020068	1					
ANR	8020163	Callee	cpu_init		8020068	0					
ANR	8020164	Identifier	cpu_init		8020068	0					
ANR	8020165	ArgumentList	cpu_model		8020068	1					
ANR	8020166	Argument	cpu_model		8020068	0					
ANR	8020167	Identifier	cpu_model		8020068	0					
ANR	8020168	IfStatement	if ( ! env )		8020068	14					
ANR	8020169	Condition	! env	49:8:844:847	8020068	0	True				
ANR	8020170	UnaryOperationExpression	! env		8020068	0					
ANR	8020171	UnaryOperator	!		8020068	0					
ANR	8020172	Identifier	env		8020068	1					
ANR	8020173	CompoundStatement		39:14:514:514	8020068	1					
ANR	8020174	ExpressionStatement	"fprintf ( stderr , ""qemu: Unable to find Sparc CPU definition\\n"" )"	51:8:861:923	8020068	0	True				
ANR	8020175	CallExpression	"fprintf ( stderr , ""qemu: Unable to find Sparc CPU definition\\n"" )"		8020068	0					
ANR	8020176	Callee	fprintf		8020068	0					
ANR	8020177	Identifier	fprintf		8020068	0					
ANR	8020178	ArgumentList	stderr		8020068	1					
ANR	8020179	Argument	stderr		8020068	0					
ANR	8020180	Identifier	stderr		8020068	0					
ANR	8020181	Argument	"""qemu: Unable to find Sparc CPU definition\\n"""		8020068	1					
ANR	8020182	PrimaryExpression	"""qemu: Unable to find Sparc CPU definition\\n"""		8020068	0					
ANR	8020183	ExpressionStatement	exit ( 1 )	53:8:934:941	8020068	1	True				
ANR	8020184	CallExpression	exit ( 1 )		8020068	0					
ANR	8020185	Callee	exit		8020068	0					
ANR	8020186	Identifier	exit		8020068	0					
ANR	8020187	ArgumentList	1		8020068	1					
ANR	8020188	Argument	1		8020068	0					
ANR	8020189	PrimaryExpression	1		8020068	0					
ANR	8020190	ExpressionStatement	"cpu_sparc_set_id ( env , 0 )"	59:4:957:981	8020068	15	True				
ANR	8020191	CallExpression	"cpu_sparc_set_id ( env , 0 )"		8020068	0					
ANR	8020192	Callee	cpu_sparc_set_id		8020068	0					
ANR	8020193	Identifier	cpu_sparc_set_id		8020068	0					
ANR	8020194	ArgumentList	env		8020068	1					
ANR	8020195	Argument	env		8020068	0					
ANR	8020196	Identifier	env		8020068	0					
ANR	8020197	Argument	0		8020068	1					
ANR	8020198	PrimaryExpression	0		8020068	0					
ANR	8020199	ExpressionStatement	"qemu_register_reset ( main_cpu_reset , env )"	63:4:990:1030	8020068	16	True				
ANR	8020200	CallExpression	"qemu_register_reset ( main_cpu_reset , env )"		8020068	0					
ANR	8020201	Callee	qemu_register_reset		8020068	0					
ANR	8020202	Identifier	qemu_register_reset		8020068	0					
ANR	8020203	ArgumentList	main_cpu_reset		8020068	1					
ANR	8020204	Argument	main_cpu_reset		8020068	0					
ANR	8020205	Identifier	main_cpu_reset		8020068	0					
ANR	8020206	Argument	env		8020068	1					
ANR	8020207	Identifier	env		8020068	0					
ANR	8020208	ExpressionStatement	"cpu_irqs = qemu_allocate_irqs ( cpu_set_irq , env , MAX_PILS )"	65:4:1037:1094	8020068	17	True				
ANR	8020209	AssignmentExpression	"cpu_irqs = qemu_allocate_irqs ( cpu_set_irq , env , MAX_PILS )"		8020068	0		=			
ANR	8020210	Identifier	cpu_irqs		8020068	0					
ANR	8020211	CallExpression	"qemu_allocate_irqs ( cpu_set_irq , env , MAX_PILS )"		8020068	1					
ANR	8020212	Callee	qemu_allocate_irqs		8020068	0					
ANR	8020213	Identifier	qemu_allocate_irqs		8020068	0					
ANR	8020214	ArgumentList	cpu_set_irq		8020068	1					
ANR	8020215	Argument	cpu_set_irq		8020068	0					
ANR	8020216	Identifier	cpu_set_irq		8020068	0					
ANR	8020217	Argument	env		8020068	1					
ANR	8020218	Identifier	env		8020068	0					
ANR	8020219	Argument	MAX_PILS		8020068	2					
ANR	8020220	Identifier	MAX_PILS		8020068	0					
ANR	8020221	ExpressionStatement	env -> prom_addr = hwdef -> slavio_base	67:4:1101:1136	8020068	18	True				
ANR	8020222	AssignmentExpression	env -> prom_addr = hwdef -> slavio_base		8020068	0		=			
ANR	8020223	PtrMemberAccess	env -> prom_addr		8020068	0					
ANR	8020224	Identifier	env		8020068	0					
ANR	8020225	Identifier	prom_addr		8020068	1					
ANR	8020226	PtrMemberAccess	hwdef -> slavio_base		8020068	1					
ANR	8020227	Identifier	hwdef		8020068	0					
ANR	8020228	Identifier	slavio_base		8020068	1					
ANR	8020229	IfStatement	if ( ( uint64_t ) RAM_size > hwdef -> max_mem )		8020068	19					
ANR	8020230	Condition	( uint64_t ) RAM_size > hwdef -> max_mem	73:8:1173:1207	8020068	0	True				
ANR	8020231	RelationalExpression	( uint64_t ) RAM_size > hwdef -> max_mem		8020068	0		>			
ANR	8020232	CastExpression	( uint64_t ) RAM_size		8020068	0					
ANR	8020233	CastTarget	uint64_t		8020068	0					
ANR	8020234	Identifier	RAM_size		8020068	1					
ANR	8020235	PtrMemberAccess	hwdef -> max_mem		8020068	1					
ANR	8020236	Identifier	hwdef		8020068	0					
ANR	8020237	Identifier	max_mem		8020068	1					
ANR	8020238	CompoundStatement		63:45:874:874	8020068	1					
ANR	8020239	ExpressionStatement	"fprintf ( stderr , ""qemu: Too much memory for this machine: %d, maximum %d\\n"" , ( unsigned int ) ( RAM_size / ( 1024 * 1024 ) ) , ( unsigned int ) ( hwdef -> max_mem / ( 1024 * 1024 ) ) )"	75:8:1221:1437	8020068	0	True				
ANR	8020240	CallExpression	"fprintf ( stderr , ""qemu: Too much memory for this machine: %d, maximum %d\\n"" , ( unsigned int ) ( RAM_size / ( 1024 * 1024 ) ) , ( unsigned int ) ( hwdef -> max_mem / ( 1024 * 1024 ) ) )"		8020068	0					
ANR	8020241	Callee	fprintf		8020068	0					
ANR	8020242	Identifier	fprintf		8020068	0					
ANR	8020243	ArgumentList	stderr		8020068	1					
ANR	8020244	Argument	stderr		8020068	0					
ANR	8020245	Identifier	stderr		8020068	0					
ANR	8020246	Argument	"""qemu: Too much memory for this machine: %d, maximum %d\\n"""		8020068	1					
ANR	8020247	PrimaryExpression	"""qemu: Too much memory for this machine: %d, maximum %d\\n"""		8020068	0					
ANR	8020248	Argument	( unsigned int ) ( RAM_size / ( 1024 * 1024 ) )		8020068	2					
ANR	8020249	CastExpression	( unsigned int ) ( RAM_size / ( 1024 * 1024 ) )		8020068	0					
ANR	8020250	CastTarget	unsigned int		8020068	0					
ANR	8020251	MultiplicativeExpression	RAM_size / ( 1024 * 1024 )		8020068	1		/			
ANR	8020252	Identifier	RAM_size		8020068	0					
ANR	8020253	MultiplicativeExpression	1024 * 1024		8020068	1		*			
ANR	8020254	PrimaryExpression	1024		8020068	0					
ANR	8020255	PrimaryExpression	1024		8020068	1					
ANR	8020256	Argument	( unsigned int ) ( hwdef -> max_mem / ( 1024 * 1024 ) )		8020068	3					
ANR	8020257	CastExpression	( unsigned int ) ( hwdef -> max_mem / ( 1024 * 1024 ) )		8020068	0					
ANR	8020258	CastTarget	unsigned int		8020068	0					
ANR	8020259	MultiplicativeExpression	hwdef -> max_mem / ( 1024 * 1024 )		8020068	1		/			
ANR	8020260	PtrMemberAccess	hwdef -> max_mem		8020068	0					
ANR	8020261	Identifier	hwdef		8020068	0					
ANR	8020262	Identifier	max_mem		8020068	1					
ANR	8020263	MultiplicativeExpression	1024 * 1024		8020068	1		*			
ANR	8020264	PrimaryExpression	1024		8020068	0					
ANR	8020265	PrimaryExpression	1024		8020068	1					
ANR	8020266	ExpressionStatement	exit ( 1 )	83:8:1448:1455	8020068	1	True				
ANR	8020267	CallExpression	exit ( 1 )		8020068	0					
ANR	8020268	Callee	exit		8020068	0					
ANR	8020269	Identifier	exit		8020068	0					
ANR	8020270	ArgumentList	1		8020068	1					
ANR	8020271	Argument	1		8020068	0					
ANR	8020272	PrimaryExpression	1		8020068	0					
ANR	8020273	ExpressionStatement	"cpu_register_physical_memory ( 0 , RAM_size , 0 )"	87:4:1469:1513	8020068	20	True				
ANR	8020274	CallExpression	"cpu_register_physical_memory ( 0 , RAM_size , 0 )"		8020068	0					
ANR	8020275	Callee	cpu_register_physical_memory		8020068	0					
ANR	8020276	Identifier	cpu_register_physical_memory		8020068	0					
ANR	8020277	ArgumentList	0		8020068	1					
ANR	8020278	Argument	0		8020068	0					
ANR	8020279	PrimaryExpression	0		8020068	0					
ANR	8020280	Argument	RAM_size		8020068	1					
ANR	8020281	Identifier	RAM_size		8020068	0					
ANR	8020282	Argument	0		8020068	2					
ANR	8020283	PrimaryExpression	0		8020068	0					
ANR	8020284	ExpressionStatement	prom_offset = RAM_size + hwdef -> vram_size	93:4:1548:1589	8020068	21	True				
ANR	8020285	AssignmentExpression	prom_offset = RAM_size + hwdef -> vram_size		8020068	0		=			
ANR	8020286	Identifier	prom_offset		8020068	0					
ANR	8020287	AdditiveExpression	RAM_size + hwdef -> vram_size		8020068	1		+			
ANR	8020288	Identifier	RAM_size		8020068	0					
ANR	8020289	PtrMemberAccess	hwdef -> vram_size		8020068	1					
ANR	8020290	Identifier	hwdef		8020068	0					
ANR	8020291	Identifier	vram_size		8020068	1					
ANR	8020292	ExpressionStatement	"cpu_register_physical_memory ( hwdef -> slavio_base , ( PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK , prom_offset | IO_MEM_ROM )"	95:4:1596:1831	8020068	22	True				
ANR	8020293	CallExpression	"cpu_register_physical_memory ( hwdef -> slavio_base , ( PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK , prom_offset | IO_MEM_ROM )"		8020068	0					
ANR	8020294	Callee	cpu_register_physical_memory		8020068	0					
ANR	8020295	Identifier	cpu_register_physical_memory		8020068	0					
ANR	8020296	ArgumentList	hwdef -> slavio_base		8020068	1					
ANR	8020297	Argument	hwdef -> slavio_base		8020068	0					
ANR	8020298	PtrMemberAccess	hwdef -> slavio_base		8020068	0					
ANR	8020299	Identifier	hwdef		8020068	0					
ANR	8020300	Identifier	slavio_base		8020068	1					
ANR	8020301	Argument	( PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK		8020068	1					
ANR	8020302	BitAndExpression	( PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK		8020068	0		&			
ANR	8020303	AdditiveExpression	PROM_SIZE_MAX + TARGET_PAGE_SIZE - 1		8020068	0		+			
ANR	8020304	Identifier	PROM_SIZE_MAX		8020068	0					
ANR	8020305	AdditiveExpression	TARGET_PAGE_SIZE - 1		8020068	1		-			
ANR	8020306	Identifier	TARGET_PAGE_SIZE		8020068	0					
ANR	8020307	PrimaryExpression	1		8020068	1					
ANR	8020308	Identifier	TARGET_PAGE_MASK		8020068	1					
ANR	8020309	Argument	prom_offset | IO_MEM_ROM		8020068	2					
ANR	8020310	InclusiveOrExpression	prom_offset | IO_MEM_ROM		8020068	0		|			
ANR	8020311	Identifier	prom_offset		8020068	0					
ANR	8020312	Identifier	IO_MEM_ROM		8020068	1					
ANR	8020313	IfStatement	if ( bios_name == NULL )		8020068	23					
ANR	8020314	Condition	bios_name == NULL	105:8:1844:1860	8020068	0	True				
ANR	8020315	EqualityExpression	bios_name == NULL		8020068	0		==			
ANR	8020316	Identifier	bios_name		8020068	0					
ANR	8020317	Identifier	NULL		8020068	1					
ANR	8020318	ExpressionStatement	bios_name = PROM_FILENAME	107:8:1872:1897	8020068	1	True				
ANR	8020319	AssignmentExpression	bios_name = PROM_FILENAME		8020068	0		=			
ANR	8020320	Identifier	bios_name		8020068	0					
ANR	8020321	Identifier	PROM_FILENAME		8020068	1					
ANR	8020322	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%s/%s"" , bios_dir , bios_name )"	109:4:1904:1960	8020068	24	True				
ANR	8020323	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%s/%s"" , bios_dir , bios_name )"		8020068	0					
ANR	8020324	Callee	snprintf		8020068	0					
ANR	8020325	Identifier	snprintf		8020068	0					
ANR	8020326	ArgumentList	buf		8020068	1					
ANR	8020327	Argument	buf		8020068	0					
ANR	8020328	Identifier	buf		8020068	0					
ANR	8020329	Argument	sizeof ( buf )		8020068	1					
ANR	8020330	SizeofExpression	sizeof ( buf )		8020068	0					
ANR	8020331	Sizeof	sizeof		8020068	0					
ANR	8020332	SizeofOperand	buf		8020068	1					
ANR	8020333	Argument	"""%s/%s"""		8020068	2					
ANR	8020334	PrimaryExpression	"""%s/%s"""		8020068	0					
ANR	8020335	Argument	bios_dir		8020068	3					
ANR	8020336	Identifier	bios_dir		8020068	0					
ANR	8020337	Argument	bios_name		8020068	4					
ANR	8020338	Identifier	bios_name		8020068	0					
ANR	8020339	ExpressionStatement	"ret = load_elf ( buf , hwdef -> slavio_base - PROM_VADDR , NULL , NULL , NULL )"	111:4:1967:2037	8020068	25	True				
ANR	8020340	AssignmentExpression	"ret = load_elf ( buf , hwdef -> slavio_base - PROM_VADDR , NULL , NULL , NULL )"		8020068	0		=			
ANR	8020341	Identifier	ret		8020068	0					
ANR	8020342	CallExpression	"load_elf ( buf , hwdef -> slavio_base - PROM_VADDR , NULL , NULL , NULL )"		8020068	1					
ANR	8020343	Callee	load_elf		8020068	0					
ANR	8020344	Identifier	load_elf		8020068	0					
ANR	8020345	ArgumentList	buf		8020068	1					
ANR	8020346	Argument	buf		8020068	0					
ANR	8020347	Identifier	buf		8020068	0					
ANR	8020348	Argument	hwdef -> slavio_base - PROM_VADDR		8020068	1					
ANR	8020349	AdditiveExpression	hwdef -> slavio_base - PROM_VADDR		8020068	0		-			
ANR	8020350	PtrMemberAccess	hwdef -> slavio_base		8020068	0					
ANR	8020351	Identifier	hwdef		8020068	0					
ANR	8020352	Identifier	slavio_base		8020068	1					
ANR	8020353	Identifier	PROM_VADDR		8020068	1					
ANR	8020354	Argument	NULL		8020068	2					
ANR	8020355	Identifier	NULL		8020068	0					
ANR	8020356	Argument	NULL		8020068	3					
ANR	8020357	Identifier	NULL		8020068	0					
ANR	8020358	Argument	NULL		8020068	4					
ANR	8020359	Identifier	NULL		8020068	0					
ANR	8020360	IfStatement	if ( ret < 0 || ret > PROM_SIZE_MAX )		8020068	26					
ANR	8020361	Condition	ret < 0 || ret > PROM_SIZE_MAX	113:8:2048:2077	8020068	0	True				
ANR	8020362	OrExpression	ret < 0 || ret > PROM_SIZE_MAX		8020068	0		||			
ANR	8020363	RelationalExpression	ret < 0		8020068	0		<			
ANR	8020364	Identifier	ret		8020068	0					
ANR	8020365	PrimaryExpression	0		8020068	1					
ANR	8020366	RelationalExpression	ret > PROM_SIZE_MAX		8020068	1		>			
ANR	8020367	Identifier	ret		8020068	0					
ANR	8020368	Identifier	PROM_SIZE_MAX		8020068	1					
ANR	8020369	ExpressionStatement	"ret = load_image_targphys ( buf , hwdef -> slavio_base , PROM_SIZE_MAX )"	115:8:2089:2154	8020068	1	True				
ANR	8020370	AssignmentExpression	"ret = load_image_targphys ( buf , hwdef -> slavio_base , PROM_SIZE_MAX )"		8020068	0		=			
ANR	8020371	Identifier	ret		8020068	0					
ANR	8020372	CallExpression	"load_image_targphys ( buf , hwdef -> slavio_base , PROM_SIZE_MAX )"		8020068	1					
ANR	8020373	Callee	load_image_targphys		8020068	0					
ANR	8020374	Identifier	load_image_targphys		8020068	0					
ANR	8020375	ArgumentList	buf		8020068	1					
ANR	8020376	Argument	buf		8020068	0					
ANR	8020377	Identifier	buf		8020068	0					
ANR	8020378	Argument	hwdef -> slavio_base		8020068	1					
ANR	8020379	PtrMemberAccess	hwdef -> slavio_base		8020068	0					
ANR	8020380	Identifier	hwdef		8020068	0					
ANR	8020381	Identifier	slavio_base		8020068	1					
ANR	8020382	Argument	PROM_SIZE_MAX		8020068	2					
ANR	8020383	Identifier	PROM_SIZE_MAX		8020068	0					
ANR	8020384	IfStatement	if ( ret < 0 || ret > PROM_SIZE_MAX )		8020068	27					
ANR	8020385	Condition	ret < 0 || ret > PROM_SIZE_MAX	117:8:2165:2194	8020068	0	True				
ANR	8020386	OrExpression	ret < 0 || ret > PROM_SIZE_MAX		8020068	0		||			
ANR	8020387	RelationalExpression	ret < 0		8020068	0		<			
ANR	8020388	Identifier	ret		8020068	0					
ANR	8020389	PrimaryExpression	0		8020068	1					
ANR	8020390	RelationalExpression	ret > PROM_SIZE_MAX		8020068	1		>			
ANR	8020391	Identifier	ret		8020068	0					
ANR	8020392	Identifier	PROM_SIZE_MAX		8020068	1					
ANR	8020393	CompoundStatement		107:40:1861:1861	8020068	1					
ANR	8020394	ExpressionStatement	"fprintf ( stderr , ""qemu: could not load prom '%s'\\n"" , buf )"	119:8:2208:2281	8020068	0	True				
ANR	8020395	CallExpression	"fprintf ( stderr , ""qemu: could not load prom '%s'\\n"" , buf )"		8020068	0					
ANR	8020396	Callee	fprintf		8020068	0					
ANR	8020397	Identifier	fprintf		8020068	0					
ANR	8020398	ArgumentList	stderr		8020068	1					
ANR	8020399	Argument	stderr		8020068	0					
ANR	8020400	Identifier	stderr		8020068	0					
ANR	8020401	Argument	"""qemu: could not load prom '%s'\\n"""		8020068	1					
ANR	8020402	PrimaryExpression	"""qemu: could not load prom '%s'\\n"""		8020068	0					
ANR	8020403	Argument	buf		8020068	2					
ANR	8020404	Identifier	buf		8020068	0					
ANR	8020405	ExpressionStatement	exit ( 1 )	123:8:2292:2299	8020068	1	True				
ANR	8020406	CallExpression	exit ( 1 )		8020068	0					
ANR	8020407	Callee	exit		8020068	0					
ANR	8020408	Identifier	exit		8020068	0					
ANR	8020409	ArgumentList	1		8020068	1					
ANR	8020410	Argument	1		8020068	0					
ANR	8020411	PrimaryExpression	1		8020068	0					
ANR	8020412	ExpressionStatement	prom_offset += ( ret + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK	127:4:2313:2375	8020068	28	True				
ANR	8020413	AssignmentExpression	prom_offset += ( ret + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK		8020068	0		+=			
ANR	8020414	Identifier	prom_offset		8020068	0					
ANR	8020415	BitAndExpression	( ret + TARGET_PAGE_SIZE - 1 ) & TARGET_PAGE_MASK		8020068	1		&			
ANR	8020416	AdditiveExpression	ret + TARGET_PAGE_SIZE - 1		8020068	0		+			
ANR	8020417	Identifier	ret		8020068	0					
ANR	8020418	AdditiveExpression	TARGET_PAGE_SIZE - 1		8020068	1		-			
ANR	8020419	Identifier	TARGET_PAGE_SIZE		8020068	0					
ANR	8020420	PrimaryExpression	1		8020068	1					
ANR	8020421	Identifier	TARGET_PAGE_MASK		8020068	1					
ANR	8020422	ExpressionStatement	"slavio_intctl = sun4c_intctl_init ( hwdef -> sun4c_intctl_base , & slavio_irq , cpu_irqs )"	133:4:2410:2531	8020068	29	True				
ANR	8020423	AssignmentExpression	"slavio_intctl = sun4c_intctl_init ( hwdef -> sun4c_intctl_base , & slavio_irq , cpu_irqs )"		8020068	0		=			
ANR	8020424	Identifier	slavio_intctl		8020068	0					
ANR	8020425	CallExpression	"sun4c_intctl_init ( hwdef -> sun4c_intctl_base , & slavio_irq , cpu_irqs )"		8020068	1					
ANR	8020426	Callee	sun4c_intctl_init		8020068	0					
ANR	8020427	Identifier	sun4c_intctl_init		8020068	0					
ANR	8020428	ArgumentList	hwdef -> sun4c_intctl_base		8020068	1					
ANR	8020429	Argument	hwdef -> sun4c_intctl_base		8020068	0					
ANR	8020430	PtrMemberAccess	hwdef -> sun4c_intctl_base		8020068	0					
ANR	8020431	Identifier	hwdef		8020068	0					
ANR	8020432	Identifier	sun4c_intctl_base		8020068	1					
ANR	8020433	Argument	& slavio_irq		8020068	1					
ANR	8020434	UnaryOperationExpression	& slavio_irq		8020068	0					
ANR	8020435	UnaryOperator	&		8020068	0					
ANR	8020436	Identifier	slavio_irq		8020068	1					
ANR	8020437	Argument	cpu_irqs		8020068	2					
ANR	8020438	Identifier	cpu_irqs		8020068	0					
ANR	8020439	ExpressionStatement	"iommu = iommu_init ( hwdef -> iommu_base , hwdef -> iommu_version , slavio_irq [ hwdef -> me_irq ] )"	139:4:2540:2650	8020068	30	True				
ANR	8020440	AssignmentExpression	"iommu = iommu_init ( hwdef -> iommu_base , hwdef -> iommu_version , slavio_irq [ hwdef -> me_irq ] )"		8020068	0		=			
ANR	8020441	Identifier	iommu		8020068	0					
ANR	8020442	CallExpression	"iommu_init ( hwdef -> iommu_base , hwdef -> iommu_version , slavio_irq [ hwdef -> me_irq ] )"		8020068	1					
ANR	8020443	Callee	iommu_init		8020068	0					
ANR	8020444	Identifier	iommu_init		8020068	0					
ANR	8020445	ArgumentList	hwdef -> iommu_base		8020068	1					
ANR	8020446	Argument	hwdef -> iommu_base		8020068	0					
ANR	8020447	PtrMemberAccess	hwdef -> iommu_base		8020068	0					
ANR	8020448	Identifier	hwdef		8020068	0					
ANR	8020449	Identifier	iommu_base		8020068	1					
ANR	8020450	Argument	hwdef -> iommu_version		8020068	1					
ANR	8020451	PtrMemberAccess	hwdef -> iommu_version		8020068	0					
ANR	8020452	Identifier	hwdef		8020068	0					
ANR	8020453	Identifier	iommu_version		8020068	1					
ANR	8020454	Argument	slavio_irq [ hwdef -> me_irq ]		8020068	2					
ANR	8020455	ArrayIndexing	slavio_irq [ hwdef -> me_irq ]		8020068	0					
ANR	8020456	Identifier	slavio_irq		8020068	0					
ANR	8020457	PtrMemberAccess	hwdef -> me_irq		8020068	1					
ANR	8020458	Identifier	hwdef		8020068	0					
ANR	8020459	Identifier	me_irq		8020068	1					
ANR	8020460	ExpressionStatement	"espdma = sparc32_dma_init ( hwdef -> dma_base , slavio_irq [ hwdef -> esp_irq ] , iommu , & espdma_irq , & esp_reset )"	145:4:2659:2792	8020068	31	True				
ANR	8020461	AssignmentExpression	"espdma = sparc32_dma_init ( hwdef -> dma_base , slavio_irq [ hwdef -> esp_irq ] , iommu , & espdma_irq , & esp_reset )"		8020068	0		=			
ANR	8020462	Identifier	espdma		8020068	0					
ANR	8020463	CallExpression	"sparc32_dma_init ( hwdef -> dma_base , slavio_irq [ hwdef -> esp_irq ] , iommu , & espdma_irq , & esp_reset )"		8020068	1					
ANR	8020464	Callee	sparc32_dma_init		8020068	0					
ANR	8020465	Identifier	sparc32_dma_init		8020068	0					
ANR	8020466	ArgumentList	hwdef -> dma_base		8020068	1					
ANR	8020467	Argument	hwdef -> dma_base		8020068	0					
ANR	8020468	PtrMemberAccess	hwdef -> dma_base		8020068	0					
ANR	8020469	Identifier	hwdef		8020068	0					
ANR	8020470	Identifier	dma_base		8020068	1					
ANR	8020471	Argument	slavio_irq [ hwdef -> esp_irq ]		8020068	1					
ANR	8020472	ArrayIndexing	slavio_irq [ hwdef -> esp_irq ]		8020068	0					
ANR	8020473	Identifier	slavio_irq		8020068	0					
ANR	8020474	PtrMemberAccess	hwdef -> esp_irq		8020068	1					
ANR	8020475	Identifier	hwdef		8020068	0					
ANR	8020476	Identifier	esp_irq		8020068	1					
ANR	8020477	Argument	iommu		8020068	2					
ANR	8020478	Identifier	iommu		8020068	0					
ANR	8020479	Argument	& espdma_irq		8020068	3					
ANR	8020480	UnaryOperationExpression	& espdma_irq		8020068	0					
ANR	8020481	UnaryOperator	&		8020068	0					
ANR	8020482	Identifier	espdma_irq		8020068	1					
ANR	8020483	Argument	& esp_reset		8020068	4					
ANR	8020484	UnaryOperationExpression	& esp_reset		8020068	0					
ANR	8020485	UnaryOperator	&		8020068	0					
ANR	8020486	Identifier	esp_reset		8020068	1					
ANR	8020487	Statement	ledma	151:4:2801:2805	8020068	32	True				
ANR	8020488	Statement	=	151:10:2807:2807	8020068	33	True				
ANR	8020489	Statement	sparc32_dma_init	151:12:2809:2824	8020068	34	True				
ANR	8020490	Statement	(	151:28:2825:2825	8020068	35	True				
ANR	8020491	Statement	hwdef	151:29:2826:2830	8020068	36	True				
ANR	8020492	Statement	->	151:34:2831:2832	8020068	37	True				
ANR	8020493	Statement	dma_base	151:36:2833:2840	8020068	38	True				
ANR	8020494	Statement	+	151:45:2842:2842	8020068	39	True				
ANR	8020495	Statement	16UL	151:47:2844:2847	8020068	40	True				
ANR	8020496	Statement	L	151:51:2848:2848	8020068	41	True				
ANR	8020497	Statement	","	151:52:2849:2849	8020068	42	True				
ANR	8020498	Statement	slavio_irq	153:29:2881:2890	8020068	43	True				
ANR	8020499	Statement	[	153:39:2891:2891	8020068	44	True				
ANR	8020500	Statement	hwdef	153:40:2892:2896	8020068	45	True				
ANR	8020501	Statement	->	153:45:2897:2898	8020068	46	True				
ANR	8020502	Statement	le_irq	153:47:2899:2904	8020068	47	True				
ANR	8020503	Statement	]	153:53:2905:2905	8020068	48	True				
ANR	8020504	Statement	","	153:54:2906:2906	8020068	49	True				
ANR	8020505	Statement	iommu	153:56:2908:2912	8020068	50	True				
ANR	8020506	Statement	","	153:61:2913:2913	8020068	51	True				
ANR	8020507	Statement	&	153:63:2915:2915	8020068	52	True				
ANR	8020508	Statement	ledma_irq	153:64:2916:2924	8020068	53	True				
ANR	8020509	Statement	","	153:73:2925:2925	8020068	54	True				
ANR	8020510	Statement	&	155:29:2957:2957	8020068	55	True				
ANR	8020511	Statement	le_reset	155:30:2958:2965	8020068	56	True				
ANR	8020512	Statement	)	155:38:2966:2966	8020068	57	True				
ANR	8020513	ExpressionStatement		155:39:2967:2967	8020068	58	True				
ANR	8020514	IfStatement	if ( graphic_depth != 8 && graphic_depth != 24 )		8020068	59					
ANR	8020515	Condition	graphic_depth != 8 && graphic_depth != 24	159:8:2980:3020	8020068	0	True				
ANR	8020516	AndExpression	graphic_depth != 8 && graphic_depth != 24		8020068	0		&&			
ANR	8020517	EqualityExpression	graphic_depth != 8		8020068	0		!=			
ANR	8020518	Identifier	graphic_depth		8020068	0					
ANR	8020519	PrimaryExpression	8		8020068	1					
ANR	8020520	EqualityExpression	graphic_depth != 24		8020068	1		!=			
ANR	8020521	Identifier	graphic_depth		8020068	0					
ANR	8020522	PrimaryExpression	24		8020068	1					
ANR	8020523	CompoundStatement		149:51:2687:2687	8020068	1					
ANR	8020524	ExpressionStatement	"fprintf ( stderr , ""qemu: Unsupported depth: %d\\n"" , graphic_depth )"	161:8:3034:3097	8020068	0	True				
ANR	8020525	CallExpression	"fprintf ( stderr , ""qemu: Unsupported depth: %d\\n"" , graphic_depth )"		8020068	0					
ANR	8020526	Callee	fprintf		8020068	0					
ANR	8020527	Identifier	fprintf		8020068	0					
ANR	8020528	ArgumentList	stderr		8020068	1					
ANR	8020529	Argument	stderr		8020068	0					
ANR	8020530	Identifier	stderr		8020068	0					
ANR	8020531	Argument	"""qemu: Unsupported depth: %d\\n"""		8020068	1					
ANR	8020532	PrimaryExpression	"""qemu: Unsupported depth: %d\\n"""		8020068	0					
ANR	8020533	Argument	graphic_depth		8020068	2					
ANR	8020534	Identifier	graphic_depth		8020068	0					
ANR	8020535	ExpressionStatement	exit ( 1 )	163:8:3108:3116	8020068	1	True				
ANR	8020536	CallExpression	exit ( 1 )		8020068	0					
ANR	8020537	Callee	exit		8020068	0					
ANR	8020538	Identifier	exit		8020068	0					
ANR	8020539	ArgumentList	1		8020068	1					
ANR	8020540	Argument	1		8020068	0					
ANR	8020541	PrimaryExpression	1		8020068	0					
ANR	8020542	ExpressionStatement	"tcx_init ( ds , hwdef -> tcx_base , phys_ram_base + RAM_size , RAM_size , hwdef -> vram_size , graphic_width , graphic_height , graphic_depth )"	167:4:3130:3273	8020068	60	True				
ANR	8020543	CallExpression	"tcx_init ( ds , hwdef -> tcx_base , phys_ram_base + RAM_size , RAM_size , hwdef -> vram_size , graphic_width , graphic_height , graphic_depth )"		8020068	0					
ANR	8020544	Callee	tcx_init		8020068	0					
ANR	8020545	Identifier	tcx_init		8020068	0					
ANR	8020546	ArgumentList	ds		8020068	1					
ANR	8020547	Argument	ds		8020068	0					
ANR	8020548	Identifier	ds		8020068	0					
ANR	8020549	Argument	hwdef -> tcx_base		8020068	1					
ANR	8020550	PtrMemberAccess	hwdef -> tcx_base		8020068	0					
ANR	8020551	Identifier	hwdef		8020068	0					
ANR	8020552	Identifier	tcx_base		8020068	1					
ANR	8020553	Argument	phys_ram_base + RAM_size		8020068	2					
ANR	8020554	AdditiveExpression	phys_ram_base + RAM_size		8020068	0		+			
ANR	8020555	Identifier	phys_ram_base		8020068	0					
ANR	8020556	Identifier	RAM_size		8020068	1					
ANR	8020557	Argument	RAM_size		8020068	3					
ANR	8020558	Identifier	RAM_size		8020068	0					
ANR	8020559	Argument	hwdef -> vram_size		8020068	4					
ANR	8020560	PtrMemberAccess	hwdef -> vram_size		8020068	0					
ANR	8020561	Identifier	hwdef		8020068	0					
ANR	8020562	Identifier	vram_size		8020068	1					
ANR	8020563	Argument	graphic_width		8020068	5					
ANR	8020564	Identifier	graphic_width		8020068	0					
ANR	8020565	Argument	graphic_height		8020068	6					
ANR	8020566	Identifier	graphic_height		8020068	0					
ANR	8020567	Argument	graphic_depth		8020068	7					
ANR	8020568	Identifier	graphic_depth		8020068	0					
ANR	8020569	IfStatement	"if ( nd_table [ 0 ] . model == NULL || strcmp ( nd_table [ 0 ] . model , ""lance"" ) == 0 )"		8020068	61					
ANR	8020570	Condition	"nd_table [ 0 ] . model == NULL || strcmp ( nd_table [ 0 ] . model , ""lance"" ) == 0"	173:8:3286:3362	8020068	0	True				
ANR	8020571	OrExpression	"nd_table [ 0 ] . model == NULL || strcmp ( nd_table [ 0 ] . model , ""lance"" ) == 0"		8020068	0		||			
ANR	8020572	EqualityExpression	nd_table [ 0 ] . model == NULL		8020068	0		==			
ANR	8020573	MemberAccess	nd_table [ 0 ] . model		8020068	0					
ANR	8020574	ArrayIndexing	nd_table [ 0 ]		8020068	0					
ANR	8020575	Identifier	nd_table		8020068	0					
ANR	8020576	PrimaryExpression	0		8020068	1					
ANR	8020577	Identifier	model		8020068	1					
ANR	8020578	Identifier	NULL		8020068	1					
ANR	8020579	EqualityExpression	"strcmp ( nd_table [ 0 ] . model , ""lance"" ) == 0"		8020068	1		==			
ANR	8020580	CallExpression	"strcmp ( nd_table [ 0 ] . model , ""lance"" )"		8020068	0					
ANR	8020581	Callee	strcmp		8020068	0					
ANR	8020582	Identifier	strcmp		8020068	0					
ANR	8020583	ArgumentList	nd_table [ 0 ] . model		8020068	1					
ANR	8020584	Argument	nd_table [ 0 ] . model		8020068	0					
ANR	8020585	MemberAccess	nd_table [ 0 ] . model		8020068	0					
ANR	8020586	ArrayIndexing	nd_table [ 0 ]		8020068	0					
ANR	8020587	Identifier	nd_table		8020068	0					
ANR	8020588	PrimaryExpression	0		8020068	1					
ANR	8020589	Identifier	model		8020068	1					
ANR	8020590	Argument	"""lance"""		8020068	1					
ANR	8020591	PrimaryExpression	"""lance"""		8020068	0					
ANR	8020592	PrimaryExpression	0		8020068	1					
ANR	8020593	CompoundStatement		165:52:3029:3029	8020068	1					
ANR	8020594	ExpressionStatement	"lance_init ( & nd_table [ 0 ] , hwdef -> le_base , ledma , * ledma_irq , le_reset )"	177:8:3376:3445	8020068	0	True				
ANR	8020595	CallExpression	"lance_init ( & nd_table [ 0 ] , hwdef -> le_base , ledma , * ledma_irq , le_reset )"		8020068	0					
ANR	8020596	Callee	lance_init		8020068	0					
ANR	8020597	Identifier	lance_init		8020068	0					
ANR	8020598	ArgumentList	& nd_table [ 0 ]		8020068	1					
ANR	8020599	Argument	& nd_table [ 0 ]		8020068	0					
ANR	8020600	UnaryOperationExpression	& nd_table [ 0 ]		8020068	0					
ANR	8020601	UnaryOperator	&		8020068	0					
ANR	8020602	ArrayIndexing	nd_table [ 0 ]		8020068	1					
ANR	8020603	Identifier	nd_table		8020068	0					
ANR	8020604	PrimaryExpression	0		8020068	1					
ANR	8020605	Argument	hwdef -> le_base		8020068	1					
ANR	8020606	PtrMemberAccess	hwdef -> le_base		8020068	0					
ANR	8020607	Identifier	hwdef		8020068	0					
ANR	8020608	Identifier	le_base		8020068	1					
ANR	8020609	Argument	ledma		8020068	2					
ANR	8020610	Identifier	ledma		8020068	0					
ANR	8020611	Argument	* ledma_irq		8020068	3					
ANR	8020612	UnaryOperationExpression	* ledma_irq		8020068	0					
ANR	8020613	UnaryOperator	*		8020068	0					
ANR	8020614	Identifier	ledma_irq		8020068	1					
ANR	8020615	Argument	le_reset		8020068	4					
ANR	8020616	Identifier	le_reset		8020068	0					
ANR	8020617	ElseStatement	else		8020068	0					
ANR	8020618	IfStatement	"if ( strcmp ( nd_table [ 0 ] . model , ""?"" ) == 0 )"		8020068	0					
ANR	8020619	Condition	"strcmp ( nd_table [ 0 ] . model , ""?"" ) == 0"	179:15:3463:3497	8020068	0	True				
ANR	8020620	EqualityExpression	"strcmp ( nd_table [ 0 ] . model , ""?"" ) == 0"		8020068	0		==			
ANR	8020621	CallExpression	"strcmp ( nd_table [ 0 ] . model , ""?"" )"		8020068	0					
ANR	8020622	Callee	strcmp		8020068	0					
ANR	8020623	Identifier	strcmp		8020068	0					
ANR	8020624	ArgumentList	nd_table [ 0 ] . model		8020068	1					
ANR	8020625	Argument	nd_table [ 0 ] . model		8020068	0					
ANR	8020626	MemberAccess	nd_table [ 0 ] . model		8020068	0					
ANR	8020627	ArrayIndexing	nd_table [ 0 ]		8020068	0					
ANR	8020628	Identifier	nd_table		8020068	0					
ANR	8020629	PrimaryExpression	0		8020068	1					
ANR	8020630	Identifier	model		8020068	1					
ANR	8020631	Argument	"""?"""		8020068	1					
ANR	8020632	PrimaryExpression	"""?"""		8020068	0					
ANR	8020633	PrimaryExpression	0		8020068	1					
ANR	8020634	CompoundStatement		169:52:3164:3164	8020068	1					
ANR	8020635	ExpressionStatement	"fprintf ( stderr , ""qemu: Supported NICs: lance\\n"" )"	181:8:3511:3559	8020068	0	True				
ANR	8020636	CallExpression	"fprintf ( stderr , ""qemu: Supported NICs: lance\\n"" )"		8020068	0					
ANR	8020637	Callee	fprintf		8020068	0					
ANR	8020638	Identifier	fprintf		8020068	0					
ANR	8020639	ArgumentList	stderr		8020068	1					
ANR	8020640	Argument	stderr		8020068	0					
ANR	8020641	Identifier	stderr		8020068	0					
ANR	8020642	Argument	"""qemu: Supported NICs: lance\\n"""		8020068	1					
ANR	8020643	PrimaryExpression	"""qemu: Supported NICs: lance\\n"""		8020068	0					
ANR	8020644	ExpressionStatement	exit ( 1 )	183:8:3570:3578	8020068	1	True				
ANR	8020645	CallExpression	exit ( 1 )		8020068	0					
ANR	8020646	Callee	exit		8020068	0					
ANR	8020647	Identifier	exit		8020068	0					
ANR	8020648	ArgumentList	1		8020068	1					
ANR	8020649	Argument	1		8020068	0					
ANR	8020650	PrimaryExpression	1		8020068	0					
ANR	8020651	ElseStatement	else		8020068	0					
ANR	8020652	CompoundStatement		175:11:3256:3256	8020068	0					
ANR	8020653	ExpressionStatement	"fprintf ( stderr , ""qemu: Unsupported NIC: %s\\n"" , nd_table [ 0 ] . model )"	187:8:3603:3668	8020068	0	True				
ANR	8020654	CallExpression	"fprintf ( stderr , ""qemu: Unsupported NIC: %s\\n"" , nd_table [ 0 ] . model )"		8020068	0					
ANR	8020655	Callee	fprintf		8020068	0					
ANR	8020656	Identifier	fprintf		8020068	0					
ANR	8020657	ArgumentList	stderr		8020068	1					
ANR	8020658	Argument	stderr		8020068	0					
ANR	8020659	Identifier	stderr		8020068	0					
ANR	8020660	Argument	"""qemu: Unsupported NIC: %s\\n"""		8020068	1					
ANR	8020661	PrimaryExpression	"""qemu: Unsupported NIC: %s\\n"""		8020068	0					
ANR	8020662	Argument	nd_table [ 0 ] . model		8020068	2					
ANR	8020663	MemberAccess	nd_table [ 0 ] . model		8020068	0					
ANR	8020664	ArrayIndexing	nd_table [ 0 ]		8020068	0					
ANR	8020665	Identifier	nd_table		8020068	0					
ANR	8020666	PrimaryExpression	0		8020068	1					
ANR	8020667	Identifier	model		8020068	1					
ANR	8020668	ExpressionStatement	exit ( 1 )	189:8:3679:3687	8020068	1	True				
ANR	8020669	CallExpression	exit ( 1 )		8020068	0					
ANR	8020670	Callee	exit		8020068	0					
ANR	8020671	Identifier	exit		8020068	0					
ANR	8020672	ArgumentList	1		8020068	1					
ANR	8020673	Argument	1		8020068	0					
ANR	8020674	PrimaryExpression	1		8020068	0					
ANR	8020675	ExpressionStatement	"nvram = m48t59_init ( slavio_irq [ 0 ] , hwdef -> nvram_base , 0 , hwdef -> nvram_size , 2 )"	195:4:3703:3806	8020068	62	True				
ANR	8020676	AssignmentExpression	"nvram = m48t59_init ( slavio_irq [ 0 ] , hwdef -> nvram_base , 0 , hwdef -> nvram_size , 2 )"		8020068	0		=			
ANR	8020677	Identifier	nvram		8020068	0					
ANR	8020678	CallExpression	"m48t59_init ( slavio_irq [ 0 ] , hwdef -> nvram_base , 0 , hwdef -> nvram_size , 2 )"		8020068	1					
ANR	8020679	Callee	m48t59_init		8020068	0					
ANR	8020680	Identifier	m48t59_init		8020068	0					
ANR	8020681	ArgumentList	slavio_irq [ 0 ]		8020068	1					
ANR	8020682	Argument	slavio_irq [ 0 ]		8020068	0					
ANR	8020683	ArrayIndexing	slavio_irq [ 0 ]		8020068	0					
ANR	8020684	Identifier	slavio_irq		8020068	0					
ANR	8020685	PrimaryExpression	0		8020068	1					
ANR	8020686	Argument	hwdef -> nvram_base		8020068	1					
ANR	8020687	PtrMemberAccess	hwdef -> nvram_base		8020068	0					
ANR	8020688	Identifier	hwdef		8020068	0					
ANR	8020689	Identifier	nvram_base		8020068	1					
ANR	8020690	Argument	0		8020068	2					
ANR	8020691	PrimaryExpression	0		8020068	0					
ANR	8020692	Argument	hwdef -> nvram_size		8020068	3					
ANR	8020693	PtrMemberAccess	hwdef -> nvram_size		8020068	0					
ANR	8020694	Identifier	hwdef		8020068	0					
ANR	8020695	Identifier	nvram_size		8020068	1					
ANR	8020696	Argument	2		8020068	4					
ANR	8020697	PrimaryExpression	2		8020068	0					
ANR	8020698	ExpressionStatement	"slavio_serial_ms_kbd_init ( hwdef -> ms_kb_base , slavio_irq [ hwdef -> ms_kb_irq ] , nographic )"	201:4:3815:3931	8020068	63	True				
ANR	8020699	CallExpression	"slavio_serial_ms_kbd_init ( hwdef -> ms_kb_base , slavio_irq [ hwdef -> ms_kb_irq ] , nographic )"		8020068	0					
ANR	8020700	Callee	slavio_serial_ms_kbd_init		8020068	0					
ANR	8020701	Identifier	slavio_serial_ms_kbd_init		8020068	0					
ANR	8020702	ArgumentList	hwdef -> ms_kb_base		8020068	1					
ANR	8020703	Argument	hwdef -> ms_kb_base		8020068	0					
ANR	8020704	PtrMemberAccess	hwdef -> ms_kb_base		8020068	0					
ANR	8020705	Identifier	hwdef		8020068	0					
ANR	8020706	Identifier	ms_kb_base		8020068	1					
ANR	8020707	Argument	slavio_irq [ hwdef -> ms_kb_irq ]		8020068	1					
ANR	8020708	ArrayIndexing	slavio_irq [ hwdef -> ms_kb_irq ]		8020068	0					
ANR	8020709	Identifier	slavio_irq		8020068	0					
ANR	8020710	PtrMemberAccess	hwdef -> ms_kb_irq		8020068	1					
ANR	8020711	Identifier	hwdef		8020068	0					
ANR	8020712	Identifier	ms_kb_irq		8020068	1					
ANR	8020713	Argument	nographic		8020068	2					
ANR	8020714	Identifier	nographic		8020068	0					
ANR	8020715	ExpressionStatement	"slavio_serial_init ( hwdef -> serial_base , slavio_irq [ hwdef -> ser_irq ] , serial_hds [ 1 ] , serial_hds [ 0 ] )"	209:4:4087:4207	8020068	64	True				
ANR	8020716	CallExpression	"slavio_serial_init ( hwdef -> serial_base , slavio_irq [ hwdef -> ser_irq ] , serial_hds [ 1 ] , serial_hds [ 0 ] )"		8020068	0					
ANR	8020717	Callee	slavio_serial_init		8020068	0					
ANR	8020718	Identifier	slavio_serial_init		8020068	0					
ANR	8020719	ArgumentList	hwdef -> serial_base		8020068	1					
ANR	8020720	Argument	hwdef -> serial_base		8020068	0					
ANR	8020721	PtrMemberAccess	hwdef -> serial_base		8020068	0					
ANR	8020722	Identifier	hwdef		8020068	0					
ANR	8020723	Identifier	serial_base		8020068	1					
ANR	8020724	Argument	slavio_irq [ hwdef -> ser_irq ]		8020068	1					
ANR	8020725	ArrayIndexing	slavio_irq [ hwdef -> ser_irq ]		8020068	0					
ANR	8020726	Identifier	slavio_irq		8020068	0					
ANR	8020727	PtrMemberAccess	hwdef -> ser_irq		8020068	1					
ANR	8020728	Identifier	hwdef		8020068	0					
ANR	8020729	Identifier	ser_irq		8020068	1					
ANR	8020730	Argument	serial_hds [ 1 ]		8020068	2					
ANR	8020731	ArrayIndexing	serial_hds [ 1 ]		8020068	0					
ANR	8020732	Identifier	serial_hds		8020068	0					
ANR	8020733	PrimaryExpression	1		8020068	1					
ANR	8020734	Argument	serial_hds [ 0 ]		8020068	3					
ANR	8020735	ArrayIndexing	serial_hds [ 0 ]		8020068	0					
ANR	8020736	Identifier	serial_hds		8020068	0					
ANR	8020737	PrimaryExpression	0		8020068	1					
ANR	8020738	ExpressionStatement	"slavio_misc = slavio_misc_init ( - 1 , hwdef -> apc_base , hwdef -> aux1_base , hwdef -> aux2_base , slavio_irq [ hwdef -> me_irq ] , env , & fdc_tc )"	215:4:4216:4416	8020068	65	True				
ANR	8020739	AssignmentExpression	"slavio_misc = slavio_misc_init ( - 1 , hwdef -> apc_base , hwdef -> aux1_base , hwdef -> aux2_base , slavio_irq [ hwdef -> me_irq ] , env , & fdc_tc )"		8020068	0		=			
ANR	8020740	Identifier	slavio_misc		8020068	0					
ANR	8020741	CallExpression	"slavio_misc_init ( - 1 , hwdef -> apc_base , hwdef -> aux1_base , hwdef -> aux2_base , slavio_irq [ hwdef -> me_irq ] , env , & fdc_tc )"		8020068	1					
ANR	8020742	Callee	slavio_misc_init		8020068	0					
ANR	8020743	Identifier	slavio_misc_init		8020068	0					
ANR	8020744	ArgumentList	- 1		8020068	1					
ANR	8020745	Argument	- 1		8020068	0					
ANR	8020746	UnaryOperationExpression	- 1		8020068	0					
ANR	8020747	UnaryOperator	-		8020068	0					
ANR	8020748	PrimaryExpression	1		8020068	1					
ANR	8020749	Argument	hwdef -> apc_base		8020068	1					
ANR	8020750	PtrMemberAccess	hwdef -> apc_base		8020068	0					
ANR	8020751	Identifier	hwdef		8020068	0					
ANR	8020752	Identifier	apc_base		8020068	1					
ANR	8020753	Argument	hwdef -> aux1_base		8020068	2					
ANR	8020754	PtrMemberAccess	hwdef -> aux1_base		8020068	0					
ANR	8020755	Identifier	hwdef		8020068	0					
ANR	8020756	Identifier	aux1_base		8020068	1					
ANR	8020757	Argument	hwdef -> aux2_base		8020068	3					
ANR	8020758	PtrMemberAccess	hwdef -> aux2_base		8020068	0					
ANR	8020759	Identifier	hwdef		8020068	0					
ANR	8020760	Identifier	aux2_base		8020068	1					
ANR	8020761	Argument	slavio_irq [ hwdef -> me_irq ]		8020068	4					
ANR	8020762	ArrayIndexing	slavio_irq [ hwdef -> me_irq ]		8020068	0					
ANR	8020763	Identifier	slavio_irq		8020068	0					
ANR	8020764	PtrMemberAccess	hwdef -> me_irq		8020068	1					
ANR	8020765	Identifier	hwdef		8020068	0					
ANR	8020766	Identifier	me_irq		8020068	1					
ANR	8020767	Argument	env		8020068	5					
ANR	8020768	Identifier	env		8020068	0					
ANR	8020769	Argument	& fdc_tc		8020068	6					
ANR	8020770	UnaryOperationExpression	& fdc_tc		8020068	0					
ANR	8020771	UnaryOperator	&		8020068	0					
ANR	8020772	Identifier	fdc_tc		8020068	1					
ANR	8020773	IfStatement	if ( hwdef -> fd_base != ( target_phys_addr_t ) - 1 )		8020068	66					
ANR	8020774	Condition	hwdef -> fd_base != ( target_phys_addr_t ) - 1	223:8:4429:4468	8020068	0	True				
ANR	8020775	EqualityExpression	hwdef -> fd_base != ( target_phys_addr_t ) - 1		8020068	0		!=			
ANR	8020776	PtrMemberAccess	hwdef -> fd_base		8020068	0					
ANR	8020777	Identifier	hwdef		8020068	0					
ANR	8020778	Identifier	fd_base		8020068	1					
ANR	8020779	CastExpression	( target_phys_addr_t ) - 1		8020068	1					
ANR	8020780	CastTarget	target_phys_addr_t		8020068	0					
ANR	8020781	UnaryOperationExpression	- 1		8020068	1					
ANR	8020782	UnaryOperator	-		8020068	0					
ANR	8020783	PrimaryExpression	1		8020068	1					
ANR	8020784	CompoundStatement		213:50:4135:4135	8020068	1					
ANR	8020785	ExpressionStatement	fd [ 1 ] = fd [ 0 ] = NULL	227:8:4531:4551	8020068	0	True				
ANR	8020786	AssignmentExpression	fd [ 1 ] = fd [ 0 ] = NULL		8020068	0		=			
ANR	8020787	ArrayIndexing	fd [ 1 ]		8020068	0					
ANR	8020788	Identifier	fd		8020068	0					
ANR	8020789	PrimaryExpression	1		8020068	1					
ANR	8020790	AssignmentExpression	fd [ 0 ] = NULL		8020068	1		=			
ANR	8020791	ArrayIndexing	fd [ 0 ]		8020068	0					
ANR	8020792	Identifier	fd		8020068	0					
ANR	8020793	PrimaryExpression	0		8020068	1					
ANR	8020794	Identifier	NULL		8020068	1					
ANR	8020795	ExpressionStatement	"drive_index = drive_get_index ( IF_FLOPPY , 0 , 0 )"	229:8:4562:4608	8020068	1	True				
ANR	8020796	AssignmentExpression	"drive_index = drive_get_index ( IF_FLOPPY , 0 , 0 )"		8020068	0		=			
ANR	8020797	Identifier	drive_index		8020068	0					
ANR	8020798	CallExpression	"drive_get_index ( IF_FLOPPY , 0 , 0 )"		8020068	1					
ANR	8020799	Callee	drive_get_index		8020068	0					
ANR	8020800	Identifier	drive_get_index		8020068	0					
ANR	8020801	ArgumentList	IF_FLOPPY		8020068	1					
ANR	8020802	Argument	IF_FLOPPY		8020068	0					
ANR	8020803	Identifier	IF_FLOPPY		8020068	0					
ANR	8020804	Argument	0		8020068	1					
ANR	8020805	PrimaryExpression	0		8020068	0					
ANR	8020806	Argument	0		8020068	2					
ANR	8020807	PrimaryExpression	0		8020068	0					
ANR	8020808	IfStatement	if ( drive_index != - 1 )		8020068	2					
ANR	8020809	Condition	drive_index != - 1	231:12:4623:4639	8020068	0	True				
ANR	8020810	EqualityExpression	drive_index != - 1		8020068	0		!=			
ANR	8020811	Identifier	drive_index		8020068	0					
ANR	8020812	UnaryOperationExpression	- 1		8020068	1					
ANR	8020813	UnaryOperator	-		8020068	0					
ANR	8020814	PrimaryExpression	1		8020068	1					
ANR	8020815	ExpressionStatement	fd [ 0 ] = drives_table [ drive_index ] . bdrv	233:12:4655:4693	8020068	1	True				
ANR	8020816	AssignmentExpression	fd [ 0 ] = drives_table [ drive_index ] . bdrv		8020068	0		=			
ANR	8020817	ArrayIndexing	fd [ 0 ]		8020068	0					
ANR	8020818	Identifier	fd		8020068	0					
ANR	8020819	PrimaryExpression	0		8020068	1					
ANR	8020820	MemberAccess	drives_table [ drive_index ] . bdrv		8020068	1					
ANR	8020821	ArrayIndexing	drives_table [ drive_index ]		8020068	0					
ANR	8020822	Identifier	drives_table		8020068	0					
ANR	8020823	Identifier	drive_index		8020068	1					
ANR	8020824	Identifier	bdrv		8020068	1					
ANR	8020825	ExpressionStatement	"sun4m_fdctrl_init ( slavio_irq [ hwdef -> fd_irq ] , hwdef -> fd_base , fd , fdc_tc )"	237:8:4706:4805	8020068	3	True				
ANR	8020826	CallExpression	"sun4m_fdctrl_init ( slavio_irq [ hwdef -> fd_irq ] , hwdef -> fd_base , fd , fdc_tc )"		8020068	0					
ANR	8020827	Callee	sun4m_fdctrl_init		8020068	0					
ANR	8020828	Identifier	sun4m_fdctrl_init		8020068	0					
ANR	8020829	ArgumentList	slavio_irq [ hwdef -> fd_irq ]		8020068	1					
ANR	8020830	Argument	slavio_irq [ hwdef -> fd_irq ]		8020068	0					
ANR	8020831	ArrayIndexing	slavio_irq [ hwdef -> fd_irq ]		8020068	0					
ANR	8020832	Identifier	slavio_irq		8020068	0					
ANR	8020833	PtrMemberAccess	hwdef -> fd_irq		8020068	1					
ANR	8020834	Identifier	hwdef		8020068	0					
ANR	8020835	Identifier	fd_irq		8020068	1					
ANR	8020836	Argument	hwdef -> fd_base		8020068	1					
ANR	8020837	PtrMemberAccess	hwdef -> fd_base		8020068	0					
ANR	8020838	Identifier	hwdef		8020068	0					
ANR	8020839	Identifier	fd_base		8020068	1					
ANR	8020840	Argument	fd		8020068	2					
ANR	8020841	Identifier	fd		8020068	0					
ANR	8020842	Argument	fdc_tc		8020068	3					
ANR	8020843	Identifier	fdc_tc		8020068	0					
ANR	8020844	IfStatement	if ( drive_get_max_bus ( IF_SCSI ) > 0 )		8020068	67					
ANR	8020845	Condition	drive_get_max_bus ( IF_SCSI ) > 0	245:8:4825:4854	8020068	0	True				
ANR	8020846	RelationalExpression	drive_get_max_bus ( IF_SCSI ) > 0		8020068	0		>			
ANR	8020847	CallExpression	drive_get_max_bus ( IF_SCSI )		8020068	0					
ANR	8020848	Callee	drive_get_max_bus		8020068	0					
ANR	8020849	Identifier	drive_get_max_bus		8020068	0					
ANR	8020850	ArgumentList	IF_SCSI		8020068	1					
ANR	8020851	Argument	IF_SCSI		8020068	0					
ANR	8020852	Identifier	IF_SCSI		8020068	0					
ANR	8020853	PrimaryExpression	0		8020068	1					
ANR	8020854	CompoundStatement		235:40:4521:4521	8020068	1					
ANR	8020855	ExpressionStatement	"fprintf ( stderr , ""qemu: too many SCSI bus\\n"" )"	247:8:4868:4912	8020068	0	True				
ANR	8020856	CallExpression	"fprintf ( stderr , ""qemu: too many SCSI bus\\n"" )"		8020068	0					
ANR	8020857	Callee	fprintf		8020068	0					
ANR	8020858	Identifier	fprintf		8020068	0					
ANR	8020859	ArgumentList	stderr		8020068	1					
ANR	8020860	Argument	stderr		8020068	0					
ANR	8020861	Identifier	stderr		8020068	0					
ANR	8020862	Argument	"""qemu: too many SCSI bus\\n"""		8020068	1					
ANR	8020863	PrimaryExpression	"""qemu: too many SCSI bus\\n"""		8020068	0					
ANR	8020864	ExpressionStatement	exit ( 1 )	249:8:4923:4930	8020068	1	True				
ANR	8020865	CallExpression	exit ( 1 )		8020068	0					
ANR	8020866	Callee	exit		8020068	0					
ANR	8020867	Identifier	exit		8020068	0					
ANR	8020868	ArgumentList	1		8020068	1					
ANR	8020869	Argument	1		8020068	0					
ANR	8020870	PrimaryExpression	1		8020068	0					
ANR	8020871	ExpressionStatement	"main_esp = esp_init ( hwdef -> esp_base , 2 , espdma_memory_read , espdma_memory_write , espdma , * espdma_irq , esp_reset )"	255:4:4946:5108	8020068	68	True				
ANR	8020872	AssignmentExpression	"main_esp = esp_init ( hwdef -> esp_base , 2 , espdma_memory_read , espdma_memory_write , espdma , * espdma_irq , esp_reset )"		8020068	0		=			
ANR	8020873	Identifier	main_esp		8020068	0					
ANR	8020874	CallExpression	"esp_init ( hwdef -> esp_base , 2 , espdma_memory_read , espdma_memory_write , espdma , * espdma_irq , esp_reset )"		8020068	1					
ANR	8020875	Callee	esp_init		8020068	0					
ANR	8020876	Identifier	esp_init		8020068	0					
ANR	8020877	ArgumentList	hwdef -> esp_base		8020068	1					
ANR	8020878	Argument	hwdef -> esp_base		8020068	0					
ANR	8020879	PtrMemberAccess	hwdef -> esp_base		8020068	0					
ANR	8020880	Identifier	hwdef		8020068	0					
ANR	8020881	Identifier	esp_base		8020068	1					
ANR	8020882	Argument	2		8020068	1					
ANR	8020883	PrimaryExpression	2		8020068	0					
ANR	8020884	Argument	espdma_memory_read		8020068	2					
ANR	8020885	Identifier	espdma_memory_read		8020068	0					
ANR	8020886	Argument	espdma_memory_write		8020068	3					
ANR	8020887	Identifier	espdma_memory_write		8020068	0					
ANR	8020888	Argument	espdma		8020068	4					
ANR	8020889	Identifier	espdma		8020068	0					
ANR	8020890	Argument	* espdma_irq		8020068	5					
ANR	8020891	UnaryOperationExpression	* espdma_irq		8020068	0					
ANR	8020892	UnaryOperator	*		8020068	0					
ANR	8020893	Identifier	espdma_irq		8020068	1					
ANR	8020894	Argument	esp_reset		8020068	6					
ANR	8020895	Identifier	esp_reset		8020068	0					
ANR	8020896	ForStatement	for ( i = 0 ; i < ESP_MAX_DEVS ; i ++ )		8020068	69					
ANR	8020897	ForInit	i = 0 ;	263:9:5122:5127	8020068	0	True				
ANR	8020898	AssignmentExpression	i = 0		8020068	0		=			
ANR	8020899	Identifier	i		8020068	0					
ANR	8020900	PrimaryExpression	0		8020068	1					
ANR	8020901	Condition	i < ESP_MAX_DEVS	263:16:5129:5144	8020068	1	True				
ANR	8020902	RelationalExpression	i < ESP_MAX_DEVS		8020068	0		<			
ANR	8020903	Identifier	i		8020068	0					
ANR	8020904	Identifier	ESP_MAX_DEVS		8020068	1					
ANR	8020905	PostIncDecOperationExpression	i ++	263:34:5147:5149	8020068	2	True				
ANR	8020906	Identifier	i		8020068	0					
ANR	8020907	IncDec	++		8020068	1					
ANR	8020908	CompoundStatement		253:39:4816:4816	8020068	3					
ANR	8020909	ExpressionStatement	"drive_index = drive_get_index ( IF_SCSI , 0 , i )"	265:8:5163:5207	8020068	0	True				
ANR	8020910	AssignmentExpression	"drive_index = drive_get_index ( IF_SCSI , 0 , i )"		8020068	0		=			
ANR	8020911	Identifier	drive_index		8020068	0					
ANR	8020912	CallExpression	"drive_get_index ( IF_SCSI , 0 , i )"		8020068	1					
ANR	8020913	Callee	drive_get_index		8020068	0					
ANR	8020914	Identifier	drive_get_index		8020068	0					
ANR	8020915	ArgumentList	IF_SCSI		8020068	1					
ANR	8020916	Argument	IF_SCSI		8020068	0					
ANR	8020917	Identifier	IF_SCSI		8020068	0					
ANR	8020918	Argument	0		8020068	1					
ANR	8020919	PrimaryExpression	0		8020068	0					
ANR	8020920	Argument	i		8020068	2					
ANR	8020921	Identifier	i		8020068	0					
ANR	8020922	IfStatement	if ( drive_index == - 1 )		8020068	1					
ANR	8020923	Condition	drive_index == - 1	267:12:5222:5238	8020068	0	True				
ANR	8020924	EqualityExpression	drive_index == - 1		8020068	0		==			
ANR	8020925	Identifier	drive_index		8020068	0					
ANR	8020926	UnaryOperationExpression	- 1		8020068	1					
ANR	8020927	UnaryOperator	-		8020068	0					
ANR	8020928	PrimaryExpression	1		8020068	1					
ANR	8020929	ContinueStatement	continue ;	269:12:5254:5262	8020068	1	True				
ANR	8020930	ExpressionStatement	"esp_scsi_attach ( main_esp , drives_table [ drive_index ] . bdrv , i )"	271:8:5273:5333	8020068	2	True				
ANR	8020931	CallExpression	"esp_scsi_attach ( main_esp , drives_table [ drive_index ] . bdrv , i )"		8020068	0					
ANR	8020932	Callee	esp_scsi_attach		8020068	0					
ANR	8020933	Identifier	esp_scsi_attach		8020068	0					
ANR	8020934	ArgumentList	main_esp		8020068	1					
ANR	8020935	Argument	main_esp		8020068	0					
ANR	8020936	Identifier	main_esp		8020068	0					
ANR	8020937	Argument	drives_table [ drive_index ] . bdrv		8020068	1					
ANR	8020938	MemberAccess	drives_table [ drive_index ] . bdrv		8020068	0					
ANR	8020939	ArrayIndexing	drives_table [ drive_index ]		8020068	0					
ANR	8020940	Identifier	drives_table		8020068	0					
ANR	8020941	Identifier	drive_index		8020068	1					
ANR	8020942	Identifier	bdrv		8020068	1					
ANR	8020943	Argument	i		8020068	2					
ANR	8020944	Identifier	i		8020068	0					
ANR	8020945	ExpressionStatement	"kernel_size = sun4m_load_kernel ( kernel_filename , initrd_filename , RAM_size )"	277:4:5349:5461	8020068	70	True				
ANR	8020946	AssignmentExpression	"kernel_size = sun4m_load_kernel ( kernel_filename , initrd_filename , RAM_size )"		8020068	0		=			
ANR	8020947	Identifier	kernel_size		8020068	0					
ANR	8020948	CallExpression	"sun4m_load_kernel ( kernel_filename , initrd_filename , RAM_size )"		8020068	1					
ANR	8020949	Callee	sun4m_load_kernel		8020068	0					
ANR	8020950	Identifier	sun4m_load_kernel		8020068	0					
ANR	8020951	ArgumentList	kernel_filename		8020068	1					
ANR	8020952	Argument	kernel_filename		8020068	0					
ANR	8020953	Identifier	kernel_filename		8020068	0					
ANR	8020954	Argument	initrd_filename		8020068	1					
ANR	8020955	Identifier	initrd_filename		8020068	0					
ANR	8020956	Argument	RAM_size		8020068	2					
ANR	8020957	Identifier	RAM_size		8020068	0					
ANR	8020958	ExpressionStatement	"nvram_init ( nvram , ( uint8_t * ) & nd_table [ 0 ] . macaddr , kernel_cmdline , boot_device , RAM_size , kernel_size , graphic_width , graphic_height , graphic_depth , hwdef -> nvram_machine_id , ""Sun4c"" )"	283:4:5470:5700	8020068	71	True				
ANR	8020959	CallExpression	"nvram_init ( nvram , ( uint8_t * ) & nd_table [ 0 ] . macaddr , kernel_cmdline , boot_device , RAM_size , kernel_size , graphic_width , graphic_height , graphic_depth , hwdef -> nvram_machine_id , ""Sun4c"" )"		8020068	0					
ANR	8020960	Callee	nvram_init		8020068	0					
ANR	8020961	Identifier	nvram_init		8020068	0					
ANR	8020962	ArgumentList	nvram		8020068	1					
ANR	8020963	Argument	nvram		8020068	0					
ANR	8020964	Identifier	nvram		8020068	0					
ANR	8020965	Argument	( uint8_t * ) & nd_table [ 0 ] . macaddr		8020068	1					
ANR	8020966	CastExpression	( uint8_t * ) & nd_table [ 0 ] . macaddr		8020068	0					
ANR	8020967	CastTarget	uint8_t *		8020068	0					
ANR	8020968	UnaryOperationExpression	& nd_table [ 0 ] . macaddr		8020068	1					
ANR	8020969	UnaryOperator	&		8020068	0					
ANR	8020970	MemberAccess	nd_table [ 0 ] . macaddr		8020068	1					
ANR	8020971	ArrayIndexing	nd_table [ 0 ]		8020068	0					
ANR	8020972	Identifier	nd_table		8020068	0					
ANR	8020973	PrimaryExpression	0		8020068	1					
ANR	8020974	Identifier	macaddr		8020068	1					
ANR	8020975	Argument	kernel_cmdline		8020068	2					
ANR	8020976	Identifier	kernel_cmdline		8020068	0					
ANR	8020977	Argument	boot_device		8020068	3					
ANR	8020978	Identifier	boot_device		8020068	0					
ANR	8020979	Argument	RAM_size		8020068	4					
ANR	8020980	Identifier	RAM_size		8020068	0					
ANR	8020981	Argument	kernel_size		8020068	5					
ANR	8020982	Identifier	kernel_size		8020068	0					
ANR	8020983	Argument	graphic_width		8020068	6					
ANR	8020984	Identifier	graphic_width		8020068	0					
ANR	8020985	Argument	graphic_height		8020068	7					
ANR	8020986	Identifier	graphic_height		8020068	0					
ANR	8020987	Argument	graphic_depth		8020068	8					
ANR	8020988	Identifier	graphic_depth		8020068	0					
ANR	8020989	Argument	hwdef -> nvram_machine_id		8020068	9					
ANR	8020990	PtrMemberAccess	hwdef -> nvram_machine_id		8020068	0					
ANR	8020991	Identifier	hwdef		8020068	0					
ANR	8020992	Identifier	nvram_machine_id		8020068	1					
ANR	8020993	Argument	"""Sun4c"""		8020068	10					
ANR	8020994	PrimaryExpression	"""Sun4c"""		8020068	0					
ANR	8020995	ExpressionStatement	"fw_cfg = fw_cfg_init ( 0 , 0 , CFG_ADDR , CFG_ADDR + 2 )"	293:4:5709:5759	8020068	72	True				
ANR	8020996	AssignmentExpression	"fw_cfg = fw_cfg_init ( 0 , 0 , CFG_ADDR , CFG_ADDR + 2 )"		8020068	0		=			
ANR	8020997	Identifier	fw_cfg		8020068	0					
ANR	8020998	CallExpression	"fw_cfg_init ( 0 , 0 , CFG_ADDR , CFG_ADDR + 2 )"		8020068	1					
ANR	8020999	Callee	fw_cfg_init		8020068	0					
ANR	8021000	Identifier	fw_cfg_init		8020068	0					
ANR	8021001	ArgumentList	0		8020068	1					
ANR	8021002	Argument	0		8020068	0					
ANR	8021003	PrimaryExpression	0		8020068	0					
ANR	8021004	Argument	0		8020068	1					
ANR	8021005	PrimaryExpression	0		8020068	0					
ANR	8021006	Argument	CFG_ADDR		8020068	2					
ANR	8021007	Identifier	CFG_ADDR		8020068	0					
ANR	8021008	Argument	CFG_ADDR + 2		8020068	3					
ANR	8021009	AdditiveExpression	CFG_ADDR + 2		8020068	0		+			
ANR	8021010	Identifier	CFG_ADDR		8020068	0					
ANR	8021011	PrimaryExpression	2		8020068	1					
ANR	8021012	ExpressionStatement	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_ID , 1 )"	295:4:5766:5802	8020068	73	True				
ANR	8021013	CallExpression	"fw_cfg_add_i32 ( fw_cfg , FW_CFG_ID , 1 )"		8020068	0					
ANR	8021014	Callee	fw_cfg_add_i32		8020068	0					
ANR	8021015	Identifier	fw_cfg_add_i32		8020068	0					
ANR	8021016	ArgumentList	fw_cfg		8020068	1					
ANR	8021017	Argument	fw_cfg		8020068	0					
ANR	8021018	Identifier	fw_cfg		8020068	0					
ANR	8021019	Argument	FW_CFG_ID		8020068	1					
ANR	8021020	Identifier	FW_CFG_ID		8020068	0					
ANR	8021021	Argument	1		8020068	2					
ANR	8021022	PrimaryExpression	1		8020068	0					
ANR	8021023	ExpressionStatement	"fw_cfg_add_i64 ( fw_cfg , FW_CFG_RAM_SIZE , ( uint64_t ) ram_size )"	297:4:5809:5868	8020068	74	True				
ANR	8021024	CallExpression	"fw_cfg_add_i64 ( fw_cfg , FW_CFG_RAM_SIZE , ( uint64_t ) ram_size )"		8020068	0					
ANR	8021025	Callee	fw_cfg_add_i64		8020068	0					
ANR	8021026	Identifier	fw_cfg_add_i64		8020068	0					
ANR	8021027	ArgumentList	fw_cfg		8020068	1					
ANR	8021028	Argument	fw_cfg		8020068	0					
ANR	8021029	Identifier	fw_cfg		8020068	0					
ANR	8021030	Argument	FW_CFG_RAM_SIZE		8020068	1					
ANR	8021031	Identifier	FW_CFG_RAM_SIZE		8020068	0					
ANR	8021032	Argument	( uint64_t ) ram_size		8020068	2					
ANR	8021033	CastExpression	( uint64_t ) ram_size		8020068	0					
ANR	8021034	CastTarget	uint64_t		8020068	0					
ANR	8021035	Identifier	ram_size		8020068	1					
ANR	8021036	ExpressionStatement	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_MACHINE_ID , hwdef -> machine_id )"	299:4:5875:5935	8020068	75	True				
ANR	8021037	CallExpression	"fw_cfg_add_i16 ( fw_cfg , FW_CFG_MACHINE_ID , hwdef -> machine_id )"		8020068	0					
ANR	8021038	Callee	fw_cfg_add_i16		8020068	0					
ANR	8021039	Identifier	fw_cfg_add_i16		8020068	0					
ANR	8021040	ArgumentList	fw_cfg		8020068	1					
ANR	8021041	Argument	fw_cfg		8020068	0					
ANR	8021042	Identifier	fw_cfg		8020068	0					
ANR	8021043	Argument	FW_CFG_MACHINE_ID		8020068	1					
ANR	8021044	Identifier	FW_CFG_MACHINE_ID		8020068	0					
ANR	8021045	Argument	hwdef -> machine_id		8020068	2					
ANR	8021046	PtrMemberAccess	hwdef -> machine_id		8020068	0					
ANR	8021047	Identifier	hwdef		8020068	0					
ANR	8021048	Identifier	machine_id		8020068	1					
ANR	8021049	ReturnType	static void		8020068	1					
ANR	8021050	Identifier	sun4c_hw_init		8020068	2					
ANR	8021051	ParameterList	"const struct hwdef * hwdef , ram_addr_t RAM_size , const char * boot_device , DisplayState * ds , const char * kernel_filename , const char * kernel_cmdline , const char * initrd_filename , const char * cpu_model"		8020068	3					
ANR	8021052	Parameter	const struct hwdef * hwdef	1:26:26:50	8020068	0	True				
ANR	8021053	ParameterType	const struct hwdef *		8020068	0					
ANR	8021054	Identifier	hwdef		8020068	1					
ANR	8021055	Parameter	ram_addr_t RAM_size	1:53:53:71	8020068	1	True				
ANR	8021056	ParameterType	ram_addr_t		8020068	0					
ANR	8021057	Identifier	RAM_size		8020068	1					
ANR	8021058	Parameter	const char * boot_device	3:26:101:123	8020068	2	True				
ANR	8021059	ParameterType	const char *		8020068	0					
ANR	8021060	Identifier	boot_device		8020068	1					
ANR	8021061	Parameter	DisplayState * ds	5:26:153:168	8020068	3	True				
ANR	8021062	ParameterType	DisplayState *		8020068	0					
ANR	8021063	Identifier	ds		8020068	1					
ANR	8021064	Parameter	const char * kernel_filename	5:44:171:197	8020068	4	True				
ANR	8021065	ParameterType	const char *		8020068	0					
ANR	8021066	Identifier	kernel_filename		8020068	1					
ANR	8021067	Parameter	const char * kernel_cmdline	7:26:227:252	8020068	5	True				
ANR	8021068	ParameterType	const char *		8020068	0					
ANR	8021069	Identifier	kernel_cmdline		8020068	1					
ANR	8021070	Parameter	const char * initrd_filename	9:26:282:308	8020068	6	True				
ANR	8021071	ParameterType	const char *		8020068	0					
ANR	8021072	Identifier	initrd_filename		8020068	1					
ANR	8021073	Parameter	const char * cpu_model	9:55:311:331	8020068	7	True				
ANR	8021074	ParameterType	const char *		8020068	0					
ANR	8021075	Identifier	cpu_model		8020068	1					
ANR	8021076	CFGEntryNode	ENTRY		8020068		True				
ANR	8021077	CFGExitNode	EXIT		8020068		True				
ANR	8021078	Symbol	graphic_width		8020068						
ANR	8021079	Symbol	hwdef -> slavio_base		8020068						
ANR	8021080	Symbol	IO_MEM_ROM		8020068						
ANR	8021081	Symbol	drive_get_max_bus		8020068						
ANR	8021082	Symbol	drive_index		8020068						
ANR	8021083	Symbol	nvram		8020068						
ANR	8021084	Symbol	iommu		8020068						
ANR	8021085	Symbol	PROM_SIZE_MAX		8020068						
ANR	8021086	Symbol	hwdef -> sun4c_intctl_base		8020068						
ANR	8021087	Symbol	fw_cfg_init		8020068						
ANR	8021088	Symbol	ledma_irq		8020068						
ANR	8021089	Symbol	esp_reset		8020068						
ANR	8021090	Symbol	TARGET_PAGE_SIZE		8020068						
ANR	8021091	Symbol	hwdef -> machine_id		8020068						
ANR	8021092	Symbol	* slavio_irq		8020068						
ANR	8021093	Symbol	m48t59_init		8020068						
ANR	8021094	Symbol	fw_cfg		8020068						
ANR	8021095	Symbol	& fdc_tc		8020068						
ANR	8021096	Symbol	fdc_tc		8020068						
ANR	8021097	Symbol	hwdef -> default_cpu_model		8020068						
ANR	8021098	Symbol	sparc32_dma_init		8020068						
ANR	8021099	Symbol	bios_dir		8020068						
ANR	8021100	Symbol	graphic_depth		8020068						
ANR	8021101	Symbol	PROM_VADDR		8020068						
ANR	8021102	Symbol	phys_ram_base		8020068						
ANR	8021103	Symbol	hwdef -> max_mem		8020068						
ANR	8021104	Symbol	sun4c_intctl_init		8020068						
ANR	8021105	Symbol	ESP_MAX_DEVS		8020068						
ANR	8021106	Symbol	nd_table [ 0 ] . model		8020068						
ANR	8021107	Symbol	hwdef -> le_base		8020068						
ANR	8021108	Symbol	* hwdef -> fd_irq		8020068						
ANR	8021109	Symbol	& esp_reset		8020068						
ANR	8021110	Symbol	* ledma_irq		8020068						
ANR	8021111	Symbol	hwdef -> fd_irq		8020068						
ANR	8021112	Symbol	hwdef -> fd_base		8020068						
ANR	8021113	Symbol	hwdef -> iommu_version		8020068						
ANR	8021114	Symbol	hwdef -> tcx_base		8020068						
ANR	8021115	Symbol	cpu_model		8020068						
ANR	8021116	Symbol	load_image_targphys		8020068						
ANR	8021117	Symbol	hwdef -> dma_base		8020068						
ANR	8021118	Symbol	nd_table		8020068						
ANR	8021119	Symbol	hwdef -> vram_size		8020068						
ANR	8021120	Symbol	slavio_irq		8020068						
ANR	8021121	Symbol	* drive_index		8020068						
ANR	8021122	Symbol	hwdef -> nvram_base		8020068						
ANR	8021123	Symbol	* hwdef -> ser_irq		8020068						
ANR	8021124	Symbol	esp_init		8020068						
ANR	8021125	Symbol	hwdef -> me_irq		8020068						
ANR	8021126	Symbol	hwdef		8020068						
ANR	8021127	Symbol	hwdef -> aux1_base		8020068						
ANR	8021128	Symbol	* fd		8020068						
ANR	8021129	Symbol	CFG_ADDR		8020068						
ANR	8021130	Symbol	i		8020068						
ANR	8021131	Symbol	drive_get_index		8020068						
ANR	8021132	Symbol	qemu_allocate_irqs		8020068						
ANR	8021133	Symbol	* hwdef -> me_irq		8020068						
ANR	8021134	Symbol	drives_table [ drive_index ] . bdrv		8020068						
ANR	8021135	Symbol	espdma_memory_write		8020068						
ANR	8021136	Symbol	le_reset		8020068						
ANR	8021137	Symbol	& slavio_irq		8020068						
ANR	8021138	Symbol	espdma_irq		8020068						
ANR	8021139	Symbol	* hwdef		8020068						
ANR	8021140	Symbol	ram_size		8020068						
ANR	8021141	Symbol	buf		8020068						
ANR	8021142	Symbol	main_esp		8020068						
ANR	8021143	Symbol	hwdef -> esp_irq		8020068						
ANR	8021144	Symbol	kernel_filename		8020068						
ANR	8021145	Symbol	serial_hds		8020068						
ANR	8021146	Symbol	sun4m_load_kernel		8020068						
ANR	8021147	Symbol	hwdef -> apc_base		8020068						
ANR	8021148	Symbol	espdma_memory_read		8020068						
ANR	8021149	Symbol	hwdef -> nvram_machine_id		8020068						
ANR	8021150	Symbol	* hwdef -> ms_kb_irq		8020068						
ANR	8021151	Symbol	& nd_table [ 0 ] . macaddr		8020068						
ANR	8021152	Symbol	ds		8020068						
ANR	8021153	Symbol	slavio_intctl		8020068						
ANR	8021154	Symbol	* hwdef -> esp_irq		8020068						
ANR	8021155	Symbol	* * hwdef		8020068						
ANR	8021156	Symbol	hwdef -> iommu_base		8020068						
ANR	8021157	Symbol	kernel_size		8020068						
ANR	8021158	Symbol	IF_FLOPPY		8020068						
ANR	8021159	Symbol	ret		8020068						
ANR	8021160	Symbol	strcmp		8020068						
ANR	8021161	Symbol	cpu_irqs		8020068						
ANR	8021162	Symbol	NULL		8020068						
ANR	8021163	Symbol	prom_offset		8020068						
ANR	8021164	Symbol	FW_CFG_MACHINE_ID		8020068						
ANR	8021165	Symbol	iommu_init		8020068						
ANR	8021166	Symbol	cpu_init		8020068						
ANR	8021167	Symbol	* env		8020068						
ANR	8021168	Symbol	hwdef -> ser_irq		8020068						
ANR	8021169	Symbol	stderr		8020068						
ANR	8021170	Symbol	hwdef -> esp_base		8020068						
ANR	8021171	Symbol	boot_device		8020068						
ANR	8021172	Symbol	nographic		8020068						
ANR	8021173	Symbol	env -> prom_addr		8020068						
ANR	8021174	Symbol	& espdma_irq		8020068						
ANR	8021175	Symbol	fd		8020068						
ANR	8021176	Symbol	load_elf		8020068						
ANR	8021177	Symbol	PROM_FILENAME		8020068						
ANR	8021178	Symbol	kernel_cmdline		8020068						
ANR	8021179	Symbol	RAM_size		8020068						
ANR	8021180	Symbol	TARGET_PAGE_MASK		8020068						
ANR	8021181	Symbol	graphic_height		8020068						
ANR	8021182	Symbol	hwdef -> nvram_size		8020068						
ANR	8021183	Symbol	cpu_set_irq		8020068						
ANR	8021184	Symbol	* nd_table		8020068						
ANR	8021185	Symbol	initrd_filename		8020068						
ANR	8021186	Symbol	main_cpu_reset		8020068						
ANR	8021187	Symbol	hwdef -> ms_kb_base		8020068						
ANR	8021188	Symbol	FW_CFG_RAM_SIZE		8020068						
ANR	8021189	Symbol	bios_name		8020068						
ANR	8021190	Symbol	hwdef -> aux2_base		8020068						
ANR	8021191	Symbol	espdma		8020068						
ANR	8021192	Symbol	FW_CFG_ID		8020068						
ANR	8021193	Symbol	MAX_PILS		8020068						
ANR	8021194	Symbol	slavio_misc		8020068						
ANR	8021195	Symbol	hwdef -> ms_kb_irq		8020068						
ANR	8021196	Symbol	env		8020068						
ANR	8021197	Symbol	slavio_misc_init		8020068						
ANR	8021198	Symbol	drives_table		8020068						
ANR	8021199	Symbol	* serial_hds		8020068						
ANR	8021200	Symbol	hwdef -> serial_base		8020068						
ANR	8021201	Symbol	IF_SCSI		8020068						
ANR	8021202	Symbol	* drives_table		8020068						
ANR	8021203	Symbol	* espdma_irq		8020068						
ANR	8021204	Symbol	ledma		8020068						
