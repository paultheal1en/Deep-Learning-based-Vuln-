command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8012587	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sub2video_prepare_01_0.c								
ANR	8012588	Function	sub2video_prepare	1:0:0:1415							
ANR	8012589	FunctionDef	sub2video_prepare (InputStream * ist)		8012588	0					
ANR	8012590	CompoundStatement		3:0:48:1415	8012588	0					
ANR	8012591	IdentifierDeclStatement	AVFormatContext * avf = input_files [ ist -> file_index ] -> ctx ;	5:4:55:111	8012588	0	True				
ANR	8012592	IdentifierDecl	* avf = input_files [ ist -> file_index ] -> ctx		8012588	0					
ANR	8012593	IdentifierDeclType	AVFormatContext *		8012588	0					
ANR	8012594	Identifier	avf		8012588	1					
ANR	8012595	AssignmentExpression	* avf = input_files [ ist -> file_index ] -> ctx		8012588	2		=			
ANR	8012596	Identifier	avf		8012588	0					
ANR	8012597	PtrMemberAccess	input_files [ ist -> file_index ] -> ctx		8012588	1					
ANR	8012598	ArrayIndexing	input_files [ ist -> file_index ]		8012588	0					
ANR	8012599	Identifier	input_files		8012588	0					
ANR	8012600	PtrMemberAccess	ist -> file_index		8012588	1					
ANR	8012601	Identifier	ist		8012588	0					
ANR	8012602	Identifier	file_index		8012588	1					
ANR	8012603	Identifier	ctx		8012588	1					
ANR	8012604	IdentifierDeclStatement	"int i , w , h ;"	7:4:118:129	8012588	1	True				
ANR	8012605	IdentifierDecl	i		8012588	0					
ANR	8012606	IdentifierDeclType	int		8012588	0					
ANR	8012607	Identifier	i		8012588	1					
ANR	8012608	IdentifierDecl	w		8012588	1					
ANR	8012609	IdentifierDeclType	int		8012588	0					
ANR	8012610	Identifier	w		8012588	1					
ANR	8012611	IdentifierDecl	h		8012588	2					
ANR	8012612	IdentifierDeclType	int		8012588	0					
ANR	8012613	Identifier	h		8012588	1					
ANR	8012614	ExpressionStatement	w = ist -> dec_ctx -> width	17:4:345:368	8012588	2	True				
ANR	8012615	AssignmentExpression	w = ist -> dec_ctx -> width		8012588	0		=			
ANR	8012616	Identifier	w		8012588	0					
ANR	8012617	PtrMemberAccess	ist -> dec_ctx -> width		8012588	1					
ANR	8012618	PtrMemberAccess	ist -> dec_ctx		8012588	0					
ANR	8012619	Identifier	ist		8012588	0					
ANR	8012620	Identifier	dec_ctx		8012588	1					
ANR	8012621	Identifier	width		8012588	1					
ANR	8012622	ExpressionStatement	h = ist -> dec_ctx -> height	19:4:375:399	8012588	3	True				
ANR	8012623	AssignmentExpression	h = ist -> dec_ctx -> height		8012588	0		=			
ANR	8012624	Identifier	h		8012588	0					
ANR	8012625	PtrMemberAccess	ist -> dec_ctx -> height		8012588	1					
ANR	8012626	PtrMemberAccess	ist -> dec_ctx		8012588	0					
ANR	8012627	Identifier	ist		8012588	0					
ANR	8012628	Identifier	dec_ctx		8012588	1					
ANR	8012629	Identifier	height		8012588	1					
ANR	8012630	IfStatement	if ( ! ( w && h ) )		8012588	4					
ANR	8012631	Condition	! ( w && h )	21:8:410:418	8012588	0	True				
ANR	8012632	UnaryOperationExpression	! ( w && h )		8012588	0					
ANR	8012633	UnaryOperator	!		8012588	0					
ANR	8012634	AndExpression	w && h		8012588	1		&&			
ANR	8012635	Identifier	w		8012588	0					
ANR	8012636	Identifier	h		8012588	1					
ANR	8012637	CompoundStatement		19:19:372:372	8012588	1					
ANR	8012638	ForStatement	for ( i = 0 ; i < avf -> nb_streams ; i ++ )		8012588	0					
ANR	8012639	ForInit	i = 0 ;	23:13:437:442	8012588	0	True				
ANR	8012640	AssignmentExpression	i = 0		8012588	0		=			
ANR	8012641	Identifier	i		8012588	0					
ANR	8012642	PrimaryExpression	0		8012588	1					
ANR	8012643	Condition	i < avf -> nb_streams	23:20:444:462	8012588	1	True				
ANR	8012644	RelationalExpression	i < avf -> nb_streams		8012588	0		<			
ANR	8012645	Identifier	i		8012588	0					
ANR	8012646	PtrMemberAccess	avf -> nb_streams		8012588	1					
ANR	8012647	Identifier	avf		8012588	0					
ANR	8012648	Identifier	nb_streams		8012588	1					
ANR	8012649	PostIncDecOperationExpression	i ++	23:41:465:467	8012588	2	True				
ANR	8012650	Identifier	i		8012588	0					
ANR	8012651	IncDec	++		8012588	1					
ANR	8012652	CompoundStatement		21:46:421:421	8012588	3					
ANR	8012653	IfStatement	if ( avf -> streams [ i ] -> codec -> codec_type == AVMEDIA_TYPE_VIDEO )		8012588	0					
ANR	8012654	Condition	avf -> streams [ i ] -> codec -> codec_type == AVMEDIA_TYPE_VIDEO	25:16:489:544	8012588	0	True				
ANR	8012655	EqualityExpression	avf -> streams [ i ] -> codec -> codec_type == AVMEDIA_TYPE_VIDEO		8012588	0		==			
ANR	8012656	PtrMemberAccess	avf -> streams [ i ] -> codec -> codec_type		8012588	0					
ANR	8012657	PtrMemberAccess	avf -> streams [ i ] -> codec		8012588	0					
ANR	8012658	ArrayIndexing	avf -> streams [ i ]		8012588	0					
ANR	8012659	PtrMemberAccess	avf -> streams		8012588	0					
ANR	8012660	Identifier	avf		8012588	0					
ANR	8012661	Identifier	streams		8012588	1					
ANR	8012662	Identifier	i		8012588	1					
ANR	8012663	Identifier	codec		8012588	1					
ANR	8012664	Identifier	codec_type		8012588	1					
ANR	8012665	Identifier	AVMEDIA_TYPE_VIDEO		8012588	1					
ANR	8012666	CompoundStatement		23:74:498:498	8012588	1					
ANR	8012667	ExpressionStatement	"w = FFMAX ( w , avf -> streams [ i ] -> codec -> width )"	27:16:566:609	8012588	0	True				
ANR	8012668	AssignmentExpression	"w = FFMAX ( w , avf -> streams [ i ] -> codec -> width )"		8012588	0		=			
ANR	8012669	Identifier	w		8012588	0					
ANR	8012670	CallExpression	"FFMAX ( w , avf -> streams [ i ] -> codec -> width )"		8012588	1					
ANR	8012671	Callee	FFMAX		8012588	0					
ANR	8012672	Identifier	FFMAX		8012588	0					
ANR	8012673	ArgumentList	w		8012588	1					
ANR	8012674	Argument	w		8012588	0					
ANR	8012675	Identifier	w		8012588	0					
ANR	8012676	Argument	avf -> streams [ i ] -> codec -> width		8012588	1					
ANR	8012677	PtrMemberAccess	avf -> streams [ i ] -> codec -> width		8012588	0					
ANR	8012678	PtrMemberAccess	avf -> streams [ i ] -> codec		8012588	0					
ANR	8012679	ArrayIndexing	avf -> streams [ i ]		8012588	0					
ANR	8012680	PtrMemberAccess	avf -> streams		8012588	0					
ANR	8012681	Identifier	avf		8012588	0					
ANR	8012682	Identifier	streams		8012588	1					
ANR	8012683	Identifier	i		8012588	1					
ANR	8012684	Identifier	codec		8012588	1					
ANR	8012685	Identifier	width		8012588	1					
ANR	8012686	ExpressionStatement	"h = FFMAX ( h , avf -> streams [ i ] -> codec -> height )"	29:16:628:672	8012588	1	True				
ANR	8012687	AssignmentExpression	"h = FFMAX ( h , avf -> streams [ i ] -> codec -> height )"		8012588	0		=			
ANR	8012688	Identifier	h		8012588	0					
ANR	8012689	CallExpression	"FFMAX ( h , avf -> streams [ i ] -> codec -> height )"		8012588	1					
ANR	8012690	Callee	FFMAX		8012588	0					
ANR	8012691	Identifier	FFMAX		8012588	0					
ANR	8012692	ArgumentList	h		8012588	1					
ANR	8012693	Argument	h		8012588	0					
ANR	8012694	Identifier	h		8012588	0					
ANR	8012695	Argument	avf -> streams [ i ] -> codec -> height		8012588	1					
ANR	8012696	PtrMemberAccess	avf -> streams [ i ] -> codec -> height		8012588	0					
ANR	8012697	PtrMemberAccess	avf -> streams [ i ] -> codec		8012588	0					
ANR	8012698	ArrayIndexing	avf -> streams [ i ]		8012588	0					
ANR	8012699	PtrMemberAccess	avf -> streams		8012588	0					
ANR	8012700	Identifier	avf		8012588	0					
ANR	8012701	Identifier	streams		8012588	1					
ANR	8012702	Identifier	i		8012588	1					
ANR	8012703	Identifier	codec		8012588	1					
ANR	8012704	Identifier	height		8012588	1					
ANR	8012705	IfStatement	if ( ! ( w && h ) )		8012588	1					
ANR	8012706	Condition	! ( w && h )	35:12:713:721	8012588	0	True				
ANR	8012707	UnaryOperationExpression	! ( w && h )		8012588	0					
ANR	8012708	UnaryOperator	!		8012588	0					
ANR	8012709	AndExpression	w && h		8012588	1		&&			
ANR	8012710	Identifier	w		8012588	0					
ANR	8012711	Identifier	h		8012588	1					
ANR	8012712	CompoundStatement		33:23:675:675	8012588	1					
ANR	8012713	ExpressionStatement	"w = FFMAX ( w , 720 )"	37:12:739:756	8012588	0	True				
ANR	8012714	AssignmentExpression	"w = FFMAX ( w , 720 )"		8012588	0		=			
ANR	8012715	Identifier	w		8012588	0					
ANR	8012716	CallExpression	"FFMAX ( w , 720 )"		8012588	1					
ANR	8012717	Callee	FFMAX		8012588	0					
ANR	8012718	Identifier	FFMAX		8012588	0					
ANR	8012719	ArgumentList	w		8012588	1					
ANR	8012720	Argument	w		8012588	0					
ANR	8012721	Identifier	w		8012588	0					
ANR	8012722	Argument	720		8012588	1					
ANR	8012723	PrimaryExpression	720		8012588	0					
ANR	8012724	ExpressionStatement	"h = FFMAX ( h , 576 )"	39:12:771:788	8012588	1	True				
ANR	8012725	AssignmentExpression	"h = FFMAX ( h , 576 )"		8012588	0		=			
ANR	8012726	Identifier	h		8012588	0					
ANR	8012727	CallExpression	"FFMAX ( h , 576 )"		8012588	1					
ANR	8012728	Callee	FFMAX		8012588	0					
ANR	8012729	Identifier	FFMAX		8012588	0					
ANR	8012730	ArgumentList	h		8012588	1					
ANR	8012731	Argument	h		8012588	0					
ANR	8012732	Identifier	h		8012588	0					
ANR	8012733	Argument	576		8012588	1					
ANR	8012734	PrimaryExpression	576		8012588	0					
ANR	8012735	ExpressionStatement	"av_log ( avf , AV_LOG_INFO , ""sub2video: using %dx%d canvas\\n"" , w , h )"	43:8:810:875	8012588	2	True				
ANR	8012736	CallExpression	"av_log ( avf , AV_LOG_INFO , ""sub2video: using %dx%d canvas\\n"" , w , h )"		8012588	0					
ANR	8012737	Callee	av_log		8012588	0					
ANR	8012738	Identifier	av_log		8012588	0					
ANR	8012739	ArgumentList	avf		8012588	1					
ANR	8012740	Argument	avf		8012588	0					
ANR	8012741	Identifier	avf		8012588	0					
ANR	8012742	Argument	AV_LOG_INFO		8012588	1					
ANR	8012743	Identifier	AV_LOG_INFO		8012588	0					
ANR	8012744	Argument	"""sub2video: using %dx%d canvas\\n"""		8012588	2					
ANR	8012745	PrimaryExpression	"""sub2video: using %dx%d canvas\\n"""		8012588	0					
ANR	8012746	Argument	w		8012588	3					
ANR	8012747	Identifier	w		8012588	0					
ANR	8012748	Argument	h		8012588	4					
ANR	8012749	Identifier	h		8012588	0					
ANR	8012750	ExpressionStatement	ist -> sub2video . w = ist -> dec_ctx -> width = ist -> resample_width = w	47:4:889:955	8012588	5	True				
ANR	8012751	AssignmentExpression	ist -> sub2video . w = ist -> dec_ctx -> width = ist -> resample_width = w		8012588	0		=			
ANR	8012752	MemberAccess	ist -> sub2video . w		8012588	0					
ANR	8012753	PtrMemberAccess	ist -> sub2video		8012588	0					
ANR	8012754	Identifier	ist		8012588	0					
ANR	8012755	Identifier	sub2video		8012588	1					
ANR	8012756	Identifier	w		8012588	1					
ANR	8012757	AssignmentExpression	ist -> dec_ctx -> width = ist -> resample_width = w		8012588	1		=			
ANR	8012758	PtrMemberAccess	ist -> dec_ctx -> width		8012588	0					
ANR	8012759	PtrMemberAccess	ist -> dec_ctx		8012588	0					
ANR	8012760	Identifier	ist		8012588	0					
ANR	8012761	Identifier	dec_ctx		8012588	1					
ANR	8012762	Identifier	width		8012588	1					
ANR	8012763	AssignmentExpression	ist -> resample_width = w		8012588	1		=			
ANR	8012764	PtrMemberAccess	ist -> resample_width		8012588	0					
ANR	8012765	Identifier	ist		8012588	0					
ANR	8012766	Identifier	resample_width		8012588	1					
ANR	8012767	Identifier	w		8012588	1					
ANR	8012768	ExpressionStatement	ist -> sub2video . h = ist -> dec_ctx -> height = ist -> resample_height = h	49:4:962:1028	8012588	6	True				
ANR	8012769	AssignmentExpression	ist -> sub2video . h = ist -> dec_ctx -> height = ist -> resample_height = h		8012588	0		=			
ANR	8012770	MemberAccess	ist -> sub2video . h		8012588	0					
ANR	8012771	PtrMemberAccess	ist -> sub2video		8012588	0					
ANR	8012772	Identifier	ist		8012588	0					
ANR	8012773	Identifier	sub2video		8012588	1					
ANR	8012774	Identifier	h		8012588	1					
ANR	8012775	AssignmentExpression	ist -> dec_ctx -> height = ist -> resample_height = h		8012588	1		=			
ANR	8012776	PtrMemberAccess	ist -> dec_ctx -> height		8012588	0					
ANR	8012777	PtrMemberAccess	ist -> dec_ctx		8012588	0					
ANR	8012778	Identifier	ist		8012588	0					
ANR	8012779	Identifier	dec_ctx		8012588	1					
ANR	8012780	Identifier	height		8012588	1					
ANR	8012781	AssignmentExpression	ist -> resample_height = h		8012588	1		=			
ANR	8012782	PtrMemberAccess	ist -> resample_height		8012588	0					
ANR	8012783	Identifier	ist		8012588	0					
ANR	8012784	Identifier	resample_height		8012588	1					
ANR	8012785	Identifier	h		8012588	1					
ANR	8012786	ExpressionStatement	ist -> resample_pix_fmt = ist -> dec_ctx -> pix_fmt = AV_PIX_FMT_RGB32	57:4:1178:1242	8012588	7	True				
ANR	8012787	AssignmentExpression	ist -> resample_pix_fmt = ist -> dec_ctx -> pix_fmt = AV_PIX_FMT_RGB32		8012588	0		=			
ANR	8012788	PtrMemberAccess	ist -> resample_pix_fmt		8012588	0					
ANR	8012789	Identifier	ist		8012588	0					
ANR	8012790	Identifier	resample_pix_fmt		8012588	1					
ANR	8012791	AssignmentExpression	ist -> dec_ctx -> pix_fmt = AV_PIX_FMT_RGB32		8012588	1		=			
ANR	8012792	PtrMemberAccess	ist -> dec_ctx -> pix_fmt		8012588	0					
ANR	8012793	PtrMemberAccess	ist -> dec_ctx		8012588	0					
ANR	8012794	Identifier	ist		8012588	0					
ANR	8012795	Identifier	dec_ctx		8012588	1					
ANR	8012796	Identifier	pix_fmt		8012588	1					
ANR	8012797	Identifier	AV_PIX_FMT_RGB32		8012588	1					
ANR	8012798	ExpressionStatement	ist -> sub2video . frame = av_frame_alloc ( )	61:4:1251:1290	8012588	8	True				
ANR	8012799	AssignmentExpression	ist -> sub2video . frame = av_frame_alloc ( )		8012588	0		=			
ANR	8012800	MemberAccess	ist -> sub2video . frame		8012588	0					
ANR	8012801	PtrMemberAccess	ist -> sub2video		8012588	0					
ANR	8012802	Identifier	ist		8012588	0					
ANR	8012803	Identifier	sub2video		8012588	1					
ANR	8012804	Identifier	frame		8012588	1					
ANR	8012805	CallExpression	av_frame_alloc ( )		8012588	1					
ANR	8012806	Callee	av_frame_alloc		8012588	0					
ANR	8012807	Identifier	av_frame_alloc		8012588	0					
ANR	8012808	ArgumentList			8012588	1					
ANR	8012809	IfStatement	if ( ! ist -> sub2video . frame )		8012588	9					
ANR	8012810	Condition	! ist -> sub2video . frame	63:8:1301:1321	8012588	0	True				
ANR	8012811	UnaryOperationExpression	! ist -> sub2video . frame		8012588	0					
ANR	8012812	UnaryOperator	!		8012588	0					
ANR	8012813	MemberAccess	ist -> sub2video . frame		8012588	1					
ANR	8012814	PtrMemberAccess	ist -> sub2video		8012588	0					
ANR	8012815	Identifier	ist		8012588	0					
ANR	8012816	Identifier	sub2video		8012588	1					
ANR	8012817	Identifier	frame		8012588	1					
ANR	8012818	ReturnStatement	return AVERROR ( ENOMEM ) ;	65:8:1333:1355	8012588	1	True				
ANR	8012819	CallExpression	AVERROR ( ENOMEM )		8012588	0					
ANR	8012820	Callee	AVERROR		8012588	0					
ANR	8012821	Identifier	AVERROR		8012588	0					
ANR	8012822	ArgumentList	ENOMEM		8012588	1					
ANR	8012823	Argument	ENOMEM		8012588	0					
ANR	8012824	Identifier	ENOMEM		8012588	0					
ANR	8012825	ExpressionStatement	ist -> sub2video . last_pts = INT64_MIN	67:4:1362:1397	8012588	10	True				
ANR	8012826	AssignmentExpression	ist -> sub2video . last_pts = INT64_MIN		8012588	0		=			
ANR	8012827	MemberAccess	ist -> sub2video . last_pts		8012588	0					
ANR	8012828	PtrMemberAccess	ist -> sub2video		8012588	0					
ANR	8012829	Identifier	ist		8012588	0					
ANR	8012830	Identifier	sub2video		8012588	1					
ANR	8012831	Identifier	last_pts		8012588	1					
ANR	8012832	Identifier	INT64_MIN		8012588	1					
ANR	8012833	ReturnStatement	return 0 ;	69:4:1404:1412	8012588	11	True				
ANR	8012834	PrimaryExpression	0		8012588	0					
ANR	8012835	ReturnType	static int		8012588	1					
ANR	8012836	Identifier	sub2video_prepare		8012588	2					
ANR	8012837	ParameterList	InputStream * ist		8012588	3					
ANR	8012838	Parameter	InputStream * ist	1:29:29:44	8012588	0	True				
ANR	8012839	ParameterType	InputStream *		8012588	0					
ANR	8012840	Identifier	ist		8012588	1					
ANR	8012841	CFGEntryNode	ENTRY		8012588		True				
ANR	8012842	CFGExitNode	EXIT		8012588		True				
ANR	8012843	Symbol	ENOMEM		8012588						
ANR	8012844	Symbol	* avf		8012588						
ANR	8012845	Symbol	ist -> resample_height		8012588						
ANR	8012846	Symbol	* * * ist		8012588						
ANR	8012847	Symbol	ist		8012588						
ANR	8012848	Symbol	AVMEDIA_TYPE_VIDEO		8012588						
ANR	8012849	Symbol	ist -> resample_width		8012588						
ANR	8012850	Symbol	avf -> streams [ i ] -> codec -> height		8012588						
ANR	8012851	Symbol	ist -> sub2video . last_pts		8012588						
ANR	8012852	Symbol	ist -> dec_ctx -> pix_fmt		8012588						
ANR	8012853	Symbol	INT64_MIN		8012588						
ANR	8012854	Symbol	avf -> nb_streams		8012588						
ANR	8012855	Symbol	* * i		8012588						
ANR	8012856	Symbol	ist -> dec_ctx		8012588						
ANR	8012857	Symbol	* * avf		8012588						
ANR	8012858	Symbol	ist -> dec_ctx -> height		8012588						
ANR	8012859	Symbol	* * * * avf		8012588						
ANR	8012860	Symbol	ist -> sub2video		8012588						
ANR	8012861	Symbol	av_frame_alloc		8012588						
ANR	8012862	Symbol	input_files		8012588						
ANR	8012863	Symbol	avf -> streams [ i ] -> codec -> width		8012588						
ANR	8012864	Symbol	ist -> file_index		8012588						
ANR	8012865	Symbol	* * input_files		8012588						
ANR	8012866	Symbol	* * * i		8012588						
ANR	8012867	Symbol	* avf -> streams [ i ] -> codec		8012588						
ANR	8012868	Symbol	AV_LOG_INFO		8012588						
ANR	8012869	Symbol	ist -> sub2video . frame		8012588						
ANR	8012870	Symbol	* ist -> dec_ctx		8012588						
ANR	8012871	Symbol	* ist		8012588						
ANR	8012872	Symbol	ist -> sub2video . h		8012588						
ANR	8012873	Symbol	* * * avf		8012588						
ANR	8012874	Symbol	avf		8012588						
ANR	8012875	Symbol	* * avf -> streams		8012588						
ANR	8012876	Symbol	ist -> sub2video . w		8012588						
ANR	8012877	Symbol	* * ist -> file_index		8012588						
ANR	8012878	Symbol	* * ist		8012588						
ANR	8012879	Symbol	ist -> dec_ctx -> width		8012588						
ANR	8012880	Symbol	avf -> streams [ i ] -> codec -> codec_type		8012588						
ANR	8012881	Symbol	h		8012588						
ANR	8012882	Symbol	i		8012588						
ANR	8012883	Symbol	* input_files		8012588						
ANR	8012884	Symbol	avf -> streams		8012588						
ANR	8012885	Symbol	avf -> streams [ i ] -> codec		8012588						
ANR	8012886	Symbol	AV_PIX_FMT_RGB32		8012588						
ANR	8012887	Symbol	* i		8012588						
ANR	8012888	Symbol	ist -> resample_pix_fmt		8012588						
ANR	8012889	Symbol	w		8012588						
ANR	8012890	Symbol	* * * avf -> streams		8012588						
ANR	8012891	Symbol	* avf -> streams		8012588						
ANR	8012892	Symbol	AVERROR		8012588						
ANR	8012893	Symbol	input_files [ ist -> file_index ] -> ctx		8012588						
ANR	8012894	Symbol	* ist -> file_index		8012588						
ANR	8012895	Symbol	FFMAX		8012588						
