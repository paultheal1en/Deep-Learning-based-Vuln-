command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3078766	File	/home/p4ultr4n/workplace/ReVeal/raw_code/estimate_motion_b_0.c								
ANR	3078767	Function	estimate_motion_b	1:0:0:2524							
ANR	3078768	FunctionDef	"estimate_motion_b (MpegEncContext * s , int mb_x , int mb_y , int16_t ( * mv_table ) [ 2 ] , int ref_index , int f_code)"		3078767	0					
ANR	3078769	CompoundStatement		5:0:150:2524	3078767	0					
ANR	3078770	Statement	MotionEstContext	7:4:157:172	3078767	0	True				
ANR	3078771	Statement	*	7:21:174:174	3078767	1	True				
ANR	3078772	Statement	const	7:23:176:180	3078767	2	True				
ANR	3078773	ExpressionStatement	c = & s -> me	7:29:182:191	3078767	3	True				
ANR	3078774	AssignmentExpression	c = & s -> me		3078767	0		=			
ANR	3078775	Identifier	c		3078767	0					
ANR	3078776	UnaryOperationExpression	& s -> me		3078767	1					
ANR	3078777	UnaryOperator	&		3078767	0					
ANR	3078778	PtrMemberAccess	s -> me		3078767	1					
ANR	3078779	Identifier	s		3078767	0					
ANR	3078780	Identifier	me		3078767	1					
ANR	3078781	IdentifierDeclStatement	"int mx = 0 , my = 0 , dmin = 0 ;"	9:4:198:226	3078767	4	True				
ANR	3078782	IdentifierDecl	mx = 0		3078767	0					
ANR	3078783	IdentifierDeclType	int		3078767	0					
ANR	3078784	Identifier	mx		3078767	1					
ANR	3078785	AssignmentExpression	mx = 0		3078767	2		=			
ANR	3078786	Identifier	mx		3078767	0					
ANR	3078787	PrimaryExpression	0		3078767	1					
ANR	3078788	IdentifierDecl	my = 0		3078767	1					
ANR	3078789	IdentifierDeclType	int		3078767	0					
ANR	3078790	Identifier	my		3078767	1					
ANR	3078791	AssignmentExpression	my = 0		3078767	2		=			
ANR	3078792	Identifier	my		3078767	0					
ANR	3078793	PrimaryExpression	0		3078767	1					
ANR	3078794	IdentifierDecl	dmin = 0		3078767	2					
ANR	3078795	IdentifierDeclType	int		3078767	0					
ANR	3078796	Identifier	dmin		3078767	1					
ANR	3078797	AssignmentExpression	dmin = 0		3078767	2		=			
ANR	3078798	Identifier	dmin		3078767	0					
ANR	3078799	PrimaryExpression	0		3078767	1					
ANR	3078800	Statement	int	11:4:233:235	3078767	5	True				
ANR	3078801	ExpressionStatement	P [ 10 ] [ 2 ]	11:8:237:245	3078767	6	True				
ANR	3078802	ArrayIndexing	P [ 10 ] [ 2 ]		3078767	0					
ANR	3078803	ArrayIndexing	P [ 10 ]		3078767	0					
ANR	3078804	Identifier	P		3078767	0					
ANR	3078805	PrimaryExpression	10		3078767	1					
ANR	3078806	PrimaryExpression	2		3078767	1					
ANR	3078807	IdentifierDeclStatement	const int shift = 1 + s -> quarter_sample ;	13:4:252:288	3078767	7	True				
ANR	3078808	IdentifierDecl	shift = 1 + s -> quarter_sample		3078767	0					
ANR	3078809	IdentifierDeclType	const int		3078767	0					
ANR	3078810	Identifier	shift		3078767	1					
ANR	3078811	AssignmentExpression	shift = 1 + s -> quarter_sample		3078767	2		=			
ANR	3078812	Identifier	shift		3078767	0					
ANR	3078813	AdditiveExpression	1 + s -> quarter_sample		3078767	1		+			
ANR	3078814	PrimaryExpression	1		3078767	0					
ANR	3078815	PtrMemberAccess	s -> quarter_sample		3078767	1					
ANR	3078816	Identifier	s		3078767	0					
ANR	3078817	Identifier	quarter_sample		3078767	1					
ANR	3078818	IdentifierDeclStatement	const int mot_stride = s -> mb_stride ;	15:4:295:330	3078767	8	True				
ANR	3078819	IdentifierDecl	mot_stride = s -> mb_stride		3078767	0					
ANR	3078820	IdentifierDeclType	const int		3078767	0					
ANR	3078821	Identifier	mot_stride		3078767	1					
ANR	3078822	AssignmentExpression	mot_stride = s -> mb_stride		3078767	2		=			
ANR	3078823	Identifier	mot_stride		3078767	0					
ANR	3078824	PtrMemberAccess	s -> mb_stride		3078767	1					
ANR	3078825	Identifier	s		3078767	0					
ANR	3078826	Identifier	mb_stride		3078767	1					
ANR	3078827	IdentifierDeclStatement	const int mot_xy = mb_y * mot_stride + mb_x ;	17:4:337:378	3078767	9	True				
ANR	3078828	IdentifierDecl	mot_xy = mb_y * mot_stride + mb_x		3078767	0					
ANR	3078829	IdentifierDeclType	const int		3078767	0					
ANR	3078830	Identifier	mot_xy		3078767	1					
ANR	3078831	AssignmentExpression	mot_xy = mb_y * mot_stride + mb_x		3078767	2		=			
ANR	3078832	Identifier	mot_xy		3078767	0					
ANR	3078833	AdditiveExpression	mb_y * mot_stride + mb_x		3078767	1		+			
ANR	3078834	MultiplicativeExpression	mb_y * mot_stride		3078767	0		*			
ANR	3078835	Identifier	mb_y		3078767	0					
ANR	3078836	Identifier	mot_stride		3078767	1					
ANR	3078837	Identifier	mb_x		3078767	1					
ANR	3078838	Statement	uint8_t	19:4:385:391	3078767	10	True				
ANR	3078839	Statement	*	19:12:393:393	3078767	11	True				
ANR	3078840	Statement	const	19:14:395:399	3078767	12	True				
ANR	3078841	ExpressionStatement	mv_penalty = c -> mv_penalty [ f_code ] + MAX_MV	19:20:401:443	3078767	13	True				
ANR	3078842	AssignmentExpression	mv_penalty = c -> mv_penalty [ f_code ] + MAX_MV		3078767	0		=			
ANR	3078843	Identifier	mv_penalty		3078767	0					
ANR	3078844	AdditiveExpression	c -> mv_penalty [ f_code ] + MAX_MV		3078767	1		+			
ANR	3078845	ArrayIndexing	c -> mv_penalty [ f_code ]		3078767	0					
ANR	3078846	PtrMemberAccess	c -> mv_penalty		3078767	0					
ANR	3078847	Identifier	c		3078767	0					
ANR	3078848	Identifier	mv_penalty		3078767	1					
ANR	3078849	Identifier	f_code		3078767	1					
ANR	3078850	Identifier	MAX_MV		3078767	1					
ANR	3078851	IdentifierDeclStatement	int mv_scale ;	21:4:450:462	3078767	14	True				
ANR	3078852	IdentifierDecl	mv_scale		3078767	0					
ANR	3078853	IdentifierDeclType	int		3078767	0					
ANR	3078854	Identifier	mv_scale		3078767	1					
ANR	3078855	ExpressionStatement	"c -> penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_cmp )"	25:4:471:553	3078767	15	True				
ANR	3078856	AssignmentExpression	"c -> penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_cmp )"		3078767	0		=			
ANR	3078857	PtrMemberAccess	c -> penalty_factor		3078767	0					
ANR	3078858	Identifier	c		3078767	0					
ANR	3078859	Identifier	penalty_factor		3078767	1					
ANR	3078860	CallExpression	"get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_cmp )"		3078767	1					
ANR	3078861	Callee	get_penalty_factor		3078767	0					
ANR	3078862	Identifier	get_penalty_factor		3078767	0					
ANR	3078863	ArgumentList	s -> lambda		3078767	1					
ANR	3078864	Argument	s -> lambda		3078767	0					
ANR	3078865	PtrMemberAccess	s -> lambda		3078767	0					
ANR	3078866	Identifier	s		3078767	0					
ANR	3078867	Identifier	lambda		3078767	1					
ANR	3078868	Argument	s -> lambda2		3078767	1					
ANR	3078869	PtrMemberAccess	s -> lambda2		3078767	0					
ANR	3078870	Identifier	s		3078767	0					
ANR	3078871	Identifier	lambda2		3078767	1					
ANR	3078872	Argument	c -> avctx -> me_cmp		3078767	2					
ANR	3078873	PtrMemberAccess	c -> avctx -> me_cmp		3078767	0					
ANR	3078874	PtrMemberAccess	c -> avctx		3078767	0					
ANR	3078875	Identifier	c		3078767	0					
ANR	3078876	Identifier	avctx		3078767	1					
ANR	3078877	Identifier	me_cmp		3078767	1					
ANR	3078878	ExpressionStatement	"c -> sub_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_sub_cmp )"	27:4:560:646	3078767	16	True				
ANR	3078879	AssignmentExpression	"c -> sub_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_sub_cmp )"		3078767	0		=			
ANR	3078880	PtrMemberAccess	c -> sub_penalty_factor		3078767	0					
ANR	3078881	Identifier	c		3078767	0					
ANR	3078882	Identifier	sub_penalty_factor		3078767	1					
ANR	3078883	CallExpression	"get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> me_sub_cmp )"		3078767	1					
ANR	3078884	Callee	get_penalty_factor		3078767	0					
ANR	3078885	Identifier	get_penalty_factor		3078767	0					
ANR	3078886	ArgumentList	s -> lambda		3078767	1					
ANR	3078887	Argument	s -> lambda		3078767	0					
ANR	3078888	PtrMemberAccess	s -> lambda		3078767	0					
ANR	3078889	Identifier	s		3078767	0					
ANR	3078890	Identifier	lambda		3078767	1					
ANR	3078891	Argument	s -> lambda2		3078767	1					
ANR	3078892	PtrMemberAccess	s -> lambda2		3078767	0					
ANR	3078893	Identifier	s		3078767	0					
ANR	3078894	Identifier	lambda2		3078767	1					
ANR	3078895	Argument	c -> avctx -> me_sub_cmp		3078767	2					
ANR	3078896	PtrMemberAccess	c -> avctx -> me_sub_cmp		3078767	0					
ANR	3078897	PtrMemberAccess	c -> avctx		3078767	0					
ANR	3078898	Identifier	c		3078767	0					
ANR	3078899	Identifier	avctx		3078767	1					
ANR	3078900	Identifier	me_sub_cmp		3078767	1					
ANR	3078901	ExpressionStatement	"c -> mb_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> mb_cmp )"	29:4:653:735	3078767	17	True				
ANR	3078902	AssignmentExpression	"c -> mb_penalty_factor = get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> mb_cmp )"		3078767	0		=			
ANR	3078903	PtrMemberAccess	c -> mb_penalty_factor		3078767	0					
ANR	3078904	Identifier	c		3078767	0					
ANR	3078905	Identifier	mb_penalty_factor		3078767	1					
ANR	3078906	CallExpression	"get_penalty_factor ( s -> lambda , s -> lambda2 , c -> avctx -> mb_cmp )"		3078767	1					
ANR	3078907	Callee	get_penalty_factor		3078767	0					
ANR	3078908	Identifier	get_penalty_factor		3078767	0					
ANR	3078909	ArgumentList	s -> lambda		3078767	1					
ANR	3078910	Argument	s -> lambda		3078767	0					
ANR	3078911	PtrMemberAccess	s -> lambda		3078767	0					
ANR	3078912	Identifier	s		3078767	0					
ANR	3078913	Identifier	lambda		3078767	1					
ANR	3078914	Argument	s -> lambda2		3078767	1					
ANR	3078915	PtrMemberAccess	s -> lambda2		3078767	0					
ANR	3078916	Identifier	s		3078767	0					
ANR	3078917	Identifier	lambda2		3078767	1					
ANR	3078918	Argument	c -> avctx -> mb_cmp		3078767	2					
ANR	3078919	PtrMemberAccess	c -> avctx -> mb_cmp		3078767	0					
ANR	3078920	PtrMemberAccess	c -> avctx		3078767	0					
ANR	3078921	Identifier	c		3078767	0					
ANR	3078922	Identifier	avctx		3078767	1					
ANR	3078923	Identifier	mb_cmp		3078767	1					
ANR	3078924	ExpressionStatement	c -> current_mv_penalty = mv_penalty	31:4:742:775	3078767	18	True				
ANR	3078925	AssignmentExpression	c -> current_mv_penalty = mv_penalty		3078767	0		=			
ANR	3078926	PtrMemberAccess	c -> current_mv_penalty		3078767	0					
ANR	3078927	Identifier	c		3078767	0					
ANR	3078928	Identifier	current_mv_penalty		3078767	1					
ANR	3078929	Identifier	mv_penalty		3078767	1					
ANR	3078930	ExpressionStatement	"get_limits ( s , 16 * mb_x , 16 * mb_y )"	35:4:784:815	3078767	19	True				
ANR	3078931	CallExpression	"get_limits ( s , 16 * mb_x , 16 * mb_y )"		3078767	0					
ANR	3078932	Callee	get_limits		3078767	0					
ANR	3078933	Identifier	get_limits		3078767	0					
ANR	3078934	ArgumentList	s		3078767	1					
ANR	3078935	Argument	s		3078767	0					
ANR	3078936	Identifier	s		3078767	0					
ANR	3078937	Argument	16 * mb_x		3078767	1					
ANR	3078938	MultiplicativeExpression	16 * mb_x		3078767	0		*			
ANR	3078939	PrimaryExpression	16		3078767	0					
ANR	3078940	Identifier	mb_x		3078767	1					
ANR	3078941	Argument	16 * mb_y		3078767	2					
ANR	3078942	MultiplicativeExpression	16 * mb_y		3078767	0		*			
ANR	3078943	PrimaryExpression	16		3078767	0					
ANR	3078944	Identifier	mb_y		3078767	1					
ANR	3078945	IfStatement	if ( s -> motion_est != FF_ME_ZERO )		3078767	20					
ANR	3078946	Condition	s -> motion_est != FF_ME_ZERO	39:8:828:854	3078767	0	True				
ANR	3078947	EqualityExpression	s -> motion_est != FF_ME_ZERO		3078767	0		!=			
ANR	3078948	PtrMemberAccess	s -> motion_est		3078767	0					
ANR	3078949	Identifier	s		3078767	0					
ANR	3078950	Identifier	motion_est		3078767	1					
ANR	3078951	Identifier	FF_ME_ZERO		3078767	1					
ANR	3078952	CompoundStatement		35:37:706:706	3078767	1					
ANR	3078953	ExpressionStatement	P_LEFT [ 0 ] = mv_table [ mot_xy - 1 ] [ 0 ]	41:8:868:903	3078767	0	True				
ANR	3078954	AssignmentExpression	P_LEFT [ 0 ] = mv_table [ mot_xy - 1 ] [ 0 ]		3078767	0		=			
ANR	3078955	ArrayIndexing	P_LEFT [ 0 ]		3078767	0					
ANR	3078956	Identifier	P_LEFT		3078767	0					
ANR	3078957	PrimaryExpression	0		3078767	1					
ANR	3078958	ArrayIndexing	mv_table [ mot_xy - 1 ] [ 0 ]		3078767	1					
ANR	3078959	ArrayIndexing	mv_table [ mot_xy - 1 ]		3078767	0					
ANR	3078960	Identifier	mv_table		3078767	0					
ANR	3078961	AdditiveExpression	mot_xy - 1		3078767	1		-			
ANR	3078962	Identifier	mot_xy		3078767	0					
ANR	3078963	PrimaryExpression	1		3078767	1					
ANR	3078964	PrimaryExpression	0		3078767	1					
ANR	3078965	ExpressionStatement	P_LEFT [ 1 ] = mv_table [ mot_xy - 1 ] [ 1 ]	43:8:914:949	3078767	1	True				
ANR	3078966	AssignmentExpression	P_LEFT [ 1 ] = mv_table [ mot_xy - 1 ] [ 1 ]		3078767	0		=			
ANR	3078967	ArrayIndexing	P_LEFT [ 1 ]		3078767	0					
ANR	3078968	Identifier	P_LEFT		3078767	0					
ANR	3078969	PrimaryExpression	1		3078767	1					
ANR	3078970	ArrayIndexing	mv_table [ mot_xy - 1 ] [ 1 ]		3078767	1					
ANR	3078971	ArrayIndexing	mv_table [ mot_xy - 1 ]		3078767	0					
ANR	3078972	Identifier	mv_table		3078767	0					
ANR	3078973	AdditiveExpression	mot_xy - 1		3078767	1		-			
ANR	3078974	Identifier	mot_xy		3078767	0					
ANR	3078975	PrimaryExpression	1		3078767	1					
ANR	3078976	PrimaryExpression	1		3078767	1					
ANR	3078977	IfStatement	if ( P_LEFT [ 0 ] > ( c -> xmax << shift ) )		3078767	2					
ANR	3078978	Condition	P_LEFT [ 0 ] > ( c -> xmax << shift )	47:12:966:995	3078767	0	True				
ANR	3078979	RelationalExpression	P_LEFT [ 0 ] > ( c -> xmax << shift )		3078767	0		>			
ANR	3078980	ArrayIndexing	P_LEFT [ 0 ]		3078767	0					
ANR	3078981	Identifier	P_LEFT		3078767	0					
ANR	3078982	PrimaryExpression	0		3078767	1					
ANR	3078983	ShiftExpression	c -> xmax << shift		3078767	1		<<			
ANR	3078984	PtrMemberAccess	c -> xmax		3078767	0					
ANR	3078985	Identifier	c		3078767	0					
ANR	3078986	Identifier	xmax		3078767	1					
ANR	3078987	Identifier	shift		3078767	1					
ANR	3078988	ExpressionStatement	P_LEFT [ 0 ] = ( c -> xmax << shift )	47:44:998:1028	3078767	1	True				
ANR	3078989	AssignmentExpression	P_LEFT [ 0 ] = ( c -> xmax << shift )		3078767	0		=			
ANR	3078990	ArrayIndexing	P_LEFT [ 0 ]		3078767	0					
ANR	3078991	Identifier	P_LEFT		3078767	0					
ANR	3078992	PrimaryExpression	0		3078767	1					
ANR	3078993	ShiftExpression	c -> xmax << shift		3078767	1		<<			
ANR	3078994	PtrMemberAccess	c -> xmax		3078767	0					
ANR	3078995	Identifier	c		3078767	0					
ANR	3078996	Identifier	xmax		3078767	1					
ANR	3078997	Identifier	shift		3078767	1					
ANR	3078998	IfStatement	if ( ! s -> first_slice_line )		3078767	3					
ANR	3078999	Condition	! s -> first_slice_line	53:12:1088:1107	3078767	0	True				
ANR	3079000	UnaryOperationExpression	! s -> first_slice_line		3078767	0					
ANR	3079001	UnaryOperator	!		3078767	0					
ANR	3079002	PtrMemberAccess	s -> first_slice_line		3078767	1					
ANR	3079003	Identifier	s		3078767	0					
ANR	3079004	Identifier	first_slice_line		3078767	1					
ANR	3079005	CompoundStatement		49:34:959:959	3078767	1					
ANR	3079006	ExpressionStatement	P_TOP [ 0 ] = mv_table [ mot_xy - mot_stride ] [ 0 ]	55:12:1125:1177	3078767	0	True				
ANR	3079007	AssignmentExpression	P_TOP [ 0 ] = mv_table [ mot_xy - mot_stride ] [ 0 ]		3078767	0		=			
ANR	3079008	ArrayIndexing	P_TOP [ 0 ]		3078767	0					
ANR	3079009	Identifier	P_TOP		3078767	0					
ANR	3079010	PrimaryExpression	0		3078767	1					
ANR	3079011	ArrayIndexing	mv_table [ mot_xy - mot_stride ] [ 0 ]		3078767	1					
ANR	3079012	ArrayIndexing	mv_table [ mot_xy - mot_stride ]		3078767	0					
ANR	3079013	Identifier	mv_table		3078767	0					
ANR	3079014	AdditiveExpression	mot_xy - mot_stride		3078767	1		-			
ANR	3079015	Identifier	mot_xy		3078767	0					
ANR	3079016	Identifier	mot_stride		3078767	1					
ANR	3079017	PrimaryExpression	0		3078767	1					
ANR	3079018	ExpressionStatement	P_TOP [ 1 ] = mv_table [ mot_xy - mot_stride ] [ 1 ]	57:12:1192:1244	3078767	1	True				
ANR	3079019	AssignmentExpression	P_TOP [ 1 ] = mv_table [ mot_xy - mot_stride ] [ 1 ]		3078767	0		=			
ANR	3079020	ArrayIndexing	P_TOP [ 1 ]		3078767	0					
ANR	3079021	Identifier	P_TOP		3078767	0					
ANR	3079022	PrimaryExpression	1		3078767	1					
ANR	3079023	ArrayIndexing	mv_table [ mot_xy - mot_stride ] [ 1 ]		3078767	1					
ANR	3079024	ArrayIndexing	mv_table [ mot_xy - mot_stride ]		3078767	0					
ANR	3079025	Identifier	mv_table		3078767	0					
ANR	3079026	AdditiveExpression	mot_xy - mot_stride		3078767	1		-			
ANR	3079027	Identifier	mot_xy		3078767	0					
ANR	3079028	Identifier	mot_stride		3078767	1					
ANR	3079029	PrimaryExpression	1		3078767	1					
ANR	3079030	ExpressionStatement	P_TOPRIGHT [ 0 ] = mv_table [ mot_xy - mot_stride + 1 ] [ 0 ]	59:12:1259:1311	3078767	2	True				
ANR	3079031	AssignmentExpression	P_TOPRIGHT [ 0 ] = mv_table [ mot_xy - mot_stride + 1 ] [ 0 ]		3078767	0		=			
ANR	3079032	ArrayIndexing	P_TOPRIGHT [ 0 ]		3078767	0					
ANR	3079033	Identifier	P_TOPRIGHT		3078767	0					
ANR	3079034	PrimaryExpression	0		3078767	1					
ANR	3079035	ArrayIndexing	mv_table [ mot_xy - mot_stride + 1 ] [ 0 ]		3078767	1					
ANR	3079036	ArrayIndexing	mv_table [ mot_xy - mot_stride + 1 ]		3078767	0					
ANR	3079037	Identifier	mv_table		3078767	0					
ANR	3079038	AdditiveExpression	mot_xy - mot_stride + 1		3078767	1		-			
ANR	3079039	Identifier	mot_xy		3078767	0					
ANR	3079040	AdditiveExpression	mot_stride + 1		3078767	1		+			
ANR	3079041	Identifier	mot_stride		3078767	0					
ANR	3079042	PrimaryExpression	1		3078767	1					
ANR	3079043	PrimaryExpression	0		3078767	1					
ANR	3079044	ExpressionStatement	P_TOPRIGHT [ 1 ] = mv_table [ mot_xy - mot_stride + 1 ] [ 1 ]	61:12:1326:1378	3078767	3	True				
ANR	3079045	AssignmentExpression	P_TOPRIGHT [ 1 ] = mv_table [ mot_xy - mot_stride + 1 ] [ 1 ]		3078767	0		=			
ANR	3079046	ArrayIndexing	P_TOPRIGHT [ 1 ]		3078767	0					
ANR	3079047	Identifier	P_TOPRIGHT		3078767	0					
ANR	3079048	PrimaryExpression	1		3078767	1					
ANR	3079049	ArrayIndexing	mv_table [ mot_xy - mot_stride + 1 ] [ 1 ]		3078767	1					
ANR	3079050	ArrayIndexing	mv_table [ mot_xy - mot_stride + 1 ]		3078767	0					
ANR	3079051	Identifier	mv_table		3078767	0					
ANR	3079052	AdditiveExpression	mot_xy - mot_stride + 1		3078767	1		-			
ANR	3079053	Identifier	mot_xy		3078767	0					
ANR	3079054	AdditiveExpression	mot_stride + 1		3078767	1		+			
ANR	3079055	Identifier	mot_stride		3078767	0					
ANR	3079056	PrimaryExpression	1		3078767	1					
ANR	3079057	PrimaryExpression	1		3078767	1					
ANR	3079058	IfStatement	if ( P_TOP [ 1 ] > ( c -> ymax << shift ) )		3078767	4					
ANR	3079059	Condition	P_TOP [ 1 ] > ( c -> ymax << shift )	63:16:1397:1425	3078767	0	True				
ANR	3079060	RelationalExpression	P_TOP [ 1 ] > ( c -> ymax << shift )		3078767	0		>			
ANR	3079061	ArrayIndexing	P_TOP [ 1 ]		3078767	0					
ANR	3079062	Identifier	P_TOP		3078767	0					
ANR	3079063	PrimaryExpression	1		3078767	1					
ANR	3079064	ShiftExpression	c -> ymax << shift		3078767	1		<<			
ANR	3079065	PtrMemberAccess	c -> ymax		3078767	0					
ANR	3079066	Identifier	c		3078767	0					
ANR	3079067	Identifier	ymax		3078767	1					
ANR	3079068	Identifier	shift		3078767	1					
ANR	3079069	ExpressionStatement	P_TOP [ 1 ] = ( c -> ymax << shift )	63:47:1428:1457	3078767	1	True				
ANR	3079070	AssignmentExpression	P_TOP [ 1 ] = ( c -> ymax << shift )		3078767	0		=			
ANR	3079071	ArrayIndexing	P_TOP [ 1 ]		3078767	0					
ANR	3079072	Identifier	P_TOP		3078767	0					
ANR	3079073	PrimaryExpression	1		3078767	1					
ANR	3079074	ShiftExpression	c -> ymax << shift		3078767	1		<<			
ANR	3079075	PtrMemberAccess	c -> ymax		3078767	0					
ANR	3079076	Identifier	c		3078767	0					
ANR	3079077	Identifier	ymax		3078767	1					
ANR	3079078	Identifier	shift		3078767	1					
ANR	3079079	IfStatement	if ( P_TOPRIGHT [ 0 ] < ( c -> xmin << shift ) )		3078767	5					
ANR	3079080	Condition	P_TOPRIGHT [ 0 ] < ( c -> xmin << shift )	65:16:1476:1509	3078767	0	True				
ANR	3079081	RelationalExpression	P_TOPRIGHT [ 0 ] < ( c -> xmin << shift )		3078767	0		<			
ANR	3079082	ArrayIndexing	P_TOPRIGHT [ 0 ]		3078767	0					
ANR	3079083	Identifier	P_TOPRIGHT		3078767	0					
ANR	3079084	PrimaryExpression	0		3078767	1					
ANR	3079085	ShiftExpression	c -> xmin << shift		3078767	1		<<			
ANR	3079086	PtrMemberAccess	c -> xmin		3078767	0					
ANR	3079087	Identifier	c		3078767	0					
ANR	3079088	Identifier	xmin		3078767	1					
ANR	3079089	Identifier	shift		3078767	1					
ANR	3079090	ExpressionStatement	P_TOPRIGHT [ 0 ] = ( c -> xmin << shift )	65:52:1512:1546	3078767	1	True				
ANR	3079091	AssignmentExpression	P_TOPRIGHT [ 0 ] = ( c -> xmin << shift )		3078767	0		=			
ANR	3079092	ArrayIndexing	P_TOPRIGHT [ 0 ]		3078767	0					
ANR	3079093	Identifier	P_TOPRIGHT		3078767	0					
ANR	3079094	PrimaryExpression	0		3078767	1					
ANR	3079095	ShiftExpression	c -> xmin << shift		3078767	1		<<			
ANR	3079096	PtrMemberAccess	c -> xmin		3078767	0					
ANR	3079097	Identifier	c		3078767	0					
ANR	3079098	Identifier	xmin		3078767	1					
ANR	3079099	Identifier	shift		3078767	1					
ANR	3079100	IfStatement	if ( P_TOPRIGHT [ 1 ] > ( c -> ymax << shift ) )		3078767	6					
ANR	3079101	Condition	P_TOPRIGHT [ 1 ] > ( c -> ymax << shift )	67:16:1565:1598	3078767	0	True				
ANR	3079102	RelationalExpression	P_TOPRIGHT [ 1 ] > ( c -> ymax << shift )		3078767	0		>			
ANR	3079103	ArrayIndexing	P_TOPRIGHT [ 1 ]		3078767	0					
ANR	3079104	Identifier	P_TOPRIGHT		3078767	0					
ANR	3079105	PrimaryExpression	1		3078767	1					
ANR	3079106	ShiftExpression	c -> ymax << shift		3078767	1		<<			
ANR	3079107	PtrMemberAccess	c -> ymax		3078767	0					
ANR	3079108	Identifier	c		3078767	0					
ANR	3079109	Identifier	ymax		3078767	1					
ANR	3079110	Identifier	shift		3078767	1					
ANR	3079111	ExpressionStatement	P_TOPRIGHT [ 1 ] = ( c -> ymax << shift )	67:52:1601:1635	3078767	1	True				
ANR	3079112	AssignmentExpression	P_TOPRIGHT [ 1 ] = ( c -> ymax << shift )		3078767	0		=			
ANR	3079113	ArrayIndexing	P_TOPRIGHT [ 1 ]		3078767	0					
ANR	3079114	Identifier	P_TOPRIGHT		3078767	0					
ANR	3079115	PrimaryExpression	1		3078767	1					
ANR	3079116	ShiftExpression	c -> ymax << shift		3078767	1		<<			
ANR	3079117	PtrMemberAccess	c -> ymax		3078767	0					
ANR	3079118	Identifier	c		3078767	0					
ANR	3079119	Identifier	ymax		3078767	1					
ANR	3079120	Identifier	shift		3078767	1					
ANR	3079121	ExpressionStatement	"P_MEDIAN [ 0 ] = mid_pred ( P_LEFT [ 0 ] , P_TOP [ 0 ] , P_TOPRIGHT [ 0 ] )"	71:12:1652:1710	3078767	7	True				
ANR	3079122	AssignmentExpression	"P_MEDIAN [ 0 ] = mid_pred ( P_LEFT [ 0 ] , P_TOP [ 0 ] , P_TOPRIGHT [ 0 ] )"		3078767	0		=			
ANR	3079123	ArrayIndexing	P_MEDIAN [ 0 ]		3078767	0					
ANR	3079124	Identifier	P_MEDIAN		3078767	0					
ANR	3079125	PrimaryExpression	0		3078767	1					
ANR	3079126	CallExpression	"mid_pred ( P_LEFT [ 0 ] , P_TOP [ 0 ] , P_TOPRIGHT [ 0 ] )"		3078767	1					
ANR	3079127	Callee	mid_pred		3078767	0					
ANR	3079128	Identifier	mid_pred		3078767	0					
ANR	3079129	ArgumentList	P_LEFT [ 0 ]		3078767	1					
ANR	3079130	Argument	P_LEFT [ 0 ]		3078767	0					
ANR	3079131	ArrayIndexing	P_LEFT [ 0 ]		3078767	0					
ANR	3079132	Identifier	P_LEFT		3078767	0					
ANR	3079133	PrimaryExpression	0		3078767	1					
ANR	3079134	Argument	P_TOP [ 0 ]		3078767	1					
ANR	3079135	ArrayIndexing	P_TOP [ 0 ]		3078767	0					
ANR	3079136	Identifier	P_TOP		3078767	0					
ANR	3079137	PrimaryExpression	0		3078767	1					
ANR	3079138	Argument	P_TOPRIGHT [ 0 ]		3078767	2					
ANR	3079139	ArrayIndexing	P_TOPRIGHT [ 0 ]		3078767	0					
ANR	3079140	Identifier	P_TOPRIGHT		3078767	0					
ANR	3079141	PrimaryExpression	0		3078767	1					
ANR	3079142	ExpressionStatement	"P_MEDIAN [ 1 ] = mid_pred ( P_LEFT [ 1 ] , P_TOP [ 1 ] , P_TOPRIGHT [ 1 ] )"	73:12:1725:1783	3078767	8	True				
ANR	3079143	AssignmentExpression	"P_MEDIAN [ 1 ] = mid_pred ( P_LEFT [ 1 ] , P_TOP [ 1 ] , P_TOPRIGHT [ 1 ] )"		3078767	0		=			
ANR	3079144	ArrayIndexing	P_MEDIAN [ 1 ]		3078767	0					
ANR	3079145	Identifier	P_MEDIAN		3078767	0					
ANR	3079146	PrimaryExpression	1		3078767	1					
ANR	3079147	CallExpression	"mid_pred ( P_LEFT [ 1 ] , P_TOP [ 1 ] , P_TOPRIGHT [ 1 ] )"		3078767	1					
ANR	3079148	Callee	mid_pred		3078767	0					
ANR	3079149	Identifier	mid_pred		3078767	0					
ANR	3079150	ArgumentList	P_LEFT [ 1 ]		3078767	1					
ANR	3079151	Argument	P_LEFT [ 1 ]		3078767	0					
ANR	3079152	ArrayIndexing	P_LEFT [ 1 ]		3078767	0					
ANR	3079153	Identifier	P_LEFT		3078767	0					
ANR	3079154	PrimaryExpression	1		3078767	1					
ANR	3079155	Argument	P_TOP [ 1 ]		3078767	1					
ANR	3079156	ArrayIndexing	P_TOP [ 1 ]		3078767	0					
ANR	3079157	Identifier	P_TOP		3078767	0					
ANR	3079158	PrimaryExpression	1		3078767	1					
ANR	3079159	Argument	P_TOPRIGHT [ 1 ]		3078767	2					
ANR	3079160	ArrayIndexing	P_TOPRIGHT [ 1 ]		3078767	0					
ANR	3079161	Identifier	P_TOPRIGHT		3078767	0					
ANR	3079162	PrimaryExpression	1		3078767	1					
ANR	3079163	ExpressionStatement	c -> pred_x = P_LEFT [ 0 ]	77:8:1805:1826	3078767	4	True				
ANR	3079164	AssignmentExpression	c -> pred_x = P_LEFT [ 0 ]		3078767	0		=			
ANR	3079165	PtrMemberAccess	c -> pred_x		3078767	0					
ANR	3079166	Identifier	c		3078767	0					
ANR	3079167	Identifier	pred_x		3078767	1					
ANR	3079168	ArrayIndexing	P_LEFT [ 0 ]		3078767	1					
ANR	3079169	Identifier	P_LEFT		3078767	0					
ANR	3079170	PrimaryExpression	0		3078767	1					
ANR	3079171	ExpressionStatement	c -> pred_y = P_LEFT [ 1 ]	79:8:1837:1858	3078767	5	True				
ANR	3079172	AssignmentExpression	c -> pred_y = P_LEFT [ 1 ]		3078767	0		=			
ANR	3079173	PtrMemberAccess	c -> pred_y		3078767	0					
ANR	3079174	Identifier	c		3078767	0					
ANR	3079175	Identifier	pred_y		3078767	1					
ANR	3079176	ArrayIndexing	P_LEFT [ 1 ]		3078767	1					
ANR	3079177	Identifier	P_LEFT		3078767	0					
ANR	3079178	PrimaryExpression	1		3078767	1					
ANR	3079179	IfStatement	if ( mv_table == s -> b_forw_mv_table )		3078767	6					
ANR	3079180	Condition	mv_table == s -> b_forw_mv_table	83:11:1874:1903	3078767	0	True				
ANR	3079181	EqualityExpression	mv_table == s -> b_forw_mv_table		3078767	0		==			
ANR	3079182	Identifier	mv_table		3078767	0					
ANR	3079183	PtrMemberAccess	s -> b_forw_mv_table		3078767	1					
ANR	3079184	Identifier	s		3078767	0					
ANR	3079185	Identifier	b_forw_mv_table		3078767	1					
ANR	3079186	CompoundStatement		79:42:1754:1754	3078767	1					
ANR	3079187	ExpressionStatement	mv_scale = ( s -> pb_time << 16 ) / ( s -> pp_time << shift )	85:12:1920:1968	3078767	0	True				
ANR	3079188	AssignmentExpression	mv_scale = ( s -> pb_time << 16 ) / ( s -> pp_time << shift )		3078767	0		=			
ANR	3079189	Identifier	mv_scale		3078767	0					
ANR	3079190	MultiplicativeExpression	( s -> pb_time << 16 ) / ( s -> pp_time << shift )		3078767	1		/			
ANR	3079191	ShiftExpression	s -> pb_time << 16		3078767	0		<<			
ANR	3079192	PtrMemberAccess	s -> pb_time		3078767	0					
ANR	3079193	Identifier	s		3078767	0					
ANR	3079194	Identifier	pb_time		3078767	1					
ANR	3079195	PrimaryExpression	16		3078767	1					
ANR	3079196	ShiftExpression	s -> pp_time << shift		3078767	1		<<			
ANR	3079197	PtrMemberAccess	s -> pp_time		3078767	0					
ANR	3079198	Identifier	s		3078767	0					
ANR	3079199	Identifier	pp_time		3078767	1					
ANR	3079200	Identifier	shift		3078767	1					
ANR	3079201	ElseStatement	else		3078767	0					
ANR	3079202	CompoundStatement		83:13:1833:1833	3078767	0					
ANR	3079203	ExpressionStatement	mv_scale = ( ( s -> pb_time - s -> pp_time ) << 16 ) / ( s -> pp_time << shift )	89:12:1999:2062	3078767	0	True				
ANR	3079204	AssignmentExpression	mv_scale = ( ( s -> pb_time - s -> pp_time ) << 16 ) / ( s -> pp_time << shift )		3078767	0		=			
ANR	3079205	Identifier	mv_scale		3078767	0					
ANR	3079206	MultiplicativeExpression	( ( s -> pb_time - s -> pp_time ) << 16 ) / ( s -> pp_time << shift )		3078767	1		/			
ANR	3079207	ShiftExpression	( s -> pb_time - s -> pp_time ) << 16		3078767	0		<<			
ANR	3079208	AdditiveExpression	s -> pb_time - s -> pp_time		3078767	0		-			
ANR	3079209	PtrMemberAccess	s -> pb_time		3078767	0					
ANR	3079210	Identifier	s		3078767	0					
ANR	3079211	Identifier	pb_time		3078767	1					
ANR	3079212	PtrMemberAccess	s -> pp_time		3078767	1					
ANR	3079213	Identifier	s		3078767	0					
ANR	3079214	Identifier	pp_time		3078767	1					
ANR	3079215	PrimaryExpression	16		3078767	1					
ANR	3079216	ShiftExpression	s -> pp_time << shift		3078767	1		<<			
ANR	3079217	PtrMemberAccess	s -> pp_time		3078767	0					
ANR	3079218	Identifier	s		3078767	0					
ANR	3079219	Identifier	pp_time		3078767	1					
ANR	3079220	Identifier	shift		3078767	1					
ANR	3079221	ExpressionStatement	"dmin = ff_epzs_motion_search ( s , & mx , & my , P , 0 , ref_index , s -> p_mv_table , mv_scale , 0 , 16 )"	95:8:2086:2176	3078767	7	True				
ANR	3079222	AssignmentExpression	"dmin = ff_epzs_motion_search ( s , & mx , & my , P , 0 , ref_index , s -> p_mv_table , mv_scale , 0 , 16 )"		3078767	0		=			
ANR	3079223	Identifier	dmin		3078767	0					
ANR	3079224	CallExpression	"ff_epzs_motion_search ( s , & mx , & my , P , 0 , ref_index , s -> p_mv_table , mv_scale , 0 , 16 )"		3078767	1					
ANR	3079225	Callee	ff_epzs_motion_search		3078767	0					
ANR	3079226	Identifier	ff_epzs_motion_search		3078767	0					
ANR	3079227	ArgumentList	s		3078767	1					
ANR	3079228	Argument	s		3078767	0					
ANR	3079229	Identifier	s		3078767	0					
ANR	3079230	Argument	& mx		3078767	1					
ANR	3079231	UnaryOperationExpression	& mx		3078767	0					
ANR	3079232	UnaryOperator	&		3078767	0					
ANR	3079233	Identifier	mx		3078767	1					
ANR	3079234	Argument	& my		3078767	2					
ANR	3079235	UnaryOperationExpression	& my		3078767	0					
ANR	3079236	UnaryOperator	&		3078767	0					
ANR	3079237	Identifier	my		3078767	1					
ANR	3079238	Argument	P		3078767	3					
ANR	3079239	Identifier	P		3078767	0					
ANR	3079240	Argument	0		3078767	4					
ANR	3079241	PrimaryExpression	0		3078767	0					
ANR	3079242	Argument	ref_index		3078767	5					
ANR	3079243	Identifier	ref_index		3078767	0					
ANR	3079244	Argument	s -> p_mv_table		3078767	6					
ANR	3079245	PtrMemberAccess	s -> p_mv_table		3078767	0					
ANR	3079246	Identifier	s		3078767	0					
ANR	3079247	Identifier	p_mv_table		3078767	1					
ANR	3079248	Argument	mv_scale		3078767	7					
ANR	3079249	Identifier	mv_scale		3078767	0					
ANR	3079250	Argument	0		3078767	8					
ANR	3079251	PrimaryExpression	0		3078767	0					
ANR	3079252	Argument	16		3078767	9					
ANR	3079253	PrimaryExpression	16		3078767	0					
ANR	3079254	ExpressionStatement	"dmin = c -> sub_motion_search ( s , & mx , & my , dmin , 0 , ref_index , 0 , 16 )"	101:4:2192:2258	3078767	21	True				
ANR	3079255	AssignmentExpression	"dmin = c -> sub_motion_search ( s , & mx , & my , dmin , 0 , ref_index , 0 , 16 )"		3078767	0		=			
ANR	3079256	Identifier	dmin		3078767	0					
ANR	3079257	CallExpression	"c -> sub_motion_search ( s , & mx , & my , dmin , 0 , ref_index , 0 , 16 )"		3078767	1					
ANR	3079258	Callee	c -> sub_motion_search		3078767	0					
ANR	3079259	PtrMemberAccess	c -> sub_motion_search		3078767	0					
ANR	3079260	Identifier	c		3078767	0					
ANR	3079261	Identifier	sub_motion_search		3078767	1					
ANR	3079262	ArgumentList	s		3078767	1					
ANR	3079263	Argument	s		3078767	0					
ANR	3079264	Identifier	s		3078767	0					
ANR	3079265	Argument	& mx		3078767	1					
ANR	3079266	UnaryOperationExpression	& mx		3078767	0					
ANR	3079267	UnaryOperator	&		3078767	0					
ANR	3079268	Identifier	mx		3078767	1					
ANR	3079269	Argument	& my		3078767	2					
ANR	3079270	UnaryOperationExpression	& my		3078767	0					
ANR	3079271	UnaryOperator	&		3078767	0					
ANR	3079272	Identifier	my		3078767	1					
ANR	3079273	Argument	dmin		3078767	3					
ANR	3079274	Identifier	dmin		3078767	0					
ANR	3079275	Argument	0		3078767	4					
ANR	3079276	PrimaryExpression	0		3078767	0					
ANR	3079277	Argument	ref_index		3078767	5					
ANR	3079278	Identifier	ref_index		3078767	0					
ANR	3079279	Argument	0		3078767	6					
ANR	3079280	PrimaryExpression	0		3078767	0					
ANR	3079281	Argument	16		3078767	7					
ANR	3079282	PrimaryExpression	16		3078767	0					
ANR	3079283	IfStatement	if ( c -> avctx -> me_sub_cmp != c -> avctx -> mb_cmp && ! c -> skip )		3078767	22					
ANR	3079284	Condition	c -> avctx -> me_sub_cmp != c -> avctx -> mb_cmp && ! c -> skip	105:7:2270:2321	3078767	0	True				
ANR	3079285	AndExpression	c -> avctx -> me_sub_cmp != c -> avctx -> mb_cmp && ! c -> skip		3078767	0		&&			
ANR	3079286	EqualityExpression	c -> avctx -> me_sub_cmp != c -> avctx -> mb_cmp		3078767	0		!=			
ANR	3079287	PtrMemberAccess	c -> avctx -> me_sub_cmp		3078767	0					
ANR	3079288	PtrMemberAccess	c -> avctx		3078767	0					
ANR	3079289	Identifier	c		3078767	0					
ANR	3079290	Identifier	avctx		3078767	1					
ANR	3079291	Identifier	me_sub_cmp		3078767	1					
ANR	3079292	PtrMemberAccess	c -> avctx -> mb_cmp		3078767	1					
ANR	3079293	PtrMemberAccess	c -> avctx		3078767	0					
ANR	3079294	Identifier	c		3078767	0					
ANR	3079295	Identifier	avctx		3078767	1					
ANR	3079296	Identifier	mb_cmp		3078767	1					
ANR	3079297	UnaryOperationExpression	! c -> skip		3078767	1					
ANR	3079298	UnaryOperator	!		3078767	0					
ANR	3079299	PtrMemberAccess	c -> skip		3078767	1					
ANR	3079300	Identifier	c		3078767	0					
ANR	3079301	Identifier	skip		3078767	1					
ANR	3079302	ExpressionStatement	"dmin = get_mb_score ( s , mx , my , 0 , ref_index , 0 , 16 , 1 )"	107:8:2333:2386	3078767	1	True				
ANR	3079303	AssignmentExpression	"dmin = get_mb_score ( s , mx , my , 0 , ref_index , 0 , 16 , 1 )"		3078767	0		=			
ANR	3079304	Identifier	dmin		3078767	0					
ANR	3079305	CallExpression	"get_mb_score ( s , mx , my , 0 , ref_index , 0 , 16 , 1 )"		3078767	1					
ANR	3079306	Callee	get_mb_score		3078767	0					
ANR	3079307	Identifier	get_mb_score		3078767	0					
ANR	3079308	ArgumentList	s		3078767	1					
ANR	3079309	Argument	s		3078767	0					
ANR	3079310	Identifier	s		3078767	0					
ANR	3079311	Argument	mx		3078767	1					
ANR	3079312	Identifier	mx		3078767	0					
ANR	3079313	Argument	my		3078767	2					
ANR	3079314	Identifier	my		3078767	0					
ANR	3079315	Argument	0		3078767	3					
ANR	3079316	PrimaryExpression	0		3078767	0					
ANR	3079317	Argument	ref_index		3078767	4					
ANR	3079318	Identifier	ref_index		3078767	0					
ANR	3079319	Argument	0		3078767	5					
ANR	3079320	PrimaryExpression	0		3078767	0					
ANR	3079321	Argument	16		3078767	6					
ANR	3079322	PrimaryExpression	16		3078767	0					
ANR	3079323	Argument	1		3078767	7					
ANR	3079324	PrimaryExpression	1		3078767	0					
ANR	3079325	ExpressionStatement	mv_table [ mot_xy ] [ 0 ] = mx	113:4:2448:2471	3078767	23	True				
ANR	3079326	AssignmentExpression	mv_table [ mot_xy ] [ 0 ] = mx		3078767	0		=			
ANR	3079327	ArrayIndexing	mv_table [ mot_xy ] [ 0 ]		3078767	0					
ANR	3079328	ArrayIndexing	mv_table [ mot_xy ]		3078767	0					
ANR	3079329	Identifier	mv_table		3078767	0					
ANR	3079330	Identifier	mot_xy		3078767	1					
ANR	3079331	PrimaryExpression	0		3078767	1					
ANR	3079332	Identifier	mx		3078767	1					
ANR	3079333	ExpressionStatement	mv_table [ mot_xy ] [ 1 ] = my	115:4:2478:2501	3078767	24	True				
ANR	3079334	AssignmentExpression	mv_table [ mot_xy ] [ 1 ] = my		3078767	0		=			
ANR	3079335	ArrayIndexing	mv_table [ mot_xy ] [ 1 ]		3078767	0					
ANR	3079336	ArrayIndexing	mv_table [ mot_xy ]		3078767	0					
ANR	3079337	Identifier	mv_table		3078767	0					
ANR	3079338	Identifier	mot_xy		3078767	1					
ANR	3079339	PrimaryExpression	1		3078767	1					
ANR	3079340	Identifier	my		3078767	1					
ANR	3079341	ReturnStatement	return dmin ;	119:4:2510:2521	3078767	25	True				
ANR	3079342	Identifier	dmin		3078767	0					
ANR	3079343	ReturnType	static int		3078767	1					
ANR	3079344	Identifier	estimate_motion_b		3078767	2					
ANR	3079345	ParameterList	"MpegEncContext * s , int mb_x , int mb_y , int16_t ( * mv_table ) [ 2 ] , int ref_index , int f_code"		3078767	3					
ANR	3079346	Parameter	MpegEncContext * s	1:29:29:45	3078767	0	True				
ANR	3079347	ParameterType	MpegEncContext *		3078767	0					
ANR	3079348	Identifier	s		3078767	1					
ANR	3079349	Parameter	int mb_x	1:48:48:55	3078767	1	True				
ANR	3079350	ParameterType	int		3078767	0					
ANR	3079351	Identifier	mb_x		3078767	1					
ANR	3079352	Parameter	int mb_y	1:58:58:65	3078767	2	True				
ANR	3079353	ParameterType	int		3078767	0					
ANR	3079354	Identifier	mb_y		3078767	1					
ANR	3079355	Parameter	int16_t ( * mv_table ) [ 2 ]	3:29:98:119	3078767	3	True				
ANR	3079356	ParameterType	([ 2 ] int16_t) *		3078767	0					
ANR	3079357	Identifier	mv_table		3078767	1					
ANR	3079358	Parameter	int ref_index	3:53:122:134	3078767	4	True				
ANR	3079359	ParameterType	int		3078767	0					
ANR	3079360	Identifier	ref_index		3078767	1					
ANR	3079361	Parameter	int f_code	3:68:137:146	3078767	5	True				
ANR	3079362	ParameterType	int		3078767	0					
ANR	3079363	Identifier	f_code		3078767	1					
ANR	3079364	CFGEntryNode	ENTRY		3078767		True				
ANR	3079365	CFGExitNode	EXIT		3078767		True				
ANR	3079366	Symbol	* P_TOPRIGHT		3078767						
ANR	3079367	Symbol	ff_epzs_motion_search		3078767						
ANR	3079368	Symbol	ref_index		3078767						
ANR	3079369	Symbol	shift		3078767						
ANR	3079370	Symbol	P_TOPRIGHT		3078767						
ANR	3079371	Symbol	c -> skip		3078767						
ANR	3079372	Symbol	* mot_xy		3078767						
ANR	3079373	Symbol	mv_table		3078767						
ANR	3079374	Symbol	mot_stride		3078767						
ANR	3079375	Symbol	c -> mb_penalty_factor		3078767						
ANR	3079376	Symbol	mot_xy		3078767						
ANR	3079377	Symbol	c -> current_mv_penalty		3078767						
ANR	3079378	Symbol	* * mot_xy		3078767						
ANR	3079379	Symbol	c -> mv_penalty		3078767						
ANR	3079380	Symbol	s -> motion_est		3078767						
ANR	3079381	Symbol	* P_TOP		3078767						
ANR	3079382	Symbol	* * mv_table		3078767						
ANR	3079383	Symbol	MAX_MV		3078767						
ANR	3079384	Symbol	* mot_stride		3078767						
ANR	3079385	Symbol	c -> pred_y		3078767						
ANR	3079386	Symbol	c -> pred_x		3078767						
ANR	3079387	Symbol	* * c		3078767						
ANR	3079388	Symbol	* mv_table		3078767						
ANR	3079389	Symbol	s -> p_mv_table		3078767						
ANR	3079390	Symbol	mv_scale		3078767						
ANR	3079391	Symbol	c -> sub_penalty_factor		3078767						
ANR	3079392	Symbol	mx		3078767						
ANR	3079393	Symbol	my		3078767						
ANR	3079394	Symbol	get_penalty_factor		3078767						
ANR	3079395	Symbol	* * mot_stride		3078767						
ANR	3079396	Symbol	c -> avctx -> mb_cmp		3078767						
ANR	3079397	Symbol	s -> pb_time		3078767						
ANR	3079398	Symbol	get_mb_score		3078767						
ANR	3079399	Symbol	c -> avctx		3078767						
ANR	3079400	Symbol	* P_MEDIAN		3078767						
ANR	3079401	Symbol	s -> lambda		3078767						
ANR	3079402	Symbol	c -> ymax		3078767						
ANR	3079403	Symbol	dmin		3078767						
ANR	3079404	Symbol	s -> first_slice_line		3078767						
ANR	3079405	Symbol	s -> pp_time		3078767						
ANR	3079406	Symbol	* c -> avctx		3078767						
ANR	3079407	Symbol	P_MEDIAN		3078767						
ANR	3079408	Symbol	s -> mb_stride		3078767						
ANR	3079409	Symbol	FF_ME_ZERO		3078767						
ANR	3079410	Symbol	* c -> mv_penalty		3078767						
ANR	3079411	Symbol	P		3078767						
ANR	3079412	Symbol	f_code		3078767						
ANR	3079413	Symbol	c -> avctx -> me_sub_cmp		3078767						
ANR	3079414	Symbol	P_TOP		3078767						
ANR	3079415	Symbol	* P_LEFT		3078767						
ANR	3079416	Symbol	* P		3078767						
ANR	3079417	Symbol	mid_pred		3078767						
ANR	3079418	Symbol	mv_penalty		3078767						
ANR	3079419	Symbol	s -> b_forw_mv_table		3078767						
ANR	3079420	Symbol	c -> xmax		3078767						
ANR	3079421	Symbol	c		3078767						
ANR	3079422	Symbol	s -> quarter_sample		3078767						
ANR	3079423	Symbol	c -> avctx -> me_cmp		3078767						
ANR	3079424	Symbol	& s -> me		3078767						
ANR	3079425	Symbol	* f_code		3078767						
ANR	3079426	Symbol	* c		3078767						
ANR	3079427	Symbol	c -> xmin		3078767						
ANR	3079428	Symbol	s		3078767						
ANR	3079429	Symbol	s -> lambda2		3078767						
ANR	3079430	Symbol	c -> penalty_factor		3078767						
ANR	3079431	Symbol	P_LEFT		3078767						
ANR	3079432	Symbol	& mx		3078767						
ANR	3079433	Symbol	c -> sub_motion_search		3078767						
ANR	3079434	Symbol	& my		3078767						
ANR	3079435	Symbol	mb_y		3078767						
ANR	3079436	Symbol	mb_x		3078767						
ANR	3079437	Symbol	* s		3078767						
