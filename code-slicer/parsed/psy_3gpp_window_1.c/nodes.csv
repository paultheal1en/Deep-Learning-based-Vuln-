command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6757055	File	/home/p4ultr4n/workplace/ReVeal/raw_code/psy_3gpp_window_1.c								
ANR	6757056	Function	psy_3gpp_window	1:0:0:2578							
ANR	6757057	FunctionDef	"psy_3gpp_window (FFPsyContext * ctx , const int16_t * audio , const int16_t * la , int channel , int prev_type)"		6757056	0					
ANR	6757058	CompoundStatement		7:0:208:2578	6757056	0					
ANR	6757059	IdentifierDeclStatement	"int i , j ;"	9:4:215:223	6757056	0	True				
ANR	6757060	IdentifierDecl	i		6757056	0					
ANR	6757061	IdentifierDeclType	int		6757056	0					
ANR	6757062	Identifier	i		6757056	1					
ANR	6757063	IdentifierDecl	j		6757056	1					
ANR	6757064	IdentifierDeclType	int		6757056	0					
ANR	6757065	Identifier	j		6757056	1					
ANR	6757066	IdentifierDeclStatement	int br = ctx -> avctx -> bit_rate / ctx -> avctx -> channels ;	11:4:230:296	6757056	1	True				
ANR	6757067	IdentifierDecl	br = ctx -> avctx -> bit_rate / ctx -> avctx -> channels		6757056	0					
ANR	6757068	IdentifierDeclType	int		6757056	0					
ANR	6757069	Identifier	br		6757056	1					
ANR	6757070	AssignmentExpression	br = ctx -> avctx -> bit_rate / ctx -> avctx -> channels		6757056	2		=			
ANR	6757071	Identifier	br		6757056	0					
ANR	6757072	MultiplicativeExpression	ctx -> avctx -> bit_rate / ctx -> avctx -> channels		6757056	1		/			
ANR	6757073	PtrMemberAccess	ctx -> avctx -> bit_rate		6757056	0					
ANR	6757074	PtrMemberAccess	ctx -> avctx		6757056	0					
ANR	6757075	Identifier	ctx		6757056	0					
ANR	6757076	Identifier	avctx		6757056	1					
ANR	6757077	Identifier	bit_rate		6757056	1					
ANR	6757078	PtrMemberAccess	ctx -> avctx -> channels		6757056	1					
ANR	6757079	PtrMemberAccess	ctx -> avctx		6757056	0					
ANR	6757080	Identifier	ctx		6757056	0					
ANR	6757081	Identifier	avctx		6757056	1					
ANR	6757082	Identifier	channels		6757056	1					
ANR	6757083	IdentifierDeclStatement	int attack_ratio = br <= 16000 ? 18 : 10 ;	13:4:303:347	6757056	2	True				
ANR	6757084	IdentifierDecl	attack_ratio = br <= 16000 ? 18 : 10		6757056	0					
ANR	6757085	IdentifierDeclType	int		6757056	0					
ANR	6757086	Identifier	attack_ratio		6757056	1					
ANR	6757087	AssignmentExpression	attack_ratio = br <= 16000 ? 18 : 10		6757056	2		=			
ANR	6757088	Identifier	attack_ratio		6757056	0					
ANR	6757089	ConditionalExpression	br <= 16000 ? 18 : 10		6757056	1					
ANR	6757090	Condition	br <= 16000		6757056	0					
ANR	6757091	RelationalExpression	br <= 16000		6757056	0		<=			
ANR	6757092	Identifier	br		6757056	0					
ANR	6757093	PrimaryExpression	16000		6757056	1					
ANR	6757094	PrimaryExpression	18		6757056	1					
ANR	6757095	PrimaryExpression	10		6757056	2					
ANR	6757096	IdentifierDeclStatement	Psy3gppContext * pctx = ( Psy3gppContext * ) ctx -> model_priv_data ;	15:4:354:415	6757056	3	True				
ANR	6757097	IdentifierDecl	* pctx = ( Psy3gppContext * ) ctx -> model_priv_data		6757056	0					
ANR	6757098	IdentifierDeclType	Psy3gppContext *		6757056	0					
ANR	6757099	Identifier	pctx		6757056	1					
ANR	6757100	AssignmentExpression	* pctx = ( Psy3gppContext * ) ctx -> model_priv_data		6757056	2		=			
ANR	6757101	Identifier	pctx		6757056	0					
ANR	6757102	CastExpression	( Psy3gppContext * ) ctx -> model_priv_data		6757056	1					
ANR	6757103	CastTarget	Psy3gppContext *		6757056	0					
ANR	6757104	PtrMemberAccess	ctx -> model_priv_data		6757056	1					
ANR	6757105	Identifier	ctx		6757056	0					
ANR	6757106	Identifier	model_priv_data		6757056	1					
ANR	6757107	IdentifierDeclStatement	Psy3gppChannel * pch = & pctx -> ch [ channel ] ;	17:4:422:463	6757056	4	True				
ANR	6757108	IdentifierDecl	* pch = & pctx -> ch [ channel ]		6757056	0					
ANR	6757109	IdentifierDeclType	Psy3gppChannel *		6757056	0					
ANR	6757110	Identifier	pch		6757056	1					
ANR	6757111	AssignmentExpression	* pch = & pctx -> ch [ channel ]		6757056	2		=			
ANR	6757112	Identifier	pch		6757056	0					
ANR	6757113	UnaryOperationExpression	& pctx -> ch [ channel ]		6757056	1					
ANR	6757114	UnaryOperator	&		6757056	0					
ANR	6757115	ArrayIndexing	pctx -> ch [ channel ]		6757056	1					
ANR	6757116	PtrMemberAccess	pctx -> ch		6757056	0					
ANR	6757117	Identifier	pctx		6757056	0					
ANR	6757118	Identifier	ch		6757056	1					
ANR	6757119	Identifier	channel		6757056	1					
ANR	6757120	IdentifierDeclStatement	uint8_t grouping = 0 ;	19:4:470:494	6757056	5	True				
ANR	6757121	IdentifierDecl	grouping = 0		6757056	0					
ANR	6757122	IdentifierDeclType	uint8_t		6757056	0					
ANR	6757123	Identifier	grouping		6757056	1					
ANR	6757124	AssignmentExpression	grouping = 0		6757056	2		=			
ANR	6757125	Identifier	grouping		6757056	0					
ANR	6757126	PrimaryExpression	0		6757056	1					
ANR	6757127	IdentifierDeclStatement	FFPsyWindowInfo wi ;	21:4:501:519	6757056	6	True				
ANR	6757128	IdentifierDecl	wi		6757056	0					
ANR	6757129	IdentifierDeclType	FFPsyWindowInfo		6757056	0					
ANR	6757130	Identifier	wi		6757056	1					
ANR	6757131	ExpressionStatement	"memset ( & wi , 0 , sizeof ( wi ) )"	25:4:528:554	6757056	7	True				
ANR	6757132	CallExpression	"memset ( & wi , 0 , sizeof ( wi ) )"		6757056	0					
ANR	6757133	Callee	memset		6757056	0					
ANR	6757134	Identifier	memset		6757056	0					
ANR	6757135	ArgumentList	& wi		6757056	1					
ANR	6757136	Argument	& wi		6757056	0					
ANR	6757137	UnaryOperationExpression	& wi		6757056	0					
ANR	6757138	UnaryOperator	&		6757056	0					
ANR	6757139	Identifier	wi		6757056	1					
ANR	6757140	Argument	0		6757056	1					
ANR	6757141	PrimaryExpression	0		6757056	0					
ANR	6757142	Argument	sizeof ( wi )		6757056	2					
ANR	6757143	SizeofExpression	sizeof ( wi )		6757056	0					
ANR	6757144	Sizeof	sizeof		6757056	0					
ANR	6757145	SizeofOperand	wi		6757056	1					
ANR	6757146	IfStatement	if ( la )		6757056	8					
ANR	6757147	Condition	la	27:8:565:566	6757056	0	True				
ANR	6757148	Identifier	la		6757056	0					
ANR	6757149	CompoundStatement		29:8:467:483	6757056	1					
ANR	6757150	IdentifierDeclStatement	"float s [ 8 ] , v ;"	29:8:580:593	6757056	0	True				
ANR	6757151	IdentifierDecl	s [ 8 ]		6757056	0					
ANR	6757152	IdentifierDeclType	float [ 8 ]		6757056	0					
ANR	6757153	Identifier	s		6757056	1					
ANR	6757154	PrimaryExpression	8		6757056	2					
ANR	6757155	IdentifierDecl	v		6757056	1					
ANR	6757156	IdentifierDeclType	float		6757056	0					
ANR	6757157	Identifier	v		6757056	1					
ANR	6757158	IdentifierDeclStatement	int switch_to_eight = 0 ;	31:8:604:627	6757056	1	True				
ANR	6757159	IdentifierDecl	switch_to_eight = 0		6757056	0					
ANR	6757160	IdentifierDeclType	int		6757056	0					
ANR	6757161	Identifier	switch_to_eight		6757056	1					
ANR	6757162	AssignmentExpression	switch_to_eight = 0		6757056	2		=			
ANR	6757163	Identifier	switch_to_eight		6757056	0					
ANR	6757164	PrimaryExpression	0		6757056	1					
ANR	6757165	IdentifierDeclStatement	"float sum = 0.0 , sum2 = 0.0 ;"	33:8:638:665	6757056	2	True				
ANR	6757166	IdentifierDecl	sum = 0.0		6757056	0					
ANR	6757167	IdentifierDeclType	float		6757056	0					
ANR	6757168	Identifier	sum		6757056	1					
ANR	6757169	AssignmentExpression	sum = 0.0		6757056	2		=			
ANR	6757170	Identifier	sum		6757056	0					
ANR	6757171	PrimaryExpression	0.0		6757056	1					
ANR	6757172	IdentifierDecl	sum2 = 0.0		6757056	1					
ANR	6757173	IdentifierDeclType	float		6757056	0					
ANR	6757174	Identifier	sum2		6757056	1					
ANR	6757175	AssignmentExpression	sum2 = 0.0		6757056	2		=			
ANR	6757176	Identifier	sum2		6757056	0					
ANR	6757177	PrimaryExpression	0.0		6757056	1					
ANR	6757178	IdentifierDeclStatement	int attack_n = 0 ;	35:8:676:692	6757056	3	True				
ANR	6757179	IdentifierDecl	attack_n = 0		6757056	0					
ANR	6757180	IdentifierDeclType	int		6757056	0					
ANR	6757181	Identifier	attack_n		6757056	1					
ANR	6757182	AssignmentExpression	attack_n = 0		6757056	2		=			
ANR	6757183	Identifier	attack_n		6757056	0					
ANR	6757184	PrimaryExpression	0		6757056	1					
ANR	6757185	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6757056	4					
ANR	6757186	ForInit	i = 0 ;	37:13:708:713	6757056	0	True				
ANR	6757187	AssignmentExpression	i = 0		6757056	0		=			
ANR	6757188	Identifier	i		6757056	0					
ANR	6757189	PrimaryExpression	0		6757056	1					
ANR	6757190	Condition	i < 8	37:20:715:719	6757056	1	True				
ANR	6757191	RelationalExpression	i < 8		6757056	0		<			
ANR	6757192	Identifier	i		6757056	0					
ANR	6757193	PrimaryExpression	8		6757056	1					
ANR	6757194	PostIncDecOperationExpression	i ++	37:27:722:724	6757056	2	True				
ANR	6757195	Identifier	i		6757056	0					
ANR	6757196	IncDec	++		6757056	1					
ANR	6757197	CompoundStatement		31:32:518:518	6757056	3					
ANR	6757198	ForStatement	for ( j = 0 ; j < 128 ; j ++ )		6757056	0					
ANR	6757199	ForInit	j = 0 ;	39:17:747:752	6757056	0	True				
ANR	6757200	AssignmentExpression	j = 0		6757056	0		=			
ANR	6757201	Identifier	j		6757056	0					
ANR	6757202	PrimaryExpression	0		6757056	1					
ANR	6757203	Condition	j < 128	39:24:754:760	6757056	1	True				
ANR	6757204	RelationalExpression	j < 128		6757056	0		<			
ANR	6757205	Identifier	j		6757056	0					
ANR	6757206	PrimaryExpression	128		6757056	1					
ANR	6757207	PostIncDecOperationExpression	j ++	39:33:763:765	6757056	2	True				
ANR	6757208	Identifier	j		6757056	0					
ANR	6757209	IncDec	++		6757056	1					
ANR	6757210	CompoundStatement		33:38:559:559	6757056	3					
ANR	6757211	ExpressionStatement	"v = iir_filter ( la [ ( i * 128 + j ) * ctx -> avctx -> channels ] , pch -> iir_state )"	41:16:787:853	6757056	0	True				
ANR	6757212	AssignmentExpression	"v = iir_filter ( la [ ( i * 128 + j ) * ctx -> avctx -> channels ] , pch -> iir_state )"		6757056	0		=			
ANR	6757213	Identifier	v		6757056	0					
ANR	6757214	CallExpression	"iir_filter ( la [ ( i * 128 + j ) * ctx -> avctx -> channels ] , pch -> iir_state )"		6757056	1					
ANR	6757215	Callee	iir_filter		6757056	0					
ANR	6757216	Identifier	iir_filter		6757056	0					
ANR	6757217	ArgumentList	la [ ( i * 128 + j ) * ctx -> avctx -> channels ]		6757056	1					
ANR	6757218	Argument	la [ ( i * 128 + j ) * ctx -> avctx -> channels ]		6757056	0					
ANR	6757219	ArrayIndexing	la [ ( i * 128 + j ) * ctx -> avctx -> channels ]		6757056	0					
ANR	6757220	Identifier	la		6757056	0					
ANR	6757221	MultiplicativeExpression	( i * 128 + j ) * ctx -> avctx -> channels		6757056	1		*			
ANR	6757222	AdditiveExpression	i * 128 + j		6757056	0		+			
ANR	6757223	MultiplicativeExpression	i * 128		6757056	0		*			
ANR	6757224	Identifier	i		6757056	0					
ANR	6757225	PrimaryExpression	128		6757056	1					
ANR	6757226	Identifier	j		6757056	1					
ANR	6757227	PtrMemberAccess	ctx -> avctx -> channels		6757056	1					
ANR	6757228	PtrMemberAccess	ctx -> avctx		6757056	0					
ANR	6757229	Identifier	ctx		6757056	0					
ANR	6757230	Identifier	avctx		6757056	1					
ANR	6757231	Identifier	channels		6757056	1					
ANR	6757232	Argument	pch -> iir_state		6757056	1					
ANR	6757233	PtrMemberAccess	pch -> iir_state		6757056	0					
ANR	6757234	Identifier	pch		6757056	0					
ANR	6757235	Identifier	iir_state		6757056	1					
ANR	6757236	ExpressionStatement	sum += v * v	43:16:872:882	6757056	1	True				
ANR	6757237	AssignmentExpression	sum += v * v		6757056	0		+=			
ANR	6757238	Identifier	sum		6757056	0					
ANR	6757239	MultiplicativeExpression	v * v		6757056	1		*			
ANR	6757240	Identifier	v		6757056	0					
ANR	6757241	Identifier	v		6757056	1					
ANR	6757242	ExpressionStatement	s [ i ] = sum	47:12:912:923	6757056	1	True				
ANR	6757243	AssignmentExpression	s [ i ] = sum		6757056	0		=			
ANR	6757244	ArrayIndexing	s [ i ]		6757056	0					
ANR	6757245	Identifier	s		6757056	0					
ANR	6757246	Identifier	i		6757056	1					
ANR	6757247	Identifier	sum		6757056	1					
ANR	6757248	ExpressionStatement	sum2 += sum	49:12:938:949	6757056	2	True				
ANR	6757249	AssignmentExpression	sum2 += sum		6757056	0		+=			
ANR	6757250	Identifier	sum2		6757056	0					
ANR	6757251	Identifier	sum		6757056	1					
ANR	6757252	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6757056	5					
ANR	6757253	ForInit	i = 0 ;	53:13:976:981	6757056	0	True				
ANR	6757254	AssignmentExpression	i = 0		6757056	0		=			
ANR	6757255	Identifier	i		6757056	0					
ANR	6757256	PrimaryExpression	0		6757056	1					
ANR	6757257	Condition	i < 8	53:20:983:987	6757056	1	True				
ANR	6757258	RelationalExpression	i < 8		6757056	0		<			
ANR	6757259	Identifier	i		6757056	0					
ANR	6757260	PrimaryExpression	8		6757056	1					
ANR	6757261	PostIncDecOperationExpression	i ++	53:27:990:992	6757056	2	True				
ANR	6757262	Identifier	i		6757056	0					
ANR	6757263	IncDec	++		6757056	1					
ANR	6757264	CompoundStatement		47:32:786:786	6757056	3					
ANR	6757265	IfStatement	if ( s [ i ] > pch -> win_energy * attack_ratio )		6757056	0					
ANR	6757266	Condition	s [ i ] > pch -> win_energy * attack_ratio	55:16:1014:1050	6757056	0	True				
ANR	6757267	RelationalExpression	s [ i ] > pch -> win_energy * attack_ratio		6757056	0		>			
ANR	6757268	ArrayIndexing	s [ i ]		6757056	0					
ANR	6757269	Identifier	s		6757056	0					
ANR	6757270	Identifier	i		6757056	1					
ANR	6757271	MultiplicativeExpression	pch -> win_energy * attack_ratio		6757056	1		*			
ANR	6757272	PtrMemberAccess	pch -> win_energy		6757056	0					
ANR	6757273	Identifier	pch		6757056	0					
ANR	6757274	Identifier	win_energy		6757056	1					
ANR	6757275	Identifier	attack_ratio		6757056	1					
ANR	6757276	CompoundStatement		49:55:844:844	6757056	1					
ANR	6757277	ExpressionStatement	attack_n = i + 1	57:16:1072:1095	6757056	0	True				
ANR	6757278	AssignmentExpression	attack_n = i + 1		6757056	0		=			
ANR	6757279	Identifier	attack_n		6757056	0					
ANR	6757280	AdditiveExpression	i + 1		6757056	1		+			
ANR	6757281	Identifier	i		6757056	0					
ANR	6757282	PrimaryExpression	1		6757056	1					
ANR	6757283	ExpressionStatement	switch_to_eight = 1	59:16:1114:1133	6757056	1	True				
ANR	6757284	AssignmentExpression	switch_to_eight = 1		6757056	0		=			
ANR	6757285	Identifier	switch_to_eight		6757056	0					
ANR	6757286	PrimaryExpression	1		6757056	1					
ANR	6757287	BreakStatement	break ;	61:16:1152:1157	6757056	2	True				
ANR	6757288	ExpressionStatement	pch -> win_energy = pch -> win_energy * 7 / 8 + sum2 / 64	67:8:1194:1241	6757056	6	True				
ANR	6757289	AssignmentExpression	pch -> win_energy = pch -> win_energy * 7 / 8 + sum2 / 64		6757056	0		=			
ANR	6757290	PtrMemberAccess	pch -> win_energy		6757056	0					
ANR	6757291	Identifier	pch		6757056	0					
ANR	6757292	Identifier	win_energy		6757056	1					
ANR	6757293	AdditiveExpression	pch -> win_energy * 7 / 8 + sum2 / 64		6757056	1		+			
ANR	6757294	MultiplicativeExpression	pch -> win_energy * 7 / 8		6757056	0		*			
ANR	6757295	PtrMemberAccess	pch -> win_energy		6757056	0					
ANR	6757296	Identifier	pch		6757056	0					
ANR	6757297	Identifier	win_energy		6757056	1					
ANR	6757298	MultiplicativeExpression	7 / 8		6757056	1		/			
ANR	6757299	PrimaryExpression	7		6757056	0					
ANR	6757300	PrimaryExpression	8		6757056	1					
ANR	6757301	MultiplicativeExpression	sum2 / 64		6757056	1		/			
ANR	6757302	Identifier	sum2		6757056	0					
ANR	6757303	PrimaryExpression	64		6757056	1					
ANR	6757304	ExpressionStatement	wi . window_type [ 1 ] = prev_type	71:8:1254:1283	6757056	7	True				
ANR	6757305	AssignmentExpression	wi . window_type [ 1 ] = prev_type		6757056	0		=			
ANR	6757306	ArrayIndexing	wi . window_type [ 1 ]		6757056	0					
ANR	6757307	MemberAccess	wi . window_type		6757056	0					
ANR	6757308	Identifier	wi		6757056	0					
ANR	6757309	Identifier	window_type		6757056	1					
ANR	6757310	PrimaryExpression	1		6757056	1					
ANR	6757311	Identifier	prev_type		6757056	1					
ANR	6757312	SwitchStatement	switch ( prev_type )		6757056	8					
ANR	6757313	Condition	prev_type	73:16:1302:1310	6757056	0	True				
ANR	6757314	Identifier	prev_type		6757056	0					
ANR	6757315	CompoundStatement		67:27:1104:1104	6757056	1					
ANR	6757316	Label	case ONLY_LONG_SEQUENCE :	75:8:1324:1347	6757056	0	True				
ANR	6757317	Identifier	ONLY_LONG_SEQUENCE		6757056	0					
ANR	6757318	ExpressionStatement	wi . window_type [ 0 ] = switch_to_eight ? LONG_START_SEQUENCE : ONLY_LONG_SEQUENCE	77:12:1362:1440	6757056	1	True				
ANR	6757319	AssignmentExpression	wi . window_type [ 0 ] = switch_to_eight ? LONG_START_SEQUENCE : ONLY_LONG_SEQUENCE		6757056	0		=			
ANR	6757320	ArrayIndexing	wi . window_type [ 0 ]		6757056	0					
ANR	6757321	MemberAccess	wi . window_type		6757056	0					
ANR	6757322	Identifier	wi		6757056	0					
ANR	6757323	Identifier	window_type		6757056	1					
ANR	6757324	PrimaryExpression	0		6757056	1					
ANR	6757325	ConditionalExpression	switch_to_eight ? LONG_START_SEQUENCE : ONLY_LONG_SEQUENCE		6757056	1					
ANR	6757326	Condition	switch_to_eight		6757056	0					
ANR	6757327	Identifier	switch_to_eight		6757056	0					
ANR	6757328	Identifier	LONG_START_SEQUENCE		6757056	1					
ANR	6757329	Identifier	ONLY_LONG_SEQUENCE		6757056	2					
ANR	6757330	BreakStatement	break ;	79:12:1455:1460	6757056	2	True				
ANR	6757331	Label	case LONG_START_SEQUENCE :	81:8:1471:1495	6757056	3	True				
ANR	6757332	Identifier	LONG_START_SEQUENCE		6757056	0					
ANR	6757333	ExpressionStatement	wi . window_type [ 0 ] = EIGHT_SHORT_SEQUENCE	83:12:1510:1550	6757056	4	True				
ANR	6757334	AssignmentExpression	wi . window_type [ 0 ] = EIGHT_SHORT_SEQUENCE		6757056	0		=			
ANR	6757335	ArrayIndexing	wi . window_type [ 0 ]		6757056	0					
ANR	6757336	MemberAccess	wi . window_type		6757056	0					
ANR	6757337	Identifier	wi		6757056	0					
ANR	6757338	Identifier	window_type		6757056	1					
ANR	6757339	PrimaryExpression	0		6757056	1					
ANR	6757340	Identifier	EIGHT_SHORT_SEQUENCE		6757056	1					
ANR	6757341	ExpressionStatement	grouping = pch -> next_grouping	85:12:1565:1594	6757056	5	True				
ANR	6757342	AssignmentExpression	grouping = pch -> next_grouping		6757056	0		=			
ANR	6757343	Identifier	grouping		6757056	0					
ANR	6757344	PtrMemberAccess	pch -> next_grouping		6757056	1					
ANR	6757345	Identifier	pch		6757056	0					
ANR	6757346	Identifier	next_grouping		6757056	1					
ANR	6757347	BreakStatement	break ;	87:12:1609:1614	6757056	6	True				
ANR	6757348	Label	case LONG_STOP_SEQUENCE :	89:8:1625:1648	6757056	7	True				
ANR	6757349	Identifier	LONG_STOP_SEQUENCE		6757056	0					
ANR	6757350	ExpressionStatement	wi . window_type [ 0 ] = ONLY_LONG_SEQUENCE	91:12:1663:1701	6757056	8	True				
ANR	6757351	AssignmentExpression	wi . window_type [ 0 ] = ONLY_LONG_SEQUENCE		6757056	0		=			
ANR	6757352	ArrayIndexing	wi . window_type [ 0 ]		6757056	0					
ANR	6757353	MemberAccess	wi . window_type		6757056	0					
ANR	6757354	Identifier	wi		6757056	0					
ANR	6757355	Identifier	window_type		6757056	1					
ANR	6757356	PrimaryExpression	0		6757056	1					
ANR	6757357	Identifier	ONLY_LONG_SEQUENCE		6757056	1					
ANR	6757358	BreakStatement	break ;	93:12:1716:1721	6757056	9	True				
ANR	6757359	Label	case EIGHT_SHORT_SEQUENCE :	95:8:1732:1757	6757056	10	True				
ANR	6757360	Identifier	EIGHT_SHORT_SEQUENCE		6757056	0					
ANR	6757361	ExpressionStatement	wi . window_type [ 0 ] = switch_to_eight ? EIGHT_SHORT_SEQUENCE : LONG_STOP_SEQUENCE	97:12:1772:1851	6757056	11	True				
ANR	6757362	AssignmentExpression	wi . window_type [ 0 ] = switch_to_eight ? EIGHT_SHORT_SEQUENCE : LONG_STOP_SEQUENCE		6757056	0		=			
ANR	6757363	ArrayIndexing	wi . window_type [ 0 ]		6757056	0					
ANR	6757364	MemberAccess	wi . window_type		6757056	0					
ANR	6757365	Identifier	wi		6757056	0					
ANR	6757366	Identifier	window_type		6757056	1					
ANR	6757367	PrimaryExpression	0		6757056	1					
ANR	6757368	ConditionalExpression	switch_to_eight ? EIGHT_SHORT_SEQUENCE : LONG_STOP_SEQUENCE		6757056	1					
ANR	6757369	Condition	switch_to_eight		6757056	0					
ANR	6757370	Identifier	switch_to_eight		6757056	0					
ANR	6757371	Identifier	EIGHT_SHORT_SEQUENCE		6757056	1					
ANR	6757372	Identifier	LONG_STOP_SEQUENCE		6757056	2					
ANR	6757373	ExpressionStatement	grouping = switch_to_eight ? pch -> next_grouping : 0	99:12:1866:1917	6757056	12	True				
ANR	6757374	AssignmentExpression	grouping = switch_to_eight ? pch -> next_grouping : 0		6757056	0		=			
ANR	6757375	Identifier	grouping		6757056	0					
ANR	6757376	ConditionalExpression	switch_to_eight ? pch -> next_grouping : 0		6757056	1					
ANR	6757377	Condition	switch_to_eight		6757056	0					
ANR	6757378	Identifier	switch_to_eight		6757056	0					
ANR	6757379	PtrMemberAccess	pch -> next_grouping		6757056	1					
ANR	6757380	Identifier	pch		6757056	0					
ANR	6757381	Identifier	next_grouping		6757056	1					
ANR	6757382	PrimaryExpression	0		6757056	2					
ANR	6757383	BreakStatement	break ;	101:12:1932:1937	6757056	13	True				
ANR	6757384	ExpressionStatement	pch -> next_grouping = window_grouping [ attack_n ]	105:8:1959:2005	6757056	9	True				
ANR	6757385	AssignmentExpression	pch -> next_grouping = window_grouping [ attack_n ]		6757056	0		=			
ANR	6757386	PtrMemberAccess	pch -> next_grouping		6757056	0					
ANR	6757387	Identifier	pch		6757056	0					
ANR	6757388	Identifier	next_grouping		6757056	1					
ANR	6757389	ArrayIndexing	window_grouping [ attack_n ]		6757056	1					
ANR	6757390	Identifier	window_grouping		6757056	0					
ANR	6757391	Identifier	attack_n		6757056	1					
ANR	6757392	ElseStatement	else		6757056	0					
ANR	6757393	CompoundStatement		101:11:1810:1810	6757056	0					
ANR	6757394	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		6757056	0					
ANR	6757395	ForInit	i = 0 ;	109:13:2035:2040	6757056	0	True				
ANR	6757396	AssignmentExpression	i = 0		6757056	0		=			
ANR	6757397	Identifier	i		6757056	0					
ANR	6757398	PrimaryExpression	0		6757056	1					
ANR	6757399	Condition	i < 3	109:20:2042:2046	6757056	1	True				
ANR	6757400	RelationalExpression	i < 3		6757056	0		<			
ANR	6757401	Identifier	i		6757056	0					
ANR	6757402	PrimaryExpression	3		6757056	1					
ANR	6757403	PostIncDecOperationExpression	i ++	109:27:2049:2051	6757056	2	True				
ANR	6757404	Identifier	i		6757056	0					
ANR	6757405	IncDec	++		6757056	1					
ANR	6757406	ExpressionStatement	wi . window_type [ i ] = prev_type	111:12:2067:2096	6757056	3	True				
ANR	6757407	AssignmentExpression	wi . window_type [ i ] = prev_type		6757056	0		=			
ANR	6757408	ArrayIndexing	wi . window_type [ i ]		6757056	0					
ANR	6757409	MemberAccess	wi . window_type		6757056	0					
ANR	6757410	Identifier	wi		6757056	0					
ANR	6757411	Identifier	window_type		6757056	1					
ANR	6757412	Identifier	i		6757056	1					
ANR	6757413	Identifier	prev_type		6757056	1					
ANR	6757414	ExpressionStatement	grouping = ( prev_type == EIGHT_SHORT_SEQUENCE ) ? window_grouping [ 0 ] : 0	113:8:2107:2178	6757056	1	True				
ANR	6757415	AssignmentExpression	grouping = ( prev_type == EIGHT_SHORT_SEQUENCE ) ? window_grouping [ 0 ] : 0		6757056	0		=			
ANR	6757416	Identifier	grouping		6757056	0					
ANR	6757417	ConditionalExpression	( prev_type == EIGHT_SHORT_SEQUENCE ) ? window_grouping [ 0 ] : 0		6757056	1					
ANR	6757418	Condition	prev_type == EIGHT_SHORT_SEQUENCE		6757056	0					
ANR	6757419	EqualityExpression	prev_type == EIGHT_SHORT_SEQUENCE		6757056	0		==			
ANR	6757420	Identifier	prev_type		6757056	0					
ANR	6757421	Identifier	EIGHT_SHORT_SEQUENCE		6757056	1					
ANR	6757422	ArrayIndexing	window_grouping [ 0 ]		6757056	1					
ANR	6757423	Identifier	window_grouping		6757056	0					
ANR	6757424	PrimaryExpression	0		6757056	1					
ANR	6757425	PrimaryExpression	0		6757056	2					
ANR	6757426	ExpressionStatement	wi . window_shape = 1	119:4:2194:2215	6757056	9	True				
ANR	6757427	AssignmentExpression	wi . window_shape = 1		6757056	0		=			
ANR	6757428	MemberAccess	wi . window_shape		6757056	0					
ANR	6757429	Identifier	wi		6757056	0					
ANR	6757430	Identifier	window_shape		6757056	1					
ANR	6757431	PrimaryExpression	1		6757056	1					
ANR	6757432	IfStatement	if ( wi . window_type [ 0 ] != EIGHT_SHORT_SEQUENCE )		6757056	10					
ANR	6757433	Condition	wi . window_type [ 0 ] != EIGHT_SHORT_SEQUENCE	121:8:2226:2266	6757056	0	True				
ANR	6757434	EqualityExpression	wi . window_type [ 0 ] != EIGHT_SHORT_SEQUENCE		6757056	0		!=			
ANR	6757435	ArrayIndexing	wi . window_type [ 0 ]		6757056	0					
ANR	6757436	MemberAccess	wi . window_type		6757056	0					
ANR	6757437	Identifier	wi		6757056	0					
ANR	6757438	Identifier	window_type		6757056	1					
ANR	6757439	PrimaryExpression	0		6757056	1					
ANR	6757440	Identifier	EIGHT_SHORT_SEQUENCE		6757056	1					
ANR	6757441	CompoundStatement		115:51:2060:2060	6757056	1					
ANR	6757442	ExpressionStatement	wi . num_windows = 1	123:8:2280:2298	6757056	0	True				
ANR	6757443	AssignmentExpression	wi . num_windows = 1		6757056	0		=			
ANR	6757444	MemberAccess	wi . num_windows		6757056	0					
ANR	6757445	Identifier	wi		6757056	0					
ANR	6757446	Identifier	num_windows		6757056	1					
ANR	6757447	PrimaryExpression	1		6757056	1					
ANR	6757448	ExpressionStatement	wi . grouping [ 0 ] = 1	125:8:2309:2327	6757056	1	True				
ANR	6757449	AssignmentExpression	wi . grouping [ 0 ] = 1		6757056	0		=			
ANR	6757450	ArrayIndexing	wi . grouping [ 0 ]		6757056	0					
ANR	6757451	MemberAccess	wi . grouping		6757056	0					
ANR	6757452	Identifier	wi		6757056	0					
ANR	6757453	Identifier	grouping		6757056	1					
ANR	6757454	PrimaryExpression	0		6757056	1					
ANR	6757455	PrimaryExpression	1		6757056	1					
ANR	6757456	ElseStatement	else		6757056	0					
ANR	6757457	CompoundStatement		123:8:2143:2158	6757056	0					
ANR	6757458	IdentifierDeclStatement	int lastgrp = 0 ;	129:8:2352:2367	6757056	0	True				
ANR	6757459	IdentifierDecl	lastgrp = 0		6757056	0					
ANR	6757460	IdentifierDeclType	int		6757056	0					
ANR	6757461	Identifier	lastgrp		6757056	1					
ANR	6757462	AssignmentExpression	lastgrp = 0		6757056	2		=			
ANR	6757463	Identifier	lastgrp		6757056	0					
ANR	6757464	PrimaryExpression	0		6757056	1					
ANR	6757465	ExpressionStatement	wi . num_windows = 8	131:8:2378:2396	6757056	1	True				
ANR	6757466	AssignmentExpression	wi . num_windows = 8		6757056	0		=			
ANR	6757467	MemberAccess	wi . num_windows		6757056	0					
ANR	6757468	Identifier	wi		6757056	0					
ANR	6757469	Identifier	num_windows		6757056	1					
ANR	6757470	PrimaryExpression	8		6757056	1					
ANR	6757471	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6757056	2					
ANR	6757472	ForInit	i = 0 ;	133:13:2412:2417	6757056	0	True				
ANR	6757473	AssignmentExpression	i = 0		6757056	0		=			
ANR	6757474	Identifier	i		6757056	0					
ANR	6757475	PrimaryExpression	0		6757056	1					
ANR	6757476	Condition	i < 8	133:20:2419:2423	6757056	1	True				
ANR	6757477	RelationalExpression	i < 8		6757056	0		<			
ANR	6757478	Identifier	i		6757056	0					
ANR	6757479	PrimaryExpression	8		6757056	1					
ANR	6757480	PostIncDecOperationExpression	i ++	133:27:2426:2428	6757056	2	True				
ANR	6757481	Identifier	i		6757056	0					
ANR	6757482	IncDec	++		6757056	1					
ANR	6757483	CompoundStatement		127:32:2222:2222	6757056	3					
ANR	6757484	IfStatement	if ( ! ( ( grouping >> i ) & 1 ) )		6757056	0					
ANR	6757485	Condition	! ( ( grouping >> i ) & 1 )	135:16:2450:2471	6757056	0	True				
ANR	6757486	UnaryOperationExpression	! ( ( grouping >> i ) & 1 )		6757056	0					
ANR	6757487	UnaryOperator	!		6757056	0					
ANR	6757488	BitAndExpression	( grouping >> i ) & 1		6757056	1		&			
ANR	6757489	ShiftExpression	grouping >> i		6757056	0		>>			
ANR	6757490	Identifier	grouping		6757056	0					
ANR	6757491	Identifier	i		6757056	1					
ANR	6757492	PrimaryExpression	1		6757056	1					
ANR	6757493	ExpressionStatement	lastgrp = i	137:16:2491:2502	6757056	1	True				
ANR	6757494	AssignmentExpression	lastgrp = i		6757056	0		=			
ANR	6757495	Identifier	lastgrp		6757056	0					
ANR	6757496	Identifier	i		6757056	1					
ANR	6757497	ExpressionStatement	wi . grouping [ lastgrp ] ++	139:12:2517:2539	6757056	1	True				
ANR	6757498	PostIncDecOperationExpression	wi . grouping [ lastgrp ] ++		6757056	0					
ANR	6757499	ArrayIndexing	wi . grouping [ lastgrp ]		6757056	0					
ANR	6757500	MemberAccess	wi . grouping		6757056	0					
ANR	6757501	Identifier	wi		6757056	0					
ANR	6757502	Identifier	grouping		6757056	1					
ANR	6757503	Identifier	lastgrp		6757056	1					
ANR	6757504	IncDec	++		6757056	1					
ANR	6757505	ReturnStatement	return wi ;	147:4:2566:2575	6757056	11	True				
ANR	6757506	Identifier	wi		6757056	0					
ANR	6757507	ReturnType	static FFPsyWindowInfo		6757056	1					
ANR	6757508	Identifier	psy_3gpp_window		6757056	2					
ANR	6757509	ParameterList	"FFPsyContext * ctx , const int16_t * audio , const int16_t * la , int channel , int prev_type"		6757056	3					
ANR	6757510	Parameter	FFPsyContext * ctx	1:39:39:55	6757056	0	True				
ANR	6757511	ParameterType	FFPsyContext *		6757056	0					
ANR	6757512	Identifier	ctx		6757056	1					
ANR	6757513	Parameter	const int16_t * audio	3:39:98:117	6757056	1	True				
ANR	6757514	ParameterType	const int16_t *		6757056	0					
ANR	6757515	Identifier	audio		6757056	1					
ANR	6757516	Parameter	const int16_t * la	3:61:120:136	6757056	2	True				
ANR	6757517	ParameterType	const int16_t *		6757056	0					
ANR	6757518	Identifier	la		6757056	1					
ANR	6757519	Parameter	int channel	5:39:179:189	6757056	3	True				
ANR	6757520	ParameterType	int		6757056	0					
ANR	6757521	Identifier	channel		6757056	1					
ANR	6757522	Parameter	int prev_type	5:52:192:204	6757056	4	True				
ANR	6757523	ParameterType	int		6757056	0					
ANR	6757524	Identifier	prev_type		6757056	1					
ANR	6757525	CFGEntryNode	ENTRY		6757056		True				
ANR	6757526	CFGExitNode	EXIT		6757056		True				
ANR	6757527	Symbol	pctx		6757056						
ANR	6757528	Symbol	* * ctx -> avctx		6757056						
ANR	6757529	Symbol	channel		6757056						
ANR	6757530	Symbol	* lastgrp		6757056						
ANR	6757531	Symbol	wi . grouping		6757056						
ANR	6757532	Symbol	wi . window_type		6757056						
ANR	6757533	Symbol	* wi . window_type		6757056						
ANR	6757534	Symbol	* wi		6757056						
ANR	6757535	Symbol	& wi		6757056						
ANR	6757536	Symbol	prev_type		6757056						
ANR	6757537	Symbol	* ctx -> avctx		6757056						
ANR	6757538	Symbol	ctx		6757056						
ANR	6757539	Symbol	attack_n		6757056						
ANR	6757540	Symbol	pch -> iir_state		6757056						
ANR	6757541	Symbol	grouping		6757056						
ANR	6757542	Symbol	pch -> next_grouping		6757056						
ANR	6757543	Symbol	EIGHT_SHORT_SEQUENCE		6757056						
ANR	6757544	Symbol	ctx -> avctx		6757056						
ANR	6757545	Symbol	pctx -> ch		6757056						
ANR	6757546	Symbol	wi . window_shape		6757056						
ANR	6757547	Symbol	pch -> win_energy		6757056						
ANR	6757548	Symbol	wi . num_windows		6757056						
ANR	6757549	Symbol	* la		6757056						
ANR	6757550	Symbol	ONLY_LONG_SEQUENCE		6757056						
ANR	6757551	Symbol	switch_to_eight		6757056						
ANR	6757552	Symbol	lastgrp		6757056						
ANR	6757553	Symbol	* pch		6757056						
ANR	6757554	Symbol	LONG_STOP_SEQUENCE		6757056						
ANR	6757555	Symbol	ctx -> avctx -> bit_rate		6757056						
ANR	6757556	Symbol	sum		6757056						
ANR	6757557	Symbol	* pctx		6757056						
ANR	6757558	Symbol	* wi . grouping		6757056						
ANR	6757559	Symbol	br		6757056						
ANR	6757560	Symbol	attack_ratio		6757056						
ANR	6757561	Symbol	wi		6757056						
ANR	6757562	Symbol	LONG_START_SEQUENCE		6757056						
ANR	6757563	Symbol	pch		6757056						
ANR	6757564	Symbol	audio		6757056						
ANR	6757565	Symbol	* attack_n		6757056						
ANR	6757566	Symbol	* window_grouping		6757056						
ANR	6757567	Symbol	* * * ctx		6757056						
ANR	6757568	Symbol	i		6757056						
ANR	6757569	Symbol	j		6757056						
ANR	6757570	Symbol	iir_filter		6757056						
ANR	6757571	Symbol	* ctx		6757056						
ANR	6757572	Symbol	ctx -> avctx -> channels		6757056						
ANR	6757573	Symbol	sum2		6757056						
ANR	6757574	Symbol	s		6757056						
ANR	6757575	Symbol	* i		6757056						
ANR	6757576	Symbol	* j		6757056						
ANR	6757577	Symbol	la		6757056						
ANR	6757578	Symbol	v		6757056						
ANR	6757579	Symbol	* ctx -> avctx -> channels		6757056						
ANR	6757580	Symbol	window_grouping		6757056						
ANR	6757581	Symbol	* * ctx		6757056						
ANR	6757582	Symbol	ctx -> model_priv_data		6757056						
ANR	6757583	Symbol	* s		6757056						
