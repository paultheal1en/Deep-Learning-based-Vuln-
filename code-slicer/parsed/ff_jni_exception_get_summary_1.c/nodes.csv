command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3515685	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_jni_exception_get_summary_1.c								
ANR	3515686	Function	ff_jni_exception_get_summary	1:0:0:3351							
ANR	3515687	FunctionDef	"ff_jni_exception_get_summary (JNIEnv * env , jthrowable exception , char * * error , void * log_ctx)"		3515686	0					
ANR	3515688	CompoundStatement		3:0:98:3351	3515686	0					
ANR	3515689	IdentifierDeclStatement	int ret = 0 ;	5:4:105:116	3515686	0	True				
ANR	3515690	IdentifierDecl	ret = 0		3515686	0					
ANR	3515691	IdentifierDeclType	int		3515686	0					
ANR	3515692	Identifier	ret		3515686	1					
ANR	3515693	AssignmentExpression	ret = 0		3515686	2		=			
ANR	3515694	Identifier	ret		3515686	0					
ANR	3515695	PrimaryExpression	0		3515686	1					
ANR	3515696	IdentifierDeclStatement	AVBPrint bp ;	9:4:125:136	3515686	1	True				
ANR	3515697	IdentifierDecl	bp		3515686	0					
ANR	3515698	IdentifierDeclType	AVBPrint		3515686	0					
ANR	3515699	Identifier	bp		3515686	1					
ANR	3515700	IdentifierDeclStatement	char * name = NULL ;	13:4:145:162	3515686	2	True				
ANR	3515701	IdentifierDecl	* name = NULL		3515686	0					
ANR	3515702	IdentifierDeclType	char *		3515686	0					
ANR	3515703	Identifier	name		3515686	1					
ANR	3515704	AssignmentExpression	* name = NULL		3515686	2		=			
ANR	3515705	Identifier	NULL		3515686	0					
ANR	3515706	Identifier	NULL		3515686	1					
ANR	3515707	IdentifierDeclStatement	char * message = NULL ;	15:4:169:189	3515686	3	True				
ANR	3515708	IdentifierDecl	* message = NULL		3515686	0					
ANR	3515709	IdentifierDeclType	char *		3515686	0					
ANR	3515710	Identifier	message		3515686	1					
ANR	3515711	AssignmentExpression	* message = NULL		3515686	2		=			
ANR	3515712	Identifier	NULL		3515686	0					
ANR	3515713	Identifier	NULL		3515686	1					
ANR	3515714	IdentifierDeclStatement	jclass class_class = NULL ;	19:4:198:223	3515686	4	True				
ANR	3515715	IdentifierDecl	class_class = NULL		3515686	0					
ANR	3515716	IdentifierDeclType	jclass		3515686	0					
ANR	3515717	Identifier	class_class		3515686	1					
ANR	3515718	AssignmentExpression	class_class = NULL		3515686	2		=			
ANR	3515719	Identifier	NULL		3515686	0					
ANR	3515720	Identifier	NULL		3515686	1					
ANR	3515721	IdentifierDeclStatement	jmethodID get_name_id = NULL ;	21:4:230:258	3515686	5	True				
ANR	3515722	IdentifierDecl	get_name_id = NULL		3515686	0					
ANR	3515723	IdentifierDeclType	jmethodID		3515686	0					
ANR	3515724	Identifier	get_name_id		3515686	1					
ANR	3515725	AssignmentExpression	get_name_id = NULL		3515686	2		=			
ANR	3515726	Identifier	NULL		3515686	0					
ANR	3515727	Identifier	NULL		3515686	1					
ANR	3515728	IdentifierDeclStatement	jclass exception_class = NULL ;	25:4:267:296	3515686	6	True				
ANR	3515729	IdentifierDecl	exception_class = NULL		3515686	0					
ANR	3515730	IdentifierDeclType	jclass		3515686	0					
ANR	3515731	Identifier	exception_class		3515686	1					
ANR	3515732	AssignmentExpression	exception_class = NULL		3515686	2		=			
ANR	3515733	Identifier	NULL		3515686	0					
ANR	3515734	Identifier	NULL		3515686	1					
ANR	3515735	IdentifierDeclStatement	jmethodID get_message_id = NULL ;	27:4:303:334	3515686	7	True				
ANR	3515736	IdentifierDecl	get_message_id = NULL		3515686	0					
ANR	3515737	IdentifierDeclType	jmethodID		3515686	0					
ANR	3515738	Identifier	get_message_id		3515686	1					
ANR	3515739	AssignmentExpression	get_message_id = NULL		3515686	2		=			
ANR	3515740	Identifier	NULL		3515686	0					
ANR	3515741	Identifier	NULL		3515686	1					
ANR	3515742	IdentifierDeclStatement	jstring string ;	31:4:343:357	3515686	8	True				
ANR	3515743	IdentifierDecl	string		3515686	0					
ANR	3515744	IdentifierDeclType	jstring		3515686	0					
ANR	3515745	Identifier	string		3515686	1					
ANR	3515746	ExpressionStatement	"av_bprint_init ( & bp , 0 , AV_BPRINT_SIZE_AUTOMATIC )"	35:4:366:414	3515686	9	True				
ANR	3515747	CallExpression	"av_bprint_init ( & bp , 0 , AV_BPRINT_SIZE_AUTOMATIC )"		3515686	0					
ANR	3515748	Callee	av_bprint_init		3515686	0					
ANR	3515749	Identifier	av_bprint_init		3515686	0					
ANR	3515750	ArgumentList	& bp		3515686	1					
ANR	3515751	Argument	& bp		3515686	0					
ANR	3515752	UnaryOperationExpression	& bp		3515686	0					
ANR	3515753	UnaryOperator	&		3515686	0					
ANR	3515754	Identifier	bp		3515686	1					
ANR	3515755	Argument	0		3515686	1					
ANR	3515756	PrimaryExpression	0		3515686	0					
ANR	3515757	Argument	AV_BPRINT_SIZE_AUTOMATIC		3515686	2					
ANR	3515758	Identifier	AV_BPRINT_SIZE_AUTOMATIC		3515686	0					
ANR	3515759	ExpressionStatement	"exception_class = ( * env ) -> GetObjectClass ( env , exception )"	39:4:423:479	3515686	10	True				
ANR	3515760	AssignmentExpression	"exception_class = ( * env ) -> GetObjectClass ( env , exception )"		3515686	0		=			
ANR	3515761	Identifier	exception_class		3515686	0					
ANR	3515762	CallExpression	"( * env ) -> GetObjectClass ( env , exception )"		3515686	1					
ANR	3515763	Callee	( * env ) -> GetObjectClass		3515686	0					
ANR	3515764	PtrMemberAccess	( * env ) -> GetObjectClass		3515686	0					
ANR	3515765	UnaryOperationExpression	* env		3515686	0					
ANR	3515766	UnaryOperator	*		3515686	0					
ANR	3515767	Identifier	env		3515686	1					
ANR	3515768	Identifier	GetObjectClass		3515686	1					
ANR	3515769	ArgumentList	env		3515686	1					
ANR	3515770	Argument	env		3515686	0					
ANR	3515771	Identifier	env		3515686	0					
ANR	3515772	Argument	exception		3515686	1					
ANR	3515773	Identifier	exception		3515686	0					
ANR	3515774	IfStatement	if ( ( * env ) -> ExceptionCheck ( env ) )		3515686	11					
ANR	3515775	Condition	( * env ) -> ExceptionCheck ( env )	41:8:490:516	3515686	0	True				
ANR	3515776	CallExpression	( * env ) -> ExceptionCheck ( env )		3515686	0					
ANR	3515777	Callee	( * env ) -> ExceptionCheck		3515686	0					
ANR	3515778	PtrMemberAccess	( * env ) -> ExceptionCheck		3515686	0					
ANR	3515779	UnaryOperationExpression	* env		3515686	0					
ANR	3515780	UnaryOperator	*		3515686	0					
ANR	3515781	Identifier	env		3515686	1					
ANR	3515782	Identifier	ExceptionCheck		3515686	1					
ANR	3515783	ArgumentList	env		3515686	1					
ANR	3515784	Argument	env		3515686	0					
ANR	3515785	Identifier	env		3515686	0					
ANR	3515786	CompoundStatement		39:37:420:420	3515686	1					
ANR	3515787	ExpressionStatement	( * env ) -> ExceptionClear ( env )	43:8:530:557	3515686	0	True				
ANR	3515788	CallExpression	( * env ) -> ExceptionClear ( env )		3515686	0					
ANR	3515789	Callee	( * env ) -> ExceptionClear		3515686	0					
ANR	3515790	PtrMemberAccess	( * env ) -> ExceptionClear		3515686	0					
ANR	3515791	UnaryOperationExpression	* env		3515686	0					
ANR	3515792	UnaryOperator	*		3515686	0					
ANR	3515793	Identifier	env		3515686	1					
ANR	3515794	Identifier	ExceptionClear		3515686	1					
ANR	3515795	ArgumentList	env		3515686	1					
ANR	3515796	Argument	env		3515686	0					
ANR	3515797	Identifier	env		3515686	0					
ANR	3515798	ExpressionStatement	"av_log ( log_ctx , AV_LOG_ERROR , ""Could not find Throwable class\\n"" )"	45:8:568:633	3515686	1	True				
ANR	3515799	CallExpression	"av_log ( log_ctx , AV_LOG_ERROR , ""Could not find Throwable class\\n"" )"		3515686	0					
ANR	3515800	Callee	av_log		3515686	0					
ANR	3515801	Identifier	av_log		3515686	0					
ANR	3515802	ArgumentList	log_ctx		3515686	1					
ANR	3515803	Argument	log_ctx		3515686	0					
ANR	3515804	Identifier	log_ctx		3515686	0					
ANR	3515805	Argument	AV_LOG_ERROR		3515686	1					
ANR	3515806	Identifier	AV_LOG_ERROR		3515686	0					
ANR	3515807	Argument	"""Could not find Throwable class\\n"""		3515686	2					
ANR	3515808	PrimaryExpression	"""Could not find Throwable class\\n"""		3515686	0					
ANR	3515809	ExpressionStatement	ret = AVERROR_EXTERNAL	47:8:644:666	3515686	2	True				
ANR	3515810	AssignmentExpression	ret = AVERROR_EXTERNAL		3515686	0		=			
ANR	3515811	Identifier	ret		3515686	0					
ANR	3515812	Identifier	AVERROR_EXTERNAL		3515686	1					
ANR	3515813	GotoStatement	goto done ;	49:8:677:686	3515686	3	True				
ANR	3515814	Identifier	done		3515686	0					
ANR	3515815	ExpressionStatement	"class_class = ( * env ) -> GetObjectClass ( env , exception_class )"	55:4:702:760	3515686	12	True				
ANR	3515816	AssignmentExpression	"class_class = ( * env ) -> GetObjectClass ( env , exception_class )"		3515686	0		=			
ANR	3515817	Identifier	class_class		3515686	0					
ANR	3515818	CallExpression	"( * env ) -> GetObjectClass ( env , exception_class )"		3515686	1					
ANR	3515819	Callee	( * env ) -> GetObjectClass		3515686	0					
ANR	3515820	PtrMemberAccess	( * env ) -> GetObjectClass		3515686	0					
ANR	3515821	UnaryOperationExpression	* env		3515686	0					
ANR	3515822	UnaryOperator	*		3515686	0					
ANR	3515823	Identifier	env		3515686	1					
ANR	3515824	Identifier	GetObjectClass		3515686	1					
ANR	3515825	ArgumentList	env		3515686	1					
ANR	3515826	Argument	env		3515686	0					
ANR	3515827	Identifier	env		3515686	0					
ANR	3515828	Argument	exception_class		3515686	1					
ANR	3515829	Identifier	exception_class		3515686	0					
ANR	3515830	IfStatement	if ( ( * env ) -> ExceptionCheck ( env ) )		3515686	13					
ANR	3515831	Condition	( * env ) -> ExceptionCheck ( env )	57:8:771:797	3515686	0	True				
ANR	3515832	CallExpression	( * env ) -> ExceptionCheck ( env )		3515686	0					
ANR	3515833	Callee	( * env ) -> ExceptionCheck		3515686	0					
ANR	3515834	PtrMemberAccess	( * env ) -> ExceptionCheck		3515686	0					
ANR	3515835	UnaryOperationExpression	* env		3515686	0					
ANR	3515836	UnaryOperator	*		3515686	0					
ANR	3515837	Identifier	env		3515686	1					
ANR	3515838	Identifier	ExceptionCheck		3515686	1					
ANR	3515839	ArgumentList	env		3515686	1					
ANR	3515840	Argument	env		3515686	0					
ANR	3515841	Identifier	env		3515686	0					
ANR	3515842	CompoundStatement		55:37:701:701	3515686	1					
ANR	3515843	ExpressionStatement	( * env ) -> ExceptionClear ( env )	59:8:811:838	3515686	0	True				
ANR	3515844	CallExpression	( * env ) -> ExceptionClear ( env )		3515686	0					
ANR	3515845	Callee	( * env ) -> ExceptionClear		3515686	0					
ANR	3515846	PtrMemberAccess	( * env ) -> ExceptionClear		3515686	0					
ANR	3515847	UnaryOperationExpression	* env		3515686	0					
ANR	3515848	UnaryOperator	*		3515686	0					
ANR	3515849	Identifier	env		3515686	1					
ANR	3515850	Identifier	ExceptionClear		3515686	1					
ANR	3515851	ArgumentList	env		3515686	1					
ANR	3515852	Argument	env		3515686	0					
ANR	3515853	Identifier	env		3515686	0					
ANR	3515854	ExpressionStatement	"av_log ( log_ctx , AV_LOG_ERROR , ""Could not find Throwable class's class\\n"" )"	61:8:849:922	3515686	1	True				
ANR	3515855	CallExpression	"av_log ( log_ctx , AV_LOG_ERROR , ""Could not find Throwable class's class\\n"" )"		3515686	0					
ANR	3515856	Callee	av_log		3515686	0					
ANR	3515857	Identifier	av_log		3515686	0					
ANR	3515858	ArgumentList	log_ctx		3515686	1					
ANR	3515859	Argument	log_ctx		3515686	0					
ANR	3515860	Identifier	log_ctx		3515686	0					
ANR	3515861	Argument	AV_LOG_ERROR		3515686	1					
ANR	3515862	Identifier	AV_LOG_ERROR		3515686	0					
ANR	3515863	Argument	"""Could not find Throwable class's class\\n"""		3515686	2					
ANR	3515864	PrimaryExpression	"""Could not find Throwable class's class\\n"""		3515686	0					
ANR	3515865	ExpressionStatement	ret = AVERROR_EXTERNAL	63:8:933:955	3515686	2	True				
ANR	3515866	AssignmentExpression	ret = AVERROR_EXTERNAL		3515686	0		=			
ANR	3515867	Identifier	ret		3515686	0					
ANR	3515868	Identifier	AVERROR_EXTERNAL		3515686	1					
ANR	3515869	GotoStatement	goto done ;	65:8:966:975	3515686	3	True				
ANR	3515870	Identifier	done		3515686	0					
ANR	3515871	ExpressionStatement	"get_name_id = ( * env ) -> GetMethodID ( env , class_class , ""getName"" , ""()Ljava/lang/String;"" )"	71:4:991:1077	3515686	14	True				
ANR	3515872	AssignmentExpression	"get_name_id = ( * env ) -> GetMethodID ( env , class_class , ""getName"" , ""()Ljava/lang/String;"" )"		3515686	0		=			
ANR	3515873	Identifier	get_name_id		3515686	0					
ANR	3515874	CallExpression	"( * env ) -> GetMethodID ( env , class_class , ""getName"" , ""()Ljava/lang/String;"" )"		3515686	1					
ANR	3515875	Callee	( * env ) -> GetMethodID		3515686	0					
ANR	3515876	PtrMemberAccess	( * env ) -> GetMethodID		3515686	0					
ANR	3515877	UnaryOperationExpression	* env		3515686	0					
ANR	3515878	UnaryOperator	*		3515686	0					
ANR	3515879	Identifier	env		3515686	1					
ANR	3515880	Identifier	GetMethodID		3515686	1					
ANR	3515881	ArgumentList	env		3515686	1					
ANR	3515882	Argument	env		3515686	0					
ANR	3515883	Identifier	env		3515686	0					
ANR	3515884	Argument	class_class		3515686	1					
ANR	3515885	Identifier	class_class		3515686	0					
ANR	3515886	Argument	"""getName"""		3515686	2					
ANR	3515887	PrimaryExpression	"""getName"""		3515686	0					
ANR	3515888	Argument	"""()Ljava/lang/String;"""		3515686	3					
ANR	3515889	PrimaryExpression	"""()Ljava/lang/String;"""		3515686	0					
ANR	3515890	IfStatement	if ( ( * env ) -> ExceptionCheck ( env ) )		3515686	15					
ANR	3515891	Condition	( * env ) -> ExceptionCheck ( env )	73:8:1088:1114	3515686	0	True				
ANR	3515892	CallExpression	( * env ) -> ExceptionCheck ( env )		3515686	0					
ANR	3515893	Callee	( * env ) -> ExceptionCheck		3515686	0					
ANR	3515894	PtrMemberAccess	( * env ) -> ExceptionCheck		3515686	0					
ANR	3515895	UnaryOperationExpression	* env		3515686	0					
ANR	3515896	UnaryOperator	*		3515686	0					
ANR	3515897	Identifier	env		3515686	1					
ANR	3515898	Identifier	ExceptionCheck		3515686	1					
ANR	3515899	ArgumentList	env		3515686	1					
ANR	3515900	Argument	env		3515686	0					
ANR	3515901	Identifier	env		3515686	0					
ANR	3515902	CompoundStatement		71:37:1018:1018	3515686	1					
ANR	3515903	ExpressionStatement	( * env ) -> ExceptionClear ( env )	75:8:1128:1155	3515686	0	True				
ANR	3515904	CallExpression	( * env ) -> ExceptionClear ( env )		3515686	0					
ANR	3515905	Callee	( * env ) -> ExceptionClear		3515686	0					
ANR	3515906	PtrMemberAccess	( * env ) -> ExceptionClear		3515686	0					
ANR	3515907	UnaryOperationExpression	* env		3515686	0					
ANR	3515908	UnaryOperator	*		3515686	0					
ANR	3515909	Identifier	env		3515686	1					
ANR	3515910	Identifier	ExceptionClear		3515686	1					
ANR	3515911	ArgumentList	env		3515686	1					
ANR	3515912	Argument	env		3515686	0					
ANR	3515913	Identifier	env		3515686	0					
ANR	3515914	ExpressionStatement	"av_log ( log_ctx , AV_LOG_ERROR , ""Could not find method Class.getName()\\n"" )"	77:8:1166:1238	3515686	1	True				
ANR	3515915	CallExpression	"av_log ( log_ctx , AV_LOG_ERROR , ""Could not find method Class.getName()\\n"" )"		3515686	0					
ANR	3515916	Callee	av_log		3515686	0					
ANR	3515917	Identifier	av_log		3515686	0					
ANR	3515918	ArgumentList	log_ctx		3515686	1					
ANR	3515919	Argument	log_ctx		3515686	0					
ANR	3515920	Identifier	log_ctx		3515686	0					
ANR	3515921	Argument	AV_LOG_ERROR		3515686	1					
ANR	3515922	Identifier	AV_LOG_ERROR		3515686	0					
ANR	3515923	Argument	"""Could not find method Class.getName()\\n"""		3515686	2					
ANR	3515924	PrimaryExpression	"""Could not find method Class.getName()\\n"""		3515686	0					
ANR	3515925	ExpressionStatement	ret = AVERROR_EXTERNAL	79:8:1249:1271	3515686	2	True				
ANR	3515926	AssignmentExpression	ret = AVERROR_EXTERNAL		3515686	0		=			
ANR	3515927	Identifier	ret		3515686	0					
ANR	3515928	Identifier	AVERROR_EXTERNAL		3515686	1					
ANR	3515929	GotoStatement	goto done ;	81:8:1282:1291	3515686	3	True				
ANR	3515930	Identifier	done		3515686	0					
ANR	3515931	ExpressionStatement	"string = ( * env ) -> CallObjectMethod ( env , exception_class , get_name_id )"	87:4:1307:1375	3515686	16	True				
ANR	3515932	AssignmentExpression	"string = ( * env ) -> CallObjectMethod ( env , exception_class , get_name_id )"		3515686	0		=			
ANR	3515933	Identifier	string		3515686	0					
ANR	3515934	CallExpression	"( * env ) -> CallObjectMethod ( env , exception_class , get_name_id )"		3515686	1					
ANR	3515935	Callee	( * env ) -> CallObjectMethod		3515686	0					
ANR	3515936	PtrMemberAccess	( * env ) -> CallObjectMethod		3515686	0					
ANR	3515937	UnaryOperationExpression	* env		3515686	0					
ANR	3515938	UnaryOperator	*		3515686	0					
ANR	3515939	Identifier	env		3515686	1					
ANR	3515940	Identifier	CallObjectMethod		3515686	1					
ANR	3515941	ArgumentList	env		3515686	1					
ANR	3515942	Argument	env		3515686	0					
ANR	3515943	Identifier	env		3515686	0					
ANR	3515944	Argument	exception_class		3515686	1					
ANR	3515945	Identifier	exception_class		3515686	0					
ANR	3515946	Argument	get_name_id		3515686	2					
ANR	3515947	Identifier	get_name_id		3515686	0					
ANR	3515948	IfStatement	if ( ( * env ) -> ExceptionCheck ( env ) )		3515686	17					
ANR	3515949	Condition	( * env ) -> ExceptionCheck ( env )	89:8:1386:1412	3515686	0	True				
ANR	3515950	CallExpression	( * env ) -> ExceptionCheck ( env )		3515686	0					
ANR	3515951	Callee	( * env ) -> ExceptionCheck		3515686	0					
ANR	3515952	PtrMemberAccess	( * env ) -> ExceptionCheck		3515686	0					
ANR	3515953	UnaryOperationExpression	* env		3515686	0					
ANR	3515954	UnaryOperator	*		3515686	0					
ANR	3515955	Identifier	env		3515686	1					
ANR	3515956	Identifier	ExceptionCheck		3515686	1					
ANR	3515957	ArgumentList	env		3515686	1					
ANR	3515958	Argument	env		3515686	0					
ANR	3515959	Identifier	env		3515686	0					
ANR	3515960	CompoundStatement		87:37:1316:1316	3515686	1					
ANR	3515961	ExpressionStatement	( * env ) -> ExceptionClear ( env )	91:8:1426:1453	3515686	0	True				
ANR	3515962	CallExpression	( * env ) -> ExceptionClear ( env )		3515686	0					
ANR	3515963	Callee	( * env ) -> ExceptionClear		3515686	0					
ANR	3515964	PtrMemberAccess	( * env ) -> ExceptionClear		3515686	0					
ANR	3515965	UnaryOperationExpression	* env		3515686	0					
ANR	3515966	UnaryOperator	*		3515686	0					
ANR	3515967	Identifier	env		3515686	1					
ANR	3515968	Identifier	ExceptionClear		3515686	1					
ANR	3515969	ArgumentList	env		3515686	1					
ANR	3515970	Argument	env		3515686	0					
ANR	3515971	Identifier	env		3515686	0					
ANR	3515972	ExpressionStatement	"av_log ( log_ctx , AV_LOG_ERROR , ""Class.getName() threw an exception\\n"" )"	93:8:1464:1533	3515686	1	True				
ANR	3515973	CallExpression	"av_log ( log_ctx , AV_LOG_ERROR , ""Class.getName() threw an exception\\n"" )"		3515686	0					
ANR	3515974	Callee	av_log		3515686	0					
ANR	3515975	Identifier	av_log		3515686	0					
ANR	3515976	ArgumentList	log_ctx		3515686	1					
ANR	3515977	Argument	log_ctx		3515686	0					
ANR	3515978	Identifier	log_ctx		3515686	0					
ANR	3515979	Argument	AV_LOG_ERROR		3515686	1					
ANR	3515980	Identifier	AV_LOG_ERROR		3515686	0					
ANR	3515981	Argument	"""Class.getName() threw an exception\\n"""		3515686	2					
ANR	3515982	PrimaryExpression	"""Class.getName() threw an exception\\n"""		3515686	0					
ANR	3515983	ExpressionStatement	ret = AVERROR_EXTERNAL	95:8:1544:1566	3515686	2	True				
ANR	3515984	AssignmentExpression	ret = AVERROR_EXTERNAL		3515686	0		=			
ANR	3515985	Identifier	ret		3515686	0					
ANR	3515986	Identifier	AVERROR_EXTERNAL		3515686	1					
ANR	3515987	GotoStatement	goto done ;	97:8:1577:1586	3515686	3	True				
ANR	3515988	Identifier	done		3515686	0					
ANR	3515989	IfStatement	if ( string )		3515686	18					
ANR	3515990	Condition	string	103:8:1606:1611	3515686	0	True				
ANR	3515991	Identifier	string		3515686	0					
ANR	3515992	CompoundStatement		101:16:1515:1515	3515686	1					
ANR	3515993	ExpressionStatement	"name = ff_jni_jstring_to_utf_chars ( env , string , log_ctx )"	105:8:1625:1681	3515686	0	True				
ANR	3515994	AssignmentExpression	"name = ff_jni_jstring_to_utf_chars ( env , string , log_ctx )"		3515686	0		=			
ANR	3515995	Identifier	name		3515686	0					
ANR	3515996	CallExpression	"ff_jni_jstring_to_utf_chars ( env , string , log_ctx )"		3515686	1					
ANR	3515997	Callee	ff_jni_jstring_to_utf_chars		3515686	0					
ANR	3515998	Identifier	ff_jni_jstring_to_utf_chars		3515686	0					
ANR	3515999	ArgumentList	env		3515686	1					
ANR	3516000	Argument	env		3515686	0					
ANR	3516001	Identifier	env		3515686	0					
ANR	3516002	Argument	string		3515686	1					
ANR	3516003	Identifier	string		3515686	0					
ANR	3516004	Argument	log_ctx		3515686	2					
ANR	3516005	Identifier	log_ctx		3515686	0					
ANR	3516006	ExpressionStatement	"( * env ) -> DeleteLocalRef ( env , string )"	107:8:1692:1727	3515686	1	True				
ANR	3516007	CallExpression	"( * env ) -> DeleteLocalRef ( env , string )"		3515686	0					
ANR	3516008	Callee	( * env ) -> DeleteLocalRef		3515686	0					
ANR	3516009	PtrMemberAccess	( * env ) -> DeleteLocalRef		3515686	0					
ANR	3516010	UnaryOperationExpression	* env		3515686	0					
ANR	3516011	UnaryOperator	*		3515686	0					
ANR	3516012	Identifier	env		3515686	1					
ANR	3516013	Identifier	DeleteLocalRef		3515686	1					
ANR	3516014	ArgumentList	env		3515686	1					
ANR	3516015	Argument	env		3515686	0					
ANR	3516016	Identifier	env		3515686	0					
ANR	3516017	Argument	string		3515686	1					
ANR	3516018	Identifier	string		3515686	0					
ANR	3516019	ExpressionStatement	string = NULL	109:8:1738:1751	3515686	2	True				
ANR	3516020	AssignmentExpression	string = NULL		3515686	0		=			
ANR	3516021	Identifier	string		3515686	0					
ANR	3516022	Identifier	NULL		3515686	1					
ANR	3516023	ExpressionStatement	"get_message_id = ( * env ) -> GetMethodID ( env , exception_class , ""getMessage"" , ""()Ljava/lang/String;"" )"	115:4:1767:1863	3515686	19	True				
ANR	3516024	AssignmentExpression	"get_message_id = ( * env ) -> GetMethodID ( env , exception_class , ""getMessage"" , ""()Ljava/lang/String;"" )"		3515686	0		=			
ANR	3516025	Identifier	get_message_id		3515686	0					
ANR	3516026	CallExpression	"( * env ) -> GetMethodID ( env , exception_class , ""getMessage"" , ""()Ljava/lang/String;"" )"		3515686	1					
ANR	3516027	Callee	( * env ) -> GetMethodID		3515686	0					
ANR	3516028	PtrMemberAccess	( * env ) -> GetMethodID		3515686	0					
ANR	3516029	UnaryOperationExpression	* env		3515686	0					
ANR	3516030	UnaryOperator	*		3515686	0					
ANR	3516031	Identifier	env		3515686	1					
ANR	3516032	Identifier	GetMethodID		3515686	1					
ANR	3516033	ArgumentList	env		3515686	1					
ANR	3516034	Argument	env		3515686	0					
ANR	3516035	Identifier	env		3515686	0					
ANR	3516036	Argument	exception_class		3515686	1					
ANR	3516037	Identifier	exception_class		3515686	0					
ANR	3516038	Argument	"""getMessage"""		3515686	2					
ANR	3516039	PrimaryExpression	"""getMessage"""		3515686	0					
ANR	3516040	Argument	"""()Ljava/lang/String;"""		3515686	3					
ANR	3516041	PrimaryExpression	"""()Ljava/lang/String;"""		3515686	0					
ANR	3516042	IfStatement	if ( ( * env ) -> ExceptionCheck ( env ) )		3515686	20					
ANR	3516043	Condition	( * env ) -> ExceptionCheck ( env )	117:8:1874:1900	3515686	0	True				
ANR	3516044	CallExpression	( * env ) -> ExceptionCheck ( env )		3515686	0					
ANR	3516045	Callee	( * env ) -> ExceptionCheck		3515686	0					
ANR	3516046	PtrMemberAccess	( * env ) -> ExceptionCheck		3515686	0					
ANR	3516047	UnaryOperationExpression	* env		3515686	0					
ANR	3516048	UnaryOperator	*		3515686	0					
ANR	3516049	Identifier	env		3515686	1					
ANR	3516050	Identifier	ExceptionCheck		3515686	1					
ANR	3516051	ArgumentList	env		3515686	1					
ANR	3516052	Argument	env		3515686	0					
ANR	3516053	Identifier	env		3515686	0					
ANR	3516054	CompoundStatement		115:37:1804:1804	3515686	1					
ANR	3516055	ExpressionStatement	( * env ) -> ExceptionClear ( env )	119:8:1914:1941	3515686	0	True				
ANR	3516056	CallExpression	( * env ) -> ExceptionClear ( env )		3515686	0					
ANR	3516057	Callee	( * env ) -> ExceptionClear		3515686	0					
ANR	3516058	PtrMemberAccess	( * env ) -> ExceptionClear		3515686	0					
ANR	3516059	UnaryOperationExpression	* env		3515686	0					
ANR	3516060	UnaryOperator	*		3515686	0					
ANR	3516061	Identifier	env		3515686	1					
ANR	3516062	Identifier	ExceptionClear		3515686	1					
ANR	3516063	ArgumentList	env		3515686	1					
ANR	3516064	Argument	env		3515686	0					
ANR	3516065	Identifier	env		3515686	0					
ANR	3516066	ExpressionStatement	"av_log ( log_ctx , AV_LOG_ERROR , ""Could not find method java/lang/Throwable.getMessage()\\n"" )"	121:8:1952:2041	3515686	1	True				
ANR	3516067	CallExpression	"av_log ( log_ctx , AV_LOG_ERROR , ""Could not find method java/lang/Throwable.getMessage()\\n"" )"		3515686	0					
ANR	3516068	Callee	av_log		3515686	0					
ANR	3516069	Identifier	av_log		3515686	0					
ANR	3516070	ArgumentList	log_ctx		3515686	1					
ANR	3516071	Argument	log_ctx		3515686	0					
ANR	3516072	Identifier	log_ctx		3515686	0					
ANR	3516073	Argument	AV_LOG_ERROR		3515686	1					
ANR	3516074	Identifier	AV_LOG_ERROR		3515686	0					
ANR	3516075	Argument	"""Could not find method java/lang/Throwable.getMessage()\\n"""		3515686	2					
ANR	3516076	PrimaryExpression	"""Could not find method java/lang/Throwable.getMessage()\\n"""		3515686	0					
ANR	3516077	ExpressionStatement	ret = AVERROR_EXTERNAL	123:8:2052:2074	3515686	2	True				
ANR	3516078	AssignmentExpression	ret = AVERROR_EXTERNAL		3515686	0		=			
ANR	3516079	Identifier	ret		3515686	0					
ANR	3516080	Identifier	AVERROR_EXTERNAL		3515686	1					
ANR	3516081	GotoStatement	goto done ;	125:8:2085:2094	3515686	3	True				
ANR	3516082	Identifier	done		3515686	0					
ANR	3516083	ExpressionStatement	"string = ( * env ) -> CallObjectMethod ( env , exception , get_message_id )"	131:4:2110:2175	3515686	21	True				
ANR	3516084	AssignmentExpression	"string = ( * env ) -> CallObjectMethod ( env , exception , get_message_id )"		3515686	0		=			
ANR	3516085	Identifier	string		3515686	0					
ANR	3516086	CallExpression	"( * env ) -> CallObjectMethod ( env , exception , get_message_id )"		3515686	1					
ANR	3516087	Callee	( * env ) -> CallObjectMethod		3515686	0					
ANR	3516088	PtrMemberAccess	( * env ) -> CallObjectMethod		3515686	0					
ANR	3516089	UnaryOperationExpression	* env		3515686	0					
ANR	3516090	UnaryOperator	*		3515686	0					
ANR	3516091	Identifier	env		3515686	1					
ANR	3516092	Identifier	CallObjectMethod		3515686	1					
ANR	3516093	ArgumentList	env		3515686	1					
ANR	3516094	Argument	env		3515686	0					
ANR	3516095	Identifier	env		3515686	0					
ANR	3516096	Argument	exception		3515686	1					
ANR	3516097	Identifier	exception		3515686	0					
ANR	3516098	Argument	get_message_id		3515686	2					
ANR	3516099	Identifier	get_message_id		3515686	0					
ANR	3516100	IfStatement	if ( ( * env ) -> ExceptionCheck ( env ) )		3515686	22					
ANR	3516101	Condition	( * env ) -> ExceptionCheck ( env )	133:8:2186:2212	3515686	0	True				
ANR	3516102	CallExpression	( * env ) -> ExceptionCheck ( env )		3515686	0					
ANR	3516103	Callee	( * env ) -> ExceptionCheck		3515686	0					
ANR	3516104	PtrMemberAccess	( * env ) -> ExceptionCheck		3515686	0					
ANR	3516105	UnaryOperationExpression	* env		3515686	0					
ANR	3516106	UnaryOperator	*		3515686	0					
ANR	3516107	Identifier	env		3515686	1					
ANR	3516108	Identifier	ExceptionCheck		3515686	1					
ANR	3516109	ArgumentList	env		3515686	1					
ANR	3516110	Argument	env		3515686	0					
ANR	3516111	Identifier	env		3515686	0					
ANR	3516112	CompoundStatement		131:37:2116:2116	3515686	1					
ANR	3516113	ExpressionStatement	( * env ) -> ExceptionClear ( env )	135:8:2226:2253	3515686	0	True				
ANR	3516114	CallExpression	( * env ) -> ExceptionClear ( env )		3515686	0					
ANR	3516115	Callee	( * env ) -> ExceptionClear		3515686	0					
ANR	3516116	PtrMemberAccess	( * env ) -> ExceptionClear		3515686	0					
ANR	3516117	UnaryOperationExpression	* env		3515686	0					
ANR	3516118	UnaryOperator	*		3515686	0					
ANR	3516119	Identifier	env		3515686	1					
ANR	3516120	Identifier	ExceptionClear		3515686	1					
ANR	3516121	ArgumentList	env		3515686	1					
ANR	3516122	Argument	env		3515686	0					
ANR	3516123	Identifier	env		3515686	0					
ANR	3516124	ExpressionStatement	"av_log ( log_ctx , AV_LOG_ERROR , ""Throwable.getMessage() threw an exception\\n"" )"	137:8:2264:2340	3515686	1	True				
ANR	3516125	CallExpression	"av_log ( log_ctx , AV_LOG_ERROR , ""Throwable.getMessage() threw an exception\\n"" )"		3515686	0					
ANR	3516126	Callee	av_log		3515686	0					
ANR	3516127	Identifier	av_log		3515686	0					
ANR	3516128	ArgumentList	log_ctx		3515686	1					
ANR	3516129	Argument	log_ctx		3515686	0					
ANR	3516130	Identifier	log_ctx		3515686	0					
ANR	3516131	Argument	AV_LOG_ERROR		3515686	1					
ANR	3516132	Identifier	AV_LOG_ERROR		3515686	0					
ANR	3516133	Argument	"""Throwable.getMessage() threw an exception\\n"""		3515686	2					
ANR	3516134	PrimaryExpression	"""Throwable.getMessage() threw an exception\\n"""		3515686	0					
ANR	3516135	ExpressionStatement	ret = AVERROR_EXTERNAL	139:8:2351:2373	3515686	2	True				
ANR	3516136	AssignmentExpression	ret = AVERROR_EXTERNAL		3515686	0		=			
ANR	3516137	Identifier	ret		3515686	0					
ANR	3516138	Identifier	AVERROR_EXTERNAL		3515686	1					
ANR	3516139	GotoStatement	goto done ;	141:8:2384:2393	3515686	3	True				
ANR	3516140	Identifier	done		3515686	0					
ANR	3516141	IfStatement	if ( string )		3515686	23					
ANR	3516142	Condition	string	147:8:2413:2418	3515686	0	True				
ANR	3516143	Identifier	string		3515686	0					
ANR	3516144	CompoundStatement		145:16:2322:2322	3515686	1					
ANR	3516145	ExpressionStatement	"message = ff_jni_jstring_to_utf_chars ( env , string , log_ctx )"	149:8:2432:2491	3515686	0	True				
ANR	3516146	AssignmentExpression	"message = ff_jni_jstring_to_utf_chars ( env , string , log_ctx )"		3515686	0		=			
ANR	3516147	Identifier	message		3515686	0					
ANR	3516148	CallExpression	"ff_jni_jstring_to_utf_chars ( env , string , log_ctx )"		3515686	1					
ANR	3516149	Callee	ff_jni_jstring_to_utf_chars		3515686	0					
ANR	3516150	Identifier	ff_jni_jstring_to_utf_chars		3515686	0					
ANR	3516151	ArgumentList	env		3515686	1					
ANR	3516152	Argument	env		3515686	0					
ANR	3516153	Identifier	env		3515686	0					
ANR	3516154	Argument	string		3515686	1					
ANR	3516155	Identifier	string		3515686	0					
ANR	3516156	Argument	log_ctx		3515686	2					
ANR	3516157	Identifier	log_ctx		3515686	0					
ANR	3516158	ExpressionStatement	"( * env ) -> DeleteLocalRef ( env , string )"	151:8:2502:2537	3515686	1	True				
ANR	3516159	CallExpression	"( * env ) -> DeleteLocalRef ( env , string )"		3515686	0					
ANR	3516160	Callee	( * env ) -> DeleteLocalRef		3515686	0					
ANR	3516161	PtrMemberAccess	( * env ) -> DeleteLocalRef		3515686	0					
ANR	3516162	UnaryOperationExpression	* env		3515686	0					
ANR	3516163	UnaryOperator	*		3515686	0					
ANR	3516164	Identifier	env		3515686	1					
ANR	3516165	Identifier	DeleteLocalRef		3515686	1					
ANR	3516166	ArgumentList	env		3515686	1					
ANR	3516167	Argument	env		3515686	0					
ANR	3516168	Identifier	env		3515686	0					
ANR	3516169	Argument	string		3515686	1					
ANR	3516170	Identifier	string		3515686	0					
ANR	3516171	ExpressionStatement	string = NULL	153:8:2548:2561	3515686	2	True				
ANR	3516172	AssignmentExpression	string = NULL		3515686	0		=			
ANR	3516173	Identifier	string		3515686	0					
ANR	3516174	Identifier	NULL		3515686	1					
ANR	3516175	IfStatement	if ( name && message )		3515686	24					
ANR	3516176	Condition	name && message	159:8:2581:2595	3515686	0	True				
ANR	3516177	AndExpression	name && message		3515686	0		&&			
ANR	3516178	Identifier	name		3515686	0					
ANR	3516179	Identifier	message		3515686	1					
ANR	3516180	CompoundStatement		157:25:2499:2499	3515686	1					
ANR	3516181	ExpressionStatement	"av_bprintf ( & bp , ""%s: %s"" , name , message )"	161:8:2609:2649	3515686	0	True				
ANR	3516182	CallExpression	"av_bprintf ( & bp , ""%s: %s"" , name , message )"		3515686	0					
ANR	3516183	Callee	av_bprintf		3515686	0					
ANR	3516184	Identifier	av_bprintf		3515686	0					
ANR	3516185	ArgumentList	& bp		3515686	1					
ANR	3516186	Argument	& bp		3515686	0					
ANR	3516187	UnaryOperationExpression	& bp		3515686	0					
ANR	3516188	UnaryOperator	&		3515686	0					
ANR	3516189	Identifier	bp		3515686	1					
ANR	3516190	Argument	"""%s: %s"""		3515686	1					
ANR	3516191	PrimaryExpression	"""%s: %s"""		3515686	0					
ANR	3516192	Argument	name		3515686	2					
ANR	3516193	Identifier	name		3515686	0					
ANR	3516194	Argument	message		3515686	3					
ANR	3516195	Identifier	message		3515686	0					
ANR	3516196	ElseStatement	else		3515686	0					
ANR	3516197	IfStatement	if ( name && ! message )		3515686	0					
ANR	3516198	Condition	name && ! message	163:15:2667:2682	3515686	0	True				
ANR	3516199	AndExpression	name && ! message		3515686	0		&&			
ANR	3516200	Identifier	name		3515686	0					
ANR	3516201	UnaryOperationExpression	! message		3515686	1					
ANR	3516202	UnaryOperator	!		3515686	0					
ANR	3516203	Identifier	message		3515686	1					
ANR	3516204	CompoundStatement		161:33:2586:2586	3515686	1					
ANR	3516205	ExpressionStatement	"av_bprintf ( & bp , ""%s occurred"" , name )"	165:8:2696:2732	3515686	0	True				
ANR	3516206	CallExpression	"av_bprintf ( & bp , ""%s occurred"" , name )"		3515686	0					
ANR	3516207	Callee	av_bprintf		3515686	0					
ANR	3516208	Identifier	av_bprintf		3515686	0					
ANR	3516209	ArgumentList	& bp		3515686	1					
ANR	3516210	Argument	& bp		3515686	0					
ANR	3516211	UnaryOperationExpression	& bp		3515686	0					
ANR	3516212	UnaryOperator	&		3515686	0					
ANR	3516213	Identifier	bp		3515686	1					
ANR	3516214	Argument	"""%s occurred"""		3515686	1					
ANR	3516215	PrimaryExpression	"""%s occurred"""		3515686	0					
ANR	3516216	Argument	name		3515686	2					
ANR	3516217	Identifier	name		3515686	0					
ANR	3516218	ElseStatement	else		3515686	0					
ANR	3516219	IfStatement	if ( ! name && message )		3515686	0					
ANR	3516220	Condition	! name && message	167:15:2750:2765	3515686	0	True				
ANR	3516221	AndExpression	! name && message		3515686	0		&&			
ANR	3516222	UnaryOperationExpression	! name		3515686	0					
ANR	3516223	UnaryOperator	!		3515686	0					
ANR	3516224	Identifier	name		3515686	1					
ANR	3516225	Identifier	message		3515686	1					
ANR	3516226	CompoundStatement		165:33:2669:2669	3515686	1					
ANR	3516227	ExpressionStatement	"av_bprintf ( & bp , ""Exception: %s"" , message )"	169:8:2779:2820	3515686	0	True				
ANR	3516228	CallExpression	"av_bprintf ( & bp , ""Exception: %s"" , message )"		3515686	0					
ANR	3516229	Callee	av_bprintf		3515686	0					
ANR	3516230	Identifier	av_bprintf		3515686	0					
ANR	3516231	ArgumentList	& bp		3515686	1					
ANR	3516232	Argument	& bp		3515686	0					
ANR	3516233	UnaryOperationExpression	& bp		3515686	0					
ANR	3516234	UnaryOperator	&		3515686	0					
ANR	3516235	Identifier	bp		3515686	1					
ANR	3516236	Argument	"""Exception: %s"""		3515686	1					
ANR	3516237	PrimaryExpression	"""Exception: %s"""		3515686	0					
ANR	3516238	Argument	message		3515686	2					
ANR	3516239	Identifier	message		3515686	0					
ANR	3516240	ElseStatement	else		3515686	0					
ANR	3516241	CompoundStatement		169:11:2735:2735	3515686	0					
ANR	3516242	ExpressionStatement	"av_log ( log_ctx , AV_LOG_WARNING , ""Could not retreive exception name and message\\n"" )"	173:8:2845:2927	3515686	0	True				
ANR	3516243	CallExpression	"av_log ( log_ctx , AV_LOG_WARNING , ""Could not retreive exception name and message\\n"" )"		3515686	0					
ANR	3516244	Callee	av_log		3515686	0					
ANR	3516245	Identifier	av_log		3515686	0					
ANR	3516246	ArgumentList	log_ctx		3515686	1					
ANR	3516247	Argument	log_ctx		3515686	0					
ANR	3516248	Identifier	log_ctx		3515686	0					
ANR	3516249	Argument	AV_LOG_WARNING		3515686	1					
ANR	3516250	Identifier	AV_LOG_WARNING		3515686	0					
ANR	3516251	Argument	"""Could not retreive exception name and message\\n"""		3515686	2					
ANR	3516252	PrimaryExpression	"""Could not retreive exception name and message\\n"""		3515686	0					
ANR	3516253	ExpressionStatement	"av_bprintf ( & bp , ""Exception occurred"" )"	175:8:2938:2975	3515686	1	True				
ANR	3516254	CallExpression	"av_bprintf ( & bp , ""Exception occurred"" )"		3515686	0					
ANR	3516255	Callee	av_bprintf		3515686	0					
ANR	3516256	Identifier	av_bprintf		3515686	0					
ANR	3516257	ArgumentList	& bp		3515686	1					
ANR	3516258	Argument	& bp		3515686	0					
ANR	3516259	UnaryOperationExpression	& bp		3515686	0					
ANR	3516260	UnaryOperator	&		3515686	0					
ANR	3516261	Identifier	bp		3515686	1					
ANR	3516262	Argument	"""Exception occurred"""		3515686	1					
ANR	3516263	PrimaryExpression	"""Exception occurred"""		3515686	0					
ANR	3516264	ExpressionStatement	"ret = av_bprint_finalize ( & bp , error )"	181:4:2991:3027	3515686	25	True				
ANR	3516265	AssignmentExpression	"ret = av_bprint_finalize ( & bp , error )"		3515686	0		=			
ANR	3516266	Identifier	ret		3515686	0					
ANR	3516267	CallExpression	"av_bprint_finalize ( & bp , error )"		3515686	1					
ANR	3516268	Callee	av_bprint_finalize		3515686	0					
ANR	3516269	Identifier	av_bprint_finalize		3515686	0					
ANR	3516270	ArgumentList	& bp		3515686	1					
ANR	3516271	Argument	& bp		3515686	0					
ANR	3516272	UnaryOperationExpression	& bp		3515686	0					
ANR	3516273	UnaryOperator	&		3515686	0					
ANR	3516274	Identifier	bp		3515686	1					
ANR	3516275	Argument	error		3515686	1					
ANR	3516276	Identifier	error		3515686	0					
ANR	3516277	Label	done :	183:0:3030:3034	3515686	26	True				
ANR	3516278	Identifier	done		3515686	0					
ANR	3516279	ExpressionStatement	av_free ( name )	187:4:3043:3056	3515686	27	True				
ANR	3516280	CallExpression	av_free ( name )		3515686	0					
ANR	3516281	Callee	av_free		3515686	0					
ANR	3516282	Identifier	av_free		3515686	0					
ANR	3516283	ArgumentList	name		3515686	1					
ANR	3516284	Argument	name		3515686	0					
ANR	3516285	Identifier	name		3515686	0					
ANR	3516286	ExpressionStatement	av_free ( message )	189:4:3063:3079	3515686	28	True				
ANR	3516287	CallExpression	av_free ( message )		3515686	0					
ANR	3516288	Callee	av_free		3515686	0					
ANR	3516289	Identifier	av_free		3515686	0					
ANR	3516290	ArgumentList	message		3515686	1					
ANR	3516291	Argument	message		3515686	0					
ANR	3516292	Identifier	message		3515686	0					
ANR	3516293	IfStatement	if ( class_class )		3515686	29					
ANR	3516294	Condition	class_class	193:8:3092:3102	3515686	0	True				
ANR	3516295	Identifier	class_class		3515686	0					
ANR	3516296	CompoundStatement		191:21:3006:3006	3515686	1					
ANR	3516297	ExpressionStatement	"( * env ) -> DeleteLocalRef ( env , class_class )"	195:8:3116:3156	3515686	0	True				
ANR	3516298	CallExpression	"( * env ) -> DeleteLocalRef ( env , class_class )"		3515686	0					
ANR	3516299	Callee	( * env ) -> DeleteLocalRef		3515686	0					
ANR	3516300	PtrMemberAccess	( * env ) -> DeleteLocalRef		3515686	0					
ANR	3516301	UnaryOperationExpression	* env		3515686	0					
ANR	3516302	UnaryOperator	*		3515686	0					
ANR	3516303	Identifier	env		3515686	1					
ANR	3516304	Identifier	DeleteLocalRef		3515686	1					
ANR	3516305	ArgumentList	env		3515686	1					
ANR	3516306	Argument	env		3515686	0					
ANR	3516307	Identifier	env		3515686	0					
ANR	3516308	Argument	class_class		3515686	1					
ANR	3516309	Identifier	class_class		3515686	0					
ANR	3516310	IfStatement	if ( exception_class )		3515686	30					
ANR	3516311	Condition	exception_class	201:8:3176:3190	3515686	0	True				
ANR	3516312	Identifier	exception_class		3515686	0					
ANR	3516313	CompoundStatement		199:25:3094:3094	3515686	1					
ANR	3516314	ExpressionStatement	"( * env ) -> DeleteLocalRef ( env , exception_class )"	203:8:3204:3248	3515686	0	True				
ANR	3516315	CallExpression	"( * env ) -> DeleteLocalRef ( env , exception_class )"		3515686	0					
ANR	3516316	Callee	( * env ) -> DeleteLocalRef		3515686	0					
ANR	3516317	PtrMemberAccess	( * env ) -> DeleteLocalRef		3515686	0					
ANR	3516318	UnaryOperationExpression	* env		3515686	0					
ANR	3516319	UnaryOperator	*		3515686	0					
ANR	3516320	Identifier	env		3515686	1					
ANR	3516321	Identifier	DeleteLocalRef		3515686	1					
ANR	3516322	ArgumentList	env		3515686	1					
ANR	3516323	Argument	env		3515686	0					
ANR	3516324	Identifier	env		3515686	0					
ANR	3516325	Argument	exception_class		3515686	1					
ANR	3516326	Identifier	exception_class		3515686	0					
ANR	3516327	IfStatement	if ( string )		3515686	31					
ANR	3516328	Condition	string	209:8:3268:3273	3515686	0	True				
ANR	3516329	Identifier	string		3515686	0					
ANR	3516330	CompoundStatement		207:16:3177:3177	3515686	1					
ANR	3516331	ExpressionStatement	"( * env ) -> DeleteLocalRef ( env , string )"	211:8:3287:3322	3515686	0	True				
ANR	3516332	CallExpression	"( * env ) -> DeleteLocalRef ( env , string )"		3515686	0					
ANR	3516333	Callee	( * env ) -> DeleteLocalRef		3515686	0					
ANR	3516334	PtrMemberAccess	( * env ) -> DeleteLocalRef		3515686	0					
ANR	3516335	UnaryOperationExpression	* env		3515686	0					
ANR	3516336	UnaryOperator	*		3515686	0					
ANR	3516337	Identifier	env		3515686	1					
ANR	3516338	Identifier	DeleteLocalRef		3515686	1					
ANR	3516339	ArgumentList	env		3515686	1					
ANR	3516340	Argument	env		3515686	0					
ANR	3516341	Identifier	env		3515686	0					
ANR	3516342	Argument	string		3515686	1					
ANR	3516343	Identifier	string		3515686	0					
ANR	3516344	ReturnStatement	return ret ;	217:4:3338:3348	3515686	32	True				
ANR	3516345	Identifier	ret		3515686	0					
ANR	3516346	ReturnType	int		3515686	1					
ANR	3516347	Identifier	ff_jni_exception_get_summary		3515686	2					
ANR	3516348	ParameterList	"JNIEnv * env , jthrowable exception , char * * error , void * log_ctx"		3515686	3					
ANR	3516349	Parameter	JNIEnv * env	1:33:33:43	3515686	0	True				
ANR	3516350	ParameterType	JNIEnv *		3515686	0					
ANR	3516351	Identifier	env		3515686	1					
ANR	3516352	Parameter	jthrowable exception	1:46:46:65	3515686	1	True				
ANR	3516353	ParameterType	jthrowable		3515686	0					
ANR	3516354	Identifier	exception		3515686	1					
ANR	3516355	Parameter	char * * error	1:68:68:79	3515686	2	True				
ANR	3516356	ParameterType	char * *		3515686	0					
ANR	3516357	Identifier	error		3515686	1					
ANR	3516358	Parameter	void * log_ctx	1:82:82:94	3515686	3	True				
ANR	3516359	ParameterType	void *		3515686	0					
ANR	3516360	Identifier	log_ctx		3515686	1					
ANR	3516361	CFGEntryNode	ENTRY		3515686		True				
ANR	3516362	CFGExitNode	EXIT		3515686		True				
ANR	3516363	Symbol	exception		3515686						
ANR	3516364	Symbol	class_class		3515686						
ANR	3516365	Symbol	* * env		3515686						
ANR	3516366	Symbol	string		3515686						
ANR	3516367	Symbol	exception_class		3515686						
ANR	3516368	Symbol	error		3515686						
ANR	3516369	Symbol	bp		3515686						
ANR	3516370	Symbol	log_ctx		3515686						
ANR	3516371	Symbol	av_bprint_finalize		3515686						
ANR	3516372	Symbol	( * env ) -> GetObjectClass		3515686						
ANR	3516373	Symbol	get_name_id		3515686						
ANR	3516374	Symbol	AV_BPRINT_SIZE_AUTOMATIC		3515686						
ANR	3516375	Symbol	get_message_id		3515686						
ANR	3516376	Symbol	& bp		3515686						
ANR	3516377	Symbol	ret		3515686						
ANR	3516378	Symbol	( * env ) -> GetMethodID		3515686						
ANR	3516379	Symbol	NULL		3515686						
ANR	3516380	Symbol	AV_LOG_ERROR		3515686						
ANR	3516381	Symbol	ff_jni_jstring_to_utf_chars		3515686						
ANR	3516382	Symbol	* env		3515686						
ANR	3516383	Symbol	env		3515686						
ANR	3516384	Symbol	message		3515686						
ANR	3516385	Symbol	( * env ) -> ExceptionCheck		3515686						
ANR	3516386	Symbol	AVERROR_EXTERNAL		3515686						
ANR	3516387	Symbol	( * env ) -> CallObjectMethod		3515686						
ANR	3516388	Symbol	name		3515686						
ANR	3516389	Symbol	AV_LOG_WARNING		3515686						
