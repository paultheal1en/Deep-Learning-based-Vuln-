command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1282503	File	/home/p4ultr4n/workplace/ReVeal/raw_code/check_stream_specifier_0.c								
ANR	1282504	Function	check_stream_specifier	1:0:0:2278							
ANR	1282505	FunctionDef	"check_stream_specifier (AVFormatContext * s , AVStream * st , const char * spec)"		1282504	0					
ANR	1282506	CompoundStatement		3:0:80:2278	1282504	0					
ANR	1282507	IfStatement	if ( * spec <= '9' && * spec >= '0' )		1282504	0					
ANR	1282508	Condition	* spec <= '9' && * spec >= '0'	5:8:91:118	1282504	0	True				
ANR	1282509	AndExpression	* spec <= '9' && * spec >= '0'		1282504	0		&&			
ANR	1282510	RelationalExpression	* spec <= '9'		1282504	0		<=			
ANR	1282511	UnaryOperationExpression	* spec		1282504	0					
ANR	1282512	UnaryOperator	*		1282504	0					
ANR	1282513	Identifier	spec		1282504	1					
ANR	1282514	PrimaryExpression	'9'		1282504	1					
ANR	1282515	RelationalExpression	* spec >= '0'		1282504	1		>=			
ANR	1282516	UnaryOperationExpression	* spec		1282504	0					
ANR	1282517	UnaryOperator	*		1282504	0					
ANR	1282518	Identifier	spec		1282504	1					
ANR	1282519	PrimaryExpression	'0'		1282504	1					
ANR	1282520	ReturnStatement	"return strtol ( spec , NULL , 0 ) == st -> index ;"	7:8:146:187	1282504	1	True				
ANR	1282521	EqualityExpression	"strtol ( spec , NULL , 0 ) == st -> index"		1282504	0		==			
ANR	1282522	CallExpression	"strtol ( spec , NULL , 0 )"		1282504	0					
ANR	1282523	Callee	strtol		1282504	0					
ANR	1282524	Identifier	strtol		1282504	0					
ANR	1282525	ArgumentList	spec		1282504	1					
ANR	1282526	Argument	spec		1282504	0					
ANR	1282527	Identifier	spec		1282504	0					
ANR	1282528	Argument	NULL		1282504	1					
ANR	1282529	Identifier	NULL		1282504	0					
ANR	1282530	Argument	0		1282504	2					
ANR	1282531	PrimaryExpression	0		1282504	0					
ANR	1282532	PtrMemberAccess	st -> index		1282504	1					
ANR	1282533	Identifier	st		1282504	0					
ANR	1282534	Identifier	index		1282504	1					
ANR	1282535	ElseStatement	else		1282504	0					
ANR	1282536	IfStatement	if ( * spec == 'v' || * spec == 'a' || * spec == 's' || * spec == 'd' || * spec == 't' )		1282504	0					
ANR	1282537	Condition	* spec == 'v' || * spec == 'a' || * spec == 's' || * spec == 'd' || * spec == 't'	9:13:203:292	1282504	0	True				
ANR	1282538	OrExpression	* spec == 'v' || * spec == 'a' || * spec == 's' || * spec == 'd' || * spec == 't'		1282504	0		||			
ANR	1282539	EqualityExpression	* spec == 'v'		1282504	0		==			
ANR	1282540	UnaryOperationExpression	* spec		1282504	0					
ANR	1282541	UnaryOperator	*		1282504	0					
ANR	1282542	Identifier	spec		1282504	1					
ANR	1282543	PrimaryExpression	'v'		1282504	1					
ANR	1282544	OrExpression	* spec == 'a' || * spec == 's' || * spec == 'd' || * spec == 't'		1282504	1		||			
ANR	1282545	EqualityExpression	* spec == 'a'		1282504	0		==			
ANR	1282546	UnaryOperationExpression	* spec		1282504	0					
ANR	1282547	UnaryOperator	*		1282504	0					
ANR	1282548	Identifier	spec		1282504	1					
ANR	1282549	PrimaryExpression	'a'		1282504	1					
ANR	1282550	OrExpression	* spec == 's' || * spec == 'd' || * spec == 't'		1282504	1		||			
ANR	1282551	EqualityExpression	* spec == 's'		1282504	0		==			
ANR	1282552	UnaryOperationExpression	* spec		1282504	0					
ANR	1282553	UnaryOperator	*		1282504	0					
ANR	1282554	Identifier	spec		1282504	1					
ANR	1282555	PrimaryExpression	's'		1282504	1					
ANR	1282556	OrExpression	* spec == 'd' || * spec == 't'		1282504	1		||			
ANR	1282557	EqualityExpression	* spec == 'd'		1282504	0		==			
ANR	1282558	UnaryOperationExpression	* spec		1282504	0					
ANR	1282559	UnaryOperator	*		1282504	0					
ANR	1282560	Identifier	spec		1282504	1					
ANR	1282561	PrimaryExpression	'd'		1282504	1					
ANR	1282562	EqualityExpression	* spec == 't'		1282504	1		==			
ANR	1282563	UnaryOperationExpression	* spec		1282504	0					
ANR	1282564	UnaryOperator	*		1282504	0					
ANR	1282565	Identifier	spec		1282504	1					
ANR	1282566	PrimaryExpression	't'		1282504	1					
ANR	1282567	CompoundStatement		11:8:243:264	1282504	1					
ANR	1282568	IdentifierDeclStatement	enum AVMediaType type ;	13:8:324:345	1282504	0	True				
ANR	1282569	IdentifierDecl	type		1282504	0					
ANR	1282570	IdentifierDeclType	enum AVMediaType		1282504	0					
ANR	1282571	Identifier	type		1282504	1					
ANR	1282572	SwitchStatement	switch ( * spec ++ )		1282504	1					
ANR	1282573	Condition	* spec ++	17:16:366:372	1282504	0	True				
ANR	1282574	UnaryOperationExpression	* spec ++		1282504	0					
ANR	1282575	UnaryOperator	*		1282504	0					
ANR	1282576	PostIncDecOperationExpression	spec ++		1282504	1					
ANR	1282577	Identifier	spec		1282504	0					
ANR	1282578	IncDec	++		1282504	1					
ANR	1282579	CompoundStatement		15:25:294:294	1282504	1					
ANR	1282580	Label	case 'v' :	19:8:386:394	1282504	0	True				
ANR	1282581	ExpressionStatement	type = AVMEDIA_TYPE_VIDEO	19:18:396:421	1282504	1	True				
ANR	1282582	AssignmentExpression	type = AVMEDIA_TYPE_VIDEO		1282504	0		=			
ANR	1282583	Identifier	type		1282504	0					
ANR	1282584	Identifier	AVMEDIA_TYPE_VIDEO		1282504	1					
ANR	1282585	BreakStatement	break ;	19:50:428:433	1282504	2	True				
ANR	1282586	Label	case 'a' :	21:8:444:452	1282504	3	True				
ANR	1282587	ExpressionStatement	type = AVMEDIA_TYPE_AUDIO	21:18:454:479	1282504	4	True				
ANR	1282588	AssignmentExpression	type = AVMEDIA_TYPE_AUDIO		1282504	0		=			
ANR	1282589	Identifier	type		1282504	0					
ANR	1282590	Identifier	AVMEDIA_TYPE_AUDIO		1282504	1					
ANR	1282591	BreakStatement	break ;	21:50:486:491	1282504	5	True				
ANR	1282592	Label	case 's' :	23:8:502:510	1282504	6	True				
ANR	1282593	ExpressionStatement	type = AVMEDIA_TYPE_SUBTITLE	23:18:512:540	1282504	7	True				
ANR	1282594	AssignmentExpression	type = AVMEDIA_TYPE_SUBTITLE		1282504	0		=			
ANR	1282595	Identifier	type		1282504	0					
ANR	1282596	Identifier	AVMEDIA_TYPE_SUBTITLE		1282504	1					
ANR	1282597	BreakStatement	break ;	23:50:544:549	1282504	8	True				
ANR	1282598	Label	case 'd' :	25:8:560:568	1282504	9	True				
ANR	1282599	ExpressionStatement	type = AVMEDIA_TYPE_DATA	25:18:570:594	1282504	10	True				
ANR	1282600	AssignmentExpression	type = AVMEDIA_TYPE_DATA		1282504	0		=			
ANR	1282601	Identifier	type		1282504	0					
ANR	1282602	Identifier	AVMEDIA_TYPE_DATA		1282504	1					
ANR	1282603	BreakStatement	break ;	25:50:602:607	1282504	11	True				
ANR	1282604	Label	case 't' :	27:8:618:626	1282504	12	True				
ANR	1282605	ExpressionStatement	type = AVMEDIA_TYPE_ATTACHMENT	27:18:628:658	1282504	13	True				
ANR	1282606	AssignmentExpression	type = AVMEDIA_TYPE_ATTACHMENT		1282504	0		=			
ANR	1282607	Identifier	type		1282504	0					
ANR	1282608	Identifier	AVMEDIA_TYPE_ATTACHMENT		1282504	1					
ANR	1282609	BreakStatement	break ;	27:50:660:665	1282504	14	True				
ANR	1282610	Label	default :	29:8:676:683	1282504	15	True				
ANR	1282611	Identifier	default		1282504	0					
ANR	1282612	ExpressionStatement	av_assert0 ( 0 )	29:18:686:699	1282504	16	True				
ANR	1282613	CallExpression	av_assert0 ( 0 )		1282504	0					
ANR	1282614	Callee	av_assert0		1282504	0					
ANR	1282615	Identifier	av_assert0		1282504	0					
ANR	1282616	ArgumentList	0		1282504	1					
ANR	1282617	Argument	0		1282504	0					
ANR	1282618	PrimaryExpression	0		1282504	0					
ANR	1282619	IfStatement	if ( type != st -> codec -> codec_type )		1282504	2					
ANR	1282620	Condition	type != st -> codec -> codec_type	33:12:725:753	1282504	0	True				
ANR	1282621	EqualityExpression	type != st -> codec -> codec_type		1282504	0		!=			
ANR	1282622	Identifier	type		1282504	0					
ANR	1282623	PtrMemberAccess	st -> codec -> codec_type		1282504	1					
ANR	1282624	PtrMemberAccess	st -> codec		1282504	0					
ANR	1282625	Identifier	st		1282504	0					
ANR	1282626	Identifier	codec		1282504	1					
ANR	1282627	Identifier	codec_type		1282504	1					
ANR	1282628	ReturnStatement	return 0 ;	35:12:769:777	1282504	1	True				
ANR	1282629	PrimaryExpression	0		1282504	0					
ANR	1282630	IfStatement	if ( * spec ++ == ':' )		1282504	3					
ANR	1282631	Condition	* spec ++ == ':'	37:12:792:805	1282504	0	True				
ANR	1282632	EqualityExpression	* spec ++ == ':'		1282504	0		==			
ANR	1282633	UnaryOperationExpression	* spec ++		1282504	0					
ANR	1282634	UnaryOperator	*		1282504	0					
ANR	1282635	PostIncDecOperationExpression	spec ++		1282504	1					
ANR	1282636	Identifier	spec		1282504	0					
ANR	1282637	IncDec	++		1282504	1					
ANR	1282638	PrimaryExpression	':'		1282504	1					
ANR	1282639	CompoundStatement		37:12:776:812	1282504	1					
ANR	1282640	IdentifierDeclStatement	"int i , index = strtol ( spec , NULL , 0 ) ;"	39:12:857:893	1282504	0	True				
ANR	1282641	IdentifierDecl	i		1282504	0					
ANR	1282642	IdentifierDeclType	int		1282504	0					
ANR	1282643	Identifier	i		1282504	1					
ANR	1282644	IdentifierDecl	"index = strtol ( spec , NULL , 0 )"		1282504	1					
ANR	1282645	IdentifierDeclType	int		1282504	0					
ANR	1282646	Identifier	index		1282504	1					
ANR	1282647	AssignmentExpression	"index = strtol ( spec , NULL , 0 )"		1282504	2		=			
ANR	1282648	Identifier	index		1282504	0					
ANR	1282649	CallExpression	"strtol ( spec , NULL , 0 )"		1282504	1					
ANR	1282650	Callee	strtol		1282504	0					
ANR	1282651	Identifier	strtol		1282504	0					
ANR	1282652	ArgumentList	spec		1282504	1					
ANR	1282653	Argument	spec		1282504	0					
ANR	1282654	Identifier	spec		1282504	0					
ANR	1282655	Argument	NULL		1282504	1					
ANR	1282656	Identifier	NULL		1282504	0					
ANR	1282657	Argument	0		1282504	2					
ANR	1282658	PrimaryExpression	0		1282504	0					
ANR	1282659	ForStatement	for ( i = 0 ; i < s -> nb_streams ; i ++ )		1282504	1					
ANR	1282660	ForInit	i = 0 ;	41:17:913:918	1282504	0	True				
ANR	1282661	AssignmentExpression	i = 0		1282504	0		=			
ANR	1282662	Identifier	i		1282504	0					
ANR	1282663	PrimaryExpression	0		1282504	1					
ANR	1282664	Condition	i < s -> nb_streams	41:24:920:936	1282504	1	True				
ANR	1282665	RelationalExpression	i < s -> nb_streams		1282504	0		<			
ANR	1282666	Identifier	i		1282504	0					
ANR	1282667	PtrMemberAccess	s -> nb_streams		1282504	1					
ANR	1282668	Identifier	s		1282504	0					
ANR	1282669	Identifier	nb_streams		1282504	1					
ANR	1282670	PostIncDecOperationExpression	i ++	41:43:939:941	1282504	2	True				
ANR	1282671	Identifier	i		1282504	0					
ANR	1282672	IncDec	++		1282504	1					
ANR	1282673	IfStatement	if ( s -> streams [ i ] -> codec -> codec_type == type && index -- == 0 )		1282504	3					
ANR	1282674	Condition	s -> streams [ i ] -> codec -> codec_type == type && index -- == 0	43:20:965:1020	1282504	0	True				
ANR	1282675	AndExpression	s -> streams [ i ] -> codec -> codec_type == type && index -- == 0		1282504	0		&&			
ANR	1282676	EqualityExpression	s -> streams [ i ] -> codec -> codec_type == type		1282504	0		==			
ANR	1282677	PtrMemberAccess	s -> streams [ i ] -> codec -> codec_type		1282504	0					
ANR	1282678	PtrMemberAccess	s -> streams [ i ] -> codec		1282504	0					
ANR	1282679	ArrayIndexing	s -> streams [ i ]		1282504	0					
ANR	1282680	PtrMemberAccess	s -> streams		1282504	0					
ANR	1282681	Identifier	s		1282504	0					
ANR	1282682	Identifier	streams		1282504	1					
ANR	1282683	Identifier	i		1282504	1					
ANR	1282684	Identifier	codec		1282504	1					
ANR	1282685	Identifier	codec_type		1282504	1					
ANR	1282686	Identifier	type		1282504	1					
ANR	1282687	EqualityExpression	index -- == 0		1282504	1		==			
ANR	1282688	PostIncDecOperationExpression	index --		1282504	0					
ANR	1282689	Identifier	index		1282504	0					
ANR	1282690	IncDec	--		1282504	1					
ANR	1282691	PrimaryExpression	0		1282504	1					
ANR	1282692	ReturnStatement	return i == st -> index ;	45:19:1043:1064	1282504	1	True				
ANR	1282693	EqualityExpression	i == st -> index		1282504	0		==			
ANR	1282694	Identifier	i		1282504	0					
ANR	1282695	PtrMemberAccess	st -> index		1282504	1					
ANR	1282696	Identifier	st		1282504	0					
ANR	1282697	Identifier	index		1282504	1					
ANR	1282698	ReturnStatement	return 0 ;	47:12:1079:1087	1282504	2	True				
ANR	1282699	PrimaryExpression	0		1282504	0					
ANR	1282700	ReturnStatement	return 1 ;	51:8:1109:1117	1282504	4	True				
ANR	1282701	PrimaryExpression	1		1282504	0					
ANR	1282702	ElseStatement	else		1282504	0					
ANR	1282703	IfStatement	if ( * spec == 'p' && * ( spec + 1 ) == ':' )		1282504	0					
ANR	1282704	Condition	* spec == 'p' && * ( spec + 1 ) == ':'	53:15:1135:1168	1282504	0	True				
ANR	1282705	AndExpression	* spec == 'p' && * ( spec + 1 ) == ':'		1282504	0		&&			
ANR	1282706	EqualityExpression	* spec == 'p'		1282504	0		==			
ANR	1282707	UnaryOperationExpression	* spec		1282504	0					
ANR	1282708	UnaryOperator	*		1282504	0					
ANR	1282709	Identifier	spec		1282504	1					
ANR	1282710	PrimaryExpression	'p'		1282504	1					
ANR	1282711	EqualityExpression	* ( spec + 1 ) == ':'		1282504	1		==			
ANR	1282712	UnaryOperationExpression	* ( spec + 1 )		1282504	0					
ANR	1282713	UnaryOperator	*		1282504	0					
ANR	1282714	AdditiveExpression	spec + 1		1282504	1		+			
ANR	1282715	Identifier	spec		1282504	0					
ANR	1282716	PrimaryExpression	1		1282504	1					
ANR	1282717	PrimaryExpression	':'		1282504	1					
ANR	1282718	CompoundStatement		55:8:1129:1141	1282504	1					
ANR	1282719	IdentifierDeclStatement	"int prog_id , i , j ;"	55:8:1182:1199	1282504	0	True				
ANR	1282720	IdentifierDecl	prog_id		1282504	0					
ANR	1282721	IdentifierDeclType	int		1282504	0					
ANR	1282722	Identifier	prog_id		1282504	1					
ANR	1282723	IdentifierDecl	i		1282504	1					
ANR	1282724	IdentifierDeclType	int		1282504	0					
ANR	1282725	Identifier	i		1282504	1					
ANR	1282726	IdentifierDecl	j		1282504	2					
ANR	1282727	IdentifierDeclType	int		1282504	0					
ANR	1282728	Identifier	j		1282504	1					
ANR	1282729	IdentifierDeclStatement	char * endptr ;	57:8:1210:1222	1282504	1	True				
ANR	1282730	IdentifierDecl	* endptr		1282504	0					
ANR	1282731	IdentifierDeclType	char *		1282504	0					
ANR	1282732	Identifier	endptr		1282504	1					
ANR	1282733	ExpressionStatement	spec += 2	59:8:1233:1242	1282504	2	True				
ANR	1282734	AssignmentExpression	spec += 2		1282504	0		+=			
ANR	1282735	Identifier	spec		1282504	0					
ANR	1282736	PrimaryExpression	2		1282504	1					
ANR	1282737	ExpressionStatement	"prog_id = strtol ( spec , & endptr , 0 )"	61:8:1253:1287	1282504	3	True				
ANR	1282738	AssignmentExpression	"prog_id = strtol ( spec , & endptr , 0 )"		1282504	0		=			
ANR	1282739	Identifier	prog_id		1282504	0					
ANR	1282740	CallExpression	"strtol ( spec , & endptr , 0 )"		1282504	1					
ANR	1282741	Callee	strtol		1282504	0					
ANR	1282742	Identifier	strtol		1282504	0					
ANR	1282743	ArgumentList	spec		1282504	1					
ANR	1282744	Argument	spec		1282504	0					
ANR	1282745	Identifier	spec		1282504	0					
ANR	1282746	Argument	& endptr		1282504	1					
ANR	1282747	UnaryOperationExpression	& endptr		1282504	0					
ANR	1282748	UnaryOperator	&		1282504	0					
ANR	1282749	Identifier	endptr		1282504	1					
ANR	1282750	Argument	0		1282504	2					
ANR	1282751	PrimaryExpression	0		1282504	0					
ANR	1282752	ForStatement	for ( i = 0 ; i < s -> nb_programs ; i ++ )		1282504	4					
ANR	1282753	ForInit	i = 0 ;	63:13:1303:1308	1282504	0	True				
ANR	1282754	AssignmentExpression	i = 0		1282504	0		=			
ANR	1282755	Identifier	i		1282504	0					
ANR	1282756	PrimaryExpression	0		1282504	1					
ANR	1282757	Condition	i < s -> nb_programs	63:20:1310:1327	1282504	1	True				
ANR	1282758	RelationalExpression	i < s -> nb_programs		1282504	0		<			
ANR	1282759	Identifier	i		1282504	0					
ANR	1282760	PtrMemberAccess	s -> nb_programs		1282504	1					
ANR	1282761	Identifier	s		1282504	0					
ANR	1282762	Identifier	nb_programs		1282504	1					
ANR	1282763	PostIncDecOperationExpression	i ++	63:40:1330:1332	1282504	2	True				
ANR	1282764	Identifier	i		1282504	0					
ANR	1282765	IncDec	++		1282504	1					
ANR	1282766	CompoundStatement		61:45:1254:1254	1282504	3					
ANR	1282767	IfStatement	if ( s -> programs [ i ] -> id != prog_id )		1282504	0					
ANR	1282768	Condition	s -> programs [ i ] -> id != prog_id	65:16:1354:1382	1282504	0	True				
ANR	1282769	EqualityExpression	s -> programs [ i ] -> id != prog_id		1282504	0		!=			
ANR	1282770	PtrMemberAccess	s -> programs [ i ] -> id		1282504	0					
ANR	1282771	ArrayIndexing	s -> programs [ i ]		1282504	0					
ANR	1282772	PtrMemberAccess	s -> programs		1282504	0					
ANR	1282773	Identifier	s		1282504	0					
ANR	1282774	Identifier	programs		1282504	1					
ANR	1282775	Identifier	i		1282504	1					
ANR	1282776	Identifier	id		1282504	1					
ANR	1282777	Identifier	prog_id		1282504	1					
ANR	1282778	ContinueStatement	continue ;	67:16:1402:1410	1282504	1	True				
ANR	1282779	IfStatement	if ( * endptr ++ == ':' )		1282504	1					
ANR	1282780	Condition	* endptr ++ == ':'	71:16:1431:1446	1282504	0	True				
ANR	1282781	EqualityExpression	* endptr ++ == ':'		1282504	0		==			
ANR	1282782	UnaryOperationExpression	* endptr ++		1282504	0					
ANR	1282783	UnaryOperator	*		1282504	0					
ANR	1282784	PostIncDecOperationExpression	endptr ++		1282504	1					
ANR	1282785	Identifier	endptr		1282504	0					
ANR	1282786	IncDec	++		1282504	1					
ANR	1282787	PrimaryExpression	':'		1282504	1					
ANR	1282788	CompoundStatement		71:16:1387:1427	1282504	1					
ANR	1282789	IdentifierDeclStatement	"int stream_idx = strtol ( endptr , NULL , 0 ) ;"	73:16:1468:1508	1282504	0	True				
ANR	1282790	IdentifierDecl	"stream_idx = strtol ( endptr , NULL , 0 )"		1282504	0					
ANR	1282791	IdentifierDeclType	int		1282504	0					
ANR	1282792	Identifier	stream_idx		1282504	1					
ANR	1282793	AssignmentExpression	"stream_idx = strtol ( endptr , NULL , 0 )"		1282504	2		=			
ANR	1282794	Identifier	stream_idx		1282504	0					
ANR	1282795	CallExpression	"strtol ( endptr , NULL , 0 )"		1282504	1					
ANR	1282796	Callee	strtol		1282504	0					
ANR	1282797	Identifier	strtol		1282504	0					
ANR	1282798	ArgumentList	endptr		1282504	1					
ANR	1282799	Argument	endptr		1282504	0					
ANR	1282800	Identifier	endptr		1282504	0					
ANR	1282801	Argument	NULL		1282504	1					
ANR	1282802	Identifier	NULL		1282504	0					
ANR	1282803	Argument	0		1282504	2					
ANR	1282804	PrimaryExpression	0		1282504	0					
ANR	1282805	ReturnStatement	return stream_idx >= 0 && stream_idx < s -> programs [ i ] -> nb_stream_indexes && st -> index == s -> programs [ i ] -> stream_index [ stream_idx ] ;	75:16:1527:1698	1282504	1	True				
ANR	1282806	AndExpression	stream_idx >= 0 && stream_idx < s -> programs [ i ] -> nb_stream_indexes && st -> index == s -> programs [ i ] -> stream_index [ stream_idx ]		1282504	0		&&			
ANR	1282807	RelationalExpression	stream_idx >= 0		1282504	0		>=			
ANR	1282808	Identifier	stream_idx		1282504	0					
ANR	1282809	PrimaryExpression	0		1282504	1					
ANR	1282810	AndExpression	stream_idx < s -> programs [ i ] -> nb_stream_indexes && st -> index == s -> programs [ i ] -> stream_index [ stream_idx ]		1282504	1		&&			
ANR	1282811	RelationalExpression	stream_idx < s -> programs [ i ] -> nb_stream_indexes		1282504	0		<			
ANR	1282812	Identifier	stream_idx		1282504	0					
ANR	1282813	PtrMemberAccess	s -> programs [ i ] -> nb_stream_indexes		1282504	1					
ANR	1282814	ArrayIndexing	s -> programs [ i ]		1282504	0					
ANR	1282815	PtrMemberAccess	s -> programs		1282504	0					
ANR	1282816	Identifier	s		1282504	0					
ANR	1282817	Identifier	programs		1282504	1					
ANR	1282818	Identifier	i		1282504	1					
ANR	1282819	Identifier	nb_stream_indexes		1282504	1					
ANR	1282820	EqualityExpression	st -> index == s -> programs [ i ] -> stream_index [ stream_idx ]		1282504	1		==			
ANR	1282821	PtrMemberAccess	st -> index		1282504	0					
ANR	1282822	Identifier	st		1282504	0					
ANR	1282823	Identifier	index		1282504	1					
ANR	1282824	ArrayIndexing	s -> programs [ i ] -> stream_index [ stream_idx ]		1282504	1					
ANR	1282825	PtrMemberAccess	s -> programs [ i ] -> stream_index		1282504	0					
ANR	1282826	ArrayIndexing	s -> programs [ i ]		1282504	0					
ANR	1282827	PtrMemberAccess	s -> programs		1282504	0					
ANR	1282828	Identifier	s		1282504	0					
ANR	1282829	Identifier	programs		1282504	1					
ANR	1282830	Identifier	i		1282504	1					
ANR	1282831	Identifier	stream_index		1282504	1					
ANR	1282832	Identifier	stream_idx		1282504	1					
ANR	1282833	ForStatement	for ( j = 0 ; j < s -> programs [ i ] -> nb_stream_indexes ; j ++ )		1282504	2					
ANR	1282834	ForInit	j = 0 ;	85:17:1735:1740	1282504	0	True				
ANR	1282835	AssignmentExpression	j = 0		1282504	0		=			
ANR	1282836	Identifier	j		1282504	0					
ANR	1282837	PrimaryExpression	0		1282504	1					
ANR	1282838	Condition	j < s -> programs [ i ] -> nb_stream_indexes	85:24:1742:1778	1282504	1	True				
ANR	1282839	RelationalExpression	j < s -> programs [ i ] -> nb_stream_indexes		1282504	0		<			
ANR	1282840	Identifier	j		1282504	0					
ANR	1282841	PtrMemberAccess	s -> programs [ i ] -> nb_stream_indexes		1282504	1					
ANR	1282842	ArrayIndexing	s -> programs [ i ]		1282504	0					
ANR	1282843	PtrMemberAccess	s -> programs		1282504	0					
ANR	1282844	Identifier	s		1282504	0					
ANR	1282845	Identifier	programs		1282504	1					
ANR	1282846	Identifier	i		1282504	1					
ANR	1282847	Identifier	nb_stream_indexes		1282504	1					
ANR	1282848	PostIncDecOperationExpression	j ++	85:63:1781:1783	1282504	2	True				
ANR	1282849	Identifier	j		1282504	0					
ANR	1282850	IncDec	++		1282504	1					
ANR	1282851	IfStatement	if ( st -> index == s -> programs [ i ] -> stream_index [ j ] )		1282504	3					
ANR	1282852	Condition	st -> index == s -> programs [ i ] -> stream_index [ j ]	87:20:1807:1850	1282504	0	True				
ANR	1282853	EqualityExpression	st -> index == s -> programs [ i ] -> stream_index [ j ]		1282504	0		==			
ANR	1282854	PtrMemberAccess	st -> index		1282504	0					
ANR	1282855	Identifier	st		1282504	0					
ANR	1282856	Identifier	index		1282504	1					
ANR	1282857	ArrayIndexing	s -> programs [ i ] -> stream_index [ j ]		1282504	1					
ANR	1282858	PtrMemberAccess	s -> programs [ i ] -> stream_index		1282504	0					
ANR	1282859	ArrayIndexing	s -> programs [ i ]		1282504	0					
ANR	1282860	PtrMemberAccess	s -> programs		1282504	0					
ANR	1282861	Identifier	s		1282504	0					
ANR	1282862	Identifier	programs		1282504	1					
ANR	1282863	Identifier	i		1282504	1					
ANR	1282864	Identifier	stream_index		1282504	1					
ANR	1282865	Identifier	j		1282504	1					
ANR	1282866	ReturnStatement	return 1 ;	89:20:1874:1882	1282504	1	True				
ANR	1282867	PrimaryExpression	1		1282504	0					
ANR	1282868	ReturnStatement	return 0 ;	93:8:1904:1912	1282504	5	True				
ANR	1282869	PrimaryExpression	0		1282504	0					
ANR	1282870	ElseStatement	else		1282504	0					
ANR	1282871	IfStatement	if ( * spec == '#' )		1282504	0					
ANR	1282872	Condition	* spec == '#'	95:15:1930:1941	1282504	0	True				
ANR	1282873	EqualityExpression	* spec == '#'		1282504	0		==			
ANR	1282874	UnaryOperationExpression	* spec		1282504	0					
ANR	1282875	UnaryOperator	*		1282504	0					
ANR	1282876	Identifier	spec		1282504	1					
ANR	1282877	PrimaryExpression	'#'		1282504	1					
ANR	1282878	CompoundStatement		97:8:1892:1904	1282504	1					
ANR	1282879	IdentifierDeclStatement	int sid ;	97:8:1955:1962	1282504	0	True				
ANR	1282880	IdentifierDecl	sid		1282504	0					
ANR	1282881	IdentifierDeclType	int		1282504	0					
ANR	1282882	Identifier	sid		1282504	1					
ANR	1282883	IdentifierDeclStatement	char * endptr ;	99:8:1973:1985	1282504	1	True				
ANR	1282884	IdentifierDecl	* endptr		1282504	0					
ANR	1282885	IdentifierDeclType	char *		1282504	0					
ANR	1282886	Identifier	endptr		1282504	1					
ANR	1282887	ExpressionStatement	"sid = strtol ( spec + 1 , & endptr , 0 )"	101:8:1996:2030	1282504	2	True				
ANR	1282888	AssignmentExpression	"sid = strtol ( spec + 1 , & endptr , 0 )"		1282504	0		=			
ANR	1282889	Identifier	sid		1282504	0					
ANR	1282890	CallExpression	"strtol ( spec + 1 , & endptr , 0 )"		1282504	1					
ANR	1282891	Callee	strtol		1282504	0					
ANR	1282892	Identifier	strtol		1282504	0					
ANR	1282893	ArgumentList	spec + 1		1282504	1					
ANR	1282894	Argument	spec + 1		1282504	0					
ANR	1282895	AdditiveExpression	spec + 1		1282504	0		+			
ANR	1282896	Identifier	spec		1282504	0					
ANR	1282897	PrimaryExpression	1		1282504	1					
ANR	1282898	Argument	& endptr		1282504	1					
ANR	1282899	UnaryOperationExpression	& endptr		1282504	0					
ANR	1282900	UnaryOperator	&		1282504	0					
ANR	1282901	Identifier	endptr		1282504	1					
ANR	1282902	Argument	0		1282504	2					
ANR	1282903	PrimaryExpression	0		1282504	0					
ANR	1282904	IfStatement	if ( ! * endptr )		1282504	3					
ANR	1282905	Condition	! * endptr	103:12:2045:2052	1282504	0	True				
ANR	1282906	UnaryOperationExpression	! * endptr		1282504	0					
ANR	1282907	UnaryOperator	!		1282504	0					
ANR	1282908	UnaryOperationExpression	* endptr		1282504	1					
ANR	1282909	UnaryOperator	*		1282504	0					
ANR	1282910	Identifier	endptr		1282504	1					
ANR	1282911	ReturnStatement	return st -> id == sid ;	105:12:2068:2088	1282504	1	True				
ANR	1282912	EqualityExpression	st -> id == sid		1282504	0		==			
ANR	1282913	PtrMemberAccess	st -> id		1282504	0					
ANR	1282914	Identifier	st		1282504	0					
ANR	1282915	Identifier	id		1282504	1					
ANR	1282916	Identifier	sid		1282504	1					
ANR	1282917	ElseStatement	else		1282504	0					
ANR	1282918	IfStatement	if ( ! * spec )		1282504	0					
ANR	1282919	Condition	! * spec	107:15:2106:2111	1282504	0	True				
ANR	1282920	UnaryOperationExpression	! * spec		1282504	0					
ANR	1282921	UnaryOperator	!		1282504	0					
ANR	1282922	UnaryOperationExpression	* spec		1282504	1					
ANR	1282923	UnaryOperator	*		1282504	0					
ANR	1282924	Identifier	spec		1282504	1					
ANR	1282925	ReturnStatement	return 1 ;	109:8:2165:2173	1282504	1	True				
ANR	1282926	PrimaryExpression	1		1282504	0					
ANR	1282927	ExpressionStatement	"av_log ( s , AV_LOG_ERROR , ""Invalid stream specifier: %s.\\n"" , spec )"	113:4:2182:2246	1282504	1	True				
ANR	1282928	CallExpression	"av_log ( s , AV_LOG_ERROR , ""Invalid stream specifier: %s.\\n"" , spec )"		1282504	0					
ANR	1282929	Callee	av_log		1282504	0					
ANR	1282930	Identifier	av_log		1282504	0					
ANR	1282931	ArgumentList	s		1282504	1					
ANR	1282932	Argument	s		1282504	0					
ANR	1282933	Identifier	s		1282504	0					
ANR	1282934	Argument	AV_LOG_ERROR		1282504	1					
ANR	1282935	Identifier	AV_LOG_ERROR		1282504	0					
ANR	1282936	Argument	"""Invalid stream specifier: %s.\\n"""		1282504	2					
ANR	1282937	PrimaryExpression	"""Invalid stream specifier: %s.\\n"""		1282504	0					
ANR	1282938	Argument	spec		1282504	3					
ANR	1282939	Identifier	spec		1282504	0					
ANR	1282940	ReturnStatement	return AVERROR ( EINVAL ) ;	115:4:2253:2275	1282504	2	True				
ANR	1282941	CallExpression	AVERROR ( EINVAL )		1282504	0					
ANR	1282942	Callee	AVERROR		1282504	0					
ANR	1282943	Identifier	AVERROR		1282504	0					
ANR	1282944	ArgumentList	EINVAL		1282504	1					
ANR	1282945	Argument	EINVAL		1282504	0					
ANR	1282946	Identifier	EINVAL		1282504	0					
ANR	1282947	ReturnType	int		1282504	1					
ANR	1282948	Identifier	check_stream_specifier		1282504	2					
ANR	1282949	ParameterList	"AVFormatContext * s , AVStream * st , const char * spec"		1282504	3					
ANR	1282950	Parameter	AVFormatContext * s	1:27:27:44	1282504	0	True				
ANR	1282951	ParameterType	AVFormatContext *		1282504	0					
ANR	1282952	Identifier	s		1282504	1					
ANR	1282953	Parameter	AVStream * st	1:47:47:58	1282504	1	True				
ANR	1282954	ParameterType	AVStream *		1282504	0					
ANR	1282955	Identifier	st		1282504	1					
ANR	1282956	Parameter	const char * spec	1:61:61:76	1282504	2	True				
ANR	1282957	ParameterType	const char *		1282504	0					
ANR	1282958	Identifier	spec		1282504	1					
ANR	1282959	CFGEntryNode	ENTRY		1282504		True				
ANR	1282960	CFGExitNode	EXIT		1282504		True				
ANR	1282961	Symbol	* st		1282504						
ANR	1282962	Symbol	AVMEDIA_TYPE_AUDIO		1282504						
ANR	1282963	Symbol	* * * * s		1282504						
ANR	1282964	Symbol	s -> nb_programs		1282504						
ANR	1282965	Symbol	AVMEDIA_TYPE_DATA		1282504						
ANR	1282966	Symbol	s -> streams		1282504						
ANR	1282967	Symbol	type		1282504						
ANR	1282968	Symbol	spec		1282504						
ANR	1282969	Symbol	AVMEDIA_TYPE_VIDEO		1282504						
ANR	1282970	Symbol	* st -> codec		1282504						
ANR	1282971	Symbol	* s -> streams		1282504						
ANR	1282972	Symbol	* * * s -> programs		1282504						
ANR	1282973	Symbol	* * i		1282504						
ANR	1282974	Symbol	NULL		1282504						
ANR	1282975	Symbol	* s -> streams [ i ] -> codec		1282504						
ANR	1282976	Symbol	* s -> programs [ i ] -> stream_index		1282504						
ANR	1282977	Symbol	endptr		1282504						
ANR	1282978	Symbol	s -> programs [ i ] -> nb_stream_indexes		1282504						
ANR	1282979	Symbol	* endptr		1282504						
ANR	1282980	Symbol	& endptr		1282504						
ANR	1282981	Symbol	* * s -> programs		1282504						
ANR	1282982	Symbol	index		1282504						
ANR	1282983	Symbol	* * * s		1282504						
ANR	1282984	Symbol	prog_id		1282504						
ANR	1282985	Symbol	s -> streams [ i ] -> codec -> codec_type		1282504						
ANR	1282986	Symbol	stream_idx		1282504						
ANR	1282987	Symbol	* * * i		1282504						
ANR	1282988	Symbol	* stream_idx		1282504						
ANR	1282989	Symbol	s -> programs		1282504						
ANR	1282990	Symbol	st -> id		1282504						
ANR	1282991	Symbol	* * s -> streams		1282504						
ANR	1282992	Symbol	* spec ++		1282504						
ANR	1282993	Symbol	AVMEDIA_TYPE_ATTACHMENT		1282504						
ANR	1282994	Symbol	* * st		1282504						
ANR	1282995	Symbol	sid		1282504						
ANR	1282996	Symbol	AVMEDIA_TYPE_SUBTITLE		1282504						
ANR	1282997	Symbol	* spec		1282504						
ANR	1282998	Symbol	strtol		1282504						
ANR	1282999	Symbol	s -> streams [ i ] -> codec		1282504						
ANR	1283000	Symbol	* * * s -> streams		1282504						
ANR	1283001	Symbol	* * s		1282504						
ANR	1283002	Symbol	s -> nb_streams		1282504						
ANR	1283003	Symbol	s -> programs [ i ] -> stream_index		1282504						
ANR	1283004	Symbol	st -> codec -> codec_type		1282504						
ANR	1283005	Symbol	s -> programs [ i ] -> id		1282504						
ANR	1283006	Symbol	st		1282504						
ANR	1283007	Symbol	AV_LOG_ERROR		1282504						
ANR	1283008	Symbol	i		1282504						
ANR	1283009	Symbol	j		1282504						
ANR	1283010	Symbol	st -> codec		1282504						
ANR	1283011	Symbol	* endptr ++		1282504						
ANR	1283012	Symbol	EINVAL		1282504						
ANR	1283013	Symbol	s		1282504						
ANR	1283014	Symbol	* i		1282504						
ANR	1283015	Symbol	* s -> programs		1282504						
ANR	1283016	Symbol	* j		1282504						
ANR	1283017	Symbol	AVERROR		1282504						
ANR	1283018	Symbol	st -> index		1282504						
ANR	1283019	Symbol	* ( spec + 1 )		1282504						
ANR	1283020	Symbol	* s		1282504						
