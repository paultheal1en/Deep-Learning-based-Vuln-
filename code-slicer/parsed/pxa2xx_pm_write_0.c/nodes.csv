command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6808043	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pxa2xx_pm_write_0.c								
ANR	6808044	Function	pxa2xx_pm_write	1:0:0:954							
ANR	6808045	FunctionDef	"pxa2xx_pm_write (void * opaque , target_phys_addr_t addr , uint32_t value)"		6808044	0					
ANR	6808046	CompoundStatement		5:0:101:954	6808044	0					
ANR	6808047	IdentifierDeclStatement	struct pxa2xx_state_s * s = ( struct pxa2xx_state_s * ) opaque ;	7:4:108:167	6808044	0	True				
ANR	6808048	IdentifierDecl	* s = ( struct pxa2xx_state_s * ) opaque		6808044	0					
ANR	6808049	IdentifierDeclType	struct pxa2xx_state_s *		6808044	0					
ANR	6808050	Identifier	s		6808044	1					
ANR	6808051	AssignmentExpression	* s = ( struct pxa2xx_state_s * ) opaque		6808044	2		=			
ANR	6808052	Identifier	s		6808044	0					
ANR	6808053	CastExpression	( struct pxa2xx_state_s * ) opaque		6808044	1					
ANR	6808054	CastTarget	struct pxa2xx_state_s *		6808044	0					
ANR	6808055	Identifier	opaque		6808044	1					
ANR	6808056	IfStatement	if ( addr > s -> pm_base + PCMD31 )		6808044	1					
ANR	6808057	Condition	addr > s -> pm_base + PCMD31	9:8:178:203	6808044	0	True				
ANR	6808058	RelationalExpression	addr > s -> pm_base + PCMD31		6808044	0		>			
ANR	6808059	Identifier	addr		6808044	0					
ANR	6808060	AdditiveExpression	s -> pm_base + PCMD31		6808044	1		+			
ANR	6808061	PtrMemberAccess	s -> pm_base		6808044	0					
ANR	6808062	Identifier	s		6808044	0					
ANR	6808063	Identifier	pm_base		6808044	1					
ANR	6808064	Identifier	PCMD31		6808044	1					
ANR	6808065	CompoundStatement		5:36:104:104	6808044	1					
ANR	6808066	ExpressionStatement	"pxa2xx_i2c_write ( s -> i2c [ 1 ] , addr , value )"	13:8:290:330	6808044	0	True				
ANR	6808067	CallExpression	"pxa2xx_i2c_write ( s -> i2c [ 1 ] , addr , value )"		6808044	0					
ANR	6808068	Callee	pxa2xx_i2c_write		6808044	0					
ANR	6808069	Identifier	pxa2xx_i2c_write		6808044	0					
ANR	6808070	ArgumentList	s -> i2c [ 1 ]		6808044	1					
ANR	6808071	Argument	s -> i2c [ 1 ]		6808044	0					
ANR	6808072	ArrayIndexing	s -> i2c [ 1 ]		6808044	0					
ANR	6808073	PtrMemberAccess	s -> i2c		6808044	0					
ANR	6808074	Identifier	s		6808044	0					
ANR	6808075	Identifier	i2c		6808044	1					
ANR	6808076	PrimaryExpression	1		6808044	1					
ANR	6808077	Argument	addr		6808044	1					
ANR	6808078	Identifier	addr		6808044	0					
ANR	6808079	Argument	value		6808044	2					
ANR	6808080	Identifier	value		6808044	0					
ANR	6808081	ReturnStatement	return ;	15:8:341:347	6808044	1	True				
ANR	6808082	ExpressionStatement	addr -= s -> pm_base	19:4:361:379	6808044	2	True				
ANR	6808083	AssignmentExpression	addr -= s -> pm_base		6808044	0		-=			
ANR	6808084	Identifier	addr		6808044	0					
ANR	6808085	PtrMemberAccess	s -> pm_base		6808044	1					
ANR	6808086	Identifier	s		6808044	0					
ANR	6808087	Identifier	pm_base		6808044	1					
ANR	6808088	SwitchStatement	switch ( addr )		6808044	3					
ANR	6808089	Condition	addr	23:12:396:399	6808044	0	True				
ANR	6808090	Identifier	addr		6808044	0					
ANR	6808091	CompoundStatement		19:18:300:300	6808044	1					
ANR	6808092	Label	case PMCR :	25:4:409:418	6808044	0	True				
ANR	6808093	Identifier	PMCR		6808044	0					
ANR	6808094	ExpressionStatement	s -> pm_regs [ addr >> 2 ] &= 0x15 & ~ ( value & 0x2a )	27:8:429:476	6808044	1	True				
ANR	6808095	AssignmentExpression	s -> pm_regs [ addr >> 2 ] &= 0x15 & ~ ( value & 0x2a )		6808044	0		&=			
ANR	6808096	ArrayIndexing	s -> pm_regs [ addr >> 2 ]		6808044	0					
ANR	6808097	PtrMemberAccess	s -> pm_regs		6808044	0					
ANR	6808098	Identifier	s		6808044	0					
ANR	6808099	Identifier	pm_regs		6808044	1					
ANR	6808100	ShiftExpression	addr >> 2		6808044	1		>>			
ANR	6808101	Identifier	addr		6808044	0					
ANR	6808102	PrimaryExpression	2		6808044	1					
ANR	6808103	BitAndExpression	0x15 & ~ ( value & 0x2a )		6808044	1		&			
ANR	6808104	PrimaryExpression	0x15		6808044	0					
ANR	6808105	UnaryOperationExpression	~ ( value & 0x2a )		6808044	1					
ANR	6808106	UnaryOperator	~		6808044	0					
ANR	6808107	BitAndExpression	value & 0x2a		6808044	1		&			
ANR	6808108	Identifier	value		6808044	0					
ANR	6808109	PrimaryExpression	0x2a		6808044	1					
ANR	6808110	ExpressionStatement	s -> pm_regs [ addr >> 2 ] |= value & 0x15	29:8:487:524	6808044	2	True				
ANR	6808111	AssignmentExpression	s -> pm_regs [ addr >> 2 ] |= value & 0x15		6808044	0		|=			
ANR	6808112	ArrayIndexing	s -> pm_regs [ addr >> 2 ]		6808044	0					
ANR	6808113	PtrMemberAccess	s -> pm_regs		6808044	0					
ANR	6808114	Identifier	s		6808044	0					
ANR	6808115	Identifier	pm_regs		6808044	1					
ANR	6808116	ShiftExpression	addr >> 2		6808044	1		>>			
ANR	6808117	Identifier	addr		6808044	0					
ANR	6808118	PrimaryExpression	2		6808044	1					
ANR	6808119	BitAndExpression	value & 0x15		6808044	1		&			
ANR	6808120	Identifier	value		6808044	0					
ANR	6808121	PrimaryExpression	0x15		6808044	1					
ANR	6808122	BreakStatement	break ;	31:8:535:540	6808044	3	True				
ANR	6808123	Label	case PSSR :	35:4:549:558	6808044	4	True				
ANR	6808124	Identifier	PSSR		6808044	0					
ANR	6808125	Label	case RCSR :	37:4:592:601	6808044	5	True				
ANR	6808126	Identifier	RCSR		6808044	0					
ANR	6808127	Label	case PKSR :	39:4:608:617	6808044	6	True				
ANR	6808128	Identifier	PKSR		6808044	0					
ANR	6808129	ExpressionStatement	s -> pm_regs [ addr >> 2 ] &= ~value	41:8:628:659	6808044	7	True				
ANR	6808130	AssignmentExpression	s -> pm_regs [ addr >> 2 ] &= ~value		6808044	0		&=			
ANR	6808131	ArrayIndexing	s -> pm_regs [ addr >> 2 ]		6808044	0					
ANR	6808132	PtrMemberAccess	s -> pm_regs		6808044	0					
ANR	6808133	Identifier	s		6808044	0					
ANR	6808134	Identifier	pm_regs		6808044	1					
ANR	6808135	ShiftExpression	addr >> 2		6808044	1		>>			
ANR	6808136	Identifier	addr		6808044	0					
ANR	6808137	PrimaryExpression	2		6808044	1					
ANR	6808138	Identifier	~value		6808044	1					
ANR	6808139	BreakStatement	break ;	43:8:670:675	6808044	8	True				
ANR	6808140	Label	default :	47:4:684:691	6808044	9	True				
ANR	6808141	Identifier	default		6808044	0					
ANR	6808142	IfStatement	if ( addr >= PMCR && addr <= PCMD31 && ! ( addr & 3 ) )		6808044	10					
ANR	6808143	Condition	addr >= PMCR && addr <= PCMD31 && ! ( addr & 3 )	49:12:733:777	6808044	0	True				
ANR	6808144	AndExpression	addr >= PMCR && addr <= PCMD31 && ! ( addr & 3 )		6808044	0		&&			
ANR	6808145	RelationalExpression	addr >= PMCR		6808044	0		>=			
ANR	6808146	Identifier	addr		6808044	0					
ANR	6808147	Identifier	PMCR		6808044	1					
ANR	6808148	AndExpression	addr <= PCMD31 && ! ( addr & 3 )		6808044	1		&&			
ANR	6808149	RelationalExpression	addr <= PCMD31		6808044	0		<=			
ANR	6808150	Identifier	addr		6808044	0					
ANR	6808151	Identifier	PCMD31		6808044	1					
ANR	6808152	UnaryOperationExpression	! ( addr & 3 )		6808044	1					
ANR	6808153	UnaryOperator	!		6808044	0					
ANR	6808154	BitAndExpression	addr & 3		6808044	1		&			
ANR	6808155	Identifier	addr		6808044	0					
ANR	6808156	PrimaryExpression	3		6808044	1					
ANR	6808157	CompoundStatement		45:59:678:678	6808044	1					
ANR	6808158	ExpressionStatement	s -> pm_regs [ addr >> 2 ] = value	51:12:795:824	6808044	0	True				
ANR	6808159	AssignmentExpression	s -> pm_regs [ addr >> 2 ] = value		6808044	0		=			
ANR	6808160	ArrayIndexing	s -> pm_regs [ addr >> 2 ]		6808044	0					
ANR	6808161	PtrMemberAccess	s -> pm_regs		6808044	0					
ANR	6808162	Identifier	s		6808044	0					
ANR	6808163	Identifier	pm_regs		6808044	1					
ANR	6808164	ShiftExpression	addr >> 2		6808044	1		>>			
ANR	6808165	Identifier	addr		6808044	0					
ANR	6808166	PrimaryExpression	2		6808044	1					
ANR	6808167	Identifier	value		6808044	1					
ANR	6808168	BreakStatement	break ;	53:12:839:844	6808044	1	True				
ANR	6808169	Statement	printf	59:8:868:873	6808044	11	True				
ANR	6808170	Statement	(	59:14:874:874	6808044	12	True				
ANR	6808171	Statement	"""%s: Bad register """	59:15:875:893	6808044	13	True				
ANR	6808172	Statement	REG_FMT	59:35:895:901	6808044	14	True				
ANR	6808173	Statement	"""\\n"""	59:43:903:906	6808044	15	True				
ANR	6808174	Statement	","	59:47:907:907	6808044	16	True				
ANR	6808175	Statement	__FUNCTION__	59:49:909:920	6808044	17	True				
ANR	6808176	Statement	","	59:61:921:921	6808044	18	True				
ANR	6808177	Statement	addr	59:63:923:926	6808044	19	True				
ANR	6808178	Statement	)	59:67:927:927	6808044	20	True				
ANR	6808179	ExpressionStatement		59:68:928:928	6808044	21	True				
ANR	6808180	BreakStatement	break ;	61:8:939:944	6808044	22	True				
ANR	6808181	ReturnType	static void		6808044	1					
ANR	6808182	Identifier	pxa2xx_pm_write		6808044	2					
ANR	6808183	ParameterList	"void * opaque , target_phys_addr_t addr , uint32_t value"		6808044	3					
ANR	6808184	Parameter	void * opaque	1:28:28:39	6808044	0	True				
ANR	6808185	ParameterType	void *		6808044	0					
ANR	6808186	Identifier	opaque		6808044	1					
ANR	6808187	Parameter	target_phys_addr_t addr	1:42:42:64	6808044	1	True				
ANR	6808188	ParameterType	target_phys_addr_t		6808044	0					
ANR	6808189	Identifier	addr		6808044	1					
ANR	6808190	Parameter	uint32_t value	3:16:84:97	6808044	2	True				
ANR	6808191	ParameterType	uint32_t		6808044	0					
ANR	6808192	Identifier	value		6808044	1					
ANR	6808193	CFGEntryNode	ENTRY		6808044		True				
ANR	6808194	CFGExitNode	EXIT		6808044		True				
ANR	6808195	Symbol	* s -> i2c		6808044						
ANR	6808196	Symbol	opaque		6808044						
ANR	6808197	Symbol	* s -> pm_regs		6808044						
ANR	6808198	Symbol	PMCR		6808044						
ANR	6808199	Symbol	s -> i2c		6808044						
ANR	6808200	Symbol	s -> pm_regs		6808044						
ANR	6808201	Symbol	s		6808044						
ANR	6808202	Symbol	s -> pm_base		6808044						
ANR	6808203	Symbol	* * s		6808044						
ANR	6808204	Symbol	* addr		6808044						
ANR	6808205	Symbol	addr		6808044						
ANR	6808206	Symbol	~value		6808044						
ANR	6808207	Symbol	value		6808044						
ANR	6808208	Symbol	* s		6808044						
ANR	6808209	Symbol	PCMD31		6808044						
