command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	37666	File	/home/p4ultr4n/workplace/ReVeal/raw_code/FUNC_11_1.c								
ANR	37667	Function	intra_pred	1:0:0:13472							
ANR	37668	FunctionDef	"intra_pred (HEVCContext * s , int x0 , int y0 , int log2_size , int c_idx)"		37667	0					
ANR	37669	CompoundStatement		3:0:88:13472	37667	0					
ANR	37670	Statement	define	5:1:92:97	37667	0	True				
ANR	37671	Statement	PU	5:8:99:100	37667	1	True				
ANR	37672	Statement	(	5:10:101:101	37667	2	True				
ANR	37673	Statement	x	5:11:102:102	37667	3	True				
ANR	37674	Statement	)	5:12:103:103	37667	4	True				
ANR	37675	Statement	(	7:4:112:112	37667	5	True				
ANR	37676	Statement	(	7:5:113:113	37667	6	True				
ANR	37677	Statement	x	7:6:114:114	37667	7	True				
ANR	37678	Statement	)	7:7:115:115	37667	8	True				
ANR	37679	Statement	>>	7:9:117:118	37667	9	True				
ANR	37680	Statement	s	7:12:120:120	37667	10	True				
ANR	37681	Statement	->	7:13:121:122	37667	11	True				
ANR	37682	Statement	sps	7:15:123:125	37667	12	True				
ANR	37683	Statement	->	7:18:126:127	37667	13	True				
ANR	37684	Statement	log2_min_pu_size	7:20:128:143	37667	14	True				
ANR	37685	Statement	)	7:36:144:144	37667	15	True				
ANR	37686	Statement	define	9:1:148:153	37667	16	True				
ANR	37687	Statement	MVF	9:8:155:157	37667	17	True				
ANR	37688	Statement	(	9:11:158:158	37667	18	True				
ANR	37689	Statement	x	9:12:159:159	37667	19	True				
ANR	37690	Statement	","	9:13:160:160	37667	20	True				
ANR	37691	Statement	y	9:15:162:162	37667	21	True				
ANR	37692	Statement	)	9:16:163:163	37667	22	True				
ANR	37693	Statement	(	11:4:172:172	37667	23	True				
ANR	37694	Statement	s	11:5:173:173	37667	24	True				
ANR	37695	Statement	->	11:6:174:175	37667	25	True				
ANR	37696	Statement	ref	11:8:176:178	37667	26	True				
ANR	37697	Statement	->	11:11:179:180	37667	27	True				
ANR	37698	Statement	tab_mvf	11:13:181:187	37667	28	True				
ANR	37699	Statement	[	11:20:188:188	37667	29	True				
ANR	37700	Statement	(	11:21:189:189	37667	30	True				
ANR	37701	Statement	x	11:22:190:190	37667	31	True				
ANR	37702	Statement	)	11:23:191:191	37667	32	True				
ANR	37703	Statement	+	11:25:193:193	37667	33	True				
ANR	37704	Statement	(	11:27:195:195	37667	34	True				
ANR	37705	Statement	y	11:28:196:196	37667	35	True				
ANR	37706	Statement	)	11:29:197:197	37667	36	True				
ANR	37707	Statement	*	11:31:199:199	37667	37	True				
ANR	37708	Statement	pic_width_in_min_pu	11:33:201:219	37667	38	True				
ANR	37709	Statement	]	11:52:220:220	37667	39	True				
ANR	37710	Statement	)	11:53:221:221	37667	40	True				
ANR	37711	Statement	define	13:1:225:230	37667	41	True				
ANR	37712	Statement	MVF_PU	13:8:232:237	37667	42	True				
ANR	37713	Statement	(	13:14:238:238	37667	43	True				
ANR	37714	Statement	x	13:15:239:239	37667	44	True				
ANR	37715	Statement	","	13:16:240:240	37667	45	True				
ANR	37716	Statement	y	13:18:242:242	37667	46	True				
ANR	37717	Statement	)	13:19:243:243	37667	47	True				
ANR	37718	Statement	MVF	15:4:252:254	37667	48	True				
ANR	37719	Statement	(	15:7:255:255	37667	49	True				
ANR	37720	Statement	PU	15:8:256:257	37667	50	True				
ANR	37721	Statement	(	15:10:258:258	37667	51	True				
ANR	37722	Statement	x0	15:11:259:260	37667	52	True				
ANR	37723	Statement	+	15:14:262:262	37667	53	True				
ANR	37724	Statement	(	15:16:264:264	37667	54	True				
ANR	37725	Statement	(	15:17:265:265	37667	55	True				
ANR	37726	Statement	x	15:18:266:266	37667	56	True				
ANR	37727	Statement	)	15:19:267:267	37667	57	True				
ANR	37728	Statement	<<	15:21:269:270	37667	58	True				
ANR	37729	Statement	hshift	15:24:272:277	37667	59	True				
ANR	37730	Statement	)	15:30:278:278	37667	60	True				
ANR	37731	Statement	)	15:31:279:279	37667	61	True				
ANR	37732	Statement	","	15:32:280:280	37667	62	True				
ANR	37733	Statement	PU	15:34:282:283	37667	63	True				
ANR	37734	Statement	(	15:36:284:284	37667	64	True				
ANR	37735	Statement	y0	15:37:285:286	37667	65	True				
ANR	37736	Statement	+	15:40:288:288	37667	66	True				
ANR	37737	Statement	(	15:42:290:290	37667	67	True				
ANR	37738	Statement	(	15:43:291:291	37667	68	True				
ANR	37739	Statement	y	15:44:292:292	37667	69	True				
ANR	37740	Statement	)	15:45:293:293	37667	70	True				
ANR	37741	Statement	<<	15:47:295:296	37667	71	True				
ANR	37742	Statement	vshift	15:50:298:303	37667	72	True				
ANR	37743	Statement	)	15:56:304:304	37667	73	True				
ANR	37744	Statement	)	15:57:305:305	37667	74	True				
ANR	37745	Statement	)	15:58:306:306	37667	75	True				
ANR	37746	Statement	define	17:1:310:315	37667	76	True				
ANR	37747	Statement	IS_INTRA	17:8:317:324	37667	77	True				
ANR	37748	Statement	(	17:16:325:325	37667	78	True				
ANR	37749	Statement	x	17:17:326:326	37667	79	True				
ANR	37750	Statement	","	17:18:327:327	37667	80	True				
ANR	37751	Statement	y	17:20:329:329	37667	81	True				
ANR	37752	Statement	)	17:21:330:330	37667	82	True				
ANR	37753	Statement	MVF_PU	19:4:339:344	37667	83	True				
ANR	37754	Statement	(	19:10:345:345	37667	84	True				
ANR	37755	Statement	x	19:11:346:346	37667	85	True				
ANR	37756	Statement	","	19:12:347:347	37667	86	True				
ANR	37757	Statement	y	19:14:349:349	37667	87	True				
ANR	37758	Statement	)	19:15:350:350	37667	88	True				
ANR	37759	Statement	.	19:16:351:351	37667	89	True				
ANR	37760	Statement	is_intra	19:17:352:359	37667	90	True				
ANR	37761	Statement	define	21:1:363:368	37667	91	True				
ANR	37762	Statement	MIN_TB_ADDR_ZS	21:8:370:383	37667	92	True				
ANR	37763	Statement	(	21:22:384:384	37667	93	True				
ANR	37764	Statement	x	21:23:385:385	37667	94	True				
ANR	37765	Statement	","	21:24:386:386	37667	95	True				
ANR	37766	Statement	y	21:26:388:388	37667	96	True				
ANR	37767	Statement	)	21:27:389:389	37667	97	True				
ANR	37768	Statement	s	23:4:398:398	37667	98	True				
ANR	37769	Statement	->	23:5:399:400	37667	99	True				
ANR	37770	Statement	pps	23:7:401:403	37667	100	True				
ANR	37771	Statement	->	23:10:404:405	37667	101	True				
ANR	37772	Statement	min_tb_addr_zs	23:12:406:419	37667	102	True				
ANR	37773	Statement	[	23:26:420:420	37667	103	True				
ANR	37774	Statement	(	23:27:421:421	37667	104	True				
ANR	37775	Statement	y	23:28:422:422	37667	105	True				
ANR	37776	Statement	)	23:29:423:423	37667	106	True				
ANR	37777	Statement	*	23:31:425:425	37667	107	True				
ANR	37778	Statement	s	23:33:427:427	37667	108	True				
ANR	37779	Statement	->	23:34:428:429	37667	109	True				
ANR	37780	Statement	sps	23:36:430:432	37667	110	True				
ANR	37781	Statement	->	23:39:433:434	37667	111	True				
ANR	37782	Statement	min_tb_width	23:41:435:446	37667	112	True				
ANR	37783	Statement	+	23:54:448:448	37667	113	True				
ANR	37784	Statement	(	23:56:450:450	37667	114	True				
ANR	37785	Statement	x	23:57:451:451	37667	115	True				
ANR	37786	Statement	)	23:58:452:452	37667	116	True				
ANR	37787	Statement	]	23:59:453:453	37667	117	True				
ANR	37788	Statement	define	25:1:457:462	37667	118	True				
ANR	37789	Statement	EXTEND_LEFT	25:8:464:474	37667	119	True				
ANR	37790	Statement	(	25:19:475:475	37667	120	True				
ANR	37791	Statement	ptr	25:20:476:478	37667	121	True				
ANR	37792	Statement	","	25:23:479:479	37667	122	True				
ANR	37793	Statement	start	25:25:481:485	37667	123	True				
ANR	37794	Statement	","	25:30:486:486	37667	124	True				
ANR	37795	Statement	length	25:32:488:493	37667	125	True				
ANR	37796	Statement	)	25:38:494:494	37667	126	True				
ANR	37797	ForStatement	for ( i = ( start ) ; i > ( start ) - ( length ) ; i -- )		37667	127					
ANR	37798	ForInit	i = ( start ) ;	27:13:512:523	37667	0	True				
ANR	37799	AssignmentExpression	i = ( start )		37667	0		=			
ANR	37800	Identifier	i		37667	0					
ANR	37801	Identifier	start		37667	1					
ANR	37802	Condition	i > ( start ) - ( length )	27:26:525:546	37667	1	True				
ANR	37803	RelationalExpression	i > ( start ) - ( length )		37667	0		>			
ANR	37804	Identifier	i		37667	0					
ANR	37805	CastExpression	( start ) - ( length )		37667	1					
ANR	37806	CastTarget	start		37667	0					
ANR	37807	UnaryOperationExpression	- ( length )		37667	1					
ANR	37808	UnaryOperator	-		37667	0					
ANR	37809	Identifier	length		37667	1					
ANR	37810	PostIncDecOperationExpression	i --	27:50:549:551	37667	2	True				
ANR	37811	Identifier	i		37667	0					
ANR	37812	IncDec	--		37667	1					
ANR	37813	Statement	ptr	29:12:569:571	37667	3	True				
ANR	37814	Statement	[	29:15:572:572	37667	128	True				
ANR	37815	Statement	i	29:16:573:573	37667	129	True				
ANR	37816	Statement	-	29:18:575:575	37667	130	True				
ANR	37817	Statement	1	29:20:577:577	37667	131	True				
ANR	37818	Statement	]	29:21:578:578	37667	132	True				
ANR	37819	Statement	=	29:23:580:580	37667	133	True				
ANR	37820	Statement	ptr	29:25:582:584	37667	134	True				
ANR	37821	Statement	[	29:28:585:585	37667	135	True				
ANR	37822	Statement	i	29:29:586:586	37667	136	True				
ANR	37823	Statement	]	29:30:587:587	37667	137	True				
ANR	37824	Statement	define	31:1:591:596	37667	138	True				
ANR	37825	Statement	EXTEND_RIGHT	31:8:598:609	37667	139	True				
ANR	37826	Statement	(	31:20:610:610	37667	140	True				
ANR	37827	Statement	ptr	31:21:611:613	37667	141	True				
ANR	37828	Statement	","	31:24:614:614	37667	142	True				
ANR	37829	Statement	start	31:26:616:620	37667	143	True				
ANR	37830	Statement	","	31:31:621:621	37667	144	True				
ANR	37831	Statement	length	31:33:623:628	37667	145	True				
ANR	37832	Statement	)	31:39:629:629	37667	146	True				
ANR	37833	ForStatement	for ( i = ( start ) ; i < ( start ) + ( length ) ; i ++ )		37667	147					
ANR	37834	ForInit	i = ( start ) ;	33:13:647:658	37667	0	True				
ANR	37835	AssignmentExpression	i = ( start )		37667	0		=			
ANR	37836	Identifier	i		37667	0					
ANR	37837	Identifier	start		37667	1					
ANR	37838	Condition	i < ( start ) + ( length )	33:26:660:681	37667	1	True				
ANR	37839	RelationalExpression	i < ( start ) + ( length )		37667	0		<			
ANR	37840	Identifier	i		37667	0					
ANR	37841	CastExpression	( start ) + ( length )		37667	1					
ANR	37842	CastTarget	start		37667	0					
ANR	37843	UnaryOperationExpression	+ ( length )		37667	1					
ANR	37844	UnaryOperator	+		37667	0					
ANR	37845	Identifier	length		37667	1					
ANR	37846	PostIncDecOperationExpression	i ++	33:50:684:686	37667	2	True				
ANR	37847	Identifier	i		37667	0					
ANR	37848	IncDec	++		37667	1					
ANR	37849	Statement	ptr	35:12:704:706	37667	3	True				
ANR	37850	Statement	[	35:15:707:707	37667	148	True				
ANR	37851	Statement	i	35:16:708:708	37667	149	True				
ANR	37852	Statement	]	35:17:709:709	37667	150	True				
ANR	37853	Statement	=	35:19:711:711	37667	151	True				
ANR	37854	Statement	ptr	35:21:713:715	37667	152	True				
ANR	37855	Statement	[	35:24:716:716	37667	153	True				
ANR	37856	Statement	i	35:25:717:717	37667	154	True				
ANR	37857	Statement	-	35:27:719:719	37667	155	True				
ANR	37858	Statement	1	35:29:721:721	37667	156	True				
ANR	37859	Statement	]	35:30:722:722	37667	157	True				
ANR	37860	Statement	define	37:1:726:731	37667	158	True				
ANR	37861	Statement	EXTEND_UP	37:8:733:741	37667	159	True				
ANR	37862	Statement	(	37:17:742:742	37667	160	True				
ANR	37863	Statement	ptr	37:18:743:745	37667	161	True				
ANR	37864	Statement	","	37:21:746:746	37667	162	True				
ANR	37865	Statement	start	37:23:748:752	37667	163	True				
ANR	37866	Statement	","	37:28:753:753	37667	164	True				
ANR	37867	Statement	length	37:30:755:760	37667	165	True				
ANR	37868	Statement	)	37:36:761:761	37667	166	True				
ANR	37869	Statement	EXTEND_LEFT	37:40:765:775	37667	167	True				
ANR	37870	Statement	(	37:51:776:776	37667	168	True				
ANR	37871	Statement	ptr	37:52:777:779	37667	169	True				
ANR	37872	Statement	","	37:55:780:780	37667	170	True				
ANR	37873	Statement	start	37:57:782:786	37667	171	True				
ANR	37874	Statement	","	37:62:787:787	37667	172	True				
ANR	37875	Statement	length	37:64:789:794	37667	173	True				
ANR	37876	Statement	)	37:70:795:795	37667	174	True				
ANR	37877	Statement	define	39:1:799:804	37667	175	True				
ANR	37878	Statement	EXTEND_DOWN	39:8:806:816	37667	176	True				
ANR	37879	Statement	(	39:19:817:817	37667	177	True				
ANR	37880	Statement	ptr	39:20:818:820	37667	178	True				
ANR	37881	Statement	","	39:23:821:821	37667	179	True				
ANR	37882	Statement	start	39:25:823:827	37667	180	True				
ANR	37883	Statement	","	39:30:828:828	37667	181	True				
ANR	37884	Statement	length	39:32:830:835	37667	182	True				
ANR	37885	Statement	)	39:38:836:836	37667	183	True				
ANR	37886	Statement	EXTEND_RIGHT	39:40:838:849	37667	184	True				
ANR	37887	Statement	(	39:52:850:850	37667	185	True				
ANR	37888	Statement	ptr	39:53:851:853	37667	186	True				
ANR	37889	Statement	","	39:56:854:854	37667	187	True				
ANR	37890	Statement	start	39:58:856:860	37667	188	True				
ANR	37891	Statement	","	39:63:861:861	37667	189	True				
ANR	37892	Statement	length	39:65:863:868	37667	190	True				
ANR	37893	Statement	)	39:71:869:869	37667	191	True				
ANR	37894	Statement	define	41:1:873:878	37667	192	True				
ANR	37895	Statement	EXTEND_LEFT_CIP	41:8:880:894	37667	193	True				
ANR	37896	Statement	(	41:23:895:895	37667	194	True				
ANR	37897	Statement	ptr	41:24:896:898	37667	195	True				
ANR	37898	Statement	","	41:27:899:899	37667	196	True				
ANR	37899	Statement	start	41:29:901:905	37667	197	True				
ANR	37900	Statement	","	41:34:906:906	37667	198	True				
ANR	37901	Statement	length	41:36:908:913	37667	199	True				
ANR	37902	Statement	)	41:42:914:914	37667	200	True				
ANR	37903	ForStatement	for ( i = ( start ) ; i > ( start ) - ( length ) ; i -- )		37667	201					
ANR	37904	ForInit	i = ( start ) ;	43:13:932:943	37667	0	True				
ANR	37905	AssignmentExpression	i = ( start )		37667	0		=			
ANR	37906	Identifier	i		37667	0					
ANR	37907	Identifier	start		37667	1					
ANR	37908	Condition	i > ( start ) - ( length )	43:26:945:966	37667	1	True				
ANR	37909	RelationalExpression	i > ( start ) - ( length )		37667	0		>			
ANR	37910	Identifier	i		37667	0					
ANR	37911	CastExpression	( start ) - ( length )		37667	1					
ANR	37912	CastTarget	start		37667	0					
ANR	37913	UnaryOperationExpression	- ( length )		37667	1					
ANR	37914	UnaryOperator	-		37667	0					
ANR	37915	Identifier	length		37667	1					
ANR	37916	PostIncDecOperationExpression	i --	43:50:969:971	37667	2	True				
ANR	37917	Identifier	i		37667	0					
ANR	37918	IncDec	--		37667	1					
ANR	37919	IfStatement	"if ( ! IS_INTRA ( i - 1 , - 1 ) )"		37667	3					
ANR	37920	Condition	"! IS_INTRA ( i - 1 , - 1 )"	45:16:993:1012	37667	0	True				
ANR	37921	UnaryOperationExpression	"! IS_INTRA ( i - 1 , - 1 )"		37667	0					
ANR	37922	UnaryOperator	!		37667	0					
ANR	37923	CallExpression	"IS_INTRA ( i - 1 , - 1 )"		37667	1					
ANR	37924	Callee	IS_INTRA		37667	0					
ANR	37925	Identifier	IS_INTRA		37667	0					
ANR	37926	ArgumentList	i - 1		37667	1					
ANR	37927	Argument	i - 1		37667	0					
ANR	37928	AdditiveExpression	i - 1		37667	0		-			
ANR	37929	Identifier	i		37667	0					
ANR	37930	PrimaryExpression	1		37667	1					
ANR	37931	Argument	- 1		37667	1					
ANR	37932	UnaryOperationExpression	- 1		37667	0					
ANR	37933	UnaryOperator	-		37667	0					
ANR	37934	PrimaryExpression	1		37667	1					
ANR	37935	Statement	ptr	47:16:1034:1036	37667	1	True				
ANR	37936	Statement	[	47:19:1037:1037	37667	202	True				
ANR	37937	Statement	i	47:20:1038:1038	37667	203	True				
ANR	37938	Statement	-	47:22:1040:1040	37667	204	True				
ANR	37939	Statement	1	47:24:1042:1042	37667	205	True				
ANR	37940	Statement	]	47:25:1043:1043	37667	206	True				
ANR	37941	Statement	=	47:27:1045:1045	37667	207	True				
ANR	37942	Statement	ptr	47:29:1047:1049	37667	208	True				
ANR	37943	Statement	[	47:32:1050:1050	37667	209	True				
ANR	37944	Statement	i	47:33:1051:1051	37667	210	True				
ANR	37945	Statement	]	47:34:1052:1052	37667	211	True				
ANR	37946	Statement	define	49:1:1056:1061	37667	212	True				
ANR	37947	Statement	EXTEND_RIGHT_CIP	49:8:1063:1078	37667	213	True				
ANR	37948	Statement	(	49:24:1079:1079	37667	214	True				
ANR	37949	Statement	ptr	49:25:1080:1082	37667	215	True				
ANR	37950	Statement	","	49:28:1083:1083	37667	216	True				
ANR	37951	Statement	start	49:30:1085:1089	37667	217	True				
ANR	37952	Statement	","	49:35:1090:1090	37667	218	True				
ANR	37953	Statement	length	49:37:1092:1097	37667	219	True				
ANR	37954	Statement	)	49:43:1098:1098	37667	220	True				
ANR	37955	ForStatement	for ( i = ( start ) ; i < ( start ) + ( length ) ; i ++ )		37667	221					
ANR	37956	ForInit	i = ( start ) ;	51:13:1116:1127	37667	0	True				
ANR	37957	AssignmentExpression	i = ( start )		37667	0		=			
ANR	37958	Identifier	i		37667	0					
ANR	37959	Identifier	start		37667	1					
ANR	37960	Condition	i < ( start ) + ( length )	51:26:1129:1150	37667	1	True				
ANR	37961	RelationalExpression	i < ( start ) + ( length )		37667	0		<			
ANR	37962	Identifier	i		37667	0					
ANR	37963	CastExpression	( start ) + ( length )		37667	1					
ANR	37964	CastTarget	start		37667	0					
ANR	37965	UnaryOperationExpression	+ ( length )		37667	1					
ANR	37966	UnaryOperator	+		37667	0					
ANR	37967	Identifier	length		37667	1					
ANR	37968	PostIncDecOperationExpression	i ++	51:50:1153:1155	37667	2	True				
ANR	37969	Identifier	i		37667	0					
ANR	37970	IncDec	++		37667	1					
ANR	37971	IfStatement	"if ( ! IS_INTRA ( i , - 1 ) )"		37667	3					
ANR	37972	Condition	"! IS_INTRA ( i , - 1 )"	53:16:1177:1192	37667	0	True				
ANR	37973	UnaryOperationExpression	"! IS_INTRA ( i , - 1 )"		37667	0					
ANR	37974	UnaryOperator	!		37667	0					
ANR	37975	CallExpression	"IS_INTRA ( i , - 1 )"		37667	1					
ANR	37976	Callee	IS_INTRA		37667	0					
ANR	37977	Identifier	IS_INTRA		37667	0					
ANR	37978	ArgumentList	i		37667	1					
ANR	37979	Argument	i		37667	0					
ANR	37980	Identifier	i		37667	0					
ANR	37981	Argument	- 1		37667	1					
ANR	37982	UnaryOperationExpression	- 1		37667	0					
ANR	37983	UnaryOperator	-		37667	0					
ANR	37984	PrimaryExpression	1		37667	1					
ANR	37985	Statement	ptr	55:16:1214:1216	37667	1	True				
ANR	37986	Statement	[	55:19:1217:1217	37667	222	True				
ANR	37987	Statement	i	55:20:1218:1218	37667	223	True				
ANR	37988	Statement	]	55:21:1219:1219	37667	224	True				
ANR	37989	Statement	=	55:23:1221:1221	37667	225	True				
ANR	37990	Statement	ptr	55:25:1223:1225	37667	226	True				
ANR	37991	Statement	[	55:28:1226:1226	37667	227	True				
ANR	37992	Statement	i	55:29:1227:1227	37667	228	True				
ANR	37993	Statement	-	55:31:1229:1229	37667	229	True				
ANR	37994	Statement	1	55:33:1231:1231	37667	230	True				
ANR	37995	Statement	]	55:34:1232:1232	37667	231	True				
ANR	37996	Statement	define	57:1:1236:1241	37667	232	True				
ANR	37997	Statement	EXTEND_UP_CIP	57:8:1243:1255	37667	233	True				
ANR	37998	Statement	(	57:21:1256:1256	37667	234	True				
ANR	37999	Statement	ptr	57:22:1257:1259	37667	235	True				
ANR	38000	Statement	","	57:25:1260:1260	37667	236	True				
ANR	38001	Statement	start	57:27:1262:1266	37667	237	True				
ANR	38002	Statement	","	57:32:1267:1267	37667	238	True				
ANR	38003	Statement	length	57:34:1269:1274	37667	239	True				
ANR	38004	Statement	)	57:40:1275:1275	37667	240	True				
ANR	38005	ForStatement	for ( i = ( start ) ; i > ( start ) - ( length ) ; i -- )		37667	241					
ANR	38006	ForInit	i = ( start ) ;	59:13:1293:1304	37667	0	True				
ANR	38007	AssignmentExpression	i = ( start )		37667	0		=			
ANR	38008	Identifier	i		37667	0					
ANR	38009	Identifier	start		37667	1					
ANR	38010	Condition	i > ( start ) - ( length )	59:26:1306:1327	37667	1	True				
ANR	38011	RelationalExpression	i > ( start ) - ( length )		37667	0		>			
ANR	38012	Identifier	i		37667	0					
ANR	38013	CastExpression	( start ) - ( length )		37667	1					
ANR	38014	CastTarget	start		37667	0					
ANR	38015	UnaryOperationExpression	- ( length )		37667	1					
ANR	38016	UnaryOperator	-		37667	0					
ANR	38017	Identifier	length		37667	1					
ANR	38018	PostIncDecOperationExpression	i --	59:50:1330:1332	37667	2	True				
ANR	38019	Identifier	i		37667	0					
ANR	38020	IncDec	--		37667	1					
ANR	38021	IfStatement	"if ( ! IS_INTRA ( - 1 , i - 1 ) )"		37667	3					
ANR	38022	Condition	"! IS_INTRA ( - 1 , i - 1 )"	61:16:1354:1373	37667	0	True				
ANR	38023	UnaryOperationExpression	"! IS_INTRA ( - 1 , i - 1 )"		37667	0					
ANR	38024	UnaryOperator	!		37667	0					
ANR	38025	CallExpression	"IS_INTRA ( - 1 , i - 1 )"		37667	1					
ANR	38026	Callee	IS_INTRA		37667	0					
ANR	38027	Identifier	IS_INTRA		37667	0					
ANR	38028	ArgumentList	- 1		37667	1					
ANR	38029	Argument	- 1		37667	0					
ANR	38030	UnaryOperationExpression	- 1		37667	0					
ANR	38031	UnaryOperator	-		37667	0					
ANR	38032	PrimaryExpression	1		37667	1					
ANR	38033	Argument	i - 1		37667	1					
ANR	38034	AdditiveExpression	i - 1		37667	0		-			
ANR	38035	Identifier	i		37667	0					
ANR	38036	PrimaryExpression	1		37667	1					
ANR	38037	Statement	ptr	63:16:1395:1397	37667	1	True				
ANR	38038	Statement	[	63:19:1398:1398	37667	242	True				
ANR	38039	Statement	i	63:20:1399:1399	37667	243	True				
ANR	38040	Statement	-	63:22:1401:1401	37667	244	True				
ANR	38041	Statement	1	63:24:1403:1403	37667	245	True				
ANR	38042	Statement	]	63:25:1404:1404	37667	246	True				
ANR	38043	Statement	=	63:27:1406:1406	37667	247	True				
ANR	38044	Statement	ptr	63:29:1408:1410	37667	248	True				
ANR	38045	Statement	[	63:32:1411:1411	37667	249	True				
ANR	38046	Statement	i	63:33:1412:1412	37667	250	True				
ANR	38047	Statement	]	63:34:1413:1413	37667	251	True				
ANR	38048	Statement	define	65:1:1417:1422	37667	252	True				
ANR	38049	Statement	EXTEND_UP_CIP_0	65:8:1424:1438	37667	253	True				
ANR	38050	Statement	(	65:23:1439:1439	37667	254	True				
ANR	38051	Statement	ptr	65:24:1440:1442	37667	255	True				
ANR	38052	Statement	","	65:27:1443:1443	37667	256	True				
ANR	38053	Statement	start	65:29:1445:1449	37667	257	True				
ANR	38054	Statement	","	65:34:1450:1450	37667	258	True				
ANR	38055	Statement	length	65:36:1452:1457	37667	259	True				
ANR	38056	Statement	)	65:42:1458:1458	37667	260	True				
ANR	38057	ForStatement	for ( i = ( start ) ; i > ( start ) - ( length ) ; i -- )		37667	261					
ANR	38058	ForInit	i = ( start ) ;	67:13:1476:1487	37667	0	True				
ANR	38059	AssignmentExpression	i = ( start )		37667	0		=			
ANR	38060	Identifier	i		37667	0					
ANR	38061	Identifier	start		37667	1					
ANR	38062	Condition	i > ( start ) - ( length )	67:26:1489:1510	37667	1	True				
ANR	38063	RelationalExpression	i > ( start ) - ( length )		37667	0		>			
ANR	38064	Identifier	i		37667	0					
ANR	38065	CastExpression	( start ) - ( length )		37667	1					
ANR	38066	CastTarget	start		37667	0					
ANR	38067	UnaryOperationExpression	- ( length )		37667	1					
ANR	38068	UnaryOperator	-		37667	0					
ANR	38069	Identifier	length		37667	1					
ANR	38070	PostIncDecOperationExpression	i --	67:50:1513:1515	37667	2	True				
ANR	38071	Identifier	i		37667	0					
ANR	38072	IncDec	--		37667	1					
ANR	38073	Statement	ptr	69:12:1533:1535	37667	3	True				
ANR	38074	Statement	[	69:15:1536:1536	37667	262	True				
ANR	38075	Statement	i	69:16:1537:1537	37667	263	True				
ANR	38076	Statement	-	69:18:1539:1539	37667	264	True				
ANR	38077	Statement	1	69:20:1541:1541	37667	265	True				
ANR	38078	Statement	]	69:21:1542:1542	37667	266	True				
ANR	38079	Statement	=	69:23:1544:1544	37667	267	True				
ANR	38080	Statement	ptr	69:25:1546:1548	37667	268	True				
ANR	38081	Statement	[	69:28:1549:1549	37667	269	True				
ANR	38082	Statement	i	69:29:1550:1550	37667	270	True				
ANR	38083	Statement	]	69:30:1551:1551	37667	271	True				
ANR	38084	Statement	define	71:1:1555:1560	37667	272	True				
ANR	38085	Statement	EXTEND_DOWN_CIP	71:8:1562:1576	37667	273	True				
ANR	38086	Statement	(	71:23:1577:1577	37667	274	True				
ANR	38087	Statement	ptr	71:24:1578:1580	37667	275	True				
ANR	38088	Statement	","	71:27:1581:1581	37667	276	True				
ANR	38089	Statement	start	71:29:1583:1587	37667	277	True				
ANR	38090	Statement	","	71:34:1588:1588	37667	278	True				
ANR	38091	Statement	length	71:36:1590:1595	37667	279	True				
ANR	38092	Statement	)	71:42:1596:1596	37667	280	True				
ANR	38093	ForStatement	for ( i = ( start ) ; i < ( start ) + ( length ) ; i ++ )		37667	281					
ANR	38094	ForInit	i = ( start ) ;	73:13:1614:1625	37667	0	True				
ANR	38095	AssignmentExpression	i = ( start )		37667	0		=			
ANR	38096	Identifier	i		37667	0					
ANR	38097	Identifier	start		37667	1					
ANR	38098	Condition	i < ( start ) + ( length )	73:26:1627:1648	37667	1	True				
ANR	38099	RelationalExpression	i < ( start ) + ( length )		37667	0		<			
ANR	38100	Identifier	i		37667	0					
ANR	38101	CastExpression	( start ) + ( length )		37667	1					
ANR	38102	CastTarget	start		37667	0					
ANR	38103	UnaryOperationExpression	+ ( length )		37667	1					
ANR	38104	UnaryOperator	+		37667	0					
ANR	38105	Identifier	length		37667	1					
ANR	38106	PostIncDecOperationExpression	i ++	73:50:1651:1653	37667	2	True				
ANR	38107	Identifier	i		37667	0					
ANR	38108	IncDec	++		37667	1					
ANR	38109	IfStatement	"if ( ! IS_INTRA ( - 1 , i ) )"		37667	3					
ANR	38110	Condition	"! IS_INTRA ( - 1 , i )"	75:16:1675:1690	37667	0	True				
ANR	38111	UnaryOperationExpression	"! IS_INTRA ( - 1 , i )"		37667	0					
ANR	38112	UnaryOperator	!		37667	0					
ANR	38113	CallExpression	"IS_INTRA ( - 1 , i )"		37667	1					
ANR	38114	Callee	IS_INTRA		37667	0					
ANR	38115	Identifier	IS_INTRA		37667	0					
ANR	38116	ArgumentList	- 1		37667	1					
ANR	38117	Argument	- 1		37667	0					
ANR	38118	UnaryOperationExpression	- 1		37667	0					
ANR	38119	UnaryOperator	-		37667	0					
ANR	38120	PrimaryExpression	1		37667	1					
ANR	38121	Argument	i		37667	1					
ANR	38122	Identifier	i		37667	0					
ANR	38123	Statement	ptr	77:16:1712:1714	37667	1	True				
ANR	38124	Statement	[	77:19:1715:1715	37667	282	True				
ANR	38125	Statement	i	77:20:1716:1716	37667	283	True				
ANR	38126	Statement	]	77:21:1717:1717	37667	284	True				
ANR	38127	Statement	=	77:23:1719:1719	37667	285	True				
ANR	38128	Statement	ptr	77:25:1721:1723	37667	286	True				
ANR	38129	Statement	[	77:28:1724:1724	37667	287	True				
ANR	38130	Statement	i	77:29:1725:1725	37667	288	True				
ANR	38131	Statement	-	77:31:1727:1727	37667	289	True				
ANR	38132	Statement	1	77:33:1729:1729	37667	290	True				
ANR	38133	Statement	]	77:34:1730:1730	37667	291	True				
ANR	38134	IdentifierDeclStatement	HEVCLocalContext * lc = s -> HEVClc ;	79:4:1737:1769	37667	292	True				
ANR	38135	IdentifierDecl	* lc = s -> HEVClc		37667	0					
ANR	38136	IdentifierDeclType	HEVCLocalContext *		37667	0					
ANR	38137	Identifier	lc		37667	1					
ANR	38138	AssignmentExpression	* lc = s -> HEVClc		37667	2		=			
ANR	38139	Identifier	lc		37667	0					
ANR	38140	PtrMemberAccess	s -> HEVClc		37667	1					
ANR	38141	Identifier	s		37667	0					
ANR	38142	Identifier	HEVClc		37667	1					
ANR	38143	IdentifierDeclStatement	int i ;	81:4:1776:1781	37667	293	True				
ANR	38144	IdentifierDecl	i		37667	0					
ANR	38145	IdentifierDeclType	int		37667	0					
ANR	38146	Identifier	i		37667	1					
ANR	38147	IdentifierDeclStatement	int hshift = s -> sps -> hshift [ c_idx ] ;	83:4:1788:1822	37667	294	True				
ANR	38148	IdentifierDecl	hshift = s -> sps -> hshift [ c_idx ]		37667	0					
ANR	38149	IdentifierDeclType	int		37667	0					
ANR	38150	Identifier	hshift		37667	1					
ANR	38151	AssignmentExpression	hshift = s -> sps -> hshift [ c_idx ]		37667	2		=			
ANR	38152	Identifier	hshift		37667	0					
ANR	38153	ArrayIndexing	s -> sps -> hshift [ c_idx ]		37667	1					
ANR	38154	PtrMemberAccess	s -> sps -> hshift		37667	0					
ANR	38155	PtrMemberAccess	s -> sps		37667	0					
ANR	38156	Identifier	s		37667	0					
ANR	38157	Identifier	sps		37667	1					
ANR	38158	Identifier	hshift		37667	1					
ANR	38159	Identifier	c_idx		37667	1					
ANR	38160	IdentifierDeclStatement	int vshift = s -> sps -> vshift [ c_idx ] ;	85:4:1829:1863	37667	295	True				
ANR	38161	IdentifierDecl	vshift = s -> sps -> vshift [ c_idx ]		37667	0					
ANR	38162	IdentifierDeclType	int		37667	0					
ANR	38163	Identifier	vshift		37667	1					
ANR	38164	AssignmentExpression	vshift = s -> sps -> vshift [ c_idx ]		37667	2		=			
ANR	38165	Identifier	vshift		37667	0					
ANR	38166	ArrayIndexing	s -> sps -> vshift [ c_idx ]		37667	1					
ANR	38167	PtrMemberAccess	s -> sps -> vshift		37667	0					
ANR	38168	PtrMemberAccess	s -> sps		37667	0					
ANR	38169	Identifier	s		37667	0					
ANR	38170	Identifier	sps		37667	1					
ANR	38171	Identifier	vshift		37667	1					
ANR	38172	Identifier	c_idx		37667	1					
ANR	38173	IdentifierDeclStatement	int size = ( 1 << log2_size ) ;	87:4:1870:1897	37667	296	True				
ANR	38174	IdentifierDecl	size = ( 1 << log2_size )		37667	0					
ANR	38175	IdentifierDeclType	int		37667	0					
ANR	38176	Identifier	size		37667	1					
ANR	38177	AssignmentExpression	size = ( 1 << log2_size )		37667	2		=			
ANR	38178	Identifier	size		37667	0					
ANR	38179	ShiftExpression	1 << log2_size		37667	1		<<			
ANR	38180	PrimaryExpression	1		37667	0					
ANR	38181	Identifier	log2_size		37667	1					
ANR	38182	IdentifierDeclStatement	int size_in_luma = size << hshift ;	89:4:1904:1937	37667	297	True				
ANR	38183	IdentifierDecl	size_in_luma = size << hshift		37667	0					
ANR	38184	IdentifierDeclType	int		37667	0					
ANR	38185	Identifier	size_in_luma		37667	1					
ANR	38186	AssignmentExpression	size_in_luma = size << hshift		37667	2		=			
ANR	38187	Identifier	size_in_luma		37667	0					
ANR	38188	ShiftExpression	size << hshift		37667	1		<<			
ANR	38189	Identifier	size		37667	0					
ANR	38190	Identifier	hshift		37667	1					
ANR	38191	IdentifierDeclStatement	int size_in_tbs = size_in_luma >> s -> sps -> log2_min_transform_block_size ;	91:4:1944:2015	37667	298	True				
ANR	38192	IdentifierDecl	size_in_tbs = size_in_luma >> s -> sps -> log2_min_transform_block_size		37667	0					
ANR	38193	IdentifierDeclType	int		37667	0					
ANR	38194	Identifier	size_in_tbs		37667	1					
ANR	38195	AssignmentExpression	size_in_tbs = size_in_luma >> s -> sps -> log2_min_transform_block_size		37667	2		=			
ANR	38196	Identifier	size_in_tbs		37667	0					
ANR	38197	ShiftExpression	size_in_luma >> s -> sps -> log2_min_transform_block_size		37667	1		>>			
ANR	38198	Identifier	size_in_luma		37667	0					
ANR	38199	PtrMemberAccess	s -> sps -> log2_min_transform_block_size		37667	1					
ANR	38200	PtrMemberAccess	s -> sps		37667	0					
ANR	38201	Identifier	s		37667	0					
ANR	38202	Identifier	sps		37667	1					
ANR	38203	Identifier	log2_min_transform_block_size		37667	1					
ANR	38204	IdentifierDeclStatement	int x = x0 >> hshift ;	93:4:2022:2042	37667	299	True				
ANR	38205	IdentifierDecl	x = x0 >> hshift		37667	0					
ANR	38206	IdentifierDeclType	int		37667	0					
ANR	38207	Identifier	x		37667	1					
ANR	38208	AssignmentExpression	x = x0 >> hshift		37667	2		=			
ANR	38209	Identifier	x		37667	0					
ANR	38210	ShiftExpression	x0 >> hshift		37667	1		>>			
ANR	38211	Identifier	x0		37667	0					
ANR	38212	Identifier	hshift		37667	1					
ANR	38213	IdentifierDeclStatement	int y = y0 >> vshift ;	95:4:2049:2069	37667	300	True				
ANR	38214	IdentifierDecl	y = y0 >> vshift		37667	0					
ANR	38215	IdentifierDeclType	int		37667	0					
ANR	38216	Identifier	y		37667	1					
ANR	38217	AssignmentExpression	y = y0 >> vshift		37667	2		=			
ANR	38218	Identifier	y		37667	0					
ANR	38219	ShiftExpression	y0 >> vshift		37667	1		>>			
ANR	38220	Identifier	y0		37667	0					
ANR	38221	Identifier	vshift		37667	1					
ANR	38222	IdentifierDeclStatement	int x_tb = x0 >> s -> sps -> log2_min_transform_block_size ;	97:4:2076:2130	37667	301	True				
ANR	38223	IdentifierDecl	x_tb = x0 >> s -> sps -> log2_min_transform_block_size		37667	0					
ANR	38224	IdentifierDeclType	int		37667	0					
ANR	38225	Identifier	x_tb		37667	1					
ANR	38226	AssignmentExpression	x_tb = x0 >> s -> sps -> log2_min_transform_block_size		37667	2		=			
ANR	38227	Identifier	x_tb		37667	0					
ANR	38228	ShiftExpression	x0 >> s -> sps -> log2_min_transform_block_size		37667	1		>>			
ANR	38229	Identifier	x0		37667	0					
ANR	38230	PtrMemberAccess	s -> sps -> log2_min_transform_block_size		37667	1					
ANR	38231	PtrMemberAccess	s -> sps		37667	0					
ANR	38232	Identifier	s		37667	0					
ANR	38233	Identifier	sps		37667	1					
ANR	38234	Identifier	log2_min_transform_block_size		37667	1					
ANR	38235	IdentifierDeclStatement	int y_tb = y0 >> s -> sps -> log2_min_transform_block_size ;	99:4:2137:2191	37667	302	True				
ANR	38236	IdentifierDecl	y_tb = y0 >> s -> sps -> log2_min_transform_block_size		37667	0					
ANR	38237	IdentifierDeclType	int		37667	0					
ANR	38238	Identifier	y_tb		37667	1					
ANR	38239	AssignmentExpression	y_tb = y0 >> s -> sps -> log2_min_transform_block_size		37667	2		=			
ANR	38240	Identifier	y_tb		37667	0					
ANR	38241	ShiftExpression	y0 >> s -> sps -> log2_min_transform_block_size		37667	1		>>			
ANR	38242	Identifier	y0		37667	0					
ANR	38243	PtrMemberAccess	s -> sps -> log2_min_transform_block_size		37667	1					
ANR	38244	PtrMemberAccess	s -> sps		37667	0					
ANR	38245	Identifier	s		37667	0					
ANR	38246	Identifier	sps		37667	1					
ANR	38247	Identifier	log2_min_transform_block_size		37667	1					
ANR	38248	IdentifierDeclStatement	"int cur_tb_addr = MIN_TB_ADDR_ZS ( x_tb , y_tb ) ;"	101:4:2198:2242	37667	303	True				
ANR	38249	IdentifierDecl	"cur_tb_addr = MIN_TB_ADDR_ZS ( x_tb , y_tb )"		37667	0					
ANR	38250	IdentifierDeclType	int		37667	0					
ANR	38251	Identifier	cur_tb_addr		37667	1					
ANR	38252	AssignmentExpression	"cur_tb_addr = MIN_TB_ADDR_ZS ( x_tb , y_tb )"		37667	2		=			
ANR	38253	Identifier	cur_tb_addr		37667	0					
ANR	38254	CallExpression	"MIN_TB_ADDR_ZS ( x_tb , y_tb )"		37667	1					
ANR	38255	Callee	MIN_TB_ADDR_ZS		37667	0					
ANR	38256	Identifier	MIN_TB_ADDR_ZS		37667	0					
ANR	38257	ArgumentList	x_tb		37667	1					
ANR	38258	Argument	x_tb		37667	0					
ANR	38259	Identifier	x_tb		37667	0					
ANR	38260	Argument	y_tb		37667	1					
ANR	38261	Identifier	y_tb		37667	0					
ANR	38262	IdentifierDeclStatement	ptrdiff_t stride = s -> frame -> linesize [ c_idx ] / sizeof ( pixel ) ;	105:4:2251:2311	37667	304	True				
ANR	38263	IdentifierDecl	stride = s -> frame -> linesize [ c_idx ] / sizeof ( pixel )		37667	0					
ANR	38264	IdentifierDeclType	ptrdiff_t		37667	0					
ANR	38265	Identifier	stride		37667	1					
ANR	38266	AssignmentExpression	stride = s -> frame -> linesize [ c_idx ] / sizeof ( pixel )		37667	2		=			
ANR	38267	Identifier	stride		37667	0					
ANR	38268	MultiplicativeExpression	s -> frame -> linesize [ c_idx ] / sizeof ( pixel )		37667	1		/			
ANR	38269	ArrayIndexing	s -> frame -> linesize [ c_idx ]		37667	0					
ANR	38270	PtrMemberAccess	s -> frame -> linesize		37667	0					
ANR	38271	PtrMemberAccess	s -> frame		37667	0					
ANR	38272	Identifier	s		37667	0					
ANR	38273	Identifier	frame		37667	1					
ANR	38274	Identifier	linesize		37667	1					
ANR	38275	Identifier	c_idx		37667	1					
ANR	38276	SizeofExpression	sizeof ( pixel )		37667	1					
ANR	38277	Sizeof	sizeof		37667	0					
ANR	38278	SizeofOperand	pixel		37667	1					
ANR	38279	IdentifierDeclStatement	pixel * src = ( pixel * ) s -> frame -> data [ c_idx ] + x + y * stride ;	107:4:2318:2377	37667	305	True				
ANR	38280	IdentifierDecl	* src = ( pixel * ) s -> frame -> data [ c_idx ] + x + y * stride		37667	0					
ANR	38281	IdentifierDeclType	pixel *		37667	0					
ANR	38282	Identifier	src		37667	1					
ANR	38283	AssignmentExpression	* src = ( pixel * ) s -> frame -> data [ c_idx ] + x + y * stride		37667	2		=			
ANR	38284	Identifier	src		37667	0					
ANR	38285	AdditiveExpression	( pixel * ) s -> frame -> data [ c_idx ] + x + y * stride		37667	1		+			
ANR	38286	CastExpression	( pixel * ) s -> frame -> data [ c_idx ]		37667	0					
ANR	38287	CastTarget	pixel *		37667	0					
ANR	38288	ArrayIndexing	s -> frame -> data [ c_idx ]		37667	1					
ANR	38289	PtrMemberAccess	s -> frame -> data		37667	0					
ANR	38290	PtrMemberAccess	s -> frame		37667	0					
ANR	38291	Identifier	s		37667	0					
ANR	38292	Identifier	frame		37667	1					
ANR	38293	Identifier	data		37667	1					
ANR	38294	Identifier	c_idx		37667	1					
ANR	38295	AdditiveExpression	x + y * stride		37667	1		+			
ANR	38296	Identifier	x		37667	0					
ANR	38297	MultiplicativeExpression	y * stride		37667	1		*			
ANR	38298	Identifier	y		37667	0					
ANR	38299	Identifier	stride		37667	1					
ANR	38300	IdentifierDeclStatement	int pic_width_in_min_pu = PU ( s -> sps -> width ) ;	111:4:2386:2429	37667	306	True				
ANR	38301	IdentifierDecl	pic_width_in_min_pu = PU ( s -> sps -> width )		37667	0					
ANR	38302	IdentifierDeclType	int		37667	0					
ANR	38303	Identifier	pic_width_in_min_pu		37667	1					
ANR	38304	AssignmentExpression	pic_width_in_min_pu = PU ( s -> sps -> width )		37667	2		=			
ANR	38305	Identifier	pic_width_in_min_pu		37667	0					
ANR	38306	CallExpression	PU ( s -> sps -> width )		37667	1					
ANR	38307	Callee	PU		37667	0					
ANR	38308	Identifier	PU		37667	0					
ANR	38309	ArgumentList	s -> sps -> width		37667	1					
ANR	38310	Argument	s -> sps -> width		37667	0					
ANR	38311	PtrMemberAccess	s -> sps -> width		37667	0					
ANR	38312	PtrMemberAccess	s -> sps		37667	0					
ANR	38313	Identifier	s		37667	0					
ANR	38314	Identifier	sps		37667	1					
ANR	38315	Identifier	width		37667	1					
ANR	38316	IdentifierDeclStatement	enum IntraPredMode mode = c_idx ? lc -> pu . intra_pred_mode_c : lc -> tu . cur_intra_pred_mode ;	115:4:2438:2556	37667	307	True				
ANR	38317	IdentifierDecl	mode = c_idx ? lc -> pu . intra_pred_mode_c : lc -> tu . cur_intra_pred_mode		37667	0					
ANR	38318	IdentifierDeclType	enum IntraPredMode		37667	0					
ANR	38319	Identifier	mode		37667	1					
ANR	38320	AssignmentExpression	mode = c_idx ? lc -> pu . intra_pred_mode_c : lc -> tu . cur_intra_pred_mode		37667	2		=			
ANR	38321	Identifier	mode		37667	0					
ANR	38322	ConditionalExpression	c_idx ? lc -> pu . intra_pred_mode_c : lc -> tu . cur_intra_pred_mode		37667	1					
ANR	38323	Condition	c_idx		37667	0					
ANR	38324	Identifier	c_idx		37667	0					
ANR	38325	MemberAccess	lc -> pu . intra_pred_mode_c		37667	1					
ANR	38326	PtrMemberAccess	lc -> pu		37667	0					
ANR	38327	Identifier	lc		37667	0					
ANR	38328	Identifier	pu		37667	1					
ANR	38329	Identifier	intra_pred_mode_c		37667	1					
ANR	38330	MemberAccess	lc -> tu . cur_intra_pred_mode		37667	2					
ANR	38331	PtrMemberAccess	lc -> tu		37667	0					
ANR	38332	Identifier	lc		37667	0					
ANR	38333	Identifier	tu		37667	1					
ANR	38334	Identifier	cur_intra_pred_mode		37667	1					
ANR	38335	IdentifierDeclStatement	pixel left_array [ 2 * MAX_TB_SIZE + 1 ] ;	121:4:2565:2602	37667	308	True				
ANR	38336	IdentifierDecl	left_array [ 2 * MAX_TB_SIZE + 1 ]		37667	0					
ANR	38337	IdentifierDeclType	pixel [ 2 * MAX_TB_SIZE + 1 ]		37667	0					
ANR	38338	Identifier	left_array		37667	1					
ANR	38339	AdditiveExpression	2 * MAX_TB_SIZE + 1		37667	2		+			
ANR	38340	MultiplicativeExpression	2 * MAX_TB_SIZE		37667	0		*			
ANR	38341	PrimaryExpression	2		37667	0					
ANR	38342	Identifier	MAX_TB_SIZE		37667	1					
ANR	38343	PrimaryExpression	1		37667	1					
ANR	38344	IdentifierDeclStatement	pixel filtered_left_array [ 2 * MAX_TB_SIZE + 1 ] ;	123:4:2609:2655	37667	309	True				
ANR	38345	IdentifierDecl	filtered_left_array [ 2 * MAX_TB_SIZE + 1 ]		37667	0					
ANR	38346	IdentifierDeclType	pixel [ 2 * MAX_TB_SIZE + 1 ]		37667	0					
ANR	38347	Identifier	filtered_left_array		37667	1					
ANR	38348	AdditiveExpression	2 * MAX_TB_SIZE + 1		37667	2		+			
ANR	38349	MultiplicativeExpression	2 * MAX_TB_SIZE		37667	0		*			
ANR	38350	PrimaryExpression	2		37667	0					
ANR	38351	Identifier	MAX_TB_SIZE		37667	1					
ANR	38352	PrimaryExpression	1		37667	1					
ANR	38353	IdentifierDeclStatement	pixel top_array [ 2 * MAX_TB_SIZE + 1 ] ;	125:4:2662:2698	37667	310	True				
ANR	38354	IdentifierDecl	top_array [ 2 * MAX_TB_SIZE + 1 ]		37667	0					
ANR	38355	IdentifierDeclType	pixel [ 2 * MAX_TB_SIZE + 1 ]		37667	0					
ANR	38356	Identifier	top_array		37667	1					
ANR	38357	AdditiveExpression	2 * MAX_TB_SIZE + 1		37667	2		+			
ANR	38358	MultiplicativeExpression	2 * MAX_TB_SIZE		37667	0		*			
ANR	38359	PrimaryExpression	2		37667	0					
ANR	38360	Identifier	MAX_TB_SIZE		37667	1					
ANR	38361	PrimaryExpression	1		37667	1					
ANR	38362	IdentifierDeclStatement	pixel filtered_top_array [ 2 * MAX_TB_SIZE + 1 ] ;	127:4:2705:2750	37667	311	True				
ANR	38363	IdentifierDecl	filtered_top_array [ 2 * MAX_TB_SIZE + 1 ]		37667	0					
ANR	38364	IdentifierDeclType	pixel [ 2 * MAX_TB_SIZE + 1 ]		37667	0					
ANR	38365	Identifier	filtered_top_array		37667	1					
ANR	38366	AdditiveExpression	2 * MAX_TB_SIZE + 1		37667	2		+			
ANR	38367	MultiplicativeExpression	2 * MAX_TB_SIZE		37667	0		*			
ANR	38368	PrimaryExpression	2		37667	0					
ANR	38369	Identifier	MAX_TB_SIZE		37667	1					
ANR	38370	PrimaryExpression	1		37667	1					
ANR	38371	IdentifierDeclStatement	pixel * left = left_array + 1 ;	131:4:2759:2796	37667	312	True				
ANR	38372	IdentifierDecl	* left = left_array + 1		37667	0					
ANR	38373	IdentifierDeclType	pixel *		37667	0					
ANR	38374	Identifier	left		37667	1					
ANR	38375	AssignmentExpression	* left = left_array + 1		37667	2		=			
ANR	38376	Identifier	left		37667	0					
ANR	38377	AdditiveExpression	left_array + 1		37667	1		+			
ANR	38378	Identifier	left_array		37667	0					
ANR	38379	PrimaryExpression	1		37667	1					
ANR	38380	IdentifierDeclStatement	pixel * top = top_array + 1 ;	133:4:2803:2839	37667	313	True				
ANR	38381	IdentifierDecl	* top = top_array + 1		37667	0					
ANR	38382	IdentifierDeclType	pixel *		37667	0					
ANR	38383	Identifier	top		37667	1					
ANR	38384	AssignmentExpression	* top = top_array + 1		37667	2		=			
ANR	38385	Identifier	top		37667	0					
ANR	38386	AdditiveExpression	top_array + 1		37667	1		+			
ANR	38387	Identifier	top_array		37667	0					
ANR	38388	PrimaryExpression	1		37667	1					
ANR	38389	IdentifierDeclStatement	pixel * filtered_left = filtered_left_array + 1 ;	135:4:2846:2892	37667	314	True				
ANR	38390	IdentifierDecl	* filtered_left = filtered_left_array + 1		37667	0					
ANR	38391	IdentifierDeclType	pixel *		37667	0					
ANR	38392	Identifier	filtered_left		37667	1					
ANR	38393	AssignmentExpression	* filtered_left = filtered_left_array + 1		37667	2		=			
ANR	38394	Identifier	filtered_left		37667	0					
ANR	38395	AdditiveExpression	filtered_left_array + 1		37667	1		+			
ANR	38396	Identifier	filtered_left_array		37667	0					
ANR	38397	PrimaryExpression	1		37667	1					
ANR	38398	IdentifierDeclStatement	pixel * filtered_top = filtered_top_array + 1 ;	137:4:2899:2944	37667	315	True				
ANR	38399	IdentifierDecl	* filtered_top = filtered_top_array + 1		37667	0					
ANR	38400	IdentifierDeclType	pixel *		37667	0					
ANR	38401	Identifier	filtered_top		37667	1					
ANR	38402	AssignmentExpression	* filtered_top = filtered_top_array + 1		37667	2		=			
ANR	38403	Identifier	filtered_top		37667	0					
ANR	38404	AdditiveExpression	filtered_top_array + 1		37667	1		+			
ANR	38405	Identifier	filtered_top_array		37667	0					
ANR	38406	PrimaryExpression	1		37667	1					
ANR	38407	IdentifierDeclStatement	"int cand_bottom_left = lc -> na . cand_bottom_left && cur_tb_addr > MIN_TB_ADDR_ZS ( x_tb - 1 , y_tb + size_in_tbs ) ;"	141:4:2953:3061	37667	316	True				
ANR	38408	IdentifierDecl	"cand_bottom_left = lc -> na . cand_bottom_left && cur_tb_addr > MIN_TB_ADDR_ZS ( x_tb - 1 , y_tb + size_in_tbs )"		37667	0					
ANR	38409	IdentifierDeclType	int		37667	0					
ANR	38410	Identifier	cand_bottom_left		37667	1					
ANR	38411	AssignmentExpression	"cand_bottom_left = lc -> na . cand_bottom_left && cur_tb_addr > MIN_TB_ADDR_ZS ( x_tb - 1 , y_tb + size_in_tbs )"		37667	2		=			
ANR	38412	Identifier	cand_bottom_left		37667	0					
ANR	38413	AndExpression	"lc -> na . cand_bottom_left && cur_tb_addr > MIN_TB_ADDR_ZS ( x_tb - 1 , y_tb + size_in_tbs )"		37667	1		&&			
ANR	38414	MemberAccess	lc -> na . cand_bottom_left		37667	0					
ANR	38415	PtrMemberAccess	lc -> na		37667	0					
ANR	38416	Identifier	lc		37667	0					
ANR	38417	Identifier	na		37667	1					
ANR	38418	Identifier	cand_bottom_left		37667	1					
ANR	38419	RelationalExpression	"cur_tb_addr > MIN_TB_ADDR_ZS ( x_tb - 1 , y_tb + size_in_tbs )"		37667	1		>			
ANR	38420	Identifier	cur_tb_addr		37667	0					
ANR	38421	CallExpression	"MIN_TB_ADDR_ZS ( x_tb - 1 , y_tb + size_in_tbs )"		37667	1					
ANR	38422	Callee	MIN_TB_ADDR_ZS		37667	0					
ANR	38423	Identifier	MIN_TB_ADDR_ZS		37667	0					
ANR	38424	ArgumentList	x_tb - 1		37667	1					
ANR	38425	Argument	x_tb - 1		37667	0					
ANR	38426	AdditiveExpression	x_tb - 1		37667	0		-			
ANR	38427	Identifier	x_tb		37667	0					
ANR	38428	PrimaryExpression	1		37667	1					
ANR	38429	Argument	y_tb + size_in_tbs		37667	1					
ANR	38430	AdditiveExpression	y_tb + size_in_tbs		37667	0		+			
ANR	38431	Identifier	y_tb		37667	0					
ANR	38432	Identifier	size_in_tbs		37667	1					
ANR	38433	IdentifierDeclStatement	int cand_left = lc -> na . cand_left ;	143:4:3068:3107	37667	317	True				
ANR	38434	IdentifierDecl	cand_left = lc -> na . cand_left		37667	0					
ANR	38435	IdentifierDeclType	int		37667	0					
ANR	38436	Identifier	cand_left		37667	1					
ANR	38437	AssignmentExpression	cand_left = lc -> na . cand_left		37667	2		=			
ANR	38438	Identifier	cand_left		37667	0					
ANR	38439	MemberAccess	lc -> na . cand_left		37667	1					
ANR	38440	PtrMemberAccess	lc -> na		37667	0					
ANR	38441	Identifier	lc		37667	0					
ANR	38442	Identifier	na		37667	1					
ANR	38443	Identifier	cand_left		37667	1					
ANR	38444	IdentifierDeclStatement	int cand_up_left = lc -> na . cand_up_left ;	145:4:3114:3156	37667	318	True				
ANR	38445	IdentifierDecl	cand_up_left = lc -> na . cand_up_left		37667	0					
ANR	38446	IdentifierDeclType	int		37667	0					
ANR	38447	Identifier	cand_up_left		37667	1					
ANR	38448	AssignmentExpression	cand_up_left = lc -> na . cand_up_left		37667	2		=			
ANR	38449	Identifier	cand_up_left		37667	0					
ANR	38450	MemberAccess	lc -> na . cand_up_left		37667	1					
ANR	38451	PtrMemberAccess	lc -> na		37667	0					
ANR	38452	Identifier	lc		37667	0					
ANR	38453	Identifier	na		37667	1					
ANR	38454	Identifier	cand_up_left		37667	1					
ANR	38455	IdentifierDeclStatement	int cand_up = lc -> na . cand_up ;	147:4:3163:3200	37667	319	True				
ANR	38456	IdentifierDecl	cand_up = lc -> na . cand_up		37667	0					
ANR	38457	IdentifierDeclType	int		37667	0					
ANR	38458	Identifier	cand_up		37667	1					
ANR	38459	AssignmentExpression	cand_up = lc -> na . cand_up		37667	2		=			
ANR	38460	Identifier	cand_up		37667	0					
ANR	38461	MemberAccess	lc -> na . cand_up		37667	1					
ANR	38462	PtrMemberAccess	lc -> na		37667	0					
ANR	38463	Identifier	lc		37667	0					
ANR	38464	Identifier	na		37667	1					
ANR	38465	Identifier	cand_up		37667	1					
ANR	38466	IdentifierDeclStatement	"int cand_up_right = lc -> na . cand_up_right && cur_tb_addr > MIN_TB_ADDR_ZS ( x_tb + size_in_tbs , y_tb - 1 ) ;"	149:4:3207:3312	37667	320	True				
ANR	38467	IdentifierDecl	"cand_up_right = lc -> na . cand_up_right && cur_tb_addr > MIN_TB_ADDR_ZS ( x_tb + size_in_tbs , y_tb - 1 )"		37667	0					
ANR	38468	IdentifierDeclType	int		37667	0					
ANR	38469	Identifier	cand_up_right		37667	1					
ANR	38470	AssignmentExpression	"cand_up_right = lc -> na . cand_up_right && cur_tb_addr > MIN_TB_ADDR_ZS ( x_tb + size_in_tbs , y_tb - 1 )"		37667	2		=			
ANR	38471	Identifier	cand_up_right		37667	0					
ANR	38472	AndExpression	"lc -> na . cand_up_right && cur_tb_addr > MIN_TB_ADDR_ZS ( x_tb + size_in_tbs , y_tb - 1 )"		37667	1		&&			
ANR	38473	MemberAccess	lc -> na . cand_up_right		37667	0					
ANR	38474	PtrMemberAccess	lc -> na		37667	0					
ANR	38475	Identifier	lc		37667	0					
ANR	38476	Identifier	na		37667	1					
ANR	38477	Identifier	cand_up_right		37667	1					
ANR	38478	RelationalExpression	"cur_tb_addr > MIN_TB_ADDR_ZS ( x_tb + size_in_tbs , y_tb - 1 )"		37667	1		>			
ANR	38479	Identifier	cur_tb_addr		37667	0					
ANR	38480	CallExpression	"MIN_TB_ADDR_ZS ( x_tb + size_in_tbs , y_tb - 1 )"		37667	1					
ANR	38481	Callee	MIN_TB_ADDR_ZS		37667	0					
ANR	38482	Identifier	MIN_TB_ADDR_ZS		37667	0					
ANR	38483	ArgumentList	x_tb + size_in_tbs		37667	1					
ANR	38484	Argument	x_tb + size_in_tbs		37667	0					
ANR	38485	AdditiveExpression	x_tb + size_in_tbs		37667	0		+			
ANR	38486	Identifier	x_tb		37667	0					
ANR	38487	Identifier	size_in_tbs		37667	1					
ANR	38488	Argument	y_tb - 1		37667	1					
ANR	38489	AdditiveExpression	y_tb - 1		37667	0		-			
ANR	38490	Identifier	y_tb		37667	0					
ANR	38491	PrimaryExpression	1		37667	1					
ANR	38492	IdentifierDeclStatement	"int bottom_left_size = ( FFMIN ( y0 + 2 * size_in_luma , s -> sps -> height ) - ( y0 + size_in_luma ) ) >> vshift ;"	153:4:3321:3451	37667	321	True				
ANR	38493	IdentifierDecl	"bottom_left_size = ( FFMIN ( y0 + 2 * size_in_luma , s -> sps -> height ) - ( y0 + size_in_luma ) ) >> vshift"		37667	0					
ANR	38494	IdentifierDeclType	int		37667	0					
ANR	38495	Identifier	bottom_left_size		37667	1					
ANR	38496	AssignmentExpression	"bottom_left_size = ( FFMIN ( y0 + 2 * size_in_luma , s -> sps -> height ) - ( y0 + size_in_luma ) ) >> vshift"		37667	2		=			
ANR	38497	Identifier	bottom_left_size		37667	0					
ANR	38498	ShiftExpression	"( FFMIN ( y0 + 2 * size_in_luma , s -> sps -> height ) - ( y0 + size_in_luma ) ) >> vshift"		37667	1		>>			
ANR	38499	AdditiveExpression	"FFMIN ( y0 + 2 * size_in_luma , s -> sps -> height ) - ( y0 + size_in_luma )"		37667	0		-			
ANR	38500	CallExpression	"FFMIN ( y0 + 2 * size_in_luma , s -> sps -> height )"		37667	0					
ANR	38501	Callee	FFMIN		37667	0					
ANR	38502	Identifier	FFMIN		37667	0					
ANR	38503	ArgumentList	y0 + 2 * size_in_luma		37667	1					
ANR	38504	Argument	y0 + 2 * size_in_luma		37667	0					
ANR	38505	AdditiveExpression	y0 + 2 * size_in_luma		37667	0		+			
ANR	38506	Identifier	y0		37667	0					
ANR	38507	MultiplicativeExpression	2 * size_in_luma		37667	1		*			
ANR	38508	PrimaryExpression	2		37667	0					
ANR	38509	Identifier	size_in_luma		37667	1					
ANR	38510	Argument	s -> sps -> height		37667	1					
ANR	38511	PtrMemberAccess	s -> sps -> height		37667	0					
ANR	38512	PtrMemberAccess	s -> sps		37667	0					
ANR	38513	Identifier	s		37667	0					
ANR	38514	Identifier	sps		37667	1					
ANR	38515	Identifier	height		37667	1					
ANR	38516	AdditiveExpression	y0 + size_in_luma		37667	1		+			
ANR	38517	Identifier	y0		37667	0					
ANR	38518	Identifier	size_in_luma		37667	1					
ANR	38519	Identifier	vshift		37667	1					
ANR	38520	IdentifierDeclStatement	"int top_right_size = ( FFMIN ( x0 + 2 * size_in_luma , s -> sps -> width ) - ( x0 + size_in_luma ) ) >> hshift ;"	157:4:3458:3587	37667	322	True				
ANR	38521	IdentifierDecl	"top_right_size = ( FFMIN ( x0 + 2 * size_in_luma , s -> sps -> width ) - ( x0 + size_in_luma ) ) >> hshift"		37667	0					
ANR	38522	IdentifierDeclType	int		37667	0					
ANR	38523	Identifier	top_right_size		37667	1					
ANR	38524	AssignmentExpression	"top_right_size = ( FFMIN ( x0 + 2 * size_in_luma , s -> sps -> width ) - ( x0 + size_in_luma ) ) >> hshift"		37667	2		=			
ANR	38525	Identifier	top_right_size		37667	0					
ANR	38526	ShiftExpression	"( FFMIN ( x0 + 2 * size_in_luma , s -> sps -> width ) - ( x0 + size_in_luma ) ) >> hshift"		37667	1		>>			
ANR	38527	AdditiveExpression	"FFMIN ( x0 + 2 * size_in_luma , s -> sps -> width ) - ( x0 + size_in_luma )"		37667	0		-			
ANR	38528	CallExpression	"FFMIN ( x0 + 2 * size_in_luma , s -> sps -> width )"		37667	0					
ANR	38529	Callee	FFMIN		37667	0					
ANR	38530	Identifier	FFMIN		37667	0					
ANR	38531	ArgumentList	x0 + 2 * size_in_luma		37667	1					
ANR	38532	Argument	x0 + 2 * size_in_luma		37667	0					
ANR	38533	AdditiveExpression	x0 + 2 * size_in_luma		37667	0		+			
ANR	38534	Identifier	x0		37667	0					
ANR	38535	MultiplicativeExpression	2 * size_in_luma		37667	1		*			
ANR	38536	PrimaryExpression	2		37667	0					
ANR	38537	Identifier	size_in_luma		37667	1					
ANR	38538	Argument	s -> sps -> width		37667	1					
ANR	38539	PtrMemberAccess	s -> sps -> width		37667	0					
ANR	38540	PtrMemberAccess	s -> sps		37667	0					
ANR	38541	Identifier	s		37667	0					
ANR	38542	Identifier	sps		37667	1					
ANR	38543	Identifier	width		37667	1					
ANR	38544	AdditiveExpression	x0 + size_in_luma		37667	1		+			
ANR	38545	Identifier	x0		37667	0					
ANR	38546	Identifier	size_in_luma		37667	1					
ANR	38547	Identifier	hshift		37667	1					
ANR	38548	IfStatement	if ( s -> pps -> constrained_intra_pred_flag == 1 )		37667	323					
ANR	38549	Condition	s -> pps -> constrained_intra_pred_flag == 1	163:8:3600:3639	37667	0	True				
ANR	38550	EqualityExpression	s -> pps -> constrained_intra_pred_flag == 1		37667	0		==			
ANR	38551	PtrMemberAccess	s -> pps -> constrained_intra_pred_flag		37667	0					
ANR	38552	PtrMemberAccess	s -> pps		37667	0					
ANR	38553	Identifier	s		37667	0					
ANR	38554	Identifier	pps		37667	1					
ANR	38555	Identifier	constrained_intra_pred_flag		37667	1					
ANR	38556	PrimaryExpression	1		37667	1					
ANR	38557	CompoundStatement		167:8:3688:3752	37667	1					
ANR	38558	IdentifierDeclStatement	int size_in_luma_pu = PU ( size_in_luma ) ;	165:8:3653:3691	37667	0	True				
ANR	38559	IdentifierDecl	size_in_luma_pu = PU ( size_in_luma )		37667	0					
ANR	38560	IdentifierDeclType	int		37667	0					
ANR	38561	Identifier	size_in_luma_pu		37667	1					
ANR	38562	AssignmentExpression	size_in_luma_pu = PU ( size_in_luma )		37667	2		=			
ANR	38563	Identifier	size_in_luma_pu		37667	0					
ANR	38564	CallExpression	PU ( size_in_luma )		37667	1					
ANR	38565	Callee	PU		37667	0					
ANR	38566	Identifier	PU		37667	0					
ANR	38567	ArgumentList	size_in_luma		37667	1					
ANR	38568	Argument	size_in_luma		37667	0					
ANR	38569	Identifier	size_in_luma		37667	0					
ANR	38570	IdentifierDeclStatement	int on_pu_edge_x = ! ( x0 & ( ( 1 << s -> sps -> log2_min_pu_size ) - 1 ) ) ;	167:8:3702:3766	37667	1	True				
ANR	38571	IdentifierDecl	on_pu_edge_x = ! ( x0 & ( ( 1 << s -> sps -> log2_min_pu_size ) - 1 ) )		37667	0					
ANR	38572	IdentifierDeclType	int		37667	0					
ANR	38573	Identifier	on_pu_edge_x		37667	1					
ANR	38574	AssignmentExpression	on_pu_edge_x = ! ( x0 & ( ( 1 << s -> sps -> log2_min_pu_size ) - 1 ) )		37667	2		=			
ANR	38575	Identifier	on_pu_edge_x		37667	0					
ANR	38576	UnaryOperationExpression	! ( x0 & ( ( 1 << s -> sps -> log2_min_pu_size ) - 1 ) )		37667	1					
ANR	38577	UnaryOperator	!		37667	0					
ANR	38578	BitAndExpression	x0 & ( ( 1 << s -> sps -> log2_min_pu_size ) - 1 )		37667	1		&			
ANR	38579	Identifier	x0		37667	0					
ANR	38580	AdditiveExpression	( 1 << s -> sps -> log2_min_pu_size ) - 1		37667	1		-			
ANR	38581	ShiftExpression	1 << s -> sps -> log2_min_pu_size		37667	0		<<			
ANR	38582	PrimaryExpression	1		37667	0					
ANR	38583	PtrMemberAccess	s -> sps -> log2_min_pu_size		37667	1					
ANR	38584	PtrMemberAccess	s -> sps		37667	0					
ANR	38585	Identifier	s		37667	0					
ANR	38586	Identifier	sps		37667	1					
ANR	38587	Identifier	log2_min_pu_size		37667	1					
ANR	38588	PrimaryExpression	1		37667	1					
ANR	38589	IdentifierDeclStatement	int on_pu_edge_y = ! ( y0 & ( ( 1 << s -> sps -> log2_min_pu_size ) - 1 ) ) ;	169:8:3777:3841	37667	2	True				
ANR	38590	IdentifierDecl	on_pu_edge_y = ! ( y0 & ( ( 1 << s -> sps -> log2_min_pu_size ) - 1 ) )		37667	0					
ANR	38591	IdentifierDeclType	int		37667	0					
ANR	38592	Identifier	on_pu_edge_y		37667	1					
ANR	38593	AssignmentExpression	on_pu_edge_y = ! ( y0 & ( ( 1 << s -> sps -> log2_min_pu_size ) - 1 ) )		37667	2		=			
ANR	38594	Identifier	on_pu_edge_y		37667	0					
ANR	38595	UnaryOperationExpression	! ( y0 & ( ( 1 << s -> sps -> log2_min_pu_size ) - 1 ) )		37667	1					
ANR	38596	UnaryOperator	!		37667	0					
ANR	38597	BitAndExpression	y0 & ( ( 1 << s -> sps -> log2_min_pu_size ) - 1 )		37667	1		&			
ANR	38598	Identifier	y0		37667	0					
ANR	38599	AdditiveExpression	( 1 << s -> sps -> log2_min_pu_size ) - 1		37667	1		-			
ANR	38600	ShiftExpression	1 << s -> sps -> log2_min_pu_size		37667	0		<<			
ANR	38601	PrimaryExpression	1		37667	0					
ANR	38602	PtrMemberAccess	s -> sps -> log2_min_pu_size		37667	1					
ANR	38603	PtrMemberAccess	s -> sps		37667	0					
ANR	38604	Identifier	s		37667	0					
ANR	38605	Identifier	sps		37667	1					
ANR	38606	Identifier	log2_min_pu_size		37667	1					
ANR	38607	PrimaryExpression	1		37667	1					
ANR	38608	IfStatement	if ( ! size_in_luma_pu )		37667	3					
ANR	38609	Condition	! size_in_luma_pu	171:11:3855:3870	37667	0	True				
ANR	38610	UnaryOperationExpression	! size_in_luma_pu		37667	0					
ANR	38611	UnaryOperator	!		37667	0					
ANR	38612	Identifier	size_in_luma_pu		37667	1					
ANR	38613	ExpressionStatement	size_in_luma_pu ++	173:12:3886:3903	37667	1	True				
ANR	38614	PostIncDecOperationExpression	size_in_luma_pu ++		37667	0					
ANR	38615	Identifier	size_in_luma_pu		37667	0					
ANR	38616	IncDec	++		37667	1					
ANR	38617	IfStatement	if ( cand_bottom_left == 1 && on_pu_edge_x )		37667	4					
ANR	38618	Condition	cand_bottom_left == 1 && on_pu_edge_x	175:12:3918:3954	37667	0	True				
ANR	38619	AndExpression	cand_bottom_left == 1 && on_pu_edge_x		37667	0		&&			
ANR	38620	EqualityExpression	cand_bottom_left == 1		37667	0		==			
ANR	38621	Identifier	cand_bottom_left		37667	0					
ANR	38622	PrimaryExpression	1		37667	1					
ANR	38623	Identifier	on_pu_edge_x		37667	1					
ANR	38624	CompoundStatement		177:12:3926:3965	37667	1					
ANR	38625	IdentifierDeclStatement	int x_left_pu = PU ( x0 - 1 ) ;	177:12:3972:4000	37667	0	True				
ANR	38626	IdentifierDecl	x_left_pu = PU ( x0 - 1 )		37667	0					
ANR	38627	IdentifierDeclType	int		37667	0					
ANR	38628	Identifier	x_left_pu		37667	1					
ANR	38629	AssignmentExpression	x_left_pu = PU ( x0 - 1 )		37667	2		=			
ANR	38630	Identifier	x_left_pu		37667	0					
ANR	38631	CallExpression	PU ( x0 - 1 )		37667	1					
ANR	38632	Callee	PU		37667	0					
ANR	38633	Identifier	PU		37667	0					
ANR	38634	ArgumentList	x0 - 1		37667	1					
ANR	38635	Argument	x0 - 1		37667	0					
ANR	38636	AdditiveExpression	x0 - 1		37667	0		-			
ANR	38637	Identifier	x0		37667	0					
ANR	38638	PrimaryExpression	1		37667	1					
ANR	38639	IdentifierDeclStatement	int y_bottom_pu = PU ( y0 + size_in_luma ) ;	179:12:4015:4054	37667	1	True				
ANR	38640	IdentifierDecl	y_bottom_pu = PU ( y0 + size_in_luma )		37667	0					
ANR	38641	IdentifierDeclType	int		37667	0					
ANR	38642	Identifier	y_bottom_pu		37667	1					
ANR	38643	AssignmentExpression	y_bottom_pu = PU ( y0 + size_in_luma )		37667	2		=			
ANR	38644	Identifier	y_bottom_pu		37667	0					
ANR	38645	CallExpression	PU ( y0 + size_in_luma )		37667	1					
ANR	38646	Callee	PU		37667	0					
ANR	38647	Identifier	PU		37667	0					
ANR	38648	ArgumentList	y0 + size_in_luma		37667	1					
ANR	38649	Argument	y0 + size_in_luma		37667	0					
ANR	38650	AdditiveExpression	y0 + size_in_luma		37667	0		+			
ANR	38651	Identifier	y0		37667	0					
ANR	38652	Identifier	size_in_luma		37667	1					
ANR	38653	ExpressionStatement	cand_bottom_left = 0	181:12:4069:4089	37667	2	True				
ANR	38654	AssignmentExpression	cand_bottom_left = 0		37667	0		=			
ANR	38655	Identifier	cand_bottom_left		37667	0					
ANR	38656	PrimaryExpression	0		37667	1					
ANR	38657	ForStatement	for ( i = 0 ; i < size_in_luma_pu ; i ++ )		37667	3					
ANR	38658	ForInit	i = 0 ;	183:16:4108:4113	37667	0	True				
ANR	38659	AssignmentExpression	i = 0		37667	0		=			
ANR	38660	Identifier	i		37667	0					
ANR	38661	PrimaryExpression	0		37667	1					
ANR	38662	Condition	i < size_in_luma_pu	183:23:4115:4133	37667	1	True				
ANR	38663	RelationalExpression	i < size_in_luma_pu		37667	0		<			
ANR	38664	Identifier	i		37667	0					
ANR	38665	Identifier	size_in_luma_pu		37667	1					
ANR	38666	PostIncDecOperationExpression	i ++	183:44:4136:4138	37667	2	True				
ANR	38667	Identifier	i		37667	0					
ANR	38668	IncDec	++		37667	1					
ANR	38669	ExpressionStatement	"cand_bottom_left |= MVF ( x_left_pu , y_bottom_pu + i ) . is_intra"	185:16:4158:4218	37667	3	True				
ANR	38670	AssignmentExpression	"cand_bottom_left |= MVF ( x_left_pu , y_bottom_pu + i ) . is_intra"		37667	0		|=			
ANR	38671	Identifier	cand_bottom_left		37667	0					
ANR	38672	MemberAccess	"MVF ( x_left_pu , y_bottom_pu + i ) . is_intra"		37667	1					
ANR	38673	CallExpression	"MVF ( x_left_pu , y_bottom_pu + i )"		37667	0					
ANR	38674	Callee	MVF		37667	0					
ANR	38675	Identifier	MVF		37667	0					
ANR	38676	ArgumentList	x_left_pu		37667	1					
ANR	38677	Argument	x_left_pu		37667	0					
ANR	38678	Identifier	x_left_pu		37667	0					
ANR	38679	Argument	y_bottom_pu + i		37667	1					
ANR	38680	AdditiveExpression	y_bottom_pu + i		37667	0		+			
ANR	38681	Identifier	y_bottom_pu		37667	0					
ANR	38682	Identifier	i		37667	1					
ANR	38683	Identifier	is_intra		37667	1					
ANR	38684	IfStatement	if ( cand_left == 1 && on_pu_edge_x )		37667	5					
ANR	38685	Condition	cand_left == 1 && on_pu_edge_x	189:12:4244:4273	37667	0	True				
ANR	38686	AndExpression	cand_left == 1 && on_pu_edge_x		37667	0		&&			
ANR	38687	EqualityExpression	cand_left == 1		37667	0		==			
ANR	38688	Identifier	cand_left		37667	0					
ANR	38689	PrimaryExpression	1		37667	1					
ANR	38690	Identifier	on_pu_edge_x		37667	1					
ANR	38691	CompoundStatement		191:12:4245:4269	37667	1					
ANR	38692	IdentifierDeclStatement	int x_left_pu = PU ( x0 - 1 ) ;	191:12:4291:4319	37667	0	True				
ANR	38693	IdentifierDecl	x_left_pu = PU ( x0 - 1 )		37667	0					
ANR	38694	IdentifierDeclType	int		37667	0					
ANR	38695	Identifier	x_left_pu		37667	1					
ANR	38696	AssignmentExpression	x_left_pu = PU ( x0 - 1 )		37667	2		=			
ANR	38697	Identifier	x_left_pu		37667	0					
ANR	38698	CallExpression	PU ( x0 - 1 )		37667	1					
ANR	38699	Callee	PU		37667	0					
ANR	38700	Identifier	PU		37667	0					
ANR	38701	ArgumentList	x0 - 1		37667	1					
ANR	38702	Argument	x0 - 1		37667	0					
ANR	38703	AdditiveExpression	x0 - 1		37667	0		-			
ANR	38704	Identifier	x0		37667	0					
ANR	38705	PrimaryExpression	1		37667	1					
ANR	38706	IdentifierDeclStatement	int y_left_pu = PU ( y0 ) ;	193:12:4334:4358	37667	1	True				
ANR	38707	IdentifierDecl	y_left_pu = PU ( y0 )		37667	0					
ANR	38708	IdentifierDeclType	int		37667	0					
ANR	38709	Identifier	y_left_pu		37667	1					
ANR	38710	AssignmentExpression	y_left_pu = PU ( y0 )		37667	2		=			
ANR	38711	Identifier	y_left_pu		37667	0					
ANR	38712	CallExpression	PU ( y0 )		37667	1					
ANR	38713	Callee	PU		37667	0					
ANR	38714	Identifier	PU		37667	0					
ANR	38715	ArgumentList	y0		37667	1					
ANR	38716	Argument	y0		37667	0					
ANR	38717	Identifier	y0		37667	0					
ANR	38718	ExpressionStatement	cand_left = 0	195:12:4373:4386	37667	2	True				
ANR	38719	AssignmentExpression	cand_left = 0		37667	0		=			
ANR	38720	Identifier	cand_left		37667	0					
ANR	38721	PrimaryExpression	0		37667	1					
ANR	38722	ForStatement	for ( i = 0 ; i < size_in_luma_pu ; i ++ )		37667	3					
ANR	38723	ForInit	i = 0 ;	197:16:4405:4410	37667	0	True				
ANR	38724	AssignmentExpression	i = 0		37667	0		=			
ANR	38725	Identifier	i		37667	0					
ANR	38726	PrimaryExpression	0		37667	1					
ANR	38727	Condition	i < size_in_luma_pu	197:23:4412:4430	37667	1	True				
ANR	38728	RelationalExpression	i < size_in_luma_pu		37667	0		<			
ANR	38729	Identifier	i		37667	0					
ANR	38730	Identifier	size_in_luma_pu		37667	1					
ANR	38731	PostIncDecOperationExpression	i ++	197:44:4433:4435	37667	2	True				
ANR	38732	Identifier	i		37667	0					
ANR	38733	IncDec	++		37667	1					
ANR	38734	ExpressionStatement	"cand_left |= MVF ( x_left_pu , y_left_pu + i ) . is_intra"	199:16:4455:4506	37667	3	True				
ANR	38735	AssignmentExpression	"cand_left |= MVF ( x_left_pu , y_left_pu + i ) . is_intra"		37667	0		|=			
ANR	38736	Identifier	cand_left		37667	0					
ANR	38737	MemberAccess	"MVF ( x_left_pu , y_left_pu + i ) . is_intra"		37667	1					
ANR	38738	CallExpression	"MVF ( x_left_pu , y_left_pu + i )"		37667	0					
ANR	38739	Callee	MVF		37667	0					
ANR	38740	Identifier	MVF		37667	0					
ANR	38741	ArgumentList	x_left_pu		37667	1					
ANR	38742	Argument	x_left_pu		37667	0					
ANR	38743	Identifier	x_left_pu		37667	0					
ANR	38744	Argument	y_left_pu + i		37667	1					
ANR	38745	AdditiveExpression	y_left_pu + i		37667	0		+			
ANR	38746	Identifier	y_left_pu		37667	0					
ANR	38747	Identifier	i		37667	1					
ANR	38748	Identifier	is_intra		37667	1					
ANR	38749	IfStatement	if ( cand_up_left == 1 )		37667	6					
ANR	38750	Condition	cand_up_left == 1	203:12:4532:4548	37667	0	True				
ANR	38751	EqualityExpression	cand_up_left == 1		37667	0		==			
ANR	38752	Identifier	cand_up_left		37667	0					
ANR	38753	PrimaryExpression	1		37667	1					
ANR	38754	CompoundStatement		205:12:4520:4548	37667	1					
ANR	38755	IdentifierDeclStatement	int x_left_pu = PU ( x0 - 1 ) ;	205:12:4566:4594	37667	0	True				
ANR	38756	IdentifierDecl	x_left_pu = PU ( x0 - 1 )		37667	0					
ANR	38757	IdentifierDeclType	int		37667	0					
ANR	38758	Identifier	x_left_pu		37667	1					
ANR	38759	AssignmentExpression	x_left_pu = PU ( x0 - 1 )		37667	2		=			
ANR	38760	Identifier	x_left_pu		37667	0					
ANR	38761	CallExpression	PU ( x0 - 1 )		37667	1					
ANR	38762	Callee	PU		37667	0					
ANR	38763	Identifier	PU		37667	0					
ANR	38764	ArgumentList	x0 - 1		37667	1					
ANR	38765	Argument	x0 - 1		37667	0					
ANR	38766	AdditiveExpression	x0 - 1		37667	0		-			
ANR	38767	Identifier	x0		37667	0					
ANR	38768	PrimaryExpression	1		37667	1					
ANR	38769	IdentifierDeclStatement	int y_top_pu = PU ( y0 - 1 ) ;	207:12:4609:4637	37667	1	True				
ANR	38770	IdentifierDecl	y_top_pu = PU ( y0 - 1 )		37667	0					
ANR	38771	IdentifierDeclType	int		37667	0					
ANR	38772	Identifier	y_top_pu		37667	1					
ANR	38773	AssignmentExpression	y_top_pu = PU ( y0 - 1 )		37667	2		=			
ANR	38774	Identifier	y_top_pu		37667	0					
ANR	38775	CallExpression	PU ( y0 - 1 )		37667	1					
ANR	38776	Callee	PU		37667	0					
ANR	38777	Identifier	PU		37667	0					
ANR	38778	ArgumentList	y0 - 1		37667	1					
ANR	38779	Argument	y0 - 1		37667	0					
ANR	38780	AdditiveExpression	y0 - 1		37667	0		-			
ANR	38781	Identifier	y0		37667	0					
ANR	38782	PrimaryExpression	1		37667	1					
ANR	38783	ExpressionStatement	"cand_up_left = MVF ( x_left_pu , y_top_pu ) . is_intra"	209:12:4652:4700	37667	2	True				
ANR	38784	AssignmentExpression	"cand_up_left = MVF ( x_left_pu , y_top_pu ) . is_intra"		37667	0		=			
ANR	38785	Identifier	cand_up_left		37667	0					
ANR	38786	MemberAccess	"MVF ( x_left_pu , y_top_pu ) . is_intra"		37667	1					
ANR	38787	CallExpression	"MVF ( x_left_pu , y_top_pu )"		37667	0					
ANR	38788	Callee	MVF		37667	0					
ANR	38789	Identifier	MVF		37667	0					
ANR	38790	ArgumentList	x_left_pu		37667	1					
ANR	38791	Argument	x_left_pu		37667	0					
ANR	38792	Identifier	x_left_pu		37667	0					
ANR	38793	Argument	y_top_pu		37667	1					
ANR	38794	Identifier	y_top_pu		37667	0					
ANR	38795	Identifier	is_intra		37667	1					
ANR	38796	IfStatement	if ( cand_up == 1 && on_pu_edge_y )		37667	7					
ANR	38797	Condition	cand_up == 1 && on_pu_edge_y	213:12:4726:4753	37667	0	True				
ANR	38798	AndExpression	cand_up == 1 && on_pu_edge_y		37667	0		&&			
ANR	38799	EqualityExpression	cand_up == 1		37667	0		==			
ANR	38800	Identifier	cand_up		37667	0					
ANR	38801	PrimaryExpression	1		37667	1					
ANR	38802	Identifier	on_pu_edge_y		37667	1					
ANR	38803	CompoundStatement		215:12:4721:4749	37667	1					
ANR	38804	IdentifierDeclStatement	int x_top_pu = PU ( x0 ) ;	215:12:4771:4795	37667	0	True				
ANR	38805	IdentifierDecl	x_top_pu = PU ( x0 )		37667	0					
ANR	38806	IdentifierDeclType	int		37667	0					
ANR	38807	Identifier	x_top_pu		37667	1					
ANR	38808	AssignmentExpression	x_top_pu = PU ( x0 )		37667	2		=			
ANR	38809	Identifier	x_top_pu		37667	0					
ANR	38810	CallExpression	PU ( x0 )		37667	1					
ANR	38811	Callee	PU		37667	0					
ANR	38812	Identifier	PU		37667	0					
ANR	38813	ArgumentList	x0		37667	1					
ANR	38814	Argument	x0		37667	0					
ANR	38815	Identifier	x0		37667	0					
ANR	38816	IdentifierDeclStatement	int y_top_pu = PU ( y0 - 1 ) ;	217:12:4810:4838	37667	1	True				
ANR	38817	IdentifierDecl	y_top_pu = PU ( y0 - 1 )		37667	0					
ANR	38818	IdentifierDeclType	int		37667	0					
ANR	38819	Identifier	y_top_pu		37667	1					
ANR	38820	AssignmentExpression	y_top_pu = PU ( y0 - 1 )		37667	2		=			
ANR	38821	Identifier	y_top_pu		37667	0					
ANR	38822	CallExpression	PU ( y0 - 1 )		37667	1					
ANR	38823	Callee	PU		37667	0					
ANR	38824	Identifier	PU		37667	0					
ANR	38825	ArgumentList	y0 - 1		37667	1					
ANR	38826	Argument	y0 - 1		37667	0					
ANR	38827	AdditiveExpression	y0 - 1		37667	0		-			
ANR	38828	Identifier	y0		37667	0					
ANR	38829	PrimaryExpression	1		37667	1					
ANR	38830	ExpressionStatement	cand_up = 0	219:12:4853:4864	37667	2	True				
ANR	38831	AssignmentExpression	cand_up = 0		37667	0		=			
ANR	38832	Identifier	cand_up		37667	0					
ANR	38833	PrimaryExpression	0		37667	1					
ANR	38834	ForStatement	for ( i = 0 ; i < size_in_luma_pu ; i ++ )		37667	3					
ANR	38835	ForInit	i = 0 ;	221:16:4883:4888	37667	0	True				
ANR	38836	AssignmentExpression	i = 0		37667	0		=			
ANR	38837	Identifier	i		37667	0					
ANR	38838	PrimaryExpression	0		37667	1					
ANR	38839	Condition	i < size_in_luma_pu	221:23:4890:4908	37667	1	True				
ANR	38840	RelationalExpression	i < size_in_luma_pu		37667	0		<			
ANR	38841	Identifier	i		37667	0					
ANR	38842	Identifier	size_in_luma_pu		37667	1					
ANR	38843	PostIncDecOperationExpression	i ++	221:44:4911:4913	37667	2	True				
ANR	38844	Identifier	i		37667	0					
ANR	38845	IncDec	++		37667	1					
ANR	38846	ExpressionStatement	"cand_up |= MVF ( x_top_pu + i , y_top_pu ) . is_intra"	223:16:4933:4980	37667	3	True				
ANR	38847	AssignmentExpression	"cand_up |= MVF ( x_top_pu + i , y_top_pu ) . is_intra"		37667	0		|=			
ANR	38848	Identifier	cand_up		37667	0					
ANR	38849	MemberAccess	"MVF ( x_top_pu + i , y_top_pu ) . is_intra"		37667	1					
ANR	38850	CallExpression	"MVF ( x_top_pu + i , y_top_pu )"		37667	0					
ANR	38851	Callee	MVF		37667	0					
ANR	38852	Identifier	MVF		37667	0					
ANR	38853	ArgumentList	x_top_pu + i		37667	1					
ANR	38854	Argument	x_top_pu + i		37667	0					
ANR	38855	AdditiveExpression	x_top_pu + i		37667	0		+			
ANR	38856	Identifier	x_top_pu		37667	0					
ANR	38857	Identifier	i		37667	1					
ANR	38858	Argument	y_top_pu		37667	1					
ANR	38859	Identifier	y_top_pu		37667	0					
ANR	38860	Identifier	is_intra		37667	1					
ANR	38861	IfStatement	if ( cand_up_right == 1 && on_pu_edge_y )		37667	8					
ANR	38862	Condition	cand_up_right == 1 && on_pu_edge_y	227:12:5006:5039	37667	0	True				
ANR	38863	AndExpression	cand_up_right == 1 && on_pu_edge_y		37667	0		&&			
ANR	38864	EqualityExpression	cand_up_right == 1		37667	0		==			
ANR	38865	Identifier	cand_up_right		37667	0					
ANR	38866	PrimaryExpression	1		37667	1					
ANR	38867	Identifier	on_pu_edge_y		37667	1					
ANR	38868	CompoundStatement		229:12:5011:5050	37667	1					
ANR	38869	IdentifierDeclStatement	int y_top_pu = PU ( y0 - 1 ) ;	229:12:5057:5085	37667	0	True				
ANR	38870	IdentifierDecl	y_top_pu = PU ( y0 - 1 )		37667	0					
ANR	38871	IdentifierDeclType	int		37667	0					
ANR	38872	Identifier	y_top_pu		37667	1					
ANR	38873	AssignmentExpression	y_top_pu = PU ( y0 - 1 )		37667	2		=			
ANR	38874	Identifier	y_top_pu		37667	0					
ANR	38875	CallExpression	PU ( y0 - 1 )		37667	1					
ANR	38876	Callee	PU		37667	0					
ANR	38877	Identifier	PU		37667	0					
ANR	38878	ArgumentList	y0 - 1		37667	1					
ANR	38879	Argument	y0 - 1		37667	0					
ANR	38880	AdditiveExpression	y0 - 1		37667	0		-			
ANR	38881	Identifier	y0		37667	0					
ANR	38882	PrimaryExpression	1		37667	1					
ANR	38883	IdentifierDeclStatement	int x_right_pu = PU ( x0 + size_in_luma ) ;	231:12:5100:5139	37667	1	True				
ANR	38884	IdentifierDecl	x_right_pu = PU ( x0 + size_in_luma )		37667	0					
ANR	38885	IdentifierDeclType	int		37667	0					
ANR	38886	Identifier	x_right_pu		37667	1					
ANR	38887	AssignmentExpression	x_right_pu = PU ( x0 + size_in_luma )		37667	2		=			
ANR	38888	Identifier	x_right_pu		37667	0					
ANR	38889	CallExpression	PU ( x0 + size_in_luma )		37667	1					
ANR	38890	Callee	PU		37667	0					
ANR	38891	Identifier	PU		37667	0					
ANR	38892	ArgumentList	x0 + size_in_luma		37667	1					
ANR	38893	Argument	x0 + size_in_luma		37667	0					
ANR	38894	AdditiveExpression	x0 + size_in_luma		37667	0		+			
ANR	38895	Identifier	x0		37667	0					
ANR	38896	Identifier	size_in_luma		37667	1					
ANR	38897	ExpressionStatement	cand_up_right = 0	233:12:5154:5171	37667	2	True				
ANR	38898	AssignmentExpression	cand_up_right = 0		37667	0		=			
ANR	38899	Identifier	cand_up_right		37667	0					
ANR	38900	PrimaryExpression	0		37667	1					
ANR	38901	ForStatement	for ( i = 0 ; i < size_in_luma_pu ; i ++ )		37667	3					
ANR	38902	ForInit	i = 0 ;	235:16:5190:5195	37667	0	True				
ANR	38903	AssignmentExpression	i = 0		37667	0		=			
ANR	38904	Identifier	i		37667	0					
ANR	38905	PrimaryExpression	0		37667	1					
ANR	38906	Condition	i < size_in_luma_pu	235:23:5197:5215	37667	1	True				
ANR	38907	RelationalExpression	i < size_in_luma_pu		37667	0		<			
ANR	38908	Identifier	i		37667	0					
ANR	38909	Identifier	size_in_luma_pu		37667	1					
ANR	38910	PostIncDecOperationExpression	i ++	235:44:5218:5220	37667	2	True				
ANR	38911	Identifier	i		37667	0					
ANR	38912	IncDec	++		37667	1					
ANR	38913	ExpressionStatement	"cand_up_right |= MVF ( x_right_pu + i , y_top_pu ) . is_intra"	237:16:5240:5295	37667	3	True				
ANR	38914	AssignmentExpression	"cand_up_right |= MVF ( x_right_pu + i , y_top_pu ) . is_intra"		37667	0		|=			
ANR	38915	Identifier	cand_up_right		37667	0					
ANR	38916	MemberAccess	"MVF ( x_right_pu + i , y_top_pu ) . is_intra"		37667	1					
ANR	38917	CallExpression	"MVF ( x_right_pu + i , y_top_pu )"		37667	0					
ANR	38918	Callee	MVF		37667	0					
ANR	38919	Identifier	MVF		37667	0					
ANR	38920	ArgumentList	x_right_pu + i		37667	1					
ANR	38921	Argument	x_right_pu + i		37667	0					
ANR	38922	AdditiveExpression	x_right_pu + i		37667	0		+			
ANR	38923	Identifier	x_right_pu		37667	0					
ANR	38924	Identifier	i		37667	1					
ANR	38925	Argument	y_top_pu		37667	1					
ANR	38926	Identifier	y_top_pu		37667	0					
ANR	38927	Identifier	is_intra		37667	1					
ANR	38928	ForStatement	for ( i = 0 ; i < 2 * MAX_TB_SIZE ; i ++ )		37667	9					
ANR	38929	ForInit	i = 0 ;	241:13:5322:5327	37667	0	True				
ANR	38930	AssignmentExpression	i = 0		37667	0		=			
ANR	38931	Identifier	i		37667	0					
ANR	38932	PrimaryExpression	0		37667	1					
ANR	38933	Condition	i < 2 * MAX_TB_SIZE	241:20:5329:5347	37667	1	True				
ANR	38934	RelationalExpression	i < 2 * MAX_TB_SIZE		37667	0		<			
ANR	38935	Identifier	i		37667	0					
ANR	38936	MultiplicativeExpression	2 * MAX_TB_SIZE		37667	1		*			
ANR	38937	PrimaryExpression	2		37667	0					
ANR	38938	Identifier	MAX_TB_SIZE		37667	1					
ANR	38939	PostIncDecOperationExpression	i ++	241:41:5350:5352	37667	2	True				
ANR	38940	Identifier	i		37667	0					
ANR	38941	IncDec	++		37667	1					
ANR	38942	CompoundStatement		239:46:5266:5266	37667	3					
ANR	38943	ExpressionStatement	left [ i ] = 128	243:12:5370:5383	37667	0	True				
ANR	38944	AssignmentExpression	left [ i ] = 128		37667	0		=			
ANR	38945	ArrayIndexing	left [ i ]		37667	0					
ANR	38946	Identifier	left		37667	0					
ANR	38947	Identifier	i		37667	1					
ANR	38948	PrimaryExpression	128		37667	1					
ANR	38949	ExpressionStatement	top [ i ] = 128	245:12:5398:5411	37667	1	True				
ANR	38950	AssignmentExpression	top [ i ] = 128		37667	0		=			
ANR	38951	ArrayIndexing	top [ i ]		37667	0					
ANR	38952	Identifier	top		37667	0					
ANR	38953	Identifier	i		37667	1					
ANR	38954	PrimaryExpression	128		37667	1					
ANR	38955	IfStatement	if ( cand_bottom_left )		37667	324					
ANR	38956	Condition	cand_bottom_left	251:8:5440:5455	37667	0	True				
ANR	38957	Identifier	cand_bottom_left		37667	0					
ANR	38958	CompoundStatement		249:26:5369:5369	37667	1					
ANR	38959	ForStatement	for ( i = size + bottom_left_size ; i < ( size << 1 ) ; i ++ )		37667	0					
ANR	38960	ForInit	i = size + bottom_left_size ;	253:13:5474:5501	37667	0	True				
ANR	38961	AssignmentExpression	i = size + bottom_left_size		37667	0		=			
ANR	38962	Identifier	i		37667	0					
ANR	38963	AdditiveExpression	size + bottom_left_size		37667	1		+			
ANR	38964	Identifier	size		37667	0					
ANR	38965	Identifier	bottom_left_size		37667	1					
ANR	38966	Condition	i < ( size << 1 )	253:42:5503:5517	37667	1	True				
ANR	38967	RelationalExpression	i < ( size << 1 )		37667	0		<			
ANR	38968	Identifier	i		37667	0					
ANR	38969	ShiftExpression	size << 1		37667	1		<<			
ANR	38970	Identifier	size		37667	0					
ANR	38971	PrimaryExpression	1		37667	1					
ANR	38972	PostIncDecOperationExpression	i ++	253:59:5520:5522	37667	2	True				
ANR	38973	Identifier	i		37667	0					
ANR	38974	IncDec	++		37667	1					
ANR	38975	IfStatement	"if ( IS_INTRA ( - 1 , size + bottom_left_size - 1 ) || ! s -> pps -> constrained_intra_pred_flag )"		37667	3					
ANR	38976	Condition	"IS_INTRA ( - 1 , size + bottom_left_size - 1 ) || ! s -> pps -> constrained_intra_pred_flag"	255:16:5542:5622	37667	0	True				
ANR	38977	OrExpression	"IS_INTRA ( - 1 , size + bottom_left_size - 1 ) || ! s -> pps -> constrained_intra_pred_flag"		37667	0		||			
ANR	38978	CallExpression	"IS_INTRA ( - 1 , size + bottom_left_size - 1 )"		37667	0					
ANR	38979	Callee	IS_INTRA		37667	0					
ANR	38980	Identifier	IS_INTRA		37667	0					
ANR	38981	ArgumentList	- 1		37667	1					
ANR	38982	Argument	- 1		37667	0					
ANR	38983	UnaryOperationExpression	- 1		37667	0					
ANR	38984	UnaryOperator	-		37667	0					
ANR	38985	PrimaryExpression	1		37667	1					
ANR	38986	Argument	size + bottom_left_size - 1		37667	1					
ANR	38987	AdditiveExpression	size + bottom_left_size - 1		37667	0		+			
ANR	38988	Identifier	size		37667	0					
ANR	38989	AdditiveExpression	bottom_left_size - 1		37667	1		-			
ANR	38990	Identifier	bottom_left_size		37667	0					
ANR	38991	PrimaryExpression	1		37667	1					
ANR	38992	UnaryOperationExpression	! s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	38993	UnaryOperator	!		37667	0					
ANR	38994	PtrMemberAccess	s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	38995	PtrMemberAccess	s -> pps		37667	0					
ANR	38996	Identifier	s		37667	0					
ANR	38997	Identifier	pps		37667	1					
ANR	38998	Identifier	constrained_intra_pred_flag		37667	1					
ANR	38999	ExpressionStatement	"left [ i ] = POS ( - 1 , size + bottom_left_size - 1 )"	257:16:5642:5688	37667	1	True				
ANR	39000	AssignmentExpression	"left [ i ] = POS ( - 1 , size + bottom_left_size - 1 )"		37667	0		=			
ANR	39001	ArrayIndexing	left [ i ]		37667	0					
ANR	39002	Identifier	left		37667	0					
ANR	39003	Identifier	i		37667	1					
ANR	39004	CallExpression	"POS ( - 1 , size + bottom_left_size - 1 )"		37667	1					
ANR	39005	Callee	POS		37667	0					
ANR	39006	Identifier	POS		37667	0					
ANR	39007	ArgumentList	- 1		37667	1					
ANR	39008	Argument	- 1		37667	0					
ANR	39009	UnaryOperationExpression	- 1		37667	0					
ANR	39010	UnaryOperator	-		37667	0					
ANR	39011	PrimaryExpression	1		37667	1					
ANR	39012	Argument	size + bottom_left_size - 1		37667	1					
ANR	39013	AdditiveExpression	size + bottom_left_size - 1		37667	0		+			
ANR	39014	Identifier	size		37667	0					
ANR	39015	AdditiveExpression	bottom_left_size - 1		37667	1		-			
ANR	39016	Identifier	bottom_left_size		37667	0					
ANR	39017	PrimaryExpression	1		37667	1					
ANR	39018	ForStatement	for ( i = size + bottom_left_size - 1 ; i >= size ; i -- )		37667	1					
ANR	39019	ForInit	i = size + bottom_left_size - 1 ;	259:13:5704:5735	37667	0	True				
ANR	39020	AssignmentExpression	i = size + bottom_left_size - 1		37667	0		=			
ANR	39021	Identifier	i		37667	0					
ANR	39022	AdditiveExpression	size + bottom_left_size - 1		37667	1		+			
ANR	39023	Identifier	size		37667	0					
ANR	39024	AdditiveExpression	bottom_left_size - 1		37667	1		-			
ANR	39025	Identifier	bottom_left_size		37667	0					
ANR	39026	PrimaryExpression	1		37667	1					
ANR	39027	Condition	i >= size	259:46:5737:5745	37667	1	True				
ANR	39028	RelationalExpression	i >= size		37667	0		>=			
ANR	39029	Identifier	i		37667	0					
ANR	39030	Identifier	size		37667	1					
ANR	39031	PostIncDecOperationExpression	i --	259:57:5748:5750	37667	2	True				
ANR	39032	Identifier	i		37667	0					
ANR	39033	IncDec	--		37667	1					
ANR	39034	IfStatement	"if ( IS_INTRA ( - 1 , i ) || ! s -> pps -> constrained_intra_pred_flag )"		37667	3					
ANR	39035	Condition	"IS_INTRA ( - 1 , i ) || ! s -> pps -> constrained_intra_pred_flag"	261:16:5770:5824	37667	0	True				
ANR	39036	OrExpression	"IS_INTRA ( - 1 , i ) || ! s -> pps -> constrained_intra_pred_flag"		37667	0		||			
ANR	39037	CallExpression	"IS_INTRA ( - 1 , i )"		37667	0					
ANR	39038	Callee	IS_INTRA		37667	0					
ANR	39039	Identifier	IS_INTRA		37667	0					
ANR	39040	ArgumentList	- 1		37667	1					
ANR	39041	Argument	- 1		37667	0					
ANR	39042	UnaryOperationExpression	- 1		37667	0					
ANR	39043	UnaryOperator	-		37667	0					
ANR	39044	PrimaryExpression	1		37667	1					
ANR	39045	Argument	i		37667	1					
ANR	39046	Identifier	i		37667	0					
ANR	39047	UnaryOperationExpression	! s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	39048	UnaryOperator	!		37667	0					
ANR	39049	PtrMemberAccess	s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	39050	PtrMemberAccess	s -> pps		37667	0					
ANR	39051	Identifier	s		37667	0					
ANR	39052	Identifier	pps		37667	1					
ANR	39053	Identifier	constrained_intra_pred_flag		37667	1					
ANR	39054	ExpressionStatement	"left [ i ] = POS ( - 1 , i )"	263:16:5844:5864	37667	1	True				
ANR	39055	AssignmentExpression	"left [ i ] = POS ( - 1 , i )"		37667	0		=			
ANR	39056	ArrayIndexing	left [ i ]		37667	0					
ANR	39057	Identifier	left		37667	0					
ANR	39058	Identifier	i		37667	1					
ANR	39059	CallExpression	"POS ( - 1 , i )"		37667	1					
ANR	39060	Callee	POS		37667	0					
ANR	39061	Identifier	POS		37667	0					
ANR	39062	ArgumentList	- 1		37667	1					
ANR	39063	Argument	- 1		37667	0					
ANR	39064	UnaryOperationExpression	- 1		37667	0					
ANR	39065	UnaryOperator	-		37667	0					
ANR	39066	PrimaryExpression	1		37667	1					
ANR	39067	Argument	i		37667	1					
ANR	39068	Identifier	i		37667	0					
ANR	39069	IfStatement	if ( cand_left )		37667	325					
ANR	39070	Condition	cand_left	267:8:5882:5890	37667	0	True				
ANR	39071	Identifier	cand_left		37667	0					
ANR	39072	ForStatement	for ( i = size - 1 ; i >= 0 ; i -- )		37667	1					
ANR	39073	ForInit	i = size - 1 ;	269:13:5907:5919	37667	0	True				
ANR	39074	AssignmentExpression	i = size - 1		37667	0		=			
ANR	39075	Identifier	i		37667	0					
ANR	39076	AdditiveExpression	size - 1		37667	1		-			
ANR	39077	Identifier	size		37667	0					
ANR	39078	PrimaryExpression	1		37667	1					
ANR	39079	Condition	i >= 0	269:27:5921:5926	37667	1	True				
ANR	39080	RelationalExpression	i >= 0		37667	0		>=			
ANR	39081	Identifier	i		37667	0					
ANR	39082	PrimaryExpression	0		37667	1					
ANR	39083	PostIncDecOperationExpression	i --	269:35:5929:5931	37667	2	True				
ANR	39084	Identifier	i		37667	0					
ANR	39085	IncDec	--		37667	1					
ANR	39086	IfStatement	"if ( IS_INTRA ( - 1 , i ) || ! s -> pps -> constrained_intra_pred_flag )"		37667	3					
ANR	39087	Condition	"IS_INTRA ( - 1 , i ) || ! s -> pps -> constrained_intra_pred_flag"	271:16:5951:6005	37667	0	True				
ANR	39088	OrExpression	"IS_INTRA ( - 1 , i ) || ! s -> pps -> constrained_intra_pred_flag"		37667	0		||			
ANR	39089	CallExpression	"IS_INTRA ( - 1 , i )"		37667	0					
ANR	39090	Callee	IS_INTRA		37667	0					
ANR	39091	Identifier	IS_INTRA		37667	0					
ANR	39092	ArgumentList	- 1		37667	1					
ANR	39093	Argument	- 1		37667	0					
ANR	39094	UnaryOperationExpression	- 1		37667	0					
ANR	39095	UnaryOperator	-		37667	0					
ANR	39096	PrimaryExpression	1		37667	1					
ANR	39097	Argument	i		37667	1					
ANR	39098	Identifier	i		37667	0					
ANR	39099	UnaryOperationExpression	! s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	39100	UnaryOperator	!		37667	0					
ANR	39101	PtrMemberAccess	s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	39102	PtrMemberAccess	s -> pps		37667	0					
ANR	39103	Identifier	s		37667	0					
ANR	39104	Identifier	pps		37667	1					
ANR	39105	Identifier	constrained_intra_pred_flag		37667	1					
ANR	39106	ExpressionStatement	"left [ i ] = POS ( - 1 , i )"	273:16:6025:6045	37667	1	True				
ANR	39107	AssignmentExpression	"left [ i ] = POS ( - 1 , i )"		37667	0		=			
ANR	39108	ArrayIndexing	left [ i ]		37667	0					
ANR	39109	Identifier	left		37667	0					
ANR	39110	Identifier	i		37667	1					
ANR	39111	CallExpression	"POS ( - 1 , i )"		37667	1					
ANR	39112	Callee	POS		37667	0					
ANR	39113	Identifier	POS		37667	0					
ANR	39114	ArgumentList	- 1		37667	1					
ANR	39115	Argument	- 1		37667	0					
ANR	39116	UnaryOperationExpression	- 1		37667	0					
ANR	39117	UnaryOperator	-		37667	0					
ANR	39118	PrimaryExpression	1		37667	1					
ANR	39119	Argument	i		37667	1					
ANR	39120	Identifier	i		37667	0					
ANR	39121	IfStatement	if ( cand_up_left )		37667	326					
ANR	39122	Condition	cand_up_left	275:8:6056:6067	37667	0	True				
ANR	39123	Identifier	cand_up_left		37667	0					
ANR	39124	IfStatement	"if ( IS_INTRA ( - 1 , - 1 ) || ! s -> pps -> constrained_intra_pred_flag )"		37667	1					
ANR	39125	Condition	"IS_INTRA ( - 1 , - 1 ) || ! s -> pps -> constrained_intra_pred_flag"	277:12:6083:6138	37667	0	True				
ANR	39126	OrExpression	"IS_INTRA ( - 1 , - 1 ) || ! s -> pps -> constrained_intra_pred_flag"		37667	0		||			
ANR	39127	CallExpression	"IS_INTRA ( - 1 , - 1 )"		37667	0					
ANR	39128	Callee	IS_INTRA		37667	0					
ANR	39129	Identifier	IS_INTRA		37667	0					
ANR	39130	ArgumentList	- 1		37667	1					
ANR	39131	Argument	- 1		37667	0					
ANR	39132	UnaryOperationExpression	- 1		37667	0					
ANR	39133	UnaryOperator	-		37667	0					
ANR	39134	PrimaryExpression	1		37667	1					
ANR	39135	Argument	- 1		37667	1					
ANR	39136	UnaryOperationExpression	- 1		37667	0					
ANR	39137	UnaryOperator	-		37667	0					
ANR	39138	PrimaryExpression	1		37667	1					
ANR	39139	UnaryOperationExpression	! s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	39140	UnaryOperator	!		37667	0					
ANR	39141	PtrMemberAccess	s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	39142	PtrMemberAccess	s -> pps		37667	0					
ANR	39143	Identifier	s		37667	0					
ANR	39144	Identifier	pps		37667	1					
ANR	39145	Identifier	constrained_intra_pred_flag		37667	1					
ANR	39146	CompoundStatement		275:70:6052:6052	37667	1					
ANR	39147	ExpressionStatement	"left [ - 1 ] = POS ( - 1 , - 1 )"	279:12:6156:6178	37667	0	True				
ANR	39148	AssignmentExpression	"left [ - 1 ] = POS ( - 1 , - 1 )"		37667	0		=			
ANR	39149	ArrayIndexing	left [ - 1 ]		37667	0					
ANR	39150	Identifier	left		37667	0					
ANR	39151	UnaryOperationExpression	- 1		37667	1					
ANR	39152	UnaryOperator	-		37667	0					
ANR	39153	PrimaryExpression	1		37667	1					
ANR	39154	CallExpression	"POS ( - 1 , - 1 )"		37667	1					
ANR	39155	Callee	POS		37667	0					
ANR	39156	Identifier	POS		37667	0					
ANR	39157	ArgumentList	- 1		37667	1					
ANR	39158	Argument	- 1		37667	0					
ANR	39159	UnaryOperationExpression	- 1		37667	0					
ANR	39160	UnaryOperator	-		37667	0					
ANR	39161	PrimaryExpression	1		37667	1					
ANR	39162	Argument	- 1		37667	1					
ANR	39163	UnaryOperationExpression	- 1		37667	0					
ANR	39164	UnaryOperator	-		37667	0					
ANR	39165	PrimaryExpression	1		37667	1					
ANR	39166	ExpressionStatement	top [ - 1 ] = left [ - 1 ]	281:12:6193:6212	37667	1	True				
ANR	39167	AssignmentExpression	top [ - 1 ] = left [ - 1 ]		37667	0		=			
ANR	39168	ArrayIndexing	top [ - 1 ]		37667	0					
ANR	39169	Identifier	top		37667	0					
ANR	39170	UnaryOperationExpression	- 1		37667	1					
ANR	39171	UnaryOperator	-		37667	0					
ANR	39172	PrimaryExpression	1		37667	1					
ANR	39173	ArrayIndexing	left [ - 1 ]		37667	1					
ANR	39174	Identifier	left		37667	0					
ANR	39175	UnaryOperationExpression	- 1		37667	1					
ANR	39176	UnaryOperator	-		37667	0					
ANR	39177	PrimaryExpression	1		37667	1					
ANR	39178	IfStatement	if ( cand_up )		37667	327					
ANR	39179	Condition	cand_up	285:8:6234:6240	37667	0	True				
ANR	39180	Identifier	cand_up		37667	0					
ANR	39181	ForStatement	for ( i = size - 1 ; i >= 0 ; i -- )		37667	1					
ANR	39182	ForInit	i = size - 1 ;	287:13:6257:6269	37667	0	True				
ANR	39183	AssignmentExpression	i = size - 1		37667	0		=			
ANR	39184	Identifier	i		37667	0					
ANR	39185	AdditiveExpression	size - 1		37667	1		-			
ANR	39186	Identifier	size		37667	0					
ANR	39187	PrimaryExpression	1		37667	1					
ANR	39188	Condition	i >= 0	287:27:6271:6276	37667	1	True				
ANR	39189	RelationalExpression	i >= 0		37667	0		>=			
ANR	39190	Identifier	i		37667	0					
ANR	39191	PrimaryExpression	0		37667	1					
ANR	39192	PostIncDecOperationExpression	i --	287:35:6279:6281	37667	2	True				
ANR	39193	Identifier	i		37667	0					
ANR	39194	IncDec	--		37667	1					
ANR	39195	IfStatement	"if ( IS_INTRA ( i , - 1 ) || ! s -> pps -> constrained_intra_pred_flag )"		37667	3					
ANR	39196	Condition	"IS_INTRA ( i , - 1 ) || ! s -> pps -> constrained_intra_pred_flag"	289:16:6301:6355	37667	0	True				
ANR	39197	OrExpression	"IS_INTRA ( i , - 1 ) || ! s -> pps -> constrained_intra_pred_flag"		37667	0		||			
ANR	39198	CallExpression	"IS_INTRA ( i , - 1 )"		37667	0					
ANR	39199	Callee	IS_INTRA		37667	0					
ANR	39200	Identifier	IS_INTRA		37667	0					
ANR	39201	ArgumentList	i		37667	1					
ANR	39202	Argument	i		37667	0					
ANR	39203	Identifier	i		37667	0					
ANR	39204	Argument	- 1		37667	1					
ANR	39205	UnaryOperationExpression	- 1		37667	0					
ANR	39206	UnaryOperator	-		37667	0					
ANR	39207	PrimaryExpression	1		37667	1					
ANR	39208	UnaryOperationExpression	! s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	39209	UnaryOperator	!		37667	0					
ANR	39210	PtrMemberAccess	s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	39211	PtrMemberAccess	s -> pps		37667	0					
ANR	39212	Identifier	s		37667	0					
ANR	39213	Identifier	pps		37667	1					
ANR	39214	Identifier	constrained_intra_pred_flag		37667	1					
ANR	39215	ExpressionStatement	"top [ i ] = POS ( i , - 1 )"	291:16:6375:6394	37667	1	True				
ANR	39216	AssignmentExpression	"top [ i ] = POS ( i , - 1 )"		37667	0		=			
ANR	39217	ArrayIndexing	top [ i ]		37667	0					
ANR	39218	Identifier	top		37667	0					
ANR	39219	Identifier	i		37667	1					
ANR	39220	CallExpression	"POS ( i , - 1 )"		37667	1					
ANR	39221	Callee	POS		37667	0					
ANR	39222	Identifier	POS		37667	0					
ANR	39223	ArgumentList	i		37667	1					
ANR	39224	Argument	i		37667	0					
ANR	39225	Identifier	i		37667	0					
ANR	39226	Argument	- 1		37667	1					
ANR	39227	UnaryOperationExpression	- 1		37667	0					
ANR	39228	UnaryOperator	-		37667	0					
ANR	39229	PrimaryExpression	1		37667	1					
ANR	39230	IfStatement	if ( cand_up_right )		37667	328					
ANR	39231	Condition	cand_up_right	293:8:6405:6417	37667	0	True				
ANR	39232	Identifier	cand_up_right		37667	0					
ANR	39233	CompoundStatement		291:23:6331:6331	37667	1					
ANR	39234	ForStatement	for ( i = size + top_right_size ; i < ( size << 1 ) ; i ++ )		37667	0					
ANR	39235	ForInit	i = size + top_right_size ;	295:13:6436:6461	37667	0	True				
ANR	39236	AssignmentExpression	i = size + top_right_size		37667	0		=			
ANR	39237	Identifier	i		37667	0					
ANR	39238	AdditiveExpression	size + top_right_size		37667	1		+			
ANR	39239	Identifier	size		37667	0					
ANR	39240	Identifier	top_right_size		37667	1					
ANR	39241	Condition	i < ( size << 1 )	295:40:6463:6477	37667	1	True				
ANR	39242	RelationalExpression	i < ( size << 1 )		37667	0		<			
ANR	39243	Identifier	i		37667	0					
ANR	39244	ShiftExpression	size << 1		37667	1		<<			
ANR	39245	Identifier	size		37667	0					
ANR	39246	PrimaryExpression	1		37667	1					
ANR	39247	PostIncDecOperationExpression	i ++	295:57:6480:6482	37667	2	True				
ANR	39248	Identifier	i		37667	0					
ANR	39249	IncDec	++		37667	1					
ANR	39250	IfStatement	"if ( IS_INTRA ( size + top_right_size - 1 , - 1 ) || ! s -> pps -> constrained_intra_pred_flag )"		37667	3					
ANR	39251	Condition	"IS_INTRA ( size + top_right_size - 1 , - 1 ) || ! s -> pps -> constrained_intra_pred_flag"	297:16:6502:6580	37667	0	True				
ANR	39252	OrExpression	"IS_INTRA ( size + top_right_size - 1 , - 1 ) || ! s -> pps -> constrained_intra_pred_flag"		37667	0		||			
ANR	39253	CallExpression	"IS_INTRA ( size + top_right_size - 1 , - 1 )"		37667	0					
ANR	39254	Callee	IS_INTRA		37667	0					
ANR	39255	Identifier	IS_INTRA		37667	0					
ANR	39256	ArgumentList	size + top_right_size - 1		37667	1					
ANR	39257	Argument	size + top_right_size - 1		37667	0					
ANR	39258	AdditiveExpression	size + top_right_size - 1		37667	0		+			
ANR	39259	Identifier	size		37667	0					
ANR	39260	AdditiveExpression	top_right_size - 1		37667	1		-			
ANR	39261	Identifier	top_right_size		37667	0					
ANR	39262	PrimaryExpression	1		37667	1					
ANR	39263	Argument	- 1		37667	1					
ANR	39264	UnaryOperationExpression	- 1		37667	0					
ANR	39265	UnaryOperator	-		37667	0					
ANR	39266	PrimaryExpression	1		37667	1					
ANR	39267	UnaryOperationExpression	! s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	39268	UnaryOperator	!		37667	0					
ANR	39269	PtrMemberAccess	s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	39270	PtrMemberAccess	s -> pps		37667	0					
ANR	39271	Identifier	s		37667	0					
ANR	39272	Identifier	pps		37667	1					
ANR	39273	Identifier	constrained_intra_pred_flag		37667	1					
ANR	39274	ExpressionStatement	"top [ i ] = POS ( size + top_right_size - 1 , - 1 )"	299:16:6600:6643	37667	1	True				
ANR	39275	AssignmentExpression	"top [ i ] = POS ( size + top_right_size - 1 , - 1 )"		37667	0		=			
ANR	39276	ArrayIndexing	top [ i ]		37667	0					
ANR	39277	Identifier	top		37667	0					
ANR	39278	Identifier	i		37667	1					
ANR	39279	CallExpression	"POS ( size + top_right_size - 1 , - 1 )"		37667	1					
ANR	39280	Callee	POS		37667	0					
ANR	39281	Identifier	POS		37667	0					
ANR	39282	ArgumentList	size + top_right_size - 1		37667	1					
ANR	39283	Argument	size + top_right_size - 1		37667	0					
ANR	39284	AdditiveExpression	size + top_right_size - 1		37667	0		+			
ANR	39285	Identifier	size		37667	0					
ANR	39286	AdditiveExpression	top_right_size - 1		37667	1		-			
ANR	39287	Identifier	top_right_size		37667	0					
ANR	39288	PrimaryExpression	1		37667	1					
ANR	39289	Argument	- 1		37667	1					
ANR	39290	UnaryOperationExpression	- 1		37667	0					
ANR	39291	UnaryOperator	-		37667	0					
ANR	39292	PrimaryExpression	1		37667	1					
ANR	39293	ForStatement	for ( i = size + top_right_size - 1 ; i >= size ; i -- )		37667	1					
ANR	39294	ForInit	i = size + top_right_size - 1 ;	301:13:6659:6688	37667	0	True				
ANR	39295	AssignmentExpression	i = size + top_right_size - 1		37667	0		=			
ANR	39296	Identifier	i		37667	0					
ANR	39297	AdditiveExpression	size + top_right_size - 1		37667	1		+			
ANR	39298	Identifier	size		37667	0					
ANR	39299	AdditiveExpression	top_right_size - 1		37667	1		-			
ANR	39300	Identifier	top_right_size		37667	0					
ANR	39301	PrimaryExpression	1		37667	1					
ANR	39302	Condition	i >= size	301:44:6690:6698	37667	1	True				
ANR	39303	RelationalExpression	i >= size		37667	0		>=			
ANR	39304	Identifier	i		37667	0					
ANR	39305	Identifier	size		37667	1					
ANR	39306	PostIncDecOperationExpression	i --	301:55:6701:6703	37667	2	True				
ANR	39307	Identifier	i		37667	0					
ANR	39308	IncDec	--		37667	1					
ANR	39309	IfStatement	"if ( IS_INTRA ( i , - 1 ) || ! s -> pps -> constrained_intra_pred_flag )"		37667	3					
ANR	39310	Condition	"IS_INTRA ( i , - 1 ) || ! s -> pps -> constrained_intra_pred_flag"	303:16:6723:6777	37667	0	True				
ANR	39311	OrExpression	"IS_INTRA ( i , - 1 ) || ! s -> pps -> constrained_intra_pred_flag"		37667	0		||			
ANR	39312	CallExpression	"IS_INTRA ( i , - 1 )"		37667	0					
ANR	39313	Callee	IS_INTRA		37667	0					
ANR	39314	Identifier	IS_INTRA		37667	0					
ANR	39315	ArgumentList	i		37667	1					
ANR	39316	Argument	i		37667	0					
ANR	39317	Identifier	i		37667	0					
ANR	39318	Argument	- 1		37667	1					
ANR	39319	UnaryOperationExpression	- 1		37667	0					
ANR	39320	UnaryOperator	-		37667	0					
ANR	39321	PrimaryExpression	1		37667	1					
ANR	39322	UnaryOperationExpression	! s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	39323	UnaryOperator	!		37667	0					
ANR	39324	PtrMemberAccess	s -> pps -> constrained_intra_pred_flag		37667	1					
ANR	39325	PtrMemberAccess	s -> pps		37667	0					
ANR	39326	Identifier	s		37667	0					
ANR	39327	Identifier	pps		37667	1					
ANR	39328	Identifier	constrained_intra_pred_flag		37667	1					
ANR	39329	ExpressionStatement	"top [ i ] = POS ( i , - 1 )"	305:16:6797:6816	37667	1	True				
ANR	39330	AssignmentExpression	"top [ i ] = POS ( i , - 1 )"		37667	0		=			
ANR	39331	ArrayIndexing	top [ i ]		37667	0					
ANR	39332	Identifier	top		37667	0					
ANR	39333	Identifier	i		37667	1					
ANR	39334	CallExpression	"POS ( i , - 1 )"		37667	1					
ANR	39335	Callee	POS		37667	0					
ANR	39336	Identifier	POS		37667	0					
ANR	39337	ArgumentList	i		37667	1					
ANR	39338	Argument	i		37667	0					
ANR	39339	Identifier	i		37667	0					
ANR	39340	Argument	- 1		37667	1					
ANR	39341	UnaryOperationExpression	- 1		37667	0					
ANR	39342	UnaryOperator	-		37667	0					
ANR	39343	PrimaryExpression	1		37667	1					
ANR	39344	IfStatement	if ( s -> pps -> constrained_intra_pred_flag == 1 )		37667	329					
ANR	39345	Condition	s -> pps -> constrained_intra_pred_flag == 1	311:8:6836:6875	37667	0	True				
ANR	39346	EqualityExpression	s -> pps -> constrained_intra_pred_flag == 1		37667	0		==			
ANR	39347	PtrMemberAccess	s -> pps -> constrained_intra_pred_flag		37667	0					
ANR	39348	PtrMemberAccess	s -> pps		37667	0					
ANR	39349	Identifier	s		37667	0					
ANR	39350	Identifier	pps		37667	1					
ANR	39351	Identifier	constrained_intra_pred_flag		37667	1					
ANR	39352	PrimaryExpression	1		37667	1					
ANR	39353	CompoundStatement		309:50:6789:6789	37667	1					
ANR	39354	IfStatement	if ( cand_bottom_left || cand_left || cand_up_left || cand_up || cand_up_right )		37667	0					
ANR	39355	Condition	cand_bottom_left || cand_left || cand_up_left || cand_up || cand_up_right	313:12:6893:6965	37667	0	True				
ANR	39356	OrExpression	cand_bottom_left || cand_left || cand_up_left || cand_up || cand_up_right		37667	0		||			
ANR	39357	Identifier	cand_bottom_left		37667	0					
ANR	39358	OrExpression	cand_left || cand_up_left || cand_up || cand_up_right		37667	1		||			
ANR	39359	Identifier	cand_left		37667	0					
ANR	39360	OrExpression	cand_up_left || cand_up || cand_up_right		37667	1		||			
ANR	39361	Identifier	cand_up_left		37667	0					
ANR	39362	OrExpression	cand_up || cand_up_right		37667	1		||			
ANR	39363	Identifier	cand_up		37667	0					
ANR	39364	Identifier	cand_up_right		37667	1					
ANR	39365	CompoundStatement		321:12:7208:7265	37667	1					
ANR	39366	IdentifierDeclStatement	int size_max_x = x0 + ( ( 2 * size ) << hshift ) < s -> sps -> width ? 2 * size : ( s -> sps -> width - x0 ) >> hshift ;	315:12:6983:7124	37667	0	True				
ANR	39367	IdentifierDecl	size_max_x = x0 + ( ( 2 * size ) << hshift ) < s -> sps -> width ? 2 * size : ( s -> sps -> width - x0 ) >> hshift		37667	0					
ANR	39368	IdentifierDeclType	int		37667	0					
ANR	39369	Identifier	size_max_x		37667	1					
ANR	39370	AssignmentExpression	size_max_x = x0 + ( ( 2 * size ) << hshift ) < s -> sps -> width ? 2 * size : ( s -> sps -> width - x0 ) >> hshift		37667	2		=			
ANR	39371	Identifier	size_max_x		37667	0					
ANR	39372	ConditionalExpression	x0 + ( ( 2 * size ) << hshift ) < s -> sps -> width ? 2 * size : ( s -> sps -> width - x0 ) >> hshift		37667	1					
ANR	39373	Condition	x0 + ( ( 2 * size ) << hshift ) < s -> sps -> width		37667	0					
ANR	39374	RelationalExpression	x0 + ( ( 2 * size ) << hshift ) < s -> sps -> width		37667	0		<			
ANR	39375	AdditiveExpression	x0 + ( ( 2 * size ) << hshift )		37667	0		+			
ANR	39376	Identifier	x0		37667	0					
ANR	39377	ShiftExpression	( 2 * size ) << hshift		37667	1		<<			
ANR	39378	MultiplicativeExpression	2 * size		37667	0		*			
ANR	39379	PrimaryExpression	2		37667	0					
ANR	39380	Identifier	size		37667	1					
ANR	39381	Identifier	hshift		37667	1					
ANR	39382	PtrMemberAccess	s -> sps -> width		37667	1					
ANR	39383	PtrMemberAccess	s -> sps		37667	0					
ANR	39384	Identifier	s		37667	0					
ANR	39385	Identifier	sps		37667	1					
ANR	39386	Identifier	width		37667	1					
ANR	39387	MultiplicativeExpression	2 * size		37667	1		*			
ANR	39388	PrimaryExpression	2		37667	0					
ANR	39389	Identifier	size		37667	1					
ANR	39390	ShiftExpression	( s -> sps -> width - x0 ) >> hshift		37667	2		>>			
ANR	39391	AdditiveExpression	s -> sps -> width - x0		37667	0		-			
ANR	39392	PtrMemberAccess	s -> sps -> width		37667	0					
ANR	39393	PtrMemberAccess	s -> sps		37667	0					
ANR	39394	Identifier	s		37667	0					
ANR	39395	Identifier	sps		37667	1					
ANR	39396	Identifier	width		37667	1					
ANR	39397	Identifier	x0		37667	1					
ANR	39398	Identifier	hshift		37667	1					
ANR	39399	IdentifierDeclStatement	int size_max_y = y0 + ( ( 2 * size ) << vshift ) < s -> sps -> height ? 2 * size : ( s -> sps -> height - y0 ) >> vshift ;	319:12:7139:7282	37667	1	True				
ANR	39400	IdentifierDecl	size_max_y = y0 + ( ( 2 * size ) << vshift ) < s -> sps -> height ? 2 * size : ( s -> sps -> height - y0 ) >> vshift		37667	0					
ANR	39401	IdentifierDeclType	int		37667	0					
ANR	39402	Identifier	size_max_y		37667	1					
ANR	39403	AssignmentExpression	size_max_y = y0 + ( ( 2 * size ) << vshift ) < s -> sps -> height ? 2 * size : ( s -> sps -> height - y0 ) >> vshift		37667	2		=			
ANR	39404	Identifier	size_max_y		37667	0					
ANR	39405	ConditionalExpression	y0 + ( ( 2 * size ) << vshift ) < s -> sps -> height ? 2 * size : ( s -> sps -> height - y0 ) >> vshift		37667	1					
ANR	39406	Condition	y0 + ( ( 2 * size ) << vshift ) < s -> sps -> height		37667	0					
ANR	39407	RelationalExpression	y0 + ( ( 2 * size ) << vshift ) < s -> sps -> height		37667	0		<			
ANR	39408	AdditiveExpression	y0 + ( ( 2 * size ) << vshift )		37667	0		+			
ANR	39409	Identifier	y0		37667	0					
ANR	39410	ShiftExpression	( 2 * size ) << vshift		37667	1		<<			
ANR	39411	MultiplicativeExpression	2 * size		37667	0		*			
ANR	39412	PrimaryExpression	2		37667	0					
ANR	39413	Identifier	size		37667	1					
ANR	39414	Identifier	vshift		37667	1					
ANR	39415	PtrMemberAccess	s -> sps -> height		37667	1					
ANR	39416	PtrMemberAccess	s -> sps		37667	0					
ANR	39417	Identifier	s		37667	0					
ANR	39418	Identifier	sps		37667	1					
ANR	39419	Identifier	height		37667	1					
ANR	39420	MultiplicativeExpression	2 * size		37667	1		*			
ANR	39421	PrimaryExpression	2		37667	0					
ANR	39422	Identifier	size		37667	1					
ANR	39423	ShiftExpression	( s -> sps -> height - y0 ) >> vshift		37667	2		>>			
ANR	39424	AdditiveExpression	s -> sps -> height - y0		37667	0		-			
ANR	39425	PtrMemberAccess	s -> sps -> height		37667	0					
ANR	39426	PtrMemberAccess	s -> sps		37667	0					
ANR	39427	Identifier	s		37667	0					
ANR	39428	Identifier	sps		37667	1					
ANR	39429	Identifier	height		37667	1					
ANR	39430	Identifier	y0		37667	1					
ANR	39431	Identifier	vshift		37667	1					
ANR	39432	IdentifierDeclStatement	int j = size + ( cand_bottom_left ? bottom_left_size : 0 ) - 1 ;	323:12:7297:7354	37667	2	True				
ANR	39433	IdentifierDecl	j = size + ( cand_bottom_left ? bottom_left_size : 0 ) - 1		37667	0					
ANR	39434	IdentifierDeclType	int		37667	0					
ANR	39435	Identifier	j		37667	1					
ANR	39436	AssignmentExpression	j = size + ( cand_bottom_left ? bottom_left_size : 0 ) - 1		37667	2		=			
ANR	39437	Identifier	j		37667	0					
ANR	39438	AdditiveExpression	size + ( cand_bottom_left ? bottom_left_size : 0 ) - 1		37667	1		+			
ANR	39439	Identifier	size		37667	0					
ANR	39440	AdditiveExpression	( cand_bottom_left ? bottom_left_size : 0 ) - 1		37667	1		-			
ANR	39441	ConditionalExpression	cand_bottom_left ? bottom_left_size : 0		37667	0					
ANR	39442	Condition	cand_bottom_left		37667	0					
ANR	39443	Identifier	cand_bottom_left		37667	0					
ANR	39444	Identifier	bottom_left_size		37667	1					
ANR	39445	PrimaryExpression	0		37667	2					
ANR	39446	PrimaryExpression	1		37667	1					
ANR	39447	IfStatement	if ( ! cand_up_right )		37667	3					
ANR	39448	Condition	! cand_up_right	325:16:7373:7386	37667	0	True				
ANR	39449	UnaryOperationExpression	! cand_up_right		37667	0					
ANR	39450	UnaryOperator	!		37667	0					
ANR	39451	Identifier	cand_up_right		37667	1					
ANR	39452	CompoundStatement		323:32:7300:7300	37667	1					
ANR	39453	ExpressionStatement	size_max_x = x0 + ( ( size ) << hshift ) < s -> sps -> width ? size : ( s -> sps -> width - x0 ) >> hshift	327:16:7408:7553	37667	0	True				
ANR	39454	AssignmentExpression	size_max_x = x0 + ( ( size ) << hshift ) < s -> sps -> width ? size : ( s -> sps -> width - x0 ) >> hshift		37667	0		=			
ANR	39455	Identifier	size_max_x		37667	0					
ANR	39456	ConditionalExpression	x0 + ( ( size ) << hshift ) < s -> sps -> width ? size : ( s -> sps -> width - x0 ) >> hshift		37667	1					
ANR	39457	Condition	x0 + ( ( size ) << hshift ) < s -> sps -> width		37667	0					
ANR	39458	RelationalExpression	x0 + ( ( size ) << hshift ) < s -> sps -> width		37667	0		<			
ANR	39459	AdditiveExpression	x0 + ( ( size ) << hshift )		37667	0		+			
ANR	39460	Identifier	x0		37667	0					
ANR	39461	ShiftExpression	( size ) << hshift		37667	1		<<			
ANR	39462	Identifier	size		37667	0					
ANR	39463	Identifier	hshift		37667	1					
ANR	39464	PtrMemberAccess	s -> sps -> width		37667	1					
ANR	39465	PtrMemberAccess	s -> sps		37667	0					
ANR	39466	Identifier	s		37667	0					
ANR	39467	Identifier	sps		37667	1					
ANR	39468	Identifier	width		37667	1					
ANR	39469	Identifier	size		37667	1					
ANR	39470	ShiftExpression	( s -> sps -> width - x0 ) >> hshift		37667	2		>>			
ANR	39471	AdditiveExpression	s -> sps -> width - x0		37667	0		-			
ANR	39472	PtrMemberAccess	s -> sps -> width		37667	0					
ANR	39473	PtrMemberAccess	s -> sps		37667	0					
ANR	39474	Identifier	s		37667	0					
ANR	39475	Identifier	sps		37667	1					
ANR	39476	Identifier	width		37667	1					
ANR	39477	Identifier	x0		37667	1					
ANR	39478	Identifier	hshift		37667	1					
ANR	39479	IfStatement	if ( ! cand_bottom_left )		37667	4					
ANR	39480	Condition	! cand_bottom_left	333:16:7587:7603	37667	0	True				
ANR	39481	UnaryOperationExpression	! cand_bottom_left		37667	0					
ANR	39482	UnaryOperator	!		37667	0					
ANR	39483	Identifier	cand_bottom_left		37667	1					
ANR	39484	CompoundStatement		331:35:7517:7517	37667	1					
ANR	39485	ExpressionStatement	size_max_y = y0 + ( ( size ) << vshift ) < s -> sps -> height ? size : ( s -> sps -> height - y0 ) >> vshift	335:16:7625:7774	37667	0	True				
ANR	39486	AssignmentExpression	size_max_y = y0 + ( ( size ) << vshift ) < s -> sps -> height ? size : ( s -> sps -> height - y0 ) >> vshift		37667	0		=			
ANR	39487	Identifier	size_max_y		37667	0					
ANR	39488	ConditionalExpression	y0 + ( ( size ) << vshift ) < s -> sps -> height ? size : ( s -> sps -> height - y0 ) >> vshift		37667	1					
ANR	39489	Condition	y0 + ( ( size ) << vshift ) < s -> sps -> height		37667	0					
ANR	39490	RelationalExpression	y0 + ( ( size ) << vshift ) < s -> sps -> height		37667	0		<			
ANR	39491	AdditiveExpression	y0 + ( ( size ) << vshift )		37667	0		+			
ANR	39492	Identifier	y0		37667	0					
ANR	39493	ShiftExpression	( size ) << vshift		37667	1		<<			
ANR	39494	Identifier	size		37667	0					
ANR	39495	Identifier	vshift		37667	1					
ANR	39496	PtrMemberAccess	s -> sps -> height		37667	1					
ANR	39497	PtrMemberAccess	s -> sps		37667	0					
ANR	39498	Identifier	s		37667	0					
ANR	39499	Identifier	sps		37667	1					
ANR	39500	Identifier	height		37667	1					
ANR	39501	Identifier	size		37667	1					
ANR	39502	ShiftExpression	( s -> sps -> height - y0 ) >> vshift		37667	2		>>			
ANR	39503	AdditiveExpression	s -> sps -> height - y0		37667	0		-			
ANR	39504	PtrMemberAccess	s -> sps -> height		37667	0					
ANR	39505	PtrMemberAccess	s -> sps		37667	0					
ANR	39506	Identifier	s		37667	0					
ANR	39507	Identifier	sps		37667	1					
ANR	39508	Identifier	height		37667	1					
ANR	39509	Identifier	y0		37667	1					
ANR	39510	Identifier	vshift		37667	1					
ANR	39511	IfStatement	if ( cand_bottom_left || cand_left || cand_up_left )		37667	5					
ANR	39512	Condition	cand_bottom_left || cand_left || cand_up_left	341:16:7808:7852	37667	0	True				
ANR	39513	OrExpression	cand_bottom_left || cand_left || cand_up_left		37667	0		||			
ANR	39514	Identifier	cand_bottom_left		37667	0					
ANR	39515	OrExpression	cand_left || cand_up_left		37667	1		||			
ANR	39516	Identifier	cand_left		37667	0					
ANR	39517	Identifier	cand_up_left		37667	1					
ANR	39518	CompoundStatement		339:63:7766:7766	37667	1					
ANR	39519	WhileStatement	"while ( j > - 1 && ! IS_INTRA ( - 1 , j ) )"		37667	0					
ANR	39520	Condition	"j > - 1 && ! IS_INTRA ( - 1 , j )"	343:23:7881:7904	37667	0	True				
ANR	39521	AndExpression	"j > - 1 && ! IS_INTRA ( - 1 , j )"		37667	0		&&			
ANR	39522	RelationalExpression	j > - 1		37667	0		>			
ANR	39523	Identifier	j		37667	0					
ANR	39524	UnaryOperationExpression	- 1		37667	1					
ANR	39525	UnaryOperator	-		37667	0					
ANR	39526	PrimaryExpression	1		37667	1					
ANR	39527	UnaryOperationExpression	"! IS_INTRA ( - 1 , j )"		37667	1					
ANR	39528	UnaryOperator	!		37667	0					
ANR	39529	CallExpression	"IS_INTRA ( - 1 , j )"		37667	1					
ANR	39530	Callee	IS_INTRA		37667	0					
ANR	39531	Identifier	IS_INTRA		37667	0					
ANR	39532	ArgumentList	- 1		37667	1					
ANR	39533	Argument	- 1		37667	0					
ANR	39534	UnaryOperationExpression	- 1		37667	0					
ANR	39535	UnaryOperator	-		37667	0					
ANR	39536	PrimaryExpression	1		37667	1					
ANR	39537	Argument	j		37667	1					
ANR	39538	Identifier	j		37667	0					
ANR	39539	ExpressionStatement	j --	343:49:7907:7910	37667	1	True				
ANR	39540	PostIncDecOperationExpression	j --		37667	0					
ANR	39541	Identifier	j		37667	0					
ANR	39542	IncDec	--		37667	1					
ANR	39543	IfStatement	"if ( ! IS_INTRA ( - 1 , j ) )"		37667	1					
ANR	39544	Condition	"! IS_INTRA ( - 1 , j )"	345:20:7933:7948	37667	0	True				
ANR	39545	UnaryOperationExpression	"! IS_INTRA ( - 1 , j )"		37667	0					
ANR	39546	UnaryOperator	!		37667	0					
ANR	39547	CallExpression	"IS_INTRA ( - 1 , j )"		37667	1					
ANR	39548	Callee	IS_INTRA		37667	0					
ANR	39549	Identifier	IS_INTRA		37667	0					
ANR	39550	ArgumentList	- 1		37667	1					
ANR	39551	Argument	- 1		37667	0					
ANR	39552	UnaryOperationExpression	- 1		37667	0					
ANR	39553	UnaryOperator	-		37667	0					
ANR	39554	PrimaryExpression	1		37667	1					
ANR	39555	Argument	j		37667	1					
ANR	39556	Identifier	j		37667	0					
ANR	39557	CompoundStatement		343:38:7862:7862	37667	1					
ANR	39558	ExpressionStatement	j = 0	347:20:7974:7979	37667	0	True				
ANR	39559	AssignmentExpression	j = 0		37667	0		=			
ANR	39560	Identifier	j		37667	0					
ANR	39561	PrimaryExpression	0		37667	1					
ANR	39562	WhileStatement	"while ( j < size_max_x && ! IS_INTRA ( j , - 1 ) )"		37667	1					
ANR	39563	Condition	"j < size_max_x && ! IS_INTRA ( j , - 1 )"	349:26:8008:8041	37667	0	True				
ANR	39564	AndExpression	"j < size_max_x && ! IS_INTRA ( j , - 1 )"		37667	0		&&			
ANR	39565	RelationalExpression	j < size_max_x		37667	0		<			
ANR	39566	Identifier	j		37667	0					
ANR	39567	Identifier	size_max_x		37667	1					
ANR	39568	UnaryOperationExpression	"! IS_INTRA ( j , - 1 )"		37667	1					
ANR	39569	UnaryOperator	!		37667	0					
ANR	39570	CallExpression	"IS_INTRA ( j , - 1 )"		37667	1					
ANR	39571	Callee	IS_INTRA		37667	0					
ANR	39572	Identifier	IS_INTRA		37667	0					
ANR	39573	ArgumentList	j		37667	1					
ANR	39574	Argument	j		37667	0					
ANR	39575	Identifier	j		37667	0					
ANR	39576	Argument	- 1		37667	1					
ANR	39577	UnaryOperationExpression	- 1		37667	0					
ANR	39578	UnaryOperator	-		37667	0					
ANR	39579	PrimaryExpression	1		37667	1					
ANR	39580	ExpressionStatement	j ++	349:62:8044:8047	37667	1	True				
ANR	39581	PostIncDecOperationExpression	j ++		37667	0					
ANR	39582	Identifier	j		37667	0					
ANR	39583	IncDec	++		37667	1					
ANR	39584	ExpressionStatement	"EXTEND_LEFT_CIP ( top , j , j + 1 )"	351:20:8070:8098	37667	2	True				
ANR	39585	CallExpression	"EXTEND_LEFT_CIP ( top , j , j + 1 )"		37667	0					
ANR	39586	Callee	EXTEND_LEFT_CIP		37667	0					
ANR	39587	Identifier	EXTEND_LEFT_CIP		37667	0					
ANR	39588	ArgumentList	top		37667	1					
ANR	39589	Argument	top		37667	0					
ANR	39590	Identifier	top		37667	0					
ANR	39591	Argument	j		37667	1					
ANR	39592	Identifier	j		37667	0					
ANR	39593	Argument	j + 1		37667	2					
ANR	39594	AdditiveExpression	j + 1		37667	0		+			
ANR	39595	Identifier	j		37667	0					
ANR	39596	PrimaryExpression	1		37667	1					
ANR	39597	ExpressionStatement	left [ - 1 ] = top [ - 1 ]	353:20:8121:8139	37667	3	True				
ANR	39598	AssignmentExpression	left [ - 1 ] = top [ - 1 ]		37667	0		=			
ANR	39599	ArrayIndexing	left [ - 1 ]		37667	0					
ANR	39600	Identifier	left		37667	0					
ANR	39601	UnaryOperationExpression	- 1		37667	1					
ANR	39602	UnaryOperator	-		37667	0					
ANR	39603	PrimaryExpression	1		37667	1					
ANR	39604	ArrayIndexing	top [ - 1 ]		37667	1					
ANR	39605	Identifier	top		37667	0					
ANR	39606	UnaryOperationExpression	- 1		37667	1					
ANR	39607	UnaryOperator	-		37667	0					
ANR	39608	PrimaryExpression	1		37667	1					
ANR	39609	ExpressionStatement	j = 0	355:20:8162:8167	37667	4	True				
ANR	39610	AssignmentExpression	j = 0		37667	0		=			
ANR	39611	Identifier	j		37667	0					
ANR	39612	PrimaryExpression	0		37667	1					
ANR	39613	ElseStatement	else		37667	0					
ANR	39614	CompoundStatement		357:19:8119:8119	37667	0					
ANR	39615	ExpressionStatement	j = 0	361:16:8227:8232	37667	0	True				
ANR	39616	AssignmentExpression	j = 0		37667	0		=			
ANR	39617	Identifier	j		37667	0					
ANR	39618	PrimaryExpression	0		37667	1					
ANR	39619	WhileStatement	"while ( j < size_max_x && ! IS_INTRA ( j , - 1 ) )"		37667	1					
ANR	39620	Condition	"j < size_max_x && ! IS_INTRA ( j , - 1 )"	363:23:8258:8291	37667	0	True				
ANR	39621	AndExpression	"j < size_max_x && ! IS_INTRA ( j , - 1 )"		37667	0		&&			
ANR	39622	RelationalExpression	j < size_max_x		37667	0		<			
ANR	39623	Identifier	j		37667	0					
ANR	39624	Identifier	size_max_x		37667	1					
ANR	39625	UnaryOperationExpression	"! IS_INTRA ( j , - 1 )"		37667	1					
ANR	39626	UnaryOperator	!		37667	0					
ANR	39627	CallExpression	"IS_INTRA ( j , - 1 )"		37667	1					
ANR	39628	Callee	IS_INTRA		37667	0					
ANR	39629	Identifier	IS_INTRA		37667	0					
ANR	39630	ArgumentList	j		37667	1					
ANR	39631	Argument	j		37667	0					
ANR	39632	Identifier	j		37667	0					
ANR	39633	Argument	- 1		37667	1					
ANR	39634	UnaryOperationExpression	- 1		37667	0					
ANR	39635	UnaryOperator	-		37667	0					
ANR	39636	PrimaryExpression	1		37667	1					
ANR	39637	ExpressionStatement	j ++	363:59:8294:8297	37667	1	True				
ANR	39638	PostIncDecOperationExpression	j ++		37667	0					
ANR	39639	Identifier	j		37667	0					
ANR	39640	IncDec	++		37667	1					
ANR	39641	IfStatement	if ( j > 0 )		37667	2					
ANR	39642	Condition	j > 0	365:20:8320:8324	37667	0	True				
ANR	39643	RelationalExpression	j > 0		37667	0		>			
ANR	39644	Identifier	j		37667	0					
ANR	39645	PrimaryExpression	0		37667	1					
ANR	39646	IfStatement	if ( x0 > 0 )		37667	1					
ANR	39647	Condition	x0 > 0	367:24:8352:8357	37667	0	True				
ANR	39648	RelationalExpression	x0 > 0		37667	0		>			
ANR	39649	Identifier	x0		37667	0					
ANR	39650	PrimaryExpression	0		37667	1					
ANR	39651	CompoundStatement		365:32:8271:8271	37667	1					
ANR	39652	ExpressionStatement	"EXTEND_LEFT_CIP ( top , j , j + 1 )"	369:24:8387:8415	37667	0	True				
ANR	39653	CallExpression	"EXTEND_LEFT_CIP ( top , j , j + 1 )"		37667	0					
ANR	39654	Callee	EXTEND_LEFT_CIP		37667	0					
ANR	39655	Identifier	EXTEND_LEFT_CIP		37667	0					
ANR	39656	ArgumentList	top		37667	1					
ANR	39657	Argument	top		37667	0					
ANR	39658	Identifier	top		37667	0					
ANR	39659	Argument	j		37667	1					
ANR	39660	Identifier	j		37667	0					
ANR	39661	Argument	j + 1		37667	2					
ANR	39662	AdditiveExpression	j + 1		37667	0		+			
ANR	39663	Identifier	j		37667	0					
ANR	39664	PrimaryExpression	1		37667	1					
ANR	39665	ElseStatement	else		37667	0					
ANR	39666	CompoundStatement		369:27:8356:8356	37667	0					
ANR	39667	ExpressionStatement	"EXTEND_LEFT_CIP ( top , j , j )"	373:24:8472:8498	37667	0	True				
ANR	39668	CallExpression	"EXTEND_LEFT_CIP ( top , j , j )"		37667	0					
ANR	39669	Callee	EXTEND_LEFT_CIP		37667	0					
ANR	39670	Identifier	EXTEND_LEFT_CIP		37667	0					
ANR	39671	ArgumentList	top		37667	1					
ANR	39672	Argument	top		37667	0					
ANR	39673	Identifier	top		37667	0					
ANR	39674	Argument	j		37667	1					
ANR	39675	Identifier	j		37667	0					
ANR	39676	Argument	j		37667	2					
ANR	39677	Identifier	j		37667	0					
ANR	39678	ExpressionStatement	top [ - 1 ] = top [ 0 ]	375:24:8525:8541	37667	1	True				
ANR	39679	AssignmentExpression	top [ - 1 ] = top [ 0 ]		37667	0		=			
ANR	39680	ArrayIndexing	top [ - 1 ]		37667	0					
ANR	39681	Identifier	top		37667	0					
ANR	39682	UnaryOperationExpression	- 1		37667	1					
ANR	39683	UnaryOperator	-		37667	0					
ANR	39684	PrimaryExpression	1		37667	1					
ANR	39685	ArrayIndexing	top [ 0 ]		37667	1					
ANR	39686	Identifier	top		37667	0					
ANR	39687	PrimaryExpression	0		37667	1					
ANR	39688	ExpressionStatement	left [ - 1 ] = top [ - 1 ]	379:16:8583:8601	37667	3	True				
ANR	39689	AssignmentExpression	left [ - 1 ] = top [ - 1 ]		37667	0		=			
ANR	39690	ArrayIndexing	left [ - 1 ]		37667	0					
ANR	39691	Identifier	left		37667	0					
ANR	39692	UnaryOperationExpression	- 1		37667	1					
ANR	39693	UnaryOperator	-		37667	0					
ANR	39694	PrimaryExpression	1		37667	1					
ANR	39695	ArrayIndexing	top [ - 1 ]		37667	1					
ANR	39696	Identifier	top		37667	0					
ANR	39697	UnaryOperationExpression	- 1		37667	1					
ANR	39698	UnaryOperator	-		37667	0					
ANR	39699	PrimaryExpression	1		37667	1					
ANR	39700	ExpressionStatement	j = 0	381:16:8620:8625	37667	4	True				
ANR	39701	AssignmentExpression	j = 0		37667	0		=			
ANR	39702	Identifier	j		37667	0					
ANR	39703	PrimaryExpression	0		37667	1					
ANR	39704	IfStatement	if ( cand_bottom_left || cand_left )		37667	6					
ANR	39705	Condition	cand_bottom_left || cand_left	385:16:8659:8687	37667	0	True				
ANR	39706	OrExpression	cand_bottom_left || cand_left		37667	0		||			
ANR	39707	Identifier	cand_bottom_left		37667	0					
ANR	39708	Identifier	cand_left		37667	1					
ANR	39709	CompoundStatement		383:47:8601:8601	37667	1					
ANR	39710	ExpressionStatement	"EXTEND_DOWN_CIP ( left , j , size_max_y - j )"	387:16:8709:8747	37667	0	True				
ANR	39711	CallExpression	"EXTEND_DOWN_CIP ( left , j , size_max_y - j )"		37667	0					
ANR	39712	Callee	EXTEND_DOWN_CIP		37667	0					
ANR	39713	Identifier	EXTEND_DOWN_CIP		37667	0					
ANR	39714	ArgumentList	left		37667	1					
ANR	39715	Argument	left		37667	0					
ANR	39716	Identifier	left		37667	0					
ANR	39717	Argument	j		37667	1					
ANR	39718	Identifier	j		37667	0					
ANR	39719	Argument	size_max_y - j		37667	2					
ANR	39720	AdditiveExpression	size_max_y - j		37667	0		-			
ANR	39721	Identifier	size_max_y		37667	0					
ANR	39722	Identifier	j		37667	1					
ANR	39723	IfStatement	if ( ! cand_left )		37667	7					
ANR	39724	Condition	! cand_left	391:16:8781:8790	37667	0	True				
ANR	39725	UnaryOperationExpression	! cand_left		37667	0					
ANR	39726	UnaryOperator	!		37667	0					
ANR	39727	Identifier	cand_left		37667	1					
ANR	39728	CompoundStatement		389:28:8704:8704	37667	1					
ANR	39729	ExpressionStatement	"EXTEND_DOWN ( left , 0 , size )"	393:16:8812:8838	37667	0	True				
ANR	39730	CallExpression	"EXTEND_DOWN ( left , 0 , size )"		37667	0					
ANR	39731	Callee	EXTEND_DOWN		37667	0					
ANR	39732	Identifier	EXTEND_DOWN		37667	0					
ANR	39733	ArgumentList	left		37667	1					
ANR	39734	Argument	left		37667	0					
ANR	39735	Identifier	left		37667	0					
ANR	39736	Argument	0		37667	1					
ANR	39737	PrimaryExpression	0		37667	0					
ANR	39738	Argument	size		37667	2					
ANR	39739	Identifier	size		37667	0					
ANR	39740	IfStatement	if ( ! cand_bottom_left )		37667	8					
ANR	39741	Condition	! cand_bottom_left	397:16:8872:8888	37667	0	True				
ANR	39742	UnaryOperationExpression	! cand_bottom_left		37667	0					
ANR	39743	UnaryOperator	!		37667	0					
ANR	39744	Identifier	cand_bottom_left		37667	1					
ANR	39745	CompoundStatement		395:35:8802:8802	37667	1					
ANR	39746	ExpressionStatement	"EXTEND_DOWN ( left , size , size )"	399:16:8910:8939	37667	0	True				
ANR	39747	CallExpression	"EXTEND_DOWN ( left , size , size )"		37667	0					
ANR	39748	Callee	EXTEND_DOWN		37667	0					
ANR	39749	Identifier	EXTEND_DOWN		37667	0					
ANR	39750	ArgumentList	left		37667	1					
ANR	39751	Argument	left		37667	0					
ANR	39752	Identifier	left		37667	0					
ANR	39753	Argument	size		37667	1					
ANR	39754	Identifier	size		37667	0					
ANR	39755	Argument	size		37667	2					
ANR	39756	Identifier	size		37667	0					
ANR	39757	IfStatement	if ( x0 != 0 && y0 != 0 )		37667	9					
ANR	39758	Condition	x0 != 0 && y0 != 0	403:16:8973:8990	37667	0	True				
ANR	39759	AndExpression	x0 != 0 && y0 != 0		37667	0		&&			
ANR	39760	EqualityExpression	x0 != 0		37667	0		!=			
ANR	39761	Identifier	x0		37667	0					
ANR	39762	PrimaryExpression	0		37667	1					
ANR	39763	EqualityExpression	y0 != 0		37667	1		!=			
ANR	39764	Identifier	y0		37667	0					
ANR	39765	PrimaryExpression	0		37667	1					
ANR	39766	CompoundStatement		401:36:8904:8904	37667	1					
ANR	39767	ExpressionStatement	"EXTEND_UP_CIP ( left , size_max_y - 1 , size_max_y )"	405:16:9012:9059	37667	0	True				
ANR	39768	CallExpression	"EXTEND_UP_CIP ( left , size_max_y - 1 , size_max_y )"		37667	0					
ANR	39769	Callee	EXTEND_UP_CIP		37667	0					
ANR	39770	Identifier	EXTEND_UP_CIP		37667	0					
ANR	39771	ArgumentList	left		37667	1					
ANR	39772	Argument	left		37667	0					
ANR	39773	Identifier	left		37667	0					
ANR	39774	Argument	size_max_y - 1		37667	1					
ANR	39775	AdditiveExpression	size_max_y - 1		37667	0		-			
ANR	39776	Identifier	size_max_y		37667	0					
ANR	39777	PrimaryExpression	1		37667	1					
ANR	39778	Argument	size_max_y		37667	2					
ANR	39779	Identifier	size_max_y		37667	0					
ANR	39780	ElseStatement	else		37667	0					
ANR	39781	IfStatement	if ( x0 == 0 )		37667	0					
ANR	39782	Condition	x0 == 0	407:23:9085:9091	37667	0	True				
ANR	39783	EqualityExpression	x0 == 0		37667	0		==			
ANR	39784	Identifier	x0		37667	0					
ANR	39785	PrimaryExpression	0		37667	1					
ANR	39786	CompoundStatement		405:32:9005:9005	37667	1					
ANR	39787	ExpressionStatement	"EXTEND_UP_CIP_0 ( left , size_max_y - 1 , size_max_y )"	409:16:9113:9162	37667	0	True				
ANR	39788	CallExpression	"EXTEND_UP_CIP_0 ( left , size_max_y - 1 , size_max_y )"		37667	0					
ANR	39789	Callee	EXTEND_UP_CIP_0		37667	0					
ANR	39790	Identifier	EXTEND_UP_CIP_0		37667	0					
ANR	39791	ArgumentList	left		37667	1					
ANR	39792	Argument	left		37667	0					
ANR	39793	Identifier	left		37667	0					
ANR	39794	Argument	size_max_y - 1		37667	1					
ANR	39795	AdditiveExpression	size_max_y - 1		37667	0		-			
ANR	39796	Identifier	size_max_y		37667	0					
ANR	39797	PrimaryExpression	1		37667	1					
ANR	39798	Argument	size_max_y		37667	2					
ANR	39799	Identifier	size_max_y		37667	0					
ANR	39800	ElseStatement	else		37667	0					
ANR	39801	CompoundStatement		409:18:9094:9094	37667	0					
ANR	39802	ExpressionStatement	"EXTEND_UP_CIP ( left , size_max_y - 1 , size_max_y - 1 )"	413:16:9202:9251	37667	0	True				
ANR	39803	CallExpression	"EXTEND_UP_CIP ( left , size_max_y - 1 , size_max_y - 1 )"		37667	0					
ANR	39804	Callee	EXTEND_UP_CIP		37667	0					
ANR	39805	Identifier	EXTEND_UP_CIP		37667	0					
ANR	39806	ArgumentList	left		37667	1					
ANR	39807	Argument	left		37667	0					
ANR	39808	Identifier	left		37667	0					
ANR	39809	Argument	size_max_y - 1		37667	1					
ANR	39810	AdditiveExpression	size_max_y - 1		37667	0		-			
ANR	39811	Identifier	size_max_y		37667	0					
ANR	39812	PrimaryExpression	1		37667	1					
ANR	39813	Argument	size_max_y - 1		37667	2					
ANR	39814	AdditiveExpression	size_max_y - 1		37667	0		-			
ANR	39815	Identifier	size_max_y		37667	0					
ANR	39816	PrimaryExpression	1		37667	1					
ANR	39817	ExpressionStatement	top [ - 1 ] = left [ - 1 ]	417:12:9281:9299	37667	10	True				
ANR	39818	AssignmentExpression	top [ - 1 ] = left [ - 1 ]		37667	0		=			
ANR	39819	ArrayIndexing	top [ - 1 ]		37667	0					
ANR	39820	Identifier	top		37667	0					
ANR	39821	UnaryOperationExpression	- 1		37667	1					
ANR	39822	UnaryOperator	-		37667	0					
ANR	39823	PrimaryExpression	1		37667	1					
ANR	39824	ArrayIndexing	left [ - 1 ]		37667	1					
ANR	39825	Identifier	left		37667	0					
ANR	39826	UnaryOperationExpression	- 1		37667	1					
ANR	39827	UnaryOperator	-		37667	0					
ANR	39828	PrimaryExpression	1		37667	1					
ANR	39829	IfStatement	if ( y0 != 0 )		37667	11					
ANR	39830	Condition	y0 != 0	419:16:9318:9324	37667	0	True				
ANR	39831	EqualityExpression	y0 != 0		37667	0		!=			
ANR	39832	Identifier	y0		37667	0					
ANR	39833	PrimaryExpression	0		37667	1					
ANR	39834	CompoundStatement		417:25:9238:9238	37667	1					
ANR	39835	ExpressionStatement	"EXTEND_RIGHT_CIP ( top , 0 , size_max_x )"	421:16:9346:9382	37667	0	True				
ANR	39836	CallExpression	"EXTEND_RIGHT_CIP ( top , 0 , size_max_x )"		37667	0					
ANR	39837	Callee	EXTEND_RIGHT_CIP		37667	0					
ANR	39838	Identifier	EXTEND_RIGHT_CIP		37667	0					
ANR	39839	ArgumentList	top		37667	1					
ANR	39840	Argument	top		37667	0					
ANR	39841	Identifier	top		37667	0					
ANR	39842	Argument	0		37667	1					
ANR	39843	PrimaryExpression	0		37667	0					
ANR	39844	Argument	size_max_x		37667	2					
ANR	39845	Identifier	size_max_x		37667	0					
ANR	39846	IfStatement	if ( ! cand_bottom_left )		37667	330					
ANR	39847	Condition	! cand_bottom_left	431:8:9464:9480	37667	0	True				
ANR	39848	UnaryOperationExpression	! cand_bottom_left		37667	0					
ANR	39849	UnaryOperator	!		37667	0					
ANR	39850	Identifier	cand_bottom_left		37667	1					
ANR	39851	CompoundStatement		429:27:9394:9394	37667	1					
ANR	39852	IfStatement	if ( cand_left )		37667	0					
ANR	39853	Condition	cand_left	433:12:9498:9506	37667	0	True				
ANR	39854	Identifier	cand_left		37667	0					
ANR	39855	CompoundStatement		431:23:9420:9420	37667	1					
ANR	39856	ExpressionStatement	"EXTEND_DOWN ( left , size , size )"	435:12:9524:9553	37667	0	True				
ANR	39857	CallExpression	"EXTEND_DOWN ( left , size , size )"		37667	0					
ANR	39858	Callee	EXTEND_DOWN		37667	0					
ANR	39859	Identifier	EXTEND_DOWN		37667	0					
ANR	39860	ArgumentList	left		37667	1					
ANR	39861	Argument	left		37667	0					
ANR	39862	Identifier	left		37667	0					
ANR	39863	Argument	size		37667	1					
ANR	39864	Identifier	size		37667	0					
ANR	39865	Argument	size		37667	2					
ANR	39866	Identifier	size		37667	0					
ANR	39867	ElseStatement	else		37667	0					
ANR	39868	IfStatement	if ( cand_up_left )		37667	0					
ANR	39869	Condition	cand_up_left	437:19:9575:9586	37667	0	True				
ANR	39870	Identifier	cand_up_left		37667	0					
ANR	39871	CompoundStatement		435:33:9500:9500	37667	1					
ANR	39872	ExpressionStatement	"EXTEND_DOWN ( left , 0 , 2 * size )"	439:12:9604:9634	37667	0	True				
ANR	39873	CallExpression	"EXTEND_DOWN ( left , 0 , 2 * size )"		37667	0					
ANR	39874	Callee	EXTEND_DOWN		37667	0					
ANR	39875	Identifier	EXTEND_DOWN		37667	0					
ANR	39876	ArgumentList	left		37667	1					
ANR	39877	Argument	left		37667	0					
ANR	39878	Identifier	left		37667	0					
ANR	39879	Argument	0		37667	1					
ANR	39880	PrimaryExpression	0		37667	0					
ANR	39881	Argument	2 * size		37667	2					
ANR	39882	MultiplicativeExpression	2 * size		37667	0		*			
ANR	39883	PrimaryExpression	2		37667	0					
ANR	39884	Identifier	size		37667	1					
ANR	39885	ExpressionStatement	cand_left = 1	441:12:9649:9662	37667	1	True				
ANR	39886	AssignmentExpression	cand_left = 1		37667	0		=			
ANR	39887	Identifier	cand_left		37667	0					
ANR	39888	PrimaryExpression	1		37667	1					
ANR	39889	ElseStatement	else		37667	0					
ANR	39890	IfStatement	if ( cand_up )		37667	0					
ANR	39891	Condition	cand_up	443:19:9684:9690	37667	0	True				
ANR	39892	Identifier	cand_up		37667	0					
ANR	39893	CompoundStatement		441:28:9604:9604	37667	1					
ANR	39894	ExpressionStatement	left [ - 1 ] = top [ 0 ]	445:12:9708:9725	37667	0	True				
ANR	39895	AssignmentExpression	left [ - 1 ] = top [ 0 ]		37667	0		=			
ANR	39896	ArrayIndexing	left [ - 1 ]		37667	0					
ANR	39897	Identifier	left		37667	0					
ANR	39898	UnaryOperationExpression	- 1		37667	1					
ANR	39899	UnaryOperator	-		37667	0					
ANR	39900	PrimaryExpression	1		37667	1					
ANR	39901	ArrayIndexing	top [ 0 ]		37667	1					
ANR	39902	Identifier	top		37667	0					
ANR	39903	PrimaryExpression	0		37667	1					
ANR	39904	ExpressionStatement	"EXTEND_DOWN ( left , 0 , 2 * size )"	447:12:9740:9770	37667	1	True				
ANR	39905	CallExpression	"EXTEND_DOWN ( left , 0 , 2 * size )"		37667	0					
ANR	39906	Callee	EXTEND_DOWN		37667	0					
ANR	39907	Identifier	EXTEND_DOWN		37667	0					
ANR	39908	ArgumentList	left		37667	1					
ANR	39909	Argument	left		37667	0					
ANR	39910	Identifier	left		37667	0					
ANR	39911	Argument	0		37667	1					
ANR	39912	PrimaryExpression	0		37667	0					
ANR	39913	Argument	2 * size		37667	2					
ANR	39914	MultiplicativeExpression	2 * size		37667	0		*			
ANR	39915	PrimaryExpression	2		37667	0					
ANR	39916	Identifier	size		37667	1					
ANR	39917	ExpressionStatement	cand_up_left = 1	449:12:9785:9801	37667	2	True				
ANR	39918	AssignmentExpression	cand_up_left = 1		37667	0		=			
ANR	39919	Identifier	cand_up_left		37667	0					
ANR	39920	PrimaryExpression	1		37667	1					
ANR	39921	ExpressionStatement	cand_left = 1	451:12:9816:9829	37667	3	True				
ANR	39922	AssignmentExpression	cand_left = 1		37667	0		=			
ANR	39923	Identifier	cand_left		37667	0					
ANR	39924	PrimaryExpression	1		37667	1					
ANR	39925	ElseStatement	else		37667	0					
ANR	39926	IfStatement	if ( cand_up_right )		37667	0					
ANR	39927	Condition	cand_up_right	453:19:9851:9863	37667	0	True				
ANR	39928	Identifier	cand_up_right		37667	0					
ANR	39929	CompoundStatement		451:34:9777:9777	37667	1					
ANR	39930	ExpressionStatement	"EXTEND_LEFT ( top , size , size )"	455:12:9881:9909	37667	0	True				
ANR	39931	CallExpression	"EXTEND_LEFT ( top , size , size )"		37667	0					
ANR	39932	Callee	EXTEND_LEFT		37667	0					
ANR	39933	Identifier	EXTEND_LEFT		37667	0					
ANR	39934	ArgumentList	top		37667	1					
ANR	39935	Argument	top		37667	0					
ANR	39936	Identifier	top		37667	0					
ANR	39937	Argument	size		37667	1					
ANR	39938	Identifier	size		37667	0					
ANR	39939	Argument	size		37667	2					
ANR	39940	Identifier	size		37667	0					
ANR	39941	ExpressionStatement	left [ - 1 ] = top [ 0 ]	457:12:9924:9941	37667	1	True				
ANR	39942	AssignmentExpression	left [ - 1 ] = top [ 0 ]		37667	0		=			
ANR	39943	ArrayIndexing	left [ - 1 ]		37667	0					
ANR	39944	Identifier	left		37667	0					
ANR	39945	UnaryOperationExpression	- 1		37667	1					
ANR	39946	UnaryOperator	-		37667	0					
ANR	39947	PrimaryExpression	1		37667	1					
ANR	39948	ArrayIndexing	top [ 0 ]		37667	1					
ANR	39949	Identifier	top		37667	0					
ANR	39950	PrimaryExpression	0		37667	1					
ANR	39951	ExpressionStatement	"EXTEND_DOWN ( left , 0 , 2 * size )"	459:12:9956:9987	37667	2	True				
ANR	39952	CallExpression	"EXTEND_DOWN ( left , 0 , 2 * size )"		37667	0					
ANR	39953	Callee	EXTEND_DOWN		37667	0					
ANR	39954	Identifier	EXTEND_DOWN		37667	0					
ANR	39955	ArgumentList	left		37667	1					
ANR	39956	Argument	left		37667	0					
ANR	39957	Identifier	left		37667	0					
ANR	39958	Argument	0		37667	1					
ANR	39959	PrimaryExpression	0		37667	0					
ANR	39960	Argument	2 * size		37667	2					
ANR	39961	MultiplicativeExpression	2 * size		37667	0		*			
ANR	39962	PrimaryExpression	2		37667	0					
ANR	39963	Identifier	size		37667	1					
ANR	39964	ExpressionStatement	cand_up = 1	461:12:10002:10013	37667	3	True				
ANR	39965	AssignmentExpression	cand_up = 1		37667	0		=			
ANR	39966	Identifier	cand_up		37667	0					
ANR	39967	PrimaryExpression	1		37667	1					
ANR	39968	ExpressionStatement	cand_up_left = 1	463:12:10028:10044	37667	4	True				
ANR	39969	AssignmentExpression	cand_up_left = 1		37667	0		=			
ANR	39970	Identifier	cand_up_left		37667	0					
ANR	39971	PrimaryExpression	1		37667	1					
ANR	39972	ExpressionStatement	cand_left = 1	465:12:10059:10072	37667	5	True				
ANR	39973	AssignmentExpression	cand_left = 1		37667	0		=			
ANR	39974	Identifier	cand_left		37667	0					
ANR	39975	PrimaryExpression	1		37667	1					
ANR	39976	ElseStatement	else		37667	0					
ANR	39977	CompoundStatement		465:15:10001:10001	37667	0					
ANR	39978	ExpressionStatement	top [ 0 ] = left [ - 1 ] = ( 1 << ( BIT_DEPTH - 1 ) )	469:12:10129:10171	37667	0	True				
ANR	39979	AssignmentExpression	top [ 0 ] = left [ - 1 ] = ( 1 << ( BIT_DEPTH - 1 ) )		37667	0		=			
ANR	39980	ArrayIndexing	top [ 0 ]		37667	0					
ANR	39981	Identifier	top		37667	0					
ANR	39982	PrimaryExpression	0		37667	1					
ANR	39983	AssignmentExpression	left [ - 1 ] = ( 1 << ( BIT_DEPTH - 1 ) )		37667	1		=			
ANR	39984	ArrayIndexing	left [ - 1 ]		37667	0					
ANR	39985	Identifier	left		37667	0					
ANR	39986	UnaryOperationExpression	- 1		37667	1					
ANR	39987	UnaryOperator	-		37667	0					
ANR	39988	PrimaryExpression	1		37667	1					
ANR	39989	ShiftExpression	1 << ( BIT_DEPTH - 1 )		37667	1		<<			
ANR	39990	PrimaryExpression	1		37667	0					
ANR	39991	AdditiveExpression	BIT_DEPTH - 1		37667	1		-			
ANR	39992	Identifier	BIT_DEPTH		37667	0					
ANR	39993	PrimaryExpression	1		37667	1					
ANR	39994	ExpressionStatement	"EXTEND_RIGHT ( top , 1 , 2 * size - 1 )"	471:12:10186:10220	37667	1	True				
ANR	39995	CallExpression	"EXTEND_RIGHT ( top , 1 , 2 * size - 1 )"		37667	0					
ANR	39996	Callee	EXTEND_RIGHT		37667	0					
ANR	39997	Identifier	EXTEND_RIGHT		37667	0					
ANR	39998	ArgumentList	top		37667	1					
ANR	39999	Argument	top		37667	0					
ANR	40000	Identifier	top		37667	0					
ANR	40001	Argument	1		37667	1					
ANR	40002	PrimaryExpression	1		37667	0					
ANR	40003	Argument	2 * size - 1		37667	2					
ANR	40004	AdditiveExpression	2 * size - 1		37667	0		-			
ANR	40005	MultiplicativeExpression	2 * size		37667	0		*			
ANR	40006	PrimaryExpression	2		37667	0					
ANR	40007	Identifier	size		37667	1					
ANR	40008	PrimaryExpression	1		37667	1					
ANR	40009	ExpressionStatement	"EXTEND_DOWN ( left , 0 , 2 * size )"	473:12:10235:10265	37667	2	True				
ANR	40010	CallExpression	"EXTEND_DOWN ( left , 0 , 2 * size )"		37667	0					
ANR	40011	Callee	EXTEND_DOWN		37667	0					
ANR	40012	Identifier	EXTEND_DOWN		37667	0					
ANR	40013	ArgumentList	left		37667	1					
ANR	40014	Argument	left		37667	0					
ANR	40015	Identifier	left		37667	0					
ANR	40016	Argument	0		37667	1					
ANR	40017	PrimaryExpression	0		37667	0					
ANR	40018	Argument	2 * size		37667	2					
ANR	40019	MultiplicativeExpression	2 * size		37667	0		*			
ANR	40020	PrimaryExpression	2		37667	0					
ANR	40021	Identifier	size		37667	1					
ANR	40022	IfStatement	if ( ! cand_left )		37667	331					
ANR	40023	Condition	! cand_left	481:8:10296:10305	37667	0	True				
ANR	40024	UnaryOperationExpression	! cand_left		37667	0					
ANR	40025	UnaryOperator	!		37667	0					
ANR	40026	Identifier	cand_left		37667	1					
ANR	40027	CompoundStatement		479:20:10219:10219	37667	1					
ANR	40028	ExpressionStatement	"EXTEND_UP ( left , size , size )"	483:8:10319:10346	37667	0	True				
ANR	40029	CallExpression	"EXTEND_UP ( left , size , size )"		37667	0					
ANR	40030	Callee	EXTEND_UP		37667	0					
ANR	40031	Identifier	EXTEND_UP		37667	0					
ANR	40032	ArgumentList	left		37667	1					
ANR	40033	Argument	left		37667	0					
ANR	40034	Identifier	left		37667	0					
ANR	40035	Argument	size		37667	1					
ANR	40036	Identifier	size		37667	0					
ANR	40037	Argument	size		37667	2					
ANR	40038	Identifier	size		37667	0					
ANR	40039	IfStatement	if ( ! cand_up_left )		37667	332					
ANR	40040	Condition	! cand_up_left	487:8:10364:10376	37667	0	True				
ANR	40041	UnaryOperationExpression	! cand_up_left		37667	0					
ANR	40042	UnaryOperator	!		37667	0					
ANR	40043	Identifier	cand_up_left		37667	1					
ANR	40044	CompoundStatement		485:23:10290:10290	37667	1					
ANR	40045	ExpressionStatement	left [ - 1 ] = left [ 0 ]	489:8:10390:10408	37667	0	True				
ANR	40046	AssignmentExpression	left [ - 1 ] = left [ 0 ]		37667	0		=			
ANR	40047	ArrayIndexing	left [ - 1 ]		37667	0					
ANR	40048	Identifier	left		37667	0					
ANR	40049	UnaryOperationExpression	- 1		37667	1					
ANR	40050	UnaryOperator	-		37667	0					
ANR	40051	PrimaryExpression	1		37667	1					
ANR	40052	ArrayIndexing	left [ 0 ]		37667	1					
ANR	40053	Identifier	left		37667	0					
ANR	40054	PrimaryExpression	0		37667	1					
ANR	40055	IfStatement	if ( ! cand_up )		37667	333					
ANR	40056	Condition	! cand_up	493:8:10426:10433	37667	0	True				
ANR	40057	UnaryOperationExpression	! cand_up		37667	0					
ANR	40058	UnaryOperator	!		37667	0					
ANR	40059	Identifier	cand_up		37667	1					
ANR	40060	CompoundStatement		491:18:10347:10347	37667	1					
ANR	40061	ExpressionStatement	top [ 0 ] = left [ - 1 ]	495:8:10447:10464	37667	0	True				
ANR	40062	AssignmentExpression	top [ 0 ] = left [ - 1 ]		37667	0		=			
ANR	40063	ArrayIndexing	top [ 0 ]		37667	0					
ANR	40064	Identifier	top		37667	0					
ANR	40065	PrimaryExpression	0		37667	1					
ANR	40066	ArrayIndexing	left [ - 1 ]		37667	1					
ANR	40067	Identifier	left		37667	0					
ANR	40068	UnaryOperationExpression	- 1		37667	1					
ANR	40069	UnaryOperator	-		37667	0					
ANR	40070	PrimaryExpression	1		37667	1					
ANR	40071	ExpressionStatement	"EXTEND_RIGHT ( top , 1 , size - 1 )"	497:8:10475:10503	37667	1	True				
ANR	40072	CallExpression	"EXTEND_RIGHT ( top , 1 , size - 1 )"		37667	0					
ANR	40073	Callee	EXTEND_RIGHT		37667	0					
ANR	40074	Identifier	EXTEND_RIGHT		37667	0					
ANR	40075	ArgumentList	top		37667	1					
ANR	40076	Argument	top		37667	0					
ANR	40077	Identifier	top		37667	0					
ANR	40078	Argument	1		37667	1					
ANR	40079	PrimaryExpression	1		37667	0					
ANR	40080	Argument	size - 1		37667	2					
ANR	40081	AdditiveExpression	size - 1		37667	0		-			
ANR	40082	Identifier	size		37667	0					
ANR	40083	PrimaryExpression	1		37667	1					
ANR	40084	IfStatement	if ( ! cand_up_right )		37667	334					
ANR	40085	Condition	! cand_up_right	501:8:10521:10534	37667	0	True				
ANR	40086	UnaryOperationExpression	! cand_up_right		37667	0					
ANR	40087	UnaryOperator	!		37667	0					
ANR	40088	Identifier	cand_up_right		37667	1					
ANR	40089	CompoundStatement		499:24:10448:10448	37667	1					
ANR	40090	ExpressionStatement	"EXTEND_RIGHT ( top , size , size )"	503:8:10548:10577	37667	0	True				
ANR	40091	CallExpression	"EXTEND_RIGHT ( top , size , size )"		37667	0					
ANR	40092	Callee	EXTEND_RIGHT		37667	0					
ANR	40093	Identifier	EXTEND_RIGHT		37667	0					
ANR	40094	ArgumentList	top		37667	1					
ANR	40095	Argument	top		37667	0					
ANR	40096	Identifier	top		37667	0					
ANR	40097	Argument	size		37667	1					
ANR	40098	Identifier	size		37667	0					
ANR	40099	Argument	size		37667	2					
ANR	40100	Identifier	size		37667	0					
ANR	40101	ExpressionStatement	top [ - 1 ] = left [ - 1 ]	509:4:10593:10611	37667	335	True				
ANR	40102	AssignmentExpression	top [ - 1 ] = left [ - 1 ]		37667	0		=			
ANR	40103	ArrayIndexing	top [ - 1 ]		37667	0					
ANR	40104	Identifier	top		37667	0					
ANR	40105	UnaryOperationExpression	- 1		37667	1					
ANR	40106	UnaryOperator	-		37667	0					
ANR	40107	PrimaryExpression	1		37667	1					
ANR	40108	ArrayIndexing	left [ - 1 ]		37667	1					
ANR	40109	Identifier	left		37667	0					
ANR	40110	UnaryOperationExpression	- 1		37667	1					
ANR	40111	UnaryOperator	-		37667	0					
ANR	40112	PrimaryExpression	1		37667	1					
ANR	40113	Statement	undef	513:1:10617:10621	37667	336	True				
ANR	40114	Statement	EXTEND_LEFT_CIP	513:7:10623:10637	37667	337	True				
ANR	40115	Statement	undef	515:1:10641:10645	37667	338	True				
ANR	40116	Statement	EXTEND_RIGHT_CIP	515:7:10647:10662	37667	339	True				
ANR	40117	Statement	undef	517:1:10666:10670	37667	340	True				
ANR	40118	Statement	EXTEND_UP_CIP	517:7:10672:10684	37667	341	True				
ANR	40119	Statement	undef	519:1:10688:10692	37667	342	True				
ANR	40120	Statement	EXTEND_DOWN_CIP	519:7:10694:10708	37667	343	True				
ANR	40121	Statement	undef	521:1:10712:10716	37667	344	True				
ANR	40122	Statement	IS_INTRA	521:7:10718:10725	37667	345	True				
ANR	40123	Statement	undef	523:1:10729:10733	37667	346	True				
ANR	40124	Statement	MVF_PU	523:7:10735:10740	37667	347	True				
ANR	40125	Statement	undef	525:1:10744:10748	37667	348	True				
ANR	40126	Statement	MVF	525:7:10750:10752	37667	349	True				
ANR	40127	Statement	undef	527:1:10756:10760	37667	350	True				
ANR	40128	Statement	PU	527:7:10762:10763	37667	351	True				
ANR	40129	Statement	undef	529:1:10767:10771	37667	352	True				
ANR	40130	Statement	EXTEND_LEFT	529:7:10773:10783	37667	353	True				
ANR	40131	Statement	undef	531:1:10787:10791	37667	354	True				
ANR	40132	Statement	EXTEND_RIGHT	531:7:10793:10804	37667	355	True				
ANR	40133	Statement	undef	533:1:10808:10812	37667	356	True				
ANR	40134	Statement	EXTEND_UP	533:7:10814:10822	37667	357	True				
ANR	40135	Statement	undef	535:1:10826:10830	37667	358	True				
ANR	40136	Statement	EXTEND_DOWN	535:7:10832:10842	37667	359	True				
ANR	40137	Statement	undef	537:1:10846:10850	37667	360	True				
ANR	40138	Statement	MIN_TB_ADDR_ZS	537:7:10852:10865	37667	361	True				
ANR	40139	IfStatement	if ( c_idx == 0 && mode != INTRA_DC && size != 4 )		37667	362					
ANR	40140	Condition	c_idx == 0 && mode != INTRA_DC && size != 4	543:8:10904:10946	37667	0	True				
ANR	40141	AndExpression	c_idx == 0 && mode != INTRA_DC && size != 4		37667	0		&&			
ANR	40142	EqualityExpression	c_idx == 0		37667	0		==			
ANR	40143	Identifier	c_idx		37667	0					
ANR	40144	PrimaryExpression	0		37667	1					
ANR	40145	AndExpression	mode != INTRA_DC && size != 4		37667	1		&&			
ANR	40146	EqualityExpression	mode != INTRA_DC		37667	0		!=			
ANR	40147	Identifier	mode		37667	0					
ANR	40148	Identifier	INTRA_DC		37667	1					
ANR	40149	EqualityExpression	size != 4		37667	1		!=			
ANR	40150	Identifier	size		37667	0					
ANR	40151	PrimaryExpression	4		37667	1					
ANR	40152	CompoundStatement		545:8:10927:11061	37667	1					
ANR	40153	IdentifierDeclStatement	"int intra_hor_ver_dist_thresh [ ] = { 7 , 1 , 0 } ;"	545:8:10960:11005	37667	0	True				
ANR	40154	IdentifierDecl	"intra_hor_ver_dist_thresh [ ] = { 7 , 1 , 0 }"		37667	0					
ANR	40155	IdentifierDeclType	int [ ]		37667	0					
ANR	40156	Identifier	intra_hor_ver_dist_thresh		37667	1					
ANR	40157	AssignmentExpression	"intra_hor_ver_dist_thresh [ ] = { 7 , 1 , 0 }"		37667	2		=			
ANR	40158	Identifier	intra_hor_ver_dist_thresh		37667	0					
ANR	40159	InitializerList	7		37667	1					
ANR	40160	PrimaryExpression	7		37667	0					
ANR	40161	PrimaryExpression	1		37667	1					
ANR	40162	PrimaryExpression	0		37667	2					
ANR	40163	IdentifierDeclStatement	"int min_dist_vert_hor = FFMIN ( FFABS ( ( int ) mode - 26 ) , FFABS ( ( int ) mode - 10 ) ) ;"	547:8:11016:11150	37667	1	True				
ANR	40164	IdentifierDecl	"min_dist_vert_hor = FFMIN ( FFABS ( ( int ) mode - 26 ) , FFABS ( ( int ) mode - 10 ) )"		37667	0					
ANR	40165	IdentifierDeclType	int		37667	0					
ANR	40166	Identifier	min_dist_vert_hor		37667	1					
ANR	40167	AssignmentExpression	"min_dist_vert_hor = FFMIN ( FFABS ( ( int ) mode - 26 ) , FFABS ( ( int ) mode - 10 ) )"		37667	2		=			
ANR	40168	Identifier	min_dist_vert_hor		37667	0					
ANR	40169	CallExpression	"FFMIN ( FFABS ( ( int ) mode - 26 ) , FFABS ( ( int ) mode - 10 ) )"		37667	1					
ANR	40170	Callee	FFMIN		37667	0					
ANR	40171	Identifier	FFMIN		37667	0					
ANR	40172	ArgumentList	FFABS ( ( int ) mode - 26 )		37667	1					
ANR	40173	Argument	FFABS ( ( int ) mode - 26 )		37667	0					
ANR	40174	CallExpression	FFABS ( ( int ) mode - 26 )		37667	0					
ANR	40175	Callee	FFABS		37667	0					
ANR	40176	Identifier	FFABS		37667	0					
ANR	40177	ArgumentList	( int ) mode - 26		37667	1					
ANR	40178	Argument	( int ) mode - 26		37667	0					
ANR	40179	AdditiveExpression	( int ) mode - 26		37667	0		-			
ANR	40180	CastExpression	( int ) mode		37667	0					
ANR	40181	CastTarget	int		37667	0					
ANR	40182	Identifier	mode		37667	1					
ANR	40183	PrimaryExpression	26		37667	1					
ANR	40184	Argument	FFABS ( ( int ) mode - 10 )		37667	1					
ANR	40185	CallExpression	FFABS ( ( int ) mode - 10 )		37667	0					
ANR	40186	Callee	FFABS		37667	0					
ANR	40187	Identifier	FFABS		37667	0					
ANR	40188	ArgumentList	( int ) mode - 10		37667	1					
ANR	40189	Argument	( int ) mode - 10		37667	0					
ANR	40190	AdditiveExpression	( int ) mode - 10		37667	0		-			
ANR	40191	CastExpression	( int ) mode		37667	0					
ANR	40192	CastTarget	int		37667	0					
ANR	40193	Identifier	mode		37667	1					
ANR	40194	PrimaryExpression	10		37667	1					
ANR	40195	IfStatement	if ( min_dist_vert_hor > intra_hor_ver_dist_thresh [ log2_size - 3 ] )		37667	2					
ANR	40196	Condition	min_dist_vert_hor > intra_hor_ver_dist_thresh [ log2_size - 3 ]	551:12:11165:11224	37667	0	True				
ANR	40197	RelationalExpression	min_dist_vert_hor > intra_hor_ver_dist_thresh [ log2_size - 3 ]		37667	0		>			
ANR	40198	Identifier	min_dist_vert_hor		37667	0					
ANR	40199	ArrayIndexing	intra_hor_ver_dist_thresh [ log2_size - 3 ]		37667	1					
ANR	40200	Identifier	intra_hor_ver_dist_thresh		37667	0					
ANR	40201	AdditiveExpression	log2_size - 3		37667	1		-			
ANR	40202	Identifier	log2_size		37667	0					
ANR	40203	PrimaryExpression	3		37667	1					
ANR	40204	CompoundStatement		551:12:11153:11189	37667	1					
ANR	40205	IdentifierDeclStatement	int threshold = 1 << ( BIT_DEPTH - 5 ) ;	553:12:11242:11278	37667	0	True				
ANR	40206	IdentifierDecl	threshold = 1 << ( BIT_DEPTH - 5 )		37667	0					
ANR	40207	IdentifierDeclType	int		37667	0					
ANR	40208	Identifier	threshold		37667	1					
ANR	40209	AssignmentExpression	threshold = 1 << ( BIT_DEPTH - 5 )		37667	2		=			
ANR	40210	Identifier	threshold		37667	0					
ANR	40211	ShiftExpression	1 << ( BIT_DEPTH - 5 )		37667	1		<<			
ANR	40212	PrimaryExpression	1		37667	0					
ANR	40213	AdditiveExpression	BIT_DEPTH - 5		37667	1		-			
ANR	40214	Identifier	BIT_DEPTH		37667	0					
ANR	40215	PrimaryExpression	5		37667	1					
ANR	40216	IfStatement	if ( s -> sps -> sps_strong_intra_smoothing_enable_flag && log2_size == 5 && FFABS ( top [ - 1 ] + top [ 63 ] - 2 * top [ 31 ] ) < threshold && FFABS ( left [ - 1 ] + left [ 63 ] - 2 * left [ 31 ] ) < threshold )		37667	1					
ANR	40217	Condition	s -> sps -> sps_strong_intra_smoothing_enable_flag && log2_size == 5 && FFABS ( top [ - 1 ] + top [ 63 ] - 2 * top [ 31 ] ) < threshold && FFABS ( left [ - 1 ] + left [ 63 ] - 2 * left [ 31 ] ) < threshold	555:16:11297:11522	37667	0	True				
ANR	40218	AndExpression	s -> sps -> sps_strong_intra_smoothing_enable_flag && log2_size == 5 && FFABS ( top [ - 1 ] + top [ 63 ] - 2 * top [ 31 ] ) < threshold && FFABS ( left [ - 1 ] + left [ 63 ] - 2 * left [ 31 ] ) < threshold		37667	0		&&			
ANR	40219	PtrMemberAccess	s -> sps -> sps_strong_intra_smoothing_enable_flag		37667	0					
ANR	40220	PtrMemberAccess	s -> sps		37667	0					
ANR	40221	Identifier	s		37667	0					
ANR	40222	Identifier	sps		37667	1					
ANR	40223	Identifier	sps_strong_intra_smoothing_enable_flag		37667	1					
ANR	40224	AndExpression	log2_size == 5 && FFABS ( top [ - 1 ] + top [ 63 ] - 2 * top [ 31 ] ) < threshold && FFABS ( left [ - 1 ] + left [ 63 ] - 2 * left [ 31 ] ) < threshold		37667	1		&&			
ANR	40225	EqualityExpression	log2_size == 5		37667	0		==			
ANR	40226	Identifier	log2_size		37667	0					
ANR	40227	PrimaryExpression	5		37667	1					
ANR	40228	AndExpression	FFABS ( top [ - 1 ] + top [ 63 ] - 2 * top [ 31 ] ) < threshold && FFABS ( left [ - 1 ] + left [ 63 ] - 2 * left [ 31 ] ) < threshold		37667	1		&&			
ANR	40229	RelationalExpression	FFABS ( top [ - 1 ] + top [ 63 ] - 2 * top [ 31 ] ) < threshold		37667	0		<			
ANR	40230	CallExpression	FFABS ( top [ - 1 ] + top [ 63 ] - 2 * top [ 31 ] )		37667	0					
ANR	40231	Callee	FFABS		37667	0					
ANR	40232	Identifier	FFABS		37667	0					
ANR	40233	ArgumentList	top [ - 1 ] + top [ 63 ] - 2 * top [ 31 ]		37667	1					
ANR	40234	Argument	top [ - 1 ] + top [ 63 ] - 2 * top [ 31 ]		37667	0					
ANR	40235	AdditiveExpression	top [ - 1 ] + top [ 63 ] - 2 * top [ 31 ]		37667	0		+			
ANR	40236	ArrayIndexing	top [ - 1 ]		37667	0					
ANR	40237	Identifier	top		37667	0					
ANR	40238	UnaryOperationExpression	- 1		37667	1					
ANR	40239	UnaryOperator	-		37667	0					
ANR	40240	PrimaryExpression	1		37667	1					
ANR	40241	AdditiveExpression	top [ 63 ] - 2 * top [ 31 ]		37667	1		-			
ANR	40242	ArrayIndexing	top [ 63 ]		37667	0					
ANR	40243	Identifier	top		37667	0					
ANR	40244	PrimaryExpression	63		37667	1					
ANR	40245	MultiplicativeExpression	2 * top [ 31 ]		37667	1		*			
ANR	40246	PrimaryExpression	2		37667	0					
ANR	40247	ArrayIndexing	top [ 31 ]		37667	1					
ANR	40248	Identifier	top		37667	0					
ANR	40249	PrimaryExpression	31		37667	1					
ANR	40250	Identifier	threshold		37667	1					
ANR	40251	RelationalExpression	FFABS ( left [ - 1 ] + left [ 63 ] - 2 * left [ 31 ] ) < threshold		37667	1		<			
ANR	40252	CallExpression	FFABS ( left [ - 1 ] + left [ 63 ] - 2 * left [ 31 ] )		37667	0					
ANR	40253	Callee	FFABS		37667	0					
ANR	40254	Identifier	FFABS		37667	0					
ANR	40255	ArgumentList	left [ - 1 ] + left [ 63 ] - 2 * left [ 31 ]		37667	1					
ANR	40256	Argument	left [ - 1 ] + left [ 63 ] - 2 * left [ 31 ]		37667	0					
ANR	40257	AdditiveExpression	left [ - 1 ] + left [ 63 ] - 2 * left [ 31 ]		37667	0		+			
ANR	40258	ArrayIndexing	left [ - 1 ]		37667	0					
ANR	40259	Identifier	left		37667	0					
ANR	40260	UnaryOperationExpression	- 1		37667	1					
ANR	40261	UnaryOperator	-		37667	0					
ANR	40262	PrimaryExpression	1		37667	1					
ANR	40263	AdditiveExpression	left [ 63 ] - 2 * left [ 31 ]		37667	1		-			
ANR	40264	ArrayIndexing	left [ 63 ]		37667	0					
ANR	40265	Identifier	left		37667	0					
ANR	40266	PrimaryExpression	63		37667	1					
ANR	40267	MultiplicativeExpression	2 * left [ 31 ]		37667	1		*			
ANR	40268	PrimaryExpression	2		37667	0					
ANR	40269	ArrayIndexing	left [ 31 ]		37667	1					
ANR	40270	Identifier	left		37667	0					
ANR	40271	PrimaryExpression	31		37667	1					
ANR	40272	Identifier	threshold		37667	1					
ANR	40273	CompoundStatement		559:71:11436:11436	37667	1					
ANR	40274	ExpressionStatement	filtered_top [ - 1 ] = top [ - 1 ]	567:16:11661:11687	37667	0	True				
ANR	40275	AssignmentExpression	filtered_top [ - 1 ] = top [ - 1 ]		37667	0		=			
ANR	40276	ArrayIndexing	filtered_top [ - 1 ]		37667	0					
ANR	40277	Identifier	filtered_top		37667	0					
ANR	40278	UnaryOperationExpression	- 1		37667	1					
ANR	40279	UnaryOperator	-		37667	0					
ANR	40280	PrimaryExpression	1		37667	1					
ANR	40281	ArrayIndexing	top [ - 1 ]		37667	1					
ANR	40282	Identifier	top		37667	0					
ANR	40283	UnaryOperationExpression	- 1		37667	1					
ANR	40284	UnaryOperator	-		37667	0					
ANR	40285	PrimaryExpression	1		37667	1					
ANR	40286	ExpressionStatement	filtered_top [ 63 ] = top [ 63 ]	569:16:11706:11732	37667	1	True				
ANR	40287	AssignmentExpression	filtered_top [ 63 ] = top [ 63 ]		37667	0		=			
ANR	40288	ArrayIndexing	filtered_top [ 63 ]		37667	0					
ANR	40289	Identifier	filtered_top		37667	0					
ANR	40290	PrimaryExpression	63		37667	1					
ANR	40291	ArrayIndexing	top [ 63 ]		37667	1					
ANR	40292	Identifier	top		37667	0					
ANR	40293	PrimaryExpression	63		37667	1					
ANR	40294	ForStatement	for ( i = 0 ; i < 63 ; i ++ )		37667	2					
ANR	40295	ForInit	i = 0 ;	571:21:11756:11761	37667	0	True				
ANR	40296	AssignmentExpression	i = 0		37667	0		=			
ANR	40297	Identifier	i		37667	0					
ANR	40298	PrimaryExpression	0		37667	1					
ANR	40299	Condition	i < 63	571:28:11763:11768	37667	1	True				
ANR	40300	RelationalExpression	i < 63		37667	0		<			
ANR	40301	Identifier	i		37667	0					
ANR	40302	PrimaryExpression	63		37667	1					
ANR	40303	PostIncDecOperationExpression	i ++	571:36:11771:11773	37667	2	True				
ANR	40304	Identifier	i		37667	0					
ANR	40305	IncDec	++		37667	1					
ANR	40306	ExpressionStatement	filtered_top [ i ] = ( ( 64 - ( i + 1 ) ) * top [ - 1 ] + ( i + 1 ) * top [ 63 ] + 32 ) >> 6	573:20:11797:11918	37667	3	True				
ANR	40307	AssignmentExpression	filtered_top [ i ] = ( ( 64 - ( i + 1 ) ) * top [ - 1 ] + ( i + 1 ) * top [ 63 ] + 32 ) >> 6		37667	0		=			
ANR	40308	ArrayIndexing	filtered_top [ i ]		37667	0					
ANR	40309	Identifier	filtered_top		37667	0					
ANR	40310	Identifier	i		37667	1					
ANR	40311	ShiftExpression	( ( 64 - ( i + 1 ) ) * top [ - 1 ] + ( i + 1 ) * top [ 63 ] + 32 ) >> 6		37667	1		>>			
ANR	40312	AdditiveExpression	( 64 - ( i + 1 ) ) * top [ - 1 ] + ( i + 1 ) * top [ 63 ] + 32		37667	0		+			
ANR	40313	MultiplicativeExpression	( 64 - ( i + 1 ) ) * top [ - 1 ]		37667	0		*			
ANR	40314	AdditiveExpression	64 - ( i + 1 )		37667	0		-			
ANR	40315	PrimaryExpression	64		37667	0					
ANR	40316	AdditiveExpression	i + 1		37667	1		+			
ANR	40317	Identifier	i		37667	0					
ANR	40318	PrimaryExpression	1		37667	1					
ANR	40319	ArrayIndexing	top [ - 1 ]		37667	1					
ANR	40320	Identifier	top		37667	0					
ANR	40321	UnaryOperationExpression	- 1		37667	1					
ANR	40322	UnaryOperator	-		37667	0					
ANR	40323	PrimaryExpression	1		37667	1					
ANR	40324	AdditiveExpression	( i + 1 ) * top [ 63 ] + 32		37667	1		+			
ANR	40325	MultiplicativeExpression	( i + 1 ) * top [ 63 ]		37667	0		*			
ANR	40326	AdditiveExpression	i + 1		37667	0		+			
ANR	40327	Identifier	i		37667	0					
ANR	40328	PrimaryExpression	1		37667	1					
ANR	40329	ArrayIndexing	top [ 63 ]		37667	1					
ANR	40330	Identifier	top		37667	0					
ANR	40331	PrimaryExpression	63		37667	1					
ANR	40332	PrimaryExpression	32		37667	1					
ANR	40333	PrimaryExpression	6		37667	1					
ANR	40334	ForStatement	for ( i = 0 ; i < 63 ; i ++ )		37667	3					
ANR	40335	ForInit	i = 0 ;	577:21:11942:11947	37667	0	True				
ANR	40336	AssignmentExpression	i = 0		37667	0		=			
ANR	40337	Identifier	i		37667	0					
ANR	40338	PrimaryExpression	0		37667	1					
ANR	40339	Condition	i < 63	577:28:11949:11954	37667	1	True				
ANR	40340	RelationalExpression	i < 63		37667	0		<			
ANR	40341	Identifier	i		37667	0					
ANR	40342	PrimaryExpression	63		37667	1					
ANR	40343	PostIncDecOperationExpression	i ++	577:36:11957:11959	37667	2	True				
ANR	40344	Identifier	i		37667	0					
ANR	40345	IncDec	++		37667	1					
ANR	40346	ExpressionStatement	left [ i ] = ( ( 64 - ( i + 1 ) ) * left [ - 1 ] + ( i + 1 ) * left [ 63 ] + 32 ) >> 6	579:20:11983:12090	37667	3	True				
ANR	40347	AssignmentExpression	left [ i ] = ( ( 64 - ( i + 1 ) ) * left [ - 1 ] + ( i + 1 ) * left [ 63 ] + 32 ) >> 6		37667	0		=			
ANR	40348	ArrayIndexing	left [ i ]		37667	0					
ANR	40349	Identifier	left		37667	0					
ANR	40350	Identifier	i		37667	1					
ANR	40351	ShiftExpression	( ( 64 - ( i + 1 ) ) * left [ - 1 ] + ( i + 1 ) * left [ 63 ] + 32 ) >> 6		37667	1		>>			
ANR	40352	AdditiveExpression	( 64 - ( i + 1 ) ) * left [ - 1 ] + ( i + 1 ) * left [ 63 ] + 32		37667	0		+			
ANR	40353	MultiplicativeExpression	( 64 - ( i + 1 ) ) * left [ - 1 ]		37667	0		*			
ANR	40354	AdditiveExpression	64 - ( i + 1 )		37667	0		-			
ANR	40355	PrimaryExpression	64		37667	0					
ANR	40356	AdditiveExpression	i + 1		37667	1		+			
ANR	40357	Identifier	i		37667	0					
ANR	40358	PrimaryExpression	1		37667	1					
ANR	40359	ArrayIndexing	left [ - 1 ]		37667	1					
ANR	40360	Identifier	left		37667	0					
ANR	40361	UnaryOperationExpression	- 1		37667	1					
ANR	40362	UnaryOperator	-		37667	0					
ANR	40363	PrimaryExpression	1		37667	1					
ANR	40364	AdditiveExpression	( i + 1 ) * left [ 63 ] + 32		37667	1		+			
ANR	40365	MultiplicativeExpression	( i + 1 ) * left [ 63 ]		37667	0		*			
ANR	40366	AdditiveExpression	i + 1		37667	0		+			
ANR	40367	Identifier	i		37667	0					
ANR	40368	PrimaryExpression	1		37667	1					
ANR	40369	ArrayIndexing	left [ 63 ]		37667	1					
ANR	40370	Identifier	left		37667	0					
ANR	40371	PrimaryExpression	63		37667	1					
ANR	40372	PrimaryExpression	32		37667	1					
ANR	40373	PrimaryExpression	6		37667	1					
ANR	40374	ExpressionStatement	top = filtered_top	583:16:12109:12127	37667	4	True				
ANR	40375	AssignmentExpression	top = filtered_top		37667	0		=			
ANR	40376	Identifier	top		37667	0					
ANR	40377	Identifier	filtered_top		37667	1					
ANR	40378	ElseStatement	else		37667	0					
ANR	40379	CompoundStatement		583:19:12060:12060	37667	0					
ANR	40380	ExpressionStatement	filtered_left [ 2 * size - 1 ] = left [ 2 * size - 1 ]	587:16:12168:12216	37667	0	True				
ANR	40381	AssignmentExpression	filtered_left [ 2 * size - 1 ] = left [ 2 * size - 1 ]		37667	0		=			
ANR	40382	ArrayIndexing	filtered_left [ 2 * size - 1 ]		37667	0					
ANR	40383	Identifier	filtered_left		37667	0					
ANR	40384	AdditiveExpression	2 * size - 1		37667	1		-			
ANR	40385	MultiplicativeExpression	2 * size		37667	0		*			
ANR	40386	PrimaryExpression	2		37667	0					
ANR	40387	Identifier	size		37667	1					
ANR	40388	PrimaryExpression	1		37667	1					
ANR	40389	ArrayIndexing	left [ 2 * size - 1 ]		37667	1					
ANR	40390	Identifier	left		37667	0					
ANR	40391	AdditiveExpression	2 * size - 1		37667	1		-			
ANR	40392	MultiplicativeExpression	2 * size		37667	0		*			
ANR	40393	PrimaryExpression	2		37667	0					
ANR	40394	Identifier	size		37667	1					
ANR	40395	PrimaryExpression	1		37667	1					
ANR	40396	ExpressionStatement	filtered_top [ 2 * size - 1 ] = top [ 2 * size - 1 ]	589:16:12235:12282	37667	1	True				
ANR	40397	AssignmentExpression	filtered_top [ 2 * size - 1 ] = top [ 2 * size - 1 ]		37667	0		=			
ANR	40398	ArrayIndexing	filtered_top [ 2 * size - 1 ]		37667	0					
ANR	40399	Identifier	filtered_top		37667	0					
ANR	40400	AdditiveExpression	2 * size - 1		37667	1		-			
ANR	40401	MultiplicativeExpression	2 * size		37667	0		*			
ANR	40402	PrimaryExpression	2		37667	0					
ANR	40403	Identifier	size		37667	1					
ANR	40404	PrimaryExpression	1		37667	1					
ANR	40405	ArrayIndexing	top [ 2 * size - 1 ]		37667	1					
ANR	40406	Identifier	top		37667	0					
ANR	40407	AdditiveExpression	2 * size - 1		37667	1		-			
ANR	40408	MultiplicativeExpression	2 * size		37667	0		*			
ANR	40409	PrimaryExpression	2		37667	0					
ANR	40410	Identifier	size		37667	1					
ANR	40411	PrimaryExpression	1		37667	1					
ANR	40412	ForStatement	for ( i = 2 * size - 2 ; i >= 0 ; i -- )		37667	2					
ANR	40413	ForInit	i = 2 * size - 2 ;	591:21:12306:12322	37667	0	True				
ANR	40414	AssignmentExpression	i = 2 * size - 2		37667	0		=			
ANR	40415	Identifier	i		37667	0					
ANR	40416	AdditiveExpression	2 * size - 2		37667	1		-			
ANR	40417	MultiplicativeExpression	2 * size		37667	0		*			
ANR	40418	PrimaryExpression	2		37667	0					
ANR	40419	Identifier	size		37667	1					
ANR	40420	PrimaryExpression	2		37667	1					
ANR	40421	Condition	i >= 0	591:39:12324:12329	37667	1	True				
ANR	40422	RelationalExpression	i >= 0		37667	0		>=			
ANR	40423	Identifier	i		37667	0					
ANR	40424	PrimaryExpression	0		37667	1					
ANR	40425	PostIncDecOperationExpression	i --	591:47:12332:12334	37667	2	True				
ANR	40426	Identifier	i		37667	0					
ANR	40427	IncDec	--		37667	1					
ANR	40428	ExpressionStatement	filtered_left [ i ] = ( left [ i + 1 ] + 2 * left [ i ] + left [ i - 1 ] + 2 ) >> 2	593:20:12358:12468	37667	3	True				
ANR	40429	AssignmentExpression	filtered_left [ i ] = ( left [ i + 1 ] + 2 * left [ i ] + left [ i - 1 ] + 2 ) >> 2		37667	0		=			
ANR	40430	ArrayIndexing	filtered_left [ i ]		37667	0					
ANR	40431	Identifier	filtered_left		37667	0					
ANR	40432	Identifier	i		37667	1					
ANR	40433	ShiftExpression	( left [ i + 1 ] + 2 * left [ i ] + left [ i - 1 ] + 2 ) >> 2		37667	1		>>			
ANR	40434	AdditiveExpression	left [ i + 1 ] + 2 * left [ i ] + left [ i - 1 ] + 2		37667	0		+			
ANR	40435	ArrayIndexing	left [ i + 1 ]		37667	0					
ANR	40436	Identifier	left		37667	0					
ANR	40437	AdditiveExpression	i + 1		37667	1		+			
ANR	40438	Identifier	i		37667	0					
ANR	40439	PrimaryExpression	1		37667	1					
ANR	40440	AdditiveExpression	2 * left [ i ] + left [ i - 1 ] + 2		37667	1		+			
ANR	40441	MultiplicativeExpression	2 * left [ i ]		37667	0		*			
ANR	40442	PrimaryExpression	2		37667	0					
ANR	40443	ArrayIndexing	left [ i ]		37667	1					
ANR	40444	Identifier	left		37667	0					
ANR	40445	Identifier	i		37667	1					
ANR	40446	AdditiveExpression	left [ i - 1 ] + 2		37667	1		+			
ANR	40447	ArrayIndexing	left [ i - 1 ]		37667	0					
ANR	40448	Identifier	left		37667	0					
ANR	40449	AdditiveExpression	i - 1		37667	1		-			
ANR	40450	Identifier	i		37667	0					
ANR	40451	PrimaryExpression	1		37667	1					
ANR	40452	PrimaryExpression	2		37667	1					
ANR	40453	PrimaryExpression	2		37667	1					
ANR	40454	ExpressionStatement	filtered_top [ - 1 ] = filtered_left [ - 1 ] = ( left [ 0 ] + 2 * left [ - 1 ] + top [ 0 ] + 2 ) >> 2	597:16:12487:12624	37667	3	True				
ANR	40455	AssignmentExpression	filtered_top [ - 1 ] = filtered_left [ - 1 ] = ( left [ 0 ] + 2 * left [ - 1 ] + top [ 0 ] + 2 ) >> 2		37667	0		=			
ANR	40456	ArrayIndexing	filtered_top [ - 1 ]		37667	0					
ANR	40457	Identifier	filtered_top		37667	0					
ANR	40458	UnaryOperationExpression	- 1		37667	1					
ANR	40459	UnaryOperator	-		37667	0					
ANR	40460	PrimaryExpression	1		37667	1					
ANR	40461	AssignmentExpression	filtered_left [ - 1 ] = ( left [ 0 ] + 2 * left [ - 1 ] + top [ 0 ] + 2 ) >> 2		37667	1		=			
ANR	40462	ArrayIndexing	filtered_left [ - 1 ]		37667	0					
ANR	40463	Identifier	filtered_left		37667	0					
ANR	40464	UnaryOperationExpression	- 1		37667	1					
ANR	40465	UnaryOperator	-		37667	0					
ANR	40466	PrimaryExpression	1		37667	1					
ANR	40467	ShiftExpression	( left [ 0 ] + 2 * left [ - 1 ] + top [ 0 ] + 2 ) >> 2		37667	1		>>			
ANR	40468	AdditiveExpression	left [ 0 ] + 2 * left [ - 1 ] + top [ 0 ] + 2		37667	0		+			
ANR	40469	ArrayIndexing	left [ 0 ]		37667	0					
ANR	40470	Identifier	left		37667	0					
ANR	40471	PrimaryExpression	0		37667	1					
ANR	40472	AdditiveExpression	2 * left [ - 1 ] + top [ 0 ] + 2		37667	1		+			
ANR	40473	MultiplicativeExpression	2 * left [ - 1 ]		37667	0		*			
ANR	40474	PrimaryExpression	2		37667	0					
ANR	40475	ArrayIndexing	left [ - 1 ]		37667	1					
ANR	40476	Identifier	left		37667	0					
ANR	40477	UnaryOperationExpression	- 1		37667	1					
ANR	40478	UnaryOperator	-		37667	0					
ANR	40479	PrimaryExpression	1		37667	1					
ANR	40480	AdditiveExpression	top [ 0 ] + 2		37667	1		+			
ANR	40481	ArrayIndexing	top [ 0 ]		37667	0					
ANR	40482	Identifier	top		37667	0					
ANR	40483	PrimaryExpression	0		37667	1					
ANR	40484	PrimaryExpression	2		37667	1					
ANR	40485	PrimaryExpression	2		37667	1					
ANR	40486	ForStatement	for ( i = 2 * size - 2 ; i >= 0 ; i -- )		37667	4					
ANR	40487	ForInit	i = 2 * size - 2 ;	603:21:12648:12664	37667	0	True				
ANR	40488	AssignmentExpression	i = 2 * size - 2		37667	0		=			
ANR	40489	Identifier	i		37667	0					
ANR	40490	AdditiveExpression	2 * size - 2		37667	1		-			
ANR	40491	MultiplicativeExpression	2 * size		37667	0		*			
ANR	40492	PrimaryExpression	2		37667	0					
ANR	40493	Identifier	size		37667	1					
ANR	40494	PrimaryExpression	2		37667	1					
ANR	40495	Condition	i >= 0	603:39:12666:12671	37667	1	True				
ANR	40496	RelationalExpression	i >= 0		37667	0		>=			
ANR	40497	Identifier	i		37667	0					
ANR	40498	PrimaryExpression	0		37667	1					
ANR	40499	PostIncDecOperationExpression	i --	603:47:12674:12676	37667	2	True				
ANR	40500	Identifier	i		37667	0					
ANR	40501	IncDec	--		37667	1					
ANR	40502	ExpressionStatement	filtered_top [ i ] = ( top [ i + 1 ] + 2 * top [ i ] + top [ i - 1 ] + 2 ) >> 2	605:20:12700:12805	37667	3	True				
ANR	40503	AssignmentExpression	filtered_top [ i ] = ( top [ i + 1 ] + 2 * top [ i ] + top [ i - 1 ] + 2 ) >> 2		37667	0		=			
ANR	40504	ArrayIndexing	filtered_top [ i ]		37667	0					
ANR	40505	Identifier	filtered_top		37667	0					
ANR	40506	Identifier	i		37667	1					
ANR	40507	ShiftExpression	( top [ i + 1 ] + 2 * top [ i ] + top [ i - 1 ] + 2 ) >> 2		37667	1		>>			
ANR	40508	AdditiveExpression	top [ i + 1 ] + 2 * top [ i ] + top [ i - 1 ] + 2		37667	0		+			
ANR	40509	ArrayIndexing	top [ i + 1 ]		37667	0					
ANR	40510	Identifier	top		37667	0					
ANR	40511	AdditiveExpression	i + 1		37667	1		+			
ANR	40512	Identifier	i		37667	0					
ANR	40513	PrimaryExpression	1		37667	1					
ANR	40514	AdditiveExpression	2 * top [ i ] + top [ i - 1 ] + 2		37667	1		+			
ANR	40515	MultiplicativeExpression	2 * top [ i ]		37667	0		*			
ANR	40516	PrimaryExpression	2		37667	0					
ANR	40517	ArrayIndexing	top [ i ]		37667	1					
ANR	40518	Identifier	top		37667	0					
ANR	40519	Identifier	i		37667	1					
ANR	40520	AdditiveExpression	top [ i - 1 ] + 2		37667	1		+			
ANR	40521	ArrayIndexing	top [ i - 1 ]		37667	0					
ANR	40522	Identifier	top		37667	0					
ANR	40523	AdditiveExpression	i - 1		37667	1		-			
ANR	40524	Identifier	i		37667	0					
ANR	40525	PrimaryExpression	1		37667	1					
ANR	40526	PrimaryExpression	2		37667	1					
ANR	40527	PrimaryExpression	2		37667	1					
ANR	40528	ExpressionStatement	left = filtered_left	609:16:12824:12844	37667	5	True				
ANR	40529	AssignmentExpression	left = filtered_left		37667	0		=			
ANR	40530	Identifier	left		37667	0					
ANR	40531	Identifier	filtered_left		37667	1					
ANR	40532	ExpressionStatement	top = filtered_top	611:16:12863:12882	37667	6	True				
ANR	40533	AssignmentExpression	top = filtered_top		37667	0		=			
ANR	40534	Identifier	top		37667	0					
ANR	40535	Identifier	filtered_top		37667	1					
ANR	40536	SwitchStatement	switch ( mode )		37667	363					
ANR	40537	Condition	mode	621:12:12932:12935	37667	0	True				
ANR	40538	Identifier	mode		37667	0					
ANR	40539	CompoundStatement		619:18:12849:12849	37667	1					
ANR	40540	Label	case INTRA_PLANAR :	623:4:12945:12962	37667	0	True				
ANR	40541	Identifier	INTRA_PLANAR		37667	0					
ANR	40542	ExpressionStatement	"s -> hpc . pred_planar [ log2_size - 2 ] ( ( uint8_t * ) src , ( uint8_t * ) top , ( uint8_t * ) left , stride )"	625:8:12973:13103	37667	1	True				
ANR	40543	CallExpression	"s -> hpc . pred_planar [ log2_size - 2 ] ( ( uint8_t * ) src , ( uint8_t * ) top , ( uint8_t * ) left , stride )"		37667	0					
ANR	40544	Callee	s -> hpc . pred_planar [ log2_size - 2 ]		37667	0					
ANR	40545	ArrayIndexing	s -> hpc . pred_planar [ log2_size - 2 ]		37667	0					
ANR	40546	MemberAccess	s -> hpc . pred_planar		37667	0					
ANR	40547	PtrMemberAccess	s -> hpc		37667	0					
ANR	40548	Identifier	s		37667	0					
ANR	40549	Identifier	hpc		37667	1					
ANR	40550	Identifier	pred_planar		37667	1					
ANR	40551	AdditiveExpression	log2_size - 2		37667	1		-			
ANR	40552	Identifier	log2_size		37667	0					
ANR	40553	PrimaryExpression	2		37667	1					
ANR	40554	ArgumentList	( uint8_t * ) src		37667	1					
ANR	40555	Argument	( uint8_t * ) src		37667	0					
ANR	40556	CastExpression	( uint8_t * ) src		37667	0					
ANR	40557	CastTarget	uint8_t *		37667	0					
ANR	40558	Identifier	src		37667	1					
ANR	40559	Argument	( uint8_t * ) top		37667	1					
ANR	40560	CastExpression	( uint8_t * ) top		37667	0					
ANR	40561	CastTarget	uint8_t *		37667	0					
ANR	40562	Identifier	top		37667	1					
ANR	40563	Argument	( uint8_t * ) left		37667	2					
ANR	40564	CastExpression	( uint8_t * ) left		37667	0					
ANR	40565	CastTarget	uint8_t *		37667	0					
ANR	40566	Identifier	left		37667	1					
ANR	40567	Argument	stride		37667	3					
ANR	40568	Identifier	stride		37667	0					
ANR	40569	BreakStatement	break ;	629:8:13114:13119	37667	2	True				
ANR	40570	Label	case INTRA_DC :	631:4:13126:13139	37667	3	True				
ANR	40571	Identifier	INTRA_DC		37667	0					
ANR	40572	ExpressionStatement	"s -> hpc . pred_dc ( ( uint8_t * ) src , ( uint8_t * ) top , ( uint8_t * ) left , stride , log2_size , c_idx )"	633:8:13150:13260	37667	4	True				
ANR	40573	CallExpression	"s -> hpc . pred_dc ( ( uint8_t * ) src , ( uint8_t * ) top , ( uint8_t * ) left , stride , log2_size , c_idx )"		37667	0					
ANR	40574	Callee	s -> hpc . pred_dc		37667	0					
ANR	40575	MemberAccess	s -> hpc . pred_dc		37667	0					
ANR	40576	PtrMemberAccess	s -> hpc		37667	0					
ANR	40577	Identifier	s		37667	0					
ANR	40578	Identifier	hpc		37667	1					
ANR	40579	Identifier	pred_dc		37667	1					
ANR	40580	ArgumentList	( uint8_t * ) src		37667	1					
ANR	40581	Argument	( uint8_t * ) src		37667	0					
ANR	40582	CastExpression	( uint8_t * ) src		37667	0					
ANR	40583	CastTarget	uint8_t *		37667	0					
ANR	40584	Identifier	src		37667	1					
ANR	40585	Argument	( uint8_t * ) top		37667	1					
ANR	40586	CastExpression	( uint8_t * ) top		37667	0					
ANR	40587	CastTarget	uint8_t *		37667	0					
ANR	40588	Identifier	top		37667	1					
ANR	40589	Argument	( uint8_t * ) left		37667	2					
ANR	40590	CastExpression	( uint8_t * ) left		37667	0					
ANR	40591	CastTarget	uint8_t *		37667	0					
ANR	40592	Identifier	left		37667	1					
ANR	40593	Argument	stride		37667	3					
ANR	40594	Identifier	stride		37667	0					
ANR	40595	Argument	log2_size		37667	4					
ANR	40596	Identifier	log2_size		37667	0					
ANR	40597	Argument	c_idx		37667	5					
ANR	40598	Identifier	c_idx		37667	0					
ANR	40599	BreakStatement	break ;	637:8:13271:13276	37667	5	True				
ANR	40600	Label	default :	639:4:13283:13290	37667	6	True				
ANR	40601	Identifier	default		37667	0					
ANR	40602	ExpressionStatement	"s -> hpc . pred_angular [ log2_size - 2 ] ( ( uint8_t * ) src , ( uint8_t * ) top , ( uint8_t * ) left , stride , c_idx , mode )"	641:8:13301:13446	37667	7	True				
ANR	40603	CallExpression	"s -> hpc . pred_angular [ log2_size - 2 ] ( ( uint8_t * ) src , ( uint8_t * ) top , ( uint8_t * ) left , stride , c_idx , mode )"		37667	0					
ANR	40604	Callee	s -> hpc . pred_angular [ log2_size - 2 ]		37667	0					
ANR	40605	ArrayIndexing	s -> hpc . pred_angular [ log2_size - 2 ]		37667	0					
ANR	40606	MemberAccess	s -> hpc . pred_angular		37667	0					
ANR	40607	PtrMemberAccess	s -> hpc		37667	0					
ANR	40608	Identifier	s		37667	0					
ANR	40609	Identifier	hpc		37667	1					
ANR	40610	Identifier	pred_angular		37667	1					
ANR	40611	AdditiveExpression	log2_size - 2		37667	1		-			
ANR	40612	Identifier	log2_size		37667	0					
ANR	40613	PrimaryExpression	2		37667	1					
ANR	40614	ArgumentList	( uint8_t * ) src		37667	1					
ANR	40615	Argument	( uint8_t * ) src		37667	0					
ANR	40616	CastExpression	( uint8_t * ) src		37667	0					
ANR	40617	CastTarget	uint8_t *		37667	0					
ANR	40618	Identifier	src		37667	1					
ANR	40619	Argument	( uint8_t * ) top		37667	1					
ANR	40620	CastExpression	( uint8_t * ) top		37667	0					
ANR	40621	CastTarget	uint8_t *		37667	0					
ANR	40622	Identifier	top		37667	1					
ANR	40623	Argument	( uint8_t * ) left		37667	2					
ANR	40624	CastExpression	( uint8_t * ) left		37667	0					
ANR	40625	CastTarget	uint8_t *		37667	0					
ANR	40626	Identifier	left		37667	1					
ANR	40627	Argument	stride		37667	3					
ANR	40628	Identifier	stride		37667	0					
ANR	40629	Argument	c_idx		37667	4					
ANR	40630	Identifier	c_idx		37667	0					
ANR	40631	Argument	mode		37667	5					
ANR	40632	Identifier	mode		37667	0					
ANR	40633	BreakStatement	break ;	645:8:13457:13462	37667	8	True				
ANR	40634	ReturnType	static void FUNC		37667	1					
ANR	40635	Identifier	( intra_pred )		37667	2					
ANR	40636	Identifier	intra_pred		37667	3					
ANR	40637	ParameterList	"HEVCContext * s , int x0 , int y0 , int log2_size , int c_idx"		37667	4					
ANR	40638	Parameter	HEVCContext * s	1:29:29:42	37667	0	True				
ANR	40639	ParameterType	HEVCContext *		37667	0					
ANR	40640	Identifier	s		37667	1					
ANR	40641	Parameter	int x0	1:45:45:50	37667	1	True				
ANR	40642	ParameterType	int		37667	0					
ANR	40643	Identifier	x0		37667	1					
ANR	40644	Parameter	int y0	1:53:53:58	37667	2	True				
ANR	40645	ParameterType	int		37667	0					
ANR	40646	Identifier	y0		37667	1					
ANR	40647	Parameter	int log2_size	1:61:61:73	37667	3	True				
ANR	40648	ParameterType	int		37667	0					
ANR	40649	Identifier	log2_size		37667	1					
ANR	40650	Parameter	int c_idx	1:76:76:84	37667	4	True				
ANR	40651	ParameterType	int		37667	0					
ANR	40652	Identifier	c_idx		37667	1					
ANR	40653	CFGEntryNode	ENTRY		37667		True				
ANR	40654	CFGExitNode	EXIT		37667		True				
ANR	40655	Symbol	lc -> na . cand_up_left		37667						
ANR	40656	Symbol	* filtered_left		37667						
ANR	40657	Symbol	PU		37667						
ANR	40658	Symbol	stride		37667						
ANR	40659	Symbol	* s -> frame		37667						
ANR	40660	Symbol	* s -> sps -> vshift		37667						
ANR	40661	Symbol	s -> hpc . pred_angular		37667						
ANR	40662	Symbol	cand_left		37667						
ANR	40663	Symbol	s -> frame		37667						
ANR	40664	Symbol	lc -> na . cand_up_right		37667						
ANR	40665	Symbol	cur_tb_addr		37667						
ANR	40666	Symbol	MAX_TB_SIZE		37667						
ANR	40667	Symbol	* log2_size		37667						
ANR	40668	Symbol	s -> sps		37667						
ANR	40669	Symbol	vshift		37667						
ANR	40670	Symbol	* s -> frame -> data		37667						
ANR	40671	Symbol	* * * s		37667						
ANR	40672	Symbol	filtered_left		37667						
ANR	40673	Symbol	size		37667						
ANR	40674	Symbol	left		37667						
ANR	40675	Symbol	POS		37667						
ANR	40676	Symbol	s -> frame -> data		37667						
ANR	40677	Symbol	filtered_left_array		37667						
ANR	40678	Symbol	intra_hor_ver_dist_thresh		37667						
ANR	40679	Symbol	* lc		37667						
ANR	40680	Symbol	s -> sps -> height		37667						
ANR	40681	Symbol	* intra_hor_ver_dist_thresh		37667						
ANR	40682	Symbol	* top		37667						
ANR	40683	Symbol	top_right_size		37667						
ANR	40684	Symbol	y_left_pu		37667						
ANR	40685	Symbol	pic_width_in_min_pu		37667						
ANR	40686	Symbol	s -> sps -> hshift		37667						
ANR	40687	Symbol	cand_up_right		37667						
ANR	40688	Symbol	s -> HEVClc		37667						
ANR	40689	Symbol	s -> sps -> log2_min_pu_size		37667						
ANR	40690	Symbol	top		37667						
ANR	40691	Symbol	* * s		37667						
ANR	40692	Symbol	lc -> tu		37667						
ANR	40693	Symbol	min_dist_vert_hor		37667						
ANR	40694	Symbol	MIN_TB_ADDR_ZS		37667						
ANR	40695	Symbol	lc -> na . cand_left		37667						
ANR	40696	Symbol	"MVF ( x_top_pu + i , y_top_pu ) . is_intra"		37667						
ANR	40697	Symbol	s -> sps -> width		37667						
ANR	40698	Symbol	i		37667						
ANR	40699	Symbol	FFABS		37667						
ANR	40700	Symbol	j		37667						
ANR	40701	Symbol	* c_idx		37667						
ANR	40702	Symbol	s -> sps -> log2_min_transform_block_size		37667						
ANR	40703	Symbol	s -> hpc . pred_planar		37667						
ANR	40704	Symbol	on_pu_edge_y		37667						
ANR	40705	Symbol	bottom_left_size		37667						
ANR	40706	Symbol	size_in_luma_pu		37667						
ANR	40707	Symbol	on_pu_edge_x		37667						
ANR	40708	Symbol	s		37667						
ANR	40709	Symbol	INTRA_DC		37667						
ANR	40710	Symbol	lc		37667						
ANR	40711	Symbol	x		37667						
ANR	40712	Symbol	y		37667						
ANR	40713	Symbol	cand_up_left		37667						
ANR	40714	Symbol	s -> pps -> constrained_intra_pred_flag		37667						
ANR	40715	Symbol	c_idx		37667						
ANR	40716	Symbol	* s -> sps		37667						
ANR	40717	Symbol	x_left_pu		37667						
ANR	40718	Symbol	* * s -> sps		37667						
ANR	40719	Symbol	filtered_top_array		37667						
ANR	40720	Symbol	FFMIN		37667						
ANR	40721	Symbol	threshold		37667						
ANR	40722	Symbol	s -> hpc		37667						
ANR	40723	Symbol	size_in_tbs		37667						
ANR	40724	Symbol	left_array		37667						
ANR	40725	Symbol	mode		37667						
ANR	40726	Symbol	y_bottom_pu		37667						
ANR	40727	Symbol	* size		37667						
ANR	40728	Symbol	y_top_pu		37667						
ANR	40729	Symbol	* left		37667						
ANR	40730	Symbol	s -> frame -> linesize		37667						
ANR	40731	Symbol	lc -> na		37667						
ANR	40732	Symbol	x_tb		37667						
ANR	40733	Symbol	"MVF ( x_right_pu + i , y_top_pu ) . is_intra"		37667						
ANR	40734	Symbol	"MVF ( x_left_pu , y_left_pu + i ) . is_intra"		37667						
ANR	40735	Symbol	BIT_DEPTH		37667						
ANR	40736	Symbol	x0		37667						
ANR	40737	Symbol	MVF		37667						
ANR	40738	Symbol	lc -> na . cand_bottom_left		37667						
ANR	40739	Symbol	size_in_luma		37667						
ANR	40740	Symbol	* s -> frame -> linesize		37667						
ANR	40741	Symbol	IS_INTRA		37667						
ANR	40742	Symbol	* s -> pps		37667						
ANR	40743	Symbol	y_tb		37667						
ANR	40744	Symbol	lc -> pu . intra_pred_mode_c		37667						
ANR	40745	Symbol	lc -> tu . cur_intra_pred_mode		37667						
ANR	40746	Symbol	"MVF ( x_left_pu , y_top_pu ) . is_intra"		37667						
ANR	40747	Symbol	lc -> pu		37667						
ANR	40748	Symbol	cand_bottom_left		37667						
ANR	40749	Symbol	log2_size		37667						
ANR	40750	Symbol	x_right_pu		37667						
ANR	40751	Symbol	y0		37667						
ANR	40752	Symbol	* filtered_top		37667						
ANR	40753	Symbol	s -> sps -> sps_strong_intra_smoothing_enable_flag		37667						
ANR	40754	Symbol	filtered_top		37667						
ANR	40755	Symbol	size_max_y		37667						
ANR	40756	Symbol	* s -> sps -> hshift		37667						
ANR	40757	Symbol	size_max_x		37667						
ANR	40758	Symbol	s -> pps		37667						
ANR	40759	Symbol	lc -> na . cand_up		37667						
ANR	40760	Symbol	src		37667						
ANR	40761	Symbol	hshift		37667						
ANR	40762	Symbol	* * s -> frame		37667						
ANR	40763	Symbol	length		37667						
ANR	40764	Symbol	start		37667						
ANR	40765	Symbol	top_array		37667						
ANR	40766	Symbol	x_top_pu		37667						
ANR	40767	Symbol	cand_up		37667						
ANR	40768	Symbol	s -> sps -> vshift		37667						
ANR	40769	Symbol	* i		37667						
ANR	40770	Symbol	"MVF ( x_left_pu , y_bottom_pu + i ) . is_intra"		37667						
ANR	40771	Symbol	* s		37667						
