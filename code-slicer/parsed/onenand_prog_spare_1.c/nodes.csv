command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6194351	File	/home/p4ultr4n/workplace/ReVeal/raw_code/onenand_prog_spare_1.c								
ANR	6194352	Function	onenand_prog_spare	1:0:0:1092							
ANR	6194353	FunctionDef	"onenand_prog_spare (OneNANDState * s , int sec , int secn , void * src)"		6194352	0					
ANR	6194354	CompoundStatement		5:0:102:1092	6194352	0					
ANR	6194355	IdentifierDeclStatement	int result = 0 ;	7:4:109:123	6194352	0	True				
ANR	6194356	IdentifierDecl	result = 0		6194352	0					
ANR	6194357	IdentifierDeclType	int		6194352	0					
ANR	6194358	Identifier	result		6194352	1					
ANR	6194359	AssignmentExpression	result = 0		6194352	2		=			
ANR	6194360	Identifier	result		6194352	0					
ANR	6194361	PrimaryExpression	0		6194352	1					
ANR	6194362	IfStatement	if ( secn > 0 )		6194352	1					
ANR	6194363	Condition	secn > 0	9:8:134:141	6194352	0	True				
ANR	6194364	RelationalExpression	secn > 0		6194352	0		>			
ANR	6194365	Identifier	secn		6194352	0					
ANR	6194366	PrimaryExpression	0		6194352	1					
ANR	6194367	CompoundStatement		9:8:103:128	6194352	1					
ANR	6194368	IdentifierDeclStatement	const uint8_t * sp = ( const uint8_t * ) src ;	11:8:155:195	6194352	0	True				
ANR	6194369	IdentifierDecl	* sp = ( const uint8_t * ) src		6194352	0					
ANR	6194370	IdentifierDeclType	const uint8_t *		6194352	0					
ANR	6194371	Identifier	sp		6194352	1					
ANR	6194372	AssignmentExpression	* sp = ( const uint8_t * ) src		6194352	2		=			
ANR	6194373	Identifier	sp		6194352	0					
ANR	6194374	CastExpression	( const uint8_t * ) src		6194352	1					
ANR	6194375	CastTarget	const uint8_t *		6194352	0					
ANR	6194376	Identifier	src		6194352	1					
ANR	6194377	IdentifierDeclStatement	"uint8_t * dp = 0 , * dpp = 0 ;"	13:8:206:231	6194352	1	True				
ANR	6194378	IdentifierDecl	* dp = 0		6194352	0					
ANR	6194379	IdentifierDeclType	uint8_t *		6194352	0					
ANR	6194380	Identifier	dp		6194352	1					
ANR	6194381	AssignmentExpression	* dp = 0		6194352	2		=			
ANR	6194382	Identifier	dp		6194352	0					
ANR	6194383	PrimaryExpression	0		6194352	1					
ANR	6194384	IdentifierDecl	* dpp = 0		6194352	1					
ANR	6194385	IdentifierDeclType	uint8_t *		6194352	0					
ANR	6194386	Identifier	dpp		6194352	1					
ANR	6194387	AssignmentExpression	* dpp = 0		6194352	2		=			
ANR	6194388	Identifier	dpp		6194352	0					
ANR	6194389	PrimaryExpression	0		6194352	1					
ANR	6194390	IfStatement	if ( s -> blk_cur )		6194352	2					
ANR	6194391	Condition	s -> blk_cur	15:12:246:255	6194352	0	True				
ANR	6194392	PtrMemberAccess	s -> blk_cur		6194352	0					
ANR	6194393	Identifier	s		6194352	0					
ANR	6194394	Identifier	blk_cur		6194352	1					
ANR	6194395	CompoundStatement		11:24:155:155	6194352	1					
ANR	6194396	ExpressionStatement	dp = g_malloc ( 512 )	17:12:273:291	6194352	0	True				
ANR	6194397	AssignmentExpression	dp = g_malloc ( 512 )		6194352	0		=			
ANR	6194398	Identifier	dp		6194352	0					
ANR	6194399	CallExpression	g_malloc ( 512 )		6194352	1					
ANR	6194400	Callee	g_malloc		6194352	0					
ANR	6194401	Identifier	g_malloc		6194352	0					
ANR	6194402	ArgumentList	512		6194352	1					
ANR	6194403	Argument	512		6194352	0					
ANR	6194404	PrimaryExpression	512		6194352	0					
ANR	6194405	IfStatement	"if ( ! dp || blk_read ( s -> blk_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0 )"		6194352	1					
ANR	6194406	Condition	"! dp || blk_read ( s -> blk_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0"	19:16:310:390	6194352	0	True				
ANR	6194407	OrExpression	"! dp || blk_read ( s -> blk_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0"		6194352	0		||			
ANR	6194408	UnaryOperationExpression	! dp		6194352	0					
ANR	6194409	UnaryOperator	!		6194352	0					
ANR	6194410	Identifier	dp		6194352	1					
ANR	6194411	RelationalExpression	"blk_read ( s -> blk_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0"		6194352	1		<			
ANR	6194412	CallExpression	"blk_read ( s -> blk_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 )"		6194352	0					
ANR	6194413	Callee	blk_read		6194352	0					
ANR	6194414	Identifier	blk_read		6194352	0					
ANR	6194415	ArgumentList	s -> blk_cur		6194352	1					
ANR	6194416	Argument	s -> blk_cur		6194352	0					
ANR	6194417	PtrMemberAccess	s -> blk_cur		6194352	0					
ANR	6194418	Identifier	s		6194352	0					
ANR	6194419	Identifier	blk_cur		6194352	1					
ANR	6194420	Argument	s -> secs_cur + ( sec >> 5 )		6194352	1					
ANR	6194421	AdditiveExpression	s -> secs_cur + ( sec >> 5 )		6194352	0		+			
ANR	6194422	PtrMemberAccess	s -> secs_cur		6194352	0					
ANR	6194423	Identifier	s		6194352	0					
ANR	6194424	Identifier	secs_cur		6194352	1					
ANR	6194425	ShiftExpression	sec >> 5		6194352	1		>>			
ANR	6194426	Identifier	sec		6194352	0					
ANR	6194427	PrimaryExpression	5		6194352	1					
ANR	6194428	Argument	dp		6194352	2					
ANR	6194429	Identifier	dp		6194352	0					
ANR	6194430	Argument	1		6194352	3					
ANR	6194431	PrimaryExpression	1		6194352	0					
ANR	6194432	PrimaryExpression	0		6194352	1					
ANR	6194433	CompoundStatement		17:78:290:290	6194352	1					
ANR	6194434	ExpressionStatement	result = 1	23:16:412:422	6194352	0	True				
ANR	6194435	AssignmentExpression	result = 1		6194352	0		=			
ANR	6194436	Identifier	result		6194352	0					
ANR	6194437	PrimaryExpression	1		6194352	1					
ANR	6194438	ElseStatement	else		6194352	0					
ANR	6194439	CompoundStatement		21:19:341:341	6194352	0					
ANR	6194440	ExpressionStatement	dpp = dp + ( ( sec & 31 ) << 4 )	27:16:463:491	6194352	0	True				
ANR	6194441	AssignmentExpression	dpp = dp + ( ( sec & 31 ) << 4 )		6194352	0		=			
ANR	6194442	Identifier	dpp		6194352	0					
ANR	6194443	AdditiveExpression	dp + ( ( sec & 31 ) << 4 )		6194352	1		+			
ANR	6194444	Identifier	dp		6194352	0					
ANR	6194445	ShiftExpression	( sec & 31 ) << 4		6194352	1		<<			
ANR	6194446	BitAndExpression	sec & 31		6194352	0		&			
ANR	6194447	Identifier	sec		6194352	0					
ANR	6194448	PrimaryExpression	31		6194352	1					
ANR	6194449	PrimaryExpression	4		6194352	1					
ANR	6194450	ElseStatement	else		6194352	0					
ANR	6194451	CompoundStatement		27:15:421:421	6194352	0					
ANR	6194452	IfStatement	if ( sec + secn > s -> secs_cur )		6194352	0					
ANR	6194453	Condition	sec + secn > s -> secs_cur	33:16:543:566	6194352	0	True				
ANR	6194454	RelationalExpression	sec + secn > s -> secs_cur		6194352	0		>			
ANR	6194455	AdditiveExpression	sec + secn		6194352	0		+			
ANR	6194456	Identifier	sec		6194352	0					
ANR	6194457	Identifier	secn		6194352	1					
ANR	6194458	PtrMemberAccess	s -> secs_cur		6194352	1					
ANR	6194459	Identifier	s		6194352	0					
ANR	6194460	Identifier	secs_cur		6194352	1					
ANR	6194461	CompoundStatement		29:42:466:466	6194352	1					
ANR	6194462	ExpressionStatement	result = 1	35:16:588:598	6194352	0	True				
ANR	6194463	AssignmentExpression	result = 1		6194352	0		=			
ANR	6194464	Identifier	result		6194352	0					
ANR	6194465	PrimaryExpression	1		6194352	1					
ANR	6194466	ElseStatement	else		6194352	0					
ANR	6194467	CompoundStatement		33:19:517:517	6194352	0					
ANR	6194468	ExpressionStatement	dpp = s -> current + ( s -> secs_cur << 9 ) + ( sec << 4 )	39:16:639:689	6194352	0	True				
ANR	6194469	AssignmentExpression	dpp = s -> current + ( s -> secs_cur << 9 ) + ( sec << 4 )		6194352	0		=			
ANR	6194470	Identifier	dpp		6194352	0					
ANR	6194471	AdditiveExpression	s -> current + ( s -> secs_cur << 9 ) + ( sec << 4 )		6194352	1		+			
ANR	6194472	PtrMemberAccess	s -> current		6194352	0					
ANR	6194473	Identifier	s		6194352	0					
ANR	6194474	Identifier	current		6194352	1					
ANR	6194475	AdditiveExpression	( s -> secs_cur << 9 ) + ( sec << 4 )		6194352	1		+			
ANR	6194476	ShiftExpression	s -> secs_cur << 9		6194352	0		<<			
ANR	6194477	PtrMemberAccess	s -> secs_cur		6194352	0					
ANR	6194478	Identifier	s		6194352	0					
ANR	6194479	Identifier	secs_cur		6194352	1					
ANR	6194480	PrimaryExpression	9		6194352	1					
ANR	6194481	ShiftExpression	sec << 4		6194352	1		<<			
ANR	6194482	Identifier	sec		6194352	0					
ANR	6194483	PrimaryExpression	4		6194352	1					
ANR	6194484	IfStatement	if ( ! result )		6194352	3					
ANR	6194485	Condition	! result	45:12:730:736	6194352	0	True				
ANR	6194486	UnaryOperationExpression	! result		6194352	0					
ANR	6194487	UnaryOperator	!		6194352	0					
ANR	6194488	Identifier	result		6194352	1					
ANR	6194489	CompoundStatement		43:12:651:661	6194352	1					
ANR	6194490	IdentifierDeclStatement	uint32_t i ;	47:12:754:764	6194352	0	True				
ANR	6194491	IdentifierDecl	i		6194352	0					
ANR	6194492	IdentifierDeclType	uint32_t		6194352	0					
ANR	6194493	Identifier	i		6194352	1					
ANR	6194494	ForStatement	for ( i = 0 ; i < ( secn << 4 ) ; i ++ )		6194352	1					
ANR	6194495	ForInit	i = 0 ;	49:17:784:789	6194352	0	True				
ANR	6194496	AssignmentExpression	i = 0		6194352	0		=			
ANR	6194497	Identifier	i		6194352	0					
ANR	6194498	PrimaryExpression	0		6194352	1					
ANR	6194499	Condition	i < ( secn << 4 )	49:24:791:805	6194352	1	True				
ANR	6194500	RelationalExpression	i < ( secn << 4 )		6194352	0		<			
ANR	6194501	Identifier	i		6194352	0					
ANR	6194502	ShiftExpression	secn << 4		6194352	1		<<			
ANR	6194503	Identifier	secn		6194352	0					
ANR	6194504	PrimaryExpression	4		6194352	1					
ANR	6194505	PostIncDecOperationExpression	i ++	49:41:808:810	6194352	2	True				
ANR	6194506	Identifier	i		6194352	0					
ANR	6194507	IncDec	++		6194352	1					
ANR	6194508	CompoundStatement		45:46:710:710	6194352	3					
ANR	6194509	ExpressionStatement	dpp [ i ] &= sp [ i ]	51:16:832:847	6194352	0	True				
ANR	6194510	AssignmentExpression	dpp [ i ] &= sp [ i ]		6194352	0		&=			
ANR	6194511	ArrayIndexing	dpp [ i ]		6194352	0					
ANR	6194512	Identifier	dpp		6194352	0					
ANR	6194513	Identifier	i		6194352	1					
ANR	6194514	ArrayIndexing	sp [ i ]		6194352	1					
ANR	6194515	Identifier	sp		6194352	0					
ANR	6194516	Identifier	i		6194352	1					
ANR	6194517	IfStatement	if ( s -> blk_cur )		6194352	2					
ANR	6194518	Condition	s -> blk_cur	55:16:881:890	6194352	0	True				
ANR	6194519	PtrMemberAccess	s -> blk_cur		6194352	0					
ANR	6194520	Identifier	s		6194352	0					
ANR	6194521	Identifier	blk_cur		6194352	1					
ANR	6194522	CompoundStatement		51:28:790:790	6194352	1					
ANR	6194523	ExpressionStatement	"result = blk_write ( s -> blk_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0"	57:16:912:1015	6194352	0	True				
ANR	6194524	AssignmentExpression	"result = blk_write ( s -> blk_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0"		6194352	0		=			
ANR	6194525	Identifier	result		6194352	0					
ANR	6194526	RelationalExpression	"blk_write ( s -> blk_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0"		6194352	1		<			
ANR	6194527	CallExpression	"blk_write ( s -> blk_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 )"		6194352	0					
ANR	6194528	Callee	blk_write		6194352	0					
ANR	6194529	Identifier	blk_write		6194352	0					
ANR	6194530	ArgumentList	s -> blk_cur		6194352	1					
ANR	6194531	Argument	s -> blk_cur		6194352	0					
ANR	6194532	PtrMemberAccess	s -> blk_cur		6194352	0					
ANR	6194533	Identifier	s		6194352	0					
ANR	6194534	Identifier	blk_cur		6194352	1					
ANR	6194535	Argument	s -> secs_cur + ( sec >> 5 )		6194352	1					
ANR	6194536	AdditiveExpression	s -> secs_cur + ( sec >> 5 )		6194352	0		+			
ANR	6194537	PtrMemberAccess	s -> secs_cur		6194352	0					
ANR	6194538	Identifier	s		6194352	0					
ANR	6194539	Identifier	secs_cur		6194352	1					
ANR	6194540	ShiftExpression	sec >> 5		6194352	1		>>			
ANR	6194541	Identifier	sec		6194352	0					
ANR	6194542	PrimaryExpression	5		6194352	1					
ANR	6194543	Argument	dp		6194352	2					
ANR	6194544	Identifier	dp		6194352	0					
ANR	6194545	Argument	1		6194352	3					
ANR	6194546	PrimaryExpression	1		6194352	0					
ANR	6194547	PrimaryExpression	0		6194352	1					
ANR	6194548	ExpressionStatement	g_free ( dp )	65:8:1052:1062	6194352	4	True				
ANR	6194549	CallExpression	g_free ( dp )		6194352	0					
ANR	6194550	Callee	g_free		6194352	0					
ANR	6194551	Identifier	g_free		6194352	0					
ANR	6194552	ArgumentList	dp		6194352	1					
ANR	6194553	Argument	dp		6194352	0					
ANR	6194554	Identifier	dp		6194352	0					
ANR	6194555	ReturnStatement	return result ;	69:4:1076:1089	6194352	2	True				
ANR	6194556	Identifier	result		6194352	0					
ANR	6194557	ReturnType	static inline int		6194352	1					
ANR	6194558	Identifier	onenand_prog_spare		6194352	2					
ANR	6194559	ParameterList	"OneNANDState * s , int sec , int secn , void * src"		6194352	3					
ANR	6194560	Parameter	OneNANDState * s	1:37:37:51	6194352	0	True				
ANR	6194561	ParameterType	OneNANDState *		6194352	0					
ANR	6194562	Identifier	s		6194352	1					
ANR	6194563	Parameter	int sec	1:54:54:60	6194352	1	True				
ANR	6194564	ParameterType	int		6194352	0					
ANR	6194565	Identifier	sec		6194352	1					
ANR	6194566	Parameter	int secn	1:63:63:70	6194352	2	True				
ANR	6194567	ParameterType	int		6194352	0					
ANR	6194568	Identifier	secn		6194352	1					
ANR	6194569	Parameter	void * src	3:16:90:98	6194352	3	True				
ANR	6194570	ParameterType	void *		6194352	0					
ANR	6194571	Identifier	src		6194352	1					
ANR	6194572	CFGEntryNode	ENTRY		6194352		True				
ANR	6194573	CFGExitNode	EXIT		6194352		True				
ANR	6194574	Symbol	* sp		6194352						
ANR	6194575	Symbol	s -> blk_cur		6194352						
ANR	6194576	Symbol	src		6194352						
ANR	6194577	Symbol	dpp		6194352						
ANR	6194578	Symbol	s -> current		6194352						
ANR	6194579	Symbol	secn		6194352						
ANR	6194580	Symbol	i		6194352						
ANR	6194581	Symbol	blk_write		6194352						
ANR	6194582	Symbol	dp		6194352						
ANR	6194583	Symbol	s -> secs_cur		6194352						
ANR	6194584	Symbol	blk_read		6194352						
ANR	6194585	Symbol	sec		6194352						
ANR	6194586	Symbol	result		6194352						
ANR	6194587	Symbol	* dpp		6194352						
ANR	6194588	Symbol	g_malloc		6194352						
ANR	6194589	Symbol	s		6194352						
ANR	6194590	Symbol	* i		6194352						
ANR	6194591	Symbol	sp		6194352						
ANR	6194592	Symbol	* s		6194352						
