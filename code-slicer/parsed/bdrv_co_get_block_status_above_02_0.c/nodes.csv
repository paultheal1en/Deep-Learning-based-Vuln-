command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	963562	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bdrv_co_get_block_status_above_02_0.c								
ANR	963563	Function	bdrv_co_get_block_status_above	1:0:0:1278							
ANR	963564	FunctionDef	"bdrv_co_get_block_status_above (BlockDriverState * bs , BlockDriverState * base , bool want_zero , int64_t sector_num , int nb_sectors , int * pnum , BlockDriverState * * file)"		963563	0					
ANR	963565	CompoundStatement		15:0:248:1278	963563	0					
ANR	963566	IdentifierDeclStatement	BlockDriverState * p ;	17:4:255:274	963563	0	True				
ANR	963567	IdentifierDecl	* p		963563	0					
ANR	963568	IdentifierDeclType	BlockDriverState *		963563	0					
ANR	963569	Identifier	p		963563	1					
ANR	963570	IdentifierDeclStatement	int64_t ret = 0 ;	19:4:281:296	963563	1	True				
ANR	963571	IdentifierDecl	ret = 0		963563	0					
ANR	963572	IdentifierDeclType	int64_t		963563	0					
ANR	963573	Identifier	ret		963563	1					
ANR	963574	AssignmentExpression	ret = 0		963563	2		=			
ANR	963575	Identifier	ret		963563	0					
ANR	963576	PrimaryExpression	0		963563	1					
ANR	963577	IdentifierDeclStatement	bool first = true ;	21:4:303:320	963563	2	True				
ANR	963578	IdentifierDecl	first = true		963563	0					
ANR	963579	IdentifierDeclType	bool		963563	0					
ANR	963580	Identifier	first		963563	1					
ANR	963581	AssignmentExpression	first = true		963563	2		=			
ANR	963582	Identifier	true		963563	0					
ANR	963583	Identifier	true		963563	1					
ANR	963584	ExpressionStatement	assert ( bs != base )	25:4:329:347	963563	3	True				
ANR	963585	CallExpression	assert ( bs != base )		963563	0					
ANR	963586	Callee	assert		963563	0					
ANR	963587	Identifier	assert		963563	0					
ANR	963588	ArgumentList	bs != base		963563	1					
ANR	963589	Argument	bs != base		963563	0					
ANR	963590	EqualityExpression	bs != base		963563	0		!=			
ANR	963591	Identifier	bs		963563	0					
ANR	963592	Identifier	base		963563	1					
ANR	963593	ForStatement	for ( p = bs ; p != base ; p = backing_bs ( p ) )		963563	4					
ANR	963594	ForInit	p = bs ;	27:9:359:365	963563	0	True				
ANR	963595	AssignmentExpression	p = bs		963563	0		=			
ANR	963596	Identifier	p		963563	0					
ANR	963597	Identifier	bs		963563	1					
ANR	963598	Condition	p != base	27:17:367:375	963563	1	True				
ANR	963599	EqualityExpression	p != base		963563	0		!=			
ANR	963600	Identifier	p		963563	0					
ANR	963601	Identifier	base		963563	1					
ANR	963602	AssignmentExpression	p = backing_bs ( p )	27:28:378:394	963563	2	True	=			
ANR	963603	Identifier	p		963563	0					
ANR	963604	CallExpression	backing_bs ( p )		963563	1					
ANR	963605	Callee	backing_bs		963563	0					
ANR	963606	Identifier	backing_bs		963563	0					
ANR	963607	ArgumentList	p		963563	1					
ANR	963608	Argument	p		963563	0					
ANR	963609	Identifier	p		963563	0					
ANR	963610	CompoundStatement		13:47:148:148	963563	3					
ANR	963611	ExpressionStatement	"ret = bdrv_co_get_block_status ( p , want_zero , sector_num , nb_sectors , pnum , file )"	29:8:408:528	963563	0	True				
ANR	963612	AssignmentExpression	"ret = bdrv_co_get_block_status ( p , want_zero , sector_num , nb_sectors , pnum , file )"		963563	0		=			
ANR	963613	Identifier	ret		963563	0					
ANR	963614	CallExpression	"bdrv_co_get_block_status ( p , want_zero , sector_num , nb_sectors , pnum , file )"		963563	1					
ANR	963615	Callee	bdrv_co_get_block_status		963563	0					
ANR	963616	Identifier	bdrv_co_get_block_status		963563	0					
ANR	963617	ArgumentList	p		963563	1					
ANR	963618	Argument	p		963563	0					
ANR	963619	Identifier	p		963563	0					
ANR	963620	Argument	want_zero		963563	1					
ANR	963621	Identifier	want_zero		963563	0					
ANR	963622	Argument	sector_num		963563	2					
ANR	963623	Identifier	sector_num		963563	0					
ANR	963624	Argument	nb_sectors		963563	3					
ANR	963625	Identifier	nb_sectors		963563	0					
ANR	963626	Argument	pnum		963563	4					
ANR	963627	Identifier	pnum		963563	0					
ANR	963628	Argument	file		963563	5					
ANR	963629	Identifier	file		963563	0					
ANR	963630	IfStatement	if ( ret < 0 )		963563	1					
ANR	963631	Condition	ret < 0	33:12:543:549	963563	0	True				
ANR	963632	RelationalExpression	ret < 0		963563	0		<			
ANR	963633	Identifier	ret		963563	0					
ANR	963634	PrimaryExpression	0		963563	1					
ANR	963635	CompoundStatement		19:21:303:303	963563	1					
ANR	963636	BreakStatement	break ;	35:12:567:572	963563	0	True				
ANR	963637	IfStatement	if ( ret & BDRV_BLOCK_ZERO && ret & BDRV_BLOCK_EOF && ! first )		963563	2					
ANR	963638	Condition	ret & BDRV_BLOCK_ZERO && ret & BDRV_BLOCK_EOF && ! first	39:12:598:652	963563	0	True				
ANR	963639	AndExpression	ret & BDRV_BLOCK_ZERO && ret & BDRV_BLOCK_EOF && ! first		963563	0		&&			
ANR	963640	BitAndExpression	ret & BDRV_BLOCK_ZERO		963563	0		&			
ANR	963641	Identifier	ret		963563	0					
ANR	963642	Identifier	BDRV_BLOCK_ZERO		963563	1					
ANR	963643	AndExpression	ret & BDRV_BLOCK_EOF && ! first		963563	1		&&			
ANR	963644	BitAndExpression	ret & BDRV_BLOCK_EOF		963563	0		&			
ANR	963645	Identifier	ret		963563	0					
ANR	963646	Identifier	BDRV_BLOCK_EOF		963563	1					
ANR	963647	UnaryOperationExpression	! first		963563	1					
ANR	963648	UnaryOperator	!		963563	0					
ANR	963649	Identifier	first		963563	1					
ANR	963650	CompoundStatement		25:69:406:406	963563	1					
ANR	963651	ExpressionStatement	* pnum = nb_sectors	53:12:925:943	963563	0	True				
ANR	963652	AssignmentExpression	* pnum = nb_sectors		963563	0		=			
ANR	963653	UnaryOperationExpression	* pnum		963563	0					
ANR	963654	UnaryOperator	*		963563	0					
ANR	963655	Identifier	pnum		963563	1					
ANR	963656	Identifier	nb_sectors		963563	1					
ANR	963657	IfStatement	if ( ret & ( BDRV_BLOCK_ZERO | BDRV_BLOCK_DATA ) )		963563	3					
ANR	963658	Condition	ret & ( BDRV_BLOCK_ZERO | BDRV_BLOCK_DATA )	57:12:969:1009	963563	0	True				
ANR	963659	BitAndExpression	ret & ( BDRV_BLOCK_ZERO | BDRV_BLOCK_DATA )		963563	0		&			
ANR	963660	Identifier	ret		963563	0					
ANR	963661	InclusiveOrExpression	BDRV_BLOCK_ZERO | BDRV_BLOCK_DATA		963563	1		|			
ANR	963662	Identifier	BDRV_BLOCK_ZERO		963563	0					
ANR	963663	Identifier	BDRV_BLOCK_DATA		963563	1					
ANR	963664	CompoundStatement		43:55:763:763	963563	1					
ANR	963665	BreakStatement	break ;	59:12:1027:1032	963563	0	True				
ANR	963666	ExpressionStatement	"nb_sectors = MIN ( nb_sectors , * pnum )"	67:8:1192:1227	963563	4	True				
ANR	963667	AssignmentExpression	"nb_sectors = MIN ( nb_sectors , * pnum )"		963563	0		=			
ANR	963668	Identifier	nb_sectors		963563	0					
ANR	963669	CallExpression	"MIN ( nb_sectors , * pnum )"		963563	1					
ANR	963670	Callee	MIN		963563	0					
ANR	963671	Identifier	MIN		963563	0					
ANR	963672	ArgumentList	nb_sectors		963563	1					
ANR	963673	Argument	nb_sectors		963563	0					
ANR	963674	Identifier	nb_sectors		963563	0					
ANR	963675	Argument	* pnum		963563	1					
ANR	963676	UnaryOperationExpression	* pnum		963563	0					
ANR	963677	UnaryOperator	*		963563	0					
ANR	963678	Identifier	pnum		963563	1					
ANR	963679	ExpressionStatement	first = false	69:8:1238:1251	963563	5	True				
ANR	963680	AssignmentExpression	first = false		963563	0		=			
ANR	963681	Identifier	first		963563	0					
ANR	963682	Identifier	false		963563	1					
ANR	963683	ReturnStatement	return ret ;	73:4:1265:1275	963563	5	True				
ANR	963684	Identifier	ret		963563	0					
ANR	963685	ReturnType	static int64_t coroutine_fn		963563	1					
ANR	963686	Identifier	bdrv_co_get_block_status_above		963563	2					
ANR	963687	ParameterList	"BlockDriverState * bs , BlockDriverState * base , bool want_zero , int64_t sector_num , int nb_sectors , int * pnum , BlockDriverState * * file"		963563	3					
ANR	963688	Parameter	BlockDriverState * bs	1:59:59:78	963563	0	True				
ANR	963689	ParameterType	BlockDriverState *		963563	0					
ANR	963690	Identifier	bs		963563	1					
ANR	963691	Parameter	BlockDriverState * base	3:8:90:111	963563	1	True				
ANR	963692	ParameterType	BlockDriverState *		963563	0					
ANR	963693	Identifier	base		963563	1					
ANR	963694	Parameter	bool want_zero	5:8:123:136	963563	2	True				
ANR	963695	ParameterType	bool		963563	0					
ANR	963696	Identifier	want_zero		963563	1					
ANR	963697	Parameter	int64_t sector_num	7:8:148:165	963563	3	True				
ANR	963698	ParameterType	int64_t		963563	0					
ANR	963699	Identifier	sector_num		963563	1					
ANR	963700	Parameter	int nb_sectors	9:8:177:190	963563	4	True				
ANR	963701	ParameterType	int		963563	0					
ANR	963702	Identifier	nb_sectors		963563	1					
ANR	963703	Parameter	int * pnum	11:8:202:210	963563	5	True				
ANR	963704	ParameterType	int *		963563	0					
ANR	963705	Identifier	pnum		963563	1					
ANR	963706	Parameter	BlockDriverState * * file	13:8:222:244	963563	6	True				
ANR	963707	ParameterType	BlockDriverState * *		963563	0					
ANR	963708	Identifier	file		963563	1					
ANR	963709	CFGEntryNode	ENTRY		963563		True				
ANR	963710	CFGExitNode	EXIT		963563		True				
ANR	963711	Symbol	ret		963563						
ANR	963712	Symbol	nb_sectors		963563						
ANR	963713	Symbol	pnum		963563						
ANR	963714	Symbol	want_zero		963563						
ANR	963715	Symbol	BDRV_BLOCK_DATA		963563						
ANR	963716	Symbol	false		963563						
ANR	963717	Symbol	bdrv_co_get_block_status		963563						
ANR	963718	Symbol	BDRV_BLOCK_ZERO		963563						
ANR	963719	Symbol	sector_num		963563						
ANR	963720	Symbol	* pnum		963563						
ANR	963721	Symbol	p		963563						
ANR	963722	Symbol	backing_bs		963563						
ANR	963723	Symbol	bs		963563						
ANR	963724	Symbol	BDRV_BLOCK_EOF		963563						
ANR	963725	Symbol	file		963563						
ANR	963726	Symbol	MIN		963563						
ANR	963727	Symbol	true		963563						
ANR	963728	Symbol	first		963563						
ANR	963729	Symbol	base		963563						
