command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5850225	File	/home/p4ultr4n/workplace/ReVeal/raw_code/multiwrite_f_0.c								
ANR	5850226	Function	multiwrite_f	1:0:0:3127							
ANR	5850227	FunctionDef	"multiwrite_f (BlockBackend * blk , int argc , char * * argv)"		5850226	0					
ANR	5850228	CompoundStatement		3:0:67:3127	5850226	0					
ANR	5850229	IdentifierDeclStatement	"struct timeval t1 , t2 ;"	5:4:74:95	5850226	0	True				
ANR	5850230	IdentifierDecl	t1		5850226	0					
ANR	5850231	IdentifierDeclType	struct timeval		5850226	0					
ANR	5850232	Identifier	t1		5850226	1					
ANR	5850233	IdentifierDecl	t2		5850226	1					
ANR	5850234	IdentifierDeclType	struct timeval		5850226	0					
ANR	5850235	Identifier	t2		5850226	1					
ANR	5850236	IdentifierDeclStatement	"int Cflag = 0 , qflag = 0 ;"	7:4:102:126	5850226	1	True				
ANR	5850237	IdentifierDecl	Cflag = 0		5850226	0					
ANR	5850238	IdentifierDeclType	int		5850226	0					
ANR	5850239	Identifier	Cflag		5850226	1					
ANR	5850240	AssignmentExpression	Cflag = 0		5850226	2		=			
ANR	5850241	Identifier	Cflag		5850226	0					
ANR	5850242	PrimaryExpression	0		5850226	1					
ANR	5850243	IdentifierDecl	qflag = 0		5850226	1					
ANR	5850244	IdentifierDeclType	int		5850226	0					
ANR	5850245	Identifier	qflag		5850226	1					
ANR	5850246	AssignmentExpression	qflag = 0		5850226	2		=			
ANR	5850247	Identifier	qflag		5850226	0					
ANR	5850248	PrimaryExpression	0		5850226	1					
ANR	5850249	IdentifierDeclStatement	"int c , cnt ;"	9:4:133:143	5850226	2	True				
ANR	5850250	IdentifierDecl	c		5850226	0					
ANR	5850251	IdentifierDeclType	int		5850226	0					
ANR	5850252	Identifier	c		5850226	1					
ANR	5850253	IdentifierDecl	cnt		5850226	1					
ANR	5850254	IdentifierDeclType	int		5850226	0					
ANR	5850255	Identifier	cnt		5850226	1					
ANR	5850256	IdentifierDeclStatement	char * * buf ;	11:4:150:160	5850226	3	True				
ANR	5850257	IdentifierDecl	* * buf		5850226	0					
ANR	5850258	IdentifierDeclType	char * *		5850226	0					
ANR	5850259	Identifier	buf		5850226	1					
ANR	5850260	IdentifierDeclStatement	"int64_t offset , first_offset = 0 ;"	13:4:167:199	5850226	4	True				
ANR	5850261	IdentifierDecl	offset		5850226	0					
ANR	5850262	IdentifierDeclType	int64_t		5850226	0					
ANR	5850263	Identifier	offset		5850226	1					
ANR	5850264	IdentifierDecl	first_offset = 0		5850226	1					
ANR	5850265	IdentifierDeclType	int64_t		5850226	0					
ANR	5850266	Identifier	first_offset		5850226	1					
ANR	5850267	AssignmentExpression	first_offset = 0		5850226	2		=			
ANR	5850268	Identifier	first_offset		5850226	0					
ANR	5850269	PrimaryExpression	0		5850226	1					
ANR	5850270	IdentifierDeclStatement	int total = 0 ;	17:4:283:296	5850226	5	True				
ANR	5850271	IdentifierDecl	total = 0		5850226	0					
ANR	5850272	IdentifierDeclType	int		5850226	0					
ANR	5850273	Identifier	total		5850226	1					
ANR	5850274	AssignmentExpression	total = 0		5850226	2		=			
ANR	5850275	Identifier	total		5850226	0					
ANR	5850276	PrimaryExpression	0		5850226	1					
ANR	5850277	IdentifierDeclStatement	int nr_iov ;	19:4:303:313	5850226	6	True				
ANR	5850278	IdentifierDecl	nr_iov		5850226	0					
ANR	5850279	IdentifierDeclType	int		5850226	0					
ANR	5850280	Identifier	nr_iov		5850226	1					
ANR	5850281	IdentifierDeclStatement	int nr_reqs ;	21:4:320:331	5850226	7	True				
ANR	5850282	IdentifierDecl	nr_reqs		5850226	0					
ANR	5850283	IdentifierDeclType	int		5850226	0					
ANR	5850284	Identifier	nr_reqs		5850226	1					
ANR	5850285	IdentifierDeclStatement	int pattern = 0xcd ;	23:4:338:356	5850226	8	True				
ANR	5850286	IdentifierDecl	pattern = 0xcd		5850226	0					
ANR	5850287	IdentifierDeclType	int		5850226	0					
ANR	5850288	Identifier	pattern		5850226	1					
ANR	5850289	AssignmentExpression	pattern = 0xcd		5850226	2		=			
ANR	5850290	Identifier	pattern		5850226	0					
ANR	5850291	PrimaryExpression	0xcd		5850226	1					
ANR	5850292	IdentifierDeclStatement	QEMUIOVector * qiovs ;	25:4:363:382	5850226	9	True				
ANR	5850293	IdentifierDecl	* qiovs		5850226	0					
ANR	5850294	IdentifierDeclType	QEMUIOVector *		5850226	0					
ANR	5850295	Identifier	qiovs		5850226	1					
ANR	5850296	IdentifierDeclStatement	int i ;	27:4:389:394	5850226	10	True				
ANR	5850297	IdentifierDecl	i		5850226	0					
ANR	5850298	IdentifierDeclType	int		5850226	0					
ANR	5850299	Identifier	i		5850226	1					
ANR	5850300	IdentifierDeclStatement	BlockRequest * reqs ;	29:4:401:419	5850226	11	True				
ANR	5850301	IdentifierDecl	* reqs		5850226	0					
ANR	5850302	IdentifierDeclType	BlockRequest *		5850226	0					
ANR	5850303	Identifier	reqs		5850226	1					
ANR	5850304	WhileStatement	"while ( ( c = getopt ( argc , argv , ""CqP:"" ) ) != EOF )"		5850226	12					
ANR	5850305	Condition	"( c = getopt ( argc , argv , ""CqP:"" ) ) != EOF"	33:11:435:473	5850226	0	True				
ANR	5850306	EqualityExpression	"( c = getopt ( argc , argv , ""CqP:"" ) ) != EOF"		5850226	0		!=			
ANR	5850307	AssignmentExpression	"c = getopt ( argc , argv , ""CqP:"" )"		5850226	0		=			
ANR	5850308	Identifier	c		5850226	0					
ANR	5850309	CallExpression	"getopt ( argc , argv , ""CqP:"" )"		5850226	1					
ANR	5850310	Callee	getopt		5850226	0					
ANR	5850311	Identifier	getopt		5850226	0					
ANR	5850312	ArgumentList	argc		5850226	1					
ANR	5850313	Argument	argc		5850226	0					
ANR	5850314	Identifier	argc		5850226	0					
ANR	5850315	Argument	argv		5850226	1					
ANR	5850316	Identifier	argv		5850226	0					
ANR	5850317	Argument	"""CqP:"""		5850226	2					
ANR	5850318	PrimaryExpression	"""CqP:"""		5850226	0					
ANR	5850319	Identifier	EOF		5850226	1					
ANR	5850320	CompoundStatement		31:52:408:408	5850226	1					
ANR	5850321	SwitchStatement	switch ( c )		5850226	0					
ANR	5850322	Condition	c	35:16:495:495	5850226	0	True				
ANR	5850323	Identifier	c		5850226	0					
ANR	5850324	CompoundStatement		33:19:430:430	5850226	1					
ANR	5850325	Label	case 'C' :	37:8:509:517	5850226	0	True				
ANR	5850326	ExpressionStatement	Cflag = 1	39:12:532:541	5850226	1	True				
ANR	5850327	AssignmentExpression	Cflag = 1		5850226	0		=			
ANR	5850328	Identifier	Cflag		5850226	0					
ANR	5850329	PrimaryExpression	1		5850226	1					
ANR	5850330	BreakStatement	break ;	41:12:556:561	5850226	2	True				
ANR	5850331	Label	case 'q' :	43:8:572:580	5850226	3	True				
ANR	5850332	ExpressionStatement	qflag = 1	45:12:595:604	5850226	4	True				
ANR	5850333	AssignmentExpression	qflag = 1		5850226	0		=			
ANR	5850334	Identifier	qflag		5850226	0					
ANR	5850335	PrimaryExpression	1		5850226	1					
ANR	5850336	BreakStatement	break ;	47:12:619:624	5850226	5	True				
ANR	5850337	Label	case 'P' :	49:8:635:643	5850226	6	True				
ANR	5850338	ExpressionStatement	pattern = parse_pattern ( optarg )	51:12:658:689	5850226	7	True				
ANR	5850339	AssignmentExpression	pattern = parse_pattern ( optarg )		5850226	0		=			
ANR	5850340	Identifier	pattern		5850226	0					
ANR	5850341	CallExpression	parse_pattern ( optarg )		5850226	1					
ANR	5850342	Callee	parse_pattern		5850226	0					
ANR	5850343	Identifier	parse_pattern		5850226	0					
ANR	5850344	ArgumentList	optarg		5850226	1					
ANR	5850345	Argument	optarg		5850226	0					
ANR	5850346	Identifier	optarg		5850226	0					
ANR	5850347	IfStatement	if ( pattern < 0 )		5850226	8					
ANR	5850348	Condition	pattern < 0	53:16:708:718	5850226	0	True				
ANR	5850349	RelationalExpression	pattern < 0		5850226	0		<			
ANR	5850350	Identifier	pattern		5850226	0					
ANR	5850351	PrimaryExpression	0		5850226	1					
ANR	5850352	CompoundStatement		51:29:653:653	5850226	1					
ANR	5850353	ReturnStatement	return 0 ;	55:16:740:748	5850226	0	True				
ANR	5850354	PrimaryExpression	0		5850226	0					
ANR	5850355	BreakStatement	break ;	59:12:778:783	5850226	9	True				
ANR	5850356	Label	default :	61:8:794:801	5850226	10	True				
ANR	5850357	Identifier	default		5850226	0					
ANR	5850358	ReturnStatement	return qemuio_command_usage ( & writev_cmd ) ;	63:12:816:856	5850226	11	True				
ANR	5850359	CallExpression	qemuio_command_usage ( & writev_cmd )		5850226	0					
ANR	5850360	Callee	qemuio_command_usage		5850226	0					
ANR	5850361	Identifier	qemuio_command_usage		5850226	0					
ANR	5850362	ArgumentList	& writev_cmd		5850226	1					
ANR	5850363	Argument	& writev_cmd		5850226	0					
ANR	5850364	UnaryOperationExpression	& writev_cmd		5850226	0					
ANR	5850365	UnaryOperator	&		5850226	0					
ANR	5850366	Identifier	writev_cmd		5850226	1					
ANR	5850367	IfStatement	if ( optind > argc - 2 )		5850226	13					
ANR	5850368	Condition	optind > argc - 2	71:8:887:903	5850226	0	True				
ANR	5850369	RelationalExpression	optind > argc - 2		5850226	0		>			
ANR	5850370	Identifier	optind		5850226	0					
ANR	5850371	AdditiveExpression	argc - 2		5850226	1		-			
ANR	5850372	Identifier	argc		5850226	0					
ANR	5850373	PrimaryExpression	2		5850226	1					
ANR	5850374	CompoundStatement		69:27:838:838	5850226	1					
ANR	5850375	ReturnStatement	return qemuio_command_usage ( & writev_cmd ) ;	73:8:917:957	5850226	0	True				
ANR	5850376	CallExpression	qemuio_command_usage ( & writev_cmd )		5850226	0					
ANR	5850377	Callee	qemuio_command_usage		5850226	0					
ANR	5850378	Identifier	qemuio_command_usage		5850226	0					
ANR	5850379	ArgumentList	& writev_cmd		5850226	1					
ANR	5850380	Argument	& writev_cmd		5850226	0					
ANR	5850381	UnaryOperationExpression	& writev_cmd		5850226	0					
ANR	5850382	UnaryOperator	&		5850226	0					
ANR	5850383	Identifier	writev_cmd		5850226	1					
ANR	5850384	ExpressionStatement	nr_reqs = 1	79:4:973:984	5850226	14	True				
ANR	5850385	AssignmentExpression	nr_reqs = 1		5850226	0		=			
ANR	5850386	Identifier	nr_reqs		5850226	0					
ANR	5850387	PrimaryExpression	1		5850226	1					
ANR	5850388	ForStatement	for ( i = optind ; i < argc ; i ++ )		5850226	15					
ANR	5850389	ForInit	i = optind ;	81:9:996:1006	5850226	0	True				
ANR	5850390	AssignmentExpression	i = optind		5850226	0		=			
ANR	5850391	Identifier	i		5850226	0					
ANR	5850392	Identifier	optind		5850226	1					
ANR	5850393	Condition	i < argc	81:21:1008:1015	5850226	1	True				
ANR	5850394	RelationalExpression	i < argc		5850226	0		<			
ANR	5850395	Identifier	i		5850226	0					
ANR	5850396	Identifier	argc		5850226	1					
ANR	5850397	PostIncDecOperationExpression	i ++	81:31:1018:1020	5850226	2	True				
ANR	5850398	Identifier	i		5850226	0					
ANR	5850399	IncDec	++		5850226	1					
ANR	5850400	CompoundStatement		79:36:955:955	5850226	3					
ANR	5850401	IfStatement	"if ( ! strcmp ( argv [ i ] , "";"" ) )"		5850226	0					
ANR	5850402	Condition	"! strcmp ( argv [ i ] , "";"" )"	83:12:1038:1058	5850226	0	True				
ANR	5850403	UnaryOperationExpression	"! strcmp ( argv [ i ] , "";"" )"		5850226	0					
ANR	5850404	UnaryOperator	!		5850226	0					
ANR	5850405	CallExpression	"strcmp ( argv [ i ] , "";"" )"		5850226	1					
ANR	5850406	Callee	strcmp		5850226	0					
ANR	5850407	Identifier	strcmp		5850226	0					
ANR	5850408	ArgumentList	argv [ i ]		5850226	1					
ANR	5850409	Argument	argv [ i ]		5850226	0					
ANR	5850410	ArrayIndexing	argv [ i ]		5850226	0					
ANR	5850411	Identifier	argv		5850226	0					
ANR	5850412	Identifier	i		5850226	1					
ANR	5850413	Argument	""";"""		5850226	1					
ANR	5850414	PrimaryExpression	""";"""		5850226	0					
ANR	5850415	CompoundStatement		81:35:993:993	5850226	1					
ANR	5850416	ExpressionStatement	nr_reqs ++	85:12:1076:1085	5850226	0	True				
ANR	5850417	PostIncDecOperationExpression	nr_reqs ++		5850226	0					
ANR	5850418	Identifier	nr_reqs		5850226	0					
ANR	5850419	IncDec	++		5850226	1					
ANR	5850420	ExpressionStatement	"reqs = g_new0 ( BlockRequest , nr_reqs )"	93:4:1112:1148	5850226	16	True				
ANR	5850421	AssignmentExpression	"reqs = g_new0 ( BlockRequest , nr_reqs )"		5850226	0		=			
ANR	5850422	Identifier	reqs		5850226	0					
ANR	5850423	CallExpression	"g_new0 ( BlockRequest , nr_reqs )"		5850226	1					
ANR	5850424	Callee	g_new0		5850226	0					
ANR	5850425	Identifier	g_new0		5850226	0					
ANR	5850426	ArgumentList	BlockRequest		5850226	1					
ANR	5850427	Argument	BlockRequest		5850226	0					
ANR	5850428	Identifier	BlockRequest		5850226	0					
ANR	5850429	Argument	nr_reqs		5850226	1					
ANR	5850430	Identifier	nr_reqs		5850226	0					
ANR	5850431	Statement	buf	95:4:1155:1157	5850226	17	True				
ANR	5850432	Statement	=	95:8:1159:1159	5850226	18	True				
ANR	5850433	Statement	g_new0	95:10:1161:1166	5850226	19	True				
ANR	5850434	Statement	(	95:16:1167:1167	5850226	20	True				
ANR	5850435	Statement	char	95:17:1168:1171	5850226	21	True				
ANR	5850436	Statement	*	95:22:1173:1173	5850226	22	True				
ANR	5850437	Statement	","	95:23:1174:1174	5850226	23	True				
ANR	5850438	Statement	nr_reqs	95:25:1176:1182	5850226	24	True				
ANR	5850439	Statement	)	95:32:1183:1183	5850226	25	True				
ANR	5850440	ExpressionStatement		95:33:1184:1184	5850226	26	True				
ANR	5850441	ExpressionStatement	"qiovs = g_new ( QEMUIOVector , nr_reqs )"	97:4:1191:1227	5850226	27	True				
ANR	5850442	AssignmentExpression	"qiovs = g_new ( QEMUIOVector , nr_reqs )"		5850226	0		=			
ANR	5850443	Identifier	qiovs		5850226	0					
ANR	5850444	CallExpression	"g_new ( QEMUIOVector , nr_reqs )"		5850226	1					
ANR	5850445	Callee	g_new		5850226	0					
ANR	5850446	Identifier	g_new		5850226	0					
ANR	5850447	ArgumentList	QEMUIOVector		5850226	1					
ANR	5850448	Argument	QEMUIOVector		5850226	0					
ANR	5850449	Identifier	QEMUIOVector		5850226	0					
ANR	5850450	Argument	nr_reqs		5850226	1					
ANR	5850451	Identifier	nr_reqs		5850226	0					
ANR	5850452	ForStatement	for ( i = 0 ; i < nr_reqs && optind < argc ; i ++ )		5850226	28					
ANR	5850453	ForInit	i = 0 ;	101:9:1241:1246	5850226	0	True				
ANR	5850454	AssignmentExpression	i = 0		5850226	0		=			
ANR	5850455	Identifier	i		5850226	0					
ANR	5850456	PrimaryExpression	0		5850226	1					
ANR	5850457	Condition	i < nr_reqs && optind < argc	101:16:1248:1275	5850226	1	True				
ANR	5850458	AndExpression	i < nr_reqs && optind < argc		5850226	0		&&			
ANR	5850459	RelationalExpression	i < nr_reqs		5850226	0		<			
ANR	5850460	Identifier	i		5850226	0					
ANR	5850461	Identifier	nr_reqs		5850226	1					
ANR	5850462	RelationalExpression	optind < argc		5850226	1		<			
ANR	5850463	Identifier	optind		5850226	0					
ANR	5850464	Identifier	argc		5850226	1					
ANR	5850465	PostIncDecOperationExpression	i ++	101:46:1278:1280	5850226	2	True				
ANR	5850466	Identifier	i		5850226	0					
ANR	5850467	IncDec	++		5850226	1					
ANR	5850468	CompoundStatement		101:8:1226:1231	5850226	3					
ANR	5850469	IdentifierDeclStatement	int j ;	103:8:1294:1299	5850226	0	True				
ANR	5850470	IdentifierDecl	j		5850226	0					
ANR	5850471	IdentifierDeclType	int		5850226	0					
ANR	5850472	Identifier	j		5850226	1					
ANR	5850473	ExpressionStatement	offset = cvtnum ( argv [ optind ] )	109:8:1358:1387	5850226	1	True				
ANR	5850474	AssignmentExpression	offset = cvtnum ( argv [ optind ] )		5850226	0		=			
ANR	5850475	Identifier	offset		5850226	0					
ANR	5850476	CallExpression	cvtnum ( argv [ optind ] )		5850226	1					
ANR	5850477	Callee	cvtnum		5850226	0					
ANR	5850478	Identifier	cvtnum		5850226	0					
ANR	5850479	ArgumentList	argv [ optind ]		5850226	1					
ANR	5850480	Argument	argv [ optind ]		5850226	0					
ANR	5850481	ArrayIndexing	argv [ optind ]		5850226	0					
ANR	5850482	Identifier	argv		5850226	0					
ANR	5850483	Identifier	optind		5850226	1					
ANR	5850484	IfStatement	if ( offset < 0 )		5850226	2					
ANR	5850485	Condition	offset < 0	111:12:1402:1411	5850226	0	True				
ANR	5850486	RelationalExpression	offset < 0		5850226	0		<			
ANR	5850487	Identifier	offset		5850226	0					
ANR	5850488	PrimaryExpression	0		5850226	1					
ANR	5850489	CompoundStatement		109:24:1346:1346	5850226	1					
ANR	5850490	ExpressionStatement	"printf ( ""non-numeric offset argument -- %s\\n"" , argv [ optind ] )"	113:12:1429:1488	5850226	0	True				
ANR	5850491	CallExpression	"printf ( ""non-numeric offset argument -- %s\\n"" , argv [ optind ] )"		5850226	0					
ANR	5850492	Callee	printf		5850226	0					
ANR	5850493	Identifier	printf		5850226	0					
ANR	5850494	ArgumentList	"""non-numeric offset argument -- %s\\n"""		5850226	1					
ANR	5850495	Argument	"""non-numeric offset argument -- %s\\n"""		5850226	0					
ANR	5850496	PrimaryExpression	"""non-numeric offset argument -- %s\\n"""		5850226	0					
ANR	5850497	Argument	argv [ optind ]		5850226	1					
ANR	5850498	ArrayIndexing	argv [ optind ]		5850226	0					
ANR	5850499	Identifier	argv		5850226	0					
ANR	5850500	Identifier	optind		5850226	1					
ANR	5850501	GotoStatement	goto out ;	115:12:1503:1511	5850226	1	True				
ANR	5850502	Identifier	out		5850226	0					
ANR	5850503	ExpressionStatement	optind ++	119:8:1533:1541	5850226	3	True				
ANR	5850504	PostIncDecOperationExpression	optind ++		5850226	0					
ANR	5850505	Identifier	optind		5850226	0					
ANR	5850506	IncDec	++		5850226	1					
ANR	5850507	IfStatement	if ( offset & 0x1ff )		5850226	4					
ANR	5850508	Condition	offset & 0x1ff	123:12:1558:1571	5850226	0	True				
ANR	5850509	BitAndExpression	offset & 0x1ff		5850226	0		&			
ANR	5850510	Identifier	offset		5850226	0					
ANR	5850511	PrimaryExpression	0x1ff		5850226	1					
ANR	5850512	CompoundStatement		121:28:1506:1506	5850226	1					
ANR	5850513	ExpressionStatement	"printf ( ""offset %lld is not sector aligned\\n"" , ( long long ) offset )"	125:12:1589:1673	5850226	0	True				
ANR	5850514	CallExpression	"printf ( ""offset %lld is not sector aligned\\n"" , ( long long ) offset )"		5850226	0					
ANR	5850515	Callee	printf		5850226	0					
ANR	5850516	Identifier	printf		5850226	0					
ANR	5850517	ArgumentList	"""offset %lld is not sector aligned\\n"""		5850226	1					
ANR	5850518	Argument	"""offset %lld is not sector aligned\\n"""		5850226	0					
ANR	5850519	PrimaryExpression	"""offset %lld is not sector aligned\\n"""		5850226	0					
ANR	5850520	Argument	( long long ) offset		5850226	1					
ANR	5850521	CastExpression	( long long ) offset		5850226	0					
ANR	5850522	CastTarget	long long		5850226	0					
ANR	5850523	Identifier	offset		5850226	1					
ANR	5850524	GotoStatement	goto out ;	129:12:1688:1696	5850226	1	True				
ANR	5850525	Identifier	out		5850226	0					
ANR	5850526	IfStatement	if ( i == 0 )		5850226	5					
ANR	5850527	Condition	i == 0	135:12:1724:1729	5850226	0	True				
ANR	5850528	EqualityExpression	i == 0		5850226	0		==			
ANR	5850529	Identifier	i		5850226	0					
ANR	5850530	PrimaryExpression	0		5850226	1					
ANR	5850531	CompoundStatement		133:20:1664:1664	5850226	1					
ANR	5850532	ExpressionStatement	first_offset = offset	137:12:1747:1768	5850226	0	True				
ANR	5850533	AssignmentExpression	first_offset = offset		5850226	0		=			
ANR	5850534	Identifier	first_offset		5850226	0					
ANR	5850535	Identifier	offset		5850226	1					
ANR	5850536	ForStatement	for ( j = optind ; j < argc ; j ++ )		5850226	6					
ANR	5850537	ForInit	j = optind ;	145:13:1842:1852	5850226	0	True				
ANR	5850538	AssignmentExpression	j = optind		5850226	0		=			
ANR	5850539	Identifier	j		5850226	0					
ANR	5850540	Identifier	optind		5850226	1					
ANR	5850541	Condition	j < argc	145:25:1854:1861	5850226	1	True				
ANR	5850542	RelationalExpression	j < argc		5850226	0		<			
ANR	5850543	Identifier	j		5850226	0					
ANR	5850544	Identifier	argc		5850226	1					
ANR	5850545	PostIncDecOperationExpression	j ++	145:35:1864:1866	5850226	2	True				
ANR	5850546	Identifier	j		5850226	0					
ANR	5850547	IncDec	++		5850226	1					
ANR	5850548	CompoundStatement		143:40:1801:1801	5850226	3					
ANR	5850549	IfStatement	"if ( ! strcmp ( argv [ j ] , "";"" ) )"		5850226	0					
ANR	5850550	Condition	"! strcmp ( argv [ j ] , "";"" )"	147:16:1888:1908	5850226	0	True				
ANR	5850551	UnaryOperationExpression	"! strcmp ( argv [ j ] , "";"" )"		5850226	0					
ANR	5850552	UnaryOperator	!		5850226	0					
ANR	5850553	CallExpression	"strcmp ( argv [ j ] , "";"" )"		5850226	1					
ANR	5850554	Callee	strcmp		5850226	0					
ANR	5850555	Identifier	strcmp		5850226	0					
ANR	5850556	ArgumentList	argv [ j ]		5850226	1					
ANR	5850557	Argument	argv [ j ]		5850226	0					
ANR	5850558	ArrayIndexing	argv [ j ]		5850226	0					
ANR	5850559	Identifier	argv		5850226	0					
ANR	5850560	Identifier	j		5850226	1					
ANR	5850561	Argument	""";"""		5850226	1					
ANR	5850562	PrimaryExpression	""";"""		5850226	0					
ANR	5850563	CompoundStatement		145:39:1843:1843	5850226	1					
ANR	5850564	BreakStatement	break ;	149:16:1930:1935	5850226	0	True				
ANR	5850565	ExpressionStatement	nr_iov = j - optind	157:8:1974:1993	5850226	7	True				
ANR	5850566	AssignmentExpression	nr_iov = j - optind		5850226	0		=			
ANR	5850567	Identifier	nr_iov		5850226	0					
ANR	5850568	AdditiveExpression	j - optind		5850226	1		-			
ANR	5850569	Identifier	j		5850226	0					
ANR	5850570	Identifier	optind		5850226	1					
ANR	5850571	ExpressionStatement	"buf [ i ] = create_iovec ( blk , & qiovs [ i ] , & argv [ optind ] , nr_iov , pattern )"	163:8:2035:2104	5850226	8	True				
ANR	5850572	AssignmentExpression	"buf [ i ] = create_iovec ( blk , & qiovs [ i ] , & argv [ optind ] , nr_iov , pattern )"		5850226	0		=			
ANR	5850573	ArrayIndexing	buf [ i ]		5850226	0					
ANR	5850574	Identifier	buf		5850226	0					
ANR	5850575	Identifier	i		5850226	1					
ANR	5850576	CallExpression	"create_iovec ( blk , & qiovs [ i ] , & argv [ optind ] , nr_iov , pattern )"		5850226	1					
ANR	5850577	Callee	create_iovec		5850226	0					
ANR	5850578	Identifier	create_iovec		5850226	0					
ANR	5850579	ArgumentList	blk		5850226	1					
ANR	5850580	Argument	blk		5850226	0					
ANR	5850581	Identifier	blk		5850226	0					
ANR	5850582	Argument	& qiovs [ i ]		5850226	1					
ANR	5850583	UnaryOperationExpression	& qiovs [ i ]		5850226	0					
ANR	5850584	UnaryOperator	&		5850226	0					
ANR	5850585	ArrayIndexing	qiovs [ i ]		5850226	1					
ANR	5850586	Identifier	qiovs		5850226	0					
ANR	5850587	Identifier	i		5850226	1					
ANR	5850588	Argument	& argv [ optind ]		5850226	2					
ANR	5850589	UnaryOperationExpression	& argv [ optind ]		5850226	0					
ANR	5850590	UnaryOperator	&		5850226	0					
ANR	5850591	ArrayIndexing	argv [ optind ]		5850226	1					
ANR	5850592	Identifier	argv		5850226	0					
ANR	5850593	Identifier	optind		5850226	1					
ANR	5850594	Argument	nr_iov		5850226	3					
ANR	5850595	Identifier	nr_iov		5850226	0					
ANR	5850596	Argument	pattern		5850226	4					
ANR	5850597	Identifier	pattern		5850226	0					
ANR	5850598	IfStatement	if ( buf [ i ] == NULL )		5850226	9					
ANR	5850599	Condition	buf [ i ] == NULL	165:12:2119:2132	5850226	0	True				
ANR	5850600	EqualityExpression	buf [ i ] == NULL		5850226	0		==			
ANR	5850601	ArrayIndexing	buf [ i ]		5850226	0					
ANR	5850602	Identifier	buf		5850226	0					
ANR	5850603	Identifier	i		5850226	1					
ANR	5850604	Identifier	NULL		5850226	1					
ANR	5850605	CompoundStatement		163:28:2067:2067	5850226	1					
ANR	5850606	GotoStatement	goto out ;	167:12:2150:2158	5850226	0	True				
ANR	5850607	Identifier	out		5850226	0					
ANR	5850608	ExpressionStatement	reqs [ i ] . qiov = & qiovs [ i ]	173:8:2182:2206	5850226	10	True				
ANR	5850609	AssignmentExpression	reqs [ i ] . qiov = & qiovs [ i ]		5850226	0		=			
ANR	5850610	MemberAccess	reqs [ i ] . qiov		5850226	0					
ANR	5850611	ArrayIndexing	reqs [ i ]		5850226	0					
ANR	5850612	Identifier	reqs		5850226	0					
ANR	5850613	Identifier	i		5850226	1					
ANR	5850614	Identifier	qiov		5850226	1					
ANR	5850615	UnaryOperationExpression	& qiovs [ i ]		5850226	1					
ANR	5850616	UnaryOperator	&		5850226	0					
ANR	5850617	ArrayIndexing	qiovs [ i ]		5850226	1					
ANR	5850618	Identifier	qiovs		5850226	0					
ANR	5850619	Identifier	i		5850226	1					
ANR	5850620	ExpressionStatement	reqs [ i ] . sector = offset >> 9	175:8:2217:2245	5850226	11	True				
ANR	5850621	AssignmentExpression	reqs [ i ] . sector = offset >> 9		5850226	0		=			
ANR	5850622	MemberAccess	reqs [ i ] . sector		5850226	0					
ANR	5850623	ArrayIndexing	reqs [ i ]		5850226	0					
ANR	5850624	Identifier	reqs		5850226	0					
ANR	5850625	Identifier	i		5850226	1					
ANR	5850626	Identifier	sector		5850226	1					
ANR	5850627	ShiftExpression	offset >> 9		5850226	1		>>			
ANR	5850628	Identifier	offset		5850226	0					
ANR	5850629	PrimaryExpression	9		5850226	1					
ANR	5850630	ExpressionStatement	reqs [ i ] . nb_sectors = reqs [ i ] . qiov -> size >> 9	177:8:2256:2300	5850226	12	True				
ANR	5850631	AssignmentExpression	reqs [ i ] . nb_sectors = reqs [ i ] . qiov -> size >> 9		5850226	0		=			
ANR	5850632	MemberAccess	reqs [ i ] . nb_sectors		5850226	0					
ANR	5850633	ArrayIndexing	reqs [ i ]		5850226	0					
ANR	5850634	Identifier	reqs		5850226	0					
ANR	5850635	Identifier	i		5850226	1					
ANR	5850636	Identifier	nb_sectors		5850226	1					
ANR	5850637	ShiftExpression	reqs [ i ] . qiov -> size >> 9		5850226	1		>>			
ANR	5850638	PtrMemberAccess	reqs [ i ] . qiov -> size		5850226	0					
ANR	5850639	MemberAccess	reqs [ i ] . qiov		5850226	0					
ANR	5850640	ArrayIndexing	reqs [ i ]		5850226	0					
ANR	5850641	Identifier	reqs		5850226	0					
ANR	5850642	Identifier	i		5850226	1					
ANR	5850643	Identifier	qiov		5850226	1					
ANR	5850644	Identifier	size		5850226	1					
ANR	5850645	PrimaryExpression	9		5850226	1					
ANR	5850646	ExpressionStatement	optind = j + 1	181:8:2313:2327	5850226	13	True				
ANR	5850647	AssignmentExpression	optind = j + 1		5850226	0		=			
ANR	5850648	Identifier	optind		5850226	0					
ANR	5850649	AdditiveExpression	j + 1		5850226	1		+			
ANR	5850650	Identifier	j		5850226	0					
ANR	5850651	PrimaryExpression	1		5850226	1					
ANR	5850652	ExpressionStatement	pattern ++	185:8:2340:2349	5850226	14	True				
ANR	5850653	PostIncDecOperationExpression	pattern ++		5850226	0					
ANR	5850654	Identifier	pattern		5850226	0					
ANR	5850655	IncDec	++		5850226	1					
ANR	5850656	ExpressionStatement	nr_reqs = i	193:4:2429:2440	5850226	29	True				
ANR	5850657	AssignmentExpression	nr_reqs = i		5850226	0		=			
ANR	5850658	Identifier	nr_reqs		5850226	0					
ANR	5850659	Identifier	i		5850226	1					
ANR	5850660	ExpressionStatement	"gettimeofday ( & t1 , NULL )"	197:4:2449:2472	5850226	30	True				
ANR	5850661	CallExpression	"gettimeofday ( & t1 , NULL )"		5850226	0					
ANR	5850662	Callee	gettimeofday		5850226	0					
ANR	5850663	Identifier	gettimeofday		5850226	0					
ANR	5850664	ArgumentList	& t1		5850226	1					
ANR	5850665	Argument	& t1		5850226	0					
ANR	5850666	UnaryOperationExpression	& t1		5850226	0					
ANR	5850667	UnaryOperator	&		5850226	0					
ANR	5850668	Identifier	t1		5850226	1					
ANR	5850669	Argument	NULL		5850226	1					
ANR	5850670	Identifier	NULL		5850226	0					
ANR	5850671	ExpressionStatement	"cnt = do_aio_multiwrite ( blk , reqs , nr_reqs , & total )"	199:4:2479:2530	5850226	31	True				
ANR	5850672	AssignmentExpression	"cnt = do_aio_multiwrite ( blk , reqs , nr_reqs , & total )"		5850226	0		=			
ANR	5850673	Identifier	cnt		5850226	0					
ANR	5850674	CallExpression	"do_aio_multiwrite ( blk , reqs , nr_reqs , & total )"		5850226	1					
ANR	5850675	Callee	do_aio_multiwrite		5850226	0					
ANR	5850676	Identifier	do_aio_multiwrite		5850226	0					
ANR	5850677	ArgumentList	blk		5850226	1					
ANR	5850678	Argument	blk		5850226	0					
ANR	5850679	Identifier	blk		5850226	0					
ANR	5850680	Argument	reqs		5850226	1					
ANR	5850681	Identifier	reqs		5850226	0					
ANR	5850682	Argument	nr_reqs		5850226	2					
ANR	5850683	Identifier	nr_reqs		5850226	0					
ANR	5850684	Argument	& total		5850226	3					
ANR	5850685	UnaryOperationExpression	& total		5850226	0					
ANR	5850686	UnaryOperator	&		5850226	0					
ANR	5850687	Identifier	total		5850226	1					
ANR	5850688	ExpressionStatement	"gettimeofday ( & t2 , NULL )"	201:4:2537:2560	5850226	32	True				
ANR	5850689	CallExpression	"gettimeofday ( & t2 , NULL )"		5850226	0					
ANR	5850690	Callee	gettimeofday		5850226	0					
ANR	5850691	Identifier	gettimeofday		5850226	0					
ANR	5850692	ArgumentList	& t2		5850226	1					
ANR	5850693	Argument	& t2		5850226	0					
ANR	5850694	UnaryOperationExpression	& t2		5850226	0					
ANR	5850695	UnaryOperator	&		5850226	0					
ANR	5850696	Identifier	t2		5850226	1					
ANR	5850697	Argument	NULL		5850226	1					
ANR	5850698	Identifier	NULL		5850226	0					
ANR	5850699	IfStatement	if ( cnt < 0 )		5850226	33					
ANR	5850700	Condition	cnt < 0	205:8:2573:2579	5850226	0	True				
ANR	5850701	RelationalExpression	cnt < 0		5850226	0		<			
ANR	5850702	Identifier	cnt		5850226	0					
ANR	5850703	PrimaryExpression	0		5850226	1					
ANR	5850704	CompoundStatement		203:17:2514:2514	5850226	1					
ANR	5850705	ExpressionStatement	"printf ( ""aio_multiwrite failed: %s\\n"" , strerror ( - cnt ) )"	207:8:2593:2646	5850226	0	True				
ANR	5850706	CallExpression	"printf ( ""aio_multiwrite failed: %s\\n"" , strerror ( - cnt ) )"		5850226	0					
ANR	5850707	Callee	printf		5850226	0					
ANR	5850708	Identifier	printf		5850226	0					
ANR	5850709	ArgumentList	"""aio_multiwrite failed: %s\\n"""		5850226	1					
ANR	5850710	Argument	"""aio_multiwrite failed: %s\\n"""		5850226	0					
ANR	5850711	PrimaryExpression	"""aio_multiwrite failed: %s\\n"""		5850226	0					
ANR	5850712	Argument	strerror ( - cnt )		5850226	1					
ANR	5850713	CallExpression	strerror ( - cnt )		5850226	0					
ANR	5850714	Callee	strerror		5850226	0					
ANR	5850715	Identifier	strerror		5850226	0					
ANR	5850716	ArgumentList	- cnt		5850226	1					
ANR	5850717	Argument	- cnt		5850226	0					
ANR	5850718	UnaryOperationExpression	- cnt		5850226	0					
ANR	5850719	UnaryOperator	-		5850226	0					
ANR	5850720	Identifier	cnt		5850226	1					
ANR	5850721	GotoStatement	goto out ;	209:8:2657:2665	5850226	1	True				
ANR	5850722	Identifier	out		5850226	0					
ANR	5850723	IfStatement	if ( qflag )		5850226	34					
ANR	5850724	Condition	qflag	215:8:2685:2689	5850226	0	True				
ANR	5850725	Identifier	qflag		5850226	0					
ANR	5850726	CompoundStatement		213:15:2624:2624	5850226	1					
ANR	5850727	GotoStatement	goto out ;	217:8:2703:2711	5850226	0	True				
ANR	5850728	Identifier	out		5850226	0					
ANR	5850729	ExpressionStatement	"t2 = tsub ( t2 , t1 )"	225:4:2789:2806	5850226	35	True				
ANR	5850730	AssignmentExpression	"t2 = tsub ( t2 , t1 )"		5850226	0		=			
ANR	5850731	Identifier	t2		5850226	0					
ANR	5850732	CallExpression	"tsub ( t2 , t1 )"		5850226	1					
ANR	5850733	Callee	tsub		5850226	0					
ANR	5850734	Identifier	tsub		5850226	0					
ANR	5850735	ArgumentList	t2		5850226	1					
ANR	5850736	Argument	t2		5850226	0					
ANR	5850737	Identifier	t2		5850226	0					
ANR	5850738	Argument	t1		5850226	1					
ANR	5850739	Identifier	t1		5850226	0					
ANR	5850740	ExpressionStatement	"print_report ( ""wrote"" , & t2 , first_offset , total , total , cnt , Cflag )"	227:4:2813:2879	5850226	36	True				
ANR	5850741	CallExpression	"print_report ( ""wrote"" , & t2 , first_offset , total , total , cnt , Cflag )"		5850226	0					
ANR	5850742	Callee	print_report		5850226	0					
ANR	5850743	Identifier	print_report		5850226	0					
ANR	5850744	ArgumentList	"""wrote"""		5850226	1					
ANR	5850745	Argument	"""wrote"""		5850226	0					
ANR	5850746	PrimaryExpression	"""wrote"""		5850226	0					
ANR	5850747	Argument	& t2		5850226	1					
ANR	5850748	UnaryOperationExpression	& t2		5850226	0					
ANR	5850749	UnaryOperator	&		5850226	0					
ANR	5850750	Identifier	t2		5850226	1					
ANR	5850751	Argument	first_offset		5850226	2					
ANR	5850752	Identifier	first_offset		5850226	0					
ANR	5850753	Argument	total		5850226	3					
ANR	5850754	Identifier	total		5850226	0					
ANR	5850755	Argument	total		5850226	4					
ANR	5850756	Identifier	total		5850226	0					
ANR	5850757	Argument	cnt		5850226	5					
ANR	5850758	Identifier	cnt		5850226	0					
ANR	5850759	Argument	Cflag		5850226	6					
ANR	5850760	Identifier	Cflag		5850226	0					
ANR	5850761	Label	out :	229:0:2882:2885	5850226	37	True				
ANR	5850762	Identifier	out		5850226	0					
ANR	5850763	ForStatement	for ( i = 0 ; i < nr_reqs ; i ++ )		5850226	38					
ANR	5850764	ForInit	i = 0 ;	231:9:2897:2902	5850226	0	True				
ANR	5850765	AssignmentExpression	i = 0		5850226	0		=			
ANR	5850766	Identifier	i		5850226	0					
ANR	5850767	PrimaryExpression	0		5850226	1					
ANR	5850768	Condition	i < nr_reqs	231:16:2904:2914	5850226	1	True				
ANR	5850769	RelationalExpression	i < nr_reqs		5850226	0		<			
ANR	5850770	Identifier	i		5850226	0					
ANR	5850771	Identifier	nr_reqs		5850226	1					
ANR	5850772	PostIncDecOperationExpression	i ++	231:29:2917:2919	5850226	2	True				
ANR	5850773	Identifier	i		5850226	0					
ANR	5850774	IncDec	++		5850226	1					
ANR	5850775	CompoundStatement		229:34:2854:2854	5850226	3					
ANR	5850776	ExpressionStatement	qemu_io_free ( buf [ i ] )	233:8:2933:2953	5850226	0	True				
ANR	5850777	CallExpression	qemu_io_free ( buf [ i ] )		5850226	0					
ANR	5850778	Callee	qemu_io_free		5850226	0					
ANR	5850779	Identifier	qemu_io_free		5850226	0					
ANR	5850780	ArgumentList	buf [ i ]		5850226	1					
ANR	5850781	Argument	buf [ i ]		5850226	0					
ANR	5850782	ArrayIndexing	buf [ i ]		5850226	0					
ANR	5850783	Identifier	buf		5850226	0					
ANR	5850784	Identifier	i		5850226	1					
ANR	5850785	IfStatement	if ( reqs [ i ] . qiov != NULL )		5850226	1					
ANR	5850786	Condition	reqs [ i ] . qiov != NULL	235:12:2968:2987	5850226	0	True				
ANR	5850787	EqualityExpression	reqs [ i ] . qiov != NULL		5850226	0		!=			
ANR	5850788	MemberAccess	reqs [ i ] . qiov		5850226	0					
ANR	5850789	ArrayIndexing	reqs [ i ]		5850226	0					
ANR	5850790	Identifier	reqs		5850226	0					
ANR	5850791	Identifier	i		5850226	1					
ANR	5850792	Identifier	qiov		5850226	1					
ANR	5850793	Identifier	NULL		5850226	1					
ANR	5850794	CompoundStatement		233:34:2922:2922	5850226	1					
ANR	5850795	ExpressionStatement	qemu_iovec_destroy ( & qiovs [ i ] )	237:12:3005:3034	5850226	0	True				
ANR	5850796	CallExpression	qemu_iovec_destroy ( & qiovs [ i ] )		5850226	0					
ANR	5850797	Callee	qemu_iovec_destroy		5850226	0					
ANR	5850798	Identifier	qemu_iovec_destroy		5850226	0					
ANR	5850799	ArgumentList	& qiovs [ i ]		5850226	1					
ANR	5850800	Argument	& qiovs [ i ]		5850226	0					
ANR	5850801	UnaryOperationExpression	& qiovs [ i ]		5850226	0					
ANR	5850802	UnaryOperator	&		5850226	0					
ANR	5850803	ArrayIndexing	qiovs [ i ]		5850226	1					
ANR	5850804	Identifier	qiovs		5850226	0					
ANR	5850805	Identifier	i		5850226	1					
ANR	5850806	ExpressionStatement	g_free ( buf )	243:4:3059:3070	5850226	39	True				
ANR	5850807	CallExpression	g_free ( buf )		5850226	0					
ANR	5850808	Callee	g_free		5850226	0					
ANR	5850809	Identifier	g_free		5850226	0					
ANR	5850810	ArgumentList	buf		5850226	1					
ANR	5850811	Argument	buf		5850226	0					
ANR	5850812	Identifier	buf		5850226	0					
ANR	5850813	ExpressionStatement	g_free ( reqs )	245:4:3077:3089	5850226	40	True				
ANR	5850814	CallExpression	g_free ( reqs )		5850226	0					
ANR	5850815	Callee	g_free		5850226	0					
ANR	5850816	Identifier	g_free		5850226	0					
ANR	5850817	ArgumentList	reqs		5850226	1					
ANR	5850818	Argument	reqs		5850226	0					
ANR	5850819	Identifier	reqs		5850226	0					
ANR	5850820	ExpressionStatement	g_free ( qiovs )	247:4:3096:3109	5850226	41	True				
ANR	5850821	CallExpression	g_free ( qiovs )		5850226	0					
ANR	5850822	Callee	g_free		5850226	0					
ANR	5850823	Identifier	g_free		5850226	0					
ANR	5850824	ArgumentList	qiovs		5850226	1					
ANR	5850825	Argument	qiovs		5850226	0					
ANR	5850826	Identifier	qiovs		5850226	0					
ANR	5850827	ReturnStatement	return 0 ;	249:4:3116:3124	5850226	42	True				
ANR	5850828	PrimaryExpression	0		5850226	0					
ANR	5850829	ReturnType	static int		5850226	1					
ANR	5850830	Identifier	multiwrite_f		5850226	2					
ANR	5850831	ParameterList	"BlockBackend * blk , int argc , char * * argv"		5850226	3					
ANR	5850832	Parameter	BlockBackend * blk	1:24:24:40	5850226	0	True				
ANR	5850833	ParameterType	BlockBackend *		5850226	0					
ANR	5850834	Identifier	blk		5850226	1					
ANR	5850835	Parameter	int argc	1:43:43:50	5850226	1	True				
ANR	5850836	ParameterType	int		5850226	0					
ANR	5850837	Identifier	argc		5850226	1					
ANR	5850838	Parameter	char * * argv	1:53:53:63	5850226	2	True				
ANR	5850839	ParameterType	char * *		5850226	0					
ANR	5850840	Identifier	argv		5850226	1					
ANR	5850841	CFGEntryNode	ENTRY		5850226		True				
ANR	5850842	CFGExitNode	EXIT		5850226		True				
ANR	5850843	Symbol	* optind		5850226						
ANR	5850844	Symbol	optind		5850226						
ANR	5850845	Symbol	optarg		5850226						
ANR	5850846	Symbol	* argv		5850226						
ANR	5850847	Symbol	do_aio_multiwrite		5850226						
ANR	5850848	Symbol	g_new		5850226						
ANR	5850849	Symbol	reqs [ i ] . nb_sectors		5850226						
ANR	5850850	Symbol	& total		5850226						
ANR	5850851	Symbol	getopt		5850226						
ANR	5850852	Symbol	reqs [ i ] . qiov -> size		5850226						
ANR	5850853	Symbol	reqs		5850226						
ANR	5850854	Symbol	strcmp		5850226						
ANR	5850855	Symbol	cvtnum		5850226						
ANR	5850856	Symbol	* buf		5850226						
ANR	5850857	Symbol	* * i		5850226						
ANR	5850858	Symbol	NULL		5850226						
ANR	5850859	Symbol	offset		5850226						
ANR	5850860	Symbol	QEMUIOVector		5850226						
ANR	5850861	Symbol	strerror		5850226						
ANR	5850862	Symbol	qflag		5850226						
ANR	5850863	Symbol	first_offset		5850226						
ANR	5850864	Symbol	reqs [ i ] . qiov		5850226						
ANR	5850865	Symbol	t1		5850226						
ANR	5850866	Symbol	nr_iov		5850226						
ANR	5850867	Symbol	qiovs		5850226						
ANR	5850868	Symbol	t2		5850226						
ANR	5850869	Symbol	create_iovec		5850226						
ANR	5850870	Symbol	pattern		5850226						
ANR	5850871	Symbol	argv		5850226						
ANR	5850872	Symbol	Cflag		5850226						
ANR	5850873	Symbol	total		5850226						
ANR	5850874	Symbol	nr_reqs		5850226						
ANR	5850875	Symbol	g_new0		5850226						
ANR	5850876	Symbol	EOF		5850226						
ANR	5850877	Symbol	* * reqs		5850226						
ANR	5850878	Symbol	BlockRequest		5850226						
ANR	5850879	Symbol	reqs [ i ] . sector		5850226						
ANR	5850880	Symbol	blk		5850226						
ANR	5850881	Symbol	argc		5850226						
ANR	5850882	Symbol	c		5850226						
ANR	5850883	Symbol	parse_pattern		5850226						
ANR	5850884	Symbol	& t1		5850226						
ANR	5850885	Symbol	cnt		5850226						
ANR	5850886	Symbol	* reqs		5850226						
ANR	5850887	Symbol	i		5850226						
ANR	5850888	Symbol	& writev_cmd		5850226						
ANR	5850889	Symbol	& t2		5850226						
ANR	5850890	Symbol	j		5850226						
ANR	5850891	Symbol	buf		5850226						
ANR	5850892	Symbol	* i		5850226						
ANR	5850893	Symbol	* j		5850226						
ANR	5850894	Symbol	qemuio_command_usage		5850226						
ANR	5850895	Symbol	* reqs [ i ] . qiov		5850226						
ANR	5850896	Symbol	tsub		5850226						
