command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5661667	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mov_write_single_packet_1.c								
ANR	5661668	Function	mov_write_single_packet	1:0:0:3076							
ANR	5661669	FunctionDef	"mov_write_single_packet (AVFormatContext * s , AVPacket * pkt)"		5661668	0					
ANR	5661670	CompoundStatement		2:0:70:3076	5661668	0					
ANR	5661671	IdentifierDeclStatement	MOVMuxContext * mov = s -> priv_data ;	3:8:80:113	5661668	0	True				
ANR	5661672	IdentifierDecl	* mov = s -> priv_data		5661668	0					
ANR	5661673	IdentifierDeclType	MOVMuxContext *		5661668	0					
ANR	5661674	Identifier	mov		5661668	1					
ANR	5661675	AssignmentExpression	* mov = s -> priv_data		5661668	2		=			
ANR	5661676	Identifier	mov		5661668	0					
ANR	5661677	PtrMemberAccess	s -> priv_data		5661668	1					
ANR	5661678	Identifier	s		5661668	0					
ANR	5661679	Identifier	priv_data		5661668	1					
ANR	5661680	IdentifierDeclStatement	MOVTrack * trk = & mov -> tracks [ pkt -> stream_index ] ;	4:8:123:170	5661668	1	True				
ANR	5661681	IdentifierDecl	* trk = & mov -> tracks [ pkt -> stream_index ]		5661668	0					
ANR	5661682	IdentifierDeclType	MOVTrack *		5661668	0					
ANR	5661683	Identifier	trk		5661668	1					
ANR	5661684	AssignmentExpression	* trk = & mov -> tracks [ pkt -> stream_index ]		5661668	2		=			
ANR	5661685	Identifier	trk		5661668	0					
ANR	5661686	UnaryOperationExpression	& mov -> tracks [ pkt -> stream_index ]		5661668	1					
ANR	5661687	UnaryOperator	&		5661668	0					
ANR	5661688	ArrayIndexing	mov -> tracks [ pkt -> stream_index ]		5661668	1					
ANR	5661689	PtrMemberAccess	mov -> tracks		5661668	0					
ANR	5661690	Identifier	mov		5661668	0					
ANR	5661691	Identifier	tracks		5661668	1					
ANR	5661692	PtrMemberAccess	pkt -> stream_index		5661668	1					
ANR	5661693	Identifier	pkt		5661668	0					
ANR	5661694	Identifier	stream_index		5661668	1					
ANR	5661695	IdentifierDeclStatement	AVCodecParameters * par = trk -> par ;	5:8:180:213	5661668	2	True				
ANR	5661696	IdentifierDecl	* par = trk -> par		5661668	0					
ANR	5661697	IdentifierDeclType	AVCodecParameters *		5661668	0					
ANR	5661698	Identifier	par		5661668	1					
ANR	5661699	AssignmentExpression	* par = trk -> par		5661668	2		=			
ANR	5661700	Identifier	par		5661668	0					
ANR	5661701	PtrMemberAccess	trk -> par		5661668	1					
ANR	5661702	Identifier	trk		5661668	0					
ANR	5661703	Identifier	par		5661668	1					
ANR	5661704	IdentifierDeclStatement	int64_t frag_duration = 0 ;	6:8:223:248	5661668	3	True				
ANR	5661705	IdentifierDecl	frag_duration = 0		5661668	0					
ANR	5661706	IdentifierDeclType	int64_t		5661668	0					
ANR	5661707	Identifier	frag_duration		5661668	1					
ANR	5661708	AssignmentExpression	frag_duration = 0		5661668	2		=			
ANR	5661709	Identifier	frag_duration		5661668	0					
ANR	5661710	PrimaryExpression	0		5661668	1					
ANR	5661711	IdentifierDeclStatement	int size = pkt -> size ;	7:8:258:278	5661668	4	True				
ANR	5661712	IdentifierDecl	size = pkt -> size		5661668	0					
ANR	5661713	IdentifierDeclType	int		5661668	0					
ANR	5661714	Identifier	size		5661668	1					
ANR	5661715	AssignmentExpression	size = pkt -> size		5661668	2		=			
ANR	5661716	Identifier	size		5661668	0					
ANR	5661717	PtrMemberAccess	pkt -> size		5661668	1					
ANR	5661718	Identifier	pkt		5661668	0					
ANR	5661719	Identifier	size		5661668	1					
ANR	5661720	IfStatement	if ( mov -> flags & FF_MOV_FLAG_FRAG_DISCONT )		5661668	5					
ANR	5661721	Condition	mov -> flags & FF_MOV_FLAG_FRAG_DISCONT	8:12:292:328	5661668	0	True				
ANR	5661722	BitAndExpression	mov -> flags & FF_MOV_FLAG_FRAG_DISCONT		5661668	0		&			
ANR	5661723	PtrMemberAccess	mov -> flags		5661668	0					
ANR	5661724	Identifier	mov		5661668	0					
ANR	5661725	Identifier	flags		5661668	1					
ANR	5661726	Identifier	FF_MOV_FLAG_FRAG_DISCONT		5661668	1					
ANR	5661727	CompoundStatement		8:12:274:279	5661668	1					
ANR	5661728	IdentifierDeclStatement	int i ;	9:12:345:350	5661668	0	True				
ANR	5661729	IdentifierDecl	i		5661668	0					
ANR	5661730	IdentifierDeclType	int		5661668	0					
ANR	5661731	Identifier	i		5661668	1					
ANR	5661732	ForStatement	for ( i = 0 ; i < s -> nb_streams ; i ++ )		5661668	1					
ANR	5661733	ForInit	i = 0 ;	10:17:369:374	5661668	0	True				
ANR	5661734	AssignmentExpression	i = 0		5661668	0		=			
ANR	5661735	Identifier	i		5661668	0					
ANR	5661736	PrimaryExpression	0		5661668	1					
ANR	5661737	Condition	i < s -> nb_streams	10:24:376:392	5661668	1	True				
ANR	5661738	RelationalExpression	i < s -> nb_streams		5661668	0		<			
ANR	5661739	Identifier	i		5661668	0					
ANR	5661740	PtrMemberAccess	s -> nb_streams		5661668	1					
ANR	5661741	Identifier	s		5661668	0					
ANR	5661742	Identifier	nb_streams		5661668	1					
ANR	5661743	PostIncDecOperationExpression	i ++	10:43:395:397	5661668	2	True				
ANR	5661744	Identifier	i		5661668	0					
ANR	5661745	IncDec	++		5661668	1					
ANR	5661746	ExpressionStatement	mov -> tracks [ i ] . frag_discont = 1	11:16:416:447	5661668	3	True				
ANR	5661747	AssignmentExpression	mov -> tracks [ i ] . frag_discont = 1		5661668	0		=			
ANR	5661748	MemberAccess	mov -> tracks [ i ] . frag_discont		5661668	0					
ANR	5661749	ArrayIndexing	mov -> tracks [ i ]		5661668	0					
ANR	5661750	PtrMemberAccess	mov -> tracks		5661668	0					
ANR	5661751	Identifier	mov		5661668	0					
ANR	5661752	Identifier	tracks		5661668	1					
ANR	5661753	Identifier	i		5661668	1					
ANR	5661754	Identifier	frag_discont		5661668	1					
ANR	5661755	PrimaryExpression	1		5661668	1					
ANR	5661756	ExpressionStatement	mov -> flags &= ~FF_MOV_FLAG_FRAG_DISCONT	12:12:461:500	5661668	2	True				
ANR	5661757	AssignmentExpression	mov -> flags &= ~FF_MOV_FLAG_FRAG_DISCONT		5661668	0		&=			
ANR	5661758	PtrMemberAccess	mov -> flags		5661668	0					
ANR	5661759	Identifier	mov		5661668	0					
ANR	5661760	Identifier	flags		5661668	1					
ANR	5661761	Identifier	~FF_MOV_FLAG_FRAG_DISCONT		5661668	1					
ANR	5661762	IfStatement	if ( ! pkt -> size )		5661668	6					
ANR	5661763	Condition	! pkt -> size	14:12:524:533	5661668	0	True				
ANR	5661764	UnaryOperationExpression	! pkt -> size		5661668	0					
ANR	5661765	UnaryOperator	!		5661668	0					
ANR	5661766	PtrMemberAccess	pkt -> size		5661668	1					
ANR	5661767	Identifier	pkt		5661668	0					
ANR	5661768	Identifier	size		5661668	1					
ANR	5661769	CompoundStatement		13:24:465:465	5661668	1					
ANR	5661770	IfStatement	if ( trk -> start_dts == AV_NOPTS_VALUE && trk -> frag_discont )		5661668	0					
ANR	5661771	Condition	trk -> start_dts == AV_NOPTS_VALUE && trk -> frag_discont	15:16:554:606	5661668	0	True				
ANR	5661772	AndExpression	trk -> start_dts == AV_NOPTS_VALUE && trk -> frag_discont		5661668	0		&&			
ANR	5661773	EqualityExpression	trk -> start_dts == AV_NOPTS_VALUE		5661668	0		==			
ANR	5661774	PtrMemberAccess	trk -> start_dts		5661668	0					
ANR	5661775	Identifier	trk		5661668	0					
ANR	5661776	Identifier	start_dts		5661668	1					
ANR	5661777	Identifier	AV_NOPTS_VALUE		5661668	1					
ANR	5661778	PtrMemberAccess	trk -> frag_discont		5661668	1					
ANR	5661779	Identifier	trk		5661668	0					
ANR	5661780	Identifier	frag_discont		5661668	1					
ANR	5661781	CompoundStatement		14:71:538:538	5661668	1					
ANR	5661782	ExpressionStatement	trk -> start_dts = pkt -> dts	16:16:627:652	5661668	0	True				
ANR	5661783	AssignmentExpression	trk -> start_dts = pkt -> dts		5661668	0		=			
ANR	5661784	PtrMemberAccess	trk -> start_dts		5661668	0					
ANR	5661785	Identifier	trk		5661668	0					
ANR	5661786	Identifier	start_dts		5661668	1					
ANR	5661787	PtrMemberAccess	pkt -> dts		5661668	1					
ANR	5661788	Identifier	pkt		5661668	0					
ANR	5661789	Identifier	dts		5661668	1					
ANR	5661790	IfStatement	if ( pkt -> pts != AV_NOPTS_VALUE )		5661668	1					
ANR	5661791	Condition	pkt -> pts != AV_NOPTS_VALUE	17:20:674:699	5661668	0	True				
ANR	5661792	EqualityExpression	pkt -> pts != AV_NOPTS_VALUE		5661668	0		!=			
ANR	5661793	PtrMemberAccess	pkt -> pts		5661668	0					
ANR	5661794	Identifier	pkt		5661668	0					
ANR	5661795	Identifier	pts		5661668	1					
ANR	5661796	Identifier	AV_NOPTS_VALUE		5661668	1					
ANR	5661797	ExpressionStatement	trk -> start_cts = pkt -> pts - pkt -> dts	18:20:722:758	5661668	1	True				
ANR	5661798	AssignmentExpression	trk -> start_cts = pkt -> pts - pkt -> dts		5661668	0		=			
ANR	5661799	PtrMemberAccess	trk -> start_cts		5661668	0					
ANR	5661800	Identifier	trk		5661668	0					
ANR	5661801	Identifier	start_cts		5661668	1					
ANR	5661802	AdditiveExpression	pkt -> pts - pkt -> dts		5661668	1		-			
ANR	5661803	PtrMemberAccess	pkt -> pts		5661668	0					
ANR	5661804	Identifier	pkt		5661668	0					
ANR	5661805	Identifier	pts		5661668	1					
ANR	5661806	PtrMemberAccess	pkt -> dts		5661668	1					
ANR	5661807	Identifier	pkt		5661668	0					
ANR	5661808	Identifier	dts		5661668	1					
ANR	5661809	ElseStatement	else		5661668	0					
ANR	5661810	ExpressionStatement	trk -> start_cts = 0	20:20:801:819	5661668	0	True				
ANR	5661811	AssignmentExpression	trk -> start_cts = 0		5661668	0		=			
ANR	5661812	PtrMemberAccess	trk -> start_cts		5661668	0					
ANR	5661813	Identifier	trk		5661668	0					
ANR	5661814	Identifier	start_cts		5661668	1					
ANR	5661815	PrimaryExpression	0		5661668	1					
ANR	5661816	IfStatement	if ( trk -> par -> codec_id == AV_CODEC_ID_MP4ALS )		5661668	1					
ANR	5661817	Condition	trk -> par -> codec_id == AV_CODEC_ID_MP4ALS	22:16:851:890	5661668	0	True				
ANR	5661818	EqualityExpression	trk -> par -> codec_id == AV_CODEC_ID_MP4ALS		5661668	0		==			
ANR	5661819	PtrMemberAccess	trk -> par -> codec_id		5661668	0					
ANR	5661820	PtrMemberAccess	trk -> par		5661668	0					
ANR	5661821	Identifier	trk		5661668	0					
ANR	5661822	Identifier	par		5661668	1					
ANR	5661823	Identifier	codec_id		5661668	1					
ANR	5661824	Identifier	AV_CODEC_ID_MP4ALS		5661668	1					
ANR	5661825	CompoundStatement		23:16:875:958	5661668	1					
ANR	5661826	IdentifierDeclStatement	int side_size = 0 ;	23:16:911:928	5661668	0	True				
ANR	5661827	IdentifierDecl	side_size = 0		5661668	0					
ANR	5661828	IdentifierDeclType	int		5661668	0					
ANR	5661829	Identifier	side_size		5661668	1					
ANR	5661830	AssignmentExpression	side_size = 0		5661668	2		=			
ANR	5661831	Identifier	side_size		5661668	0					
ANR	5661832	PrimaryExpression	0		5661668	1					
ANR	5661833	IdentifierDeclStatement	"uint8_t * side = av_packet_get_side_data ( pkt , AV_PKT_DATA_NEW_EXTRADATA , & side_size ) ;"	24:16:946:1029	5661668	1	True				
ANR	5661834	IdentifierDecl	"* side = av_packet_get_side_data ( pkt , AV_PKT_DATA_NEW_EXTRADATA , & side_size )"		5661668	0					
ANR	5661835	IdentifierDeclType	uint8_t *		5661668	0					
ANR	5661836	Identifier	side		5661668	1					
ANR	5661837	AssignmentExpression	"* side = av_packet_get_side_data ( pkt , AV_PKT_DATA_NEW_EXTRADATA , & side_size )"		5661668	2		=			
ANR	5661838	Identifier	side		5661668	0					
ANR	5661839	CallExpression	"av_packet_get_side_data ( pkt , AV_PKT_DATA_NEW_EXTRADATA , & side_size )"		5661668	1					
ANR	5661840	Callee	av_packet_get_side_data		5661668	0					
ANR	5661841	Identifier	av_packet_get_side_data		5661668	0					
ANR	5661842	ArgumentList	pkt		5661668	1					
ANR	5661843	Argument	pkt		5661668	0					
ANR	5661844	Identifier	pkt		5661668	0					
ANR	5661845	Argument	AV_PKT_DATA_NEW_EXTRADATA		5661668	1					
ANR	5661846	Identifier	AV_PKT_DATA_NEW_EXTRADATA		5661668	0					
ANR	5661847	Argument	& side_size		5661668	2					
ANR	5661848	UnaryOperationExpression	& side_size		5661668	0					
ANR	5661849	UnaryOperator	&		5661668	0					
ANR	5661850	Identifier	side_size		5661668	1					
ANR	5661851	IfStatement	"if ( side && side_size > 0 && ( side_size != par -> extradata_size || memcmp ( side , par -> extradata , side_size ) ) )"		5661668	2					
ANR	5661852	Condition	"side && side_size > 0 && ( side_size != par -> extradata_size || memcmp ( side , par -> extradata , side_size ) )"	25:20:1051:1152	5661668	0	True				
ANR	5661853	AndExpression	"side && side_size > 0 && ( side_size != par -> extradata_size || memcmp ( side , par -> extradata , side_size ) )"		5661668	0		&&			
ANR	5661854	Identifier	side		5661668	0					
ANR	5661855	AndExpression	"side_size > 0 && ( side_size != par -> extradata_size || memcmp ( side , par -> extradata , side_size ) )"		5661668	1		&&			
ANR	5661856	RelationalExpression	side_size > 0		5661668	0		>			
ANR	5661857	Identifier	side_size		5661668	0					
ANR	5661858	PrimaryExpression	0		5661668	1					
ANR	5661859	OrExpression	"side_size != par -> extradata_size || memcmp ( side , par -> extradata , side_size )"		5661668	1		||			
ANR	5661860	EqualityExpression	side_size != par -> extradata_size		5661668	0		!=			
ANR	5661861	Identifier	side_size		5661668	0					
ANR	5661862	PtrMemberAccess	par -> extradata_size		5661668	1					
ANR	5661863	Identifier	par		5661668	0					
ANR	5661864	Identifier	extradata_size		5661668	1					
ANR	5661865	CallExpression	"memcmp ( side , par -> extradata , side_size )"		5661668	1					
ANR	5661866	Callee	memcmp		5661668	0					
ANR	5661867	Identifier	memcmp		5661668	0					
ANR	5661868	ArgumentList	side		5661668	1					
ANR	5661869	Argument	side		5661668	0					
ANR	5661870	Identifier	side		5661668	0					
ANR	5661871	Argument	par -> extradata		5661668	1					
ANR	5661872	PtrMemberAccess	par -> extradata		5661668	0					
ANR	5661873	Identifier	par		5661668	0					
ANR	5661874	Identifier	extradata		5661668	1					
ANR	5661875	Argument	side_size		5661668	2					
ANR	5661876	Identifier	side_size		5661668	0					
ANR	5661877	CompoundStatement		25:20:1106:1175	5661668	1					
ANR	5661878	IdentifierDeclStatement	void * newextra = av_mallocz ( side_size + AV_INPUT_BUFFER_PADDING_SIZE ) ;	26:20:1177:1246	5661668	0	True				
ANR	5661879	IdentifierDecl	* newextra = av_mallocz ( side_size + AV_INPUT_BUFFER_PADDING_SIZE )		5661668	0					
ANR	5661880	IdentifierDeclType	void *		5661668	0					
ANR	5661881	Identifier	newextra		5661668	1					
ANR	5661882	AssignmentExpression	* newextra = av_mallocz ( side_size + AV_INPUT_BUFFER_PADDING_SIZE )		5661668	2		=			
ANR	5661883	Identifier	newextra		5661668	0					
ANR	5661884	CallExpression	av_mallocz ( side_size + AV_INPUT_BUFFER_PADDING_SIZE )		5661668	1					
ANR	5661885	Callee	av_mallocz		5661668	0					
ANR	5661886	Identifier	av_mallocz		5661668	0					
ANR	5661887	ArgumentList	side_size + AV_INPUT_BUFFER_PADDING_SIZE		5661668	1					
ANR	5661888	Argument	side_size + AV_INPUT_BUFFER_PADDING_SIZE		5661668	0					
ANR	5661889	AdditiveExpression	side_size + AV_INPUT_BUFFER_PADDING_SIZE		5661668	0		+			
ANR	5661890	Identifier	side_size		5661668	0					
ANR	5661891	Identifier	AV_INPUT_BUFFER_PADDING_SIZE		5661668	1					
ANR	5661892	IfStatement	if ( ! newextra )		5661668	1					
ANR	5661893	Condition	! newextra	27:24:1272:1280	5661668	0	True				
ANR	5661894	UnaryOperationExpression	! newextra		5661668	0					
ANR	5661895	UnaryOperator	!		5661668	0					
ANR	5661896	Identifier	newextra		5661668	1					
ANR	5661897	ReturnStatement	return AVERROR ( ENOMEM ) ;	28:24:1307:1329	5661668	1	True				
ANR	5661898	CallExpression	AVERROR ( ENOMEM )		5661668	0					
ANR	5661899	Callee	AVERROR		5661668	0					
ANR	5661900	Identifier	AVERROR		5661668	0					
ANR	5661901	ArgumentList	ENOMEM		5661668	1					
ANR	5661902	Argument	ENOMEM		5661668	0					
ANR	5661903	Identifier	ENOMEM		5661668	0					
ANR	5661904	ExpressionStatement	av_free ( par -> extradata )	29:20:1351:1374	5661668	2	True				
ANR	5661905	CallExpression	av_free ( par -> extradata )		5661668	0					
ANR	5661906	Callee	av_free		5661668	0					
ANR	5661907	Identifier	av_free		5661668	0					
ANR	5661908	ArgumentList	par -> extradata		5661668	1					
ANR	5661909	Argument	par -> extradata		5661668	0					
ANR	5661910	PtrMemberAccess	par -> extradata		5661668	0					
ANR	5661911	Identifier	par		5661668	0					
ANR	5661912	Identifier	extradata		5661668	1					
ANR	5661913	ExpressionStatement	par -> extradata = newextra	30:20:1396:1421	5661668	3	True				
ANR	5661914	AssignmentExpression	par -> extradata = newextra		5661668	0		=			
ANR	5661915	PtrMemberAccess	par -> extradata		5661668	0					
ANR	5661916	Identifier	par		5661668	0					
ANR	5661917	Identifier	extradata		5661668	1					
ANR	5661918	Identifier	newextra		5661668	1					
ANR	5661919	ExpressionStatement	"memcpy ( par -> extradata , side , side_size )"	31:20:1443:1482	5661668	4	True				
ANR	5661920	CallExpression	"memcpy ( par -> extradata , side , side_size )"		5661668	0					
ANR	5661921	Callee	memcpy		5661668	0					
ANR	5661922	Identifier	memcpy		5661668	0					
ANR	5661923	ArgumentList	par -> extradata		5661668	1					
ANR	5661924	Argument	par -> extradata		5661668	0					
ANR	5661925	PtrMemberAccess	par -> extradata		5661668	0					
ANR	5661926	Identifier	par		5661668	0					
ANR	5661927	Identifier	extradata		5661668	1					
ANR	5661928	Argument	side		5661668	1					
ANR	5661929	Identifier	side		5661668	0					
ANR	5661930	Argument	side_size		5661668	2					
ANR	5661931	Identifier	side_size		5661668	0					
ANR	5661932	ExpressionStatement	par -> extradata_size = side_size	32:20:1504:1535	5661668	5	True				
ANR	5661933	AssignmentExpression	par -> extradata_size = side_size		5661668	0		=			
ANR	5661934	PtrMemberAccess	par -> extradata_size		5661668	0					
ANR	5661935	Identifier	par		5661668	0					
ANR	5661936	Identifier	extradata_size		5661668	1					
ANR	5661937	Identifier	side_size		5661668	1					
ANR	5661938	ExpressionStatement	mov -> need_rewrite_extradata = 1	33:20:1557:1588	5661668	6	True				
ANR	5661939	AssignmentExpression	mov -> need_rewrite_extradata = 1		5661668	0		=			
ANR	5661940	PtrMemberAccess	mov -> need_rewrite_extradata		5661668	0					
ANR	5661941	Identifier	mov		5661668	0					
ANR	5661942	Identifier	need_rewrite_extradata		5661668	1					
ANR	5661943	PrimaryExpression	1		5661668	1					
ANR	5661944	ReturnStatement	return 0 ;	36:12:1634:1642	5661668	2	True				
ANR	5661945	PrimaryExpression	0		5661668	0					
ANR	5661946	IfStatement	if ( trk -> entry && pkt -> stream_index < s -> nb_streams )		5661668	7					
ANR	5661947	Condition	trk -> entry && pkt -> stream_index < s -> nb_streams	38:12:1708:1754	5661668	0	True				
ANR	5661948	AndExpression	trk -> entry && pkt -> stream_index < s -> nb_streams		5661668	0		&&			
ANR	5661949	PtrMemberAccess	trk -> entry		5661668	0					
ANR	5661950	Identifier	trk		5661668	0					
ANR	5661951	Identifier	entry		5661668	1					
ANR	5661952	RelationalExpression	pkt -> stream_index < s -> nb_streams		5661668	1		<			
ANR	5661953	PtrMemberAccess	pkt -> stream_index		5661668	0					
ANR	5661954	Identifier	pkt		5661668	0					
ANR	5661955	Identifier	stream_index		5661668	1					
ANR	5661956	PtrMemberAccess	s -> nb_streams		5661668	1					
ANR	5661957	Identifier	s		5661668	0					
ANR	5661958	Identifier	nb_streams		5661668	1					
ANR	5661959	ExpressionStatement	"frag_duration = av_rescale_q ( pkt -> dts - trk -> cluster [ 0 ] . dts , s -> streams [ pkt -> stream_index ] -> time_base , AV_TIME_BASE_Q )"	39:12:1769:1969	5661668	1	True				
ANR	5661960	AssignmentExpression	"frag_duration = av_rescale_q ( pkt -> dts - trk -> cluster [ 0 ] . dts , s -> streams [ pkt -> stream_index ] -> time_base , AV_TIME_BASE_Q )"		5661668	0		=			
ANR	5661961	Identifier	frag_duration		5661668	0					
ANR	5661962	CallExpression	"av_rescale_q ( pkt -> dts - trk -> cluster [ 0 ] . dts , s -> streams [ pkt -> stream_index ] -> time_base , AV_TIME_BASE_Q )"		5661668	1					
ANR	5661963	Callee	av_rescale_q		5661668	0					
ANR	5661964	Identifier	av_rescale_q		5661668	0					
ANR	5661965	ArgumentList	pkt -> dts - trk -> cluster [ 0 ] . dts		5661668	1					
ANR	5661966	Argument	pkt -> dts - trk -> cluster [ 0 ] . dts		5661668	0					
ANR	5661967	AdditiveExpression	pkt -> dts - trk -> cluster [ 0 ] . dts		5661668	0		-			
ANR	5661968	PtrMemberAccess	pkt -> dts		5661668	0					
ANR	5661969	Identifier	pkt		5661668	0					
ANR	5661970	Identifier	dts		5661668	1					
ANR	5661971	MemberAccess	trk -> cluster [ 0 ] . dts		5661668	1					
ANR	5661972	ArrayIndexing	trk -> cluster [ 0 ]		5661668	0					
ANR	5661973	PtrMemberAccess	trk -> cluster		5661668	0					
ANR	5661974	Identifier	trk		5661668	0					
ANR	5661975	Identifier	cluster		5661668	1					
ANR	5661976	PrimaryExpression	0		5661668	1					
ANR	5661977	Identifier	dts		5661668	1					
ANR	5661978	Argument	s -> streams [ pkt -> stream_index ] -> time_base		5661668	1					
ANR	5661979	PtrMemberAccess	s -> streams [ pkt -> stream_index ] -> time_base		5661668	0					
ANR	5661980	ArrayIndexing	s -> streams [ pkt -> stream_index ]		5661668	0					
ANR	5661981	PtrMemberAccess	s -> streams		5661668	0					
ANR	5661982	Identifier	s		5661668	0					
ANR	5661983	Identifier	streams		5661668	1					
ANR	5661984	PtrMemberAccess	pkt -> stream_index		5661668	1					
ANR	5661985	Identifier	pkt		5661668	0					
ANR	5661986	Identifier	stream_index		5661668	1					
ANR	5661987	Identifier	time_base		5661668	1					
ANR	5661988	Argument	AV_TIME_BASE_Q		5661668	2					
ANR	5661989	Identifier	AV_TIME_BASE_Q		5661668	0					
ANR	5661990	IfStatement	if ( ( mov -> max_fragment_duration && frag_duration >= mov -> max_fragment_duration ) || ( mov -> max_fragment_size && mov -> mdat_size + size >= mov -> max_fragment_size ) || ( mov -> flags & FF_MOV_FLAG_FRAG_KEYFRAME && par -> codec_type == AVMEDIA_TYPE_VIDEO && trk -> entry && pkt -> flags & AV_PKT_FLAG_KEY ) )		5661668	8					
ANR	5661991	Condition	( mov -> max_fragment_duration && frag_duration >= mov -> max_fragment_duration ) || ( mov -> max_fragment_size && mov -> mdat_size + size >= mov -> max_fragment_size ) || ( mov -> flags & FF_MOV_FLAG_FRAG_KEYFRAME && par -> codec_type == AVMEDIA_TYPE_VIDEO && trk -> entry && pkt -> flags & AV_PKT_FLAG_KEY )	42:12:1983:2334	5661668	0	True				
ANR	5661992	OrExpression	( mov -> max_fragment_duration && frag_duration >= mov -> max_fragment_duration ) || ( mov -> max_fragment_size && mov -> mdat_size + size >= mov -> max_fragment_size ) || ( mov -> flags & FF_MOV_FLAG_FRAG_KEYFRAME && par -> codec_type == AVMEDIA_TYPE_VIDEO && trk -> entry && pkt -> flags & AV_PKT_FLAG_KEY )		5661668	0		||			
ANR	5661993	AndExpression	mov -> max_fragment_duration && frag_duration >= mov -> max_fragment_duration		5661668	0		&&			
ANR	5661994	PtrMemberAccess	mov -> max_fragment_duration		5661668	0					
ANR	5661995	Identifier	mov		5661668	0					
ANR	5661996	Identifier	max_fragment_duration		5661668	1					
ANR	5661997	RelationalExpression	frag_duration >= mov -> max_fragment_duration		5661668	1		>=			
ANR	5661998	Identifier	frag_duration		5661668	0					
ANR	5661999	PtrMemberAccess	mov -> max_fragment_duration		5661668	1					
ANR	5662000	Identifier	mov		5661668	0					
ANR	5662001	Identifier	max_fragment_duration		5661668	1					
ANR	5662002	OrExpression	( mov -> max_fragment_size && mov -> mdat_size + size >= mov -> max_fragment_size ) || ( mov -> flags & FF_MOV_FLAG_FRAG_KEYFRAME && par -> codec_type == AVMEDIA_TYPE_VIDEO && trk -> entry && pkt -> flags & AV_PKT_FLAG_KEY )		5661668	1		||			
ANR	5662003	AndExpression	mov -> max_fragment_size && mov -> mdat_size + size >= mov -> max_fragment_size		5661668	0		&&			
ANR	5662004	PtrMemberAccess	mov -> max_fragment_size		5661668	0					
ANR	5662005	Identifier	mov		5661668	0					
ANR	5662006	Identifier	max_fragment_size		5661668	1					
ANR	5662007	RelationalExpression	mov -> mdat_size + size >= mov -> max_fragment_size		5661668	1		>=			
ANR	5662008	AdditiveExpression	mov -> mdat_size + size		5661668	0		+			
ANR	5662009	PtrMemberAccess	mov -> mdat_size		5661668	0					
ANR	5662010	Identifier	mov		5661668	0					
ANR	5662011	Identifier	mdat_size		5661668	1					
ANR	5662012	Identifier	size		5661668	1					
ANR	5662013	PtrMemberAccess	mov -> max_fragment_size		5661668	1					
ANR	5662014	Identifier	mov		5661668	0					
ANR	5662015	Identifier	max_fragment_size		5661668	1					
ANR	5662016	AndExpression	mov -> flags & FF_MOV_FLAG_FRAG_KEYFRAME && par -> codec_type == AVMEDIA_TYPE_VIDEO && trk -> entry && pkt -> flags & AV_PKT_FLAG_KEY		5661668	1		&&			
ANR	5662017	BitAndExpression	mov -> flags & FF_MOV_FLAG_FRAG_KEYFRAME		5661668	0		&			
ANR	5662018	PtrMemberAccess	mov -> flags		5661668	0					
ANR	5662019	Identifier	mov		5661668	0					
ANR	5662020	Identifier	flags		5661668	1					
ANR	5662021	Identifier	FF_MOV_FLAG_FRAG_KEYFRAME		5661668	1					
ANR	5662022	AndExpression	par -> codec_type == AVMEDIA_TYPE_VIDEO && trk -> entry && pkt -> flags & AV_PKT_FLAG_KEY		5661668	1		&&			
ANR	5662023	EqualityExpression	par -> codec_type == AVMEDIA_TYPE_VIDEO		5661668	0		==			
ANR	5662024	PtrMemberAccess	par -> codec_type		5661668	0					
ANR	5662025	Identifier	par		5661668	0					
ANR	5662026	Identifier	codec_type		5661668	1					
ANR	5662027	Identifier	AVMEDIA_TYPE_VIDEO		5661668	1					
ANR	5662028	AndExpression	trk -> entry && pkt -> flags & AV_PKT_FLAG_KEY		5661668	1		&&			
ANR	5662029	PtrMemberAccess	trk -> entry		5661668	0					
ANR	5662030	Identifier	trk		5661668	0					
ANR	5662031	Identifier	entry		5661668	1					
ANR	5662032	BitAndExpression	pkt -> flags & AV_PKT_FLAG_KEY		5661668	1		&			
ANR	5662033	PtrMemberAccess	pkt -> flags		5661668	0					
ANR	5662034	Identifier	pkt		5661668	0					
ANR	5662035	Identifier	flags		5661668	1					
ANR	5662036	Identifier	AV_PKT_FLAG_KEY		5661668	1					
ANR	5662037	CompoundStatement		46:59:2266:2266	5661668	1					
ANR	5662038	IfStatement	if ( frag_duration >= mov -> min_fragment_duration )		5661668	0					
ANR	5662039	Condition	frag_duration >= mov -> min_fragment_duration	48:16:2355:2397	5661668	0	True				
ANR	5662040	RelationalExpression	frag_duration >= mov -> min_fragment_duration		5661668	0		>=			
ANR	5662041	Identifier	frag_duration		5661668	0					
ANR	5662042	PtrMemberAccess	mov -> min_fragment_duration		5661668	1					
ANR	5662043	Identifier	mov		5661668	0					
ANR	5662044	Identifier	min_fragment_duration		5661668	1					
ANR	5662045	CompoundStatement		47:61:2329:2329	5661668	1					
ANR	5662046	ExpressionStatement	trk -> track_duration = pkt -> dts - trk -> start_dts	53:16:2714:2761	5661668	0	True				
ANR	5662047	AssignmentExpression	trk -> track_duration = pkt -> dts - trk -> start_dts		5661668	0		=			
ANR	5662048	PtrMemberAccess	trk -> track_duration		5661668	0					
ANR	5662049	Identifier	trk		5661668	0					
ANR	5662050	Identifier	track_duration		5661668	1					
ANR	5662051	AdditiveExpression	pkt -> dts - trk -> start_dts		5661668	1		-			
ANR	5662052	PtrMemberAccess	pkt -> dts		5661668	0					
ANR	5662053	Identifier	pkt		5661668	0					
ANR	5662054	Identifier	dts		5661668	1					
ANR	5662055	PtrMemberAccess	trk -> start_dts		5661668	1					
ANR	5662056	Identifier	trk		5661668	0					
ANR	5662057	Identifier	start_dts		5661668	1					
ANR	5662058	IfStatement	if ( pkt -> pts != AV_NOPTS_VALUE )		5661668	1					
ANR	5662059	Condition	pkt -> pts != AV_NOPTS_VALUE	54:20:2783:2808	5661668	0	True				
ANR	5662060	EqualityExpression	pkt -> pts != AV_NOPTS_VALUE		5661668	0		!=			
ANR	5662061	PtrMemberAccess	pkt -> pts		5661668	0					
ANR	5662062	Identifier	pkt		5661668	0					
ANR	5662063	Identifier	pts		5661668	1					
ANR	5662064	Identifier	AV_NOPTS_VALUE		5661668	1					
ANR	5662065	ExpressionStatement	trk -> end_pts = pkt -> pts	55:20:2831:2854	5661668	1	True				
ANR	5662066	AssignmentExpression	trk -> end_pts = pkt -> pts		5661668	0		=			
ANR	5662067	PtrMemberAccess	trk -> end_pts		5661668	0					
ANR	5662068	Identifier	trk		5661668	0					
ANR	5662069	Identifier	end_pts		5661668	1					
ANR	5662070	PtrMemberAccess	pkt -> pts		5661668	1					
ANR	5662071	Identifier	pkt		5661668	0					
ANR	5662072	Identifier	pts		5661668	1					
ANR	5662073	ElseStatement	else		5661668	0					
ANR	5662074	ExpressionStatement	trk -> end_pts = pkt -> dts	57:20:2897:2920	5661668	0	True				
ANR	5662075	AssignmentExpression	trk -> end_pts = pkt -> dts		5661668	0		=			
ANR	5662076	PtrMemberAccess	trk -> end_pts		5661668	0					
ANR	5662077	Identifier	trk		5661668	0					
ANR	5662078	Identifier	end_pts		5661668	1					
ANR	5662079	PtrMemberAccess	pkt -> dts		5661668	1					
ANR	5662080	Identifier	pkt		5661668	0					
ANR	5662081	Identifier	dts		5661668	1					
ANR	5662082	ExpressionStatement	trk -> end_reliable = 1	58:16:2938:2959	5661668	2	True				
ANR	5662083	AssignmentExpression	trk -> end_reliable = 1		5661668	0		=			
ANR	5662084	PtrMemberAccess	trk -> end_reliable		5661668	0					
ANR	5662085	Identifier	trk		5661668	0					
ANR	5662086	Identifier	end_reliable		5661668	1					
ANR	5662087	PrimaryExpression	1		5661668	1					
ANR	5662088	ExpressionStatement	"mov_auto_flush_fragment ( s , 0 )"	59:16:2977:3006	5661668	3	True				
ANR	5662089	CallExpression	"mov_auto_flush_fragment ( s , 0 )"		5661668	0					
ANR	5662090	Callee	mov_auto_flush_fragment		5661668	0					
ANR	5662091	Identifier	mov_auto_flush_fragment		5661668	0					
ANR	5662092	ArgumentList	s		5661668	1					
ANR	5662093	Argument	s		5661668	0					
ANR	5662094	Identifier	s		5661668	0					
ANR	5662095	Argument	0		5661668	1					
ANR	5662096	PrimaryExpression	0		5661668	0					
ANR	5662097	ReturnStatement	"return ff_mov_write_packet ( s , pkt ) ;"	62:8:3040:3074	5661668	9	True				
ANR	5662098	CallExpression	"ff_mov_write_packet ( s , pkt )"		5661668	0					
ANR	5662099	Callee	ff_mov_write_packet		5661668	0					
ANR	5662100	Identifier	ff_mov_write_packet		5661668	0					
ANR	5662101	ArgumentList	s		5661668	1					
ANR	5662102	Argument	s		5661668	0					
ANR	5662103	Identifier	s		5661668	0					
ANR	5662104	Argument	pkt		5661668	1					
ANR	5662105	Identifier	pkt		5661668	0					
ANR	5662106	ReturnType	static int		5661668	1					
ANR	5662107	Identifier	mov_write_single_packet		5661668	2					
ANR	5662108	ParameterList	"AVFormatContext * s , AVPacket * pkt"		5661668	3					
ANR	5662109	Parameter	AVFormatContext * s	1:35:35:52	5661668	0	True				
ANR	5662110	ParameterType	AVFormatContext *		5661668	0					
ANR	5662111	Identifier	s		5661668	1					
ANR	5662112	Parameter	AVPacket * pkt	1:55:55:67	5661668	1	True				
ANR	5662113	ParameterType	AVPacket *		5661668	0					
ANR	5662114	Identifier	pkt		5661668	1					
ANR	5662115	CFGEntryNode	ENTRY		5661668		True				
ANR	5662116	CFGExitNode	EXIT		5661668		True				
ANR	5662117	Symbol	* * trk		5661668						
ANR	5662118	Symbol	ENOMEM		5661668						
ANR	5662119	Symbol	* pkt		5661668						
ANR	5662120	Symbol	FF_MOV_FLAG_FRAG_DISCONT		5661668						
ANR	5662121	Symbol	AV_CODEC_ID_MP4ALS		5661668						
ANR	5662122	Symbol	av_packet_get_side_data		5661668						
ANR	5662123	Symbol	s -> streams		5661668						
ANR	5662124	Symbol	* mov -> tracks		5661668						
ANR	5662125	Symbol	AV_INPUT_BUFFER_PADDING_SIZE		5661668						
ANR	5662126	Symbol	* * pkt -> stream_index		5661668						
ANR	5662127	Symbol	mov -> max_fragment_duration		5661668						
ANR	5662128	Symbol	AVMEDIA_TYPE_VIDEO		5661668						
ANR	5662129	Symbol	mov -> need_rewrite_extradata		5661668						
ANR	5662130	Symbol	mov -> flags		5661668						
ANR	5662131	Symbol	memcmp		5661668						
ANR	5662132	Symbol	mov		5661668						
ANR	5662133	Symbol	par -> extradata_size		5661668						
ANR	5662134	Symbol	trk -> cluster		5661668						
ANR	5662135	Symbol	trk -> end_reliable		5661668						
ANR	5662136	Symbol	trk -> entry		5661668						
ANR	5662137	Symbol	* s -> streams		5661668						
ANR	5662138	Symbol	FF_MOV_FLAG_FRAG_KEYFRAME		5661668						
ANR	5662139	Symbol	& side_size		5661668						
ANR	5662140	Symbol	mov -> min_fragment_duration		5661668						
ANR	5662141	Symbol	* trk -> par		5661668						
ANR	5662142	Symbol	newextra		5661668						
ANR	5662143	Symbol	s -> priv_data		5661668						
ANR	5662144	Symbol	par		5661668						
ANR	5662145	Symbol	av_mallocz		5661668						
ANR	5662146	Symbol	trk		5661668						
ANR	5662147	Symbol	trk -> start_dts		5661668						
ANR	5662148	Symbol	* * pkt		5661668						
ANR	5662149	Symbol	av_rescale_q		5661668						
ANR	5662150	Symbol	* * * s		5661668						
ANR	5662151	Symbol	mov -> mdat_size		5661668						
ANR	5662152	Symbol	* trk -> cluster		5661668						
ANR	5662153	Symbol	size		5661668						
ANR	5662154	Symbol	trk -> frag_discont		5661668						
ANR	5662155	Symbol	AV_PKT_FLAG_KEY		5661668						
ANR	5662156	Symbol	side_size		5661668						
ANR	5662157	Symbol	par -> codec_type		5661668						
ANR	5662158	Symbol	mov -> max_fragment_size		5661668						
ANR	5662159	Symbol	trk -> track_duration		5661668						
ANR	5662160	Symbol	~FF_MOV_FLAG_FRAG_DISCONT		5661668						
ANR	5662161	Symbol	* * s -> streams		5661668						
ANR	5662162	Symbol	AV_TIME_BASE_Q		5661668						
ANR	5662163	Symbol	* par		5661668						
ANR	5662164	Symbol	AV_NOPTS_VALUE		5661668						
ANR	5662165	Symbol	trk -> cluster [ 0 ] . dts		5661668						
ANR	5662166	Symbol	trk -> par -> codec_id		5661668						
ANR	5662167	Symbol	ff_mov_write_packet		5661668						
ANR	5662168	Symbol	pkt -> dts		5661668						
ANR	5662169	Symbol	* trk		5661668						
ANR	5662170	Symbol	* * * pkt		5661668						
ANR	5662171	Symbol	pkt		5661668						
ANR	5662172	Symbol	* * s		5661668						
ANR	5662173	Symbol	s -> nb_streams		5661668						
ANR	5662174	Symbol	pkt -> flags		5661668						
ANR	5662175	Symbol	side		5661668						
ANR	5662176	Symbol	trk -> end_pts		5661668						
ANR	5662177	Symbol	* * mov		5661668						
ANR	5662178	Symbol	pkt -> pts		5661668						
ANR	5662179	Symbol	s -> streams [ pkt -> stream_index ] -> time_base		5661668						
ANR	5662180	Symbol	i		5661668						
ANR	5662181	Symbol	mov -> tracks		5661668						
ANR	5662182	Symbol	trk -> par		5661668						
ANR	5662183	Symbol	frag_duration		5661668						
ANR	5662184	Symbol	* pkt -> stream_index		5661668						
ANR	5662185	Symbol	pkt -> stream_index		5661668						
ANR	5662186	Symbol	trk -> start_cts		5661668						
ANR	5662187	Symbol	pkt -> size		5661668						
ANR	5662188	Symbol	mov -> tracks [ i ] . frag_discont		5661668						
ANR	5662189	Symbol	s		5661668						
ANR	5662190	Symbol	* i		5661668						
ANR	5662191	Symbol	par -> extradata		5661668						
ANR	5662192	Symbol	AV_PKT_DATA_NEW_EXTRADATA		5661668						
ANR	5662193	Symbol	AVERROR		5661668						
ANR	5662194	Symbol	* s		5661668						
ANR	5662195	Symbol	* mov		5661668						
