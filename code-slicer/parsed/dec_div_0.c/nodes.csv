command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1662289	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dec_div_0.c								
ANR	1662290	Function	dec_div	1:0:0:594							
ANR	1662291	FunctionDef	dec_div (DisasContext * dc)		1662290	0					
ANR	1662292	CompoundStatement		3:0:39:594	1662290	0					
ANR	1662293	IdentifierDeclStatement	unsigned int u ;	5:4:46:60	1662290	0	True				
ANR	1662294	IdentifierDecl	u		1662290	0					
ANR	1662295	IdentifierDeclType	unsigned int		1662290	0					
ANR	1662296	Identifier	u		1662290	1					
ANR	1662297	ExpressionStatement	u = dc -> imm & 2	9:4:69:84	1662290	1	True				
ANR	1662298	AssignmentExpression	u = dc -> imm & 2		1662290	0		=			
ANR	1662299	Identifier	u		1662290	0					
ANR	1662300	BitAndExpression	dc -> imm & 2		1662290	1		&			
ANR	1662301	PtrMemberAccess	dc -> imm		1662290	0					
ANR	1662302	Identifier	dc		1662290	0					
ANR	1662303	Identifier	imm		1662290	1					
ANR	1662304	PrimaryExpression	2		1662290	1					
ANR	1662305	ExpressionStatement	"LOG_DIS ( ""div\\n"" )"	11:4:92:108	1662290	2	True				
ANR	1662306	CallExpression	"LOG_DIS ( ""div\\n"" )"		1662290	0					
ANR	1662307	Callee	LOG_DIS		1662290	0					
ANR	1662308	Identifier	LOG_DIS		1662290	0					
ANR	1662309	ArgumentList	"""div\\n"""		1662290	1					
ANR	1662310	Argument	"""div\\n"""		1662290	0					
ANR	1662311	PrimaryExpression	"""div\\n"""		1662290	0					
ANR	1662312	IfStatement	if ( ! ( dc -> env -> pvr . regs [ 2 ] & PVR2_ILL_OPCODE_EXC_MASK ) && ! ( ( dc -> env -> pvr . regs [ 0 ] & PVR0_USE_DIV_MASK ) ) )		1662290	3					
ANR	1662313	Condition	! ( dc -> env -> pvr . regs [ 2 ] & PVR2_ILL_OPCODE_EXC_MASK ) && ! ( ( dc -> env -> pvr . regs [ 0 ] & PVR0_USE_DIV_MASK ) )	15:8:121:230	1662290	0	True				
ANR	1662314	AndExpression	! ( dc -> env -> pvr . regs [ 2 ] & PVR2_ILL_OPCODE_EXC_MASK ) && ! ( ( dc -> env -> pvr . regs [ 0 ] & PVR0_USE_DIV_MASK ) )		1662290	0		&&			
ANR	1662315	UnaryOperationExpression	! ( dc -> env -> pvr . regs [ 2 ] & PVR2_ILL_OPCODE_EXC_MASK )		1662290	0					
ANR	1662316	UnaryOperator	!		1662290	0					
ANR	1662317	BitAndExpression	dc -> env -> pvr . regs [ 2 ] & PVR2_ILL_OPCODE_EXC_MASK		1662290	1		&			
ANR	1662318	ArrayIndexing	dc -> env -> pvr . regs [ 2 ]		1662290	0					
ANR	1662319	MemberAccess	dc -> env -> pvr . regs		1662290	0					
ANR	1662320	PtrMemberAccess	dc -> env -> pvr		1662290	0					
ANR	1662321	PtrMemberAccess	dc -> env		1662290	0					
ANR	1662322	Identifier	dc		1662290	0					
ANR	1662323	Identifier	env		1662290	1					
ANR	1662324	Identifier	pvr		1662290	1					
ANR	1662325	Identifier	regs		1662290	1					
ANR	1662326	PrimaryExpression	2		1662290	1					
ANR	1662327	Identifier	PVR2_ILL_OPCODE_EXC_MASK		1662290	1					
ANR	1662328	UnaryOperationExpression	! ( ( dc -> env -> pvr . regs [ 0 ] & PVR0_USE_DIV_MASK ) )		1662290	1					
ANR	1662329	UnaryOperator	!		1662290	0					
ANR	1662330	BitAndExpression	dc -> env -> pvr . regs [ 0 ] & PVR0_USE_DIV_MASK		1662290	1		&			
ANR	1662331	ArrayIndexing	dc -> env -> pvr . regs [ 0 ]		1662290	0					
ANR	1662332	MemberAccess	dc -> env -> pvr . regs		1662290	0					
ANR	1662333	PtrMemberAccess	dc -> env -> pvr		1662290	0					
ANR	1662334	PtrMemberAccess	dc -> env		1662290	0					
ANR	1662335	Identifier	dc		1662290	0					
ANR	1662336	Identifier	env		1662290	1					
ANR	1662337	Identifier	pvr		1662290	1					
ANR	1662338	Identifier	regs		1662290	1					
ANR	1662339	PrimaryExpression	0		1662290	1					
ANR	1662340	Identifier	PVR0_USE_DIV_MASK		1662290	1					
ANR	1662341	CompoundStatement		15:60:193:193	1662290	1					
ANR	1662342	ExpressionStatement	"tcg_gen_movi_tl ( cpu_SR [ SR_ESR ] , ESR_EC_ILLEGAL_OP )"	19:8:244:294	1662290	0	True				
ANR	1662343	CallExpression	"tcg_gen_movi_tl ( cpu_SR [ SR_ESR ] , ESR_EC_ILLEGAL_OP )"		1662290	0					
ANR	1662344	Callee	tcg_gen_movi_tl		1662290	0					
ANR	1662345	Identifier	tcg_gen_movi_tl		1662290	0					
ANR	1662346	ArgumentList	cpu_SR [ SR_ESR ]		1662290	1					
ANR	1662347	Argument	cpu_SR [ SR_ESR ]		1662290	0					
ANR	1662348	ArrayIndexing	cpu_SR [ SR_ESR ]		1662290	0					
ANR	1662349	Identifier	cpu_SR		1662290	0					
ANR	1662350	Identifier	SR_ESR		1662290	1					
ANR	1662351	Argument	ESR_EC_ILLEGAL_OP		1662290	1					
ANR	1662352	Identifier	ESR_EC_ILLEGAL_OP		1662290	0					
ANR	1662353	ExpressionStatement	"t_gen_raise_exception ( dc , EXCP_HW_EXCP )"	21:8:305:344	1662290	1	True				
ANR	1662354	CallExpression	"t_gen_raise_exception ( dc , EXCP_HW_EXCP )"		1662290	0					
ANR	1662355	Callee	t_gen_raise_exception		1662290	0					
ANR	1662356	Identifier	t_gen_raise_exception		1662290	0					
ANR	1662357	ArgumentList	dc		1662290	1					
ANR	1662358	Argument	dc		1662290	0					
ANR	1662359	Identifier	dc		1662290	0					
ANR	1662360	Argument	EXCP_HW_EXCP		1662290	1					
ANR	1662361	Identifier	EXCP_HW_EXCP		1662290	0					
ANR	1662362	IfStatement	if ( u )		1662290	4					
ANR	1662363	Condition	u	27:8:364:364	1662290	0	True				
ANR	1662364	Identifier	u		1662290	0					
ANR	1662365	ExpressionStatement	"gen_helper_divu ( cpu_R [ dc -> rd ] , * ( dec_alu_op_b ( dc ) ) , cpu_R [ dc -> ra ] )"	29:8:376:442	1662290	1	True				
ANR	1662366	CallExpression	"gen_helper_divu ( cpu_R [ dc -> rd ] , * ( dec_alu_op_b ( dc ) ) , cpu_R [ dc -> ra ] )"		1662290	0					
ANR	1662367	Callee	gen_helper_divu		1662290	0					
ANR	1662368	Identifier	gen_helper_divu		1662290	0					
ANR	1662369	ArgumentList	cpu_R [ dc -> rd ]		1662290	1					
ANR	1662370	Argument	cpu_R [ dc -> rd ]		1662290	0					
ANR	1662371	ArrayIndexing	cpu_R [ dc -> rd ]		1662290	0					
ANR	1662372	Identifier	cpu_R		1662290	0					
ANR	1662373	PtrMemberAccess	dc -> rd		1662290	1					
ANR	1662374	Identifier	dc		1662290	0					
ANR	1662375	Identifier	rd		1662290	1					
ANR	1662376	Argument	* ( dec_alu_op_b ( dc ) )		1662290	1					
ANR	1662377	UnaryOperationExpression	* ( dec_alu_op_b ( dc ) )		1662290	0					
ANR	1662378	UnaryOperator	*		1662290	0					
ANR	1662379	CallExpression	dec_alu_op_b ( dc )		1662290	1					
ANR	1662380	Callee	dec_alu_op_b		1662290	0					
ANR	1662381	Identifier	dec_alu_op_b		1662290	0					
ANR	1662382	ArgumentList	dc		1662290	1					
ANR	1662383	Argument	dc		1662290	0					
ANR	1662384	Identifier	dc		1662290	0					
ANR	1662385	Argument	cpu_R [ dc -> ra ]		1662290	2					
ANR	1662386	ArrayIndexing	cpu_R [ dc -> ra ]		1662290	0					
ANR	1662387	Identifier	cpu_R		1662290	0					
ANR	1662388	PtrMemberAccess	dc -> ra		1662290	1					
ANR	1662389	Identifier	dc		1662290	0					
ANR	1662390	Identifier	ra		1662290	1					
ANR	1662391	ElseStatement	else		1662290	0					
ANR	1662392	ExpressionStatement	"gen_helper_divs ( cpu_R [ dc -> rd ] , * ( dec_alu_op_b ( dc ) ) , cpu_R [ dc -> ra ] )"	33:8:463:529	1662290	0	True				
ANR	1662393	CallExpression	"gen_helper_divs ( cpu_R [ dc -> rd ] , * ( dec_alu_op_b ( dc ) ) , cpu_R [ dc -> ra ] )"		1662290	0					
ANR	1662394	Callee	gen_helper_divs		1662290	0					
ANR	1662395	Identifier	gen_helper_divs		1662290	0					
ANR	1662396	ArgumentList	cpu_R [ dc -> rd ]		1662290	1					
ANR	1662397	Argument	cpu_R [ dc -> rd ]		1662290	0					
ANR	1662398	ArrayIndexing	cpu_R [ dc -> rd ]		1662290	0					
ANR	1662399	Identifier	cpu_R		1662290	0					
ANR	1662400	PtrMemberAccess	dc -> rd		1662290	1					
ANR	1662401	Identifier	dc		1662290	0					
ANR	1662402	Identifier	rd		1662290	1					
ANR	1662403	Argument	* ( dec_alu_op_b ( dc ) )		1662290	1					
ANR	1662404	UnaryOperationExpression	* ( dec_alu_op_b ( dc ) )		1662290	0					
ANR	1662405	UnaryOperator	*		1662290	0					
ANR	1662406	CallExpression	dec_alu_op_b ( dc )		1662290	1					
ANR	1662407	Callee	dec_alu_op_b		1662290	0					
ANR	1662408	Identifier	dec_alu_op_b		1662290	0					
ANR	1662409	ArgumentList	dc		1662290	1					
ANR	1662410	Argument	dc		1662290	0					
ANR	1662411	Identifier	dc		1662290	0					
ANR	1662412	Argument	cpu_R [ dc -> ra ]		1662290	2					
ANR	1662413	ArrayIndexing	cpu_R [ dc -> ra ]		1662290	0					
ANR	1662414	Identifier	cpu_R		1662290	0					
ANR	1662415	PtrMemberAccess	dc -> ra		1662290	1					
ANR	1662416	Identifier	dc		1662290	0					
ANR	1662417	Identifier	ra		1662290	1					
ANR	1662418	IfStatement	if ( ! dc -> rd )		1662290	5					
ANR	1662419	Condition	! dc -> rd	35:8:540:546	1662290	0	True				
ANR	1662420	UnaryOperationExpression	! dc -> rd		1662290	0					
ANR	1662421	UnaryOperator	!		1662290	0					
ANR	1662422	PtrMemberAccess	dc -> rd		1662290	1					
ANR	1662423	Identifier	dc		1662290	0					
ANR	1662424	Identifier	rd		1662290	1					
ANR	1662425	ExpressionStatement	"tcg_gen_movi_tl ( cpu_R [ dc -> rd ] , 0 )"	37:8:558:591	1662290	1	True				
ANR	1662426	CallExpression	"tcg_gen_movi_tl ( cpu_R [ dc -> rd ] , 0 )"		1662290	0					
ANR	1662427	Callee	tcg_gen_movi_tl		1662290	0					
ANR	1662428	Identifier	tcg_gen_movi_tl		1662290	0					
ANR	1662429	ArgumentList	cpu_R [ dc -> rd ]		1662290	1					
ANR	1662430	Argument	cpu_R [ dc -> rd ]		1662290	0					
ANR	1662431	ArrayIndexing	cpu_R [ dc -> rd ]		1662290	0					
ANR	1662432	Identifier	cpu_R		1662290	0					
ANR	1662433	PtrMemberAccess	dc -> rd		1662290	1					
ANR	1662434	Identifier	dc		1662290	0					
ANR	1662435	Identifier	rd		1662290	1					
ANR	1662436	Argument	0		1662290	1					
ANR	1662437	PrimaryExpression	0		1662290	0					
ANR	1662438	ReturnType	static void		1662290	1					
ANR	1662439	Identifier	dec_div		1662290	2					
ANR	1662440	ParameterList	DisasContext * dc		1662290	3					
ANR	1662441	Parameter	DisasContext * dc	1:20:20:35	1662290	0	True				
ANR	1662442	ParameterType	DisasContext *		1662290	0					
ANR	1662443	Identifier	dc		1662290	1					
ANR	1662444	CFGEntryNode	ENTRY		1662290		True				
ANR	1662445	CFGExitNode	EXIT		1662290		True				
ANR	1662446	Symbol	dc -> imm		1662290						
ANR	1662447	Symbol	* ( dec_alu_op_b ( dc ) )		1662290						
ANR	1662448	Symbol	* cpu_SR		1662290						
ANR	1662449	Symbol	cpu_SR		1662290						
ANR	1662450	Symbol	* dc -> env		1662290						
ANR	1662451	Symbol	EXCP_HW_EXCP		1662290						
ANR	1662452	Symbol	* cpu_R		1662290						
ANR	1662453	Symbol	dc -> rd		1662290						
ANR	1662454	Symbol	* * dc -> env		1662290						
ANR	1662455	Symbol	SR_ESR		1662290						
ANR	1662456	Symbol	dc -> env -> pvr		1662290						
ANR	1662457	Symbol	* dc -> env -> pvr . regs		1662290						
ANR	1662458	Symbol	* dc -> ra		1662290						
ANR	1662459	Symbol	* * * dc		1662290						
ANR	1662460	Symbol	* dc -> rd		1662290						
ANR	1662461	Symbol	cpu_R		1662290						
ANR	1662462	Symbol	* dc -> env -> pvr		1662290						
ANR	1662463	Symbol	PVR2_ILL_OPCODE_EXC_MASK		1662290						
ANR	1662464	Symbol	dc -> env		1662290						
ANR	1662465	Symbol	dec_alu_op_b		1662290						
ANR	1662466	Symbol	* dc		1662290						
ANR	1662467	Symbol	* * dc		1662290						
ANR	1662468	Symbol	dc -> ra		1662290						
ANR	1662469	Symbol	ESR_EC_ILLEGAL_OP		1662290						
ANR	1662470	Symbol	* SR_ESR		1662290						
ANR	1662471	Symbol	PVR0_USE_DIV_MASK		1662290						
ANR	1662472	Symbol	u		1662290						
ANR	1662473	Symbol	* dec_alu_op_b		1662290						
ANR	1662474	Symbol	dc		1662290						
ANR	1662475	Symbol	dc -> env -> pvr . regs		1662290						
