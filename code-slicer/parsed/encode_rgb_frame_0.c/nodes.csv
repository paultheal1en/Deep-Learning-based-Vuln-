command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3035931	File	/home/p4ultr4n/workplace/ReVeal/raw_code/encode_rgb_frame_0.c								
ANR	3035932	Function	encode_rgb_frame	1:0:0:2013							
ANR	3035933	FunctionDef	"encode_rgb_frame (FFV1Context * s , uint8_t * src [ 3 ] , int w , int h , int stride [ 3 ])"		3035932	0					
ANR	3035934	CompoundStatement		3:0:91:2013	3035932	0					
ANR	3035935	IdentifierDeclStatement	"int x , y , p , i ;"	5:4:98:112	3035932	0	True				
ANR	3035936	IdentifierDecl	x		3035932	0					
ANR	3035937	IdentifierDeclType	int		3035932	0					
ANR	3035938	Identifier	x		3035932	1					
ANR	3035939	IdentifierDecl	y		3035932	1					
ANR	3035940	IdentifierDeclType	int		3035932	0					
ANR	3035941	Identifier	y		3035932	1					
ANR	3035942	IdentifierDecl	p		3035932	2					
ANR	3035943	IdentifierDeclType	int		3035932	0					
ANR	3035944	Identifier	p		3035932	1					
ANR	3035945	IdentifierDecl	i		3035932	3					
ANR	3035946	IdentifierDeclType	int		3035932	0					
ANR	3035947	Identifier	i		3035932	1					
ANR	3035948	IdentifierDeclStatement	const int ring_size = s -> avctx -> context_model ? 3 : 2 ;	7:4:119:172	3035932	1	True				
ANR	3035949	IdentifierDecl	ring_size = s -> avctx -> context_model ? 3 : 2		3035932	0					
ANR	3035950	IdentifierDeclType	const int		3035932	0					
ANR	3035951	Identifier	ring_size		3035932	1					
ANR	3035952	AssignmentExpression	ring_size = s -> avctx -> context_model ? 3 : 2		3035932	2		=			
ANR	3035953	Identifier	ring_size		3035932	0					
ANR	3035954	ConditionalExpression	s -> avctx -> context_model ? 3 : 2		3035932	1					
ANR	3035955	Condition	s -> avctx -> context_model		3035932	0					
ANR	3035956	PtrMemberAccess	s -> avctx -> context_model		3035932	0					
ANR	3035957	PtrMemberAccess	s -> avctx		3035932	0					
ANR	3035958	Identifier	s		3035932	0					
ANR	3035959	Identifier	avctx		3035932	1					
ANR	3035960	Identifier	context_model		3035932	1					
ANR	3035961	PrimaryExpression	3		3035932	1					
ANR	3035962	PrimaryExpression	2		3035932	2					
ANR	3035963	ExpressionStatement	int16_t * sample [ 4 ] [ 3 ]	9:4:179:200	3035932	2	True				
ANR	3035964	MultiplicativeExpression	int16_t * sample [ 4 ] [ 3 ]		3035932	0		*			
ANR	3035965	Identifier	int16_t		3035932	0					
ANR	3035966	ArrayIndexing	sample [ 4 ] [ 3 ]		3035932	1					
ANR	3035967	ArrayIndexing	sample [ 4 ]		3035932	0					
ANR	3035968	Identifier	sample		3035932	0					
ANR	3035969	PrimaryExpression	4		3035932	1					
ANR	3035970	PrimaryExpression	3		3035932	1					
ANR	3035971	IdentifierDeclStatement	int lbd = s -> bits_per_raw_sample <= 8 ;	11:4:207:247	3035932	3	True				
ANR	3035972	IdentifierDecl	lbd = s -> bits_per_raw_sample <= 8		3035932	0					
ANR	3035973	IdentifierDeclType	int		3035932	0					
ANR	3035974	Identifier	lbd		3035932	1					
ANR	3035975	AssignmentExpression	lbd = s -> bits_per_raw_sample <= 8		3035932	2		=			
ANR	3035976	Identifier	lbd		3035932	0					
ANR	3035977	RelationalExpression	s -> bits_per_raw_sample <= 8		3035932	1		<=			
ANR	3035978	PtrMemberAccess	s -> bits_per_raw_sample		3035932	0					
ANR	3035979	Identifier	s		3035932	0					
ANR	3035980	Identifier	bits_per_raw_sample		3035932	1					
ANR	3035981	PrimaryExpression	8		3035932	1					
ANR	3035982	IdentifierDeclStatement	int bits = s -> bits_per_raw_sample > 0 ? s -> bits_per_raw_sample : 8 ;	13:4:254:322	3035932	4	True				
ANR	3035983	IdentifierDecl	bits = s -> bits_per_raw_sample > 0 ? s -> bits_per_raw_sample : 8		3035932	0					
ANR	3035984	IdentifierDeclType	int		3035932	0					
ANR	3035985	Identifier	bits		3035932	1					
ANR	3035986	AssignmentExpression	bits = s -> bits_per_raw_sample > 0 ? s -> bits_per_raw_sample : 8		3035932	2		=			
ANR	3035987	Identifier	bits		3035932	0					
ANR	3035988	ConditionalExpression	s -> bits_per_raw_sample > 0 ? s -> bits_per_raw_sample : 8		3035932	1					
ANR	3035989	Condition	s -> bits_per_raw_sample > 0		3035932	0					
ANR	3035990	RelationalExpression	s -> bits_per_raw_sample > 0		3035932	0		>			
ANR	3035991	PtrMemberAccess	s -> bits_per_raw_sample		3035932	0					
ANR	3035992	Identifier	s		3035932	0					
ANR	3035993	Identifier	bits_per_raw_sample		3035932	1					
ANR	3035994	PrimaryExpression	0		3035932	1					
ANR	3035995	PtrMemberAccess	s -> bits_per_raw_sample		3035932	1					
ANR	3035996	Identifier	s		3035932	0					
ANR	3035997	Identifier	bits_per_raw_sample		3035932	1					
ANR	3035998	PrimaryExpression	8		3035932	2					
ANR	3035999	IdentifierDeclStatement	int offset = 1 << bits ;	15:4:329:351	3035932	5	True				
ANR	3036000	IdentifierDecl	offset = 1 << bits		3035932	0					
ANR	3036001	IdentifierDeclType	int		3035932	0					
ANR	3036002	Identifier	offset		3035932	1					
ANR	3036003	AssignmentExpression	offset = 1 << bits		3035932	2		=			
ANR	3036004	Identifier	offset		3035932	0					
ANR	3036005	ShiftExpression	1 << bits		3035932	1		<<			
ANR	3036006	PrimaryExpression	1		3035932	0					
ANR	3036007	Identifier	bits		3035932	1					
ANR	3036008	ExpressionStatement	s -> run_index = 0	19:4:360:376	3035932	6	True				
ANR	3036009	AssignmentExpression	s -> run_index = 0		3035932	0		=			
ANR	3036010	PtrMemberAccess	s -> run_index		3035932	0					
ANR	3036011	Identifier	s		3035932	0					
ANR	3036012	Identifier	run_index		3035932	1					
ANR	3036013	PrimaryExpression	0		3035932	1					
ANR	3036014	ExpressionStatement	"memset ( s -> sample_buffer , 0 , ring_size * MAX_PLANES * ( w + 6 ) * sizeof ( * s -> sample_buffer ) )"	23:4:385:507	3035932	7	True				
ANR	3036015	CallExpression	"memset ( s -> sample_buffer , 0 , ring_size * MAX_PLANES * ( w + 6 ) * sizeof ( * s -> sample_buffer ) )"		3035932	0					
ANR	3036016	Callee	memset		3035932	0					
ANR	3036017	Identifier	memset		3035932	0					
ANR	3036018	ArgumentList	s -> sample_buffer		3035932	1					
ANR	3036019	Argument	s -> sample_buffer		3035932	0					
ANR	3036020	PtrMemberAccess	s -> sample_buffer		3035932	0					
ANR	3036021	Identifier	s		3035932	0					
ANR	3036022	Identifier	sample_buffer		3035932	1					
ANR	3036023	Argument	0		3035932	1					
ANR	3036024	PrimaryExpression	0		3035932	0					
ANR	3036025	Argument	ring_size * MAX_PLANES * ( w + 6 ) * sizeof ( * s -> sample_buffer )		3035932	2					
ANR	3036026	MultiplicativeExpression	ring_size * MAX_PLANES * ( w + 6 ) * sizeof ( * s -> sample_buffer )		3035932	0		*			
ANR	3036027	Identifier	ring_size		3035932	0					
ANR	3036028	MultiplicativeExpression	MAX_PLANES * ( w + 6 ) * sizeof ( * s -> sample_buffer )		3035932	1		*			
ANR	3036029	Identifier	MAX_PLANES		3035932	0					
ANR	3036030	MultiplicativeExpression	( w + 6 ) * sizeof ( * s -> sample_buffer )		3035932	1		*			
ANR	3036031	AdditiveExpression	w + 6		3035932	0		+			
ANR	3036032	Identifier	w		3035932	0					
ANR	3036033	PrimaryExpression	6		3035932	1					
ANR	3036034	SizeofExpression	sizeof ( * s -> sample_buffer )		3035932	1					
ANR	3036035	Sizeof	sizeof		3035932	0					
ANR	3036036	UnaryOperationExpression	* s -> sample_buffer		3035932	1					
ANR	3036037	UnaryOperator	*		3035932	0					
ANR	3036038	PtrMemberAccess	s -> sample_buffer		3035932	1					
ANR	3036039	Identifier	s		3035932	0					
ANR	3036040	Identifier	sample_buffer		3035932	1					
ANR	3036041	ForStatement	for ( y = 0 ; y < h ; y ++ )		3035932	8					
ANR	3036042	ForInit	y = 0 ;	29:9:521:526	3035932	0	True				
ANR	3036043	AssignmentExpression	y = 0		3035932	0		=			
ANR	3036044	Identifier	y		3035932	0					
ANR	3036045	PrimaryExpression	0		3035932	1					
ANR	3036046	Condition	y < h	29:16:528:532	3035932	1	True				
ANR	3036047	RelationalExpression	y < h		3035932	0		<			
ANR	3036048	Identifier	y		3035932	0					
ANR	3036049	Identifier	h		3035932	1					
ANR	3036050	PostIncDecOperationExpression	y ++	29:23:535:537	3035932	2	True				
ANR	3036051	Identifier	y		3035932	0					
ANR	3036052	IncDec	++		3035932	1					
ANR	3036053	CompoundStatement		27:28:448:448	3035932	3					
ANR	3036054	ForStatement	for ( i = 0 ; i < ring_size ; i ++ )		3035932	0					
ANR	3036055	ForInit	i = 0 ;	31:13:556:561	3035932	0	True				
ANR	3036056	AssignmentExpression	i = 0		3035932	0		=			
ANR	3036057	Identifier	i		3035932	0					
ANR	3036058	PrimaryExpression	0		3035932	1					
ANR	3036059	Condition	i < ring_size	31:20:563:575	3035932	1	True				
ANR	3036060	RelationalExpression	i < ring_size		3035932	0		<			
ANR	3036061	Identifier	i		3035932	0					
ANR	3036062	Identifier	ring_size		3035932	1					
ANR	3036063	PostIncDecOperationExpression	i ++	31:35:578:580	3035932	2	True				
ANR	3036064	Identifier	i		3035932	0					
ANR	3036065	IncDec	++		3035932	1					
ANR	3036066	ForStatement	for ( p = 0 ; p < MAX_PLANES ; p ++ )		3035932	3					
ANR	3036067	ForInit	p = 0 ;	33:17:601:606	3035932	0	True				
ANR	3036068	AssignmentExpression	p = 0		3035932	0		=			
ANR	3036069	Identifier	p		3035932	0					
ANR	3036070	PrimaryExpression	0		3035932	1					
ANR	3036071	Condition	p < MAX_PLANES	33:24:608:621	3035932	1	True				
ANR	3036072	RelationalExpression	p < MAX_PLANES		3035932	0		<			
ANR	3036073	Identifier	p		3035932	0					
ANR	3036074	Identifier	MAX_PLANES		3035932	1					
ANR	3036075	PostIncDecOperationExpression	p ++	33:40:624:626	3035932	2	True				
ANR	3036076	Identifier	p		3035932	0					
ANR	3036077	IncDec	++		3035932	1					
ANR	3036078	ExpressionStatement	sample [ p ] [ i ] = s -> sample_buffer + p * ring_size * ( w + 6 ) + ( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3	35:16:646:728	3035932	3	True				
ANR	3036079	AssignmentExpression	sample [ p ] [ i ] = s -> sample_buffer + p * ring_size * ( w + 6 ) + ( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3		3035932	0		=			
ANR	3036080	ArrayIndexing	sample [ p ] [ i ]		3035932	0					
ANR	3036081	ArrayIndexing	sample [ p ]		3035932	0					
ANR	3036082	Identifier	sample		3035932	0					
ANR	3036083	Identifier	p		3035932	1					
ANR	3036084	Identifier	i		3035932	1					
ANR	3036085	AdditiveExpression	s -> sample_buffer + p * ring_size * ( w + 6 ) + ( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3		3035932	1		+			
ANR	3036086	PtrMemberAccess	s -> sample_buffer		3035932	0					
ANR	3036087	Identifier	s		3035932	0					
ANR	3036088	Identifier	sample_buffer		3035932	1					
ANR	3036089	AdditiveExpression	p * ring_size * ( w + 6 ) + ( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3		3035932	1		+			
ANR	3036090	MultiplicativeExpression	p * ring_size * ( w + 6 )		3035932	0		*			
ANR	3036091	Identifier	p		3035932	0					
ANR	3036092	MultiplicativeExpression	ring_size * ( w + 6 )		3035932	1		*			
ANR	3036093	Identifier	ring_size		3035932	0					
ANR	3036094	AdditiveExpression	w + 6		3035932	1		+			
ANR	3036095	Identifier	w		3035932	0					
ANR	3036096	PrimaryExpression	6		3035932	1					
ANR	3036097	AdditiveExpression	( ( h + i - y ) % ring_size ) * ( w + 6 ) + 3		3035932	1		+			
ANR	3036098	MultiplicativeExpression	( ( h + i - y ) % ring_size ) * ( w + 6 )		3035932	0		*			
ANR	3036099	MultiplicativeExpression	( h + i - y ) % ring_size		3035932	0		%			
ANR	3036100	AdditiveExpression	h + i - y		3035932	0		+			
ANR	3036101	Identifier	h		3035932	0					
ANR	3036102	AdditiveExpression	i - y		3035932	1		-			
ANR	3036103	Identifier	i		3035932	0					
ANR	3036104	Identifier	y		3035932	1					
ANR	3036105	Identifier	ring_size		3035932	1					
ANR	3036106	AdditiveExpression	w + 6		3035932	1		+			
ANR	3036107	Identifier	w		3035932	0					
ANR	3036108	PrimaryExpression	6		3035932	1					
ANR	3036109	PrimaryExpression	3		3035932	1					
ANR	3036110	ForStatement	for ( x = 0 ; x < w ; x ++ )		3035932	1					
ANR	3036111	ForInit	x = 0 ;	39:13:746:751	3035932	0	True				
ANR	3036112	AssignmentExpression	x = 0		3035932	0		=			
ANR	3036113	Identifier	x		3035932	0					
ANR	3036114	PrimaryExpression	0		3035932	1					
ANR	3036115	Condition	x < w	39:20:753:757	3035932	1	True				
ANR	3036116	RelationalExpression	x < w		3035932	0		<			
ANR	3036117	Identifier	x		3035932	0					
ANR	3036118	Identifier	w		3035932	1					
ANR	3036119	PostIncDecOperationExpression	x ++	39:27:760:762	3035932	2	True				
ANR	3036120	Identifier	x		3035932	0					
ANR	3036121	IncDec	++		3035932	1					
ANR	3036122	CompoundStatement		39:12:688:713	3035932	3					
ANR	3036123	IdentifierDeclStatement	"int b , g , r , av_uninit ( a ) ;"	41:12:780:805	3035932	0	True				
ANR	3036124	IdentifierDecl	b		3035932	0					
ANR	3036125	IdentifierDeclType	int		3035932	0					
ANR	3036126	Identifier	b		3035932	1					
ANR	3036127	IdentifierDecl	g		3035932	1					
ANR	3036128	IdentifierDeclType	int		3035932	0					
ANR	3036129	Identifier	g		3035932	1					
ANR	3036130	IdentifierDecl	r		3035932	2					
ANR	3036131	IdentifierDeclType	int		3035932	0					
ANR	3036132	Identifier	r		3035932	1					
ANR	3036133	IdentifierDecl	av_uninit ( a )		3035932	3					
ANR	3036134	IdentifierDeclType	int		3035932	0					
ANR	3036135	Identifier	av_uninit		3035932	1					
ANR	3036136	Identifier	a		3035932	2					
ANR	3036137	IfStatement	if ( lbd )		3035932	1					
ANR	3036138	Condition	lbd	43:16:824:826	3035932	0	True				
ANR	3036139	Identifier	lbd		3035932	0					
ANR	3036140	CompoundStatement		43:16:756:811	3035932	1					
ANR	3036141	IdentifierDeclStatement	unsigned v = * ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) ) ;	45:16:848:903	3035932	0	True				
ANR	3036142	IdentifierDecl	v = * ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		3035932	0					
ANR	3036143	IdentifierDeclType	unsigned		3035932	0					
ANR	3036144	Identifier	v		3035932	1					
ANR	3036145	AssignmentExpression	v = * ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		3035932	2		=			
ANR	3036146	Identifier	v		3035932	0					
ANR	3036147	UnaryOperationExpression	* ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		3035932	1					
ANR	3036148	UnaryOperator	*		3035932	0					
ANR	3036149	CastExpression	( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y )		3035932	1					
ANR	3036150	CastTarget	uint32_t *		3035932	0					
ANR	3036151	AdditiveExpression	src [ 0 ] + x * 4 + stride [ 0 ] * y		3035932	1		+			
ANR	3036152	ArrayIndexing	src [ 0 ]		3035932	0					
ANR	3036153	Identifier	src		3035932	0					
ANR	3036154	PrimaryExpression	0		3035932	1					
ANR	3036155	AdditiveExpression	x * 4 + stride [ 0 ] * y		3035932	1		+			
ANR	3036156	MultiplicativeExpression	x * 4		3035932	0		*			
ANR	3036157	Identifier	x		3035932	0					
ANR	3036158	PrimaryExpression	4		3035932	1					
ANR	3036159	MultiplicativeExpression	stride [ 0 ] * y		3035932	1		*			
ANR	3036160	ArrayIndexing	stride [ 0 ]		3035932	0					
ANR	3036161	Identifier	stride		3035932	0					
ANR	3036162	PrimaryExpression	0		3035932	1					
ANR	3036163	Identifier	y		3035932	1					
ANR	3036164	ExpressionStatement	b = v & 0xFF	47:16:922:942	3035932	1	True				
ANR	3036165	AssignmentExpression	b = v & 0xFF		3035932	0		=			
ANR	3036166	Identifier	b		3035932	0					
ANR	3036167	BitAndExpression	v & 0xFF		3035932	1		&			
ANR	3036168	Identifier	v		3035932	0					
ANR	3036169	PrimaryExpression	0xFF		3035932	1					
ANR	3036170	ExpressionStatement	g = ( v >> 8 ) & 0xFF	49:16:961:981	3035932	2	True				
ANR	3036171	AssignmentExpression	g = ( v >> 8 ) & 0xFF		3035932	0		=			
ANR	3036172	Identifier	g		3035932	0					
ANR	3036173	BitAndExpression	( v >> 8 ) & 0xFF		3035932	1		&			
ANR	3036174	ShiftExpression	v >> 8		3035932	0		>>			
ANR	3036175	Identifier	v		3035932	0					
ANR	3036176	PrimaryExpression	8		3035932	1					
ANR	3036177	PrimaryExpression	0xFF		3035932	1					
ANR	3036178	ExpressionStatement	r = ( v >> 16 ) & 0xFF	51:16:1000:1020	3035932	3	True				
ANR	3036179	AssignmentExpression	r = ( v >> 16 ) & 0xFF		3035932	0		=			
ANR	3036180	Identifier	r		3035932	0					
ANR	3036181	BitAndExpression	( v >> 16 ) & 0xFF		3035932	1		&			
ANR	3036182	ShiftExpression	v >> 16		3035932	0		>>			
ANR	3036183	Identifier	v		3035932	0					
ANR	3036184	PrimaryExpression	16		3035932	1					
ANR	3036185	PrimaryExpression	0xFF		3035932	1					
ANR	3036186	ExpressionStatement	a = v >> 24	53:16:1039:1051	3035932	4	True				
ANR	3036187	AssignmentExpression	a = v >> 24		3035932	0		=			
ANR	3036188	Identifier	a		3035932	0					
ANR	3036189	ShiftExpression	v >> 24		3035932	1		>>			
ANR	3036190	Identifier	v		3035932	0					
ANR	3036191	PrimaryExpression	24		3035932	1					
ANR	3036192	ElseStatement	else		3035932	0					
ANR	3036193	CompoundStatement		53:19:981:981	3035932	0					
ANR	3036194	ExpressionStatement	b = * ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )	57:16:1092:1138	3035932	0	True				
ANR	3036195	AssignmentExpression	b = * ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )		3035932	0		=			
ANR	3036196	Identifier	b		3035932	0					
ANR	3036197	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )		3035932	1					
ANR	3036198	UnaryOperator	*		3035932	0					
ANR	3036199	CastExpression	( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y )		3035932	1					
ANR	3036200	CastTarget	uint16_t *		3035932	0					
ANR	3036201	AdditiveExpression	src [ 0 ] + x * 2 + stride [ 0 ] * y		3035932	1		+			
ANR	3036202	ArrayIndexing	src [ 0 ]		3035932	0					
ANR	3036203	Identifier	src		3035932	0					
ANR	3036204	PrimaryExpression	0		3035932	1					
ANR	3036205	AdditiveExpression	x * 2 + stride [ 0 ] * y		3035932	1		+			
ANR	3036206	MultiplicativeExpression	x * 2		3035932	0		*			
ANR	3036207	Identifier	x		3035932	0					
ANR	3036208	PrimaryExpression	2		3035932	1					
ANR	3036209	MultiplicativeExpression	stride [ 0 ] * y		3035932	1		*			
ANR	3036210	ArrayIndexing	stride [ 0 ]		3035932	0					
ANR	3036211	Identifier	stride		3035932	0					
ANR	3036212	PrimaryExpression	0		3035932	1					
ANR	3036213	Identifier	y		3035932	1					
ANR	3036214	ExpressionStatement	g = * ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )	59:16:1157:1203	3035932	1	True				
ANR	3036215	AssignmentExpression	g = * ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )		3035932	0		=			
ANR	3036216	Identifier	g		3035932	0					
ANR	3036217	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )		3035932	1					
ANR	3036218	UnaryOperator	*		3035932	0					
ANR	3036219	CastExpression	( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y )		3035932	1					
ANR	3036220	CastTarget	uint16_t *		3035932	0					
ANR	3036221	AdditiveExpression	src [ 1 ] + x * 2 + stride [ 1 ] * y		3035932	1		+			
ANR	3036222	ArrayIndexing	src [ 1 ]		3035932	0					
ANR	3036223	Identifier	src		3035932	0					
ANR	3036224	PrimaryExpression	1		3035932	1					
ANR	3036225	AdditiveExpression	x * 2 + stride [ 1 ] * y		3035932	1		+			
ANR	3036226	MultiplicativeExpression	x * 2		3035932	0		*			
ANR	3036227	Identifier	x		3035932	0					
ANR	3036228	PrimaryExpression	2		3035932	1					
ANR	3036229	MultiplicativeExpression	stride [ 1 ] * y		3035932	1		*			
ANR	3036230	ArrayIndexing	stride [ 1 ]		3035932	0					
ANR	3036231	Identifier	stride		3035932	0					
ANR	3036232	PrimaryExpression	1		3035932	1					
ANR	3036233	Identifier	y		3035932	1					
ANR	3036234	ExpressionStatement	r = * ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )	61:16:1222:1268	3035932	2	True				
ANR	3036235	AssignmentExpression	r = * ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )		3035932	0		=			
ANR	3036236	Identifier	r		3035932	0					
ANR	3036237	UnaryOperationExpression	* ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )		3035932	1					
ANR	3036238	UnaryOperator	*		3035932	0					
ANR	3036239	CastExpression	( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y )		3035932	1					
ANR	3036240	CastTarget	uint16_t *		3035932	0					
ANR	3036241	AdditiveExpression	src [ 2 ] + x * 2 + stride [ 2 ] * y		3035932	1		+			
ANR	3036242	ArrayIndexing	src [ 2 ]		3035932	0					
ANR	3036243	Identifier	src		3035932	0					
ANR	3036244	PrimaryExpression	2		3035932	1					
ANR	3036245	AdditiveExpression	x * 2 + stride [ 2 ] * y		3035932	1		+			
ANR	3036246	MultiplicativeExpression	x * 2		3035932	0		*			
ANR	3036247	Identifier	x		3035932	0					
ANR	3036248	PrimaryExpression	2		3035932	1					
ANR	3036249	MultiplicativeExpression	stride [ 2 ] * y		3035932	1		*			
ANR	3036250	ArrayIndexing	stride [ 2 ]		3035932	0					
ANR	3036251	Identifier	stride		3035932	0					
ANR	3036252	PrimaryExpression	2		3035932	1					
ANR	3036253	Identifier	y		3035932	1					
ANR	3036254	ExpressionStatement	b -= g	67:12:1300:1306	3035932	2	True				
ANR	3036255	AssignmentExpression	b -= g		3035932	0		-=			
ANR	3036256	Identifier	b		3035932	0					
ANR	3036257	Identifier	g		3035932	1					
ANR	3036258	ExpressionStatement	r -= g	69:12:1321:1327	3035932	3	True				
ANR	3036259	AssignmentExpression	r -= g		3035932	0		-=			
ANR	3036260	Identifier	r		3035932	0					
ANR	3036261	Identifier	g		3035932	1					
ANR	3036262	ExpressionStatement	g += ( b + r ) >> 2	71:12:1342:1359	3035932	4	True				
ANR	3036263	AssignmentExpression	g += ( b + r ) >> 2		3035932	0		+=			
ANR	3036264	Identifier	g		3035932	0					
ANR	3036265	ShiftExpression	( b + r ) >> 2		3035932	1		>>			
ANR	3036266	AdditiveExpression	b + r		3035932	0		+			
ANR	3036267	Identifier	b		3035932	0					
ANR	3036268	Identifier	r		3035932	1					
ANR	3036269	PrimaryExpression	2		3035932	1					
ANR	3036270	ExpressionStatement	b += offset	73:12:1374:1385	3035932	5	True				
ANR	3036271	AssignmentExpression	b += offset		3035932	0		+=			
ANR	3036272	Identifier	b		3035932	0					
ANR	3036273	Identifier	offset		3035932	1					
ANR	3036274	ExpressionStatement	r += offset	75:12:1400:1411	3035932	6	True				
ANR	3036275	AssignmentExpression	r += offset		3035932	0		+=			
ANR	3036276	Identifier	r		3035932	0					
ANR	3036277	Identifier	offset		3035932	1					
ANR	3036278	ExpressionStatement	sample [ 0 ] [ 0 ] [ x ] = g	79:12:1428:1447	3035932	7	True				
ANR	3036279	AssignmentExpression	sample [ 0 ] [ 0 ] [ x ] = g		3035932	0		=			
ANR	3036280	ArrayIndexing	sample [ 0 ] [ 0 ] [ x ]		3035932	0					
ANR	3036281	ArrayIndexing	sample [ 0 ] [ 0 ]		3035932	0					
ANR	3036282	ArrayIndexing	sample [ 0 ]		3035932	0					
ANR	3036283	Identifier	sample		3035932	0					
ANR	3036284	PrimaryExpression	0		3035932	1					
ANR	3036285	PrimaryExpression	0		3035932	1					
ANR	3036286	Identifier	x		3035932	1					
ANR	3036287	Identifier	g		3035932	1					
ANR	3036288	ExpressionStatement	sample [ 1 ] [ 0 ] [ x ] = b	81:12:1462:1481	3035932	8	True				
ANR	3036289	AssignmentExpression	sample [ 1 ] [ 0 ] [ x ] = b		3035932	0		=			
ANR	3036290	ArrayIndexing	sample [ 1 ] [ 0 ] [ x ]		3035932	0					
ANR	3036291	ArrayIndexing	sample [ 1 ] [ 0 ]		3035932	0					
ANR	3036292	ArrayIndexing	sample [ 1 ]		3035932	0					
ANR	3036293	Identifier	sample		3035932	0					
ANR	3036294	PrimaryExpression	1		3035932	1					
ANR	3036295	PrimaryExpression	0		3035932	1					
ANR	3036296	Identifier	x		3035932	1					
ANR	3036297	Identifier	b		3035932	1					
ANR	3036298	ExpressionStatement	sample [ 2 ] [ 0 ] [ x ] = r	83:12:1496:1515	3035932	9	True				
ANR	3036299	AssignmentExpression	sample [ 2 ] [ 0 ] [ x ] = r		3035932	0		=			
ANR	3036300	ArrayIndexing	sample [ 2 ] [ 0 ] [ x ]		3035932	0					
ANR	3036301	ArrayIndexing	sample [ 2 ] [ 0 ]		3035932	0					
ANR	3036302	ArrayIndexing	sample [ 2 ]		3035932	0					
ANR	3036303	Identifier	sample		3035932	0					
ANR	3036304	PrimaryExpression	2		3035932	1					
ANR	3036305	PrimaryExpression	0		3035932	1					
ANR	3036306	Identifier	x		3035932	1					
ANR	3036307	Identifier	r		3035932	1					
ANR	3036308	ExpressionStatement	sample [ 3 ] [ 0 ] [ x ] = a	85:12:1530:1549	3035932	10	True				
ANR	3036309	AssignmentExpression	sample [ 3 ] [ 0 ] [ x ] = a		3035932	0		=			
ANR	3036310	ArrayIndexing	sample [ 3 ] [ 0 ] [ x ]		3035932	0					
ANR	3036311	ArrayIndexing	sample [ 3 ] [ 0 ]		3035932	0					
ANR	3036312	ArrayIndexing	sample [ 3 ]		3035932	0					
ANR	3036313	Identifier	sample		3035932	0					
ANR	3036314	PrimaryExpression	3		3035932	1					
ANR	3036315	PrimaryExpression	0		3035932	1					
ANR	3036316	Identifier	x		3035932	1					
ANR	3036317	Identifier	a		3035932	1					
ANR	3036318	ForStatement	for ( p = 0 ; p < 3 + s -> transparency ; p ++ )		3035932	2					
ANR	3036319	ForInit	p = 0 ;	89:13:1576:1581	3035932	0	True				
ANR	3036320	AssignmentExpression	p = 0		3035932	0		=			
ANR	3036321	Identifier	p		3035932	0					
ANR	3036322	PrimaryExpression	0		3035932	1					
ANR	3036323	Condition	p < 3 + s -> transparency	89:20:1583:1605	3035932	1	True				
ANR	3036324	RelationalExpression	p < 3 + s -> transparency		3035932	0		<			
ANR	3036325	Identifier	p		3035932	0					
ANR	3036326	AdditiveExpression	3 + s -> transparency		3035932	1		+			
ANR	3036327	PrimaryExpression	3		3035932	0					
ANR	3036328	PtrMemberAccess	s -> transparency		3035932	1					
ANR	3036329	Identifier	s		3035932	0					
ANR	3036330	Identifier	transparency		3035932	1					
ANR	3036331	PostIncDecOperationExpression	p ++	89:45:1608:1610	3035932	2	True				
ANR	3036332	Identifier	p		3035932	0					
ANR	3036333	IncDec	++		3035932	1					
ANR	3036334	CompoundStatement		89:12:1536:1543	3035932	3					
ANR	3036335	IdentifierDeclStatement	int ret ;	91:12:1628:1635	3035932	0	True				
ANR	3036336	IdentifierDecl	ret		3035932	0					
ANR	3036337	IdentifierDeclType	int		3035932	0					
ANR	3036338	Identifier	ret		3035932	1					
ANR	3036339	ExpressionStatement	sample [ p ] [ 0 ] [ - 1 ] = sample [ p ] [ 1 ] [ 0 ]	93:12:1650:1686	3035932	1	True				
ANR	3036340	AssignmentExpression	sample [ p ] [ 0 ] [ - 1 ] = sample [ p ] [ 1 ] [ 0 ]		3035932	0		=			
ANR	3036341	ArrayIndexing	sample [ p ] [ 0 ] [ - 1 ]		3035932	0					
ANR	3036342	ArrayIndexing	sample [ p ] [ 0 ]		3035932	0					
ANR	3036343	ArrayIndexing	sample [ p ]		3035932	0					
ANR	3036344	Identifier	sample		3035932	0					
ANR	3036345	Identifier	p		3035932	1					
ANR	3036346	PrimaryExpression	0		3035932	1					
ANR	3036347	UnaryOperationExpression	- 1		3035932	1					
ANR	3036348	UnaryOperator	-		3035932	0					
ANR	3036349	PrimaryExpression	1		3035932	1					
ANR	3036350	ArrayIndexing	sample [ p ] [ 1 ] [ 0 ]		3035932	1					
ANR	3036351	ArrayIndexing	sample [ p ] [ 1 ]		3035932	0					
ANR	3036352	ArrayIndexing	sample [ p ]		3035932	0					
ANR	3036353	Identifier	sample		3035932	0					
ANR	3036354	Identifier	p		3035932	1					
ANR	3036355	PrimaryExpression	1		3035932	1					
ANR	3036356	PrimaryExpression	0		3035932	1					
ANR	3036357	ExpressionStatement	sample [ p ] [ 1 ] [ w ] = sample [ p ] [ 1 ] [ w - 1 ]	95:12:1701:1737	3035932	2	True				
ANR	3036358	AssignmentExpression	sample [ p ] [ 1 ] [ w ] = sample [ p ] [ 1 ] [ w - 1 ]		3035932	0		=			
ANR	3036359	ArrayIndexing	sample [ p ] [ 1 ] [ w ]		3035932	0					
ANR	3036360	ArrayIndexing	sample [ p ] [ 1 ]		3035932	0					
ANR	3036361	ArrayIndexing	sample [ p ]		3035932	0					
ANR	3036362	Identifier	sample		3035932	0					
ANR	3036363	Identifier	p		3035932	1					
ANR	3036364	PrimaryExpression	1		3035932	1					
ANR	3036365	Identifier	w		3035932	1					
ANR	3036366	ArrayIndexing	sample [ p ] [ 1 ] [ w - 1 ]		3035932	1					
ANR	3036367	ArrayIndexing	sample [ p ] [ 1 ]		3035932	0					
ANR	3036368	ArrayIndexing	sample [ p ]		3035932	0					
ANR	3036369	Identifier	sample		3035932	0					
ANR	3036370	Identifier	p		3035932	1					
ANR	3036371	PrimaryExpression	1		3035932	1					
ANR	3036372	AdditiveExpression	w - 1		3035932	1		-			
ANR	3036373	Identifier	w		3035932	0					
ANR	3036374	PrimaryExpression	1		3035932	1					
ANR	3036375	IfStatement	if ( lbd )		3035932	3					
ANR	3036376	Condition	lbd	97:16:1756:1758	3035932	0	True				
ANR	3036377	Identifier	lbd		3035932	0					
ANR	3036378	ExpressionStatement	"ret = encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , 9 )"	99:16:1778:1828	3035932	1	True				
ANR	3036379	AssignmentExpression	"ret = encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , 9 )"		3035932	0		=			
ANR	3036380	Identifier	ret		3035932	0					
ANR	3036381	CallExpression	"encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , 9 )"		3035932	1					
ANR	3036382	Callee	encode_line		3035932	0					
ANR	3036383	Identifier	encode_line		3035932	0					
ANR	3036384	ArgumentList	s		3035932	1					
ANR	3036385	Argument	s		3035932	0					
ANR	3036386	Identifier	s		3035932	0					
ANR	3036387	Argument	w		3035932	1					
ANR	3036388	Identifier	w		3035932	0					
ANR	3036389	Argument	sample [ p ]		3035932	2					
ANR	3036390	ArrayIndexing	sample [ p ]		3035932	0					
ANR	3036391	Identifier	sample		3035932	0					
ANR	3036392	Identifier	p		3035932	1					
ANR	3036393	Argument	( p + 1 ) / 2		3035932	3					
ANR	3036394	MultiplicativeExpression	( p + 1 ) / 2		3035932	0		/			
ANR	3036395	AdditiveExpression	p + 1		3035932	0		+			
ANR	3036396	Identifier	p		3035932	0					
ANR	3036397	PrimaryExpression	1		3035932	1					
ANR	3036398	PrimaryExpression	2		3035932	1					
ANR	3036399	Argument	9		3035932	4					
ANR	3036400	PrimaryExpression	9		3035932	0					
ANR	3036401	ElseStatement	else		3035932	0					
ANR	3036402	ExpressionStatement	"ret = encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , bits + 1 )"	103:16:1865:1922	3035932	0	True				
ANR	3036403	AssignmentExpression	"ret = encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , bits + 1 )"		3035932	0		=			
ANR	3036404	Identifier	ret		3035932	0					
ANR	3036405	CallExpression	"encode_line ( s , w , sample [ p ] , ( p + 1 ) / 2 , bits + 1 )"		3035932	1					
ANR	3036406	Callee	encode_line		3035932	0					
ANR	3036407	Identifier	encode_line		3035932	0					
ANR	3036408	ArgumentList	s		3035932	1					
ANR	3036409	Argument	s		3035932	0					
ANR	3036410	Identifier	s		3035932	0					
ANR	3036411	Argument	w		3035932	1					
ANR	3036412	Identifier	w		3035932	0					
ANR	3036413	Argument	sample [ p ]		3035932	2					
ANR	3036414	ArrayIndexing	sample [ p ]		3035932	0					
ANR	3036415	Identifier	sample		3035932	0					
ANR	3036416	Identifier	p		3035932	1					
ANR	3036417	Argument	( p + 1 ) / 2		3035932	3					
ANR	3036418	MultiplicativeExpression	( p + 1 ) / 2		3035932	0		/			
ANR	3036419	AdditiveExpression	p + 1		3035932	0		+			
ANR	3036420	Identifier	p		3035932	0					
ANR	3036421	PrimaryExpression	1		3035932	1					
ANR	3036422	PrimaryExpression	2		3035932	1					
ANR	3036423	Argument	bits + 1		3035932	4					
ANR	3036424	AdditiveExpression	bits + 1		3035932	0		+			
ANR	3036425	Identifier	bits		3035932	0					
ANR	3036426	PrimaryExpression	1		3035932	1					
ANR	3036427	IfStatement	if ( ret < 0 )		3035932	4					
ANR	3036428	Condition	ret < 0	105:16:1941:1947	3035932	0	True				
ANR	3036429	RelationalExpression	ret < 0		3035932	0		<			
ANR	3036430	Identifier	ret		3035932	0					
ANR	3036431	PrimaryExpression	0		3035932	1					
ANR	3036432	ReturnStatement	return ret ;	107:16:1967:1977	3035932	1	True				
ANR	3036433	Identifier	ret		3035932	0					
ANR	3036434	ReturnStatement	return 0 ;	113:4:2002:2010	3035932	9	True				
ANR	3036435	PrimaryExpression	0		3035932	0					
ANR	3036436	ReturnType	static int		3035932	1					
ANR	3036437	Identifier	encode_rgb_frame		3035932	2					
ANR	3036438	ParameterList	"FFV1Context * s , uint8_t * src [ 3 ] , int w , int h , int stride [ 3 ]"		3035932	3					
ANR	3036439	Parameter	FFV1Context * s	1:28:28:41	3035932	0	True				
ANR	3036440	ParameterType	FFV1Context *		3035932	0					
ANR	3036441	Identifier	s		3035932	1					
ANR	3036442	Parameter	uint8_t * src [ 3 ]	1:44:44:58	3035932	1	True				
ANR	3036443	ParameterType	uint8_t * [ 3 ]		3035932	0					
ANR	3036444	Identifier	src		3035932	1					
ANR	3036445	Parameter	int w	1:61:61:65	3035932	2	True				
ANR	3036446	ParameterType	int		3035932	0					
ANR	3036447	Identifier	w		3035932	1					
ANR	3036448	Parameter	int h	1:68:68:72	3035932	3	True				
ANR	3036449	ParameterType	int		3035932	0					
ANR	3036450	Identifier	h		3035932	1					
ANR	3036451	Parameter	int stride [ 3 ]	1:75:75:87	3035932	4	True				
ANR	3036452	ParameterType	int [ 3 ]		3035932	0					
ANR	3036453	Identifier	stride		3035932	1					
ANR	3036454	CFGEntryNode	ENTRY		3035932		True				
ANR	3036455	CFGExitNode	EXIT		3035932		True				
ANR	3036456	Symbol	* stride		3035932						
ANR	3036457	Symbol	* w		3035932						
ANR	3036458	Symbol	* x		3035932						
ANR	3036459	Symbol	* y		3035932						
ANR	3036460	Symbol	stride		3035932						
ANR	3036461	Symbol	* * sample		3035932						
ANR	3036462	Symbol	* ( ( uint16_t * ) ( src [ 1 ] + x * 2 + stride [ 1 ] * y ) )		3035932						
ANR	3036463	Symbol	* src		3035932						
ANR	3036464	Symbol	s -> transparency		3035932						
ANR	3036465	Symbol	* ( ( uint32_t * ) ( src [ 0 ] + x * 4 + stride [ 0 ] * y ) )		3035932						
ANR	3036466	Symbol	* * * sample		3035932						
ANR	3036467	Symbol	s -> sample_buffer		3035932						
ANR	3036468	Symbol	* ( ( uint16_t * ) ( src [ 2 ] + x * 2 + stride [ 2 ] * y ) )		3035932						
ANR	3036469	Symbol	ret		3035932						
ANR	3036470	Symbol	* s -> avctx		3035932						
ANR	3036471	Symbol	offset		3035932						
ANR	3036472	Symbol	bits		3035932						
ANR	3036473	Symbol	lbd		3035932						
ANR	3036474	Symbol	* * * p		3035932						
ANR	3036475	Symbol	* * src		3035932						
ANR	3036476	Symbol	s -> avctx		3035932						
ANR	3036477	Symbol	* s -> sample_buffer		3035932						
ANR	3036478	Symbol	ring_size		3035932						
ANR	3036479	Symbol	s -> run_index		3035932						
ANR	3036480	Symbol	MAX_PLANES		3035932						
ANR	3036481	Symbol	* * s		3035932						
ANR	3036482	Symbol	s -> bits_per_raw_sample		3035932						
ANR	3036483	Symbol	* * p		3035932						
ANR	3036484	Symbol	* sample		3035932						
ANR	3036485	Symbol	a		3035932						
ANR	3036486	Symbol	b		3035932						
ANR	3036487	Symbol	src		3035932						
ANR	3036488	Symbol	encode_line		3035932						
ANR	3036489	Symbol	g		3035932						
ANR	3036490	Symbol	h		3035932						
ANR	3036491	Symbol	i		3035932						
ANR	3036492	Symbol	* ( ( uint16_t * ) ( src [ 0 ] + x * 2 + stride [ 0 ] * y ) )		3035932						
ANR	3036493	Symbol	sample		3035932						
ANR	3036494	Symbol	* * stride		3035932						
ANR	3036495	Symbol	p		3035932						
ANR	3036496	Symbol	s -> avctx -> context_model		3035932						
ANR	3036497	Symbol	r		3035932						
ANR	3036498	Symbol	s		3035932						
ANR	3036499	Symbol	* i		3035932						
ANR	3036500	Symbol	v		3035932						
ANR	3036501	Symbol	w		3035932						
ANR	3036502	Symbol	x		3035932						
ANR	3036503	Symbol	y		3035932						
ANR	3036504	Symbol	* p		3035932						
ANR	3036505	Symbol	av_uninit		3035932						
ANR	3036506	Symbol	* s		3035932						
