command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4657457	File	/home/p4ultr4n/workplace/ReVeal/raw_code/hl_decode_mb_predict_luma_01_0.c								
ANR	4657458	Function	hl_decode_mb_predict_luma	1:0:0:5688							
ANR	4657459	FunctionDef	"hl_decode_mb_predict_luma (const H264Context * h , H264SliceContext * sl , int mb_type , int simple , int transform_bypass , int pixel_shift , const int * block_offset , int linesize , uint8_t * dest_y , int p)"		4657458	0					
ANR	4657460	CompoundStatement		17:0:619:5688	4657458	0					
ANR	4657461	IdentifierDeclStatement	"void ( * idct_add ) ( uint8_t * dst , int16_t * block , int stride ) ;"	19:4:626:684	4657458	0	True				
ANR	4657462	IdentifierDecl	"( * idct_add ) ( uint8_t * dst , int16_t * block , int stride )"		4657458	0					
ANR	4657463	IdentifierDeclType	"void ( * ) ( uint8_t * dst , int16_t * block , int stride )"		4657458	0					
ANR	4657464	Identifier	idct_add		4657458	1					
ANR	4657465	Identifier	dst		4657458	2					
ANR	4657466	Identifier	block		4657458	3					
ANR	4657467	IdentifierDeclStatement	"void ( * idct_dc_add ) ( uint8_t * dst , int16_t * block , int stride ) ;"	21:4:691:752	4657458	1	True				
ANR	4657468	IdentifierDecl	"( * idct_dc_add ) ( uint8_t * dst , int16_t * block , int stride )"		4657458	0					
ANR	4657469	IdentifierDeclType	"void ( * ) ( uint8_t * dst , int16_t * block , int stride )"		4657458	0					
ANR	4657470	Identifier	idct_dc_add		4657458	1					
ANR	4657471	Identifier	dst		4657458	2					
ANR	4657472	Identifier	block		4657458	3					
ANR	4657473	IdentifierDeclStatement	int i ;	23:4:759:764	4657458	2	True				
ANR	4657474	IdentifierDecl	i		4657458	0					
ANR	4657475	IdentifierDeclType	int		4657458	0					
ANR	4657476	Identifier	i		4657458	1					
ANR	4657477	IdentifierDeclStatement	int qscale = p == 0 ? sl -> qscale : sl -> chroma_qp [ p - 1 ] ;	25:4:771:826	4657458	3	True				
ANR	4657478	IdentifierDecl	qscale = p == 0 ? sl -> qscale : sl -> chroma_qp [ p - 1 ]		4657458	0					
ANR	4657479	IdentifierDeclType	int		4657458	0					
ANR	4657480	Identifier	qscale		4657458	1					
ANR	4657481	AssignmentExpression	qscale = p == 0 ? sl -> qscale : sl -> chroma_qp [ p - 1 ]		4657458	2		=			
ANR	4657482	Identifier	qscale		4657458	0					
ANR	4657483	ConditionalExpression	p == 0 ? sl -> qscale : sl -> chroma_qp [ p - 1 ]		4657458	1					
ANR	4657484	Condition	p == 0		4657458	0					
ANR	4657485	EqualityExpression	p == 0		4657458	0		==			
ANR	4657486	Identifier	p		4657458	0					
ANR	4657487	PrimaryExpression	0		4657458	1					
ANR	4657488	PtrMemberAccess	sl -> qscale		4657458	1					
ANR	4657489	Identifier	sl		4657458	0					
ANR	4657490	Identifier	qscale		4657458	1					
ANR	4657491	ArrayIndexing	sl -> chroma_qp [ p - 1 ]		4657458	2					
ANR	4657492	PtrMemberAccess	sl -> chroma_qp		4657458	0					
ANR	4657493	Identifier	sl		4657458	0					
ANR	4657494	Identifier	chroma_qp		4657458	1					
ANR	4657495	AdditiveExpression	p - 1		4657458	1		-			
ANR	4657496	Identifier	p		4657458	0					
ANR	4657497	PrimaryExpression	1		4657458	1					
ANR	4657498	ExpressionStatement	block_offset += 16 * p	27:4:833:855	4657458	4	True				
ANR	4657499	AssignmentExpression	block_offset += 16 * p		4657458	0		+=			
ANR	4657500	Identifier	block_offset		4657458	0					
ANR	4657501	MultiplicativeExpression	16 * p		4657458	1		*			
ANR	4657502	PrimaryExpression	16		4657458	0					
ANR	4657503	Identifier	p		4657458	1					
ANR	4657504	IfStatement	if ( IS_INTRA4x4 ( mb_type ) )		4657458	5					
ANR	4657505	Condition	IS_INTRA4x4 ( mb_type )	29:8:866:885	4657458	0	True				
ANR	4657506	CallExpression	IS_INTRA4x4 ( mb_type )		4657458	0					
ANR	4657507	Callee	IS_INTRA4x4		4657458	0					
ANR	4657508	Identifier	IS_INTRA4x4		4657458	0					
ANR	4657509	ArgumentList	mb_type		4657458	1					
ANR	4657510	Argument	mb_type		4657458	0					
ANR	4657511	Identifier	mb_type		4657458	0					
ANR	4657512	CompoundStatement		13:30:268:268	4657458	1					
ANR	4657513	IfStatement	if ( IS_8x8DCT ( mb_type ) )		4657458	0					
ANR	4657514	Condition	IS_8x8DCT ( mb_type )	31:12:903:920	4657458	0	True				
ANR	4657515	CallExpression	IS_8x8DCT ( mb_type )		4657458	0					
ANR	4657516	Callee	IS_8x8DCT		4657458	0					
ANR	4657517	Identifier	IS_8x8DCT		4657458	0					
ANR	4657518	ArgumentList	mb_type		4657458	1					
ANR	4657519	Argument	mb_type		4657458	0					
ANR	4657520	Identifier	mb_type		4657458	0					
ANR	4657521	CompoundStatement		15:32:303:303	4657458	1					
ANR	4657522	IfStatement	if ( transform_bypass )		4657458	0					
ANR	4657523	Condition	transform_bypass	33:16:942:957	4657458	0	True				
ANR	4657524	Identifier	transform_bypass		4657458	0					
ANR	4657525	CompoundStatement		17:34:340:340	4657458	1					
ANR	4657526	ExpressionStatement	idct_dc_add = idct_add = h -> h264dsp . h264_add_pixels8_clear	35:16:979:1057	4657458	0	True				
ANR	4657527	AssignmentExpression	idct_dc_add = idct_add = h -> h264dsp . h264_add_pixels8_clear		4657458	0		=			
ANR	4657528	Identifier	idct_dc_add		4657458	0					
ANR	4657529	AssignmentExpression	idct_add = h -> h264dsp . h264_add_pixels8_clear		4657458	1		=			
ANR	4657530	Identifier	idct_add		4657458	0					
ANR	4657531	MemberAccess	h -> h264dsp . h264_add_pixels8_clear		4657458	1					
ANR	4657532	PtrMemberAccess	h -> h264dsp		4657458	0					
ANR	4657533	Identifier	h		4657458	0					
ANR	4657534	Identifier	h264dsp		4657458	1					
ANR	4657535	Identifier	h264_add_pixels8_clear		4657458	1					
ANR	4657536	ElseStatement	else		4657458	0					
ANR	4657537	CompoundStatement		23:19:459:459	4657458	0					
ANR	4657538	ExpressionStatement	idct_dc_add = h -> h264dsp . h264_idct8_dc_add	41:16:1098:1140	4657458	0	True				
ANR	4657539	AssignmentExpression	idct_dc_add = h -> h264dsp . h264_idct8_dc_add		4657458	0		=			
ANR	4657540	Identifier	idct_dc_add		4657458	0					
ANR	4657541	MemberAccess	h -> h264dsp . h264_idct8_dc_add		4657458	1					
ANR	4657542	PtrMemberAccess	h -> h264dsp		4657458	0					
ANR	4657543	Identifier	h		4657458	0					
ANR	4657544	Identifier	h264dsp		4657458	1					
ANR	4657545	Identifier	h264_idct8_dc_add		4657458	1					
ANR	4657546	ExpressionStatement	idct_add = h -> h264dsp . h264_idct8_add	43:16:1159:1198	4657458	1	True				
ANR	4657547	AssignmentExpression	idct_add = h -> h264dsp . h264_idct8_add		4657458	0		=			
ANR	4657548	Identifier	idct_add		4657458	0					
ANR	4657549	MemberAccess	h -> h264dsp . h264_idct8_add		4657458	1					
ANR	4657550	PtrMemberAccess	h -> h264dsp		4657458	0					
ANR	4657551	Identifier	h		4657458	0					
ANR	4657552	Identifier	h264dsp		4657458	1					
ANR	4657553	Identifier	h264_idct8_add		4657458	1					
ANR	4657554	ForStatement	for ( i = 0 ; i < 16 ; i += 4 )		4657458	1					
ANR	4657555	ForInit	i = 0 ;	47:17:1233:1238	4657458	0	True				
ANR	4657556	AssignmentExpression	i = 0		4657458	0		=			
ANR	4657557	Identifier	i		4657458	0					
ANR	4657558	PrimaryExpression	0		4657458	1					
ANR	4657559	Condition	i < 16	47:24:1240:1245	4657458	1	True				
ANR	4657560	RelationalExpression	i < 16		4657458	0		<			
ANR	4657561	Identifier	i		4657458	0					
ANR	4657562	PrimaryExpression	16		4657458	1					
ANR	4657563	AssignmentExpression	i += 4	47:32:1248:1253	4657458	2	True	+=			
ANR	4657564	Identifier	i		4657458	0					
ANR	4657565	PrimaryExpression	4		4657458	1					
ANR	4657566	CompoundStatement		35:16:719:778	4657458	3					
ANR	4657567	Statement	uint8_t	49:16:1275:1281	4657458	0	True				
ANR	4657568	Statement	*	49:24:1283:1283	4657458	1	True				
ANR	4657569	Statement	const	49:25:1284:1288	4657458	2	True				
ANR	4657570	ExpressionStatement	ptr = dest_y + block_offset [ i ]	49:31:1290:1320	4657458	3	True				
ANR	4657571	AssignmentExpression	ptr = dest_y + block_offset [ i ]		4657458	0		=			
ANR	4657572	Identifier	ptr		4657458	0					
ANR	4657573	AdditiveExpression	dest_y + block_offset [ i ]		4657458	1		+			
ANR	4657574	Identifier	dest_y		4657458	0					
ANR	4657575	ArrayIndexing	block_offset [ i ]		4657458	1					
ANR	4657576	Identifier	block_offset		4657458	0					
ANR	4657577	Identifier	i		4657458	1					
ANR	4657578	IdentifierDeclStatement	const int dir = sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ] ;	51:16:1339:1398	4657458	4	True				
ANR	4657579	IdentifierDecl	dir = sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		4657458	0					
ANR	4657580	IdentifierDeclType	const int		4657458	0					
ANR	4657581	Identifier	dir		4657458	1					
ANR	4657582	AssignmentExpression	dir = sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		4657458	2		=			
ANR	4657583	Identifier	dir		4657458	0					
ANR	4657584	ArrayIndexing	sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		4657458	1					
ANR	4657585	PtrMemberAccess	sl -> intra4x4_pred_mode_cache		4657458	0					
ANR	4657586	Identifier	sl		4657458	0					
ANR	4657587	Identifier	intra4x4_pred_mode_cache		4657458	1					
ANR	4657588	ArrayIndexing	scan8 [ i ]		4657458	1					
ANR	4657589	Identifier	scan8		4657458	0					
ANR	4657590	Identifier	i		4657458	1					
ANR	4657591	IfStatement	if ( transform_bypass && h -> sps . profile_idc == 244 && dir <= 1 )		4657458	5					
ANR	4657592	Condition	transform_bypass && h -> sps . profile_idc == 244 && dir <= 1	53:20:1421:1477	4657458	0	True				
ANR	4657593	AndExpression	transform_bypass && h -> sps . profile_idc == 244 && dir <= 1		4657458	0		&&			
ANR	4657594	Identifier	transform_bypass		4657458	0					
ANR	4657595	AndExpression	h -> sps . profile_idc == 244 && dir <= 1		4657458	1		&&			
ANR	4657596	EqualityExpression	h -> sps . profile_idc == 244		4657458	0		==			
ANR	4657597	MemberAccess	h -> sps . profile_idc		4657458	0					
ANR	4657598	PtrMemberAccess	h -> sps		4657458	0					
ANR	4657599	Identifier	h		4657458	0					
ANR	4657600	Identifier	sps		4657458	1					
ANR	4657601	Identifier	profile_idc		4657458	1					
ANR	4657602	PrimaryExpression	244		4657458	1					
ANR	4657603	RelationalExpression	dir <= 1		4657458	1		<=			
ANR	4657604	Identifier	dir		4657458	0					
ANR	4657605	PrimaryExpression	1		4657458	1					
ANR	4657606	CompoundStatement		37:79:860:860	4657458	1					
ANR	4657607	ExpressionStatement	"h -> hpc . pred8x8l_add [ dir ] ( ptr , sl -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"	55:20:1503:1586	4657458	0	True				
ANR	4657608	CallExpression	"h -> hpc . pred8x8l_add [ dir ] ( ptr , sl -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"		4657458	0					
ANR	4657609	Callee	h -> hpc . pred8x8l_add [ dir ]		4657458	0					
ANR	4657610	ArrayIndexing	h -> hpc . pred8x8l_add [ dir ]		4657458	0					
ANR	4657611	MemberAccess	h -> hpc . pred8x8l_add		4657458	0					
ANR	4657612	PtrMemberAccess	h -> hpc		4657458	0					
ANR	4657613	Identifier	h		4657458	0					
ANR	4657614	Identifier	hpc		4657458	1					
ANR	4657615	Identifier	pred8x8l_add		4657458	1					
ANR	4657616	Identifier	dir		4657458	1					
ANR	4657617	ArgumentList	ptr		4657458	1					
ANR	4657618	Argument	ptr		4657458	0					
ANR	4657619	Identifier	ptr		4657458	0					
ANR	4657620	Argument	sl -> mb + ( i * 16 + p * 256 << pixel_shift )		4657458	1					
ANR	4657621	AdditiveExpression	sl -> mb + ( i * 16 + p * 256 << pixel_shift )		4657458	0		+			
ANR	4657622	PtrMemberAccess	sl -> mb		4657458	0					
ANR	4657623	Identifier	sl		4657458	0					
ANR	4657624	Identifier	mb		4657458	1					
ANR	4657625	ShiftExpression	i * 16 + p * 256 << pixel_shift		4657458	1		<<			
ANR	4657626	AdditiveExpression	i * 16 + p * 256		4657458	0		+			
ANR	4657627	MultiplicativeExpression	i * 16		4657458	0		*			
ANR	4657628	Identifier	i		4657458	0					
ANR	4657629	PrimaryExpression	16		4657458	1					
ANR	4657630	MultiplicativeExpression	p * 256		4657458	1		*			
ANR	4657631	Identifier	p		4657458	0					
ANR	4657632	PrimaryExpression	256		4657458	1					
ANR	4657633	Identifier	pixel_shift		4657458	1					
ANR	4657634	Argument	linesize		4657458	2					
ANR	4657635	Identifier	linesize		4657458	0					
ANR	4657636	ElseStatement	else		4657458	0					
ANR	4657637	CompoundStatement		43:20:1015:1074	4657458	0					
ANR	4657638	IdentifierDeclStatement	const int nnz = sl -> non_zero_count_cache [ scan8 [ i + p * 16 ] ] ;	59:20:1635:1694	4657458	0	True				
ANR	4657639	IdentifierDecl	nnz = sl -> non_zero_count_cache [ scan8 [ i + p * 16 ] ]		4657458	0					
ANR	4657640	IdentifierDeclType	const int		4657458	0					
ANR	4657641	Identifier	nnz		4657458	1					
ANR	4657642	AssignmentExpression	nnz = sl -> non_zero_count_cache [ scan8 [ i + p * 16 ] ]		4657458	2		=			
ANR	4657643	Identifier	nnz		4657458	0					
ANR	4657644	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ i + p * 16 ] ]		4657458	1					
ANR	4657645	PtrMemberAccess	sl -> non_zero_count_cache		4657458	0					
ANR	4657646	Identifier	sl		4657458	0					
ANR	4657647	Identifier	non_zero_count_cache		4657458	1					
ANR	4657648	ArrayIndexing	scan8 [ i + p * 16 ]		4657458	1					
ANR	4657649	Identifier	scan8		4657458	0					
ANR	4657650	AdditiveExpression	i + p * 16		4657458	1		+			
ANR	4657651	Identifier	i		4657458	0					
ANR	4657652	MultiplicativeExpression	p * 16		4657458	1		*			
ANR	4657653	Identifier	p		4657458	0					
ANR	4657654	PrimaryExpression	16		4657458	1					
ANR	4657655	ExpressionStatement	"h -> hpc . pred8x8l [ dir ] ( ptr , ( sl -> topleft_samples_available << i ) & 0x8000 , ( sl -> topright_samples_available << i ) & 0x4000 , linesize )"	61:20:1717:1889	4657458	1	True				
ANR	4657656	CallExpression	"h -> hpc . pred8x8l [ dir ] ( ptr , ( sl -> topleft_samples_available << i ) & 0x8000 , ( sl -> topright_samples_available << i ) & 0x4000 , linesize )"		4657458	0					
ANR	4657657	Callee	h -> hpc . pred8x8l [ dir ]		4657458	0					
ANR	4657658	ArrayIndexing	h -> hpc . pred8x8l [ dir ]		4657458	0					
ANR	4657659	MemberAccess	h -> hpc . pred8x8l		4657458	0					
ANR	4657660	PtrMemberAccess	h -> hpc		4657458	0					
ANR	4657661	Identifier	h		4657458	0					
ANR	4657662	Identifier	hpc		4657458	1					
ANR	4657663	Identifier	pred8x8l		4657458	1					
ANR	4657664	Identifier	dir		4657458	1					
ANR	4657665	ArgumentList	ptr		4657458	1					
ANR	4657666	Argument	ptr		4657458	0					
ANR	4657667	Identifier	ptr		4657458	0					
ANR	4657668	Argument	( sl -> topleft_samples_available << i ) & 0x8000		4657458	1					
ANR	4657669	BitAndExpression	( sl -> topleft_samples_available << i ) & 0x8000		4657458	0		&			
ANR	4657670	ShiftExpression	sl -> topleft_samples_available << i		4657458	0		<<			
ANR	4657671	PtrMemberAccess	sl -> topleft_samples_available		4657458	0					
ANR	4657672	Identifier	sl		4657458	0					
ANR	4657673	Identifier	topleft_samples_available		4657458	1					
ANR	4657674	Identifier	i		4657458	1					
ANR	4657675	PrimaryExpression	0x8000		4657458	1					
ANR	4657676	Argument	( sl -> topright_samples_available << i ) & 0x4000		4657458	2					
ANR	4657677	BitAndExpression	( sl -> topright_samples_available << i ) & 0x4000		4657458	0		&			
ANR	4657678	ShiftExpression	sl -> topright_samples_available << i		4657458	0		<<			
ANR	4657679	PtrMemberAccess	sl -> topright_samples_available		4657458	0					
ANR	4657680	Identifier	sl		4657458	0					
ANR	4657681	Identifier	topright_samples_available		4657458	1					
ANR	4657682	Identifier	i		4657458	1					
ANR	4657683	PrimaryExpression	0x4000		4657458	1					
ANR	4657684	Argument	linesize		4657458	3					
ANR	4657685	Identifier	linesize		4657458	0					
ANR	4657686	IfStatement	if ( nnz )		4657458	2					
ANR	4657687	Condition	nnz	65:24:1916:1918	4657458	0	True				
ANR	4657688	Identifier	nnz		4657458	0					
ANR	4657689	CompoundStatement		49:29:1301:1301	4657458	1					
ANR	4657690	IfStatement	"if ( nnz == 1 && dctcoef_get ( sl -> mb , pixel_shift , i * 16 + p * 256 ) )"		4657458	0					
ANR	4657691	Condition	"nnz == 1 && dctcoef_get ( sl -> mb , pixel_shift , i * 16 + p * 256 )"	67:28:1952:2013	4657458	0	True				
ANR	4657692	AndExpression	"nnz == 1 && dctcoef_get ( sl -> mb , pixel_shift , i * 16 + p * 256 )"		4657458	0		&&			
ANR	4657693	EqualityExpression	nnz == 1		4657458	0		==			
ANR	4657694	Identifier	nnz		4657458	0					
ANR	4657695	PrimaryExpression	1		4657458	1					
ANR	4657696	CallExpression	"dctcoef_get ( sl -> mb , pixel_shift , i * 16 + p * 256 )"		4657458	1					
ANR	4657697	Callee	dctcoef_get		4657458	0					
ANR	4657698	Identifier	dctcoef_get		4657458	0					
ANR	4657699	ArgumentList	sl -> mb		4657458	1					
ANR	4657700	Argument	sl -> mb		4657458	0					
ANR	4657701	PtrMemberAccess	sl -> mb		4657458	0					
ANR	4657702	Identifier	sl		4657458	0					
ANR	4657703	Identifier	mb		4657458	1					
ANR	4657704	Argument	pixel_shift		4657458	1					
ANR	4657705	Identifier	pixel_shift		4657458	0					
ANR	4657706	Argument	i * 16 + p * 256		4657458	2					
ANR	4657707	AdditiveExpression	i * 16 + p * 256		4657458	0		+			
ANR	4657708	MultiplicativeExpression	i * 16		4657458	0		*			
ANR	4657709	Identifier	i		4657458	0					
ANR	4657710	PrimaryExpression	16		4657458	1					
ANR	4657711	MultiplicativeExpression	p * 256		4657458	1		*			
ANR	4657712	Identifier	p		4657458	0					
ANR	4657713	PrimaryExpression	256		4657458	1					
ANR	4657714	ExpressionStatement	"idct_dc_add ( ptr , sl -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"	69:28:2045:2115	4657458	1	True				
ANR	4657715	CallExpression	"idct_dc_add ( ptr , sl -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"		4657458	0					
ANR	4657716	Callee	idct_dc_add		4657458	0					
ANR	4657717	Identifier	idct_dc_add		4657458	0					
ANR	4657718	ArgumentList	ptr		4657458	1					
ANR	4657719	Argument	ptr		4657458	0					
ANR	4657720	Identifier	ptr		4657458	0					
ANR	4657721	Argument	sl -> mb + ( i * 16 + p * 256 << pixel_shift )		4657458	1					
ANR	4657722	AdditiveExpression	sl -> mb + ( i * 16 + p * 256 << pixel_shift )		4657458	0		+			
ANR	4657723	PtrMemberAccess	sl -> mb		4657458	0					
ANR	4657724	Identifier	sl		4657458	0					
ANR	4657725	Identifier	mb		4657458	1					
ANR	4657726	ShiftExpression	i * 16 + p * 256 << pixel_shift		4657458	1		<<			
ANR	4657727	AdditiveExpression	i * 16 + p * 256		4657458	0		+			
ANR	4657728	MultiplicativeExpression	i * 16		4657458	0		*			
ANR	4657729	Identifier	i		4657458	0					
ANR	4657730	PrimaryExpression	16		4657458	1					
ANR	4657731	MultiplicativeExpression	p * 256		4657458	1		*			
ANR	4657732	Identifier	p		4657458	0					
ANR	4657733	PrimaryExpression	256		4657458	1					
ANR	4657734	Identifier	pixel_shift		4657458	1					
ANR	4657735	Argument	linesize		4657458	2					
ANR	4657736	Identifier	linesize		4657458	0					
ANR	4657737	ElseStatement	else		4657458	0					
ANR	4657738	ExpressionStatement	"idct_add ( ptr , sl -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"	73:28:2176:2243	4657458	0	True				
ANR	4657739	CallExpression	"idct_add ( ptr , sl -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"		4657458	0					
ANR	4657740	Callee	idct_add		4657458	0					
ANR	4657741	Identifier	idct_add		4657458	0					
ANR	4657742	ArgumentList	ptr		4657458	1					
ANR	4657743	Argument	ptr		4657458	0					
ANR	4657744	Identifier	ptr		4657458	0					
ANR	4657745	Argument	sl -> mb + ( i * 16 + p * 256 << pixel_shift )		4657458	1					
ANR	4657746	AdditiveExpression	sl -> mb + ( i * 16 + p * 256 << pixel_shift )		4657458	0		+			
ANR	4657747	PtrMemberAccess	sl -> mb		4657458	0					
ANR	4657748	Identifier	sl		4657458	0					
ANR	4657749	Identifier	mb		4657458	1					
ANR	4657750	ShiftExpression	i * 16 + p * 256 << pixel_shift		4657458	1		<<			
ANR	4657751	AdditiveExpression	i * 16 + p * 256		4657458	0		+			
ANR	4657752	MultiplicativeExpression	i * 16		4657458	0		*			
ANR	4657753	Identifier	i		4657458	0					
ANR	4657754	PrimaryExpression	16		4657458	1					
ANR	4657755	MultiplicativeExpression	p * 256		4657458	1		*			
ANR	4657756	Identifier	p		4657458	0					
ANR	4657757	PrimaryExpression	256		4657458	1					
ANR	4657758	Identifier	pixel_shift		4657458	1					
ANR	4657759	Argument	linesize		4657458	2					
ANR	4657760	Identifier	linesize		4657458	0					
ANR	4657761	ElseStatement	else		4657458	0					
ANR	4657762	CompoundStatement		65:15:1698:1698	4657458	0					
ANR	4657763	IfStatement	if ( transform_bypass )		4657458	0					
ANR	4657764	Condition	transform_bypass	83:16:2337:2352	4657458	0	True				
ANR	4657765	Identifier	transform_bypass		4657458	0					
ANR	4657766	CompoundStatement		67:34:1735:1735	4657458	1					
ANR	4657767	ExpressionStatement	idct_dc_add = idct_add = h -> h264dsp . h264_add_pixels4_clear	85:16:2374:2454	4657458	0	True				
ANR	4657768	AssignmentExpression	idct_dc_add = idct_add = h -> h264dsp . h264_add_pixels4_clear		4657458	0		=			
ANR	4657769	Identifier	idct_dc_add		4657458	0					
ANR	4657770	AssignmentExpression	idct_add = h -> h264dsp . h264_add_pixels4_clear		4657458	1		=			
ANR	4657771	Identifier	idct_add		4657458	0					
ANR	4657772	MemberAccess	h -> h264dsp . h264_add_pixels4_clear		4657458	1					
ANR	4657773	PtrMemberAccess	h -> h264dsp		4657458	0					
ANR	4657774	Identifier	h		4657458	0					
ANR	4657775	Identifier	h264dsp		4657458	1					
ANR	4657776	Identifier	h264_add_pixels4_clear		4657458	1					
ANR	4657777	ElseStatement	else		4657458	0					
ANR	4657778	CompoundStatement		73:19:1856:1856	4657458	0					
ANR	4657779	ExpressionStatement	idct_dc_add = h -> h264dsp . h264_idct_dc_add	91:16:2495:2536	4657458	0	True				
ANR	4657780	AssignmentExpression	idct_dc_add = h -> h264dsp . h264_idct_dc_add		4657458	0		=			
ANR	4657781	Identifier	idct_dc_add		4657458	0					
ANR	4657782	MemberAccess	h -> h264dsp . h264_idct_dc_add		4657458	1					
ANR	4657783	PtrMemberAccess	h -> h264dsp		4657458	0					
ANR	4657784	Identifier	h		4657458	0					
ANR	4657785	Identifier	h264dsp		4657458	1					
ANR	4657786	Identifier	h264_idct_dc_add		4657458	1					
ANR	4657787	ExpressionStatement	idct_add = h -> h264dsp . h264_idct_add	93:16:2555:2593	4657458	1	True				
ANR	4657788	AssignmentExpression	idct_add = h -> h264dsp . h264_idct_add		4657458	0		=			
ANR	4657789	Identifier	idct_add		4657458	0					
ANR	4657790	MemberAccess	h -> h264dsp . h264_idct_add		4657458	1					
ANR	4657791	PtrMemberAccess	h -> h264dsp		4657458	0					
ANR	4657792	Identifier	h		4657458	0					
ANR	4657793	Identifier	h264dsp		4657458	1					
ANR	4657794	Identifier	h264_idct_add		4657458	1					
ANR	4657795	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		4657458	1					
ANR	4657796	ForInit	i = 0 ;	97:17:2628:2633	4657458	0	True				
ANR	4657797	AssignmentExpression	i = 0		4657458	0		=			
ANR	4657798	Identifier	i		4657458	0					
ANR	4657799	PrimaryExpression	0		4657458	1					
ANR	4657800	Condition	i < 16	97:24:2635:2640	4657458	1	True				
ANR	4657801	RelationalExpression	i < 16		4657458	0		<			
ANR	4657802	Identifier	i		4657458	0					
ANR	4657803	PrimaryExpression	16		4657458	1					
ANR	4657804	PostIncDecOperationExpression	i ++	97:32:2643:2645	4657458	2	True				
ANR	4657805	Identifier	i		4657458	0					
ANR	4657806	IncDec	++		4657458	1					
ANR	4657807	CompoundStatement		85:16:2111:2170	4657458	3					
ANR	4657808	Statement	uint8_t	99:16:2667:2673	4657458	0	True				
ANR	4657809	Statement	*	99:24:2675:2675	4657458	1	True				
ANR	4657810	Statement	const	99:25:2676:2680	4657458	2	True				
ANR	4657811	ExpressionStatement	ptr = dest_y + block_offset [ i ]	99:31:2682:2712	4657458	3	True				
ANR	4657812	AssignmentExpression	ptr = dest_y + block_offset [ i ]		4657458	0		=			
ANR	4657813	Identifier	ptr		4657458	0					
ANR	4657814	AdditiveExpression	dest_y + block_offset [ i ]		4657458	1		+			
ANR	4657815	Identifier	dest_y		4657458	0					
ANR	4657816	ArrayIndexing	block_offset [ i ]		4657458	1					
ANR	4657817	Identifier	block_offset		4657458	0					
ANR	4657818	Identifier	i		4657458	1					
ANR	4657819	IdentifierDeclStatement	const int dir = sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ] ;	101:16:2731:2790	4657458	4	True				
ANR	4657820	IdentifierDecl	dir = sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		4657458	0					
ANR	4657821	IdentifierDeclType	const int		4657458	0					
ANR	4657822	Identifier	dir		4657458	1					
ANR	4657823	AssignmentExpression	dir = sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		4657458	2		=			
ANR	4657824	Identifier	dir		4657458	0					
ANR	4657825	ArrayIndexing	sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		4657458	1					
ANR	4657826	PtrMemberAccess	sl -> intra4x4_pred_mode_cache		4657458	0					
ANR	4657827	Identifier	sl		4657458	0					
ANR	4657828	Identifier	intra4x4_pred_mode_cache		4657458	1					
ANR	4657829	ArrayIndexing	scan8 [ i ]		4657458	1					
ANR	4657830	Identifier	scan8		4657458	0					
ANR	4657831	Identifier	i		4657458	1					
ANR	4657832	IfStatement	if ( transform_bypass && h -> sps . profile_idc == 244 && dir <= 1 )		4657458	5					
ANR	4657833	Condition	transform_bypass && h -> sps . profile_idc == 244 && dir <= 1	105:20:2815:2871	4657458	0	True				
ANR	4657834	AndExpression	transform_bypass && h -> sps . profile_idc == 244 && dir <= 1		4657458	0		&&			
ANR	4657835	Identifier	transform_bypass		4657458	0					
ANR	4657836	AndExpression	h -> sps . profile_idc == 244 && dir <= 1		4657458	1		&&			
ANR	4657837	EqualityExpression	h -> sps . profile_idc == 244		4657458	0		==			
ANR	4657838	MemberAccess	h -> sps . profile_idc		4657458	0					
ANR	4657839	PtrMemberAccess	h -> sps		4657458	0					
ANR	4657840	Identifier	h		4657458	0					
ANR	4657841	Identifier	sps		4657458	1					
ANR	4657842	Identifier	profile_idc		4657458	1					
ANR	4657843	PrimaryExpression	244		4657458	1					
ANR	4657844	RelationalExpression	dir <= 1		4657458	1		<=			
ANR	4657845	Identifier	dir		4657458	0					
ANR	4657846	PrimaryExpression	1		4657458	1					
ANR	4657847	CompoundStatement		89:79:2254:2254	4657458	1					
ANR	4657848	ExpressionStatement	"h -> hpc . pred4x4_add [ dir ] ( ptr , sl -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"	107:20:2897:2979	4657458	0	True				
ANR	4657849	CallExpression	"h -> hpc . pred4x4_add [ dir ] ( ptr , sl -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"		4657458	0					
ANR	4657850	Callee	h -> hpc . pred4x4_add [ dir ]		4657458	0					
ANR	4657851	ArrayIndexing	h -> hpc . pred4x4_add [ dir ]		4657458	0					
ANR	4657852	MemberAccess	h -> hpc . pred4x4_add		4657458	0					
ANR	4657853	PtrMemberAccess	h -> hpc		4657458	0					
ANR	4657854	Identifier	h		4657458	0					
ANR	4657855	Identifier	hpc		4657458	1					
ANR	4657856	Identifier	pred4x4_add		4657458	1					
ANR	4657857	Identifier	dir		4657458	1					
ANR	4657858	ArgumentList	ptr		4657458	1					
ANR	4657859	Argument	ptr		4657458	0					
ANR	4657860	Identifier	ptr		4657458	0					
ANR	4657861	Argument	sl -> mb + ( i * 16 + p * 256 << pixel_shift )		4657458	1					
ANR	4657862	AdditiveExpression	sl -> mb + ( i * 16 + p * 256 << pixel_shift )		4657458	0		+			
ANR	4657863	PtrMemberAccess	sl -> mb		4657458	0					
ANR	4657864	Identifier	sl		4657458	0					
ANR	4657865	Identifier	mb		4657458	1					
ANR	4657866	ShiftExpression	i * 16 + p * 256 << pixel_shift		4657458	1		<<			
ANR	4657867	AdditiveExpression	i * 16 + p * 256		4657458	0		+			
ANR	4657868	MultiplicativeExpression	i * 16		4657458	0		*			
ANR	4657869	Identifier	i		4657458	0					
ANR	4657870	PrimaryExpression	16		4657458	1					
ANR	4657871	MultiplicativeExpression	p * 256		4657458	1		*			
ANR	4657872	Identifier	p		4657458	0					
ANR	4657873	PrimaryExpression	256		4657458	1					
ANR	4657874	Identifier	pixel_shift		4657458	1					
ANR	4657875	Argument	linesize		4657458	2					
ANR	4657876	Identifier	linesize		4657458	0					
ANR	4657877	ElseStatement	else		4657458	0					
ANR	4657878	CompoundStatement		99:20:2482:2498	4657458	0					
ANR	4657879	IdentifierDeclStatement	uint8_t * topright ;	111:20:3028:3045	4657458	0	True				
ANR	4657880	IdentifierDecl	* topright		4657458	0					
ANR	4657881	IdentifierDeclType	uint8_t *		4657458	0					
ANR	4657882	Identifier	topright		4657458	1					
ANR	4657883	IdentifierDeclStatement	"int nnz , tr ;"	113:20:3068:3079	4657458	1	True				
ANR	4657884	IdentifierDecl	nnz		4657458	0					
ANR	4657885	IdentifierDeclType	int		4657458	0					
ANR	4657886	Identifier	nnz		4657458	1					
ANR	4657887	IdentifierDecl	tr		4657458	1					
ANR	4657888	IdentifierDeclType	int		4657458	0					
ANR	4657889	Identifier	tr		4657458	1					
ANR	4657890	IdentifierDeclStatement	uint64_t tr_high ;	115:20:3102:3118	4657458	2	True				
ANR	4657891	IdentifierDecl	tr_high		4657458	0					
ANR	4657892	IdentifierDeclType	uint64_t		4657458	0					
ANR	4657893	Identifier	tr_high		4657458	1					
ANR	4657894	IfStatement	if ( dir == DIAG_DOWN_LEFT_PRED || dir == VERT_LEFT_PRED )		4657458	3					
ANR	4657895	Condition	dir == DIAG_DOWN_LEFT_PRED || dir == VERT_LEFT_PRED	117:24:3145:3195	4657458	0	True				
ANR	4657896	OrExpression	dir == DIAG_DOWN_LEFT_PRED || dir == VERT_LEFT_PRED		4657458	0		||			
ANR	4657897	EqualityExpression	dir == DIAG_DOWN_LEFT_PRED		4657458	0		==			
ANR	4657898	Identifier	dir		4657458	0					
ANR	4657899	Identifier	DIAG_DOWN_LEFT_PRED		4657458	1					
ANR	4657900	EqualityExpression	dir == VERT_LEFT_PRED		4657458	1		==			
ANR	4657901	Identifier	dir		4657458	0					
ANR	4657902	Identifier	VERT_LEFT_PRED		4657458	1					
ANR	4657903	CompoundStatement		103:24:2605:2678	4657458	1					
ANR	4657904	IdentifierDeclStatement	const int topright_avail = ( sl -> topright_samples_available << i ) & 0x8000 ;	119:24:3225:3298	4657458	0	True				
ANR	4657905	IdentifierDecl	topright_avail = ( sl -> topright_samples_available << i ) & 0x8000		4657458	0					
ANR	4657906	IdentifierDeclType	const int		4657458	0					
ANR	4657907	Identifier	topright_avail		4657458	1					
ANR	4657908	AssignmentExpression	topright_avail = ( sl -> topright_samples_available << i ) & 0x8000		4657458	2		=			
ANR	4657909	Identifier	topright_avail		4657458	0					
ANR	4657910	BitAndExpression	( sl -> topright_samples_available << i ) & 0x8000		4657458	1		&			
ANR	4657911	ShiftExpression	sl -> topright_samples_available << i		4657458	0		<<			
ANR	4657912	PtrMemberAccess	sl -> topright_samples_available		4657458	0					
ANR	4657913	Identifier	sl		4657458	0					
ANR	4657914	Identifier	topright_samples_available		4657458	1					
ANR	4657915	Identifier	i		4657458	1					
ANR	4657916	PrimaryExpression	0x8000		4657458	1					
ANR	4657917	ExpressionStatement	assert ( sl -> mb_y || linesize <= block_offset [ i ] )	121:24:3325:3372	4657458	1	True				
ANR	4657918	CallExpression	assert ( sl -> mb_y || linesize <= block_offset [ i ] )		4657458	0					
ANR	4657919	Callee	assert		4657458	0					
ANR	4657920	Identifier	assert		4657458	0					
ANR	4657921	ArgumentList	sl -> mb_y || linesize <= block_offset [ i ]		4657458	1					
ANR	4657922	Argument	sl -> mb_y || linesize <= block_offset [ i ]		4657458	0					
ANR	4657923	OrExpression	sl -> mb_y || linesize <= block_offset [ i ]		4657458	0		||			
ANR	4657924	PtrMemberAccess	sl -> mb_y		4657458	0					
ANR	4657925	Identifier	sl		4657458	0					
ANR	4657926	Identifier	mb_y		4657458	1					
ANR	4657927	RelationalExpression	linesize <= block_offset [ i ]		4657458	1		<=			
ANR	4657928	Identifier	linesize		4657458	0					
ANR	4657929	ArrayIndexing	block_offset [ i ]		4657458	1					
ANR	4657930	Identifier	block_offset		4657458	0					
ANR	4657931	Identifier	i		4657458	1					
ANR	4657932	IfStatement	if ( ! topright_avail )		4657458	2					
ANR	4657933	Condition	! topright_avail	123:28:3403:3417	4657458	0	True				
ANR	4657934	UnaryOperationExpression	! topright_avail		4657458	0					
ANR	4657935	UnaryOperator	!		4657458	0					
ANR	4657936	Identifier	topright_avail		4657458	1					
ANR	4657937	CompoundStatement		107:45:2800:2800	4657458	1					
ANR	4657938	IfStatement	if ( pixel_shift )		4657458	0					
ANR	4657939	Condition	pixel_shift	125:32:3455:3465	4657458	0	True				
ANR	4657940	Identifier	pixel_shift		4657458	0					
ANR	4657941	CompoundStatement		109:45:2848:2848	4657458	1					
ANR	4657942	Statement	tr_high	127:32:3503:3509	4657458	0	True				
ANR	4657943	Statement	=	127:41:3512:3512	4657458	1	True				
ANR	4657944	Statement	(	127:43:3514:3514	4657458	2	True				
ANR	4657945	Statement	(	127:44:3515:3515	4657458	3	True				
ANR	4657946	Statement	uint16_t	127:45:3516:3523	4657458	4	True				
ANR	4657947	Statement	*	127:54:3525:3525	4657458	5	True				
ANR	4657948	Statement	)	127:55:3526:3526	4657458	6	True				
ANR	4657949	Statement	ptr	127:56:3527:3529	4657458	7	True				
ANR	4657950	Statement	)	127:59:3530:3530	4657458	8	True				
ANR	4657951	Statement	[	127:60:3531:3531	4657458	9	True				
ANR	4657952	Statement	3	127:61:3532:3532	4657458	10	True				
ANR	4657953	Statement	-	127:63:3534:3534	4657458	11	True				
ANR	4657954	Statement	linesize	127:65:3536:3543	4657458	12	True				
ANR	4657955	Statement	/	127:74:3545:3545	4657458	13	True				
ANR	4657956	Statement	2	127:76:3547:3547	4657458	14	True				
ANR	4657957	Statement	]	127:77:3548:3548	4657458	15	True				
ANR	4657958	Statement	*	127:79:3550:3550	4657458	16	True				
ANR	4657959	Statement	0x0001000100010001UL	127:81:3552:3571	4657458	17	True				
ANR	4657960	ExpressionStatement	L	127:101:3572:3573	4657458	18	True				
ANR	4657961	Identifier	L		4657458	0					
ANR	4657962	ExpressionStatement	topright = ( uint8_t * ) & tr_high	129:32:3608:3638	4657458	19	True				
ANR	4657963	AssignmentExpression	topright = ( uint8_t * ) & tr_high		4657458	0		=			
ANR	4657964	Identifier	topright		4657458	0					
ANR	4657965	CastExpression	( uint8_t * ) & tr_high		4657458	1					
ANR	4657966	CastTarget	uint8_t *		4657458	0					
ANR	4657967	UnaryOperationExpression	& tr_high		4657458	1					
ANR	4657968	UnaryOperator	&		4657458	0					
ANR	4657969	Identifier	tr_high		4657458	1					
ANR	4657970	ElseStatement	else		4657458	0					
ANR	4657971	CompoundStatement		115:35:3056:3056	4657458	0					
ANR	4657972	ExpressionStatement	tr = ptr [ 3 - linesize ] * 0x01010101u	133:32:3711:3753	4657458	0	True				
ANR	4657973	AssignmentExpression	tr = ptr [ 3 - linesize ] * 0x01010101u		4657458	0		=			
ANR	4657974	Identifier	tr		4657458	0					
ANR	4657975	MultiplicativeExpression	ptr [ 3 - linesize ] * 0x01010101u		4657458	1		*			
ANR	4657976	ArrayIndexing	ptr [ 3 - linesize ]		4657458	0					
ANR	4657977	Identifier	ptr		4657458	0					
ANR	4657978	AdditiveExpression	3 - linesize		4657458	1		-			
ANR	4657979	PrimaryExpression	3		4657458	0					
ANR	4657980	Identifier	linesize		4657458	1					
ANR	4657981	PrimaryExpression	0x01010101u		4657458	1					
ANR	4657982	ExpressionStatement	topright = ( uint8_t * ) & tr	135:32:3788:3813	4657458	1	True				
ANR	4657983	AssignmentExpression	topright = ( uint8_t * ) & tr		4657458	0		=			
ANR	4657984	Identifier	topright		4657458	0					
ANR	4657985	CastExpression	( uint8_t * ) & tr		4657458	1					
ANR	4657986	CastTarget	uint8_t *		4657458	0					
ANR	4657987	UnaryOperationExpression	& tr		4657458	1					
ANR	4657988	UnaryOperator	&		4657458	0					
ANR	4657989	Identifier	tr		4657458	1					
ANR	4657990	ElseStatement	else		4657458	0					
ANR	4657991	ExpressionStatement	topright = ptr + ( 4 << pixel_shift ) - linesize	141:28:3907:3953	4657458	0	True				
ANR	4657992	AssignmentExpression	topright = ptr + ( 4 << pixel_shift ) - linesize		4657458	0		=			
ANR	4657993	Identifier	topright		4657458	0					
ANR	4657994	AdditiveExpression	ptr + ( 4 << pixel_shift ) - linesize		4657458	1		+			
ANR	4657995	Identifier	ptr		4657458	0					
ANR	4657996	AdditiveExpression	( 4 << pixel_shift ) - linesize		4657458	1		-			
ANR	4657997	ShiftExpression	4 << pixel_shift		4657458	0		<<			
ANR	4657998	PrimaryExpression	4		4657458	0					
ANR	4657999	Identifier	pixel_shift		4657458	1					
ANR	4658000	Identifier	linesize		4657458	1					
ANR	4658001	ElseStatement	else		4657458	0					
ANR	4658002	ExpressionStatement	topright = NULL	145:24:4008:4023	4657458	0	True				
ANR	4658003	AssignmentExpression	topright = NULL		4657458	0		=			
ANR	4658004	Identifier	topright		4657458	0					
ANR	4658005	Identifier	NULL		4657458	1					
ANR	4658006	ExpressionStatement	"h -> hpc . pred4x4 [ dir ] ( ptr , topright , linesize )"	149:20:4048:4092	4657458	4	True				
ANR	4658007	CallExpression	"h -> hpc . pred4x4 [ dir ] ( ptr , topright , linesize )"		4657458	0					
ANR	4658008	Callee	h -> hpc . pred4x4 [ dir ]		4657458	0					
ANR	4658009	ArrayIndexing	h -> hpc . pred4x4 [ dir ]		4657458	0					
ANR	4658010	MemberAccess	h -> hpc . pred4x4		4657458	0					
ANR	4658011	PtrMemberAccess	h -> hpc		4657458	0					
ANR	4658012	Identifier	h		4657458	0					
ANR	4658013	Identifier	hpc		4657458	1					
ANR	4658014	Identifier	pred4x4		4657458	1					
ANR	4658015	Identifier	dir		4657458	1					
ANR	4658016	ArgumentList	ptr		4657458	1					
ANR	4658017	Argument	ptr		4657458	0					
ANR	4658018	Identifier	ptr		4657458	0					
ANR	4658019	Argument	topright		4657458	1					
ANR	4658020	Identifier	topright		4657458	0					
ANR	4658021	Argument	linesize		4657458	2					
ANR	4658022	Identifier	linesize		4657458	0					
ANR	4658023	ExpressionStatement	nnz = sl -> non_zero_count_cache [ scan8 [ i + p * 16 ] ]	151:20:4115:4164	4657458	5	True				
ANR	4658024	AssignmentExpression	nnz = sl -> non_zero_count_cache [ scan8 [ i + p * 16 ] ]		4657458	0		=			
ANR	4658025	Identifier	nnz		4657458	0					
ANR	4658026	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ i + p * 16 ] ]		4657458	1					
ANR	4658027	PtrMemberAccess	sl -> non_zero_count_cache		4657458	0					
ANR	4658028	Identifier	sl		4657458	0					
ANR	4658029	Identifier	non_zero_count_cache		4657458	1					
ANR	4658030	ArrayIndexing	scan8 [ i + p * 16 ]		4657458	1					
ANR	4658031	Identifier	scan8		4657458	0					
ANR	4658032	AdditiveExpression	i + p * 16		4657458	1		+			
ANR	4658033	Identifier	i		4657458	0					
ANR	4658034	MultiplicativeExpression	p * 16		4657458	1		*			
ANR	4658035	Identifier	p		4657458	0					
ANR	4658036	PrimaryExpression	16		4657458	1					
ANR	4658037	IfStatement	if ( nnz )		4657458	6					
ANR	4658038	Condition	nnz	153:24:4191:4193	4657458	0	True				
ANR	4658039	Identifier	nnz		4657458	0					
ANR	4658040	CompoundStatement		137:29:3576:3576	4657458	1					
ANR	4658041	IfStatement	"if ( nnz == 1 && dctcoef_get ( sl -> mb , pixel_shift , i * 16 + p * 256 ) )"		4657458	0					
ANR	4658042	Condition	"nnz == 1 && dctcoef_get ( sl -> mb , pixel_shift , i * 16 + p * 256 )"	155:28:4227:4288	4657458	0	True				
ANR	4658043	AndExpression	"nnz == 1 && dctcoef_get ( sl -> mb , pixel_shift , i * 16 + p * 256 )"		4657458	0		&&			
ANR	4658044	EqualityExpression	nnz == 1		4657458	0		==			
ANR	4658045	Identifier	nnz		4657458	0					
ANR	4658046	PrimaryExpression	1		4657458	1					
ANR	4658047	CallExpression	"dctcoef_get ( sl -> mb , pixel_shift , i * 16 + p * 256 )"		4657458	1					
ANR	4658048	Callee	dctcoef_get		4657458	0					
ANR	4658049	Identifier	dctcoef_get		4657458	0					
ANR	4658050	ArgumentList	sl -> mb		4657458	1					
ANR	4658051	Argument	sl -> mb		4657458	0					
ANR	4658052	PtrMemberAccess	sl -> mb		4657458	0					
ANR	4658053	Identifier	sl		4657458	0					
ANR	4658054	Identifier	mb		4657458	1					
ANR	4658055	Argument	pixel_shift		4657458	1					
ANR	4658056	Identifier	pixel_shift		4657458	0					
ANR	4658057	Argument	i * 16 + p * 256		4657458	2					
ANR	4658058	AdditiveExpression	i * 16 + p * 256		4657458	0		+			
ANR	4658059	MultiplicativeExpression	i * 16		4657458	0		*			
ANR	4658060	Identifier	i		4657458	0					
ANR	4658061	PrimaryExpression	16		4657458	1					
ANR	4658062	MultiplicativeExpression	p * 256		4657458	1		*			
ANR	4658063	Identifier	p		4657458	0					
ANR	4658064	PrimaryExpression	256		4657458	1					
ANR	4658065	ExpressionStatement	"idct_dc_add ( ptr , sl -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"	157:28:4320:4390	4657458	1	True				
ANR	4658066	CallExpression	"idct_dc_add ( ptr , sl -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"		4657458	0					
ANR	4658067	Callee	idct_dc_add		4657458	0					
ANR	4658068	Identifier	idct_dc_add		4657458	0					
ANR	4658069	ArgumentList	ptr		4657458	1					
ANR	4658070	Argument	ptr		4657458	0					
ANR	4658071	Identifier	ptr		4657458	0					
ANR	4658072	Argument	sl -> mb + ( i * 16 + p * 256 << pixel_shift )		4657458	1					
ANR	4658073	AdditiveExpression	sl -> mb + ( i * 16 + p * 256 << pixel_shift )		4657458	0		+			
ANR	4658074	PtrMemberAccess	sl -> mb		4657458	0					
ANR	4658075	Identifier	sl		4657458	0					
ANR	4658076	Identifier	mb		4657458	1					
ANR	4658077	ShiftExpression	i * 16 + p * 256 << pixel_shift		4657458	1		<<			
ANR	4658078	AdditiveExpression	i * 16 + p * 256		4657458	0		+			
ANR	4658079	MultiplicativeExpression	i * 16		4657458	0		*			
ANR	4658080	Identifier	i		4657458	0					
ANR	4658081	PrimaryExpression	16		4657458	1					
ANR	4658082	MultiplicativeExpression	p * 256		4657458	1		*			
ANR	4658083	Identifier	p		4657458	0					
ANR	4658084	PrimaryExpression	256		4657458	1					
ANR	4658085	Identifier	pixel_shift		4657458	1					
ANR	4658086	Argument	linesize		4657458	2					
ANR	4658087	Identifier	linesize		4657458	0					
ANR	4658088	ElseStatement	else		4657458	0					
ANR	4658089	ExpressionStatement	"idct_add ( ptr , sl -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"	161:28:4451:4518	4657458	0	True				
ANR	4658090	CallExpression	"idct_add ( ptr , sl -> mb + ( i * 16 + p * 256 << pixel_shift ) , linesize )"		4657458	0					
ANR	4658091	Callee	idct_add		4657458	0					
ANR	4658092	Identifier	idct_add		4657458	0					
ANR	4658093	ArgumentList	ptr		4657458	1					
ANR	4658094	Argument	ptr		4657458	0					
ANR	4658095	Identifier	ptr		4657458	0					
ANR	4658096	Argument	sl -> mb + ( i * 16 + p * 256 << pixel_shift )		4657458	1					
ANR	4658097	AdditiveExpression	sl -> mb + ( i * 16 + p * 256 << pixel_shift )		4657458	0		+			
ANR	4658098	PtrMemberAccess	sl -> mb		4657458	0					
ANR	4658099	Identifier	sl		4657458	0					
ANR	4658100	Identifier	mb		4657458	1					
ANR	4658101	ShiftExpression	i * 16 + p * 256 << pixel_shift		4657458	1		<<			
ANR	4658102	AdditiveExpression	i * 16 + p * 256		4657458	0		+			
ANR	4658103	MultiplicativeExpression	i * 16		4657458	0		*			
ANR	4658104	Identifier	i		4657458	0					
ANR	4658105	PrimaryExpression	16		4657458	1					
ANR	4658106	MultiplicativeExpression	p * 256		4657458	1		*			
ANR	4658107	Identifier	p		4657458	0					
ANR	4658108	PrimaryExpression	256		4657458	1					
ANR	4658109	Identifier	pixel_shift		4657458	1					
ANR	4658110	Argument	linesize		4657458	2					
ANR	4658111	Identifier	linesize		4657458	0					
ANR	4658112	ElseStatement	else		4657458	0					
ANR	4658113	CompoundStatement		155:11:3980:3980	4657458	0					
ANR	4658114	ExpressionStatement	"h -> hpc . pred16x16 [ sl -> intra16x16_pred_mode ] ( dest_y , linesize )"	173:8:4611:4671	4657458	0	True				
ANR	4658115	CallExpression	"h -> hpc . pred16x16 [ sl -> intra16x16_pred_mode ] ( dest_y , linesize )"		4657458	0					
ANR	4658116	Callee	h -> hpc . pred16x16 [ sl -> intra16x16_pred_mode ]		4657458	0					
ANR	4658117	ArrayIndexing	h -> hpc . pred16x16 [ sl -> intra16x16_pred_mode ]		4657458	0					
ANR	4658118	MemberAccess	h -> hpc . pred16x16		4657458	0					
ANR	4658119	PtrMemberAccess	h -> hpc		4657458	0					
ANR	4658120	Identifier	h		4657458	0					
ANR	4658121	Identifier	hpc		4657458	1					
ANR	4658122	Identifier	pred16x16		4657458	1					
ANR	4658123	PtrMemberAccess	sl -> intra16x16_pred_mode		4657458	1					
ANR	4658124	Identifier	sl		4657458	0					
ANR	4658125	Identifier	intra16x16_pred_mode		4657458	1					
ANR	4658126	ArgumentList	dest_y		4657458	1					
ANR	4658127	Argument	dest_y		4657458	0					
ANR	4658128	Identifier	dest_y		4657458	0					
ANR	4658129	Argument	linesize		4657458	1					
ANR	4658130	Identifier	linesize		4657458	0					
ANR	4658131	IfStatement	if ( sl -> non_zero_count_cache [ scan8 [ LUMA_DC_BLOCK_INDEX + p ] ] )		4657458	1					
ANR	4658132	Condition	sl -> non_zero_count_cache [ scan8 [ LUMA_DC_BLOCK_INDEX + p ] ]	175:12:4686:4741	4657458	0	True				
ANR	4658133	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ LUMA_DC_BLOCK_INDEX + p ] ]		4657458	0					
ANR	4658134	PtrMemberAccess	sl -> non_zero_count_cache		4657458	0					
ANR	4658135	Identifier	sl		4657458	0					
ANR	4658136	Identifier	non_zero_count_cache		4657458	1					
ANR	4658137	ArrayIndexing	scan8 [ LUMA_DC_BLOCK_INDEX + p ]		4657458	1					
ANR	4658138	Identifier	scan8		4657458	0					
ANR	4658139	AdditiveExpression	LUMA_DC_BLOCK_INDEX + p		4657458	1		+			
ANR	4658140	Identifier	LUMA_DC_BLOCK_INDEX		4657458	0					
ANR	4658141	Identifier	p		4657458	1					
ANR	4658142	CompoundStatement		159:70:4124:4124	4657458	1					
ANR	4658143	IfStatement	if ( ! transform_bypass )		4657458	0					
ANR	4658144	Condition	! transform_bypass	177:16:4763:4779	4657458	0	True				
ANR	4658145	UnaryOperationExpression	! transform_bypass		4657458	0					
ANR	4658146	UnaryOperator	!		4657458	0					
ANR	4658147	Identifier	transform_bypass		4657458	1					
ANR	4658148	ExpressionStatement	"h -> h264dsp . h264_luma_dc_dequant_idct ( sl -> mb + ( p * 256 << pixel_shift ) , sl -> mb_luma_dc [ p ] , h -> dequant4_coeff [ p ] [ qscale ] [ 0 ] )"	179:16:4799:5030	4657458	1	True				
ANR	4658149	CallExpression	"h -> h264dsp . h264_luma_dc_dequant_idct ( sl -> mb + ( p * 256 << pixel_shift ) , sl -> mb_luma_dc [ p ] , h -> dequant4_coeff [ p ] [ qscale ] [ 0 ] )"		4657458	0					
ANR	4658150	Callee	h -> h264dsp . h264_luma_dc_dequant_idct		4657458	0					
ANR	4658151	MemberAccess	h -> h264dsp . h264_luma_dc_dequant_idct		4657458	0					
ANR	4658152	PtrMemberAccess	h -> h264dsp		4657458	0					
ANR	4658153	Identifier	h		4657458	0					
ANR	4658154	Identifier	h264dsp		4657458	1					
ANR	4658155	Identifier	h264_luma_dc_dequant_idct		4657458	1					
ANR	4658156	ArgumentList	sl -> mb + ( p * 256 << pixel_shift )		4657458	1					
ANR	4658157	Argument	sl -> mb + ( p * 256 << pixel_shift )		4657458	0					
ANR	4658158	AdditiveExpression	sl -> mb + ( p * 256 << pixel_shift )		4657458	0		+			
ANR	4658159	PtrMemberAccess	sl -> mb		4657458	0					
ANR	4658160	Identifier	sl		4657458	0					
ANR	4658161	Identifier	mb		4657458	1					
ANR	4658162	ShiftExpression	p * 256 << pixel_shift		4657458	1		<<			
ANR	4658163	MultiplicativeExpression	p * 256		4657458	0		*			
ANR	4658164	Identifier	p		4657458	0					
ANR	4658165	PrimaryExpression	256		4657458	1					
ANR	4658166	Identifier	pixel_shift		4657458	1					
ANR	4658167	Argument	sl -> mb_luma_dc [ p ]		4657458	1					
ANR	4658168	ArrayIndexing	sl -> mb_luma_dc [ p ]		4657458	0					
ANR	4658169	PtrMemberAccess	sl -> mb_luma_dc		4657458	0					
ANR	4658170	Identifier	sl		4657458	0					
ANR	4658171	Identifier	mb_luma_dc		4657458	1					
ANR	4658172	Identifier	p		4657458	1					
ANR	4658173	Argument	h -> dequant4_coeff [ p ] [ qscale ] [ 0 ]		4657458	2					
ANR	4658174	ArrayIndexing	h -> dequant4_coeff [ p ] [ qscale ] [ 0 ]		4657458	0					
ANR	4658175	ArrayIndexing	h -> dequant4_coeff [ p ] [ qscale ]		4657458	0					
ANR	4658176	ArrayIndexing	h -> dequant4_coeff [ p ]		4657458	0					
ANR	4658177	PtrMemberAccess	h -> dequant4_coeff		4657458	0					
ANR	4658178	Identifier	h		4657458	0					
ANR	4658179	Identifier	dequant4_coeff		4657458	1					
ANR	4658180	Identifier	p		4657458	1					
ANR	4658181	Identifier	qscale		4657458	1					
ANR	4658182	PrimaryExpression	0		4657458	1					
ANR	4658183	ElseStatement	else		4657458	0					
ANR	4658184	CompoundStatement		171:23:4456:4734	4657458	0					
ANR	4658185	Statement	static	187:16:5069:5074	4657458	0	True				
ANR	4658186	IdentifierDeclStatement	"const uint8_t dc_mapping [ 16 ] = { 0 * 16 , 1 * 16 , 4 * 16 , 5 * 16 , 2 * 16 , 3 * 16 , 6 * 16 , 7 * 16 , 8 * 16 , 9 * 16 , 12 * 16 , 13 * 16 , 10 * 16 , 11 * 16 , 14 * 16 , 15 * 16 } ;"	187:23:5076:5354	4657458	1	True				
ANR	4658187	IdentifierDecl	"dc_mapping [ 16 ] = { 0 * 16 , 1 * 16 , 4 * 16 , 5 * 16 , 2 * 16 , 3 * 16 , 6 * 16 , 7 * 16 , 8 * 16 , 9 * 16 , 12 * 16 , 13 * 16 , 10 * 16 , 11 * 16 , 14 * 16 , 15 * 16 }"		4657458	0					
ANR	4658188	IdentifierDeclType	const uint8_t [ 16 ]		4657458	0					
ANR	4658189	Identifier	dc_mapping		4657458	1					
ANR	4658190	PrimaryExpression	16		4657458	2					
ANR	4658191	AssignmentExpression	"dc_mapping [ 16 ] = { 0 * 16 , 1 * 16 , 4 * 16 , 5 * 16 , 2 * 16 , 3 * 16 , 6 * 16 , 7 * 16 , 8 * 16 , 9 * 16 , 12 * 16 , 13 * 16 , 10 * 16 , 11 * 16 , 14 * 16 , 15 * 16 }"		4657458	3		=			
ANR	4658192	Identifier	dc_mapping		4657458	0					
ANR	4658193	InitializerList	0 * 16		4657458	1					
ANR	4658194	MultiplicativeExpression	0 * 16		4657458	0		*			
ANR	4658195	PrimaryExpression	0		4657458	0					
ANR	4658196	PrimaryExpression	16		4657458	1					
ANR	4658197	MultiplicativeExpression	1 * 16		4657458	1		*			
ANR	4658198	PrimaryExpression	1		4657458	0					
ANR	4658199	PrimaryExpression	16		4657458	1					
ANR	4658200	MultiplicativeExpression	4 * 16		4657458	2		*			
ANR	4658201	PrimaryExpression	4		4657458	0					
ANR	4658202	PrimaryExpression	16		4657458	1					
ANR	4658203	MultiplicativeExpression	5 * 16		4657458	3		*			
ANR	4658204	PrimaryExpression	5		4657458	0					
ANR	4658205	PrimaryExpression	16		4657458	1					
ANR	4658206	MultiplicativeExpression	2 * 16		4657458	4		*			
ANR	4658207	PrimaryExpression	2		4657458	0					
ANR	4658208	PrimaryExpression	16		4657458	1					
ANR	4658209	MultiplicativeExpression	3 * 16		4657458	5		*			
ANR	4658210	PrimaryExpression	3		4657458	0					
ANR	4658211	PrimaryExpression	16		4657458	1					
ANR	4658212	MultiplicativeExpression	6 * 16		4657458	6		*			
ANR	4658213	PrimaryExpression	6		4657458	0					
ANR	4658214	PrimaryExpression	16		4657458	1					
ANR	4658215	MultiplicativeExpression	7 * 16		4657458	7		*			
ANR	4658216	PrimaryExpression	7		4657458	0					
ANR	4658217	PrimaryExpression	16		4657458	1					
ANR	4658218	MultiplicativeExpression	8 * 16		4657458	8		*			
ANR	4658219	PrimaryExpression	8		4657458	0					
ANR	4658220	PrimaryExpression	16		4657458	1					
ANR	4658221	MultiplicativeExpression	9 * 16		4657458	9		*			
ANR	4658222	PrimaryExpression	9		4657458	0					
ANR	4658223	PrimaryExpression	16		4657458	1					
ANR	4658224	MultiplicativeExpression	12 * 16		4657458	10		*			
ANR	4658225	PrimaryExpression	12		4657458	0					
ANR	4658226	PrimaryExpression	16		4657458	1					
ANR	4658227	MultiplicativeExpression	13 * 16		4657458	11		*			
ANR	4658228	PrimaryExpression	13		4657458	0					
ANR	4658229	PrimaryExpression	16		4657458	1					
ANR	4658230	MultiplicativeExpression	10 * 16		4657458	12		*			
ANR	4658231	PrimaryExpression	10		4657458	0					
ANR	4658232	PrimaryExpression	16		4657458	1					
ANR	4658233	MultiplicativeExpression	11 * 16		4657458	13		*			
ANR	4658234	PrimaryExpression	11		4657458	0					
ANR	4658235	PrimaryExpression	16		4657458	1					
ANR	4658236	MultiplicativeExpression	14 * 16		4657458	14		*			
ANR	4658237	PrimaryExpression	14		4657458	0					
ANR	4658238	PrimaryExpression	16		4657458	1					
ANR	4658239	MultiplicativeExpression	15 * 16		4657458	15		*			
ANR	4658240	PrimaryExpression	15		4657458	0					
ANR	4658241	PrimaryExpression	16		4657458	1					
ANR	4658242	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		4657458	2					
ANR	4658243	ForInit	i = 0 ;	199:21:5378:5383	4657458	0	True				
ANR	4658244	AssignmentExpression	i = 0		4657458	0		=			
ANR	4658245	Identifier	i		4657458	0					
ANR	4658246	PrimaryExpression	0		4657458	1					
ANR	4658247	Condition	i < 16	199:28:5385:5390	4657458	1	True				
ANR	4658248	RelationalExpression	i < 16		4657458	0		<			
ANR	4658249	Identifier	i		4657458	0					
ANR	4658250	PrimaryExpression	16		4657458	1					
ANR	4658251	PostIncDecOperationExpression	i ++	199:36:5393:5395	4657458	2	True				
ANR	4658252	Identifier	i		4657458	0					
ANR	4658253	IncDec	++		4657458	1					
ANR	4658254	ExpressionStatement	"dctcoef_set ( sl -> mb + ( p * 256 << pixel_shift ) , pixel_shift , dc_mapping [ i ] , dctcoef_get ( sl -> mb_luma_dc [ p ] , pixel_shift , i ) )"	201:20:5419:5652	4657458	3	True				
ANR	4658255	CallExpression	"dctcoef_set ( sl -> mb + ( p * 256 << pixel_shift ) , pixel_shift , dc_mapping [ i ] , dctcoef_get ( sl -> mb_luma_dc [ p ] , pixel_shift , i ) )"		4657458	0					
ANR	4658256	Callee	dctcoef_set		4657458	0					
ANR	4658257	Identifier	dctcoef_set		4657458	0					
ANR	4658258	ArgumentList	sl -> mb + ( p * 256 << pixel_shift )		4657458	1					
ANR	4658259	Argument	sl -> mb + ( p * 256 << pixel_shift )		4657458	0					
ANR	4658260	AdditiveExpression	sl -> mb + ( p * 256 << pixel_shift )		4657458	0		+			
ANR	4658261	PtrMemberAccess	sl -> mb		4657458	0					
ANR	4658262	Identifier	sl		4657458	0					
ANR	4658263	Identifier	mb		4657458	1					
ANR	4658264	ShiftExpression	p * 256 << pixel_shift		4657458	1		<<			
ANR	4658265	MultiplicativeExpression	p * 256		4657458	0		*			
ANR	4658266	Identifier	p		4657458	0					
ANR	4658267	PrimaryExpression	256		4657458	1					
ANR	4658268	Identifier	pixel_shift		4657458	1					
ANR	4658269	Argument	pixel_shift		4657458	1					
ANR	4658270	Identifier	pixel_shift		4657458	0					
ANR	4658271	Argument	dc_mapping [ i ]		4657458	2					
ANR	4658272	ArrayIndexing	dc_mapping [ i ]		4657458	0					
ANR	4658273	Identifier	dc_mapping		4657458	0					
ANR	4658274	Identifier	i		4657458	1					
ANR	4658275	Argument	"dctcoef_get ( sl -> mb_luma_dc [ p ] , pixel_shift , i )"		4657458	3					
ANR	4658276	CallExpression	"dctcoef_get ( sl -> mb_luma_dc [ p ] , pixel_shift , i )"		4657458	0					
ANR	4658277	Callee	dctcoef_get		4657458	0					
ANR	4658278	Identifier	dctcoef_get		4657458	0					
ANR	4658279	ArgumentList	sl -> mb_luma_dc [ p ]		4657458	1					
ANR	4658280	Argument	sl -> mb_luma_dc [ p ]		4657458	0					
ANR	4658281	ArrayIndexing	sl -> mb_luma_dc [ p ]		4657458	0					
ANR	4658282	PtrMemberAccess	sl -> mb_luma_dc		4657458	0					
ANR	4658283	Identifier	sl		4657458	0					
ANR	4658284	Identifier	mb_luma_dc		4657458	1					
ANR	4658285	Identifier	p		4657458	1					
ANR	4658286	Argument	pixel_shift		4657458	1					
ANR	4658287	Identifier	pixel_shift		4657458	0					
ANR	4658288	Argument	i		4657458	2					
ANR	4658289	Identifier	i		4657458	0					
ANR	4658290	ReturnType	static av_always_inline void		4657458	1					
ANR	4658291	Identifier	hl_decode_mb_predict_luma		4657458	2					
ANR	4658292	ParameterList	"const H264Context * h , H264SliceContext * sl , int mb_type , int simple , int transform_bypass , int pixel_shift , const int * block_offset , int linesize , uint8_t * dest_y , int p"		4657458	3					
ANR	4658293	Parameter	const H264Context * h	1:55:55:74	4657458	0	True				
ANR	4658294	ParameterType	const H264Context *		4657458	0					
ANR	4658295	Identifier	h		4657458	1					
ANR	4658296	Parameter	H264SliceContext * sl	3:55:133:152	4657458	1	True				
ANR	4658297	ParameterType	H264SliceContext *		4657458	0					
ANR	4658298	Identifier	sl		4657458	1					
ANR	4658299	Parameter	int mb_type	5:55:211:221	4657458	2	True				
ANR	4658300	ParameterType	int		4657458	0					
ANR	4658301	Identifier	mb_type		4657458	1					
ANR	4658302	Parameter	int simple	5:68:224:233	4657458	3	True				
ANR	4658303	ParameterType	int		4657458	0					
ANR	4658304	Identifier	simple		4657458	1					
ANR	4658305	Parameter	int transform_bypass	7:55:292:311	4657458	4	True				
ANR	4658306	ParameterType	int		4657458	0					
ANR	4658307	Identifier	transform_bypass		4657458	1					
ANR	4658308	Parameter	int pixel_shift	9:55:370:384	4657458	5	True				
ANR	4658309	ParameterType	int		4657458	0					
ANR	4658310	Identifier	pixel_shift		4657458	1					
ANR	4658311	Parameter	const int * block_offset	11:55:443:465	4657458	6	True				
ANR	4658312	ParameterType	const int *		4657458	0					
ANR	4658313	Identifier	block_offset		4657458	1					
ANR	4658314	Parameter	int linesize	13:55:524:535	4657458	7	True				
ANR	4658315	ParameterType	int		4657458	0					
ANR	4658316	Identifier	linesize		4657458	1					
ANR	4658317	Parameter	uint8_t * dest_y	15:55:594:608	4657458	8	True				
ANR	4658318	ParameterType	uint8_t *		4657458	0					
ANR	4658319	Identifier	dest_y		4657458	1					
ANR	4658320	Parameter	int p	15:72:611:615	4657458	9	True				
ANR	4658321	ParameterType	int		4657458	0					
ANR	4658322	Identifier	p		4657458	1					
ANR	4658323	CFGEntryNode	ENTRY		4657458		True				
ANR	4658324	CFGExitNode	EXIT		4657458		True				
ANR	4658325	Symbol	sl -> intra4x4_pred_mode_cache		4657458						
ANR	4658326	Symbol	h -> dequant4_coeff		4657458						
ANR	4658327	Symbol	idct_dc_add		4657458						
ANR	4658328	Symbol	tr_high		4657458						
ANR	4658329	Symbol	* scan8		4657458						
ANR	4658330	Symbol	simple		4657458						
ANR	4658331	Symbol	dir		4657458						
ANR	4658332	Symbol	* * * * h		4657458						
ANR	4658333	Symbol	sl -> topright_samples_available		4657458						
ANR	4658334	Symbol	linesize		4657458						
ANR	4658335	Symbol	h -> sps . profile_idc		4657458						
ANR	4658336	Symbol	block_offset		4657458						
ANR	4658337	Symbol	topright		4657458						
ANR	4658338	Symbol	mb_type		4657458						
ANR	4658339	Symbol	h -> h264dsp . h264_add_pixels8_clear		4657458						
ANR	4658340	Symbol	* ptr		4657458						
ANR	4658341	Symbol	* sl -> non_zero_count_cache		4657458						
ANR	4658342	Symbol	* dc_mapping		4657458						
ANR	4658343	Symbol	* sl		4657458						
ANR	4658344	Symbol	sl -> chroma_qp		4657458						
ANR	4658345	Symbol	h -> hpc . pred8x8l_add		4657458						
ANR	4658346	Symbol	* qscale		4657458						
ANR	4658347	Symbol	h -> hpc		4657458						
ANR	4658348	Symbol	* * i		4657458						
ANR	4658349	Symbol	h -> h264dsp . h264_add_pixels4_clear		4657458						
ANR	4658350	Symbol	NULL		4657458						
ANR	4658351	Symbol	* * h		4657458						
ANR	4658352	Symbol	IS_INTRA4x4		4657458						
ANR	4658353	Symbol	sl -> mb		4657458						
ANR	4658354	Symbol	& tr		4657458						
ANR	4658355	Symbol	sl -> mb_y		4657458						
ANR	4658356	Symbol	* linesize		4657458						
ANR	4658357	Symbol	* * scan8		4657458						
ANR	4658358	Symbol	dc_mapping		4657458						
ANR	4658359	Symbol	* * * h -> dequant4_coeff		4657458						
ANR	4658360	Symbol	qscale		4657458						
ANR	4658361	Symbol	sl -> non_zero_count_cache		4657458						
ANR	4658362	Symbol	* * * p		4657458						
ANR	4658363	Symbol	dctcoef_get		4657458						
ANR	4658364	Symbol	h -> hpc . pred16x16		4657458						
ANR	4658365	Symbol	h -> h264dsp . h264_idct8_dc_add		4657458						
ANR	4658366	Symbol	* * * h		4657458						
ANR	4658367	Symbol	nnz		4657458						
ANR	4658368	Symbol	* * LUMA_DC_BLOCK_INDEX		4657458						
ANR	4658369	Symbol	* sl -> chroma_qp		4657458						
ANR	4658370	Symbol	h -> h264dsp . h264_idct_dc_add		4657458						
ANR	4658371	Symbol	* LUMA_DC_BLOCK_INDEX		4657458						
ANR	4658372	Symbol	h -> hpc . pred8x8l		4657458						
ANR	4658373	Symbol	h -> hpc . pred4x4		4657458						
ANR	4658374	Symbol	sl -> topleft_samples_available		4657458						
ANR	4658375	Symbol	* * sl		4657458						
ANR	4658376	Symbol	IS_8x8DCT		4657458						
ANR	4658377	Symbol	* * qscale		4657458						
ANR	4658378	Symbol	h -> h264dsp		4657458						
ANR	4658379	Symbol	sl -> mb_luma_dc		4657458						
ANR	4658380	Symbol	transform_bypass		4657458						
ANR	4658381	Symbol	pixel_shift		4657458						
ANR	4658382	Symbol	h -> h264dsp . h264_idct8_add		4657458						
ANR	4658383	Symbol	scan8		4657458						
ANR	4658384	Symbol	sl		4657458						
ANR	4658385	Symbol	* * p		4657458						
ANR	4658386	Symbol	sl -> intra16x16_pred_mode		4657458						
ANR	4658387	Symbol	& tr_high		4657458						
ANR	4658388	Symbol	* h -> dequant4_coeff		4657458						
ANR	4658389	Symbol	DIAG_DOWN_LEFT_PRED		4657458						
ANR	4658390	Symbol	sl -> qscale		4657458						
ANR	4658391	Symbol	idct_add		4657458						
ANR	4658392	Symbol	h		4657458						
ANR	4658393	Symbol	i		4657458						
ANR	4658394	Symbol	topright_avail		4657458						
ANR	4658395	Symbol	* sl -> mb_luma_dc		4657458						
ANR	4658396	Symbol	h -> h264dsp . h264_idct_add		4657458						
ANR	4658397	Symbol	ptr		4657458						
ANR	4658398	Symbol	* block_offset		4657458						
ANR	4658399	Symbol	p		4657458						
ANR	4658400	Symbol	* h		4657458						
ANR	4658401	Symbol	* i		4657458						
ANR	4658402	Symbol	* sl -> intra4x4_pred_mode_cache		4657458						
ANR	4658403	Symbol	dest_y		4657458						
ANR	4658404	Symbol	h -> hpc . pred4x4_add		4657458						
ANR	4658405	Symbol	VERT_LEFT_PRED		4657458						
ANR	4658406	Symbol	* p		4657458						
ANR	4658407	Symbol	h -> sps		4657458						
ANR	4658408	Symbol	* * h -> dequant4_coeff		4657458						
ANR	4658409	Symbol	tr		4657458						
ANR	4658410	Symbol	LUMA_DC_BLOCK_INDEX		4657458						
