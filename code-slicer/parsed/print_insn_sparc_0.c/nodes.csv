command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6687998	File	/home/p4ultr4n/workplace/ReVeal/raw_code/print_insn_sparc_0.c								
ANR	6687999	Function	print_insn_sparc	1:0:0:20833							
ANR	6688000	FunctionDef	"print_insn_sparc (bfd_vma memaddr , disassemble_info * info)"		6687999	0					
ANR	6688001	CompoundStatement		3:0:60:20833	6687999	0					
ANR	6688002	IdentifierDeclStatement	FILE * stream = info -> stream ;	5:2:65:92	6687999	0	True				
ANR	6688003	IdentifierDecl	* stream = info -> stream		6687999	0					
ANR	6688004	IdentifierDeclType	FILE *		6687999	0					
ANR	6688005	Identifier	stream		6687999	1					
ANR	6688006	AssignmentExpression	* stream = info -> stream		6687999	2		=			
ANR	6688007	Identifier	stream		6687999	0					
ANR	6688008	PtrMemberAccess	info -> stream		6687999	1					
ANR	6688009	Identifier	info		6687999	0					
ANR	6688010	Identifier	stream		6687999	1					
ANR	6688011	IdentifierDeclStatement	bfd_byte buffer [ 4 ] ;	7:2:97:115	6687999	1	True				
ANR	6688012	IdentifierDecl	buffer [ 4 ]		6687999	0					
ANR	6688013	IdentifierDeclType	bfd_byte [ 4 ]		6687999	0					
ANR	6688014	Identifier	buffer		6687999	1					
ANR	6688015	PrimaryExpression	4		6687999	2					
ANR	6688016	IdentifierDeclStatement	unsigned long insn ;	9:2:120:138	6687999	2	True				
ANR	6688017	IdentifierDecl	insn		6687999	0					
ANR	6688018	IdentifierDeclType	unsigned long		6687999	0					
ANR	6688019	Identifier	insn		6687999	1					
ANR	6688020	IdentifierDeclStatement	sparc_opcode_hash * op ;	11:2:143:164	6687999	3	True				
ANR	6688021	IdentifierDecl	* op		6687999	0					
ANR	6688022	IdentifierDeclType	sparc_opcode_hash *		6687999	0					
ANR	6688023	Identifier	op		6687999	1					
ANR	6688024	Statement	static	15:2:225:230	6687999	4	True				
ANR	6688025	IdentifierDeclStatement	int opcodes_initialized = 0 ;	15:9:232:259	6687999	5	True				
ANR	6688026	IdentifierDecl	opcodes_initialized = 0		6687999	0					
ANR	6688027	IdentifierDeclType	int		6687999	0					
ANR	6688028	Identifier	opcodes_initialized		6687999	1					
ANR	6688029	AssignmentExpression	opcodes_initialized = 0		6687999	2		=			
ANR	6688030	Identifier	opcodes_initialized		6687999	0					
ANR	6688031	PrimaryExpression	0		6687999	1					
ANR	6688032	Statement	static	19:2:304:309	6687999	6	True				
ANR	6688033	IdentifierDeclStatement	unsigned long current_mach = 0 ;	19:9:311:341	6687999	7	True				
ANR	6688034	IdentifierDecl	current_mach = 0		6687999	0					
ANR	6688035	IdentifierDeclType	unsigned long		6687999	0					
ANR	6688036	Identifier	current_mach		6687999	1					
ANR	6688037	AssignmentExpression	current_mach = 0		6687999	2		=			
ANR	6688038	Identifier	current_mach		6687999	0					
ANR	6688039	PrimaryExpression	0		6687999	1					
ANR	6688040	IdentifierDeclStatement	bfd_vma ( * getword ) ( const unsigned char * ) ;	21:2:346:388	6687999	8	True				
ANR	6688041	IdentifierDecl	( * getword ) ( const unsigned char * )		6687999	0					
ANR	6688042	IdentifierDeclType	bfd_vma ( * ) ( const unsigned char * )		6687999	0					
ANR	6688043	Identifier	getword		6687999	1					
ANR	6688044	IfStatement	if ( ! opcodes_initialized || info -> mach != current_mach )		6687999	9					
ANR	6688045	Condition	! opcodes_initialized || info -> mach != current_mach	25:6:399:455	6687999	0	True				
ANR	6688046	OrExpression	! opcodes_initialized || info -> mach != current_mach		6687999	0		||			
ANR	6688047	UnaryOperationExpression	! opcodes_initialized		6687999	0					
ANR	6688048	UnaryOperator	!		6687999	0					
ANR	6688049	Identifier	opcodes_initialized		6687999	1					
ANR	6688050	EqualityExpression	info -> mach != current_mach		6687999	1		!=			
ANR	6688051	PtrMemberAccess	info -> mach		6687999	0					
ANR	6688052	Identifier	info		6687999	0					
ANR	6688053	Identifier	mach		6687999	1					
ANR	6688054	Identifier	current_mach		6687999	1					
ANR	6688055	CompoundStatement		29:6:411:416	6687999	1					
ANR	6688056	IdentifierDeclStatement	int i ;	31:6:472:477	6687999	0	True				
ANR	6688057	IdentifierDecl	i		6687999	0					
ANR	6688058	IdentifierDeclType	int		6687999	0					
ANR	6688059	Identifier	i		6687999	1					
ANR	6688060	ExpressionStatement	current_arch_mask = compute_arch_mask ( info -> mach )	35:6:488:538	6687999	1	True				
ANR	6688061	AssignmentExpression	current_arch_mask = compute_arch_mask ( info -> mach )		6687999	0		=			
ANR	6688062	Identifier	current_arch_mask		6687999	0					
ANR	6688063	CallExpression	compute_arch_mask ( info -> mach )		6687999	1					
ANR	6688064	Callee	compute_arch_mask		6687999	0					
ANR	6688065	Identifier	compute_arch_mask		6687999	0					
ANR	6688066	ArgumentList	info -> mach		6687999	1					
ANR	6688067	Argument	info -> mach		6687999	0					
ANR	6688068	PtrMemberAccess	info -> mach		6687999	0					
ANR	6688069	Identifier	info		6687999	0					
ANR	6688070	Identifier	mach		6687999	1					
ANR	6688071	IfStatement	if ( ! opcodes_initialized )		6687999	2					
ANR	6688072	Condition	! opcodes_initialized	39:10:553:572	6687999	0	True				
ANR	6688073	UnaryOperationExpression	! opcodes_initialized		6687999	0					
ANR	6688074	UnaryOperator	!		6687999	0					
ANR	6688075	Identifier	opcodes_initialized		6687999	1					
ANR	6688076	ExpressionStatement	sorted_opcodes = malloc ( sparc_num_opcodes * sizeof ( sparc_opcode * ) )	41:8:584:664	6687999	1	True				
ANR	6688077	AssignmentExpression	sorted_opcodes = malloc ( sparc_num_opcodes * sizeof ( sparc_opcode * ) )		6687999	0		=			
ANR	6688078	Identifier	sorted_opcodes		6687999	0					
ANR	6688079	CallExpression	malloc ( sparc_num_opcodes * sizeof ( sparc_opcode * ) )		6687999	1					
ANR	6688080	Callee	malloc		6687999	0					
ANR	6688081	Identifier	malloc		6687999	0					
ANR	6688082	ArgumentList	sparc_num_opcodes * sizeof ( sparc_opcode * )		6687999	1					
ANR	6688083	Argument	sparc_num_opcodes * sizeof ( sparc_opcode * )		6687999	0					
ANR	6688084	MultiplicativeExpression	sparc_num_opcodes * sizeof ( sparc_opcode * )		6687999	0		*			
ANR	6688085	Identifier	sparc_num_opcodes		6687999	0					
ANR	6688086	SizeofExpression	sizeof ( sparc_opcode * )		6687999	1					
ANR	6688087	Sizeof	sizeof		6687999	0					
ANR	6688088	SizeofOperand	sparc_opcode *		6687999	1					
ANR	6688089	ForStatement	for ( i = 0 ; i < sparc_num_opcodes ; ++ i )		6687999	3					
ANR	6688090	ForInit	i = 0 ;	47:11:736:741	6687999	0	True				
ANR	6688091	AssignmentExpression	i = 0		6687999	0		=			
ANR	6688092	Identifier	i		6687999	0					
ANR	6688093	PrimaryExpression	0		6687999	1					
ANR	6688094	Condition	i < sparc_num_opcodes	47:18:743:763	6687999	1	True				
ANR	6688095	RelationalExpression	i < sparc_num_opcodes		6687999	0		<			
ANR	6688096	Identifier	i		6687999	0					
ANR	6688097	Identifier	sparc_num_opcodes		6687999	1					
ANR	6688098	UnaryExpression	++ i	47:41:766:768	6687999	2	True				
ANR	6688099	IncDec	++		6687999	0					
ANR	6688100	Identifier	i		6687999	1					
ANR	6688101	ExpressionStatement	sorted_opcodes [ i ] = & sparc_opcodes [ i ]	49:8:780:817	6687999	3	True				
ANR	6688102	AssignmentExpression	sorted_opcodes [ i ] = & sparc_opcodes [ i ]		6687999	0		=			
ANR	6688103	ArrayIndexing	sorted_opcodes [ i ]		6687999	0					
ANR	6688104	Identifier	sorted_opcodes		6687999	0					
ANR	6688105	Identifier	i		6687999	1					
ANR	6688106	UnaryOperationExpression	& sparc_opcodes [ i ]		6687999	1					
ANR	6688107	UnaryOperator	&		6687999	0					
ANR	6688108	ArrayIndexing	sparc_opcodes [ i ]		6687999	1					
ANR	6688109	Identifier	sparc_opcodes		6687999	0					
ANR	6688110	Identifier	i		6687999	1					
ANR	6688111	ExpressionStatement	"qsort ( ( char * ) sorted_opcodes , sparc_num_opcodes , sizeof ( sorted_opcodes [ 0 ] ) , compare_opcodes )"	51:6:826:935	6687999	4	True				
ANR	6688112	CallExpression	"qsort ( ( char * ) sorted_opcodes , sparc_num_opcodes , sizeof ( sorted_opcodes [ 0 ] ) , compare_opcodes )"		6687999	0					
ANR	6688113	Callee	qsort		6687999	0					
ANR	6688114	Identifier	qsort		6687999	0					
ANR	6688115	ArgumentList	( char * ) sorted_opcodes		6687999	1					
ANR	6688116	Argument	( char * ) sorted_opcodes		6687999	0					
ANR	6688117	CastExpression	( char * ) sorted_opcodes		6687999	0					
ANR	6688118	CastTarget	char *		6687999	0					
ANR	6688119	Identifier	sorted_opcodes		6687999	1					
ANR	6688120	Argument	sparc_num_opcodes		6687999	1					
ANR	6688121	Identifier	sparc_num_opcodes		6687999	0					
ANR	6688122	Argument	sizeof ( sorted_opcodes [ 0 ] )		6687999	2					
ANR	6688123	SizeofExpression	sizeof ( sorted_opcodes [ 0 ] )		6687999	0					
ANR	6688124	Sizeof	sizeof		6687999	0					
ANR	6688125	ArrayIndexing	sorted_opcodes [ 0 ]		6687999	1					
ANR	6688126	Identifier	sorted_opcodes		6687999	0					
ANR	6688127	PrimaryExpression	0		6687999	1					
ANR	6688128	Argument	compare_opcodes		6687999	3					
ANR	6688129	Identifier	compare_opcodes		6687999	0					
ANR	6688130	ExpressionStatement	"build_hash_table ( sorted_opcodes , opcode_hash_table , sparc_num_opcodes )"	57:6:946:1017	6687999	5	True				
ANR	6688131	CallExpression	"build_hash_table ( sorted_opcodes , opcode_hash_table , sparc_num_opcodes )"		6687999	0					
ANR	6688132	Callee	build_hash_table		6687999	0					
ANR	6688133	Identifier	build_hash_table		6687999	0					
ANR	6688134	ArgumentList	sorted_opcodes		6687999	1					
ANR	6688135	Argument	sorted_opcodes		6687999	0					
ANR	6688136	Identifier	sorted_opcodes		6687999	0					
ANR	6688137	Argument	opcode_hash_table		6687999	1					
ANR	6688138	Identifier	opcode_hash_table		6687999	0					
ANR	6688139	Argument	sparc_num_opcodes		6687999	2					
ANR	6688140	Identifier	sparc_num_opcodes		6687999	0					
ANR	6688141	ExpressionStatement	current_mach = info -> mach	59:6:1026:1051	6687999	6	True				
ANR	6688142	AssignmentExpression	current_mach = info -> mach		6687999	0		=			
ANR	6688143	Identifier	current_mach		6687999	0					
ANR	6688144	PtrMemberAccess	info -> mach		6687999	1					
ANR	6688145	Identifier	info		6687999	0					
ANR	6688146	Identifier	mach		6687999	1					
ANR	6688147	ExpressionStatement	opcodes_initialized = 1	61:6:1060:1083	6687999	7	True				
ANR	6688148	AssignmentExpression	opcodes_initialized = 1		6687999	0		=			
ANR	6688149	Identifier	opcodes_initialized		6687999	0					
ANR	6688150	PrimaryExpression	1		6687999	1					
ANR	6688151	CompoundStatement		67:4:1043:1129	6687999	10					
ANR	6688152	IdentifierDeclStatement	"int status = ( * info -> read_memory_func ) ( memaddr , buffer , sizeof ( buffer ) , info ) ;"	69:4:1104:1190	6687999	0	True				
ANR	6688153	IdentifierDecl	"status = ( * info -> read_memory_func ) ( memaddr , buffer , sizeof ( buffer ) , info )"		6687999	0					
ANR	6688154	IdentifierDeclType	int		6687999	0					
ANR	6688155	Identifier	status		6687999	1					
ANR	6688156	AssignmentExpression	"status = ( * info -> read_memory_func ) ( memaddr , buffer , sizeof ( buffer ) , info )"		6687999	2		=			
ANR	6688157	Identifier	status		6687999	0					
ANR	6688158	CallExpression	"( * info -> read_memory_func ) ( memaddr , buffer , sizeof ( buffer ) , info )"		6687999	1					
ANR	6688159	Callee	* info -> read_memory_func		6687999	0					
ANR	6688160	UnaryOperationExpression	* info -> read_memory_func		6687999	0					
ANR	6688161	UnaryOperator	*		6687999	0					
ANR	6688162	PtrMemberAccess	info -> read_memory_func		6687999	1					
ANR	6688163	Identifier	info		6687999	0					
ANR	6688164	Identifier	read_memory_func		6687999	1					
ANR	6688165	ArgumentList	memaddr		6687999	1					
ANR	6688166	Argument	memaddr		6687999	0					
ANR	6688167	Identifier	memaddr		6687999	0					
ANR	6688168	Argument	buffer		6687999	1					
ANR	6688169	Identifier	buffer		6687999	0					
ANR	6688170	Argument	sizeof ( buffer )		6687999	2					
ANR	6688171	SizeofExpression	sizeof ( buffer )		6687999	0					
ANR	6688172	Sizeof	sizeof		6687999	0					
ANR	6688173	SizeofOperand	buffer		6687999	1					
ANR	6688174	Argument	info		6687999	3					
ANR	6688175	Identifier	info		6687999	0					
ANR	6688176	IfStatement	if ( status != 0 )		6687999	1					
ANR	6688177	Condition	status != 0	75:8:1203:1213	6687999	0	True				
ANR	6688178	EqualityExpression	status != 0		6687999	0		!=			
ANR	6688179	Identifier	status		6687999	0					
ANR	6688180	PrimaryExpression	0		6687999	1					
ANR	6688181	CompoundStatement		75:6:1162:1162	6687999	1					
ANR	6688182	ExpressionStatement	"( * info -> memory_error_func ) ( status , memaddr , info )"	79:8:1234:1284	6687999	0	True				
ANR	6688183	CallExpression	"( * info -> memory_error_func ) ( status , memaddr , info )"		6687999	0					
ANR	6688184	Callee	* info -> memory_error_func		6687999	0					
ANR	6688185	UnaryOperationExpression	* info -> memory_error_func		6687999	0					
ANR	6688186	UnaryOperator	*		6687999	0					
ANR	6688187	PtrMemberAccess	info -> memory_error_func		6687999	1					
ANR	6688188	Identifier	info		6687999	0					
ANR	6688189	Identifier	memory_error_func		6687999	1					
ANR	6688190	ArgumentList	status		6687999	1					
ANR	6688191	Argument	status		6687999	0					
ANR	6688192	Identifier	status		6687999	0					
ANR	6688193	Argument	memaddr		6687999	1					
ANR	6688194	Identifier	memaddr		6687999	0					
ANR	6688195	Argument	info		6687999	2					
ANR	6688196	Identifier	info		6687999	0					
ANR	6688197	ReturnStatement	return - 1 ;	81:8:1295:1304	6687999	1	True				
ANR	6688198	UnaryOperationExpression	- 1		6687999	0					
ANR	6688199	UnaryOperator	-		6687999	0					
ANR	6688200	PrimaryExpression	1		6687999	1					
ANR	6688201	IfStatement	if ( info -> endian == BFD_ENDIAN_BIG || info -> mach == bfd_mach_sparc_sparclite )		6687999	11					
ANR	6688202	Condition	info -> endian == BFD_ENDIAN_BIG || info -> mach == bfd_mach_sparc_sparclite	93:6:1478:1549	6687999	0	True				
ANR	6688203	OrExpression	info -> endian == BFD_ENDIAN_BIG || info -> mach == bfd_mach_sparc_sparclite		6687999	0		||			
ANR	6688204	EqualityExpression	info -> endian == BFD_ENDIAN_BIG		6687999	0		==			
ANR	6688205	PtrMemberAccess	info -> endian		6687999	0					
ANR	6688206	Identifier	info		6687999	0					
ANR	6688207	Identifier	endian		6687999	1					
ANR	6688208	Identifier	BFD_ENDIAN_BIG		6687999	1					
ANR	6688209	EqualityExpression	info -> mach == bfd_mach_sparc_sparclite		6687999	1		==			
ANR	6688210	PtrMemberAccess	info -> mach		6687999	0					
ANR	6688211	Identifier	info		6687999	0					
ANR	6688212	Identifier	mach		6687999	1					
ANR	6688213	Identifier	bfd_mach_sparc_sparclite		6687999	1					
ANR	6688214	ExpressionStatement	getword = bfd_getb32	95:4:1557:1577	6687999	1	True				
ANR	6688215	AssignmentExpression	getword = bfd_getb32		6687999	0		=			
ANR	6688216	Identifier	getword		6687999	0					
ANR	6688217	Identifier	bfd_getb32		6687999	1					
ANR	6688218	ElseStatement	else		6687999	0					
ANR	6688219	ExpressionStatement	getword = bfd_getl32	99:4:1592:1612	6687999	0	True				
ANR	6688220	AssignmentExpression	getword = bfd_getl32		6687999	0		=			
ANR	6688221	Identifier	getword		6687999	0					
ANR	6688222	Identifier	bfd_getl32		6687999	1					
ANR	6688223	ExpressionStatement	insn = getword ( buffer )	103:2:1619:1642	6687999	12	True				
ANR	6688224	AssignmentExpression	insn = getword ( buffer )		6687999	0		=			
ANR	6688225	Identifier	insn		6687999	0					
ANR	6688226	CallExpression	getword ( buffer )		6687999	1					
ANR	6688227	Callee	getword		6687999	0					
ANR	6688228	Identifier	getword		6687999	0					
ANR	6688229	ArgumentList	buffer		6687999	1					
ANR	6688230	Argument	buffer		6687999	0					
ANR	6688231	Identifier	buffer		6687999	0					
ANR	6688232	ExpressionStatement	info -> insn_info_valid = 1	107:2:1649:1674	6687999	13	True				
ANR	6688233	AssignmentExpression	info -> insn_info_valid = 1		6687999	0		=			
ANR	6688234	PtrMemberAccess	info -> insn_info_valid		6687999	0					
ANR	6688235	Identifier	info		6687999	0					
ANR	6688236	Identifier	insn_info_valid		6687999	1					
ANR	6688237	PrimaryExpression	1		6687999	1					
ANR	6688238	ExpressionStatement	info -> insn_type = dis_nonbranch	109:2:1729:1760	6687999	14	True				
ANR	6688239	AssignmentExpression	info -> insn_type = dis_nonbranch		6687999	0		=			
ANR	6688240	PtrMemberAccess	info -> insn_type		6687999	0					
ANR	6688241	Identifier	info		6687999	0					
ANR	6688242	Identifier	insn_type		6687999	1					
ANR	6688243	Identifier	dis_nonbranch		6687999	1					
ANR	6688244	ExpressionStatement	info -> branch_delay_insns = 0	111:2:1809:1837	6687999	15	True				
ANR	6688245	AssignmentExpression	info -> branch_delay_insns = 0		6687999	0		=			
ANR	6688246	PtrMemberAccess	info -> branch_delay_insns		6687999	0					
ANR	6688247	Identifier	info		6687999	0					
ANR	6688248	Identifier	branch_delay_insns		6687999	1					
ANR	6688249	PrimaryExpression	0		6687999	1					
ANR	6688250	ExpressionStatement	info -> target = 0	113:2:1882:1898	6687999	16	True				
ANR	6688251	AssignmentExpression	info -> target = 0		6687999	0		=			
ANR	6688252	PtrMemberAccess	info -> target		6687999	0					
ANR	6688253	Identifier	info		6687999	0					
ANR	6688254	Identifier	target		6687999	1					
ANR	6688255	PrimaryExpression	0		6687999	1					
ANR	6688256	ForStatement	for ( op = opcode_hash_table [ HASH_INSN ( insn ) ] ; op ; op = op -> next )		6687999	17					
ANR	6688257	ForInit	op = opcode_hash_table [ HASH_INSN ( insn ) ] ;	117:7:1969:2009	6687999	0	True				
ANR	6688258	AssignmentExpression	op = opcode_hash_table [ HASH_INSN ( insn ) ]		6687999	0		=			
ANR	6688259	Identifier	op		6687999	0					
ANR	6688260	ArrayIndexing	opcode_hash_table [ HASH_INSN ( insn ) ]		6687999	1					
ANR	6688261	Identifier	opcode_hash_table		6687999	0					
ANR	6688262	CallExpression	HASH_INSN ( insn )		6687999	1					
ANR	6688263	Callee	HASH_INSN		6687999	0					
ANR	6688264	Identifier	HASH_INSN		6687999	0					
ANR	6688265	ArgumentList	insn		6687999	1					
ANR	6688266	Argument	insn		6687999	0					
ANR	6688267	Identifier	insn		6687999	0					
ANR	6688268	Condition	op	117:49:2011:2012	6687999	1	True				
ANR	6688269	Identifier	op		6687999	0					
ANR	6688270	AssignmentExpression	op = op -> next	117:53:2015:2027	6687999	2	True	=			
ANR	6688271	Identifier	op		6687999	0					
ANR	6688272	PtrMemberAccess	op -> next		6687999	1					
ANR	6688273	Identifier	op		6687999	0					
ANR	6688274	Identifier	next		6687999	1					
ANR	6688275	CompoundStatement		119:6:1983:2022	6687999	3					
ANR	6688276	IdentifierDeclStatement	const sparc_opcode * opcode = op -> opcode ;	121:6:2044:2083	6687999	0	True				
ANR	6688277	IdentifierDecl	* opcode = op -> opcode		6687999	0					
ANR	6688278	IdentifierDeclType	const sparc_opcode *		6687999	0					
ANR	6688279	Identifier	opcode		6687999	1					
ANR	6688280	AssignmentExpression	* opcode = op -> opcode		6687999	2		=			
ANR	6688281	Identifier	opcode		6687999	0					
ANR	6688282	PtrMemberAccess	op -> opcode		6687999	1					
ANR	6688283	Identifier	op		6687999	0					
ANR	6688284	Identifier	opcode		6687999	1					
ANR	6688285	IfStatement	if ( ! ( opcode -> architecture & current_arch_mask ) )		6687999	1					
ANR	6688286	Condition	! ( opcode -> architecture & current_arch_mask )	127:10:2178:2221	6687999	0	True				
ANR	6688287	UnaryOperationExpression	! ( opcode -> architecture & current_arch_mask )		6687999	0					
ANR	6688288	UnaryOperator	!		6687999	0					
ANR	6688289	BitAndExpression	opcode -> architecture & current_arch_mask		6687999	1		&			
ANR	6688290	PtrMemberAccess	opcode -> architecture		6687999	0					
ANR	6688291	Identifier	opcode		6687999	0					
ANR	6688292	Identifier	architecture		6687999	1					
ANR	6688293	Identifier	current_arch_mask		6687999	1					
ANR	6688294	ContinueStatement	continue ;	129:8:2233:2241	6687999	1	True				
ANR	6688295	IfStatement	if ( ( opcode -> match & insn ) == opcode -> match && ( opcode -> lose & insn ) == 0 )		6687999	2					
ANR	6688296	Condition	( opcode -> match & insn ) == opcode -> match && ( opcode -> lose & insn ) == 0	133:10:2256:2335	6687999	0	True				
ANR	6688297	AndExpression	( opcode -> match & insn ) == opcode -> match && ( opcode -> lose & insn ) == 0		6687999	0		&&			
ANR	6688298	EqualityExpression	( opcode -> match & insn ) == opcode -> match		6687999	0		==			
ANR	6688299	BitAndExpression	opcode -> match & insn		6687999	0		&			
ANR	6688300	PtrMemberAccess	opcode -> match		6687999	0					
ANR	6688301	Identifier	opcode		6687999	0					
ANR	6688302	Identifier	match		6687999	1					
ANR	6688303	Identifier	insn		6687999	1					
ANR	6688304	PtrMemberAccess	opcode -> match		6687999	1					
ANR	6688305	Identifier	opcode		6687999	0					
ANR	6688306	Identifier	match		6687999	1					
ANR	6688307	EqualityExpression	( opcode -> lose & insn ) == 0		6687999	1		==			
ANR	6688308	BitAndExpression	opcode -> lose & insn		6687999	0		&			
ANR	6688309	PtrMemberAccess	opcode -> lose		6687999	0					
ANR	6688310	Identifier	opcode		6687999	0					
ANR	6688311	Identifier	lose		6687999	1					
ANR	6688312	Identifier	insn		6687999	1					
ANR	6688313	PrimaryExpression	0		6687999	1					
ANR	6688314	CompoundStatement		151:10:2635:2653	6687999	1					
ANR	6688315	IdentifierDeclStatement	int imm_added_to_rs1 = 0 ;	143:10:2505:2529	6687999	0	True				
ANR	6688316	IdentifierDecl	imm_added_to_rs1 = 0		6687999	0					
ANR	6688317	IdentifierDeclType	int		6687999	0					
ANR	6688318	Identifier	imm_added_to_rs1		6687999	1					
ANR	6688319	AssignmentExpression	imm_added_to_rs1 = 0		6687999	2		=			
ANR	6688320	Identifier	imm_added_to_rs1		6687999	0					
ANR	6688321	PrimaryExpression	0		6687999	1					
ANR	6688322	IdentifierDeclStatement	int imm_ored_to_rs1 = 0 ;	145:10:2542:2565	6687999	1	True				
ANR	6688323	IdentifierDecl	imm_ored_to_rs1 = 0		6687999	0					
ANR	6688324	IdentifierDeclType	int		6687999	0					
ANR	6688325	Identifier	imm_ored_to_rs1		6687999	1					
ANR	6688326	AssignmentExpression	imm_ored_to_rs1 = 0		6687999	2		=			
ANR	6688327	Identifier	imm_ored_to_rs1		6687999	0					
ANR	6688328	PrimaryExpression	0		6687999	1					
ANR	6688329	IdentifierDeclStatement	int found_plus = 0 ;	153:10:2696:2714	6687999	2	True				
ANR	6688330	IdentifierDecl	found_plus = 0		6687999	0					
ANR	6688331	IdentifierDeclType	int		6687999	0					
ANR	6688332	Identifier	found_plus		6687999	1					
ANR	6688333	AssignmentExpression	found_plus = 0		6687999	2		=			
ANR	6688334	Identifier	found_plus		6687999	0					
ANR	6688335	PrimaryExpression	0		6687999	1					
ANR	6688336	IfStatement	if ( opcode -> match == 0x80102000 )		6687999	3					
ANR	6688337	Condition	opcode -> match == 0x80102000	167:14:2960:2986	6687999	0	True				
ANR	6688338	EqualityExpression	opcode -> match == 0x80102000		6687999	0		==			
ANR	6688339	PtrMemberAccess	opcode -> match		6687999	0					
ANR	6688340	Identifier	opcode		6687999	0					
ANR	6688341	Identifier	match		6687999	1					
ANR	6688342	PrimaryExpression	0x80102000		6687999	1					
ANR	6688343	ExpressionStatement	imm_ored_to_rs1 = 1	169:12:3011:3030	6687999	1	True				
ANR	6688344	AssignmentExpression	imm_ored_to_rs1 = 1		6687999	0		=			
ANR	6688345	Identifier	imm_ored_to_rs1		6687999	0					
ANR	6688346	PrimaryExpression	1		6687999	1					
ANR	6688347	IfStatement	if ( opcode -> match == 0x80002000 )		6687999	4					
ANR	6688348	Condition	opcode -> match == 0x80002000	171:14:3047:3073	6687999	0	True				
ANR	6688349	EqualityExpression	opcode -> match == 0x80002000		6687999	0		==			
ANR	6688350	PtrMemberAccess	opcode -> match		6687999	0					
ANR	6688351	Identifier	opcode		6687999	0					
ANR	6688352	Identifier	match		6687999	1					
ANR	6688353	PrimaryExpression	0x80002000		6687999	1					
ANR	6688354	ExpressionStatement	imm_added_to_rs1 = 1	173:12:3099:3119	6687999	1	True				
ANR	6688355	AssignmentExpression	imm_added_to_rs1 = 1		6687999	0		=			
ANR	6688356	Identifier	imm_added_to_rs1		6687999	0					
ANR	6688357	PrimaryExpression	1		6687999	1					
ANR	6688358	IfStatement	"if ( X_RS1 ( insn ) != X_RD ( insn ) && strchr ( opcode -> args , 'r' ) != NULL )"		6687999	5					
ANR	6688359	Condition	"X_RS1 ( insn ) != X_RD ( insn ) && strchr ( opcode -> args , 'r' ) != NULL"	177:14:3138:3217	6687999	0	True				
ANR	6688360	AndExpression	"X_RS1 ( insn ) != X_RD ( insn ) && strchr ( opcode -> args , 'r' ) != NULL"		6687999	0		&&			
ANR	6688361	EqualityExpression	X_RS1 ( insn ) != X_RD ( insn )		6687999	0		!=			
ANR	6688362	CallExpression	X_RS1 ( insn )		6687999	0					
ANR	6688363	Callee	X_RS1		6687999	0					
ANR	6688364	Identifier	X_RS1		6687999	0					
ANR	6688365	ArgumentList	insn		6687999	1					
ANR	6688366	Argument	insn		6687999	0					
ANR	6688367	Identifier	insn		6687999	0					
ANR	6688368	CallExpression	X_RD ( insn )		6687999	1					
ANR	6688369	Callee	X_RD		6687999	0					
ANR	6688370	Identifier	X_RD		6687999	0					
ANR	6688371	ArgumentList	insn		6687999	1					
ANR	6688372	Argument	insn		6687999	0					
ANR	6688373	Identifier	insn		6687999	0					
ANR	6688374	EqualityExpression	"strchr ( opcode -> args , 'r' ) != NULL"		6687999	1		!=			
ANR	6688375	CallExpression	"strchr ( opcode -> args , 'r' )"		6687999	0					
ANR	6688376	Callee	strchr		6687999	0					
ANR	6688377	Identifier	strchr		6687999	0					
ANR	6688378	ArgumentList	opcode -> args		6687999	1					
ANR	6688379	Argument	opcode -> args		6687999	0					
ANR	6688380	PtrMemberAccess	opcode -> args		6687999	0					
ANR	6688381	Identifier	opcode		6687999	0					
ANR	6688382	Identifier	args		6687999	1					
ANR	6688383	Argument	'r'		6687999	1					
ANR	6688384	PrimaryExpression	'r'		6687999	0					
ANR	6688385	Identifier	NULL		6687999	1					
ANR	6688386	ContinueStatement	continue ;	183:14:3314:3322	6687999	1	True				
ANR	6688387	IfStatement	"if ( X_RS2 ( insn ) != X_RD ( insn ) && strchr ( opcode -> args , 'O' ) != NULL )"		6687999	6					
ANR	6688388	Condition	"X_RS2 ( insn ) != X_RD ( insn ) && strchr ( opcode -> args , 'O' ) != NULL"	185:14:3339:3418	6687999	0	True				
ANR	6688389	AndExpression	"X_RS2 ( insn ) != X_RD ( insn ) && strchr ( opcode -> args , 'O' ) != NULL"		6687999	0		&&			
ANR	6688390	EqualityExpression	X_RS2 ( insn ) != X_RD ( insn )		6687999	0		!=			
ANR	6688391	CallExpression	X_RS2 ( insn )		6687999	0					
ANR	6688392	Callee	X_RS2		6687999	0					
ANR	6688393	Identifier	X_RS2		6687999	0					
ANR	6688394	ArgumentList	insn		6687999	1					
ANR	6688395	Argument	insn		6687999	0					
ANR	6688396	Identifier	insn		6687999	0					
ANR	6688397	CallExpression	X_RD ( insn )		6687999	1					
ANR	6688398	Callee	X_RD		6687999	0					
ANR	6688399	Identifier	X_RD		6687999	0					
ANR	6688400	ArgumentList	insn		6687999	1					
ANR	6688401	Argument	insn		6687999	0					
ANR	6688402	Identifier	insn		6687999	0					
ANR	6688403	EqualityExpression	"strchr ( opcode -> args , 'O' ) != NULL"		6687999	1		!=			
ANR	6688404	CallExpression	"strchr ( opcode -> args , 'O' )"		6687999	0					
ANR	6688405	Callee	strchr		6687999	0					
ANR	6688406	Identifier	strchr		6687999	0					
ANR	6688407	ArgumentList	opcode -> args		6687999	1					
ANR	6688408	Argument	opcode -> args		6687999	0					
ANR	6688409	PtrMemberAccess	opcode -> args		6687999	0					
ANR	6688410	Identifier	opcode		6687999	0					
ANR	6688411	Identifier	args		6687999	1					
ANR	6688412	Argument	'O'		6687999	1					
ANR	6688413	PrimaryExpression	'O'		6687999	0					
ANR	6688414	Identifier	NULL		6687999	1					
ANR	6688415	ContinueStatement	continue ;	191:14:3515:3523	6687999	1	True				
ANR	6688416	ExpressionStatement	"( * info -> fprintf_func ) ( stream , opcode -> name )"	195:10:3538:3582	6687999	7	True				
ANR	6688417	CallExpression	"( * info -> fprintf_func ) ( stream , opcode -> name )"		6687999	0					
ANR	6688418	Callee	* info -> fprintf_func		6687999	0					
ANR	6688419	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6688420	UnaryOperator	*		6687999	0					
ANR	6688421	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6688422	Identifier	info		6687999	0					
ANR	6688423	Identifier	fprintf_func		6687999	1					
ANR	6688424	ArgumentList	stream		6687999	1					
ANR	6688425	Argument	stream		6687999	0					
ANR	6688426	Identifier	stream		6687999	0					
ANR	6688427	Argument	opcode -> name		6687999	1					
ANR	6688428	PtrMemberAccess	opcode -> name		6687999	0					
ANR	6688429	Identifier	opcode		6687999	0					
ANR	6688430	Identifier	name		6687999	1					
ANR	6688431	CompoundStatement		199:12:3551:3564	6687999	8					
ANR	6688432	IdentifierDeclStatement	const char * s ;	201:12:3612:3625	6687999	0	True				
ANR	6688433	IdentifierDecl	* s		6687999	0					
ANR	6688434	IdentifierDeclType	const char *		6687999	0					
ANR	6688435	Identifier	s		6687999	1					
ANR	6688436	IfStatement	"if ( opcode -> args [ 0 ] != ',' )"		6687999	1					
ANR	6688437	Condition	"opcode -> args [ 0 ] != ','"	205:16:3646:3667	6687999	0	True				
ANR	6688438	EqualityExpression	"opcode -> args [ 0 ] != ','"		6687999	0		!=			
ANR	6688439	ArrayIndexing	opcode -> args [ 0 ]		6687999	0					
ANR	6688440	PtrMemberAccess	opcode -> args		6687999	0					
ANR	6688441	Identifier	opcode		6687999	0					
ANR	6688442	Identifier	args		6687999	1					
ANR	6688443	PrimaryExpression	0		6687999	1					
ANR	6688444	PrimaryExpression	"','"		6687999	1					
ANR	6688445	ExpressionStatement	"( * info -> fprintf_func ) ( stream , "" "" )"	207:14:3685:3720	6687999	1	True				
ANR	6688446	CallExpression	"( * info -> fprintf_func ) ( stream , "" "" )"		6687999	0					
ANR	6688447	Callee	* info -> fprintf_func		6687999	0					
ANR	6688448	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6688449	UnaryOperator	*		6687999	0					
ANR	6688450	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6688451	Identifier	info		6687999	0					
ANR	6688452	Identifier	fprintf_func		6687999	1					
ANR	6688453	ArgumentList	stream		6687999	1					
ANR	6688454	Argument	stream		6687999	0					
ANR	6688455	Identifier	stream		6687999	0					
ANR	6688456	Argument	""" """		6687999	1					
ANR	6688457	PrimaryExpression	""" """		6687999	0					
ANR	6688458	ForStatement	for ( s = opcode -> args ; * s != '\\0' ; ++ s )		6687999	2					
ANR	6688459	ForInit	s = opcode -> args ;	211:17:3742:3758	6687999	0	True				
ANR	6688460	AssignmentExpression	s = opcode -> args		6687999	0		=			
ANR	6688461	Identifier	s		6687999	0					
ANR	6688462	PtrMemberAccess	opcode -> args		6687999	1					
ANR	6688463	Identifier	opcode		6687999	0					
ANR	6688464	Identifier	args		6687999	1					
ANR	6688465	Condition	* s != '\\0'	211:35:3760:3769	6687999	1	True				
ANR	6688466	EqualityExpression	* s != '\\0'		6687999	0		!=			
ANR	6688467	UnaryOperationExpression	* s		6687999	0					
ANR	6688468	UnaryOperator	*		6687999	0					
ANR	6688469	Identifier	s		6687999	1					
ANR	6688470	PrimaryExpression	'\\0'		6687999	1					
ANR	6688471	UnaryExpression	++ s	211:47:3772:3774	6687999	2	True				
ANR	6688472	IncDec	++		6687999	0					
ANR	6688473	Identifier	s		6687999	1					
ANR	6688474	CompoundStatement		211:14:3731:3731	6687999	3					
ANR	6688475	WhileStatement	"while ( * s == ',' )"		6687999	0					
ANR	6688476	Condition	"* s == ','"	215:23:3818:3826	6687999	0	True				
ANR	6688477	EqualityExpression	"* s == ','"		6687999	0		==			
ANR	6688478	UnaryOperationExpression	* s		6687999	0					
ANR	6688479	UnaryOperator	*		6687999	0					
ANR	6688480	Identifier	s		6687999	1					
ANR	6688481	PrimaryExpression	"','"		6687999	1					
ANR	6688482	CompoundStatement		215:18:3787:3787	6687999	1					
ANR	6688483	ExpressionStatement	"( * info -> fprintf_func ) ( stream , "","" )"	219:20:3871:3906	6687999	0	True				
ANR	6688484	CallExpression	"( * info -> fprintf_func ) ( stream , "","" )"		6687999	0					
ANR	6688485	Callee	* info -> fprintf_func		6687999	0					
ANR	6688486	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6688487	UnaryOperator	*		6687999	0					
ANR	6688488	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6688489	Identifier	info		6687999	0					
ANR	6688490	Identifier	fprintf_func		6687999	1					
ANR	6688491	ArgumentList	stream		6687999	1					
ANR	6688492	Argument	stream		6687999	0					
ANR	6688493	Identifier	stream		6687999	0					
ANR	6688494	Argument	""","""		6687999	1					
ANR	6688495	PrimaryExpression	""","""		6687999	0					
ANR	6688496	ExpressionStatement	++ s	221:20:3929:3932	6687999	1	True				
ANR	6688497	UnaryExpression	++ s		6687999	0					
ANR	6688498	IncDec	++		6687999	0					
ANR	6688499	Identifier	s		6687999	1					
ANR	6688500	SwitchStatement	switch ( * s )		6687999	2					
ANR	6688501	Condition	* s	223:28:3963:3964	6687999	0	True				
ANR	6688502	UnaryOperationExpression	* s		6687999	0					
ANR	6688503	UnaryOperator	*		6687999	0					
ANR	6688504	Identifier	s		6687999	1					
ANR	6688505	CompoundStatement		223:22:3929:3929	6687999	1					
ANR	6688506	Label	case 'a' :	227:22:4015:4023	6687999	0	True				
ANR	6688507	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""a"" )"	229:24:4050:4085	6687999	1	True				
ANR	6688508	CallExpression	"( * info -> fprintf_func ) ( stream , ""a"" )"		6687999	0					
ANR	6688509	Callee	* info -> fprintf_func		6687999	0					
ANR	6688510	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6688511	UnaryOperator	*		6687999	0					
ANR	6688512	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6688513	Identifier	info		6687999	0					
ANR	6688514	Identifier	fprintf_func		6687999	1					
ANR	6688515	ArgumentList	stream		6687999	1					
ANR	6688516	Argument	stream		6687999	0					
ANR	6688517	Identifier	stream		6687999	0					
ANR	6688518	Argument	"""a"""		6687999	1					
ANR	6688519	PrimaryExpression	"""a"""		6687999	0					
ANR	6688520	ExpressionStatement	++ s	233:24:4182:4185	6687999	2	True				
ANR	6688521	UnaryExpression	++ s		6687999	0					
ANR	6688522	IncDec	++		6687999	0					
ANR	6688523	Identifier	s		6687999	1					
ANR	6688524	ContinueStatement	continue ;	235:24:4212:4220	6687999	3	True				
ANR	6688525	Label	case 'N' :	237:22:4245:4253	6687999	4	True				
ANR	6688526	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""pn"" )"	239:24:4280:4316	6687999	5	True				
ANR	6688527	CallExpression	"( * info -> fprintf_func ) ( stream , ""pn"" )"		6687999	0					
ANR	6688528	Callee	* info -> fprintf_func		6687999	0					
ANR	6688529	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6688530	UnaryOperator	*		6687999	0					
ANR	6688531	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6688532	Identifier	info		6687999	0					
ANR	6688533	Identifier	fprintf_func		6687999	1					
ANR	6688534	ArgumentList	stream		6687999	1					
ANR	6688535	Argument	stream		6687999	0					
ANR	6688536	Identifier	stream		6687999	0					
ANR	6688537	Argument	"""pn"""		6687999	1					
ANR	6688538	PrimaryExpression	"""pn"""		6687999	0					
ANR	6688539	ExpressionStatement	++ s	241:24:4343:4346	6687999	6	True				
ANR	6688540	UnaryExpression	++ s		6687999	0					
ANR	6688541	IncDec	++		6687999	0					
ANR	6688542	Identifier	s		6687999	1					
ANR	6688543	ContinueStatement	continue ;	243:24:4373:4381	6687999	7	True				
ANR	6688544	Label	case 'T' :	247:22:4408:4416	6687999	8	True				
ANR	6688545	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""pt"" )"	249:24:4443:4479	6687999	9	True				
ANR	6688546	CallExpression	"( * info -> fprintf_func ) ( stream , ""pt"" )"		6687999	0					
ANR	6688547	Callee	* info -> fprintf_func		6687999	0					
ANR	6688548	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6688549	UnaryOperator	*		6687999	0					
ANR	6688550	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6688551	Identifier	info		6687999	0					
ANR	6688552	Identifier	fprintf_func		6687999	1					
ANR	6688553	ArgumentList	stream		6687999	1					
ANR	6688554	Argument	stream		6687999	0					
ANR	6688555	Identifier	stream		6687999	0					
ANR	6688556	Argument	"""pt"""		6687999	1					
ANR	6688557	PrimaryExpression	"""pt"""		6687999	0					
ANR	6688558	ExpressionStatement	++ s	251:24:4506:4509	6687999	10	True				
ANR	6688559	UnaryExpression	++ s		6687999	0					
ANR	6688560	IncDec	++		6687999	0					
ANR	6688561	Identifier	s		6687999	1					
ANR	6688562	ContinueStatement	continue ;	253:24:4536:4544	6687999	11	True				
ANR	6688563	Label	default :	257:22:4571:4578	6687999	12	True				
ANR	6688564	Identifier	default		6687999	0					
ANR	6688565	BreakStatement	break ;	259:24:4605:4610	6687999	13	True				
ANR	6688566	ExpressionStatement	"( * info -> fprintf_func ) ( stream , "" "" )"	267:16:4677:4712	6687999	1	True				
ANR	6688567	CallExpression	"( * info -> fprintf_func ) ( stream , "" "" )"		6687999	0					
ANR	6688568	Callee	* info -> fprintf_func		6687999	0					
ANR	6688569	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6688570	UnaryOperator	*		6687999	0					
ANR	6688571	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6688572	Identifier	info		6687999	0					
ANR	6688573	Identifier	fprintf_func		6687999	1					
ANR	6688574	ArgumentList	stream		6687999	1					
ANR	6688575	Argument	stream		6687999	0					
ANR	6688576	Identifier	stream		6687999	0					
ANR	6688577	Argument	""" """		6687999	1					
ANR	6688578	PrimaryExpression	""" """		6687999	0					
ANR	6688579	SwitchStatement	switch ( * s )		6687999	2					
ANR	6688580	Condition	* s	271:24:4741:4742	6687999	0	True				
ANR	6688581	UnaryOperationExpression	* s		6687999	0					
ANR	6688582	UnaryOperator	*		6687999	0					
ANR	6688583	Identifier	s		6687999	1					
ANR	6688584	CompoundStatement		271:18:4703:4703	6687999	1					
ANR	6688585	Label	case '+' :	275:18:4785:4793	6687999	0	True				
ANR	6688586	ExpressionStatement	found_plus = 1	277:20:4816:4830	6687999	1	True				
ANR	6688587	AssignmentExpression	found_plus = 1		6687999	0		=			
ANR	6688588	Identifier	found_plus		6687999	0					
ANR	6688589	PrimaryExpression	1		6687999	1					
ANR	6688590	Label	default :	283:18:4895:4902	6687999	2	True				
ANR	6688591	Identifier	default		6687999	0					
ANR	6688592	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%c"" , * s )"	285:20:4925:4965	6687999	3	True				
ANR	6688593	CallExpression	"( * info -> fprintf_func ) ( stream , ""%c"" , * s )"		6687999	0					
ANR	6688594	Callee	* info -> fprintf_func		6687999	0					
ANR	6688595	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6688596	UnaryOperator	*		6687999	0					
ANR	6688597	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6688598	Identifier	info		6687999	0					
ANR	6688599	Identifier	fprintf_func		6687999	1					
ANR	6688600	ArgumentList	stream		6687999	1					
ANR	6688601	Argument	stream		6687999	0					
ANR	6688602	Identifier	stream		6687999	0					
ANR	6688603	Argument	"""%c"""		6687999	1					
ANR	6688604	PrimaryExpression	"""%c"""		6687999	0					
ANR	6688605	Argument	* s		6687999	2					
ANR	6688606	UnaryOperationExpression	* s		6687999	0					
ANR	6688607	UnaryOperator	*		6687999	0					
ANR	6688608	Identifier	s		6687999	1					
ANR	6688609	BreakStatement	break ;	287:20:4988:4993	6687999	4	True				
ANR	6688610	Label	case '#' :	291:18:5016:5024	6687999	5	True				
ANR	6688611	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""0"" )"	293:20:5047:5082	6687999	6	True				
ANR	6688612	CallExpression	"( * info -> fprintf_func ) ( stream , ""0"" )"		6687999	0					
ANR	6688613	Callee	* info -> fprintf_func		6687999	0					
ANR	6688614	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6688615	UnaryOperator	*		6687999	0					
ANR	6688616	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6688617	Identifier	info		6687999	0					
ANR	6688618	Identifier	fprintf_func		6687999	1					
ANR	6688619	ArgumentList	stream		6687999	1					
ANR	6688620	Argument	stream		6687999	0					
ANR	6688621	Identifier	stream		6687999	0					
ANR	6688622	Argument	"""0"""		6687999	1					
ANR	6688623	PrimaryExpression	"""0"""		6687999	0					
ANR	6688624	BreakStatement	break ;	295:20:5105:5110	6687999	7	True				
ANR	6688625	Statement	define	299:1:5116:5121	6687999	8	True				
ANR	6688626	Statement	reg	299:8:5123:5125	6687999	9	True				
ANR	6688627	Statement	(	299:11:5126:5126	6687999	10	True				
ANR	6688628	Statement	n	299:12:5127:5127	6687999	11	True				
ANR	6688629	Statement	)	299:13:5128:5128	6687999	12	True				
ANR	6688630	Statement	(	299:16:5131:5131	6687999	13	True				
ANR	6688631	Statement	*	299:17:5132:5132	6687999	14	True				
ANR	6688632	Statement	info	299:18:5133:5136	6687999	15	True				
ANR	6688633	Statement	->	299:22:5137:5138	6687999	16	True				
ANR	6688634	Statement	fprintf_func	299:24:5139:5150	6687999	17	True				
ANR	6688635	Statement	)	299:36:5151:5151	6687999	18	True				
ANR	6688636	Statement	(	299:38:5153:5153	6687999	19	True				
ANR	6688637	Statement	stream	299:39:5154:5159	6687999	20	True				
ANR	6688638	Statement	","	299:45:5160:5160	6687999	21	True				
ANR	6688639	Statement	"""%%%s"""	299:47:5162:5167	6687999	22	True				
ANR	6688640	Statement	","	299:53:5168:5168	6687999	23	True				
ANR	6688641	Statement	reg_names	299:55:5170:5178	6687999	24	True				
ANR	6688642	Statement	[	299:64:5179:5179	6687999	25	True				
ANR	6688643	Statement	n	299:65:5180:5180	6687999	26	True				
ANR	6688644	Statement	]	299:66:5181:5181	6687999	27	True				
ANR	6688645	Statement	)	299:67:5182:5182	6687999	28	True				
ANR	6688646	Label	case '1' :	301:18:5203:5211	6687999	29	True				
ANR	6688647	Label	case 'r' :	303:18:5232:5240	6687999	30	True				
ANR	6688648	ExpressionStatement	reg ( X_RS1 ( insn ) )	305:20:5263:5281	6687999	31	True				
ANR	6688649	CallExpression	reg ( X_RS1 ( insn ) )		6687999	0					
ANR	6688650	Callee	reg		6687999	0					
ANR	6688651	Identifier	reg		6687999	0					
ANR	6688652	ArgumentList	X_RS1 ( insn )		6687999	1					
ANR	6688653	Argument	X_RS1 ( insn )		6687999	0					
ANR	6688654	CallExpression	X_RS1 ( insn )		6687999	0					
ANR	6688655	Callee	X_RS1		6687999	0					
ANR	6688656	Identifier	X_RS1		6687999	0					
ANR	6688657	ArgumentList	insn		6687999	1					
ANR	6688658	Argument	insn		6687999	0					
ANR	6688659	Identifier	insn		6687999	0					
ANR	6688660	BreakStatement	break ;	307:20:5304:5309	6687999	32	True				
ANR	6688661	Label	case '2' :	311:18:5332:5340	6687999	33	True				
ANR	6688662	Label	case 'O' :	313:18:5361:5369	6687999	34	True				
ANR	6688663	ExpressionStatement	reg ( X_RS2 ( insn ) )	315:20:5392:5410	6687999	35	True				
ANR	6688664	CallExpression	reg ( X_RS2 ( insn ) )		6687999	0					
ANR	6688665	Callee	reg		6687999	0					
ANR	6688666	Identifier	reg		6687999	0					
ANR	6688667	ArgumentList	X_RS2 ( insn )		6687999	1					
ANR	6688668	Argument	X_RS2 ( insn )		6687999	0					
ANR	6688669	CallExpression	X_RS2 ( insn )		6687999	0					
ANR	6688670	Callee	X_RS2		6687999	0					
ANR	6688671	Identifier	X_RS2		6687999	0					
ANR	6688672	ArgumentList	insn		6687999	1					
ANR	6688673	Argument	insn		6687999	0					
ANR	6688674	Identifier	insn		6687999	0					
ANR	6688675	BreakStatement	break ;	317:20:5433:5438	6687999	36	True				
ANR	6688676	Label	case 'd' :	321:18:5461:5469	6687999	37	True				
ANR	6688677	ExpressionStatement	reg ( X_RD ( insn ) )	323:20:5492:5509	6687999	38	True				
ANR	6688678	CallExpression	reg ( X_RD ( insn ) )		6687999	0					
ANR	6688679	Callee	reg		6687999	0					
ANR	6688680	Identifier	reg		6687999	0					
ANR	6688681	ArgumentList	X_RD ( insn )		6687999	1					
ANR	6688682	Argument	X_RD ( insn )		6687999	0					
ANR	6688683	CallExpression	X_RD ( insn )		6687999	0					
ANR	6688684	Callee	X_RD		6687999	0					
ANR	6688685	Identifier	X_RD		6687999	0					
ANR	6688686	ArgumentList	insn		6687999	1					
ANR	6688687	Argument	insn		6687999	0					
ANR	6688688	Identifier	insn		6687999	0					
ANR	6688689	BreakStatement	break ;	325:20:5532:5537	6687999	39	True				
ANR	6688690	Statement	undef	327:1:5541:5545	6687999	40	True				
ANR	6688691	Statement	reg	327:8:5548:5550	6687999	41	True				
ANR	6688692	Statement	define	331:1:5556:5561	6687999	42	True				
ANR	6688693	Statement	freg	331:8:5563:5566	6687999	43	True				
ANR	6688694	Statement	(	331:12:5567:5567	6687999	44	True				
ANR	6688695	Statement	n	331:13:5568:5568	6687999	45	True				
ANR	6688696	Statement	)	331:14:5569:5569	6687999	46	True				
ANR	6688697	Statement	(	331:24:5579:5579	6687999	47	True				
ANR	6688698	Statement	*	331:25:5580:5580	6687999	48	True				
ANR	6688699	Statement	info	331:26:5581:5584	6687999	49	True				
ANR	6688700	Statement	->	331:30:5585:5586	6687999	50	True				
ANR	6688701	Statement	fprintf_func	331:32:5587:5598	6687999	51	True				
ANR	6688702	Statement	)	331:44:5599:5599	6687999	52	True				
ANR	6688703	Statement	(	331:46:5601:5601	6687999	53	True				
ANR	6688704	Statement	stream	331:47:5602:5607	6687999	54	True				
ANR	6688705	Statement	","	331:53:5608:5608	6687999	55	True				
ANR	6688706	Statement	"""%%%s"""	331:55:5610:5615	6687999	56	True				
ANR	6688707	Statement	","	331:61:5616:5616	6687999	57	True				
ANR	6688708	Statement	freg_names	331:63:5618:5627	6687999	58	True				
ANR	6688709	Statement	[	331:73:5628:5628	6687999	59	True				
ANR	6688710	Statement	n	331:74:5629:5629	6687999	60	True				
ANR	6688711	Statement	]	331:75:5630:5630	6687999	61	True				
ANR	6688712	Statement	)	331:76:5631:5631	6687999	62	True				
ANR	6688713	Statement	define	333:1:5635:5640	6687999	63	True				
ANR	6688714	Statement	fregx	333:8:5642:5646	6687999	64	True				
ANR	6688715	Statement	(	333:13:5647:5647	6687999	65	True				
ANR	6688716	Statement	n	333:14:5648:5648	6687999	66	True				
ANR	6688717	Statement	)	333:15:5649:5649	6687999	67	True				
ANR	6688718	Statement	(	333:24:5658:5658	6687999	68	True				
ANR	6688719	Statement	*	333:25:5659:5659	6687999	69	True				
ANR	6688720	Statement	info	333:26:5660:5663	6687999	70	True				
ANR	6688721	Statement	->	333:30:5664:5665	6687999	71	True				
ANR	6688722	Statement	fprintf_func	333:32:5666:5677	6687999	72	True				
ANR	6688723	Statement	)	333:44:5678:5678	6687999	73	True				
ANR	6688724	Statement	(	333:46:5680:5680	6687999	74	True				
ANR	6688725	Statement	stream	333:47:5681:5686	6687999	75	True				
ANR	6688726	Statement	","	333:53:5687:5687	6687999	76	True				
ANR	6688727	Statement	"""%%%s"""	333:55:5689:5694	6687999	77	True				
ANR	6688728	Statement	","	333:61:5695:5695	6687999	78	True				
ANR	6688729	Statement	freg_names	333:63:5697:5706	6687999	79	True				
ANR	6688730	Statement	[	333:73:5707:5707	6687999	80	True				
ANR	6688731	Statement	(	333:74:5708:5708	6687999	81	True				
ANR	6688732	Statement	(	333:75:5709:5709	6687999	82	True				
ANR	6688733	Statement	n	333:76:5710:5710	6687999	83	True				
ANR	6688734	Statement	)	333:77:5711:5711	6687999	84	True				
ANR	6688735	Statement	&	333:79:5713:5713	6687999	85	True				
ANR	6688736	Statement	~1	333:81:5715:5716	6687999	86	True				
ANR	6688737	Statement	)	333:83:5717:5717	6687999	87	True				
ANR	6688738	Statement	|	333:85:5719:5719	6687999	88	True				
ANR	6688739	Statement	(	333:87:5721:5721	6687999	89	True				
ANR	6688740	Statement	(	333:88:5722:5722	6687999	90	True				
ANR	6688741	Statement	(	333:89:5723:5723	6687999	91	True				
ANR	6688742	Statement	n	333:90:5724:5724	6687999	92	True				
ANR	6688743	Statement	)	333:91:5725:5725	6687999	93	True				
ANR	6688744	Statement	&	333:93:5727:5727	6687999	94	True				
ANR	6688745	Statement	1	333:95:5729:5729	6687999	95	True				
ANR	6688746	Statement	)	333:96:5730:5730	6687999	96	True				
ANR	6688747	Statement	<<	333:98:5732:5733	6687999	97	True				
ANR	6688748	Statement	5	333:101:5735:5735	6687999	98	True				
ANR	6688749	Statement	)	333:102:5736:5736	6687999	99	True				
ANR	6688750	Statement	]	333:103:5737:5737	6687999	100	True				
ANR	6688751	Statement	)	333:104:5738:5738	6687999	101	True				
ANR	6688752	Label	case 'e' :	335:18:5759:5767	6687999	102	True				
ANR	6688753	ExpressionStatement	freg ( X_RS1 ( insn ) )	337:20:5790:5809	6687999	103	True				
ANR	6688754	CallExpression	freg ( X_RS1 ( insn ) )		6687999	0					
ANR	6688755	Callee	freg		6687999	0					
ANR	6688756	Identifier	freg		6687999	0					
ANR	6688757	ArgumentList	X_RS1 ( insn )		6687999	1					
ANR	6688758	Argument	X_RS1 ( insn )		6687999	0					
ANR	6688759	CallExpression	X_RS1 ( insn )		6687999	0					
ANR	6688760	Callee	X_RS1		6687999	0					
ANR	6688761	Identifier	X_RS1		6687999	0					
ANR	6688762	ArgumentList	insn		6687999	1					
ANR	6688763	Argument	insn		6687999	0					
ANR	6688764	Identifier	insn		6687999	0					
ANR	6688765	BreakStatement	break ;	339:20:5832:5837	6687999	104	True				
ANR	6688766	Label	case 'v' :	341:18:5858:5866	6687999	105	True				
ANR	6688767	Label	case 'V' :	343:18:5911:5919	6687999	106	True				
ANR	6688768	ExpressionStatement	fregx ( X_RS1 ( insn ) )	345:20:5973:5993	6687999	107	True				
ANR	6688769	CallExpression	fregx ( X_RS1 ( insn ) )		6687999	0					
ANR	6688770	Callee	fregx		6687999	0					
ANR	6688771	Identifier	fregx		6687999	0					
ANR	6688772	ArgumentList	X_RS1 ( insn )		6687999	1					
ANR	6688773	Argument	X_RS1 ( insn )		6687999	0					
ANR	6688774	CallExpression	X_RS1 ( insn )		6687999	0					
ANR	6688775	Callee	X_RS1		6687999	0					
ANR	6688776	Identifier	X_RS1		6687999	0					
ANR	6688777	ArgumentList	insn		6687999	1					
ANR	6688778	Argument	insn		6687999	0					
ANR	6688779	Identifier	insn		6687999	0					
ANR	6688780	BreakStatement	break ;	347:20:6016:6021	6687999	108	True				
ANR	6688781	Label	case 'f' :	351:18:6044:6052	6687999	109	True				
ANR	6688782	ExpressionStatement	freg ( X_RS2 ( insn ) )	353:20:6075:6094	6687999	110	True				
ANR	6688783	CallExpression	freg ( X_RS2 ( insn ) )		6687999	0					
ANR	6688784	Callee	freg		6687999	0					
ANR	6688785	Identifier	freg		6687999	0					
ANR	6688786	ArgumentList	X_RS2 ( insn )		6687999	1					
ANR	6688787	Argument	X_RS2 ( insn )		6687999	0					
ANR	6688788	CallExpression	X_RS2 ( insn )		6687999	0					
ANR	6688789	Callee	X_RS2		6687999	0					
ANR	6688790	Identifier	X_RS2		6687999	0					
ANR	6688791	ArgumentList	insn		6687999	1					
ANR	6688792	Argument	insn		6687999	0					
ANR	6688793	Identifier	insn		6687999	0					
ANR	6688794	BreakStatement	break ;	355:20:6117:6122	6687999	111	True				
ANR	6688795	Label	case 'B' :	357:18:6143:6151	6687999	112	True				
ANR	6688796	Label	case 'R' :	359:18:6196:6204	6687999	113	True				
ANR	6688797	ExpressionStatement	fregx ( X_RS2 ( insn ) )	361:20:6258:6278	6687999	114	True				
ANR	6688798	CallExpression	fregx ( X_RS2 ( insn ) )		6687999	0					
ANR	6688799	Callee	fregx		6687999	0					
ANR	6688800	Identifier	fregx		6687999	0					
ANR	6688801	ArgumentList	X_RS2 ( insn )		6687999	1					
ANR	6688802	Argument	X_RS2 ( insn )		6687999	0					
ANR	6688803	CallExpression	X_RS2 ( insn )		6687999	0					
ANR	6688804	Callee	X_RS2		6687999	0					
ANR	6688805	Identifier	X_RS2		6687999	0					
ANR	6688806	ArgumentList	insn		6687999	1					
ANR	6688807	Argument	insn		6687999	0					
ANR	6688808	Identifier	insn		6687999	0					
ANR	6688809	BreakStatement	break ;	363:20:6301:6306	6687999	115	True				
ANR	6688810	Label	case 'g' :	367:18:6329:6337	6687999	116	True				
ANR	6688811	ExpressionStatement	freg ( X_RD ( insn ) )	369:20:6360:6378	6687999	117	True				
ANR	6688812	CallExpression	freg ( X_RD ( insn ) )		6687999	0					
ANR	6688813	Callee	freg		6687999	0					
ANR	6688814	Identifier	freg		6687999	0					
ANR	6688815	ArgumentList	X_RD ( insn )		6687999	1					
ANR	6688816	Argument	X_RD ( insn )		6687999	0					
ANR	6688817	CallExpression	X_RD ( insn )		6687999	0					
ANR	6688818	Callee	X_RD		6687999	0					
ANR	6688819	Identifier	X_RD		6687999	0					
ANR	6688820	ArgumentList	insn		6687999	1					
ANR	6688821	Argument	insn		6687999	0					
ANR	6688822	Identifier	insn		6687999	0					
ANR	6688823	BreakStatement	break ;	371:20:6401:6406	6687999	118	True				
ANR	6688824	Label	case 'H' :	373:18:6427:6435	6687999	119	True				
ANR	6688825	Label	case 'J' :	375:18:6480:6488	6687999	120	True				
ANR	6688826	ExpressionStatement	fregx ( X_RD ( insn ) )	377:20:6542:6561	6687999	121	True				
ANR	6688827	CallExpression	fregx ( X_RD ( insn ) )		6687999	0					
ANR	6688828	Callee	fregx		6687999	0					
ANR	6688829	Identifier	fregx		6687999	0					
ANR	6688830	ArgumentList	X_RD ( insn )		6687999	1					
ANR	6688831	Argument	X_RD ( insn )		6687999	0					
ANR	6688832	CallExpression	X_RD ( insn )		6687999	0					
ANR	6688833	Callee	X_RD		6687999	0					
ANR	6688834	Identifier	X_RD		6687999	0					
ANR	6688835	ArgumentList	insn		6687999	1					
ANR	6688836	Argument	insn		6687999	0					
ANR	6688837	Identifier	insn		6687999	0					
ANR	6688838	BreakStatement	break ;	379:20:6584:6589	6687999	122	True				
ANR	6688839	Statement	undef	381:1:6593:6597	6687999	123	True				
ANR	6688840	Statement	freg	381:8:6600:6603	6687999	124	True				
ANR	6688841	Statement	undef	383:1:6607:6611	6687999	125	True				
ANR	6688842	Statement	fregx	383:8:6614:6618	6687999	126	True				
ANR	6688843	Statement	define	387:1:6624:6629	6687999	127	True				
ANR	6688844	Statement	creg	387:8:6631:6634	6687999	128	True				
ANR	6688845	Statement	(	387:12:6635:6635	6687999	129	True				
ANR	6688846	Statement	n	387:13:6636:6636	6687999	130	True				
ANR	6688847	Statement	)	387:14:6637:6637	6687999	131	True				
ANR	6688848	Statement	(	387:16:6639:6639	6687999	132	True				
ANR	6688849	Statement	*	387:17:6640:6640	6687999	133	True				
ANR	6688850	Statement	info	387:18:6641:6644	6687999	134	True				
ANR	6688851	Statement	->	387:22:6645:6646	6687999	135	True				
ANR	6688852	Statement	fprintf_func	387:24:6647:6658	6687999	136	True				
ANR	6688853	Statement	)	387:36:6659:6659	6687999	137	True				
ANR	6688854	Statement	(	387:38:6661:6661	6687999	138	True				
ANR	6688855	Statement	stream	387:39:6662:6667	6687999	139	True				
ANR	6688856	Statement	","	387:45:6668:6668	6687999	140	True				
ANR	6688857	Statement	"""%%c%u"""	387:47:6670:6676	6687999	141	True				
ANR	6688858	Statement	","	387:54:6677:6677	6687999	142	True				
ANR	6688859	Statement	(	387:56:6679:6679	6687999	143	True				
ANR	6688860	Statement	unsigned	387:57:6680:6687	6687999	144	True				
ANR	6688861	Statement	int	387:66:6689:6691	6687999	145	True				
ANR	6688862	Statement	)	387:69:6692:6692	6687999	146	True				
ANR	6688863	Statement	(	387:71:6694:6694	6687999	147	True				
ANR	6688864	Statement	n	387:72:6695:6695	6687999	148	True				
ANR	6688865	Statement	)	387:73:6696:6696	6687999	149	True				
ANR	6688866	Statement	)	387:74:6697:6697	6687999	150	True				
ANR	6688867	Label	case 'b' :	389:18:6718:6726	6687999	151	True				
ANR	6688868	ExpressionStatement	creg ( X_RS1 ( insn ) )	391:20:6749:6768	6687999	152	True				
ANR	6688869	CallExpression	creg ( X_RS1 ( insn ) )		6687999	0					
ANR	6688870	Callee	creg		6687999	0					
ANR	6688871	Identifier	creg		6687999	0					
ANR	6688872	ArgumentList	X_RS1 ( insn )		6687999	1					
ANR	6688873	Argument	X_RS1 ( insn )		6687999	0					
ANR	6688874	CallExpression	X_RS1 ( insn )		6687999	0					
ANR	6688875	Callee	X_RS1		6687999	0					
ANR	6688876	Identifier	X_RS1		6687999	0					
ANR	6688877	ArgumentList	insn		6687999	1					
ANR	6688878	Argument	insn		6687999	0					
ANR	6688879	Identifier	insn		6687999	0					
ANR	6688880	BreakStatement	break ;	393:20:6791:6796	6687999	153	True				
ANR	6688881	Label	case 'c' :	397:18:6819:6827	6687999	154	True				
ANR	6688882	ExpressionStatement	creg ( X_RS2 ( insn ) )	399:20:6850:6869	6687999	155	True				
ANR	6688883	CallExpression	creg ( X_RS2 ( insn ) )		6687999	0					
ANR	6688884	Callee	creg		6687999	0					
ANR	6688885	Identifier	creg		6687999	0					
ANR	6688886	ArgumentList	X_RS2 ( insn )		6687999	1					
ANR	6688887	Argument	X_RS2 ( insn )		6687999	0					
ANR	6688888	CallExpression	X_RS2 ( insn )		6687999	0					
ANR	6688889	Callee	X_RS2		6687999	0					
ANR	6688890	Identifier	X_RS2		6687999	0					
ANR	6688891	ArgumentList	insn		6687999	1					
ANR	6688892	Argument	insn		6687999	0					
ANR	6688893	Identifier	insn		6687999	0					
ANR	6688894	BreakStatement	break ;	401:20:6892:6897	6687999	156	True				
ANR	6688895	Label	case 'D' :	405:18:6920:6928	6687999	157	True				
ANR	6688896	ExpressionStatement	creg ( X_RD ( insn ) )	407:20:6951:6969	6687999	158	True				
ANR	6688897	CallExpression	creg ( X_RD ( insn ) )		6687999	0					
ANR	6688898	Callee	creg		6687999	0					
ANR	6688899	Identifier	creg		6687999	0					
ANR	6688900	ArgumentList	X_RD ( insn )		6687999	1					
ANR	6688901	Argument	X_RD ( insn )		6687999	0					
ANR	6688902	CallExpression	X_RD ( insn )		6687999	0					
ANR	6688903	Callee	X_RD		6687999	0					
ANR	6688904	Identifier	X_RD		6687999	0					
ANR	6688905	ArgumentList	insn		6687999	1					
ANR	6688906	Argument	insn		6687999	0					
ANR	6688907	Identifier	insn		6687999	0					
ANR	6688908	BreakStatement	break ;	409:20:6992:6997	6687999	159	True				
ANR	6688909	Statement	undef	411:1:7001:7005	6687999	160	True				
ANR	6688910	Statement	creg	411:8:7008:7011	6687999	161	True				
ANR	6688911	Label	case 'h' :	415:18:7034:7042	6687999	162	True				
ANR	6688912	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%hi(%#x)"" , ( ( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( insn ) << 10 ) ) )"	417:20:7065:7253	6687999	163	True				
ANR	6688913	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%hi(%#x)"" , ( ( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( insn ) << 10 ) ) )"		6687999	0					
ANR	6688914	Callee	* info -> fprintf_func		6687999	0					
ANR	6688915	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6688916	UnaryOperator	*		6687999	0					
ANR	6688917	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6688918	Identifier	info		6687999	0					
ANR	6688919	Identifier	fprintf_func		6687999	1					
ANR	6688920	ArgumentList	stream		6687999	1					
ANR	6688921	Argument	stream		6687999	0					
ANR	6688922	Identifier	stream		6687999	0					
ANR	6688923	Argument	"""%%hi(%#x)"""		6687999	1					
ANR	6688924	PrimaryExpression	"""%%hi(%#x)"""		6687999	0					
ANR	6688925	Argument	( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( insn ) << 10 )		6687999	2					
ANR	6688926	BitAndExpression	( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( insn ) << 10 )		6687999	0		&			
ANR	6688927	CastExpression	( unsigned ) 0xFFFFFFFF		6687999	0					
ANR	6688928	CastTarget	unsigned		6687999	0					
ANR	6688929	PrimaryExpression	0xFFFFFFFF		6687999	1					
ANR	6688930	ShiftExpression	( int ) X_IMM22 ( insn ) << 10		6687999	1		<<			
ANR	6688931	CastExpression	( int ) X_IMM22 ( insn )		6687999	0					
ANR	6688932	CastTarget	int		6687999	0					
ANR	6688933	CallExpression	X_IMM22 ( insn )		6687999	1					
ANR	6688934	Callee	X_IMM22		6687999	0					
ANR	6688935	Identifier	X_IMM22		6687999	0					
ANR	6688936	ArgumentList	insn		6687999	1					
ANR	6688937	Argument	insn		6687999	0					
ANR	6688938	Identifier	insn		6687999	0					
ANR	6688939	PrimaryExpression	10		6687999	1					
ANR	6688940	BreakStatement	break ;	423:20:7276:7281	6687999	164	True				
ANR	6688941	Label	case 'i' :	427:18:7304:7312	6687999	165	True				
ANR	6688942	Label	case 'I' :	429:18:7362:7370	6687999	166	True				
ANR	6688943	Label	case 'j' :	431:18:7420:7428	6687999	167	True				
ANR	6688944	CompoundStatement		433:22:7444:7451	6687999	168					
ANR	6688945	IdentifierDeclStatement	int imm ;	435:22:7505:7512	6687999	0	True				
ANR	6688946	IdentifierDecl	imm		6687999	0					
ANR	6688947	IdentifierDeclType	int		6687999	0					
ANR	6688948	Identifier	imm		6687999	1					
ANR	6688949	IfStatement	if ( * s == 'i' )		6687999	1					
ANR	6688950	Condition	* s == 'i'	439:26:7543:7551	6687999	0	True				
ANR	6688951	EqualityExpression	* s == 'i'		6687999	0		==			
ANR	6688952	UnaryOperationExpression	* s		6687999	0					
ANR	6688953	UnaryOperator	*		6687999	0					
ANR	6688954	Identifier	s		6687999	1					
ANR	6688955	PrimaryExpression	'i'		6687999	1					
ANR	6688956	ExpressionStatement	"imm = X_SIMM ( insn , 13 )"	441:24:7579:7602	6687999	1	True				
ANR	6688957	AssignmentExpression	"imm = X_SIMM ( insn , 13 )"		6687999	0		=			
ANR	6688958	Identifier	imm		6687999	0					
ANR	6688959	CallExpression	"X_SIMM ( insn , 13 )"		6687999	1					
ANR	6688960	Callee	X_SIMM		6687999	0					
ANR	6688961	Identifier	X_SIMM		6687999	0					
ANR	6688962	ArgumentList	insn		6687999	1					
ANR	6688963	Argument	insn		6687999	0					
ANR	6688964	Identifier	insn		6687999	0					
ANR	6688965	Argument	13		6687999	1					
ANR	6688966	PrimaryExpression	13		6687999	0					
ANR	6688967	ElseStatement	else		6687999	0					
ANR	6688968	IfStatement	if ( * s == 'I' )		6687999	0					
ANR	6688969	Condition	* s == 'I'	443:31:7636:7644	6687999	0	True				
ANR	6688970	EqualityExpression	* s == 'I'		6687999	0		==			
ANR	6688971	UnaryOperationExpression	* s		6687999	0					
ANR	6688972	UnaryOperator	*		6687999	0					
ANR	6688973	Identifier	s		6687999	1					
ANR	6688974	PrimaryExpression	'I'		6687999	1					
ANR	6688975	ExpressionStatement	"imm = X_SIMM ( insn , 11 )"	445:24:7672:7695	6687999	1	True				
ANR	6688976	AssignmentExpression	"imm = X_SIMM ( insn , 11 )"		6687999	0		=			
ANR	6688977	Identifier	imm		6687999	0					
ANR	6688978	CallExpression	"X_SIMM ( insn , 11 )"		6687999	1					
ANR	6688979	Callee	X_SIMM		6687999	0					
ANR	6688980	Identifier	X_SIMM		6687999	0					
ANR	6688981	ArgumentList	insn		6687999	1					
ANR	6688982	Argument	insn		6687999	0					
ANR	6688983	Identifier	insn		6687999	0					
ANR	6688984	Argument	11		6687999	1					
ANR	6688985	PrimaryExpression	11		6687999	0					
ANR	6688986	ElseStatement	else		6687999	0					
ANR	6688987	ExpressionStatement	"imm = X_SIMM ( insn , 10 )"	449:24:7750:7773	6687999	0	True				
ANR	6688988	AssignmentExpression	"imm = X_SIMM ( insn , 10 )"		6687999	0		=			
ANR	6688989	Identifier	imm		6687999	0					
ANR	6688990	CallExpression	"X_SIMM ( insn , 10 )"		6687999	1					
ANR	6688991	Callee	X_SIMM		6687999	0					
ANR	6688992	Identifier	X_SIMM		6687999	0					
ANR	6688993	ArgumentList	insn		6687999	1					
ANR	6688994	Argument	insn		6687999	0					
ANR	6688995	Identifier	insn		6687999	0					
ANR	6688996	Argument	10		6687999	1					
ANR	6688997	PrimaryExpression	10		6687999	0					
ANR	6688998	IfStatement	if ( found_plus )		6687999	2					
ANR	6688999	Condition	found_plus	467:26:8171:8180	6687999	0	True				
ANR	6689000	Identifier	found_plus		6687999	0					
ANR	6689001	ExpressionStatement	imm_added_to_rs1 = 1	469:24:8208:8228	6687999	1	True				
ANR	6689002	AssignmentExpression	imm_added_to_rs1 = 1		6687999	0		=			
ANR	6689003	Identifier	imm_added_to_rs1		6687999	0					
ANR	6689004	PrimaryExpression	1		6687999	1					
ANR	6689005	IfStatement	if ( imm <= 9 )		6687999	3					
ANR	6689006	Condition	imm <= 9	473:26:8259:8266	6687999	0	True				
ANR	6689007	RelationalExpression	imm <= 9		6687999	0		<=			
ANR	6689008	Identifier	imm		6687999	0					
ANR	6689009	PrimaryExpression	9		6687999	1					
ANR	6689010	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%d"" , imm )"	475:24:8294:8335	6687999	1	True				
ANR	6689011	CallExpression	"( * info -> fprintf_func ) ( stream , ""%d"" , imm )"		6687999	0					
ANR	6689012	Callee	* info -> fprintf_func		6687999	0					
ANR	6689013	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689014	UnaryOperator	*		6687999	0					
ANR	6689015	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689016	Identifier	info		6687999	0					
ANR	6689017	Identifier	fprintf_func		6687999	1					
ANR	6689018	ArgumentList	stream		6687999	1					
ANR	6689019	Argument	stream		6687999	0					
ANR	6689020	Identifier	stream		6687999	0					
ANR	6689021	Argument	"""%d"""		6687999	1					
ANR	6689022	PrimaryExpression	"""%d"""		6687999	0					
ANR	6689023	Argument	imm		6687999	2					
ANR	6689024	Identifier	imm		6687999	0					
ANR	6689025	ElseStatement	else		6687999	0					
ANR	6689026	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%#x"" , imm )"	479:24:8390:8432	6687999	0	True				
ANR	6689027	CallExpression	"( * info -> fprintf_func ) ( stream , ""%#x"" , imm )"		6687999	0					
ANR	6689028	Callee	* info -> fprintf_func		6687999	0					
ANR	6689029	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689030	UnaryOperator	*		6687999	0					
ANR	6689031	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689032	Identifier	info		6687999	0					
ANR	6689033	Identifier	fprintf_func		6687999	1					
ANR	6689034	ArgumentList	stream		6687999	1					
ANR	6689035	Argument	stream		6687999	0					
ANR	6689036	Identifier	stream		6687999	0					
ANR	6689037	Argument	"""%#x"""		6687999	1					
ANR	6689038	PrimaryExpression	"""%#x"""		6687999	0					
ANR	6689039	Argument	imm		6687999	2					
ANR	6689040	Identifier	imm		6687999	0					
ANR	6689041	BreakStatement	break ;	483:20:8478:8483	6687999	169	True				
ANR	6689042	Label	case 'X' :	487:18:8506:8514	6687999	170	True				
ANR	6689043	Label	case 'Y' :	489:18:8572:8580	6687999	171	True				
ANR	6689044	CompoundStatement		491:22:8604:8645	6687999	172					
ANR	6689045	IdentifierDeclStatement	"int imm = X_IMM ( insn , * s == 'X' ? 5 : 6 ) ;"	493:22:8665:8706	6687999	0	True				
ANR	6689046	IdentifierDecl	"imm = X_IMM ( insn , * s == 'X' ? 5 : 6 )"		6687999	0					
ANR	6689047	IdentifierDeclType	int		6687999	0					
ANR	6689048	Identifier	imm		6687999	1					
ANR	6689049	AssignmentExpression	"imm = X_IMM ( insn , * s == 'X' ? 5 : 6 )"		6687999	2		=			
ANR	6689050	Identifier	imm		6687999	0					
ANR	6689051	CallExpression	"X_IMM ( insn , * s == 'X' ? 5 : 6 )"		6687999	1					
ANR	6689052	Callee	X_IMM		6687999	0					
ANR	6689053	Identifier	X_IMM		6687999	0					
ANR	6689054	ArgumentList	insn		6687999	1					
ANR	6689055	Argument	insn		6687999	0					
ANR	6689056	Identifier	insn		6687999	0					
ANR	6689057	Argument	* s == 'X' ? 5 : 6		6687999	1					
ANR	6689058	ConditionalExpression	* s == 'X' ? 5 : 6		6687999	0					
ANR	6689059	Condition	* s == 'X'		6687999	0					
ANR	6689060	EqualityExpression	* s == 'X'		6687999	0		==			
ANR	6689061	UnaryOperationExpression	* s		6687999	0					
ANR	6689062	UnaryOperator	*		6687999	0					
ANR	6689063	Identifier	s		6687999	1					
ANR	6689064	PrimaryExpression	'X'		6687999	1					
ANR	6689065	PrimaryExpression	5		6687999	1					
ANR	6689066	PrimaryExpression	6		6687999	2					
ANR	6689067	IfStatement	if ( imm <= 9 )		6687999	1					
ANR	6689068	Condition	imm <= 9	497:26:8737:8744	6687999	0	True				
ANR	6689069	RelationalExpression	imm <= 9		6687999	0		<=			
ANR	6689070	Identifier	imm		6687999	0					
ANR	6689071	PrimaryExpression	9		6687999	1					
ANR	6689072	ExpressionStatement	"( info -> fprintf_func ) ( stream , ""%d"" , imm )"	499:24:8772:8812	6687999	1	True				
ANR	6689073	CallExpression	"( info -> fprintf_func ) ( stream , ""%d"" , imm )"		6687999	0					
ANR	6689074	Callee	info -> fprintf_func		6687999	0					
ANR	6689075	PtrMemberAccess	info -> fprintf_func		6687999	0					
ANR	6689076	Identifier	info		6687999	0					
ANR	6689077	Identifier	fprintf_func		6687999	1					
ANR	6689078	ArgumentList	stream		6687999	1					
ANR	6689079	Argument	stream		6687999	0					
ANR	6689080	Identifier	stream		6687999	0					
ANR	6689081	Argument	"""%d"""		6687999	1					
ANR	6689082	PrimaryExpression	"""%d"""		6687999	0					
ANR	6689083	Argument	imm		6687999	2					
ANR	6689084	Identifier	imm		6687999	0					
ANR	6689085	ElseStatement	else		6687999	0					
ANR	6689086	ExpressionStatement	"( info -> fprintf_func ) ( stream , ""%#x"" , ( unsigned ) imm )"	503:24:8867:8919	6687999	0	True				
ANR	6689087	CallExpression	"( info -> fprintf_func ) ( stream , ""%#x"" , ( unsigned ) imm )"		6687999	0					
ANR	6689088	Callee	info -> fprintf_func		6687999	0					
ANR	6689089	PtrMemberAccess	info -> fprintf_func		6687999	0					
ANR	6689090	Identifier	info		6687999	0					
ANR	6689091	Identifier	fprintf_func		6687999	1					
ANR	6689092	ArgumentList	stream		6687999	1					
ANR	6689093	Argument	stream		6687999	0					
ANR	6689094	Identifier	stream		6687999	0					
ANR	6689095	Argument	"""%#x"""		6687999	1					
ANR	6689096	PrimaryExpression	"""%#x"""		6687999	0					
ANR	6689097	Argument	( unsigned ) imm		6687999	2					
ANR	6689098	CastExpression	( unsigned ) imm		6687999	0					
ANR	6689099	CastTarget	unsigned		6687999	0					
ANR	6689100	Identifier	imm		6687999	1					
ANR	6689101	BreakStatement	break ;	507:20:8965:8970	6687999	173	True				
ANR	6689102	Label	case '3' :	511:18:8993:9001	6687999	174	True				
ANR	6689103	ExpressionStatement	"( info -> fprintf_func ) ( stream , ""%ld"" , X_IMM ( insn , 3 ) )"	513:20:9024:9077	6687999	175	True				
ANR	6689104	CallExpression	"( info -> fprintf_func ) ( stream , ""%ld"" , X_IMM ( insn , 3 ) )"		6687999	0					
ANR	6689105	Callee	info -> fprintf_func		6687999	0					
ANR	6689106	PtrMemberAccess	info -> fprintf_func		6687999	0					
ANR	6689107	Identifier	info		6687999	0					
ANR	6689108	Identifier	fprintf_func		6687999	1					
ANR	6689109	ArgumentList	stream		6687999	1					
ANR	6689110	Argument	stream		6687999	0					
ANR	6689111	Identifier	stream		6687999	0					
ANR	6689112	Argument	"""%ld"""		6687999	1					
ANR	6689113	PrimaryExpression	"""%ld"""		6687999	0					
ANR	6689114	Argument	"X_IMM ( insn , 3 )"		6687999	2					
ANR	6689115	CallExpression	"X_IMM ( insn , 3 )"		6687999	0					
ANR	6689116	Callee	X_IMM		6687999	0					
ANR	6689117	Identifier	X_IMM		6687999	0					
ANR	6689118	ArgumentList	insn		6687999	1					
ANR	6689119	Argument	insn		6687999	0					
ANR	6689120	Identifier	insn		6687999	0					
ANR	6689121	Argument	3		6687999	1					
ANR	6689122	PrimaryExpression	3		6687999	0					
ANR	6689123	BreakStatement	break ;	515:20:9100:9105	6687999	176	True				
ANR	6689124	Label	case 'K' :	519:18:9128:9136	6687999	177	True				
ANR	6689125	CompoundStatement		525:22:9230:9246	6687999	178					
ANR	6689126	IdentifierDeclStatement	int mask = X_MEMBAR ( insn ) ;	523:22:9184:9210	6687999	0	True				
ANR	6689127	IdentifierDecl	mask = X_MEMBAR ( insn )		6687999	0					
ANR	6689128	IdentifierDeclType	int		6687999	0					
ANR	6689129	Identifier	mask		6687999	1					
ANR	6689130	AssignmentExpression	mask = X_MEMBAR ( insn )		6687999	2		=			
ANR	6689131	Identifier	mask		6687999	0					
ANR	6689132	CallExpression	X_MEMBAR ( insn )		6687999	1					
ANR	6689133	Callee	X_MEMBAR		6687999	0					
ANR	6689134	Identifier	X_MEMBAR		6687999	0					
ANR	6689135	ArgumentList	insn		6687999	1					
ANR	6689136	Argument	insn		6687999	0					
ANR	6689137	Identifier	insn		6687999	0					
ANR	6689138	IdentifierDeclStatement	"int bit = 0x40 , printed_one = 0 ;"	525:22:9235:9266	6687999	1	True				
ANR	6689139	IdentifierDecl	bit = 0x40		6687999	0					
ANR	6689140	IdentifierDeclType	int		6687999	0					
ANR	6689141	Identifier	bit		6687999	1					
ANR	6689142	AssignmentExpression	bit = 0x40		6687999	2		=			
ANR	6689143	Identifier	bit		6687999	0					
ANR	6689144	PrimaryExpression	0x40		6687999	1					
ANR	6689145	IdentifierDecl	printed_one = 0		6687999	1					
ANR	6689146	IdentifierDeclType	int		6687999	0					
ANR	6689147	Identifier	printed_one		6687999	1					
ANR	6689148	AssignmentExpression	printed_one = 0		6687999	2		=			
ANR	6689149	Identifier	printed_one		6687999	0					
ANR	6689150	PrimaryExpression	0		6687999	1					
ANR	6689151	IdentifierDeclStatement	const char * name ;	527:22:9291:9307	6687999	2	True				
ANR	6689152	IdentifierDecl	* name		6687999	0					
ANR	6689153	IdentifierDeclType	const char *		6687999	0					
ANR	6689154	Identifier	name		6687999	1					
ANR	6689155	IfStatement	if ( mask == 0 )		6687999	3					
ANR	6689156	Condition	mask == 0	531:26:9338:9346	6687999	0	True				
ANR	6689157	EqualityExpression	mask == 0		6687999	0		==			
ANR	6689158	Identifier	mask		6687999	0					
ANR	6689159	PrimaryExpression	0		6687999	1					
ANR	6689160	ExpressionStatement	"( info -> fprintf_func ) ( stream , ""0"" )"	533:24:9374:9408	6687999	1	True				
ANR	6689161	CallExpression	"( info -> fprintf_func ) ( stream , ""0"" )"		6687999	0					
ANR	6689162	Callee	info -> fprintf_func		6687999	0					
ANR	6689163	PtrMemberAccess	info -> fprintf_func		6687999	0					
ANR	6689164	Identifier	info		6687999	0					
ANR	6689165	Identifier	fprintf_func		6687999	1					
ANR	6689166	ArgumentList	stream		6687999	1					
ANR	6689167	Argument	stream		6687999	0					
ANR	6689168	Identifier	stream		6687999	0					
ANR	6689169	Argument	"""0"""		6687999	1					
ANR	6689170	PrimaryExpression	"""0"""		6687999	0					
ANR	6689171	ElseStatement	else		6687999	0					
ANR	6689172	WhileStatement	while ( bit )		6687999	0					
ANR	6689173	Condition	bit	537:31:9470:9472	6687999	0	True				
ANR	6689174	Identifier	bit		6687999	0					
ANR	6689175	CompoundStatement		537:26:9441:9441	6687999	1					
ANR	6689176	IfStatement	if ( mask & bit )		6687999	0					
ANR	6689177	Condition	mask & bit	541:32:9537:9546	6687999	0	True				
ANR	6689178	BitAndExpression	mask & bit		6687999	0		&			
ANR	6689179	Identifier	mask		6687999	0					
ANR	6689180	Identifier	bit		6687999	1					
ANR	6689181	CompoundStatement		541:30:9519:9519	6687999	1					
ANR	6689182	IfStatement	if ( printed_one )		6687999	0					
ANR	6689183	Condition	printed_one	545:36:9619:9629	6687999	0	True				
ANR	6689184	Identifier	printed_one		6687999	0					
ANR	6689185	ExpressionStatement	"( info -> fprintf_func ) ( stream , ""|"" )"	547:34:9667:9701	6687999	1	True				
ANR	6689186	CallExpression	"( info -> fprintf_func ) ( stream , ""|"" )"		6687999	0					
ANR	6689187	Callee	info -> fprintf_func		6687999	0					
ANR	6689188	PtrMemberAccess	info -> fprintf_func		6687999	0					
ANR	6689189	Identifier	info		6687999	0					
ANR	6689190	Identifier	fprintf_func		6687999	1					
ANR	6689191	ArgumentList	stream		6687999	1					
ANR	6689192	Argument	stream		6687999	0					
ANR	6689193	Identifier	stream		6687999	0					
ANR	6689194	Argument	"""|"""		6687999	1					
ANR	6689195	PrimaryExpression	"""|"""		6687999	0					
ANR	6689196	ExpressionStatement	name = sparc_decode_membar ( bit )	549:32:9736:9768	6687999	1	True				
ANR	6689197	AssignmentExpression	name = sparc_decode_membar ( bit )		6687999	0		=			
ANR	6689198	Identifier	name		6687999	0					
ANR	6689199	CallExpression	sparc_decode_membar ( bit )		6687999	1					
ANR	6689200	Callee	sparc_decode_membar		6687999	0					
ANR	6689201	Identifier	sparc_decode_membar		6687999	0					
ANR	6689202	ArgumentList	bit		6687999	1					
ANR	6689203	Argument	bit		6687999	0					
ANR	6689204	Identifier	bit		6687999	0					
ANR	6689205	ExpressionStatement	"( info -> fprintf_func ) ( stream , ""%s"" , name )"	551:32:9803:9844	6687999	2	True				
ANR	6689206	CallExpression	"( info -> fprintf_func ) ( stream , ""%s"" , name )"		6687999	0					
ANR	6689207	Callee	info -> fprintf_func		6687999	0					
ANR	6689208	PtrMemberAccess	info -> fprintf_func		6687999	0					
ANR	6689209	Identifier	info		6687999	0					
ANR	6689210	Identifier	fprintf_func		6687999	1					
ANR	6689211	ArgumentList	stream		6687999	1					
ANR	6689212	Argument	stream		6687999	0					
ANR	6689213	Identifier	stream		6687999	0					
ANR	6689214	Argument	"""%s"""		6687999	1					
ANR	6689215	PrimaryExpression	"""%s"""		6687999	0					
ANR	6689216	Argument	name		6687999	2					
ANR	6689217	Identifier	name		6687999	0					
ANR	6689218	ExpressionStatement	printed_one = 1	553:32:9879:9894	6687999	3	True				
ANR	6689219	AssignmentExpression	printed_one = 1		6687999	0		=			
ANR	6689220	Identifier	printed_one		6687999	0					
ANR	6689221	PrimaryExpression	1		6687999	1					
ANR	6689222	ExpressionStatement	bit >>= 1	557:28:9958:9967	6687999	1	True				
ANR	6689223	AssignmentExpression	bit >>= 1		6687999	0		>>=			
ANR	6689224	Identifier	bit		6687999	0					
ANR	6689225	PrimaryExpression	1		6687999	1					
ANR	6689226	BreakStatement	break ;	561:22:10021:10026	6687999	4	True				
ANR	6689227	Label	case 'k' :	567:18:10072:10080	6687999	179	True				
ANR	6689228	ExpressionStatement	"info -> target = memaddr + SEX ( X_DISP16 ( insn ) , 16 ) * 4"	569:20:10103:10157	6687999	180	True				
ANR	6689229	AssignmentExpression	"info -> target = memaddr + SEX ( X_DISP16 ( insn ) , 16 ) * 4"		6687999	0		=			
ANR	6689230	PtrMemberAccess	info -> target		6687999	0					
ANR	6689231	Identifier	info		6687999	0					
ANR	6689232	Identifier	target		6687999	1					
ANR	6689233	AdditiveExpression	"memaddr + SEX ( X_DISP16 ( insn ) , 16 ) * 4"		6687999	1		+			
ANR	6689234	Identifier	memaddr		6687999	0					
ANR	6689235	MultiplicativeExpression	"SEX ( X_DISP16 ( insn ) , 16 ) * 4"		6687999	1		*			
ANR	6689236	CallExpression	"SEX ( X_DISP16 ( insn ) , 16 )"		6687999	0					
ANR	6689237	Callee	SEX		6687999	0					
ANR	6689238	Identifier	SEX		6687999	0					
ANR	6689239	ArgumentList	X_DISP16 ( insn )		6687999	1					
ANR	6689240	Argument	X_DISP16 ( insn )		6687999	0					
ANR	6689241	CallExpression	X_DISP16 ( insn )		6687999	0					
ANR	6689242	Callee	X_DISP16		6687999	0					
ANR	6689243	Identifier	X_DISP16		6687999	0					
ANR	6689244	ArgumentList	insn		6687999	1					
ANR	6689245	Argument	insn		6687999	0					
ANR	6689246	Identifier	insn		6687999	0					
ANR	6689247	Argument	16		6687999	1					
ANR	6689248	PrimaryExpression	16		6687999	0					
ANR	6689249	PrimaryExpression	4		6687999	1					
ANR	6689250	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	571:20:10180:10228	6687999	181	True				
ANR	6689251	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		6687999	0					
ANR	6689252	Callee	* info -> print_address_func		6687999	0					
ANR	6689253	UnaryOperationExpression	* info -> print_address_func		6687999	0					
ANR	6689254	UnaryOperator	*		6687999	0					
ANR	6689255	PtrMemberAccess	info -> print_address_func		6687999	1					
ANR	6689256	Identifier	info		6687999	0					
ANR	6689257	Identifier	print_address_func		6687999	1					
ANR	6689258	ArgumentList	info -> target		6687999	1					
ANR	6689259	Argument	info -> target		6687999	0					
ANR	6689260	PtrMemberAccess	info -> target		6687999	0					
ANR	6689261	Identifier	info		6687999	0					
ANR	6689262	Identifier	target		6687999	1					
ANR	6689263	Argument	info		6687999	1					
ANR	6689264	Identifier	info		6687999	0					
ANR	6689265	BreakStatement	break ;	573:20:10251:10256	6687999	182	True				
ANR	6689266	Label	case 'G' :	577:18:10279:10287	6687999	183	True				
ANR	6689267	ExpressionStatement	"info -> target = memaddr + SEX ( X_DISP19 ( insn ) , 19 ) * 4"	579:20:10310:10364	6687999	184	True				
ANR	6689268	AssignmentExpression	"info -> target = memaddr + SEX ( X_DISP19 ( insn ) , 19 ) * 4"		6687999	0		=			
ANR	6689269	PtrMemberAccess	info -> target		6687999	0					
ANR	6689270	Identifier	info		6687999	0					
ANR	6689271	Identifier	target		6687999	1					
ANR	6689272	AdditiveExpression	"memaddr + SEX ( X_DISP19 ( insn ) , 19 ) * 4"		6687999	1		+			
ANR	6689273	Identifier	memaddr		6687999	0					
ANR	6689274	MultiplicativeExpression	"SEX ( X_DISP19 ( insn ) , 19 ) * 4"		6687999	1		*			
ANR	6689275	CallExpression	"SEX ( X_DISP19 ( insn ) , 19 )"		6687999	0					
ANR	6689276	Callee	SEX		6687999	0					
ANR	6689277	Identifier	SEX		6687999	0					
ANR	6689278	ArgumentList	X_DISP19 ( insn )		6687999	1					
ANR	6689279	Argument	X_DISP19 ( insn )		6687999	0					
ANR	6689280	CallExpression	X_DISP19 ( insn )		6687999	0					
ANR	6689281	Callee	X_DISP19		6687999	0					
ANR	6689282	Identifier	X_DISP19		6687999	0					
ANR	6689283	ArgumentList	insn		6687999	1					
ANR	6689284	Argument	insn		6687999	0					
ANR	6689285	Identifier	insn		6687999	0					
ANR	6689286	Argument	19		6687999	1					
ANR	6689287	PrimaryExpression	19		6687999	0					
ANR	6689288	PrimaryExpression	4		6687999	1					
ANR	6689289	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	581:20:10387:10435	6687999	185	True				
ANR	6689290	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		6687999	0					
ANR	6689291	Callee	* info -> print_address_func		6687999	0					
ANR	6689292	UnaryOperationExpression	* info -> print_address_func		6687999	0					
ANR	6689293	UnaryOperator	*		6687999	0					
ANR	6689294	PtrMemberAccess	info -> print_address_func		6687999	1					
ANR	6689295	Identifier	info		6687999	0					
ANR	6689296	Identifier	print_address_func		6687999	1					
ANR	6689297	ArgumentList	info -> target		6687999	1					
ANR	6689298	Argument	info -> target		6687999	0					
ANR	6689299	PtrMemberAccess	info -> target		6687999	0					
ANR	6689300	Identifier	info		6687999	0					
ANR	6689301	Identifier	target		6687999	1					
ANR	6689302	Argument	info		6687999	1					
ANR	6689303	Identifier	info		6687999	0					
ANR	6689304	BreakStatement	break ;	583:20:10458:10463	6687999	186	True				
ANR	6689305	Label	case '6' :	587:18:10486:10494	6687999	187	True				
ANR	6689306	Label	case '7' :	589:18:10515:10523	6687999	188	True				
ANR	6689307	Label	case '8' :	591:18:10544:10552	6687999	189	True				
ANR	6689308	Label	case '9' :	593:18:10573:10581	6687999	190	True				
ANR	6689309	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%fcc%c"" , * s - '6' + '0' )"	595:20:10604:10661	6687999	191	True				
ANR	6689310	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%fcc%c"" , * s - '6' + '0' )"		6687999	0					
ANR	6689311	Callee	* info -> fprintf_func		6687999	0					
ANR	6689312	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689313	UnaryOperator	*		6687999	0					
ANR	6689314	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689315	Identifier	info		6687999	0					
ANR	6689316	Identifier	fprintf_func		6687999	1					
ANR	6689317	ArgumentList	stream		6687999	1					
ANR	6689318	Argument	stream		6687999	0					
ANR	6689319	Identifier	stream		6687999	0					
ANR	6689320	Argument	"""%%fcc%c"""		6687999	1					
ANR	6689321	PrimaryExpression	"""%%fcc%c"""		6687999	0					
ANR	6689322	Argument	* s - '6' + '0'		6687999	2					
ANR	6689323	AdditiveExpression	* s - '6' + '0'		6687999	0		-			
ANR	6689324	UnaryOperationExpression	* s		6687999	0					
ANR	6689325	UnaryOperator	*		6687999	0					
ANR	6689326	Identifier	s		6687999	1					
ANR	6689327	AdditiveExpression	'6' + '0'		6687999	1		+			
ANR	6689328	PrimaryExpression	'6'		6687999	0					
ANR	6689329	PrimaryExpression	'0'		6687999	1					
ANR	6689330	BreakStatement	break ;	597:20:10684:10689	6687999	192	True				
ANR	6689331	Label	case 'z' :	601:18:10712:10720	6687999	193	True				
ANR	6689332	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%icc"" )"	603:20:10743:10782	6687999	194	True				
ANR	6689333	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%icc"" )"		6687999	0					
ANR	6689334	Callee	* info -> fprintf_func		6687999	0					
ANR	6689335	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689336	UnaryOperator	*		6687999	0					
ANR	6689337	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689338	Identifier	info		6687999	0					
ANR	6689339	Identifier	fprintf_func		6687999	1					
ANR	6689340	ArgumentList	stream		6687999	1					
ANR	6689341	Argument	stream		6687999	0					
ANR	6689342	Identifier	stream		6687999	0					
ANR	6689343	Argument	"""%%icc"""		6687999	1					
ANR	6689344	PrimaryExpression	"""%%icc"""		6687999	0					
ANR	6689345	BreakStatement	break ;	605:20:10805:10810	6687999	195	True				
ANR	6689346	Label	case 'Z' :	609:18:10833:10841	6687999	196	True				
ANR	6689347	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%xcc"" )"	611:20:10864:10903	6687999	197	True				
ANR	6689348	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%xcc"" )"		6687999	0					
ANR	6689349	Callee	* info -> fprintf_func		6687999	0					
ANR	6689350	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689351	UnaryOperator	*		6687999	0					
ANR	6689352	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689353	Identifier	info		6687999	0					
ANR	6689354	Identifier	fprintf_func		6687999	1					
ANR	6689355	ArgumentList	stream		6687999	1					
ANR	6689356	Argument	stream		6687999	0					
ANR	6689357	Identifier	stream		6687999	0					
ANR	6689358	Argument	"""%%xcc"""		6687999	1					
ANR	6689359	PrimaryExpression	"""%%xcc"""		6687999	0					
ANR	6689360	BreakStatement	break ;	613:20:10926:10931	6687999	198	True				
ANR	6689361	Label	case 'E' :	617:18:10954:10962	6687999	199	True				
ANR	6689362	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%ccr"" )"	619:20:10985:11024	6687999	200	True				
ANR	6689363	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%ccr"" )"		6687999	0					
ANR	6689364	Callee	* info -> fprintf_func		6687999	0					
ANR	6689365	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689366	UnaryOperator	*		6687999	0					
ANR	6689367	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689368	Identifier	info		6687999	0					
ANR	6689369	Identifier	fprintf_func		6687999	1					
ANR	6689370	ArgumentList	stream		6687999	1					
ANR	6689371	Argument	stream		6687999	0					
ANR	6689372	Identifier	stream		6687999	0					
ANR	6689373	Argument	"""%%ccr"""		6687999	1					
ANR	6689374	PrimaryExpression	"""%%ccr"""		6687999	0					
ANR	6689375	BreakStatement	break ;	621:20:11047:11052	6687999	201	True				
ANR	6689376	Label	case 's' :	625:18:11075:11083	6687999	202	True				
ANR	6689377	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%fprs"" )"	627:20:11106:11146	6687999	203	True				
ANR	6689378	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%fprs"" )"		6687999	0					
ANR	6689379	Callee	* info -> fprintf_func		6687999	0					
ANR	6689380	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689381	UnaryOperator	*		6687999	0					
ANR	6689382	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689383	Identifier	info		6687999	0					
ANR	6689384	Identifier	fprintf_func		6687999	1					
ANR	6689385	ArgumentList	stream		6687999	1					
ANR	6689386	Argument	stream		6687999	0					
ANR	6689387	Identifier	stream		6687999	0					
ANR	6689388	Argument	"""%%fprs"""		6687999	1					
ANR	6689389	PrimaryExpression	"""%%fprs"""		6687999	0					
ANR	6689390	BreakStatement	break ;	629:20:11169:11174	6687999	204	True				
ANR	6689391	Label	case 'o' :	633:18:11197:11205	6687999	205	True				
ANR	6689392	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%asi"" )"	635:20:11228:11267	6687999	206	True				
ANR	6689393	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%asi"" )"		6687999	0					
ANR	6689394	Callee	* info -> fprintf_func		6687999	0					
ANR	6689395	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689396	UnaryOperator	*		6687999	0					
ANR	6689397	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689398	Identifier	info		6687999	0					
ANR	6689399	Identifier	fprintf_func		6687999	1					
ANR	6689400	ArgumentList	stream		6687999	1					
ANR	6689401	Argument	stream		6687999	0					
ANR	6689402	Identifier	stream		6687999	0					
ANR	6689403	Argument	"""%%asi"""		6687999	1					
ANR	6689404	PrimaryExpression	"""%%asi"""		6687999	0					
ANR	6689405	BreakStatement	break ;	637:20:11290:11295	6687999	207	True				
ANR	6689406	Label	case 'W' :	641:18:11318:11326	6687999	208	True				
ANR	6689407	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%tick"" )"	643:20:11349:11389	6687999	209	True				
ANR	6689408	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%tick"" )"		6687999	0					
ANR	6689409	Callee	* info -> fprintf_func		6687999	0					
ANR	6689410	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689411	UnaryOperator	*		6687999	0					
ANR	6689412	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689413	Identifier	info		6687999	0					
ANR	6689414	Identifier	fprintf_func		6687999	1					
ANR	6689415	ArgumentList	stream		6687999	1					
ANR	6689416	Argument	stream		6687999	0					
ANR	6689417	Identifier	stream		6687999	0					
ANR	6689418	Argument	"""%%tick"""		6687999	1					
ANR	6689419	PrimaryExpression	"""%%tick"""		6687999	0					
ANR	6689420	BreakStatement	break ;	645:20:11412:11417	6687999	210	True				
ANR	6689421	Label	case 'P' :	649:18:11440:11448	6687999	211	True				
ANR	6689422	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%pc"" )"	651:20:11471:11509	6687999	212	True				
ANR	6689423	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%pc"" )"		6687999	0					
ANR	6689424	Callee	* info -> fprintf_func		6687999	0					
ANR	6689425	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689426	UnaryOperator	*		6687999	0					
ANR	6689427	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689428	Identifier	info		6687999	0					
ANR	6689429	Identifier	fprintf_func		6687999	1					
ANR	6689430	ArgumentList	stream		6687999	1					
ANR	6689431	Argument	stream		6687999	0					
ANR	6689432	Identifier	stream		6687999	0					
ANR	6689433	Argument	"""%%pc"""		6687999	1					
ANR	6689434	PrimaryExpression	"""%%pc"""		6687999	0					
ANR	6689435	BreakStatement	break ;	653:20:11532:11537	6687999	213	True				
ANR	6689436	Label	case '?' :	657:18:11560:11568	6687999	214	True				
ANR	6689437	IfStatement	if ( X_RS1 ( insn ) == 31 )		6687999	215					
ANR	6689438	Condition	X_RS1 ( insn ) == 31	659:24:11595:11612	6687999	0	True				
ANR	6689439	EqualityExpression	X_RS1 ( insn ) == 31		6687999	0		==			
ANR	6689440	CallExpression	X_RS1 ( insn )		6687999	0					
ANR	6689441	Callee	X_RS1		6687999	0					
ANR	6689442	Identifier	X_RS1		6687999	0					
ANR	6689443	ArgumentList	insn		6687999	1					
ANR	6689444	Argument	insn		6687999	0					
ANR	6689445	Identifier	insn		6687999	0					
ANR	6689446	PrimaryExpression	31		6687999	1					
ANR	6689447	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%ver"" )"	661:22:11638:11677	6687999	1	True				
ANR	6689448	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%ver"" )"		6687999	0					
ANR	6689449	Callee	* info -> fprintf_func		6687999	0					
ANR	6689450	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689451	UnaryOperator	*		6687999	0					
ANR	6689452	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689453	Identifier	info		6687999	0					
ANR	6689454	Identifier	fprintf_func		6687999	1					
ANR	6689455	ArgumentList	stream		6687999	1					
ANR	6689456	Argument	stream		6687999	0					
ANR	6689457	Identifier	stream		6687999	0					
ANR	6689458	Argument	"""%%ver"""		6687999	1					
ANR	6689459	PrimaryExpression	"""%%ver"""		6687999	0					
ANR	6689460	ElseStatement	else		6687999	0					
ANR	6689461	IfStatement	if ( ( unsigned ) X_RS1 ( insn ) < 17 )		6687999	0					
ANR	6689462	Condition	( unsigned ) X_RS1 ( insn ) < 17	663:29:11709:11736	6687999	0	True				
ANR	6689463	RelationalExpression	( unsigned ) X_RS1 ( insn ) < 17		6687999	0		<			
ANR	6689464	CastExpression	( unsigned ) X_RS1 ( insn )		6687999	0					
ANR	6689465	CastTarget	unsigned		6687999	0					
ANR	6689466	CallExpression	X_RS1 ( insn )		6687999	1					
ANR	6689467	Callee	X_RS1		6687999	0					
ANR	6689468	Identifier	X_RS1		6687999	0					
ANR	6689469	ArgumentList	insn		6687999	1					
ANR	6689470	Argument	insn		6687999	0					
ANR	6689471	Identifier	insn		6687999	0					
ANR	6689472	PrimaryExpression	17		6687999	1					
ANR	6689473	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_priv_reg_names [ X_RS1 ( insn ) ] )"	665:22:11762:11879	6687999	1	True				
ANR	6689474	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_priv_reg_names [ X_RS1 ( insn ) ] )"		6687999	0					
ANR	6689475	Callee	* info -> fprintf_func		6687999	0					
ANR	6689476	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689477	UnaryOperator	*		6687999	0					
ANR	6689478	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689479	Identifier	info		6687999	0					
ANR	6689480	Identifier	fprintf_func		6687999	1					
ANR	6689481	ArgumentList	stream		6687999	1					
ANR	6689482	Argument	stream		6687999	0					
ANR	6689483	Identifier	stream		6687999	0					
ANR	6689484	Argument	"""%%%s"""		6687999	1					
ANR	6689485	PrimaryExpression	"""%%%s"""		6687999	0					
ANR	6689486	Argument	v9_priv_reg_names [ X_RS1 ( insn ) ]		6687999	2					
ANR	6689487	ArrayIndexing	v9_priv_reg_names [ X_RS1 ( insn ) ]		6687999	0					
ANR	6689488	Identifier	v9_priv_reg_names		6687999	0					
ANR	6689489	CallExpression	X_RS1 ( insn )		6687999	1					
ANR	6689490	Callee	X_RS1		6687999	0					
ANR	6689491	Identifier	X_RS1		6687999	0					
ANR	6689492	ArgumentList	insn		6687999	1					
ANR	6689493	Argument	insn		6687999	0					
ANR	6689494	Identifier	insn		6687999	0					
ANR	6689495	ElseStatement	else		6687999	0					
ANR	6689496	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"	671:22:11930:11974	6687999	0	True				
ANR	6689497	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"		6687999	0					
ANR	6689498	Callee	* info -> fprintf_func		6687999	0					
ANR	6689499	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689500	UnaryOperator	*		6687999	0					
ANR	6689501	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689502	Identifier	info		6687999	0					
ANR	6689503	Identifier	fprintf_func		6687999	1					
ANR	6689504	ArgumentList	stream		6687999	1					
ANR	6689505	Argument	stream		6687999	0					
ANR	6689506	Identifier	stream		6687999	0					
ANR	6689507	Argument	"""%%reserved"""		6687999	1					
ANR	6689508	PrimaryExpression	"""%%reserved"""		6687999	0					
ANR	6689509	BreakStatement	break ;	673:20:11997:12002	6687999	216	True				
ANR	6689510	Label	case '!' :	677:18:12025:12033	6687999	217	True				
ANR	6689511	IfStatement	if ( ( unsigned ) X_RD ( insn ) < 17 )		6687999	218					
ANR	6689512	Condition	( unsigned ) X_RD ( insn ) < 17	679:24:12060:12086	6687999	0	True				
ANR	6689513	RelationalExpression	( unsigned ) X_RD ( insn ) < 17		6687999	0		<			
ANR	6689514	CastExpression	( unsigned ) X_RD ( insn )		6687999	0					
ANR	6689515	CastTarget	unsigned		6687999	0					
ANR	6689516	CallExpression	X_RD ( insn )		6687999	1					
ANR	6689517	Callee	X_RD		6687999	0					
ANR	6689518	Identifier	X_RD		6687999	0					
ANR	6689519	ArgumentList	insn		6687999	1					
ANR	6689520	Argument	insn		6687999	0					
ANR	6689521	Identifier	insn		6687999	0					
ANR	6689522	PrimaryExpression	17		6687999	1					
ANR	6689523	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_priv_reg_names [ X_RD ( insn ) ] )"	681:22:12112:12228	6687999	1	True				
ANR	6689524	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_priv_reg_names [ X_RD ( insn ) ] )"		6687999	0					
ANR	6689525	Callee	* info -> fprintf_func		6687999	0					
ANR	6689526	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689527	UnaryOperator	*		6687999	0					
ANR	6689528	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689529	Identifier	info		6687999	0					
ANR	6689530	Identifier	fprintf_func		6687999	1					
ANR	6689531	ArgumentList	stream		6687999	1					
ANR	6689532	Argument	stream		6687999	0					
ANR	6689533	Identifier	stream		6687999	0					
ANR	6689534	Argument	"""%%%s"""		6687999	1					
ANR	6689535	PrimaryExpression	"""%%%s"""		6687999	0					
ANR	6689536	Argument	v9_priv_reg_names [ X_RD ( insn ) ]		6687999	2					
ANR	6689537	ArrayIndexing	v9_priv_reg_names [ X_RD ( insn ) ]		6687999	0					
ANR	6689538	Identifier	v9_priv_reg_names		6687999	0					
ANR	6689539	CallExpression	X_RD ( insn )		6687999	1					
ANR	6689540	Callee	X_RD		6687999	0					
ANR	6689541	Identifier	X_RD		6687999	0					
ANR	6689542	ArgumentList	insn		6687999	1					
ANR	6689543	Argument	insn		6687999	0					
ANR	6689544	Identifier	insn		6687999	0					
ANR	6689545	ElseStatement	else		6687999	0					
ANR	6689546	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"	687:22:12279:12323	6687999	0	True				
ANR	6689547	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"		6687999	0					
ANR	6689548	Callee	* info -> fprintf_func		6687999	0					
ANR	6689549	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689550	UnaryOperator	*		6687999	0					
ANR	6689551	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689552	Identifier	info		6687999	0					
ANR	6689553	Identifier	fprintf_func		6687999	1					
ANR	6689554	ArgumentList	stream		6687999	1					
ANR	6689555	Argument	stream		6687999	0					
ANR	6689556	Identifier	stream		6687999	0					
ANR	6689557	Argument	"""%%reserved"""		6687999	1					
ANR	6689558	PrimaryExpression	"""%%reserved"""		6687999	0					
ANR	6689559	BreakStatement	break ;	689:20:12346:12351	6687999	219	True				
ANR	6689560	Label	case '$' :	693:18:12374:12382	6687999	220	True				
ANR	6689561	IfStatement	if ( ( unsigned ) X_RS1 ( insn ) < 32 )		6687999	221					
ANR	6689562	Condition	( unsigned ) X_RS1 ( insn ) < 32	695:24:12409:12436	6687999	0	True				
ANR	6689563	RelationalExpression	( unsigned ) X_RS1 ( insn ) < 32		6687999	0		<			
ANR	6689564	CastExpression	( unsigned ) X_RS1 ( insn )		6687999	0					
ANR	6689565	CastTarget	unsigned		6687999	0					
ANR	6689566	CallExpression	X_RS1 ( insn )		6687999	1					
ANR	6689567	Callee	X_RS1		6687999	0					
ANR	6689568	Identifier	X_RS1		6687999	0					
ANR	6689569	ArgumentList	insn		6687999	1					
ANR	6689570	Argument	insn		6687999	0					
ANR	6689571	Identifier	insn		6687999	0					
ANR	6689572	PrimaryExpression	32		6687999	1					
ANR	6689573	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_hpriv_reg_names [ X_RS1 ( insn ) ] )"	697:22:12462:12580	6687999	1	True				
ANR	6689574	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_hpriv_reg_names [ X_RS1 ( insn ) ] )"		6687999	0					
ANR	6689575	Callee	* info -> fprintf_func		6687999	0					
ANR	6689576	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689577	UnaryOperator	*		6687999	0					
ANR	6689578	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689579	Identifier	info		6687999	0					
ANR	6689580	Identifier	fprintf_func		6687999	1					
ANR	6689581	ArgumentList	stream		6687999	1					
ANR	6689582	Argument	stream		6687999	0					
ANR	6689583	Identifier	stream		6687999	0					
ANR	6689584	Argument	"""%%%s"""		6687999	1					
ANR	6689585	PrimaryExpression	"""%%%s"""		6687999	0					
ANR	6689586	Argument	v9_hpriv_reg_names [ X_RS1 ( insn ) ]		6687999	2					
ANR	6689587	ArrayIndexing	v9_hpriv_reg_names [ X_RS1 ( insn ) ]		6687999	0					
ANR	6689588	Identifier	v9_hpriv_reg_names		6687999	0					
ANR	6689589	CallExpression	X_RS1 ( insn )		6687999	1					
ANR	6689590	Callee	X_RS1		6687999	0					
ANR	6689591	Identifier	X_RS1		6687999	0					
ANR	6689592	ArgumentList	insn		6687999	1					
ANR	6689593	Argument	insn		6687999	0					
ANR	6689594	Identifier	insn		6687999	0					
ANR	6689595	ElseStatement	else		6687999	0					
ANR	6689596	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"	703:22:12631:12675	6687999	0	True				
ANR	6689597	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"		6687999	0					
ANR	6689598	Callee	* info -> fprintf_func		6687999	0					
ANR	6689599	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689600	UnaryOperator	*		6687999	0					
ANR	6689601	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689602	Identifier	info		6687999	0					
ANR	6689603	Identifier	fprintf_func		6687999	1					
ANR	6689604	ArgumentList	stream		6687999	1					
ANR	6689605	Argument	stream		6687999	0					
ANR	6689606	Identifier	stream		6687999	0					
ANR	6689607	Argument	"""%%reserved"""		6687999	1					
ANR	6689608	PrimaryExpression	"""%%reserved"""		6687999	0					
ANR	6689609	BreakStatement	break ;	705:20:12698:12703	6687999	222	True				
ANR	6689610	Label	case '%' :	709:18:12726:12734	6687999	223	True				
ANR	6689611	IfStatement	if ( ( unsigned ) X_RD ( insn ) < 32 )		6687999	224					
ANR	6689612	Condition	( unsigned ) X_RD ( insn ) < 32	711:24:12761:12787	6687999	0	True				
ANR	6689613	RelationalExpression	( unsigned ) X_RD ( insn ) < 32		6687999	0		<			
ANR	6689614	CastExpression	( unsigned ) X_RD ( insn )		6687999	0					
ANR	6689615	CastTarget	unsigned		6687999	0					
ANR	6689616	CallExpression	X_RD ( insn )		6687999	1					
ANR	6689617	Callee	X_RD		6687999	0					
ANR	6689618	Identifier	X_RD		6687999	0					
ANR	6689619	ArgumentList	insn		6687999	1					
ANR	6689620	Argument	insn		6687999	0					
ANR	6689621	Identifier	insn		6687999	0					
ANR	6689622	PrimaryExpression	32		6687999	1					
ANR	6689623	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_hpriv_reg_names [ X_RD ( insn ) ] )"	713:22:12813:12930	6687999	1	True				
ANR	6689624	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9_hpriv_reg_names [ X_RD ( insn ) ] )"		6687999	0					
ANR	6689625	Callee	* info -> fprintf_func		6687999	0					
ANR	6689626	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689627	UnaryOperator	*		6687999	0					
ANR	6689628	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689629	Identifier	info		6687999	0					
ANR	6689630	Identifier	fprintf_func		6687999	1					
ANR	6689631	ArgumentList	stream		6687999	1					
ANR	6689632	Argument	stream		6687999	0					
ANR	6689633	Identifier	stream		6687999	0					
ANR	6689634	Argument	"""%%%s"""		6687999	1					
ANR	6689635	PrimaryExpression	"""%%%s"""		6687999	0					
ANR	6689636	Argument	v9_hpriv_reg_names [ X_RD ( insn ) ]		6687999	2					
ANR	6689637	ArrayIndexing	v9_hpriv_reg_names [ X_RD ( insn ) ]		6687999	0					
ANR	6689638	Identifier	v9_hpriv_reg_names		6687999	0					
ANR	6689639	CallExpression	X_RD ( insn )		6687999	1					
ANR	6689640	Callee	X_RD		6687999	0					
ANR	6689641	Identifier	X_RD		6687999	0					
ANR	6689642	ArgumentList	insn		6687999	1					
ANR	6689643	Argument	insn		6687999	0					
ANR	6689644	Identifier	insn		6687999	0					
ANR	6689645	ElseStatement	else		6687999	0					
ANR	6689646	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"	719:22:12981:13025	6687999	0	True				
ANR	6689647	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"		6687999	0					
ANR	6689648	Callee	* info -> fprintf_func		6687999	0					
ANR	6689649	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689650	UnaryOperator	*		6687999	0					
ANR	6689651	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689652	Identifier	info		6687999	0					
ANR	6689653	Identifier	fprintf_func		6687999	1					
ANR	6689654	ArgumentList	stream		6687999	1					
ANR	6689655	Argument	stream		6687999	0					
ANR	6689656	Identifier	stream		6687999	0					
ANR	6689657	Argument	"""%%reserved"""		6687999	1					
ANR	6689658	PrimaryExpression	"""%%reserved"""		6687999	0					
ANR	6689659	BreakStatement	break ;	721:20:13048:13053	6687999	225	True				
ANR	6689660	Label	case '/' :	725:18:13076:13084	6687999	226	True				
ANR	6689661	IfStatement	if ( X_RS1 ( insn ) < 16 || X_RS1 ( insn ) > 25 )		6687999	227					
ANR	6689662	Condition	X_RS1 ( insn ) < 16 || X_RS1 ( insn ) > 25	727:24:13111:13148	6687999	0	True				
ANR	6689663	OrExpression	X_RS1 ( insn ) < 16 || X_RS1 ( insn ) > 25		6687999	0		||			
ANR	6689664	RelationalExpression	X_RS1 ( insn ) < 16		6687999	0		<			
ANR	6689665	CallExpression	X_RS1 ( insn )		6687999	0					
ANR	6689666	Callee	X_RS1		6687999	0					
ANR	6689667	Identifier	X_RS1		6687999	0					
ANR	6689668	ArgumentList	insn		6687999	1					
ANR	6689669	Argument	insn		6687999	0					
ANR	6689670	Identifier	insn		6687999	0					
ANR	6689671	PrimaryExpression	16		6687999	1					
ANR	6689672	RelationalExpression	X_RS1 ( insn ) > 25		6687999	1		>			
ANR	6689673	CallExpression	X_RS1 ( insn )		6687999	0					
ANR	6689674	Callee	X_RS1		6687999	0					
ANR	6689675	Identifier	X_RS1		6687999	0					
ANR	6689676	ArgumentList	insn		6687999	1					
ANR	6689677	Argument	insn		6687999	0					
ANR	6689678	Identifier	insn		6687999	0					
ANR	6689679	PrimaryExpression	25		6687999	1					
ANR	6689680	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"	729:22:13174:13218	6687999	1	True				
ANR	6689681	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"		6687999	0					
ANR	6689682	Callee	* info -> fprintf_func		6687999	0					
ANR	6689683	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689684	UnaryOperator	*		6687999	0					
ANR	6689685	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689686	Identifier	info		6687999	0					
ANR	6689687	Identifier	fprintf_func		6687999	1					
ANR	6689688	ArgumentList	stream		6687999	1					
ANR	6689689	Argument	stream		6687999	0					
ANR	6689690	Identifier	stream		6687999	0					
ANR	6689691	Argument	"""%%reserved"""		6687999	1					
ANR	6689692	PrimaryExpression	"""%%reserved"""		6687999	0					
ANR	6689693	ElseStatement	else		6687999	0					
ANR	6689694	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9a_asr_reg_names [ X_RS1 ( insn ) - 16 ] )"	733:22:13269:13389	6687999	0	True				
ANR	6689695	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9a_asr_reg_names [ X_RS1 ( insn ) - 16 ] )"		6687999	0					
ANR	6689696	Callee	* info -> fprintf_func		6687999	0					
ANR	6689697	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689698	UnaryOperator	*		6687999	0					
ANR	6689699	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689700	Identifier	info		6687999	0					
ANR	6689701	Identifier	fprintf_func		6687999	1					
ANR	6689702	ArgumentList	stream		6687999	1					
ANR	6689703	Argument	stream		6687999	0					
ANR	6689704	Identifier	stream		6687999	0					
ANR	6689705	Argument	"""%%%s"""		6687999	1					
ANR	6689706	PrimaryExpression	"""%%%s"""		6687999	0					
ANR	6689707	Argument	v9a_asr_reg_names [ X_RS1 ( insn ) - 16 ]		6687999	2					
ANR	6689708	ArrayIndexing	v9a_asr_reg_names [ X_RS1 ( insn ) - 16 ]		6687999	0					
ANR	6689709	Identifier	v9a_asr_reg_names		6687999	0					
ANR	6689710	AdditiveExpression	X_RS1 ( insn ) - 16		6687999	1		-			
ANR	6689711	CallExpression	X_RS1 ( insn )		6687999	0					
ANR	6689712	Callee	X_RS1		6687999	0					
ANR	6689713	Identifier	X_RS1		6687999	0					
ANR	6689714	ArgumentList	insn		6687999	1					
ANR	6689715	Argument	insn		6687999	0					
ANR	6689716	Identifier	insn		6687999	0					
ANR	6689717	PrimaryExpression	16		6687999	1					
ANR	6689718	BreakStatement	break ;	737:20:13412:13417	6687999	228	True				
ANR	6689719	Label	case '_' :	741:18:13440:13448	6687999	229	True				
ANR	6689720	IfStatement	if ( X_RD ( insn ) < 16 || X_RD ( insn ) > 25 )		6687999	230					
ANR	6689721	Condition	X_RD ( insn ) < 16 || X_RD ( insn ) > 25	743:24:13475:13510	6687999	0	True				
ANR	6689722	OrExpression	X_RD ( insn ) < 16 || X_RD ( insn ) > 25		6687999	0		||			
ANR	6689723	RelationalExpression	X_RD ( insn ) < 16		6687999	0		<			
ANR	6689724	CallExpression	X_RD ( insn )		6687999	0					
ANR	6689725	Callee	X_RD		6687999	0					
ANR	6689726	Identifier	X_RD		6687999	0					
ANR	6689727	ArgumentList	insn		6687999	1					
ANR	6689728	Argument	insn		6687999	0					
ANR	6689729	Identifier	insn		6687999	0					
ANR	6689730	PrimaryExpression	16		6687999	1					
ANR	6689731	RelationalExpression	X_RD ( insn ) > 25		6687999	1		>			
ANR	6689732	CallExpression	X_RD ( insn )		6687999	0					
ANR	6689733	Callee	X_RD		6687999	0					
ANR	6689734	Identifier	X_RD		6687999	0					
ANR	6689735	ArgumentList	insn		6687999	1					
ANR	6689736	Argument	insn		6687999	0					
ANR	6689737	Identifier	insn		6687999	0					
ANR	6689738	PrimaryExpression	25		6687999	1					
ANR	6689739	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"	745:22:13536:13580	6687999	1	True				
ANR	6689740	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%reserved"" )"		6687999	0					
ANR	6689741	Callee	* info -> fprintf_func		6687999	0					
ANR	6689742	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689743	UnaryOperator	*		6687999	0					
ANR	6689744	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689745	Identifier	info		6687999	0					
ANR	6689746	Identifier	fprintf_func		6687999	1					
ANR	6689747	ArgumentList	stream		6687999	1					
ANR	6689748	Argument	stream		6687999	0					
ANR	6689749	Identifier	stream		6687999	0					
ANR	6689750	Argument	"""%%reserved"""		6687999	1					
ANR	6689751	PrimaryExpression	"""%%reserved"""		6687999	0					
ANR	6689752	ElseStatement	else		6687999	0					
ANR	6689753	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9a_asr_reg_names [ X_RD ( insn ) - 16 ] )"	749:22:13631:13750	6687999	0	True				
ANR	6689754	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%%s"" , v9a_asr_reg_names [ X_RD ( insn ) - 16 ] )"		6687999	0					
ANR	6689755	Callee	* info -> fprintf_func		6687999	0					
ANR	6689756	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689757	UnaryOperator	*		6687999	0					
ANR	6689758	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689759	Identifier	info		6687999	0					
ANR	6689760	Identifier	fprintf_func		6687999	1					
ANR	6689761	ArgumentList	stream		6687999	1					
ANR	6689762	Argument	stream		6687999	0					
ANR	6689763	Identifier	stream		6687999	0					
ANR	6689764	Argument	"""%%%s"""		6687999	1					
ANR	6689765	PrimaryExpression	"""%%%s"""		6687999	0					
ANR	6689766	Argument	v9a_asr_reg_names [ X_RD ( insn ) - 16 ]		6687999	2					
ANR	6689767	ArrayIndexing	v9a_asr_reg_names [ X_RD ( insn ) - 16 ]		6687999	0					
ANR	6689768	Identifier	v9a_asr_reg_names		6687999	0					
ANR	6689769	AdditiveExpression	X_RD ( insn ) - 16		6687999	1		-			
ANR	6689770	CallExpression	X_RD ( insn )		6687999	0					
ANR	6689771	Callee	X_RD		6687999	0					
ANR	6689772	Identifier	X_RD		6687999	0					
ANR	6689773	ArgumentList	insn		6687999	1					
ANR	6689774	Argument	insn		6687999	0					
ANR	6689775	Identifier	insn		6687999	0					
ANR	6689776	PrimaryExpression	16		6687999	1					
ANR	6689777	BreakStatement	break ;	753:20:13773:13778	6687999	231	True				
ANR	6689778	Label	case '*' :	757:18:13801:13809	6687999	232	True				
ANR	6689779	CompoundStatement		759:22:13796:13850	6687999	233					
ANR	6689780	IdentifierDeclStatement	const char * name = sparc_decode_prefetch ( X_RD ( insn ) ) ;	761:22:13857:13911	6687999	0	True				
ANR	6689781	IdentifierDecl	* name = sparc_decode_prefetch ( X_RD ( insn ) )		6687999	0					
ANR	6689782	IdentifierDeclType	const char *		6687999	0					
ANR	6689783	Identifier	name		6687999	1					
ANR	6689784	AssignmentExpression	* name = sparc_decode_prefetch ( X_RD ( insn ) )		6687999	2		=			
ANR	6689785	Identifier	name		6687999	0					
ANR	6689786	CallExpression	sparc_decode_prefetch ( X_RD ( insn ) )		6687999	1					
ANR	6689787	Callee	sparc_decode_prefetch		6687999	0					
ANR	6689788	Identifier	sparc_decode_prefetch		6687999	0					
ANR	6689789	ArgumentList	X_RD ( insn )		6687999	1					
ANR	6689790	Argument	X_RD ( insn )		6687999	0					
ANR	6689791	CallExpression	X_RD ( insn )		6687999	0					
ANR	6689792	Callee	X_RD		6687999	0					
ANR	6689793	Identifier	X_RD		6687999	0					
ANR	6689794	ArgumentList	insn		6687999	1					
ANR	6689795	Argument	insn		6687999	0					
ANR	6689796	Identifier	insn		6687999	0					
ANR	6689797	IfStatement	if ( name )		6687999	1					
ANR	6689798	Condition	name	765:26:13942:13945	6687999	0	True				
ANR	6689799	Identifier	name		6687999	0					
ANR	6689800	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%s"" , name )"	767:24:13973:14015	6687999	1	True				
ANR	6689801	CallExpression	"( * info -> fprintf_func ) ( stream , ""%s"" , name )"		6687999	0					
ANR	6689802	Callee	* info -> fprintf_func		6687999	0					
ANR	6689803	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689804	UnaryOperator	*		6687999	0					
ANR	6689805	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689806	Identifier	info		6687999	0					
ANR	6689807	Identifier	fprintf_func		6687999	1					
ANR	6689808	ArgumentList	stream		6687999	1					
ANR	6689809	Argument	stream		6687999	0					
ANR	6689810	Identifier	stream		6687999	0					
ANR	6689811	Argument	"""%s"""		6687999	1					
ANR	6689812	PrimaryExpression	"""%s"""		6687999	0					
ANR	6689813	Argument	name		6687999	2					
ANR	6689814	Identifier	name		6687999	0					
ANR	6689815	ElseStatement	else		6687999	0					
ANR	6689816	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%ld"" , X_RD ( insn ) )"	771:24:14070:14120	6687999	0	True				
ANR	6689817	CallExpression	"( * info -> fprintf_func ) ( stream , ""%ld"" , X_RD ( insn ) )"		6687999	0					
ANR	6689818	Callee	* info -> fprintf_func		6687999	0					
ANR	6689819	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689820	UnaryOperator	*		6687999	0					
ANR	6689821	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689822	Identifier	info		6687999	0					
ANR	6689823	Identifier	fprintf_func		6687999	1					
ANR	6689824	ArgumentList	stream		6687999	1					
ANR	6689825	Argument	stream		6687999	0					
ANR	6689826	Identifier	stream		6687999	0					
ANR	6689827	Argument	"""%ld"""		6687999	1					
ANR	6689828	PrimaryExpression	"""%ld"""		6687999	0					
ANR	6689829	Argument	X_RD ( insn )		6687999	2					
ANR	6689830	CallExpression	X_RD ( insn )		6687999	0					
ANR	6689831	Callee	X_RD		6687999	0					
ANR	6689832	Identifier	X_RD		6687999	0					
ANR	6689833	ArgumentList	insn		6687999	1					
ANR	6689834	Argument	insn		6687999	0					
ANR	6689835	Identifier	insn		6687999	0					
ANR	6689836	BreakStatement	break ;	773:22:14145:14150	6687999	2	True				
ANR	6689837	Label	case 'M' :	779:18:14196:14204	6687999	234	True				
ANR	6689838	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%asr%ld"" , X_RS1 ( insn ) )"	781:20:14227:14283	6687999	235	True				
ANR	6689839	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%asr%ld"" , X_RS1 ( insn ) )"		6687999	0					
ANR	6689840	Callee	* info -> fprintf_func		6687999	0					
ANR	6689841	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689842	UnaryOperator	*		6687999	0					
ANR	6689843	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689844	Identifier	info		6687999	0					
ANR	6689845	Identifier	fprintf_func		6687999	1					
ANR	6689846	ArgumentList	stream		6687999	1					
ANR	6689847	Argument	stream		6687999	0					
ANR	6689848	Identifier	stream		6687999	0					
ANR	6689849	Argument	"""%%asr%ld"""		6687999	1					
ANR	6689850	PrimaryExpression	"""%%asr%ld"""		6687999	0					
ANR	6689851	Argument	X_RS1 ( insn )		6687999	2					
ANR	6689852	CallExpression	X_RS1 ( insn )		6687999	0					
ANR	6689853	Callee	X_RS1		6687999	0					
ANR	6689854	Identifier	X_RS1		6687999	0					
ANR	6689855	ArgumentList	insn		6687999	1					
ANR	6689856	Argument	insn		6687999	0					
ANR	6689857	Identifier	insn		6687999	0					
ANR	6689858	BreakStatement	break ;	783:20:14306:14311	6687999	236	True				
ANR	6689859	Label	case 'm' :	787:18:14334:14342	6687999	237	True				
ANR	6689860	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%asr%ld"" , X_RD ( insn ) )"	789:20:14365:14420	6687999	238	True				
ANR	6689861	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%asr%ld"" , X_RD ( insn ) )"		6687999	0					
ANR	6689862	Callee	* info -> fprintf_func		6687999	0					
ANR	6689863	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689864	UnaryOperator	*		6687999	0					
ANR	6689865	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689866	Identifier	info		6687999	0					
ANR	6689867	Identifier	fprintf_func		6687999	1					
ANR	6689868	ArgumentList	stream		6687999	1					
ANR	6689869	Argument	stream		6687999	0					
ANR	6689870	Identifier	stream		6687999	0					
ANR	6689871	Argument	"""%%asr%ld"""		6687999	1					
ANR	6689872	PrimaryExpression	"""%%asr%ld"""		6687999	0					
ANR	6689873	Argument	X_RD ( insn )		6687999	2					
ANR	6689874	CallExpression	X_RD ( insn )		6687999	0					
ANR	6689875	Callee	X_RD		6687999	0					
ANR	6689876	Identifier	X_RD		6687999	0					
ANR	6689877	ArgumentList	insn		6687999	1					
ANR	6689878	Argument	insn		6687999	0					
ANR	6689879	Identifier	insn		6687999	0					
ANR	6689880	BreakStatement	break ;	791:20:14443:14448	6687999	239	True				
ANR	6689881	Label	case 'L' :	795:18:14471:14479	6687999	240	True				
ANR	6689882	ExpressionStatement	"info -> target = memaddr + SEX ( X_DISP30 ( insn ) , 30 ) * 4"	797:20:14502:14556	6687999	241	True				
ANR	6689883	AssignmentExpression	"info -> target = memaddr + SEX ( X_DISP30 ( insn ) , 30 ) * 4"		6687999	0		=			
ANR	6689884	PtrMemberAccess	info -> target		6687999	0					
ANR	6689885	Identifier	info		6687999	0					
ANR	6689886	Identifier	target		6687999	1					
ANR	6689887	AdditiveExpression	"memaddr + SEX ( X_DISP30 ( insn ) , 30 ) * 4"		6687999	1		+			
ANR	6689888	Identifier	memaddr		6687999	0					
ANR	6689889	MultiplicativeExpression	"SEX ( X_DISP30 ( insn ) , 30 ) * 4"		6687999	1		*			
ANR	6689890	CallExpression	"SEX ( X_DISP30 ( insn ) , 30 )"		6687999	0					
ANR	6689891	Callee	SEX		6687999	0					
ANR	6689892	Identifier	SEX		6687999	0					
ANR	6689893	ArgumentList	X_DISP30 ( insn )		6687999	1					
ANR	6689894	Argument	X_DISP30 ( insn )		6687999	0					
ANR	6689895	CallExpression	X_DISP30 ( insn )		6687999	0					
ANR	6689896	Callee	X_DISP30		6687999	0					
ANR	6689897	Identifier	X_DISP30		6687999	0					
ANR	6689898	ArgumentList	insn		6687999	1					
ANR	6689899	Argument	insn		6687999	0					
ANR	6689900	Identifier	insn		6687999	0					
ANR	6689901	Argument	30		6687999	1					
ANR	6689902	PrimaryExpression	30		6687999	0					
ANR	6689903	PrimaryExpression	4		6687999	1					
ANR	6689904	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	799:20:14579:14627	6687999	242	True				
ANR	6689905	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		6687999	0					
ANR	6689906	Callee	* info -> print_address_func		6687999	0					
ANR	6689907	UnaryOperationExpression	* info -> print_address_func		6687999	0					
ANR	6689908	UnaryOperator	*		6687999	0					
ANR	6689909	PtrMemberAccess	info -> print_address_func		6687999	1					
ANR	6689910	Identifier	info		6687999	0					
ANR	6689911	Identifier	print_address_func		6687999	1					
ANR	6689912	ArgumentList	info -> target		6687999	1					
ANR	6689913	Argument	info -> target		6687999	0					
ANR	6689914	PtrMemberAccess	info -> target		6687999	0					
ANR	6689915	Identifier	info		6687999	0					
ANR	6689916	Identifier	target		6687999	1					
ANR	6689917	Argument	info		6687999	1					
ANR	6689918	Identifier	info		6687999	0					
ANR	6689919	BreakStatement	break ;	801:20:14650:14655	6687999	243	True				
ANR	6689920	Label	case 'n' :	805:18:14678:14686	6687999	244	True				
ANR	6689921	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%#x"" , SEX ( X_DISP22 ( insn ) , 22 ) )"	807:20:14709:14796	6687999	245	True				
ANR	6689922	CallExpression	"( * info -> fprintf_func ) ( stream , ""%#x"" , SEX ( X_DISP22 ( insn ) , 22 ) )"		6687999	0					
ANR	6689923	Callee	* info -> fprintf_func		6687999	0					
ANR	6689924	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6689925	UnaryOperator	*		6687999	0					
ANR	6689926	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6689927	Identifier	info		6687999	0					
ANR	6689928	Identifier	fprintf_func		6687999	1					
ANR	6689929	ArgumentList	stream		6687999	1					
ANR	6689930	Argument	stream		6687999	0					
ANR	6689931	Identifier	stream		6687999	0					
ANR	6689932	Argument	"""%#x"""		6687999	1					
ANR	6689933	PrimaryExpression	"""%#x"""		6687999	0					
ANR	6689934	Argument	"SEX ( X_DISP22 ( insn ) , 22 )"		6687999	2					
ANR	6689935	CallExpression	"SEX ( X_DISP22 ( insn ) , 22 )"		6687999	0					
ANR	6689936	Callee	SEX		6687999	0					
ANR	6689937	Identifier	SEX		6687999	0					
ANR	6689938	ArgumentList	X_DISP22 ( insn )		6687999	1					
ANR	6689939	Argument	X_DISP22 ( insn )		6687999	0					
ANR	6689940	CallExpression	X_DISP22 ( insn )		6687999	0					
ANR	6689941	Callee	X_DISP22		6687999	0					
ANR	6689942	Identifier	X_DISP22		6687999	0					
ANR	6689943	ArgumentList	insn		6687999	1					
ANR	6689944	Argument	insn		6687999	0					
ANR	6689945	Identifier	insn		6687999	0					
ANR	6689946	Argument	22		6687999	1					
ANR	6689947	PrimaryExpression	22		6687999	0					
ANR	6689948	BreakStatement	break ;	811:20:14819:14824	6687999	246	True				
ANR	6689949	Label	case 'l' :	815:18:14847:14855	6687999	247	True				
ANR	6689950	ExpressionStatement	"info -> target = memaddr + SEX ( X_DISP22 ( insn ) , 22 ) * 4"	817:20:14878:14932	6687999	248	True				
ANR	6689951	AssignmentExpression	"info -> target = memaddr + SEX ( X_DISP22 ( insn ) , 22 ) * 4"		6687999	0		=			
ANR	6689952	PtrMemberAccess	info -> target		6687999	0					
ANR	6689953	Identifier	info		6687999	0					
ANR	6689954	Identifier	target		6687999	1					
ANR	6689955	AdditiveExpression	"memaddr + SEX ( X_DISP22 ( insn ) , 22 ) * 4"		6687999	1		+			
ANR	6689956	Identifier	memaddr		6687999	0					
ANR	6689957	MultiplicativeExpression	"SEX ( X_DISP22 ( insn ) , 22 ) * 4"		6687999	1		*			
ANR	6689958	CallExpression	"SEX ( X_DISP22 ( insn ) , 22 )"		6687999	0					
ANR	6689959	Callee	SEX		6687999	0					
ANR	6689960	Identifier	SEX		6687999	0					
ANR	6689961	ArgumentList	X_DISP22 ( insn )		6687999	1					
ANR	6689962	Argument	X_DISP22 ( insn )		6687999	0					
ANR	6689963	CallExpression	X_DISP22 ( insn )		6687999	0					
ANR	6689964	Callee	X_DISP22		6687999	0					
ANR	6689965	Identifier	X_DISP22		6687999	0					
ANR	6689966	ArgumentList	insn		6687999	1					
ANR	6689967	Argument	insn		6687999	0					
ANR	6689968	Identifier	insn		6687999	0					
ANR	6689969	Argument	22		6687999	1					
ANR	6689970	PrimaryExpression	22		6687999	0					
ANR	6689971	PrimaryExpression	4		6687999	1					
ANR	6689972	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	819:20:14955:15003	6687999	249	True				
ANR	6689973	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		6687999	0					
ANR	6689974	Callee	* info -> print_address_func		6687999	0					
ANR	6689975	UnaryOperationExpression	* info -> print_address_func		6687999	0					
ANR	6689976	UnaryOperator	*		6687999	0					
ANR	6689977	PtrMemberAccess	info -> print_address_func		6687999	1					
ANR	6689978	Identifier	info		6687999	0					
ANR	6689979	Identifier	print_address_func		6687999	1					
ANR	6689980	ArgumentList	info -> target		6687999	1					
ANR	6689981	Argument	info -> target		6687999	0					
ANR	6689982	PtrMemberAccess	info -> target		6687999	0					
ANR	6689983	Identifier	info		6687999	0					
ANR	6689984	Identifier	target		6687999	1					
ANR	6689985	Argument	info		6687999	1					
ANR	6689986	Identifier	info		6687999	0					
ANR	6689987	BreakStatement	break ;	821:20:15026:15031	6687999	250	True				
ANR	6689988	Label	case 'A' :	825:18:15054:15062	6687999	251	True				
ANR	6689989	CompoundStatement		827:22:15049:15065	6687999	252					
ANR	6689990	IdentifierDeclStatement	const char * name ;	829:22:15110:15126	6687999	0	True				
ANR	6689991	IdentifierDecl	* name		6687999	0					
ANR	6689992	IdentifierDeclType	const char *		6687999	0					
ANR	6689993	Identifier	name		6687999	1					
ANR	6689994	IfStatement	if ( ( info -> mach == bfd_mach_sparc_v8plusa ) || ( ( info -> mach >= bfd_mach_sparc_v9 ) && ( info -> mach <= bfd_mach_sparc_v9b ) ) )		6687999	1					
ANR	6689995	Condition	( info -> mach == bfd_mach_sparc_v8plusa ) || ( ( info -> mach >= bfd_mach_sparc_v9 ) && ( info -> mach <= bfd_mach_sparc_v9b ) )	833:26:15157:15326	6687999	0	True				
ANR	6689996	OrExpression	( info -> mach == bfd_mach_sparc_v8plusa ) || ( ( info -> mach >= bfd_mach_sparc_v9 ) && ( info -> mach <= bfd_mach_sparc_v9b ) )		6687999	0		||			
ANR	6689997	EqualityExpression	info -> mach == bfd_mach_sparc_v8plusa		6687999	0		==			
ANR	6689998	PtrMemberAccess	info -> mach		6687999	0					
ANR	6689999	Identifier	info		6687999	0					
ANR	6690000	Identifier	mach		6687999	1					
ANR	6690001	Identifier	bfd_mach_sparc_v8plusa		6687999	1					
ANR	6690002	AndExpression	( info -> mach >= bfd_mach_sparc_v9 ) && ( info -> mach <= bfd_mach_sparc_v9b )		6687999	1		&&			
ANR	6690003	RelationalExpression	info -> mach >= bfd_mach_sparc_v9		6687999	0		>=			
ANR	6690004	PtrMemberAccess	info -> mach		6687999	0					
ANR	6690005	Identifier	info		6687999	0					
ANR	6690006	Identifier	mach		6687999	1					
ANR	6690007	Identifier	bfd_mach_sparc_v9		6687999	1					
ANR	6690008	RelationalExpression	info -> mach <= bfd_mach_sparc_v9b		6687999	1		<=			
ANR	6690009	PtrMemberAccess	info -> mach		6687999	0					
ANR	6690010	Identifier	info		6687999	0					
ANR	6690011	Identifier	mach		6687999	1					
ANR	6690012	Identifier	bfd_mach_sparc_v9b		6687999	1					
ANR	6690013	ExpressionStatement	name = sparc_decode_asi_v9 ( X_ASI ( insn ) )	839:24:15354:15395	6687999	1	True				
ANR	6690014	AssignmentExpression	name = sparc_decode_asi_v9 ( X_ASI ( insn ) )		6687999	0		=			
ANR	6690015	Identifier	name		6687999	0					
ANR	6690016	CallExpression	sparc_decode_asi_v9 ( X_ASI ( insn ) )		6687999	1					
ANR	6690017	Callee	sparc_decode_asi_v9		6687999	0					
ANR	6690018	Identifier	sparc_decode_asi_v9		6687999	0					
ANR	6690019	ArgumentList	X_ASI ( insn )		6687999	1					
ANR	6690020	Argument	X_ASI ( insn )		6687999	0					
ANR	6690021	CallExpression	X_ASI ( insn )		6687999	0					
ANR	6690022	Callee	X_ASI		6687999	0					
ANR	6690023	Identifier	X_ASI		6687999	0					
ANR	6690024	ArgumentList	insn		6687999	1					
ANR	6690025	Argument	insn		6687999	0					
ANR	6690026	Identifier	insn		6687999	0					
ANR	6690027	ElseStatement	else		6687999	0					
ANR	6690028	ExpressionStatement	name = sparc_decode_asi_v8 ( X_ASI ( insn ) )	843:24:15450:15491	6687999	0	True				
ANR	6690029	AssignmentExpression	name = sparc_decode_asi_v8 ( X_ASI ( insn ) )		6687999	0		=			
ANR	6690030	Identifier	name		6687999	0					
ANR	6690031	CallExpression	sparc_decode_asi_v8 ( X_ASI ( insn ) )		6687999	1					
ANR	6690032	Callee	sparc_decode_asi_v8		6687999	0					
ANR	6690033	Identifier	sparc_decode_asi_v8		6687999	0					
ANR	6690034	ArgumentList	X_ASI ( insn )		6687999	1					
ANR	6690035	Argument	X_ASI ( insn )		6687999	0					
ANR	6690036	CallExpression	X_ASI ( insn )		6687999	0					
ANR	6690037	Callee	X_ASI		6687999	0					
ANR	6690038	Identifier	X_ASI		6687999	0					
ANR	6690039	ArgumentList	insn		6687999	1					
ANR	6690040	Argument	insn		6687999	0					
ANR	6690041	Identifier	insn		6687999	0					
ANR	6690042	IfStatement	if ( name )		6687999	2					
ANR	6690043	Condition	name	847:26:15522:15525	6687999	0	True				
ANR	6690044	Identifier	name		6687999	0					
ANR	6690045	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%s"" , name )"	849:24:15553:15595	6687999	1	True				
ANR	6690046	CallExpression	"( * info -> fprintf_func ) ( stream , ""%s"" , name )"		6687999	0					
ANR	6690047	Callee	* info -> fprintf_func		6687999	0					
ANR	6690048	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690049	UnaryOperator	*		6687999	0					
ANR	6690050	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690051	Identifier	info		6687999	0					
ANR	6690052	Identifier	fprintf_func		6687999	1					
ANR	6690053	ArgumentList	stream		6687999	1					
ANR	6690054	Argument	stream		6687999	0					
ANR	6690055	Identifier	stream		6687999	0					
ANR	6690056	Argument	"""%s"""		6687999	1					
ANR	6690057	PrimaryExpression	"""%s"""		6687999	0					
ANR	6690058	Argument	name		6687999	2					
ANR	6690059	Identifier	name		6687999	0					
ANR	6690060	ElseStatement	else		6687999	0					
ANR	6690061	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""(%ld)"" , X_ASI ( insn ) )"	853:24:15650:15703	6687999	0	True				
ANR	6690062	CallExpression	"( * info -> fprintf_func ) ( stream , ""(%ld)"" , X_ASI ( insn ) )"		6687999	0					
ANR	6690063	Callee	* info -> fprintf_func		6687999	0					
ANR	6690064	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690065	UnaryOperator	*		6687999	0					
ANR	6690066	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690067	Identifier	info		6687999	0					
ANR	6690068	Identifier	fprintf_func		6687999	1					
ANR	6690069	ArgumentList	stream		6687999	1					
ANR	6690070	Argument	stream		6687999	0					
ANR	6690071	Identifier	stream		6687999	0					
ANR	6690072	Argument	"""(%ld)"""		6687999	1					
ANR	6690073	PrimaryExpression	"""(%ld)"""		6687999	0					
ANR	6690074	Argument	X_ASI ( insn )		6687999	2					
ANR	6690075	CallExpression	X_ASI ( insn )		6687999	0					
ANR	6690076	Callee	X_ASI		6687999	0					
ANR	6690077	Identifier	X_ASI		6687999	0					
ANR	6690078	ArgumentList	insn		6687999	1					
ANR	6690079	Argument	insn		6687999	0					
ANR	6690080	Identifier	insn		6687999	0					
ANR	6690081	BreakStatement	break ;	855:22:15728:15733	6687999	3	True				
ANR	6690082	Label	case 'C' :	861:18:15779:15787	6687999	253	True				
ANR	6690083	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%csr"" )"	863:20:15810:15849	6687999	254	True				
ANR	6690084	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%csr"" )"		6687999	0					
ANR	6690085	Callee	* info -> fprintf_func		6687999	0					
ANR	6690086	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690087	UnaryOperator	*		6687999	0					
ANR	6690088	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690089	Identifier	info		6687999	0					
ANR	6690090	Identifier	fprintf_func		6687999	1					
ANR	6690091	ArgumentList	stream		6687999	1					
ANR	6690092	Argument	stream		6687999	0					
ANR	6690093	Identifier	stream		6687999	0					
ANR	6690094	Argument	"""%%csr"""		6687999	1					
ANR	6690095	PrimaryExpression	"""%%csr"""		6687999	0					
ANR	6690096	BreakStatement	break ;	865:20:15872:15877	6687999	255	True				
ANR	6690097	Label	case 'F' :	869:18:15900:15908	6687999	256	True				
ANR	6690098	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%fsr"" )"	871:20:15931:15970	6687999	257	True				
ANR	6690099	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%fsr"" )"		6687999	0					
ANR	6690100	Callee	* info -> fprintf_func		6687999	0					
ANR	6690101	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690102	UnaryOperator	*		6687999	0					
ANR	6690103	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690104	Identifier	info		6687999	0					
ANR	6690105	Identifier	fprintf_func		6687999	1					
ANR	6690106	ArgumentList	stream		6687999	1					
ANR	6690107	Argument	stream		6687999	0					
ANR	6690108	Identifier	stream		6687999	0					
ANR	6690109	Argument	"""%%fsr"""		6687999	1					
ANR	6690110	PrimaryExpression	"""%%fsr"""		6687999	0					
ANR	6690111	BreakStatement	break ;	873:20:15993:15998	6687999	258	True				
ANR	6690112	Label	case 'p' :	877:18:16021:16029	6687999	259	True				
ANR	6690113	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%psr"" )"	879:20:16052:16091	6687999	260	True				
ANR	6690114	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%psr"" )"		6687999	0					
ANR	6690115	Callee	* info -> fprintf_func		6687999	0					
ANR	6690116	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690117	UnaryOperator	*		6687999	0					
ANR	6690118	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690119	Identifier	info		6687999	0					
ANR	6690120	Identifier	fprintf_func		6687999	1					
ANR	6690121	ArgumentList	stream		6687999	1					
ANR	6690122	Argument	stream		6687999	0					
ANR	6690123	Identifier	stream		6687999	0					
ANR	6690124	Argument	"""%%psr"""		6687999	1					
ANR	6690125	PrimaryExpression	"""%%psr"""		6687999	0					
ANR	6690126	BreakStatement	break ;	881:20:16114:16119	6687999	261	True				
ANR	6690127	Label	case 'q' :	885:18:16142:16150	6687999	262	True				
ANR	6690128	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%fq"" )"	887:20:16173:16211	6687999	263	True				
ANR	6690129	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%fq"" )"		6687999	0					
ANR	6690130	Callee	* info -> fprintf_func		6687999	0					
ANR	6690131	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690132	UnaryOperator	*		6687999	0					
ANR	6690133	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690134	Identifier	info		6687999	0					
ANR	6690135	Identifier	fprintf_func		6687999	1					
ANR	6690136	ArgumentList	stream		6687999	1					
ANR	6690137	Argument	stream		6687999	0					
ANR	6690138	Identifier	stream		6687999	0					
ANR	6690139	Argument	"""%%fq"""		6687999	1					
ANR	6690140	PrimaryExpression	"""%%fq"""		6687999	0					
ANR	6690141	BreakStatement	break ;	889:20:16234:16239	6687999	264	True				
ANR	6690142	Label	case 'Q' :	893:18:16262:16270	6687999	265	True				
ANR	6690143	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%cq"" )"	895:20:16293:16331	6687999	266	True				
ANR	6690144	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%cq"" )"		6687999	0					
ANR	6690145	Callee	* info -> fprintf_func		6687999	0					
ANR	6690146	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690147	UnaryOperator	*		6687999	0					
ANR	6690148	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690149	Identifier	info		6687999	0					
ANR	6690150	Identifier	fprintf_func		6687999	1					
ANR	6690151	ArgumentList	stream		6687999	1					
ANR	6690152	Argument	stream		6687999	0					
ANR	6690153	Identifier	stream		6687999	0					
ANR	6690154	Argument	"""%%cq"""		6687999	1					
ANR	6690155	PrimaryExpression	"""%%cq"""		6687999	0					
ANR	6690156	BreakStatement	break ;	897:20:16354:16359	6687999	267	True				
ANR	6690157	Label	case 't' :	901:18:16382:16390	6687999	268	True				
ANR	6690158	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%tbr"" )"	903:20:16413:16452	6687999	269	True				
ANR	6690159	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%tbr"" )"		6687999	0					
ANR	6690160	Callee	* info -> fprintf_func		6687999	0					
ANR	6690161	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690162	UnaryOperator	*		6687999	0					
ANR	6690163	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690164	Identifier	info		6687999	0					
ANR	6690165	Identifier	fprintf_func		6687999	1					
ANR	6690166	ArgumentList	stream		6687999	1					
ANR	6690167	Argument	stream		6687999	0					
ANR	6690168	Identifier	stream		6687999	0					
ANR	6690169	Argument	"""%%tbr"""		6687999	1					
ANR	6690170	PrimaryExpression	"""%%tbr"""		6687999	0					
ANR	6690171	BreakStatement	break ;	905:20:16475:16480	6687999	270	True				
ANR	6690172	Label	case 'w' :	909:18:16503:16511	6687999	271	True				
ANR	6690173	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%wim"" )"	911:20:16534:16573	6687999	272	True				
ANR	6690174	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%wim"" )"		6687999	0					
ANR	6690175	Callee	* info -> fprintf_func		6687999	0					
ANR	6690176	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690177	UnaryOperator	*		6687999	0					
ANR	6690178	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690179	Identifier	info		6687999	0					
ANR	6690180	Identifier	fprintf_func		6687999	1					
ANR	6690181	ArgumentList	stream		6687999	1					
ANR	6690182	Argument	stream		6687999	0					
ANR	6690183	Identifier	stream		6687999	0					
ANR	6690184	Argument	"""%%wim"""		6687999	1					
ANR	6690185	PrimaryExpression	"""%%wim"""		6687999	0					
ANR	6690186	BreakStatement	break ;	913:20:16596:16601	6687999	273	True				
ANR	6690187	Label	case 'x' :	917:18:16624:16632	6687999	274	True				
ANR	6690188	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%ld"" , ( ( X_LDST_I ( insn ) << 8 ) + X_ASI ( insn ) ) )"	919:20:16655:16822	6687999	275	True				
ANR	6690189	CallExpression	"( * info -> fprintf_func ) ( stream , ""%ld"" , ( ( X_LDST_I ( insn ) << 8 ) + X_ASI ( insn ) ) )"		6687999	0					
ANR	6690190	Callee	* info -> fprintf_func		6687999	0					
ANR	6690191	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690192	UnaryOperator	*		6687999	0					
ANR	6690193	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690194	Identifier	info		6687999	0					
ANR	6690195	Identifier	fprintf_func		6687999	1					
ANR	6690196	ArgumentList	stream		6687999	1					
ANR	6690197	Argument	stream		6687999	0					
ANR	6690198	Identifier	stream		6687999	0					
ANR	6690199	Argument	"""%ld"""		6687999	1					
ANR	6690200	PrimaryExpression	"""%ld"""		6687999	0					
ANR	6690201	Argument	( X_LDST_I ( insn ) << 8 ) + X_ASI ( insn )		6687999	2					
ANR	6690202	AdditiveExpression	( X_LDST_I ( insn ) << 8 ) + X_ASI ( insn )		6687999	0		+			
ANR	6690203	ShiftExpression	X_LDST_I ( insn ) << 8		6687999	0		<<			
ANR	6690204	CallExpression	X_LDST_I ( insn )		6687999	0					
ANR	6690205	Callee	X_LDST_I		6687999	0					
ANR	6690206	Identifier	X_LDST_I		6687999	0					
ANR	6690207	ArgumentList	insn		6687999	1					
ANR	6690208	Argument	insn		6687999	0					
ANR	6690209	Identifier	insn		6687999	0					
ANR	6690210	PrimaryExpression	8		6687999	1					
ANR	6690211	CallExpression	X_ASI ( insn )		6687999	1					
ANR	6690212	Callee	X_ASI		6687999	0					
ANR	6690213	Identifier	X_ASI		6687999	0					
ANR	6690214	ArgumentList	insn		6687999	1					
ANR	6690215	Argument	insn		6687999	0					
ANR	6690216	Identifier	insn		6687999	0					
ANR	6690217	BreakStatement	break ;	925:20:16845:16850	6687999	276	True				
ANR	6690218	Label	case 'y' :	929:18:16873:16881	6687999	277	True				
ANR	6690219	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%y"" )"	931:20:16904:16941	6687999	278	True				
ANR	6690220	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%y"" )"		6687999	0					
ANR	6690221	Callee	* info -> fprintf_func		6687999	0					
ANR	6690222	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690223	UnaryOperator	*		6687999	0					
ANR	6690224	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690225	Identifier	info		6687999	0					
ANR	6690226	Identifier	fprintf_func		6687999	1					
ANR	6690227	ArgumentList	stream		6687999	1					
ANR	6690228	Argument	stream		6687999	0					
ANR	6690229	Identifier	stream		6687999	0					
ANR	6690230	Argument	"""%%y"""		6687999	1					
ANR	6690231	PrimaryExpression	"""%%y"""		6687999	0					
ANR	6690232	BreakStatement	break ;	933:20:16964:16969	6687999	279	True				
ANR	6690233	Label	case 'u' :	937:18:16992:17000	6687999	280	True				
ANR	6690234	Label	case 'U' :	939:18:17021:17029	6687999	281	True				
ANR	6690235	CompoundStatement		943:22:17089:17141	6687999	282					
ANR	6690236	IdentifierDeclStatement	int val = * s == 'U' ? X_RS1 ( insn ) : X_RD ( insn ) ;	943:22:17077:17125	6687999	0	True				
ANR	6690237	IdentifierDecl	val = * s == 'U' ? X_RS1 ( insn ) : X_RD ( insn )		6687999	0					
ANR	6690238	IdentifierDeclType	int		6687999	0					
ANR	6690239	Identifier	val		6687999	1					
ANR	6690240	AssignmentExpression	val = * s == 'U' ? X_RS1 ( insn ) : X_RD ( insn )		6687999	2		=			
ANR	6690241	Identifier	val		6687999	0					
ANR	6690242	ConditionalExpression	* s == 'U' ? X_RS1 ( insn ) : X_RD ( insn )		6687999	1					
ANR	6690243	Condition	* s == 'U'		6687999	0					
ANR	6690244	EqualityExpression	* s == 'U'		6687999	0		==			
ANR	6690245	UnaryOperationExpression	* s		6687999	0					
ANR	6690246	UnaryOperator	*		6687999	0					
ANR	6690247	Identifier	s		6687999	1					
ANR	6690248	PrimaryExpression	'U'		6687999	1					
ANR	6690249	CallExpression	X_RS1 ( insn )		6687999	1					
ANR	6690250	Callee	X_RS1		6687999	0					
ANR	6690251	Identifier	X_RS1		6687999	0					
ANR	6690252	ArgumentList	insn		6687999	1					
ANR	6690253	Argument	insn		6687999	0					
ANR	6690254	Identifier	insn		6687999	0					
ANR	6690255	CallExpression	X_RD ( insn )		6687999	2					
ANR	6690256	Callee	X_RD		6687999	0					
ANR	6690257	Identifier	X_RD		6687999	0					
ANR	6690258	ArgumentList	insn		6687999	1					
ANR	6690259	Argument	insn		6687999	0					
ANR	6690260	Identifier	insn		6687999	0					
ANR	6690261	IdentifierDeclStatement	const char * name = sparc_decode_sparclet_cpreg ( val ) ;	945:22:17150:17202	6687999	1	True				
ANR	6690262	IdentifierDecl	* name = sparc_decode_sparclet_cpreg ( val )		6687999	0					
ANR	6690263	IdentifierDeclType	const char *		6687999	0					
ANR	6690264	Identifier	name		6687999	1					
ANR	6690265	AssignmentExpression	* name = sparc_decode_sparclet_cpreg ( val )		6687999	2		=			
ANR	6690266	Identifier	name		6687999	0					
ANR	6690267	CallExpression	sparc_decode_sparclet_cpreg ( val )		6687999	1					
ANR	6690268	Callee	sparc_decode_sparclet_cpreg		6687999	0					
ANR	6690269	Identifier	sparc_decode_sparclet_cpreg		6687999	0					
ANR	6690270	ArgumentList	val		6687999	1					
ANR	6690271	Argument	val		6687999	0					
ANR	6690272	Identifier	val		6687999	0					
ANR	6690273	IfStatement	if ( name )		6687999	2					
ANR	6690274	Condition	name	949:26:17233:17236	6687999	0	True				
ANR	6690275	Identifier	name		6687999	0					
ANR	6690276	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%s"" , name )"	951:24:17264:17306	6687999	1	True				
ANR	6690277	CallExpression	"( * info -> fprintf_func ) ( stream , ""%s"" , name )"		6687999	0					
ANR	6690278	Callee	* info -> fprintf_func		6687999	0					
ANR	6690279	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690280	UnaryOperator	*		6687999	0					
ANR	6690281	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690282	Identifier	info		6687999	0					
ANR	6690283	Identifier	fprintf_func		6687999	1					
ANR	6690284	ArgumentList	stream		6687999	1					
ANR	6690285	Argument	stream		6687999	0					
ANR	6690286	Identifier	stream		6687999	0					
ANR	6690287	Argument	"""%s"""		6687999	1					
ANR	6690288	PrimaryExpression	"""%s"""		6687999	0					
ANR	6690289	Argument	name		6687999	2					
ANR	6690290	Identifier	name		6687999	0					
ANR	6690291	ElseStatement	else		6687999	0					
ANR	6690292	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""%%cpreg(%d)"" , val )"	955:24:17361:17411	6687999	0	True				
ANR	6690293	CallExpression	"( * info -> fprintf_func ) ( stream , ""%%cpreg(%d)"" , val )"		6687999	0					
ANR	6690294	Callee	* info -> fprintf_func		6687999	0					
ANR	6690295	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690296	UnaryOperator	*		6687999	0					
ANR	6690297	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690298	Identifier	info		6687999	0					
ANR	6690299	Identifier	fprintf_func		6687999	1					
ANR	6690300	ArgumentList	stream		6687999	1					
ANR	6690301	Argument	stream		6687999	0					
ANR	6690302	Identifier	stream		6687999	0					
ANR	6690303	Argument	"""%%cpreg(%d)"""		6687999	1					
ANR	6690304	PrimaryExpression	"""%%cpreg(%d)"""		6687999	0					
ANR	6690305	Argument	val		6687999	2					
ANR	6690306	Identifier	val		6687999	0					
ANR	6690307	BreakStatement	break ;	957:22:17436:17441	6687999	3	True				
ANR	6690308	IfStatement	if ( imm_ored_to_rs1 || imm_added_to_rs1 )		6687999	9					
ANR	6690309	Condition	imm_ored_to_rs1 || imm_added_to_rs1	981:14:17891:17925	6687999	0	True				
ANR	6690310	OrExpression	imm_ored_to_rs1 || imm_added_to_rs1		6687999	0		||			
ANR	6690311	Identifier	imm_ored_to_rs1		6687999	0					
ANR	6690312	Identifier	imm_added_to_rs1		6687999	1					
ANR	6690313	CompoundStatement		985:14:17937:17948	6687999	1					
ANR	6690314	IdentifierDeclStatement	unsigned long prev_insn ;	985:14:17958:17981	6687999	0	True				
ANR	6690315	IdentifierDecl	prev_insn		6687999	0					
ANR	6690316	IdentifierDeclType	unsigned long		6687999	0					
ANR	6690317	Identifier	prev_insn		6687999	1					
ANR	6690318	IdentifierDeclStatement	int errcode ;	987:14:17998:18009	6687999	1	True				
ANR	6690319	IdentifierDecl	errcode		6687999	0					
ANR	6690320	IdentifierDeclType	int		6687999	0					
ANR	6690321	Identifier	errcode		6687999	1					
ANR	6690322	IfStatement	if ( memaddr >= 4 )		6687999	2					
ANR	6690323	Condition	memaddr >= 4	991:18:18032:18043	6687999	0	True				
ANR	6690324	RelationalExpression	memaddr >= 4		6687999	0		>=			
ANR	6690325	Identifier	memaddr		6687999	0					
ANR	6690326	PrimaryExpression	4		6687999	1					
ANR	6690327	ExpressionStatement	"errcode = ( * info -> read_memory_func ) ( memaddr - 4 , buffer , sizeof ( buffer ) , info )"	993:16:18063:18181	6687999	1	True				
ANR	6690328	AssignmentExpression	"errcode = ( * info -> read_memory_func ) ( memaddr - 4 , buffer , sizeof ( buffer ) , info )"		6687999	0		=			
ANR	6690329	Identifier	errcode		6687999	0					
ANR	6690330	CallExpression	"( * info -> read_memory_func ) ( memaddr - 4 , buffer , sizeof ( buffer ) , info )"		6687999	1					
ANR	6690331	Callee	* info -> read_memory_func		6687999	0					
ANR	6690332	UnaryOperationExpression	* info -> read_memory_func		6687999	0					
ANR	6690333	UnaryOperator	*		6687999	0					
ANR	6690334	PtrMemberAccess	info -> read_memory_func		6687999	1					
ANR	6690335	Identifier	info		6687999	0					
ANR	6690336	Identifier	read_memory_func		6687999	1					
ANR	6690337	ArgumentList	memaddr - 4		6687999	1					
ANR	6690338	Argument	memaddr - 4		6687999	0					
ANR	6690339	AdditiveExpression	memaddr - 4		6687999	0		-			
ANR	6690340	Identifier	memaddr		6687999	0					
ANR	6690341	PrimaryExpression	4		6687999	1					
ANR	6690342	Argument	buffer		6687999	1					
ANR	6690343	Identifier	buffer		6687999	0					
ANR	6690344	Argument	sizeof ( buffer )		6687999	2					
ANR	6690345	SizeofExpression	sizeof ( buffer )		6687999	0					
ANR	6690346	Sizeof	sizeof		6687999	0					
ANR	6690347	SizeofOperand	buffer		6687999	1					
ANR	6690348	Argument	info		6687999	3					
ANR	6690349	Identifier	info		6687999	0					
ANR	6690350	ElseStatement	else		6687999	0					
ANR	6690351	ExpressionStatement	errcode = 1	1001:16:18220:18231	6687999	0	True				
ANR	6690352	AssignmentExpression	errcode = 1		6687999	0		=			
ANR	6690353	Identifier	errcode		6687999	0					
ANR	6690354	PrimaryExpression	1		6687999	1					
ANR	6690355	ExpressionStatement	prev_insn = getword ( buffer )	1005:14:18250:18278	6687999	3	True				
ANR	6690356	AssignmentExpression	prev_insn = getword ( buffer )		6687999	0		=			
ANR	6690357	Identifier	prev_insn		6687999	0					
ANR	6690358	CallExpression	getword ( buffer )		6687999	1					
ANR	6690359	Callee	getword		6687999	0					
ANR	6690360	Identifier	getword		6687999	0					
ANR	6690361	ArgumentList	buffer		6687999	1					
ANR	6690362	Argument	buffer		6687999	0					
ANR	6690363	Identifier	buffer		6687999	0					
ANR	6690364	IfStatement	if ( errcode == 0 )		6687999	4					
ANR	6690365	Condition	errcode == 0	1009:18:18301:18312	6687999	0	True				
ANR	6690366	EqualityExpression	errcode == 0		6687999	0		==			
ANR	6690367	Identifier	errcode		6687999	0					
ANR	6690368	PrimaryExpression	0		6687999	1					
ANR	6690369	CompoundStatement		1009:16:18271:18271	6687999	1					
ANR	6690370	IfStatement	if ( is_delayed_branch ( prev_insn ) )		6687999	0					
ANR	6690371	Condition	is_delayed_branch ( prev_insn )	1029:22:18681:18709	6687999	0	True				
ANR	6690372	CallExpression	is_delayed_branch ( prev_insn )		6687999	0					
ANR	6690373	Callee	is_delayed_branch		6687999	0					
ANR	6690374	Identifier	is_delayed_branch		6687999	0					
ANR	6690375	ArgumentList	prev_insn		6687999	1					
ANR	6690376	Argument	prev_insn		6687999	0					
ANR	6690377	Identifier	prev_insn		6687999	0					
ANR	6690378	CompoundStatement		1029:20:18672:18672	6687999	1					
ANR	6690379	IfStatement	if ( memaddr >= 8 )		6687999	0					
ANR	6690380	Condition	memaddr >= 8	1033:26:18762:18773	6687999	0	True				
ANR	6690381	RelationalExpression	memaddr >= 8		6687999	0		>=			
ANR	6690382	Identifier	memaddr		6687999	0					
ANR	6690383	PrimaryExpression	8		6687999	1					
ANR	6690384	ExpressionStatement	"errcode = ( * info -> read_memory_func ) ( memaddr - 8 , buffer , sizeof ( buffer ) , info )"	1035:24:18801:18908	6687999	1	True				
ANR	6690385	AssignmentExpression	"errcode = ( * info -> read_memory_func ) ( memaddr - 8 , buffer , sizeof ( buffer ) , info )"		6687999	0		=			
ANR	6690386	Identifier	errcode		6687999	0					
ANR	6690387	CallExpression	"( * info -> read_memory_func ) ( memaddr - 8 , buffer , sizeof ( buffer ) , info )"		6687999	1					
ANR	6690388	Callee	* info -> read_memory_func		6687999	0					
ANR	6690389	UnaryOperationExpression	* info -> read_memory_func		6687999	0					
ANR	6690390	UnaryOperator	*		6687999	0					
ANR	6690391	PtrMemberAccess	info -> read_memory_func		6687999	1					
ANR	6690392	Identifier	info		6687999	0					
ANR	6690393	Identifier	read_memory_func		6687999	1					
ANR	6690394	ArgumentList	memaddr - 8		6687999	1					
ANR	6690395	Argument	memaddr - 8		6687999	0					
ANR	6690396	AdditiveExpression	memaddr - 8		6687999	0		-			
ANR	6690397	Identifier	memaddr		6687999	0					
ANR	6690398	PrimaryExpression	8		6687999	1					
ANR	6690399	Argument	buffer		6687999	1					
ANR	6690400	Identifier	buffer		6687999	0					
ANR	6690401	Argument	sizeof ( buffer )		6687999	2					
ANR	6690402	SizeofExpression	sizeof ( buffer )		6687999	0					
ANR	6690403	Sizeof	sizeof		6687999	0					
ANR	6690404	SizeofOperand	buffer		6687999	1					
ANR	6690405	Argument	info		6687999	3					
ANR	6690406	Identifier	info		6687999	0					
ANR	6690407	ElseStatement	else		6687999	0					
ANR	6690408	ExpressionStatement	errcode = 1	1041:24:18963:18974	6687999	0	True				
ANR	6690409	AssignmentExpression	errcode = 1		6687999	0		=			
ANR	6690410	Identifier	errcode		6687999	0					
ANR	6690411	PrimaryExpression	1		6687999	1					
ANR	6690412	ExpressionStatement	prev_insn = getword ( buffer )	1045:22:19001:19029	6687999	1	True				
ANR	6690413	AssignmentExpression	prev_insn = getword ( buffer )		6687999	0		=			
ANR	6690414	Identifier	prev_insn		6687999	0					
ANR	6690415	CallExpression	getword ( buffer )		6687999	1					
ANR	6690416	Callee	getword		6687999	0					
ANR	6690417	Identifier	getword		6687999	0					
ANR	6690418	ArgumentList	buffer		6687999	1					
ANR	6690419	Argument	buffer		6687999	0					
ANR	6690420	Identifier	buffer		6687999	0					
ANR	6690421	IfStatement	if ( errcode == 0 )		6687999	5					
ANR	6690422	Condition	errcode == 0	1057:18:19225:19236	6687999	0	True				
ANR	6690423	EqualityExpression	errcode == 0		6687999	0		==			
ANR	6690424	Identifier	errcode		6687999	0					
ANR	6690425	PrimaryExpression	0		6687999	1					
ANR	6690426	CompoundStatement		1057:16:19195:19195	6687999	1					
ANR	6690427	IfStatement	if ( ( prev_insn & 0xc1c00000 ) == 0x01000000 && X_RD ( prev_insn ) == X_RS1 ( insn ) )		6687999	0					
ANR	6690428	Condition	( prev_insn & 0xc1c00000 ) == 0x01000000 && X_RD ( prev_insn ) == X_RS1 ( insn )	1063:22:19341:19437	6687999	0	True				
ANR	6690429	AndExpression	( prev_insn & 0xc1c00000 ) == 0x01000000 && X_RD ( prev_insn ) == X_RS1 ( insn )		6687999	0		&&			
ANR	6690430	EqualityExpression	( prev_insn & 0xc1c00000 ) == 0x01000000		6687999	0		==			
ANR	6690431	BitAndExpression	prev_insn & 0xc1c00000		6687999	0		&			
ANR	6690432	Identifier	prev_insn		6687999	0					
ANR	6690433	PrimaryExpression	0xc1c00000		6687999	1					
ANR	6690434	PrimaryExpression	0x01000000		6687999	1					
ANR	6690435	EqualityExpression	X_RD ( prev_insn ) == X_RS1 ( insn )		6687999	1		==			
ANR	6690436	CallExpression	X_RD ( prev_insn )		6687999	0					
ANR	6690437	Callee	X_RD		6687999	0					
ANR	6690438	Identifier	X_RD		6687999	0					
ANR	6690439	ArgumentList	prev_insn		6687999	1					
ANR	6690440	Argument	prev_insn		6687999	0					
ANR	6690441	Identifier	prev_insn		6687999	0					
ANR	6690442	CallExpression	X_RS1 ( insn )		6687999	1					
ANR	6690443	Callee	X_RS1		6687999	0					
ANR	6690444	Identifier	X_RS1		6687999	0					
ANR	6690445	ArgumentList	insn		6687999	1					
ANR	6690446	Argument	insn		6687999	0					
ANR	6690447	Identifier	insn		6687999	0					
ANR	6690448	CompoundStatement		1065:20:19400:19400	6687999	1					
ANR	6690449	ExpressionStatement	"( * info -> fprintf_func ) ( stream , ""\\t! "" )"	1069:22:19486:19524	6687999	0	True				
ANR	6690450	CallExpression	"( * info -> fprintf_func ) ( stream , ""\\t! "" )"		6687999	0					
ANR	6690451	Callee	* info -> fprintf_func		6687999	0					
ANR	6690452	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690453	UnaryOperator	*		6687999	0					
ANR	6690454	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690455	Identifier	info		6687999	0					
ANR	6690456	Identifier	fprintf_func		6687999	1					
ANR	6690457	ArgumentList	stream		6687999	1					
ANR	6690458	Argument	stream		6687999	0					
ANR	6690459	Identifier	stream		6687999	0					
ANR	6690460	Argument	"""\\t! """		6687999	1					
ANR	6690461	PrimaryExpression	"""\\t! """		6687999	0					
ANR	6690462	ExpressionStatement	info -> target = ( ( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( prev_insn ) << 10 ) )	1071:22:19549:19674	6687999	1	True				
ANR	6690463	AssignmentExpression	info -> target = ( ( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( prev_insn ) << 10 ) )		6687999	0		=			
ANR	6690464	PtrMemberAccess	info -> target		6687999	0					
ANR	6690465	Identifier	info		6687999	0					
ANR	6690466	Identifier	target		6687999	1					
ANR	6690467	BitAndExpression	( unsigned ) 0xFFFFFFFF & ( ( int ) X_IMM22 ( prev_insn ) << 10 )		6687999	1		&			
ANR	6690468	CastExpression	( unsigned ) 0xFFFFFFFF		6687999	0					
ANR	6690469	CastTarget	unsigned		6687999	0					
ANR	6690470	PrimaryExpression	0xFFFFFFFF		6687999	1					
ANR	6690471	ShiftExpression	( int ) X_IMM22 ( prev_insn ) << 10		6687999	1		<<			
ANR	6690472	CastExpression	( int ) X_IMM22 ( prev_insn )		6687999	0					
ANR	6690473	CastTarget	int		6687999	0					
ANR	6690474	CallExpression	X_IMM22 ( prev_insn )		6687999	1					
ANR	6690475	Callee	X_IMM22		6687999	0					
ANR	6690476	Identifier	X_IMM22		6687999	0					
ANR	6690477	ArgumentList	prev_insn		6687999	1					
ANR	6690478	Argument	prev_insn		6687999	0					
ANR	6690479	Identifier	prev_insn		6687999	0					
ANR	6690480	PrimaryExpression	10		6687999	1					
ANR	6690481	IfStatement	if ( imm_added_to_rs1 )		6687999	2					
ANR	6690482	Condition	imm_added_to_rs1	1077:26:19703:19718	6687999	0	True				
ANR	6690483	Identifier	imm_added_to_rs1		6687999	0					
ANR	6690484	ExpressionStatement	"info -> target += X_SIMM ( insn , 13 )"	1079:24:19746:19779	6687999	1	True				
ANR	6690485	AssignmentExpression	"info -> target += X_SIMM ( insn , 13 )"		6687999	0		+=			
ANR	6690486	PtrMemberAccess	info -> target		6687999	0					
ANR	6690487	Identifier	info		6687999	0					
ANR	6690488	Identifier	target		6687999	1					
ANR	6690489	CallExpression	"X_SIMM ( insn , 13 )"		6687999	1					
ANR	6690490	Callee	X_SIMM		6687999	0					
ANR	6690491	Identifier	X_SIMM		6687999	0					
ANR	6690492	ArgumentList	insn		6687999	1					
ANR	6690493	Argument	insn		6687999	0					
ANR	6690494	Identifier	insn		6687999	0					
ANR	6690495	Argument	13		6687999	1					
ANR	6690496	PrimaryExpression	13		6687999	0					
ANR	6690497	ElseStatement	else		6687999	0					
ANR	6690498	ExpressionStatement	"info -> target |= X_SIMM ( insn , 13 )"	1083:24:19834:19867	6687999	0	True				
ANR	6690499	AssignmentExpression	"info -> target |= X_SIMM ( insn , 13 )"		6687999	0		|=			
ANR	6690500	PtrMemberAccess	info -> target		6687999	0					
ANR	6690501	Identifier	info		6687999	0					
ANR	6690502	Identifier	target		6687999	1					
ANR	6690503	CallExpression	"X_SIMM ( insn , 13 )"		6687999	1					
ANR	6690504	Callee	X_SIMM		6687999	0					
ANR	6690505	Identifier	X_SIMM		6687999	0					
ANR	6690506	ArgumentList	insn		6687999	1					
ANR	6690507	Argument	insn		6687999	0					
ANR	6690508	Identifier	insn		6687999	0					
ANR	6690509	Argument	13		6687999	1					
ANR	6690510	PrimaryExpression	13		6687999	0					
ANR	6690511	ExpressionStatement	"( * info -> print_address_func ) ( info -> target , info )"	1085:22:19892:19940	6687999	3	True				
ANR	6690512	CallExpression	"( * info -> print_address_func ) ( info -> target , info )"		6687999	0					
ANR	6690513	Callee	* info -> print_address_func		6687999	0					
ANR	6690514	UnaryOperationExpression	* info -> print_address_func		6687999	0					
ANR	6690515	UnaryOperator	*		6687999	0					
ANR	6690516	PtrMemberAccess	info -> print_address_func		6687999	1					
ANR	6690517	Identifier	info		6687999	0					
ANR	6690518	Identifier	print_address_func		6687999	1					
ANR	6690519	ArgumentList	info -> target		6687999	1					
ANR	6690520	Argument	info -> target		6687999	0					
ANR	6690521	PtrMemberAccess	info -> target		6687999	0					
ANR	6690522	Identifier	info		6687999	0					
ANR	6690523	Identifier	target		6687999	1					
ANR	6690524	Argument	info		6687999	1					
ANR	6690525	Identifier	info		6687999	0					
ANR	6690526	ExpressionStatement	info -> insn_type = dis_dref	1087:22:19965:19991	6687999	4	True				
ANR	6690527	AssignmentExpression	info -> insn_type = dis_dref		6687999	0		=			
ANR	6690528	PtrMemberAccess	info -> insn_type		6687999	0					
ANR	6690529	Identifier	info		6687999	0					
ANR	6690530	Identifier	insn_type		6687999	1					
ANR	6690531	Identifier	dis_dref		6687999	1					
ANR	6690532	ExpressionStatement	info -> data_size = 4	1089:22:20016:20035	6687999	5	True				
ANR	6690533	AssignmentExpression	info -> data_size = 4		6687999	0		=			
ANR	6690534	PtrMemberAccess	info -> data_size		6687999	0					
ANR	6690535	Identifier	info		6687999	0					
ANR	6690536	Identifier	data_size		6687999	1					
ANR	6690537	PrimaryExpression	4		6687999	1					
ANR	6690538	IfStatement	if ( opcode -> flags & ( F_UNBR | F_CONDBR | F_JSR ) )		6687999	10					
ANR	6690539	Condition	opcode -> flags & ( F_UNBR | F_CONDBR | F_JSR )	1099:14:20127:20165	6687999	0	True				
ANR	6690540	BitAndExpression	opcode -> flags & ( F_UNBR | F_CONDBR | F_JSR )		6687999	0		&			
ANR	6690541	PtrMemberAccess	opcode -> flags		6687999	0					
ANR	6690542	Identifier	opcode		6687999	0					
ANR	6690543	Identifier	flags		6687999	1					
ANR	6690544	InclusiveOrExpression	F_UNBR | F_CONDBR | F_JSR		6687999	1		|			
ANR	6690545	Identifier	F_UNBR		6687999	0					
ANR	6690546	InclusiveOrExpression	F_CONDBR | F_JSR		6687999	1		|			
ANR	6690547	Identifier	F_CONDBR		6687999	0					
ANR	6690548	Identifier	F_JSR		6687999	1					
ANR	6690549	CompoundStatement		1099:12:20120:20120	6687999	1					
ANR	6690550	IfStatement	if ( opcode -> flags & F_UNBR )		6687999	0					
ANR	6690551	Condition	opcode -> flags & F_UNBR	1105:18:20259:20280	6687999	0	True				
ANR	6690552	BitAndExpression	opcode -> flags & F_UNBR		6687999	0		&			
ANR	6690553	PtrMemberAccess	opcode -> flags		6687999	0					
ANR	6690554	Identifier	opcode		6687999	0					
ANR	6690555	Identifier	flags		6687999	1					
ANR	6690556	Identifier	F_UNBR		6687999	1					
ANR	6690557	ExpressionStatement	info -> insn_type = dis_branch	1107:16:20300:20328	6687999	1	True				
ANR	6690558	AssignmentExpression	info -> insn_type = dis_branch		6687999	0		=			
ANR	6690559	PtrMemberAccess	info -> insn_type		6687999	0					
ANR	6690560	Identifier	info		6687999	0					
ANR	6690561	Identifier	insn_type		6687999	1					
ANR	6690562	Identifier	dis_branch		6687999	1					
ANR	6690563	IfStatement	if ( opcode -> flags & F_CONDBR )		6687999	1					
ANR	6690564	Condition	opcode -> flags & F_CONDBR	1109:18:20349:20372	6687999	0	True				
ANR	6690565	BitAndExpression	opcode -> flags & F_CONDBR		6687999	0		&			
ANR	6690566	PtrMemberAccess	opcode -> flags		6687999	0					
ANR	6690567	Identifier	opcode		6687999	0					
ANR	6690568	Identifier	flags		6687999	1					
ANR	6690569	Identifier	F_CONDBR		6687999	1					
ANR	6690570	ExpressionStatement	info -> insn_type = dis_condbranch	1111:16:20392:20424	6687999	1	True				
ANR	6690571	AssignmentExpression	info -> insn_type = dis_condbranch		6687999	0		=			
ANR	6690572	PtrMemberAccess	info -> insn_type		6687999	0					
ANR	6690573	Identifier	info		6687999	0					
ANR	6690574	Identifier	insn_type		6687999	1					
ANR	6690575	Identifier	dis_condbranch		6687999	1					
ANR	6690576	IfStatement	if ( opcode -> flags & F_JSR )		6687999	2					
ANR	6690577	Condition	opcode -> flags & F_JSR	1113:18:20445:20465	6687999	0	True				
ANR	6690578	BitAndExpression	opcode -> flags & F_JSR		6687999	0		&			
ANR	6690579	PtrMemberAccess	opcode -> flags		6687999	0					
ANR	6690580	Identifier	opcode		6687999	0					
ANR	6690581	Identifier	flags		6687999	1					
ANR	6690582	Identifier	F_JSR		6687999	1					
ANR	6690583	ExpressionStatement	info -> insn_type = dis_jsr	1115:16:20485:20510	6687999	1	True				
ANR	6690584	AssignmentExpression	info -> insn_type = dis_jsr		6687999	0		=			
ANR	6690585	PtrMemberAccess	info -> insn_type		6687999	0					
ANR	6690586	Identifier	info		6687999	0					
ANR	6690587	Identifier	insn_type		6687999	1					
ANR	6690588	Identifier	dis_jsr		6687999	1					
ANR	6690589	IfStatement	if ( opcode -> flags & F_DELAYED )		6687999	3					
ANR	6690590	Condition	opcode -> flags & F_DELAYED	1117:18:20531:20555	6687999	0	True				
ANR	6690591	BitAndExpression	opcode -> flags & F_DELAYED		6687999	0		&			
ANR	6690592	PtrMemberAccess	opcode -> flags		6687999	0					
ANR	6690593	Identifier	opcode		6687999	0					
ANR	6690594	Identifier	flags		6687999	1					
ANR	6690595	Identifier	F_DELAYED		6687999	1					
ANR	6690596	ExpressionStatement	info -> branch_delay_insns = 1	1119:16:20575:20603	6687999	1	True				
ANR	6690597	AssignmentExpression	info -> branch_delay_insns = 1		6687999	0		=			
ANR	6690598	PtrMemberAccess	info -> branch_delay_insns		6687999	0					
ANR	6690599	Identifier	info		6687999	0					
ANR	6690600	Identifier	branch_delay_insns		6687999	1					
ANR	6690601	PrimaryExpression	1		6687999	1					
ANR	6690602	ReturnStatement	return sizeof ( buffer ) ;	1125:10:20633:20655	6687999	11	True				
ANR	6690603	SizeofExpression	sizeof ( buffer )		6687999	0					
ANR	6690604	Sizeof	sizeof		6687999	0					
ANR	6690605	SizeofOperand	buffer		6687999	1					
ANR	6690606	ExpressionStatement	info -> insn_type = dis_noninsn	1133:2:20680:20709	6687999	18	True				
ANR	6690607	AssignmentExpression	info -> insn_type = dis_noninsn		6687999	0		=			
ANR	6690608	PtrMemberAccess	info -> insn_type		6687999	0					
ANR	6690609	Identifier	info		6687999	0					
ANR	6690610	Identifier	insn_type		6687999	1					
ANR	6690611	Identifier	dis_noninsn		6687999	1					
ANR	6690612	ExpressionStatement	"( * info -> fprintf_func ) ( stream , _ ( ""unknown"" ) )"	1135:2:20759:20803	6687999	19	True				
ANR	6690613	CallExpression	"( * info -> fprintf_func ) ( stream , _ ( ""unknown"" ) )"		6687999	0					
ANR	6690614	Callee	* info -> fprintf_func		6687999	0					
ANR	6690615	UnaryOperationExpression	* info -> fprintf_func		6687999	0					
ANR	6690616	UnaryOperator	*		6687999	0					
ANR	6690617	PtrMemberAccess	info -> fprintf_func		6687999	1					
ANR	6690618	Identifier	info		6687999	0					
ANR	6690619	Identifier	fprintf_func		6687999	1					
ANR	6690620	ArgumentList	stream		6687999	1					
ANR	6690621	Argument	stream		6687999	0					
ANR	6690622	Identifier	stream		6687999	0					
ANR	6690623	Argument	"_ ( ""unknown"" )"		6687999	1					
ANR	6690624	CallExpression	"_ ( ""unknown"" )"		6687999	0					
ANR	6690625	Callee	_		6687999	0					
ANR	6690626	Identifier	_		6687999	0					
ANR	6690627	ArgumentList	"""unknown"""		6687999	1					
ANR	6690628	Argument	"""unknown"""		6687999	0					
ANR	6690629	PrimaryExpression	"""unknown"""		6687999	0					
ANR	6690630	ReturnStatement	return sizeof ( buffer ) ;	1137:2:20808:20830	6687999	20	True				
ANR	6690631	SizeofExpression	sizeof ( buffer )		6687999	0					
ANR	6690632	Sizeof	sizeof		6687999	0					
ANR	6690633	SizeofOperand	buffer		6687999	1					
ANR	6690634	Identifier	print_insn_sparc		6687999	1					
ANR	6690635	ParameterList	"bfd_vma memaddr , disassemble_info * info"		6687999	2					
ANR	6690636	Parameter	bfd_vma memaddr	1:18:18:32	6687999	0	True				
ANR	6690637	ParameterType	bfd_vma		6687999	0					
ANR	6690638	Identifier	memaddr		6687999	1					
ANR	6690639	Parameter	disassemble_info * info	1:35:35:56	6687999	1	True				
ANR	6690640	ParameterType	disassemble_info *		6687999	0					
ANR	6690641	Identifier	info		6687999	1					
ANR	6690642	CFGEntryNode	ENTRY		6687999		True				
ANR	6690643	CFGExitNode	EXIT		6687999		True				
ANR	6690644	Symbol	errcode		6687999						
ANR	6690645	Symbol	sparc_num_opcodes		6687999						
ANR	6690646	Symbol	X_DISP16		6687999						
ANR	6690647	Symbol	strchr		6687999						
ANR	6690648	Symbol	bfd_mach_sparc_sparclite		6687999						
ANR	6690649	Symbol	bfd_mach_sparc_v9b		6687999						
ANR	6690650	Symbol	bit		6687999						
ANR	6690651	Symbol	info -> fprintf_func		6687999						
ANR	6690652	Symbol	* opcode -> args		6687999						
ANR	6690653	Symbol	sparc_decode_prefetch		6687999						
ANR	6690654	Symbol	* v9a_asr_reg_names		6687999						
ANR	6690655	Symbol	X_DISP19		6687999						
ANR	6690656	Symbol	prev_insn		6687999						
ANR	6690657	Symbol	val		6687999						
ANR	6690658	Symbol	X_DISP22		6687999						
ANR	6690659	Symbol	* * opcode		6687999						
ANR	6690660	Symbol	current_arch_mask		6687999						
ANR	6690661	Symbol	F_DELAYED		6687999						
ANR	6690662	Symbol	* X_RD		6687999						
ANR	6690663	Symbol	opcode -> lose		6687999						
ANR	6690664	Symbol	status		6687999						
ANR	6690665	Symbol	op -> opcode		6687999						
ANR	6690666	Symbol	X_IMM		6687999						
ANR	6690667	Symbol	X_LDST_I		6687999						
ANR	6690668	Symbol	SEX		6687999						
ANR	6690669	Symbol	info -> branch_delay_insns		6687999						
ANR	6690670	Symbol	X_DISP30		6687999						
ANR	6690671	Symbol	info -> stream		6687999						
ANR	6690672	Symbol	compute_arch_mask		6687999						
ANR	6690673	Symbol	X_RD		6687999						
ANR	6690674	Symbol	opcode_hash_table		6687999						
ANR	6690675	Symbol	imm_ored_to_rs1		6687999						
ANR	6690676	Symbol	stream		6687999						
ANR	6690677	Symbol	opcodes_initialized		6687999						
ANR	6690678	Symbol	* X_RS1		6687999						
ANR	6690679	Symbol	printed_one		6687999						
ANR	6690680	Symbol	* info -> read_memory_func		6687999						
ANR	6690681	Symbol	_		6687999						
ANR	6690682	Symbol	malloc		6687999						
ANR	6690683	Symbol	imm_added_to_rs1		6687999						
ANR	6690684	Symbol	i		6687999						
ANR	6690685	Symbol	X_IMM22		6687999						
ANR	6690686	Symbol	info -> memory_error_func		6687999						
ANR	6690687	Symbol	sorted_opcodes		6687999						
ANR	6690688	Symbol	insn		6687999						
ANR	6690689	Symbol	X_SIMM		6687999						
ANR	6690690	Symbol	v9_hpriv_reg_names		6687999						
ANR	6690691	Symbol	s		6687999						
ANR	6690692	Symbol	current_mach		6687999						
ANR	6690693	Symbol	bfd_mach_sparc_v8plusa		6687999						
ANR	6690694	Symbol	* info		6687999						
ANR	6690695	Symbol	bfd_getl32		6687999						
ANR	6690696	Symbol	dis_branch		6687999						
ANR	6690697	Symbol	* sorted_opcodes		6687999						
ANR	6690698	Symbol	opcode -> args		6687999						
ANR	6690699	Symbol	* opcode		6687999						
ANR	6690700	Symbol	compare_opcodes		6687999						
ANR	6690701	Symbol	is_delayed_branch		6687999						
ANR	6690702	Symbol	* op		6687999						
ANR	6690703	Symbol	* v9_priv_reg_names		6687999						
ANR	6690704	Symbol	dis_jsr		6687999						
ANR	6690705	Symbol	dis_noninsn		6687999						
ANR	6690706	Symbol	* opcode_hash_table		6687999						
ANR	6690707	Symbol	info -> data_size		6687999						
ANR	6690708	Symbol	opcode		6687999						
ANR	6690709	Symbol	sparc_decode_membar		6687999						
ANR	6690710	Symbol	v9a_asr_reg_names		6687999						
ANR	6690711	Symbol	dis_nonbranch		6687999						
ANR	6690712	Symbol	opcode -> flags		6687999						
ANR	6690713	Symbol	sparc_decode_sparclet_cpreg		6687999						
ANR	6690714	Symbol	buffer		6687999						
ANR	6690715	Symbol	HASH_INSN		6687999						
ANR	6690716	Symbol	bfd_mach_sparc_v9		6687999						
ANR	6690717	Symbol	info		6687999						
ANR	6690718	Symbol	sparc_decode_asi_v9		6687999						
ANR	6690719	Symbol	opcode -> name		6687999						
ANR	6690720	Symbol	NULL		6687999						
ANR	6690721	Symbol	sparc_decode_asi_v8		6687999						
ANR	6690722	Symbol	* HASH_INSN		6687999						
ANR	6690723	Symbol	info -> endian		6687999						
ANR	6690724	Symbol	X_RS1		6687999						
ANR	6690725	Symbol	X_RS2		6687999						
ANR	6690726	Symbol	F_JSR		6687999						
ANR	6690727	Symbol	info -> read_memory_func		6687999						
ANR	6690728	Symbol	name		6687999						
ANR	6690729	Symbol	info -> insn_info_valid		6687999						
ANR	6690730	Symbol	* * info		6687999						
ANR	6690731	Symbol	memaddr		6687999						
ANR	6690732	Symbol	imm		6687999						
ANR	6690733	Symbol	X_MEMBAR		6687999						
ANR	6690734	Symbol	dis_dref		6687999						
ANR	6690735	Symbol	* v9_hpriv_reg_names		6687999						
ANR	6690736	Symbol	info -> target		6687999						
ANR	6690737	Symbol	BFD_ENDIAN_BIG		6687999						
ANR	6690738	Symbol	info -> print_address_func		6687999						
ANR	6690739	Symbol	F_UNBR		6687999						
ANR	6690740	Symbol	info -> insn_type		6687999						
ANR	6690741	Symbol	opcode -> architecture		6687999						
ANR	6690742	Symbol	mask		6687999						
ANR	6690743	Symbol	F_CONDBR		6687999						
ANR	6690744	Symbol	op		6687999						
ANR	6690745	Symbol	bfd_getb32		6687999						
ANR	6690746	Symbol	info -> mach		6687999						
ANR	6690747	Symbol	op -> next		6687999						
ANR	6690748	Symbol	sparc_opcodes		6687999						
ANR	6690749	Symbol	dis_condbranch		6687999						
ANR	6690750	Symbol	found_plus		6687999						
ANR	6690751	Symbol	v9_priv_reg_names		6687999						
ANR	6690752	Symbol	opcode -> match		6687999						
ANR	6690753	Symbol	* i		6687999						
ANR	6690754	Symbol	X_ASI		6687999						
ANR	6690755	Symbol	getword		6687999						
ANR	6690756	Symbol	* s		6687999						
