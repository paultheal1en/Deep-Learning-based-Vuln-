command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8848313	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vc1_decode_p_block_01_0.c								
ANR	8848314	Function	vc1_decode_p_block	1:0:0:4296							
ANR	8848315	FunctionDef	"vc1_decode_p_block (VC1Context * v , DCTELEM block [ 64 ] , int n , int mquant , int ttmb , int first_block , uint8_t * dst , int linesize , int skip_block)"		8848314	0					
ANR	8848316	CompoundStatement		5:0:186:4296	8848314	0					
ANR	8848317	IdentifierDeclStatement	MpegEncContext * s = & v -> s ;	7:4:193:218	8848314	0	True				
ANR	8848318	IdentifierDecl	* s = & v -> s		8848314	0					
ANR	8848319	IdentifierDeclType	MpegEncContext *		8848314	0					
ANR	8848320	Identifier	s		8848314	1					
ANR	8848321	AssignmentExpression	* s = & v -> s		8848314	2		=			
ANR	8848322	Identifier	s		8848314	0					
ANR	8848323	UnaryOperationExpression	& v -> s		8848314	1					
ANR	8848324	UnaryOperator	&		8848314	0					
ANR	8848325	PtrMemberAccess	v -> s		8848314	1					
ANR	8848326	Identifier	v		8848314	0					
ANR	8848327	Identifier	s		8848314	1					
ANR	8848328	IdentifierDeclStatement	GetBitContext * gb = & s -> gb ;	9:4:225:251	8848314	1	True				
ANR	8848329	IdentifierDecl	* gb = & s -> gb		8848314	0					
ANR	8848330	IdentifierDeclType	GetBitContext *		8848314	0					
ANR	8848331	Identifier	gb		8848314	1					
ANR	8848332	AssignmentExpression	* gb = & s -> gb		8848314	2		=			
ANR	8848333	Identifier	gb		8848314	0					
ANR	8848334	UnaryOperationExpression	& s -> gb		8848314	1					
ANR	8848335	UnaryOperator	&		8848314	0					
ANR	8848336	PtrMemberAccess	s -> gb		8848314	1					
ANR	8848337	Identifier	s		8848314	0					
ANR	8848338	Identifier	gb		8848314	1					
ANR	8848339	IdentifierDeclStatement	"int i , j ;"	11:4:258:266	8848314	2	True				
ANR	8848340	IdentifierDecl	i		8848314	0					
ANR	8848341	IdentifierDeclType	int		8848314	0					
ANR	8848342	Identifier	i		8848314	1					
ANR	8848343	IdentifierDecl	j		8848314	1					
ANR	8848344	IdentifierDeclType	int		8848314	0					
ANR	8848345	Identifier	j		8848314	1					
ANR	8848346	IdentifierDeclStatement	int subblkpat = 0 ;	13:4:273:290	8848314	3	True				
ANR	8848347	IdentifierDecl	subblkpat = 0		8848314	0					
ANR	8848348	IdentifierDeclType	int		8848314	0					
ANR	8848349	Identifier	subblkpat		8848314	1					
ANR	8848350	AssignmentExpression	subblkpat = 0		8848314	2		=			
ANR	8848351	Identifier	subblkpat		8848314	0					
ANR	8848352	PrimaryExpression	0		8848314	1					
ANR	8848353	IdentifierDeclStatement	"int scale , off , idx , last , skip , value ;"	15:4:297:335	8848314	4	True				
ANR	8848354	IdentifierDecl	scale		8848314	0					
ANR	8848355	IdentifierDeclType	int		8848314	0					
ANR	8848356	Identifier	scale		8848314	1					
ANR	8848357	IdentifierDecl	off		8848314	1					
ANR	8848358	IdentifierDeclType	int		8848314	0					
ANR	8848359	Identifier	off		8848314	1					
ANR	8848360	IdentifierDecl	idx		8848314	2					
ANR	8848361	IdentifierDeclType	int		8848314	0					
ANR	8848362	Identifier	idx		8848314	1					
ANR	8848363	IdentifierDecl	last		8848314	3					
ANR	8848364	IdentifierDeclType	int		8848314	0					
ANR	8848365	Identifier	last		8848314	1					
ANR	8848366	IdentifierDecl	skip		8848314	4					
ANR	8848367	IdentifierDeclType	int		8848314	0					
ANR	8848368	Identifier	skip		8848314	1					
ANR	8848369	IdentifierDecl	value		8848314	5					
ANR	8848370	IdentifierDeclType	int		8848314	0					
ANR	8848371	Identifier	value		8848314	1					
ANR	8848372	IdentifierDeclStatement	int ttblk = ttmb & 7 ;	17:4:342:362	8848314	5	True				
ANR	8848373	IdentifierDecl	ttblk = ttmb & 7		8848314	0					
ANR	8848374	IdentifierDeclType	int		8848314	0					
ANR	8848375	Identifier	ttblk		8848314	1					
ANR	8848376	AssignmentExpression	ttblk = ttmb & 7		8848314	2		=			
ANR	8848377	Identifier	ttblk		8848314	0					
ANR	8848378	BitAndExpression	ttmb & 7		8848314	1		&			
ANR	8848379	Identifier	ttmb		8848314	0					
ANR	8848380	PrimaryExpression	7		8848314	1					
ANR	8848381	IfStatement	if ( ttmb == - 1 )		8848314	6					
ANR	8848382	Condition	ttmb == - 1	21:7:374:383	8848314	0	True				
ANR	8848383	EqualityExpression	ttmb == - 1		8848314	0		==			
ANR	8848384	Identifier	ttmb		8848314	0					
ANR	8848385	UnaryOperationExpression	- 1		8848314	1					
ANR	8848386	UnaryOperator	-		8848314	0					
ANR	8848387	PrimaryExpression	1		8848314	1					
ANR	8848388	CompoundStatement		17:19:199:199	8848314	1					
ANR	8848389	ExpressionStatement	"ttblk = ff_vc1_ttblk_to_tt [ v -> tt_index ] [ get_vlc2 ( gb , ff_vc1_ttblk_vlc [ v -> tt_index ] . table , VC1_TTBLK_VLC_BITS , 1 ) ]"	23:8:397:510	8848314	0	True				
ANR	8848390	AssignmentExpression	"ttblk = ff_vc1_ttblk_to_tt [ v -> tt_index ] [ get_vlc2 ( gb , ff_vc1_ttblk_vlc [ v -> tt_index ] . table , VC1_TTBLK_VLC_BITS , 1 ) ]"		8848314	0		=			
ANR	8848391	Identifier	ttblk		8848314	0					
ANR	8848392	ArrayIndexing	"ff_vc1_ttblk_to_tt [ v -> tt_index ] [ get_vlc2 ( gb , ff_vc1_ttblk_vlc [ v -> tt_index ] . table , VC1_TTBLK_VLC_BITS , 1 ) ]"		8848314	1					
ANR	8848393	ArrayIndexing	ff_vc1_ttblk_to_tt [ v -> tt_index ]		8848314	0					
ANR	8848394	Identifier	ff_vc1_ttblk_to_tt		8848314	0					
ANR	8848395	PtrMemberAccess	v -> tt_index		8848314	1					
ANR	8848396	Identifier	v		8848314	0					
ANR	8848397	Identifier	tt_index		8848314	1					
ANR	8848398	CallExpression	"get_vlc2 ( gb , ff_vc1_ttblk_vlc [ v -> tt_index ] . table , VC1_TTBLK_VLC_BITS , 1 )"		8848314	1					
ANR	8848399	Callee	get_vlc2		8848314	0					
ANR	8848400	Identifier	get_vlc2		8848314	0					
ANR	8848401	ArgumentList	gb		8848314	1					
ANR	8848402	Argument	gb		8848314	0					
ANR	8848403	Identifier	gb		8848314	0					
ANR	8848404	Argument	ff_vc1_ttblk_vlc [ v -> tt_index ] . table		8848314	1					
ANR	8848405	MemberAccess	ff_vc1_ttblk_vlc [ v -> tt_index ] . table		8848314	0					
ANR	8848406	ArrayIndexing	ff_vc1_ttblk_vlc [ v -> tt_index ]		8848314	0					
ANR	8848407	Identifier	ff_vc1_ttblk_vlc		8848314	0					
ANR	8848408	PtrMemberAccess	v -> tt_index		8848314	1					
ANR	8848409	Identifier	v		8848314	0					
ANR	8848410	Identifier	tt_index		8848314	1					
ANR	8848411	Identifier	table		8848314	1					
ANR	8848412	Argument	VC1_TTBLK_VLC_BITS		8848314	2					
ANR	8848413	Identifier	VC1_TTBLK_VLC_BITS		8848314	0					
ANR	8848414	Argument	1		8848314	3					
ANR	8848415	PrimaryExpression	1		8848314	0					
ANR	8848416	IfStatement	if ( ttblk == TT_4X4 )		8848314	7					
ANR	8848417	Condition	ttblk == TT_4X4	27:7:527:541	8848314	0	True				
ANR	8848418	EqualityExpression	ttblk == TT_4X4		8848314	0		==			
ANR	8848419	Identifier	ttblk		8848314	0					
ANR	8848420	Identifier	TT_4X4		8848314	1					
ANR	8848421	CompoundStatement		23:24:357:357	8848314	1					
ANR	8848422	ExpressionStatement	"subblkpat = ~ ( get_vlc2 ( gb , ff_vc1_subblkpat_vlc [ v -> tt_index ] . table , VC1_SUBBLKPAT_VLC_BITS , 1 ) + 1 )"	29:8:555:654	8848314	0	True				
ANR	8848423	AssignmentExpression	"subblkpat = ~ ( get_vlc2 ( gb , ff_vc1_subblkpat_vlc [ v -> tt_index ] . table , VC1_SUBBLKPAT_VLC_BITS , 1 ) + 1 )"		8848314	0		=			
ANR	8848424	Identifier	subblkpat		8848314	0					
ANR	8848425	UnaryOperationExpression	"~ ( get_vlc2 ( gb , ff_vc1_subblkpat_vlc [ v -> tt_index ] . table , VC1_SUBBLKPAT_VLC_BITS , 1 ) + 1 )"		8848314	1					
ANR	8848426	UnaryOperator	~		8848314	0					
ANR	8848427	AdditiveExpression	"get_vlc2 ( gb , ff_vc1_subblkpat_vlc [ v -> tt_index ] . table , VC1_SUBBLKPAT_VLC_BITS , 1 ) + 1"		8848314	1		+			
ANR	8848428	CallExpression	"get_vlc2 ( gb , ff_vc1_subblkpat_vlc [ v -> tt_index ] . table , VC1_SUBBLKPAT_VLC_BITS , 1 )"		8848314	0					
ANR	8848429	Callee	get_vlc2		8848314	0					
ANR	8848430	Identifier	get_vlc2		8848314	0					
ANR	8848431	ArgumentList	gb		8848314	1					
ANR	8848432	Argument	gb		8848314	0					
ANR	8848433	Identifier	gb		8848314	0					
ANR	8848434	Argument	ff_vc1_subblkpat_vlc [ v -> tt_index ] . table		8848314	1					
ANR	8848435	MemberAccess	ff_vc1_subblkpat_vlc [ v -> tt_index ] . table		8848314	0					
ANR	8848436	ArrayIndexing	ff_vc1_subblkpat_vlc [ v -> tt_index ]		8848314	0					
ANR	8848437	Identifier	ff_vc1_subblkpat_vlc		8848314	0					
ANR	8848438	PtrMemberAccess	v -> tt_index		8848314	1					
ANR	8848439	Identifier	v		8848314	0					
ANR	8848440	Identifier	tt_index		8848314	1					
ANR	8848441	Identifier	table		8848314	1					
ANR	8848442	Argument	VC1_SUBBLKPAT_VLC_BITS		8848314	2					
ANR	8848443	Identifier	VC1_SUBBLKPAT_VLC_BITS		8848314	0					
ANR	8848444	Argument	1		8848314	3					
ANR	8848445	PrimaryExpression	1		8848314	0					
ANR	8848446	PrimaryExpression	1		8848314	1					
ANR	8848447	IfStatement	if ( ( ttblk != TT_8X8 && ttblk != TT_4X4 ) && ( v -> ttmbf || ( ttmb != - 1 && ( ttmb & 8 ) && ! first_block ) ) )		8848314	8					
ANR	8848448	Condition	( ttblk != TT_8X8 && ttblk != TT_4X4 ) && ( v -> ttmbf || ( ttmb != - 1 && ( ttmb & 8 ) && ! first_block ) )	33:7:671:766	8848314	0	True				
ANR	8848449	AndExpression	( ttblk != TT_8X8 && ttblk != TT_4X4 ) && ( v -> ttmbf || ( ttmb != - 1 && ( ttmb & 8 ) && ! first_block ) )		8848314	0		&&			
ANR	8848450	AndExpression	ttblk != TT_8X8 && ttblk != TT_4X4		8848314	0		&&			
ANR	8848451	EqualityExpression	ttblk != TT_8X8		8848314	0		!=			
ANR	8848452	Identifier	ttblk		8848314	0					
ANR	8848453	Identifier	TT_8X8		8848314	1					
ANR	8848454	EqualityExpression	ttblk != TT_4X4		8848314	1		!=			
ANR	8848455	Identifier	ttblk		8848314	0					
ANR	8848456	Identifier	TT_4X4		8848314	1					
ANR	8848457	OrExpression	v -> ttmbf || ( ttmb != - 1 && ( ttmb & 8 ) && ! first_block )		8848314	1		||			
ANR	8848458	PtrMemberAccess	v -> ttmbf		8848314	0					
ANR	8848459	Identifier	v		8848314	0					
ANR	8848460	Identifier	ttmbf		8848314	1					
ANR	8848461	AndExpression	ttmb != - 1 && ( ttmb & 8 ) && ! first_block		8848314	1		&&			
ANR	8848462	EqualityExpression	ttmb != - 1		8848314	0		!=			
ANR	8848463	Identifier	ttmb		8848314	0					
ANR	8848464	UnaryOperationExpression	- 1		8848314	1					
ANR	8848465	UnaryOperator	-		8848314	0					
ANR	8848466	PrimaryExpression	1		8848314	1					
ANR	8848467	AndExpression	( ttmb & 8 ) && ! first_block		8848314	1		&&			
ANR	8848468	BitAndExpression	ttmb & 8		8848314	0		&			
ANR	8848469	Identifier	ttmb		8848314	0					
ANR	8848470	PrimaryExpression	8		8848314	1					
ANR	8848471	UnaryOperationExpression	! first_block		8848314	1					
ANR	8848472	UnaryOperator	!		8848314	0					
ANR	8848473	Identifier	first_block		8848314	1					
ANR	8848474	CompoundStatement		29:105:582:582	8848314	1					
ANR	8848475	ExpressionStatement	subblkpat = decode012 ( gb )	35:8:780:805	8848314	0	True				
ANR	8848476	AssignmentExpression	subblkpat = decode012 ( gb )		8848314	0		=			
ANR	8848477	Identifier	subblkpat		8848314	0					
ANR	8848478	CallExpression	decode012 ( gb )		8848314	1					
ANR	8848479	Callee	decode012		8848314	0					
ANR	8848480	Identifier	decode012		8848314	0					
ANR	8848481	ArgumentList	gb		8848314	1					
ANR	8848482	Argument	gb		8848314	0					
ANR	8848483	Identifier	gb		8848314	0					
ANR	8848484	IfStatement	if ( subblkpat )		8848314	1					
ANR	8848485	Condition	subblkpat	37:11:819:827	8848314	0	True				
ANR	8848486	Identifier	subblkpat		8848314	0					
ANR	8848487	ExpressionStatement	subblkpat ^= 3	37:22:830:844	8848314	1	True				
ANR	8848488	AssignmentExpression	subblkpat ^= 3		8848314	0		^=			
ANR	8848489	Identifier	subblkpat		8848314	0					
ANR	8848490	PrimaryExpression	3		8848314	1					
ANR	8848491	IfStatement	if ( ttblk == TT_8X4_TOP || ttblk == TT_8X4_BOTTOM )		8848314	2					
ANR	8848492	Condition	ttblk == TT_8X4_TOP || ttblk == TT_8X4_BOTTOM	39:11:886:930	8848314	0	True				
ANR	8848493	OrExpression	ttblk == TT_8X4_TOP || ttblk == TT_8X4_BOTTOM		8848314	0		||			
ANR	8848494	EqualityExpression	ttblk == TT_8X4_TOP		8848314	0		==			
ANR	8848495	Identifier	ttblk		8848314	0					
ANR	8848496	Identifier	TT_8X4_TOP		8848314	1					
ANR	8848497	EqualityExpression	ttblk == TT_8X4_BOTTOM		8848314	1		==			
ANR	8848498	Identifier	ttblk		8848314	0					
ANR	8848499	Identifier	TT_8X4_BOTTOM		8848314	1					
ANR	8848500	ExpressionStatement	ttblk = TT_8X4	39:58:933:947	8848314	1	True				
ANR	8848501	AssignmentExpression	ttblk = TT_8X4		8848314	0		=			
ANR	8848502	Identifier	ttblk		8848314	0					
ANR	8848503	Identifier	TT_8X4		8848314	1					
ANR	8848504	IfStatement	if ( ttblk == TT_4X8_RIGHT || ttblk == TT_4X8_LEFT )		8848314	3					
ANR	8848505	Condition	ttblk == TT_4X8_RIGHT || ttblk == TT_4X8_LEFT	41:11:961:1005	8848314	0	True				
ANR	8848506	OrExpression	ttblk == TT_4X8_RIGHT || ttblk == TT_4X8_LEFT		8848314	0		||			
ANR	8848507	EqualityExpression	ttblk == TT_4X8_RIGHT		8848314	0		==			
ANR	8848508	Identifier	ttblk		8848314	0					
ANR	8848509	Identifier	TT_4X8_RIGHT		8848314	1					
ANR	8848510	EqualityExpression	ttblk == TT_4X8_LEFT		8848314	1		==			
ANR	8848511	Identifier	ttblk		8848314	0					
ANR	8848512	Identifier	TT_4X8_LEFT		8848314	1					
ANR	8848513	ExpressionStatement	ttblk = TT_4X8	41:58:1008:1022	8848314	1	True				
ANR	8848514	AssignmentExpression	ttblk = TT_4X8		8848314	0		=			
ANR	8848515	Identifier	ttblk		8848314	0					
ANR	8848516	Identifier	TT_4X8		8848314	1					
ANR	8848517	ExpressionStatement	scale = 2 * mquant + ( ( v -> pq == mquant ) ? v -> halfpq : 0 )	45:4:1036:1092	8848314	9	True				
ANR	8848518	AssignmentExpression	scale = 2 * mquant + ( ( v -> pq == mquant ) ? v -> halfpq : 0 )		8848314	0		=			
ANR	8848519	Identifier	scale		8848314	0					
ANR	8848520	AdditiveExpression	2 * mquant + ( ( v -> pq == mquant ) ? v -> halfpq : 0 )		8848314	1		+			
ANR	8848521	MultiplicativeExpression	2 * mquant		8848314	0		*			
ANR	8848522	PrimaryExpression	2		8848314	0					
ANR	8848523	Identifier	mquant		8848314	1					
ANR	8848524	ConditionalExpression	( v -> pq == mquant ) ? v -> halfpq : 0		8848314	1					
ANR	8848525	Condition	v -> pq == mquant		8848314	0					
ANR	8848526	EqualityExpression	v -> pq == mquant		8848314	0		==			
ANR	8848527	PtrMemberAccess	v -> pq		8848314	0					
ANR	8848528	Identifier	v		8848314	0					
ANR	8848529	Identifier	pq		8848314	1					
ANR	8848530	Identifier	mquant		8848314	1					
ANR	8848531	PtrMemberAccess	v -> halfpq		8848314	1					
ANR	8848532	Identifier	v		8848314	0					
ANR	8848533	Identifier	halfpq		8848314	1					
ANR	8848534	PrimaryExpression	0		8848314	2					
ANR	8848535	IfStatement	if ( ttblk == TT_8X4_TOP || ttblk == TT_8X4_BOTTOM )		8848314	10					
ANR	8848536	Condition	ttblk == TT_8X4_TOP || ttblk == TT_8X4_BOTTOM	51:7:1172:1216	8848314	0	True				
ANR	8848537	OrExpression	ttblk == TT_8X4_TOP || ttblk == TT_8X4_BOTTOM		8848314	0		||			
ANR	8848538	EqualityExpression	ttblk == TT_8X4_TOP		8848314	0		==			
ANR	8848539	Identifier	ttblk		8848314	0					
ANR	8848540	Identifier	TT_8X4_TOP		8848314	1					
ANR	8848541	EqualityExpression	ttblk == TT_8X4_BOTTOM		8848314	1		==			
ANR	8848542	Identifier	ttblk		8848314	0					
ANR	8848543	Identifier	TT_8X4_BOTTOM		8848314	1					
ANR	8848544	CompoundStatement		47:54:1032:1032	8848314	1					
ANR	8848545	ExpressionStatement	subblkpat = 2 - ( ttblk == TT_8X4_TOP )	53:8:1230:1267	8848314	0	True				
ANR	8848546	AssignmentExpression	subblkpat = 2 - ( ttblk == TT_8X4_TOP )		8848314	0		=			
ANR	8848547	Identifier	subblkpat		8848314	0					
ANR	8848548	AdditiveExpression	2 - ( ttblk == TT_8X4_TOP )		8848314	1		-			
ANR	8848549	PrimaryExpression	2		8848314	0					
ANR	8848550	EqualityExpression	ttblk == TT_8X4_TOP		8848314	1		==			
ANR	8848551	Identifier	ttblk		8848314	0					
ANR	8848552	Identifier	TT_8X4_TOP		8848314	1					
ANR	8848553	ExpressionStatement	ttblk = TT_8X4	55:8:1278:1292	8848314	1	True				
ANR	8848554	AssignmentExpression	ttblk = TT_8X4		8848314	0		=			
ANR	8848555	Identifier	ttblk		8848314	0					
ANR	8848556	Identifier	TT_8X4		8848314	1					
ANR	8848557	IfStatement	if ( ttblk == TT_4X8_RIGHT || ttblk == TT_4X8_LEFT )		8848314	11					
ANR	8848558	Condition	ttblk == TT_4X8_RIGHT || ttblk == TT_4X8_LEFT	59:7:1309:1353	8848314	0	True				
ANR	8848559	OrExpression	ttblk == TT_4X8_RIGHT || ttblk == TT_4X8_LEFT		8848314	0		||			
ANR	8848560	EqualityExpression	ttblk == TT_4X8_RIGHT		8848314	0		==			
ANR	8848561	Identifier	ttblk		8848314	0					
ANR	8848562	Identifier	TT_4X8_RIGHT		8848314	1					
ANR	8848563	EqualityExpression	ttblk == TT_4X8_LEFT		8848314	1		==			
ANR	8848564	Identifier	ttblk		8848314	0					
ANR	8848565	Identifier	TT_4X8_LEFT		8848314	1					
ANR	8848566	CompoundStatement		55:54:1169:1169	8848314	1					
ANR	8848567	ExpressionStatement	subblkpat = 2 - ( ttblk == TT_4X8_LEFT )	61:8:1367:1405	8848314	0	True				
ANR	8848568	AssignmentExpression	subblkpat = 2 - ( ttblk == TT_4X8_LEFT )		8848314	0		=			
ANR	8848569	Identifier	subblkpat		8848314	0					
ANR	8848570	AdditiveExpression	2 - ( ttblk == TT_4X8_LEFT )		8848314	1		-			
ANR	8848571	PrimaryExpression	2		8848314	0					
ANR	8848572	EqualityExpression	ttblk == TT_4X8_LEFT		8848314	1		==			
ANR	8848573	Identifier	ttblk		8848314	0					
ANR	8848574	Identifier	TT_4X8_LEFT		8848314	1					
ANR	8848575	ExpressionStatement	ttblk = TT_4X8	63:8:1416:1430	8848314	1	True				
ANR	8848576	AssignmentExpression	ttblk = TT_4X8		8848314	0		=			
ANR	8848577	Identifier	ttblk		8848314	0					
ANR	8848578	Identifier	TT_4X8		8848314	1					
ANR	8848579	SwitchStatement	switch ( ttblk )		8848314	12					
ANR	8848580	Condition	ttblk	67:11:1451:1455	8848314	0	True				
ANR	8848581	Identifier	ttblk		8848314	0					
ANR	8848582	CompoundStatement		63:18:1271:1271	8848314	1					
ANR	8848583	Label	case TT_8X8 :	69:4:1465:1476	8848314	0	True				
ANR	8848584	Identifier	TT_8X8		8848314	0					
ANR	8848585	ExpressionStatement	i = 0	71:8:1487:1492	8848314	1	True				
ANR	8848586	AssignmentExpression	i = 0		8848314	0		=			
ANR	8848587	Identifier	i		8848314	0					
ANR	8848588	PrimaryExpression	0		8848314	1					
ANR	8848589	ExpressionStatement	last = 0	73:8:1503:1511	8848314	2	True				
ANR	8848590	AssignmentExpression	last = 0		8848314	0		=			
ANR	8848591	Identifier	last		8848314	0					
ANR	8848592	PrimaryExpression	0		8848314	1					
ANR	8848593	WhileStatement	while ( ! last )		8848314	3					
ANR	8848594	Condition	! last	75:15:1529:1533	8848314	0	True				
ANR	8848595	UnaryOperationExpression	! last		8848314	0					
ANR	8848596	UnaryOperator	!		8848314	0					
ANR	8848597	Identifier	last		8848314	1					
ANR	8848598	CompoundStatement		71:22:1349:1349	8848314	1					
ANR	8848599	ExpressionStatement	"vc1_decode_ac_coeff ( v , & last , & skip , & value , v -> codingset2 )"	77:12:1551:1610	8848314	0	True				
ANR	8848600	CallExpression	"vc1_decode_ac_coeff ( v , & last , & skip , & value , v -> codingset2 )"		8848314	0					
ANR	8848601	Callee	vc1_decode_ac_coeff		8848314	0					
ANR	8848602	Identifier	vc1_decode_ac_coeff		8848314	0					
ANR	8848603	ArgumentList	v		8848314	1					
ANR	8848604	Argument	v		8848314	0					
ANR	8848605	Identifier	v		8848314	0					
ANR	8848606	Argument	& last		8848314	1					
ANR	8848607	UnaryOperationExpression	& last		8848314	0					
ANR	8848608	UnaryOperator	&		8848314	0					
ANR	8848609	Identifier	last		8848314	1					
ANR	8848610	Argument	& skip		8848314	2					
ANR	8848611	UnaryOperationExpression	& skip		8848314	0					
ANR	8848612	UnaryOperator	&		8848314	0					
ANR	8848613	Identifier	skip		8848314	1					
ANR	8848614	Argument	& value		8848314	3					
ANR	8848615	UnaryOperationExpression	& value		8848314	0					
ANR	8848616	UnaryOperator	&		8848314	0					
ANR	8848617	Identifier	value		8848314	1					
ANR	8848618	Argument	v -> codingset2		8848314	4					
ANR	8848619	PtrMemberAccess	v -> codingset2		8848314	0					
ANR	8848620	Identifier	v		8848314	0					
ANR	8848621	Identifier	codingset2		8848314	1					
ANR	8848622	ExpressionStatement	i += skip	79:12:1625:1634	8848314	1	True				
ANR	8848623	AssignmentExpression	i += skip		8848314	0		+=			
ANR	8848624	Identifier	i		8848314	0					
ANR	8848625	Identifier	skip		8848314	1					
ANR	8848626	IfStatement	if ( i > 63 )		8848314	2					
ANR	8848627	Condition	i > 63	81:15:1652:1657	8848314	0	True				
ANR	8848628	RelationalExpression	i > 63		8848314	0		>			
ANR	8848629	Identifier	i		8848314	0					
ANR	8848630	PrimaryExpression	63		8848314	1					
ANR	8848631	BreakStatement	break ;	83:16:1677:1682	8848314	1	True				
ANR	8848632	ExpressionStatement	idx = wmv1_scantable [ 0 ] [ i ++ ]	85:12:1697:1725	8848314	3	True				
ANR	8848633	AssignmentExpression	idx = wmv1_scantable [ 0 ] [ i ++ ]		8848314	0		=			
ANR	8848634	Identifier	idx		8848314	0					
ANR	8848635	ArrayIndexing	wmv1_scantable [ 0 ] [ i ++ ]		8848314	1					
ANR	8848636	ArrayIndexing	wmv1_scantable [ 0 ]		8848314	0					
ANR	8848637	Identifier	wmv1_scantable		8848314	0					
ANR	8848638	PrimaryExpression	0		8848314	1					
ANR	8848639	PostIncDecOperationExpression	i ++		8848314	1					
ANR	8848640	Identifier	i		8848314	0					
ANR	8848641	IncDec	++		8848314	1					
ANR	8848642	ExpressionStatement	block [ idx ] = value * scale	87:12:1740:1766	8848314	4	True				
ANR	8848643	AssignmentExpression	block [ idx ] = value * scale		8848314	0		=			
ANR	8848644	ArrayIndexing	block [ idx ]		8848314	0					
ANR	8848645	Identifier	block		8848314	0					
ANR	8848646	Identifier	idx		8848314	1					
ANR	8848647	MultiplicativeExpression	value * scale		8848314	1		*			
ANR	8848648	Identifier	value		8848314	0					
ANR	8848649	Identifier	scale		8848314	1					
ANR	8848650	IfStatement	if ( ! v -> pquantizer )		8848314	5					
ANR	8848651	Condition	! v -> pquantizer	89:15:1784:1797	8848314	0	True				
ANR	8848652	UnaryOperationExpression	! v -> pquantizer		8848314	0					
ANR	8848653	UnaryOperator	!		8848314	0					
ANR	8848654	PtrMemberAccess	v -> pquantizer		8848314	1					
ANR	8848655	Identifier	v		8848314	0					
ANR	8848656	Identifier	pquantizer		8848314	1					
ANR	8848657	ExpressionStatement	block [ idx ] += ( block [ idx ] < 0 ) ? - mquant : mquant	91:16:1817:1866	8848314	1	True				
ANR	8848658	AssignmentExpression	block [ idx ] += ( block [ idx ] < 0 ) ? - mquant : mquant		8848314	0		+=			
ANR	8848659	ArrayIndexing	block [ idx ]		8848314	0					
ANR	8848660	Identifier	block		8848314	0					
ANR	8848661	Identifier	idx		8848314	1					
ANR	8848662	ConditionalExpression	( block [ idx ] < 0 ) ? - mquant : mquant		8848314	1					
ANR	8848663	Condition	block [ idx ] < 0		8848314	0					
ANR	8848664	RelationalExpression	block [ idx ] < 0		8848314	0		<			
ANR	8848665	ArrayIndexing	block [ idx ]		8848314	0					
ANR	8848666	Identifier	block		8848314	0					
ANR	8848667	Identifier	idx		8848314	1					
ANR	8848668	PrimaryExpression	0		8848314	1					
ANR	8848669	UnaryOperationExpression	- mquant		8848314	1					
ANR	8848670	UnaryOperator	-		8848314	0					
ANR	8848671	Identifier	mquant		8848314	1					
ANR	8848672	Identifier	mquant		8848314	2					
ANR	8848673	IfStatement	if ( ! skip_block )		8848314	4					
ANR	8848674	Condition	! skip_block	95:11:1891:1901	8848314	0	True				
ANR	8848675	UnaryOperationExpression	! skip_block		8848314	0					
ANR	8848676	UnaryOperator	!		8848314	0					
ANR	8848677	Identifier	skip_block		8848314	1					
ANR	8848678	CompoundStatement		91:23:1716:1716	8848314	1					
ANR	8848679	ExpressionStatement	s -> dsp . vc1_inv_trans_8x8 ( block )	97:12:1918:1949	8848314	0	True				
ANR	8848680	CallExpression	s -> dsp . vc1_inv_trans_8x8 ( block )		8848314	0					
ANR	8848681	Callee	s -> dsp . vc1_inv_trans_8x8		8848314	0					
ANR	8848682	MemberAccess	s -> dsp . vc1_inv_trans_8x8		8848314	0					
ANR	8848683	PtrMemberAccess	s -> dsp		8848314	0					
ANR	8848684	Identifier	s		8848314	0					
ANR	8848685	Identifier	dsp		8848314	1					
ANR	8848686	Identifier	vc1_inv_trans_8x8		8848314	1					
ANR	8848687	ArgumentList	block		8848314	1					
ANR	8848688	Argument	block		8848314	0					
ANR	8848689	Identifier	block		8848314	0					
ANR	8848690	ExpressionStatement	"s -> dsp . add_pixels_clamped ( block , dst , linesize )"	99:12:1964:2011	8848314	1	True				
ANR	8848691	CallExpression	"s -> dsp . add_pixels_clamped ( block , dst , linesize )"		8848314	0					
ANR	8848692	Callee	s -> dsp . add_pixels_clamped		8848314	0					
ANR	8848693	MemberAccess	s -> dsp . add_pixels_clamped		8848314	0					
ANR	8848694	PtrMemberAccess	s -> dsp		8848314	0					
ANR	8848695	Identifier	s		8848314	0					
ANR	8848696	Identifier	dsp		8848314	1					
ANR	8848697	Identifier	add_pixels_clamped		8848314	1					
ANR	8848698	ArgumentList	block		8848314	1					
ANR	8848699	Argument	block		8848314	0					
ANR	8848700	Identifier	block		8848314	0					
ANR	8848701	Argument	dst		8848314	1					
ANR	8848702	Identifier	dst		8848314	0					
ANR	8848703	Argument	linesize		8848314	2					
ANR	8848704	Identifier	linesize		8848314	0					
ANR	8848705	BreakStatement	break ;	103:8:2033:2038	8848314	5	True				
ANR	8848706	Label	case TT_4X4 :	105:4:2045:2056	8848314	6	True				
ANR	8848707	Identifier	TT_4X4		8848314	0					
ANR	8848708	ForStatement	for ( j = 0 ; j < 4 ; j ++ )		8848314	7					
ANR	8848709	ForInit	j = 0 ;	107:12:2071:2076	8848314	0	True				
ANR	8848710	AssignmentExpression	j = 0		8848314	0		=			
ANR	8848711	Identifier	j		8848314	0					
ANR	8848712	PrimaryExpression	0		8848314	1					
ANR	8848713	Condition	j < 4	107:19:2078:2082	8848314	1	True				
ANR	8848714	RelationalExpression	j < 4		8848314	0		<			
ANR	8848715	Identifier	j		8848314	0					
ANR	8848716	PrimaryExpression	4		8848314	1					
ANR	8848717	PostIncDecOperationExpression	j ++	107:26:2085:2087	8848314	2	True				
ANR	8848718	Identifier	j		8848314	0					
ANR	8848719	IncDec	++		8848314	1					
ANR	8848720	CompoundStatement		103:31:1903:1903	8848314	3					
ANR	8848721	ExpressionStatement	last = subblkpat & ( 1 << ( 3 - j ) )	109:12:2105:2138	8848314	0	True				
ANR	8848722	AssignmentExpression	last = subblkpat & ( 1 << ( 3 - j ) )		8848314	0		=			
ANR	8848723	Identifier	last		8848314	0					
ANR	8848724	BitAndExpression	subblkpat & ( 1 << ( 3 - j ) )		8848314	1		&			
ANR	8848725	Identifier	subblkpat		8848314	0					
ANR	8848726	ShiftExpression	1 << ( 3 - j )		8848314	1		<<			
ANR	8848727	PrimaryExpression	1		8848314	0					
ANR	8848728	AdditiveExpression	3 - j		8848314	1		-			
ANR	8848729	PrimaryExpression	3		8848314	0					
ANR	8848730	Identifier	j		8848314	1					
ANR	8848731	ExpressionStatement	i = 0	111:12:2153:2158	8848314	1	True				
ANR	8848732	AssignmentExpression	i = 0		8848314	0		=			
ANR	8848733	Identifier	i		8848314	0					
ANR	8848734	PrimaryExpression	0		8848314	1					
ANR	8848735	ExpressionStatement	off = ( j & 1 ) * 4 + ( j & 2 ) * 16	113:12:2173:2205	8848314	2	True				
ANR	8848736	AssignmentExpression	off = ( j & 1 ) * 4 + ( j & 2 ) * 16		8848314	0		=			
ANR	8848737	Identifier	off		8848314	0					
ANR	8848738	AdditiveExpression	( j & 1 ) * 4 + ( j & 2 ) * 16		8848314	1		+			
ANR	8848739	MultiplicativeExpression	( j & 1 ) * 4		8848314	0		*			
ANR	8848740	BitAndExpression	j & 1		8848314	0		&			
ANR	8848741	Identifier	j		8848314	0					
ANR	8848742	PrimaryExpression	1		8848314	1					
ANR	8848743	PrimaryExpression	4		8848314	1					
ANR	8848744	MultiplicativeExpression	( j & 2 ) * 16		8848314	1		*			
ANR	8848745	BitAndExpression	j & 2		8848314	0		&			
ANR	8848746	Identifier	j		8848314	0					
ANR	8848747	PrimaryExpression	2		8848314	1					
ANR	8848748	PrimaryExpression	16		8848314	1					
ANR	8848749	WhileStatement	while ( ! last )		8848314	3					
ANR	8848750	Condition	! last	115:19:2227:2231	8848314	0	True				
ANR	8848751	UnaryOperationExpression	! last		8848314	0					
ANR	8848752	UnaryOperator	!		8848314	0					
ANR	8848753	Identifier	last		8848314	1					
ANR	8848754	CompoundStatement		111:26:2047:2047	8848314	1					
ANR	8848755	ExpressionStatement	"vc1_decode_ac_coeff ( v , & last , & skip , & value , v -> codingset2 )"	117:16:2253:2312	8848314	0	True				
ANR	8848756	CallExpression	"vc1_decode_ac_coeff ( v , & last , & skip , & value , v -> codingset2 )"		8848314	0					
ANR	8848757	Callee	vc1_decode_ac_coeff		8848314	0					
ANR	8848758	Identifier	vc1_decode_ac_coeff		8848314	0					
ANR	8848759	ArgumentList	v		8848314	1					
ANR	8848760	Argument	v		8848314	0					
ANR	8848761	Identifier	v		8848314	0					
ANR	8848762	Argument	& last		8848314	1					
ANR	8848763	UnaryOperationExpression	& last		8848314	0					
ANR	8848764	UnaryOperator	&		8848314	0					
ANR	8848765	Identifier	last		8848314	1					
ANR	8848766	Argument	& skip		8848314	2					
ANR	8848767	UnaryOperationExpression	& skip		8848314	0					
ANR	8848768	UnaryOperator	&		8848314	0					
ANR	8848769	Identifier	skip		8848314	1					
ANR	8848770	Argument	& value		8848314	3					
ANR	8848771	UnaryOperationExpression	& value		8848314	0					
ANR	8848772	UnaryOperator	&		8848314	0					
ANR	8848773	Identifier	value		8848314	1					
ANR	8848774	Argument	v -> codingset2		8848314	4					
ANR	8848775	PtrMemberAccess	v -> codingset2		8848314	0					
ANR	8848776	Identifier	v		8848314	0					
ANR	8848777	Identifier	codingset2		8848314	1					
ANR	8848778	ExpressionStatement	i += skip	119:16:2331:2340	8848314	1	True				
ANR	8848779	AssignmentExpression	i += skip		8848314	0		+=			
ANR	8848780	Identifier	i		8848314	0					
ANR	8848781	Identifier	skip		8848314	1					
ANR	8848782	IfStatement	if ( i > 15 )		8848314	2					
ANR	8848783	Condition	i > 15	121:19:2362:2367	8848314	0	True				
ANR	8848784	RelationalExpression	i > 15		8848314	0		>			
ANR	8848785	Identifier	i		8848314	0					
ANR	8848786	PrimaryExpression	15		8848314	1					
ANR	8848787	BreakStatement	break ;	123:20:2391:2396	8848314	1	True				
ANR	8848788	ExpressionStatement	idx = ff_vc1_simple_progressive_4x4_zz [ i ++ ]	125:16:2415:2458	8848314	3	True				
ANR	8848789	AssignmentExpression	idx = ff_vc1_simple_progressive_4x4_zz [ i ++ ]		8848314	0		=			
ANR	8848790	Identifier	idx		8848314	0					
ANR	8848791	ArrayIndexing	ff_vc1_simple_progressive_4x4_zz [ i ++ ]		8848314	1					
ANR	8848792	Identifier	ff_vc1_simple_progressive_4x4_zz		8848314	0					
ANR	8848793	PostIncDecOperationExpression	i ++		8848314	1					
ANR	8848794	Identifier	i		8848314	0					
ANR	8848795	IncDec	++		8848314	1					
ANR	8848796	ExpressionStatement	block [ idx + off ] = value * scale	127:16:2477:2509	8848314	4	True				
ANR	8848797	AssignmentExpression	block [ idx + off ] = value * scale		8848314	0		=			
ANR	8848798	ArrayIndexing	block [ idx + off ]		8848314	0					
ANR	8848799	Identifier	block		8848314	0					
ANR	8848800	AdditiveExpression	idx + off		8848314	1		+			
ANR	8848801	Identifier	idx		8848314	0					
ANR	8848802	Identifier	off		8848314	1					
ANR	8848803	MultiplicativeExpression	value * scale		8848314	1		*			
ANR	8848804	Identifier	value		8848314	0					
ANR	8848805	Identifier	scale		8848314	1					
ANR	8848806	IfStatement	if ( ! v -> pquantizer )		8848314	5					
ANR	8848807	Condition	! v -> pquantizer	129:19:2531:2544	8848314	0	True				
ANR	8848808	UnaryOperationExpression	! v -> pquantizer		8848314	0					
ANR	8848809	UnaryOperator	!		8848314	0					
ANR	8848810	PtrMemberAccess	v -> pquantizer		8848314	1					
ANR	8848811	Identifier	v		8848314	0					
ANR	8848812	Identifier	pquantizer		8848314	1					
ANR	8848813	ExpressionStatement	block [ idx + off ] += ( block [ idx + off ] < 0 ) ? - mquant : mquant	131:20:2568:2629	8848314	1	True				
ANR	8848814	AssignmentExpression	block [ idx + off ] += ( block [ idx + off ] < 0 ) ? - mquant : mquant		8848314	0		+=			
ANR	8848815	ArrayIndexing	block [ idx + off ]		8848314	0					
ANR	8848816	Identifier	block		8848314	0					
ANR	8848817	AdditiveExpression	idx + off		8848314	1		+			
ANR	8848818	Identifier	idx		8848314	0					
ANR	8848819	Identifier	off		8848314	1					
ANR	8848820	ConditionalExpression	( block [ idx + off ] < 0 ) ? - mquant : mquant		8848314	1					
ANR	8848821	Condition	block [ idx + off ] < 0		8848314	0					
ANR	8848822	RelationalExpression	block [ idx + off ] < 0		8848314	0		<			
ANR	8848823	ArrayIndexing	block [ idx + off ]		8848314	0					
ANR	8848824	Identifier	block		8848314	0					
ANR	8848825	AdditiveExpression	idx + off		8848314	1		+			
ANR	8848826	Identifier	idx		8848314	0					
ANR	8848827	Identifier	off		8848314	1					
ANR	8848828	PrimaryExpression	0		8848314	1					
ANR	8848829	UnaryOperationExpression	- mquant		8848314	1					
ANR	8848830	UnaryOperator	-		8848314	0					
ANR	8848831	Identifier	mquant		8848314	1					
ANR	8848832	Identifier	mquant		8848314	2					
ANR	8848833	IfStatement	if ( ! ( subblkpat & ( 1 << ( 3 - j ) ) ) && ! skip_block )		8848314	4					
ANR	8848834	Condition	! ( subblkpat & ( 1 << ( 3 - j ) ) ) && ! skip_block	135:15:2662:2705	8848314	0	True				
ANR	8848835	AndExpression	! ( subblkpat & ( 1 << ( 3 - j ) ) ) && ! skip_block		8848314	0		&&			
ANR	8848836	UnaryOperationExpression	! ( subblkpat & ( 1 << ( 3 - j ) ) )		8848314	0					
ANR	8848837	UnaryOperator	!		8848314	0					
ANR	8848838	BitAndExpression	subblkpat & ( 1 << ( 3 - j ) )		8848314	1		&			
ANR	8848839	Identifier	subblkpat		8848314	0					
ANR	8848840	ShiftExpression	1 << ( 3 - j )		8848314	1		<<			
ANR	8848841	PrimaryExpression	1		8848314	0					
ANR	8848842	AdditiveExpression	3 - j		8848314	1		-			
ANR	8848843	PrimaryExpression	3		8848314	0					
ANR	8848844	Identifier	j		8848314	1					
ANR	8848845	UnaryOperationExpression	! skip_block		8848314	1					
ANR	8848846	UnaryOperator	!		8848314	0					
ANR	8848847	Identifier	skip_block		8848314	1					
ANR	8848848	ExpressionStatement	"s -> dsp . vc1_inv_trans_4x4 ( dst + ( j & 1 ) * 4 + ( j & 2 ) * 2 * linesize , linesize , block + off )"	137:16:2725:2806	8848314	1	True				
ANR	8848849	CallExpression	"s -> dsp . vc1_inv_trans_4x4 ( dst + ( j & 1 ) * 4 + ( j & 2 ) * 2 * linesize , linesize , block + off )"		8848314	0					
ANR	8848850	Callee	s -> dsp . vc1_inv_trans_4x4		8848314	0					
ANR	8848851	MemberAccess	s -> dsp . vc1_inv_trans_4x4		8848314	0					
ANR	8848852	PtrMemberAccess	s -> dsp		8848314	0					
ANR	8848853	Identifier	s		8848314	0					
ANR	8848854	Identifier	dsp		8848314	1					
ANR	8848855	Identifier	vc1_inv_trans_4x4		8848314	1					
ANR	8848856	ArgumentList	dst + ( j & 1 ) * 4 + ( j & 2 ) * 2 * linesize		8848314	1					
ANR	8848857	Argument	dst + ( j & 1 ) * 4 + ( j & 2 ) * 2 * linesize		8848314	0					
ANR	8848858	AdditiveExpression	dst + ( j & 1 ) * 4 + ( j & 2 ) * 2 * linesize		8848314	0		+			
ANR	8848859	Identifier	dst		8848314	0					
ANR	8848860	AdditiveExpression	( j & 1 ) * 4 + ( j & 2 ) * 2 * linesize		8848314	1		+			
ANR	8848861	MultiplicativeExpression	( j & 1 ) * 4		8848314	0		*			
ANR	8848862	BitAndExpression	j & 1		8848314	0		&			
ANR	8848863	Identifier	j		8848314	0					
ANR	8848864	PrimaryExpression	1		8848314	1					
ANR	8848865	PrimaryExpression	4		8848314	1					
ANR	8848866	MultiplicativeExpression	( j & 2 ) * 2 * linesize		8848314	1		*			
ANR	8848867	BitAndExpression	j & 2		8848314	0		&			
ANR	8848868	Identifier	j		8848314	0					
ANR	8848869	PrimaryExpression	2		8848314	1					
ANR	8848870	MultiplicativeExpression	2 * linesize		8848314	1		*			
ANR	8848871	PrimaryExpression	2		8848314	0					
ANR	8848872	Identifier	linesize		8848314	1					
ANR	8848873	Argument	linesize		8848314	1					
ANR	8848874	Identifier	linesize		8848314	0					
ANR	8848875	Argument	block + off		8848314	2					
ANR	8848876	AdditiveExpression	block + off		8848314	0		+			
ANR	8848877	Identifier	block		8848314	0					
ANR	8848878	Identifier	off		8848314	1					
ANR	8848879	BreakStatement	break ;	141:8:2828:2833	8848314	8	True				
ANR	8848880	Label	case TT_8X4 :	143:4:2840:2851	8848314	9	True				
ANR	8848881	Identifier	TT_8X4		8848314	0					
ANR	8848882	ForStatement	for ( j = 0 ; j < 2 ; j ++ )		8848314	10					
ANR	8848883	ForInit	j = 0 ;	145:12:2866:2871	8848314	0	True				
ANR	8848884	AssignmentExpression	j = 0		8848314	0		=			
ANR	8848885	Identifier	j		8848314	0					
ANR	8848886	PrimaryExpression	0		8848314	1					
ANR	8848887	Condition	j < 2	145:19:2873:2877	8848314	1	True				
ANR	8848888	RelationalExpression	j < 2		8848314	0		<			
ANR	8848889	Identifier	j		8848314	0					
ANR	8848890	PrimaryExpression	2		8848314	1					
ANR	8848891	PostIncDecOperationExpression	j ++	145:26:2880:2882	8848314	2	True				
ANR	8848892	Identifier	j		8848314	0					
ANR	8848893	IncDec	++		8848314	1					
ANR	8848894	CompoundStatement		141:31:2698:2698	8848314	3					
ANR	8848895	ExpressionStatement	last = subblkpat & ( 1 << ( 1 - j ) )	147:12:2900:2933	8848314	0	True				
ANR	8848896	AssignmentExpression	last = subblkpat & ( 1 << ( 1 - j ) )		8848314	0		=			
ANR	8848897	Identifier	last		8848314	0					
ANR	8848898	BitAndExpression	subblkpat & ( 1 << ( 1 - j ) )		8848314	1		&			
ANR	8848899	Identifier	subblkpat		8848314	0					
ANR	8848900	ShiftExpression	1 << ( 1 - j )		8848314	1		<<			
ANR	8848901	PrimaryExpression	1		8848314	0					
ANR	8848902	AdditiveExpression	1 - j		8848314	1		-			
ANR	8848903	PrimaryExpression	1		8848314	0					
ANR	8848904	Identifier	j		8848314	1					
ANR	8848905	ExpressionStatement	i = 0	149:12:2948:2953	8848314	1	True				
ANR	8848906	AssignmentExpression	i = 0		8848314	0		=			
ANR	8848907	Identifier	i		8848314	0					
ANR	8848908	PrimaryExpression	0		8848314	1					
ANR	8848909	ExpressionStatement	off = j * 32	151:12:2968:2980	8848314	2	True				
ANR	8848910	AssignmentExpression	off = j * 32		8848314	0		=			
ANR	8848911	Identifier	off		8848314	0					
ANR	8848912	MultiplicativeExpression	j * 32		8848314	1		*			
ANR	8848913	Identifier	j		8848314	0					
ANR	8848914	PrimaryExpression	32		8848314	1					
ANR	8848915	WhileStatement	while ( ! last )		8848314	3					
ANR	8848916	Condition	! last	153:19:3002:3006	8848314	0	True				
ANR	8848917	UnaryOperationExpression	! last		8848314	0					
ANR	8848918	UnaryOperator	!		8848314	0					
ANR	8848919	Identifier	last		8848314	1					
ANR	8848920	CompoundStatement		149:26:2822:2822	8848314	1					
ANR	8848921	ExpressionStatement	"vc1_decode_ac_coeff ( v , & last , & skip , & value , v -> codingset2 )"	155:16:3028:3087	8848314	0	True				
ANR	8848922	CallExpression	"vc1_decode_ac_coeff ( v , & last , & skip , & value , v -> codingset2 )"		8848314	0					
ANR	8848923	Callee	vc1_decode_ac_coeff		8848314	0					
ANR	8848924	Identifier	vc1_decode_ac_coeff		8848314	0					
ANR	8848925	ArgumentList	v		8848314	1					
ANR	8848926	Argument	v		8848314	0					
ANR	8848927	Identifier	v		8848314	0					
ANR	8848928	Argument	& last		8848314	1					
ANR	8848929	UnaryOperationExpression	& last		8848314	0					
ANR	8848930	UnaryOperator	&		8848314	0					
ANR	8848931	Identifier	last		8848314	1					
ANR	8848932	Argument	& skip		8848314	2					
ANR	8848933	UnaryOperationExpression	& skip		8848314	0					
ANR	8848934	UnaryOperator	&		8848314	0					
ANR	8848935	Identifier	skip		8848314	1					
ANR	8848936	Argument	& value		8848314	3					
ANR	8848937	UnaryOperationExpression	& value		8848314	0					
ANR	8848938	UnaryOperator	&		8848314	0					
ANR	8848939	Identifier	value		8848314	1					
ANR	8848940	Argument	v -> codingset2		8848314	4					
ANR	8848941	PtrMemberAccess	v -> codingset2		8848314	0					
ANR	8848942	Identifier	v		8848314	0					
ANR	8848943	Identifier	codingset2		8848314	1					
ANR	8848944	ExpressionStatement	i += skip	157:16:3106:3115	8848314	1	True				
ANR	8848945	AssignmentExpression	i += skip		8848314	0		+=			
ANR	8848946	Identifier	i		8848314	0					
ANR	8848947	Identifier	skip		8848314	1					
ANR	8848948	IfStatement	if ( i > 31 )		8848314	2					
ANR	8848949	Condition	i > 31	159:19:3137:3142	8848314	0	True				
ANR	8848950	RelationalExpression	i > 31		8848314	0		>			
ANR	8848951	Identifier	i		8848314	0					
ANR	8848952	PrimaryExpression	31		8848314	1					
ANR	8848953	BreakStatement	break ;	161:20:3166:3171	8848314	1	True				
ANR	8848954	ExpressionStatement	idx = v -> zz_8x4 [ i ++ ] + off	163:16:3190:3214	8848314	3	True				
ANR	8848955	AssignmentExpression	idx = v -> zz_8x4 [ i ++ ] + off		8848314	0		=			
ANR	8848956	Identifier	idx		8848314	0					
ANR	8848957	AdditiveExpression	v -> zz_8x4 [ i ++ ] + off		8848314	1		+			
ANR	8848958	ArrayIndexing	v -> zz_8x4 [ i ++ ]		8848314	0					
ANR	8848959	PtrMemberAccess	v -> zz_8x4		8848314	0					
ANR	8848960	Identifier	v		8848314	0					
ANR	8848961	Identifier	zz_8x4		8848314	1					
ANR	8848962	PostIncDecOperationExpression	i ++		8848314	1					
ANR	8848963	Identifier	i		8848314	0					
ANR	8848964	IncDec	++		8848314	1					
ANR	8848965	Identifier	off		8848314	1					
ANR	8848966	ExpressionStatement	block [ idx ] = value * scale	165:16:3233:3259	8848314	4	True				
ANR	8848967	AssignmentExpression	block [ idx ] = value * scale		8848314	0		=			
ANR	8848968	ArrayIndexing	block [ idx ]		8848314	0					
ANR	8848969	Identifier	block		8848314	0					
ANR	8848970	Identifier	idx		8848314	1					
ANR	8848971	MultiplicativeExpression	value * scale		8848314	1		*			
ANR	8848972	Identifier	value		8848314	0					
ANR	8848973	Identifier	scale		8848314	1					
ANR	8848974	IfStatement	if ( ! v -> pquantizer )		8848314	5					
ANR	8848975	Condition	! v -> pquantizer	167:19:3281:3294	8848314	0	True				
ANR	8848976	UnaryOperationExpression	! v -> pquantizer		8848314	0					
ANR	8848977	UnaryOperator	!		8848314	0					
ANR	8848978	PtrMemberAccess	v -> pquantizer		8848314	1					
ANR	8848979	Identifier	v		8848314	0					
ANR	8848980	Identifier	pquantizer		8848314	1					
ANR	8848981	ExpressionStatement	block [ idx ] += ( block [ idx ] < 0 ) ? - mquant : mquant	169:20:3318:3367	8848314	1	True				
ANR	8848982	AssignmentExpression	block [ idx ] += ( block [ idx ] < 0 ) ? - mquant : mquant		8848314	0		+=			
ANR	8848983	ArrayIndexing	block [ idx ]		8848314	0					
ANR	8848984	Identifier	block		8848314	0					
ANR	8848985	Identifier	idx		8848314	1					
ANR	8848986	ConditionalExpression	( block [ idx ] < 0 ) ? - mquant : mquant		8848314	1					
ANR	8848987	Condition	block [ idx ] < 0		8848314	0					
ANR	8848988	RelationalExpression	block [ idx ] < 0		8848314	0		<			
ANR	8848989	ArrayIndexing	block [ idx ]		8848314	0					
ANR	8848990	Identifier	block		8848314	0					
ANR	8848991	Identifier	idx		8848314	1					
ANR	8848992	PrimaryExpression	0		8848314	1					
ANR	8848993	UnaryOperationExpression	- mquant		8848314	1					
ANR	8848994	UnaryOperator	-		8848314	0					
ANR	8848995	Identifier	mquant		8848314	1					
ANR	8848996	Identifier	mquant		8848314	2					
ANR	8848997	IfStatement	if ( ! ( subblkpat & ( 1 << ( 1 - j ) ) ) && ! skip_block )		8848314	4					
ANR	8848998	Condition	! ( subblkpat & ( 1 << ( 1 - j ) ) ) && ! skip_block	173:15:3400:3443	8848314	0	True				
ANR	8848999	AndExpression	! ( subblkpat & ( 1 << ( 1 - j ) ) ) && ! skip_block		8848314	0		&&			
ANR	8849000	UnaryOperationExpression	! ( subblkpat & ( 1 << ( 1 - j ) ) )		8848314	0					
ANR	8849001	UnaryOperator	!		8848314	0					
ANR	8849002	BitAndExpression	subblkpat & ( 1 << ( 1 - j ) )		8848314	1		&			
ANR	8849003	Identifier	subblkpat		8848314	0					
ANR	8849004	ShiftExpression	1 << ( 1 - j )		8848314	1		<<			
ANR	8849005	PrimaryExpression	1		8848314	0					
ANR	8849006	AdditiveExpression	1 - j		8848314	1		-			
ANR	8849007	PrimaryExpression	1		8848314	0					
ANR	8849008	Identifier	j		8848314	1					
ANR	8849009	UnaryOperationExpression	! skip_block		8848314	1					
ANR	8849010	UnaryOperator	!		8848314	0					
ANR	8849011	Identifier	skip_block		8848314	1					
ANR	8849012	ExpressionStatement	"s -> dsp . vc1_inv_trans_8x4 ( dst + j * 4 * linesize , linesize , block + off )"	175:16:3463:3530	8848314	1	True				
ANR	8849013	CallExpression	"s -> dsp . vc1_inv_trans_8x4 ( dst + j * 4 * linesize , linesize , block + off )"		8848314	0					
ANR	8849014	Callee	s -> dsp . vc1_inv_trans_8x4		8848314	0					
ANR	8849015	MemberAccess	s -> dsp . vc1_inv_trans_8x4		8848314	0					
ANR	8849016	PtrMemberAccess	s -> dsp		8848314	0					
ANR	8849017	Identifier	s		8848314	0					
ANR	8849018	Identifier	dsp		8848314	1					
ANR	8849019	Identifier	vc1_inv_trans_8x4		8848314	1					
ANR	8849020	ArgumentList	dst + j * 4 * linesize		8848314	1					
ANR	8849021	Argument	dst + j * 4 * linesize		8848314	0					
ANR	8849022	AdditiveExpression	dst + j * 4 * linesize		8848314	0		+			
ANR	8849023	Identifier	dst		8848314	0					
ANR	8849024	MultiplicativeExpression	j * 4 * linesize		8848314	1		*			
ANR	8849025	Identifier	j		8848314	0					
ANR	8849026	MultiplicativeExpression	4 * linesize		8848314	1		*			
ANR	8849027	PrimaryExpression	4		8848314	0					
ANR	8849028	Identifier	linesize		8848314	1					
ANR	8849029	Argument	linesize		8848314	1					
ANR	8849030	Identifier	linesize		8848314	0					
ANR	8849031	Argument	block + off		8848314	2					
ANR	8849032	AdditiveExpression	block + off		8848314	0		+			
ANR	8849033	Identifier	block		8848314	0					
ANR	8849034	Identifier	off		8848314	1					
ANR	8849035	BreakStatement	break ;	179:8:3552:3557	8848314	11	True				
ANR	8849036	Label	case TT_4X8 :	181:4:3564:3575	8848314	12	True				
ANR	8849037	Identifier	TT_4X8		8848314	0					
ANR	8849038	ForStatement	for ( j = 0 ; j < 2 ; j ++ )		8848314	13					
ANR	8849039	ForInit	j = 0 ;	183:12:3590:3595	8848314	0	True				
ANR	8849040	AssignmentExpression	j = 0		8848314	0		=			
ANR	8849041	Identifier	j		8848314	0					
ANR	8849042	PrimaryExpression	0		8848314	1					
ANR	8849043	Condition	j < 2	183:19:3597:3601	8848314	1	True				
ANR	8849044	RelationalExpression	j < 2		8848314	0		<			
ANR	8849045	Identifier	j		8848314	0					
ANR	8849046	PrimaryExpression	2		8848314	1					
ANR	8849047	PostIncDecOperationExpression	j ++	183:26:3604:3606	8848314	2	True				
ANR	8849048	Identifier	j		8848314	0					
ANR	8849049	IncDec	++		8848314	1					
ANR	8849050	CompoundStatement		179:31:3422:3422	8848314	3					
ANR	8849051	ExpressionStatement	last = subblkpat & ( 1 << ( 1 - j ) )	185:12:3624:3657	8848314	0	True				
ANR	8849052	AssignmentExpression	last = subblkpat & ( 1 << ( 1 - j ) )		8848314	0		=			
ANR	8849053	Identifier	last		8848314	0					
ANR	8849054	BitAndExpression	subblkpat & ( 1 << ( 1 - j ) )		8848314	1		&			
ANR	8849055	Identifier	subblkpat		8848314	0					
ANR	8849056	ShiftExpression	1 << ( 1 - j )		8848314	1		<<			
ANR	8849057	PrimaryExpression	1		8848314	0					
ANR	8849058	AdditiveExpression	1 - j		8848314	1		-			
ANR	8849059	PrimaryExpression	1		8848314	0					
ANR	8849060	Identifier	j		8848314	1					
ANR	8849061	ExpressionStatement	i = 0	187:12:3672:3677	8848314	1	True				
ANR	8849062	AssignmentExpression	i = 0		8848314	0		=			
ANR	8849063	Identifier	i		8848314	0					
ANR	8849064	PrimaryExpression	0		8848314	1					
ANR	8849065	ExpressionStatement	off = j * 4	189:12:3692:3703	8848314	2	True				
ANR	8849066	AssignmentExpression	off = j * 4		8848314	0		=			
ANR	8849067	Identifier	off		8848314	0					
ANR	8849068	MultiplicativeExpression	j * 4		8848314	1		*			
ANR	8849069	Identifier	j		8848314	0					
ANR	8849070	PrimaryExpression	4		8848314	1					
ANR	8849071	WhileStatement	while ( ! last )		8848314	3					
ANR	8849072	Condition	! last	191:19:3725:3729	8848314	0	True				
ANR	8849073	UnaryOperationExpression	! last		8848314	0					
ANR	8849074	UnaryOperator	!		8848314	0					
ANR	8849075	Identifier	last		8848314	1					
ANR	8849076	CompoundStatement		187:26:3545:3545	8848314	1					
ANR	8849077	ExpressionStatement	"vc1_decode_ac_coeff ( v , & last , & skip , & value , v -> codingset2 )"	193:16:3751:3810	8848314	0	True				
ANR	8849078	CallExpression	"vc1_decode_ac_coeff ( v , & last , & skip , & value , v -> codingset2 )"		8848314	0					
ANR	8849079	Callee	vc1_decode_ac_coeff		8848314	0					
ANR	8849080	Identifier	vc1_decode_ac_coeff		8848314	0					
ANR	8849081	ArgumentList	v		8848314	1					
ANR	8849082	Argument	v		8848314	0					
ANR	8849083	Identifier	v		8848314	0					
ANR	8849084	Argument	& last		8848314	1					
ANR	8849085	UnaryOperationExpression	& last		8848314	0					
ANR	8849086	UnaryOperator	&		8848314	0					
ANR	8849087	Identifier	last		8848314	1					
ANR	8849088	Argument	& skip		8848314	2					
ANR	8849089	UnaryOperationExpression	& skip		8848314	0					
ANR	8849090	UnaryOperator	&		8848314	0					
ANR	8849091	Identifier	skip		8848314	1					
ANR	8849092	Argument	& value		8848314	3					
ANR	8849093	UnaryOperationExpression	& value		8848314	0					
ANR	8849094	UnaryOperator	&		8848314	0					
ANR	8849095	Identifier	value		8848314	1					
ANR	8849096	Argument	v -> codingset2		8848314	4					
ANR	8849097	PtrMemberAccess	v -> codingset2		8848314	0					
ANR	8849098	Identifier	v		8848314	0					
ANR	8849099	Identifier	codingset2		8848314	1					
ANR	8849100	ExpressionStatement	i += skip	195:16:3829:3838	8848314	1	True				
ANR	8849101	AssignmentExpression	i += skip		8848314	0		+=			
ANR	8849102	Identifier	i		8848314	0					
ANR	8849103	Identifier	skip		8848314	1					
ANR	8849104	IfStatement	if ( i > 31 )		8848314	2					
ANR	8849105	Condition	i > 31	197:19:3860:3865	8848314	0	True				
ANR	8849106	RelationalExpression	i > 31		8848314	0		>			
ANR	8849107	Identifier	i		8848314	0					
ANR	8849108	PrimaryExpression	31		8848314	1					
ANR	8849109	BreakStatement	break ;	199:20:3889:3894	8848314	1	True				
ANR	8849110	ExpressionStatement	idx = v -> zz_4x8 [ i ++ ] + off	201:16:3913:3937	8848314	3	True				
ANR	8849111	AssignmentExpression	idx = v -> zz_4x8 [ i ++ ] + off		8848314	0		=			
ANR	8849112	Identifier	idx		8848314	0					
ANR	8849113	AdditiveExpression	v -> zz_4x8 [ i ++ ] + off		8848314	1		+			
ANR	8849114	ArrayIndexing	v -> zz_4x8 [ i ++ ]		8848314	0					
ANR	8849115	PtrMemberAccess	v -> zz_4x8		8848314	0					
ANR	8849116	Identifier	v		8848314	0					
ANR	8849117	Identifier	zz_4x8		8848314	1					
ANR	8849118	PostIncDecOperationExpression	i ++		8848314	1					
ANR	8849119	Identifier	i		8848314	0					
ANR	8849120	IncDec	++		8848314	1					
ANR	8849121	Identifier	off		8848314	1					
ANR	8849122	ExpressionStatement	block [ idx ] = value * scale	203:16:3956:3982	8848314	4	True				
ANR	8849123	AssignmentExpression	block [ idx ] = value * scale		8848314	0		=			
ANR	8849124	ArrayIndexing	block [ idx ]		8848314	0					
ANR	8849125	Identifier	block		8848314	0					
ANR	8849126	Identifier	idx		8848314	1					
ANR	8849127	MultiplicativeExpression	value * scale		8848314	1		*			
ANR	8849128	Identifier	value		8848314	0					
ANR	8849129	Identifier	scale		8848314	1					
ANR	8849130	IfStatement	if ( ! v -> pquantizer )		8848314	5					
ANR	8849131	Condition	! v -> pquantizer	205:19:4004:4017	8848314	0	True				
ANR	8849132	UnaryOperationExpression	! v -> pquantizer		8848314	0					
ANR	8849133	UnaryOperator	!		8848314	0					
ANR	8849134	PtrMemberAccess	v -> pquantizer		8848314	1					
ANR	8849135	Identifier	v		8848314	0					
ANR	8849136	Identifier	pquantizer		8848314	1					
ANR	8849137	ExpressionStatement	block [ idx ] += ( block [ idx ] < 0 ) ? - mquant : mquant	207:20:4041:4090	8848314	1	True				
ANR	8849138	AssignmentExpression	block [ idx ] += ( block [ idx ] < 0 ) ? - mquant : mquant		8848314	0		+=			
ANR	8849139	ArrayIndexing	block [ idx ]		8848314	0					
ANR	8849140	Identifier	block		8848314	0					
ANR	8849141	Identifier	idx		8848314	1					
ANR	8849142	ConditionalExpression	( block [ idx ] < 0 ) ? - mquant : mquant		8848314	1					
ANR	8849143	Condition	block [ idx ] < 0		8848314	0					
ANR	8849144	RelationalExpression	block [ idx ] < 0		8848314	0		<			
ANR	8849145	ArrayIndexing	block [ idx ]		8848314	0					
ANR	8849146	Identifier	block		8848314	0					
ANR	8849147	Identifier	idx		8848314	1					
ANR	8849148	PrimaryExpression	0		8848314	1					
ANR	8849149	UnaryOperationExpression	- mquant		8848314	1					
ANR	8849150	UnaryOperator	-		8848314	0					
ANR	8849151	Identifier	mquant		8848314	1					
ANR	8849152	Identifier	mquant		8848314	2					
ANR	8849153	IfStatement	if ( ! ( subblkpat & ( 1 << ( 1 - j ) ) ) && ! skip_block )		8848314	4					
ANR	8849154	Condition	! ( subblkpat & ( 1 << ( 1 - j ) ) ) && ! skip_block	211:15:4123:4166	8848314	0	True				
ANR	8849155	AndExpression	! ( subblkpat & ( 1 << ( 1 - j ) ) ) && ! skip_block		8848314	0		&&			
ANR	8849156	UnaryOperationExpression	! ( subblkpat & ( 1 << ( 1 - j ) ) )		8848314	0					
ANR	8849157	UnaryOperator	!		8848314	0					
ANR	8849158	BitAndExpression	subblkpat & ( 1 << ( 1 - j ) )		8848314	1		&			
ANR	8849159	Identifier	subblkpat		8848314	0					
ANR	8849160	ShiftExpression	1 << ( 1 - j )		8848314	1		<<			
ANR	8849161	PrimaryExpression	1		8848314	0					
ANR	8849162	AdditiveExpression	1 - j		8848314	1		-			
ANR	8849163	PrimaryExpression	1		8848314	0					
ANR	8849164	Identifier	j		8848314	1					
ANR	8849165	UnaryOperationExpression	! skip_block		8848314	1					
ANR	8849166	UnaryOperator	!		8848314	0					
ANR	8849167	Identifier	skip_block		8848314	1					
ANR	8849168	ExpressionStatement	"s -> dsp . vc1_inv_trans_4x8 ( dst + j * 4 , linesize , block + off )"	213:16:4186:4244	8848314	1	True				
ANR	8849169	CallExpression	"s -> dsp . vc1_inv_trans_4x8 ( dst + j * 4 , linesize , block + off )"		8848314	0					
ANR	8849170	Callee	s -> dsp . vc1_inv_trans_4x8		8848314	0					
ANR	8849171	MemberAccess	s -> dsp . vc1_inv_trans_4x8		8848314	0					
ANR	8849172	PtrMemberAccess	s -> dsp		8848314	0					
ANR	8849173	Identifier	s		8848314	0					
ANR	8849174	Identifier	dsp		8848314	1					
ANR	8849175	Identifier	vc1_inv_trans_4x8		8848314	1					
ANR	8849176	ArgumentList	dst + j * 4		8848314	1					
ANR	8849177	Argument	dst + j * 4		8848314	0					
ANR	8849178	AdditiveExpression	dst + j * 4		8848314	0		+			
ANR	8849179	Identifier	dst		8848314	0					
ANR	8849180	MultiplicativeExpression	j * 4		8848314	1		*			
ANR	8849181	Identifier	j		8848314	0					
ANR	8849182	PrimaryExpression	4		8848314	1					
ANR	8849183	Argument	linesize		8848314	1					
ANR	8849184	Identifier	linesize		8848314	0					
ANR	8849185	Argument	block + off		8848314	2					
ANR	8849186	AdditiveExpression	block + off		8848314	0		+			
ANR	8849187	Identifier	block		8848314	0					
ANR	8849188	Identifier	off		8848314	1					
ANR	8849189	BreakStatement	break ;	217:8:4266:4271	8848314	14	True				
ANR	8849190	ReturnStatement	return 0 ;	221:4:4285:4293	8848314	13	True				
ANR	8849191	PrimaryExpression	0		8848314	0					
ANR	8849192	ReturnType	static int		8848314	1					
ANR	8849193	Identifier	vc1_decode_p_block		8848314	2					
ANR	8849194	ParameterList	"VC1Context * v , DCTELEM block [ 64 ] , int n , int mquant , int ttmb , int first_block , uint8_t * dst , int linesize , int skip_block"		8848314	3					
ANR	8849195	Parameter	VC1Context * v	1:30:30:42	8848314	0	True				
ANR	8849196	ParameterType	VC1Context *		8848314	0					
ANR	8849197	Identifier	v		8848314	1					
ANR	8849198	Parameter	DCTELEM block [ 64 ]	1:45:45:61	8848314	1	True				
ANR	8849199	ParameterType	DCTELEM [ 64 ]		8848314	0					
ANR	8849200	Identifier	block		8848314	1					
ANR	8849201	Parameter	int n	1:64:64:68	8848314	2	True				
ANR	8849202	ParameterType	int		8848314	0					
ANR	8849203	Identifier	n		8848314	1					
ANR	8849204	Parameter	int mquant	1:71:71:80	8848314	3	True				
ANR	8849205	ParameterType	int		8848314	0					
ANR	8849206	Identifier	mquant		8848314	1					
ANR	8849207	Parameter	int ttmb	1:83:83:90	8848314	4	True				
ANR	8849208	ParameterType	int		8848314	0					
ANR	8849209	Identifier	ttmb		8848314	1					
ANR	8849210	Parameter	int first_block	1:93:93:107	8848314	5	True				
ANR	8849211	ParameterType	int		8848314	0					
ANR	8849212	Identifier	first_block		8848314	1					
ANR	8849213	Parameter	uint8_t * dst	3:30:141:152	8848314	6	True				
ANR	8849214	ParameterType	uint8_t *		8848314	0					
ANR	8849215	Identifier	dst		8848314	1					
ANR	8849216	Parameter	int linesize	3:44:155:166	8848314	7	True				
ANR	8849217	ParameterType	int		8848314	0					
ANR	8849218	Identifier	linesize		8848314	1					
ANR	8849219	Parameter	int skip_block	3:58:169:182	8848314	8	True				
ANR	8849220	ParameterType	int		8848314	0					
ANR	8849221	Identifier	skip_block		8848314	1					
ANR	8849222	CFGEntryNode	ENTRY		8848314		True				
ANR	8849223	CFGExitNode	EXIT		8848314		True				
ANR	8849224	Symbol	& v -> s		8848314						
ANR	8849225	Symbol	* v		8848314						
ANR	8849226	Symbol	& value		8848314						
ANR	8849227	Symbol	* ff_vc1_ttblk_vlc		8848314						
ANR	8849228	Symbol	* get_vlc2		8848314						
ANR	8849229	Symbol	* v -> tt_index		8848314						
ANR	8849230	Symbol	TT_4X8_RIGHT		8848314						
ANR	8849231	Symbol	linesize		8848314						
ANR	8849232	Symbol	v -> codingset2		8848314						
ANR	8849233	Symbol	* ff_vc1_simple_progressive_4x4_zz		8848314						
ANR	8849234	Symbol	* v -> zz_8x4		8848314						
ANR	8849235	Symbol	* v -> zz_4x8		8848314						
ANR	8849236	Symbol	ff_vc1_ttblk_to_tt		8848314						
ANR	8849237	Symbol	VC1_SUBBLKPAT_VLC_BITS		8848314						
ANR	8849238	Symbol	decode012		8848314						
ANR	8849239	Symbol	* idx		8848314						
ANR	8849240	Symbol	v -> zz_8x4		8848314						
ANR	8849241	Symbol	v -> zz_4x8		8848314						
ANR	8849242	Symbol	mquant		8848314						
ANR	8849243	Symbol	* off		8848314						
ANR	8849244	Symbol	block		8848314						
ANR	8849245	Symbol	wmv1_scantable		8848314						
ANR	8849246	Symbol	& last		8848314						
ANR	8849247	Symbol	ttmb		8848314						
ANR	8849248	Symbol	last		8848314						
ANR	8849249	Symbol	* * v -> tt_index		8848314						
ANR	8849250	Symbol	VC1_TTBLK_VLC_BITS		8848314						
ANR	8849251	Symbol	* * * v		8848314						
ANR	8849252	Symbol	skip_block		8848314						
ANR	8849253	Symbol	s -> dsp		8848314						
ANR	8849254	Symbol	& s -> gb		8848314						
ANR	8849255	Symbol	v -> tt_index		8848314						
ANR	8849256	Symbol	ff_vc1_ttblk_vlc [ v -> tt_index ] . table		8848314						
ANR	8849257	Symbol	* ff_vc1_subblkpat_vlc		8848314						
ANR	8849258	Symbol	* ff_vc1_ttblk_to_tt		8848314						
ANR	8849259	Symbol	idx		8848314						
ANR	8849260	Symbol	* wmv1_scantable		8848314						
ANR	8849261	Symbol	dst		8848314						
ANR	8849262	Symbol	scale		8848314						
ANR	8849263	Symbol	* * wmv1_scantable		8848314						
ANR	8849264	Symbol	skip		8848314						
ANR	8849265	Symbol	subblkpat		8848314						
ANR	8849266	Symbol	v -> pquantizer		8848314						
ANR	8849267	Symbol	* * v		8848314						
ANR	8849268	Symbol	first_block		8848314						
ANR	8849269	Symbol	ff_vc1_subblkpat_vlc [ v -> tt_index ] . table		8848314						
ANR	8849270	Symbol	gb		8848314						
ANR	8849271	Symbol	value		8848314						
ANR	8849272	Symbol	TT_8X4_BOTTOM		8848314						
ANR	8849273	Symbol	v -> ttmbf		8848314						
ANR	8849274	Symbol	TT_8X4_TOP		8848314						
ANR	8849275	Symbol	ff_vc1_simple_progressive_4x4_zz		8848314						
ANR	8849276	Symbol	v -> halfpq		8848314						
ANR	8849277	Symbol	i		8848314						
ANR	8849278	Symbol	TT_4X8_LEFT		8848314						
ANR	8849279	Symbol	& skip		8848314						
ANR	8849280	Symbol	j		8848314						
ANR	8849281	Symbol	n		8848314						
ANR	8849282	Symbol	off		8848314						
ANR	8849283	Symbol	* block		8848314						
ANR	8849284	Symbol	* * ff_vc1_ttblk_to_tt		8848314						
ANR	8849285	Symbol	ff_vc1_subblkpat_vlc		8848314						
ANR	8849286	Symbol	s		8848314						
ANR	8849287	Symbol	TT_4X4		8848314						
ANR	8849288	Symbol	ff_vc1_ttblk_vlc		8848314						
ANR	8849289	Symbol	v		8848314						
ANR	8849290	Symbol	TT_8X4		8848314						
ANR	8849291	Symbol	TT_4X8		8848314						
ANR	8849292	Symbol	v -> pq		8848314						
ANR	8849293	Symbol	ttblk		8848314						
ANR	8849294	Symbol	TT_8X8		8848314						
ANR	8849295	Symbol	get_vlc2		8848314						
ANR	8849296	Symbol	* s		8848314						
