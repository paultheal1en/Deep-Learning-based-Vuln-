command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6709705	File	/home/p4ultr4n/workplace/ReVeal/raw_code/process_cc608_0.c								
ANR	6709706	Function	process_cc608	1:0:0:2453							
ANR	6709707	FunctionDef	"process_cc608 (CCaptionSubContext * ctx , int64_t pts , uint8_t hi , uint8_t lo)"		6709706	0					
ANR	6709708	CompoundStatement		3:0:88:2453	6709706	0					
ANR	6709709	IdentifierDeclStatement	int ret = 0 ;	5:4:95:106	6709706	0	True				
ANR	6709710	IdentifierDecl	ret = 0		6709706	0					
ANR	6709711	IdentifierDeclType	int		6709706	0					
ANR	6709712	Identifier	ret		6709706	1					
ANR	6709713	AssignmentExpression	ret = 0		6709706	2		=			
ANR	6709714	Identifier	ret		6709706	0					
ANR	6709715	PrimaryExpression	0		6709706	1					
ANR	6709716	Statement	define	7:1:110:115	6709706	1	True				
ANR	6709717	Statement	COR3	7:8:117:120	6709706	2	True				
ANR	6709718	Statement	(	7:12:121:121	6709706	3	True				
ANR	6709719	Statement	var	7:13:122:124	6709706	4	True				
ANR	6709720	Statement	","	7:16:125:125	6709706	5	True				
ANR	6709721	Statement	with1	7:18:127:131	6709706	6	True				
ANR	6709722	Statement	","	7:23:132:132	6709706	7	True				
ANR	6709723	Statement	with2	7:25:134:138	6709706	8	True				
ANR	6709724	Statement	","	7:30:139:139	6709706	9	True				
ANR	6709725	Statement	with3	7:32:141:145	6709706	10	True				
ANR	6709726	Statement	)	7:37:146:146	6709706	11	True				
ANR	6709727	Statement	(	7:40:149:149	6709706	12	True				
ANR	6709728	Statement	(	7:42:151:151	6709706	13	True				
ANR	6709729	Statement	var	7:43:152:154	6709706	14	True				
ANR	6709730	Statement	)	7:46:155:155	6709706	15	True				
ANR	6709731	Statement	==	7:48:157:158	6709706	16	True				
ANR	6709732	Statement	(	7:51:160:160	6709706	17	True				
ANR	6709733	Statement	with1	7:52:161:165	6709706	18	True				
ANR	6709734	Statement	)	7:57:166:166	6709706	19	True				
ANR	6709735	Statement	||	7:59:168:169	6709706	20	True				
ANR	6709736	Statement	(	7:63:172:172	6709706	21	True				
ANR	6709737	Statement	var	7:64:173:175	6709706	22	True				
ANR	6709738	Statement	)	7:67:176:176	6709706	23	True				
ANR	6709739	Statement	==	7:69:178:179	6709706	24	True				
ANR	6709740	Statement	(	7:72:181:181	6709706	25	True				
ANR	6709741	Statement	with2	7:73:182:186	6709706	26	True				
ANR	6709742	Statement	)	7:78:187:187	6709706	27	True				
ANR	6709743	Statement	||	7:80:189:190	6709706	28	True				
ANR	6709744	Statement	(	7:83:192:192	6709706	29	True				
ANR	6709745	Statement	var	7:84:193:195	6709706	30	True				
ANR	6709746	Statement	)	7:87:196:196	6709706	31	True				
ANR	6709747	Statement	==	7:89:198:199	6709706	32	True				
ANR	6709748	Statement	(	7:92:201:201	6709706	33	True				
ANR	6709749	Statement	with3	7:93:202:206	6709706	34	True				
ANR	6709750	Statement	)	7:98:207:207	6709706	35	True				
ANR	6709751	Statement	)	7:100:209:209	6709706	36	True				
ANR	6709752	IfStatement	if ( hi == ctx -> prev_cmd [ 0 ] && lo == ctx -> prev_cmd [ 1 ] )		6709706	37					
ANR	6709753	Condition	hi == ctx -> prev_cmd [ 0 ] && lo == ctx -> prev_cmd [ 1 ]	9:9:221:268	6709706	0	True				
ANR	6709754	AndExpression	hi == ctx -> prev_cmd [ 0 ] && lo == ctx -> prev_cmd [ 1 ]		6709706	0		&&			
ANR	6709755	EqualityExpression	hi == ctx -> prev_cmd [ 0 ]		6709706	0		==			
ANR	6709756	Identifier	hi		6709706	0					
ANR	6709757	ArrayIndexing	ctx -> prev_cmd [ 0 ]		6709706	1					
ANR	6709758	PtrMemberAccess	ctx -> prev_cmd		6709706	0					
ANR	6709759	Identifier	ctx		6709706	0					
ANR	6709760	Identifier	prev_cmd		6709706	1					
ANR	6709761	PrimaryExpression	0		6709706	1					
ANR	6709762	EqualityExpression	lo == ctx -> prev_cmd [ 1 ]		6709706	1		==			
ANR	6709763	Identifier	lo		6709706	0					
ANR	6709764	ArrayIndexing	ctx -> prev_cmd [ 1 ]		6709706	1					
ANR	6709765	PtrMemberAccess	ctx -> prev_cmd		6709706	0					
ANR	6709766	Identifier	ctx		6709706	0					
ANR	6709767	Identifier	prev_cmd		6709706	1					
ANR	6709768	PrimaryExpression	1		6709706	1					
ANR	6709769	CompoundStatement		7:59:182:182	6709706	1					
ANR	6709770	ElseStatement	else		6709706	0					
ANR	6709771	IfStatement	if ( ( hi == 0x10 && ( lo >= 0x40 || lo <= 0x5f ) ) || ( ( hi >= 0x11 && hi <= 0x17 ) && ( lo >= 0x40 && lo <= 0x7f ) ) )		6709706	0					
ANR	6709772	Condition	( hi == 0x10 && ( lo >= 0x40 || lo <= 0x5f ) ) || ( ( hi >= 0x11 && hi <= 0x17 ) && ( lo >= 0x40 && lo <= 0x7f ) )	13:16:326:446	6709706	0	True				
ANR	6709773	OrExpression	( hi == 0x10 && ( lo >= 0x40 || lo <= 0x5f ) ) || ( ( hi >= 0x11 && hi <= 0x17 ) && ( lo >= 0x40 && lo <= 0x7f ) )		6709706	0		||			
ANR	6709774	AndExpression	hi == 0x10 && ( lo >= 0x40 || lo <= 0x5f )		6709706	0		&&			
ANR	6709775	EqualityExpression	hi == 0x10		6709706	0		==			
ANR	6709776	Identifier	hi		6709706	0					
ANR	6709777	PrimaryExpression	0x10		6709706	1					
ANR	6709778	OrExpression	lo >= 0x40 || lo <= 0x5f		6709706	1		||			
ANR	6709779	RelationalExpression	lo >= 0x40		6709706	0		>=			
ANR	6709780	Identifier	lo		6709706	0					
ANR	6709781	PrimaryExpression	0x40		6709706	1					
ANR	6709782	RelationalExpression	lo <= 0x5f		6709706	1		<=			
ANR	6709783	Identifier	lo		6709706	0					
ANR	6709784	PrimaryExpression	0x5f		6709706	1					
ANR	6709785	AndExpression	( hi >= 0x11 && hi <= 0x17 ) && ( lo >= 0x40 && lo <= 0x7f )		6709706	1		&&			
ANR	6709786	AndExpression	hi >= 0x11 && hi <= 0x17		6709706	0		&&			
ANR	6709787	RelationalExpression	hi >= 0x11		6709706	0		>=			
ANR	6709788	Identifier	hi		6709706	0					
ANR	6709789	PrimaryExpression	0x11		6709706	1					
ANR	6709790	RelationalExpression	hi <= 0x17		6709706	1		<=			
ANR	6709791	Identifier	hi		6709706	0					
ANR	6709792	PrimaryExpression	0x17		6709706	1					
ANR	6709793	AndExpression	lo >= 0x40 && lo <= 0x7f		6709706	1		&&			
ANR	6709794	RelationalExpression	lo >= 0x40		6709706	0		>=			
ANR	6709795	Identifier	lo		6709706	0					
ANR	6709796	PrimaryExpression	0x40		6709706	1					
ANR	6709797	RelationalExpression	lo <= 0x7f		6709706	1		<=			
ANR	6709798	Identifier	lo		6709706	0					
ANR	6709799	PrimaryExpression	0x7f		6709706	1					
ANR	6709800	CompoundStatement		13:77:361:361	6709706	1					
ANR	6709801	ExpressionStatement	"handle_pac ( ctx , hi , lo )"	17:8:461:484	6709706	0	True				
ANR	6709802	CallExpression	"handle_pac ( ctx , hi , lo )"		6709706	0					
ANR	6709803	Callee	handle_pac		6709706	0					
ANR	6709804	Identifier	handle_pac		6709706	0					
ANR	6709805	ArgumentList	ctx		6709706	1					
ANR	6709806	Argument	ctx		6709706	0					
ANR	6709807	Identifier	ctx		6709706	0					
ANR	6709808	Argument	hi		6709706	1					
ANR	6709809	Identifier	hi		6709706	0					
ANR	6709810	Argument	lo		6709706	2					
ANR	6709811	Identifier	lo		6709706	0					
ANR	6709812	ElseStatement	else		6709706	0					
ANR	6709813	IfStatement	if ( ( hi == 0x11 && lo >= 0x20 && lo <= 0x2f ) || ( hi == 0x17 && lo >= 0x2e && lo <= 0x2f ) )		6709706	0					
ANR	6709814	Condition	( hi == 0x11 && lo >= 0x20 && lo <= 0x2f ) || ( hi == 0x17 && lo >= 0x2e && lo <= 0x2f )	19:16:503:606	6709706	0	True				
ANR	6709815	OrExpression	( hi == 0x11 && lo >= 0x20 && lo <= 0x2f ) || ( hi == 0x17 && lo >= 0x2e && lo <= 0x2f )		6709706	0		||			
ANR	6709816	AndExpression	hi == 0x11 && lo >= 0x20 && lo <= 0x2f		6709706	0		&&			
ANR	6709817	EqualityExpression	hi == 0x11		6709706	0		==			
ANR	6709818	Identifier	hi		6709706	0					
ANR	6709819	PrimaryExpression	0x11		6709706	1					
ANR	6709820	AndExpression	lo >= 0x20 && lo <= 0x2f		6709706	1		&&			
ANR	6709821	RelationalExpression	lo >= 0x20		6709706	0		>=			
ANR	6709822	Identifier	lo		6709706	0					
ANR	6709823	PrimaryExpression	0x20		6709706	1					
ANR	6709824	RelationalExpression	lo <= 0x2f		6709706	1		<=			
ANR	6709825	Identifier	lo		6709706	0					
ANR	6709826	PrimaryExpression	0x2f		6709706	1					
ANR	6709827	AndExpression	hi == 0x17 && lo >= 0x2e && lo <= 0x2f		6709706	1		&&			
ANR	6709828	EqualityExpression	hi == 0x17		6709706	0		==			
ANR	6709829	Identifier	hi		6709706	0					
ANR	6709830	PrimaryExpression	0x17		6709706	1					
ANR	6709831	AndExpression	lo >= 0x2e && lo <= 0x2f		6709706	1		&&			
ANR	6709832	RelationalExpression	lo >= 0x2e		6709706	0		>=			
ANR	6709833	Identifier	lo		6709706	0					
ANR	6709834	PrimaryExpression	0x2e		6709706	1					
ANR	6709835	RelationalExpression	lo <= 0x2f		6709706	1		<=			
ANR	6709836	Identifier	lo		6709706	0					
ANR	6709837	PrimaryExpression	0x2f		6709706	1					
ANR	6709838	CompoundStatement		19:60:521:521	6709706	1					
ANR	6709839	ExpressionStatement	"handle_textattr ( ctx , hi , lo )"	23:8:621:649	6709706	0	True				
ANR	6709840	CallExpression	"handle_textattr ( ctx , hi , lo )"		6709706	0					
ANR	6709841	Callee	handle_textattr		6709706	0					
ANR	6709842	Identifier	handle_textattr		6709706	0					
ANR	6709843	ArgumentList	ctx		6709706	1					
ANR	6709844	Argument	ctx		6709706	0					
ANR	6709845	Identifier	ctx		6709706	0					
ANR	6709846	Argument	hi		6709706	1					
ANR	6709847	Identifier	hi		6709706	0					
ANR	6709848	Argument	lo		6709706	2					
ANR	6709849	Identifier	lo		6709706	0					
ANR	6709850	ElseStatement	else		6709706	0					
ANR	6709851	IfStatement	"if ( COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x20 )"		6709706	0					
ANR	6709852	Condition	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x20"	25:16:668:707	6709706	0	True				
ANR	6709853	AndExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x20"		6709706	0		&&			
ANR	6709854	CallExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C )"		6709706	0					
ANR	6709855	Callee	COR3		6709706	0					
ANR	6709856	Identifier	COR3		6709706	0					
ANR	6709857	ArgumentList	hi		6709706	1					
ANR	6709858	Argument	hi		6709706	0					
ANR	6709859	Identifier	hi		6709706	0					
ANR	6709860	Argument	0x14		6709706	1					
ANR	6709861	PrimaryExpression	0x14		6709706	0					
ANR	6709862	Argument	0x15		6709706	2					
ANR	6709863	PrimaryExpression	0x15		6709706	0					
ANR	6709864	Argument	0x1C		6709706	3					
ANR	6709865	PrimaryExpression	0x1C		6709706	0					
ANR	6709866	EqualityExpression	lo == 0x20		6709706	1		==			
ANR	6709867	Identifier	lo		6709706	0					
ANR	6709868	PrimaryExpression	0x20		6709706	1					
ANR	6709869	CompoundStatement		23:59:622:622	6709706	1					
ANR	6709870	ExpressionStatement	ctx -> mode = CCMODE_POPON	29:8:756:780	6709706	0	True				
ANR	6709871	AssignmentExpression	ctx -> mode = CCMODE_POPON		6709706	0		=			
ANR	6709872	PtrMemberAccess	ctx -> mode		6709706	0					
ANR	6709873	Identifier	ctx		6709706	0					
ANR	6709874	Identifier	mode		6709706	1					
ANR	6709875	Identifier	CCMODE_POPON		6709706	1					
ANR	6709876	ElseStatement	else		6709706	0					
ANR	6709877	IfStatement	"if ( COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x24 )"		6709706	0					
ANR	6709878	Condition	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x24"	31:16:799:838	6709706	0	True				
ANR	6709879	AndExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x24"		6709706	0		&&			
ANR	6709880	CallExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C )"		6709706	0					
ANR	6709881	Callee	COR3		6709706	0					
ANR	6709882	Identifier	COR3		6709706	0					
ANR	6709883	ArgumentList	hi		6709706	1					
ANR	6709884	Argument	hi		6709706	0					
ANR	6709885	Identifier	hi		6709706	0					
ANR	6709886	Argument	0x14		6709706	1					
ANR	6709887	PrimaryExpression	0x14		6709706	0					
ANR	6709888	Argument	0x15		6709706	2					
ANR	6709889	PrimaryExpression	0x15		6709706	0					
ANR	6709890	Argument	0x1C		6709706	3					
ANR	6709891	PrimaryExpression	0x1C		6709706	0					
ANR	6709892	EqualityExpression	lo == 0x24		6709706	1		==			
ANR	6709893	Identifier	lo		6709706	0					
ANR	6709894	PrimaryExpression	0x24		6709706	1					
ANR	6709895	CompoundStatement		29:59:753:753	6709706	1					
ANR	6709896	ExpressionStatement	"handle_delete_end_of_row ( ctx , hi , lo )"	33:8:853:890	6709706	0	True				
ANR	6709897	CallExpression	"handle_delete_end_of_row ( ctx , hi , lo )"		6709706	0					
ANR	6709898	Callee	handle_delete_end_of_row		6709706	0					
ANR	6709899	Identifier	handle_delete_end_of_row		6709706	0					
ANR	6709900	ArgumentList	ctx		6709706	1					
ANR	6709901	Argument	ctx		6709706	0					
ANR	6709902	Identifier	ctx		6709706	0					
ANR	6709903	Argument	hi		6709706	1					
ANR	6709904	Identifier	hi		6709706	0					
ANR	6709905	Argument	lo		6709706	2					
ANR	6709906	Identifier	lo		6709706	0					
ANR	6709907	ElseStatement	else		6709706	0					
ANR	6709908	IfStatement	"if ( COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x25 )"		6709706	0					
ANR	6709909	Condition	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x25"	35:16:909:948	6709706	0	True				
ANR	6709910	AndExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x25"		6709706	0		&&			
ANR	6709911	CallExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C )"		6709706	0					
ANR	6709912	Callee	COR3		6709706	0					
ANR	6709913	Identifier	COR3		6709706	0					
ANR	6709914	ArgumentList	hi		6709706	1					
ANR	6709915	Argument	hi		6709706	0					
ANR	6709916	Identifier	hi		6709706	0					
ANR	6709917	Argument	0x14		6709706	1					
ANR	6709918	PrimaryExpression	0x14		6709706	0					
ANR	6709919	Argument	0x15		6709706	2					
ANR	6709920	PrimaryExpression	0x15		6709706	0					
ANR	6709921	Argument	0x1C		6709706	3					
ANR	6709922	PrimaryExpression	0x1C		6709706	0					
ANR	6709923	EqualityExpression	lo == 0x25		6709706	1		==			
ANR	6709924	Identifier	lo		6709706	0					
ANR	6709925	PrimaryExpression	0x25		6709706	1					
ANR	6709926	CompoundStatement		33:59:863:863	6709706	1					
ANR	6709927	ExpressionStatement	ctx -> rollup = 2	37:8:963:978	6709706	0	True				
ANR	6709928	AssignmentExpression	ctx -> rollup = 2		6709706	0		=			
ANR	6709929	PtrMemberAccess	ctx -> rollup		6709706	0					
ANR	6709930	Identifier	ctx		6709706	0					
ANR	6709931	Identifier	rollup		6709706	1					
ANR	6709932	PrimaryExpression	2		6709706	1					
ANR	6709933	ExpressionStatement	ctx -> mode = CCMODE_ROLLUP_2	39:8:989:1016	6709706	1	True				
ANR	6709934	AssignmentExpression	ctx -> mode = CCMODE_ROLLUP_2		6709706	0		=			
ANR	6709935	PtrMemberAccess	ctx -> mode		6709706	0					
ANR	6709936	Identifier	ctx		6709706	0					
ANR	6709937	Identifier	mode		6709706	1					
ANR	6709938	Identifier	CCMODE_ROLLUP_2		6709706	1					
ANR	6709939	ElseStatement	else		6709706	0					
ANR	6709940	IfStatement	"if ( COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x26 )"		6709706	0					
ANR	6709941	Condition	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x26"	41:16:1035:1074	6709706	0	True				
ANR	6709942	AndExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x26"		6709706	0		&&			
ANR	6709943	CallExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C )"		6709706	0					
ANR	6709944	Callee	COR3		6709706	0					
ANR	6709945	Identifier	COR3		6709706	0					
ANR	6709946	ArgumentList	hi		6709706	1					
ANR	6709947	Argument	hi		6709706	0					
ANR	6709948	Identifier	hi		6709706	0					
ANR	6709949	Argument	0x14		6709706	1					
ANR	6709950	PrimaryExpression	0x14		6709706	0					
ANR	6709951	Argument	0x15		6709706	2					
ANR	6709952	PrimaryExpression	0x15		6709706	0					
ANR	6709953	Argument	0x1C		6709706	3					
ANR	6709954	PrimaryExpression	0x1C		6709706	0					
ANR	6709955	EqualityExpression	lo == 0x26		6709706	1		==			
ANR	6709956	Identifier	lo		6709706	0					
ANR	6709957	PrimaryExpression	0x26		6709706	1					
ANR	6709958	CompoundStatement		39:59:989:989	6709706	1					
ANR	6709959	ExpressionStatement	ctx -> rollup = 3	43:8:1089:1104	6709706	0	True				
ANR	6709960	AssignmentExpression	ctx -> rollup = 3		6709706	0		=			
ANR	6709961	PtrMemberAccess	ctx -> rollup		6709706	0					
ANR	6709962	Identifier	ctx		6709706	0					
ANR	6709963	Identifier	rollup		6709706	1					
ANR	6709964	PrimaryExpression	3		6709706	1					
ANR	6709965	ExpressionStatement	ctx -> mode = CCMODE_ROLLUP_3	45:8:1115:1142	6709706	1	True				
ANR	6709966	AssignmentExpression	ctx -> mode = CCMODE_ROLLUP_3		6709706	0		=			
ANR	6709967	PtrMemberAccess	ctx -> mode		6709706	0					
ANR	6709968	Identifier	ctx		6709706	0					
ANR	6709969	Identifier	mode		6709706	1					
ANR	6709970	Identifier	CCMODE_ROLLUP_3		6709706	1					
ANR	6709971	ElseStatement	else		6709706	0					
ANR	6709972	IfStatement	"if ( COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x27 )"		6709706	0					
ANR	6709973	Condition	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x27"	47:16:1161:1200	6709706	0	True				
ANR	6709974	AndExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x27"		6709706	0		&&			
ANR	6709975	CallExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C )"		6709706	0					
ANR	6709976	Callee	COR3		6709706	0					
ANR	6709977	Identifier	COR3		6709706	0					
ANR	6709978	ArgumentList	hi		6709706	1					
ANR	6709979	Argument	hi		6709706	0					
ANR	6709980	Identifier	hi		6709706	0					
ANR	6709981	Argument	0x14		6709706	1					
ANR	6709982	PrimaryExpression	0x14		6709706	0					
ANR	6709983	Argument	0x15		6709706	2					
ANR	6709984	PrimaryExpression	0x15		6709706	0					
ANR	6709985	Argument	0x1C		6709706	3					
ANR	6709986	PrimaryExpression	0x1C		6709706	0					
ANR	6709987	EqualityExpression	lo == 0x27		6709706	1		==			
ANR	6709988	Identifier	lo		6709706	0					
ANR	6709989	PrimaryExpression	0x27		6709706	1					
ANR	6709990	CompoundStatement		45:59:1115:1115	6709706	1					
ANR	6709991	ExpressionStatement	ctx -> rollup = 4	49:8:1215:1230	6709706	0	True				
ANR	6709992	AssignmentExpression	ctx -> rollup = 4		6709706	0		=			
ANR	6709993	PtrMemberAccess	ctx -> rollup		6709706	0					
ANR	6709994	Identifier	ctx		6709706	0					
ANR	6709995	Identifier	rollup		6709706	1					
ANR	6709996	PrimaryExpression	4		6709706	1					
ANR	6709997	ExpressionStatement	ctx -> mode = CCMODE_ROLLUP_4	51:8:1241:1268	6709706	1	True				
ANR	6709998	AssignmentExpression	ctx -> mode = CCMODE_ROLLUP_4		6709706	0		=			
ANR	6709999	PtrMemberAccess	ctx -> mode		6709706	0					
ANR	6710000	Identifier	ctx		6709706	0					
ANR	6710001	Identifier	mode		6709706	1					
ANR	6710002	Identifier	CCMODE_ROLLUP_4		6709706	1					
ANR	6710003	ElseStatement	else		6709706	0					
ANR	6710004	IfStatement	"if ( COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x29 )"		6709706	0					
ANR	6710005	Condition	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x29"	53:16:1287:1326	6709706	0	True				
ANR	6710006	AndExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x29"		6709706	0		&&			
ANR	6710007	CallExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C )"		6709706	0					
ANR	6710008	Callee	COR3		6709706	0					
ANR	6710009	Identifier	COR3		6709706	0					
ANR	6710010	ArgumentList	hi		6709706	1					
ANR	6710011	Argument	hi		6709706	0					
ANR	6710012	Identifier	hi		6709706	0					
ANR	6710013	Argument	0x14		6709706	1					
ANR	6710014	PrimaryExpression	0x14		6709706	0					
ANR	6710015	Argument	0x15		6709706	2					
ANR	6710016	PrimaryExpression	0x15		6709706	0					
ANR	6710017	Argument	0x1C		6709706	3					
ANR	6710018	PrimaryExpression	0x1C		6709706	0					
ANR	6710019	EqualityExpression	lo == 0x29		6709706	1		==			
ANR	6710020	Identifier	lo		6709706	0					
ANR	6710021	PrimaryExpression	0x29		6709706	1					
ANR	6710022	CompoundStatement		51:59:1241:1241	6709706	1					
ANR	6710023	ExpressionStatement	ctx -> mode = CCMODE_PAINTON	57:8:1377:1403	6709706	0	True				
ANR	6710024	AssignmentExpression	ctx -> mode = CCMODE_PAINTON		6709706	0		=			
ANR	6710025	PtrMemberAccess	ctx -> mode		6709706	0					
ANR	6710026	Identifier	ctx		6709706	0					
ANR	6710027	Identifier	mode		6709706	1					
ANR	6710028	Identifier	CCMODE_PAINTON		6709706	1					
ANR	6710029	ElseStatement	else		6709706	0					
ANR	6710030	IfStatement	"if ( COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x2B )"		6709706	0					
ANR	6710031	Condition	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x2B"	59:16:1422:1461	6709706	0	True				
ANR	6710032	AndExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x2B"		6709706	0		&&			
ANR	6710033	CallExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C )"		6709706	0					
ANR	6710034	Callee	COR3		6709706	0					
ANR	6710035	Identifier	COR3		6709706	0					
ANR	6710036	ArgumentList	hi		6709706	1					
ANR	6710037	Argument	hi		6709706	0					
ANR	6710038	Identifier	hi		6709706	0					
ANR	6710039	Argument	0x14		6709706	1					
ANR	6710040	PrimaryExpression	0x14		6709706	0					
ANR	6710041	Argument	0x15		6709706	2					
ANR	6710042	PrimaryExpression	0x15		6709706	0					
ANR	6710043	Argument	0x1C		6709706	3					
ANR	6710044	PrimaryExpression	0x1C		6709706	0					
ANR	6710045	EqualityExpression	lo == 0x2B		6709706	1		==			
ANR	6710046	Identifier	lo		6709706	0					
ANR	6710047	PrimaryExpression	0x2B		6709706	1					
ANR	6710048	CompoundStatement		57:59:1376:1376	6709706	1					
ANR	6710049	ExpressionStatement	ctx -> mode = CCMODE_TEXT	63:8:1507:1530	6709706	0	True				
ANR	6710050	AssignmentExpression	ctx -> mode = CCMODE_TEXT		6709706	0		=			
ANR	6710051	PtrMemberAccess	ctx -> mode		6709706	0					
ANR	6710052	Identifier	ctx		6709706	0					
ANR	6710053	Identifier	mode		6709706	1					
ANR	6710054	Identifier	CCMODE_TEXT		6709706	1					
ANR	6710055	ElseStatement	else		6709706	0					
ANR	6710056	IfStatement	"if ( COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x2C )"		6709706	0					
ANR	6710057	Condition	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x2C"	65:16:1549:1588	6709706	0	True				
ANR	6710058	AndExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x2C"		6709706	0		&&			
ANR	6710059	CallExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C )"		6709706	0					
ANR	6710060	Callee	COR3		6709706	0					
ANR	6710061	Identifier	COR3		6709706	0					
ANR	6710062	ArgumentList	hi		6709706	1					
ANR	6710063	Argument	hi		6709706	0					
ANR	6710064	Identifier	hi		6709706	0					
ANR	6710065	Argument	0x14		6709706	1					
ANR	6710066	PrimaryExpression	0x14		6709706	0					
ANR	6710067	Argument	0x15		6709706	2					
ANR	6710068	PrimaryExpression	0x15		6709706	0					
ANR	6710069	Argument	0x1C		6709706	3					
ANR	6710070	PrimaryExpression	0x1C		6709706	0					
ANR	6710071	EqualityExpression	lo == 0x2C		6709706	1		==			
ANR	6710072	Identifier	lo		6709706	0					
ANR	6710073	PrimaryExpression	0x2C		6709706	1					
ANR	6710074	CompoundStatement		63:59:1503:1503	6709706	1					
ANR	6710075	ExpressionStatement	"ret = handle_edm ( ctx , pts )"	69:8:1635:1661	6709706	0	True				
ANR	6710076	AssignmentExpression	"ret = handle_edm ( ctx , pts )"		6709706	0		=			
ANR	6710077	Identifier	ret		6709706	0					
ANR	6710078	CallExpression	"handle_edm ( ctx , pts )"		6709706	1					
ANR	6710079	Callee	handle_edm		6709706	0					
ANR	6710080	Identifier	handle_edm		6709706	0					
ANR	6710081	ArgumentList	ctx		6709706	1					
ANR	6710082	Argument	ctx		6709706	0					
ANR	6710083	Identifier	ctx		6709706	0					
ANR	6710084	Argument	pts		6709706	1					
ANR	6710085	Identifier	pts		6709706	0					
ANR	6710086	ElseStatement	else		6709706	0					
ANR	6710087	IfStatement	"if ( COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x2D )"		6709706	0					
ANR	6710088	Condition	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x2D"	71:16:1680:1719	6709706	0	True				
ANR	6710089	AndExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x2D"		6709706	0		&&			
ANR	6710090	CallExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C )"		6709706	0					
ANR	6710091	Callee	COR3		6709706	0					
ANR	6710092	Identifier	COR3		6709706	0					
ANR	6710093	ArgumentList	hi		6709706	1					
ANR	6710094	Argument	hi		6709706	0					
ANR	6710095	Identifier	hi		6709706	0					
ANR	6710096	Argument	0x14		6709706	1					
ANR	6710097	PrimaryExpression	0x14		6709706	0					
ANR	6710098	Argument	0x15		6709706	2					
ANR	6710099	PrimaryExpression	0x15		6709706	0					
ANR	6710100	Argument	0x1C		6709706	3					
ANR	6710101	PrimaryExpression	0x1C		6709706	0					
ANR	6710102	EqualityExpression	lo == 0x2D		6709706	1		==			
ANR	6710103	Identifier	lo		6709706	0					
ANR	6710104	PrimaryExpression	0x2D		6709706	1					
ANR	6710105	CompoundStatement		69:59:1634:1634	6709706	1					
ANR	6710106	ExpressionStatement	"av_dlog ( ctx , ""carriage return\\n"" )"	75:8:1761:1794	6709706	0	True				
ANR	6710107	CallExpression	"av_dlog ( ctx , ""carriage return\\n"" )"		6709706	0					
ANR	6710108	Callee	av_dlog		6709706	0					
ANR	6710109	Identifier	av_dlog		6709706	0					
ANR	6710110	ArgumentList	ctx		6709706	1					
ANR	6710111	Argument	ctx		6709706	0					
ANR	6710112	Identifier	ctx		6709706	0					
ANR	6710113	Argument	"""carriage return\\n"""		6709706	1					
ANR	6710114	PrimaryExpression	"""carriage return\\n"""		6709706	0					
ANR	6710115	ExpressionStatement	"reap_screen ( ctx , pts )"	77:8:1805:1826	6709706	1	True				
ANR	6710116	CallExpression	"reap_screen ( ctx , pts )"		6709706	0					
ANR	6710117	Callee	reap_screen		6709706	0					
ANR	6710118	Identifier	reap_screen		6709706	0					
ANR	6710119	ArgumentList	ctx		6709706	1					
ANR	6710120	Argument	ctx		6709706	0					
ANR	6710121	Identifier	ctx		6709706	0					
ANR	6710122	Argument	pts		6709706	1					
ANR	6710123	Identifier	pts		6709706	0					
ANR	6710124	ExpressionStatement	roll_up ( ctx )	79:8:1837:1849	6709706	2	True				
ANR	6710125	CallExpression	roll_up ( ctx )		6709706	0					
ANR	6710126	Callee	roll_up		6709706	0					
ANR	6710127	Identifier	roll_up		6709706	0					
ANR	6710128	ArgumentList	ctx		6709706	1					
ANR	6710129	Argument	ctx		6709706	0					
ANR	6710130	Identifier	ctx		6709706	0					
ANR	6710131	ExpressionStatement	ctx -> screen_changed = 1	81:8:1860:1883	6709706	3	True				
ANR	6710132	AssignmentExpression	ctx -> screen_changed = 1		6709706	0		=			
ANR	6710133	PtrMemberAccess	ctx -> screen_changed		6709706	0					
ANR	6710134	Identifier	ctx		6709706	0					
ANR	6710135	Identifier	screen_changed		6709706	1					
ANR	6710136	PrimaryExpression	1		6709706	1					
ANR	6710137	ExpressionStatement	ctx -> cursor_column = 0	83:8:1894:1916	6709706	4	True				
ANR	6710138	AssignmentExpression	ctx -> cursor_column = 0		6709706	0		=			
ANR	6710139	PtrMemberAccess	ctx -> cursor_column		6709706	0					
ANR	6710140	Identifier	ctx		6709706	0					
ANR	6710141	Identifier	cursor_column		6709706	1					
ANR	6710142	PrimaryExpression	0		6709706	1					
ANR	6710143	ElseStatement	else		6709706	0					
ANR	6710144	IfStatement	"if ( COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x2F )"		6709706	0					
ANR	6710145	Condition	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x2F"	85:16:1935:1974	6709706	0	True				
ANR	6710146	AndExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C ) && lo == 0x2F"		6709706	0		&&			
ANR	6710147	CallExpression	"COR3 ( hi , 0x14 , 0x15 , 0x1C )"		6709706	0					
ANR	6710148	Callee	COR3		6709706	0					
ANR	6710149	Identifier	COR3		6709706	0					
ANR	6710150	ArgumentList	hi		6709706	1					
ANR	6710151	Argument	hi		6709706	0					
ANR	6710152	Identifier	hi		6709706	0					
ANR	6710153	Argument	0x14		6709706	1					
ANR	6710154	PrimaryExpression	0x14		6709706	0					
ANR	6710155	Argument	0x15		6709706	2					
ANR	6710156	PrimaryExpression	0x15		6709706	0					
ANR	6710157	Argument	0x1C		6709706	3					
ANR	6710158	PrimaryExpression	0x1C		6709706	0					
ANR	6710159	EqualityExpression	lo == 0x2F		6709706	1		==			
ANR	6710160	Identifier	lo		6709706	0					
ANR	6710161	PrimaryExpression	0x2F		6709706	1					
ANR	6710162	CompoundStatement		83:59:1889:1889	6709706	1					
ANR	6710163	ExpressionStatement	"av_dlog ( ctx , ""handle_eoc\\n"" )"	89:8:2015:2043	6709706	0	True				
ANR	6710164	CallExpression	"av_dlog ( ctx , ""handle_eoc\\n"" )"		6709706	0					
ANR	6710165	Callee	av_dlog		6709706	0					
ANR	6710166	Identifier	av_dlog		6709706	0					
ANR	6710167	ArgumentList	ctx		6709706	1					
ANR	6710168	Argument	ctx		6709706	0					
ANR	6710169	Identifier	ctx		6709706	0					
ANR	6710170	Argument	"""handle_eoc\\n"""		6709706	1					
ANR	6710171	PrimaryExpression	"""handle_eoc\\n"""		6709706	0					
ANR	6710172	ExpressionStatement	"ret = handle_eoc ( ctx , pts )"	91:8:2054:2080	6709706	1	True				
ANR	6710173	AssignmentExpression	"ret = handle_eoc ( ctx , pts )"		6709706	0		=			
ANR	6710174	Identifier	ret		6709706	0					
ANR	6710175	CallExpression	"handle_eoc ( ctx , pts )"		6709706	1					
ANR	6710176	Callee	handle_eoc		6709706	0					
ANR	6710177	Identifier	handle_eoc		6709706	0					
ANR	6710178	ArgumentList	ctx		6709706	1					
ANR	6710179	Argument	ctx		6709706	0					
ANR	6710180	Identifier	ctx		6709706	0					
ANR	6710181	Argument	pts		6709706	1					
ANR	6710182	Identifier	pts		6709706	0					
ANR	6710183	ElseStatement	else		6709706	0					
ANR	6710184	IfStatement	if ( hi >= 0x20 )		6709706	0					
ANR	6710185	Condition	hi >= 0x20	93:15:2098:2105	6709706	0	True				
ANR	6710186	RelationalExpression	hi >= 0x20		6709706	0		>=			
ANR	6710187	Identifier	hi		6709706	0					
ANR	6710188	PrimaryExpression	0x20		6709706	1					
ANR	6710189	CompoundStatement		91:25:2019:2019	6709706	1					
ANR	6710190	ExpressionStatement	"handle_char ( ctx , hi , lo , pts )"	97:8:2168:2197	6709706	0	True				
ANR	6710191	CallExpression	"handle_char ( ctx , hi , lo , pts )"		6709706	0					
ANR	6710192	Callee	handle_char		6709706	0					
ANR	6710193	Identifier	handle_char		6709706	0					
ANR	6710194	ArgumentList	ctx		6709706	1					
ANR	6710195	Argument	ctx		6709706	0					
ANR	6710196	Identifier	ctx		6709706	0					
ANR	6710197	Argument	hi		6709706	1					
ANR	6710198	Identifier	hi		6709706	0					
ANR	6710199	Argument	lo		6709706	2					
ANR	6710200	Identifier	lo		6709706	0					
ANR	6710201	Argument	pts		6709706	3					
ANR	6710202	Identifier	pts		6709706	0					
ANR	6710203	ElseStatement	else		6709706	0					
ANR	6710204	CompoundStatement		97:11:2122:2122	6709706	0					
ANR	6710205	ExpressionStatement	"av_dlog ( ctx , ""Unknown command 0x%hhx 0x%hhx\\n"" , hi , lo )"	103:8:2266:2321	6709706	0	True				
ANR	6710206	CallExpression	"av_dlog ( ctx , ""Unknown command 0x%hhx 0x%hhx\\n"" , hi , lo )"		6709706	0					
ANR	6710207	Callee	av_dlog		6709706	0					
ANR	6710208	Identifier	av_dlog		6709706	0					
ANR	6710209	ArgumentList	ctx		6709706	1					
ANR	6710210	Argument	ctx		6709706	0					
ANR	6710211	Identifier	ctx		6709706	0					
ANR	6710212	Argument	"""Unknown command 0x%hhx 0x%hhx\\n"""		6709706	1					
ANR	6710213	PrimaryExpression	"""Unknown command 0x%hhx 0x%hhx\\n"""		6709706	0					
ANR	6710214	Argument	hi		6709706	2					
ANR	6710215	Identifier	hi		6709706	0					
ANR	6710216	Argument	lo		6709706	3					
ANR	6710217	Identifier	lo		6709706	0					
ANR	6710218	ExpressionStatement	ctx -> prev_cmd [ 0 ] = hi	111:5:2366:2387	6709706	38	True				
ANR	6710219	AssignmentExpression	ctx -> prev_cmd [ 0 ] = hi		6709706	0		=			
ANR	6710220	ArrayIndexing	ctx -> prev_cmd [ 0 ]		6709706	0					
ANR	6710221	PtrMemberAccess	ctx -> prev_cmd		6709706	0					
ANR	6710222	Identifier	ctx		6709706	0					
ANR	6710223	Identifier	prev_cmd		6709706	1					
ANR	6710224	PrimaryExpression	0		6709706	1					
ANR	6710225	Identifier	hi		6709706	1					
ANR	6710226	ExpressionStatement	ctx -> prev_cmd [ 1 ] = lo	113:5:2395:2416	6709706	39	True				
ANR	6710227	AssignmentExpression	ctx -> prev_cmd [ 1 ] = lo		6709706	0		=			
ANR	6710228	ArrayIndexing	ctx -> prev_cmd [ 1 ]		6709706	0					
ANR	6710229	PtrMemberAccess	ctx -> prev_cmd		6709706	0					
ANR	6710230	Identifier	ctx		6709706	0					
ANR	6710231	Identifier	prev_cmd		6709706	1					
ANR	6710232	PrimaryExpression	1		6709706	1					
ANR	6710233	Identifier	lo		6709706	1					
ANR	6710234	Statement	undef	117:1:2422:2426	6709706	40	True				
ANR	6710235	Statement	COR3	117:7:2428:2431	6709706	41	True				
ANR	6710236	ReturnStatement	return ret ;	119:4:2438:2448	6709706	42	True				
ANR	6710237	Identifier	ret		6709706	0					
ANR	6710238	ReturnType	static int		6709706	1					
ANR	6710239	Identifier	process_cc608		6709706	2					
ANR	6710240	ParameterList	"CCaptionSubContext * ctx , int64_t pts , uint8_t hi , uint8_t lo"		6709706	3					
ANR	6710241	Parameter	CCaptionSubContext * ctx	1:25:25:47	6709706	0	True				
ANR	6710242	ParameterType	CCaptionSubContext *		6709706	0					
ANR	6710243	Identifier	ctx		6709706	1					
ANR	6710244	Parameter	int64_t pts	1:50:50:60	6709706	1	True				
ANR	6710245	ParameterType	int64_t		6709706	0					
ANR	6710246	Identifier	pts		6709706	1					
ANR	6710247	Parameter	uint8_t hi	1:63:63:72	6709706	2	True				
ANR	6710248	ParameterType	uint8_t		6709706	0					
ANR	6710249	Identifier	hi		6709706	1					
ANR	6710250	Parameter	uint8_t lo	1:75:75:84	6709706	3	True				
ANR	6710251	ParameterType	uint8_t		6709706	0					
ANR	6710252	Identifier	lo		6709706	1					
ANR	6710253	CFGEntryNode	ENTRY		6709706		True				
ANR	6710254	CFGExitNode	EXIT		6709706		True				
ANR	6710255	Symbol	ret		6709706						
ANR	6710256	Symbol	hi		6709706						
ANR	6710257	Symbol	CCMODE_POPON		6709706						
ANR	6710258	Symbol	lo		6709706						
ANR	6710259	Symbol	* ctx -> prev_cmd		6709706						
ANR	6710260	Symbol	CCMODE_PAINTON		6709706						
ANR	6710261	Symbol	CCMODE_TEXT		6709706						
ANR	6710262	Symbol	ctx -> screen_changed		6709706						
ANR	6710263	Symbol	ctx		6709706						
ANR	6710264	Symbol	handle_edm		6709706						
ANR	6710265	Symbol	pts		6709706						
ANR	6710266	Symbol	* ctx		6709706						
ANR	6710267	Symbol	CCMODE_ROLLUP_2		6709706						
ANR	6710268	Symbol	COR3		6709706						
ANR	6710269	Symbol	ctx -> cursor_column		6709706						
ANR	6710270	Symbol	ctx -> mode		6709706						
ANR	6710271	Symbol	ctx -> rollup		6709706						
ANR	6710272	Symbol	ctx -> prev_cmd		6709706						
ANR	6710273	Symbol	handle_eoc		6709706						
ANR	6710274	Symbol	* * ctx		6709706						
ANR	6710275	Symbol	CCMODE_ROLLUP_4		6709706						
ANR	6710276	Symbol	CCMODE_ROLLUP_3		6709706						
