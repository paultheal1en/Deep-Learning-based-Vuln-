command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9540541	File	/home/p4ultr4n/workplace/ReVeal/raw_code/xen_pt_pci_write_config_0.c								
ANR	9540542	Function	xen_pt_pci_write_config	1:0:0:5366							
ANR	9540543	FunctionDef	"xen_pt_pci_write_config (PCIDevice * d , uint32_t addr , uint32_t val , int len)"		9540542	0					
ANR	9540544	CompoundStatement		5:0:126:5366	9540542	0					
ANR	9540545	IdentifierDeclStatement	"XenPCIPassthroughState * s = DO_UPCAST ( XenPCIPassthroughState , dev , d ) ;"	7:4:133:202	9540542	0	True				
ANR	9540546	IdentifierDecl	"* s = DO_UPCAST ( XenPCIPassthroughState , dev , d )"		9540542	0					
ANR	9540547	IdentifierDeclType	XenPCIPassthroughState *		9540542	0					
ANR	9540548	Identifier	s		9540542	1					
ANR	9540549	AssignmentExpression	"* s = DO_UPCAST ( XenPCIPassthroughState , dev , d )"		9540542	2		=			
ANR	9540550	Identifier	s		9540542	0					
ANR	9540551	CallExpression	"DO_UPCAST ( XenPCIPassthroughState , dev , d )"		9540542	1					
ANR	9540552	Callee	DO_UPCAST		9540542	0					
ANR	9540553	Identifier	DO_UPCAST		9540542	0					
ANR	9540554	ArgumentList	XenPCIPassthroughState		9540542	1					
ANR	9540555	Argument	XenPCIPassthroughState		9540542	0					
ANR	9540556	Identifier	XenPCIPassthroughState		9540542	0					
ANR	9540557	Argument	dev		9540542	1					
ANR	9540558	Identifier	dev		9540542	0					
ANR	9540559	Argument	d		9540542	2					
ANR	9540560	Identifier	d		9540542	0					
ANR	9540561	IdentifierDeclStatement	int index = 0 ;	9:4:209:222	9540542	1	True				
ANR	9540562	IdentifierDecl	index = 0		9540542	0					
ANR	9540563	IdentifierDeclType	int		9540542	0					
ANR	9540564	Identifier	index		9540542	1					
ANR	9540565	AssignmentExpression	index = 0		9540542	2		=			
ANR	9540566	Identifier	index		9540542	0					
ANR	9540567	PrimaryExpression	0		9540542	1					
ANR	9540568	IdentifierDeclStatement	XenPTRegGroup * reg_grp_entry = NULL ;	11:4:229:264	9540542	2	True				
ANR	9540569	IdentifierDecl	* reg_grp_entry = NULL		9540542	0					
ANR	9540570	IdentifierDeclType	XenPTRegGroup *		9540542	0					
ANR	9540571	Identifier	reg_grp_entry		9540542	1					
ANR	9540572	AssignmentExpression	* reg_grp_entry = NULL		9540542	2		=			
ANR	9540573	Identifier	NULL		9540542	0					
ANR	9540574	Identifier	NULL		9540542	1					
ANR	9540575	IdentifierDeclStatement	int rc = 0 ;	13:4:271:281	9540542	3	True				
ANR	9540576	IdentifierDecl	rc = 0		9540542	0					
ANR	9540577	IdentifierDeclType	int		9540542	0					
ANR	9540578	Identifier	rc		9540542	1					
ANR	9540579	AssignmentExpression	rc = 0		9540542	2		=			
ANR	9540580	Identifier	rc		9540542	0					
ANR	9540581	PrimaryExpression	0		9540542	1					
ANR	9540582	IdentifierDeclStatement	"uint32_t read_val = 0 , wb_mask ;"	15:4:288:318	9540542	4	True				
ANR	9540583	IdentifierDecl	read_val = 0		9540542	0					
ANR	9540584	IdentifierDeclType	uint32_t		9540542	0					
ANR	9540585	Identifier	read_val		9540542	1					
ANR	9540586	AssignmentExpression	read_val = 0		9540542	2		=			
ANR	9540587	Identifier	read_val		9540542	0					
ANR	9540588	PrimaryExpression	0		9540542	1					
ANR	9540589	IdentifierDecl	wb_mask		9540542	1					
ANR	9540590	IdentifierDeclType	uint32_t		9540542	0					
ANR	9540591	Identifier	wb_mask		9540542	1					
ANR	9540592	IdentifierDeclStatement	int emul_len = 0 ;	17:4:325:341	9540542	5	True				
ANR	9540593	IdentifierDecl	emul_len = 0		9540542	0					
ANR	9540594	IdentifierDeclType	int		9540542	0					
ANR	9540595	Identifier	emul_len		9540542	1					
ANR	9540596	AssignmentExpression	emul_len = 0		9540542	2		=			
ANR	9540597	Identifier	emul_len		9540542	0					
ANR	9540598	PrimaryExpression	0		9540542	1					
ANR	9540599	IdentifierDeclStatement	XenPTReg * reg_entry = NULL ;	19:4:348:374	9540542	6	True				
ANR	9540600	IdentifierDecl	* reg_entry = NULL		9540542	0					
ANR	9540601	IdentifierDeclType	XenPTReg *		9540542	0					
ANR	9540602	Identifier	reg_entry		9540542	1					
ANR	9540603	AssignmentExpression	* reg_entry = NULL		9540542	2		=			
ANR	9540604	Identifier	NULL		9540542	0					
ANR	9540605	Identifier	NULL		9540542	1					
ANR	9540606	IdentifierDeclStatement	uint32_t find_addr = addr ;	21:4:381:406	9540542	7	True				
ANR	9540607	IdentifierDecl	find_addr = addr		9540542	0					
ANR	9540608	IdentifierDeclType	uint32_t		9540542	0					
ANR	9540609	Identifier	find_addr		9540542	1					
ANR	9540610	AssignmentExpression	find_addr = addr		9540542	2		=			
ANR	9540611	Identifier	addr		9540542	0					
ANR	9540612	Identifier	addr		9540542	1					
ANR	9540613	IdentifierDeclStatement	XenPTRegInfo * reg = NULL ;	23:4:413:437	9540542	8	True				
ANR	9540614	IdentifierDecl	* reg = NULL		9540542	0					
ANR	9540615	IdentifierDeclType	XenPTRegInfo *		9540542	0					
ANR	9540616	Identifier	reg		9540542	1					
ANR	9540617	AssignmentExpression	* reg = NULL		9540542	2		=			
ANR	9540618	Identifier	NULL		9540542	0					
ANR	9540619	Identifier	NULL		9540542	1					
ANR	9540620	IfStatement	"if ( xen_pt_pci_config_access_check ( d , addr , len ) )"		9540542	9					
ANR	9540621	Condition	"xen_pt_pci_config_access_check ( d , addr , len )"	27:8:450:493	9540542	0	True				
ANR	9540622	CallExpression	"xen_pt_pci_config_access_check ( d , addr , len )"		9540542	0					
ANR	9540623	Callee	xen_pt_pci_config_access_check		9540542	0					
ANR	9540624	Identifier	xen_pt_pci_config_access_check		9540542	0					
ANR	9540625	ArgumentList	d		9540542	1					
ANR	9540626	Argument	d		9540542	0					
ANR	9540627	Identifier	d		9540542	0					
ANR	9540628	Argument	addr		9540542	1					
ANR	9540629	Identifier	addr		9540542	0					
ANR	9540630	Argument	len		9540542	2					
ANR	9540631	Identifier	len		9540542	0					
ANR	9540632	CompoundStatement		23:54:369:369	9540542	1					
ANR	9540633	ReturnStatement	return ;	29:8:507:513	9540542	0	True				
ANR	9540634	ExpressionStatement	"XEN_PT_LOG_CONFIG ( d , addr , val , len )"	35:4:529:565	9540542	10	True				
ANR	9540635	CallExpression	"XEN_PT_LOG_CONFIG ( d , addr , val , len )"		9540542	0					
ANR	9540636	Callee	XEN_PT_LOG_CONFIG		9540542	0					
ANR	9540637	Identifier	XEN_PT_LOG_CONFIG		9540542	0					
ANR	9540638	ArgumentList	d		9540542	1					
ANR	9540639	Argument	d		9540542	0					
ANR	9540640	Identifier	d		9540542	0					
ANR	9540641	Argument	addr		9540542	1					
ANR	9540642	Identifier	addr		9540542	0					
ANR	9540643	Argument	val		9540542	2					
ANR	9540644	Identifier	val		9540542	0					
ANR	9540645	Argument	len		9540542	3					
ANR	9540646	Identifier	len		9540542	0					
ANR	9540647	ExpressionStatement	index = xen_pt_bar_offset_to_index ( addr )	41:4:611:651	9540542	11	True				
ANR	9540648	AssignmentExpression	index = xen_pt_bar_offset_to_index ( addr )		9540542	0		=			
ANR	9540649	Identifier	index		9540542	0					
ANR	9540650	CallExpression	xen_pt_bar_offset_to_index ( addr )		9540542	1					
ANR	9540651	Callee	xen_pt_bar_offset_to_index		9540542	0					
ANR	9540652	Identifier	xen_pt_bar_offset_to_index		9540542	0					
ANR	9540653	ArgumentList	addr		9540542	1					
ANR	9540654	Argument	addr		9540542	0					
ANR	9540655	Identifier	addr		9540542	0					
ANR	9540656	IfStatement	if ( ( index >= 0 ) && ( val > 0 && val < XEN_PT_BAR_ALLF ) && ( s -> bases [ index ] . bar_flag == XEN_PT_BAR_FLAG_UNUSED ) )		9540542	12					
ANR	9540657	Condition	( index >= 0 ) && ( val > 0 && val < XEN_PT_BAR_ALLF ) && ( s -> bases [ index ] . bar_flag == XEN_PT_BAR_FLAG_UNUSED )	43:8:662:776	9540542	0	True				
ANR	9540658	AndExpression	( index >= 0 ) && ( val > 0 && val < XEN_PT_BAR_ALLF ) && ( s -> bases [ index ] . bar_flag == XEN_PT_BAR_FLAG_UNUSED )		9540542	0		&&			
ANR	9540659	RelationalExpression	index >= 0		9540542	0		>=			
ANR	9540660	Identifier	index		9540542	0					
ANR	9540661	PrimaryExpression	0		9540542	1					
ANR	9540662	AndExpression	( val > 0 && val < XEN_PT_BAR_ALLF ) && ( s -> bases [ index ] . bar_flag == XEN_PT_BAR_FLAG_UNUSED )		9540542	1		&&			
ANR	9540663	AndExpression	val > 0 && val < XEN_PT_BAR_ALLF		9540542	0		&&			
ANR	9540664	RelationalExpression	val > 0		9540542	0		>			
ANR	9540665	Identifier	val		9540542	0					
ANR	9540666	PrimaryExpression	0		9540542	1					
ANR	9540667	RelationalExpression	val < XEN_PT_BAR_ALLF		9540542	1		<			
ANR	9540668	Identifier	val		9540542	0					
ANR	9540669	Identifier	XEN_PT_BAR_ALLF		9540542	1					
ANR	9540670	EqualityExpression	s -> bases [ index ] . bar_flag == XEN_PT_BAR_FLAG_UNUSED		9540542	1		==			
ANR	9540671	MemberAccess	s -> bases [ index ] . bar_flag		9540542	0					
ANR	9540672	ArrayIndexing	s -> bases [ index ]		9540542	0					
ANR	9540673	PtrMemberAccess	s -> bases		9540542	0					
ANR	9540674	Identifier	s		9540542	0					
ANR	9540675	Identifier	bases		9540542	1					
ANR	9540676	Identifier	index		9540542	1					
ANR	9540677	Identifier	bar_flag		9540542	1					
ANR	9540678	Identifier	XEN_PT_BAR_FLAG_UNUSED		9540542	1					
ANR	9540679	CompoundStatement		41:62:652:652	9540542	1					
ANR	9540680	Statement	XEN_PT_WARN	47:8:790:800	9540542	0	True				
ANR	9540681	Statement	(	47:19:801:801	9540542	1	True				
ANR	9540682	Statement	d	47:20:802:802	9540542	2	True				
ANR	9540683	Statement	","	47:21:803:803	9540542	3	True				
ANR	9540684	Statement	"""Guest attempt to set address to unused Base Address """	47:23:805:858	9540542	4	True				
ANR	9540685	Statement	"""Register. (addr: 0x%02x, len: %d)\\n"""	49:20:881:917	9540542	5	True				
ANR	9540686	Statement	","	49:57:918:918	9540542	6	True				
ANR	9540687	Statement	addr	49:59:920:923	9540542	7	True				
ANR	9540688	Statement	","	49:63:924:924	9540542	8	True				
ANR	9540689	Statement	len	49:65:926:928	9540542	9	True				
ANR	9540690	Statement	)	49:68:929:929	9540542	10	True				
ANR	9540691	ExpressionStatement		49:69:930:930	9540542	11	True				
ANR	9540692	ExpressionStatement	"reg_grp_entry = xen_pt_find_reg_grp ( s , addr )"	57:4:983:1027	9540542	13	True				
ANR	9540693	AssignmentExpression	"reg_grp_entry = xen_pt_find_reg_grp ( s , addr )"		9540542	0		=			
ANR	9540694	Identifier	reg_grp_entry		9540542	0					
ANR	9540695	CallExpression	"xen_pt_find_reg_grp ( s , addr )"		9540542	1					
ANR	9540696	Callee	xen_pt_find_reg_grp		9540542	0					
ANR	9540697	Identifier	xen_pt_find_reg_grp		9540542	0					
ANR	9540698	ArgumentList	s		9540542	1					
ANR	9540699	Argument	s		9540542	0					
ANR	9540700	Identifier	s		9540542	0					
ANR	9540701	Argument	addr		9540542	1					
ANR	9540702	Identifier	addr		9540542	0					
ANR	9540703	IfStatement	if ( reg_grp_entry )		9540542	14					
ANR	9540704	Condition	reg_grp_entry	59:8:1038:1050	9540542	0	True				
ANR	9540705	Identifier	reg_grp_entry		9540542	0					
ANR	9540706	CompoundStatement		55:23:926:926	9540542	1					
ANR	9540707	IfStatement	if ( reg_grp_entry -> reg_grp -> grp_type == XEN_PT_GRP_TYPE_HARDWIRED )		9540542	0					
ANR	9540708	Condition	reg_grp_entry -> reg_grp -> grp_type == XEN_PT_GRP_TYPE_HARDWIRED	63:12:1116:1176	9540542	0	True				
ANR	9540709	EqualityExpression	reg_grp_entry -> reg_grp -> grp_type == XEN_PT_GRP_TYPE_HARDWIRED		9540542	0		==			
ANR	9540710	PtrMemberAccess	reg_grp_entry -> reg_grp -> grp_type		9540542	0					
ANR	9540711	PtrMemberAccess	reg_grp_entry -> reg_grp		9540542	0					
ANR	9540712	Identifier	reg_grp_entry		9540542	0					
ANR	9540713	Identifier	reg_grp		9540542	1					
ANR	9540714	Identifier	grp_type		9540542	1					
ANR	9540715	Identifier	XEN_PT_GRP_TYPE_HARDWIRED		9540542	1					
ANR	9540716	CompoundStatement		59:75:1052:1052	9540542	1					
ANR	9540717	Statement	XEN_PT_WARN	67:12:1229:1239	9540542	0	True				
ANR	9540718	Statement	(	67:23:1240:1240	9540542	1	True				
ANR	9540719	Statement	d	67:24:1241:1241	9540542	2	True				
ANR	9540720	Statement	","	67:25:1242:1242	9540542	3	True				
ANR	9540721	Statement	"""Access to 0-Hardwired register. """	67:27:1244:1277	9540542	4	True				
ANR	9540722	Statement	"""(addr: 0x%02x, len: %d)\\n"""	69:24:1304:1330	9540542	5	True				
ANR	9540723	Statement	","	69:51:1331:1331	9540542	6	True				
ANR	9540724	Statement	addr	69:53:1333:1336	9540542	7	True				
ANR	9540725	Statement	","	69:57:1337:1337	9540542	8	True				
ANR	9540726	Statement	len	69:59:1339:1341	9540542	9	True				
ANR	9540727	Statement	)	69:62:1342:1342	9540542	10	True				
ANR	9540728	ExpressionStatement		69:63:1343:1343	9540542	11	True				
ANR	9540729	ReturnStatement	return ;	71:12:1358:1364	9540542	12	True				
ANR	9540730	ExpressionStatement	"rc = xen_host_pci_get_block ( & s -> real_device , addr , ( uint8_t * ) & read_val , len )"	79:4:1391:1501	9540542	15	True				
ANR	9540731	AssignmentExpression	"rc = xen_host_pci_get_block ( & s -> real_device , addr , ( uint8_t * ) & read_val , len )"		9540542	0		=			
ANR	9540732	Identifier	rc		9540542	0					
ANR	9540733	CallExpression	"xen_host_pci_get_block ( & s -> real_device , addr , ( uint8_t * ) & read_val , len )"		9540542	1					
ANR	9540734	Callee	xen_host_pci_get_block		9540542	0					
ANR	9540735	Identifier	xen_host_pci_get_block		9540542	0					
ANR	9540736	ArgumentList	& s -> real_device		9540542	1					
ANR	9540737	Argument	& s -> real_device		9540542	0					
ANR	9540738	UnaryOperationExpression	& s -> real_device		9540542	0					
ANR	9540739	UnaryOperator	&		9540542	0					
ANR	9540740	PtrMemberAccess	s -> real_device		9540542	1					
ANR	9540741	Identifier	s		9540542	0					
ANR	9540742	Identifier	real_device		9540542	1					
ANR	9540743	Argument	addr		9540542	1					
ANR	9540744	Identifier	addr		9540542	0					
ANR	9540745	Argument	( uint8_t * ) & read_val		9540542	2					
ANR	9540746	CastExpression	( uint8_t * ) & read_val		9540542	0					
ANR	9540747	CastTarget	uint8_t *		9540542	0					
ANR	9540748	UnaryOperationExpression	& read_val		9540542	1					
ANR	9540749	UnaryOperator	&		9540542	0					
ANR	9540750	Identifier	read_val		9540542	1					
ANR	9540751	Argument	len		9540542	3					
ANR	9540752	Identifier	len		9540542	0					
ANR	9540753	IfStatement	if ( rc < 0 )		9540542	16					
ANR	9540754	Condition	rc < 0	83:8:1512:1517	9540542	0	True				
ANR	9540755	RelationalExpression	rc < 0		9540542	0		<			
ANR	9540756	Identifier	rc		9540542	0					
ANR	9540757	PrimaryExpression	0		9540542	1					
ANR	9540758	CompoundStatement		79:16:1393:1393	9540542	1					
ANR	9540759	ExpressionStatement	"XEN_PT_ERR ( d , ""pci_read_block failed. return value: %d.\\n"" , rc )"	85:8:1531:1594	9540542	0	True				
ANR	9540760	CallExpression	"XEN_PT_ERR ( d , ""pci_read_block failed. return value: %d.\\n"" , rc )"		9540542	0					
ANR	9540761	Callee	XEN_PT_ERR		9540542	0					
ANR	9540762	Identifier	XEN_PT_ERR		9540542	0					
ANR	9540763	ArgumentList	d		9540542	1					
ANR	9540764	Argument	d		9540542	0					
ANR	9540765	Identifier	d		9540542	0					
ANR	9540766	Argument	"""pci_read_block failed. return value: %d.\\n"""		9540542	1					
ANR	9540767	PrimaryExpression	"""pci_read_block failed. return value: %d.\\n"""		9540542	0					
ANR	9540768	Argument	rc		9540542	2					
ANR	9540769	Identifier	rc		9540542	0					
ANR	9540770	ExpressionStatement	"memset ( & read_val , 0xff , len )"	87:8:1605:1633	9540542	1	True				
ANR	9540771	CallExpression	"memset ( & read_val , 0xff , len )"		9540542	0					
ANR	9540772	Callee	memset		9540542	0					
ANR	9540773	Identifier	memset		9540542	0					
ANR	9540774	ArgumentList	& read_val		9540542	1					
ANR	9540775	Argument	& read_val		9540542	0					
ANR	9540776	UnaryOperationExpression	& read_val		9540542	0					
ANR	9540777	UnaryOperator	&		9540542	0					
ANR	9540778	Identifier	read_val		9540542	1					
ANR	9540779	Argument	0xff		9540542	1					
ANR	9540780	PrimaryExpression	0xff		9540542	0					
ANR	9540781	Argument	len		9540542	2					
ANR	9540782	Identifier	len		9540542	0					
ANR	9540783	ExpressionStatement	wb_mask = 0	89:8:1644:1655	9540542	2	True				
ANR	9540784	AssignmentExpression	wb_mask = 0		9540542	0		=			
ANR	9540785	Identifier	wb_mask		9540542	0					
ANR	9540786	PrimaryExpression	0		9540542	1					
ANR	9540787	ElseStatement	else		9540542	0					
ANR	9540788	CompoundStatement		87:11:1542:1542	9540542	0					
ANR	9540789	ExpressionStatement	wb_mask = 0xFFFFFFFF >> ( ( 4 - len ) << 3 )	93:8:1680:1720	9540542	0	True				
ANR	9540790	AssignmentExpression	wb_mask = 0xFFFFFFFF >> ( ( 4 - len ) << 3 )		9540542	0		=			
ANR	9540791	Identifier	wb_mask		9540542	0					
ANR	9540792	ShiftExpression	0xFFFFFFFF >> ( ( 4 - len ) << 3 )		9540542	1		>>			
ANR	9540793	PrimaryExpression	0xFFFFFFFF		9540542	0					
ANR	9540794	ShiftExpression	( 4 - len ) << 3		9540542	1		<<			
ANR	9540795	AdditiveExpression	4 - len		9540542	0		-			
ANR	9540796	PrimaryExpression	4		9540542	0					
ANR	9540797	Identifier	len		9540542	1					
ANR	9540798	PrimaryExpression	3		9540542	1					
ANR	9540799	IfStatement	if ( reg_grp_entry == NULL )		9540542	17					
ANR	9540800	Condition	reg_grp_entry == NULL	101:8:1820:1840	9540542	0	True				
ANR	9540801	EqualityExpression	reg_grp_entry == NULL		9540542	0		==			
ANR	9540802	Identifier	reg_grp_entry		9540542	0					
ANR	9540803	Identifier	NULL		9540542	1					
ANR	9540804	CompoundStatement		97:31:1716:1716	9540542	1					
ANR	9540805	GotoStatement	goto out ;	103:8:1854:1862	9540542	0	True				
ANR	9540806	Identifier	out		9540542	0					
ANR	9540807	ExpressionStatement	memory_region_transaction_begin ( )	109:4:1878:1911	9540542	18	True				
ANR	9540808	CallExpression	memory_region_transaction_begin ( )		9540542	0					
ANR	9540809	Callee	memory_region_transaction_begin		9540542	0					
ANR	9540810	Identifier	memory_region_transaction_begin		9540542	0					
ANR	9540811	ArgumentList			9540542	1					
ANR	9540812	ExpressionStatement	"pci_default_write_config ( d , addr , val , len )"	111:4:1918:1961	9540542	19	True				
ANR	9540813	CallExpression	"pci_default_write_config ( d , addr , val , len )"		9540542	0					
ANR	9540814	Callee	pci_default_write_config		9540542	0					
ANR	9540815	Identifier	pci_default_write_config		9540542	0					
ANR	9540816	ArgumentList	d		9540542	1					
ANR	9540817	Argument	d		9540542	0					
ANR	9540818	Identifier	d		9540542	0					
ANR	9540819	Argument	addr		9540542	1					
ANR	9540820	Identifier	addr		9540542	0					
ANR	9540821	Argument	val		9540542	2					
ANR	9540822	Identifier	val		9540542	0					
ANR	9540823	Argument	len		9540542	3					
ANR	9540824	Identifier	len		9540542	0					
ANR	9540825	ExpressionStatement	read_val <<= ( addr & 3 ) << 3	117:4:2043:2071	9540542	20	True				
ANR	9540826	AssignmentExpression	read_val <<= ( addr & 3 ) << 3		9540542	0		<<=			
ANR	9540827	Identifier	read_val		9540542	0					
ANR	9540828	ShiftExpression	( addr & 3 ) << 3		9540542	1		<<			
ANR	9540829	BitAndExpression	addr & 3		9540542	0		&			
ANR	9540830	Identifier	addr		9540542	0					
ANR	9540831	PrimaryExpression	3		9540542	1					
ANR	9540832	PrimaryExpression	3		9540542	1					
ANR	9540833	ExpressionStatement	val <<= ( addr & 3 ) << 3	119:4:2078:2101	9540542	21	True				
ANR	9540834	AssignmentExpression	val <<= ( addr & 3 ) << 3		9540542	0		<<=			
ANR	9540835	Identifier	val		9540542	0					
ANR	9540836	ShiftExpression	( addr & 3 ) << 3		9540542	1		<<			
ANR	9540837	BitAndExpression	addr & 3		9540542	0		&			
ANR	9540838	Identifier	addr		9540542	0					
ANR	9540839	PrimaryExpression	3		9540542	1					
ANR	9540840	PrimaryExpression	3		9540542	1					
ANR	9540841	ExpressionStatement	emul_len = len	121:4:2108:2122	9540542	22	True				
ANR	9540842	AssignmentExpression	emul_len = len		9540542	0		=			
ANR	9540843	Identifier	emul_len		9540542	0					
ANR	9540844	Identifier	len		9540542	1					
ANR	9540845	WhileStatement	while ( emul_len > 0 )		9540542	23					
ANR	9540846	Condition	emul_len > 0	127:11:2186:2197	9540542	0	True				
ANR	9540847	RelationalExpression	emul_len > 0		9540542	0		>			
ANR	9540848	Identifier	emul_len		9540542	0					
ANR	9540849	PrimaryExpression	0		9540542	1					
ANR	9540850	CompoundStatement		123:25:2073:2073	9540542	1					
ANR	9540851	ExpressionStatement	"reg_entry = xen_pt_find_reg ( reg_grp_entry , find_addr )"	131:8:2261:2314	9540542	0	True				
ANR	9540852	AssignmentExpression	"reg_entry = xen_pt_find_reg ( reg_grp_entry , find_addr )"		9540542	0		=			
ANR	9540853	Identifier	reg_entry		9540542	0					
ANR	9540854	CallExpression	"xen_pt_find_reg ( reg_grp_entry , find_addr )"		9540542	1					
ANR	9540855	Callee	xen_pt_find_reg		9540542	0					
ANR	9540856	Identifier	xen_pt_find_reg		9540542	0					
ANR	9540857	ArgumentList	reg_grp_entry		9540542	1					
ANR	9540858	Argument	reg_grp_entry		9540542	0					
ANR	9540859	Identifier	reg_grp_entry		9540542	0					
ANR	9540860	Argument	find_addr		9540542	1					
ANR	9540861	Identifier	find_addr		9540542	0					
ANR	9540862	IfStatement	if ( reg_entry )		9540542	1					
ANR	9540863	Condition	reg_entry	133:12:2329:2337	9540542	0	True				
ANR	9540864	Identifier	reg_entry		9540542	0					
ANR	9540865	CompoundStatement		137:12:2413:2436	9540542	1					
ANR	9540866	ExpressionStatement	reg = reg_entry -> reg	135:12:2355:2375	9540542	0	True				
ANR	9540867	AssignmentExpression	reg = reg_entry -> reg		9540542	0		=			
ANR	9540868	Identifier	reg		9540542	0					
ANR	9540869	PtrMemberAccess	reg_entry -> reg		9540542	1					
ANR	9540870	Identifier	reg_entry		9540542	0					
ANR	9540871	Identifier	reg		9540542	1					
ANR	9540872	IdentifierDeclStatement	uint32_t real_offset = reg_grp_entry -> base_offset + reg -> offset ;	137:12:2390:2453	9540542	1	True				
ANR	9540873	IdentifierDecl	real_offset = reg_grp_entry -> base_offset + reg -> offset		9540542	0					
ANR	9540874	IdentifierDeclType	uint32_t		9540542	0					
ANR	9540875	Identifier	real_offset		9540542	1					
ANR	9540876	AssignmentExpression	real_offset = reg_grp_entry -> base_offset + reg -> offset		9540542	2		=			
ANR	9540877	Identifier	real_offset		9540542	0					
ANR	9540878	AdditiveExpression	reg_grp_entry -> base_offset + reg -> offset		9540542	1		+			
ANR	9540879	PtrMemberAccess	reg_grp_entry -> base_offset		9540542	0					
ANR	9540880	Identifier	reg_grp_entry		9540542	0					
ANR	9540881	Identifier	base_offset		9540542	1					
ANR	9540882	PtrMemberAccess	reg -> offset		9540542	1					
ANR	9540883	Identifier	reg		9540542	0					
ANR	9540884	Identifier	offset		9540542	1					
ANR	9540885	IdentifierDeclStatement	uint32_t valid_mask = 0xFFFFFFFF >> ( ( 4 - emul_len ) << 3 ) ;	139:12:2468:2525	9540542	2	True				
ANR	9540886	IdentifierDecl	valid_mask = 0xFFFFFFFF >> ( ( 4 - emul_len ) << 3 )		9540542	0					
ANR	9540887	IdentifierDeclType	uint32_t		9540542	0					
ANR	9540888	Identifier	valid_mask		9540542	1					
ANR	9540889	AssignmentExpression	valid_mask = 0xFFFFFFFF >> ( ( 4 - emul_len ) << 3 )		9540542	2		=			
ANR	9540890	Identifier	valid_mask		9540542	0					
ANR	9540891	ShiftExpression	0xFFFFFFFF >> ( ( 4 - emul_len ) << 3 )		9540542	1		>>			
ANR	9540892	PrimaryExpression	0xFFFFFFFF		9540542	0					
ANR	9540893	ShiftExpression	( 4 - emul_len ) << 3		9540542	1		<<			
ANR	9540894	AdditiveExpression	4 - emul_len		9540542	0		-			
ANR	9540895	PrimaryExpression	4		9540542	0					
ANR	9540896	Identifier	emul_len		9540542	1					
ANR	9540897	PrimaryExpression	3		9540542	1					
ANR	9540898	IdentifierDeclStatement	uint8_t * ptr_val = NULL ;	141:12:2540:2563	9540542	3	True				
ANR	9540899	IdentifierDecl	* ptr_val = NULL		9540542	0					
ANR	9540900	IdentifierDeclType	uint8_t *		9540542	0					
ANR	9540901	Identifier	ptr_val		9540542	1					
ANR	9540902	AssignmentExpression	* ptr_val = NULL		9540542	2		=			
ANR	9540903	Identifier	NULL		9540542	0					
ANR	9540904	Identifier	NULL		9540542	1					
ANR	9540905	ExpressionStatement	valid_mask <<= ( find_addr - real_offset ) << 3	145:12:2580:2625	9540542	4	True				
ANR	9540906	AssignmentExpression	valid_mask <<= ( find_addr - real_offset ) << 3		9540542	0		<<=			
ANR	9540907	Identifier	valid_mask		9540542	0					
ANR	9540908	ShiftExpression	( find_addr - real_offset ) << 3		9540542	1		<<			
ANR	9540909	AdditiveExpression	find_addr - real_offset		9540542	0		-			
ANR	9540910	Identifier	find_addr		9540542	0					
ANR	9540911	Identifier	real_offset		9540542	1					
ANR	9540912	PrimaryExpression	3		9540542	1					
ANR	9540913	ExpressionStatement	ptr_val = ( uint8_t * ) & val + ( real_offset & 3 )	147:12:2640:2685	9540542	5	True				
ANR	9540914	AssignmentExpression	ptr_val = ( uint8_t * ) & val + ( real_offset & 3 )		9540542	0		=			
ANR	9540915	Identifier	ptr_val		9540542	0					
ANR	9540916	AdditiveExpression	( uint8_t * ) & val + ( real_offset & 3 )		9540542	1		+			
ANR	9540917	CastExpression	( uint8_t * ) & val		9540542	0					
ANR	9540918	CastTarget	uint8_t *		9540542	0					
ANR	9540919	UnaryOperationExpression	& val		9540542	1					
ANR	9540920	UnaryOperator	&		9540542	0					
ANR	9540921	Identifier	val		9540542	1					
ANR	9540922	BitAndExpression	real_offset & 3		9540542	1		&			
ANR	9540923	Identifier	real_offset		9540542	0					
ANR	9540924	PrimaryExpression	3		9540542	1					
ANR	9540925	IfStatement	if ( reg -> emu_mask == ( 0xFFFFFFFF >> ( ( 4 - reg -> size ) << 3 ) ) )		9540542	6					
ANR	9540926	Condition	reg -> emu_mask == ( 0xFFFFFFFF >> ( ( 4 - reg -> size ) << 3 ) )	149:16:2704:2758	9540542	0	True				
ANR	9540927	EqualityExpression	reg -> emu_mask == ( 0xFFFFFFFF >> ( ( 4 - reg -> size ) << 3 ) )		9540542	0		==			
ANR	9540928	PtrMemberAccess	reg -> emu_mask		9540542	0					
ANR	9540929	Identifier	reg		9540542	0					
ANR	9540930	Identifier	emu_mask		9540542	1					
ANR	9540931	ShiftExpression	0xFFFFFFFF >> ( ( 4 - reg -> size ) << 3 )		9540542	1		>>			
ANR	9540932	PrimaryExpression	0xFFFFFFFF		9540542	0					
ANR	9540933	ShiftExpression	( 4 - reg -> size ) << 3		9540542	1		<<			
ANR	9540934	AdditiveExpression	4 - reg -> size		9540542	0		-			
ANR	9540935	PrimaryExpression	4		9540542	0					
ANR	9540936	PtrMemberAccess	reg -> size		9540542	1					
ANR	9540937	Identifier	reg		9540542	0					
ANR	9540938	Identifier	size		9540542	1					
ANR	9540939	PrimaryExpression	3		9540542	1					
ANR	9540940	CompoundStatement		145:73:2634:2634	9540542	1					
ANR	9540941	ExpressionStatement	wb_mask &= ~ ( ( reg -> emu_mask >> ( ( find_addr - real_offset ) << 3 ) ) << ( ( len - emul_len ) << 3 ) )	151:16:2780:2933	9540542	0	True				
ANR	9540942	AssignmentExpression	wb_mask &= ~ ( ( reg -> emu_mask >> ( ( find_addr - real_offset ) << 3 ) ) << ( ( len - emul_len ) << 3 ) )		9540542	0		&=			
ANR	9540943	Identifier	wb_mask		9540542	0					
ANR	9540944	UnaryOperationExpression	~ ( ( reg -> emu_mask >> ( ( find_addr - real_offset ) << 3 ) ) << ( ( len - emul_len ) << 3 ) )		9540542	1					
ANR	9540945	UnaryOperator	~		9540542	0					
ANR	9540946	ShiftExpression	( reg -> emu_mask >> ( ( find_addr - real_offset ) << 3 ) ) << ( ( len - emul_len ) << 3 )		9540542	1		<<			
ANR	9540947	ShiftExpression	reg -> emu_mask >> ( ( find_addr - real_offset ) << 3 )		9540542	0		>>			
ANR	9540948	PtrMemberAccess	reg -> emu_mask		9540542	0					
ANR	9540949	Identifier	reg		9540542	0					
ANR	9540950	Identifier	emu_mask		9540542	1					
ANR	9540951	ShiftExpression	( find_addr - real_offset ) << 3		9540542	1		<<			
ANR	9540952	AdditiveExpression	find_addr - real_offset		9540542	0		-			
ANR	9540953	Identifier	find_addr		9540542	0					
ANR	9540954	Identifier	real_offset		9540542	1					
ANR	9540955	PrimaryExpression	3		9540542	1					
ANR	9540956	ShiftExpression	( len - emul_len ) << 3		9540542	1		<<			
ANR	9540957	AdditiveExpression	len - emul_len		9540542	0		-			
ANR	9540958	Identifier	len		9540542	0					
ANR	9540959	Identifier	emul_len		9540542	1					
ANR	9540960	PrimaryExpression	3		9540542	1					
ANR	9540961	SwitchStatement	switch ( reg -> size )		9540542	7					
ANR	9540962	Condition	reg -> size	163:20:3028:3036	9540542	0	True				
ANR	9540963	PtrMemberAccess	reg -> size		9540542	0					
ANR	9540964	Identifier	reg		9540542	0					
ANR	9540965	Identifier	size		9540542	1					
ANR	9540966	CompoundStatement		159:31:2912:2912	9540542	1					
ANR	9540967	Label	case 1 :	165:12:3054:3060	9540542	0	True				
ANR	9540968	IfStatement	if ( reg -> u . b . write )		9540542	1					
ANR	9540969	Condition	reg -> u . b . write	167:20:3083:3096	9540542	0	True				
ANR	9540970	MemberAccess	reg -> u . b . write		9540542	0					
ANR	9540971	MemberAccess	reg -> u . b		9540542	0					
ANR	9540972	PtrMemberAccess	reg -> u		9540542	0					
ANR	9540973	Identifier	reg		9540542	0					
ANR	9540974	Identifier	u		9540542	1					
ANR	9540975	Identifier	b		9540542	1					
ANR	9540976	Identifier	write		9540542	1					
ANR	9540977	CompoundStatement		163:36:2972:2972	9540542	1					
ANR	9540978	ExpressionStatement	"rc = reg -> u . b . write ( s , reg_entry , ptr_val , read_val >> ( ( real_offset & 3 ) << 3 ) , valid_mask )"	169:20:3122:3296	9540542	0	True				
ANR	9540979	AssignmentExpression	"rc = reg -> u . b . write ( s , reg_entry , ptr_val , read_val >> ( ( real_offset & 3 ) << 3 ) , valid_mask )"		9540542	0		=			
ANR	9540980	Identifier	rc		9540542	0					
ANR	9540981	CallExpression	"reg -> u . b . write ( s , reg_entry , ptr_val , read_val >> ( ( real_offset & 3 ) << 3 ) , valid_mask )"		9540542	1					
ANR	9540982	Callee	reg -> u . b . write		9540542	0					
ANR	9540983	MemberAccess	reg -> u . b . write		9540542	0					
ANR	9540984	MemberAccess	reg -> u . b		9540542	0					
ANR	9540985	PtrMemberAccess	reg -> u		9540542	0					
ANR	9540986	Identifier	reg		9540542	0					
ANR	9540987	Identifier	u		9540542	1					
ANR	9540988	Identifier	b		9540542	1					
ANR	9540989	Identifier	write		9540542	1					
ANR	9540990	ArgumentList	s		9540542	1					
ANR	9540991	Argument	s		9540542	0					
ANR	9540992	Identifier	s		9540542	0					
ANR	9540993	Argument	reg_entry		9540542	1					
ANR	9540994	Identifier	reg_entry		9540542	0					
ANR	9540995	Argument	ptr_val		9540542	2					
ANR	9540996	Identifier	ptr_val		9540542	0					
ANR	9540997	Argument	read_val >> ( ( real_offset & 3 ) << 3 )		9540542	3					
ANR	9540998	ShiftExpression	read_val >> ( ( real_offset & 3 ) << 3 )		9540542	0		>>			
ANR	9540999	Identifier	read_val		9540542	0					
ANR	9541000	ShiftExpression	( real_offset & 3 ) << 3		9540542	1		<<			
ANR	9541001	BitAndExpression	real_offset & 3		9540542	0		&			
ANR	9541002	Identifier	real_offset		9540542	0					
ANR	9541003	PrimaryExpression	3		9540542	1					
ANR	9541004	PrimaryExpression	3		9540542	1					
ANR	9541005	Argument	valid_mask		9540542	4					
ANR	9541006	Identifier	valid_mask		9540542	0					
ANR	9541007	BreakStatement	break ;	177:16:3334:3339	9540542	2	True				
ANR	9541008	Label	case 2 :	179:12:3354:3360	9540542	3	True				
ANR	9541009	IfStatement	if ( reg -> u . w . write )		9540542	4					
ANR	9541010	Condition	reg -> u . w . write	181:20:3383:3396	9540542	0	True				
ANR	9541011	MemberAccess	reg -> u . w . write		9540542	0					
ANR	9541012	MemberAccess	reg -> u . w		9540542	0					
ANR	9541013	PtrMemberAccess	reg -> u		9540542	0					
ANR	9541014	Identifier	reg		9540542	0					
ANR	9541015	Identifier	u		9540542	1					
ANR	9541016	Identifier	w		9540542	1					
ANR	9541017	Identifier	write		9540542	1					
ANR	9541018	CompoundStatement		177:36:3272:3272	9540542	1					
ANR	9541019	ExpressionStatement	"rc = reg -> u . w . write ( s , reg_entry , ( uint16_t * ) ptr_val , ( read_val >> ( ( real_offset & 3 ) << 3 ) ) , valid_mask )"	183:20:3422:3610	9540542	0	True				
ANR	9541020	AssignmentExpression	"rc = reg -> u . w . write ( s , reg_entry , ( uint16_t * ) ptr_val , ( read_val >> ( ( real_offset & 3 ) << 3 ) ) , valid_mask )"		9540542	0		=			
ANR	9541021	Identifier	rc		9540542	0					
ANR	9541022	CallExpression	"reg -> u . w . write ( s , reg_entry , ( uint16_t * ) ptr_val , ( read_val >> ( ( real_offset & 3 ) << 3 ) ) , valid_mask )"		9540542	1					
ANR	9541023	Callee	reg -> u . w . write		9540542	0					
ANR	9541024	MemberAccess	reg -> u . w . write		9540542	0					
ANR	9541025	MemberAccess	reg -> u . w		9540542	0					
ANR	9541026	PtrMemberAccess	reg -> u		9540542	0					
ANR	9541027	Identifier	reg		9540542	0					
ANR	9541028	Identifier	u		9540542	1					
ANR	9541029	Identifier	w		9540542	1					
ANR	9541030	Identifier	write		9540542	1					
ANR	9541031	ArgumentList	s		9540542	1					
ANR	9541032	Argument	s		9540542	0					
ANR	9541033	Identifier	s		9540542	0					
ANR	9541034	Argument	reg_entry		9540542	1					
ANR	9541035	Identifier	reg_entry		9540542	0					
ANR	9541036	Argument	( uint16_t * ) ptr_val		9540542	2					
ANR	9541037	CastExpression	( uint16_t * ) ptr_val		9540542	0					
ANR	9541038	CastTarget	uint16_t *		9540542	0					
ANR	9541039	Identifier	ptr_val		9540542	1					
ANR	9541040	Argument	read_val >> ( ( real_offset & 3 ) << 3 )		9540542	3					
ANR	9541041	ShiftExpression	read_val >> ( ( real_offset & 3 ) << 3 )		9540542	0		>>			
ANR	9541042	Identifier	read_val		9540542	0					
ANR	9541043	ShiftExpression	( real_offset & 3 ) << 3		9540542	1		<<			
ANR	9541044	BitAndExpression	real_offset & 3		9540542	0		&			
ANR	9541045	Identifier	real_offset		9540542	0					
ANR	9541046	PrimaryExpression	3		9540542	1					
ANR	9541047	PrimaryExpression	3		9540542	1					
ANR	9541048	Argument	valid_mask		9540542	4					
ANR	9541049	Identifier	valid_mask		9540542	0					
ANR	9541050	BreakStatement	break ;	191:16:3648:3653	9540542	5	True				
ANR	9541051	Label	case 4 :	193:12:3668:3674	9540542	6	True				
ANR	9541052	IfStatement	if ( reg -> u . dw . write )		9540542	7					
ANR	9541053	Condition	reg -> u . dw . write	195:20:3697:3711	9540542	0	True				
ANR	9541054	MemberAccess	reg -> u . dw . write		9540542	0					
ANR	9541055	MemberAccess	reg -> u . dw		9540542	0					
ANR	9541056	PtrMemberAccess	reg -> u		9540542	0					
ANR	9541057	Identifier	reg		9540542	0					
ANR	9541058	Identifier	u		9540542	1					
ANR	9541059	Identifier	dw		9540542	1					
ANR	9541060	Identifier	write		9540542	1					
ANR	9541061	CompoundStatement		191:37:3587:3587	9540542	1					
ANR	9541062	ExpressionStatement	"rc = reg -> u . dw . write ( s , reg_entry , ( uint32_t * ) ptr_val , ( read_val >> ( ( real_offset & 3 ) << 3 ) ) , valid_mask )"	197:20:3737:3928	9540542	0	True				
ANR	9541063	AssignmentExpression	"rc = reg -> u . dw . write ( s , reg_entry , ( uint32_t * ) ptr_val , ( read_val >> ( ( real_offset & 3 ) << 3 ) ) , valid_mask )"		9540542	0		=			
ANR	9541064	Identifier	rc		9540542	0					
ANR	9541065	CallExpression	"reg -> u . dw . write ( s , reg_entry , ( uint32_t * ) ptr_val , ( read_val >> ( ( real_offset & 3 ) << 3 ) ) , valid_mask )"		9540542	1					
ANR	9541066	Callee	reg -> u . dw . write		9540542	0					
ANR	9541067	MemberAccess	reg -> u . dw . write		9540542	0					
ANR	9541068	MemberAccess	reg -> u . dw		9540542	0					
ANR	9541069	PtrMemberAccess	reg -> u		9540542	0					
ANR	9541070	Identifier	reg		9540542	0					
ANR	9541071	Identifier	u		9540542	1					
ANR	9541072	Identifier	dw		9540542	1					
ANR	9541073	Identifier	write		9540542	1					
ANR	9541074	ArgumentList	s		9540542	1					
ANR	9541075	Argument	s		9540542	0					
ANR	9541076	Identifier	s		9540542	0					
ANR	9541077	Argument	reg_entry		9540542	1					
ANR	9541078	Identifier	reg_entry		9540542	0					
ANR	9541079	Argument	( uint32_t * ) ptr_val		9540542	2					
ANR	9541080	CastExpression	( uint32_t * ) ptr_val		9540542	0					
ANR	9541081	CastTarget	uint32_t *		9540542	0					
ANR	9541082	Identifier	ptr_val		9540542	1					
ANR	9541083	Argument	read_val >> ( ( real_offset & 3 ) << 3 )		9540542	3					
ANR	9541084	ShiftExpression	read_val >> ( ( real_offset & 3 ) << 3 )		9540542	0		>>			
ANR	9541085	Identifier	read_val		9540542	0					
ANR	9541086	ShiftExpression	( real_offset & 3 ) << 3		9540542	1		<<			
ANR	9541087	BitAndExpression	real_offset & 3		9540542	0		&			
ANR	9541088	Identifier	real_offset		9540542	0					
ANR	9541089	PrimaryExpression	3		9540542	1					
ANR	9541090	PrimaryExpression	3		9540542	1					
ANR	9541091	Argument	valid_mask		9540542	4					
ANR	9541092	Identifier	valid_mask		9540542	0					
ANR	9541093	BreakStatement	break ;	205:16:3966:3971	9540542	8	True				
ANR	9541094	IfStatement	if ( rc < 0 )		9540542	8					
ANR	9541095	Condition	rc < 0	211:16:4007:4012	9540542	0	True				
ANR	9541096	RelationalExpression	rc < 0		9540542	0		<			
ANR	9541097	Identifier	rc		9540542	0					
ANR	9541098	PrimaryExpression	0		9540542	1					
ANR	9541099	CompoundStatement		207:24:3888:3888	9540542	1					
ANR	9541100	Statement	xen_shutdown_fatal_error	213:16:4034:4057	9540542	0	True				
ANR	9541101	Statement	(	213:40:4058:4058	9540542	1	True				
ANR	9541102	Statement	"""Internal error: Invalid write"""	213:41:4059:4089	9540542	2	True				
ANR	9541103	Statement	""" emulation. (%s, rc: %d)\\n"""	215:41:4133:4160	9540542	3	True				
ANR	9541104	Statement	","	215:69:4161:4161	9540542	4	True				
ANR	9541105	Statement	__func__	217:41:4205:4212	9540542	5	True				
ANR	9541106	Statement	","	217:49:4213:4213	9540542	6	True				
ANR	9541107	Statement	rc	217:51:4215:4216	9540542	7	True				
ANR	9541108	Statement	)	217:53:4217:4217	9540542	8	True				
ANR	9541109	ExpressionStatement		217:54:4218:4218	9540542	9	True				
ANR	9541110	ReturnStatement	return ;	219:16:4237:4243	9540542	10	True				
ANR	9541111	ExpressionStatement	emul_len -= reg -> size	227:12:4325:4346	9540542	9	True				
ANR	9541112	AssignmentExpression	emul_len -= reg -> size		9540542	0		-=			
ANR	9541113	Identifier	emul_len		9540542	0					
ANR	9541114	PtrMemberAccess	reg -> size		9540542	1					
ANR	9541115	Identifier	reg		9540542	0					
ANR	9541116	Identifier	size		9540542	1					
ANR	9541117	IfStatement	if ( emul_len > 0 )		9540542	10					
ANR	9541118	Condition	emul_len > 0	229:16:4365:4376	9540542	0	True				
ANR	9541119	RelationalExpression	emul_len > 0		9540542	0		>			
ANR	9541120	Identifier	emul_len		9540542	0					
ANR	9541121	PrimaryExpression	0		9540542	1					
ANR	9541122	CompoundStatement		225:30:4252:4252	9540542	1					
ANR	9541123	ExpressionStatement	find_addr = real_offset + reg -> size	231:16:4398:4433	9540542	0	True				
ANR	9541124	AssignmentExpression	find_addr = real_offset + reg -> size		9540542	0		=			
ANR	9541125	Identifier	find_addr		9540542	0					
ANR	9541126	AdditiveExpression	real_offset + reg -> size		9540542	1		+			
ANR	9541127	Identifier	real_offset		9540542	0					
ANR	9541128	PtrMemberAccess	reg -> size		9540542	1					
ANR	9541129	Identifier	reg		9540542	0					
ANR	9541130	Identifier	size		9540542	1					
ANR	9541131	ElseStatement	else		9540542	0					
ANR	9541132	CompoundStatement		231:15:4339:4339	9540542	0					
ANR	9541133	ExpressionStatement	emul_len --	241:12:4589:4599	9540542	0	True				
ANR	9541134	PostIncDecOperationExpression	emul_len --		9540542	0					
ANR	9541135	Identifier	emul_len		9540542	0					
ANR	9541136	IncDec	--		9540542	1					
ANR	9541137	ExpressionStatement	find_addr ++	243:12:4614:4625	9540542	1	True				
ANR	9541138	PostIncDecOperationExpression	find_addr ++		9540542	0					
ANR	9541139	Identifier	find_addr		9540542	0					
ANR	9541140	IncDec	++		9540542	1					
ANR	9541141	ExpressionStatement	val >>= ( addr & 3 ) << 3	253:4:4725:4748	9540542	24	True				
ANR	9541142	AssignmentExpression	val >>= ( addr & 3 ) << 3		9540542	0		>>=			
ANR	9541143	Identifier	val		9540542	0					
ANR	9541144	ShiftExpression	( addr & 3 ) << 3		9540542	1		<<			
ANR	9541145	BitAndExpression	addr & 3		9540542	0		&			
ANR	9541146	Identifier	addr		9540542	0					
ANR	9541147	PrimaryExpression	3		9540542	1					
ANR	9541148	PrimaryExpression	3		9540542	1					
ANR	9541149	ExpressionStatement	memory_region_transaction_commit ( )	257:4:4757:4791	9540542	25	True				
ANR	9541150	CallExpression	memory_region_transaction_commit ( )		9540542	0					
ANR	9541151	Callee	memory_region_transaction_commit		9540542	0					
ANR	9541152	Identifier	memory_region_transaction_commit		9540542	0					
ANR	9541153	ArgumentList			9540542	1					
ANR	9541154	Label	out :	261:0:4796:4799	9540542	26	True				
ANR	9541155	Identifier	out		9540542	0					
ANR	9541156	ForStatement	for ( index = 0 ; wb_mask ; index += len )		9540542	27					
ANR	9541157	ForInit	index = 0 ;	263:9:4811:4820	9540542	0	True				
ANR	9541158	AssignmentExpression	index = 0		9540542	0		=			
ANR	9541159	Identifier	index		9540542	0					
ANR	9541160	PrimaryExpression	0		9540542	1					
ANR	9541161	Condition	wb_mask	263:20:4822:4828	9540542	1	True				
ANR	9541162	Identifier	wb_mask		9540542	0					
ANR	9541163	AssignmentExpression	index += len	263:29:4831:4842	9540542	2	True	+=			
ANR	9541164	Identifier	index		9540542	0					
ANR	9541165	Identifier	len		9540542	1					
ANR	9541166	CompoundStatement		259:43:4718:4718	9540542	3					
ANR	9541167	WhileStatement	while ( ! ( wb_mask & 0xff ) )		9540542	0					
ANR	9541168	Condition	! ( wb_mask & 0xff )	267:15:4910:4926	9540542	0	True				
ANR	9541169	UnaryOperationExpression	! ( wb_mask & 0xff )		9540542	0					
ANR	9541170	UnaryOperator	!		9540542	0					
ANR	9541171	BitAndExpression	wb_mask & 0xff		9540542	1		&			
ANR	9541172	Identifier	wb_mask		9540542	0					
ANR	9541173	PrimaryExpression	0xff		9540542	1					
ANR	9541174	CompoundStatement		263:34:4802:4802	9540542	1					
ANR	9541175	ExpressionStatement	index ++	269:12:4944:4951	9540542	0	True				
ANR	9541176	PostIncDecOperationExpression	index ++		9540542	0					
ANR	9541177	Identifier	index		9540542	0					
ANR	9541178	IncDec	++		9540542	1					
ANR	9541179	ExpressionStatement	wb_mask >>= 8	271:12:4966:4979	9540542	1	True				
ANR	9541180	AssignmentExpression	wb_mask >>= 8		9540542	0		>>=			
ANR	9541181	Identifier	wb_mask		9540542	0					
ANR	9541182	PrimaryExpression	8		9540542	1					
ANR	9541183	ExpressionStatement	len = 0	275:8:5001:5008	9540542	1	True				
ANR	9541184	AssignmentExpression	len = 0		9540542	0		=			
ANR	9541185	Identifier	len		9540542	0					
ANR	9541186	PrimaryExpression	0		9540542	1					
ANR	9541187	DoStatement	do		9540542	2					
ANR	9541188	CompoundStatement		273:11:4895:4895	9540542	0					
ANR	9541189	ExpressionStatement	len ++	279:12:5037:5042	9540542	0	True				
ANR	9541190	PostIncDecOperationExpression	len ++		9540542	0					
ANR	9541191	Identifier	len		9540542	0					
ANR	9541192	IncDec	++		9540542	1					
ANR	9541193	ExpressionStatement	wb_mask >>= 8	281:12:5057:5070	9540542	1	True				
ANR	9541194	AssignmentExpression	wb_mask >>= 8		9540542	0		>>=			
ANR	9541195	Identifier	wb_mask		9540542	0					
ANR	9541196	PrimaryExpression	8		9540542	1					
ANR	9541197	Condition	wb_mask & 0xff	283:17:5090:5103	9540542	1	True				
ANR	9541198	BitAndExpression	wb_mask & 0xff		9540542	0		&			
ANR	9541199	Identifier	wb_mask		9540542	0					
ANR	9541200	PrimaryExpression	0xff		9540542	1					
ANR	9541201	ExpressionStatement	"rc = xen_host_pci_set_block ( & s -> real_device , addr + index , ( uint8_t * ) & val + index , len )"	285:8:5116:5241	9540542	3	True				
ANR	9541202	AssignmentExpression	"rc = xen_host_pci_set_block ( & s -> real_device , addr + index , ( uint8_t * ) & val + index , len )"		9540542	0		=			
ANR	9541203	Identifier	rc		9540542	0					
ANR	9541204	CallExpression	"xen_host_pci_set_block ( & s -> real_device , addr + index , ( uint8_t * ) & val + index , len )"		9540542	1					
ANR	9541205	Callee	xen_host_pci_set_block		9540542	0					
ANR	9541206	Identifier	xen_host_pci_set_block		9540542	0					
ANR	9541207	ArgumentList	& s -> real_device		9540542	1					
ANR	9541208	Argument	& s -> real_device		9540542	0					
ANR	9541209	UnaryOperationExpression	& s -> real_device		9540542	0					
ANR	9541210	UnaryOperator	&		9540542	0					
ANR	9541211	PtrMemberAccess	s -> real_device		9540542	1					
ANR	9541212	Identifier	s		9540542	0					
ANR	9541213	Identifier	real_device		9540542	1					
ANR	9541214	Argument	addr + index		9540542	1					
ANR	9541215	AdditiveExpression	addr + index		9540542	0		+			
ANR	9541216	Identifier	addr		9540542	0					
ANR	9541217	Identifier	index		9540542	1					
ANR	9541218	Argument	( uint8_t * ) & val + index		9540542	2					
ANR	9541219	AdditiveExpression	( uint8_t * ) & val + index		9540542	0		+			
ANR	9541220	CastExpression	( uint8_t * ) & val		9540542	0					
ANR	9541221	CastTarget	uint8_t *		9540542	0					
ANR	9541222	UnaryOperationExpression	& val		9540542	1					
ANR	9541223	UnaryOperator	&		9540542	0					
ANR	9541224	Identifier	val		9540542	1					
ANR	9541225	Identifier	index		9540542	1					
ANR	9541226	Argument	len		9540542	3					
ANR	9541227	Identifier	len		9540542	0					
ANR	9541228	IfStatement	if ( rc < 0 )		9540542	4					
ANR	9541229	Condition	rc < 0	291:12:5258:5263	9540542	0	True				
ANR	9541230	RelationalExpression	rc < 0		9540542	0		<			
ANR	9541231	Identifier	rc		9540542	0					
ANR	9541232	PrimaryExpression	0		9540542	1					
ANR	9541233	CompoundStatement		287:20:5139:5139	9540542	1					
ANR	9541234	ExpressionStatement	"XEN_PT_ERR ( d , ""pci_write_block failed. return value: %d.\\n"" , rc )"	293:12:5281:5345	9540542	0	True				
ANR	9541235	CallExpression	"XEN_PT_ERR ( d , ""pci_write_block failed. return value: %d.\\n"" , rc )"		9540542	0					
ANR	9541236	Callee	XEN_PT_ERR		9540542	0					
ANR	9541237	Identifier	XEN_PT_ERR		9540542	0					
ANR	9541238	ArgumentList	d		9540542	1					
ANR	9541239	Argument	d		9540542	0					
ANR	9541240	Identifier	d		9540542	0					
ANR	9541241	Argument	"""pci_write_block failed. return value: %d.\\n"""		9540542	1					
ANR	9541242	PrimaryExpression	"""pci_write_block failed. return value: %d.\\n"""		9540542	0					
ANR	9541243	Argument	rc		9540542	2					
ANR	9541244	Identifier	rc		9540542	0					
ANR	9541245	ReturnType	static void		9540542	1					
ANR	9541246	Identifier	xen_pt_pci_write_config		9540542	2					
ANR	9541247	ParameterList	"PCIDevice * d , uint32_t addr , uint32_t val , int len"		9540542	3					
ANR	9541248	Parameter	PCIDevice * d	1:36:36:47	9540542	0	True				
ANR	9541249	ParameterType	PCIDevice *		9540542	0					
ANR	9541250	Identifier	d		9540542	1					
ANR	9541251	Parameter	uint32_t addr	1:50:50:62	9540542	1	True				
ANR	9541252	ParameterType	uint32_t		9540542	0					
ANR	9541253	Identifier	addr		9540542	1					
ANR	9541254	Parameter	uint32_t val	3:36:102:113	9540542	2	True				
ANR	9541255	ParameterType	uint32_t		9540542	0					
ANR	9541256	Identifier	val		9540542	1					
ANR	9541257	Parameter	int len	3:50:116:122	9540542	3	True				
ANR	9541258	ParameterType	int		9540542	0					
ANR	9541259	Identifier	len		9540542	1					
ANR	9541260	CFGEntryNode	ENTRY		9540542		True				
ANR	9541261	CFGExitNode	EXIT		9540542		True				
ANR	9541262	Symbol	& val		9540542						
ANR	9541263	Symbol	XEN_PT_BAR_ALLF		9540542						
ANR	9541264	Symbol	reg_grp_entry -> base_offset		9540542						
ANR	9541265	Symbol	* index		9540542						
ANR	9541266	Symbol	XEN_PT_GRP_TYPE_HARDWIRED		9540542						
ANR	9541267	Symbol	valid_mask		9540542						
ANR	9541268	Symbol	XEN_PT_BAR_FLAG_UNUSED		9540542						
ANR	9541269	Symbol	XenPCIPassthroughState		9540542						
ANR	9541270	Symbol	len		9540542						
ANR	9541271	Symbol	dev		9540542						
ANR	9541272	Symbol	reg		9540542						
ANR	9541273	Symbol	* reg_entry		9540542						
ANR	9541274	Symbol	* s -> bases		9540542						
ANR	9541275	Symbol	reg_grp_entry -> reg_grp -> grp_type		9540542						
ANR	9541276	Symbol	xen_pt_find_reg		9540542						
ANR	9541277	Symbol	val		9540542						
ANR	9541278	Symbol	DO_UPCAST		9540542						
ANR	9541279	Symbol	NULL		9540542						
ANR	9541280	Symbol	* reg_grp_entry -> reg_grp		9540542						
ANR	9541281	Symbol	reg_entry -> reg		9540542						
ANR	9541282	Symbol	index		9540542						
ANR	9541283	Symbol	reg -> u . dw		9540542						
ANR	9541284	Symbol	find_addr		9540542						
ANR	9541285	Symbol	* * reg_grp_entry		9540542						
ANR	9541286	Symbol	s -> bases		9540542						
ANR	9541287	Symbol	xen_host_pci_get_block		9540542						
ANR	9541288	Symbol	reg_grp_entry		9540542						
ANR	9541289	Symbol	rc		9540542						
ANR	9541290	Symbol	real_offset		9540542						
ANR	9541291	Symbol	xen_pt_bar_offset_to_index		9540542						
ANR	9541292	Symbol	emul_len		9540542						
ANR	9541293	Symbol	xen_pt_pci_config_access_check		9540542						
ANR	9541294	Symbol	read_val		9540542						
ANR	9541295	Symbol	reg -> size		9540542						
ANR	9541296	Symbol	reg -> emu_mask		9540542						
ANR	9541297	Symbol	xen_pt_find_reg_grp		9540542						
ANR	9541298	Symbol	reg -> u . b		9540542						
ANR	9541299	Symbol	reg -> u . w . write		9540542						
ANR	9541300	Symbol	reg -> u . b . write		9540542						
ANR	9541301	Symbol	wb_mask		9540542						
ANR	9541302	Symbol	ptr_val		9540542						
ANR	9541303	Symbol	s -> bases [ index ] . bar_flag		9540542						
ANR	9541304	Symbol	reg -> u . w		9540542						
ANR	9541305	Symbol	reg_entry		9540542						
ANR	9541306	Symbol	* * s		9540542						
ANR	9541307	Symbol	addr		9540542						
ANR	9541308	Symbol	reg_grp_entry -> reg_grp		9540542						
ANR	9541309	Symbol	reg -> u . dw . write		9540542						
ANR	9541310	Symbol	* reg_grp_entry		9540542						
ANR	9541311	Symbol	d		9540542						
ANR	9541312	Symbol	reg -> u		9540542						
ANR	9541313	Symbol	reg -> offset		9540542						
ANR	9541314	Symbol	xen_host_pci_set_block		9540542						
ANR	9541315	Symbol	& s -> real_device		9540542						
ANR	9541316	Symbol	s		9540542						
ANR	9541317	Symbol	& read_val		9540542						
ANR	9541318	Symbol	* s		9540542						
ANR	9541319	Symbol	* reg		9540542						
