command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6254326	File	/home/p4ultr4n/workplace/ReVeal/raw_code/opts_type_uint64_0.c								
ANR	6254327	Function	opts_type_uint64	1:0:0:1502							
ANR	6254328	FunctionDef	"opts_type_uint64 (Visitor * v , uint64_t * obj , const char * name , Error * * errp)"		6254327	0					
ANR	6254329	CompoundStatement		3:0:77:1502	6254327	0					
ANR	6254330	IdentifierDeclStatement	"OptsVisitor * ov = DO_UPCAST ( OptsVisitor , visitor , v ) ;"	5:4:84:136	6254327	0	True				
ANR	6254331	IdentifierDecl	"* ov = DO_UPCAST ( OptsVisitor , visitor , v )"		6254327	0					
ANR	6254332	IdentifierDeclType	OptsVisitor *		6254327	0					
ANR	6254333	Identifier	ov		6254327	1					
ANR	6254334	AssignmentExpression	"* ov = DO_UPCAST ( OptsVisitor , visitor , v )"		6254327	2		=			
ANR	6254335	Identifier	ov		6254327	0					
ANR	6254336	CallExpression	"DO_UPCAST ( OptsVisitor , visitor , v )"		6254327	1					
ANR	6254337	Callee	DO_UPCAST		6254327	0					
ANR	6254338	Identifier	DO_UPCAST		6254327	0					
ANR	6254339	ArgumentList	OptsVisitor		6254327	1					
ANR	6254340	Argument	OptsVisitor		6254327	0					
ANR	6254341	Identifier	OptsVisitor		6254327	0					
ANR	6254342	Argument	visitor		6254327	1					
ANR	6254343	Identifier	visitor		6254327	0					
ANR	6254344	Argument	v		6254327	2					
ANR	6254345	Identifier	v		6254327	0					
ANR	6254346	IdentifierDeclStatement	const QemuOpt * opt ;	7:4:143:161	6254327	1	True				
ANR	6254347	IdentifierDecl	* opt		6254327	0					
ANR	6254348	IdentifierDeclType	const QemuOpt *		6254327	0					
ANR	6254349	Identifier	opt		6254327	1					
ANR	6254350	IdentifierDeclStatement	const char * str ;	9:4:168:183	6254327	2	True				
ANR	6254351	IdentifierDecl	* str		6254327	0					
ANR	6254352	IdentifierDeclType	const char *		6254327	0					
ANR	6254353	Identifier	str		6254327	1					
ANR	6254354	IdentifierDeclStatement	unsigned long long val ;	11:4:190:212	6254327	3	True				
ANR	6254355	IdentifierDecl	val		6254327	0					
ANR	6254356	IdentifierDeclType	unsigned long long		6254327	0					
ANR	6254357	Identifier	val		6254327	1					
ANR	6254358	IdentifierDeclStatement	char * endptr ;	13:4:219:231	6254327	4	True				
ANR	6254359	IdentifierDecl	* endptr		6254327	0					
ANR	6254360	IdentifierDeclType	char *		6254327	0					
ANR	6254361	Identifier	endptr		6254327	1					
ANR	6254362	IfStatement	if ( ov -> list_mode == LM_UNSIGNED_INTERVAL )		6254327	5					
ANR	6254363	Condition	ov -> list_mode == LM_UNSIGNED_INTERVAL	17:8:244:280	6254327	0	True				
ANR	6254364	EqualityExpression	ov -> list_mode == LM_UNSIGNED_INTERVAL		6254327	0		==			
ANR	6254365	PtrMemberAccess	ov -> list_mode		6254327	0					
ANR	6254366	Identifier	ov		6254327	0					
ANR	6254367	Identifier	list_mode		6254327	1					
ANR	6254368	Identifier	LM_UNSIGNED_INTERVAL		6254327	1					
ANR	6254369	CompoundStatement		15:47:205:205	6254327	1					
ANR	6254370	ExpressionStatement	* obj = ov -> range_next . u	19:8:294:317	6254327	0	True				
ANR	6254371	AssignmentExpression	* obj = ov -> range_next . u		6254327	0		=			
ANR	6254372	UnaryOperationExpression	* obj		6254327	0					
ANR	6254373	UnaryOperator	*		6254327	0					
ANR	6254374	Identifier	obj		6254327	1					
ANR	6254375	MemberAccess	ov -> range_next . u		6254327	1					
ANR	6254376	PtrMemberAccess	ov -> range_next		6254327	0					
ANR	6254377	Identifier	ov		6254327	0					
ANR	6254378	Identifier	range_next		6254327	1					
ANR	6254379	Identifier	u		6254327	1					
ANR	6254380	ReturnStatement	return ;	21:8:328:334	6254327	1	True				
ANR	6254381	ExpressionStatement	"opt = lookup_scalar ( ov , name , errp )"	27:4:350:385	6254327	6	True				
ANR	6254382	AssignmentExpression	"opt = lookup_scalar ( ov , name , errp )"		6254327	0		=			
ANR	6254383	Identifier	opt		6254327	0					
ANR	6254384	CallExpression	"lookup_scalar ( ov , name , errp )"		6254327	1					
ANR	6254385	Callee	lookup_scalar		6254327	0					
ANR	6254386	Identifier	lookup_scalar		6254327	0					
ANR	6254387	ArgumentList	ov		6254327	1					
ANR	6254388	Argument	ov		6254327	0					
ANR	6254389	Identifier	ov		6254327	0					
ANR	6254390	Argument	name		6254327	1					
ANR	6254391	Identifier	name		6254327	0					
ANR	6254392	Argument	errp		6254327	2					
ANR	6254393	Identifier	errp		6254327	0					
ANR	6254394	IfStatement	if ( ! opt )		6254327	7					
ANR	6254395	Condition	! opt	29:8:396:399	6254327	0	True				
ANR	6254396	UnaryOperationExpression	! opt		6254327	0					
ANR	6254397	UnaryOperator	!		6254327	0					
ANR	6254398	Identifier	opt		6254327	1					
ANR	6254399	CompoundStatement		27:14:324:324	6254327	1					
ANR	6254400	ReturnStatement	return ;	31:8:413:419	6254327	0	True				
ANR	6254401	ExpressionStatement	str = opt -> str	35:4:433:447	6254327	8	True				
ANR	6254402	AssignmentExpression	str = opt -> str		6254327	0		=			
ANR	6254403	Identifier	str		6254327	0					
ANR	6254404	PtrMemberAccess	opt -> str		6254327	1					
ANR	6254405	Identifier	opt		6254327	0					
ANR	6254406	Identifier	str		6254327	1					
ANR	6254407	ExpressionStatement	assert ( ov -> list_mode == LM_NONE || ov -> list_mode == LM_IN_PROGRESS )	41:4:501:568	6254327	9	True				
ANR	6254408	CallExpression	assert ( ov -> list_mode == LM_NONE || ov -> list_mode == LM_IN_PROGRESS )		6254327	0					
ANR	6254409	Callee	assert		6254327	0					
ANR	6254410	Identifier	assert		6254327	0					
ANR	6254411	ArgumentList	ov -> list_mode == LM_NONE || ov -> list_mode == LM_IN_PROGRESS		6254327	1					
ANR	6254412	Argument	ov -> list_mode == LM_NONE || ov -> list_mode == LM_IN_PROGRESS		6254327	0					
ANR	6254413	OrExpression	ov -> list_mode == LM_NONE || ov -> list_mode == LM_IN_PROGRESS		6254327	0		||			
ANR	6254414	EqualityExpression	ov -> list_mode == LM_NONE		6254327	0		==			
ANR	6254415	PtrMemberAccess	ov -> list_mode		6254327	0					
ANR	6254416	Identifier	ov		6254327	0					
ANR	6254417	Identifier	list_mode		6254327	1					
ANR	6254418	Identifier	LM_NONE		6254327	1					
ANR	6254419	EqualityExpression	ov -> list_mode == LM_IN_PROGRESS		6254327	1		==			
ANR	6254420	PtrMemberAccess	ov -> list_mode		6254327	0					
ANR	6254421	Identifier	ov		6254327	0					
ANR	6254422	Identifier	list_mode		6254327	1					
ANR	6254423	Identifier	LM_IN_PROGRESS		6254327	1					
ANR	6254424	IfStatement	"if ( parse_uint ( str , & val , & endptr , 0 ) == 0 && val <= UINT64_MAX )"		6254327	10					
ANR	6254425	Condition	"parse_uint ( str , & val , & endptr , 0 ) == 0 && val <= UINT64_MAX"	45:8:581:639	6254327	0	True				
ANR	6254426	AndExpression	"parse_uint ( str , & val , & endptr , 0 ) == 0 && val <= UINT64_MAX"		6254327	0		&&			
ANR	6254427	EqualityExpression	"parse_uint ( str , & val , & endptr , 0 ) == 0"		6254327	0		==			
ANR	6254428	CallExpression	"parse_uint ( str , & val , & endptr , 0 )"		6254327	0					
ANR	6254429	Callee	parse_uint		6254327	0					
ANR	6254430	Identifier	parse_uint		6254327	0					
ANR	6254431	ArgumentList	str		6254327	1					
ANR	6254432	Argument	str		6254327	0					
ANR	6254433	Identifier	str		6254327	0					
ANR	6254434	Argument	& val		6254327	1					
ANR	6254435	UnaryOperationExpression	& val		6254327	0					
ANR	6254436	UnaryOperator	&		6254327	0					
ANR	6254437	Identifier	val		6254327	1					
ANR	6254438	Argument	& endptr		6254327	2					
ANR	6254439	UnaryOperationExpression	& endptr		6254327	0					
ANR	6254440	UnaryOperator	&		6254327	0					
ANR	6254441	Identifier	endptr		6254327	1					
ANR	6254442	Argument	0		6254327	3					
ANR	6254443	PrimaryExpression	0		6254327	0					
ANR	6254444	PrimaryExpression	0		6254327	1					
ANR	6254445	RelationalExpression	val <= UINT64_MAX		6254327	1		<=			
ANR	6254446	Identifier	val		6254327	0					
ANR	6254447	Identifier	UINT64_MAX		6254327	1					
ANR	6254448	CompoundStatement		43:69:564:564	6254327	1					
ANR	6254449	IfStatement	if ( * endptr == '\\0' )		6254327	0					
ANR	6254450	Condition	* endptr == '\\0'	47:12:657:671	6254327	0	True				
ANR	6254451	EqualityExpression	* endptr == '\\0'		6254327	0		==			
ANR	6254452	UnaryOperationExpression	* endptr		6254327	0					
ANR	6254453	UnaryOperator	*		6254327	0					
ANR	6254454	Identifier	endptr		6254327	1					
ANR	6254455	PrimaryExpression	'\\0'		6254327	1					
ANR	6254456	CompoundStatement		45:29:596:596	6254327	1					
ANR	6254457	ExpressionStatement	* obj = val	49:12:689:699	6254327	0	True				
ANR	6254458	AssignmentExpression	* obj = val		6254327	0		=			
ANR	6254459	UnaryOperationExpression	* obj		6254327	0					
ANR	6254460	UnaryOperator	*		6254327	0					
ANR	6254461	Identifier	obj		6254327	1					
ANR	6254462	Identifier	val		6254327	1					
ANR	6254463	ExpressionStatement	"processed ( ov , name )"	51:12:714:733	6254327	1	True				
ANR	6254464	CallExpression	"processed ( ov , name )"		6254327	0					
ANR	6254465	Callee	processed		6254327	0					
ANR	6254466	Identifier	processed		6254327	0					
ANR	6254467	ArgumentList	ov		6254327	1					
ANR	6254468	Argument	ov		6254327	0					
ANR	6254469	Identifier	ov		6254327	0					
ANR	6254470	Argument	name		6254327	1					
ANR	6254471	Identifier	name		6254327	0					
ANR	6254472	ReturnStatement	return ;	53:12:748:754	6254327	2	True				
ANR	6254473	IfStatement	if ( * endptr == '-' && ov -> list_mode == LM_IN_PROGRESS )		6254327	1					
ANR	6254474	Condition	* endptr == '-' && ov -> list_mode == LM_IN_PROGRESS	57:12:780:828	6254327	0	True				
ANR	6254475	AndExpression	* endptr == '-' && ov -> list_mode == LM_IN_PROGRESS		6254327	0		&&			
ANR	6254476	EqualityExpression	* endptr == '-'		6254327	0		==			
ANR	6254477	UnaryOperationExpression	* endptr		6254327	0					
ANR	6254478	UnaryOperator	*		6254327	0					
ANR	6254479	Identifier	endptr		6254327	1					
ANR	6254480	PrimaryExpression	'-'		6254327	1					
ANR	6254481	EqualityExpression	ov -> list_mode == LM_IN_PROGRESS		6254327	1		==			
ANR	6254482	PtrMemberAccess	ov -> list_mode		6254327	0					
ANR	6254483	Identifier	ov		6254327	0					
ANR	6254484	Identifier	list_mode		6254327	1					
ANR	6254485	Identifier	LM_IN_PROGRESS		6254327	1					
ANR	6254486	CompoundStatement		57:12:768:791	6254327	1					
ANR	6254487	IdentifierDeclStatement	unsigned long long val2 ;	59:12:846:869	6254327	0	True				
ANR	6254488	IdentifierDecl	val2		6254327	0					
ANR	6254489	IdentifierDeclType	unsigned long long		6254327	0					
ANR	6254490	Identifier	val2		6254327	1					
ANR	6254491	ExpressionStatement	str = endptr + 1	63:12:886:902	6254327	1	True				
ANR	6254492	AssignmentExpression	str = endptr + 1		6254327	0		=			
ANR	6254493	Identifier	str		6254327	0					
ANR	6254494	AdditiveExpression	endptr + 1		6254327	1		+			
ANR	6254495	Identifier	endptr		6254327	0					
ANR	6254496	PrimaryExpression	1		6254327	1					
ANR	6254497	IfStatement	"if ( parse_uint_full ( str , & val2 , 0 ) == 0 && val2 <= UINT64_MAX && val <= val2 )"		6254327	2					
ANR	6254498	Condition	"parse_uint_full ( str , & val2 , 0 ) == 0 && val2 <= UINT64_MAX && val <= val2"	65:16:921:1009	6254327	0	True				
ANR	6254499	AndExpression	"parse_uint_full ( str , & val2 , 0 ) == 0 && val2 <= UINT64_MAX && val <= val2"		6254327	0		&&			
ANR	6254500	EqualityExpression	"parse_uint_full ( str , & val2 , 0 ) == 0"		6254327	0		==			
ANR	6254501	CallExpression	"parse_uint_full ( str , & val2 , 0 )"		6254327	0					
ANR	6254502	Callee	parse_uint_full		6254327	0					
ANR	6254503	Identifier	parse_uint_full		6254327	0					
ANR	6254504	ArgumentList	str		6254327	1					
ANR	6254505	Argument	str		6254327	0					
ANR	6254506	Identifier	str		6254327	0					
ANR	6254507	Argument	& val2		6254327	1					
ANR	6254508	UnaryOperationExpression	& val2		6254327	0					
ANR	6254509	UnaryOperator	&		6254327	0					
ANR	6254510	Identifier	val2		6254327	1					
ANR	6254511	Argument	0		6254327	2					
ANR	6254512	PrimaryExpression	0		6254327	0					
ANR	6254513	PrimaryExpression	0		6254327	1					
ANR	6254514	AndExpression	val2 <= UINT64_MAX && val <= val2		6254327	1		&&			
ANR	6254515	RelationalExpression	val2 <= UINT64_MAX		6254327	0		<=			
ANR	6254516	Identifier	val2		6254327	0					
ANR	6254517	Identifier	UINT64_MAX		6254327	1					
ANR	6254518	RelationalExpression	val <= val2		6254327	1		<=			
ANR	6254519	Identifier	val		6254327	0					
ANR	6254520	Identifier	val2		6254327	1					
ANR	6254521	CompoundStatement		65:51:934:934	6254327	1					
ANR	6254522	ExpressionStatement	ov -> range_next . u = val	69:16:1031:1053	6254327	0	True				
ANR	6254523	AssignmentExpression	ov -> range_next . u = val		6254327	0		=			
ANR	6254524	MemberAccess	ov -> range_next . u		6254327	0					
ANR	6254525	PtrMemberAccess	ov -> range_next		6254327	0					
ANR	6254526	Identifier	ov		6254327	0					
ANR	6254527	Identifier	range_next		6254327	1					
ANR	6254528	Identifier	u		6254327	1					
ANR	6254529	Identifier	val		6254327	1					
ANR	6254530	ExpressionStatement	ov -> range_limit . u = val2	71:16:1072:1096	6254327	1	True				
ANR	6254531	AssignmentExpression	ov -> range_limit . u = val2		6254327	0		=			
ANR	6254532	MemberAccess	ov -> range_limit . u		6254327	0					
ANR	6254533	PtrMemberAccess	ov -> range_limit		6254327	0					
ANR	6254534	Identifier	ov		6254327	0					
ANR	6254535	Identifier	range_limit		6254327	1					
ANR	6254536	Identifier	u		6254327	1					
ANR	6254537	Identifier	val2		6254327	1					
ANR	6254538	ExpressionStatement	ov -> list_mode = LM_UNSIGNED_INTERVAL	73:16:1115:1151	6254327	2	True				
ANR	6254539	AssignmentExpression	ov -> list_mode = LM_UNSIGNED_INTERVAL		6254327	0		=			
ANR	6254540	PtrMemberAccess	ov -> list_mode		6254327	0					
ANR	6254541	Identifier	ov		6254327	0					
ANR	6254542	Identifier	list_mode		6254327	1					
ANR	6254543	Identifier	LM_UNSIGNED_INTERVAL		6254327	1					
ANR	6254544	ExpressionStatement	* obj = ov -> range_next . u	79:16:1221:1244	6254327	3	True				
ANR	6254545	AssignmentExpression	* obj = ov -> range_next . u		6254327	0		=			
ANR	6254546	UnaryOperationExpression	* obj		6254327	0					
ANR	6254547	UnaryOperator	*		6254327	0					
ANR	6254548	Identifier	obj		6254327	1					
ANR	6254549	MemberAccess	ov -> range_next . u		6254327	1					
ANR	6254550	PtrMemberAccess	ov -> range_next		6254327	0					
ANR	6254551	Identifier	ov		6254327	0					
ANR	6254552	Identifier	range_next		6254327	1					
ANR	6254553	Identifier	u		6254327	1					
ANR	6254554	ReturnStatement	return ;	81:16:1263:1269	6254327	4	True				
ANR	6254555	ExpressionStatement	"error_set ( errp , QERR_INVALID_PARAMETER_VALUE , opt -> name , ( ov -> list_mode == LM_NONE ) ? ""a uint64 value"" : ""a uint64 value or range"" )"	89:4:1309:1499	6254327	11	True				
ANR	6254556	CallExpression	"error_set ( errp , QERR_INVALID_PARAMETER_VALUE , opt -> name , ( ov -> list_mode == LM_NONE ) ? ""a uint64 value"" : ""a uint64 value or range"" )"		6254327	0					
ANR	6254557	Callee	error_set		6254327	0					
ANR	6254558	Identifier	error_set		6254327	0					
ANR	6254559	ArgumentList	errp		6254327	1					
ANR	6254560	Argument	errp		6254327	0					
ANR	6254561	Identifier	errp		6254327	0					
ANR	6254562	Argument	QERR_INVALID_PARAMETER_VALUE		6254327	1					
ANR	6254563	Identifier	QERR_INVALID_PARAMETER_VALUE		6254327	0					
ANR	6254564	Argument	opt -> name		6254327	2					
ANR	6254565	PtrMemberAccess	opt -> name		6254327	0					
ANR	6254566	Identifier	opt		6254327	0					
ANR	6254567	Identifier	name		6254327	1					
ANR	6254568	Argument	"( ov -> list_mode == LM_NONE ) ? ""a uint64 value"" : ""a uint64 value or range"""		6254327	3					
ANR	6254569	ConditionalExpression	"( ov -> list_mode == LM_NONE ) ? ""a uint64 value"" : ""a uint64 value or range"""		6254327	0					
ANR	6254570	Condition	ov -> list_mode == LM_NONE		6254327	0					
ANR	6254571	EqualityExpression	ov -> list_mode == LM_NONE		6254327	0		==			
ANR	6254572	PtrMemberAccess	ov -> list_mode		6254327	0					
ANR	6254573	Identifier	ov		6254327	0					
ANR	6254574	Identifier	list_mode		6254327	1					
ANR	6254575	Identifier	LM_NONE		6254327	1					
ANR	6254576	PrimaryExpression	"""a uint64 value"""		6254327	1					
ANR	6254577	PrimaryExpression	"""a uint64 value or range"""		6254327	2					
ANR	6254578	Identifier	opts_type_uint64		6254327	1					
ANR	6254579	ParameterList	"Visitor * v , uint64_t * obj , const char * name , Error * * errp"		6254327	2					
ANR	6254580	Parameter	Visitor * v	1:17:17:26	6254327	0	True				
ANR	6254581	ParameterType	Visitor *		6254327	0					
ANR	6254582	Identifier	v		6254327	1					
ANR	6254583	Parameter	uint64_t * obj	1:29:29:41	6254327	1	True				
ANR	6254584	ParameterType	uint64_t *		6254327	0					
ANR	6254585	Identifier	obj		6254327	1					
ANR	6254586	Parameter	const char * name	1:44:44:59	6254327	2	True				
ANR	6254587	ParameterType	const char *		6254327	0					
ANR	6254588	Identifier	name		6254327	1					
ANR	6254589	Parameter	Error * * errp	1:62:62:73	6254327	3	True				
ANR	6254590	ParameterType	Error * *		6254327	0					
ANR	6254591	Identifier	errp		6254327	1					
ANR	6254592	CFGEntryNode	ENTRY		6254327		True				
ANR	6254593	CFGExitNode	EXIT		6254327		True				
ANR	6254594	Symbol	& val		6254327						
ANR	6254595	Symbol	LM_UNSIGNED_INTERVAL		6254327						
ANR	6254596	Symbol	opt -> name		6254327						
ANR	6254597	Symbol	errp		6254327						
ANR	6254598	Symbol	ov -> range_next		6254327						
ANR	6254599	Symbol	val2		6254327						
ANR	6254600	Symbol	* ov		6254327						
ANR	6254601	Symbol	lookup_scalar		6254327						
ANR	6254602	Symbol	ov -> range_next . u		6254327						
ANR	6254603	Symbol	opt -> str		6254327						
ANR	6254604	Symbol	ov -> range_limit . u		6254327						
ANR	6254605	Symbol	* opt		6254327						
ANR	6254606	Symbol	ov -> range_limit		6254327						
ANR	6254607	Symbol	parse_uint_full		6254327						
ANR	6254608	Symbol	ov -> list_mode		6254327						
ANR	6254609	Symbol	QERR_INVALID_PARAMETER_VALUE		6254327						
ANR	6254610	Symbol	val		6254327						
ANR	6254611	Symbol	* obj		6254327						
ANR	6254612	Symbol	UINT64_MAX		6254327						
ANR	6254613	Symbol	DO_UPCAST		6254327						
ANR	6254614	Symbol	endptr		6254327						
ANR	6254615	Symbol	OptsVisitor		6254327						
ANR	6254616	Symbol	* endptr		6254327						
ANR	6254617	Symbol	ov		6254327						
ANR	6254618	Symbol	& endptr		6254327						
ANR	6254619	Symbol	LM_NONE		6254327						
ANR	6254620	Symbol	parse_uint		6254327						
ANR	6254621	Symbol	LM_IN_PROGRESS		6254327						
ANR	6254622	Symbol	str		6254327						
ANR	6254623	Symbol	opt		6254327						
ANR	6254624	Symbol	v		6254327						
ANR	6254625	Symbol	obj		6254327						
ANR	6254626	Symbol	name		6254327						
ANR	6254627	Symbol	& val2		6254327						
ANR	6254628	Symbol	visitor		6254327						
