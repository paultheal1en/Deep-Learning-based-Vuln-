command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6568068	File	/home/p4ultr4n/workplace/ReVeal/raw_code/postfilter_0.c								
ANR	6568069	Function	postfilter	1:0:0:2911							
ANR	6568070	FunctionDef	"postfilter (EVRCContext * e , float * in , const float * coeff , float * out , int idx , const struct PfCoeff * pfc , int length)"		6568069	0					
ANR	6568071	CompoundStatement		7:0:179:2911	6568069	0					
ANR	6568072	IdentifierDeclStatement	"float wcoef1 [ FILTER_ORDER ] , wcoef2 [ FILTER_ORDER ] , scratch [ SUBFRAME_SIZE ] , temp [ SUBFRAME_SIZE ] , mem [ SUBFRAME_SIZE ] ;"	9:4:186:321	6568069	0	True				
ANR	6568073	IdentifierDecl	wcoef1 [ FILTER_ORDER ]		6568069	0					
ANR	6568074	IdentifierDeclType	float [ FILTER_ORDER ]		6568069	0					
ANR	6568075	Identifier	wcoef1		6568069	1					
ANR	6568076	Identifier	FILTER_ORDER		6568069	2					
ANR	6568077	IdentifierDecl	wcoef2 [ FILTER_ORDER ]		6568069	1					
ANR	6568078	IdentifierDeclType	float [ FILTER_ORDER ]		6568069	0					
ANR	6568079	Identifier	wcoef2		6568069	1					
ANR	6568080	Identifier	FILTER_ORDER		6568069	2					
ANR	6568081	IdentifierDecl	scratch [ SUBFRAME_SIZE ]		6568069	2					
ANR	6568082	IdentifierDeclType	float [ SUBFRAME_SIZE ]		6568069	0					
ANR	6568083	Identifier	scratch		6568069	1					
ANR	6568084	Identifier	SUBFRAME_SIZE		6568069	2					
ANR	6568085	IdentifierDecl	temp [ SUBFRAME_SIZE ]		6568069	3					
ANR	6568086	IdentifierDeclType	float [ SUBFRAME_SIZE ]		6568069	0					
ANR	6568087	Identifier	temp		6568069	1					
ANR	6568088	Identifier	SUBFRAME_SIZE		6568069	2					
ANR	6568089	IdentifierDecl	mem [ SUBFRAME_SIZE ]		6568069	4					
ANR	6568090	IdentifierDeclType	float [ SUBFRAME_SIZE ]		6568069	0					
ANR	6568091	Identifier	mem		6568069	1					
ANR	6568092	Identifier	SUBFRAME_SIZE		6568069	2					
ANR	6568093	IdentifierDeclStatement	"float sum1 = 0.0 , sum2 = 0.0 , gamma , gain ;"	15:4:328:369	6568069	1	True				
ANR	6568094	IdentifierDecl	sum1 = 0.0		6568069	0					
ANR	6568095	IdentifierDeclType	float		6568069	0					
ANR	6568096	Identifier	sum1		6568069	1					
ANR	6568097	AssignmentExpression	sum1 = 0.0		6568069	2		=			
ANR	6568098	Identifier	sum1		6568069	0					
ANR	6568099	PrimaryExpression	0.0		6568069	1					
ANR	6568100	IdentifierDecl	sum2 = 0.0		6568069	1					
ANR	6568101	IdentifierDeclType	float		6568069	0					
ANR	6568102	Identifier	sum2		6568069	1					
ANR	6568103	AssignmentExpression	sum2 = 0.0		6568069	2		=			
ANR	6568104	Identifier	sum2		6568069	0					
ANR	6568105	PrimaryExpression	0.0		6568069	1					
ANR	6568106	IdentifierDecl	gamma		6568069	2					
ANR	6568107	IdentifierDeclType	float		6568069	0					
ANR	6568108	Identifier	gamma		6568069	1					
ANR	6568109	IdentifierDecl	gain		6568069	3					
ANR	6568110	IdentifierDeclType	float		6568069	0					
ANR	6568111	Identifier	gain		6568069	1					
ANR	6568112	IdentifierDeclStatement	float tilt = pfc -> tilt ;	17:4:376:398	6568069	2	True				
ANR	6568113	IdentifierDecl	tilt = pfc -> tilt		6568069	0					
ANR	6568114	IdentifierDeclType	float		6568069	0					
ANR	6568115	Identifier	tilt		6568069	1					
ANR	6568116	AssignmentExpression	tilt = pfc -> tilt		6568069	2		=			
ANR	6568117	Identifier	tilt		6568069	0					
ANR	6568118	PtrMemberAccess	pfc -> tilt		6568069	1					
ANR	6568119	Identifier	pfc		6568069	0					
ANR	6568120	Identifier	tilt		6568069	1					
ANR	6568121	IdentifierDeclStatement	"int i , n , best ;"	19:4:405:419	6568069	3	True				
ANR	6568122	IdentifierDecl	i		6568069	0					
ANR	6568123	IdentifierDeclType	int		6568069	0					
ANR	6568124	Identifier	i		6568069	1					
ANR	6568125	IdentifierDecl	n		6568069	1					
ANR	6568126	IdentifierDeclType	int		6568069	0					
ANR	6568127	Identifier	n		6568069	1					
ANR	6568128	IdentifierDecl	best		6568069	2					
ANR	6568129	IdentifierDeclType	int		6568069	0					
ANR	6568130	Identifier	best		6568069	1					
ANR	6568131	ExpressionStatement	"bandwidth_expansion ( wcoef1 , coeff , pfc -> p1 )"	23:4:428:471	6568069	4	True				
ANR	6568132	CallExpression	"bandwidth_expansion ( wcoef1 , coeff , pfc -> p1 )"		6568069	0					
ANR	6568133	Callee	bandwidth_expansion		6568069	0					
ANR	6568134	Identifier	bandwidth_expansion		6568069	0					
ANR	6568135	ArgumentList	wcoef1		6568069	1					
ANR	6568136	Argument	wcoef1		6568069	0					
ANR	6568137	Identifier	wcoef1		6568069	0					
ANR	6568138	Argument	coeff		6568069	1					
ANR	6568139	Identifier	coeff		6568069	0					
ANR	6568140	Argument	pfc -> p1		6568069	2					
ANR	6568141	PtrMemberAccess	pfc -> p1		6568069	0					
ANR	6568142	Identifier	pfc		6568069	0					
ANR	6568143	Identifier	p1		6568069	1					
ANR	6568144	ExpressionStatement	"bandwidth_expansion ( wcoef2 , coeff , pfc -> p2 )"	25:4:478:521	6568069	5	True				
ANR	6568145	CallExpression	"bandwidth_expansion ( wcoef2 , coeff , pfc -> p2 )"		6568069	0					
ANR	6568146	Callee	bandwidth_expansion		6568069	0					
ANR	6568147	Identifier	bandwidth_expansion		6568069	0					
ANR	6568148	ArgumentList	wcoef2		6568069	1					
ANR	6568149	Argument	wcoef2		6568069	0					
ANR	6568150	Identifier	wcoef2		6568069	0					
ANR	6568151	Argument	coeff		6568069	1					
ANR	6568152	Identifier	coeff		6568069	0					
ANR	6568153	Argument	pfc -> p2		6568069	2					
ANR	6568154	PtrMemberAccess	pfc -> p2		6568069	0					
ANR	6568155	Identifier	pfc		6568069	0					
ANR	6568156	Identifier	p2		6568069	1					
ANR	6568157	ForStatement	for ( i = 0 ; i < length - 1 ; i ++ )		6568069	6					
ANR	6568158	ForInit	i = 0 ;	31:9:589:594	6568069	0	True				
ANR	6568159	AssignmentExpression	i = 0		6568069	0		=			
ANR	6568160	Identifier	i		6568069	0					
ANR	6568161	PrimaryExpression	0		6568069	1					
ANR	6568162	Condition	i < length - 1	31:16:596:609	6568069	1	True				
ANR	6568163	RelationalExpression	i < length - 1		6568069	0		<			
ANR	6568164	Identifier	i		6568069	0					
ANR	6568165	AdditiveExpression	length - 1		6568069	1		-			
ANR	6568166	Identifier	length		6568069	0					
ANR	6568167	PrimaryExpression	1		6568069	1					
ANR	6568168	PostIncDecOperationExpression	i ++	31:32:612:614	6568069	2	True				
ANR	6568169	Identifier	i		6568069	0					
ANR	6568170	IncDec	++		6568069	1					
ANR	6568171	ExpressionStatement	sum2 += in [ i ] * in [ i + 1 ]	33:8:626:651	6568069	3	True				
ANR	6568172	AssignmentExpression	sum2 += in [ i ] * in [ i + 1 ]		6568069	0		+=			
ANR	6568173	Identifier	sum2		6568069	0					
ANR	6568174	MultiplicativeExpression	in [ i ] * in [ i + 1 ]		6568069	1		*			
ANR	6568175	ArrayIndexing	in [ i ]		6568069	0					
ANR	6568176	Identifier	in		6568069	0					
ANR	6568177	Identifier	i		6568069	1					
ANR	6568178	ArrayIndexing	in [ i + 1 ]		6568069	1					
ANR	6568179	Identifier	in		6568069	0					
ANR	6568180	AdditiveExpression	i + 1		6568069	1		+			
ANR	6568181	Identifier	i		6568069	0					
ANR	6568182	PrimaryExpression	1		6568069	1					
ANR	6568183	IfStatement	if ( sum2 < 0.0 )		6568069	7					
ANR	6568184	Condition	sum2 < 0.0	35:8:662:671	6568069	0	True				
ANR	6568185	RelationalExpression	sum2 < 0.0		6568069	0		<			
ANR	6568186	Identifier	sum2		6568069	0					
ANR	6568187	PrimaryExpression	0.0		6568069	1					
ANR	6568188	ExpressionStatement	tilt = 0.0	37:8:683:693	6568069	1	True				
ANR	6568189	AssignmentExpression	tilt = 0.0		6568069	0		=			
ANR	6568190	Identifier	tilt		6568069	0					
ANR	6568191	PrimaryExpression	0.0		6568069	1					
ANR	6568192	ForStatement	for ( i = 0 ; i < length ; i ++ )		6568069	8					
ANR	6568193	ForInit	i = 0 ;	41:9:707:712	6568069	0	True				
ANR	6568194	AssignmentExpression	i = 0		6568069	0		=			
ANR	6568195	Identifier	i		6568069	0					
ANR	6568196	PrimaryExpression	0		6568069	1					
ANR	6568197	Condition	i < length	41:16:714:723	6568069	1	True				
ANR	6568198	RelationalExpression	i < length		6568069	0		<			
ANR	6568199	Identifier	i		6568069	0					
ANR	6568200	Identifier	length		6568069	1					
ANR	6568201	PostIncDecOperationExpression	i ++	41:28:726:728	6568069	2	True				
ANR	6568202	Identifier	i		6568069	0					
ANR	6568203	IncDec	++		6568069	1					
ANR	6568204	CompoundStatement		35:33:551:551	6568069	3					
ANR	6568205	ExpressionStatement	scratch [ i ] = in [ i ] - tilt * e -> last	43:8:742:777	6568069	0	True				
ANR	6568206	AssignmentExpression	scratch [ i ] = in [ i ] - tilt * e -> last		6568069	0		=			
ANR	6568207	ArrayIndexing	scratch [ i ]		6568069	0					
ANR	6568208	Identifier	scratch		6568069	0					
ANR	6568209	Identifier	i		6568069	1					
ANR	6568210	AdditiveExpression	in [ i ] - tilt * e -> last		6568069	1		-			
ANR	6568211	ArrayIndexing	in [ i ]		6568069	0					
ANR	6568212	Identifier	in		6568069	0					
ANR	6568213	Identifier	i		6568069	1					
ANR	6568214	MultiplicativeExpression	tilt * e -> last		6568069	1		*			
ANR	6568215	Identifier	tilt		6568069	0					
ANR	6568216	PtrMemberAccess	e -> last		6568069	1					
ANR	6568217	Identifier	e		6568069	0					
ANR	6568218	Identifier	last		6568069	1					
ANR	6568219	ExpressionStatement	e -> last = in [ i ]	45:8:788:803	6568069	1	True				
ANR	6568220	AssignmentExpression	e -> last = in [ i ]		6568069	0		=			
ANR	6568221	PtrMemberAccess	e -> last		6568069	0					
ANR	6568222	Identifier	e		6568069	0					
ANR	6568223	Identifier	last		6568069	1					
ANR	6568224	ArrayIndexing	in [ i ]		6568069	1					
ANR	6568225	Identifier	in		6568069	0					
ANR	6568226	Identifier	i		6568069	1					
ANR	6568227	ExpressionStatement	"residual_filter ( & e -> postfilter_residual [ ACB_SIZE ] , scratch , wcoef1 , e -> postfilter_fir , length )"	53:4:875:969	6568069	9	True				
ANR	6568228	CallExpression	"residual_filter ( & e -> postfilter_residual [ ACB_SIZE ] , scratch , wcoef1 , e -> postfilter_fir , length )"		6568069	0					
ANR	6568229	Callee	residual_filter		6568069	0					
ANR	6568230	Identifier	residual_filter		6568069	0					
ANR	6568231	ArgumentList	& e -> postfilter_residual [ ACB_SIZE ]		6568069	1					
ANR	6568232	Argument	& e -> postfilter_residual [ ACB_SIZE ]		6568069	0					
ANR	6568233	UnaryOperationExpression	& e -> postfilter_residual [ ACB_SIZE ]		6568069	0					
ANR	6568234	UnaryOperator	&		6568069	0					
ANR	6568235	ArrayIndexing	e -> postfilter_residual [ ACB_SIZE ]		6568069	1					
ANR	6568236	PtrMemberAccess	e -> postfilter_residual		6568069	0					
ANR	6568237	Identifier	e		6568069	0					
ANR	6568238	Identifier	postfilter_residual		6568069	1					
ANR	6568239	Identifier	ACB_SIZE		6568069	1					
ANR	6568240	Argument	scratch		6568069	1					
ANR	6568241	Identifier	scratch		6568069	0					
ANR	6568242	Argument	wcoef1		6568069	2					
ANR	6568243	Identifier	wcoef1		6568069	0					
ANR	6568244	Argument	e -> postfilter_fir		6568069	3					
ANR	6568245	PtrMemberAccess	e -> postfilter_fir		6568069	0					
ANR	6568246	Identifier	e		6568069	0					
ANR	6568247	Identifier	postfilter_fir		6568069	1					
ANR	6568248	Argument	length		6568069	4					
ANR	6568249	Identifier	length		6568069	0					
ANR	6568250	ExpressionStatement	best = idx	59:4:1010:1020	6568069	10	True				
ANR	6568251	AssignmentExpression	best = idx		6568069	0		=			
ANR	6568252	Identifier	best		6568069	0					
ANR	6568253	Identifier	idx		6568069	1					
ANR	6568254	ForStatement	"for ( i = FFMIN ( MIN_DELAY , idx - 3 ) ; i <= FFMAX ( MAX_DELAY , idx + 3 ) ; i ++ )"		6568069	11					
ANR	6568255	ForInit	"i = FFMIN ( MIN_DELAY , idx - 3 ) ;"	61:9:1032:1061	6568069	0	True				
ANR	6568256	AssignmentExpression	"i = FFMIN ( MIN_DELAY , idx - 3 )"		6568069	0		=			
ANR	6568257	Identifier	i		6568069	0					
ANR	6568258	CallExpression	"FFMIN ( MIN_DELAY , idx - 3 )"		6568069	1					
ANR	6568259	Callee	FFMIN		6568069	0					
ANR	6568260	Identifier	FFMIN		6568069	0					
ANR	6568261	ArgumentList	MIN_DELAY		6568069	1					
ANR	6568262	Argument	MIN_DELAY		6568069	0					
ANR	6568263	Identifier	MIN_DELAY		6568069	0					
ANR	6568264	Argument	idx - 3		6568069	1					
ANR	6568265	AdditiveExpression	idx - 3		6568069	0		-			
ANR	6568266	Identifier	idx		6568069	0					
ANR	6568267	PrimaryExpression	3		6568069	1					
ANR	6568268	Condition	"i <= FFMAX ( MAX_DELAY , idx + 3 )"	61:40:1063:1092	6568069	1	True				
ANR	6568269	RelationalExpression	"i <= FFMAX ( MAX_DELAY , idx + 3 )"		6568069	0		<=			
ANR	6568270	Identifier	i		6568069	0					
ANR	6568271	CallExpression	"FFMAX ( MAX_DELAY , idx + 3 )"		6568069	1					
ANR	6568272	Callee	FFMAX		6568069	0					
ANR	6568273	Identifier	FFMAX		6568069	0					
ANR	6568274	ArgumentList	MAX_DELAY		6568069	1					
ANR	6568275	Argument	MAX_DELAY		6568069	0					
ANR	6568276	Identifier	MAX_DELAY		6568069	0					
ANR	6568277	Argument	idx + 3		6568069	1					
ANR	6568278	AdditiveExpression	idx + 3		6568069	0		+			
ANR	6568279	Identifier	idx		6568069	0					
ANR	6568280	PrimaryExpression	3		6568069	1					
ANR	6568281	PostIncDecOperationExpression	i ++	61:72:1095:1097	6568069	2	True				
ANR	6568282	Identifier	i		6568069	0					
ANR	6568283	IncDec	++		6568069	1					
ANR	6568284	CompoundStatement		55:77:920:920	6568069	3					
ANR	6568285	ForStatement	"for ( n = ACB_SIZE , sum2 = 0 ; n < ACB_SIZE + length ; n ++ )"		6568069	0					
ANR	6568286	ForInit	"n = ACB_SIZE , sum2 = 0 ;"	63:13:1116:1138	6568069	0	True				
ANR	6568287	Expression	"n = ACB_SIZE , sum2 = 0"		6568069	0					
ANR	6568288	AssignmentExpression	n = ACB_SIZE		6568069	0		=			
ANR	6568289	Identifier	n		6568069	0					
ANR	6568290	Identifier	ACB_SIZE		6568069	1					
ANR	6568291	AssignmentExpression	sum2 = 0		6568069	1		=			
ANR	6568292	Identifier	sum2		6568069	0					
ANR	6568293	PrimaryExpression	0		6568069	1					
ANR	6568294	Condition	n < ACB_SIZE + length	63:37:1140:1160	6568069	1	True				
ANR	6568295	RelationalExpression	n < ACB_SIZE + length		6568069	0		<			
ANR	6568296	Identifier	n		6568069	0					
ANR	6568297	AdditiveExpression	ACB_SIZE + length		6568069	1		+			
ANR	6568298	Identifier	ACB_SIZE		6568069	0					
ANR	6568299	Identifier	length		6568069	1					
ANR	6568300	PostIncDecOperationExpression	n ++	63:60:1163:1165	6568069	2	True				
ANR	6568301	Identifier	n		6568069	0					
ANR	6568302	IncDec	++		6568069	1					
ANR	6568303	ExpressionStatement	sum2 += e -> postfilter_residual [ n ] * e -> postfilter_residual [ n - i ]	65:12:1181:1246	6568069	3	True				
ANR	6568304	AssignmentExpression	sum2 += e -> postfilter_residual [ n ] * e -> postfilter_residual [ n - i ]		6568069	0		+=			
ANR	6568305	Identifier	sum2		6568069	0					
ANR	6568306	MultiplicativeExpression	e -> postfilter_residual [ n ] * e -> postfilter_residual [ n - i ]		6568069	1		*			
ANR	6568307	ArrayIndexing	e -> postfilter_residual [ n ]		6568069	0					
ANR	6568308	PtrMemberAccess	e -> postfilter_residual		6568069	0					
ANR	6568309	Identifier	e		6568069	0					
ANR	6568310	Identifier	postfilter_residual		6568069	1					
ANR	6568311	Identifier	n		6568069	1					
ANR	6568312	ArrayIndexing	e -> postfilter_residual [ n - i ]		6568069	1					
ANR	6568313	PtrMemberAccess	e -> postfilter_residual		6568069	0					
ANR	6568314	Identifier	e		6568069	0					
ANR	6568315	Identifier	postfilter_residual		6568069	1					
ANR	6568316	AdditiveExpression	n - i		6568069	1		-			
ANR	6568317	Identifier	n		6568069	0					
ANR	6568318	Identifier	i		6568069	1					
ANR	6568319	IfStatement	if ( sum2 > sum1 )		6568069	1					
ANR	6568320	Condition	sum2 > sum1	67:12:1261:1271	6568069	0	True				
ANR	6568321	RelationalExpression	sum2 > sum1		6568069	0		>			
ANR	6568322	Identifier	sum2		6568069	0					
ANR	6568323	Identifier	sum1		6568069	1					
ANR	6568324	CompoundStatement		61:25:1094:1094	6568069	1					
ANR	6568325	ExpressionStatement	sum1 = sum2	69:12:1289:1300	6568069	0	True				
ANR	6568326	AssignmentExpression	sum1 = sum2		6568069	0		=			
ANR	6568327	Identifier	sum1		6568069	0					
ANR	6568328	Identifier	sum2		6568069	1					
ANR	6568329	ExpressionStatement	best = i	71:12:1315:1323	6568069	1	True				
ANR	6568330	AssignmentExpression	best = i		6568069	0		=			
ANR	6568331	Identifier	best		6568069	0					
ANR	6568332	Identifier	i		6568069	1					
ANR	6568333	ForStatement	"for ( i = ACB_SIZE , sum1 = 0 ; i < ACB_SIZE + length ; i ++ )"		6568069	12					
ANR	6568334	ForInit	"i = ACB_SIZE , sum1 = 0 ;"	79:9:1355:1377	6568069	0	True				
ANR	6568335	Expression	"i = ACB_SIZE , sum1 = 0"		6568069	0					
ANR	6568336	AssignmentExpression	i = ACB_SIZE		6568069	0		=			
ANR	6568337	Identifier	i		6568069	0					
ANR	6568338	Identifier	ACB_SIZE		6568069	1					
ANR	6568339	AssignmentExpression	sum1 = 0		6568069	1		=			
ANR	6568340	Identifier	sum1		6568069	0					
ANR	6568341	PrimaryExpression	0		6568069	1					
ANR	6568342	Condition	i < ACB_SIZE + length	79:33:1379:1399	6568069	1	True				
ANR	6568343	RelationalExpression	i < ACB_SIZE + length		6568069	0		<			
ANR	6568344	Identifier	i		6568069	0					
ANR	6568345	AdditiveExpression	ACB_SIZE + length		6568069	1		+			
ANR	6568346	Identifier	ACB_SIZE		6568069	0					
ANR	6568347	Identifier	length		6568069	1					
ANR	6568348	PostIncDecOperationExpression	i ++	79:56:1402:1404	6568069	2	True				
ANR	6568349	Identifier	i		6568069	0					
ANR	6568350	IncDec	++		6568069	1					
ANR	6568351	ExpressionStatement	sum1 += e -> postfilter_residual [ i - best ] * e -> postfilter_residual [ i - best ]	81:8:1416:1491	6568069	3	True				
ANR	6568352	AssignmentExpression	sum1 += e -> postfilter_residual [ i - best ] * e -> postfilter_residual [ i - best ]		6568069	0		+=			
ANR	6568353	Identifier	sum1		6568069	0					
ANR	6568354	MultiplicativeExpression	e -> postfilter_residual [ i - best ] * e -> postfilter_residual [ i - best ]		6568069	1		*			
ANR	6568355	ArrayIndexing	e -> postfilter_residual [ i - best ]		6568069	0					
ANR	6568356	PtrMemberAccess	e -> postfilter_residual		6568069	0					
ANR	6568357	Identifier	e		6568069	0					
ANR	6568358	Identifier	postfilter_residual		6568069	1					
ANR	6568359	AdditiveExpression	i - best		6568069	1		-			
ANR	6568360	Identifier	i		6568069	0					
ANR	6568361	Identifier	best		6568069	1					
ANR	6568362	ArrayIndexing	e -> postfilter_residual [ i - best ]		6568069	1					
ANR	6568363	PtrMemberAccess	e -> postfilter_residual		6568069	0					
ANR	6568364	Identifier	e		6568069	0					
ANR	6568365	Identifier	postfilter_residual		6568069	1					
ANR	6568366	AdditiveExpression	i - best		6568069	1		-			
ANR	6568367	Identifier	i		6568069	0					
ANR	6568368	Identifier	best		6568069	1					
ANR	6568369	ForStatement	"for ( i = ACB_SIZE , sum2 = 0 ; i < ACB_SIZE + length ; i ++ )"		6568069	13					
ANR	6568370	ForInit	"i = ACB_SIZE , sum2 = 0 ;"	83:9:1503:1525	6568069	0	True				
ANR	6568371	Expression	"i = ACB_SIZE , sum2 = 0"		6568069	0					
ANR	6568372	AssignmentExpression	i = ACB_SIZE		6568069	0		=			
ANR	6568373	Identifier	i		6568069	0					
ANR	6568374	Identifier	ACB_SIZE		6568069	1					
ANR	6568375	AssignmentExpression	sum2 = 0		6568069	1		=			
ANR	6568376	Identifier	sum2		6568069	0					
ANR	6568377	PrimaryExpression	0		6568069	1					
ANR	6568378	Condition	i < ACB_SIZE + length	83:33:1527:1547	6568069	1	True				
ANR	6568379	RelationalExpression	i < ACB_SIZE + length		6568069	0		<			
ANR	6568380	Identifier	i		6568069	0					
ANR	6568381	AdditiveExpression	ACB_SIZE + length		6568069	1		+			
ANR	6568382	Identifier	ACB_SIZE		6568069	0					
ANR	6568383	Identifier	length		6568069	1					
ANR	6568384	PostIncDecOperationExpression	i ++	83:56:1550:1552	6568069	2	True				
ANR	6568385	Identifier	i		6568069	0					
ANR	6568386	IncDec	++		6568069	1					
ANR	6568387	ExpressionStatement	sum2 += e -> postfilter_residual [ i ] * e -> postfilter_residual [ i - best ]	85:8:1564:1632	6568069	3	True				
ANR	6568388	AssignmentExpression	sum2 += e -> postfilter_residual [ i ] * e -> postfilter_residual [ i - best ]		6568069	0		+=			
ANR	6568389	Identifier	sum2		6568069	0					
ANR	6568390	MultiplicativeExpression	e -> postfilter_residual [ i ] * e -> postfilter_residual [ i - best ]		6568069	1		*			
ANR	6568391	ArrayIndexing	e -> postfilter_residual [ i ]		6568069	0					
ANR	6568392	PtrMemberAccess	e -> postfilter_residual		6568069	0					
ANR	6568393	Identifier	e		6568069	0					
ANR	6568394	Identifier	postfilter_residual		6568069	1					
ANR	6568395	Identifier	i		6568069	1					
ANR	6568396	ArrayIndexing	e -> postfilter_residual [ i - best ]		6568069	1					
ANR	6568397	PtrMemberAccess	e -> postfilter_residual		6568069	0					
ANR	6568398	Identifier	e		6568069	0					
ANR	6568399	Identifier	postfilter_residual		6568069	1					
ANR	6568400	AdditiveExpression	i - best		6568069	1		-			
ANR	6568401	Identifier	i		6568069	0					
ANR	6568402	Identifier	best		6568069	1					
ANR	6568403	IfStatement	if ( sum2 * sum1 == 0 || e -> bitrate == RATE_QUANT )		6568069	14					
ANR	6568404	Condition	sum2 * sum1 == 0 || e -> bitrate == RATE_QUANT	89:8:1645:1688	6568069	0	True				
ANR	6568405	OrExpression	sum2 * sum1 == 0 || e -> bitrate == RATE_QUANT		6568069	0		||			
ANR	6568406	EqualityExpression	sum2 * sum1 == 0		6568069	0		==			
ANR	6568407	MultiplicativeExpression	sum2 * sum1		6568069	0		*			
ANR	6568408	Identifier	sum2		6568069	0					
ANR	6568409	Identifier	sum1		6568069	1					
ANR	6568410	PrimaryExpression	0		6568069	1					
ANR	6568411	EqualityExpression	e -> bitrate == RATE_QUANT		6568069	1		==			
ANR	6568412	PtrMemberAccess	e -> bitrate		6568069	0					
ANR	6568413	Identifier	e		6568069	0					
ANR	6568414	Identifier	bitrate		6568069	1					
ANR	6568415	Identifier	RATE_QUANT		6568069	1					
ANR	6568416	CompoundStatement		83:54:1511:1511	6568069	1					
ANR	6568417	ExpressionStatement	"memcpy ( temp , e -> postfilter_residual + ACB_SIZE , length * sizeof ( float ) )"	91:8:1702:1773	6568069	0	True				
ANR	6568418	CallExpression	"memcpy ( temp , e -> postfilter_residual + ACB_SIZE , length * sizeof ( float ) )"		6568069	0					
ANR	6568419	Callee	memcpy		6568069	0					
ANR	6568420	Identifier	memcpy		6568069	0					
ANR	6568421	ArgumentList	temp		6568069	1					
ANR	6568422	Argument	temp		6568069	0					
ANR	6568423	Identifier	temp		6568069	0					
ANR	6568424	Argument	e -> postfilter_residual + ACB_SIZE		6568069	1					
ANR	6568425	AdditiveExpression	e -> postfilter_residual + ACB_SIZE		6568069	0		+			
ANR	6568426	PtrMemberAccess	e -> postfilter_residual		6568069	0					
ANR	6568427	Identifier	e		6568069	0					
ANR	6568428	Identifier	postfilter_residual		6568069	1					
ANR	6568429	Identifier	ACB_SIZE		6568069	1					
ANR	6568430	Argument	length * sizeof ( float )		6568069	2					
ANR	6568431	MultiplicativeExpression	length * sizeof ( float )		6568069	0		*			
ANR	6568432	Identifier	length		6568069	0					
ANR	6568433	SizeofExpression	sizeof ( float )		6568069	1					
ANR	6568434	Sizeof	sizeof		6568069	0					
ANR	6568435	SizeofOperand	float		6568069	1					
ANR	6568436	ElseStatement	else		6568069	0					
ANR	6568437	CompoundStatement		87:11:1607:1607	6568069	0					
ANR	6568438	ExpressionStatement	gamma = sum2 / sum1	95:8:1798:1817	6568069	0	True				
ANR	6568439	AssignmentExpression	gamma = sum2 / sum1		6568069	0		=			
ANR	6568440	Identifier	gamma		6568069	0					
ANR	6568441	MultiplicativeExpression	sum2 / sum1		6568069	1		/			
ANR	6568442	Identifier	sum2		6568069	0					
ANR	6568443	Identifier	sum1		6568069	1					
ANR	6568444	IfStatement	if ( gamma < 0.5 )		6568069	1					
ANR	6568445	Condition	gamma < 0.5	97:12:1832:1842	6568069	0	True				
ANR	6568446	RelationalExpression	gamma < 0.5		6568069	0		<			
ANR	6568447	Identifier	gamma		6568069	0					
ANR	6568448	PrimaryExpression	0.5		6568069	1					
ANR	6568449	ExpressionStatement	"memcpy ( temp , e -> postfilter_residual + ACB_SIZE , length * sizeof ( float ) )"	99:12:1858:1929	6568069	1	True				
ANR	6568450	CallExpression	"memcpy ( temp , e -> postfilter_residual + ACB_SIZE , length * sizeof ( float ) )"		6568069	0					
ANR	6568451	Callee	memcpy		6568069	0					
ANR	6568452	Identifier	memcpy		6568069	0					
ANR	6568453	ArgumentList	temp		6568069	1					
ANR	6568454	Argument	temp		6568069	0					
ANR	6568455	Identifier	temp		6568069	0					
ANR	6568456	Argument	e -> postfilter_residual + ACB_SIZE		6568069	1					
ANR	6568457	AdditiveExpression	e -> postfilter_residual + ACB_SIZE		6568069	0		+			
ANR	6568458	PtrMemberAccess	e -> postfilter_residual		6568069	0					
ANR	6568459	Identifier	e		6568069	0					
ANR	6568460	Identifier	postfilter_residual		6568069	1					
ANR	6568461	Identifier	ACB_SIZE		6568069	1					
ANR	6568462	Argument	length * sizeof ( float )		6568069	2					
ANR	6568463	MultiplicativeExpression	length * sizeof ( float )		6568069	0		*			
ANR	6568464	Identifier	length		6568069	0					
ANR	6568465	SizeofExpression	sizeof ( float )		6568069	1					
ANR	6568466	Sizeof	sizeof		6568069	0					
ANR	6568467	SizeofOperand	float		6568069	1					
ANR	6568468	ElseStatement	else		6568069	0					
ANR	6568469	CompoundStatement		95:13:1765:1765	6568069	0					
ANR	6568470	ExpressionStatement	"gamma = FFMIN ( gamma , 1.0 )"	103:12:1960:1985	6568069	0	True				
ANR	6568471	AssignmentExpression	"gamma = FFMIN ( gamma , 1.0 )"		6568069	0		=			
ANR	6568472	Identifier	gamma		6568069	0					
ANR	6568473	CallExpression	"FFMIN ( gamma , 1.0 )"		6568069	1					
ANR	6568474	Callee	FFMIN		6568069	0					
ANR	6568475	Identifier	FFMIN		6568069	0					
ANR	6568476	ArgumentList	gamma		6568069	1					
ANR	6568477	Argument	gamma		6568069	0					
ANR	6568478	Identifier	gamma		6568069	0					
ANR	6568479	Argument	1.0		6568069	1					
ANR	6568480	PrimaryExpression	1.0		6568069	0					
ANR	6568481	ForStatement	for ( i = 0 ; i < length ; i ++ )		6568069	1					
ANR	6568482	ForInit	i = 0 ;	107:17:2007:2012	6568069	0	True				
ANR	6568483	AssignmentExpression	i = 0		6568069	0		=			
ANR	6568484	Identifier	i		6568069	0					
ANR	6568485	PrimaryExpression	0		6568069	1					
ANR	6568486	Condition	i < length	107:24:2014:2023	6568069	1	True				
ANR	6568487	RelationalExpression	i < length		6568069	0		<			
ANR	6568488	Identifier	i		6568069	0					
ANR	6568489	Identifier	length		6568069	1					
ANR	6568490	PostIncDecOperationExpression	i ++	107:36:2026:2028	6568069	2	True				
ANR	6568491	Identifier	i		6568069	0					
ANR	6568492	IncDec	++		6568069	1					
ANR	6568493	CompoundStatement		101:41:1851:1851	6568069	3					
ANR	6568494	ExpressionStatement	temp [ i ] = e -> postfilter_residual [ ACB_SIZE + i ] + gamma * pfc -> ltgain * e -> postfilter_residual [ ACB_SIZE + i - best ]	109:16:2050:2185	6568069	0	True				
ANR	6568495	AssignmentExpression	temp [ i ] = e -> postfilter_residual [ ACB_SIZE + i ] + gamma * pfc -> ltgain * e -> postfilter_residual [ ACB_SIZE + i - best ]		6568069	0		=			
ANR	6568496	ArrayIndexing	temp [ i ]		6568069	0					
ANR	6568497	Identifier	temp		6568069	0					
ANR	6568498	Identifier	i		6568069	1					
ANR	6568499	AdditiveExpression	e -> postfilter_residual [ ACB_SIZE + i ] + gamma * pfc -> ltgain * e -> postfilter_residual [ ACB_SIZE + i - best ]		6568069	1		+			
ANR	6568500	ArrayIndexing	e -> postfilter_residual [ ACB_SIZE + i ]		6568069	0					
ANR	6568501	PtrMemberAccess	e -> postfilter_residual		6568069	0					
ANR	6568502	Identifier	e		6568069	0					
ANR	6568503	Identifier	postfilter_residual		6568069	1					
ANR	6568504	AdditiveExpression	ACB_SIZE + i		6568069	1		+			
ANR	6568505	Identifier	ACB_SIZE		6568069	0					
ANR	6568506	Identifier	i		6568069	1					
ANR	6568507	MultiplicativeExpression	gamma * pfc -> ltgain * e -> postfilter_residual [ ACB_SIZE + i - best ]		6568069	1		*			
ANR	6568508	Identifier	gamma		6568069	0					
ANR	6568509	MultiplicativeExpression	pfc -> ltgain * e -> postfilter_residual [ ACB_SIZE + i - best ]		6568069	1		*			
ANR	6568510	PtrMemberAccess	pfc -> ltgain		6568069	0					
ANR	6568511	Identifier	pfc		6568069	0					
ANR	6568512	Identifier	ltgain		6568069	1					
ANR	6568513	ArrayIndexing	e -> postfilter_residual [ ACB_SIZE + i - best ]		6568069	1					
ANR	6568514	PtrMemberAccess	e -> postfilter_residual		6568069	0					
ANR	6568515	Identifier	e		6568069	0					
ANR	6568516	Identifier	postfilter_residual		6568069	1					
ANR	6568517	AdditiveExpression	ACB_SIZE + i - best		6568069	1		+			
ANR	6568518	Identifier	ACB_SIZE		6568069	0					
ANR	6568519	AdditiveExpression	i - best		6568069	1		-			
ANR	6568520	Identifier	i		6568069	0					
ANR	6568521	Identifier	best		6568069	1					
ANR	6568522	ExpressionStatement	"memcpy ( scratch , temp , length * sizeof ( float ) )"	121:4:2227:2272	6568069	15	True				
ANR	6568523	CallExpression	"memcpy ( scratch , temp , length * sizeof ( float ) )"		6568069	0					
ANR	6568524	Callee	memcpy		6568069	0					
ANR	6568525	Identifier	memcpy		6568069	0					
ANR	6568526	ArgumentList	scratch		6568069	1					
ANR	6568527	Argument	scratch		6568069	0					
ANR	6568528	Identifier	scratch		6568069	0					
ANR	6568529	Argument	temp		6568069	1					
ANR	6568530	Identifier	temp		6568069	0					
ANR	6568531	Argument	length * sizeof ( float )		6568069	2					
ANR	6568532	MultiplicativeExpression	length * sizeof ( float )		6568069	0		*			
ANR	6568533	Identifier	length		6568069	0					
ANR	6568534	SizeofExpression	sizeof ( float )		6568069	1					
ANR	6568535	Sizeof	sizeof		6568069	0					
ANR	6568536	SizeofOperand	float		6568069	1					
ANR	6568537	ExpressionStatement	"memcpy ( mem , e -> postfilter_iir , FILTER_ORDER * sizeof ( float ) )"	123:4:2279:2339	6568069	16	True				
ANR	6568538	CallExpression	"memcpy ( mem , e -> postfilter_iir , FILTER_ORDER * sizeof ( float ) )"		6568069	0					
ANR	6568539	Callee	memcpy		6568069	0					
ANR	6568540	Identifier	memcpy		6568069	0					
ANR	6568541	ArgumentList	mem		6568069	1					
ANR	6568542	Argument	mem		6568069	0					
ANR	6568543	Identifier	mem		6568069	0					
ANR	6568544	Argument	e -> postfilter_iir		6568069	1					
ANR	6568545	PtrMemberAccess	e -> postfilter_iir		6568069	0					
ANR	6568546	Identifier	e		6568069	0					
ANR	6568547	Identifier	postfilter_iir		6568069	1					
ANR	6568548	Argument	FILTER_ORDER * sizeof ( float )		6568069	2					
ANR	6568549	MultiplicativeExpression	FILTER_ORDER * sizeof ( float )		6568069	0		*			
ANR	6568550	Identifier	FILTER_ORDER		6568069	0					
ANR	6568551	SizeofExpression	sizeof ( float )		6568069	1					
ANR	6568552	Sizeof	sizeof		6568069	0					
ANR	6568553	SizeofOperand	float		6568069	1					
ANR	6568554	ExpressionStatement	"synthesis_filter ( scratch , wcoef2 , mem , length , scratch )"	125:4:2346:2401	6568069	17	True				
ANR	6568555	CallExpression	"synthesis_filter ( scratch , wcoef2 , mem , length , scratch )"		6568069	0					
ANR	6568556	Callee	synthesis_filter		6568069	0					
ANR	6568557	Identifier	synthesis_filter		6568069	0					
ANR	6568558	ArgumentList	scratch		6568069	1					
ANR	6568559	Argument	scratch		6568069	0					
ANR	6568560	Identifier	scratch		6568069	0					
ANR	6568561	Argument	wcoef2		6568069	1					
ANR	6568562	Identifier	wcoef2		6568069	0					
ANR	6568563	Argument	mem		6568069	2					
ANR	6568564	Identifier	mem		6568069	0					
ANR	6568565	Argument	length		6568069	3					
ANR	6568566	Identifier	length		6568069	0					
ANR	6568567	Argument	scratch		6568069	4					
ANR	6568568	Identifier	scratch		6568069	0					
ANR	6568569	ForStatement	"for ( i = 0 , sum1 = 0 , sum2 = 0 ; i < length ; i ++ )"		6568069	18					
ANR	6568570	ForInit	"i = 0 , sum1 = 0 , sum2 = 0 ;"	131:9:2463:2488	6568069	0	True				
ANR	6568571	Expression	"i = 0 , sum1 = 0 , sum2 = 0"		6568069	0					
ANR	6568572	AssignmentExpression	i = 0		6568069	0		=			
ANR	6568573	Identifier	i		6568069	0					
ANR	6568574	PrimaryExpression	0		6568069	1					
ANR	6568575	Expression	"sum1 = 0 , sum2 = 0"		6568069	1					
ANR	6568576	AssignmentExpression	sum1 = 0		6568069	0		=			
ANR	6568577	Identifier	sum1		6568069	0					
ANR	6568578	PrimaryExpression	0		6568069	1					
ANR	6568579	AssignmentExpression	sum2 = 0		6568069	1		=			
ANR	6568580	Identifier	sum2		6568069	0					
ANR	6568581	PrimaryExpression	0		6568069	1					
ANR	6568582	Condition	i < length	131:36:2490:2499	6568069	1	True				
ANR	6568583	RelationalExpression	i < length		6568069	0		<			
ANR	6568584	Identifier	i		6568069	0					
ANR	6568585	Identifier	length		6568069	1					
ANR	6568586	PostIncDecOperationExpression	i ++	131:48:2502:2504	6568069	2	True				
ANR	6568587	Identifier	i		6568069	0					
ANR	6568588	IncDec	++		6568069	1					
ANR	6568589	CompoundStatement		125:53:2327:2327	6568069	3					
ANR	6568590	ExpressionStatement	sum1 += in [ i ] * in [ i ]	133:8:2518:2539	6568069	0	True				
ANR	6568591	AssignmentExpression	sum1 += in [ i ] * in [ i ]		6568069	0		+=			
ANR	6568592	Identifier	sum1		6568069	0					
ANR	6568593	MultiplicativeExpression	in [ i ] * in [ i ]		6568069	1		*			
ANR	6568594	ArrayIndexing	in [ i ]		6568069	0					
ANR	6568595	Identifier	in		6568069	0					
ANR	6568596	Identifier	i		6568069	1					
ANR	6568597	ArrayIndexing	in [ i ]		6568069	1					
ANR	6568598	Identifier	in		6568069	0					
ANR	6568599	Identifier	i		6568069	1					
ANR	6568600	ExpressionStatement	sum2 += scratch [ i ] * scratch [ i ]	135:8:2550:2581	6568069	1	True				
ANR	6568601	AssignmentExpression	sum2 += scratch [ i ] * scratch [ i ]		6568069	0		+=			
ANR	6568602	Identifier	sum2		6568069	0					
ANR	6568603	MultiplicativeExpression	scratch [ i ] * scratch [ i ]		6568069	1		*			
ANR	6568604	ArrayIndexing	scratch [ i ]		6568069	0					
ANR	6568605	Identifier	scratch		6568069	0					
ANR	6568606	Identifier	i		6568069	1					
ANR	6568607	ArrayIndexing	scratch [ i ]		6568069	1					
ANR	6568608	Identifier	scratch		6568069	0					
ANR	6568609	Identifier	i		6568069	1					
ANR	6568610	ExpressionStatement	gain = sum2 ? sqrt ( sum1 / sum2 ) : 1.0	139:4:2595:2632	6568069	19	True				
ANR	6568611	AssignmentExpression	gain = sum2 ? sqrt ( sum1 / sum2 ) : 1.0		6568069	0		=			
ANR	6568612	Identifier	gain		6568069	0					
ANR	6568613	ConditionalExpression	sum2 ? sqrt ( sum1 / sum2 ) : 1.0		6568069	1					
ANR	6568614	Condition	sum2		6568069	0					
ANR	6568615	Identifier	sum2		6568069	0					
ANR	6568616	CallExpression	sqrt ( sum1 / sum2 )		6568069	1					
ANR	6568617	Callee	sqrt		6568069	0					
ANR	6568618	Identifier	sqrt		6568069	0					
ANR	6568619	ArgumentList	sum1 / sum2		6568069	1					
ANR	6568620	Argument	sum1 / sum2		6568069	0					
ANR	6568621	MultiplicativeExpression	sum1 / sum2		6568069	0		/			
ANR	6568622	Identifier	sum1		6568069	0					
ANR	6568623	Identifier	sum2		6568069	1					
ANR	6568624	PrimaryExpression	1.0		6568069	2					
ANR	6568625	ForStatement	for ( i = 0 ; i < length ; i ++ )		6568069	20					
ANR	6568626	ForInit	i = 0 ;	143:9:2646:2651	6568069	0	True				
ANR	6568627	AssignmentExpression	i = 0		6568069	0		=			
ANR	6568628	Identifier	i		6568069	0					
ANR	6568629	PrimaryExpression	0		6568069	1					
ANR	6568630	Condition	i < length	143:16:2653:2662	6568069	1	True				
ANR	6568631	RelationalExpression	i < length		6568069	0		<			
ANR	6568632	Identifier	i		6568069	0					
ANR	6568633	Identifier	length		6568069	1					
ANR	6568634	PostIncDecOperationExpression	i ++	143:28:2665:2667	6568069	2	True				
ANR	6568635	Identifier	i		6568069	0					
ANR	6568636	IncDec	++		6568069	1					
ANR	6568637	ExpressionStatement	temp [ i ] *= gain	145:8:2679:2694	6568069	3	True				
ANR	6568638	AssignmentExpression	temp [ i ] *= gain		6568069	0		*=			
ANR	6568639	ArrayIndexing	temp [ i ]		6568069	0					
ANR	6568640	Identifier	temp		6568069	0					
ANR	6568641	Identifier	i		6568069	1					
ANR	6568642	Identifier	gain		6568069	1					
ANR	6568643	ExpressionStatement	"synthesis_filter ( temp , wcoef2 , e -> postfilter_iir , length , out )"	151:4:2736:2798	6568069	21	True				
ANR	6568644	CallExpression	"synthesis_filter ( temp , wcoef2 , e -> postfilter_iir , length , out )"		6568069	0					
ANR	6568645	Callee	synthesis_filter		6568069	0					
ANR	6568646	Identifier	synthesis_filter		6568069	0					
ANR	6568647	ArgumentList	temp		6568069	1					
ANR	6568648	Argument	temp		6568069	0					
ANR	6568649	Identifier	temp		6568069	0					
ANR	6568650	Argument	wcoef2		6568069	1					
ANR	6568651	Identifier	wcoef2		6568069	0					
ANR	6568652	Argument	e -> postfilter_iir		6568069	2					
ANR	6568653	PtrMemberAccess	e -> postfilter_iir		6568069	0					
ANR	6568654	Identifier	e		6568069	0					
ANR	6568655	Identifier	postfilter_iir		6568069	1					
ANR	6568656	Argument	length		6568069	3					
ANR	6568657	Identifier	length		6568069	0					
ANR	6568658	Argument	out		6568069	4					
ANR	6568659	Identifier	out		6568069	0					
ANR	6568660	ExpressionStatement	"memcpy ( e -> postfilter_residual , e -> postfilter_residual + length , ACB_SIZE * sizeof ( float ) )"	155:4:2807:2908	6568069	22	True				
ANR	6568661	CallExpression	"memcpy ( e -> postfilter_residual , e -> postfilter_residual + length , ACB_SIZE * sizeof ( float ) )"		6568069	0					
ANR	6568662	Callee	memcpy		6568069	0					
ANR	6568663	Identifier	memcpy		6568069	0					
ANR	6568664	ArgumentList	e -> postfilter_residual		6568069	1					
ANR	6568665	Argument	e -> postfilter_residual		6568069	0					
ANR	6568666	PtrMemberAccess	e -> postfilter_residual		6568069	0					
ANR	6568667	Identifier	e		6568069	0					
ANR	6568668	Identifier	postfilter_residual		6568069	1					
ANR	6568669	Argument	e -> postfilter_residual + length		6568069	1					
ANR	6568670	AdditiveExpression	e -> postfilter_residual + length		6568069	0		+			
ANR	6568671	PtrMemberAccess	e -> postfilter_residual		6568069	0					
ANR	6568672	Identifier	e		6568069	0					
ANR	6568673	Identifier	postfilter_residual		6568069	1					
ANR	6568674	Identifier	length		6568069	1					
ANR	6568675	Argument	ACB_SIZE * sizeof ( float )		6568069	2					
ANR	6568676	MultiplicativeExpression	ACB_SIZE * sizeof ( float )		6568069	0		*			
ANR	6568677	Identifier	ACB_SIZE		6568069	0					
ANR	6568678	SizeofExpression	sizeof ( float )		6568069	1					
ANR	6568679	Sizeof	sizeof		6568069	0					
ANR	6568680	SizeofOperand	float		6568069	1					
ANR	6568681	ReturnType	static void		6568069	1					
ANR	6568682	Identifier	postfilter		6568069	2					
ANR	6568683	ParameterList	"EVRCContext * e , float * in , const float * coeff , float * out , int idx , const struct PfCoeff * pfc , int length"		6568069	3					
ANR	6568684	Parameter	EVRCContext * e	1:23:23:36	6568069	0	True				
ANR	6568685	ParameterType	EVRCContext *		6568069	0					
ANR	6568686	Identifier	e		6568069	1					
ANR	6568687	Parameter	float * in	1:39:39:47	6568069	1	True				
ANR	6568688	ParameterType	float *		6568069	0					
ANR	6568689	Identifier	in		6568069	1					
ANR	6568690	Parameter	const float * coeff	1:50:50:67	6568069	2	True				
ANR	6568691	ParameterType	const float *		6568069	0					
ANR	6568692	Identifier	coeff		6568069	1					
ANR	6568693	Parameter	float * out	3:23:94:103	6568069	3	True				
ANR	6568694	ParameterType	float *		6568069	0					
ANR	6568695	Identifier	out		6568069	1					
ANR	6568696	Parameter	int idx	3:35:106:112	6568069	4	True				
ANR	6568697	ParameterType	int		6568069	0					
ANR	6568698	Identifier	idx		6568069	1					
ANR	6568699	Parameter	const struct PfCoeff * pfc	3:44:115:139	6568069	5	True				
ANR	6568700	ParameterType	const struct PfCoeff *		6568069	0					
ANR	6568701	Identifier	pfc		6568069	1					
ANR	6568702	Parameter	int length	5:23:166:175	6568069	6	True				
ANR	6568703	ParameterType	int		6568069	0					
ANR	6568704	Identifier	length		6568069	1					
ANR	6568705	CFGEntryNode	ENTRY		6568069		True				
ANR	6568706	CFGExitNode	EXIT		6568069		True				
ANR	6568707	Symbol	* best		6568069						
ANR	6568708	Symbol	* in		6568069						
ANR	6568709	Symbol	MAX_DELAY		6568069						
ANR	6568710	Symbol	FFMIN		6568069						
ANR	6568711	Symbol	best		6568069						
ANR	6568712	Symbol	tilt		6568069						
ANR	6568713	Symbol	out		6568069						
ANR	6568714	Symbol	gain		6568069						
ANR	6568715	Symbol	pfc -> ltgain		6568069						
ANR	6568716	Symbol	mem		6568069						
ANR	6568717	Symbol	RATE_QUANT		6568069						
ANR	6568718	Symbol	sqrt		6568069						
ANR	6568719	Symbol	* pfc		6568069						
ANR	6568720	Symbol	wcoef2		6568069						
ANR	6568721	Symbol	wcoef1		6568069						
ANR	6568722	Symbol	coeff		6568069						
ANR	6568723	Symbol	e -> postfilter_residual		6568069						
ANR	6568724	Symbol	temp		6568069						
ANR	6568725	Symbol	* e -> postfilter_residual		6568069						
ANR	6568726	Symbol	e		6568069						
ANR	6568727	Symbol	in		6568069						
ANR	6568728	Symbol	* * e		6568069						
ANR	6568729	Symbol	length		6568069						
ANR	6568730	Symbol	i		6568069						
ANR	6568731	Symbol	scratch		6568069						
ANR	6568732	Symbol	pfc		6568069						
ANR	6568733	Symbol	e -> bitrate		6568069						
ANR	6568734	Symbol	n		6568069						
ANR	6568735	Symbol	* temp		6568069						
ANR	6568736	Symbol	* e		6568069						
ANR	6568737	Symbol	ACB_SIZE		6568069						
ANR	6568738	Symbol	sum1		6568069						
ANR	6568739	Symbol	sum2		6568069						
ANR	6568740	Symbol	pfc -> tilt		6568069						
ANR	6568741	Symbol	* i		6568069						
ANR	6568742	Symbol	* scratch		6568069						
ANR	6568743	Symbol	e -> postfilter_iir		6568069						
ANR	6568744	Symbol	e -> last		6568069						
ANR	6568745	Symbol	e -> postfilter_fir		6568069						
ANR	6568746	Symbol	* n		6568069						
ANR	6568747	Symbol	MIN_DELAY		6568069						
ANR	6568748	Symbol	idx		6568069						
ANR	6568749	Symbol	pfc -> p2		6568069						
ANR	6568750	Symbol	gamma		6568069						
ANR	6568751	Symbol	pfc -> p1		6568069						
ANR	6568752	Symbol	FFMAX		6568069						
ANR	6568753	Symbol	* ACB_SIZE		6568069						
ANR	6568754	Symbol	FILTER_ORDER		6568069						
