command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4845359	File	/home/p4ultr4n/workplace/ReVeal/raw_code/img_read_header_01_0.c								
ANR	4845360	Function	img_read_header	1:0:0:4740							
ANR	4845361	FunctionDef	img_read_header (AVFormatContext * s1)		4845360	0					
ANR	4845362	CompoundStatement		3:0:49:4740	4845360	0					
ANR	4845363	IdentifierDeclStatement	VideoDemuxData * s = s1 -> priv_data ;	5:4:56:89	4845360	0	True				
ANR	4845364	IdentifierDecl	* s = s1 -> priv_data		4845360	0					
ANR	4845365	IdentifierDeclType	VideoDemuxData *		4845360	0					
ANR	4845366	Identifier	s		4845360	1					
ANR	4845367	AssignmentExpression	* s = s1 -> priv_data		4845360	2		=			
ANR	4845368	Identifier	s		4845360	0					
ANR	4845369	PtrMemberAccess	s1 -> priv_data		4845360	1					
ANR	4845370	Identifier	s1		4845360	0					
ANR	4845371	Identifier	priv_data		4845360	1					
ANR	4845372	IdentifierDeclStatement	"int first_index , last_index ;"	7:4:96:123	4845360	1	True				
ANR	4845373	IdentifierDecl	first_index		4845360	0					
ANR	4845374	IdentifierDeclType	int		4845360	0					
ANR	4845375	Identifier	first_index		4845360	1					
ANR	4845376	IdentifierDecl	last_index		4845360	1					
ANR	4845377	IdentifierDeclType	int		4845360	0					
ANR	4845378	Identifier	last_index		4845360	1					
ANR	4845379	IdentifierDeclStatement	AVStream * st ;	9:4:130:142	4845360	2	True				
ANR	4845380	IdentifierDecl	* st		4845360	0					
ANR	4845381	IdentifierDeclType	AVStream *		4845360	0					
ANR	4845382	Identifier	st		4845360	1					
ANR	4845383	IdentifierDeclStatement	enum AVPixelFormat pix_fmt = AV_PIX_FMT_NONE ;	11:4:149:193	4845360	3	True				
ANR	4845384	IdentifierDecl	pix_fmt = AV_PIX_FMT_NONE		4845360	0					
ANR	4845385	IdentifierDeclType	enum AVPixelFormat		4845360	0					
ANR	4845386	Identifier	pix_fmt		4845360	1					
ANR	4845387	AssignmentExpression	pix_fmt = AV_PIX_FMT_NONE		4845360	2		=			
ANR	4845388	Identifier	AV_PIX_FMT_NONE		4845360	0					
ANR	4845389	Identifier	AV_PIX_FMT_NONE		4845360	1					
ANR	4845390	ExpressionStatement	s1 -> ctx_flags |= AVFMTCTX_NOHEADER	15:4:202:236	4845360	4	True				
ANR	4845391	AssignmentExpression	s1 -> ctx_flags |= AVFMTCTX_NOHEADER		4845360	0		|=			
ANR	4845392	PtrMemberAccess	s1 -> ctx_flags		4845360	0					
ANR	4845393	Identifier	s1		4845360	0					
ANR	4845394	Identifier	ctx_flags		4845360	1					
ANR	4845395	Identifier	AVFMTCTX_NOHEADER		4845360	1					
ANR	4845396	ExpressionStatement	"st = avformat_new_stream ( s1 , NULL )"	19:4:245:279	4845360	5	True				
ANR	4845397	AssignmentExpression	"st = avformat_new_stream ( s1 , NULL )"		4845360	0		=			
ANR	4845398	Identifier	st		4845360	0					
ANR	4845399	CallExpression	"avformat_new_stream ( s1 , NULL )"		4845360	1					
ANR	4845400	Callee	avformat_new_stream		4845360	0					
ANR	4845401	Identifier	avformat_new_stream		4845360	0					
ANR	4845402	ArgumentList	s1		4845360	1					
ANR	4845403	Argument	s1		4845360	0					
ANR	4845404	Identifier	s1		4845360	0					
ANR	4845405	Argument	NULL		4845360	1					
ANR	4845406	Identifier	NULL		4845360	0					
ANR	4845407	IfStatement	if ( ! st )		4845360	6					
ANR	4845408	Condition	! st	21:8:290:292	4845360	0	True				
ANR	4845409	UnaryOperationExpression	! st		4845360	0					
ANR	4845410	UnaryOperator	!		4845360	0					
ANR	4845411	Identifier	st		4845360	1					
ANR	4845412	CompoundStatement		19:13:245:245	4845360	1					
ANR	4845413	ReturnStatement	return AVERROR ( ENOMEM ) ;	23:8:306:328	4845360	0	True				
ANR	4845414	CallExpression	AVERROR ( ENOMEM )		4845360	0					
ANR	4845415	Callee	AVERROR		4845360	0					
ANR	4845416	Identifier	AVERROR		4845360	0					
ANR	4845417	ArgumentList	ENOMEM		4845360	1					
ANR	4845418	Argument	ENOMEM		4845360	0					
ANR	4845419	Identifier	ENOMEM		4845360	0					
ANR	4845420	IfStatement	if ( s -> pixel_format && ( pix_fmt = av_get_pix_fmt ( s -> pixel_format ) ) == AV_PIX_FMT_NONE )		4845360	7					
ANR	4845421	Condition	s -> pixel_format && ( pix_fmt = av_get_pix_fmt ( s -> pixel_format ) ) == AV_PIX_FMT_NONE	29:8:348:437	4845360	0	True				
ANR	4845422	AndExpression	s -> pixel_format && ( pix_fmt = av_get_pix_fmt ( s -> pixel_format ) ) == AV_PIX_FMT_NONE		4845360	0		&&			
ANR	4845423	PtrMemberAccess	s -> pixel_format		4845360	0					
ANR	4845424	Identifier	s		4845360	0					
ANR	4845425	Identifier	pixel_format		4845360	1					
ANR	4845426	EqualityExpression	( pix_fmt = av_get_pix_fmt ( s -> pixel_format ) ) == AV_PIX_FMT_NONE		4845360	1		==			
ANR	4845427	AssignmentExpression	pix_fmt = av_get_pix_fmt ( s -> pixel_format )		4845360	0		=			
ANR	4845428	Identifier	pix_fmt		4845360	0					
ANR	4845429	CallExpression	av_get_pix_fmt ( s -> pixel_format )		4845360	1					
ANR	4845430	Callee	av_get_pix_fmt		4845360	0					
ANR	4845431	Identifier	av_get_pix_fmt		4845360	0					
ANR	4845432	ArgumentList	s -> pixel_format		4845360	1					
ANR	4845433	Argument	s -> pixel_format		4845360	0					
ANR	4845434	PtrMemberAccess	s -> pixel_format		4845360	0					
ANR	4845435	Identifier	s		4845360	0					
ANR	4845436	Identifier	pixel_format		4845360	1					
ANR	4845437	Identifier	AV_PIX_FMT_NONE		4845360	1					
ANR	4845438	CompoundStatement		29:72:390:390	4845360	1					
ANR	4845439	ExpressionStatement	"av_log ( s1 , AV_LOG_ERROR , ""No such pixel format: %s.\\n"" , s -> pixel_format )"	33:8:451:539	4845360	0	True				
ANR	4845440	CallExpression	"av_log ( s1 , AV_LOG_ERROR , ""No such pixel format: %s.\\n"" , s -> pixel_format )"		4845360	0					
ANR	4845441	Callee	av_log		4845360	0					
ANR	4845442	Identifier	av_log		4845360	0					
ANR	4845443	ArgumentList	s1		4845360	1					
ANR	4845444	Argument	s1		4845360	0					
ANR	4845445	Identifier	s1		4845360	0					
ANR	4845446	Argument	AV_LOG_ERROR		4845360	1					
ANR	4845447	Identifier	AV_LOG_ERROR		4845360	0					
ANR	4845448	Argument	"""No such pixel format: %s.\\n"""		4845360	2					
ANR	4845449	PrimaryExpression	"""No such pixel format: %s.\\n"""		4845360	0					
ANR	4845450	Argument	s -> pixel_format		4845360	3					
ANR	4845451	PtrMemberAccess	s -> pixel_format		4845360	0					
ANR	4845452	Identifier	s		4845360	0					
ANR	4845453	Identifier	pixel_format		4845360	1					
ANR	4845454	ReturnStatement	return AVERROR ( EINVAL ) ;	37:8:550:572	4845360	1	True				
ANR	4845455	CallExpression	AVERROR ( EINVAL )		4845360	0					
ANR	4845456	Callee	AVERROR		4845360	0					
ANR	4845457	Identifier	AVERROR		4845360	0					
ANR	4845458	ArgumentList	EINVAL		4845360	1					
ANR	4845459	Argument	EINVAL		4845360	0					
ANR	4845460	Identifier	EINVAL		4845360	0					
ANR	4845461	ExpressionStatement	"av_strlcpy ( s -> path , s1 -> filename , sizeof ( s -> path ) )"	43:4:588:638	4845360	8	True				
ANR	4845462	CallExpression	"av_strlcpy ( s -> path , s1 -> filename , sizeof ( s -> path ) )"		4845360	0					
ANR	4845463	Callee	av_strlcpy		4845360	0					
ANR	4845464	Identifier	av_strlcpy		4845360	0					
ANR	4845465	ArgumentList	s -> path		4845360	1					
ANR	4845466	Argument	s -> path		4845360	0					
ANR	4845467	PtrMemberAccess	s -> path		4845360	0					
ANR	4845468	Identifier	s		4845360	0					
ANR	4845469	Identifier	path		4845360	1					
ANR	4845470	Argument	s1 -> filename		4845360	1					
ANR	4845471	PtrMemberAccess	s1 -> filename		4845360	0					
ANR	4845472	Identifier	s1		4845360	0					
ANR	4845473	Identifier	filename		4845360	1					
ANR	4845474	Argument	sizeof ( s -> path )		4845360	2					
ANR	4845475	SizeofExpression	sizeof ( s -> path )		4845360	0					
ANR	4845476	Sizeof	sizeof		4845360	0					
ANR	4845477	PtrMemberAccess	s -> path		4845360	1					
ANR	4845478	Identifier	s		4845360	0					
ANR	4845479	Identifier	path		4845360	1					
ANR	4845480	ExpressionStatement	s -> img_number = 0	45:4:645:662	4845360	9	True				
ANR	4845481	AssignmentExpression	s -> img_number = 0		4845360	0		=			
ANR	4845482	PtrMemberAccess	s -> img_number		4845360	0					
ANR	4845483	Identifier	s		4845360	0					
ANR	4845484	Identifier	img_number		4845360	1					
ANR	4845485	PrimaryExpression	0		4845360	1					
ANR	4845486	ExpressionStatement	s -> img_count = 0	47:4:669:686	4845360	10	True				
ANR	4845487	AssignmentExpression	s -> img_count = 0		4845360	0		=			
ANR	4845488	PtrMemberAccess	s -> img_count		4845360	0					
ANR	4845489	Identifier	s		4845360	0					
ANR	4845490	Identifier	img_count		4845360	1					
ANR	4845491	PrimaryExpression	0		4845360	1					
ANR	4845492	IfStatement	if ( s1 -> iformat -> flags & AVFMT_NOFILE )		4845360	11					
ANR	4845493	Condition	s1 -> iformat -> flags & AVFMT_NOFILE	53:8:722:754	4845360	0	True				
ANR	4845494	BitAndExpression	s1 -> iformat -> flags & AVFMT_NOFILE		4845360	0		&			
ANR	4845495	PtrMemberAccess	s1 -> iformat -> flags		4845360	0					
ANR	4845496	PtrMemberAccess	s1 -> iformat		4845360	0					
ANR	4845497	Identifier	s1		4845360	0					
ANR	4845498	Identifier	iformat		4845360	1					
ANR	4845499	Identifier	flags		4845360	1					
ANR	4845500	Identifier	AVFMT_NOFILE		4845360	1					
ANR	4845501	ExpressionStatement	s -> is_pipe = 0	55:8:766:780	4845360	1	True				
ANR	4845502	AssignmentExpression	s -> is_pipe = 0		4845360	0		=			
ANR	4845503	PtrMemberAccess	s -> is_pipe		4845360	0					
ANR	4845504	Identifier	s		4845360	0					
ANR	4845505	Identifier	is_pipe		4845360	1					
ANR	4845506	PrimaryExpression	0		4845360	1					
ANR	4845507	ElseStatement	else		4845360	0					
ANR	4845508	CompoundStatement		55:9:742:742	4845360	0					
ANR	4845509	ExpressionStatement	s -> is_pipe = 1	59:8:803:823	4845360	0	True				
ANR	4845510	AssignmentExpression	s -> is_pipe = 1		4845360	0		=			
ANR	4845511	PtrMemberAccess	s -> is_pipe		4845360	0					
ANR	4845512	Identifier	s		4845360	0					
ANR	4845513	Identifier	is_pipe		4845360	1					
ANR	4845514	PrimaryExpression	1		4845360	1					
ANR	4845515	ExpressionStatement	st -> need_parsing = AVSTREAM_PARSE_FULL	61:8:834:872	4845360	1	True				
ANR	4845516	AssignmentExpression	st -> need_parsing = AVSTREAM_PARSE_FULL		4845360	0		=			
ANR	4845517	PtrMemberAccess	st -> need_parsing		4845360	0					
ANR	4845518	Identifier	st		4845360	0					
ANR	4845519	Identifier	need_parsing		4845360	1					
ANR	4845520	Identifier	AVSTREAM_PARSE_FULL		4845360	1					
ANR	4845521	IfStatement	if ( s -> ts_from_file )		4845360	12					
ANR	4845522	Condition	s -> ts_from_file	67:8:892:906	4845360	0	True				
ANR	4845523	PtrMemberAccess	s -> ts_from_file		4845360	0					
ANR	4845524	Identifier	s		4845360	0					
ANR	4845525	Identifier	ts_from_file		4845360	1					
ANR	4845526	ExpressionStatement	"avpriv_set_pts_info ( st , 60 , 1 , 1 )"	69:8:918:951	4845360	1	True				
ANR	4845527	CallExpression	"avpriv_set_pts_info ( st , 60 , 1 , 1 )"		4845360	0					
ANR	4845528	Callee	avpriv_set_pts_info		4845360	0					
ANR	4845529	Identifier	avpriv_set_pts_info		4845360	0					
ANR	4845530	ArgumentList	st		4845360	1					
ANR	4845531	Argument	st		4845360	0					
ANR	4845532	Identifier	st		4845360	0					
ANR	4845533	Argument	60		4845360	1					
ANR	4845534	PrimaryExpression	60		4845360	0					
ANR	4845535	Argument	1		4845360	2					
ANR	4845536	PrimaryExpression	1		4845360	0					
ANR	4845537	Argument	1		4845360	3					
ANR	4845538	PrimaryExpression	1		4845360	0					
ANR	4845539	ElseStatement	else		4845360	0					
ANR	4845540	ExpressionStatement	"avpriv_set_pts_info ( st , 60 , s -> framerate . den , s -> framerate . num )"	73:8:972:1035	4845360	0	True				
ANR	4845541	CallExpression	"avpriv_set_pts_info ( st , 60 , s -> framerate . den , s -> framerate . num )"		4845360	0					
ANR	4845542	Callee	avpriv_set_pts_info		4845360	0					
ANR	4845543	Identifier	avpriv_set_pts_info		4845360	0					
ANR	4845544	ArgumentList	st		4845360	1					
ANR	4845545	Argument	st		4845360	0					
ANR	4845546	Identifier	st		4845360	0					
ANR	4845547	Argument	60		4845360	1					
ANR	4845548	PrimaryExpression	60		4845360	0					
ANR	4845549	Argument	s -> framerate . den		4845360	2					
ANR	4845550	MemberAccess	s -> framerate . den		4845360	0					
ANR	4845551	PtrMemberAccess	s -> framerate		4845360	0					
ANR	4845552	Identifier	s		4845360	0					
ANR	4845553	Identifier	framerate		4845360	1					
ANR	4845554	Identifier	den		4845360	1					
ANR	4845555	Argument	s -> framerate . num		4845360	3					
ANR	4845556	MemberAccess	s -> framerate . num		4845360	0					
ANR	4845557	PtrMemberAccess	s -> framerate		4845360	0					
ANR	4845558	Identifier	s		4845360	0					
ANR	4845559	Identifier	framerate		4845360	1					
ANR	4845560	Identifier	num		4845360	1					
ANR	4845561	IfStatement	if ( s -> width && s -> height )		4845360	13					
ANR	4845562	Condition	s -> width && s -> height	77:8:1048:1068	4845360	0	True				
ANR	4845563	AndExpression	s -> width && s -> height		4845360	0		&&			
ANR	4845564	PtrMemberAccess	s -> width		4845360	0					
ANR	4845565	Identifier	s		4845360	0					
ANR	4845566	Identifier	width		4845360	1					
ANR	4845567	PtrMemberAccess	s -> height		4845360	1					
ANR	4845568	Identifier	s		4845360	0					
ANR	4845569	Identifier	height		4845360	1					
ANR	4845570	CompoundStatement		75:31:1021:1021	4845360	1					
ANR	4845571	ExpressionStatement	st -> codec -> width = s -> width	79:8:1082:1110	4845360	0	True				
ANR	4845572	AssignmentExpression	st -> codec -> width = s -> width		4845360	0		=			
ANR	4845573	PtrMemberAccess	st -> codec -> width		4845360	0					
ANR	4845574	PtrMemberAccess	st -> codec		4845360	0					
ANR	4845575	Identifier	st		4845360	0					
ANR	4845576	Identifier	codec		4845360	1					
ANR	4845577	Identifier	width		4845360	1					
ANR	4845578	PtrMemberAccess	s -> width		4845360	1					
ANR	4845579	Identifier	s		4845360	0					
ANR	4845580	Identifier	width		4845360	1					
ANR	4845581	ExpressionStatement	st -> codec -> height = s -> height	81:8:1121:1150	4845360	1	True				
ANR	4845582	AssignmentExpression	st -> codec -> height = s -> height		4845360	0		=			
ANR	4845583	PtrMemberAccess	st -> codec -> height		4845360	0					
ANR	4845584	PtrMemberAccess	st -> codec		4845360	0					
ANR	4845585	Identifier	st		4845360	0					
ANR	4845586	Identifier	codec		4845360	1					
ANR	4845587	Identifier	height		4845360	1					
ANR	4845588	PtrMemberAccess	s -> height		4845360	1					
ANR	4845589	Identifier	s		4845360	0					
ANR	4845590	Identifier	height		4845360	1					
ANR	4845591	IfStatement	if ( ! s -> is_pipe )		4845360	14					
ANR	4845592	Condition	! s -> is_pipe	87:8:1170:1180	4845360	0	True				
ANR	4845593	UnaryOperationExpression	! s -> is_pipe		4845360	0					
ANR	4845594	UnaryOperator	!		4845360	0					
ANR	4845595	PtrMemberAccess	s -> is_pipe		4845360	1					
ANR	4845596	Identifier	s		4845360	0					
ANR	4845597	Identifier	is_pipe		4845360	1					
ANR	4845598	CompoundStatement		85:21:1133:1133	4845360	1					
ANR	4845599	IfStatement	if ( s -> pattern_type == PT_GLOB_SEQUENCE )		4845360	0					
ANR	4845600	Condition	s -> pattern_type == PT_GLOB_SEQUENCE	89:12:1198:1232	4845360	0	True				
ANR	4845601	EqualityExpression	s -> pattern_type == PT_GLOB_SEQUENCE		4845360	0		==			
ANR	4845602	PtrMemberAccess	s -> pattern_type		4845360	0					
ANR	4845603	Identifier	s		4845360	0					
ANR	4845604	Identifier	pattern_type		4845360	1					
ANR	4845605	Identifier	PT_GLOB_SEQUENCE		4845360	1					
ANR	4845606	CompoundStatement		87:49:1185:1185	4845360	1					
ANR	4845607	ExpressionStatement	s -> use_glob = is_glob ( s -> path )	91:8:1246:1276	4845360	0	True				
ANR	4845608	AssignmentExpression	s -> use_glob = is_glob ( s -> path )		4845360	0		=			
ANR	4845609	PtrMemberAccess	s -> use_glob		4845360	0					
ANR	4845610	Identifier	s		4845360	0					
ANR	4845611	Identifier	use_glob		4845360	1					
ANR	4845612	CallExpression	is_glob ( s -> path )		4845360	1					
ANR	4845613	Callee	is_glob		4845360	0					
ANR	4845614	Identifier	is_glob		4845360	0					
ANR	4845615	ArgumentList	s -> path		4845360	1					
ANR	4845616	Argument	s -> path		4845360	0					
ANR	4845617	PtrMemberAccess	s -> path		4845360	0					
ANR	4845618	Identifier	s		4845360	0					
ANR	4845619	Identifier	path		4845360	1					
ANR	4845620	IfStatement	if ( s -> use_glob )		4845360	1					
ANR	4845621	Condition	s -> use_glob	93:12:1291:1301	4845360	0	True				
ANR	4845622	PtrMemberAccess	s -> use_glob		4845360	0					
ANR	4845623	Identifier	s		4845360	0					
ANR	4845624	Identifier	use_glob		4845360	1					
ANR	4845625	CompoundStatement		95:12:1311:1319	4845360	1					
ANR	4845626	IdentifierDeclStatement	"char * p = s -> path , * q , * dup ;"	95:12:1319:1346	4845360	0	True				
ANR	4845627	IdentifierDecl	* p = s -> path		4845360	0					
ANR	4845628	IdentifierDeclType	char *		4845360	0					
ANR	4845629	Identifier	p		4845360	1					
ANR	4845630	AssignmentExpression	* p = s -> path		4845360	2		=			
ANR	4845631	Identifier	p		4845360	0					
ANR	4845632	PtrMemberAccess	s -> path		4845360	1					
ANR	4845633	Identifier	s		4845360	0					
ANR	4845634	Identifier	path		4845360	1					
ANR	4845635	IdentifierDecl	* q		4845360	1					
ANR	4845636	IdentifierDeclType	char *		4845360	0					
ANR	4845637	Identifier	q		4845360	1					
ANR	4845638	IdentifierDecl	* dup		4845360	2					
ANR	4845639	IdentifierDeclType	char *		4845360	0					
ANR	4845640	Identifier	dup		4845360	1					
ANR	4845641	IdentifierDeclStatement	int gerr ;	97:12:1361:1369	4845360	1	True				
ANR	4845642	IdentifierDecl	gerr		4845360	0					
ANR	4845643	IdentifierDeclType	int		4845360	0					
ANR	4845644	Identifier	gerr		4845360	1					
ANR	4845645	Statement	av_log	101:12:1386:1391	4845360	2	True				
ANR	4845646	Statement	(	101:18:1392:1392	4845360	3	True				
ANR	4845647	Statement	s1	101:19:1393:1394	4845360	4	True				
ANR	4845648	Statement	","	101:21:1395:1395	4845360	5	True				
ANR	4845649	Statement	AV_LOG_WARNING	101:23:1397:1410	4845360	6	True				
ANR	4845650	Statement	","	101:37:1411:1411	4845360	7	True				
ANR	4845651	Statement	"""Pattern type 'glob_sequence' is deprecated: """	101:39:1413:1458	4845360	8	True				
ANR	4845652	Statement	"""use pattern_type 'glob' instead\\n"""	103:19:1480:1514	4845360	9	True				
ANR	4845653	Statement	)	103:54:1515:1515	4845360	10	True				
ANR	4845654	ExpressionStatement		103:55:1516:1516	4845360	11	True				
ANR	4845655	ExpressionStatement	dup = q = av_strdup ( p )	107:12:1546:1568	4845360	12	True				
ANR	4845656	AssignmentExpression	dup = q = av_strdup ( p )		4845360	0		=			
ANR	4845657	Identifier	dup		4845360	0					
ANR	4845658	AssignmentExpression	q = av_strdup ( p )		4845360	1		=			
ANR	4845659	Identifier	q		4845360	0					
ANR	4845660	CallExpression	av_strdup ( p )		4845360	1					
ANR	4845661	Callee	av_strdup		4845360	0					
ANR	4845662	Identifier	av_strdup		4845360	0					
ANR	4845663	ArgumentList	p		4845360	1					
ANR	4845664	Argument	p		4845360	0					
ANR	4845665	Identifier	p		4845360	0					
ANR	4845666	WhileStatement	while ( * q )		4845360	13					
ANR	4845667	Condition	* q	109:19:1590:1591	4845360	0	True				
ANR	4845668	UnaryOperationExpression	* q		4845360	0					
ANR	4845669	UnaryOperator	*		4845360	0					
ANR	4845670	Identifier	q		4845360	1					
ANR	4845671	CompoundStatement		107:23:1544:1544	4845360	1					
ANR	4845672	IfStatement	if ( ( p - s -> path ) >= ( sizeof ( s -> path ) - 2 ) )		4845360	0					
ANR	4845673	Condition	( p - s -> path ) >= ( sizeof ( s -> path ) - 2 )	113:20:1693:1730	4845360	0	True				
ANR	4845674	RelationalExpression	( p - s -> path ) >= ( sizeof ( s -> path ) - 2 )		4845360	0		>=			
ANR	4845675	AdditiveExpression	p - s -> path		4845360	0		-			
ANR	4845676	Identifier	p		4845360	0					
ANR	4845677	PtrMemberAccess	s -> path		4845360	1					
ANR	4845678	Identifier	s		4845360	0					
ANR	4845679	Identifier	path		4845360	1					
ANR	4845680	AdditiveExpression	sizeof ( s -> path ) - 2		4845360	1		-			
ANR	4845681	SizeofExpression	sizeof ( s -> path )		4845360	0					
ANR	4845682	Sizeof	sizeof		4845360	0					
ANR	4845683	PtrMemberAccess	s -> path		4845360	1					
ANR	4845684	Identifier	s		4845360	0					
ANR	4845685	Identifier	path		4845360	1					
ANR	4845686	PrimaryExpression	2		4845360	1					
ANR	4845687	BreakStatement	break ;	115:18:1752:1757	4845360	1	True				
ANR	4845688	IfStatement	"if ( * q == '%' && strspn ( q + 1 , ""%*?[]{}"" ) )"		4845360	1					
ANR	4845689	Condition	"* q == '%' && strspn ( q + 1 , ""%*?[]{}"" )"	117:20:1780:1816	4845360	0	True				
ANR	4845690	AndExpression	"* q == '%' && strspn ( q + 1 , ""%*?[]{}"" )"		4845360	0		&&			
ANR	4845691	EqualityExpression	* q == '%'		4845360	0		==			
ANR	4845692	UnaryOperationExpression	* q		4845360	0					
ANR	4845693	UnaryOperator	*		4845360	0					
ANR	4845694	Identifier	q		4845360	1					
ANR	4845695	PrimaryExpression	'%'		4845360	1					
ANR	4845696	CallExpression	"strspn ( q + 1 , ""%*?[]{}"" )"		4845360	1					
ANR	4845697	Callee	strspn		4845360	0					
ANR	4845698	Identifier	strspn		4845360	0					
ANR	4845699	ArgumentList	q + 1		4845360	1					
ANR	4845700	Argument	q + 1		4845360	0					
ANR	4845701	AdditiveExpression	q + 1		4845360	0		+			
ANR	4845702	Identifier	q		4845360	0					
ANR	4845703	PrimaryExpression	1		4845360	1					
ANR	4845704	Argument	"""%*?[]{}"""		4845360	1					
ANR	4845705	PrimaryExpression	"""%*?[]{}"""		4845360	0					
ANR	4845706	ExpressionStatement	++ q	119:20:1840:1843	4845360	1	True				
ANR	4845707	UnaryExpression	++ q		4845360	0					
ANR	4845708	IncDec	++		4845360	0					
ANR	4845709	Identifier	q		4845360	1					
ANR	4845710	ElseStatement	else		4845360	0					
ANR	4845711	IfStatement	"if ( strspn ( q , ""\\\\*?[]{}"" ) )"		4845360	0					
ANR	4845712	Condition	"strspn ( q , ""\\\\*?[]{}"" )"	121:25:1871:1891	4845360	0	True				
ANR	4845713	CallExpression	"strspn ( q , ""\\\\*?[]{}"" )"		4845360	0					
ANR	4845714	Callee	strspn		4845360	0					
ANR	4845715	Identifier	strspn		4845360	0					
ANR	4845716	ArgumentList	q		4845360	1					
ANR	4845717	Argument	q		4845360	0					
ANR	4845718	Identifier	q		4845360	0					
ANR	4845719	Argument	"""\\\\*?[]{}"""		4845360	1					
ANR	4845720	PrimaryExpression	"""\\\\*?[]{}"""		4845360	0					
ANR	4845721	ExpressionStatement	* p ++ = '\\\\'	123:20:1915:1926	4845360	1	True				
ANR	4845722	AssignmentExpression	* p ++ = '\\\\'		4845360	0		=			
ANR	4845723	UnaryOperationExpression	* p ++		4845360	0					
ANR	4845724	UnaryOperator	*		4845360	0					
ANR	4845725	PostIncDecOperationExpression	p ++		4845360	1					
ANR	4845726	Identifier	p		4845360	0					
ANR	4845727	IncDec	++		4845360	1					
ANR	4845728	PrimaryExpression	'\\\\'		4845360	1					
ANR	4845729	ExpressionStatement	* p ++ = * q ++	125:16:1945:1956	4845360	2	True				
ANR	4845730	AssignmentExpression	* p ++ = * q ++		4845360	0		=			
ANR	4845731	UnaryOperationExpression	* p ++		4845360	0					
ANR	4845732	UnaryOperator	*		4845360	0					
ANR	4845733	PostIncDecOperationExpression	p ++		4845360	1					
ANR	4845734	Identifier	p		4845360	0					
ANR	4845735	IncDec	++		4845360	1					
ANR	4845736	UnaryOperationExpression	* q ++		4845360	1					
ANR	4845737	UnaryOperator	*		4845360	0					
ANR	4845738	PostIncDecOperationExpression	q ++		4845360	1					
ANR	4845739	Identifier	q		4845360	0					
ANR	4845740	IncDec	++		4845360	1					
ANR	4845741	ExpressionStatement	* p = 0	129:12:1986:1992	4845360	14	True				
ANR	4845742	AssignmentExpression	* p = 0		4845360	0		=			
ANR	4845743	UnaryOperationExpression	* p		4845360	0					
ANR	4845744	UnaryOperator	*		4845360	0					
ANR	4845745	Identifier	p		4845360	1					
ANR	4845746	PrimaryExpression	0		4845360	1					
ANR	4845747	ExpressionStatement	av_free ( dup )	131:12:2007:2019	4845360	15	True				
ANR	4845748	CallExpression	av_free ( dup )		4845360	0					
ANR	4845749	Callee	av_free		4845360	0					
ANR	4845750	Identifier	av_free		4845360	0					
ANR	4845751	ArgumentList	dup		4845360	1					
ANR	4845752	Argument	dup		4845360	0					
ANR	4845753	Identifier	dup		4845360	0					
ANR	4845754	ExpressionStatement	"gerr = glob ( s -> path , GLOB_NOCHECK | GLOB_BRACE | GLOB_NOMAGIC , NULL , & s -> globstate )"	135:12:2036:2115	4845360	16	True				
ANR	4845755	AssignmentExpression	"gerr = glob ( s -> path , GLOB_NOCHECK | GLOB_BRACE | GLOB_NOMAGIC , NULL , & s -> globstate )"		4845360	0		=			
ANR	4845756	Identifier	gerr		4845360	0					
ANR	4845757	CallExpression	"glob ( s -> path , GLOB_NOCHECK | GLOB_BRACE | GLOB_NOMAGIC , NULL , & s -> globstate )"		4845360	1					
ANR	4845758	Callee	glob		4845360	0					
ANR	4845759	Identifier	glob		4845360	0					
ANR	4845760	ArgumentList	s -> path		4845360	1					
ANR	4845761	Argument	s -> path		4845360	0					
ANR	4845762	PtrMemberAccess	s -> path		4845360	0					
ANR	4845763	Identifier	s		4845360	0					
ANR	4845764	Identifier	path		4845360	1					
ANR	4845765	Argument	GLOB_NOCHECK | GLOB_BRACE | GLOB_NOMAGIC		4845360	1					
ANR	4845766	InclusiveOrExpression	GLOB_NOCHECK | GLOB_BRACE | GLOB_NOMAGIC		4845360	0		|			
ANR	4845767	Identifier	GLOB_NOCHECK		4845360	0					
ANR	4845768	InclusiveOrExpression	GLOB_BRACE | GLOB_NOMAGIC		4845360	1		|			
ANR	4845769	Identifier	GLOB_BRACE		4845360	0					
ANR	4845770	Identifier	GLOB_NOMAGIC		4845360	1					
ANR	4845771	Argument	NULL		4845360	2					
ANR	4845772	Identifier	NULL		4845360	0					
ANR	4845773	Argument	& s -> globstate		4845360	3					
ANR	4845774	UnaryOperationExpression	& s -> globstate		4845360	0					
ANR	4845775	UnaryOperator	&		4845360	0					
ANR	4845776	PtrMemberAccess	s -> globstate		4845360	1					
ANR	4845777	Identifier	s		4845360	0					
ANR	4845778	Identifier	globstate		4845360	1					
ANR	4845779	IfStatement	if ( gerr != 0 )		4845360	17					
ANR	4845780	Condition	gerr != 0	137:16:2134:2142	4845360	0	True				
ANR	4845781	EqualityExpression	gerr != 0		4845360	0		!=			
ANR	4845782	Identifier	gerr		4845360	0					
ANR	4845783	PrimaryExpression	0		4845360	1					
ANR	4845784	CompoundStatement		135:27:2095:2095	4845360	1					
ANR	4845785	ReturnStatement	return AVERROR ( ENOENT ) ;	139:16:2164:2186	4845360	0	True				
ANR	4845786	CallExpression	AVERROR ( ENOENT )		4845360	0					
ANR	4845787	Callee	AVERROR		4845360	0					
ANR	4845788	Identifier	AVERROR		4845360	0					
ANR	4845789	ArgumentList	ENOENT		4845360	1					
ANR	4845790	Argument	ENOENT		4845360	0					
ANR	4845791	Identifier	ENOENT		4845360	0					
ANR	4845792	ExpressionStatement	first_index = 0	143:12:2216:2231	4845360	18	True				
ANR	4845793	AssignmentExpression	first_index = 0		4845360	0		=			
ANR	4845794	Identifier	first_index		4845360	0					
ANR	4845795	PrimaryExpression	0		4845360	1					
ANR	4845796	ExpressionStatement	last_index = s -> globstate . gl_pathc - 1	145:12:2246:2284	4845360	19	True				
ANR	4845797	AssignmentExpression	last_index = s -> globstate . gl_pathc - 1		4845360	0		=			
ANR	4845798	Identifier	last_index		4845360	0					
ANR	4845799	AdditiveExpression	s -> globstate . gl_pathc - 1		4845360	1		-			
ANR	4845800	MemberAccess	s -> globstate . gl_pathc		4845360	0					
ANR	4845801	PtrMemberAccess	s -> globstate		4845360	0					
ANR	4845802	Identifier	s		4845360	0					
ANR	4845803	Identifier	globstate		4845360	1					
ANR	4845804	Identifier	gl_pathc		4845360	1					
ANR	4845805	PrimaryExpression	1		4845360	1					
ANR	4845806	IfStatement	if ( ( s -> pattern_type == PT_GLOB_SEQUENCE && ! s -> use_glob ) || s -> pattern_type == PT_SEQUENCE )		4845360	1					
ANR	4845807	Condition	( s -> pattern_type == PT_GLOB_SEQUENCE && ! s -> use_glob ) || s -> pattern_type == PT_SEQUENCE	153:12:2329:2415	4845360	0	True				
ANR	4845808	OrExpression	( s -> pattern_type == PT_GLOB_SEQUENCE && ! s -> use_glob ) || s -> pattern_type == PT_SEQUENCE		4845360	0		||			
ANR	4845809	AndExpression	s -> pattern_type == PT_GLOB_SEQUENCE && ! s -> use_glob		4845360	0		&&			
ANR	4845810	EqualityExpression	s -> pattern_type == PT_GLOB_SEQUENCE		4845360	0		==			
ANR	4845811	PtrMemberAccess	s -> pattern_type		4845360	0					
ANR	4845812	Identifier	s		4845360	0					
ANR	4845813	Identifier	pattern_type		4845360	1					
ANR	4845814	Identifier	PT_GLOB_SEQUENCE		4845360	1					
ANR	4845815	UnaryOperationExpression	! s -> use_glob		4845360	1					
ANR	4845816	UnaryOperator	!		4845360	0					
ANR	4845817	PtrMemberAccess	s -> use_glob		4845360	1					
ANR	4845818	Identifier	s		4845360	0					
ANR	4845819	Identifier	use_glob		4845360	1					
ANR	4845820	EqualityExpression	s -> pattern_type == PT_SEQUENCE		4845360	1		==			
ANR	4845821	PtrMemberAccess	s -> pattern_type		4845360	0					
ANR	4845822	Identifier	s		4845360	0					
ANR	4845823	Identifier	pattern_type		4845360	1					
ANR	4845824	Identifier	PT_SEQUENCE		4845360	1					
ANR	4845825	CompoundStatement		151:101:2368:2368	4845360	1					
ANR	4845826	IfStatement	"if ( find_image_range ( & first_index , & last_index , s -> path , s -> start_number , s -> start_number_range ) < 0 )"		4845360	0					
ANR	4845827	Condition	"find_image_range ( & first_index , & last_index , s -> path , s -> start_number , s -> start_number_range ) < 0"	155:16:2437:2566	4845360	0	True				
ANR	4845828	RelationalExpression	"find_image_range ( & first_index , & last_index , s -> path , s -> start_number , s -> start_number_range ) < 0"		4845360	0		<			
ANR	4845829	CallExpression	"find_image_range ( & first_index , & last_index , s -> path , s -> start_number , s -> start_number_range )"		4845360	0					
ANR	4845830	Callee	find_image_range		4845360	0					
ANR	4845831	Identifier	find_image_range		4845360	0					
ANR	4845832	ArgumentList	& first_index		4845360	1					
ANR	4845833	Argument	& first_index		4845360	0					
ANR	4845834	UnaryOperationExpression	& first_index		4845360	0					
ANR	4845835	UnaryOperator	&		4845360	0					
ANR	4845836	Identifier	first_index		4845360	1					
ANR	4845837	Argument	& last_index		4845360	1					
ANR	4845838	UnaryOperationExpression	& last_index		4845360	0					
ANR	4845839	UnaryOperator	&		4845360	0					
ANR	4845840	Identifier	last_index		4845360	1					
ANR	4845841	Argument	s -> path		4845360	2					
ANR	4845842	PtrMemberAccess	s -> path		4845360	0					
ANR	4845843	Identifier	s		4845360	0					
ANR	4845844	Identifier	path		4845360	1					
ANR	4845845	Argument	s -> start_number		4845360	3					
ANR	4845846	PtrMemberAccess	s -> start_number		4845360	0					
ANR	4845847	Identifier	s		4845360	0					
ANR	4845848	Identifier	start_number		4845360	1					
ANR	4845849	Argument	s -> start_number_range		4845360	4					
ANR	4845850	PtrMemberAccess	s -> start_number_range		4845360	0					
ANR	4845851	Identifier	s		4845360	0					
ANR	4845852	Identifier	start_number_range		4845360	1					
ANR	4845853	PrimaryExpression	0		4845360	1					
ANR	4845854	CompoundStatement		155:78:2519:2519	4845360	1					
ANR	4845855	ExpressionStatement	"av_log ( s1 , AV_LOG_ERROR , ""Could find no file with with path '%s' and index in the range %d-%d\\n"" , s -> path , s -> start_number , s -> start_number + s -> start_number_range - 1 )"	159:16:2588:2804	4845360	0	True				
ANR	4845856	CallExpression	"av_log ( s1 , AV_LOG_ERROR , ""Could find no file with with path '%s' and index in the range %d-%d\\n"" , s -> path , s -> start_number , s -> start_number + s -> start_number_range - 1 )"		4845360	0					
ANR	4845857	Callee	av_log		4845360	0					
ANR	4845858	Identifier	av_log		4845360	0					
ANR	4845859	ArgumentList	s1		4845360	1					
ANR	4845860	Argument	s1		4845360	0					
ANR	4845861	Identifier	s1		4845360	0					
ANR	4845862	Argument	AV_LOG_ERROR		4845360	1					
ANR	4845863	Identifier	AV_LOG_ERROR		4845360	0					
ANR	4845864	Argument	"""Could find no file with with path '%s' and index in the range %d-%d\\n"""		4845360	2					
ANR	4845865	PrimaryExpression	"""Could find no file with with path '%s' and index in the range %d-%d\\n"""		4845360	0					
ANR	4845866	Argument	s -> path		4845360	3					
ANR	4845867	PtrMemberAccess	s -> path		4845360	0					
ANR	4845868	Identifier	s		4845360	0					
ANR	4845869	Identifier	path		4845360	1					
ANR	4845870	Argument	s -> start_number		4845360	4					
ANR	4845871	PtrMemberAccess	s -> start_number		4845360	0					
ANR	4845872	Identifier	s		4845360	0					
ANR	4845873	Identifier	start_number		4845360	1					
ANR	4845874	Argument	s -> start_number + s -> start_number_range - 1		4845360	5					
ANR	4845875	AdditiveExpression	s -> start_number + s -> start_number_range - 1		4845360	0		+			
ANR	4845876	PtrMemberAccess	s -> start_number		4845360	0					
ANR	4845877	Identifier	s		4845360	0					
ANR	4845878	Identifier	start_number		4845360	1					
ANR	4845879	AdditiveExpression	s -> start_number_range - 1		4845360	1		-			
ANR	4845880	PtrMemberAccess	s -> start_number_range		4845360	0					
ANR	4845881	Identifier	s		4845360	0					
ANR	4845882	Identifier	start_number_range		4845360	1					
ANR	4845883	PrimaryExpression	1		4845360	1					
ANR	4845884	ReturnStatement	return AVERROR ( ENOENT ) ;	165:16:2823:2845	4845360	1	True				
ANR	4845885	CallExpression	AVERROR ( ENOENT )		4845360	0					
ANR	4845886	Callee	AVERROR		4845360	0					
ANR	4845887	Identifier	AVERROR		4845360	0					
ANR	4845888	ArgumentList	ENOENT		4845360	1					
ANR	4845889	Argument	ENOENT		4845360	0					
ANR	4845890	Identifier	ENOENT		4845360	0					
ANR	4845891	ElseStatement	else		4845360	0					
ANR	4845892	IfStatement	if ( s -> pattern_type == PT_GLOB )		4845360	0					
ANR	4845893	Condition	s -> pattern_type == PT_GLOB	169:19:2882:2907	4845360	0	True				
ANR	4845894	EqualityExpression	s -> pattern_type == PT_GLOB		4845360	0		==			
ANR	4845895	PtrMemberAccess	s -> pattern_type		4845360	0					
ANR	4845896	Identifier	s		4845360	0					
ANR	4845897	Identifier	pattern_type		4845360	1					
ANR	4845898	Identifier	PT_GLOB		4845360	1					
ANR	4845899	CompoundStatement		171:12:2890:2898	4845360	1					
ANR	4845900	IdentifierDeclStatement	int gerr ;	173:12:2940:2948	4845360	0	True				
ANR	4845901	IdentifierDecl	gerr		4845360	0					
ANR	4845902	IdentifierDeclType	int		4845360	0					
ANR	4845903	Identifier	gerr		4845360	1					
ANR	4845904	ExpressionStatement	"gerr = glob ( s -> path , GLOB_NOCHECK | GLOB_BRACE | GLOB_NOMAGIC , NULL , & s -> globstate )"	175:12:2963:3042	4845360	1	True				
ANR	4845905	AssignmentExpression	"gerr = glob ( s -> path , GLOB_NOCHECK | GLOB_BRACE | GLOB_NOMAGIC , NULL , & s -> globstate )"		4845360	0		=			
ANR	4845906	Identifier	gerr		4845360	0					
ANR	4845907	CallExpression	"glob ( s -> path , GLOB_NOCHECK | GLOB_BRACE | GLOB_NOMAGIC , NULL , & s -> globstate )"		4845360	1					
ANR	4845908	Callee	glob		4845360	0					
ANR	4845909	Identifier	glob		4845360	0					
ANR	4845910	ArgumentList	s -> path		4845360	1					
ANR	4845911	Argument	s -> path		4845360	0					
ANR	4845912	PtrMemberAccess	s -> path		4845360	0					
ANR	4845913	Identifier	s		4845360	0					
ANR	4845914	Identifier	path		4845360	1					
ANR	4845915	Argument	GLOB_NOCHECK | GLOB_BRACE | GLOB_NOMAGIC		4845360	1					
ANR	4845916	InclusiveOrExpression	GLOB_NOCHECK | GLOB_BRACE | GLOB_NOMAGIC		4845360	0		|			
ANR	4845917	Identifier	GLOB_NOCHECK		4845360	0					
ANR	4845918	InclusiveOrExpression	GLOB_BRACE | GLOB_NOMAGIC		4845360	1		|			
ANR	4845919	Identifier	GLOB_BRACE		4845360	0					
ANR	4845920	Identifier	GLOB_NOMAGIC		4845360	1					
ANR	4845921	Argument	NULL		4845360	2					
ANR	4845922	Identifier	NULL		4845360	0					
ANR	4845923	Argument	& s -> globstate		4845360	3					
ANR	4845924	UnaryOperationExpression	& s -> globstate		4845360	0					
ANR	4845925	UnaryOperator	&		4845360	0					
ANR	4845926	PtrMemberAccess	s -> globstate		4845360	1					
ANR	4845927	Identifier	s		4845360	0					
ANR	4845928	Identifier	globstate		4845360	1					
ANR	4845929	IfStatement	if ( gerr != 0 )		4845360	2					
ANR	4845930	Condition	gerr != 0	177:16:3061:3069	4845360	0	True				
ANR	4845931	EqualityExpression	gerr != 0		4845360	0		!=			
ANR	4845932	Identifier	gerr		4845360	0					
ANR	4845933	PrimaryExpression	0		4845360	1					
ANR	4845934	CompoundStatement		175:27:3022:3022	4845360	1					
ANR	4845935	ReturnStatement	return AVERROR ( ENOENT ) ;	179:16:3091:3113	4845360	0	True				
ANR	4845936	CallExpression	AVERROR ( ENOENT )		4845360	0					
ANR	4845937	Callee	AVERROR		4845360	0					
ANR	4845938	Identifier	AVERROR		4845360	0					
ANR	4845939	ArgumentList	ENOENT		4845360	1					
ANR	4845940	Argument	ENOENT		4845360	0					
ANR	4845941	Identifier	ENOENT		4845360	0					
ANR	4845942	ExpressionStatement	first_index = 0	183:12:3143:3158	4845360	3	True				
ANR	4845943	AssignmentExpression	first_index = 0		4845360	0		=			
ANR	4845944	Identifier	first_index		4845360	0					
ANR	4845945	PrimaryExpression	0		4845360	1					
ANR	4845946	ExpressionStatement	last_index = s -> globstate . gl_pathc - 1	185:12:3173:3211	4845360	4	True				
ANR	4845947	AssignmentExpression	last_index = s -> globstate . gl_pathc - 1		4845360	0		=			
ANR	4845948	Identifier	last_index		4845360	0					
ANR	4845949	AdditiveExpression	s -> globstate . gl_pathc - 1		4845360	1		-			
ANR	4845950	MemberAccess	s -> globstate . gl_pathc		4845360	0					
ANR	4845951	PtrMemberAccess	s -> globstate		4845360	0					
ANR	4845952	Identifier	s		4845360	0					
ANR	4845953	Identifier	globstate		4845360	1					
ANR	4845954	Identifier	gl_pathc		4845360	1					
ANR	4845955	PrimaryExpression	1		4845360	1					
ANR	4845956	ExpressionStatement	s -> use_glob = 1	187:12:3226:3241	4845360	5	True				
ANR	4845957	AssignmentExpression	s -> use_glob = 1		4845360	0		=			
ANR	4845958	PtrMemberAccess	s -> use_glob		4845360	0					
ANR	4845959	Identifier	s		4845360	0					
ANR	4845960	Identifier	use_glob		4845360	1					
ANR	4845961	PrimaryExpression	1		4845360	1					
ANR	4845962	ElseStatement	else		4845360	0					
ANR	4845963	IfStatement	if ( s -> pattern_type != PT_GLOB_SEQUENCE )		4845360	0					
ANR	4845964	Condition	s -> pattern_type != PT_GLOB_SEQUENCE	201:19:3491:3525	4845360	0	True				
ANR	4845965	EqualityExpression	s -> pattern_type != PT_GLOB_SEQUENCE		4845360	0		!=			
ANR	4845966	PtrMemberAccess	s -> pattern_type		4845360	0					
ANR	4845967	Identifier	s		4845360	0					
ANR	4845968	Identifier	pattern_type		4845360	1					
ANR	4845969	Identifier	PT_GLOB_SEQUENCE		4845360	1					
ANR	4845970	CompoundStatement		199:56:3478:3478	4845360	1					
ANR	4845971	ExpressionStatement	"av_log ( s1 , AV_LOG_ERROR , ""Unknown value '%d' for pattern_type option\\n"" , s -> pattern_type )"	203:12:3543:3652	4845360	0	True				
ANR	4845972	CallExpression	"av_log ( s1 , AV_LOG_ERROR , ""Unknown value '%d' for pattern_type option\\n"" , s -> pattern_type )"		4845360	0					
ANR	4845973	Callee	av_log		4845360	0					
ANR	4845974	Identifier	av_log		4845360	0					
ANR	4845975	ArgumentList	s1		4845360	1					
ANR	4845976	Argument	s1		4845360	0					
ANR	4845977	Identifier	s1		4845360	0					
ANR	4845978	Argument	AV_LOG_ERROR		4845360	1					
ANR	4845979	Identifier	AV_LOG_ERROR		4845360	0					
ANR	4845980	Argument	"""Unknown value '%d' for pattern_type option\\n"""		4845360	2					
ANR	4845981	PrimaryExpression	"""Unknown value '%d' for pattern_type option\\n"""		4845360	0					
ANR	4845982	Argument	s -> pattern_type		4845360	3					
ANR	4845983	PtrMemberAccess	s -> pattern_type		4845360	0					
ANR	4845984	Identifier	s		4845360	0					
ANR	4845985	Identifier	pattern_type		4845360	1					
ANR	4845986	ReturnStatement	return AVERROR ( EINVAL ) ;	207:12:3667:3689	4845360	1	True				
ANR	4845987	CallExpression	AVERROR ( EINVAL )		4845360	0					
ANR	4845988	Callee	AVERROR		4845360	0					
ANR	4845989	Identifier	AVERROR		4845360	0					
ANR	4845990	ArgumentList	EINVAL		4845360	1					
ANR	4845991	Argument	EINVAL		4845360	0					
ANR	4845992	Identifier	EINVAL		4845360	0					
ANR	4845993	ExpressionStatement	s -> img_first = first_index	211:8:3711:3738	4845360	2	True				
ANR	4845994	AssignmentExpression	s -> img_first = first_index		4845360	0		=			
ANR	4845995	PtrMemberAccess	s -> img_first		4845360	0					
ANR	4845996	Identifier	s		4845360	0					
ANR	4845997	Identifier	img_first		4845360	1					
ANR	4845998	Identifier	first_index		4845360	1					
ANR	4845999	ExpressionStatement	s -> img_last = last_index	213:8:3749:3775	4845360	3	True				
ANR	4846000	AssignmentExpression	s -> img_last = last_index		4845360	0		=			
ANR	4846001	PtrMemberAccess	s -> img_last		4845360	0					
ANR	4846002	Identifier	s		4845360	0					
ANR	4846003	Identifier	img_last		4845360	1					
ANR	4846004	Identifier	last_index		4845360	1					
ANR	4846005	ExpressionStatement	s -> img_number = first_index	215:8:3786:3813	4845360	4	True				
ANR	4846006	AssignmentExpression	s -> img_number = first_index		4845360	0		=			
ANR	4846007	PtrMemberAccess	s -> img_number		4845360	0					
ANR	4846008	Identifier	s		4845360	0					
ANR	4846009	Identifier	img_number		4845360	1					
ANR	4846010	Identifier	first_index		4845360	1					
ANR	4846011	ExpressionStatement	st -> start_time = 0	219:8:3856:3874	4845360	5	True				
ANR	4846012	AssignmentExpression	st -> start_time = 0		4845360	0		=			
ANR	4846013	PtrMemberAccess	st -> start_time		4845360	0					
ANR	4846014	Identifier	st		4845360	0					
ANR	4846015	Identifier	start_time		4845360	1					
ANR	4846016	PrimaryExpression	0		4845360	1					
ANR	4846017	ExpressionStatement	st -> duration = last_index - first_index + 1	221:8:3885:3930	4845360	6	True				
ANR	4846018	AssignmentExpression	st -> duration = last_index - first_index + 1		4845360	0		=			
ANR	4846019	PtrMemberAccess	st -> duration		4845360	0					
ANR	4846020	Identifier	st		4845360	0					
ANR	4846021	Identifier	duration		4845360	1					
ANR	4846022	AdditiveExpression	last_index - first_index + 1		4845360	1		-			
ANR	4846023	Identifier	last_index		4845360	0					
ANR	4846024	AdditiveExpression	first_index + 1		4845360	1		+			
ANR	4846025	Identifier	first_index		4845360	0					
ANR	4846026	PrimaryExpression	1		4845360	1					
ANR	4846027	IfStatement	if ( s1 -> video_codec_id )		4845360	15					
ANR	4846028	Condition	s1 -> video_codec_id	227:8:3950:3967	4845360	0	True				
ANR	4846029	PtrMemberAccess	s1 -> video_codec_id		4845360	0					
ANR	4846030	Identifier	s1		4845360	0					
ANR	4846031	Identifier	video_codec_id		4845360	1					
ANR	4846032	CompoundStatement		225:28:3920:3920	4845360	1					
ANR	4846033	ExpressionStatement	st -> codec -> codec_type = AVMEDIA_TYPE_VIDEO	229:8:3981:4023	4845360	0	True				
ANR	4846034	AssignmentExpression	st -> codec -> codec_type = AVMEDIA_TYPE_VIDEO		4845360	0		=			
ANR	4846035	PtrMemberAccess	st -> codec -> codec_type		4845360	0					
ANR	4846036	PtrMemberAccess	st -> codec		4845360	0					
ANR	4846037	Identifier	st		4845360	0					
ANR	4846038	Identifier	codec		4845360	1					
ANR	4846039	Identifier	codec_type		4845360	1					
ANR	4846040	Identifier	AVMEDIA_TYPE_VIDEO		4845360	1					
ANR	4846041	ExpressionStatement	st -> codec -> codec_id = s1 -> video_codec_id	231:8:4034:4076	4845360	1	True				
ANR	4846042	AssignmentExpression	st -> codec -> codec_id = s1 -> video_codec_id		4845360	0		=			
ANR	4846043	PtrMemberAccess	st -> codec -> codec_id		4845360	0					
ANR	4846044	PtrMemberAccess	st -> codec		4845360	0					
ANR	4846045	Identifier	st		4845360	0					
ANR	4846046	Identifier	codec		4845360	1					
ANR	4846047	Identifier	codec_id		4845360	1					
ANR	4846048	PtrMemberAccess	s1 -> video_codec_id		4845360	1					
ANR	4846049	Identifier	s1		4845360	0					
ANR	4846050	Identifier	video_codec_id		4845360	1					
ANR	4846051	ElseStatement	else		4845360	0					
ANR	4846052	IfStatement	if ( s1 -> audio_codec_id )		4845360	0					
ANR	4846053	Condition	s1 -> audio_codec_id	233:15:4094:4111	4845360	0	True				
ANR	4846054	PtrMemberAccess	s1 -> audio_codec_id		4845360	0					
ANR	4846055	Identifier	s1		4845360	0					
ANR	4846056	Identifier	audio_codec_id		4845360	1					
ANR	4846057	CompoundStatement		231:35:4064:4064	4845360	1					
ANR	4846058	ExpressionStatement	st -> codec -> codec_type = AVMEDIA_TYPE_AUDIO	235:8:4125:4167	4845360	0	True				
ANR	4846059	AssignmentExpression	st -> codec -> codec_type = AVMEDIA_TYPE_AUDIO		4845360	0		=			
ANR	4846060	PtrMemberAccess	st -> codec -> codec_type		4845360	0					
ANR	4846061	PtrMemberAccess	st -> codec		4845360	0					
ANR	4846062	Identifier	st		4845360	0					
ANR	4846063	Identifier	codec		4845360	1					
ANR	4846064	Identifier	codec_type		4845360	1					
ANR	4846065	Identifier	AVMEDIA_TYPE_AUDIO		4845360	1					
ANR	4846066	ExpressionStatement	st -> codec -> codec_id = s1 -> audio_codec_id	237:8:4178:4220	4845360	1	True				
ANR	4846067	AssignmentExpression	st -> codec -> codec_id = s1 -> audio_codec_id		4845360	0		=			
ANR	4846068	PtrMemberAccess	st -> codec -> codec_id		4845360	0					
ANR	4846069	PtrMemberAccess	st -> codec		4845360	0					
ANR	4846070	Identifier	st		4845360	0					
ANR	4846071	Identifier	codec		4845360	1					
ANR	4846072	Identifier	codec_id		4845360	1					
ANR	4846073	PtrMemberAccess	s1 -> audio_codec_id		4845360	1					
ANR	4846074	Identifier	s1		4845360	0					
ANR	4846075	Identifier	audio_codec_id		4845360	1					
ANR	4846076	ElseStatement	else		4845360	0					
ANR	4846077	CompoundStatement		239:8:4195:4234	4845360	0					
ANR	4846078	IdentifierDeclStatement	"const char * str = strrchr ( s -> path , '.' ) ;"	241:8:4245:4284	4845360	0	True				
ANR	4846079	IdentifierDecl	"* str = strrchr ( s -> path , '.' )"		4845360	0					
ANR	4846080	IdentifierDeclType	const char *		4845360	0					
ANR	4846081	Identifier	str		4845360	1					
ANR	4846082	AssignmentExpression	"* str = strrchr ( s -> path , '.' )"		4845360	2		=			
ANR	4846083	Identifier	str		4845360	0					
ANR	4846084	CallExpression	"strrchr ( s -> path , '.' )"		4845360	1					
ANR	4846085	Callee	strrchr		4845360	0					
ANR	4846086	Identifier	strrchr		4845360	0					
ANR	4846087	ArgumentList	s -> path		4845360	1					
ANR	4846088	Argument	s -> path		4845360	0					
ANR	4846089	PtrMemberAccess	s -> path		4845360	0					
ANR	4846090	Identifier	s		4845360	0					
ANR	4846091	Identifier	path		4845360	1					
ANR	4846092	Argument	'.'		4845360	1					
ANR	4846093	PrimaryExpression	'.'		4845360	0					
ANR	4846094	ExpressionStatement	"s -> split_planes = str && ! av_strcasecmp ( str + 1 , ""y"" )"	243:8:4295:4354	4845360	1	True				
ANR	4846095	AssignmentExpression	"s -> split_planes = str && ! av_strcasecmp ( str + 1 , ""y"" )"		4845360	0		=			
ANR	4846096	PtrMemberAccess	s -> split_planes		4845360	0					
ANR	4846097	Identifier	s		4845360	0					
ANR	4846098	Identifier	split_planes		4845360	1					
ANR	4846099	AndExpression	"str && ! av_strcasecmp ( str + 1 , ""y"" )"		4845360	1		&&			
ANR	4846100	Identifier	str		4845360	0					
ANR	4846101	UnaryOperationExpression	"! av_strcasecmp ( str + 1 , ""y"" )"		4845360	1					
ANR	4846102	UnaryOperator	!		4845360	0					
ANR	4846103	CallExpression	"av_strcasecmp ( str + 1 , ""y"" )"		4845360	1					
ANR	4846104	Callee	av_strcasecmp		4845360	0					
ANR	4846105	Identifier	av_strcasecmp		4845360	0					
ANR	4846106	ArgumentList	str + 1		4845360	1					
ANR	4846107	Argument	str + 1		4845360	0					
ANR	4846108	AdditiveExpression	str + 1		4845360	0		+			
ANR	4846109	Identifier	str		4845360	0					
ANR	4846110	PrimaryExpression	1		4845360	1					
ANR	4846111	Argument	"""y"""		4845360	1					
ANR	4846112	PrimaryExpression	"""y"""		4845360	0					
ANR	4846113	ExpressionStatement	st -> codec -> codec_type = AVMEDIA_TYPE_VIDEO	245:8:4365:4407	4845360	2	True				
ANR	4846114	AssignmentExpression	st -> codec -> codec_type = AVMEDIA_TYPE_VIDEO		4845360	0		=			
ANR	4846115	PtrMemberAccess	st -> codec -> codec_type		4845360	0					
ANR	4846116	PtrMemberAccess	st -> codec		4845360	0					
ANR	4846117	Identifier	st		4845360	0					
ANR	4846118	Identifier	codec		4845360	1					
ANR	4846119	Identifier	codec_type		4845360	1					
ANR	4846120	Identifier	AVMEDIA_TYPE_VIDEO		4845360	1					
ANR	4846121	ExpressionStatement	st -> codec -> codec_id = ff_guess_image2_codec ( s -> path )	247:8:4418:4472	4845360	3	True				
ANR	4846122	AssignmentExpression	st -> codec -> codec_id = ff_guess_image2_codec ( s -> path )		4845360	0		=			
ANR	4846123	PtrMemberAccess	st -> codec -> codec_id		4845360	0					
ANR	4846124	PtrMemberAccess	st -> codec		4845360	0					
ANR	4846125	Identifier	st		4845360	0					
ANR	4846126	Identifier	codec		4845360	1					
ANR	4846127	Identifier	codec_id		4845360	1					
ANR	4846128	CallExpression	ff_guess_image2_codec ( s -> path )		4845360	1					
ANR	4846129	Callee	ff_guess_image2_codec		4845360	0					
ANR	4846130	Identifier	ff_guess_image2_codec		4845360	0					
ANR	4846131	ArgumentList	s -> path		4845360	1					
ANR	4846132	Argument	s -> path		4845360	0					
ANR	4846133	PtrMemberAccess	s -> path		4845360	0					
ANR	4846134	Identifier	s		4845360	0					
ANR	4846135	Identifier	path		4845360	1					
ANR	4846136	IfStatement	if ( st -> codec -> codec_id == AV_CODEC_ID_LJPEG )		4845360	4					
ANR	4846137	Condition	st -> codec -> codec_id == AV_CODEC_ID_LJPEG	249:12:4487:4526	4845360	0	True				
ANR	4846138	EqualityExpression	st -> codec -> codec_id == AV_CODEC_ID_LJPEG		4845360	0		==			
ANR	4846139	PtrMemberAccess	st -> codec -> codec_id		4845360	0					
ANR	4846140	PtrMemberAccess	st -> codec		4845360	0					
ANR	4846141	Identifier	st		4845360	0					
ANR	4846142	Identifier	codec		4845360	1					
ANR	4846143	Identifier	codec_id		4845360	1					
ANR	4846144	Identifier	AV_CODEC_ID_LJPEG		4845360	1					
ANR	4846145	ExpressionStatement	st -> codec -> codec_id = AV_CODEC_ID_MJPEG	251:12:4542:4581	4845360	1	True				
ANR	4846146	AssignmentExpression	st -> codec -> codec_id = AV_CODEC_ID_MJPEG		4845360	0		=			
ANR	4846147	PtrMemberAccess	st -> codec -> codec_id		4845360	0					
ANR	4846148	PtrMemberAccess	st -> codec		4845360	0					
ANR	4846149	Identifier	st		4845360	0					
ANR	4846150	Identifier	codec		4845360	1					
ANR	4846151	Identifier	codec_id		4845360	1					
ANR	4846152	Identifier	AV_CODEC_ID_MJPEG		4845360	1					
ANR	4846153	IfStatement	if ( st -> codec -> codec_type == AVMEDIA_TYPE_VIDEO && pix_fmt != AV_PIX_FMT_NONE )		4845360	16					
ANR	4846154	Condition	st -> codec -> codec_type == AVMEDIA_TYPE_VIDEO && pix_fmt != AV_PIX_FMT_NONE	255:8:4599:4680	4845360	0	True				
ANR	4846155	AndExpression	st -> codec -> codec_type == AVMEDIA_TYPE_VIDEO && pix_fmt != AV_PIX_FMT_NONE		4845360	0		&&			
ANR	4846156	EqualityExpression	st -> codec -> codec_type == AVMEDIA_TYPE_VIDEO		4845360	0		==			
ANR	4846157	PtrMemberAccess	st -> codec -> codec_type		4845360	0					
ANR	4846158	PtrMemberAccess	st -> codec		4845360	0					
ANR	4846159	Identifier	st		4845360	0					
ANR	4846160	Identifier	codec		4845360	1					
ANR	4846161	Identifier	codec_type		4845360	1					
ANR	4846162	Identifier	AVMEDIA_TYPE_VIDEO		4845360	1					
ANR	4846163	EqualityExpression	pix_fmt != AV_PIX_FMT_NONE		4845360	1		!=			
ANR	4846164	Identifier	pix_fmt		4845360	0					
ANR	4846165	Identifier	AV_PIX_FMT_NONE		4845360	1					
ANR	4846166	ExpressionStatement	st -> codec -> pix_fmt = pix_fmt	259:8:4692:4720	4845360	1	True				
ANR	4846167	AssignmentExpression	st -> codec -> pix_fmt = pix_fmt		4845360	0		=			
ANR	4846168	PtrMemberAccess	st -> codec -> pix_fmt		4845360	0					
ANR	4846169	PtrMemberAccess	st -> codec		4845360	0					
ANR	4846170	Identifier	st		4845360	0					
ANR	4846171	Identifier	codec		4845360	1					
ANR	4846172	Identifier	pix_fmt		4845360	1					
ANR	4846173	Identifier	pix_fmt		4845360	1					
ANR	4846174	ReturnStatement	return 0 ;	263:4:4729:4737	4845360	17	True				
ANR	4846175	PrimaryExpression	0		4845360	0					
ANR	4846176	ReturnType	static int		4845360	1					
ANR	4846177	Identifier	img_read_header		4845360	2					
ANR	4846178	ParameterList	AVFormatContext * s1		4845360	3					
ANR	4846179	Parameter	AVFormatContext * s1	1:27:27:45	4845360	0	True				
ANR	4846180	ParameterType	AVFormatContext *		4845360	0					
ANR	4846181	Identifier	s1		4845360	1					
ANR	4846182	CFGEntryNode	ENTRY		4845360		True				
ANR	4846183	CFGExitNode	EXIT		4845360		True				
ANR	4846184	Symbol	ENOMEM		4845360						
ANR	4846185	Symbol	st -> codec -> pix_fmt		4845360						
ANR	4846186	Symbol	* st		4845360						
ANR	4846187	Symbol	AVMEDIA_TYPE_AUDIO		4845360						
ANR	4846188	Symbol	s1 -> ctx_flags		4845360						
ANR	4846189	Symbol	av_strdup		4845360						
ANR	4846190	Symbol	* q ++		4845360						
ANR	4846191	Symbol	* * s1		4845360						
ANR	4846192	Symbol	s -> pattern_type		4845360						
ANR	4846193	Symbol	s -> framerate . den		4845360						
ANR	4846194	Symbol	* st -> codec		4845360						
ANR	4846195	Symbol	AVMEDIA_TYPE_VIDEO		4845360						
ANR	4846196	Symbol	PT_SEQUENCE		4845360						
ANR	4846197	Symbol	s1 -> iformat		4845360						
ANR	4846198	Symbol	last_index		4845360						
ANR	4846199	Symbol	s -> path		4845360						
ANR	4846200	Symbol	s -> width		4845360						
ANR	4846201	Symbol	s -> globstate		4845360						
ANR	4846202	Symbol	s1		4845360						
ANR	4846203	Symbol	s -> is_pipe		4845360						
ANR	4846204	Symbol	st -> need_parsing		4845360						
ANR	4846205	Symbol	NULL		4845360						
ANR	4846206	Symbol	s -> use_glob		4845360						
ANR	4846207	Symbol	s -> globstate . gl_pathc		4845360						
ANR	4846208	Symbol	st -> codec -> width		4845360						
ANR	4846209	Symbol	gerr		4845360						
ANR	4846210	Symbol	AVFMTCTX_NOHEADER		4845360						
ANR	4846211	Symbol	str		4845360						
ANR	4846212	Symbol	av_strcasecmp		4845360						
ANR	4846213	Symbol	& s -> globstate		4845360						
ANR	4846214	Symbol	s -> img_number		4845360						
ANR	4846215	Symbol	s1 -> audio_codec_id		4845360						
ANR	4846216	Symbol	s -> framerate . num		4845360						
ANR	4846217	Symbol	strspn		4845360						
ANR	4846218	Symbol	s1 -> filename		4845360						
ANR	4846219	Symbol	s1 -> video_codec_id		4845360						
ANR	4846220	Symbol	pix_fmt		4845360						
ANR	4846221	Symbol	AVFMT_NOFILE		4845360						
ANR	4846222	Symbol	AV_CODEC_ID_LJPEG		4845360						
ANR	4846223	Symbol	* s1		4845360						
ANR	4846224	Symbol	s -> pixel_format		4845360						
ANR	4846225	Symbol	st -> codec -> height		4845360						
ANR	4846226	Symbol	glob		4845360						
ANR	4846227	Symbol	first_index		4845360						
ANR	4846228	Symbol	AVSTREAM_PARSE_FULL		4845360						
ANR	4846229	Symbol	GLOB_NOCHECK		4845360						
ANR	4846230	Symbol	* * st		4845360						
ANR	4846231	Symbol	ff_guess_image2_codec		4845360						
ANR	4846232	Symbol	AV_CODEC_ID_MJPEG		4845360						
ANR	4846233	Symbol	avformat_new_stream		4845360						
ANR	4846234	Symbol	& last_index		4845360						
ANR	4846235	Symbol	s -> img_count		4845360						
ANR	4846236	Symbol	st -> codec -> codec_id		4845360						
ANR	4846237	Symbol	st -> start_time		4845360						
ANR	4846238	Symbol	s1 -> priv_data		4845360						
ANR	4846239	Symbol	find_image_range		4845360						
ANR	4846240	Symbol	s -> img_last		4845360						
ANR	4846241	Symbol	s1 -> iformat -> flags		4845360						
ANR	4846242	Symbol	s -> start_number_range		4845360						
ANR	4846243	Symbol	st -> codec -> codec_type		4845360						
ANR	4846244	Symbol	PT_GLOB_SEQUENCE		4845360						
ANR	4846245	Symbol	s -> img_first		4845360						
ANR	4846246	Symbol	GLOB_BRACE		4845360						
ANR	4846247	Symbol	st -> duration		4845360						
ANR	4846248	Symbol	st		4845360						
ANR	4846249	Symbol	av_get_pix_fmt		4845360						
ANR	4846250	Symbol	AV_LOG_ERROR		4845360						
ANR	4846251	Symbol	* s1 -> iformat		4845360						
ANR	4846252	Symbol	* p ++		4845360						
ANR	4846253	Symbol	s -> start_number		4845360						
ANR	4846254	Symbol	AV_PIX_FMT_NONE		4845360						
ANR	4846255	Symbol	s -> ts_from_file		4845360						
ANR	4846256	Symbol	ENOENT		4845360						
ANR	4846257	Symbol	st -> codec		4845360						
ANR	4846258	Symbol	s -> split_planes		4845360						
ANR	4846259	Symbol	EINVAL		4845360						
ANR	4846260	Symbol	p		4845360						
ANR	4846261	Symbol	q		4845360						
ANR	4846262	Symbol	s -> framerate		4845360						
ANR	4846263	Symbol	s		4845360						
ANR	4846264	Symbol	s -> height		4845360						
ANR	4846265	Symbol	PT_GLOB		4845360						
ANR	4846266	Symbol	strrchr		4845360						
ANR	4846267	Symbol	& first_index		4845360						
ANR	4846268	Symbol	* p		4845360						
ANR	4846269	Symbol	AVERROR		4845360						
ANR	4846270	Symbol	is_glob		4845360						
ANR	4846271	Symbol	* q		4845360						
ANR	4846272	Symbol	* s		4845360						
ANR	4846273	Symbol	GLOB_NOMAGIC		4845360						
ANR	4846274	Symbol	dup		4845360						
