command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1532354	File	/home/p4ultr4n/workplace/ReVeal/raw_code/cpu_x86_load_seg_0.c								
ANR	1532355	Function	cpu_x86_load_seg	1:0:0:605							
ANR	1532356	FunctionDef	"cpu_x86_load_seg (CPUX86State * s , int seg_reg , int selector)"		1532355	0					
ANR	1532357	CompoundStatement		3:0:66:605	1532355	0					
ANR	1532358	IdentifierDeclStatement	CPUX86State * saved_env ;	5:4:73:95	1532355	0	True				
ANR	1532359	IdentifierDecl	* saved_env		1532355	0					
ANR	1532360	IdentifierDeclType	CPUX86State *		1532355	0					
ANR	1532361	Identifier	saved_env		1532355	1					
ANR	1532362	ExpressionStatement	saved_env = env	9:4:104:119	1532355	1	True				
ANR	1532363	AssignmentExpression	saved_env = env		1532355	0		=			
ANR	1532364	Identifier	saved_env		1532355	0					
ANR	1532365	Identifier	env		1532355	1					
ANR	1532366	ExpressionStatement	env = s	11:4:126:133	1532355	2	True				
ANR	1532367	AssignmentExpression	env = s		1532355	0		=			
ANR	1532368	Identifier	env		1532355	0					
ANR	1532369	Identifier	s		1532355	1					
ANR	1532370	IfStatement	if ( env -> eflags & VM_MASK )		1532355	3					
ANR	1532371	Condition	env -> eflags & VM_MASK	13:8:144:164	1532355	0	True				
ANR	1532372	BitAndExpression	env -> eflags & VM_MASK		1532355	0		&			
ANR	1532373	PtrMemberAccess	env -> eflags		1532355	0					
ANR	1532374	Identifier	env		1532355	0					
ANR	1532375	Identifier	eflags		1532355	1					
ANR	1532376	Identifier	VM_MASK		1532355	1					
ANR	1532377	CompoundStatement		13:8:111:127	1532355	1					
ANR	1532378	IdentifierDeclStatement	SegmentCache * sc ;	15:8:178:194	1532355	0	True				
ANR	1532379	IdentifierDecl	* sc		1532355	0					
ANR	1532380	IdentifierDeclType	SegmentCache *		1532355	0					
ANR	1532381	Identifier	sc		1532355	1					
ANR	1532382	ExpressionStatement	selector &= 0xffff	17:8:205:223	1532355	1	True				
ANR	1532383	AssignmentExpression	selector &= 0xffff		1532355	0		&=			
ANR	1532384	Identifier	selector		1532355	0					
ANR	1532385	PrimaryExpression	0xffff		1532355	1					
ANR	1532386	ExpressionStatement	sc = & env -> seg_cache [ seg_reg ]	19:8:234:263	1532355	2	True				
ANR	1532387	AssignmentExpression	sc = & env -> seg_cache [ seg_reg ]		1532355	0		=			
ANR	1532388	Identifier	sc		1532355	0					
ANR	1532389	UnaryOperationExpression	& env -> seg_cache [ seg_reg ]		1532355	1					
ANR	1532390	UnaryOperator	&		1532355	0					
ANR	1532391	ArrayIndexing	env -> seg_cache [ seg_reg ]		1532355	1					
ANR	1532392	PtrMemberAccess	env -> seg_cache		1532355	0					
ANR	1532393	Identifier	env		1532355	0					
ANR	1532394	Identifier	seg_cache		1532355	1					
ANR	1532395	Identifier	seg_reg		1532355	1					
ANR	1532396	ExpressionStatement	sc -> base = ( void * ) ( selector << 4 )	25:8:387:421	1532355	3	True				
ANR	1532397	AssignmentExpression	sc -> base = ( void * ) ( selector << 4 )		1532355	0		=			
ANR	1532398	PtrMemberAccess	sc -> base		1532355	0					
ANR	1532399	Identifier	sc		1532355	0					
ANR	1532400	Identifier	base		1532355	1					
ANR	1532401	CastExpression	( void * ) ( selector << 4 )		1532355	1					
ANR	1532402	CastTarget	void *		1532355	0					
ANR	1532403	ShiftExpression	selector << 4		1532355	1		<<			
ANR	1532404	Identifier	selector		1532355	0					
ANR	1532405	PrimaryExpression	4		1532355	1					
ANR	1532406	ExpressionStatement	sc -> limit = 0xffff	27:8:432:450	1532355	4	True				
ANR	1532407	AssignmentExpression	sc -> limit = 0xffff		1532355	0		=			
ANR	1532408	PtrMemberAccess	sc -> limit		1532355	0					
ANR	1532409	Identifier	sc		1532355	0					
ANR	1532410	Identifier	limit		1532355	1					
ANR	1532411	PrimaryExpression	0xffff		1532355	1					
ANR	1532412	ExpressionStatement	sc -> seg_32bit = 0	29:8:461:478	1532355	5	True				
ANR	1532413	AssignmentExpression	sc -> seg_32bit = 0		1532355	0		=			
ANR	1532414	PtrMemberAccess	sc -> seg_32bit		1532355	0					
ANR	1532415	Identifier	sc		1532355	0					
ANR	1532416	Identifier	seg_32bit		1532355	1					
ANR	1532417	PrimaryExpression	0		1532355	1					
ANR	1532418	ExpressionStatement	env -> segs [ seg_reg ] = selector	31:8:489:518	1532355	6	True				
ANR	1532419	AssignmentExpression	env -> segs [ seg_reg ] = selector		1532355	0		=			
ANR	1532420	ArrayIndexing	env -> segs [ seg_reg ]		1532355	0					
ANR	1532421	PtrMemberAccess	env -> segs		1532355	0					
ANR	1532422	Identifier	env		1532355	0					
ANR	1532423	Identifier	segs		1532355	1					
ANR	1532424	Identifier	seg_reg		1532355	1					
ANR	1532425	Identifier	selector		1532355	1					
ANR	1532426	ElseStatement	else		1532355	0					
ANR	1532427	CompoundStatement		31:11:465:465	1532355	0					
ANR	1532428	ExpressionStatement	"load_seg ( seg_reg , selector , 0 )"	35:8:543:573	1532355	0	True				
ANR	1532429	CallExpression	"load_seg ( seg_reg , selector , 0 )"		1532355	0					
ANR	1532430	Callee	load_seg		1532355	0					
ANR	1532431	Identifier	load_seg		1532355	0					
ANR	1532432	ArgumentList	seg_reg		1532355	1					
ANR	1532433	Argument	seg_reg		1532355	0					
ANR	1532434	Identifier	seg_reg		1532355	0					
ANR	1532435	Argument	selector		1532355	1					
ANR	1532436	Identifier	selector		1532355	0					
ANR	1532437	Argument	0		1532355	2					
ANR	1532438	PrimaryExpression	0		1532355	0					
ANR	1532439	ExpressionStatement	env = saved_env	39:4:587:602	1532355	4	True				
ANR	1532440	AssignmentExpression	env = saved_env		1532355	0		=			
ANR	1532441	Identifier	env		1532355	0					
ANR	1532442	Identifier	saved_env		1532355	1					
ANR	1532443	ReturnType	void		1532355	1					
ANR	1532444	Identifier	cpu_x86_load_seg		1532355	2					
ANR	1532445	ParameterList	"CPUX86State * s , int seg_reg , int selector"		1532355	3					
ANR	1532446	Parameter	CPUX86State * s	1:22:22:35	1532355	0	True				
ANR	1532447	ParameterType	CPUX86State *		1532355	0					
ANR	1532448	Identifier	s		1532355	1					
ANR	1532449	Parameter	int seg_reg	1:38:38:48	1532355	1	True				
ANR	1532450	ParameterType	int		1532355	0					
ANR	1532451	Identifier	seg_reg		1532355	1					
ANR	1532452	Parameter	int selector	1:51:51:62	1532355	2	True				
ANR	1532453	ParameterType	int		1532355	0					
ANR	1532454	Identifier	selector		1532355	1					
ANR	1532455	CFGEntryNode	ENTRY		1532355		True				
ANR	1532456	CFGExitNode	EXIT		1532355		True				
ANR	1532457	Symbol	sc -> base		1532355						
ANR	1532458	Symbol	* * env		1532355						
ANR	1532459	Symbol	saved_env		1532355						
ANR	1532460	Symbol	* env		1532355						
ANR	1532461	Symbol	* seg_reg		1532355						
ANR	1532462	Symbol	env		1532355						
ANR	1532463	Symbol	env -> segs		1532355						
ANR	1532464	Symbol	VM_MASK		1532355						
ANR	1532465	Symbol	* env -> segs		1532355						
ANR	1532466	Symbol	sc		1532355						
ANR	1532467	Symbol	env -> seg_cache		1532355						
ANR	1532468	Symbol	s		1532355						
ANR	1532469	Symbol	seg_reg		1532355						
ANR	1532470	Symbol	* sc		1532355						
ANR	1532471	Symbol	selector		1532355						
ANR	1532472	Symbol	sc -> limit		1532355						
ANR	1532473	Symbol	env -> eflags		1532355						
ANR	1532474	Symbol	sc -> seg_32bit		1532355						
