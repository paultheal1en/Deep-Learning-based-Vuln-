command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4984814	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ip6_input_0.c								
ANR	4984815	Function	ip6_input	1:0:0:923							
ANR	4984816	FunctionDef	ip6_input (struct mbuf * m)		4984815	0					
ANR	4984817	CompoundStatement		3:0:32:923	4984815	0					
ANR	4984818	IdentifierDeclStatement	struct ip6 * ip6 ;	5:4:39:54	4984815	0	True				
ANR	4984819	IdentifierDecl	* ip6		4984815	0					
ANR	4984820	IdentifierDeclType	struct ip6 *		4984815	0					
ANR	4984821	Identifier	ip6		4984815	1					
ANR	4984822	ExpressionStatement	"DEBUG_CALL ( ""ip6_input"" )"	9:4:63:86	4984815	1	True				
ANR	4984823	CallExpression	"DEBUG_CALL ( ""ip6_input"" )"		4984815	0					
ANR	4984824	Callee	DEBUG_CALL		4984815	0					
ANR	4984825	Identifier	DEBUG_CALL		4984815	0					
ANR	4984826	ArgumentList	"""ip6_input"""		4984815	1					
ANR	4984827	Argument	"""ip6_input"""		4984815	0					
ANR	4984828	PrimaryExpression	"""ip6_input"""		4984815	0					
ANR	4984829	ExpressionStatement	"DEBUG_ARG ( ""m = %lx"" , ( long ) m )"	11:4:93:122	4984815	2	True				
ANR	4984830	CallExpression	"DEBUG_ARG ( ""m = %lx"" , ( long ) m )"		4984815	0					
ANR	4984831	Callee	DEBUG_ARG		4984815	0					
ANR	4984832	Identifier	DEBUG_ARG		4984815	0					
ANR	4984833	ArgumentList	"""m = %lx"""		4984815	1					
ANR	4984834	Argument	"""m = %lx"""		4984815	0					
ANR	4984835	PrimaryExpression	"""m = %lx"""		4984815	0					
ANR	4984836	Argument	( long ) m		4984815	1					
ANR	4984837	CastExpression	( long ) m		4984815	0					
ANR	4984838	CastTarget	long		4984815	0					
ANR	4984839	Identifier	m		4984815	1					
ANR	4984840	ExpressionStatement	"DEBUG_ARG ( ""m_len = %d"" , m -> m_len )"	13:4:129:162	4984815	3	True				
ANR	4984841	CallExpression	"DEBUG_ARG ( ""m_len = %d"" , m -> m_len )"		4984815	0					
ANR	4984842	Callee	DEBUG_ARG		4984815	0					
ANR	4984843	Identifier	DEBUG_ARG		4984815	0					
ANR	4984844	ArgumentList	"""m_len = %d"""		4984815	1					
ANR	4984845	Argument	"""m_len = %d"""		4984815	0					
ANR	4984846	PrimaryExpression	"""m_len = %d"""		4984815	0					
ANR	4984847	Argument	m -> m_len		4984815	1					
ANR	4984848	PtrMemberAccess	m -> m_len		4984815	0					
ANR	4984849	Identifier	m		4984815	0					
ANR	4984850	Identifier	m_len		4984815	1					
ANR	4984851	IfStatement	if ( m -> m_len < sizeof ( struct ip6 ) )		4984815	4					
ANR	4984852	Condition	m -> m_len < sizeof ( struct ip6 )	17:8:175:203	4984815	0	True				
ANR	4984853	RelationalExpression	m -> m_len < sizeof ( struct ip6 )		4984815	0		<			
ANR	4984854	PtrMemberAccess	m -> m_len		4984815	0					
ANR	4984855	Identifier	m		4984815	0					
ANR	4984856	Identifier	m_len		4984815	1					
ANR	4984857	SizeofExpression	sizeof ( struct ip6 )		4984815	1					
ANR	4984858	Sizeof	sizeof		4984815	0					
ANR	4984859	SizeofOperand	struct ip6		4984815	1					
ANR	4984860	CompoundStatement		15:39:173:173	4984815	1					
ANR	4984861	GotoStatement	goto bad ;	19:8:217:225	4984815	0	True				
ANR	4984862	Identifier	bad		4984815	0					
ANR	4984863	Statement	ip6	25:4:241:243	4984815	5	True				
ANR	4984864	Statement	=	25:8:245:245	4984815	6	True				
ANR	4984865	Statement	mtod	25:10:247:250	4984815	7	True				
ANR	4984866	Statement	(	25:14:251:251	4984815	8	True				
ANR	4984867	Statement	m	25:15:252:252	4984815	9	True				
ANR	4984868	Statement	","	25:16:253:253	4984815	10	True				
ANR	4984869	Statement	struct	25:18:255:260	4984815	11	True				
ANR	4984870	Statement	ip6	25:25:262:264	4984815	12	True				
ANR	4984871	Statement	*	25:29:266:266	4984815	13	True				
ANR	4984872	Statement	)	25:30:267:267	4984815	14	True				
ANR	4984873	ExpressionStatement		25:31:268:268	4984815	15	True				
ANR	4984874	IfStatement	if ( ip6 -> ip_v != IP6VERSION )		4984815	16					
ANR	4984875	Condition	ip6 -> ip_v != IP6VERSION	29:8:281:303	4984815	0	True				
ANR	4984876	EqualityExpression	ip6 -> ip_v != IP6VERSION		4984815	0		!=			
ANR	4984877	PtrMemberAccess	ip6 -> ip_v		4984815	0					
ANR	4984878	Identifier	ip6		4984815	0					
ANR	4984879	Identifier	ip_v		4984815	1					
ANR	4984880	Identifier	IP6VERSION		4984815	1					
ANR	4984881	CompoundStatement		27:33:273:273	4984815	1					
ANR	4984882	GotoStatement	goto bad ;	31:8:317:325	4984815	0	True				
ANR	4984883	Identifier	bad		4984815	0					
ANR	4984884	IfStatement	if ( ip6 -> ip_hl == 0 )		4984815	17					
ANR	4984885	Condition	ip6 -> ip_hl == 0	39:8:394:408	4984815	0	True				
ANR	4984886	EqualityExpression	ip6 -> ip_hl == 0		4984815	0		==			
ANR	4984887	PtrMemberAccess	ip6 -> ip_hl		4984815	0					
ANR	4984888	Identifier	ip6		4984815	0					
ANR	4984889	Identifier	ip_hl		4984815	1					
ANR	4984890	PrimaryExpression	0		4984815	1					
ANR	4984891	CompoundStatement		37:25:378:378	4984815	1					
ANR	4984892	GotoStatement	goto bad ;	43:8:501:509	4984815	0	True				
ANR	4984893	Identifier	bad		4984815	0					
ANR	4984894	SwitchStatement	switch ( ip6 -> ip_nh )		4984815	18					
ANR	4984895	Condition	ip6 -> ip_nh	55:12:598:607	4984815	0	True				
ANR	4984896	PtrMemberAccess	ip6 -> ip_nh		4984815	0					
ANR	4984897	Identifier	ip6		4984815	0					
ANR	4984898	Identifier	ip_nh		4984815	1					
ANR	4984899	CompoundStatement		53:24:577:577	4984815	1					
ANR	4984900	Label	case IPPROTO_TCP :	57:4:617:633	4984815	0	True				
ANR	4984901	Identifier	IPPROTO_TCP		4984815	0					
ANR	4984902	BreakStatement	break ;	61:8:700:705	4984815	1	True				
ANR	4984903	Label	case IPPROTO_UDP :	63:4:712:728	4984815	2	True				
ANR	4984904	Identifier	IPPROTO_UDP		4984815	0					
ANR	4984905	BreakStatement	break ;	67:8:772:777	4984815	3	True				
ANR	4984906	Label	case IPPROTO_ICMPV6 :	69:4:784:803	4984815	4	True				
ANR	4984907	Identifier	IPPROTO_ICMPV6		4984815	0					
ANR	4984908	ExpressionStatement	icmp6_input ( m )	71:8:814:828	4984815	5	True				
ANR	4984909	CallExpression	icmp6_input ( m )		4984815	0					
ANR	4984910	Callee	icmp6_input		4984815	0					
ANR	4984911	Identifier	icmp6_input		4984815	0					
ANR	4984912	ArgumentList	m		4984815	1					
ANR	4984913	Argument	m		4984815	0					
ANR	4984914	Identifier	m		4984815	0					
ANR	4984915	BreakStatement	break ;	73:8:839:844	4984815	6	True				
ANR	4984916	Label	default :	75:4:851:858	4984815	7	True				
ANR	4984917	Identifier	default		4984815	0					
ANR	4984918	ExpressionStatement	m_free ( m )	77:8:869:878	4984815	8	True				
ANR	4984919	CallExpression	m_free ( m )		4984815	0					
ANR	4984920	Callee	m_free		4984815	0					
ANR	4984921	Identifier	m_free		4984815	0					
ANR	4984922	ArgumentList	m		4984815	1					
ANR	4984923	Argument	m		4984815	0					
ANR	4984924	Identifier	m		4984815	0					
ANR	4984925	ReturnStatement	return ;	81:4:892:898	4984815	19	True				
ANR	4984926	Label	bad :	83:0:901:904	4984815	20	True				
ANR	4984927	Identifier	bad		4984815	0					
ANR	4984928	ExpressionStatement	m_free ( m )	85:4:911:920	4984815	21	True				
ANR	4984929	CallExpression	m_free ( m )		4984815	0					
ANR	4984930	Callee	m_free		4984815	0					
ANR	4984931	Identifier	m_free		4984815	0					
ANR	4984932	ArgumentList	m		4984815	1					
ANR	4984933	Argument	m		4984815	0					
ANR	4984934	Identifier	m		4984815	0					
ANR	4984935	ReturnType	void		4984815	1					
ANR	4984936	Identifier	ip6_input		4984815	2					
ANR	4984937	ParameterList	struct mbuf * m		4984815	3					
ANR	4984938	Parameter	struct mbuf * m	1:15:15:28	4984815	0	True				
ANR	4984939	ParameterType	struct mbuf *		4984815	0					
ANR	4984940	Identifier	m		4984815	1					
ANR	4984941	CFGEntryNode	ENTRY		4984815		True				
ANR	4984942	CFGExitNode	EXIT		4984815		True				
ANR	4984943	Symbol	ip6 -> ip_v		4984815						
ANR	4984944	Symbol	ip6 -> ip_nh		4984815						
ANR	4984945	Symbol	m -> m_len		4984815						
ANR	4984946	Symbol	* ip6		4984815						
ANR	4984947	Symbol	* m		4984815						
ANR	4984948	Symbol	ip6 -> ip_hl		4984815						
ANR	4984949	Symbol	m		4984815						
ANR	4984950	Symbol	IP6VERSION		4984815						
ANR	4984951	Symbol	ip6		4984815						
