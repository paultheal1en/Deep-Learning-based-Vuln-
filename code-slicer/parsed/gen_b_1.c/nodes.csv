command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4090105	File	/home/p4ultr4n/workplace/ReVeal/raw_code/gen_b_1.c								
ANR	4090106	Function	gen_b	1:0:0:520							
ANR	4090107	FunctionDef	gen_b (DisasContext * ctx)		4090106	0					
ANR	4090108	CompoundStatement		3:0:38:520	4090106	0					
ANR	4090109	IdentifierDeclStatement	"target_ulong li , target ;"	5:4:45:68	4090106	0	True				
ANR	4090110	IdentifierDecl	li		4090106	0					
ANR	4090111	IdentifierDeclType	target_ulong		4090106	0					
ANR	4090112	Identifier	li		4090106	1					
ANR	4090113	IdentifierDecl	target		4090106	1					
ANR	4090114	IdentifierDeclType	target_ulong		4090106	0					
ANR	4090115	Identifier	target		4090106	1					
ANR	4090116	ExpressionStatement	ctx -> exception = POWERPC_EXCP_BRANCH	9:4:77:113	4090106	1	True				
ANR	4090117	AssignmentExpression	ctx -> exception = POWERPC_EXCP_BRANCH		4090106	0		=			
ANR	4090118	PtrMemberAccess	ctx -> exception		4090106	0					
ANR	4090119	Identifier	ctx		4090106	0					
ANR	4090120	Identifier	exception		4090106	1					
ANR	4090121	Identifier	POWERPC_EXCP_BRANCH		4090106	1					
ANR	4090122	IfStatement	if ( ctx -> sf_mode )		4090106	2					
ANR	4090123	Condition	ctx -> sf_mode	15:8:177:188	4090106	0	True				
ANR	4090124	PtrMemberAccess	ctx -> sf_mode		4090106	0					
ANR	4090125	Identifier	ctx		4090106	0					
ANR	4090126	Identifier	sf_mode		4090106	1					
ANR	4090127	ExpressionStatement	li = ( ( int64_t ) LI ( ctx -> opcode ) << 38 ) >> 38	17:8:200:243	4090106	1	True				
ANR	4090128	AssignmentExpression	li = ( ( int64_t ) LI ( ctx -> opcode ) << 38 ) >> 38		4090106	0		=			
ANR	4090129	Identifier	li		4090106	0					
ANR	4090130	ShiftExpression	( ( int64_t ) LI ( ctx -> opcode ) << 38 ) >> 38		4090106	1		>>			
ANR	4090131	ShiftExpression	( int64_t ) LI ( ctx -> opcode ) << 38		4090106	0		<<			
ANR	4090132	CastExpression	( int64_t ) LI ( ctx -> opcode )		4090106	0					
ANR	4090133	CastTarget	int64_t		4090106	0					
ANR	4090134	CallExpression	LI ( ctx -> opcode )		4090106	1					
ANR	4090135	Callee	LI		4090106	0					
ANR	4090136	Identifier	LI		4090106	0					
ANR	4090137	ArgumentList	ctx -> opcode		4090106	1					
ANR	4090138	Argument	ctx -> opcode		4090106	0					
ANR	4090139	PtrMemberAccess	ctx -> opcode		4090106	0					
ANR	4090140	Identifier	ctx		4090106	0					
ANR	4090141	Identifier	opcode		4090106	1					
ANR	4090142	PrimaryExpression	38		4090106	1					
ANR	4090143	PrimaryExpression	38		4090106	1					
ANR	4090144	ElseStatement	else		4090106	0					
ANR	4090145	ExpressionStatement	li = ( ( int32_t ) LI ( ctx -> opcode ) << 6 ) >> 6	23:8:272:313	4090106	0	True				
ANR	4090146	AssignmentExpression	li = ( ( int32_t ) LI ( ctx -> opcode ) << 6 ) >> 6		4090106	0		=			
ANR	4090147	Identifier	li		4090106	0					
ANR	4090148	ShiftExpression	( ( int32_t ) LI ( ctx -> opcode ) << 6 ) >> 6		4090106	1		>>			
ANR	4090149	ShiftExpression	( int32_t ) LI ( ctx -> opcode ) << 6		4090106	0		<<			
ANR	4090150	CastExpression	( int32_t ) LI ( ctx -> opcode )		4090106	0					
ANR	4090151	CastTarget	int32_t		4090106	0					
ANR	4090152	CallExpression	LI ( ctx -> opcode )		4090106	1					
ANR	4090153	Callee	LI		4090106	0					
ANR	4090154	Identifier	LI		4090106	0					
ANR	4090155	ArgumentList	ctx -> opcode		4090106	1					
ANR	4090156	Argument	ctx -> opcode		4090106	0					
ANR	4090157	PtrMemberAccess	ctx -> opcode		4090106	0					
ANR	4090158	Identifier	ctx		4090106	0					
ANR	4090159	Identifier	opcode		4090106	1					
ANR	4090160	PrimaryExpression	6		4090106	1					
ANR	4090161	PrimaryExpression	6		4090106	1					
ANR	4090162	IfStatement	if ( likely ( AA ( ctx -> opcode ) == 0 ) )		4090106	3					
ANR	4090163	Condition	likely ( AA ( ctx -> opcode ) == 0 )	25:8:324:351	4090106	0	True				
ANR	4090164	CallExpression	likely ( AA ( ctx -> opcode ) == 0 )		4090106	0					
ANR	4090165	Callee	likely		4090106	0					
ANR	4090166	Identifier	likely		4090106	0					
ANR	4090167	ArgumentList	AA ( ctx -> opcode ) == 0		4090106	1					
ANR	4090168	Argument	AA ( ctx -> opcode ) == 0		4090106	0					
ANR	4090169	EqualityExpression	AA ( ctx -> opcode ) == 0		4090106	0		==			
ANR	4090170	CallExpression	AA ( ctx -> opcode )		4090106	0					
ANR	4090171	Callee	AA		4090106	0					
ANR	4090172	Identifier	AA		4090106	0					
ANR	4090173	ArgumentList	ctx -> opcode		4090106	1					
ANR	4090174	Argument	ctx -> opcode		4090106	0					
ANR	4090175	PtrMemberAccess	ctx -> opcode		4090106	0					
ANR	4090176	Identifier	ctx		4090106	0					
ANR	4090177	Identifier	opcode		4090106	1					
ANR	4090178	PrimaryExpression	0		4090106	1					
ANR	4090179	ExpressionStatement	target = ctx -> nip + li - 4	27:8:363:389	4090106	1	True				
ANR	4090180	AssignmentExpression	target = ctx -> nip + li - 4		4090106	0		=			
ANR	4090181	Identifier	target		4090106	0					
ANR	4090182	AdditiveExpression	ctx -> nip + li - 4		4090106	1		+			
ANR	4090183	PtrMemberAccess	ctx -> nip		4090106	0					
ANR	4090184	Identifier	ctx		4090106	0					
ANR	4090185	Identifier	nip		4090106	1					
ANR	4090186	AdditiveExpression	li - 4		4090106	1		-			
ANR	4090187	Identifier	li		4090106	0					
ANR	4090188	PrimaryExpression	4		4090106	1					
ANR	4090189	ElseStatement	else		4090106	0					
ANR	4090190	ExpressionStatement	target = li	31:8:410:421	4090106	0	True				
ANR	4090191	AssignmentExpression	target = li		4090106	0		=			
ANR	4090192	Identifier	target		4090106	0					
ANR	4090193	Identifier	li		4090106	1					
ANR	4090194	IfStatement	if ( LK ( ctx -> opcode ) )		4090106	4					
ANR	4090195	Condition	LK ( ctx -> opcode )	33:8:432:446	4090106	0	True				
ANR	4090196	CallExpression	LK ( ctx -> opcode )		4090106	0					
ANR	4090197	Callee	LK		4090106	0					
ANR	4090198	Identifier	LK		4090106	0					
ANR	4090199	ArgumentList	ctx -> opcode		4090106	1					
ANR	4090200	Argument	ctx -> opcode		4090106	0					
ANR	4090201	PtrMemberAccess	ctx -> opcode		4090106	0					
ANR	4090202	Identifier	ctx		4090106	0					
ANR	4090203	Identifier	opcode		4090106	1					
ANR	4090204	ExpressionStatement	"gen_setlr ( ctx , ctx -> nip )"	35:8:458:482	4090106	1	True				
ANR	4090205	CallExpression	"gen_setlr ( ctx , ctx -> nip )"		4090106	0					
ANR	4090206	Callee	gen_setlr		4090106	0					
ANR	4090207	Identifier	gen_setlr		4090106	0					
ANR	4090208	ArgumentList	ctx		4090106	1					
ANR	4090209	Argument	ctx		4090106	0					
ANR	4090210	Identifier	ctx		4090106	0					
ANR	4090211	Argument	ctx -> nip		4090106	1					
ANR	4090212	PtrMemberAccess	ctx -> nip		4090106	0					
ANR	4090213	Identifier	ctx		4090106	0					
ANR	4090214	Identifier	nip		4090106	1					
ANR	4090215	ExpressionStatement	"gen_goto_tb ( ctx , 0 , target )"	38:4:490:517	4090106	5	True				
ANR	4090216	CallExpression	"gen_goto_tb ( ctx , 0 , target )"		4090106	0					
ANR	4090217	Callee	gen_goto_tb		4090106	0					
ANR	4090218	Identifier	gen_goto_tb		4090106	0					
ANR	4090219	ArgumentList	ctx		4090106	1					
ANR	4090220	Argument	ctx		4090106	0					
ANR	4090221	Identifier	ctx		4090106	0					
ANR	4090222	Argument	0		4090106	1					
ANR	4090223	PrimaryExpression	0		4090106	0					
ANR	4090224	Argument	target		4090106	2					
ANR	4090225	Identifier	target		4090106	0					
ANR	4090226	ReturnType	static void		4090106	1					
ANR	4090227	Identifier	gen_b		4090106	2					
ANR	4090228	ParameterList	DisasContext * ctx		4090106	3					
ANR	4090229	Parameter	DisasContext * ctx	1:18:18:34	4090106	0	True				
ANR	4090230	ParameterType	DisasContext *		4090106	0					
ANR	4090231	Identifier	ctx		4090106	1					
ANR	4090232	CFGEntryNode	ENTRY		4090106		True				
ANR	4090233	CFGExitNode	EXIT		4090106		True				
ANR	4090234	Symbol	AA		4090106						
ANR	4090235	Symbol	likely		4090106						
ANR	4090236	Symbol	POWERPC_EXCP_BRANCH		4090106						
ANR	4090237	Symbol	ctx -> opcode		4090106						
ANR	4090238	Symbol	ctx		4090106						
ANR	4090239	Symbol	* ctx		4090106						
ANR	4090240	Symbol	target		4090106						
ANR	4090241	Symbol	ctx -> sf_mode		4090106						
ANR	4090242	Symbol	li		4090106						
ANR	4090243	Symbol	LI		4090106						
ANR	4090244	Symbol	ctx -> exception		4090106						
ANR	4090245	Symbol	ctx -> nip		4090106						
ANR	4090246	Symbol	LK		4090106						
