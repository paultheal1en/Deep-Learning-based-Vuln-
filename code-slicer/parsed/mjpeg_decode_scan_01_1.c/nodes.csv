command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5511486	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mjpeg_decode_scan_01_1.c								
ANR	5511487	Function	mjpeg_decode_scan	1:0:0:3439							
ANR	5511488	FunctionDef	"mjpeg_decode_scan (MJpegDecodeContext * s , int nb_components , int Ah , int Al)"		5511487	0					
ANR	5511489	CompoundStatement		1:86:86:3439	5511487	0					
ANR	5511490	IdentifierDeclStatement	"int i , mb_x , mb_y ;"	3:4:93:110	5511487	0	True				
ANR	5511491	IdentifierDecl	i		5511487	0					
ANR	5511492	IdentifierDeclType	int		5511487	0					
ANR	5511493	Identifier	i		5511487	1					
ANR	5511494	IdentifierDecl	mb_x		5511487	1					
ANR	5511495	IdentifierDeclType	int		5511487	0					
ANR	5511496	Identifier	mb_x		5511487	1					
ANR	5511497	IdentifierDecl	mb_y		5511487	2					
ANR	5511498	IdentifierDeclType	int		5511487	0					
ANR	5511499	Identifier	mb_y		5511487	1					
ANR	5511500	IdentifierDeclStatement	uint8_t * data [ MAX_COMPONENTS ] ;	5:4:117:146	5511487	1	True				
ANR	5511501	IdentifierDecl	* data [ MAX_COMPONENTS ]		5511487	0					
ANR	5511502	IdentifierDeclType	uint8_t * [ MAX_COMPONENTS ]		5511487	0					
ANR	5511503	Identifier	data		5511487	1					
ANR	5511504	Identifier	MAX_COMPONENTS		5511487	2					
ANR	5511505	IdentifierDeclStatement	int linesize [ MAX_COMPONENTS ] ;	7:4:153:181	5511487	2	True				
ANR	5511506	IdentifierDecl	linesize [ MAX_COMPONENTS ]		5511487	0					
ANR	5511507	IdentifierDeclType	int [ MAX_COMPONENTS ]		5511487	0					
ANR	5511508	Identifier	linesize		5511487	1					
ANR	5511509	Identifier	MAX_COMPONENTS		5511487	2					
ANR	5511510	ForStatement	for ( i = 0 ; i < nb_components ; i ++ )		5511487	3					
ANR	5511511	ForInit	i = 0 ;	11:8:194:197	5511487	0	True				
ANR	5511512	AssignmentExpression	i = 0		5511487	0		=			
ANR	5511513	Identifier	i		5511487	0					
ANR	5511514	PrimaryExpression	0		5511487	1					
ANR	5511515	Condition	i < nb_components	11:13:199:215	5511487	1	True				
ANR	5511516	RelationalExpression	i < nb_components		5511487	0		<			
ANR	5511517	Identifier	i		5511487	0					
ANR	5511518	Identifier	nb_components		5511487	1					
ANR	5511519	PostIncDecOperationExpression	i ++	11:32:218:220	5511487	2	True				
ANR	5511520	Identifier	i		5511487	0					
ANR	5511521	IncDec	++		5511487	1					
ANR	5511522	CompoundStatement		13:8:147:171	5511487	3					
ANR	5511523	IdentifierDeclStatement	int c = s -> comp_index [ i ] ;	13:8:234:258	5511487	0	True				
ANR	5511524	IdentifierDecl	c = s -> comp_index [ i ]		5511487	0					
ANR	5511525	IdentifierDeclType	int		5511487	0					
ANR	5511526	Identifier	c		5511487	1					
ANR	5511527	AssignmentExpression	c = s -> comp_index [ i ]		5511487	2		=			
ANR	5511528	Identifier	c		5511487	0					
ANR	5511529	ArrayIndexing	s -> comp_index [ i ]		5511487	1					
ANR	5511530	PtrMemberAccess	s -> comp_index		5511487	0					
ANR	5511531	Identifier	s		5511487	0					
ANR	5511532	Identifier	comp_index		5511487	1					
ANR	5511533	Identifier	i		5511487	1					
ANR	5511534	ExpressionStatement	data [ c ] = s -> picture . data [ c ]	15:8:269:297	5511487	1	True				
ANR	5511535	AssignmentExpression	data [ c ] = s -> picture . data [ c ]		5511487	0		=			
ANR	5511536	ArrayIndexing	data [ c ]		5511487	0					
ANR	5511537	Identifier	data		5511487	0					
ANR	5511538	Identifier	c		5511487	1					
ANR	5511539	ArrayIndexing	s -> picture . data [ c ]		5511487	1					
ANR	5511540	MemberAccess	s -> picture . data		5511487	0					
ANR	5511541	PtrMemberAccess	s -> picture		5511487	0					
ANR	5511542	Identifier	s		5511487	0					
ANR	5511543	Identifier	picture		5511487	1					
ANR	5511544	Identifier	data		5511487	1					
ANR	5511545	Identifier	c		5511487	1					
ANR	5511546	ExpressionStatement	linesize [ c ] = s -> linesize [ c ]	17:8:308:334	5511487	2	True				
ANR	5511547	AssignmentExpression	linesize [ c ] = s -> linesize [ c ]		5511487	0		=			
ANR	5511548	ArrayIndexing	linesize [ c ]		5511487	0					
ANR	5511549	Identifier	linesize		5511487	0					
ANR	5511550	Identifier	c		5511487	1					
ANR	5511551	ArrayIndexing	s -> linesize [ c ]		5511487	1					
ANR	5511552	PtrMemberAccess	s -> linesize		5511487	0					
ANR	5511553	Identifier	s		5511487	0					
ANR	5511554	Identifier	linesize		5511487	1					
ANR	5511555	Identifier	c		5511487	1					
ANR	5511556	ExpressionStatement	s -> coefs_finished [ c ] |= 1	19:8:345:370	5511487	3	True				
ANR	5511557	AssignmentExpression	s -> coefs_finished [ c ] |= 1		5511487	0		|=			
ANR	5511558	ArrayIndexing	s -> coefs_finished [ c ]		5511487	0					
ANR	5511559	PtrMemberAccess	s -> coefs_finished		5511487	0					
ANR	5511560	Identifier	s		5511487	0					
ANR	5511561	Identifier	coefs_finished		5511487	1					
ANR	5511562	Identifier	c		5511487	1					
ANR	5511563	PrimaryExpression	1		5511487	1					
ANR	5511564	IfStatement	if ( s -> flipped )		5511487	4					
ANR	5511565	Condition	s -> flipped	21:11:384:393	5511487	0	True				
ANR	5511566	PtrMemberAccess	s -> flipped		5511487	0					
ANR	5511567	Identifier	s		5511487	0					
ANR	5511568	Identifier	flipped		5511487	1					
ANR	5511569	CompoundStatement		21:23:309:309	5511487	1					
ANR	5511570	ExpressionStatement	assert ( ! ( s -> avctx -> flags & CODEC_FLAG_EMU_EDGE ) )	25:12:479:527	5511487	0	True				
ANR	5511571	CallExpression	assert ( ! ( s -> avctx -> flags & CODEC_FLAG_EMU_EDGE ) )		5511487	0					
ANR	5511572	Callee	assert		5511487	0					
ANR	5511573	Identifier	assert		5511487	0					
ANR	5511574	ArgumentList	! ( s -> avctx -> flags & CODEC_FLAG_EMU_EDGE )		5511487	1					
ANR	5511575	Argument	! ( s -> avctx -> flags & CODEC_FLAG_EMU_EDGE )		5511487	0					
ANR	5511576	UnaryOperationExpression	! ( s -> avctx -> flags & CODEC_FLAG_EMU_EDGE )		5511487	0					
ANR	5511577	UnaryOperator	!		5511487	0					
ANR	5511578	BitAndExpression	s -> avctx -> flags & CODEC_FLAG_EMU_EDGE		5511487	1		&			
ANR	5511579	PtrMemberAccess	s -> avctx -> flags		5511487	0					
ANR	5511580	PtrMemberAccess	s -> avctx		5511487	0					
ANR	5511581	Identifier	s		5511487	0					
ANR	5511582	Identifier	avctx		5511487	1					
ANR	5511583	Identifier	flags		5511487	1					
ANR	5511584	Identifier	CODEC_FLAG_EMU_EDGE		5511487	1					
ANR	5511585	ExpressionStatement	data [ c ] += ( linesize [ c ] * ( s -> v_scount [ i ] * ( 8 * s -> mb_height - ( ( s -> height / s -> v_max ) & 7 ) ) - 1 ) )	27:12:542:637	5511487	1	True				
ANR	5511586	AssignmentExpression	data [ c ] += ( linesize [ c ] * ( s -> v_scount [ i ] * ( 8 * s -> mb_height - ( ( s -> height / s -> v_max ) & 7 ) ) - 1 ) )		5511487	0		+=			
ANR	5511587	ArrayIndexing	data [ c ]		5511487	0					
ANR	5511588	Identifier	data		5511487	0					
ANR	5511589	Identifier	c		5511487	1					
ANR	5511590	MultiplicativeExpression	linesize [ c ] * ( s -> v_scount [ i ] * ( 8 * s -> mb_height - ( ( s -> height / s -> v_max ) & 7 ) ) - 1 )		5511487	1		*			
ANR	5511591	ArrayIndexing	linesize [ c ]		5511487	0					
ANR	5511592	Identifier	linesize		5511487	0					
ANR	5511593	Identifier	c		5511487	1					
ANR	5511594	AdditiveExpression	s -> v_scount [ i ] * ( 8 * s -> mb_height - ( ( s -> height / s -> v_max ) & 7 ) ) - 1		5511487	1		-			
ANR	5511595	MultiplicativeExpression	s -> v_scount [ i ] * ( 8 * s -> mb_height - ( ( s -> height / s -> v_max ) & 7 ) )		5511487	0		*			
ANR	5511596	ArrayIndexing	s -> v_scount [ i ]		5511487	0					
ANR	5511597	PtrMemberAccess	s -> v_scount		5511487	0					
ANR	5511598	Identifier	s		5511487	0					
ANR	5511599	Identifier	v_scount		5511487	1					
ANR	5511600	Identifier	i		5511487	1					
ANR	5511601	AdditiveExpression	8 * s -> mb_height - ( ( s -> height / s -> v_max ) & 7 )		5511487	1		-			
ANR	5511602	MultiplicativeExpression	8 * s -> mb_height		5511487	0		*			
ANR	5511603	PrimaryExpression	8		5511487	0					
ANR	5511604	PtrMemberAccess	s -> mb_height		5511487	1					
ANR	5511605	Identifier	s		5511487	0					
ANR	5511606	Identifier	mb_height		5511487	1					
ANR	5511607	BitAndExpression	( s -> height / s -> v_max ) & 7		5511487	1		&			
ANR	5511608	MultiplicativeExpression	s -> height / s -> v_max		5511487	0		/			
ANR	5511609	PtrMemberAccess	s -> height		5511487	0					
ANR	5511610	Identifier	s		5511487	0					
ANR	5511611	Identifier	height		5511487	1					
ANR	5511612	PtrMemberAccess	s -> v_max		5511487	1					
ANR	5511613	Identifier	s		5511487	0					
ANR	5511614	Identifier	v_max		5511487	1					
ANR	5511615	PrimaryExpression	7		5511487	1					
ANR	5511616	PrimaryExpression	1		5511487	1					
ANR	5511617	ExpressionStatement	linesize [ c ] *= - 1	29:12:652:669	5511487	2	True				
ANR	5511618	AssignmentExpression	linesize [ c ] *= - 1		5511487	0		*=			
ANR	5511619	ArrayIndexing	linesize [ c ]		5511487	0					
ANR	5511620	Identifier	linesize		5511487	0					
ANR	5511621	Identifier	c		5511487	1					
ANR	5511622	UnaryOperationExpression	- 1		5511487	1					
ANR	5511623	UnaryOperator	-		5511487	0					
ANR	5511624	PrimaryExpression	1		5511487	1					
ANR	5511625	ForStatement	for ( mb_y = 0 ; mb_y < s -> mb_height ; mb_y ++ )		5511487	4					
ANR	5511626	ForInit	mb_y = 0 ;	37:8:700:708	5511487	0	True				
ANR	5511627	AssignmentExpression	mb_y = 0		5511487	0		=			
ANR	5511628	Identifier	mb_y		5511487	0					
ANR	5511629	PrimaryExpression	0		5511487	1					
ANR	5511630	Condition	mb_y < s -> mb_height	37:18:710:728	5511487	1	True				
ANR	5511631	RelationalExpression	mb_y < s -> mb_height		5511487	0		<			
ANR	5511632	Identifier	mb_y		5511487	0					
ANR	5511633	PtrMemberAccess	s -> mb_height		5511487	1					
ANR	5511634	Identifier	s		5511487	0					
ANR	5511635	Identifier	mb_height		5511487	1					
ANR	5511636	PostIncDecOperationExpression	mb_y ++	37:39:731:736	5511487	2	True				
ANR	5511637	Identifier	mb_y		5511487	0					
ANR	5511638	IncDec	++		5511487	1					
ANR	5511639	CompoundStatement		37:47:652:652	5511487	3					
ANR	5511640	ForStatement	for ( mb_x = 0 ; mb_x < s -> mb_width ; mb_x ++ )		5511487	0					
ANR	5511641	ForInit	mb_x = 0 ;	39:12:754:762	5511487	0	True				
ANR	5511642	AssignmentExpression	mb_x = 0		5511487	0		=			
ANR	5511643	Identifier	mb_x		5511487	0					
ANR	5511644	PrimaryExpression	0		5511487	1					
ANR	5511645	Condition	mb_x < s -> mb_width	39:22:764:781	5511487	1	True				
ANR	5511646	RelationalExpression	mb_x < s -> mb_width		5511487	0		<			
ANR	5511647	Identifier	mb_x		5511487	0					
ANR	5511648	PtrMemberAccess	s -> mb_width		5511487	1					
ANR	5511649	Identifier	s		5511487	0					
ANR	5511650	Identifier	mb_width		5511487	1					
ANR	5511651	PostIncDecOperationExpression	mb_x ++	39:42:784:789	5511487	2	True				
ANR	5511652	Identifier	mb_x		5511487	0					
ANR	5511653	IncDec	++		5511487	1					
ANR	5511654	CompoundStatement		39:50:705:705	5511487	3					
ANR	5511655	IfStatement	if ( s -> restart_interval && ! s -> restart_count )		5511487	0					
ANR	5511656	Condition	s -> restart_interval && ! s -> restart_count	41:16:811:850	5511487	0	True				
ANR	5511657	AndExpression	s -> restart_interval && ! s -> restart_count		5511487	0		&&			
ANR	5511658	PtrMemberAccess	s -> restart_interval		5511487	0					
ANR	5511659	Identifier	s		5511487	0					
ANR	5511660	Identifier	restart_interval		5511487	1					
ANR	5511661	UnaryOperationExpression	! s -> restart_count		5511487	1					
ANR	5511662	UnaryOperator	!		5511487	0					
ANR	5511663	PtrMemberAccess	s -> restart_count		5511487	1					
ANR	5511664	Identifier	s		5511487	0					
ANR	5511665	Identifier	restart_count		5511487	1					
ANR	5511666	ExpressionStatement	s -> restart_count = s -> restart_interval	43:16:870:908	5511487	1	True				
ANR	5511667	AssignmentExpression	s -> restart_count = s -> restart_interval		5511487	0		=			
ANR	5511668	PtrMemberAccess	s -> restart_count		5511487	0					
ANR	5511669	Identifier	s		5511487	0					
ANR	5511670	Identifier	restart_count		5511487	1					
ANR	5511671	PtrMemberAccess	s -> restart_interval		5511487	1					
ANR	5511672	Identifier	s		5511487	0					
ANR	5511673	Identifier	restart_interval		5511487	1					
ANR	5511674	ForStatement	for ( i = 0 ; i < nb_components ; i ++ )		5511487	1					
ANR	5511675	ForInit	i = 0 ;	47:16:929:932	5511487	0	True				
ANR	5511676	AssignmentExpression	i = 0		5511487	0		=			
ANR	5511677	Identifier	i		5511487	0					
ANR	5511678	PrimaryExpression	0		5511487	1					
ANR	5511679	Condition	i < nb_components	47:20:933:947	5511487	1	True				
ANR	5511680	RelationalExpression	i < nb_components		5511487	0		<			
ANR	5511681	Identifier	i		5511487	0					
ANR	5511682	Identifier	nb_components		5511487	1					
ANR	5511683	PostIncDecOperationExpression	i ++	47:36:949:951	5511487	2	True				
ANR	5511684	Identifier	i		5511487	0					
ANR	5511685	IncDec	++		5511487	1					
ANR	5511686	CompoundStatement		51:16:917:940	5511487	3					
ANR	5511687	IdentifierDeclStatement	uint8_t * ptr ;	49:16:973:985	5511487	0	True				
ANR	5511688	IdentifierDecl	* ptr		5511487	0					
ANR	5511689	IdentifierDeclType	uint8_t *		5511487	0					
ANR	5511690	Identifier	ptr		5511487	1					
ANR	5511691	IdentifierDeclStatement	"int n , h , v , x , y , c , j ;"	51:16:1004:1027	5511487	1	True				
ANR	5511692	IdentifierDecl	n		5511487	0					
ANR	5511693	IdentifierDeclType	int		5511487	0					
ANR	5511694	Identifier	n		5511487	1					
ANR	5511695	IdentifierDecl	h		5511487	1					
ANR	5511696	IdentifierDeclType	int		5511487	0					
ANR	5511697	Identifier	h		5511487	1					
ANR	5511698	IdentifierDecl	v		5511487	2					
ANR	5511699	IdentifierDeclType	int		5511487	0					
ANR	5511700	Identifier	v		5511487	1					
ANR	5511701	IdentifierDecl	x		5511487	3					
ANR	5511702	IdentifierDeclType	int		5511487	0					
ANR	5511703	Identifier	x		5511487	1					
ANR	5511704	IdentifierDecl	y		5511487	4					
ANR	5511705	IdentifierDeclType	int		5511487	0					
ANR	5511706	Identifier	y		5511487	1					
ANR	5511707	IdentifierDecl	c		5511487	5					
ANR	5511708	IdentifierDeclType	int		5511487	0					
ANR	5511709	Identifier	c		5511487	1					
ANR	5511710	IdentifierDecl	j		5511487	6					
ANR	5511711	IdentifierDeclType	int		5511487	0					
ANR	5511712	Identifier	j		5511487	1					
ANR	5511713	ExpressionStatement	n = s -> nb_blocks [ i ]	53:16:1046:1065	5511487	2	True				
ANR	5511714	AssignmentExpression	n = s -> nb_blocks [ i ]		5511487	0		=			
ANR	5511715	Identifier	n		5511487	0					
ANR	5511716	ArrayIndexing	s -> nb_blocks [ i ]		5511487	1					
ANR	5511717	PtrMemberAccess	s -> nb_blocks		5511487	0					
ANR	5511718	Identifier	s		5511487	0					
ANR	5511719	Identifier	nb_blocks		5511487	1					
ANR	5511720	Identifier	i		5511487	1					
ANR	5511721	ExpressionStatement	c = s -> comp_index [ i ]	55:16:1084:1104	5511487	3	True				
ANR	5511722	AssignmentExpression	c = s -> comp_index [ i ]		5511487	0		=			
ANR	5511723	Identifier	c		5511487	0					
ANR	5511724	ArrayIndexing	s -> comp_index [ i ]		5511487	1					
ANR	5511725	PtrMemberAccess	s -> comp_index		5511487	0					
ANR	5511726	Identifier	s		5511487	0					
ANR	5511727	Identifier	comp_index		5511487	1					
ANR	5511728	Identifier	i		5511487	1					
ANR	5511729	ExpressionStatement	h = s -> h_scount [ i ]	57:16:1123:1141	5511487	4	True				
ANR	5511730	AssignmentExpression	h = s -> h_scount [ i ]		5511487	0		=			
ANR	5511731	Identifier	h		5511487	0					
ANR	5511732	ArrayIndexing	s -> h_scount [ i ]		5511487	1					
ANR	5511733	PtrMemberAccess	s -> h_scount		5511487	0					
ANR	5511734	Identifier	s		5511487	0					
ANR	5511735	Identifier	h_scount		5511487	1					
ANR	5511736	Identifier	i		5511487	1					
ANR	5511737	ExpressionStatement	v = s -> v_scount [ i ]	59:16:1160:1178	5511487	5	True				
ANR	5511738	AssignmentExpression	v = s -> v_scount [ i ]		5511487	0		=			
ANR	5511739	Identifier	v		5511487	0					
ANR	5511740	ArrayIndexing	s -> v_scount [ i ]		5511487	1					
ANR	5511741	PtrMemberAccess	s -> v_scount		5511487	0					
ANR	5511742	Identifier	s		5511487	0					
ANR	5511743	Identifier	v_scount		5511487	1					
ANR	5511744	Identifier	i		5511487	1					
ANR	5511745	ExpressionStatement	x = 0	61:16:1197:1202	5511487	6	True				
ANR	5511746	AssignmentExpression	x = 0		5511487	0		=			
ANR	5511747	Identifier	x		5511487	0					
ANR	5511748	PrimaryExpression	0		5511487	1					
ANR	5511749	ExpressionStatement	y = 0	63:16:1221:1226	5511487	7	True				
ANR	5511750	AssignmentExpression	y = 0		5511487	0		=			
ANR	5511751	Identifier	y		5511487	0					
ANR	5511752	PrimaryExpression	0		5511487	1					
ANR	5511753	ForStatement	for ( j = 0 ; j < n ; j ++ )		5511487	8					
ANR	5511754	ForInit	j = 0 ;	65:20:1249:1252	5511487	0	True				
ANR	5511755	AssignmentExpression	j = 0		5511487	0		=			
ANR	5511756	Identifier	j		5511487	0					
ANR	5511757	PrimaryExpression	0		5511487	1					
ANR	5511758	Condition	j < n	65:24:1253:1255	5511487	1	True				
ANR	5511759	RelationalExpression	j < n		5511487	0		<			
ANR	5511760	Identifier	j		5511487	0					
ANR	5511761	Identifier	n		5511487	1					
ANR	5511762	PostIncDecOperationExpression	j ++	65:28:1257:1259	5511487	2	True				
ANR	5511763	Identifier	j		5511487	0					
ANR	5511764	IncDec	++		5511487	1					
ANR	5511765	CompoundStatement		65:33:1175:1175	5511487	3					
ANR	5511766	ExpressionStatement	ptr = data [ c ] + ( ( ( linesize [ c ] * ( v * mb_y + y ) * 8 ) + ( h * mb_x + x ) * 8 ) >> s -> avctx -> lowres )	67:20:1285:1430	5511487	0	True				
ANR	5511767	AssignmentExpression	ptr = data [ c ] + ( ( ( linesize [ c ] * ( v * mb_y + y ) * 8 ) + ( h * mb_x + x ) * 8 ) >> s -> avctx -> lowres )		5511487	0		=			
ANR	5511768	Identifier	ptr		5511487	0					
ANR	5511769	AdditiveExpression	data [ c ] + ( ( ( linesize [ c ] * ( v * mb_y + y ) * 8 ) + ( h * mb_x + x ) * 8 ) >> s -> avctx -> lowres )		5511487	1		+			
ANR	5511770	ArrayIndexing	data [ c ]		5511487	0					
ANR	5511771	Identifier	data		5511487	0					
ANR	5511772	Identifier	c		5511487	1					
ANR	5511773	ShiftExpression	( ( linesize [ c ] * ( v * mb_y + y ) * 8 ) + ( h * mb_x + x ) * 8 ) >> s -> avctx -> lowres		5511487	1		>>			
ANR	5511774	AdditiveExpression	( linesize [ c ] * ( v * mb_y + y ) * 8 ) + ( h * mb_x + x ) * 8		5511487	0		+			
ANR	5511775	MultiplicativeExpression	linesize [ c ] * ( v * mb_y + y ) * 8		5511487	0		*			
ANR	5511776	ArrayIndexing	linesize [ c ]		5511487	0					
ANR	5511777	Identifier	linesize		5511487	0					
ANR	5511778	Identifier	c		5511487	1					
ANR	5511779	MultiplicativeExpression	( v * mb_y + y ) * 8		5511487	1		*			
ANR	5511780	AdditiveExpression	v * mb_y + y		5511487	0		+			
ANR	5511781	MultiplicativeExpression	v * mb_y		5511487	0		*			
ANR	5511782	Identifier	v		5511487	0					
ANR	5511783	Identifier	mb_y		5511487	1					
ANR	5511784	Identifier	y		5511487	1					
ANR	5511785	PrimaryExpression	8		5511487	1					
ANR	5511786	MultiplicativeExpression	( h * mb_x + x ) * 8		5511487	1		*			
ANR	5511787	AdditiveExpression	h * mb_x + x		5511487	0		+			
ANR	5511788	MultiplicativeExpression	h * mb_x		5511487	0		*			
ANR	5511789	Identifier	h		5511487	0					
ANR	5511790	Identifier	mb_x		5511487	1					
ANR	5511791	Identifier	x		5511487	1					
ANR	5511792	PrimaryExpression	8		5511487	1					
ANR	5511793	PtrMemberAccess	s -> avctx -> lowres		5511487	1					
ANR	5511794	PtrMemberAccess	s -> avctx		5511487	0					
ANR	5511795	Identifier	s		5511487	0					
ANR	5511796	Identifier	avctx		5511487	1					
ANR	5511797	Identifier	lowres		5511487	1					
ANR	5511798	IfStatement	if ( s -> interlaced && s -> bottom_field )		5511487	1					
ANR	5511799	Condition	s -> interlaced && s -> bottom_field	73:23:1456:1487	5511487	0	True				
ANR	5511800	AndExpression	s -> interlaced && s -> bottom_field		5511487	0		&&			
ANR	5511801	PtrMemberAccess	s -> interlaced		5511487	0					
ANR	5511802	Identifier	s		5511487	0					
ANR	5511803	Identifier	interlaced		5511487	1					
ANR	5511804	PtrMemberAccess	s -> bottom_field		5511487	1					
ANR	5511805	Identifier	s		5511487	0					
ANR	5511806	Identifier	bottom_field		5511487	1					
ANR	5511807	ExpressionStatement	ptr += linesize [ c ] >> 1	75:24:1515:1538	5511487	1	True				
ANR	5511808	AssignmentExpression	ptr += linesize [ c ] >> 1		5511487	0		+=			
ANR	5511809	Identifier	ptr		5511487	0					
ANR	5511810	ShiftExpression	linesize [ c ] >> 1		5511487	1		>>			
ANR	5511811	ArrayIndexing	linesize [ c ]		5511487	0					
ANR	5511812	Identifier	linesize		5511487	0					
ANR	5511813	Identifier	c		5511487	1					
ANR	5511814	PrimaryExpression	1		5511487	1					
ANR	5511815	IfStatement	if ( ! s -> progressive )		5511487	2					
ANR	5511816	Condition	! s -> progressive	77:23:1564:1578	5511487	0	True				
ANR	5511817	UnaryOperationExpression	! s -> progressive		5511487	0					
ANR	5511818	UnaryOperator	!		5511487	0					
ANR	5511819	PtrMemberAccess	s -> progressive		5511487	1					
ANR	5511820	Identifier	s		5511487	0					
ANR	5511821	Identifier	progressive		5511487	1					
ANR	5511822	CompoundStatement		77:40:1494:1494	5511487	1					
ANR	5511823	ExpressionStatement	s -> dsp . clear_block ( s -> block )	79:24:1608:1636	5511487	0	True				
ANR	5511824	CallExpression	s -> dsp . clear_block ( s -> block )		5511487	0					
ANR	5511825	Callee	s -> dsp . clear_block		5511487	0					
ANR	5511826	MemberAccess	s -> dsp . clear_block		5511487	0					
ANR	5511827	PtrMemberAccess	s -> dsp		5511487	0					
ANR	5511828	Identifier	s		5511487	0					
ANR	5511829	Identifier	dsp		5511487	1					
ANR	5511830	Identifier	clear_block		5511487	1					
ANR	5511831	ArgumentList	s -> block		5511487	1					
ANR	5511832	Argument	s -> block		5511487	0					
ANR	5511833	PtrMemberAccess	s -> block		5511487	0					
ANR	5511834	Identifier	s		5511487	0					
ANR	5511835	Identifier	block		5511487	1					
ANR	5511836	IfStatement	"if ( decode_block ( s , s -> block , i , s -> dc_index [ i ] , s -> ac_index [ i ] , s -> quant_matrixes [ s -> quant_index [ c ] ] ) < 0 )"		5511487	1					
ANR	5511837	Condition	"decode_block ( s , s -> block , i , s -> dc_index [ i ] , s -> ac_index [ i ] , s -> quant_matrixes [ s -> quant_index [ c ] ] ) < 0"	81:27:1666:1845	5511487	0	True				
ANR	5511838	RelationalExpression	"decode_block ( s , s -> block , i , s -> dc_index [ i ] , s -> ac_index [ i ] , s -> quant_matrixes [ s -> quant_index [ c ] ] ) < 0"		5511487	0		<			
ANR	5511839	CallExpression	"decode_block ( s , s -> block , i , s -> dc_index [ i ] , s -> ac_index [ i ] , s -> quant_matrixes [ s -> quant_index [ c ] ] )"		5511487	0					
ANR	5511840	Callee	decode_block		5511487	0					
ANR	5511841	Identifier	decode_block		5511487	0					
ANR	5511842	ArgumentList	s		5511487	1					
ANR	5511843	Argument	s		5511487	0					
ANR	5511844	Identifier	s		5511487	0					
ANR	5511845	Argument	s -> block		5511487	1					
ANR	5511846	PtrMemberAccess	s -> block		5511487	0					
ANR	5511847	Identifier	s		5511487	0					
ANR	5511848	Identifier	block		5511487	1					
ANR	5511849	Argument	i		5511487	2					
ANR	5511850	Identifier	i		5511487	0					
ANR	5511851	Argument	s -> dc_index [ i ]		5511487	3					
ANR	5511852	ArrayIndexing	s -> dc_index [ i ]		5511487	0					
ANR	5511853	PtrMemberAccess	s -> dc_index		5511487	0					
ANR	5511854	Identifier	s		5511487	0					
ANR	5511855	Identifier	dc_index		5511487	1					
ANR	5511856	Identifier	i		5511487	1					
ANR	5511857	Argument	s -> ac_index [ i ]		5511487	4					
ANR	5511858	ArrayIndexing	s -> ac_index [ i ]		5511487	0					
ANR	5511859	PtrMemberAccess	s -> ac_index		5511487	0					
ANR	5511860	Identifier	s		5511487	0					
ANR	5511861	Identifier	ac_index		5511487	1					
ANR	5511862	Identifier	i		5511487	1					
ANR	5511863	Argument	s -> quant_matrixes [ s -> quant_index [ c ] ]		5511487	5					
ANR	5511864	ArrayIndexing	s -> quant_matrixes [ s -> quant_index [ c ] ]		5511487	0					
ANR	5511865	PtrMemberAccess	s -> quant_matrixes		5511487	0					
ANR	5511866	Identifier	s		5511487	0					
ANR	5511867	Identifier	quant_matrixes		5511487	1					
ANR	5511868	ArrayIndexing	s -> quant_index [ c ]		5511487	1					
ANR	5511869	PtrMemberAccess	s -> quant_index		5511487	0					
ANR	5511870	Identifier	s		5511487	0					
ANR	5511871	Identifier	quant_index		5511487	1					
ANR	5511872	Identifier	c		5511487	1					
ANR	5511873	PrimaryExpression	0		5511487	1					
ANR	5511874	CompoundStatement		85:82:1761:1761	5511487	1					
ANR	5511875	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""error y=%d x=%d\\n"" , mb_y , mb_x )"	87:28:1879:1942	5511487	0	True				
ANR	5511876	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""error y=%d x=%d\\n"" , mb_y , mb_x )"		5511487	0					
ANR	5511877	Callee	av_log		5511487	0					
ANR	5511878	Identifier	av_log		5511487	0					
ANR	5511879	ArgumentList	s -> avctx		5511487	1					
ANR	5511880	Argument	s -> avctx		5511487	0					
ANR	5511881	PtrMemberAccess	s -> avctx		5511487	0					
ANR	5511882	Identifier	s		5511487	0					
ANR	5511883	Identifier	avctx		5511487	1					
ANR	5511884	Argument	AV_LOG_ERROR		5511487	1					
ANR	5511885	Identifier	AV_LOG_ERROR		5511487	0					
ANR	5511886	Argument	"""error y=%d x=%d\\n"""		5511487	2					
ANR	5511887	PrimaryExpression	"""error y=%d x=%d\\n"""		5511487	0					
ANR	5511888	Argument	mb_y		5511487	3					
ANR	5511889	Identifier	mb_y		5511487	0					
ANR	5511890	Argument	mb_x		5511487	4					
ANR	5511891	Identifier	mb_x		5511487	0					
ANR	5511892	ReturnStatement	return - 1 ;	89:28:1973:1982	5511487	1	True				
ANR	5511893	UnaryOperationExpression	- 1		5511487	0					
ANR	5511894	UnaryOperator	-		5511487	0					
ANR	5511895	PrimaryExpression	1		5511487	1					
ANR	5511896	ExpressionStatement	"s -> dsp . idct_put ( ptr , linesize [ c ] , s -> block )"	93:24:2036:2079	5511487	2	True				
ANR	5511897	CallExpression	"s -> dsp . idct_put ( ptr , linesize [ c ] , s -> block )"		5511487	0					
ANR	5511898	Callee	s -> dsp . idct_put		5511487	0					
ANR	5511899	MemberAccess	s -> dsp . idct_put		5511487	0					
ANR	5511900	PtrMemberAccess	s -> dsp		5511487	0					
ANR	5511901	Identifier	s		5511487	0					
ANR	5511902	Identifier	dsp		5511487	1					
ANR	5511903	Identifier	idct_put		5511487	1					
ANR	5511904	ArgumentList	ptr		5511487	1					
ANR	5511905	Argument	ptr		5511487	0					
ANR	5511906	Identifier	ptr		5511487	0					
ANR	5511907	Argument	linesize [ c ]		5511487	1					
ANR	5511908	ArrayIndexing	linesize [ c ]		5511487	0					
ANR	5511909	Identifier	linesize		5511487	0					
ANR	5511910	Identifier	c		5511487	1					
ANR	5511911	Argument	s -> block		5511487	2					
ANR	5511912	PtrMemberAccess	s -> block		5511487	0					
ANR	5511913	Identifier	s		5511487	0					
ANR	5511914	Identifier	block		5511487	1					
ANR	5511915	ElseStatement	else		5511487	0					
ANR	5511916	CompoundStatement		99:24:2144:2184	5511487	0					
ANR	5511917	IdentifierDeclStatement	int block_idx = s -> block_stride [ c ] * ( v * mb_y + y ) + ( h * mb_x + x ) ;	97:24:2136:2204	5511487	0	True				
ANR	5511918	IdentifierDecl	block_idx = s -> block_stride [ c ] * ( v * mb_y + y ) + ( h * mb_x + x )		5511487	0					
ANR	5511919	IdentifierDeclType	int		5511487	0					
ANR	5511920	Identifier	block_idx		5511487	1					
ANR	5511921	AssignmentExpression	block_idx = s -> block_stride [ c ] * ( v * mb_y + y ) + ( h * mb_x + x )		5511487	2		=			
ANR	5511922	Identifier	block_idx		5511487	0					
ANR	5511923	AdditiveExpression	s -> block_stride [ c ] * ( v * mb_y + y ) + ( h * mb_x + x )		5511487	1		+			
ANR	5511924	MultiplicativeExpression	s -> block_stride [ c ] * ( v * mb_y + y )		5511487	0		*			
ANR	5511925	ArrayIndexing	s -> block_stride [ c ]		5511487	0					
ANR	5511926	PtrMemberAccess	s -> block_stride		5511487	0					
ANR	5511927	Identifier	s		5511487	0					
ANR	5511928	Identifier	block_stride		5511487	1					
ANR	5511929	Identifier	c		5511487	1					
ANR	5511930	AdditiveExpression	v * mb_y + y		5511487	1		+			
ANR	5511931	MultiplicativeExpression	v * mb_y		5511487	0		*			
ANR	5511932	Identifier	v		5511487	0					
ANR	5511933	Identifier	mb_y		5511487	1					
ANR	5511934	Identifier	y		5511487	1					
ANR	5511935	AdditiveExpression	h * mb_x + x		5511487	1		+			
ANR	5511936	MultiplicativeExpression	h * mb_x		5511487	0		*			
ANR	5511937	Identifier	h		5511487	0					
ANR	5511938	Identifier	mb_x		5511487	1					
ANR	5511939	Identifier	x		5511487	1					
ANR	5511940	IdentifierDeclStatement	DCTELEM * block = s -> blocks [ c ] [ block_idx ] ;	99:24:2231:2271	5511487	1	True				
ANR	5511941	IdentifierDecl	* block = s -> blocks [ c ] [ block_idx ]		5511487	0					
ANR	5511942	IdentifierDeclType	DCTELEM *		5511487	0					
ANR	5511943	Identifier	block		5511487	1					
ANR	5511944	AssignmentExpression	* block = s -> blocks [ c ] [ block_idx ]		5511487	2		=			
ANR	5511945	Identifier	block		5511487	0					
ANR	5511946	ArrayIndexing	s -> blocks [ c ] [ block_idx ]		5511487	1					
ANR	5511947	ArrayIndexing	s -> blocks [ c ]		5511487	0					
ANR	5511948	PtrMemberAccess	s -> blocks		5511487	0					
ANR	5511949	Identifier	s		5511487	0					
ANR	5511950	Identifier	blocks		5511487	1					
ANR	5511951	Identifier	c		5511487	1					
ANR	5511952	Identifier	block_idx		5511487	1					
ANR	5511953	IfStatement	if ( Ah )		5511487	2					
ANR	5511954	Condition	Ah	101:27:2301:2302	5511487	0	True				
ANR	5511955	Identifier	Ah		5511487	0					
ANR	5511956	ExpressionStatement	block [ 0 ] += get_bits1 ( & s -> gb ) * s -> quant_matrixes [ s -> quant_index [ c ] ] [ 0 ] << Al	103:28:2334:2413	5511487	1	True				
ANR	5511957	AssignmentExpression	block [ 0 ] += get_bits1 ( & s -> gb ) * s -> quant_matrixes [ s -> quant_index [ c ] ] [ 0 ] << Al		5511487	0		+=			
ANR	5511958	ArrayIndexing	block [ 0 ]		5511487	0					
ANR	5511959	Identifier	block		5511487	0					
ANR	5511960	PrimaryExpression	0		5511487	1					
ANR	5511961	ShiftExpression	get_bits1 ( & s -> gb ) * s -> quant_matrixes [ s -> quant_index [ c ] ] [ 0 ] << Al		5511487	1		<<			
ANR	5511962	MultiplicativeExpression	get_bits1 ( & s -> gb ) * s -> quant_matrixes [ s -> quant_index [ c ] ] [ 0 ]		5511487	0		*			
ANR	5511963	CallExpression	get_bits1 ( & s -> gb )		5511487	0					
ANR	5511964	Callee	get_bits1		5511487	0					
ANR	5511965	Identifier	get_bits1		5511487	0					
ANR	5511966	ArgumentList	& s -> gb		5511487	1					
ANR	5511967	Argument	& s -> gb		5511487	0					
ANR	5511968	UnaryOperationExpression	& s -> gb		5511487	0					
ANR	5511969	UnaryOperator	&		5511487	0					
ANR	5511970	PtrMemberAccess	s -> gb		5511487	1					
ANR	5511971	Identifier	s		5511487	0					
ANR	5511972	Identifier	gb		5511487	1					
ANR	5511973	ArrayIndexing	s -> quant_matrixes [ s -> quant_index [ c ] ] [ 0 ]		5511487	1					
ANR	5511974	ArrayIndexing	s -> quant_matrixes [ s -> quant_index [ c ] ]		5511487	0					
ANR	5511975	PtrMemberAccess	s -> quant_matrixes		5511487	0					
ANR	5511976	Identifier	s		5511487	0					
ANR	5511977	Identifier	quant_matrixes		5511487	1					
ANR	5511978	ArrayIndexing	s -> quant_index [ c ]		5511487	1					
ANR	5511979	PtrMemberAccess	s -> quant_index		5511487	0					
ANR	5511980	Identifier	s		5511487	0					
ANR	5511981	Identifier	quant_index		5511487	1					
ANR	5511982	Identifier	c		5511487	1					
ANR	5511983	PrimaryExpression	0		5511487	1					
ANR	5511984	Identifier	Al		5511487	1					
ANR	5511985	ElseStatement	else		5511487	0					
ANR	5511986	IfStatement	"if ( decode_dc_progressive ( s , block , i , s -> dc_index [ i ] , s -> quant_matrixes [ s -> quant_index [ c ] ] , Al ) < 0 )"		5511487	0					
ANR	5511987	Condition	"decode_dc_progressive ( s , block , i , s -> dc_index [ i ] , s -> quant_matrixes [ s -> quant_index [ c ] ] , Al ) < 0"	105:32:2448:2545	5511487	0	True				
ANR	5511988	RelationalExpression	"decode_dc_progressive ( s , block , i , s -> dc_index [ i ] , s -> quant_matrixes [ s -> quant_index [ c ] ] , Al ) < 0"		5511487	0		<			
ANR	5511989	CallExpression	"decode_dc_progressive ( s , block , i , s -> dc_index [ i ] , s -> quant_matrixes [ s -> quant_index [ c ] ] , Al )"		5511487	0					
ANR	5511990	Callee	decode_dc_progressive		5511487	0					
ANR	5511991	Identifier	decode_dc_progressive		5511487	0					
ANR	5511992	ArgumentList	s		5511487	1					
ANR	5511993	Argument	s		5511487	0					
ANR	5511994	Identifier	s		5511487	0					
ANR	5511995	Argument	block		5511487	1					
ANR	5511996	Identifier	block		5511487	0					
ANR	5511997	Argument	i		5511487	2					
ANR	5511998	Identifier	i		5511487	0					
ANR	5511999	Argument	s -> dc_index [ i ]		5511487	3					
ANR	5512000	ArrayIndexing	s -> dc_index [ i ]		5511487	0					
ANR	5512001	PtrMemberAccess	s -> dc_index		5511487	0					
ANR	5512002	Identifier	s		5511487	0					
ANR	5512003	Identifier	dc_index		5511487	1					
ANR	5512004	Identifier	i		5511487	1					
ANR	5512005	Argument	s -> quant_matrixes [ s -> quant_index [ c ] ]		5511487	4					
ANR	5512006	ArrayIndexing	s -> quant_matrixes [ s -> quant_index [ c ] ]		5511487	0					
ANR	5512007	PtrMemberAccess	s -> quant_matrixes		5511487	0					
ANR	5512008	Identifier	s		5511487	0					
ANR	5512009	Identifier	quant_matrixes		5511487	1					
ANR	5512010	ArrayIndexing	s -> quant_index [ c ]		5511487	1					
ANR	5512011	PtrMemberAccess	s -> quant_index		5511487	0					
ANR	5512012	Identifier	s		5511487	0					
ANR	5512013	Identifier	quant_index		5511487	1					
ANR	5512014	Identifier	c		5511487	1					
ANR	5512015	Argument	Al		5511487	5					
ANR	5512016	Identifier	Al		5511487	0					
ANR	5512017	PrimaryExpression	0		5511487	1					
ANR	5512018	CompoundStatement		105:132:2461:2461	5511487	1					
ANR	5512019	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""error y=%d x=%d\\n"" , mb_y , mb_x )"	107:28:2579:2642	5511487	0	True				
ANR	5512020	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""error y=%d x=%d\\n"" , mb_y , mb_x )"		5511487	0					
ANR	5512021	Callee	av_log		5511487	0					
ANR	5512022	Identifier	av_log		5511487	0					
ANR	5512023	ArgumentList	s -> avctx		5511487	1					
ANR	5512024	Argument	s -> avctx		5511487	0					
ANR	5512025	PtrMemberAccess	s -> avctx		5511487	0					
ANR	5512026	Identifier	s		5511487	0					
ANR	5512027	Identifier	avctx		5511487	1					
ANR	5512028	Argument	AV_LOG_ERROR		5511487	1					
ANR	5512029	Identifier	AV_LOG_ERROR		5511487	0					
ANR	5512030	Argument	"""error y=%d x=%d\\n"""		5511487	2					
ANR	5512031	PrimaryExpression	"""error y=%d x=%d\\n"""		5511487	0					
ANR	5512032	Argument	mb_y		5511487	3					
ANR	5512033	Identifier	mb_y		5511487	0					
ANR	5512034	Argument	mb_x		5511487	4					
ANR	5512035	Identifier	mb_x		5511487	0					
ANR	5512036	ReturnStatement	return - 1 ;	109:28:2673:2682	5511487	1	True				
ANR	5512037	UnaryOperationExpression	- 1		5511487	0					
ANR	5512038	UnaryOperator	-		5511487	0					
ANR	5512039	PrimaryExpression	1		5511487	1					
ANR	5512040	IfStatement	if ( ++ x == h )		5511487	3					
ANR	5512041	Condition	++ x == h	119:24:2990:2997	5511487	0	True				
ANR	5512042	EqualityExpression	++ x == h		5511487	0		==			
ANR	5512043	UnaryExpression	++ x		5511487	0					
ANR	5512044	IncDec	++		5511487	0					
ANR	5512045	Identifier	x		5511487	1					
ANR	5512046	Identifier	h		5511487	1					
ANR	5512047	CompoundStatement		119:34:2913:2913	5511487	1					
ANR	5512048	ExpressionStatement	x = 0	121:24:3027:3032	5511487	0	True				
ANR	5512049	AssignmentExpression	x = 0		5511487	0		=			
ANR	5512050	Identifier	x		5511487	0					
ANR	5512051	PrimaryExpression	0		5511487	1					
ANR	5512052	ExpressionStatement	y ++	123:24:3059:3062	5511487	1	True				
ANR	5512053	PostIncDecOperationExpression	y ++		5511487	0					
ANR	5512054	Identifier	y		5511487	0					
ANR	5512055	IncDec	++		5511487	1					
ANR	5512056	IfStatement	if ( s -> restart_interval && ! -- s -> restart_count )		5511487	2					
ANR	5512057	Condition	s -> restart_interval && ! -- s -> restart_count	133:16:3140:3181	5511487	0	True				
ANR	5512058	AndExpression	s -> restart_interval && ! -- s -> restart_count		5511487	0		&&			
ANR	5512059	PtrMemberAccess	s -> restart_interval		5511487	0					
ANR	5512060	Identifier	s		5511487	0					
ANR	5512061	Identifier	restart_interval		5511487	1					
ANR	5512062	UnaryOperationExpression	! -- s -> restart_count		5511487	1					
ANR	5512063	UnaryOperator	!		5511487	0					
ANR	5512064	UnaryExpression	-- s -> restart_count		5511487	1					
ANR	5512065	IncDec	--		5511487	0					
ANR	5512066	PtrMemberAccess	s -> restart_count		5511487	1					
ANR	5512067	Identifier	s		5511487	0					
ANR	5512068	Identifier	restart_count		5511487	1					
ANR	5512069	CompoundStatement		133:60:3097:3097	5511487	1					
ANR	5512070	ExpressionStatement	align_get_bits ( & s -> gb )	135:16:3203:3225	5511487	0	True				
ANR	5512071	CallExpression	align_get_bits ( & s -> gb )		5511487	0					
ANR	5512072	Callee	align_get_bits		5511487	0					
ANR	5512073	Identifier	align_get_bits		5511487	0					
ANR	5512074	ArgumentList	& s -> gb		5511487	1					
ANR	5512075	Argument	& s -> gb		5511487	0					
ANR	5512076	UnaryOperationExpression	& s -> gb		5511487	0					
ANR	5512077	UnaryOperator	&		5511487	0					
ANR	5512078	PtrMemberAccess	s -> gb		5511487	1					
ANR	5512079	Identifier	s		5511487	0					
ANR	5512080	Identifier	gb		5511487	1					
ANR	5512081	ExpressionStatement	"skip_bits ( & s -> gb , 16 )"	137:16:3244:3265	5511487	1	True				
ANR	5512082	CallExpression	"skip_bits ( & s -> gb , 16 )"		5511487	0					
ANR	5512083	Callee	skip_bits		5511487	0					
ANR	5512084	Identifier	skip_bits		5511487	0					
ANR	5512085	ArgumentList	& s -> gb		5511487	1					
ANR	5512086	Argument	& s -> gb		5511487	0					
ANR	5512087	UnaryOperationExpression	& s -> gb		5511487	0					
ANR	5512088	UnaryOperator	&		5511487	0					
ANR	5512089	PtrMemberAccess	s -> gb		5511487	1					
ANR	5512090	Identifier	s		5511487	0					
ANR	5512091	Identifier	gb		5511487	1					
ANR	5512092	Argument	16		5511487	1					
ANR	5512093	PrimaryExpression	16		5511487	0					
ANR	5512094	ForStatement	for ( i = 0 ; i < nb_components ; i ++ )		5511487	2					
ANR	5512095	ForInit	i = 0 ;	139:21:3305:3308	5511487	0	True				
ANR	5512096	AssignmentExpression	i = 0		5511487	0		=			
ANR	5512097	Identifier	i		5511487	0					
ANR	5512098	PrimaryExpression	0		5511487	1					
ANR	5512099	Condition	i < nb_components	139:26:3310:3324	5511487	1	True				
ANR	5512100	RelationalExpression	i < nb_components		5511487	0		<			
ANR	5512101	Identifier	i		5511487	0					
ANR	5512102	Identifier	nb_components		5511487	1					
ANR	5512103	PostIncDecOperationExpression	i ++	139:43:3327:3329	5511487	2	True				
ANR	5512104	Identifier	i		5511487	0					
ANR	5512105	IncDec	++		5511487	1					
ANR	5512106	ExpressionStatement	s -> last_dc [ i ] = 1024	141:20:3368:3388	5511487	3	True				
ANR	5512107	AssignmentExpression	s -> last_dc [ i ] = 1024		5511487	0		=			
ANR	5512108	ArrayIndexing	s -> last_dc [ i ]		5511487	0					
ANR	5512109	PtrMemberAccess	s -> last_dc		5511487	0					
ANR	5512110	Identifier	s		5511487	0					
ANR	5512111	Identifier	last_dc		5511487	1					
ANR	5512112	Identifier	i		5511487	1					
ANR	5512113	PrimaryExpression	1024		5511487	1					
ANR	5512114	ReturnStatement	return 0 ;	149:4:3428:3436	5511487	5	True				
ANR	5512115	PrimaryExpression	0		5511487	0					
ANR	5512116	ReturnType	static int		5511487	1					
ANR	5512117	Identifier	mjpeg_decode_scan		5511487	2					
ANR	5512118	ParameterList	"MJpegDecodeContext * s , int nb_components , int Ah , int Al"		5511487	3					
ANR	5512119	Parameter	MJpegDecodeContext * s	1:29:29:49	5511487	0	True				
ANR	5512120	ParameterType	MJpegDecodeContext *		5511487	0					
ANR	5512121	Identifier	s		5511487	1					
ANR	5512122	Parameter	int nb_components	1:52:52:68	5511487	1	True				
ANR	5512123	ParameterType	int		5511487	0					
ANR	5512124	Identifier	nb_components		5511487	1					
ANR	5512125	Parameter	int Ah	1:71:71:76	5511487	2	True				
ANR	5512126	ParameterType	int		5511487	0					
ANR	5512127	Identifier	Ah		5511487	1					
ANR	5512128	Parameter	int Al	1:79:79:84	5511487	3	True				
ANR	5512129	ParameterType	int		5511487	0					
ANR	5512130	Identifier	Al		5511487	1					
ANR	5512131	CFGEntryNode	ENTRY		5511487		True				
ANR	5512132	CFGExitNode	EXIT		5511487		True				
ANR	5512133	Symbol	nb_components		5511487						
ANR	5512134	Symbol	* * s -> quant_matrixes		5511487						
ANR	5512135	Symbol	decode_dc_progressive		5511487						
ANR	5512136	Symbol	data		5511487						
ANR	5512137	Symbol	s -> coefs_finished		5511487						
ANR	5512138	Symbol	* * * * s		5511487						
ANR	5512139	Symbol	s -> mb_width		5511487						
ANR	5512140	Symbol	block_idx		5511487						
ANR	5512141	Symbol	* s -> nb_blocks		5511487						
ANR	5512142	Symbol	s -> last_dc		5511487						
ANR	5512143	Symbol	linesize		5511487						
ANR	5512144	Symbol	* s -> dc_index		5511487						
ANR	5512145	Symbol	s -> restart_interval		5511487						
ANR	5512146	Symbol	block		5511487						
ANR	5512147	Symbol	* s -> avctx		5511487						
ANR	5512148	Symbol	* s -> v_scount		5511487						
ANR	5512149	Symbol	* * s -> quant_index		5511487						
ANR	5512150	Symbol	s -> mb_height		5511487						
ANR	5512151	Symbol	* s -> blocks		5511487						
ANR	5512152	Symbol	* s -> block_stride		5511487						
ANR	5512153	Symbol	* s -> last_dc		5511487						
ANR	5512154	Symbol	* s -> ac_index		5511487						
ANR	5512155	Symbol	get_bits1		5511487						
ANR	5512156	Symbol	* * c		5511487						
ANR	5512157	Symbol	* linesize		5511487						
ANR	5512158	Symbol	s -> avctx -> flags		5511487						
ANR	5512159	Symbol	s -> dsp		5511487						
ANR	5512160	Symbol	* block_idx		5511487						
ANR	5512161	Symbol	* * * s		5511487						
ANR	5512162	Symbol	& s -> gb		5511487						
ANR	5512163	Symbol	s -> comp_index		5511487						
ANR	5512164	Symbol	s -> picture . data		5511487						
ANR	5512165	Symbol	s -> progressive		5511487						
ANR	5512166	Symbol	s -> avctx		5511487						
ANR	5512167	Symbol	* s -> h_scount		5511487						
ANR	5512168	Symbol	* * * c		5511487						
ANR	5512169	Symbol	s -> restart_count		5511487						
ANR	5512170	Symbol	* s -> quant_index		5511487						
ANR	5512171	Symbol	* s -> comp_index		5511487						
ANR	5512172	Symbol	* s -> picture . data		5511487						
ANR	5512173	Symbol	s -> dc_index		5511487						
ANR	5512174	Symbol	Ah		5511487						
ANR	5512175	Symbol	* * * s -> quant_index		5511487						
ANR	5512176	Symbol	s -> interlaced		5511487						
ANR	5512177	Symbol	s -> picture		5511487						
ANR	5512178	Symbol	s -> quant_index		5511487						
ANR	5512179	Symbol	Al		5511487						
ANR	5512180	Symbol	* s -> picture		5511487						
ANR	5512181	Symbol	* s -> coefs_finished		5511487						
ANR	5512182	Symbol	s -> blocks		5511487						
ANR	5512183	Symbol	decode_block		5511487						
ANR	5512184	Symbol	s -> avctx -> lowres		5511487						
ANR	5512185	Symbol	s -> block_stride		5511487						
ANR	5512186	Symbol	s -> v_max		5511487						
ANR	5512187	Symbol	* s -> quant_matrixes		5511487						
ANR	5512188	Symbol	s -> linesize		5511487						
ANR	5512189	Symbol	* * s		5511487						
ANR	5512190	Symbol	* s -> linesize		5511487						
ANR	5512191	Symbol	s -> ac_index		5511487						
ANR	5512192	Symbol	c		5511487						
ANR	5512193	Symbol	AV_LOG_ERROR		5511487						
ANR	5512194	Symbol	s -> flipped		5511487						
ANR	5512195	Symbol	h		5511487						
ANR	5512196	Symbol	i		5511487						
ANR	5512197	Symbol	j		5511487						
ANR	5512198	Symbol	* c		5511487						
ANR	5512199	Symbol	n		5511487						
ANR	5512200	Symbol	ptr		5511487						
ANR	5512201	Symbol	* block		5511487						
ANR	5512202	Symbol	s		5511487						
ANR	5512203	Symbol	* i		5511487						
ANR	5512204	Symbol	s -> height		5511487						
ANR	5512205	Symbol	* * s -> blocks		5511487						
ANR	5512206	Symbol	s -> bottom_field		5511487						
ANR	5512207	Symbol	v		5511487						
ANR	5512208	Symbol	s -> nb_blocks		5511487						
ANR	5512209	Symbol	x		5511487						
ANR	5512210	Symbol	y		5511487						
ANR	5512211	Symbol	mb_y		5511487						
ANR	5512212	Symbol	mb_x		5511487						
ANR	5512213	Symbol	* s		5511487						
ANR	5512214	Symbol	* data		5511487						
ANR	5512215	Symbol	CODEC_FLAG_EMU_EDGE		5511487						
ANR	5512216	Symbol	s -> v_scount		5511487						
ANR	5512217	Symbol	s -> block		5511487						
ANR	5512218	Symbol	s -> h_scount		5511487						
ANR	5512219	Symbol	s -> quant_matrixes		5511487						
