command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5048525	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ivshmem_server_parse_args_1.c								
ANR	5048526	Function	ivshmem_server_parse_args	1:0:0:2345							
ANR	5048527	FunctionDef	"ivshmem_server_parse_args (IvshmemServerArgs * args , int argc , char * argv [ ])"		5048526	0					
ANR	5048528	CompoundStatement		3:0:76:2345	5048526	0					
ANR	5048529	IdentifierDeclStatement	int c ;	5:4:83:88	5048526	0	True				
ANR	5048530	IdentifierDecl	c		5048526	0					
ANR	5048531	IdentifierDeclType	int		5048526	0					
ANR	5048532	Identifier	c		5048526	1					
ANR	5048533	IdentifierDeclStatement	unsigned long long v ;	7:4:95:115	5048526	1	True				
ANR	5048534	IdentifierDecl	v		5048526	0					
ANR	5048535	IdentifierDeclType	unsigned long long		5048526	0					
ANR	5048536	Identifier	v		5048526	1					
ANR	5048537	IdentifierDeclStatement	Error * errp = NULL ;	9:4:122:140	5048526	2	True				
ANR	5048538	IdentifierDecl	* errp = NULL		5048526	0					
ANR	5048539	IdentifierDeclType	Error *		5048526	0					
ANR	5048540	Identifier	errp		5048526	1					
ANR	5048541	AssignmentExpression	* errp = NULL		5048526	2		=			
ANR	5048542	Identifier	NULL		5048526	0					
ANR	5048543	Identifier	NULL		5048526	1					
ANR	5048544	Statement	while	13:4:149:153	5048526	3	True				
ANR	5048545	Statement	(	13:10:155:155	5048526	4	True				
ANR	5048546	Statement	(	13:11:156:156	5048526	5	True				
ANR	5048547	Statement	c	13:12:157:157	5048526	6	True				
ANR	5048548	Statement	=	13:14:159:159	5048526	7	True				
ANR	5048549	Statement	getopt	13:16:161:166	5048526	8	True				
ANR	5048550	Statement	(	13:22:167:167	5048526	9	True				
ANR	5048551	Statement	argc	13:23:168:171	5048526	10	True				
ANR	5048552	Statement	","	13:27:172:172	5048526	11	True				
ANR	5048553	Statement	argv	13:29:174:177	5048526	12	True				
ANR	5048554	Statement	","	13:33:178:178	5048526	13	True				
ANR	5048555	Statement	"""h"""	15:23:204:206	5048526	14	True				
ANR	5048556	Statement	"""v"""	17:23:244:246	5048526	15	True				
ANR	5048557	Statement	"""F"""	19:23:287:289	5048526	16	True				
ANR	5048558	Statement	"""p:"""	21:23:333:336	5048526	17	True				
ANR	5048559	Statement	"""S:"""	23:23:377:380	5048526	18	True				
ANR	5048560	Statement	"""m:"""	25:23:429:432	5048526	19	True				
ANR	5048561	Statement	"""l:"""	27:23:473:476	5048526	20	True				
ANR	5048562	Statement	"""n:"""	29:23:517:520	5048526	21	True				
ANR	5048563	Statement	)	31:22:561:561	5048526	22	True				
ANR	5048564	Statement	)	31:23:562:562	5048526	23	True				
ANR	5048565	Statement	!=	31:25:564:565	5048526	24	True				
ANR	5048566	Statement	-	31:28:567:567	5048526	25	True				
ANR	5048567	Statement	1	31:29:568:568	5048526	26	True				
ANR	5048568	Statement	)	31:30:569:569	5048526	27	True				
ANR	5048569	CompoundStatement		29:32:494:494	5048526	28					
ANR	5048570	SwitchStatement	switch ( c )		5048526	0					
ANR	5048571	Condition	c	35:16:592:592	5048526	0	True				
ANR	5048572	Identifier	c		5048526	0					
ANR	5048573	CompoundStatement		33:19:518:518	5048526	1					
ANR	5048574	Label	case 'h' :	37:8:606:614	5048526	0	True				
ANR	5048575	ExpressionStatement	"ivshmem_server_usage ( argv [ 0 ] , 0 )"	39:12:640:672	5048526	1	True				
ANR	5048576	CallExpression	"ivshmem_server_usage ( argv [ 0 ] , 0 )"		5048526	0					
ANR	5048577	Callee	ivshmem_server_usage		5048526	0					
ANR	5048578	Identifier	ivshmem_server_usage		5048526	0					
ANR	5048579	ArgumentList	argv [ 0 ]		5048526	1					
ANR	5048580	Argument	argv [ 0 ]		5048526	0					
ANR	5048581	ArrayIndexing	argv [ 0 ]		5048526	0					
ANR	5048582	Identifier	argv		5048526	0					
ANR	5048583	PrimaryExpression	0		5048526	1					
ANR	5048584	Argument	0		5048526	1					
ANR	5048585	PrimaryExpression	0		5048526	0					
ANR	5048586	BreakStatement	break ;	41:12:687:692	5048526	2	True				
ANR	5048587	Label	case 'v' :	45:8:705:713	5048526	3	True				
ANR	5048588	ExpressionStatement	args -> verbose = 1	47:12:742:759	5048526	4	True				
ANR	5048589	AssignmentExpression	args -> verbose = 1		5048526	0		=			
ANR	5048590	PtrMemberAccess	args -> verbose		5048526	0					
ANR	5048591	Identifier	args		5048526	0					
ANR	5048592	Identifier	verbose		5048526	1					
ANR	5048593	PrimaryExpression	1		5048526	1					
ANR	5048594	BreakStatement	break ;	49:12:774:779	5048526	5	True				
ANR	5048595	Label	case 'F' :	53:8:792:800	5048526	6	True				
ANR	5048596	ExpressionStatement	args -> foreground = 1	55:12:832:852	5048526	7	True				
ANR	5048597	AssignmentExpression	args -> foreground = 1		5048526	0		=			
ANR	5048598	PtrMemberAccess	args -> foreground		5048526	0					
ANR	5048599	Identifier	args		5048526	0					
ANR	5048600	Identifier	foreground		5048526	1					
ANR	5048601	PrimaryExpression	1		5048526	1					
ANR	5048602	BreakStatement	break ;	57:12:867:872	5048526	8	True				
ANR	5048603	Label	case 'p' :	61:8:885:893	5048526	9	True				
ANR	5048604	ExpressionStatement	args -> pid_file = strdup ( optarg )	63:12:923:954	5048526	10	True				
ANR	5048605	AssignmentExpression	args -> pid_file = strdup ( optarg )		5048526	0		=			
ANR	5048606	PtrMemberAccess	args -> pid_file		5048526	0					
ANR	5048607	Identifier	args		5048526	0					
ANR	5048608	Identifier	pid_file		5048526	1					
ANR	5048609	CallExpression	strdup ( optarg )		5048526	1					
ANR	5048610	Callee	strdup		5048526	0					
ANR	5048611	Identifier	strdup		5048526	0					
ANR	5048612	ArgumentList	optarg		5048526	1					
ANR	5048613	Argument	optarg		5048526	0					
ANR	5048614	Identifier	optarg		5048526	0					
ANR	5048615	BreakStatement	break ;	65:12:969:974	5048526	11	True				
ANR	5048616	Label	case 'S' :	69:8:987:995	5048526	12	True				
ANR	5048617	ExpressionStatement	args -> unix_socket_path = strdup ( optarg )	71:12:1033:1072	5048526	13	True				
ANR	5048618	AssignmentExpression	args -> unix_socket_path = strdup ( optarg )		5048526	0		=			
ANR	5048619	PtrMemberAccess	args -> unix_socket_path		5048526	0					
ANR	5048620	Identifier	args		5048526	0					
ANR	5048621	Identifier	unix_socket_path		5048526	1					
ANR	5048622	CallExpression	strdup ( optarg )		5048526	1					
ANR	5048623	Callee	strdup		5048526	0					
ANR	5048624	Identifier	strdup		5048526	0					
ANR	5048625	ArgumentList	optarg		5048526	1					
ANR	5048626	Argument	optarg		5048526	0					
ANR	5048627	Identifier	optarg		5048526	0					
ANR	5048628	BreakStatement	break ;	73:12:1087:1092	5048526	14	True				
ANR	5048629	Label	case 'm' :	77:8:1105:1113	5048526	15	True				
ANR	5048630	ExpressionStatement	args -> shm_path = strdup ( optarg )	79:12:1143:1174	5048526	16	True				
ANR	5048631	AssignmentExpression	args -> shm_path = strdup ( optarg )		5048526	0		=			
ANR	5048632	PtrMemberAccess	args -> shm_path		5048526	0					
ANR	5048633	Identifier	args		5048526	0					
ANR	5048634	Identifier	shm_path		5048526	1					
ANR	5048635	CallExpression	strdup ( optarg )		5048526	1					
ANR	5048636	Callee	strdup		5048526	0					
ANR	5048637	Identifier	strdup		5048526	0					
ANR	5048638	ArgumentList	optarg		5048526	1					
ANR	5048639	Argument	optarg		5048526	0					
ANR	5048640	Identifier	optarg		5048526	0					
ANR	5048641	BreakStatement	break ;	81:12:1189:1194	5048526	17	True				
ANR	5048642	Label	case 'l' :	85:8:1207:1215	5048526	18	True				
ANR	5048643	ExpressionStatement	"parse_option_size ( ""shm_size"" , optarg , & args -> shm_size , & errp )"	87:12:1245:1306	5048526	19	True				
ANR	5048644	CallExpression	"parse_option_size ( ""shm_size"" , optarg , & args -> shm_size , & errp )"		5048526	0					
ANR	5048645	Callee	parse_option_size		5048526	0					
ANR	5048646	Identifier	parse_option_size		5048526	0					
ANR	5048647	ArgumentList	"""shm_size"""		5048526	1					
ANR	5048648	Argument	"""shm_size"""		5048526	0					
ANR	5048649	PrimaryExpression	"""shm_size"""		5048526	0					
ANR	5048650	Argument	optarg		5048526	1					
ANR	5048651	Identifier	optarg		5048526	0					
ANR	5048652	Argument	& args -> shm_size		5048526	2					
ANR	5048653	UnaryOperationExpression	& args -> shm_size		5048526	0					
ANR	5048654	UnaryOperator	&		5048526	0					
ANR	5048655	PtrMemberAccess	args -> shm_size		5048526	1					
ANR	5048656	Identifier	args		5048526	0					
ANR	5048657	Identifier	shm_size		5048526	1					
ANR	5048658	Argument	& errp		5048526	3					
ANR	5048659	UnaryOperationExpression	& errp		5048526	0					
ANR	5048660	UnaryOperator	&		5048526	0					
ANR	5048661	Identifier	errp		5048526	1					
ANR	5048662	IfStatement	if ( errp )		5048526	20					
ANR	5048663	Condition	errp	89:16:1325:1328	5048526	0	True				
ANR	5048664	Identifier	errp		5048526	0					
ANR	5048665	CompoundStatement		87:22:1254:1254	5048526	1					
ANR	5048666	ExpressionStatement	"fprintf ( stderr , ""cannot parse shm size: %s\\n"" , error_get_pretty ( errp ) )"	91:16:1350:1445	5048526	0	True				
ANR	5048667	CallExpression	"fprintf ( stderr , ""cannot parse shm size: %s\\n"" , error_get_pretty ( errp ) )"		5048526	0					
ANR	5048668	Callee	fprintf		5048526	0					
ANR	5048669	Identifier	fprintf		5048526	0					
ANR	5048670	ArgumentList	stderr		5048526	1					
ANR	5048671	Argument	stderr		5048526	0					
ANR	5048672	Identifier	stderr		5048526	0					
ANR	5048673	Argument	"""cannot parse shm size: %s\\n"""		5048526	1					
ANR	5048674	PrimaryExpression	"""cannot parse shm size: %s\\n"""		5048526	0					
ANR	5048675	Argument	error_get_pretty ( errp )		5048526	2					
ANR	5048676	CallExpression	error_get_pretty ( errp )		5048526	0					
ANR	5048677	Callee	error_get_pretty		5048526	0					
ANR	5048678	Identifier	error_get_pretty		5048526	0					
ANR	5048679	ArgumentList	errp		5048526	1					
ANR	5048680	Argument	errp		5048526	0					
ANR	5048681	Identifier	errp		5048526	0					
ANR	5048682	ExpressionStatement	error_free ( errp )	95:16:1464:1480	5048526	1	True				
ANR	5048683	CallExpression	error_free ( errp )		5048526	0					
ANR	5048684	Callee	error_free		5048526	0					
ANR	5048685	Identifier	error_free		5048526	0					
ANR	5048686	ArgumentList	errp		5048526	1					
ANR	5048687	Argument	errp		5048526	0					
ANR	5048688	Identifier	errp		5048526	0					
ANR	5048689	ExpressionStatement	"ivshmem_server_usage ( argv [ 0 ] , 1 )"	97:16:1499:1531	5048526	2	True				
ANR	5048690	CallExpression	"ivshmem_server_usage ( argv [ 0 ] , 1 )"		5048526	0					
ANR	5048691	Callee	ivshmem_server_usage		5048526	0					
ANR	5048692	Identifier	ivshmem_server_usage		5048526	0					
ANR	5048693	ArgumentList	argv [ 0 ]		5048526	1					
ANR	5048694	Argument	argv [ 0 ]		5048526	0					
ANR	5048695	ArrayIndexing	argv [ 0 ]		5048526	0					
ANR	5048696	Identifier	argv		5048526	0					
ANR	5048697	PrimaryExpression	0		5048526	1					
ANR	5048698	Argument	1		5048526	1					
ANR	5048699	PrimaryExpression	1		5048526	0					
ANR	5048700	BreakStatement	break ;	101:12:1561:1566	5048526	21	True				
ANR	5048701	Label	case 'n' :	105:8:1579:1587	5048526	22	True				
ANR	5048702	IfStatement	"if ( parse_uint_full ( optarg , & v , 0 ) < 0 )"		5048526	23					
ANR	5048703	Condition	"parse_uint_full ( optarg , & v , 0 ) < 0"	107:16:1622:1655	5048526	0	True				
ANR	5048704	RelationalExpression	"parse_uint_full ( optarg , & v , 0 ) < 0"		5048526	0		<			
ANR	5048705	CallExpression	"parse_uint_full ( optarg , & v , 0 )"		5048526	0					
ANR	5048706	Callee	parse_uint_full		5048526	0					
ANR	5048707	Identifier	parse_uint_full		5048526	0					
ANR	5048708	ArgumentList	optarg		5048526	1					
ANR	5048709	Argument	optarg		5048526	0					
ANR	5048710	Identifier	optarg		5048526	0					
ANR	5048711	Argument	& v		5048526	1					
ANR	5048712	UnaryOperationExpression	& v		5048526	0					
ANR	5048713	UnaryOperator	&		5048526	0					
ANR	5048714	Identifier	v		5048526	1					
ANR	5048715	Argument	0		5048526	2					
ANR	5048716	PrimaryExpression	0		5048526	0					
ANR	5048717	PrimaryExpression	0		5048526	1					
ANR	5048718	CompoundStatement		105:52:1581:1581	5048526	1					
ANR	5048719	ExpressionStatement	"fprintf ( stderr , ""cannot parse n_vectors\\n"" )"	109:16:1677:1720	5048526	0	True				
ANR	5048720	CallExpression	"fprintf ( stderr , ""cannot parse n_vectors\\n"" )"		5048526	0					
ANR	5048721	Callee	fprintf		5048526	0					
ANR	5048722	Identifier	fprintf		5048526	0					
ANR	5048723	ArgumentList	stderr		5048526	1					
ANR	5048724	Argument	stderr		5048526	0					
ANR	5048725	Identifier	stderr		5048526	0					
ANR	5048726	Argument	"""cannot parse n_vectors\\n"""		5048526	1					
ANR	5048727	PrimaryExpression	"""cannot parse n_vectors\\n"""		5048526	0					
ANR	5048728	ExpressionStatement	"ivshmem_server_usage ( argv [ 0 ] , 1 )"	111:16:1739:1771	5048526	1	True				
ANR	5048729	CallExpression	"ivshmem_server_usage ( argv [ 0 ] , 1 )"		5048526	0					
ANR	5048730	Callee	ivshmem_server_usage		5048526	0					
ANR	5048731	Identifier	ivshmem_server_usage		5048526	0					
ANR	5048732	ArgumentList	argv [ 0 ]		5048526	1					
ANR	5048733	Argument	argv [ 0 ]		5048526	0					
ANR	5048734	ArrayIndexing	argv [ 0 ]		5048526	0					
ANR	5048735	Identifier	argv		5048526	0					
ANR	5048736	PrimaryExpression	0		5048526	1					
ANR	5048737	Argument	1		5048526	1					
ANR	5048738	PrimaryExpression	1		5048526	0					
ANR	5048739	ExpressionStatement	args -> n_vectors = v	115:12:1801:1820	5048526	24	True				
ANR	5048740	AssignmentExpression	args -> n_vectors = v		5048526	0		=			
ANR	5048741	PtrMemberAccess	args -> n_vectors		5048526	0					
ANR	5048742	Identifier	args		5048526	0					
ANR	5048743	Identifier	n_vectors		5048526	1					
ANR	5048744	Identifier	v		5048526	1					
ANR	5048745	BreakStatement	break ;	117:12:1835:1840	5048526	25	True				
ANR	5048746	Label	default :	121:8:1853:1860	5048526	26	True				
ANR	5048747	Identifier	default		5048526	0					
ANR	5048748	ExpressionStatement	"ivshmem_server_usage ( argv [ 0 ] , 1 )"	123:12:1875:1907	5048526	27	True				
ANR	5048749	CallExpression	"ivshmem_server_usage ( argv [ 0 ] , 1 )"		5048526	0					
ANR	5048750	Callee	ivshmem_server_usage		5048526	0					
ANR	5048751	Identifier	ivshmem_server_usage		5048526	0					
ANR	5048752	ArgumentList	argv [ 0 ]		5048526	1					
ANR	5048753	Argument	argv [ 0 ]		5048526	0					
ANR	5048754	ArrayIndexing	argv [ 0 ]		5048526	0					
ANR	5048755	Identifier	argv		5048526	0					
ANR	5048756	PrimaryExpression	0		5048526	1					
ANR	5048757	Argument	1		5048526	1					
ANR	5048758	PrimaryExpression	1		5048526	0					
ANR	5048759	BreakStatement	break ;	125:12:1922:1927	5048526	28	True				
ANR	5048760	IfStatement	if ( args -> n_vectors > IVSHMEM_SERVER_MAX_VECTORS )		5048526	29					
ANR	5048761	Condition	args -> n_vectors > IVSHMEM_SERVER_MAX_VECTORS	133:8:1958:2001	5048526	0	True				
ANR	5048762	RelationalExpression	args -> n_vectors > IVSHMEM_SERVER_MAX_VECTORS		5048526	0		>			
ANR	5048763	PtrMemberAccess	args -> n_vectors		5048526	0					
ANR	5048764	Identifier	args		5048526	0					
ANR	5048765	Identifier	n_vectors		5048526	1					
ANR	5048766	Identifier	IVSHMEM_SERVER_MAX_VECTORS		5048526	1					
ANR	5048767	CompoundStatement		131:54:1927:1927	5048526	1					
ANR	5048768	ExpressionStatement	"fprintf ( stderr , ""too many requested vectors (max is %d)\\n"" , IVSHMEM_SERVER_MAX_VECTORS )"	135:8:2015:2119	5048526	0	True				
ANR	5048769	CallExpression	"fprintf ( stderr , ""too many requested vectors (max is %d)\\n"" , IVSHMEM_SERVER_MAX_VECTORS )"		5048526	0					
ANR	5048770	Callee	fprintf		5048526	0					
ANR	5048771	Identifier	fprintf		5048526	0					
ANR	5048772	ArgumentList	stderr		5048526	1					
ANR	5048773	Argument	stderr		5048526	0					
ANR	5048774	Identifier	stderr		5048526	0					
ANR	5048775	Argument	"""too many requested vectors (max is %d)\\n"""		5048526	1					
ANR	5048776	PrimaryExpression	"""too many requested vectors (max is %d)\\n"""		5048526	0					
ANR	5048777	Argument	IVSHMEM_SERVER_MAX_VECTORS		5048526	2					
ANR	5048778	Identifier	IVSHMEM_SERVER_MAX_VECTORS		5048526	0					
ANR	5048779	ExpressionStatement	"ivshmem_server_usage ( argv [ 0 ] , 1 )"	139:8:2130:2162	5048526	1	True				
ANR	5048780	CallExpression	"ivshmem_server_usage ( argv [ 0 ] , 1 )"		5048526	0					
ANR	5048781	Callee	ivshmem_server_usage		5048526	0					
ANR	5048782	Identifier	ivshmem_server_usage		5048526	0					
ANR	5048783	ArgumentList	argv [ 0 ]		5048526	1					
ANR	5048784	Argument	argv [ 0 ]		5048526	0					
ANR	5048785	ArrayIndexing	argv [ 0 ]		5048526	0					
ANR	5048786	Identifier	argv		5048526	0					
ANR	5048787	PrimaryExpression	0		5048526	1					
ANR	5048788	Argument	1		5048526	1					
ANR	5048789	PrimaryExpression	1		5048526	0					
ANR	5048790	IfStatement	if ( args -> verbose == 1 && args -> foreground == 0 )		5048526	30					
ANR	5048791	Condition	args -> verbose == 1 && args -> foreground == 0	145:8:2182:2224	5048526	0	True				
ANR	5048792	AndExpression	args -> verbose == 1 && args -> foreground == 0		5048526	0		&&			
ANR	5048793	EqualityExpression	args -> verbose == 1		5048526	0		==			
ANR	5048794	PtrMemberAccess	args -> verbose		5048526	0					
ANR	5048795	Identifier	args		5048526	0					
ANR	5048796	Identifier	verbose		5048526	1					
ANR	5048797	PrimaryExpression	1		5048526	1					
ANR	5048798	EqualityExpression	args -> foreground == 0		5048526	1		==			
ANR	5048799	PtrMemberAccess	args -> foreground		5048526	0					
ANR	5048800	Identifier	args		5048526	0					
ANR	5048801	Identifier	foreground		5048526	1					
ANR	5048802	PrimaryExpression	0		5048526	1					
ANR	5048803	CompoundStatement		143:53:2150:2150	5048526	1					
ANR	5048804	ExpressionStatement	"fprintf ( stderr , ""cannot use verbose in daemon mode\\n"" )"	147:8:2238:2292	5048526	0	True				
ANR	5048805	CallExpression	"fprintf ( stderr , ""cannot use verbose in daemon mode\\n"" )"		5048526	0					
ANR	5048806	Callee	fprintf		5048526	0					
ANR	5048807	Identifier	fprintf		5048526	0					
ANR	5048808	ArgumentList	stderr		5048526	1					
ANR	5048809	Argument	stderr		5048526	0					
ANR	5048810	Identifier	stderr		5048526	0					
ANR	5048811	Argument	"""cannot use verbose in daemon mode\\n"""		5048526	1					
ANR	5048812	PrimaryExpression	"""cannot use verbose in daemon mode\\n"""		5048526	0					
ANR	5048813	ExpressionStatement	"ivshmem_server_usage ( argv [ 0 ] , 1 )"	149:8:2303:2335	5048526	1	True				
ANR	5048814	CallExpression	"ivshmem_server_usage ( argv [ 0 ] , 1 )"		5048526	0					
ANR	5048815	Callee	ivshmem_server_usage		5048526	0					
ANR	5048816	Identifier	ivshmem_server_usage		5048526	0					
ANR	5048817	ArgumentList	argv [ 0 ]		5048526	1					
ANR	5048818	Argument	argv [ 0 ]		5048526	0					
ANR	5048819	ArrayIndexing	argv [ 0 ]		5048526	0					
ANR	5048820	Identifier	argv		5048526	0					
ANR	5048821	PrimaryExpression	0		5048526	1					
ANR	5048822	Argument	1		5048526	1					
ANR	5048823	PrimaryExpression	1		5048526	0					
ANR	5048824	Identifier	ivshmem_server_parse_args		5048526	1					
ANR	5048825	ParameterList	"IvshmemServerArgs * args , int argc , char * argv [ ]"		5048526	2					
ANR	5048826	Parameter	IvshmemServerArgs * args	1:26:26:48	5048526	0	True				
ANR	5048827	ParameterType	IvshmemServerArgs *		5048526	0					
ANR	5048828	Identifier	args		5048526	1					
ANR	5048829	Parameter	int argc	1:51:51:58	5048526	1	True				
ANR	5048830	ParameterType	int		5048526	0					
ANR	5048831	Identifier	argc		5048526	1					
ANR	5048832	Parameter	char * argv [ ]	1:61:61:72	5048526	2	True				
ANR	5048833	ParameterType	char * [ ]		5048526	0					
ANR	5048834	Identifier	argv		5048526	1					
ANR	5048835	CFGEntryNode	ENTRY		5048526		True				
ANR	5048836	CFGExitNode	EXIT		5048526		True				
ANR	5048837	Symbol	argc		5048526						
ANR	5048838	Symbol	IVSHMEM_SERVER_MAX_VECTORS		5048526						
ANR	5048839	Symbol	c		5048526						
ANR	5048840	Symbol	NULL		5048526						
ANR	5048841	Symbol	errp		5048526						
ANR	5048842	Symbol	args -> verbose		5048526						
ANR	5048843	Symbol	args -> shm_path		5048526						
ANR	5048844	Symbol	optarg		5048526						
ANR	5048845	Symbol	* argv		5048526						
ANR	5048846	Symbol	stderr		5048526						
ANR	5048847	Symbol	argv		5048526						
ANR	5048848	Symbol	* args		5048526						
ANR	5048849	Symbol	args -> pid_file		5048526						
ANR	5048850	Symbol	& errp		5048526						
ANR	5048851	Symbol	args		5048526						
ANR	5048852	Symbol	args -> n_vectors		5048526						
ANR	5048853	Symbol	v		5048526						
ANR	5048854	Symbol	args -> unix_socket_path		5048526						
ANR	5048855	Symbol	strdup		5048526						
ANR	5048856	Symbol	& args -> shm_size		5048526						
ANR	5048857	Symbol	& v		5048526						
ANR	5048858	Symbol	args -> foreground		5048526						
ANR	5048859	Symbol	error_get_pretty		5048526						
ANR	5048860	Symbol	parse_uint_full		5048526						
