command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7265644	File	/home/p4ultr4n/workplace/ReVeal/raw_code/read_access_unit_01_1.c								
ANR	7265645	Function	read_access_unit	1:0:0:6463							
ANR	7265646	FunctionDef	"read_access_unit (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		7265645	0					
ANR	7265647	CompoundStatement		5:0:126:6463	7265645	0					
ANR	7265648	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:133:165	7265645	0	True				
ANR	7265649	IdentifierDecl	* buf = avpkt -> data		7265645	0					
ANR	7265650	IdentifierDeclType	const uint8_t *		7265645	0					
ANR	7265651	Identifier	buf		7265645	1					
ANR	7265652	AssignmentExpression	* buf = avpkt -> data		7265645	2		=			
ANR	7265653	Identifier	buf		7265645	0					
ANR	7265654	PtrMemberAccess	avpkt -> data		7265645	1					
ANR	7265655	Identifier	avpkt		7265645	0					
ANR	7265656	Identifier	data		7265645	1					
ANR	7265657	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:172:198	7265645	1	True				
ANR	7265658	IdentifierDecl	buf_size = avpkt -> size		7265645	0					
ANR	7265659	IdentifierDeclType	int		7265645	0					
ANR	7265660	Identifier	buf_size		7265645	1					
ANR	7265661	AssignmentExpression	buf_size = avpkt -> size		7265645	2		=			
ANR	7265662	Identifier	buf_size		7265645	0					
ANR	7265663	PtrMemberAccess	avpkt -> size		7265645	1					
ANR	7265664	Identifier	avpkt		7265645	0					
ANR	7265665	Identifier	size		7265645	1					
ANR	7265666	IdentifierDeclStatement	MLPDecodeContext * m = avctx -> priv_data ;	11:4:205:243	7265645	2	True				
ANR	7265667	IdentifierDecl	* m = avctx -> priv_data		7265645	0					
ANR	7265668	IdentifierDeclType	MLPDecodeContext *		7265645	0					
ANR	7265669	Identifier	m		7265645	1					
ANR	7265670	AssignmentExpression	* m = avctx -> priv_data		7265645	2		=			
ANR	7265671	Identifier	m		7265645	0					
ANR	7265672	PtrMemberAccess	avctx -> priv_data		7265645	1					
ANR	7265673	Identifier	avctx		7265645	0					
ANR	7265674	Identifier	priv_data		7265645	1					
ANR	7265675	IdentifierDeclStatement	GetBitContext gb ;	13:4:250:266	7265645	3	True				
ANR	7265676	IdentifierDecl	gb		7265645	0					
ANR	7265677	IdentifierDeclType	GetBitContext		7265645	0					
ANR	7265678	Identifier	gb		7265645	1					
ANR	7265679	IdentifierDeclStatement	"unsigned int length , substr ;"	15:4:273:300	7265645	4	True				
ANR	7265680	IdentifierDecl	length		7265645	0					
ANR	7265681	IdentifierDeclType	unsigned int		7265645	0					
ANR	7265682	Identifier	length		7265645	1					
ANR	7265683	IdentifierDecl	substr		7265645	1					
ANR	7265684	IdentifierDeclType	unsigned int		7265645	0					
ANR	7265685	Identifier	substr		7265645	1					
ANR	7265686	IdentifierDeclStatement	unsigned int substream_start ;	17:4:307:335	7265645	5	True				
ANR	7265687	IdentifierDecl	substream_start		7265645	0					
ANR	7265688	IdentifierDeclType	unsigned int		7265645	0					
ANR	7265689	Identifier	substream_start		7265645	1					
ANR	7265690	IdentifierDeclStatement	unsigned int header_size = 4 ;	19:4:342:370	7265645	6	True				
ANR	7265691	IdentifierDecl	header_size = 4		7265645	0					
ANR	7265692	IdentifierDeclType	unsigned int		7265645	0					
ANR	7265693	Identifier	header_size		7265645	1					
ANR	7265694	AssignmentExpression	header_size = 4		7265645	2		=			
ANR	7265695	Identifier	header_size		7265645	0					
ANR	7265696	PrimaryExpression	4		7265645	1					
ANR	7265697	IdentifierDeclStatement	unsigned int substr_header_size = 0 ;	21:4:377:412	7265645	7	True				
ANR	7265698	IdentifierDecl	substr_header_size = 0		7265645	0					
ANR	7265699	IdentifierDeclType	unsigned int		7265645	0					
ANR	7265700	Identifier	substr_header_size		7265645	1					
ANR	7265701	AssignmentExpression	substr_header_size = 0		7265645	2		=			
ANR	7265702	Identifier	substr_header_size		7265645	0					
ANR	7265703	PrimaryExpression	0		7265645	1					
ANR	7265704	IdentifierDeclStatement	uint8_t substream_parity_present [ MAX_SUBSTREAMS ] ;	23:4:419:467	7265645	8	True				
ANR	7265705	IdentifierDecl	substream_parity_present [ MAX_SUBSTREAMS ]		7265645	0					
ANR	7265706	IdentifierDeclType	uint8_t [ MAX_SUBSTREAMS ]		7265645	0					
ANR	7265707	Identifier	substream_parity_present		7265645	1					
ANR	7265708	Identifier	MAX_SUBSTREAMS		7265645	2					
ANR	7265709	IdentifierDeclStatement	uint16_t substream_data_len [ MAX_SUBSTREAMS ] ;	25:4:474:517	7265645	9	True				
ANR	7265710	IdentifierDecl	substream_data_len [ MAX_SUBSTREAMS ]		7265645	0					
ANR	7265711	IdentifierDeclType	uint16_t [ MAX_SUBSTREAMS ]		7265645	0					
ANR	7265712	Identifier	substream_data_len		7265645	1					
ANR	7265713	Identifier	MAX_SUBSTREAMS		7265645	2					
ANR	7265714	IdentifierDeclStatement	uint8_t parity_bits ;	27:4:524:543	7265645	10	True				
ANR	7265715	IdentifierDecl	parity_bits		7265645	0					
ANR	7265716	IdentifierDeclType	uint8_t		7265645	0					
ANR	7265717	Identifier	parity_bits		7265645	1					
ANR	7265718	IfStatement	if ( buf_size < 4 )		7265645	11					
ANR	7265719	Condition	buf_size < 4	31:8:556:567	7265645	0	True				
ANR	7265720	RelationalExpression	buf_size < 4		7265645	0		<			
ANR	7265721	Identifier	buf_size		7265645	0					
ANR	7265722	PrimaryExpression	4		7265645	1					
ANR	7265723	ReturnStatement	return 0 ;	33:8:579:587	7265645	1	True				
ANR	7265724	PrimaryExpression	0		7265645	0					
ANR	7265725	ExpressionStatement	length = ( AV_RB16 ( buf ) & 0xfff ) * 2	37:4:596:631	7265645	12	True				
ANR	7265726	AssignmentExpression	length = ( AV_RB16 ( buf ) & 0xfff ) * 2		7265645	0		=			
ANR	7265727	Identifier	length		7265645	0					
ANR	7265728	MultiplicativeExpression	( AV_RB16 ( buf ) & 0xfff ) * 2		7265645	1		*			
ANR	7265729	BitAndExpression	AV_RB16 ( buf ) & 0xfff		7265645	0		&			
ANR	7265730	CallExpression	AV_RB16 ( buf )		7265645	0					
ANR	7265731	Callee	AV_RB16		7265645	0					
ANR	7265732	Identifier	AV_RB16		7265645	0					
ANR	7265733	ArgumentList	buf		7265645	1					
ANR	7265734	Argument	buf		7265645	0					
ANR	7265735	Identifier	buf		7265645	0					
ANR	7265736	PrimaryExpression	0xfff		7265645	1					
ANR	7265737	PrimaryExpression	2		7265645	1					
ANR	7265738	IfStatement	if ( length > buf_size )		7265645	13					
ANR	7265739	Condition	length > buf_size	41:8:644:660	7265645	0	True				
ANR	7265740	RelationalExpression	length > buf_size		7265645	0		>			
ANR	7265741	Identifier	length		7265645	0					
ANR	7265742	Identifier	buf_size		7265645	1					
ANR	7265743	ReturnStatement	return - 1 ;	43:8:672:681	7265645	1	True				
ANR	7265744	UnaryOperationExpression	- 1		7265645	0					
ANR	7265745	UnaryOperator	-		7265645	0					
ANR	7265746	PrimaryExpression	1		7265645	1					
ANR	7265747	ExpressionStatement	"init_get_bits ( & gb , ( buf + 4 ) , ( length - 4 ) * 8 )"	47:4:690:737	7265645	14	True				
ANR	7265748	CallExpression	"init_get_bits ( & gb , ( buf + 4 ) , ( length - 4 ) * 8 )"		7265645	0					
ANR	7265749	Callee	init_get_bits		7265645	0					
ANR	7265750	Identifier	init_get_bits		7265645	0					
ANR	7265751	ArgumentList	& gb		7265645	1					
ANR	7265752	Argument	& gb		7265645	0					
ANR	7265753	UnaryOperationExpression	& gb		7265645	0					
ANR	7265754	UnaryOperator	&		7265645	0					
ANR	7265755	Identifier	gb		7265645	1					
ANR	7265756	Argument	buf + 4		7265645	1					
ANR	7265757	AdditiveExpression	buf + 4		7265645	0		+			
ANR	7265758	Identifier	buf		7265645	0					
ANR	7265759	PrimaryExpression	4		7265645	1					
ANR	7265760	Argument	( length - 4 ) * 8		7265645	2					
ANR	7265761	MultiplicativeExpression	( length - 4 ) * 8		7265645	0		*			
ANR	7265762	AdditiveExpression	length - 4		7265645	0		-			
ANR	7265763	Identifier	length		7265645	0					
ANR	7265764	PrimaryExpression	4		7265645	1					
ANR	7265765	PrimaryExpression	8		7265645	1					
ANR	7265766	ExpressionStatement	m -> is_major_sync_unit = 0	51:4:746:771	7265645	15	True				
ANR	7265767	AssignmentExpression	m -> is_major_sync_unit = 0		7265645	0		=			
ANR	7265768	PtrMemberAccess	m -> is_major_sync_unit		7265645	0					
ANR	7265769	Identifier	m		7265645	0					
ANR	7265770	Identifier	is_major_sync_unit		7265645	1					
ANR	7265771	PrimaryExpression	0		7265645	1					
ANR	7265772	IfStatement	"if ( show_bits_long ( & gb , 31 ) == ( 0xf8726fba >> 1 ) )"		7265645	16					
ANR	7265773	Condition	"show_bits_long ( & gb , 31 ) == ( 0xf8726fba >> 1 )"	53:8:782:825	7265645	0	True				
ANR	7265774	EqualityExpression	"show_bits_long ( & gb , 31 ) == ( 0xf8726fba >> 1 )"		7265645	0		==			
ANR	7265775	CallExpression	"show_bits_long ( & gb , 31 )"		7265645	0					
ANR	7265776	Callee	show_bits_long		7265645	0					
ANR	7265777	Identifier	show_bits_long		7265645	0					
ANR	7265778	ArgumentList	& gb		7265645	1					
ANR	7265779	Argument	& gb		7265645	0					
ANR	7265780	UnaryOperationExpression	& gb		7265645	0					
ANR	7265781	UnaryOperator	&		7265645	0					
ANR	7265782	Identifier	gb		7265645	1					
ANR	7265783	Argument	31		7265645	1					
ANR	7265784	PrimaryExpression	31		7265645	0					
ANR	7265785	ShiftExpression	0xf8726fba >> 1		7265645	1		>>			
ANR	7265786	PrimaryExpression	0xf8726fba		7265645	0					
ANR	7265787	PrimaryExpression	1		7265645	1					
ANR	7265788	CompoundStatement		49:54:701:701	7265645	1					
ANR	7265789	IfStatement	"if ( read_major_sync ( m , & gb ) < 0 )"		7265645	0					
ANR	7265790	Condition	"read_major_sync ( m , & gb ) < 0"	55:12:843:869	7265645	0	True				
ANR	7265791	RelationalExpression	"read_major_sync ( m , & gb ) < 0"		7265645	0		<			
ANR	7265792	CallExpression	"read_major_sync ( m , & gb )"		7265645	0					
ANR	7265793	Callee	read_major_sync		7265645	0					
ANR	7265794	Identifier	read_major_sync		7265645	0					
ANR	7265795	ArgumentList	m		7265645	1					
ANR	7265796	Argument	m		7265645	0					
ANR	7265797	Identifier	m		7265645	0					
ANR	7265798	Argument	& gb		7265645	1					
ANR	7265799	UnaryOperationExpression	& gb		7265645	0					
ANR	7265800	UnaryOperator	&		7265645	0					
ANR	7265801	Identifier	gb		7265645	1					
ANR	7265802	PrimaryExpression	0		7265645	1					
ANR	7265803	GotoStatement	goto error ;	57:12:885:895	7265645	1	True				
ANR	7265804	Identifier	error		7265645	0					
ANR	7265805	ExpressionStatement	m -> is_major_sync_unit = 1	59:8:906:931	7265645	1	True				
ANR	7265806	AssignmentExpression	m -> is_major_sync_unit = 1		7265645	0		=			
ANR	7265807	PtrMemberAccess	m -> is_major_sync_unit		7265645	0					
ANR	7265808	Identifier	m		7265645	0					
ANR	7265809	Identifier	is_major_sync_unit		7265645	1					
ANR	7265810	PrimaryExpression	1		7265645	1					
ANR	7265811	ExpressionStatement	header_size += 28	61:8:942:959	7265645	2	True				
ANR	7265812	AssignmentExpression	header_size += 28		7265645	0		+=			
ANR	7265813	Identifier	header_size		7265645	0					
ANR	7265814	PrimaryExpression	28		7265645	1					
ANR	7265815	IfStatement	if ( ! m -> params_valid )		7265645	17					
ANR	7265816	Condition	! m -> params_valid	67:8:979:994	7265645	0	True				
ANR	7265817	UnaryOperationExpression	! m -> params_valid		7265645	0					
ANR	7265818	UnaryOperator	!		7265645	0					
ANR	7265819	PtrMemberAccess	m -> params_valid		7265645	1					
ANR	7265820	Identifier	m		7265645	0					
ANR	7265821	Identifier	params_valid		7265645	1					
ANR	7265822	CompoundStatement		63:26:870:870	7265645	1					
ANR	7265823	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_WARNING , ""Stream parameters not seen; skipping frame.\\n"" )"	69:8:1008:1105	7265645	0	True				
ANR	7265824	CallExpression	"av_log ( m -> avctx , AV_LOG_WARNING , ""Stream parameters not seen; skipping frame.\\n"" )"		7265645	0					
ANR	7265825	Callee	av_log		7265645	0					
ANR	7265826	Identifier	av_log		7265645	0					
ANR	7265827	ArgumentList	m -> avctx		7265645	1					
ANR	7265828	Argument	m -> avctx		7265645	0					
ANR	7265829	PtrMemberAccess	m -> avctx		7265645	0					
ANR	7265830	Identifier	m		7265645	0					
ANR	7265831	Identifier	avctx		7265645	1					
ANR	7265832	Argument	AV_LOG_WARNING		7265645	1					
ANR	7265833	Identifier	AV_LOG_WARNING		7265645	0					
ANR	7265834	Argument	"""Stream parameters not seen; skipping frame.\\n"""		7265645	2					
ANR	7265835	PrimaryExpression	"""Stream parameters not seen; skipping frame.\\n"""		7265645	0					
ANR	7265836	ExpressionStatement	* data_size = 0	73:8:1116:1130	7265645	1	True				
ANR	7265837	AssignmentExpression	* data_size = 0		7265645	0		=			
ANR	7265838	UnaryOperationExpression	* data_size		7265645	0					
ANR	7265839	UnaryOperator	*		7265645	0					
ANR	7265840	Identifier	data_size		7265645	1					
ANR	7265841	PrimaryExpression	0		7265645	1					
ANR	7265842	ReturnStatement	return length ;	75:8:1141:1154	7265645	2	True				
ANR	7265843	Identifier	length		7265645	0					
ANR	7265844	ExpressionStatement	substream_start = 0	81:4:1170:1189	7265645	18	True				
ANR	7265845	AssignmentExpression	substream_start = 0		7265645	0		=			
ANR	7265846	Identifier	substream_start		7265645	0					
ANR	7265847	PrimaryExpression	0		7265645	1					
ANR	7265848	ForStatement	for ( substr = 0 ; substr < m -> num_substreams ; substr ++ )		7265645	19					
ANR	7265849	ForInit	substr = 0 ;	85:9:1203:1213	7265645	0	True				
ANR	7265850	AssignmentExpression	substr = 0		7265645	0		=			
ANR	7265851	Identifier	substr		7265645	0					
ANR	7265852	PrimaryExpression	0		7265645	1					
ANR	7265853	Condition	substr < m -> num_substreams	85:21:1215:1240	7265645	1	True				
ANR	7265854	RelationalExpression	substr < m -> num_substreams		7265645	0		<			
ANR	7265855	Identifier	substr		7265645	0					
ANR	7265856	PtrMemberAccess	m -> num_substreams		7265645	1					
ANR	7265857	Identifier	m		7265645	0					
ANR	7265858	Identifier	num_substreams		7265645	1					
ANR	7265859	PostIncDecOperationExpression	substr ++	85:49:1243:1250	7265645	2	True				
ANR	7265860	Identifier	substr		7265645	0					
ANR	7265861	IncDec	++		7265645	1					
ANR	7265862	CompoundStatement		83:8:1137:1201	7265645	3					
ANR	7265863	IdentifierDeclStatement	"int extraword_present , checkdata_present , end , nonrestart_substr ;"	87:8:1264:1328	7265645	0	True				
ANR	7265864	IdentifierDecl	extraword_present		7265645	0					
ANR	7265865	IdentifierDeclType	int		7265645	0					
ANR	7265866	Identifier	extraword_present		7265645	1					
ANR	7265867	IdentifierDecl	checkdata_present		7265645	1					
ANR	7265868	IdentifierDeclType	int		7265645	0					
ANR	7265869	Identifier	checkdata_present		7265645	1					
ANR	7265870	IdentifierDecl	end		7265645	2					
ANR	7265871	IdentifierDeclType	int		7265645	0					
ANR	7265872	Identifier	end		7265645	1					
ANR	7265873	IdentifierDecl	nonrestart_substr		7265645	3					
ANR	7265874	IdentifierDeclType	int		7265645	0					
ANR	7265875	Identifier	nonrestart_substr		7265645	1					
ANR	7265876	ExpressionStatement	extraword_present = get_bits1 ( & gb )	91:8:1341:1375	7265645	1	True				
ANR	7265877	AssignmentExpression	extraword_present = get_bits1 ( & gb )		7265645	0		=			
ANR	7265878	Identifier	extraword_present		7265645	0					
ANR	7265879	CallExpression	get_bits1 ( & gb )		7265645	1					
ANR	7265880	Callee	get_bits1		7265645	0					
ANR	7265881	Identifier	get_bits1		7265645	0					
ANR	7265882	ArgumentList	& gb		7265645	1					
ANR	7265883	Argument	& gb		7265645	0					
ANR	7265884	UnaryOperationExpression	& gb		7265645	0					
ANR	7265885	UnaryOperator	&		7265645	0					
ANR	7265886	Identifier	gb		7265645	1					
ANR	7265887	ExpressionStatement	nonrestart_substr = get_bits1 ( & gb )	93:8:1386:1420	7265645	2	True				
ANR	7265888	AssignmentExpression	nonrestart_substr = get_bits1 ( & gb )		7265645	0		=			
ANR	7265889	Identifier	nonrestart_substr		7265645	0					
ANR	7265890	CallExpression	get_bits1 ( & gb )		7265645	1					
ANR	7265891	Callee	get_bits1		7265645	0					
ANR	7265892	Identifier	get_bits1		7265645	0					
ANR	7265893	ArgumentList	& gb		7265645	1					
ANR	7265894	Argument	& gb		7265645	0					
ANR	7265895	UnaryOperationExpression	& gb		7265645	0					
ANR	7265896	UnaryOperator	&		7265645	0					
ANR	7265897	Identifier	gb		7265645	1					
ANR	7265898	ExpressionStatement	checkdata_present = get_bits1 ( & gb )	95:8:1431:1465	7265645	3	True				
ANR	7265899	AssignmentExpression	checkdata_present = get_bits1 ( & gb )		7265645	0		=			
ANR	7265900	Identifier	checkdata_present		7265645	0					
ANR	7265901	CallExpression	get_bits1 ( & gb )		7265645	1					
ANR	7265902	Callee	get_bits1		7265645	0					
ANR	7265903	Identifier	get_bits1		7265645	0					
ANR	7265904	ArgumentList	& gb		7265645	1					
ANR	7265905	Argument	& gb		7265645	0					
ANR	7265906	UnaryOperationExpression	& gb		7265645	0					
ANR	7265907	UnaryOperator	&		7265645	0					
ANR	7265908	Identifier	gb		7265645	1					
ANR	7265909	ExpressionStatement	skip_bits1 ( & gb )	97:8:1476:1491	7265645	4	True				
ANR	7265910	CallExpression	skip_bits1 ( & gb )		7265645	0					
ANR	7265911	Callee	skip_bits1		7265645	0					
ANR	7265912	Identifier	skip_bits1		7265645	0					
ANR	7265913	ArgumentList	& gb		7265645	1					
ANR	7265914	Argument	& gb		7265645	0					
ANR	7265915	UnaryOperationExpression	& gb		7265645	0					
ANR	7265916	UnaryOperator	&		7265645	0					
ANR	7265917	Identifier	gb		7265645	1					
ANR	7265918	ExpressionStatement	"end = get_bits ( & gb , 12 ) * 2"	101:8:1504:1531	7265645	5	True				
ANR	7265919	AssignmentExpression	"end = get_bits ( & gb , 12 ) * 2"		7265645	0		=			
ANR	7265920	Identifier	end		7265645	0					
ANR	7265921	MultiplicativeExpression	"get_bits ( & gb , 12 ) * 2"		7265645	1		*			
ANR	7265922	CallExpression	"get_bits ( & gb , 12 )"		7265645	0					
ANR	7265923	Callee	get_bits		7265645	0					
ANR	7265924	Identifier	get_bits		7265645	0					
ANR	7265925	ArgumentList	& gb		7265645	1					
ANR	7265926	Argument	& gb		7265645	0					
ANR	7265927	UnaryOperationExpression	& gb		7265645	0					
ANR	7265928	UnaryOperator	&		7265645	0					
ANR	7265929	Identifier	gb		7265645	1					
ANR	7265930	Argument	12		7265645	1					
ANR	7265931	PrimaryExpression	12		7265645	0					
ANR	7265932	PrimaryExpression	2		7265645	1					
ANR	7265933	ExpressionStatement	substr_header_size += 2	105:8:1544:1567	7265645	6	True				
ANR	7265934	AssignmentExpression	substr_header_size += 2		7265645	0		+=			
ANR	7265935	Identifier	substr_header_size		7265645	0					
ANR	7265936	PrimaryExpression	2		7265645	1					
ANR	7265937	IfStatement	if ( extraword_present )		7265645	7					
ANR	7265938	Condition	extraword_present	109:12:1584:1600	7265645	0	True				
ANR	7265939	Identifier	extraword_present		7265645	0					
ANR	7265940	CompoundStatement		105:31:1476:1476	7265645	1					
ANR	7265941	IfStatement	if ( m -> avctx -> codec_id == CODEC_ID_MLP )		7265645	0					
ANR	7265942	Condition	m -> avctx -> codec_id == CODEC_ID_MLP	111:16:1622:1655	7265645	0	True				
ANR	7265943	EqualityExpression	m -> avctx -> codec_id == CODEC_ID_MLP		7265645	0		==			
ANR	7265944	PtrMemberAccess	m -> avctx -> codec_id		7265645	0					
ANR	7265945	PtrMemberAccess	m -> avctx		7265645	0					
ANR	7265946	Identifier	m		7265645	0					
ANR	7265947	Identifier	avctx		7265645	1					
ANR	7265948	Identifier	codec_id		7265645	1					
ANR	7265949	Identifier	CODEC_ID_MLP		7265645	1					
ANR	7265950	CompoundStatement		107:52:1531:1531	7265645	1					
ANR	7265951	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""There must be no extraword for MLP.\\n"" )"	113:16:1677:1748	7265645	0	True				
ANR	7265952	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""There must be no extraword for MLP.\\n"" )"		7265645	0					
ANR	7265953	Callee	av_log		7265645	0					
ANR	7265954	Identifier	av_log		7265645	0					
ANR	7265955	ArgumentList	m -> avctx		7265645	1					
ANR	7265956	Argument	m -> avctx		7265645	0					
ANR	7265957	PtrMemberAccess	m -> avctx		7265645	0					
ANR	7265958	Identifier	m		7265645	0					
ANR	7265959	Identifier	avctx		7265645	1					
ANR	7265960	Argument	AV_LOG_ERROR		7265645	1					
ANR	7265961	Identifier	AV_LOG_ERROR		7265645	0					
ANR	7265962	Argument	"""There must be no extraword for MLP.\\n"""		7265645	2					
ANR	7265963	PrimaryExpression	"""There must be no extraword for MLP.\\n"""		7265645	0					
ANR	7265964	GotoStatement	goto error ;	115:16:1767:1777	7265645	1	True				
ANR	7265965	Identifier	error		7265645	0					
ANR	7265966	ExpressionStatement	"skip_bits ( & gb , 16 )"	119:12:1807:1825	7265645	1	True				
ANR	7265967	CallExpression	"skip_bits ( & gb , 16 )"		7265645	0					
ANR	7265968	Callee	skip_bits		7265645	0					
ANR	7265969	Identifier	skip_bits		7265645	0					
ANR	7265970	ArgumentList	& gb		7265645	1					
ANR	7265971	Argument	& gb		7265645	0					
ANR	7265972	UnaryOperationExpression	& gb		7265645	0					
ANR	7265973	UnaryOperator	&		7265645	0					
ANR	7265974	Identifier	gb		7265645	1					
ANR	7265975	Argument	16		7265645	1					
ANR	7265976	PrimaryExpression	16		7265645	0					
ANR	7265977	ExpressionStatement	substr_header_size += 2	121:12:1840:1863	7265645	2	True				
ANR	7265978	AssignmentExpression	substr_header_size += 2		7265645	0		+=			
ANR	7265979	Identifier	substr_header_size		7265645	0					
ANR	7265980	PrimaryExpression	2		7265645	1					
ANR	7265981	IfStatement	if ( ! ( nonrestart_substr ^ m -> is_major_sync_unit ) )		7265645	8					
ANR	7265982	Condition	! ( nonrestart_substr ^ m -> is_major_sync_unit )	127:12:1891:1934	7265645	0	True				
ANR	7265983	UnaryOperationExpression	! ( nonrestart_substr ^ m -> is_major_sync_unit )		7265645	0					
ANR	7265984	UnaryOperator	!		7265645	0					
ANR	7265985	ExclusiveOrExpression	nonrestart_substr ^ m -> is_major_sync_unit		7265645	1		^			
ANR	7265986	Identifier	nonrestart_substr		7265645	0					
ANR	7265987	PtrMemberAccess	m -> is_major_sync_unit		7265645	1					
ANR	7265988	Identifier	m		7265645	0					
ANR	7265989	Identifier	is_major_sync_unit		7265645	1					
ANR	7265990	CompoundStatement		123:58:1810:1810	7265645	1					
ANR	7265991	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""Invalid nonrestart_substr.\\n"" )"	129:12:1952:2014	7265645	0	True				
ANR	7265992	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""Invalid nonrestart_substr.\\n"" )"		7265645	0					
ANR	7265993	Callee	av_log		7265645	0					
ANR	7265994	Identifier	av_log		7265645	0					
ANR	7265995	ArgumentList	m -> avctx		7265645	1					
ANR	7265996	Argument	m -> avctx		7265645	0					
ANR	7265997	PtrMemberAccess	m -> avctx		7265645	0					
ANR	7265998	Identifier	m		7265645	0					
ANR	7265999	Identifier	avctx		7265645	1					
ANR	7266000	Argument	AV_LOG_ERROR		7265645	1					
ANR	7266001	Identifier	AV_LOG_ERROR		7265645	0					
ANR	7266002	Argument	"""Invalid nonrestart_substr.\\n"""		7265645	2					
ANR	7266003	PrimaryExpression	"""Invalid nonrestart_substr.\\n"""		7265645	0					
ANR	7266004	GotoStatement	goto error ;	131:12:2029:2039	7265645	1	True				
ANR	7266005	Identifier	error		7265645	0					
ANR	7266006	IfStatement	if ( end + header_size + substr_header_size > length )		7265645	9					
ANR	7266007	Condition	end + header_size + substr_header_size > length	137:12:2067:2113	7265645	0	True				
ANR	7266008	RelationalExpression	end + header_size + substr_header_size > length		7265645	0		>			
ANR	7266009	AdditiveExpression	end + header_size + substr_header_size		7265645	0		+			
ANR	7266010	Identifier	end		7265645	0					
ANR	7266011	AdditiveExpression	header_size + substr_header_size		7265645	1		+			
ANR	7266012	Identifier	header_size		7265645	0					
ANR	7266013	Identifier	substr_header_size		7265645	1					
ANR	7266014	Identifier	length		7265645	1					
ANR	7266015	CompoundStatement		133:61:1989:1989	7265645	1					
ANR	7266016	Statement	av_log	139:12:2131:2136	7265645	0	True				
ANR	7266017	Statement	(	139:18:2137:2137	7265645	1	True				
ANR	7266018	Statement	m	139:19:2138:2138	7265645	2	True				
ANR	7266019	Statement	->	139:20:2139:2140	7265645	3	True				
ANR	7266020	Statement	avctx	139:22:2141:2145	7265645	4	True				
ANR	7266021	Statement	","	139:27:2146:2146	7265645	5	True				
ANR	7266022	Statement	AV_LOG_ERROR	139:29:2148:2159	7265645	6	True				
ANR	7266023	Statement	","	139:41:2160:2160	7265645	7	True				
ANR	7266024	Statement	"""Indicated length of substream %d data goes off end of """	141:19:2182:2237	7265645	8	True				
ANR	7266025	Statement	"""packet.\\n"""	143:19:2259:2269	7265645	9	True				
ANR	7266026	Statement	","	143:30:2270:2270	7265645	10	True				
ANR	7266027	Statement	substr	143:32:2272:2277	7265645	11	True				
ANR	7266028	Statement	)	143:38:2278:2278	7265645	12	True				
ANR	7266029	ExpressionStatement		143:39:2279:2279	7265645	13	True				
ANR	7266030	ExpressionStatement	end = length - header_size - substr_header_size	145:12:2294:2341	7265645	14	True				
ANR	7266031	AssignmentExpression	end = length - header_size - substr_header_size		7265645	0		=			
ANR	7266032	Identifier	end		7265645	0					
ANR	7266033	AdditiveExpression	length - header_size - substr_header_size		7265645	1		-			
ANR	7266034	Identifier	length		7265645	0					
ANR	7266035	AdditiveExpression	header_size - substr_header_size		7265645	1		-			
ANR	7266036	Identifier	header_size		7265645	0					
ANR	7266037	Identifier	substr_header_size		7265645	1					
ANR	7266038	IfStatement	if ( end < substream_start )		7265645	10					
ANR	7266039	Condition	end < substream_start	151:12:2369:2389	7265645	0	True				
ANR	7266040	RelationalExpression	end < substream_start		7265645	0		<			
ANR	7266041	Identifier	end		7265645	0					
ANR	7266042	Identifier	substream_start		7265645	1					
ANR	7266043	CompoundStatement		147:35:2265:2265	7265645	1					
ANR	7266044	Statement	av_log	153:12:2407:2412	7265645	0	True				
ANR	7266045	Statement	(	153:18:2413:2413	7265645	1	True				
ANR	7266046	Statement	avctx	153:19:2414:2418	7265645	2	True				
ANR	7266047	Statement	","	153:24:2419:2419	7265645	3	True				
ANR	7266048	Statement	AV_LOG_ERROR	153:26:2421:2432	7265645	4	True				
ANR	7266049	Statement	","	153:38:2433:2433	7265645	5	True				
ANR	7266050	Statement	"""Indicated end offset of substream %d data """	155:19:2455:2498	7265645	6	True				
ANR	7266051	Statement	"""is smaller than calculated start offset.\\n"""	157:19:2520:2563	7265645	7	True				
ANR	7266052	Statement	","	157:63:2564:2564	7265645	8	True				
ANR	7266053	Statement	substr	159:19:2586:2591	7265645	9	True				
ANR	7266054	Statement	)	159:25:2592:2592	7265645	10	True				
ANR	7266055	ExpressionStatement		159:26:2593:2593	7265645	11	True				
ANR	7266056	GotoStatement	goto error ;	161:12:2608:2618	7265645	12	True				
ANR	7266057	Identifier	error		7265645	0					
ANR	7266058	IfStatement	if ( substr > m -> max_decoded_substream )		7265645	11					
ANR	7266059	Condition	substr > m -> max_decoded_substream	167:12:2646:2678	7265645	0	True				
ANR	7266060	RelationalExpression	substr > m -> max_decoded_substream		7265645	0		>			
ANR	7266061	Identifier	substr		7265645	0					
ANR	7266062	PtrMemberAccess	m -> max_decoded_substream		7265645	1					
ANR	7266063	Identifier	m		7265645	0					
ANR	7266064	Identifier	max_decoded_substream		7265645	1					
ANR	7266065	ContinueStatement	continue ;	169:12:2694:2702	7265645	1	True				
ANR	7266066	ExpressionStatement	substream_parity_present [ substr ] = checkdata_present	173:8:2715:2767	7265645	12	True				
ANR	7266067	AssignmentExpression	substream_parity_present [ substr ] = checkdata_present		7265645	0		=			
ANR	7266068	ArrayIndexing	substream_parity_present [ substr ]		7265645	0					
ANR	7266069	Identifier	substream_parity_present		7265645	0					
ANR	7266070	Identifier	substr		7265645	1					
ANR	7266071	Identifier	checkdata_present		7265645	1					
ANR	7266072	ExpressionStatement	substream_data_len [ substr ] = end - substream_start	175:8:2778:2828	7265645	13	True				
ANR	7266073	AssignmentExpression	substream_data_len [ substr ] = end - substream_start		7265645	0		=			
ANR	7266074	ArrayIndexing	substream_data_len [ substr ]		7265645	0					
ANR	7266075	Identifier	substream_data_len		7265645	0					
ANR	7266076	Identifier	substr		7265645	1					
ANR	7266077	AdditiveExpression	end - substream_start		7265645	1		-			
ANR	7266078	Identifier	end		7265645	0					
ANR	7266079	Identifier	substream_start		7265645	1					
ANR	7266080	ExpressionStatement	substream_start = end	177:8:2839:2860	7265645	14	True				
ANR	7266081	AssignmentExpression	substream_start = end		7265645	0		=			
ANR	7266082	Identifier	substream_start		7265645	0					
ANR	7266083	Identifier	end		7265645	1					
ANR	7266084	ExpressionStatement	"parity_bits = ff_mlp_calculate_parity ( buf , 4 )"	183:4:2876:2922	7265645	20	True				
ANR	7266085	AssignmentExpression	"parity_bits = ff_mlp_calculate_parity ( buf , 4 )"		7265645	0		=			
ANR	7266086	Identifier	parity_bits		7265645	0					
ANR	7266087	CallExpression	"ff_mlp_calculate_parity ( buf , 4 )"		7265645	1					
ANR	7266088	Callee	ff_mlp_calculate_parity		7265645	0					
ANR	7266089	Identifier	ff_mlp_calculate_parity		7265645	0					
ANR	7266090	ArgumentList	buf		7265645	1					
ANR	7266091	Argument	buf		7265645	0					
ANR	7266092	Identifier	buf		7265645	0					
ANR	7266093	Argument	4		7265645	1					
ANR	7266094	PrimaryExpression	4		7265645	0					
ANR	7266095	ExpressionStatement	"parity_bits ^= ff_mlp_calculate_parity ( buf + header_size , substr_header_size )"	185:4:2929:3006	7265645	21	True				
ANR	7266096	AssignmentExpression	"parity_bits ^= ff_mlp_calculate_parity ( buf + header_size , substr_header_size )"		7265645	0		^=			
ANR	7266097	Identifier	parity_bits		7265645	0					
ANR	7266098	CallExpression	"ff_mlp_calculate_parity ( buf + header_size , substr_header_size )"		7265645	1					
ANR	7266099	Callee	ff_mlp_calculate_parity		7265645	0					
ANR	7266100	Identifier	ff_mlp_calculate_parity		7265645	0					
ANR	7266101	ArgumentList	buf + header_size		7265645	1					
ANR	7266102	Argument	buf + header_size		7265645	0					
ANR	7266103	AdditiveExpression	buf + header_size		7265645	0		+			
ANR	7266104	Identifier	buf		7265645	0					
ANR	7266105	Identifier	header_size		7265645	1					
ANR	7266106	Argument	substr_header_size		7265645	1					
ANR	7266107	Identifier	substr_header_size		7265645	0					
ANR	7266108	IfStatement	if ( ( ( ( parity_bits >> 4 ) ^ parity_bits ) & 0xF ) != 0xF )		7265645	22					
ANR	7266109	Condition	( ( ( parity_bits >> 4 ) ^ parity_bits ) & 0xF ) != 0xF	189:8:3019:3067	7265645	0	True				
ANR	7266110	EqualityExpression	( ( ( parity_bits >> 4 ) ^ parity_bits ) & 0xF ) != 0xF		7265645	0		!=			
ANR	7266111	BitAndExpression	( ( parity_bits >> 4 ) ^ parity_bits ) & 0xF		7265645	0		&			
ANR	7266112	ExclusiveOrExpression	( parity_bits >> 4 ) ^ parity_bits		7265645	0		^			
ANR	7266113	ShiftExpression	parity_bits >> 4		7265645	0		>>			
ANR	7266114	Identifier	parity_bits		7265645	0					
ANR	7266115	PrimaryExpression	4		7265645	1					
ANR	7266116	Identifier	parity_bits		7265645	1					
ANR	7266117	PrimaryExpression	0xF		7265645	1					
ANR	7266118	PrimaryExpression	0xF		7265645	1					
ANR	7266119	CompoundStatement		185:59:2943:2943	7265645	1					
ANR	7266120	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Parity check failed.\\n"" )"	191:8:3081:3134	7265645	0	True				
ANR	7266121	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Parity check failed.\\n"" )"		7265645	0					
ANR	7266122	Callee	av_log		7265645	0					
ANR	7266123	Identifier	av_log		7265645	0					
ANR	7266124	ArgumentList	avctx		7265645	1					
ANR	7266125	Argument	avctx		7265645	0					
ANR	7266126	Identifier	avctx		7265645	0					
ANR	7266127	Argument	AV_LOG_ERROR		7265645	1					
ANR	7266128	Identifier	AV_LOG_ERROR		7265645	0					
ANR	7266129	Argument	"""Parity check failed.\\n"""		7265645	2					
ANR	7266130	PrimaryExpression	"""Parity check failed.\\n"""		7265645	0					
ANR	7266131	GotoStatement	goto error ;	193:8:3145:3155	7265645	1	True				
ANR	7266132	Identifier	error		7265645	0					
ANR	7266133	ExpressionStatement	buf += header_size + substr_header_size	199:4:3171:3210	7265645	23	True				
ANR	7266134	AssignmentExpression	buf += header_size + substr_header_size		7265645	0		+=			
ANR	7266135	Identifier	buf		7265645	0					
ANR	7266136	AdditiveExpression	header_size + substr_header_size		7265645	1		+			
ANR	7266137	Identifier	header_size		7265645	0					
ANR	7266138	Identifier	substr_header_size		7265645	1					
ANR	7266139	ForStatement	for ( substr = 0 ; substr <= m -> max_decoded_substream ; substr ++ )		7265645	24					
ANR	7266140	ForInit	substr = 0 ;	203:9:3224:3234	7265645	0	True				
ANR	7266141	AssignmentExpression	substr = 0		7265645	0		=			
ANR	7266142	Identifier	substr		7265645	0					
ANR	7266143	PrimaryExpression	0		7265645	1					
ANR	7266144	Condition	substr <= m -> max_decoded_substream	203:21:3236:3269	7265645	1	True				
ANR	7266145	RelationalExpression	substr <= m -> max_decoded_substream		7265645	0		<=			
ANR	7266146	Identifier	substr		7265645	0					
ANR	7266147	PtrMemberAccess	m -> max_decoded_substream		7265645	1					
ANR	7266148	Identifier	m		7265645	0					
ANR	7266149	Identifier	max_decoded_substream		7265645	1					
ANR	7266150	PostIncDecOperationExpression	substr ++	203:57:3272:3279	7265645	2	True				
ANR	7266151	Identifier	substr		7265645	0					
ANR	7266152	IncDec	++		7265645	1					
ANR	7266153	CompoundStatement		201:8:3166:3202	7265645	3					
ANR	7266154	IdentifierDeclStatement	SubStream * s = & m -> substream [ substr ] ;	205:8:3293:3329	7265645	0	True				
ANR	7266155	IdentifierDecl	* s = & m -> substream [ substr ]		7265645	0					
ANR	7266156	IdentifierDeclType	SubStream *		7265645	0					
ANR	7266157	Identifier	s		7265645	1					
ANR	7266158	AssignmentExpression	* s = & m -> substream [ substr ]		7265645	2		=			
ANR	7266159	Identifier	s		7265645	0					
ANR	7266160	UnaryOperationExpression	& m -> substream [ substr ]		7265645	1					
ANR	7266161	UnaryOperator	&		7265645	0					
ANR	7266162	ArrayIndexing	m -> substream [ substr ]		7265645	1					
ANR	7266163	PtrMemberAccess	m -> substream		7265645	0					
ANR	7266164	Identifier	m		7265645	0					
ANR	7266165	Identifier	substream		7265645	1					
ANR	7266166	Identifier	substr		7265645	1					
ANR	7266167	ExpressionStatement	"init_get_bits ( & gb , buf , substream_data_len [ substr ] * 8 )"	207:8:3340:3395	7265645	1	True				
ANR	7266168	CallExpression	"init_get_bits ( & gb , buf , substream_data_len [ substr ] * 8 )"		7265645	0					
ANR	7266169	Callee	init_get_bits		7265645	0					
ANR	7266170	Identifier	init_get_bits		7265645	0					
ANR	7266171	ArgumentList	& gb		7265645	1					
ANR	7266172	Argument	& gb		7265645	0					
ANR	7266173	UnaryOperationExpression	& gb		7265645	0					
ANR	7266174	UnaryOperator	&		7265645	0					
ANR	7266175	Identifier	gb		7265645	1					
ANR	7266176	Argument	buf		7265645	1					
ANR	7266177	Identifier	buf		7265645	0					
ANR	7266178	Argument	substream_data_len [ substr ] * 8		7265645	2					
ANR	7266179	MultiplicativeExpression	substream_data_len [ substr ] * 8		7265645	0		*			
ANR	7266180	ArrayIndexing	substream_data_len [ substr ]		7265645	0					
ANR	7266181	Identifier	substream_data_len		7265645	0					
ANR	7266182	Identifier	substr		7265645	1					
ANR	7266183	PrimaryExpression	8		7265645	1					
ANR	7266184	ExpressionStatement	m -> matrix_changed = 0	211:8:3408:3429	7265645	2	True				
ANR	7266185	AssignmentExpression	m -> matrix_changed = 0		7265645	0		=			
ANR	7266186	PtrMemberAccess	m -> matrix_changed		7265645	0					
ANR	7266187	Identifier	m		7265645	0					
ANR	7266188	Identifier	matrix_changed		7265645	1					
ANR	7266189	PrimaryExpression	0		7265645	1					
ANR	7266190	ExpressionStatement	"memset ( m -> filter_changed , 0 , sizeof ( m -> filter_changed ) )"	213:8:3440:3495	7265645	3	True				
ANR	7266191	CallExpression	"memset ( m -> filter_changed , 0 , sizeof ( m -> filter_changed ) )"		7265645	0					
ANR	7266192	Callee	memset		7265645	0					
ANR	7266193	Identifier	memset		7265645	0					
ANR	7266194	ArgumentList	m -> filter_changed		7265645	1					
ANR	7266195	Argument	m -> filter_changed		7265645	0					
ANR	7266196	PtrMemberAccess	m -> filter_changed		7265645	0					
ANR	7266197	Identifier	m		7265645	0					
ANR	7266198	Identifier	filter_changed		7265645	1					
ANR	7266199	Argument	0		7265645	1					
ANR	7266200	PrimaryExpression	0		7265645	0					
ANR	7266201	Argument	sizeof ( m -> filter_changed )		7265645	2					
ANR	7266202	SizeofExpression	sizeof ( m -> filter_changed )		7265645	0					
ANR	7266203	Sizeof	sizeof		7265645	0					
ANR	7266204	PtrMemberAccess	m -> filter_changed		7265645	1					
ANR	7266205	Identifier	m		7265645	0					
ANR	7266206	Identifier	filter_changed		7265645	1					
ANR	7266207	ExpressionStatement	s -> blockpos = 0	217:8:3508:3523	7265645	4	True				
ANR	7266208	AssignmentExpression	s -> blockpos = 0		7265645	0		=			
ANR	7266209	PtrMemberAccess	s -> blockpos		7265645	0					
ANR	7266210	Identifier	s		7265645	0					
ANR	7266211	Identifier	blockpos		7265645	1					
ANR	7266212	PrimaryExpression	0		7265645	1					
ANR	7266213	DoStatement	do		7265645	5					
ANR	7266214	CompoundStatement		215:11:3410:3410	7265645	0					
ANR	7266215	IfStatement	if ( get_bits1 ( & gb ) )		7265645	0					
ANR	7266216	Condition	get_bits1 ( & gb )	221:16:3556:3569	7265645	0	True				
ANR	7266217	CallExpression	get_bits1 ( & gb )		7265645	0					
ANR	7266218	Callee	get_bits1		7265645	0					
ANR	7266219	Identifier	get_bits1		7265645	0					
ANR	7266220	ArgumentList	& gb		7265645	1					
ANR	7266221	Argument	& gb		7265645	0					
ANR	7266222	UnaryOperationExpression	& gb		7265645	0					
ANR	7266223	UnaryOperator	&		7265645	0					
ANR	7266224	Identifier	gb		7265645	1					
ANR	7266225	CompoundStatement		217:32:3445:3445	7265645	1					
ANR	7266226	IfStatement	if ( get_bits1 ( & gb ) )		7265645	0					
ANR	7266227	Condition	get_bits1 ( & gb )	223:20:3595:3608	7265645	0	True				
ANR	7266228	CallExpression	get_bits1 ( & gb )		7265645	0					
ANR	7266229	Callee	get_bits1		7265645	0					
ANR	7266230	Identifier	get_bits1		7265645	0					
ANR	7266231	ArgumentList	& gb		7265645	1					
ANR	7266232	Argument	& gb		7265645	0					
ANR	7266233	UnaryOperationExpression	& gb		7265645	0					
ANR	7266234	UnaryOperator	&		7265645	0					
ANR	7266235	Identifier	gb		7265645	1					
ANR	7266236	CompoundStatement		219:36:3484:3484	7265645	1					
ANR	7266237	IfStatement	"if ( read_restart_header ( m , & gb , buf , substr ) < 0 )"		7265645	0					
ANR	7266238	Condition	"read_restart_header ( m , & gb , buf , substr ) < 0"	227:24:3701:3744	7265645	0	True				
ANR	7266239	RelationalExpression	"read_restart_header ( m , & gb , buf , substr ) < 0"		7265645	0		<			
ANR	7266240	CallExpression	"read_restart_header ( m , & gb , buf , substr )"		7265645	0					
ANR	7266241	Callee	read_restart_header		7265645	0					
ANR	7266242	Identifier	read_restart_header		7265645	0					
ANR	7266243	ArgumentList	m		7265645	1					
ANR	7266244	Argument	m		7265645	0					
ANR	7266245	Identifier	m		7265645	0					
ANR	7266246	Argument	& gb		7265645	1					
ANR	7266247	UnaryOperationExpression	& gb		7265645	0					
ANR	7266248	UnaryOperator	&		7265645	0					
ANR	7266249	Identifier	gb		7265645	1					
ANR	7266250	Argument	buf		7265645	2					
ANR	7266251	Identifier	buf		7265645	0					
ANR	7266252	Argument	substr		7265645	3					
ANR	7266253	Identifier	substr		7265645	0					
ANR	7266254	PrimaryExpression	0		7265645	1					
ANR	7266255	GotoStatement	goto next_substr ;	229:24:3772:3788	7265645	1	True				
ANR	7266256	Identifier	next_substr		7265645	0					
ANR	7266257	ExpressionStatement	s -> restart_seen = 1	231:20:3811:3830	7265645	1	True				
ANR	7266258	AssignmentExpression	s -> restart_seen = 1		7265645	0		=			
ANR	7266259	PtrMemberAccess	s -> restart_seen		7265645	0					
ANR	7266260	Identifier	s		7265645	0					
ANR	7266261	Identifier	restart_seen		7265645	1					
ANR	7266262	PrimaryExpression	1		7265645	1					
ANR	7266263	IfStatement	if ( ! s -> restart_seen )		7265645	1					
ANR	7266264	Condition	! s -> restart_seen	237:20:3874:3889	7265645	0	True				
ANR	7266265	UnaryOperationExpression	! s -> restart_seen		7265645	0					
ANR	7266266	UnaryOperator	!		7265645	0					
ANR	7266267	PtrMemberAccess	s -> restart_seen		7265645	1					
ANR	7266268	Identifier	s		7265645	0					
ANR	7266269	Identifier	restart_seen		7265645	1					
ANR	7266270	GotoStatement	goto next_substr ;	239:20:3913:3929	7265645	1	True				
ANR	7266271	Identifier	next_substr		7265645	0					
ANR	7266272	IfStatement	"if ( read_decoding_params ( m , & gb , substr ) < 0 )"		7265645	2					
ANR	7266273	Condition	"read_decoding_params ( m , & gb , substr ) < 0"	241:20:3952:3991	7265645	0	True				
ANR	7266274	RelationalExpression	"read_decoding_params ( m , & gb , substr ) < 0"		7265645	0		<			
ANR	7266275	CallExpression	"read_decoding_params ( m , & gb , substr )"		7265645	0					
ANR	7266276	Callee	read_decoding_params		7265645	0					
ANR	7266277	Identifier	read_decoding_params		7265645	0					
ANR	7266278	ArgumentList	m		7265645	1					
ANR	7266279	Argument	m		7265645	0					
ANR	7266280	Identifier	m		7265645	0					
ANR	7266281	Argument	& gb		7265645	1					
ANR	7266282	UnaryOperationExpression	& gb		7265645	0					
ANR	7266283	UnaryOperator	&		7265645	0					
ANR	7266284	Identifier	gb		7265645	1					
ANR	7266285	Argument	substr		7265645	2					
ANR	7266286	Identifier	substr		7265645	0					
ANR	7266287	PrimaryExpression	0		7265645	1					
ANR	7266288	GotoStatement	goto next_substr ;	243:20:4015:4031	7265645	1	True				
ANR	7266289	Identifier	next_substr		7265645	0					
ANR	7266290	IfStatement	if ( ! s -> restart_seen )		7265645	1					
ANR	7266291	Condition	! s -> restart_seen	249:16:4067:4082	7265645	0	True				
ANR	7266292	UnaryOperationExpression	! s -> restart_seen		7265645	0					
ANR	7266293	UnaryOperator	!		7265645	0					
ANR	7266294	PtrMemberAccess	s -> restart_seen		7265645	1					
ANR	7266295	Identifier	s		7265645	0					
ANR	7266296	Identifier	restart_seen		7265645	1					
ANR	7266297	GotoStatement	goto next_substr ;	251:16:4102:4118	7265645	1	True				
ANR	7266298	Identifier	next_substr		7265645	0					
ANR	7266299	IfStatement	"if ( read_block_data ( m , & gb , substr ) < 0 )"		7265645	2					
ANR	7266300	Condition	"read_block_data ( m , & gb , substr ) < 0"	255:16:4139:4173	7265645	0	True				
ANR	7266301	RelationalExpression	"read_block_data ( m , & gb , substr ) < 0"		7265645	0		<			
ANR	7266302	CallExpression	"read_block_data ( m , & gb , substr )"		7265645	0					
ANR	7266303	Callee	read_block_data		7265645	0					
ANR	7266304	Identifier	read_block_data		7265645	0					
ANR	7266305	ArgumentList	m		7265645	1					
ANR	7266306	Argument	m		7265645	0					
ANR	7266307	Identifier	m		7265645	0					
ANR	7266308	Argument	& gb		7265645	1					
ANR	7266309	UnaryOperationExpression	& gb		7265645	0					
ANR	7266310	UnaryOperator	&		7265645	0					
ANR	7266311	Identifier	gb		7265645	1					
ANR	7266312	Argument	substr		7265645	2					
ANR	7266313	Identifier	substr		7265645	0					
ANR	7266314	PrimaryExpression	0		7265645	1					
ANR	7266315	ReturnStatement	return - 1 ;	257:16:4193:4202	7265645	1	True				
ANR	7266316	UnaryOperationExpression	- 1		7265645	0					
ANR	7266317	UnaryOperator	-		7265645	0					
ANR	7266318	PrimaryExpression	1		7265645	1					
ANR	7266319	IfStatement	if ( get_bits_count ( & gb ) >= substream_data_len [ substr ] * 8 )		7265645	3					
ANR	7266320	Condition	get_bits_count ( & gb ) >= substream_data_len [ substr ] * 8	261:16:4223:4275	7265645	0	True				
ANR	7266321	RelationalExpression	get_bits_count ( & gb ) >= substream_data_len [ substr ] * 8		7265645	0		>=			
ANR	7266322	CallExpression	get_bits_count ( & gb )		7265645	0					
ANR	7266323	Callee	get_bits_count		7265645	0					
ANR	7266324	Identifier	get_bits_count		7265645	0					
ANR	7266325	ArgumentList	& gb		7265645	1					
ANR	7266326	Argument	& gb		7265645	0					
ANR	7266327	UnaryOperationExpression	& gb		7265645	0					
ANR	7266328	UnaryOperator	&		7265645	0					
ANR	7266329	Identifier	gb		7265645	1					
ANR	7266330	MultiplicativeExpression	substream_data_len [ substr ] * 8		7265645	1		*			
ANR	7266331	ArrayIndexing	substream_data_len [ substr ]		7265645	0					
ANR	7266332	Identifier	substream_data_len		7265645	0					
ANR	7266333	Identifier	substr		7265645	1					
ANR	7266334	PrimaryExpression	8		7265645	1					
ANR	7266335	GotoStatement	goto substream_length_mismatch ;	263:16:4295:4325	7265645	1	True				
ANR	7266336	Identifier	substream_length_mismatch		7265645	0					
ANR	7266337	Condition	! get_bits1 ( & gb )	267:17:4347:4361	7265645	1	True				
ANR	7266338	UnaryOperationExpression	! get_bits1 ( & gb )		7265645	0					
ANR	7266339	UnaryOperator	!		7265645	0					
ANR	7266340	CallExpression	get_bits1 ( & gb )		7265645	1					
ANR	7266341	Callee	get_bits1		7265645	0					
ANR	7266342	Identifier	get_bits1		7265645	0					
ANR	7266343	ArgumentList	& gb		7265645	1					
ANR	7266344	Argument	& gb		7265645	0					
ANR	7266345	UnaryOperationExpression	& gb		7265645	0					
ANR	7266346	UnaryOperator	&		7265645	0					
ANR	7266347	Identifier	gb		7265645	1					
ANR	7266348	ExpressionStatement	"skip_bits ( & gb , ( - get_bits_count ( & gb ) ) & 15 )"	271:8:4376:4419	7265645	6	True				
ANR	7266349	CallExpression	"skip_bits ( & gb , ( - get_bits_count ( & gb ) ) & 15 )"		7265645	0					
ANR	7266350	Callee	skip_bits		7265645	0					
ANR	7266351	Identifier	skip_bits		7265645	0					
ANR	7266352	ArgumentList	& gb		7265645	1					
ANR	7266353	Argument	& gb		7265645	0					
ANR	7266354	UnaryOperationExpression	& gb		7265645	0					
ANR	7266355	UnaryOperator	&		7265645	0					
ANR	7266356	Identifier	gb		7265645	1					
ANR	7266357	Argument	( - get_bits_count ( & gb ) ) & 15		7265645	1					
ANR	7266358	BitAndExpression	( - get_bits_count ( & gb ) ) & 15		7265645	0		&			
ANR	7266359	UnaryOperationExpression	- get_bits_count ( & gb )		7265645	0					
ANR	7266360	UnaryOperator	-		7265645	0					
ANR	7266361	CallExpression	get_bits_count ( & gb )		7265645	1					
ANR	7266362	Callee	get_bits_count		7265645	0					
ANR	7266363	Identifier	get_bits_count		7265645	0					
ANR	7266364	ArgumentList	& gb		7265645	1					
ANR	7266365	Argument	& gb		7265645	0					
ANR	7266366	UnaryOperationExpression	& gb		7265645	0					
ANR	7266367	UnaryOperator	&		7265645	0					
ANR	7266368	Identifier	gb		7265645	1					
ANR	7266369	PrimaryExpression	15		7265645	1					
ANR	7266370	IfStatement	if ( substream_data_len [ substr ] * 8 - get_bits_count ( & gb ) >= 32 )		7265645	7					
ANR	7266371	Condition	substream_data_len [ substr ] * 8 - get_bits_count ( & gb ) >= 32	275:12:4436:4493	7265645	0	True				
ANR	7266372	RelationalExpression	substream_data_len [ substr ] * 8 - get_bits_count ( & gb ) >= 32		7265645	0		>=			
ANR	7266373	AdditiveExpression	substream_data_len [ substr ] * 8 - get_bits_count ( & gb )		7265645	0		-			
ANR	7266374	MultiplicativeExpression	substream_data_len [ substr ] * 8		7265645	0		*			
ANR	7266375	ArrayIndexing	substream_data_len [ substr ]		7265645	0					
ANR	7266376	Identifier	substream_data_len		7265645	0					
ANR	7266377	Identifier	substr		7265645	1					
ANR	7266378	PrimaryExpression	8		7265645	1					
ANR	7266379	CallExpression	get_bits_count ( & gb )		7265645	1					
ANR	7266380	Callee	get_bits_count		7265645	0					
ANR	7266381	Identifier	get_bits_count		7265645	0					
ANR	7266382	ArgumentList	& gb		7265645	1					
ANR	7266383	Argument	& gb		7265645	0					
ANR	7266384	UnaryOperationExpression	& gb		7265645	0					
ANR	7266385	UnaryOperator	&		7265645	0					
ANR	7266386	Identifier	gb		7265645	1					
ANR	7266387	PrimaryExpression	32		7265645	1					
ANR	7266388	CompoundStatement		273:12:4384:4398	7265645	1					
ANR	7266389	IdentifierDeclStatement	int shorten_by ;	277:12:4511:4525	7265645	0	True				
ANR	7266390	IdentifierDecl	shorten_by		7265645	0					
ANR	7266391	IdentifierDeclType	int		7265645	0					
ANR	7266392	Identifier	shorten_by		7265645	1					
ANR	7266393	IfStatement	"if ( get_bits ( & gb , 16 ) != 0xD234 )"		7265645	1					
ANR	7266394	Condition	"get_bits ( & gb , 16 ) != 0xD234"	281:16:4546:4572	7265645	0	True				
ANR	7266395	EqualityExpression	"get_bits ( & gb , 16 ) != 0xD234"		7265645	0		!=			
ANR	7266396	CallExpression	"get_bits ( & gb , 16 )"		7265645	0					
ANR	7266397	Callee	get_bits		7265645	0					
ANR	7266398	Identifier	get_bits		7265645	0					
ANR	7266399	ArgumentList	& gb		7265645	1					
ANR	7266400	Argument	& gb		7265645	0					
ANR	7266401	UnaryOperationExpression	& gb		7265645	0					
ANR	7266402	UnaryOperator	&		7265645	0					
ANR	7266403	Identifier	gb		7265645	1					
ANR	7266404	Argument	16		7265645	1					
ANR	7266405	PrimaryExpression	16		7265645	0					
ANR	7266406	PrimaryExpression	0xD234		7265645	1					
ANR	7266407	ReturnStatement	return - 1 ;	283:16:4592:4601	7265645	1	True				
ANR	7266408	UnaryOperationExpression	- 1		7265645	0					
ANR	7266409	UnaryOperator	-		7265645	0					
ANR	7266410	PrimaryExpression	1		7265645	1					
ANR	7266411	ExpressionStatement	"shorten_by = get_bits ( & gb , 16 )"	287:12:4618:4648	7265645	2	True				
ANR	7266412	AssignmentExpression	"shorten_by = get_bits ( & gb , 16 )"		7265645	0		=			
ANR	7266413	Identifier	shorten_by		7265645	0					
ANR	7266414	CallExpression	"get_bits ( & gb , 16 )"		7265645	1					
ANR	7266415	Callee	get_bits		7265645	0					
ANR	7266416	Identifier	get_bits		7265645	0					
ANR	7266417	ArgumentList	& gb		7265645	1					
ANR	7266418	Argument	& gb		7265645	0					
ANR	7266419	UnaryOperationExpression	& gb		7265645	0					
ANR	7266420	UnaryOperator	&		7265645	0					
ANR	7266421	Identifier	gb		7265645	1					
ANR	7266422	Argument	16		7265645	1					
ANR	7266423	PrimaryExpression	16		7265645	0					
ANR	7266424	IfStatement	if ( m -> avctx -> codec_id == CODEC_ID_TRUEHD && shorten_by & 0x2000 )		7265645	3					
ANR	7266425	Condition	m -> avctx -> codec_id == CODEC_ID_TRUEHD && shorten_by & 0x2000	289:21:4672:4732	7265645	0	True				
ANR	7266426	AndExpression	m -> avctx -> codec_id == CODEC_ID_TRUEHD && shorten_by & 0x2000		7265645	0		&&			
ANR	7266427	EqualityExpression	m -> avctx -> codec_id == CODEC_ID_TRUEHD		7265645	0		==			
ANR	7266428	PtrMemberAccess	m -> avctx -> codec_id		7265645	0					
ANR	7266429	PtrMemberAccess	m -> avctx		7265645	0					
ANR	7266430	Identifier	m		7265645	0					
ANR	7266431	Identifier	avctx		7265645	1					
ANR	7266432	Identifier	codec_id		7265645	1					
ANR	7266433	Identifier	CODEC_ID_TRUEHD		7265645	1					
ANR	7266434	BitAndExpression	shorten_by & 0x2000		7265645	1		&			
ANR	7266435	Identifier	shorten_by		7265645	0					
ANR	7266436	PrimaryExpression	0x2000		7265645	1					
ANR	7266437	ExpressionStatement	"s -> blockpos -= FFMIN ( shorten_by & 0x1FFF , s -> blockpos )"	291:16:4752:4806	7265645	1	True				
ANR	7266438	AssignmentExpression	"s -> blockpos -= FFMIN ( shorten_by & 0x1FFF , s -> blockpos )"		7265645	0		-=			
ANR	7266439	PtrMemberAccess	s -> blockpos		7265645	0					
ANR	7266440	Identifier	s		7265645	0					
ANR	7266441	Identifier	blockpos		7265645	1					
ANR	7266442	CallExpression	"FFMIN ( shorten_by & 0x1FFF , s -> blockpos )"		7265645	1					
ANR	7266443	Callee	FFMIN		7265645	0					
ANR	7266444	Identifier	FFMIN		7265645	0					
ANR	7266445	ArgumentList	shorten_by & 0x1FFF		7265645	1					
ANR	7266446	Argument	shorten_by & 0x1FFF		7265645	0					
ANR	7266447	BitAndExpression	shorten_by & 0x1FFF		7265645	0		&			
ANR	7266448	Identifier	shorten_by		7265645	0					
ANR	7266449	PrimaryExpression	0x1FFF		7265645	1					
ANR	7266450	Argument	s -> blockpos		7265645	1					
ANR	7266451	PtrMemberAccess	s -> blockpos		7265645	0					
ANR	7266452	Identifier	s		7265645	0					
ANR	7266453	Identifier	blockpos		7265645	1					
ANR	7266454	ElseStatement	else		7265645	0					
ANR	7266455	IfStatement	if ( m -> avctx -> codec_id == CODEC_ID_MLP && shorten_by != 0xD234 )		7265645	0					
ANR	7266456	Condition	m -> avctx -> codec_id == CODEC_ID_MLP && shorten_by != 0xD234	293:21:4830:4890	7265645	0	True				
ANR	7266457	AndExpression	m -> avctx -> codec_id == CODEC_ID_MLP && shorten_by != 0xD234		7265645	0		&&			
ANR	7266458	EqualityExpression	m -> avctx -> codec_id == CODEC_ID_MLP		7265645	0		==			
ANR	7266459	PtrMemberAccess	m -> avctx -> codec_id		7265645	0					
ANR	7266460	PtrMemberAccess	m -> avctx		7265645	0					
ANR	7266461	Identifier	m		7265645	0					
ANR	7266462	Identifier	avctx		7265645	1					
ANR	7266463	Identifier	codec_id		7265645	1					
ANR	7266464	Identifier	CODEC_ID_MLP		7265645	1					
ANR	7266465	EqualityExpression	shorten_by != 0xD234		7265645	1		!=			
ANR	7266466	Identifier	shorten_by		7265645	0					
ANR	7266467	PrimaryExpression	0xD234		7265645	1					
ANR	7266468	ReturnStatement	return - 1 ;	295:16:4910:4919	7265645	1	True				
ANR	7266469	UnaryOperationExpression	- 1		7265645	0					
ANR	7266470	UnaryOperator	-		7265645	0					
ANR	7266471	PrimaryExpression	1		7265645	1					
ANR	7266472	IfStatement	if ( substr == m -> max_decoded_substream )		7265645	4					
ANR	7266473	Condition	substr == m -> max_decoded_substream	299:16:4940:4973	7265645	0	True				
ANR	7266474	EqualityExpression	substr == m -> max_decoded_substream		7265645	0		==			
ANR	7266475	Identifier	substr		7265645	0					
ANR	7266476	PtrMemberAccess	m -> max_decoded_substream		7265645	1					
ANR	7266477	Identifier	m		7265645	0					
ANR	7266478	Identifier	max_decoded_substream		7265645	1					
ANR	7266479	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_INFO , ""End of stream indicated.\\n"" )"	301:16:4993:5052	7265645	1	True				
ANR	7266480	CallExpression	"av_log ( m -> avctx , AV_LOG_INFO , ""End of stream indicated.\\n"" )"		7265645	0					
ANR	7266481	Callee	av_log		7265645	0					
ANR	7266482	Identifier	av_log		7265645	0					
ANR	7266483	ArgumentList	m -> avctx		7265645	1					
ANR	7266484	Argument	m -> avctx		7265645	0					
ANR	7266485	PtrMemberAccess	m -> avctx		7265645	0					
ANR	7266486	Identifier	m		7265645	0					
ANR	7266487	Identifier	avctx		7265645	1					
ANR	7266488	Argument	AV_LOG_INFO		7265645	1					
ANR	7266489	Identifier	AV_LOG_INFO		7265645	0					
ANR	7266490	Argument	"""End of stream indicated.\\n"""		7265645	2					
ANR	7266491	PrimaryExpression	"""End of stream indicated.\\n"""		7265645	0					
ANR	7266492	IfStatement	if ( substream_parity_present [ substr ] )		7265645	8					
ANR	7266493	Condition	substream_parity_present [ substr ]	307:12:5080:5111	7265645	0	True				
ANR	7266494	ArrayIndexing	substream_parity_present [ substr ]		7265645	0					
ANR	7266495	Identifier	substream_parity_present		7265645	0					
ANR	7266496	Identifier	substr		7265645	1					
ANR	7266497	CompoundStatement		305:12:5002:5026	7265645	1					
ANR	7266498	IdentifierDeclStatement	"uint8_t parity , checksum ;"	309:12:5129:5153	7265645	0	True				
ANR	7266499	IdentifierDecl	parity		7265645	0					
ANR	7266500	IdentifierDeclType	uint8_t		7265645	0					
ANR	7266501	Identifier	parity		7265645	1					
ANR	7266502	IdentifierDecl	checksum		7265645	1					
ANR	7266503	IdentifierDeclType	uint8_t		7265645	0					
ANR	7266504	Identifier	checksum		7265645	1					
ANR	7266505	IfStatement	if ( substream_data_len [ substr ] * 8 - get_bits_count ( & gb ) != 16 )		7265645	1					
ANR	7266506	Condition	substream_data_len [ substr ] * 8 - get_bits_count ( & gb ) != 16	313:16:5174:5231	7265645	0	True				
ANR	7266507	EqualityExpression	substream_data_len [ substr ] * 8 - get_bits_count ( & gb ) != 16		7265645	0		!=			
ANR	7266508	AdditiveExpression	substream_data_len [ substr ] * 8 - get_bits_count ( & gb )		7265645	0		-			
ANR	7266509	MultiplicativeExpression	substream_data_len [ substr ] * 8		7265645	0		*			
ANR	7266510	ArrayIndexing	substream_data_len [ substr ]		7265645	0					
ANR	7266511	Identifier	substream_data_len		7265645	0					
ANR	7266512	Identifier	substr		7265645	1					
ANR	7266513	PrimaryExpression	8		7265645	1					
ANR	7266514	CallExpression	get_bits_count ( & gb )		7265645	1					
ANR	7266515	Callee	get_bits_count		7265645	0					
ANR	7266516	Identifier	get_bits_count		7265645	0					
ANR	7266517	ArgumentList	& gb		7265645	1					
ANR	7266518	Argument	& gb		7265645	0					
ANR	7266519	UnaryOperationExpression	& gb		7265645	0					
ANR	7266520	UnaryOperator	&		7265645	0					
ANR	7266521	Identifier	gb		7265645	1					
ANR	7266522	PrimaryExpression	16		7265645	1					
ANR	7266523	GotoStatement	goto substream_length_mismatch ;	315:16:5251:5281	7265645	1	True				
ANR	7266524	Identifier	substream_length_mismatch		7265645	0					
ANR	7266525	ExpressionStatement	"parity = ff_mlp_calculate_parity ( buf , substream_data_len [ substr ] - 2 )"	319:12:5298:5369	7265645	2	True				
ANR	7266526	AssignmentExpression	"parity = ff_mlp_calculate_parity ( buf , substream_data_len [ substr ] - 2 )"		7265645	0		=			
ANR	7266527	Identifier	parity		7265645	0					
ANR	7266528	CallExpression	"ff_mlp_calculate_parity ( buf , substream_data_len [ substr ] - 2 )"		7265645	1					
ANR	7266529	Callee	ff_mlp_calculate_parity		7265645	0					
ANR	7266530	Identifier	ff_mlp_calculate_parity		7265645	0					
ANR	7266531	ArgumentList	buf		7265645	1					
ANR	7266532	Argument	buf		7265645	0					
ANR	7266533	Identifier	buf		7265645	0					
ANR	7266534	Argument	substream_data_len [ substr ] - 2		7265645	1					
ANR	7266535	AdditiveExpression	substream_data_len [ substr ] - 2		7265645	0		-			
ANR	7266536	ArrayIndexing	substream_data_len [ substr ]		7265645	0					
ANR	7266537	Identifier	substream_data_len		7265645	0					
ANR	7266538	Identifier	substr		7265645	1					
ANR	7266539	PrimaryExpression	2		7265645	1					
ANR	7266540	ExpressionStatement	"checksum = ff_mlp_checksum8 ( buf , substream_data_len [ substr ] - 2 )"	321:12:5384:5455	7265645	3	True				
ANR	7266541	AssignmentExpression	"checksum = ff_mlp_checksum8 ( buf , substream_data_len [ substr ] - 2 )"		7265645	0		=			
ANR	7266542	Identifier	checksum		7265645	0					
ANR	7266543	CallExpression	"ff_mlp_checksum8 ( buf , substream_data_len [ substr ] - 2 )"		7265645	1					
ANR	7266544	Callee	ff_mlp_checksum8		7265645	0					
ANR	7266545	Identifier	ff_mlp_checksum8		7265645	0					
ANR	7266546	ArgumentList	buf		7265645	1					
ANR	7266547	Argument	buf		7265645	0					
ANR	7266548	Identifier	buf		7265645	0					
ANR	7266549	Argument	substream_data_len [ substr ] - 2		7265645	1					
ANR	7266550	AdditiveExpression	substream_data_len [ substr ] - 2		7265645	0		-			
ANR	7266551	ArrayIndexing	substream_data_len [ substr ]		7265645	0					
ANR	7266552	Identifier	substream_data_len		7265645	0					
ANR	7266553	Identifier	substr		7265645	1					
ANR	7266554	PrimaryExpression	2		7265645	1					
ANR	7266555	IfStatement	"if ( ( get_bits ( & gb , 8 ) ^ parity ) != 0xa9 )"		7265645	4					
ANR	7266556	Condition	"( get_bits ( & gb , 8 ) ^ parity ) != 0xa9"	325:16:5476:5510	7265645	0	True				
ANR	7266557	EqualityExpression	"( get_bits ( & gb , 8 ) ^ parity ) != 0xa9"		7265645	0		!=			
ANR	7266558	ExclusiveOrExpression	"get_bits ( & gb , 8 ) ^ parity"		7265645	0		^			
ANR	7266559	CallExpression	"get_bits ( & gb , 8 )"		7265645	0					
ANR	7266560	Callee	get_bits		7265645	0					
ANR	7266561	Identifier	get_bits		7265645	0					
ANR	7266562	ArgumentList	& gb		7265645	1					
ANR	7266563	Argument	& gb		7265645	0					
ANR	7266564	UnaryOperationExpression	& gb		7265645	0					
ANR	7266565	UnaryOperator	&		7265645	0					
ANR	7266566	Identifier	gb		7265645	1					
ANR	7266567	Argument	8		7265645	1					
ANR	7266568	PrimaryExpression	8		7265645	0					
ANR	7266569	Identifier	parity		7265645	1					
ANR	7266570	PrimaryExpression	0xa9		7265645	1					
ANR	7266571	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""Substream %d parity check failed.\\n"" , substr )"	327:16:5534:5611	7265645	1	True				
ANR	7266572	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""Substream %d parity check failed.\\n"" , substr )"		7265645	0					
ANR	7266573	Callee	av_log		7265645	0					
ANR	7266574	Identifier	av_log		7265645	0					
ANR	7266575	ArgumentList	m -> avctx		7265645	1					
ANR	7266576	Argument	m -> avctx		7265645	0					
ANR	7266577	PtrMemberAccess	m -> avctx		7265645	0					
ANR	7266578	Identifier	m		7265645	0					
ANR	7266579	Identifier	avctx		7265645	1					
ANR	7266580	Argument	AV_LOG_ERROR		7265645	1					
ANR	7266581	Identifier	AV_LOG_ERROR		7265645	0					
ANR	7266582	Argument	"""Substream %d parity check failed.\\n"""		7265645	2					
ANR	7266583	PrimaryExpression	"""Substream %d parity check failed.\\n"""		7265645	0					
ANR	7266584	Argument	substr		7265645	3					
ANR	7266585	Identifier	substr		7265645	0					
ANR	7266586	IfStatement	"if ( get_bits ( & gb , 8 ) != checksum )"		7265645	5					
ANR	7266587	Condition	"get_bits ( & gb , 8 ) != checksum"	329:17:5631:5668	7265645	0	True				
ANR	7266588	EqualityExpression	"get_bits ( & gb , 8 ) != checksum"		7265645	0		!=			
ANR	7266589	CallExpression	"get_bits ( & gb , 8 )"		7265645	0					
ANR	7266590	Callee	get_bits		7265645	0					
ANR	7266591	Identifier	get_bits		7265645	0					
ANR	7266592	ArgumentList	& gb		7265645	1					
ANR	7266593	Argument	& gb		7265645	0					
ANR	7266594	UnaryOperationExpression	& gb		7265645	0					
ANR	7266595	UnaryOperator	&		7265645	0					
ANR	7266596	Identifier	gb		7265645	1					
ANR	7266597	Argument	8		7265645	1					
ANR	7266598	PrimaryExpression	8		7265645	0					
ANR	7266599	Identifier	checksum		7265645	1					
ANR	7266600	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""Substream %d checksum failed.\\n"" , substr )"	331:16:5688:5765	7265645	1	True				
ANR	7266601	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""Substream %d checksum failed.\\n"" , substr )"		7265645	0					
ANR	7266602	Callee	av_log		7265645	0					
ANR	7266603	Identifier	av_log		7265645	0					
ANR	7266604	ArgumentList	m -> avctx		7265645	1					
ANR	7266605	Argument	m -> avctx		7265645	0					
ANR	7266606	PtrMemberAccess	m -> avctx		7265645	0					
ANR	7266607	Identifier	m		7265645	0					
ANR	7266608	Identifier	avctx		7265645	1					
ANR	7266609	Argument	AV_LOG_ERROR		7265645	1					
ANR	7266610	Identifier	AV_LOG_ERROR		7265645	0					
ANR	7266611	Argument	"""Substream %d checksum failed.\\n"""		7265645	2					
ANR	7266612	PrimaryExpression	"""Substream %d checksum failed.\\n"""		7265645	0					
ANR	7266613	Argument	substr		7265645	3					
ANR	7266614	Identifier	substr		7265645	0					
ANR	7266615	IfStatement	if ( substream_data_len [ substr ] * 8 != get_bits_count ( & gb ) )		7265645	9					
ANR	7266616	Condition	substream_data_len [ substr ] * 8 != get_bits_count ( & gb )	337:12:5793:5845	7265645	0	True				
ANR	7266617	EqualityExpression	substream_data_len [ substr ] * 8 != get_bits_count ( & gb )		7265645	0		!=			
ANR	7266618	MultiplicativeExpression	substream_data_len [ substr ] * 8		7265645	0		*			
ANR	7266619	ArrayIndexing	substream_data_len [ substr ]		7265645	0					
ANR	7266620	Identifier	substream_data_len		7265645	0					
ANR	7266621	Identifier	substr		7265645	1					
ANR	7266622	PrimaryExpression	8		7265645	1					
ANR	7266623	CallExpression	get_bits_count ( & gb )		7265645	1					
ANR	7266624	Callee	get_bits_count		7265645	0					
ANR	7266625	Identifier	get_bits_count		7265645	0					
ANR	7266626	ArgumentList	& gb		7265645	1					
ANR	7266627	Argument	& gb		7265645	0					
ANR	7266628	UnaryOperationExpression	& gb		7265645	0					
ANR	7266629	UnaryOperator	&		7265645	0					
ANR	7266630	Identifier	gb		7265645	1					
ANR	7266631	GotoStatement	goto substream_length_mismatch ;	339:12:5861:5891	7265645	1	True				
ANR	7266632	Identifier	substream_length_mismatch		7265645	0					
ANR	7266633	Label	next_substr :	343:0:5896:5907	7265645	10	True				
ANR	7266634	Identifier	next_substr		7265645	0					
ANR	7266635	IfStatement	if ( ! s -> restart_seen )		7265645	11					
ANR	7266636	Condition	! s -> restart_seen	345:12:5922:5937	7265645	0	True				
ANR	7266637	UnaryOperationExpression	! s -> restart_seen		7265645	0					
ANR	7266638	UnaryOperator	!		7265645	0					
ANR	7266639	PtrMemberAccess	s -> restart_seen		7265645	1					
ANR	7266640	Identifier	s		7265645	0					
ANR	7266641	Identifier	restart_seen		7265645	1					
ANR	7266642	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""No restart header present in substream %d.\\n"" , substr )"	347:12:5953:6059	7265645	1	True				
ANR	7266643	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""No restart header present in substream %d.\\n"" , substr )"		7265645	0					
ANR	7266644	Callee	av_log		7265645	0					
ANR	7266645	Identifier	av_log		7265645	0					
ANR	7266646	ArgumentList	m -> avctx		7265645	1					
ANR	7266647	Argument	m -> avctx		7265645	0					
ANR	7266648	PtrMemberAccess	m -> avctx		7265645	0					
ANR	7266649	Identifier	m		7265645	0					
ANR	7266650	Identifier	avctx		7265645	1					
ANR	7266651	Argument	AV_LOG_ERROR		7265645	1					
ANR	7266652	Identifier	AV_LOG_ERROR		7265645	0					
ANR	7266653	Argument	"""No restart header present in substream %d.\\n"""		7265645	2					
ANR	7266654	PrimaryExpression	"""No restart header present in substream %d.\\n"""		7265645	0					
ANR	7266655	Argument	substr		7265645	3					
ANR	7266656	Identifier	substr		7265645	0					
ANR	7266657	ExpressionStatement	buf += substream_data_len [ substr ]	353:8:6072:6105	7265645	12	True				
ANR	7266658	AssignmentExpression	buf += substream_data_len [ substr ]		7265645	0		+=			
ANR	7266659	Identifier	buf		7265645	0					
ANR	7266660	ArrayIndexing	substream_data_len [ substr ]		7265645	1					
ANR	7266661	Identifier	substream_data_len		7265645	0					
ANR	7266662	Identifier	substr		7265645	1					
ANR	7266663	ExpressionStatement	"rematrix_channels ( m , m -> max_decoded_substream )"	359:4:6121:6167	7265645	25	True				
ANR	7266664	CallExpression	"rematrix_channels ( m , m -> max_decoded_substream )"		7265645	0					
ANR	7266665	Callee	rematrix_channels		7265645	0					
ANR	7266666	Identifier	rematrix_channels		7265645	0					
ANR	7266667	ArgumentList	m		7265645	1					
ANR	7266668	Argument	m		7265645	0					
ANR	7266669	Identifier	m		7265645	0					
ANR	7266670	Argument	m -> max_decoded_substream		7265645	1					
ANR	7266671	PtrMemberAccess	m -> max_decoded_substream		7265645	0					
ANR	7266672	Identifier	m		7265645	0					
ANR	7266673	Identifier	max_decoded_substream		7265645	1					
ANR	7266674	IfStatement	"if ( output_data ( m , m -> max_decoded_substream , data , data_size ) < 0 )"		7265645	26					
ANR	7266675	Condition	"output_data ( m , m -> max_decoded_substream , data , data_size ) < 0"	363:8:6180:6240	7265645	0	True				
ANR	7266676	RelationalExpression	"output_data ( m , m -> max_decoded_substream , data , data_size ) < 0"		7265645	0		<			
ANR	7266677	CallExpression	"output_data ( m , m -> max_decoded_substream , data , data_size )"		7265645	0					
ANR	7266678	Callee	output_data		7265645	0					
ANR	7266679	Identifier	output_data		7265645	0					
ANR	7266680	ArgumentList	m		7265645	1					
ANR	7266681	Argument	m		7265645	0					
ANR	7266682	Identifier	m		7265645	0					
ANR	7266683	Argument	m -> max_decoded_substream		7265645	1					
ANR	7266684	PtrMemberAccess	m -> max_decoded_substream		7265645	0					
ANR	7266685	Identifier	m		7265645	0					
ANR	7266686	Identifier	max_decoded_substream		7265645	1					
ANR	7266687	Argument	data		7265645	2					
ANR	7266688	Identifier	data		7265645	0					
ANR	7266689	Argument	data_size		7265645	3					
ANR	7266690	Identifier	data_size		7265645	0					
ANR	7266691	PrimaryExpression	0		7265645	1					
ANR	7266692	ReturnStatement	return - 1 ;	365:8:6252:6261	7265645	1	True				
ANR	7266693	UnaryOperationExpression	- 1		7265645	0					
ANR	7266694	UnaryOperator	-		7265645	0					
ANR	7266695	PrimaryExpression	1		7265645	1					
ANR	7266696	ReturnStatement	return length ;	369:4:6270:6283	7265645	27	True				
ANR	7266697	Identifier	length		7265645	0					
ANR	7266698	Label	substream_length_mismatch :	373:0:6288:6313	7265645	28	True				
ANR	7266699	Identifier	substream_length_mismatch		7265645	0					
ANR	7266700	ExpressionStatement	"av_log ( m -> avctx , AV_LOG_ERROR , ""substream %d length mismatch\\n"" , substr )"	375:4:6320:6392	7265645	29	True				
ANR	7266701	CallExpression	"av_log ( m -> avctx , AV_LOG_ERROR , ""substream %d length mismatch\\n"" , substr )"		7265645	0					
ANR	7266702	Callee	av_log		7265645	0					
ANR	7266703	Identifier	av_log		7265645	0					
ANR	7266704	ArgumentList	m -> avctx		7265645	1					
ANR	7266705	Argument	m -> avctx		7265645	0					
ANR	7266706	PtrMemberAccess	m -> avctx		7265645	0					
ANR	7266707	Identifier	m		7265645	0					
ANR	7266708	Identifier	avctx		7265645	1					
ANR	7266709	Argument	AV_LOG_ERROR		7265645	1					
ANR	7266710	Identifier	AV_LOG_ERROR		7265645	0					
ANR	7266711	Argument	"""substream %d length mismatch\\n"""		7265645	2					
ANR	7266712	PrimaryExpression	"""substream %d length mismatch\\n"""		7265645	0					
ANR	7266713	Argument	substr		7265645	3					
ANR	7266714	Identifier	substr		7265645	0					
ANR	7266715	ReturnStatement	return - 1 ;	377:4:6399:6408	7265645	30	True				
ANR	7266716	UnaryOperationExpression	- 1		7265645	0					
ANR	7266717	UnaryOperator	-		7265645	0					
ANR	7266718	PrimaryExpression	1		7265645	1					
ANR	7266719	Label	error :	381:0:6413:6418	7265645	31	True				
ANR	7266720	Identifier	error		7265645	0					
ANR	7266721	ExpressionStatement	m -> params_valid = 0	383:4:6425:6444	7265645	32	True				
ANR	7266722	AssignmentExpression	m -> params_valid = 0		7265645	0		=			
ANR	7266723	PtrMemberAccess	m -> params_valid		7265645	0					
ANR	7266724	Identifier	m		7265645	0					
ANR	7266725	Identifier	params_valid		7265645	1					
ANR	7266726	PrimaryExpression	0		7265645	1					
ANR	7266727	ReturnStatement	return - 1 ;	385:4:6451:6460	7265645	33	True				
ANR	7266728	UnaryOperationExpression	- 1		7265645	0					
ANR	7266729	UnaryOperator	-		7265645	0					
ANR	7266730	PrimaryExpression	1		7265645	1					
ANR	7266731	ReturnType	static int		7265645	1					
ANR	7266732	Identifier	read_access_unit		7265645	2					
ANR	7266733	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		7265645	3					
ANR	7266734	Parameter	AVCodecContext * avctx	1:28:28:48	7265645	0	True				
ANR	7266735	ParameterType	AVCodecContext *		7265645	0					
ANR	7266736	Identifier	avctx		7265645	1					
ANR	7266737	Parameter	void * data	1:51:51:60	7265645	1	True				
ANR	7266738	ParameterType	void *		7265645	0					
ANR	7266739	Identifier	data		7265645	1					
ANR	7266740	Parameter	int * data_size	1:63:63:76	7265645	2	True				
ANR	7266741	ParameterType	int *		7265645	0					
ANR	7266742	Identifier	data_size		7265645	1					
ANR	7266743	Parameter	AVPacket * avpkt	3:28:108:122	7265645	3	True				
ANR	7266744	ParameterType	AVPacket *		7265645	0					
ANR	7266745	Identifier	avpkt		7265645	1					
ANR	7266746	CFGEntryNode	ENTRY		7265645		True				
ANR	7266747	CFGExitNode	EXIT		7265645		True				
ANR	7266748	Symbol	* substream_data_len		7265645						
ANR	7266749	Symbol	data		7265645						
ANR	7266750	Symbol	& gb		7265645						
ANR	7266751	Symbol	get_bits		7265645						
ANR	7266752	Symbol	AV_RB16		7265645						
ANR	7266753	Symbol	m -> num_substreams		7265645						
ANR	7266754	Symbol	FFMIN		7265645						
ANR	7266755	Symbol	avpkt		7265645						
ANR	7266756	Symbol	* data_size		7265645						
ANR	7266757	Symbol	m -> matrix_changed		7265645						
ANR	7266758	Symbol	m -> params_valid		7265645						
ANR	7266759	Symbol	* substream_parity_present		7265645						
ANR	7266760	Symbol	read_restart_header		7265645						
ANR	7266761	Symbol	shorten_by		7265645						
ANR	7266762	Symbol	substream_start		7265645						
ANR	7266763	Symbol	data_size		7265645						
ANR	7266764	Symbol	m -> avctx -> codec_id		7265645						
ANR	7266765	Symbol	read_block_data		7265645						
ANR	7266766	Symbol	* m -> avctx		7265645						
ANR	7266767	Symbol	m -> is_major_sync_unit		7265645						
ANR	7266768	Symbol	m -> avctx		7265645						
ANR	7266769	Symbol	buf_size		7265645						
ANR	7266770	Symbol	nonrestart_substr		7265645						
ANR	7266771	Symbol	get_bits1		7265645						
ANR	7266772	Symbol	substr		7265645						
ANR	7266773	Symbol	show_bits_long		7265645						
ANR	7266774	Symbol	get_bits_count		7265645						
ANR	7266775	Symbol	* avctx		7265645						
ANR	7266776	Symbol	* substr		7265645						
ANR	7266777	Symbol	CODEC_ID_MLP		7265645						
ANR	7266778	Symbol	avpkt -> data		7265645						
ANR	7266779	Symbol	ff_mlp_checksum8		7265645						
ANR	7266780	Symbol	AV_LOG_INFO		7265645						
ANR	7266781	Symbol	parity		7265645						
ANR	7266782	Symbol	s -> restart_seen		7265645						
ANR	7266783	Symbol	checkdata_present		7265645						
ANR	7266784	Symbol	CODEC_ID_TRUEHD		7265645						
ANR	7266785	Symbol	substr_header_size		7265645						
ANR	7266786	Symbol	checksum		7265645						
ANR	7266787	Symbol	avpkt -> size		7265645						
ANR	7266788	Symbol	end		7265645						
ANR	7266789	Symbol	gb		7265645						
ANR	7266790	Symbol	avctx		7265645						
ANR	7266791	Symbol	* * m		7265645						
ANR	7266792	Symbol	m -> substream		7265645						
ANR	7266793	Symbol	* avpkt		7265645						
ANR	7266794	Symbol	ff_mlp_calculate_parity		7265645						
ANR	7266795	Symbol	substream_data_len		7265645						
ANR	7266796	Symbol	AV_LOG_ERROR		7265645						
ANR	7266797	Symbol	header_size		7265645						
ANR	7266798	Symbol	length		7265645						
ANR	7266799	Symbol	extraword_present		7265645						
ANR	7266800	Symbol	m -> filter_changed		7265645						
ANR	7266801	Symbol	avctx -> priv_data		7265645						
ANR	7266802	Symbol	m -> max_decoded_substream		7265645						
ANR	7266803	Symbol	m		7265645						
ANR	7266804	Symbol	read_major_sync		7265645						
ANR	7266805	Symbol	buf		7265645						
ANR	7266806	Symbol	substream_parity_present		7265645						
ANR	7266807	Symbol	s		7265645						
ANR	7266808	Symbol	read_decoding_params		7265645						
ANR	7266809	Symbol	parity_bits		7265645						
ANR	7266810	Symbol	* m		7265645						
ANR	7266811	Symbol	s -> blockpos		7265645						
ANR	7266812	Symbol	AV_LOG_WARNING		7265645						
ANR	7266813	Symbol	* s		7265645						
ANR	7266814	Symbol	output_data		7265645						
