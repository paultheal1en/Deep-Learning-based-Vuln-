command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1398612	File	/home/p4ultr4n/workplace/ReVeal/raw_code/configure_filtergraph_01_1.c								
ANR	1398613	Function	configure_filtergraph	1:0:0:1853							
ANR	1398614	FunctionDef	configure_filtergraph (FilterGraph * fg)		1398613	0					
ANR	1398615	CompoundStatement		3:0:44:1853	1398613	0					
ANR	1398616	IdentifierDeclStatement	"AVFilterInOut * inputs , * outputs , * cur ;"	5:4:51:88	1398613	0	True				
ANR	1398617	IdentifierDecl	* inputs		1398613	0					
ANR	1398618	IdentifierDeclType	AVFilterInOut *		1398613	0					
ANR	1398619	Identifier	inputs		1398613	1					
ANR	1398620	IdentifierDecl	* outputs		1398613	1					
ANR	1398621	IdentifierDeclType	AVFilterInOut *		1398613	0					
ANR	1398622	Identifier	outputs		1398613	1					
ANR	1398623	IdentifierDecl	* cur		1398613	2					
ANR	1398624	IdentifierDeclType	AVFilterInOut *		1398613	0					
ANR	1398625	Identifier	cur		1398613	1					
ANR	1398626	IdentifierDeclStatement	"int ret , i , simple = ! fg -> graph_desc ;"	7:4:95:131	1398613	1	True				
ANR	1398627	IdentifierDecl	ret		1398613	0					
ANR	1398628	IdentifierDeclType	int		1398613	0					
ANR	1398629	Identifier	ret		1398613	1					
ANR	1398630	IdentifierDecl	i		1398613	1					
ANR	1398631	IdentifierDeclType	int		1398613	0					
ANR	1398632	Identifier	i		1398613	1					
ANR	1398633	IdentifierDecl	simple = ! fg -> graph_desc		1398613	2					
ANR	1398634	IdentifierDeclType	int		1398613	0					
ANR	1398635	Identifier	simple		1398613	1					
ANR	1398636	AssignmentExpression	simple = ! fg -> graph_desc		1398613	2		=			
ANR	1398637	Identifier	simple		1398613	0					
ANR	1398638	UnaryOperationExpression	! fg -> graph_desc		1398613	1					
ANR	1398639	UnaryOperator	!		1398613	0					
ANR	1398640	PtrMemberAccess	fg -> graph_desc		1398613	1					
ANR	1398641	Identifier	fg		1398613	0					
ANR	1398642	Identifier	graph_desc		1398613	1					
ANR	1398643	IdentifierDeclStatement	const char * graph_desc = simple ? fg -> outputs [ 0 ] -> ost -> avfilter : fg -> graph_desc ;	9:4:138:257	1398613	2	True				
ANR	1398644	IdentifierDecl	* graph_desc = simple ? fg -> outputs [ 0 ] -> ost -> avfilter : fg -> graph_desc		1398613	0					
ANR	1398645	IdentifierDeclType	const char *		1398613	0					
ANR	1398646	Identifier	graph_desc		1398613	1					
ANR	1398647	AssignmentExpression	* graph_desc = simple ? fg -> outputs [ 0 ] -> ost -> avfilter : fg -> graph_desc		1398613	2		=			
ANR	1398648	Identifier	graph_desc		1398613	0					
ANR	1398649	ConditionalExpression	simple ? fg -> outputs [ 0 ] -> ost -> avfilter : fg -> graph_desc		1398613	1					
ANR	1398650	Condition	simple		1398613	0					
ANR	1398651	Identifier	simple		1398613	0					
ANR	1398652	PtrMemberAccess	fg -> outputs [ 0 ] -> ost -> avfilter		1398613	1					
ANR	1398653	PtrMemberAccess	fg -> outputs [ 0 ] -> ost		1398613	0					
ANR	1398654	ArrayIndexing	fg -> outputs [ 0 ]		1398613	0					
ANR	1398655	PtrMemberAccess	fg -> outputs		1398613	0					
ANR	1398656	Identifier	fg		1398613	0					
ANR	1398657	Identifier	outputs		1398613	1					
ANR	1398658	PrimaryExpression	0		1398613	1					
ANR	1398659	Identifier	ost		1398613	1					
ANR	1398660	Identifier	avfilter		1398613	1					
ANR	1398661	PtrMemberAccess	fg -> graph_desc		1398613	2					
ANR	1398662	Identifier	fg		1398613	0					
ANR	1398663	Identifier	graph_desc		1398613	1					
ANR	1398664	ExpressionStatement	avfilter_graph_free ( & fg -> graph )	15:4:266:297	1398613	3	True				
ANR	1398665	CallExpression	avfilter_graph_free ( & fg -> graph )		1398613	0					
ANR	1398666	Callee	avfilter_graph_free		1398613	0					
ANR	1398667	Identifier	avfilter_graph_free		1398613	0					
ANR	1398668	ArgumentList	& fg -> graph		1398613	1					
ANR	1398669	Argument	& fg -> graph		1398613	0					
ANR	1398670	UnaryOperationExpression	& fg -> graph		1398613	0					
ANR	1398671	UnaryOperator	&		1398613	0					
ANR	1398672	PtrMemberAccess	fg -> graph		1398613	1					
ANR	1398673	Identifier	fg		1398613	0					
ANR	1398674	Identifier	graph		1398613	1					
ANR	1398675	IfStatement	if ( ! ( fg -> graph = avfilter_graph_alloc ( ) ) )		1398613	4					
ANR	1398676	Condition	! ( fg -> graph = avfilter_graph_alloc ( ) )	17:8:308:344	1398613	0	True				
ANR	1398677	UnaryOperationExpression	! ( fg -> graph = avfilter_graph_alloc ( ) )		1398613	0					
ANR	1398678	UnaryOperator	!		1398613	0					
ANR	1398679	AssignmentExpression	fg -> graph = avfilter_graph_alloc ( )		1398613	1		=			
ANR	1398680	PtrMemberAccess	fg -> graph		1398613	0					
ANR	1398681	Identifier	fg		1398613	0					
ANR	1398682	Identifier	graph		1398613	1					
ANR	1398683	CallExpression	avfilter_graph_alloc ( )		1398613	1					
ANR	1398684	Callee	avfilter_graph_alloc		1398613	0					
ANR	1398685	Identifier	avfilter_graph_alloc		1398613	0					
ANR	1398686	ArgumentList			1398613	1					
ANR	1398687	ReturnStatement	return AVERROR ( ENOMEM ) ;	19:8:356:378	1398613	1	True				
ANR	1398688	CallExpression	AVERROR ( ENOMEM )		1398613	0					
ANR	1398689	Callee	AVERROR		1398613	0					
ANR	1398690	Identifier	AVERROR		1398613	0					
ANR	1398691	ArgumentList	ENOMEM		1398613	1					
ANR	1398692	Argument	ENOMEM		1398613	0					
ANR	1398693	Identifier	ENOMEM		1398613	0					
ANR	1398694	IfStatement	if ( simple )		1398613	5					
ANR	1398695	Condition	simple	23:8:391:396	1398613	0	True				
ANR	1398696	Identifier	simple		1398613	0					
ANR	1398697	CompoundStatement		27:8:440:467	1398613	1					
ANR	1398698	IdentifierDeclStatement	OutputStream * ost = fg -> outputs [ 0 ] -> ost ;	25:8:410:449	1398613	0	True				
ANR	1398699	IdentifierDecl	* ost = fg -> outputs [ 0 ] -> ost		1398613	0					
ANR	1398700	IdentifierDeclType	OutputStream *		1398613	0					
ANR	1398701	Identifier	ost		1398613	1					
ANR	1398702	AssignmentExpression	* ost = fg -> outputs [ 0 ] -> ost		1398613	2		=			
ANR	1398703	Identifier	ost		1398613	0					
ANR	1398704	PtrMemberAccess	fg -> outputs [ 0 ] -> ost		1398613	1					
ANR	1398705	ArrayIndexing	fg -> outputs [ 0 ]		1398613	0					
ANR	1398706	PtrMemberAccess	fg -> outputs		1398613	0					
ANR	1398707	Identifier	fg		1398613	0					
ANR	1398708	Identifier	outputs		1398613	1					
ANR	1398709	PrimaryExpression	0		1398613	1					
ANR	1398710	Identifier	ost		1398613	1					
ANR	1398711	IdentifierDeclStatement	char args [ 512 ] ;	27:8:460:474	1398613	1	True				
ANR	1398712	IdentifierDecl	args [ 512 ]		1398613	0					
ANR	1398713	IdentifierDeclType	char [ 512 ]		1398613	0					
ANR	1398714	Identifier	args		1398613	1					
ANR	1398715	PrimaryExpression	512		1398613	2					
ANR	1398716	IdentifierDeclStatement	AVDictionaryEntry * e = NULL ;	29:8:485:512	1398613	2	True				
ANR	1398717	IdentifierDecl	* e = NULL		1398613	0					
ANR	1398718	IdentifierDeclType	AVDictionaryEntry *		1398613	0					
ANR	1398719	Identifier	e		1398613	1					
ANR	1398720	AssignmentExpression	* e = NULL		1398613	2		=			
ANR	1398721	Identifier	NULL		1398613	0					
ANR	1398722	Identifier	NULL		1398613	1					
ANR	1398723	ExpressionStatement	"snprintf ( args , sizeof ( args ) , ""flags=0x%X"" , ( unsigned ) ost -> sws_flags )"	33:8:525:593	1398613	3	True				
ANR	1398724	CallExpression	"snprintf ( args , sizeof ( args ) , ""flags=0x%X"" , ( unsigned ) ost -> sws_flags )"		1398613	0					
ANR	1398725	Callee	snprintf		1398613	0					
ANR	1398726	Identifier	snprintf		1398613	0					
ANR	1398727	ArgumentList	args		1398613	1					
ANR	1398728	Argument	args		1398613	0					
ANR	1398729	Identifier	args		1398613	0					
ANR	1398730	Argument	sizeof ( args )		1398613	1					
ANR	1398731	SizeofExpression	sizeof ( args )		1398613	0					
ANR	1398732	Sizeof	sizeof		1398613	0					
ANR	1398733	SizeofOperand	args		1398613	1					
ANR	1398734	Argument	"""flags=0x%X"""		1398613	2					
ANR	1398735	PrimaryExpression	"""flags=0x%X"""		1398613	0					
ANR	1398736	Argument	( unsigned ) ost -> sws_flags		1398613	3					
ANR	1398737	CastExpression	( unsigned ) ost -> sws_flags		1398613	0					
ANR	1398738	CastTarget	unsigned		1398613	0					
ANR	1398739	PtrMemberAccess	ost -> sws_flags		1398613	1					
ANR	1398740	Identifier	ost		1398613	0					
ANR	1398741	Identifier	sws_flags		1398613	1					
ANR	1398742	ExpressionStatement	fg -> graph -> scale_sws_opts = av_strdup ( args )	35:8:604:647	1398613	4	True				
ANR	1398743	AssignmentExpression	fg -> graph -> scale_sws_opts = av_strdup ( args )		1398613	0		=			
ANR	1398744	PtrMemberAccess	fg -> graph -> scale_sws_opts		1398613	0					
ANR	1398745	PtrMemberAccess	fg -> graph		1398613	0					
ANR	1398746	Identifier	fg		1398613	0					
ANR	1398747	Identifier	graph		1398613	1					
ANR	1398748	Identifier	scale_sws_opts		1398613	1					
ANR	1398749	CallExpression	av_strdup ( args )		1398613	1					
ANR	1398750	Callee	av_strdup		1398613	0					
ANR	1398751	Identifier	av_strdup		1398613	0					
ANR	1398752	ArgumentList	args		1398613	1					
ANR	1398753	Argument	args		1398613	0					
ANR	1398754	Identifier	args		1398613	0					
ANR	1398755	ExpressionStatement	args [ 0 ] = '\\0'	39:8:660:674	1398613	5	True				
ANR	1398756	AssignmentExpression	args [ 0 ] = '\\0'		1398613	0		=			
ANR	1398757	ArrayIndexing	args [ 0 ]		1398613	0					
ANR	1398758	Identifier	args		1398613	0					
ANR	1398759	PrimaryExpression	0		1398613	1					
ANR	1398760	PrimaryExpression	'\\0'		1398613	1					
ANR	1398761	WhileStatement	"while ( ( e = av_dict_get ( fg -> outputs [ 0 ] -> ost -> resample_opts , """" , e , AV_DICT_IGNORE_SUFFIX ) ) )"		1398613	6					
ANR	1398762	Condition	"e = av_dict_get ( fg -> outputs [ 0 ] -> ost -> resample_opts , """" , e , AV_DICT_IGNORE_SUFFIX )"	41:15:692:807	1398613	0	True				
ANR	1398763	AssignmentExpression	"e = av_dict_get ( fg -> outputs [ 0 ] -> ost -> resample_opts , """" , e , AV_DICT_IGNORE_SUFFIX )"		1398613	0		=			
ANR	1398764	Identifier	e		1398613	0					
ANR	1398765	CallExpression	"av_dict_get ( fg -> outputs [ 0 ] -> ost -> resample_opts , """" , e , AV_DICT_IGNORE_SUFFIX )"		1398613	1					
ANR	1398766	Callee	av_dict_get		1398613	0					
ANR	1398767	Identifier	av_dict_get		1398613	0					
ANR	1398768	ArgumentList	fg -> outputs [ 0 ] -> ost -> resample_opts		1398613	1					
ANR	1398769	Argument	fg -> outputs [ 0 ] -> ost -> resample_opts		1398613	0					
ANR	1398770	PtrMemberAccess	fg -> outputs [ 0 ] -> ost -> resample_opts		1398613	0					
ANR	1398771	PtrMemberAccess	fg -> outputs [ 0 ] -> ost		1398613	0					
ANR	1398772	ArrayIndexing	fg -> outputs [ 0 ]		1398613	0					
ANR	1398773	PtrMemberAccess	fg -> outputs		1398613	0					
ANR	1398774	Identifier	fg		1398613	0					
ANR	1398775	Identifier	outputs		1398613	1					
ANR	1398776	PrimaryExpression	0		1398613	1					
ANR	1398777	Identifier	ost		1398613	1					
ANR	1398778	Identifier	resample_opts		1398613	1					
ANR	1398779	Argument	""""""		1398613	1					
ANR	1398780	PrimaryExpression	""""""		1398613	0					
ANR	1398781	Argument	e		1398613	2					
ANR	1398782	Identifier	e		1398613	0					
ANR	1398783	Argument	AV_DICT_IGNORE_SUFFIX		1398613	3					
ANR	1398784	Identifier	AV_DICT_IGNORE_SUFFIX		1398613	0					
ANR	1398785	CompoundStatement		41:57:765:765	1398613	1					
ANR	1398786	ExpressionStatement	"av_strlcatf ( args , sizeof ( args ) , ""%s=%s:"" , e -> key , e -> value )"	45:12:825:884	1398613	0	True				
ANR	1398787	CallExpression	"av_strlcatf ( args , sizeof ( args ) , ""%s=%s:"" , e -> key , e -> value )"		1398613	0					
ANR	1398788	Callee	av_strlcatf		1398613	0					
ANR	1398789	Identifier	av_strlcatf		1398613	0					
ANR	1398790	ArgumentList	args		1398613	1					
ANR	1398791	Argument	args		1398613	0					
ANR	1398792	Identifier	args		1398613	0					
ANR	1398793	Argument	sizeof ( args )		1398613	1					
ANR	1398794	SizeofExpression	sizeof ( args )		1398613	0					
ANR	1398795	Sizeof	sizeof		1398613	0					
ANR	1398796	SizeofOperand	args		1398613	1					
ANR	1398797	Argument	"""%s=%s:"""		1398613	2					
ANR	1398798	PrimaryExpression	"""%s=%s:"""		1398613	0					
ANR	1398799	Argument	e -> key		1398613	3					
ANR	1398800	PtrMemberAccess	e -> key		1398613	0					
ANR	1398801	Identifier	e		1398613	0					
ANR	1398802	Identifier	key		1398613	1					
ANR	1398803	Argument	e -> value		1398613	4					
ANR	1398804	PtrMemberAccess	e -> value		1398613	0					
ANR	1398805	Identifier	e		1398613	0					
ANR	1398806	Identifier	value		1398613	1					
ANR	1398807	IfStatement	if ( strlen ( args ) )		1398613	7					
ANR	1398808	Condition	strlen ( args )	49:12:910:921	1398613	0	True				
ANR	1398809	CallExpression	strlen ( args )		1398613	0					
ANR	1398810	Callee	strlen		1398613	0					
ANR	1398811	Identifier	strlen		1398613	0					
ANR	1398812	ArgumentList	args		1398613	1					
ANR	1398813	Argument	args		1398613	0					
ANR	1398814	Identifier	args		1398613	0					
ANR	1398815	ExpressionStatement	args [ strlen ( args ) - 1 ] = '\\0'	51:12:937:966	1398613	1	True				
ANR	1398816	AssignmentExpression	args [ strlen ( args ) - 1 ] = '\\0'		1398613	0		=			
ANR	1398817	ArrayIndexing	args [ strlen ( args ) - 1 ]		1398613	0					
ANR	1398818	Identifier	args		1398613	0					
ANR	1398819	AdditiveExpression	strlen ( args ) - 1		1398613	1		-			
ANR	1398820	CallExpression	strlen ( args )		1398613	0					
ANR	1398821	Callee	strlen		1398613	0					
ANR	1398822	Identifier	strlen		1398613	0					
ANR	1398823	ArgumentList	args		1398613	1					
ANR	1398824	Argument	args		1398613	0					
ANR	1398825	Identifier	args		1398613	0					
ANR	1398826	PrimaryExpression	1		1398613	1					
ANR	1398827	PrimaryExpression	'\\0'		1398613	1					
ANR	1398828	ExpressionStatement	fg -> graph -> resample_lavr_opts = av_strdup ( args )	53:8:977:1024	1398613	8	True				
ANR	1398829	AssignmentExpression	fg -> graph -> resample_lavr_opts = av_strdup ( args )		1398613	0		=			
ANR	1398830	PtrMemberAccess	fg -> graph -> resample_lavr_opts		1398613	0					
ANR	1398831	PtrMemberAccess	fg -> graph		1398613	0					
ANR	1398832	Identifier	fg		1398613	0					
ANR	1398833	Identifier	graph		1398613	1					
ANR	1398834	Identifier	resample_lavr_opts		1398613	1					
ANR	1398835	CallExpression	av_strdup ( args )		1398613	1					
ANR	1398836	Callee	av_strdup		1398613	0					
ANR	1398837	Identifier	av_strdup		1398613	0					
ANR	1398838	ArgumentList	args		1398613	1					
ANR	1398839	Argument	args		1398613	0					
ANR	1398840	Identifier	args		1398613	0					
ANR	1398841	IfStatement	"if ( ( ret = avfilter_graph_parse2 ( fg -> graph , graph_desc , & inputs , & outputs ) ) < 0 )"		1398613	6					
ANR	1398842	Condition	"( ret = avfilter_graph_parse2 ( fg -> graph , graph_desc , & inputs , & outputs ) ) < 0"	59:8:1044:1118	1398613	0	True				
ANR	1398843	RelationalExpression	"( ret = avfilter_graph_parse2 ( fg -> graph , graph_desc , & inputs , & outputs ) ) < 0"		1398613	0		<			
ANR	1398844	AssignmentExpression	"ret = avfilter_graph_parse2 ( fg -> graph , graph_desc , & inputs , & outputs )"		1398613	0		=			
ANR	1398845	Identifier	ret		1398613	0					
ANR	1398846	CallExpression	"avfilter_graph_parse2 ( fg -> graph , graph_desc , & inputs , & outputs )"		1398613	1					
ANR	1398847	Callee	avfilter_graph_parse2		1398613	0					
ANR	1398848	Identifier	avfilter_graph_parse2		1398613	0					
ANR	1398849	ArgumentList	fg -> graph		1398613	1					
ANR	1398850	Argument	fg -> graph		1398613	0					
ANR	1398851	PtrMemberAccess	fg -> graph		1398613	0					
ANR	1398852	Identifier	fg		1398613	0					
ANR	1398853	Identifier	graph		1398613	1					
ANR	1398854	Argument	graph_desc		1398613	1					
ANR	1398855	Identifier	graph_desc		1398613	0					
ANR	1398856	Argument	& inputs		1398613	2					
ANR	1398857	UnaryOperationExpression	& inputs		1398613	0					
ANR	1398858	UnaryOperator	&		1398613	0					
ANR	1398859	Identifier	inputs		1398613	1					
ANR	1398860	Argument	& outputs		1398613	3					
ANR	1398861	UnaryOperationExpression	& outputs		1398613	0					
ANR	1398862	UnaryOperator	&		1398613	0					
ANR	1398863	Identifier	outputs		1398613	1					
ANR	1398864	PrimaryExpression	0		1398613	1					
ANR	1398865	ReturnStatement	return ret ;	61:8:1130:1140	1398613	1	True				
ANR	1398866	Identifier	ret		1398613	0					
ANR	1398867	IfStatement	if ( simple && ( ! inputs || inputs -> next || ! outputs || outputs -> next ) )		1398613	7					
ANR	1398868	Condition	simple && ( ! inputs || inputs -> next || ! outputs || outputs -> next )	65:8:1153:1216	1398613	0	True				
ANR	1398869	AndExpression	simple && ( ! inputs || inputs -> next || ! outputs || outputs -> next )		1398613	0		&&			
ANR	1398870	Identifier	simple		1398613	0					
ANR	1398871	OrExpression	! inputs || inputs -> next || ! outputs || outputs -> next		1398613	1		||			
ANR	1398872	UnaryOperationExpression	! inputs		1398613	0					
ANR	1398873	UnaryOperator	!		1398613	0					
ANR	1398874	Identifier	inputs		1398613	1					
ANR	1398875	OrExpression	inputs -> next || ! outputs || outputs -> next		1398613	1		||			
ANR	1398876	PtrMemberAccess	inputs -> next		1398613	0					
ANR	1398877	Identifier	inputs		1398613	0					
ANR	1398878	Identifier	next		1398613	1					
ANR	1398879	OrExpression	! outputs || outputs -> next		1398613	1		||			
ANR	1398880	UnaryOperationExpression	! outputs		1398613	0					
ANR	1398881	UnaryOperator	!		1398613	0					
ANR	1398882	Identifier	outputs		1398613	1					
ANR	1398883	PtrMemberAccess	outputs -> next		1398613	1					
ANR	1398884	Identifier	outputs		1398613	0					
ANR	1398885	Identifier	next		1398613	1					
ANR	1398886	CompoundStatement		63:74:1174:1174	1398613	1					
ANR	1398887	Statement	av_log	67:8:1230:1235	1398613	0	True				
ANR	1398888	Statement	(	67:14:1236:1236	1398613	1	True				
ANR	1398889	Statement	NULL	67:15:1237:1240	1398613	2	True				
ANR	1398890	Statement	","	67:19:1241:1241	1398613	3	True				
ANR	1398891	Statement	AV_LOG_ERROR	67:21:1243:1254	1398613	4	True				
ANR	1398892	Statement	","	67:33:1255:1255	1398613	5	True				
ANR	1398893	Statement	"""Simple filtergraph '%s' does not have """	67:35:1257:1296	1398613	6	True				
ANR	1398894	Statement	"""exactly one input and output.\\n"""	69:15:1314:1346	1398613	7	True				
ANR	1398895	Statement	","	69:48:1347:1347	1398613	8	True				
ANR	1398896	Statement	graph_desc	69:50:1349:1358	1398613	9	True				
ANR	1398897	Statement	)	69:60:1359:1359	1398613	10	True				
ANR	1398898	ExpressionStatement		69:61:1360:1360	1398613	11	True				
ANR	1398899	ReturnStatement	return AVERROR ( EINVAL ) ;	71:8:1371:1393	1398613	12	True				
ANR	1398900	CallExpression	AVERROR ( EINVAL )		1398613	0					
ANR	1398901	Callee	AVERROR		1398613	0					
ANR	1398902	Identifier	AVERROR		1398613	0					
ANR	1398903	ArgumentList	EINVAL		1398613	1					
ANR	1398904	Argument	EINVAL		1398613	0					
ANR	1398905	Identifier	EINVAL		1398613	0					
ANR	1398906	ForStatement	"for ( cur = inputs , i = 0 ; cur ; cur = cur -> next , i ++ )"		1398613	8					
ANR	1398907	ForInit	"cur = inputs , i = 0 ;"	77:9:1414:1433	1398613	0	True				
ANR	1398908	Expression	"cur = inputs , i = 0"		1398613	0					
ANR	1398909	AssignmentExpression	cur = inputs		1398613	0		=			
ANR	1398910	Identifier	cur		1398613	0					
ANR	1398911	Identifier	inputs		1398613	1					
ANR	1398912	AssignmentExpression	i = 0		1398613	1		=			
ANR	1398913	Identifier	i		1398613	0					
ANR	1398914	PrimaryExpression	0		1398613	1					
ANR	1398915	Condition	cur	77:30:1435:1437	1398613	1	True				
ANR	1398916	Identifier	cur		1398613	0					
ANR	1398917	Expression	"cur = cur -> next , i ++"	77:35:1440:1459	1398613	2	True				
ANR	1398918	AssignmentExpression	cur = cur -> next		1398613	0		=			
ANR	1398919	Identifier	cur		1398613	0					
ANR	1398920	PtrMemberAccess	cur -> next		1398613	1					
ANR	1398921	Identifier	cur		1398613	0					
ANR	1398922	Identifier	next		1398613	1					
ANR	1398923	PostIncDecOperationExpression	i ++		1398613	1					
ANR	1398924	Identifier	i		1398613	0					
ANR	1398925	IncDec	++		1398613	1					
ANR	1398926	IfStatement	"if ( ( ret = configure_input_filter ( fg , fg -> inputs [ i ] , cur ) ) < 0 )"		1398613	3					
ANR	1398927	Condition	"( ret = configure_input_filter ( fg , fg -> inputs [ i ] , cur ) ) < 0"	79:12:1475:1532	1398613	0	True				
ANR	1398928	RelationalExpression	"( ret = configure_input_filter ( fg , fg -> inputs [ i ] , cur ) ) < 0"		1398613	0		<			
ANR	1398929	AssignmentExpression	"ret = configure_input_filter ( fg , fg -> inputs [ i ] , cur )"		1398613	0		=			
ANR	1398930	Identifier	ret		1398613	0					
ANR	1398931	CallExpression	"configure_input_filter ( fg , fg -> inputs [ i ] , cur )"		1398613	1					
ANR	1398932	Callee	configure_input_filter		1398613	0					
ANR	1398933	Identifier	configure_input_filter		1398613	0					
ANR	1398934	ArgumentList	fg		1398613	1					
ANR	1398935	Argument	fg		1398613	0					
ANR	1398936	Identifier	fg		1398613	0					
ANR	1398937	Argument	fg -> inputs [ i ]		1398613	1					
ANR	1398938	ArrayIndexing	fg -> inputs [ i ]		1398613	0					
ANR	1398939	PtrMemberAccess	fg -> inputs		1398613	0					
ANR	1398940	Identifier	fg		1398613	0					
ANR	1398941	Identifier	inputs		1398613	1					
ANR	1398942	Identifier	i		1398613	1					
ANR	1398943	Argument	cur		1398613	2					
ANR	1398944	Identifier	cur		1398613	0					
ANR	1398945	PrimaryExpression	0		1398613	1					
ANR	1398946	ReturnStatement	return ret ;	81:12:1548:1558	1398613	1	True				
ANR	1398947	Identifier	ret		1398613	0					
ANR	1398948	ExpressionStatement	avfilter_inout_free ( & inputs )	83:4:1565:1593	1398613	9	True				
ANR	1398949	CallExpression	avfilter_inout_free ( & inputs )		1398613	0					
ANR	1398950	Callee	avfilter_inout_free		1398613	0					
ANR	1398951	Identifier	avfilter_inout_free		1398613	0					
ANR	1398952	ArgumentList	& inputs		1398613	1					
ANR	1398953	Argument	& inputs		1398613	0					
ANR	1398954	UnaryOperationExpression	& inputs		1398613	0					
ANR	1398955	UnaryOperator	&		1398613	0					
ANR	1398956	Identifier	inputs		1398613	1					
ANR	1398957	ForStatement	"for ( cur = outputs , i = 0 ; cur ; cur = cur -> next , i ++ )"		1398613	10					
ANR	1398958	ForInit	"cur = outputs , i = 0 ;"	87:9:1607:1627	1398613	0	True				
ANR	1398959	Expression	"cur = outputs , i = 0"		1398613	0					
ANR	1398960	AssignmentExpression	cur = outputs		1398613	0		=			
ANR	1398961	Identifier	cur		1398613	0					
ANR	1398962	Identifier	outputs		1398613	1					
ANR	1398963	AssignmentExpression	i = 0		1398613	1		=			
ANR	1398964	Identifier	i		1398613	0					
ANR	1398965	PrimaryExpression	0		1398613	1					
ANR	1398966	Condition	cur	87:31:1629:1631	1398613	1	True				
ANR	1398967	Identifier	cur		1398613	0					
ANR	1398968	Expression	"cur = cur -> next , i ++"	87:36:1634:1653	1398613	2	True				
ANR	1398969	AssignmentExpression	cur = cur -> next		1398613	0		=			
ANR	1398970	Identifier	cur		1398613	0					
ANR	1398971	PtrMemberAccess	cur -> next		1398613	1					
ANR	1398972	Identifier	cur		1398613	0					
ANR	1398973	Identifier	next		1398613	1					
ANR	1398974	PostIncDecOperationExpression	i ++		1398613	1					
ANR	1398975	Identifier	i		1398613	0					
ANR	1398976	IncDec	++		1398613	1					
ANR	1398977	ExpressionStatement	"configure_output_filter ( fg , fg -> outputs [ i ] , cur )"	89:8:1665:1713	1398613	3	True				
ANR	1398978	CallExpression	"configure_output_filter ( fg , fg -> outputs [ i ] , cur )"		1398613	0					
ANR	1398979	Callee	configure_output_filter		1398613	0					
ANR	1398980	Identifier	configure_output_filter		1398613	0					
ANR	1398981	ArgumentList	fg		1398613	1					
ANR	1398982	Argument	fg		1398613	0					
ANR	1398983	Identifier	fg		1398613	0					
ANR	1398984	Argument	fg -> outputs [ i ]		1398613	1					
ANR	1398985	ArrayIndexing	fg -> outputs [ i ]		1398613	0					
ANR	1398986	PtrMemberAccess	fg -> outputs		1398613	0					
ANR	1398987	Identifier	fg		1398613	0					
ANR	1398988	Identifier	outputs		1398613	1					
ANR	1398989	Identifier	i		1398613	1					
ANR	1398990	Argument	cur		1398613	2					
ANR	1398991	Identifier	cur		1398613	0					
ANR	1398992	ExpressionStatement	avfilter_inout_free ( & outputs )	91:4:1720:1749	1398613	11	True				
ANR	1398993	CallExpression	avfilter_inout_free ( & outputs )		1398613	0					
ANR	1398994	Callee	avfilter_inout_free		1398613	0					
ANR	1398995	Identifier	avfilter_inout_free		1398613	0					
ANR	1398996	ArgumentList	& outputs		1398613	1					
ANR	1398997	Argument	& outputs		1398613	0					
ANR	1398998	UnaryOperationExpression	& outputs		1398613	0					
ANR	1398999	UnaryOperator	&		1398613	0					
ANR	1399000	Identifier	outputs		1398613	1					
ANR	1399001	IfStatement	"if ( ( ret = avfilter_graph_config ( fg -> graph , NULL ) ) < 0 )"		1398613	12					
ANR	1399002	Condition	"( ret = avfilter_graph_config ( fg -> graph , NULL ) ) < 0"	95:8:1762:1811	1398613	0	True				
ANR	1399003	RelationalExpression	"( ret = avfilter_graph_config ( fg -> graph , NULL ) ) < 0"		1398613	0		<			
ANR	1399004	AssignmentExpression	"ret = avfilter_graph_config ( fg -> graph , NULL )"		1398613	0		=			
ANR	1399005	Identifier	ret		1398613	0					
ANR	1399006	CallExpression	"avfilter_graph_config ( fg -> graph , NULL )"		1398613	1					
ANR	1399007	Callee	avfilter_graph_config		1398613	0					
ANR	1399008	Identifier	avfilter_graph_config		1398613	0					
ANR	1399009	ArgumentList	fg -> graph		1398613	1					
ANR	1399010	Argument	fg -> graph		1398613	0					
ANR	1399011	PtrMemberAccess	fg -> graph		1398613	0					
ANR	1399012	Identifier	fg		1398613	0					
ANR	1399013	Identifier	graph		1398613	1					
ANR	1399014	Argument	NULL		1398613	1					
ANR	1399015	Identifier	NULL		1398613	0					
ANR	1399016	PrimaryExpression	0		1398613	1					
ANR	1399017	ReturnStatement	return ret ;	97:8:1823:1833	1398613	1	True				
ANR	1399018	Identifier	ret		1398613	0					
ANR	1399019	ReturnStatement	return 0 ;	101:4:1842:1850	1398613	13	True				
ANR	1399020	PrimaryExpression	0		1398613	0					
ANR	1399021	ReturnType	int		1398613	1					
ANR	1399022	Identifier	configure_filtergraph		1398613	2					
ANR	1399023	ParameterList	FilterGraph * fg		1398613	3					
ANR	1399024	Parameter	FilterGraph * fg	1:26:26:40	1398613	0	True				
ANR	1399025	ParameterType	FilterGraph *		1398613	0					
ANR	1399026	Identifier	fg		1398613	1					
ANR	1399027	CFGEntryNode	ENTRY		1398613		True				
ANR	1399028	CFGExitNode	EXIT		1398613		True				
ANR	1399029	Symbol	outputs		1398613						
ANR	1399030	Symbol	& inputs		1398613						
ANR	1399031	Symbol	ENOMEM		1398613						
ANR	1399032	Symbol	inputs		1398613						
ANR	1399033	Symbol	ost -> sws_flags		1398613						
ANR	1399034	Symbol	av_strdup		1398613						
ANR	1399035	Symbol	fg -> outputs [ 0 ] -> ost -> avfilter		1398613						
ANR	1399036	Symbol	avfilter_graph_alloc		1398613						
ANR	1399037	Symbol	simple		1398613						
ANR	1399038	Symbol	* args		1398613						
ANR	1399039	Symbol	& fg -> graph		1398613						
ANR	1399040	Symbol	graph_desc		1398613						
ANR	1399041	Symbol	ost		1398613						
ANR	1399042	Symbol	strlen		1398613						
ANR	1399043	Symbol	fg -> graph		1398613						
ANR	1399044	Symbol	fg -> outputs		1398613						
ANR	1399045	Symbol	* cur		1398613						
ANR	1399046	Symbol	* fg -> outputs [ 0 ] -> ost		1398613						
ANR	1399047	Symbol	ret		1398613						
ANR	1399048	Symbol	NULL		1398613						
ANR	1399049	Symbol	inputs -> next		1398613						
ANR	1399050	Symbol	fg -> graph_desc		1398613						
ANR	1399051	Symbol	avfilter_graph_parse2		1398613						
ANR	1399052	Symbol	* * fg		1398613						
ANR	1399053	Symbol	* inputs		1398613						
ANR	1399054	Symbol	e -> value		1398613						
ANR	1399055	Symbol	* * fg -> outputs		1398613						
ANR	1399056	Symbol	fg -> graph -> scale_sws_opts		1398613						
ANR	1399057	Symbol	fg		1398613						
ANR	1399058	Symbol	cur		1398613						
ANR	1399059	Symbol	fg -> outputs [ 0 ] -> ost -> resample_opts		1398613						
ANR	1399060	Symbol	* fg -> inputs		1398613						
ANR	1399061	Symbol	* * * * fg		1398613						
ANR	1399062	Symbol	AV_DICT_IGNORE_SUFFIX		1398613						
ANR	1399063	Symbol	fg -> inputs		1398613						
ANR	1399064	Symbol	* * * fg		1398613						
ANR	1399065	Symbol	avfilter_graph_config		1398613						
ANR	1399066	Symbol	* fg -> outputs		1398613						
ANR	1399067	Symbol	av_dict_get		1398613						
ANR	1399068	Symbol	fg -> graph -> resample_lavr_opts		1398613						
ANR	1399069	Symbol	* fg		1398613						
ANR	1399070	Symbol	e		1398613						
ANR	1399071	Symbol	* fg -> graph		1398613						
ANR	1399072	Symbol	i		1398613						
ANR	1399073	Symbol	e -> key		1398613						
ANR	1399074	Symbol	configure_input_filter		1398613						
ANR	1399075	Symbol	* outputs		1398613						
ANR	1399076	Symbol	* e		1398613						
ANR	1399077	Symbol	args		1398613						
ANR	1399078	Symbol	EINVAL		1398613						
ANR	1399079	Symbol	* i		1398613						
ANR	1399080	Symbol	* strlen		1398613						
ANR	1399081	Symbol	outputs -> next		1398613						
ANR	1399082	Symbol	& outputs		1398613						
ANR	1399083	Symbol	* * * fg -> outputs		1398613						
ANR	1399084	Symbol	* ost		1398613						
ANR	1399085	Symbol	AVERROR		1398613						
ANR	1399086	Symbol	cur -> next		1398613						
ANR	1399087	Symbol	fg -> outputs [ 0 ] -> ost		1398613						
