command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6474734	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pcm_decode_frame_01_0.c								
ANR	6474735	Function	pcm_decode_frame	1:0:0:7023							
ANR	6474736	FunctionDef	"pcm_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		6474735	0					
ANR	6474737	CompoundStatement		7:0:155:7023	6474735	0					
ANR	6474738	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:162:194	6474735	0	True				
ANR	6474739	IdentifierDecl	* buf = avpkt -> data		6474735	0					
ANR	6474740	IdentifierDeclType	const uint8_t *		6474735	0					
ANR	6474741	Identifier	buf		6474735	1					
ANR	6474742	AssignmentExpression	* buf = avpkt -> data		6474735	2		=			
ANR	6474743	Identifier	buf		6474735	0					
ANR	6474744	PtrMemberAccess	avpkt -> data		6474735	1					
ANR	6474745	Identifier	avpkt		6474735	0					
ANR	6474746	Identifier	data		6474735	1					
ANR	6474747	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:201:227	6474735	1	True				
ANR	6474748	IdentifierDecl	buf_size = avpkt -> size		6474735	0					
ANR	6474749	IdentifierDeclType	int		6474735	0					
ANR	6474750	Identifier	buf_size		6474735	1					
ANR	6474751	AssignmentExpression	buf_size = avpkt -> size		6474735	2		=			
ANR	6474752	Identifier	buf_size		6474735	0					
ANR	6474753	PtrMemberAccess	avpkt -> size		6474735	1					
ANR	6474754	Identifier	avpkt		6474735	0					
ANR	6474755	Identifier	size		6474735	1					
ANR	6474756	IdentifierDeclStatement	PCMDecode * s = avctx -> priv_data ;	13:4:234:265	6474735	2	True				
ANR	6474757	IdentifierDecl	* s = avctx -> priv_data		6474735	0					
ANR	6474758	IdentifierDeclType	PCMDecode *		6474735	0					
ANR	6474759	Identifier	s		6474735	1					
ANR	6474760	AssignmentExpression	* s = avctx -> priv_data		6474735	2		=			
ANR	6474761	Identifier	s		6474735	0					
ANR	6474762	PtrMemberAccess	avctx -> priv_data		6474735	1					
ANR	6474763	Identifier	avctx		6474735	0					
ANR	6474764	Identifier	priv_data		6474735	1					
ANR	6474765	IdentifierDeclStatement	"int sample_size , c , n , i ;"	15:4:272:296	6474735	3	True				
ANR	6474766	IdentifierDecl	sample_size		6474735	0					
ANR	6474767	IdentifierDeclType	int		6474735	0					
ANR	6474768	Identifier	sample_size		6474735	1					
ANR	6474769	IdentifierDecl	c		6474735	1					
ANR	6474770	IdentifierDeclType	int		6474735	0					
ANR	6474771	Identifier	c		6474735	1					
ANR	6474772	IdentifierDecl	n		6474735	2					
ANR	6474773	IdentifierDeclType	int		6474735	0					
ANR	6474774	Identifier	n		6474735	1					
ANR	6474775	IdentifierDecl	i		6474735	3					
ANR	6474776	IdentifierDeclType	int		6474735	0					
ANR	6474777	Identifier	i		6474735	1					
ANR	6474778	IdentifierDeclStatement	uint8_t * samples ;	17:4:303:319	6474735	4	True				
ANR	6474779	IdentifierDecl	* samples		6474735	0					
ANR	6474780	IdentifierDeclType	uint8_t *		6474735	0					
ANR	6474781	Identifier	samples		6474735	1					
ANR	6474782	IdentifierDeclStatement	"const uint8_t * src , * src8 , * src2 [ MAX_CHANNELS ] ;"	19:4:326:372	6474735	5	True				
ANR	6474783	IdentifierDecl	* src		6474735	0					
ANR	6474784	IdentifierDeclType	const uint8_t *		6474735	0					
ANR	6474785	Identifier	src		6474735	1					
ANR	6474786	IdentifierDecl	* src8		6474735	1					
ANR	6474787	IdentifierDeclType	const uint8_t *		6474735	0					
ANR	6474788	Identifier	src8		6474735	1					
ANR	6474789	IdentifierDecl	* src2 [ MAX_CHANNELS ]		6474735	2					
ANR	6474790	IdentifierDeclType	const uint8_t * [ MAX_CHANNELS ]		6474735	0					
ANR	6474791	Identifier	src2		6474735	1					
ANR	6474792	Identifier	MAX_CHANNELS		6474735	2					
ANR	6474793	IdentifierDeclStatement	int32_t * dst_int32_t ;	21:4:379:399	6474735	6	True				
ANR	6474794	IdentifierDecl	* dst_int32_t		6474735	0					
ANR	6474795	IdentifierDeclType	int32_t *		6474735	0					
ANR	6474796	Identifier	dst_int32_t		6474735	1					
ANR	6474797	ExpressionStatement	samples = data	25:4:408:422	6474735	7	True				
ANR	6474798	AssignmentExpression	samples = data		6474735	0		=			
ANR	6474799	Identifier	samples		6474735	0					
ANR	6474800	Identifier	data		6474735	1					
ANR	6474801	ExpressionStatement	src = buf	27:4:429:438	6474735	8	True				
ANR	6474802	AssignmentExpression	src = buf		6474735	0		=			
ANR	6474803	Identifier	src		6474735	0					
ANR	6474804	Identifier	buf		6474735	1					
ANR	6474805	IfStatement	if ( avctx -> sample_fmt != avctx -> codec -> sample_fmts [ 0 ] )		6474735	9					
ANR	6474806	Condition	avctx -> sample_fmt != avctx -> codec -> sample_fmts [ 0 ]	31:8:451:497	6474735	0	True				
ANR	6474807	EqualityExpression	avctx -> sample_fmt != avctx -> codec -> sample_fmts [ 0 ]		6474735	0		!=			
ANR	6474808	PtrMemberAccess	avctx -> sample_fmt		6474735	0					
ANR	6474809	Identifier	avctx		6474735	0					
ANR	6474810	Identifier	sample_fmt		6474735	1					
ANR	6474811	ArrayIndexing	avctx -> codec -> sample_fmts [ 0 ]		6474735	1					
ANR	6474812	PtrMemberAccess	avctx -> codec -> sample_fmts		6474735	0					
ANR	6474813	PtrMemberAccess	avctx -> codec		6474735	0					
ANR	6474814	Identifier	avctx		6474735	0					
ANR	6474815	Identifier	codec		6474735	1					
ANR	6474816	Identifier	sample_fmts		6474735	1					
ANR	6474817	PrimaryExpression	0		6474735	1					
ANR	6474818	CompoundStatement		25:57:344:344	6474735	1					
ANR	6474819	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid sample_fmt\\n"" )"	33:8:511:562	6474735	0	True				
ANR	6474820	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid sample_fmt\\n"" )"		6474735	0					
ANR	6474821	Callee	av_log		6474735	0					
ANR	6474822	Identifier	av_log		6474735	0					
ANR	6474823	ArgumentList	avctx		6474735	1					
ANR	6474824	Argument	avctx		6474735	0					
ANR	6474825	Identifier	avctx		6474735	0					
ANR	6474826	Argument	AV_LOG_ERROR		6474735	1					
ANR	6474827	Identifier	AV_LOG_ERROR		6474735	0					
ANR	6474828	Argument	"""invalid sample_fmt\\n"""		6474735	2					
ANR	6474829	PrimaryExpression	"""invalid sample_fmt\\n"""		6474735	0					
ANR	6474830	ReturnStatement	return - 1 ;	35:8:573:582	6474735	1	True				
ANR	6474831	UnaryOperationExpression	- 1		6474735	0					
ANR	6474832	UnaryOperator	-		6474735	0					
ANR	6474833	PrimaryExpression	1		6474735	1					
ANR	6474834	IfStatement	if ( avctx -> channels <= 0 || avctx -> channels > MAX_CHANNELS )		6474735	10					
ANR	6474835	Condition	avctx -> channels <= 0 || avctx -> channels > MAX_CHANNELS	41:7:601:654	6474735	0	True				
ANR	6474836	OrExpression	avctx -> channels <= 0 || avctx -> channels > MAX_CHANNELS		6474735	0		||			
ANR	6474837	RelationalExpression	avctx -> channels <= 0		6474735	0		<=			
ANR	6474838	PtrMemberAccess	avctx -> channels		6474735	0					
ANR	6474839	Identifier	avctx		6474735	0					
ANR	6474840	Identifier	channels		6474735	1					
ANR	6474841	PrimaryExpression	0		6474735	1					
ANR	6474842	RelationalExpression	avctx -> channels > MAX_CHANNELS		6474735	1		>			
ANR	6474843	PtrMemberAccess	avctx -> channels		6474735	0					
ANR	6474844	Identifier	avctx		6474735	0					
ANR	6474845	Identifier	channels		6474735	1					
ANR	6474846	Identifier	MAX_CHANNELS		6474735	1					
ANR	6474847	CompoundStatement		35:62:500:500	6474735	1					
ANR	6474848	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""PCM channels out of bounds\\n"" )"	43:8:667:726	6474735	0	True				
ANR	6474849	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""PCM channels out of bounds\\n"" )"		6474735	0					
ANR	6474850	Callee	av_log		6474735	0					
ANR	6474851	Identifier	av_log		6474735	0					
ANR	6474852	ArgumentList	avctx		6474735	1					
ANR	6474853	Argument	avctx		6474735	0					
ANR	6474854	Identifier	avctx		6474735	0					
ANR	6474855	Argument	AV_LOG_ERROR		6474735	1					
ANR	6474856	Identifier	AV_LOG_ERROR		6474735	0					
ANR	6474857	Argument	"""PCM channels out of bounds\\n"""		6474735	2					
ANR	6474858	PrimaryExpression	"""PCM channels out of bounds\\n"""		6474735	0					
ANR	6474859	ReturnStatement	return - 1 ;	45:8:737:746	6474735	1	True				
ANR	6474860	UnaryOperationExpression	- 1		6474735	0					
ANR	6474861	UnaryOperator	-		6474735	0					
ANR	6474862	PrimaryExpression	1		6474735	1					
ANR	6474863	ExpressionStatement	sample_size = av_get_bits_per_sample ( avctx -> codec_id ) / 8	51:4:762:817	6474735	11	True				
ANR	6474864	AssignmentExpression	sample_size = av_get_bits_per_sample ( avctx -> codec_id ) / 8		6474735	0		=			
ANR	6474865	Identifier	sample_size		6474735	0					
ANR	6474866	MultiplicativeExpression	av_get_bits_per_sample ( avctx -> codec_id ) / 8		6474735	1		/			
ANR	6474867	CallExpression	av_get_bits_per_sample ( avctx -> codec_id )		6474735	0					
ANR	6474868	Callee	av_get_bits_per_sample		6474735	0					
ANR	6474869	Identifier	av_get_bits_per_sample		6474735	0					
ANR	6474870	ArgumentList	avctx -> codec_id		6474735	1					
ANR	6474871	Argument	avctx -> codec_id		6474735	0					
ANR	6474872	PtrMemberAccess	avctx -> codec_id		6474735	0					
ANR	6474873	Identifier	avctx		6474735	0					
ANR	6474874	Identifier	codec_id		6474735	1					
ANR	6474875	PrimaryExpression	8		6474735	1					
ANR	6474876	IfStatement	if ( CODEC_ID_PCM_DVD == avctx -> codec_id )		6474735	12					
ANR	6474877	Condition	CODEC_ID_PCM_DVD == avctx -> codec_id	57:8:895:929	6474735	0	True				
ANR	6474878	EqualityExpression	CODEC_ID_PCM_DVD == avctx -> codec_id		6474735	0		==			
ANR	6474879	Identifier	CODEC_ID_PCM_DVD		6474735	0					
ANR	6474880	PtrMemberAccess	avctx -> codec_id		6474735	1					
ANR	6474881	Identifier	avctx		6474735	0					
ANR	6474882	Identifier	codec_id		6474735	1					
ANR	6474883	ExpressionStatement	sample_size = avctx -> bits_per_coded_sample * 2 / 8	61:8:1003:1053	6474735	1	True				
ANR	6474884	AssignmentExpression	sample_size = avctx -> bits_per_coded_sample * 2 / 8		6474735	0		=			
ANR	6474885	Identifier	sample_size		6474735	0					
ANR	6474886	MultiplicativeExpression	avctx -> bits_per_coded_sample * 2 / 8		6474735	1		*			
ANR	6474887	PtrMemberAccess	avctx -> bits_per_coded_sample		6474735	0					
ANR	6474888	Identifier	avctx		6474735	0					
ANR	6474889	Identifier	bits_per_coded_sample		6474735	1					
ANR	6474890	MultiplicativeExpression	2 / 8		6474735	1		/			
ANR	6474891	PrimaryExpression	2		6474735	0					
ANR	6474892	PrimaryExpression	8		6474735	1					
ANR	6474893	ElseStatement	else		6474735	0					
ANR	6474894	IfStatement	if ( avctx -> codec_id == CODEC_ID_PCM_LXF )		6474735	0					
ANR	6474895	Condition	avctx -> codec_id == CODEC_ID_PCM_LXF	63:13:1069:1103	6474735	0	True				
ANR	6474896	EqualityExpression	avctx -> codec_id == CODEC_ID_PCM_LXF		6474735	0		==			
ANR	6474897	PtrMemberAccess	avctx -> codec_id		6474735	0					
ANR	6474898	Identifier	avctx		6474735	0					
ANR	6474899	Identifier	codec_id		6474735	1					
ANR	6474900	Identifier	CODEC_ID_PCM_LXF		6474735	1					
ANR	6474901	ExpressionStatement	sample_size = 5	67:8:1175:1190	6474735	1	True				
ANR	6474902	AssignmentExpression	sample_size = 5		6474735	0		=			
ANR	6474903	Identifier	sample_size		6474735	0					
ANR	6474904	PrimaryExpression	5		6474735	1					
ANR	6474905	IfStatement	if ( sample_size == 0 )		6474735	13					
ANR	6474906	Condition	sample_size == 0	71:8:1203:1218	6474735	0	True				
ANR	6474907	EqualityExpression	sample_size == 0		6474735	0		==			
ANR	6474908	Identifier	sample_size		6474735	0					
ANR	6474909	PrimaryExpression	0		6474735	1					
ANR	6474910	CompoundStatement		65:26:1065:1065	6474735	1					
ANR	6474911	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid sample_size\\n"" )"	73:8:1232:1284	6474735	0	True				
ANR	6474912	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid sample_size\\n"" )"		6474735	0					
ANR	6474913	Callee	av_log		6474735	0					
ANR	6474914	Identifier	av_log		6474735	0					
ANR	6474915	ArgumentList	avctx		6474735	1					
ANR	6474916	Argument	avctx		6474735	0					
ANR	6474917	Identifier	avctx		6474735	0					
ANR	6474918	Argument	AV_LOG_ERROR		6474735	1					
ANR	6474919	Identifier	AV_LOG_ERROR		6474735	0					
ANR	6474920	Argument	"""Invalid sample_size\\n"""		6474735	2					
ANR	6474921	PrimaryExpression	"""Invalid sample_size\\n"""		6474735	0					
ANR	6474922	ReturnStatement	return AVERROR ( EINVAL ) ;	75:8:1295:1317	6474735	1	True				
ANR	6474923	CallExpression	AVERROR ( EINVAL )		6474735	0					
ANR	6474924	Callee	AVERROR		6474735	0					
ANR	6474925	Identifier	AVERROR		6474735	0					
ANR	6474926	ArgumentList	EINVAL		6474735	1					
ANR	6474927	Argument	EINVAL		6474735	0					
ANR	6474928	Identifier	EINVAL		6474735	0					
ANR	6474929	ExpressionStatement	n = avctx -> channels * sample_size	81:4:1333:1366	6474735	14	True				
ANR	6474930	AssignmentExpression	n = avctx -> channels * sample_size		6474735	0		=			
ANR	6474931	Identifier	n		6474735	0					
ANR	6474932	MultiplicativeExpression	avctx -> channels * sample_size		6474735	1		*			
ANR	6474933	PtrMemberAccess	avctx -> channels		6474735	0					
ANR	6474934	Identifier	avctx		6474735	0					
ANR	6474935	Identifier	channels		6474735	1					
ANR	6474936	Identifier	sample_size		6474735	1					
ANR	6474937	IfStatement	if ( n && buf_size % n )		6474735	15					
ANR	6474938	Condition	n && buf_size % n	85:7:1378:1394	6474735	0	True				
ANR	6474939	AndExpression	n && buf_size % n		6474735	0		&&			
ANR	6474940	Identifier	n		6474735	0					
ANR	6474941	MultiplicativeExpression	buf_size % n		6474735	1		%			
ANR	6474942	Identifier	buf_size		6474735	0					
ANR	6474943	Identifier	n		6474735	1					
ANR	6474944	CompoundStatement		79:25:1240:1240	6474735	1					
ANR	6474945	IfStatement	if ( buf_size < n )		6474735	0					
ANR	6474946	Condition	buf_size < n	87:12:1411:1422	6474735	0	True				
ANR	6474947	RelationalExpression	buf_size < n		6474735	0		<			
ANR	6474948	Identifier	buf_size		6474735	0					
ANR	6474949	Identifier	n		6474735	1					
ANR	6474950	CompoundStatement		81:26:1269:1269	6474735	1					
ANR	6474951	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid PCM packet\\n"" )"	89:12:1440:1491	6474735	0	True				
ANR	6474952	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid PCM packet\\n"" )"		6474735	0					
ANR	6474953	Callee	av_log		6474735	0					
ANR	6474954	Identifier	av_log		6474735	0					
ANR	6474955	ArgumentList	avctx		6474735	1					
ANR	6474956	Argument	avctx		6474735	0					
ANR	6474957	Identifier	avctx		6474735	0					
ANR	6474958	Argument	AV_LOG_ERROR		6474735	1					
ANR	6474959	Identifier	AV_LOG_ERROR		6474735	0					
ANR	6474960	Argument	"""invalid PCM packet\\n"""		6474735	2					
ANR	6474961	PrimaryExpression	"""invalid PCM packet\\n"""		6474735	0					
ANR	6474962	ReturnStatement	return - 1 ;	91:12:1506:1515	6474735	1	True				
ANR	6474963	UnaryOperationExpression	- 1		6474735	0					
ANR	6474964	UnaryOperator	-		6474735	0					
ANR	6474965	PrimaryExpression	1		6474735	1					
ANR	6474966	ElseStatement	else		6474735	0					
ANR	6474967	ExpressionStatement	buf_size -= buf_size % n	95:12:1545:1569	6474735	0	True				
ANR	6474968	AssignmentExpression	buf_size -= buf_size % n		6474735	0		-=			
ANR	6474969	Identifier	buf_size		6474735	0					
ANR	6474970	MultiplicativeExpression	buf_size % n		6474735	1		%			
ANR	6474971	Identifier	buf_size		6474735	0					
ANR	6474972	Identifier	n		6474735	1					
ANR	6474973	ExpressionStatement	"buf_size = FFMIN ( buf_size , * data_size / 2 )"	101:4:1585:1624	6474735	16	True				
ANR	6474974	AssignmentExpression	"buf_size = FFMIN ( buf_size , * data_size / 2 )"		6474735	0		=			
ANR	6474975	Identifier	buf_size		6474735	0					
ANR	6474976	CallExpression	"FFMIN ( buf_size , * data_size / 2 )"		6474735	1					
ANR	6474977	Callee	FFMIN		6474735	0					
ANR	6474978	Identifier	FFMIN		6474735	0					
ANR	6474979	ArgumentList	buf_size		6474735	1					
ANR	6474980	Argument	buf_size		6474735	0					
ANR	6474981	Identifier	buf_size		6474735	0					
ANR	6474982	Argument	* data_size / 2		6474735	1					
ANR	6474983	MultiplicativeExpression	* data_size / 2		6474735	0		/			
ANR	6474984	UnaryOperationExpression	* data_size		6474735	0					
ANR	6474985	UnaryOperator	*		6474735	0					
ANR	6474986	Identifier	data_size		6474735	1					
ANR	6474987	PrimaryExpression	2		6474735	1					
ANR	6474988	ExpressionStatement	n = buf_size / sample_size	105:4:1633:1657	6474735	17	True				
ANR	6474989	AssignmentExpression	n = buf_size / sample_size		6474735	0		=			
ANR	6474990	Identifier	n		6474735	0					
ANR	6474991	MultiplicativeExpression	buf_size / sample_size		6474735	1		/			
ANR	6474992	Identifier	buf_size		6474735	0					
ANR	6474993	Identifier	sample_size		6474735	1					
ANR	6474994	SwitchStatement	switch ( avctx -> codec -> id )		6474735	18					
ANR	6474995	Condition	avctx -> codec -> id	109:11:1673:1688	6474735	0	True				
ANR	6474996	PtrMemberAccess	avctx -> codec -> id		6474735	0					
ANR	6474997	PtrMemberAccess	avctx -> codec		6474735	0					
ANR	6474998	Identifier	avctx		6474735	0					
ANR	6474999	Identifier	codec		6474735	1					
ANR	6475000	Identifier	id		6474735	1					
ANR	6475001	CompoundStatement		103:29:1535:1535	6474735	1					
ANR	6475002	Label	case CODEC_ID_PCM_U32LE :	111:4:1698:1721	6474735	0	True				
ANR	6475003	Identifier	CODEC_ID_PCM_U32LE		6474735	0					
ANR	6475004	Statement	DECODE	113:8:1732:1737	6474735	1	True				
ANR	6475005	Statement	(	113:14:1738:1738	6474735	2	True				
ANR	6475006	Statement	32	113:15:1739:1740	6474735	3	True				
ANR	6475007	Statement	","	113:17:1741:1741	6474735	4	True				
ANR	6475008	Statement	le32	113:19:1743:1746	6474735	5	True				
ANR	6475009	Statement	","	113:23:1747:1747	6474735	6	True				
ANR	6475010	Statement	src	113:25:1749:1751	6474735	7	True				
ANR	6475011	Statement	","	113:28:1752:1752	6474735	8	True				
ANR	6475012	Statement	samples	113:30:1754:1760	6474735	9	True				
ANR	6475013	Statement	","	113:37:1761:1761	6474735	10	True				
ANR	6475014	Statement	n	113:39:1763:1763	6474735	11	True				
ANR	6475015	Statement	","	113:40:1764:1764	6474735	12	True				
ANR	6475016	Statement	0	113:42:1766:1766	6474735	13	True				
ANR	6475017	Statement	","	113:43:1767:1767	6474735	14	True				
ANR	6475018	Statement	0x80000000	113:45:1769:1778	6474735	15	True				
ANR	6475019	Statement	)	113:55:1779:1779	6474735	16	True				
ANR	6475020	BreakStatement	break ;	115:8:1790:1795	6474735	17	True				
ANR	6475021	Label	case CODEC_ID_PCM_U32BE :	117:4:1802:1825	6474735	18	True				
ANR	6475022	Identifier	CODEC_ID_PCM_U32BE		6474735	0					
ANR	6475023	Statement	DECODE	119:8:1836:1841	6474735	19	True				
ANR	6475024	Statement	(	119:14:1842:1842	6474735	20	True				
ANR	6475025	Statement	32	119:15:1843:1844	6474735	21	True				
ANR	6475026	Statement	","	119:17:1845:1845	6474735	22	True				
ANR	6475027	Statement	be32	119:19:1847:1850	6474735	23	True				
ANR	6475028	Statement	","	119:23:1851:1851	6474735	24	True				
ANR	6475029	Statement	src	119:25:1853:1855	6474735	25	True				
ANR	6475030	Statement	","	119:28:1856:1856	6474735	26	True				
ANR	6475031	Statement	samples	119:30:1858:1864	6474735	27	True				
ANR	6475032	Statement	","	119:37:1865:1865	6474735	28	True				
ANR	6475033	Statement	n	119:39:1867:1867	6474735	29	True				
ANR	6475034	Statement	","	119:40:1868:1868	6474735	30	True				
ANR	6475035	Statement	0	119:42:1870:1870	6474735	31	True				
ANR	6475036	Statement	","	119:43:1871:1871	6474735	32	True				
ANR	6475037	Statement	0x80000000	119:45:1873:1882	6474735	33	True				
ANR	6475038	Statement	)	119:55:1883:1883	6474735	34	True				
ANR	6475039	BreakStatement	break ;	121:8:1894:1899	6474735	35	True				
ANR	6475040	Label	case CODEC_ID_PCM_S24LE :	123:4:1906:1929	6474735	36	True				
ANR	6475041	Identifier	CODEC_ID_PCM_S24LE		6474735	0					
ANR	6475042	Statement	DECODE	125:8:1940:1945	6474735	37	True				
ANR	6475043	Statement	(	125:14:1946:1946	6474735	38	True				
ANR	6475044	Statement	32	125:15:1947:1948	6474735	39	True				
ANR	6475045	Statement	","	125:17:1949:1949	6474735	40	True				
ANR	6475046	Statement	le24	125:19:1951:1954	6474735	41	True				
ANR	6475047	Statement	","	125:23:1955:1955	6474735	42	True				
ANR	6475048	Statement	src	125:25:1957:1959	6474735	43	True				
ANR	6475049	Statement	","	125:28:1960:1960	6474735	44	True				
ANR	6475050	Statement	samples	125:30:1962:1968	6474735	45	True				
ANR	6475051	Statement	","	125:37:1969:1969	6474735	46	True				
ANR	6475052	Statement	n	125:39:1971:1971	6474735	47	True				
ANR	6475053	Statement	","	125:40:1972:1972	6474735	48	True				
ANR	6475054	Statement	8	125:42:1974:1974	6474735	49	True				
ANR	6475055	Statement	","	125:43:1975:1975	6474735	50	True				
ANR	6475056	Statement	0	125:45:1977:1977	6474735	51	True				
ANR	6475057	Statement	)	125:46:1978:1978	6474735	52	True				
ANR	6475058	BreakStatement	break ;	127:8:1989:1994	6474735	53	True				
ANR	6475059	Label	case CODEC_ID_PCM_S24BE :	129:4:2001:2024	6474735	54	True				
ANR	6475060	Identifier	CODEC_ID_PCM_S24BE		6474735	0					
ANR	6475061	Statement	DECODE	131:8:2035:2040	6474735	55	True				
ANR	6475062	Statement	(	131:14:2041:2041	6474735	56	True				
ANR	6475063	Statement	32	131:15:2042:2043	6474735	57	True				
ANR	6475064	Statement	","	131:17:2044:2044	6474735	58	True				
ANR	6475065	Statement	be24	131:19:2046:2049	6474735	59	True				
ANR	6475066	Statement	","	131:23:2050:2050	6474735	60	True				
ANR	6475067	Statement	src	131:25:2052:2054	6474735	61	True				
ANR	6475068	Statement	","	131:28:2055:2055	6474735	62	True				
ANR	6475069	Statement	samples	131:30:2057:2063	6474735	63	True				
ANR	6475070	Statement	","	131:37:2064:2064	6474735	64	True				
ANR	6475071	Statement	n	131:39:2066:2066	6474735	65	True				
ANR	6475072	Statement	","	131:40:2067:2067	6474735	66	True				
ANR	6475073	Statement	8	131:42:2069:2069	6474735	67	True				
ANR	6475074	Statement	","	131:43:2070:2070	6474735	68	True				
ANR	6475075	Statement	0	131:45:2072:2072	6474735	69	True				
ANR	6475076	Statement	)	131:46:2073:2073	6474735	70	True				
ANR	6475077	BreakStatement	break ;	133:8:2084:2089	6474735	71	True				
ANR	6475078	Label	case CODEC_ID_PCM_U24LE :	135:4:2096:2119	6474735	72	True				
ANR	6475079	Identifier	CODEC_ID_PCM_U24LE		6474735	0					
ANR	6475080	Statement	DECODE	137:8:2130:2135	6474735	73	True				
ANR	6475081	Statement	(	137:14:2136:2136	6474735	74	True				
ANR	6475082	Statement	32	137:15:2137:2138	6474735	75	True				
ANR	6475083	Statement	","	137:17:2139:2139	6474735	76	True				
ANR	6475084	Statement	le24	137:19:2141:2144	6474735	77	True				
ANR	6475085	Statement	","	137:23:2145:2145	6474735	78	True				
ANR	6475086	Statement	src	137:25:2147:2149	6474735	79	True				
ANR	6475087	Statement	","	137:28:2150:2150	6474735	80	True				
ANR	6475088	Statement	samples	137:30:2152:2158	6474735	81	True				
ANR	6475089	Statement	","	137:37:2159:2159	6474735	82	True				
ANR	6475090	Statement	n	137:39:2161:2161	6474735	83	True				
ANR	6475091	Statement	","	137:40:2162:2162	6474735	84	True				
ANR	6475092	Statement	8	137:42:2164:2164	6474735	85	True				
ANR	6475093	Statement	","	137:43:2165:2165	6474735	86	True				
ANR	6475094	Statement	0x800000	137:45:2167:2174	6474735	87	True				
ANR	6475095	Statement	)	137:53:2175:2175	6474735	88	True				
ANR	6475096	BreakStatement	break ;	139:8:2186:2191	6474735	89	True				
ANR	6475097	Label	case CODEC_ID_PCM_U24BE :	141:4:2198:2221	6474735	90	True				
ANR	6475098	Identifier	CODEC_ID_PCM_U24BE		6474735	0					
ANR	6475099	Statement	DECODE	143:8:2232:2237	6474735	91	True				
ANR	6475100	Statement	(	143:14:2238:2238	6474735	92	True				
ANR	6475101	Statement	32	143:15:2239:2240	6474735	93	True				
ANR	6475102	Statement	","	143:17:2241:2241	6474735	94	True				
ANR	6475103	Statement	be24	143:19:2243:2246	6474735	95	True				
ANR	6475104	Statement	","	143:23:2247:2247	6474735	96	True				
ANR	6475105	Statement	src	143:25:2249:2251	6474735	97	True				
ANR	6475106	Statement	","	143:28:2252:2252	6474735	98	True				
ANR	6475107	Statement	samples	143:30:2254:2260	6474735	99	True				
ANR	6475108	Statement	","	143:37:2261:2261	6474735	100	True				
ANR	6475109	Statement	n	143:39:2263:2263	6474735	101	True				
ANR	6475110	Statement	","	143:40:2264:2264	6474735	102	True				
ANR	6475111	Statement	8	143:42:2266:2266	6474735	103	True				
ANR	6475112	Statement	","	143:43:2267:2267	6474735	104	True				
ANR	6475113	Statement	0x800000	143:45:2269:2276	6474735	105	True				
ANR	6475114	Statement	)	143:53:2277:2277	6474735	106	True				
ANR	6475115	BreakStatement	break ;	145:8:2288:2293	6474735	107	True				
ANR	6475116	Label	case CODEC_ID_PCM_S24DAUD :	147:4:2300:2325	6474735	108	True				
ANR	6475117	Identifier	CODEC_ID_PCM_S24DAUD		6474735	0					
ANR	6475118	ForStatement	for ( ; n > 0 ; n -- )		6474735	109					
ANR	6475119	Condition	n > 0	149:13:2341:2343	6474735	0	True				
ANR	6475120	RelationalExpression	n > 0		6474735	0		>			
ANR	6475121	Identifier	n		6474735	0					
ANR	6475122	PrimaryExpression	0		6474735	1					
ANR	6475123	PostIncDecOperationExpression	n --	149:17:2345:2347	6474735	1	True				
ANR	6475124	Identifier	n		6474735	0					
ANR	6475125	IncDec	--		6474735	1					
ANR	6475126	CompoundStatement		145:10:2207:2245	6474735	2					
ANR	6475127	IdentifierDeclStatement	uint32_t v = bytestream_get_be24 ( & src ) ;	151:10:2363:2401	6474735	0	True				
ANR	6475128	IdentifierDecl	v = bytestream_get_be24 ( & src )		6474735	0					
ANR	6475129	IdentifierDeclType	uint32_t		6474735	0					
ANR	6475130	Identifier	v		6474735	1					
ANR	6475131	AssignmentExpression	v = bytestream_get_be24 ( & src )		6474735	2		=			
ANR	6475132	Identifier	v		6474735	0					
ANR	6475133	CallExpression	bytestream_get_be24 ( & src )		6474735	1					
ANR	6475134	Callee	bytestream_get_be24		6474735	0					
ANR	6475135	Identifier	bytestream_get_be24		6474735	0					
ANR	6475136	ArgumentList	& src		6474735	1					
ANR	6475137	Argument	& src		6474735	0					
ANR	6475138	UnaryOperationExpression	& src		6474735	0					
ANR	6475139	UnaryOperator	&		6474735	0					
ANR	6475140	Identifier	src		6474735	1					
ANR	6475141	ExpressionStatement	v >>= 4	153:10:2414:2421	6474735	1	True				
ANR	6475142	AssignmentExpression	v >>= 4		6474735	0		>>=			
ANR	6475143	Identifier	v		6474735	0					
ANR	6475144	PrimaryExpression	4		6474735	1					
ANR	6475145	ExpressionStatement	"AV_WN16A ( samples , av_reverse [ ( v >> 8 ) & 0xff ] + ( av_reverse [ v & 0xff ] << 8 ) )"	155:10:2457:2561	6474735	2	True				
ANR	6475146	CallExpression	"AV_WN16A ( samples , av_reverse [ ( v >> 8 ) & 0xff ] + ( av_reverse [ v & 0xff ] << 8 ) )"		6474735	0					
ANR	6475147	Callee	AV_WN16A		6474735	0					
ANR	6475148	Identifier	AV_WN16A		6474735	0					
ANR	6475149	ArgumentList	samples		6474735	1					
ANR	6475150	Argument	samples		6474735	0					
ANR	6475151	Identifier	samples		6474735	0					
ANR	6475152	Argument	av_reverse [ ( v >> 8 ) & 0xff ] + ( av_reverse [ v & 0xff ] << 8 )		6474735	1					
ANR	6475153	AdditiveExpression	av_reverse [ ( v >> 8 ) & 0xff ] + ( av_reverse [ v & 0xff ] << 8 )		6474735	0		+			
ANR	6475154	ArrayIndexing	av_reverse [ ( v >> 8 ) & 0xff ]		6474735	0					
ANR	6475155	Identifier	av_reverse		6474735	0					
ANR	6475156	BitAndExpression	( v >> 8 ) & 0xff		6474735	1		&			
ANR	6475157	ShiftExpression	v >> 8		6474735	0		>>			
ANR	6475158	Identifier	v		6474735	0					
ANR	6475159	PrimaryExpression	8		6474735	1					
ANR	6475160	PrimaryExpression	0xff		6474735	1					
ANR	6475161	ShiftExpression	av_reverse [ v & 0xff ] << 8		6474735	1		<<			
ANR	6475162	ArrayIndexing	av_reverse [ v & 0xff ]		6474735	0					
ANR	6475163	Identifier	av_reverse		6474735	0					
ANR	6475164	BitAndExpression	v & 0xff		6474735	1		&			
ANR	6475165	Identifier	v		6474735	0					
ANR	6475166	PrimaryExpression	0xff		6474735	1					
ANR	6475167	PrimaryExpression	8		6474735	1					
ANR	6475168	ExpressionStatement	samples += 2	159:10:2574:2586	6474735	3	True				
ANR	6475169	AssignmentExpression	samples += 2		6474735	0		+=			
ANR	6475170	Identifier	samples		6474735	0					
ANR	6475171	PrimaryExpression	2		6474735	1					
ANR	6475172	BreakStatement	break ;	163:8:2608:2613	6474735	110	True				
ANR	6475173	Label	case CODEC_ID_PCM_S16LE_PLANAR :	165:4:2620:2650	6474735	111	True				
ANR	6475174	Identifier	CODEC_ID_PCM_S16LE_PLANAR		6474735	0					
ANR	6475175	ExpressionStatement	n /= avctx -> channels	167:8:2661:2681	6474735	112	True				
ANR	6475176	AssignmentExpression	n /= avctx -> channels		6474735	0		/=			
ANR	6475177	Identifier	n		6474735	0					
ANR	6475178	PtrMemberAccess	avctx -> channels		6474735	1					
ANR	6475179	Identifier	avctx		6474735	0					
ANR	6475180	Identifier	channels		6474735	1					
ANR	6475181	ForStatement	for ( c = 0 ; c < avctx -> channels ; c ++ )		6474735	113					
ANR	6475182	ForInit	c = 0 ;	169:12:2696:2699	6474735	0	True				
ANR	6475183	AssignmentExpression	c = 0		6474735	0		=			
ANR	6475184	Identifier	c		6474735	0					
ANR	6475185	PrimaryExpression	0		6474735	1					
ANR	6475186	Condition	c < avctx -> channels	169:16:2700:2716	6474735	1	True				
ANR	6475187	RelationalExpression	c < avctx -> channels		6474735	0		<			
ANR	6475188	Identifier	c		6474735	0					
ANR	6475189	PtrMemberAccess	avctx -> channels		6474735	1					
ANR	6475190	Identifier	avctx		6474735	0					
ANR	6475191	Identifier	channels		6474735	1					
ANR	6475192	PostIncDecOperationExpression	c ++	169:34:2718:2720	6474735	2	True				
ANR	6475193	Identifier	c		6474735	0					
ANR	6475194	IncDec	++		6474735	1					
ANR	6475195	ExpressionStatement	src2 [ c ] = & src [ c * n * 2 ]	171:12:2736:2757	6474735	3	True				
ANR	6475196	AssignmentExpression	src2 [ c ] = & src [ c * n * 2 ]		6474735	0		=			
ANR	6475197	ArrayIndexing	src2 [ c ]		6474735	0					
ANR	6475198	Identifier	src2		6474735	0					
ANR	6475199	Identifier	c		6474735	1					
ANR	6475200	UnaryOperationExpression	& src [ c * n * 2 ]		6474735	1					
ANR	6475201	UnaryOperator	&		6474735	0					
ANR	6475202	ArrayIndexing	src [ c * n * 2 ]		6474735	1					
ANR	6475203	Identifier	src		6474735	0					
ANR	6475204	MultiplicativeExpression	c * n * 2		6474735	1		*			
ANR	6475205	Identifier	c		6474735	0					
ANR	6475206	MultiplicativeExpression	n * 2		6474735	1		*			
ANR	6475207	Identifier	n		6474735	0					
ANR	6475208	PrimaryExpression	2		6474735	1					
ANR	6475209	ForStatement	for ( ; n > 0 ; n -- )		6474735	114					
ANR	6475210	Condition	n > 0	173:13:2773:2775	6474735	0	True				
ANR	6475211	RelationalExpression	n > 0		6474735	0		>			
ANR	6475212	Identifier	n		6474735	0					
ANR	6475213	PrimaryExpression	0		6474735	1					
ANR	6475214	PostIncDecOperationExpression	n --	173:17:2777:2779	6474735	1	True				
ANR	6475215	Identifier	n		6474735	0					
ANR	6475216	IncDec	--		6474735	1					
ANR	6475217	ForStatement	for ( c = 0 ; c < avctx -> channels ; c ++ )		6474735	2					
ANR	6475218	ForInit	c = 0 ;	175:16:2799:2802	6474735	0	True				
ANR	6475219	AssignmentExpression	c = 0		6474735	0		=			
ANR	6475220	Identifier	c		6474735	0					
ANR	6475221	PrimaryExpression	0		6474735	1					
ANR	6475222	Condition	c < avctx -> channels	175:20:2803:2819	6474735	1	True				
ANR	6475223	RelationalExpression	c < avctx -> channels		6474735	0		<			
ANR	6475224	Identifier	c		6474735	0					
ANR	6475225	PtrMemberAccess	avctx -> channels		6474735	1					
ANR	6475226	Identifier	avctx		6474735	0					
ANR	6475227	Identifier	channels		6474735	1					
ANR	6475228	PostIncDecOperationExpression	c ++	175:38:2821:2823	6474735	2	True				
ANR	6475229	Identifier	c		6474735	0					
ANR	6475230	IncDec	++		6474735	1					
ANR	6475231	CompoundStatement		169:43:2670:2670	6474735	3					
ANR	6475232	ExpressionStatement	"AV_WN16A ( samples , bytestream_get_le16 ( & src2 [ c ] ) )"	177:16:2845:2893	6474735	0	True				
ANR	6475233	CallExpression	"AV_WN16A ( samples , bytestream_get_le16 ( & src2 [ c ] ) )"		6474735	0					
ANR	6475234	Callee	AV_WN16A		6474735	0					
ANR	6475235	Identifier	AV_WN16A		6474735	0					
ANR	6475236	ArgumentList	samples		6474735	1					
ANR	6475237	Argument	samples		6474735	0					
ANR	6475238	Identifier	samples		6474735	0					
ANR	6475239	Argument	bytestream_get_le16 ( & src2 [ c ] )		6474735	1					
ANR	6475240	CallExpression	bytestream_get_le16 ( & src2 [ c ] )		6474735	0					
ANR	6475241	Callee	bytestream_get_le16		6474735	0					
ANR	6475242	Identifier	bytestream_get_le16		6474735	0					
ANR	6475243	ArgumentList	& src2 [ c ]		6474735	1					
ANR	6475244	Argument	& src2 [ c ]		6474735	0					
ANR	6475245	UnaryOperationExpression	& src2 [ c ]		6474735	0					
ANR	6475246	UnaryOperator	&		6474735	0					
ANR	6475247	ArrayIndexing	src2 [ c ]		6474735	1					
ANR	6475248	Identifier	src2		6474735	0					
ANR	6475249	Identifier	c		6474735	1					
ANR	6475250	ExpressionStatement	samples += 2	179:16:2912:2924	6474735	1	True				
ANR	6475251	AssignmentExpression	samples += 2		6474735	0		+=			
ANR	6475252	Identifier	samples		6474735	0					
ANR	6475253	PrimaryExpression	2		6474735	1					
ANR	6475254	ExpressionStatement	src = src2 [ avctx -> channels - 1 ]	183:8:2950:2979	6474735	115	True				
ANR	6475255	AssignmentExpression	src = src2 [ avctx -> channels - 1 ]		6474735	0		=			
ANR	6475256	Identifier	src		6474735	0					
ANR	6475257	ArrayIndexing	src2 [ avctx -> channels - 1 ]		6474735	1					
ANR	6475258	Identifier	src2		6474735	0					
ANR	6475259	AdditiveExpression	avctx -> channels - 1		6474735	1		-			
ANR	6475260	PtrMemberAccess	avctx -> channels		6474735	0					
ANR	6475261	Identifier	avctx		6474735	0					
ANR	6475262	Identifier	channels		6474735	1					
ANR	6475263	PrimaryExpression	1		6474735	1					
ANR	6475264	BreakStatement	break ;	185:8:2990:2995	6474735	116	True				
ANR	6475265	Label	case CODEC_ID_PCM_U16LE :	187:4:3002:3025	6474735	117	True				
ANR	6475266	Identifier	CODEC_ID_PCM_U16LE		6474735	0					
ANR	6475267	Statement	DECODE	189:8:3036:3041	6474735	118	True				
ANR	6475268	Statement	(	189:14:3042:3042	6474735	119	True				
ANR	6475269	Statement	16	189:15:3043:3044	6474735	120	True				
ANR	6475270	Statement	","	189:17:3045:3045	6474735	121	True				
ANR	6475271	Statement	le16	189:19:3047:3050	6474735	122	True				
ANR	6475272	Statement	","	189:23:3051:3051	6474735	123	True				
ANR	6475273	Statement	src	189:25:3053:3055	6474735	124	True				
ANR	6475274	Statement	","	189:28:3056:3056	6474735	125	True				
ANR	6475275	Statement	samples	189:30:3058:3064	6474735	126	True				
ANR	6475276	Statement	","	189:37:3065:3065	6474735	127	True				
ANR	6475277	Statement	n	189:39:3067:3067	6474735	128	True				
ANR	6475278	Statement	","	189:40:3068:3068	6474735	129	True				
ANR	6475279	Statement	0	189:42:3070:3070	6474735	130	True				
ANR	6475280	Statement	","	189:43:3071:3071	6474735	131	True				
ANR	6475281	Statement	0x8000	189:45:3073:3078	6474735	132	True				
ANR	6475282	Statement	)	189:51:3079:3079	6474735	133	True				
ANR	6475283	BreakStatement	break ;	191:8:3090:3095	6474735	134	True				
ANR	6475284	Label	case CODEC_ID_PCM_U16BE :	193:4:3102:3125	6474735	135	True				
ANR	6475285	Identifier	CODEC_ID_PCM_U16BE		6474735	0					
ANR	6475286	Statement	DECODE	195:8:3136:3141	6474735	136	True				
ANR	6475287	Statement	(	195:14:3142:3142	6474735	137	True				
ANR	6475288	Statement	16	195:15:3143:3144	6474735	138	True				
ANR	6475289	Statement	","	195:17:3145:3145	6474735	139	True				
ANR	6475290	Statement	be16	195:19:3147:3150	6474735	140	True				
ANR	6475291	Statement	","	195:23:3151:3151	6474735	141	True				
ANR	6475292	Statement	src	195:25:3153:3155	6474735	142	True				
ANR	6475293	Statement	","	195:28:3156:3156	6474735	143	True				
ANR	6475294	Statement	samples	195:30:3158:3164	6474735	144	True				
ANR	6475295	Statement	","	195:37:3165:3165	6474735	145	True				
ANR	6475296	Statement	n	195:39:3167:3167	6474735	146	True				
ANR	6475297	Statement	","	195:40:3168:3168	6474735	147	True				
ANR	6475298	Statement	0	195:42:3170:3170	6474735	148	True				
ANR	6475299	Statement	","	195:43:3171:3171	6474735	149	True				
ANR	6475300	Statement	0x8000	195:45:3173:3178	6474735	150	True				
ANR	6475301	Statement	)	195:51:3179:3179	6474735	151	True				
ANR	6475302	BreakStatement	break ;	197:8:3190:3195	6474735	152	True				
ANR	6475303	Label	case CODEC_ID_PCM_S8 :	199:4:3202:3222	6474735	153	True				
ANR	6475304	Identifier	CODEC_ID_PCM_S8		6474735	0					
ANR	6475305	ForStatement	for ( ; n > 0 ; n -- )		6474735	154					
ANR	6475306	Condition	n > 0	201:13:3238:3240	6474735	0	True				
ANR	6475307	RelationalExpression	n > 0		6474735	0		>			
ANR	6475308	Identifier	n		6474735	0					
ANR	6475309	PrimaryExpression	0		6474735	1					
ANR	6475310	PostIncDecOperationExpression	n --	201:17:3242:3244	6474735	1	True				
ANR	6475311	Identifier	n		6474735	0					
ANR	6475312	IncDec	--		6474735	1					
ANR	6475313	CompoundStatement		195:22:3091:3091	6474735	2					
ANR	6475314	ExpressionStatement	* samples ++ = * src ++ + 128	203:12:3262:3287	6474735	0	True				
ANR	6475315	AssignmentExpression	* samples ++ = * src ++ + 128		6474735	0		=			
ANR	6475316	UnaryOperationExpression	* samples ++		6474735	0					
ANR	6475317	UnaryOperator	*		6474735	0					
ANR	6475318	PostIncDecOperationExpression	samples ++		6474735	1					
ANR	6475319	Identifier	samples		6474735	0					
ANR	6475320	IncDec	++		6474735	1					
ANR	6475321	AdditiveExpression	* src ++ + 128		6474735	1		+			
ANR	6475322	UnaryOperationExpression	* src ++		6474735	0					
ANR	6475323	UnaryOperator	*		6474735	0					
ANR	6475324	PostIncDecOperationExpression	src ++		6474735	1					
ANR	6475325	Identifier	src		6474735	0					
ANR	6475326	IncDec	++		6474735	1					
ANR	6475327	PrimaryExpression	128		6474735	1					
ANR	6475328	BreakStatement	break ;	207:8:3309:3314	6474735	155	True				
ANR	6475329	Label	case CODEC_ID_PCM_F64LE :	211:4:3341:3364	6474735	156	True				
ANR	6475330	Identifier	CODEC_ID_PCM_F64LE		6474735	0					
ANR	6475331	Statement	DECODE	213:8:3375:3380	6474735	157	True				
ANR	6475332	Statement	(	213:14:3381:3381	6474735	158	True				
ANR	6475333	Statement	64	213:15:3382:3383	6474735	159	True				
ANR	6475334	Statement	","	213:17:3384:3384	6474735	160	True				
ANR	6475335	Statement	le64	213:19:3386:3389	6474735	161	True				
ANR	6475336	Statement	","	213:23:3390:3390	6474735	162	True				
ANR	6475337	Statement	src	213:25:3392:3394	6474735	163	True				
ANR	6475338	Statement	","	213:28:3395:3395	6474735	164	True				
ANR	6475339	Statement	samples	213:30:3397:3403	6474735	165	True				
ANR	6475340	Statement	","	213:37:3404:3404	6474735	166	True				
ANR	6475341	Statement	n	213:39:3406:3406	6474735	167	True				
ANR	6475342	Statement	","	213:40:3407:3407	6474735	168	True				
ANR	6475343	Statement	0	213:42:3409:3409	6474735	169	True				
ANR	6475344	Statement	","	213:43:3410:3410	6474735	170	True				
ANR	6475345	Statement	0	213:45:3412:3412	6474735	171	True				
ANR	6475346	Statement	)	213:46:3413:3413	6474735	172	True				
ANR	6475347	BreakStatement	break ;	215:8:3424:3429	6474735	173	True				
ANR	6475348	Label	case CODEC_ID_PCM_S32LE :	217:4:3436:3459	6474735	174	True				
ANR	6475349	Identifier	CODEC_ID_PCM_S32LE		6474735	0					
ANR	6475350	Label	case CODEC_ID_PCM_F32LE :	219:4:3466:3489	6474735	175	True				
ANR	6475351	Identifier	CODEC_ID_PCM_F32LE		6474735	0					
ANR	6475352	Statement	DECODE	221:8:3500:3505	6474735	176	True				
ANR	6475353	Statement	(	221:14:3506:3506	6474735	177	True				
ANR	6475354	Statement	32	221:15:3507:3508	6474735	178	True				
ANR	6475355	Statement	","	221:17:3509:3509	6474735	179	True				
ANR	6475356	Statement	le32	221:19:3511:3514	6474735	180	True				
ANR	6475357	Statement	","	221:23:3515:3515	6474735	181	True				
ANR	6475358	Statement	src	221:25:3517:3519	6474735	182	True				
ANR	6475359	Statement	","	221:28:3520:3520	6474735	183	True				
ANR	6475360	Statement	samples	221:30:3522:3528	6474735	184	True				
ANR	6475361	Statement	","	221:37:3529:3529	6474735	185	True				
ANR	6475362	Statement	n	221:39:3531:3531	6474735	186	True				
ANR	6475363	Statement	","	221:40:3532:3532	6474735	187	True				
ANR	6475364	Statement	0	221:42:3534:3534	6474735	188	True				
ANR	6475365	Statement	","	221:43:3535:3535	6474735	189	True				
ANR	6475366	Statement	0	221:45:3537:3537	6474735	190	True				
ANR	6475367	Statement	)	221:46:3538:3538	6474735	191	True				
ANR	6475368	BreakStatement	break ;	223:8:3549:3554	6474735	192	True				
ANR	6475369	Label	case CODEC_ID_PCM_S16LE :	225:4:3561:3584	6474735	193	True				
ANR	6475370	Identifier	CODEC_ID_PCM_S16LE		6474735	0					
ANR	6475371	Statement	DECODE	227:8:3595:3600	6474735	194	True				
ANR	6475372	Statement	(	227:14:3601:3601	6474735	195	True				
ANR	6475373	Statement	16	227:15:3602:3603	6474735	196	True				
ANR	6475374	Statement	","	227:17:3604:3604	6474735	197	True				
ANR	6475375	Statement	le16	227:19:3606:3609	6474735	198	True				
ANR	6475376	Statement	","	227:23:3610:3610	6474735	199	True				
ANR	6475377	Statement	src	227:25:3612:3614	6474735	200	True				
ANR	6475378	Statement	","	227:28:3615:3615	6474735	201	True				
ANR	6475379	Statement	samples	227:30:3617:3623	6474735	202	True				
ANR	6475380	Statement	","	227:37:3624:3624	6474735	203	True				
ANR	6475381	Statement	n	227:39:3626:3626	6474735	204	True				
ANR	6475382	Statement	","	227:40:3627:3627	6474735	205	True				
ANR	6475383	Statement	0	227:42:3629:3629	6474735	206	True				
ANR	6475384	Statement	","	227:43:3630:3630	6474735	207	True				
ANR	6475385	Statement	0	227:45:3632:3632	6474735	208	True				
ANR	6475386	Statement	)	227:46:3633:3633	6474735	209	True				
ANR	6475387	BreakStatement	break ;	229:8:3644:3649	6474735	210	True				
ANR	6475388	Label	case CODEC_ID_PCM_F64BE :	231:4:3656:3679	6474735	211	True				
ANR	6475389	Identifier	CODEC_ID_PCM_F64BE		6474735	0					
ANR	6475390	Label	case CODEC_ID_PCM_F32BE :	233:4:3686:3709	6474735	212	True				
ANR	6475391	Identifier	CODEC_ID_PCM_F32BE		6474735	0					
ANR	6475392	Label	case CODEC_ID_PCM_S32BE :	235:4:3716:3739	6474735	213	True				
ANR	6475393	Identifier	CODEC_ID_PCM_S32BE		6474735	0					
ANR	6475394	Label	case CODEC_ID_PCM_S16BE :	237:4:3746:3769	6474735	214	True				
ANR	6475395	Identifier	CODEC_ID_PCM_S16BE		6474735	0					
ANR	6475396	Label	case CODEC_ID_PCM_U8 :	271:4:4247:4267	6474735	215	True				
ANR	6475397	Identifier	CODEC_ID_PCM_U8		6474735	0					
ANR	6475398	ExpressionStatement	"memcpy ( samples , src , n * sample_size )"	273:8:4278:4313	6474735	216	True				
ANR	6475399	CallExpression	"memcpy ( samples , src , n * sample_size )"		6474735	0					
ANR	6475400	Callee	memcpy		6474735	0					
ANR	6475401	Identifier	memcpy		6474735	0					
ANR	6475402	ArgumentList	samples		6474735	1					
ANR	6475403	Argument	samples		6474735	0					
ANR	6475404	Identifier	samples		6474735	0					
ANR	6475405	Argument	src		6474735	1					
ANR	6475406	Identifier	src		6474735	0					
ANR	6475407	Argument	n * sample_size		6474735	2					
ANR	6475408	MultiplicativeExpression	n * sample_size		6474735	0		*			
ANR	6475409	Identifier	n		6474735	0					
ANR	6475410	Identifier	sample_size		6474735	1					
ANR	6475411	ExpressionStatement	src += n * sample_size	275:8:4324:4344	6474735	217	True				
ANR	6475412	AssignmentExpression	src += n * sample_size		6474735	0		+=			
ANR	6475413	Identifier	src		6474735	0					
ANR	6475414	MultiplicativeExpression	n * sample_size		6474735	1		*			
ANR	6475415	Identifier	n		6474735	0					
ANR	6475416	Identifier	sample_size		6474735	1					
ANR	6475417	ExpressionStatement	samples += n * sample_size	277:8:4355:4381	6474735	218	True				
ANR	6475418	AssignmentExpression	samples += n * sample_size		6474735	0		+=			
ANR	6475419	Identifier	samples		6474735	0					
ANR	6475420	MultiplicativeExpression	n * sample_size		6474735	1		*			
ANR	6475421	Identifier	n		6474735	0					
ANR	6475422	Identifier	sample_size		6474735	1					
ANR	6475423	BreakStatement	break ;	279:8:4392:4397	6474735	219	True				
ANR	6475424	Label	case CODEC_ID_PCM_ZORK :	281:4:4404:4426	6474735	220	True				
ANR	6475425	Identifier	CODEC_ID_PCM_ZORK		6474735	0					
ANR	6475426	ForStatement	for ( ; n > 0 ; n -- )		6474735	221					
ANR	6475427	Condition	n > 0	283:13:4442:4444	6474735	0	True				
ANR	6475428	RelationalExpression	n > 0		6474735	0		>			
ANR	6475429	Identifier	n		6474735	0					
ANR	6475430	PrimaryExpression	0		6474735	1					
ANR	6475431	PostIncDecOperationExpression	n --	283:17:4446:4448	6474735	1	True				
ANR	6475432	Identifier	n		6474735	0					
ANR	6475433	IncDec	--		6474735	1					
ANR	6475434	CompoundStatement		279:12:4310:4323	6474735	2					
ANR	6475435	IdentifierDeclStatement	int x = * src ++ ;	285:12:4466:4479	6474735	0	True				
ANR	6475436	IdentifierDecl	x = * src ++		6474735	0					
ANR	6475437	IdentifierDeclType	int		6474735	0					
ANR	6475438	Identifier	x		6474735	1					
ANR	6475439	AssignmentExpression	x = * src ++		6474735	2		=			
ANR	6475440	Identifier	x		6474735	0					
ANR	6475441	UnaryOperationExpression	* src ++		6474735	1					
ANR	6475442	UnaryOperator	*		6474735	0					
ANR	6475443	PostIncDecOperationExpression	src ++		6474735	1					
ANR	6475444	Identifier	src		6474735	0					
ANR	6475445	IncDec	++		6474735	1					
ANR	6475446	IfStatement	if ( x & 128 )		6474735	1					
ANR	6475447	Condition	x & 128	287:15:4497:4501	6474735	0	True				
ANR	6475448	BitAndExpression	x & 128		6474735	0		&			
ANR	6475449	Identifier	x		6474735	0					
ANR	6475450	PrimaryExpression	128		6474735	1					
ANR	6475451	ExpressionStatement	x -= 128	287:22:4504:4511	6474735	1	True				
ANR	6475452	AssignmentExpression	x -= 128		6474735	0		-=			
ANR	6475453	Identifier	x		6474735	0					
ANR	6475454	PrimaryExpression	128		6474735	1					
ANR	6475455	ElseStatement	else		6474735	0					
ANR	6475456	ExpressionStatement	x = - x	289:22:4536:4542	6474735	0	True				
ANR	6475457	AssignmentExpression	x = - x		6474735	0		=			
ANR	6475458	Identifier	x		6474735	0					
ANR	6475459	UnaryOperationExpression	- x		6474735	1					
ANR	6475460	UnaryOperator	-		6474735	0					
ANR	6475461	Identifier	x		6474735	1					
ANR	6475462	ExpressionStatement	"AV_WN16A ( samples , x << 8 )"	291:12:4557:4582	6474735	2	True				
ANR	6475463	CallExpression	"AV_WN16A ( samples , x << 8 )"		6474735	0					
ANR	6475464	Callee	AV_WN16A		6474735	0					
ANR	6475465	Identifier	AV_WN16A		6474735	0					
ANR	6475466	ArgumentList	samples		6474735	1					
ANR	6475467	Argument	samples		6474735	0					
ANR	6475468	Identifier	samples		6474735	0					
ANR	6475469	Argument	x << 8		6474735	1					
ANR	6475470	ShiftExpression	x << 8		6474735	0		<<			
ANR	6475471	Identifier	x		6474735	0					
ANR	6475472	PrimaryExpression	8		6474735	1					
ANR	6475473	ExpressionStatement	samples += 2	293:12:4597:4609	6474735	3	True				
ANR	6475474	AssignmentExpression	samples += 2		6474735	0		+=			
ANR	6475475	Identifier	samples		6474735	0					
ANR	6475476	PrimaryExpression	2		6474735	1					
ANR	6475477	BreakStatement	break ;	297:8:4631:4636	6474735	222	True				
ANR	6475478	Label	case CODEC_ID_PCM_ALAW :	299:4:4643:4665	6474735	223	True				
ANR	6475479	Identifier	CODEC_ID_PCM_ALAW		6474735	0					
ANR	6475480	Label	case CODEC_ID_PCM_MULAW :	301:4:4672:4695	6474735	224	True				
ANR	6475481	Identifier	CODEC_ID_PCM_MULAW		6474735	0					
ANR	6475482	ForStatement	for ( ; n > 0 ; n -- )		6474735	225					
ANR	6475483	Condition	n > 0	303:13:4711:4713	6474735	0	True				
ANR	6475484	RelationalExpression	n > 0		6474735	0		>			
ANR	6475485	Identifier	n		6474735	0					
ANR	6475486	PrimaryExpression	0		6474735	1					
ANR	6475487	PostIncDecOperationExpression	n --	303:17:4715:4717	6474735	1	True				
ANR	6475488	Identifier	n		6474735	0					
ANR	6475489	IncDec	--		6474735	1					
ANR	6475490	CompoundStatement		297:22:4564:4564	6474735	2					
ANR	6475491	ExpressionStatement	"AV_WN16A ( samples , s -> table [ * src ++ ] )"	305:12:4735:4770	6474735	0	True				
ANR	6475492	CallExpression	"AV_WN16A ( samples , s -> table [ * src ++ ] )"		6474735	0					
ANR	6475493	Callee	AV_WN16A		6474735	0					
ANR	6475494	Identifier	AV_WN16A		6474735	0					
ANR	6475495	ArgumentList	samples		6474735	1					
ANR	6475496	Argument	samples		6474735	0					
ANR	6475497	Identifier	samples		6474735	0					
ANR	6475498	Argument	s -> table [ * src ++ ]		6474735	1					
ANR	6475499	ArrayIndexing	s -> table [ * src ++ ]		6474735	0					
ANR	6475500	PtrMemberAccess	s -> table		6474735	0					
ANR	6475501	Identifier	s		6474735	0					
ANR	6475502	Identifier	table		6474735	1					
ANR	6475503	UnaryOperationExpression	* src ++		6474735	1					
ANR	6475504	UnaryOperator	*		6474735	0					
ANR	6475505	PostIncDecOperationExpression	src ++		6474735	1					
ANR	6475506	Identifier	src		6474735	0					
ANR	6475507	IncDec	++		6474735	1					
ANR	6475508	ExpressionStatement	samples += 2	307:12:4785:4797	6474735	1	True				
ANR	6475509	AssignmentExpression	samples += 2		6474735	0		+=			
ANR	6475510	Identifier	samples		6474735	0					
ANR	6475511	PrimaryExpression	2		6474735	1					
ANR	6475512	BreakStatement	break ;	311:8:4819:4824	6474735	226	True				
ANR	6475513	Label	case CODEC_ID_PCM_DVD :	313:4:4831:4852	6474735	227	True				
ANR	6475514	Identifier	CODEC_ID_PCM_DVD		6474735	0					
ANR	6475515	ExpressionStatement	dst_int32_t = data	315:8:4863:4881	6474735	228	True				
ANR	6475516	AssignmentExpression	dst_int32_t = data		6474735	0		=			
ANR	6475517	Identifier	dst_int32_t		6474735	0					
ANR	6475518	Identifier	data		6474735	1					
ANR	6475519	ExpressionStatement	n /= avctx -> channels	317:8:4892:4912	6474735	229	True				
ANR	6475520	AssignmentExpression	n /= avctx -> channels		6474735	0		/=			
ANR	6475521	Identifier	n		6474735	0					
ANR	6475522	PtrMemberAccess	avctx -> channels		6474735	1					
ANR	6475523	Identifier	avctx		6474735	0					
ANR	6475524	Identifier	channels		6474735	1					
ANR	6475525	SwitchStatement	switch ( avctx -> bits_per_coded_sample )		6474735	230					
ANR	6475526	Condition	avctx -> bits_per_coded_sample	319:16:4931:4958	6474735	0	True				
ANR	6475527	PtrMemberAccess	avctx -> bits_per_coded_sample		6474735	0					
ANR	6475528	Identifier	avctx		6474735	0					
ANR	6475529	Identifier	bits_per_coded_sample		6474735	1					
ANR	6475530	CompoundStatement		313:46:4805:4805	6474735	1					
ANR	6475531	Label	case 20 :	321:8:4972:4979	6474735	0	True				
ANR	6475532	WhileStatement	while ( n -- )		6474735	1					
ANR	6475533	Condition	n --	323:19:5001:5003	6474735	0	True				
ANR	6475534	PostIncDecOperationExpression	n --		6474735	0					
ANR	6475535	Identifier	n		6474735	0					
ANR	6475536	IncDec	--		6474735	1					
ANR	6475537	CompoundStatement		317:24:4850:4850	6474735	1					
ANR	6475538	ExpressionStatement	c = avctx -> channels	325:16:5025:5044	6474735	0	True				
ANR	6475539	AssignmentExpression	c = avctx -> channels		6474735	0		=			
ANR	6475540	Identifier	c		6474735	0					
ANR	6475541	PtrMemberAccess	avctx -> channels		6474735	1					
ANR	6475542	Identifier	avctx		6474735	0					
ANR	6475543	Identifier	channels		6474735	1					
ANR	6475544	ExpressionStatement	src8 = src + 4 * c	327:16:5063:5079	6474735	1	True				
ANR	6475545	AssignmentExpression	src8 = src + 4 * c		6474735	0		=			
ANR	6475546	Identifier	src8		6474735	0					
ANR	6475547	AdditiveExpression	src + 4 * c		6474735	1		+			
ANR	6475548	Identifier	src		6474735	0					
ANR	6475549	MultiplicativeExpression	4 * c		6474735	1		*			
ANR	6475550	PrimaryExpression	4		6474735	0					
ANR	6475551	Identifier	c		6474735	1					
ANR	6475552	WhileStatement	while ( c -- )		6474735	2					
ANR	6475553	Condition	c --	329:23:5105:5107	6474735	0	True				
ANR	6475554	PostIncDecOperationExpression	c --		6474735	0					
ANR	6475555	Identifier	c		6474735	0					
ANR	6475556	IncDec	--		6474735	1					
ANR	6475557	CompoundStatement		323:28:4954:4954	6474735	1					
ANR	6475558	ExpressionStatement	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 & 0xf0 ) << 8 )	331:20:5133:5208	6474735	0	True				
ANR	6475559	AssignmentExpression	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 & 0xf0 ) << 8 )		6474735	0		=			
ANR	6475560	UnaryOperationExpression	* dst_int32_t ++		6474735	0					
ANR	6475561	UnaryOperator	*		6474735	0					
ANR	6475562	PostIncDecOperationExpression	dst_int32_t ++		6474735	1					
ANR	6475563	Identifier	dst_int32_t		6474735	0					
ANR	6475564	IncDec	++		6474735	1					
ANR	6475565	AdditiveExpression	( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 & 0xf0 ) << 8 )		6474735	1		+			
ANR	6475566	ShiftExpression	bytestream_get_be16 ( & src ) << 16		6474735	0		<<			
ANR	6475567	CallExpression	bytestream_get_be16 ( & src )		6474735	0					
ANR	6475568	Callee	bytestream_get_be16		6474735	0					
ANR	6475569	Identifier	bytestream_get_be16		6474735	0					
ANR	6475570	ArgumentList	& src		6474735	1					
ANR	6475571	Argument	& src		6474735	0					
ANR	6475572	UnaryOperationExpression	& src		6474735	0					
ANR	6475573	UnaryOperator	&		6474735	0					
ANR	6475574	Identifier	src		6474735	1					
ANR	6475575	PrimaryExpression	16		6474735	1					
ANR	6475576	ShiftExpression	( * src8 & 0xf0 ) << 8		6474735	1		<<			
ANR	6475577	BitAndExpression	* src8 & 0xf0		6474735	0		&			
ANR	6475578	UnaryOperationExpression	* src8		6474735	0					
ANR	6475579	UnaryOperator	*		6474735	0					
ANR	6475580	Identifier	src8		6474735	1					
ANR	6475581	PrimaryExpression	0xf0		6474735	1					
ANR	6475582	PrimaryExpression	8		6474735	1					
ANR	6475583	ExpressionStatement	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ & 0x0f ) << 12 )	333:20:5231:5307	6474735	1	True				
ANR	6475584	AssignmentExpression	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ & 0x0f ) << 12 )		6474735	0		=			
ANR	6475585	UnaryOperationExpression	* dst_int32_t ++		6474735	0					
ANR	6475586	UnaryOperator	*		6474735	0					
ANR	6475587	PostIncDecOperationExpression	dst_int32_t ++		6474735	1					
ANR	6475588	Identifier	dst_int32_t		6474735	0					
ANR	6475589	IncDec	++		6474735	1					
ANR	6475590	AdditiveExpression	( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ & 0x0f ) << 12 )		6474735	1		+			
ANR	6475591	ShiftExpression	bytestream_get_be16 ( & src ) << 16		6474735	0		<<			
ANR	6475592	CallExpression	bytestream_get_be16 ( & src )		6474735	0					
ANR	6475593	Callee	bytestream_get_be16		6474735	0					
ANR	6475594	Identifier	bytestream_get_be16		6474735	0					
ANR	6475595	ArgumentList	& src		6474735	1					
ANR	6475596	Argument	& src		6474735	0					
ANR	6475597	UnaryOperationExpression	& src		6474735	0					
ANR	6475598	UnaryOperator	&		6474735	0					
ANR	6475599	Identifier	src		6474735	1					
ANR	6475600	PrimaryExpression	16		6474735	1					
ANR	6475601	ShiftExpression	( * src8 ++ & 0x0f ) << 12		6474735	1		<<			
ANR	6475602	BitAndExpression	* src8 ++ & 0x0f		6474735	0		&			
ANR	6475603	UnaryOperationExpression	* src8 ++		6474735	0					
ANR	6475604	UnaryOperator	*		6474735	0					
ANR	6475605	PostIncDecOperationExpression	src8 ++		6474735	1					
ANR	6475606	Identifier	src8		6474735	0					
ANR	6475607	IncDec	++		6474735	1					
ANR	6475608	PrimaryExpression	0x0f		6474735	1					
ANR	6475609	PrimaryExpression	12		6474735	1					
ANR	6475610	ExpressionStatement	src = src8	337:16:5345:5355	6474735	3	True				
ANR	6475611	AssignmentExpression	src = src8		6474735	0		=			
ANR	6475612	Identifier	src		6474735	0					
ANR	6475613	Identifier	src8		6474735	1					
ANR	6475614	BreakStatement	break ;	341:12:5385:5390	6474735	2	True				
ANR	6475615	Label	case 24 :	343:8:5401:5408	6474735	3	True				
ANR	6475616	WhileStatement	while ( n -- )		6474735	4					
ANR	6475617	Condition	n --	345:19:5430:5432	6474735	0	True				
ANR	6475618	PostIncDecOperationExpression	n --		6474735	0					
ANR	6475619	Identifier	n		6474735	0					
ANR	6475620	IncDec	--		6474735	1					
ANR	6475621	CompoundStatement		339:24:5279:5279	6474735	1					
ANR	6475622	ExpressionStatement	c = avctx -> channels	347:16:5454:5473	6474735	0	True				
ANR	6475623	AssignmentExpression	c = avctx -> channels		6474735	0		=			
ANR	6475624	Identifier	c		6474735	0					
ANR	6475625	PtrMemberAccess	avctx -> channels		6474735	1					
ANR	6475626	Identifier	avctx		6474735	0					
ANR	6475627	Identifier	channels		6474735	1					
ANR	6475628	ExpressionStatement	src8 = src + 4 * c	349:16:5492:5508	6474735	1	True				
ANR	6475629	AssignmentExpression	src8 = src + 4 * c		6474735	0		=			
ANR	6475630	Identifier	src8		6474735	0					
ANR	6475631	AdditiveExpression	src + 4 * c		6474735	1		+			
ANR	6475632	Identifier	src		6474735	0					
ANR	6475633	MultiplicativeExpression	4 * c		6474735	1		*			
ANR	6475634	PrimaryExpression	4		6474735	0					
ANR	6475635	Identifier	c		6474735	1					
ANR	6475636	WhileStatement	while ( c -- )		6474735	2					
ANR	6475637	Condition	c --	351:23:5534:5536	6474735	0	True				
ANR	6475638	PostIncDecOperationExpression	c --		6474735	0					
ANR	6475639	Identifier	c		6474735	0					
ANR	6475640	IncDec	--		6474735	1					
ANR	6475641	CompoundStatement		345:28:5383:5383	6474735	1					
ANR	6475642	ExpressionStatement	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )	353:20:5562:5631	6474735	0	True				
ANR	6475643	AssignmentExpression	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )		6474735	0		=			
ANR	6475644	UnaryOperationExpression	* dst_int32_t ++		6474735	0					
ANR	6475645	UnaryOperator	*		6474735	0					
ANR	6475646	PostIncDecOperationExpression	dst_int32_t ++		6474735	1					
ANR	6475647	Identifier	dst_int32_t		6474735	0					
ANR	6475648	IncDec	++		6474735	1					
ANR	6475649	AdditiveExpression	( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )		6474735	1		+			
ANR	6475650	ShiftExpression	bytestream_get_be16 ( & src ) << 16		6474735	0		<<			
ANR	6475651	CallExpression	bytestream_get_be16 ( & src )		6474735	0					
ANR	6475652	Callee	bytestream_get_be16		6474735	0					
ANR	6475653	Identifier	bytestream_get_be16		6474735	0					
ANR	6475654	ArgumentList	& src		6474735	1					
ANR	6475655	Argument	& src		6474735	0					
ANR	6475656	UnaryOperationExpression	& src		6474735	0					
ANR	6475657	UnaryOperator	&		6474735	0					
ANR	6475658	Identifier	src		6474735	1					
ANR	6475659	PrimaryExpression	16		6474735	1					
ANR	6475660	ShiftExpression	( * src8 ++ ) << 8		6474735	1		<<			
ANR	6475661	UnaryOperationExpression	* src8 ++		6474735	0					
ANR	6475662	UnaryOperator	*		6474735	0					
ANR	6475663	PostIncDecOperationExpression	src8 ++		6474735	1					
ANR	6475664	Identifier	src8		6474735	0					
ANR	6475665	IncDec	++		6474735	1					
ANR	6475666	PrimaryExpression	8		6474735	1					
ANR	6475667	ExpressionStatement	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )	355:20:5654:5723	6474735	1	True				
ANR	6475668	AssignmentExpression	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )		6474735	0		=			
ANR	6475669	UnaryOperationExpression	* dst_int32_t ++		6474735	0					
ANR	6475670	UnaryOperator	*		6474735	0					
ANR	6475671	PostIncDecOperationExpression	dst_int32_t ++		6474735	1					
ANR	6475672	Identifier	dst_int32_t		6474735	0					
ANR	6475673	IncDec	++		6474735	1					
ANR	6475674	AdditiveExpression	( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )		6474735	1		+			
ANR	6475675	ShiftExpression	bytestream_get_be16 ( & src ) << 16		6474735	0		<<			
ANR	6475676	CallExpression	bytestream_get_be16 ( & src )		6474735	0					
ANR	6475677	Callee	bytestream_get_be16		6474735	0					
ANR	6475678	Identifier	bytestream_get_be16		6474735	0					
ANR	6475679	ArgumentList	& src		6474735	1					
ANR	6475680	Argument	& src		6474735	0					
ANR	6475681	UnaryOperationExpression	& src		6474735	0					
ANR	6475682	UnaryOperator	&		6474735	0					
ANR	6475683	Identifier	src		6474735	1					
ANR	6475684	PrimaryExpression	16		6474735	1					
ANR	6475685	ShiftExpression	( * src8 ++ ) << 8		6474735	1		<<			
ANR	6475686	UnaryOperationExpression	* src8 ++		6474735	0					
ANR	6475687	UnaryOperator	*		6474735	0					
ANR	6475688	PostIncDecOperationExpression	src8 ++		6474735	1					
ANR	6475689	Identifier	src8		6474735	0					
ANR	6475690	IncDec	++		6474735	1					
ANR	6475691	PrimaryExpression	8		6474735	1					
ANR	6475692	ExpressionStatement	src = src8	359:16:5761:5771	6474735	3	True				
ANR	6475693	AssignmentExpression	src = src8		6474735	0		=			
ANR	6475694	Identifier	src		6474735	0					
ANR	6475695	Identifier	src8		6474735	1					
ANR	6475696	BreakStatement	break ;	363:12:5801:5806	6474735	5	True				
ANR	6475697	Label	default :	365:8:5817:5824	6474735	6	True				
ANR	6475698	Identifier	default		6474735	0					
ANR	6475699	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""PCM DVD unsupported sample depth\\n"" )"	367:12:5839:5904	6474735	7	True				
ANR	6475700	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""PCM DVD unsupported sample depth\\n"" )"		6474735	0					
ANR	6475701	Callee	av_log		6474735	0					
ANR	6475702	Identifier	av_log		6474735	0					
ANR	6475703	ArgumentList	avctx		6474735	1					
ANR	6475704	Argument	avctx		6474735	0					
ANR	6475705	Identifier	avctx		6474735	0					
ANR	6475706	Argument	AV_LOG_ERROR		6474735	1					
ANR	6475707	Identifier	AV_LOG_ERROR		6474735	0					
ANR	6475708	Argument	"""PCM DVD unsupported sample depth\\n"""		6474735	2					
ANR	6475709	PrimaryExpression	"""PCM DVD unsupported sample depth\\n"""		6474735	0					
ANR	6475710	ReturnStatement	return - 1 ;	369:12:5919:5928	6474735	8	True				
ANR	6475711	UnaryOperationExpression	- 1		6474735	0					
ANR	6475712	UnaryOperator	-		6474735	0					
ANR	6475713	PrimaryExpression	1		6474735	1					
ANR	6475714	ExpressionStatement	samples = ( uint8_t * ) dst_int32_t	373:8:5950:5983	6474735	231	True				
ANR	6475715	AssignmentExpression	samples = ( uint8_t * ) dst_int32_t		6474735	0		=			
ANR	6475716	Identifier	samples		6474735	0					
ANR	6475717	CastExpression	( uint8_t * ) dst_int32_t		6474735	1					
ANR	6475718	CastTarget	uint8_t *		6474735	0					
ANR	6475719	Identifier	dst_int32_t		6474735	1					
ANR	6475720	BreakStatement	break ;	375:8:5994:5999	6474735	232	True				
ANR	6475721	Label	case CODEC_ID_PCM_LXF :	377:4:6006:6027	6474735	233	True				
ANR	6475722	Identifier	CODEC_ID_PCM_LXF		6474735	0					
ANR	6475723	ExpressionStatement	dst_int32_t = data	379:8:6038:6056	6474735	234	True				
ANR	6475724	AssignmentExpression	dst_int32_t = data		6474735	0		=			
ANR	6475725	Identifier	dst_int32_t		6474735	0					
ANR	6475726	Identifier	data		6474735	1					
ANR	6475727	ExpressionStatement	n /= avctx -> channels	381:8:6067:6087	6474735	235	True				
ANR	6475728	AssignmentExpression	n /= avctx -> channels		6474735	0		/=			
ANR	6475729	Identifier	n		6474735	0					
ANR	6475730	PtrMemberAccess	avctx -> channels		6474735	1					
ANR	6475731	Identifier	avctx		6474735	0					
ANR	6475732	Identifier	channels		6474735	1					
ANR	6475733	ForStatement	for ( i = 0 ; i < n ; i ++ )		6474735	236					
ANR	6475734	ForInit	i = 0 ;	385:13:6138:6143	6474735	0	True				
ANR	6475735	AssignmentExpression	i = 0		6474735	0		=			
ANR	6475736	Identifier	i		6474735	0					
ANR	6475737	PrimaryExpression	0		6474735	1					
ANR	6475738	Condition	i < n	385:20:6145:6149	6474735	1	True				
ANR	6475739	RelationalExpression	i < n		6474735	0		<			
ANR	6475740	Identifier	i		6474735	0					
ANR	6475741	Identifier	n		6474735	1					
ANR	6475742	PostIncDecOperationExpression	i ++	385:27:6152:6154	6474735	2	True				
ANR	6475743	Identifier	i		6474735	0					
ANR	6475744	IncDec	++		6474735	1					
ANR	6475745	CompoundStatement		379:32:6001:6001	6474735	3					
ANR	6475746	ForStatement	"for ( c = 0 , src8 = src + i * 5 ; c < avctx -> channels ; c ++ , src8 += n * 5 )"		6474735	0					
ANR	6475747	ForInit	"c = 0 , src8 = src + i * 5 ;"	387:17:6177:6200	6474735	0	True				
ANR	6475748	Expression	"c = 0 , src8 = src + i * 5"		6474735	0					
ANR	6475749	AssignmentExpression	c = 0		6474735	0		=			
ANR	6475750	Identifier	c		6474735	0					
ANR	6475751	PrimaryExpression	0		6474735	1					
ANR	6475752	AssignmentExpression	src8 = src + i * 5		6474735	1		=			
ANR	6475753	Identifier	src8		6474735	0					
ANR	6475754	AdditiveExpression	src + i * 5		6474735	1		+			
ANR	6475755	Identifier	src		6474735	0					
ANR	6475756	MultiplicativeExpression	i * 5		6474735	1		*			
ANR	6475757	Identifier	i		6474735	0					
ANR	6475758	PrimaryExpression	5		6474735	1					
ANR	6475759	Condition	c < avctx -> channels	387:42:6202:6220	6474735	1	True				
ANR	6475760	RelationalExpression	c < avctx -> channels		6474735	0		<			
ANR	6475761	Identifier	c		6474735	0					
ANR	6475762	PtrMemberAccess	avctx -> channels		6474735	1					
ANR	6475763	Identifier	avctx		6474735	0					
ANR	6475764	Identifier	channels		6474735	1					
ANR	6475765	Expression	"c ++ , src8 += n * 5"	387:63:6223:6238	6474735	2	True				
ANR	6475766	PostIncDecOperationExpression	c ++		6474735	0					
ANR	6475767	Identifier	c		6474735	0					
ANR	6475768	IncDec	++		6474735	1					
ANR	6475769	AssignmentExpression	src8 += n * 5		6474735	1		+=			
ANR	6475770	Identifier	src8		6474735	0					
ANR	6475771	MultiplicativeExpression	n * 5		6474735	1		*			
ANR	6475772	Identifier	n		6474735	0					
ANR	6475773	PrimaryExpression	5		6474735	1					
ANR	6475774	CompoundStatement		381:81:6085:6085	6474735	3					
ANR	6475775	ExpressionStatement	* dst_int32_t ++ = ( src8 [ 2 ] << 28 ) | ( src8 [ 1 ] << 20 ) | ( src8 [ 0 ] << 12 ) | ( ( src8 [ 2 ] & 0xF ) << 8 ) | src8 [ 1 ]	391:16:6321:6458	6474735	0	True				
ANR	6475776	AssignmentExpression	* dst_int32_t ++ = ( src8 [ 2 ] << 28 ) | ( src8 [ 1 ] << 20 ) | ( src8 [ 0 ] << 12 ) | ( ( src8 [ 2 ] & 0xF ) << 8 ) | src8 [ 1 ]		6474735	0		=			
ANR	6475777	UnaryOperationExpression	* dst_int32_t ++		6474735	0					
ANR	6475778	UnaryOperator	*		6474735	0					
ANR	6475779	PostIncDecOperationExpression	dst_int32_t ++		6474735	1					
ANR	6475780	Identifier	dst_int32_t		6474735	0					
ANR	6475781	IncDec	++		6474735	1					
ANR	6475782	InclusiveOrExpression	( src8 [ 2 ] << 28 ) | ( src8 [ 1 ] << 20 ) | ( src8 [ 0 ] << 12 ) | ( ( src8 [ 2 ] & 0xF ) << 8 ) | src8 [ 1 ]		6474735	1		|			
ANR	6475783	ShiftExpression	src8 [ 2 ] << 28		6474735	0		<<			
ANR	6475784	ArrayIndexing	src8 [ 2 ]		6474735	0					
ANR	6475785	Identifier	src8		6474735	0					
ANR	6475786	PrimaryExpression	2		6474735	1					
ANR	6475787	PrimaryExpression	28		6474735	1					
ANR	6475788	InclusiveOrExpression	( src8 [ 1 ] << 20 ) | ( src8 [ 0 ] << 12 ) | ( ( src8 [ 2 ] & 0xF ) << 8 ) | src8 [ 1 ]		6474735	1		|			
ANR	6475789	ShiftExpression	src8 [ 1 ] << 20		6474735	0		<<			
ANR	6475790	ArrayIndexing	src8 [ 1 ]		6474735	0					
ANR	6475791	Identifier	src8		6474735	0					
ANR	6475792	PrimaryExpression	1		6474735	1					
ANR	6475793	PrimaryExpression	20		6474735	1					
ANR	6475794	InclusiveOrExpression	( src8 [ 0 ] << 12 ) | ( ( src8 [ 2 ] & 0xF ) << 8 ) | src8 [ 1 ]		6474735	1		|			
ANR	6475795	ShiftExpression	src8 [ 0 ] << 12		6474735	0		<<			
ANR	6475796	ArrayIndexing	src8 [ 0 ]		6474735	0					
ANR	6475797	Identifier	src8		6474735	0					
ANR	6475798	PrimaryExpression	0		6474735	1					
ANR	6475799	PrimaryExpression	12		6474735	1					
ANR	6475800	InclusiveOrExpression	( ( src8 [ 2 ] & 0xF ) << 8 ) | src8 [ 1 ]		6474735	1		|			
ANR	6475801	ShiftExpression	( src8 [ 2 ] & 0xF ) << 8		6474735	0		<<			
ANR	6475802	BitAndExpression	src8 [ 2 ] & 0xF		6474735	0		&			
ANR	6475803	ArrayIndexing	src8 [ 2 ]		6474735	0					
ANR	6475804	Identifier	src8		6474735	0					
ANR	6475805	PrimaryExpression	2		6474735	1					
ANR	6475806	PrimaryExpression	0xF		6474735	1					
ANR	6475807	PrimaryExpression	8		6474735	1					
ANR	6475808	ArrayIndexing	src8 [ 1 ]		6474735	1					
ANR	6475809	Identifier	src8		6474735	0					
ANR	6475810	PrimaryExpression	1		6474735	1					
ANR	6475811	ForStatement	"for ( c = 0 , src8 = src + i * 5 ; c < avctx -> channels ; c ++ , src8 += n * 5 )"		6474735	1					
ANR	6475812	ForInit	"c = 0 , src8 = src + i * 5 ;"	399:17:6495:6518	6474735	0	True				
ANR	6475813	Expression	"c = 0 , src8 = src + i * 5"		6474735	0					
ANR	6475814	AssignmentExpression	c = 0		6474735	0		=			
ANR	6475815	Identifier	c		6474735	0					
ANR	6475816	PrimaryExpression	0		6474735	1					
ANR	6475817	AssignmentExpression	src8 = src + i * 5		6474735	1		=			
ANR	6475818	Identifier	src8		6474735	0					
ANR	6475819	AdditiveExpression	src + i * 5		6474735	1		+			
ANR	6475820	Identifier	src		6474735	0					
ANR	6475821	MultiplicativeExpression	i * 5		6474735	1		*			
ANR	6475822	Identifier	i		6474735	0					
ANR	6475823	PrimaryExpression	5		6474735	1					
ANR	6475824	Condition	c < avctx -> channels	399:42:6520:6538	6474735	1	True				
ANR	6475825	RelationalExpression	c < avctx -> channels		6474735	0		<			
ANR	6475826	Identifier	c		6474735	0					
ANR	6475827	PtrMemberAccess	avctx -> channels		6474735	1					
ANR	6475828	Identifier	avctx		6474735	0					
ANR	6475829	Identifier	channels		6474735	1					
ANR	6475830	Expression	"c ++ , src8 += n * 5"	399:63:6541:6556	6474735	2	True				
ANR	6475831	PostIncDecOperationExpression	c ++		6474735	0					
ANR	6475832	Identifier	c		6474735	0					
ANR	6475833	IncDec	++		6474735	1					
ANR	6475834	AssignmentExpression	src8 += n * 5		6474735	1		+=			
ANR	6475835	Identifier	src8		6474735	0					
ANR	6475836	MultiplicativeExpression	n * 5		6474735	1		*			
ANR	6475837	Identifier	n		6474735	0					
ANR	6475838	PrimaryExpression	5		6474735	1					
ANR	6475839	CompoundStatement		393:81:6403:6403	6474735	3					
ANR	6475840	ExpressionStatement	* dst_int32_t ++ = ( src8 [ 4 ] << 24 ) | ( src8 [ 3 ] << 16 ) | ( ( src8 [ 2 ] & 0xF0 ) << 8 ) | ( src8 [ 4 ] << 4 ) | ( src8 [ 3 ] >> 4 )	403:16:6640:6784	6474735	0	True				
ANR	6475841	AssignmentExpression	* dst_int32_t ++ = ( src8 [ 4 ] << 24 ) | ( src8 [ 3 ] << 16 ) | ( ( src8 [ 2 ] & 0xF0 ) << 8 ) | ( src8 [ 4 ] << 4 ) | ( src8 [ 3 ] >> 4 )		6474735	0		=			
ANR	6475842	UnaryOperationExpression	* dst_int32_t ++		6474735	0					
ANR	6475843	UnaryOperator	*		6474735	0					
ANR	6475844	PostIncDecOperationExpression	dst_int32_t ++		6474735	1					
ANR	6475845	Identifier	dst_int32_t		6474735	0					
ANR	6475846	IncDec	++		6474735	1					
ANR	6475847	InclusiveOrExpression	( src8 [ 4 ] << 24 ) | ( src8 [ 3 ] << 16 ) | ( ( src8 [ 2 ] & 0xF0 ) << 8 ) | ( src8 [ 4 ] << 4 ) | ( src8 [ 3 ] >> 4 )		6474735	1		|			
ANR	6475848	ShiftExpression	src8 [ 4 ] << 24		6474735	0		<<			
ANR	6475849	ArrayIndexing	src8 [ 4 ]		6474735	0					
ANR	6475850	Identifier	src8		6474735	0					
ANR	6475851	PrimaryExpression	4		6474735	1					
ANR	6475852	PrimaryExpression	24		6474735	1					
ANR	6475853	InclusiveOrExpression	( src8 [ 3 ] << 16 ) | ( ( src8 [ 2 ] & 0xF0 ) << 8 ) | ( src8 [ 4 ] << 4 ) | ( src8 [ 3 ] >> 4 )		6474735	1		|			
ANR	6475854	ShiftExpression	src8 [ 3 ] << 16		6474735	0		<<			
ANR	6475855	ArrayIndexing	src8 [ 3 ]		6474735	0					
ANR	6475856	Identifier	src8		6474735	0					
ANR	6475857	PrimaryExpression	3		6474735	1					
ANR	6475858	PrimaryExpression	16		6474735	1					
ANR	6475859	InclusiveOrExpression	( ( src8 [ 2 ] & 0xF0 ) << 8 ) | ( src8 [ 4 ] << 4 ) | ( src8 [ 3 ] >> 4 )		6474735	1		|			
ANR	6475860	ShiftExpression	( src8 [ 2 ] & 0xF0 ) << 8		6474735	0		<<			
ANR	6475861	BitAndExpression	src8 [ 2 ] & 0xF0		6474735	0		&			
ANR	6475862	ArrayIndexing	src8 [ 2 ]		6474735	0					
ANR	6475863	Identifier	src8		6474735	0					
ANR	6475864	PrimaryExpression	2		6474735	1					
ANR	6475865	PrimaryExpression	0xF0		6474735	1					
ANR	6475866	PrimaryExpression	8		6474735	1					
ANR	6475867	InclusiveOrExpression	( src8 [ 4 ] << 4 ) | ( src8 [ 3 ] >> 4 )		6474735	1		|			
ANR	6475868	ShiftExpression	src8 [ 4 ] << 4		6474735	0		<<			
ANR	6475869	ArrayIndexing	src8 [ 4 ]		6474735	0					
ANR	6475870	Identifier	src8		6474735	0					
ANR	6475871	PrimaryExpression	4		6474735	1					
ANR	6475872	PrimaryExpression	4		6474735	1					
ANR	6475873	ShiftExpression	src8 [ 3 ] >> 4		6474735	1		>>			
ANR	6475874	ArrayIndexing	src8 [ 3 ]		6474735	0					
ANR	6475875	Identifier	src8		6474735	0					
ANR	6475876	PrimaryExpression	3		6474735	1					
ANR	6475877	PrimaryExpression	4		6474735	1					
ANR	6475878	ExpressionStatement	src += n * avctx -> channels * 5	411:8:6821:6851	6474735	237	True				
ANR	6475879	AssignmentExpression	src += n * avctx -> channels * 5		6474735	0		+=			
ANR	6475880	Identifier	src		6474735	0					
ANR	6475881	MultiplicativeExpression	n * avctx -> channels * 5		6474735	1		*			
ANR	6475882	Identifier	n		6474735	0					
ANR	6475883	MultiplicativeExpression	avctx -> channels * 5		6474735	1		*			
ANR	6475884	PtrMemberAccess	avctx -> channels		6474735	0					
ANR	6475885	Identifier	avctx		6474735	0					
ANR	6475886	Identifier	channels		6474735	1					
ANR	6475887	PrimaryExpression	5		6474735	1					
ANR	6475888	ExpressionStatement	samples = ( uint8_t * ) dst_int32_t	413:8:6862:6895	6474735	238	True				
ANR	6475889	AssignmentExpression	samples = ( uint8_t * ) dst_int32_t		6474735	0		=			
ANR	6475890	Identifier	samples		6474735	0					
ANR	6475891	CastExpression	( uint8_t * ) dst_int32_t		6474735	1					
ANR	6475892	CastTarget	uint8_t *		6474735	0					
ANR	6475893	Identifier	dst_int32_t		6474735	1					
ANR	6475894	BreakStatement	break ;	415:8:6906:6911	6474735	239	True				
ANR	6475895	Label	default :	417:4:6918:6925	6474735	240	True				
ANR	6475896	Identifier	default		6474735	0					
ANR	6475897	ReturnStatement	return - 1 ;	419:8:6936:6945	6474735	241	True				
ANR	6475898	UnaryOperationExpression	- 1		6474735	0					
ANR	6475899	UnaryOperator	-		6474735	0					
ANR	6475900	PrimaryExpression	1		6474735	1					
ANR	6475901	ExpressionStatement	* data_size = samples - ( uint8_t * ) data	423:4:6959:6997	6474735	19	True				
ANR	6475902	AssignmentExpression	* data_size = samples - ( uint8_t * ) data		6474735	0		=			
ANR	6475903	UnaryOperationExpression	* data_size		6474735	0					
ANR	6475904	UnaryOperator	*		6474735	0					
ANR	6475905	Identifier	data_size		6474735	1					
ANR	6475906	AdditiveExpression	samples - ( uint8_t * ) data		6474735	1		-			
ANR	6475907	Identifier	samples		6474735	0					
ANR	6475908	CastExpression	( uint8_t * ) data		6474735	1					
ANR	6475909	CastTarget	uint8_t *		6474735	0					
ANR	6475910	Identifier	data		6474735	1					
ANR	6475911	ReturnStatement	return src - buf ;	425:4:7004:7020	6474735	20	True				
ANR	6475912	AdditiveExpression	src - buf		6474735	0		-			
ANR	6475913	Identifier	src		6474735	0					
ANR	6475914	Identifier	buf		6474735	1					
ANR	6475915	ReturnType	static int		6474735	1					
ANR	6475916	Identifier	pcm_decode_frame		6474735	2					
ANR	6475917	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		6474735	3					
ANR	6475918	Parameter	AVCodecContext * avctx	1:28:28:48	6474735	0	True				
ANR	6475919	ParameterType	AVCodecContext *		6474735	0					
ANR	6475920	Identifier	avctx		6474735	1					
ANR	6475921	Parameter	void * data	3:28:80:89	6474735	1	True				
ANR	6475922	ParameterType	void *		6474735	0					
ANR	6475923	Identifier	data		6474735	1					
ANR	6475924	Parameter	int * data_size	3:40:92:105	6474735	2	True				
ANR	6475925	ParameterType	int *		6474735	0					
ANR	6475926	Identifier	data_size		6474735	1					
ANR	6475927	Parameter	AVPacket * avpkt	5:28:137:151	6474735	3	True				
ANR	6475928	ParameterType	AVPacket *		6474735	0					
ANR	6475929	Identifier	avpkt		6474735	1					
ANR	6475930	CFGEntryNode	ENTRY		6474735		True				
ANR	6475931	CFGExitNode	EXIT		6474735		True				
ANR	6475932	Symbol	* v		6474735						
ANR	6475933	Symbol	data		6474735						
ANR	6475934	Symbol	bytestream_get_be16		6474735						
ANR	6475935	Symbol	FFMIN		6474735						
ANR	6475936	Symbol	avpkt		6474735						
ANR	6475937	Symbol	dst_int32_t		6474735						
ANR	6475938	Symbol	* data_size		6474735						
ANR	6475939	Symbol	* * src ++		6474735						
ANR	6475940	Symbol	avctx -> channels		6474735						
ANR	6475941	Symbol	* avctx -> codec		6474735						
ANR	6475942	Symbol	data_size		6474735						
ANR	6475943	Symbol	* src2		6474735						
ANR	6475944	Symbol	avctx -> sample_fmt		6474735						
ANR	6475945	Symbol	CODEC_ID_PCM_LXF		6474735						
ANR	6475946	Symbol	s -> table		6474735						
ANR	6475947	Symbol	avctx -> codec		6474735						
ANR	6475948	Symbol	av_reverse		6474735						
ANR	6475949	Symbol	buf_size		6474735						
ANR	6475950	Symbol	* * avctx		6474735						
ANR	6475951	Symbol	bytestream_get_be24		6474735						
ANR	6475952	Symbol	* avctx -> channels		6474735						
ANR	6475953	Symbol	* s -> table		6474735						
ANR	6475954	Symbol	samples		6474735						
ANR	6475955	Symbol	* src8		6474735						
ANR	6475956	Symbol	bytestream_get_le16		6474735						
ANR	6475957	Symbol	* avctx		6474735						
ANR	6475958	Symbol	* av_reverse		6474735						
ANR	6475959	Symbol	* src ++		6474735						
ANR	6475960	Symbol	avpkt -> data		6474735						
ANR	6475961	Symbol	* * avctx -> codec		6474735						
ANR	6475962	Symbol	* avctx -> codec -> sample_fmts		6474735						
ANR	6475963	Symbol	avctx -> codec_id		6474735						
ANR	6475964	Symbol	avctx -> bits_per_coded_sample		6474735						
ANR	6475965	Symbol	MAX_CHANNELS		6474735						
ANR	6475966	Symbol	& src		6474735						
ANR	6475967	Symbol	avctx -> codec -> sample_fmts		6474735						
ANR	6475968	Symbol	sample_size		6474735						
ANR	6475969	Symbol	* src8 ++		6474735						
ANR	6475970	Symbol	* * s		6474735						
ANR	6475971	Symbol	avpkt -> size		6474735						
ANR	6475972	Symbol	avctx		6474735						
ANR	6475973	Symbol	* samples ++		6474735						
ANR	6475974	Symbol	* avpkt		6474735						
ANR	6475975	Symbol	src8		6474735						
ANR	6475976	Symbol	av_get_bits_per_sample		6474735						
ANR	6475977	Symbol	c		6474735						
ANR	6475978	Symbol	AV_LOG_ERROR		6474735						
ANR	6475979	Symbol	src		6474735						
ANR	6475980	Symbol	i		6474735						
ANR	6475981	Symbol	CODEC_ID_PCM_DVD		6474735						
ANR	6475982	Symbol	* dst_int32_t ++		6474735						
ANR	6475983	Symbol	avctx -> priv_data		6474735						
ANR	6475984	Symbol	* c		6474735						
ANR	6475985	Symbol	n		6474735						
ANR	6475986	Symbol	EINVAL		6474735						
ANR	6475987	Symbol	avctx -> codec -> id		6474735						
ANR	6475988	Symbol	buf		6474735						
ANR	6475989	Symbol	* * * avctx		6474735						
ANR	6475990	Symbol	s		6474735						
ANR	6475991	Symbol	v		6474735						
ANR	6475992	Symbol	x		6474735						
ANR	6475993	Symbol	src2		6474735						
ANR	6475994	Symbol	AVERROR		6474735						
ANR	6475995	Symbol	* s		6474735						
