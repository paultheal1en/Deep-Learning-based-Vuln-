command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9498296	File	/home/p4ultr4n/workplace/ReVeal/raw_code/xan_decode_chroma_01_1.c								
ANR	9498297	Function	xan_decode_chroma	1:0:0:2740							
ANR	9498298	FunctionDef	"xan_decode_chroma (AVCodecContext * avctx , AVPacket * avpkt)"		9498297	0					
ANR	9498299	CompoundStatement		3:0:70:2740	9498297	0					
ANR	9498300	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	5:4:77:109	9498297	0	True				
ANR	9498301	IdentifierDecl	* buf = avpkt -> data		9498297	0					
ANR	9498302	IdentifierDeclType	const uint8_t *		9498297	0					
ANR	9498303	Identifier	buf		9498297	1					
ANR	9498304	AssignmentExpression	* buf = avpkt -> data		9498297	2		=			
ANR	9498305	Identifier	buf		9498297	0					
ANR	9498306	PtrMemberAccess	avpkt -> data		9498297	1					
ANR	9498307	Identifier	avpkt		9498297	0					
ANR	9498308	Identifier	data		9498297	1					
ANR	9498309	IdentifierDeclStatement	XanContext * s = avctx -> priv_data ;	7:4:116:148	9498297	1	True				
ANR	9498310	IdentifierDecl	* s = avctx -> priv_data		9498297	0					
ANR	9498311	IdentifierDeclType	XanContext *		9498297	0					
ANR	9498312	Identifier	s		9498297	1					
ANR	9498313	AssignmentExpression	* s = avctx -> priv_data		9498297	2		=			
ANR	9498314	Identifier	s		9498297	0					
ANR	9498315	PtrMemberAccess	avctx -> priv_data		9498297	1					
ANR	9498316	Identifier	avctx		9498297	0					
ANR	9498317	Identifier	priv_data		9498297	1					
ANR	9498318	IdentifierDeclStatement	"uint8_t * U , * V ;"	9:4:155:169	9498297	2	True				
ANR	9498319	IdentifierDecl	* U		9498297	0					
ANR	9498320	IdentifierDeclType	uint8_t *		9498297	0					
ANR	9498321	Identifier	U		9498297	1					
ANR	9498322	IdentifierDecl	* V		9498297	1					
ANR	9498323	IdentifierDeclType	uint8_t *		9498297	0					
ANR	9498324	Identifier	V		9498297	1					
ANR	9498325	IdentifierDeclStatement	unsigned chroma_off ;	11:4:176:195	9498297	3	True				
ANR	9498326	IdentifierDecl	chroma_off		9498297	0					
ANR	9498327	IdentifierDeclType	unsigned		9498297	0					
ANR	9498328	Identifier	chroma_off		9498297	1					
ANR	9498329	IdentifierDeclStatement	"int val , uval , vval ;"	13:4:202:221	9498297	4	True				
ANR	9498330	IdentifierDecl	val		9498297	0					
ANR	9498331	IdentifierDeclType	int		9498297	0					
ANR	9498332	Identifier	val		9498297	1					
ANR	9498333	IdentifierDecl	uval		9498297	1					
ANR	9498334	IdentifierDeclType	int		9498297	0					
ANR	9498335	Identifier	uval		9498297	1					
ANR	9498336	IdentifierDecl	vval		9498297	2					
ANR	9498337	IdentifierDeclType	int		9498297	0					
ANR	9498338	Identifier	vval		9498297	1					
ANR	9498339	IdentifierDeclStatement	"int i , j ;"	15:4:228:236	9498297	5	True				
ANR	9498340	IdentifierDecl	i		9498297	0					
ANR	9498341	IdentifierDeclType	int		9498297	0					
ANR	9498342	Identifier	i		9498297	1					
ANR	9498343	IdentifierDecl	j		9498297	1					
ANR	9498344	IdentifierDeclType	int		9498297	0					
ANR	9498345	Identifier	j		9498297	1					
ANR	9498346	IdentifierDeclStatement	"const uint8_t * src , * src_end ;"	17:4:243:271	9498297	6	True				
ANR	9498347	IdentifierDecl	* src		9498297	0					
ANR	9498348	IdentifierDeclType	const uint8_t *		9498297	0					
ANR	9498349	Identifier	src		9498297	1					
ANR	9498350	IdentifierDecl	* src_end		9498297	1					
ANR	9498351	IdentifierDeclType	const uint8_t *		9498297	0					
ANR	9498352	Identifier	src_end		9498297	1					
ANR	9498353	IdentifierDeclStatement	const uint8_t * table ;	19:4:278:298	9498297	7	True				
ANR	9498354	IdentifierDecl	* table		9498297	0					
ANR	9498355	IdentifierDeclType	const uint8_t *		9498297	0					
ANR	9498356	Identifier	table		9498297	1					
ANR	9498357	IdentifierDeclStatement	"int mode , offset , dec_size ;"	21:4:305:331	9498297	8	True				
ANR	9498358	IdentifierDecl	mode		9498297	0					
ANR	9498359	IdentifierDeclType	int		9498297	0					
ANR	9498360	Identifier	mode		9498297	1					
ANR	9498361	IdentifierDecl	offset		9498297	1					
ANR	9498362	IdentifierDeclType	int		9498297	0					
ANR	9498363	Identifier	offset		9498297	1					
ANR	9498364	IdentifierDecl	dec_size		9498297	2					
ANR	9498365	IdentifierDeclType	int		9498297	0					
ANR	9498366	Identifier	dec_size		9498297	1					
ANR	9498367	ExpressionStatement	chroma_off = AV_RL32 ( buf + 4 )	25:4:340:369	9498297	9	True				
ANR	9498368	AssignmentExpression	chroma_off = AV_RL32 ( buf + 4 )		9498297	0		=			
ANR	9498369	Identifier	chroma_off		9498297	0					
ANR	9498370	CallExpression	AV_RL32 ( buf + 4 )		9498297	1					
ANR	9498371	Callee	AV_RL32		9498297	0					
ANR	9498372	Identifier	AV_RL32		9498297	0					
ANR	9498373	ArgumentList	buf + 4		9498297	1					
ANR	9498374	Argument	buf + 4		9498297	0					
ANR	9498375	AdditiveExpression	buf + 4		9498297	0		+			
ANR	9498376	Identifier	buf		9498297	0					
ANR	9498377	PrimaryExpression	4		9498297	1					
ANR	9498378	IfStatement	if ( ! chroma_off )		9498297	10					
ANR	9498379	Condition	! chroma_off	27:8:380:390	9498297	0	True				
ANR	9498380	UnaryOperationExpression	! chroma_off		9498297	0					
ANR	9498381	UnaryOperator	!		9498297	0					
ANR	9498382	Identifier	chroma_off		9498297	1					
ANR	9498383	ReturnStatement	return 0 ;	29:8:402:410	9498297	1	True				
ANR	9498384	PrimaryExpression	0		9498297	0					
ANR	9498385	IfStatement	if ( chroma_off + 10 >= avpkt -> size )		9498297	11					
ANR	9498386	Condition	chroma_off + 10 >= avpkt -> size	31:8:421:450	9498297	0	True				
ANR	9498387	RelationalExpression	chroma_off + 10 >= avpkt -> size		9498297	0		>=			
ANR	9498388	AdditiveExpression	chroma_off + 10		9498297	0		+			
ANR	9498389	Identifier	chroma_off		9498297	0					
ANR	9498390	PrimaryExpression	10		9498297	1					
ANR	9498391	PtrMemberAccess	avpkt -> size		9498297	1					
ANR	9498392	Identifier	avpkt		9498297	0					
ANR	9498393	Identifier	size		9498297	1					
ANR	9498394	CompoundStatement		29:40:382:382	9498297	1					
ANR	9498395	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid chroma block position\\n"" )"	33:8:464:526	9498297	0	True				
ANR	9498396	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid chroma block position\\n"" )"		9498297	0					
ANR	9498397	Callee	av_log		9498297	0					
ANR	9498398	Identifier	av_log		9498297	0					
ANR	9498399	ArgumentList	avctx		9498297	1					
ANR	9498400	Argument	avctx		9498297	0					
ANR	9498401	Identifier	avctx		9498297	0					
ANR	9498402	Argument	AV_LOG_ERROR		9498297	1					
ANR	9498403	Identifier	AV_LOG_ERROR		9498297	0					
ANR	9498404	Argument	"""Invalid chroma block position\\n"""		9498297	2					
ANR	9498405	PrimaryExpression	"""Invalid chroma block position\\n"""		9498297	0					
ANR	9498406	ReturnStatement	return - 1 ;	35:8:537:546	9498297	1	True				
ANR	9498407	UnaryOperationExpression	- 1		9498297	0					
ANR	9498408	UnaryOperator	-		9498297	0					
ANR	9498409	PrimaryExpression	1		9498297	1					
ANR	9498410	ExpressionStatement	src = avpkt -> data + 4 + chroma_off	39:4:560:597	9498297	12	True				
ANR	9498411	AssignmentExpression	src = avpkt -> data + 4 + chroma_off		9498297	0		=			
ANR	9498412	Identifier	src		9498297	0					
ANR	9498413	AdditiveExpression	avpkt -> data + 4 + chroma_off		9498297	1		+			
ANR	9498414	PtrMemberAccess	avpkt -> data		9498297	0					
ANR	9498415	Identifier	avpkt		9498297	0					
ANR	9498416	Identifier	data		9498297	1					
ANR	9498417	AdditiveExpression	4 + chroma_off		9498297	1		+			
ANR	9498418	PrimaryExpression	4		9498297	0					
ANR	9498419	Identifier	chroma_off		9498297	1					
ANR	9498420	ExpressionStatement	table = src + 2	41:4:604:620	9498297	13	True				
ANR	9498421	AssignmentExpression	table = src + 2		9498297	0		=			
ANR	9498422	Identifier	table		9498297	0					
ANR	9498423	AdditiveExpression	src + 2		9498297	1		+			
ANR	9498424	Identifier	src		9498297	0					
ANR	9498425	PrimaryExpression	2		9498297	1					
ANR	9498426	ExpressionStatement	mode = bytestream_get_le16 ( & src )	43:4:627:661	9498297	14	True				
ANR	9498427	AssignmentExpression	mode = bytestream_get_le16 ( & src )		9498297	0		=			
ANR	9498428	Identifier	mode		9498297	0					
ANR	9498429	CallExpression	bytestream_get_le16 ( & src )		9498297	1					
ANR	9498430	Callee	bytestream_get_le16		9498297	0					
ANR	9498431	Identifier	bytestream_get_le16		9498297	0					
ANR	9498432	ArgumentList	& src		9498297	1					
ANR	9498433	Argument	& src		9498297	0					
ANR	9498434	UnaryOperationExpression	& src		9498297	0					
ANR	9498435	UnaryOperator	&		9498297	0					
ANR	9498436	Identifier	src		9498297	1					
ANR	9498437	ExpressionStatement	offset = bytestream_get_le16 ( & src ) * 2	45:4:668:706	9498297	15	True				
ANR	9498438	AssignmentExpression	offset = bytestream_get_le16 ( & src ) * 2		9498297	0		=			
ANR	9498439	Identifier	offset		9498297	0					
ANR	9498440	MultiplicativeExpression	bytestream_get_le16 ( & src ) * 2		9498297	1		*			
ANR	9498441	CallExpression	bytestream_get_le16 ( & src )		9498297	0					
ANR	9498442	Callee	bytestream_get_le16		9498297	0					
ANR	9498443	Identifier	bytestream_get_le16		9498297	0					
ANR	9498444	ArgumentList	& src		9498297	1					
ANR	9498445	Argument	& src		9498297	0					
ANR	9498446	UnaryOperationExpression	& src		9498297	0					
ANR	9498447	UnaryOperator	&		9498297	0					
ANR	9498448	Identifier	src		9498297	1					
ANR	9498449	PrimaryExpression	2		9498297	1					
ANR	9498450	IfStatement	if ( src - avpkt -> data >= avpkt -> size - offset )		9498297	16					
ANR	9498451	Condition	src - avpkt -> data >= avpkt -> size - offset	49:8:719:759	9498297	0	True				
ANR	9498452	RelationalExpression	src - avpkt -> data >= avpkt -> size - offset		9498297	0		>=			
ANR	9498453	AdditiveExpression	src - avpkt -> data		9498297	0		-			
ANR	9498454	Identifier	src		9498297	0					
ANR	9498455	PtrMemberAccess	avpkt -> data		9498297	1					
ANR	9498456	Identifier	avpkt		9498297	0					
ANR	9498457	Identifier	data		9498297	1					
ANR	9498458	AdditiveExpression	avpkt -> size - offset		9498297	1		-			
ANR	9498459	PtrMemberAccess	avpkt -> size		9498297	0					
ANR	9498460	Identifier	avpkt		9498297	0					
ANR	9498461	Identifier	size		9498297	1					
ANR	9498462	Identifier	offset		9498297	1					
ANR	9498463	CompoundStatement		47:51:691:691	9498297	1					
ANR	9498464	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid chroma block offset\\n"" )"	51:8:773:833	9498297	0	True				
ANR	9498465	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid chroma block offset\\n"" )"		9498297	0					
ANR	9498466	Callee	av_log		9498297	0					
ANR	9498467	Identifier	av_log		9498297	0					
ANR	9498468	ArgumentList	avctx		9498297	1					
ANR	9498469	Argument	avctx		9498297	0					
ANR	9498470	Identifier	avctx		9498297	0					
ANR	9498471	Argument	AV_LOG_ERROR		9498297	1					
ANR	9498472	Identifier	AV_LOG_ERROR		9498297	0					
ANR	9498473	Argument	"""Invalid chroma block offset\\n"""		9498297	2					
ANR	9498474	PrimaryExpression	"""Invalid chroma block offset\\n"""		9498297	0					
ANR	9498475	ReturnStatement	return - 1 ;	53:8:844:853	9498297	1	True				
ANR	9498476	UnaryOperationExpression	- 1		9498297	0					
ANR	9498477	UnaryOperator	-		9498297	0					
ANR	9498478	PrimaryExpression	1		9498297	1					
ANR	9498479	ExpressionStatement	"memset ( s -> scratch_buffer , 0 , s -> buffer_size )"	59:4:869:913	9498297	17	True				
ANR	9498480	CallExpression	"memset ( s -> scratch_buffer , 0 , s -> buffer_size )"		9498297	0					
ANR	9498481	Callee	memset		9498297	0					
ANR	9498482	Identifier	memset		9498297	0					
ANR	9498483	ArgumentList	s -> scratch_buffer		9498297	1					
ANR	9498484	Argument	s -> scratch_buffer		9498297	0					
ANR	9498485	PtrMemberAccess	s -> scratch_buffer		9498297	0					
ANR	9498486	Identifier	s		9498297	0					
ANR	9498487	Identifier	scratch_buffer		9498297	1					
ANR	9498488	Argument	0		9498297	1					
ANR	9498489	PrimaryExpression	0		9498297	0					
ANR	9498490	Argument	s -> buffer_size		9498297	2					
ANR	9498491	PtrMemberAccess	s -> buffer_size		9498297	0					
ANR	9498492	Identifier	s		9498297	0					
ANR	9498493	Identifier	buffer_size		9498297	1					
ANR	9498494	ExpressionStatement	"dec_size = xan_unpack ( s -> scratch_buffer , s -> buffer_size , src + offset , avpkt -> size - offset - ( src - avpkt -> data ) )"	61:4:920:1061	9498297	18	True				
ANR	9498495	AssignmentExpression	"dec_size = xan_unpack ( s -> scratch_buffer , s -> buffer_size , src + offset , avpkt -> size - offset - ( src - avpkt -> data ) )"		9498297	0		=			
ANR	9498496	Identifier	dec_size		9498297	0					
ANR	9498497	CallExpression	"xan_unpack ( s -> scratch_buffer , s -> buffer_size , src + offset , avpkt -> size - offset - ( src - avpkt -> data ) )"		9498297	1					
ANR	9498498	Callee	xan_unpack		9498297	0					
ANR	9498499	Identifier	xan_unpack		9498297	0					
ANR	9498500	ArgumentList	s -> scratch_buffer		9498297	1					
ANR	9498501	Argument	s -> scratch_buffer		9498297	0					
ANR	9498502	PtrMemberAccess	s -> scratch_buffer		9498297	0					
ANR	9498503	Identifier	s		9498297	0					
ANR	9498504	Identifier	scratch_buffer		9498297	1					
ANR	9498505	Argument	s -> buffer_size		9498297	1					
ANR	9498506	PtrMemberAccess	s -> buffer_size		9498297	0					
ANR	9498507	Identifier	s		9498297	0					
ANR	9498508	Identifier	buffer_size		9498297	1					
ANR	9498509	Argument	src + offset		9498297	2					
ANR	9498510	AdditiveExpression	src + offset		9498297	0		+			
ANR	9498511	Identifier	src		9498297	0					
ANR	9498512	Identifier	offset		9498297	1					
ANR	9498513	Argument	avpkt -> size - offset - ( src - avpkt -> data )		9498297	3					
ANR	9498514	AdditiveExpression	avpkt -> size - offset - ( src - avpkt -> data )		9498297	0		-			
ANR	9498515	PtrMemberAccess	avpkt -> size		9498297	0					
ANR	9498516	Identifier	avpkt		9498297	0					
ANR	9498517	Identifier	size		9498297	1					
ANR	9498518	AdditiveExpression	offset - ( src - avpkt -> data )		9498297	1		-			
ANR	9498519	Identifier	offset		9498297	0					
ANR	9498520	AdditiveExpression	src - avpkt -> data		9498297	1		-			
ANR	9498521	Identifier	src		9498297	0					
ANR	9498522	PtrMemberAccess	avpkt -> data		9498297	1					
ANR	9498523	Identifier	avpkt		9498297	0					
ANR	9498524	Identifier	data		9498297	1					
ANR	9498525	IfStatement	if ( dec_size < 0 )		9498297	19					
ANR	9498526	Condition	dec_size < 0	65:8:1072:1083	9498297	0	True				
ANR	9498527	RelationalExpression	dec_size < 0		9498297	0		<			
ANR	9498528	Identifier	dec_size		9498297	0					
ANR	9498529	PrimaryExpression	0		9498297	1					
ANR	9498530	CompoundStatement		63:22:1015:1015	9498297	1					
ANR	9498531	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Chroma unpacking failed\\n"" )"	67:8:1097:1153	9498297	0	True				
ANR	9498532	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Chroma unpacking failed\\n"" )"		9498297	0					
ANR	9498533	Callee	av_log		9498297	0					
ANR	9498534	Identifier	av_log		9498297	0					
ANR	9498535	ArgumentList	avctx		9498297	1					
ANR	9498536	Argument	avctx		9498297	0					
ANR	9498537	Identifier	avctx		9498297	0					
ANR	9498538	Argument	AV_LOG_ERROR		9498297	1					
ANR	9498539	Identifier	AV_LOG_ERROR		9498297	0					
ANR	9498540	Argument	"""Chroma unpacking failed\\n"""		9498297	2					
ANR	9498541	PrimaryExpression	"""Chroma unpacking failed\\n"""		9498297	0					
ANR	9498542	ReturnStatement	return - 1 ;	69:8:1164:1173	9498297	1	True				
ANR	9498543	UnaryOperationExpression	- 1		9498297	0					
ANR	9498544	UnaryOperator	-		9498297	0					
ANR	9498545	PrimaryExpression	1		9498297	1					
ANR	9498546	ExpressionStatement	U = s -> pic . data [ 1 ]	75:4:1189:1207	9498297	20	True				
ANR	9498547	AssignmentExpression	U = s -> pic . data [ 1 ]		9498297	0		=			
ANR	9498548	Identifier	U		9498297	0					
ANR	9498549	ArrayIndexing	s -> pic . data [ 1 ]		9498297	1					
ANR	9498550	MemberAccess	s -> pic . data		9498297	0					
ANR	9498551	PtrMemberAccess	s -> pic		9498297	0					
ANR	9498552	Identifier	s		9498297	0					
ANR	9498553	Identifier	pic		9498297	1					
ANR	9498554	Identifier	data		9498297	1					
ANR	9498555	PrimaryExpression	1		9498297	1					
ANR	9498556	ExpressionStatement	V = s -> pic . data [ 2 ]	77:4:1214:1232	9498297	21	True				
ANR	9498557	AssignmentExpression	V = s -> pic . data [ 2 ]		9498297	0		=			
ANR	9498558	Identifier	V		9498297	0					
ANR	9498559	ArrayIndexing	s -> pic . data [ 2 ]		9498297	1					
ANR	9498560	MemberAccess	s -> pic . data		9498297	0					
ANR	9498561	PtrMemberAccess	s -> pic		9498297	0					
ANR	9498562	Identifier	s		9498297	0					
ANR	9498563	Identifier	pic		9498297	1					
ANR	9498564	Identifier	data		9498297	1					
ANR	9498565	PrimaryExpression	2		9498297	1					
ANR	9498566	ExpressionStatement	src = s -> scratch_buffer	79:4:1239:1266	9498297	22	True				
ANR	9498567	AssignmentExpression	src = s -> scratch_buffer		9498297	0		=			
ANR	9498568	Identifier	src		9498297	0					
ANR	9498569	PtrMemberAccess	s -> scratch_buffer		9498297	1					
ANR	9498570	Identifier	s		9498297	0					
ANR	9498571	Identifier	scratch_buffer		9498297	1					
ANR	9498572	ExpressionStatement	src_end = src + dec_size	81:4:1273:1297	9498297	23	True				
ANR	9498573	AssignmentExpression	src_end = src + dec_size		9498297	0		=			
ANR	9498574	Identifier	src_end		9498297	0					
ANR	9498575	AdditiveExpression	src + dec_size		9498297	1		+			
ANR	9498576	Identifier	src		9498297	0					
ANR	9498577	Identifier	dec_size		9498297	1					
ANR	9498578	IfStatement	if ( mode )		9498297	24					
ANR	9498579	Condition	mode	83:8:1308:1311	9498297	0	True				
ANR	9498580	Identifier	mode		9498297	0					
ANR	9498581	CompoundStatement		81:14:1243:1243	9498297	1					
ANR	9498582	ForStatement	for ( j = 0 ; j < avctx -> height >> 1 ; j ++ )		9498297	0					
ANR	9498583	ForInit	j = 0 ;	85:13:1330:1335	9498297	0	True				
ANR	9498584	AssignmentExpression	j = 0		9498297	0		=			
ANR	9498585	Identifier	j		9498297	0					
ANR	9498586	PrimaryExpression	0		9498297	1					
ANR	9498587	Condition	j < avctx -> height >> 1	85:20:1337:1358	9498297	1	True				
ANR	9498588	RelationalExpression	j < avctx -> height >> 1		9498297	0		<			
ANR	9498589	Identifier	j		9498297	0					
ANR	9498590	ShiftExpression	avctx -> height >> 1		9498297	1		>>			
ANR	9498591	PtrMemberAccess	avctx -> height		9498297	0					
ANR	9498592	Identifier	avctx		9498297	0					
ANR	9498593	Identifier	height		9498297	1					
ANR	9498594	PrimaryExpression	1		9498297	1					
ANR	9498595	PostIncDecOperationExpression	j ++	85:44:1361:1363	9498297	2	True				
ANR	9498596	Identifier	j		9498297	0					
ANR	9498597	IncDec	++		9498297	1					
ANR	9498598	CompoundStatement		83:49:1295:1295	9498297	3					
ANR	9498599	ForStatement	for ( i = 0 ; i < avctx -> width >> 1 ; i ++ )		9498297	0					
ANR	9498600	ForInit	i = 0 ;	87:17:1386:1391	9498297	0	True				
ANR	9498601	AssignmentExpression	i = 0		9498297	0		=			
ANR	9498602	Identifier	i		9498297	0					
ANR	9498603	PrimaryExpression	0		9498297	1					
ANR	9498604	Condition	i < avctx -> width >> 1	87:24:1393:1413	9498297	1	True				
ANR	9498605	RelationalExpression	i < avctx -> width >> 1		9498297	0		<			
ANR	9498606	Identifier	i		9498297	0					
ANR	9498607	ShiftExpression	avctx -> width >> 1		9498297	1		>>			
ANR	9498608	PtrMemberAccess	avctx -> width		9498297	0					
ANR	9498609	Identifier	avctx		9498297	0					
ANR	9498610	Identifier	width		9498297	1					
ANR	9498611	PrimaryExpression	1		9498297	1					
ANR	9498612	PostIncDecOperationExpression	i ++	87:47:1416:1418	9498297	2	True				
ANR	9498613	Identifier	i		9498297	0					
ANR	9498614	IncDec	++		9498297	1					
ANR	9498615	CompoundStatement		85:52:1350:1350	9498297	3					
ANR	9498616	ExpressionStatement	val = * src ++	89:16:1440:1452	9498297	0	True				
ANR	9498617	AssignmentExpression	val = * src ++		9498297	0		=			
ANR	9498618	Identifier	val		9498297	0					
ANR	9498619	UnaryOperationExpression	* src ++		9498297	1					
ANR	9498620	UnaryOperator	*		9498297	0					
ANR	9498621	PostIncDecOperationExpression	src ++		9498297	1					
ANR	9498622	Identifier	src		9498297	0					
ANR	9498623	IncDec	++		9498297	1					
ANR	9498624	IfStatement	if ( val )		9498297	1					
ANR	9498625	Condition	val	91:20:1475:1477	9498297	0	True				
ANR	9498626	Identifier	val		9498297	0					
ANR	9498627	CompoundStatement		89:25:1409:1409	9498297	1					
ANR	9498628	ExpressionStatement	val = AV_RL16 ( table + ( val << 1 ) )	93:20:1503:1537	9498297	0	True				
ANR	9498629	AssignmentExpression	val = AV_RL16 ( table + ( val << 1 ) )		9498297	0		=			
ANR	9498630	Identifier	val		9498297	0					
ANR	9498631	CallExpression	AV_RL16 ( table + ( val << 1 ) )		9498297	1					
ANR	9498632	Callee	AV_RL16		9498297	0					
ANR	9498633	Identifier	AV_RL16		9498297	0					
ANR	9498634	ArgumentList	table + ( val << 1 )		9498297	1					
ANR	9498635	Argument	table + ( val << 1 )		9498297	0					
ANR	9498636	AdditiveExpression	table + ( val << 1 )		9498297	0		+			
ANR	9498637	Identifier	table		9498297	0					
ANR	9498638	ShiftExpression	val << 1		9498297	1		<<			
ANR	9498639	Identifier	val		9498297	0					
ANR	9498640	PrimaryExpression	1		9498297	1					
ANR	9498641	ExpressionStatement	uval = ( val >> 3 ) & 0xF8	95:20:1560:1584	9498297	1	True				
ANR	9498642	AssignmentExpression	uval = ( val >> 3 ) & 0xF8		9498297	0		=			
ANR	9498643	Identifier	uval		9498297	0					
ANR	9498644	BitAndExpression	( val >> 3 ) & 0xF8		9498297	1		&			
ANR	9498645	ShiftExpression	val >> 3		9498297	0		>>			
ANR	9498646	Identifier	val		9498297	0					
ANR	9498647	PrimaryExpression	3		9498297	1					
ANR	9498648	PrimaryExpression	0xF8		9498297	1					
ANR	9498649	ExpressionStatement	vval = ( val >> 8 ) & 0xF8	97:20:1607:1631	9498297	2	True				
ANR	9498650	AssignmentExpression	vval = ( val >> 8 ) & 0xF8		9498297	0		=			
ANR	9498651	Identifier	vval		9498297	0					
ANR	9498652	BitAndExpression	( val >> 8 ) & 0xF8		9498297	1		&			
ANR	9498653	ShiftExpression	val >> 8		9498297	0		>>			
ANR	9498654	Identifier	val		9498297	0					
ANR	9498655	PrimaryExpression	8		9498297	1					
ANR	9498656	PrimaryExpression	0xF8		9498297	1					
ANR	9498657	ExpressionStatement	U [ i ] = uval | ( uval >> 5 )	99:20:1654:1679	9498297	3	True				
ANR	9498658	AssignmentExpression	U [ i ] = uval | ( uval >> 5 )		9498297	0		=			
ANR	9498659	ArrayIndexing	U [ i ]		9498297	0					
ANR	9498660	Identifier	U		9498297	0					
ANR	9498661	Identifier	i		9498297	1					
ANR	9498662	InclusiveOrExpression	uval | ( uval >> 5 )		9498297	1		|			
ANR	9498663	Identifier	uval		9498297	0					
ANR	9498664	ShiftExpression	uval >> 5		9498297	1		>>			
ANR	9498665	Identifier	uval		9498297	0					
ANR	9498666	PrimaryExpression	5		9498297	1					
ANR	9498667	ExpressionStatement	V [ i ] = vval | ( vval >> 5 )	101:20:1702:1727	9498297	4	True				
ANR	9498668	AssignmentExpression	V [ i ] = vval | ( vval >> 5 )		9498297	0		=			
ANR	9498669	ArrayIndexing	V [ i ]		9498297	0					
ANR	9498670	Identifier	V		9498297	0					
ANR	9498671	Identifier	i		9498297	1					
ANR	9498672	InclusiveOrExpression	vval | ( vval >> 5 )		9498297	1		|			
ANR	9498673	Identifier	vval		9498297	0					
ANR	9498674	ShiftExpression	vval >> 5		9498297	1		>>			
ANR	9498675	Identifier	vval		9498297	0					
ANR	9498676	PrimaryExpression	5		9498297	1					
ANR	9498677	IfStatement	if ( src == src_end )		9498297	2					
ANR	9498678	Condition	src == src_end	105:20:1769:1782	9498297	0	True				
ANR	9498679	EqualityExpression	src == src_end		9498297	0		==			
ANR	9498680	Identifier	src		9498297	0					
ANR	9498681	Identifier	src_end		9498297	1					
ANR	9498682	ReturnStatement	return 0 ;	107:20:1806:1814	9498297	1	True				
ANR	9498683	PrimaryExpression	0		9498297	0					
ANR	9498684	ExpressionStatement	U += s -> pic . linesize [ 1 ]	111:12:1844:1867	9498297	1	True				
ANR	9498685	AssignmentExpression	U += s -> pic . linesize [ 1 ]		9498297	0		+=			
ANR	9498686	Identifier	U		9498297	0					
ANR	9498687	ArrayIndexing	s -> pic . linesize [ 1 ]		9498297	1					
ANR	9498688	MemberAccess	s -> pic . linesize		9498297	0					
ANR	9498689	PtrMemberAccess	s -> pic		9498297	0					
ANR	9498690	Identifier	s		9498297	0					
ANR	9498691	Identifier	pic		9498297	1					
ANR	9498692	Identifier	linesize		9498297	1					
ANR	9498693	PrimaryExpression	1		9498297	1					
ANR	9498694	ExpressionStatement	V += s -> pic . linesize [ 2 ]	113:12:1882:1905	9498297	2	True				
ANR	9498695	AssignmentExpression	V += s -> pic . linesize [ 2 ]		9498297	0		+=			
ANR	9498696	Identifier	V		9498297	0					
ANR	9498697	ArrayIndexing	s -> pic . linesize [ 2 ]		9498297	1					
ANR	9498698	MemberAccess	s -> pic . linesize		9498297	0					
ANR	9498699	PtrMemberAccess	s -> pic		9498297	0					
ANR	9498700	Identifier	s		9498297	0					
ANR	9498701	Identifier	pic		9498297	1					
ANR	9498702	Identifier	linesize		9498297	1					
ANR	9498703	PrimaryExpression	2		9498297	1					
ANR	9498704	ElseStatement	else		9498297	0					
ANR	9498705	CompoundStatement		119:8:1917:1953	9498297	0					
ANR	9498706	IdentifierDeclStatement	uint8_t * U2 = U + s -> pic . linesize [ 1 ] ;	119:8:1941:1977	9498297	0	True				
ANR	9498707	IdentifierDecl	* U2 = U + s -> pic . linesize [ 1 ]		9498297	0					
ANR	9498708	IdentifierDeclType	uint8_t *		9498297	0					
ANR	9498709	Identifier	U2		9498297	1					
ANR	9498710	AssignmentExpression	* U2 = U + s -> pic . linesize [ 1 ]		9498297	2		=			
ANR	9498711	Identifier	U2		9498297	0					
ANR	9498712	AdditiveExpression	U + s -> pic . linesize [ 1 ]		9498297	1		+			
ANR	9498713	Identifier	U		9498297	0					
ANR	9498714	ArrayIndexing	s -> pic . linesize [ 1 ]		9498297	1					
ANR	9498715	MemberAccess	s -> pic . linesize		9498297	0					
ANR	9498716	PtrMemberAccess	s -> pic		9498297	0					
ANR	9498717	Identifier	s		9498297	0					
ANR	9498718	Identifier	pic		9498297	1					
ANR	9498719	Identifier	linesize		9498297	1					
ANR	9498720	PrimaryExpression	1		9498297	1					
ANR	9498721	IdentifierDeclStatement	uint8_t * V2 = V + s -> pic . linesize [ 2 ] ;	121:8:1988:2024	9498297	1	True				
ANR	9498722	IdentifierDecl	* V2 = V + s -> pic . linesize [ 2 ]		9498297	0					
ANR	9498723	IdentifierDeclType	uint8_t *		9498297	0					
ANR	9498724	Identifier	V2		9498297	1					
ANR	9498725	AssignmentExpression	* V2 = V + s -> pic . linesize [ 2 ]		9498297	2		=			
ANR	9498726	Identifier	V2		9498297	0					
ANR	9498727	AdditiveExpression	V + s -> pic . linesize [ 2 ]		9498297	1		+			
ANR	9498728	Identifier	V		9498297	0					
ANR	9498729	ArrayIndexing	s -> pic . linesize [ 2 ]		9498297	1					
ANR	9498730	MemberAccess	s -> pic . linesize		9498297	0					
ANR	9498731	PtrMemberAccess	s -> pic		9498297	0					
ANR	9498732	Identifier	s		9498297	0					
ANR	9498733	Identifier	pic		9498297	1					
ANR	9498734	Identifier	linesize		9498297	1					
ANR	9498735	PrimaryExpression	2		9498297	1					
ANR	9498736	ForStatement	for ( j = 0 ; j < avctx -> height >> 2 ; j ++ )		9498297	2					
ANR	9498737	ForInit	j = 0 ;	125:13:2042:2047	9498297	0	True				
ANR	9498738	AssignmentExpression	j = 0		9498297	0		=			
ANR	9498739	Identifier	j		9498297	0					
ANR	9498740	PrimaryExpression	0		9498297	1					
ANR	9498741	Condition	j < avctx -> height >> 2	125:20:2049:2070	9498297	1	True				
ANR	9498742	RelationalExpression	j < avctx -> height >> 2		9498297	0		<			
ANR	9498743	Identifier	j		9498297	0					
ANR	9498744	ShiftExpression	avctx -> height >> 2		9498297	1		>>			
ANR	9498745	PtrMemberAccess	avctx -> height		9498297	0					
ANR	9498746	Identifier	avctx		9498297	0					
ANR	9498747	Identifier	height		9498297	1					
ANR	9498748	PrimaryExpression	2		9498297	1					
ANR	9498749	PostIncDecOperationExpression	j ++	125:44:2073:2075	9498297	2	True				
ANR	9498750	Identifier	j		9498297	0					
ANR	9498751	IncDec	++		9498297	1					
ANR	9498752	CompoundStatement		123:49:2007:2007	9498297	3					
ANR	9498753	ForStatement	for ( i = 0 ; i < avctx -> width >> 1 ; i += 2 )		9498297	0					
ANR	9498754	ForInit	i = 0 ;	127:17:2098:2103	9498297	0	True				
ANR	9498755	AssignmentExpression	i = 0		9498297	0		=			
ANR	9498756	Identifier	i		9498297	0					
ANR	9498757	PrimaryExpression	0		9498297	1					
ANR	9498758	Condition	i < avctx -> width >> 1	127:24:2105:2125	9498297	1	True				
ANR	9498759	RelationalExpression	i < avctx -> width >> 1		9498297	0		<			
ANR	9498760	Identifier	i		9498297	0					
ANR	9498761	ShiftExpression	avctx -> width >> 1		9498297	1		>>			
ANR	9498762	PtrMemberAccess	avctx -> width		9498297	0					
ANR	9498763	Identifier	avctx		9498297	0					
ANR	9498764	Identifier	width		9498297	1					
ANR	9498765	PrimaryExpression	1		9498297	1					
ANR	9498766	AssignmentExpression	i += 2	127:47:2128:2133	9498297	2	True	+=			
ANR	9498767	Identifier	i		9498297	0					
ANR	9498768	PrimaryExpression	2		9498297	1					
ANR	9498769	CompoundStatement		125:55:2065:2065	9498297	3					
ANR	9498770	ExpressionStatement	val = * src ++	129:16:2155:2167	9498297	0	True				
ANR	9498771	AssignmentExpression	val = * src ++		9498297	0		=			
ANR	9498772	Identifier	val		9498297	0					
ANR	9498773	UnaryOperationExpression	* src ++		9498297	1					
ANR	9498774	UnaryOperator	*		9498297	0					
ANR	9498775	PostIncDecOperationExpression	src ++		9498297	1					
ANR	9498776	Identifier	src		9498297	0					
ANR	9498777	IncDec	++		9498297	1					
ANR	9498778	IfStatement	if ( val )		9498297	1					
ANR	9498779	Condition	val	131:20:2190:2192	9498297	0	True				
ANR	9498780	Identifier	val		9498297	0					
ANR	9498781	CompoundStatement		129:25:2124:2124	9498297	1					
ANR	9498782	ExpressionStatement	val = AV_RL16 ( table + ( val << 1 ) )	133:20:2218:2252	9498297	0	True				
ANR	9498783	AssignmentExpression	val = AV_RL16 ( table + ( val << 1 ) )		9498297	0		=			
ANR	9498784	Identifier	val		9498297	0					
ANR	9498785	CallExpression	AV_RL16 ( table + ( val << 1 ) )		9498297	1					
ANR	9498786	Callee	AV_RL16		9498297	0					
ANR	9498787	Identifier	AV_RL16		9498297	0					
ANR	9498788	ArgumentList	table + ( val << 1 )		9498297	1					
ANR	9498789	Argument	table + ( val << 1 )		9498297	0					
ANR	9498790	AdditiveExpression	table + ( val << 1 )		9498297	0		+			
ANR	9498791	Identifier	table		9498297	0					
ANR	9498792	ShiftExpression	val << 1		9498297	1		<<			
ANR	9498793	Identifier	val		9498297	0					
ANR	9498794	PrimaryExpression	1		9498297	1					
ANR	9498795	ExpressionStatement	uval = ( val >> 3 ) & 0xF8	135:20:2275:2299	9498297	1	True				
ANR	9498796	AssignmentExpression	uval = ( val >> 3 ) & 0xF8		9498297	0		=			
ANR	9498797	Identifier	uval		9498297	0					
ANR	9498798	BitAndExpression	( val >> 3 ) & 0xF8		9498297	1		&			
ANR	9498799	ShiftExpression	val >> 3		9498297	0		>>			
ANR	9498800	Identifier	val		9498297	0					
ANR	9498801	PrimaryExpression	3		9498297	1					
ANR	9498802	PrimaryExpression	0xF8		9498297	1					
ANR	9498803	ExpressionStatement	vval = ( val >> 8 ) & 0xF8	137:20:2322:2346	9498297	2	True				
ANR	9498804	AssignmentExpression	vval = ( val >> 8 ) & 0xF8		9498297	0		=			
ANR	9498805	Identifier	vval		9498297	0					
ANR	9498806	BitAndExpression	( val >> 8 ) & 0xF8		9498297	1		&			
ANR	9498807	ShiftExpression	val >> 8		9498297	0		>>			
ANR	9498808	Identifier	val		9498297	0					
ANR	9498809	PrimaryExpression	8		9498297	1					
ANR	9498810	PrimaryExpression	0xF8		9498297	1					
ANR	9498811	ExpressionStatement	U [ i ] = U [ i + 1 ] = U2 [ i ] = U2 [ i + 1 ] = uval | ( uval >> 5 )	139:20:2369:2421	9498297	3	True				
ANR	9498812	AssignmentExpression	U [ i ] = U [ i + 1 ] = U2 [ i ] = U2 [ i + 1 ] = uval | ( uval >> 5 )		9498297	0		=			
ANR	9498813	ArrayIndexing	U [ i ]		9498297	0					
ANR	9498814	Identifier	U		9498297	0					
ANR	9498815	Identifier	i		9498297	1					
ANR	9498816	AssignmentExpression	U [ i + 1 ] = U2 [ i ] = U2 [ i + 1 ] = uval | ( uval >> 5 )		9498297	1		=			
ANR	9498817	ArrayIndexing	U [ i + 1 ]		9498297	0					
ANR	9498818	Identifier	U		9498297	0					
ANR	9498819	AdditiveExpression	i + 1		9498297	1		+			
ANR	9498820	Identifier	i		9498297	0					
ANR	9498821	PrimaryExpression	1		9498297	1					
ANR	9498822	AssignmentExpression	U2 [ i ] = U2 [ i + 1 ] = uval | ( uval >> 5 )		9498297	1		=			
ANR	9498823	ArrayIndexing	U2 [ i ]		9498297	0					
ANR	9498824	Identifier	U2		9498297	0					
ANR	9498825	Identifier	i		9498297	1					
ANR	9498826	AssignmentExpression	U2 [ i + 1 ] = uval | ( uval >> 5 )		9498297	1		=			
ANR	9498827	ArrayIndexing	U2 [ i + 1 ]		9498297	0					
ANR	9498828	Identifier	U2		9498297	0					
ANR	9498829	AdditiveExpression	i + 1		9498297	1		+			
ANR	9498830	Identifier	i		9498297	0					
ANR	9498831	PrimaryExpression	1		9498297	1					
ANR	9498832	InclusiveOrExpression	uval | ( uval >> 5 )		9498297	1		|			
ANR	9498833	Identifier	uval		9498297	0					
ANR	9498834	ShiftExpression	uval >> 5		9498297	1		>>			
ANR	9498835	Identifier	uval		9498297	0					
ANR	9498836	PrimaryExpression	5		9498297	1					
ANR	9498837	ExpressionStatement	V [ i ] = V [ i + 1 ] = V2 [ i ] = V2 [ i + 1 ] = vval | ( vval >> 5 )	141:20:2444:2496	9498297	4	True				
ANR	9498838	AssignmentExpression	V [ i ] = V [ i + 1 ] = V2 [ i ] = V2 [ i + 1 ] = vval | ( vval >> 5 )		9498297	0		=			
ANR	9498839	ArrayIndexing	V [ i ]		9498297	0					
ANR	9498840	Identifier	V		9498297	0					
ANR	9498841	Identifier	i		9498297	1					
ANR	9498842	AssignmentExpression	V [ i + 1 ] = V2 [ i ] = V2 [ i + 1 ] = vval | ( vval >> 5 )		9498297	1		=			
ANR	9498843	ArrayIndexing	V [ i + 1 ]		9498297	0					
ANR	9498844	Identifier	V		9498297	0					
ANR	9498845	AdditiveExpression	i + 1		9498297	1		+			
ANR	9498846	Identifier	i		9498297	0					
ANR	9498847	PrimaryExpression	1		9498297	1					
ANR	9498848	AssignmentExpression	V2 [ i ] = V2 [ i + 1 ] = vval | ( vval >> 5 )		9498297	1		=			
ANR	9498849	ArrayIndexing	V2 [ i ]		9498297	0					
ANR	9498850	Identifier	V2		9498297	0					
ANR	9498851	Identifier	i		9498297	1					
ANR	9498852	AssignmentExpression	V2 [ i + 1 ] = vval | ( vval >> 5 )		9498297	1		=			
ANR	9498853	ArrayIndexing	V2 [ i + 1 ]		9498297	0					
ANR	9498854	Identifier	V2		9498297	0					
ANR	9498855	AdditiveExpression	i + 1		9498297	1		+			
ANR	9498856	Identifier	i		9498297	0					
ANR	9498857	PrimaryExpression	1		9498297	1					
ANR	9498858	InclusiveOrExpression	vval | ( vval >> 5 )		9498297	1		|			
ANR	9498859	Identifier	vval		9498297	0					
ANR	9498860	ShiftExpression	vval >> 5		9498297	1		>>			
ANR	9498861	Identifier	vval		9498297	0					
ANR	9498862	PrimaryExpression	5		9498297	1					
ANR	9498863	ExpressionStatement	U += s -> pic . linesize [ 1 ] * 2	147:12:2545:2573	9498297	1	True				
ANR	9498864	AssignmentExpression	U += s -> pic . linesize [ 1 ] * 2		9498297	0		+=			
ANR	9498865	Identifier	U		9498297	0					
ANR	9498866	MultiplicativeExpression	s -> pic . linesize [ 1 ] * 2		9498297	1		*			
ANR	9498867	ArrayIndexing	s -> pic . linesize [ 1 ]		9498297	0					
ANR	9498868	MemberAccess	s -> pic . linesize		9498297	0					
ANR	9498869	PtrMemberAccess	s -> pic		9498297	0					
ANR	9498870	Identifier	s		9498297	0					
ANR	9498871	Identifier	pic		9498297	1					
ANR	9498872	Identifier	linesize		9498297	1					
ANR	9498873	PrimaryExpression	1		9498297	1					
ANR	9498874	PrimaryExpression	2		9498297	1					
ANR	9498875	ExpressionStatement	V += s -> pic . linesize [ 2 ] * 2	149:12:2588:2616	9498297	2	True				
ANR	9498876	AssignmentExpression	V += s -> pic . linesize [ 2 ] * 2		9498297	0		+=			
ANR	9498877	Identifier	V		9498297	0					
ANR	9498878	MultiplicativeExpression	s -> pic . linesize [ 2 ] * 2		9498297	1		*			
ANR	9498879	ArrayIndexing	s -> pic . linesize [ 2 ]		9498297	0					
ANR	9498880	MemberAccess	s -> pic . linesize		9498297	0					
ANR	9498881	PtrMemberAccess	s -> pic		9498297	0					
ANR	9498882	Identifier	s		9498297	0					
ANR	9498883	Identifier	pic		9498297	1					
ANR	9498884	Identifier	linesize		9498297	1					
ANR	9498885	PrimaryExpression	2		9498297	1					
ANR	9498886	PrimaryExpression	2		9498297	1					
ANR	9498887	ExpressionStatement	U2 += s -> pic . linesize [ 1 ] * 2	151:12:2631:2659	9498297	3	True				
ANR	9498888	AssignmentExpression	U2 += s -> pic . linesize [ 1 ] * 2		9498297	0		+=			
ANR	9498889	Identifier	U2		9498297	0					
ANR	9498890	MultiplicativeExpression	s -> pic . linesize [ 1 ] * 2		9498297	1		*			
ANR	9498891	ArrayIndexing	s -> pic . linesize [ 1 ]		9498297	0					
ANR	9498892	MemberAccess	s -> pic . linesize		9498297	0					
ANR	9498893	PtrMemberAccess	s -> pic		9498297	0					
ANR	9498894	Identifier	s		9498297	0					
ANR	9498895	Identifier	pic		9498297	1					
ANR	9498896	Identifier	linesize		9498297	1					
ANR	9498897	PrimaryExpression	1		9498297	1					
ANR	9498898	PrimaryExpression	2		9498297	1					
ANR	9498899	ExpressionStatement	V2 += s -> pic . linesize [ 2 ] * 2	153:12:2674:2702	9498297	4	True				
ANR	9498900	AssignmentExpression	V2 += s -> pic . linesize [ 2 ] * 2		9498297	0		+=			
ANR	9498901	Identifier	V2		9498297	0					
ANR	9498902	MultiplicativeExpression	s -> pic . linesize [ 2 ] * 2		9498297	1		*			
ANR	9498903	ArrayIndexing	s -> pic . linesize [ 2 ]		9498297	0					
ANR	9498904	MemberAccess	s -> pic . linesize		9498297	0					
ANR	9498905	PtrMemberAccess	s -> pic		9498297	0					
ANR	9498906	Identifier	s		9498297	0					
ANR	9498907	Identifier	pic		9498297	1					
ANR	9498908	Identifier	linesize		9498297	1					
ANR	9498909	PrimaryExpression	2		9498297	1					
ANR	9498910	PrimaryExpression	2		9498297	1					
ANR	9498911	ReturnStatement	return 0 ;	161:4:2729:2737	9498297	25	True				
ANR	9498912	PrimaryExpression	0		9498297	0					
ANR	9498913	ReturnType	static int		9498297	1					
ANR	9498914	Identifier	xan_decode_chroma		9498297	2					
ANR	9498915	ParameterList	"AVCodecContext * avctx , AVPacket * avpkt"		9498297	3					
ANR	9498916	Parameter	AVCodecContext * avctx	1:29:29:49	9498297	0	True				
ANR	9498917	ParameterType	AVCodecContext *		9498297	0					
ANR	9498918	Identifier	avctx		9498297	1					
ANR	9498919	Parameter	AVPacket * avpkt	1:52:52:66	9498297	1	True				
ANR	9498920	ParameterType	AVPacket *		9498297	0					
ANR	9498921	Identifier	avpkt		9498297	1					
ANR	9498922	CFGEntryNode	ENTRY		9498297		True				
ANR	9498923	CFGExitNode	EXIT		9498297		True				
ANR	9498924	Symbol	* s -> pic . linesize		9498297						
ANR	9498925	Symbol	avpkt		9498297						
ANR	9498926	Symbol	mode		9498297						
ANR	9498927	Symbol	src_end		9498297						
ANR	9498928	Symbol	* s -> pic . data		9498297						
ANR	9498929	Symbol	V2		9498297						
ANR	9498930	Symbol	val		9498297						
ANR	9498931	Symbol	* U2		9498297						
ANR	9498932	Symbol	offset		9498297						
ANR	9498933	Symbol	bytestream_get_le16		9498297						
ANR	9498934	Symbol	* avctx		9498297						
ANR	9498935	Symbol	dec_size		9498297						
ANR	9498936	Symbol	s -> buffer_size		9498297						
ANR	9498937	Symbol	* src ++		9498297						
ANR	9498938	Symbol	uval		9498297						
ANR	9498939	Symbol	avpkt -> data		9498297						
ANR	9498940	Symbol	AV_RL16		9498297						
ANR	9498941	Symbol	* V2		9498297						
ANR	9498942	Symbol	s -> pic . linesize		9498297						
ANR	9498943	Symbol	avctx -> width		9498297						
ANR	9498944	Symbol	& src		9498297						
ANR	9498945	Symbol	avctx -> height		9498297						
ANR	9498946	Symbol	* s -> pic		9498297						
ANR	9498947	Symbol	U		9498297						
ANR	9498948	Symbol	V		9498297						
ANR	9498949	Symbol	* * s		9498297						
ANR	9498950	Symbol	avpkt -> size		9498297						
ANR	9498951	Symbol	s -> pic		9498297						
ANR	9498952	Symbol	avctx		9498297						
ANR	9498953	Symbol	vval		9498297						
ANR	9498954	Symbol	table		9498297						
ANR	9498955	Symbol	* U		9498297						
ANR	9498956	Symbol	* V		9498297						
ANR	9498957	Symbol	* avpkt		9498297						
ANR	9498958	Symbol	AV_LOG_ERROR		9498297						
ANR	9498959	Symbol	src		9498297						
ANR	9498960	Symbol	i		9498297						
ANR	9498961	Symbol	j		9498297						
ANR	9498962	Symbol	avctx -> priv_data		9498297						
ANR	9498963	Symbol	s -> scratch_buffer		9498297						
ANR	9498964	Symbol	buf		9498297						
ANR	9498965	Symbol	s		9498297						
ANR	9498966	Symbol	* i		9498297						
ANR	9498967	Symbol	AV_RL32		9498297						
ANR	9498968	Symbol	chroma_off		9498297						
ANR	9498969	Symbol	xan_unpack		9498297						
ANR	9498970	Symbol	s -> pic . data		9498297						
ANR	9498971	Symbol	* s		9498297						
ANR	9498972	Symbol	U2		9498297						
