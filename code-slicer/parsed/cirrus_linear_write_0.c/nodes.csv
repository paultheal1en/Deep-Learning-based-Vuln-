command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1313315	File	/home/p4ultr4n/workplace/ReVeal/raw_code/cirrus_linear_write_0.c								
ANR	1313316	Function	cirrus_linear_write	1:0:0:1223							
ANR	1313317	FunctionDef	"cirrus_linear_write (void * opaque , target_phys_addr_t addr , uint64_t val , unsigned size)"		1313316	0					
ANR	1313318	CompoundStatement		5:0:134:1223	1313316	0					
ANR	1313319	IdentifierDeclStatement	CirrusVGAState * s = opaque ;	7:4:141:167	1313316	0	True				
ANR	1313320	IdentifierDecl	* s = opaque		1313316	0					
ANR	1313321	IdentifierDeclType	CirrusVGAState *		1313316	0					
ANR	1313322	Identifier	s		1313316	1					
ANR	1313323	AssignmentExpression	* s = opaque		1313316	2		=			
ANR	1313324	Identifier	opaque		1313316	0					
ANR	1313325	Identifier	opaque		1313316	1					
ANR	1313326	IdentifierDeclStatement	unsigned mode ;	9:4:174:187	1313316	1	True				
ANR	1313327	IdentifierDecl	mode		1313316	0					
ANR	1313328	IdentifierDeclType	unsigned		1313316	0					
ANR	1313329	Identifier	mode		1313316	1					
ANR	1313330	ExpressionStatement	addr &= s -> cirrus_addr_mask	13:4:196:223	1313316	2	True				
ANR	1313331	AssignmentExpression	addr &= s -> cirrus_addr_mask		1313316	0		&=			
ANR	1313332	Identifier	addr		1313316	0					
ANR	1313333	PtrMemberAccess	s -> cirrus_addr_mask		1313316	1					
ANR	1313334	Identifier	s		1313316	0					
ANR	1313335	Identifier	cirrus_addr_mask		1313316	1					
ANR	1313336	IfStatement	if ( ( ( s -> vga . sr [ 0x17 ] & 0x44 ) == 0x44 ) && ( ( addr & s -> linear_mmio_mask ) == s -> linear_mmio_mask ) )		1313316	3					
ANR	1313337	Condition	( ( s -> vga . sr [ 0x17 ] & 0x44 ) == 0x44 ) && ( ( addr & s -> linear_mmio_mask ) == s -> linear_mmio_mask )	17:8:236:336	1313316	0	True				
ANR	1313338	AndExpression	( ( s -> vga . sr [ 0x17 ] & 0x44 ) == 0x44 ) && ( ( addr & s -> linear_mmio_mask ) == s -> linear_mmio_mask )		1313316	0		&&			
ANR	1313339	EqualityExpression	( s -> vga . sr [ 0x17 ] & 0x44 ) == 0x44		1313316	0		==			
ANR	1313340	BitAndExpression	s -> vga . sr [ 0x17 ] & 0x44		1313316	0		&			
ANR	1313341	ArrayIndexing	s -> vga . sr [ 0x17 ]		1313316	0					
ANR	1313342	MemberAccess	s -> vga . sr		1313316	0					
ANR	1313343	PtrMemberAccess	s -> vga		1313316	0					
ANR	1313344	Identifier	s		1313316	0					
ANR	1313345	Identifier	vga		1313316	1					
ANR	1313346	Identifier	sr		1313316	1					
ANR	1313347	PrimaryExpression	0x17		1313316	1					
ANR	1313348	PrimaryExpression	0x44		1313316	1					
ANR	1313349	PrimaryExpression	0x44		1313316	1					
ANR	1313350	EqualityExpression	( addr & s -> linear_mmio_mask ) == s -> linear_mmio_mask		1313316	1		==			
ANR	1313351	BitAndExpression	addr & s -> linear_mmio_mask		1313316	0		&			
ANR	1313352	Identifier	addr		1313316	0					
ANR	1313353	PtrMemberAccess	s -> linear_mmio_mask		1313316	1					
ANR	1313354	Identifier	s		1313316	0					
ANR	1313355	Identifier	linear_mmio_mask		1313316	1					
ANR	1313356	PtrMemberAccess	s -> linear_mmio_mask		1313316	1					
ANR	1313357	Identifier	s		1313316	0					
ANR	1313358	Identifier	linear_mmio_mask		1313316	1					
ANR	1313359	CompoundStatement		15:64:204:204	1313316	1					
ANR	1313360	ExpressionStatement	"cirrus_mmio_blt_write ( s , addr & 0xff , val )"	23:1:369:411	1313316	0	True				
ANR	1313361	CallExpression	"cirrus_mmio_blt_write ( s , addr & 0xff , val )"		1313316	0					
ANR	1313362	Callee	cirrus_mmio_blt_write		1313316	0					
ANR	1313363	Identifier	cirrus_mmio_blt_write		1313316	0					
ANR	1313364	ArgumentList	s		1313316	1					
ANR	1313365	Argument	s		1313316	0					
ANR	1313366	Identifier	s		1313316	0					
ANR	1313367	Argument	addr & 0xff		1313316	1					
ANR	1313368	BitAndExpression	addr & 0xff		1313316	0		&			
ANR	1313369	Identifier	addr		1313316	0					
ANR	1313370	PrimaryExpression	0xff		1313316	1					
ANR	1313371	Argument	val		1313316	2					
ANR	1313372	Identifier	val		1313316	0					
ANR	1313373	ElseStatement	else		1313316	0					
ANR	1313374	IfStatement	if ( s -> cirrus_srcptr != s -> cirrus_srcptr_end )		1313316	0					
ANR	1313375	Condition	s -> cirrus_srcptr != s -> cirrus_srcptr_end	25:15:429:468	1313316	0	True				
ANR	1313376	EqualityExpression	s -> cirrus_srcptr != s -> cirrus_srcptr_end		1313316	0		!=			
ANR	1313377	PtrMemberAccess	s -> cirrus_srcptr		1313316	0					
ANR	1313378	Identifier	s		1313316	0					
ANR	1313379	Identifier	cirrus_srcptr		1313316	1					
ANR	1313380	PtrMemberAccess	s -> cirrus_srcptr_end		1313316	1					
ANR	1313381	Identifier	s		1313316	0					
ANR	1313382	Identifier	cirrus_srcptr_end		1313316	1					
ANR	1313383	CompoundStatement		21:57:336:336	1313316	1					
ANR	1313384	ExpressionStatement	* s -> cirrus_srcptr ++ = ( uint8_t ) val	29:1:490:525	1313316	0	True				
ANR	1313385	AssignmentExpression	* s -> cirrus_srcptr ++ = ( uint8_t ) val		1313316	0		=			
ANR	1313386	UnaryOperationExpression	* s -> cirrus_srcptr ++		1313316	0					
ANR	1313387	UnaryOperator	*		1313316	0					
ANR	1313388	PostIncDecOperationExpression	s -> cirrus_srcptr ++		1313316	1					
ANR	1313389	PtrMemberAccess	s -> cirrus_srcptr		1313316	0					
ANR	1313390	Identifier	s		1313316	0					
ANR	1313391	Identifier	cirrus_srcptr		1313316	1					
ANR	1313392	IncDec	++		1313316	1					
ANR	1313393	CastExpression	( uint8_t ) val		1313316	1					
ANR	1313394	CastTarget	uint8_t		1313316	0					
ANR	1313395	Identifier	val		1313316	1					
ANR	1313396	IfStatement	if ( s -> cirrus_srcptr >= s -> cirrus_srcptr_end )		1313316	1					
ANR	1313397	Condition	s -> cirrus_srcptr >= s -> cirrus_srcptr_end	31:5:533:572	1313316	0	True				
ANR	1313398	RelationalExpression	s -> cirrus_srcptr >= s -> cirrus_srcptr_end		1313316	0		>=			
ANR	1313399	PtrMemberAccess	s -> cirrus_srcptr		1313316	0					
ANR	1313400	Identifier	s		1313316	0					
ANR	1313401	Identifier	cirrus_srcptr		1313316	1					
ANR	1313402	PtrMemberAccess	s -> cirrus_srcptr_end		1313316	1					
ANR	1313403	Identifier	s		1313316	0					
ANR	1313404	Identifier	cirrus_srcptr_end		1313316	1					
ANR	1313405	CompoundStatement		27:47:440:440	1313316	1					
ANR	1313406	ExpressionStatement	cirrus_bitblt_cputovideo_next ( s )	33:5:583:615	1313316	0	True				
ANR	1313407	CallExpression	cirrus_bitblt_cputovideo_next ( s )		1313316	0					
ANR	1313408	Callee	cirrus_bitblt_cputovideo_next		1313316	0					
ANR	1313409	Identifier	cirrus_bitblt_cputovideo_next		1313316	0					
ANR	1313410	ArgumentList	s		1313316	1					
ANR	1313411	Argument	s		1313316	0					
ANR	1313412	Identifier	s		1313316	0					
ANR	1313413	ElseStatement	else		1313316	0					
ANR	1313414	CompoundStatement		33:11:498:498	1313316	0					
ANR	1313415	IfStatement	if ( ( s -> vga . gr [ 0x0B ] & 0x14 ) == 0x14 )		1313316	0					
ANR	1313416	Condition	( s -> vga . gr [ 0x0B ] & 0x14 ) == 0x14	41:5:662:693	1313316	0	True				
ANR	1313417	EqualityExpression	( s -> vga . gr [ 0x0B ] & 0x14 ) == 0x14		1313316	0		==			
ANR	1313418	BitAndExpression	s -> vga . gr [ 0x0B ] & 0x14		1313316	0		&			
ANR	1313419	ArrayIndexing	s -> vga . gr [ 0x0B ]		1313316	0					
ANR	1313420	MemberAccess	s -> vga . gr		1313316	0					
ANR	1313421	PtrMemberAccess	s -> vga		1313316	0					
ANR	1313422	Identifier	s		1313316	0					
ANR	1313423	Identifier	vga		1313316	1					
ANR	1313424	Identifier	gr		1313316	1					
ANR	1313425	PrimaryExpression	0x0B		1313316	1					
ANR	1313426	PrimaryExpression	0x14		1313316	1					
ANR	1313427	PrimaryExpression	0x14		1313316	1					
ANR	1313428	CompoundStatement		37:39:561:561	1313316	1					
ANR	1313429	ExpressionStatement	addr <<= 4	43:5:704:714	1313316	0	True				
ANR	1313430	AssignmentExpression	addr <<= 4		1313316	0		<<=			
ANR	1313431	Identifier	addr		1313316	0					
ANR	1313432	PrimaryExpression	4		1313316	1					
ANR	1313433	ElseStatement	else		1313316	0					
ANR	1313434	IfStatement	if ( s -> vga . gr [ 0x0B ] & 0x02 )		1313316	0					
ANR	1313435	Condition	s -> vga . gr [ 0x0B ] & 0x02	45:12:729:750	1313316	0	True				
ANR	1313436	BitAndExpression	s -> vga . gr [ 0x0B ] & 0x02		1313316	0		&			
ANR	1313437	ArrayIndexing	s -> vga . gr [ 0x0B ]		1313316	0					
ANR	1313438	MemberAccess	s -> vga . gr		1313316	0					
ANR	1313439	PtrMemberAccess	s -> vga		1313316	0					
ANR	1313440	Identifier	s		1313316	0					
ANR	1313441	Identifier	vga		1313316	1					
ANR	1313442	Identifier	gr		1313316	1					
ANR	1313443	PrimaryExpression	0x0B		1313316	1					
ANR	1313444	PrimaryExpression	0x02		1313316	1					
ANR	1313445	CompoundStatement		41:36:618:618	1313316	1					
ANR	1313446	ExpressionStatement	addr <<= 3	47:5:761:771	1313316	0	True				
ANR	1313447	AssignmentExpression	addr <<= 3		1313316	0		<<=			
ANR	1313448	Identifier	addr		1313316	0					
ANR	1313449	PrimaryExpression	3		1313316	1					
ANR	1313450	ExpressionStatement	addr &= s -> cirrus_addr_mask	51:1:779:806	1313316	1	True				
ANR	1313451	AssignmentExpression	addr &= s -> cirrus_addr_mask		1313316	0		&=			
ANR	1313452	Identifier	addr		1313316	0					
ANR	1313453	PtrMemberAccess	s -> cirrus_addr_mask		1313316	1					
ANR	1313454	Identifier	s		1313316	0					
ANR	1313455	Identifier	cirrus_addr_mask		1313316	1					
ANR	1313456	ExpressionStatement	mode = s -> vga . gr [ 0x05 ] & 0x7	55:1:812:840	1313316	2	True				
ANR	1313457	AssignmentExpression	mode = s -> vga . gr [ 0x05 ] & 0x7		1313316	0		=			
ANR	1313458	Identifier	mode		1313316	0					
ANR	1313459	BitAndExpression	s -> vga . gr [ 0x05 ] & 0x7		1313316	1		&			
ANR	1313460	ArrayIndexing	s -> vga . gr [ 0x05 ]		1313316	0					
ANR	1313461	MemberAccess	s -> vga . gr		1313316	0					
ANR	1313462	PtrMemberAccess	s -> vga		1313316	0					
ANR	1313463	Identifier	s		1313316	0					
ANR	1313464	Identifier	vga		1313316	1					
ANR	1313465	Identifier	gr		1313316	1					
ANR	1313466	PrimaryExpression	0x05		1313316	1					
ANR	1313467	PrimaryExpression	0x7		1313316	1					
ANR	1313468	IfStatement	if ( mode < 4 || mode > 5 || ( ( s -> vga . gr [ 0x0B ] & 0x4 ) == 0 ) )		1313316	3					
ANR	1313469	Condition	mode < 4 || mode > 5 || ( ( s -> vga . gr [ 0x0B ] & 0x4 ) == 0 )	57:5:848:901	1313316	0	True				
ANR	1313470	OrExpression	mode < 4 || mode > 5 || ( ( s -> vga . gr [ 0x0B ] & 0x4 ) == 0 )		1313316	0		||			
ANR	1313471	RelationalExpression	mode < 4		1313316	0		<			
ANR	1313472	Identifier	mode		1313316	0					
ANR	1313473	PrimaryExpression	4		1313316	1					
ANR	1313474	OrExpression	mode > 5 || ( ( s -> vga . gr [ 0x0B ] & 0x4 ) == 0 )		1313316	1		||			
ANR	1313475	RelationalExpression	mode > 5		1313316	0		>			
ANR	1313476	Identifier	mode		1313316	0					
ANR	1313477	PrimaryExpression	5		1313316	1					
ANR	1313478	EqualityExpression	( s -> vga . gr [ 0x0B ] & 0x4 ) == 0		1313316	1		==			
ANR	1313479	BitAndExpression	s -> vga . gr [ 0x0B ] & 0x4		1313316	0		&			
ANR	1313480	ArrayIndexing	s -> vga . gr [ 0x0B ]		1313316	0					
ANR	1313481	MemberAccess	s -> vga . gr		1313316	0					
ANR	1313482	PtrMemberAccess	s -> vga		1313316	0					
ANR	1313483	Identifier	s		1313316	0					
ANR	1313484	Identifier	vga		1313316	1					
ANR	1313485	Identifier	gr		1313316	1					
ANR	1313486	PrimaryExpression	0x0B		1313316	1					
ANR	1313487	PrimaryExpression	0x4		1313316	1					
ANR	1313488	PrimaryExpression	0		1313316	1					
ANR	1313489	CompoundStatement		53:61:769:769	1313316	1					
ANR	1313490	ExpressionStatement	* ( s -> vga . vram_ptr + addr ) = ( uint8_t ) val	59:5:912:953	1313316	0	True				
ANR	1313491	AssignmentExpression	* ( s -> vga . vram_ptr + addr ) = ( uint8_t ) val		1313316	0		=			
ANR	1313492	UnaryOperationExpression	* ( s -> vga . vram_ptr + addr )		1313316	0					
ANR	1313493	UnaryOperator	*		1313316	0					
ANR	1313494	AdditiveExpression	s -> vga . vram_ptr + addr		1313316	1		+			
ANR	1313495	MemberAccess	s -> vga . vram_ptr		1313316	0					
ANR	1313496	PtrMemberAccess	s -> vga		1313316	0					
ANR	1313497	Identifier	s		1313316	0					
ANR	1313498	Identifier	vga		1313316	1					
ANR	1313499	Identifier	vram_ptr		1313316	1					
ANR	1313500	Identifier	addr		1313316	1					
ANR	1313501	CastExpression	( uint8_t ) val		1313316	1					
ANR	1313502	CastTarget	uint8_t		1313316	0					
ANR	1313503	Identifier	val		1313316	1					
ANR	1313504	ExpressionStatement	"memory_region_set_dirty ( & s -> vga . vram , addr , 1 )"	61:12:968:1014	1313316	1	True				
ANR	1313505	CallExpression	"memory_region_set_dirty ( & s -> vga . vram , addr , 1 )"		1313316	0					
ANR	1313506	Callee	memory_region_set_dirty		1313316	0					
ANR	1313507	Identifier	memory_region_set_dirty		1313316	0					
ANR	1313508	ArgumentList	& s -> vga . vram		1313316	1					
ANR	1313509	Argument	& s -> vga . vram		1313316	0					
ANR	1313510	UnaryOperationExpression	& s -> vga . vram		1313316	0					
ANR	1313511	UnaryOperator	&		1313316	0					
ANR	1313512	MemberAccess	s -> vga . vram		1313316	1					
ANR	1313513	PtrMemberAccess	s -> vga		1313316	0					
ANR	1313514	Identifier	s		1313316	0					
ANR	1313515	Identifier	vga		1313316	1					
ANR	1313516	Identifier	vram		1313316	1					
ANR	1313517	Argument	addr		1313316	1					
ANR	1313518	Identifier	addr		1313316	0					
ANR	1313519	Argument	1		1313316	2					
ANR	1313520	PrimaryExpression	1		1313316	0					
ANR	1313521	ElseStatement	else		1313316	0					
ANR	1313522	CompoundStatement		59:8:890:890	1313316	0					
ANR	1313523	IfStatement	if ( ( s -> vga . gr [ 0x0B ] & 0x14 ) != 0x14 )		1313316	0					
ANR	1313524	Condition	( s -> vga . gr [ 0x0B ] & 0x14 ) != 0x14	65:9:1037:1068	1313316	0	True				
ANR	1313525	EqualityExpression	( s -> vga . gr [ 0x0B ] & 0x14 ) != 0x14		1313316	0		!=			
ANR	1313526	BitAndExpression	s -> vga . gr [ 0x0B ] & 0x14		1313316	0		&			
ANR	1313527	ArrayIndexing	s -> vga . gr [ 0x0B ]		1313316	0					
ANR	1313528	MemberAccess	s -> vga . gr		1313316	0					
ANR	1313529	PtrMemberAccess	s -> vga		1313316	0					
ANR	1313530	Identifier	s		1313316	0					
ANR	1313531	Identifier	vga		1313316	1					
ANR	1313532	Identifier	gr		1313316	1					
ANR	1313533	PrimaryExpression	0x0B		1313316	1					
ANR	1313534	PrimaryExpression	0x14		1313316	1					
ANR	1313535	PrimaryExpression	0x14		1313316	1					
ANR	1313536	CompoundStatement		61:43:936:936	1313316	1					
ANR	1313537	ExpressionStatement	"cirrus_mem_writeb_mode4and5_8bpp ( s , mode , addr , val )"	67:2:1076:1128	1313316	0	True				
ANR	1313538	CallExpression	"cirrus_mem_writeb_mode4and5_8bpp ( s , mode , addr , val )"		1313316	0					
ANR	1313539	Callee	cirrus_mem_writeb_mode4and5_8bpp		1313316	0					
ANR	1313540	Identifier	cirrus_mem_writeb_mode4and5_8bpp		1313316	0					
ANR	1313541	ArgumentList	s		1313316	1					
ANR	1313542	Argument	s		1313316	0					
ANR	1313543	Identifier	s		1313316	0					
ANR	1313544	Argument	mode		1313316	1					
ANR	1313545	Identifier	mode		1313316	0					
ANR	1313546	Argument	addr		1313316	2					
ANR	1313547	Identifier	addr		1313316	0					
ANR	1313548	Argument	val		1313316	3					
ANR	1313549	Identifier	val		1313316	0					
ANR	1313550	ElseStatement	else		1313316	0					
ANR	1313551	CompoundStatement		65:12:1008:1008	1313316	0					
ANR	1313552	ExpressionStatement	"cirrus_mem_writeb_mode4and5_16bpp ( s , mode , addr , val )"	71:2:1148:1201	1313316	0	True				
ANR	1313553	CallExpression	"cirrus_mem_writeb_mode4and5_16bpp ( s , mode , addr , val )"		1313316	0					
ANR	1313554	Callee	cirrus_mem_writeb_mode4and5_16bpp		1313316	0					
ANR	1313555	Identifier	cirrus_mem_writeb_mode4and5_16bpp		1313316	0					
ANR	1313556	ArgumentList	s		1313316	1					
ANR	1313557	Argument	s		1313316	0					
ANR	1313558	Identifier	s		1313316	0					
ANR	1313559	Argument	mode		1313316	1					
ANR	1313560	Identifier	mode		1313316	0					
ANR	1313561	Argument	addr		1313316	2					
ANR	1313562	Identifier	addr		1313316	0					
ANR	1313563	Argument	val		1313316	3					
ANR	1313564	Identifier	val		1313316	0					
ANR	1313565	ReturnType	static void		1313316	1					
ANR	1313566	Identifier	cirrus_linear_write		1313316	2					
ANR	1313567	ParameterList	"void * opaque , target_phys_addr_t addr , uint64_t val , unsigned size"		1313316	3					
ANR	1313568	Parameter	void * opaque	1:32:32:43	1313316	0	True				
ANR	1313569	ParameterType	void *		1313316	0					
ANR	1313570	Identifier	opaque		1313316	1					
ANR	1313571	Parameter	target_phys_addr_t addr	1:46:46:68	1313316	1	True				
ANR	1313572	ParameterType	target_phys_addr_t		1313316	0					
ANR	1313573	Identifier	addr		1313316	1					
ANR	1313574	Parameter	uint64_t val	3:32:104:115	1313316	2	True				
ANR	1313575	ParameterType	uint64_t		1313316	0					
ANR	1313576	Identifier	val		1313316	1					
ANR	1313577	Parameter	unsigned size	3:46:118:130	1313316	3	True				
ANR	1313578	ParameterType	unsigned		1313316	0					
ANR	1313579	Identifier	size		1313316	1					
ANR	1313580	CFGEntryNode	ENTRY		1313316		True				
ANR	1313581	CFGExitNode	EXIT		1313316		True				
ANR	1313582	Symbol	& s -> vga . vram		1313316						
ANR	1313583	Symbol	s -> cirrus_srcptr_end		1313316						
ANR	1313584	Symbol	* s -> vga . gr		1313316						
ANR	1313585	Symbol	s -> cirrus_addr_mask		1313316						
ANR	1313586	Symbol	& s -> vga		1313316						
ANR	1313587	Symbol	mode		1313316						
ANR	1313588	Symbol	* s -> vga . sr		1313316						
ANR	1313589	Symbol	* s -> vga . vram_ptr		1313316						
ANR	1313590	Symbol	* * s		1313316						
ANR	1313591	Symbol	addr		1313316						
ANR	1313592	Symbol	s -> vga		1313316						
ANR	1313593	Symbol	val		1313316						
ANR	1313594	Symbol	s -> linear_mmio_mask		1313316						
ANR	1313595	Symbol	opaque		1313316						
ANR	1313596	Symbol	* s -> cirrus_srcptr ++		1313316						
ANR	1313597	Symbol	s -> vga . sr		1313316						
ANR	1313598	Symbol	* s -> vga		1313316						
ANR	1313599	Symbol	s -> vga . gr		1313316						
ANR	1313600	Symbol	s -> cirrus_srcptr		1313316						
ANR	1313601	Symbol	* ( s -> vga . vram_ptr + addr )		1313316						
ANR	1313602	Symbol	s		1313316						
ANR	1313603	Symbol	size		1313316						
ANR	1313604	Symbol	* addr		1313316						
ANR	1313605	Symbol	s -> vga . vram_ptr		1313316						
ANR	1313606	Symbol	* s		1313316						
