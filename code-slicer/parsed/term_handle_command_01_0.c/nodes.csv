command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8322060	File	/home/p4ultr4n/workplace/ReVeal/raw_code/term_handle_command_01_0.c								
ANR	8322061	Function	term_handle_command	1:0:0:9172							
ANR	8322062	FunctionDef	term_handle_command (const char * cmdline)		8322061	0					
ANR	8322063	CompoundStatement		3:0:54:9172	8322061	0					
ANR	8322064	IdentifierDeclStatement	"const char * p , * pstart , * typestr ;"	5:4:61:93	8322061	0	True				
ANR	8322065	IdentifierDecl	* p		8322061	0					
ANR	8322066	IdentifierDeclType	const char *		8322061	0					
ANR	8322067	Identifier	p		8322061	1					
ANR	8322068	IdentifierDecl	* pstart		8322061	1					
ANR	8322069	IdentifierDeclType	const char *		8322061	0					
ANR	8322070	Identifier	pstart		8322061	1					
ANR	8322071	IdentifierDecl	* typestr		8322061	2					
ANR	8322072	IdentifierDeclType	const char *		8322061	0					
ANR	8322073	Identifier	typestr		8322061	1					
ANR	8322074	IdentifierDeclStatement	char * q ;	7:4:100:107	8322061	1	True				
ANR	8322075	IdentifierDecl	* q		8322061	0					
ANR	8322076	IdentifierDeclType	char *		8322061	0					
ANR	8322077	Identifier	q		8322061	1					
ANR	8322078	IdentifierDeclStatement	"int c , nb_args , len , i , has_arg ;"	9:4:114:145	8322061	2	True				
ANR	8322079	IdentifierDecl	c		8322061	0					
ANR	8322080	IdentifierDeclType	int		8322061	0					
ANR	8322081	Identifier	c		8322061	1					
ANR	8322082	IdentifierDecl	nb_args		8322061	1					
ANR	8322083	IdentifierDeclType	int		8322061	0					
ANR	8322084	Identifier	nb_args		8322061	1					
ANR	8322085	IdentifierDecl	len		8322061	2					
ANR	8322086	IdentifierDeclType	int		8322061	0					
ANR	8322087	Identifier	len		8322061	1					
ANR	8322088	IdentifierDecl	i		8322061	3					
ANR	8322089	IdentifierDeclType	int		8322061	0					
ANR	8322090	Identifier	i		8322061	1					
ANR	8322091	IdentifierDecl	has_arg		8322061	4					
ANR	8322092	IdentifierDeclType	int		8322061	0					
ANR	8322093	Identifier	has_arg		8322061	1					
ANR	8322094	IdentifierDeclStatement	term_cmd_t * cmd ;	11:4:152:167	8322061	3	True				
ANR	8322095	IdentifierDecl	* cmd		8322061	0					
ANR	8322096	IdentifierDeclType	term_cmd_t *		8322061	0					
ANR	8322097	Identifier	cmd		8322061	1					
ANR	8322098	IdentifierDeclStatement	char cmdname [ 256 ] ;	13:4:174:191	8322061	4	True				
ANR	8322099	IdentifierDecl	cmdname [ 256 ]		8322061	0					
ANR	8322100	IdentifierDeclType	char [ 256 ]		8322061	0					
ANR	8322101	Identifier	cmdname		8322061	1					
ANR	8322102	PrimaryExpression	256		8322061	2					
ANR	8322103	IdentifierDeclStatement	char buf [ 1024 ] ;	15:4:198:212	8322061	5	True				
ANR	8322104	IdentifierDecl	buf [ 1024 ]		8322061	0					
ANR	8322105	IdentifierDeclType	char [ 1024 ]		8322061	0					
ANR	8322106	Identifier	buf		8322061	1					
ANR	8322107	PrimaryExpression	1024		8322061	2					
ANR	8322108	IdentifierDeclStatement	void * str_allocated [ MAX_ARGS ] ;	17:4:219:248	8322061	6	True				
ANR	8322109	IdentifierDecl	* str_allocated [ MAX_ARGS ]		8322061	0					
ANR	8322110	IdentifierDeclType	void * [ MAX_ARGS ]		8322061	0					
ANR	8322111	Identifier	str_allocated		8322061	1					
ANR	8322112	Identifier	MAX_ARGS		8322061	2					
ANR	8322113	IdentifierDeclStatement	void * args [ MAX_ARGS ] ;	19:4:255:275	8322061	7	True				
ANR	8322114	IdentifierDecl	* args [ MAX_ARGS ]		8322061	0					
ANR	8322115	IdentifierDeclType	void * [ MAX_ARGS ]		8322061	0					
ANR	8322116	Identifier	args		8322061	1					
ANR	8322117	Identifier	MAX_ARGS		8322061	2					
ANR	8322118	ExpressionStatement	"term_printf ( ""command='%s'\\n"" , cmdline )"	25:4:298:336	8322061	8	True				
ANR	8322119	CallExpression	"term_printf ( ""command='%s'\\n"" , cmdline )"		8322061	0					
ANR	8322120	Callee	term_printf		8322061	0					
ANR	8322121	Identifier	term_printf		8322061	0					
ANR	8322122	ArgumentList	"""command='%s'\\n"""		8322061	1					
ANR	8322123	Argument	"""command='%s'\\n"""		8322061	0					
ANR	8322124	PrimaryExpression	"""command='%s'\\n"""		8322061	0					
ANR	8322125	Argument	cmdline		8322061	1					
ANR	8322126	Identifier	cmdline		8322061	0					
ANR	8322127	ExpressionStatement	p = cmdline	33:4:393:404	8322061	9	True				
ANR	8322128	AssignmentExpression	p = cmdline		8322061	0		=			
ANR	8322129	Identifier	p		8322061	0					
ANR	8322130	Identifier	cmdline		8322061	1					
ANR	8322131	ExpressionStatement	q = cmdname	35:4:411:422	8322061	10	True				
ANR	8322132	AssignmentExpression	q = cmdname		8322061	0		=			
ANR	8322133	Identifier	q		8322061	0					
ANR	8322134	Identifier	cmdname		8322061	1					
ANR	8322135	WhileStatement	while ( isspace ( * p ) )		8322061	11					
ANR	8322136	Condition	isspace ( * p )	37:11:436:446	8322061	0	True				
ANR	8322137	CallExpression	isspace ( * p )		8322061	0					
ANR	8322138	Callee	isspace		8322061	0					
ANR	8322139	Identifier	isspace		8322061	0					
ANR	8322140	ArgumentList	* p		8322061	1					
ANR	8322141	Argument	* p		8322061	0					
ANR	8322142	UnaryOperationExpression	* p		8322061	0					
ANR	8322143	UnaryOperator	*		8322061	0					
ANR	8322144	Identifier	p		8322061	1					
ANR	8322145	ExpressionStatement	p ++	39:8:458:461	8322061	1	True				
ANR	8322146	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8322147	Identifier	p		8322061	0					
ANR	8322148	IncDec	++		8322061	1					
ANR	8322149	IfStatement	if ( * p == '\\0' )		8322061	12					
ANR	8322150	Condition	* p == '\\0'	41:8:472:481	8322061	0	True				
ANR	8322151	EqualityExpression	* p == '\\0'		8322061	0		==			
ANR	8322152	UnaryOperationExpression	* p		8322061	0					
ANR	8322153	UnaryOperator	*		8322061	0					
ANR	8322154	Identifier	p		8322061	1					
ANR	8322155	PrimaryExpression	'\\0'		8322061	1					
ANR	8322156	ReturnStatement	return ;	43:8:493:499	8322061	1	True				
ANR	8322157	ExpressionStatement	pstart = p	45:4:506:516	8322061	13	True				
ANR	8322158	AssignmentExpression	pstart = p		8322061	0		=			
ANR	8322159	Identifier	pstart		8322061	0					
ANR	8322160	Identifier	p		8322061	1					
ANR	8322161	WhileStatement	while ( * p != '\\0' && * p != '/' && ! isspace ( * p ) )		8322061	14					
ANR	8322162	Condition	* p != '\\0' && * p != '/' && ! isspace ( * p )	47:11:530:568	8322061	0	True				
ANR	8322163	AndExpression	* p != '\\0' && * p != '/' && ! isspace ( * p )		8322061	0		&&			
ANR	8322164	EqualityExpression	* p != '\\0'		8322061	0		!=			
ANR	8322165	UnaryOperationExpression	* p		8322061	0					
ANR	8322166	UnaryOperator	*		8322061	0					
ANR	8322167	Identifier	p		8322061	1					
ANR	8322168	PrimaryExpression	'\\0'		8322061	1					
ANR	8322169	AndExpression	* p != '/' && ! isspace ( * p )		8322061	1		&&			
ANR	8322170	EqualityExpression	* p != '/'		8322061	0		!=			
ANR	8322171	UnaryOperationExpression	* p		8322061	0					
ANR	8322172	UnaryOperator	*		8322061	0					
ANR	8322173	Identifier	p		8322061	1					
ANR	8322174	PrimaryExpression	'/'		8322061	1					
ANR	8322175	UnaryOperationExpression	! isspace ( * p )		8322061	1					
ANR	8322176	UnaryOperator	!		8322061	0					
ANR	8322177	CallExpression	isspace ( * p )		8322061	1					
ANR	8322178	Callee	isspace		8322061	0					
ANR	8322179	Identifier	isspace		8322061	0					
ANR	8322180	ArgumentList	* p		8322061	1					
ANR	8322181	Argument	* p		8322061	0					
ANR	8322182	UnaryOperationExpression	* p		8322061	0					
ANR	8322183	UnaryOperator	*		8322061	0					
ANR	8322184	Identifier	p		8322061	1					
ANR	8322185	ExpressionStatement	p ++	49:8:580:583	8322061	1	True				
ANR	8322186	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8322187	Identifier	p		8322061	0					
ANR	8322188	IncDec	++		8322061	1					
ANR	8322189	ExpressionStatement	len = p - pstart	51:4:590:606	8322061	15	True				
ANR	8322190	AssignmentExpression	len = p - pstart		8322061	0		=			
ANR	8322191	Identifier	len		8322061	0					
ANR	8322192	AdditiveExpression	p - pstart		8322061	1		-			
ANR	8322193	Identifier	p		8322061	0					
ANR	8322194	Identifier	pstart		8322061	1					
ANR	8322195	IfStatement	if ( len > sizeof ( cmdname ) - 1 )		8322061	16					
ANR	8322196	Condition	len > sizeof ( cmdname ) - 1	53:8:617:641	8322061	0	True				
ANR	8322197	RelationalExpression	len > sizeof ( cmdname ) - 1		8322061	0		>			
ANR	8322198	Identifier	len		8322061	0					
ANR	8322199	AdditiveExpression	sizeof ( cmdname ) - 1		8322061	1		-			
ANR	8322200	SizeofExpression	sizeof ( cmdname )		8322061	0					
ANR	8322201	Sizeof	sizeof		8322061	0					
ANR	8322202	SizeofOperand	cmdname		8322061	1					
ANR	8322203	PrimaryExpression	1		8322061	1					
ANR	8322204	ExpressionStatement	len = sizeof ( cmdname ) - 1	55:8:653:678	8322061	1	True				
ANR	8322205	AssignmentExpression	len = sizeof ( cmdname ) - 1		8322061	0		=			
ANR	8322206	Identifier	len		8322061	0					
ANR	8322207	AdditiveExpression	sizeof ( cmdname ) - 1		8322061	1		-			
ANR	8322208	SizeofExpression	sizeof ( cmdname )		8322061	0					
ANR	8322209	Sizeof	sizeof		8322061	0					
ANR	8322210	SizeofOperand	cmdname		8322061	1					
ANR	8322211	PrimaryExpression	1		8322061	1					
ANR	8322212	ExpressionStatement	"memcpy ( cmdname , pstart , len )"	57:4:685:713	8322061	17	True				
ANR	8322213	CallExpression	"memcpy ( cmdname , pstart , len )"		8322061	0					
ANR	8322214	Callee	memcpy		8322061	0					
ANR	8322215	Identifier	memcpy		8322061	0					
ANR	8322216	ArgumentList	cmdname		8322061	1					
ANR	8322217	Argument	cmdname		8322061	0					
ANR	8322218	Identifier	cmdname		8322061	0					
ANR	8322219	Argument	pstart		8322061	1					
ANR	8322220	Identifier	pstart		8322061	0					
ANR	8322221	Argument	len		8322061	2					
ANR	8322222	Identifier	len		8322061	0					
ANR	8322223	ExpressionStatement	cmdname [ len ] = '\\0'	59:4:720:739	8322061	18	True				
ANR	8322224	AssignmentExpression	cmdname [ len ] = '\\0'		8322061	0		=			
ANR	8322225	ArrayIndexing	cmdname [ len ]		8322061	0					
ANR	8322226	Identifier	cmdname		8322061	0					
ANR	8322227	Identifier	len		8322061	1					
ANR	8322228	PrimaryExpression	'\\0'		8322061	1					
ANR	8322229	ForStatement	for ( cmd = term_cmds ; cmd -> name != NULL ; cmd ++ )		8322061	19					
ANR	8322230	ForInit	cmd = term_cmds ;	65:8:784:799	8322061	0	True				
ANR	8322231	AssignmentExpression	cmd = term_cmds		8322061	0		=			
ANR	8322232	Identifier	cmd		8322061	0					
ANR	8322233	Identifier	term_cmds		8322061	1					
ANR	8322234	Condition	cmd -> name != NULL	65:25:801:817	8322061	1	True				
ANR	8322235	EqualityExpression	cmd -> name != NULL		8322061	0		!=			
ANR	8322236	PtrMemberAccess	cmd -> name		8322061	0					
ANR	8322237	Identifier	cmd		8322061	0					
ANR	8322238	Identifier	name		8322061	1					
ANR	8322239	Identifier	NULL		8322061	1					
ANR	8322240	PostIncDecOperationExpression	cmd ++	65:44:820:824	8322061	2	True				
ANR	8322241	Identifier	cmd		8322061	0					
ANR	8322242	IncDec	++		8322061	1					
ANR	8322243	CompoundStatement		63:51:772:772	8322061	3					
ANR	8322244	IfStatement	"if ( compare_cmd ( cmdname , cmd -> name ) )"		8322061	0					
ANR	8322245	Condition	"compare_cmd ( cmdname , cmd -> name )"	67:12:842:872	8322061	0	True				
ANR	8322246	CallExpression	"compare_cmd ( cmdname , cmd -> name )"		8322061	0					
ANR	8322247	Callee	compare_cmd		8322061	0					
ANR	8322248	Identifier	compare_cmd		8322061	0					
ANR	8322249	ArgumentList	cmdname		8322061	1					
ANR	8322250	Argument	cmdname		8322061	0					
ANR	8322251	Identifier	cmdname		8322061	0					
ANR	8322252	Argument	cmd -> name		8322061	1					
ANR	8322253	PtrMemberAccess	cmd -> name		8322061	0					
ANR	8322254	Identifier	cmd		8322061	0					
ANR	8322255	Identifier	name		8322061	1					
ANR	8322256	GotoStatement	goto found ;	69:12:889:899	8322061	1	True				
ANR	8322257	Identifier	found		8322061	0					
ANR	8322258	ExpressionStatement	"term_printf ( ""unknown command: '%s'\\n"" , cmdname )"	73:4:913:960	8322061	20	True				
ANR	8322259	CallExpression	"term_printf ( ""unknown command: '%s'\\n"" , cmdname )"		8322061	0					
ANR	8322260	Callee	term_printf		8322061	0					
ANR	8322261	Identifier	term_printf		8322061	0					
ANR	8322262	ArgumentList	"""unknown command: '%s'\\n"""		8322061	1					
ANR	8322263	Argument	"""unknown command: '%s'\\n"""		8322061	0					
ANR	8322264	PrimaryExpression	"""unknown command: '%s'\\n"""		8322061	0					
ANR	8322265	Argument	cmdname		8322061	1					
ANR	8322266	Identifier	cmdname		8322061	0					
ANR	8322267	ReturnStatement	return ;	75:4:967:973	8322061	21	True				
ANR	8322268	Label	found :	77:1:977:982	8322061	22	True				
ANR	8322269	Identifier	found		8322061	0					
ANR	8322270	ForStatement	for ( i = 0 ; i < MAX_ARGS ; i ++ )		8322061	23					
ANR	8322271	ForInit	i = 0 ;	81:8:995:1000	8322061	0	True				
ANR	8322272	AssignmentExpression	i = 0		8322061	0		=			
ANR	8322273	Identifier	i		8322061	0					
ANR	8322274	PrimaryExpression	0		8322061	1					
ANR	8322275	Condition	i < MAX_ARGS	81:15:1002:1013	8322061	1	True				
ANR	8322276	RelationalExpression	i < MAX_ARGS		8322061	0		<			
ANR	8322277	Identifier	i		8322061	0					
ANR	8322278	Identifier	MAX_ARGS		8322061	1					
ANR	8322279	PostIncDecOperationExpression	i ++	81:29:1016:1018	8322061	2	True				
ANR	8322280	Identifier	i		8322061	0					
ANR	8322281	IncDec	++		8322061	1					
ANR	8322282	ExpressionStatement	str_allocated [ i ] = NULL	83:8:1030:1053	8322061	3	True				
ANR	8322283	AssignmentExpression	str_allocated [ i ] = NULL		8322061	0		=			
ANR	8322284	ArrayIndexing	str_allocated [ i ]		8322061	0					
ANR	8322285	Identifier	str_allocated		8322061	0					
ANR	8322286	Identifier	i		8322061	1					
ANR	8322287	Identifier	NULL		8322061	1					
ANR	8322288	ExpressionStatement	typestr = cmd -> args_type	89:4:1098:1122	8322061	24	True				
ANR	8322289	AssignmentExpression	typestr = cmd -> args_type		8322061	0		=			
ANR	8322290	Identifier	typestr		8322061	0					
ANR	8322291	PtrMemberAccess	cmd -> args_type		8322061	1					
ANR	8322292	Identifier	cmd		8322061	0					
ANR	8322293	Identifier	args_type		8322061	1					
ANR	8322294	ExpressionStatement	nb_args = 0	91:4:1129:1140	8322061	25	True				
ANR	8322295	AssignmentExpression	nb_args = 0		8322061	0		=			
ANR	8322296	Identifier	nb_args		8322061	0					
ANR	8322297	PrimaryExpression	0		8322061	1					
ANR	8322298	ForStatement	for ( ; ; )		8322061	26					
ANR	8322299	CompoundStatement		91:12:1100:1100	8322061	0					
ANR	8322300	ExpressionStatement	c = * typestr	95:8:1166:1178	8322061	0	True				
ANR	8322301	AssignmentExpression	c = * typestr		8322061	0		=			
ANR	8322302	Identifier	c		8322061	0					
ANR	8322303	UnaryOperationExpression	* typestr		8322061	1					
ANR	8322304	UnaryOperator	*		8322061	0					
ANR	8322305	Identifier	typestr		8322061	1					
ANR	8322306	IfStatement	if ( c == '\\0' )		8322061	1					
ANR	8322307	Condition	c == '\\0'	97:12:1193:1201	8322061	0	True				
ANR	8322308	EqualityExpression	c == '\\0'		8322061	0		==			
ANR	8322309	Identifier	c		8322061	0					
ANR	8322310	PrimaryExpression	'\\0'		8322061	1					
ANR	8322311	BreakStatement	break ;	99:12:1217:1222	8322061	1	True				
ANR	8322312	ExpressionStatement	typestr ++	101:8:1233:1242	8322061	2	True				
ANR	8322313	PostIncDecOperationExpression	typestr ++		8322061	0					
ANR	8322314	Identifier	typestr		8322061	0					
ANR	8322315	IncDec	++		8322061	1					
ANR	8322316	SwitchStatement	switch ( c )		8322061	3					
ANR	8322317	Condition	c	103:15:1260:1260	8322061	0	True				
ANR	8322318	Identifier	c		8322061	0					
ANR	8322319	CompoundStatement		101:18:1208:1208	8322061	1					
ANR	8322320	Label	case 'F' :	105:8:1274:1282	8322061	0	True				
ANR	8322321	Label	case 'B' :	107:8:1293:1301	8322061	1	True				
ANR	8322322	Label	case 's' :	109:8:1312:1320	8322061	2	True				
ANR	8322323	CompoundStatement		113:16:1325:1334	8322061	3					
ANR	8322324	IdentifierDeclStatement	int ret ;	113:16:1354:1361	8322061	0	True				
ANR	8322325	IdentifierDecl	ret		8322061	0					
ANR	8322326	IdentifierDeclType	int		8322061	0					
ANR	8322327	Identifier	ret		8322061	1					
ANR	8322328	IdentifierDeclStatement	char * str ;	115:16:1380:1389	8322061	1	True				
ANR	8322329	IdentifierDecl	* str		8322061	0					
ANR	8322330	IdentifierDeclType	char *		8322061	0					
ANR	8322331	Identifier	str		8322061	1					
ANR	8322332	WhileStatement	while ( isspace ( * p ) )		8322061	2					
ANR	8322333	Condition	isspace ( * p )	119:23:1433:1443	8322061	0	True				
ANR	8322334	CallExpression	isspace ( * p )		8322061	0					
ANR	8322335	Callee	isspace		8322061	0					
ANR	8322336	Identifier	isspace		8322061	0					
ANR	8322337	ArgumentList	* p		8322061	1					
ANR	8322338	Argument	* p		8322061	0					
ANR	8322339	UnaryOperationExpression	* p		8322061	0					
ANR	8322340	UnaryOperator	*		8322061	0					
ANR	8322341	Identifier	p		8322061	1					
ANR	8322342	ExpressionStatement	p ++	121:20:1468:1471	8322061	1	True				
ANR	8322343	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8322344	Identifier	p		8322061	0					
ANR	8322345	IncDec	++		8322061	1					
ANR	8322346	IfStatement	if ( * typestr == '?' )		8322061	3					
ANR	8322347	Condition	* typestr == '?'	123:20:1494:1508	8322061	0	True				
ANR	8322348	EqualityExpression	* typestr == '?'		8322061	0		==			
ANR	8322349	UnaryOperationExpression	* typestr		8322061	0					
ANR	8322350	UnaryOperator	*		8322061	0					
ANR	8322351	Identifier	typestr		8322061	1					
ANR	8322352	PrimaryExpression	'?'		8322061	1					
ANR	8322353	CompoundStatement		121:37:1456:1456	8322061	1					
ANR	8322354	ExpressionStatement	typestr ++	125:20:1534:1543	8322061	0	True				
ANR	8322355	PostIncDecOperationExpression	typestr ++		8322061	0					
ANR	8322356	Identifier	typestr		8322061	0					
ANR	8322357	IncDec	++		8322061	1					
ANR	8322358	IfStatement	if ( * p == '\\0' )		8322061	1					
ANR	8322359	Condition	* p == '\\0'	127:24:1570:1579	8322061	0	True				
ANR	8322360	EqualityExpression	* p == '\\0'		8322061	0		==			
ANR	8322361	UnaryOperationExpression	* p		8322061	0					
ANR	8322362	UnaryOperator	*		8322061	0					
ANR	8322363	Identifier	p		8322061	1					
ANR	8322364	PrimaryExpression	'\\0'		8322061	1					
ANR	8322365	CompoundStatement		125:36:1527:1527	8322061	1					
ANR	8322366	ExpressionStatement	str = NULL	131:24:1674:1684	8322061	0	True				
ANR	8322367	AssignmentExpression	str = NULL		8322061	0		=			
ANR	8322368	Identifier	str		8322061	0					
ANR	8322369	Identifier	NULL		8322061	1					
ANR	8322370	GotoStatement	goto add_str ;	133:24:1711:1723	8322061	1	True				
ANR	8322371	Identifier	add_str		8322061	0					
ANR	8322372	ExpressionStatement	"ret = get_str ( buf , sizeof ( buf ) , & p )"	139:16:1784:1819	8322061	4	True				
ANR	8322373	AssignmentExpression	"ret = get_str ( buf , sizeof ( buf ) , & p )"		8322061	0		=			
ANR	8322374	Identifier	ret		8322061	0					
ANR	8322375	CallExpression	"get_str ( buf , sizeof ( buf ) , & p )"		8322061	1					
ANR	8322376	Callee	get_str		8322061	0					
ANR	8322377	Identifier	get_str		8322061	0					
ANR	8322378	ArgumentList	buf		8322061	1					
ANR	8322379	Argument	buf		8322061	0					
ANR	8322380	Identifier	buf		8322061	0					
ANR	8322381	Argument	sizeof ( buf )		8322061	1					
ANR	8322382	SizeofExpression	sizeof ( buf )		8322061	0					
ANR	8322383	Sizeof	sizeof		8322061	0					
ANR	8322384	SizeofOperand	buf		8322061	1					
ANR	8322385	Argument	& p		8322061	2					
ANR	8322386	UnaryOperationExpression	& p		8322061	0					
ANR	8322387	UnaryOperator	&		8322061	0					
ANR	8322388	Identifier	p		8322061	1					
ANR	8322389	IfStatement	if ( ret < 0 )		8322061	5					
ANR	8322390	Condition	ret < 0	141:20:1842:1848	8322061	0	True				
ANR	8322391	RelationalExpression	ret < 0		8322061	0		<			
ANR	8322392	Identifier	ret		8322061	0					
ANR	8322393	PrimaryExpression	0		8322061	1					
ANR	8322394	CompoundStatement		139:29:1796:1796	8322061	1					
ANR	8322395	SwitchStatement	switch ( c )		8322061	0					
ANR	8322396	Condition	c	143:27:1881:1881	8322061	0	True				
ANR	8322397	Identifier	c		8322061	0					
ANR	8322398	CompoundStatement		141:30:1829:1829	8322061	1					
ANR	8322399	Label	case 'F' :	145:20:1907:1915	8322061	0	True				
ANR	8322400	ExpressionStatement	"term_printf ( ""%s: filename expected\\n"" , cmdname )"	147:24:1942:1989	8322061	1	True				
ANR	8322401	CallExpression	"term_printf ( ""%s: filename expected\\n"" , cmdname )"		8322061	0					
ANR	8322402	Callee	term_printf		8322061	0					
ANR	8322403	Identifier	term_printf		8322061	0					
ANR	8322404	ArgumentList	"""%s: filename expected\\n"""		8322061	1					
ANR	8322405	Argument	"""%s: filename expected\\n"""		8322061	0					
ANR	8322406	PrimaryExpression	"""%s: filename expected\\n"""		8322061	0					
ANR	8322407	Argument	cmdname		8322061	1					
ANR	8322408	Identifier	cmdname		8322061	0					
ANR	8322409	BreakStatement	break ;	149:24:2016:2021	8322061	2	True				
ANR	8322410	Label	case 'B' :	151:20:2044:2052	8322061	3	True				
ANR	8322411	ExpressionStatement	"term_printf ( ""%s: block device name expected\\n"" , cmdname )"	153:24:2079:2135	8322061	4	True				
ANR	8322412	CallExpression	"term_printf ( ""%s: block device name expected\\n"" , cmdname )"		8322061	0					
ANR	8322413	Callee	term_printf		8322061	0					
ANR	8322414	Identifier	term_printf		8322061	0					
ANR	8322415	ArgumentList	"""%s: block device name expected\\n"""		8322061	1					
ANR	8322416	Argument	"""%s: block device name expected\\n"""		8322061	0					
ANR	8322417	PrimaryExpression	"""%s: block device name expected\\n"""		8322061	0					
ANR	8322418	Argument	cmdname		8322061	1					
ANR	8322419	Identifier	cmdname		8322061	0					
ANR	8322420	BreakStatement	break ;	155:24:2162:2167	8322061	5	True				
ANR	8322421	Label	default :	157:20:2190:2197	8322061	6	True				
ANR	8322422	Identifier	default		8322061	0					
ANR	8322423	ExpressionStatement	"term_printf ( ""%s: string expected\\n"" , cmdname )"	159:24:2224:2269	8322061	7	True				
ANR	8322424	CallExpression	"term_printf ( ""%s: string expected\\n"" , cmdname )"		8322061	0					
ANR	8322425	Callee	term_printf		8322061	0					
ANR	8322426	Identifier	term_printf		8322061	0					
ANR	8322427	ArgumentList	"""%s: string expected\\n"""		8322061	1					
ANR	8322428	Argument	"""%s: string expected\\n"""		8322061	0					
ANR	8322429	PrimaryExpression	"""%s: string expected\\n"""		8322061	0					
ANR	8322430	Argument	cmdname		8322061	1					
ANR	8322431	Identifier	cmdname		8322061	0					
ANR	8322432	BreakStatement	break ;	161:24:2296:2301	8322061	8	True				
ANR	8322433	GotoStatement	goto fail ;	165:20:2347:2356	8322061	1	True				
ANR	8322434	Identifier	fail		8322061	0					
ANR	8322435	ExpressionStatement	str = qemu_malloc ( strlen ( buf ) + 1 )	169:16:2394:2428	8322061	6	True				
ANR	8322436	AssignmentExpression	str = qemu_malloc ( strlen ( buf ) + 1 )		8322061	0		=			
ANR	8322437	Identifier	str		8322061	0					
ANR	8322438	CallExpression	qemu_malloc ( strlen ( buf ) + 1 )		8322061	1					
ANR	8322439	Callee	qemu_malloc		8322061	0					
ANR	8322440	Identifier	qemu_malloc		8322061	0					
ANR	8322441	ArgumentList	strlen ( buf ) + 1		8322061	1					
ANR	8322442	Argument	strlen ( buf ) + 1		8322061	0					
ANR	8322443	AdditiveExpression	strlen ( buf ) + 1		8322061	0		+			
ANR	8322444	CallExpression	strlen ( buf )		8322061	0					
ANR	8322445	Callee	strlen		8322061	0					
ANR	8322446	Identifier	strlen		8322061	0					
ANR	8322447	ArgumentList	buf		8322061	1					
ANR	8322448	Argument	buf		8322061	0					
ANR	8322449	Identifier	buf		8322061	0					
ANR	8322450	PrimaryExpression	1		8322061	1					
ANR	8322451	ExpressionStatement	"strcpy ( str , buf )"	171:16:2447:2463	8322061	7	True				
ANR	8322452	CallExpression	"strcpy ( str , buf )"		8322061	0					
ANR	8322453	Callee	strcpy		8322061	0					
ANR	8322454	Identifier	strcpy		8322061	0					
ANR	8322455	ArgumentList	str		8322061	1					
ANR	8322456	Argument	str		8322061	0					
ANR	8322457	Identifier	str		8322061	0					
ANR	8322458	Argument	buf		8322061	1					
ANR	8322459	Identifier	buf		8322061	0					
ANR	8322460	ExpressionStatement	str_allocated [ nb_args ] = str	173:16:2482:2510	8322061	8	True				
ANR	8322461	AssignmentExpression	str_allocated [ nb_args ] = str		8322061	0		=			
ANR	8322462	ArrayIndexing	str_allocated [ nb_args ]		8322061	0					
ANR	8322463	Identifier	str_allocated		8322061	0					
ANR	8322464	Identifier	nb_args		8322061	1					
ANR	8322465	Identifier	str		8322061	1					
ANR	8322466	Label	add_str :	175:12:2525:2532	8322061	9	True				
ANR	8322467	Identifier	add_str		8322061	0					
ANR	8322468	IfStatement	if ( nb_args >= MAX_ARGS )		8322061	10					
ANR	8322469	Condition	nb_args >= MAX_ARGS	177:20:2555:2573	8322061	0	True				
ANR	8322470	RelationalExpression	nb_args >= MAX_ARGS		8322061	0		>=			
ANR	8322471	Identifier	nb_args		8322061	0					
ANR	8322472	Identifier	MAX_ARGS		8322061	1					
ANR	8322473	CompoundStatement		175:41:2521:2521	8322061	1					
ANR	8322474	Label	error_args :	179:16:2595:2605	8322061	0	True				
ANR	8322475	Identifier	error_args		8322061	0					
ANR	8322476	ExpressionStatement	"term_printf ( ""%s: too many arguments\\n"" , cmdname )"	181:20:2628:2676	8322061	1	True				
ANR	8322477	CallExpression	"term_printf ( ""%s: too many arguments\\n"" , cmdname )"		8322061	0					
ANR	8322478	Callee	term_printf		8322061	0					
ANR	8322479	Identifier	term_printf		8322061	0					
ANR	8322480	ArgumentList	"""%s: too many arguments\\n"""		8322061	1					
ANR	8322481	Argument	"""%s: too many arguments\\n"""		8322061	0					
ANR	8322482	PrimaryExpression	"""%s: too many arguments\\n"""		8322061	0					
ANR	8322483	Argument	cmdname		8322061	1					
ANR	8322484	Identifier	cmdname		8322061	0					
ANR	8322485	GotoStatement	goto fail ;	183:20:2699:2708	8322061	2	True				
ANR	8322486	Identifier	fail		8322061	0					
ANR	8322487	ExpressionStatement	args [ nb_args ++ ] = str	187:16:2746:2767	8322061	11	True				
ANR	8322488	AssignmentExpression	args [ nb_args ++ ] = str		8322061	0		=			
ANR	8322489	ArrayIndexing	args [ nb_args ++ ]		8322061	0					
ANR	8322490	Identifier	args		8322061	0					
ANR	8322491	PostIncDecOperationExpression	nb_args ++		8322061	1					
ANR	8322492	Identifier	nb_args		8322061	0					
ANR	8322493	IncDec	++		8322061	1					
ANR	8322494	Identifier	str		8322061	1					
ANR	8322495	BreakStatement	break ;	191:12:2797:2802	8322061	4	True				
ANR	8322496	Label	case '/' :	193:8:2813:2821	8322061	5	True				
ANR	8322497	CompoundStatement		195:16:2800:2823	8322061	6					
ANR	8322498	IdentifierDeclStatement	"int count , format , size ;"	197:16:2855:2878	8322061	0	True				
ANR	8322499	IdentifierDecl	count		8322061	0					
ANR	8322500	IdentifierDeclType	int		8322061	0					
ANR	8322501	Identifier	count		8322061	1					
ANR	8322502	IdentifierDecl	format		8322061	1					
ANR	8322503	IdentifierDeclType	int		8322061	0					
ANR	8322504	Identifier	format		8322061	1					
ANR	8322505	IdentifierDecl	size		8322061	2					
ANR	8322506	IdentifierDeclType	int		8322061	0					
ANR	8322507	Identifier	size		8322061	1					
ANR	8322508	WhileStatement	while ( isspace ( * p ) )		8322061	1					
ANR	8322509	Condition	isspace ( * p )	201:23:2922:2932	8322061	0	True				
ANR	8322510	CallExpression	isspace ( * p )		8322061	0					
ANR	8322511	Callee	isspace		8322061	0					
ANR	8322512	Identifier	isspace		8322061	0					
ANR	8322513	ArgumentList	* p		8322061	1					
ANR	8322514	Argument	* p		8322061	0					
ANR	8322515	UnaryOperationExpression	* p		8322061	0					
ANR	8322516	UnaryOperator	*		8322061	0					
ANR	8322517	Identifier	p		8322061	1					
ANR	8322518	ExpressionStatement	p ++	203:20:2956:2959	8322061	1	True				
ANR	8322519	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8322520	Identifier	p		8322061	0					
ANR	8322521	IncDec	++		8322061	1					
ANR	8322522	IfStatement	if ( * p == '/' )		8322061	2					
ANR	8322523	Condition	* p == '/'	205:20:2982:2990	8322061	0	True				
ANR	8322524	EqualityExpression	* p == '/'		8322061	0		==			
ANR	8322525	UnaryOperationExpression	* p		8322061	0					
ANR	8322526	UnaryOperator	*		8322061	0					
ANR	8322527	Identifier	p		8322061	1					
ANR	8322528	PrimaryExpression	'/'		8322061	1					
ANR	8322529	CompoundStatement		203:31:2938:2938	8322061	1					
ANR	8322530	ExpressionStatement	p ++	209:20:3056:3059	8322061	0	True				
ANR	8322531	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8322532	Identifier	p		8322061	0					
ANR	8322533	IncDec	++		8322061	1					
ANR	8322534	ExpressionStatement	count = 1	211:20:3082:3091	8322061	1	True				
ANR	8322535	AssignmentExpression	count = 1		8322061	0		=			
ANR	8322536	Identifier	count		8322061	0					
ANR	8322537	PrimaryExpression	1		8322061	1					
ANR	8322538	IfStatement	if ( isdigit ( * p ) )		8322061	2					
ANR	8322539	Condition	isdigit ( * p )	213:24:3118:3128	8322061	0	True				
ANR	8322540	CallExpression	isdigit ( * p )		8322061	0					
ANR	8322541	Callee	isdigit		8322061	0					
ANR	8322542	Identifier	isdigit		8322061	0					
ANR	8322543	ArgumentList	* p		8322061	1					
ANR	8322544	Argument	* p		8322061	0					
ANR	8322545	UnaryOperationExpression	* p		8322061	0					
ANR	8322546	UnaryOperator	*		8322061	0					
ANR	8322547	Identifier	p		8322061	1					
ANR	8322548	CompoundStatement		211:37:3076:3076	8322061	1					
ANR	8322549	ExpressionStatement	count = 0	215:24:3158:3167	8322061	0	True				
ANR	8322550	AssignmentExpression	count = 0		8322061	0		=			
ANR	8322551	Identifier	count		8322061	0					
ANR	8322552	PrimaryExpression	0		8322061	1					
ANR	8322553	WhileStatement	while ( isdigit ( * p ) )		8322061	1					
ANR	8322554	Condition	isdigit ( * p )	217:31:3201:3211	8322061	0	True				
ANR	8322555	CallExpression	isdigit ( * p )		8322061	0					
ANR	8322556	Callee	isdigit		8322061	0					
ANR	8322557	Identifier	isdigit		8322061	0					
ANR	8322558	ArgumentList	* p		8322061	1					
ANR	8322559	Argument	* p		8322061	0					
ANR	8322560	UnaryOperationExpression	* p		8322061	0					
ANR	8322561	UnaryOperator	*		8322061	0					
ANR	8322562	Identifier	p		8322061	1					
ANR	8322563	CompoundStatement		215:44:3159:3159	8322061	1					
ANR	8322564	ExpressionStatement	count = count * 10 + ( * p - '0' )	219:28:3245:3276	8322061	0	True				
ANR	8322565	AssignmentExpression	count = count * 10 + ( * p - '0' )		8322061	0		=			
ANR	8322566	Identifier	count		8322061	0					
ANR	8322567	AdditiveExpression	count * 10 + ( * p - '0' )		8322061	1		+			
ANR	8322568	MultiplicativeExpression	count * 10		8322061	0		*			
ANR	8322569	Identifier	count		8322061	0					
ANR	8322570	PrimaryExpression	10		8322061	1					
ANR	8322571	AdditiveExpression	* p - '0'		8322061	1		-			
ANR	8322572	UnaryOperationExpression	* p		8322061	0					
ANR	8322573	UnaryOperator	*		8322061	0					
ANR	8322574	Identifier	p		8322061	1					
ANR	8322575	PrimaryExpression	'0'		8322061	1					
ANR	8322576	ExpressionStatement	p ++	221:28:3307:3310	8322061	1	True				
ANR	8322577	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8322578	Identifier	p		8322061	0					
ANR	8322579	IncDec	++		8322061	1					
ANR	8322580	ExpressionStatement	size = - 1	227:20:3383:3392	8322061	3	True				
ANR	8322581	AssignmentExpression	size = - 1		8322061	0		=			
ANR	8322582	Identifier	size		8322061	0					
ANR	8322583	UnaryOperationExpression	- 1		8322061	1					
ANR	8322584	UnaryOperator	-		8322061	0					
ANR	8322585	PrimaryExpression	1		8322061	1					
ANR	8322586	ExpressionStatement	format = - 1	229:20:3415:3426	8322061	4	True				
ANR	8322587	AssignmentExpression	format = - 1		8322061	0		=			
ANR	8322588	Identifier	format		8322061	0					
ANR	8322589	UnaryOperationExpression	- 1		8322061	1					
ANR	8322590	UnaryOperator	-		8322061	0					
ANR	8322591	PrimaryExpression	1		8322061	1					
ANR	8322592	ForStatement	for ( ; ; )		8322061	5					
ANR	8322593	CompoundStatement		229:28:3402:3402	8322061	0					
ANR	8322594	SwitchStatement	switch ( * p )		8322061	0					
ANR	8322595	Condition	* p	233:31:3491:3492	8322061	0	True				
ANR	8322596	UnaryOperationExpression	* p		8322061	0					
ANR	8322597	UnaryOperator	*		8322061	0					
ANR	8322598	Identifier	p		8322061	1					
ANR	8322599	CompoundStatement		231:35:3440:3440	8322061	1					
ANR	8322600	Label	case 'o' :	235:24:3522:3530	8322061	0	True				
ANR	8322601	Label	case 'd' :	237:24:3557:3565	8322061	1	True				
ANR	8322602	Label	case 'u' :	239:24:3592:3600	8322061	2	True				
ANR	8322603	Label	case 'x' :	241:24:3627:3635	8322061	3	True				
ANR	8322604	Label	case 'i' :	243:24:3662:3670	8322061	4	True				
ANR	8322605	Label	case 'c' :	245:24:3697:3705	8322061	5	True				
ANR	8322606	ExpressionStatement	format = * p ++	247:28:3736:3749	8322061	6	True				
ANR	8322607	AssignmentExpression	format = * p ++		8322061	0		=			
ANR	8322608	Identifier	format		8322061	0					
ANR	8322609	UnaryOperationExpression	* p ++		8322061	1					
ANR	8322610	UnaryOperator	*		8322061	0					
ANR	8322611	PostIncDecOperationExpression	p ++		8322061	1					
ANR	8322612	Identifier	p		8322061	0					
ANR	8322613	IncDec	++		8322061	1					
ANR	8322614	BreakStatement	break ;	249:28:3780:3785	8322061	7	True				
ANR	8322615	Label	case 'b' :	251:24:3812:3820	8322061	8	True				
ANR	8322616	ExpressionStatement	size = 1	253:28:3851:3859	8322061	9	True				
ANR	8322617	AssignmentExpression	size = 1		8322061	0		=			
ANR	8322618	Identifier	size		8322061	0					
ANR	8322619	PrimaryExpression	1		8322061	1					
ANR	8322620	ExpressionStatement	p ++	255:28:3890:3893	8322061	10	True				
ANR	8322621	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8322622	Identifier	p		8322061	0					
ANR	8322623	IncDec	++		8322061	1					
ANR	8322624	BreakStatement	break ;	257:28:3924:3929	8322061	11	True				
ANR	8322625	Label	case 'h' :	259:24:3956:3964	8322061	12	True				
ANR	8322626	ExpressionStatement	size = 2	261:28:3995:4003	8322061	13	True				
ANR	8322627	AssignmentExpression	size = 2		8322061	0		=			
ANR	8322628	Identifier	size		8322061	0					
ANR	8322629	PrimaryExpression	2		8322061	1					
ANR	8322630	ExpressionStatement	p ++	263:28:4034:4037	8322061	14	True				
ANR	8322631	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8322632	Identifier	p		8322061	0					
ANR	8322633	IncDec	++		8322061	1					
ANR	8322634	BreakStatement	break ;	265:28:4068:4073	8322061	15	True				
ANR	8322635	Label	case 'w' :	267:24:4100:4108	8322061	16	True				
ANR	8322636	ExpressionStatement	size = 4	269:28:4139:4147	8322061	17	True				
ANR	8322637	AssignmentExpression	size = 4		8322061	0		=			
ANR	8322638	Identifier	size		8322061	0					
ANR	8322639	PrimaryExpression	4		8322061	1					
ANR	8322640	ExpressionStatement	p ++	271:28:4178:4181	8322061	18	True				
ANR	8322641	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8322642	Identifier	p		8322061	0					
ANR	8322643	IncDec	++		8322061	1					
ANR	8322644	BreakStatement	break ;	273:28:4212:4217	8322061	19	True				
ANR	8322645	Label	case 'g' :	275:24:4244:4252	8322061	20	True				
ANR	8322646	Label	case 'L' :	277:24:4279:4287	8322061	21	True				
ANR	8322647	ExpressionStatement	size = 8	279:28:4318:4326	8322061	22	True				
ANR	8322648	AssignmentExpression	size = 8		8322061	0		=			
ANR	8322649	Identifier	size		8322061	0					
ANR	8322650	PrimaryExpression	8		8322061	1					
ANR	8322651	ExpressionStatement	p ++	281:28:4357:4360	8322061	23	True				
ANR	8322652	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8322653	Identifier	p		8322061	0					
ANR	8322654	IncDec	++		8322061	1					
ANR	8322655	BreakStatement	break ;	283:28:4391:4396	8322061	24	True				
ANR	8322656	Label	default :	285:24:4423:4430	8322061	25	True				
ANR	8322657	Identifier	default		8322061	0					
ANR	8322658	GotoStatement	goto next ;	287:28:4461:4470	8322061	26	True				
ANR	8322659	Identifier	next		8322061	0					
ANR	8322660	Label	next :	293:16:4539:4543	8322061	6	True				
ANR	8322661	Identifier	next		8322061	0					
ANR	8322662	IfStatement	if ( * p != '\\0' && ! isspace ( * p ) )		8322061	7					
ANR	8322663	Condition	* p != '\\0' && ! isspace ( * p )	295:24:4570:4595	8322061	0	True				
ANR	8322664	AndExpression	* p != '\\0' && ! isspace ( * p )		8322061	0		&&			
ANR	8322665	EqualityExpression	* p != '\\0'		8322061	0		!=			
ANR	8322666	UnaryOperationExpression	* p		8322061	0					
ANR	8322667	UnaryOperator	*		8322061	0					
ANR	8322668	Identifier	p		8322061	1					
ANR	8322669	PrimaryExpression	'\\0'		8322061	1					
ANR	8322670	UnaryOperationExpression	! isspace ( * p )		8322061	1					
ANR	8322671	UnaryOperator	!		8322061	0					
ANR	8322672	CallExpression	isspace ( * p )		8322061	1					
ANR	8322673	Callee	isspace		8322061	0					
ANR	8322674	Identifier	isspace		8322061	0					
ANR	8322675	ArgumentList	* p		8322061	1					
ANR	8322676	Argument	* p		8322061	0					
ANR	8322677	UnaryOperationExpression	* p		8322061	0					
ANR	8322678	UnaryOperator	*		8322061	0					
ANR	8322679	Identifier	p		8322061	1					
ANR	8322680	CompoundStatement		293:52:4543:4543	8322061	1					
ANR	8322681	ExpressionStatement	"term_printf ( ""invalid char in format: '%c'\\n"" , * p )"	297:24:4625:4674	8322061	0	True				
ANR	8322682	CallExpression	"term_printf ( ""invalid char in format: '%c'\\n"" , * p )"		8322061	0					
ANR	8322683	Callee	term_printf		8322061	0					
ANR	8322684	Identifier	term_printf		8322061	0					
ANR	8322685	ArgumentList	"""invalid char in format: '%c'\\n"""		8322061	1					
ANR	8322686	Argument	"""invalid char in format: '%c'\\n"""		8322061	0					
ANR	8322687	PrimaryExpression	"""invalid char in format: '%c'\\n"""		8322061	0					
ANR	8322688	Argument	* p		8322061	1					
ANR	8322689	UnaryOperationExpression	* p		8322061	0					
ANR	8322690	UnaryOperator	*		8322061	0					
ANR	8322691	Identifier	p		8322061	1					
ANR	8322692	GotoStatement	goto fail ;	299:24:4701:4710	8322061	1	True				
ANR	8322693	Identifier	fail		8322061	0					
ANR	8322694	IfStatement	if ( format < 0 )		8322061	8					
ANR	8322695	Condition	format < 0	303:24:4760:4769	8322061	0	True				
ANR	8322696	RelationalExpression	format < 0		8322061	0		<			
ANR	8322697	Identifier	format		8322061	0					
ANR	8322698	PrimaryExpression	0		8322061	1					
ANR	8322699	ExpressionStatement	format = default_fmt_format	305:24:4797:4824	8322061	1	True				
ANR	8322700	AssignmentExpression	format = default_fmt_format		8322061	0		=			
ANR	8322701	Identifier	format		8322061	0					
ANR	8322702	Identifier	default_fmt_format		8322061	1					
ANR	8322703	IfStatement	if ( format != 'i' )		8322061	9					
ANR	8322704	Condition	format != 'i'	307:24:4851:4863	8322061	0	True				
ANR	8322705	EqualityExpression	format != 'i'		8322061	0		!=			
ANR	8322706	Identifier	format		8322061	0					
ANR	8322707	PrimaryExpression	'i'		8322061	1					
ANR	8322708	CompoundStatement		305:39:4811:4811	8322061	1					
ANR	8322709	IfStatement	if ( size < 0 )		8322061	0					
ANR	8322710	Condition	size < 0	311:28:4976:4983	8322061	0	True				
ANR	8322711	RelationalExpression	size < 0		8322061	0		<			
ANR	8322712	Identifier	size		8322061	0					
ANR	8322713	PrimaryExpression	0		8322061	1					
ANR	8322714	ExpressionStatement	size = default_fmt_size	313:28:5015:5038	8322061	1	True				
ANR	8322715	AssignmentExpression	size = default_fmt_size		8322061	0		=			
ANR	8322716	Identifier	size		8322061	0					
ANR	8322717	Identifier	default_fmt_size		8322061	1					
ANR	8322718	ExpressionStatement	default_fmt_size = size	317:20:5084:5107	8322061	10	True				
ANR	8322719	AssignmentExpression	default_fmt_size = size		8322061	0		=			
ANR	8322720	Identifier	default_fmt_size		8322061	0					
ANR	8322721	Identifier	size		8322061	1					
ANR	8322722	ExpressionStatement	default_fmt_format = format	319:20:5130:5157	8322061	11	True				
ANR	8322723	AssignmentExpression	default_fmt_format = format		8322061	0		=			
ANR	8322724	Identifier	default_fmt_format		8322061	0					
ANR	8322725	Identifier	format		8322061	1					
ANR	8322726	ElseStatement	else		8322061	0					
ANR	8322727	CompoundStatement		319:23:5128:5128	8322061	0					
ANR	8322728	ExpressionStatement	count = 1	323:20:5206:5215	8322061	0	True				
ANR	8322729	AssignmentExpression	count = 1		8322061	0		=			
ANR	8322730	Identifier	count		8322061	0					
ANR	8322731	PrimaryExpression	1		8322061	1					
ANR	8322732	ExpressionStatement	format = default_fmt_format	325:20:5238:5265	8322061	1	True				
ANR	8322733	AssignmentExpression	format = default_fmt_format		8322061	0		=			
ANR	8322734	Identifier	format		8322061	0					
ANR	8322735	Identifier	default_fmt_format		8322061	1					
ANR	8322736	IfStatement	if ( format != 'i' )		8322061	2					
ANR	8322737	Condition	format != 'i'	327:24:5292:5304	8322061	0	True				
ANR	8322738	EqualityExpression	format != 'i'		8322061	0		!=			
ANR	8322739	Identifier	format		8322061	0					
ANR	8322740	PrimaryExpression	'i'		8322061	1					
ANR	8322741	CompoundStatement		325:39:5252:5252	8322061	1					
ANR	8322742	ExpressionStatement	size = default_fmt_size	329:24:5334:5357	8322061	0	True				
ANR	8322743	AssignmentExpression	size = default_fmt_size		8322061	0		=			
ANR	8322744	Identifier	size		8322061	0					
ANR	8322745	Identifier	default_fmt_size		8322061	1					
ANR	8322746	ElseStatement	else		8322061	0					
ANR	8322747	CompoundStatement		329:27:5332:5332	8322061	0					
ANR	8322748	ExpressionStatement	size = - 1	333:24:5414:5423	8322061	0	True				
ANR	8322749	AssignmentExpression	size = - 1		8322061	0		=			
ANR	8322750	Identifier	size		8322061	0					
ANR	8322751	UnaryOperationExpression	- 1		8322061	1					
ANR	8322752	UnaryOperator	-		8322061	0					
ANR	8322753	PrimaryExpression	1		8322061	1					
ANR	8322754	IfStatement	if ( nb_args + 3 > MAX_ARGS )		8322061	3					
ANR	8322755	Condition	nb_args + 3 > MAX_ARGS	339:20:5488:5509	8322061	0	True				
ANR	8322756	RelationalExpression	nb_args + 3 > MAX_ARGS		8322061	0		>			
ANR	8322757	AdditiveExpression	nb_args + 3		8322061	0		+			
ANR	8322758	Identifier	nb_args		8322061	0					
ANR	8322759	PrimaryExpression	3		8322061	1					
ANR	8322760	Identifier	MAX_ARGS		8322061	1					
ANR	8322761	GotoStatement	goto error_args ;	341:20:5533:5548	8322061	1	True				
ANR	8322762	Identifier	error_args		8322061	0					
ANR	8322763	ExpressionStatement	args [ nb_args ++ ] = ( void * ) count	343:16:5567:5597	8322061	4	True				
ANR	8322764	AssignmentExpression	args [ nb_args ++ ] = ( void * ) count		8322061	0		=			
ANR	8322765	ArrayIndexing	args [ nb_args ++ ]		8322061	0					
ANR	8322766	Identifier	args		8322061	0					
ANR	8322767	PostIncDecOperationExpression	nb_args ++		8322061	1					
ANR	8322768	Identifier	nb_args		8322061	0					
ANR	8322769	IncDec	++		8322061	1					
ANR	8322770	CastExpression	( void * ) count		8322061	1					
ANR	8322771	CastTarget	void *		8322061	0					
ANR	8322772	Identifier	count		8322061	1					
ANR	8322773	ExpressionStatement	args [ nb_args ++ ] = ( void * ) format	345:16:5616:5647	8322061	5	True				
ANR	8322774	AssignmentExpression	args [ nb_args ++ ] = ( void * ) format		8322061	0		=			
ANR	8322775	ArrayIndexing	args [ nb_args ++ ]		8322061	0					
ANR	8322776	Identifier	args		8322061	0					
ANR	8322777	PostIncDecOperationExpression	nb_args ++		8322061	1					
ANR	8322778	Identifier	nb_args		8322061	0					
ANR	8322779	IncDec	++		8322061	1					
ANR	8322780	CastExpression	( void * ) format		8322061	1					
ANR	8322781	CastTarget	void *		8322061	0					
ANR	8322782	Identifier	format		8322061	1					
ANR	8322783	ExpressionStatement	args [ nb_args ++ ] = ( void * ) size	347:16:5666:5695	8322061	6	True				
ANR	8322784	AssignmentExpression	args [ nb_args ++ ] = ( void * ) size		8322061	0		=			
ANR	8322785	ArrayIndexing	args [ nb_args ++ ]		8322061	0					
ANR	8322786	Identifier	args		8322061	0					
ANR	8322787	PostIncDecOperationExpression	nb_args ++		8322061	1					
ANR	8322788	Identifier	nb_args		8322061	0					
ANR	8322789	IncDec	++		8322061	1					
ANR	8322790	CastExpression	( void * ) size		8322061	1					
ANR	8322791	CastTarget	void *		8322061	0					
ANR	8322792	Identifier	size		8322061	1					
ANR	8322793	BreakStatement	break ;	351:12:5725:5730	8322061	7	True				
ANR	8322794	Label	case 'i' :	353:8:5741:5749	8322061	8	True				
ANR	8322795	CompoundStatement		355:16:5728:5735	8322061	9					
ANR	8322796	IdentifierDeclStatement	int val ;	357:16:5783:5790	8322061	0	True				
ANR	8322797	IdentifierDecl	val		8322061	0					
ANR	8322798	IdentifierDeclType	int		8322061	0					
ANR	8322799	Identifier	val		8322061	1					
ANR	8322800	WhileStatement	while ( isspace ( * p ) )		8322061	1					
ANR	8322801	Condition	isspace ( * p )	359:23:5816:5826	8322061	0	True				
ANR	8322802	CallExpression	isspace ( * p )		8322061	0					
ANR	8322803	Callee	isspace		8322061	0					
ANR	8322804	Identifier	isspace		8322061	0					
ANR	8322805	ArgumentList	* p		8322061	1					
ANR	8322806	Argument	* p		8322061	0					
ANR	8322807	UnaryOperationExpression	* p		8322061	0					
ANR	8322808	UnaryOperator	*		8322061	0					
ANR	8322809	Identifier	p		8322061	1					
ANR	8322810	ExpressionStatement	p ++	361:20:5851:5854	8322061	1	True				
ANR	8322811	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8322812	Identifier	p		8322061	0					
ANR	8322813	IncDec	++		8322061	1					
ANR	8322814	IfStatement	if ( * typestr == '?' || * typestr == '.' )		8322061	2					
ANR	8322815	Condition	* typestr == '?' || * typestr == '.'	363:20:5877:5910	8322061	0	True				
ANR	8322816	OrExpression	* typestr == '?' || * typestr == '.'		8322061	0		||			
ANR	8322817	EqualityExpression	* typestr == '?'		8322061	0		==			
ANR	8322818	UnaryOperationExpression	* typestr		8322061	0					
ANR	8322819	UnaryOperator	*		8322061	0					
ANR	8322820	Identifier	typestr		8322061	1					
ANR	8322821	PrimaryExpression	'?'		8322061	1					
ANR	8322822	EqualityExpression	* typestr == '.'		8322061	1		==			
ANR	8322823	UnaryOperationExpression	* typestr		8322061	0					
ANR	8322824	UnaryOperator	*		8322061	0					
ANR	8322825	Identifier	typestr		8322061	1					
ANR	8322826	PrimaryExpression	'.'		8322061	1					
ANR	8322827	CompoundStatement		361:56:5858:5858	8322061	1					
ANR	8322828	ExpressionStatement	typestr ++	365:20:5936:5945	8322061	0	True				
ANR	8322829	PostIncDecOperationExpression	typestr ++		8322061	0					
ANR	8322830	Identifier	typestr		8322061	0					
ANR	8322831	IncDec	++		8322061	1					
ANR	8322832	IfStatement	if ( * typestr == '?' )		8322061	1					
ANR	8322833	Condition	* typestr == '?'	367:24:5972:5986	8322061	0	True				
ANR	8322834	EqualityExpression	* typestr == '?'		8322061	0		==			
ANR	8322835	UnaryOperationExpression	* typestr		8322061	0					
ANR	8322836	UnaryOperator	*		8322061	0					
ANR	8322837	Identifier	typestr		8322061	1					
ANR	8322838	PrimaryExpression	'?'		8322061	1					
ANR	8322839	CompoundStatement		365:41:5934:5934	8322061	1					
ANR	8322840	IfStatement	if ( * p == '\\0' )		8322061	0					
ANR	8322841	Condition	* p == '\\0'	369:28:6020:6029	8322061	0	True				
ANR	8322842	EqualityExpression	* p == '\\0'		8322061	0		==			
ANR	8322843	UnaryOperationExpression	* p		8322061	0					
ANR	8322844	UnaryOperator	*		8322061	0					
ANR	8322845	Identifier	p		8322061	1					
ANR	8322846	PrimaryExpression	'\\0'		8322061	1					
ANR	8322847	ExpressionStatement	has_arg = 0	371:28:6061:6072	8322061	1	True				
ANR	8322848	AssignmentExpression	has_arg = 0		8322061	0		=			
ANR	8322849	Identifier	has_arg		8322061	0					
ANR	8322850	PrimaryExpression	0		8322061	1					
ANR	8322851	ElseStatement	else		8322061	0					
ANR	8322852	ExpressionStatement	has_arg = 1	375:28:6133:6144	8322061	0	True				
ANR	8322853	AssignmentExpression	has_arg = 1		8322061	0		=			
ANR	8322854	Identifier	has_arg		8322061	0					
ANR	8322855	PrimaryExpression	1		8322061	1					
ANR	8322856	ElseStatement	else		8322061	0					
ANR	8322857	CompoundStatement		375:27:6119:6119	8322061	0					
ANR	8322858	IfStatement	if ( * p == '.' )		8322061	0					
ANR	8322859	Condition	* p == '.'	379:28:6205:6213	8322061	0	True				
ANR	8322860	EqualityExpression	* p == '.'		8322061	0		==			
ANR	8322861	UnaryOperationExpression	* p		8322061	0					
ANR	8322862	UnaryOperator	*		8322061	0					
ANR	8322863	Identifier	p		8322061	1					
ANR	8322864	PrimaryExpression	'.'		8322061	1					
ANR	8322865	CompoundStatement		377:39:6161:6161	8322061	1					
ANR	8322866	ExpressionStatement	p ++	381:28:6247:6250	8322061	0	True				
ANR	8322867	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8322868	Identifier	p		8322061	0					
ANR	8322869	IncDec	++		8322061	1					
ANR	8322870	WhileStatement	while ( isspace ( * p ) )		8322061	1					
ANR	8322871	Condition	isspace ( * p )	383:35:6288:6298	8322061	0	True				
ANR	8322872	CallExpression	isspace ( * p )		8322061	0					
ANR	8322873	Callee	isspace		8322061	0					
ANR	8322874	Identifier	isspace		8322061	0					
ANR	8322875	ArgumentList	* p		8322061	1					
ANR	8322876	Argument	* p		8322061	0					
ANR	8322877	UnaryOperationExpression	* p		8322061	0					
ANR	8322878	UnaryOperator	*		8322061	0					
ANR	8322879	Identifier	p		8322061	1					
ANR	8322880	ExpressionStatement	p ++	385:32:6335:6338	8322061	1	True				
ANR	8322881	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8322882	Identifier	p		8322061	0					
ANR	8322883	IncDec	++		8322061	1					
ANR	8322884	ExpressionStatement	has_arg = 1	387:28:6369:6380	8322061	2	True				
ANR	8322885	AssignmentExpression	has_arg = 1		8322061	0		=			
ANR	8322886	Identifier	has_arg		8322061	0					
ANR	8322887	PrimaryExpression	1		8322061	1					
ANR	8322888	ElseStatement	else		8322061	0					
ANR	8322889	CompoundStatement		387:31:6359:6359	8322061	0					
ANR	8322890	ExpressionStatement	has_arg = 0	391:28:6445:6456	8322061	0	True				
ANR	8322891	AssignmentExpression	has_arg = 0		8322061	0		=			
ANR	8322892	Identifier	has_arg		8322061	0					
ANR	8322893	PrimaryExpression	0		8322061	1					
ANR	8322894	IfStatement	if ( nb_args >= MAX_ARGS )		8322061	2					
ANR	8322895	Condition	nb_args >= MAX_ARGS	397:24:6533:6551	8322061	0	True				
ANR	8322896	RelationalExpression	nb_args >= MAX_ARGS		8322061	0		>=			
ANR	8322897	Identifier	nb_args		8322061	0					
ANR	8322898	Identifier	MAX_ARGS		8322061	1					
ANR	8322899	GotoStatement	goto error_args ;	399:24:6579:6594	8322061	1	True				
ANR	8322900	Identifier	error_args		8322061	0					
ANR	8322901	ExpressionStatement	args [ nb_args ++ ] = ( void * ) has_arg	401:20:6617:6650	8322061	3	True				
ANR	8322902	AssignmentExpression	args [ nb_args ++ ] = ( void * ) has_arg		8322061	0		=			
ANR	8322903	ArrayIndexing	args [ nb_args ++ ]		8322061	0					
ANR	8322904	Identifier	args		8322061	0					
ANR	8322905	PostIncDecOperationExpression	nb_args ++		8322061	1					
ANR	8322906	Identifier	nb_args		8322061	0					
ANR	8322907	IncDec	++		8322061	1					
ANR	8322908	CastExpression	( void * ) has_arg		8322061	1					
ANR	8322909	CastTarget	void *		8322061	0					
ANR	8322910	Identifier	has_arg		8322061	1					
ANR	8322911	IfStatement	if ( ! has_arg )		8322061	4					
ANR	8322912	Condition	! has_arg	403:24:6677:6684	8322061	0	True				
ANR	8322913	UnaryOperationExpression	! has_arg		8322061	0					
ANR	8322914	UnaryOperator	!		8322061	0					
ANR	8322915	Identifier	has_arg		8322061	1					
ANR	8322916	CompoundStatement		401:34:6632:6632	8322061	1					
ANR	8322917	IfStatement	if ( nb_args >= MAX_ARGS )		8322061	0					
ANR	8322918	Condition	nb_args >= MAX_ARGS	405:28:6718:6736	8322061	0	True				
ANR	8322919	RelationalExpression	nb_args >= MAX_ARGS		8322061	0		>=			
ANR	8322920	Identifier	nb_args		8322061	0					
ANR	8322921	Identifier	MAX_ARGS		8322061	1					
ANR	8322922	GotoStatement	goto error_args ;	407:28:6768:6783	8322061	1	True				
ANR	8322923	Identifier	error_args		8322061	0					
ANR	8322924	ExpressionStatement	val = - 1	409:24:6810:6818	8322061	1	True				
ANR	8322925	AssignmentExpression	val = - 1		8322061	0		=			
ANR	8322926	Identifier	val		8322061	0					
ANR	8322927	UnaryOperationExpression	- 1		8322061	1					
ANR	8322928	UnaryOperator	-		8322061	0					
ANR	8322929	PrimaryExpression	1		8322061	1					
ANR	8322930	GotoStatement	goto add_num ;	411:24:6845:6857	8322061	2	True				
ANR	8322931	Identifier	add_num		8322061	0					
ANR	8322932	IfStatement	"if ( get_expr ( & val , & p ) )"		8322061	3					
ANR	8322933	Condition	"get_expr ( & val , & p )"	417:20:6922:6939	8322061	0	True				
ANR	8322934	CallExpression	"get_expr ( & val , & p )"		8322061	0					
ANR	8322935	Callee	get_expr		8322061	0					
ANR	8322936	Identifier	get_expr		8322061	0					
ANR	8322937	ArgumentList	& val		8322061	1					
ANR	8322938	Argument	& val		8322061	0					
ANR	8322939	UnaryOperationExpression	& val		8322061	0					
ANR	8322940	UnaryOperator	&		8322061	0					
ANR	8322941	Identifier	val		8322061	1					
ANR	8322942	Argument	& p		8322061	1					
ANR	8322943	UnaryOperationExpression	& p		8322061	0					
ANR	8322944	UnaryOperator	&		8322061	0					
ANR	8322945	Identifier	p		8322061	1					
ANR	8322946	GotoStatement	goto fail ;	419:20:6963:6972	8322061	1	True				
ANR	8322947	Identifier	fail		8322061	0					
ANR	8322948	Label	add_num :	421:12:6987:6994	8322061	4	True				
ANR	8322949	Identifier	add_num		8322061	0					
ANR	8322950	IfStatement	if ( nb_args >= MAX_ARGS )		8322061	5					
ANR	8322951	Condition	nb_args >= MAX_ARGS	423:20:7017:7035	8322061	0	True				
ANR	8322952	RelationalExpression	nb_args >= MAX_ARGS		8322061	0		>=			
ANR	8322953	Identifier	nb_args		8322061	0					
ANR	8322954	Identifier	MAX_ARGS		8322061	1					
ANR	8322955	GotoStatement	goto error_args ;	425:20:7059:7074	8322061	1	True				
ANR	8322956	Identifier	error_args		8322061	0					
ANR	8322957	ExpressionStatement	args [ nb_args ++ ] = ( void * ) val	427:16:7093:7122	8322061	6	True				
ANR	8322958	AssignmentExpression	args [ nb_args ++ ] = ( void * ) val		8322061	0		=			
ANR	8322959	ArrayIndexing	args [ nb_args ++ ]		8322061	0					
ANR	8322960	Identifier	args		8322061	0					
ANR	8322961	PostIncDecOperationExpression	nb_args ++		8322061	1					
ANR	8322962	Identifier	nb_args		8322061	0					
ANR	8322963	IncDec	++		8322061	1					
ANR	8322964	CastExpression	( void * ) val		8322061	1					
ANR	8322965	CastTarget	void *		8322061	0					
ANR	8322966	Identifier	val		8322061	1					
ANR	8322967	BreakStatement	break ;	431:12:7152:7157	8322061	10	True				
ANR	8322968	Label	case '-' :	433:8:7168:7176	8322061	11	True				
ANR	8322969	CompoundStatement		435:16:7155:7169	8322061	12					
ANR	8322970	IdentifierDeclStatement	int has_option ;	437:16:7210:7224	8322061	0	True				
ANR	8322971	IdentifierDecl	has_option		8322061	0					
ANR	8322972	IdentifierDeclType	int		8322061	0					
ANR	8322973	Identifier	has_option		8322061	1					
ANR	8322974	ExpressionStatement	c = * typestr ++	443:16:7291:7305	8322061	1	True				
ANR	8322975	AssignmentExpression	c = * typestr ++		8322061	0		=			
ANR	8322976	Identifier	c		8322061	0					
ANR	8322977	UnaryOperationExpression	* typestr ++		8322061	1					
ANR	8322978	UnaryOperator	*		8322061	0					
ANR	8322979	PostIncDecOperationExpression	typestr ++		8322061	1					
ANR	8322980	Identifier	typestr		8322061	0					
ANR	8322981	IncDec	++		8322061	1					
ANR	8322982	IfStatement	if ( c == '\\0' )		8322061	2					
ANR	8322983	Condition	c == '\\0'	445:20:7328:7336	8322061	0	True				
ANR	8322984	EqualityExpression	c == '\\0'		8322061	0		==			
ANR	8322985	Identifier	c		8322061	0					
ANR	8322986	PrimaryExpression	'\\0'		8322061	1					
ANR	8322987	GotoStatement	goto bad_type ;	447:20:7360:7373	8322061	1	True				
ANR	8322988	Identifier	bad_type		8322061	0					
ANR	8322989	WhileStatement	while ( isspace ( * p ) )		8322061	3					
ANR	8322990	Condition	isspace ( * p )	449:23:7399:7409	8322061	0	True				
ANR	8322991	CallExpression	isspace ( * p )		8322061	0					
ANR	8322992	Callee	isspace		8322061	0					
ANR	8322993	Identifier	isspace		8322061	0					
ANR	8322994	ArgumentList	* p		8322061	1					
ANR	8322995	Argument	* p		8322061	0					
ANR	8322996	UnaryOperationExpression	* p		8322061	0					
ANR	8322997	UnaryOperator	*		8322061	0					
ANR	8322998	Identifier	p		8322061	1					
ANR	8322999	ExpressionStatement	p ++	451:20:7434:7437	8322061	1	True				
ANR	8323000	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8323001	Identifier	p		8322061	0					
ANR	8323002	IncDec	++		8322061	1					
ANR	8323003	ExpressionStatement	has_option = 0	453:16:7456:7470	8322061	4	True				
ANR	8323004	AssignmentExpression	has_option = 0		8322061	0		=			
ANR	8323005	Identifier	has_option		8322061	0					
ANR	8323006	PrimaryExpression	0		8322061	1					
ANR	8323007	IfStatement	if ( * p == '-' )		8322061	5					
ANR	8323008	Condition	* p == '-'	455:20:7493:7501	8322061	0	True				
ANR	8323009	EqualityExpression	* p == '-'		8322061	0		==			
ANR	8323010	UnaryOperationExpression	* p		8322061	0					
ANR	8323011	UnaryOperator	*		8322061	0					
ANR	8323012	Identifier	p		8322061	1					
ANR	8323013	PrimaryExpression	'-'		8322061	1					
ANR	8323014	CompoundStatement		453:31:7449:7449	8322061	1					
ANR	8323015	ExpressionStatement	p ++	457:20:7527:7530	8322061	0	True				
ANR	8323016	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8323017	Identifier	p		8322061	0					
ANR	8323018	IncDec	++		8322061	1					
ANR	8323019	IfStatement	if ( * p != c )		8322061	1					
ANR	8323020	Condition	* p != c	459:24:7557:7563	8322061	0	True				
ANR	8323021	EqualityExpression	* p != c		8322061	0		!=			
ANR	8323022	UnaryOperationExpression	* p		8322061	0					
ANR	8323023	UnaryOperator	*		8322061	0					
ANR	8323024	Identifier	p		8322061	1					
ANR	8323025	Identifier	c		8322061	1					
ANR	8323026	CompoundStatement		457:33:7511:7511	8322061	1					
ANR	8323027	ExpressionStatement	"term_printf ( ""%s: unsupported option -%c\\n"" , cmdname , * p )"	461:24:7593:7687	8322061	0	True				
ANR	8323028	CallExpression	"term_printf ( ""%s: unsupported option -%c\\n"" , cmdname , * p )"		8322061	0					
ANR	8323029	Callee	term_printf		8322061	0					
ANR	8323030	Identifier	term_printf		8322061	0					
ANR	8323031	ArgumentList	"""%s: unsupported option -%c\\n"""		8322061	1					
ANR	8323032	Argument	"""%s: unsupported option -%c\\n"""		8322061	0					
ANR	8323033	PrimaryExpression	"""%s: unsupported option -%c\\n"""		8322061	0					
ANR	8323034	Argument	cmdname		8322061	1					
ANR	8323035	Identifier	cmdname		8322061	0					
ANR	8323036	Argument	* p		8322061	2					
ANR	8323037	UnaryOperationExpression	* p		8322061	0					
ANR	8323038	UnaryOperator	*		8322061	0					
ANR	8323039	Identifier	p		8322061	1					
ANR	8323040	GotoStatement	goto fail ;	465:24:7714:7723	8322061	1	True				
ANR	8323041	Identifier	fail		8322061	0					
ANR	8323042	ExpressionStatement	p ++	469:20:7769:7772	8322061	2	True				
ANR	8323043	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8323044	Identifier	p		8322061	0					
ANR	8323045	IncDec	++		8322061	1					
ANR	8323046	ExpressionStatement	has_option = 1	471:20:7795:7809	8322061	3	True				
ANR	8323047	AssignmentExpression	has_option = 1		8322061	0		=			
ANR	8323048	Identifier	has_option		8322061	0					
ANR	8323049	PrimaryExpression	1		8322061	1					
ANR	8323050	IfStatement	if ( nb_args >= MAX_ARGS )		8322061	6					
ANR	8323051	Condition	nb_args >= MAX_ARGS	475:20:7851:7869	8322061	0	True				
ANR	8323052	RelationalExpression	nb_args >= MAX_ARGS		8322061	0		>=			
ANR	8323053	Identifier	nb_args		8322061	0					
ANR	8323054	Identifier	MAX_ARGS		8322061	1					
ANR	8323055	GotoStatement	goto error_args ;	477:20:7893:7908	8322061	1	True				
ANR	8323056	Identifier	error_args		8322061	0					
ANR	8323057	ExpressionStatement	args [ nb_args ++ ] = ( void * ) has_option	479:16:7927:7963	8322061	7	True				
ANR	8323058	AssignmentExpression	args [ nb_args ++ ] = ( void * ) has_option		8322061	0		=			
ANR	8323059	ArrayIndexing	args [ nb_args ++ ]		8322061	0					
ANR	8323060	Identifier	args		8322061	0					
ANR	8323061	PostIncDecOperationExpression	nb_args ++		8322061	1					
ANR	8323062	Identifier	nb_args		8322061	0					
ANR	8323063	IncDec	++		8322061	1					
ANR	8323064	CastExpression	( void * ) has_option		8322061	1					
ANR	8323065	CastTarget	void *		8322061	0					
ANR	8323066	Identifier	has_option		8322061	1					
ANR	8323067	BreakStatement	break ;	483:12:7993:7998	8322061	13	True				
ANR	8323068	Label	default :	485:8:8009:8016	8322061	14	True				
ANR	8323069	Identifier	default		8322061	0					
ANR	8323070	Label	bad_type :	487:8:8027:8035	8322061	15	True				
ANR	8323071	Identifier	bad_type		8322061	0					
ANR	8323072	ExpressionStatement	"term_printf ( ""%s: unknown type '%c'\\n"" , cmdname , c )"	489:12:8050:8100	8322061	16	True				
ANR	8323073	CallExpression	"term_printf ( ""%s: unknown type '%c'\\n"" , cmdname , c )"		8322061	0					
ANR	8323074	Callee	term_printf		8322061	0					
ANR	8323075	Identifier	term_printf		8322061	0					
ANR	8323076	ArgumentList	"""%s: unknown type '%c'\\n"""		8322061	1					
ANR	8323077	Argument	"""%s: unknown type '%c'\\n"""		8322061	0					
ANR	8323078	PrimaryExpression	"""%s: unknown type '%c'\\n"""		8322061	0					
ANR	8323079	Argument	cmdname		8322061	1					
ANR	8323080	Identifier	cmdname		8322061	0					
ANR	8323081	Argument	c		8322061	2					
ANR	8323082	Identifier	c		8322061	0					
ANR	8323083	GotoStatement	goto fail ;	491:12:8115:8124	8322061	17	True				
ANR	8323084	Identifier	fail		8322061	0					
ANR	8323085	WhileStatement	while ( isspace ( * p ) )		8322061	27					
ANR	8323086	Condition	isspace ( * p )	499:11:8204:8214	8322061	0	True				
ANR	8323087	CallExpression	isspace ( * p )		8322061	0					
ANR	8323088	Callee	isspace		8322061	0					
ANR	8323089	Identifier	isspace		8322061	0					
ANR	8323090	ArgumentList	* p		8322061	1					
ANR	8323091	Argument	* p		8322061	0					
ANR	8323092	UnaryOperationExpression	* p		8322061	0					
ANR	8323093	UnaryOperator	*		8322061	0					
ANR	8323094	Identifier	p		8322061	1					
ANR	8323095	ExpressionStatement	p ++	501:8:8226:8229	8322061	1	True				
ANR	8323096	PostIncDecOperationExpression	p ++		8322061	0					
ANR	8323097	Identifier	p		8322061	0					
ANR	8323098	IncDec	++		8322061	1					
ANR	8323099	IfStatement	if ( * p != '\\0' )		8322061	28					
ANR	8323100	Condition	* p != '\\0'	503:8:8240:8249	8322061	0	True				
ANR	8323101	EqualityExpression	* p != '\\0'		8322061	0		!=			
ANR	8323102	UnaryOperationExpression	* p		8322061	0					
ANR	8323103	UnaryOperator	*		8322061	0					
ANR	8323104	Identifier	p		8322061	1					
ANR	8323105	PrimaryExpression	'\\0'		8322061	1					
ANR	8323106	CompoundStatement		501:20:8197:8197	8322061	1					
ANR	8323107	ExpressionStatement	"term_printf ( ""%s: extraneous characters at the end of line\\n"" , cmdname )"	505:8:8263:8355	8322061	0	True				
ANR	8323108	CallExpression	"term_printf ( ""%s: extraneous characters at the end of line\\n"" , cmdname )"		8322061	0					
ANR	8323109	Callee	term_printf		8322061	0					
ANR	8323110	Identifier	term_printf		8322061	0					
ANR	8323111	ArgumentList	"""%s: extraneous characters at the end of line\\n"""		8322061	1					
ANR	8323112	Argument	"""%s: extraneous characters at the end of line\\n"""		8322061	0					
ANR	8323113	PrimaryExpression	"""%s: extraneous characters at the end of line\\n"""		8322061	0					
ANR	8323114	Argument	cmdname		8322061	1					
ANR	8323115	Identifier	cmdname		8322061	0					
ANR	8323116	GotoStatement	goto fail ;	509:8:8366:8375	8322061	1	True				
ANR	8323117	Identifier	fail		8322061	0					
ANR	8323118	SwitchStatement	switch ( nb_args )		8322061	29					
ANR	8323119	Condition	nb_args	515:11:8398:8404	8322061	0	True				
ANR	8323120	Identifier	nb_args		8322061	0					
ANR	8323121	CompoundStatement		513:20:8352:8352	8322061	1					
ANR	8323122	Label	case 0 :	517:4:8414:8420	8322061	0	True				
ANR	8323123	ExpressionStatement	cmd -> handler ( )	519:8:8431:8445	8322061	1	True				
ANR	8323124	CallExpression	cmd -> handler ( )		8322061	0					
ANR	8323125	Callee	cmd -> handler		8322061	0					
ANR	8323126	PtrMemberAccess	cmd -> handler		8322061	0					
ANR	8323127	Identifier	cmd		8322061	0					
ANR	8323128	Identifier	handler		8322061	1					
ANR	8323129	ArgumentList			8322061	1					
ANR	8323130	BreakStatement	break ;	521:8:8456:8461	8322061	2	True				
ANR	8323131	Label	case 1 :	523:4:8468:8474	8322061	3	True				
ANR	8323132	ExpressionStatement	cmd -> handler ( args [ 0 ] )	525:8:8485:8506	8322061	4	True				
ANR	8323133	CallExpression	cmd -> handler ( args [ 0 ] )		8322061	0					
ANR	8323134	Callee	cmd -> handler		8322061	0					
ANR	8323135	PtrMemberAccess	cmd -> handler		8322061	0					
ANR	8323136	Identifier	cmd		8322061	0					
ANR	8323137	Identifier	handler		8322061	1					
ANR	8323138	ArgumentList	args [ 0 ]		8322061	1					
ANR	8323139	Argument	args [ 0 ]		8322061	0					
ANR	8323140	ArrayIndexing	args [ 0 ]		8322061	0					
ANR	8323141	Identifier	args		8322061	0					
ANR	8323142	PrimaryExpression	0		8322061	1					
ANR	8323143	BreakStatement	break ;	527:8:8517:8522	8322061	5	True				
ANR	8323144	Label	case 2 :	529:4:8529:8535	8322061	6	True				
ANR	8323145	ExpressionStatement	"cmd -> handler ( args [ 0 ] , args [ 1 ] )"	531:8:8546:8576	8322061	7	True				
ANR	8323146	CallExpression	"cmd -> handler ( args [ 0 ] , args [ 1 ] )"		8322061	0					
ANR	8323147	Callee	cmd -> handler		8322061	0					
ANR	8323148	PtrMemberAccess	cmd -> handler		8322061	0					
ANR	8323149	Identifier	cmd		8322061	0					
ANR	8323150	Identifier	handler		8322061	1					
ANR	8323151	ArgumentList	args [ 0 ]		8322061	1					
ANR	8323152	Argument	args [ 0 ]		8322061	0					
ANR	8323153	ArrayIndexing	args [ 0 ]		8322061	0					
ANR	8323154	Identifier	args		8322061	0					
ANR	8323155	PrimaryExpression	0		8322061	1					
ANR	8323156	Argument	args [ 1 ]		8322061	1					
ANR	8323157	ArrayIndexing	args [ 1 ]		8322061	0					
ANR	8323158	Identifier	args		8322061	0					
ANR	8323159	PrimaryExpression	1		8322061	1					
ANR	8323160	BreakStatement	break ;	533:8:8587:8592	8322061	8	True				
ANR	8323161	Label	case 3 :	535:4:8599:8605	8322061	9	True				
ANR	8323162	ExpressionStatement	"cmd -> handler ( args [ 0 ] , args [ 1 ] , args [ 2 ] )"	537:8:8616:8655	8322061	10	True				
ANR	8323163	CallExpression	"cmd -> handler ( args [ 0 ] , args [ 1 ] , args [ 2 ] )"		8322061	0					
ANR	8323164	Callee	cmd -> handler		8322061	0					
ANR	8323165	PtrMemberAccess	cmd -> handler		8322061	0					
ANR	8323166	Identifier	cmd		8322061	0					
ANR	8323167	Identifier	handler		8322061	1					
ANR	8323168	ArgumentList	args [ 0 ]		8322061	1					
ANR	8323169	Argument	args [ 0 ]		8322061	0					
ANR	8323170	ArrayIndexing	args [ 0 ]		8322061	0					
ANR	8323171	Identifier	args		8322061	0					
ANR	8323172	PrimaryExpression	0		8322061	1					
ANR	8323173	Argument	args [ 1 ]		8322061	1					
ANR	8323174	ArrayIndexing	args [ 1 ]		8322061	0					
ANR	8323175	Identifier	args		8322061	0					
ANR	8323176	PrimaryExpression	1		8322061	1					
ANR	8323177	Argument	args [ 2 ]		8322061	2					
ANR	8323178	ArrayIndexing	args [ 2 ]		8322061	0					
ANR	8323179	Identifier	args		8322061	0					
ANR	8323180	PrimaryExpression	2		8322061	1					
ANR	8323181	BreakStatement	break ;	539:8:8666:8671	8322061	11	True				
ANR	8323182	Label	case 4 :	541:4:8678:8684	8322061	12	True				
ANR	8323183	ExpressionStatement	"cmd -> handler ( args [ 0 ] , args [ 1 ] , args [ 2 ] , args [ 3 ] )"	543:8:8695:8743	8322061	13	True				
ANR	8323184	CallExpression	"cmd -> handler ( args [ 0 ] , args [ 1 ] , args [ 2 ] , args [ 3 ] )"		8322061	0					
ANR	8323185	Callee	cmd -> handler		8322061	0					
ANR	8323186	PtrMemberAccess	cmd -> handler		8322061	0					
ANR	8323187	Identifier	cmd		8322061	0					
ANR	8323188	Identifier	handler		8322061	1					
ANR	8323189	ArgumentList	args [ 0 ]		8322061	1					
ANR	8323190	Argument	args [ 0 ]		8322061	0					
ANR	8323191	ArrayIndexing	args [ 0 ]		8322061	0					
ANR	8323192	Identifier	args		8322061	0					
ANR	8323193	PrimaryExpression	0		8322061	1					
ANR	8323194	Argument	args [ 1 ]		8322061	1					
ANR	8323195	ArrayIndexing	args [ 1 ]		8322061	0					
ANR	8323196	Identifier	args		8322061	0					
ANR	8323197	PrimaryExpression	1		8322061	1					
ANR	8323198	Argument	args [ 2 ]		8322061	2					
ANR	8323199	ArrayIndexing	args [ 2 ]		8322061	0					
ANR	8323200	Identifier	args		8322061	0					
ANR	8323201	PrimaryExpression	2		8322061	1					
ANR	8323202	Argument	args [ 3 ]		8322061	3					
ANR	8323203	ArrayIndexing	args [ 3 ]		8322061	0					
ANR	8323204	Identifier	args		8322061	0					
ANR	8323205	PrimaryExpression	3		8322061	1					
ANR	8323206	BreakStatement	break ;	545:8:8754:8759	8322061	14	True				
ANR	8323207	Label	case 5 :	547:4:8766:8772	8322061	15	True				
ANR	8323208	ExpressionStatement	"cmd -> handler ( args [ 0 ] , args [ 1 ] , args [ 2 ] , args [ 3 ] , args [ 4 ] )"	549:8:8783:8840	8322061	16	True				
ANR	8323209	CallExpression	"cmd -> handler ( args [ 0 ] , args [ 1 ] , args [ 2 ] , args [ 3 ] , args [ 4 ] )"		8322061	0					
ANR	8323210	Callee	cmd -> handler		8322061	0					
ANR	8323211	PtrMemberAccess	cmd -> handler		8322061	0					
ANR	8323212	Identifier	cmd		8322061	0					
ANR	8323213	Identifier	handler		8322061	1					
ANR	8323214	ArgumentList	args [ 0 ]		8322061	1					
ANR	8323215	Argument	args [ 0 ]		8322061	0					
ANR	8323216	ArrayIndexing	args [ 0 ]		8322061	0					
ANR	8323217	Identifier	args		8322061	0					
ANR	8323218	PrimaryExpression	0		8322061	1					
ANR	8323219	Argument	args [ 1 ]		8322061	1					
ANR	8323220	ArrayIndexing	args [ 1 ]		8322061	0					
ANR	8323221	Identifier	args		8322061	0					
ANR	8323222	PrimaryExpression	1		8322061	1					
ANR	8323223	Argument	args [ 2 ]		8322061	2					
ANR	8323224	ArrayIndexing	args [ 2 ]		8322061	0					
ANR	8323225	Identifier	args		8322061	0					
ANR	8323226	PrimaryExpression	2		8322061	1					
ANR	8323227	Argument	args [ 3 ]		8322061	3					
ANR	8323228	ArrayIndexing	args [ 3 ]		8322061	0					
ANR	8323229	Identifier	args		8322061	0					
ANR	8323230	PrimaryExpression	3		8322061	1					
ANR	8323231	Argument	args [ 4 ]		8322061	4					
ANR	8323232	ArrayIndexing	args [ 4 ]		8322061	0					
ANR	8323233	Identifier	args		8322061	0					
ANR	8323234	PrimaryExpression	4		8322061	1					
ANR	8323235	BreakStatement	break ;	551:8:8851:8856	8322061	17	True				
ANR	8323236	Label	case 6 :	553:4:8863:8869	8322061	18	True				
ANR	8323237	ExpressionStatement	"cmd -> handler ( args [ 0 ] , args [ 1 ] , args [ 2 ] , args [ 3 ] , args [ 4 ] , args [ 5 ] )"	555:8:8880:8946	8322061	19	True				
ANR	8323238	CallExpression	"cmd -> handler ( args [ 0 ] , args [ 1 ] , args [ 2 ] , args [ 3 ] , args [ 4 ] , args [ 5 ] )"		8322061	0					
ANR	8323239	Callee	cmd -> handler		8322061	0					
ANR	8323240	PtrMemberAccess	cmd -> handler		8322061	0					
ANR	8323241	Identifier	cmd		8322061	0					
ANR	8323242	Identifier	handler		8322061	1					
ANR	8323243	ArgumentList	args [ 0 ]		8322061	1					
ANR	8323244	Argument	args [ 0 ]		8322061	0					
ANR	8323245	ArrayIndexing	args [ 0 ]		8322061	0					
ANR	8323246	Identifier	args		8322061	0					
ANR	8323247	PrimaryExpression	0		8322061	1					
ANR	8323248	Argument	args [ 1 ]		8322061	1					
ANR	8323249	ArrayIndexing	args [ 1 ]		8322061	0					
ANR	8323250	Identifier	args		8322061	0					
ANR	8323251	PrimaryExpression	1		8322061	1					
ANR	8323252	Argument	args [ 2 ]		8322061	2					
ANR	8323253	ArrayIndexing	args [ 2 ]		8322061	0					
ANR	8323254	Identifier	args		8322061	0					
ANR	8323255	PrimaryExpression	2		8322061	1					
ANR	8323256	Argument	args [ 3 ]		8322061	3					
ANR	8323257	ArrayIndexing	args [ 3 ]		8322061	0					
ANR	8323258	Identifier	args		8322061	0					
ANR	8323259	PrimaryExpression	3		8322061	1					
ANR	8323260	Argument	args [ 4 ]		8322061	4					
ANR	8323261	ArrayIndexing	args [ 4 ]		8322061	0					
ANR	8323262	Identifier	args		8322061	0					
ANR	8323263	PrimaryExpression	4		8322061	1					
ANR	8323264	Argument	args [ 5 ]		8322061	5					
ANR	8323265	ArrayIndexing	args [ 5 ]		8322061	0					
ANR	8323266	Identifier	args		8322061	0					
ANR	8323267	PrimaryExpression	5		8322061	1					
ANR	8323268	BreakStatement	break ;	557:8:8957:8962	8322061	20	True				
ANR	8323269	Label	default :	559:4:8969:8976	8322061	21	True				
ANR	8323270	Identifier	default		8322061	0					
ANR	8323271	ExpressionStatement	"term_printf ( ""unsupported number of arguments: %d\\n"" , nb_args )"	561:8:8987:9048	8322061	22	True				
ANR	8323272	CallExpression	"term_printf ( ""unsupported number of arguments: %d\\n"" , nb_args )"		8322061	0					
ANR	8323273	Callee	term_printf		8322061	0					
ANR	8323274	Identifier	term_printf		8322061	0					
ANR	8323275	ArgumentList	"""unsupported number of arguments: %d\\n"""		8322061	1					
ANR	8323276	Argument	"""unsupported number of arguments: %d\\n"""		8322061	0					
ANR	8323277	PrimaryExpression	"""unsupported number of arguments: %d\\n"""		8322061	0					
ANR	8323278	Argument	nb_args		8322061	1					
ANR	8323279	Identifier	nb_args		8322061	0					
ANR	8323280	GotoStatement	goto fail ;	563:8:9059:9068	8322061	23	True				
ANR	8323281	Identifier	fail		8322061	0					
ANR	8323282	Label	fail :	567:1:9079:9083	8322061	30	True				
ANR	8323283	Identifier	fail		8322061	0					
ANR	8323284	ForStatement	for ( i = 0 ; i < MAX_ARGS ; i ++ )		8322061	31					
ANR	8323285	ForInit	i = 0 ;	569:8:9094:9099	8322061	0	True				
ANR	8323286	AssignmentExpression	i = 0		8322061	0		=			
ANR	8323287	Identifier	i		8322061	0					
ANR	8323288	PrimaryExpression	0		8322061	1					
ANR	8323289	Condition	i < MAX_ARGS	569:15:9101:9112	8322061	1	True				
ANR	8323290	RelationalExpression	i < MAX_ARGS		8322061	0		<			
ANR	8323291	Identifier	i		8322061	0					
ANR	8323292	Identifier	MAX_ARGS		8322061	1					
ANR	8323293	PostIncDecOperationExpression	i ++	569:29:9115:9117	8322061	2	True				
ANR	8323294	Identifier	i		8322061	0					
ANR	8323295	IncDec	++		8322061	1					
ANR	8323296	ExpressionStatement	qemu_free ( str_allocated [ i ] )	571:8:9129:9156	8322061	3	True				
ANR	8323297	CallExpression	qemu_free ( str_allocated [ i ] )		8322061	0					
ANR	8323298	Callee	qemu_free		8322061	0					
ANR	8323299	Identifier	qemu_free		8322061	0					
ANR	8323300	ArgumentList	str_allocated [ i ]		8322061	1					
ANR	8323301	Argument	str_allocated [ i ]		8322061	0					
ANR	8323302	ArrayIndexing	str_allocated [ i ]		8322061	0					
ANR	8323303	Identifier	str_allocated		8322061	0					
ANR	8323304	Identifier	i		8322061	1					
ANR	8323305	ReturnStatement	return ;	573:4:9163:9169	8322061	32	True				
ANR	8323306	ReturnType	static void		8322061	1					
ANR	8323307	Identifier	term_handle_command		8322061	2					
ANR	8323308	ParameterList	const char * cmdline		8322061	3					
ANR	8323309	Parameter	const char * cmdline	1:32:32:50	8322061	0	True				
ANR	8323310	ParameterType	const char *		8322061	0					
ANR	8323311	Identifier	cmdline		8322061	1					
ANR	8323312	CFGEntryNode	ENTRY		8322061		True				
ANR	8323313	CFGExitNode	EXIT		8322061		True				
ANR	8323314	InfiniteForNode	true		8322061		True				
ANR	8323315	InfiniteForNode	true		8322061		True				
ANR	8323316	Symbol	& val		8322061						
ANR	8323317	Symbol	* str_allocated		8322061						
ANR	8323318	Symbol	* args		8322061						
ANR	8323319	Symbol	typestr		8322061						
ANR	8323320	Symbol	compare_cmd		8322061						
ANR	8323321	Symbol	strlen		8322061						
ANR	8323322	Symbol	cmdline		8322061						
ANR	8323323	Symbol	len		8322061						
ANR	8323324	Symbol	* typestr ++		8322061						
ANR	8323325	Symbol	nb_args		8322061						
ANR	8323326	Symbol	* cmd		8322061						
ANR	8323327	Symbol	isdigit		8322061						
ANR	8323328	Symbol	has_option		8322061						
ANR	8323329	Symbol	ret		8322061						
ANR	8323330	Symbol	val		8322061						
ANR	8323331	Symbol	NULL		8322061						
ANR	8323332	Symbol	term_cmds		8322061						
ANR	8323333	Symbol	default_fmt_format		8322061						
ANR	8323334	Symbol	isspace		8322061						
ANR	8323335	Symbol	format		8322061						
ANR	8323336	Symbol	count		8322061						
ANR	8323337	Symbol	str		8322061						
ANR	8323338	Symbol	size		8322061						
ANR	8323339	Symbol	str_allocated		8322061						
ANR	8323340	Symbol	qemu_malloc		8322061						
ANR	8323341	Symbol	default_fmt_size		8322061						
ANR	8323342	Symbol	cmd		8322061						
ANR	8323343	Symbol	has_arg		8322061						
ANR	8323344	Symbol	get_str		8322061						
ANR	8323345	Symbol	* typestr		8322061						
ANR	8323346	Symbol	MAX_ARGS		8322061						
ANR	8323347	Symbol	* cmdname		8322061						
ANR	8323348	Symbol	pstart		8322061						
ANR	8323349	Symbol	* nb_args		8322061						
ANR	8323350	Symbol	c		8322061						
ANR	8323351	Symbol	cmd -> name		8322061						
ANR	8323352	Symbol	* p ++		8322061						
ANR	8323353	Symbol	i		8322061						
ANR	8323354	Symbol	p		8322061						
ANR	8323355	Symbol	args		8322061						
ANR	8323356	Symbol	q		8322061						
ANR	8323357	Symbol	buf		8322061						
ANR	8323358	Symbol	* i		8322061						
ANR	8323359	Symbol	get_expr		8322061						
ANR	8323360	Symbol	& p		8322061						
ANR	8323361	Symbol	cmdname		8322061						
ANR	8323362	Symbol	* p		8322061						
ANR	8323363	Symbol	cmd -> args_type		8322061						
ANR	8323364	Symbol	* len		8322061						
