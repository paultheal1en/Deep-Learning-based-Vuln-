command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5844674	File	/home/p4ultr4n/workplace/ReVeal/raw_code/msvideo1_decode_8bit_0.c								
ANR	5844675	Function	msvideo1_decode_8bit	1:0:0:3742							
ANR	5844676	FunctionDef	msvideo1_decode_8bit (Msvideo1Context * s)		5844675	0					
ANR	5844677	CompoundStatement		3:0:54:3742	5844675	0					
ANR	5844678	IdentifierDeclStatement	"int block_ptr , pixel_ptr ;"	5:4:61:85	5844675	0	True				
ANR	5844679	IdentifierDecl	block_ptr		5844675	0					
ANR	5844680	IdentifierDeclType	int		5844675	0					
ANR	5844681	Identifier	block_ptr		5844675	1					
ANR	5844682	IdentifierDecl	pixel_ptr		5844675	1					
ANR	5844683	IdentifierDeclType	int		5844675	0					
ANR	5844684	Identifier	pixel_ptr		5844675	1					
ANR	5844685	IdentifierDeclStatement	int total_blocks ;	7:4:92:108	5844675	1	True				
ANR	5844686	IdentifierDecl	total_blocks		5844675	0					
ANR	5844687	IdentifierDeclType	int		5844675	0					
ANR	5844688	Identifier	total_blocks		5844675	1					
ANR	5844689	IdentifierDeclStatement	"int pixel_x , pixel_y ;"	9:4:115:135	5844675	2	True				
ANR	5844690	IdentifierDecl	pixel_x		5844675	0					
ANR	5844691	IdentifierDeclType	int		5844675	0					
ANR	5844692	Identifier	pixel_x		5844675	1					
ANR	5844693	IdentifierDecl	pixel_y		5844675	1					
ANR	5844694	IdentifierDeclType	int		5844675	0					
ANR	5844695	Identifier	pixel_y		5844675	1					
ANR	5844696	IdentifierDeclStatement	"int block_x , block_y ;"	11:4:182:202	5844675	3	True				
ANR	5844697	IdentifierDecl	block_x		5844675	0					
ANR	5844698	IdentifierDeclType	int		5844675	0					
ANR	5844699	Identifier	block_x		5844675	1					
ANR	5844700	IdentifierDecl	block_y		5844675	1					
ANR	5844701	IdentifierDeclType	int		5844675	0					
ANR	5844702	Identifier	block_y		5844675	1					
ANR	5844703	IdentifierDeclStatement	"int blocks_wide , blocks_high ;"	13:4:249:277	5844675	4	True				
ANR	5844704	IdentifierDecl	blocks_wide		5844675	0					
ANR	5844705	IdentifierDeclType	int		5844675	0					
ANR	5844706	Identifier	blocks_wide		5844675	1					
ANR	5844707	IdentifierDecl	blocks_high		5844675	1					
ANR	5844708	IdentifierDeclType	int		5844675	0					
ANR	5844709	Identifier	blocks_high		5844675	1					
ANR	5844710	IdentifierDeclStatement	int block_inc ;	15:4:322:335	5844675	5	True				
ANR	5844711	IdentifierDecl	block_inc		5844675	0					
ANR	5844712	IdentifierDeclType	int		5844675	0					
ANR	5844713	Identifier	block_inc		5844675	1					
ANR	5844714	IdentifierDeclStatement	int row_dec ;	17:4:342:353	5844675	6	True				
ANR	5844715	IdentifierDecl	row_dec		5844675	0					
ANR	5844716	IdentifierDeclType	int		5844675	0					
ANR	5844717	Identifier	row_dec		5844675	1					
ANR	5844718	IdentifierDeclStatement	int stream_ptr ;	23:4:393:407	5844675	7	True				
ANR	5844719	IdentifierDecl	stream_ptr		5844675	0					
ANR	5844720	IdentifierDeclType	int		5844675	0					
ANR	5844721	Identifier	stream_ptr		5844675	1					
ANR	5844722	IdentifierDeclStatement	"unsigned char byte_a , byte_b ;"	25:4:414:442	5844675	8	True				
ANR	5844723	IdentifierDecl	byte_a		5844675	0					
ANR	5844724	IdentifierDeclType	unsigned char		5844675	0					
ANR	5844725	Identifier	byte_a		5844675	1					
ANR	5844726	IdentifierDecl	byte_b		5844675	1					
ANR	5844727	IdentifierDeclType	unsigned char		5844675	0					
ANR	5844728	Identifier	byte_b		5844675	1					
ANR	5844729	IdentifierDeclStatement	unsigned short flags ;	27:4:449:469	5844675	9	True				
ANR	5844730	IdentifierDecl	flags		5844675	0					
ANR	5844731	IdentifierDeclType	unsigned short		5844675	0					
ANR	5844732	Identifier	flags		5844675	1					
ANR	5844733	IdentifierDeclStatement	int skip_blocks ;	29:4:476:491	5844675	10	True				
ANR	5844734	IdentifierDecl	skip_blocks		5844675	0					
ANR	5844735	IdentifierDeclType	int		5844675	0					
ANR	5844736	Identifier	skip_blocks		5844675	1					
ANR	5844737	IdentifierDeclStatement	unsigned char colors [ 8 ] ;	31:4:498:521	5844675	11	True				
ANR	5844738	IdentifierDecl	colors [ 8 ]		5844675	0					
ANR	5844739	IdentifierDeclType	unsigned char [ 8 ]		5844675	0					
ANR	5844740	Identifier	colors		5844675	1					
ANR	5844741	PrimaryExpression	8		5844675	2					
ANR	5844742	IdentifierDeclStatement	unsigned char * pixels = s -> frame . data [ 0 ] ;	33:4:528:568	5844675	12	True				
ANR	5844743	IdentifierDecl	* pixels = s -> frame . data [ 0 ]		5844675	0					
ANR	5844744	IdentifierDeclType	unsigned char *		5844675	0					
ANR	5844745	Identifier	pixels		5844675	1					
ANR	5844746	AssignmentExpression	* pixels = s -> frame . data [ 0 ]		5844675	2		=			
ANR	5844747	Identifier	pixels		5844675	0					
ANR	5844748	ArrayIndexing	s -> frame . data [ 0 ]		5844675	1					
ANR	5844749	MemberAccess	s -> frame . data		5844675	0					
ANR	5844750	PtrMemberAccess	s -> frame		5844675	0					
ANR	5844751	Identifier	s		5844675	0					
ANR	5844752	Identifier	frame		5844675	1					
ANR	5844753	Identifier	data		5844675	1					
ANR	5844754	PrimaryExpression	0		5844675	1					
ANR	5844755	IdentifierDeclStatement	unsigned char * prev_pixels = s -> prev_frame . data [ 0 ] ;	35:4:575:625	5844675	13	True				
ANR	5844756	IdentifierDecl	* prev_pixels = s -> prev_frame . data [ 0 ]		5844675	0					
ANR	5844757	IdentifierDeclType	unsigned char *		5844675	0					
ANR	5844758	Identifier	prev_pixels		5844675	1					
ANR	5844759	AssignmentExpression	* prev_pixels = s -> prev_frame . data [ 0 ]		5844675	2		=			
ANR	5844760	Identifier	prev_pixels		5844675	0					
ANR	5844761	ArrayIndexing	s -> prev_frame . data [ 0 ]		5844675	1					
ANR	5844762	MemberAccess	s -> prev_frame . data		5844675	0					
ANR	5844763	PtrMemberAccess	s -> prev_frame		5844675	0					
ANR	5844764	Identifier	s		5844675	0					
ANR	5844765	Identifier	prev_frame		5844675	1					
ANR	5844766	Identifier	data		5844675	1					
ANR	5844767	PrimaryExpression	0		5844675	1					
ANR	5844768	IdentifierDeclStatement	int stride = s -> frame . linesize [ 0 ] ;	37:4:632:665	5844675	14	True				
ANR	5844769	IdentifierDecl	stride = s -> frame . linesize [ 0 ]		5844675	0					
ANR	5844770	IdentifierDeclType	int		5844675	0					
ANR	5844771	Identifier	stride		5844675	1					
ANR	5844772	AssignmentExpression	stride = s -> frame . linesize [ 0 ]		5844675	2		=			
ANR	5844773	Identifier	stride		5844675	0					
ANR	5844774	ArrayIndexing	s -> frame . linesize [ 0 ]		5844675	1					
ANR	5844775	MemberAccess	s -> frame . linesize		5844675	0					
ANR	5844776	PtrMemberAccess	s -> frame		5844675	0					
ANR	5844777	Identifier	s		5844675	0					
ANR	5844778	Identifier	frame		5844675	1					
ANR	5844779	Identifier	linesize		5844675	1					
ANR	5844780	PrimaryExpression	0		5844675	1					
ANR	5844781	ExpressionStatement	stream_ptr = 0	41:4:674:688	5844675	15	True				
ANR	5844782	AssignmentExpression	stream_ptr = 0		5844675	0		=			
ANR	5844783	Identifier	stream_ptr		5844675	0					
ANR	5844784	PrimaryExpression	0		5844675	1					
ANR	5844785	ExpressionStatement	skip_blocks = 0	43:4:695:710	5844675	16	True				
ANR	5844786	AssignmentExpression	skip_blocks = 0		5844675	0		=			
ANR	5844787	Identifier	skip_blocks		5844675	0					
ANR	5844788	PrimaryExpression	0		5844675	1					
ANR	5844789	ExpressionStatement	blocks_wide = s -> avctx -> width / 4	45:4:717:750	5844675	17	True				
ANR	5844790	AssignmentExpression	blocks_wide = s -> avctx -> width / 4		5844675	0		=			
ANR	5844791	Identifier	blocks_wide		5844675	0					
ANR	5844792	MultiplicativeExpression	s -> avctx -> width / 4		5844675	1		/			
ANR	5844793	PtrMemberAccess	s -> avctx -> width		5844675	0					
ANR	5844794	PtrMemberAccess	s -> avctx		5844675	0					
ANR	5844795	Identifier	s		5844675	0					
ANR	5844796	Identifier	avctx		5844675	1					
ANR	5844797	Identifier	width		5844675	1					
ANR	5844798	PrimaryExpression	4		5844675	1					
ANR	5844799	ExpressionStatement	blocks_high = s -> avctx -> height / 4	47:4:757:791	5844675	18	True				
ANR	5844800	AssignmentExpression	blocks_high = s -> avctx -> height / 4		5844675	0		=			
ANR	5844801	Identifier	blocks_high		5844675	0					
ANR	5844802	MultiplicativeExpression	s -> avctx -> height / 4		5844675	1		/			
ANR	5844803	PtrMemberAccess	s -> avctx -> height		5844675	0					
ANR	5844804	PtrMemberAccess	s -> avctx		5844675	0					
ANR	5844805	Identifier	s		5844675	0					
ANR	5844806	Identifier	avctx		5844675	1					
ANR	5844807	Identifier	height		5844675	1					
ANR	5844808	PrimaryExpression	4		5844675	1					
ANR	5844809	ExpressionStatement	total_blocks = blocks_wide * blocks_high	49:4:798:838	5844675	19	True				
ANR	5844810	AssignmentExpression	total_blocks = blocks_wide * blocks_high		5844675	0		=			
ANR	5844811	Identifier	total_blocks		5844675	0					
ANR	5844812	MultiplicativeExpression	blocks_wide * blocks_high		5844675	1		*			
ANR	5844813	Identifier	blocks_wide		5844675	0					
ANR	5844814	Identifier	blocks_high		5844675	1					
ANR	5844815	ExpressionStatement	block_inc = 4	51:4:845:858	5844675	20	True				
ANR	5844816	AssignmentExpression	block_inc = 4		5844675	0		=			
ANR	5844817	Identifier	block_inc		5844675	0					
ANR	5844818	PrimaryExpression	4		5844675	1					
ANR	5844819	ExpressionStatement	row_dec = stride + 4	53:4:865:885	5844675	21	True				
ANR	5844820	AssignmentExpression	row_dec = stride + 4		5844675	0		=			
ANR	5844821	Identifier	row_dec		5844675	0					
ANR	5844822	AdditiveExpression	stride + 4		5844675	1		+			
ANR	5844823	Identifier	stride		5844675	0					
ANR	5844824	PrimaryExpression	4		5844675	1					
ANR	5844825	ForStatement	for ( block_y = blocks_high ; block_y > 0 ; block_y -- )		5844675	22					
ANR	5844826	ForInit	block_y = blocks_high ;	57:9:899:920	5844675	0	True				
ANR	5844827	AssignmentExpression	block_y = blocks_high		5844675	0		=			
ANR	5844828	Identifier	block_y		5844675	0					
ANR	5844829	Identifier	blocks_high		5844675	1					
ANR	5844830	Condition	block_y > 0	57:32:922:932	5844675	1	True				
ANR	5844831	RelationalExpression	block_y > 0		5844675	0		>			
ANR	5844832	Identifier	block_y		5844675	0					
ANR	5844833	PrimaryExpression	0		5844675	1					
ANR	5844834	PostIncDecOperationExpression	block_y --	57:45:935:943	5844675	2	True				
ANR	5844835	Identifier	block_y		5844675	0					
ANR	5844836	IncDec	--		5844675	1					
ANR	5844837	CompoundStatement		55:56:891:891	5844675	3					
ANR	5844838	ExpressionStatement	block_ptr = ( ( block_y * 4 ) - 1 ) * stride	59:8:957:997	5844675	0	True				
ANR	5844839	AssignmentExpression	block_ptr = ( ( block_y * 4 ) - 1 ) * stride		5844675	0		=			
ANR	5844840	Identifier	block_ptr		5844675	0					
ANR	5844841	MultiplicativeExpression	( ( block_y * 4 ) - 1 ) * stride		5844675	1		*			
ANR	5844842	AdditiveExpression	( block_y * 4 ) - 1		5844675	0		-			
ANR	5844843	MultiplicativeExpression	block_y * 4		5844675	0		*			
ANR	5844844	Identifier	block_y		5844675	0					
ANR	5844845	PrimaryExpression	4		5844675	1					
ANR	5844846	PrimaryExpression	1		5844675	1					
ANR	5844847	Identifier	stride		5844675	1					
ANR	5844848	ForStatement	for ( block_x = blocks_wide ; block_x > 0 ; block_x -- )		5844675	1					
ANR	5844849	ForInit	block_x = blocks_wide ;	61:13:1013:1034	5844675	0	True				
ANR	5844850	AssignmentExpression	block_x = blocks_wide		5844675	0		=			
ANR	5844851	Identifier	block_x		5844675	0					
ANR	5844852	Identifier	blocks_wide		5844675	1					
ANR	5844853	Condition	block_x > 0	61:36:1036:1046	5844675	1	True				
ANR	5844854	RelationalExpression	block_x > 0		5844675	0		>			
ANR	5844855	Identifier	block_x		5844675	0					
ANR	5844856	PrimaryExpression	0		5844675	1					
ANR	5844857	PostIncDecOperationExpression	block_x --	61:49:1049:1057	5844675	2	True				
ANR	5844858	Identifier	block_x		5844675	0					
ANR	5844859	IncDec	--		5844675	1					
ANR	5844860	CompoundStatement		59:60:1005:1005	5844675	3					
ANR	5844861	IfStatement	if ( skip_blocks )		5844675	0					
ANR	5844862	Condition	skip_blocks	65:16:1136:1146	5844675	0	True				
ANR	5844863	Identifier	skip_blocks		5844675	0					
ANR	5844864	CompoundStatement		63:29:1094:1094	5844675	1					
ANR	5844865	ExpressionStatement	COPY_PREV_BLOCK ( )	67:16:1168:1185	5844675	0	True				
ANR	5844866	CallExpression	COPY_PREV_BLOCK ( )		5844675	0					
ANR	5844867	Callee	COPY_PREV_BLOCK		5844675	0					
ANR	5844868	Identifier	COPY_PREV_BLOCK		5844675	0					
ANR	5844869	ArgumentList			5844675	1					
ANR	5844870	ExpressionStatement	block_ptr += block_inc	69:16:1204:1226	5844675	1	True				
ANR	5844871	AssignmentExpression	block_ptr += block_inc		5844675	0		+=			
ANR	5844872	Identifier	block_ptr		5844675	0					
ANR	5844873	Identifier	block_inc		5844675	1					
ANR	5844874	ExpressionStatement	skip_blocks --	71:16:1245:1258	5844675	2	True				
ANR	5844875	PostIncDecOperationExpression	skip_blocks --		5844675	0					
ANR	5844876	Identifier	skip_blocks		5844675	0					
ANR	5844877	IncDec	--		5844675	1					
ANR	5844878	ExpressionStatement	total_blocks --	73:16:1277:1291	5844675	3	True				
ANR	5844879	PostIncDecOperationExpression	total_blocks --		5844675	0					
ANR	5844880	Identifier	total_blocks		5844675	0					
ANR	5844881	IncDec	--		5844675	1					
ANR	5844882	ContinueStatement	continue ;	75:16:1310:1318	5844675	4	True				
ANR	5844883	ExpressionStatement	pixel_ptr = block_ptr	81:12:1350:1371	5844675	1	True				
ANR	5844884	AssignmentExpression	pixel_ptr = block_ptr		5844675	0		=			
ANR	5844885	Identifier	pixel_ptr		5844675	0					
ANR	5844886	Identifier	block_ptr		5844675	1					
ANR	5844887	ExpressionStatement	CHECK_STREAM_PTR ( 2 )	87:12:1457:1476	5844675	2	True				
ANR	5844888	CallExpression	CHECK_STREAM_PTR ( 2 )		5844675	0					
ANR	5844889	Callee	CHECK_STREAM_PTR		5844675	0					
ANR	5844890	Identifier	CHECK_STREAM_PTR		5844675	0					
ANR	5844891	ArgumentList	2		5844675	1					
ANR	5844892	Argument	2		5844675	0					
ANR	5844893	PrimaryExpression	2		5844675	0					
ANR	5844894	ExpressionStatement	byte_a = s -> buf [ stream_ptr ++ ]	89:12:1491:1520	5844675	3	True				
ANR	5844895	AssignmentExpression	byte_a = s -> buf [ stream_ptr ++ ]		5844675	0		=			
ANR	5844896	Identifier	byte_a		5844675	0					
ANR	5844897	ArrayIndexing	s -> buf [ stream_ptr ++ ]		5844675	1					
ANR	5844898	PtrMemberAccess	s -> buf		5844675	0					
ANR	5844899	Identifier	s		5844675	0					
ANR	5844900	Identifier	buf		5844675	1					
ANR	5844901	PostIncDecOperationExpression	stream_ptr ++		5844675	1					
ANR	5844902	Identifier	stream_ptr		5844675	0					
ANR	5844903	IncDec	++		5844675	1					
ANR	5844904	ExpressionStatement	byte_b = s -> buf [ stream_ptr ++ ]	91:12:1535:1564	5844675	4	True				
ANR	5844905	AssignmentExpression	byte_b = s -> buf [ stream_ptr ++ ]		5844675	0		=			
ANR	5844906	Identifier	byte_b		5844675	0					
ANR	5844907	ArrayIndexing	s -> buf [ stream_ptr ++ ]		5844675	1					
ANR	5844908	PtrMemberAccess	s -> buf		5844675	0					
ANR	5844909	Identifier	s		5844675	0					
ANR	5844910	Identifier	buf		5844675	1					
ANR	5844911	PostIncDecOperationExpression	stream_ptr ++		5844675	1					
ANR	5844912	Identifier	stream_ptr		5844675	0					
ANR	5844913	IncDec	++		5844675	1					
ANR	5844914	IfStatement	if ( ( byte_a == 0 ) && ( byte_b == 0 ) && ( total_blocks == 0 ) )		5844675	5					
ANR	5844915	Condition	( byte_a == 0 ) && ( byte_b == 0 ) && ( total_blocks == 0 )	97:16:1636:1688	5844675	0	True				
ANR	5844916	AndExpression	( byte_a == 0 ) && ( byte_b == 0 ) && ( total_blocks == 0 )		5844675	0		&&			
ANR	5844917	EqualityExpression	byte_a == 0		5844675	0		==			
ANR	5844918	Identifier	byte_a		5844675	0					
ANR	5844919	PrimaryExpression	0		5844675	1					
ANR	5844920	AndExpression	( byte_b == 0 ) && ( total_blocks == 0 )		5844675	1		&&			
ANR	5844921	EqualityExpression	byte_b == 0		5844675	0		==			
ANR	5844922	Identifier	byte_b		5844675	0					
ANR	5844923	PrimaryExpression	0		5844675	1					
ANR	5844924	EqualityExpression	total_blocks == 0		5844675	1		==			
ANR	5844925	Identifier	total_blocks		5844675	0					
ANR	5844926	PrimaryExpression	0		5844675	1					
ANR	5844927	ReturnStatement	return ;	99:16:1708:1714	5844675	1	True				
ANR	5844928	ElseStatement	else		5844675	0					
ANR	5844929	IfStatement	if ( ( byte_b & 0xFC ) == 0x84 )		5844675	0					
ANR	5844930	Condition	( byte_b & 0xFC ) == 0x84	101:21:1738:1760	5844675	0	True				
ANR	5844931	EqualityExpression	( byte_b & 0xFC ) == 0x84		5844675	0		==			
ANR	5844932	BitAndExpression	byte_b & 0xFC		5844675	0		&			
ANR	5844933	Identifier	byte_b		5844675	0					
ANR	5844934	PrimaryExpression	0xFC		5844675	1					
ANR	5844935	PrimaryExpression	0x84		5844675	1					
ANR	5844936	CompoundStatement		99:46:1708:1708	5844675	1					
ANR	5844937	ExpressionStatement	skip_blocks = ( ( byte_b - 0x84 ) << 8 ) + byte_a - 1	105:16:1850:1899	5844675	0	True				
ANR	5844938	AssignmentExpression	skip_blocks = ( ( byte_b - 0x84 ) << 8 ) + byte_a - 1		5844675	0		=			
ANR	5844939	Identifier	skip_blocks		5844675	0					
ANR	5844940	AdditiveExpression	( ( byte_b - 0x84 ) << 8 ) + byte_a - 1		5844675	1		+			
ANR	5844941	ShiftExpression	( byte_b - 0x84 ) << 8		5844675	0		<<			
ANR	5844942	AdditiveExpression	byte_b - 0x84		5844675	0		-			
ANR	5844943	Identifier	byte_b		5844675	0					
ANR	5844944	PrimaryExpression	0x84		5844675	1					
ANR	5844945	PrimaryExpression	8		5844675	1					
ANR	5844946	AdditiveExpression	byte_a - 1		5844675	1		-			
ANR	5844947	Identifier	byte_a		5844675	0					
ANR	5844948	PrimaryExpression	1		5844675	1					
ANR	5844949	ExpressionStatement	COPY_PREV_BLOCK ( )	107:16:1918:1935	5844675	1	True				
ANR	5844950	CallExpression	COPY_PREV_BLOCK ( )		5844675	0					
ANR	5844951	Callee	COPY_PREV_BLOCK		5844675	0					
ANR	5844952	Identifier	COPY_PREV_BLOCK		5844675	0					
ANR	5844953	ArgumentList			5844675	1					
ANR	5844954	ElseStatement	else		5844675	0					
ANR	5844955	IfStatement	if ( byte_b < 0x80 )		5844675	0					
ANR	5844956	Condition	byte_b < 0x80	109:23:1961:1973	5844675	0	True				
ANR	5844957	RelationalExpression	byte_b < 0x80		5844675	0		<			
ANR	5844958	Identifier	byte_b		5844675	0					
ANR	5844959	PrimaryExpression	0x80		5844675	1					
ANR	5844960	CompoundStatement		107:38:1921:1921	5844675	1					
ANR	5844961	ExpressionStatement	flags = ( byte_b << 8 ) | byte_a	113:16:2035:2065	5844675	0	True				
ANR	5844962	AssignmentExpression	flags = ( byte_b << 8 ) | byte_a		5844675	0		=			
ANR	5844963	Identifier	flags		5844675	0					
ANR	5844964	InclusiveOrExpression	( byte_b << 8 ) | byte_a		5844675	1		|			
ANR	5844965	ShiftExpression	byte_b << 8		5844675	0		<<			
ANR	5844966	Identifier	byte_b		5844675	0					
ANR	5844967	PrimaryExpression	8		5844675	1					
ANR	5844968	Identifier	byte_a		5844675	1					
ANR	5844969	ExpressionStatement	CHECK_STREAM_PTR ( 2 )	117:16:2086:2105	5844675	1	True				
ANR	5844970	CallExpression	CHECK_STREAM_PTR ( 2 )		5844675	0					
ANR	5844971	Callee	CHECK_STREAM_PTR		5844675	0					
ANR	5844972	Identifier	CHECK_STREAM_PTR		5844675	0					
ANR	5844973	ArgumentList	2		5844675	1					
ANR	5844974	Argument	2		5844675	0					
ANR	5844975	PrimaryExpression	2		5844675	0					
ANR	5844976	ExpressionStatement	colors [ 0 ] = s -> buf [ stream_ptr ++ ]	119:16:2124:2156	5844675	2	True				
ANR	5844977	AssignmentExpression	colors [ 0 ] = s -> buf [ stream_ptr ++ ]		5844675	0		=			
ANR	5844978	ArrayIndexing	colors [ 0 ]		5844675	0					
ANR	5844979	Identifier	colors		5844675	0					
ANR	5844980	PrimaryExpression	0		5844675	1					
ANR	5844981	ArrayIndexing	s -> buf [ stream_ptr ++ ]		5844675	1					
ANR	5844982	PtrMemberAccess	s -> buf		5844675	0					
ANR	5844983	Identifier	s		5844675	0					
ANR	5844984	Identifier	buf		5844675	1					
ANR	5844985	PostIncDecOperationExpression	stream_ptr ++		5844675	1					
ANR	5844986	Identifier	stream_ptr		5844675	0					
ANR	5844987	IncDec	++		5844675	1					
ANR	5844988	ExpressionStatement	colors [ 1 ] = s -> buf [ stream_ptr ++ ]	121:16:2175:2207	5844675	3	True				
ANR	5844989	AssignmentExpression	colors [ 1 ] = s -> buf [ stream_ptr ++ ]		5844675	0		=			
ANR	5844990	ArrayIndexing	colors [ 1 ]		5844675	0					
ANR	5844991	Identifier	colors		5844675	0					
ANR	5844992	PrimaryExpression	1		5844675	1					
ANR	5844993	ArrayIndexing	s -> buf [ stream_ptr ++ ]		5844675	1					
ANR	5844994	PtrMemberAccess	s -> buf		5844675	0					
ANR	5844995	Identifier	s		5844675	0					
ANR	5844996	Identifier	buf		5844675	1					
ANR	5844997	PostIncDecOperationExpression	stream_ptr ++		5844675	1					
ANR	5844998	Identifier	stream_ptr		5844675	0					
ANR	5844999	IncDec	++		5844675	1					
ANR	5845000	ForStatement	for ( pixel_y = 0 ; pixel_y < 4 ; pixel_y ++ )		5844675	4					
ANR	5845001	ForInit	pixel_y = 0 ;	125:21:2233:2244	5844675	0	True				
ANR	5845002	AssignmentExpression	pixel_y = 0		5844675	0		=			
ANR	5845003	Identifier	pixel_y		5844675	0					
ANR	5845004	PrimaryExpression	0		5844675	1					
ANR	5845005	Condition	pixel_y < 4	125:34:2246:2256	5844675	1	True				
ANR	5845006	RelationalExpression	pixel_y < 4		5844675	0		<			
ANR	5845007	Identifier	pixel_y		5844675	0					
ANR	5845008	PrimaryExpression	4		5844675	1					
ANR	5845009	PostIncDecOperationExpression	pixel_y ++	125:47:2259:2267	5844675	2	True				
ANR	5845010	Identifier	pixel_y		5844675	0					
ANR	5845011	IncDec	++		5844675	1					
ANR	5845012	CompoundStatement		123:58:2215:2215	5844675	3					
ANR	5845013	ForStatement	"for ( pixel_x = 0 ; pixel_x < 4 ; pixel_x ++ , flags >>= 1 )"		5844675	0					
ANR	5845014	ForInit	pixel_x = 0 ;	127:25:2298:2309	5844675	0	True				
ANR	5845015	AssignmentExpression	pixel_x = 0		5844675	0		=			
ANR	5845016	Identifier	pixel_x		5844675	0					
ANR	5845017	PrimaryExpression	0		5844675	1					
ANR	5845018	Condition	pixel_x < 4	127:38:2311:2321	5844675	1	True				
ANR	5845019	RelationalExpression	pixel_x < 4		5844675	0		<			
ANR	5845020	Identifier	pixel_x		5844675	0					
ANR	5845021	PrimaryExpression	4		5844675	1					
ANR	5845022	Expression	"pixel_x ++ , flags >>= 1"	127:51:2324:2345	5844675	2	True				
ANR	5845023	PostIncDecOperationExpression	pixel_x ++		5844675	0					
ANR	5845024	Identifier	pixel_x		5844675	0					
ANR	5845025	IncDec	++		5844675	1					
ANR	5845026	AssignmentExpression	flags >>= 1		5844675	1		>>=			
ANR	5845027	Identifier	flags		5844675	0					
ANR	5845028	PrimaryExpression	1		5844675	1					
ANR	5845029	ExpressionStatement	pixels [ pixel_ptr ++ ] = colors [ ( flags & 0x1 ) ^ 1 ]	129:24:2373:2420	5844675	3	True				
ANR	5845030	AssignmentExpression	pixels [ pixel_ptr ++ ] = colors [ ( flags & 0x1 ) ^ 1 ]		5844675	0		=			
ANR	5845031	ArrayIndexing	pixels [ pixel_ptr ++ ]		5844675	0					
ANR	5845032	Identifier	pixels		5844675	0					
ANR	5845033	PostIncDecOperationExpression	pixel_ptr ++		5844675	1					
ANR	5845034	Identifier	pixel_ptr		5844675	0					
ANR	5845035	IncDec	++		5844675	1					
ANR	5845036	ArrayIndexing	colors [ ( flags & 0x1 ) ^ 1 ]		5844675	1					
ANR	5845037	Identifier	colors		5844675	0					
ANR	5845038	ExclusiveOrExpression	( flags & 0x1 ) ^ 1		5844675	1		^			
ANR	5845039	BitAndExpression	flags & 0x1		5844675	0		&			
ANR	5845040	Identifier	flags		5844675	0					
ANR	5845041	PrimaryExpression	0x1		5844675	1					
ANR	5845042	PrimaryExpression	1		5844675	1					
ANR	5845043	ExpressionStatement	pixel_ptr -= row_dec	131:20:2443:2463	5844675	1	True				
ANR	5845044	AssignmentExpression	pixel_ptr -= row_dec		5844675	0		-=			
ANR	5845045	Identifier	pixel_ptr		5844675	0					
ANR	5845046	Identifier	row_dec		5844675	1					
ANR	5845047	ElseStatement	else		5844675	0					
ANR	5845048	IfStatement	if ( byte_b >= 0x90 )		5844675	0					
ANR	5845049	Condition	byte_b >= 0x90	135:23:2508:2521	5844675	0	True				
ANR	5845050	RelationalExpression	byte_b >= 0x90		5844675	0		>=			
ANR	5845051	Identifier	byte_b		5844675	0					
ANR	5845052	PrimaryExpression	0x90		5844675	1					
ANR	5845053	CompoundStatement		133:39:2469:2469	5844675	1					
ANR	5845054	ExpressionStatement	flags = ( byte_b << 8 ) | byte_a	139:16:2583:2613	5844675	0	True				
ANR	5845055	AssignmentExpression	flags = ( byte_b << 8 ) | byte_a		5844675	0		=			
ANR	5845056	Identifier	flags		5844675	0					
ANR	5845057	InclusiveOrExpression	( byte_b << 8 ) | byte_a		5844675	1		|			
ANR	5845058	ShiftExpression	byte_b << 8		5844675	0		<<			
ANR	5845059	Identifier	byte_b		5844675	0					
ANR	5845060	PrimaryExpression	8		5844675	1					
ANR	5845061	Identifier	byte_a		5844675	1					
ANR	5845062	ExpressionStatement	CHECK_STREAM_PTR ( 8 )	143:16:2634:2653	5844675	1	True				
ANR	5845063	CallExpression	CHECK_STREAM_PTR ( 8 )		5844675	0					
ANR	5845064	Callee	CHECK_STREAM_PTR		5844675	0					
ANR	5845065	Identifier	CHECK_STREAM_PTR		5844675	0					
ANR	5845066	ArgumentList	8		5844675	1					
ANR	5845067	Argument	8		5844675	0					
ANR	5845068	PrimaryExpression	8		5844675	0					
ANR	5845069	ExpressionStatement	"memcpy ( colors , & s -> buf [ stream_ptr ] , 8 )"	145:16:2672:2710	5844675	2	True				
ANR	5845070	CallExpression	"memcpy ( colors , & s -> buf [ stream_ptr ] , 8 )"		5844675	0					
ANR	5845071	Callee	memcpy		5844675	0					
ANR	5845072	Identifier	memcpy		5844675	0					
ANR	5845073	ArgumentList	colors		5844675	1					
ANR	5845074	Argument	colors		5844675	0					
ANR	5845075	Identifier	colors		5844675	0					
ANR	5845076	Argument	& s -> buf [ stream_ptr ]		5844675	1					
ANR	5845077	UnaryOperationExpression	& s -> buf [ stream_ptr ]		5844675	0					
ANR	5845078	UnaryOperator	&		5844675	0					
ANR	5845079	ArrayIndexing	s -> buf [ stream_ptr ]		5844675	1					
ANR	5845080	PtrMemberAccess	s -> buf		5844675	0					
ANR	5845081	Identifier	s		5844675	0					
ANR	5845082	Identifier	buf		5844675	1					
ANR	5845083	Identifier	stream_ptr		5844675	1					
ANR	5845084	Argument	8		5844675	2					
ANR	5845085	PrimaryExpression	8		5844675	0					
ANR	5845086	ExpressionStatement	stream_ptr += 8	147:16:2729:2744	5844675	3	True				
ANR	5845087	AssignmentExpression	stream_ptr += 8		5844675	0		+=			
ANR	5845088	Identifier	stream_ptr		5844675	0					
ANR	5845089	PrimaryExpression	8		5844675	1					
ANR	5845090	ForStatement	for ( pixel_y = 0 ; pixel_y < 4 ; pixel_y ++ )		5844675	4					
ANR	5845091	ForInit	pixel_y = 0 ;	151:21:2770:2781	5844675	0	True				
ANR	5845092	AssignmentExpression	pixel_y = 0		5844675	0		=			
ANR	5845093	Identifier	pixel_y		5844675	0					
ANR	5845094	PrimaryExpression	0		5844675	1					
ANR	5845095	Condition	pixel_y < 4	151:34:2783:2793	5844675	1	True				
ANR	5845096	RelationalExpression	pixel_y < 4		5844675	0		<			
ANR	5845097	Identifier	pixel_y		5844675	0					
ANR	5845098	PrimaryExpression	4		5844675	1					
ANR	5845099	PostIncDecOperationExpression	pixel_y ++	151:47:2796:2804	5844675	2	True				
ANR	5845100	Identifier	pixel_y		5844675	0					
ANR	5845101	IncDec	++		5844675	1					
ANR	5845102	CompoundStatement		149:58:2752:2752	5844675	3					
ANR	5845103	ForStatement	"for ( pixel_x = 0 ; pixel_x < 4 ; pixel_x ++ , flags >>= 1 )"		5844675	0					
ANR	5845104	ForInit	pixel_x = 0 ;	153:25:2835:2846	5844675	0	True				
ANR	5845105	AssignmentExpression	pixel_x = 0		5844675	0		=			
ANR	5845106	Identifier	pixel_x		5844675	0					
ANR	5845107	PrimaryExpression	0		5844675	1					
ANR	5845108	Condition	pixel_x < 4	153:38:2848:2858	5844675	1	True				
ANR	5845109	RelationalExpression	pixel_x < 4		5844675	0		<			
ANR	5845110	Identifier	pixel_x		5844675	0					
ANR	5845111	PrimaryExpression	4		5844675	1					
ANR	5845112	Expression	"pixel_x ++ , flags >>= 1"	153:51:2861:2882	5844675	2	True				
ANR	5845113	PostIncDecOperationExpression	pixel_x ++		5844675	0					
ANR	5845114	Identifier	pixel_x		5844675	0					
ANR	5845115	IncDec	++		5844675	1					
ANR	5845116	AssignmentExpression	flags >>= 1		5844675	1		>>=			
ANR	5845117	Identifier	flags		5844675	0					
ANR	5845118	PrimaryExpression	1		5844675	1					
ANR	5845119	ExpressionStatement	pixels [ pixel_ptr ++ ] = colors [ ( ( pixel_y & 0x2 ) << 1 ) + ( pixel_x & 0x2 ) + ( ( flags & 0x1 ) ^ 1 ) ]	155:24:2910:3066	5844675	3	True				
ANR	5845120	AssignmentExpression	pixels [ pixel_ptr ++ ] = colors [ ( ( pixel_y & 0x2 ) << 1 ) + ( pixel_x & 0x2 ) + ( ( flags & 0x1 ) ^ 1 ) ]		5844675	0		=			
ANR	5845121	ArrayIndexing	pixels [ pixel_ptr ++ ]		5844675	0					
ANR	5845122	Identifier	pixels		5844675	0					
ANR	5845123	PostIncDecOperationExpression	pixel_ptr ++		5844675	1					
ANR	5845124	Identifier	pixel_ptr		5844675	0					
ANR	5845125	IncDec	++		5844675	1					
ANR	5845126	ArrayIndexing	colors [ ( ( pixel_y & 0x2 ) << 1 ) + ( pixel_x & 0x2 ) + ( ( flags & 0x1 ) ^ 1 ) ]		5844675	1					
ANR	5845127	Identifier	colors		5844675	0					
ANR	5845128	AdditiveExpression	( ( pixel_y & 0x2 ) << 1 ) + ( pixel_x & 0x2 ) + ( ( flags & 0x1 ) ^ 1 )		5844675	1		+			
ANR	5845129	ShiftExpression	( pixel_y & 0x2 ) << 1		5844675	0		<<			
ANR	5845130	BitAndExpression	pixel_y & 0x2		5844675	0		&			
ANR	5845131	Identifier	pixel_y		5844675	0					
ANR	5845132	PrimaryExpression	0x2		5844675	1					
ANR	5845133	PrimaryExpression	1		5844675	1					
ANR	5845134	AdditiveExpression	( pixel_x & 0x2 ) + ( ( flags & 0x1 ) ^ 1 )		5844675	1		+			
ANR	5845135	BitAndExpression	pixel_x & 0x2		5844675	0		&			
ANR	5845136	Identifier	pixel_x		5844675	0					
ANR	5845137	PrimaryExpression	0x2		5844675	1					
ANR	5845138	ExclusiveOrExpression	( flags & 0x1 ) ^ 1		5844675	1		^			
ANR	5845139	BitAndExpression	flags & 0x1		5844675	0		&			
ANR	5845140	Identifier	flags		5844675	0					
ANR	5845141	PrimaryExpression	0x1		5844675	1					
ANR	5845142	PrimaryExpression	1		5844675	1					
ANR	5845143	ExpressionStatement	pixel_ptr -= row_dec	161:20:3089:3109	5844675	1	True				
ANR	5845144	AssignmentExpression	pixel_ptr -= row_dec		5844675	0		-=			
ANR	5845145	Identifier	pixel_ptr		5844675	0					
ANR	5845146	Identifier	row_dec		5844675	1					
ANR	5845147	ElseStatement	else		5844675	0					
ANR	5845148	CompoundStatement		163:19:3095:3095	5844675	0					
ANR	5845149	ExpressionStatement	colors [ 0 ] = byte_a	169:16:3209:3227	5844675	0	True				
ANR	5845150	AssignmentExpression	colors [ 0 ] = byte_a		5844675	0		=			
ANR	5845151	ArrayIndexing	colors [ 0 ]		5844675	0					
ANR	5845152	Identifier	colors		5844675	0					
ANR	5845153	PrimaryExpression	0		5844675	1					
ANR	5845154	Identifier	byte_a		5844675	1					
ANR	5845155	ForStatement	for ( pixel_y = 0 ; pixel_y < 4 ; pixel_y ++ )		5844675	1					
ANR	5845156	ForInit	pixel_y = 0 ;	173:21:3253:3264	5844675	0	True				
ANR	5845157	AssignmentExpression	pixel_y = 0		5844675	0		=			
ANR	5845158	Identifier	pixel_y		5844675	0					
ANR	5845159	PrimaryExpression	0		5844675	1					
ANR	5845160	Condition	pixel_y < 4	173:34:3266:3276	5844675	1	True				
ANR	5845161	RelationalExpression	pixel_y < 4		5844675	0		<			
ANR	5845162	Identifier	pixel_y		5844675	0					
ANR	5845163	PrimaryExpression	4		5844675	1					
ANR	5845164	PostIncDecOperationExpression	pixel_y ++	173:47:3279:3287	5844675	2	True				
ANR	5845165	Identifier	pixel_y		5844675	0					
ANR	5845166	IncDec	++		5844675	1					
ANR	5845167	CompoundStatement		171:58:3235:3235	5844675	3					
ANR	5845168	ForStatement	for ( pixel_x = 0 ; pixel_x < 4 ; pixel_x ++ )		5844675	0					
ANR	5845169	ForInit	pixel_x = 0 ;	175:25:3318:3329	5844675	0	True				
ANR	5845170	AssignmentExpression	pixel_x = 0		5844675	0		=			
ANR	5845171	Identifier	pixel_x		5844675	0					
ANR	5845172	PrimaryExpression	0		5844675	1					
ANR	5845173	Condition	pixel_x < 4	175:38:3331:3341	5844675	1	True				
ANR	5845174	RelationalExpression	pixel_x < 4		5844675	0		<			
ANR	5845175	Identifier	pixel_x		5844675	0					
ANR	5845176	PrimaryExpression	4		5844675	1					
ANR	5845177	PostIncDecOperationExpression	pixel_x ++	175:51:3344:3352	5844675	2	True				
ANR	5845178	Identifier	pixel_x		5844675	0					
ANR	5845179	IncDec	++		5844675	1					
ANR	5845180	ExpressionStatement	pixels [ pixel_ptr ++ ] = colors [ 0 ]	177:24:3380:3411	5844675	3	True				
ANR	5845181	AssignmentExpression	pixels [ pixel_ptr ++ ] = colors [ 0 ]		5844675	0		=			
ANR	5845182	ArrayIndexing	pixels [ pixel_ptr ++ ]		5844675	0					
ANR	5845183	Identifier	pixels		5844675	0					
ANR	5845184	PostIncDecOperationExpression	pixel_ptr ++		5844675	1					
ANR	5845185	Identifier	pixel_ptr		5844675	0					
ANR	5845186	IncDec	++		5844675	1					
ANR	5845187	ArrayIndexing	colors [ 0 ]		5844675	1					
ANR	5845188	Identifier	colors		5844675	0					
ANR	5845189	PrimaryExpression	0		5844675	1					
ANR	5845190	ExpressionStatement	pixel_ptr -= row_dec	179:20:3434:3454	5844675	1	True				
ANR	5845191	AssignmentExpression	pixel_ptr -= row_dec		5844675	0		-=			
ANR	5845192	Identifier	pixel_ptr		5844675	0					
ANR	5845193	Identifier	row_dec		5844675	1					
ANR	5845194	ExpressionStatement	block_ptr += block_inc	187:12:3505:3527	5844675	6	True				
ANR	5845195	AssignmentExpression	block_ptr += block_inc		5844675	0		+=			
ANR	5845196	Identifier	block_ptr		5844675	0					
ANR	5845197	Identifier	block_inc		5844675	1					
ANR	5845198	ExpressionStatement	total_blocks --	189:12:3542:3556	5844675	7	True				
ANR	5845199	PostIncDecOperationExpression	total_blocks --		5844675	0					
ANR	5845200	Identifier	total_blocks		5844675	0					
ANR	5845201	IncDec	--		5844675	1					
ANR	5845202	IfStatement	if ( s -> avctx -> pix_fmt == PIX_FMT_PAL8 )		5844675	23					
ANR	5845203	Condition	s -> avctx -> pix_fmt == PIX_FMT_PAL8	199:8:3640:3672	5844675	0	True				
ANR	5845204	EqualityExpression	s -> avctx -> pix_fmt == PIX_FMT_PAL8		5844675	0		==			
ANR	5845205	PtrMemberAccess	s -> avctx -> pix_fmt		5844675	0					
ANR	5845206	PtrMemberAccess	s -> avctx		5844675	0					
ANR	5845207	Identifier	s		5844675	0					
ANR	5845208	Identifier	avctx		5844675	1					
ANR	5845209	Identifier	pix_fmt		5844675	1					
ANR	5845210	Identifier	PIX_FMT_PAL8		5844675	1					
ANR	5845211	ExpressionStatement	"memcpy ( s -> frame . data [ 1 ] , s -> palette , PALETTE_COUNT * 4 )"	201:8:3684:3739	5844675	1	True				
ANR	5845212	CallExpression	"memcpy ( s -> frame . data [ 1 ] , s -> palette , PALETTE_COUNT * 4 )"		5844675	0					
ANR	5845213	Callee	memcpy		5844675	0					
ANR	5845214	Identifier	memcpy		5844675	0					
ANR	5845215	ArgumentList	s -> frame . data [ 1 ]		5844675	1					
ANR	5845216	Argument	s -> frame . data [ 1 ]		5844675	0					
ANR	5845217	ArrayIndexing	s -> frame . data [ 1 ]		5844675	0					
ANR	5845218	MemberAccess	s -> frame . data		5844675	0					
ANR	5845219	PtrMemberAccess	s -> frame		5844675	0					
ANR	5845220	Identifier	s		5844675	0					
ANR	5845221	Identifier	frame		5844675	1					
ANR	5845222	Identifier	data		5844675	1					
ANR	5845223	PrimaryExpression	1		5844675	1					
ANR	5845224	Argument	s -> palette		5844675	1					
ANR	5845225	PtrMemberAccess	s -> palette		5844675	0					
ANR	5845226	Identifier	s		5844675	0					
ANR	5845227	Identifier	palette		5844675	1					
ANR	5845228	Argument	PALETTE_COUNT * 4		5844675	2					
ANR	5845229	MultiplicativeExpression	PALETTE_COUNT * 4		5844675	0		*			
ANR	5845230	Identifier	PALETTE_COUNT		5844675	0					
ANR	5845231	PrimaryExpression	4		5844675	1					
ANR	5845232	ReturnType	static void		5844675	1					
ANR	5845233	Identifier	msvideo1_decode_8bit		5844675	2					
ANR	5845234	ParameterList	Msvideo1Context * s		5844675	3					
ANR	5845235	Parameter	Msvideo1Context * s	1:33:33:50	5844675	0	True				
ANR	5845236	ParameterType	Msvideo1Context *		5844675	0					
ANR	5845237	Identifier	s		5844675	1					
ANR	5845238	CFGEntryNode	ENTRY		5844675		True				
ANR	5845239	CFGExitNode	EXIT		5844675		True				
ANR	5845240	Symbol	s -> avctx -> pix_fmt		5844675						
ANR	5845241	Symbol	pixel_ptr		5844675						
ANR	5845242	Symbol	* s -> prev_frame		5844675						
ANR	5845243	Symbol	flags		5844675						
ANR	5845244	Symbol	s -> frame . data		5844675						
ANR	5845245	Symbol	PIX_FMT_PAL8		5844675						
ANR	5845246	Symbol	* s -> buf		5844675						
ANR	5845247	Symbol	total_blocks		5844675						
ANR	5845248	Symbol	stride		5844675						
ANR	5845249	Symbol	* s -> frame		5844675						
ANR	5845250	Symbol	pixel_x		5844675						
ANR	5845251	Symbol	colors		5844675						
ANR	5845252	Symbol	* colors		5844675						
ANR	5845253	Symbol	skip_blocks		5844675						
ANR	5845254	Symbol	* s -> frame . data		5844675						
ANR	5845255	Symbol	blocks_high		5844675						
ANR	5845256	Symbol	s -> avctx -> width		5844675						
ANR	5845257	Symbol	* * s		5844675						
ANR	5845258	Symbol	* pixel_x		5844675						
ANR	5845259	Symbol	s -> frame		5844675						
ANR	5845260	Symbol	* pixel_y		5844675						
ANR	5845261	Symbol	blocks_wide		5844675						
ANR	5845262	Symbol	PALETTE_COUNT		5844675						
ANR	5845263	Symbol	* s -> prev_frame . data		5844675						
ANR	5845264	Symbol	stream_ptr		5844675						
ANR	5845265	Symbol	* s -> avctx		5844675						
ANR	5845266	Symbol	* flags		5844675						
ANR	5845267	Symbol	prev_pixels		5844675						
ANR	5845268	Symbol	s -> prev_frame . data		5844675						
ANR	5845269	Symbol	s -> buf		5844675						
ANR	5845270	Symbol	block_inc		5844675						
ANR	5845271	Symbol	* s -> frame . linesize		5844675						
ANR	5845272	Symbol	s -> prev_frame		5844675						
ANR	5845273	Symbol	byte_a		5844675						
ANR	5845274	Symbol	pixel_y		5844675						
ANR	5845275	Symbol	byte_b		5844675						
ANR	5845276	Symbol	s		5844675						
ANR	5845277	Symbol	pixels		5844675						
ANR	5845278	Symbol	s -> frame . linesize		5844675						
ANR	5845279	Symbol	row_dec		5844675						
ANR	5845280	Symbol	* pixels		5844675						
ANR	5845281	Symbol	s -> avctx -> height		5844675						
ANR	5845282	Symbol	block_ptr		5844675						
ANR	5845283	Symbol	s -> avctx		5844675						
ANR	5845284	Symbol	* s		5844675						
ANR	5845285	Symbol	block_x		5844675						
ANR	5845286	Symbol	block_y		5844675						
ANR	5845287	Symbol	s -> palette		5844675						
