command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6029167	File	/home/p4ultr4n/workplace/ReVeal/raw_code/next_list_0.c								
ANR	6029168	Function	next_list	1:0:0:605							
ANR	6029169	FunctionDef	"next_list (Visitor * v , GenericList * * list , size_t size)"		6029168	0					
ANR	6029170	CompoundStatement		3:0:76:605	6029168	0					
ANR	6029171	IdentifierDeclStatement	StringOutputVisitor * sov = to_sov ( v ) ;	5:4:83:119	6029168	0	True				
ANR	6029172	IdentifierDecl	* sov = to_sov ( v )		6029168	0					
ANR	6029173	IdentifierDeclType	StringOutputVisitor *		6029168	0					
ANR	6029174	Identifier	sov		6029168	1					
ANR	6029175	AssignmentExpression	* sov = to_sov ( v )		6029168	2		=			
ANR	6029176	Identifier	sov		6029168	0					
ANR	6029177	CallExpression	to_sov ( v )		6029168	1					
ANR	6029178	Callee	to_sov		6029168	0					
ANR	6029179	Identifier	to_sov		6029168	0					
ANR	6029180	ArgumentList	v		6029168	1					
ANR	6029181	Argument	v		6029168	0					
ANR	6029182	Identifier	v		6029168	0					
ANR	6029183	IdentifierDeclStatement	GenericList * ret = NULL ;	7:4:126:149	6029168	1	True				
ANR	6029184	IdentifierDecl	* ret = NULL		6029168	0					
ANR	6029185	IdentifierDeclType	GenericList *		6029168	0					
ANR	6029186	Identifier	ret		6029168	1					
ANR	6029187	AssignmentExpression	* ret = NULL		6029168	2		=			
ANR	6029188	Identifier	NULL		6029168	0					
ANR	6029189	Identifier	NULL		6029168	1					
ANR	6029190	IfStatement	if ( * list )		6029168	2					
ANR	6029191	Condition	* list	9:8:160:164	6029168	0	True				
ANR	6029192	UnaryOperationExpression	* list		6029168	0					
ANR	6029193	UnaryOperator	*		6029168	0					
ANR	6029194	Identifier	list		6029168	1					
ANR	6029195	CompoundStatement		7:15:90:90	6029168	1					
ANR	6029196	IfStatement	if ( sov -> head )		6029168	0					
ANR	6029197	Condition	sov -> head	11:12:182:190	6029168	0	True				
ANR	6029198	PtrMemberAccess	sov -> head		6029168	0					
ANR	6029199	Identifier	sov		6029168	0					
ANR	6029200	Identifier	head		6029168	1					
ANR	6029201	CompoundStatement		9:23:116:116	6029168	1					
ANR	6029202	ExpressionStatement	ret = * list	13:12:208:219	6029168	0	True				
ANR	6029203	AssignmentExpression	ret = * list		6029168	0		=			
ANR	6029204	Identifier	ret		6029168	0					
ANR	6029205	UnaryOperationExpression	* list		6029168	1					
ANR	6029206	UnaryOperator	*		6029168	0					
ANR	6029207	Identifier	list		6029168	1					
ANR	6029208	ElseStatement	else		6029168	0					
ANR	6029209	CompoundStatement		13:15:160:160	6029168	0					
ANR	6029210	ExpressionStatement	ret = ( * list ) -> next	17:12:252:271	6029168	0	True				
ANR	6029211	AssignmentExpression	ret = ( * list ) -> next		6029168	0		=			
ANR	6029212	Identifier	ret		6029168	0					
ANR	6029213	PtrMemberAccess	( * list ) -> next		6029168	1					
ANR	6029214	UnaryOperationExpression	* list		6029168	0					
ANR	6029215	UnaryOperator	*		6029168	0					
ANR	6029216	Identifier	list		6029168	1					
ANR	6029217	Identifier	next		6029168	1					
ANR	6029218	IfStatement	if ( sov -> head )		6029168	1					
ANR	6029219	Condition	sov -> head	23:12:299:307	6029168	0	True				
ANR	6029220	PtrMemberAccess	sov -> head		6029168	0					
ANR	6029221	Identifier	sov		6029168	0					
ANR	6029222	Identifier	head		6029168	1					
ANR	6029223	CompoundStatement		21:23:233:233	6029168	1					
ANR	6029224	IfStatement	if ( ret && ret -> next == NULL )		6029168	0					
ANR	6029225	Condition	ret && ret -> next == NULL	25:16:329:352	6029168	0	True				
ANR	6029226	AndExpression	ret && ret -> next == NULL		6029168	0		&&			
ANR	6029227	Identifier	ret		6029168	0					
ANR	6029228	EqualityExpression	ret -> next == NULL		6029168	1		==			
ANR	6029229	PtrMemberAccess	ret -> next		6029168	0					
ANR	6029230	Identifier	ret		6029168	0					
ANR	6029231	Identifier	next		6029168	1					
ANR	6029232	Identifier	NULL		6029168	1					
ANR	6029233	CompoundStatement		23:42:278:278	6029168	1					
ANR	6029234	ExpressionStatement	sov -> list_mode = LM_NONE	27:16:374:398	6029168	0	True				
ANR	6029235	AssignmentExpression	sov -> list_mode = LM_NONE		6029168	0		=			
ANR	6029236	PtrMemberAccess	sov -> list_mode		6029168	0					
ANR	6029237	Identifier	sov		6029168	0					
ANR	6029238	Identifier	list_mode		6029168	1					
ANR	6029239	Identifier	LM_NONE		6029168	1					
ANR	6029240	ExpressionStatement	sov -> head = false	31:12:428:445	6029168	1	True				
ANR	6029241	AssignmentExpression	sov -> head = false		6029168	0		=			
ANR	6029242	PtrMemberAccess	sov -> head		6029168	0					
ANR	6029243	Identifier	sov		6029168	0					
ANR	6029244	Identifier	head		6029168	1					
ANR	6029245	Identifier	false		6029168	1					
ANR	6029246	ElseStatement	else		6029168	0					
ANR	6029247	CompoundStatement		31:15:386:386	6029168	0					
ANR	6029248	IfStatement	if ( ret && ret -> next == NULL )		6029168	0					
ANR	6029249	Condition	ret && ret -> next == NULL	35:16:482:505	6029168	0	True				
ANR	6029250	AndExpression	ret && ret -> next == NULL		6029168	0		&&			
ANR	6029251	Identifier	ret		6029168	0					
ANR	6029252	EqualityExpression	ret -> next == NULL		6029168	1		==			
ANR	6029253	PtrMemberAccess	ret -> next		6029168	0					
ANR	6029254	Identifier	ret		6029168	0					
ANR	6029255	Identifier	next		6029168	1					
ANR	6029256	Identifier	NULL		6029168	1					
ANR	6029257	CompoundStatement		33:42:431:431	6029168	1					
ANR	6029258	ExpressionStatement	sov -> list_mode = LM_END	37:16:527:550	6029168	0	True				
ANR	6029259	AssignmentExpression	sov -> list_mode = LM_END		6029168	0		=			
ANR	6029260	PtrMemberAccess	sov -> list_mode		6029168	0					
ANR	6029261	Identifier	sov		6029168	0					
ANR	6029262	Identifier	list_mode		6029168	1					
ANR	6029263	Identifier	LM_END		6029168	1					
ANR	6029264	ReturnStatement	return ret ;	47:4:592:602	6029168	3	True				
ANR	6029265	Identifier	ret		6029168	0					
ANR	6029266	ReturnType	static GenericList *		6029168	1					
ANR	6029267	Identifier	next_list		6029168	2					
ANR	6029268	ParameterList	"Visitor * v , GenericList * * list , size_t size"		6029168	3					
ANR	6029269	Parameter	Visitor * v	1:30:30:39	6029168	0	True				
ANR	6029270	ParameterType	Visitor *		6029168	0					
ANR	6029271	Identifier	v		6029168	1					
ANR	6029272	Parameter	GenericList * * list	1:42:42:59	6029168	1	True				
ANR	6029273	ParameterType	GenericList * *		6029168	0					
ANR	6029274	Identifier	list		6029168	1					
ANR	6029275	Parameter	size_t size	1:62:62:72	6029168	2	True				
ANR	6029276	ParameterType	size_t		6029168	0					
ANR	6029277	Identifier	size		6029168	1					
ANR	6029278	CFGEntryNode	ENTRY		6029168		True				
ANR	6029279	CFGExitNode	EXIT		6029168		True				
ANR	6029280	Symbol	ret		6029168						
ANR	6029281	Symbol	NULL		6029168						
ANR	6029282	Symbol	* sov		6029168						
ANR	6029283	Symbol	LM_END		6029168						
ANR	6029284	Symbol	LM_NONE		6029168						
ANR	6029285	Symbol	false		6029168						
ANR	6029286	Symbol	* ret		6029168						
ANR	6029287	Symbol	list		6029168						
ANR	6029288	Symbol	sov -> list_mode		6029168						
ANR	6029289	Symbol	to_sov		6029168						
ANR	6029290	Symbol	* * list		6029168						
ANR	6029291	Symbol	( * list ) -> next		6029168						
ANR	6029292	Symbol	size		6029168						
ANR	6029293	Symbol	sov -> head		6029168						
ANR	6029294	Symbol	* list		6029168						
ANR	6029295	Symbol	v		6029168						
ANR	6029296	Symbol	ret -> next		6029168						
ANR	6029297	Symbol	sov		6029168						
