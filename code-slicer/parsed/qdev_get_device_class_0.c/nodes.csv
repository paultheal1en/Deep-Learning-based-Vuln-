command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6920707	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qdev_get_device_class_0.c								
ANR	6920708	Function	qdev_get_device_class	1:0:0:1019							
ANR	6920709	FunctionDef	"qdev_get_device_class (const char * * driver , Error * * errp)"		6920708	0					
ANR	6920710	CompoundStatement		3:0:78:1019	6920708	0					
ANR	6920711	IdentifierDeclStatement	ObjectClass * oc ;	5:4:85:100	6920708	0	True				
ANR	6920712	IdentifierDecl	* oc		6920708	0					
ANR	6920713	IdentifierDeclType	ObjectClass *		6920708	0					
ANR	6920714	Identifier	oc		6920708	1					
ANR	6920715	IdentifierDeclStatement	DeviceClass * dc ;	7:4:107:122	6920708	1	True				
ANR	6920716	IdentifierDecl	* dc		6920708	0					
ANR	6920717	IdentifierDeclType	DeviceClass *		6920708	0					
ANR	6920718	Identifier	dc		6920708	1					
ANR	6920719	ExpressionStatement	oc = object_class_by_name ( * driver )	11:4:131:165	6920708	2	True				
ANR	6920720	AssignmentExpression	oc = object_class_by_name ( * driver )		6920708	0		=			
ANR	6920721	Identifier	oc		6920708	0					
ANR	6920722	CallExpression	object_class_by_name ( * driver )		6920708	1					
ANR	6920723	Callee	object_class_by_name		6920708	0					
ANR	6920724	Identifier	object_class_by_name		6920708	0					
ANR	6920725	ArgumentList	* driver		6920708	1					
ANR	6920726	Argument	* driver		6920708	0					
ANR	6920727	UnaryOperationExpression	* driver		6920708	0					
ANR	6920728	UnaryOperator	*		6920708	0					
ANR	6920729	Identifier	driver		6920708	1					
ANR	6920730	IfStatement	if ( ! oc )		6920708	3					
ANR	6920731	Condition	! oc	13:8:176:178	6920708	0	True				
ANR	6920732	UnaryOperationExpression	! oc		6920708	0					
ANR	6920733	UnaryOperator	!		6920708	0					
ANR	6920734	Identifier	oc		6920708	1					
ANR	6920735	CompoundStatement		13:8:113:167	6920708	1					
ANR	6920736	IdentifierDeclStatement	const char * typename = find_typename_by_alias ( * driver ) ;	15:8:192:246	6920708	0	True				
ANR	6920737	IdentifierDecl	* typename = find_typename_by_alias ( * driver )		6920708	0					
ANR	6920738	IdentifierDeclType	const char *		6920708	0					
ANR	6920739	Identifier	typename		6920708	1					
ANR	6920740	AssignmentExpression	* typename = find_typename_by_alias ( * driver )		6920708	2		=			
ANR	6920741	Identifier	typename		6920708	0					
ANR	6920742	CallExpression	find_typename_by_alias ( * driver )		6920708	1					
ANR	6920743	Callee	find_typename_by_alias		6920708	0					
ANR	6920744	Identifier	find_typename_by_alias		6920708	0					
ANR	6920745	ArgumentList	* driver		6920708	1					
ANR	6920746	Argument	* driver		6920708	0					
ANR	6920747	UnaryOperationExpression	* driver		6920708	0					
ANR	6920748	UnaryOperator	*		6920708	0					
ANR	6920749	Identifier	driver		6920708	1					
ANR	6920750	IfStatement	if ( typename )		6920708	1					
ANR	6920751	Condition	typename	19:12:263:270	6920708	0	True				
ANR	6920752	Identifier	typename		6920708	0					
ANR	6920753	CompoundStatement		17:22:194:194	6920708	1					
ANR	6920754	ExpressionStatement	* driver = typename	21:12:288:306	6920708	0	True				
ANR	6920755	AssignmentExpression	* driver = typename		6920708	0		=			
ANR	6920756	UnaryOperationExpression	* driver		6920708	0					
ANR	6920757	UnaryOperator	*		6920708	0					
ANR	6920758	Identifier	driver		6920708	1					
ANR	6920759	Identifier	typename		6920708	1					
ANR	6920760	ExpressionStatement	oc = object_class_by_name ( * driver )	23:12:321:355	6920708	1	True				
ANR	6920761	AssignmentExpression	oc = object_class_by_name ( * driver )		6920708	0		=			
ANR	6920762	Identifier	oc		6920708	0					
ANR	6920763	CallExpression	object_class_by_name ( * driver )		6920708	1					
ANR	6920764	Callee	object_class_by_name		6920708	0					
ANR	6920765	Identifier	object_class_by_name		6920708	0					
ANR	6920766	ArgumentList	* driver		6920708	1					
ANR	6920767	Argument	* driver		6920708	0					
ANR	6920768	UnaryOperationExpression	* driver		6920708	0					
ANR	6920769	UnaryOperator	*		6920708	0					
ANR	6920770	Identifier	driver		6920708	1					
ANR	6920771	IfStatement	"if ( ! object_class_dynamic_cast ( oc , TYPE_DEVICE ) )"		6920708	4					
ANR	6920772	Condition	"! object_class_dynamic_cast ( oc , TYPE_DEVICE )"	31:8:386:428	6920708	0	True				
ANR	6920773	UnaryOperationExpression	"! object_class_dynamic_cast ( oc , TYPE_DEVICE )"		6920708	0					
ANR	6920774	UnaryOperator	!		6920708	0					
ANR	6920775	CallExpression	"object_class_dynamic_cast ( oc , TYPE_DEVICE )"		6920708	1					
ANR	6920776	Callee	object_class_dynamic_cast		6920708	0					
ANR	6920777	Identifier	object_class_dynamic_cast		6920708	0					
ANR	6920778	ArgumentList	oc		6920708	1					
ANR	6920779	Argument	oc		6920708	0					
ANR	6920780	Identifier	oc		6920708	0					
ANR	6920781	Argument	TYPE_DEVICE		6920708	1					
ANR	6920782	Identifier	TYPE_DEVICE		6920708	0					
ANR	6920783	CompoundStatement		29:53:352:352	6920708	1					
ANR	6920784	ExpressionStatement	"error_setg ( errp , ""'%s' is not a valid device model name"" , * driver )"	33:8:442:508	6920708	0	True				
ANR	6920785	CallExpression	"error_setg ( errp , ""'%s' is not a valid device model name"" , * driver )"		6920708	0					
ANR	6920786	Callee	error_setg		6920708	0					
ANR	6920787	Identifier	error_setg		6920708	0					
ANR	6920788	ArgumentList	errp		6920708	1					
ANR	6920789	Argument	errp		6920708	0					
ANR	6920790	Identifier	errp		6920708	0					
ANR	6920791	Argument	"""'%s' is not a valid device model name"""		6920708	1					
ANR	6920792	PrimaryExpression	"""'%s' is not a valid device model name"""		6920708	0					
ANR	6920793	Argument	* driver		6920708	2					
ANR	6920794	UnaryOperationExpression	* driver		6920708	0					
ANR	6920795	UnaryOperator	*		6920708	0					
ANR	6920796	Identifier	driver		6920708	1					
ANR	6920797	ReturnStatement	return NULL ;	35:8:519:530	6920708	1	True				
ANR	6920798	Identifier	NULL		6920708	0					
ANR	6920799	IfStatement	if ( object_class_is_abstract ( oc ) )		6920708	5					
ANR	6920800	Condition	object_class_is_abstract ( oc )	41:8:550:577	6920708	0	True				
ANR	6920801	CallExpression	object_class_is_abstract ( oc )		6920708	0					
ANR	6920802	Callee	object_class_is_abstract		6920708	0					
ANR	6920803	Identifier	object_class_is_abstract		6920708	0					
ANR	6920804	ArgumentList	oc		6920708	1					
ANR	6920805	Argument	oc		6920708	0					
ANR	6920806	Identifier	oc		6920708	0					
ANR	6920807	CompoundStatement		39:38:501:501	6920708	1					
ANR	6920808	ExpressionStatement	"error_setg ( errp , QERR_INVALID_PARAMETER_VALUE , ""driver"" , ""non-abstract device type"" )"	43:8:591:695	6920708	0	True				
ANR	6920809	CallExpression	"error_setg ( errp , QERR_INVALID_PARAMETER_VALUE , ""driver"" , ""non-abstract device type"" )"		6920708	0					
ANR	6920810	Callee	error_setg		6920708	0					
ANR	6920811	Identifier	error_setg		6920708	0					
ANR	6920812	ArgumentList	errp		6920708	1					
ANR	6920813	Argument	errp		6920708	0					
ANR	6920814	Identifier	errp		6920708	0					
ANR	6920815	Argument	QERR_INVALID_PARAMETER_VALUE		6920708	1					
ANR	6920816	Identifier	QERR_INVALID_PARAMETER_VALUE		6920708	0					
ANR	6920817	Argument	"""driver"""		6920708	2					
ANR	6920818	PrimaryExpression	"""driver"""		6920708	0					
ANR	6920819	Argument	"""non-abstract device type"""		6920708	3					
ANR	6920820	PrimaryExpression	"""non-abstract device type"""		6920708	0					
ANR	6920821	ReturnStatement	return NULL ;	47:8:706:717	6920708	1	True				
ANR	6920822	Identifier	NULL		6920708	0					
ANR	6920823	ExpressionStatement	dc = DEVICE_CLASS ( oc )	53:4:733:754	6920708	6	True				
ANR	6920824	AssignmentExpression	dc = DEVICE_CLASS ( oc )		6920708	0		=			
ANR	6920825	Identifier	dc		6920708	0					
ANR	6920826	CallExpression	DEVICE_CLASS ( oc )		6920708	1					
ANR	6920827	Callee	DEVICE_CLASS		6920708	0					
ANR	6920828	Identifier	DEVICE_CLASS		6920708	0					
ANR	6920829	ArgumentList	oc		6920708	1					
ANR	6920830	Argument	oc		6920708	0					
ANR	6920831	Identifier	oc		6920708	0					
ANR	6920832	IfStatement	if ( dc -> cannot_instantiate_with_device_add_yet || ( qdev_hotplug && ! dc -> hotpluggable ) )		6920708	7					
ANR	6920833	Condition	dc -> cannot_instantiate_with_device_add_yet || ( qdev_hotplug && ! dc -> hotpluggable )	55:8:765:854	6920708	0	True				
ANR	6920834	OrExpression	dc -> cannot_instantiate_with_device_add_yet || ( qdev_hotplug && ! dc -> hotpluggable )		6920708	0		||			
ANR	6920835	PtrMemberAccess	dc -> cannot_instantiate_with_device_add_yet		6920708	0					
ANR	6920836	Identifier	dc		6920708	0					
ANR	6920837	Identifier	cannot_instantiate_with_device_add_yet		6920708	1					
ANR	6920838	AndExpression	qdev_hotplug && ! dc -> hotpluggable		6920708	1		&&			
ANR	6920839	Identifier	qdev_hotplug		6920708	0					
ANR	6920840	UnaryOperationExpression	! dc -> hotpluggable		6920708	1					
ANR	6920841	UnaryOperator	!		6920708	0					
ANR	6920842	PtrMemberAccess	dc -> hotpluggable		6920708	1					
ANR	6920843	Identifier	dc		6920708	0					
ANR	6920844	Identifier	hotpluggable		6920708	1					
ANR	6920845	CompoundStatement		55:45:778:778	6920708	1					
ANR	6920846	ExpressionStatement	"error_setg ( errp , QERR_INVALID_PARAMETER_VALUE , ""driver"" , ""pluggable device type"" )"	59:8:868:969	6920708	0	True				
ANR	6920847	CallExpression	"error_setg ( errp , QERR_INVALID_PARAMETER_VALUE , ""driver"" , ""pluggable device type"" )"		6920708	0					
ANR	6920848	Callee	error_setg		6920708	0					
ANR	6920849	Identifier	error_setg		6920708	0					
ANR	6920850	ArgumentList	errp		6920708	1					
ANR	6920851	Argument	errp		6920708	0					
ANR	6920852	Identifier	errp		6920708	0					
ANR	6920853	Argument	QERR_INVALID_PARAMETER_VALUE		6920708	1					
ANR	6920854	Identifier	QERR_INVALID_PARAMETER_VALUE		6920708	0					
ANR	6920855	Argument	"""driver"""		6920708	2					
ANR	6920856	PrimaryExpression	"""driver"""		6920708	0					
ANR	6920857	Argument	"""pluggable device type"""		6920708	3					
ANR	6920858	PrimaryExpression	"""pluggable device type"""		6920708	0					
ANR	6920859	ReturnStatement	return NULL ;	63:8:980:991	6920708	1	True				
ANR	6920860	Identifier	NULL		6920708	0					
ANR	6920861	ReturnStatement	return dc ;	69:4:1007:1016	6920708	8	True				
ANR	6920862	Identifier	dc		6920708	0					
ANR	6920863	ReturnType	static DeviceClass *		6920708	1					
ANR	6920864	Identifier	qdev_get_device_class		6920708	2					
ANR	6920865	ParameterList	"const char * * driver , Error * * errp"		6920708	3					
ANR	6920866	Parameter	const char * * driver	1:42:42:60	6920708	0	True				
ANR	6920867	ParameterType	const char * *		6920708	0					
ANR	6920868	Identifier	driver		6920708	1					
ANR	6920869	Parameter	Error * * errp	1:63:63:74	6920708	1	True				
ANR	6920870	ParameterType	Error * *		6920708	0					
ANR	6920871	Identifier	errp		6920708	1					
ANR	6920872	CFGEntryNode	ENTRY		6920708		True				
ANR	6920873	CFGExitNode	EXIT		6920708		True				
ANR	6920874	Symbol	object_class_is_abstract		6920708						
ANR	6920875	Symbol	object_class_by_name		6920708						
ANR	6920876	Symbol	NULL		6920708						
ANR	6920877	Symbol	errp		6920708						
ANR	6920878	Symbol	* dc		6920708						
ANR	6920879	Symbol	dc -> hotpluggable		6920708						
ANR	6920880	Symbol	* driver		6920708						
ANR	6920881	Symbol	find_typename_by_alias		6920708						
ANR	6920882	Symbol	TYPE_DEVICE		6920708						
ANR	6920883	Symbol	dc -> cannot_instantiate_with_device_add_yet		6920708						
ANR	6920884	Symbol	driver		6920708						
ANR	6920885	Symbol	oc		6920708						
ANR	6920886	Symbol	qdev_hotplug		6920708						
ANR	6920887	Symbol	typename		6920708						
ANR	6920888	Symbol	object_class_dynamic_cast		6920708						
ANR	6920889	Symbol	dc		6920708						
ANR	6920890	Symbol	QERR_INVALID_PARAMETER_VALUE		6920708						
ANR	6920891	Symbol	DEVICE_CLASS		6920708						
