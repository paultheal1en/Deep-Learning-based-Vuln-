command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	550812	File	/home/p4ultr4n/workplace/ReVeal/raw_code/amr_wb_encode_init_0.c								
ANR	550813	Function	amr_wb_encode_init	1:0:0:636							
ANR	550814	FunctionDef	amr_wb_encode_init (AVCodecContext * avctx)		550813	0					
ANR	550815	CompoundStatement		3:0:62:636	550813	0					
ANR	550816	IdentifierDeclStatement	AMRWBContext * s = avctx -> priv_data ;	5:4:69:103	550813	0	True				
ANR	550817	IdentifierDecl	* s = avctx -> priv_data		550813	0					
ANR	550818	IdentifierDeclType	AMRWBContext *		550813	0					
ANR	550819	Identifier	s		550813	1					
ANR	550820	AssignmentExpression	* s = avctx -> priv_data		550813	2		=			
ANR	550821	Identifier	s		550813	0					
ANR	550822	PtrMemberAccess	avctx -> priv_data		550813	1					
ANR	550823	Identifier	avctx		550813	0					
ANR	550824	Identifier	priv_data		550813	1					
ANR	550825	IfStatement	if ( avctx -> sample_rate != 16000 )		550813	1					
ANR	550826	Condition	avctx -> sample_rate != 16000	9:8:116:142	550813	0	True				
ANR	550827	EqualityExpression	avctx -> sample_rate != 16000		550813	0		!=			
ANR	550828	PtrMemberAccess	avctx -> sample_rate		550813	0					
ANR	550829	Identifier	avctx		550813	0					
ANR	550830	Identifier	sample_rate		550813	1					
ANR	550831	PrimaryExpression	16000		550813	1					
ANR	550832	CompoundStatement		7:37:82:82	550813	1					
ANR	550833	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Only 16000Hz sample rate supported\\n"" )"	11:8:156:223	550813	0	True				
ANR	550834	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Only 16000Hz sample rate supported\\n"" )"		550813	0					
ANR	550835	Callee	av_log		550813	0					
ANR	550836	Identifier	av_log		550813	0					
ANR	550837	ArgumentList	avctx		550813	1					
ANR	550838	Argument	avctx		550813	0					
ANR	550839	Identifier	avctx		550813	0					
ANR	550840	Argument	AV_LOG_ERROR		550813	1					
ANR	550841	Identifier	AV_LOG_ERROR		550813	0					
ANR	550842	Argument	"""Only 16000Hz sample rate supported\\n"""		550813	2					
ANR	550843	PrimaryExpression	"""Only 16000Hz sample rate supported\\n"""		550813	0					
ANR	550844	ReturnStatement	return AVERROR ( ENOSYS ) ;	13:8:234:256	550813	1	True				
ANR	550845	CallExpression	AVERROR ( ENOSYS )		550813	0					
ANR	550846	Callee	AVERROR		550813	0					
ANR	550847	Identifier	AVERROR		550813	0					
ANR	550848	ArgumentList	ENOSYS		550813	1					
ANR	550849	Argument	ENOSYS		550813	0					
ANR	550850	Identifier	ENOSYS		550813	0					
ANR	550851	IfStatement	if ( avctx -> channels != 1 )		550813	2					
ANR	550852	Condition	avctx -> channels != 1	19:8:276:295	550813	0	True				
ANR	550853	EqualityExpression	avctx -> channels != 1		550813	0		!=			
ANR	550854	PtrMemberAccess	avctx -> channels		550813	0					
ANR	550855	Identifier	avctx		550813	0					
ANR	550856	Identifier	channels		550813	1					
ANR	550857	PrimaryExpression	1		550813	1					
ANR	550858	CompoundStatement		17:30:235:235	550813	1					
ANR	550859	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Only mono supported\\n"" )"	21:8:309:361	550813	0	True				
ANR	550860	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Only mono supported\\n"" )"		550813	0					
ANR	550861	Callee	av_log		550813	0					
ANR	550862	Identifier	av_log		550813	0					
ANR	550863	ArgumentList	avctx		550813	1					
ANR	550864	Argument	avctx		550813	0					
ANR	550865	Identifier	avctx		550813	0					
ANR	550866	Argument	AV_LOG_ERROR		550813	1					
ANR	550867	Identifier	AV_LOG_ERROR		550813	0					
ANR	550868	Argument	"""Only mono supported\\n"""		550813	2					
ANR	550869	PrimaryExpression	"""Only mono supported\\n"""		550813	0					
ANR	550870	ReturnStatement	return AVERROR ( ENOSYS ) ;	23:8:372:394	550813	1	True				
ANR	550871	CallExpression	AVERROR ( ENOSYS )		550813	0					
ANR	550872	Callee	AVERROR		550813	0					
ANR	550873	Identifier	AVERROR		550813	0					
ANR	550874	ArgumentList	ENOSYS		550813	1					
ANR	550875	Argument	ENOSYS		550813	0					
ANR	550876	Identifier	ENOSYS		550813	0					
ANR	550877	ExpressionStatement	"s -> mode = get_wb_bitrate_mode ( avctx -> bit_rate , avctx )"	29:4:410:474	550813	3	True				
ANR	550878	AssignmentExpression	"s -> mode = get_wb_bitrate_mode ( avctx -> bit_rate , avctx )"		550813	0		=			
ANR	550879	PtrMemberAccess	s -> mode		550813	0					
ANR	550880	Identifier	s		550813	0					
ANR	550881	Identifier	mode		550813	1					
ANR	550882	CallExpression	"get_wb_bitrate_mode ( avctx -> bit_rate , avctx )"		550813	1					
ANR	550883	Callee	get_wb_bitrate_mode		550813	0					
ANR	550884	Identifier	get_wb_bitrate_mode		550813	0					
ANR	550885	ArgumentList	avctx -> bit_rate		550813	1					
ANR	550886	Argument	avctx -> bit_rate		550813	0					
ANR	550887	PtrMemberAccess	avctx -> bit_rate		550813	0					
ANR	550888	Identifier	avctx		550813	0					
ANR	550889	Identifier	bit_rate		550813	1					
ANR	550890	Argument	avctx		550813	1					
ANR	550891	Identifier	avctx		550813	0					
ANR	550892	ExpressionStatement	s -> last_bitrate = avctx -> bit_rate	31:4:481:517	550813	4	True				
ANR	550893	AssignmentExpression	s -> last_bitrate = avctx -> bit_rate		550813	0		=			
ANR	550894	PtrMemberAccess	s -> last_bitrate		550813	0					
ANR	550895	Identifier	s		550813	0					
ANR	550896	Identifier	last_bitrate		550813	1					
ANR	550897	PtrMemberAccess	avctx -> bit_rate		550813	1					
ANR	550898	Identifier	avctx		550813	0					
ANR	550899	Identifier	bit_rate		550813	1					
ANR	550900	ExpressionStatement	avctx -> frame_size = 320	35:4:526:550	550813	5	True				
ANR	550901	AssignmentExpression	avctx -> frame_size = 320		550813	0		=			
ANR	550902	PtrMemberAccess	avctx -> frame_size		550813	0					
ANR	550903	Identifier	avctx		550813	0					
ANR	550904	Identifier	frame_size		550813	1					
ANR	550905	PrimaryExpression	320		550813	1					
ANR	550906	ExpressionStatement	avctx -> delay = 80	37:4:557:581	550813	6	True				
ANR	550907	AssignmentExpression	avctx -> delay = 80		550813	0		=			
ANR	550908	PtrMemberAccess	avctx -> delay		550813	0					
ANR	550909	Identifier	avctx		550813	0					
ANR	550910	Identifier	delay		550813	1					
ANR	550911	PrimaryExpression	80		550813	1					
ANR	550912	ExpressionStatement	s -> state = E_IF_init ( )	41:4:590:616	550813	7	True				
ANR	550913	AssignmentExpression	s -> state = E_IF_init ( )		550813	0		=			
ANR	550914	PtrMemberAccess	s -> state		550813	0					
ANR	550915	Identifier	s		550813	0					
ANR	550916	Identifier	state		550813	1					
ANR	550917	CallExpression	E_IF_init ( )		550813	1					
ANR	550918	Callee	E_IF_init		550813	0					
ANR	550919	Identifier	E_IF_init		550813	0					
ANR	550920	ArgumentList			550813	1					
ANR	550921	ReturnStatement	return 0 ;	45:4:625:633	550813	8	True				
ANR	550922	PrimaryExpression	0		550813	0					
ANR	550923	ReturnType	static av_cold int		550813	1					
ANR	550924	Identifier	amr_wb_encode_init		550813	2					
ANR	550925	ParameterList	AVCodecContext * avctx		550813	3					
ANR	550926	Parameter	AVCodecContext * avctx	1:38:38:58	550813	0	True				
ANR	550927	ParameterType	AVCodecContext *		550813	0					
ANR	550928	Identifier	avctx		550813	1					
ANR	550929	CFGEntryNode	ENTRY		550813		True				
ANR	550930	CFGExitNode	EXIT		550813		True				
ANR	550931	Symbol	s -> last_bitrate		550813						
ANR	550932	Symbol	avctx -> delay		550813						
ANR	550933	Symbol	AV_LOG_ERROR		550813						
ANR	550934	Symbol	s -> state		550813						
ANR	550935	Symbol	ENOSYS		550813						
ANR	550936	Symbol	avctx -> priv_data		550813						
ANR	550937	Symbol	avctx -> sample_rate		550813						
ANR	550938	Symbol	avctx -> channels		550813						
ANR	550939	Symbol	* avctx		550813						
ANR	550940	Symbol	s		550813						
ANR	550941	Symbol	avctx -> bit_rate		550813						
ANR	550942	Symbol	get_wb_bitrate_mode		550813						
ANR	550943	Symbol	avctx -> frame_size		550813						
ANR	550944	Symbol	AVERROR		550813						
ANR	550945	Symbol	s -> mode		550813						
ANR	550946	Symbol	avctx		550813						
ANR	550947	Symbol	* s		550813						
ANR	550948	Symbol	E_IF_init		550813						
