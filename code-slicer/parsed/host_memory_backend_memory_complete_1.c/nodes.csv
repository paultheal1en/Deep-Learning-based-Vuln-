command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4706478	File	/home/p4ultr4n/workplace/ReVeal/raw_code/host_memory_backend_memory_complete_1.c								
ANR	4706479	Function	host_memory_backend_memory_complete	1:0:0:3110							
ANR	4706480	FunctionDef	"host_memory_backend_memory_complete (UserCreatable * uc , Error * * errp)"		4706479	0					
ANR	4706481	CompoundStatement		3:0:70:3110	4706479	0					
ANR	4706482	IdentifierDeclStatement	HostMemoryBackend * backend = MEMORY_BACKEND ( uc ) ;	5:4:77:124	4706479	0	True				
ANR	4706483	IdentifierDecl	* backend = MEMORY_BACKEND ( uc )		4706479	0					
ANR	4706484	IdentifierDeclType	HostMemoryBackend *		4706479	0					
ANR	4706485	Identifier	backend		4706479	1					
ANR	4706486	AssignmentExpression	* backend = MEMORY_BACKEND ( uc )		4706479	2		=			
ANR	4706487	Identifier	backend		4706479	0					
ANR	4706488	CallExpression	MEMORY_BACKEND ( uc )		4706479	1					
ANR	4706489	Callee	MEMORY_BACKEND		4706479	0					
ANR	4706490	Identifier	MEMORY_BACKEND		4706479	0					
ANR	4706491	ArgumentList	uc		4706479	1					
ANR	4706492	Argument	uc		4706479	0					
ANR	4706493	Identifier	uc		4706479	0					
ANR	4706494	IdentifierDeclStatement	HostMemoryBackendClass * bc = MEMORY_BACKEND_GET_CLASS ( uc ) ;	7:4:131:188	4706479	1	True				
ANR	4706495	IdentifierDecl	* bc = MEMORY_BACKEND_GET_CLASS ( uc )		4706479	0					
ANR	4706496	IdentifierDeclType	HostMemoryBackendClass *		4706479	0					
ANR	4706497	Identifier	bc		4706479	1					
ANR	4706498	AssignmentExpression	* bc = MEMORY_BACKEND_GET_CLASS ( uc )		4706479	2		=			
ANR	4706499	Identifier	bc		4706479	0					
ANR	4706500	CallExpression	MEMORY_BACKEND_GET_CLASS ( uc )		4706479	1					
ANR	4706501	Callee	MEMORY_BACKEND_GET_CLASS		4706479	0					
ANR	4706502	Identifier	MEMORY_BACKEND_GET_CLASS		4706479	0					
ANR	4706503	ArgumentList	uc		4706479	1					
ANR	4706504	Argument	uc		4706479	0					
ANR	4706505	Identifier	uc		4706479	0					
ANR	4706506	IdentifierDeclStatement	Error * local_err = NULL ;	9:4:195:218	4706479	2	True				
ANR	4706507	IdentifierDecl	* local_err = NULL		4706479	0					
ANR	4706508	IdentifierDeclType	Error *		4706479	0					
ANR	4706509	Identifier	local_err		4706479	1					
ANR	4706510	AssignmentExpression	* local_err = NULL		4706479	2		=			
ANR	4706511	Identifier	NULL		4706479	0					
ANR	4706512	Identifier	NULL		4706479	1					
ANR	4706513	IdentifierDeclStatement	void * ptr ;	11:4:225:234	4706479	3	True				
ANR	4706514	IdentifierDecl	* ptr		4706479	0					
ANR	4706515	IdentifierDeclType	void *		4706479	0					
ANR	4706516	Identifier	ptr		4706479	1					
ANR	4706517	IdentifierDeclStatement	uint64_t sz ;	13:4:241:252	4706479	4	True				
ANR	4706518	IdentifierDecl	sz		4706479	0					
ANR	4706519	IdentifierDeclType	uint64_t		4706479	0					
ANR	4706520	Identifier	sz		4706479	1					
ANR	4706521	IfStatement	if ( bc -> alloc )		4706479	5					
ANR	4706522	Condition	bc -> alloc	17:8:265:273	4706479	0	True				
ANR	4706523	PtrMemberAccess	bc -> alloc		4706479	0					
ANR	4706524	Identifier	bc		4706479	0					
ANR	4706525	Identifier	alloc		4706479	1					
ANR	4706526	CompoundStatement		59:8:1041:1087	4706479	1					
ANR	4706527	ExpressionStatement	"bc -> alloc ( backend , & local_err )"	19:8:287:317	4706479	0	True				
ANR	4706528	CallExpression	"bc -> alloc ( backend , & local_err )"		4706479	0					
ANR	4706529	Callee	bc -> alloc		4706479	0					
ANR	4706530	PtrMemberAccess	bc -> alloc		4706479	0					
ANR	4706531	Identifier	bc		4706479	0					
ANR	4706532	Identifier	alloc		4706479	1					
ANR	4706533	ArgumentList	backend		4706479	1					
ANR	4706534	Argument	backend		4706479	0					
ANR	4706535	Identifier	backend		4706479	0					
ANR	4706536	Argument	& local_err		4706479	1					
ANR	4706537	UnaryOperationExpression	& local_err		4706479	0					
ANR	4706538	UnaryOperator	&		4706479	0					
ANR	4706539	Identifier	local_err		4706479	1					
ANR	4706540	IfStatement	if ( local_err )		4706479	1					
ANR	4706541	Condition	local_err	21:12:332:340	4706479	0	True				
ANR	4706542	Identifier	local_err		4706479	0					
ANR	4706543	CompoundStatement		19:23:272:272	4706479	1					
ANR	4706544	GotoStatement	goto out ;	23:12:358:366	4706479	0	True				
ANR	4706545	Identifier	out		4706479	0					
ANR	4706546	ExpressionStatement	ptr = memory_region_get_ram_ptr ( & backend -> mr )	29:8:390:435	4706479	2	True				
ANR	4706547	AssignmentExpression	ptr = memory_region_get_ram_ptr ( & backend -> mr )		4706479	0		=			
ANR	4706548	Identifier	ptr		4706479	0					
ANR	4706549	CallExpression	memory_region_get_ram_ptr ( & backend -> mr )		4706479	1					
ANR	4706550	Callee	memory_region_get_ram_ptr		4706479	0					
ANR	4706551	Identifier	memory_region_get_ram_ptr		4706479	0					
ANR	4706552	ArgumentList	& backend -> mr		4706479	1					
ANR	4706553	Argument	& backend -> mr		4706479	0					
ANR	4706554	UnaryOperationExpression	& backend -> mr		4706479	0					
ANR	4706555	UnaryOperator	&		4706479	0					
ANR	4706556	PtrMemberAccess	backend -> mr		4706479	1					
ANR	4706557	Identifier	backend		4706479	0					
ANR	4706558	Identifier	mr		4706479	1					
ANR	4706559	ExpressionStatement	sz = memory_region_size ( & backend -> mr )	31:8:446:483	4706479	3	True				
ANR	4706560	AssignmentExpression	sz = memory_region_size ( & backend -> mr )		4706479	0		=			
ANR	4706561	Identifier	sz		4706479	0					
ANR	4706562	CallExpression	memory_region_size ( & backend -> mr )		4706479	1					
ANR	4706563	Callee	memory_region_size		4706479	0					
ANR	4706564	Identifier	memory_region_size		4706479	0					
ANR	4706565	ArgumentList	& backend -> mr		4706479	1					
ANR	4706566	Argument	& backend -> mr		4706479	0					
ANR	4706567	UnaryOperationExpression	& backend -> mr		4706479	0					
ANR	4706568	UnaryOperator	&		4706479	0					
ANR	4706569	PtrMemberAccess	backend -> mr		4706479	1					
ANR	4706570	Identifier	backend		4706479	0					
ANR	4706571	Identifier	mr		4706479	1					
ANR	4706572	IfStatement	if ( backend -> merge )		4706479	4					
ANR	4706573	Condition	backend -> merge	35:12:500:513	4706479	0	True				
ANR	4706574	PtrMemberAccess	backend -> merge		4706479	0					
ANR	4706575	Identifier	backend		4706479	0					
ANR	4706576	Identifier	merge		4706479	1					
ANR	4706577	CompoundStatement		33:28:445:445	4706479	1					
ANR	4706578	ExpressionStatement	"qemu_madvise ( ptr , sz , QEMU_MADV_MERGEABLE )"	37:12:531:573	4706479	0	True				
ANR	4706579	CallExpression	"qemu_madvise ( ptr , sz , QEMU_MADV_MERGEABLE )"		4706479	0					
ANR	4706580	Callee	qemu_madvise		4706479	0					
ANR	4706581	Identifier	qemu_madvise		4706479	0					
ANR	4706582	ArgumentList	ptr		4706479	1					
ANR	4706583	Argument	ptr		4706479	0					
ANR	4706584	Identifier	ptr		4706479	0					
ANR	4706585	Argument	sz		4706479	1					
ANR	4706586	Identifier	sz		4706479	0					
ANR	4706587	Argument	QEMU_MADV_MERGEABLE		4706479	2					
ANR	4706588	Identifier	QEMU_MADV_MERGEABLE		4706479	0					
ANR	4706589	IfStatement	if ( ! backend -> dump )		4706479	5					
ANR	4706590	Condition	! backend -> dump	41:12:599:612	4706479	0	True				
ANR	4706591	UnaryOperationExpression	! backend -> dump		4706479	0					
ANR	4706592	UnaryOperator	!		4706479	0					
ANR	4706593	PtrMemberAccess	backend -> dump		4706479	1					
ANR	4706594	Identifier	backend		4706479	0					
ANR	4706595	Identifier	dump		4706479	1					
ANR	4706596	CompoundStatement		39:28:544:544	4706479	1					
ANR	4706597	ExpressionStatement	"qemu_madvise ( ptr , sz , QEMU_MADV_DONTDUMP )"	43:12:630:671	4706479	0	True				
ANR	4706598	CallExpression	"qemu_madvise ( ptr , sz , QEMU_MADV_DONTDUMP )"		4706479	0					
ANR	4706599	Callee	qemu_madvise		4706479	0					
ANR	4706600	Identifier	qemu_madvise		4706479	0					
ANR	4706601	ArgumentList	ptr		4706479	1					
ANR	4706602	Argument	ptr		4706479	0					
ANR	4706603	Identifier	ptr		4706479	0					
ANR	4706604	Argument	sz		4706479	1					
ANR	4706605	Identifier	sz		4706479	0					
ANR	4706606	Argument	QEMU_MADV_DONTDUMP		4706479	2					
ANR	4706607	Identifier	QEMU_MADV_DONTDUMP		4706479	0					
ANR	4706608	IdentifierDeclStatement	"unsigned long lastbit = find_last_bit ( backend -> host_nodes , MAX_NODES ) ;"	49:8:713:782	4706479	6	True				
ANR	4706609	IdentifierDecl	"lastbit = find_last_bit ( backend -> host_nodes , MAX_NODES )"		4706479	0					
ANR	4706610	IdentifierDeclType	unsigned long		4706479	0					
ANR	4706611	Identifier	lastbit		4706479	1					
ANR	4706612	AssignmentExpression	"lastbit = find_last_bit ( backend -> host_nodes , MAX_NODES )"		4706479	2		=			
ANR	4706613	Identifier	lastbit		4706479	0					
ANR	4706614	CallExpression	"find_last_bit ( backend -> host_nodes , MAX_NODES )"		4706479	1					
ANR	4706615	Callee	find_last_bit		4706479	0					
ANR	4706616	Identifier	find_last_bit		4706479	0					
ANR	4706617	ArgumentList	backend -> host_nodes		4706479	1					
ANR	4706618	Argument	backend -> host_nodes		4706479	0					
ANR	4706619	PtrMemberAccess	backend -> host_nodes		4706479	0					
ANR	4706620	Identifier	backend		4706479	0					
ANR	4706621	Identifier	host_nodes		4706479	1					
ANR	4706622	Argument	MAX_NODES		4706479	1					
ANR	4706623	Identifier	MAX_NODES		4706479	0					
ANR	4706624	IdentifierDeclStatement	unsigned long maxnode = ( lastbit + 1 ) % ( MAX_NODES + 1 ) ;	53:8:847:902	4706479	7	True				
ANR	4706625	IdentifierDecl	maxnode = ( lastbit + 1 ) % ( MAX_NODES + 1 )		4706479	0					
ANR	4706626	IdentifierDeclType	unsigned long		4706479	0					
ANR	4706627	Identifier	maxnode		4706479	1					
ANR	4706628	AssignmentExpression	maxnode = ( lastbit + 1 ) % ( MAX_NODES + 1 )		4706479	2		=			
ANR	4706629	Identifier	maxnode		4706479	0					
ANR	4706630	MultiplicativeExpression	( lastbit + 1 ) % ( MAX_NODES + 1 )		4706479	1		%			
ANR	4706631	AdditiveExpression	lastbit + 1		4706479	0		+			
ANR	4706632	Identifier	lastbit		4706479	0					
ANR	4706633	PrimaryExpression	1		4706479	1					
ANR	4706634	AdditiveExpression	MAX_NODES + 1		4706479	1		+			
ANR	4706635	Identifier	MAX_NODES		4706479	0					
ANR	4706636	PrimaryExpression	1		4706479	1					
ANR	4706637	IdentifierDeclStatement	unsigned flags = MPOL_MF_STRICT | MPOL_MF_MOVE ;	61:8:1112:1158	4706479	8	True				
ANR	4706638	IdentifierDecl	flags = MPOL_MF_STRICT | MPOL_MF_MOVE		4706479	0					
ANR	4706639	IdentifierDeclType	unsigned		4706479	0					
ANR	4706640	Identifier	flags		4706479	1					
ANR	4706641	AssignmentExpression	flags = MPOL_MF_STRICT | MPOL_MF_MOVE		4706479	2		=			
ANR	4706642	Identifier	flags		4706479	0					
ANR	4706643	InclusiveOrExpression	MPOL_MF_STRICT | MPOL_MF_MOVE		4706479	1		|			
ANR	4706644	Identifier	MPOL_MF_STRICT		4706479	0					
ANR	4706645	Identifier	MPOL_MF_MOVE		4706479	1					
ANR	4706646	IfStatement	if ( maxnode && backend -> policy == MPOL_DEFAULT )		4706479	9					
ANR	4706647	Condition	maxnode && backend -> policy == MPOL_DEFAULT	69:12:1295:1336	4706479	0	True				
ANR	4706648	AndExpression	maxnode && backend -> policy == MPOL_DEFAULT		4706479	0		&&			
ANR	4706649	Identifier	maxnode		4706479	0					
ANR	4706650	EqualityExpression	backend -> policy == MPOL_DEFAULT		4706479	1		==			
ANR	4706651	PtrMemberAccess	backend -> policy		4706479	0					
ANR	4706652	Identifier	backend		4706479	0					
ANR	4706653	Identifier	policy		4706479	1					
ANR	4706654	Identifier	MPOL_DEFAULT		4706479	1					
ANR	4706655	CompoundStatement		67:56:1268:1268	4706479	1					
ANR	4706656	Statement	error_setg	71:12:1354:1363	4706479	0	True				
ANR	4706657	Statement	(	71:22:1364:1364	4706479	1	True				
ANR	4706658	Statement	errp	71:23:1365:1368	4706479	2	True				
ANR	4706659	Statement	","	71:27:1369:1369	4706479	3	True				
ANR	4706660	Statement	"""host-nodes must be empty for policy default,"""	71:29:1371:1416	4706479	4	True				
ANR	4706661	Statement	""" or you should explicitly specify a policy other"""	73:23:1442:1491	4706479	5	True				
ANR	4706662	Statement	""" than default"""	75:23:1517:1531	4706479	6	True				
ANR	4706663	Statement	)	75:38:1532:1532	4706479	7	True				
ANR	4706664	ExpressionStatement		75:39:1533:1533	4706479	8	True				
ANR	4706665	ReturnStatement	return ;	77:12:1548:1554	4706479	9	True				
ANR	4706666	ElseStatement	else		4706479	0					
ANR	4706667	IfStatement	if ( maxnode == 0 && backend -> policy != MPOL_DEFAULT )		4706479	0					
ANR	4706668	Condition	maxnode == 0 && backend -> policy != MPOL_DEFAULT	79:19:1576:1622	4706479	0	True				
ANR	4706669	AndExpression	maxnode == 0 && backend -> policy != MPOL_DEFAULT		4706479	0		&&			
ANR	4706670	EqualityExpression	maxnode == 0		4706479	0		==			
ANR	4706671	Identifier	maxnode		4706479	0					
ANR	4706672	PrimaryExpression	0		4706479	1					
ANR	4706673	EqualityExpression	backend -> policy != MPOL_DEFAULT		4706479	1		!=			
ANR	4706674	PtrMemberAccess	backend -> policy		4706479	0					
ANR	4706675	Identifier	backend		4706479	0					
ANR	4706676	Identifier	policy		4706479	1					
ANR	4706677	Identifier	MPOL_DEFAULT		4706479	1					
ANR	4706678	CompoundStatement		77:68:1554:1554	4706479	1					
ANR	4706679	ExpressionStatement	"error_setg ( errp , ""host-nodes must be set for policy %s"" , HostMemPolicy_lookup [ backend -> policy ] )"	81:12:1640:1759	4706479	0	True				
ANR	4706680	CallExpression	"error_setg ( errp , ""host-nodes must be set for policy %s"" , HostMemPolicy_lookup [ backend -> policy ] )"		4706479	0					
ANR	4706681	Callee	error_setg		4706479	0					
ANR	4706682	Identifier	error_setg		4706479	0					
ANR	4706683	ArgumentList	errp		4706479	1					
ANR	4706684	Argument	errp		4706479	0					
ANR	4706685	Identifier	errp		4706479	0					
ANR	4706686	Argument	"""host-nodes must be set for policy %s"""		4706479	1					
ANR	4706687	PrimaryExpression	"""host-nodes must be set for policy %s"""		4706479	0					
ANR	4706688	Argument	HostMemPolicy_lookup [ backend -> policy ]		4706479	2					
ANR	4706689	ArrayIndexing	HostMemPolicy_lookup [ backend -> policy ]		4706479	0					
ANR	4706690	Identifier	HostMemPolicy_lookup		4706479	0					
ANR	4706691	PtrMemberAccess	backend -> policy		4706479	1					
ANR	4706692	Identifier	backend		4706479	0					
ANR	4706693	Identifier	policy		4706479	1					
ANR	4706694	ReturnStatement	return ;	85:12:1774:1780	4706479	1	True				
ANR	4706695	ExpressionStatement	assert ( sizeof ( backend -> host_nodes ) >= BITS_TO_LONGS ( MAX_NODES + 1 ) * sizeof ( unsigned long ) )	101:8:2097:2204	4706479	10	True				
ANR	4706696	CallExpression	assert ( sizeof ( backend -> host_nodes ) >= BITS_TO_LONGS ( MAX_NODES + 1 ) * sizeof ( unsigned long ) )		4706479	0					
ANR	4706697	Callee	assert		4706479	0					
ANR	4706698	Identifier	assert		4706479	0					
ANR	4706699	ArgumentList	sizeof ( backend -> host_nodes ) >= BITS_TO_LONGS ( MAX_NODES + 1 ) * sizeof ( unsigned long )		4706479	1					
ANR	4706700	Argument	sizeof ( backend -> host_nodes ) >= BITS_TO_LONGS ( MAX_NODES + 1 ) * sizeof ( unsigned long )		4706479	0					
ANR	4706701	RelationalExpression	sizeof ( backend -> host_nodes ) >= BITS_TO_LONGS ( MAX_NODES + 1 ) * sizeof ( unsigned long )		4706479	0		>=			
ANR	4706702	SizeofExpression	sizeof ( backend -> host_nodes )		4706479	0					
ANR	4706703	Sizeof	sizeof		4706479	0					
ANR	4706704	PtrMemberAccess	backend -> host_nodes		4706479	1					
ANR	4706705	Identifier	backend		4706479	0					
ANR	4706706	Identifier	host_nodes		4706479	1					
ANR	4706707	MultiplicativeExpression	BITS_TO_LONGS ( MAX_NODES + 1 ) * sizeof ( unsigned long )		4706479	1		*			
ANR	4706708	CallExpression	BITS_TO_LONGS ( MAX_NODES + 1 )		4706479	0					
ANR	4706709	Callee	BITS_TO_LONGS		4706479	0					
ANR	4706710	Identifier	BITS_TO_LONGS		4706479	0					
ANR	4706711	ArgumentList	MAX_NODES + 1		4706479	1					
ANR	4706712	Argument	MAX_NODES + 1		4706479	0					
ANR	4706713	AdditiveExpression	MAX_NODES + 1		4706479	0		+			
ANR	4706714	Identifier	MAX_NODES		4706479	0					
ANR	4706715	PrimaryExpression	1		4706479	1					
ANR	4706716	SizeofExpression	sizeof ( unsigned long )		4706479	1					
ANR	4706717	Sizeof	sizeof		4706479	0					
ANR	4706718	SizeofOperand	unsigned long		4706479	1					
ANR	4706719	ExpressionStatement	assert ( maxnode <= MAX_NODES )	105:8:2215:2243	4706479	11	True				
ANR	4706720	CallExpression	assert ( maxnode <= MAX_NODES )		4706479	0					
ANR	4706721	Callee	assert		4706479	0					
ANR	4706722	Identifier	assert		4706479	0					
ANR	4706723	ArgumentList	maxnode <= MAX_NODES		4706479	1					
ANR	4706724	Argument	maxnode <= MAX_NODES		4706479	0					
ANR	4706725	RelationalExpression	maxnode <= MAX_NODES		4706479	0		<=			
ANR	4706726	Identifier	maxnode		4706479	0					
ANR	4706727	Identifier	MAX_NODES		4706479	1					
ANR	4706728	IfStatement	"if ( mbind ( ptr , sz , backend -> policy , maxnode ? backend -> host_nodes : NULL , maxnode + 1 , flags ) )"		4706479	12					
ANR	4706729	Condition	"mbind ( ptr , sz , backend -> policy , maxnode ? backend -> host_nodes : NULL , maxnode + 1 , flags )"	107:12:2258:2365	4706479	0	True				
ANR	4706730	CallExpression	"mbind ( ptr , sz , backend -> policy , maxnode ? backend -> host_nodes : NULL , maxnode + 1 , flags )"		4706479	0					
ANR	4706731	Callee	mbind		4706479	0					
ANR	4706732	Identifier	mbind		4706479	0					
ANR	4706733	ArgumentList	ptr		4706479	1					
ANR	4706734	Argument	ptr		4706479	0					
ANR	4706735	Identifier	ptr		4706479	0					
ANR	4706736	Argument	sz		4706479	1					
ANR	4706737	Identifier	sz		4706479	0					
ANR	4706738	Argument	backend -> policy		4706479	2					
ANR	4706739	PtrMemberAccess	backend -> policy		4706479	0					
ANR	4706740	Identifier	backend		4706479	0					
ANR	4706741	Identifier	policy		4706479	1					
ANR	4706742	Argument	maxnode ? backend -> host_nodes : NULL		4706479	3					
ANR	4706743	ConditionalExpression	maxnode ? backend -> host_nodes : NULL		4706479	0					
ANR	4706744	Condition	maxnode		4706479	0					
ANR	4706745	Identifier	maxnode		4706479	0					
ANR	4706746	PtrMemberAccess	backend -> host_nodes		4706479	1					
ANR	4706747	Identifier	backend		4706479	0					
ANR	4706748	Identifier	host_nodes		4706479	1					
ANR	4706749	Identifier	NULL		4706479	2					
ANR	4706750	Argument	maxnode + 1		4706479	4					
ANR	4706751	AdditiveExpression	maxnode + 1		4706479	0		+			
ANR	4706752	Identifier	maxnode		4706479	0					
ANR	4706753	PrimaryExpression	1		4706479	1					
ANR	4706754	Argument	flags		4706479	5					
ANR	4706755	Identifier	flags		4706479	0					
ANR	4706756	CompoundStatement		107:77:2297:2297	4706479	1					
ANR	4706757	IfStatement	if ( backend -> policy != MPOL_DEFAULT || errno != ENOSYS )		4706479	0					
ANR	4706758	Condition	backend -> policy != MPOL_DEFAULT || errno != ENOSYS	111:16:2387:2436	4706479	0	True				
ANR	4706759	OrExpression	backend -> policy != MPOL_DEFAULT || errno != ENOSYS		4706479	0		||			
ANR	4706760	EqualityExpression	backend -> policy != MPOL_DEFAULT		4706479	0		!=			
ANR	4706761	PtrMemberAccess	backend -> policy		4706479	0					
ANR	4706762	Identifier	backend		4706479	0					
ANR	4706763	Identifier	policy		4706479	1					
ANR	4706764	Identifier	MPOL_DEFAULT		4706479	1					
ANR	4706765	EqualityExpression	errno != ENOSYS		4706479	1		!=			
ANR	4706766	Identifier	errno		4706479	0					
ANR	4706767	Identifier	ENOSYS		4706479	1					
ANR	4706768	CompoundStatement		109:68:2368:2368	4706479	1					
ANR	4706769	ExpressionStatement	"error_setg_errno ( errp , errno , ""cannot bind memory to host NUMA nodes"" )"	113:16:2458:2562	4706479	0	True				
ANR	4706770	CallExpression	"error_setg_errno ( errp , errno , ""cannot bind memory to host NUMA nodes"" )"		4706479	0					
ANR	4706771	Callee	error_setg_errno		4706479	0					
ANR	4706772	Identifier	error_setg_errno		4706479	0					
ANR	4706773	ArgumentList	errp		4706479	1					
ANR	4706774	Argument	errp		4706479	0					
ANR	4706775	Identifier	errp		4706479	0					
ANR	4706776	Argument	errno		4706479	1					
ANR	4706777	Identifier	errno		4706479	0					
ANR	4706778	Argument	"""cannot bind memory to host NUMA nodes"""		4706479	2					
ANR	4706779	PrimaryExpression	"""cannot bind memory to host NUMA nodes"""		4706479	0					
ANR	4706780	ReturnStatement	return ;	117:16:2581:2587	4706479	1	True				
ANR	4706781	IfStatement	if ( backend -> prealloc )		4706479	13					
ANR	4706782	Condition	backend -> prealloc	133:12:2837:2853	4706479	0	True				
ANR	4706783	PtrMemberAccess	backend -> prealloc		4706479	0					
ANR	4706784	Identifier	backend		4706479	0					
ANR	4706785	Identifier	prealloc		4706479	1					
ANR	4706786	CompoundStatement		131:31:2785:2785	4706479	1					
ANR	4706787	ExpressionStatement	"os_mem_prealloc ( memory_region_get_fd ( & backend -> mr ) , ptr , sz , & local_err )"	135:12:2871:2972	4706479	0	True				
ANR	4706788	CallExpression	"os_mem_prealloc ( memory_region_get_fd ( & backend -> mr ) , ptr , sz , & local_err )"		4706479	0					
ANR	4706789	Callee	os_mem_prealloc		4706479	0					
ANR	4706790	Identifier	os_mem_prealloc		4706479	0					
ANR	4706791	ArgumentList	memory_region_get_fd ( & backend -> mr )		4706479	1					
ANR	4706792	Argument	memory_region_get_fd ( & backend -> mr )		4706479	0					
ANR	4706793	CallExpression	memory_region_get_fd ( & backend -> mr )		4706479	0					
ANR	4706794	Callee	memory_region_get_fd		4706479	0					
ANR	4706795	Identifier	memory_region_get_fd		4706479	0					
ANR	4706796	ArgumentList	& backend -> mr		4706479	1					
ANR	4706797	Argument	& backend -> mr		4706479	0					
ANR	4706798	UnaryOperationExpression	& backend -> mr		4706479	0					
ANR	4706799	UnaryOperator	&		4706479	0					
ANR	4706800	PtrMemberAccess	backend -> mr		4706479	1					
ANR	4706801	Identifier	backend		4706479	0					
ANR	4706802	Identifier	mr		4706479	1					
ANR	4706803	Argument	ptr		4706479	1					
ANR	4706804	Identifier	ptr		4706479	0					
ANR	4706805	Argument	sz		4706479	2					
ANR	4706806	Identifier	sz		4706479	0					
ANR	4706807	Argument	& local_err		4706479	3					
ANR	4706808	UnaryOperationExpression	& local_err		4706479	0					
ANR	4706809	UnaryOperator	&		4706479	0					
ANR	4706810	Identifier	local_err		4706479	1					
ANR	4706811	IfStatement	if ( local_err )		4706479	1					
ANR	4706812	Condition	local_err	139:16:2991:2999	4706479	0	True				
ANR	4706813	Identifier	local_err		4706479	0					
ANR	4706814	CompoundStatement		137:27:2931:2931	4706479	1					
ANR	4706815	GotoStatement	goto out ;	141:16:3021:3029	4706479	0	True				
ANR	4706816	Identifier	out		4706479	0					
ANR	4706817	Label	out :	149:0:3065:3068	4706479	6	True				
ANR	4706818	Identifier	out		4706479	0					
ANR	4706819	ExpressionStatement	"error_propagate ( errp , local_err )"	151:4:3075:3107	4706479	7	True				
ANR	4706820	CallExpression	"error_propagate ( errp , local_err )"		4706479	0					
ANR	4706821	Callee	error_propagate		4706479	0					
ANR	4706822	Identifier	error_propagate		4706479	0					
ANR	4706823	ArgumentList	errp		4706479	1					
ANR	4706824	Argument	errp		4706479	0					
ANR	4706825	Identifier	errp		4706479	0					
ANR	4706826	Argument	local_err		4706479	1					
ANR	4706827	Identifier	local_err		4706479	0					
ANR	4706828	Identifier	host_memory_backend_memory_complete		4706479	1					
ANR	4706829	ParameterList	"UserCreatable * uc , Error * * errp"		4706479	2					
ANR	4706830	Parameter	UserCreatable * uc	1:36:36:52	4706479	0	True				
ANR	4706831	ParameterType	UserCreatable *		4706479	0					
ANR	4706832	Identifier	uc		4706479	1					
ANR	4706833	Parameter	Error * * errp	1:55:55:66	4706479	1	True				
ANR	4706834	ParameterType	Error * *		4706479	0					
ANR	4706835	Identifier	errp		4706479	1					
ANR	4706836	CFGEntryNode	ENTRY		4706479		True				
ANR	4706837	CFGExitNode	EXIT		4706479		True				
ANR	4706838	Symbol	backend -> host_nodes		4706479						
ANR	4706839	Symbol	bc		4706479						
ANR	4706840	Symbol	memory_region_size		4706479						
ANR	4706841	Symbol	errp		4706479						
ANR	4706842	Symbol	mbind		4706479						
ANR	4706843	Symbol	lastbit		4706479						
ANR	4706844	Symbol	flags		4706479						
ANR	4706845	Symbol	* * backend		4706479						
ANR	4706846	Symbol	ENOSYS		4706479						
ANR	4706847	Symbol	MEMORY_BACKEND_GET_CLASS		4706479						
ANR	4706848	Symbol	uc		4706479						
ANR	4706849	Symbol	backend -> prealloc		4706479						
ANR	4706850	Symbol	& local_err		4706479						
ANR	4706851	Symbol	find_last_bit		4706479						
ANR	4706852	Symbol	backend		4706479						
ANR	4706853	Symbol	backend -> policy		4706479						
ANR	4706854	Symbol	memory_region_get_fd		4706479						
ANR	4706855	Symbol	BITS_TO_LONGS		4706479						
ANR	4706856	Symbol	errno		4706479						
ANR	4706857	Symbol	NULL		4706479						
ANR	4706858	Symbol	memory_region_get_ram_ptr		4706479						
ANR	4706859	Symbol	backend -> dump		4706479						
ANR	4706860	Symbol	* bc		4706479						
ANR	4706861	Symbol	MAX_NODES		4706479						
ANR	4706862	Symbol	& backend -> mr		4706479						
ANR	4706863	Symbol	* backend -> policy		4706479						
ANR	4706864	Symbol	sz		4706479						
ANR	4706865	Symbol	backend -> merge		4706479						
ANR	4706866	Symbol	* HostMemPolicy_lookup		4706479						
ANR	4706867	Symbol	ptr		4706479						
ANR	4706868	Symbol	MPOL_MF_STRICT		4706479						
ANR	4706869	Symbol	MPOL_DEFAULT		4706479						
ANR	4706870	Symbol	* backend		4706479						
ANR	4706871	Symbol	HostMemPolicy_lookup		4706479						
ANR	4706872	Symbol	MEMORY_BACKEND		4706479						
ANR	4706873	Symbol	bc -> alloc		4706479						
ANR	4706874	Symbol	QEMU_MADV_DONTDUMP		4706479						
ANR	4706875	Symbol	QEMU_MADV_MERGEABLE		4706479						
ANR	4706876	Symbol	maxnode		4706479						
ANR	4706877	Symbol	MPOL_MF_MOVE		4706479						
ANR	4706878	Symbol	local_err		4706479						
