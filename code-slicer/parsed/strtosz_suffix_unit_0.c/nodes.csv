command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8011132	File	/home/p4ultr4n/workplace/ReVeal/raw_code/strtosz_suffix_unit_0.c								
ANR	8011133	Function	strtosz_suffix_unit	1:0:0:1977							
ANR	8011134	FunctionDef	"strtosz_suffix_unit (const char * nptr , char * * end , const char default_suffix , int64_t unit)"		8011133	0					
ANR	8011135	CompoundStatement		5:0:129:1977	8011133	0					
ANR	8011136	IdentifierDeclStatement	int64_t retval = - 1 ;	7:4:136:155	8011133	0	True				
ANR	8011137	IdentifierDecl	retval = - 1		8011133	0					
ANR	8011138	IdentifierDeclType	int64_t		8011133	0					
ANR	8011139	Identifier	retval		8011133	1					
ANR	8011140	AssignmentExpression	retval = - 1		8011133	2		=			
ANR	8011141	Identifier	retval		8011133	0					
ANR	8011142	UnaryOperationExpression	- 1		8011133	1					
ANR	8011143	UnaryOperator	-		8011133	0					
ANR	8011144	PrimaryExpression	1		8011133	1					
ANR	8011145	IdentifierDeclStatement	char * endptr ;	9:4:162:174	8011133	1	True				
ANR	8011146	IdentifierDecl	* endptr		8011133	0					
ANR	8011147	IdentifierDeclType	char *		8011133	0					
ANR	8011148	Identifier	endptr		8011133	1					
ANR	8011149	IdentifierDeclStatement	"unsigned char c , d ;"	11:4:181:199	8011133	2	True				
ANR	8011150	IdentifierDecl	c		8011133	0					
ANR	8011151	IdentifierDeclType	unsigned char		8011133	0					
ANR	8011152	Identifier	c		8011133	1					
ANR	8011153	IdentifierDecl	d		8011133	1					
ANR	8011154	IdentifierDeclType	unsigned char		8011133	0					
ANR	8011155	Identifier	d		8011133	1					
ANR	8011156	IdentifierDeclStatement	int mul_required = 0 ;	13:4:206:226	8011133	3	True				
ANR	8011157	IdentifierDecl	mul_required = 0		8011133	0					
ANR	8011158	IdentifierDeclType	int		8011133	0					
ANR	8011159	Identifier	mul_required		8011133	1					
ANR	8011160	AssignmentExpression	mul_required = 0		8011133	2		=			
ANR	8011161	Identifier	mul_required		8011133	0					
ANR	8011162	PrimaryExpression	0		8011133	1					
ANR	8011163	IdentifierDeclStatement	"double val , mul , integral , fraction ;"	15:4:233:268	8011133	4	True				
ANR	8011164	IdentifierDecl	val		8011133	0					
ANR	8011165	IdentifierDeclType	double		8011133	0					
ANR	8011166	Identifier	val		8011133	1					
ANR	8011167	IdentifierDecl	mul		8011133	1					
ANR	8011168	IdentifierDeclType	double		8011133	0					
ANR	8011169	Identifier	mul		8011133	1					
ANR	8011170	IdentifierDecl	integral		8011133	2					
ANR	8011171	IdentifierDeclType	double		8011133	0					
ANR	8011172	Identifier	integral		8011133	1					
ANR	8011173	IdentifierDecl	fraction		8011133	3					
ANR	8011174	IdentifierDeclType	double		8011133	0					
ANR	8011175	Identifier	fraction		8011133	1					
ANR	8011176	ExpressionStatement	errno = 0	19:4:277:286	8011133	5	True				
ANR	8011177	AssignmentExpression	errno = 0		8011133	0		=			
ANR	8011178	Identifier	errno		8011133	0					
ANR	8011179	PrimaryExpression	0		8011133	1					
ANR	8011180	ExpressionStatement	"val = strtod ( nptr , & endptr )"	21:4:293:320	8011133	6	True				
ANR	8011181	AssignmentExpression	"val = strtod ( nptr , & endptr )"		8011133	0		=			
ANR	8011182	Identifier	val		8011133	0					
ANR	8011183	CallExpression	"strtod ( nptr , & endptr )"		8011133	1					
ANR	8011184	Callee	strtod		8011133	0					
ANR	8011185	Identifier	strtod		8011133	0					
ANR	8011186	ArgumentList	nptr		8011133	1					
ANR	8011187	Argument	nptr		8011133	0					
ANR	8011188	Identifier	nptr		8011133	0					
ANR	8011189	Argument	& endptr		8011133	1					
ANR	8011190	UnaryOperationExpression	& endptr		8011133	0					
ANR	8011191	UnaryOperator	&		8011133	0					
ANR	8011192	Identifier	endptr		8011133	1					
ANR	8011193	IfStatement	if ( isnan ( val ) || endptr == nptr || errno != 0 )		8011133	7					
ANR	8011194	Condition	isnan ( val ) || endptr == nptr || errno != 0	23:8:331:372	8011133	0	True				
ANR	8011195	OrExpression	isnan ( val ) || endptr == nptr || errno != 0		8011133	0		||			
ANR	8011196	CallExpression	isnan ( val )		8011133	0					
ANR	8011197	Callee	isnan		8011133	0					
ANR	8011198	Identifier	isnan		8011133	0					
ANR	8011199	ArgumentList	val		8011133	1					
ANR	8011200	Argument	val		8011133	0					
ANR	8011201	Identifier	val		8011133	0					
ANR	8011202	OrExpression	endptr == nptr || errno != 0		8011133	1		||			
ANR	8011203	EqualityExpression	endptr == nptr		8011133	0		==			
ANR	8011204	Identifier	endptr		8011133	0					
ANR	8011205	Identifier	nptr		8011133	1					
ANR	8011206	EqualityExpression	errno != 0		8011133	1		!=			
ANR	8011207	Identifier	errno		8011133	0					
ANR	8011208	PrimaryExpression	0		8011133	1					
ANR	8011209	CompoundStatement		19:52:245:245	8011133	1					
ANR	8011210	GotoStatement	goto fail ;	25:8:386:395	8011133	0	True				
ANR	8011211	Identifier	fail		8011133	0					
ANR	8011212	ExpressionStatement	"fraction = modf ( val , & integral )"	29:4:409:440	8011133	8	True				
ANR	8011213	AssignmentExpression	"fraction = modf ( val , & integral )"		8011133	0		=			
ANR	8011214	Identifier	fraction		8011133	0					
ANR	8011215	CallExpression	"modf ( val , & integral )"		8011133	1					
ANR	8011216	Callee	modf		8011133	0					
ANR	8011217	Identifier	modf		8011133	0					
ANR	8011218	ArgumentList	val		8011133	1					
ANR	8011219	Argument	val		8011133	0					
ANR	8011220	Identifier	val		8011133	0					
ANR	8011221	Argument	& integral		8011133	1					
ANR	8011222	UnaryOperationExpression	& integral		8011133	0					
ANR	8011223	UnaryOperator	&		8011133	0					
ANR	8011224	Identifier	integral		8011133	1					
ANR	8011225	IfStatement	if ( fraction != 0 )		8011133	9					
ANR	8011226	Condition	fraction != 0	31:8:451:463	8011133	0	True				
ANR	8011227	EqualityExpression	fraction != 0		8011133	0		!=			
ANR	8011228	Identifier	fraction		8011133	0					
ANR	8011229	PrimaryExpression	0		8011133	1					
ANR	8011230	CompoundStatement		27:23:336:336	8011133	1					
ANR	8011231	ExpressionStatement	mul_required = 1	33:8:477:493	8011133	0	True				
ANR	8011232	AssignmentExpression	mul_required = 1		8011133	0		=			
ANR	8011233	Identifier	mul_required		8011133	0					
ANR	8011234	PrimaryExpression	1		8011133	1					
ANR	8011235	ExpressionStatement	c = * endptr	47:4:703:714	8011133	10	True				
ANR	8011236	AssignmentExpression	c = * endptr		8011133	0		=			
ANR	8011237	Identifier	c		8011133	0					
ANR	8011238	UnaryOperationExpression	* endptr		8011133	1					
ANR	8011239	UnaryOperator	*		8011133	0					
ANR	8011240	Identifier	endptr		8011133	1					
ANR	8011241	ExpressionStatement	d = c	49:4:721:726	8011133	11	True				
ANR	8011242	AssignmentExpression	d = c		8011133	0		=			
ANR	8011243	Identifier	d		8011133	0					
ANR	8011244	Identifier	c		8011133	1					
ANR	8011245	IfStatement	"if ( qemu_isspace ( c ) || c == '\\0' || c == ',' )"		8011133	12					
ANR	8011246	Condition	"qemu_isspace ( c ) || c == '\\0' || c == ','"	51:8:737:776	8011133	0	True				
ANR	8011247	OrExpression	"qemu_isspace ( c ) || c == '\\0' || c == ','"		8011133	0		||			
ANR	8011248	CallExpression	qemu_isspace ( c )		8011133	0					
ANR	8011249	Callee	qemu_isspace		8011133	0					
ANR	8011250	Identifier	qemu_isspace		8011133	0					
ANR	8011251	ArgumentList	c		8011133	1					
ANR	8011252	Argument	c		8011133	0					
ANR	8011253	Identifier	c		8011133	0					
ANR	8011254	OrExpression	"c == '\\0' || c == ','"		8011133	1		||			
ANR	8011255	EqualityExpression	c == '\\0'		8011133	0		==			
ANR	8011256	Identifier	c		8011133	0					
ANR	8011257	PrimaryExpression	'\\0'		8011133	1					
ANR	8011258	EqualityExpression	"c == ','"		8011133	1		==			
ANR	8011259	Identifier	c		8011133	0					
ANR	8011260	PrimaryExpression	"','"		8011133	1					
ANR	8011261	CompoundStatement		47:50:649:649	8011133	1					
ANR	8011262	ExpressionStatement	c = 0	53:8:790:795	8011133	0	True				
ANR	8011263	AssignmentExpression	c = 0		8011133	0		=			
ANR	8011264	Identifier	c		8011133	0					
ANR	8011265	PrimaryExpression	0		8011133	1					
ANR	8011266	ExpressionStatement	d = default_suffix	55:8:806:824	8011133	1	True				
ANR	8011267	AssignmentExpression	d = default_suffix		8011133	0		=			
ANR	8011268	Identifier	d		8011133	0					
ANR	8011269	Identifier	default_suffix		8011133	1					
ANR	8011270	SwitchStatement	switch ( qemu_toupper ( d ) )		8011133	13					
ANR	8011271	Condition	qemu_toupper ( d )	59:12:846:860	8011133	0	True				
ANR	8011272	CallExpression	qemu_toupper ( d )		8011133	0					
ANR	8011273	Callee	qemu_toupper		8011133	0					
ANR	8011274	Identifier	qemu_toupper		8011133	0					
ANR	8011275	ArgumentList	d		8011133	1					
ANR	8011276	Argument	d		8011133	0					
ANR	8011277	Identifier	d		8011133	0					
ANR	8011278	CompoundStatement		55:29:733:733	8011133	1					
ANR	8011279	Label	case STRTOSZ_DEFSUFFIX_B :	61:4:870:894	8011133	0	True				
ANR	8011280	Identifier	STRTOSZ_DEFSUFFIX_B		8011133	0					
ANR	8011281	ExpressionStatement	mul = 1	63:8:905:912	8011133	1	True				
ANR	8011282	AssignmentExpression	mul = 1		8011133	0		=			
ANR	8011283	Identifier	mul		8011133	0					
ANR	8011284	PrimaryExpression	1		8011133	1					
ANR	8011285	IfStatement	if ( mul_required )		8011133	2					
ANR	8011286	Condition	mul_required	65:12:927:938	8011133	0	True				
ANR	8011287	Identifier	mul_required		8011133	0					
ANR	8011288	CompoundStatement		61:26:811:811	8011133	1					
ANR	8011289	GotoStatement	goto fail ;	67:12:956:965	8011133	0	True				
ANR	8011290	Identifier	fail		8011133	0					
ANR	8011291	BreakStatement	break ;	71:8:987:992	8011133	3	True				
ANR	8011292	Label	case STRTOSZ_DEFSUFFIX_KB :	73:4:999:1024	8011133	4	True				
ANR	8011293	Identifier	STRTOSZ_DEFSUFFIX_KB		8011133	0					
ANR	8011294	ExpressionStatement	mul = unit	75:8:1035:1045	8011133	5	True				
ANR	8011295	AssignmentExpression	mul = unit		8011133	0		=			
ANR	8011296	Identifier	mul		8011133	0					
ANR	8011297	Identifier	unit		8011133	1					
ANR	8011298	BreakStatement	break ;	77:8:1056:1061	8011133	6	True				
ANR	8011299	Label	case STRTOSZ_DEFSUFFIX_MB :	79:4:1068:1093	8011133	7	True				
ANR	8011300	Identifier	STRTOSZ_DEFSUFFIX_MB		8011133	0					
ANR	8011301	ExpressionStatement	mul = unit * unit	81:8:1104:1121	8011133	8	True				
ANR	8011302	AssignmentExpression	mul = unit * unit		8011133	0		=			
ANR	8011303	Identifier	mul		8011133	0					
ANR	8011304	MultiplicativeExpression	unit * unit		8011133	1		*			
ANR	8011305	Identifier	unit		8011133	0					
ANR	8011306	Identifier	unit		8011133	1					
ANR	8011307	BreakStatement	break ;	83:8:1132:1137	8011133	9	True				
ANR	8011308	Label	case STRTOSZ_DEFSUFFIX_GB :	85:4:1144:1169	8011133	10	True				
ANR	8011309	Identifier	STRTOSZ_DEFSUFFIX_GB		8011133	0					
ANR	8011310	ExpressionStatement	mul = unit * unit * unit	87:8:1180:1204	8011133	11	True				
ANR	8011311	AssignmentExpression	mul = unit * unit * unit		8011133	0		=			
ANR	8011312	Identifier	mul		8011133	0					
ANR	8011313	MultiplicativeExpression	unit * unit * unit		8011133	1		*			
ANR	8011314	Identifier	unit		8011133	0					
ANR	8011315	MultiplicativeExpression	unit * unit		8011133	1		*			
ANR	8011316	Identifier	unit		8011133	0					
ANR	8011317	Identifier	unit		8011133	1					
ANR	8011318	BreakStatement	break ;	89:8:1215:1220	8011133	12	True				
ANR	8011319	Label	case STRTOSZ_DEFSUFFIX_TB :	91:4:1227:1252	8011133	13	True				
ANR	8011320	Identifier	STRTOSZ_DEFSUFFIX_TB		8011133	0					
ANR	8011321	ExpressionStatement	mul = unit * unit * unit * unit	93:8:1263:1294	8011133	14	True				
ANR	8011322	AssignmentExpression	mul = unit * unit * unit * unit		8011133	0		=			
ANR	8011323	Identifier	mul		8011133	0					
ANR	8011324	MultiplicativeExpression	unit * unit * unit * unit		8011133	1		*			
ANR	8011325	Identifier	unit		8011133	0					
ANR	8011326	MultiplicativeExpression	unit * unit * unit		8011133	1		*			
ANR	8011327	Identifier	unit		8011133	0					
ANR	8011328	MultiplicativeExpression	unit * unit		8011133	1		*			
ANR	8011329	Identifier	unit		8011133	0					
ANR	8011330	Identifier	unit		8011133	1					
ANR	8011331	BreakStatement	break ;	95:8:1305:1310	8011133	15	True				
ANR	8011332	Label	default :	97:4:1317:1324	8011133	16	True				
ANR	8011333	Identifier	default		8011133	0					
ANR	8011334	GotoStatement	goto fail ;	99:8:1335:1344	8011133	17	True				
ANR	8011335	Identifier	fail		8011133	0					
ANR	8011336	IfStatement	if ( c != 0 )		8011133	14					
ANR	8011337	Condition	c != 0	115:8:1654:1659	8011133	0	True				
ANR	8011338	EqualityExpression	c != 0		8011133	0		!=			
ANR	8011339	Identifier	c		8011133	0					
ANR	8011340	PrimaryExpression	0		8011133	1					
ANR	8011341	CompoundStatement		111:16:1532:1532	8011133	1					
ANR	8011342	ExpressionStatement	endptr ++	117:8:1673:1681	8011133	0	True				
ANR	8011343	PostIncDecOperationExpression	endptr ++		8011133	0					
ANR	8011344	Identifier	endptr		8011133	0					
ANR	8011345	IncDec	++		8011133	1					
ANR	8011346	IfStatement	"if ( ! qemu_isspace ( * endptr ) && * endptr != ',' && * endptr != 0 )"		8011133	1					
ANR	8011347	Condition	"! qemu_isspace ( * endptr ) && * endptr != ',' && * endptr != 0"	119:12:1696:1751	8011133	0	True				
ANR	8011348	AndExpression	"! qemu_isspace ( * endptr ) && * endptr != ',' && * endptr != 0"		8011133	0		&&			
ANR	8011349	UnaryOperationExpression	! qemu_isspace ( * endptr )		8011133	0					
ANR	8011350	UnaryOperator	!		8011133	0					
ANR	8011351	CallExpression	qemu_isspace ( * endptr )		8011133	1					
ANR	8011352	Callee	qemu_isspace		8011133	0					
ANR	8011353	Identifier	qemu_isspace		8011133	0					
ANR	8011354	ArgumentList	* endptr		8011133	1					
ANR	8011355	Argument	* endptr		8011133	0					
ANR	8011356	UnaryOperationExpression	* endptr		8011133	0					
ANR	8011357	UnaryOperator	*		8011133	0					
ANR	8011358	Identifier	endptr		8011133	1					
ANR	8011359	AndExpression	"* endptr != ',' && * endptr != 0"		8011133	1		&&			
ANR	8011360	EqualityExpression	"* endptr != ','"		8011133	0		!=			
ANR	8011361	UnaryOperationExpression	* endptr		8011133	0					
ANR	8011362	UnaryOperator	*		8011133	0					
ANR	8011363	Identifier	endptr		8011133	1					
ANR	8011364	PrimaryExpression	"','"		8011133	1					
ANR	8011365	EqualityExpression	* endptr != 0		8011133	1		!=			
ANR	8011366	UnaryOperationExpression	* endptr		8011133	0					
ANR	8011367	UnaryOperator	*		8011133	0					
ANR	8011368	Identifier	endptr		8011133	1					
ANR	8011369	PrimaryExpression	0		8011133	1					
ANR	8011370	CompoundStatement		115:70:1624:1624	8011133	1					
ANR	8011371	GotoStatement	goto fail ;	121:12:1769:1778	8011133	0	True				
ANR	8011372	Identifier	fail		8011133	0					
ANR	8011373	IfStatement	if ( ( val * mul >= INT64_MAX ) || val < 0 )		8011133	15					
ANR	8011374	Condition	( val * mul >= INT64_MAX ) || val < 0	127:8:1807:1841	8011133	0	True				
ANR	8011375	OrExpression	( val * mul >= INT64_MAX ) || val < 0		8011133	0		||			
ANR	8011376	RelationalExpression	val * mul >= INT64_MAX		8011133	0		>=			
ANR	8011377	MultiplicativeExpression	val * mul		8011133	0		*			
ANR	8011378	Identifier	val		8011133	0					
ANR	8011379	Identifier	mul		8011133	1					
ANR	8011380	Identifier	INT64_MAX		8011133	1					
ANR	8011381	RelationalExpression	val < 0		8011133	1		<			
ANR	8011382	Identifier	val		8011133	0					
ANR	8011383	PrimaryExpression	0		8011133	1					
ANR	8011384	CompoundStatement		123:45:1714:1714	8011133	1					
ANR	8011385	GotoStatement	goto fail ;	129:8:1855:1864	8011133	0	True				
ANR	8011386	Identifier	fail		8011133	0					
ANR	8011387	ExpressionStatement	retval = val * mul	133:4:1878:1896	8011133	16	True				
ANR	8011388	AssignmentExpression	retval = val * mul		8011133	0		=			
ANR	8011389	Identifier	retval		8011133	0					
ANR	8011390	MultiplicativeExpression	val * mul		8011133	1		*			
ANR	8011391	Identifier	val		8011133	0					
ANR	8011392	Identifier	mul		8011133	1					
ANR	8011393	Label	fail :	137:0:1901:1905	8011133	17	True				
ANR	8011394	Identifier	fail		8011133	0					
ANR	8011395	IfStatement	if ( end )		8011133	18					
ANR	8011396	Condition	end	139:8:1916:1918	8011133	0	True				
ANR	8011397	Identifier	end		8011133	0					
ANR	8011398	CompoundStatement		135:13:1791:1791	8011133	1					
ANR	8011399	ExpressionStatement	* end = endptr	141:8:1932:1945	8011133	0	True				
ANR	8011400	AssignmentExpression	* end = endptr		8011133	0		=			
ANR	8011401	UnaryOperationExpression	* end		8011133	0					
ANR	8011402	UnaryOperator	*		8011133	0					
ANR	8011403	Identifier	end		8011133	1					
ANR	8011404	Identifier	endptr		8011133	1					
ANR	8011405	ReturnStatement	return retval ;	147:4:1961:1974	8011133	19	True				
ANR	8011406	Identifier	retval		8011133	0					
ANR	8011407	ReturnType	int64_t		8011133	1					
ANR	8011408	Identifier	strtosz_suffix_unit		8011133	2					
ANR	8011409	ParameterList	"const char * nptr , char * * end , const char default_suffix , int64_t unit"		8011133	3					
ANR	8011410	Parameter	const char * nptr	1:28:28:43	8011133	0	True				
ANR	8011411	ParameterType	const char *		8011133	0					
ANR	8011412	Identifier	nptr		8011133	1					
ANR	8011413	Parameter	char * * end	1:46:46:55	8011133	1	True				
ANR	8011414	ParameterType	char * *		8011133	0					
ANR	8011415	Identifier	end		8011133	1					
ANR	8011416	Parameter	const char default_suffix	3:28:87:111	8011133	2	True				
ANR	8011417	ParameterType	const char		8011133	0					
ANR	8011418	Identifier	default_suffix		8011133	1					
ANR	8011419	Parameter	int64_t unit	3:55:114:125	8011133	3	True				
ANR	8011420	ParameterType	int64_t		8011133	0					
ANR	8011421	Identifier	unit		8011133	1					
ANR	8011422	CFGEntryNode	ENTRY		8011133		True				
ANR	8011423	CFGExitNode	EXIT		8011133		True				
ANR	8011424	Symbol	val		8011133						
ANR	8011425	Symbol	mul_required		8011133						
ANR	8011426	Symbol	errno		8011133						
ANR	8011427	Symbol	c		8011133						
ANR	8011428	Symbol	d		8011133						
ANR	8011429	Symbol	endptr		8011133						
ANR	8011430	Symbol	mul		8011133						
ANR	8011431	Symbol	default_suffix		8011133						
ANR	8011432	Symbol	* endptr		8011133						
ANR	8011433	Symbol	qemu_toupper		8011133						
ANR	8011434	Symbol	& endptr		8011133						
ANR	8011435	Symbol	& integral		8011133						
ANR	8011436	Symbol	INT64_MAX		8011133						
ANR	8011437	Symbol	isnan		8011133						
ANR	8011438	Symbol	strtod		8011133						
ANR	8011439	Symbol	qemu_isspace		8011133						
ANR	8011440	Symbol	retval		8011133						
ANR	8011441	Symbol	fraction		8011133						
ANR	8011442	Symbol	unit		8011133						
ANR	8011443	Symbol	nptr		8011133						
ANR	8011444	Symbol	integral		8011133						
ANR	8011445	Symbol	modf		8011133						
ANR	8011446	Symbol	end		8011133						
ANR	8011447	Symbol	* end		8011133						
