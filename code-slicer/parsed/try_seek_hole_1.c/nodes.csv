command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8570837	File	/home/p4ultr4n/workplace/ReVeal/raw_code/try_seek_hole_1.c								
ANR	8570838	Function	try_seek_hole	1:0:0:629							
ANR	8570839	FunctionDef	"try_seek_hole (BlockDriverState * bs , off_t start , off_t * data , off_t * hole)"		8570838	0					
ANR	8570840	CompoundStatement		5:0:113:629	8570838	0					
ANR	8570841	IdentifierDeclStatement	BDRVRawState * s = bs -> opaque ;	9:4:164:192	8570838	0	True				
ANR	8570842	IdentifierDecl	* s = bs -> opaque		8570838	0					
ANR	8570843	IdentifierDeclType	BDRVRawState *		8570838	0					
ANR	8570844	Identifier	s		8570838	1					
ANR	8570845	AssignmentExpression	* s = bs -> opaque		8570838	2		=			
ANR	8570846	Identifier	s		8570838	0					
ANR	8570847	PtrMemberAccess	bs -> opaque		8570838	1					
ANR	8570848	Identifier	bs		8570838	0					
ANR	8570849	Identifier	opaque		8570838	1					
ANR	8570850	ExpressionStatement	"* hole = lseek ( s -> fd , start , SEEK_HOLE )"	13:4:201:239	8570838	1	True				
ANR	8570851	AssignmentExpression	"* hole = lseek ( s -> fd , start , SEEK_HOLE )"		8570838	0		=			
ANR	8570852	UnaryOperationExpression	* hole		8570838	0					
ANR	8570853	UnaryOperator	*		8570838	0					
ANR	8570854	Identifier	hole		8570838	1					
ANR	8570855	CallExpression	"lseek ( s -> fd , start , SEEK_HOLE )"		8570838	1					
ANR	8570856	Callee	lseek		8570838	0					
ANR	8570857	Identifier	lseek		8570838	0					
ANR	8570858	ArgumentList	s -> fd		8570838	1					
ANR	8570859	Argument	s -> fd		8570838	0					
ANR	8570860	PtrMemberAccess	s -> fd		8570838	0					
ANR	8570861	Identifier	s		8570838	0					
ANR	8570862	Identifier	fd		8570838	1					
ANR	8570863	Argument	start		8570838	1					
ANR	8570864	Identifier	start		8570838	0					
ANR	8570865	Argument	SEEK_HOLE		8570838	2					
ANR	8570866	Identifier	SEEK_HOLE		8570838	0					
ANR	8570867	IfStatement	if ( * hole == - 1 )		8570838	2					
ANR	8570868	Condition	* hole == - 1	15:8:250:260	8570838	0	True				
ANR	8570869	EqualityExpression	* hole == - 1		8570838	0		==			
ANR	8570870	UnaryOperationExpression	* hole		8570838	0					
ANR	8570871	UnaryOperator	*		8570838	0					
ANR	8570872	Identifier	hole		8570838	1					
ANR	8570873	UnaryOperationExpression	- 1		8570838	1					
ANR	8570874	UnaryOperator	-		8570838	0					
ANR	8570875	PrimaryExpression	1		8570838	1					
ANR	8570876	CompoundStatement		11:21:149:149	8570838	1					
ANR	8570877	ReturnStatement	return - errno ;	17:8:274:287	8570838	0	True				
ANR	8570878	UnaryOperationExpression	- errno		8570838	0					
ANR	8570879	UnaryOperator	-		8570838	0					
ANR	8570880	Identifier	errno		8570838	1					
ANR	8570881	IfStatement	if ( * hole > start )		8570838	3					
ANR	8570882	Condition	* hole > start	23:8:307:319	8570838	0	True				
ANR	8570883	RelationalExpression	* hole > start		8570838	0		>			
ANR	8570884	UnaryOperationExpression	* hole		8570838	0					
ANR	8570885	UnaryOperator	*		8570838	0					
ANR	8570886	Identifier	hole		8570838	1					
ANR	8570887	Identifier	start		8570838	1					
ANR	8570888	CompoundStatement		19:23:208:208	8570838	1					
ANR	8570889	ExpressionStatement	* data = start	25:8:333:346	8570838	0	True				
ANR	8570890	AssignmentExpression	* data = start		8570838	0		=			
ANR	8570891	UnaryOperationExpression	* data		8570838	0					
ANR	8570892	UnaryOperator	*		8570838	0					
ANR	8570893	Identifier	data		8570838	1					
ANR	8570894	Identifier	start		8570838	1					
ANR	8570895	ElseStatement	else		8570838	0					
ANR	8570896	CompoundStatement		23:11:246:246	8570838	0					
ANR	8570897	ExpressionStatement	"* data = lseek ( s -> fd , start , SEEK_DATA )"	31:8:440:478	8570838	0	True				
ANR	8570898	AssignmentExpression	"* data = lseek ( s -> fd , start , SEEK_DATA )"		8570838	0		=			
ANR	8570899	UnaryOperationExpression	* data		8570838	0					
ANR	8570900	UnaryOperator	*		8570838	0					
ANR	8570901	Identifier	data		8570838	1					
ANR	8570902	CallExpression	"lseek ( s -> fd , start , SEEK_DATA )"		8570838	1					
ANR	8570903	Callee	lseek		8570838	0					
ANR	8570904	Identifier	lseek		8570838	0					
ANR	8570905	ArgumentList	s -> fd		8570838	1					
ANR	8570906	Argument	s -> fd		8570838	0					
ANR	8570907	PtrMemberAccess	s -> fd		8570838	0					
ANR	8570908	Identifier	s		8570838	0					
ANR	8570909	Identifier	fd		8570838	1					
ANR	8570910	Argument	start		8570838	1					
ANR	8570911	Identifier	start		8570838	0					
ANR	8570912	Argument	SEEK_DATA		8570838	2					
ANR	8570913	Identifier	SEEK_DATA		8570838	0					
ANR	8570914	IfStatement	if ( * data == - 1 )		8570838	1					
ANR	8570915	Condition	* data == - 1	33:12:493:503	8570838	0	True				
ANR	8570916	EqualityExpression	* data == - 1		8570838	0		==			
ANR	8570917	UnaryOperationExpression	* data		8570838	0					
ANR	8570918	UnaryOperator	*		8570838	0					
ANR	8570919	Identifier	data		8570838	1					
ANR	8570920	UnaryOperationExpression	- 1		8570838	1					
ANR	8570921	UnaryOperator	-		8570838	0					
ANR	8570922	PrimaryExpression	1		8570838	1					
ANR	8570923	CompoundStatement		29:25:392:392	8570838	1					
ANR	8570924	ExpressionStatement	"* data = lseek ( s -> fd , 0 , SEEK_END )"	35:12:521:554	8570838	0	True				
ANR	8570925	AssignmentExpression	"* data = lseek ( s -> fd , 0 , SEEK_END )"		8570838	0		=			
ANR	8570926	UnaryOperationExpression	* data		8570838	0					
ANR	8570927	UnaryOperator	*		8570838	0					
ANR	8570928	Identifier	data		8570838	1					
ANR	8570929	CallExpression	"lseek ( s -> fd , 0 , SEEK_END )"		8570838	1					
ANR	8570930	Callee	lseek		8570838	0					
ANR	8570931	Identifier	lseek		8570838	0					
ANR	8570932	ArgumentList	s -> fd		8570838	1					
ANR	8570933	Argument	s -> fd		8570838	0					
ANR	8570934	PtrMemberAccess	s -> fd		8570838	0					
ANR	8570935	Identifier	s		8570838	0					
ANR	8570936	Identifier	fd		8570838	1					
ANR	8570937	Argument	0		8570838	1					
ANR	8570938	PrimaryExpression	0		8570838	0					
ANR	8570939	Argument	SEEK_END		8570838	2					
ANR	8570940	Identifier	SEEK_END		8570838	0					
ANR	8570941	ReturnStatement	return 0 ;	43:4:581:589	8570838	4	True				
ANR	8570942	PrimaryExpression	0		8570838	0					
ANR	8570943	ReturnType	static int		8570838	1					
ANR	8570944	Identifier	try_seek_hole		8570838	2					
ANR	8570945	ParameterList	"BlockDriverState * bs , off_t start , off_t * data , off_t * hole"		8570838	3					
ANR	8570946	Parameter	BlockDriverState * bs	1:25:25:44	8570838	0	True				
ANR	8570947	ParameterType	BlockDriverState *		8570838	0					
ANR	8570948	Identifier	bs		8570838	1					
ANR	8570949	Parameter	off_t start	1:47:47:57	8570838	1	True				
ANR	8570950	ParameterType	off_t		8570838	0					
ANR	8570951	Identifier	start		8570838	1					
ANR	8570952	Parameter	off_t * data	1:60:60:70	8570838	2	True				
ANR	8570953	ParameterType	off_t *		8570838	0					
ANR	8570954	Identifier	data		8570838	1					
ANR	8570955	Parameter	off_t * hole	3:25:99:109	8570838	3	True				
ANR	8570956	ParameterType	off_t *		8570838	0					
ANR	8570957	Identifier	hole		8570838	1					
ANR	8570958	CFGEntryNode	ENTRY		8570838		True				
ANR	8570959	CFGExitNode	EXIT		8570838		True				
ANR	8570960	Symbol	SEEK_HOLE		8570838						
ANR	8570961	Symbol	errno		8570838						
ANR	8570962	Symbol	lseek		8570838						
ANR	8570963	Symbol	data		8570838						
ANR	8570964	Symbol	bs -> opaque		8570838						
ANR	8570965	Symbol	start		8570838						
ANR	8570966	Symbol	* hole		8570838						
ANR	8570967	Symbol	SEEK_END		8570838						
ANR	8570968	Symbol	hole		8570838						
ANR	8570969	Symbol	bs		8570838						
ANR	8570970	Symbol	s		8570838						
ANR	8570971	Symbol	* bs		8570838						
ANR	8570972	Symbol	SEEK_DATA		8570838						
ANR	8570973	Symbol	* s		8570838						
ANR	8570974	Symbol	* data		8570838						
ANR	8570975	Symbol	s -> fd		8570838						
