command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6759739	File	/home/p4ultr4n/workplace/ReVeal/raw_code/psy_lame_window_1.c								
ANR	6759740	Function	psy_lame_window	1:0:0:6827							
ANR	6759741	FunctionDef	"psy_lame_window (FFPsyContext * ctx , const float * audio , const float * la , int channel , int prev_type)"		6759740	0					
ANR	6759742	CompoundStatement		5:0:164:6827	6759740	0					
ANR	6759743	IdentifierDeclStatement	AacPsyContext * pctx = ( AacPsyContext * ) ctx -> model_priv_data ;	7:4:171:230	6759740	0	True				
ANR	6759744	IdentifierDecl	* pctx = ( AacPsyContext * ) ctx -> model_priv_data		6759740	0					
ANR	6759745	IdentifierDeclType	AacPsyContext *		6759740	0					
ANR	6759746	Identifier	pctx		6759740	1					
ANR	6759747	AssignmentExpression	* pctx = ( AacPsyContext * ) ctx -> model_priv_data		6759740	2		=			
ANR	6759748	Identifier	pctx		6759740	0					
ANR	6759749	CastExpression	( AacPsyContext * ) ctx -> model_priv_data		6759740	1					
ANR	6759750	CastTarget	AacPsyContext *		6759740	0					
ANR	6759751	PtrMemberAccess	ctx -> model_priv_data		6759740	1					
ANR	6759752	Identifier	ctx		6759740	0					
ANR	6759753	Identifier	model_priv_data		6759740	1					
ANR	6759754	IdentifierDeclStatement	AacPsyChannel * pch = & pctx -> ch [ channel ] ;	9:4:237:277	6759740	1	True				
ANR	6759755	IdentifierDecl	* pch = & pctx -> ch [ channel ]		6759740	0					
ANR	6759756	IdentifierDeclType	AacPsyChannel *		6759740	0					
ANR	6759757	Identifier	pch		6759740	1					
ANR	6759758	AssignmentExpression	* pch = & pctx -> ch [ channel ]		6759740	2		=			
ANR	6759759	Identifier	pch		6759740	0					
ANR	6759760	UnaryOperationExpression	& pctx -> ch [ channel ]		6759740	1					
ANR	6759761	UnaryOperator	&		6759740	0					
ANR	6759762	ArrayIndexing	pctx -> ch [ channel ]		6759740	1					
ANR	6759763	PtrMemberAccess	pctx -> ch		6759740	0					
ANR	6759764	Identifier	pctx		6759740	0					
ANR	6759765	Identifier	ch		6759740	1					
ANR	6759766	Identifier	channel		6759740	1					
ANR	6759767	IdentifierDeclStatement	int grouping = 0 ;	11:4:284:304	6759740	2	True				
ANR	6759768	IdentifierDecl	grouping = 0		6759740	0					
ANR	6759769	IdentifierDeclType	int		6759740	0					
ANR	6759770	Identifier	grouping		6759740	1					
ANR	6759771	AssignmentExpression	grouping = 0		6759740	2		=			
ANR	6759772	Identifier	grouping		6759740	0					
ANR	6759773	PrimaryExpression	0		6759740	1					
ANR	6759774	IdentifierDeclStatement	int uselongblock = 1 ;	13:4:311:331	6759740	3	True				
ANR	6759775	IdentifierDecl	uselongblock = 1		6759740	0					
ANR	6759776	IdentifierDeclType	int		6759740	0					
ANR	6759777	Identifier	uselongblock		6759740	1					
ANR	6759778	AssignmentExpression	uselongblock = 1		6759740	2		=			
ANR	6759779	Identifier	uselongblock		6759740	0					
ANR	6759780	PrimaryExpression	1		6759740	1					
ANR	6759781	IdentifierDeclStatement	int attacks [ AAC_NUM_BLOCKS_SHORT + 1 ] = { 0 } ;	15:4:338:383	6759740	4	True				
ANR	6759782	IdentifierDecl	attacks [ AAC_NUM_BLOCKS_SHORT + 1 ] = { 0 }		6759740	0					
ANR	6759783	IdentifierDeclType	int [ AAC_NUM_BLOCKS_SHORT + 1 ]		6759740	0					
ANR	6759784	Identifier	attacks		6759740	1					
ANR	6759785	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6759740	2		+			
ANR	6759786	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	0					
ANR	6759787	PrimaryExpression	1		6759740	1					
ANR	6759788	AssignmentExpression	attacks [ AAC_NUM_BLOCKS_SHORT + 1 ] = { 0 }		6759740	3		=			
ANR	6759789	Identifier	attacks		6759740	0					
ANR	6759790	InitializerList	0		6759740	1					
ANR	6759791	PrimaryExpression	0		6759740	0					
ANR	6759792	IdentifierDeclStatement	float clippings [ AAC_NUM_BLOCKS_SHORT ] ;	17:4:390:427	6759740	5	True				
ANR	6759793	IdentifierDecl	clippings [ AAC_NUM_BLOCKS_SHORT ]		6759740	0					
ANR	6759794	IdentifierDeclType	float [ AAC_NUM_BLOCKS_SHORT ]		6759740	0					
ANR	6759795	Identifier	clippings		6759740	1					
ANR	6759796	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	2					
ANR	6759797	IdentifierDeclStatement	int i ;	19:4:434:439	6759740	6	True				
ANR	6759798	IdentifierDecl	i		6759740	0					
ANR	6759799	IdentifierDeclType	int		6759740	0					
ANR	6759800	Identifier	i		6759740	1					
ANR	6759801	IdentifierDeclStatement	FFPsyWindowInfo wi = { { 0 } } ;	21:4:446:476	6759740	7	True				
ANR	6759802	IdentifierDecl	wi = { { 0 } }		6759740	0					
ANR	6759803	IdentifierDeclType	FFPsyWindowInfo		6759740	0					
ANR	6759804	Identifier	wi		6759740	1					
ANR	6759805	AssignmentExpression	wi = { { 0 } }		6759740	2		=			
ANR	6759806	Identifier	wi		6759740	0					
ANR	6759807	InitializerList	0		6759740	1					
ANR	6759808	InitializerList	0		6759740	0					
ANR	6759809	PrimaryExpression	0		6759740	0					
ANR	6759810	IfStatement	if ( la )		6759740	8					
ANR	6759811	Condition	la	25:8:489:490	6759740	0	True				
ANR	6759812	Identifier	la		6759740	0					
ANR	6759813	CompoundStatement		35:8:735:750	6759740	1					
ANR	6759814	IdentifierDeclStatement	float hpfsmpl [ AAC_BLOCK_SIZE_LONG ] ;	27:8:504:538	6759740	0	True				
ANR	6759815	IdentifierDecl	hpfsmpl [ AAC_BLOCK_SIZE_LONG ]		6759740	0					
ANR	6759816	IdentifierDeclType	float [ AAC_BLOCK_SIZE_LONG ]		6759740	0					
ANR	6759817	Identifier	hpfsmpl		6759740	1					
ANR	6759818	Identifier	AAC_BLOCK_SIZE_LONG		6759740	2					
ANR	6759819	IdentifierDeclStatement	float const * pf = hpfsmpl ;	29:8:549:574	6759740	1	True				
ANR	6759820	IdentifierDecl	* pf = hpfsmpl		6759740	0					
ANR	6759821	IdentifierDeclType	float const *		6759740	0					
ANR	6759822	Identifier	pf		6759740	1					
ANR	6759823	AssignmentExpression	* pf = hpfsmpl		6759740	2		=			
ANR	6759824	Identifier	hpfsmpl		6759740	0					
ANR	6759825	Identifier	hpfsmpl		6759740	1					
ANR	6759826	IdentifierDeclStatement	float attack_intensity [ ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ] ;	31:8:585:660	6759740	2	True				
ANR	6759827	IdentifierDecl	attack_intensity [ ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ]		6759740	0					
ANR	6759828	IdentifierDeclType	float [ ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ]		6759740	0					
ANR	6759829	Identifier	attack_intensity		6759740	1					
ANR	6759830	MultiplicativeExpression	( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS		6759740	2		*			
ANR	6759831	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6759740	0		+			
ANR	6759832	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	0					
ANR	6759833	PrimaryExpression	1		6759740	1					
ANR	6759834	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6759835	IdentifierDeclStatement	float energy_subshort [ ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ] ;	33:8:671:745	6759740	3	True				
ANR	6759836	IdentifierDecl	energy_subshort [ ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ]		6759740	0					
ANR	6759837	IdentifierDeclType	float [ ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ]		6759740	0					
ANR	6759838	Identifier	energy_subshort		6759740	1					
ANR	6759839	MultiplicativeExpression	( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS		6759740	2		*			
ANR	6759840	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6759740	0		+			
ANR	6759841	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	0					
ANR	6759842	PrimaryExpression	1		6759740	1					
ANR	6759843	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6759844	IdentifierDeclStatement	float energy_short [ AAC_NUM_BLOCKS_SHORT + 1 ] = { 0 } ;	35:8:756:808	6759740	4	True				
ANR	6759845	IdentifierDecl	energy_short [ AAC_NUM_BLOCKS_SHORT + 1 ] = { 0 }		6759740	0					
ANR	6759846	IdentifierDeclType	float [ AAC_NUM_BLOCKS_SHORT + 1 ]		6759740	0					
ANR	6759847	Identifier	energy_short		6759740	1					
ANR	6759848	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6759740	2		+			
ANR	6759849	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	0					
ANR	6759850	PrimaryExpression	1		6759740	1					
ANR	6759851	AssignmentExpression	energy_short [ AAC_NUM_BLOCKS_SHORT + 1 ] = { 0 }		6759740	3		=			
ANR	6759852	Identifier	energy_short		6759740	0					
ANR	6759853	InitializerList	0		6759740	1					
ANR	6759854	PrimaryExpression	0		6759740	0					
ANR	6759855	IdentifierDeclStatement	const float * firbuf = la + ( AAC_BLOCK_SIZE_SHORT / 4 - PSY_LAME_FIR_LEN ) ;	37:8:819:889	6759740	5	True				
ANR	6759856	IdentifierDecl	* firbuf = la + ( AAC_BLOCK_SIZE_SHORT / 4 - PSY_LAME_FIR_LEN )		6759740	0					
ANR	6759857	IdentifierDeclType	const float *		6759740	0					
ANR	6759858	Identifier	firbuf		6759740	1					
ANR	6759859	AssignmentExpression	* firbuf = la + ( AAC_BLOCK_SIZE_SHORT / 4 - PSY_LAME_FIR_LEN )		6759740	2		=			
ANR	6759860	Identifier	firbuf		6759740	0					
ANR	6759861	AdditiveExpression	la + ( AAC_BLOCK_SIZE_SHORT / 4 - PSY_LAME_FIR_LEN )		6759740	1		+			
ANR	6759862	Identifier	la		6759740	0					
ANR	6759863	AdditiveExpression	AAC_BLOCK_SIZE_SHORT / 4 - PSY_LAME_FIR_LEN		6759740	1		-			
ANR	6759864	MultiplicativeExpression	AAC_BLOCK_SIZE_SHORT / 4		6759740	0		/			
ANR	6759865	Identifier	AAC_BLOCK_SIZE_SHORT		6759740	0					
ANR	6759866	PrimaryExpression	4		6759740	1					
ANR	6759867	Identifier	PSY_LAME_FIR_LEN		6759740	1					
ANR	6759868	IdentifierDeclStatement	int att_sum = 0 ;	39:8:900:915	6759740	6	True				
ANR	6759869	IdentifierDecl	att_sum = 0		6759740	0					
ANR	6759870	IdentifierDeclType	int		6759740	0					
ANR	6759871	Identifier	att_sum		6759740	1					
ANR	6759872	AssignmentExpression	att_sum = 0		6759740	2		=			
ANR	6759873	Identifier	att_sum		6759740	0					
ANR	6759874	PrimaryExpression	0		6759740	1					
ANR	6759875	ExpressionStatement	"psy_hp_filter ( firbuf , hpfsmpl , psy_fir_coeffs )"	45:8:988:1034	6759740	7	True				
ANR	6759876	CallExpression	"psy_hp_filter ( firbuf , hpfsmpl , psy_fir_coeffs )"		6759740	0					
ANR	6759877	Callee	psy_hp_filter		6759740	0					
ANR	6759878	Identifier	psy_hp_filter		6759740	0					
ANR	6759879	ArgumentList	firbuf		6759740	1					
ANR	6759880	Argument	firbuf		6759740	0					
ANR	6759881	Identifier	firbuf		6759740	0					
ANR	6759882	Argument	hpfsmpl		6759740	1					
ANR	6759883	Identifier	hpfsmpl		6759740	0					
ANR	6759884	Argument	psy_fir_coeffs		6759740	2					
ANR	6759885	Identifier	psy_fir_coeffs		6759740	0					
ANR	6759886	ForStatement	for ( i = 0 ; i < PSY_LAME_NUM_SUBBLOCKS ; i ++ )		6759740	8					
ANR	6759887	ForInit	i = 0 ;	51:13:1113:1118	6759740	0	True				
ANR	6759888	AssignmentExpression	i = 0		6759740	0		=			
ANR	6759889	Identifier	i		6759740	0					
ANR	6759890	PrimaryExpression	0		6759740	1					
ANR	6759891	Condition	i < PSY_LAME_NUM_SUBBLOCKS	51:20:1120:1145	6759740	1	True				
ANR	6759892	RelationalExpression	i < PSY_LAME_NUM_SUBBLOCKS		6759740	0		<			
ANR	6759893	Identifier	i		6759740	0					
ANR	6759894	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6759895	PostIncDecOperationExpression	i ++	51:48:1148:1150	6759740	2	True				
ANR	6759896	Identifier	i		6759740	0					
ANR	6759897	IncDec	++		6759740	1					
ANR	6759898	CompoundStatement		47:53:988:988	6759740	3					
ANR	6759899	ExpressionStatement	energy_subshort [ i ] = pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 1 ) * PSY_LAME_NUM_SUBBLOCKS ) ]	53:12:1168:1273	6759740	0	True				
ANR	6759900	AssignmentExpression	energy_subshort [ i ] = pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 1 ) * PSY_LAME_NUM_SUBBLOCKS ) ]		6759740	0		=			
ANR	6759901	ArrayIndexing	energy_subshort [ i ]		6759740	0					
ANR	6759902	Identifier	energy_subshort		6759740	0					
ANR	6759903	Identifier	i		6759740	1					
ANR	6759904	ArrayIndexing	pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 1 ) * PSY_LAME_NUM_SUBBLOCKS ) ]		6759740	1					
ANR	6759905	PtrMemberAccess	pch -> prev_energy_subshort		6759740	0					
ANR	6759906	Identifier	pch		6759740	0					
ANR	6759907	Identifier	prev_energy_subshort		6759740	1					
ANR	6759908	AdditiveExpression	i + ( ( AAC_NUM_BLOCKS_SHORT - 1 ) * PSY_LAME_NUM_SUBBLOCKS )		6759740	1		+			
ANR	6759909	Identifier	i		6759740	0					
ANR	6759910	MultiplicativeExpression	( AAC_NUM_BLOCKS_SHORT - 1 ) * PSY_LAME_NUM_SUBBLOCKS		6759740	1		*			
ANR	6759911	AdditiveExpression	AAC_NUM_BLOCKS_SHORT - 1		6759740	0		-			
ANR	6759912	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	0					
ANR	6759913	PrimaryExpression	1		6759740	1					
ANR	6759914	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6759915	ExpressionStatement	assert ( pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ] > 0 )	55:12:1288:1388	6759740	1	True				
ANR	6759916	CallExpression	assert ( pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ] > 0 )		6759740	0					
ANR	6759917	Callee	assert		6759740	0					
ANR	6759918	Identifier	assert		6759740	0					
ANR	6759919	ArgumentList	pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ] > 0		6759740	1					
ANR	6759920	Argument	pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ] > 0		6759740	0					
ANR	6759921	RelationalExpression	pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ] > 0		6759740	0		>			
ANR	6759922	ArrayIndexing	pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ]		6759740	0					
ANR	6759923	PtrMemberAccess	pch -> prev_energy_subshort		6759740	0					
ANR	6759924	Identifier	pch		6759740	0					
ANR	6759925	Identifier	prev_energy_subshort		6759740	1					
ANR	6759926	AdditiveExpression	i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 )		6759740	1		+			
ANR	6759927	Identifier	i		6759740	0					
ANR	6759928	AdditiveExpression	( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1		6759740	1		+			
ANR	6759929	MultiplicativeExpression	( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS		6759740	0		*			
ANR	6759930	AdditiveExpression	AAC_NUM_BLOCKS_SHORT - 2		6759740	0		-			
ANR	6759931	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	0					
ANR	6759932	PrimaryExpression	2		6759740	1					
ANR	6759933	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6759934	PrimaryExpression	1		6759740	1					
ANR	6759935	PrimaryExpression	0		6759740	1					
ANR	6759936	ExpressionStatement	attack_intensity [ i ] = energy_subshort [ i ] / pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ]	57:12:1403:1534	6759740	2	True				
ANR	6759937	AssignmentExpression	attack_intensity [ i ] = energy_subshort [ i ] / pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ]		6759740	0		=			
ANR	6759938	ArrayIndexing	attack_intensity [ i ]		6759740	0					
ANR	6759939	Identifier	attack_intensity		6759740	0					
ANR	6759940	Identifier	i		6759740	1					
ANR	6759941	MultiplicativeExpression	energy_subshort [ i ] / pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ]		6759740	1		/			
ANR	6759942	ArrayIndexing	energy_subshort [ i ]		6759740	0					
ANR	6759943	Identifier	energy_subshort		6759740	0					
ANR	6759944	Identifier	i		6759740	1					
ANR	6759945	ArrayIndexing	pch -> prev_energy_subshort [ i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 ) ]		6759740	1					
ANR	6759946	PtrMemberAccess	pch -> prev_energy_subshort		6759740	0					
ANR	6759947	Identifier	pch		6759740	0					
ANR	6759948	Identifier	prev_energy_subshort		6759740	1					
ANR	6759949	AdditiveExpression	i + ( ( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1 )		6759740	1		+			
ANR	6759950	Identifier	i		6759740	0					
ANR	6759951	AdditiveExpression	( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS + 1		6759740	1		+			
ANR	6759952	MultiplicativeExpression	( AAC_NUM_BLOCKS_SHORT - 2 ) * PSY_LAME_NUM_SUBBLOCKS		6759740	0		*			
ANR	6759953	AdditiveExpression	AAC_NUM_BLOCKS_SHORT - 2		6759740	0		-			
ANR	6759954	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	0					
ANR	6759955	PrimaryExpression	2		6759740	1					
ANR	6759956	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6759957	PrimaryExpression	1		6759740	1					
ANR	6759958	ExpressionStatement	energy_short [ 0 ] += energy_subshort [ i ]	59:12:1549:1586	6759740	3	True				
ANR	6759959	AssignmentExpression	energy_short [ 0 ] += energy_subshort [ i ]		6759740	0		+=			
ANR	6759960	ArrayIndexing	energy_short [ 0 ]		6759740	0					
ANR	6759961	Identifier	energy_short		6759740	0					
ANR	6759962	PrimaryExpression	0		6759740	1					
ANR	6759963	ArrayIndexing	energy_subshort [ i ]		6759740	1					
ANR	6759964	Identifier	energy_subshort		6759740	0					
ANR	6759965	Identifier	i		6759740	1					
ANR	6759966	ForStatement	for ( i = 0 ; i < AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS ; i ++ )		6759740	9					
ANR	6759967	ForInit	i = 0 ;	65:13:1615:1620	6759740	0	True				
ANR	6759968	AssignmentExpression	i = 0		6759740	0		=			
ANR	6759969	Identifier	i		6759740	0					
ANR	6759970	PrimaryExpression	0		6759740	1					
ANR	6759971	Condition	i < AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS	65:20:1622:1670	6759740	1	True				
ANR	6759972	RelationalExpression	i < AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS		6759740	0		<			
ANR	6759973	Identifier	i		6759740	0					
ANR	6759974	MultiplicativeExpression	AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS		6759740	1		*			
ANR	6759975	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	0					
ANR	6759976	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6759977	PostIncDecOperationExpression	i ++	65:71:1673:1675	6759740	2	True				
ANR	6759978	Identifier	i		6759740	0					
ANR	6759979	IncDec	++		6759740	1					
ANR	6759980	CompoundStatement		65:12:1642:1656	6759740	3					
ANR	6759981	Statement	float	67:12:1693:1697	6759740	0	True				
ANR	6759982	Statement	const	67:18:1699:1703	6759740	1	True				
ANR	6759983	Statement	*	67:24:1705:1705	6759740	2	True				
ANR	6759984	Statement	const	67:25:1706:1710	6759740	3	True				
ANR	6759985	ExpressionStatement	pfe = pf + AAC_BLOCK_SIZE_LONG / ( AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS )	67:31:1712:1792	6759740	4	True				
ANR	6759986	AssignmentExpression	pfe = pf + AAC_BLOCK_SIZE_LONG / ( AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS )		6759740	0		=			
ANR	6759987	Identifier	pfe		6759740	0					
ANR	6759988	AdditiveExpression	pf + AAC_BLOCK_SIZE_LONG / ( AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS )		6759740	1		+			
ANR	6759989	Identifier	pf		6759740	0					
ANR	6759990	MultiplicativeExpression	AAC_BLOCK_SIZE_LONG / ( AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS )		6759740	1		/			
ANR	6759991	Identifier	AAC_BLOCK_SIZE_LONG		6759740	0					
ANR	6759992	MultiplicativeExpression	AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS		6759740	1		*			
ANR	6759993	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	0					
ANR	6759994	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6759995	IdentifierDeclStatement	float p = 1.0f ;	69:12:1807:1821	6759740	5	True				
ANR	6759996	IdentifierDecl	p = 1.0f		6759740	0					
ANR	6759997	IdentifierDeclType	float		6759740	0					
ANR	6759998	Identifier	p		6759740	1					
ANR	6759999	AssignmentExpression	p = 1.0f		6759740	2		=			
ANR	6760000	Identifier	p		6759740	0					
ANR	6760001	PrimaryExpression	1.0f		6759740	1					
ANR	6760002	ForStatement	for ( ; pf < pfe ; pf ++ )		6759740	6					
ANR	6760003	Condition	pf < pfe	71:19:1843:1850	6759740	0	True				
ANR	6760004	RelationalExpression	pf < pfe		6759740	0		<			
ANR	6760005	Identifier	pf		6759740	0					
ANR	6760006	Identifier	pfe		6759740	1					
ANR	6760007	PostIncDecOperationExpression	pf ++	71:29:1853:1856	6759740	1	True				
ANR	6760008	Identifier	pf		6759740	0					
ANR	6760009	IncDec	++		6759740	1					
ANR	6760010	ExpressionStatement	"p = FFMAX ( p , fabsf ( * pf ) )"	73:16:1876:1900	6759740	2	True				
ANR	6760011	AssignmentExpression	"p = FFMAX ( p , fabsf ( * pf ) )"		6759740	0		=			
ANR	6760012	Identifier	p		6759740	0					
ANR	6760013	CallExpression	"FFMAX ( p , fabsf ( * pf ) )"		6759740	1					
ANR	6760014	Callee	FFMAX		6759740	0					
ANR	6760015	Identifier	FFMAX		6759740	0					
ANR	6760016	ArgumentList	p		6759740	1					
ANR	6760017	Argument	p		6759740	0					
ANR	6760018	Identifier	p		6759740	0					
ANR	6760019	Argument	fabsf ( * pf )		6759740	1					
ANR	6760020	CallExpression	fabsf ( * pf )		6759740	0					
ANR	6760021	Callee	fabsf		6759740	0					
ANR	6760022	Identifier	fabsf		6759740	0					
ANR	6760023	ArgumentList	* pf		6759740	1					
ANR	6760024	Argument	* pf		6759740	0					
ANR	6760025	UnaryOperationExpression	* pf		6759740	0					
ANR	6760026	UnaryOperator	*		6759740	0					
ANR	6760027	Identifier	pf		6759740	1					
ANR	6760028	ExpressionStatement	pch -> prev_energy_subshort [ i ] = energy_subshort [ i + PSY_LAME_NUM_SUBBLOCKS ] = p	75:12:1915:1993	6759740	7	True				
ANR	6760029	AssignmentExpression	pch -> prev_energy_subshort [ i ] = energy_subshort [ i + PSY_LAME_NUM_SUBBLOCKS ] = p		6759740	0		=			
ANR	6760030	ArrayIndexing	pch -> prev_energy_subshort [ i ]		6759740	0					
ANR	6760031	PtrMemberAccess	pch -> prev_energy_subshort		6759740	0					
ANR	6760032	Identifier	pch		6759740	0					
ANR	6760033	Identifier	prev_energy_subshort		6759740	1					
ANR	6760034	Identifier	i		6759740	1					
ANR	6760035	AssignmentExpression	energy_subshort [ i + PSY_LAME_NUM_SUBBLOCKS ] = p		6759740	1		=			
ANR	6760036	ArrayIndexing	energy_subshort [ i + PSY_LAME_NUM_SUBBLOCKS ]		6759740	0					
ANR	6760037	Identifier	energy_subshort		6759740	0					
ANR	6760038	AdditiveExpression	i + PSY_LAME_NUM_SUBBLOCKS		6759740	1		+			
ANR	6760039	Identifier	i		6759740	0					
ANR	6760040	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6760041	Identifier	p		6759740	1					
ANR	6760042	ExpressionStatement	energy_short [ 1 + i / PSY_LAME_NUM_SUBBLOCKS ] += p	77:12:2008:2057	6759740	8	True				
ANR	6760043	AssignmentExpression	energy_short [ 1 + i / PSY_LAME_NUM_SUBBLOCKS ] += p		6759740	0		+=			
ANR	6760044	ArrayIndexing	energy_short [ 1 + i / PSY_LAME_NUM_SUBBLOCKS ]		6759740	0					
ANR	6760045	Identifier	energy_short		6759740	0					
ANR	6760046	AdditiveExpression	1 + i / PSY_LAME_NUM_SUBBLOCKS		6759740	1		+			
ANR	6760047	PrimaryExpression	1		6759740	0					
ANR	6760048	MultiplicativeExpression	i / PSY_LAME_NUM_SUBBLOCKS		6759740	1		/			
ANR	6760049	Identifier	i		6759740	0					
ANR	6760050	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6760051	Identifier	p		6759740	1					
ANR	6760052	IfStatement	if ( p > energy_subshort [ i + 1 ] )		6759740	9					
ANR	6760053	Condition	p > energy_subshort [ i + 1 ]	93:16:2581:2606	6759740	0	True				
ANR	6760054	RelationalExpression	p > energy_subshort [ i + 1 ]		6759740	0		>			
ANR	6760055	Identifier	p		6759740	0					
ANR	6760056	ArrayIndexing	energy_subshort [ i + 1 ]		6759740	1					
ANR	6760057	Identifier	energy_subshort		6759740	0					
ANR	6760058	AdditiveExpression	i + 1		6759740	1		+			
ANR	6760059	Identifier	i		6759740	0					
ANR	6760060	PrimaryExpression	1		6759740	1					
ANR	6760061	ExpressionStatement	p = p / energy_subshort [ i + 1 ]	95:16:2626:2656	6759740	1	True				
ANR	6760062	AssignmentExpression	p = p / energy_subshort [ i + 1 ]		6759740	0		=			
ANR	6760063	Identifier	p		6759740	0					
ANR	6760064	MultiplicativeExpression	p / energy_subshort [ i + 1 ]		6759740	1		/			
ANR	6760065	Identifier	p		6759740	0					
ANR	6760066	ArrayIndexing	energy_subshort [ i + 1 ]		6759740	1					
ANR	6760067	Identifier	energy_subshort		6759740	0					
ANR	6760068	AdditiveExpression	i + 1		6759740	1		+			
ANR	6760069	Identifier	i		6759740	0					
ANR	6760070	PrimaryExpression	1		6759740	1					
ANR	6760071	ElseStatement	else		6759740	0					
ANR	6760072	IfStatement	if ( energy_subshort [ i + 1 ] > p * 10.0f )		6759740	0					
ANR	6760073	Condition	energy_subshort [ i + 1 ] > p * 10.0f	97:21:2680:2713	6759740	0	True				
ANR	6760074	RelationalExpression	energy_subshort [ i + 1 ] > p * 10.0f		6759740	0		>			
ANR	6760075	ArrayIndexing	energy_subshort [ i + 1 ]		6759740	0					
ANR	6760076	Identifier	energy_subshort		6759740	0					
ANR	6760077	AdditiveExpression	i + 1		6759740	1		+			
ANR	6760078	Identifier	i		6759740	0					
ANR	6760079	PrimaryExpression	1		6759740	1					
ANR	6760080	MultiplicativeExpression	p * 10.0f		6759740	1		*			
ANR	6760081	Identifier	p		6759740	0					
ANR	6760082	PrimaryExpression	10.0f		6759740	1					
ANR	6760083	ExpressionStatement	p = energy_subshort [ i + 1 ] / ( p * 10.0f )	99:16:2733:2773	6759740	1	True				
ANR	6760084	AssignmentExpression	p = energy_subshort [ i + 1 ] / ( p * 10.0f )		6759740	0		=			
ANR	6760085	Identifier	p		6759740	0					
ANR	6760086	MultiplicativeExpression	energy_subshort [ i + 1 ] / ( p * 10.0f )		6759740	1		/			
ANR	6760087	ArrayIndexing	energy_subshort [ i + 1 ]		6759740	0					
ANR	6760088	Identifier	energy_subshort		6759740	0					
ANR	6760089	AdditiveExpression	i + 1		6759740	1		+			
ANR	6760090	Identifier	i		6759740	0					
ANR	6760091	PrimaryExpression	1		6759740	1					
ANR	6760092	MultiplicativeExpression	p * 10.0f		6759740	1		*			
ANR	6760093	Identifier	p		6759740	0					
ANR	6760094	PrimaryExpression	10.0f		6759740	1					
ANR	6760095	ElseStatement	else		6759740	0					
ANR	6760096	ExpressionStatement	p = 0.0	103:16:2810:2817	6759740	0	True				
ANR	6760097	AssignmentExpression	p = 0.0		6759740	0		=			
ANR	6760098	Identifier	p		6759740	0					
ANR	6760099	PrimaryExpression	0.0		6759740	1					
ANR	6760100	ExpressionStatement	attack_intensity [ i + PSY_LAME_NUM_SUBBLOCKS ] = p	105:12:2832:2880	6759740	10	True				
ANR	6760101	AssignmentExpression	attack_intensity [ i + PSY_LAME_NUM_SUBBLOCKS ] = p		6759740	0		=			
ANR	6760102	ArrayIndexing	attack_intensity [ i + PSY_LAME_NUM_SUBBLOCKS ]		6759740	0					
ANR	6760103	Identifier	attack_intensity		6759740	0					
ANR	6760104	AdditiveExpression	i + PSY_LAME_NUM_SUBBLOCKS		6759740	1		+			
ANR	6760105	Identifier	i		6759740	0					
ANR	6760106	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6760107	Identifier	p		6759740	1					
ANR	6760108	ForStatement	for ( i = 0 ; i < ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS ; i ++ )		6759740	10					
ANR	6760109	ForInit	i = 0 ;	113:13:2964:2969	6759740	0	True				
ANR	6760110	AssignmentExpression	i = 0		6759740	0		=			
ANR	6760111	Identifier	i		6759740	0					
ANR	6760112	PrimaryExpression	0		6759740	1					
ANR	6760113	Condition	i < ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS	113:20:2971:3025	6759740	1	True				
ANR	6760114	RelationalExpression	i < ( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS		6759740	0		<			
ANR	6760115	Identifier	i		6759740	0					
ANR	6760116	MultiplicativeExpression	( AAC_NUM_BLOCKS_SHORT + 1 ) * PSY_LAME_NUM_SUBBLOCKS		6759740	1		*			
ANR	6760117	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6759740	0		+			
ANR	6760118	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	0					
ANR	6760119	PrimaryExpression	1		6759740	1					
ANR	6760120	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6760121	PostIncDecOperationExpression	i ++	113:77:3028:3030	6759740	2	True				
ANR	6760122	Identifier	i		6759740	0					
ANR	6760123	IncDec	++		6759740	1					
ANR	6760124	IfStatement	if ( ! attacks [ i / PSY_LAME_NUM_SUBBLOCKS ] )		6759740	3					
ANR	6760125	Condition	! attacks [ i / PSY_LAME_NUM_SUBBLOCKS ]	115:16:3050:3085	6759740	0	True				
ANR	6760126	UnaryOperationExpression	! attacks [ i / PSY_LAME_NUM_SUBBLOCKS ]		6759740	0					
ANR	6760127	UnaryOperator	!		6759740	0					
ANR	6760128	ArrayIndexing	attacks [ i / PSY_LAME_NUM_SUBBLOCKS ]		6759740	1					
ANR	6760129	Identifier	attacks		6759740	0					
ANR	6760130	MultiplicativeExpression	i / PSY_LAME_NUM_SUBBLOCKS		6759740	1		/			
ANR	6760131	Identifier	i		6759740	0					
ANR	6760132	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6760133	IfStatement	if ( attack_intensity [ i ] > pch -> attack_threshold )		6759740	1					
ANR	6760134	Condition	attack_intensity [ i ] > pch -> attack_threshold	117:20:3109:3151	6759740	0	True				
ANR	6760135	RelationalExpression	attack_intensity [ i ] > pch -> attack_threshold		6759740	0		>			
ANR	6760136	ArrayIndexing	attack_intensity [ i ]		6759740	0					
ANR	6760137	Identifier	attack_intensity		6759740	0					
ANR	6760138	Identifier	i		6759740	1					
ANR	6760139	PtrMemberAccess	pch -> attack_threshold		6759740	1					
ANR	6760140	Identifier	pch		6759740	0					
ANR	6760141	Identifier	attack_threshold		6759740	1					
ANR	6760142	ExpressionStatement	attacks [ i / PSY_LAME_NUM_SUBBLOCKS ] = ( i % PSY_LAME_NUM_SUBBLOCKS ) + 1	119:20:3175:3245	6759740	1	True				
ANR	6760143	AssignmentExpression	attacks [ i / PSY_LAME_NUM_SUBBLOCKS ] = ( i % PSY_LAME_NUM_SUBBLOCKS ) + 1		6759740	0		=			
ANR	6760144	ArrayIndexing	attacks [ i / PSY_LAME_NUM_SUBBLOCKS ]		6759740	0					
ANR	6760145	Identifier	attacks		6759740	0					
ANR	6760146	MultiplicativeExpression	i / PSY_LAME_NUM_SUBBLOCKS		6759740	1		/			
ANR	6760147	Identifier	i		6759740	0					
ANR	6760148	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6760149	AdditiveExpression	( i % PSY_LAME_NUM_SUBBLOCKS ) + 1		6759740	1		+			
ANR	6760150	MultiplicativeExpression	i % PSY_LAME_NUM_SUBBLOCKS		6759740	0		%			
ANR	6760151	Identifier	i		6759740	0					
ANR	6760152	Identifier	PSY_LAME_NUM_SUBBLOCKS		6759740	1					
ANR	6760153	PrimaryExpression	1		6759740	1					
ANR	6760154	ForStatement	for ( i = 1 ; i < AAC_NUM_BLOCKS_SHORT + 1 ; i ++ )		6759740	11					
ANR	6760155	ForInit	i = 1 ;	131:13:3610:3615	6759740	0	True				
ANR	6760156	AssignmentExpression	i = 1		6759740	0		=			
ANR	6760157	Identifier	i		6759740	0					
ANR	6760158	PrimaryExpression	1		6759740	1					
ANR	6760159	Condition	i < AAC_NUM_BLOCKS_SHORT + 1	131:20:3617:3644	6759740	1	True				
ANR	6760160	RelationalExpression	i < AAC_NUM_BLOCKS_SHORT + 1		6759740	0		<			
ANR	6760161	Identifier	i		6759740	0					
ANR	6760162	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6759740	1		+			
ANR	6760163	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	0					
ANR	6760164	PrimaryExpression	1		6759740	1					
ANR	6760165	PostIncDecOperationExpression	i ++	131:50:3647:3649	6759740	2	True				
ANR	6760166	Identifier	i		6759740	0					
ANR	6760167	IncDec	++		6759740	1					
ANR	6760168	CompoundStatement		133:12:3598:3625	6759740	3					
ANR	6760169	IdentifierDeclStatement	float const u = energy_short [ i - 1 ] ;	133:12:3667:3702	6759740	0	True				
ANR	6760170	IdentifierDecl	u = energy_short [ i - 1 ]		6759740	0					
ANR	6760171	IdentifierDeclType	float const		6759740	0					
ANR	6760172	Identifier	u		6759740	1					
ANR	6760173	AssignmentExpression	u = energy_short [ i - 1 ]		6759740	2		=			
ANR	6760174	Identifier	u		6759740	0					
ANR	6760175	ArrayIndexing	energy_short [ i - 1 ]		6759740	1					
ANR	6760176	Identifier	energy_short		6759740	0					
ANR	6760177	AdditiveExpression	i - 1		6759740	1		-			
ANR	6760178	Identifier	i		6759740	0					
ANR	6760179	PrimaryExpression	1		6759740	1					
ANR	6760180	IdentifierDeclStatement	float const v = energy_short [ i ] ;	135:12:3717:3748	6759740	1	True				
ANR	6760181	IdentifierDecl	v = energy_short [ i ]		6759740	0					
ANR	6760182	IdentifierDeclType	float const		6759740	0					
ANR	6760183	Identifier	v		6759740	1					
ANR	6760184	AssignmentExpression	v = energy_short [ i ]		6759740	2		=			
ANR	6760185	Identifier	v		6759740	0					
ANR	6760186	ArrayIndexing	energy_short [ i ]		6759740	1					
ANR	6760187	Identifier	energy_short		6759740	0					
ANR	6760188	Identifier	i		6759740	1					
ANR	6760189	IdentifierDeclStatement	"float const m = FFMAX ( u , v ) ;"	137:12:3763:3790	6759740	2	True				
ANR	6760190	IdentifierDecl	"m = FFMAX ( u , v )"		6759740	0					
ANR	6760191	IdentifierDeclType	float const		6759740	0					
ANR	6760192	Identifier	m		6759740	1					
ANR	6760193	AssignmentExpression	"m = FFMAX ( u , v )"		6759740	2		=			
ANR	6760194	Identifier	m		6759740	0					
ANR	6760195	CallExpression	"FFMAX ( u , v )"		6759740	1					
ANR	6760196	Callee	FFMAX		6759740	0					
ANR	6760197	Identifier	FFMAX		6759740	0					
ANR	6760198	ArgumentList	u		6759740	1					
ANR	6760199	Argument	u		6759740	0					
ANR	6760200	Identifier	u		6759740	0					
ANR	6760201	Argument	v		6759740	1					
ANR	6760202	Identifier	v		6759740	0					
ANR	6760203	IfStatement	if ( m < 40000 )		6759740	3					
ANR	6760204	Condition	m < 40000	139:16:3809:3817	6759740	0	True				
ANR	6760205	RelationalExpression	m < 40000		6759740	0		<			
ANR	6760206	Identifier	m		6759740	0					
ANR	6760207	PrimaryExpression	40000		6759740	1					
ANR	6760208	CompoundStatement		135:27:3655:3655	6759740	1					
ANR	6760209	IfStatement	if ( u < 1.7f * v && v < 1.7f * u )		6759740	0					
ANR	6760210	Condition	u < 1.7f * v && v < 1.7f * u	141:20:3878:3905	6759740	0	True				
ANR	6760211	AndExpression	u < 1.7f * v && v < 1.7f * u		6759740	0		&&			
ANR	6760212	RelationalExpression	u < 1.7f * v		6759740	0		<			
ANR	6760213	Identifier	u		6759740	0					
ANR	6760214	MultiplicativeExpression	1.7f * v		6759740	1		*			
ANR	6760215	PrimaryExpression	1.7f		6759740	0					
ANR	6760216	Identifier	v		6759740	1					
ANR	6760217	RelationalExpression	v < 1.7f * u		6759740	1		<			
ANR	6760218	Identifier	v		6759740	0					
ANR	6760219	MultiplicativeExpression	1.7f * u		6759740	1		*			
ANR	6760220	PrimaryExpression	1.7f		6759740	0					
ANR	6760221	Identifier	u		6759740	1					
ANR	6760222	CompoundStatement		137:50:3743:3743	6759740	1					
ANR	6760223	IfStatement	if ( i == 1 && attacks [ 0 ] < attacks [ i ] )		6759740	0					
ANR	6760224	Condition	i == 1 && attacks [ 0 ] < attacks [ i ]	143:24:3947:3979	6759740	0	True				
ANR	6760225	AndExpression	i == 1 && attacks [ 0 ] < attacks [ i ]		6759740	0		&&			
ANR	6760226	EqualityExpression	i == 1		6759740	0		==			
ANR	6760227	Identifier	i		6759740	0					
ANR	6760228	PrimaryExpression	1		6759740	1					
ANR	6760229	RelationalExpression	attacks [ 0 ] < attacks [ i ]		6759740	1		<			
ANR	6760230	ArrayIndexing	attacks [ 0 ]		6759740	0					
ANR	6760231	Identifier	attacks		6759740	0					
ANR	6760232	PrimaryExpression	0		6759740	1					
ANR	6760233	ArrayIndexing	attacks [ i ]		6759740	1					
ANR	6760234	Identifier	attacks		6759740	0					
ANR	6760235	Identifier	i		6759740	1					
ANR	6760236	ExpressionStatement	attacks [ 0 ] = 0	145:24:4007:4021	6759740	1	True				
ANR	6760237	AssignmentExpression	attacks [ 0 ] = 0		6759740	0		=			
ANR	6760238	ArrayIndexing	attacks [ 0 ]		6759740	0					
ANR	6760239	Identifier	attacks		6759740	0					
ANR	6760240	PrimaryExpression	0		6759740	1					
ANR	6760241	PrimaryExpression	0		6759740	1					
ANR	6760242	ExpressionStatement	attacks [ i ] = 0	147:20:4044:4058	6759740	1	True				
ANR	6760243	AssignmentExpression	attacks [ i ] = 0		6759740	0		=			
ANR	6760244	ArrayIndexing	attacks [ i ]		6759740	0					
ANR	6760245	Identifier	attacks		6759740	0					
ANR	6760246	Identifier	i		6759740	1					
ANR	6760247	PrimaryExpression	0		6759740	1					
ANR	6760248	ExpressionStatement	att_sum += attacks [ i ]	153:12:4107:4128	6759740	4	True				
ANR	6760249	AssignmentExpression	att_sum += attacks [ i ]		6759740	0		+=			
ANR	6760250	Identifier	att_sum		6759740	0					
ANR	6760251	ArrayIndexing	attacks [ i ]		6759740	1					
ANR	6760252	Identifier	attacks		6759740	0					
ANR	6760253	Identifier	i		6759740	1					
ANR	6760254	IfStatement	if ( attacks [ 0 ] <= pch -> prev_attack )		6759740	12					
ANR	6760255	Condition	attacks [ 0 ] <= pch -> prev_attack	159:12:4156:4185	6759740	0	True				
ANR	6760256	RelationalExpression	attacks [ 0 ] <= pch -> prev_attack		6759740	0		<=			
ANR	6760257	ArrayIndexing	attacks [ 0 ]		6759740	0					
ANR	6760258	Identifier	attacks		6759740	0					
ANR	6760259	PrimaryExpression	0		6759740	1					
ANR	6760260	PtrMemberAccess	pch -> prev_attack		6759740	1					
ANR	6760261	Identifier	pch		6759740	0					
ANR	6760262	Identifier	prev_attack		6759740	1					
ANR	6760263	ExpressionStatement	attacks [ 0 ] = 0	161:12:4201:4215	6759740	1	True				
ANR	6760264	AssignmentExpression	attacks [ 0 ] = 0		6759740	0		=			
ANR	6760265	ArrayIndexing	attacks [ 0 ]		6759740	0					
ANR	6760266	Identifier	attacks		6759740	0					
ANR	6760267	PrimaryExpression	0		6759740	1					
ANR	6760268	PrimaryExpression	0		6759740	1					
ANR	6760269	ExpressionStatement	att_sum += attacks [ 0 ]	165:8:4228:4249	6759740	13	True				
ANR	6760270	AssignmentExpression	att_sum += attacks [ 0 ]		6759740	0		+=			
ANR	6760271	Identifier	att_sum		6759740	0					
ANR	6760272	ArrayIndexing	attacks [ 0 ]		6759740	1					
ANR	6760273	Identifier	attacks		6759740	0					
ANR	6760274	PrimaryExpression	0		6759740	1					
ANR	6760275	IfStatement	if ( pch -> prev_attack == 3 || att_sum )		6759740	14					
ANR	6760276	Condition	pch -> prev_attack == 3 || att_sum	169:12:4373:4404	6759740	0	True				
ANR	6760277	OrExpression	pch -> prev_attack == 3 || att_sum		6759740	0		||			
ANR	6760278	EqualityExpression	pch -> prev_attack == 3		6759740	0		==			
ANR	6760279	PtrMemberAccess	pch -> prev_attack		6759740	0					
ANR	6760280	Identifier	pch		6759740	0					
ANR	6760281	Identifier	prev_attack		6759740	1					
ANR	6760282	PrimaryExpression	3		6759740	1					
ANR	6760283	Identifier	att_sum		6759740	1					
ANR	6760284	CompoundStatement		165:46:4242:4242	6759740	1					
ANR	6760285	ExpressionStatement	uselongblock = 0	171:12:4422:4438	6759740	0	True				
ANR	6760286	AssignmentExpression	uselongblock = 0		6759740	0		=			
ANR	6760287	Identifier	uselongblock		6759740	0					
ANR	6760288	PrimaryExpression	0		6759740	1					
ANR	6760289	ForStatement	for ( i = 1 ; i < AAC_NUM_BLOCKS_SHORT + 1 ; i ++ )		6759740	1					
ANR	6760290	ForInit	i = 1 ;	175:17:4460:4465	6759740	0	True				
ANR	6760291	AssignmentExpression	i = 1		6759740	0		=			
ANR	6760292	Identifier	i		6759740	0					
ANR	6760293	PrimaryExpression	1		6759740	1					
ANR	6760294	Condition	i < AAC_NUM_BLOCKS_SHORT + 1	175:24:4467:4494	6759740	1	True				
ANR	6760295	RelationalExpression	i < AAC_NUM_BLOCKS_SHORT + 1		6759740	0		<			
ANR	6760296	Identifier	i		6759740	0					
ANR	6760297	AdditiveExpression	AAC_NUM_BLOCKS_SHORT + 1		6759740	1		+			
ANR	6760298	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	0					
ANR	6760299	PrimaryExpression	1		6759740	1					
ANR	6760300	PostIncDecOperationExpression	i ++	175:54:4497:4499	6759740	2	True				
ANR	6760301	Identifier	i		6759740	0					
ANR	6760302	IncDec	++		6759740	1					
ANR	6760303	IfStatement	if ( attacks [ i ] && attacks [ i - 1 ] )		6759740	3					
ANR	6760304	Condition	attacks [ i ] && attacks [ i - 1 ]	177:20:4523:4548	6759740	0	True				
ANR	6760305	AndExpression	attacks [ i ] && attacks [ i - 1 ]		6759740	0		&&			
ANR	6760306	ArrayIndexing	attacks [ i ]		6759740	0					
ANR	6760307	Identifier	attacks		6759740	0					
ANR	6760308	Identifier	i		6759740	1					
ANR	6760309	ArrayIndexing	attacks [ i - 1 ]		6759740	1					
ANR	6760310	Identifier	attacks		6759740	0					
ANR	6760311	AdditiveExpression	i - 1		6759740	1		-			
ANR	6760312	Identifier	i		6759740	0					
ANR	6760313	PrimaryExpression	1		6759740	1					
ANR	6760314	ExpressionStatement	attacks [ i ] = 0	179:20:4572:4586	6759740	1	True				
ANR	6760315	AssignmentExpression	attacks [ i ] = 0		6759740	0		=			
ANR	6760316	ArrayIndexing	attacks [ i ]		6759740	0					
ANR	6760317	Identifier	attacks		6759740	0					
ANR	6760318	Identifier	i		6759740	1					
ANR	6760319	PrimaryExpression	0		6759740	1					
ANR	6760320	ElseStatement	else		6759740	0					
ANR	6760321	CompoundStatement		179:11:4446:4446	6759740	0					
ANR	6760322	ExpressionStatement	uselongblock = ! ( prev_type == EIGHT_SHORT_SEQUENCE )	187:8:4712:4763	6759740	0	True				
ANR	6760323	AssignmentExpression	uselongblock = ! ( prev_type == EIGHT_SHORT_SEQUENCE )		6759740	0		=			
ANR	6760324	Identifier	uselongblock		6759740	0					
ANR	6760325	UnaryOperationExpression	! ( prev_type == EIGHT_SHORT_SEQUENCE )		6759740	1					
ANR	6760326	UnaryOperator	!		6759740	0					
ANR	6760327	EqualityExpression	prev_type == EIGHT_SHORT_SEQUENCE		6759740	1		==			
ANR	6760328	Identifier	prev_type		6759740	0					
ANR	6760329	Identifier	EIGHT_SHORT_SEQUENCE		6759740	1					
ANR	6760330	ExpressionStatement	"lame_apply_block_type ( pch , & wi , uselongblock )"	193:4:4779:4824	6759740	9	True				
ANR	6760331	CallExpression	"lame_apply_block_type ( pch , & wi , uselongblock )"		6759740	0					
ANR	6760332	Callee	lame_apply_block_type		6759740	0					
ANR	6760333	Identifier	lame_apply_block_type		6759740	0					
ANR	6760334	ArgumentList	pch		6759740	1					
ANR	6760335	Argument	pch		6759740	0					
ANR	6760336	Identifier	pch		6759740	0					
ANR	6760337	Argument	& wi		6759740	1					
ANR	6760338	UnaryOperationExpression	& wi		6759740	0					
ANR	6760339	UnaryOperator	&		6759740	0					
ANR	6760340	Identifier	wi		6759740	1					
ANR	6760341	Argument	uselongblock		6759740	2					
ANR	6760342	Identifier	uselongblock		6759740	0					
ANR	6760343	IfStatement	if ( audio )		6759740	10					
ANR	6760344	Condition	audio	199:8:4907:4911	6759740	0	True				
ANR	6760345	Identifier	audio		6759740	0					
ANR	6760346	CompoundStatement		195:15:4749:4749	6759740	1					
ANR	6760347	ForStatement	for ( i = 0 ; i < AAC_NUM_BLOCKS_SHORT ; i ++ )		6759740	0					
ANR	6760348	ForInit	i = 0 ;	201:13:4930:4935	6759740	0	True				
ANR	6760349	AssignmentExpression	i = 0		6759740	0		=			
ANR	6760350	Identifier	i		6759740	0					
ANR	6760351	PrimaryExpression	0		6759740	1					
ANR	6760352	Condition	i < AAC_NUM_BLOCKS_SHORT	201:20:4937:4960	6759740	1	True				
ANR	6760353	RelationalExpression	i < AAC_NUM_BLOCKS_SHORT		6759740	0		<			
ANR	6760354	Identifier	i		6759740	0					
ANR	6760355	Identifier	AAC_NUM_BLOCKS_SHORT		6759740	1					
ANR	6760356	PostIncDecOperationExpression	i ++	201:46:4963:4965	6759740	2	True				
ANR	6760357	Identifier	i		6759740	0					
ANR	6760358	IncDec	++		6759740	1					
ANR	6760359	CompoundStatement		203:12:4913:4918	6759740	3					
ANR	6760360	IdentifierDeclStatement	const float * wbuf = audio + i * AAC_BLOCK_SIZE_SHORT ;	203:12:4983:5035	6759740	0	True				
ANR	6760361	IdentifierDecl	* wbuf = audio + i * AAC_BLOCK_SIZE_SHORT		6759740	0					
ANR	6760362	IdentifierDeclType	const float *		6759740	0					
ANR	6760363	Identifier	wbuf		6759740	1					
ANR	6760364	AssignmentExpression	* wbuf = audio + i * AAC_BLOCK_SIZE_SHORT		6759740	2		=			
ANR	6760365	Identifier	wbuf		6759740	0					
ANR	6760366	AdditiveExpression	audio + i * AAC_BLOCK_SIZE_SHORT		6759740	1		+			
ANR	6760367	Identifier	audio		6759740	0					
ANR	6760368	MultiplicativeExpression	i * AAC_BLOCK_SIZE_SHORT		6759740	1		*			
ANR	6760369	Identifier	i		6759740	0					
ANR	6760370	Identifier	AAC_BLOCK_SIZE_SHORT		6759740	1					
ANR	6760371	IdentifierDeclStatement	float max = 0 ;	205:12:5050:5063	6759740	1	True				
ANR	6760372	IdentifierDecl	max = 0		6759740	0					
ANR	6760373	IdentifierDeclType	float		6759740	0					
ANR	6760374	Identifier	max		6759740	1					
ANR	6760375	AssignmentExpression	max = 0		6759740	2		=			
ANR	6760376	Identifier	max		6759740	0					
ANR	6760377	PrimaryExpression	0		6759740	1					
ANR	6760378	IdentifierDeclStatement	int j ;	207:12:5078:5083	6759740	2	True				
ANR	6760379	IdentifierDecl	j		6759740	0					
ANR	6760380	IdentifierDeclType	int		6759740	0					
ANR	6760381	Identifier	j		6759740	1					
ANR	6760382	ForStatement	for ( j = 0 ; j < AAC_BLOCK_SIZE_SHORT ; j ++ )		6759740	3					
ANR	6760383	ForInit	j = 0 ;	209:17:5103:5108	6759740	0	True				
ANR	6760384	AssignmentExpression	j = 0		6759740	0		=			
ANR	6760385	Identifier	j		6759740	0					
ANR	6760386	PrimaryExpression	0		6759740	1					
ANR	6760387	Condition	j < AAC_BLOCK_SIZE_SHORT	209:24:5110:5133	6759740	1	True				
ANR	6760388	RelationalExpression	j < AAC_BLOCK_SIZE_SHORT		6759740	0		<			
ANR	6760389	Identifier	j		6759740	0					
ANR	6760390	Identifier	AAC_BLOCK_SIZE_SHORT		6759740	1					
ANR	6760391	PostIncDecOperationExpression	j ++	209:50:5136:5138	6759740	2	True				
ANR	6760392	Identifier	j		6759740	0					
ANR	6760393	IncDec	++		6759740	1					
ANR	6760394	ExpressionStatement	"max = FFMAX ( max , fabsf ( wbuf [ j ] ) )"	211:16:5158:5190	6759740	3	True				
ANR	6760395	AssignmentExpression	"max = FFMAX ( max , fabsf ( wbuf [ j ] ) )"		6759740	0		=			
ANR	6760396	Identifier	max		6759740	0					
ANR	6760397	CallExpression	"FFMAX ( max , fabsf ( wbuf [ j ] ) )"		6759740	1					
ANR	6760398	Callee	FFMAX		6759740	0					
ANR	6760399	Identifier	FFMAX		6759740	0					
ANR	6760400	ArgumentList	max		6759740	1					
ANR	6760401	Argument	max		6759740	0					
ANR	6760402	Identifier	max		6759740	0					
ANR	6760403	Argument	fabsf ( wbuf [ j ] )		6759740	1					
ANR	6760404	CallExpression	fabsf ( wbuf [ j ] )		6759740	0					
ANR	6760405	Callee	fabsf		6759740	0					
ANR	6760406	Identifier	fabsf		6759740	0					
ANR	6760407	ArgumentList	wbuf [ j ]		6759740	1					
ANR	6760408	Argument	wbuf [ j ]		6759740	0					
ANR	6760409	ArrayIndexing	wbuf [ j ]		6759740	0					
ANR	6760410	Identifier	wbuf		6759740	0					
ANR	6760411	Identifier	j		6759740	1					
ANR	6760412	ExpressionStatement	clippings [ i ] = max	213:12:5205:5223	6759740	4	True				
ANR	6760413	AssignmentExpression	clippings [ i ] = max		6759740	0		=			
ANR	6760414	ArrayIndexing	clippings [ i ]		6759740	0					
ANR	6760415	Identifier	clippings		6759740	0					
ANR	6760416	Identifier	i		6759740	1					
ANR	6760417	Identifier	max		6759740	1					
ANR	6760418	ElseStatement	else		6759740	0					
ANR	6760419	CompoundStatement		213:11:5083:5083	6759740	0					
ANR	6760420	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6759740	0					
ANR	6760421	ForInit	i = 0 ;	219:13:5264:5269	6759740	0	True				
ANR	6760422	AssignmentExpression	i = 0		6759740	0		=			
ANR	6760423	Identifier	i		6759740	0					
ANR	6760424	PrimaryExpression	0		6759740	1					
ANR	6760425	Condition	i < 8	219:20:5271:5275	6759740	1	True				
ANR	6760426	RelationalExpression	i < 8		6759740	0		<			
ANR	6760427	Identifier	i		6759740	0					
ANR	6760428	PrimaryExpression	8		6759740	1					
ANR	6760429	PostIncDecOperationExpression	i ++	219:27:5278:5280	6759740	2	True				
ANR	6760430	Identifier	i		6759740	0					
ANR	6760431	IncDec	++		6759740	1					
ANR	6760432	ExpressionStatement	clippings [ i ] = 0	221:12:5296:5312	6759740	3	True				
ANR	6760433	AssignmentExpression	clippings [ i ] = 0		6759740	0		=			
ANR	6760434	ArrayIndexing	clippings [ i ]		6759740	0					
ANR	6760435	Identifier	clippings		6759740	0					
ANR	6760436	Identifier	i		6759740	1					
ANR	6760437	PrimaryExpression	0		6759740	1					
ANR	6760438	ExpressionStatement	wi . window_type [ 1 ] = prev_type	227:4:5328:5357	6759740	11	True				
ANR	6760439	AssignmentExpression	wi . window_type [ 1 ] = prev_type		6759740	0		=			
ANR	6760440	ArrayIndexing	wi . window_type [ 1 ]		6759740	0					
ANR	6760441	MemberAccess	wi . window_type		6759740	0					
ANR	6760442	Identifier	wi		6759740	0					
ANR	6760443	Identifier	window_type		6759740	1					
ANR	6760444	PrimaryExpression	1		6759740	1					
ANR	6760445	Identifier	prev_type		6759740	1					
ANR	6760446	IfStatement	if ( wi . window_type [ 0 ] != EIGHT_SHORT_SEQUENCE )		6759740	12					
ANR	6760447	Condition	wi . window_type [ 0 ] != EIGHT_SHORT_SEQUENCE	229:8:5368:5408	6759740	0	True				
ANR	6760448	EqualityExpression	wi . window_type [ 0 ] != EIGHT_SHORT_SEQUENCE		6759740	0		!=			
ANR	6760449	ArrayIndexing	wi . window_type [ 0 ]		6759740	0					
ANR	6760450	MemberAccess	wi . window_type		6759740	0					
ANR	6760451	Identifier	wi		6759740	0					
ANR	6760452	Identifier	window_type		6759740	1					
ANR	6760453	PrimaryExpression	0		6759740	1					
ANR	6760454	Identifier	EIGHT_SHORT_SEQUENCE		6759740	1					
ANR	6760455	CompoundStatement		227:8:5257:5278	6759740	1					
ANR	6760456	IdentifierDeclStatement	float clipping = 0.0f ;	231:8:5422:5443	6759740	0	True				
ANR	6760457	IdentifierDecl	clipping = 0.0f		6759740	0					
ANR	6760458	IdentifierDeclType	float		6759740	0					
ANR	6760459	Identifier	clipping		6759740	1					
ANR	6760460	AssignmentExpression	clipping = 0.0f		6759740	2		=			
ANR	6760461	Identifier	clipping		6759740	0					
ANR	6760462	PrimaryExpression	0.0f		6759740	1					
ANR	6760463	ExpressionStatement	wi . num_windows = 1	235:8:5456:5475	6759740	1	True				
ANR	6760464	AssignmentExpression	wi . num_windows = 1		6759740	0		=			
ANR	6760465	MemberAccess	wi . num_windows		6759740	0					
ANR	6760466	Identifier	wi		6759740	0					
ANR	6760467	Identifier	num_windows		6759740	1					
ANR	6760468	PrimaryExpression	1		6759740	1					
ANR	6760469	ExpressionStatement	wi . grouping [ 0 ] = 1	237:8:5486:5505	6759740	2	True				
ANR	6760470	AssignmentExpression	wi . grouping [ 0 ] = 1		6759740	0		=			
ANR	6760471	ArrayIndexing	wi . grouping [ 0 ]		6759740	0					
ANR	6760472	MemberAccess	wi . grouping		6759740	0					
ANR	6760473	Identifier	wi		6759740	0					
ANR	6760474	Identifier	grouping		6759740	1					
ANR	6760475	PrimaryExpression	0		6759740	1					
ANR	6760476	PrimaryExpression	1		6759740	1					
ANR	6760477	IfStatement	if ( wi . window_type [ 0 ] == LONG_START_SEQUENCE )		6759740	3					
ANR	6760478	Condition	wi . window_type [ 0 ] == LONG_START_SEQUENCE	239:12:5520:5559	6759740	0	True				
ANR	6760479	EqualityExpression	wi . window_type [ 0 ] == LONG_START_SEQUENCE		6759740	0		==			
ANR	6760480	ArrayIndexing	wi . window_type [ 0 ]		6759740	0					
ANR	6760481	MemberAccess	wi . window_type		6759740	0					
ANR	6760482	Identifier	wi		6759740	0					
ANR	6760483	Identifier	window_type		6759740	1					
ANR	6760484	PrimaryExpression	0		6759740	1					
ANR	6760485	Identifier	LONG_START_SEQUENCE		6759740	1					
ANR	6760486	ExpressionStatement	wi . window_shape = 0	241:12:5575:5594	6759740	1	True				
ANR	6760487	AssignmentExpression	wi . window_shape = 0		6759740	0		=			
ANR	6760488	MemberAccess	wi . window_shape		6759740	0					
ANR	6760489	Identifier	wi		6759740	0					
ANR	6760490	Identifier	window_shape		6759740	1					
ANR	6760491	PrimaryExpression	0		6759740	1					
ANR	6760492	ElseStatement	else		6759740	0					
ANR	6760493	ExpressionStatement	wi . window_shape = 1	245:12:5623:5642	6759740	0	True				
ANR	6760494	AssignmentExpression	wi . window_shape = 1		6759740	0		=			
ANR	6760495	MemberAccess	wi . window_shape		6759740	0					
ANR	6760496	Identifier	wi		6759740	0					
ANR	6760497	Identifier	window_shape		6759740	1					
ANR	6760498	PrimaryExpression	1		6759740	1					
ANR	6760499	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6759740	4					
ANR	6760500	ForInit	i = 0 ;	249:13:5660:5665	6759740	0	True				
ANR	6760501	AssignmentExpression	i = 0		6759740	0		=			
ANR	6760502	Identifier	i		6759740	0					
ANR	6760503	PrimaryExpression	0		6759740	1					
ANR	6760504	Condition	i < 8	249:20:5667:5671	6759740	1	True				
ANR	6760505	RelationalExpression	i < 8		6759740	0		<			
ANR	6760506	Identifier	i		6759740	0					
ANR	6760507	PrimaryExpression	8		6759740	1					
ANR	6760508	PostIncDecOperationExpression	i ++	249:27:5674:5676	6759740	2	True				
ANR	6760509	Identifier	i		6759740	0					
ANR	6760510	IncDec	++		6759740	1					
ANR	6760511	ExpressionStatement	"clipping = FFMAX ( clipping , clippings [ i ] )"	251:12:5692:5732	6759740	3	True				
ANR	6760512	AssignmentExpression	"clipping = FFMAX ( clipping , clippings [ i ] )"		6759740	0		=			
ANR	6760513	Identifier	clipping		6759740	0					
ANR	6760514	CallExpression	"FFMAX ( clipping , clippings [ i ] )"		6759740	1					
ANR	6760515	Callee	FFMAX		6759740	0					
ANR	6760516	Identifier	FFMAX		6759740	0					
ANR	6760517	ArgumentList	clipping		6759740	1					
ANR	6760518	Argument	clipping		6759740	0					
ANR	6760519	Identifier	clipping		6759740	0					
ANR	6760520	Argument	clippings [ i ]		6759740	1					
ANR	6760521	ArrayIndexing	clippings [ i ]		6759740	0					
ANR	6760522	Identifier	clippings		6759740	0					
ANR	6760523	Identifier	i		6759740	1					
ANR	6760524	ExpressionStatement	wi . clipping [ 0 ] = clipping	253:8:5743:5768	6759740	5	True				
ANR	6760525	AssignmentExpression	wi . clipping [ 0 ] = clipping		6759740	0		=			
ANR	6760526	ArrayIndexing	wi . clipping [ 0 ]		6759740	0					
ANR	6760527	MemberAccess	wi . clipping		6759740	0					
ANR	6760528	Identifier	wi		6759740	0					
ANR	6760529	Identifier	clipping		6759740	1					
ANR	6760530	PrimaryExpression	0		6759740	1					
ANR	6760531	Identifier	clipping		6759740	1					
ANR	6760532	ElseStatement	else		6759740	0					
ANR	6760533	CompoundStatement		253:8:5628:5643	6759740	0					
ANR	6760534	IdentifierDeclStatement	int lastgrp = 0 ;	257:8:5793:5808	6759740	0	True				
ANR	6760535	IdentifierDecl	lastgrp = 0		6759740	0					
ANR	6760536	IdentifierDeclType	int		6759740	0					
ANR	6760537	Identifier	lastgrp		6759740	1					
ANR	6760538	AssignmentExpression	lastgrp = 0		6759740	2		=			
ANR	6760539	Identifier	lastgrp		6759740	0					
ANR	6760540	PrimaryExpression	0		6759740	1					
ANR	6760541	ExpressionStatement	wi . num_windows = 8	261:8:5821:5839	6759740	1	True				
ANR	6760542	AssignmentExpression	wi . num_windows = 8		6759740	0		=			
ANR	6760543	MemberAccess	wi . num_windows		6759740	0					
ANR	6760544	Identifier	wi		6759740	0					
ANR	6760545	Identifier	num_windows		6759740	1					
ANR	6760546	PrimaryExpression	8		6759740	1					
ANR	6760547	ExpressionStatement	wi . window_shape = 0	263:8:5850:5869	6759740	2	True				
ANR	6760548	AssignmentExpression	wi . window_shape = 0		6759740	0		=			
ANR	6760549	MemberAccess	wi . window_shape		6759740	0					
ANR	6760550	Identifier	wi		6759740	0					
ANR	6760551	Identifier	window_shape		6759740	1					
ANR	6760552	PrimaryExpression	0		6759740	1					
ANR	6760553	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		6759740	3					
ANR	6760554	ForInit	i = 0 ;	265:13:5885:5890	6759740	0	True				
ANR	6760555	AssignmentExpression	i = 0		6759740	0		=			
ANR	6760556	Identifier	i		6759740	0					
ANR	6760557	PrimaryExpression	0		6759740	1					
ANR	6760558	Condition	i < 8	265:20:5892:5896	6759740	1	True				
ANR	6760559	RelationalExpression	i < 8		6759740	0		<			
ANR	6760560	Identifier	i		6759740	0					
ANR	6760561	PrimaryExpression	8		6759740	1					
ANR	6760562	PostIncDecOperationExpression	i ++	265:27:5899:5901	6759740	2	True				
ANR	6760563	Identifier	i		6759740	0					
ANR	6760564	IncDec	++		6759740	1					
ANR	6760565	CompoundStatement		261:32:5739:5739	6759740	3					
ANR	6760566	IfStatement	if ( ! ( ( pch -> next_grouping >> i ) & 1 ) )		6759740	0					
ANR	6760567	Condition	! ( ( pch -> next_grouping >> i ) & 1 )	267:16:5923:5954	6759740	0	True				
ANR	6760568	UnaryOperationExpression	! ( ( pch -> next_grouping >> i ) & 1 )		6759740	0					
ANR	6760569	UnaryOperator	!		6759740	0					
ANR	6760570	BitAndExpression	( pch -> next_grouping >> i ) & 1		6759740	1		&			
ANR	6760571	ShiftExpression	pch -> next_grouping >> i		6759740	0		>>			
ANR	6760572	PtrMemberAccess	pch -> next_grouping		6759740	0					
ANR	6760573	Identifier	pch		6759740	0					
ANR	6760574	Identifier	next_grouping		6759740	1					
ANR	6760575	Identifier	i		6759740	1					
ANR	6760576	PrimaryExpression	1		6759740	1					
ANR	6760577	ExpressionStatement	lastgrp = i	269:16:5974:5985	6759740	1	True				
ANR	6760578	AssignmentExpression	lastgrp = i		6759740	0		=			
ANR	6760579	Identifier	lastgrp		6759740	0					
ANR	6760580	Identifier	i		6759740	1					
ANR	6760581	ExpressionStatement	wi . grouping [ lastgrp ] ++	271:12:6000:6022	6759740	1	True				
ANR	6760582	PostIncDecOperationExpression	wi . grouping [ lastgrp ] ++		6759740	0					
ANR	6760583	ArrayIndexing	wi . grouping [ lastgrp ]		6759740	0					
ANR	6760584	MemberAccess	wi . grouping		6759740	0					
ANR	6760585	Identifier	wi		6759740	0					
ANR	6760586	Identifier	grouping		6759740	1					
ANR	6760587	Identifier	lastgrp		6759740	1					
ANR	6760588	IncDec	++		6759740	1					
ANR	6760589	ForStatement	for ( i = 0 ; i < 8 ; i += wi . grouping [ i ] )		6759740	4					
ANR	6760590	ForInit	i = 0 ;	277:13:6051:6056	6759740	0	True				
ANR	6760591	AssignmentExpression	i = 0		6759740	0		=			
ANR	6760592	Identifier	i		6759740	0					
ANR	6760593	PrimaryExpression	0		6759740	1					
ANR	6760594	Condition	i < 8	277:20:6058:6062	6759740	1	True				
ANR	6760595	RelationalExpression	i < 8		6759740	0		<			
ANR	6760596	Identifier	i		6759740	0					
ANR	6760597	PrimaryExpression	8		6759740	1					
ANR	6760598	AssignmentExpression	i += wi . grouping [ i ]	277:27:6065:6083	6759740	2	True	+=			
ANR	6760599	Identifier	i		6759740	0					
ANR	6760600	ArrayIndexing	wi . grouping [ i ]		6759740	1					
ANR	6760601	MemberAccess	wi . grouping		6759740	0					
ANR	6760602	Identifier	wi		6759740	0					
ANR	6760603	Identifier	grouping		6759740	1					
ANR	6760604	Identifier	i		6759740	1					
ANR	6760605	CompoundStatement		277:12:5956:5977	6759740	3					
ANR	6760606	IdentifierDeclStatement	int w ;	279:12:6101:6106	6759740	0	True				
ANR	6760607	IdentifierDecl	w		6759740	0					
ANR	6760608	IdentifierDeclType	int		6759740	0					
ANR	6760609	Identifier	w		6759740	1					
ANR	6760610	IdentifierDeclStatement	float clipping = 0.0f ;	281:12:6121:6142	6759740	1	True				
ANR	6760611	IdentifierDecl	clipping = 0.0f		6759740	0					
ANR	6760612	IdentifierDeclType	float		6759740	0					
ANR	6760613	Identifier	clipping		6759740	1					
ANR	6760614	AssignmentExpression	clipping = 0.0f		6759740	2		=			
ANR	6760615	Identifier	clipping		6759740	0					
ANR	6760616	PrimaryExpression	0.0f		6759740	1					
ANR	6760617	ForStatement	for ( w = 0 ; w < wi . grouping [ i ] && ! clipping ; w ++ )		6759740	2					
ANR	6760618	ForInit	w = 0 ;	283:17:6162:6167	6759740	0	True				
ANR	6760619	AssignmentExpression	w = 0		6759740	0		=			
ANR	6760620	Identifier	w		6759740	0					
ANR	6760621	PrimaryExpression	0		6759740	1					
ANR	6760622	Condition	w < wi . grouping [ i ] && ! clipping	283:24:6169:6199	6759740	1	True				
ANR	6760623	AndExpression	w < wi . grouping [ i ] && ! clipping		6759740	0		&&			
ANR	6760624	RelationalExpression	w < wi . grouping [ i ]		6759740	0		<			
ANR	6760625	Identifier	w		6759740	0					
ANR	6760626	ArrayIndexing	wi . grouping [ i ]		6759740	1					
ANR	6760627	MemberAccess	wi . grouping		6759740	0					
ANR	6760628	Identifier	wi		6759740	0					
ANR	6760629	Identifier	grouping		6759740	1					
ANR	6760630	Identifier	i		6759740	1					
ANR	6760631	UnaryOperationExpression	! clipping		6759740	1					
ANR	6760632	UnaryOperator	!		6759740	0					
ANR	6760633	Identifier	clipping		6759740	1					
ANR	6760634	PostIncDecOperationExpression	w ++	283:57:6202:6204	6759740	2	True				
ANR	6760635	Identifier	w		6759740	0					
ANR	6760636	IncDec	++		6759740	1					
ANR	6760637	ExpressionStatement	"clipping = FFMAX ( clipping , clippings [ i + w ] )"	285:16:6224:6266	6759740	3	True				
ANR	6760638	AssignmentExpression	"clipping = FFMAX ( clipping , clippings [ i + w ] )"		6759740	0		=			
ANR	6760639	Identifier	clipping		6759740	0					
ANR	6760640	CallExpression	"FFMAX ( clipping , clippings [ i + w ] )"		6759740	1					
ANR	6760641	Callee	FFMAX		6759740	0					
ANR	6760642	Identifier	FFMAX		6759740	0					
ANR	6760643	ArgumentList	clipping		6759740	1					
ANR	6760644	Argument	clipping		6759740	0					
ANR	6760645	Identifier	clipping		6759740	0					
ANR	6760646	Argument	clippings [ i + w ]		6759740	1					
ANR	6760647	ArrayIndexing	clippings [ i + w ]		6759740	0					
ANR	6760648	Identifier	clippings		6759740	0					
ANR	6760649	AdditiveExpression	i + w		6759740	1		+			
ANR	6760650	Identifier	i		6759740	0					
ANR	6760651	Identifier	w		6759740	1					
ANR	6760652	ExpressionStatement	wi . clipping [ i ] = clipping	287:12:6281:6306	6759740	3	True				
ANR	6760653	AssignmentExpression	wi . clipping [ i ] = clipping		6759740	0		=			
ANR	6760654	ArrayIndexing	wi . clipping [ i ]		6759740	0					
ANR	6760655	MemberAccess	wi . clipping		6759740	0					
ANR	6760656	Identifier	wi		6759740	0					
ANR	6760657	Identifier	clipping		6759740	1					
ANR	6760658	Identifier	i		6759740	1					
ANR	6760659	Identifier	clipping		6759740	1					
ANR	6760660	ForStatement	for ( i = 0 ; i < 9 ; i ++ )		6759740	13					
ANR	6760661	ForInit	i = 0 ;	307:9:6604:6609	6759740	0	True				
ANR	6760662	AssignmentExpression	i = 0		6759740	0		=			
ANR	6760663	Identifier	i		6759740	0					
ANR	6760664	PrimaryExpression	0		6759740	1					
ANR	6760665	Condition	i < 9	307:16:6611:6615	6759740	1	True				
ANR	6760666	RelationalExpression	i < 9		6759740	0		<			
ANR	6760667	Identifier	i		6759740	0					
ANR	6760668	PrimaryExpression	9		6759740	1					
ANR	6760669	PostIncDecOperationExpression	i ++	307:23:6618:6620	6759740	2	True				
ANR	6760670	Identifier	i		6759740	0					
ANR	6760671	IncDec	++		6759740	1					
ANR	6760672	CompoundStatement		303:28:6458:6458	6759740	3					
ANR	6760673	IfStatement	if ( attacks [ i ] )		6759740	0					
ANR	6760674	Condition	attacks [ i ]	309:12:6638:6647	6759740	0	True				
ANR	6760675	ArrayIndexing	attacks [ i ]		6759740	0					
ANR	6760676	Identifier	attacks		6759740	0					
ANR	6760677	Identifier	i		6759740	1					
ANR	6760678	CompoundStatement		305:24:6485:6485	6759740	1					
ANR	6760679	ExpressionStatement	grouping = i	311:12:6665:6677	6759740	0	True				
ANR	6760680	AssignmentExpression	grouping = i		6759740	0		=			
ANR	6760681	Identifier	grouping		6759740	0					
ANR	6760682	Identifier	i		6759740	1					
ANR	6760683	BreakStatement	break ;	313:12:6692:6697	6759740	1	True				
ANR	6760684	ExpressionStatement	pch -> next_grouping = window_grouping [ grouping ]	319:4:6722:6768	6759740	14	True				
ANR	6760685	AssignmentExpression	pch -> next_grouping = window_grouping [ grouping ]		6759740	0		=			
ANR	6760686	PtrMemberAccess	pch -> next_grouping		6759740	0					
ANR	6760687	Identifier	pch		6759740	0					
ANR	6760688	Identifier	next_grouping		6759740	1					
ANR	6760689	ArrayIndexing	window_grouping [ grouping ]		6759740	1					
ANR	6760690	Identifier	window_grouping		6759740	0					
ANR	6760691	Identifier	grouping		6759740	1					
ANR	6760692	ExpressionStatement	pch -> prev_attack = attacks [ 8 ]	323:4:6777:6806	6759740	15	True				
ANR	6760693	AssignmentExpression	pch -> prev_attack = attacks [ 8 ]		6759740	0		=			
ANR	6760694	PtrMemberAccess	pch -> prev_attack		6759740	0					
ANR	6760695	Identifier	pch		6759740	0					
ANR	6760696	Identifier	prev_attack		6759740	1					
ANR	6760697	ArrayIndexing	attacks [ 8 ]		6759740	1					
ANR	6760698	Identifier	attacks		6759740	0					
ANR	6760699	PrimaryExpression	8		6759740	1					
ANR	6760700	ReturnStatement	return wi ;	327:4:6815:6824	6759740	16	True				
ANR	6760701	Identifier	wi		6759740	0					
ANR	6760702	ReturnType	static FFPsyWindowInfo		6759740	1					
ANR	6760703	Identifier	psy_lame_window		6759740	2					
ANR	6760704	ParameterList	"FFPsyContext * ctx , const float * audio , const float * la , int channel , int prev_type"		6759740	3					
ANR	6760705	Parameter	FFPsyContext * ctx	1:39:39:55	6759740	0	True				
ANR	6760706	ParameterType	FFPsyContext *		6759740	0					
ANR	6760707	Identifier	ctx		6759740	1					
ANR	6760708	Parameter	const float * audio	1:58:58:75	6759740	1	True				
ANR	6760709	ParameterType	const float *		6759740	0					
ANR	6760710	Identifier	audio		6759740	1					
ANR	6760711	Parameter	const float * la	3:39:118:132	6759740	2	True				
ANR	6760712	ParameterType	const float *		6759740	0					
ANR	6760713	Identifier	la		6759740	1					
ANR	6760714	Parameter	int channel	3:56:135:145	6759740	3	True				
ANR	6760715	ParameterType	int		6759740	0					
ANR	6760716	Identifier	channel		6759740	1					
ANR	6760717	Parameter	int prev_type	3:69:148:160	6759740	4	True				
ANR	6760718	ParameterType	int		6759740	0					
ANR	6760719	Identifier	prev_type		6759740	1					
ANR	6760720	CFGEntryNode	ENTRY		6759740		True				
ANR	6760721	CFGExitNode	EXIT		6759740		True				
ANR	6760722	Symbol	* w		6759740						
ANR	6760723	Symbol	clipping		6759740						
ANR	6760724	Symbol	pctx		6759740						
ANR	6760725	Symbol	channel		6759740						
ANR	6760726	Symbol	* lastgrp		6759740						
ANR	6760727	Symbol	wi . grouping		6759740						
ANR	6760728	Symbol	* pch -> prev_energy_subshort		6759740						
ANR	6760729	Symbol	PSY_LAME_FIR_LEN		6759740						
ANR	6760730	Symbol	* wi . window_type		6759740						
ANR	6760731	Symbol	wi . window_type		6759740						
ANR	6760732	Symbol	firbuf		6759740						
ANR	6760733	Symbol	PSY_LAME_NUM_SUBBLOCKS		6759740						
ANR	6760734	Symbol	att_sum		6759740						
ANR	6760735	Symbol	attacks		6759740						
ANR	6760736	Symbol	* energy_subshort		6759740						
ANR	6760737	Symbol	* wi . clipping		6759740						
ANR	6760738	Symbol	* AAC_NUM_BLOCKS_SHORT		6759740						
ANR	6760739	Symbol	* wi		6759740						
ANR	6760740	Symbol	AAC_BLOCK_SIZE_SHORT		6759740						
ANR	6760741	Symbol	& wi		6759740						
ANR	6760742	Symbol	prev_type		6759740						
ANR	6760743	Symbol	* energy_short		6759740						
ANR	6760744	Symbol	ctx		6759740						
ANR	6760745	Symbol	* * pch		6759740						
ANR	6760746	Symbol	* attacks		6759740						
ANR	6760747	Symbol	pch -> prev_attack		6759740						
ANR	6760748	Symbol	wbuf		6759740						
ANR	6760749	Symbol	psy_fir_coeffs		6759740						
ANR	6760750	Symbol	grouping		6759740						
ANR	6760751	Symbol	pfe		6759740						
ANR	6760752	Symbol	clippings		6759740						
ANR	6760753	Symbol	pch -> next_grouping		6759740						
ANR	6760754	Symbol	EIGHT_SHORT_SEQUENCE		6759740						
ANR	6760755	Symbol	* PSY_LAME_NUM_SUBBLOCKS		6759740						
ANR	6760756	Symbol	pctx -> ch		6759740						
ANR	6760757	Symbol	wi . window_shape		6759740						
ANR	6760758	Symbol	wi . num_windows		6759740						
ANR	6760759	Symbol	lastgrp		6759740						
ANR	6760760	Symbol	* pch		6759740						
ANR	6760761	Symbol	* pf		6759740						
ANR	6760762	Symbol	hpfsmpl		6759740						
ANR	6760763	Symbol	* pctx		6759740						
ANR	6760764	Symbol	* wi . grouping		6759740						
ANR	6760765	Symbol	fabsf		6759740						
ANR	6760766	Symbol	wi		6759740						
ANR	6760767	Symbol	LONG_START_SEQUENCE		6759740						
ANR	6760768	Symbol	pch		6759740						
ANR	6760769	Symbol	uselongblock		6759740						
ANR	6760770	Symbol	audio		6759740						
ANR	6760771	Symbol	AAC_NUM_BLOCKS_SHORT		6759740						
ANR	6760772	Symbol	energy_short		6759740						
ANR	6760773	Symbol	wi . clipping		6759740						
ANR	6760774	Symbol	* window_grouping		6759740						
ANR	6760775	Symbol	attack_intensity		6759740						
ANR	6760776	Symbol	AAC_BLOCK_SIZE_LONG		6759740						
ANR	6760777	Symbol	max		6759740						
ANR	6760778	Symbol	i		6759740						
ANR	6760779	Symbol	* clippings		6759740						
ANR	6760780	Symbol	pch -> prev_energy_subshort		6759740						
ANR	6760781	Symbol	j		6759740						
ANR	6760782	Symbol	m		6759740						
ANR	6760783	Symbol	* ctx		6759740						
ANR	6760784	Symbol	p		6759740						
ANR	6760785	Symbol	* grouping		6759740						
ANR	6760786	Symbol	* i		6759740						
ANR	6760787	Symbol	* wbuf		6759740						
ANR	6760788	Symbol	* j		6759740						
ANR	6760789	Symbol	la		6759740						
ANR	6760790	Symbol	u		6759740						
ANR	6760791	Symbol	pf		6759740						
ANR	6760792	Symbol	v		6759740						
ANR	6760793	Symbol	pch -> attack_threshold		6759740						
ANR	6760794	Symbol	w		6759740						
ANR	6760795	Symbol	energy_subshort		6759740						
ANR	6760796	Symbol	window_grouping		6759740						
ANR	6760797	Symbol	ctx -> model_priv_data		6759740						
ANR	6760798	Symbol	* attack_intensity		6759740						
ANR	6760799	Symbol	FFMAX		6759740						
