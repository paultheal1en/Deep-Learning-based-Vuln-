command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5883485	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mxf_read_partition_pack_01_1.c								
ANR	5883486	Function	mxf_read_partition_pack	1:0:0:3551							
ANR	5883487	FunctionDef	"mxf_read_partition_pack (void * arg , AVIOContext * pb , int tag , int size , UID uid)"		5883486	0					
ANR	5883488	CompoundStatement		3:0:92:3551	5883486	0					
ANR	5883489	IdentifierDeclStatement	MXFContext * mxf = arg ;	5:4:99:120	5883486	0	True				
ANR	5883490	IdentifierDecl	* mxf = arg		5883486	0					
ANR	5883491	IdentifierDeclType	MXFContext *		5883486	0					
ANR	5883492	Identifier	mxf		5883486	1					
ANR	5883493	AssignmentExpression	* mxf = arg		5883486	2		=			
ANR	5883494	Identifier	arg		5883486	0					
ANR	5883495	Identifier	arg		5883486	1					
ANR	5883496	IdentifierDeclStatement	MXFPartition * partition ;	7:4:127:150	5883486	1	True				
ANR	5883497	IdentifierDecl	* partition		5883486	0					
ANR	5883498	IdentifierDeclType	MXFPartition *		5883486	0					
ANR	5883499	Identifier	partition		5883486	1					
ANR	5883500	IdentifierDeclStatement	UID op ;	9:4:157:163	5883486	2	True				
ANR	5883501	IdentifierDecl	op		5883486	0					
ANR	5883502	IdentifierDeclType	UID		5883486	0					
ANR	5883503	Identifier	op		5883486	1					
ANR	5883504	IdentifierDeclStatement	uint64_t footer_partition ;	11:4:170:195	5883486	3	True				
ANR	5883505	IdentifierDecl	footer_partition		5883486	0					
ANR	5883506	IdentifierDeclType	uint64_t		5883486	0					
ANR	5883507	Identifier	footer_partition		5883486	1					
ANR	5883508	IfStatement	if ( mxf -> partitions_count + 1 >= UINT_MAX / sizeof ( * mxf -> partitions ) )		5883486	4					
ANR	5883509	Condition	mxf -> partitions_count + 1 >= UINT_MAX / sizeof ( * mxf -> partitions )	15:8:208:269	5883486	0	True				
ANR	5883510	RelationalExpression	mxf -> partitions_count + 1 >= UINT_MAX / sizeof ( * mxf -> partitions )		5883486	0		>=			
ANR	5883511	AdditiveExpression	mxf -> partitions_count + 1		5883486	0		+			
ANR	5883512	PtrMemberAccess	mxf -> partitions_count		5883486	0					
ANR	5883513	Identifier	mxf		5883486	0					
ANR	5883514	Identifier	partitions_count		5883486	1					
ANR	5883515	PrimaryExpression	1		5883486	1					
ANR	5883516	MultiplicativeExpression	UINT_MAX / sizeof ( * mxf -> partitions )		5883486	1		/			
ANR	5883517	Identifier	UINT_MAX		5883486	0					
ANR	5883518	SizeofExpression	sizeof ( * mxf -> partitions )		5883486	1					
ANR	5883519	Sizeof	sizeof		5883486	0					
ANR	5883520	UnaryOperationExpression	* mxf -> partitions		5883486	1					
ANR	5883521	UnaryOperator	*		5883486	0					
ANR	5883522	PtrMemberAccess	mxf -> partitions		5883486	1					
ANR	5883523	Identifier	mxf		5883486	0					
ANR	5883524	Identifier	partitions		5883486	1					
ANR	5883525	ReturnStatement	return AVERROR ( ENOMEM ) ;	17:8:281:303	5883486	1	True				
ANR	5883526	CallExpression	AVERROR ( ENOMEM )		5883486	0					
ANR	5883527	Callee	AVERROR		5883486	0					
ANR	5883528	Identifier	AVERROR		5883486	0					
ANR	5883529	ArgumentList	ENOMEM		5883486	1					
ANR	5883530	Argument	ENOMEM		5883486	0					
ANR	5883531	Identifier	ENOMEM		5883486	0					
ANR	5883532	ExpressionStatement	"mxf -> partitions = av_realloc ( mxf -> partitions , ( mxf -> partitions_count + 1 ) * sizeof ( * mxf -> partitions ) )"	21:4:312:413	5883486	5	True				
ANR	5883533	AssignmentExpression	"mxf -> partitions = av_realloc ( mxf -> partitions , ( mxf -> partitions_count + 1 ) * sizeof ( * mxf -> partitions ) )"		5883486	0		=			
ANR	5883534	PtrMemberAccess	mxf -> partitions		5883486	0					
ANR	5883535	Identifier	mxf		5883486	0					
ANR	5883536	Identifier	partitions		5883486	1					
ANR	5883537	CallExpression	"av_realloc ( mxf -> partitions , ( mxf -> partitions_count + 1 ) * sizeof ( * mxf -> partitions ) )"		5883486	1					
ANR	5883538	Callee	av_realloc		5883486	0					
ANR	5883539	Identifier	av_realloc		5883486	0					
ANR	5883540	ArgumentList	mxf -> partitions		5883486	1					
ANR	5883541	Argument	mxf -> partitions		5883486	0					
ANR	5883542	PtrMemberAccess	mxf -> partitions		5883486	0					
ANR	5883543	Identifier	mxf		5883486	0					
ANR	5883544	Identifier	partitions		5883486	1					
ANR	5883545	Argument	( mxf -> partitions_count + 1 ) * sizeof ( * mxf -> partitions )		5883486	1					
ANR	5883546	MultiplicativeExpression	( mxf -> partitions_count + 1 ) * sizeof ( * mxf -> partitions )		5883486	0		*			
ANR	5883547	AdditiveExpression	mxf -> partitions_count + 1		5883486	0		+			
ANR	5883548	PtrMemberAccess	mxf -> partitions_count		5883486	0					
ANR	5883549	Identifier	mxf		5883486	0					
ANR	5883550	Identifier	partitions_count		5883486	1					
ANR	5883551	PrimaryExpression	1		5883486	1					
ANR	5883552	SizeofExpression	sizeof ( * mxf -> partitions )		5883486	1					
ANR	5883553	Sizeof	sizeof		5883486	0					
ANR	5883554	UnaryOperationExpression	* mxf -> partitions		5883486	1					
ANR	5883555	UnaryOperator	*		5883486	0					
ANR	5883556	PtrMemberAccess	mxf -> partitions		5883486	1					
ANR	5883557	Identifier	mxf		5883486	0					
ANR	5883558	Identifier	partitions		5883486	1					
ANR	5883559	IfStatement	if ( ! mxf -> partitions )		5883486	6					
ANR	5883560	Condition	! mxf -> partitions	23:8:424:439	5883486	0	True				
ANR	5883561	UnaryOperationExpression	! mxf -> partitions		5883486	0					
ANR	5883562	UnaryOperator	!		5883486	0					
ANR	5883563	PtrMemberAccess	mxf -> partitions		5883486	1					
ANR	5883564	Identifier	mxf		5883486	0					
ANR	5883565	Identifier	partitions		5883486	1					
ANR	5883566	ReturnStatement	return AVERROR ( ENOMEM ) ;	25:8:451:473	5883486	1	True				
ANR	5883567	CallExpression	AVERROR ( ENOMEM )		5883486	0					
ANR	5883568	Callee	AVERROR		5883486	0					
ANR	5883569	Identifier	AVERROR		5883486	0					
ANR	5883570	ArgumentList	ENOMEM		5883486	1					
ANR	5883571	Argument	ENOMEM		5883486	0					
ANR	5883572	Identifier	ENOMEM		5883486	0					
ANR	5883573	IfStatement	if ( mxf -> parsing_backward )		5883486	7					
ANR	5883574	Condition	mxf -> parsing_backward	29:8:486:506	5883486	0	True				
ANR	5883575	PtrMemberAccess	mxf -> parsing_backward		5883486	0					
ANR	5883576	Identifier	mxf		5883486	0					
ANR	5883577	Identifier	parsing_backward		5883486	1					
ANR	5883578	CompoundStatement		27:31:416:416	5883486	1					
ANR	5883579	ExpressionStatement	"memmove ( & mxf -> partitions [ mxf -> last_forward_partition + 1 ] , & mxf -> partitions [ mxf -> last_forward_partition ] , ( mxf -> partitions_count - mxf -> last_forward_partition ) * sizeof ( * mxf -> partitions ) )"	35:8:650:867	5883486	0	True				
ANR	5883580	CallExpression	"memmove ( & mxf -> partitions [ mxf -> last_forward_partition + 1 ] , & mxf -> partitions [ mxf -> last_forward_partition ] , ( mxf -> partitions_count - mxf -> last_forward_partition ) * sizeof ( * mxf -> partitions ) )"		5883486	0					
ANR	5883581	Callee	memmove		5883486	0					
ANR	5883582	Identifier	memmove		5883486	0					
ANR	5883583	ArgumentList	& mxf -> partitions [ mxf -> last_forward_partition + 1 ]		5883486	1					
ANR	5883584	Argument	& mxf -> partitions [ mxf -> last_forward_partition + 1 ]		5883486	0					
ANR	5883585	UnaryOperationExpression	& mxf -> partitions [ mxf -> last_forward_partition + 1 ]		5883486	0					
ANR	5883586	UnaryOperator	&		5883486	0					
ANR	5883587	ArrayIndexing	mxf -> partitions [ mxf -> last_forward_partition + 1 ]		5883486	1					
ANR	5883588	PtrMemberAccess	mxf -> partitions		5883486	0					
ANR	5883589	Identifier	mxf		5883486	0					
ANR	5883590	Identifier	partitions		5883486	1					
ANR	5883591	AdditiveExpression	mxf -> last_forward_partition + 1		5883486	1		+			
ANR	5883592	PtrMemberAccess	mxf -> last_forward_partition		5883486	0					
ANR	5883593	Identifier	mxf		5883486	0					
ANR	5883594	Identifier	last_forward_partition		5883486	1					
ANR	5883595	PrimaryExpression	1		5883486	1					
ANR	5883596	Argument	& mxf -> partitions [ mxf -> last_forward_partition ]		5883486	1					
ANR	5883597	UnaryOperationExpression	& mxf -> partitions [ mxf -> last_forward_partition ]		5883486	0					
ANR	5883598	UnaryOperator	&		5883486	0					
ANR	5883599	ArrayIndexing	mxf -> partitions [ mxf -> last_forward_partition ]		5883486	1					
ANR	5883600	PtrMemberAccess	mxf -> partitions		5883486	0					
ANR	5883601	Identifier	mxf		5883486	0					
ANR	5883602	Identifier	partitions		5883486	1					
ANR	5883603	PtrMemberAccess	mxf -> last_forward_partition		5883486	1					
ANR	5883604	Identifier	mxf		5883486	0					
ANR	5883605	Identifier	last_forward_partition		5883486	1					
ANR	5883606	Argument	( mxf -> partitions_count - mxf -> last_forward_partition ) * sizeof ( * mxf -> partitions )		5883486	2					
ANR	5883607	MultiplicativeExpression	( mxf -> partitions_count - mxf -> last_forward_partition ) * sizeof ( * mxf -> partitions )		5883486	0		*			
ANR	5883608	AdditiveExpression	mxf -> partitions_count - mxf -> last_forward_partition		5883486	0		-			
ANR	5883609	PtrMemberAccess	mxf -> partitions_count		5883486	0					
ANR	5883610	Identifier	mxf		5883486	0					
ANR	5883611	Identifier	partitions_count		5883486	1					
ANR	5883612	PtrMemberAccess	mxf -> last_forward_partition		5883486	1					
ANR	5883613	Identifier	mxf		5883486	0					
ANR	5883614	Identifier	last_forward_partition		5883486	1					
ANR	5883615	SizeofExpression	sizeof ( * mxf -> partitions )		5883486	1					
ANR	5883616	Sizeof	sizeof		5883486	0					
ANR	5883617	UnaryOperationExpression	* mxf -> partitions		5883486	1					
ANR	5883618	UnaryOperator	*		5883486	0					
ANR	5883619	PtrMemberAccess	mxf -> partitions		5883486	1					
ANR	5883620	Identifier	mxf		5883486	0					
ANR	5883621	Identifier	partitions		5883486	1					
ANR	5883622	ExpressionStatement	partition = mxf -> current_partition = & mxf -> partitions [ mxf -> last_forward_partition ]	41:8:878:960	5883486	1	True				
ANR	5883623	AssignmentExpression	partition = mxf -> current_partition = & mxf -> partitions [ mxf -> last_forward_partition ]		5883486	0		=			
ANR	5883624	Identifier	partition		5883486	0					
ANR	5883625	AssignmentExpression	mxf -> current_partition = & mxf -> partitions [ mxf -> last_forward_partition ]		5883486	1		=			
ANR	5883626	PtrMemberAccess	mxf -> current_partition		5883486	0					
ANR	5883627	Identifier	mxf		5883486	0					
ANR	5883628	Identifier	current_partition		5883486	1					
ANR	5883629	UnaryOperationExpression	& mxf -> partitions [ mxf -> last_forward_partition ]		5883486	1					
ANR	5883630	UnaryOperator	&		5883486	0					
ANR	5883631	ArrayIndexing	mxf -> partitions [ mxf -> last_forward_partition ]		5883486	1					
ANR	5883632	PtrMemberAccess	mxf -> partitions		5883486	0					
ANR	5883633	Identifier	mxf		5883486	0					
ANR	5883634	Identifier	partitions		5883486	1					
ANR	5883635	PtrMemberAccess	mxf -> last_forward_partition		5883486	1					
ANR	5883636	Identifier	mxf		5883486	0					
ANR	5883637	Identifier	last_forward_partition		5883486	1					
ANR	5883638	ElseStatement	else		5883486	0					
ANR	5883639	CompoundStatement		41:11:881:881	5883486	0					
ANR	5883640	ExpressionStatement	mxf -> last_forward_partition ++	45:8:985:1014	5883486	0	True				
ANR	5883641	PostIncDecOperationExpression	mxf -> last_forward_partition ++		5883486	0					
ANR	5883642	PtrMemberAccess	mxf -> last_forward_partition		5883486	0					
ANR	5883643	Identifier	mxf		5883486	0					
ANR	5883644	Identifier	last_forward_partition		5883486	1					
ANR	5883645	IncDec	++		5883486	1					
ANR	5883646	ExpressionStatement	partition = mxf -> current_partition = & mxf -> partitions [ mxf -> partitions_count ]	47:8:1025:1101	5883486	1	True				
ANR	5883647	AssignmentExpression	partition = mxf -> current_partition = & mxf -> partitions [ mxf -> partitions_count ]		5883486	0		=			
ANR	5883648	Identifier	partition		5883486	0					
ANR	5883649	AssignmentExpression	mxf -> current_partition = & mxf -> partitions [ mxf -> partitions_count ]		5883486	1		=			
ANR	5883650	PtrMemberAccess	mxf -> current_partition		5883486	0					
ANR	5883651	Identifier	mxf		5883486	0					
ANR	5883652	Identifier	current_partition		5883486	1					
ANR	5883653	UnaryOperationExpression	& mxf -> partitions [ mxf -> partitions_count ]		5883486	1					
ANR	5883654	UnaryOperator	&		5883486	0					
ANR	5883655	ArrayIndexing	mxf -> partitions [ mxf -> partitions_count ]		5883486	1					
ANR	5883656	PtrMemberAccess	mxf -> partitions		5883486	0					
ANR	5883657	Identifier	mxf		5883486	0					
ANR	5883658	Identifier	partitions		5883486	1					
ANR	5883659	PtrMemberAccess	mxf -> partitions_count		5883486	1					
ANR	5883660	Identifier	mxf		5883486	0					
ANR	5883661	Identifier	partitions_count		5883486	1					
ANR	5883662	ExpressionStatement	"memset ( partition , 0 , sizeof ( * partition ) )"	53:4:1117:1157	5883486	8	True				
ANR	5883663	CallExpression	"memset ( partition , 0 , sizeof ( * partition ) )"		5883486	0					
ANR	5883664	Callee	memset		5883486	0					
ANR	5883665	Identifier	memset		5883486	0					
ANR	5883666	ArgumentList	partition		5883486	1					
ANR	5883667	Argument	partition		5883486	0					
ANR	5883668	Identifier	partition		5883486	0					
ANR	5883669	Argument	0		5883486	1					
ANR	5883670	PrimaryExpression	0		5883486	0					
ANR	5883671	Argument	sizeof ( * partition )		5883486	2					
ANR	5883672	SizeofExpression	sizeof ( * partition )		5883486	0					
ANR	5883673	Sizeof	sizeof		5883486	0					
ANR	5883674	UnaryOperationExpression	* partition		5883486	1					
ANR	5883675	UnaryOperator	*		5883486	0					
ANR	5883676	Identifier	partition		5883486	1					
ANR	5883677	ExpressionStatement	mxf -> partitions_count ++	55:4:1164:1187	5883486	9	True				
ANR	5883678	PostIncDecOperationExpression	mxf -> partitions_count ++		5883486	0					
ANR	5883679	PtrMemberAccess	mxf -> partitions_count		5883486	0					
ANR	5883680	Identifier	mxf		5883486	0					
ANR	5883681	Identifier	partitions_count		5883486	1					
ANR	5883682	IncDec	++		5883486	1					
ANR	5883683	SwitchStatement	switch ( uid [ 13 ] )		5883486	10					
ANR	5883684	Condition	uid [ 13 ]	59:11:1203:1209	5883486	0	True				
ANR	5883685	ArrayIndexing	uid [ 13 ]		5883486	0					
ANR	5883686	Identifier	uid		5883486	0					
ANR	5883687	PrimaryExpression	13		5883486	1					
ANR	5883688	CompoundStatement		57:20:1119:1119	5883486	1					
ANR	5883689	Label	case 2 :	61:4:1219:1225	5883486	0	True				
ANR	5883690	ExpressionStatement	partition -> type = Header	63:8:1236:1260	5883486	1	True				
ANR	5883691	AssignmentExpression	partition -> type = Header		5883486	0		=			
ANR	5883692	PtrMemberAccess	partition -> type		5883486	0					
ANR	5883693	Identifier	partition		5883486	0					
ANR	5883694	Identifier	type		5883486	1					
ANR	5883695	Identifier	Header		5883486	1					
ANR	5883696	BreakStatement	break ;	65:8:1271:1276	5883486	2	True				
ANR	5883697	Label	case 3 :	67:4:1283:1289	5883486	3	True				
ANR	5883698	ExpressionStatement	partition -> type = BodyPartition	69:8:1300:1331	5883486	4	True				
ANR	5883699	AssignmentExpression	partition -> type = BodyPartition		5883486	0		=			
ANR	5883700	PtrMemberAccess	partition -> type		5883486	0					
ANR	5883701	Identifier	partition		5883486	0					
ANR	5883702	Identifier	type		5883486	1					
ANR	5883703	Identifier	BodyPartition		5883486	1					
ANR	5883704	BreakStatement	break ;	71:8:1342:1347	5883486	5	True				
ANR	5883705	Label	case 4 :	73:4:1354:1360	5883486	6	True				
ANR	5883706	ExpressionStatement	partition -> type = Footer	75:8:1371:1395	5883486	7	True				
ANR	5883707	AssignmentExpression	partition -> type = Footer		5883486	0		=			
ANR	5883708	PtrMemberAccess	partition -> type		5883486	0					
ANR	5883709	Identifier	partition		5883486	0					
ANR	5883710	Identifier	type		5883486	1					
ANR	5883711	Identifier	Footer		5883486	1					
ANR	5883712	BreakStatement	break ;	77:8:1406:1411	5883486	8	True				
ANR	5883713	Label	default :	79:4:1418:1425	5883486	9	True				
ANR	5883714	Identifier	default		5883486	0					
ANR	5883715	ExpressionStatement	"av_log ( mxf -> fc , AV_LOG_ERROR , ""unknown partition type %i\\n"" , uid [ 13 ] )"	81:8:1436:1505	5883486	10	True				
ANR	5883716	CallExpression	"av_log ( mxf -> fc , AV_LOG_ERROR , ""unknown partition type %i\\n"" , uid [ 13 ] )"		5883486	0					
ANR	5883717	Callee	av_log		5883486	0					
ANR	5883718	Identifier	av_log		5883486	0					
ANR	5883719	ArgumentList	mxf -> fc		5883486	1					
ANR	5883720	Argument	mxf -> fc		5883486	0					
ANR	5883721	PtrMemberAccess	mxf -> fc		5883486	0					
ANR	5883722	Identifier	mxf		5883486	0					
ANR	5883723	Identifier	fc		5883486	1					
ANR	5883724	Argument	AV_LOG_ERROR		5883486	1					
ANR	5883725	Identifier	AV_LOG_ERROR		5883486	0					
ANR	5883726	Argument	"""unknown partition type %i\\n"""		5883486	2					
ANR	5883727	PrimaryExpression	"""unknown partition type %i\\n"""		5883486	0					
ANR	5883728	Argument	uid [ 13 ]		5883486	3					
ANR	5883729	ArrayIndexing	uid [ 13 ]		5883486	0					
ANR	5883730	Identifier	uid		5883486	0					
ANR	5883731	PrimaryExpression	13		5883486	1					
ANR	5883732	ReturnStatement	return AVERROR_INVALIDDATA ;	83:8:1516:1542	5883486	11	True				
ANR	5883733	Identifier	AVERROR_INVALIDDATA		5883486	0					
ANR	5883734	ExpressionStatement	partition -> closed = partition -> type == Footer || ! ( uid [ 14 ] & 1 )	91:4:1646:1709	5883486	11	True				
ANR	5883735	AssignmentExpression	partition -> closed = partition -> type == Footer || ! ( uid [ 14 ] & 1 )		5883486	0		=			
ANR	5883736	PtrMemberAccess	partition -> closed		5883486	0					
ANR	5883737	Identifier	partition		5883486	0					
ANR	5883738	Identifier	closed		5883486	1					
ANR	5883739	OrExpression	partition -> type == Footer || ! ( uid [ 14 ] & 1 )		5883486	1		||			
ANR	5883740	EqualityExpression	partition -> type == Footer		5883486	0		==			
ANR	5883741	PtrMemberAccess	partition -> type		5883486	0					
ANR	5883742	Identifier	partition		5883486	0					
ANR	5883743	Identifier	type		5883486	1					
ANR	5883744	Identifier	Footer		5883486	1					
ANR	5883745	UnaryOperationExpression	! ( uid [ 14 ] & 1 )		5883486	1					
ANR	5883746	UnaryOperator	!		5883486	0					
ANR	5883747	BitAndExpression	uid [ 14 ] & 1		5883486	1		&			
ANR	5883748	ArrayIndexing	uid [ 14 ]		5883486	0					
ANR	5883749	Identifier	uid		5883486	0					
ANR	5883750	PrimaryExpression	14		5883486	1					
ANR	5883751	PrimaryExpression	1		5883486	1					
ANR	5883752	ExpressionStatement	partition -> complete = uid [ 14 ] > 2	93:4:1716:1749	5883486	12	True				
ANR	5883753	AssignmentExpression	partition -> complete = uid [ 14 ] > 2		5883486	0		=			
ANR	5883754	PtrMemberAccess	partition -> complete		5883486	0					
ANR	5883755	Identifier	partition		5883486	0					
ANR	5883756	Identifier	complete		5883486	1					
ANR	5883757	RelationalExpression	uid [ 14 ] > 2		5883486	1		>			
ANR	5883758	ArrayIndexing	uid [ 14 ]		5883486	0					
ANR	5883759	Identifier	uid		5883486	0					
ANR	5883760	PrimaryExpression	14		5883486	1					
ANR	5883761	PrimaryExpression	2		5883486	1					
ANR	5883762	ExpressionStatement	"avio_skip ( pb , 8 )"	95:4:1756:1772	5883486	13	True				
ANR	5883763	CallExpression	"avio_skip ( pb , 8 )"		5883486	0					
ANR	5883764	Callee	avio_skip		5883486	0					
ANR	5883765	Identifier	avio_skip		5883486	0					
ANR	5883766	ArgumentList	pb		5883486	1					
ANR	5883767	Argument	pb		5883486	0					
ANR	5883768	Identifier	pb		5883486	0					
ANR	5883769	Argument	8		5883486	1					
ANR	5883770	PrimaryExpression	8		5883486	0					
ANR	5883771	ExpressionStatement	partition -> this_partition = avio_rb64 ( pb )	97:4:1779:1820	5883486	14	True				
ANR	5883772	AssignmentExpression	partition -> this_partition = avio_rb64 ( pb )		5883486	0		=			
ANR	5883773	PtrMemberAccess	partition -> this_partition		5883486	0					
ANR	5883774	Identifier	partition		5883486	0					
ANR	5883775	Identifier	this_partition		5883486	1					
ANR	5883776	CallExpression	avio_rb64 ( pb )		5883486	1					
ANR	5883777	Callee	avio_rb64		5883486	0					
ANR	5883778	Identifier	avio_rb64		5883486	0					
ANR	5883779	ArgumentList	pb		5883486	1					
ANR	5883780	Argument	pb		5883486	0					
ANR	5883781	Identifier	pb		5883486	0					
ANR	5883782	ExpressionStatement	partition -> previous_partition = avio_rb64 ( pb )	99:4:1827:1872	5883486	15	True				
ANR	5883783	AssignmentExpression	partition -> previous_partition = avio_rb64 ( pb )		5883486	0		=			
ANR	5883784	PtrMemberAccess	partition -> previous_partition		5883486	0					
ANR	5883785	Identifier	partition		5883486	0					
ANR	5883786	Identifier	previous_partition		5883486	1					
ANR	5883787	CallExpression	avio_rb64 ( pb )		5883486	1					
ANR	5883788	Callee	avio_rb64		5883486	0					
ANR	5883789	Identifier	avio_rb64		5883486	0					
ANR	5883790	ArgumentList	pb		5883486	1					
ANR	5883791	Argument	pb		5883486	0					
ANR	5883792	Identifier	pb		5883486	0					
ANR	5883793	ExpressionStatement	footer_partition = avio_rb64 ( pb )	101:4:1879:1911	5883486	16	True				
ANR	5883794	AssignmentExpression	footer_partition = avio_rb64 ( pb )		5883486	0		=			
ANR	5883795	Identifier	footer_partition		5883486	0					
ANR	5883796	CallExpression	avio_rb64 ( pb )		5883486	1					
ANR	5883797	Callee	avio_rb64		5883486	0					
ANR	5883798	Identifier	avio_rb64		5883486	0					
ANR	5883799	ArgumentList	pb		5883486	1					
ANR	5883800	Argument	pb		5883486	0					
ANR	5883801	Identifier	pb		5883486	0					
ANR	5883802	ExpressionStatement	"avio_skip ( pb , 16 )"	103:4:1918:1935	5883486	17	True				
ANR	5883803	CallExpression	"avio_skip ( pb , 16 )"		5883486	0					
ANR	5883804	Callee	avio_skip		5883486	0					
ANR	5883805	Identifier	avio_skip		5883486	0					
ANR	5883806	ArgumentList	pb		5883486	1					
ANR	5883807	Argument	pb		5883486	0					
ANR	5883808	Identifier	pb		5883486	0					
ANR	5883809	Argument	16		5883486	1					
ANR	5883810	PrimaryExpression	16		5883486	0					
ANR	5883811	ExpressionStatement	partition -> index_sid = avio_rb32 ( pb )	105:4:1942:1978	5883486	18	True				
ANR	5883812	AssignmentExpression	partition -> index_sid = avio_rb32 ( pb )		5883486	0		=			
ANR	5883813	PtrMemberAccess	partition -> index_sid		5883486	0					
ANR	5883814	Identifier	partition		5883486	0					
ANR	5883815	Identifier	index_sid		5883486	1					
ANR	5883816	CallExpression	avio_rb32 ( pb )		5883486	1					
ANR	5883817	Callee	avio_rb32		5883486	0					
ANR	5883818	Identifier	avio_rb32		5883486	0					
ANR	5883819	ArgumentList	pb		5883486	1					
ANR	5883820	Argument	pb		5883486	0					
ANR	5883821	Identifier	pb		5883486	0					
ANR	5883822	ExpressionStatement	"avio_skip ( pb , 8 )"	107:4:1985:2001	5883486	19	True				
ANR	5883823	CallExpression	"avio_skip ( pb , 8 )"		5883486	0					
ANR	5883824	Callee	avio_skip		5883486	0					
ANR	5883825	Identifier	avio_skip		5883486	0					
ANR	5883826	ArgumentList	pb		5883486	1					
ANR	5883827	Argument	pb		5883486	0					
ANR	5883828	Identifier	pb		5883486	0					
ANR	5883829	Argument	8		5883486	1					
ANR	5883830	PrimaryExpression	8		5883486	0					
ANR	5883831	ExpressionStatement	partition -> body_sid = avio_rb32 ( pb )	109:4:2008:2043	5883486	20	True				
ANR	5883832	AssignmentExpression	partition -> body_sid = avio_rb32 ( pb )		5883486	0		=			
ANR	5883833	PtrMemberAccess	partition -> body_sid		5883486	0					
ANR	5883834	Identifier	partition		5883486	0					
ANR	5883835	Identifier	body_sid		5883486	1					
ANR	5883836	CallExpression	avio_rb32 ( pb )		5883486	1					
ANR	5883837	Callee	avio_rb32		5883486	0					
ANR	5883838	Identifier	avio_rb32		5883486	0					
ANR	5883839	ArgumentList	pb		5883486	1					
ANR	5883840	Argument	pb		5883486	0					
ANR	5883841	Identifier	pb		5883486	0					
ANR	5883842	ExpressionStatement	"avio_read ( pb , op , sizeof ( UID ) )"	111:4:2050:2080	5883486	21	True				
ANR	5883843	CallExpression	"avio_read ( pb , op , sizeof ( UID ) )"		5883486	0					
ANR	5883844	Callee	avio_read		5883486	0					
ANR	5883845	Identifier	avio_read		5883486	0					
ANR	5883846	ArgumentList	pb		5883486	1					
ANR	5883847	Argument	pb		5883486	0					
ANR	5883848	Identifier	pb		5883486	0					
ANR	5883849	Argument	op		5883486	1					
ANR	5883850	Identifier	op		5883486	0					
ANR	5883851	Argument	sizeof ( UID )		5883486	2					
ANR	5883852	SizeofExpression	sizeof ( UID )		5883486	0					
ANR	5883853	Sizeof	sizeof		5883486	0					
ANR	5883854	SizeofOperand	UID		5883486	1					
ANR	5883855	IfStatement	if ( footer_partition )		5883486	22					
ANR	5883856	Condition	footer_partition	117:8:2164:2179	5883486	0	True				
ANR	5883857	Identifier	footer_partition		5883486	0					
ANR	5883858	CompoundStatement		115:26:2089:2089	5883486	1					
ANR	5883859	IfStatement	if ( mxf -> footer_partition && mxf -> footer_partition != footer_partition )		5883486	0					
ANR	5883860	Condition	mxf -> footer_partition && mxf -> footer_partition != footer_partition	119:12:2197:2262	5883486	0	True				
ANR	5883861	AndExpression	mxf -> footer_partition && mxf -> footer_partition != footer_partition		5883486	0		&&			
ANR	5883862	PtrMemberAccess	mxf -> footer_partition		5883486	0					
ANR	5883863	Identifier	mxf		5883486	0					
ANR	5883864	Identifier	footer_partition		5883486	1					
ANR	5883865	EqualityExpression	mxf -> footer_partition != footer_partition		5883486	1		!=			
ANR	5883866	PtrMemberAccess	mxf -> footer_partition		5883486	0					
ANR	5883867	Identifier	mxf		5883486	0					
ANR	5883868	Identifier	footer_partition		5883486	1					
ANR	5883869	Identifier	footer_partition		5883486	1					
ANR	5883870	CompoundStatement		117:80:2172:2172	5883486	1					
ANR	5883871	ExpressionStatement	"av_log ( mxf -> fc , AV_LOG_ERROR , ""inconsistent FooterPartition value: %li != %li\\n"" , mxf -> footer_partition , footer_partition )"	121:12:2280:2422	5883486	0	True				
ANR	5883872	CallExpression	"av_log ( mxf -> fc , AV_LOG_ERROR , ""inconsistent FooterPartition value: %li != %li\\n"" , mxf -> footer_partition , footer_partition )"		5883486	0					
ANR	5883873	Callee	av_log		5883486	0					
ANR	5883874	Identifier	av_log		5883486	0					
ANR	5883875	ArgumentList	mxf -> fc		5883486	1					
ANR	5883876	Argument	mxf -> fc		5883486	0					
ANR	5883877	PtrMemberAccess	mxf -> fc		5883486	0					
ANR	5883878	Identifier	mxf		5883486	0					
ANR	5883879	Identifier	fc		5883486	1					
ANR	5883880	Argument	AV_LOG_ERROR		5883486	1					
ANR	5883881	Identifier	AV_LOG_ERROR		5883486	0					
ANR	5883882	Argument	"""inconsistent FooterPartition value: %li != %li\\n"""		5883486	2					
ANR	5883883	PrimaryExpression	"""inconsistent FooterPartition value: %li != %li\\n"""		5883486	0					
ANR	5883884	Argument	mxf -> footer_partition		5883486	3					
ANR	5883885	PtrMemberAccess	mxf -> footer_partition		5883486	0					
ANR	5883886	Identifier	mxf		5883486	0					
ANR	5883887	Identifier	footer_partition		5883486	1					
ANR	5883888	Argument	footer_partition		5883486	4					
ANR	5883889	Identifier	footer_partition		5883486	0					
ANR	5883890	ElseStatement	else		5883486	0					
ANR	5883891	CompoundStatement		123:15:2347:2347	5883486	0					
ANR	5883892	ExpressionStatement	mxf -> footer_partition = footer_partition	127:12:2455:2495	5883486	0	True				
ANR	5883893	AssignmentExpression	mxf -> footer_partition = footer_partition		5883486	0		=			
ANR	5883894	PtrMemberAccess	mxf -> footer_partition		5883486	0					
ANR	5883895	Identifier	mxf		5883486	0					
ANR	5883896	Identifier	footer_partition		5883486	1					
ANR	5883897	Identifier	footer_partition		5883486	1					
ANR	5883898	Statement	av_dlog	135:4:2522:2528	5883486	23	True				
ANR	5883899	Statement	(	135:11:2529:2529	5883486	24	True				
ANR	5883900	Statement	mxf	135:12:2530:2532	5883486	25	True				
ANR	5883901	Statement	->	135:15:2533:2534	5883486	26	True				
ANR	5883902	Statement	fc	135:17:2535:2536	5883486	27	True				
ANR	5883903	Statement	","	135:19:2537:2537	5883486	28	True				
ANR	5883904	Statement	"""PartitionPack: ThisPartition = 0x%lx, PreviousPartition = 0x%lx, """	135:21:2539:2605	5883486	29	True				
ANR	5883905	Statement	"""FooterPartition = 0x%lx, IndexSID = %i, BodySID = %i\\n"""	137:12:2620:2675	5883486	30	True				
ANR	5883906	Statement	","	137:68:2676:2676	5883486	31	True				
ANR	5883907	Statement	partition	139:12:2691:2699	5883486	32	True				
ANR	5883908	Statement	->	139:21:2700:2701	5883486	33	True				
ANR	5883909	Statement	this_partition	139:23:2702:2715	5883486	34	True				
ANR	5883910	Statement	","	139:37:2716:2716	5883486	35	True				
ANR	5883911	Statement	partition	141:12:2731:2739	5883486	36	True				
ANR	5883912	Statement	->	141:21:2740:2741	5883486	37	True				
ANR	5883913	Statement	previous_partition	141:23:2742:2759	5883486	38	True				
ANR	5883914	Statement	","	141:41:2760:2760	5883486	39	True				
ANR	5883915	Statement	footer_partition	141:43:2762:2777	5883486	40	True				
ANR	5883916	Statement	","	141:59:2778:2778	5883486	41	True				
ANR	5883917	Statement	partition	143:12:2793:2801	5883486	42	True				
ANR	5883918	Statement	->	143:21:2802:2803	5883486	43	True				
ANR	5883919	Statement	index_sid	143:23:2804:2812	5883486	44	True				
ANR	5883920	Statement	","	143:32:2813:2813	5883486	45	True				
ANR	5883921	Statement	partition	143:34:2815:2823	5883486	46	True				
ANR	5883922	Statement	->	143:43:2824:2825	5883486	47	True				
ANR	5883923	Statement	body_sid	143:45:2826:2833	5883486	48	True				
ANR	5883924	Statement	)	143:53:2834:2834	5883486	49	True				
ANR	5883925	ExpressionStatement		143:54:2835:2835	5883486	50	True				
ANR	5883926	IfStatement	if ( op [ 12 ] == 1 && op [ 13 ] == 1 )		5883486	51					
ANR	5883927	Condition	op [ 12 ] == 1 && op [ 13 ] == 1	147:13:2853:2878	5883486	0	True				
ANR	5883928	AndExpression	op [ 12 ] == 1 && op [ 13 ] == 1		5883486	0		&&			
ANR	5883929	EqualityExpression	op [ 12 ] == 1		5883486	0		==			
ANR	5883930	ArrayIndexing	op [ 12 ]		5883486	0					
ANR	5883931	Identifier	op		5883486	0					
ANR	5883932	PrimaryExpression	12		5883486	1					
ANR	5883933	PrimaryExpression	1		5883486	1					
ANR	5883934	EqualityExpression	op [ 13 ] == 1		5883486	1		==			
ANR	5883935	ArrayIndexing	op [ 13 ]		5883486	0					
ANR	5883936	Identifier	op		5883486	0					
ANR	5883937	PrimaryExpression	13		5883486	1					
ANR	5883938	PrimaryExpression	1		5883486	1					
ANR	5883939	ExpressionStatement	mxf -> op = OP1a	147:41:2881:2895	5883486	1	True				
ANR	5883940	AssignmentExpression	mxf -> op = OP1a		5883486	0		=			
ANR	5883941	PtrMemberAccess	mxf -> op		5883486	0					
ANR	5883942	Identifier	mxf		5883486	0					
ANR	5883943	Identifier	op		5883486	1					
ANR	5883944	Identifier	OP1a		5883486	1					
ANR	5883945	ElseStatement	else		5883486	0					
ANR	5883946	IfStatement	if ( op [ 12 ] == 1 && op [ 13 ] == 2 )		5883486	0					
ANR	5883947	Condition	op [ 12 ] == 1 && op [ 13 ] == 2	149:13:2911:2936	5883486	0	True				
ANR	5883948	AndExpression	op [ 12 ] == 1 && op [ 13 ] == 2		5883486	0		&&			
ANR	5883949	EqualityExpression	op [ 12 ] == 1		5883486	0		==			
ANR	5883950	ArrayIndexing	op [ 12 ]		5883486	0					
ANR	5883951	Identifier	op		5883486	0					
ANR	5883952	PrimaryExpression	12		5883486	1					
ANR	5883953	PrimaryExpression	1		5883486	1					
ANR	5883954	EqualityExpression	op [ 13 ] == 2		5883486	1		==			
ANR	5883955	ArrayIndexing	op [ 13 ]		5883486	0					
ANR	5883956	Identifier	op		5883486	0					
ANR	5883957	PrimaryExpression	13		5883486	1					
ANR	5883958	PrimaryExpression	2		5883486	1					
ANR	5883959	ExpressionStatement	mxf -> op = OP1b	149:41:2939:2953	5883486	1	True				
ANR	5883960	AssignmentExpression	mxf -> op = OP1b		5883486	0		=			
ANR	5883961	PtrMemberAccess	mxf -> op		5883486	0					
ANR	5883962	Identifier	mxf		5883486	0					
ANR	5883963	Identifier	op		5883486	1					
ANR	5883964	Identifier	OP1b		5883486	1					
ANR	5883965	ElseStatement	else		5883486	0					
ANR	5883966	IfStatement	if ( op [ 12 ] == 1 && op [ 13 ] == 3 )		5883486	0					
ANR	5883967	Condition	op [ 12 ] == 1 && op [ 13 ] == 3	151:13:2969:2994	5883486	0	True				
ANR	5883968	AndExpression	op [ 12 ] == 1 && op [ 13 ] == 3		5883486	0		&&			
ANR	5883969	EqualityExpression	op [ 12 ] == 1		5883486	0		==			
ANR	5883970	ArrayIndexing	op [ 12 ]		5883486	0					
ANR	5883971	Identifier	op		5883486	0					
ANR	5883972	PrimaryExpression	12		5883486	1					
ANR	5883973	PrimaryExpression	1		5883486	1					
ANR	5883974	EqualityExpression	op [ 13 ] == 3		5883486	1		==			
ANR	5883975	ArrayIndexing	op [ 13 ]		5883486	0					
ANR	5883976	Identifier	op		5883486	0					
ANR	5883977	PrimaryExpression	13		5883486	1					
ANR	5883978	PrimaryExpression	3		5883486	1					
ANR	5883979	ExpressionStatement	mxf -> op = OP1c	151:41:2997:3011	5883486	1	True				
ANR	5883980	AssignmentExpression	mxf -> op = OP1c		5883486	0		=			
ANR	5883981	PtrMemberAccess	mxf -> op		5883486	0					
ANR	5883982	Identifier	mxf		5883486	0					
ANR	5883983	Identifier	op		5883486	1					
ANR	5883984	Identifier	OP1c		5883486	1					
ANR	5883985	ElseStatement	else		5883486	0					
ANR	5883986	IfStatement	if ( op [ 12 ] == 2 && op [ 13 ] == 1 )		5883486	0					
ANR	5883987	Condition	op [ 12 ] == 2 && op [ 13 ] == 1	153:13:3027:3052	5883486	0	True				
ANR	5883988	AndExpression	op [ 12 ] == 2 && op [ 13 ] == 1		5883486	0		&&			
ANR	5883989	EqualityExpression	op [ 12 ] == 2		5883486	0		==			
ANR	5883990	ArrayIndexing	op [ 12 ]		5883486	0					
ANR	5883991	Identifier	op		5883486	0					
ANR	5883992	PrimaryExpression	12		5883486	1					
ANR	5883993	PrimaryExpression	2		5883486	1					
ANR	5883994	EqualityExpression	op [ 13 ] == 1		5883486	1		==			
ANR	5883995	ArrayIndexing	op [ 13 ]		5883486	0					
ANR	5883996	Identifier	op		5883486	0					
ANR	5883997	PrimaryExpression	13		5883486	1					
ANR	5883998	PrimaryExpression	1		5883486	1					
ANR	5883999	ExpressionStatement	mxf -> op = OP2a	153:41:3055:3069	5883486	1	True				
ANR	5884000	AssignmentExpression	mxf -> op = OP2a		5883486	0		=			
ANR	5884001	PtrMemberAccess	mxf -> op		5883486	0					
ANR	5884002	Identifier	mxf		5883486	0					
ANR	5884003	Identifier	op		5883486	1					
ANR	5884004	Identifier	OP2a		5883486	1					
ANR	5884005	ElseStatement	else		5883486	0					
ANR	5884006	IfStatement	if ( op [ 12 ] == 2 && op [ 13 ] == 2 )		5883486	0					
ANR	5884007	Condition	op [ 12 ] == 2 && op [ 13 ] == 2	155:13:3085:3110	5883486	0	True				
ANR	5884008	AndExpression	op [ 12 ] == 2 && op [ 13 ] == 2		5883486	0		&&			
ANR	5884009	EqualityExpression	op [ 12 ] == 2		5883486	0		==			
ANR	5884010	ArrayIndexing	op [ 12 ]		5883486	0					
ANR	5884011	Identifier	op		5883486	0					
ANR	5884012	PrimaryExpression	12		5883486	1					
ANR	5884013	PrimaryExpression	2		5883486	1					
ANR	5884014	EqualityExpression	op [ 13 ] == 2		5883486	1		==			
ANR	5884015	ArrayIndexing	op [ 13 ]		5883486	0					
ANR	5884016	Identifier	op		5883486	0					
ANR	5884017	PrimaryExpression	13		5883486	1					
ANR	5884018	PrimaryExpression	2		5883486	1					
ANR	5884019	ExpressionStatement	mxf -> op = OP2b	155:41:3113:3127	5883486	1	True				
ANR	5884020	AssignmentExpression	mxf -> op = OP2b		5883486	0		=			
ANR	5884021	PtrMemberAccess	mxf -> op		5883486	0					
ANR	5884022	Identifier	mxf		5883486	0					
ANR	5884023	Identifier	op		5883486	1					
ANR	5884024	Identifier	OP2b		5883486	1					
ANR	5884025	ElseStatement	else		5883486	0					
ANR	5884026	IfStatement	if ( op [ 12 ] == 2 && op [ 13 ] == 3 )		5883486	0					
ANR	5884027	Condition	op [ 12 ] == 2 && op [ 13 ] == 3	157:13:3143:3168	5883486	0	True				
ANR	5884028	AndExpression	op [ 12 ] == 2 && op [ 13 ] == 3		5883486	0		&&			
ANR	5884029	EqualityExpression	op [ 12 ] == 2		5883486	0		==			
ANR	5884030	ArrayIndexing	op [ 12 ]		5883486	0					
ANR	5884031	Identifier	op		5883486	0					
ANR	5884032	PrimaryExpression	12		5883486	1					
ANR	5884033	PrimaryExpression	2		5883486	1					
ANR	5884034	EqualityExpression	op [ 13 ] == 3		5883486	1		==			
ANR	5884035	ArrayIndexing	op [ 13 ]		5883486	0					
ANR	5884036	Identifier	op		5883486	0					
ANR	5884037	PrimaryExpression	13		5883486	1					
ANR	5884038	PrimaryExpression	3		5883486	1					
ANR	5884039	ExpressionStatement	mxf -> op = OP2c	157:41:3171:3185	5883486	1	True				
ANR	5884040	AssignmentExpression	mxf -> op = OP2c		5883486	0		=			
ANR	5884041	PtrMemberAccess	mxf -> op		5883486	0					
ANR	5884042	Identifier	mxf		5883486	0					
ANR	5884043	Identifier	op		5883486	1					
ANR	5884044	Identifier	OP2c		5883486	1					
ANR	5884045	ElseStatement	else		5883486	0					
ANR	5884046	IfStatement	if ( op [ 12 ] == 3 && op [ 13 ] == 1 )		5883486	0					
ANR	5884047	Condition	op [ 12 ] == 3 && op [ 13 ] == 1	159:13:3201:3226	5883486	0	True				
ANR	5884048	AndExpression	op [ 12 ] == 3 && op [ 13 ] == 1		5883486	0		&&			
ANR	5884049	EqualityExpression	op [ 12 ] == 3		5883486	0		==			
ANR	5884050	ArrayIndexing	op [ 12 ]		5883486	0					
ANR	5884051	Identifier	op		5883486	0					
ANR	5884052	PrimaryExpression	12		5883486	1					
ANR	5884053	PrimaryExpression	3		5883486	1					
ANR	5884054	EqualityExpression	op [ 13 ] == 1		5883486	1		==			
ANR	5884055	ArrayIndexing	op [ 13 ]		5883486	0					
ANR	5884056	Identifier	op		5883486	0					
ANR	5884057	PrimaryExpression	13		5883486	1					
ANR	5884058	PrimaryExpression	1		5883486	1					
ANR	5884059	ExpressionStatement	mxf -> op = OP3a	159:41:3229:3243	5883486	1	True				
ANR	5884060	AssignmentExpression	mxf -> op = OP3a		5883486	0		=			
ANR	5884061	PtrMemberAccess	mxf -> op		5883486	0					
ANR	5884062	Identifier	mxf		5883486	0					
ANR	5884063	Identifier	op		5883486	1					
ANR	5884064	Identifier	OP3a		5883486	1					
ANR	5884065	ElseStatement	else		5883486	0					
ANR	5884066	IfStatement	if ( op [ 12 ] == 3 && op [ 13 ] == 2 )		5883486	0					
ANR	5884067	Condition	op [ 12 ] == 3 && op [ 13 ] == 2	161:13:3259:3284	5883486	0	True				
ANR	5884068	AndExpression	op [ 12 ] == 3 && op [ 13 ] == 2		5883486	0		&&			
ANR	5884069	EqualityExpression	op [ 12 ] == 3		5883486	0		==			
ANR	5884070	ArrayIndexing	op [ 12 ]		5883486	0					
ANR	5884071	Identifier	op		5883486	0					
ANR	5884072	PrimaryExpression	12		5883486	1					
ANR	5884073	PrimaryExpression	3		5883486	1					
ANR	5884074	EqualityExpression	op [ 13 ] == 2		5883486	1		==			
ANR	5884075	ArrayIndexing	op [ 13 ]		5883486	0					
ANR	5884076	Identifier	op		5883486	0					
ANR	5884077	PrimaryExpression	13		5883486	1					
ANR	5884078	PrimaryExpression	2		5883486	1					
ANR	5884079	ExpressionStatement	mxf -> op = OP3b	161:41:3287:3301	5883486	1	True				
ANR	5884080	AssignmentExpression	mxf -> op = OP3b		5883486	0		=			
ANR	5884081	PtrMemberAccess	mxf -> op		5883486	0					
ANR	5884082	Identifier	mxf		5883486	0					
ANR	5884083	Identifier	op		5883486	1					
ANR	5884084	Identifier	OP3b		5883486	1					
ANR	5884085	ElseStatement	else		5883486	0					
ANR	5884086	IfStatement	if ( op [ 12 ] == 3 && op [ 13 ] == 3 )		5883486	0					
ANR	5884087	Condition	op [ 12 ] == 3 && op [ 13 ] == 3	163:13:3317:3342	5883486	0	True				
ANR	5884088	AndExpression	op [ 12 ] == 3 && op [ 13 ] == 3		5883486	0		&&			
ANR	5884089	EqualityExpression	op [ 12 ] == 3		5883486	0		==			
ANR	5884090	ArrayIndexing	op [ 12 ]		5883486	0					
ANR	5884091	Identifier	op		5883486	0					
ANR	5884092	PrimaryExpression	12		5883486	1					
ANR	5884093	PrimaryExpression	3		5883486	1					
ANR	5884094	EqualityExpression	op [ 13 ] == 3		5883486	1		==			
ANR	5884095	ArrayIndexing	op [ 13 ]		5883486	0					
ANR	5884096	Identifier	op		5883486	0					
ANR	5884097	PrimaryExpression	13		5883486	1					
ANR	5884098	PrimaryExpression	3		5883486	1					
ANR	5884099	ExpressionStatement	mxf -> op = OP3c	163:41:3345:3359	5883486	1	True				
ANR	5884100	AssignmentExpression	mxf -> op = OP3c		5883486	0		=			
ANR	5884101	PtrMemberAccess	mxf -> op		5883486	0					
ANR	5884102	Identifier	mxf		5883486	0					
ANR	5884103	Identifier	op		5883486	1					
ANR	5884104	Identifier	OP3c		5883486	1					
ANR	5884105	ElseStatement	else		5883486	0					
ANR	5884106	IfStatement	if ( op [ 12 ] == 0x10 )		5883486	0					
ANR	5884107	Condition	op [ 12 ] == 0x10	165:13:3375:3388	5883486	0	True				
ANR	5884108	EqualityExpression	op [ 12 ] == 0x10		5883486	0		==			
ANR	5884109	ArrayIndexing	op [ 12 ]		5883486	0					
ANR	5884110	Identifier	op		5883486	0					
ANR	5884111	PrimaryExpression	12		5883486	1					
ANR	5884112	PrimaryExpression	0x10		5883486	1					
ANR	5884113	ExpressionStatement	mxf -> op = OPAtom	165:41:3403:3419	5883486	1	True				
ANR	5884114	AssignmentExpression	mxf -> op = OPAtom		5883486	0		=			
ANR	5884115	PtrMemberAccess	mxf -> op		5883486	0					
ANR	5884116	Identifier	mxf		5883486	0					
ANR	5884117	Identifier	op		5883486	1					
ANR	5884118	Identifier	OPAtom		5883486	1					
ANR	5884119	ElseStatement	else		5883486	0					
ANR	5884120	ExpressionStatement	"av_log ( mxf -> fc , AV_LOG_ERROR , ""unknown operational pattern: %02xh %02xh\\n"" , op [ 12 ] , op [ 13 ] )"	169:8:3440:3531	5883486	0	True				
ANR	5884121	CallExpression	"av_log ( mxf -> fc , AV_LOG_ERROR , ""unknown operational pattern: %02xh %02xh\\n"" , op [ 12 ] , op [ 13 ] )"		5883486	0					
ANR	5884122	Callee	av_log		5883486	0					
ANR	5884123	Identifier	av_log		5883486	0					
ANR	5884124	ArgumentList	mxf -> fc		5883486	1					
ANR	5884125	Argument	mxf -> fc		5883486	0					
ANR	5884126	PtrMemberAccess	mxf -> fc		5883486	0					
ANR	5884127	Identifier	mxf		5883486	0					
ANR	5884128	Identifier	fc		5883486	1					
ANR	5884129	Argument	AV_LOG_ERROR		5883486	1					
ANR	5884130	Identifier	AV_LOG_ERROR		5883486	0					
ANR	5884131	Argument	"""unknown operational pattern: %02xh %02xh\\n"""		5883486	2					
ANR	5884132	PrimaryExpression	"""unknown operational pattern: %02xh %02xh\\n"""		5883486	0					
ANR	5884133	Argument	op [ 12 ]		5883486	3					
ANR	5884134	ArrayIndexing	op [ 12 ]		5883486	0					
ANR	5884135	Identifier	op		5883486	0					
ANR	5884136	PrimaryExpression	12		5883486	1					
ANR	5884137	Argument	op [ 13 ]		5883486	4					
ANR	5884138	ArrayIndexing	op [ 13 ]		5883486	0					
ANR	5884139	Identifier	op		5883486	0					
ANR	5884140	PrimaryExpression	13		5883486	1					
ANR	5884141	ReturnStatement	return 0 ;	173:4:3540:3548	5883486	52	True				
ANR	5884142	PrimaryExpression	0		5883486	0					
ANR	5884143	ReturnType	static int		5883486	1					
ANR	5884144	Identifier	mxf_read_partition_pack		5883486	2					
ANR	5884145	ParameterList	"void * arg , AVIOContext * pb , int tag , int size , UID uid"		5883486	3					
ANR	5884146	Parameter	void * arg	1:35:35:43	5883486	0	True				
ANR	5884147	ParameterType	void *		5883486	0					
ANR	5884148	Identifier	arg		5883486	1					
ANR	5884149	Parameter	AVIOContext * pb	1:46:46:60	5883486	1	True				
ANR	5884150	ParameterType	AVIOContext *		5883486	0					
ANR	5884151	Identifier	pb		5883486	1					
ANR	5884152	Parameter	int tag	1:63:63:69	5883486	2	True				
ANR	5884153	ParameterType	int		5883486	0					
ANR	5884154	Identifier	tag		5883486	1					
ANR	5884155	Parameter	int size	1:72:72:79	5883486	3	True				
ANR	5884156	ParameterType	int		5883486	0					
ANR	5884157	Identifier	size		5883486	1					
ANR	5884158	Parameter	UID uid	1:82:82:88	5883486	4	True				
ANR	5884159	ParameterType	UID		5883486	0					
ANR	5884160	Identifier	uid		5883486	1					
ANR	5884161	CFGEntryNode	ENTRY		5883486		True				
ANR	5884162	CFGExitNode	EXIT		5883486		True				
ANR	5884163	Symbol	av_realloc		5883486						
ANR	5884164	Symbol	ENOMEM		5883486						
ANR	5884165	Symbol	* op		5883486						
ANR	5884166	Symbol	OPAtom		5883486						
ANR	5884167	Symbol	OP3a		5883486						
ANR	5884168	Symbol	UINT_MAX		5883486						
ANR	5884169	Symbol	avio_rb64		5883486						
ANR	5884170	Symbol	OP3c		5883486						
ANR	5884171	Symbol	OP3b		5883486						
ANR	5884172	Symbol	* partition		5883486						
ANR	5884173	Symbol	mxf		5883486						
ANR	5884174	Symbol	tag		5883486						
ANR	5884175	Symbol	partition -> this_partition		5883486						
ANR	5884176	Symbol	mxf -> last_forward_partition		5883486						
ANR	5884177	Symbol	avio_rb32		5883486						
ANR	5884178	Symbol	size		5883486						
ANR	5884179	Symbol	Header		5883486						
ANR	5884180	Symbol	partition -> closed		5883486						
ANR	5884181	Symbol	OP2b		5883486						
ANR	5884182	Symbol	mxf -> partitions		5883486						
ANR	5884183	Symbol	OP2a		5883486						
ANR	5884184	Symbol	OP2c		5883486						
ANR	5884185	Symbol	partition -> body_sid		5883486						
ANR	5884186	Symbol	* uid		5883486						
ANR	5884187	Symbol	mxf -> parsing_backward		5883486						
ANR	5884188	Symbol	partition -> previous_partition		5883486						
ANR	5884189	Symbol	* mxf		5883486						
ANR	5884190	Symbol	* mxf -> partitions		5883486						
ANR	5884191	Symbol	BodyPartition		5883486						
ANR	5884192	Symbol	uid		5883486						
ANR	5884193	Symbol	partition		5883486						
ANR	5884194	Symbol	OP1a		5883486						
ANR	5884195	Symbol	OP1c		5883486						
ANR	5884196	Symbol	arg		5883486						
ANR	5884197	Symbol	OP1b		5883486						
ANR	5884198	Symbol	mxf -> fc		5883486						
ANR	5884199	Symbol	mxf -> footer_partition		5883486						
ANR	5884200	Symbol	op		5883486						
ANR	5884201	Symbol	mxf -> current_partition		5883486						
ANR	5884202	Symbol	AV_LOG_ERROR		5883486						
ANR	5884203	Symbol	partition -> complete		5883486						
ANR	5884204	Symbol	partition -> type		5883486						
ANR	5884205	Symbol	* * mxf		5883486						
ANR	5884206	Symbol	pb		5883486						
ANR	5884207	Symbol	mxf -> partitions_count		5883486						
ANR	5884208	Symbol	footer_partition		5883486						
ANR	5884209	Symbol	partition -> index_sid		5883486						
ANR	5884210	Symbol	mxf -> op		5883486						
ANR	5884211	Symbol	Footer		5883486						
ANR	5884212	Symbol	AVERROR_INVALIDDATA		5883486						
ANR	5884213	Symbol	AVERROR		5883486						
