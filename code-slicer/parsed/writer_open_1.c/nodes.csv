command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9461372	File	/home/p4ultr4n/workplace/ReVeal/raw_code/writer_open_1.c								
ANR	9461373	Function	writer_open	1:0:0:1214							
ANR	9461374	FunctionDef	"writer_open (WriterContext * * wctx , const Writer * writer , const char * args , const struct section * sections , int nb_sections)"		9461373	0					
ANR	9461375	CompoundStatement		5:0:159:1214	9461373	0					
ANR	9461376	IdentifierDeclStatement	"int i , ret = 0 ;"	7:4:166:180	9461373	0	True				
ANR	9461377	IdentifierDecl	i		9461373	0					
ANR	9461378	IdentifierDeclType	int		9461373	0					
ANR	9461379	Identifier	i		9461373	1					
ANR	9461380	IdentifierDecl	ret = 0		9461373	1					
ANR	9461381	IdentifierDeclType	int		9461373	0					
ANR	9461382	Identifier	ret		9461373	1					
ANR	9461383	AssignmentExpression	ret = 0		9461373	2		=			
ANR	9461384	Identifier	ret		9461373	0					
ANR	9461385	PrimaryExpression	0		9461373	1					
ANR	9461386	IfStatement	if ( ! ( * wctx = av_malloc ( sizeof ( WriterContext ) ) ) )		9461373	1					
ANR	9461387	Condition	! ( * wctx = av_malloc ( sizeof ( WriterContext ) ) )	11:8:193:235	9461373	0	True				
ANR	9461388	UnaryOperationExpression	! ( * wctx = av_malloc ( sizeof ( WriterContext ) ) )		9461373	0					
ANR	9461389	UnaryOperator	!		9461373	0					
ANR	9461390	AssignmentExpression	* wctx = av_malloc ( sizeof ( WriterContext ) )		9461373	1		=			
ANR	9461391	UnaryOperationExpression	* wctx		9461373	0					
ANR	9461392	UnaryOperator	*		9461373	0					
ANR	9461393	Identifier	wctx		9461373	1					
ANR	9461394	CallExpression	av_malloc ( sizeof ( WriterContext ) )		9461373	1					
ANR	9461395	Callee	av_malloc		9461373	0					
ANR	9461396	Identifier	av_malloc		9461373	0					
ANR	9461397	ArgumentList	sizeof ( WriterContext )		9461373	1					
ANR	9461398	Argument	sizeof ( WriterContext )		9461373	0					
ANR	9461399	SizeofExpression	sizeof ( WriterContext )		9461373	0					
ANR	9461400	Sizeof	sizeof		9461373	0					
ANR	9461401	SizeofOperand	WriterContext		9461373	1					
ANR	9461402	CompoundStatement		7:53:78:78	9461373	1					
ANR	9461403	ExpressionStatement	ret = AVERROR ( ENOMEM )	13:8:249:270	9461373	0	True				
ANR	9461404	AssignmentExpression	ret = AVERROR ( ENOMEM )		9461373	0		=			
ANR	9461405	Identifier	ret		9461373	0					
ANR	9461406	CallExpression	AVERROR ( ENOMEM )		9461373	1					
ANR	9461407	Callee	AVERROR		9461373	0					
ANR	9461408	Identifier	AVERROR		9461373	0					
ANR	9461409	ArgumentList	ENOMEM		9461373	1					
ANR	9461410	Argument	ENOMEM		9461373	0					
ANR	9461411	Identifier	ENOMEM		9461373	0					
ANR	9461412	GotoStatement	goto fail ;	15:8:281:290	9461373	1	True				
ANR	9461413	Identifier	fail		9461373	0					
ANR	9461414	IfStatement	if ( ! ( ( * wctx ) -> priv = av_mallocz ( writer -> priv_size ) ) )		9461373	2					
ANR	9461415	Condition	! ( ( * wctx ) -> priv = av_mallocz ( writer -> priv_size ) )	21:8:310:357	9461373	0	True				
ANR	9461416	UnaryOperationExpression	! ( ( * wctx ) -> priv = av_mallocz ( writer -> priv_size ) )		9461373	0					
ANR	9461417	UnaryOperator	!		9461373	0					
ANR	9461418	AssignmentExpression	( * wctx ) -> priv = av_mallocz ( writer -> priv_size )		9461373	1		=			
ANR	9461419	PtrMemberAccess	( * wctx ) -> priv		9461373	0					
ANR	9461420	UnaryOperationExpression	* wctx		9461373	0					
ANR	9461421	UnaryOperator	*		9461373	0					
ANR	9461422	Identifier	wctx		9461373	1					
ANR	9461423	Identifier	priv		9461373	1					
ANR	9461424	CallExpression	av_mallocz ( writer -> priv_size )		9461373	1					
ANR	9461425	Callee	av_mallocz		9461373	0					
ANR	9461426	Identifier	av_mallocz		9461373	0					
ANR	9461427	ArgumentList	writer -> priv_size		9461373	1					
ANR	9461428	Argument	writer -> priv_size		9461373	0					
ANR	9461429	PtrMemberAccess	writer -> priv_size		9461373	0					
ANR	9461430	Identifier	writer		9461373	0					
ANR	9461431	Identifier	priv_size		9461373	1					
ANR	9461432	CompoundStatement		17:58:200:200	9461373	1					
ANR	9461433	ExpressionStatement	ret = AVERROR ( ENOMEM )	23:8:371:392	9461373	0	True				
ANR	9461434	AssignmentExpression	ret = AVERROR ( ENOMEM )		9461373	0		=			
ANR	9461435	Identifier	ret		9461373	0					
ANR	9461436	CallExpression	AVERROR ( ENOMEM )		9461373	1					
ANR	9461437	Callee	AVERROR		9461373	0					
ANR	9461438	Identifier	AVERROR		9461373	0					
ANR	9461439	ArgumentList	ENOMEM		9461373	1					
ANR	9461440	Argument	ENOMEM		9461373	0					
ANR	9461441	Identifier	ENOMEM		9461373	0					
ANR	9461442	GotoStatement	goto fail ;	25:8:403:412	9461373	1	True				
ANR	9461443	Identifier	fail		9461373	0					
ANR	9461444	Statement	(	31:4:428:428	9461373	3	True				
ANR	9461445	Statement	*	31:5:429:429	9461373	4	True				
ANR	9461446	Statement	wctx	31:6:430:433	9461373	5	True				
ANR	9461447	Statement	)	31:10:434:434	9461373	6	True				
ANR	9461448	Statement	->	31:11:435:436	9461373	7	True				
ANR	9461449	Statement	class	31:13:437:441	9461373	8	True				
ANR	9461450	Statement	=	31:19:443:443	9461373	9	True				
ANR	9461451	ExpressionStatement	& writer_class	31:21:445:458	9461373	10	True				
ANR	9461452	UnaryOperationExpression	& writer_class		9461373	0					
ANR	9461453	UnaryOperator	&		9461373	0					
ANR	9461454	Identifier	writer_class		9461373	1					
ANR	9461455	ExpressionStatement	( * wctx ) -> writer = writer	33:4:465:489	9461373	11	True				
ANR	9461456	AssignmentExpression	( * wctx ) -> writer = writer		9461373	0		=			
ANR	9461457	PtrMemberAccess	( * wctx ) -> writer		9461373	0					
ANR	9461458	UnaryOperationExpression	* wctx		9461373	0					
ANR	9461459	UnaryOperator	*		9461373	0					
ANR	9461460	Identifier	wctx		9461373	1					
ANR	9461461	Identifier	writer		9461373	1					
ANR	9461462	Identifier	writer		9461373	1					
ANR	9461463	ExpressionStatement	( * wctx ) -> level = - 1	35:4:496:515	9461373	12	True				
ANR	9461464	AssignmentExpression	( * wctx ) -> level = - 1		9461373	0		=			
ANR	9461465	PtrMemberAccess	( * wctx ) -> level		9461373	0					
ANR	9461466	UnaryOperationExpression	* wctx		9461373	0					
ANR	9461467	UnaryOperator	*		9461373	0					
ANR	9461468	Identifier	wctx		9461373	1					
ANR	9461469	Identifier	level		9461373	1					
ANR	9461470	UnaryOperationExpression	- 1		9461373	1					
ANR	9461471	UnaryOperator	-		9461373	0					
ANR	9461472	PrimaryExpression	1		9461373	1					
ANR	9461473	ExpressionStatement	( * wctx ) -> sections = sections	37:4:522:550	9461373	13	True				
ANR	9461474	AssignmentExpression	( * wctx ) -> sections = sections		9461373	0		=			
ANR	9461475	PtrMemberAccess	( * wctx ) -> sections		9461373	0					
ANR	9461476	UnaryOperationExpression	* wctx		9461373	0					
ANR	9461477	UnaryOperator	*		9461373	0					
ANR	9461478	Identifier	wctx		9461373	1					
ANR	9461479	Identifier	sections		9461373	1					
ANR	9461480	Identifier	sections		9461373	1					
ANR	9461481	ExpressionStatement	( * wctx ) -> nb_sections = nb_sections	39:4:557:591	9461373	14	True				
ANR	9461482	AssignmentExpression	( * wctx ) -> nb_sections = nb_sections		9461373	0		=			
ANR	9461483	PtrMemberAccess	( * wctx ) -> nb_sections		9461373	0					
ANR	9461484	UnaryOperationExpression	* wctx		9461373	0					
ANR	9461485	UnaryOperator	*		9461373	0					
ANR	9461486	Identifier	wctx		9461373	1					
ANR	9461487	Identifier	nb_sections		9461373	1					
ANR	9461488	Identifier	nb_sections		9461373	1					
ANR	9461489	IfStatement	if ( writer -> priv_class )		9461373	15					
ANR	9461490	Condition	writer -> priv_class	43:8:604:621	9461373	0	True				
ANR	9461491	PtrMemberAccess	writer -> priv_class		9461373	0					
ANR	9461492	Identifier	writer		9461373	0					
ANR	9461493	Identifier	priv_class		9461373	1					
ANR	9461494	CompoundStatement		41:8:475:505	9461373	1					
ANR	9461495	IdentifierDeclStatement	void * priv_ctx = ( * wctx ) -> priv ;	45:8:635:665	9461373	0	True				
ANR	9461496	IdentifierDecl	* priv_ctx = ( * wctx ) -> priv		9461373	0					
ANR	9461497	IdentifierDeclType	void *		9461373	0					
ANR	9461498	Identifier	priv_ctx		9461373	1					
ANR	9461499	AssignmentExpression	* priv_ctx = ( * wctx ) -> priv		9461373	2		=			
ANR	9461500	Identifier	priv_ctx		9461373	0					
ANR	9461501	PtrMemberAccess	( * wctx ) -> priv		9461373	1					
ANR	9461502	UnaryOperationExpression	* wctx		9461373	0					
ANR	9461503	UnaryOperator	*		9461373	0					
ANR	9461504	Identifier	wctx		9461373	1					
ANR	9461505	Identifier	priv		9461373	1					
ANR	9461506	ExpressionStatement	* ( ( const AVClass * * ) priv_ctx ) = writer -> priv_class	47:8:676:726	9461373	1	True				
ANR	9461507	AssignmentExpression	* ( ( const AVClass * * ) priv_ctx ) = writer -> priv_class		9461373	0		=			
ANR	9461508	UnaryOperationExpression	* ( ( const AVClass * * ) priv_ctx )		9461373	0					
ANR	9461509	UnaryOperator	*		9461373	0					
ANR	9461510	CastExpression	( const AVClass * * ) priv_ctx		9461373	1					
ANR	9461511	CastTarget	const AVClass * *		9461373	0					
ANR	9461512	Identifier	priv_ctx		9461373	1					
ANR	9461513	PtrMemberAccess	writer -> priv_class		9461373	1					
ANR	9461514	Identifier	writer		9461373	0					
ANR	9461515	Identifier	priv_class		9461373	1					
ANR	9461516	ExpressionStatement	av_opt_set_defaults ( priv_ctx )	49:8:737:766	9461373	2	True				
ANR	9461517	CallExpression	av_opt_set_defaults ( priv_ctx )		9461373	0					
ANR	9461518	Callee	av_opt_set_defaults		9461373	0					
ANR	9461519	Identifier	av_opt_set_defaults		9461373	0					
ANR	9461520	ArgumentList	priv_ctx		9461373	1					
ANR	9461521	Argument	priv_ctx		9461373	0					
ANR	9461522	Identifier	priv_ctx		9461373	0					
ANR	9461523	IfStatement	"if ( args && ( ret = av_set_options_string ( priv_ctx , args , ""="" , "":"" ) ) < 0 )"		9461373	3					
ANR	9461524	Condition	"args && ( ret = av_set_options_string ( priv_ctx , args , ""="" , "":"" ) ) < 0"	53:12:783:862	9461373	0	True				
ANR	9461525	AndExpression	"args && ( ret = av_set_options_string ( priv_ctx , args , ""="" , "":"" ) ) < 0"		9461373	0		&&			
ANR	9461526	Identifier	args		9461373	0					
ANR	9461527	RelationalExpression	"( ret = av_set_options_string ( priv_ctx , args , ""="" , "":"" ) ) < 0"		9461373	1		<			
ANR	9461528	AssignmentExpression	"ret = av_set_options_string ( priv_ctx , args , ""="" , "":"" )"		9461373	0		=			
ANR	9461529	Identifier	ret		9461373	0					
ANR	9461530	CallExpression	"av_set_options_string ( priv_ctx , args , ""="" , "":"" )"		9461373	1					
ANR	9461531	Callee	av_set_options_string		9461373	0					
ANR	9461532	Identifier	av_set_options_string		9461373	0					
ANR	9461533	ArgumentList	priv_ctx		9461373	1					
ANR	9461534	Argument	priv_ctx		9461373	0					
ANR	9461535	Identifier	priv_ctx		9461373	0					
ANR	9461536	Argument	args		9461373	1					
ANR	9461537	Identifier	args		9461373	0					
ANR	9461538	Argument	"""="""		9461373	2					
ANR	9461539	PrimaryExpression	"""="""		9461373	0					
ANR	9461540	Argument	""":"""		9461373	3					
ANR	9461541	PrimaryExpression	""":"""		9461373	0					
ANR	9461542	PrimaryExpression	0		9461373	1					
ANR	9461543	GotoStatement	goto fail ;	57:12:878:887	9461373	1	True				
ANR	9461544	Identifier	fail		9461373	0					
ANR	9461545	ForStatement	for ( i = 0 ; i < SECTION_MAX_NB_LEVELS ; i ++ )		9461373	16					
ANR	9461546	ForInit	i = 0 ;	63:9:908:913	9461373	0	True				
ANR	9461547	AssignmentExpression	i = 0		9461373	0		=			
ANR	9461548	Identifier	i		9461373	0					
ANR	9461549	PrimaryExpression	0		9461373	1					
ANR	9461550	Condition	i < SECTION_MAX_NB_LEVELS	63:16:915:939	9461373	1	True				
ANR	9461551	RelationalExpression	i < SECTION_MAX_NB_LEVELS		9461373	0		<			
ANR	9461552	Identifier	i		9461373	0					
ANR	9461553	Identifier	SECTION_MAX_NB_LEVELS		9461373	1					
ANR	9461554	PostIncDecOperationExpression	i ++	63:43:942:944	9461373	2	True				
ANR	9461555	Identifier	i		9461373	0					
ANR	9461556	IncDec	++		9461373	1					
ANR	9461557	ExpressionStatement	"av_bprint_init ( & ( * wctx ) -> section_pbuf [ i ] , 1 , AV_BPRINT_SIZE_UNLIMITED )"	65:8:956:1026	9461373	3	True				
ANR	9461558	CallExpression	"av_bprint_init ( & ( * wctx ) -> section_pbuf [ i ] , 1 , AV_BPRINT_SIZE_UNLIMITED )"		9461373	0					
ANR	9461559	Callee	av_bprint_init		9461373	0					
ANR	9461560	Identifier	av_bprint_init		9461373	0					
ANR	9461561	ArgumentList	& ( * wctx ) -> section_pbuf [ i ]		9461373	1					
ANR	9461562	Argument	& ( * wctx ) -> section_pbuf [ i ]		9461373	0					
ANR	9461563	UnaryOperationExpression	& ( * wctx ) -> section_pbuf [ i ]		9461373	0					
ANR	9461564	UnaryOperator	&		9461373	0					
ANR	9461565	ArrayIndexing	( * wctx ) -> section_pbuf [ i ]		9461373	1					
ANR	9461566	PtrMemberAccess	( * wctx ) -> section_pbuf		9461373	0					
ANR	9461567	UnaryOperationExpression	* wctx		9461373	0					
ANR	9461568	UnaryOperator	*		9461373	0					
ANR	9461569	Identifier	wctx		9461373	1					
ANR	9461570	Identifier	section_pbuf		9461373	1					
ANR	9461571	Identifier	i		9461373	1					
ANR	9461572	Argument	1		9461373	1					
ANR	9461573	PrimaryExpression	1		9461373	0					
ANR	9461574	Argument	AV_BPRINT_SIZE_UNLIMITED		9461373	2					
ANR	9461575	Identifier	AV_BPRINT_SIZE_UNLIMITED		9461373	0					
ANR	9461576	IfStatement	if ( ( * wctx ) -> writer -> init )		9461373	17					
ANR	9461577	Condition	( * wctx ) -> writer -> init	69:8:1039:1059	9461373	0	True				
ANR	9461578	PtrMemberAccess	( * wctx ) -> writer -> init		9461373	0					
ANR	9461579	PtrMemberAccess	( * wctx ) -> writer		9461373	0					
ANR	9461580	UnaryOperationExpression	* wctx		9461373	0					
ANR	9461581	UnaryOperator	*		9461373	0					
ANR	9461582	Identifier	wctx		9461373	1					
ANR	9461583	Identifier	writer		9461373	1					
ANR	9461584	Identifier	init		9461373	1					
ANR	9461585	ExpressionStatement	ret = ( * wctx ) -> writer -> init ( * wctx )	71:8:1071:1105	9461373	1	True				
ANR	9461586	AssignmentExpression	ret = ( * wctx ) -> writer -> init ( * wctx )		9461373	0		=			
ANR	9461587	Identifier	ret		9461373	0					
ANR	9461588	CallExpression	( * wctx ) -> writer -> init ( * wctx )		9461373	1					
ANR	9461589	Callee	( * wctx ) -> writer -> init		9461373	0					
ANR	9461590	PtrMemberAccess	( * wctx ) -> writer -> init		9461373	0					
ANR	9461591	PtrMemberAccess	( * wctx ) -> writer		9461373	0					
ANR	9461592	UnaryOperationExpression	* wctx		9461373	0					
ANR	9461593	UnaryOperator	*		9461373	0					
ANR	9461594	Identifier	wctx		9461373	1					
ANR	9461595	Identifier	writer		9461373	1					
ANR	9461596	Identifier	init		9461373	1					
ANR	9461597	ArgumentList	* wctx		9461373	1					
ANR	9461598	Argument	* wctx		9461373	0					
ANR	9461599	UnaryOperationExpression	* wctx		9461373	0					
ANR	9461600	UnaryOperator	*		9461373	0					
ANR	9461601	Identifier	wctx		9461373	1					
ANR	9461602	IfStatement	if ( ret < 0 )		9461373	18					
ANR	9461603	Condition	ret < 0	73:8:1116:1122	9461373	0	True				
ANR	9461604	RelationalExpression	ret < 0		9461373	0		<			
ANR	9461605	Identifier	ret		9461373	0					
ANR	9461606	PrimaryExpression	0		9461373	1					
ANR	9461607	GotoStatement	goto fail ;	75:8:1134:1143	9461373	1	True				
ANR	9461608	Identifier	fail		9461373	0					
ANR	9461609	ReturnStatement	return 0 ;	79:4:1152:1160	9461373	19	True				
ANR	9461610	PrimaryExpression	0		9461373	0					
ANR	9461611	Label	fail :	83:0:1165:1169	9461373	20	True				
ANR	9461612	Identifier	fail		9461373	0					
ANR	9461613	ExpressionStatement	writer_close ( wctx )	85:4:1176:1194	9461373	21	True				
ANR	9461614	CallExpression	writer_close ( wctx )		9461373	0					
ANR	9461615	Callee	writer_close		9461373	0					
ANR	9461616	Identifier	writer_close		9461373	0					
ANR	9461617	ArgumentList	wctx		9461373	1					
ANR	9461618	Argument	wctx		9461373	0					
ANR	9461619	Identifier	wctx		9461373	0					
ANR	9461620	ReturnStatement	return ret ;	87:4:1201:1211	9461373	22	True				
ANR	9461621	Identifier	ret		9461373	0					
ANR	9461622	ReturnType	static int		9461373	1					
ANR	9461623	Identifier	writer_open		9461373	2					
ANR	9461624	ParameterList	"WriterContext * * wctx , const Writer * writer , const char * args , const struct section * sections , int nb_sections"		9461373	3					
ANR	9461625	Parameter	WriterContext * * wctx	1:23:23:42	9461373	0	True				
ANR	9461626	ParameterType	WriterContext * *		9461373	0					
ANR	9461627	Identifier	wctx		9461373	1					
ANR	9461628	Parameter	const Writer * writer	1:45:45:64	9461373	1	True				
ANR	9461629	ParameterType	const Writer *		9461373	0					
ANR	9461630	Identifier	writer		9461373	1					
ANR	9461631	Parameter	const char * args	1:67:67:82	9461373	2	True				
ANR	9461632	ParameterType	const char *		9461373	0					
ANR	9461633	Identifier	args		9461373	1					
ANR	9461634	Parameter	const struct section * sections	3:23:109:138	9461373	3	True				
ANR	9461635	ParameterType	const struct section *		9461373	0					
ANR	9461636	Identifier	sections		9461373	1					
ANR	9461637	Parameter	int nb_sections	3:55:141:155	9461373	4	True				
ANR	9461638	ParameterType	int		9461373	0					
ANR	9461639	Identifier	nb_sections		9461373	1					
ANR	9461640	CFGEntryNode	ENTRY		9461373		True				
ANR	9461641	CFGExitNode	EXIT		9461373		True				
ANR	9461642	Symbol	av_malloc		9461373						
ANR	9461643	Symbol	ENOMEM		9461373						
ANR	9461644	Symbol	SECTION_MAX_NB_LEVELS		9461373						
ANR	9461645	Symbol	( * wctx ) -> section_pbuf		9461373						
ANR	9461646	Symbol	av_set_options_string		9461373						
ANR	9461647	Symbol	AV_BPRINT_SIZE_UNLIMITED		9461373						
ANR	9461648	Symbol	* * * wctx		9461373						
ANR	9461649	Symbol	writer -> priv_size		9461373						
ANR	9461650	Symbol	* ( ( const AVClass * * ) priv_ctx )		9461373						
ANR	9461651	Symbol	writer -> priv_class		9461373						
ANR	9461652	Symbol	( * wctx ) -> level		9461373						
ANR	9461653	Symbol	* ( * wctx ) -> writer		9461373						
ANR	9461654	Symbol	nb_sections		9461373						
ANR	9461655	Symbol	( * wctx ) -> writer		9461373						
ANR	9461656	Symbol	ret		9461373						
ANR	9461657	Symbol	* wctx		9461373						
ANR	9461658	Symbol	( * wctx ) -> sections		9461373						
ANR	9461659	Symbol	* * wctx		9461373						
ANR	9461660	Symbol	( * wctx ) -> writer -> init		9461373						
ANR	9461661	Symbol	wctx		9461373						
ANR	9461662	Symbol	* writer		9461373						
ANR	9461663	Symbol	av_mallocz		9461373						
ANR	9461664	Symbol	i		9461373						
ANR	9461665	Symbol	sections		9461373						
ANR	9461666	Symbol	args		9461373						
ANR	9461667	Symbol	* priv_ctx		9461373						
ANR	9461668	Symbol	priv_ctx		9461373						
ANR	9461669	Symbol	( * wctx ) -> priv		9461373						
ANR	9461670	Symbol	writer		9461373						
ANR	9461671	Symbol	AVERROR		9461373						
ANR	9461672	Symbol	( * wctx ) -> nb_sections		9461373						
