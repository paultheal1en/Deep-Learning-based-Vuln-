command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6194109	File	/home/p4ultr4n/workplace/ReVeal/raw_code/onenand_prog_spare_0.c								
ANR	6194110	Function	onenand_prog_spare	1:0:0:1150							
ANR	6194111	FunctionDef	"onenand_prog_spare (OneNANDState * s , int sec , int secn , void * src)"		6194110	0					
ANR	6194112	CompoundStatement		5:0:102:1150	6194110	0					
ANR	6194113	IdentifierDeclStatement	int result = 0 ;	7:4:109:123	6194110	0	True				
ANR	6194114	IdentifierDecl	result = 0		6194110	0					
ANR	6194115	IdentifierDeclType	int		6194110	0					
ANR	6194116	Identifier	result		6194110	1					
ANR	6194117	AssignmentExpression	result = 0		6194110	2		=			
ANR	6194118	Identifier	result		6194110	0					
ANR	6194119	PrimaryExpression	0		6194110	1					
ANR	6194120	IfStatement	if ( secn > 0 )		6194110	1					
ANR	6194121	Condition	secn > 0	9:8:134:141	6194110	0	True				
ANR	6194122	RelationalExpression	secn > 0		6194110	0		>			
ANR	6194123	Identifier	secn		6194110	0					
ANR	6194124	PrimaryExpression	0		6194110	1					
ANR	6194125	CompoundStatement		9:8:103:128	6194110	1					
ANR	6194126	IdentifierDeclStatement	const uint8_t * sp = ( const uint8_t * ) src ;	11:8:155:195	6194110	0	True				
ANR	6194127	IdentifierDecl	* sp = ( const uint8_t * ) src		6194110	0					
ANR	6194128	IdentifierDeclType	const uint8_t *		6194110	0					
ANR	6194129	Identifier	sp		6194110	1					
ANR	6194130	AssignmentExpression	* sp = ( const uint8_t * ) src		6194110	2		=			
ANR	6194131	Identifier	sp		6194110	0					
ANR	6194132	CastExpression	( const uint8_t * ) src		6194110	1					
ANR	6194133	CastTarget	const uint8_t *		6194110	0					
ANR	6194134	Identifier	src		6194110	1					
ANR	6194135	IdentifierDeclStatement	"uint8_t * dp = 0 , * dpp = 0 ;"	13:8:206:231	6194110	1	True				
ANR	6194136	IdentifierDecl	* dp = 0		6194110	0					
ANR	6194137	IdentifierDeclType	uint8_t *		6194110	0					
ANR	6194138	Identifier	dp		6194110	1					
ANR	6194139	AssignmentExpression	* dp = 0		6194110	2		=			
ANR	6194140	Identifier	dp		6194110	0					
ANR	6194141	PrimaryExpression	0		6194110	1					
ANR	6194142	IdentifierDecl	* dpp = 0		6194110	1					
ANR	6194143	IdentifierDeclType	uint8_t *		6194110	0					
ANR	6194144	Identifier	dpp		6194110	1					
ANR	6194145	AssignmentExpression	* dpp = 0		6194110	2		=			
ANR	6194146	Identifier	dpp		6194110	0					
ANR	6194147	PrimaryExpression	0		6194110	1					
ANR	6194148	IfStatement	if ( s -> bdrv_cur )		6194110	2					
ANR	6194149	Condition	s -> bdrv_cur	15:12:246:256	6194110	0	True				
ANR	6194150	PtrMemberAccess	s -> bdrv_cur		6194110	0					
ANR	6194151	Identifier	s		6194110	0					
ANR	6194152	Identifier	bdrv_cur		6194110	1					
ANR	6194153	CompoundStatement		11:25:156:156	6194110	1					
ANR	6194154	ExpressionStatement	dp = g_malloc ( 512 )	17:12:274:292	6194110	0	True				
ANR	6194155	AssignmentExpression	dp = g_malloc ( 512 )		6194110	0		=			
ANR	6194156	Identifier	dp		6194110	0					
ANR	6194157	CallExpression	g_malloc ( 512 )		6194110	1					
ANR	6194158	Callee	g_malloc		6194110	0					
ANR	6194159	Identifier	g_malloc		6194110	0					
ANR	6194160	ArgumentList	512		6194110	1					
ANR	6194161	Argument	512		6194110	0					
ANR	6194162	PrimaryExpression	512		6194110	0					
ANR	6194163	IfStatement	"if ( ! dp || bdrv_read ( s -> bdrv_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0 )"		6194110	1					
ANR	6194164	Condition	"! dp || bdrv_read ( s -> bdrv_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0"	19:16:311:444	6194110	0	True				
ANR	6194165	OrExpression	"! dp || bdrv_read ( s -> bdrv_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0"		6194110	0		||			
ANR	6194166	UnaryOperationExpression	! dp		6194110	0					
ANR	6194167	UnaryOperator	!		6194110	0					
ANR	6194168	Identifier	dp		6194110	1					
ANR	6194169	RelationalExpression	"bdrv_read ( s -> bdrv_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0"		6194110	1		<			
ANR	6194170	CallExpression	"bdrv_read ( s -> bdrv_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 )"		6194110	0					
ANR	6194171	Callee	bdrv_read		6194110	0					
ANR	6194172	Identifier	bdrv_read		6194110	0					
ANR	6194173	ArgumentList	s -> bdrv_cur		6194110	1					
ANR	6194174	Argument	s -> bdrv_cur		6194110	0					
ANR	6194175	PtrMemberAccess	s -> bdrv_cur		6194110	0					
ANR	6194176	Identifier	s		6194110	0					
ANR	6194177	Identifier	bdrv_cur		6194110	1					
ANR	6194178	Argument	s -> secs_cur + ( sec >> 5 )		6194110	1					
ANR	6194179	AdditiveExpression	s -> secs_cur + ( sec >> 5 )		6194110	0		+			
ANR	6194180	PtrMemberAccess	s -> secs_cur		6194110	0					
ANR	6194181	Identifier	s		6194110	0					
ANR	6194182	Identifier	secs_cur		6194110	1					
ANR	6194183	ShiftExpression	sec >> 5		6194110	1		>>			
ANR	6194184	Identifier	sec		6194110	0					
ANR	6194185	PrimaryExpression	5		6194110	1					
ANR	6194186	Argument	dp		6194110	2					
ANR	6194187	Identifier	dp		6194110	0					
ANR	6194188	Argument	1		6194110	3					
ANR	6194189	PrimaryExpression	1		6194110	0					
ANR	6194190	PrimaryExpression	0		6194110	1					
ANR	6194191	CompoundStatement		19:45:344:344	6194110	1					
ANR	6194192	ExpressionStatement	result = 1	25:16:466:476	6194110	0	True				
ANR	6194193	AssignmentExpression	result = 1		6194110	0		=			
ANR	6194194	Identifier	result		6194110	0					
ANR	6194195	PrimaryExpression	1		6194110	1					
ANR	6194196	ElseStatement	else		6194110	0					
ANR	6194197	CompoundStatement		23:19:395:395	6194110	0					
ANR	6194198	ExpressionStatement	dpp = dp + ( ( sec & 31 ) << 4 )	29:16:517:545	6194110	0	True				
ANR	6194199	AssignmentExpression	dpp = dp + ( ( sec & 31 ) << 4 )		6194110	0		=			
ANR	6194200	Identifier	dpp		6194110	0					
ANR	6194201	AdditiveExpression	dp + ( ( sec & 31 ) << 4 )		6194110	1		+			
ANR	6194202	Identifier	dp		6194110	0					
ANR	6194203	ShiftExpression	( sec & 31 ) << 4		6194110	1		<<			
ANR	6194204	BitAndExpression	sec & 31		6194110	0		&			
ANR	6194205	Identifier	sec		6194110	0					
ANR	6194206	PrimaryExpression	31		6194110	1					
ANR	6194207	PrimaryExpression	4		6194110	1					
ANR	6194208	ElseStatement	else		6194110	0					
ANR	6194209	CompoundStatement		29:15:475:475	6194110	0					
ANR	6194210	IfStatement	if ( sec + secn > s -> secs_cur )		6194110	0					
ANR	6194211	Condition	sec + secn > s -> secs_cur	35:16:597:620	6194110	0	True				
ANR	6194212	RelationalExpression	sec + secn > s -> secs_cur		6194110	0		>			
ANR	6194213	AdditiveExpression	sec + secn		6194110	0		+			
ANR	6194214	Identifier	sec		6194110	0					
ANR	6194215	Identifier	secn		6194110	1					
ANR	6194216	PtrMemberAccess	s -> secs_cur		6194110	1					
ANR	6194217	Identifier	s		6194110	0					
ANR	6194218	Identifier	secs_cur		6194110	1					
ANR	6194219	CompoundStatement		31:42:520:520	6194110	1					
ANR	6194220	ExpressionStatement	result = 1	37:16:642:652	6194110	0	True				
ANR	6194221	AssignmentExpression	result = 1		6194110	0		=			
ANR	6194222	Identifier	result		6194110	0					
ANR	6194223	PrimaryExpression	1		6194110	1					
ANR	6194224	ElseStatement	else		6194110	0					
ANR	6194225	CompoundStatement		35:19:571:571	6194110	0					
ANR	6194226	ExpressionStatement	dpp = s -> current + ( s -> secs_cur << 9 ) + ( sec << 4 )	41:16:693:743	6194110	0	True				
ANR	6194227	AssignmentExpression	dpp = s -> current + ( s -> secs_cur << 9 ) + ( sec << 4 )		6194110	0		=			
ANR	6194228	Identifier	dpp		6194110	0					
ANR	6194229	AdditiveExpression	s -> current + ( s -> secs_cur << 9 ) + ( sec << 4 )		6194110	1		+			
ANR	6194230	PtrMemberAccess	s -> current		6194110	0					
ANR	6194231	Identifier	s		6194110	0					
ANR	6194232	Identifier	current		6194110	1					
ANR	6194233	AdditiveExpression	( s -> secs_cur << 9 ) + ( sec << 4 )		6194110	1		+			
ANR	6194234	ShiftExpression	s -> secs_cur << 9		6194110	0		<<			
ANR	6194235	PtrMemberAccess	s -> secs_cur		6194110	0					
ANR	6194236	Identifier	s		6194110	0					
ANR	6194237	Identifier	secs_cur		6194110	1					
ANR	6194238	PrimaryExpression	9		6194110	1					
ANR	6194239	ShiftExpression	sec << 4		6194110	1		<<			
ANR	6194240	Identifier	sec		6194110	0					
ANR	6194241	PrimaryExpression	4		6194110	1					
ANR	6194242	IfStatement	if ( ! result )		6194110	3					
ANR	6194243	Condition	! result	47:12:784:790	6194110	0	True				
ANR	6194244	UnaryOperationExpression	! result		6194110	0					
ANR	6194245	UnaryOperator	!		6194110	0					
ANR	6194246	Identifier	result		6194110	1					
ANR	6194247	CompoundStatement		45:12:705:715	6194110	1					
ANR	6194248	IdentifierDeclStatement	uint32_t i ;	49:12:808:818	6194110	0	True				
ANR	6194249	IdentifierDecl	i		6194110	0					
ANR	6194250	IdentifierDeclType	uint32_t		6194110	0					
ANR	6194251	Identifier	i		6194110	1					
ANR	6194252	ForStatement	for ( i = 0 ; i < ( secn << 4 ) ; i ++ )		6194110	1					
ANR	6194253	ForInit	i = 0 ;	51:17:838:843	6194110	0	True				
ANR	6194254	AssignmentExpression	i = 0		6194110	0		=			
ANR	6194255	Identifier	i		6194110	0					
ANR	6194256	PrimaryExpression	0		6194110	1					
ANR	6194257	Condition	i < ( secn << 4 )	51:24:845:859	6194110	1	True				
ANR	6194258	RelationalExpression	i < ( secn << 4 )		6194110	0		<			
ANR	6194259	Identifier	i		6194110	0					
ANR	6194260	ShiftExpression	secn << 4		6194110	1		<<			
ANR	6194261	Identifier	secn		6194110	0					
ANR	6194262	PrimaryExpression	4		6194110	1					
ANR	6194263	PostIncDecOperationExpression	i ++	51:41:862:864	6194110	2	True				
ANR	6194264	Identifier	i		6194110	0					
ANR	6194265	IncDec	++		6194110	1					
ANR	6194266	CompoundStatement		47:46:764:764	6194110	3					
ANR	6194267	ExpressionStatement	dpp [ i ] &= sp [ i ]	53:16:886:901	6194110	0	True				
ANR	6194268	AssignmentExpression	dpp [ i ] &= sp [ i ]		6194110	0		&=			
ANR	6194269	ArrayIndexing	dpp [ i ]		6194110	0					
ANR	6194270	Identifier	dpp		6194110	0					
ANR	6194271	Identifier	i		6194110	1					
ANR	6194272	ArrayIndexing	sp [ i ]		6194110	1					
ANR	6194273	Identifier	sp		6194110	0					
ANR	6194274	Identifier	i		6194110	1					
ANR	6194275	IfStatement	if ( s -> bdrv_cur )		6194110	2					
ANR	6194276	Condition	s -> bdrv_cur	57:16:935:945	6194110	0	True				
ANR	6194277	PtrMemberAccess	s -> bdrv_cur		6194110	0					
ANR	6194278	Identifier	s		6194110	0					
ANR	6194279	Identifier	bdrv_cur		6194110	1					
ANR	6194280	CompoundStatement		53:29:845:845	6194110	1					
ANR	6194281	ExpressionStatement	"result = bdrv_write ( s -> bdrv_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0"	59:16:967:1073	6194110	0	True				
ANR	6194282	AssignmentExpression	"result = bdrv_write ( s -> bdrv_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0"		6194110	0		=			
ANR	6194283	Identifier	result		6194110	0					
ANR	6194284	RelationalExpression	"bdrv_write ( s -> bdrv_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 ) < 0"		6194110	1		<			
ANR	6194285	CallExpression	"bdrv_write ( s -> bdrv_cur , s -> secs_cur + ( sec >> 5 ) , dp , 1 )"		6194110	0					
ANR	6194286	Callee	bdrv_write		6194110	0					
ANR	6194287	Identifier	bdrv_write		6194110	0					
ANR	6194288	ArgumentList	s -> bdrv_cur		6194110	1					
ANR	6194289	Argument	s -> bdrv_cur		6194110	0					
ANR	6194290	PtrMemberAccess	s -> bdrv_cur		6194110	0					
ANR	6194291	Identifier	s		6194110	0					
ANR	6194292	Identifier	bdrv_cur		6194110	1					
ANR	6194293	Argument	s -> secs_cur + ( sec >> 5 )		6194110	1					
ANR	6194294	AdditiveExpression	s -> secs_cur + ( sec >> 5 )		6194110	0		+			
ANR	6194295	PtrMemberAccess	s -> secs_cur		6194110	0					
ANR	6194296	Identifier	s		6194110	0					
ANR	6194297	Identifier	secs_cur		6194110	1					
ANR	6194298	ShiftExpression	sec >> 5		6194110	1		>>			
ANR	6194299	Identifier	sec		6194110	0					
ANR	6194300	PrimaryExpression	5		6194110	1					
ANR	6194301	Argument	dp		6194110	2					
ANR	6194302	Identifier	dp		6194110	0					
ANR	6194303	Argument	1		6194110	3					
ANR	6194304	PrimaryExpression	1		6194110	0					
ANR	6194305	PrimaryExpression	0		6194110	1					
ANR	6194306	ExpressionStatement	g_free ( dp )	67:8:1110:1120	6194110	4	True				
ANR	6194307	CallExpression	g_free ( dp )		6194110	0					
ANR	6194308	Callee	g_free		6194110	0					
ANR	6194309	Identifier	g_free		6194110	0					
ANR	6194310	ArgumentList	dp		6194110	1					
ANR	6194311	Argument	dp		6194110	0					
ANR	6194312	Identifier	dp		6194110	0					
ANR	6194313	ReturnStatement	return result ;	71:4:1134:1147	6194110	2	True				
ANR	6194314	Identifier	result		6194110	0					
ANR	6194315	ReturnType	static inline int		6194110	1					
ANR	6194316	Identifier	onenand_prog_spare		6194110	2					
ANR	6194317	ParameterList	"OneNANDState * s , int sec , int secn , void * src"		6194110	3					
ANR	6194318	Parameter	OneNANDState * s	1:37:37:51	6194110	0	True				
ANR	6194319	ParameterType	OneNANDState *		6194110	0					
ANR	6194320	Identifier	s		6194110	1					
ANR	6194321	Parameter	int sec	1:54:54:60	6194110	1	True				
ANR	6194322	ParameterType	int		6194110	0					
ANR	6194323	Identifier	sec		6194110	1					
ANR	6194324	Parameter	int secn	1:63:63:70	6194110	2	True				
ANR	6194325	ParameterType	int		6194110	0					
ANR	6194326	Identifier	secn		6194110	1					
ANR	6194327	Parameter	void * src	3:16:90:98	6194110	3	True				
ANR	6194328	ParameterType	void *		6194110	0					
ANR	6194329	Identifier	src		6194110	1					
ANR	6194330	CFGEntryNode	ENTRY		6194110		True				
ANR	6194331	CFGExitNode	EXIT		6194110		True				
ANR	6194332	Symbol	* sp		6194110						
ANR	6194333	Symbol	src		6194110						
ANR	6194334	Symbol	dpp		6194110						
ANR	6194335	Symbol	s -> current		6194110						
ANR	6194336	Symbol	secn		6194110						
ANR	6194337	Symbol	i		6194110						
ANR	6194338	Symbol	dp		6194110						
ANR	6194339	Symbol	s -> secs_cur		6194110						
ANR	6194340	Symbol	sec		6194110						
ANR	6194341	Symbol	result		6194110						
ANR	6194342	Symbol	* dpp		6194110						
ANR	6194343	Symbol	g_malloc		6194110						
ANR	6194344	Symbol	s		6194110						
ANR	6194345	Symbol	* i		6194110						
ANR	6194346	Symbol	bdrv_read		6194110						
ANR	6194347	Symbol	s -> bdrv_cur		6194110						
ANR	6194348	Symbol	bdrv_write		6194110						
ANR	6194349	Symbol	sp		6194110						
ANR	6194350	Symbol	* s		6194110						
