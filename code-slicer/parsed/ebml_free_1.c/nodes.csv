command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2920622	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ebml_free_1.c								
ANR	2920623	Function	ebml_free	1:0:0:927							
ANR	2920624	FunctionDef	"ebml_free (EbmlSyntax * syntax , void * data)"		2920623	0					
ANR	2920625	CompoundStatement		3:0:55:927	2920623	0					
ANR	2920626	IdentifierDeclStatement	"int i , j ;"	5:4:62:70	2920623	0	True				
ANR	2920627	IdentifierDecl	i		2920623	0					
ANR	2920628	IdentifierDeclType	int		2920623	0					
ANR	2920629	Identifier	i		2920623	1					
ANR	2920630	IdentifierDecl	j		2920623	1					
ANR	2920631	IdentifierDeclType	int		2920623	0					
ANR	2920632	Identifier	j		2920623	1					
ANR	2920633	ForStatement	for ( i = 0 ; syntax [ i ] . id ; i ++ )		2920623	1					
ANR	2920634	ForInit	i = 0 ;	7:9:82:87	2920623	0	True				
ANR	2920635	AssignmentExpression	i = 0		2920623	0		=			
ANR	2920636	Identifier	i		2920623	0					
ANR	2920637	PrimaryExpression	0		2920623	1					
ANR	2920638	Condition	syntax [ i ] . id	7:16:89:100	2920623	1	True				
ANR	2920639	MemberAccess	syntax [ i ] . id		2920623	0					
ANR	2920640	ArrayIndexing	syntax [ i ]		2920623	0					
ANR	2920641	Identifier	syntax		2920623	0					
ANR	2920642	Identifier	i		2920623	1					
ANR	2920643	Identifier	id		2920623	1					
ANR	2920644	PostIncDecOperationExpression	i ++	7:30:103:105	2920623	2	True				
ANR	2920645	Identifier	i		2920623	0					
ANR	2920646	IncDec	++		2920623	1					
ANR	2920647	CompoundStatement		7:8:63:117	2920623	3					
ANR	2920648	IdentifierDeclStatement	void * data_off = ( char * ) data + syntax [ i ] . data_offset ;	9:8:119:173	2920623	0	True				
ANR	2920649	IdentifierDecl	* data_off = ( char * ) data + syntax [ i ] . data_offset		2920623	0					
ANR	2920650	IdentifierDeclType	void *		2920623	0					
ANR	2920651	Identifier	data_off		2920623	1					
ANR	2920652	AssignmentExpression	* data_off = ( char * ) data + syntax [ i ] . data_offset		2920623	2		=			
ANR	2920653	Identifier	data_off		2920623	0					
ANR	2920654	AdditiveExpression	( char * ) data + syntax [ i ] . data_offset		2920623	1		+			
ANR	2920655	CastExpression	( char * ) data		2920623	0					
ANR	2920656	CastTarget	char *		2920623	0					
ANR	2920657	Identifier	data		2920623	1					
ANR	2920658	MemberAccess	syntax [ i ] . data_offset		2920623	1					
ANR	2920659	ArrayIndexing	syntax [ i ]		2920623	0					
ANR	2920660	Identifier	syntax		2920623	0					
ANR	2920661	Identifier	i		2920623	1					
ANR	2920662	Identifier	data_offset		2920623	1					
ANR	2920663	SwitchStatement	switch ( syntax [ i ] . type )		2920623	1					
ANR	2920664	Condition	syntax [ i ] . type	11:16:192:205	2920623	0	True				
ANR	2920665	MemberAccess	syntax [ i ] . type		2920623	0					
ANR	2920666	ArrayIndexing	syntax [ i ]		2920623	0					
ANR	2920667	Identifier	syntax		2920623	0					
ANR	2920668	Identifier	i		2920623	1					
ANR	2920669	Identifier	type		2920623	1					
ANR	2920670	CompoundStatement		9:32:152:152	2920623	1					
ANR	2920671	Label	case EBML_STR :	13:8:219:232	2920623	0	True				
ANR	2920672	Identifier	EBML_STR		2920623	0					
ANR	2920673	Label	case EBML_UTF8 :	15:8:243:257	2920623	1	True				
ANR	2920674	Identifier	EBML_UTF8		2920623	0					
ANR	2920675	ExpressionStatement	av_freep ( data_off )	17:12:272:290	2920623	2	True				
ANR	2920676	CallExpression	av_freep ( data_off )		2920623	0					
ANR	2920677	Callee	av_freep		2920623	0					
ANR	2920678	Identifier	av_freep		2920623	0					
ANR	2920679	ArgumentList	data_off		2920623	1					
ANR	2920680	Argument	data_off		2920623	0					
ANR	2920681	Identifier	data_off		2920623	0					
ANR	2920682	BreakStatement	break ;	19:12:305:310	2920623	3	True				
ANR	2920683	Label	case EBML_BIN :	21:8:321:334	2920623	4	True				
ANR	2920684	Identifier	EBML_BIN		2920623	0					
ANR	2920685	ExpressionStatement	av_freep ( & ( ( EbmlBin * ) data_off ) -> data )	23:12:349:388	2920623	5	True				
ANR	2920686	CallExpression	av_freep ( & ( ( EbmlBin * ) data_off ) -> data )		2920623	0					
ANR	2920687	Callee	av_freep		2920623	0					
ANR	2920688	Identifier	av_freep		2920623	0					
ANR	2920689	ArgumentList	& ( ( EbmlBin * ) data_off ) -> data		2920623	1					
ANR	2920690	Argument	& ( ( EbmlBin * ) data_off ) -> data		2920623	0					
ANR	2920691	UnaryOperationExpression	& ( ( EbmlBin * ) data_off ) -> data		2920623	0					
ANR	2920692	UnaryOperator	&		2920623	0					
ANR	2920693	PtrMemberAccess	( ( EbmlBin * ) data_off ) -> data		2920623	1					
ANR	2920694	CastExpression	( EbmlBin * ) data_off		2920623	0					
ANR	2920695	CastTarget	EbmlBin *		2920623	0					
ANR	2920696	Identifier	data_off		2920623	1					
ANR	2920697	Identifier	data		2920623	1					
ANR	2920698	BreakStatement	break ;	25:12:403:408	2920623	6	True				
ANR	2920699	Label	case EBML_LEVEL1 :	27:8:419:435	2920623	7	True				
ANR	2920700	Identifier	EBML_LEVEL1		2920623	0					
ANR	2920701	Label	case EBML_NEST :	29:8:446:460	2920623	8	True				
ANR	2920702	Identifier	EBML_NEST		2920623	0					
ANR	2920703	IfStatement	if ( syntax [ i ] . list_elem_size )		2920623	9					
ANR	2920704	Condition	syntax [ i ] . list_elem_size	31:16:479:502	2920623	0	True				
ANR	2920705	MemberAccess	syntax [ i ] . list_elem_size		2920623	0					
ANR	2920706	ArrayIndexing	syntax [ i ]		2920623	0					
ANR	2920707	Identifier	syntax		2920623	0					
ANR	2920708	Identifier	i		2920623	1					
ANR	2920709	Identifier	list_elem_size		2920623	1					
ANR	2920710	CompoundStatement		33:16:512:534	2920623	1					
ANR	2920711	IdentifierDeclStatement	EbmlList * list = data_off ;	33:16:524:549	2920623	0	True				
ANR	2920712	IdentifierDecl	* list = data_off		2920623	0					
ANR	2920713	IdentifierDeclType	EbmlList *		2920623	0					
ANR	2920714	Identifier	list		2920623	1					
ANR	2920715	AssignmentExpression	* list = data_off		2920623	2		=			
ANR	2920716	Identifier	data_off		2920623	0					
ANR	2920717	Identifier	data_off		2920623	1					
ANR	2920718	IdentifierDeclStatement	char * ptr = list -> elem ;	35:16:568:590	2920623	1	True				
ANR	2920719	IdentifierDecl	* ptr = list -> elem		2920623	0					
ANR	2920720	IdentifierDeclType	char *		2920623	0					
ANR	2920721	Identifier	ptr		2920623	1					
ANR	2920722	AssignmentExpression	* ptr = list -> elem		2920623	2		=			
ANR	2920723	Identifier	ptr		2920623	0					
ANR	2920724	PtrMemberAccess	list -> elem		2920623	1					
ANR	2920725	Identifier	list		2920623	0					
ANR	2920726	Identifier	elem		2920623	1					
ANR	2920727	ForStatement	"for ( j = 0 ; j < list -> nb_elem ; j ++ , ptr += syntax [ i ] . list_elem_size )"		2920623	2					
ANR	2920728	ForInit	j = 0 ;	37:21:614:619	2920623	0	True				
ANR	2920729	AssignmentExpression	j = 0		2920623	0		=			
ANR	2920730	Identifier	j		2920623	0					
ANR	2920731	PrimaryExpression	0		2920623	1					
ANR	2920732	Condition	j < list -> nb_elem	37:28:621:637	2920623	1	True				
ANR	2920733	RelationalExpression	j < list -> nb_elem		2920623	0		<			
ANR	2920734	Identifier	j		2920623	0					
ANR	2920735	PtrMemberAccess	list -> nb_elem		2920623	1					
ANR	2920736	Identifier	list		2920623	0					
ANR	2920737	Identifier	nb_elem		2920623	1					
ANR	2920738	Expression	"j ++ , ptr += syntax [ i ] . list_elem_size"	39:21:662:697	2920623	2	True				
ANR	2920739	PostIncDecOperationExpression	j ++		2920623	0					
ANR	2920740	Identifier	j		2920623	0					
ANR	2920741	IncDec	++		2920623	1					
ANR	2920742	AssignmentExpression	ptr += syntax [ i ] . list_elem_size		2920623	1		+=			
ANR	2920743	Identifier	ptr		2920623	0					
ANR	2920744	MemberAccess	syntax [ i ] . list_elem_size		2920623	1					
ANR	2920745	ArrayIndexing	syntax [ i ]		2920623	0					
ANR	2920746	Identifier	syntax		2920623	0					
ANR	2920747	Identifier	i		2920623	1					
ANR	2920748	Identifier	list_elem_size		2920623	1					
ANR	2920749	ExpressionStatement	"ebml_free ( syntax [ i ] . def . n , ptr )"	41:20:721:752	2920623	3	True				
ANR	2920750	CallExpression	"ebml_free ( syntax [ i ] . def . n , ptr )"		2920623	0					
ANR	2920751	Callee	ebml_free		2920623	0					
ANR	2920752	Identifier	ebml_free		2920623	0					
ANR	2920753	ArgumentList	syntax [ i ] . def . n		2920623	1					
ANR	2920754	Argument	syntax [ i ] . def . n		2920623	0					
ANR	2920755	MemberAccess	syntax [ i ] . def . n		2920623	0					
ANR	2920756	MemberAccess	syntax [ i ] . def		2920623	0					
ANR	2920757	ArrayIndexing	syntax [ i ]		2920623	0					
ANR	2920758	Identifier	syntax		2920623	0					
ANR	2920759	Identifier	i		2920623	1					
ANR	2920760	Identifier	def		2920623	1					
ANR	2920761	Identifier	n		2920623	1					
ANR	2920762	Argument	ptr		2920623	1					
ANR	2920763	Identifier	ptr		2920623	0					
ANR	2920764	ExpressionStatement	av_freep ( & list -> elem )	43:16:771:792	2920623	3	True				
ANR	2920765	CallExpression	av_freep ( & list -> elem )		2920623	0					
ANR	2920766	Callee	av_freep		2920623	0					
ANR	2920767	Identifier	av_freep		2920623	0					
ANR	2920768	ArgumentList	& list -> elem		2920623	1					
ANR	2920769	Argument	& list -> elem		2920623	0					
ANR	2920770	UnaryOperationExpression	& list -> elem		2920623	0					
ANR	2920771	UnaryOperator	&		2920623	0					
ANR	2920772	PtrMemberAccess	list -> elem		2920623	1					
ANR	2920773	Identifier	list		2920623	0					
ANR	2920774	Identifier	elem		2920623	1					
ANR	2920775	ElseStatement	else		2920623	0					
ANR	2920776	ExpressionStatement	"ebml_free ( syntax [ i ] . def . n , data_off )"	48:16:832:868	2920623	0	True				
ANR	2920777	CallExpression	"ebml_free ( syntax [ i ] . def . n , data_off )"		2920623	0					
ANR	2920778	Callee	ebml_free		2920623	0					
ANR	2920779	Identifier	ebml_free		2920623	0					
ANR	2920780	ArgumentList	syntax [ i ] . def . n		2920623	1					
ANR	2920781	Argument	syntax [ i ] . def . n		2920623	0					
ANR	2920782	MemberAccess	syntax [ i ] . def . n		2920623	0					
ANR	2920783	MemberAccess	syntax [ i ] . def		2920623	0					
ANR	2920784	ArrayIndexing	syntax [ i ]		2920623	0					
ANR	2920785	Identifier	syntax		2920623	0					
ANR	2920786	Identifier	i		2920623	1					
ANR	2920787	Identifier	def		2920623	1					
ANR	2920788	Identifier	n		2920623	1					
ANR	2920789	Argument	data_off		2920623	1					
ANR	2920790	Identifier	data_off		2920623	0					
ANR	2920791	Label	default :	50:8:879:886	2920623	10	True				
ANR	2920792	Identifier	default		2920623	0					
ANR	2920793	BreakStatement	break ;	52:12:901:906	2920623	11	True				
ANR	2920794	ReturnType	static void		2920623	1					
ANR	2920795	Identifier	ebml_free		2920623	2					
ANR	2920796	ParameterList	"EbmlSyntax * syntax , void * data"		2920623	3					
ANR	2920797	Parameter	EbmlSyntax * syntax	1:22:22:39	2920623	0	True				
ANR	2920798	ParameterType	EbmlSyntax *		2920623	0					
ANR	2920799	Identifier	syntax		2920623	1					
ANR	2920800	Parameter	void * data	1:42:42:51	2920623	1	True				
ANR	2920801	ParameterType	void *		2920623	0					
ANR	2920802	Identifier	data		2920623	1					
ANR	2920803	CFGEntryNode	ENTRY		2920623		True				
ANR	2920804	CFGExitNode	EXIT		2920623		True				
ANR	2920805	Symbol	list -> elem		2920623						
ANR	2920806	Symbol	list -> nb_elem		2920623						
ANR	2920807	Symbol	syntax [ i ] . def . n		2920623						
ANR	2920808	Symbol	syntax [ i ] . data_offset		2920623						
ANR	2920809	Symbol	data		2920623						
ANR	2920810	Symbol	i		2920623						
ANR	2920811	Symbol	j		2920623						
ANR	2920812	Symbol	* syntax		2920623						
ANR	2920813	Symbol	syntax [ i ] . def		2920623						
ANR	2920814	Symbol	syntax [ i ] . type		2920623						
ANR	2920815	Symbol	list		2920623						
ANR	2920816	Symbol	syntax [ i ] . list_elem_size		2920623						
ANR	2920817	Symbol	ptr		2920623						
ANR	2920818	Symbol	* i		2920623						
ANR	2920819	Symbol	* list		2920623						
ANR	2920820	Symbol	syntax [ i ] . id		2920623						
ANR	2920821	Symbol	syntax		2920623						
ANR	2920822	Symbol	data_off		2920623						
ANR	2920823	Symbol	& ( ( EbmlBin * ) data_off ) -> data		2920623						
ANR	2920824	Symbol	& list -> elem		2920623						
