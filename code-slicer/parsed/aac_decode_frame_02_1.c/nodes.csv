command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	326036	File	/home/p4ultr4n/workplace/ReVeal/raw_code/aac_decode_frame_02_1.c								
ANR	326037	Function	aac_decode_frame	1:0:0:4414							
ANR	326038	FunctionDef	"aac_decode_frame (AVCodecContext * avccontext , void * data , int * data_size , AVPacket * avpkt)"		326037	0					
ANR	326039	CompoundStatement		5:0:131:4414	326037	0					
ANR	326040	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:138:170	326037	0	True				
ANR	326041	IdentifierDecl	* buf = avpkt -> data		326037	0					
ANR	326042	IdentifierDeclType	const uint8_t *		326037	0					
ANR	326043	Identifier	buf		326037	1					
ANR	326044	AssignmentExpression	* buf = avpkt -> data		326037	2		=			
ANR	326045	Identifier	buf		326037	0					
ANR	326046	PtrMemberAccess	avpkt -> data		326037	1					
ANR	326047	Identifier	avpkt		326037	0					
ANR	326048	Identifier	data		326037	1					
ANR	326049	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:177:203	326037	1	True				
ANR	326050	IdentifierDecl	buf_size = avpkt -> size		326037	0					
ANR	326051	IdentifierDeclType	int		326037	0					
ANR	326052	Identifier	buf_size		326037	1					
ANR	326053	AssignmentExpression	buf_size = avpkt -> size		326037	2		=			
ANR	326054	Identifier	buf_size		326037	0					
ANR	326055	PtrMemberAccess	avpkt -> size		326037	1					
ANR	326056	Identifier	avpkt		326037	0					
ANR	326057	Identifier	size		326037	1					
ANR	326058	IdentifierDeclStatement	AACContext * ac = avccontext -> priv_data ;	11:4:210:248	326037	2	True				
ANR	326059	IdentifierDecl	* ac = avccontext -> priv_data		326037	0					
ANR	326060	IdentifierDeclType	AACContext *		326037	0					
ANR	326061	Identifier	ac		326037	1					
ANR	326062	AssignmentExpression	* ac = avccontext -> priv_data		326037	2		=			
ANR	326063	Identifier	ac		326037	0					
ANR	326064	PtrMemberAccess	avccontext -> priv_data		326037	1					
ANR	326065	Identifier	avccontext		326037	0					
ANR	326066	Identifier	priv_data		326037	1					
ANR	326067	IdentifierDeclStatement	"ChannelElement * che = NULL , * che_prev = NULL ;"	13:4:255:299	326037	3	True				
ANR	326068	IdentifierDecl	* che = NULL		326037	0					
ANR	326069	IdentifierDeclType	ChannelElement *		326037	0					
ANR	326070	Identifier	che		326037	1					
ANR	326071	AssignmentExpression	* che = NULL		326037	2		=			
ANR	326072	Identifier	NULL		326037	0					
ANR	326073	Identifier	NULL		326037	1					
ANR	326074	IdentifierDecl	* che_prev = NULL		326037	1					
ANR	326075	IdentifierDeclType	ChannelElement *		326037	0					
ANR	326076	Identifier	che_prev		326037	1					
ANR	326077	AssignmentExpression	* che_prev = NULL		326037	2		=			
ANR	326078	Identifier	NULL		326037	0					
ANR	326079	Identifier	NULL		326037	1					
ANR	326080	IdentifierDeclStatement	GetBitContext gb ;	15:4:306:322	326037	4	True				
ANR	326081	IdentifierDecl	gb		326037	0					
ANR	326082	IdentifierDeclType	GetBitContext		326037	0					
ANR	326083	Identifier	gb		326037	1					
ANR	326084	IdentifierDeclStatement	"enum RawDataBlockType elem_type , elem_type_prev = TYPE_END ;"	17:4:329:387	326037	5	True				
ANR	326085	IdentifierDecl	elem_type		326037	0					
ANR	326086	IdentifierDeclType	enum RawDataBlockType		326037	0					
ANR	326087	Identifier	elem_type		326037	1					
ANR	326088	IdentifierDecl	elem_type_prev = TYPE_END		326037	1					
ANR	326089	IdentifierDeclType	enum RawDataBlockType		326037	0					
ANR	326090	Identifier	elem_type_prev		326037	1					
ANR	326091	AssignmentExpression	elem_type_prev = TYPE_END		326037	2		=			
ANR	326092	Identifier	TYPE_END		326037	0					
ANR	326093	Identifier	TYPE_END		326037	1					
ANR	326094	IdentifierDeclStatement	"int err , elem_id , data_size_tmp ;"	19:4:394:425	326037	6	True				
ANR	326095	IdentifierDecl	err		326037	0					
ANR	326096	IdentifierDeclType	int		326037	0					
ANR	326097	Identifier	err		326037	1					
ANR	326098	IdentifierDecl	elem_id		326037	1					
ANR	326099	IdentifierDeclType	int		326037	0					
ANR	326100	Identifier	elem_id		326037	1					
ANR	326101	IdentifierDecl	data_size_tmp		326037	2					
ANR	326102	IdentifierDeclType	int		326037	0					
ANR	326103	Identifier	data_size_tmp		326037	1					
ANR	326104	IdentifierDeclStatement	int buf_consumed ;	21:4:432:448	326037	7	True				
ANR	326105	IdentifierDecl	buf_consumed		326037	0					
ANR	326106	IdentifierDeclType	int		326037	0					
ANR	326107	Identifier	buf_consumed		326037	1					
ANR	326108	IdentifierDeclStatement	"int samples = 1024 , multiplier ;"	23:4:455:485	326037	8	True				
ANR	326109	IdentifierDecl	samples = 1024		326037	0					
ANR	326110	IdentifierDeclType	int		326037	0					
ANR	326111	Identifier	samples		326037	1					
ANR	326112	AssignmentExpression	samples = 1024		326037	2		=			
ANR	326113	Identifier	samples		326037	0					
ANR	326114	PrimaryExpression	1024		326037	1					
ANR	326115	IdentifierDecl	multiplier		326037	1					
ANR	326116	IdentifierDeclType	int		326037	0					
ANR	326117	Identifier	multiplier		326037	1					
ANR	326118	IdentifierDeclStatement	int buf_offset ;	25:4:492:506	326037	9	True				
ANR	326119	IdentifierDecl	buf_offset		326037	0					
ANR	326120	IdentifierDeclType	int		326037	0					
ANR	326121	Identifier	buf_offset		326037	1					
ANR	326122	ExpressionStatement	"init_get_bits ( & gb , buf , buf_size * 8 )"	29:4:515:552	326037	10	True				
ANR	326123	CallExpression	"init_get_bits ( & gb , buf , buf_size * 8 )"		326037	0					
ANR	326124	Callee	init_get_bits		326037	0					
ANR	326125	Identifier	init_get_bits		326037	0					
ANR	326126	ArgumentList	& gb		326037	1					
ANR	326127	Argument	& gb		326037	0					
ANR	326128	UnaryOperationExpression	& gb		326037	0					
ANR	326129	UnaryOperator	&		326037	0					
ANR	326130	Identifier	gb		326037	1					
ANR	326131	Argument	buf		326037	1					
ANR	326132	Identifier	buf		326037	0					
ANR	326133	Argument	buf_size * 8		326037	2					
ANR	326134	MultiplicativeExpression	buf_size * 8		326037	0		*			
ANR	326135	Identifier	buf_size		326037	0					
ANR	326136	PrimaryExpression	8		326037	1					
ANR	326137	IfStatement	"if ( show_bits ( & gb , 12 ) == 0xfff )"		326037	11					
ANR	326138	Condition	"show_bits ( & gb , 12 ) == 0xfff"	33:8:565:591	326037	0	True				
ANR	326139	EqualityExpression	"show_bits ( & gb , 12 ) == 0xfff"		326037	0		==			
ANR	326140	CallExpression	"show_bits ( & gb , 12 )"		326037	0					
ANR	326141	Callee	show_bits		326037	0					
ANR	326142	Identifier	show_bits		326037	0					
ANR	326143	ArgumentList	& gb		326037	1					
ANR	326144	Argument	& gb		326037	0					
ANR	326145	UnaryOperationExpression	& gb		326037	0					
ANR	326146	UnaryOperator	&		326037	0					
ANR	326147	Identifier	gb		326037	1					
ANR	326148	Argument	12		326037	1					
ANR	326149	PrimaryExpression	12		326037	0					
ANR	326150	PrimaryExpression	0xfff		326037	1					
ANR	326151	CompoundStatement		29:37:462:462	326037	1					
ANR	326152	IfStatement	"if ( parse_adts_frame_header ( ac , & gb ) < 0 )"		326037	0					
ANR	326153	Condition	"parse_adts_frame_header ( ac , & gb ) < 0"	35:12:609:644	326037	0	True				
ANR	326154	RelationalExpression	"parse_adts_frame_header ( ac , & gb ) < 0"		326037	0		<			
ANR	326155	CallExpression	"parse_adts_frame_header ( ac , & gb )"		326037	0					
ANR	326156	Callee	parse_adts_frame_header		326037	0					
ANR	326157	Identifier	parse_adts_frame_header		326037	0					
ANR	326158	ArgumentList	ac		326037	1					
ANR	326159	Argument	ac		326037	0					
ANR	326160	Identifier	ac		326037	0					
ANR	326161	Argument	& gb		326037	1					
ANR	326162	UnaryOperationExpression	& gb		326037	0					
ANR	326163	UnaryOperator	&		326037	0					
ANR	326164	Identifier	gb		326037	1					
ANR	326165	PrimaryExpression	0		326037	1					
ANR	326166	CompoundStatement		31:50:515:515	326037	1					
ANR	326167	ExpressionStatement	"av_log ( avccontext , AV_LOG_ERROR , ""Error decoding AAC frame header.\\n"" )"	37:12:662:732	326037	0	True				
ANR	326168	CallExpression	"av_log ( avccontext , AV_LOG_ERROR , ""Error decoding AAC frame header.\\n"" )"		326037	0					
ANR	326169	Callee	av_log		326037	0					
ANR	326170	Identifier	av_log		326037	0					
ANR	326171	ArgumentList	avccontext		326037	1					
ANR	326172	Argument	avccontext		326037	0					
ANR	326173	Identifier	avccontext		326037	0					
ANR	326174	Argument	AV_LOG_ERROR		326037	1					
ANR	326175	Identifier	AV_LOG_ERROR		326037	0					
ANR	326176	Argument	"""Error decoding AAC frame header.\\n"""		326037	2					
ANR	326177	PrimaryExpression	"""Error decoding AAC frame header.\\n"""		326037	0					
ANR	326178	ReturnStatement	return - 1 ;	39:12:747:756	326037	1	True				
ANR	326179	UnaryOperationExpression	- 1		326037	0					
ANR	326180	UnaryOperator	-		326037	0					
ANR	326181	PrimaryExpression	1		326037	1					
ANR	326182	IfStatement	if ( ac -> m4ac . sampling_index > 12 )		326037	1					
ANR	326183	Condition	ac -> m4ac . sampling_index > 12	43:12:782:809	326037	0	True				
ANR	326184	RelationalExpression	ac -> m4ac . sampling_index > 12		326037	0		>			
ANR	326185	MemberAccess	ac -> m4ac . sampling_index		326037	0					
ANR	326186	PtrMemberAccess	ac -> m4ac		326037	0					
ANR	326187	Identifier	ac		326037	0					
ANR	326188	Identifier	m4ac		326037	1					
ANR	326189	Identifier	sampling_index		326037	1					
ANR	326190	PrimaryExpression	12		326037	1					
ANR	326191	CompoundStatement		39:42:680:680	326037	1					
ANR	326192	ExpressionStatement	"av_log ( ac -> avccontext , AV_LOG_ERROR , ""invalid sampling rate index %d\\n"" , ac -> m4ac . sampling_index )"	45:12:827:924	326037	0	True				
ANR	326193	CallExpression	"av_log ( ac -> avccontext , AV_LOG_ERROR , ""invalid sampling rate index %d\\n"" , ac -> m4ac . sampling_index )"		326037	0					
ANR	326194	Callee	av_log		326037	0					
ANR	326195	Identifier	av_log		326037	0					
ANR	326196	ArgumentList	ac -> avccontext		326037	1					
ANR	326197	Argument	ac -> avccontext		326037	0					
ANR	326198	PtrMemberAccess	ac -> avccontext		326037	0					
ANR	326199	Identifier	ac		326037	0					
ANR	326200	Identifier	avccontext		326037	1					
ANR	326201	Argument	AV_LOG_ERROR		326037	1					
ANR	326202	Identifier	AV_LOG_ERROR		326037	0					
ANR	326203	Argument	"""invalid sampling rate index %d\\n"""		326037	2					
ANR	326204	PrimaryExpression	"""invalid sampling rate index %d\\n"""		326037	0					
ANR	326205	Argument	ac -> m4ac . sampling_index		326037	3					
ANR	326206	MemberAccess	ac -> m4ac . sampling_index		326037	0					
ANR	326207	PtrMemberAccess	ac -> m4ac		326037	0					
ANR	326208	Identifier	ac		326037	0					
ANR	326209	Identifier	m4ac		326037	1					
ANR	326210	Identifier	sampling_index		326037	1					
ANR	326211	ReturnStatement	return - 1 ;	47:12:939:948	326037	1	True				
ANR	326212	UnaryOperationExpression	- 1		326037	0					
ANR	326213	UnaryOperator	-		326037	0					
ANR	326214	PrimaryExpression	1		326037	1					
ANR	326215	WhileStatement	"while ( ( elem_type = get_bits ( & gb , 3 ) ) != TYPE_END )"		326037	12					
ANR	326216	Condition	"( elem_type = get_bits ( & gb , 3 ) ) != TYPE_END"	58:11:997:1038	326037	0	True				
ANR	326217	EqualityExpression	"( elem_type = get_bits ( & gb , 3 ) ) != TYPE_END"		326037	0		!=			
ANR	326218	AssignmentExpression	"elem_type = get_bits ( & gb , 3 )"		326037	0		=			
ANR	326219	Identifier	elem_type		326037	0					
ANR	326220	CallExpression	"get_bits ( & gb , 3 )"		326037	1					
ANR	326221	Callee	get_bits		326037	0					
ANR	326222	Identifier	get_bits		326037	0					
ANR	326223	ArgumentList	& gb		326037	1					
ANR	326224	Argument	& gb		326037	0					
ANR	326225	UnaryOperationExpression	& gb		326037	0					
ANR	326226	UnaryOperator	&		326037	0					
ANR	326227	Identifier	gb		326037	1					
ANR	326228	Argument	3		326037	1					
ANR	326229	PrimaryExpression	3		326037	0					
ANR	326230	Identifier	TYPE_END		326037	1					
ANR	326231	CompoundStatement		54:55:909:909	326037	1					
ANR	326232	ExpressionStatement	"elem_id = get_bits ( & gb , 4 )"	60:8:1052:1078	326037	0	True				
ANR	326233	AssignmentExpression	"elem_id = get_bits ( & gb , 4 )"		326037	0		=			
ANR	326234	Identifier	elem_id		326037	0					
ANR	326235	CallExpression	"get_bits ( & gb , 4 )"		326037	1					
ANR	326236	Callee	get_bits		326037	0					
ANR	326237	Identifier	get_bits		326037	0					
ANR	326238	ArgumentList	& gb		326037	1					
ANR	326239	Argument	& gb		326037	0					
ANR	326240	UnaryOperationExpression	& gb		326037	0					
ANR	326241	UnaryOperator	&		326037	0					
ANR	326242	Identifier	gb		326037	1					
ANR	326243	Argument	4		326037	1					
ANR	326244	PrimaryExpression	4		326037	0					
ANR	326245	IfStatement	"if ( elem_type < TYPE_DSE && ! ( che = get_che ( ac , elem_type , elem_id ) ) )"		326037	1					
ANR	326246	Condition	"elem_type < TYPE_DSE && ! ( che = get_che ( ac , elem_type , elem_id ) )"	64:12:1095:1156	326037	0	True				
ANR	326247	AndExpression	"elem_type < TYPE_DSE && ! ( che = get_che ( ac , elem_type , elem_id ) )"		326037	0		&&			
ANR	326248	RelationalExpression	elem_type < TYPE_DSE		326037	0		<			
ANR	326249	Identifier	elem_type		326037	0					
ANR	326250	Identifier	TYPE_DSE		326037	1					
ANR	326251	UnaryOperationExpression	"! ( che = get_che ( ac , elem_type , elem_id ) )"		326037	1					
ANR	326252	UnaryOperator	!		326037	0					
ANR	326253	AssignmentExpression	"che = get_che ( ac , elem_type , elem_id )"		326037	1		=			
ANR	326254	Identifier	che		326037	0					
ANR	326255	CallExpression	"get_che ( ac , elem_type , elem_id )"		326037	1					
ANR	326256	Callee	get_che		326037	0					
ANR	326257	Identifier	get_che		326037	0					
ANR	326258	ArgumentList	ac		326037	1					
ANR	326259	Argument	ac		326037	0					
ANR	326260	Identifier	ac		326037	0					
ANR	326261	Argument	elem_type		326037	1					
ANR	326262	Identifier	elem_type		326037	0					
ANR	326263	Argument	elem_id		326037	2					
ANR	326264	Identifier	elem_id		326037	0					
ANR	326265	CompoundStatement		60:76:1027:1027	326037	1					
ANR	326266	ExpressionStatement	"av_log ( ac -> avccontext , AV_LOG_ERROR , ""channel element %d.%d is not allocated\\n"" , elem_type , elem_id )"	66:12:1174:1274	326037	0	True				
ANR	326267	CallExpression	"av_log ( ac -> avccontext , AV_LOG_ERROR , ""channel element %d.%d is not allocated\\n"" , elem_type , elem_id )"		326037	0					
ANR	326268	Callee	av_log		326037	0					
ANR	326269	Identifier	av_log		326037	0					
ANR	326270	ArgumentList	ac -> avccontext		326037	1					
ANR	326271	Argument	ac -> avccontext		326037	0					
ANR	326272	PtrMemberAccess	ac -> avccontext		326037	0					
ANR	326273	Identifier	ac		326037	0					
ANR	326274	Identifier	avccontext		326037	1					
ANR	326275	Argument	AV_LOG_ERROR		326037	1					
ANR	326276	Identifier	AV_LOG_ERROR		326037	0					
ANR	326277	Argument	"""channel element %d.%d is not allocated\\n"""		326037	2					
ANR	326278	PrimaryExpression	"""channel element %d.%d is not allocated\\n"""		326037	0					
ANR	326279	Argument	elem_type		326037	3					
ANR	326280	Identifier	elem_type		326037	0					
ANR	326281	Argument	elem_id		326037	4					
ANR	326282	Identifier	elem_id		326037	0					
ANR	326283	ReturnStatement	return - 1 ;	68:12:1289:1298	326037	1	True				
ANR	326284	UnaryOperationExpression	- 1		326037	0					
ANR	326285	UnaryOperator	-		326037	0					
ANR	326286	PrimaryExpression	1		326037	1					
ANR	326287	SwitchStatement	switch ( elem_type )		326037	2					
ANR	326288	Condition	elem_type	74:16:1330:1338	326037	0	True				
ANR	326289	Identifier	elem_type		326037	0					
ANR	326290	CompoundStatement		70:27:1209:1209	326037	1					
ANR	326291	Label	case TYPE_SCE :	78:8:1354:1367	326037	0	True				
ANR	326292	Identifier	TYPE_SCE		326037	0					
ANR	326293	ExpressionStatement	"err = decode_ics ( ac , & che -> ch [ 0 ] , & gb , 0 , 0 )"	80:12:1382:1426	326037	1	True				
ANR	326294	AssignmentExpression	"err = decode_ics ( ac , & che -> ch [ 0 ] , & gb , 0 , 0 )"		326037	0		=			
ANR	326295	Identifier	err		326037	0					
ANR	326296	CallExpression	"decode_ics ( ac , & che -> ch [ 0 ] , & gb , 0 , 0 )"		326037	1					
ANR	326297	Callee	decode_ics		326037	0					
ANR	326298	Identifier	decode_ics		326037	0					
ANR	326299	ArgumentList	ac		326037	1					
ANR	326300	Argument	ac		326037	0					
ANR	326301	Identifier	ac		326037	0					
ANR	326302	Argument	& che -> ch [ 0 ]		326037	1					
ANR	326303	UnaryOperationExpression	& che -> ch [ 0 ]		326037	0					
ANR	326304	UnaryOperator	&		326037	0					
ANR	326305	ArrayIndexing	che -> ch [ 0 ]		326037	1					
ANR	326306	PtrMemberAccess	che -> ch		326037	0					
ANR	326307	Identifier	che		326037	0					
ANR	326308	Identifier	ch		326037	1					
ANR	326309	PrimaryExpression	0		326037	1					
ANR	326310	Argument	& gb		326037	2					
ANR	326311	UnaryOperationExpression	& gb		326037	0					
ANR	326312	UnaryOperator	&		326037	0					
ANR	326313	Identifier	gb		326037	1					
ANR	326314	Argument	0		326037	3					
ANR	326315	PrimaryExpression	0		326037	0					
ANR	326316	Argument	0		326037	4					
ANR	326317	PrimaryExpression	0		326037	0					
ANR	326318	BreakStatement	break ;	82:12:1441:1446	326037	2	True				
ANR	326319	Label	case TYPE_CPE :	86:8:1459:1472	326037	3	True				
ANR	326320	Identifier	TYPE_CPE		326037	0					
ANR	326321	ExpressionStatement	"err = decode_cpe ( ac , & gb , che )"	88:12:1487:1517	326037	4	True				
ANR	326322	AssignmentExpression	"err = decode_cpe ( ac , & gb , che )"		326037	0		=			
ANR	326323	Identifier	err		326037	0					
ANR	326324	CallExpression	"decode_cpe ( ac , & gb , che )"		326037	1					
ANR	326325	Callee	decode_cpe		326037	0					
ANR	326326	Identifier	decode_cpe		326037	0					
ANR	326327	ArgumentList	ac		326037	1					
ANR	326328	Argument	ac		326037	0					
ANR	326329	Identifier	ac		326037	0					
ANR	326330	Argument	& gb		326037	1					
ANR	326331	UnaryOperationExpression	& gb		326037	0					
ANR	326332	UnaryOperator	&		326037	0					
ANR	326333	Identifier	gb		326037	1					
ANR	326334	Argument	che		326037	2					
ANR	326335	Identifier	che		326037	0					
ANR	326336	BreakStatement	break ;	90:12:1532:1537	326037	5	True				
ANR	326337	Label	case TYPE_CCE :	94:8:1550:1563	326037	6	True				
ANR	326338	Identifier	TYPE_CCE		326037	0					
ANR	326339	ExpressionStatement	"err = decode_cce ( ac , & gb , che )"	96:12:1578:1608	326037	7	True				
ANR	326340	AssignmentExpression	"err = decode_cce ( ac , & gb , che )"		326037	0		=			
ANR	326341	Identifier	err		326037	0					
ANR	326342	CallExpression	"decode_cce ( ac , & gb , che )"		326037	1					
ANR	326343	Callee	decode_cce		326037	0					
ANR	326344	Identifier	decode_cce		326037	0					
ANR	326345	ArgumentList	ac		326037	1					
ANR	326346	Argument	ac		326037	0					
ANR	326347	Identifier	ac		326037	0					
ANR	326348	Argument	& gb		326037	1					
ANR	326349	UnaryOperationExpression	& gb		326037	0					
ANR	326350	UnaryOperator	&		326037	0					
ANR	326351	Identifier	gb		326037	1					
ANR	326352	Argument	che		326037	2					
ANR	326353	Identifier	che		326037	0					
ANR	326354	BreakStatement	break ;	98:12:1623:1628	326037	8	True				
ANR	326355	Label	case TYPE_LFE :	102:8:1641:1654	326037	9	True				
ANR	326356	Identifier	TYPE_LFE		326037	0					
ANR	326357	ExpressionStatement	"err = decode_ics ( ac , & che -> ch [ 0 ] , & gb , 0 , 0 )"	104:12:1669:1713	326037	10	True				
ANR	326358	AssignmentExpression	"err = decode_ics ( ac , & che -> ch [ 0 ] , & gb , 0 , 0 )"		326037	0		=			
ANR	326359	Identifier	err		326037	0					
ANR	326360	CallExpression	"decode_ics ( ac , & che -> ch [ 0 ] , & gb , 0 , 0 )"		326037	1					
ANR	326361	Callee	decode_ics		326037	0					
ANR	326362	Identifier	decode_ics		326037	0					
ANR	326363	ArgumentList	ac		326037	1					
ANR	326364	Argument	ac		326037	0					
ANR	326365	Identifier	ac		326037	0					
ANR	326366	Argument	& che -> ch [ 0 ]		326037	1					
ANR	326367	UnaryOperationExpression	& che -> ch [ 0 ]		326037	0					
ANR	326368	UnaryOperator	&		326037	0					
ANR	326369	ArrayIndexing	che -> ch [ 0 ]		326037	1					
ANR	326370	PtrMemberAccess	che -> ch		326037	0					
ANR	326371	Identifier	che		326037	0					
ANR	326372	Identifier	ch		326037	1					
ANR	326373	PrimaryExpression	0		326037	1					
ANR	326374	Argument	& gb		326037	2					
ANR	326375	UnaryOperationExpression	& gb		326037	0					
ANR	326376	UnaryOperator	&		326037	0					
ANR	326377	Identifier	gb		326037	1					
ANR	326378	Argument	0		326037	3					
ANR	326379	PrimaryExpression	0		326037	0					
ANR	326380	Argument	0		326037	4					
ANR	326381	PrimaryExpression	0		326037	0					
ANR	326382	BreakStatement	break ;	106:12:1728:1733	326037	11	True				
ANR	326383	Label	case TYPE_DSE :	110:8:1746:1759	326037	12	True				
ANR	326384	Identifier	TYPE_DSE		326037	0					
ANR	326385	ExpressionStatement	"err = skip_data_stream_element ( ac , & gb )"	112:12:1774:1813	326037	13	True				
ANR	326386	AssignmentExpression	"err = skip_data_stream_element ( ac , & gb )"		326037	0		=			
ANR	326387	Identifier	err		326037	0					
ANR	326388	CallExpression	"skip_data_stream_element ( ac , & gb )"		326037	1					
ANR	326389	Callee	skip_data_stream_element		326037	0					
ANR	326390	Identifier	skip_data_stream_element		326037	0					
ANR	326391	ArgumentList	ac		326037	1					
ANR	326392	Argument	ac		326037	0					
ANR	326393	Identifier	ac		326037	0					
ANR	326394	Argument	& gb		326037	1					
ANR	326395	UnaryOperationExpression	& gb		326037	0					
ANR	326396	UnaryOperator	&		326037	0					
ANR	326397	Identifier	gb		326037	1					
ANR	326398	BreakStatement	break ;	114:12:1828:1833	326037	14	True				
ANR	326399	Label	case TYPE_PCE :	118:8:1846:1859	326037	15	True				
ANR	326400	Identifier	TYPE_PCE		326037	0					
ANR	326401	CompoundStatement		114:23:1729:1729	326037	16					
ANR	326402	Statement	enum	120:12:1876:1879	326037	0	True				
ANR	326403	Statement	ChannelPosition	120:17:1881:1895	326037	1	True				
ANR	326404	ExpressionStatement	new_che_pos [ 4 ] [ MAX_ELEM_ID ]	120:33:1897:1924	326037	2	True				
ANR	326405	ArrayIndexing	new_che_pos [ 4 ] [ MAX_ELEM_ID ]		326037	0					
ANR	326406	ArrayIndexing	new_che_pos [ 4 ]		326037	0					
ANR	326407	Identifier	new_che_pos		326037	0					
ANR	326408	PrimaryExpression	4		326037	1					
ANR	326409	Identifier	MAX_ELEM_ID		326037	1					
ANR	326410	ExpressionStatement	"memset ( new_che_pos , 0 , 4 * MAX_ELEM_ID * sizeof ( new_che_pos [ 0 ] [ 0 ] ) )"	122:12:1939:2006	326037	3	True				
ANR	326411	CallExpression	"memset ( new_che_pos , 0 , 4 * MAX_ELEM_ID * sizeof ( new_che_pos [ 0 ] [ 0 ] ) )"		326037	0					
ANR	326412	Callee	memset		326037	0					
ANR	326413	Identifier	memset		326037	0					
ANR	326414	ArgumentList	new_che_pos		326037	1					
ANR	326415	Argument	new_che_pos		326037	0					
ANR	326416	Identifier	new_che_pos		326037	0					
ANR	326417	Argument	0		326037	1					
ANR	326418	PrimaryExpression	0		326037	0					
ANR	326419	Argument	4 * MAX_ELEM_ID * sizeof ( new_che_pos [ 0 ] [ 0 ] )		326037	2					
ANR	326420	MultiplicativeExpression	4 * MAX_ELEM_ID * sizeof ( new_che_pos [ 0 ] [ 0 ] )		326037	0		*			
ANR	326421	PrimaryExpression	4		326037	0					
ANR	326422	MultiplicativeExpression	MAX_ELEM_ID * sizeof ( new_che_pos [ 0 ] [ 0 ] )		326037	1		*			
ANR	326423	Identifier	MAX_ELEM_ID		326037	0					
ANR	326424	SizeofExpression	sizeof ( new_che_pos [ 0 ] [ 0 ] )		326037	1					
ANR	326425	Sizeof	sizeof		326037	0					
ANR	326426	ArrayIndexing	new_che_pos [ 0 ] [ 0 ]		326037	1					
ANR	326427	ArrayIndexing	new_che_pos [ 0 ]		326037	0					
ANR	326428	Identifier	new_che_pos		326037	0					
ANR	326429	PrimaryExpression	0		326037	1					
ANR	326430	PrimaryExpression	0		326037	1					
ANR	326431	IfStatement	"if ( ( err = decode_pce ( ac , new_che_pos , & gb ) ) )"		326037	4					
ANR	326432	Condition	"err = decode_pce ( ac , new_che_pos , & gb )"	124:16:2025:2064	326037	0	True				
ANR	326433	AssignmentExpression	"err = decode_pce ( ac , new_che_pos , & gb )"		326037	0		=			
ANR	326434	Identifier	err		326037	0					
ANR	326435	CallExpression	"decode_pce ( ac , new_che_pos , & gb )"		326037	1					
ANR	326436	Callee	decode_pce		326037	0					
ANR	326437	Identifier	decode_pce		326037	0					
ANR	326438	ArgumentList	ac		326037	1					
ANR	326439	Argument	ac		326037	0					
ANR	326440	Identifier	ac		326037	0					
ANR	326441	Argument	new_che_pos		326037	1					
ANR	326442	Identifier	new_che_pos		326037	0					
ANR	326443	Argument	& gb		326037	2					
ANR	326444	UnaryOperationExpression	& gb		326037	0					
ANR	326445	UnaryOperator	&		326037	0					
ANR	326446	Identifier	gb		326037	1					
ANR	326447	BreakStatement	break ;	126:16:2084:2089	326037	1	True				
ANR	326448	IfStatement	if ( ac -> output_configured > OC_TRIAL_PCE )		326037	5					
ANR	326449	Condition	ac -> output_configured > OC_TRIAL_PCE	128:16:2108:2143	326037	0	True				
ANR	326450	RelationalExpression	ac -> output_configured > OC_TRIAL_PCE		326037	0		>			
ANR	326451	PtrMemberAccess	ac -> output_configured		326037	0					
ANR	326452	Identifier	ac		326037	0					
ANR	326453	Identifier	output_configured		326037	1					
ANR	326454	Identifier	OC_TRIAL_PCE		326037	1					
ANR	326455	ExpressionStatement	"av_log ( avccontext , AV_LOG_ERROR , ""Not evaluating a further program_config_element as this construct is dubious at best.\\n"" )"	130:16:2163:2310	326037	1	True				
ANR	326456	CallExpression	"av_log ( avccontext , AV_LOG_ERROR , ""Not evaluating a further program_config_element as this construct is dubious at best.\\n"" )"		326037	0					
ANR	326457	Callee	av_log		326037	0					
ANR	326458	Identifier	av_log		326037	0					
ANR	326459	ArgumentList	avccontext		326037	1					
ANR	326460	Argument	avccontext		326037	0					
ANR	326461	Identifier	avccontext		326037	0					
ANR	326462	Argument	AV_LOG_ERROR		326037	1					
ANR	326463	Identifier	AV_LOG_ERROR		326037	0					
ANR	326464	Argument	"""Not evaluating a further program_config_element as this construct is dubious at best.\\n"""		326037	2					
ANR	326465	PrimaryExpression	"""Not evaluating a further program_config_element as this construct is dubious at best.\\n"""		326037	0					
ANR	326466	ElseStatement	else		326037	0					
ANR	326467	ExpressionStatement	"err = output_configure ( ac , ac -> che_pos , new_che_pos , 0 , OC_TRIAL_PCE )"	136:16:2347:2416	326037	0	True				
ANR	326468	AssignmentExpression	"err = output_configure ( ac , ac -> che_pos , new_che_pos , 0 , OC_TRIAL_PCE )"		326037	0		=			
ANR	326469	Identifier	err		326037	0					
ANR	326470	CallExpression	"output_configure ( ac , ac -> che_pos , new_che_pos , 0 , OC_TRIAL_PCE )"		326037	1					
ANR	326471	Callee	output_configure		326037	0					
ANR	326472	Identifier	output_configure		326037	0					
ANR	326473	ArgumentList	ac		326037	1					
ANR	326474	Argument	ac		326037	0					
ANR	326475	Identifier	ac		326037	0					
ANR	326476	Argument	ac -> che_pos		326037	1					
ANR	326477	PtrMemberAccess	ac -> che_pos		326037	0					
ANR	326478	Identifier	ac		326037	0					
ANR	326479	Identifier	che_pos		326037	1					
ANR	326480	Argument	new_che_pos		326037	2					
ANR	326481	Identifier	new_che_pos		326037	0					
ANR	326482	Argument	0		326037	3					
ANR	326483	PrimaryExpression	0		326037	0					
ANR	326484	Argument	OC_TRIAL_PCE		326037	4					
ANR	326485	Identifier	OC_TRIAL_PCE		326037	0					
ANR	326486	BreakStatement	break ;	138:12:2431:2436	326037	6	True				
ANR	326487	Label	case TYPE_FIL :	144:8:2460:2473	326037	17	True				
ANR	326488	Identifier	TYPE_FIL		326037	0					
ANR	326489	IfStatement	if ( elem_id == 15 )		326037	18					
ANR	326490	Condition	elem_id == 15	146:16:2492:2504	326037	0	True				
ANR	326491	EqualityExpression	elem_id == 15		326037	0		==			
ANR	326492	Identifier	elem_id		326037	0					
ANR	326493	PrimaryExpression	15		326037	1					
ANR	326494	ExpressionStatement	"elem_id += get_bits ( & gb , 8 ) - 1"	148:16:2524:2555	326037	1	True				
ANR	326495	AssignmentExpression	"elem_id += get_bits ( & gb , 8 ) - 1"		326037	0		+=			
ANR	326496	Identifier	elem_id		326037	0					
ANR	326497	AdditiveExpression	"get_bits ( & gb , 8 ) - 1"		326037	1		-			
ANR	326498	CallExpression	"get_bits ( & gb , 8 )"		326037	0					
ANR	326499	Callee	get_bits		326037	0					
ANR	326500	Identifier	get_bits		326037	0					
ANR	326501	ArgumentList	& gb		326037	1					
ANR	326502	Argument	& gb		326037	0					
ANR	326503	UnaryOperationExpression	& gb		326037	0					
ANR	326504	UnaryOperator	&		326037	0					
ANR	326505	Identifier	gb		326037	1					
ANR	326506	Argument	8		326037	1					
ANR	326507	PrimaryExpression	8		326037	0					
ANR	326508	PrimaryExpression	1		326037	1					
ANR	326509	IfStatement	if ( get_bits_left ( & gb ) < 8 * elem_id )		326037	19					
ANR	326510	Condition	get_bits_left ( & gb ) < 8 * elem_id	150:16:2574:2605	326037	0	True				
ANR	326511	RelationalExpression	get_bits_left ( & gb ) < 8 * elem_id		326037	0		<			
ANR	326512	CallExpression	get_bits_left ( & gb )		326037	0					
ANR	326513	Callee	get_bits_left		326037	0					
ANR	326514	Identifier	get_bits_left		326037	0					
ANR	326515	ArgumentList	& gb		326037	1					
ANR	326516	Argument	& gb		326037	0					
ANR	326517	UnaryOperationExpression	& gb		326037	0					
ANR	326518	UnaryOperator	&		326037	0					
ANR	326519	Identifier	gb		326037	1					
ANR	326520	MultiplicativeExpression	8 * elem_id		326037	1		*			
ANR	326521	PrimaryExpression	8		326037	0					
ANR	326522	Identifier	elem_id		326037	1					
ANR	326523	CompoundStatement		146:50:2476:2476	326037	1					
ANR	326524	ExpressionStatement	"av_log ( avccontext , AV_LOG_ERROR , overread_err )"	152:20:2631:2677	326037	0	True				
ANR	326525	CallExpression	"av_log ( avccontext , AV_LOG_ERROR , overread_err )"		326037	0					
ANR	326526	Callee	av_log		326037	0					
ANR	326527	Identifier	av_log		326037	0					
ANR	326528	ArgumentList	avccontext		326037	1					
ANR	326529	Argument	avccontext		326037	0					
ANR	326530	Identifier	avccontext		326037	0					
ANR	326531	Argument	AV_LOG_ERROR		326037	1					
ANR	326532	Identifier	AV_LOG_ERROR		326037	0					
ANR	326533	Argument	overread_err		326037	2					
ANR	326534	Identifier	overread_err		326037	0					
ANR	326535	ReturnStatement	return - 1 ;	154:20:2700:2709	326037	1	True				
ANR	326536	UnaryOperationExpression	- 1		326037	0					
ANR	326537	UnaryOperator	-		326037	0					
ANR	326538	PrimaryExpression	1		326037	1					
ANR	326539	WhileStatement	while ( elem_id > 0 )		326037	20					
ANR	326540	Condition	elem_id > 0	158:19:2746:2756	326037	0	True				
ANR	326541	RelationalExpression	elem_id > 0		326037	0		>			
ANR	326542	Identifier	elem_id		326037	0					
ANR	326543	PrimaryExpression	0		326037	1					
ANR	326544	ExpressionStatement	"elem_id -= decode_extension_payload ( ac , & gb , elem_id , che_prev , elem_type_prev )"	160:16:2776:2855	326037	1	True				
ANR	326545	AssignmentExpression	"elem_id -= decode_extension_payload ( ac , & gb , elem_id , che_prev , elem_type_prev )"		326037	0		-=			
ANR	326546	Identifier	elem_id		326037	0					
ANR	326547	CallExpression	"decode_extension_payload ( ac , & gb , elem_id , che_prev , elem_type_prev )"		326037	1					
ANR	326548	Callee	decode_extension_payload		326037	0					
ANR	326549	Identifier	decode_extension_payload		326037	0					
ANR	326550	ArgumentList	ac		326037	1					
ANR	326551	Argument	ac		326037	0					
ANR	326552	Identifier	ac		326037	0					
ANR	326553	Argument	& gb		326037	1					
ANR	326554	UnaryOperationExpression	& gb		326037	0					
ANR	326555	UnaryOperator	&		326037	0					
ANR	326556	Identifier	gb		326037	1					
ANR	326557	Argument	elem_id		326037	2					
ANR	326558	Identifier	elem_id		326037	0					
ANR	326559	Argument	che_prev		326037	3					
ANR	326560	Identifier	che_prev		326037	0					
ANR	326561	Argument	elem_type_prev		326037	4					
ANR	326562	Identifier	elem_type_prev		326037	0					
ANR	326563	ExpressionStatement	err = 0	162:12:2870:2877	326037	21	True				
ANR	326564	AssignmentExpression	err = 0		326037	0		=			
ANR	326565	Identifier	err		326037	0					
ANR	326566	PrimaryExpression	0		326037	1					
ANR	326567	BreakStatement	break ;	164:12:2904:2909	326037	22	True				
ANR	326568	Label	default :	168:8:2922:2929	326037	23	True				
ANR	326569	Identifier	default		326037	0					
ANR	326570	ExpressionStatement	err = - 1	170:12:2944:2952	326037	24	True				
ANR	326571	AssignmentExpression	err = - 1		326037	0		=			
ANR	326572	Identifier	err		326037	0					
ANR	326573	UnaryOperationExpression	- 1		326037	1					
ANR	326574	UnaryOperator	-		326037	0					
ANR	326575	PrimaryExpression	1		326037	1					
ANR	326576	BreakStatement	break ;	172:12:3017:3022	326037	25	True				
ANR	326577	ExpressionStatement	che_prev = che	178:8:3046:3066	326037	3	True				
ANR	326578	AssignmentExpression	che_prev = che		326037	0		=			
ANR	326579	Identifier	che_prev		326037	0					
ANR	326580	Identifier	che		326037	1					
ANR	326581	ExpressionStatement	elem_type_prev = elem_type	180:8:3077:3103	326037	4	True				
ANR	326582	AssignmentExpression	elem_type_prev = elem_type		326037	0		=			
ANR	326583	Identifier	elem_type_prev		326037	0					
ANR	326584	Identifier	elem_type		326037	1					
ANR	326585	IfStatement	if ( err )		326037	5					
ANR	326586	Condition	err	184:12:3120:3122	326037	0	True				
ANR	326587	Identifier	err		326037	0					
ANR	326588	ReturnStatement	return err ;	186:12:3138:3148	326037	1	True				
ANR	326589	Identifier	err		326037	0					
ANR	326590	IfStatement	if ( get_bits_left ( & gb ) < 3 )		326037	6					
ANR	326591	Condition	get_bits_left ( & gb ) < 3	190:12:3165:3186	326037	0	True				
ANR	326592	RelationalExpression	get_bits_left ( & gb ) < 3		326037	0		<			
ANR	326593	CallExpression	get_bits_left ( & gb )		326037	0					
ANR	326594	Callee	get_bits_left		326037	0					
ANR	326595	Identifier	get_bits_left		326037	0					
ANR	326596	ArgumentList	& gb		326037	1					
ANR	326597	Argument	& gb		326037	0					
ANR	326598	UnaryOperationExpression	& gb		326037	0					
ANR	326599	UnaryOperator	&		326037	0					
ANR	326600	Identifier	gb		326037	1					
ANR	326601	PrimaryExpression	3		326037	1					
ANR	326602	CompoundStatement		186:36:3057:3057	326037	1					
ANR	326603	ExpressionStatement	"av_log ( avccontext , AV_LOG_ERROR , overread_err )"	192:12:3204:3250	326037	0	True				
ANR	326604	CallExpression	"av_log ( avccontext , AV_LOG_ERROR , overread_err )"		326037	0					
ANR	326605	Callee	av_log		326037	0					
ANR	326606	Identifier	av_log		326037	0					
ANR	326607	ArgumentList	avccontext		326037	1					
ANR	326608	Argument	avccontext		326037	0					
ANR	326609	Identifier	avccontext		326037	0					
ANR	326610	Argument	AV_LOG_ERROR		326037	1					
ANR	326611	Identifier	AV_LOG_ERROR		326037	0					
ANR	326612	Argument	overread_err		326037	2					
ANR	326613	Identifier	overread_err		326037	0					
ANR	326614	ReturnStatement	return - 1 ;	194:12:3265:3274	326037	1	True				
ANR	326615	UnaryOperationExpression	- 1		326037	0					
ANR	326616	UnaryOperator	-		326037	0					
ANR	326617	PrimaryExpression	1		326037	1					
ANR	326618	ExpressionStatement	spectral_to_sample ( ac )	202:4:3301:3323	326037	13	True				
ANR	326619	CallExpression	spectral_to_sample ( ac )		326037	0					
ANR	326620	Callee	spectral_to_sample		326037	0					
ANR	326621	Identifier	spectral_to_sample		326037	0					
ANR	326622	ArgumentList	ac		326037	1					
ANR	326623	Argument	ac		326037	0					
ANR	326624	Identifier	ac		326037	0					
ANR	326625	ExpressionStatement	multiplier = ( ac -> m4ac . sbr == 1 ) ? ac -> m4ac . ext_sample_rate > ac -> m4ac . sample_rate : 0	206:4:3332:3418	326037	14	True				
ANR	326626	AssignmentExpression	multiplier = ( ac -> m4ac . sbr == 1 ) ? ac -> m4ac . ext_sample_rate > ac -> m4ac . sample_rate : 0		326037	0		=			
ANR	326627	Identifier	multiplier		326037	0					
ANR	326628	ConditionalExpression	( ac -> m4ac . sbr == 1 ) ? ac -> m4ac . ext_sample_rate > ac -> m4ac . sample_rate : 0		326037	1					
ANR	326629	Condition	ac -> m4ac . sbr == 1		326037	0					
ANR	326630	EqualityExpression	ac -> m4ac . sbr == 1		326037	0		==			
ANR	326631	MemberAccess	ac -> m4ac . sbr		326037	0					
ANR	326632	PtrMemberAccess	ac -> m4ac		326037	0					
ANR	326633	Identifier	ac		326037	0					
ANR	326634	Identifier	m4ac		326037	1					
ANR	326635	Identifier	sbr		326037	1					
ANR	326636	PrimaryExpression	1		326037	1					
ANR	326637	RelationalExpression	ac -> m4ac . ext_sample_rate > ac -> m4ac . sample_rate		326037	1		>			
ANR	326638	MemberAccess	ac -> m4ac . ext_sample_rate		326037	0					
ANR	326639	PtrMemberAccess	ac -> m4ac		326037	0					
ANR	326640	Identifier	ac		326037	0					
ANR	326641	Identifier	m4ac		326037	1					
ANR	326642	Identifier	ext_sample_rate		326037	1					
ANR	326643	MemberAccess	ac -> m4ac . sample_rate		326037	1					
ANR	326644	PtrMemberAccess	ac -> m4ac		326037	0					
ANR	326645	Identifier	ac		326037	0					
ANR	326646	Identifier	m4ac		326037	1					
ANR	326647	Identifier	sample_rate		326037	1					
ANR	326648	PrimaryExpression	0		326037	2					
ANR	326649	ExpressionStatement	samples <<= multiplier	208:4:3425:3447	326037	15	True				
ANR	326650	AssignmentExpression	samples <<= multiplier		326037	0		<<=			
ANR	326651	Identifier	samples		326037	0					
ANR	326652	Identifier	multiplier		326037	1					
ANR	326653	IfStatement	if ( ac -> output_configured < OC_LOCKED )		326037	16					
ANR	326654	Condition	ac -> output_configured < OC_LOCKED	210:8:3458:3490	326037	0	True				
ANR	326655	RelationalExpression	ac -> output_configured < OC_LOCKED		326037	0		<			
ANR	326656	PtrMemberAccess	ac -> output_configured		326037	0					
ANR	326657	Identifier	ac		326037	0					
ANR	326658	Identifier	output_configured		326037	1					
ANR	326659	Identifier	OC_LOCKED		326037	1					
ANR	326660	CompoundStatement		206:43:3361:3361	326037	1					
ANR	326661	ExpressionStatement	avccontext -> sample_rate = ac -> m4ac . sample_rate << multiplier	212:8:3504:3564	326037	0	True				
ANR	326662	AssignmentExpression	avccontext -> sample_rate = ac -> m4ac . sample_rate << multiplier		326037	0		=			
ANR	326663	PtrMemberAccess	avccontext -> sample_rate		326037	0					
ANR	326664	Identifier	avccontext		326037	0					
ANR	326665	Identifier	sample_rate		326037	1					
ANR	326666	ShiftExpression	ac -> m4ac . sample_rate << multiplier		326037	1		<<			
ANR	326667	MemberAccess	ac -> m4ac . sample_rate		326037	0					
ANR	326668	PtrMemberAccess	ac -> m4ac		326037	0					
ANR	326669	Identifier	ac		326037	0					
ANR	326670	Identifier	m4ac		326037	1					
ANR	326671	Identifier	sample_rate		326037	1					
ANR	326672	Identifier	multiplier		326037	1					
ANR	326673	ExpressionStatement	avccontext -> frame_size = samples	214:8:3575:3607	326037	1	True				
ANR	326674	AssignmentExpression	avccontext -> frame_size = samples		326037	0		=			
ANR	326675	PtrMemberAccess	avccontext -> frame_size		326037	0					
ANR	326676	Identifier	avccontext		326037	0					
ANR	326677	Identifier	frame_size		326037	1					
ANR	326678	Identifier	samples		326037	1					
ANR	326679	ExpressionStatement	data_size_tmp = samples * avccontext -> channels * sizeof ( int16_t )	220:4:3623:3687	326037	17	True				
ANR	326680	AssignmentExpression	data_size_tmp = samples * avccontext -> channels * sizeof ( int16_t )		326037	0		=			
ANR	326681	Identifier	data_size_tmp		326037	0					
ANR	326682	MultiplicativeExpression	samples * avccontext -> channels * sizeof ( int16_t )		326037	1		*			
ANR	326683	Identifier	samples		326037	0					
ANR	326684	MultiplicativeExpression	avccontext -> channels * sizeof ( int16_t )		326037	1		*			
ANR	326685	PtrMemberAccess	avccontext -> channels		326037	0					
ANR	326686	Identifier	avccontext		326037	0					
ANR	326687	Identifier	channels		326037	1					
ANR	326688	SizeofExpression	sizeof ( int16_t )		326037	1					
ANR	326689	Sizeof	sizeof		326037	0					
ANR	326690	SizeofOperand	int16_t		326037	1					
ANR	326691	IfStatement	if ( * data_size < data_size_tmp )		326037	18					
ANR	326692	Condition	* data_size < data_size_tmp	222:8:3698:3723	326037	0	True				
ANR	326693	RelationalExpression	* data_size < data_size_tmp		326037	0		<			
ANR	326694	UnaryOperationExpression	* data_size		326037	0					
ANR	326695	UnaryOperator	*		326037	0					
ANR	326696	Identifier	data_size		326037	1					
ANR	326697	Identifier	data_size_tmp		326037	1					
ANR	326698	CompoundStatement		218:36:3594:3594	326037	1					
ANR	326699	ExpressionStatement	"av_log ( avccontext , AV_LOG_ERROR , ""Output buffer too small (%d) or trying to output too many samples (%d) for this frame.\\n"" , * data_size , data_size_tmp )"	224:8:3737:3920	326037	0	True				
ANR	326700	CallExpression	"av_log ( avccontext , AV_LOG_ERROR , ""Output buffer too small (%d) or trying to output too many samples (%d) for this frame.\\n"" , * data_size , data_size_tmp )"		326037	0					
ANR	326701	Callee	av_log		326037	0					
ANR	326702	Identifier	av_log		326037	0					
ANR	326703	ArgumentList	avccontext		326037	1					
ANR	326704	Argument	avccontext		326037	0					
ANR	326705	Identifier	avccontext		326037	0					
ANR	326706	Argument	AV_LOG_ERROR		326037	1					
ANR	326707	Identifier	AV_LOG_ERROR		326037	0					
ANR	326708	Argument	"""Output buffer too small (%d) or trying to output too many samples (%d) for this frame.\\n"""		326037	2					
ANR	326709	PrimaryExpression	"""Output buffer too small (%d) or trying to output too many samples (%d) for this frame.\\n"""		326037	0					
ANR	326710	Argument	* data_size		326037	3					
ANR	326711	UnaryOperationExpression	* data_size		326037	0					
ANR	326712	UnaryOperator	*		326037	0					
ANR	326713	Identifier	data_size		326037	1					
ANR	326714	Argument	data_size_tmp		326037	4					
ANR	326715	Identifier	data_size_tmp		326037	0					
ANR	326716	ReturnStatement	return - 1 ;	230:8:3931:3940	326037	1	True				
ANR	326717	UnaryOperationExpression	- 1		326037	0					
ANR	326718	UnaryOperator	-		326037	0					
ANR	326719	PrimaryExpression	1		326037	1					
ANR	326720	ExpressionStatement	* data_size = data_size_tmp	234:4:3954:3980	326037	19	True				
ANR	326721	AssignmentExpression	* data_size = data_size_tmp		326037	0		=			
ANR	326722	UnaryOperationExpression	* data_size		326037	0					
ANR	326723	UnaryOperator	*		326037	0					
ANR	326724	Identifier	data_size		326037	1					
ANR	326725	Identifier	data_size_tmp		326037	1					
ANR	326726	ExpressionStatement	"ac -> dsp . float_to_int16_interleave ( data , ( const float * * ) ac -> output_data , samples , avccontext -> channels )"	238:4:3989:4092	326037	20	True				
ANR	326727	CallExpression	"ac -> dsp . float_to_int16_interleave ( data , ( const float * * ) ac -> output_data , samples , avccontext -> channels )"		326037	0					
ANR	326728	Callee	ac -> dsp . float_to_int16_interleave		326037	0					
ANR	326729	MemberAccess	ac -> dsp . float_to_int16_interleave		326037	0					
ANR	326730	PtrMemberAccess	ac -> dsp		326037	0					
ANR	326731	Identifier	ac		326037	0					
ANR	326732	Identifier	dsp		326037	1					
ANR	326733	Identifier	float_to_int16_interleave		326037	1					
ANR	326734	ArgumentList	data		326037	1					
ANR	326735	Argument	data		326037	0					
ANR	326736	Identifier	data		326037	0					
ANR	326737	Argument	( const float * * ) ac -> output_data		326037	1					
ANR	326738	CastExpression	( const float * * ) ac -> output_data		326037	0					
ANR	326739	CastTarget	const float * *		326037	0					
ANR	326740	PtrMemberAccess	ac -> output_data		326037	1					
ANR	326741	Identifier	ac		326037	0					
ANR	326742	Identifier	output_data		326037	1					
ANR	326743	Argument	samples		326037	2					
ANR	326744	Identifier	samples		326037	0					
ANR	326745	Argument	avccontext -> channels		326037	3					
ANR	326746	PtrMemberAccess	avccontext -> channels		326037	0					
ANR	326747	Identifier	avccontext		326037	0					
ANR	326748	Identifier	channels		326037	1					
ANR	326749	IfStatement	if ( ac -> output_configured )		326037	21					
ANR	326750	Condition	ac -> output_configured	242:8:4105:4125	326037	0	True				
ANR	326751	PtrMemberAccess	ac -> output_configured		326037	0					
ANR	326752	Identifier	ac		326037	0					
ANR	326753	Identifier	output_configured		326037	1					
ANR	326754	ExpressionStatement	ac -> output_configured = OC_LOCKED	244:8:4137:4170	326037	1	True				
ANR	326755	AssignmentExpression	ac -> output_configured = OC_LOCKED		326037	0		=			
ANR	326756	PtrMemberAccess	ac -> output_configured		326037	0					
ANR	326757	Identifier	ac		326037	0					
ANR	326758	Identifier	output_configured		326037	1					
ANR	326759	Identifier	OC_LOCKED		326037	1					
ANR	326760	ExpressionStatement	buf_consumed = ( get_bits_count ( & gb ) + 7 ) >> 3	248:4:4179:4224	326037	22	True				
ANR	326761	AssignmentExpression	buf_consumed = ( get_bits_count ( & gb ) + 7 ) >> 3		326037	0		=			
ANR	326762	Identifier	buf_consumed		326037	0					
ANR	326763	ShiftExpression	( get_bits_count ( & gb ) + 7 ) >> 3		326037	1		>>			
ANR	326764	AdditiveExpression	get_bits_count ( & gb ) + 7		326037	0		+			
ANR	326765	CallExpression	get_bits_count ( & gb )		326037	0					
ANR	326766	Callee	get_bits_count		326037	0					
ANR	326767	Identifier	get_bits_count		326037	0					
ANR	326768	ArgumentList	& gb		326037	1					
ANR	326769	Argument	& gb		326037	0					
ANR	326770	UnaryOperationExpression	& gb		326037	0					
ANR	326771	UnaryOperator	&		326037	0					
ANR	326772	Identifier	gb		326037	1					
ANR	326773	PrimaryExpression	7		326037	1					
ANR	326774	PrimaryExpression	3		326037	1					
ANR	326775	ForStatement	for ( buf_offset = buf_consumed ; buf_offset < buf_size ; buf_offset ++ )		326037	23					
ANR	326776	ForInit	buf_offset = buf_consumed ;	250:9:4236:4261	326037	0	True				
ANR	326777	AssignmentExpression	buf_offset = buf_consumed		326037	0		=			
ANR	326778	Identifier	buf_offset		326037	0					
ANR	326779	Identifier	buf_consumed		326037	1					
ANR	326780	Condition	buf_offset < buf_size	250:36:4263:4283	326037	1	True				
ANR	326781	RelationalExpression	buf_offset < buf_size		326037	0		<			
ANR	326782	Identifier	buf_offset		326037	0					
ANR	326783	Identifier	buf_size		326037	1					
ANR	326784	PostIncDecOperationExpression	buf_offset ++	250:59:4286:4297	326037	2	True				
ANR	326785	Identifier	buf_offset		326037	0					
ANR	326786	IncDec	++		326037	1					
ANR	326787	IfStatement	if ( buf [ buf_offset ] )		326037	3					
ANR	326788	Condition	buf [ buf_offset ]	252:12:4313:4327	326037	0	True				
ANR	326789	ArrayIndexing	buf [ buf_offset ]		326037	0					
ANR	326790	Identifier	buf		326037	0					
ANR	326791	Identifier	buf_offset		326037	1					
ANR	326792	BreakStatement	break ;	254:12:4343:4348	326037	1	True				
ANR	326793	ReturnStatement	return buf_size > buf_offset ? buf_consumed : buf_size ;	258:4:4357:4411	326037	24	True				
ANR	326794	ConditionalExpression	buf_size > buf_offset ? buf_consumed : buf_size		326037	0					
ANR	326795	Condition	buf_size > buf_offset		326037	0					
ANR	326796	RelationalExpression	buf_size > buf_offset		326037	0		>			
ANR	326797	Identifier	buf_size		326037	0					
ANR	326798	Identifier	buf_offset		326037	1					
ANR	326799	Identifier	buf_consumed		326037	1					
ANR	326800	Identifier	buf_size		326037	2					
ANR	326801	ReturnType	static int		326037	1					
ANR	326802	Identifier	aac_decode_frame		326037	2					
ANR	326803	ParameterList	"AVCodecContext * avccontext , void * data , int * data_size , AVPacket * avpkt"		326037	3					
ANR	326804	Parameter	AVCodecContext * avccontext	1:28:28:53	326037	0	True				
ANR	326805	ParameterType	AVCodecContext *		326037	0					
ANR	326806	Identifier	avccontext		326037	1					
ANR	326807	Parameter	void * data	1:56:56:65	326037	1	True				
ANR	326808	ParameterType	void *		326037	0					
ANR	326809	Identifier	data		326037	1					
ANR	326810	Parameter	int * data_size	3:28:97:110	326037	2	True				
ANR	326811	ParameterType	int *		326037	0					
ANR	326812	Identifier	data_size		326037	1					
ANR	326813	Parameter	AVPacket * avpkt	3:44:113:127	326037	3	True				
ANR	326814	ParameterType	AVPacket *		326037	0					
ANR	326815	Identifier	avpkt		326037	1					
ANR	326816	CFGEntryNode	ENTRY		326037		True				
ANR	326817	CFGExitNode	EXIT		326037		True				
ANR	326818	Symbol	ac -> output_data		326037						
ANR	326819	Symbol	data		326037						
ANR	326820	Symbol	& gb		326037						
ANR	326821	Symbol	get_bits		326037						
ANR	326822	Symbol	avpkt		326037						
ANR	326823	Symbol	* data_size		326037						
ANR	326824	Symbol	avccontext		326037						
ANR	326825	Symbol	ac -> m4ac . ext_sample_rate		326037						
ANR	326826	Symbol	show_bits		326037						
ANR	326827	Symbol	decode_extension_payload		326037						
ANR	326828	Symbol	che_prev		326037						
ANR	326829	Symbol	data_size_tmp		326037						
ANR	326830	Symbol	ac -> m4ac . sampling_index		326037						
ANR	326831	Symbol	elem_type_prev		326037						
ANR	326832	Symbol	avccontext -> priv_data		326037						
ANR	326833	Symbol	buf_offset		326037						
ANR	326834	Symbol	ac -> dsp		326037						
ANR	326835	Symbol	data_size		326037						
ANR	326836	Symbol	che		326037						
ANR	326837	Symbol	ac		326037						
ANR	326838	Symbol	* buf		326037						
ANR	326839	Symbol	NULL		326037						
ANR	326840	Symbol	overread_err		326037						
ANR	326841	Symbol	buf_size		326037						
ANR	326842	Symbol	multiplier		326037						
ANR	326843	Symbol	elem_id		326037						
ANR	326844	Symbol	ac -> m4ac . sample_rate		326037						
ANR	326845	Symbol	get_bits_count		326037						
ANR	326846	Symbol	samples		326037						
ANR	326847	Symbol	* new_che_pos		326037						
ANR	326848	Symbol	elem_type		326037						
ANR	326849	Symbol	decode_ics		326037						
ANR	326850	Symbol	* avccontext		326037						
ANR	326851	Symbol	skip_data_stream_element		326037						
ANR	326852	Symbol	avpkt -> data		326037						
ANR	326853	Symbol	get_che		326037						
ANR	326854	Symbol	decode_cpe		326037						
ANR	326855	Symbol	ac -> che_pos		326037						
ANR	326856	Symbol	* ac		326037						
ANR	326857	Symbol	che -> ch		326037						
ANR	326858	Symbol	decode_cce		326037						
ANR	326859	Symbol	new_che_pos		326037						
ANR	326860	Symbol	get_bits_left		326037						
ANR	326861	Symbol	output_configure		326037						
ANR	326862	Symbol	OC_TRIAL_PCE		326037						
ANR	326863	Symbol	ac -> avccontext		326037						
ANR	326864	Symbol	avpkt -> size		326037						
ANR	326865	Symbol	gb		326037						
ANR	326866	Symbol	TYPE_END		326037						
ANR	326867	Symbol	* avpkt		326037						
ANR	326868	Symbol	buf_consumed		326037						
ANR	326869	Symbol	err		326037						
ANR	326870	Symbol	AV_LOG_ERROR		326037						
ANR	326871	Symbol	MAX_ELEM_ID		326037						
ANR	326872	Symbol	avccontext -> channels		326037						
ANR	326873	Symbol	* buf_offset		326037						
ANR	326874	Symbol	* * new_che_pos		326037						
ANR	326875	Symbol	ac -> m4ac		326037						
ANR	326876	Symbol	parse_adts_frame_header		326037						
ANR	326877	Symbol	buf		326037						
ANR	326878	Symbol	OC_LOCKED		326037						
ANR	326879	Symbol	* che		326037						
ANR	326880	Symbol	TYPE_DSE		326037						
ANR	326881	Symbol	avccontext -> sample_rate		326037						
ANR	326882	Symbol	decode_pce		326037						
ANR	326883	Symbol	ac -> output_configured		326037						
ANR	326884	Symbol	ac -> m4ac . sbr		326037						
ANR	326885	Symbol	avccontext -> frame_size		326037						
