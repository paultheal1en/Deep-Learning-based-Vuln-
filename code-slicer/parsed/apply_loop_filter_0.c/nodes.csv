command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	581029	File	/home/p4ultr4n/workplace/ReVeal/raw_code/apply_loop_filter_0.c								
ANR	581030	Function	apply_loop_filter	1:0:0:4029							
ANR	581031	FunctionDef	apply_loop_filter (Vp3DecodeContext * s)		581030	0					
ANR	581032	CompoundStatement		3:0:52:4029	581030	0					
ANR	581033	IdentifierDeclStatement	"int x , y , plane ;"	5:4:59:74	581030	0	True				
ANR	581034	IdentifierDecl	x		581030	0					
ANR	581035	IdentifierDeclType	int		581030	0					
ANR	581036	Identifier	x		581030	1					
ANR	581037	IdentifierDecl	y		581030	1					
ANR	581038	IdentifierDeclType	int		581030	0					
ANR	581039	Identifier	y		581030	1					
ANR	581040	IdentifierDecl	plane		581030	2					
ANR	581041	IdentifierDeclType	int		581030	0					
ANR	581042	Identifier	plane		581030	1					
ANR	581043	IdentifierDeclStatement	"int width , height ;"	7:4:81:98	581030	1	True				
ANR	581044	IdentifierDecl	width		581030	0					
ANR	581045	IdentifierDeclType	int		581030	0					
ANR	581046	Identifier	width		581030	1					
ANR	581047	IdentifierDecl	height		581030	1					
ANR	581048	IdentifierDeclType	int		581030	0					
ANR	581049	Identifier	height		581030	1					
ANR	581050	IdentifierDeclStatement	int fragment ;	9:4:105:117	581030	2	True				
ANR	581051	IdentifierDecl	fragment		581030	0					
ANR	581052	IdentifierDeclType	int		581030	0					
ANR	581053	Identifier	fragment		581030	1					
ANR	581054	IdentifierDeclStatement	int stride ;	11:4:124:134	581030	3	True				
ANR	581055	IdentifierDecl	stride		581030	0					
ANR	581056	IdentifierDeclType	int		581030	0					
ANR	581057	Identifier	stride		581030	1					
ANR	581058	IdentifierDeclStatement	unsigned char * plane_data ;	13:4:141:166	581030	4	True				
ANR	581059	IdentifierDecl	* plane_data		581030	0					
ANR	581060	IdentifierDeclType	unsigned char *		581030	0					
ANR	581061	Identifier	plane_data		581030	1					
ANR	581062	IdentifierDeclStatement	int bounding_values_array [ 256 ] ;	17:4:175:205	581030	5	True				
ANR	581063	IdentifierDecl	bounding_values_array [ 256 ]		581030	0					
ANR	581064	IdentifierDeclType	int [ 256 ]		581030	0					
ANR	581065	Identifier	bounding_values_array		581030	1					
ANR	581066	PrimaryExpression	256		581030	2					
ANR	581067	IdentifierDeclStatement	int * bounding_values = bounding_values_array + 127 ;	19:4:212:259	581030	6	True				
ANR	581068	IdentifierDecl	* bounding_values = bounding_values_array + 127		581030	0					
ANR	581069	IdentifierDeclType	int *		581030	0					
ANR	581070	Identifier	bounding_values		581030	1					
ANR	581071	AssignmentExpression	* bounding_values = bounding_values_array + 127		581030	2		=			
ANR	581072	Identifier	bounding_values		581030	0					
ANR	581073	AdditiveExpression	bounding_values_array + 127		581030	1		+			
ANR	581074	Identifier	bounding_values_array		581030	0					
ANR	581075	PrimaryExpression	127		581030	1					
ANR	581076	IdentifierDeclStatement	int filter_limit ;	21:4:266:282	581030	7	True				
ANR	581077	IdentifierDecl	filter_limit		581030	0					
ANR	581078	IdentifierDeclType	int		581030	0					
ANR	581079	Identifier	filter_limit		581030	1					
ANR	581080	ForStatement	for ( x = 63 ; x >= 0 ; x -- )		581030	8					
ANR	581081	ForInit	x = 63 ;	27:9:339:345	581030	0	True				
ANR	581082	AssignmentExpression	x = 63		581030	0		=			
ANR	581083	Identifier	x		581030	0					
ANR	581084	PrimaryExpression	63		581030	1					
ANR	581085	Condition	x >= 0	27:17:347:352	581030	1	True				
ANR	581086	RelationalExpression	x >= 0		581030	0		>=			
ANR	581087	Identifier	x		581030	0					
ANR	581088	PrimaryExpression	0		581030	1					
ANR	581089	PostIncDecOperationExpression	x --	27:25:355:357	581030	2	True				
ANR	581090	Identifier	x		581030	0					
ANR	581091	IncDec	--		581030	1					
ANR	581092	CompoundStatement		25:30:307:307	581030	3					
ANR	581093	IfStatement	if ( vp31_ac_scale_factor [ x ] >= s -> quality_index )		581030	0					
ANR	581094	Condition	vp31_ac_scale_factor [ x ] >= s -> quality_index	29:12:375:417	581030	0	True				
ANR	581095	RelationalExpression	vp31_ac_scale_factor [ x ] >= s -> quality_index		581030	0		>=			
ANR	581096	ArrayIndexing	vp31_ac_scale_factor [ x ]		581030	0					
ANR	581097	Identifier	vp31_ac_scale_factor		581030	0					
ANR	581098	Identifier	x		581030	1					
ANR	581099	PtrMemberAccess	s -> quality_index		581030	1					
ANR	581100	Identifier	s		581030	0					
ANR	581101	Identifier	quality_index		581030	1					
ANR	581102	BreakStatement	break ;	31:12:433:438	581030	1	True				
ANR	581103	ExpressionStatement	filter_limit = vp31_filter_limit_values [ s -> quality_index ]	35:4:452:509	581030	9	True				
ANR	581104	AssignmentExpression	filter_limit = vp31_filter_limit_values [ s -> quality_index ]		581030	0		=			
ANR	581105	Identifier	filter_limit		581030	0					
ANR	581106	ArrayIndexing	vp31_filter_limit_values [ s -> quality_index ]		581030	1					
ANR	581107	Identifier	vp31_filter_limit_values		581030	0					
ANR	581108	PtrMemberAccess	s -> quality_index		581030	1					
ANR	581109	Identifier	s		581030	0					
ANR	581110	Identifier	quality_index		581030	1					
ANR	581111	ExpressionStatement	"memset ( bounding_values_array , 0 , 256 * sizeof ( int ) )"	41:4:556:607	581030	10	True				
ANR	581112	CallExpression	"memset ( bounding_values_array , 0 , 256 * sizeof ( int ) )"		581030	0					
ANR	581113	Callee	memset		581030	0					
ANR	581114	Identifier	memset		581030	0					
ANR	581115	ArgumentList	bounding_values_array		581030	1					
ANR	581116	Argument	bounding_values_array		581030	0					
ANR	581117	Identifier	bounding_values_array		581030	0					
ANR	581118	Argument	0		581030	1					
ANR	581119	PrimaryExpression	0		581030	0					
ANR	581120	Argument	256 * sizeof ( int )		581030	2					
ANR	581121	MultiplicativeExpression	256 * sizeof ( int )		581030	0		*			
ANR	581122	PrimaryExpression	256		581030	0					
ANR	581123	SizeofExpression	sizeof ( int )		581030	1					
ANR	581124	Sizeof	sizeof		581030	0					
ANR	581125	SizeofOperand	int		581030	1					
ANR	581126	ForStatement	for ( x = 0 ; x < filter_limit ; x ++ )		581030	11					
ANR	581127	ForInit	x = 0 ;	43:9:619:624	581030	0	True				
ANR	581128	AssignmentExpression	x = 0		581030	0		=			
ANR	581129	Identifier	x		581030	0					
ANR	581130	PrimaryExpression	0		581030	1					
ANR	581131	Condition	x < filter_limit	43:16:626:641	581030	1	True				
ANR	581132	RelationalExpression	x < filter_limit		581030	0		<			
ANR	581133	Identifier	x		581030	0					
ANR	581134	Identifier	filter_limit		581030	1					
ANR	581135	PostIncDecOperationExpression	x ++	43:34:644:646	581030	2	True				
ANR	581136	Identifier	x		581030	0					
ANR	581137	IncDec	++		581030	1					
ANR	581138	CompoundStatement		41:39:596:596	581030	3					
ANR	581139	ExpressionStatement	bounding_values [ - x - filter_limit ] = - filter_limit + x	45:8:660:714	581030	0	True				
ANR	581140	AssignmentExpression	bounding_values [ - x - filter_limit ] = - filter_limit + x		581030	0		=			
ANR	581141	ArrayIndexing	bounding_values [ - x - filter_limit ]		581030	0					
ANR	581142	Identifier	bounding_values		581030	0					
ANR	581143	AdditiveExpression	- x - filter_limit		581030	1		-			
ANR	581144	UnaryOperationExpression	- x		581030	0					
ANR	581145	UnaryOperator	-		581030	0					
ANR	581146	Identifier	x		581030	1					
ANR	581147	Identifier	filter_limit		581030	1					
ANR	581148	AdditiveExpression	- filter_limit + x		581030	1		+			
ANR	581149	UnaryOperationExpression	- filter_limit		581030	0					
ANR	581150	UnaryOperator	-		581030	0					
ANR	581151	Identifier	filter_limit		581030	1					
ANR	581152	Identifier	x		581030	1					
ANR	581153	ExpressionStatement	bounding_values [ - x ] = - x	47:8:725:749	581030	1	True				
ANR	581154	AssignmentExpression	bounding_values [ - x ] = - x		581030	0		=			
ANR	581155	ArrayIndexing	bounding_values [ - x ]		581030	0					
ANR	581156	Identifier	bounding_values		581030	0					
ANR	581157	UnaryOperationExpression	- x		581030	1					
ANR	581158	UnaryOperator	-		581030	0					
ANR	581159	Identifier	x		581030	1					
ANR	581160	UnaryOperationExpression	- x		581030	1					
ANR	581161	UnaryOperator	-		581030	0					
ANR	581162	Identifier	x		581030	1					
ANR	581163	ExpressionStatement	bounding_values [ x ] = x	49:8:760:782	581030	2	True				
ANR	581164	AssignmentExpression	bounding_values [ x ] = x		581030	0		=			
ANR	581165	ArrayIndexing	bounding_values [ x ]		581030	0					
ANR	581166	Identifier	bounding_values		581030	0					
ANR	581167	Identifier	x		581030	1					
ANR	581168	Identifier	x		581030	1					
ANR	581169	ExpressionStatement	bounding_values [ x + filter_limit ] = filter_limit - x	51:8:793:845	581030	3	True				
ANR	581170	AssignmentExpression	bounding_values [ x + filter_limit ] = filter_limit - x		581030	0		=			
ANR	581171	ArrayIndexing	bounding_values [ x + filter_limit ]		581030	0					
ANR	581172	Identifier	bounding_values		581030	0					
ANR	581173	AdditiveExpression	x + filter_limit		581030	1		+			
ANR	581174	Identifier	x		581030	0					
ANR	581175	Identifier	filter_limit		581030	1					
ANR	581176	AdditiveExpression	filter_limit - x		581030	1		-			
ANR	581177	Identifier	filter_limit		581030	0					
ANR	581178	Identifier	x		581030	1					
ANR	581179	ForStatement	for ( plane = 0 ; plane < 3 ; plane ++ )		581030	12					
ANR	581180	ForInit	plane = 0 ;	57:9:866:875	581030	0	True				
ANR	581181	AssignmentExpression	plane = 0		581030	0		=			
ANR	581182	Identifier	plane		581030	0					
ANR	581183	PrimaryExpression	0		581030	1					
ANR	581184	Condition	plane < 3	57:20:877:885	581030	1	True				
ANR	581185	RelationalExpression	plane < 3		581030	0		<			
ANR	581186	Identifier	plane		581030	0					
ANR	581187	PrimaryExpression	3		581030	1					
ANR	581188	PostIncDecOperationExpression	plane ++	57:31:888:894	581030	2	True				
ANR	581189	Identifier	plane		581030	0					
ANR	581190	IncDec	++		581030	1					
ANR	581191	CompoundStatement		55:40:844:844	581030	3					
ANR	581192	IfStatement	if ( plane == 0 )		581030	0					
ANR	581193	Condition	plane == 0	61:12:914:923	581030	0	True				
ANR	581194	EqualityExpression	plane == 0		581030	0		==			
ANR	581195	Identifier	plane		581030	0					
ANR	581196	PrimaryExpression	0		581030	1					
ANR	581197	CompoundStatement		59:24:873:873	581030	1					
ANR	581198	ExpressionStatement	fragment = 0	65:12:979:991	581030	0	True				
ANR	581199	AssignmentExpression	fragment = 0		581030	0		=			
ANR	581200	Identifier	fragment		581030	0					
ANR	581201	PrimaryExpression	0		581030	1					
ANR	581202	ExpressionStatement	width = s -> fragment_width	67:12:1006:1031	581030	1	True				
ANR	581203	AssignmentExpression	width = s -> fragment_width		581030	0		=			
ANR	581204	Identifier	width		581030	0					
ANR	581205	PtrMemberAccess	s -> fragment_width		581030	1					
ANR	581206	Identifier	s		581030	0					
ANR	581207	Identifier	fragment_width		581030	1					
ANR	581208	ExpressionStatement	height = s -> fragment_height	69:12:1046:1073	581030	2	True				
ANR	581209	AssignmentExpression	height = s -> fragment_height		581030	0		=			
ANR	581210	Identifier	height		581030	0					
ANR	581211	PtrMemberAccess	s -> fragment_height		581030	1					
ANR	581212	Identifier	s		581030	0					
ANR	581213	Identifier	fragment_height		581030	1					
ANR	581214	ExpressionStatement	stride = s -> current_frame . linesize [ 0 ]	71:12:1088:1125	581030	3	True				
ANR	581215	AssignmentExpression	stride = s -> current_frame . linesize [ 0 ]		581030	0		=			
ANR	581216	Identifier	stride		581030	0					
ANR	581217	ArrayIndexing	s -> current_frame . linesize [ 0 ]		581030	1					
ANR	581218	MemberAccess	s -> current_frame . linesize		581030	0					
ANR	581219	PtrMemberAccess	s -> current_frame		581030	0					
ANR	581220	Identifier	s		581030	0					
ANR	581221	Identifier	current_frame		581030	1					
ANR	581222	Identifier	linesize		581030	1					
ANR	581223	PrimaryExpression	0		581030	1					
ANR	581224	ExpressionStatement	plane_data = s -> current_frame . data [ 0 ]	73:12:1140:1177	581030	4	True				
ANR	581225	AssignmentExpression	plane_data = s -> current_frame . data [ 0 ]		581030	0		=			
ANR	581226	Identifier	plane_data		581030	0					
ANR	581227	ArrayIndexing	s -> current_frame . data [ 0 ]		581030	1					
ANR	581228	MemberAccess	s -> current_frame . data		581030	0					
ANR	581229	PtrMemberAccess	s -> current_frame		581030	0					
ANR	581230	Identifier	s		581030	0					
ANR	581231	Identifier	current_frame		581030	1					
ANR	581232	Identifier	data		581030	1					
ANR	581233	PrimaryExpression	0		581030	1					
ANR	581234	ElseStatement	else		581030	0					
ANR	581235	IfStatement	if ( plane == 1 )		581030	0					
ANR	581236	Condition	plane == 1	75:19:1199:1208	581030	0	True				
ANR	581237	EqualityExpression	plane == 1		581030	0		==			
ANR	581238	Identifier	plane		581030	0					
ANR	581239	PrimaryExpression	1		581030	1					
ANR	581240	CompoundStatement		73:31:1158:1158	581030	1					
ANR	581241	ExpressionStatement	fragment = s -> u_fragment_start	79:12:1264:1294	581030	0	True				
ANR	581242	AssignmentExpression	fragment = s -> u_fragment_start		581030	0		=			
ANR	581243	Identifier	fragment		581030	0					
ANR	581244	PtrMemberAccess	s -> u_fragment_start		581030	1					
ANR	581245	Identifier	s		581030	0					
ANR	581246	Identifier	u_fragment_start		581030	1					
ANR	581247	ExpressionStatement	width = s -> fragment_width / 2	81:12:1309:1338	581030	1	True				
ANR	581248	AssignmentExpression	width = s -> fragment_width / 2		581030	0		=			
ANR	581249	Identifier	width		581030	0					
ANR	581250	MultiplicativeExpression	s -> fragment_width / 2		581030	1		/			
ANR	581251	PtrMemberAccess	s -> fragment_width		581030	0					
ANR	581252	Identifier	s		581030	0					
ANR	581253	Identifier	fragment_width		581030	1					
ANR	581254	PrimaryExpression	2		581030	1					
ANR	581255	ExpressionStatement	height = s -> fragment_height / 2	83:12:1353:1384	581030	2	True				
ANR	581256	AssignmentExpression	height = s -> fragment_height / 2		581030	0		=			
ANR	581257	Identifier	height		581030	0					
ANR	581258	MultiplicativeExpression	s -> fragment_height / 2		581030	1		/			
ANR	581259	PtrMemberAccess	s -> fragment_height		581030	0					
ANR	581260	Identifier	s		581030	0					
ANR	581261	Identifier	fragment_height		581030	1					
ANR	581262	PrimaryExpression	2		581030	1					
ANR	581263	ExpressionStatement	stride = s -> current_frame . linesize [ 1 ]	85:12:1399:1436	581030	3	True				
ANR	581264	AssignmentExpression	stride = s -> current_frame . linesize [ 1 ]		581030	0		=			
ANR	581265	Identifier	stride		581030	0					
ANR	581266	ArrayIndexing	s -> current_frame . linesize [ 1 ]		581030	1					
ANR	581267	MemberAccess	s -> current_frame . linesize		581030	0					
ANR	581268	PtrMemberAccess	s -> current_frame		581030	0					
ANR	581269	Identifier	s		581030	0					
ANR	581270	Identifier	current_frame		581030	1					
ANR	581271	Identifier	linesize		581030	1					
ANR	581272	PrimaryExpression	1		581030	1					
ANR	581273	ExpressionStatement	plane_data = s -> current_frame . data [ 1 ]	87:12:1451:1488	581030	4	True				
ANR	581274	AssignmentExpression	plane_data = s -> current_frame . data [ 1 ]		581030	0		=			
ANR	581275	Identifier	plane_data		581030	0					
ANR	581276	ArrayIndexing	s -> current_frame . data [ 1 ]		581030	1					
ANR	581277	MemberAccess	s -> current_frame . data		581030	0					
ANR	581278	PtrMemberAccess	s -> current_frame		581030	0					
ANR	581279	Identifier	s		581030	0					
ANR	581280	Identifier	current_frame		581030	1					
ANR	581281	Identifier	data		581030	1					
ANR	581282	PrimaryExpression	1		581030	1					
ANR	581283	ElseStatement	else		581030	0					
ANR	581284	CompoundStatement		87:15:1453:1453	581030	0					
ANR	581285	ExpressionStatement	fragment = s -> v_fragment_start	93:12:1559:1589	581030	0	True				
ANR	581286	AssignmentExpression	fragment = s -> v_fragment_start		581030	0		=			
ANR	581287	Identifier	fragment		581030	0					
ANR	581288	PtrMemberAccess	s -> v_fragment_start		581030	1					
ANR	581289	Identifier	s		581030	0					
ANR	581290	Identifier	v_fragment_start		581030	1					
ANR	581291	ExpressionStatement	width = s -> fragment_width / 2	95:12:1604:1633	581030	1	True				
ANR	581292	AssignmentExpression	width = s -> fragment_width / 2		581030	0		=			
ANR	581293	Identifier	width		581030	0					
ANR	581294	MultiplicativeExpression	s -> fragment_width / 2		581030	1		/			
ANR	581295	PtrMemberAccess	s -> fragment_width		581030	0					
ANR	581296	Identifier	s		581030	0					
ANR	581297	Identifier	fragment_width		581030	1					
ANR	581298	PrimaryExpression	2		581030	1					
ANR	581299	ExpressionStatement	height = s -> fragment_height / 2	97:12:1648:1679	581030	2	True				
ANR	581300	AssignmentExpression	height = s -> fragment_height / 2		581030	0		=			
ANR	581301	Identifier	height		581030	0					
ANR	581302	MultiplicativeExpression	s -> fragment_height / 2		581030	1		/			
ANR	581303	PtrMemberAccess	s -> fragment_height		581030	0					
ANR	581304	Identifier	s		581030	0					
ANR	581305	Identifier	fragment_height		581030	1					
ANR	581306	PrimaryExpression	2		581030	1					
ANR	581307	ExpressionStatement	stride = s -> current_frame . linesize [ 2 ]	99:12:1694:1731	581030	3	True				
ANR	581308	AssignmentExpression	stride = s -> current_frame . linesize [ 2 ]		581030	0		=			
ANR	581309	Identifier	stride		581030	0					
ANR	581310	ArrayIndexing	s -> current_frame . linesize [ 2 ]		581030	1					
ANR	581311	MemberAccess	s -> current_frame . linesize		581030	0					
ANR	581312	PtrMemberAccess	s -> current_frame		581030	0					
ANR	581313	Identifier	s		581030	0					
ANR	581314	Identifier	current_frame		581030	1					
ANR	581315	Identifier	linesize		581030	1					
ANR	581316	PrimaryExpression	2		581030	1					
ANR	581317	ExpressionStatement	plane_data = s -> current_frame . data [ 2 ]	101:12:1746:1783	581030	4	True				
ANR	581318	AssignmentExpression	plane_data = s -> current_frame . data [ 2 ]		581030	0		=			
ANR	581319	Identifier	plane_data		581030	0					
ANR	581320	ArrayIndexing	s -> current_frame . data [ 2 ]		581030	1					
ANR	581321	MemberAccess	s -> current_frame . data		581030	0					
ANR	581322	PtrMemberAccess	s -> current_frame		581030	0					
ANR	581323	Identifier	s		581030	0					
ANR	581324	Identifier	current_frame		581030	1					
ANR	581325	Identifier	data		581030	1					
ANR	581326	PrimaryExpression	2		581030	1					
ANR	581327	ForStatement	for ( y = 0 ; y < height ; y ++ )		581030	1					
ANR	581328	ForInit	y = 0 ;	107:13:1812:1817	581030	0	True				
ANR	581329	AssignmentExpression	y = 0		581030	0		=			
ANR	581330	Identifier	y		581030	0					
ANR	581331	PrimaryExpression	0		581030	1					
ANR	581332	Condition	y < height	107:20:1819:1828	581030	1	True				
ANR	581333	RelationalExpression	y < height		581030	0		<			
ANR	581334	Identifier	y		581030	0					
ANR	581335	Identifier	height		581030	1					
ANR	581336	PostIncDecOperationExpression	y ++	107:32:1831:1833	581030	2	True				
ANR	581337	Identifier	y		581030	0					
ANR	581338	IncDec	++		581030	1					
ANR	581339	CompoundStatement		105:37:1783:1783	581030	3					
ANR	581340	ForStatement	for ( x = 0 ; x < width ; x ++ )		581030	0					
ANR	581341	ForInit	x = 0 ;	111:17:1858:1863	581030	0	True				
ANR	581342	AssignmentExpression	x = 0		581030	0		=			
ANR	581343	Identifier	x		581030	0					
ANR	581344	PrimaryExpression	0		581030	1					
ANR	581345	Condition	x < width	111:24:1865:1873	581030	1	True				
ANR	581346	RelationalExpression	x < width		581030	0		<			
ANR	581347	Identifier	x		581030	0					
ANR	581348	Identifier	width		581030	1					
ANR	581349	PostIncDecOperationExpression	x ++	111:35:1876:1878	581030	2	True				
ANR	581350	Identifier	x		581030	0					
ANR	581351	IncDec	++		581030	1					
ANR	581352	CompoundStatement		109:40:1828:1828	581030	3					
ANR	581353	Statement	START_TIMER	113:0:1884:1894	581030	0	True				
ANR	581354	IfStatement	if ( ( x > 0 ) && ( s -> all_fragments [ fragment ] . coding_method != MODE_COPY ) )		581030	1					
ANR	581355	Condition	( x > 0 ) && ( s -> all_fragments [ fragment ] . coding_method != MODE_COPY )	117:20:1995:2081	581030	0	True				
ANR	581356	AndExpression	( x > 0 ) && ( s -> all_fragments [ fragment ] . coding_method != MODE_COPY )		581030	0		&&			
ANR	581357	RelationalExpression	x > 0		581030	0		>			
ANR	581358	Identifier	x		581030	0					
ANR	581359	PrimaryExpression	0		581030	1					
ANR	581360	EqualityExpression	s -> all_fragments [ fragment ] . coding_method != MODE_COPY		581030	1		!=			
ANR	581361	MemberAccess	s -> all_fragments [ fragment ] . coding_method		581030	0					
ANR	581362	ArrayIndexing	s -> all_fragments [ fragment ]		581030	0					
ANR	581363	PtrMemberAccess	s -> all_fragments		581030	0					
ANR	581364	Identifier	s		581030	0					
ANR	581365	Identifier	all_fragments		581030	1					
ANR	581366	Identifier	fragment		581030	1					
ANR	581367	Identifier	coding_method		581030	1					
ANR	581368	Identifier	MODE_COPY		581030	1					
ANR	581369	CompoundStatement		117:77:2031:2031	581030	1					
ANR	581370	ExpressionStatement	"horizontal_filter ( plane_data + s -> all_fragments [ fragment ] . first_pixel - 7 * stride , stride , bounding_values )"	121:20:2107:2265	581030	0	True				
ANR	581371	CallExpression	"horizontal_filter ( plane_data + s -> all_fragments [ fragment ] . first_pixel - 7 * stride , stride , bounding_values )"		581030	0					
ANR	581372	Callee	horizontal_filter		581030	0					
ANR	581373	Identifier	horizontal_filter		581030	0					
ANR	581374	ArgumentList	plane_data + s -> all_fragments [ fragment ] . first_pixel - 7 * stride		581030	1					
ANR	581375	Argument	plane_data + s -> all_fragments [ fragment ] . first_pixel - 7 * stride		581030	0					
ANR	581376	AdditiveExpression	plane_data + s -> all_fragments [ fragment ] . first_pixel - 7 * stride		581030	0		+			
ANR	581377	Identifier	plane_data		581030	0					
ANR	581378	AdditiveExpression	s -> all_fragments [ fragment ] . first_pixel - 7 * stride		581030	1		-			
ANR	581379	MemberAccess	s -> all_fragments [ fragment ] . first_pixel		581030	0					
ANR	581380	ArrayIndexing	s -> all_fragments [ fragment ]		581030	0					
ANR	581381	PtrMemberAccess	s -> all_fragments		581030	0					
ANR	581382	Identifier	s		581030	0					
ANR	581383	Identifier	all_fragments		581030	1					
ANR	581384	Identifier	fragment		581030	1					
ANR	581385	Identifier	first_pixel		581030	1					
ANR	581386	MultiplicativeExpression	7 * stride		581030	1		*			
ANR	581387	PrimaryExpression	7		581030	0					
ANR	581388	Identifier	stride		581030	1					
ANR	581389	Argument	stride		581030	1					
ANR	581390	Identifier	stride		581030	0					
ANR	581391	Argument	bounding_values		581030	2					
ANR	581392	Identifier	bounding_values		581030	0					
ANR	581393	IfStatement	if ( ( y > 0 ) && ( s -> all_fragments [ fragment ] . coding_method != MODE_COPY ) )		581030	2					
ANR	581394	Condition	( y > 0 ) && ( s -> all_fragments [ fragment ] . coding_method != MODE_COPY )	133:20:2385:2471	581030	0	True				
ANR	581395	AndExpression	( y > 0 ) && ( s -> all_fragments [ fragment ] . coding_method != MODE_COPY )		581030	0		&&			
ANR	581396	RelationalExpression	y > 0		581030	0		>			
ANR	581397	Identifier	y		581030	0					
ANR	581398	PrimaryExpression	0		581030	1					
ANR	581399	EqualityExpression	s -> all_fragments [ fragment ] . coding_method != MODE_COPY		581030	1		!=			
ANR	581400	MemberAccess	s -> all_fragments [ fragment ] . coding_method		581030	0					
ANR	581401	ArrayIndexing	s -> all_fragments [ fragment ]		581030	0					
ANR	581402	PtrMemberAccess	s -> all_fragments		581030	0					
ANR	581403	Identifier	s		581030	0					
ANR	581404	Identifier	all_fragments		581030	1					
ANR	581405	Identifier	fragment		581030	1					
ANR	581406	Identifier	coding_method		581030	1					
ANR	581407	Identifier	MODE_COPY		581030	1					
ANR	581408	CompoundStatement		133:77:2421:2421	581030	1					
ANR	581409	ExpressionStatement	"vertical_filter ( plane_data + s -> all_fragments [ fragment ] . first_pixel + stride , stride , bounding_values )"	137:20:2497:2651	581030	0	True				
ANR	581410	CallExpression	"vertical_filter ( plane_data + s -> all_fragments [ fragment ] . first_pixel + stride , stride , bounding_values )"		581030	0					
ANR	581411	Callee	vertical_filter		581030	0					
ANR	581412	Identifier	vertical_filter		581030	0					
ANR	581413	ArgumentList	plane_data + s -> all_fragments [ fragment ] . first_pixel + stride		581030	1					
ANR	581414	Argument	plane_data + s -> all_fragments [ fragment ] . first_pixel + stride		581030	0					
ANR	581415	AdditiveExpression	plane_data + s -> all_fragments [ fragment ] . first_pixel + stride		581030	0		+			
ANR	581416	Identifier	plane_data		581030	0					
ANR	581417	AdditiveExpression	s -> all_fragments [ fragment ] . first_pixel + stride		581030	1		+			
ANR	581418	MemberAccess	s -> all_fragments [ fragment ] . first_pixel		581030	0					
ANR	581419	ArrayIndexing	s -> all_fragments [ fragment ]		581030	0					
ANR	581420	PtrMemberAccess	s -> all_fragments		581030	0					
ANR	581421	Identifier	s		581030	0					
ANR	581422	Identifier	all_fragments		581030	1					
ANR	581423	Identifier	fragment		581030	1					
ANR	581424	Identifier	first_pixel		581030	1					
ANR	581425	Identifier	stride		581030	1					
ANR	581426	Argument	stride		581030	1					
ANR	581427	Identifier	stride		581030	0					
ANR	581428	Argument	bounding_values		581030	2					
ANR	581429	Identifier	bounding_values		581030	0					
ANR	581430	IfStatement	if ( ( x < width - 1 ) && ( s -> all_fragments [ fragment ] . coding_method != MODE_COPY ) && ( s -> all_fragments [ fragment + 1 ] . coding_method == MODE_COPY ) )		581030	3					
ANR	581431	Condition	( x < width - 1 ) && ( s -> all_fragments [ fragment ] . coding_method != MODE_COPY ) && ( s -> all_fragments [ fragment + 1 ] . coding_method == MODE_COPY )	153:20:2916:3094	581030	0	True				
ANR	581432	AndExpression	( x < width - 1 ) && ( s -> all_fragments [ fragment ] . coding_method != MODE_COPY ) && ( s -> all_fragments [ fragment + 1 ] . coding_method == MODE_COPY )		581030	0		&&			
ANR	581433	RelationalExpression	x < width - 1		581030	0		<			
ANR	581434	Identifier	x		581030	0					
ANR	581435	AdditiveExpression	width - 1		581030	1		-			
ANR	581436	Identifier	width		581030	0					
ANR	581437	PrimaryExpression	1		581030	1					
ANR	581438	AndExpression	( s -> all_fragments [ fragment ] . coding_method != MODE_COPY ) && ( s -> all_fragments [ fragment + 1 ] . coding_method == MODE_COPY )		581030	1		&&			
ANR	581439	EqualityExpression	s -> all_fragments [ fragment ] . coding_method != MODE_COPY		581030	0		!=			
ANR	581440	MemberAccess	s -> all_fragments [ fragment ] . coding_method		581030	0					
ANR	581441	ArrayIndexing	s -> all_fragments [ fragment ]		581030	0					
ANR	581442	PtrMemberAccess	s -> all_fragments		581030	0					
ANR	581443	Identifier	s		581030	0					
ANR	581444	Identifier	all_fragments		581030	1					
ANR	581445	Identifier	fragment		581030	1					
ANR	581446	Identifier	coding_method		581030	1					
ANR	581447	Identifier	MODE_COPY		581030	1					
ANR	581448	EqualityExpression	s -> all_fragments [ fragment + 1 ] . coding_method == MODE_COPY		581030	1		==			
ANR	581449	MemberAccess	s -> all_fragments [ fragment + 1 ] . coding_method		581030	0					
ANR	581450	ArrayIndexing	s -> all_fragments [ fragment + 1 ]		581030	0					
ANR	581451	PtrMemberAccess	s -> all_fragments		581030	0					
ANR	581452	Identifier	s		581030	0					
ANR	581453	Identifier	all_fragments		581030	1					
ANR	581454	AdditiveExpression	fragment + 1		581030	1		+			
ANR	581455	Identifier	fragment		581030	0					
ANR	581456	PrimaryExpression	1		581030	1					
ANR	581457	Identifier	coding_method		581030	1					
ANR	581458	Identifier	MODE_COPY		581030	1					
ANR	581459	CompoundStatement		155:81:3044:3044	581030	1					
ANR	581460	ExpressionStatement	"horizontal_filter ( plane_data + s -> all_fragments [ fragment + 1 ] . first_pixel - 7 * stride , stride , bounding_values )"	159:20:3120:3282	581030	0	True				
ANR	581461	CallExpression	"horizontal_filter ( plane_data + s -> all_fragments [ fragment + 1 ] . first_pixel - 7 * stride , stride , bounding_values )"		581030	0					
ANR	581462	Callee	horizontal_filter		581030	0					
ANR	581463	Identifier	horizontal_filter		581030	0					
ANR	581464	ArgumentList	plane_data + s -> all_fragments [ fragment + 1 ] . first_pixel - 7 * stride		581030	1					
ANR	581465	Argument	plane_data + s -> all_fragments [ fragment + 1 ] . first_pixel - 7 * stride		581030	0					
ANR	581466	AdditiveExpression	plane_data + s -> all_fragments [ fragment + 1 ] . first_pixel - 7 * stride		581030	0		+			
ANR	581467	Identifier	plane_data		581030	0					
ANR	581468	AdditiveExpression	s -> all_fragments [ fragment + 1 ] . first_pixel - 7 * stride		581030	1		-			
ANR	581469	MemberAccess	s -> all_fragments [ fragment + 1 ] . first_pixel		581030	0					
ANR	581470	ArrayIndexing	s -> all_fragments [ fragment + 1 ]		581030	0					
ANR	581471	PtrMemberAccess	s -> all_fragments		581030	0					
ANR	581472	Identifier	s		581030	0					
ANR	581473	Identifier	all_fragments		581030	1					
ANR	581474	AdditiveExpression	fragment + 1		581030	1		+			
ANR	581475	Identifier	fragment		581030	0					
ANR	581476	PrimaryExpression	1		581030	1					
ANR	581477	Identifier	first_pixel		581030	1					
ANR	581478	MultiplicativeExpression	7 * stride		581030	1		*			
ANR	581479	PrimaryExpression	7		581030	0					
ANR	581480	Identifier	stride		581030	1					
ANR	581481	Argument	stride		581030	1					
ANR	581482	Identifier	stride		581030	0					
ANR	581483	Argument	bounding_values		581030	2					
ANR	581484	Identifier	bounding_values		581030	0					
ANR	581485	IfStatement	if ( ( y < height - 1 ) && ( s -> all_fragments [ fragment ] . coding_method != MODE_COPY ) && ( s -> all_fragments [ fragment + width ] . coding_method == MODE_COPY ) )		581030	4					
ANR	581486	Condition	( y < height - 1 ) && ( s -> all_fragments [ fragment ] . coding_method != MODE_COPY ) && ( s -> all_fragments [ fragment + width ] . coding_method == MODE_COPY )	175:20:3545:3728	581030	0	True				
ANR	581487	AndExpression	( y < height - 1 ) && ( s -> all_fragments [ fragment ] . coding_method != MODE_COPY ) && ( s -> all_fragments [ fragment + width ] . coding_method == MODE_COPY )		581030	0		&&			
ANR	581488	RelationalExpression	y < height - 1		581030	0		<			
ANR	581489	Identifier	y		581030	0					
ANR	581490	AdditiveExpression	height - 1		581030	1		-			
ANR	581491	Identifier	height		581030	0					
ANR	581492	PrimaryExpression	1		581030	1					
ANR	581493	AndExpression	( s -> all_fragments [ fragment ] . coding_method != MODE_COPY ) && ( s -> all_fragments [ fragment + width ] . coding_method == MODE_COPY )		581030	1		&&			
ANR	581494	EqualityExpression	s -> all_fragments [ fragment ] . coding_method != MODE_COPY		581030	0		!=			
ANR	581495	MemberAccess	s -> all_fragments [ fragment ] . coding_method		581030	0					
ANR	581496	ArrayIndexing	s -> all_fragments [ fragment ]		581030	0					
ANR	581497	PtrMemberAccess	s -> all_fragments		581030	0					
ANR	581498	Identifier	s		581030	0					
ANR	581499	Identifier	all_fragments		581030	1					
ANR	581500	Identifier	fragment		581030	1					
ANR	581501	Identifier	coding_method		581030	1					
ANR	581502	Identifier	MODE_COPY		581030	1					
ANR	581503	EqualityExpression	s -> all_fragments [ fragment + width ] . coding_method == MODE_COPY		581030	1		==			
ANR	581504	MemberAccess	s -> all_fragments [ fragment + width ] . coding_method		581030	0					
ANR	581505	ArrayIndexing	s -> all_fragments [ fragment + width ]		581030	0					
ANR	581506	PtrMemberAccess	s -> all_fragments		581030	0					
ANR	581507	Identifier	s		581030	0					
ANR	581508	Identifier	all_fragments		581030	1					
ANR	581509	AdditiveExpression	fragment + width		581030	1		+			
ANR	581510	Identifier	fragment		581030	0					
ANR	581511	Identifier	width		581030	1					
ANR	581512	Identifier	coding_method		581030	1					
ANR	581513	Identifier	MODE_COPY		581030	1					
ANR	581514	CompoundStatement		177:85:3678:3678	581030	1					
ANR	581515	ExpressionStatement	"vertical_filter ( plane_data + s -> all_fragments [ fragment + width ] . first_pixel + stride , stride , bounding_values )"	181:20:3754:3916	581030	0	True				
ANR	581516	CallExpression	"vertical_filter ( plane_data + s -> all_fragments [ fragment + width ] . first_pixel + stride , stride , bounding_values )"		581030	0					
ANR	581517	Callee	vertical_filter		581030	0					
ANR	581518	Identifier	vertical_filter		581030	0					
ANR	581519	ArgumentList	plane_data + s -> all_fragments [ fragment + width ] . first_pixel + stride		581030	1					
ANR	581520	Argument	plane_data + s -> all_fragments [ fragment + width ] . first_pixel + stride		581030	0					
ANR	581521	AdditiveExpression	plane_data + s -> all_fragments [ fragment + width ] . first_pixel + stride		581030	0		+			
ANR	581522	Identifier	plane_data		581030	0					
ANR	581523	AdditiveExpression	s -> all_fragments [ fragment + width ] . first_pixel + stride		581030	1		+			
ANR	581524	MemberAccess	s -> all_fragments [ fragment + width ] . first_pixel		581030	0					
ANR	581525	ArrayIndexing	s -> all_fragments [ fragment + width ]		581030	0					
ANR	581526	PtrMemberAccess	s -> all_fragments		581030	0					
ANR	581527	Identifier	s		581030	0					
ANR	581528	Identifier	all_fragments		581030	1					
ANR	581529	AdditiveExpression	fragment + width		581030	1		+			
ANR	581530	Identifier	fragment		581030	0					
ANR	581531	Identifier	width		581030	1					
ANR	581532	Identifier	first_pixel		581030	1					
ANR	581533	Identifier	stride		581030	1					
ANR	581534	Argument	stride		581030	1					
ANR	581535	Identifier	stride		581030	0					
ANR	581536	Argument	bounding_values		581030	2					
ANR	581537	Identifier	bounding_values		581030	0					
ANR	581538	ExpressionStatement	fragment ++	191:16:3956:3966	581030	5	True				
ANR	581539	PostIncDecOperationExpression	fragment ++		581030	0					
ANR	581540	Identifier	fragment		581030	0					
ANR	581541	IncDec	++		581030	1					
ANR	581542	Statement	STOP_TIMER	193:0:3969:3978	581030	6	True				
ANR	581543	Statement	(	193:10:3979:3979	581030	7	True				
ANR	581544	Statement	"""loop filter"""	193:11:3980:3992	581030	8	True				
ANR	581545	Statement	)	193:24:3993:3993	581030	9	True				
ANR	581546	ReturnType	static void		581030	1					
ANR	581547	Identifier	apply_loop_filter		581030	2					
ANR	581548	ParameterList	Vp3DecodeContext * s		581030	3					
ANR	581549	Parameter	Vp3DecodeContext * s	1:30:30:48	581030	0	True				
ANR	581550	ParameterType	Vp3DecodeContext *		581030	0					
ANR	581551	Identifier	s		581030	1					
ANR	581552	CFGEntryNode	ENTRY		581030		True				
ANR	581553	CFGExitNode	EXIT		581030		True				
ANR	581554	Symbol	plane		581030						
ANR	581555	Symbol	* x		581030						
ANR	581556	Symbol	s -> quality_index		581030						
ANR	581557	Symbol	MODE_COPY		581030						
ANR	581558	Symbol	filter_limit		581030						
ANR	581559	Symbol	s -> u_fragment_start		581030						
ANR	581560	Symbol	* vp31_ac_scale_factor		581030						
ANR	581561	Symbol	stride		581030						
ANR	581562	Symbol	* width		581030						
ANR	581563	Symbol	s -> all_fragments [ fragment + 1 ] . coding_method		581030						
ANR	581564	Symbol	vp31_ac_scale_factor		581030						
ANR	581565	Symbol	s -> fragment_height		581030						
ANR	581566	Symbol	s -> current_frame . data		581030						
ANR	581567	Symbol	s -> v_fragment_start		581030						
ANR	581568	Symbol	* * s		581030						
ANR	581569	Symbol	s -> fragment_width		581030						
ANR	581570	Symbol	* filter_limit		581030						
ANR	581571	Symbol	height		581030						
ANR	581572	Symbol	* s -> current_frame . data		581030						
ANR	581573	Symbol	vp31_filter_limit_values		581030						
ANR	581574	Symbol	* bounding_values		581030						
ANR	581575	Symbol	s -> all_fragments [ fragment ] . coding_method		581030						
ANR	581576	Symbol	* vp31_filter_limit_values		581030						
ANR	581577	Symbol	bounding_values_array		581030						
ANR	581578	Symbol	s -> all_fragments [ fragment + width ] . coding_method		581030						
ANR	581579	Symbol	s -> all_fragments [ fragment ] . first_pixel		581030						
ANR	581580	Symbol	s -> all_fragments [ fragment + 1 ] . first_pixel		581030						
ANR	581581	Symbol	s -> current_frame . linesize		581030						
ANR	581582	Symbol	* s -> quality_index		581030						
ANR	581583	Symbol	plane_data		581030						
ANR	581584	Symbol	s -> all_fragments		581030						
ANR	581585	Symbol	fragment		581030						
ANR	581586	Symbol	* s -> current_frame		581030						
ANR	581587	Symbol	* s -> all_fragments		581030						
ANR	581588	Symbol	s		581030						
ANR	581589	Symbol	s -> current_frame		581030						
ANR	581590	Symbol	s -> all_fragments [ fragment + width ] . first_pixel		581030						
ANR	581591	Symbol	bounding_values		581030						
ANR	581592	Symbol	x		581030						
ANR	581593	Symbol	width		581030						
ANR	581594	Symbol	* s -> current_frame . linesize		581030						
ANR	581595	Symbol	y		581030						
ANR	581596	Symbol	* fragment		581030						
ANR	581597	Symbol	* s		581030						
