command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	811856	File	/home/p4ultr4n/workplace/ReVeal/raw_code/avcodec_decode_audio3_01_1.c								
ANR	811857	Function	avcodec_decode_audio3	1:0:0:1907							
ANR	811858	FunctionDef	"avcodec_decode_audio3 (AVCodecContext * avctx , int16_t * samples , int * frame_size_ptr , AVPacket * avpkt)"		811857	0					
ANR	811859	CompoundStatement		7:0:220:1907	811857	0					
ANR	811860	IdentifierDeclStatement	AVFrame frame = { 0 } ;	9:4:227:246	811857	0	True				
ANR	811861	IdentifierDecl	frame = { 0 }		811857	0					
ANR	811862	IdentifierDeclType	AVFrame		811857	0					
ANR	811863	Identifier	frame		811857	1					
ANR	811864	AssignmentExpression	frame = { 0 }		811857	2		=			
ANR	811865	Identifier	frame		811857	0					
ANR	811866	InitializerList	0		811857	1					
ANR	811867	PrimaryExpression	0		811857	0					
ANR	811868	IdentifierDeclStatement	"int ret , got_frame = 0 ;"	11:4:253:275	811857	1	True				
ANR	811869	IdentifierDecl	ret		811857	0					
ANR	811870	IdentifierDeclType	int		811857	0					
ANR	811871	Identifier	ret		811857	1					
ANR	811872	IdentifierDecl	got_frame = 0		811857	1					
ANR	811873	IdentifierDeclType	int		811857	0					
ANR	811874	Identifier	got_frame		811857	1					
ANR	811875	AssignmentExpression	got_frame = 0		811857	2		=			
ANR	811876	Identifier	got_frame		811857	0					
ANR	811877	PrimaryExpression	0		811857	1					
ANR	811878	IfStatement	if ( avctx -> get_buffer != avcodec_default_get_buffer )		811857	2					
ANR	811879	Condition	avctx -> get_buffer != avcodec_default_get_buffer	15:8:288:334	811857	0	True				
ANR	811880	EqualityExpression	avctx -> get_buffer != avcodec_default_get_buffer		811857	0		!=			
ANR	811881	PtrMemberAccess	avctx -> get_buffer		811857	0					
ANR	811882	Identifier	avctx		811857	0					
ANR	811883	Identifier	get_buffer		811857	1					
ANR	811884	Identifier	avcodec_default_get_buffer		811857	1					
ANR	811885	CompoundStatement		9:57:116:116	811857	1					
ANR	811886	Statement	av_log	17:8:348:353	811857	0	True				
ANR	811887	Statement	(	17:14:354:354	811857	1	True				
ANR	811888	Statement	avctx	17:15:355:359	811857	2	True				
ANR	811889	Statement	","	17:20:360:360	811857	3	True				
ANR	811890	Statement	AV_LOG_ERROR	17:22:362:373	811857	4	True				
ANR	811891	Statement	","	17:34:374:374	811857	5	True				
ANR	811892	Statement	"""Custom get_buffer() for use with"""	17:36:376:409	811857	6	True				
ANR	811893	Statement	"""avcodec_decode_audio3() detected. Overriding with avcodec_default_get_buffer\\n"""	19:36:448:527	811857	7	True				
ANR	811894	Statement	)	19:116:528:528	811857	8	True				
ANR	811895	ExpressionStatement		19:117:529:529	811857	9	True				
ANR	811896	Statement	av_log	21:8:540:545	811857	10	True				
ANR	811897	Statement	(	21:14:546:546	811857	11	True				
ANR	811898	Statement	avctx	21:15:547:551	811857	12	True				
ANR	811899	Statement	","	21:20:552:552	811857	13	True				
ANR	811900	Statement	AV_LOG_ERROR	21:22:554:565	811857	14	True				
ANR	811901	Statement	","	21:34:566:566	811857	15	True				
ANR	811902	Statement	"""Please port your application to """	21:36:568:601	811857	16	True				
ANR	811903	Statement	"""avcodec_decode_audio4()\\n"""	23:36:640:666	811857	17	True				
ANR	811904	Statement	)	23:63:667:667	811857	18	True				
ANR	811905	ExpressionStatement		23:64:668:668	811857	19	True				
ANR	811906	ExpressionStatement	avctx -> get_buffer = avcodec_default_get_buffer	25:8:679:725	811857	20	True				
ANR	811907	AssignmentExpression	avctx -> get_buffer = avcodec_default_get_buffer		811857	0		=			
ANR	811908	PtrMemberAccess	avctx -> get_buffer		811857	0					
ANR	811909	Identifier	avctx		811857	0					
ANR	811910	Identifier	get_buffer		811857	1					
ANR	811911	Identifier	avcodec_default_get_buffer		811857	1					
ANR	811912	ExpressionStatement	"ret = avcodec_decode_audio4 ( avctx , & frame , & got_frame , avpkt )"	31:4:741:802	811857	3	True				
ANR	811913	AssignmentExpression	"ret = avcodec_decode_audio4 ( avctx , & frame , & got_frame , avpkt )"		811857	0		=			
ANR	811914	Identifier	ret		811857	0					
ANR	811915	CallExpression	"avcodec_decode_audio4 ( avctx , & frame , & got_frame , avpkt )"		811857	1					
ANR	811916	Callee	avcodec_decode_audio4		811857	0					
ANR	811917	Identifier	avcodec_decode_audio4		811857	0					
ANR	811918	ArgumentList	avctx		811857	1					
ANR	811919	Argument	avctx		811857	0					
ANR	811920	Identifier	avctx		811857	0					
ANR	811921	Argument	& frame		811857	1					
ANR	811922	UnaryOperationExpression	& frame		811857	0					
ANR	811923	UnaryOperator	&		811857	0					
ANR	811924	Identifier	frame		811857	1					
ANR	811925	Argument	& got_frame		811857	2					
ANR	811926	UnaryOperationExpression	& got_frame		811857	0					
ANR	811927	UnaryOperator	&		811857	0					
ANR	811928	Identifier	got_frame		811857	1					
ANR	811929	Argument	avpkt		811857	3					
ANR	811930	Identifier	avpkt		811857	0					
ANR	811931	IfStatement	if ( ret >= 0 && got_frame )		811857	4					
ANR	811932	Condition	ret >= 0 && got_frame	35:8:815:835	811857	0	True				
ANR	811933	AndExpression	ret >= 0 && got_frame		811857	0		&&			
ANR	811934	RelationalExpression	ret >= 0		811857	0		>=			
ANR	811935	Identifier	ret		811857	0					
ANR	811936	PrimaryExpression	0		811857	1					
ANR	811937	Identifier	got_frame		811857	1					
ANR	811938	CompoundStatement		35:8:726:942	811857	1					
ANR	811939	IdentifierDeclStatement	"int ch , plane_size ;"	37:8:849:867	811857	0	True				
ANR	811940	IdentifierDecl	ch		811857	0					
ANR	811941	IdentifierDeclType	int		811857	0					
ANR	811942	Identifier	ch		811857	1					
ANR	811943	IdentifierDecl	plane_size		811857	1					
ANR	811944	IdentifierDeclType	int		811857	0					
ANR	811945	Identifier	plane_size		811857	1					
ANR	811946	IdentifierDeclStatement	int planar = av_sample_fmt_is_planar ( avctx -> sample_fmt ) ;	39:8:878:936	811857	1	True				
ANR	811947	IdentifierDecl	planar = av_sample_fmt_is_planar ( avctx -> sample_fmt )		811857	0					
ANR	811948	IdentifierDeclType	int		811857	0					
ANR	811949	Identifier	planar		811857	1					
ANR	811950	AssignmentExpression	planar = av_sample_fmt_is_planar ( avctx -> sample_fmt )		811857	2		=			
ANR	811951	Identifier	planar		811857	0					
ANR	811952	CallExpression	av_sample_fmt_is_planar ( avctx -> sample_fmt )		811857	1					
ANR	811953	Callee	av_sample_fmt_is_planar		811857	0					
ANR	811954	Identifier	av_sample_fmt_is_planar		811857	0					
ANR	811955	ArgumentList	avctx -> sample_fmt		811857	1					
ANR	811956	Argument	avctx -> sample_fmt		811857	0					
ANR	811957	PtrMemberAccess	avctx -> sample_fmt		811857	0					
ANR	811958	Identifier	avctx		811857	0					
ANR	811959	Identifier	sample_fmt		811857	1					
ANR	811960	IdentifierDeclStatement	"int data_size = av_samples_get_buffer_size ( & plane_size , avctx -> channels , frame . nb_samples , avctx -> sample_fmt , 1 ) ;"	41:8:947:1163	811857	2	True				
ANR	811961	IdentifierDecl	"data_size = av_samples_get_buffer_size ( & plane_size , avctx -> channels , frame . nb_samples , avctx -> sample_fmt , 1 )"		811857	0					
ANR	811962	IdentifierDeclType	int		811857	0					
ANR	811963	Identifier	data_size		811857	1					
ANR	811964	AssignmentExpression	"data_size = av_samples_get_buffer_size ( & plane_size , avctx -> channels , frame . nb_samples , avctx -> sample_fmt , 1 )"		811857	2		=			
ANR	811965	Identifier	data_size		811857	0					
ANR	811966	CallExpression	"av_samples_get_buffer_size ( & plane_size , avctx -> channels , frame . nb_samples , avctx -> sample_fmt , 1 )"		811857	1					
ANR	811967	Callee	av_samples_get_buffer_size		811857	0					
ANR	811968	Identifier	av_samples_get_buffer_size		811857	0					
ANR	811969	ArgumentList	& plane_size		811857	1					
ANR	811970	Argument	& plane_size		811857	0					
ANR	811971	UnaryOperationExpression	& plane_size		811857	0					
ANR	811972	UnaryOperator	&		811857	0					
ANR	811973	Identifier	plane_size		811857	1					
ANR	811974	Argument	avctx -> channels		811857	1					
ANR	811975	PtrMemberAccess	avctx -> channels		811857	0					
ANR	811976	Identifier	avctx		811857	0					
ANR	811977	Identifier	channels		811857	1					
ANR	811978	Argument	frame . nb_samples		811857	2					
ANR	811979	MemberAccess	frame . nb_samples		811857	0					
ANR	811980	Identifier	frame		811857	0					
ANR	811981	Identifier	nb_samples		811857	1					
ANR	811982	Argument	avctx -> sample_fmt		811857	3					
ANR	811983	PtrMemberAccess	avctx -> sample_fmt		811857	0					
ANR	811984	Identifier	avctx		811857	0					
ANR	811985	Identifier	sample_fmt		811857	1					
ANR	811986	Argument	1		811857	4					
ANR	811987	PrimaryExpression	1		811857	0					
ANR	811988	IfStatement	if ( * frame_size_ptr < data_size )		811857	3					
ANR	811989	Condition	* frame_size_ptr < data_size	47:12:1178:1204	811857	0	True				
ANR	811990	RelationalExpression	* frame_size_ptr < data_size		811857	0		<			
ANR	811991	UnaryOperationExpression	* frame_size_ptr		811857	0					
ANR	811992	UnaryOperator	*		811857	0					
ANR	811993	Identifier	frame_size_ptr		811857	1					
ANR	811994	Identifier	data_size		811857	1					
ANR	811995	CompoundStatement		41:41:986:986	811857	1					
ANR	811996	Statement	av_log	49:12:1222:1227	811857	0	True				
ANR	811997	Statement	(	49:18:1228:1228	811857	1	True				
ANR	811998	Statement	avctx	49:19:1229:1233	811857	2	True				
ANR	811999	Statement	","	49:24:1234:1234	811857	3	True				
ANR	812000	Statement	AV_LOG_ERROR	49:26:1236:1247	811857	4	True				
ANR	812001	Statement	","	49:38:1248:1248	811857	5	True				
ANR	812002	Statement	"""output buffer size is too small for """	49:40:1250:1287	811857	6	True				
ANR	812003	Statement	"""the current frame (%d < %d)\\n"""	51:40:1330:1360	811857	7	True				
ANR	812004	Statement	","	51:71:1361:1361	811857	8	True				
ANR	812005	Statement	*	51:73:1363:1363	811857	9	True				
ANR	812006	Statement	frame_size_ptr	51:74:1364:1377	811857	10	True				
ANR	812007	Statement	","	51:88:1378:1378	811857	11	True				
ANR	812008	Statement	data_size	51:90:1380:1388	811857	12	True				
ANR	812009	Statement	)	51:99:1389:1389	811857	13	True				
ANR	812010	ExpressionStatement		51:100:1390:1390	811857	14	True				
ANR	812011	ReturnStatement	return AVERROR ( EINVAL ) ;	53:12:1405:1427	811857	15	True				
ANR	812012	CallExpression	AVERROR ( EINVAL )		811857	0					
ANR	812013	Callee	AVERROR		811857	0					
ANR	812014	Identifier	AVERROR		811857	0					
ANR	812015	ArgumentList	EINVAL		811857	1					
ANR	812016	Argument	EINVAL		811857	0					
ANR	812017	Identifier	EINVAL		811857	0					
ANR	812018	ExpressionStatement	"memcpy ( samples , frame . extended_data [ 0 ] , plane_size )"	59:8:1451:1502	811857	4	True				
ANR	812019	CallExpression	"memcpy ( samples , frame . extended_data [ 0 ] , plane_size )"		811857	0					
ANR	812020	Callee	memcpy		811857	0					
ANR	812021	Identifier	memcpy		811857	0					
ANR	812022	ArgumentList	samples		811857	1					
ANR	812023	Argument	samples		811857	0					
ANR	812024	Identifier	samples		811857	0					
ANR	812025	Argument	frame . extended_data [ 0 ]		811857	1					
ANR	812026	ArrayIndexing	frame . extended_data [ 0 ]		811857	0					
ANR	812027	MemberAccess	frame . extended_data		811857	0					
ANR	812028	Identifier	frame		811857	0					
ANR	812029	Identifier	extended_data		811857	1					
ANR	812030	PrimaryExpression	0		811857	1					
ANR	812031	Argument	plane_size		811857	2					
ANR	812032	Identifier	plane_size		811857	0					
ANR	812033	IfStatement	if ( planar && avctx -> channels > 1 )		811857	5					
ANR	812034	Condition	planar && avctx -> channels > 1	63:12:1519:1547	811857	0	True				
ANR	812035	AndExpression	planar && avctx -> channels > 1		811857	0		&&			
ANR	812036	Identifier	planar		811857	0					
ANR	812037	RelationalExpression	avctx -> channels > 1		811857	1		>			
ANR	812038	PtrMemberAccess	avctx -> channels		811857	0					
ANR	812039	Identifier	avctx		811857	0					
ANR	812040	Identifier	channels		811857	1					
ANR	812041	PrimaryExpression	1		811857	1					
ANR	812042	CompoundStatement		59:12:1344:1392	811857	1					
ANR	812043	IdentifierDeclStatement	uint8_t * out = ( ( uint8_t * ) samples ) + plane_size ;	65:12:1565:1613	811857	0	True				
ANR	812044	IdentifierDecl	* out = ( ( uint8_t * ) samples ) + plane_size		811857	0					
ANR	812045	IdentifierDeclType	uint8_t *		811857	0					
ANR	812046	Identifier	out		811857	1					
ANR	812047	AssignmentExpression	* out = ( ( uint8_t * ) samples ) + plane_size		811857	2		=			
ANR	812048	Identifier	out		811857	0					
ANR	812049	AdditiveExpression	( ( uint8_t * ) samples ) + plane_size		811857	1		+			
ANR	812050	CastExpression	( uint8_t * ) samples		811857	0					
ANR	812051	CastTarget	uint8_t *		811857	0					
ANR	812052	Identifier	samples		811857	1					
ANR	812053	Identifier	plane_size		811857	1					
ANR	812054	ForStatement	for ( ch = 1 ; ch < avctx -> channels ; ch ++ )		811857	1					
ANR	812055	ForInit	ch = 1 ;	67:17:1633:1639	811857	0	True				
ANR	812056	AssignmentExpression	ch = 1		811857	0		=			
ANR	812057	Identifier	ch		811857	0					
ANR	812058	PrimaryExpression	1		811857	1					
ANR	812059	Condition	ch < avctx -> channels	67:25:1641:1660	811857	1	True				
ANR	812060	RelationalExpression	ch < avctx -> channels		811857	0		<			
ANR	812061	Identifier	ch		811857	0					
ANR	812062	PtrMemberAccess	avctx -> channels		811857	1					
ANR	812063	Identifier	avctx		811857	0					
ANR	812064	Identifier	channels		811857	1					
ANR	812065	PostIncDecOperationExpression	ch ++	67:47:1663:1666	811857	2	True				
ANR	812066	Identifier	ch		811857	0					
ANR	812067	IncDec	++		811857	1					
ANR	812068	CompoundStatement		61:53:1448:1448	811857	3					
ANR	812069	ExpressionStatement	"memcpy ( out , frame . extended_data [ ch ] , plane_size )"	69:16:1688:1736	811857	0	True				
ANR	812070	CallExpression	"memcpy ( out , frame . extended_data [ ch ] , plane_size )"		811857	0					
ANR	812071	Callee	memcpy		811857	0					
ANR	812072	Identifier	memcpy		811857	0					
ANR	812073	ArgumentList	out		811857	1					
ANR	812074	Argument	out		811857	0					
ANR	812075	Identifier	out		811857	0					
ANR	812076	Argument	frame . extended_data [ ch ]		811857	1					
ANR	812077	ArrayIndexing	frame . extended_data [ ch ]		811857	0					
ANR	812078	MemberAccess	frame . extended_data		811857	0					
ANR	812079	Identifier	frame		811857	0					
ANR	812080	Identifier	extended_data		811857	1					
ANR	812081	Identifier	ch		811857	1					
ANR	812082	Argument	plane_size		811857	2					
ANR	812083	Identifier	plane_size		811857	0					
ANR	812084	ExpressionStatement	out += plane_size	71:16:1755:1772	811857	1	True				
ANR	812085	AssignmentExpression	out += plane_size		811857	0		+=			
ANR	812086	Identifier	out		811857	0					
ANR	812087	Identifier	plane_size		811857	1					
ANR	812088	ExpressionStatement	* frame_size_ptr = data_size	77:8:1809:1836	811857	6	True				
ANR	812089	AssignmentExpression	* frame_size_ptr = data_size		811857	0		=			
ANR	812090	UnaryOperationExpression	* frame_size_ptr		811857	0					
ANR	812091	UnaryOperator	*		811857	0					
ANR	812092	Identifier	frame_size_ptr		811857	1					
ANR	812093	Identifier	data_size		811857	1					
ANR	812094	ElseStatement	else		811857	0					
ANR	812095	CompoundStatement		73:11:1629:1629	811857	0					
ANR	812096	ExpressionStatement	* frame_size_ptr = 0	81:8:1861:1880	811857	0	True				
ANR	812097	AssignmentExpression	* frame_size_ptr = 0		811857	0		=			
ANR	812098	UnaryOperationExpression	* frame_size_ptr		811857	0					
ANR	812099	UnaryOperator	*		811857	0					
ANR	812100	Identifier	frame_size_ptr		811857	1					
ANR	812101	PrimaryExpression	0		811857	1					
ANR	812102	ReturnStatement	return ret ;	85:4:1894:1904	811857	5	True				
ANR	812103	Identifier	ret		811857	0					
ANR	812104	ReturnType	int attribute_align_arg		811857	1					
ANR	812105	Identifier	avcodec_decode_audio3		811857	2					
ANR	812106	ParameterList	"AVCodecContext * avctx , int16_t * samples , int * frame_size_ptr , AVPacket * avpkt"		811857	3					
ANR	812107	Parameter	AVCodecContext * avctx	1:46:46:66	811857	0	True				
ANR	812108	ParameterType	AVCodecContext *		811857	0					
ANR	812109	Identifier	avctx		811857	1					
ANR	812110	Parameter	int16_t * samples	1:69:69:84	811857	1	True				
ANR	812111	ParameterType	int16_t *		811857	0					
ANR	812112	Identifier	samples		811857	1					
ANR	812113	Parameter	int * frame_size_ptr	3:46:134:152	811857	2	True				
ANR	812114	ParameterType	int *		811857	0					
ANR	812115	Identifier	frame_size_ptr		811857	1					
ANR	812116	Parameter	AVPacket * avpkt	5:46:202:216	811857	3	True				
ANR	812117	ParameterType	AVPacket *		811857	0					
ANR	812118	Identifier	avpkt		811857	1					
ANR	812119	CFGEntryNode	ENTRY		811857		True				
ANR	812120	CFGExitNode	EXIT		811857		True				
ANR	812121	Symbol	& plane_size		811857						
ANR	812122	Symbol	frame_size_ptr		811857						
ANR	812123	Symbol	avcodec_default_get_buffer		811857						
ANR	812124	Symbol	* frame		811857						
ANR	812125	Symbol	* ch		811857						
ANR	812126	Symbol	avpkt		811857						
ANR	812127	Symbol	& got_frame		811857						
ANR	812128	Symbol	plane_size		811857						
ANR	812129	Symbol	out		811857						
ANR	812130	Symbol	avctx -> channels		811857						
ANR	812131	Symbol	frame . nb_samples		811857						
ANR	812132	Symbol	* frame . extended_data		811857						
ANR	812133	Symbol	got_frame		811857						
ANR	812134	Symbol	* frame_size_ptr		811857						
ANR	812135	Symbol	av_samples_get_buffer_size		811857						
ANR	812136	Symbol	avctx		811857						
ANR	812137	Symbol	ret		811857						
ANR	812138	Symbol	data_size		811857						
ANR	812139	Symbol	avctx -> sample_fmt		811857						
ANR	812140	Symbol	frame . extended_data		811857						
ANR	812141	Symbol	avctx -> get_buffer		811857						
ANR	812142	Symbol	planar		811857						
ANR	812143	Symbol	ch		811857						
ANR	812144	Symbol	avcodec_decode_audio4		811857						
ANR	812145	Symbol	& frame		811857						
ANR	812146	Symbol	samples		811857						
ANR	812147	Symbol	EINVAL		811857						
ANR	812148	Symbol	* avctx		811857						
ANR	812149	Symbol	AVERROR		811857						
ANR	812150	Symbol	av_sample_fmt_is_planar		811857						
ANR	812151	Symbol	frame		811857						
