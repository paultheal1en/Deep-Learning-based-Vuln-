command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9160486	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vmdaudio_decode_frame_02_1.c								
ANR	9160487	Function	vmdaudio_decode_frame	1:0:0:1444							
ANR	9160488	FunctionDef	"vmdaudio_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		9160487	0					
ANR	9160489	CompoundStatement		7:0:170:1444	9160487	0					
ANR	9160490	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:177:209	9160487	0	True				
ANR	9160491	IdentifierDecl	* buf = avpkt -> data		9160487	0					
ANR	9160492	IdentifierDeclType	const uint8_t *		9160487	0					
ANR	9160493	Identifier	buf		9160487	1					
ANR	9160494	AssignmentExpression	* buf = avpkt -> data		9160487	2		=			
ANR	9160495	Identifier	buf		9160487	0					
ANR	9160496	PtrMemberAccess	avpkt -> data		9160487	1					
ANR	9160497	Identifier	avpkt		9160487	0					
ANR	9160498	Identifier	data		9160487	1					
ANR	9160499	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:216:242	9160487	1	True				
ANR	9160500	IdentifierDecl	buf_size = avpkt -> size		9160487	0					
ANR	9160501	IdentifierDeclType	int		9160487	0					
ANR	9160502	Identifier	buf_size		9160487	1					
ANR	9160503	AssignmentExpression	buf_size = avpkt -> size		9160487	2		=			
ANR	9160504	Identifier	buf_size		9160487	0					
ANR	9160505	PtrMemberAccess	avpkt -> size		9160487	1					
ANR	9160506	Identifier	avpkt		9160487	0					
ANR	9160507	Identifier	size		9160487	1					
ANR	9160508	IdentifierDeclStatement	VmdAudioContext * s = avctx -> priv_data ;	13:4:249:286	9160487	2	True				
ANR	9160509	IdentifierDecl	* s = avctx -> priv_data		9160487	0					
ANR	9160510	IdentifierDeclType	VmdAudioContext *		9160487	0					
ANR	9160511	Identifier	s		9160487	1					
ANR	9160512	AssignmentExpression	* s = avctx -> priv_data		9160487	2		=			
ANR	9160513	Identifier	s		9160487	0					
ANR	9160514	PtrMemberAccess	avctx -> priv_data		9160487	1					
ANR	9160515	Identifier	avctx		9160487	0					
ANR	9160516	Identifier	priv_data		9160487	1					
ANR	9160517	IdentifierDeclStatement	"int block_type , silent_chunks ;"	15:4:293:322	9160487	3	True				
ANR	9160518	IdentifierDecl	block_type		9160487	0					
ANR	9160519	IdentifierDeclType	int		9160487	0					
ANR	9160520	Identifier	block_type		9160487	1					
ANR	9160521	IdentifierDecl	silent_chunks		9160487	1					
ANR	9160522	IdentifierDeclType	int		9160487	0					
ANR	9160523	Identifier	silent_chunks		9160487	1					
ANR	9160524	IdentifierDeclStatement	unsigned char * output_samples = ( unsigned char * ) data ;	17:4:329:382	9160487	4	True				
ANR	9160525	IdentifierDecl	* output_samples = ( unsigned char * ) data		9160487	0					
ANR	9160526	IdentifierDeclType	unsigned char *		9160487	0					
ANR	9160527	Identifier	output_samples		9160487	1					
ANR	9160528	AssignmentExpression	* output_samples = ( unsigned char * ) data		9160487	2		=			
ANR	9160529	Identifier	output_samples		9160487	0					
ANR	9160530	CastExpression	( unsigned char * ) data		9160487	1					
ANR	9160531	CastTarget	unsigned char *		9160487	0					
ANR	9160532	Identifier	data		9160487	1					
ANR	9160533	IfStatement	if ( buf_size < 16 )		9160487	5					
ANR	9160534	Condition	buf_size < 16	21:8:395:407	9160487	0	True				
ANR	9160535	RelationalExpression	buf_size < 16		9160487	0		<			
ANR	9160536	Identifier	buf_size		9160487	0					
ANR	9160537	PrimaryExpression	16		9160487	1					
ANR	9160538	CompoundStatement		15:23:239:239	9160487	1					
ANR	9160539	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""skipping small junk packet\\n"" )"	23:8:421:482	9160487	0	True				
ANR	9160540	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""skipping small junk packet\\n"" )"		9160487	0					
ANR	9160541	Callee	av_log		9160487	0					
ANR	9160542	Identifier	av_log		9160487	0					
ANR	9160543	ArgumentList	avctx		9160487	1					
ANR	9160544	Argument	avctx		9160487	0					
ANR	9160545	Identifier	avctx		9160487	0					
ANR	9160546	Argument	AV_LOG_WARNING		9160487	1					
ANR	9160547	Identifier	AV_LOG_WARNING		9160487	0					
ANR	9160548	Argument	"""skipping small junk packet\\n"""		9160487	2					
ANR	9160549	PrimaryExpression	"""skipping small junk packet\\n"""		9160487	0					
ANR	9160550	ExpressionStatement	* data_size = 0	25:8:493:507	9160487	1	True				
ANR	9160551	AssignmentExpression	* data_size = 0		9160487	0		=			
ANR	9160552	UnaryOperationExpression	* data_size		9160487	0					
ANR	9160553	UnaryOperator	*		9160487	0					
ANR	9160554	Identifier	data_size		9160487	1					
ANR	9160555	PrimaryExpression	0		9160487	1					
ANR	9160556	ReturnStatement	return buf_size ;	27:8:518:533	9160487	2	True				
ANR	9160557	Identifier	buf_size		9160487	0					
ANR	9160558	ExpressionStatement	block_type = buf [ 6 ]	33:4:549:568	9160487	6	True				
ANR	9160559	AssignmentExpression	block_type = buf [ 6 ]		9160487	0		=			
ANR	9160560	Identifier	block_type		9160487	0					
ANR	9160561	ArrayIndexing	buf [ 6 ]		9160487	1					
ANR	9160562	Identifier	buf		9160487	0					
ANR	9160563	PrimaryExpression	6		9160487	1					
ANR	9160564	IfStatement	if ( block_type < BLOCK_TYPE_AUDIO || block_type > BLOCK_TYPE_SILENCE )		9160487	7					
ANR	9160565	Condition	block_type < BLOCK_TYPE_AUDIO || block_type > BLOCK_TYPE_SILENCE	35:8:579:642	9160487	0	True				
ANR	9160566	OrExpression	block_type < BLOCK_TYPE_AUDIO || block_type > BLOCK_TYPE_SILENCE		9160487	0		||			
ANR	9160567	RelationalExpression	block_type < BLOCK_TYPE_AUDIO		9160487	0		<			
ANR	9160568	Identifier	block_type		9160487	0					
ANR	9160569	Identifier	BLOCK_TYPE_AUDIO		9160487	1					
ANR	9160570	RelationalExpression	block_type > BLOCK_TYPE_SILENCE		9160487	1		>			
ANR	9160571	Identifier	block_type		9160487	0					
ANR	9160572	Identifier	BLOCK_TYPE_SILENCE		9160487	1					
ANR	9160573	CompoundStatement		29:74:474:474	9160487	1					
ANR	9160574	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unknown block type: %d\\n"" , block_type )"	37:8:656:723	9160487	0	True				
ANR	9160575	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unknown block type: %d\\n"" , block_type )"		9160487	0					
ANR	9160576	Callee	av_log		9160487	0					
ANR	9160577	Identifier	av_log		9160487	0					
ANR	9160578	ArgumentList	avctx		9160487	1					
ANR	9160579	Argument	avctx		9160487	0					
ANR	9160580	Identifier	avctx		9160487	0					
ANR	9160581	Argument	AV_LOG_ERROR		9160487	1					
ANR	9160582	Identifier	AV_LOG_ERROR		9160487	0					
ANR	9160583	Argument	"""unknown block type: %d\\n"""		9160487	2					
ANR	9160584	PrimaryExpression	"""unknown block type: %d\\n"""		9160487	0					
ANR	9160585	Argument	block_type		9160487	3					
ANR	9160586	Identifier	block_type		9160487	0					
ANR	9160587	ReturnStatement	return AVERROR ( EINVAL ) ;	39:8:734:756	9160487	1	True				
ANR	9160588	CallExpression	AVERROR ( EINVAL )		9160487	0					
ANR	9160589	Callee	AVERROR		9160487	0					
ANR	9160590	Identifier	AVERROR		9160487	0					
ANR	9160591	ArgumentList	EINVAL		9160487	1					
ANR	9160592	Argument	EINVAL		9160487	0					
ANR	9160593	Identifier	EINVAL		9160487	0					
ANR	9160594	ExpressionStatement	buf += 16	43:4:770:784	9160487	8	True				
ANR	9160595	AssignmentExpression	buf += 16		9160487	0		+=			
ANR	9160596	Identifier	buf		9160487	0					
ANR	9160597	PrimaryExpression	16		9160487	1					
ANR	9160598	ExpressionStatement	buf_size -= 16	45:4:791:805	9160487	9	True				
ANR	9160599	AssignmentExpression	buf_size -= 16		9160487	0		-=			
ANR	9160600	Identifier	buf_size		9160487	0					
ANR	9160601	PrimaryExpression	16		9160487	1					
ANR	9160602	ExpressionStatement	silent_chunks = 0	49:4:814:831	9160487	10	True				
ANR	9160603	AssignmentExpression	silent_chunks = 0		9160487	0		=			
ANR	9160604	Identifier	silent_chunks		9160487	0					
ANR	9160605	PrimaryExpression	0		9160487	1					
ANR	9160606	IfStatement	if ( block_type == BLOCK_TYPE_INITIAL )		9160487	11					
ANR	9160607	Condition	block_type == BLOCK_TYPE_INITIAL	51:8:842:873	9160487	0	True				
ANR	9160608	EqualityExpression	block_type == BLOCK_TYPE_INITIAL		9160487	0		==			
ANR	9160609	Identifier	block_type		9160487	0					
ANR	9160610	Identifier	BLOCK_TYPE_INITIAL		9160487	1					
ANR	9160611	CompoundStatement		47:8:716:745	9160487	1					
ANR	9160612	IdentifierDeclStatement	uint32_t flags = AV_RB32 ( buf ) ;	53:8:887:916	9160487	0	True				
ANR	9160613	IdentifierDecl	flags = AV_RB32 ( buf )		9160487	0					
ANR	9160614	IdentifierDeclType	uint32_t		9160487	0					
ANR	9160615	Identifier	flags		9160487	1					
ANR	9160616	AssignmentExpression	flags = AV_RB32 ( buf )		9160487	2		=			
ANR	9160617	Identifier	flags		9160487	0					
ANR	9160618	CallExpression	AV_RB32 ( buf )		9160487	1					
ANR	9160619	Callee	AV_RB32		9160487	0					
ANR	9160620	Identifier	AV_RB32		9160487	0					
ANR	9160621	ArgumentList	buf		9160487	1					
ANR	9160622	Argument	buf		9160487	0					
ANR	9160623	Identifier	buf		9160487	0					
ANR	9160624	ExpressionStatement	silent_chunks = av_popcount ( flags )	55:8:927:962	9160487	1	True				
ANR	9160625	AssignmentExpression	silent_chunks = av_popcount ( flags )		9160487	0		=			
ANR	9160626	Identifier	silent_chunks		9160487	0					
ANR	9160627	CallExpression	av_popcount ( flags )		9160487	1					
ANR	9160628	Callee	av_popcount		9160487	0					
ANR	9160629	Identifier	av_popcount		9160487	0					
ANR	9160630	ArgumentList	flags		9160487	1					
ANR	9160631	Argument	flags		9160487	0					
ANR	9160632	Identifier	flags		9160487	0					
ANR	9160633	ExpressionStatement	buf += 4	57:8:973:986	9160487	2	True				
ANR	9160634	AssignmentExpression	buf += 4		9160487	0		+=			
ANR	9160635	Identifier	buf		9160487	0					
ANR	9160636	PrimaryExpression	4		9160487	1					
ANR	9160637	ExpressionStatement	buf_size -= 4	59:8:997:1010	9160487	3	True				
ANR	9160638	AssignmentExpression	buf_size -= 4		9160487	0		-=			
ANR	9160639	Identifier	buf_size		9160487	0					
ANR	9160640	PrimaryExpression	4		9160487	1					
ANR	9160641	ElseStatement	else		9160487	0					
ANR	9160642	IfStatement	if ( block_type == BLOCK_TYPE_SILENCE )		9160487	0					
ANR	9160643	Condition	block_type == BLOCK_TYPE_SILENCE	61:15:1028:1059	9160487	0	True				
ANR	9160644	EqualityExpression	block_type == BLOCK_TYPE_SILENCE		9160487	0		==			
ANR	9160645	Identifier	block_type		9160487	0					
ANR	9160646	Identifier	BLOCK_TYPE_SILENCE		9160487	1					
ANR	9160647	CompoundStatement		55:49:891:891	9160487	1					
ANR	9160648	ExpressionStatement	silent_chunks = 1	63:8:1073:1090	9160487	0	True				
ANR	9160649	AssignmentExpression	silent_chunks = 1		9160487	0		=			
ANR	9160650	Identifier	silent_chunks		9160487	0					
ANR	9160651	PrimaryExpression	1		9160487	1					
ANR	9160652	ExpressionStatement	buf_size = 0	65:8:1101:1113	9160487	1	True				
ANR	9160653	AssignmentExpression	buf_size = 0		9160487	0		=			
ANR	9160654	Identifier	buf_size		9160487	0					
ANR	9160655	PrimaryExpression	0		9160487	1					
ANR	9160656	IfStatement	if ( * data_size < ( avctx -> block_align * silent_chunks + buf_size ) * s -> out_bps )		9160487	12					
ANR	9160657	Condition	* data_size < ( avctx -> block_align * silent_chunks + buf_size ) * s -> out_bps	73:8:1234:1304	9160487	0	True				
ANR	9160658	RelationalExpression	* data_size < ( avctx -> block_align * silent_chunks + buf_size ) * s -> out_bps		9160487	0		<			
ANR	9160659	UnaryOperationExpression	* data_size		9160487	0					
ANR	9160660	UnaryOperator	*		9160487	0					
ANR	9160661	Identifier	data_size		9160487	1					
ANR	9160662	MultiplicativeExpression	( avctx -> block_align * silent_chunks + buf_size ) * s -> out_bps		9160487	1		*			
ANR	9160663	AdditiveExpression	avctx -> block_align * silent_chunks + buf_size		9160487	0		+			
ANR	9160664	MultiplicativeExpression	avctx -> block_align * silent_chunks		9160487	0		*			
ANR	9160665	PtrMemberAccess	avctx -> block_align		9160487	0					
ANR	9160666	Identifier	avctx		9160487	0					
ANR	9160667	Identifier	block_align		9160487	1					
ANR	9160668	Identifier	silent_chunks		9160487	1					
ANR	9160669	Identifier	buf_size		9160487	1					
ANR	9160670	PtrMemberAccess	s -> out_bps		9160487	1					
ANR	9160671	Identifier	s		9160487	0					
ANR	9160672	Identifier	out_bps		9160487	1					
ANR	9160673	ReturnStatement	return - 1 ;	75:8:1316:1325	9160487	1	True				
ANR	9160674	UnaryOperationExpression	- 1		9160487	0					
ANR	9160675	UnaryOperator	-		9160487	0					
ANR	9160676	PrimaryExpression	1		9160487	1					
ANR	9160677	ExpressionStatement	"* data_size = vmdaudio_loadsound ( s , output_samples , buf , silent_chunks , buf_size )"	79:4:1334:1414	9160487	13	True				
ANR	9160678	AssignmentExpression	"* data_size = vmdaudio_loadsound ( s , output_samples , buf , silent_chunks , buf_size )"		9160487	0		=			
ANR	9160679	UnaryOperationExpression	* data_size		9160487	0					
ANR	9160680	UnaryOperator	*		9160487	0					
ANR	9160681	Identifier	data_size		9160487	1					
ANR	9160682	CallExpression	"vmdaudio_loadsound ( s , output_samples , buf , silent_chunks , buf_size )"		9160487	1					
ANR	9160683	Callee	vmdaudio_loadsound		9160487	0					
ANR	9160684	Identifier	vmdaudio_loadsound		9160487	0					
ANR	9160685	ArgumentList	s		9160487	1					
ANR	9160686	Argument	s		9160487	0					
ANR	9160687	Identifier	s		9160487	0					
ANR	9160688	Argument	output_samples		9160487	1					
ANR	9160689	Identifier	output_samples		9160487	0					
ANR	9160690	Argument	buf		9160487	2					
ANR	9160691	Identifier	buf		9160487	0					
ANR	9160692	Argument	silent_chunks		9160487	3					
ANR	9160693	Identifier	silent_chunks		9160487	0					
ANR	9160694	Argument	buf_size		9160487	4					
ANR	9160695	Identifier	buf_size		9160487	0					
ANR	9160696	ReturnStatement	return avpkt -> size ;	83:4:1423:1441	9160487	14	True				
ANR	9160697	PtrMemberAccess	avpkt -> size		9160487	0					
ANR	9160698	Identifier	avpkt		9160487	0					
ANR	9160699	Identifier	size		9160487	1					
ANR	9160700	ReturnType	static int		9160487	1					
ANR	9160701	Identifier	vmdaudio_decode_frame		9160487	2					
ANR	9160702	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		9160487	3					
ANR	9160703	Parameter	AVCodecContext * avctx	1:33:33:53	9160487	0	True				
ANR	9160704	ParameterType	AVCodecContext *		9160487	0					
ANR	9160705	Identifier	avctx		9160487	1					
ANR	9160706	Parameter	void * data	3:33:90:99	9160487	1	True				
ANR	9160707	ParameterType	void *		9160487	0					
ANR	9160708	Identifier	data		9160487	1					
ANR	9160709	Parameter	int * data_size	3:45:102:115	9160487	2	True				
ANR	9160710	ParameterType	int *		9160487	0					
ANR	9160711	Identifier	data_size		9160487	1					
ANR	9160712	Parameter	AVPacket * avpkt	5:33:152:166	9160487	3	True				
ANR	9160713	ParameterType	AVPacket *		9160487	0					
ANR	9160714	Identifier	avpkt		9160487	1					
ANR	9160715	CFGEntryNode	ENTRY		9160487		True				
ANR	9160716	CFGExitNode	EXIT		9160487		True				
ANR	9160717	Symbol	block_type		9160487						
ANR	9160718	Symbol	data		9160487						
ANR	9160719	Symbol	flags		9160487						
ANR	9160720	Symbol	avpkt		9160487						
ANR	9160721	Symbol	* data_size		9160487						
ANR	9160722	Symbol	BLOCK_TYPE_AUDIO		9160487						
ANR	9160723	Symbol	AV_RB32		9160487						
ANR	9160724	Symbol	avctx -> block_align		9160487						
ANR	9160725	Symbol	BLOCK_TYPE_SILENCE		9160487						
ANR	9160726	Symbol	avpkt -> size		9160487						
ANR	9160727	Symbol	avctx		9160487						
ANR	9160728	Symbol	s -> out_bps		9160487						
ANR	9160729	Symbol	data_size		9160487						
ANR	9160730	Symbol	* avpkt		9160487						
ANR	9160731	Symbol	* buf		9160487						
ANR	9160732	Symbol	AV_LOG_ERROR		9160487						
ANR	9160733	Symbol	buf_size		9160487						
ANR	9160734	Symbol	output_samples		9160487						
ANR	9160735	Symbol	avctx -> priv_data		9160487						
ANR	9160736	Symbol	av_popcount		9160487						
ANR	9160737	Symbol	EINVAL		9160487						
ANR	9160738	Symbol	buf		9160487						
ANR	9160739	Symbol	* avctx		9160487						
ANR	9160740	Symbol	s		9160487						
ANR	9160741	Symbol	BLOCK_TYPE_INITIAL		9160487						
ANR	9160742	Symbol	avpkt -> data		9160487						
ANR	9160743	Symbol	AVERROR		9160487						
ANR	9160744	Symbol	AV_LOG_WARNING		9160487						
ANR	9160745	Symbol	silent_chunks		9160487						
ANR	9160746	Symbol	* s		9160487						
ANR	9160747	Symbol	vmdaudio_loadsound		9160487						
