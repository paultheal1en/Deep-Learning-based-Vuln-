command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1222695	File	/home/p4ultr4n/workplace/ReVeal/raw_code/cdg_load_palette_1.c								
ANR	1222696	Function	cdg_load_palette	1:0:0:575							
ANR	1222697	FunctionDef	"cdg_load_palette (CDGraphicsContext * cc , uint8_t * data , int low)"		1222696	0					
ANR	1222698	CompoundStatement		3:0:77:575	1222696	0					
ANR	1222699	IdentifierDeclStatement	"uint8_t r , g , b ;"	5:4:84:99	1222696	0	True				
ANR	1222700	IdentifierDecl	r		1222696	0					
ANR	1222701	IdentifierDeclType	uint8_t		1222696	0					
ANR	1222702	Identifier	r		1222696	1					
ANR	1222703	IdentifierDecl	g		1222696	1					
ANR	1222704	IdentifierDeclType	uint8_t		1222696	0					
ANR	1222705	Identifier	g		1222696	1					
ANR	1222706	IdentifierDecl	b		1222696	2					
ANR	1222707	IdentifierDeclType	uint8_t		1222696	0					
ANR	1222708	Identifier	b		1222696	1					
ANR	1222709	IdentifierDeclStatement	uint16_t color ;	7:4:106:120	1222696	1	True				
ANR	1222710	IdentifierDecl	color		1222696	0					
ANR	1222711	IdentifierDeclType	uint16_t		1222696	0					
ANR	1222712	Identifier	color		1222696	1					
ANR	1222713	IdentifierDeclStatement	int i ;	9:4:127:132	1222696	2	True				
ANR	1222714	IdentifierDecl	i		1222696	0					
ANR	1222715	IdentifierDeclType	int		1222696	0					
ANR	1222716	Identifier	i		1222696	1					
ANR	1222717	IdentifierDeclStatement	int array_offset = low ? 0 : 8 ;	11:4:139:170	1222696	3	True				
ANR	1222718	IdentifierDecl	array_offset = low ? 0 : 8		1222696	0					
ANR	1222719	IdentifierDeclType	int		1222696	0					
ANR	1222720	Identifier	array_offset		1222696	1					
ANR	1222721	AssignmentExpression	array_offset = low ? 0 : 8		1222696	2		=			
ANR	1222722	Identifier	array_offset		1222696	0					
ANR	1222723	ConditionalExpression	low ? 0 : 8		1222696	1					
ANR	1222724	Condition	low		1222696	0					
ANR	1222725	Identifier	low		1222696	0					
ANR	1222726	PrimaryExpression	0		1222696	1					
ANR	1222727	PrimaryExpression	8		1222696	2					
ANR	1222728	IdentifierDeclStatement	uint32_t * palette = ( uint32_t * ) cc -> frame . data [ 1 ] ;	13:4:177:227	1222696	4	True				
ANR	1222729	IdentifierDecl	* palette = ( uint32_t * ) cc -> frame . data [ 1 ]		1222696	0					
ANR	1222730	IdentifierDeclType	uint32_t *		1222696	0					
ANR	1222731	Identifier	palette		1222696	1					
ANR	1222732	AssignmentExpression	* palette = ( uint32_t * ) cc -> frame . data [ 1 ]		1222696	2		=			
ANR	1222733	Identifier	palette		1222696	0					
ANR	1222734	CastExpression	( uint32_t * ) cc -> frame . data [ 1 ]		1222696	1					
ANR	1222735	CastTarget	uint32_t *		1222696	0					
ANR	1222736	ArrayIndexing	cc -> frame . data [ 1 ]		1222696	1					
ANR	1222737	MemberAccess	cc -> frame . data		1222696	0					
ANR	1222738	PtrMemberAccess	cc -> frame		1222696	0					
ANR	1222739	Identifier	cc		1222696	0					
ANR	1222740	Identifier	frame		1222696	1					
ANR	1222741	Identifier	data		1222696	1					
ANR	1222742	PrimaryExpression	1		1222696	1					
ANR	1222743	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		1222696	5					
ANR	1222744	ForInit	i = 0 ;	17:9:241:246	1222696	0	True				
ANR	1222745	AssignmentExpression	i = 0		1222696	0		=			
ANR	1222746	Identifier	i		1222696	0					
ANR	1222747	PrimaryExpression	0		1222696	1					
ANR	1222748	Condition	i < 8	17:16:248:252	1222696	1	True				
ANR	1222749	RelationalExpression	i < 8		1222696	0		<			
ANR	1222750	Identifier	i		1222696	0					
ANR	1222751	PrimaryExpression	8		1222696	1					
ANR	1222752	PostIncDecOperationExpression	i ++	17:23:255:257	1222696	2	True				
ANR	1222753	Identifier	i		1222696	0					
ANR	1222754	IncDec	++		1222696	1					
ANR	1222755	CompoundStatement		15:28:182:182	1222696	3					
ANR	1222756	ExpressionStatement	color = ( data [ 2 * i ] << 6 ) + ( data [ 2 * i + 1 ] & 0x3F )	19:8:271:324	1222696	0	True				
ANR	1222757	AssignmentExpression	color = ( data [ 2 * i ] << 6 ) + ( data [ 2 * i + 1 ] & 0x3F )		1222696	0		=			
ANR	1222758	Identifier	color		1222696	0					
ANR	1222759	AdditiveExpression	( data [ 2 * i ] << 6 ) + ( data [ 2 * i + 1 ] & 0x3F )		1222696	1		+			
ANR	1222760	ShiftExpression	data [ 2 * i ] << 6		1222696	0		<<			
ANR	1222761	ArrayIndexing	data [ 2 * i ]		1222696	0					
ANR	1222762	Identifier	data		1222696	0					
ANR	1222763	MultiplicativeExpression	2 * i		1222696	1		*			
ANR	1222764	PrimaryExpression	2		1222696	0					
ANR	1222765	Identifier	i		1222696	1					
ANR	1222766	PrimaryExpression	6		1222696	1					
ANR	1222767	BitAndExpression	data [ 2 * i + 1 ] & 0x3F		1222696	1		&			
ANR	1222768	ArrayIndexing	data [ 2 * i + 1 ]		1222696	0					
ANR	1222769	Identifier	data		1222696	0					
ANR	1222770	AdditiveExpression	2 * i + 1		1222696	1		+			
ANR	1222771	MultiplicativeExpression	2 * i		1222696	0		*			
ANR	1222772	PrimaryExpression	2		1222696	0					
ANR	1222773	Identifier	i		1222696	1					
ANR	1222774	PrimaryExpression	1		1222696	1					
ANR	1222775	PrimaryExpression	0x3F		1222696	1					
ANR	1222776	ExpressionStatement	r = ( ( color >> 8 ) & 0x000F ) * 17	21:8:335:367	1222696	1	True				
ANR	1222777	AssignmentExpression	r = ( ( color >> 8 ) & 0x000F ) * 17		1222696	0		=			
ANR	1222778	Identifier	r		1222696	0					
ANR	1222779	MultiplicativeExpression	( ( color >> 8 ) & 0x000F ) * 17		1222696	1		*			
ANR	1222780	BitAndExpression	( color >> 8 ) & 0x000F		1222696	0		&			
ANR	1222781	ShiftExpression	color >> 8		1222696	0		>>			
ANR	1222782	Identifier	color		1222696	0					
ANR	1222783	PrimaryExpression	8		1222696	1					
ANR	1222784	PrimaryExpression	0x000F		1222696	1					
ANR	1222785	PrimaryExpression	17		1222696	1					
ANR	1222786	ExpressionStatement	g = ( ( color >> 4 ) & 0x000F ) * 17	23:8:378:410	1222696	2	True				
ANR	1222787	AssignmentExpression	g = ( ( color >> 4 ) & 0x000F ) * 17		1222696	0		=			
ANR	1222788	Identifier	g		1222696	0					
ANR	1222789	MultiplicativeExpression	( ( color >> 4 ) & 0x000F ) * 17		1222696	1		*			
ANR	1222790	BitAndExpression	( color >> 4 ) & 0x000F		1222696	0		&			
ANR	1222791	ShiftExpression	color >> 4		1222696	0		>>			
ANR	1222792	Identifier	color		1222696	0					
ANR	1222793	PrimaryExpression	4		1222696	1					
ANR	1222794	PrimaryExpression	0x000F		1222696	1					
ANR	1222795	PrimaryExpression	17		1222696	1					
ANR	1222796	ExpressionStatement	b = ( ( color ) & 0x000F ) * 17	25:8:421:453	1222696	3	True				
ANR	1222797	AssignmentExpression	b = ( ( color ) & 0x000F ) * 17		1222696	0		=			
ANR	1222798	Identifier	b		1222696	0					
ANR	1222799	MultiplicativeExpression	( ( color ) & 0x000F ) * 17		1222696	1		*			
ANR	1222800	CastExpression	( color ) & 0x000F		1222696	0					
ANR	1222801	CastTarget	color		1222696	0					
ANR	1222802	UnaryOperationExpression	& 0x000F		1222696	1					
ANR	1222803	UnaryOperator	&		1222696	0					
ANR	1222804	PrimaryExpression	0x000F		1222696	1					
ANR	1222805	PrimaryExpression	17		1222696	1					
ANR	1222806	ExpressionStatement	palette [ i + array_offset ] = 0xFF << 24 | r << 16 | g << 8 | b	27:8:464:525	1222696	4	True				
ANR	1222807	AssignmentExpression	palette [ i + array_offset ] = 0xFF << 24 | r << 16 | g << 8 | b		1222696	0		=			
ANR	1222808	ArrayIndexing	palette [ i + array_offset ]		1222696	0					
ANR	1222809	Identifier	palette		1222696	0					
ANR	1222810	AdditiveExpression	i + array_offset		1222696	1		+			
ANR	1222811	Identifier	i		1222696	0					
ANR	1222812	Identifier	array_offset		1222696	1					
ANR	1222813	InclusiveOrExpression	0xFF << 24 | r << 16 | g << 8 | b		1222696	1		|			
ANR	1222814	ShiftExpression	0xFF << 24		1222696	0		<<			
ANR	1222815	PrimaryExpression	0xFF		1222696	0					
ANR	1222816	PrimaryExpression	24		1222696	1					
ANR	1222817	InclusiveOrExpression	r << 16 | g << 8 | b		1222696	1		|			
ANR	1222818	ShiftExpression	r << 16		1222696	0		<<			
ANR	1222819	Identifier	r		1222696	0					
ANR	1222820	PrimaryExpression	16		1222696	1					
ANR	1222821	InclusiveOrExpression	g << 8 | b		1222696	1		|			
ANR	1222822	ShiftExpression	g << 8		1222696	0		<<			
ANR	1222823	Identifier	g		1222696	0					
ANR	1222824	PrimaryExpression	8		1222696	1					
ANR	1222825	Identifier	b		1222696	1					
ANR	1222826	ExpressionStatement	cc -> frame . palette_has_changed = 1	31:4:539:572	1222696	6	True				
ANR	1222827	AssignmentExpression	cc -> frame . palette_has_changed = 1		1222696	0		=			
ANR	1222828	MemberAccess	cc -> frame . palette_has_changed		1222696	0					
ANR	1222829	PtrMemberAccess	cc -> frame		1222696	0					
ANR	1222830	Identifier	cc		1222696	0					
ANR	1222831	Identifier	frame		1222696	1					
ANR	1222832	Identifier	palette_has_changed		1222696	1					
ANR	1222833	PrimaryExpression	1		1222696	1					
ANR	1222834	ReturnType	static void		1222696	1					
ANR	1222835	Identifier	cdg_load_palette		1222696	2					
ANR	1222836	ParameterList	"CDGraphicsContext * cc , uint8_t * data , int low"		1222696	3					
ANR	1222837	Parameter	CDGraphicsContext * cc	1:29:29:49	1222696	0	True				
ANR	1222838	ParameterType	CDGraphicsContext *		1222696	0					
ANR	1222839	Identifier	cc		1222696	1					
ANR	1222840	Parameter	uint8_t * data	1:52:52:64	1222696	1	True				
ANR	1222841	ParameterType	uint8_t *		1222696	0					
ANR	1222842	Identifier	data		1222696	1					
ANR	1222843	Parameter	int low	1:67:67:73	1222696	2	True				
ANR	1222844	ParameterType	int		1222696	0					
ANR	1222845	Identifier	low		1222696	1					
ANR	1222846	CFGEntryNode	ENTRY		1222696		True				
ANR	1222847	CFGExitNode	EXIT		1222696		True				
ANR	1222848	Symbol	cc		1222696						
ANR	1222849	Symbol	b		1222696						
ANR	1222850	Symbol	cc -> frame . palette_has_changed		1222696						
ANR	1222851	Symbol	data		1222696						
ANR	1222852	Symbol	color		1222696						
ANR	1222853	Symbol	* palette		1222696						
ANR	1222854	Symbol	* cc		1222696						
ANR	1222855	Symbol	array_offset		1222696						
ANR	1222856	Symbol	g		1222696						
ANR	1222857	Symbol	i		1222696						
ANR	1222858	Symbol	* cc -> frame . data		1222696						
ANR	1222859	Symbol	* array_offset		1222696						
ANR	1222860	Symbol	* * cc		1222696						
ANR	1222861	Symbol	r		1222696						
ANR	1222862	Symbol	* i		1222696						
ANR	1222863	Symbol	cc -> frame		1222696						
ANR	1222864	Symbol	low		1222696						
ANR	1222865	Symbol	* cc -> frame		1222696						
ANR	1222866	Symbol	palette		1222696						
ANR	1222867	Symbol	cc -> frame . data		1222696						
ANR	1222868	Symbol	* data		1222696						
