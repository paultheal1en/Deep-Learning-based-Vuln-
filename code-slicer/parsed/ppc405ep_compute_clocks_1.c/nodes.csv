command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6586059	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ppc405ep_compute_clocks_1.c								
ANR	6586060	Function	ppc405ep_compute_clocks	1:0:0:3955							
ANR	6586061	FunctionDef	ppc405ep_compute_clocks (ppc405ep_cpc_t * cpc)		6586060	0					
ANR	6586062	CompoundStatement		3:0:59:3955	6586060	0					
ANR	6586063	IdentifierDeclStatement	"uint32_t CPU_clk , PLB_clk , OPB_clk , EBC_clk , MAL_clk , PCI_clk ;"	5:4:66:127	6586060	0	True				
ANR	6586064	IdentifierDecl	CPU_clk		6586060	0					
ANR	6586065	IdentifierDeclType	uint32_t		6586060	0					
ANR	6586066	Identifier	CPU_clk		6586060	1					
ANR	6586067	IdentifierDecl	PLB_clk		6586060	1					
ANR	6586068	IdentifierDeclType	uint32_t		6586060	0					
ANR	6586069	Identifier	PLB_clk		6586060	1					
ANR	6586070	IdentifierDecl	OPB_clk		6586060	2					
ANR	6586071	IdentifierDeclType	uint32_t		6586060	0					
ANR	6586072	Identifier	OPB_clk		6586060	1					
ANR	6586073	IdentifierDecl	EBC_clk		6586060	3					
ANR	6586074	IdentifierDeclType	uint32_t		6586060	0					
ANR	6586075	Identifier	EBC_clk		6586060	1					
ANR	6586076	IdentifierDecl	MAL_clk		6586060	4					
ANR	6586077	IdentifierDeclType	uint32_t		6586060	0					
ANR	6586078	Identifier	MAL_clk		6586060	1					
ANR	6586079	IdentifierDecl	PCI_clk		6586060	5					
ANR	6586080	IdentifierDeclType	uint32_t		6586060	0					
ANR	6586081	Identifier	PCI_clk		6586060	1					
ANR	6586082	IdentifierDeclStatement	"uint32_t UART0_clk , UART1_clk ;"	7:4:134:163	6586060	1	True				
ANR	6586083	IdentifierDecl	UART0_clk		6586060	0					
ANR	6586084	IdentifierDeclType	uint32_t		6586060	0					
ANR	6586085	Identifier	UART0_clk		6586060	1					
ANR	6586086	IdentifierDecl	UART1_clk		6586060	1					
ANR	6586087	IdentifierDeclType	uint32_t		6586060	0					
ANR	6586088	Identifier	UART1_clk		6586060	1					
ANR	6586089	IdentifierDeclStatement	"uint64_t VCO_out , PLL_out ;"	9:4:170:195	6586060	2	True				
ANR	6586090	IdentifierDecl	VCO_out		6586060	0					
ANR	6586091	IdentifierDeclType	uint64_t		6586060	0					
ANR	6586092	Identifier	VCO_out		6586060	1					
ANR	6586093	IdentifierDecl	PLL_out		6586060	1					
ANR	6586094	IdentifierDeclType	uint64_t		6586060	0					
ANR	6586095	Identifier	PLL_out		6586060	1					
ANR	6586096	IdentifierDeclStatement	"int M , D ;"	11:4:202:210	6586060	3	True				
ANR	6586097	IdentifierDecl	M		6586060	0					
ANR	6586098	IdentifierDeclType	int		6586060	0					
ANR	6586099	Identifier	M		6586060	1					
ANR	6586100	IdentifierDecl	D		6586060	1					
ANR	6586101	IdentifierDeclType	int		6586060	0					
ANR	6586102	Identifier	D		6586060	1					
ANR	6586103	ExpressionStatement	VCO_out = 0	15:4:219:230	6586060	4	True				
ANR	6586104	AssignmentExpression	VCO_out = 0		6586060	0		=			
ANR	6586105	Identifier	VCO_out		6586060	0					
ANR	6586106	PrimaryExpression	0		6586060	1					
ANR	6586107	IfStatement	if ( ( cpc -> pllmr [ 1 ] & 0x80000000 ) && ! ( cpc -> pllmr [ 1 ] & 0x40000000 ) )		6586060	5					
ANR	6586108	Condition	( cpc -> pllmr [ 1 ] & 0x80000000 ) && ! ( cpc -> pllmr [ 1 ] & 0x40000000 )	17:8:241:301	6586060	0	True				
ANR	6586109	AndExpression	( cpc -> pllmr [ 1 ] & 0x80000000 ) && ! ( cpc -> pllmr [ 1 ] & 0x40000000 )		6586060	0		&&			
ANR	6586110	BitAndExpression	cpc -> pllmr [ 1 ] & 0x80000000		6586060	0		&			
ANR	6586111	ArrayIndexing	cpc -> pllmr [ 1 ]		6586060	0					
ANR	6586112	PtrMemberAccess	cpc -> pllmr		6586060	0					
ANR	6586113	Identifier	cpc		6586060	0					
ANR	6586114	Identifier	pllmr		6586060	1					
ANR	6586115	PrimaryExpression	1		6586060	1					
ANR	6586116	PrimaryExpression	0x80000000		6586060	1					
ANR	6586117	UnaryOperationExpression	! ( cpc -> pllmr [ 1 ] & 0x40000000 )		6586060	1					
ANR	6586118	UnaryOperator	!		6586060	0					
ANR	6586119	BitAndExpression	cpc -> pllmr [ 1 ] & 0x40000000		6586060	1		&			
ANR	6586120	ArrayIndexing	cpc -> pllmr [ 1 ]		6586060	0					
ANR	6586121	PtrMemberAccess	cpc -> pllmr		6586060	0					
ANR	6586122	Identifier	cpc		6586060	0					
ANR	6586123	Identifier	pllmr		6586060	1					
ANR	6586124	PrimaryExpression	1		6586060	1					
ANR	6586125	PrimaryExpression	0x40000000		6586060	1					
ANR	6586126	CompoundStatement		15:71:244:244	6586060	1					
ANR	6586127	ExpressionStatement	M = ( ( ( cpc -> pllmr [ 1 ] >> 20 ) - 1 ) & 0xF ) + 1	19:8:315:358	6586060	0	True				
ANR	6586128	AssignmentExpression	M = ( ( ( cpc -> pllmr [ 1 ] >> 20 ) - 1 ) & 0xF ) + 1		6586060	0		=			
ANR	6586129	Identifier	M		6586060	0					
ANR	6586130	AdditiveExpression	( ( ( cpc -> pllmr [ 1 ] >> 20 ) - 1 ) & 0xF ) + 1		6586060	1		+			
ANR	6586131	BitAndExpression	( ( cpc -> pllmr [ 1 ] >> 20 ) - 1 ) & 0xF		6586060	0		&			
ANR	6586132	AdditiveExpression	( cpc -> pllmr [ 1 ] >> 20 ) - 1		6586060	0		-			
ANR	6586133	ShiftExpression	cpc -> pllmr [ 1 ] >> 20		6586060	0		>>			
ANR	6586134	ArrayIndexing	cpc -> pllmr [ 1 ]		6586060	0					
ANR	6586135	PtrMemberAccess	cpc -> pllmr		6586060	0					
ANR	6586136	Identifier	cpc		6586060	0					
ANR	6586137	Identifier	pllmr		6586060	1					
ANR	6586138	PrimaryExpression	1		6586060	1					
ANR	6586139	PrimaryExpression	20		6586060	1					
ANR	6586140	PrimaryExpression	1		6586060	1					
ANR	6586141	PrimaryExpression	0xF		6586060	1					
ANR	6586142	PrimaryExpression	1		6586060	1					
ANR	6586143	Statement	printf	23:8:405:410	6586060	1	True				
ANR	6586144	Statement	(	23:14:411:411	6586060	2	True				
ANR	6586145	Statement	"""FBMUL %01"""	23:15:412:422	6586060	3	True				
ANR	6586146	Statement	PRIx32	23:27:424:429	6586060	4	True				
ANR	6586147	Statement	""" %d\\n"""	23:34:431:437	6586060	5	True				
ANR	6586148	Statement	","	23:41:438:438	6586060	6	True				
ANR	6586149	Statement	(	23:43:440:440	6586060	7	True				
ANR	6586150	Statement	cpc	23:44:441:443	6586060	8	True				
ANR	6586151	Statement	->	23:47:444:445	6586060	9	True				
ANR	6586152	Statement	pllmr	23:49:446:450	6586060	10	True				
ANR	6586153	Statement	[	23:54:451:451	6586060	11	True				
ANR	6586154	Statement	1	23:55:452:452	6586060	12	True				
ANR	6586155	Statement	]	23:56:453:453	6586060	13	True				
ANR	6586156	Statement	>>	23:58:455:456	6586060	14	True				
ANR	6586157	Statement	20	23:61:458:459	6586060	15	True				
ANR	6586158	Statement	)	23:63:460:460	6586060	16	True				
ANR	6586159	Statement	&	23:65:462:462	6586060	17	True				
ANR	6586160	Statement	0xF	23:67:464:466	6586060	18	True				
ANR	6586161	Statement	","	23:70:467:467	6586060	19	True				
ANR	6586162	Statement	M	23:72:469:469	6586060	20	True				
ANR	6586163	Statement	)	23:73:470:470	6586060	21	True				
ANR	6586164	ExpressionStatement		23:74:471:471	6586060	22	True				
ANR	6586165	ExpressionStatement	D = 8 - ( ( cpc -> pllmr [ 1 ] >> 16 ) & 0x7 )	27:8:490:527	6586060	23	True				
ANR	6586166	AssignmentExpression	D = 8 - ( ( cpc -> pllmr [ 1 ] >> 16 ) & 0x7 )		6586060	0		=			
ANR	6586167	Identifier	D		6586060	0					
ANR	6586168	AdditiveExpression	8 - ( ( cpc -> pllmr [ 1 ] >> 16 ) & 0x7 )		6586060	1		-			
ANR	6586169	PrimaryExpression	8		6586060	0					
ANR	6586170	BitAndExpression	( cpc -> pllmr [ 1 ] >> 16 ) & 0x7		6586060	1		&			
ANR	6586171	ShiftExpression	cpc -> pllmr [ 1 ] >> 16		6586060	0		>>			
ANR	6586172	ArrayIndexing	cpc -> pllmr [ 1 ]		6586060	0					
ANR	6586173	PtrMemberAccess	cpc -> pllmr		6586060	0					
ANR	6586174	Identifier	cpc		6586060	0					
ANR	6586175	Identifier	pllmr		6586060	1					
ANR	6586176	PrimaryExpression	1		6586060	1					
ANR	6586177	PrimaryExpression	16		6586060	1					
ANR	6586178	PrimaryExpression	0x7		6586060	1					
ANR	6586179	Statement	printf	31:8:573:578	6586060	24	True				
ANR	6586180	Statement	(	31:14:579:579	6586060	25	True				
ANR	6586181	Statement	"""FWDA %01"""	31:15:580:589	6586060	26	True				
ANR	6586182	Statement	PRIx32	31:26:591:596	6586060	27	True				
ANR	6586183	Statement	""" %d\\n"""	31:33:598:604	6586060	28	True				
ANR	6586184	Statement	","	31:40:605:605	6586060	29	True				
ANR	6586185	Statement	(	31:42:607:607	6586060	30	True				
ANR	6586186	Statement	cpc	31:43:608:610	6586060	31	True				
ANR	6586187	Statement	->	31:46:611:612	6586060	32	True				
ANR	6586188	Statement	pllmr	31:48:613:617	6586060	33	True				
ANR	6586189	Statement	[	31:53:618:618	6586060	34	True				
ANR	6586190	Statement	1	31:54:619:619	6586060	35	True				
ANR	6586191	Statement	]	31:55:620:620	6586060	36	True				
ANR	6586192	Statement	>>	31:57:622:623	6586060	37	True				
ANR	6586193	Statement	16	31:60:625:626	6586060	38	True				
ANR	6586194	Statement	)	31:62:627:627	6586060	39	True				
ANR	6586195	Statement	&	31:64:629:629	6586060	40	True				
ANR	6586196	Statement	0x7	31:66:631:633	6586060	41	True				
ANR	6586197	Statement	","	31:69:634:634	6586060	42	True				
ANR	6586198	Statement	D	31:71:636:636	6586060	43	True				
ANR	6586199	Statement	)	31:72:637:637	6586060	44	True				
ANR	6586200	ExpressionStatement		31:73:638:638	6586060	45	True				
ANR	6586201	ExpressionStatement	VCO_out = cpc -> sysclk * M * D	35:8:657:686	6586060	46	True				
ANR	6586202	AssignmentExpression	VCO_out = cpc -> sysclk * M * D		6586060	0		=			
ANR	6586203	Identifier	VCO_out		6586060	0					
ANR	6586204	MultiplicativeExpression	cpc -> sysclk * M * D		6586060	1		*			
ANR	6586205	PtrMemberAccess	cpc -> sysclk		6586060	0					
ANR	6586206	Identifier	cpc		6586060	0					
ANR	6586207	Identifier	sysclk		6586060	1					
ANR	6586208	MultiplicativeExpression	M * D		6586060	1		*			
ANR	6586209	Identifier	M		6586060	0					
ANR	6586210	Identifier	D		6586060	1					
ANR	6586211	IfStatement	if ( VCO_out < 500000000UL || VCO_out > 1000000000UL )		6586060	47					
ANR	6586212	Condition	VCO_out < 500000000UL || VCO_out > 1000000000UL	37:12:701:747	6586060	0	True				
ANR	6586213	OrExpression	VCO_out < 500000000UL || VCO_out > 1000000000UL		6586060	0		||			
ANR	6586214	RelationalExpression	VCO_out < 500000000UL		6586060	0		<			
ANR	6586215	Identifier	VCO_out		6586060	0					
ANR	6586216	PrimaryExpression	500000000UL		6586060	1					
ANR	6586217	RelationalExpression	VCO_out > 1000000000UL		6586060	1		>			
ANR	6586218	Identifier	VCO_out		6586060	0					
ANR	6586219	PrimaryExpression	1000000000UL		6586060	1					
ANR	6586220	CompoundStatement		35:61:690:690	6586060	1					
ANR	6586221	Statement	printf	41:12:807:812	6586060	0	True				
ANR	6586222	Statement	(	41:18:813:813	6586060	1	True				
ANR	6586223	Statement	"""VCO out of range %"""	41:19:814:833	6586060	2	True				
ANR	6586224	Statement	PRIu64	41:40:835:840	6586060	3	True				
ANR	6586225	Statement	"""\\n"""	41:47:842:845	6586060	4	True				
ANR	6586226	Statement	","	41:51:846:846	6586060	5	True				
ANR	6586227	Statement	VCO_out	41:53:848:854	6586060	6	True				
ANR	6586228	Statement	)	41:60:855:855	6586060	7	True				
ANR	6586229	ExpressionStatement		41:61:856:856	6586060	8	True				
ANR	6586230	ExpressionStatement	cpc -> pllmr [ 1 ] &= ~0x80000000	45:12:878:906	6586060	9	True				
ANR	6586231	AssignmentExpression	cpc -> pllmr [ 1 ] &= ~0x80000000		6586060	0		&=			
ANR	6586232	ArrayIndexing	cpc -> pllmr [ 1 ]		6586060	0					
ANR	6586233	PtrMemberAccess	cpc -> pllmr		6586060	0					
ANR	6586234	Identifier	cpc		6586060	0					
ANR	6586235	Identifier	pllmr		6586060	1					
ANR	6586236	PrimaryExpression	1		6586060	1					
ANR	6586237	Identifier	~0x80000000		6586060	1					
ANR	6586238	GotoStatement	goto pll_bypass ;	47:12:921:936	6586060	10	True				
ANR	6586239	Identifier	pll_bypass		6586060	0					
ANR	6586240	ExpressionStatement	PLL_out = VCO_out / D	53:8:966:987	6586060	48	True				
ANR	6586241	AssignmentExpression	PLL_out = VCO_out / D		6586060	0		=			
ANR	6586242	Identifier	PLL_out		6586060	0					
ANR	6586243	MultiplicativeExpression	VCO_out / D		6586060	1		/			
ANR	6586244	Identifier	VCO_out		6586060	0					
ANR	6586245	Identifier	D		6586060	1					
ANR	6586246	ExpressionStatement	cpc -> boot |= 0x00000001	57:8:1039:1062	6586060	49	True				
ANR	6586247	AssignmentExpression	cpc -> boot |= 0x00000001		6586060	0		|=			
ANR	6586248	PtrMemberAccess	cpc -> boot		6586060	0					
ANR	6586249	Identifier	cpc		6586060	0					
ANR	6586250	Identifier	boot		6586060	1					
ANR	6586251	PrimaryExpression	0x00000001		6586060	1					
ANR	6586252	ElseStatement	else		6586060	0					
ANR	6586253	CompoundStatement		57:11:1016:1016	6586060	0					
ANR	6586254	Label	pll_bypass :	63:4:1090:1100	6586060	0	True				
ANR	6586255	Identifier	pll_bypass		6586060	0					
ANR	6586256	ExpressionStatement	PLL_out = cpc -> sysclk	67:8:1119:1140	6586060	1	True				
ANR	6586257	AssignmentExpression	PLL_out = cpc -> sysclk		6586060	0		=			
ANR	6586258	Identifier	PLL_out		6586060	0					
ANR	6586259	PtrMemberAccess	cpc -> sysclk		6586060	1					
ANR	6586260	Identifier	cpc		6586060	0					
ANR	6586261	Identifier	sysclk		6586060	1					
ANR	6586262	IfStatement	if ( cpc -> pllmr [ 1 ] & 0x40000000 )		6586060	2					
ANR	6586263	Condition	cpc -> pllmr [ 1 ] & 0x40000000	69:12:1155:1180	6586060	0	True				
ANR	6586264	BitAndExpression	cpc -> pllmr [ 1 ] & 0x40000000		6586060	0		&			
ANR	6586265	ArrayIndexing	cpc -> pllmr [ 1 ]		6586060	0					
ANR	6586266	PtrMemberAccess	cpc -> pllmr		6586060	0					
ANR	6586267	Identifier	cpc		6586060	0					
ANR	6586268	Identifier	pllmr		6586060	1					
ANR	6586269	PrimaryExpression	1		6586060	1					
ANR	6586270	PrimaryExpression	0x40000000		6586060	1					
ANR	6586271	CompoundStatement		67:40:1123:1123	6586060	1					
ANR	6586272	ExpressionStatement	cpc -> boot &= ~0x00000001	73:12:1247:1271	6586060	0	True				
ANR	6586273	AssignmentExpression	cpc -> boot &= ~0x00000001		6586060	0		&=			
ANR	6586274	PtrMemberAccess	cpc -> boot		6586060	0					
ANR	6586275	Identifier	cpc		6586060	0					
ANR	6586276	Identifier	boot		6586060	1					
ANR	6586277	Identifier	~0x00000001		6586060	1					
ANR	6586278	ExpressionStatement	D = ( ( cpc -> pllmr [ 0 ] >> 20 ) & 0x3 ) + 1	81:4:1337:1374	6586060	6	True				
ANR	6586279	AssignmentExpression	D = ( ( cpc -> pllmr [ 0 ] >> 20 ) & 0x3 ) + 1		6586060	0		=			
ANR	6586280	Identifier	D		6586060	0					
ANR	6586281	AdditiveExpression	( ( cpc -> pllmr [ 0 ] >> 20 ) & 0x3 ) + 1		6586060	1		+			
ANR	6586282	BitAndExpression	( cpc -> pllmr [ 0 ] >> 20 ) & 0x3		6586060	0		&			
ANR	6586283	ShiftExpression	cpc -> pllmr [ 0 ] >> 20		6586060	0		>>			
ANR	6586284	ArrayIndexing	cpc -> pllmr [ 0 ]		6586060	0					
ANR	6586285	PtrMemberAccess	cpc -> pllmr		6586060	0					
ANR	6586286	Identifier	cpc		6586060	0					
ANR	6586287	Identifier	pllmr		6586060	1					
ANR	6586288	PrimaryExpression	0		6586060	1					
ANR	6586289	PrimaryExpression	20		6586060	1					
ANR	6586290	PrimaryExpression	0x3		6586060	1					
ANR	6586291	PrimaryExpression	1		6586060	1					
ANR	6586292	Statement	printf	85:4:1416:1421	6586060	7	True				
ANR	6586293	Statement	(	85:10:1422:1422	6586060	8	True				
ANR	6586294	Statement	"""CCDV %01"""	85:11:1423:1432	6586060	9	True				
ANR	6586295	Statement	PRIx32	85:22:1434:1439	6586060	10	True				
ANR	6586296	Statement	""" %d\\n"""	85:29:1441:1447	6586060	11	True				
ANR	6586297	Statement	","	85:36:1448:1448	6586060	12	True				
ANR	6586298	Statement	(	85:38:1450:1450	6586060	13	True				
ANR	6586299	Statement	cpc	85:39:1451:1453	6586060	14	True				
ANR	6586300	Statement	->	85:42:1454:1455	6586060	15	True				
ANR	6586301	Statement	pllmr	85:44:1456:1460	6586060	16	True				
ANR	6586302	Statement	[	85:49:1461:1461	6586060	17	True				
ANR	6586303	Statement	0	85:50:1462:1462	6586060	18	True				
ANR	6586304	Statement	]	85:51:1463:1463	6586060	19	True				
ANR	6586305	Statement	>>	85:53:1465:1466	6586060	20	True				
ANR	6586306	Statement	20	85:56:1468:1469	6586060	21	True				
ANR	6586307	Statement	)	85:58:1470:1470	6586060	22	True				
ANR	6586308	Statement	&	85:60:1472:1472	6586060	23	True				
ANR	6586309	Statement	0x3	85:62:1474:1476	6586060	24	True				
ANR	6586310	Statement	","	85:65:1477:1477	6586060	25	True				
ANR	6586311	Statement	D	85:67:1479:1479	6586060	26	True				
ANR	6586312	Statement	)	85:68:1480:1480	6586060	27	True				
ANR	6586313	ExpressionStatement		85:69:1481:1481	6586060	28	True				
ANR	6586314	ExpressionStatement	CPU_clk = PLL_out / D	89:4:1496:1517	6586060	29	True				
ANR	6586315	AssignmentExpression	CPU_clk = PLL_out / D		6586060	0		=			
ANR	6586316	Identifier	CPU_clk		6586060	0					
ANR	6586317	MultiplicativeExpression	PLL_out / D		6586060	1		/			
ANR	6586318	Identifier	PLL_out		6586060	0					
ANR	6586319	Identifier	D		6586060	1					
ANR	6586320	ExpressionStatement	D = ( ( cpc -> pllmr [ 0 ] >> 16 ) & 0x3 ) + 1	91:4:1524:1561	6586060	30	True				
ANR	6586321	AssignmentExpression	D = ( ( cpc -> pllmr [ 0 ] >> 16 ) & 0x3 ) + 1		6586060	0		=			
ANR	6586322	Identifier	D		6586060	0					
ANR	6586323	AdditiveExpression	( ( cpc -> pllmr [ 0 ] >> 16 ) & 0x3 ) + 1		6586060	1		+			
ANR	6586324	BitAndExpression	( cpc -> pllmr [ 0 ] >> 16 ) & 0x3		6586060	0		&			
ANR	6586325	ShiftExpression	cpc -> pllmr [ 0 ] >> 16		6586060	0		>>			
ANR	6586326	ArrayIndexing	cpc -> pllmr [ 0 ]		6586060	0					
ANR	6586327	PtrMemberAccess	cpc -> pllmr		6586060	0					
ANR	6586328	Identifier	cpc		6586060	0					
ANR	6586329	Identifier	pllmr		6586060	1					
ANR	6586330	PrimaryExpression	0		6586060	1					
ANR	6586331	PrimaryExpression	16		6586060	1					
ANR	6586332	PrimaryExpression	0x3		6586060	1					
ANR	6586333	PrimaryExpression	1		6586060	1					
ANR	6586334	Statement	printf	95:4:1603:1608	6586060	31	True				
ANR	6586335	Statement	(	95:10:1609:1609	6586060	32	True				
ANR	6586336	Statement	"""CBDV %01"""	95:11:1610:1619	6586060	33	True				
ANR	6586337	Statement	PRIx32	95:22:1621:1626	6586060	34	True				
ANR	6586338	Statement	""" %d\\n"""	95:29:1628:1634	6586060	35	True				
ANR	6586339	Statement	","	95:36:1635:1635	6586060	36	True				
ANR	6586340	Statement	(	95:38:1637:1637	6586060	37	True				
ANR	6586341	Statement	cpc	95:39:1638:1640	6586060	38	True				
ANR	6586342	Statement	->	95:42:1641:1642	6586060	39	True				
ANR	6586343	Statement	pllmr	95:44:1643:1647	6586060	40	True				
ANR	6586344	Statement	[	95:49:1648:1648	6586060	41	True				
ANR	6586345	Statement	0	95:50:1649:1649	6586060	42	True				
ANR	6586346	Statement	]	95:51:1650:1650	6586060	43	True				
ANR	6586347	Statement	>>	95:53:1652:1653	6586060	44	True				
ANR	6586348	Statement	16	95:56:1655:1656	6586060	45	True				
ANR	6586349	Statement	)	95:58:1657:1657	6586060	46	True				
ANR	6586350	Statement	&	95:60:1659:1659	6586060	47	True				
ANR	6586351	Statement	0x3	95:62:1661:1663	6586060	48	True				
ANR	6586352	Statement	","	95:65:1664:1664	6586060	49	True				
ANR	6586353	Statement	D	95:67:1666:1666	6586060	50	True				
ANR	6586354	Statement	)	95:68:1667:1667	6586060	51	True				
ANR	6586355	ExpressionStatement		95:69:1668:1668	6586060	52	True				
ANR	6586356	ExpressionStatement	PLB_clk = CPU_clk / D	99:4:1683:1704	6586060	53	True				
ANR	6586357	AssignmentExpression	PLB_clk = CPU_clk / D		6586060	0		=			
ANR	6586358	Identifier	PLB_clk		6586060	0					
ANR	6586359	MultiplicativeExpression	CPU_clk / D		6586060	1		/			
ANR	6586360	Identifier	CPU_clk		6586060	0					
ANR	6586361	Identifier	D		6586060	1					
ANR	6586362	ExpressionStatement	D = ( ( cpc -> pllmr [ 0 ] >> 12 ) & 0x3 ) + 1	101:4:1711:1748	6586060	54	True				
ANR	6586363	AssignmentExpression	D = ( ( cpc -> pllmr [ 0 ] >> 12 ) & 0x3 ) + 1		6586060	0		=			
ANR	6586364	Identifier	D		6586060	0					
ANR	6586365	AdditiveExpression	( ( cpc -> pllmr [ 0 ] >> 12 ) & 0x3 ) + 1		6586060	1		+			
ANR	6586366	BitAndExpression	( cpc -> pllmr [ 0 ] >> 12 ) & 0x3		6586060	0		&			
ANR	6586367	ShiftExpression	cpc -> pllmr [ 0 ] >> 12		6586060	0		>>			
ANR	6586368	ArrayIndexing	cpc -> pllmr [ 0 ]		6586060	0					
ANR	6586369	PtrMemberAccess	cpc -> pllmr		6586060	0					
ANR	6586370	Identifier	cpc		6586060	0					
ANR	6586371	Identifier	pllmr		6586060	1					
ANR	6586372	PrimaryExpression	0		6586060	1					
ANR	6586373	PrimaryExpression	12		6586060	1					
ANR	6586374	PrimaryExpression	0x3		6586060	1					
ANR	6586375	PrimaryExpression	1		6586060	1					
ANR	6586376	Statement	printf	105:4:1790:1795	6586060	55	True				
ANR	6586377	Statement	(	105:10:1796:1796	6586060	56	True				
ANR	6586378	Statement	"""OPDV %01"""	105:11:1797:1806	6586060	57	True				
ANR	6586379	Statement	PRIx32	105:22:1808:1813	6586060	58	True				
ANR	6586380	Statement	""" %d\\n"""	105:29:1815:1821	6586060	59	True				
ANR	6586381	Statement	","	105:36:1822:1822	6586060	60	True				
ANR	6586382	Statement	(	105:38:1824:1824	6586060	61	True				
ANR	6586383	Statement	cpc	105:39:1825:1827	6586060	62	True				
ANR	6586384	Statement	->	105:42:1828:1829	6586060	63	True				
ANR	6586385	Statement	pllmr	105:44:1830:1834	6586060	64	True				
ANR	6586386	Statement	[	105:49:1835:1835	6586060	65	True				
ANR	6586387	Statement	0	105:50:1836:1836	6586060	66	True				
ANR	6586388	Statement	]	105:51:1837:1837	6586060	67	True				
ANR	6586389	Statement	>>	105:53:1839:1840	6586060	68	True				
ANR	6586390	Statement	12	105:56:1842:1843	6586060	69	True				
ANR	6586391	Statement	)	105:58:1844:1844	6586060	70	True				
ANR	6586392	Statement	&	105:60:1846:1846	6586060	71	True				
ANR	6586393	Statement	0x3	105:62:1848:1850	6586060	72	True				
ANR	6586394	Statement	","	105:65:1851:1851	6586060	73	True				
ANR	6586395	Statement	D	105:67:1853:1853	6586060	74	True				
ANR	6586396	Statement	)	105:68:1854:1854	6586060	75	True				
ANR	6586397	ExpressionStatement		105:69:1855:1855	6586060	76	True				
ANR	6586398	ExpressionStatement	OPB_clk = PLB_clk / D	109:4:1870:1891	6586060	77	True				
ANR	6586399	AssignmentExpression	OPB_clk = PLB_clk / D		6586060	0		=			
ANR	6586400	Identifier	OPB_clk		6586060	0					
ANR	6586401	MultiplicativeExpression	PLB_clk / D		6586060	1		/			
ANR	6586402	Identifier	PLB_clk		6586060	0					
ANR	6586403	Identifier	D		6586060	1					
ANR	6586404	ExpressionStatement	D = ( ( cpc -> pllmr [ 0 ] >> 8 ) & 0x3 ) + 2	111:4:1898:1934	6586060	78	True				
ANR	6586405	AssignmentExpression	D = ( ( cpc -> pllmr [ 0 ] >> 8 ) & 0x3 ) + 2		6586060	0		=			
ANR	6586406	Identifier	D		6586060	0					
ANR	6586407	AdditiveExpression	( ( cpc -> pllmr [ 0 ] >> 8 ) & 0x3 ) + 2		6586060	1		+			
ANR	6586408	BitAndExpression	( cpc -> pllmr [ 0 ] >> 8 ) & 0x3		6586060	0		&			
ANR	6586409	ShiftExpression	cpc -> pllmr [ 0 ] >> 8		6586060	0		>>			
ANR	6586410	ArrayIndexing	cpc -> pllmr [ 0 ]		6586060	0					
ANR	6586411	PtrMemberAccess	cpc -> pllmr		6586060	0					
ANR	6586412	Identifier	cpc		6586060	0					
ANR	6586413	Identifier	pllmr		6586060	1					
ANR	6586414	PrimaryExpression	0		6586060	1					
ANR	6586415	PrimaryExpression	8		6586060	1					
ANR	6586416	PrimaryExpression	0x3		6586060	1					
ANR	6586417	PrimaryExpression	2		6586060	1					
ANR	6586418	Statement	printf	115:4:1976:1981	6586060	79	True				
ANR	6586419	Statement	(	115:10:1982:1982	6586060	80	True				
ANR	6586420	Statement	"""EPDV %01"""	115:11:1983:1992	6586060	81	True				
ANR	6586421	Statement	PRIx32	115:22:1994:1999	6586060	82	True				
ANR	6586422	Statement	""" %d\\n"""	115:29:2001:2007	6586060	83	True				
ANR	6586423	Statement	","	115:36:2008:2008	6586060	84	True				
ANR	6586424	Statement	(	115:38:2010:2010	6586060	85	True				
ANR	6586425	Statement	cpc	115:39:2011:2013	6586060	86	True				
ANR	6586426	Statement	->	115:42:2014:2015	6586060	87	True				
ANR	6586427	Statement	pllmr	115:44:2016:2020	6586060	88	True				
ANR	6586428	Statement	[	115:49:2021:2021	6586060	89	True				
ANR	6586429	Statement	0	115:50:2022:2022	6586060	90	True				
ANR	6586430	Statement	]	115:51:2023:2023	6586060	91	True				
ANR	6586431	Statement	>>	115:53:2025:2026	6586060	92	True				
ANR	6586432	Statement	8	115:56:2028:2028	6586060	93	True				
ANR	6586433	Statement	)	115:57:2029:2029	6586060	94	True				
ANR	6586434	Statement	&	115:59:2031:2031	6586060	95	True				
ANR	6586435	Statement	0x3	115:61:2033:2035	6586060	96	True				
ANR	6586436	Statement	","	115:64:2036:2036	6586060	97	True				
ANR	6586437	Statement	D	115:66:2038:2038	6586060	98	True				
ANR	6586438	Statement	)	115:67:2039:2039	6586060	99	True				
ANR	6586439	ExpressionStatement		115:68:2040:2040	6586060	100	True				
ANR	6586440	ExpressionStatement	EBC_clk = PLB_clk / D	119:4:2055:2076	6586060	101	True				
ANR	6586441	AssignmentExpression	EBC_clk = PLB_clk / D		6586060	0		=			
ANR	6586442	Identifier	EBC_clk		6586060	0					
ANR	6586443	MultiplicativeExpression	PLB_clk / D		6586060	1		/			
ANR	6586444	Identifier	PLB_clk		6586060	0					
ANR	6586445	Identifier	D		6586060	1					
ANR	6586446	ExpressionStatement	D = ( ( cpc -> pllmr [ 0 ] >> 4 ) & 0x3 ) + 1	121:4:2083:2119	6586060	102	True				
ANR	6586447	AssignmentExpression	D = ( ( cpc -> pllmr [ 0 ] >> 4 ) & 0x3 ) + 1		6586060	0		=			
ANR	6586448	Identifier	D		6586060	0					
ANR	6586449	AdditiveExpression	( ( cpc -> pllmr [ 0 ] >> 4 ) & 0x3 ) + 1		6586060	1		+			
ANR	6586450	BitAndExpression	( cpc -> pllmr [ 0 ] >> 4 ) & 0x3		6586060	0		&			
ANR	6586451	ShiftExpression	cpc -> pllmr [ 0 ] >> 4		6586060	0		>>			
ANR	6586452	ArrayIndexing	cpc -> pllmr [ 0 ]		6586060	0					
ANR	6586453	PtrMemberAccess	cpc -> pllmr		6586060	0					
ANR	6586454	Identifier	cpc		6586060	0					
ANR	6586455	Identifier	pllmr		6586060	1					
ANR	6586456	PrimaryExpression	0		6586060	1					
ANR	6586457	PrimaryExpression	4		6586060	1					
ANR	6586458	PrimaryExpression	0x3		6586060	1					
ANR	6586459	PrimaryExpression	1		6586060	1					
ANR	6586460	Statement	printf	125:4:2161:2166	6586060	103	True				
ANR	6586461	Statement	(	125:10:2167:2167	6586060	104	True				
ANR	6586462	Statement	"""MPDV %01"""	125:11:2168:2177	6586060	105	True				
ANR	6586463	Statement	PRIx32	125:22:2179:2184	6586060	106	True				
ANR	6586464	Statement	""" %d\\n"""	125:29:2186:2192	6586060	107	True				
ANR	6586465	Statement	","	125:36:2193:2193	6586060	108	True				
ANR	6586466	Statement	(	125:38:2195:2195	6586060	109	True				
ANR	6586467	Statement	cpc	125:39:2196:2198	6586060	110	True				
ANR	6586468	Statement	->	125:42:2199:2200	6586060	111	True				
ANR	6586469	Statement	pllmr	125:44:2201:2205	6586060	112	True				
ANR	6586470	Statement	[	125:49:2206:2206	6586060	113	True				
ANR	6586471	Statement	0	125:50:2207:2207	6586060	114	True				
ANR	6586472	Statement	]	125:51:2208:2208	6586060	115	True				
ANR	6586473	Statement	>>	125:53:2210:2211	6586060	116	True				
ANR	6586474	Statement	4	125:56:2213:2213	6586060	117	True				
ANR	6586475	Statement	)	125:57:2214:2214	6586060	118	True				
ANR	6586476	Statement	&	125:59:2216:2216	6586060	119	True				
ANR	6586477	Statement	0x3	125:61:2218:2220	6586060	120	True				
ANR	6586478	Statement	","	125:64:2221:2221	6586060	121	True				
ANR	6586479	Statement	D	125:66:2223:2223	6586060	122	True				
ANR	6586480	Statement	)	125:67:2224:2224	6586060	123	True				
ANR	6586481	ExpressionStatement		125:68:2225:2225	6586060	124	True				
ANR	6586482	ExpressionStatement	MAL_clk = PLB_clk / D	129:4:2240:2261	6586060	125	True				
ANR	6586483	AssignmentExpression	MAL_clk = PLB_clk / D		6586060	0		=			
ANR	6586484	Identifier	MAL_clk		6586060	0					
ANR	6586485	MultiplicativeExpression	PLB_clk / D		6586060	1		/			
ANR	6586486	Identifier	PLB_clk		6586060	0					
ANR	6586487	Identifier	D		6586060	1					
ANR	6586488	ExpressionStatement	D = ( cpc -> pllmr [ 0 ] & 0x3 ) + 1	131:4:2268:2297	6586060	126	True				
ANR	6586489	AssignmentExpression	D = ( cpc -> pllmr [ 0 ] & 0x3 ) + 1		6586060	0		=			
ANR	6586490	Identifier	D		6586060	0					
ANR	6586491	AdditiveExpression	( cpc -> pllmr [ 0 ] & 0x3 ) + 1		6586060	1		+			
ANR	6586492	BitAndExpression	cpc -> pllmr [ 0 ] & 0x3		6586060	0		&			
ANR	6586493	ArrayIndexing	cpc -> pllmr [ 0 ]		6586060	0					
ANR	6586494	PtrMemberAccess	cpc -> pllmr		6586060	0					
ANR	6586495	Identifier	cpc		6586060	0					
ANR	6586496	Identifier	pllmr		6586060	1					
ANR	6586497	PrimaryExpression	0		6586060	1					
ANR	6586498	PrimaryExpression	0x3		6586060	1					
ANR	6586499	PrimaryExpression	1		6586060	1					
ANR	6586500	Statement	printf	135:4:2339:2344	6586060	127	True				
ANR	6586501	Statement	(	135:10:2345:2345	6586060	128	True				
ANR	6586502	Statement	"""PPDV %01"""	135:11:2346:2355	6586060	129	True				
ANR	6586503	Statement	PRIx32	135:22:2357:2362	6586060	130	True				
ANR	6586504	Statement	""" %d\\n"""	135:29:2364:2370	6586060	131	True				
ANR	6586505	Statement	","	135:36:2371:2371	6586060	132	True				
ANR	6586506	Statement	cpc	135:38:2373:2375	6586060	133	True				
ANR	6586507	Statement	->	135:41:2376:2377	6586060	134	True				
ANR	6586508	Statement	pllmr	135:43:2378:2382	6586060	135	True				
ANR	6586509	Statement	[	135:48:2383:2383	6586060	136	True				
ANR	6586510	Statement	0	135:49:2384:2384	6586060	137	True				
ANR	6586511	Statement	]	135:50:2385:2385	6586060	138	True				
ANR	6586512	Statement	&	135:52:2387:2387	6586060	139	True				
ANR	6586513	Statement	0x3	135:54:2389:2391	6586060	140	True				
ANR	6586514	Statement	","	135:57:2392:2392	6586060	141	True				
ANR	6586515	Statement	D	135:59:2394:2394	6586060	142	True				
ANR	6586516	Statement	)	135:60:2395:2395	6586060	143	True				
ANR	6586517	ExpressionStatement		135:61:2396:2396	6586060	144	True				
ANR	6586518	ExpressionStatement	PCI_clk = PLB_clk / D	139:4:2411:2432	6586060	145	True				
ANR	6586519	AssignmentExpression	PCI_clk = PLB_clk / D		6586060	0		=			
ANR	6586520	Identifier	PCI_clk		6586060	0					
ANR	6586521	MultiplicativeExpression	PLB_clk / D		6586060	1		/			
ANR	6586522	Identifier	PLB_clk		6586060	0					
ANR	6586523	Identifier	D		6586060	1					
ANR	6586524	ExpressionStatement	D = ( ( cpc -> ucr - 1 ) & 0x7F ) + 1	141:4:2439:2470	6586060	146	True				
ANR	6586525	AssignmentExpression	D = ( ( cpc -> ucr - 1 ) & 0x7F ) + 1		6586060	0		=			
ANR	6586526	Identifier	D		6586060	0					
ANR	6586527	AdditiveExpression	( ( cpc -> ucr - 1 ) & 0x7F ) + 1		6586060	1		+			
ANR	6586528	BitAndExpression	( cpc -> ucr - 1 ) & 0x7F		6586060	0		&			
ANR	6586529	AdditiveExpression	cpc -> ucr - 1		6586060	0		-			
ANR	6586530	PtrMemberAccess	cpc -> ucr		6586060	0					
ANR	6586531	Identifier	cpc		6586060	0					
ANR	6586532	Identifier	ucr		6586060	1					
ANR	6586533	PrimaryExpression	1		6586060	1					
ANR	6586534	PrimaryExpression	0x7F		6586060	1					
ANR	6586535	PrimaryExpression	1		6586060	1					
ANR	6586536	Statement	printf	145:4:2513:2518	6586060	147	True				
ANR	6586537	Statement	(	145:10:2519:2519	6586060	148	True				
ANR	6586538	Statement	"""U0DIV %01"""	145:11:2520:2530	6586060	149	True				
ANR	6586539	Statement	PRIx32	145:23:2532:2537	6586060	150	True				
ANR	6586540	Statement	""" %d\\n"""	145:30:2539:2545	6586060	151	True				
ANR	6586541	Statement	","	145:37:2546:2546	6586060	152	True				
ANR	6586542	Statement	cpc	145:39:2548:2550	6586060	153	True				
ANR	6586543	Statement	->	145:42:2551:2552	6586060	154	True				
ANR	6586544	Statement	ucr	145:44:2553:2555	6586060	155	True				
ANR	6586545	Statement	&	145:48:2557:2557	6586060	156	True				
ANR	6586546	Statement	0x7F	145:50:2559:2562	6586060	157	True				
ANR	6586547	Statement	","	145:54:2563:2563	6586060	158	True				
ANR	6586548	Statement	D	145:56:2565:2565	6586060	159	True				
ANR	6586549	Statement	)	145:57:2566:2566	6586060	160	True				
ANR	6586550	ExpressionStatement		145:58:2567:2567	6586060	161	True				
ANR	6586551	ExpressionStatement	UART0_clk = PLL_out / D	149:4:2582:2605	6586060	162	True				
ANR	6586552	AssignmentExpression	UART0_clk = PLL_out / D		6586060	0		=			
ANR	6586553	Identifier	UART0_clk		6586060	0					
ANR	6586554	MultiplicativeExpression	PLL_out / D		6586060	1		/			
ANR	6586555	Identifier	PLL_out		6586060	0					
ANR	6586556	Identifier	D		6586060	1					
ANR	6586557	ExpressionStatement	D = ( ( ( cpc -> ucr >> 8 ) - 1 ) & 0x7F ) + 1	151:4:2612:2650	6586060	163	True				
ANR	6586558	AssignmentExpression	D = ( ( ( cpc -> ucr >> 8 ) - 1 ) & 0x7F ) + 1		6586060	0		=			
ANR	6586559	Identifier	D		6586060	0					
ANR	6586560	AdditiveExpression	( ( ( cpc -> ucr >> 8 ) - 1 ) & 0x7F ) + 1		6586060	1		+			
ANR	6586561	BitAndExpression	( ( cpc -> ucr >> 8 ) - 1 ) & 0x7F		6586060	0		&			
ANR	6586562	AdditiveExpression	( cpc -> ucr >> 8 ) - 1		6586060	0		-			
ANR	6586563	ShiftExpression	cpc -> ucr >> 8		6586060	0		>>			
ANR	6586564	PtrMemberAccess	cpc -> ucr		6586060	0					
ANR	6586565	Identifier	cpc		6586060	0					
ANR	6586566	Identifier	ucr		6586060	1					
ANR	6586567	PrimaryExpression	8		6586060	1					
ANR	6586568	PrimaryExpression	1		6586060	1					
ANR	6586569	PrimaryExpression	0x7F		6586060	1					
ANR	6586570	PrimaryExpression	1		6586060	1					
ANR	6586571	Statement	printf	155:4:2693:2698	6586060	164	True				
ANR	6586572	Statement	(	155:10:2699:2699	6586060	165	True				
ANR	6586573	Statement	"""U1DIV %01"""	155:11:2700:2710	6586060	166	True				
ANR	6586574	Statement	PRIx32	155:23:2712:2717	6586060	167	True				
ANR	6586575	Statement	""" %d\\n"""	155:30:2719:2725	6586060	168	True				
ANR	6586576	Statement	","	155:37:2726:2726	6586060	169	True				
ANR	6586577	Statement	(	155:39:2728:2728	6586060	170	True				
ANR	6586578	Statement	cpc	155:40:2729:2731	6586060	171	True				
ANR	6586579	Statement	->	155:43:2732:2733	6586060	172	True				
ANR	6586580	Statement	ucr	155:45:2734:2736	6586060	173	True				
ANR	6586581	Statement	>>	155:49:2738:2739	6586060	174	True				
ANR	6586582	Statement	8	155:52:2741:2741	6586060	175	True				
ANR	6586583	Statement	)	155:53:2742:2742	6586060	176	True				
ANR	6586584	Statement	&	155:55:2744:2744	6586060	177	True				
ANR	6586585	Statement	0x7F	155:57:2746:2749	6586060	178	True				
ANR	6586586	Statement	","	155:61:2750:2750	6586060	179	True				
ANR	6586587	Statement	D	155:63:2752:2752	6586060	180	True				
ANR	6586588	Statement	)	155:64:2753:2753	6586060	181	True				
ANR	6586589	ExpressionStatement		155:65:2754:2754	6586060	182	True				
ANR	6586590	ExpressionStatement	UART1_clk = PLL_out / D	159:4:2769:2792	6586060	183	True				
ANR	6586591	AssignmentExpression	UART1_clk = PLL_out / D		6586060	0		=			
ANR	6586592	Identifier	UART1_clk		6586060	0					
ANR	6586593	MultiplicativeExpression	PLL_out / D		6586060	1		/			
ANR	6586594	Identifier	PLL_out		6586060	0					
ANR	6586595	Identifier	D		6586060	1					
ANR	6586596	Statement	printf	163:4:2820:2825	6586060	184	True				
ANR	6586597	Statement	(	163:10:2826:2826	6586060	185	True				
ANR	6586598	Statement	"""Setup PPC405EP clocks - sysclk %"""	163:11:2827:2860	6586060	186	True				
ANR	6586599	Statement	PRIu32	163:46:2862:2867	6586060	187	True				
ANR	6586600	Statement	""" VCO %"""	163:53:2869:2876	6586060	188	True				
ANR	6586601	Statement	PRIu64	163:62:2878:2883	6586060	189	True				
ANR	6586602	Statement	""" PLL out %"""	165:11:2897:2908	6586060	190	True				
ANR	6586603	Statement	PRIu64	165:24:2910:2915	6586060	191	True				
ANR	6586604	Statement	""" Hz\\n"""	165:31:2917:2923	6586060	192	True				
ANR	6586605	Statement	","	165:38:2924:2924	6586060	193	True				
ANR	6586606	Statement	cpc	165:40:2926:2928	6586060	194	True				
ANR	6586607	Statement	->	165:43:2929:2930	6586060	195	True				
ANR	6586608	Statement	sysclk	165:45:2931:2936	6586060	196	True				
ANR	6586609	Statement	","	165:51:2937:2937	6586060	197	True				
ANR	6586610	Statement	VCO_out	165:53:2939:2945	6586060	198	True				
ANR	6586611	Statement	","	165:60:2946:2946	6586060	199	True				
ANR	6586612	Statement	PLL_out	165:62:2948:2954	6586060	200	True				
ANR	6586613	Statement	)	165:69:2955:2955	6586060	201	True				
ANR	6586614	ExpressionStatement		165:70:2956:2956	6586060	202	True				
ANR	6586615	Statement	printf	167:4:2963:2968	6586060	203	True				
ANR	6586616	Statement	(	167:10:2969:2969	6586060	204	True				
ANR	6586617	Statement	"""CPU %"""	167:11:2970:2976	6586060	205	True				
ANR	6586618	Statement	PRIu32	167:19:2978:2983	6586060	206	True				
ANR	6586619	Statement	""" PLB %"""	167:26:2985:2992	6586060	207	True				
ANR	6586620	Statement	PRIu32	167:35:2994:2999	6586060	208	True				
ANR	6586621	Statement	""" OPB %"""	167:42:3001:3008	6586060	209	True				
ANR	6586622	Statement	PRIu32	167:51:3010:3015	6586060	210	True				
ANR	6586623	Statement	""" EBC %"""	167:58:3017:3024	6586060	211	True				
ANR	6586624	Statement	PRIu32	167:67:3026:3031	6586060	212	True				
ANR	6586625	Statement	""" MAL %"""	169:11:3045:3052	6586060	213	True				
ANR	6586626	Statement	PRIu32	169:20:3054:3059	6586060	214	True				
ANR	6586627	Statement	""" PCI %"""	169:27:3061:3068	6586060	215	True				
ANR	6586628	Statement	PRIu32	169:36:3070:3075	6586060	216	True				
ANR	6586629	Statement	""" UART0 %"""	169:43:3077:3086	6586060	217	True				
ANR	6586630	Statement	PRIu32	169:54:3088:3093	6586060	218	True				
ANR	6586631	Statement	""" UART1 %"""	171:11:3107:3116	6586060	219	True				
ANR	6586632	Statement	PRIu32	171:22:3118:3123	6586060	220	True				
ANR	6586633	Statement	"""\\n"""	171:29:3125:3128	6586060	221	True				
ANR	6586634	Statement	","	171:33:3129:3129	6586060	222	True				
ANR	6586635	Statement	CPU_clk	173:11:3143:3149	6586060	223	True				
ANR	6586636	Statement	","	173:18:3150:3150	6586060	224	True				
ANR	6586637	Statement	PLB_clk	173:20:3152:3158	6586060	225	True				
ANR	6586638	Statement	","	173:27:3159:3159	6586060	226	True				
ANR	6586639	Statement	OPB_clk	173:29:3161:3167	6586060	227	True				
ANR	6586640	Statement	","	173:36:3168:3168	6586060	228	True				
ANR	6586641	Statement	EBC_clk	173:38:3170:3176	6586060	229	True				
ANR	6586642	Statement	","	173:45:3177:3177	6586060	230	True				
ANR	6586643	Statement	MAL_clk	173:47:3179:3185	6586060	231	True				
ANR	6586644	Statement	","	173:54:3186:3186	6586060	232	True				
ANR	6586645	Statement	PCI_clk	173:56:3188:3194	6586060	233	True				
ANR	6586646	Statement	","	173:63:3195:3195	6586060	234	True				
ANR	6586647	Statement	UART0_clk	175:11:3209:3217	6586060	235	True				
ANR	6586648	Statement	","	175:20:3218:3218	6586060	236	True				
ANR	6586649	Statement	UART1_clk	175:22:3220:3228	6586060	237	True				
ANR	6586650	Statement	)	175:31:3229:3229	6586060	238	True				
ANR	6586651	ExpressionStatement		175:32:3230:3230	6586060	239	True				
ANR	6586652	ExpressionStatement	"clk_setup ( & cpc -> clk_setup [ PPC405EP_CPU_CLK ] , CPU_clk )"	181:4:3273:3326	6586060	240	True				
ANR	6586653	CallExpression	"clk_setup ( & cpc -> clk_setup [ PPC405EP_CPU_CLK ] , CPU_clk )"		6586060	0					
ANR	6586654	Callee	clk_setup		6586060	0					
ANR	6586655	Identifier	clk_setup		6586060	0					
ANR	6586656	ArgumentList	& cpc -> clk_setup [ PPC405EP_CPU_CLK ]		6586060	1					
ANR	6586657	Argument	& cpc -> clk_setup [ PPC405EP_CPU_CLK ]		6586060	0					
ANR	6586658	UnaryOperationExpression	& cpc -> clk_setup [ PPC405EP_CPU_CLK ]		6586060	0					
ANR	6586659	UnaryOperator	&		6586060	0					
ANR	6586660	ArrayIndexing	cpc -> clk_setup [ PPC405EP_CPU_CLK ]		6586060	1					
ANR	6586661	PtrMemberAccess	cpc -> clk_setup		6586060	0					
ANR	6586662	Identifier	cpc		6586060	0					
ANR	6586663	Identifier	clk_setup		6586060	1					
ANR	6586664	Identifier	PPC405EP_CPU_CLK		6586060	1					
ANR	6586665	Argument	CPU_clk		6586060	1					
ANR	6586666	Identifier	CPU_clk		6586060	0					
ANR	6586667	ExpressionStatement	"clk_setup ( & cpc -> clk_setup [ PPC405EP_PLB_CLK ] , PLB_clk )"	185:4:3360:3413	6586060	241	True				
ANR	6586668	CallExpression	"clk_setup ( & cpc -> clk_setup [ PPC405EP_PLB_CLK ] , PLB_clk )"		6586060	0					
ANR	6586669	Callee	clk_setup		6586060	0					
ANR	6586670	Identifier	clk_setup		6586060	0					
ANR	6586671	ArgumentList	& cpc -> clk_setup [ PPC405EP_PLB_CLK ]		6586060	1					
ANR	6586672	Argument	& cpc -> clk_setup [ PPC405EP_PLB_CLK ]		6586060	0					
ANR	6586673	UnaryOperationExpression	& cpc -> clk_setup [ PPC405EP_PLB_CLK ]		6586060	0					
ANR	6586674	UnaryOperator	&		6586060	0					
ANR	6586675	ArrayIndexing	cpc -> clk_setup [ PPC405EP_PLB_CLK ]		6586060	1					
ANR	6586676	PtrMemberAccess	cpc -> clk_setup		6586060	0					
ANR	6586677	Identifier	cpc		6586060	0					
ANR	6586678	Identifier	clk_setup		6586060	1					
ANR	6586679	Identifier	PPC405EP_PLB_CLK		6586060	1					
ANR	6586680	Argument	PLB_clk		6586060	1					
ANR	6586681	Identifier	PLB_clk		6586060	0					
ANR	6586682	ExpressionStatement	"clk_setup ( & cpc -> clk_setup [ PPC405EP_OPB_CLK ] , OPB_clk )"	189:4:3447:3500	6586060	242	True				
ANR	6586683	CallExpression	"clk_setup ( & cpc -> clk_setup [ PPC405EP_OPB_CLK ] , OPB_clk )"		6586060	0					
ANR	6586684	Callee	clk_setup		6586060	0					
ANR	6586685	Identifier	clk_setup		6586060	0					
ANR	6586686	ArgumentList	& cpc -> clk_setup [ PPC405EP_OPB_CLK ]		6586060	1					
ANR	6586687	Argument	& cpc -> clk_setup [ PPC405EP_OPB_CLK ]		6586060	0					
ANR	6586688	UnaryOperationExpression	& cpc -> clk_setup [ PPC405EP_OPB_CLK ]		6586060	0					
ANR	6586689	UnaryOperator	&		6586060	0					
ANR	6586690	ArrayIndexing	cpc -> clk_setup [ PPC405EP_OPB_CLK ]		6586060	1					
ANR	6586691	PtrMemberAccess	cpc -> clk_setup		6586060	0					
ANR	6586692	Identifier	cpc		6586060	0					
ANR	6586693	Identifier	clk_setup		6586060	1					
ANR	6586694	Identifier	PPC405EP_OPB_CLK		6586060	1					
ANR	6586695	Argument	OPB_clk		6586060	1					
ANR	6586696	Identifier	OPB_clk		6586060	0					
ANR	6586697	ExpressionStatement	"clk_setup ( & cpc -> clk_setup [ PPC405EP_EBC_CLK ] , EBC_clk )"	193:4:3539:3592	6586060	243	True				
ANR	6586698	CallExpression	"clk_setup ( & cpc -> clk_setup [ PPC405EP_EBC_CLK ] , EBC_clk )"		6586060	0					
ANR	6586699	Callee	clk_setup		6586060	0					
ANR	6586700	Identifier	clk_setup		6586060	0					
ANR	6586701	ArgumentList	& cpc -> clk_setup [ PPC405EP_EBC_CLK ]		6586060	1					
ANR	6586702	Argument	& cpc -> clk_setup [ PPC405EP_EBC_CLK ]		6586060	0					
ANR	6586703	UnaryOperationExpression	& cpc -> clk_setup [ PPC405EP_EBC_CLK ]		6586060	0					
ANR	6586704	UnaryOperator	&		6586060	0					
ANR	6586705	ArrayIndexing	cpc -> clk_setup [ PPC405EP_EBC_CLK ]		6586060	1					
ANR	6586706	PtrMemberAccess	cpc -> clk_setup		6586060	0					
ANR	6586707	Identifier	cpc		6586060	0					
ANR	6586708	Identifier	clk_setup		6586060	1					
ANR	6586709	Identifier	PPC405EP_EBC_CLK		6586060	1					
ANR	6586710	Argument	EBC_clk		6586060	1					
ANR	6586711	Identifier	EBC_clk		6586060	0					
ANR	6586712	ExpressionStatement	"clk_setup ( & cpc -> clk_setup [ PPC405EP_MAL_CLK ] , MAL_clk )"	197:4:3626:3679	6586060	244	True				
ANR	6586713	CallExpression	"clk_setup ( & cpc -> clk_setup [ PPC405EP_MAL_CLK ] , MAL_clk )"		6586060	0					
ANR	6586714	Callee	clk_setup		6586060	0					
ANR	6586715	Identifier	clk_setup		6586060	0					
ANR	6586716	ArgumentList	& cpc -> clk_setup [ PPC405EP_MAL_CLK ]		6586060	1					
ANR	6586717	Argument	& cpc -> clk_setup [ PPC405EP_MAL_CLK ]		6586060	0					
ANR	6586718	UnaryOperationExpression	& cpc -> clk_setup [ PPC405EP_MAL_CLK ]		6586060	0					
ANR	6586719	UnaryOperator	&		6586060	0					
ANR	6586720	ArrayIndexing	cpc -> clk_setup [ PPC405EP_MAL_CLK ]		6586060	1					
ANR	6586721	PtrMemberAccess	cpc -> clk_setup		6586060	0					
ANR	6586722	Identifier	cpc		6586060	0					
ANR	6586723	Identifier	clk_setup		6586060	1					
ANR	6586724	Identifier	PPC405EP_MAL_CLK		6586060	1					
ANR	6586725	Argument	MAL_clk		6586060	1					
ANR	6586726	Identifier	MAL_clk		6586060	0					
ANR	6586727	ExpressionStatement	"clk_setup ( & cpc -> clk_setup [ PPC405EP_PCI_CLK ] , PCI_clk )"	201:4:3713:3766	6586060	245	True				
ANR	6586728	CallExpression	"clk_setup ( & cpc -> clk_setup [ PPC405EP_PCI_CLK ] , PCI_clk )"		6586060	0					
ANR	6586729	Callee	clk_setup		6586060	0					
ANR	6586730	Identifier	clk_setup		6586060	0					
ANR	6586731	ArgumentList	& cpc -> clk_setup [ PPC405EP_PCI_CLK ]		6586060	1					
ANR	6586732	Argument	& cpc -> clk_setup [ PPC405EP_PCI_CLK ]		6586060	0					
ANR	6586733	UnaryOperationExpression	& cpc -> clk_setup [ PPC405EP_PCI_CLK ]		6586060	0					
ANR	6586734	UnaryOperator	&		6586060	0					
ANR	6586735	ArrayIndexing	cpc -> clk_setup [ PPC405EP_PCI_CLK ]		6586060	1					
ANR	6586736	PtrMemberAccess	cpc -> clk_setup		6586060	0					
ANR	6586737	Identifier	cpc		6586060	0					
ANR	6586738	Identifier	clk_setup		6586060	1					
ANR	6586739	Identifier	PPC405EP_PCI_CLK		6586060	1					
ANR	6586740	Argument	PCI_clk		6586060	1					
ANR	6586741	Identifier	PCI_clk		6586060	0					
ANR	6586742	ExpressionStatement	"clk_setup ( & cpc -> clk_setup [ PPC405EP_UART0_CLK ] , UART0_clk )"	205:4:3802:3859	6586060	246	True				
ANR	6586743	CallExpression	"clk_setup ( & cpc -> clk_setup [ PPC405EP_UART0_CLK ] , UART0_clk )"		6586060	0					
ANR	6586744	Callee	clk_setup		6586060	0					
ANR	6586745	Identifier	clk_setup		6586060	0					
ANR	6586746	ArgumentList	& cpc -> clk_setup [ PPC405EP_UART0_CLK ]		6586060	1					
ANR	6586747	Argument	& cpc -> clk_setup [ PPC405EP_UART0_CLK ]		6586060	0					
ANR	6586748	UnaryOperationExpression	& cpc -> clk_setup [ PPC405EP_UART0_CLK ]		6586060	0					
ANR	6586749	UnaryOperator	&		6586060	0					
ANR	6586750	ArrayIndexing	cpc -> clk_setup [ PPC405EP_UART0_CLK ]		6586060	1					
ANR	6586751	PtrMemberAccess	cpc -> clk_setup		6586060	0					
ANR	6586752	Identifier	cpc		6586060	0					
ANR	6586753	Identifier	clk_setup		6586060	1					
ANR	6586754	Identifier	PPC405EP_UART0_CLK		6586060	1					
ANR	6586755	Argument	UART0_clk		6586060	1					
ANR	6586756	Identifier	UART0_clk		6586060	0					
ANR	6586757	ExpressionStatement	"clk_setup ( & cpc -> clk_setup [ PPC405EP_UART1_CLK ] , UART1_clk )"	209:4:3895:3952	6586060	247	True				
ANR	6586758	CallExpression	"clk_setup ( & cpc -> clk_setup [ PPC405EP_UART1_CLK ] , UART1_clk )"		6586060	0					
ANR	6586759	Callee	clk_setup		6586060	0					
ANR	6586760	Identifier	clk_setup		6586060	0					
ANR	6586761	ArgumentList	& cpc -> clk_setup [ PPC405EP_UART1_CLK ]		6586060	1					
ANR	6586762	Argument	& cpc -> clk_setup [ PPC405EP_UART1_CLK ]		6586060	0					
ANR	6586763	UnaryOperationExpression	& cpc -> clk_setup [ PPC405EP_UART1_CLK ]		6586060	0					
ANR	6586764	UnaryOperator	&		6586060	0					
ANR	6586765	ArrayIndexing	cpc -> clk_setup [ PPC405EP_UART1_CLK ]		6586060	1					
ANR	6586766	PtrMemberAccess	cpc -> clk_setup		6586060	0					
ANR	6586767	Identifier	cpc		6586060	0					
ANR	6586768	Identifier	clk_setup		6586060	1					
ANR	6586769	Identifier	PPC405EP_UART1_CLK		6586060	1					
ANR	6586770	Argument	UART1_clk		6586060	1					
ANR	6586771	Identifier	UART1_clk		6586060	0					
ANR	6586772	ReturnType	static void		6586060	1					
ANR	6586773	Identifier	ppc405ep_compute_clocks		6586060	2					
ANR	6586774	ParameterList	ppc405ep_cpc_t * cpc		6586060	3					
ANR	6586775	Parameter	ppc405ep_cpc_t * cpc	1:37:37:55	6586060	0	True				
ANR	6586776	ParameterType	ppc405ep_cpc_t *		6586060	0					
ANR	6586777	Identifier	cpc		6586060	1					
ANR	6586778	CFGEntryNode	ENTRY		6586060		True				
ANR	6586779	CFGExitNode	EXIT		6586060		True				
ANR	6586780	Symbol	D		6586060						
ANR	6586781	Symbol	PPC405EP_MAL_CLK		6586060						
ANR	6586782	Symbol	~0x80000000		6586060						
ANR	6586783	Symbol	cpc -> ucr		6586060						
ANR	6586784	Symbol	UART0_clk		6586060						
ANR	6586785	Symbol	M		6586060						
ANR	6586786	Symbol	cpc -> sysclk		6586060						
ANR	6586787	Symbol	cpc -> boot		6586060						
ANR	6586788	Symbol	cpc -> clk_setup		6586060						
ANR	6586789	Symbol	PPC405EP_OPB_CLK		6586060						
ANR	6586790	Symbol	PPC405EP_PCI_CLK		6586060						
ANR	6586791	Symbol	cpc		6586060						
ANR	6586792	Symbol	PLB_clk		6586060						
ANR	6586793	Symbol	PPC405EP_CPU_CLK		6586060						
ANR	6586794	Symbol	UART1_clk		6586060						
ANR	6586795	Symbol	MAL_clk		6586060						
ANR	6586796	Symbol	PPC405EP_UART0_CLK		6586060						
ANR	6586797	Symbol	PCI_clk		6586060						
ANR	6586798	Symbol	PLL_out		6586060						
ANR	6586799	Symbol	EBC_clk		6586060						
ANR	6586800	Symbol	VCO_out		6586060						
ANR	6586801	Symbol	* * cpc		6586060						
ANR	6586802	Symbol	PPC405EP_PLB_CLK		6586060						
ANR	6586803	Symbol	* cpc -> pllmr		6586060						
ANR	6586804	Symbol	CPU_clk		6586060						
ANR	6586805	Symbol	PPC405EP_EBC_CLK		6586060						
ANR	6586806	Symbol	cpc -> pllmr		6586060						
ANR	6586807	Symbol	~0x00000001		6586060						
ANR	6586808	Symbol	OPB_clk		6586060						
ANR	6586809	Symbol	PPC405EP_UART1_CLK		6586060						
ANR	6586810	Symbol	* cpc		6586060						
