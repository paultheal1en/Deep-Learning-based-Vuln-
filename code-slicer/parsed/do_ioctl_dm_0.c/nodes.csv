command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2600569	File	/home/p4ultr4n/workplace/ReVeal/raw_code/do_ioctl_dm_0.c								
ANR	2600570	Function	do_ioctl_dm	1:0:0:7659							
ANR	2600571	FunctionDef	"do_ioctl_dm (const IOCTLEntry * ie , uint8_t * buf_temp , int fd , abi_long cmd , abi_long arg)"		2600570	0					
ANR	2600572	CompoundStatement		5:0:135:7659	2600570	0					
ANR	2600573	IdentifierDeclStatement	void * argptr ;	7:4:142:154	2600570	0	True				
ANR	2600574	IdentifierDecl	* argptr		2600570	0					
ANR	2600575	IdentifierDeclType	void *		2600570	0					
ANR	2600576	Identifier	argptr		2600570	1					
ANR	2600577	IdentifierDeclStatement	struct dm_ioctl * host_dm ;	9:4:161:185	2600570	1	True				
ANR	2600578	IdentifierDecl	* host_dm		2600570	0					
ANR	2600579	IdentifierDeclType	struct dm_ioctl *		2600570	0					
ANR	2600580	Identifier	host_dm		2600570	1					
ANR	2600581	IdentifierDeclStatement	abi_long guest_data ;	11:4:192:211	2600570	2	True				
ANR	2600582	IdentifierDecl	guest_data		2600570	0					
ANR	2600583	IdentifierDeclType	abi_long		2600570	0					
ANR	2600584	Identifier	guest_data		2600570	1					
ANR	2600585	IdentifierDeclStatement	uint32_t guest_data_size ;	13:4:218:242	2600570	3	True				
ANR	2600586	IdentifierDecl	guest_data_size		2600570	0					
ANR	2600587	IdentifierDeclType	uint32_t		2600570	0					
ANR	2600588	Identifier	guest_data_size		2600570	1					
ANR	2600589	IdentifierDeclStatement	int target_size ;	15:4:249:264	2600570	4	True				
ANR	2600590	IdentifierDecl	target_size		2600570	0					
ANR	2600591	IdentifierDeclType	int		2600570	0					
ANR	2600592	Identifier	target_size		2600570	1					
ANR	2600593	IdentifierDeclStatement	const argtype * arg_type = ie -> arg_type ;	17:4:271:309	2600570	5	True				
ANR	2600594	IdentifierDecl	* arg_type = ie -> arg_type		2600570	0					
ANR	2600595	IdentifierDeclType	const argtype *		2600570	0					
ANR	2600596	Identifier	arg_type		2600570	1					
ANR	2600597	AssignmentExpression	* arg_type = ie -> arg_type		2600570	2		=			
ANR	2600598	Identifier	arg_type		2600570	0					
ANR	2600599	PtrMemberAccess	ie -> arg_type		2600570	1					
ANR	2600600	Identifier	ie		2600570	0					
ANR	2600601	Identifier	arg_type		2600570	1					
ANR	2600602	IdentifierDeclStatement	abi_long ret ;	19:4:316:328	2600570	6	True				
ANR	2600603	IdentifierDecl	ret		2600570	0					
ANR	2600604	IdentifierDeclType	abi_long		2600570	0					
ANR	2600605	Identifier	ret		2600570	1					
ANR	2600606	IdentifierDeclStatement	void * big_buf = NULL ;	21:4:335:355	2600570	7	True				
ANR	2600607	IdentifierDecl	* big_buf = NULL		2600570	0					
ANR	2600608	IdentifierDeclType	void *		2600570	0					
ANR	2600609	Identifier	big_buf		2600570	1					
ANR	2600610	AssignmentExpression	* big_buf = NULL		2600570	2		=			
ANR	2600611	Identifier	NULL		2600570	0					
ANR	2600612	Identifier	NULL		2600570	1					
ANR	2600613	IdentifierDeclStatement	char * host_data ;	23:4:362:377	2600570	8	True				
ANR	2600614	IdentifierDecl	* host_data		2600570	0					
ANR	2600615	IdentifierDeclType	char *		2600570	0					
ANR	2600616	Identifier	host_data		2600570	1					
ANR	2600617	ExpressionStatement	arg_type ++	27:4:386:396	2600570	9	True				
ANR	2600618	PostIncDecOperationExpression	arg_type ++		2600570	0					
ANR	2600619	Identifier	arg_type		2600570	0					
ANR	2600620	IncDec	++		2600570	1					
ANR	2600621	ExpressionStatement	"target_size = thunk_type_size ( arg_type , 0 )"	29:4:403:445	2600570	10	True				
ANR	2600622	AssignmentExpression	"target_size = thunk_type_size ( arg_type , 0 )"		2600570	0		=			
ANR	2600623	Identifier	target_size		2600570	0					
ANR	2600624	CallExpression	"thunk_type_size ( arg_type , 0 )"		2600570	1					
ANR	2600625	Callee	thunk_type_size		2600570	0					
ANR	2600626	Identifier	thunk_type_size		2600570	0					
ANR	2600627	ArgumentList	arg_type		2600570	1					
ANR	2600628	Argument	arg_type		2600570	0					
ANR	2600629	Identifier	arg_type		2600570	0					
ANR	2600630	Argument	0		2600570	1					
ANR	2600631	PrimaryExpression	0		2600570	0					
ANR	2600632	ExpressionStatement	"argptr = lock_user ( VERIFY_READ , arg , target_size , 1 )"	31:4:452:504	2600570	11	True				
ANR	2600633	AssignmentExpression	"argptr = lock_user ( VERIFY_READ , arg , target_size , 1 )"		2600570	0		=			
ANR	2600634	Identifier	argptr		2600570	0					
ANR	2600635	CallExpression	"lock_user ( VERIFY_READ , arg , target_size , 1 )"		2600570	1					
ANR	2600636	Callee	lock_user		2600570	0					
ANR	2600637	Identifier	lock_user		2600570	0					
ANR	2600638	ArgumentList	VERIFY_READ		2600570	1					
ANR	2600639	Argument	VERIFY_READ		2600570	0					
ANR	2600640	Identifier	VERIFY_READ		2600570	0					
ANR	2600641	Argument	arg		2600570	1					
ANR	2600642	Identifier	arg		2600570	0					
ANR	2600643	Argument	target_size		2600570	2					
ANR	2600644	Identifier	target_size		2600570	0					
ANR	2600645	Argument	1		2600570	3					
ANR	2600646	PrimaryExpression	1		2600570	0					
ANR	2600647	IfStatement	if ( ! argptr )		2600570	12					
ANR	2600648	Condition	! argptr	33:8:515:521	2600570	0	True				
ANR	2600649	UnaryOperationExpression	! argptr		2600570	0					
ANR	2600650	UnaryOperator	!		2600570	0					
ANR	2600651	Identifier	argptr		2600570	1					
ANR	2600652	CompoundStatement		29:17:388:388	2600570	1					
ANR	2600653	ExpressionStatement	ret = - TARGET_EFAULT	35:8:535:555	2600570	0	True				
ANR	2600654	AssignmentExpression	ret = - TARGET_EFAULT		2600570	0		=			
ANR	2600655	Identifier	ret		2600570	0					
ANR	2600656	UnaryOperationExpression	- TARGET_EFAULT		2600570	1					
ANR	2600657	UnaryOperator	-		2600570	0					
ANR	2600658	Identifier	TARGET_EFAULT		2600570	1					
ANR	2600659	GotoStatement	goto out ;	37:8:566:574	2600570	1	True				
ANR	2600660	Identifier	out		2600570	0					
ANR	2600661	ExpressionStatement	"thunk_convert ( buf_temp , argptr , arg_type , THUNK_HOST )"	41:4:588:641	2600570	13	True				
ANR	2600662	CallExpression	"thunk_convert ( buf_temp , argptr , arg_type , THUNK_HOST )"		2600570	0					
ANR	2600663	Callee	thunk_convert		2600570	0					
ANR	2600664	Identifier	thunk_convert		2600570	0					
ANR	2600665	ArgumentList	buf_temp		2600570	1					
ANR	2600666	Argument	buf_temp		2600570	0					
ANR	2600667	Identifier	buf_temp		2600570	0					
ANR	2600668	Argument	argptr		2600570	1					
ANR	2600669	Identifier	argptr		2600570	0					
ANR	2600670	Argument	arg_type		2600570	2					
ANR	2600671	Identifier	arg_type		2600570	0					
ANR	2600672	Argument	THUNK_HOST		2600570	3					
ANR	2600673	Identifier	THUNK_HOST		2600570	0					
ANR	2600674	ExpressionStatement	"unlock_user ( argptr , arg , 0 )"	43:4:648:675	2600570	14	True				
ANR	2600675	CallExpression	"unlock_user ( argptr , arg , 0 )"		2600570	0					
ANR	2600676	Callee	unlock_user		2600570	0					
ANR	2600677	Identifier	unlock_user		2600570	0					
ANR	2600678	ArgumentList	argptr		2600570	1					
ANR	2600679	Argument	argptr		2600570	0					
ANR	2600680	Identifier	argptr		2600570	0					
ANR	2600681	Argument	arg		2600570	1					
ANR	2600682	Identifier	arg		2600570	0					
ANR	2600683	Argument	0		2600570	2					
ANR	2600684	PrimaryExpression	0		2600570	0					
ANR	2600685	ExpressionStatement	big_buf = g_malloc0 ( ( ( struct dm_ioctl * ) buf_temp ) -> data_size * 2 )	49:4:755:819	2600570	15	True				
ANR	2600686	AssignmentExpression	big_buf = g_malloc0 ( ( ( struct dm_ioctl * ) buf_temp ) -> data_size * 2 )		2600570	0		=			
ANR	2600687	Identifier	big_buf		2600570	0					
ANR	2600688	CallExpression	g_malloc0 ( ( ( struct dm_ioctl * ) buf_temp ) -> data_size * 2 )		2600570	1					
ANR	2600689	Callee	g_malloc0		2600570	0					
ANR	2600690	Identifier	g_malloc0		2600570	0					
ANR	2600691	ArgumentList	( ( struct dm_ioctl * ) buf_temp ) -> data_size * 2		2600570	1					
ANR	2600692	Argument	( ( struct dm_ioctl * ) buf_temp ) -> data_size * 2		2600570	0					
ANR	2600693	MultiplicativeExpression	( ( struct dm_ioctl * ) buf_temp ) -> data_size * 2		2600570	0		*			
ANR	2600694	PtrMemberAccess	( ( struct dm_ioctl * ) buf_temp ) -> data_size		2600570	0					
ANR	2600695	CastExpression	( struct dm_ioctl * ) buf_temp		2600570	0					
ANR	2600696	CastTarget	struct dm_ioctl *		2600570	0					
ANR	2600697	Identifier	buf_temp		2600570	1					
ANR	2600698	Identifier	data_size		2600570	1					
ANR	2600699	PrimaryExpression	2		2600570	1					
ANR	2600700	ExpressionStatement	"memcpy ( big_buf , buf_temp , target_size )"	51:4:826:864	2600570	16	True				
ANR	2600701	CallExpression	"memcpy ( big_buf , buf_temp , target_size )"		2600570	0					
ANR	2600702	Callee	memcpy		2600570	0					
ANR	2600703	Identifier	memcpy		2600570	0					
ANR	2600704	ArgumentList	big_buf		2600570	1					
ANR	2600705	Argument	big_buf		2600570	0					
ANR	2600706	Identifier	big_buf		2600570	0					
ANR	2600707	Argument	buf_temp		2600570	1					
ANR	2600708	Identifier	buf_temp		2600570	0					
ANR	2600709	Argument	target_size		2600570	2					
ANR	2600710	Identifier	target_size		2600570	0					
ANR	2600711	ExpressionStatement	buf_temp = big_buf	53:4:871:889	2600570	17	True				
ANR	2600712	AssignmentExpression	buf_temp = big_buf		2600570	0		=			
ANR	2600713	Identifier	buf_temp		2600570	0					
ANR	2600714	Identifier	big_buf		2600570	1					
ANR	2600715	ExpressionStatement	host_dm = big_buf	55:4:896:913	2600570	18	True				
ANR	2600716	AssignmentExpression	host_dm = big_buf		2600570	0		=			
ANR	2600717	Identifier	host_dm		2600570	0					
ANR	2600718	Identifier	big_buf		2600570	1					
ANR	2600719	ExpressionStatement	guest_data = arg + host_dm -> data_start	59:4:922:960	2600570	19	True				
ANR	2600720	AssignmentExpression	guest_data = arg + host_dm -> data_start		2600570	0		=			
ANR	2600721	Identifier	guest_data		2600570	0					
ANR	2600722	AdditiveExpression	arg + host_dm -> data_start		2600570	1		+			
ANR	2600723	Identifier	arg		2600570	0					
ANR	2600724	PtrMemberAccess	host_dm -> data_start		2600570	1					
ANR	2600725	Identifier	host_dm		2600570	0					
ANR	2600726	Identifier	data_start		2600570	1					
ANR	2600727	IfStatement	if ( ( guest_data - arg ) < 0 )		2600570	20					
ANR	2600728	Condition	( guest_data - arg ) < 0	61:8:971:992	2600570	0	True				
ANR	2600729	RelationalExpression	( guest_data - arg ) < 0		2600570	0		<			
ANR	2600730	AdditiveExpression	guest_data - arg		2600570	0		-			
ANR	2600731	Identifier	guest_data		2600570	0					
ANR	2600732	Identifier	arg		2600570	1					
ANR	2600733	PrimaryExpression	0		2600570	1					
ANR	2600734	CompoundStatement		57:32:859:859	2600570	1					
ANR	2600735	ExpressionStatement	ret = - EINVAL	63:8:1006:1019	2600570	0	True				
ANR	2600736	AssignmentExpression	ret = - EINVAL		2600570	0		=			
ANR	2600737	Identifier	ret		2600570	0					
ANR	2600738	UnaryOperationExpression	- EINVAL		2600570	1					
ANR	2600739	UnaryOperator	-		2600570	0					
ANR	2600740	Identifier	EINVAL		2600570	1					
ANR	2600741	GotoStatement	goto out ;	65:8:1030:1038	2600570	1	True				
ANR	2600742	Identifier	out		2600570	0					
ANR	2600743	ExpressionStatement	guest_data_size = host_dm -> data_size - host_dm -> data_start	69:4:1052:1110	2600570	21	True				
ANR	2600744	AssignmentExpression	guest_data_size = host_dm -> data_size - host_dm -> data_start		2600570	0		=			
ANR	2600745	Identifier	guest_data_size		2600570	0					
ANR	2600746	AdditiveExpression	host_dm -> data_size - host_dm -> data_start		2600570	1		-			
ANR	2600747	PtrMemberAccess	host_dm -> data_size		2600570	0					
ANR	2600748	Identifier	host_dm		2600570	0					
ANR	2600749	Identifier	data_size		2600570	1					
ANR	2600750	PtrMemberAccess	host_dm -> data_start		2600570	1					
ANR	2600751	Identifier	host_dm		2600570	0					
ANR	2600752	Identifier	data_start		2600570	1					
ANR	2600753	ExpressionStatement	host_data = ( char * ) host_dm + host_dm -> data_start	71:4:1117:1165	2600570	22	True				
ANR	2600754	AssignmentExpression	host_data = ( char * ) host_dm + host_dm -> data_start		2600570	0		=			
ANR	2600755	Identifier	host_data		2600570	0					
ANR	2600756	AdditiveExpression	( char * ) host_dm + host_dm -> data_start		2600570	1		+			
ANR	2600757	CastExpression	( char * ) host_dm		2600570	0					
ANR	2600758	CastTarget	char *		2600570	0					
ANR	2600759	Identifier	host_dm		2600570	1					
ANR	2600760	PtrMemberAccess	host_dm -> data_start		2600570	1					
ANR	2600761	Identifier	host_dm		2600570	0					
ANR	2600762	Identifier	data_start		2600570	1					
ANR	2600763	ExpressionStatement	"argptr = lock_user ( VERIFY_READ , guest_data , guest_data_size , 1 )"	75:4:1174:1237	2600570	23	True				
ANR	2600764	AssignmentExpression	"argptr = lock_user ( VERIFY_READ , guest_data , guest_data_size , 1 )"		2600570	0		=			
ANR	2600765	Identifier	argptr		2600570	0					
ANR	2600766	CallExpression	"lock_user ( VERIFY_READ , guest_data , guest_data_size , 1 )"		2600570	1					
ANR	2600767	Callee	lock_user		2600570	0					
ANR	2600768	Identifier	lock_user		2600570	0					
ANR	2600769	ArgumentList	VERIFY_READ		2600570	1					
ANR	2600770	Argument	VERIFY_READ		2600570	0					
ANR	2600771	Identifier	VERIFY_READ		2600570	0					
ANR	2600772	Argument	guest_data		2600570	1					
ANR	2600773	Identifier	guest_data		2600570	0					
ANR	2600774	Argument	guest_data_size		2600570	2					
ANR	2600775	Identifier	guest_data_size		2600570	0					
ANR	2600776	Argument	1		2600570	3					
ANR	2600777	PrimaryExpression	1		2600570	0					
ANR	2600778	SwitchStatement	switch ( ie -> host_cmd )		2600570	24					
ANR	2600779	Condition	ie -> host_cmd	77:12:1252:1263	2600570	0	True				
ANR	2600780	PtrMemberAccess	ie -> host_cmd		2600570	0					
ANR	2600781	Identifier	ie		2600570	0					
ANR	2600782	Identifier	host_cmd		2600570	1					
ANR	2600783	CompoundStatement		73:26:1130:1130	2600570	1					
ANR	2600784	Label	case DM_REMOVE_ALL :	79:4:1273:1291	2600570	0	True				
ANR	2600785	Identifier	DM_REMOVE_ALL		2600570	0					
ANR	2600786	Label	case DM_LIST_DEVICES :	81:4:1298:1318	2600570	1	True				
ANR	2600787	Identifier	DM_LIST_DEVICES		2600570	0					
ANR	2600788	Label	case DM_DEV_CREATE :	83:4:1325:1343	2600570	2	True				
ANR	2600789	Identifier	DM_DEV_CREATE		2600570	0					
ANR	2600790	Label	case DM_DEV_REMOVE :	85:4:1350:1368	2600570	3	True				
ANR	2600791	Identifier	DM_DEV_REMOVE		2600570	0					
ANR	2600792	Label	case DM_DEV_SUSPEND :	87:4:1375:1394	2600570	4	True				
ANR	2600793	Identifier	DM_DEV_SUSPEND		2600570	0					
ANR	2600794	Label	case DM_DEV_STATUS :	89:4:1401:1419	2600570	5	True				
ANR	2600795	Identifier	DM_DEV_STATUS		2600570	0					
ANR	2600796	Label	case DM_DEV_WAIT :	91:4:1426:1442	2600570	6	True				
ANR	2600797	Identifier	DM_DEV_WAIT		2600570	0					
ANR	2600798	Label	case DM_TABLE_STATUS :	93:4:1449:1469	2600570	7	True				
ANR	2600799	Identifier	DM_TABLE_STATUS		2600570	0					
ANR	2600800	Label	case DM_TABLE_CLEAR :	95:4:1476:1495	2600570	8	True				
ANR	2600801	Identifier	DM_TABLE_CLEAR		2600570	0					
ANR	2600802	Label	case DM_TABLE_DEPS :	97:4:1502:1520	2600570	9	True				
ANR	2600803	Identifier	DM_TABLE_DEPS		2600570	0					
ANR	2600804	Label	case DM_LIST_VERSIONS :	99:4:1527:1548	2600570	10	True				
ANR	2600805	Identifier	DM_LIST_VERSIONS		2600570	0					
ANR	2600806	BreakStatement	break ;	103:8:1588:1593	2600570	11	True				
ANR	2600807	Label	case DM_DEV_RENAME :	105:4:1600:1618	2600570	12	True				
ANR	2600808	Identifier	DM_DEV_RENAME		2600570	0					
ANR	2600809	Label	case DM_DEV_SET_GEOMETRY :	107:4:1625:1649	2600570	13	True				
ANR	2600810	Identifier	DM_DEV_SET_GEOMETRY		2600570	0					
ANR	2600811	ExpressionStatement	"memcpy ( host_data , argptr , guest_data_size )"	111:8:1702:1744	2600570	14	True				
ANR	2600812	CallExpression	"memcpy ( host_data , argptr , guest_data_size )"		2600570	0					
ANR	2600813	Callee	memcpy		2600570	0					
ANR	2600814	Identifier	memcpy		2600570	0					
ANR	2600815	ArgumentList	host_data		2600570	1					
ANR	2600816	Argument	host_data		2600570	0					
ANR	2600817	Identifier	host_data		2600570	0					
ANR	2600818	Argument	argptr		2600570	1					
ANR	2600819	Identifier	argptr		2600570	0					
ANR	2600820	Argument	guest_data_size		2600570	2					
ANR	2600821	Identifier	guest_data_size		2600570	0					
ANR	2600822	BreakStatement	break ;	113:8:1755:1760	2600570	15	True				
ANR	2600823	Label	case DM_TARGET_MSG :	115:4:1767:1785	2600570	16	True				
ANR	2600824	Identifier	DM_TARGET_MSG		2600570	0					
ANR	2600825	ExpressionStatement	"memcpy ( host_data , argptr , guest_data_size )"	117:8:1796:1838	2600570	17	True				
ANR	2600826	CallExpression	"memcpy ( host_data , argptr , guest_data_size )"		2600570	0					
ANR	2600827	Callee	memcpy		2600570	0					
ANR	2600828	Identifier	memcpy		2600570	0					
ANR	2600829	ArgumentList	host_data		2600570	1					
ANR	2600830	Argument	host_data		2600570	0					
ANR	2600831	Identifier	host_data		2600570	0					
ANR	2600832	Argument	argptr		2600570	1					
ANR	2600833	Identifier	argptr		2600570	0					
ANR	2600834	Argument	guest_data_size		2600570	2					
ANR	2600835	Identifier	guest_data_size		2600570	0					
ANR	2600836	ExpressionStatement	* ( uint64_t * ) host_data = tswap64 ( * ( uint64_t * ) argptr )	119:8:1849:1900	2600570	18	True				
ANR	2600837	AssignmentExpression	* ( uint64_t * ) host_data = tswap64 ( * ( uint64_t * ) argptr )		2600570	0		=			
ANR	2600838	UnaryOperationExpression	* ( uint64_t * ) host_data		2600570	0					
ANR	2600839	UnaryOperator	*		2600570	0					
ANR	2600840	CastExpression	( uint64_t * ) host_data		2600570	1					
ANR	2600841	CastTarget	uint64_t *		2600570	0					
ANR	2600842	Identifier	host_data		2600570	1					
ANR	2600843	CallExpression	tswap64 ( * ( uint64_t * ) argptr )		2600570	1					
ANR	2600844	Callee	tswap64		2600570	0					
ANR	2600845	Identifier	tswap64		2600570	0					
ANR	2600846	ArgumentList	* ( uint64_t * ) argptr		2600570	1					
ANR	2600847	Argument	* ( uint64_t * ) argptr		2600570	0					
ANR	2600848	UnaryOperationExpression	* ( uint64_t * ) argptr		2600570	0					
ANR	2600849	UnaryOperator	*		2600570	0					
ANR	2600850	CastExpression	( uint64_t * ) argptr		2600570	1					
ANR	2600851	CastTarget	uint64_t *		2600570	0					
ANR	2600852	Identifier	argptr		2600570	1					
ANR	2600853	BreakStatement	break ;	121:8:1911:1916	2600570	19	True				
ANR	2600854	Label	case DM_TABLE_LOAD :	123:4:1923:1941	2600570	20	True				
ANR	2600855	Identifier	DM_TABLE_LOAD		2600570	0					
ANR	2600856	CompoundStatement		131:8:2020:2025	2600570	21					
ANR	2600857	IdentifierDeclStatement	void * gspec = argptr ;	127:8:1959:1979	2600570	0	True				
ANR	2600858	IdentifierDecl	* gspec = argptr		2600570	0					
ANR	2600859	IdentifierDeclType	void *		2600570	0					
ANR	2600860	Identifier	gspec		2600570	1					
ANR	2600861	AssignmentExpression	* gspec = argptr		2600570	2		=			
ANR	2600862	Identifier	argptr		2600570	0					
ANR	2600863	Identifier	argptr		2600570	1					
ANR	2600864	IdentifierDeclStatement	void * cur_data = host_data ;	129:8:1990:2016	2600570	1	True				
ANR	2600865	IdentifierDecl	* cur_data = host_data		2600570	0					
ANR	2600866	IdentifierDeclType	void *		2600570	0					
ANR	2600867	Identifier	cur_data		2600570	1					
ANR	2600868	AssignmentExpression	* cur_data = host_data		2600570	2		=			
ANR	2600869	Identifier	host_data		2600570	0					
ANR	2600870	Identifier	host_data		2600570	1					
ANR	2600871	IdentifierDeclStatement	const argtype arg_type [ ] = { MK_STRUCT ( STRUCT_dm_target_spec ) } ;	131:8:2027:2090	2600570	2	True				
ANR	2600872	IdentifierDecl	arg_type [ ] = { MK_STRUCT ( STRUCT_dm_target_spec ) }		2600570	0					
ANR	2600873	IdentifierDeclType	const argtype [ ]		2600570	0					
ANR	2600874	Identifier	arg_type		2600570	1					
ANR	2600875	AssignmentExpression	arg_type [ ] = { MK_STRUCT ( STRUCT_dm_target_spec ) }		2600570	2		=			
ANR	2600876	Identifier	arg_type		2600570	0					
ANR	2600877	InitializerList	MK_STRUCT ( STRUCT_dm_target_spec )		2600570	1					
ANR	2600878	CallExpression	MK_STRUCT ( STRUCT_dm_target_spec )		2600570	0					
ANR	2600879	Callee	MK_STRUCT		2600570	0					
ANR	2600880	Identifier	MK_STRUCT		2600570	0					
ANR	2600881	ArgumentList	STRUCT_dm_target_spec		2600570	1					
ANR	2600882	Argument	STRUCT_dm_target_spec		2600570	0					
ANR	2600883	Identifier	STRUCT_dm_target_spec		2600570	0					
ANR	2600884	IdentifierDeclStatement	"int spec_size = thunk_type_size ( arg_type , 0 ) ;"	133:8:2101:2145	2600570	3	True				
ANR	2600885	IdentifierDecl	"spec_size = thunk_type_size ( arg_type , 0 )"		2600570	0					
ANR	2600886	IdentifierDeclType	int		2600570	0					
ANR	2600887	Identifier	spec_size		2600570	1					
ANR	2600888	AssignmentExpression	"spec_size = thunk_type_size ( arg_type , 0 )"		2600570	2		=			
ANR	2600889	Identifier	spec_size		2600570	0					
ANR	2600890	CallExpression	"thunk_type_size ( arg_type , 0 )"		2600570	1					
ANR	2600891	Callee	thunk_type_size		2600570	0					
ANR	2600892	Identifier	thunk_type_size		2600570	0					
ANR	2600893	ArgumentList	arg_type		2600570	1					
ANR	2600894	Argument	arg_type		2600570	0					
ANR	2600895	Identifier	arg_type		2600570	0					
ANR	2600896	Argument	0		2600570	1					
ANR	2600897	PrimaryExpression	0		2600570	0					
ANR	2600898	IdentifierDeclStatement	int i ;	135:8:2156:2161	2600570	4	True				
ANR	2600899	IdentifierDecl	i		2600570	0					
ANR	2600900	IdentifierDeclType	int		2600570	0					
ANR	2600901	Identifier	i		2600570	1					
ANR	2600902	ForStatement	for ( i = 0 ; i < host_dm -> target_count ; i ++ )		2600570	5					
ANR	2600903	ForInit	i = 0 ;	139:13:2179:2184	2600570	0	True				
ANR	2600904	AssignmentExpression	i = 0		2600570	0		=			
ANR	2600905	Identifier	i		2600570	0					
ANR	2600906	PrimaryExpression	0		2600570	1					
ANR	2600907	Condition	i < host_dm -> target_count	139:20:2186:2210	2600570	1	True				
ANR	2600908	RelationalExpression	i < host_dm -> target_count		2600570	0		<			
ANR	2600909	Identifier	i		2600570	0					
ANR	2600910	PtrMemberAccess	host_dm -> target_count		2600570	1					
ANR	2600911	Identifier	host_dm		2600570	0					
ANR	2600912	Identifier	target_count		2600570	1					
ANR	2600913	PostIncDecOperationExpression	i ++	139:47:2213:2215	2600570	2	True				
ANR	2600914	Identifier	i		2600570	0					
ANR	2600915	IncDec	++		2600570	1					
ANR	2600916	CompoundStatement		141:12:2178:2186	2600570	3					
ANR	2600917	IdentifierDeclStatement	struct dm_target_spec * spec = cur_data ;	141:12:2233:2271	2600570	0	True				
ANR	2600918	IdentifierDecl	* spec = cur_data		2600570	0					
ANR	2600919	IdentifierDeclType	struct dm_target_spec *		2600570	0					
ANR	2600920	Identifier	spec		2600570	1					
ANR	2600921	AssignmentExpression	* spec = cur_data		2600570	2		=			
ANR	2600922	Identifier	cur_data		2600570	0					
ANR	2600923	Identifier	cur_data		2600570	1					
ANR	2600924	IdentifierDeclStatement	uint32_t next ;	143:12:2286:2299	2600570	1	True				
ANR	2600925	IdentifierDecl	next		2600570	0					
ANR	2600926	IdentifierDeclType	uint32_t		2600570	0					
ANR	2600927	Identifier	next		2600570	1					
ANR	2600928	IdentifierDeclStatement	int slen ;	145:12:2314:2322	2600570	2	True				
ANR	2600929	IdentifierDecl	slen		2600570	0					
ANR	2600930	IdentifierDeclType	int		2600570	0					
ANR	2600931	Identifier	slen		2600570	1					
ANR	2600932	ExpressionStatement	"thunk_convert ( spec , gspec , arg_type , THUNK_HOST )"	149:12:2339:2387	2600570	3	True				
ANR	2600933	CallExpression	"thunk_convert ( spec , gspec , arg_type , THUNK_HOST )"		2600570	0					
ANR	2600934	Callee	thunk_convert		2600570	0					
ANR	2600935	Identifier	thunk_convert		2600570	0					
ANR	2600936	ArgumentList	spec		2600570	1					
ANR	2600937	Argument	spec		2600570	0					
ANR	2600938	Identifier	spec		2600570	0					
ANR	2600939	Argument	gspec		2600570	1					
ANR	2600940	Identifier	gspec		2600570	0					
ANR	2600941	Argument	arg_type		2600570	2					
ANR	2600942	Identifier	arg_type		2600570	0					
ANR	2600943	Argument	THUNK_HOST		2600570	3					
ANR	2600944	Identifier	THUNK_HOST		2600570	0					
ANR	2600945	ExpressionStatement	slen = strlen ( ( char * ) gspec + spec_size ) + 1	151:12:2402:2445	2600570	4	True				
ANR	2600946	AssignmentExpression	slen = strlen ( ( char * ) gspec + spec_size ) + 1		2600570	0		=			
ANR	2600947	Identifier	slen		2600570	0					
ANR	2600948	AdditiveExpression	strlen ( ( char * ) gspec + spec_size ) + 1		2600570	1		+			
ANR	2600949	CallExpression	strlen ( ( char * ) gspec + spec_size )		2600570	0					
ANR	2600950	Callee	strlen		2600570	0					
ANR	2600951	Identifier	strlen		2600570	0					
ANR	2600952	ArgumentList	( char * ) gspec + spec_size		2600570	1					
ANR	2600953	Argument	( char * ) gspec + spec_size		2600570	0					
ANR	2600954	AdditiveExpression	( char * ) gspec + spec_size		2600570	0		+			
ANR	2600955	CastExpression	( char * ) gspec		2600570	0					
ANR	2600956	CastTarget	char *		2600570	0					
ANR	2600957	Identifier	gspec		2600570	1					
ANR	2600958	Identifier	spec_size		2600570	1					
ANR	2600959	PrimaryExpression	1		2600570	1					
ANR	2600960	ExpressionStatement	next = spec -> next	153:12:2460:2477	2600570	5	True				
ANR	2600961	AssignmentExpression	next = spec -> next		2600570	0		=			
ANR	2600962	Identifier	next		2600570	0					
ANR	2600963	PtrMemberAccess	spec -> next		2600570	1					
ANR	2600964	Identifier	spec		2600570	0					
ANR	2600965	Identifier	next		2600570	1					
ANR	2600966	ExpressionStatement	spec -> next = sizeof ( * spec ) + slen	155:12:2492:2525	2600570	6	True				
ANR	2600967	AssignmentExpression	spec -> next = sizeof ( * spec ) + slen		2600570	0		=			
ANR	2600968	PtrMemberAccess	spec -> next		2600570	0					
ANR	2600969	Identifier	spec		2600570	0					
ANR	2600970	Identifier	next		2600570	1					
ANR	2600971	AdditiveExpression	sizeof ( * spec ) + slen		2600570	1		+			
ANR	2600972	SizeofExpression	sizeof ( * spec )		2600570	0					
ANR	2600973	Sizeof	sizeof		2600570	0					
ANR	2600974	UnaryOperationExpression	* spec		2600570	1					
ANR	2600975	UnaryOperator	*		2600570	0					
ANR	2600976	Identifier	spec		2600570	1					
ANR	2600977	Identifier	slen		2600570	1					
ANR	2600978	ExpressionStatement	"strcpy ( ( char * ) & spec [ 1 ] , gspec + spec_size )"	157:12:2540:2582	2600570	7	True				
ANR	2600979	CallExpression	"strcpy ( ( char * ) & spec [ 1 ] , gspec + spec_size )"		2600570	0					
ANR	2600980	Callee	strcpy		2600570	0					
ANR	2600981	Identifier	strcpy		2600570	0					
ANR	2600982	ArgumentList	( char * ) & spec [ 1 ]		2600570	1					
ANR	2600983	Argument	( char * ) & spec [ 1 ]		2600570	0					
ANR	2600984	CastExpression	( char * ) & spec [ 1 ]		2600570	0					
ANR	2600985	CastTarget	char *		2600570	0					
ANR	2600986	UnaryOperationExpression	& spec [ 1 ]		2600570	1					
ANR	2600987	UnaryOperator	&		2600570	0					
ANR	2600988	ArrayIndexing	spec [ 1 ]		2600570	1					
ANR	2600989	Identifier	spec		2600570	0					
ANR	2600990	PrimaryExpression	1		2600570	1					
ANR	2600991	Argument	gspec + spec_size		2600570	1					
ANR	2600992	AdditiveExpression	gspec + spec_size		2600570	0		+			
ANR	2600993	Identifier	gspec		2600570	0					
ANR	2600994	Identifier	spec_size		2600570	1					
ANR	2600995	ExpressionStatement	gspec += next	159:12:2597:2610	2600570	8	True				
ANR	2600996	AssignmentExpression	gspec += next		2600570	0		+=			
ANR	2600997	Identifier	gspec		2600570	0					
ANR	2600998	Identifier	next		2600570	1					
ANR	2600999	ExpressionStatement	cur_data += spec -> next	161:12:2625:2647	2600570	9	True				
ANR	2601000	AssignmentExpression	cur_data += spec -> next		2600570	0		+=			
ANR	2601001	Identifier	cur_data		2600570	0					
ANR	2601002	PtrMemberAccess	spec -> next		2600570	1					
ANR	2601003	Identifier	spec		2600570	0					
ANR	2601004	Identifier	next		2600570	1					
ANR	2601005	BreakStatement	break ;	165:8:2669:2674	2600570	6	True				
ANR	2601006	Label	default :	169:4:2688:2695	2600570	22	True				
ANR	2601007	Identifier	default		2600570	0					
ANR	2601008	ExpressionStatement	ret = - TARGET_EINVAL	171:8:2706:2726	2600570	23	True				
ANR	2601009	AssignmentExpression	ret = - TARGET_EINVAL		2600570	0		=			
ANR	2601010	Identifier	ret		2600570	0					
ANR	2601011	UnaryOperationExpression	- TARGET_EINVAL		2600570	1					
ANR	2601012	UnaryOperator	-		2600570	0					
ANR	2601013	Identifier	TARGET_EINVAL		2600570	1					
ANR	2601014	GotoStatement	goto out ;	173:8:2737:2745	2600570	24	True				
ANR	2601015	Identifier	out		2600570	0					
ANR	2601016	ExpressionStatement	"unlock_user ( argptr , guest_data , 0 )"	177:4:2759:2793	2600570	25	True				
ANR	2601017	CallExpression	"unlock_user ( argptr , guest_data , 0 )"		2600570	0					
ANR	2601018	Callee	unlock_user		2600570	0					
ANR	2601019	Identifier	unlock_user		2600570	0					
ANR	2601020	ArgumentList	argptr		2600570	1					
ANR	2601021	Argument	argptr		2600570	0					
ANR	2601022	Identifier	argptr		2600570	0					
ANR	2601023	Argument	guest_data		2600570	1					
ANR	2601024	Identifier	guest_data		2600570	0					
ANR	2601025	Argument	0		2600570	2					
ANR	2601026	PrimaryExpression	0		2600570	0					
ANR	2601027	ExpressionStatement	"ret = get_errno ( ioctl ( fd , ie -> host_cmd , buf_temp ) )"	181:4:2802:2852	2600570	26	True				
ANR	2601028	AssignmentExpression	"ret = get_errno ( ioctl ( fd , ie -> host_cmd , buf_temp ) )"		2600570	0		=			
ANR	2601029	Identifier	ret		2600570	0					
ANR	2601030	CallExpression	"get_errno ( ioctl ( fd , ie -> host_cmd , buf_temp ) )"		2600570	1					
ANR	2601031	Callee	get_errno		2600570	0					
ANR	2601032	Identifier	get_errno		2600570	0					
ANR	2601033	ArgumentList	"ioctl ( fd , ie -> host_cmd , buf_temp )"		2600570	1					
ANR	2601034	Argument	"ioctl ( fd , ie -> host_cmd , buf_temp )"		2600570	0					
ANR	2601035	CallExpression	"ioctl ( fd , ie -> host_cmd , buf_temp )"		2600570	0					
ANR	2601036	Callee	ioctl		2600570	0					
ANR	2601037	Identifier	ioctl		2600570	0					
ANR	2601038	ArgumentList	fd		2600570	1					
ANR	2601039	Argument	fd		2600570	0					
ANR	2601040	Identifier	fd		2600570	0					
ANR	2601041	Argument	ie -> host_cmd		2600570	1					
ANR	2601042	PtrMemberAccess	ie -> host_cmd		2600570	0					
ANR	2601043	Identifier	ie		2600570	0					
ANR	2601044	Identifier	host_cmd		2600570	1					
ANR	2601045	Argument	buf_temp		2600570	2					
ANR	2601046	Identifier	buf_temp		2600570	0					
ANR	2601047	IfStatement	if ( ! is_error ( ret ) )		2600570	27					
ANR	2601048	Condition	! is_error ( ret )	183:8:2863:2876	2600570	0	True				
ANR	2601049	UnaryOperationExpression	! is_error ( ret )		2600570	0					
ANR	2601050	UnaryOperator	!		2600570	0					
ANR	2601051	CallExpression	is_error ( ret )		2600570	1					
ANR	2601052	Callee	is_error		2600570	0					
ANR	2601053	Identifier	is_error		2600570	0					
ANR	2601054	ArgumentList	ret		2600570	1					
ANR	2601055	Argument	ret		2600570	0					
ANR	2601056	Identifier	ret		2600570	0					
ANR	2601057	CompoundStatement		179:24:2743:2743	2600570	1					
ANR	2601058	ExpressionStatement	guest_data = arg + host_dm -> data_start	185:8:2890:2928	2600570	0	True				
ANR	2601059	AssignmentExpression	guest_data = arg + host_dm -> data_start		2600570	0		=			
ANR	2601060	Identifier	guest_data		2600570	0					
ANR	2601061	AdditiveExpression	arg + host_dm -> data_start		2600570	1		+			
ANR	2601062	Identifier	arg		2600570	0					
ANR	2601063	PtrMemberAccess	host_dm -> data_start		2600570	1					
ANR	2601064	Identifier	host_dm		2600570	0					
ANR	2601065	Identifier	data_start		2600570	1					
ANR	2601066	ExpressionStatement	guest_data_size = host_dm -> data_size - host_dm -> data_start	187:8:2939:2997	2600570	1	True				
ANR	2601067	AssignmentExpression	guest_data_size = host_dm -> data_size - host_dm -> data_start		2600570	0		=			
ANR	2601068	Identifier	guest_data_size		2600570	0					
ANR	2601069	AdditiveExpression	host_dm -> data_size - host_dm -> data_start		2600570	1		-			
ANR	2601070	PtrMemberAccess	host_dm -> data_size		2600570	0					
ANR	2601071	Identifier	host_dm		2600570	0					
ANR	2601072	Identifier	data_size		2600570	1					
ANR	2601073	PtrMemberAccess	host_dm -> data_start		2600570	1					
ANR	2601074	Identifier	host_dm		2600570	0					
ANR	2601075	Identifier	data_start		2600570	1					
ANR	2601076	ExpressionStatement	"argptr = lock_user ( VERIFY_WRITE , guest_data , guest_data_size , 0 )"	189:8:3008:3072	2600570	2	True				
ANR	2601077	AssignmentExpression	"argptr = lock_user ( VERIFY_WRITE , guest_data , guest_data_size , 0 )"		2600570	0		=			
ANR	2601078	Identifier	argptr		2600570	0					
ANR	2601079	CallExpression	"lock_user ( VERIFY_WRITE , guest_data , guest_data_size , 0 )"		2600570	1					
ANR	2601080	Callee	lock_user		2600570	0					
ANR	2601081	Identifier	lock_user		2600570	0					
ANR	2601082	ArgumentList	VERIFY_WRITE		2600570	1					
ANR	2601083	Argument	VERIFY_WRITE		2600570	0					
ANR	2601084	Identifier	VERIFY_WRITE		2600570	0					
ANR	2601085	Argument	guest_data		2600570	1					
ANR	2601086	Identifier	guest_data		2600570	0					
ANR	2601087	Argument	guest_data_size		2600570	2					
ANR	2601088	Identifier	guest_data_size		2600570	0					
ANR	2601089	Argument	0		2600570	3					
ANR	2601090	PrimaryExpression	0		2600570	0					
ANR	2601091	SwitchStatement	switch ( ie -> host_cmd )		2600570	3					
ANR	2601092	Condition	ie -> host_cmd	191:16:3091:3102	2600570	0	True				
ANR	2601093	PtrMemberAccess	ie -> host_cmd		2600570	0					
ANR	2601094	Identifier	ie		2600570	0					
ANR	2601095	Identifier	host_cmd		2600570	1					
ANR	2601096	CompoundStatement		187:30:2969:2969	2600570	1					
ANR	2601097	Label	case DM_REMOVE_ALL :	193:8:3116:3134	2600570	0	True				
ANR	2601098	Identifier	DM_REMOVE_ALL		2600570	0					
ANR	2601099	Label	case DM_DEV_CREATE :	195:8:3145:3163	2600570	1	True				
ANR	2601100	Identifier	DM_DEV_CREATE		2600570	0					
ANR	2601101	Label	case DM_DEV_REMOVE :	197:8:3174:3192	2600570	2	True				
ANR	2601102	Identifier	DM_DEV_REMOVE		2600570	0					
ANR	2601103	Label	case DM_DEV_RENAME :	199:8:3203:3221	2600570	3	True				
ANR	2601104	Identifier	DM_DEV_RENAME		2600570	0					
ANR	2601105	Label	case DM_DEV_SUSPEND :	201:8:3232:3251	2600570	4	True				
ANR	2601106	Identifier	DM_DEV_SUSPEND		2600570	0					
ANR	2601107	Label	case DM_DEV_STATUS :	203:8:3262:3280	2600570	5	True				
ANR	2601108	Identifier	DM_DEV_STATUS		2600570	0					
ANR	2601109	Label	case DM_TABLE_LOAD :	205:8:3291:3309	2600570	6	True				
ANR	2601110	Identifier	DM_TABLE_LOAD		2600570	0					
ANR	2601111	Label	case DM_TABLE_CLEAR :	207:8:3320:3339	2600570	7	True				
ANR	2601112	Identifier	DM_TABLE_CLEAR		2600570	0					
ANR	2601113	Label	case DM_TARGET_MSG :	209:8:3350:3368	2600570	8	True				
ANR	2601114	Identifier	DM_TARGET_MSG		2600570	0					
ANR	2601115	Label	case DM_DEV_SET_GEOMETRY :	211:8:3379:3403	2600570	9	True				
ANR	2601116	Identifier	DM_DEV_SET_GEOMETRY		2600570	0					
ANR	2601117	BreakStatement	break ;	215:12:3452:3457	2600570	10	True				
ANR	2601118	Label	case DM_LIST_DEVICES :	217:8:3468:3488	2600570	11	True				
ANR	2601119	Identifier	DM_LIST_DEVICES		2600570	0					
ANR	2601120	CompoundStatement		225:12:3625:3641	2600570	12					
ANR	2601121	IdentifierDeclStatement	struct dm_name_list * nl = ( void * ) host_dm + host_dm -> data_start ;	221:12:3514:3576	2600570	0	True				
ANR	2601122	IdentifierDecl	* nl = ( void * ) host_dm + host_dm -> data_start		2600570	0					
ANR	2601123	IdentifierDeclType	struct dm_name_list *		2600570	0					
ANR	2601124	Identifier	nl		2600570	1					
ANR	2601125	AssignmentExpression	* nl = ( void * ) host_dm + host_dm -> data_start		2600570	2		=			
ANR	2601126	Identifier	nl		2600570	0					
ANR	2601127	AdditiveExpression	( void * ) host_dm + host_dm -> data_start		2600570	1		+			
ANR	2601128	CastExpression	( void * ) host_dm		2600570	0					
ANR	2601129	CastTarget	void *		2600570	0					
ANR	2601130	Identifier	host_dm		2600570	1					
ANR	2601131	PtrMemberAccess	host_dm -> data_start		2600570	1					
ANR	2601132	Identifier	host_dm		2600570	0					
ANR	2601133	Identifier	data_start		2600570	1					
ANR	2601134	IdentifierDeclStatement	uint32_t remaining_data = guest_data_size ;	223:12:3591:3632	2600570	1	True				
ANR	2601135	IdentifierDecl	remaining_data = guest_data_size		2600570	0					
ANR	2601136	IdentifierDeclType	uint32_t		2600570	0					
ANR	2601137	Identifier	remaining_data		2600570	1					
ANR	2601138	AssignmentExpression	remaining_data = guest_data_size		2600570	2		=			
ANR	2601139	Identifier	guest_data_size		2600570	0					
ANR	2601140	Identifier	guest_data_size		2600570	1					
ANR	2601141	IdentifierDeclStatement	void * cur_data = argptr ;	225:12:3647:3670	2600570	2	True				
ANR	2601142	IdentifierDecl	* cur_data = argptr		2600570	0					
ANR	2601143	IdentifierDeclType	void *		2600570	0					
ANR	2601144	Identifier	cur_data		2600570	1					
ANR	2601145	AssignmentExpression	* cur_data = argptr		2600570	2		=			
ANR	2601146	Identifier	argptr		2600570	0					
ANR	2601147	Identifier	argptr		2600570	1					
ANR	2601148	IdentifierDeclStatement	const argtype arg_type [ ] = { MK_STRUCT ( STRUCT_dm_name_list ) } ;	227:12:3685:3746	2600570	3	True				
ANR	2601149	IdentifierDecl	arg_type [ ] = { MK_STRUCT ( STRUCT_dm_name_list ) }		2600570	0					
ANR	2601150	IdentifierDeclType	const argtype [ ]		2600570	0					
ANR	2601151	Identifier	arg_type		2600570	1					
ANR	2601152	AssignmentExpression	arg_type [ ] = { MK_STRUCT ( STRUCT_dm_name_list ) }		2600570	2		=			
ANR	2601153	Identifier	arg_type		2600570	0					
ANR	2601154	InitializerList	MK_STRUCT ( STRUCT_dm_name_list )		2600570	1					
ANR	2601155	CallExpression	MK_STRUCT ( STRUCT_dm_name_list )		2600570	0					
ANR	2601156	Callee	MK_STRUCT		2600570	0					
ANR	2601157	Identifier	MK_STRUCT		2600570	0					
ANR	2601158	ArgumentList	STRUCT_dm_name_list		2600570	1					
ANR	2601159	Argument	STRUCT_dm_name_list		2600570	0					
ANR	2601160	Identifier	STRUCT_dm_name_list		2600570	0					
ANR	2601161	IdentifierDeclStatement	int nl_size = 12 ;	229:12:3761:3777	2600570	4	True				
ANR	2601162	IdentifierDecl	nl_size = 12		2600570	0					
ANR	2601163	IdentifierDeclType	int		2600570	0					
ANR	2601164	Identifier	nl_size		2600570	1					
ANR	2601165	AssignmentExpression	nl_size = 12		2600570	2		=			
ANR	2601166	Identifier	nl_size		2600570	0					
ANR	2601167	PrimaryExpression	12		2600570	1					
ANR	2601168	WhileStatement	while ( 1 )		2600570	5					
ANR	2601169	Condition	1	233:19:3845:3845	2600570	0	True				
ANR	2601170	PrimaryExpression	1		2600570	0					
ANR	2601171	CompoundStatement		231:16:3731:3755	2600570	1					
ANR	2601172	IdentifierDeclStatement	uint32_t next = nl -> next ;	235:16:3867:3891	2600570	0	True				
ANR	2601173	IdentifierDecl	next = nl -> next		2600570	0					
ANR	2601174	IdentifierDeclType	uint32_t		2600570	0					
ANR	2601175	Identifier	next		2600570	1					
ANR	2601176	AssignmentExpression	next = nl -> next		2600570	2		=			
ANR	2601177	Identifier	next		2600570	0					
ANR	2601178	PtrMemberAccess	nl -> next		2600570	1					
ANR	2601179	Identifier	nl		2600570	0					
ANR	2601180	Identifier	next		2600570	1					
ANR	2601181	IfStatement	if ( next )		2600570	1					
ANR	2601182	Condition	next	237:20:3914:3917	2600570	0	True				
ANR	2601183	Identifier	next		2600570	0					
ANR	2601184	CompoundStatement		233:26:3784:3784	2600570	1					
ANR	2601185	ExpressionStatement	nl -> next = nl_size + ( strlen ( nl -> name ) + 1 )	239:20:3943:3986	2600570	0	True				
ANR	2601186	AssignmentExpression	nl -> next = nl_size + ( strlen ( nl -> name ) + 1 )		2600570	0		=			
ANR	2601187	PtrMemberAccess	nl -> next		2600570	0					
ANR	2601188	Identifier	nl		2600570	0					
ANR	2601189	Identifier	next		2600570	1					
ANR	2601190	AdditiveExpression	nl_size + ( strlen ( nl -> name ) + 1 )		2600570	1		+			
ANR	2601191	Identifier	nl_size		2600570	0					
ANR	2601192	AdditiveExpression	strlen ( nl -> name ) + 1		2600570	1		+			
ANR	2601193	CallExpression	strlen ( nl -> name )		2600570	0					
ANR	2601194	Callee	strlen		2600570	0					
ANR	2601195	Identifier	strlen		2600570	0					
ANR	2601196	ArgumentList	nl -> name		2600570	1					
ANR	2601197	Argument	nl -> name		2600570	0					
ANR	2601198	PtrMemberAccess	nl -> name		2600570	0					
ANR	2601199	Identifier	nl		2600570	0					
ANR	2601200	Identifier	name		2600570	1					
ANR	2601201	PrimaryExpression	1		2600570	1					
ANR	2601202	IfStatement	if ( remaining_data < nl -> next )		2600570	2					
ANR	2601203	Condition	remaining_data < nl -> next	243:20:4028:4052	2600570	0	True				
ANR	2601204	RelationalExpression	remaining_data < nl -> next		2600570	0		<			
ANR	2601205	Identifier	remaining_data		2600570	0					
ANR	2601206	PtrMemberAccess	nl -> next		2600570	1					
ANR	2601207	Identifier	nl		2600570	0					
ANR	2601208	Identifier	next		2600570	1					
ANR	2601209	CompoundStatement		239:47:3919:3919	2600570	1					
ANR	2601210	ExpressionStatement	host_dm -> flags |= DM_BUFFER_FULL_FLAG	245:20:4078:4115	2600570	0	True				
ANR	2601211	AssignmentExpression	host_dm -> flags |= DM_BUFFER_FULL_FLAG		2600570	0		|=			
ANR	2601212	PtrMemberAccess	host_dm -> flags		2600570	0					
ANR	2601213	Identifier	host_dm		2600570	0					
ANR	2601214	Identifier	flags		2600570	1					
ANR	2601215	Identifier	DM_BUFFER_FULL_FLAG		2600570	1					
ANR	2601216	BreakStatement	break ;	247:20:4138:4143	2600570	1	True				
ANR	2601217	ExpressionStatement	"thunk_convert ( cur_data , nl , arg_type , THUNK_TARGET )"	251:16:4181:4232	2600570	3	True				
ANR	2601218	CallExpression	"thunk_convert ( cur_data , nl , arg_type , THUNK_TARGET )"		2600570	0					
ANR	2601219	Callee	thunk_convert		2600570	0					
ANR	2601220	Identifier	thunk_convert		2600570	0					
ANR	2601221	ArgumentList	cur_data		2600570	1					
ANR	2601222	Argument	cur_data		2600570	0					
ANR	2601223	Identifier	cur_data		2600570	0					
ANR	2601224	Argument	nl		2600570	1					
ANR	2601225	Identifier	nl		2600570	0					
ANR	2601226	Argument	arg_type		2600570	2					
ANR	2601227	Identifier	arg_type		2600570	0					
ANR	2601228	Argument	THUNK_TARGET		2600570	3					
ANR	2601229	Identifier	THUNK_TARGET		2600570	0					
ANR	2601230	ExpressionStatement	"strcpy ( cur_data + nl_size , nl -> name )"	253:16:4251:4287	2600570	4	True				
ANR	2601231	CallExpression	"strcpy ( cur_data + nl_size , nl -> name )"		2600570	0					
ANR	2601232	Callee	strcpy		2600570	0					
ANR	2601233	Identifier	strcpy		2600570	0					
ANR	2601234	ArgumentList	cur_data + nl_size		2600570	1					
ANR	2601235	Argument	cur_data + nl_size		2600570	0					
ANR	2601236	AdditiveExpression	cur_data + nl_size		2600570	0		+			
ANR	2601237	Identifier	cur_data		2600570	0					
ANR	2601238	Identifier	nl_size		2600570	1					
ANR	2601239	Argument	nl -> name		2600570	1					
ANR	2601240	PtrMemberAccess	nl -> name		2600570	0					
ANR	2601241	Identifier	nl		2600570	0					
ANR	2601242	Identifier	name		2600570	1					
ANR	2601243	ExpressionStatement	cur_data += nl -> next	255:16:4306:4326	2600570	5	True				
ANR	2601244	AssignmentExpression	cur_data += nl -> next		2600570	0		+=			
ANR	2601245	Identifier	cur_data		2600570	0					
ANR	2601246	PtrMemberAccess	nl -> next		2600570	1					
ANR	2601247	Identifier	nl		2600570	0					
ANR	2601248	Identifier	next		2600570	1					
ANR	2601249	ExpressionStatement	remaining_data -= nl -> next	257:16:4345:4371	2600570	6	True				
ANR	2601250	AssignmentExpression	remaining_data -= nl -> next		2600570	0		-=			
ANR	2601251	Identifier	remaining_data		2600570	0					
ANR	2601252	PtrMemberAccess	nl -> next		2600570	1					
ANR	2601253	Identifier	nl		2600570	0					
ANR	2601254	Identifier	next		2600570	1					
ANR	2601255	IfStatement	if ( ! next )		2600570	7					
ANR	2601256	Condition	! next	259:20:4394:4398	2600570	0	True				
ANR	2601257	UnaryOperationExpression	! next		2600570	0					
ANR	2601258	UnaryOperator	!		2600570	0					
ANR	2601259	Identifier	next		2600570	1					
ANR	2601260	CompoundStatement		255:27:4265:4265	2600570	1					
ANR	2601261	BreakStatement	break ;	261:20:4424:4429	2600570	0	True				
ANR	2601262	ExpressionStatement	nl = ( void * ) nl + next	265:16:4467:4488	2600570	8	True				
ANR	2601263	AssignmentExpression	nl = ( void * ) nl + next		2600570	0		=			
ANR	2601264	Identifier	nl		2600570	0					
ANR	2601265	AdditiveExpression	( void * ) nl + next		2600570	1		+			
ANR	2601266	CastExpression	( void * ) nl		2600570	0					
ANR	2601267	CastTarget	void *		2600570	0					
ANR	2601268	Identifier	nl		2600570	1					
ANR	2601269	Identifier	next		2600570	1					
ANR	2601270	BreakStatement	break ;	269:12:4518:4523	2600570	6	True				
ANR	2601271	Label	case DM_DEV_WAIT :	273:8:4545:4561	2600570	13	True				
ANR	2601272	Identifier	DM_DEV_WAIT		2600570	0					
ANR	2601273	Label	case DM_TABLE_STATUS :	275:8:4572:4592	2600570	14	True				
ANR	2601274	Identifier	DM_TABLE_STATUS		2600570	0					
ANR	2601275	CompoundStatement		283:12:4738:4743	2600570	15					
ANR	2601276	IdentifierDeclStatement	struct dm_target_spec * spec = ( void * ) host_dm + host_dm -> data_start ;	279:12:4618:4684	2600570	0	True				
ANR	2601277	IdentifierDecl	* spec = ( void * ) host_dm + host_dm -> data_start		2600570	0					
ANR	2601278	IdentifierDeclType	struct dm_target_spec *		2600570	0					
ANR	2601279	Identifier	spec		2600570	1					
ANR	2601280	AssignmentExpression	* spec = ( void * ) host_dm + host_dm -> data_start		2600570	2		=			
ANR	2601281	Identifier	spec		2600570	0					
ANR	2601282	AdditiveExpression	( void * ) host_dm + host_dm -> data_start		2600570	1		+			
ANR	2601283	CastExpression	( void * ) host_dm		2600570	0					
ANR	2601284	CastTarget	void *		2600570	0					
ANR	2601285	Identifier	host_dm		2600570	1					
ANR	2601286	PtrMemberAccess	host_dm -> data_start		2600570	1					
ANR	2601287	Identifier	host_dm		2600570	0					
ANR	2601288	Identifier	data_start		2600570	1					
ANR	2601289	IdentifierDeclStatement	void * cur_data = argptr ;	281:12:4699:4722	2600570	1	True				
ANR	2601290	IdentifierDecl	* cur_data = argptr		2600570	0					
ANR	2601291	IdentifierDeclType	void *		2600570	0					
ANR	2601292	Identifier	cur_data		2600570	1					
ANR	2601293	AssignmentExpression	* cur_data = argptr		2600570	2		=			
ANR	2601294	Identifier	argptr		2600570	0					
ANR	2601295	Identifier	argptr		2600570	1					
ANR	2601296	IdentifierDeclStatement	const argtype arg_type [ ] = { MK_STRUCT ( STRUCT_dm_target_spec ) } ;	283:12:4737:4800	2600570	2	True				
ANR	2601297	IdentifierDecl	arg_type [ ] = { MK_STRUCT ( STRUCT_dm_target_spec ) }		2600570	0					
ANR	2601298	IdentifierDeclType	const argtype [ ]		2600570	0					
ANR	2601299	Identifier	arg_type		2600570	1					
ANR	2601300	AssignmentExpression	arg_type [ ] = { MK_STRUCT ( STRUCT_dm_target_spec ) }		2600570	2		=			
ANR	2601301	Identifier	arg_type		2600570	0					
ANR	2601302	InitializerList	MK_STRUCT ( STRUCT_dm_target_spec )		2600570	1					
ANR	2601303	CallExpression	MK_STRUCT ( STRUCT_dm_target_spec )		2600570	0					
ANR	2601304	Callee	MK_STRUCT		2600570	0					
ANR	2601305	Identifier	MK_STRUCT		2600570	0					
ANR	2601306	ArgumentList	STRUCT_dm_target_spec		2600570	1					
ANR	2601307	Argument	STRUCT_dm_target_spec		2600570	0					
ANR	2601308	Identifier	STRUCT_dm_target_spec		2600570	0					
ANR	2601309	IdentifierDeclStatement	"int spec_size = thunk_type_size ( arg_type , 0 ) ;"	285:12:4815:4859	2600570	3	True				
ANR	2601310	IdentifierDecl	"spec_size = thunk_type_size ( arg_type , 0 )"		2600570	0					
ANR	2601311	IdentifierDeclType	int		2600570	0					
ANR	2601312	Identifier	spec_size		2600570	1					
ANR	2601313	AssignmentExpression	"spec_size = thunk_type_size ( arg_type , 0 )"		2600570	2		=			
ANR	2601314	Identifier	spec_size		2600570	0					
ANR	2601315	CallExpression	"thunk_type_size ( arg_type , 0 )"		2600570	1					
ANR	2601316	Callee	thunk_type_size		2600570	0					
ANR	2601317	Identifier	thunk_type_size		2600570	0					
ANR	2601318	ArgumentList	arg_type		2600570	1					
ANR	2601319	Argument	arg_type		2600570	0					
ANR	2601320	Identifier	arg_type		2600570	0					
ANR	2601321	Argument	0		2600570	1					
ANR	2601322	PrimaryExpression	0		2600570	0					
ANR	2601323	IdentifierDeclStatement	int i ;	287:12:4874:4879	2600570	4	True				
ANR	2601324	IdentifierDecl	i		2600570	0					
ANR	2601325	IdentifierDeclType	int		2600570	0					
ANR	2601326	Identifier	i		2600570	1					
ANR	2601327	ForStatement	for ( i = 0 ; i < host_dm -> target_count ; i ++ )		2600570	5					
ANR	2601328	ForInit	i = 0 ;	291:17:4901:4906	2600570	0	True				
ANR	2601329	AssignmentExpression	i = 0		2600570	0		=			
ANR	2601330	Identifier	i		2600570	0					
ANR	2601331	PrimaryExpression	0		2600570	1					
ANR	2601332	Condition	i < host_dm -> target_count	291:24:4908:4932	2600570	1	True				
ANR	2601333	RelationalExpression	i < host_dm -> target_count		2600570	0		<			
ANR	2601334	Identifier	i		2600570	0					
ANR	2601335	PtrMemberAccess	host_dm -> target_count		2600570	1					
ANR	2601336	Identifier	host_dm		2600570	0					
ANR	2601337	Identifier	target_count		2600570	1					
ANR	2601338	PostIncDecOperationExpression	i ++	291:51:4935:4937	2600570	2	True				
ANR	2601339	Identifier	i		2600570	0					
ANR	2601340	IncDec	++		2600570	1					
ANR	2601341	CompoundStatement		291:16:4868:4906	2600570	3					
ANR	2601342	IdentifierDeclStatement	uint32_t next = spec -> next ;	293:16:4959:4985	2600570	0	True				
ANR	2601343	IdentifierDecl	next = spec -> next		2600570	0					
ANR	2601344	IdentifierDeclType	uint32_t		2600570	0					
ANR	2601345	Identifier	next		2600570	1					
ANR	2601346	AssignmentExpression	next = spec -> next		2600570	2		=			
ANR	2601347	Identifier	next		2600570	0					
ANR	2601348	PtrMemberAccess	spec -> next		2600570	1					
ANR	2601349	Identifier	spec		2600570	0					
ANR	2601350	Identifier	next		2600570	1					
ANR	2601351	IdentifierDeclStatement	int slen = strlen ( ( char * ) & spec [ 1 ] ) + 1 ;	295:16:5004:5042	2600570	1	True				
ANR	2601352	IdentifierDecl	slen = strlen ( ( char * ) & spec [ 1 ] ) + 1		2600570	0					
ANR	2601353	IdentifierDeclType	int		2600570	0					
ANR	2601354	Identifier	slen		2600570	1					
ANR	2601355	AssignmentExpression	slen = strlen ( ( char * ) & spec [ 1 ] ) + 1		2600570	2		=			
ANR	2601356	Identifier	slen		2600570	0					
ANR	2601357	AdditiveExpression	strlen ( ( char * ) & spec [ 1 ] ) + 1		2600570	1		+			
ANR	2601358	CallExpression	strlen ( ( char * ) & spec [ 1 ] )		2600570	0					
ANR	2601359	Callee	strlen		2600570	0					
ANR	2601360	Identifier	strlen		2600570	0					
ANR	2601361	ArgumentList	( char * ) & spec [ 1 ]		2600570	1					
ANR	2601362	Argument	( char * ) & spec [ 1 ]		2600570	0					
ANR	2601363	CastExpression	( char * ) & spec [ 1 ]		2600570	0					
ANR	2601364	CastTarget	char *		2600570	0					
ANR	2601365	UnaryOperationExpression	& spec [ 1 ]		2600570	1					
ANR	2601366	UnaryOperator	&		2600570	0					
ANR	2601367	ArrayIndexing	spec [ 1 ]		2600570	1					
ANR	2601368	Identifier	spec		2600570	0					
ANR	2601369	PrimaryExpression	1		2600570	1					
ANR	2601370	PrimaryExpression	1		2600570	1					
ANR	2601371	ExpressionStatement	spec -> next = ( cur_data - argptr ) + spec_size + slen	297:16:5061:5112	2600570	2	True				
ANR	2601372	AssignmentExpression	spec -> next = ( cur_data - argptr ) + spec_size + slen		2600570	0		=			
ANR	2601373	PtrMemberAccess	spec -> next		2600570	0					
ANR	2601374	Identifier	spec		2600570	0					
ANR	2601375	Identifier	next		2600570	1					
ANR	2601376	AdditiveExpression	( cur_data - argptr ) + spec_size + slen		2600570	1		+			
ANR	2601377	AdditiveExpression	cur_data - argptr		2600570	0		-			
ANR	2601378	Identifier	cur_data		2600570	0					
ANR	2601379	Identifier	argptr		2600570	1					
ANR	2601380	AdditiveExpression	spec_size + slen		2600570	1		+			
ANR	2601381	Identifier	spec_size		2600570	0					
ANR	2601382	Identifier	slen		2600570	1					
ANR	2601383	IfStatement	if ( guest_data_size < spec -> next )		2600570	3					
ANR	2601384	Condition	guest_data_size < spec -> next	299:20:5135:5162	2600570	0	True				
ANR	2601385	RelationalExpression	guest_data_size < spec -> next		2600570	0		<			
ANR	2601386	Identifier	guest_data_size		2600570	0					
ANR	2601387	PtrMemberAccess	spec -> next		2600570	1					
ANR	2601388	Identifier	spec		2600570	0					
ANR	2601389	Identifier	next		2600570	1					
ANR	2601390	CompoundStatement		295:50:5029:5029	2600570	1					
ANR	2601391	ExpressionStatement	host_dm -> flags |= DM_BUFFER_FULL_FLAG	301:20:5188:5225	2600570	0	True				
ANR	2601392	AssignmentExpression	host_dm -> flags |= DM_BUFFER_FULL_FLAG		2600570	0		|=			
ANR	2601393	PtrMemberAccess	host_dm -> flags		2600570	0					
ANR	2601394	Identifier	host_dm		2600570	0					
ANR	2601395	Identifier	flags		2600570	1					
ANR	2601396	Identifier	DM_BUFFER_FULL_FLAG		2600570	1					
ANR	2601397	BreakStatement	break ;	303:20:5248:5253	2600570	1	True				
ANR	2601398	ExpressionStatement	"thunk_convert ( cur_data , spec , arg_type , THUNK_TARGET )"	307:16:5291:5344	2600570	4	True				
ANR	2601399	CallExpression	"thunk_convert ( cur_data , spec , arg_type , THUNK_TARGET )"		2600570	0					
ANR	2601400	Callee	thunk_convert		2600570	0					
ANR	2601401	Identifier	thunk_convert		2600570	0					
ANR	2601402	ArgumentList	cur_data		2600570	1					
ANR	2601403	Argument	cur_data		2600570	0					
ANR	2601404	Identifier	cur_data		2600570	0					
ANR	2601405	Argument	spec		2600570	1					
ANR	2601406	Identifier	spec		2600570	0					
ANR	2601407	Argument	arg_type		2600570	2					
ANR	2601408	Identifier	arg_type		2600570	0					
ANR	2601409	Argument	THUNK_TARGET		2600570	3					
ANR	2601410	Identifier	THUNK_TARGET		2600570	0					
ANR	2601411	ExpressionStatement	"strcpy ( cur_data + spec_size , ( char * ) & spec [ 1 ] )"	309:16:5363:5408	2600570	5	True				
ANR	2601412	CallExpression	"strcpy ( cur_data + spec_size , ( char * ) & spec [ 1 ] )"		2600570	0					
ANR	2601413	Callee	strcpy		2600570	0					
ANR	2601414	Identifier	strcpy		2600570	0					
ANR	2601415	ArgumentList	cur_data + spec_size		2600570	1					
ANR	2601416	Argument	cur_data + spec_size		2600570	0					
ANR	2601417	AdditiveExpression	cur_data + spec_size		2600570	0		+			
ANR	2601418	Identifier	cur_data		2600570	0					
ANR	2601419	Identifier	spec_size		2600570	1					
ANR	2601420	Argument	( char * ) & spec [ 1 ]		2600570	1					
ANR	2601421	CastExpression	( char * ) & spec [ 1 ]		2600570	0					
ANR	2601422	CastTarget	char *		2600570	0					
ANR	2601423	UnaryOperationExpression	& spec [ 1 ]		2600570	1					
ANR	2601424	UnaryOperator	&		2600570	0					
ANR	2601425	ArrayIndexing	spec [ 1 ]		2600570	1					
ANR	2601426	Identifier	spec		2600570	0					
ANR	2601427	PrimaryExpression	1		2600570	1					
ANR	2601428	ExpressionStatement	cur_data = argptr + spec -> next	311:16:5427:5457	2600570	6	True				
ANR	2601429	AssignmentExpression	cur_data = argptr + spec -> next		2600570	0		=			
ANR	2601430	Identifier	cur_data		2600570	0					
ANR	2601431	AdditiveExpression	argptr + spec -> next		2600570	1		+			
ANR	2601432	Identifier	argptr		2600570	0					
ANR	2601433	PtrMemberAccess	spec -> next		2600570	1					
ANR	2601434	Identifier	spec		2600570	0					
ANR	2601435	Identifier	next		2600570	1					
ANR	2601436	ExpressionStatement	spec = ( void * ) host_dm + host_dm -> data_start + next	313:16:5476:5526	2600570	7	True				
ANR	2601437	AssignmentExpression	spec = ( void * ) host_dm + host_dm -> data_start + next		2600570	0		=			
ANR	2601438	Identifier	spec		2600570	0					
ANR	2601439	AdditiveExpression	( void * ) host_dm + host_dm -> data_start + next		2600570	1		+			
ANR	2601440	CastExpression	( void * ) host_dm		2600570	0					
ANR	2601441	CastTarget	void *		2600570	0					
ANR	2601442	Identifier	host_dm		2600570	1					
ANR	2601443	AdditiveExpression	host_dm -> data_start + next		2600570	1		+			
ANR	2601444	PtrMemberAccess	host_dm -> data_start		2600570	0					
ANR	2601445	Identifier	host_dm		2600570	0					
ANR	2601446	Identifier	data_start		2600570	1					
ANR	2601447	Identifier	next		2600570	1					
ANR	2601448	BreakStatement	break ;	317:12:5556:5561	2600570	6	True				
ANR	2601449	Label	case DM_TABLE_DEPS :	321:8:5583:5601	2600570	16	True				
ANR	2601450	Identifier	DM_TABLE_DEPS		2600570	0					
ANR	2601451	CompoundStatement		329:12:5683:5688	2600570	17					
ANR	2601452	IdentifierDeclStatement	void * hdata = ( void * ) host_dm + host_dm -> data_start ;	325:12:5627:5677	2600570	0	True				
ANR	2601453	IdentifierDecl	* hdata = ( void * ) host_dm + host_dm -> data_start		2600570	0					
ANR	2601454	IdentifierDeclType	void *		2600570	0					
ANR	2601455	Identifier	hdata		2600570	1					
ANR	2601456	AssignmentExpression	* hdata = ( void * ) host_dm + host_dm -> data_start		2600570	2		=			
ANR	2601457	Identifier	hdata		2600570	0					
ANR	2601458	AdditiveExpression	( void * ) host_dm + host_dm -> data_start		2600570	1		+			
ANR	2601459	CastExpression	( void * ) host_dm		2600570	0					
ANR	2601460	CastTarget	void *		2600570	0					
ANR	2601461	Identifier	host_dm		2600570	1					
ANR	2601462	PtrMemberAccess	host_dm -> data_start		2600570	1					
ANR	2601463	Identifier	host_dm		2600570	0					
ANR	2601464	Identifier	data_start		2600570	1					
ANR	2601465	IdentifierDeclStatement	int count = * ( uint32_t * ) hdata ;	327:12:5692:5721	2600570	1	True				
ANR	2601466	IdentifierDecl	count = * ( uint32_t * ) hdata		2600570	0					
ANR	2601467	IdentifierDeclType	int		2600570	0					
ANR	2601468	Identifier	count		2600570	1					
ANR	2601469	AssignmentExpression	count = * ( uint32_t * ) hdata		2600570	2		=			
ANR	2601470	Identifier	count		2600570	0					
ANR	2601471	UnaryOperationExpression	* ( uint32_t * ) hdata		2600570	1					
ANR	2601472	UnaryOperator	*		2600570	0					
ANR	2601473	CastExpression	( uint32_t * ) hdata		2600570	1					
ANR	2601474	CastTarget	uint32_t *		2600570	0					
ANR	2601475	Identifier	hdata		2600570	1					
ANR	2601476	IdentifierDeclStatement	uint64_t * hdev = hdata + 8 ;	329:12:5736:5762	2600570	2	True				
ANR	2601477	IdentifierDecl	* hdev = hdata + 8		2600570	0					
ANR	2601478	IdentifierDeclType	uint64_t *		2600570	0					
ANR	2601479	Identifier	hdev		2600570	1					
ANR	2601480	AssignmentExpression	* hdev = hdata + 8		2600570	2		=			
ANR	2601481	Identifier	hdev		2600570	0					
ANR	2601482	AdditiveExpression	hdata + 8		2600570	1		+			
ANR	2601483	Identifier	hdata		2600570	0					
ANR	2601484	PrimaryExpression	8		2600570	1					
ANR	2601485	IdentifierDeclStatement	uint64_t * gdev = argptr + 8 ;	331:12:5777:5804	2600570	3	True				
ANR	2601486	IdentifierDecl	* gdev = argptr + 8		2600570	0					
ANR	2601487	IdentifierDeclType	uint64_t *		2600570	0					
ANR	2601488	Identifier	gdev		2600570	1					
ANR	2601489	AssignmentExpression	* gdev = argptr + 8		2600570	2		=			
ANR	2601490	Identifier	gdev		2600570	0					
ANR	2601491	AdditiveExpression	argptr + 8		2600570	1		+			
ANR	2601492	Identifier	argptr		2600570	0					
ANR	2601493	PrimaryExpression	8		2600570	1					
ANR	2601494	IdentifierDeclStatement	int i ;	333:12:5819:5824	2600570	4	True				
ANR	2601495	IdentifierDecl	i		2600570	0					
ANR	2601496	IdentifierDeclType	int		2600570	0					
ANR	2601497	Identifier	i		2600570	1					
ANR	2601498	ExpressionStatement	* ( uint32_t * ) argptr = tswap32 ( count )	337:12:5841:5876	2600570	5	True				
ANR	2601499	AssignmentExpression	* ( uint32_t * ) argptr = tswap32 ( count )		2600570	0		=			
ANR	2601500	UnaryOperationExpression	* ( uint32_t * ) argptr		2600570	0					
ANR	2601501	UnaryOperator	*		2600570	0					
ANR	2601502	CastExpression	( uint32_t * ) argptr		2600570	1					
ANR	2601503	CastTarget	uint32_t *		2600570	0					
ANR	2601504	Identifier	argptr		2600570	1					
ANR	2601505	CallExpression	tswap32 ( count )		2600570	1					
ANR	2601506	Callee	tswap32		2600570	0					
ANR	2601507	Identifier	tswap32		2600570	0					
ANR	2601508	ArgumentList	count		2600570	1					
ANR	2601509	Argument	count		2600570	0					
ANR	2601510	Identifier	count		2600570	0					
ANR	2601511	ForStatement	for ( i = 0 ; i < count ; i ++ )		2600570	6					
ANR	2601512	ForInit	i = 0 ;	339:17:5896:5901	2600570	0	True				
ANR	2601513	AssignmentExpression	i = 0		2600570	0		=			
ANR	2601514	Identifier	i		2600570	0					
ANR	2601515	PrimaryExpression	0		2600570	1					
ANR	2601516	Condition	i < count	339:24:5903:5911	2600570	1	True				
ANR	2601517	RelationalExpression	i < count		2600570	0		<			
ANR	2601518	Identifier	i		2600570	0					
ANR	2601519	Identifier	count		2600570	1					
ANR	2601520	PostIncDecOperationExpression	i ++	339:35:5914:5916	2600570	2	True				
ANR	2601521	Identifier	i		2600570	0					
ANR	2601522	IncDec	++		2600570	1					
ANR	2601523	CompoundStatement		335:40:5783:5783	2600570	3					
ANR	2601524	ExpressionStatement	* gdev = tswap64 ( * hdev )	341:16:5938:5960	2600570	0	True				
ANR	2601525	AssignmentExpression	* gdev = tswap64 ( * hdev )		2600570	0		=			
ANR	2601526	UnaryOperationExpression	* gdev		2600570	0					
ANR	2601527	UnaryOperator	*		2600570	0					
ANR	2601528	Identifier	gdev		2600570	1					
ANR	2601529	CallExpression	tswap64 ( * hdev )		2600570	1					
ANR	2601530	Callee	tswap64		2600570	0					
ANR	2601531	Identifier	tswap64		2600570	0					
ANR	2601532	ArgumentList	* hdev		2600570	1					
ANR	2601533	Argument	* hdev		2600570	0					
ANR	2601534	UnaryOperationExpression	* hdev		2600570	0					
ANR	2601535	UnaryOperator	*		2600570	0					
ANR	2601536	Identifier	hdev		2600570	1					
ANR	2601537	ExpressionStatement	gdev ++	343:16:5979:5985	2600570	1	True				
ANR	2601538	PostIncDecOperationExpression	gdev ++		2600570	0					
ANR	2601539	Identifier	gdev		2600570	0					
ANR	2601540	IncDec	++		2600570	1					
ANR	2601541	ExpressionStatement	hdev ++	345:16:6004:6010	2600570	2	True				
ANR	2601542	PostIncDecOperationExpression	hdev ++		2600570	0					
ANR	2601543	Identifier	hdev		2600570	0					
ANR	2601544	IncDec	++		2600570	1					
ANR	2601545	BreakStatement	break ;	349:12:6040:6045	2600570	7	True				
ANR	2601546	Label	case DM_LIST_VERSIONS :	353:8:6067:6088	2600570	18	True				
ANR	2601547	Identifier	DM_LIST_VERSIONS		2600570	0					
ANR	2601548	CompoundStatement		361:12:6239:6283	2600570	19					
ANR	2601549	IdentifierDeclStatement	struct dm_target_versions * vers = ( void * ) host_dm + host_dm -> data_start ;	357:12:6114:6184	2600570	0	True				
ANR	2601550	IdentifierDecl	* vers = ( void * ) host_dm + host_dm -> data_start		2600570	0					
ANR	2601551	IdentifierDeclType	struct dm_target_versions *		2600570	0					
ANR	2601552	Identifier	vers		2600570	1					
ANR	2601553	AssignmentExpression	* vers = ( void * ) host_dm + host_dm -> data_start		2600570	2		=			
ANR	2601554	Identifier	vers		2600570	0					
ANR	2601555	AdditiveExpression	( void * ) host_dm + host_dm -> data_start		2600570	1		+			
ANR	2601556	CastExpression	( void * ) host_dm		2600570	0					
ANR	2601557	CastTarget	void *		2600570	0					
ANR	2601558	Identifier	host_dm		2600570	1					
ANR	2601559	PtrMemberAccess	host_dm -> data_start		2600570	1					
ANR	2601560	Identifier	host_dm		2600570	0					
ANR	2601561	Identifier	data_start		2600570	1					
ANR	2601562	IdentifierDeclStatement	uint32_t remaining_data = guest_data_size ;	359:12:6199:6240	2600570	1	True				
ANR	2601563	IdentifierDecl	remaining_data = guest_data_size		2600570	0					
ANR	2601564	IdentifierDeclType	uint32_t		2600570	0					
ANR	2601565	Identifier	remaining_data		2600570	1					
ANR	2601566	AssignmentExpression	remaining_data = guest_data_size		2600570	2		=			
ANR	2601567	Identifier	guest_data_size		2600570	0					
ANR	2601568	Identifier	guest_data_size		2600570	1					
ANR	2601569	IdentifierDeclStatement	void * cur_data = argptr ;	361:12:6255:6278	2600570	2	True				
ANR	2601570	IdentifierDecl	* cur_data = argptr		2600570	0					
ANR	2601571	IdentifierDeclType	void *		2600570	0					
ANR	2601572	Identifier	cur_data		2600570	1					
ANR	2601573	AssignmentExpression	* cur_data = argptr		2600570	2		=			
ANR	2601574	Identifier	argptr		2600570	0					
ANR	2601575	Identifier	argptr		2600570	1					
ANR	2601576	IdentifierDeclStatement	const argtype arg_type [ ] = { MK_STRUCT ( STRUCT_dm_target_versions ) } ;	363:12:6293:6360	2600570	3	True				
ANR	2601577	IdentifierDecl	arg_type [ ] = { MK_STRUCT ( STRUCT_dm_target_versions ) }		2600570	0					
ANR	2601578	IdentifierDeclType	const argtype [ ]		2600570	0					
ANR	2601579	Identifier	arg_type		2600570	1					
ANR	2601580	AssignmentExpression	arg_type [ ] = { MK_STRUCT ( STRUCT_dm_target_versions ) }		2600570	2		=			
ANR	2601581	Identifier	arg_type		2600570	0					
ANR	2601582	InitializerList	MK_STRUCT ( STRUCT_dm_target_versions )		2600570	1					
ANR	2601583	CallExpression	MK_STRUCT ( STRUCT_dm_target_versions )		2600570	0					
ANR	2601584	Callee	MK_STRUCT		2600570	0					
ANR	2601585	Identifier	MK_STRUCT		2600570	0					
ANR	2601586	ArgumentList	STRUCT_dm_target_versions		2600570	1					
ANR	2601587	Argument	STRUCT_dm_target_versions		2600570	0					
ANR	2601588	Identifier	STRUCT_dm_target_versions		2600570	0					
ANR	2601589	IdentifierDeclStatement	"int vers_size = thunk_type_size ( arg_type , 0 ) ;"	365:12:6375:6419	2600570	4	True				
ANR	2601590	IdentifierDecl	"vers_size = thunk_type_size ( arg_type , 0 )"		2600570	0					
ANR	2601591	IdentifierDeclType	int		2600570	0					
ANR	2601592	Identifier	vers_size		2600570	1					
ANR	2601593	AssignmentExpression	"vers_size = thunk_type_size ( arg_type , 0 )"		2600570	2		=			
ANR	2601594	Identifier	vers_size		2600570	0					
ANR	2601595	CallExpression	"thunk_type_size ( arg_type , 0 )"		2600570	1					
ANR	2601596	Callee	thunk_type_size		2600570	0					
ANR	2601597	Identifier	thunk_type_size		2600570	0					
ANR	2601598	ArgumentList	arg_type		2600570	1					
ANR	2601599	Argument	arg_type		2600570	0					
ANR	2601600	Identifier	arg_type		2600570	0					
ANR	2601601	Argument	0		2600570	1					
ANR	2601602	PrimaryExpression	0		2600570	0					
ANR	2601603	WhileStatement	while ( 1 )		2600570	5					
ANR	2601604	Condition	1	369:19:6443:6443	2600570	0	True				
ANR	2601605	PrimaryExpression	1		2600570	0					
ANR	2601606	CompoundStatement		367:16:6329:6355	2600570	1					
ANR	2601607	IdentifierDeclStatement	uint32_t next = vers -> next ;	371:16:6465:6491	2600570	0	True				
ANR	2601608	IdentifierDecl	next = vers -> next		2600570	0					
ANR	2601609	IdentifierDeclType	uint32_t		2600570	0					
ANR	2601610	Identifier	next		2600570	1					
ANR	2601611	AssignmentExpression	next = vers -> next		2600570	2		=			
ANR	2601612	Identifier	next		2600570	0					
ANR	2601613	PtrMemberAccess	vers -> next		2600570	1					
ANR	2601614	Identifier	vers		2600570	0					
ANR	2601615	Identifier	next		2600570	1					
ANR	2601616	IfStatement	if ( next )		2600570	1					
ANR	2601617	Condition	next	373:20:6514:6517	2600570	0	True				
ANR	2601618	Identifier	next		2600570	0					
ANR	2601619	CompoundStatement		369:26:6384:6384	2600570	1					
ANR	2601620	ExpressionStatement	vers -> next = vers_size + ( strlen ( vers -> name ) + 1 )	375:20:6543:6592	2600570	0	True				
ANR	2601621	AssignmentExpression	vers -> next = vers_size + ( strlen ( vers -> name ) + 1 )		2600570	0		=			
ANR	2601622	PtrMemberAccess	vers -> next		2600570	0					
ANR	2601623	Identifier	vers		2600570	0					
ANR	2601624	Identifier	next		2600570	1					
ANR	2601625	AdditiveExpression	vers_size + ( strlen ( vers -> name ) + 1 )		2600570	1		+			
ANR	2601626	Identifier	vers_size		2600570	0					
ANR	2601627	AdditiveExpression	strlen ( vers -> name ) + 1		2600570	1		+			
ANR	2601628	CallExpression	strlen ( vers -> name )		2600570	0					
ANR	2601629	Callee	strlen		2600570	0					
ANR	2601630	Identifier	strlen		2600570	0					
ANR	2601631	ArgumentList	vers -> name		2600570	1					
ANR	2601632	Argument	vers -> name		2600570	0					
ANR	2601633	PtrMemberAccess	vers -> name		2600570	0					
ANR	2601634	Identifier	vers		2600570	0					
ANR	2601635	Identifier	name		2600570	1					
ANR	2601636	PrimaryExpression	1		2600570	1					
ANR	2601637	IfStatement	if ( remaining_data < vers -> next )		2600570	2					
ANR	2601638	Condition	remaining_data < vers -> next	379:20:6634:6660	2600570	0	True				
ANR	2601639	RelationalExpression	remaining_data < vers -> next		2600570	0		<			
ANR	2601640	Identifier	remaining_data		2600570	0					
ANR	2601641	PtrMemberAccess	vers -> next		2600570	1					
ANR	2601642	Identifier	vers		2600570	0					
ANR	2601643	Identifier	next		2600570	1					
ANR	2601644	CompoundStatement		375:49:6527:6527	2600570	1					
ANR	2601645	ExpressionStatement	host_dm -> flags |= DM_BUFFER_FULL_FLAG	381:20:6686:6723	2600570	0	True				
ANR	2601646	AssignmentExpression	host_dm -> flags |= DM_BUFFER_FULL_FLAG		2600570	0		|=			
ANR	2601647	PtrMemberAccess	host_dm -> flags		2600570	0					
ANR	2601648	Identifier	host_dm		2600570	0					
ANR	2601649	Identifier	flags		2600570	1					
ANR	2601650	Identifier	DM_BUFFER_FULL_FLAG		2600570	1					
ANR	2601651	BreakStatement	break ;	383:20:6746:6751	2600570	1	True				
ANR	2601652	ExpressionStatement	"thunk_convert ( cur_data , vers , arg_type , THUNK_TARGET )"	387:16:6789:6842	2600570	3	True				
ANR	2601653	CallExpression	"thunk_convert ( cur_data , vers , arg_type , THUNK_TARGET )"		2600570	0					
ANR	2601654	Callee	thunk_convert		2600570	0					
ANR	2601655	Identifier	thunk_convert		2600570	0					
ANR	2601656	ArgumentList	cur_data		2600570	1					
ANR	2601657	Argument	cur_data		2600570	0					
ANR	2601658	Identifier	cur_data		2600570	0					
ANR	2601659	Argument	vers		2600570	1					
ANR	2601660	Identifier	vers		2600570	0					
ANR	2601661	Argument	arg_type		2600570	2					
ANR	2601662	Identifier	arg_type		2600570	0					
ANR	2601663	Argument	THUNK_TARGET		2600570	3					
ANR	2601664	Identifier	THUNK_TARGET		2600570	0					
ANR	2601665	ExpressionStatement	"strcpy ( cur_data + vers_size , vers -> name )"	389:16:6861:6901	2600570	4	True				
ANR	2601666	CallExpression	"strcpy ( cur_data + vers_size , vers -> name )"		2600570	0					
ANR	2601667	Callee	strcpy		2600570	0					
ANR	2601668	Identifier	strcpy		2600570	0					
ANR	2601669	ArgumentList	cur_data + vers_size		2600570	1					
ANR	2601670	Argument	cur_data + vers_size		2600570	0					
ANR	2601671	AdditiveExpression	cur_data + vers_size		2600570	0		+			
ANR	2601672	Identifier	cur_data		2600570	0					
ANR	2601673	Identifier	vers_size		2600570	1					
ANR	2601674	Argument	vers -> name		2600570	1					
ANR	2601675	PtrMemberAccess	vers -> name		2600570	0					
ANR	2601676	Identifier	vers		2600570	0					
ANR	2601677	Identifier	name		2600570	1					
ANR	2601678	ExpressionStatement	cur_data += vers -> next	391:16:6920:6942	2600570	5	True				
ANR	2601679	AssignmentExpression	cur_data += vers -> next		2600570	0		+=			
ANR	2601680	Identifier	cur_data		2600570	0					
ANR	2601681	PtrMemberAccess	vers -> next		2600570	1					
ANR	2601682	Identifier	vers		2600570	0					
ANR	2601683	Identifier	next		2600570	1					
ANR	2601684	ExpressionStatement	remaining_data -= vers -> next	393:16:6961:6989	2600570	6	True				
ANR	2601685	AssignmentExpression	remaining_data -= vers -> next		2600570	0		-=			
ANR	2601686	Identifier	remaining_data		2600570	0					
ANR	2601687	PtrMemberAccess	vers -> next		2600570	1					
ANR	2601688	Identifier	vers		2600570	0					
ANR	2601689	Identifier	next		2600570	1					
ANR	2601690	IfStatement	if ( ! next )		2600570	7					
ANR	2601691	Condition	! next	395:20:7012:7016	2600570	0	True				
ANR	2601692	UnaryOperationExpression	! next		2600570	0					
ANR	2601693	UnaryOperator	!		2600570	0					
ANR	2601694	Identifier	next		2600570	1					
ANR	2601695	CompoundStatement		391:27:6883:6883	2600570	1					
ANR	2601696	BreakStatement	break ;	397:20:7042:7047	2600570	0	True				
ANR	2601697	ExpressionStatement	vers = ( void * ) vers + next	401:16:7085:7110	2600570	8	True				
ANR	2601698	AssignmentExpression	vers = ( void * ) vers + next		2600570	0		=			
ANR	2601699	Identifier	vers		2600570	0					
ANR	2601700	AdditiveExpression	( void * ) vers + next		2600570	1		+			
ANR	2601701	CastExpression	( void * ) vers		2600570	0					
ANR	2601702	CastTarget	void *		2600570	0					
ANR	2601703	Identifier	vers		2600570	1					
ANR	2601704	Identifier	next		2600570	1					
ANR	2601705	BreakStatement	break ;	405:12:7140:7145	2600570	6	True				
ANR	2601706	Label	default :	409:8:7167:7174	2600570	20	True				
ANR	2601707	Identifier	default		2600570	0					
ANR	2601708	ExpressionStatement	ret = - TARGET_EINVAL	411:12:7189:7209	2600570	21	True				
ANR	2601709	AssignmentExpression	ret = - TARGET_EINVAL		2600570	0		=			
ANR	2601710	Identifier	ret		2600570	0					
ANR	2601711	UnaryOperationExpression	- TARGET_EINVAL		2600570	1					
ANR	2601712	UnaryOperator	-		2600570	0					
ANR	2601713	Identifier	TARGET_EINVAL		2600570	1					
ANR	2601714	GotoStatement	goto out ;	413:12:7224:7232	2600570	22	True				
ANR	2601715	Identifier	out		2600570	0					
ANR	2601716	ExpressionStatement	"unlock_user ( argptr , guest_data , guest_data_size )"	417:8:7254:7302	2600570	4	True				
ANR	2601717	CallExpression	"unlock_user ( argptr , guest_data , guest_data_size )"		2600570	0					
ANR	2601718	Callee	unlock_user		2600570	0					
ANR	2601719	Identifier	unlock_user		2600570	0					
ANR	2601720	ArgumentList	argptr		2600570	1					
ANR	2601721	Argument	argptr		2600570	0					
ANR	2601722	Identifier	argptr		2600570	0					
ANR	2601723	Argument	guest_data		2600570	1					
ANR	2601724	Identifier	guest_data		2600570	0					
ANR	2601725	Argument	guest_data_size		2600570	2					
ANR	2601726	Identifier	guest_data_size		2600570	0					
ANR	2601727	ExpressionStatement	"argptr = lock_user ( VERIFY_WRITE , arg , target_size , 0 )"	421:8:7315:7368	2600570	5	True				
ANR	2601728	AssignmentExpression	"argptr = lock_user ( VERIFY_WRITE , arg , target_size , 0 )"		2600570	0		=			
ANR	2601729	Identifier	argptr		2600570	0					
ANR	2601730	CallExpression	"lock_user ( VERIFY_WRITE , arg , target_size , 0 )"		2600570	1					
ANR	2601731	Callee	lock_user		2600570	0					
ANR	2601732	Identifier	lock_user		2600570	0					
ANR	2601733	ArgumentList	VERIFY_WRITE		2600570	1					
ANR	2601734	Argument	VERIFY_WRITE		2600570	0					
ANR	2601735	Identifier	VERIFY_WRITE		2600570	0					
ANR	2601736	Argument	arg		2600570	1					
ANR	2601737	Identifier	arg		2600570	0					
ANR	2601738	Argument	target_size		2600570	2					
ANR	2601739	Identifier	target_size		2600570	0					
ANR	2601740	Argument	0		2600570	3					
ANR	2601741	PrimaryExpression	0		2600570	0					
ANR	2601742	IfStatement	if ( ! argptr )		2600570	6					
ANR	2601743	Condition	! argptr	423:12:7383:7389	2600570	0	True				
ANR	2601744	UnaryOperationExpression	! argptr		2600570	0					
ANR	2601745	UnaryOperator	!		2600570	0					
ANR	2601746	Identifier	argptr		2600570	1					
ANR	2601747	CompoundStatement		419:21:7256:7256	2600570	1					
ANR	2601748	ExpressionStatement	ret = - TARGET_EFAULT	425:12:7407:7427	2600570	0	True				
ANR	2601749	AssignmentExpression	ret = - TARGET_EFAULT		2600570	0		=			
ANR	2601750	Identifier	ret		2600570	0					
ANR	2601751	UnaryOperationExpression	- TARGET_EFAULT		2600570	1					
ANR	2601752	UnaryOperator	-		2600570	0					
ANR	2601753	Identifier	TARGET_EFAULT		2600570	1					
ANR	2601754	GotoStatement	goto out ;	427:12:7442:7450	2600570	1	True				
ANR	2601755	Identifier	out		2600570	0					
ANR	2601756	ExpressionStatement	"thunk_convert ( argptr , buf_temp , arg_type , THUNK_TARGET )"	431:8:7472:7527	2600570	7	True				
ANR	2601757	CallExpression	"thunk_convert ( argptr , buf_temp , arg_type , THUNK_TARGET )"		2600570	0					
ANR	2601758	Callee	thunk_convert		2600570	0					
ANR	2601759	Identifier	thunk_convert		2600570	0					
ANR	2601760	ArgumentList	argptr		2600570	1					
ANR	2601761	Argument	argptr		2600570	0					
ANR	2601762	Identifier	argptr		2600570	0					
ANR	2601763	Argument	buf_temp		2600570	1					
ANR	2601764	Identifier	buf_temp		2600570	0					
ANR	2601765	Argument	arg_type		2600570	2					
ANR	2601766	Identifier	arg_type		2600570	0					
ANR	2601767	Argument	THUNK_TARGET		2600570	3					
ANR	2601768	Identifier	THUNK_TARGET		2600570	0					
ANR	2601769	ExpressionStatement	"unlock_user ( argptr , arg , target_size )"	433:8:7538:7575	2600570	8	True				
ANR	2601770	CallExpression	"unlock_user ( argptr , arg , target_size )"		2600570	0					
ANR	2601771	Callee	unlock_user		2600570	0					
ANR	2601772	Identifier	unlock_user		2600570	0					
ANR	2601773	ArgumentList	argptr		2600570	1					
ANR	2601774	Argument	argptr		2600570	0					
ANR	2601775	Identifier	argptr		2600570	0					
ANR	2601776	Argument	arg		2600570	1					
ANR	2601777	Identifier	arg		2600570	0					
ANR	2601778	Argument	target_size		2600570	2					
ANR	2601779	Identifier	target_size		2600570	0					
ANR	2601780	Label	out :	437:0:7585:7588	2600570	28	True				
ANR	2601781	Identifier	out		2600570	0					
ANR	2601782	IfStatement	if ( big_buf )		2600570	29					
ANR	2601783	Condition	big_buf	439:8:7599:7605	2600570	0	True				
ANR	2601784	Identifier	big_buf		2600570	0					
ANR	2601785	CompoundStatement		435:17:7472:7472	2600570	1					
ANR	2601786	ExpressionStatement	free ( big_buf )	441:8:7619:7632	2600570	0	True				
ANR	2601787	CallExpression	free ( big_buf )		2600570	0					
ANR	2601788	Callee	free		2600570	0					
ANR	2601789	Identifier	free		2600570	0					
ANR	2601790	ArgumentList	big_buf		2600570	1					
ANR	2601791	Argument	big_buf		2600570	0					
ANR	2601792	Identifier	big_buf		2600570	0					
ANR	2601793	ReturnStatement	return ret ;	445:4:7646:7656	2600570	30	True				
ANR	2601794	Identifier	ret		2600570	0					
ANR	2601795	ReturnType	static abi_long		2600570	1					
ANR	2601796	Identifier	do_ioctl_dm		2600570	2					
ANR	2601797	ParameterList	"const IOCTLEntry * ie , uint8_t * buf_temp , int fd , abi_long cmd , abi_long arg"		2600570	3					
ANR	2601798	Parameter	const IOCTLEntry * ie	1:28:28:47	2600570	0	True				
ANR	2601799	ParameterType	const IOCTLEntry *		2600570	0					
ANR	2601800	Identifier	ie		2600570	1					
ANR	2601801	Parameter	uint8_t * buf_temp	1:50:50:66	2600570	1	True				
ANR	2601802	ParameterType	uint8_t *		2600570	0					
ANR	2601803	Identifier	buf_temp		2600570	1					
ANR	2601804	Parameter	int fd	1:69:69:74	2600570	2	True				
ANR	2601805	ParameterType	int		2600570	0					
ANR	2601806	Identifier	fd		2600570	1					
ANR	2601807	Parameter	abi_long cmd	3:28:106:117	2600570	3	True				
ANR	2601808	ParameterType	abi_long		2600570	0					
ANR	2601809	Identifier	cmd		2600570	1					
ANR	2601810	Parameter	abi_long arg	3:42:120:131	2600570	4	True				
ANR	2601811	ParameterType	abi_long		2600570	0					
ANR	2601812	Identifier	arg		2600570	1					
ANR	2601813	CFGEntryNode	ENTRY		2600570		True				
ANR	2601814	CFGExitNode	EXIT		2600570		True				
ANR	2601815	Symbol	* host_data		2600570						
ANR	2601816	Symbol	vers		2600570						
ANR	2601817	Symbol	* ( uint64_t * ) host_data		2600570						
ANR	2601818	Symbol	DM_BUFFER_FULL_FLAG		2600570						
ANR	2601819	Symbol	host_dm -> data_size		2600570						
ANR	2601820	Symbol	spec		2600570						
ANR	2601821	Symbol	arg_type		2600570						
ANR	2601822	Symbol	STRUCT_dm_target_spec		2600570						
ANR	2601823	Symbol	strlen		2600570						
ANR	2601824	Symbol	guest_data_size		2600570						
ANR	2601825	Symbol	big_buf		2600570						
ANR	2601826	Symbol	STRUCT_dm_name_list		2600570						
ANR	2601827	Symbol	* ( uint32_t * ) argptr		2600570						
ANR	2601828	Symbol	is_error		2600570						
ANR	2601829	Symbol	* gdev		2600570						
ANR	2601830	Symbol	ie		2600570						
ANR	2601831	Symbol	hdev		2600570						
ANR	2601832	Symbol	ret		2600570						
ANR	2601833	Symbol	NULL		2600570						
ANR	2601834	Symbol	argptr		2600570						
ANR	2601835	Symbol	vers_size		2600570						
ANR	2601836	Symbol	count		2600570						
ANR	2601837	Symbol	( ( struct dm_ioctl * ) buf_temp ) -> data_size		2600570						
ANR	2601838	Symbol	ie -> host_cmd		2600570						
ANR	2601839	Symbol	get_errno		2600570						
ANR	2601840	Symbol	spec -> next		2600570						
ANR	2601841	Symbol	g_malloc0		2600570						
ANR	2601842	Symbol	* ( uint32_t * ) hdata		2600570						
ANR	2601843	Symbol	cmd		2600570						
ANR	2601844	Symbol	* argptr		2600570						
ANR	2601845	Symbol	host_dm -> target_count		2600570						
ANR	2601846	Symbol	fd		2600570						
ANR	2601847	Symbol	nl		2600570						
ANR	2601848	Symbol	next		2600570						
ANR	2601849	Symbol	THUNK_TARGET		2600570						
ANR	2601850	Symbol	* ie		2600570						
ANR	2601851	Symbol	guest_data		2600570						
ANR	2601852	Symbol	gspec		2600570						
ANR	2601853	Symbol	* vers		2600570						
ANR	2601854	Symbol	host_dm -> flags		2600570						
ANR	2601855	Symbol	vers -> name		2600570						
ANR	2601856	Symbol	buf_temp		2600570						
ANR	2601857	Symbol	nl_size		2600570						
ANR	2601858	Symbol	lock_user		2600570						
ANR	2601859	Symbol	ioctl		2600570						
ANR	2601860	Symbol	tswap64		2600570						
ANR	2601861	Symbol	target_size		2600570						
ANR	2601862	Symbol	* buf_temp		2600570						
ANR	2601863	Symbol	* ( uint64_t * ) argptr		2600570						
ANR	2601864	Symbol	* spec		2600570						
ANR	2601865	Symbol	* hdata		2600570						
ANR	2601866	Symbol	host_data		2600570						
ANR	2601867	Symbol	* host_dm		2600570						
ANR	2601868	Symbol	arg		2600570						
ANR	2601869	Symbol	STRUCT_dm_target_versions		2600570						
ANR	2601870	Symbol	TARGET_EINVAL		2600570						
ANR	2601871	Symbol	* nl		2600570						
ANR	2601872	Symbol	VERIFY_READ		2600570						
ANR	2601873	Symbol	i		2600570						
ANR	2601874	Symbol	thunk_type_size		2600570						
ANR	2601875	Symbol	tswap32		2600570						
ANR	2601876	Symbol	remaining_data		2600570						
ANR	2601877	Symbol	nl -> next		2600570						
ANR	2601878	Symbol	host_dm -> data_start		2600570						
ANR	2601879	Symbol	EINVAL		2600570						
ANR	2601880	Symbol	MK_STRUCT		2600570						
ANR	2601881	Symbol	spec_size		2600570						
ANR	2601882	Symbol	THUNK_HOST		2600570						
ANR	2601883	Symbol	cur_data		2600570						
ANR	2601884	Symbol	nl -> name		2600570						
ANR	2601885	Symbol	slen		2600570						
ANR	2601886	Symbol	hdata		2600570						
ANR	2601887	Symbol	ie -> arg_type		2600570						
ANR	2601888	Symbol	host_dm		2600570						
ANR	2601889	Symbol	VERIFY_WRITE		2600570						
ANR	2601890	Symbol	* hdev		2600570						
ANR	2601891	Symbol	vers -> next		2600570						
ANR	2601892	Symbol	TARGET_EFAULT		2600570						
ANR	2601893	Symbol	gdev		2600570						
