command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8566499	File	/home/p4ultr4n/workplace/ReVeal/raw_code/truemotion1_decode_header_0.c								
ANR	8566500	Function	truemotion1_decode_header	1:0:0:6026							
ANR	8566501	FunctionDef	truemotion1_decode_header (TrueMotion1Context * s)		8566500	0					
ANR	8566502	CompoundStatement		3:0:61:6026	8566500	0					
ANR	8566503	IdentifierDeclStatement	int i ;	5:4:68:73	8566500	0	True				
ANR	8566504	IdentifierDecl	i		8566500	0					
ANR	8566505	IdentifierDeclType	int		8566500	0					
ANR	8566506	Identifier	i		8566500	1					
ANR	8566507	IdentifierDeclStatement	int width_shift = 0 ;	7:4:80:99	8566500	1	True				
ANR	8566508	IdentifierDecl	width_shift = 0		8566500	0					
ANR	8566509	IdentifierDeclType	int		8566500	0					
ANR	8566510	Identifier	width_shift		8566500	1					
ANR	8566511	AssignmentExpression	width_shift = 0		8566500	2		=			
ANR	8566512	Identifier	width_shift		8566500	0					
ANR	8566513	PrimaryExpression	0		8566500	1					
ANR	8566514	IdentifierDeclStatement	int new_pix_fmt ;	9:4:106:121	8566500	2	True				
ANR	8566515	IdentifierDecl	new_pix_fmt		8566500	0					
ANR	8566516	IdentifierDeclType	int		8566500	0					
ANR	8566517	Identifier	new_pix_fmt		8566500	1					
ANR	8566518	IdentifierDeclStatement	struct frame_header header ;	11:4:128:154	8566500	3	True				
ANR	8566519	IdentifierDecl	header		8566500	0					
ANR	8566520	IdentifierDeclType	struct frame_header		8566500	0					
ANR	8566521	Identifier	header		8566500	1					
ANR	8566522	IdentifierDeclStatement	uint8_t header_buffer [ 128 ] ;	13:4:161:187	8566500	4	True				
ANR	8566523	IdentifierDecl	header_buffer [ 128 ]		8566500	0					
ANR	8566524	IdentifierDeclType	uint8_t [ 128 ]		8566500	0					
ANR	8566525	Identifier	header_buffer		8566500	1					
ANR	8566526	PrimaryExpression	128		8566500	2					
ANR	8566527	IdentifierDeclStatement	const uint8_t * sel_vector_table ;	15:4:236:267	8566500	5	True				
ANR	8566528	IdentifierDecl	* sel_vector_table		8566500	0					
ANR	8566529	IdentifierDeclType	const uint8_t *		8566500	0					
ANR	8566530	Identifier	sel_vector_table		8566500	1					
ANR	8566531	ExpressionStatement	header . header_size = ( ( s -> buf [ 0 ] >> 5 ) | ( s -> buf [ 0 ] << 3 ) ) & 0x7f	19:4:276:341	8566500	6	True				
ANR	8566532	AssignmentExpression	header . header_size = ( ( s -> buf [ 0 ] >> 5 ) | ( s -> buf [ 0 ] << 3 ) ) & 0x7f		8566500	0		=			
ANR	8566533	MemberAccess	header . header_size		8566500	0					
ANR	8566534	Identifier	header		8566500	0					
ANR	8566535	Identifier	header_size		8566500	1					
ANR	8566536	BitAndExpression	( ( s -> buf [ 0 ] >> 5 ) | ( s -> buf [ 0 ] << 3 ) ) & 0x7f		8566500	1		&			
ANR	8566537	InclusiveOrExpression	( s -> buf [ 0 ] >> 5 ) | ( s -> buf [ 0 ] << 3 )		8566500	0		|			
ANR	8566538	ShiftExpression	s -> buf [ 0 ] >> 5		8566500	0		>>			
ANR	8566539	ArrayIndexing	s -> buf [ 0 ]		8566500	0					
ANR	8566540	PtrMemberAccess	s -> buf		8566500	0					
ANR	8566541	Identifier	s		8566500	0					
ANR	8566542	Identifier	buf		8566500	1					
ANR	8566543	PrimaryExpression	0		8566500	1					
ANR	8566544	PrimaryExpression	5		8566500	1					
ANR	8566545	ShiftExpression	s -> buf [ 0 ] << 3		8566500	1		<<			
ANR	8566546	ArrayIndexing	s -> buf [ 0 ]		8566500	0					
ANR	8566547	PtrMemberAccess	s -> buf		8566500	0					
ANR	8566548	Identifier	s		8566500	0					
ANR	8566549	Identifier	buf		8566500	1					
ANR	8566550	PrimaryExpression	0		8566500	1					
ANR	8566551	PrimaryExpression	3		8566500	1					
ANR	8566552	PrimaryExpression	0x7f		8566500	1					
ANR	8566553	IfStatement	if ( s -> buf [ 0 ] < 0x10 )		8566500	7					
ANR	8566554	Condition	s -> buf [ 0 ] < 0x10	21:8:352:367	8566500	0	True				
ANR	8566555	RelationalExpression	s -> buf [ 0 ] < 0x10		8566500	0		<			
ANR	8566556	ArrayIndexing	s -> buf [ 0 ]		8566500	0					
ANR	8566557	PtrMemberAccess	s -> buf		8566500	0					
ANR	8566558	Identifier	s		8566500	0					
ANR	8566559	Identifier	buf		8566500	1					
ANR	8566560	PrimaryExpression	0		8566500	1					
ANR	8566561	PrimaryExpression	0x10		8566500	1					
ANR	8566562	CompoundStatement		21:4:313:313	8566500	1					
ANR	8566563	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""invalid header size (%d)\\n"" , s -> buf [ 0 ] )"	25:8:386:457	8566500	0	True				
ANR	8566564	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""invalid header size (%d)\\n"" , s -> buf [ 0 ] )"		8566500	0					
ANR	8566565	Callee	av_log		8566500	0					
ANR	8566566	Identifier	av_log		8566500	0					
ANR	8566567	ArgumentList	s -> avctx		8566500	1					
ANR	8566568	Argument	s -> avctx		8566500	0					
ANR	8566569	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8566570	Identifier	s		8566500	0					
ANR	8566571	Identifier	avctx		8566500	1					
ANR	8566572	Argument	AV_LOG_ERROR		8566500	1					
ANR	8566573	Identifier	AV_LOG_ERROR		8566500	0					
ANR	8566574	Argument	"""invalid header size (%d)\\n"""		8566500	2					
ANR	8566575	PrimaryExpression	"""invalid header size (%d)\\n"""		8566500	0					
ANR	8566576	Argument	s -> buf [ 0 ]		8566500	3					
ANR	8566577	ArrayIndexing	s -> buf [ 0 ]		8566500	0					
ANR	8566578	PtrMemberAccess	s -> buf		8566500	0					
ANR	8566579	Identifier	s		8566500	0					
ANR	8566580	Identifier	buf		8566500	1					
ANR	8566581	PrimaryExpression	0		8566500	1					
ANR	8566582	ReturnStatement	return - 1 ;	27:8:468:477	8566500	1	True				
ANR	8566583	UnaryOperationExpression	- 1		8566500	0					
ANR	8566584	UnaryOperator	-		8566500	0					
ANR	8566585	PrimaryExpression	1		8566500	1					
ANR	8566586	ExpressionStatement	"memset ( header_buffer , 0 , 128 )"	35:4:553:582	8566500	8	True				
ANR	8566587	CallExpression	"memset ( header_buffer , 0 , 128 )"		8566500	0					
ANR	8566588	Callee	memset		8566500	0					
ANR	8566589	Identifier	memset		8566500	0					
ANR	8566590	ArgumentList	header_buffer		8566500	1					
ANR	8566591	Argument	header_buffer		8566500	0					
ANR	8566592	Identifier	header_buffer		8566500	0					
ANR	8566593	Argument	0		8566500	1					
ANR	8566594	PrimaryExpression	0		8566500	0					
ANR	8566595	Argument	128		8566500	2					
ANR	8566596	PrimaryExpression	128		8566500	0					
ANR	8566597	ForStatement	for ( i = 1 ; i < header . header_size ; i ++ )		8566500	9					
ANR	8566598	ForInit	i = 1 ;	37:9:594:599	8566500	0	True				
ANR	8566599	AssignmentExpression	i = 1		8566500	0		=			
ANR	8566600	Identifier	i		8566500	0					
ANR	8566601	PrimaryExpression	1		8566500	1					
ANR	8566602	Condition	i < header . header_size	37:16:601:622	8566500	1	True				
ANR	8566603	RelationalExpression	i < header . header_size		8566500	0		<			
ANR	8566604	Identifier	i		8566500	0					
ANR	8566605	MemberAccess	header . header_size		8566500	1					
ANR	8566606	Identifier	header		8566500	0					
ANR	8566607	Identifier	header_size		8566500	1					
ANR	8566608	PostIncDecOperationExpression	i ++	37:40:625:627	8566500	2	True				
ANR	8566609	Identifier	i		8566500	0					
ANR	8566610	IncDec	++		8566500	1					
ANR	8566611	ExpressionStatement	header_buffer [ i - 1 ] = s -> buf [ i ] ^ s -> buf [ i + 1 ]	39:8:639:687	8566500	3	True				
ANR	8566612	AssignmentExpression	header_buffer [ i - 1 ] = s -> buf [ i ] ^ s -> buf [ i + 1 ]		8566500	0		=			
ANR	8566613	ArrayIndexing	header_buffer [ i - 1 ]		8566500	0					
ANR	8566614	Identifier	header_buffer		8566500	0					
ANR	8566615	AdditiveExpression	i - 1		8566500	1		-			
ANR	8566616	Identifier	i		8566500	0					
ANR	8566617	PrimaryExpression	1		8566500	1					
ANR	8566618	ExclusiveOrExpression	s -> buf [ i ] ^ s -> buf [ i + 1 ]		8566500	1		^			
ANR	8566619	ArrayIndexing	s -> buf [ i ]		8566500	0					
ANR	8566620	PtrMemberAccess	s -> buf		8566500	0					
ANR	8566621	Identifier	s		8566500	0					
ANR	8566622	Identifier	buf		8566500	1					
ANR	8566623	Identifier	i		8566500	1					
ANR	8566624	ArrayIndexing	s -> buf [ i + 1 ]		8566500	1					
ANR	8566625	PtrMemberAccess	s -> buf		8566500	0					
ANR	8566626	Identifier	s		8566500	0					
ANR	8566627	Identifier	buf		8566500	1					
ANR	8566628	AdditiveExpression	i + 1		8566500	1		+			
ANR	8566629	Identifier	i		8566500	0					
ANR	8566630	PrimaryExpression	1		8566500	1					
ANR	8566631	ExpressionStatement	header . compression = header_buffer [ 0 ]	43:4:696:733	8566500	10	True				
ANR	8566632	AssignmentExpression	header . compression = header_buffer [ 0 ]		8566500	0		=			
ANR	8566633	MemberAccess	header . compression		8566500	0					
ANR	8566634	Identifier	header		8566500	0					
ANR	8566635	Identifier	compression		8566500	1					
ANR	8566636	ArrayIndexing	header_buffer [ 0 ]		8566500	1					
ANR	8566637	Identifier	header_buffer		8566500	0					
ANR	8566638	PrimaryExpression	0		8566500	1					
ANR	8566639	ExpressionStatement	header . deltaset = header_buffer [ 1 ]	45:4:740:774	8566500	11	True				
ANR	8566640	AssignmentExpression	header . deltaset = header_buffer [ 1 ]		8566500	0		=			
ANR	8566641	MemberAccess	header . deltaset		8566500	0					
ANR	8566642	Identifier	header		8566500	0					
ANR	8566643	Identifier	deltaset		8566500	1					
ANR	8566644	ArrayIndexing	header_buffer [ 1 ]		8566500	1					
ANR	8566645	Identifier	header_buffer		8566500	0					
ANR	8566646	PrimaryExpression	1		8566500	1					
ANR	8566647	ExpressionStatement	header . vectable = header_buffer [ 2 ]	47:4:781:815	8566500	12	True				
ANR	8566648	AssignmentExpression	header . vectable = header_buffer [ 2 ]		8566500	0		=			
ANR	8566649	MemberAccess	header . vectable		8566500	0					
ANR	8566650	Identifier	header		8566500	0					
ANR	8566651	Identifier	vectable		8566500	1					
ANR	8566652	ArrayIndexing	header_buffer [ 2 ]		8566500	1					
ANR	8566653	Identifier	header_buffer		8566500	0					
ANR	8566654	PrimaryExpression	2		8566500	1					
ANR	8566655	ExpressionStatement	header . ysize = AV_RL16 ( & header_buffer [ 3 ] )	49:4:822:863	8566500	13	True				
ANR	8566656	AssignmentExpression	header . ysize = AV_RL16 ( & header_buffer [ 3 ] )		8566500	0		=			
ANR	8566657	MemberAccess	header . ysize		8566500	0					
ANR	8566658	Identifier	header		8566500	0					
ANR	8566659	Identifier	ysize		8566500	1					
ANR	8566660	CallExpression	AV_RL16 ( & header_buffer [ 3 ] )		8566500	1					
ANR	8566661	Callee	AV_RL16		8566500	0					
ANR	8566662	Identifier	AV_RL16		8566500	0					
ANR	8566663	ArgumentList	& header_buffer [ 3 ]		8566500	1					
ANR	8566664	Argument	& header_buffer [ 3 ]		8566500	0					
ANR	8566665	UnaryOperationExpression	& header_buffer [ 3 ]		8566500	0					
ANR	8566666	UnaryOperator	&		8566500	0					
ANR	8566667	ArrayIndexing	header_buffer [ 3 ]		8566500	1					
ANR	8566668	Identifier	header_buffer		8566500	0					
ANR	8566669	PrimaryExpression	3		8566500	1					
ANR	8566670	ExpressionStatement	header . xsize = AV_RL16 ( & header_buffer [ 5 ] )	51:4:870:911	8566500	14	True				
ANR	8566671	AssignmentExpression	header . xsize = AV_RL16 ( & header_buffer [ 5 ] )		8566500	0		=			
ANR	8566672	MemberAccess	header . xsize		8566500	0					
ANR	8566673	Identifier	header		8566500	0					
ANR	8566674	Identifier	xsize		8566500	1					
ANR	8566675	CallExpression	AV_RL16 ( & header_buffer [ 5 ] )		8566500	1					
ANR	8566676	Callee	AV_RL16		8566500	0					
ANR	8566677	Identifier	AV_RL16		8566500	0					
ANR	8566678	ArgumentList	& header_buffer [ 5 ]		8566500	1					
ANR	8566679	Argument	& header_buffer [ 5 ]		8566500	0					
ANR	8566680	UnaryOperationExpression	& header_buffer [ 5 ]		8566500	0					
ANR	8566681	UnaryOperator	&		8566500	0					
ANR	8566682	ArrayIndexing	header_buffer [ 5 ]		8566500	1					
ANR	8566683	Identifier	header_buffer		8566500	0					
ANR	8566684	PrimaryExpression	5		8566500	1					
ANR	8566685	ExpressionStatement	header . checksum = AV_RL16 ( & header_buffer [ 7 ] )	53:4:918:962	8566500	15	True				
ANR	8566686	AssignmentExpression	header . checksum = AV_RL16 ( & header_buffer [ 7 ] )		8566500	0		=			
ANR	8566687	MemberAccess	header . checksum		8566500	0					
ANR	8566688	Identifier	header		8566500	0					
ANR	8566689	Identifier	checksum		8566500	1					
ANR	8566690	CallExpression	AV_RL16 ( & header_buffer [ 7 ] )		8566500	1					
ANR	8566691	Callee	AV_RL16		8566500	0					
ANR	8566692	Identifier	AV_RL16		8566500	0					
ANR	8566693	ArgumentList	& header_buffer [ 7 ]		8566500	1					
ANR	8566694	Argument	& header_buffer [ 7 ]		8566500	0					
ANR	8566695	UnaryOperationExpression	& header_buffer [ 7 ]		8566500	0					
ANR	8566696	UnaryOperator	&		8566500	0					
ANR	8566697	ArrayIndexing	header_buffer [ 7 ]		8566500	1					
ANR	8566698	Identifier	header_buffer		8566500	0					
ANR	8566699	PrimaryExpression	7		8566500	1					
ANR	8566700	ExpressionStatement	header . version = header_buffer [ 9 ]	55:4:969:1002	8566500	16	True				
ANR	8566701	AssignmentExpression	header . version = header_buffer [ 9 ]		8566500	0		=			
ANR	8566702	MemberAccess	header . version		8566500	0					
ANR	8566703	Identifier	header		8566500	0					
ANR	8566704	Identifier	version		8566500	1					
ANR	8566705	ArrayIndexing	header_buffer [ 9 ]		8566500	1					
ANR	8566706	Identifier	header_buffer		8566500	0					
ANR	8566707	PrimaryExpression	9		8566500	1					
ANR	8566708	ExpressionStatement	header . header_type = header_buffer [ 10 ]	57:4:1009:1047	8566500	17	True				
ANR	8566709	AssignmentExpression	header . header_type = header_buffer [ 10 ]		8566500	0		=			
ANR	8566710	MemberAccess	header . header_type		8566500	0					
ANR	8566711	Identifier	header		8566500	0					
ANR	8566712	Identifier	header_type		8566500	1					
ANR	8566713	ArrayIndexing	header_buffer [ 10 ]		8566500	1					
ANR	8566714	Identifier	header_buffer		8566500	0					
ANR	8566715	PrimaryExpression	10		8566500	1					
ANR	8566716	ExpressionStatement	header . flags = header_buffer [ 11 ]	59:4:1054:1086	8566500	18	True				
ANR	8566717	AssignmentExpression	header . flags = header_buffer [ 11 ]		8566500	0		=			
ANR	8566718	MemberAccess	header . flags		8566500	0					
ANR	8566719	Identifier	header		8566500	0					
ANR	8566720	Identifier	flags		8566500	1					
ANR	8566721	ArrayIndexing	header_buffer [ 11 ]		8566500	1					
ANR	8566722	Identifier	header_buffer		8566500	0					
ANR	8566723	PrimaryExpression	11		8566500	1					
ANR	8566724	ExpressionStatement	header . control = header_buffer [ 12 ]	61:4:1093:1127	8566500	19	True				
ANR	8566725	AssignmentExpression	header . control = header_buffer [ 12 ]		8566500	0		=			
ANR	8566726	MemberAccess	header . control		8566500	0					
ANR	8566727	Identifier	header		8566500	0					
ANR	8566728	Identifier	control		8566500	1					
ANR	8566729	ArrayIndexing	header_buffer [ 12 ]		8566500	1					
ANR	8566730	Identifier	header_buffer		8566500	0					
ANR	8566731	PrimaryExpression	12		8566500	1					
ANR	8566732	IfStatement	if ( header . version >= 2 )		8566500	20					
ANR	8566733	Condition	header . version >= 2	67:8:1161:1179	8566500	0	True				
ANR	8566734	RelationalExpression	header . version >= 2		8566500	0		>=			
ANR	8566735	MemberAccess	header . version		8566500	0					
ANR	8566736	Identifier	header		8566500	0					
ANR	8566737	Identifier	version		8566500	1					
ANR	8566738	PrimaryExpression	2		8566500	1					
ANR	8566739	CompoundStatement		67:4:1125:1125	8566500	1					
ANR	8566740	IfStatement	if ( header . header_type > 3 )		8566500	0					
ANR	8566741	Condition	header . header_type > 3	71:12:1202:1223	8566500	0	True				
ANR	8566742	RelationalExpression	header . header_type > 3		8566500	0		>			
ANR	8566743	MemberAccess	header . header_type		8566500	0					
ANR	8566744	Identifier	header		8566500	0					
ANR	8566745	Identifier	header_type		8566500	1					
ANR	8566746	PrimaryExpression	3		8566500	1					
ANR	8566747	CompoundStatement		71:8:1173:1173	8566500	1					
ANR	8566748	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""invalid header type (%d)\\n"" , header . header_type )"	75:12:1250:1330	8566500	0	True				
ANR	8566749	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""invalid header type (%d)\\n"" , header . header_type )"		8566500	0					
ANR	8566750	Callee	av_log		8566500	0					
ANR	8566751	Identifier	av_log		8566500	0					
ANR	8566752	ArgumentList	s -> avctx		8566500	1					
ANR	8566753	Argument	s -> avctx		8566500	0					
ANR	8566754	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8566755	Identifier	s		8566500	0					
ANR	8566756	Identifier	avctx		8566500	1					
ANR	8566757	Argument	AV_LOG_ERROR		8566500	1					
ANR	8566758	Identifier	AV_LOG_ERROR		8566500	0					
ANR	8566759	Argument	"""invalid header type (%d)\\n"""		8566500	2					
ANR	8566760	PrimaryExpression	"""invalid header type (%d)\\n"""		8566500	0					
ANR	8566761	Argument	header . header_type		8566500	3					
ANR	8566762	MemberAccess	header . header_type		8566500	0					
ANR	8566763	Identifier	header		8566500	0					
ANR	8566764	Identifier	header_type		8566500	1					
ANR	8566765	ReturnStatement	return - 1 ;	77:12:1345:1354	8566500	1	True				
ANR	8566766	UnaryOperationExpression	- 1		8566500	0					
ANR	8566767	UnaryOperator	-		8566500	0					
ANR	8566768	PrimaryExpression	1		8566500	1					
ANR	8566769	ElseStatement	else		8566500	0					
ANR	8566770	IfStatement	if ( ( header . header_type == 2 ) || ( header . header_type == 3 ) )		8566500	0					
ANR	8566771	Condition	( header . header_type == 2 ) || ( header . header_type == 3 )	79:19:1376:1429	8566500	0	True				
ANR	8566772	OrExpression	( header . header_type == 2 ) || ( header . header_type == 3 )		8566500	0		||			
ANR	8566773	EqualityExpression	header . header_type == 2		8566500	0		==			
ANR	8566774	MemberAccess	header . header_type		8566500	0					
ANR	8566775	Identifier	header		8566500	0					
ANR	8566776	Identifier	header_type		8566500	1					
ANR	8566777	PrimaryExpression	2		8566500	1					
ANR	8566778	EqualityExpression	header . header_type == 3		8566500	1		==			
ANR	8566779	MemberAccess	header . header_type		8566500	0					
ANR	8566780	Identifier	header		8566500	0					
ANR	8566781	Identifier	header_type		8566500	1					
ANR	8566782	PrimaryExpression	3		8566500	1					
ANR	8566783	CompoundStatement		77:75:1370:1370	8566500	1					
ANR	8566784	ExpressionStatement	s -> flags = header . flags	81:12:1447:1470	8566500	0	True				
ANR	8566785	AssignmentExpression	s -> flags = header . flags		8566500	0		=			
ANR	8566786	PtrMemberAccess	s -> flags		8566500	0					
ANR	8566787	Identifier	s		8566500	0					
ANR	8566788	Identifier	flags		8566500	1					
ANR	8566789	MemberAccess	header . flags		8566500	1					
ANR	8566790	Identifier	header		8566500	0					
ANR	8566791	Identifier	flags		8566500	1					
ANR	8566792	IfStatement	if ( ! ( s -> flags & FLAG_INTERFRAME ) )		8566500	1					
ANR	8566793	Condition	! ( s -> flags & FLAG_INTERFRAME )	83:16:1489:1517	8566500	0	True				
ANR	8566794	UnaryOperationExpression	! ( s -> flags & FLAG_INTERFRAME )		8566500	0					
ANR	8566795	UnaryOperator	!		8566500	0					
ANR	8566796	BitAndExpression	s -> flags & FLAG_INTERFRAME		8566500	1		&			
ANR	8566797	PtrMemberAccess	s -> flags		8566500	0					
ANR	8566798	Identifier	s		8566500	0					
ANR	8566799	Identifier	flags		8566500	1					
ANR	8566800	Identifier	FLAG_INTERFRAME		8566500	1					
ANR	8566801	ExpressionStatement	s -> flags |= FLAG_KEYFRAME	85:16:1537:1562	8566500	1	True				
ANR	8566802	AssignmentExpression	s -> flags |= FLAG_KEYFRAME		8566500	0		|=			
ANR	8566803	PtrMemberAccess	s -> flags		8566500	0					
ANR	8566804	Identifier	s		8566500	0					
ANR	8566805	Identifier	flags		8566500	1					
ANR	8566806	Identifier	FLAG_KEYFRAME		8566500	1					
ANR	8566807	ElseStatement	else		8566500	0					
ANR	8566808	ExpressionStatement	s -> flags = FLAG_KEYFRAME	89:12:1593:1617	8566500	0	True				
ANR	8566809	AssignmentExpression	s -> flags = FLAG_KEYFRAME		8566500	0		=			
ANR	8566810	PtrMemberAccess	s -> flags		8566500	0					
ANR	8566811	Identifier	s		8566500	0					
ANR	8566812	Identifier	flags		8566500	1					
ANR	8566813	Identifier	FLAG_KEYFRAME		8566500	1					
ANR	8566814	ElseStatement	else		8566500	0					
ANR	8566815	ExpressionStatement	s -> flags = FLAG_KEYFRAME	93:8:1656:1680	8566500	0	True				
ANR	8566816	AssignmentExpression	s -> flags = FLAG_KEYFRAME		8566500	0		=			
ANR	8566817	PtrMemberAccess	s -> flags		8566500	0					
ANR	8566818	Identifier	s		8566500	0					
ANR	8566819	Identifier	flags		8566500	1					
ANR	8566820	Identifier	FLAG_KEYFRAME		8566500	1					
ANR	8566821	IfStatement	if ( s -> flags & FLAG_SPRITE )		8566500	21					
ANR	8566822	Condition	s -> flags & FLAG_SPRITE	97:8:1693:1714	8566500	0	True				
ANR	8566823	BitAndExpression	s -> flags & FLAG_SPRITE		8566500	0		&			
ANR	8566824	PtrMemberAccess	s -> flags		8566500	0					
ANR	8566825	Identifier	s		8566500	0					
ANR	8566826	Identifier	flags		8566500	1					
ANR	8566827	Identifier	FLAG_SPRITE		8566500	1					
ANR	8566828	CompoundStatement		95:32:1655:1655	8566500	1					
ANR	8566829	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_INFO , ""SPRITE frame found, please report the sample to the developers\\n"" )"	99:8:1728:1825	8566500	0	True				
ANR	8566830	CallExpression	"av_log ( s -> avctx , AV_LOG_INFO , ""SPRITE frame found, please report the sample to the developers\\n"" )"		8566500	0					
ANR	8566831	Callee	av_log		8566500	0					
ANR	8566832	Identifier	av_log		8566500	0					
ANR	8566833	ArgumentList	s -> avctx		8566500	1					
ANR	8566834	Argument	s -> avctx		8566500	0					
ANR	8566835	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8566836	Identifier	s		8566500	0					
ANR	8566837	Identifier	avctx		8566500	1					
ANR	8566838	Argument	AV_LOG_INFO		8566500	1					
ANR	8566839	Identifier	AV_LOG_INFO		8566500	0					
ANR	8566840	Argument	"""SPRITE frame found, please report the sample to the developers\\n"""		8566500	2					
ANR	8566841	PrimaryExpression	"""SPRITE frame found, please report the sample to the developers\\n"""		8566500	0					
ANR	8566842	ExpressionStatement	s -> w = header . width	105:8:1925:1944	8566500	1	True				
ANR	8566843	AssignmentExpression	s -> w = header . width		8566500	0		=			
ANR	8566844	PtrMemberAccess	s -> w		8566500	0					
ANR	8566845	Identifier	s		8566500	0					
ANR	8566846	Identifier	w		8566500	1					
ANR	8566847	MemberAccess	header . width		8566500	1					
ANR	8566848	Identifier	header		8566500	0					
ANR	8566849	Identifier	width		8566500	1					
ANR	8566850	ExpressionStatement	s -> h = header . height	107:8:1955:1975	8566500	2	True				
ANR	8566851	AssignmentExpression	s -> h = header . height		8566500	0		=			
ANR	8566852	PtrMemberAccess	s -> h		8566500	0					
ANR	8566853	Identifier	s		8566500	0					
ANR	8566854	Identifier	h		8566500	1					
ANR	8566855	MemberAccess	header . height		8566500	1					
ANR	8566856	Identifier	header		8566500	0					
ANR	8566857	Identifier	height		8566500	1					
ANR	8566858	ExpressionStatement	s -> x = header . xoffset	109:8:1986:2007	8566500	3	True				
ANR	8566859	AssignmentExpression	s -> x = header . xoffset		8566500	0		=			
ANR	8566860	PtrMemberAccess	s -> x		8566500	0					
ANR	8566861	Identifier	s		8566500	0					
ANR	8566862	Identifier	x		8566500	1					
ANR	8566863	MemberAccess	header . xoffset		8566500	1					
ANR	8566864	Identifier	header		8566500	0					
ANR	8566865	Identifier	xoffset		8566500	1					
ANR	8566866	ExpressionStatement	s -> y = header . yoffset	111:8:2018:2039	8566500	4	True				
ANR	8566867	AssignmentExpression	s -> y = header . yoffset		8566500	0		=			
ANR	8566868	PtrMemberAccess	s -> y		8566500	0					
ANR	8566869	Identifier	s		8566500	0					
ANR	8566870	Identifier	y		8566500	1					
ANR	8566871	MemberAccess	header . yoffset		8566500	1					
ANR	8566872	Identifier	header		8566500	0					
ANR	8566873	Identifier	yoffset		8566500	1					
ANR	8566874	ElseStatement	else		8566500	0					
ANR	8566875	CompoundStatement		117:11:2026:2026	8566500	0					
ANR	8566876	ExpressionStatement	s -> w = header . xsize	121:8:2099:2118	8566500	0	True				
ANR	8566877	AssignmentExpression	s -> w = header . xsize		8566500	0		=			
ANR	8566878	PtrMemberAccess	s -> w		8566500	0					
ANR	8566879	Identifier	s		8566500	0					
ANR	8566880	Identifier	w		8566500	1					
ANR	8566881	MemberAccess	header . xsize		8566500	1					
ANR	8566882	Identifier	header		8566500	0					
ANR	8566883	Identifier	xsize		8566500	1					
ANR	8566884	ExpressionStatement	s -> h = header . ysize	123:8:2129:2148	8566500	1	True				
ANR	8566885	AssignmentExpression	s -> h = header . ysize		8566500	0		=			
ANR	8566886	PtrMemberAccess	s -> h		8566500	0					
ANR	8566887	Identifier	s		8566500	0					
ANR	8566888	Identifier	h		8566500	1					
ANR	8566889	MemberAccess	header . ysize		8566500	1					
ANR	8566890	Identifier	header		8566500	0					
ANR	8566891	Identifier	ysize		8566500	1					
ANR	8566892	IfStatement	if ( header . header_type < 2 )		8566500	2					
ANR	8566893	Condition	header . header_type < 2	125:12:2163:2184	8566500	0	True				
ANR	8566894	RelationalExpression	header . header_type < 2		8566500	0		<			
ANR	8566895	MemberAccess	header . header_type		8566500	0					
ANR	8566896	Identifier	header		8566500	0					
ANR	8566897	Identifier	header_type		8566500	1					
ANR	8566898	PrimaryExpression	2		8566500	1					
ANR	8566899	CompoundStatement		123:36:2125:2125	8566500	1					
ANR	8566900	IfStatement	if ( ( s -> w < 213 ) && ( s -> h >= 176 ) )		8566500	0					
ANR	8566901	Condition	( s -> w < 213 ) && ( s -> h >= 176 )	127:16:2206:2234	8566500	0	True				
ANR	8566902	AndExpression	( s -> w < 213 ) && ( s -> h >= 176 )		8566500	0		&&			
ANR	8566903	RelationalExpression	s -> w < 213		8566500	0		<			
ANR	8566904	PtrMemberAccess	s -> w		8566500	0					
ANR	8566905	Identifier	s		8566500	0					
ANR	8566906	Identifier	w		8566500	1					
ANR	8566907	PrimaryExpression	213		8566500	1					
ANR	8566908	RelationalExpression	s -> h >= 176		8566500	1		>=			
ANR	8566909	PtrMemberAccess	s -> h		8566500	0					
ANR	8566910	Identifier	s		8566500	0					
ANR	8566911	Identifier	h		8566500	1					
ANR	8566912	PrimaryExpression	176		8566500	1					
ANR	8566913	CompoundStatement		127:12:2188:2188	8566500	1					
ANR	8566914	ExpressionStatement	s -> flags |= FLAG_INTERPOLATED	131:16:2269:2298	8566500	0	True				
ANR	8566915	AssignmentExpression	s -> flags |= FLAG_INTERPOLATED		8566500	0		|=			
ANR	8566916	PtrMemberAccess	s -> flags		8566500	0					
ANR	8566917	Identifier	s		8566500	0					
ANR	8566918	Identifier	flags		8566500	1					
ANR	8566919	Identifier	FLAG_INTERPOLATED		8566500	1					
ANR	8566920	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_INFO , ""INTERPOLATION selected, please report the sample to the developers\\n"" )"	133:16:2317:2418	8566500	1	True				
ANR	8566921	CallExpression	"av_log ( s -> avctx , AV_LOG_INFO , ""INTERPOLATION selected, please report the sample to the developers\\n"" )"		8566500	0					
ANR	8566922	Callee	av_log		8566500	0					
ANR	8566923	Identifier	av_log		8566500	0					
ANR	8566924	ArgumentList	s -> avctx		8566500	1					
ANR	8566925	Argument	s -> avctx		8566500	0					
ANR	8566926	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8566927	Identifier	s		8566500	0					
ANR	8566928	Identifier	avctx		8566500	1					
ANR	8566929	Argument	AV_LOG_INFO		8566500	1					
ANR	8566930	Identifier	AV_LOG_INFO		8566500	0					
ANR	8566931	Argument	"""INTERPOLATION selected, please report the sample to the developers\\n"""		8566500	2					
ANR	8566932	PrimaryExpression	"""INTERPOLATION selected, please report the sample to the developers\\n"""		8566500	0					
ANR	8566933	IfStatement	if ( header . compression >= 17 )		8566500	22					
ANR	8566934	Condition	header . compression >= 17	143:8:2464:2487	8566500	0	True				
ANR	8566935	RelationalExpression	header . compression >= 17		8566500	0		>=			
ANR	8566936	MemberAccess	header . compression		8566500	0					
ANR	8566937	Identifier	header		8566500	0					
ANR	8566938	Identifier	compression		8566500	1					
ANR	8566939	PrimaryExpression	17		8566500	1					
ANR	8566940	CompoundStatement		141:34:2428:2428	8566500	1					
ANR	8566941	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""invalid compression type (%d)\\n"" , header . compression )"	145:8:2501:2586	8566500	0	True				
ANR	8566942	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""invalid compression type (%d)\\n"" , header . compression )"		8566500	0					
ANR	8566943	Callee	av_log		8566500	0					
ANR	8566944	Identifier	av_log		8566500	0					
ANR	8566945	ArgumentList	s -> avctx		8566500	1					
ANR	8566946	Argument	s -> avctx		8566500	0					
ANR	8566947	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8566948	Identifier	s		8566500	0					
ANR	8566949	Identifier	avctx		8566500	1					
ANR	8566950	Argument	AV_LOG_ERROR		8566500	1					
ANR	8566951	Identifier	AV_LOG_ERROR		8566500	0					
ANR	8566952	Argument	"""invalid compression type (%d)\\n"""		8566500	2					
ANR	8566953	PrimaryExpression	"""invalid compression type (%d)\\n"""		8566500	0					
ANR	8566954	Argument	header . compression		8566500	3					
ANR	8566955	MemberAccess	header . compression		8566500	0					
ANR	8566956	Identifier	header		8566500	0					
ANR	8566957	Identifier	compression		8566500	1					
ANR	8566958	ReturnStatement	return - 1 ;	147:8:2597:2606	8566500	1	True				
ANR	8566959	UnaryOperationExpression	- 1		8566500	0					
ANR	8566960	UnaryOperator	-		8566500	0					
ANR	8566961	PrimaryExpression	1		8566500	1					
ANR	8566962	IfStatement	if ( ( header . deltaset != s -> last_deltaset ) || ( header . vectable != s -> last_vectable ) )		8566500	23					
ANR	8566963	Condition	( header . deltaset != s -> last_deltaset ) || ( header . vectable != s -> last_vectable )	153:8:2626:2712	8566500	0	True				
ANR	8566964	OrExpression	( header . deltaset != s -> last_deltaset ) || ( header . vectable != s -> last_vectable )		8566500	0		||			
ANR	8566965	EqualityExpression	header . deltaset != s -> last_deltaset		8566500	0		!=			
ANR	8566966	MemberAccess	header . deltaset		8566500	0					
ANR	8566967	Identifier	header		8566500	0					
ANR	8566968	Identifier	deltaset		8566500	1					
ANR	8566969	PtrMemberAccess	s -> last_deltaset		8566500	1					
ANR	8566970	Identifier	s		8566500	0					
ANR	8566971	Identifier	last_deltaset		8566500	1					
ANR	8566972	EqualityExpression	header . vectable != s -> last_vectable		8566500	1		!=			
ANR	8566973	MemberAccess	header . vectable		8566500	0					
ANR	8566974	Identifier	header		8566500	0					
ANR	8566975	Identifier	vectable		8566500	1					
ANR	8566976	PtrMemberAccess	s -> last_vectable		8566500	1					
ANR	8566977	Identifier	s		8566500	0					
ANR	8566978	Identifier	last_vectable		8566500	1					
ANR	8566979	ExpressionStatement	"select_delta_tables ( s , header . deltaset )"	157:8:2724:2763	8566500	1	True				
ANR	8566980	CallExpression	"select_delta_tables ( s , header . deltaset )"		8566500	0					
ANR	8566981	Callee	select_delta_tables		8566500	0					
ANR	8566982	Identifier	select_delta_tables		8566500	0					
ANR	8566983	ArgumentList	s		8566500	1					
ANR	8566984	Argument	s		8566500	0					
ANR	8566985	Identifier	s		8566500	0					
ANR	8566986	Argument	header . deltaset		8566500	1					
ANR	8566987	MemberAccess	header . deltaset		8566500	0					
ANR	8566988	Identifier	header		8566500	0					
ANR	8566989	Identifier	deltaset		8566500	1					
ANR	8566990	IfStatement	if ( ( header . compression & 1 ) && header . header_type )		8566500	24					
ANR	8566991	Condition	( header . compression & 1 ) && header . header_type	161:8:2776:2821	8566500	0	True				
ANR	8566992	AndExpression	( header . compression & 1 ) && header . header_type		8566500	0		&&			
ANR	8566993	BitAndExpression	header . compression & 1		8566500	0		&			
ANR	8566994	MemberAccess	header . compression		8566500	0					
ANR	8566995	Identifier	header		8566500	0					
ANR	8566996	Identifier	compression		8566500	1					
ANR	8566997	PrimaryExpression	1		8566500	1					
ANR	8566998	MemberAccess	header . header_type		8566500	1					
ANR	8566999	Identifier	header		8566500	0					
ANR	8567000	Identifier	header_type		8566500	1					
ANR	8567001	ExpressionStatement	sel_vector_table = pc_tbl2	163:8:2833:2859	8566500	1	True				
ANR	8567002	AssignmentExpression	sel_vector_table = pc_tbl2		8566500	0		=			
ANR	8567003	Identifier	sel_vector_table		8566500	0					
ANR	8567004	Identifier	pc_tbl2		8566500	1					
ANR	8567005	ElseStatement	else		8566500	0					
ANR	8567006	CompoundStatement		163:9:2809:2809	8566500	0					
ANR	8567007	IfStatement	if ( header . vectable < 4 )		8566500	0					
ANR	8567008	Condition	header . vectable < 4	167:12:2886:2904	8566500	0	True				
ANR	8567009	RelationalExpression	header . vectable < 4		8566500	0		<			
ANR	8567010	MemberAccess	header . vectable		8566500	0					
ANR	8567011	Identifier	header		8566500	0					
ANR	8567012	Identifier	vectable		8566500	1					
ANR	8567013	PrimaryExpression	4		8566500	1					
ANR	8567014	ExpressionStatement	sel_vector_table = tables [ header . vectable - 1 ]	169:12:2920:2966	8566500	1	True				
ANR	8567015	AssignmentExpression	sel_vector_table = tables [ header . vectable - 1 ]		8566500	0		=			
ANR	8567016	Identifier	sel_vector_table		8566500	0					
ANR	8567017	ArrayIndexing	tables [ header . vectable - 1 ]		8566500	1					
ANR	8567018	Identifier	tables		8566500	0					
ANR	8567019	AdditiveExpression	header . vectable - 1		8566500	1		-			
ANR	8567020	MemberAccess	header . vectable		8566500	0					
ANR	8567021	Identifier	header		8566500	0					
ANR	8567022	Identifier	vectable		8566500	1					
ANR	8567023	PrimaryExpression	1		8566500	1					
ANR	8567024	ElseStatement	else		8566500	0					
ANR	8567025	CompoundStatement		169:13:2920:2920	8566500	0					
ANR	8567026	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""invalid vector table id (%d)\\n"" , header . vectable )"	173:12:2997:3078	8566500	0	True				
ANR	8567027	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""invalid vector table id (%d)\\n"" , header . vectable )"		8566500	0					
ANR	8567028	Callee	av_log		8566500	0					
ANR	8567029	Identifier	av_log		8566500	0					
ANR	8567030	ArgumentList	s -> avctx		8566500	1					
ANR	8567031	Argument	s -> avctx		8566500	0					
ANR	8567032	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567033	Identifier	s		8566500	0					
ANR	8567034	Identifier	avctx		8566500	1					
ANR	8567035	Argument	AV_LOG_ERROR		8566500	1					
ANR	8567036	Identifier	AV_LOG_ERROR		8566500	0					
ANR	8567037	Argument	"""invalid vector table id (%d)\\n"""		8566500	2					
ANR	8567038	PrimaryExpression	"""invalid vector table id (%d)\\n"""		8566500	0					
ANR	8567039	Argument	header . vectable		8566500	3					
ANR	8567040	MemberAccess	header . vectable		8566500	0					
ANR	8567041	Identifier	header		8566500	0					
ANR	8567042	Identifier	vectable		8566500	1					
ANR	8567043	ReturnStatement	return - 1 ;	175:12:3093:3102	8566500	1	True				
ANR	8567044	UnaryOperationExpression	- 1		8566500	0					
ANR	8567045	UnaryOperator	-		8566500	0					
ANR	8567046	PrimaryExpression	1		8566500	1					
ANR	8567047	IfStatement	if ( compression_types [ header . compression ] . algorithm == ALGO_RGB24H )		8566500	25					
ANR	8567048	Condition	compression_types [ header . compression ] . algorithm == ALGO_RGB24H	183:8:3133:3194	8566500	0	True				
ANR	8567049	EqualityExpression	compression_types [ header . compression ] . algorithm == ALGO_RGB24H		8566500	0		==			
ANR	8567050	MemberAccess	compression_types [ header . compression ] . algorithm		8566500	0					
ANR	8567051	ArrayIndexing	compression_types [ header . compression ]		8566500	0					
ANR	8567052	Identifier	compression_types		8566500	0					
ANR	8567053	MemberAccess	header . compression		8566500	1					
ANR	8567054	Identifier	header		8566500	0					
ANR	8567055	Identifier	compression		8566500	1					
ANR	8567056	Identifier	algorithm		8566500	1					
ANR	8567057	Identifier	ALGO_RGB24H		8566500	1					
ANR	8567058	CompoundStatement		181:72:3135:3135	8566500	1					
ANR	8567059	ExpressionStatement	new_pix_fmt = PIX_FMT_RGB32	185:8:3208:3235	8566500	0	True				
ANR	8567060	AssignmentExpression	new_pix_fmt = PIX_FMT_RGB32		8566500	0		=			
ANR	8567061	Identifier	new_pix_fmt		8566500	0					
ANR	8567062	Identifier	PIX_FMT_RGB32		8566500	1					
ANR	8567063	ExpressionStatement	width_shift = 1	187:8:3246:3261	8566500	1	True				
ANR	8567064	AssignmentExpression	width_shift = 1		8566500	0		=			
ANR	8567065	Identifier	width_shift		8566500	0					
ANR	8567066	PrimaryExpression	1		8566500	1					
ANR	8567067	ElseStatement	else		8566500	0					
ANR	8567068	ExpressionStatement	new_pix_fmt = PIX_FMT_RGB555	191:8:3284:3312	8566500	0	True				
ANR	8567069	AssignmentExpression	new_pix_fmt = PIX_FMT_RGB555		8566500	0		=			
ANR	8567070	Identifier	new_pix_fmt		8566500	0					
ANR	8567071	Identifier	PIX_FMT_RGB555		8566500	1					
ANR	8567072	ExpressionStatement	s -> w >>= width_shift	195:4:3352:3372	8566500	26	True				
ANR	8567073	AssignmentExpression	s -> w >>= width_shift		8566500	0		>>=			
ANR	8567074	PtrMemberAccess	s -> w		8566500	0					
ANR	8567075	Identifier	s		8566500	0					
ANR	8567076	Identifier	w		8566500	1					
ANR	8567077	Identifier	width_shift		8566500	1					
ANR	8567078	IfStatement	"if ( av_image_check_size ( s -> w , s -> h , 0 , s -> avctx ) < 0 )"		8566500	27					
ANR	8567079	Condition	"av_image_check_size ( s -> w , s -> h , 0 , s -> avctx ) < 0"	197:8:3383:3430	8566500	0	True				
ANR	8567080	RelationalExpression	"av_image_check_size ( s -> w , s -> h , 0 , s -> avctx ) < 0"		8566500	0		<			
ANR	8567081	CallExpression	"av_image_check_size ( s -> w , s -> h , 0 , s -> avctx )"		8566500	0					
ANR	8567082	Callee	av_image_check_size		8566500	0					
ANR	8567083	Identifier	av_image_check_size		8566500	0					
ANR	8567084	ArgumentList	s -> w		8566500	1					
ANR	8567085	Argument	s -> w		8566500	0					
ANR	8567086	PtrMemberAccess	s -> w		8566500	0					
ANR	8567087	Identifier	s		8566500	0					
ANR	8567088	Identifier	w		8566500	1					
ANR	8567089	Argument	s -> h		8566500	1					
ANR	8567090	PtrMemberAccess	s -> h		8566500	0					
ANR	8567091	Identifier	s		8566500	0					
ANR	8567092	Identifier	h		8566500	1					
ANR	8567093	Argument	0		8566500	2					
ANR	8567094	PrimaryExpression	0		8566500	0					
ANR	8567095	Argument	s -> avctx		8566500	3					
ANR	8567096	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567097	Identifier	s		8566500	0					
ANR	8567098	Identifier	avctx		8566500	1					
ANR	8567099	PrimaryExpression	0		8566500	1					
ANR	8567100	ReturnStatement	return - 1 ;	199:8:3442:3451	8566500	1	True				
ANR	8567101	UnaryOperationExpression	- 1		8566500	0					
ANR	8567102	UnaryOperator	-		8566500	0					
ANR	8567103	PrimaryExpression	1		8566500	1					
ANR	8567104	IfStatement	if ( s -> w != s -> avctx -> width || s -> h != s -> avctx -> height || new_pix_fmt != s -> avctx -> pix_fmt )		8566500	28					
ANR	8567105	Condition	s -> w != s -> avctx -> width || s -> h != s -> avctx -> height || new_pix_fmt != s -> avctx -> pix_fmt	203:8:3464:3559	8566500	0	True				
ANR	8567106	OrExpression	s -> w != s -> avctx -> width || s -> h != s -> avctx -> height || new_pix_fmt != s -> avctx -> pix_fmt		8566500	0		||			
ANR	8567107	EqualityExpression	s -> w != s -> avctx -> width		8566500	0		!=			
ANR	8567108	PtrMemberAccess	s -> w		8566500	0					
ANR	8567109	Identifier	s		8566500	0					
ANR	8567110	Identifier	w		8566500	1					
ANR	8567111	PtrMemberAccess	s -> avctx -> width		8566500	1					
ANR	8567112	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567113	Identifier	s		8566500	0					
ANR	8567114	Identifier	avctx		8566500	1					
ANR	8567115	Identifier	width		8566500	1					
ANR	8567116	OrExpression	s -> h != s -> avctx -> height || new_pix_fmt != s -> avctx -> pix_fmt		8566500	1		||			
ANR	8567117	EqualityExpression	s -> h != s -> avctx -> height		8566500	0		!=			
ANR	8567118	PtrMemberAccess	s -> h		8566500	0					
ANR	8567119	Identifier	s		8566500	0					
ANR	8567120	Identifier	h		8566500	1					
ANR	8567121	PtrMemberAccess	s -> avctx -> height		8566500	1					
ANR	8567122	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567123	Identifier	s		8566500	0					
ANR	8567124	Identifier	avctx		8566500	1					
ANR	8567125	Identifier	height		8566500	1					
ANR	8567126	EqualityExpression	new_pix_fmt != s -> avctx -> pix_fmt		8566500	1		!=			
ANR	8567127	Identifier	new_pix_fmt		8566500	0					
ANR	8567128	PtrMemberAccess	s -> avctx -> pix_fmt		8566500	1					
ANR	8567129	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567130	Identifier	s		8566500	0					
ANR	8567131	Identifier	avctx		8566500	1					
ANR	8567132	Identifier	pix_fmt		8566500	1					
ANR	8567133	CompoundStatement		203:42:3500:3500	8566500	1					
ANR	8567134	IfStatement	if ( s -> frame . data [ 0 ] )		8566500	0					
ANR	8567135	Condition	s -> frame . data [ 0 ]	207:12:3577:3592	8566500	0	True				
ANR	8567136	ArrayIndexing	s -> frame . data [ 0 ]		8566500	0					
ANR	8567137	MemberAccess	s -> frame . data		8566500	0					
ANR	8567138	PtrMemberAccess	s -> frame		8566500	0					
ANR	8567139	Identifier	s		8566500	0					
ANR	8567140	Identifier	frame		8566500	1					
ANR	8567141	Identifier	data		8566500	1					
ANR	8567142	PrimaryExpression	0		8566500	1					
ANR	8567143	ExpressionStatement	"s -> avctx -> release_buffer ( s -> avctx , & s -> frame )"	209:12:3608:3653	8566500	1	True				
ANR	8567144	CallExpression	"s -> avctx -> release_buffer ( s -> avctx , & s -> frame )"		8566500	0					
ANR	8567145	Callee	s -> avctx -> release_buffer		8566500	0					
ANR	8567146	PtrMemberAccess	s -> avctx -> release_buffer		8566500	0					
ANR	8567147	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567148	Identifier	s		8566500	0					
ANR	8567149	Identifier	avctx		8566500	1					
ANR	8567150	Identifier	release_buffer		8566500	1					
ANR	8567151	ArgumentList	s -> avctx		8566500	1					
ANR	8567152	Argument	s -> avctx		8566500	0					
ANR	8567153	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567154	Identifier	s		8566500	0					
ANR	8567155	Identifier	avctx		8566500	1					
ANR	8567156	Argument	& s -> frame		8566500	1					
ANR	8567157	UnaryOperationExpression	& s -> frame		8566500	0					
ANR	8567158	UnaryOperator	&		8566500	0					
ANR	8567159	PtrMemberAccess	s -> frame		8566500	1					
ANR	8567160	Identifier	s		8566500	0					
ANR	8567161	Identifier	frame		8566500	1					
ANR	8567162	Statement	s	211:8:3664:3664	8566500	1	True				
ANR	8567163	Statement	->	211:9:3665:3666	8566500	2	True				
ANR	8567164	Statement	avctx	211:11:3667:3671	8566500	3	True				
ANR	8567165	Statement	->	211:16:3672:3673	8566500	4	True				
ANR	8567166	Statement	sample_aspect_ratio	211:18:3674:3692	8566500	5	True				
ANR	8567167	Statement	=	211:38:3694:3694	8566500	6	True				
ANR	8567168	Statement	(	211:40:3696:3696	8566500	7	True				
ANR	8567169	Statement	AVRational	211:41:3697:3706	8566500	8	True				
ANR	8567170	Statement	)	211:51:3707:3707	8566500	9	True				
ANR	8567171	CompoundStatement		209:52:3646:3646	8566500	10					
ANR	8567172	Statement	1	211:54:3710:3710	8566500	0	True				
ANR	8567173	Statement	<<	211:56:3712:3713	8566500	1	True				
ANR	8567174	Statement	width_shift	211:59:3715:3725	8566500	2	True				
ANR	8567175	Statement	","	211:70:3726:3726	8566500	3	True				
ANR	8567176	Statement	1	211:72:3728:3728	8566500	4	True				
ANR	8567177	ExpressionStatement		211:75:3731:3731	8566500	11	True				
ANR	8567178	ExpressionStatement	s -> avctx -> pix_fmt = new_pix_fmt	213:8:3742:3773	8566500	12	True				
ANR	8567179	AssignmentExpression	s -> avctx -> pix_fmt = new_pix_fmt		8566500	0		=			
ANR	8567180	PtrMemberAccess	s -> avctx -> pix_fmt		8566500	0					
ANR	8567181	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567182	Identifier	s		8566500	0					
ANR	8567183	Identifier	avctx		8566500	1					
ANR	8567184	Identifier	pix_fmt		8566500	1					
ANR	8567185	Identifier	new_pix_fmt		8566500	1					
ANR	8567186	ExpressionStatement	"avcodec_set_dimensions ( s -> avctx , s -> w , s -> h )"	215:8:3784:3828	8566500	13	True				
ANR	8567187	CallExpression	"avcodec_set_dimensions ( s -> avctx , s -> w , s -> h )"		8566500	0					
ANR	8567188	Callee	avcodec_set_dimensions		8566500	0					
ANR	8567189	Identifier	avcodec_set_dimensions		8566500	0					
ANR	8567190	ArgumentList	s -> avctx		8566500	1					
ANR	8567191	Argument	s -> avctx		8566500	0					
ANR	8567192	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567193	Identifier	s		8566500	0					
ANR	8567194	Identifier	avctx		8566500	1					
ANR	8567195	Argument	s -> w		8566500	1					
ANR	8567196	PtrMemberAccess	s -> w		8566500	0					
ANR	8567197	Identifier	s		8566500	0					
ANR	8567198	Identifier	w		8566500	1					
ANR	8567199	Argument	s -> h		8566500	2					
ANR	8567200	PtrMemberAccess	s -> h		8566500	0					
ANR	8567201	Identifier	s		8566500	0					
ANR	8567202	Identifier	h		8566500	1					
ANR	8567203	ExpressionStatement	"av_fast_malloc ( & s -> vert_pred , & s -> vert_pred_size , s -> avctx -> width * sizeof ( unsigned int ) )"	217:8:3839:3928	8566500	14	True				
ANR	8567204	CallExpression	"av_fast_malloc ( & s -> vert_pred , & s -> vert_pred_size , s -> avctx -> width * sizeof ( unsigned int ) )"		8566500	0					
ANR	8567205	Callee	av_fast_malloc		8566500	0					
ANR	8567206	Identifier	av_fast_malloc		8566500	0					
ANR	8567207	ArgumentList	& s -> vert_pred		8566500	1					
ANR	8567208	Argument	& s -> vert_pred		8566500	0					
ANR	8567209	UnaryOperationExpression	& s -> vert_pred		8566500	0					
ANR	8567210	UnaryOperator	&		8566500	0					
ANR	8567211	PtrMemberAccess	s -> vert_pred		8566500	1					
ANR	8567212	Identifier	s		8566500	0					
ANR	8567213	Identifier	vert_pred		8566500	1					
ANR	8567214	Argument	& s -> vert_pred_size		8566500	1					
ANR	8567215	UnaryOperationExpression	& s -> vert_pred_size		8566500	0					
ANR	8567216	UnaryOperator	&		8566500	0					
ANR	8567217	PtrMemberAccess	s -> vert_pred_size		8566500	1					
ANR	8567218	Identifier	s		8566500	0					
ANR	8567219	Identifier	vert_pred_size		8566500	1					
ANR	8567220	Argument	s -> avctx -> width * sizeof ( unsigned int )		8566500	2					
ANR	8567221	MultiplicativeExpression	s -> avctx -> width * sizeof ( unsigned int )		8566500	0		*			
ANR	8567222	PtrMemberAccess	s -> avctx -> width		8566500	0					
ANR	8567223	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567224	Identifier	s		8566500	0					
ANR	8567225	Identifier	avctx		8566500	1					
ANR	8567226	Identifier	width		8566500	1					
ANR	8567227	SizeofExpression	sizeof ( unsigned int )		8566500	1					
ANR	8567228	Sizeof	sizeof		8566500	0					
ANR	8567229	SizeofOperand	unsigned int		8566500	1					
ANR	8567230	ExpressionStatement	s -> mb_change_bits_row_size = ( ( s -> avctx -> width >> ( 2 - width_shift ) ) + 7 ) >> 3	229:4:4142:4220	8566500	29	True				
ANR	8567231	AssignmentExpression	s -> mb_change_bits_row_size = ( ( s -> avctx -> width >> ( 2 - width_shift ) ) + 7 ) >> 3		8566500	0		=			
ANR	8567232	PtrMemberAccess	s -> mb_change_bits_row_size		8566500	0					
ANR	8567233	Identifier	s		8566500	0					
ANR	8567234	Identifier	mb_change_bits_row_size		8566500	1					
ANR	8567235	ShiftExpression	( ( s -> avctx -> width >> ( 2 - width_shift ) ) + 7 ) >> 3		8566500	1		>>			
ANR	8567236	AdditiveExpression	( s -> avctx -> width >> ( 2 - width_shift ) ) + 7		8566500	0		+			
ANR	8567237	ShiftExpression	s -> avctx -> width >> ( 2 - width_shift )		8566500	0		>>			
ANR	8567238	PtrMemberAccess	s -> avctx -> width		8566500	0					
ANR	8567239	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567240	Identifier	s		8566500	0					
ANR	8567241	Identifier	avctx		8566500	1					
ANR	8567242	Identifier	width		8566500	1					
ANR	8567243	AdditiveExpression	2 - width_shift		8566500	1		-			
ANR	8567244	PrimaryExpression	2		8566500	0					
ANR	8567245	Identifier	width_shift		8566500	1					
ANR	8567246	PrimaryExpression	7		8566500	1					
ANR	8567247	PrimaryExpression	3		8566500	1					
ANR	8567248	IfStatement	if ( ( header . deltaset != s -> last_deltaset ) || ( header . vectable != s -> last_vectable ) )		8566500	30					
ANR	8567249	Condition	( header . deltaset != s -> last_deltaset ) || ( header . vectable != s -> last_vectable )	233:8:4233:4310	8566500	0	True				
ANR	8567250	OrExpression	( header . deltaset != s -> last_deltaset ) || ( header . vectable != s -> last_vectable )		8566500	0		||			
ANR	8567251	EqualityExpression	header . deltaset != s -> last_deltaset		8566500	0		!=			
ANR	8567252	MemberAccess	header . deltaset		8566500	0					
ANR	8567253	Identifier	header		8566500	0					
ANR	8567254	Identifier	deltaset		8566500	1					
ANR	8567255	PtrMemberAccess	s -> last_deltaset		8566500	1					
ANR	8567256	Identifier	s		8566500	0					
ANR	8567257	Identifier	last_deltaset		8566500	1					
ANR	8567258	EqualityExpression	header . vectable != s -> last_vectable		8566500	1		!=			
ANR	8567259	MemberAccess	header . vectable		8566500	0					
ANR	8567260	Identifier	header		8566500	0					
ANR	8567261	Identifier	vectable		8566500	1					
ANR	8567262	PtrMemberAccess	s -> last_vectable		8566500	1					
ANR	8567263	Identifier	s		8566500	0					
ANR	8567264	Identifier	last_vectable		8566500	1					
ANR	8567265	CompoundStatement		233:4:4256:4256	8566500	1					
ANR	8567266	IfStatement	if ( compression_types [ header . compression ] . algorithm == ALGO_RGB24H )		8566500	0					
ANR	8567267	Condition	compression_types [ header . compression ] . algorithm == ALGO_RGB24H	237:12:4333:4394	8566500	0	True				
ANR	8567268	EqualityExpression	compression_types [ header . compression ] . algorithm == ALGO_RGB24H		8566500	0		==			
ANR	8567269	MemberAccess	compression_types [ header . compression ] . algorithm		8566500	0					
ANR	8567270	ArrayIndexing	compression_types [ header . compression ]		8566500	0					
ANR	8567271	Identifier	compression_types		8566500	0					
ANR	8567272	MemberAccess	header . compression		8566500	1					
ANR	8567273	Identifier	header		8566500	0					
ANR	8567274	Identifier	compression		8566500	1					
ANR	8567275	Identifier	algorithm		8566500	1					
ANR	8567276	Identifier	ALGO_RGB24H		8566500	1					
ANR	8567277	ExpressionStatement	"gen_vector_table24 ( s , sel_vector_table )"	239:12:4410:4449	8566500	1	True				
ANR	8567278	CallExpression	"gen_vector_table24 ( s , sel_vector_table )"		8566500	0					
ANR	8567279	Callee	gen_vector_table24		8566500	0					
ANR	8567280	Identifier	gen_vector_table24		8566500	0					
ANR	8567281	ArgumentList	s		8566500	1					
ANR	8567282	Argument	s		8566500	0					
ANR	8567283	Identifier	s		8566500	0					
ANR	8567284	Argument	sel_vector_table		8566500	1					
ANR	8567285	Identifier	sel_vector_table		8566500	0					
ANR	8567286	ElseStatement	else		8566500	0					
ANR	8567287	IfStatement	if ( s -> avctx -> pix_fmt == PIX_FMT_RGB555 )		8566500	0					
ANR	8567288	Condition	s -> avctx -> pix_fmt == PIX_FMT_RGB555	243:12:4478:4512	8566500	0	True				
ANR	8567289	EqualityExpression	s -> avctx -> pix_fmt == PIX_FMT_RGB555		8566500	0		==			
ANR	8567290	PtrMemberAccess	s -> avctx -> pix_fmt		8566500	0					
ANR	8567291	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567292	Identifier	s		8566500	0					
ANR	8567293	Identifier	avctx		8566500	1					
ANR	8567294	Identifier	pix_fmt		8566500	1					
ANR	8567295	Identifier	PIX_FMT_RGB555		8566500	1					
ANR	8567296	ExpressionStatement	"gen_vector_table15 ( s , sel_vector_table )"	245:12:4528:4567	8566500	1	True				
ANR	8567297	CallExpression	"gen_vector_table15 ( s , sel_vector_table )"		8566500	0					
ANR	8567298	Callee	gen_vector_table15		8566500	0					
ANR	8567299	Identifier	gen_vector_table15		8566500	0					
ANR	8567300	ArgumentList	s		8566500	1					
ANR	8567301	Argument	s		8566500	0					
ANR	8567302	Identifier	s		8566500	0					
ANR	8567303	Argument	sel_vector_table		8566500	1					
ANR	8567304	Identifier	sel_vector_table		8566500	0					
ANR	8567305	ElseStatement	else		8566500	0					
ANR	8567306	ExpressionStatement	"gen_vector_table16 ( s , sel_vector_table )"	249:12:4596:4635	8566500	0	True				
ANR	8567307	CallExpression	"gen_vector_table16 ( s , sel_vector_table )"		8566500	0					
ANR	8567308	Callee	gen_vector_table16		8566500	0					
ANR	8567309	Identifier	gen_vector_table16		8566500	0					
ANR	8567310	ArgumentList	s		8566500	1					
ANR	8567311	Argument	s		8566500	0					
ANR	8567312	Identifier	s		8566500	0					
ANR	8567313	Argument	sel_vector_table		8566500	1					
ANR	8567314	Identifier	sel_vector_table		8566500	0					
ANR	8567315	ExpressionStatement	s -> mb_change_bits = s -> buf + header . header_size	257:4:4707:4754	8566500	31	True				
ANR	8567316	AssignmentExpression	s -> mb_change_bits = s -> buf + header . header_size		8566500	0		=			
ANR	8567317	PtrMemberAccess	s -> mb_change_bits		8566500	0					
ANR	8567318	Identifier	s		8566500	0					
ANR	8567319	Identifier	mb_change_bits		8566500	1					
ANR	8567320	AdditiveExpression	s -> buf + header . header_size		8566500	1		+			
ANR	8567321	PtrMemberAccess	s -> buf		8566500	0					
ANR	8567322	Identifier	s		8566500	0					
ANR	8567323	Identifier	buf		8566500	1					
ANR	8567324	MemberAccess	header . header_size		8566500	1					
ANR	8567325	Identifier	header		8566500	0					
ANR	8567326	Identifier	header_size		8566500	1					
ANR	8567327	IfStatement	if ( s -> flags & FLAG_KEYFRAME )		8566500	32					
ANR	8567328	Condition	s -> flags & FLAG_KEYFRAME	259:8:4765:4788	8566500	0	True				
ANR	8567329	BitAndExpression	s -> flags & FLAG_KEYFRAME		8566500	0		&			
ANR	8567330	PtrMemberAccess	s -> flags		8566500	0					
ANR	8567331	Identifier	s		8566500	0					
ANR	8567332	Identifier	flags		8566500	1					
ANR	8567333	Identifier	FLAG_KEYFRAME		8566500	1					
ANR	8567334	CompoundStatement		257:34:4729:4729	8566500	1					
ANR	8567335	ExpressionStatement	s -> index_stream = s -> mb_change_bits	263:8:4875:4910	8566500	0	True				
ANR	8567336	AssignmentExpression	s -> index_stream = s -> mb_change_bits		8566500	0		=			
ANR	8567337	PtrMemberAccess	s -> index_stream		8566500	0					
ANR	8567338	Identifier	s		8566500	0					
ANR	8567339	Identifier	index_stream		8566500	1					
ANR	8567340	PtrMemberAccess	s -> mb_change_bits		8566500	1					
ANR	8567341	Identifier	s		8566500	0					
ANR	8567342	Identifier	mb_change_bits		8566500	1					
ANR	8567343	ElseStatement	else		8566500	0					
ANR	8567344	CompoundStatement		263:11:4862:4862	8566500	0					
ANR	8567345	ExpressionStatement	s -> index_stream = s -> mb_change_bits + ( s -> mb_change_bits_row_size * ( s -> avctx -> height >> 2 ) )	269:8:4979:5084	8566500	0	True				
ANR	8567346	AssignmentExpression	s -> index_stream = s -> mb_change_bits + ( s -> mb_change_bits_row_size * ( s -> avctx -> height >> 2 ) )		8566500	0		=			
ANR	8567347	PtrMemberAccess	s -> index_stream		8566500	0					
ANR	8567348	Identifier	s		8566500	0					
ANR	8567349	Identifier	index_stream		8566500	1					
ANR	8567350	AdditiveExpression	s -> mb_change_bits + ( s -> mb_change_bits_row_size * ( s -> avctx -> height >> 2 ) )		8566500	1		+			
ANR	8567351	PtrMemberAccess	s -> mb_change_bits		8566500	0					
ANR	8567352	Identifier	s		8566500	0					
ANR	8567353	Identifier	mb_change_bits		8566500	1					
ANR	8567354	MultiplicativeExpression	s -> mb_change_bits_row_size * ( s -> avctx -> height >> 2 )		8566500	1		*			
ANR	8567355	PtrMemberAccess	s -> mb_change_bits_row_size		8566500	0					
ANR	8567356	Identifier	s		8566500	0					
ANR	8567357	Identifier	mb_change_bits_row_size		8566500	1					
ANR	8567358	ShiftExpression	s -> avctx -> height >> 2		8566500	1		>>			
ANR	8567359	PtrMemberAccess	s -> avctx -> height		8566500	0					
ANR	8567360	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567361	Identifier	s		8566500	0					
ANR	8567362	Identifier	avctx		8566500	1					
ANR	8567363	Identifier	height		8566500	1					
ANR	8567364	PrimaryExpression	2		8566500	1					
ANR	8567365	ExpressionStatement	s -> index_stream_size = s -> size - ( s -> index_stream - s -> buf )	275:4:5098:5157	8566500	33	True				
ANR	8567366	AssignmentExpression	s -> index_stream_size = s -> size - ( s -> index_stream - s -> buf )		8566500	0		=			
ANR	8567367	PtrMemberAccess	s -> index_stream_size		8566500	0					
ANR	8567368	Identifier	s		8566500	0					
ANR	8567369	Identifier	index_stream_size		8566500	1					
ANR	8567370	AdditiveExpression	s -> size - ( s -> index_stream - s -> buf )		8566500	1		-			
ANR	8567371	PtrMemberAccess	s -> size		8566500	0					
ANR	8567372	Identifier	s		8566500	0					
ANR	8567373	Identifier	size		8566500	1					
ANR	8567374	AdditiveExpression	s -> index_stream - s -> buf		8566500	1		-			
ANR	8567375	PtrMemberAccess	s -> index_stream		8566500	0					
ANR	8567376	Identifier	s		8566500	0					
ANR	8567377	Identifier	index_stream		8566500	1					
ANR	8567378	PtrMemberAccess	s -> buf		8566500	1					
ANR	8567379	Identifier	s		8566500	0					
ANR	8567380	Identifier	buf		8566500	1					
ANR	8567381	ExpressionStatement	s -> last_deltaset = header . deltaset	279:4:5166:5200	8566500	34	True				
ANR	8567382	AssignmentExpression	s -> last_deltaset = header . deltaset		8566500	0		=			
ANR	8567383	PtrMemberAccess	s -> last_deltaset		8566500	0					
ANR	8567384	Identifier	s		8566500	0					
ANR	8567385	Identifier	last_deltaset		8566500	1					
ANR	8567386	MemberAccess	header . deltaset		8566500	1					
ANR	8567387	Identifier	header		8566500	0					
ANR	8567388	Identifier	deltaset		8566500	1					
ANR	8567389	ExpressionStatement	s -> last_vectable = header . vectable	281:4:5207:5241	8566500	35	True				
ANR	8567390	AssignmentExpression	s -> last_vectable = header . vectable		8566500	0		=			
ANR	8567391	PtrMemberAccess	s -> last_vectable		8566500	0					
ANR	8567392	Identifier	s		8566500	0					
ANR	8567393	Identifier	last_vectable		8566500	1					
ANR	8567394	MemberAccess	header . vectable		8566500	1					
ANR	8567395	Identifier	header		8566500	0					
ANR	8567396	Identifier	vectable		8566500	1					
ANR	8567397	ExpressionStatement	s -> compression = header . compression	283:4:5248:5283	8566500	36	True				
ANR	8567398	AssignmentExpression	s -> compression = header . compression		8566500	0		=			
ANR	8567399	PtrMemberAccess	s -> compression		8566500	0					
ANR	8567400	Identifier	s		8566500	0					
ANR	8567401	Identifier	compression		8566500	1					
ANR	8567402	MemberAccess	header . compression		8566500	1					
ANR	8567403	Identifier	header		8566500	0					
ANR	8567404	Identifier	compression		8566500	1					
ANR	8567405	ExpressionStatement	s -> block_width = compression_types [ header . compression ] . block_width	285:4:5290:5356	8566500	37	True				
ANR	8567406	AssignmentExpression	s -> block_width = compression_types [ header . compression ] . block_width		8566500	0		=			
ANR	8567407	PtrMemberAccess	s -> block_width		8566500	0					
ANR	8567408	Identifier	s		8566500	0					
ANR	8567409	Identifier	block_width		8566500	1					
ANR	8567410	MemberAccess	compression_types [ header . compression ] . block_width		8566500	1					
ANR	8567411	ArrayIndexing	compression_types [ header . compression ]		8566500	0					
ANR	8567412	Identifier	compression_types		8566500	0					
ANR	8567413	MemberAccess	header . compression		8566500	1					
ANR	8567414	Identifier	header		8566500	0					
ANR	8567415	Identifier	compression		8566500	1					
ANR	8567416	Identifier	block_width		8566500	1					
ANR	8567417	ExpressionStatement	s -> block_height = compression_types [ header . compression ] . block_height	287:4:5363:5431	8566500	38	True				
ANR	8567418	AssignmentExpression	s -> block_height = compression_types [ header . compression ] . block_height		8566500	0		=			
ANR	8567419	PtrMemberAccess	s -> block_height		8566500	0					
ANR	8567420	Identifier	s		8566500	0					
ANR	8567421	Identifier	block_height		8566500	1					
ANR	8567422	MemberAccess	compression_types [ header . compression ] . block_height		8566500	1					
ANR	8567423	ArrayIndexing	compression_types [ header . compression ]		8566500	0					
ANR	8567424	Identifier	compression_types		8566500	0					
ANR	8567425	MemberAccess	header . compression		8566500	1					
ANR	8567426	Identifier	header		8566500	0					
ANR	8567427	Identifier	compression		8566500	1					
ANR	8567428	Identifier	block_height		8566500	1					
ANR	8567429	ExpressionStatement	s -> block_type = compression_types [ header . compression ] . block_type	289:4:5438:5502	8566500	39	True				
ANR	8567430	AssignmentExpression	s -> block_type = compression_types [ header . compression ] . block_type		8566500	0		=			
ANR	8567431	PtrMemberAccess	s -> block_type		8566500	0					
ANR	8567432	Identifier	s		8566500	0					
ANR	8567433	Identifier	block_type		8566500	1					
ANR	8567434	MemberAccess	compression_types [ header . compression ] . block_type		8566500	1					
ANR	8567435	ArrayIndexing	compression_types [ header . compression ]		8566500	0					
ANR	8567436	Identifier	compression_types		8566500	0					
ANR	8567437	MemberAccess	header . compression		8566500	1					
ANR	8567438	Identifier	header		8566500	0					
ANR	8567439	Identifier	compression		8566500	1					
ANR	8567440	Identifier	block_type		8566500	1					
ANR	8567441	IfStatement	if ( s -> avctx -> debug & FF_DEBUG_PICT_INFO )		8566500	40					
ANR	8567442	Condition	s -> avctx -> debug & FF_DEBUG_PICT_INFO	293:8:5515:5550	8566500	0	True				
ANR	8567443	BitAndExpression	s -> avctx -> debug & FF_DEBUG_PICT_INFO		8566500	0		&			
ANR	8567444	PtrMemberAccess	s -> avctx -> debug		8566500	0					
ANR	8567445	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567446	Identifier	s		8566500	0					
ANR	8567447	Identifier	avctx		8566500	1					
ANR	8567448	Identifier	debug		8566500	1					
ANR	8567449	Identifier	FF_DEBUG_PICT_INFO		8566500	1					
ANR	8567450	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_INFO , ""tables: %d / %d c:%d %dx%d t:%d %s%s%s%s\\n"" , s -> last_deltaset , s -> last_vectable , s -> compression , s -> block_width , s -> block_height , s -> block_type , s -> flags & FLAG_KEYFRAME ? "" KEY"" : """" , s -> flags & FLAG_INTERFRAME ? "" INTER"" : """" , s -> flags & FLAG_SPRITE ? "" SPRITE"" : """" , s -> flags & FLAG_INTERPOLATED ? "" INTERPOL"" : """" )"	295:8:5562:5989	8566500	1	True				
ANR	8567451	CallExpression	"av_log ( s -> avctx , AV_LOG_INFO , ""tables: %d / %d c:%d %dx%d t:%d %s%s%s%s\\n"" , s -> last_deltaset , s -> last_vectable , s -> compression , s -> block_width , s -> block_height , s -> block_type , s -> flags & FLAG_KEYFRAME ? "" KEY"" : """" , s -> flags & FLAG_INTERFRAME ? "" INTER"" : """" , s -> flags & FLAG_SPRITE ? "" SPRITE"" : """" , s -> flags & FLAG_INTERPOLATED ? "" INTERPOL"" : """" )"		8566500	0					
ANR	8567452	Callee	av_log		8566500	0					
ANR	8567453	Identifier	av_log		8566500	0					
ANR	8567454	ArgumentList	s -> avctx		8566500	1					
ANR	8567455	Argument	s -> avctx		8566500	0					
ANR	8567456	PtrMemberAccess	s -> avctx		8566500	0					
ANR	8567457	Identifier	s		8566500	0					
ANR	8567458	Identifier	avctx		8566500	1					
ANR	8567459	Argument	AV_LOG_INFO		8566500	1					
ANR	8567460	Identifier	AV_LOG_INFO		8566500	0					
ANR	8567461	Argument	"""tables: %d / %d c:%d %dx%d t:%d %s%s%s%s\\n"""		8566500	2					
ANR	8567462	PrimaryExpression	"""tables: %d / %d c:%d %dx%d t:%d %s%s%s%s\\n"""		8566500	0					
ANR	8567463	Argument	s -> last_deltaset		8566500	3					
ANR	8567464	PtrMemberAccess	s -> last_deltaset		8566500	0					
ANR	8567465	Identifier	s		8566500	0					
ANR	8567466	Identifier	last_deltaset		8566500	1					
ANR	8567467	Argument	s -> last_vectable		8566500	4					
ANR	8567468	PtrMemberAccess	s -> last_vectable		8566500	0					
ANR	8567469	Identifier	s		8566500	0					
ANR	8567470	Identifier	last_vectable		8566500	1					
ANR	8567471	Argument	s -> compression		8566500	5					
ANR	8567472	PtrMemberAccess	s -> compression		8566500	0					
ANR	8567473	Identifier	s		8566500	0					
ANR	8567474	Identifier	compression		8566500	1					
ANR	8567475	Argument	s -> block_width		8566500	6					
ANR	8567476	PtrMemberAccess	s -> block_width		8566500	0					
ANR	8567477	Identifier	s		8566500	0					
ANR	8567478	Identifier	block_width		8566500	1					
ANR	8567479	Argument	s -> block_height		8566500	7					
ANR	8567480	PtrMemberAccess	s -> block_height		8566500	0					
ANR	8567481	Identifier	s		8566500	0					
ANR	8567482	Identifier	block_height		8566500	1					
ANR	8567483	Argument	s -> block_type		8566500	8					
ANR	8567484	PtrMemberAccess	s -> block_type		8566500	0					
ANR	8567485	Identifier	s		8566500	0					
ANR	8567486	Identifier	block_type		8566500	1					
ANR	8567487	Argument	"s -> flags & FLAG_KEYFRAME ? "" KEY"" : """""		8566500	9					
ANR	8567488	ConditionalExpression	"s -> flags & FLAG_KEYFRAME ? "" KEY"" : """""		8566500	0					
ANR	8567489	Condition	s -> flags & FLAG_KEYFRAME		8566500	0					
ANR	8567490	BitAndExpression	s -> flags & FLAG_KEYFRAME		8566500	0		&			
ANR	8567491	PtrMemberAccess	s -> flags		8566500	0					
ANR	8567492	Identifier	s		8566500	0					
ANR	8567493	Identifier	flags		8566500	1					
ANR	8567494	Identifier	FLAG_KEYFRAME		8566500	1					
ANR	8567495	PrimaryExpression	""" KEY"""		8566500	1					
ANR	8567496	PrimaryExpression	""""""		8566500	2					
ANR	8567497	Argument	"s -> flags & FLAG_INTERFRAME ? "" INTER"" : """""		8566500	10					
ANR	8567498	ConditionalExpression	"s -> flags & FLAG_INTERFRAME ? "" INTER"" : """""		8566500	0					
ANR	8567499	Condition	s -> flags & FLAG_INTERFRAME		8566500	0					
ANR	8567500	BitAndExpression	s -> flags & FLAG_INTERFRAME		8566500	0		&			
ANR	8567501	PtrMemberAccess	s -> flags		8566500	0					
ANR	8567502	Identifier	s		8566500	0					
ANR	8567503	Identifier	flags		8566500	1					
ANR	8567504	Identifier	FLAG_INTERFRAME		8566500	1					
ANR	8567505	PrimaryExpression	""" INTER"""		8566500	1					
ANR	8567506	PrimaryExpression	""""""		8566500	2					
ANR	8567507	Argument	"s -> flags & FLAG_SPRITE ? "" SPRITE"" : """""		8566500	11					
ANR	8567508	ConditionalExpression	"s -> flags & FLAG_SPRITE ? "" SPRITE"" : """""		8566500	0					
ANR	8567509	Condition	s -> flags & FLAG_SPRITE		8566500	0					
ANR	8567510	BitAndExpression	s -> flags & FLAG_SPRITE		8566500	0		&			
ANR	8567511	PtrMemberAccess	s -> flags		8566500	0					
ANR	8567512	Identifier	s		8566500	0					
ANR	8567513	Identifier	flags		8566500	1					
ANR	8567514	Identifier	FLAG_SPRITE		8566500	1					
ANR	8567515	PrimaryExpression	""" SPRITE"""		8566500	1					
ANR	8567516	PrimaryExpression	""""""		8566500	2					
ANR	8567517	Argument	"s -> flags & FLAG_INTERPOLATED ? "" INTERPOL"" : """""		8566500	12					
ANR	8567518	ConditionalExpression	"s -> flags & FLAG_INTERPOLATED ? "" INTERPOL"" : """""		8566500	0					
ANR	8567519	Condition	s -> flags & FLAG_INTERPOLATED		8566500	0					
ANR	8567520	BitAndExpression	s -> flags & FLAG_INTERPOLATED		8566500	0		&			
ANR	8567521	PtrMemberAccess	s -> flags		8566500	0					
ANR	8567522	Identifier	s		8566500	0					
ANR	8567523	Identifier	flags		8566500	1					
ANR	8567524	Identifier	FLAG_INTERPOLATED		8566500	1					
ANR	8567525	PrimaryExpression	""" INTERPOL"""		8566500	1					
ANR	8567526	PrimaryExpression	""""""		8566500	2					
ANR	8567527	ReturnStatement	return header . header_size ;	311:4:5998:6023	8566500	41	True				
ANR	8567528	MemberAccess	header . header_size		8566500	0					
ANR	8567529	Identifier	header		8566500	0					
ANR	8567530	Identifier	header_size		8566500	1					
ANR	8567531	ReturnType	static int		8566500	1					
ANR	8567532	Identifier	truemotion1_decode_header		8566500	2					
ANR	8567533	ParameterList	TrueMotion1Context * s		8566500	3					
ANR	8567534	Parameter	TrueMotion1Context * s	1:37:37:57	8566500	0	True				
ANR	8567535	ParameterType	TrueMotion1Context *		8566500	0					
ANR	8567536	Identifier	s		8566500	1					
ANR	8567537	CFGEntryNode	ENTRY		8566500		True				
ANR	8567538	CFGExitNode	EXIT		8566500		True				
ANR	8567539	Symbol	header . width		8566500						
ANR	8567540	Symbol	new_pix_fmt		8566500						
ANR	8567541	Symbol	compression_types		8566500						
ANR	8567542	Symbol	header_buffer		8566500						
ANR	8567543	Symbol	s -> frame . data		8566500						
ANR	8567544	Symbol	PIX_FMT_RGB32		8566500						
ANR	8567545	Symbol	* s -> frame		8566500						
ANR	8567546	Symbol	header . compression		8566500						
ANR	8567547	Symbol	header . header_type		8566500						
ANR	8567548	Symbol	tables		8566500						
ANR	8567549	Symbol	s -> block_type		8566500						
ANR	8567550	Symbol	width_shift		8566500						
ANR	8567551	Symbol	PIX_FMT_RGB555		8566500						
ANR	8567552	Symbol	header . ysize		8566500						
ANR	8567553	Symbol	pc_tbl2		8566500						
ANR	8567554	Symbol	s -> frame		8566500						
ANR	8567555	Symbol	header . version		8566500						
ANR	8567556	Symbol	FF_DEBUG_PICT_INFO		8566500						
ANR	8567557	Symbol	header . xsize		8566500						
ANR	8567558	Symbol	s -> mb_change_bits_row_size		8566500						
ANR	8567559	Symbol	* header . vectable		8566500						
ANR	8567560	Symbol	* s -> avctx		8566500						
ANR	8567561	Symbol	compression_types [ header . compression ] . block_width		8566500						
ANR	8567562	Symbol	header . yoffset		8566500						
ANR	8567563	Symbol	s -> flags		8566500						
ANR	8567564	Symbol	FLAG_KEYFRAME		8566500						
ANR	8567565	Symbol	* tables		8566500						
ANR	8567566	Symbol	FLAG_INTERFRAME		8566500						
ANR	8567567	Symbol	header . height		8566500						
ANR	8567568	Symbol	& s -> vert_pred		8566500						
ANR	8567569	Symbol	s -> mb_change_bits		8566500						
ANR	8567570	Symbol	* header		8566500						
ANR	8567571	Symbol	FLAG_SPRITE		8566500						
ANR	8567572	Symbol	sel_vector_table		8566500						
ANR	8567573	Symbol	s -> index_stream		8566500						
ANR	8567574	Symbol	header		8566500						
ANR	8567575	Symbol	s -> avctx		8566500						
ANR	8567576	Symbol	AV_LOG_INFO		8566500						
ANR	8567577	Symbol	s -> block_height		8566500						
ANR	8567578	Symbol	AV_RL16		8566500						
ANR	8567579	Symbol	s -> w		8566500						
ANR	8567580	Symbol	& s -> frame		8566500						
ANR	8567581	Symbol	s -> y		8566500						
ANR	8567582	Symbol	s -> avctx -> pix_fmt		8566500						
ANR	8567583	Symbol	s -> size		8566500						
ANR	8567584	Symbol	s -> x		8566500						
ANR	8567585	Symbol	s -> last_vectable		8566500						
ANR	8567586	Symbol	header . header_size		8566500						
ANR	8567587	Symbol	header . vectable		8566500						
ANR	8567588	Symbol	* s -> buf		8566500						
ANR	8567589	Symbol	s -> block_width		8566500						
ANR	8567590	Symbol	* header_buffer		8566500						
ANR	8567591	Symbol	header . deltaset		8566500						
ANR	8567592	Symbol	header . flags		8566500						
ANR	8567593	Symbol	* s -> frame . data		8566500						
ANR	8567594	Symbol	s -> h		8566500						
ANR	8567595	Symbol	compression_types [ header . compression ] . algorithm		8566500						
ANR	8567596	Symbol	header . control		8566500						
ANR	8567597	Symbol	s -> avctx -> width		8566500						
ANR	8567598	Symbol	s -> avctx -> debug		8566500						
ANR	8567599	Symbol	* * s		8566500						
ANR	8567600	Symbol	s -> index_stream_size		8566500						
ANR	8567601	Symbol	compression_types [ header . compression ] . block_type		8566500						
ANR	8567602	Symbol	FLAG_INTERPOLATED		8566500						
ANR	8567603	Symbol	ALGO_RGB24H		8566500						
ANR	8567604	Symbol	av_image_check_size		8566500						
ANR	8567605	Symbol	s -> buf		8566500						
ANR	8567606	Symbol	AV_LOG_ERROR		8566500						
ANR	8567607	Symbol	& s -> vert_pred_size		8566500						
ANR	8567608	Symbol	i		8566500						
ANR	8567609	Symbol	* header . compression		8566500						
ANR	8567610	Symbol	compression_types [ header . compression ] . block_height		8566500						
ANR	8567611	Symbol	s		8566500						
ANR	8567612	Symbol	* i		8566500						
ANR	8567613	Symbol	s -> avctx -> height		8566500						
ANR	8567614	Symbol	s -> last_deltaset		8566500						
ANR	8567615	Symbol	header . checksum		8566500						
ANR	8567616	Symbol	* s		8566500						
ANR	8567617	Symbol	header . xoffset		8566500						
ANR	8567618	Symbol	* compression_types		8566500						
ANR	8567619	Symbol	s -> compression		8566500						
