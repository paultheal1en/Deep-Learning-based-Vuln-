command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8678466	File	/home/p4ultr4n/workplace/ReVeal/raw_code/usb_host_handle_data_1.c								
ANR	8678467	Function	usb_host_handle_data	1:0:0:1775							
ANR	8678468	FunctionDef	"usb_host_handle_data (USBDevice * dev , USBPacket * p)"		8678467	0					
ANR	8678469	CompoundStatement		3:0:63:1775	8678467	0					
ANR	8678470	IdentifierDeclStatement	USBHostDevice * s = ( USBHostDevice * ) dev ;	5:4:70:109	8678467	0	True				
ANR	8678471	IdentifierDecl	* s = ( USBHostDevice * ) dev		8678467	0					
ANR	8678472	IdentifierDeclType	USBHostDevice *		8678467	0					
ANR	8678473	Identifier	s		8678467	1					
ANR	8678474	AssignmentExpression	* s = ( USBHostDevice * ) dev		8678467	2		=			
ANR	8678475	Identifier	s		8678467	0					
ANR	8678476	CastExpression	( USBHostDevice * ) dev		8678467	1					
ANR	8678477	CastTarget	USBHostDevice *		8678467	0					
ANR	8678478	Identifier	dev		8678467	1					
ANR	8678479	IdentifierDeclStatement	"int ret , fd , mode ;"	7:4:116:133	8678467	1	True				
ANR	8678480	IdentifierDecl	ret		8678467	0					
ANR	8678481	IdentifierDeclType	int		8678467	0					
ANR	8678482	Identifier	ret		8678467	1					
ANR	8678483	IdentifierDecl	fd		8678467	1					
ANR	8678484	IdentifierDeclType	int		8678467	0					
ANR	8678485	Identifier	fd		8678467	1					
ANR	8678486	IdentifierDecl	mode		8678467	2					
ANR	8678487	IdentifierDeclType	int		8678467	0					
ANR	8678488	Identifier	mode		8678467	1					
ANR	8678489	IdentifierDeclStatement	"int one = 1 , shortpacket = 0 , timeout = 50 ;"	9:4:140:182	8678467	2	True				
ANR	8678490	IdentifierDecl	one = 1		8678467	0					
ANR	8678491	IdentifierDeclType	int		8678467	0					
ANR	8678492	Identifier	one		8678467	1					
ANR	8678493	AssignmentExpression	one = 1		8678467	2		=			
ANR	8678494	Identifier	one		8678467	0					
ANR	8678495	PrimaryExpression	1		8678467	1					
ANR	8678496	IdentifierDecl	shortpacket = 0		8678467	1					
ANR	8678497	IdentifierDeclType	int		8678467	0					
ANR	8678498	Identifier	shortpacket		8678467	1					
ANR	8678499	AssignmentExpression	shortpacket = 0		8678467	2		=			
ANR	8678500	Identifier	shortpacket		8678467	0					
ANR	8678501	PrimaryExpression	0		8678467	1					
ANR	8678502	IdentifierDecl	timeout = 50		8678467	2					
ANR	8678503	IdentifierDeclType	int		8678467	0					
ANR	8678504	Identifier	timeout		8678467	1					
ANR	8678505	AssignmentExpression	timeout = 50		8678467	2		=			
ANR	8678506	Identifier	timeout		8678467	0					
ANR	8678507	PrimaryExpression	50		8678467	1					
ANR	8678508	IdentifierDeclStatement	"sigset_t new_mask , old_mask ;"	11:4:189:216	8678467	3	True				
ANR	8678509	IdentifierDecl	new_mask		8678467	0					
ANR	8678510	IdentifierDeclType	sigset_t		8678467	0					
ANR	8678511	Identifier	new_mask		8678467	1					
ANR	8678512	IdentifierDecl	old_mask		8678467	1					
ANR	8678513	IdentifierDeclType	sigset_t		8678467	0					
ANR	8678514	Identifier	old_mask		8678467	1					
ANR	8678515	IdentifierDeclStatement	uint8_t devep = p -> devep ;	13:4:223:247	8678467	4	True				
ANR	8678516	IdentifierDecl	devep = p -> devep		8678467	0					
ANR	8678517	IdentifierDeclType	uint8_t		8678467	0					
ANR	8678518	Identifier	devep		8678467	1					
ANR	8678519	AssignmentExpression	devep = p -> devep		8678467	2		=			
ANR	8678520	Identifier	devep		8678467	0					
ANR	8678521	PtrMemberAccess	p -> devep		8678467	1					
ANR	8678522	Identifier	p		8678467	0					
ANR	8678523	Identifier	devep		8678467	1					
ANR	8678524	ExpressionStatement	sigemptyset ( & new_mask )	19:4:310:332	8678467	5	True				
ANR	8678525	CallExpression	sigemptyset ( & new_mask )		8678467	0					
ANR	8678526	Callee	sigemptyset		8678467	0					
ANR	8678527	Identifier	sigemptyset		8678467	0					
ANR	8678528	ArgumentList	& new_mask		8678467	1					
ANR	8678529	Argument	& new_mask		8678467	0					
ANR	8678530	UnaryOperationExpression	& new_mask		8678467	0					
ANR	8678531	UnaryOperator	&		8678467	0					
ANR	8678532	Identifier	new_mask		8678467	1					
ANR	8678533	ExpressionStatement	"sigaddset ( & new_mask , SIGALRM )"	21:4:339:368	8678467	6	True				
ANR	8678534	CallExpression	"sigaddset ( & new_mask , SIGALRM )"		8678467	0					
ANR	8678535	Callee	sigaddset		8678467	0					
ANR	8678536	Identifier	sigaddset		8678467	0					
ANR	8678537	ArgumentList	& new_mask		8678467	1					
ANR	8678538	Argument	& new_mask		8678467	0					
ANR	8678539	UnaryOperationExpression	& new_mask		8678467	0					
ANR	8678540	UnaryOperator	&		8678467	0					
ANR	8678541	Identifier	new_mask		8678467	1					
ANR	8678542	Argument	SIGALRM		8678467	1					
ANR	8678543	Identifier	SIGALRM		8678467	0					
ANR	8678544	ExpressionStatement	"sigprocmask ( SIG_BLOCK , & new_mask , & old_mask )"	23:4:375:419	8678467	7	True				
ANR	8678545	CallExpression	"sigprocmask ( SIG_BLOCK , & new_mask , & old_mask )"		8678467	0					
ANR	8678546	Callee	sigprocmask		8678467	0					
ANR	8678547	Identifier	sigprocmask		8678467	0					
ANR	8678548	ArgumentList	SIG_BLOCK		8678467	1					
ANR	8678549	Argument	SIG_BLOCK		8678467	0					
ANR	8678550	Identifier	SIG_BLOCK		8678467	0					
ANR	8678551	Argument	& new_mask		8678467	1					
ANR	8678552	UnaryOperationExpression	& new_mask		8678467	0					
ANR	8678553	UnaryOperator	&		8678467	0					
ANR	8678554	Identifier	new_mask		8678467	1					
ANR	8678555	Argument	& old_mask		8678467	2					
ANR	8678556	UnaryOperationExpression	& old_mask		8678467	0					
ANR	8678557	UnaryOperator	&		8678467	0					
ANR	8678558	Identifier	old_mask		8678467	1					
ANR	8678559	IfStatement	if ( p -> pid == USB_TOKEN_IN )		8678467	8					
ANR	8678560	Condition	p -> pid == USB_TOKEN_IN	27:8:432:453	8678467	0	True				
ANR	8678561	EqualityExpression	p -> pid == USB_TOKEN_IN		8678467	0		==			
ANR	8678562	PtrMemberAccess	p -> pid		8678467	0					
ANR	8678563	Identifier	p		8678467	0					
ANR	8678564	Identifier	pid		8678467	1					
ANR	8678565	Identifier	USB_TOKEN_IN		8678467	1					
ANR	8678566	CompoundStatement		25:32:392:392	8678467	1					
ANR	8678567	ExpressionStatement	devep |= 0x80	29:8:467:480	8678467	0	True				
ANR	8678568	AssignmentExpression	devep |= 0x80		8678467	0		|=			
ANR	8678569	Identifier	devep		8678467	0					
ANR	8678570	PrimaryExpression	0x80		8678467	1					
ANR	8678571	ExpressionStatement	mode = O_RDONLY	31:8:491:506	8678467	1	True				
ANR	8678572	AssignmentExpression	mode = O_RDONLY		8678467	0		=			
ANR	8678573	Identifier	mode		8678467	0					
ANR	8678574	Identifier	O_RDONLY		8678467	1					
ANR	8678575	ExpressionStatement	shortpacket = 1	33:8:517:532	8678467	2	True				
ANR	8678576	AssignmentExpression	shortpacket = 1		8678467	0		=			
ANR	8678577	Identifier	shortpacket		8678467	0					
ANR	8678578	PrimaryExpression	1		8678467	1					
ANR	8678579	ElseStatement	else		8678467	0					
ANR	8678580	CompoundStatement		33:11:482:482	8678467	0					
ANR	8678581	ExpressionStatement	mode = O_WRONLY	37:8:557:572	8678467	0	True				
ANR	8678582	AssignmentExpression	mode = O_WRONLY		8678467	0		=			
ANR	8678583	Identifier	mode		8678467	0					
ANR	8678584	Identifier	O_WRONLY		8678467	1					
ANR	8678585	ExpressionStatement	"fd = ensure_ep_open ( s , devep , mode )"	43:4:588:623	8678467	9	True				
ANR	8678586	AssignmentExpression	"fd = ensure_ep_open ( s , devep , mode )"		8678467	0		=			
ANR	8678587	Identifier	fd		8678467	0					
ANR	8678588	CallExpression	"ensure_ep_open ( s , devep , mode )"		8678467	1					
ANR	8678589	Callee	ensure_ep_open		8678467	0					
ANR	8678590	Identifier	ensure_ep_open		8678467	0					
ANR	8678591	ArgumentList	s		8678467	1					
ANR	8678592	Argument	s		8678467	0					
ANR	8678593	Identifier	s		8678467	0					
ANR	8678594	Argument	devep		8678467	1					
ANR	8678595	Identifier	devep		8678467	0					
ANR	8678596	Argument	mode		8678467	2					
ANR	8678597	Identifier	mode		8678467	0					
ANR	8678598	IfStatement	if ( fd < 0 )		8678467	10					
ANR	8678599	Condition	fd < 0	45:8:634:639	8678467	0	True				
ANR	8678600	RelationalExpression	fd < 0		8678467	0		<			
ANR	8678601	Identifier	fd		8678467	0					
ANR	8678602	PrimaryExpression	0		8678467	1					
ANR	8678603	CompoundStatement		43:16:578:578	8678467	1					
ANR	8678604	ExpressionStatement	"sigprocmask ( SIG_SETMASK , & old_mask , NULL )"	47:8:653:694	8678467	0	True				
ANR	8678605	CallExpression	"sigprocmask ( SIG_SETMASK , & old_mask , NULL )"		8678467	0					
ANR	8678606	Callee	sigprocmask		8678467	0					
ANR	8678607	Identifier	sigprocmask		8678467	0					
ANR	8678608	ArgumentList	SIG_SETMASK		8678467	1					
ANR	8678609	Argument	SIG_SETMASK		8678467	0					
ANR	8678610	Identifier	SIG_SETMASK		8678467	0					
ANR	8678611	Argument	& old_mask		8678467	1					
ANR	8678612	UnaryOperationExpression	& old_mask		8678467	0					
ANR	8678613	UnaryOperator	&		8678467	0					
ANR	8678614	Identifier	old_mask		8678467	1					
ANR	8678615	Argument	NULL		8678467	2					
ANR	8678616	Identifier	NULL		8678467	0					
ANR	8678617	ReturnStatement	return USB_RET_NODEV ;	49:8:705:725	8678467	1	True				
ANR	8678618	Identifier	USB_RET_NODEV		8678467	0					
ANR	8678619	IfStatement	"if ( ioctl ( fd , USB_SET_TIMEOUT , & timeout ) < 0 )"		8678467	11					
ANR	8678620	Condition	"ioctl ( fd , USB_SET_TIMEOUT , & timeout ) < 0"	55:8:745:784	8678467	0	True				
ANR	8678621	RelationalExpression	"ioctl ( fd , USB_SET_TIMEOUT , & timeout ) < 0"		8678467	0		<			
ANR	8678622	CallExpression	"ioctl ( fd , USB_SET_TIMEOUT , & timeout )"		8678467	0					
ANR	8678623	Callee	ioctl		8678467	0					
ANR	8678624	Identifier	ioctl		8678467	0					
ANR	8678625	ArgumentList	fd		8678467	1					
ANR	8678626	Argument	fd		8678467	0					
ANR	8678627	Identifier	fd		8678467	0					
ANR	8678628	Argument	USB_SET_TIMEOUT		8678467	1					
ANR	8678629	Identifier	USB_SET_TIMEOUT		8678467	0					
ANR	8678630	Argument	& timeout		8678467	2					
ANR	8678631	UnaryOperationExpression	& timeout		8678467	0					
ANR	8678632	UnaryOperator	&		8678467	0					
ANR	8678633	Identifier	timeout		8678467	1					
ANR	8678634	PrimaryExpression	0		8678467	1					
ANR	8678635	CompoundStatement		53:50:723:723	8678467	1					
ANR	8678636	ExpressionStatement	"printf ( ""handle_data: failed to set timeout - %s\\n"" , strerror ( errno ) )"	59:8:812:896	8678467	0	True				
ANR	8678637	CallExpression	"printf ( ""handle_data: failed to set timeout - %s\\n"" , strerror ( errno ) )"		8678467	0					
ANR	8678638	Callee	printf		8678467	0					
ANR	8678639	Identifier	printf		8678467	0					
ANR	8678640	ArgumentList	"""handle_data: failed to set timeout - %s\\n"""		8678467	1					
ANR	8678641	Argument	"""handle_data: failed to set timeout - %s\\n"""		8678467	0					
ANR	8678642	PrimaryExpression	"""handle_data: failed to set timeout - %s\\n"""		8678467	0					
ANR	8678643	Argument	strerror ( errno )		8678467	1					
ANR	8678644	CallExpression	strerror ( errno )		8678467	0					
ANR	8678645	Callee	strerror		8678467	0					
ANR	8678646	Identifier	strerror		8678467	0					
ANR	8678647	ArgumentList	errno		8678467	1					
ANR	8678648	Argument	errno		8678467	0					
ANR	8678649	Identifier	errno		8678467	0					
ANR	8678650	IfStatement	if ( shortpacket )		8678467	12					
ANR	8678651	Condition	shortpacket	69:8:924:934	8678467	0	True				
ANR	8678652	Identifier	shortpacket		8678467	0					
ANR	8678653	CompoundStatement		67:21:873:873	8678467	1					
ANR	8678654	IfStatement	"if ( ioctl ( fd , USB_SET_SHORT_XFER , & one ) < 0 )"		8678467	0					
ANR	8678655	Condition	"ioctl ( fd , USB_SET_SHORT_XFER , & one ) < 0"	71:12:952:990	8678467	0	True				
ANR	8678656	RelationalExpression	"ioctl ( fd , USB_SET_SHORT_XFER , & one ) < 0"		8678467	0		<			
ANR	8678657	CallExpression	"ioctl ( fd , USB_SET_SHORT_XFER , & one )"		8678467	0					
ANR	8678658	Callee	ioctl		8678467	0					
ANR	8678659	Identifier	ioctl		8678467	0					
ANR	8678660	ArgumentList	fd		8678467	1					
ANR	8678661	Argument	fd		8678467	0					
ANR	8678662	Identifier	fd		8678467	0					
ANR	8678663	Argument	USB_SET_SHORT_XFER		8678467	1					
ANR	8678664	Identifier	USB_SET_SHORT_XFER		8678467	0					
ANR	8678665	Argument	& one		8678467	2					
ANR	8678666	UnaryOperationExpression	& one		8678467	0					
ANR	8678667	UnaryOperator	&		8678467	0					
ANR	8678668	Identifier	one		8678467	1					
ANR	8678669	PrimaryExpression	0		8678467	1					
ANR	8678670	CompoundStatement		69:53:929:929	8678467	1					
ANR	8678671	ExpressionStatement	"printf ( ""handle_data: failed to set short xfer mode - %s\\n"" , strerror ( errno ) )"	75:12:1022:1118	8678467	0	True				
ANR	8678672	CallExpression	"printf ( ""handle_data: failed to set short xfer mode - %s\\n"" , strerror ( errno ) )"		8678467	0					
ANR	8678673	Callee	printf		8678467	0					
ANR	8678674	Identifier	printf		8678467	0					
ANR	8678675	ArgumentList	"""handle_data: failed to set short xfer mode - %s\\n"""		8678467	1					
ANR	8678676	Argument	"""handle_data: failed to set short xfer mode - %s\\n"""		8678467	0					
ANR	8678677	PrimaryExpression	"""handle_data: failed to set short xfer mode - %s\\n"""		8678467	0					
ANR	8678678	Argument	strerror ( errno )		8678467	1					
ANR	8678679	CallExpression	strerror ( errno )		8678467	0					
ANR	8678680	Callee	strerror		8678467	0					
ANR	8678681	Identifier	strerror		8678467	0					
ANR	8678682	ArgumentList	errno		8678467	1					
ANR	8678683	Argument	errno		8678467	0					
ANR	8678684	Identifier	errno		8678467	0					
ANR	8678685	ExpressionStatement	"sigprocmask ( SIG_SETMASK , & old_mask , NULL )"	81:12:1141:1182	8678467	1	True				
ANR	8678686	CallExpression	"sigprocmask ( SIG_SETMASK , & old_mask , NULL )"		8678467	0					
ANR	8678687	Callee	sigprocmask		8678467	0					
ANR	8678688	Identifier	sigprocmask		8678467	0					
ANR	8678689	ArgumentList	SIG_SETMASK		8678467	1					
ANR	8678690	Argument	SIG_SETMASK		8678467	0					
ANR	8678691	Identifier	SIG_SETMASK		8678467	0					
ANR	8678692	Argument	& old_mask		8678467	1					
ANR	8678693	UnaryOperationExpression	& old_mask		8678467	0					
ANR	8678694	UnaryOperator	&		8678467	0					
ANR	8678695	Identifier	old_mask		8678467	1					
ANR	8678696	Argument	NULL		8678467	2					
ANR	8678697	Identifier	NULL		8678467	0					
ANR	8678698	IfStatement	if ( p -> pid == USB_TOKEN_IN )		8678467	13					
ANR	8678699	Condition	p -> pid == USB_TOKEN_IN	89:8:1213:1234	8678467	0	True				
ANR	8678700	EqualityExpression	p -> pid == USB_TOKEN_IN		8678467	0		==			
ANR	8678701	PtrMemberAccess	p -> pid		8678467	0					
ANR	8678702	Identifier	p		8678467	0					
ANR	8678703	Identifier	pid		8678467	1					
ANR	8678704	Identifier	USB_TOKEN_IN		8678467	1					
ANR	8678705	ExpressionStatement	"ret = read ( fd , p -> data , p -> len )"	91:8:1246:1277	8678467	1	True				
ANR	8678706	AssignmentExpression	"ret = read ( fd , p -> data , p -> len )"		8678467	0		=			
ANR	8678707	Identifier	ret		8678467	0					
ANR	8678708	CallExpression	"read ( fd , p -> data , p -> len )"		8678467	1					
ANR	8678709	Callee	read		8678467	0					
ANR	8678710	Identifier	read		8678467	0					
ANR	8678711	ArgumentList	fd		8678467	1					
ANR	8678712	Argument	fd		8678467	0					
ANR	8678713	Identifier	fd		8678467	0					
ANR	8678714	Argument	p -> data		8678467	1					
ANR	8678715	PtrMemberAccess	p -> data		8678467	0					
ANR	8678716	Identifier	p		8678467	0					
ANR	8678717	Identifier	data		8678467	1					
ANR	8678718	Argument	p -> len		8678467	2					
ANR	8678719	PtrMemberAccess	p -> len		8678467	0					
ANR	8678720	Identifier	p		8678467	0					
ANR	8678721	Identifier	len		8678467	1					
ANR	8678722	ElseStatement	else		8678467	0					
ANR	8678723	ExpressionStatement	"ret = write ( fd , p -> data , p -> len )"	95:8:1298:1330	8678467	0	True				
ANR	8678724	AssignmentExpression	"ret = write ( fd , p -> data , p -> len )"		8678467	0		=			
ANR	8678725	Identifier	ret		8678467	0					
ANR	8678726	CallExpression	"write ( fd , p -> data , p -> len )"		8678467	1					
ANR	8678727	Callee	write		8678467	0					
ANR	8678728	Identifier	write		8678467	0					
ANR	8678729	ArgumentList	fd		8678467	1					
ANR	8678730	Argument	fd		8678467	0					
ANR	8678731	Identifier	fd		8678467	0					
ANR	8678732	Argument	p -> data		8678467	1					
ANR	8678733	PtrMemberAccess	p -> data		8678467	0					
ANR	8678734	Identifier	p		8678467	0					
ANR	8678735	Identifier	data		8678467	1					
ANR	8678736	Argument	p -> len		8678467	2					
ANR	8678737	PtrMemberAccess	p -> len		8678467	0					
ANR	8678738	Identifier	p		8678467	0					
ANR	8678739	Identifier	len		8678467	1					
ANR	8678740	ExpressionStatement	"sigprocmask ( SIG_SETMASK , & old_mask , NULL )"	99:4:1339:1380	8678467	14	True				
ANR	8678741	CallExpression	"sigprocmask ( SIG_SETMASK , & old_mask , NULL )"		8678467	0					
ANR	8678742	Callee	sigprocmask		8678467	0					
ANR	8678743	Identifier	sigprocmask		8678467	0					
ANR	8678744	ArgumentList	SIG_SETMASK		8678467	1					
ANR	8678745	Argument	SIG_SETMASK		8678467	0					
ANR	8678746	Identifier	SIG_SETMASK		8678467	0					
ANR	8678747	Argument	& old_mask		8678467	1					
ANR	8678748	UnaryOperationExpression	& old_mask		8678467	0					
ANR	8678749	UnaryOperator	&		8678467	0					
ANR	8678750	Identifier	old_mask		8678467	1					
ANR	8678751	Argument	NULL		8678467	2					
ANR	8678752	Identifier	NULL		8678467	0					
ANR	8678753	IfStatement	if ( ret < 0 )		8678467	15					
ANR	8678754	Condition	ret < 0	103:8:1393:1399	8678467	0	True				
ANR	8678755	RelationalExpression	ret < 0		8678467	0		<			
ANR	8678756	Identifier	ret		8678467	0					
ANR	8678757	PrimaryExpression	0		8678467	1					
ANR	8678758	CompoundStatement		101:17:1338:1338	8678467	1					
ANR	8678759	ExpressionStatement	"printf ( ""handle_data: error after %s data - %s\\n"" , pid == USB_TOKEN_IN ? ""reading"" : ""writing"" , strerror ( errno ) )"	107:8:1427:1554	8678467	0	True				
ANR	8678760	CallExpression	"printf ( ""handle_data: error after %s data - %s\\n"" , pid == USB_TOKEN_IN ? ""reading"" : ""writing"" , strerror ( errno ) )"		8678467	0					
ANR	8678761	Callee	printf		8678467	0					
ANR	8678762	Identifier	printf		8678467	0					
ANR	8678763	ArgumentList	"""handle_data: error after %s data - %s\\n"""		8678467	1					
ANR	8678764	Argument	"""handle_data: error after %s data - %s\\n"""		8678467	0					
ANR	8678765	PrimaryExpression	"""handle_data: error after %s data - %s\\n"""		8678467	0					
ANR	8678766	Argument	"pid == USB_TOKEN_IN ? ""reading"" : ""writing"""		8678467	1					
ANR	8678767	ConditionalExpression	"pid == USB_TOKEN_IN ? ""reading"" : ""writing"""		8678467	0					
ANR	8678768	Condition	pid == USB_TOKEN_IN		8678467	0					
ANR	8678769	EqualityExpression	pid == USB_TOKEN_IN		8678467	0		==			
ANR	8678770	Identifier	pid		8678467	0					
ANR	8678771	Identifier	USB_TOKEN_IN		8678467	1					
ANR	8678772	PrimaryExpression	"""reading"""		8678467	1					
ANR	8678773	PrimaryExpression	"""writing"""		8678467	2					
ANR	8678774	Argument	strerror ( errno )		8678467	2					
ANR	8678775	CallExpression	strerror ( errno )		8678467	0					
ANR	8678776	Callee	strerror		8678467	0					
ANR	8678777	Identifier	strerror		8678467	0					
ANR	8678778	ArgumentList	errno		8678467	1					
ANR	8678779	Argument	errno		8678467	0					
ANR	8678780	Identifier	errno		8678467	0					
ANR	8678781	SwitchStatement	switch ( errno )		8678467	1					
ANR	8678782	Condition	errno	113:15:1580:1584	8678467	0	True				
ANR	8678783	Identifier	errno		8678467	0					
ANR	8678784	CompoundStatement		111:22:1523:1523	8678467	1					
ANR	8678785	Label	case ETIMEDOUT :	115:8:1598:1612	8678467	0	True				
ANR	8678786	Identifier	ETIMEDOUT		8678467	0					
ANR	8678787	Label	case EINTR :	117:8:1623:1633	8678467	1	True				
ANR	8678788	Identifier	EINTR		8678467	0					
ANR	8678789	ReturnStatement	return USB_RET_NAK ;	119:12:1648:1666	8678467	2	True				
ANR	8678790	Identifier	USB_RET_NAK		8678467	0					
ANR	8678791	Label	default :	121:8:1677:1684	8678467	3	True				
ANR	8678792	Identifier	default		8678467	0					
ANR	8678793	ReturnStatement	return USB_RET_STALL ;	123:12:1699:1719	8678467	4	True				
ANR	8678794	Identifier	USB_RET_STALL		8678467	0					
ANR	8678795	ElseStatement	else		8678467	0					
ANR	8678796	CompoundStatement		125:11:1680:1680	8678467	0					
ANR	8678797	ReturnStatement	return ret ;	129:8:1755:1765	8678467	0	True				
ANR	8678798	Identifier	ret		8678467	0					
ANR	8678799	ReturnType	static int		8678467	1					
ANR	8678800	Identifier	usb_host_handle_data		8678467	2					
ANR	8678801	ParameterList	"USBDevice * dev , USBPacket * p"		8678467	3					
ANR	8678802	Parameter	USBDevice * dev	1:32:32:45	8678467	0	True				
ANR	8678803	ParameterType	USBDevice *		8678467	0					
ANR	8678804	Identifier	dev		8678467	1					
ANR	8678805	Parameter	USBPacket * p	1:48:48:59	8678467	1	True				
ANR	8678806	ParameterType	USBPacket *		8678467	0					
ANR	8678807	Identifier	p		8678467	1					
ANR	8678808	CFGEntryNode	ENTRY		8678467		True				
ANR	8678809	CFGExitNode	EXIT		8678467		True				
ANR	8678810	Symbol	p -> pid		8678467						
ANR	8678811	Symbol	p -> data		8678467						
ANR	8678812	Symbol	USB_SET_SHORT_XFER		8678467						
ANR	8678813	Symbol	pid		8678467						
ANR	8678814	Symbol	& one		8678467						
ANR	8678815	Symbol	timeout		8678467						
ANR	8678816	Symbol	ioctl		8678467						
ANR	8678817	Symbol	USB_SET_TIMEOUT		8678467						
ANR	8678818	Symbol	mode		8678467						
ANR	8678819	Symbol	old_mask		8678467						
ANR	8678820	Symbol	p -> devep		8678467						
ANR	8678821	Symbol	dev		8678467						
ANR	8678822	Symbol	USB_TOKEN_IN		8678467						
ANR	8678823	Symbol	p -> len		8678467						
ANR	8678824	Symbol	ensure_ep_open		8678467						
ANR	8678825	Symbol	& timeout		8678467						
ANR	8678826	Symbol	write		8678467						
ANR	8678827	Symbol	ret		8678467						
ANR	8678828	Symbol	errno		8678467						
ANR	8678829	Symbol	NULL		8678467						
ANR	8678830	Symbol	read		8678467						
ANR	8678831	Symbol	USB_RET_NAK		8678467						
ANR	8678832	Symbol	one		8678467						
ANR	8678833	Symbol	SIG_SETMASK		8678467						
ANR	8678834	Symbol	SIGALRM		8678467						
ANR	8678835	Symbol	USB_RET_STALL		8678467						
ANR	8678836	Symbol	& new_mask		8678467						
ANR	8678837	Symbol	p		8678467						
ANR	8678838	Symbol	devep		8678467						
ANR	8678839	Symbol	strerror		8678467						
ANR	8678840	Symbol	s		8678467						
ANR	8678841	Symbol	O_RDONLY		8678467						
ANR	8678842	Symbol	& old_mask		8678467						
ANR	8678843	Symbol	* p		8678467						
ANR	8678844	Symbol	O_WRONLY		8678467						
ANR	8678845	Symbol	SIG_BLOCK		8678467						
ANR	8678846	Symbol	fd		8678467						
ANR	8678847	Symbol	new_mask		8678467						
ANR	8678848	Symbol	USB_RET_NODEV		8678467						
ANR	8678849	Symbol	shortpacket		8678467						
