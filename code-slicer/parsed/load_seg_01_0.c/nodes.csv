command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5258336	File	/home/p4ultr4n/workplace/ReVeal/raw_code/load_seg_01_0.c								
ANR	5258337	Function	load_seg	1:0:0:1150							
ANR	5258338	FunctionDef	"load_seg (int seg_reg , int selector)"		5258337	0					
ANR	5258339	CompoundStatement		3:0:42:1150	5258337	0					
ANR	5258340	IdentifierDeclStatement	SegmentCache * sc ;	5:4:49:65	5258337	0	True				
ANR	5258341	IdentifierDecl	* sc		5258337	0					
ANR	5258342	IdentifierDeclType	SegmentCache *		5258337	0					
ANR	5258343	Identifier	sc		5258337	1					
ANR	5258344	IdentifierDeclStatement	SegmentDescriptorTable * dt ;	7:4:72:98	5258337	1	True				
ANR	5258345	IdentifierDecl	* dt		5258337	0					
ANR	5258346	IdentifierDeclType	SegmentDescriptorTable *		5258337	0					
ANR	5258347	Identifier	dt		5258337	1					
ANR	5258348	IdentifierDeclStatement	int index ;	9:4:105:114	5258337	2	True				
ANR	5258349	IdentifierDecl	index		5258337	0					
ANR	5258350	IdentifierDeclType	int		5258337	0					
ANR	5258351	Identifier	index		5258337	1					
ANR	5258352	IdentifierDeclStatement	"uint32_t e1 , e2 ;"	11:4:121:136	5258337	3	True				
ANR	5258353	IdentifierDecl	e1		5258337	0					
ANR	5258354	IdentifierDeclType	uint32_t		5258337	0					
ANR	5258355	Identifier	e1		5258337	1					
ANR	5258356	IdentifierDecl	e2		5258337	1					
ANR	5258357	IdentifierDeclType	uint32_t		5258337	0					
ANR	5258358	Identifier	e2		5258337	1					
ANR	5258359	IdentifierDeclStatement	uint8_t * ptr ;	13:4:143:155	5258337	4	True				
ANR	5258360	IdentifierDecl	* ptr		5258337	0					
ANR	5258361	IdentifierDeclType	uint8_t *		5258337	0					
ANR	5258362	Identifier	ptr		5258337	1					
ANR	5258363	ExpressionStatement	env -> segs [ seg_reg ] = selector	17:4:164:193	5258337	5	True				
ANR	5258364	AssignmentExpression	env -> segs [ seg_reg ] = selector		5258337	0		=			
ANR	5258365	ArrayIndexing	env -> segs [ seg_reg ]		5258337	0					
ANR	5258366	PtrMemberAccess	env -> segs		5258337	0					
ANR	5258367	Identifier	env		5258337	0					
ANR	5258368	Identifier	segs		5258337	1					
ANR	5258369	Identifier	seg_reg		5258337	1					
ANR	5258370	Identifier	selector		5258337	1					
ANR	5258371	ExpressionStatement	sc = & env -> seg_cache [ seg_reg ]	19:4:200:229	5258337	6	True				
ANR	5258372	AssignmentExpression	sc = & env -> seg_cache [ seg_reg ]		5258337	0		=			
ANR	5258373	Identifier	sc		5258337	0					
ANR	5258374	UnaryOperationExpression	& env -> seg_cache [ seg_reg ]		5258337	1					
ANR	5258375	UnaryOperator	&		5258337	0					
ANR	5258376	ArrayIndexing	env -> seg_cache [ seg_reg ]		5258337	1					
ANR	5258377	PtrMemberAccess	env -> seg_cache		5258337	0					
ANR	5258378	Identifier	env		5258337	0					
ANR	5258379	Identifier	seg_cache		5258337	1					
ANR	5258380	Identifier	seg_reg		5258337	1					
ANR	5258381	IfStatement	if ( env -> eflags & VM_MASK )		5258337	7					
ANR	5258382	Condition	env -> eflags & VM_MASK	21:8:240:260	5258337	0	True				
ANR	5258383	BitAndExpression	env -> eflags & VM_MASK		5258337	0		&			
ANR	5258384	PtrMemberAccess	env -> eflags		5258337	0					
ANR	5258385	Identifier	env		5258337	0					
ANR	5258386	Identifier	eflags		5258337	1					
ANR	5258387	Identifier	VM_MASK		5258337	1					
ANR	5258388	CompoundStatement		19:31:220:220	5258337	1					
ANR	5258389	ExpressionStatement	sc -> base = ( void * ) ( selector << 4 )	23:8:274:308	5258337	0	True				
ANR	5258390	AssignmentExpression	sc -> base = ( void * ) ( selector << 4 )		5258337	0		=			
ANR	5258391	PtrMemberAccess	sc -> base		5258337	0					
ANR	5258392	Identifier	sc		5258337	0					
ANR	5258393	Identifier	base		5258337	1					
ANR	5258394	CastExpression	( void * ) ( selector << 4 )		5258337	1					
ANR	5258395	CastTarget	void *		5258337	0					
ANR	5258396	ShiftExpression	selector << 4		5258337	1		<<			
ANR	5258397	Identifier	selector		5258337	0					
ANR	5258398	PrimaryExpression	4		5258337	1					
ANR	5258399	ExpressionStatement	sc -> limit = 0xffff	25:8:319:337	5258337	1	True				
ANR	5258400	AssignmentExpression	sc -> limit = 0xffff		5258337	0		=			
ANR	5258401	PtrMemberAccess	sc -> limit		5258337	0					
ANR	5258402	Identifier	sc		5258337	0					
ANR	5258403	Identifier	limit		5258337	1					
ANR	5258404	PrimaryExpression	0xffff		5258337	1					
ANR	5258405	ExpressionStatement	sc -> seg_32bit = 0	27:8:348:365	5258337	2	True				
ANR	5258406	AssignmentExpression	sc -> seg_32bit = 0		5258337	0		=			
ANR	5258407	PtrMemberAccess	sc -> seg_32bit		5258337	0					
ANR	5258408	Identifier	sc		5258337	0					
ANR	5258409	Identifier	seg_32bit		5258337	1					
ANR	5258410	PrimaryExpression	0		5258337	1					
ANR	5258411	ElseStatement	else		5258337	0					
ANR	5258412	CompoundStatement		27:11:336:336	5258337	0					
ANR	5258413	IfStatement	if ( selector & 0x4 )		5258337	0					
ANR	5258414	Condition	selector & 0x4	31:12:394:407	5258337	0	True				
ANR	5258415	BitAndExpression	selector & 0x4		5258337	0		&			
ANR	5258416	Identifier	selector		5258337	0					
ANR	5258417	PrimaryExpression	0x4		5258337	1					
ANR	5258418	ExpressionStatement	dt = & env -> ldt	33:12:423:437	5258337	1	True				
ANR	5258419	AssignmentExpression	dt = & env -> ldt		5258337	0		=			
ANR	5258420	Identifier	dt		5258337	0					
ANR	5258421	UnaryOperationExpression	& env -> ldt		5258337	1					
ANR	5258422	UnaryOperator	&		5258337	0					
ANR	5258423	PtrMemberAccess	env -> ldt		5258337	1					
ANR	5258424	Identifier	env		5258337	0					
ANR	5258425	Identifier	ldt		5258337	1					
ANR	5258426	ElseStatement	else		5258337	0					
ANR	5258427	ExpressionStatement	dt = & env -> gdt	37:12:466:480	5258337	0	True				
ANR	5258428	AssignmentExpression	dt = & env -> gdt		5258337	0		=			
ANR	5258429	Identifier	dt		5258337	0					
ANR	5258430	UnaryOperationExpression	& env -> gdt		5258337	1					
ANR	5258431	UnaryOperator	&		5258337	0					
ANR	5258432	PtrMemberAccess	env -> gdt		5258337	1					
ANR	5258433	Identifier	env		5258337	0					
ANR	5258434	Identifier	gdt		5258337	1					
ANR	5258435	ExpressionStatement	index = selector & ~7	39:8:491:512	5258337	1	True				
ANR	5258436	AssignmentExpression	index = selector & ~7		5258337	0		=			
ANR	5258437	Identifier	index		5258337	0					
ANR	5258438	BitAndExpression	selector & ~7		5258337	1		&			
ANR	5258439	Identifier	selector		5258337	0					
ANR	5258440	Identifier	~7		5258337	1					
ANR	5258441	IfStatement	if ( ( index + 7 ) > dt -> limit )		5258337	2					
ANR	5258442	Condition	( index + 7 ) > dt -> limit	41:12:527:549	5258337	0	True				
ANR	5258443	RelationalExpression	( index + 7 ) > dt -> limit		5258337	0		>			
ANR	5258444	AdditiveExpression	index + 7		5258337	0		+			
ANR	5258445	Identifier	index		5258337	0					
ANR	5258446	PrimaryExpression	7		5258337	1					
ANR	5258447	PtrMemberAccess	dt -> limit		5258337	1					
ANR	5258448	Identifier	dt		5258337	0					
ANR	5258449	Identifier	limit		5258337	1					
ANR	5258450	ExpressionStatement	"raise_exception_err ( EXCP0D_GPF , selector )"	43:12:565:606	5258337	1	True				
ANR	5258451	CallExpression	"raise_exception_err ( EXCP0D_GPF , selector )"		5258337	0					
ANR	5258452	Callee	raise_exception_err		5258337	0					
ANR	5258453	Identifier	raise_exception_err		5258337	0					
ANR	5258454	ArgumentList	EXCP0D_GPF		5258337	1					
ANR	5258455	Argument	EXCP0D_GPF		5258337	0					
ANR	5258456	Identifier	EXCP0D_GPF		5258337	0					
ANR	5258457	Argument	selector		5258337	1					
ANR	5258458	Identifier	selector		5258337	0					
ANR	5258459	ExpressionStatement	ptr = dt -> base + index	45:8:617:639	5258337	3	True				
ANR	5258460	AssignmentExpression	ptr = dt -> base + index		5258337	0		=			
ANR	5258461	Identifier	ptr		5258337	0					
ANR	5258462	AdditiveExpression	dt -> base + index		5258337	1		+			
ANR	5258463	PtrMemberAccess	dt -> base		5258337	0					
ANR	5258464	Identifier	dt		5258337	0					
ANR	5258465	Identifier	base		5258337	1					
ANR	5258466	Identifier	index		5258337	1					
ANR	5258467	ExpressionStatement	e1 = ldl ( ptr )	47:8:650:663	5258337	4	True				
ANR	5258468	AssignmentExpression	e1 = ldl ( ptr )		5258337	0		=			
ANR	5258469	Identifier	e1		5258337	0					
ANR	5258470	CallExpression	ldl ( ptr )		5258337	1					
ANR	5258471	Callee	ldl		5258337	0					
ANR	5258472	Identifier	ldl		5258337	0					
ANR	5258473	ArgumentList	ptr		5258337	1					
ANR	5258474	Argument	ptr		5258337	0					
ANR	5258475	Identifier	ptr		5258337	0					
ANR	5258476	ExpressionStatement	e2 = ldl ( ptr + 4 )	49:8:674:691	5258337	5	True				
ANR	5258477	AssignmentExpression	e2 = ldl ( ptr + 4 )		5258337	0		=			
ANR	5258478	Identifier	e2		5258337	0					
ANR	5258479	CallExpression	ldl ( ptr + 4 )		5258337	1					
ANR	5258480	Callee	ldl		5258337	0					
ANR	5258481	Identifier	ldl		5258337	0					
ANR	5258482	ArgumentList	ptr + 4		5258337	1					
ANR	5258483	Argument	ptr + 4		5258337	0					
ANR	5258484	AdditiveExpression	ptr + 4		5258337	0		+			
ANR	5258485	Identifier	ptr		5258337	0					
ANR	5258486	PrimaryExpression	4		5258337	1					
ANR	5258487	ExpressionStatement	sc -> base = ( void * ) ( ( e1 >> 16 ) | ( ( e2 & 0xff ) << 16 ) | ( e2 & 0xff000000 ) )	51:8:702:775	5258337	6	True				
ANR	5258488	AssignmentExpression	sc -> base = ( void * ) ( ( e1 >> 16 ) | ( ( e2 & 0xff ) << 16 ) | ( e2 & 0xff000000 ) )		5258337	0		=			
ANR	5258489	PtrMemberAccess	sc -> base		5258337	0					
ANR	5258490	Identifier	sc		5258337	0					
ANR	5258491	Identifier	base		5258337	1					
ANR	5258492	CastExpression	( void * ) ( ( e1 >> 16 ) | ( ( e2 & 0xff ) << 16 ) | ( e2 & 0xff000000 ) )		5258337	1					
ANR	5258493	CastTarget	void *		5258337	0					
ANR	5258494	InclusiveOrExpression	( e1 >> 16 ) | ( ( e2 & 0xff ) << 16 ) | ( e2 & 0xff000000 )		5258337	1		|			
ANR	5258495	ShiftExpression	e1 >> 16		5258337	0		>>			
ANR	5258496	Identifier	e1		5258337	0					
ANR	5258497	PrimaryExpression	16		5258337	1					
ANR	5258498	InclusiveOrExpression	( ( e2 & 0xff ) << 16 ) | ( e2 & 0xff000000 )		5258337	1		|			
ANR	5258499	ShiftExpression	( e2 & 0xff ) << 16		5258337	0		<<			
ANR	5258500	BitAndExpression	e2 & 0xff		5258337	0		&			
ANR	5258501	Identifier	e2		5258337	0					
ANR	5258502	PrimaryExpression	0xff		5258337	1					
ANR	5258503	PrimaryExpression	16		5258337	1					
ANR	5258504	BitAndExpression	e2 & 0xff000000		5258337	1		&			
ANR	5258505	Identifier	e2		5258337	0					
ANR	5258506	PrimaryExpression	0xff000000		5258337	1					
ANR	5258507	ExpressionStatement	sc -> limit = ( e1 & 0xffff ) | ( e2 & 0x000f0000 )	53:8:786:831	5258337	7	True				
ANR	5258508	AssignmentExpression	sc -> limit = ( e1 & 0xffff ) | ( e2 & 0x000f0000 )		5258337	0		=			
ANR	5258509	PtrMemberAccess	sc -> limit		5258337	0					
ANR	5258510	Identifier	sc		5258337	0					
ANR	5258511	Identifier	limit		5258337	1					
ANR	5258512	InclusiveOrExpression	( e1 & 0xffff ) | ( e2 & 0x000f0000 )		5258337	1		|			
ANR	5258513	BitAndExpression	e1 & 0xffff		5258337	0		&			
ANR	5258514	Identifier	e1		5258337	0					
ANR	5258515	PrimaryExpression	0xffff		5258337	1					
ANR	5258516	BitAndExpression	e2 & 0x000f0000		5258337	1		&			
ANR	5258517	Identifier	e2		5258337	0					
ANR	5258518	PrimaryExpression	0x000f0000		5258337	1					
ANR	5258519	IfStatement	if ( e2 & ( 1 << 23 ) )		5258337	8					
ANR	5258520	Condition	e2 & ( 1 << 23 )	55:12:846:859	5258337	0	True				
ANR	5258521	BitAndExpression	e2 & ( 1 << 23 )		5258337	0		&			
ANR	5258522	Identifier	e2		5258337	0					
ANR	5258523	ShiftExpression	1 << 23		5258337	1		<<			
ANR	5258524	PrimaryExpression	1		5258337	0					
ANR	5258525	PrimaryExpression	23		5258337	1					
ANR	5258526	ExpressionStatement	sc -> limit = ( sc -> limit << 12 ) | 0xfff	57:12:875:912	5258337	1	True				
ANR	5258527	AssignmentExpression	sc -> limit = ( sc -> limit << 12 ) | 0xfff		5258337	0		=			
ANR	5258528	PtrMemberAccess	sc -> limit		5258337	0					
ANR	5258529	Identifier	sc		5258337	0					
ANR	5258530	Identifier	limit		5258337	1					
ANR	5258531	InclusiveOrExpression	( sc -> limit << 12 ) | 0xfff		5258337	1		|			
ANR	5258532	ShiftExpression	sc -> limit << 12		5258337	0		<<			
ANR	5258533	PtrMemberAccess	sc -> limit		5258337	0					
ANR	5258534	Identifier	sc		5258337	0					
ANR	5258535	Identifier	limit		5258337	1					
ANR	5258536	PrimaryExpression	12		5258337	1					
ANR	5258537	PrimaryExpression	0xfff		5258337	1					
ANR	5258538	ExpressionStatement	sc -> seg_32bit = ( e2 >> 22 ) & 1	59:8:923:953	5258337	9	True				
ANR	5258539	AssignmentExpression	sc -> seg_32bit = ( e2 >> 22 ) & 1		5258337	0		=			
ANR	5258540	PtrMemberAccess	sc -> seg_32bit		5258337	0					
ANR	5258541	Identifier	sc		5258337	0					
ANR	5258542	Identifier	seg_32bit		5258337	1					
ANR	5258543	BitAndExpression	( e2 >> 22 ) & 1		5258337	1		&			
ANR	5258544	ShiftExpression	e2 >> 22		5258337	0		>>			
ANR	5258545	Identifier	e2		5258337	0					
ANR	5258546	PrimaryExpression	22		5258337	1					
ANR	5258547	PrimaryExpression	1		5258337	1					
ANR	5258548	ExpressionStatement	"fprintf ( logfile , ""load_seg: sel=0x%04x base=0x%08lx limit=0x%08lx seg_32bit=%d\\n"" , selector , ( unsigned long ) sc -> base , sc -> limit , sc -> seg_32bit )"	63:8:971:1132	5258337	10	True				
ANR	5258549	CallExpression	"fprintf ( logfile , ""load_seg: sel=0x%04x base=0x%08lx limit=0x%08lx seg_32bit=%d\\n"" , selector , ( unsigned long ) sc -> base , sc -> limit , sc -> seg_32bit )"		5258337	0					
ANR	5258550	Callee	fprintf		5258337	0					
ANR	5258551	Identifier	fprintf		5258337	0					
ANR	5258552	ArgumentList	logfile		5258337	1					
ANR	5258553	Argument	logfile		5258337	0					
ANR	5258554	Identifier	logfile		5258337	0					
ANR	5258555	Argument	"""load_seg: sel=0x%04x base=0x%08lx limit=0x%08lx seg_32bit=%d\\n"""		5258337	1					
ANR	5258556	PrimaryExpression	"""load_seg: sel=0x%04x base=0x%08lx limit=0x%08lx seg_32bit=%d\\n"""		5258337	0					
ANR	5258557	Argument	selector		5258337	2					
ANR	5258558	Identifier	selector		5258337	0					
ANR	5258559	Argument	( unsigned long ) sc -> base		5258337	3					
ANR	5258560	CastExpression	( unsigned long ) sc -> base		5258337	0					
ANR	5258561	CastTarget	unsigned long		5258337	0					
ANR	5258562	PtrMemberAccess	sc -> base		5258337	1					
ANR	5258563	Identifier	sc		5258337	0					
ANR	5258564	Identifier	base		5258337	1					
ANR	5258565	Argument	sc -> limit		5258337	4					
ANR	5258566	PtrMemberAccess	sc -> limit		5258337	0					
ANR	5258567	Identifier	sc		5258337	0					
ANR	5258568	Identifier	limit		5258337	1					
ANR	5258569	Argument	sc -> seg_32bit		5258337	5					
ANR	5258570	PtrMemberAccess	sc -> seg_32bit		5258337	0					
ANR	5258571	Identifier	sc		5258337	0					
ANR	5258572	Identifier	seg_32bit		5258337	1					
ANR	5258573	ReturnType	void		5258337	1					
ANR	5258574	Identifier	load_seg		5258337	2					
ANR	5258575	ParameterList	"int seg_reg , int selector"		5258337	3					
ANR	5258576	Parameter	int seg_reg	1:14:14:24	5258337	0	True				
ANR	5258577	ParameterType	int		5258337	0					
ANR	5258578	Identifier	seg_reg		5258337	1					
ANR	5258579	Parameter	int selector	1:27:27:38	5258337	1	True				
ANR	5258580	ParameterType	int		5258337	0					
ANR	5258581	Identifier	selector		5258337	1					
ANR	5258582	CFGEntryNode	ENTRY		5258337		True				
ANR	5258583	CFGExitNode	EXIT		5258337		True				
ANR	5258584	Symbol	sc -> base		5258337						
ANR	5258585	Symbol	* * env		5258337						
ANR	5258586	Symbol	* seg_reg		5258337						
ANR	5258587	Symbol	* env -> segs		5258337						
ANR	5258588	Symbol	sc		5258337						
ANR	5258589	Symbol	dt		5258337						
ANR	5258590	Symbol	env -> seg_cache		5258337						
ANR	5258591	Symbol	* sc		5258337						
ANR	5258592	Symbol	* dt		5258337						
ANR	5258593	Symbol	selector		5258337						
ANR	5258594	Symbol	sc -> limit		5258337						
ANR	5258595	Symbol	dt -> limit		5258337						
ANR	5258596	Symbol	dt -> base		5258337						
ANR	5258597	Symbol	logfile		5258337						
ANR	5258598	Symbol	* env		5258337						
ANR	5258599	Symbol	index		5258337						
ANR	5258600	Symbol	e1		5258337						
ANR	5258601	Symbol	env		5258337						
ANR	5258602	Symbol	e2		5258337						
ANR	5258603	Symbol	env -> segs		5258337						
ANR	5258604	Symbol	ptr		5258337						
ANR	5258605	Symbol	VM_MASK		5258337						
ANR	5258606	Symbol	seg_reg		5258337						
ANR	5258607	Symbol	EXCP0D_GPF		5258337						
ANR	5258608	Symbol	ldl		5258337						
ANR	5258609	Symbol	& env -> ldt		5258337						
ANR	5258610	Symbol	& env -> gdt		5258337						
ANR	5258611	Symbol	~7		5258337						
ANR	5258612	Symbol	env -> eflags		5258337						
ANR	5258613	Symbol	sc -> seg_32bit		5258337						
