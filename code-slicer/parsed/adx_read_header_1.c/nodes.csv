command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	470885	File	/home/p4ultr4n/workplace/ReVeal/raw_code/adx_read_header_1.c								
ANR	470886	Function	adx_read_header	1:0:0:1359							
ANR	470887	FunctionDef	adx_read_header (AVFormatContext * s)		470886	0					
ANR	470888	CompoundStatement		3:0:48:1359	470886	0					
ANR	470889	IdentifierDeclStatement	ADXDemuxerContext * c = s -> priv_data ;	5:4:55:90	470886	0	True				
ANR	470890	IdentifierDecl	* c = s -> priv_data		470886	0					
ANR	470891	IdentifierDeclType	ADXDemuxerContext *		470886	0					
ANR	470892	Identifier	c		470886	1					
ANR	470893	AssignmentExpression	* c = s -> priv_data		470886	2		=			
ANR	470894	Identifier	c		470886	0					
ANR	470895	PtrMemberAccess	s -> priv_data		470886	1					
ANR	470896	Identifier	s		470886	0					
ANR	470897	Identifier	priv_data		470886	1					
ANR	470898	IdentifierDeclStatement	AVCodecParameters * par ;	7:4:97:119	470886	1	True				
ANR	470899	IdentifierDecl	* par		470886	0					
ANR	470900	IdentifierDeclType	AVCodecParameters *		470886	0					
ANR	470901	Identifier	par		470886	1					
ANR	470902	IdentifierDeclStatement	"AVStream * st = avformat_new_stream ( s , NULL ) ;"	11:4:128:171	470886	2	True				
ANR	470903	IdentifierDecl	"* st = avformat_new_stream ( s , NULL )"		470886	0					
ANR	470904	IdentifierDeclType	AVStream *		470886	0					
ANR	470905	Identifier	st		470886	1					
ANR	470906	AssignmentExpression	"* st = avformat_new_stream ( s , NULL )"		470886	2		=			
ANR	470907	Identifier	st		470886	0					
ANR	470908	CallExpression	"avformat_new_stream ( s , NULL )"		470886	1					
ANR	470909	Callee	avformat_new_stream		470886	0					
ANR	470910	Identifier	avformat_new_stream		470886	0					
ANR	470911	ArgumentList	s		470886	1					
ANR	470912	Argument	s		470886	0					
ANR	470913	Identifier	s		470886	0					
ANR	470914	Argument	NULL		470886	1					
ANR	470915	Identifier	NULL		470886	0					
ANR	470916	IfStatement	if ( ! st )		470886	3					
ANR	470917	Condition	! st	13:8:182:184	470886	0	True				
ANR	470918	UnaryOperationExpression	! st		470886	0					
ANR	470919	UnaryOperator	!		470886	0					
ANR	470920	Identifier	st		470886	1					
ANR	470921	ReturnStatement	return AVERROR ( ENOMEM ) ;	15:8:196:218	470886	1	True				
ANR	470922	CallExpression	AVERROR ( ENOMEM )		470886	0					
ANR	470923	Callee	AVERROR		470886	0					
ANR	470924	Identifier	AVERROR		470886	0					
ANR	470925	ArgumentList	ENOMEM		470886	1					
ANR	470926	Argument	ENOMEM		470886	0					
ANR	470927	Identifier	ENOMEM		470886	0					
ANR	470928	ExpressionStatement	par = s -> streams [ 0 ] -> codecpar	17:4:225:254	470886	4	True				
ANR	470929	AssignmentExpression	par = s -> streams [ 0 ] -> codecpar		470886	0		=			
ANR	470930	Identifier	par		470886	0					
ANR	470931	PtrMemberAccess	s -> streams [ 0 ] -> codecpar		470886	1					
ANR	470932	ArrayIndexing	s -> streams [ 0 ]		470886	0					
ANR	470933	PtrMemberAccess	s -> streams		470886	0					
ANR	470934	Identifier	s		470886	0					
ANR	470935	Identifier	streams		470886	1					
ANR	470936	PrimaryExpression	0		470886	1					
ANR	470937	Identifier	codecpar		470886	1					
ANR	470938	IfStatement	if ( avio_rb16 ( s -> pb ) != 0x8000 )		470886	5					
ANR	470939	Condition	avio_rb16 ( s -> pb ) != 0x8000	21:8:267:292	470886	0	True				
ANR	470940	EqualityExpression	avio_rb16 ( s -> pb ) != 0x8000		470886	0		!=			
ANR	470941	CallExpression	avio_rb16 ( s -> pb )		470886	0					
ANR	470942	Callee	avio_rb16		470886	0					
ANR	470943	Identifier	avio_rb16		470886	0					
ANR	470944	ArgumentList	s -> pb		470886	1					
ANR	470945	Argument	s -> pb		470886	0					
ANR	470946	PtrMemberAccess	s -> pb		470886	0					
ANR	470947	Identifier	s		470886	0					
ANR	470948	Identifier	pb		470886	1					
ANR	470949	PrimaryExpression	0x8000		470886	1					
ANR	470950	ReturnStatement	return AVERROR_INVALIDDATA ;	23:8:304:330	470886	1	True				
ANR	470951	Identifier	AVERROR_INVALIDDATA		470886	0					
ANR	470952	ExpressionStatement	c -> header_size = avio_rb16 ( s -> pb ) + 4	25:4:337:374	470886	6	True				
ANR	470953	AssignmentExpression	c -> header_size = avio_rb16 ( s -> pb ) + 4		470886	0		=			
ANR	470954	PtrMemberAccess	c -> header_size		470886	0					
ANR	470955	Identifier	c		470886	0					
ANR	470956	Identifier	header_size		470886	1					
ANR	470957	AdditiveExpression	avio_rb16 ( s -> pb ) + 4		470886	1		+			
ANR	470958	CallExpression	avio_rb16 ( s -> pb )		470886	0					
ANR	470959	Callee	avio_rb16		470886	0					
ANR	470960	Identifier	avio_rb16		470886	0					
ANR	470961	ArgumentList	s -> pb		470886	1					
ANR	470962	Argument	s -> pb		470886	0					
ANR	470963	PtrMemberAccess	s -> pb		470886	0					
ANR	470964	Identifier	s		470886	0					
ANR	470965	Identifier	pb		470886	1					
ANR	470966	PrimaryExpression	4		470886	1					
ANR	470967	ExpressionStatement	"avio_seek ( s -> pb , - 4 , SEEK_CUR )"	27:4:381:411	470886	7	True				
ANR	470968	CallExpression	"avio_seek ( s -> pb , - 4 , SEEK_CUR )"		470886	0					
ANR	470969	Callee	avio_seek		470886	0					
ANR	470970	Identifier	avio_seek		470886	0					
ANR	470971	ArgumentList	s -> pb		470886	1					
ANR	470972	Argument	s -> pb		470886	0					
ANR	470973	PtrMemberAccess	s -> pb		470886	0					
ANR	470974	Identifier	s		470886	0					
ANR	470975	Identifier	pb		470886	1					
ANR	470976	Argument	- 4		470886	1					
ANR	470977	UnaryOperationExpression	- 4		470886	0					
ANR	470978	UnaryOperator	-		470886	0					
ANR	470979	PrimaryExpression	4		470886	1					
ANR	470980	Argument	SEEK_CUR		470886	2					
ANR	470981	Identifier	SEEK_CUR		470886	0					
ANR	470982	IfStatement	"if ( ff_get_extradata ( s , par , s -> pb , c -> header_size ) < 0 )"		470886	8					
ANR	470983	Condition	"ff_get_extradata ( s , par , s -> pb , c -> header_size ) < 0"	31:8:424:474	470886	0	True				
ANR	470984	RelationalExpression	"ff_get_extradata ( s , par , s -> pb , c -> header_size ) < 0"		470886	0		<			
ANR	470985	CallExpression	"ff_get_extradata ( s , par , s -> pb , c -> header_size )"		470886	0					
ANR	470986	Callee	ff_get_extradata		470886	0					
ANR	470987	Identifier	ff_get_extradata		470886	0					
ANR	470988	ArgumentList	s		470886	1					
ANR	470989	Argument	s		470886	0					
ANR	470990	Identifier	s		470886	0					
ANR	470991	Argument	par		470886	1					
ANR	470992	Identifier	par		470886	0					
ANR	470993	Argument	s -> pb		470886	2					
ANR	470994	PtrMemberAccess	s -> pb		470886	0					
ANR	470995	Identifier	s		470886	0					
ANR	470996	Identifier	pb		470886	1					
ANR	470997	Argument	c -> header_size		470886	3					
ANR	470998	PtrMemberAccess	c -> header_size		470886	0					
ANR	470999	Identifier	c		470886	0					
ANR	471000	Identifier	header_size		470886	1					
ANR	471001	PrimaryExpression	0		470886	1					
ANR	471002	ReturnStatement	return AVERROR ( ENOMEM ) ;	33:8:486:508	470886	1	True				
ANR	471003	CallExpression	AVERROR ( ENOMEM )		470886	0					
ANR	471004	Callee	AVERROR		470886	0					
ANR	471005	Identifier	AVERROR		470886	0					
ANR	471006	ArgumentList	ENOMEM		470886	1					
ANR	471007	Argument	ENOMEM		470886	0					
ANR	471008	Identifier	ENOMEM		470886	0					
ANR	471009	IfStatement	if ( par -> extradata_size < 12 )		470886	9					
ANR	471010	Condition	par -> extradata_size < 12	37:8:521:544	470886	0	True				
ANR	471011	RelationalExpression	par -> extradata_size < 12		470886	0		<			
ANR	471012	PtrMemberAccess	par -> extradata_size		470886	0					
ANR	471013	Identifier	par		470886	0					
ANR	471014	Identifier	extradata_size		470886	1					
ANR	471015	PrimaryExpression	12		470886	1					
ANR	471016	CompoundStatement		35:34:498:498	470886	1					
ANR	471017	ExpressionStatement	"av_log ( s , AV_LOG_ERROR , ""Invalid extradata size.\\n"" )"	39:8:558:610	470886	0	True				
ANR	471018	CallExpression	"av_log ( s , AV_LOG_ERROR , ""Invalid extradata size.\\n"" )"		470886	0					
ANR	471019	Callee	av_log		470886	0					
ANR	471020	Identifier	av_log		470886	0					
ANR	471021	ArgumentList	s		470886	1					
ANR	471022	Argument	s		470886	0					
ANR	471023	Identifier	s		470886	0					
ANR	471024	Argument	AV_LOG_ERROR		470886	1					
ANR	471025	Identifier	AV_LOG_ERROR		470886	0					
ANR	471026	Argument	"""Invalid extradata size.\\n"""		470886	2					
ANR	471027	PrimaryExpression	"""Invalid extradata size.\\n"""		470886	0					
ANR	471028	ReturnStatement	return AVERROR_INVALIDDATA ;	41:8:621:647	470886	1	True				
ANR	471029	Identifier	AVERROR_INVALIDDATA		470886	0					
ANR	471030	ExpressionStatement	par -> channels = AV_RB8 ( par -> extradata + 7 )	45:4:661:707	470886	10	True				
ANR	471031	AssignmentExpression	par -> channels = AV_RB8 ( par -> extradata + 7 )		470886	0		=			
ANR	471032	PtrMemberAccess	par -> channels		470886	0					
ANR	471033	Identifier	par		470886	0					
ANR	471034	Identifier	channels		470886	1					
ANR	471035	CallExpression	AV_RB8 ( par -> extradata + 7 )		470886	1					
ANR	471036	Callee	AV_RB8		470886	0					
ANR	471037	Identifier	AV_RB8		470886	0					
ANR	471038	ArgumentList	par -> extradata + 7		470886	1					
ANR	471039	Argument	par -> extradata + 7		470886	0					
ANR	471040	AdditiveExpression	par -> extradata + 7		470886	0		+			
ANR	471041	PtrMemberAccess	par -> extradata		470886	0					
ANR	471042	Identifier	par		470886	0					
ANR	471043	Identifier	extradata		470886	1					
ANR	471044	PrimaryExpression	7		470886	1					
ANR	471045	ExpressionStatement	par -> sample_rate = AV_RB32 ( par -> extradata + 8 )	47:4:714:760	470886	11	True				
ANR	471046	AssignmentExpression	par -> sample_rate = AV_RB32 ( par -> extradata + 8 )		470886	0		=			
ANR	471047	PtrMemberAccess	par -> sample_rate		470886	0					
ANR	471048	Identifier	par		470886	0					
ANR	471049	Identifier	sample_rate		470886	1					
ANR	471050	CallExpression	AV_RB32 ( par -> extradata + 8 )		470886	1					
ANR	471051	Callee	AV_RB32		470886	0					
ANR	471052	Identifier	AV_RB32		470886	0					
ANR	471053	ArgumentList	par -> extradata + 8		470886	1					
ANR	471054	Argument	par -> extradata + 8		470886	0					
ANR	471055	AdditiveExpression	par -> extradata + 8		470886	0		+			
ANR	471056	PtrMemberAccess	par -> extradata		470886	0					
ANR	471057	Identifier	par		470886	0					
ANR	471058	Identifier	extradata		470886	1					
ANR	471059	PrimaryExpression	8		470886	1					
ANR	471060	IfStatement	if ( par -> channels <= 0 )		470886	12					
ANR	471061	Condition	par -> channels <= 0	51:8:773:790	470886	0	True				
ANR	471062	RelationalExpression	par -> channels <= 0		470886	0		<=			
ANR	471063	PtrMemberAccess	par -> channels		470886	0					
ANR	471064	Identifier	par		470886	0					
ANR	471065	Identifier	channels		470886	1					
ANR	471066	PrimaryExpression	0		470886	1					
ANR	471067	CompoundStatement		49:28:744:744	470886	1					
ANR	471068	ExpressionStatement	"av_log ( s , AV_LOG_ERROR , ""invalid number of channels %d\\n"" , par -> channels )"	53:8:804:877	470886	0	True				
ANR	471069	CallExpression	"av_log ( s , AV_LOG_ERROR , ""invalid number of channels %d\\n"" , par -> channels )"		470886	0					
ANR	471070	Callee	av_log		470886	0					
ANR	471071	Identifier	av_log		470886	0					
ANR	471072	ArgumentList	s		470886	1					
ANR	471073	Argument	s		470886	0					
ANR	471074	Identifier	s		470886	0					
ANR	471075	Argument	AV_LOG_ERROR		470886	1					
ANR	471076	Identifier	AV_LOG_ERROR		470886	0					
ANR	471077	Argument	"""invalid number of channels %d\\n"""		470886	2					
ANR	471078	PrimaryExpression	"""invalid number of channels %d\\n"""		470886	0					
ANR	471079	Argument	par -> channels		470886	3					
ANR	471080	PtrMemberAccess	par -> channels		470886	0					
ANR	471081	Identifier	par		470886	0					
ANR	471082	Identifier	channels		470886	1					
ANR	471083	ReturnStatement	return AVERROR_INVALIDDATA ;	55:8:888:914	470886	1	True				
ANR	471084	Identifier	AVERROR_INVALIDDATA		470886	0					
ANR	471085	IfStatement	if ( par -> sample_rate <= 0 )		470886	13					
ANR	471086	Condition	par -> sample_rate <= 0	61:8:934:954	470886	0	True				
ANR	471087	RelationalExpression	par -> sample_rate <= 0		470886	0		<=			
ANR	471088	PtrMemberAccess	par -> sample_rate		470886	0					
ANR	471089	Identifier	par		470886	0					
ANR	471090	Identifier	sample_rate		470886	1					
ANR	471091	PrimaryExpression	0		470886	1					
ANR	471092	CompoundStatement		59:31:908:908	470886	1					
ANR	471093	ExpressionStatement	"av_log ( s , AV_LOG_ERROR , ""Invalid sample rate %d\\n"" , par -> sample_rate )"	63:8:968:1037	470886	0	True				
ANR	471094	CallExpression	"av_log ( s , AV_LOG_ERROR , ""Invalid sample rate %d\\n"" , par -> sample_rate )"		470886	0					
ANR	471095	Callee	av_log		470886	0					
ANR	471096	Identifier	av_log		470886	0					
ANR	471097	ArgumentList	s		470886	1					
ANR	471098	Argument	s		470886	0					
ANR	471099	Identifier	s		470886	0					
ANR	471100	Argument	AV_LOG_ERROR		470886	1					
ANR	471101	Identifier	AV_LOG_ERROR		470886	0					
ANR	471102	Argument	"""Invalid sample rate %d\\n"""		470886	2					
ANR	471103	PrimaryExpression	"""Invalid sample rate %d\\n"""		470886	0					
ANR	471104	Argument	par -> sample_rate		470886	3					
ANR	471105	PtrMemberAccess	par -> sample_rate		470886	0					
ANR	471106	Identifier	par		470886	0					
ANR	471107	Identifier	sample_rate		470886	1					
ANR	471108	ReturnStatement	return AVERROR_INVALIDDATA ;	65:8:1048:1074	470886	1	True				
ANR	471109	Identifier	AVERROR_INVALIDDATA		470886	0					
ANR	471110	ExpressionStatement	par -> codec_type = AVMEDIA_TYPE_AUDIO	71:4:1090:1127	470886	14	True				
ANR	471111	AssignmentExpression	par -> codec_type = AVMEDIA_TYPE_AUDIO		470886	0		=			
ANR	471112	PtrMemberAccess	par -> codec_type		470886	0					
ANR	471113	Identifier	par		470886	0					
ANR	471114	Identifier	codec_type		470886	1					
ANR	471115	Identifier	AVMEDIA_TYPE_AUDIO		470886	1					
ANR	471116	ExpressionStatement	par -> codec_id = s -> iformat -> raw_codec_id	73:4:1134:1177	470886	15	True				
ANR	471117	AssignmentExpression	par -> codec_id = s -> iformat -> raw_codec_id		470886	0		=			
ANR	471118	PtrMemberAccess	par -> codec_id		470886	0					
ANR	471119	Identifier	par		470886	0					
ANR	471120	Identifier	codec_id		470886	1					
ANR	471121	PtrMemberAccess	s -> iformat -> raw_codec_id		470886	1					
ANR	471122	PtrMemberAccess	s -> iformat		470886	0					
ANR	471123	Identifier	s		470886	0					
ANR	471124	Identifier	iformat		470886	1					
ANR	471125	Identifier	raw_codec_id		470886	1					
ANR	471126	Statement	par	75:4:1184:1186	470886	16	True				
ANR	471127	Statement	->	75:7:1187:1188	470886	17	True				
ANR	471128	Statement	bit_rate	75:9:1189:1196	470886	18	True				
ANR	471129	Statement	=	75:21:1201:1201	470886	19	True				
ANR	471130	Statement	par	75:23:1203:1205	470886	20	True				
ANR	471131	Statement	->	75:26:1206:1207	470886	21	True				
ANR	471132	Statement	sample_rate	75:28:1208:1218	470886	22	True				
ANR	471133	Statement	*	75:40:1220:1220	470886	23	True				
ANR	471134	Statement	par	75:42:1222:1224	470886	24	True				
ANR	471135	Statement	->	75:45:1225:1226	470886	25	True				
ANR	471136	Statement	channels	75:47:1227:1234	470886	26	True				
ANR	471137	Statement	*	75:56:1236:1236	470886	27	True				
ANR	471138	Statement	BLOCK_SIZE	75:58:1238:1247	470886	28	True				
ANR	471139	Statement	*	75:69:1249:1249	470886	29	True				
ANR	471140	Statement	8L	75:71:1251:1252	470886	30	True				
ANR	471141	ExpressionStatement	L / BLOCK_SAMPLES	75:73:1253:1270	470886	31	True				
ANR	471142	MultiplicativeExpression	L / BLOCK_SAMPLES		470886	0		/			
ANR	471143	Identifier	L		470886	0					
ANR	471144	Identifier	BLOCK_SAMPLES		470886	1					
ANR	471145	ExpressionStatement	"avpriv_set_pts_info ( st , 64 , BLOCK_SAMPLES , par -> sample_rate )"	79:4:1279:1339	470886	32	True				
ANR	471146	CallExpression	"avpriv_set_pts_info ( st , 64 , BLOCK_SAMPLES , par -> sample_rate )"		470886	0					
ANR	471147	Callee	avpriv_set_pts_info		470886	0					
ANR	471148	Identifier	avpriv_set_pts_info		470886	0					
ANR	471149	ArgumentList	st		470886	1					
ANR	471150	Argument	st		470886	0					
ANR	471151	Identifier	st		470886	0					
ANR	471152	Argument	64		470886	1					
ANR	471153	PrimaryExpression	64		470886	0					
ANR	471154	Argument	BLOCK_SAMPLES		470886	2					
ANR	471155	Identifier	BLOCK_SAMPLES		470886	0					
ANR	471156	Argument	par -> sample_rate		470886	3					
ANR	471157	PtrMemberAccess	par -> sample_rate		470886	0					
ANR	471158	Identifier	par		470886	0					
ANR	471159	Identifier	sample_rate		470886	1					
ANR	471160	ReturnStatement	return 0 ;	83:4:1348:1356	470886	33	True				
ANR	471161	PrimaryExpression	0		470886	0					
ANR	471162	ReturnType	static int		470886	1					
ANR	471163	Identifier	adx_read_header		470886	2					
ANR	471164	ParameterList	AVFormatContext * s		470886	3					
ANR	471165	Parameter	AVFormatContext * s	1:27:27:44	470886	0	True				
ANR	471166	ParameterType	AVFormatContext *		470886	0					
ANR	471167	Identifier	s		470886	1					
ANR	471168	CFGEntryNode	ENTRY		470886		True				
ANR	471169	CFGExitNode	EXIT		470886		True				
ANR	471170	Symbol	ENOMEM		470886						
ANR	471171	Symbol	SEEK_CUR		470886						
ANR	471172	Symbol	* * s -> streams		470886						
ANR	471173	Symbol	AVMEDIA_TYPE_AUDIO		470886						
ANR	471174	Symbol	s -> streams		470886						
ANR	471175	Symbol	BLOCK_SAMPLES		470886						
ANR	471176	Symbol	s -> streams [ 0 ] -> codecpar		470886						
ANR	471177	Symbol	s -> pb		470886						
ANR	471178	Symbol	* par		470886						
ANR	471179	Symbol	AV_RB32		470886						
ANR	471180	Symbol	avformat_new_stream		470886						
ANR	471181	Symbol	par -> extradata_size		470886						
ANR	471182	Symbol	* * s		470886						
ANR	471183	Symbol	* s -> streams		470886						
ANR	471184	Symbol	par -> codec_id		470886						
ANR	471185	Symbol	s -> priv_data		470886						
ANR	471186	Symbol	par		470886						
ANR	471187	Symbol	st		470886						
ANR	471188	Symbol	c		470886						
ANR	471189	Symbol	NULL		470886						
ANR	471190	Symbol	s -> iformat -> raw_codec_id		470886						
ANR	471191	Symbol	* s -> iformat		470886						
ANR	471192	Symbol	ff_get_extradata		470886						
ANR	471193	Symbol	AV_LOG_ERROR		470886						
ANR	471194	Symbol	par -> channels		470886						
ANR	471195	Symbol	par -> sample_rate		470886						
ANR	471196	Symbol	* c		470886						
ANR	471197	Symbol	AV_RB8		470886						
ANR	471198	Symbol	s -> iformat		470886						
ANR	471199	Symbol	* * * s		470886						
ANR	471200	Symbol	s		470886						
ANR	471201	Symbol	c -> header_size		470886						
ANR	471202	Symbol	par -> extradata		470886						
ANR	471203	Symbol	avio_rb16		470886						
ANR	471204	Symbol	AVERROR_INVALIDDATA		470886						
ANR	471205	Symbol	AVERROR		470886						
ANR	471206	Symbol	par -> codec_type		470886						
ANR	471207	Symbol	* s		470886						
