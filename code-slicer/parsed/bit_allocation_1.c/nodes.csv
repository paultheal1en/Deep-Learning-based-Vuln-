command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1043513	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bit_allocation_1.c								
ANR	1043514	Function	bit_allocation	1:0:0:4727							
ANR	1043515	FunctionDef	"bit_allocation (IMCContext * q , IMCChannel * chctx , int stream_format_code , int freebits , int flag)"		1043514	0					
ANR	1043516	CompoundStatement		3:0:134:4727	1043514	0					
ANR	1043517	IdentifierDeclStatement	"int i , j ;"	4:4:140:148	1043514	0	True				
ANR	1043518	IdentifierDecl	i		1043514	0					
ANR	1043519	IdentifierDeclType	int		1043514	0					
ANR	1043520	Identifier	i		1043514	1					
ANR	1043521	IdentifierDecl	j		1043514	1					
ANR	1043522	IdentifierDeclType	int		1043514	0					
ANR	1043523	Identifier	j		1043514	1					
ANR	1043524	IdentifierDeclStatement	const float limit = - 1.e20 ;	5:4:154:180	1043514	1	True				
ANR	1043525	IdentifierDecl	limit = - 1.e20		1043514	0					
ANR	1043526	IdentifierDeclType	const float		1043514	0					
ANR	1043527	Identifier	limit		1043514	1					
ANR	1043528	AssignmentExpression	limit = - 1.e20		1043514	2		=			
ANR	1043529	Identifier	limit		1043514	0					
ANR	1043530	UnaryOperationExpression	- 1.e20		1043514	1					
ANR	1043531	UnaryOperator	-		1043514	0					
ANR	1043532	PrimaryExpression	1.e20		1043514	1					
ANR	1043533	IdentifierDeclStatement	float highest = 0.0 ;	6:4:186:205	1043514	2	True				
ANR	1043534	IdentifierDecl	highest = 0.0		1043514	0					
ANR	1043535	IdentifierDeclType	float		1043514	0					
ANR	1043536	Identifier	highest		1043514	1					
ANR	1043537	AssignmentExpression	highest = 0.0		1043514	2		=			
ANR	1043538	Identifier	highest		1043514	0					
ANR	1043539	PrimaryExpression	0.0		1043514	1					
ANR	1043540	IdentifierDeclStatement	int indx ;	7:4:211:219	1043514	3	True				
ANR	1043541	IdentifierDecl	indx		1043514	0					
ANR	1043542	IdentifierDeclType	int		1043514	0					
ANR	1043543	Identifier	indx		1043514	1					
ANR	1043544	IdentifierDeclStatement	int t1 = 0 ;	8:4:225:235	1043514	4	True				
ANR	1043545	IdentifierDecl	t1 = 0		1043514	0					
ANR	1043546	IdentifierDeclType	int		1043514	0					
ANR	1043547	Identifier	t1		1043514	1					
ANR	1043548	AssignmentExpression	t1 = 0		1043514	2		=			
ANR	1043549	Identifier	t1		1043514	0					
ANR	1043550	PrimaryExpression	0		1043514	1					
ANR	1043551	IdentifierDeclStatement	int t2 = 1 ;	9:4:241:251	1043514	5	True				
ANR	1043552	IdentifierDecl	t2 = 1		1043514	0					
ANR	1043553	IdentifierDeclType	int		1043514	0					
ANR	1043554	Identifier	t2		1043514	1					
ANR	1043555	AssignmentExpression	t2 = 1		1043514	2		=			
ANR	1043556	Identifier	t2		1043514	0					
ANR	1043557	PrimaryExpression	1		1043514	1					
ANR	1043558	IdentifierDeclStatement	float summa = 0.0 ;	10:4:257:274	1043514	6	True				
ANR	1043559	IdentifierDecl	summa = 0.0		1043514	0					
ANR	1043560	IdentifierDeclType	float		1043514	0					
ANR	1043561	Identifier	summa		1043514	1					
ANR	1043562	AssignmentExpression	summa = 0.0		1043514	2		=			
ANR	1043563	Identifier	summa		1043514	0					
ANR	1043564	PrimaryExpression	0.0		1043514	1					
ANR	1043565	IdentifierDeclStatement	int iacc = 0 ;	11:4:280:292	1043514	7	True				
ANR	1043566	IdentifierDecl	iacc = 0		1043514	0					
ANR	1043567	IdentifierDeclType	int		1043514	0					
ANR	1043568	Identifier	iacc		1043514	1					
ANR	1043569	AssignmentExpression	iacc = 0		1043514	2		=			
ANR	1043570	Identifier	iacc		1043514	0					
ANR	1043571	PrimaryExpression	0		1043514	1					
ANR	1043572	IdentifierDeclStatement	int summer = 0 ;	12:4:298:312	1043514	8	True				
ANR	1043573	IdentifierDecl	summer = 0		1043514	0					
ANR	1043574	IdentifierDeclType	int		1043514	0					
ANR	1043575	Identifier	summer		1043514	1					
ANR	1043576	AssignmentExpression	summer = 0		1043514	2		=			
ANR	1043577	Identifier	summer		1043514	0					
ANR	1043578	PrimaryExpression	0		1043514	1					
ANR	1043579	IdentifierDeclStatement	"int rres , cwlen ;"	13:4:318:333	1043514	9	True				
ANR	1043580	IdentifierDecl	rres		1043514	0					
ANR	1043581	IdentifierDeclType	int		1043514	0					
ANR	1043582	Identifier	rres		1043514	1					
ANR	1043583	IdentifierDecl	cwlen		1043514	1					
ANR	1043584	IdentifierDeclType	int		1043514	0					
ANR	1043585	Identifier	cwlen		1043514	1					
ANR	1043586	IdentifierDeclStatement	float lowest = 1.e10 ;	14:4:339:359	1043514	10	True				
ANR	1043587	IdentifierDecl	lowest = 1.e10		1043514	0					
ANR	1043588	IdentifierDeclType	float		1043514	0					
ANR	1043589	Identifier	lowest		1043514	1					
ANR	1043590	AssignmentExpression	lowest = 1.e10		1043514	2		=			
ANR	1043591	Identifier	lowest		1043514	0					
ANR	1043592	PrimaryExpression	1.e10		1043514	1					
ANR	1043593	IdentifierDeclStatement	int low_indx = 0 ;	15:4:365:381	1043514	11	True				
ANR	1043594	IdentifierDecl	low_indx = 0		1043514	0					
ANR	1043595	IdentifierDeclType	int		1043514	0					
ANR	1043596	Identifier	low_indx		1043514	1					
ANR	1043597	AssignmentExpression	low_indx = 0		1043514	2		=			
ANR	1043598	Identifier	low_indx		1043514	0					
ANR	1043599	PrimaryExpression	0		1043514	1					
ANR	1043600	IdentifierDeclStatement	float workT [ 32 ] ;	16:4:387:402	1043514	12	True				
ANR	1043601	IdentifierDecl	workT [ 32 ]		1043514	0					
ANR	1043602	IdentifierDeclType	float [ 32 ]		1043514	0					
ANR	1043603	Identifier	workT		1043514	1					
ANR	1043604	PrimaryExpression	32		1043514	2					
ANR	1043605	IdentifierDeclStatement	int flg ;	17:4:408:415	1043514	13	True				
ANR	1043606	IdentifierDecl	flg		1043514	0					
ANR	1043607	IdentifierDeclType	int		1043514	0					
ANR	1043608	Identifier	flg		1043514	1					
ANR	1043609	IdentifierDeclStatement	int found_indx = 0 ;	18:4:421:439	1043514	14	True				
ANR	1043610	IdentifierDecl	found_indx = 0		1043514	0					
ANR	1043611	IdentifierDeclType	int		1043514	0					
ANR	1043612	Identifier	found_indx		1043514	1					
ANR	1043613	AssignmentExpression	found_indx = 0		1043514	2		=			
ANR	1043614	Identifier	found_indx		1043514	0					
ANR	1043615	PrimaryExpression	0		1043514	1					
ANR	1043616	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		1043514	15					
ANR	1043617	ForInit	i = 0 ;	19:9:450:455	1043514	0	True				
ANR	1043618	AssignmentExpression	i = 0		1043514	0		=			
ANR	1043619	Identifier	i		1043514	0					
ANR	1043620	PrimaryExpression	0		1043514	1					
ANR	1043621	Condition	i < BANDS	19:16:457:465	1043514	1	True				
ANR	1043622	RelationalExpression	i < BANDS		1043514	0		<			
ANR	1043623	Identifier	i		1043514	0					
ANR	1043624	Identifier	BANDS		1043514	1					
ANR	1043625	PostIncDecOperationExpression	i ++	19:27:468:470	1043514	2	True				
ANR	1043626	Identifier	i		1043514	0					
ANR	1043627	IncDec	++		1043514	1					
ANR	1043628	ExpressionStatement	"highest = FFMAX ( highest , chctx -> flcoeffs1 [ i ] )"	20:8:481:526	1043514	3	True				
ANR	1043629	AssignmentExpression	"highest = FFMAX ( highest , chctx -> flcoeffs1 [ i ] )"		1043514	0		=			
ANR	1043630	Identifier	highest		1043514	0					
ANR	1043631	CallExpression	"FFMAX ( highest , chctx -> flcoeffs1 [ i ] )"		1043514	1					
ANR	1043632	Callee	FFMAX		1043514	0					
ANR	1043633	Identifier	FFMAX		1043514	0					
ANR	1043634	ArgumentList	highest		1043514	1					
ANR	1043635	Argument	highest		1043514	0					
ANR	1043636	Identifier	highest		1043514	0					
ANR	1043637	Argument	chctx -> flcoeffs1 [ i ]		1043514	1					
ANR	1043638	ArrayIndexing	chctx -> flcoeffs1 [ i ]		1043514	0					
ANR	1043639	PtrMemberAccess	chctx -> flcoeffs1		1043514	0					
ANR	1043640	Identifier	chctx		1043514	0					
ANR	1043641	Identifier	flcoeffs1		1043514	1					
ANR	1043642	Identifier	i		1043514	1					
ANR	1043643	ForStatement	for ( i = 0 ; i < BANDS - 1 ; i ++ )		1043514	16					
ANR	1043644	ForInit	i = 0 ;	21:9:537:542	1043514	0	True				
ANR	1043645	AssignmentExpression	i = 0		1043514	0		=			
ANR	1043646	Identifier	i		1043514	0					
ANR	1043647	PrimaryExpression	0		1043514	1					
ANR	1043648	Condition	i < BANDS - 1	21:16:544:556	1043514	1	True				
ANR	1043649	RelationalExpression	i < BANDS - 1		1043514	0		<			
ANR	1043650	Identifier	i		1043514	0					
ANR	1043651	AdditiveExpression	BANDS - 1		1043514	1		-			
ANR	1043652	Identifier	BANDS		1043514	0					
ANR	1043653	PrimaryExpression	1		1043514	1					
ANR	1043654	PostIncDecOperationExpression	i ++	21:31:559:561	1043514	2	True				
ANR	1043655	Identifier	i		1043514	0					
ANR	1043656	IncDec	++		1043514	1					
ANR	1043657	ExpressionStatement	chctx -> flcoeffs4 [ i ] = chctx -> flcoeffs3 [ i ] - log2f ( chctx -> flcoeffs5 [ i ] )	22:8:572:642	1043514	3	True				
ANR	1043658	AssignmentExpression	chctx -> flcoeffs4 [ i ] = chctx -> flcoeffs3 [ i ] - log2f ( chctx -> flcoeffs5 [ i ] )		1043514	0		=			
ANR	1043659	ArrayIndexing	chctx -> flcoeffs4 [ i ]		1043514	0					
ANR	1043660	PtrMemberAccess	chctx -> flcoeffs4		1043514	0					
ANR	1043661	Identifier	chctx		1043514	0					
ANR	1043662	Identifier	flcoeffs4		1043514	1					
ANR	1043663	Identifier	i		1043514	1					
ANR	1043664	AdditiveExpression	chctx -> flcoeffs3 [ i ] - log2f ( chctx -> flcoeffs5 [ i ] )		1043514	1		-			
ANR	1043665	ArrayIndexing	chctx -> flcoeffs3 [ i ]		1043514	0					
ANR	1043666	PtrMemberAccess	chctx -> flcoeffs3		1043514	0					
ANR	1043667	Identifier	chctx		1043514	0					
ANR	1043668	Identifier	flcoeffs3		1043514	1					
ANR	1043669	Identifier	i		1043514	1					
ANR	1043670	CallExpression	log2f ( chctx -> flcoeffs5 [ i ] )		1043514	1					
ANR	1043671	Callee	log2f		1043514	0					
ANR	1043672	Identifier	log2f		1043514	0					
ANR	1043673	ArgumentList	chctx -> flcoeffs5 [ i ]		1043514	1					
ANR	1043674	Argument	chctx -> flcoeffs5 [ i ]		1043514	0					
ANR	1043675	ArrayIndexing	chctx -> flcoeffs5 [ i ]		1043514	0					
ANR	1043676	PtrMemberAccess	chctx -> flcoeffs5		1043514	0					
ANR	1043677	Identifier	chctx		1043514	0					
ANR	1043678	Identifier	flcoeffs5		1043514	1					
ANR	1043679	Identifier	i		1043514	1					
ANR	1043680	ExpressionStatement	chctx -> flcoeffs4 [ BANDS - 1 ] = limit	23:4:648:683	1043514	17	True				
ANR	1043681	AssignmentExpression	chctx -> flcoeffs4 [ BANDS - 1 ] = limit		1043514	0		=			
ANR	1043682	ArrayIndexing	chctx -> flcoeffs4 [ BANDS - 1 ]		1043514	0					
ANR	1043683	PtrMemberAccess	chctx -> flcoeffs4		1043514	0					
ANR	1043684	Identifier	chctx		1043514	0					
ANR	1043685	Identifier	flcoeffs4		1043514	1					
ANR	1043686	AdditiveExpression	BANDS - 1		1043514	1		-			
ANR	1043687	Identifier	BANDS		1043514	0					
ANR	1043688	PrimaryExpression	1		1043514	1					
ANR	1043689	Identifier	limit		1043514	1					
ANR	1043690	ExpressionStatement	highest = highest * 0.25	24:4:689:713	1043514	18	True				
ANR	1043691	AssignmentExpression	highest = highest * 0.25		1043514	0		=			
ANR	1043692	Identifier	highest		1043514	0					
ANR	1043693	MultiplicativeExpression	highest * 0.25		1043514	1		*			
ANR	1043694	Identifier	highest		1043514	0					
ANR	1043695	PrimaryExpression	0.25		1043514	1					
ANR	1043696	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		1043514	19					
ANR	1043697	ForInit	i = 0 ;	25:9:724:729	1043514	0	True				
ANR	1043698	AssignmentExpression	i = 0		1043514	0		=			
ANR	1043699	Identifier	i		1043514	0					
ANR	1043700	PrimaryExpression	0		1043514	1					
ANR	1043701	Condition	i < BANDS	25:16:731:739	1043514	1	True				
ANR	1043702	RelationalExpression	i < BANDS		1043514	0		<			
ANR	1043703	Identifier	i		1043514	0					
ANR	1043704	Identifier	BANDS		1043514	1					
ANR	1043705	PostIncDecOperationExpression	i ++	25:27:742:744	1043514	2	True				
ANR	1043706	Identifier	i		1043514	0					
ANR	1043707	IncDec	++		1043514	1					
ANR	1043708	CompoundStatement		23:32:612:612	1043514	3					
ANR	1043709	ExpressionStatement	indx = - 1	26:8:757:766	1043514	0	True				
ANR	1043710	AssignmentExpression	indx = - 1		1043514	0		=			
ANR	1043711	Identifier	indx		1043514	0					
ANR	1043712	UnaryOperationExpression	- 1		1043514	1					
ANR	1043713	UnaryOperator	-		1043514	0					
ANR	1043714	PrimaryExpression	1		1043514	1					
ANR	1043715	IfStatement	if ( ( band_tab [ i + 1 ] - band_tab [ i ] ) == chctx -> bandWidthT [ i ] )		1043514	1					
ANR	1043716	Condition	( band_tab [ i + 1 ] - band_tab [ i ] ) == chctx -> bandWidthT [ i ]	27:12:780:834	1043514	0	True				
ANR	1043717	EqualityExpression	( band_tab [ i + 1 ] - band_tab [ i ] ) == chctx -> bandWidthT [ i ]		1043514	0		==			
ANR	1043718	AdditiveExpression	band_tab [ i + 1 ] - band_tab [ i ]		1043514	0		-			
ANR	1043719	ArrayIndexing	band_tab [ i + 1 ]		1043514	0					
ANR	1043720	Identifier	band_tab		1043514	0					
ANR	1043721	AdditiveExpression	i + 1		1043514	1		+			
ANR	1043722	Identifier	i		1043514	0					
ANR	1043723	PrimaryExpression	1		1043514	1					
ANR	1043724	ArrayIndexing	band_tab [ i ]		1043514	1					
ANR	1043725	Identifier	band_tab		1043514	0					
ANR	1043726	Identifier	i		1043514	1					
ANR	1043727	ArrayIndexing	chctx -> bandWidthT [ i ]		1043514	1					
ANR	1043728	PtrMemberAccess	chctx -> bandWidthT		1043514	0					
ANR	1043729	Identifier	chctx		1043514	0					
ANR	1043730	Identifier	bandWidthT		1043514	1					
ANR	1043731	Identifier	i		1043514	1					
ANR	1043732	ExpressionStatement	indx = 0	28:12:849:857	1043514	1	True				
ANR	1043733	AssignmentExpression	indx = 0		1043514	0		=			
ANR	1043734	Identifier	indx		1043514	0					
ANR	1043735	PrimaryExpression	0		1043514	1					
ANR	1043736	IfStatement	if ( ( band_tab [ i + 1 ] - band_tab [ i ] ) > chctx -> bandWidthT [ i ] )		1043514	2					
ANR	1043737	Condition	( band_tab [ i + 1 ] - band_tab [ i ] ) > chctx -> bandWidthT [ i ]	29:12:871:924	1043514	0	True				
ANR	1043738	RelationalExpression	( band_tab [ i + 1 ] - band_tab [ i ] ) > chctx -> bandWidthT [ i ]		1043514	0		>			
ANR	1043739	AdditiveExpression	band_tab [ i + 1 ] - band_tab [ i ]		1043514	0		-			
ANR	1043740	ArrayIndexing	band_tab [ i + 1 ]		1043514	0					
ANR	1043741	Identifier	band_tab		1043514	0					
ANR	1043742	AdditiveExpression	i + 1		1043514	1		+			
ANR	1043743	Identifier	i		1043514	0					
ANR	1043744	PrimaryExpression	1		1043514	1					
ANR	1043745	ArrayIndexing	band_tab [ i ]		1043514	1					
ANR	1043746	Identifier	band_tab		1043514	0					
ANR	1043747	Identifier	i		1043514	1					
ANR	1043748	ArrayIndexing	chctx -> bandWidthT [ i ]		1043514	1					
ANR	1043749	PtrMemberAccess	chctx -> bandWidthT		1043514	0					
ANR	1043750	Identifier	chctx		1043514	0					
ANR	1043751	Identifier	bandWidthT		1043514	1					
ANR	1043752	Identifier	i		1043514	1					
ANR	1043753	ExpressionStatement	indx = 1	30:12:939:947	1043514	1	True				
ANR	1043754	AssignmentExpression	indx = 1		1043514	0		=			
ANR	1043755	Identifier	indx		1043514	0					
ANR	1043756	PrimaryExpression	1		1043514	1					
ANR	1043757	IfStatement	if ( ( ( band_tab [ i + 1 ] - band_tab [ i ] ) / 2 ) >= chctx -> bandWidthT [ i ] )		1043514	3					
ANR	1043758	Condition	( ( band_tab [ i + 1 ] - band_tab [ i ] ) / 2 ) >= chctx -> bandWidthT [ i ]	31:12:961:1021	1043514	0	True				
ANR	1043759	RelationalExpression	( ( band_tab [ i + 1 ] - band_tab [ i ] ) / 2 ) >= chctx -> bandWidthT [ i ]		1043514	0		>=			
ANR	1043760	MultiplicativeExpression	( band_tab [ i + 1 ] - band_tab [ i ] ) / 2		1043514	0		/			
ANR	1043761	AdditiveExpression	band_tab [ i + 1 ] - band_tab [ i ]		1043514	0		-			
ANR	1043762	ArrayIndexing	band_tab [ i + 1 ]		1043514	0					
ANR	1043763	Identifier	band_tab		1043514	0					
ANR	1043764	AdditiveExpression	i + 1		1043514	1		+			
ANR	1043765	Identifier	i		1043514	0					
ANR	1043766	PrimaryExpression	1		1043514	1					
ANR	1043767	ArrayIndexing	band_tab [ i ]		1043514	1					
ANR	1043768	Identifier	band_tab		1043514	0					
ANR	1043769	Identifier	i		1043514	1					
ANR	1043770	PrimaryExpression	2		1043514	1					
ANR	1043771	ArrayIndexing	chctx -> bandWidthT [ i ]		1043514	1					
ANR	1043772	PtrMemberAccess	chctx -> bandWidthT		1043514	0					
ANR	1043773	Identifier	chctx		1043514	0					
ANR	1043774	Identifier	bandWidthT		1043514	1					
ANR	1043775	Identifier	i		1043514	1					
ANR	1043776	ExpressionStatement	indx = 2	32:12:1036:1044	1043514	1	True				
ANR	1043777	AssignmentExpression	indx = 2		1043514	0		=			
ANR	1043778	Identifier	indx		1043514	0					
ANR	1043779	PrimaryExpression	2		1043514	1					
ANR	1043780	IfStatement	if ( indx == - 1 )		1043514	4					
ANR	1043781	Condition	indx == - 1	33:12:1058:1067	1043514	0	True				
ANR	1043782	EqualityExpression	indx == - 1		1043514	0		==			
ANR	1043783	Identifier	indx		1043514	0					
ANR	1043784	UnaryOperationExpression	- 1		1043514	1					
ANR	1043785	UnaryOperator	-		1043514	0					
ANR	1043786	PrimaryExpression	1		1043514	1					
ANR	1043787	ExpressionStatement	chctx -> flcoeffs4 [ i ] += xTab [ ( indx * 2 + ( chctx -> flcoeffs1 [ i ] < highest ) ) * 2 + flag ]	34:8:1078:1162	1043514	1	True				
ANR	1043788	AssignmentExpression	chctx -> flcoeffs4 [ i ] += xTab [ ( indx * 2 + ( chctx -> flcoeffs1 [ i ] < highest ) ) * 2 + flag ]		1043514	0		+=			
ANR	1043789	ArrayIndexing	chctx -> flcoeffs4 [ i ]		1043514	0					
ANR	1043790	PtrMemberAccess	chctx -> flcoeffs4		1043514	0					
ANR	1043791	Identifier	chctx		1043514	0					
ANR	1043792	Identifier	flcoeffs4		1043514	1					
ANR	1043793	Identifier	i		1043514	1					
ANR	1043794	ArrayIndexing	xTab [ ( indx * 2 + ( chctx -> flcoeffs1 [ i ] < highest ) ) * 2 + flag ]		1043514	1					
ANR	1043795	Identifier	xTab		1043514	0					
ANR	1043796	AdditiveExpression	( indx * 2 + ( chctx -> flcoeffs1 [ i ] < highest ) ) * 2 + flag		1043514	1		+			
ANR	1043797	MultiplicativeExpression	( indx * 2 + ( chctx -> flcoeffs1 [ i ] < highest ) ) * 2		1043514	0		*			
ANR	1043798	AdditiveExpression	indx * 2 + ( chctx -> flcoeffs1 [ i ] < highest )		1043514	0		+			
ANR	1043799	MultiplicativeExpression	indx * 2		1043514	0		*			
ANR	1043800	Identifier	indx		1043514	0					
ANR	1043801	PrimaryExpression	2		1043514	1					
ANR	1043802	RelationalExpression	chctx -> flcoeffs1 [ i ] < highest		1043514	1		<			
ANR	1043803	ArrayIndexing	chctx -> flcoeffs1 [ i ]		1043514	0					
ANR	1043804	PtrMemberAccess	chctx -> flcoeffs1		1043514	0					
ANR	1043805	Identifier	chctx		1043514	0					
ANR	1043806	Identifier	flcoeffs1		1043514	1					
ANR	1043807	Identifier	i		1043514	1					
ANR	1043808	Identifier	highest		1043514	1					
ANR	1043809	PrimaryExpression	2		1043514	1					
ANR	1043810	Identifier	flag		1043514	1					
ANR	1043811	IfStatement	if ( stream_format_code & 0x2 )		1043514	20					
ANR	1043812	Condition	stream_format_code & 0x2	36:8:1178:1201	1043514	0	True				
ANR	1043813	BitAndExpression	stream_format_code & 0x2		1043514	0		&			
ANR	1043814	Identifier	stream_format_code		1043514	0					
ANR	1043815	PrimaryExpression	0x2		1043514	1					
ANR	1043816	CompoundStatement		34:34:1069:1069	1043514	1					
ANR	1043817	ExpressionStatement	chctx -> flcoeffs4 [ 0 ] = limit	37:8:1214:1241	1043514	0	True				
ANR	1043818	AssignmentExpression	chctx -> flcoeffs4 [ 0 ] = limit		1043514	0		=			
ANR	1043819	ArrayIndexing	chctx -> flcoeffs4 [ 0 ]		1043514	0					
ANR	1043820	PtrMemberAccess	chctx -> flcoeffs4		1043514	0					
ANR	1043821	Identifier	chctx		1043514	0					
ANR	1043822	Identifier	flcoeffs4		1043514	1					
ANR	1043823	PrimaryExpression	0		1043514	1					
ANR	1043824	Identifier	limit		1043514	1					
ANR	1043825	ExpressionStatement	chctx -> flcoeffs4 [ 1 ] = limit	38:8:1251:1278	1043514	1	True				
ANR	1043826	AssignmentExpression	chctx -> flcoeffs4 [ 1 ] = limit		1043514	0		=			
ANR	1043827	ArrayIndexing	chctx -> flcoeffs4 [ 1 ]		1043514	0					
ANR	1043828	PtrMemberAccess	chctx -> flcoeffs4		1043514	0					
ANR	1043829	Identifier	chctx		1043514	0					
ANR	1043830	Identifier	flcoeffs4		1043514	1					
ANR	1043831	PrimaryExpression	1		1043514	1					
ANR	1043832	Identifier	limit		1043514	1					
ANR	1043833	ExpressionStatement	chctx -> flcoeffs4 [ 2 ] = limit	39:8:1288:1315	1043514	2	True				
ANR	1043834	AssignmentExpression	chctx -> flcoeffs4 [ 2 ] = limit		1043514	0		=			
ANR	1043835	ArrayIndexing	chctx -> flcoeffs4 [ 2 ]		1043514	0					
ANR	1043836	PtrMemberAccess	chctx -> flcoeffs4		1043514	0					
ANR	1043837	Identifier	chctx		1043514	0					
ANR	1043838	Identifier	flcoeffs4		1043514	1					
ANR	1043839	PrimaryExpression	2		1043514	1					
ANR	1043840	Identifier	limit		1043514	1					
ANR	1043841	ExpressionStatement	chctx -> flcoeffs4 [ 3 ] = limit	40:8:1325:1352	1043514	3	True				
ANR	1043842	AssignmentExpression	chctx -> flcoeffs4 [ 3 ] = limit		1043514	0		=			
ANR	1043843	ArrayIndexing	chctx -> flcoeffs4 [ 3 ]		1043514	0					
ANR	1043844	PtrMemberAccess	chctx -> flcoeffs4		1043514	0					
ANR	1043845	Identifier	chctx		1043514	0					
ANR	1043846	Identifier	flcoeffs4		1043514	1					
ANR	1043847	PrimaryExpression	3		1043514	1					
ANR	1043848	Identifier	limit		1043514	1					
ANR	1043849	ForStatement	for ( i = ( stream_format_code & 0x2 ) ? 4 : 0 ; i < BANDS - 1 ; i ++ )		1043514	21					
ANR	1043850	ForInit	i = ( stream_format_code & 0x2 ) ? 4 : 0 ;	42:9:1369:1407	1043514	0	True				
ANR	1043851	AssignmentExpression	i = ( stream_format_code & 0x2 ) ? 4 : 0		1043514	0		=			
ANR	1043852	Identifier	i		1043514	0					
ANR	1043853	ConditionalExpression	( stream_format_code & 0x2 ) ? 4 : 0		1043514	1					
ANR	1043854	Condition	stream_format_code & 0x2		1043514	0					
ANR	1043855	BitAndExpression	stream_format_code & 0x2		1043514	0		&			
ANR	1043856	Identifier	stream_format_code		1043514	0					
ANR	1043857	PrimaryExpression	0x2		1043514	1					
ANR	1043858	PrimaryExpression	4		1043514	1					
ANR	1043859	PrimaryExpression	0		1043514	2					
ANR	1043860	Condition	i < BANDS - 1	42:49:1409:1421	1043514	1	True				
ANR	1043861	RelationalExpression	i < BANDS - 1		1043514	0		<			
ANR	1043862	Identifier	i		1043514	0					
ANR	1043863	AdditiveExpression	BANDS - 1		1043514	1		-			
ANR	1043864	Identifier	BANDS		1043514	0					
ANR	1043865	PrimaryExpression	1		1043514	1					
ANR	1043866	PostIncDecOperationExpression	i ++	42:64:1424:1426	1043514	2	True				
ANR	1043867	Identifier	i		1043514	0					
ANR	1043868	IncDec	++		1043514	1					
ANR	1043869	CompoundStatement		40:69:1294:1294	1043514	3					
ANR	1043870	ExpressionStatement	iacc += chctx -> bandWidthT [ i ]	43:8:1439:1468	1043514	0	True				
ANR	1043871	AssignmentExpression	iacc += chctx -> bandWidthT [ i ]		1043514	0		+=			
ANR	1043872	Identifier	iacc		1043514	0					
ANR	1043873	ArrayIndexing	chctx -> bandWidthT [ i ]		1043514	1					
ANR	1043874	PtrMemberAccess	chctx -> bandWidthT		1043514	0					
ANR	1043875	Identifier	chctx		1043514	0					
ANR	1043876	Identifier	bandWidthT		1043514	1					
ANR	1043877	Identifier	i		1043514	1					
ANR	1043878	ExpressionStatement	summa += chctx -> bandWidthT [ i ] * chctx -> flcoeffs4 [ i ]	44:8:1478:1529	1043514	1	True				
ANR	1043879	AssignmentExpression	summa += chctx -> bandWidthT [ i ] * chctx -> flcoeffs4 [ i ]		1043514	0		+=			
ANR	1043880	Identifier	summa		1043514	0					
ANR	1043881	MultiplicativeExpression	chctx -> bandWidthT [ i ] * chctx -> flcoeffs4 [ i ]		1043514	1		*			
ANR	1043882	ArrayIndexing	chctx -> bandWidthT [ i ]		1043514	0					
ANR	1043883	PtrMemberAccess	chctx -> bandWidthT		1043514	0					
ANR	1043884	Identifier	chctx		1043514	0					
ANR	1043885	Identifier	bandWidthT		1043514	1					
ANR	1043886	Identifier	i		1043514	1					
ANR	1043887	ArrayIndexing	chctx -> flcoeffs4 [ i ]		1043514	1					
ANR	1043888	PtrMemberAccess	chctx -> flcoeffs4		1043514	0					
ANR	1043889	Identifier	chctx		1043514	0					
ANR	1043890	Identifier	flcoeffs4		1043514	1					
ANR	1043891	Identifier	i		1043514	1					
ANR	1043892	ExpressionStatement	chctx -> bandWidthT [ BANDS - 1 ] = 0	46:4:1541:1573	1043514	22	True				
ANR	1043893	AssignmentExpression	chctx -> bandWidthT [ BANDS - 1 ] = 0		1043514	0		=			
ANR	1043894	ArrayIndexing	chctx -> bandWidthT [ BANDS - 1 ]		1043514	0					
ANR	1043895	PtrMemberAccess	chctx -> bandWidthT		1043514	0					
ANR	1043896	Identifier	chctx		1043514	0					
ANR	1043897	Identifier	bandWidthT		1043514	1					
ANR	1043898	AdditiveExpression	BANDS - 1		1043514	1		-			
ANR	1043899	Identifier	BANDS		1043514	0					
ANR	1043900	PrimaryExpression	1		1043514	1					
ANR	1043901	PrimaryExpression	0		1043514	1					
ANR	1043902	ExpressionStatement	summa = ( summa * 0.5 - freebits ) / iacc	47:4:1579:1618	1043514	23	True				
ANR	1043903	AssignmentExpression	summa = ( summa * 0.5 - freebits ) / iacc		1043514	0		=			
ANR	1043904	Identifier	summa		1043514	0					
ANR	1043905	MultiplicativeExpression	( summa * 0.5 - freebits ) / iacc		1043514	1		/			
ANR	1043906	AdditiveExpression	summa * 0.5 - freebits		1043514	0		-			
ANR	1043907	MultiplicativeExpression	summa * 0.5		1043514	0		*			
ANR	1043908	Identifier	summa		1043514	0					
ANR	1043909	PrimaryExpression	0.5		1043514	1					
ANR	1043910	Identifier	freebits		1043514	1					
ANR	1043911	Identifier	iacc		1043514	1					
ANR	1043912	ForStatement	for ( i = 0 ; i < BANDS / 2 ; i ++ )		1043514	24					
ANR	1043913	ForInit	i = 0 ;	48:9:1629:1634	1043514	0	True				
ANR	1043914	AssignmentExpression	i = 0		1043514	0		=			
ANR	1043915	Identifier	i		1043514	0					
ANR	1043916	PrimaryExpression	0		1043514	1					
ANR	1043917	Condition	i < BANDS / 2	48:16:1636:1648	1043514	1	True				
ANR	1043918	RelationalExpression	i < BANDS / 2		1043514	0		<			
ANR	1043919	Identifier	i		1043514	0					
ANR	1043920	MultiplicativeExpression	BANDS / 2		1043514	1		/			
ANR	1043921	Identifier	BANDS		1043514	0					
ANR	1043922	PrimaryExpression	2		1043514	1					
ANR	1043923	PostIncDecOperationExpression	i ++	48:31:1651:1653	1043514	2	True				
ANR	1043924	Identifier	i		1043514	0					
ANR	1043925	IncDec	++		1043514	1					
ANR	1043926	CompoundStatement		46:36:1521:1521	1043514	3					
ANR	1043927	ExpressionStatement	rres = summer - freebits	49:8:1666:1690	1043514	0	True				
ANR	1043928	AssignmentExpression	rres = summer - freebits		1043514	0		=			
ANR	1043929	Identifier	rres		1043514	0					
ANR	1043930	AdditiveExpression	summer - freebits		1043514	1		-			
ANR	1043931	Identifier	summer		1043514	0					
ANR	1043932	Identifier	freebits		1043514	1					
ANR	1043933	IfStatement	if ( ( rres >= - 8 ) && ( rres <= 8 ) )		1043514	1					
ANR	1043934	Condition	( rres >= - 8 ) && ( rres <= 8 )	50:12:1704:1730	1043514	0	True				
ANR	1043935	AndExpression	( rres >= - 8 ) && ( rres <= 8 )		1043514	0		&&			
ANR	1043936	RelationalExpression	rres >= - 8		1043514	0		>=			
ANR	1043937	Identifier	rres		1043514	0					
ANR	1043938	UnaryOperationExpression	- 8		1043514	1					
ANR	1043939	UnaryOperator	-		1043514	0					
ANR	1043940	PrimaryExpression	8		1043514	1					
ANR	1043941	RelationalExpression	rres <= 8		1043514	1		<=			
ANR	1043942	Identifier	rres		1043514	0					
ANR	1043943	PrimaryExpression	8		1043514	1					
ANR	1043944	BreakStatement	break ;	51:12:1745:1750	1043514	1	True				
ANR	1043945	ExpressionStatement	summer = 0	52:8:1760:1770	1043514	2	True				
ANR	1043946	AssignmentExpression	summer = 0		1043514	0		=			
ANR	1043947	Identifier	summer		1043514	0					
ANR	1043948	PrimaryExpression	0		1043514	1					
ANR	1043949	ExpressionStatement	iacc = 0	53:8:1780:1790	1043514	3	True				
ANR	1043950	AssignmentExpression	iacc = 0		1043514	0		=			
ANR	1043951	Identifier	iacc		1043514	0					
ANR	1043952	PrimaryExpression	0		1043514	1					
ANR	1043953	ForStatement	for ( j = ( stream_format_code & 0x2 ) ? 4 : 0 ; j < BANDS ; j ++ )		1043514	4					
ANR	1043954	ForInit	j = ( stream_format_code & 0x2 ) ? 4 : 0 ;	54:13:1805:1843	1043514	0	True				
ANR	1043955	AssignmentExpression	j = ( stream_format_code & 0x2 ) ? 4 : 0		1043514	0		=			
ANR	1043956	Identifier	j		1043514	0					
ANR	1043957	ConditionalExpression	( stream_format_code & 0x2 ) ? 4 : 0		1043514	1					
ANR	1043958	Condition	stream_format_code & 0x2		1043514	0					
ANR	1043959	BitAndExpression	stream_format_code & 0x2		1043514	0		&			
ANR	1043960	Identifier	stream_format_code		1043514	0					
ANR	1043961	PrimaryExpression	0x2		1043514	1					
ANR	1043962	PrimaryExpression	4		1043514	1					
ANR	1043963	PrimaryExpression	0		1043514	2					
ANR	1043964	Condition	j < BANDS	54:53:1845:1853	1043514	1	True				
ANR	1043965	RelationalExpression	j < BANDS		1043514	0		<			
ANR	1043966	Identifier	j		1043514	0					
ANR	1043967	Identifier	BANDS		1043514	1					
ANR	1043968	PostIncDecOperationExpression	j ++	54:64:1856:1858	1043514	2	True				
ANR	1043969	Identifier	j		1043514	0					
ANR	1043970	IncDec	++		1043514	1					
ANR	1043971	CompoundStatement		52:69:1726:1726	1043514	3					
ANR	1043972	ExpressionStatement	"cwlen = av_clipf ( ( ( chctx -> flcoeffs4 [ j ] * 0.5 ) - summa + 0.5 ) , 0 , 6 )"	55:12:1875:1942	1043514	0	True				
ANR	1043973	AssignmentExpression	"cwlen = av_clipf ( ( ( chctx -> flcoeffs4 [ j ] * 0.5 ) - summa + 0.5 ) , 0 , 6 )"		1043514	0		=			
ANR	1043974	Identifier	cwlen		1043514	0					
ANR	1043975	CallExpression	"av_clipf ( ( ( chctx -> flcoeffs4 [ j ] * 0.5 ) - summa + 0.5 ) , 0 , 6 )"		1043514	1					
ANR	1043976	Callee	av_clipf		1043514	0					
ANR	1043977	Identifier	av_clipf		1043514	0					
ANR	1043978	ArgumentList	( chctx -> flcoeffs4 [ j ] * 0.5 ) - summa + 0.5		1043514	1					
ANR	1043979	Argument	( chctx -> flcoeffs4 [ j ] * 0.5 ) - summa + 0.5		1043514	0					
ANR	1043980	AdditiveExpression	( chctx -> flcoeffs4 [ j ] * 0.5 ) - summa + 0.5		1043514	0		-			
ANR	1043981	MultiplicativeExpression	chctx -> flcoeffs4 [ j ] * 0.5		1043514	0		*			
ANR	1043982	ArrayIndexing	chctx -> flcoeffs4 [ j ]		1043514	0					
ANR	1043983	PtrMemberAccess	chctx -> flcoeffs4		1043514	0					
ANR	1043984	Identifier	chctx		1043514	0					
ANR	1043985	Identifier	flcoeffs4		1043514	1					
ANR	1043986	Identifier	j		1043514	1					
ANR	1043987	PrimaryExpression	0.5		1043514	1					
ANR	1043988	AdditiveExpression	summa + 0.5		1043514	1		+			
ANR	1043989	Identifier	summa		1043514	0					
ANR	1043990	PrimaryExpression	0.5		1043514	1					
ANR	1043991	Argument	0		1043514	1					
ANR	1043992	PrimaryExpression	0		1043514	0					
ANR	1043993	Argument	6		1043514	2					
ANR	1043994	PrimaryExpression	6		1043514	0					
ANR	1043995	ExpressionStatement	chctx -> bitsBandT [ j ] = cwlen	56:12:1956:1983	1043514	1	True				
ANR	1043996	AssignmentExpression	chctx -> bitsBandT [ j ] = cwlen		1043514	0		=			
ANR	1043997	ArrayIndexing	chctx -> bitsBandT [ j ]		1043514	0					
ANR	1043998	PtrMemberAccess	chctx -> bitsBandT		1043514	0					
ANR	1043999	Identifier	chctx		1043514	0					
ANR	1044000	Identifier	bitsBandT		1043514	1					
ANR	1044001	Identifier	j		1043514	1					
ANR	1044002	Identifier	cwlen		1043514	1					
ANR	1044003	ExpressionStatement	summer += chctx -> bandWidthT [ j ] * cwlen	57:12:1997:2035	1043514	2	True				
ANR	1044004	AssignmentExpression	summer += chctx -> bandWidthT [ j ] * cwlen		1043514	0		+=			
ANR	1044005	Identifier	summer		1043514	0					
ANR	1044006	MultiplicativeExpression	chctx -> bandWidthT [ j ] * cwlen		1043514	1		*			
ANR	1044007	ArrayIndexing	chctx -> bandWidthT [ j ]		1043514	0					
ANR	1044008	PtrMemberAccess	chctx -> bandWidthT		1043514	0					
ANR	1044009	Identifier	chctx		1043514	0					
ANR	1044010	Identifier	bandWidthT		1043514	1					
ANR	1044011	Identifier	j		1043514	1					
ANR	1044012	Identifier	cwlen		1043514	1					
ANR	1044013	IfStatement	if ( cwlen > 0 )		1043514	3					
ANR	1044014	Condition	cwlen > 0	58:16:2053:2061	1043514	0	True				
ANR	1044015	RelationalExpression	cwlen > 0		1043514	0		>			
ANR	1044016	Identifier	cwlen		1043514	0					
ANR	1044017	PrimaryExpression	0		1043514	1					
ANR	1044018	ExpressionStatement	iacc += chctx -> bandWidthT [ j ]	59:16:2080:2108	1043514	1	True				
ANR	1044019	AssignmentExpression	iacc += chctx -> bandWidthT [ j ]		1043514	0		+=			
ANR	1044020	Identifier	iacc		1043514	0					
ANR	1044021	ArrayIndexing	chctx -> bandWidthT [ j ]		1043514	1					
ANR	1044022	PtrMemberAccess	chctx -> bandWidthT		1043514	0					
ANR	1044023	Identifier	chctx		1043514	0					
ANR	1044024	Identifier	bandWidthT		1043514	1					
ANR	1044025	Identifier	j		1043514	1					
ANR	1044026	ExpressionStatement	flg = t2	61:8:2128:2136	1043514	5	True				
ANR	1044027	AssignmentExpression	flg = t2		1043514	0		=			
ANR	1044028	Identifier	flg		1043514	0					
ANR	1044029	Identifier	t2		1043514	1					
ANR	1044030	ExpressionStatement	t2 = 1	62:8:2146:2152	1043514	6	True				
ANR	1044031	AssignmentExpression	t2 = 1		1043514	0		=			
ANR	1044032	Identifier	t2		1043514	0					
ANR	1044033	PrimaryExpression	1		1043514	1					
ANR	1044034	IfStatement	if ( freebits < summer )		1043514	7					
ANR	1044035	Condition	freebits < summer	63:12:2166:2182	1043514	0	True				
ANR	1044036	RelationalExpression	freebits < summer		1043514	0		<			
ANR	1044037	Identifier	freebits		1043514	0					
ANR	1044038	Identifier	summer		1043514	1					
ANR	1044039	ExpressionStatement	t2 = - 1	64:12:2197:2204	1043514	1	True				
ANR	1044040	AssignmentExpression	t2 = - 1		1043514	0		=			
ANR	1044041	Identifier	t2		1043514	0					
ANR	1044042	UnaryOperationExpression	- 1		1043514	1					
ANR	1044043	UnaryOperator	-		1043514	0					
ANR	1044044	PrimaryExpression	1		1043514	1					
ANR	1044045	IfStatement	if ( i == 0 )		1043514	8					
ANR	1044046	Condition	i == 0	65:12:2218:2223	1043514	0	True				
ANR	1044047	EqualityExpression	i == 0		1043514	0		==			
ANR	1044048	Identifier	i		1043514	0					
ANR	1044049	PrimaryExpression	0		1043514	1					
ANR	1044050	ExpressionStatement	flg = t2	66:12:2238:2246	1043514	1	True				
ANR	1044051	AssignmentExpression	flg = t2		1043514	0		=			
ANR	1044052	Identifier	flg		1043514	0					
ANR	1044053	Identifier	t2		1043514	1					
ANR	1044054	IfStatement	if ( flg != t2 )		1043514	9					
ANR	1044055	Condition	flg != t2	67:12:2260:2268	1043514	0	True				
ANR	1044056	EqualityExpression	flg != t2		1043514	0		!=			
ANR	1044057	Identifier	flg		1043514	0					
ANR	1044058	Identifier	t2		1043514	1					
ANR	1044059	ExpressionStatement	t1 ++	68:12:2283:2287	1043514	1	True				
ANR	1044060	PostIncDecOperationExpression	t1 ++		1043514	0					
ANR	1044061	Identifier	t1		1043514	0					
ANR	1044062	IncDec	++		1043514	1					
ANR	1044063	ExpressionStatement	summa = ( float ) ( summer - freebits ) / ( ( t1 + 1 ) * iacc ) + summa	69:8:2297:2359	1043514	10	True				
ANR	1044064	AssignmentExpression	summa = ( float ) ( summer - freebits ) / ( ( t1 + 1 ) * iacc ) + summa		1043514	0		=			
ANR	1044065	Identifier	summa		1043514	0					
ANR	1044066	AdditiveExpression	( float ) ( summer - freebits ) / ( ( t1 + 1 ) * iacc ) + summa		1043514	1		+			
ANR	1044067	MultiplicativeExpression	( float ) ( summer - freebits ) / ( ( t1 + 1 ) * iacc )		1043514	0		/			
ANR	1044068	CastExpression	( float ) ( summer - freebits )		1043514	0					
ANR	1044069	CastTarget	float		1043514	0					
ANR	1044070	AdditiveExpression	summer - freebits		1043514	1		-			
ANR	1044071	Identifier	summer		1043514	0					
ANR	1044072	Identifier	freebits		1043514	1					
ANR	1044073	MultiplicativeExpression	( t1 + 1 ) * iacc		1043514	1		*			
ANR	1044074	AdditiveExpression	t1 + 1		1043514	0		+			
ANR	1044075	Identifier	t1		1043514	0					
ANR	1044076	PrimaryExpression	1		1043514	1					
ANR	1044077	Identifier	iacc		1043514	1					
ANR	1044078	Identifier	summa		1043514	1					
ANR	1044079	ForStatement	for ( i = ( stream_format_code & 0x2 ) ? 4 : 0 ; i < BANDS ; i ++ )		1043514	25					
ANR	1044080	ForInit	i = ( stream_format_code & 0x2 ) ? 4 : 0 ;	71:9:2376:2414	1043514	0	True				
ANR	1044081	AssignmentExpression	i = ( stream_format_code & 0x2 ) ? 4 : 0		1043514	0		=			
ANR	1044082	Identifier	i		1043514	0					
ANR	1044083	ConditionalExpression	( stream_format_code & 0x2 ) ? 4 : 0		1043514	1					
ANR	1044084	Condition	stream_format_code & 0x2		1043514	0					
ANR	1044085	BitAndExpression	stream_format_code & 0x2		1043514	0		&			
ANR	1044086	Identifier	stream_format_code		1043514	0					
ANR	1044087	PrimaryExpression	0x2		1043514	1					
ANR	1044088	PrimaryExpression	4		1043514	1					
ANR	1044089	PrimaryExpression	0		1043514	2					
ANR	1044090	Condition	i < BANDS	71:49:2416:2424	1043514	1	True				
ANR	1044091	RelationalExpression	i < BANDS		1043514	0		<			
ANR	1044092	Identifier	i		1043514	0					
ANR	1044093	Identifier	BANDS		1043514	1					
ANR	1044094	PostIncDecOperationExpression	i ++	71:60:2427:2429	1043514	2	True				
ANR	1044095	Identifier	i		1043514	0					
ANR	1044096	IncDec	++		1043514	1					
ANR	1044097	CompoundStatement		69:65:2297:2297	1043514	3					
ANR	1044098	ForStatement	for ( j = band_tab [ i ] ; j < band_tab [ i + 1 ] ; j ++ )		1043514	0					
ANR	1044099	ForInit	j = band_tab [ i ] ;	72:13:2447:2462	1043514	0	True				
ANR	1044100	AssignmentExpression	j = band_tab [ i ]		1043514	0		=			
ANR	1044101	Identifier	j		1043514	0					
ANR	1044102	ArrayIndexing	band_tab [ i ]		1043514	1					
ANR	1044103	Identifier	band_tab		1043514	0					
ANR	1044104	Identifier	i		1043514	1					
ANR	1044105	Condition	j < band_tab [ i + 1 ]	72:30:2464:2482	1043514	1	True				
ANR	1044106	RelationalExpression	j < band_tab [ i + 1 ]		1043514	0		<			
ANR	1044107	Identifier	j		1043514	0					
ANR	1044108	ArrayIndexing	band_tab [ i + 1 ]		1043514	1					
ANR	1044109	Identifier	band_tab		1043514	0					
ANR	1044110	AdditiveExpression	i + 1		1043514	1		+			
ANR	1044111	Identifier	i		1043514	0					
ANR	1044112	PrimaryExpression	1		1043514	1					
ANR	1044113	PostIncDecOperationExpression	j ++	72:51:2485:2487	1043514	2	True				
ANR	1044114	Identifier	j		1043514	0					
ANR	1044115	IncDec	++		1043514	1					
ANR	1044116	ExpressionStatement	chctx -> CWlengthT [ j ] = chctx -> bitsBandT [ i ]	73:12:2502:2543	1043514	3	True				
ANR	1044117	AssignmentExpression	chctx -> CWlengthT [ j ] = chctx -> bitsBandT [ i ]		1043514	0		=			
ANR	1044118	ArrayIndexing	chctx -> CWlengthT [ j ]		1043514	0					
ANR	1044119	PtrMemberAccess	chctx -> CWlengthT		1043514	0					
ANR	1044120	Identifier	chctx		1043514	0					
ANR	1044121	Identifier	CWlengthT		1043514	1					
ANR	1044122	Identifier	j		1043514	1					
ANR	1044123	ArrayIndexing	chctx -> bitsBandT [ i ]		1043514	1					
ANR	1044124	PtrMemberAccess	chctx -> bitsBandT		1043514	0					
ANR	1044125	Identifier	chctx		1043514	0					
ANR	1044126	Identifier	bitsBandT		1043514	1					
ANR	1044127	Identifier	i		1043514	1					
ANR	1044128	IfStatement	if ( freebits > summer )		1043514	26					
ANR	1044129	Condition	freebits > summer	75:8:2559:2575	1043514	0	True				
ANR	1044130	RelationalExpression	freebits > summer		1043514	0		>			
ANR	1044131	Identifier	freebits		1043514	0					
ANR	1044132	Identifier	summer		1043514	1					
ANR	1044133	CompoundStatement		73:27:2443:2443	1043514	1					
ANR	1044134	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		1043514	0					
ANR	1044135	ForInit	i = 0 ;	76:13:2593:2598	1043514	0	True				
ANR	1044136	AssignmentExpression	i = 0		1043514	0		=			
ANR	1044137	Identifier	i		1043514	0					
ANR	1044138	PrimaryExpression	0		1043514	1					
ANR	1044139	Condition	i < BANDS	76:20:2600:2608	1043514	1	True				
ANR	1044140	RelationalExpression	i < BANDS		1043514	0		<			
ANR	1044141	Identifier	i		1043514	0					
ANR	1044142	Identifier	BANDS		1043514	1					
ANR	1044143	PostIncDecOperationExpression	i ++	76:31:2611:2613	1043514	2	True				
ANR	1044144	Identifier	i		1043514	0					
ANR	1044145	IncDec	++		1043514	1					
ANR	1044146	CompoundStatement		74:36:2481:2481	1043514	3					
ANR	1044147	ExpressionStatement	workT [ i ] = ( chctx -> bitsBandT [ i ] == 6 ) ? - 1.e20 : ( chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] - 0.415 )	77:12:2630:2781	1043514	0	True				
ANR	1044148	AssignmentExpression	workT [ i ] = ( chctx -> bitsBandT [ i ] == 6 ) ? - 1.e20 : ( chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] - 0.415 )		1043514	0		=			
ANR	1044149	ArrayIndexing	workT [ i ]		1043514	0					
ANR	1044150	Identifier	workT		1043514	0					
ANR	1044151	Identifier	i		1043514	1					
ANR	1044152	ConditionalExpression	( chctx -> bitsBandT [ i ] == 6 ) ? - 1.e20 : ( chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] - 0.415 )		1043514	1					
ANR	1044153	Condition	chctx -> bitsBandT [ i ] == 6		1043514	0					
ANR	1044154	EqualityExpression	chctx -> bitsBandT [ i ] == 6		1043514	0		==			
ANR	1044155	ArrayIndexing	chctx -> bitsBandT [ i ]		1043514	0					
ANR	1044156	PtrMemberAccess	chctx -> bitsBandT		1043514	0					
ANR	1044157	Identifier	chctx		1043514	0					
ANR	1044158	Identifier	bitsBandT		1043514	1					
ANR	1044159	Identifier	i		1043514	1					
ANR	1044160	PrimaryExpression	6		1043514	1					
ANR	1044161	UnaryOperationExpression	- 1.e20		1043514	1					
ANR	1044162	UnaryOperator	-		1043514	0					
ANR	1044163	PrimaryExpression	1.e20		1043514	1					
ANR	1044164	AdditiveExpression	chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] - 0.415		1043514	2		+			
ANR	1044165	MultiplicativeExpression	chctx -> bitsBandT [ i ] * - 2		1043514	0		*			
ANR	1044166	ArrayIndexing	chctx -> bitsBandT [ i ]		1043514	0					
ANR	1044167	PtrMemberAccess	chctx -> bitsBandT		1043514	0					
ANR	1044168	Identifier	chctx		1043514	0					
ANR	1044169	Identifier	bitsBandT		1043514	1					
ANR	1044170	Identifier	i		1043514	1					
ANR	1044171	UnaryOperationExpression	- 2		1043514	1					
ANR	1044172	UnaryOperator	-		1043514	0					
ANR	1044173	PrimaryExpression	2		1043514	1					
ANR	1044174	AdditiveExpression	chctx -> flcoeffs4 [ i ] - 0.415		1043514	1		-			
ANR	1044175	ArrayIndexing	chctx -> flcoeffs4 [ i ]		1043514	0					
ANR	1044176	PtrMemberAccess	chctx -> flcoeffs4		1043514	0					
ANR	1044177	Identifier	chctx		1043514	0					
ANR	1044178	Identifier	flcoeffs4		1043514	1					
ANR	1044179	Identifier	i		1043514	1					
ANR	1044180	PrimaryExpression	0.415		1043514	1					
ANR	1044181	ExpressionStatement	highest = 0.0	80:8:2801:2814	1043514	1	True				
ANR	1044182	AssignmentExpression	highest = 0.0		1043514	0		=			
ANR	1044183	Identifier	highest		1043514	0					
ANR	1044184	PrimaryExpression	0.0		1043514	1					
ANR	1044185	DoStatement	do		1043514	2					
ANR	1044186	CompoundStatement		79:11:2692:2692	1043514	0					
ANR	1044187	IfStatement	if ( highest <= - 1.e20 )		1043514	0					
ANR	1044188	Condition	highest <= - 1.e20	82:16:2845:2861	1043514	0	True				
ANR	1044189	RelationalExpression	highest <= - 1.e20		1043514	0		<=			
ANR	1044190	Identifier	highest		1043514	0					
ANR	1044191	UnaryOperationExpression	- 1.e20		1043514	1					
ANR	1044192	UnaryOperator	-		1043514	0					
ANR	1044193	PrimaryExpression	1.e20		1043514	1					
ANR	1044194	BreakStatement	break ;	83:16:2880:2885	1043514	1	True				
ANR	1044195	ExpressionStatement	found_indx = 0	84:12:2899:2913	1043514	1	True				
ANR	1044196	AssignmentExpression	found_indx = 0		1043514	0		=			
ANR	1044197	Identifier	found_indx		1043514	0					
ANR	1044198	PrimaryExpression	0		1043514	1					
ANR	1044199	ExpressionStatement	highest = - 1.e20	85:12:2927:2943	1043514	2	True				
ANR	1044200	AssignmentExpression	highest = - 1.e20		1043514	0		=			
ANR	1044201	Identifier	highest		1043514	0					
ANR	1044202	UnaryOperationExpression	- 1.e20		1043514	1					
ANR	1044203	UnaryOperator	-		1043514	0					
ANR	1044204	PrimaryExpression	1.e20		1043514	1					
ANR	1044205	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		1043514	3					
ANR	1044206	ForInit	i = 0 ;	86:17:2962:2967	1043514	0	True				
ANR	1044207	AssignmentExpression	i = 0		1043514	0		=			
ANR	1044208	Identifier	i		1043514	0					
ANR	1044209	PrimaryExpression	0		1043514	1					
ANR	1044210	Condition	i < BANDS	86:24:2969:2977	1043514	1	True				
ANR	1044211	RelationalExpression	i < BANDS		1043514	0		<			
ANR	1044212	Identifier	i		1043514	0					
ANR	1044213	Identifier	BANDS		1043514	1					
ANR	1044214	PostIncDecOperationExpression	i ++	86:35:2980:2982	1043514	2	True				
ANR	1044215	Identifier	i		1043514	0					
ANR	1044216	IncDec	++		1043514	1					
ANR	1044217	CompoundStatement		84:40:2850:2850	1043514	3					
ANR	1044218	IfStatement	if ( workT [ i ] > highest )		1043514	0					
ANR	1044219	Condition	workT [ i ] > highest	87:20:3007:3024	1043514	0	True				
ANR	1044220	RelationalExpression	workT [ i ] > highest		1043514	0		>			
ANR	1044221	ArrayIndexing	workT [ i ]		1043514	0					
ANR	1044222	Identifier	workT		1043514	0					
ANR	1044223	Identifier	i		1043514	1					
ANR	1044224	Identifier	highest		1043514	1					
ANR	1044225	CompoundStatement		85:40:2892:2892	1043514	1					
ANR	1044226	ExpressionStatement	highest = workT [ i ]	88:20:3049:3067	1043514	0	True				
ANR	1044227	AssignmentExpression	highest = workT [ i ]		1043514	0		=			
ANR	1044228	Identifier	highest		1043514	0					
ANR	1044229	ArrayIndexing	workT [ i ]		1043514	1					
ANR	1044230	Identifier	workT		1043514	0					
ANR	1044231	Identifier	i		1043514	1					
ANR	1044232	ExpressionStatement	found_indx = i	89:20:3089:3103	1043514	1	True				
ANR	1044233	AssignmentExpression	found_indx = i		1043514	0		=			
ANR	1044234	Identifier	found_indx		1043514	0					
ANR	1044235	Identifier	i		1043514	1					
ANR	1044236	IfStatement	if ( highest > - 1.e20 )		1043514	4					
ANR	1044237	Condition	highest > - 1.e20	92:16:3153:3168	1043514	0	True				
ANR	1044238	RelationalExpression	highest > - 1.e20		1043514	0		>			
ANR	1044239	Identifier	highest		1043514	0					
ANR	1044240	UnaryOperationExpression	- 1.e20		1043514	1					
ANR	1044241	UnaryOperator	-		1043514	0					
ANR	1044242	PrimaryExpression	1.e20		1043514	1					
ANR	1044243	CompoundStatement		90:34:3036:3036	1043514	1					
ANR	1044244	ExpressionStatement	workT [ found_indx ] -= 2.0	93:16:3189:3213	1043514	0	True				
ANR	1044245	AssignmentExpression	workT [ found_indx ] -= 2.0		1043514	0		-=			
ANR	1044246	ArrayIndexing	workT [ found_indx ]		1043514	0					
ANR	1044247	Identifier	workT		1043514	0					
ANR	1044248	Identifier	found_indx		1043514	1					
ANR	1044249	PrimaryExpression	2.0		1043514	1					
ANR	1044250	IfStatement	if ( ++ chctx -> bitsBandT [ found_indx ] == 6 )		1043514	1					
ANR	1044251	Condition	++ chctx -> bitsBandT [ found_indx ] == 6	94:20:3235:3269	1043514	0	True				
ANR	1044252	EqualityExpression	++ chctx -> bitsBandT [ found_indx ] == 6		1043514	0		==			
ANR	1044253	UnaryExpression	++ chctx -> bitsBandT [ found_indx ]		1043514	0					
ANR	1044254	IncDec	++		1043514	0					
ANR	1044255	ArrayIndexing	chctx -> bitsBandT [ found_indx ]		1043514	1					
ANR	1044256	PtrMemberAccess	chctx -> bitsBandT		1043514	0					
ANR	1044257	Identifier	chctx		1043514	0					
ANR	1044258	Identifier	bitsBandT		1043514	1					
ANR	1044259	Identifier	found_indx		1043514	1					
ANR	1044260	PrimaryExpression	6		1043514	1					
ANR	1044261	ExpressionStatement	workT [ found_indx ] = - 1.e20	95:20:3292:3318	1043514	1	True				
ANR	1044262	AssignmentExpression	workT [ found_indx ] = - 1.e20		1043514	0		=			
ANR	1044263	ArrayIndexing	workT [ found_indx ]		1043514	0					
ANR	1044264	Identifier	workT		1043514	0					
ANR	1044265	Identifier	found_indx		1043514	1					
ANR	1044266	UnaryOperationExpression	- 1.e20		1043514	1					
ANR	1044267	UnaryOperator	-		1043514	0					
ANR	1044268	PrimaryExpression	1.e20		1043514	1					
ANR	1044269	ForStatement	for ( j = band_tab [ found_indx ] ; j < band_tab [ found_indx + 1 ] && ( freebits > summer ) ; j ++ )		1043514	2					
ANR	1044270	ForInit	j = band_tab [ found_indx ] ;	96:21:3341:3365	1043514	0	True				
ANR	1044271	AssignmentExpression	j = band_tab [ found_indx ]		1043514	0		=			
ANR	1044272	Identifier	j		1043514	0					
ANR	1044273	ArrayIndexing	band_tab [ found_indx ]		1043514	1					
ANR	1044274	Identifier	band_tab		1043514	0					
ANR	1044275	Identifier	found_indx		1043514	1					
ANR	1044276	Condition	j < band_tab [ found_indx + 1 ] && ( freebits > summer )	96:47:3367:3417	1043514	1	True				
ANR	1044277	AndExpression	j < band_tab [ found_indx + 1 ] && ( freebits > summer )		1043514	0		&&			
ANR	1044278	RelationalExpression	j < band_tab [ found_indx + 1 ]		1043514	0		<			
ANR	1044279	Identifier	j		1043514	0					
ANR	1044280	ArrayIndexing	band_tab [ found_indx + 1 ]		1043514	1					
ANR	1044281	Identifier	band_tab		1043514	0					
ANR	1044282	AdditiveExpression	found_indx + 1		1043514	1		+			
ANR	1044283	Identifier	found_indx		1043514	0					
ANR	1044284	PrimaryExpression	1		1043514	1					
ANR	1044285	RelationalExpression	freebits > summer		1043514	1		>			
ANR	1044286	Identifier	freebits		1043514	0					
ANR	1044287	Identifier	summer		1043514	1					
ANR	1044288	PostIncDecOperationExpression	j ++	96:100:3420:3422	1043514	2	True				
ANR	1044289	Identifier	j		1043514	0					
ANR	1044290	IncDec	++		1043514	1					
ANR	1044291	CompoundStatement		94:105:3290:3290	1043514	3					
ANR	1044292	ExpressionStatement	chctx -> CWlengthT [ j ] ++	97:20:3447:3468	1043514	0	True				
ANR	1044293	PostIncDecOperationExpression	chctx -> CWlengthT [ j ] ++		1043514	0					
ANR	1044294	ArrayIndexing	chctx -> CWlengthT [ j ]		1043514	0					
ANR	1044295	PtrMemberAccess	chctx -> CWlengthT		1043514	0					
ANR	1044296	Identifier	chctx		1043514	0					
ANR	1044297	Identifier	CWlengthT		1043514	1					
ANR	1044298	Identifier	j		1043514	1					
ANR	1044299	IncDec	++		1043514	1					
ANR	1044300	ExpressionStatement	summer ++	98:20:3490:3498	1043514	1	True				
ANR	1044301	PostIncDecOperationExpression	summer ++		1043514	0					
ANR	1044302	Identifier	summer		1043514	0					
ANR	1044303	IncDec	++		1043514	1					
ANR	1044304	Condition	freebits > summer	101:17:3549:3565	1043514	1	True				
ANR	1044305	RelationalExpression	freebits > summer		1043514	0		>			
ANR	1044306	Identifier	freebits		1043514	0					
ANR	1044307	Identifier	summer		1043514	1					
ANR	1044308	IfStatement	if ( freebits < summer )		1043514	27					
ANR	1044309	Condition	freebits < summer	103:8:3583:3599	1043514	0	True				
ANR	1044310	RelationalExpression	freebits < summer		1043514	0		<			
ANR	1044311	Identifier	freebits		1043514	0					
ANR	1044312	Identifier	summer		1043514	1					
ANR	1044313	CompoundStatement		101:27:3467:3467	1043514	1					
ANR	1044314	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		1043514	0					
ANR	1044315	ForInit	i = 0 ;	104:13:3617:3622	1043514	0	True				
ANR	1044316	AssignmentExpression	i = 0		1043514	0		=			
ANR	1044317	Identifier	i		1043514	0					
ANR	1044318	PrimaryExpression	0		1043514	1					
ANR	1044319	Condition	i < BANDS	104:20:3624:3632	1043514	1	True				
ANR	1044320	RelationalExpression	i < BANDS		1043514	0		<			
ANR	1044321	Identifier	i		1043514	0					
ANR	1044322	Identifier	BANDS		1043514	1					
ANR	1044323	PostIncDecOperationExpression	i ++	104:31:3635:3637	1043514	2	True				
ANR	1044324	Identifier	i		1043514	0					
ANR	1044325	IncDec	++		1043514	1					
ANR	1044326	CompoundStatement		102:36:3505:3505	1043514	3					
ANR	1044327	ExpressionStatement	workT [ i ] = chctx -> bitsBandT [ i ] ? ( chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] + 1.585 ) : 1.e20	105:12:3654:3790	1043514	0	True				
ANR	1044328	AssignmentExpression	workT [ i ] = chctx -> bitsBandT [ i ] ? ( chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] + 1.585 ) : 1.e20		1043514	0		=			
ANR	1044329	ArrayIndexing	workT [ i ]		1043514	0					
ANR	1044330	Identifier	workT		1043514	0					
ANR	1044331	Identifier	i		1043514	1					
ANR	1044332	ConditionalExpression	chctx -> bitsBandT [ i ] ? ( chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] + 1.585 ) : 1.e20		1043514	1					
ANR	1044333	Condition	chctx -> bitsBandT [ i ]		1043514	0					
ANR	1044334	ArrayIndexing	chctx -> bitsBandT [ i ]		1043514	0					
ANR	1044335	PtrMemberAccess	chctx -> bitsBandT		1043514	0					
ANR	1044336	Identifier	chctx		1043514	0					
ANR	1044337	Identifier	bitsBandT		1043514	1					
ANR	1044338	Identifier	i		1043514	1					
ANR	1044339	AdditiveExpression	chctx -> bitsBandT [ i ] * - 2 + chctx -> flcoeffs4 [ i ] + 1.585		1043514	1		+			
ANR	1044340	MultiplicativeExpression	chctx -> bitsBandT [ i ] * - 2		1043514	0		*			
ANR	1044341	ArrayIndexing	chctx -> bitsBandT [ i ]		1043514	0					
ANR	1044342	PtrMemberAccess	chctx -> bitsBandT		1043514	0					
ANR	1044343	Identifier	chctx		1043514	0					
ANR	1044344	Identifier	bitsBandT		1043514	1					
ANR	1044345	Identifier	i		1043514	1					
ANR	1044346	UnaryOperationExpression	- 2		1043514	1					
ANR	1044347	UnaryOperator	-		1043514	0					
ANR	1044348	PrimaryExpression	2		1043514	1					
ANR	1044349	AdditiveExpression	chctx -> flcoeffs4 [ i ] + 1.585		1043514	1		+			
ANR	1044350	ArrayIndexing	chctx -> flcoeffs4 [ i ]		1043514	0					
ANR	1044351	PtrMemberAccess	chctx -> flcoeffs4		1043514	0					
ANR	1044352	Identifier	chctx		1043514	0					
ANR	1044353	Identifier	flcoeffs4		1043514	1					
ANR	1044354	Identifier	i		1043514	1					
ANR	1044355	PrimaryExpression	1.585		1043514	1					
ANR	1044356	PrimaryExpression	1.e20		1043514	2					
ANR	1044357	IfStatement	if ( stream_format_code & 0x2 )		1043514	1					
ANR	1044358	Condition	stream_format_code & 0x2	108:12:3814:3837	1043514	0	True				
ANR	1044359	BitAndExpression	stream_format_code & 0x2		1043514	0		&			
ANR	1044360	Identifier	stream_format_code		1043514	0					
ANR	1044361	PrimaryExpression	0x2		1043514	1					
ANR	1044362	CompoundStatement		106:38:3705:3705	1043514	1					
ANR	1044363	ExpressionStatement	workT [ 0 ] = 1.e20	109:12:3854:3870	1043514	0	True				
ANR	1044364	AssignmentExpression	workT [ 0 ] = 1.e20		1043514	0		=			
ANR	1044365	ArrayIndexing	workT [ 0 ]		1043514	0					
ANR	1044366	Identifier	workT		1043514	0					
ANR	1044367	PrimaryExpression	0		1043514	1					
ANR	1044368	PrimaryExpression	1.e20		1043514	1					
ANR	1044369	ExpressionStatement	workT [ 1 ] = 1.e20	110:12:3884:3900	1043514	1	True				
ANR	1044370	AssignmentExpression	workT [ 1 ] = 1.e20		1043514	0		=			
ANR	1044371	ArrayIndexing	workT [ 1 ]		1043514	0					
ANR	1044372	Identifier	workT		1043514	0					
ANR	1044373	PrimaryExpression	1		1043514	1					
ANR	1044374	PrimaryExpression	1.e20		1043514	1					
ANR	1044375	ExpressionStatement	workT [ 2 ] = 1.e20	111:12:3914:3930	1043514	2	True				
ANR	1044376	AssignmentExpression	workT [ 2 ] = 1.e20		1043514	0		=			
ANR	1044377	ArrayIndexing	workT [ 2 ]		1043514	0					
ANR	1044378	Identifier	workT		1043514	0					
ANR	1044379	PrimaryExpression	2		1043514	1					
ANR	1044380	PrimaryExpression	1.e20		1043514	1					
ANR	1044381	ExpressionStatement	workT [ 3 ] = 1.e20	112:12:3944:3960	1043514	3	True				
ANR	1044382	AssignmentExpression	workT [ 3 ] = 1.e20		1043514	0		=			
ANR	1044383	ArrayIndexing	workT [ 3 ]		1043514	0					
ANR	1044384	Identifier	workT		1043514	0					
ANR	1044385	PrimaryExpression	3		1043514	1					
ANR	1044386	PrimaryExpression	1.e20		1043514	1					
ANR	1044387	WhileStatement	while ( freebits < summer )		1043514	2					
ANR	1044388	Condition	freebits < summer	114:15:3987:4003	1043514	0	True				
ANR	1044389	RelationalExpression	freebits < summer		1043514	0		<			
ANR	1044390	Identifier	freebits		1043514	0					
ANR	1044391	Identifier	summer		1043514	1					
ANR	1044392	CompoundStatement		112:34:3871:3871	1043514	1					
ANR	1044393	ExpressionStatement	lowest = 1.e10	115:12:4020:4036	1043514	0	True				
ANR	1044394	AssignmentExpression	lowest = 1.e10		1043514	0		=			
ANR	1044395	Identifier	lowest		1043514	0					
ANR	1044396	PrimaryExpression	1.e10		1043514	1					
ANR	1044397	ExpressionStatement	low_indx = 0	116:12:4050:4062	1043514	1	True				
ANR	1044398	AssignmentExpression	low_indx = 0		1043514	0		=			
ANR	1044399	Identifier	low_indx		1043514	0					
ANR	1044400	PrimaryExpression	0		1043514	1					
ANR	1044401	ForStatement	for ( i = 0 ; i < BANDS ; i ++ )		1043514	2					
ANR	1044402	ForInit	i = 0 ;	117:17:4081:4086	1043514	0	True				
ANR	1044403	AssignmentExpression	i = 0		1043514	0		=			
ANR	1044404	Identifier	i		1043514	0					
ANR	1044405	PrimaryExpression	0		1043514	1					
ANR	1044406	Condition	i < BANDS	117:24:4088:4096	1043514	1	True				
ANR	1044407	RelationalExpression	i < BANDS		1043514	0		<			
ANR	1044408	Identifier	i		1043514	0					
ANR	1044409	Identifier	BANDS		1043514	1					
ANR	1044410	PostIncDecOperationExpression	i ++	117:35:4099:4101	1043514	2	True				
ANR	1044411	Identifier	i		1043514	0					
ANR	1044412	IncDec	++		1043514	1					
ANR	1044413	CompoundStatement		115:40:3969:3969	1043514	3					
ANR	1044414	IfStatement	if ( workT [ i ] < lowest )		1043514	0					
ANR	1044415	Condition	workT [ i ] < lowest	118:20:4126:4142	1043514	0	True				
ANR	1044416	RelationalExpression	workT [ i ] < lowest		1043514	0		<			
ANR	1044417	ArrayIndexing	workT [ i ]		1043514	0					
ANR	1044418	Identifier	workT		1043514	0					
ANR	1044419	Identifier	i		1043514	1					
ANR	1044420	Identifier	lowest		1043514	1					
ANR	1044421	CompoundStatement		116:39:4010:4010	1043514	1					
ANR	1044422	ExpressionStatement	lowest = workT [ i ]	119:20:4167:4186	1043514	0	True				
ANR	1044423	AssignmentExpression	lowest = workT [ i ]		1043514	0		=			
ANR	1044424	Identifier	lowest		1043514	0					
ANR	1044425	ArrayIndexing	workT [ i ]		1043514	1					
ANR	1044426	Identifier	workT		1043514	0					
ANR	1044427	Identifier	i		1043514	1					
ANR	1044428	ExpressionStatement	low_indx = i	120:20:4208:4220	1043514	1	True				
ANR	1044429	AssignmentExpression	low_indx = i		1043514	0		=			
ANR	1044430	Identifier	low_indx		1043514	0					
ANR	1044431	Identifier	i		1043514	1					
ANR	1044432	ExpressionStatement	workT [ low_indx ] = lowest + 2.0	125:12:4328:4358	1043514	3	True				
ANR	1044433	AssignmentExpression	workT [ low_indx ] = lowest + 2.0		1043514	0		=			
ANR	1044434	ArrayIndexing	workT [ low_indx ]		1043514	0					
ANR	1044435	Identifier	workT		1043514	0					
ANR	1044436	Identifier	low_indx		1043514	1					
ANR	1044437	AdditiveExpression	lowest + 2.0		1043514	1		+			
ANR	1044438	Identifier	lowest		1043514	0					
ANR	1044439	PrimaryExpression	2.0		1043514	1					
ANR	1044440	IfStatement	if ( ! -- chctx -> bitsBandT [ low_indx ] )		1043514	4					
ANR	1044441	Condition	! -- chctx -> bitsBandT [ low_indx ]	126:16:4376:4404	1043514	0	True				
ANR	1044442	UnaryOperationExpression	! -- chctx -> bitsBandT [ low_indx ]		1043514	0					
ANR	1044443	UnaryOperator	!		1043514	0					
ANR	1044444	UnaryExpression	-- chctx -> bitsBandT [ low_indx ]		1043514	1					
ANR	1044445	IncDec	--		1043514	0					
ANR	1044446	ArrayIndexing	chctx -> bitsBandT [ low_indx ]		1043514	1					
ANR	1044447	PtrMemberAccess	chctx -> bitsBandT		1043514	0					
ANR	1044448	Identifier	chctx		1043514	0					
ANR	1044449	Identifier	bitsBandT		1043514	1					
ANR	1044450	Identifier	low_indx		1043514	1					
ANR	1044451	ExpressionStatement	workT [ low_indx ] = 1.e20	127:16:4423:4446	1043514	1	True				
ANR	1044452	AssignmentExpression	workT [ low_indx ] = 1.e20		1043514	0		=			
ANR	1044453	ArrayIndexing	workT [ low_indx ]		1043514	0					
ANR	1044454	Identifier	workT		1043514	0					
ANR	1044455	Identifier	low_indx		1043514	1					
ANR	1044456	PrimaryExpression	1.e20		1043514	1					
ANR	1044457	ForStatement	for ( j = band_tab [ low_indx ] ; j < band_tab [ low_indx + 1 ] && ( freebits < summer ) ; j ++ )		1043514	5					
ANR	1044458	ForInit	j = band_tab [ low_indx ] ;	128:17:4465:4487	1043514	0	True				
ANR	1044459	AssignmentExpression	j = band_tab [ low_indx ]		1043514	0		=			
ANR	1044460	Identifier	j		1043514	0					
ANR	1044461	ArrayIndexing	band_tab [ low_indx ]		1043514	1					
ANR	1044462	Identifier	band_tab		1043514	0					
ANR	1044463	Identifier	low_indx		1043514	1					
ANR	1044464	Condition	j < band_tab [ low_indx + 1 ] && ( freebits < summer )	128:41:4489:4535	1043514	1	True				
ANR	1044465	AndExpression	j < band_tab [ low_indx + 1 ] && ( freebits < summer )		1043514	0		&&			
ANR	1044466	RelationalExpression	j < band_tab [ low_indx + 1 ]		1043514	0		<			
ANR	1044467	Identifier	j		1043514	0					
ANR	1044468	ArrayIndexing	band_tab [ low_indx + 1 ]		1043514	1					
ANR	1044469	Identifier	band_tab		1043514	0					
ANR	1044470	AdditiveExpression	low_indx + 1		1043514	1		+			
ANR	1044471	Identifier	low_indx		1043514	0					
ANR	1044472	PrimaryExpression	1		1043514	1					
ANR	1044473	RelationalExpression	freebits < summer		1043514	1		<			
ANR	1044474	Identifier	freebits		1043514	0					
ANR	1044475	Identifier	summer		1043514	1					
ANR	1044476	PostIncDecOperationExpression	j ++	128:90:4538:4540	1043514	2	True				
ANR	1044477	Identifier	j		1043514	0					
ANR	1044478	IncDec	++		1043514	1					
ANR	1044479	CompoundStatement		126:95:4408:4408	1043514	3					
ANR	1044480	IfStatement	if ( chctx -> CWlengthT [ j ] > 0 )		1043514	0					
ANR	1044481	Condition	chctx -> CWlengthT [ j ] > 0	129:20:4565:4587	1043514	0	True				
ANR	1044482	RelationalExpression	chctx -> CWlengthT [ j ] > 0		1043514	0		>			
ANR	1044483	ArrayIndexing	chctx -> CWlengthT [ j ]		1043514	0					
ANR	1044484	PtrMemberAccess	chctx -> CWlengthT		1043514	0					
ANR	1044485	Identifier	chctx		1043514	0					
ANR	1044486	Identifier	CWlengthT		1043514	1					
ANR	1044487	Identifier	j		1043514	1					
ANR	1044488	PrimaryExpression	0		1043514	1					
ANR	1044489	CompoundStatement		127:45:4455:4455	1043514	1					
ANR	1044490	ExpressionStatement	chctx -> CWlengthT [ j ] --	130:20:4612:4633	1043514	0	True				
ANR	1044491	PostIncDecOperationExpression	chctx -> CWlengthT [ j ] --		1043514	0					
ANR	1044492	ArrayIndexing	chctx -> CWlengthT [ j ]		1043514	0					
ANR	1044493	PtrMemberAccess	chctx -> CWlengthT		1043514	0					
ANR	1044494	Identifier	chctx		1043514	0					
ANR	1044495	Identifier	CWlengthT		1043514	1					
ANR	1044496	Identifier	j		1043514	1					
ANR	1044497	IncDec	--		1043514	1					
ANR	1044498	ExpressionStatement	summer --	131:20:4655:4663	1043514	1	True				
ANR	1044499	PostIncDecOperationExpression	summer --		1043514	0					
ANR	1044500	Identifier	summer		1043514	0					
ANR	1044501	IncDec	--		1043514	1					
ANR	1044502	ReturnStatement	return 0 ;	136:4:4717:4725	1043514	28	True				
ANR	1044503	PrimaryExpression	0		1043514	0					
ANR	1044504	ReturnType	static int		1043514	1					
ANR	1044505	Identifier	bit_allocation		1043514	2					
ANR	1044506	ParameterList	"IMCContext * q , IMCChannel * chctx , int stream_format_code , int freebits , int flag"		1043514	3					
ANR	1044507	Parameter	IMCContext * q	1:26:26:38	1043514	0	True				
ANR	1044508	ParameterType	IMCContext *		1043514	0					
ANR	1044509	Identifier	q		1043514	1					
ANR	1044510	Parameter	IMCChannel * chctx	1:41:41:57	1043514	1	True				
ANR	1044511	ParameterType	IMCChannel *		1043514	0					
ANR	1044512	Identifier	chctx		1043514	1					
ANR	1044513	Parameter	int stream_format_code	2:26:86:107	1043514	2	True				
ANR	1044514	ParameterType	int		1043514	0					
ANR	1044515	Identifier	stream_format_code		1043514	1					
ANR	1044516	Parameter	int freebits	2:50:110:121	1043514	3	True				
ANR	1044517	ParameterType	int		1043514	0					
ANR	1044518	Identifier	freebits		1043514	1					
ANR	1044519	Parameter	int flag	2:64:124:131	1043514	4	True				
ANR	1044520	ParameterType	int		1043514	0					
ANR	1044521	Identifier	flag		1043514	1					
ANR	1044522	CFGEntryNode	ENTRY		1043514		True				
ANR	1044523	CFGExitNode	EXIT		1043514		True				
ANR	1044524	Symbol	chctx		1043514						
ANR	1044525	Symbol	cwlen		1043514						
ANR	1044526	Symbol	* * chctx -> flcoeffs1		1043514						
ANR	1044527	Symbol	summa		1043514						
ANR	1044528	Symbol	* xTab		1043514						
ANR	1044529	Symbol	limit		1043514						
ANR	1044530	Symbol	* chctx -> CWlengthT		1043514						
ANR	1044531	Symbol	log2f		1043514						
ANR	1044532	Symbol	* chctx -> bandWidthT		1043514						
ANR	1044533	Symbol	workT		1043514						
ANR	1044534	Symbol	* * i		1043514						
ANR	1044535	Symbol	* chctx -> flcoeffs1		1043514						
ANR	1044536	Symbol	freebits		1043514						
ANR	1044537	Symbol	* chctx		1043514						
ANR	1044538	Symbol	* chctx -> flcoeffs5		1043514						
ANR	1044539	Symbol	* chctx -> flcoeffs3		1043514						
ANR	1044540	Symbol	* chctx -> flcoeffs4		1043514						
ANR	1044541	Symbol	* band_tab		1043514						
ANR	1044542	Symbol	lowest		1043514						
ANR	1044543	Symbol	* indx		1043514						
ANR	1044544	Symbol	highest		1043514						
ANR	1044545	Symbol	* chctx -> bitsBandT		1043514						
ANR	1044546	Symbol	chctx -> flcoeffs1		1043514						
ANR	1044547	Symbol	chctx -> flcoeffs4		1043514						
ANR	1044548	Symbol	chctx -> bitsBandT		1043514						
ANR	1044549	Symbol	chctx -> flcoeffs3		1043514						
ANR	1044550	Symbol	* flag		1043514						
ANR	1044551	Symbol	t1		1043514						
ANR	1044552	Symbol	chctx -> flcoeffs5		1043514						
ANR	1044553	Symbol	t2		1043514						
ANR	1044554	Symbol	av_clipf		1043514						
ANR	1044555	Symbol	found_indx		1043514						
ANR	1044556	Symbol	flag		1043514						
ANR	1044557	Symbol	chctx -> CWlengthT		1043514						
ANR	1044558	Symbol	indx		1043514						
ANR	1044559	Symbol	iacc		1043514						
ANR	1044560	Symbol	xTab		1043514						
ANR	1044561	Symbol	low_indx		1043514						
ANR	1044562	Symbol	* workT		1043514						
ANR	1044563	Symbol	summer		1043514						
ANR	1044564	Symbol	* * chctx		1043514						
ANR	1044565	Symbol	* low_indx		1043514						
ANR	1044566	Symbol	* * * chctx		1043514						
ANR	1044567	Symbol	stream_format_code		1043514						
ANR	1044568	Symbol	band_tab		1043514						
ANR	1044569	Symbol	rres		1043514						
ANR	1044570	Symbol	* found_indx		1043514						
ANR	1044571	Symbol	* highest		1043514						
ANR	1044572	Symbol	flg		1043514						
ANR	1044573	Symbol	chctx -> bandWidthT		1043514						
ANR	1044574	Symbol	i		1043514						
ANR	1044575	Symbol	* BANDS		1043514						
ANR	1044576	Symbol	j		1043514						
ANR	1044577	Symbol	q		1043514						
ANR	1044578	Symbol	* i		1043514						
ANR	1044579	Symbol	* j		1043514						
ANR	1044580	Symbol	BANDS		1043514						
ANR	1044581	Symbol	FFMAX		1043514						
