command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3362327	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_h264_decode_mb_cavlc_1.c								
ANR	3362328	Function	ff_h264_decode_mb_cavlc	1:0:0:20915							
ANR	3362329	FunctionDef	"ff_h264_decode_mb_cavlc (const H264Context * h , H264SliceContext * sl)"		3362328	0					
ANR	3362330	CompoundStatement		3:0:73:20915	3362328	0					
ANR	3362331	IdentifierDeclStatement	int mb_xy ;	5:4:80:89	3362328	0	True				
ANR	3362332	IdentifierDecl	mb_xy		3362328	0					
ANR	3362333	IdentifierDeclType	int		3362328	0					
ANR	3362334	Identifier	mb_xy		3362328	1					
ANR	3362335	IdentifierDeclStatement	int partition_count ;	7:4:96:115	3362328	1	True				
ANR	3362336	IdentifierDecl	partition_count		3362328	0					
ANR	3362337	IdentifierDeclType	int		3362328	0					
ANR	3362338	Identifier	partition_count		3362328	1					
ANR	3362339	IdentifierDeclStatement	"unsigned int mb_type , cbp ;"	9:4:122:147	3362328	2	True				
ANR	3362340	IdentifierDecl	mb_type		3362328	0					
ANR	3362341	IdentifierDeclType	unsigned int		3362328	0					
ANR	3362342	Identifier	mb_type		3362328	1					
ANR	3362343	IdentifierDecl	cbp		3362328	1					
ANR	3362344	IdentifierDeclType	unsigned int		3362328	0					
ANR	3362345	Identifier	cbp		3362328	1					
ANR	3362346	IdentifierDeclStatement	int dct8x8_allowed = h -> ps . pps -> transform_8x8_mode ;	11:4:154:203	3362328	3	True				
ANR	3362347	IdentifierDecl	dct8x8_allowed = h -> ps . pps -> transform_8x8_mode		3362328	0					
ANR	3362348	IdentifierDeclType	int		3362328	0					
ANR	3362349	Identifier	dct8x8_allowed		3362328	1					
ANR	3362350	AssignmentExpression	dct8x8_allowed = h -> ps . pps -> transform_8x8_mode		3362328	2		=			
ANR	3362351	Identifier	dct8x8_allowed		3362328	0					
ANR	3362352	PtrMemberAccess	h -> ps . pps -> transform_8x8_mode		3362328	1					
ANR	3362353	MemberAccess	h -> ps . pps		3362328	0					
ANR	3362354	PtrMemberAccess	h -> ps		3362328	0					
ANR	3362355	Identifier	h		3362328	0					
ANR	3362356	Identifier	ps		3362328	1					
ANR	3362357	Identifier	pps		3362328	1					
ANR	3362358	Identifier	transform_8x8_mode		3362328	1					
ANR	3362359	IdentifierDeclStatement	int decode_chroma = h -> ps . sps -> chroma_format_idc == 1 || h -> ps . sps -> chroma_format_idc == 2 ;	13:4:210:300	3362328	4	True				
ANR	3362360	IdentifierDecl	decode_chroma = h -> ps . sps -> chroma_format_idc == 1 || h -> ps . sps -> chroma_format_idc == 2		3362328	0					
ANR	3362361	IdentifierDeclType	int		3362328	0					
ANR	3362362	Identifier	decode_chroma		3362328	1					
ANR	3362363	AssignmentExpression	decode_chroma = h -> ps . sps -> chroma_format_idc == 1 || h -> ps . sps -> chroma_format_idc == 2		3362328	2		=			
ANR	3362364	Identifier	decode_chroma		3362328	0					
ANR	3362365	OrExpression	h -> ps . sps -> chroma_format_idc == 1 || h -> ps . sps -> chroma_format_idc == 2		3362328	1		||			
ANR	3362366	EqualityExpression	h -> ps . sps -> chroma_format_idc == 1		3362328	0		==			
ANR	3362367	PtrMemberAccess	h -> ps . sps -> chroma_format_idc		3362328	0					
ANR	3362368	MemberAccess	h -> ps . sps		3362328	0					
ANR	3362369	PtrMemberAccess	h -> ps		3362328	0					
ANR	3362370	Identifier	h		3362328	0					
ANR	3362371	Identifier	ps		3362328	1					
ANR	3362372	Identifier	sps		3362328	1					
ANR	3362373	Identifier	chroma_format_idc		3362328	1					
ANR	3362374	PrimaryExpression	1		3362328	1					
ANR	3362375	EqualityExpression	h -> ps . sps -> chroma_format_idc == 2		3362328	1		==			
ANR	3362376	PtrMemberAccess	h -> ps . sps -> chroma_format_idc		3362328	0					
ANR	3362377	MemberAccess	h -> ps . sps		3362328	0					
ANR	3362378	PtrMemberAccess	h -> ps		3362328	0					
ANR	3362379	Identifier	h		3362328	0					
ANR	3362380	Identifier	ps		3362328	1					
ANR	3362381	Identifier	sps		3362328	1					
ANR	3362382	Identifier	chroma_format_idc		3362328	1					
ANR	3362383	PrimaryExpression	2		3362328	1					
ANR	3362384	IdentifierDeclStatement	const int pixel_shift = h -> pixel_shift ;	15:4:307:345	3362328	5	True				
ANR	3362385	IdentifierDecl	pixel_shift = h -> pixel_shift		3362328	0					
ANR	3362386	IdentifierDeclType	const int		3362328	0					
ANR	3362387	Identifier	pixel_shift		3362328	1					
ANR	3362388	AssignmentExpression	pixel_shift = h -> pixel_shift		3362328	2		=			
ANR	3362389	Identifier	pixel_shift		3362328	0					
ANR	3362390	PtrMemberAccess	h -> pixel_shift		3362328	1					
ANR	3362391	Identifier	h		3362328	0					
ANR	3362392	Identifier	pixel_shift		3362328	1					
ANR	3362393	ExpressionStatement	mb_xy = sl -> mb_xy = sl -> mb_x + sl -> mb_y * h -> mb_stride	19:4:354:406	3362328	6	True				
ANR	3362394	AssignmentExpression	mb_xy = sl -> mb_xy = sl -> mb_x + sl -> mb_y * h -> mb_stride		3362328	0		=			
ANR	3362395	Identifier	mb_xy		3362328	0					
ANR	3362396	AssignmentExpression	sl -> mb_xy = sl -> mb_x + sl -> mb_y * h -> mb_stride		3362328	1		=			
ANR	3362397	PtrMemberAccess	sl -> mb_xy		3362328	0					
ANR	3362398	Identifier	sl		3362328	0					
ANR	3362399	Identifier	mb_xy		3362328	1					
ANR	3362400	AdditiveExpression	sl -> mb_x + sl -> mb_y * h -> mb_stride		3362328	1		+			
ANR	3362401	PtrMemberAccess	sl -> mb_x		3362328	0					
ANR	3362402	Identifier	sl		3362328	0					
ANR	3362403	Identifier	mb_x		3362328	1					
ANR	3362404	MultiplicativeExpression	sl -> mb_y * h -> mb_stride		3362328	1		*			
ANR	3362405	PtrMemberAccess	sl -> mb_y		3362328	0					
ANR	3362406	Identifier	sl		3362328	0					
ANR	3362407	Identifier	mb_y		3362328	1					
ANR	3362408	PtrMemberAccess	h -> mb_stride		3362328	1					
ANR	3362409	Identifier	h		3362328	0					
ANR	3362410	Identifier	mb_stride		3362328	1					
ANR	3362411	ExpressionStatement	"ff_tlog ( h -> avctx , ""pic:%d mb:%d/%d\\n"" , h -> poc . frame_num , sl -> mb_x , sl -> mb_y )"	23:4:415:491	3362328	7	True				
ANR	3362412	CallExpression	"ff_tlog ( h -> avctx , ""pic:%d mb:%d/%d\\n"" , h -> poc . frame_num , sl -> mb_x , sl -> mb_y )"		3362328	0					
ANR	3362413	Callee	ff_tlog		3362328	0					
ANR	3362414	Identifier	ff_tlog		3362328	0					
ANR	3362415	ArgumentList	h -> avctx		3362328	1					
ANR	3362416	Argument	h -> avctx		3362328	0					
ANR	3362417	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3362418	Identifier	h		3362328	0					
ANR	3362419	Identifier	avctx		3362328	1					
ANR	3362420	Argument	"""pic:%d mb:%d/%d\\n"""		3362328	1					
ANR	3362421	PrimaryExpression	"""pic:%d mb:%d/%d\\n"""		3362328	0					
ANR	3362422	Argument	h -> poc . frame_num		3362328	2					
ANR	3362423	MemberAccess	h -> poc . frame_num		3362328	0					
ANR	3362424	PtrMemberAccess	h -> poc		3362328	0					
ANR	3362425	Identifier	h		3362328	0					
ANR	3362426	Identifier	poc		3362328	1					
ANR	3362427	Identifier	frame_num		3362328	1					
ANR	3362428	Argument	sl -> mb_x		3362328	3					
ANR	3362429	PtrMemberAccess	sl -> mb_x		3362328	0					
ANR	3362430	Identifier	sl		3362328	0					
ANR	3362431	Identifier	mb_x		3362328	1					
ANR	3362432	Argument	sl -> mb_y		3362328	4					
ANR	3362433	PtrMemberAccess	sl -> mb_y		3362328	0					
ANR	3362434	Identifier	sl		3362328	0					
ANR	3362435	Identifier	mb_y		3362328	1					
ANR	3362436	ExpressionStatement	cbp = 0	25:4:498:505	3362328	8	True				
ANR	3362437	AssignmentExpression	cbp = 0		3362328	0		=			
ANR	3362438	Identifier	cbp		3362328	0					
ANR	3362439	PrimaryExpression	0		3362328	1					
ANR	3362440	IfStatement	if ( sl -> slice_type_nos != AV_PICTURE_TYPE_I )		3362328	9					
ANR	3362441	Condition	sl -> slice_type_nos != AV_PICTURE_TYPE_I	29:8:607:645	3362328	0	True				
ANR	3362442	EqualityExpression	sl -> slice_type_nos != AV_PICTURE_TYPE_I		3362328	0		!=			
ANR	3362443	PtrMemberAccess	sl -> slice_type_nos		3362328	0					
ANR	3362444	Identifier	sl		3362328	0					
ANR	3362445	Identifier	slice_type_nos		3362328	1					
ANR	3362446	Identifier	AV_PICTURE_TYPE_I		3362328	1					
ANR	3362447	CompoundStatement		27:49:574:574	3362328	1					
ANR	3362448	IfStatement	if ( sl -> mb_skip_run == - 1 )		3362328	0					
ANR	3362449	Condition	sl -> mb_skip_run == - 1	31:12:663:683	3362328	0	True				
ANR	3362450	EqualityExpression	sl -> mb_skip_run == - 1		3362328	0		==			
ANR	3362451	PtrMemberAccess	sl -> mb_skip_run		3362328	0					
ANR	3362452	Identifier	sl		3362328	0					
ANR	3362453	Identifier	mb_skip_run		3362328	1					
ANR	3362454	UnaryOperationExpression	- 1		3362328	1					
ANR	3362455	UnaryOperator	-		3362328	0					
ANR	3362456	PrimaryExpression	1		3362328	1					
ANR	3362457	ExpressionStatement	sl -> mb_skip_run = get_ue_golomb_long ( & sl -> gb )	33:12:699:744	3362328	1	True				
ANR	3362458	AssignmentExpression	sl -> mb_skip_run = get_ue_golomb_long ( & sl -> gb )		3362328	0		=			
ANR	3362459	PtrMemberAccess	sl -> mb_skip_run		3362328	0					
ANR	3362460	Identifier	sl		3362328	0					
ANR	3362461	Identifier	mb_skip_run		3362328	1					
ANR	3362462	CallExpression	get_ue_golomb_long ( & sl -> gb )		3362328	1					
ANR	3362463	Callee	get_ue_golomb_long		3362328	0					
ANR	3362464	Identifier	get_ue_golomb_long		3362328	0					
ANR	3362465	ArgumentList	& sl -> gb		3362328	1					
ANR	3362466	Argument	& sl -> gb		3362328	0					
ANR	3362467	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3362468	UnaryOperator	&		3362328	0					
ANR	3362469	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3362470	Identifier	sl		3362328	0					
ANR	3362471	Identifier	gb		3362328	1					
ANR	3362472	IfStatement	if ( sl -> mb_skip_run -- )		3362328	1					
ANR	3362473	Condition	sl -> mb_skip_run --	37:12:761:777	3362328	0	True				
ANR	3362474	PostIncDecOperationExpression	sl -> mb_skip_run --		3362328	0					
ANR	3362475	PtrMemberAccess	sl -> mb_skip_run		3362328	0					
ANR	3362476	Identifier	sl		3362328	0					
ANR	3362477	Identifier	mb_skip_run		3362328	1					
ANR	3362478	IncDec	--		3362328	1					
ANR	3362479	CompoundStatement		35:31:706:706	3362328	1					
ANR	3362480	IfStatement	if ( FRAME_MBAFF ( h ) && ( sl -> mb_y & 1 ) == 0 )		3362328	0					
ANR	3362481	Condition	FRAME_MBAFF ( h ) && ( sl -> mb_y & 1 ) == 0	39:16:799:835	3362328	0	True				
ANR	3362482	AndExpression	FRAME_MBAFF ( h ) && ( sl -> mb_y & 1 ) == 0		3362328	0		&&			
ANR	3362483	CallExpression	FRAME_MBAFF ( h )		3362328	0					
ANR	3362484	Callee	FRAME_MBAFF		3362328	0					
ANR	3362485	Identifier	FRAME_MBAFF		3362328	0					
ANR	3362486	ArgumentList	h		3362328	1					
ANR	3362487	Argument	h		3362328	0					
ANR	3362488	Identifier	h		3362328	0					
ANR	3362489	EqualityExpression	( sl -> mb_y & 1 ) == 0		3362328	1		==			
ANR	3362490	BitAndExpression	sl -> mb_y & 1		3362328	0		&			
ANR	3362491	PtrMemberAccess	sl -> mb_y		3362328	0					
ANR	3362492	Identifier	sl		3362328	0					
ANR	3362493	Identifier	mb_y		3362328	1					
ANR	3362494	PrimaryExpression	1		3362328	1					
ANR	3362495	PrimaryExpression	0		3362328	1					
ANR	3362496	CompoundStatement		37:55:764:764	3362328	1					
ANR	3362497	IfStatement	if ( sl -> mb_skip_run == 0 )		3362328	0					
ANR	3362498	Condition	sl -> mb_skip_run == 0	41:20:861:880	3362328	0	True				
ANR	3362499	EqualityExpression	sl -> mb_skip_run == 0		3362328	0		==			
ANR	3362500	PtrMemberAccess	sl -> mb_skip_run		3362328	0					
ANR	3362501	Identifier	sl		3362328	0					
ANR	3362502	Identifier	mb_skip_run		3362328	1					
ANR	3362503	PrimaryExpression	0		3362328	1					
ANR	3362504	ExpressionStatement	sl -> mb_mbaff = sl -> mb_field_decoding_flag = get_bits1 ( & sl -> gb )	43:20:904:966	3362328	1	True				
ANR	3362505	AssignmentExpression	sl -> mb_mbaff = sl -> mb_field_decoding_flag = get_bits1 ( & sl -> gb )		3362328	0		=			
ANR	3362506	PtrMemberAccess	sl -> mb_mbaff		3362328	0					
ANR	3362507	Identifier	sl		3362328	0					
ANR	3362508	Identifier	mb_mbaff		3362328	1					
ANR	3362509	AssignmentExpression	sl -> mb_field_decoding_flag = get_bits1 ( & sl -> gb )		3362328	1		=			
ANR	3362510	PtrMemberAccess	sl -> mb_field_decoding_flag		3362328	0					
ANR	3362511	Identifier	sl		3362328	0					
ANR	3362512	Identifier	mb_field_decoding_flag		3362328	1					
ANR	3362513	CallExpression	get_bits1 ( & sl -> gb )		3362328	1					
ANR	3362514	Callee	get_bits1		3362328	0					
ANR	3362515	Identifier	get_bits1		3362328	0					
ANR	3362516	ArgumentList	& sl -> gb		3362328	1					
ANR	3362517	Argument	& sl -> gb		3362328	0					
ANR	3362518	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3362519	UnaryOperator	&		3362328	0					
ANR	3362520	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3362521	Identifier	sl		3362328	0					
ANR	3362522	Identifier	gb		3362328	1					
ANR	3362523	ExpressionStatement	"decode_mb_skip ( h , sl )"	47:12:996:1017	3362328	1	True				
ANR	3362524	CallExpression	"decode_mb_skip ( h , sl )"		3362328	0					
ANR	3362525	Callee	decode_mb_skip		3362328	0					
ANR	3362526	Identifier	decode_mb_skip		3362328	0					
ANR	3362527	ArgumentList	h		3362328	1					
ANR	3362528	Argument	h		3362328	0					
ANR	3362529	Identifier	h		3362328	0					
ANR	3362530	Argument	sl		3362328	1					
ANR	3362531	Identifier	sl		3362328	0					
ANR	3362532	ReturnStatement	return 0 ;	49:12:1032:1040	3362328	2	True				
ANR	3362533	PrimaryExpression	0		3362328	0					
ANR	3362534	IfStatement	if ( FRAME_MBAFF ( h ) )		3362328	10					
ANR	3362535	Condition	FRAME_MBAFF ( h )	55:8:1069:1082	3362328	0	True				
ANR	3362536	CallExpression	FRAME_MBAFF ( h )		3362328	0					
ANR	3362537	Callee	FRAME_MBAFF		3362328	0					
ANR	3362538	Identifier	FRAME_MBAFF		3362328	0					
ANR	3362539	ArgumentList	h		3362328	1					
ANR	3362540	Argument	h		3362328	0					
ANR	3362541	Identifier	h		3362328	0					
ANR	3362542	CompoundStatement		53:24:1011:1011	3362328	1					
ANR	3362543	IfStatement	if ( ( sl -> mb_y & 1 ) == 0 )		3362328	0					
ANR	3362544	Condition	( sl -> mb_y & 1 ) == 0	57:12:1100:1118	3362328	0	True				
ANR	3362545	EqualityExpression	( sl -> mb_y & 1 ) == 0		3362328	0		==			
ANR	3362546	BitAndExpression	sl -> mb_y & 1		3362328	0		&			
ANR	3362547	PtrMemberAccess	sl -> mb_y		3362328	0					
ANR	3362548	Identifier	sl		3362328	0					
ANR	3362549	Identifier	mb_y		3362328	1					
ANR	3362550	PrimaryExpression	1		3362328	1					
ANR	3362551	PrimaryExpression	0		3362328	1					
ANR	3362552	ExpressionStatement	sl -> mb_mbaff = sl -> mb_field_decoding_flag = get_bits1 ( & sl -> gb )	59:12:1134:1196	3362328	1	True				
ANR	3362553	AssignmentExpression	sl -> mb_mbaff = sl -> mb_field_decoding_flag = get_bits1 ( & sl -> gb )		3362328	0		=			
ANR	3362554	PtrMemberAccess	sl -> mb_mbaff		3362328	0					
ANR	3362555	Identifier	sl		3362328	0					
ANR	3362556	Identifier	mb_mbaff		3362328	1					
ANR	3362557	AssignmentExpression	sl -> mb_field_decoding_flag = get_bits1 ( & sl -> gb )		3362328	1		=			
ANR	3362558	PtrMemberAccess	sl -> mb_field_decoding_flag		3362328	0					
ANR	3362559	Identifier	sl		3362328	0					
ANR	3362560	Identifier	mb_field_decoding_flag		3362328	1					
ANR	3362561	CallExpression	get_bits1 ( & sl -> gb )		3362328	1					
ANR	3362562	Callee	get_bits1		3362328	0					
ANR	3362563	Identifier	get_bits1		3362328	0					
ANR	3362564	ArgumentList	& sl -> gb		3362328	1					
ANR	3362565	Argument	& sl -> gb		3362328	0					
ANR	3362566	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3362567	UnaryOperator	&		3362328	0					
ANR	3362568	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3362569	Identifier	sl		3362328	0					
ANR	3362570	Identifier	gb		3362328	1					
ANR	3362571	ExpressionStatement	sl -> prev_mb_skipped = 0	65:4:1212:1235	3362328	11	True				
ANR	3362572	AssignmentExpression	sl -> prev_mb_skipped = 0		3362328	0		=			
ANR	3362573	PtrMemberAccess	sl -> prev_mb_skipped		3362328	0					
ANR	3362574	Identifier	sl		3362328	0					
ANR	3362575	Identifier	prev_mb_skipped		3362328	1					
ANR	3362576	PrimaryExpression	0		3362328	1					
ANR	3362577	ExpressionStatement	mb_type = get_ue_golomb ( & sl -> gb )	69:4:1244:1275	3362328	12	True				
ANR	3362578	AssignmentExpression	mb_type = get_ue_golomb ( & sl -> gb )		3362328	0		=			
ANR	3362579	Identifier	mb_type		3362328	0					
ANR	3362580	CallExpression	get_ue_golomb ( & sl -> gb )		3362328	1					
ANR	3362581	Callee	get_ue_golomb		3362328	0					
ANR	3362582	Identifier	get_ue_golomb		3362328	0					
ANR	3362583	ArgumentList	& sl -> gb		3362328	1					
ANR	3362584	Argument	& sl -> gb		3362328	0					
ANR	3362585	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3362586	UnaryOperator	&		3362328	0					
ANR	3362587	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3362588	Identifier	sl		3362328	0					
ANR	3362589	Identifier	gb		3362328	1					
ANR	3362590	IfStatement	if ( sl -> slice_type_nos == AV_PICTURE_TYPE_B )		3362328	13					
ANR	3362591	Condition	sl -> slice_type_nos == AV_PICTURE_TYPE_B	71:8:1286:1324	3362328	0	True				
ANR	3362592	EqualityExpression	sl -> slice_type_nos == AV_PICTURE_TYPE_B		3362328	0		==			
ANR	3362593	PtrMemberAccess	sl -> slice_type_nos		3362328	0					
ANR	3362594	Identifier	sl		3362328	0					
ANR	3362595	Identifier	slice_type_nos		3362328	1					
ANR	3362596	Identifier	AV_PICTURE_TYPE_B		3362328	1					
ANR	3362597	CompoundStatement		69:49:1253:1253	3362328	1					
ANR	3362598	IfStatement	if ( mb_type < 23 )		3362328	0					
ANR	3362599	Condition	mb_type < 23	73:11:1341:1352	3362328	0	True				
ANR	3362600	RelationalExpression	mb_type < 23		3362328	0		<			
ANR	3362601	Identifier	mb_type		3362328	0					
ANR	3362602	PrimaryExpression	23		3362328	1					
ANR	3362603	CompoundStatement		71:24:1280:1280	3362328	1					
ANR	3362604	ExpressionStatement	partition_count = ff_h264_b_mb_type_info [ mb_type ] . partition_count	75:12:1369:1434	3362328	0	True				
ANR	3362605	AssignmentExpression	partition_count = ff_h264_b_mb_type_info [ mb_type ] . partition_count		3362328	0		=			
ANR	3362606	Identifier	partition_count		3362328	0					
ANR	3362607	MemberAccess	ff_h264_b_mb_type_info [ mb_type ] . partition_count		3362328	1					
ANR	3362608	ArrayIndexing	ff_h264_b_mb_type_info [ mb_type ]		3362328	0					
ANR	3362609	Identifier	ff_h264_b_mb_type_info		3362328	0					
ANR	3362610	Identifier	mb_type		3362328	1					
ANR	3362611	Identifier	partition_count		3362328	1					
ANR	3362612	ExpressionStatement	mb_type = ff_h264_b_mb_type_info [ mb_type ] . type	77:12:1449:1503	3362328	1	True				
ANR	3362613	AssignmentExpression	mb_type = ff_h264_b_mb_type_info [ mb_type ] . type		3362328	0		=			
ANR	3362614	Identifier	mb_type		3362328	0					
ANR	3362615	MemberAccess	ff_h264_b_mb_type_info [ mb_type ] . type		3362328	1					
ANR	3362616	ArrayIndexing	ff_h264_b_mb_type_info [ mb_type ]		3362328	0					
ANR	3362617	Identifier	ff_h264_b_mb_type_info		3362328	0					
ANR	3362618	Identifier	mb_type		3362328	1					
ANR	3362619	Identifier	type		3362328	1					
ANR	3362620	ElseStatement	else		3362328	0					
ANR	3362621	CompoundStatement		77:13:1445:1445	3362328	0					
ANR	3362622	ExpressionStatement	mb_type -= 23	81:12:1534:1547	3362328	0	True				
ANR	3362623	AssignmentExpression	mb_type -= 23		3362328	0		-=			
ANR	3362624	Identifier	mb_type		3362328	0					
ANR	3362625	PrimaryExpression	23		3362328	1					
ANR	3362626	GotoStatement	goto decode_intra_mb ;	83:12:1562:1582	3362328	1	True				
ANR	3362627	Identifier	decode_intra_mb		3362328	0					
ANR	3362628	ElseStatement	else		3362328	0					
ANR	3362629	IfStatement	if ( sl -> slice_type_nos == AV_PICTURE_TYPE_P )		3362328	0					
ANR	3362630	Condition	sl -> slice_type_nos == AV_PICTURE_TYPE_P	87:15:1611:1649	3362328	0	True				
ANR	3362631	EqualityExpression	sl -> slice_type_nos == AV_PICTURE_TYPE_P		3362328	0		==			
ANR	3362632	PtrMemberAccess	sl -> slice_type_nos		3362328	0					
ANR	3362633	Identifier	sl		3362328	0					
ANR	3362634	Identifier	slice_type_nos		3362328	1					
ANR	3362635	Identifier	AV_PICTURE_TYPE_P		3362328	1					
ANR	3362636	CompoundStatement		85:56:1578:1578	3362328	1					
ANR	3362637	IfStatement	if ( mb_type < 5 )		3362328	0					
ANR	3362638	Condition	mb_type < 5	89:11:1666:1676	3362328	0	True				
ANR	3362639	RelationalExpression	mb_type < 5		3362328	0		<			
ANR	3362640	Identifier	mb_type		3362328	0					
ANR	3362641	PrimaryExpression	5		3362328	1					
ANR	3362642	CompoundStatement		87:23:1604:1604	3362328	1					
ANR	3362643	ExpressionStatement	partition_count = ff_h264_p_mb_type_info [ mb_type ] . partition_count	91:12:1693:1758	3362328	0	True				
ANR	3362644	AssignmentExpression	partition_count = ff_h264_p_mb_type_info [ mb_type ] . partition_count		3362328	0		=			
ANR	3362645	Identifier	partition_count		3362328	0					
ANR	3362646	MemberAccess	ff_h264_p_mb_type_info [ mb_type ] . partition_count		3362328	1					
ANR	3362647	ArrayIndexing	ff_h264_p_mb_type_info [ mb_type ]		3362328	0					
ANR	3362648	Identifier	ff_h264_p_mb_type_info		3362328	0					
ANR	3362649	Identifier	mb_type		3362328	1					
ANR	3362650	Identifier	partition_count		3362328	1					
ANR	3362651	ExpressionStatement	mb_type = ff_h264_p_mb_type_info [ mb_type ] . type	93:12:1773:1827	3362328	1	True				
ANR	3362652	AssignmentExpression	mb_type = ff_h264_p_mb_type_info [ mb_type ] . type		3362328	0		=			
ANR	3362653	Identifier	mb_type		3362328	0					
ANR	3362654	MemberAccess	ff_h264_p_mb_type_info [ mb_type ] . type		3362328	1					
ANR	3362655	ArrayIndexing	ff_h264_p_mb_type_info [ mb_type ]		3362328	0					
ANR	3362656	Identifier	ff_h264_p_mb_type_info		3362328	0					
ANR	3362657	Identifier	mb_type		3362328	1					
ANR	3362658	Identifier	type		3362328	1					
ANR	3362659	ElseStatement	else		3362328	0					
ANR	3362660	CompoundStatement		93:13:1769:1769	3362328	0					
ANR	3362661	ExpressionStatement	mb_type -= 5	97:12:1858:1870	3362328	0	True				
ANR	3362662	AssignmentExpression	mb_type -= 5		3362328	0		-=			
ANR	3362663	Identifier	mb_type		3362328	0					
ANR	3362664	PrimaryExpression	5		3362328	1					
ANR	3362665	GotoStatement	goto decode_intra_mb ;	99:12:1885:1905	3362328	1	True				
ANR	3362666	Identifier	decode_intra_mb		3362328	0					
ANR	3362667	ElseStatement	else		3362328	0					
ANR	3362668	CompoundStatement		101:9:1854:1854	3362328	0					
ANR	3362669	ExpressionStatement	av_assert2 ( sl -> slice_type_nos == AV_PICTURE_TYPE_I )	105:7:1938:1989	3362328	0	True				
ANR	3362670	CallExpression	av_assert2 ( sl -> slice_type_nos == AV_PICTURE_TYPE_I )		3362328	0					
ANR	3362671	Callee	av_assert2		3362328	0					
ANR	3362672	Identifier	av_assert2		3362328	0					
ANR	3362673	ArgumentList	sl -> slice_type_nos == AV_PICTURE_TYPE_I		3362328	1					
ANR	3362674	Argument	sl -> slice_type_nos == AV_PICTURE_TYPE_I		3362328	0					
ANR	3362675	EqualityExpression	sl -> slice_type_nos == AV_PICTURE_TYPE_I		3362328	0		==			
ANR	3362676	PtrMemberAccess	sl -> slice_type_nos		3362328	0					
ANR	3362677	Identifier	sl		3362328	0					
ANR	3362678	Identifier	slice_type_nos		3362328	1					
ANR	3362679	Identifier	AV_PICTURE_TYPE_I		3362328	1					
ANR	3362680	IfStatement	if ( sl -> slice_type == AV_PICTURE_TYPE_SI && mb_type )		3362328	1					
ANR	3362681	Condition	sl -> slice_type == AV_PICTURE_TYPE_SI && mb_type	107:12:2004:2050	3362328	0	True				
ANR	3362682	AndExpression	sl -> slice_type == AV_PICTURE_TYPE_SI && mb_type		3362328	0		&&			
ANR	3362683	EqualityExpression	sl -> slice_type == AV_PICTURE_TYPE_SI		3362328	0		==			
ANR	3362684	PtrMemberAccess	sl -> slice_type		3362328	0					
ANR	3362685	Identifier	sl		3362328	0					
ANR	3362686	Identifier	slice_type		3362328	1					
ANR	3362687	Identifier	AV_PICTURE_TYPE_SI		3362328	1					
ANR	3362688	Identifier	mb_type		3362328	1					
ANR	3362689	ExpressionStatement	mb_type --	109:12:2066:2075	3362328	1	True				
ANR	3362690	PostIncDecOperationExpression	mb_type --		3362328	0					
ANR	3362691	Identifier	mb_type		3362328	0					
ANR	3362692	IncDec	--		3362328	1					
ANR	3362693	Label	decode_intra_mb :	111:0:2078:2093	3362328	2	True				
ANR	3362694	Identifier	decode_intra_mb		3362328	0					
ANR	3362695	IfStatement	if ( mb_type > 25 )		3362328	3					
ANR	3362696	Condition	mb_type > 25	113:11:2107:2118	3362328	0	True				
ANR	3362697	RelationalExpression	mb_type > 25		3362328	0		>			
ANR	3362698	Identifier	mb_type		3362328	0					
ANR	3362699	PrimaryExpression	25		3362328	1					
ANR	3362700	CompoundStatement		111:24:2046:2046	3362328	1					
ANR	3362701	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""mb_type %d in %c slice too large at %d %d\\n"" , mb_type , av_get_picture_type_char ( sl -> slice_type ) , sl -> mb_x , sl -> mb_y )"	115:12:2135:2283	3362328	0	True				
ANR	3362702	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""mb_type %d in %c slice too large at %d %d\\n"" , mb_type , av_get_picture_type_char ( sl -> slice_type ) , sl -> mb_x , sl -> mb_y )"		3362328	0					
ANR	3362703	Callee	av_log		3362328	0					
ANR	3362704	Identifier	av_log		3362328	0					
ANR	3362705	ArgumentList	h -> avctx		3362328	1					
ANR	3362706	Argument	h -> avctx		3362328	0					
ANR	3362707	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3362708	Identifier	h		3362328	0					
ANR	3362709	Identifier	avctx		3362328	1					
ANR	3362710	Argument	AV_LOG_ERROR		3362328	1					
ANR	3362711	Identifier	AV_LOG_ERROR		3362328	0					
ANR	3362712	Argument	"""mb_type %d in %c slice too large at %d %d\\n"""		3362328	2					
ANR	3362713	PrimaryExpression	"""mb_type %d in %c slice too large at %d %d\\n"""		3362328	0					
ANR	3362714	Argument	mb_type		3362328	3					
ANR	3362715	Identifier	mb_type		3362328	0					
ANR	3362716	Argument	av_get_picture_type_char ( sl -> slice_type )		3362328	4					
ANR	3362717	CallExpression	av_get_picture_type_char ( sl -> slice_type )		3362328	0					
ANR	3362718	Callee	av_get_picture_type_char		3362328	0					
ANR	3362719	Identifier	av_get_picture_type_char		3362328	0					
ANR	3362720	ArgumentList	sl -> slice_type		3362328	1					
ANR	3362721	Argument	sl -> slice_type		3362328	0					
ANR	3362722	PtrMemberAccess	sl -> slice_type		3362328	0					
ANR	3362723	Identifier	sl		3362328	0					
ANR	3362724	Identifier	slice_type		3362328	1					
ANR	3362725	Argument	sl -> mb_x		3362328	5					
ANR	3362726	PtrMemberAccess	sl -> mb_x		3362328	0					
ANR	3362727	Identifier	sl		3362328	0					
ANR	3362728	Identifier	mb_x		3362328	1					
ANR	3362729	Argument	sl -> mb_y		3362328	6					
ANR	3362730	PtrMemberAccess	sl -> mb_y		3362328	0					
ANR	3362731	Identifier	sl		3362328	0					
ANR	3362732	Identifier	mb_y		3362328	1					
ANR	3362733	ReturnStatement	return - 1 ;	117:12:2298:2307	3362328	1	True				
ANR	3362734	UnaryOperationExpression	- 1		3362328	0					
ANR	3362735	UnaryOperator	-		3362328	0					
ANR	3362736	PrimaryExpression	1		3362328	1					
ANR	3362737	ExpressionStatement	partition_count = 0	121:8:2329:2346	3362328	4	True				
ANR	3362738	AssignmentExpression	partition_count = 0		3362328	0		=			
ANR	3362739	Identifier	partition_count		3362328	0					
ANR	3362740	PrimaryExpression	0		3362328	1					
ANR	3362741	ExpressionStatement	cbp = ff_h264_i_mb_type_info [ mb_type ] . cbp	123:8:2357:2419	3362328	5	True				
ANR	3362742	AssignmentExpression	cbp = ff_h264_i_mb_type_info [ mb_type ] . cbp		3362328	0		=			
ANR	3362743	Identifier	cbp		3362328	0					
ANR	3362744	MemberAccess	ff_h264_i_mb_type_info [ mb_type ] . cbp		3362328	1					
ANR	3362745	ArrayIndexing	ff_h264_i_mb_type_info [ mb_type ]		3362328	0					
ANR	3362746	Identifier	ff_h264_i_mb_type_info		3362328	0					
ANR	3362747	Identifier	mb_type		3362328	1					
ANR	3362748	Identifier	cbp		3362328	1					
ANR	3362749	ExpressionStatement	sl -> intra16x16_pred_mode = ff_h264_i_mb_type_info [ mb_type ] . pred_mode	125:8:2430:2498	3362328	6	True				
ANR	3362750	AssignmentExpression	sl -> intra16x16_pred_mode = ff_h264_i_mb_type_info [ mb_type ] . pred_mode		3362328	0		=			
ANR	3362751	PtrMemberAccess	sl -> intra16x16_pred_mode		3362328	0					
ANR	3362752	Identifier	sl		3362328	0					
ANR	3362753	Identifier	intra16x16_pred_mode		3362328	1					
ANR	3362754	MemberAccess	ff_h264_i_mb_type_info [ mb_type ] . pred_mode		3362328	1					
ANR	3362755	ArrayIndexing	ff_h264_i_mb_type_info [ mb_type ]		3362328	0					
ANR	3362756	Identifier	ff_h264_i_mb_type_info		3362328	0					
ANR	3362757	Identifier	mb_type		3362328	1					
ANR	3362758	Identifier	pred_mode		3362328	1					
ANR	3362759	ExpressionStatement	mb_type = ff_h264_i_mb_type_info [ mb_type ] . type	127:8:2509:2572	3362328	7	True				
ANR	3362760	AssignmentExpression	mb_type = ff_h264_i_mb_type_info [ mb_type ] . type		3362328	0		=			
ANR	3362761	Identifier	mb_type		3362328	0					
ANR	3362762	MemberAccess	ff_h264_i_mb_type_info [ mb_type ] . type		3362328	1					
ANR	3362763	ArrayIndexing	ff_h264_i_mb_type_info [ mb_type ]		3362328	0					
ANR	3362764	Identifier	ff_h264_i_mb_type_info		3362328	0					
ANR	3362765	Identifier	mb_type		3362328	1					
ANR	3362766	Identifier	type		3362328	1					
ANR	3362767	IfStatement	if ( MB_FIELD ( sl ) )		3362328	14					
ANR	3362768	Condition	MB_FIELD ( sl )	133:8:2592:2603	3362328	0	True				
ANR	3362769	CallExpression	MB_FIELD ( sl )		3362328	0					
ANR	3362770	Callee	MB_FIELD		3362328	0					
ANR	3362771	Identifier	MB_FIELD		3362328	0					
ANR	3362772	ArgumentList	sl		3362328	1					
ANR	3362773	Argument	sl		3362328	0					
ANR	3362774	Identifier	sl		3362328	0					
ANR	3362775	ExpressionStatement	mb_type |= MB_TYPE_INTERLACED	135:8:2615:2644	3362328	1	True				
ANR	3362776	AssignmentExpression	mb_type |= MB_TYPE_INTERLACED		3362328	0		|=			
ANR	3362777	Identifier	mb_type		3362328	0					
ANR	3362778	Identifier	MB_TYPE_INTERLACED		3362328	1					
ANR	3362779	ExpressionStatement	h -> slice_table [ mb_xy ] = sl -> slice_num	139:4:2653:2690	3362328	15	True				
ANR	3362780	AssignmentExpression	h -> slice_table [ mb_xy ] = sl -> slice_num		3362328	0		=			
ANR	3362781	ArrayIndexing	h -> slice_table [ mb_xy ]		3362328	0					
ANR	3362782	PtrMemberAccess	h -> slice_table		3362328	0					
ANR	3362783	Identifier	h		3362328	0					
ANR	3362784	Identifier	slice_table		3362328	1					
ANR	3362785	Identifier	mb_xy		3362328	1					
ANR	3362786	PtrMemberAccess	sl -> slice_num		3362328	1					
ANR	3362787	Identifier	sl		3362328	0					
ANR	3362788	Identifier	slice_num		3362328	1					
ANR	3362789	IfStatement	if ( IS_INTRA_PCM ( mb_type ) )		3362328	16					
ANR	3362790	Condition	IS_INTRA_PCM ( mb_type )	143:7:2702:2722	3362328	0	True				
ANR	3362791	CallExpression	IS_INTRA_PCM ( mb_type )		3362328	0					
ANR	3362792	Callee	IS_INTRA_PCM		3362328	0					
ANR	3362793	Identifier	IS_INTRA_PCM		3362328	0					
ANR	3362794	ArgumentList	mb_type		3362328	1					
ANR	3362795	Argument	mb_type		3362328	0					
ANR	3362796	Identifier	mb_type		3362328	0					
ANR	3362797	CompoundStatement		143:8:2661:2784	3362328	1					
ANR	3362798	IdentifierDeclStatement	const int mb_size = ff_h264_mb_sizes [ h -> ps . sps -> chroma_format_idc ] * h -> ps . sps -> bit_depth_luma ;	145:8:2735:2858	3362328	0	True				
ANR	3362799	IdentifierDecl	mb_size = ff_h264_mb_sizes [ h -> ps . sps -> chroma_format_idc ] * h -> ps . sps -> bit_depth_luma		3362328	0					
ANR	3362800	IdentifierDeclType	const int		3362328	0					
ANR	3362801	Identifier	mb_size		3362328	1					
ANR	3362802	AssignmentExpression	mb_size = ff_h264_mb_sizes [ h -> ps . sps -> chroma_format_idc ] * h -> ps . sps -> bit_depth_luma		3362328	2		=			
ANR	3362803	Identifier	mb_size		3362328	0					
ANR	3362804	MultiplicativeExpression	ff_h264_mb_sizes [ h -> ps . sps -> chroma_format_idc ] * h -> ps . sps -> bit_depth_luma		3362328	1		*			
ANR	3362805	ArrayIndexing	ff_h264_mb_sizes [ h -> ps . sps -> chroma_format_idc ]		3362328	0					
ANR	3362806	Identifier	ff_h264_mb_sizes		3362328	0					
ANR	3362807	PtrMemberAccess	h -> ps . sps -> chroma_format_idc		3362328	1					
ANR	3362808	MemberAccess	h -> ps . sps		3362328	0					
ANR	3362809	PtrMemberAccess	h -> ps		3362328	0					
ANR	3362810	Identifier	h		3362328	0					
ANR	3362811	Identifier	ps		3362328	1					
ANR	3362812	Identifier	sps		3362328	1					
ANR	3362813	Identifier	chroma_format_idc		3362328	1					
ANR	3362814	PtrMemberAccess	h -> ps . sps -> bit_depth_luma		3362328	1					
ANR	3362815	MemberAccess	h -> ps . sps		3362328	0					
ANR	3362816	PtrMemberAccess	h -> ps		3362328	0					
ANR	3362817	Identifier	h		3362328	0					
ANR	3362818	Identifier	ps		3362328	1					
ANR	3362819	Identifier	sps		3362328	1					
ANR	3362820	Identifier	bit_depth_luma		3362328	1					
ANR	3362821	ExpressionStatement	sl -> intra_pcm_ptr = align_get_bits ( & sl -> gb )	153:8:2946:2989	3362328	1	True				
ANR	3362822	AssignmentExpression	sl -> intra_pcm_ptr = align_get_bits ( & sl -> gb )		3362328	0		=			
ANR	3362823	PtrMemberAccess	sl -> intra_pcm_ptr		3362328	0					
ANR	3362824	Identifier	sl		3362328	0					
ANR	3362825	Identifier	intra_pcm_ptr		3362328	1					
ANR	3362826	CallExpression	align_get_bits ( & sl -> gb )		3362328	1					
ANR	3362827	Callee	align_get_bits		3362328	0					
ANR	3362828	Identifier	align_get_bits		3362328	0					
ANR	3362829	ArgumentList	& sl -> gb		3362328	1					
ANR	3362830	Argument	& sl -> gb		3362328	0					
ANR	3362831	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3362832	UnaryOperator	&		3362328	0					
ANR	3362833	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3362834	Identifier	sl		3362328	0					
ANR	3362835	Identifier	gb		3362328	1					
ANR	3362836	IfStatement	if ( get_bits_left ( & sl -> gb ) < mb_size )		3362328	2					
ANR	3362837	Condition	get_bits_left ( & sl -> gb ) < mb_size	155:12:3004:3035	3362328	0	True				
ANR	3362838	RelationalExpression	get_bits_left ( & sl -> gb ) < mb_size		3362328	0		<			
ANR	3362839	CallExpression	get_bits_left ( & sl -> gb )		3362328	0					
ANR	3362840	Callee	get_bits_left		3362328	0					
ANR	3362841	Identifier	get_bits_left		3362328	0					
ANR	3362842	ArgumentList	& sl -> gb		3362328	1					
ANR	3362843	Argument	& sl -> gb		3362328	0					
ANR	3362844	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3362845	UnaryOperator	&		3362328	0					
ANR	3362846	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3362847	Identifier	sl		3362328	0					
ANR	3362848	Identifier	gb		3362328	1					
ANR	3362849	Identifier	mb_size		3362328	1					
ANR	3362850	CompoundStatement		153:46:2964:2964	3362328	1					
ANR	3362851	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""Not enough data for an intra PCM block.\\n"" )"	157:12:3053:3128	3362328	0	True				
ANR	3362852	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""Not enough data for an intra PCM block.\\n"" )"		3362328	0					
ANR	3362853	Callee	av_log		3362328	0					
ANR	3362854	Identifier	av_log		3362328	0					
ANR	3362855	ArgumentList	h -> avctx		3362328	1					
ANR	3362856	Argument	h -> avctx		3362328	0					
ANR	3362857	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3362858	Identifier	h		3362328	0					
ANR	3362859	Identifier	avctx		3362328	1					
ANR	3362860	Argument	AV_LOG_ERROR		3362328	1					
ANR	3362861	Identifier	AV_LOG_ERROR		3362328	0					
ANR	3362862	Argument	"""Not enough data for an intra PCM block.\\n"""		3362328	2					
ANR	3362863	PrimaryExpression	"""Not enough data for an intra PCM block.\\n"""		3362328	0					
ANR	3362864	ReturnStatement	return AVERROR_INVALIDDATA ;	159:12:3143:3169	3362328	1	True				
ANR	3362865	Identifier	AVERROR_INVALIDDATA		3362328	0					
ANR	3362866	ExpressionStatement	"skip_bits_long ( & sl -> gb , mb_size )"	163:8:3191:3223	3362328	3	True				
ANR	3362867	CallExpression	"skip_bits_long ( & sl -> gb , mb_size )"		3362328	0					
ANR	3362868	Callee	skip_bits_long		3362328	0					
ANR	3362869	Identifier	skip_bits_long		3362328	0					
ANR	3362870	ArgumentList	& sl -> gb		3362328	1					
ANR	3362871	Argument	& sl -> gb		3362328	0					
ANR	3362872	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3362873	UnaryOperator	&		3362328	0					
ANR	3362874	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3362875	Identifier	sl		3362328	0					
ANR	3362876	Identifier	gb		3362328	1					
ANR	3362877	Argument	mb_size		3362328	1					
ANR	3362878	Identifier	mb_size		3362328	0					
ANR	3362879	ExpressionStatement	h -> cur_pic . qscale_table [ mb_xy ] = 0	169:8:3282:3316	3362328	4	True				
ANR	3362880	AssignmentExpression	h -> cur_pic . qscale_table [ mb_xy ] = 0		3362328	0		=			
ANR	3362881	ArrayIndexing	h -> cur_pic . qscale_table [ mb_xy ]		3362328	0					
ANR	3362882	MemberAccess	h -> cur_pic . qscale_table		3362328	0					
ANR	3362883	PtrMemberAccess	h -> cur_pic		3362328	0					
ANR	3362884	Identifier	h		3362328	0					
ANR	3362885	Identifier	cur_pic		3362328	1					
ANR	3362886	Identifier	qscale_table		3362328	1					
ANR	3362887	Identifier	mb_xy		3362328	1					
ANR	3362888	PrimaryExpression	0		3362328	1					
ANR	3362889	ExpressionStatement	"memset ( h -> non_zero_count [ mb_xy ] , 16 , 48 )"	173:8:3362:3402	3362328	5	True				
ANR	3362890	CallExpression	"memset ( h -> non_zero_count [ mb_xy ] , 16 , 48 )"		3362328	0					
ANR	3362891	Callee	memset		3362328	0					
ANR	3362892	Identifier	memset		3362328	0					
ANR	3362893	ArgumentList	h -> non_zero_count [ mb_xy ]		3362328	1					
ANR	3362894	Argument	h -> non_zero_count [ mb_xy ]		3362328	0					
ANR	3362895	ArrayIndexing	h -> non_zero_count [ mb_xy ]		3362328	0					
ANR	3362896	PtrMemberAccess	h -> non_zero_count		3362328	0					
ANR	3362897	Identifier	h		3362328	0					
ANR	3362898	Identifier	non_zero_count		3362328	1					
ANR	3362899	Identifier	mb_xy		3362328	1					
ANR	3362900	Argument	16		3362328	1					
ANR	3362901	PrimaryExpression	16		3362328	0					
ANR	3362902	Argument	48		3362328	2					
ANR	3362903	PrimaryExpression	48		3362328	0					
ANR	3362904	ExpressionStatement	h -> cur_pic . mb_type [ mb_xy ] = mb_type	177:8:3415:3450	3362328	6	True				
ANR	3362905	AssignmentExpression	h -> cur_pic . mb_type [ mb_xy ] = mb_type		3362328	0		=			
ANR	3362906	ArrayIndexing	h -> cur_pic . mb_type [ mb_xy ]		3362328	0					
ANR	3362907	MemberAccess	h -> cur_pic . mb_type		3362328	0					
ANR	3362908	PtrMemberAccess	h -> cur_pic		3362328	0					
ANR	3362909	Identifier	h		3362328	0					
ANR	3362910	Identifier	cur_pic		3362328	1					
ANR	3362911	Identifier	mb_type		3362328	1					
ANR	3362912	Identifier	mb_xy		3362328	1					
ANR	3362913	Identifier	mb_type		3362328	1					
ANR	3362914	ReturnStatement	return 0 ;	179:8:3461:3469	3362328	7	True				
ANR	3362915	PrimaryExpression	0		3362328	0					
ANR	3362916	ExpressionStatement	"fill_decode_neighbors ( h , sl , mb_type )"	185:4:3485:3522	3362328	17	True				
ANR	3362917	CallExpression	"fill_decode_neighbors ( h , sl , mb_type )"		3362328	0					
ANR	3362918	Callee	fill_decode_neighbors		3362328	0					
ANR	3362919	Identifier	fill_decode_neighbors		3362328	0					
ANR	3362920	ArgumentList	h		3362328	1					
ANR	3362921	Argument	h		3362328	0					
ANR	3362922	Identifier	h		3362328	0					
ANR	3362923	Argument	sl		3362328	1					
ANR	3362924	Identifier	sl		3362328	0					
ANR	3362925	Argument	mb_type		3362328	2					
ANR	3362926	Identifier	mb_type		3362328	0					
ANR	3362927	ExpressionStatement	"fill_decode_caches ( h , sl , mb_type )"	187:4:3529:3563	3362328	18	True				
ANR	3362928	CallExpression	"fill_decode_caches ( h , sl , mb_type )"		3362328	0					
ANR	3362929	Callee	fill_decode_caches		3362328	0					
ANR	3362930	Identifier	fill_decode_caches		3362328	0					
ANR	3362931	ArgumentList	h		3362328	1					
ANR	3362932	Argument	h		3362328	0					
ANR	3362933	Identifier	h		3362328	0					
ANR	3362934	Argument	sl		3362328	1					
ANR	3362935	Identifier	sl		3362328	0					
ANR	3362936	Argument	mb_type		3362328	2					
ANR	3362937	Identifier	mb_type		3362328	0					
ANR	3362938	IfStatement	if ( IS_INTRA ( mb_type ) )		3362328	19					
ANR	3362939	Condition	IS_INTRA ( mb_type )	193:7:3590:3606	3362328	0	True				
ANR	3362940	CallExpression	IS_INTRA ( mb_type )		3362328	0					
ANR	3362941	Callee	IS_INTRA		3362328	0					
ANR	3362942	Identifier	IS_INTRA		3362328	0					
ANR	3362943	ArgumentList	mb_type		3362328	1					
ANR	3362944	Argument	mb_type		3362328	0					
ANR	3362945	Identifier	mb_type		3362328	0					
ANR	3362946	CompoundStatement		193:8:3545:3558	3362328	1					
ANR	3362947	IdentifierDeclStatement	int pred_mode ;	195:8:3619:3632	3362328	0	True				
ANR	3362948	IdentifierDecl	pred_mode		3362328	0					
ANR	3362949	IdentifierDeclType	int		3362328	0					
ANR	3362950	Identifier	pred_mode		3362328	1					
ANR	3362951	IfStatement	if ( IS_INTRA4x4 ( mb_type ) )		3362328	1					
ANR	3362952	Condition	IS_INTRA4x4 ( mb_type )	199:11:3692:3711	3362328	0	True				
ANR	3362953	CallExpression	IS_INTRA4x4 ( mb_type )		3362328	0					
ANR	3362954	Callee	IS_INTRA4x4		3362328	0					
ANR	3362955	Identifier	IS_INTRA4x4		3362328	0					
ANR	3362956	ArgumentList	mb_type		3362328	1					
ANR	3362957	Argument	mb_type		3362328	0					
ANR	3362958	Identifier	mb_type		3362328	0					
ANR	3362959	CompoundStatement		201:12:3674:3684	3362328	1					
ANR	3362960	IdentifierDeclStatement	int i ;	201:12:3728:3733	3362328	0	True				
ANR	3362961	IdentifierDecl	i		3362328	0					
ANR	3362962	IdentifierDeclType	int		3362328	0					
ANR	3362963	Identifier	i		3362328	1					
ANR	3362964	IdentifierDeclStatement	int di = 1 ;	203:12:3748:3758	3362328	1	True				
ANR	3362965	IdentifierDecl	di = 1		3362328	0					
ANR	3362966	IdentifierDeclType	int		3362328	0					
ANR	3362967	Identifier	di		3362328	1					
ANR	3362968	AssignmentExpression	di = 1		3362328	2		=			
ANR	3362969	Identifier	di		3362328	0					
ANR	3362970	PrimaryExpression	1		3362328	1					
ANR	3362971	IfStatement	if ( dct8x8_allowed && get_bits1 ( & sl -> gb ) )		3362328	2					
ANR	3362972	Condition	dct8x8_allowed && get_bits1 ( & sl -> gb )	205:15:3776:3811	3362328	0	True				
ANR	3362973	AndExpression	dct8x8_allowed && get_bits1 ( & sl -> gb )		3362328	0		&&			
ANR	3362974	Identifier	dct8x8_allowed		3362328	0					
ANR	3362975	CallExpression	get_bits1 ( & sl -> gb )		3362328	1					
ANR	3362976	Callee	get_bits1		3362328	0					
ANR	3362977	Identifier	get_bits1		3362328	0					
ANR	3362978	ArgumentList	& sl -> gb		3362328	1					
ANR	3362979	Argument	& sl -> gb		3362328	0					
ANR	3362980	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3362981	UnaryOperator	&		3362328	0					
ANR	3362982	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3362983	Identifier	sl		3362328	0					
ANR	3362984	Identifier	gb		3362328	1					
ANR	3362985	CompoundStatement		203:52:3739:3739	3362328	1					
ANR	3362986	ExpressionStatement	mb_type |= MB_TYPE_8x8DCT	207:16:3832:3857	3362328	0	True				
ANR	3362987	AssignmentExpression	mb_type |= MB_TYPE_8x8DCT		3362328	0		|=			
ANR	3362988	Identifier	mb_type		3362328	0					
ANR	3362989	Identifier	MB_TYPE_8x8DCT		3362328	1					
ANR	3362990	ExpressionStatement	di = 4	209:16:3876:3882	3362328	1	True				
ANR	3362991	AssignmentExpression	di = 4		3362328	0		=			
ANR	3362992	Identifier	di		3362328	0					
ANR	3362993	PrimaryExpression	4		3362328	1					
ANR	3362994	ForStatement	for ( i = 0 ; i < 16 ; i += di )		3362328	3					
ANR	3362995	ForInit	i = 0 ;	217:16:3966:3969	3362328	0	True				
ANR	3362996	AssignmentExpression	i = 0		3362328	0		=			
ANR	3362997	Identifier	i		3362328	0					
ANR	3362998	PrimaryExpression	0		3362328	1					
ANR	3362999	Condition	i < 16	217:21:3971:3974	3362328	1	True				
ANR	3363000	RelationalExpression	i < 16		3362328	0		<			
ANR	3363001	Identifier	i		3362328	0					
ANR	3363002	PrimaryExpression	16		3362328	1					
ANR	3363003	AssignmentExpression	i += di	217:27:3977:3981	3362328	2	True	+=			
ANR	3363004	Identifier	i		3362328	0					
ANR	3363005	Identifier	di		3362328	1					
ANR	3363006	CompoundStatement		217:16:3928:3964	3362328	3					
ANR	3363007	IdentifierDeclStatement	"int mode = pred_intra_mode ( h , sl , i ) ;"	219:16:4002:4038	3362328	0	True				
ANR	3363008	IdentifierDecl	"mode = pred_intra_mode ( h , sl , i )"		3362328	0					
ANR	3363009	IdentifierDeclType	int		3362328	0					
ANR	3363010	Identifier	mode		3362328	1					
ANR	3363011	AssignmentExpression	"mode = pred_intra_mode ( h , sl , i )"		3362328	2		=			
ANR	3363012	Identifier	mode		3362328	0					
ANR	3363013	CallExpression	"pred_intra_mode ( h , sl , i )"		3362328	1					
ANR	3363014	Callee	pred_intra_mode		3362328	0					
ANR	3363015	Identifier	pred_intra_mode		3362328	0					
ANR	3363016	ArgumentList	h		3362328	1					
ANR	3363017	Argument	h		3362328	0					
ANR	3363018	Identifier	h		3362328	0					
ANR	3363019	Argument	sl		3362328	1					
ANR	3363020	Identifier	sl		3362328	0					
ANR	3363021	Argument	i		3362328	2					
ANR	3363022	Identifier	i		3362328	0					
ANR	3363023	IfStatement	if ( ! get_bits1 ( & sl -> gb ) )		3362328	1					
ANR	3363024	Condition	! get_bits1 ( & sl -> gb )	223:19:4062:4080	3362328	0	True				
ANR	3363025	UnaryOperationExpression	! get_bits1 ( & sl -> gb )		3362328	0					
ANR	3363026	UnaryOperator	!		3362328	0					
ANR	3363027	CallExpression	get_bits1 ( & sl -> gb )		3362328	1					
ANR	3363028	Callee	get_bits1		3362328	0					
ANR	3363029	Identifier	get_bits1		3362328	0					
ANR	3363030	ArgumentList	& sl -> gb		3362328	1					
ANR	3363031	Argument	& sl -> gb		3362328	0					
ANR	3363032	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3363033	UnaryOperator	&		3362328	0					
ANR	3363034	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3363035	Identifier	sl		3362328	0					
ANR	3363036	Identifier	gb		3362328	1					
ANR	3363037	CompoundStatement		223:20:4031:4071	3362328	1					
ANR	3363038	IdentifierDeclStatement	"const int rem_mode = get_bits ( & sl -> gb , 3 ) ;"	225:20:4105:4145	3362328	0	True				
ANR	3363039	IdentifierDecl	"rem_mode = get_bits ( & sl -> gb , 3 )"		3362328	0					
ANR	3363040	IdentifierDeclType	const int		3362328	0					
ANR	3363041	Identifier	rem_mode		3362328	1					
ANR	3363042	AssignmentExpression	"rem_mode = get_bits ( & sl -> gb , 3 )"		3362328	2		=			
ANR	3363043	Identifier	rem_mode		3362328	0					
ANR	3363044	CallExpression	"get_bits ( & sl -> gb , 3 )"		3362328	1					
ANR	3363045	Callee	get_bits		3362328	0					
ANR	3363046	Identifier	get_bits		3362328	0					
ANR	3363047	ArgumentList	& sl -> gb		3362328	1					
ANR	3363048	Argument	& sl -> gb		3362328	0					
ANR	3363049	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3363050	UnaryOperator	&		3362328	0					
ANR	3363051	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3363052	Identifier	sl		3362328	0					
ANR	3363053	Identifier	gb		3362328	1					
ANR	3363054	Argument	3		3362328	1					
ANR	3363055	PrimaryExpression	3		3362328	0					
ANR	3363056	ExpressionStatement	mode = rem_mode + ( rem_mode >= mode )	227:20:4168:4204	3362328	1	True				
ANR	3363057	AssignmentExpression	mode = rem_mode + ( rem_mode >= mode )		3362328	0		=			
ANR	3363058	Identifier	mode		3362328	0					
ANR	3363059	AdditiveExpression	rem_mode + ( rem_mode >= mode )		3362328	1		+			
ANR	3363060	Identifier	rem_mode		3362328	0					
ANR	3363061	RelationalExpression	rem_mode >= mode		3362328	1		>=			
ANR	3363062	Identifier	rem_mode		3362328	0					
ANR	3363063	Identifier	mode		3362328	1					
ANR	3363064	IfStatement	if ( di == 4 )		3362328	2					
ANR	3363065	Condition	di == 4	233:19:4247:4251	3362328	0	True				
ANR	3363066	EqualityExpression	di == 4		3362328	0		==			
ANR	3363067	Identifier	di		3362328	0					
ANR	3363068	PrimaryExpression	4		3362328	1					
ANR	3363069	ExpressionStatement	"fill_rectangle ( & sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ] , 2 , 2 , 8 , mode , 1 )"	235:20:4275:4350	3362328	1	True				
ANR	3363070	CallExpression	"fill_rectangle ( & sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ] , 2 , 2 , 8 , mode , 1 )"		3362328	0					
ANR	3363071	Callee	fill_rectangle		3362328	0					
ANR	3363072	Identifier	fill_rectangle		3362328	0					
ANR	3363073	ArgumentList	& sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3362328	1					
ANR	3363074	Argument	& sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3362328	0					
ANR	3363075	UnaryOperationExpression	& sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3362328	0					
ANR	3363076	UnaryOperator	&		3362328	0					
ANR	3363077	ArrayIndexing	sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3362328	1					
ANR	3363078	PtrMemberAccess	sl -> intra4x4_pred_mode_cache		3362328	0					
ANR	3363079	Identifier	sl		3362328	0					
ANR	3363080	Identifier	intra4x4_pred_mode_cache		3362328	1					
ANR	3363081	ArrayIndexing	scan8 [ i ]		3362328	1					
ANR	3363082	Identifier	scan8		3362328	0					
ANR	3363083	Identifier	i		3362328	1					
ANR	3363084	Argument	2		3362328	1					
ANR	3363085	PrimaryExpression	2		3362328	0					
ANR	3363086	Argument	2		3362328	2					
ANR	3363087	PrimaryExpression	2		3362328	0					
ANR	3363088	Argument	8		3362328	3					
ANR	3363089	PrimaryExpression	8		3362328	0					
ANR	3363090	Argument	mode		3362328	4					
ANR	3363091	Identifier	mode		3362328	0					
ANR	3363092	Argument	1		3362328	5					
ANR	3363093	PrimaryExpression	1		3362328	0					
ANR	3363094	ElseStatement	else		3362328	0					
ANR	3363095	ExpressionStatement	sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ] = mode	239:20:4395:4440	3362328	0	True				
ANR	3363096	AssignmentExpression	sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ] = mode		3362328	0		=			
ANR	3363097	ArrayIndexing	sl -> intra4x4_pred_mode_cache [ scan8 [ i ] ]		3362328	0					
ANR	3363098	PtrMemberAccess	sl -> intra4x4_pred_mode_cache		3362328	0					
ANR	3363099	Identifier	sl		3362328	0					
ANR	3363100	Identifier	intra4x4_pred_mode_cache		3362328	1					
ANR	3363101	ArrayIndexing	scan8 [ i ]		3362328	1					
ANR	3363102	Identifier	scan8		3362328	0					
ANR	3363103	Identifier	i		3362328	1					
ANR	3363104	Identifier	mode		3362328	1					
ANR	3363105	ExpressionStatement	"write_back_intra_pred_mode ( h , sl )"	243:12:4470:4503	3362328	4	True				
ANR	3363106	CallExpression	"write_back_intra_pred_mode ( h , sl )"		3362328	0					
ANR	3363107	Callee	write_back_intra_pred_mode		3362328	0					
ANR	3363108	Identifier	write_back_intra_pred_mode		3362328	0					
ANR	3363109	ArgumentList	h		3362328	1					
ANR	3363110	Argument	h		3362328	0					
ANR	3363111	Identifier	h		3362328	0					
ANR	3363112	Argument	sl		3362328	1					
ANR	3363113	Identifier	sl		3362328	0					
ANR	3363114	IfStatement	"if ( ff_h264_check_intra4x4_pred_mode ( sl -> intra4x4_pred_mode_cache , h -> avctx , sl -> top_samples_available , sl -> left_samples_available ) < 0 )"		3362328	5					
ANR	3363115	Condition	"ff_h264_check_intra4x4_pred_mode ( sl -> intra4x4_pred_mode_cache , h -> avctx , sl -> top_samples_available , sl -> left_samples_available ) < 0"	245:16:4522:4702	3362328	0	True				
ANR	3363116	RelationalExpression	"ff_h264_check_intra4x4_pred_mode ( sl -> intra4x4_pred_mode_cache , h -> avctx , sl -> top_samples_available , sl -> left_samples_available ) < 0"		3362328	0		<			
ANR	3363117	CallExpression	"ff_h264_check_intra4x4_pred_mode ( sl -> intra4x4_pred_mode_cache , h -> avctx , sl -> top_samples_available , sl -> left_samples_available )"		3362328	0					
ANR	3363118	Callee	ff_h264_check_intra4x4_pred_mode		3362328	0					
ANR	3363119	Identifier	ff_h264_check_intra4x4_pred_mode		3362328	0					
ANR	3363120	ArgumentList	sl -> intra4x4_pred_mode_cache		3362328	1					
ANR	3363121	Argument	sl -> intra4x4_pred_mode_cache		3362328	0					
ANR	3363122	PtrMemberAccess	sl -> intra4x4_pred_mode_cache		3362328	0					
ANR	3363123	Identifier	sl		3362328	0					
ANR	3363124	Identifier	intra4x4_pred_mode_cache		3362328	1					
ANR	3363125	Argument	h -> avctx		3362328	1					
ANR	3363126	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3363127	Identifier	h		3362328	0					
ANR	3363128	Identifier	avctx		3362328	1					
ANR	3363129	Argument	sl -> top_samples_available		3362328	2					
ANR	3363130	PtrMemberAccess	sl -> top_samples_available		3362328	0					
ANR	3363131	Identifier	sl		3362328	0					
ANR	3363132	Identifier	top_samples_available		3362328	1					
ANR	3363133	Argument	sl -> left_samples_available		3362328	3					
ANR	3363134	PtrMemberAccess	sl -> left_samples_available		3362328	0					
ANR	3363135	Identifier	sl		3362328	0					
ANR	3363136	Identifier	left_samples_available		3362328	1					
ANR	3363137	PrimaryExpression	0		3362328	1					
ANR	3363138	ReturnStatement	return - 1 ;	249:16:4722:4731	3362328	1	True				
ANR	3363139	UnaryOperationExpression	- 1		3362328	0					
ANR	3363140	UnaryOperator	-		3362328	0					
ANR	3363141	PrimaryExpression	1		3362328	1					
ANR	3363142	ElseStatement	else		3362328	0					
ANR	3363143	CompoundStatement		249:13:4673:4673	3362328	0					
ANR	3363144	ExpressionStatement	"sl -> intra16x16_pred_mode = ff_h264_check_intra_pred_mode ( h -> avctx , sl -> top_samples_available , sl -> left_samples_available , sl -> intra16x16_pred_mode , 0 )"	253:12:4762:4982	3362328	0	True				
ANR	3363145	AssignmentExpression	"sl -> intra16x16_pred_mode = ff_h264_check_intra_pred_mode ( h -> avctx , sl -> top_samples_available , sl -> left_samples_available , sl -> intra16x16_pred_mode , 0 )"		3362328	0		=			
ANR	3363146	PtrMemberAccess	sl -> intra16x16_pred_mode		3362328	0					
ANR	3363147	Identifier	sl		3362328	0					
ANR	3363148	Identifier	intra16x16_pred_mode		3362328	1					
ANR	3363149	CallExpression	"ff_h264_check_intra_pred_mode ( h -> avctx , sl -> top_samples_available , sl -> left_samples_available , sl -> intra16x16_pred_mode , 0 )"		3362328	1					
ANR	3363150	Callee	ff_h264_check_intra_pred_mode		3362328	0					
ANR	3363151	Identifier	ff_h264_check_intra_pred_mode		3362328	0					
ANR	3363152	ArgumentList	h -> avctx		3362328	1					
ANR	3363153	Argument	h -> avctx		3362328	0					
ANR	3363154	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3363155	Identifier	h		3362328	0					
ANR	3363156	Identifier	avctx		3362328	1					
ANR	3363157	Argument	sl -> top_samples_available		3362328	1					
ANR	3363158	PtrMemberAccess	sl -> top_samples_available		3362328	0					
ANR	3363159	Identifier	sl		3362328	0					
ANR	3363160	Identifier	top_samples_available		3362328	1					
ANR	3363161	Argument	sl -> left_samples_available		3362328	2					
ANR	3363162	PtrMemberAccess	sl -> left_samples_available		3362328	0					
ANR	3363163	Identifier	sl		3362328	0					
ANR	3363164	Identifier	left_samples_available		3362328	1					
ANR	3363165	Argument	sl -> intra16x16_pred_mode		3362328	3					
ANR	3363166	PtrMemberAccess	sl -> intra16x16_pred_mode		3362328	0					
ANR	3363167	Identifier	sl		3362328	0					
ANR	3363168	Identifier	intra16x16_pred_mode		3362328	1					
ANR	3363169	Argument	0		3362328	4					
ANR	3363170	PrimaryExpression	0		3362328	0					
ANR	3363171	IfStatement	if ( sl -> intra16x16_pred_mode < 0 )		3362328	1					
ANR	3363172	Condition	sl -> intra16x16_pred_mode < 0	257:16:5001:5028	3362328	0	True				
ANR	3363173	RelationalExpression	sl -> intra16x16_pred_mode < 0		3362328	0		<			
ANR	3363174	PtrMemberAccess	sl -> intra16x16_pred_mode		3362328	0					
ANR	3363175	Identifier	sl		3362328	0					
ANR	3363176	Identifier	intra16x16_pred_mode		3362328	1					
ANR	3363177	PrimaryExpression	0		3362328	1					
ANR	3363178	ReturnStatement	return - 1 ;	259:16:5048:5057	3362328	1	True				
ANR	3363179	UnaryOperationExpression	- 1		3362328	0					
ANR	3363180	UnaryOperator	-		3362328	0					
ANR	3363181	PrimaryExpression	1		3362328	1					
ANR	3363182	IfStatement	if ( decode_chroma )		3362328	2					
ANR	3363183	Condition	decode_chroma	263:11:5082:5094	3362328	0	True				
ANR	3363184	Identifier	decode_chroma		3362328	0					
ANR	3363185	CompoundStatement		261:25:5022:5022	3362328	1					
ANR	3363186	ExpressionStatement	"pred_mode = ff_h264_check_intra_pred_mode ( h -> avctx , sl -> top_samples_available , sl -> left_samples_available , get_ue_golomb_31 ( & sl -> gb ) , 1 )"	265:12:5111:5300	3362328	0	True				
ANR	3363187	AssignmentExpression	"pred_mode = ff_h264_check_intra_pred_mode ( h -> avctx , sl -> top_samples_available , sl -> left_samples_available , get_ue_golomb_31 ( & sl -> gb ) , 1 )"		3362328	0		=			
ANR	3363188	Identifier	pred_mode		3362328	0					
ANR	3363189	CallExpression	"ff_h264_check_intra_pred_mode ( h -> avctx , sl -> top_samples_available , sl -> left_samples_available , get_ue_golomb_31 ( & sl -> gb ) , 1 )"		3362328	1					
ANR	3363190	Callee	ff_h264_check_intra_pred_mode		3362328	0					
ANR	3363191	Identifier	ff_h264_check_intra_pred_mode		3362328	0					
ANR	3363192	ArgumentList	h -> avctx		3362328	1					
ANR	3363193	Argument	h -> avctx		3362328	0					
ANR	3363194	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3363195	Identifier	h		3362328	0					
ANR	3363196	Identifier	avctx		3362328	1					
ANR	3363197	Argument	sl -> top_samples_available		3362328	1					
ANR	3363198	PtrMemberAccess	sl -> top_samples_available		3362328	0					
ANR	3363199	Identifier	sl		3362328	0					
ANR	3363200	Identifier	top_samples_available		3362328	1					
ANR	3363201	Argument	sl -> left_samples_available		3362328	2					
ANR	3363202	PtrMemberAccess	sl -> left_samples_available		3362328	0					
ANR	3363203	Identifier	sl		3362328	0					
ANR	3363204	Identifier	left_samples_available		3362328	1					
ANR	3363205	Argument	get_ue_golomb_31 ( & sl -> gb )		3362328	3					
ANR	3363206	CallExpression	get_ue_golomb_31 ( & sl -> gb )		3362328	0					
ANR	3363207	Callee	get_ue_golomb_31		3362328	0					
ANR	3363208	Identifier	get_ue_golomb_31		3362328	0					
ANR	3363209	ArgumentList	& sl -> gb		3362328	1					
ANR	3363210	Argument	& sl -> gb		3362328	0					
ANR	3363211	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3363212	UnaryOperator	&		3362328	0					
ANR	3363213	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3363214	Identifier	sl		3362328	0					
ANR	3363215	Identifier	gb		3362328	1					
ANR	3363216	Argument	1		3362328	4					
ANR	3363217	PrimaryExpression	1		3362328	0					
ANR	3363218	IfStatement	if ( pred_mode < 0 )		3362328	1					
ANR	3363219	Condition	pred_mode < 0	269:15:5318:5330	3362328	0	True				
ANR	3363220	RelationalExpression	pred_mode < 0		3362328	0		<			
ANR	3363221	Identifier	pred_mode		3362328	0					
ANR	3363222	PrimaryExpression	0		3362328	1					
ANR	3363223	ReturnStatement	return - 1 ;	271:16:5350:5359	3362328	1	True				
ANR	3363224	UnaryOperationExpression	- 1		3362328	0					
ANR	3363225	UnaryOperator	-		3362328	0					
ANR	3363226	PrimaryExpression	1		3362328	1					
ANR	3363227	ExpressionStatement	sl -> chroma_pred_mode = pred_mode	273:12:5374:5406	3362328	2	True				
ANR	3363228	AssignmentExpression	sl -> chroma_pred_mode = pred_mode		3362328	0		=			
ANR	3363229	PtrMemberAccess	sl -> chroma_pred_mode		3362328	0					
ANR	3363230	Identifier	sl		3362328	0					
ANR	3363231	Identifier	chroma_pred_mode		3362328	1					
ANR	3363232	Identifier	pred_mode		3362328	1					
ANR	3363233	ElseStatement	else		3362328	0					
ANR	3363234	CompoundStatement		273:15:5350:5350	3362328	0					
ANR	3363235	ExpressionStatement	sl -> chroma_pred_mode = DC_128_PRED8x8	277:12:5439:5476	3362328	0	True				
ANR	3363236	AssignmentExpression	sl -> chroma_pred_mode = DC_128_PRED8x8		3362328	0		=			
ANR	3363237	PtrMemberAccess	sl -> chroma_pred_mode		3362328	0					
ANR	3363238	Identifier	sl		3362328	0					
ANR	3363239	Identifier	chroma_pred_mode		3362328	1					
ANR	3363240	Identifier	DC_128_PRED8x8		3362328	1					
ANR	3363241	ElseStatement	else		3362328	0					
ANR	3363242	IfStatement	if ( partition_count == 4 )		3362328	0					
ANR	3363243	Condition	partition_count == 4	281:13:5503:5520	3362328	0	True				
ANR	3363244	EqualityExpression	partition_count == 4		3362328	0		==			
ANR	3363245	Identifier	partition_count		3362328	0					
ANR	3363246	PrimaryExpression	4		3362328	1					
ANR	3363247	CompoundStatement		279:32:5448:5448	3362328	1					
ANR	3363248	Statement	int	283:8:5533:5535	3362328	0	True				
ANR	3363249	ExpressionStatement	"i , j , sub_partition_count [ 4 ] , list , ref [ 2 ] [ 4 ]"	283:12:5537:5582	3362328	1	True				
ANR	3363250	Expression	"i , j , sub_partition_count [ 4 ] , list , ref [ 2 ] [ 4 ]"		3362328	0					
ANR	3363251	Identifier	i		3362328	0					
ANR	3363252	Expression	"j , sub_partition_count [ 4 ] , list , ref [ 2 ] [ 4 ]"		3362328	1					
ANR	3363253	Identifier	j		3362328	0					
ANR	3363254	Expression	"sub_partition_count [ 4 ] , list , ref [ 2 ] [ 4 ]"		3362328	1					
ANR	3363255	ArrayIndexing	sub_partition_count [ 4 ]		3362328	0					
ANR	3363256	Identifier	sub_partition_count		3362328	0					
ANR	3363257	PrimaryExpression	4		3362328	1					
ANR	3363258	Expression	"list , ref [ 2 ] [ 4 ]"		3362328	1					
ANR	3363259	Identifier	list		3362328	0					
ANR	3363260	ArrayIndexing	ref [ 2 ] [ 4 ]		3362328	1					
ANR	3363261	ArrayIndexing	ref [ 2 ]		3362328	0					
ANR	3363262	Identifier	ref		3362328	0					
ANR	3363263	PrimaryExpression	2		3362328	1					
ANR	3363264	PrimaryExpression	4		3362328	1					
ANR	3363265	IfStatement	if ( sl -> slice_type_nos == AV_PICTURE_TYPE_B )		3362328	2					
ANR	3363266	Condition	sl -> slice_type_nos == AV_PICTURE_TYPE_B	287:12:5599:5637	3362328	0	True				
ANR	3363267	EqualityExpression	sl -> slice_type_nos == AV_PICTURE_TYPE_B		3362328	0		==			
ANR	3363268	PtrMemberAccess	sl -> slice_type_nos		3362328	0					
ANR	3363269	Identifier	sl		3362328	0					
ANR	3363270	Identifier	slice_type_nos		3362328	1					
ANR	3363271	Identifier	AV_PICTURE_TYPE_B		3362328	1					
ANR	3363272	CompoundStatement		285:53:5566:5566	3362328	1					
ANR	3363273	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3362328	0					
ANR	3363274	ForInit	i = 0 ;	289:16:5659:5662	3362328	0	True				
ANR	3363275	AssignmentExpression	i = 0		3362328	0		=			
ANR	3363276	Identifier	i		3362328	0					
ANR	3363277	PrimaryExpression	0		3362328	1					
ANR	3363278	Condition	i < 4	289:21:5664:5666	3362328	1	True				
ANR	3363279	RelationalExpression	i < 4		3362328	0		<			
ANR	3363280	Identifier	i		3362328	0					
ANR	3363281	PrimaryExpression	4		3362328	1					
ANR	3363282	PostIncDecOperationExpression	i ++	289:26:5669:5671	3362328	2	True				
ANR	3363283	Identifier	i		3362328	0					
ANR	3363284	IncDec	++		3362328	1					
ANR	3363285	CompoundStatement		287:30:5599:5599	3362328	3					
ANR	3363286	ExpressionStatement	sl -> sub_mb_type [ i ] = get_ue_golomb_31 ( & sl -> gb )	291:16:5692:5737	3362328	0	True				
ANR	3363287	AssignmentExpression	sl -> sub_mb_type [ i ] = get_ue_golomb_31 ( & sl -> gb )		3362328	0		=			
ANR	3363288	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363289	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363290	Identifier	sl		3362328	0					
ANR	3363291	Identifier	sub_mb_type		3362328	1					
ANR	3363292	Identifier	i		3362328	1					
ANR	3363293	CallExpression	get_ue_golomb_31 ( & sl -> gb )		3362328	1					
ANR	3363294	Callee	get_ue_golomb_31		3362328	0					
ANR	3363295	Identifier	get_ue_golomb_31		3362328	0					
ANR	3363296	ArgumentList	& sl -> gb		3362328	1					
ANR	3363297	Argument	& sl -> gb		3362328	0					
ANR	3363298	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3363299	UnaryOperator	&		3362328	0					
ANR	3363300	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3363301	Identifier	sl		3362328	0					
ANR	3363302	Identifier	gb		3362328	1					
ANR	3363303	IfStatement	if ( sl -> sub_mb_type [ i ] >= 13 )		3362328	1					
ANR	3363304	Condition	sl -> sub_mb_type [ i ] >= 13	293:19:5759:5781	3362328	0	True				
ANR	3363305	RelationalExpression	sl -> sub_mb_type [ i ] >= 13		3362328	0		>=			
ANR	3363306	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363307	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363308	Identifier	sl		3362328	0					
ANR	3363309	Identifier	sub_mb_type		3362328	1					
ANR	3363310	Identifier	i		3362328	1					
ANR	3363311	PrimaryExpression	13		3362328	1					
ANR	3363312	CompoundStatement		291:43:5709:5709	3362328	1					
ANR	3363313	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""B sub_mb_type %u out of range at %d %d\\n"" , sl -> sub_mb_type [ i ] , sl -> mb_x , sl -> mb_y )"	295:20:5806:5920	3362328	0	True				
ANR	3363314	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""B sub_mb_type %u out of range at %d %d\\n"" , sl -> sub_mb_type [ i ] , sl -> mb_x , sl -> mb_y )"		3362328	0					
ANR	3363315	Callee	av_log		3362328	0					
ANR	3363316	Identifier	av_log		3362328	0					
ANR	3363317	ArgumentList	h -> avctx		3362328	1					
ANR	3363318	Argument	h -> avctx		3362328	0					
ANR	3363319	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3363320	Identifier	h		3362328	0					
ANR	3363321	Identifier	avctx		3362328	1					
ANR	3363322	Argument	AV_LOG_ERROR		3362328	1					
ANR	3363323	Identifier	AV_LOG_ERROR		3362328	0					
ANR	3363324	Argument	"""B sub_mb_type %u out of range at %d %d\\n"""		3362328	2					
ANR	3363325	PrimaryExpression	"""B sub_mb_type %u out of range at %d %d\\n"""		3362328	0					
ANR	3363326	Argument	sl -> sub_mb_type [ i ]		3362328	3					
ANR	3363327	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363328	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363329	Identifier	sl		3362328	0					
ANR	3363330	Identifier	sub_mb_type		3362328	1					
ANR	3363331	Identifier	i		3362328	1					
ANR	3363332	Argument	sl -> mb_x		3362328	4					
ANR	3363333	PtrMemberAccess	sl -> mb_x		3362328	0					
ANR	3363334	Identifier	sl		3362328	0					
ANR	3363335	Identifier	mb_x		3362328	1					
ANR	3363336	Argument	sl -> mb_y		3362328	5					
ANR	3363337	PtrMemberAccess	sl -> mb_y		3362328	0					
ANR	3363338	Identifier	sl		3362328	0					
ANR	3363339	Identifier	mb_y		3362328	1					
ANR	3363340	ReturnStatement	return - 1 ;	297:20:5943:5952	3362328	1	True				
ANR	3363341	UnaryOperationExpression	- 1		3362328	0					
ANR	3363342	UnaryOperator	-		3362328	0					
ANR	3363343	PrimaryExpression	1		3362328	1					
ANR	3363344	ExpressionStatement	sub_partition_count [ i ] = ff_h264_b_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . partition_count	301:16:5990:6077	3362328	2	True				
ANR	3363345	AssignmentExpression	sub_partition_count [ i ] = ff_h264_b_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . partition_count		3362328	0		=			
ANR	3363346	ArrayIndexing	sub_partition_count [ i ]		3362328	0					
ANR	3363347	Identifier	sub_partition_count		3362328	0					
ANR	3363348	Identifier	i		3362328	1					
ANR	3363349	MemberAccess	ff_h264_b_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . partition_count		3362328	1					
ANR	3363350	ArrayIndexing	ff_h264_b_sub_mb_type_info [ sl -> sub_mb_type [ i ] ]		3362328	0					
ANR	3363351	Identifier	ff_h264_b_sub_mb_type_info		3362328	0					
ANR	3363352	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	1					
ANR	3363353	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363354	Identifier	sl		3362328	0					
ANR	3363355	Identifier	sub_mb_type		3362328	1					
ANR	3363356	Identifier	i		3362328	1					
ANR	3363357	Identifier	partition_count		3362328	1					
ANR	3363358	ExpressionStatement	sl -> sub_mb_type [ i ] = ff_h264_b_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . type	303:16:6096:6172	3362328	3	True				
ANR	3363359	AssignmentExpression	sl -> sub_mb_type [ i ] = ff_h264_b_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . type		3362328	0		=			
ANR	3363360	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363361	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363362	Identifier	sl		3362328	0					
ANR	3363363	Identifier	sub_mb_type		3362328	1					
ANR	3363364	Identifier	i		3362328	1					
ANR	3363365	MemberAccess	ff_h264_b_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . type		3362328	1					
ANR	3363366	ArrayIndexing	ff_h264_b_sub_mb_type_info [ sl -> sub_mb_type [ i ] ]		3362328	0					
ANR	3363367	Identifier	ff_h264_b_sub_mb_type_info		3362328	0					
ANR	3363368	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	1					
ANR	3363369	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363370	Identifier	sl		3362328	0					
ANR	3363371	Identifier	sub_mb_type		3362328	1					
ANR	3363372	Identifier	i		3362328	1					
ANR	3363373	Identifier	type		3362328	1					
ANR	3363374	IfStatement	if ( IS_DIRECT ( sl -> sub_mb_type [ 0 ] | sl -> sub_mb_type [ 1 ] | sl -> sub_mb_type [ 2 ] | sl -> sub_mb_type [ 3 ] ) )		3362328	1					
ANR	3363375	Condition	IS_DIRECT ( sl -> sub_mb_type [ 0 ] | sl -> sub_mb_type [ 1 ] | sl -> sub_mb_type [ 2 ] | sl -> sub_mb_type [ 3 ] )	307:16:6206:6291	3362328	0	True				
ANR	3363376	CallExpression	IS_DIRECT ( sl -> sub_mb_type [ 0 ] | sl -> sub_mb_type [ 1 ] | sl -> sub_mb_type [ 2 ] | sl -> sub_mb_type [ 3 ] )		3362328	0					
ANR	3363377	Callee	IS_DIRECT		3362328	0					
ANR	3363378	Identifier	IS_DIRECT		3362328	0					
ANR	3363379	ArgumentList	sl -> sub_mb_type [ 0 ] | sl -> sub_mb_type [ 1 ] | sl -> sub_mb_type [ 2 ] | sl -> sub_mb_type [ 3 ]		3362328	1					
ANR	3363380	Argument	sl -> sub_mb_type [ 0 ] | sl -> sub_mb_type [ 1 ] | sl -> sub_mb_type [ 2 ] | sl -> sub_mb_type [ 3 ]		3362328	0					
ANR	3363381	InclusiveOrExpression	sl -> sub_mb_type [ 0 ] | sl -> sub_mb_type [ 1 ] | sl -> sub_mb_type [ 2 ] | sl -> sub_mb_type [ 3 ]		3362328	0		|			
ANR	3363382	ArrayIndexing	sl -> sub_mb_type [ 0 ]		3362328	0					
ANR	3363383	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363384	Identifier	sl		3362328	0					
ANR	3363385	Identifier	sub_mb_type		3362328	1					
ANR	3363386	PrimaryExpression	0		3362328	1					
ANR	3363387	InclusiveOrExpression	sl -> sub_mb_type [ 1 ] | sl -> sub_mb_type [ 2 ] | sl -> sub_mb_type [ 3 ]		3362328	1		|			
ANR	3363388	ArrayIndexing	sl -> sub_mb_type [ 1 ]		3362328	0					
ANR	3363389	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363390	Identifier	sl		3362328	0					
ANR	3363391	Identifier	sub_mb_type		3362328	1					
ANR	3363392	PrimaryExpression	1		3362328	1					
ANR	3363393	InclusiveOrExpression	sl -> sub_mb_type [ 2 ] | sl -> sub_mb_type [ 3 ]		3362328	1		|			
ANR	3363394	ArrayIndexing	sl -> sub_mb_type [ 2 ]		3362328	0					
ANR	3363395	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363396	Identifier	sl		3362328	0					
ANR	3363397	Identifier	sub_mb_type		3362328	1					
ANR	3363398	PrimaryExpression	2		3362328	1					
ANR	3363399	ArrayIndexing	sl -> sub_mb_type [ 3 ]		3362328	1					
ANR	3363400	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363401	Identifier	sl		3362328	0					
ANR	3363402	Identifier	sub_mb_type		3362328	1					
ANR	3363403	PrimaryExpression	3		3362328	1					
ANR	3363404	CompoundStatement		305:104:6220:6220	3362328	1					
ANR	3363405	ExpressionStatement	"ff_h264_pred_direct_motion ( h , sl , & mb_type )"	309:16:6313:6356	3362328	0	True				
ANR	3363406	CallExpression	"ff_h264_pred_direct_motion ( h , sl , & mb_type )"		3362328	0					
ANR	3363407	Callee	ff_h264_pred_direct_motion		3362328	0					
ANR	3363408	Identifier	ff_h264_pred_direct_motion		3362328	0					
ANR	3363409	ArgumentList	h		3362328	1					
ANR	3363410	Argument	h		3362328	0					
ANR	3363411	Identifier	h		3362328	0					
ANR	3363412	Argument	sl		3362328	1					
ANR	3363413	Identifier	sl		3362328	0					
ANR	3363414	Argument	& mb_type		3362328	2					
ANR	3363415	UnaryOperationExpression	& mb_type		3362328	0					
ANR	3363416	UnaryOperator	&		3362328	0					
ANR	3363417	Identifier	mb_type		3362328	1					
ANR	3363418	ExpressionStatement	sl -> ref_cache [ 0 ] [ scan8 [ 4 ] ] = sl -> ref_cache [ 1 ] [ scan8 [ 4 ] ] = sl -> ref_cache [ 0 ] [ scan8 [ 12 ] ] = sl -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE	311:16:6375:6562	3362328	1	True				
ANR	3363419	AssignmentExpression	sl -> ref_cache [ 0 ] [ scan8 [ 4 ] ] = sl -> ref_cache [ 1 ] [ scan8 [ 4 ] ] = sl -> ref_cache [ 0 ] [ scan8 [ 12 ] ] = sl -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE		3362328	0		=			
ANR	3363420	ArrayIndexing	sl -> ref_cache [ 0 ] [ scan8 [ 4 ] ]		3362328	0					
ANR	3363421	ArrayIndexing	sl -> ref_cache [ 0 ]		3362328	0					
ANR	3363422	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3363423	Identifier	sl		3362328	0					
ANR	3363424	Identifier	ref_cache		3362328	1					
ANR	3363425	PrimaryExpression	0		3362328	1					
ANR	3363426	ArrayIndexing	scan8 [ 4 ]		3362328	1					
ANR	3363427	Identifier	scan8		3362328	0					
ANR	3363428	PrimaryExpression	4		3362328	1					
ANR	3363429	AssignmentExpression	sl -> ref_cache [ 1 ] [ scan8 [ 4 ] ] = sl -> ref_cache [ 0 ] [ scan8 [ 12 ] ] = sl -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE		3362328	1		=			
ANR	3363430	ArrayIndexing	sl -> ref_cache [ 1 ] [ scan8 [ 4 ] ]		3362328	0					
ANR	3363431	ArrayIndexing	sl -> ref_cache [ 1 ]		3362328	0					
ANR	3363432	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3363433	Identifier	sl		3362328	0					
ANR	3363434	Identifier	ref_cache		3362328	1					
ANR	3363435	PrimaryExpression	1		3362328	1					
ANR	3363436	ArrayIndexing	scan8 [ 4 ]		3362328	1					
ANR	3363437	Identifier	scan8		3362328	0					
ANR	3363438	PrimaryExpression	4		3362328	1					
ANR	3363439	AssignmentExpression	sl -> ref_cache [ 0 ] [ scan8 [ 12 ] ] = sl -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE		3362328	1		=			
ANR	3363440	ArrayIndexing	sl -> ref_cache [ 0 ] [ scan8 [ 12 ] ]		3362328	0					
ANR	3363441	ArrayIndexing	sl -> ref_cache [ 0 ]		3362328	0					
ANR	3363442	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3363443	Identifier	sl		3362328	0					
ANR	3363444	Identifier	ref_cache		3362328	1					
ANR	3363445	PrimaryExpression	0		3362328	1					
ANR	3363446	ArrayIndexing	scan8 [ 12 ]		3362328	1					
ANR	3363447	Identifier	scan8		3362328	0					
ANR	3363448	PrimaryExpression	12		3362328	1					
ANR	3363449	AssignmentExpression	sl -> ref_cache [ 1 ] [ scan8 [ 12 ] ] = PART_NOT_AVAILABLE		3362328	1		=			
ANR	3363450	ArrayIndexing	sl -> ref_cache [ 1 ] [ scan8 [ 12 ] ]		3362328	0					
ANR	3363451	ArrayIndexing	sl -> ref_cache [ 1 ]		3362328	0					
ANR	3363452	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3363453	Identifier	sl		3362328	0					
ANR	3363454	Identifier	ref_cache		3362328	1					
ANR	3363455	PrimaryExpression	1		3362328	1					
ANR	3363456	ArrayIndexing	scan8 [ 12 ]		3362328	1					
ANR	3363457	Identifier	scan8		3362328	0					
ANR	3363458	PrimaryExpression	12		3362328	1					
ANR	3363459	Identifier	PART_NOT_AVAILABLE		3362328	1					
ANR	3363460	ElseStatement	else		3362328	0					
ANR	3363461	CompoundStatement		319:13:6519:6519	3362328	0					
ANR	3363462	ExpressionStatement	av_assert2 ( sl -> slice_type_nos == AV_PICTURE_TYPE_P )	323:12:6608:6659	3362328	0	True				
ANR	3363463	CallExpression	av_assert2 ( sl -> slice_type_nos == AV_PICTURE_TYPE_P )		3362328	0					
ANR	3363464	Callee	av_assert2		3362328	0					
ANR	3363465	Identifier	av_assert2		3362328	0					
ANR	3363466	ArgumentList	sl -> slice_type_nos == AV_PICTURE_TYPE_P		3362328	1					
ANR	3363467	Argument	sl -> slice_type_nos == AV_PICTURE_TYPE_P		3362328	0					
ANR	3363468	EqualityExpression	sl -> slice_type_nos == AV_PICTURE_TYPE_P		3362328	0		==			
ANR	3363469	PtrMemberAccess	sl -> slice_type_nos		3362328	0					
ANR	3363470	Identifier	sl		3362328	0					
ANR	3363471	Identifier	slice_type_nos		3362328	1					
ANR	3363472	Identifier	AV_PICTURE_TYPE_P		3362328	1					
ANR	3363473	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3362328	1					
ANR	3363474	ForInit	i = 0 ;	325:16:6699:6702	3362328	0	True				
ANR	3363475	AssignmentExpression	i = 0		3362328	0		=			
ANR	3363476	Identifier	i		3362328	0					
ANR	3363477	PrimaryExpression	0		3362328	1					
ANR	3363478	Condition	i < 4	325:21:6704:6706	3362328	1	True				
ANR	3363479	RelationalExpression	i < 4		3362328	0		<			
ANR	3363480	Identifier	i		3362328	0					
ANR	3363481	PrimaryExpression	4		3362328	1					
ANR	3363482	PostIncDecOperationExpression	i ++	325:26:6709:6711	3362328	2	True				
ANR	3363483	Identifier	i		3362328	0					
ANR	3363484	IncDec	++		3362328	1					
ANR	3363485	CompoundStatement		323:30:6639:6639	3362328	3					
ANR	3363486	ExpressionStatement	sl -> sub_mb_type [ i ] = get_ue_golomb_31 ( & sl -> gb )	327:16:6732:6777	3362328	0	True				
ANR	3363487	AssignmentExpression	sl -> sub_mb_type [ i ] = get_ue_golomb_31 ( & sl -> gb )		3362328	0		=			
ANR	3363488	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363489	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363490	Identifier	sl		3362328	0					
ANR	3363491	Identifier	sub_mb_type		3362328	1					
ANR	3363492	Identifier	i		3362328	1					
ANR	3363493	CallExpression	get_ue_golomb_31 ( & sl -> gb )		3362328	1					
ANR	3363494	Callee	get_ue_golomb_31		3362328	0					
ANR	3363495	Identifier	get_ue_golomb_31		3362328	0					
ANR	3363496	ArgumentList	& sl -> gb		3362328	1					
ANR	3363497	Argument	& sl -> gb		3362328	0					
ANR	3363498	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3363499	UnaryOperator	&		3362328	0					
ANR	3363500	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3363501	Identifier	sl		3362328	0					
ANR	3363502	Identifier	gb		3362328	1					
ANR	3363503	IfStatement	if ( sl -> sub_mb_type [ i ] >= 4 )		3362328	1					
ANR	3363504	Condition	sl -> sub_mb_type [ i ] >= 4	329:19:6799:6820	3362328	0	True				
ANR	3363505	RelationalExpression	sl -> sub_mb_type [ i ] >= 4		3362328	0		>=			
ANR	3363506	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363507	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363508	Identifier	sl		3362328	0					
ANR	3363509	Identifier	sub_mb_type		3362328	1					
ANR	3363510	Identifier	i		3362328	1					
ANR	3363511	PrimaryExpression	4		3362328	1					
ANR	3363512	CompoundStatement		327:42:6748:6748	3362328	1					
ANR	3363513	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""P sub_mb_type %u out of range at %d %d\\n"" , sl -> sub_mb_type [ i ] , sl -> mb_x , sl -> mb_y )"	331:20:6845:6959	3362328	0	True				
ANR	3363514	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""P sub_mb_type %u out of range at %d %d\\n"" , sl -> sub_mb_type [ i ] , sl -> mb_x , sl -> mb_y )"		3362328	0					
ANR	3363515	Callee	av_log		3362328	0					
ANR	3363516	Identifier	av_log		3362328	0					
ANR	3363517	ArgumentList	h -> avctx		3362328	1					
ANR	3363518	Argument	h -> avctx		3362328	0					
ANR	3363519	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3363520	Identifier	h		3362328	0					
ANR	3363521	Identifier	avctx		3362328	1					
ANR	3363522	Argument	AV_LOG_ERROR		3362328	1					
ANR	3363523	Identifier	AV_LOG_ERROR		3362328	0					
ANR	3363524	Argument	"""P sub_mb_type %u out of range at %d %d\\n"""		3362328	2					
ANR	3363525	PrimaryExpression	"""P sub_mb_type %u out of range at %d %d\\n"""		3362328	0					
ANR	3363526	Argument	sl -> sub_mb_type [ i ]		3362328	3					
ANR	3363527	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363528	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363529	Identifier	sl		3362328	0					
ANR	3363530	Identifier	sub_mb_type		3362328	1					
ANR	3363531	Identifier	i		3362328	1					
ANR	3363532	Argument	sl -> mb_x		3362328	4					
ANR	3363533	PtrMemberAccess	sl -> mb_x		3362328	0					
ANR	3363534	Identifier	sl		3362328	0					
ANR	3363535	Identifier	mb_x		3362328	1					
ANR	3363536	Argument	sl -> mb_y		3362328	5					
ANR	3363537	PtrMemberAccess	sl -> mb_y		3362328	0					
ANR	3363538	Identifier	sl		3362328	0					
ANR	3363539	Identifier	mb_y		3362328	1					
ANR	3363540	ReturnStatement	return - 1 ;	333:20:6982:6991	3362328	1	True				
ANR	3363541	UnaryOperationExpression	- 1		3362328	0					
ANR	3363542	UnaryOperator	-		3362328	0					
ANR	3363543	PrimaryExpression	1		3362328	1					
ANR	3363544	ExpressionStatement	sub_partition_count [ i ] = ff_h264_p_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . partition_count	337:16:7029:7116	3362328	2	True				
ANR	3363545	AssignmentExpression	sub_partition_count [ i ] = ff_h264_p_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . partition_count		3362328	0		=			
ANR	3363546	ArrayIndexing	sub_partition_count [ i ]		3362328	0					
ANR	3363547	Identifier	sub_partition_count		3362328	0					
ANR	3363548	Identifier	i		3362328	1					
ANR	3363549	MemberAccess	ff_h264_p_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . partition_count		3362328	1					
ANR	3363550	ArrayIndexing	ff_h264_p_sub_mb_type_info [ sl -> sub_mb_type [ i ] ]		3362328	0					
ANR	3363551	Identifier	ff_h264_p_sub_mb_type_info		3362328	0					
ANR	3363552	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	1					
ANR	3363553	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363554	Identifier	sl		3362328	0					
ANR	3363555	Identifier	sub_mb_type		3362328	1					
ANR	3363556	Identifier	i		3362328	1					
ANR	3363557	Identifier	partition_count		3362328	1					
ANR	3363558	ExpressionStatement	sl -> sub_mb_type [ i ] = ff_h264_p_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . type	339:16:7135:7211	3362328	3	True				
ANR	3363559	AssignmentExpression	sl -> sub_mb_type [ i ] = ff_h264_p_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . type		3362328	0		=			
ANR	3363560	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363561	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363562	Identifier	sl		3362328	0					
ANR	3363563	Identifier	sub_mb_type		3362328	1					
ANR	3363564	Identifier	i		3362328	1					
ANR	3363565	MemberAccess	ff_h264_p_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . type		3362328	1					
ANR	3363566	ArrayIndexing	ff_h264_p_sub_mb_type_info [ sl -> sub_mb_type [ i ] ]		3362328	0					
ANR	3363567	Identifier	ff_h264_p_sub_mb_type_info		3362328	0					
ANR	3363568	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	1					
ANR	3363569	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363570	Identifier	sl		3362328	0					
ANR	3363571	Identifier	sub_mb_type		3362328	1					
ANR	3363572	Identifier	i		3362328	1					
ANR	3363573	Identifier	type		3362328	1					
ANR	3363574	ForStatement	for ( list = 0 ; list < sl -> list_count ; list ++ )		3362328	3					
ANR	3363575	ForInit	list = 0 ;	347:13:7255:7263	3362328	0	True				
ANR	3363576	AssignmentExpression	list = 0		3362328	0		=			
ANR	3363577	Identifier	list		3362328	0					
ANR	3363578	PrimaryExpression	0		3362328	1					
ANR	3363579	Condition	list < sl -> list_count	347:23:7265:7285	3362328	1	True				
ANR	3363580	RelationalExpression	list < sl -> list_count		3362328	0		<			
ANR	3363581	Identifier	list		3362328	0					
ANR	3363582	PtrMemberAccess	sl -> list_count		3362328	1					
ANR	3363583	Identifier	sl		3362328	0					
ANR	3363584	Identifier	list_count		3362328	1					
ANR	3363585	PostIncDecOperationExpression	list ++	347:46:7288:7293	3362328	2	True				
ANR	3363586	Identifier	list		3362328	0					
ANR	3363587	IncDec	++		3362328	1					
ANR	3363588	CompoundStatement		347:12:7237:7311	3362328	3					
ANR	3363589	IdentifierDeclStatement	int ref_count = IS_REF0 ( mb_type ) ? 1 : sl -> ref_count [ list ] << MB_MBAFF ( sl ) ;	349:12:7311:7385	3362328	0	True				
ANR	3363590	IdentifierDecl	ref_count = IS_REF0 ( mb_type ) ? 1 : sl -> ref_count [ list ] << MB_MBAFF ( sl )		3362328	0					
ANR	3363591	IdentifierDeclType	int		3362328	0					
ANR	3363592	Identifier	ref_count		3362328	1					
ANR	3363593	AssignmentExpression	ref_count = IS_REF0 ( mb_type ) ? 1 : sl -> ref_count [ list ] << MB_MBAFF ( sl )		3362328	2		=			
ANR	3363594	Identifier	ref_count		3362328	0					
ANR	3363595	ConditionalExpression	IS_REF0 ( mb_type ) ? 1 : sl -> ref_count [ list ] << MB_MBAFF ( sl )		3362328	1					
ANR	3363596	Condition	IS_REF0 ( mb_type )		3362328	0					
ANR	3363597	CallExpression	IS_REF0 ( mb_type )		3362328	0					
ANR	3363598	Callee	IS_REF0		3362328	0					
ANR	3363599	Identifier	IS_REF0		3362328	0					
ANR	3363600	ArgumentList	mb_type		3362328	1					
ANR	3363601	Argument	mb_type		3362328	0					
ANR	3363602	Identifier	mb_type		3362328	0					
ANR	3363603	PrimaryExpression	1		3362328	1					
ANR	3363604	ShiftExpression	sl -> ref_count [ list ] << MB_MBAFF ( sl )		3362328	2		<<			
ANR	3363605	ArrayIndexing	sl -> ref_count [ list ]		3362328	0					
ANR	3363606	PtrMemberAccess	sl -> ref_count		3362328	0					
ANR	3363607	Identifier	sl		3362328	0					
ANR	3363608	Identifier	ref_count		3362328	1					
ANR	3363609	Identifier	list		3362328	1					
ANR	3363610	CallExpression	MB_MBAFF ( sl )		3362328	1					
ANR	3363611	Callee	MB_MBAFF		3362328	0					
ANR	3363612	Identifier	MB_MBAFF		3362328	0					
ANR	3363613	ArgumentList	sl		3362328	1					
ANR	3363614	Argument	sl		3362328	0					
ANR	3363615	Identifier	sl		3362328	0					
ANR	3363616	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3362328	1					
ANR	3363617	ForInit	i = 0 ;	351:16:7404:7407	3362328	0	True				
ANR	3363618	AssignmentExpression	i = 0		3362328	0		=			
ANR	3363619	Identifier	i		3362328	0					
ANR	3363620	PrimaryExpression	0		3362328	1					
ANR	3363621	Condition	i < 4	351:21:7409:7411	3362328	1	True				
ANR	3363622	RelationalExpression	i < 4		3362328	0		<			
ANR	3363623	Identifier	i		3362328	0					
ANR	3363624	PrimaryExpression	4		3362328	1					
ANR	3363625	PostIncDecOperationExpression	i ++	351:26:7414:7416	3362328	2	True				
ANR	3363626	Identifier	i		3362328	0					
ANR	3363627	IncDec	++		3362328	1					
ANR	3363628	CompoundStatement		349:30:7344:7344	3362328	3					
ANR	3363629	IfStatement	if ( IS_DIRECT ( sl -> sub_mb_type [ i ] ) )		3362328	0					
ANR	3363630	Condition	IS_DIRECT ( sl -> sub_mb_type [ i ] )	353:19:7440:7468	3362328	0	True				
ANR	3363631	CallExpression	IS_DIRECT ( sl -> sub_mb_type [ i ] )		3362328	0					
ANR	3363632	Callee	IS_DIRECT		3362328	0					
ANR	3363633	Identifier	IS_DIRECT		3362328	0					
ANR	3363634	ArgumentList	sl -> sub_mb_type [ i ]		3362328	1					
ANR	3363635	Argument	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363636	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363637	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363638	Identifier	sl		3362328	0					
ANR	3363639	Identifier	sub_mb_type		3362328	1					
ANR	3363640	Identifier	i		3362328	1					
ANR	3363641	ContinueStatement	continue ;	353:50:7471:7479	3362328	1	True				
ANR	3363642	IfStatement	"if ( IS_DIR ( sl -> sub_mb_type [ i ] , 0 , list ) )"		3362328	1					
ANR	3363643	Condition	"IS_DIR ( sl -> sub_mb_type [ i ] , 0 , list )"	355:19:7501:7535	3362328	0	True				
ANR	3363644	CallExpression	"IS_DIR ( sl -> sub_mb_type [ i ] , 0 , list )"		3362328	0					
ANR	3363645	Callee	IS_DIR		3362328	0					
ANR	3363646	Identifier	IS_DIR		3362328	0					
ANR	3363647	ArgumentList	sl -> sub_mb_type [ i ]		3362328	1					
ANR	3363648	Argument	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363649	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363650	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363651	Identifier	sl		3362328	0					
ANR	3363652	Identifier	sub_mb_type		3362328	1					
ANR	3363653	Identifier	i		3362328	1					
ANR	3363654	Argument	0		3362328	1					
ANR	3363655	PrimaryExpression	0		3362328	0					
ANR	3363656	Argument	list		3362328	2					
ANR	3363657	Identifier	list		3362328	0					
ANR	3363658	CompoundStatement		355:20:7486:7502	3362328	1					
ANR	3363659	IdentifierDeclStatement	unsigned int tmp ;	357:20:7560:7576	3362328	0	True				
ANR	3363660	IdentifierDecl	tmp		3362328	0					
ANR	3363661	IdentifierDeclType	unsigned int		3362328	0					
ANR	3363662	Identifier	tmp		3362328	1					
ANR	3363663	IfStatement	if ( ref_count == 1 )		3362328	1					
ANR	3363664	Condition	ref_count == 1	359:23:7602:7615	3362328	0	True				
ANR	3363665	EqualityExpression	ref_count == 1		3362328	0		==			
ANR	3363666	Identifier	ref_count		3362328	0					
ANR	3363667	PrimaryExpression	1		3362328	1					
ANR	3363668	CompoundStatement		357:38:7543:7543	3362328	1					
ANR	3363669	ExpressionStatement	tmp = 0	361:24:7644:7650	3362328	0	True				
ANR	3363670	AssignmentExpression	tmp = 0		3362328	0		=			
ANR	3363671	Identifier	tmp		3362328	0					
ANR	3363672	PrimaryExpression	0		3362328	1					
ANR	3363673	ElseStatement	else		3362328	0					
ANR	3363674	IfStatement	if ( ref_count == 2 )		3362328	0					
ANR	3363675	Condition	ref_count == 2	363:29:7682:7695	3362328	0	True				
ANR	3363676	EqualityExpression	ref_count == 2		3362328	0		==			
ANR	3363677	Identifier	ref_count		3362328	0					
ANR	3363678	PrimaryExpression	2		3362328	1					
ANR	3363679	CompoundStatement		361:44:7623:7623	3362328	1					
ANR	3363680	ExpressionStatement	tmp = get_bits1 ( & sl -> gb ) ^ 1	365:24:7724:7749	3362328	0	True				
ANR	3363681	AssignmentExpression	tmp = get_bits1 ( & sl -> gb ) ^ 1		3362328	0		=			
ANR	3363682	Identifier	tmp		3362328	0					
ANR	3363683	ExclusiveOrExpression	get_bits1 ( & sl -> gb ) ^ 1		3362328	1		^			
ANR	3363684	CallExpression	get_bits1 ( & sl -> gb )		3362328	0					
ANR	3363685	Callee	get_bits1		3362328	0					
ANR	3363686	Identifier	get_bits1		3362328	0					
ANR	3363687	ArgumentList	& sl -> gb		3362328	1					
ANR	3363688	Argument	& sl -> gb		3362328	0					
ANR	3363689	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3363690	UnaryOperator	&		3362328	0					
ANR	3363691	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3363692	Identifier	sl		3362328	0					
ANR	3363693	Identifier	gb		3362328	1					
ANR	3363694	PrimaryExpression	1		3362328	1					
ANR	3363695	ElseStatement	else		3362328	0					
ANR	3363696	CompoundStatement		365:25:7703:7703	3362328	0					
ANR	3363697	ExpressionStatement	tmp = get_ue_golomb_31 ( & sl -> gb )	369:24:7804:7834	3362328	0	True				
ANR	3363698	AssignmentExpression	tmp = get_ue_golomb_31 ( & sl -> gb )		3362328	0		=			
ANR	3363699	Identifier	tmp		3362328	0					
ANR	3363700	CallExpression	get_ue_golomb_31 ( & sl -> gb )		3362328	1					
ANR	3363701	Callee	get_ue_golomb_31		3362328	0					
ANR	3363702	Identifier	get_ue_golomb_31		3362328	0					
ANR	3363703	ArgumentList	& sl -> gb		3362328	1					
ANR	3363704	Argument	& sl -> gb		3362328	0					
ANR	3363705	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3363706	UnaryOperator	&		3362328	0					
ANR	3363707	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3363708	Identifier	sl		3362328	0					
ANR	3363709	Identifier	gb		3362328	1					
ANR	3363710	IfStatement	if ( tmp >= ref_count )		3362328	1					
ANR	3363711	Condition	tmp >= ref_count	371:27:7864:7877	3362328	0	True				
ANR	3363712	RelationalExpression	tmp >= ref_count		3362328	0		>=			
ANR	3363713	Identifier	tmp		3362328	0					
ANR	3363714	Identifier	ref_count		3362328	1					
ANR	3363715	CompoundStatement		369:42:7805:7805	3362328	1					
ANR	3363716	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , tmp )"	373:28:7910:7966	3362328	0	True				
ANR	3363717	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , tmp )"		3362328	0					
ANR	3363718	Callee	av_log		3362328	0					
ANR	3363719	Identifier	av_log		3362328	0					
ANR	3363720	ArgumentList	h -> avctx		3362328	1					
ANR	3363721	Argument	h -> avctx		3362328	0					
ANR	3363722	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3363723	Identifier	h		3362328	0					
ANR	3363724	Identifier	avctx		3362328	1					
ANR	3363725	Argument	AV_LOG_ERROR		3362328	1					
ANR	3363726	Identifier	AV_LOG_ERROR		3362328	0					
ANR	3363727	Argument	"""ref %u overflow\\n"""		3362328	2					
ANR	3363728	PrimaryExpression	"""ref %u overflow\\n"""		3362328	0					
ANR	3363729	Argument	tmp		3362328	3					
ANR	3363730	Identifier	tmp		3362328	0					
ANR	3363731	ReturnStatement	return - 1 ;	375:28:7997:8006	3362328	1	True				
ANR	3363732	UnaryOperationExpression	- 1		3362328	0					
ANR	3363733	UnaryOperator	-		3362328	0					
ANR	3363734	PrimaryExpression	1		3362328	1					
ANR	3363735	ExpressionStatement	ref [ list ] [ i ] = tmp	381:20:8079:8096	3362328	2	True				
ANR	3363736	AssignmentExpression	ref [ list ] [ i ] = tmp		3362328	0		=			
ANR	3363737	ArrayIndexing	ref [ list ] [ i ]		3362328	0					
ANR	3363738	ArrayIndexing	ref [ list ]		3362328	0					
ANR	3363739	Identifier	ref		3362328	0					
ANR	3363740	Identifier	list		3362328	1					
ANR	3363741	Identifier	i		3362328	1					
ANR	3363742	Identifier	tmp		3362328	1					
ANR	3363743	ElseStatement	else		3362328	0					
ANR	3363744	CompoundStatement		381:21:8046:8046	3362328	0					
ANR	3363745	ExpressionStatement	ref [ list ] [ i ] = - 1	387:20:8169:8186	3362328	0	True				
ANR	3363746	AssignmentExpression	ref [ list ] [ i ] = - 1		3362328	0		=			
ANR	3363747	ArrayIndexing	ref [ list ] [ i ]		3362328	0					
ANR	3363748	ArrayIndexing	ref [ list ]		3362328	0					
ANR	3363749	Identifier	ref		3362328	0					
ANR	3363750	Identifier	list		3362328	1					
ANR	3363751	Identifier	i		3362328	1					
ANR	3363752	UnaryOperationExpression	- 1		3362328	1					
ANR	3363753	UnaryOperator	-		3362328	0					
ANR	3363754	PrimaryExpression	1		3362328	1					
ANR	3363755	IfStatement	if ( dct8x8_allowed )		3362328	4					
ANR	3363756	Condition	dct8x8_allowed	397:11:8247:8260	3362328	0	True				
ANR	3363757	Identifier	dct8x8_allowed		3362328	0					
ANR	3363758	ExpressionStatement	"dct8x8_allowed = get_dct8x8_allowed ( h , sl )"	399:12:8276:8318	3362328	1	True				
ANR	3363759	AssignmentExpression	"dct8x8_allowed = get_dct8x8_allowed ( h , sl )"		3362328	0		=			
ANR	3363760	Identifier	dct8x8_allowed		3362328	0					
ANR	3363761	CallExpression	"get_dct8x8_allowed ( h , sl )"		3362328	1					
ANR	3363762	Callee	get_dct8x8_allowed		3362328	0					
ANR	3363763	Identifier	get_dct8x8_allowed		3362328	0					
ANR	3363764	ArgumentList	h		3362328	1					
ANR	3363765	Argument	h		3362328	0					
ANR	3363766	Identifier	h		3362328	0					
ANR	3363767	Argument	sl		3362328	1					
ANR	3363768	Identifier	sl		3362328	0					
ANR	3363769	ForStatement	for ( list = 0 ; list < sl -> list_count ; list ++ )		3362328	5					
ANR	3363770	ForInit	list = 0 ;	403:13:8336:8344	3362328	0	True				
ANR	3363771	AssignmentExpression	list = 0		3362328	0		=			
ANR	3363772	Identifier	list		3362328	0					
ANR	3363773	PrimaryExpression	0		3362328	1					
ANR	3363774	Condition	list < sl -> list_count	403:23:8346:8366	3362328	1	True				
ANR	3363775	RelationalExpression	list < sl -> list_count		3362328	0		<			
ANR	3363776	Identifier	list		3362328	0					
ANR	3363777	PtrMemberAccess	sl -> list_count		3362328	1					
ANR	3363778	Identifier	sl		3362328	0					
ANR	3363779	Identifier	list_count		3362328	1					
ANR	3363780	PostIncDecOperationExpression	list ++	403:46:8369:8374	3362328	2	True				
ANR	3363781	Identifier	list		3362328	0					
ANR	3363782	IncDec	++		3362328	1					
ANR	3363783	CompoundStatement		401:54:8303:8303	3362328	3					
ANR	3363784	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		3362328	0					
ANR	3363785	ForInit	i = 0 ;	405:16:8396:8399	3362328	0	True				
ANR	3363786	AssignmentExpression	i = 0		3362328	0		=			
ANR	3363787	Identifier	i		3362328	0					
ANR	3363788	PrimaryExpression	0		3362328	1					
ANR	3363789	Condition	i < 4	405:21:8401:8403	3362328	1	True				
ANR	3363790	RelationalExpression	i < 4		3362328	0		<			
ANR	3363791	Identifier	i		3362328	0					
ANR	3363792	PrimaryExpression	4		3362328	1					
ANR	3363793	PostIncDecOperationExpression	i ++	405:26:8406:8408	3362328	2	True				
ANR	3363794	Identifier	i		3362328	0					
ANR	3363795	IncDec	++		3362328	1					
ANR	3363796	CompoundStatement		403:30:8336:8336	3362328	3					
ANR	3363797	IfStatement	if ( IS_DIRECT ( sl -> sub_mb_type [ i ] ) )		3362328	0					
ANR	3363798	Condition	IS_DIRECT ( sl -> sub_mb_type [ i ] )	407:19:8432:8460	3362328	0	True				
ANR	3363799	CallExpression	IS_DIRECT ( sl -> sub_mb_type [ i ] )		3362328	0					
ANR	3363800	Callee	IS_DIRECT		3362328	0					
ANR	3363801	Identifier	IS_DIRECT		3362328	0					
ANR	3363802	ArgumentList	sl -> sub_mb_type [ i ]		3362328	1					
ANR	3363803	Argument	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363804	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363805	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363806	Identifier	sl		3362328	0					
ANR	3363807	Identifier	sub_mb_type		3362328	1					
ANR	3363808	Identifier	i		3362328	1					
ANR	3363809	CompoundStatement		405:50:8389:8389	3362328	1					
ANR	3363810	ExpressionStatement	sl -> ref_cache [ list ] [ scan8 [ 4 * i ] ] = sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ]	409:20:8486:8557	3362328	0	True				
ANR	3363811	AssignmentExpression	sl -> ref_cache [ list ] [ scan8 [ 4 * i ] ] = sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ]		3362328	0		=			
ANR	3363812	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 4 * i ] ]		3362328	0					
ANR	3363813	ArrayIndexing	sl -> ref_cache [ list ]		3362328	0					
ANR	3363814	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3363815	Identifier	sl		3362328	0					
ANR	3363816	Identifier	ref_cache		3362328	1					
ANR	3363817	Identifier	list		3362328	1					
ANR	3363818	ArrayIndexing	scan8 [ 4 * i ]		3362328	1					
ANR	3363819	Identifier	scan8		3362328	0					
ANR	3363820	MultiplicativeExpression	4 * i		3362328	1		*			
ANR	3363821	PrimaryExpression	4		3362328	0					
ANR	3363822	Identifier	i		3362328	1					
ANR	3363823	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ]		3362328	1					
ANR	3363824	ArrayIndexing	sl -> ref_cache [ list ]		3362328	0					
ANR	3363825	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3363826	Identifier	sl		3362328	0					
ANR	3363827	Identifier	ref_cache		3362328	1					
ANR	3363828	Identifier	list		3362328	1					
ANR	3363829	AdditiveExpression	scan8 [ 4 * i ] + 1		3362328	1		+			
ANR	3363830	ArrayIndexing	scan8 [ 4 * i ]		3362328	0					
ANR	3363831	Identifier	scan8		3362328	0					
ANR	3363832	MultiplicativeExpression	4 * i		3362328	1		*			
ANR	3363833	PrimaryExpression	4		3362328	0					
ANR	3363834	Identifier	i		3362328	1					
ANR	3363835	PrimaryExpression	1		3362328	1					
ANR	3363836	ContinueStatement	continue ;	411:20:8580:8588	3362328	1	True				
ANR	3363837	ExpressionStatement	sl -> ref_cache [ list ] [ scan8 [ 4 * i ] ] = sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ] = sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ] = sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]	415:16:8626:8801	3362328	1	True				
ANR	3363838	AssignmentExpression	sl -> ref_cache [ list ] [ scan8 [ 4 * i ] ] = sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ] = sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ] = sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]		3362328	0		=			
ANR	3363839	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 4 * i ] ]		3362328	0					
ANR	3363840	ArrayIndexing	sl -> ref_cache [ list ]		3362328	0					
ANR	3363841	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3363842	Identifier	sl		3362328	0					
ANR	3363843	Identifier	ref_cache		3362328	1					
ANR	3363844	Identifier	list		3362328	1					
ANR	3363845	ArrayIndexing	scan8 [ 4 * i ]		3362328	1					
ANR	3363846	Identifier	scan8		3362328	0					
ANR	3363847	MultiplicativeExpression	4 * i		3362328	1		*			
ANR	3363848	PrimaryExpression	4		3362328	0					
ANR	3363849	Identifier	i		3362328	1					
ANR	3363850	AssignmentExpression	sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ] = sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ] = sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]		3362328	1		=			
ANR	3363851	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 1 ]		3362328	0					
ANR	3363852	ArrayIndexing	sl -> ref_cache [ list ]		3362328	0					
ANR	3363853	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3363854	Identifier	sl		3362328	0					
ANR	3363855	Identifier	ref_cache		3362328	1					
ANR	3363856	Identifier	list		3362328	1					
ANR	3363857	AdditiveExpression	scan8 [ 4 * i ] + 1		3362328	1		+			
ANR	3363858	ArrayIndexing	scan8 [ 4 * i ]		3362328	0					
ANR	3363859	Identifier	scan8		3362328	0					
ANR	3363860	MultiplicativeExpression	4 * i		3362328	1		*			
ANR	3363861	PrimaryExpression	4		3362328	0					
ANR	3363862	Identifier	i		3362328	1					
ANR	3363863	PrimaryExpression	1		3362328	1					
ANR	3363864	AssignmentExpression	sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ] = sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]		3362328	1		=			
ANR	3363865	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 8 ]		3362328	0					
ANR	3363866	ArrayIndexing	sl -> ref_cache [ list ]		3362328	0					
ANR	3363867	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3363868	Identifier	sl		3362328	0					
ANR	3363869	Identifier	ref_cache		3362328	1					
ANR	3363870	Identifier	list		3362328	1					
ANR	3363871	AdditiveExpression	scan8 [ 4 * i ] + 8		3362328	1		+			
ANR	3363872	ArrayIndexing	scan8 [ 4 * i ]		3362328	0					
ANR	3363873	Identifier	scan8		3362328	0					
ANR	3363874	MultiplicativeExpression	4 * i		3362328	1		*			
ANR	3363875	PrimaryExpression	4		3362328	0					
ANR	3363876	Identifier	i		3362328	1					
ANR	3363877	PrimaryExpression	8		3362328	1					
ANR	3363878	AssignmentExpression	sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ] = ref [ list ] [ i ]		3362328	1		=			
ANR	3363879	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 4 * i ] + 9 ]		3362328	0					
ANR	3363880	ArrayIndexing	sl -> ref_cache [ list ]		3362328	0					
ANR	3363881	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3363882	Identifier	sl		3362328	0					
ANR	3363883	Identifier	ref_cache		3362328	1					
ANR	3363884	Identifier	list		3362328	1					
ANR	3363885	AdditiveExpression	scan8 [ 4 * i ] + 9		3362328	1		+			
ANR	3363886	ArrayIndexing	scan8 [ 4 * i ]		3362328	0					
ANR	3363887	Identifier	scan8		3362328	0					
ANR	3363888	MultiplicativeExpression	4 * i		3362328	1		*			
ANR	3363889	PrimaryExpression	4		3362328	0					
ANR	3363890	Identifier	i		3362328	1					
ANR	3363891	PrimaryExpression	9		3362328	1					
ANR	3363892	ArrayIndexing	ref [ list ] [ i ]		3362328	1					
ANR	3363893	ArrayIndexing	ref [ list ]		3362328	0					
ANR	3363894	Identifier	ref		3362328	0					
ANR	3363895	Identifier	list		3362328	1					
ANR	3363896	Identifier	i		3362328	1					
ANR	3363897	IfStatement	"if ( IS_DIR ( sl -> sub_mb_type [ i ] , 0 , list ) )"		3362328	2					
ANR	3363898	Condition	"IS_DIR ( sl -> sub_mb_type [ i ] , 0 , list )"	421:19:8825:8859	3362328	0	True				
ANR	3363899	CallExpression	"IS_DIR ( sl -> sub_mb_type [ i ] , 0 , list )"		3362328	0					
ANR	3363900	Callee	IS_DIR		3362328	0					
ANR	3363901	Identifier	IS_DIR		3362328	0					
ANR	3363902	ArgumentList	sl -> sub_mb_type [ i ]		3362328	1					
ANR	3363903	Argument	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363904	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363905	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363906	Identifier	sl		3362328	0					
ANR	3363907	Identifier	sub_mb_type		3362328	1					
ANR	3363908	Identifier	i		3362328	1					
ANR	3363909	Argument	0		3362328	1					
ANR	3363910	PrimaryExpression	0		3362328	0					
ANR	3363911	Argument	list		3362328	2					
ANR	3363912	Identifier	list		3362328	0					
ANR	3363913	CompoundStatement		423:20:8874:8949	3362328	1					
ANR	3363914	IdentifierDeclStatement	const int sub_mb_type = sl -> sub_mb_type [ i ] ;	423:20:8884:8925	3362328	0	True				
ANR	3363915	IdentifierDecl	sub_mb_type = sl -> sub_mb_type [ i ]		3362328	0					
ANR	3363916	IdentifierDeclType	const int		3362328	0					
ANR	3363917	Identifier	sub_mb_type		3362328	1					
ANR	3363918	AssignmentExpression	sub_mb_type = sl -> sub_mb_type [ i ]		3362328	2		=			
ANR	3363919	Identifier	sub_mb_type		3362328	0					
ANR	3363920	ArrayIndexing	sl -> sub_mb_type [ i ]		3362328	1					
ANR	3363921	PtrMemberAccess	sl -> sub_mb_type		3362328	0					
ANR	3363922	Identifier	sl		3362328	0					
ANR	3363923	Identifier	sub_mb_type		3362328	1					
ANR	3363924	Identifier	i		3362328	1					
ANR	3363925	IdentifierDeclStatement	const int block_width = ( sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 ) ) ? 2 : 1 ;	425:20:8948:9023	3362328	1	True				
ANR	3363926	IdentifierDecl	block_width = ( sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 ) ) ? 2 : 1		3362328	0					
ANR	3363927	IdentifierDeclType	const int		3362328	0					
ANR	3363928	Identifier	block_width		3362328	1					
ANR	3363929	AssignmentExpression	block_width = ( sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 ) ) ? 2 : 1		3362328	2		=			
ANR	3363930	Identifier	block_width		3362328	0					
ANR	3363931	ConditionalExpression	( sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 ) ) ? 2 : 1		3362328	1					
ANR	3363932	Condition	sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 )		3362328	0					
ANR	3363933	BitAndExpression	sub_mb_type & ( MB_TYPE_16x16 | MB_TYPE_16x8 )		3362328	0		&			
ANR	3363934	Identifier	sub_mb_type		3362328	0					
ANR	3363935	InclusiveOrExpression	MB_TYPE_16x16 | MB_TYPE_16x8		3362328	1		|			
ANR	3363936	Identifier	MB_TYPE_16x16		3362328	0					
ANR	3363937	Identifier	MB_TYPE_16x8		3362328	1					
ANR	3363938	PrimaryExpression	2		3362328	1					
ANR	3363939	PrimaryExpression	1		3362328	2					
ANR	3363940	ForStatement	for ( j = 0 ; j < sub_partition_count [ i ] ; j ++ )		3362328	2					
ANR	3363941	ForInit	j = 0 ;	427:24:9050:9053	3362328	0	True				
ANR	3363942	AssignmentExpression	j = 0		3362328	0		=			
ANR	3363943	Identifier	j		3362328	0					
ANR	3363944	PrimaryExpression	0		3362328	1					
ANR	3363945	Condition	j < sub_partition_count [ i ]	427:29:9055:9078	3362328	1	True				
ANR	3363946	RelationalExpression	j < sub_partition_count [ i ]		3362328	0		<			
ANR	3363947	Identifier	j		3362328	0					
ANR	3363948	ArrayIndexing	sub_partition_count [ i ]		3362328	1					
ANR	3363949	Identifier	sub_partition_count		3362328	0					
ANR	3363950	Identifier	i		3362328	1					
ANR	3363951	PostIncDecOperationExpression	j ++	427:55:9081:9083	3362328	2	True				
ANR	3363952	Identifier	j		3362328	0					
ANR	3363953	IncDec	++		3362328	1					
ANR	3363954	CompoundStatement		431:24:9138:9198	3362328	3					
ANR	3363955	IdentifierDeclStatement	"int mx , my ;"	429:24:9112:9122	3362328	0	True				
ANR	3363956	IdentifierDecl	mx		3362328	0					
ANR	3363957	IdentifierDeclType	int		3362328	0					
ANR	3363958	Identifier	mx		3362328	1					
ANR	3363959	IdentifierDecl	my		3362328	1					
ANR	3363960	IdentifierDeclType	int		3362328	0					
ANR	3363961	Identifier	my		3362328	1					
ANR	3363962	IdentifierDeclStatement	const int index = 4 * i + block_width * j ;	431:24:9149:9185	3362328	1	True				
ANR	3363963	IdentifierDecl	index = 4 * i + block_width * j		3362328	0					
ANR	3363964	IdentifierDeclType	const int		3362328	0					
ANR	3363965	Identifier	index		3362328	1					
ANR	3363966	AssignmentExpression	index = 4 * i + block_width * j		3362328	2		=			
ANR	3363967	Identifier	index		3362328	0					
ANR	3363968	AdditiveExpression	4 * i + block_width * j		3362328	1		+			
ANR	3363969	MultiplicativeExpression	4 * i		3362328	0		*			
ANR	3363970	PrimaryExpression	4		3362328	0					
ANR	3363971	Identifier	i		3362328	1					
ANR	3363972	MultiplicativeExpression	block_width * j		3362328	1		*			
ANR	3363973	Identifier	block_width		3362328	0					
ANR	3363974	Identifier	j		3362328	1					
ANR	3363975	IdentifierDeclStatement	int16_t ( * mv_cache ) [ 2 ] = & sl -> mv_cache [ list ] [ scan8 [ index ] ] ;	433:24:9212:9272	3362328	2	True				
ANR	3363976	IdentifierDecl	( * mv_cache ) [ 2 ] = & sl -> mv_cache [ list ] [ scan8 [ index ] ]		3362328	0					
ANR	3363977	IdentifierDeclType	int16_t ( * ) [ 2 ]		3362328	0					
ANR	3363978	Identifier	mv_cache		3362328	1					
ANR	3363979	PrimaryExpression	2		3362328	2					
ANR	3363980	AssignmentExpression	( * mv_cache ) [ 2 ] = & sl -> mv_cache [ list ] [ scan8 [ index ] ]		3362328	3		=			
ANR	3363981	Identifier	mv_cache		3362328	0					
ANR	3363982	UnaryOperationExpression	& sl -> mv_cache [ list ] [ scan8 [ index ] ]		3362328	1					
ANR	3363983	UnaryOperator	&		3362328	0					
ANR	3363984	ArrayIndexing	sl -> mv_cache [ list ] [ scan8 [ index ] ]		3362328	1					
ANR	3363985	ArrayIndexing	sl -> mv_cache [ list ]		3362328	0					
ANR	3363986	PtrMemberAccess	sl -> mv_cache		3362328	0					
ANR	3363987	Identifier	sl		3362328	0					
ANR	3363988	Identifier	mv_cache		3362328	1					
ANR	3363989	Identifier	list		3362328	1					
ANR	3363990	ArrayIndexing	scan8 [ index ]		3362328	1					
ANR	3363991	Identifier	scan8		3362328	0					
ANR	3363992	Identifier	index		3362328	1					
ANR	3363993	ExpressionStatement	"pred_motion ( h , sl , index , block_width , list , sl -> ref_cache [ list ] [ scan8 [ index ] ] , & mx , & my )"	435:24:9299:9390	3362328	3	True				
ANR	3363994	CallExpression	"pred_motion ( h , sl , index , block_width , list , sl -> ref_cache [ list ] [ scan8 [ index ] ] , & mx , & my )"		3362328	0					
ANR	3363995	Callee	pred_motion		3362328	0					
ANR	3363996	Identifier	pred_motion		3362328	0					
ANR	3363997	ArgumentList	h		3362328	1					
ANR	3363998	Argument	h		3362328	0					
ANR	3363999	Identifier	h		3362328	0					
ANR	3364000	Argument	sl		3362328	1					
ANR	3364001	Identifier	sl		3362328	0					
ANR	3364002	Argument	index		3362328	2					
ANR	3364003	Identifier	index		3362328	0					
ANR	3364004	Argument	block_width		3362328	3					
ANR	3364005	Identifier	block_width		3362328	0					
ANR	3364006	Argument	list		3362328	4					
ANR	3364007	Identifier	list		3362328	0					
ANR	3364008	Argument	sl -> ref_cache [ list ] [ scan8 [ index ] ]		3362328	5					
ANR	3364009	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ index ] ]		3362328	0					
ANR	3364010	ArrayIndexing	sl -> ref_cache [ list ]		3362328	0					
ANR	3364011	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3364012	Identifier	sl		3362328	0					
ANR	3364013	Identifier	ref_cache		3362328	1					
ANR	3364014	Identifier	list		3362328	1					
ANR	3364015	ArrayIndexing	scan8 [ index ]		3362328	1					
ANR	3364016	Identifier	scan8		3362328	0					
ANR	3364017	Identifier	index		3362328	1					
ANR	3364018	Argument	& mx		3362328	6					
ANR	3364019	UnaryOperationExpression	& mx		3362328	0					
ANR	3364020	UnaryOperator	&		3362328	0					
ANR	3364021	Identifier	mx		3362328	1					
ANR	3364022	Argument	& my		3362328	7					
ANR	3364023	UnaryOperationExpression	& my		3362328	0					
ANR	3364024	UnaryOperator	&		3362328	0					
ANR	3364025	Identifier	my		3362328	1					
ANR	3364026	ExpressionStatement	mx += get_se_golomb ( & sl -> gb )	437:24:9417:9445	3362328	4	True				
ANR	3364027	AssignmentExpression	mx += get_se_golomb ( & sl -> gb )		3362328	0		+=			
ANR	3364028	Identifier	mx		3362328	0					
ANR	3364029	CallExpression	get_se_golomb ( & sl -> gb )		3362328	1					
ANR	3364030	Callee	get_se_golomb		3362328	0					
ANR	3364031	Identifier	get_se_golomb		3362328	0					
ANR	3364032	ArgumentList	& sl -> gb		3362328	1					
ANR	3364033	Argument	& sl -> gb		3362328	0					
ANR	3364034	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3364035	UnaryOperator	&		3362328	0					
ANR	3364036	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3364037	Identifier	sl		3362328	0					
ANR	3364038	Identifier	gb		3362328	1					
ANR	3364039	ExpressionStatement	my += get_se_golomb ( & sl -> gb )	439:24:9472:9500	3362328	5	True				
ANR	3364040	AssignmentExpression	my += get_se_golomb ( & sl -> gb )		3362328	0		+=			
ANR	3364041	Identifier	my		3362328	0					
ANR	3364042	CallExpression	get_se_golomb ( & sl -> gb )		3362328	1					
ANR	3364043	Callee	get_se_golomb		3362328	0					
ANR	3364044	Identifier	get_se_golomb		3362328	0					
ANR	3364045	ArgumentList	& sl -> gb		3362328	1					
ANR	3364046	Argument	& sl -> gb		3362328	0					
ANR	3364047	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3364048	UnaryOperator	&		3362328	0					
ANR	3364049	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3364050	Identifier	sl		3362328	0					
ANR	3364051	Identifier	gb		3362328	1					
ANR	3364052	ExpressionStatement	"ff_tlog ( h -> avctx , ""final mv:%d %d\\n"" , mx , my )"	441:24:9527:9572	3362328	6	True				
ANR	3364053	CallExpression	"ff_tlog ( h -> avctx , ""final mv:%d %d\\n"" , mx , my )"		3362328	0					
ANR	3364054	Callee	ff_tlog		3362328	0					
ANR	3364055	Identifier	ff_tlog		3362328	0					
ANR	3364056	ArgumentList	h -> avctx		3362328	1					
ANR	3364057	Argument	h -> avctx		3362328	0					
ANR	3364058	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3364059	Identifier	h		3362328	0					
ANR	3364060	Identifier	avctx		3362328	1					
ANR	3364061	Argument	"""final mv:%d %d\\n"""		3362328	1					
ANR	3364062	PrimaryExpression	"""final mv:%d %d\\n"""		3362328	0					
ANR	3364063	Argument	mx		3362328	2					
ANR	3364064	Identifier	mx		3362328	0					
ANR	3364065	Argument	my		3362328	3					
ANR	3364066	Identifier	my		3362328	0					
ANR	3364067	IfStatement	if ( IS_SUB_8X8 ( sub_mb_type ) )		3362328	7					
ANR	3364068	Condition	IS_SUB_8X8 ( sub_mb_type )	445:27:9604:9626	3362328	0	True				
ANR	3364069	CallExpression	IS_SUB_8X8 ( sub_mb_type )		3362328	0					
ANR	3364070	Callee	IS_SUB_8X8		3362328	0					
ANR	3364071	Identifier	IS_SUB_8X8		3362328	0					
ANR	3364072	ArgumentList	sub_mb_type		3362328	1					
ANR	3364073	Argument	sub_mb_type		3362328	0					
ANR	3364074	Identifier	sub_mb_type		3362328	0					
ANR	3364075	CompoundStatement		443:51:9554:9554	3362328	1					
ANR	3364076	ExpressionStatement	mv_cache [ 1 ] [ 0 ] = mv_cache [ 8 ] [ 0 ] = mv_cache [ 9 ] [ 0 ] = mx	447:28:9659:9744	3362328	0	True				
ANR	3364077	AssignmentExpression	mv_cache [ 1 ] [ 0 ] = mv_cache [ 8 ] [ 0 ] = mv_cache [ 9 ] [ 0 ] = mx		3362328	0		=			
ANR	3364078	ArrayIndexing	mv_cache [ 1 ] [ 0 ]		3362328	0					
ANR	3364079	ArrayIndexing	mv_cache [ 1 ]		3362328	0					
ANR	3364080	Identifier	mv_cache		3362328	0					
ANR	3364081	PrimaryExpression	1		3362328	1					
ANR	3364082	PrimaryExpression	0		3362328	1					
ANR	3364083	AssignmentExpression	mv_cache [ 8 ] [ 0 ] = mv_cache [ 9 ] [ 0 ] = mx		3362328	1		=			
ANR	3364084	ArrayIndexing	mv_cache [ 8 ] [ 0 ]		3362328	0					
ANR	3364085	ArrayIndexing	mv_cache [ 8 ]		3362328	0					
ANR	3364086	Identifier	mv_cache		3362328	0					
ANR	3364087	PrimaryExpression	8		3362328	1					
ANR	3364088	PrimaryExpression	0		3362328	1					
ANR	3364089	AssignmentExpression	mv_cache [ 9 ] [ 0 ] = mx		3362328	1		=			
ANR	3364090	ArrayIndexing	mv_cache [ 9 ] [ 0 ]		3362328	0					
ANR	3364091	ArrayIndexing	mv_cache [ 9 ]		3362328	0					
ANR	3364092	Identifier	mv_cache		3362328	0					
ANR	3364093	PrimaryExpression	9		3362328	1					
ANR	3364094	PrimaryExpression	0		3362328	1					
ANR	3364095	Identifier	mx		3362328	1					
ANR	3364096	ExpressionStatement	mv_cache [ 1 ] [ 1 ] = mv_cache [ 8 ] [ 1 ] = mv_cache [ 9 ] [ 1 ] = my	451:28:9775:9860	3362328	1	True				
ANR	3364097	AssignmentExpression	mv_cache [ 1 ] [ 1 ] = mv_cache [ 8 ] [ 1 ] = mv_cache [ 9 ] [ 1 ] = my		3362328	0		=			
ANR	3364098	ArrayIndexing	mv_cache [ 1 ] [ 1 ]		3362328	0					
ANR	3364099	ArrayIndexing	mv_cache [ 1 ]		3362328	0					
ANR	3364100	Identifier	mv_cache		3362328	0					
ANR	3364101	PrimaryExpression	1		3362328	1					
ANR	3364102	PrimaryExpression	1		3362328	1					
ANR	3364103	AssignmentExpression	mv_cache [ 8 ] [ 1 ] = mv_cache [ 9 ] [ 1 ] = my		3362328	1		=			
ANR	3364104	ArrayIndexing	mv_cache [ 8 ] [ 1 ]		3362328	0					
ANR	3364105	ArrayIndexing	mv_cache [ 8 ]		3362328	0					
ANR	3364106	Identifier	mv_cache		3362328	0					
ANR	3364107	PrimaryExpression	8		3362328	1					
ANR	3364108	PrimaryExpression	1		3362328	1					
ANR	3364109	AssignmentExpression	mv_cache [ 9 ] [ 1 ] = my		3362328	1		=			
ANR	3364110	ArrayIndexing	mv_cache [ 9 ] [ 1 ]		3362328	0					
ANR	3364111	ArrayIndexing	mv_cache [ 9 ]		3362328	0					
ANR	3364112	Identifier	mv_cache		3362328	0					
ANR	3364113	PrimaryExpression	9		3362328	1					
ANR	3364114	PrimaryExpression	1		3362328	1					
ANR	3364115	Identifier	my		3362328	1					
ANR	3364116	ElseStatement	else		3362328	0					
ANR	3364117	IfStatement	if ( IS_SUB_8X4 ( sub_mb_type ) )		3362328	0					
ANR	3364118	Condition	IS_SUB_8X4 ( sub_mb_type )	455:33:9896:9918	3362328	0	True				
ANR	3364119	CallExpression	IS_SUB_8X4 ( sub_mb_type )		3362328	0					
ANR	3364120	Callee	IS_SUB_8X4		3362328	0					
ANR	3364121	Identifier	IS_SUB_8X4		3362328	0					
ANR	3364122	ArgumentList	sub_mb_type		3362328	1					
ANR	3364123	Argument	sub_mb_type		3362328	0					
ANR	3364124	Identifier	sub_mb_type		3362328	0					
ANR	3364125	CompoundStatement		453:57:9846:9846	3362328	1					
ANR	3364126	ExpressionStatement	mv_cache [ 1 ] [ 0 ] = mx	457:28:9951:9971	3362328	0	True				
ANR	3364127	AssignmentExpression	mv_cache [ 1 ] [ 0 ] = mx		3362328	0		=			
ANR	3364128	ArrayIndexing	mv_cache [ 1 ] [ 0 ]		3362328	0					
ANR	3364129	ArrayIndexing	mv_cache [ 1 ]		3362328	0					
ANR	3364130	Identifier	mv_cache		3362328	0					
ANR	3364131	PrimaryExpression	1		3362328	1					
ANR	3364132	PrimaryExpression	0		3362328	1					
ANR	3364133	Identifier	mx		3362328	1					
ANR	3364134	ExpressionStatement	mv_cache [ 1 ] [ 1 ] = my	459:28:10002:10022	3362328	1	True				
ANR	3364135	AssignmentExpression	mv_cache [ 1 ] [ 1 ] = my		3362328	0		=			
ANR	3364136	ArrayIndexing	mv_cache [ 1 ] [ 1 ]		3362328	0					
ANR	3364137	ArrayIndexing	mv_cache [ 1 ]		3362328	0					
ANR	3364138	Identifier	mv_cache		3362328	0					
ANR	3364139	PrimaryExpression	1		3362328	1					
ANR	3364140	PrimaryExpression	1		3362328	1					
ANR	3364141	Identifier	my		3362328	1					
ANR	3364142	ElseStatement	else		3362328	0					
ANR	3364143	IfStatement	if ( IS_SUB_4X8 ( sub_mb_type ) )		3362328	0					
ANR	3364144	Condition	IS_SUB_4X8 ( sub_mb_type )	461:33:10058:10080	3362328	0	True				
ANR	3364145	CallExpression	IS_SUB_4X8 ( sub_mb_type )		3362328	0					
ANR	3364146	Callee	IS_SUB_4X8		3362328	0					
ANR	3364147	Identifier	IS_SUB_4X8		3362328	0					
ANR	3364148	ArgumentList	sub_mb_type		3362328	1					
ANR	3364149	Argument	sub_mb_type		3362328	0					
ANR	3364150	Identifier	sub_mb_type		3362328	0					
ANR	3364151	CompoundStatement		459:57:10008:10008	3362328	1					
ANR	3364152	ExpressionStatement	mv_cache [ 8 ] [ 0 ] = mx	463:28:10113:10133	3362328	0	True				
ANR	3364153	AssignmentExpression	mv_cache [ 8 ] [ 0 ] = mx		3362328	0		=			
ANR	3364154	ArrayIndexing	mv_cache [ 8 ] [ 0 ]		3362328	0					
ANR	3364155	ArrayIndexing	mv_cache [ 8 ]		3362328	0					
ANR	3364156	Identifier	mv_cache		3362328	0					
ANR	3364157	PrimaryExpression	8		3362328	1					
ANR	3364158	PrimaryExpression	0		3362328	1					
ANR	3364159	Identifier	mx		3362328	1					
ANR	3364160	ExpressionStatement	mv_cache [ 8 ] [ 1 ] = my	465:28:10164:10184	3362328	1	True				
ANR	3364161	AssignmentExpression	mv_cache [ 8 ] [ 1 ] = my		3362328	0		=			
ANR	3364162	ArrayIndexing	mv_cache [ 8 ] [ 1 ]		3362328	0					
ANR	3364163	ArrayIndexing	mv_cache [ 8 ]		3362328	0					
ANR	3364164	Identifier	mv_cache		3362328	0					
ANR	3364165	PrimaryExpression	8		3362328	1					
ANR	3364166	PrimaryExpression	1		3362328	1					
ANR	3364167	Identifier	my		3362328	1					
ANR	3364168	ExpressionStatement	mv_cache [ 0 ] [ 0 ] = mx	469:24:10238:10258	3362328	8	True				
ANR	3364169	AssignmentExpression	mv_cache [ 0 ] [ 0 ] = mx		3362328	0		=			
ANR	3364170	ArrayIndexing	mv_cache [ 0 ] [ 0 ]		3362328	0					
ANR	3364171	ArrayIndexing	mv_cache [ 0 ]		3362328	0					
ANR	3364172	Identifier	mv_cache		3362328	0					
ANR	3364173	PrimaryExpression	0		3362328	1					
ANR	3364174	PrimaryExpression	0		3362328	1					
ANR	3364175	Identifier	mx		3362328	1					
ANR	3364176	ExpressionStatement	mv_cache [ 0 ] [ 1 ] = my	471:24:10285:10305	3362328	9	True				
ANR	3364177	AssignmentExpression	mv_cache [ 0 ] [ 1 ] = my		3362328	0		=			
ANR	3364178	ArrayIndexing	mv_cache [ 0 ] [ 1 ]		3362328	0					
ANR	3364179	ArrayIndexing	mv_cache [ 0 ]		3362328	0					
ANR	3364180	Identifier	mv_cache		3362328	0					
ANR	3364181	PrimaryExpression	0		3362328	1					
ANR	3364182	PrimaryExpression	1		3362328	1					
ANR	3364183	Identifier	my		3362328	1					
ANR	3364184	ElseStatement	else		3362328	0					
ANR	3364185	CompoundStatement		475:20:10301:10362	3362328	0					
ANR	3364186	IdentifierDeclStatement	uint32_t * p = ( uint32_t * ) & sl -> mv_cache [ list ] [ scan8 [ 4 * i ] ] [ 0 ] ;	477:20:10375:10436	3362328	0	True				
ANR	3364187	IdentifierDecl	* p = ( uint32_t * ) & sl -> mv_cache [ list ] [ scan8 [ 4 * i ] ] [ 0 ]		3362328	0					
ANR	3364188	IdentifierDeclType	uint32_t *		3362328	0					
ANR	3364189	Identifier	p		3362328	1					
ANR	3364190	AssignmentExpression	* p = ( uint32_t * ) & sl -> mv_cache [ list ] [ scan8 [ 4 * i ] ] [ 0 ]		3362328	2		=			
ANR	3364191	Identifier	p		3362328	0					
ANR	3364192	CastExpression	( uint32_t * ) & sl -> mv_cache [ list ] [ scan8 [ 4 * i ] ] [ 0 ]		3362328	1					
ANR	3364193	CastTarget	uint32_t *		3362328	0					
ANR	3364194	UnaryOperationExpression	& sl -> mv_cache [ list ] [ scan8 [ 4 * i ] ] [ 0 ]		3362328	1					
ANR	3364195	UnaryOperator	&		3362328	0					
ANR	3364196	ArrayIndexing	sl -> mv_cache [ list ] [ scan8 [ 4 * i ] ] [ 0 ]		3362328	1					
ANR	3364197	ArrayIndexing	sl -> mv_cache [ list ] [ scan8 [ 4 * i ] ]		3362328	0					
ANR	3364198	ArrayIndexing	sl -> mv_cache [ list ]		3362328	0					
ANR	3364199	PtrMemberAccess	sl -> mv_cache		3362328	0					
ANR	3364200	Identifier	sl		3362328	0					
ANR	3364201	Identifier	mv_cache		3362328	1					
ANR	3364202	Identifier	list		3362328	1					
ANR	3364203	ArrayIndexing	scan8 [ 4 * i ]		3362328	1					
ANR	3364204	Identifier	scan8		3362328	0					
ANR	3364205	MultiplicativeExpression	4 * i		3362328	1		*			
ANR	3364206	PrimaryExpression	4		3362328	0					
ANR	3364207	Identifier	i		3362328	1					
ANR	3364208	PrimaryExpression	0		3362328	1					
ANR	3364209	ExpressionStatement	p [ 0 ] = p [ 1 ] = p [ 8 ] = p [ 9 ] = 0	479:20:10459:10507	3362328	1	True				
ANR	3364210	AssignmentExpression	p [ 0 ] = p [ 1 ] = p [ 8 ] = p [ 9 ] = 0		3362328	0		=			
ANR	3364211	ArrayIndexing	p [ 0 ]		3362328	0					
ANR	3364212	Identifier	p		3362328	0					
ANR	3364213	PrimaryExpression	0		3362328	1					
ANR	3364214	AssignmentExpression	p [ 1 ] = p [ 8 ] = p [ 9 ] = 0		3362328	1		=			
ANR	3364215	ArrayIndexing	p [ 1 ]		3362328	0					
ANR	3364216	Identifier	p		3362328	0					
ANR	3364217	PrimaryExpression	1		3362328	1					
ANR	3364218	AssignmentExpression	p [ 8 ] = p [ 9 ] = 0		3362328	1		=			
ANR	3364219	ArrayIndexing	p [ 8 ]		3362328	0					
ANR	3364220	Identifier	p		3362328	0					
ANR	3364221	PrimaryExpression	8		3362328	1					
ANR	3364222	AssignmentExpression	p [ 9 ] = 0		3362328	1		=			
ANR	3364223	ArrayIndexing	p [ 9 ]		3362328	0					
ANR	3364224	Identifier	p		3362328	0					
ANR	3364225	PrimaryExpression	9		3362328	1					
ANR	3364226	PrimaryExpression	0		3362328	1					
ANR	3364227	ElseStatement	else		3362328	0					
ANR	3364228	IfStatement	if ( IS_DIRECT ( mb_type ) )		3362328	0					
ANR	3364229	Condition	IS_DIRECT ( mb_type )	489:13:10568:10585	3362328	0	True				
ANR	3364230	CallExpression	IS_DIRECT ( mb_type )		3362328	0					
ANR	3364231	Callee	IS_DIRECT		3362328	0					
ANR	3364232	Identifier	IS_DIRECT		3362328	0					
ANR	3364233	ArgumentList	mb_type		3362328	1					
ANR	3364234	Argument	mb_type		3362328	0					
ANR	3364235	Identifier	mb_type		3362328	0					
ANR	3364236	CompoundStatement		487:32:10513:10513	3362328	1					
ANR	3364237	ExpressionStatement	"ff_h264_pred_direct_motion ( h , sl , & mb_type )"	491:8:10598:10641	3362328	0	True				
ANR	3364238	CallExpression	"ff_h264_pred_direct_motion ( h , sl , & mb_type )"		3362328	0					
ANR	3364239	Callee	ff_h264_pred_direct_motion		3362328	0					
ANR	3364240	Identifier	ff_h264_pred_direct_motion		3362328	0					
ANR	3364241	ArgumentList	h		3362328	1					
ANR	3364242	Argument	h		3362328	0					
ANR	3364243	Identifier	h		3362328	0					
ANR	3364244	Argument	sl		3362328	1					
ANR	3364245	Identifier	sl		3362328	0					
ANR	3364246	Argument	& mb_type		3362328	2					
ANR	3364247	UnaryOperationExpression	& mb_type		3362328	0					
ANR	3364248	UnaryOperator	&		3362328	0					
ANR	3364249	Identifier	mb_type		3362328	1					
ANR	3364250	ExpressionStatement	dct8x8_allowed &= h -> ps . sps -> direct_8x8_inference_flag	493:8:10652:10706	3362328	1	True				
ANR	3364251	AssignmentExpression	dct8x8_allowed &= h -> ps . sps -> direct_8x8_inference_flag		3362328	0		&=			
ANR	3364252	Identifier	dct8x8_allowed		3362328	0					
ANR	3364253	PtrMemberAccess	h -> ps . sps -> direct_8x8_inference_flag		3362328	1					
ANR	3364254	MemberAccess	h -> ps . sps		3362328	0					
ANR	3364255	PtrMemberAccess	h -> ps		3362328	0					
ANR	3364256	Identifier	h		3362328	0					
ANR	3364257	Identifier	ps		3362328	1					
ANR	3364258	Identifier	sps		3362328	1					
ANR	3364259	Identifier	direct_8x8_inference_flag		3362328	1					
ANR	3364260	ElseStatement	else		3362328	0					
ANR	3364261	CompoundStatement		495:8:10655:10674	3362328	0					
ANR	3364262	IdentifierDeclStatement	"int list , mx , my , i ;"	497:8:10729:10748	3362328	0	True				
ANR	3364263	IdentifierDecl	list		3362328	0					
ANR	3364264	IdentifierDeclType	int		3362328	0					
ANR	3364265	Identifier	list		3362328	1					
ANR	3364266	IdentifierDecl	mx		3362328	1					
ANR	3364267	IdentifierDeclType	int		3362328	0					
ANR	3364268	Identifier	mx		3362328	1					
ANR	3364269	IdentifierDecl	my		3362328	2					
ANR	3364270	IdentifierDeclType	int		3362328	0					
ANR	3364271	Identifier	my		3362328	1					
ANR	3364272	IdentifierDecl	i		3362328	3					
ANR	3364273	IdentifierDeclType	int		3362328	0					
ANR	3364274	Identifier	i		3362328	1					
ANR	3364275	IfStatement	if ( IS_16X16 ( mb_type ) )		3362328	1					
ANR	3364276	Condition	IS_16X16 ( mb_type )	501:11:10835:10851	3362328	0	True				
ANR	3364277	CallExpression	IS_16X16 ( mb_type )		3362328	0					
ANR	3364278	Callee	IS_16X16		3362328	0					
ANR	3364279	Identifier	IS_16X16		3362328	0					
ANR	3364280	ArgumentList	mb_type		3362328	1					
ANR	3364281	Argument	mb_type		3362328	0					
ANR	3364282	Identifier	mb_type		3362328	0					
ANR	3364283	CompoundStatement		499:29:10779:10779	3362328	1					
ANR	3364284	ForStatement	for ( list = 0 ; list < sl -> list_count ; list ++ )		3362328	0					
ANR	3364285	ForInit	list = 0 ;	503:17:10873:10881	3362328	0	True				
ANR	3364286	AssignmentExpression	list = 0		3362328	0		=			
ANR	3364287	Identifier	list		3362328	0					
ANR	3364288	PrimaryExpression	0		3362328	1					
ANR	3364289	Condition	list < sl -> list_count	503:27:10883:10903	3362328	1	True				
ANR	3364290	RelationalExpression	list < sl -> list_count		3362328	0		<			
ANR	3364291	Identifier	list		3362328	0					
ANR	3364292	PtrMemberAccess	sl -> list_count		3362328	1					
ANR	3364293	Identifier	sl		3362328	0					
ANR	3364294	Identifier	list_count		3362328	1					
ANR	3364295	PostIncDecOperationExpression	list ++	503:50:10906:10911	3362328	2	True				
ANR	3364296	Identifier	list		3362328	0					
ANR	3364297	IncDec	++		3362328	1					
ANR	3364298	CompoundStatement		503:20:10863:10879	3362328	3					
ANR	3364299	IdentifierDeclStatement	unsigned int val ;	505:20:10937:10953	3362328	0	True				
ANR	3364300	IdentifierDecl	val		3362328	0					
ANR	3364301	IdentifierDeclType	unsigned int		3362328	0					
ANR	3364302	Identifier	val		3362328	1					
ANR	3364303	IfStatement	"if ( IS_DIR ( mb_type , 0 , list ) )"		3362328	1					
ANR	3364304	Condition	"IS_DIR ( mb_type , 0 , list )"	507:23:10979:11002	3362328	0	True				
ANR	3364305	CallExpression	"IS_DIR ( mb_type , 0 , list )"		3362328	0					
ANR	3364306	Callee	IS_DIR		3362328	0					
ANR	3364307	Identifier	IS_DIR		3362328	0					
ANR	3364308	ArgumentList	mb_type		3362328	1					
ANR	3364309	Argument	mb_type		3362328	0					
ANR	3364310	Identifier	mb_type		3362328	0					
ANR	3364311	Argument	0		3362328	1					
ANR	3364312	PrimaryExpression	0		3362328	0					
ANR	3364313	Argument	list		3362328	2					
ANR	3364314	Identifier	list		3362328	0					
ANR	3364315	CompoundStatement		507:24:10957:11006	3362328	1					
ANR	3364316	IdentifierDeclStatement	unsigned rc = sl -> ref_count [ list ] << MB_MBAFF ( sl ) ;	509:24:11031:11080	3362328	0	True				
ANR	3364317	IdentifierDecl	rc = sl -> ref_count [ list ] << MB_MBAFF ( sl )		3362328	0					
ANR	3364318	IdentifierDeclType	unsigned		3362328	0					
ANR	3364319	Identifier	rc		3362328	1					
ANR	3364320	AssignmentExpression	rc = sl -> ref_count [ list ] << MB_MBAFF ( sl )		3362328	2		=			
ANR	3364321	Identifier	rc		3362328	0					
ANR	3364322	ShiftExpression	sl -> ref_count [ list ] << MB_MBAFF ( sl )		3362328	1		<<			
ANR	3364323	ArrayIndexing	sl -> ref_count [ list ]		3362328	0					
ANR	3364324	PtrMemberAccess	sl -> ref_count		3362328	0					
ANR	3364325	Identifier	sl		3362328	0					
ANR	3364326	Identifier	ref_count		3362328	1					
ANR	3364327	Identifier	list		3362328	1					
ANR	3364328	CallExpression	MB_MBAFF ( sl )		3362328	1					
ANR	3364329	Callee	MB_MBAFF		3362328	0					
ANR	3364330	Identifier	MB_MBAFF		3362328	0					
ANR	3364331	ArgumentList	sl		3362328	1					
ANR	3364332	Argument	sl		3362328	0					
ANR	3364333	Identifier	sl		3362328	0					
ANR	3364334	IfStatement	if ( rc == 1 )		3362328	1					
ANR	3364335	Condition	rc == 1	511:28:11111:11117	3362328	0	True				
ANR	3364336	EqualityExpression	rc == 1		3362328	0		==			
ANR	3364337	Identifier	rc		3362328	0					
ANR	3364338	PrimaryExpression	1		3362328	1					
ANR	3364339	CompoundStatement		509:37:11046:11046	3362328	1					
ANR	3364340	ExpressionStatement	val = 0	513:28:11151:11157	3362328	0	True				
ANR	3364341	AssignmentExpression	val = 0		3362328	0		=			
ANR	3364342	Identifier	val		3362328	0					
ANR	3364343	PrimaryExpression	0		3362328	1					
ANR	3364344	ElseStatement	else		3362328	0					
ANR	3364345	IfStatement	if ( rc == 2 )		3362328	0					
ANR	3364346	Condition	rc == 2	515:35:11195:11201	3362328	0	True				
ANR	3364347	EqualityExpression	rc == 2		3362328	0		==			
ANR	3364348	Identifier	rc		3362328	0					
ANR	3364349	PrimaryExpression	2		3362328	1					
ANR	3364350	CompoundStatement		513:44:11130:11130	3362328	1					
ANR	3364351	ExpressionStatement	val = get_bits1 ( & sl -> gb ) ^ 1	517:28:11235:11260	3362328	0	True				
ANR	3364352	AssignmentExpression	val = get_bits1 ( & sl -> gb ) ^ 1		3362328	0		=			
ANR	3364353	Identifier	val		3362328	0					
ANR	3364354	ExclusiveOrExpression	get_bits1 ( & sl -> gb ) ^ 1		3362328	1		^			
ANR	3364355	CallExpression	get_bits1 ( & sl -> gb )		3362328	0					
ANR	3364356	Callee	get_bits1		3362328	0					
ANR	3364357	Identifier	get_bits1		3362328	0					
ANR	3364358	ArgumentList	& sl -> gb		3362328	1					
ANR	3364359	Argument	& sl -> gb		3362328	0					
ANR	3364360	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3364361	UnaryOperator	&		3362328	0					
ANR	3364362	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3364363	Identifier	sl		3362328	0					
ANR	3364364	Identifier	gb		3362328	1					
ANR	3364365	PrimaryExpression	1		3362328	1					
ANR	3364366	ElseStatement	else		3362328	0					
ANR	3364367	CompoundStatement		517:29:11218:11218	3362328	0					
ANR	3364368	ExpressionStatement	val = get_ue_golomb_31 ( & sl -> gb )	521:28:11323:11353	3362328	0	True				
ANR	3364369	AssignmentExpression	val = get_ue_golomb_31 ( & sl -> gb )		3362328	0		=			
ANR	3364370	Identifier	val		3362328	0					
ANR	3364371	CallExpression	get_ue_golomb_31 ( & sl -> gb )		3362328	1					
ANR	3364372	Callee	get_ue_golomb_31		3362328	0					
ANR	3364373	Identifier	get_ue_golomb_31		3362328	0					
ANR	3364374	ArgumentList	& sl -> gb		3362328	1					
ANR	3364375	Argument	& sl -> gb		3362328	0					
ANR	3364376	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3364377	UnaryOperator	&		3362328	0					
ANR	3364378	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3364379	Identifier	sl		3362328	0					
ANR	3364380	Identifier	gb		3362328	1					
ANR	3364381	IfStatement	if ( val >= rc )		3362328	1					
ANR	3364382	Condition	val >= rc	523:32:11388:11396	3362328	0	True				
ANR	3364383	RelationalExpression	val >= rc		3362328	0		>=			
ANR	3364384	Identifier	val		3362328	0					
ANR	3364385	Identifier	rc		3362328	1					
ANR	3364386	CompoundStatement		521:43:11325:11325	3362328	1					
ANR	3364387	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , val )"	525:32:11434:11490	3362328	0	True				
ANR	3364388	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , val )"		3362328	0					
ANR	3364389	Callee	av_log		3362328	0					
ANR	3364390	Identifier	av_log		3362328	0					
ANR	3364391	ArgumentList	h -> avctx		3362328	1					
ANR	3364392	Argument	h -> avctx		3362328	0					
ANR	3364393	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3364394	Identifier	h		3362328	0					
ANR	3364395	Identifier	avctx		3362328	1					
ANR	3364396	Argument	AV_LOG_ERROR		3362328	1					
ANR	3364397	Identifier	AV_LOG_ERROR		3362328	0					
ANR	3364398	Argument	"""ref %u overflow\\n"""		3362328	2					
ANR	3364399	PrimaryExpression	"""ref %u overflow\\n"""		3362328	0					
ANR	3364400	Argument	val		3362328	3					
ANR	3364401	Identifier	val		3362328	0					
ANR	3364402	ReturnStatement	return - 1 ;	527:32:11525:11534	3362328	1	True				
ANR	3364403	UnaryOperationExpression	- 1		3362328	0					
ANR	3364404	UnaryOperator	-		3362328	0					
ANR	3364405	PrimaryExpression	1		3362328	1					
ANR	3364406	ExpressionStatement	"fill_rectangle ( & sl -> ref_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , val , 1 )"	533:20:11615:11680	3362328	2	True				
ANR	3364407	CallExpression	"fill_rectangle ( & sl -> ref_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , val , 1 )"		3362328	0					
ANR	3364408	Callee	fill_rectangle		3362328	0					
ANR	3364409	Identifier	fill_rectangle		3362328	0					
ANR	3364410	ArgumentList	& sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		3362328	1					
ANR	3364411	Argument	& sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		3362328	0					
ANR	3364412	UnaryOperationExpression	& sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		3362328	0					
ANR	3364413	UnaryOperator	&		3362328	0					
ANR	3364414	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		3362328	1					
ANR	3364415	ArrayIndexing	sl -> ref_cache [ list ]		3362328	0					
ANR	3364416	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3364417	Identifier	sl		3362328	0					
ANR	3364418	Identifier	ref_cache		3362328	1					
ANR	3364419	Identifier	list		3362328	1					
ANR	3364420	ArrayIndexing	scan8 [ 0 ]		3362328	1					
ANR	3364421	Identifier	scan8		3362328	0					
ANR	3364422	PrimaryExpression	0		3362328	1					
ANR	3364423	Argument	4		3362328	1					
ANR	3364424	PrimaryExpression	4		3362328	0					
ANR	3364425	Argument	4		3362328	2					
ANR	3364426	PrimaryExpression	4		3362328	0					
ANR	3364427	Argument	8		3362328	3					
ANR	3364428	PrimaryExpression	8		3362328	0					
ANR	3364429	Argument	val		3362328	4					
ANR	3364430	Identifier	val		3362328	0					
ANR	3364431	Argument	1		3362328	5					
ANR	3364432	PrimaryExpression	1		3362328	0					
ANR	3364433	ForStatement	for ( list = 0 ; list < sl -> list_count ; list ++ )		3362328	1					
ANR	3364434	ForInit	list = 0 ;	539:17:11738:11746	3362328	0	True				
ANR	3364435	AssignmentExpression	list = 0		3362328	0		=			
ANR	3364436	Identifier	list		3362328	0					
ANR	3364437	PrimaryExpression	0		3362328	1					
ANR	3364438	Condition	list < sl -> list_count	539:27:11748:11768	3362328	1	True				
ANR	3364439	RelationalExpression	list < sl -> list_count		3362328	0		<			
ANR	3364440	Identifier	list		3362328	0					
ANR	3364441	PtrMemberAccess	sl -> list_count		3362328	1					
ANR	3364442	Identifier	sl		3362328	0					
ANR	3364443	Identifier	list_count		3362328	1					
ANR	3364444	PostIncDecOperationExpression	list ++	539:50:11771:11776	3362328	2	True				
ANR	3364445	Identifier	list		3362328	0					
ANR	3364446	IncDec	++		3362328	1					
ANR	3364447	CompoundStatement		537:58:11705:11705	3362328	3					
ANR	3364448	IfStatement	"if ( IS_DIR ( mb_type , 0 , list ) )"		3362328	0					
ANR	3364449	Condition	"IS_DIR ( mb_type , 0 , list )"	541:19:11801:11824	3362328	0	True				
ANR	3364450	CallExpression	"IS_DIR ( mb_type , 0 , list )"		3362328	0					
ANR	3364451	Callee	IS_DIR		3362328	0					
ANR	3364452	Identifier	IS_DIR		3362328	0					
ANR	3364453	ArgumentList	mb_type		3362328	1					
ANR	3364454	Argument	mb_type		3362328	0					
ANR	3364455	Identifier	mb_type		3362328	0					
ANR	3364456	Argument	0		3362328	1					
ANR	3364457	PrimaryExpression	0		3362328	0					
ANR	3364458	Argument	list		3362328	2					
ANR	3364459	Identifier	list		3362328	0					
ANR	3364460	CompoundStatement		539:44:11752:11752	3362328	1					
ANR	3364461	ExpressionStatement	"pred_motion ( h , sl , 0 , 4 , list , sl -> ref_cache [ list ] [ scan8 [ 0 ] ] , & mx , & my )"	543:20:11849:11922	3362328	0	True				
ANR	3364462	CallExpression	"pred_motion ( h , sl , 0 , 4 , list , sl -> ref_cache [ list ] [ scan8 [ 0 ] ] , & mx , & my )"		3362328	0					
ANR	3364463	Callee	pred_motion		3362328	0					
ANR	3364464	Identifier	pred_motion		3362328	0					
ANR	3364465	ArgumentList	h		3362328	1					
ANR	3364466	Argument	h		3362328	0					
ANR	3364467	Identifier	h		3362328	0					
ANR	3364468	Argument	sl		3362328	1					
ANR	3364469	Identifier	sl		3362328	0					
ANR	3364470	Argument	0		3362328	2					
ANR	3364471	PrimaryExpression	0		3362328	0					
ANR	3364472	Argument	4		3362328	3					
ANR	3364473	PrimaryExpression	4		3362328	0					
ANR	3364474	Argument	list		3362328	4					
ANR	3364475	Identifier	list		3362328	0					
ANR	3364476	Argument	sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		3362328	5					
ANR	3364477	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		3362328	0					
ANR	3364478	ArrayIndexing	sl -> ref_cache [ list ]		3362328	0					
ANR	3364479	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3364480	Identifier	sl		3362328	0					
ANR	3364481	Identifier	ref_cache		3362328	1					
ANR	3364482	Identifier	list		3362328	1					
ANR	3364483	ArrayIndexing	scan8 [ 0 ]		3362328	1					
ANR	3364484	Identifier	scan8		3362328	0					
ANR	3364485	PrimaryExpression	0		3362328	1					
ANR	3364486	Argument	& mx		3362328	6					
ANR	3364487	UnaryOperationExpression	& mx		3362328	0					
ANR	3364488	UnaryOperator	&		3362328	0					
ANR	3364489	Identifier	mx		3362328	1					
ANR	3364490	Argument	& my		3362328	7					
ANR	3364491	UnaryOperationExpression	& my		3362328	0					
ANR	3364492	UnaryOperator	&		3362328	0					
ANR	3364493	Identifier	my		3362328	1					
ANR	3364494	ExpressionStatement	mx += get_se_golomb ( & sl -> gb )	545:20:11945:11973	3362328	1	True				
ANR	3364495	AssignmentExpression	mx += get_se_golomb ( & sl -> gb )		3362328	0		+=			
ANR	3364496	Identifier	mx		3362328	0					
ANR	3364497	CallExpression	get_se_golomb ( & sl -> gb )		3362328	1					
ANR	3364498	Callee	get_se_golomb		3362328	0					
ANR	3364499	Identifier	get_se_golomb		3362328	0					
ANR	3364500	ArgumentList	& sl -> gb		3362328	1					
ANR	3364501	Argument	& sl -> gb		3362328	0					
ANR	3364502	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3364503	UnaryOperator	&		3362328	0					
ANR	3364504	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3364505	Identifier	sl		3362328	0					
ANR	3364506	Identifier	gb		3362328	1					
ANR	3364507	ExpressionStatement	my += get_se_golomb ( & sl -> gb )	547:20:11996:12024	3362328	2	True				
ANR	3364508	AssignmentExpression	my += get_se_golomb ( & sl -> gb )		3362328	0		+=			
ANR	3364509	Identifier	my		3362328	0					
ANR	3364510	CallExpression	get_se_golomb ( & sl -> gb )		3362328	1					
ANR	3364511	Callee	get_se_golomb		3362328	0					
ANR	3364512	Identifier	get_se_golomb		3362328	0					
ANR	3364513	ArgumentList	& sl -> gb		3362328	1					
ANR	3364514	Argument	& sl -> gb		3362328	0					
ANR	3364515	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3364516	UnaryOperator	&		3362328	0					
ANR	3364517	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3364518	Identifier	sl		3362328	0					
ANR	3364519	Identifier	gb		3362328	1					
ANR	3364520	ExpressionStatement	"ff_tlog ( h -> avctx , ""final mv:%d %d\\n"" , mx , my )"	549:20:12047:12092	3362328	3	True				
ANR	3364521	CallExpression	"ff_tlog ( h -> avctx , ""final mv:%d %d\\n"" , mx , my )"		3362328	0					
ANR	3364522	Callee	ff_tlog		3362328	0					
ANR	3364523	Identifier	ff_tlog		3362328	0					
ANR	3364524	ArgumentList	h -> avctx		3362328	1					
ANR	3364525	Argument	h -> avctx		3362328	0					
ANR	3364526	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3364527	Identifier	h		3362328	0					
ANR	3364528	Identifier	avctx		3362328	1					
ANR	3364529	Argument	"""final mv:%d %d\\n"""		3362328	1					
ANR	3364530	PrimaryExpression	"""final mv:%d %d\\n"""		3362328	0					
ANR	3364531	Argument	mx		3362328	2					
ANR	3364532	Identifier	mx		3362328	0					
ANR	3364533	Argument	my		3362328	3					
ANR	3364534	Identifier	my		3362328	0					
ANR	3364535	ExpressionStatement	"fill_rectangle ( sl -> mv_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , pack16to32 ( mx , my ) , 4 )"	553:20:12117:12194	3362328	4	True				
ANR	3364536	CallExpression	"fill_rectangle ( sl -> mv_cache [ list ] [ scan8 [ 0 ] ] , 4 , 4 , 8 , pack16to32 ( mx , my ) , 4 )"		3362328	0					
ANR	3364537	Callee	fill_rectangle		3362328	0					
ANR	3364538	Identifier	fill_rectangle		3362328	0					
ANR	3364539	ArgumentList	sl -> mv_cache [ list ] [ scan8 [ 0 ] ]		3362328	1					
ANR	3364540	Argument	sl -> mv_cache [ list ] [ scan8 [ 0 ] ]		3362328	0					
ANR	3364541	ArrayIndexing	sl -> mv_cache [ list ] [ scan8 [ 0 ] ]		3362328	0					
ANR	3364542	ArrayIndexing	sl -> mv_cache [ list ]		3362328	0					
ANR	3364543	PtrMemberAccess	sl -> mv_cache		3362328	0					
ANR	3364544	Identifier	sl		3362328	0					
ANR	3364545	Identifier	mv_cache		3362328	1					
ANR	3364546	Identifier	list		3362328	1					
ANR	3364547	ArrayIndexing	scan8 [ 0 ]		3362328	1					
ANR	3364548	Identifier	scan8		3362328	0					
ANR	3364549	PrimaryExpression	0		3362328	1					
ANR	3364550	Argument	4		3362328	1					
ANR	3364551	PrimaryExpression	4		3362328	0					
ANR	3364552	Argument	4		3362328	2					
ANR	3364553	PrimaryExpression	4		3362328	0					
ANR	3364554	Argument	8		3362328	3					
ANR	3364555	PrimaryExpression	8		3362328	0					
ANR	3364556	Argument	"pack16to32 ( mx , my )"		3362328	4					
ANR	3364557	CallExpression	"pack16to32 ( mx , my )"		3362328	0					
ANR	3364558	Callee	pack16to32		3362328	0					
ANR	3364559	Identifier	pack16to32		3362328	0					
ANR	3364560	ArgumentList	mx		3362328	1					
ANR	3364561	Argument	mx		3362328	0					
ANR	3364562	Identifier	mx		3362328	0					
ANR	3364563	Argument	my		3362328	1					
ANR	3364564	Identifier	my		3362328	0					
ANR	3364565	Argument	4		3362328	5					
ANR	3364566	PrimaryExpression	4		3362328	0					
ANR	3364567	ElseStatement	else		3362328	0					
ANR	3364568	IfStatement	if ( IS_16X8 ( mb_type ) )		3362328	0					
ANR	3364569	Condition	IS_16X8 ( mb_type )	561:16:12258:12273	3362328	0	True				
ANR	3364570	CallExpression	IS_16X8 ( mb_type )		3362328	0					
ANR	3364571	Callee	IS_16X8		3362328	0					
ANR	3364572	Identifier	IS_16X8		3362328	0					
ANR	3364573	ArgumentList	mb_type		3362328	1					
ANR	3364574	Argument	mb_type		3362328	0					
ANR	3364575	Identifier	mb_type		3362328	0					
ANR	3364576	CompoundStatement		559:33:12201:12201	3362328	1					
ANR	3364577	ForStatement	for ( list = 0 ; list < sl -> list_count ; list ++ )		3362328	0					
ANR	3364578	ForInit	list = 0 ;	563:17:12295:12303	3362328	0	True				
ANR	3364579	AssignmentExpression	list = 0		3362328	0		=			
ANR	3364580	Identifier	list		3362328	0					
ANR	3364581	PrimaryExpression	0		3362328	1					
ANR	3364582	Condition	list < sl -> list_count	563:27:12305:12325	3362328	1	True				
ANR	3364583	RelationalExpression	list < sl -> list_count		3362328	0		<			
ANR	3364584	Identifier	list		3362328	0					
ANR	3364585	PtrMemberAccess	sl -> list_count		3362328	1					
ANR	3364586	Identifier	sl		3362328	0					
ANR	3364587	Identifier	list_count		3362328	1					
ANR	3364588	PostIncDecOperationExpression	list ++	563:50:12328:12333	3362328	2	True				
ANR	3364589	Identifier	list		3362328	0					
ANR	3364590	IncDec	++		3362328	1					
ANR	3364591	CompoundStatement		561:58:12262:12262	3362328	3					
ANR	3364592	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3362328	0					
ANR	3364593	ForInit	i = 0 ;	565:24:12363:12366	3362328	0	True				
ANR	3364594	AssignmentExpression	i = 0		3362328	0		=			
ANR	3364595	Identifier	i		3362328	0					
ANR	3364596	PrimaryExpression	0		3362328	1					
ANR	3364597	Condition	i < 2	565:29:12368:12370	3362328	1	True				
ANR	3364598	RelationalExpression	i < 2		3362328	0		<			
ANR	3364599	Identifier	i		3362328	0					
ANR	3364600	PrimaryExpression	2		3362328	1					
ANR	3364601	PostIncDecOperationExpression	i ++	565:34:12373:12375	3362328	2	True				
ANR	3364602	Identifier	i		3362328	0					
ANR	3364603	IncDec	++		3362328	1					
ANR	3364604	CompoundStatement		565:24:12330:12346	3362328	3					
ANR	3364605	IdentifierDeclStatement	unsigned int val ;	567:24:12404:12420	3362328	0	True				
ANR	3364606	IdentifierDecl	val		3362328	0					
ANR	3364607	IdentifierDeclType	unsigned int		3362328	0					
ANR	3364608	Identifier	val		3362328	1					
ANR	3364609	IfStatement	"if ( IS_DIR ( mb_type , i , list ) )"		3362328	1					
ANR	3364610	Condition	"IS_DIR ( mb_type , i , list )"	569:27:12450:12473	3362328	0	True				
ANR	3364611	CallExpression	"IS_DIR ( mb_type , i , list )"		3362328	0					
ANR	3364612	Callee	IS_DIR		3362328	0					
ANR	3364613	Identifier	IS_DIR		3362328	0					
ANR	3364614	ArgumentList	mb_type		3362328	1					
ANR	3364615	Argument	mb_type		3362328	0					
ANR	3364616	Identifier	mb_type		3362328	0					
ANR	3364617	Argument	i		3362328	1					
ANR	3364618	Identifier	i		3362328	0					
ANR	3364619	Argument	list		3362328	2					
ANR	3364620	Identifier	list		3362328	0					
ANR	3364621	CompoundStatement		569:28:12432:12481	3362328	1					
ANR	3364622	IdentifierDeclStatement	unsigned rc = sl -> ref_count [ list ] << MB_MBAFF ( sl ) ;	571:28:12506:12555	3362328	0	True				
ANR	3364623	IdentifierDecl	rc = sl -> ref_count [ list ] << MB_MBAFF ( sl )		3362328	0					
ANR	3364624	IdentifierDeclType	unsigned		3362328	0					
ANR	3364625	Identifier	rc		3362328	1					
ANR	3364626	AssignmentExpression	rc = sl -> ref_count [ list ] << MB_MBAFF ( sl )		3362328	2		=			
ANR	3364627	Identifier	rc		3362328	0					
ANR	3364628	ShiftExpression	sl -> ref_count [ list ] << MB_MBAFF ( sl )		3362328	1		<<			
ANR	3364629	ArrayIndexing	sl -> ref_count [ list ]		3362328	0					
ANR	3364630	PtrMemberAccess	sl -> ref_count		3362328	0					
ANR	3364631	Identifier	sl		3362328	0					
ANR	3364632	Identifier	ref_count		3362328	1					
ANR	3364633	Identifier	list		3362328	1					
ANR	3364634	CallExpression	MB_MBAFF ( sl )		3362328	1					
ANR	3364635	Callee	MB_MBAFF		3362328	0					
ANR	3364636	Identifier	MB_MBAFF		3362328	0					
ANR	3364637	ArgumentList	sl		3362328	1					
ANR	3364638	Argument	sl		3362328	0					
ANR	3364639	Identifier	sl		3362328	0					
ANR	3364640	IfStatement	if ( rc == 1 )		3362328	1					
ANR	3364641	Condition	rc == 1	573:32:12590:12596	3362328	0	True				
ANR	3364642	EqualityExpression	rc == 1		3362328	0		==			
ANR	3364643	Identifier	rc		3362328	0					
ANR	3364644	PrimaryExpression	1		3362328	1					
ANR	3364645	CompoundStatement		571:41:12525:12525	3362328	1					
ANR	3364646	ExpressionStatement	val = 0	575:32:12634:12640	3362328	0	True				
ANR	3364647	AssignmentExpression	val = 0		3362328	0		=			
ANR	3364648	Identifier	val		3362328	0					
ANR	3364649	PrimaryExpression	0		3362328	1					
ANR	3364650	ElseStatement	else		3362328	0					
ANR	3364651	IfStatement	if ( rc == 2 )		3362328	0					
ANR	3364652	Condition	rc == 2	577:39:12682:12688	3362328	0	True				
ANR	3364653	EqualityExpression	rc == 2		3362328	0		==			
ANR	3364654	Identifier	rc		3362328	0					
ANR	3364655	PrimaryExpression	2		3362328	1					
ANR	3364656	CompoundStatement		575:48:12617:12617	3362328	1					
ANR	3364657	ExpressionStatement	val = get_bits1 ( & sl -> gb ) ^ 1	579:32:12726:12751	3362328	0	True				
ANR	3364658	AssignmentExpression	val = get_bits1 ( & sl -> gb ) ^ 1		3362328	0		=			
ANR	3364659	Identifier	val		3362328	0					
ANR	3364660	ExclusiveOrExpression	get_bits1 ( & sl -> gb ) ^ 1		3362328	1		^			
ANR	3364661	CallExpression	get_bits1 ( & sl -> gb )		3362328	0					
ANR	3364662	Callee	get_bits1		3362328	0					
ANR	3364663	Identifier	get_bits1		3362328	0					
ANR	3364664	ArgumentList	& sl -> gb		3362328	1					
ANR	3364665	Argument	& sl -> gb		3362328	0					
ANR	3364666	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3364667	UnaryOperator	&		3362328	0					
ANR	3364668	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3364669	Identifier	sl		3362328	0					
ANR	3364670	Identifier	gb		3362328	1					
ANR	3364671	PrimaryExpression	1		3362328	1					
ANR	3364672	ElseStatement	else		3362328	0					
ANR	3364673	CompoundStatement		579:33:12713:12713	3362328	0					
ANR	3364674	ExpressionStatement	val = get_ue_golomb_31 ( & sl -> gb )	583:32:12822:12852	3362328	0	True				
ANR	3364675	AssignmentExpression	val = get_ue_golomb_31 ( & sl -> gb )		3362328	0		=			
ANR	3364676	Identifier	val		3362328	0					
ANR	3364677	CallExpression	get_ue_golomb_31 ( & sl -> gb )		3362328	1					
ANR	3364678	Callee	get_ue_golomb_31		3362328	0					
ANR	3364679	Identifier	get_ue_golomb_31		3362328	0					
ANR	3364680	ArgumentList	& sl -> gb		3362328	1					
ANR	3364681	Argument	& sl -> gb		3362328	0					
ANR	3364682	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3364683	UnaryOperator	&		3362328	0					
ANR	3364684	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3364685	Identifier	sl		3362328	0					
ANR	3364686	Identifier	gb		3362328	1					
ANR	3364687	IfStatement	if ( val >= rc )		3362328	1					
ANR	3364688	Condition	val >= rc	585:36:12891:12899	3362328	0	True				
ANR	3364689	RelationalExpression	val >= rc		3362328	0		>=			
ANR	3364690	Identifier	val		3362328	0					
ANR	3364691	Identifier	rc		3362328	1					
ANR	3364692	CompoundStatement		583:47:12828:12828	3362328	1					
ANR	3364693	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , val )"	587:36:12941:12997	3362328	0	True				
ANR	3364694	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , val )"		3362328	0					
ANR	3364695	Callee	av_log		3362328	0					
ANR	3364696	Identifier	av_log		3362328	0					
ANR	3364697	ArgumentList	h -> avctx		3362328	1					
ANR	3364698	Argument	h -> avctx		3362328	0					
ANR	3364699	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3364700	Identifier	h		3362328	0					
ANR	3364701	Identifier	avctx		3362328	1					
ANR	3364702	Argument	AV_LOG_ERROR		3362328	1					
ANR	3364703	Identifier	AV_LOG_ERROR		3362328	0					
ANR	3364704	Argument	"""ref %u overflow\\n"""		3362328	2					
ANR	3364705	PrimaryExpression	"""ref %u overflow\\n"""		3362328	0					
ANR	3364706	Argument	val		3362328	3					
ANR	3364707	Identifier	val		3362328	0					
ANR	3364708	ReturnStatement	return - 1 ;	589:36:13036:13045	3362328	1	True				
ANR	3364709	UnaryOperationExpression	- 1		3362328	0					
ANR	3364710	UnaryOperator	-		3362328	0					
ANR	3364711	PrimaryExpression	1		3362328	1					
ANR	3364712	ElseStatement	else		3362328	0					
ANR	3364713	ExpressionStatement	val = LIST_NOT_USED & 0xFF	597:28:13173:13196	3362328	0	True				
ANR	3364714	AssignmentExpression	val = LIST_NOT_USED & 0xFF		3362328	0		=			
ANR	3364715	Identifier	val		3362328	0					
ANR	3364716	BitAndExpression	LIST_NOT_USED & 0xFF		3362328	1		&			
ANR	3364717	Identifier	LIST_NOT_USED		3362328	0					
ANR	3364718	PrimaryExpression	0xFF		3362328	1					
ANR	3364719	ExpressionStatement	"fill_rectangle ( & sl -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , val , 1 )"	599:24:13223:13295	3362328	2	True				
ANR	3364720	CallExpression	"fill_rectangle ( & sl -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , val , 1 )"		3362328	0					
ANR	3364721	Callee	fill_rectangle		3362328	0					
ANR	3364722	Identifier	fill_rectangle		3362328	0					
ANR	3364723	ArgumentList	& sl -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3362328	1					
ANR	3364724	Argument	& sl -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3362328	0					
ANR	3364725	UnaryOperationExpression	& sl -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3362328	0					
ANR	3364726	UnaryOperator	&		3362328	0					
ANR	3364727	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3362328	1					
ANR	3364728	ArrayIndexing	sl -> ref_cache [ list ]		3362328	0					
ANR	3364729	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3364730	Identifier	sl		3362328	0					
ANR	3364731	Identifier	ref_cache		3362328	1					
ANR	3364732	Identifier	list		3362328	1					
ANR	3364733	AdditiveExpression	scan8 [ 0 ] + 16 * i		3362328	1		+			
ANR	3364734	ArrayIndexing	scan8 [ 0 ]		3362328	0					
ANR	3364735	Identifier	scan8		3362328	0					
ANR	3364736	PrimaryExpression	0		3362328	1					
ANR	3364737	MultiplicativeExpression	16 * i		3362328	1		*			
ANR	3364738	PrimaryExpression	16		3362328	0					
ANR	3364739	Identifier	i		3362328	1					
ANR	3364740	Argument	4		3362328	1					
ANR	3364741	PrimaryExpression	4		3362328	0					
ANR	3364742	Argument	2		3362328	2					
ANR	3364743	PrimaryExpression	2		3362328	0					
ANR	3364744	Argument	8		3362328	3					
ANR	3364745	PrimaryExpression	8		3362328	0					
ANR	3364746	Argument	val		3362328	4					
ANR	3364747	Identifier	val		3362328	0					
ANR	3364748	Argument	1		3362328	5					
ANR	3364749	PrimaryExpression	1		3362328	0					
ANR	3364750	ForStatement	for ( list = 0 ; list < sl -> list_count ; list ++ )		3362328	1					
ANR	3364751	ForInit	list = 0 ;	605:17:13353:13361	3362328	0	True				
ANR	3364752	AssignmentExpression	list = 0		3362328	0		=			
ANR	3364753	Identifier	list		3362328	0					
ANR	3364754	PrimaryExpression	0		3362328	1					
ANR	3364755	Condition	list < sl -> list_count	605:27:13363:13383	3362328	1	True				
ANR	3364756	RelationalExpression	list < sl -> list_count		3362328	0		<			
ANR	3364757	Identifier	list		3362328	0					
ANR	3364758	PtrMemberAccess	sl -> list_count		3362328	1					
ANR	3364759	Identifier	sl		3362328	0					
ANR	3364760	Identifier	list_count		3362328	1					
ANR	3364761	PostIncDecOperationExpression	list ++	605:50:13386:13391	3362328	2	True				
ANR	3364762	Identifier	list		3362328	0					
ANR	3364763	IncDec	++		3362328	1					
ANR	3364764	CompoundStatement		603:58:13320:13320	3362328	3					
ANR	3364765	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3362328	0					
ANR	3364766	ForInit	i = 0 ;	607:20:13417:13420	3362328	0	True				
ANR	3364767	AssignmentExpression	i = 0		3362328	0		=			
ANR	3364768	Identifier	i		3362328	0					
ANR	3364769	PrimaryExpression	0		3362328	1					
ANR	3364770	Condition	i < 2	607:25:13422:13424	3362328	1	True				
ANR	3364771	RelationalExpression	i < 2		3362328	0		<			
ANR	3364772	Identifier	i		3362328	0					
ANR	3364773	PrimaryExpression	2		3362328	1					
ANR	3364774	PostIncDecOperationExpression	i ++	607:30:13427:13429	3362328	2	True				
ANR	3364775	Identifier	i		3362328	0					
ANR	3364776	IncDec	++		3362328	1					
ANR	3364777	CompoundStatement		607:20:13380:13396	3362328	3					
ANR	3364778	IdentifierDeclStatement	unsigned int val ;	609:20:13454:13470	3362328	0	True				
ANR	3364779	IdentifierDecl	val		3362328	0					
ANR	3364780	IdentifierDeclType	unsigned int		3362328	0					
ANR	3364781	Identifier	val		3362328	1					
ANR	3364782	IfStatement	"if ( IS_DIR ( mb_type , i , list ) )"		3362328	1					
ANR	3364783	Condition	"IS_DIR ( mb_type , i , list )"	611:23:13496:13519	3362328	0	True				
ANR	3364784	CallExpression	"IS_DIR ( mb_type , i , list )"		3362328	0					
ANR	3364785	Callee	IS_DIR		3362328	0					
ANR	3364786	Identifier	IS_DIR		3362328	0					
ANR	3364787	ArgumentList	mb_type		3362328	1					
ANR	3364788	Argument	mb_type		3362328	0					
ANR	3364789	Identifier	mb_type		3362328	0					
ANR	3364790	Argument	i		3362328	1					
ANR	3364791	Identifier	i		3362328	0					
ANR	3364792	Argument	list		3362328	2					
ANR	3364793	Identifier	list		3362328	0					
ANR	3364794	CompoundStatement		609:48:13447:13447	3362328	1					
ANR	3364795	ExpressionStatement	"pred_16x8_motion ( h , sl , 8 * i , list , sl -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , & mx , & my )"	613:24:13548:13630	3362328	0	True				
ANR	3364796	CallExpression	"pred_16x8_motion ( h , sl , 8 * i , list , sl -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , & mx , & my )"		3362328	0					
ANR	3364797	Callee	pred_16x8_motion		3362328	0					
ANR	3364798	Identifier	pred_16x8_motion		3362328	0					
ANR	3364799	ArgumentList	h		3362328	1					
ANR	3364800	Argument	h		3362328	0					
ANR	3364801	Identifier	h		3362328	0					
ANR	3364802	Argument	sl		3362328	1					
ANR	3364803	Identifier	sl		3362328	0					
ANR	3364804	Argument	8 * i		3362328	2					
ANR	3364805	MultiplicativeExpression	8 * i		3362328	0		*			
ANR	3364806	PrimaryExpression	8		3362328	0					
ANR	3364807	Identifier	i		3362328	1					
ANR	3364808	Argument	list		3362328	3					
ANR	3364809	Identifier	list		3362328	0					
ANR	3364810	Argument	sl -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3362328	4					
ANR	3364811	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3362328	0					
ANR	3364812	ArrayIndexing	sl -> ref_cache [ list ]		3362328	0					
ANR	3364813	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3364814	Identifier	sl		3362328	0					
ANR	3364815	Identifier	ref_cache		3362328	1					
ANR	3364816	Identifier	list		3362328	1					
ANR	3364817	AdditiveExpression	scan8 [ 0 ] + 16 * i		3362328	1		+			
ANR	3364818	ArrayIndexing	scan8 [ 0 ]		3362328	0					
ANR	3364819	Identifier	scan8		3362328	0					
ANR	3364820	PrimaryExpression	0		3362328	1					
ANR	3364821	MultiplicativeExpression	16 * i		3362328	1		*			
ANR	3364822	PrimaryExpression	16		3362328	0					
ANR	3364823	Identifier	i		3362328	1					
ANR	3364824	Argument	& mx		3362328	5					
ANR	3364825	UnaryOperationExpression	& mx		3362328	0					
ANR	3364826	UnaryOperator	&		3362328	0					
ANR	3364827	Identifier	mx		3362328	1					
ANR	3364828	Argument	& my		3362328	6					
ANR	3364829	UnaryOperationExpression	& my		3362328	0					
ANR	3364830	UnaryOperator	&		3362328	0					
ANR	3364831	Identifier	my		3362328	1					
ANR	3364832	ExpressionStatement	mx += get_se_golomb ( & sl -> gb )	615:24:13657:13685	3362328	1	True				
ANR	3364833	AssignmentExpression	mx += get_se_golomb ( & sl -> gb )		3362328	0		+=			
ANR	3364834	Identifier	mx		3362328	0					
ANR	3364835	CallExpression	get_se_golomb ( & sl -> gb )		3362328	1					
ANR	3364836	Callee	get_se_golomb		3362328	0					
ANR	3364837	Identifier	get_se_golomb		3362328	0					
ANR	3364838	ArgumentList	& sl -> gb		3362328	1					
ANR	3364839	Argument	& sl -> gb		3362328	0					
ANR	3364840	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3364841	UnaryOperator	&		3362328	0					
ANR	3364842	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3364843	Identifier	sl		3362328	0					
ANR	3364844	Identifier	gb		3362328	1					
ANR	3364845	ExpressionStatement	my += get_se_golomb ( & sl -> gb )	617:24:13712:13740	3362328	2	True				
ANR	3364846	AssignmentExpression	my += get_se_golomb ( & sl -> gb )		3362328	0		+=			
ANR	3364847	Identifier	my		3362328	0					
ANR	3364848	CallExpression	get_se_golomb ( & sl -> gb )		3362328	1					
ANR	3364849	Callee	get_se_golomb		3362328	0					
ANR	3364850	Identifier	get_se_golomb		3362328	0					
ANR	3364851	ArgumentList	& sl -> gb		3362328	1					
ANR	3364852	Argument	& sl -> gb		3362328	0					
ANR	3364853	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3364854	UnaryOperator	&		3362328	0					
ANR	3364855	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3364856	Identifier	sl		3362328	0					
ANR	3364857	Identifier	gb		3362328	1					
ANR	3364858	ExpressionStatement	"ff_tlog ( h -> avctx , ""final mv:%d %d\\n"" , mx , my )"	619:24:13767:13812	3362328	3	True				
ANR	3364859	CallExpression	"ff_tlog ( h -> avctx , ""final mv:%d %d\\n"" , mx , my )"		3362328	0					
ANR	3364860	Callee	ff_tlog		3362328	0					
ANR	3364861	Identifier	ff_tlog		3362328	0					
ANR	3364862	ArgumentList	h -> avctx		3362328	1					
ANR	3364863	Argument	h -> avctx		3362328	0					
ANR	3364864	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3364865	Identifier	h		3362328	0					
ANR	3364866	Identifier	avctx		3362328	1					
ANR	3364867	Argument	"""final mv:%d %d\\n"""		3362328	1					
ANR	3364868	PrimaryExpression	"""final mv:%d %d\\n"""		3362328	0					
ANR	3364869	Argument	mx		3362328	2					
ANR	3364870	Identifier	mx		3362328	0					
ANR	3364871	Argument	my		3362328	3					
ANR	3364872	Identifier	my		3362328	0					
ANR	3364873	ExpressionStatement	"val = pack16to32 ( mx , my )"	623:24:13841:13863	3362328	4	True				
ANR	3364874	AssignmentExpression	"val = pack16to32 ( mx , my )"		3362328	0		=			
ANR	3364875	Identifier	val		3362328	0					
ANR	3364876	CallExpression	"pack16to32 ( mx , my )"		3362328	1					
ANR	3364877	Callee	pack16to32		3362328	0					
ANR	3364878	Identifier	pack16to32		3362328	0					
ANR	3364879	ArgumentList	mx		3362328	1					
ANR	3364880	Argument	mx		3362328	0					
ANR	3364881	Identifier	mx		3362328	0					
ANR	3364882	Argument	my		3362328	1					
ANR	3364883	Identifier	my		3362328	0					
ANR	3364884	ElseStatement	else		3362328	0					
ANR	3364885	ExpressionStatement	val = 0	627:24:13917:13922	3362328	0	True				
ANR	3364886	AssignmentExpression	val = 0		3362328	0		=			
ANR	3364887	Identifier	val		3362328	0					
ANR	3364888	PrimaryExpression	0		3362328	1					
ANR	3364889	ExpressionStatement	"fill_rectangle ( sl -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , val , 4 )"	629:20:13945:14015	3362328	2	True				
ANR	3364890	CallExpression	"fill_rectangle ( sl -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ] , 4 , 2 , 8 , val , 4 )"		3362328	0					
ANR	3364891	Callee	fill_rectangle		3362328	0					
ANR	3364892	Identifier	fill_rectangle		3362328	0					
ANR	3364893	ArgumentList	sl -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3362328	1					
ANR	3364894	Argument	sl -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3362328	0					
ANR	3364895	ArrayIndexing	sl -> mv_cache [ list ] [ scan8 [ 0 ] + 16 * i ]		3362328	0					
ANR	3364896	ArrayIndexing	sl -> mv_cache [ list ]		3362328	0					
ANR	3364897	PtrMemberAccess	sl -> mv_cache		3362328	0					
ANR	3364898	Identifier	sl		3362328	0					
ANR	3364899	Identifier	mv_cache		3362328	1					
ANR	3364900	Identifier	list		3362328	1					
ANR	3364901	AdditiveExpression	scan8 [ 0 ] + 16 * i		3362328	1		+			
ANR	3364902	ArrayIndexing	scan8 [ 0 ]		3362328	0					
ANR	3364903	Identifier	scan8		3362328	0					
ANR	3364904	PrimaryExpression	0		3362328	1					
ANR	3364905	MultiplicativeExpression	16 * i		3362328	1		*			
ANR	3364906	PrimaryExpression	16		3362328	0					
ANR	3364907	Identifier	i		3362328	1					
ANR	3364908	Argument	4		3362328	1					
ANR	3364909	PrimaryExpression	4		3362328	0					
ANR	3364910	Argument	2		3362328	2					
ANR	3364911	PrimaryExpression	2		3362328	0					
ANR	3364912	Argument	8		3362328	3					
ANR	3364913	PrimaryExpression	8		3362328	0					
ANR	3364914	Argument	val		3362328	4					
ANR	3364915	Identifier	val		3362328	0					
ANR	3364916	Argument	4		3362328	5					
ANR	3364917	PrimaryExpression	4		3362328	0					
ANR	3364918	ElseStatement	else		3362328	0					
ANR	3364919	CompoundStatement		633:13:13991:13991	3362328	0					
ANR	3364920	ExpressionStatement	av_assert2 ( IS_8X16 ( mb_type ) )	637:12:14080:14108	3362328	0	True				
ANR	3364921	CallExpression	av_assert2 ( IS_8X16 ( mb_type ) )		3362328	0					
ANR	3364922	Callee	av_assert2		3362328	0					
ANR	3364923	Identifier	av_assert2		3362328	0					
ANR	3364924	ArgumentList	IS_8X16 ( mb_type )		3362328	1					
ANR	3364925	Argument	IS_8X16 ( mb_type )		3362328	0					
ANR	3364926	CallExpression	IS_8X16 ( mb_type )		3362328	0					
ANR	3364927	Callee	IS_8X16		3362328	0					
ANR	3364928	Identifier	IS_8X16		3362328	0					
ANR	3364929	ArgumentList	mb_type		3362328	1					
ANR	3364930	Argument	mb_type		3362328	0					
ANR	3364931	Identifier	mb_type		3362328	0					
ANR	3364932	ForStatement	for ( list = 0 ; list < sl -> list_count ; list ++ )		3362328	1					
ANR	3364933	ForInit	list = 0 ;	639:17:14128:14136	3362328	0	True				
ANR	3364934	AssignmentExpression	list = 0		3362328	0		=			
ANR	3364935	Identifier	list		3362328	0					
ANR	3364936	PrimaryExpression	0		3362328	1					
ANR	3364937	Condition	list < sl -> list_count	639:27:14138:14158	3362328	1	True				
ANR	3364938	RelationalExpression	list < sl -> list_count		3362328	0		<			
ANR	3364939	Identifier	list		3362328	0					
ANR	3364940	PtrMemberAccess	sl -> list_count		3362328	1					
ANR	3364941	Identifier	sl		3362328	0					
ANR	3364942	Identifier	list_count		3362328	1					
ANR	3364943	PostIncDecOperationExpression	list ++	639:50:14161:14166	3362328	2	True				
ANR	3364944	Identifier	list		3362328	0					
ANR	3364945	IncDec	++		3362328	1					
ANR	3364946	CompoundStatement		637:58:14095:14095	3362328	3					
ANR	3364947	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3362328	0					
ANR	3364948	ForInit	i = 0 ;	641:24:14196:14199	3362328	0	True				
ANR	3364949	AssignmentExpression	i = 0		3362328	0		=			
ANR	3364950	Identifier	i		3362328	0					
ANR	3364951	PrimaryExpression	0		3362328	1					
ANR	3364952	Condition	i < 2	641:29:14201:14203	3362328	1	True				
ANR	3364953	RelationalExpression	i < 2		3362328	0		<			
ANR	3364954	Identifier	i		3362328	0					
ANR	3364955	PrimaryExpression	2		3362328	1					
ANR	3364956	PostIncDecOperationExpression	i ++	641:34:14206:14208	3362328	2	True				
ANR	3364957	Identifier	i		3362328	0					
ANR	3364958	IncDec	++		3362328	1					
ANR	3364959	CompoundStatement		641:24:14163:14179	3362328	3					
ANR	3364960	IdentifierDeclStatement	unsigned int val ;	643:24:14237:14253	3362328	0	True				
ANR	3364961	IdentifierDecl	val		3362328	0					
ANR	3364962	IdentifierDeclType	unsigned int		3362328	0					
ANR	3364963	Identifier	val		3362328	1					
ANR	3364964	IfStatement	"if ( IS_DIR ( mb_type , i , list ) )"		3362328	1					
ANR	3364965	Condition	"IS_DIR ( mb_type , i , list )"	645:27:14283:14306	3362328	0	True				
ANR	3364966	CallExpression	"IS_DIR ( mb_type , i , list )"		3362328	0					
ANR	3364967	Callee	IS_DIR		3362328	0					
ANR	3364968	Identifier	IS_DIR		3362328	0					
ANR	3364969	ArgumentList	mb_type		3362328	1					
ANR	3364970	Argument	mb_type		3362328	0					
ANR	3364971	Identifier	mb_type		3362328	0					
ANR	3364972	Argument	i		3362328	1					
ANR	3364973	Identifier	i		3362328	0					
ANR	3364974	Argument	list		3362328	2					
ANR	3364975	Identifier	list		3362328	0					
ANR	3364976	CompoundStatement		645:28:14282:14331	3362328	1					
ANR	3364977	IdentifierDeclStatement	unsigned rc = sl -> ref_count [ list ] << MB_MBAFF ( sl ) ;	647:28:14356:14405	3362328	0	True				
ANR	3364978	IdentifierDecl	rc = sl -> ref_count [ list ] << MB_MBAFF ( sl )		3362328	0					
ANR	3364979	IdentifierDeclType	unsigned		3362328	0					
ANR	3364980	Identifier	rc		3362328	1					
ANR	3364981	AssignmentExpression	rc = sl -> ref_count [ list ] << MB_MBAFF ( sl )		3362328	2		=			
ANR	3364982	Identifier	rc		3362328	0					
ANR	3364983	ShiftExpression	sl -> ref_count [ list ] << MB_MBAFF ( sl )		3362328	1		<<			
ANR	3364984	ArrayIndexing	sl -> ref_count [ list ]		3362328	0					
ANR	3364985	PtrMemberAccess	sl -> ref_count		3362328	0					
ANR	3364986	Identifier	sl		3362328	0					
ANR	3364987	Identifier	ref_count		3362328	1					
ANR	3364988	Identifier	list		3362328	1					
ANR	3364989	CallExpression	MB_MBAFF ( sl )		3362328	1					
ANR	3364990	Callee	MB_MBAFF		3362328	0					
ANR	3364991	Identifier	MB_MBAFF		3362328	0					
ANR	3364992	ArgumentList	sl		3362328	1					
ANR	3364993	Argument	sl		3362328	0					
ANR	3364994	Identifier	sl		3362328	0					
ANR	3364995	IfStatement	if ( rc == 1 )		3362328	1					
ANR	3364996	Condition	rc == 1	649:32:14440:14446	3362328	0	True				
ANR	3364997	EqualityExpression	rc == 1		3362328	0		==			
ANR	3364998	Identifier	rc		3362328	0					
ANR	3364999	PrimaryExpression	1		3362328	1					
ANR	3365000	CompoundStatement		647:41:14375:14375	3362328	1					
ANR	3365001	ExpressionStatement	val = 0	651:32:14484:14490	3362328	0	True				
ANR	3365002	AssignmentExpression	val = 0		3362328	0		=			
ANR	3365003	Identifier	val		3362328	0					
ANR	3365004	PrimaryExpression	0		3362328	1					
ANR	3365005	ElseStatement	else		3362328	0					
ANR	3365006	IfStatement	if ( rc == 2 )		3362328	0					
ANR	3365007	Condition	rc == 2	653:39:14532:14538	3362328	0	True				
ANR	3365008	EqualityExpression	rc == 2		3362328	0		==			
ANR	3365009	Identifier	rc		3362328	0					
ANR	3365010	PrimaryExpression	2		3362328	1					
ANR	3365011	CompoundStatement		651:48:14467:14467	3362328	1					
ANR	3365012	ExpressionStatement	val = get_bits1 ( & sl -> gb ) ^ 1	655:32:14576:14601	3362328	0	True				
ANR	3365013	AssignmentExpression	val = get_bits1 ( & sl -> gb ) ^ 1		3362328	0		=			
ANR	3365014	Identifier	val		3362328	0					
ANR	3365015	ExclusiveOrExpression	get_bits1 ( & sl -> gb ) ^ 1		3362328	1		^			
ANR	3365016	CallExpression	get_bits1 ( & sl -> gb )		3362328	0					
ANR	3365017	Callee	get_bits1		3362328	0					
ANR	3365018	Identifier	get_bits1		3362328	0					
ANR	3365019	ArgumentList	& sl -> gb		3362328	1					
ANR	3365020	Argument	& sl -> gb		3362328	0					
ANR	3365021	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3365022	UnaryOperator	&		3362328	0					
ANR	3365023	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3365024	Identifier	sl		3362328	0					
ANR	3365025	Identifier	gb		3362328	1					
ANR	3365026	PrimaryExpression	1		3362328	1					
ANR	3365027	ElseStatement	else		3362328	0					
ANR	3365028	CompoundStatement		655:33:14563:14563	3362328	0					
ANR	3365029	ExpressionStatement	val = get_ue_golomb_31 ( & sl -> gb )	659:32:14672:14702	3362328	0	True				
ANR	3365030	AssignmentExpression	val = get_ue_golomb_31 ( & sl -> gb )		3362328	0		=			
ANR	3365031	Identifier	val		3362328	0					
ANR	3365032	CallExpression	get_ue_golomb_31 ( & sl -> gb )		3362328	1					
ANR	3365033	Callee	get_ue_golomb_31		3362328	0					
ANR	3365034	Identifier	get_ue_golomb_31		3362328	0					
ANR	3365035	ArgumentList	& sl -> gb		3362328	1					
ANR	3365036	Argument	& sl -> gb		3362328	0					
ANR	3365037	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3365038	UnaryOperator	&		3362328	0					
ANR	3365039	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3365040	Identifier	sl		3362328	0					
ANR	3365041	Identifier	gb		3362328	1					
ANR	3365042	IfStatement	if ( val >= rc )		3362328	1					
ANR	3365043	Condition	val >= rc	661:36:14741:14749	3362328	0	True				
ANR	3365044	RelationalExpression	val >= rc		3362328	0		>=			
ANR	3365045	Identifier	val		3362328	0					
ANR	3365046	Identifier	rc		3362328	1					
ANR	3365047	CompoundStatement		659:47:14678:14678	3362328	1					
ANR	3365048	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , val )"	663:36:14791:14847	3362328	0	True				
ANR	3365049	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""ref %u overflow\\n"" , val )"		3362328	0					
ANR	3365050	Callee	av_log		3362328	0					
ANR	3365051	Identifier	av_log		3362328	0					
ANR	3365052	ArgumentList	h -> avctx		3362328	1					
ANR	3365053	Argument	h -> avctx		3362328	0					
ANR	3365054	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3365055	Identifier	h		3362328	0					
ANR	3365056	Identifier	avctx		3362328	1					
ANR	3365057	Argument	AV_LOG_ERROR		3362328	1					
ANR	3365058	Identifier	AV_LOG_ERROR		3362328	0					
ANR	3365059	Argument	"""ref %u overflow\\n"""		3362328	2					
ANR	3365060	PrimaryExpression	"""ref %u overflow\\n"""		3362328	0					
ANR	3365061	Argument	val		3362328	3					
ANR	3365062	Identifier	val		3362328	0					
ANR	3365063	ReturnStatement	return - 1 ;	665:36:14886:14895	3362328	1	True				
ANR	3365064	UnaryOperationExpression	- 1		3362328	0					
ANR	3365065	UnaryOperator	-		3362328	0					
ANR	3365066	PrimaryExpression	1		3362328	1					
ANR	3365067	ElseStatement	else		3362328	0					
ANR	3365068	ExpressionStatement	val = LIST_NOT_USED & 0xFF	673:28:15023:15046	3362328	0	True				
ANR	3365069	AssignmentExpression	val = LIST_NOT_USED & 0xFF		3362328	0		=			
ANR	3365070	Identifier	val		3362328	0					
ANR	3365071	BitAndExpression	LIST_NOT_USED & 0xFF		3362328	1		&			
ANR	3365072	Identifier	LIST_NOT_USED		3362328	0					
ANR	3365073	PrimaryExpression	0xFF		3362328	1					
ANR	3365074	ExpressionStatement	"fill_rectangle ( & sl -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , val , 1 )"	675:24:15073:15144	3362328	2	True				
ANR	3365075	CallExpression	"fill_rectangle ( & sl -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , val , 1 )"		3362328	0					
ANR	3365076	Callee	fill_rectangle		3362328	0					
ANR	3365077	Identifier	fill_rectangle		3362328	0					
ANR	3365078	ArgumentList	& sl -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3362328	1					
ANR	3365079	Argument	& sl -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3362328	0					
ANR	3365080	UnaryOperationExpression	& sl -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3362328	0					
ANR	3365081	UnaryOperator	&		3362328	0					
ANR	3365082	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3362328	1					
ANR	3365083	ArrayIndexing	sl -> ref_cache [ list ]		3362328	0					
ANR	3365084	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3365085	Identifier	sl		3362328	0					
ANR	3365086	Identifier	ref_cache		3362328	1					
ANR	3365087	Identifier	list		3362328	1					
ANR	3365088	AdditiveExpression	scan8 [ 0 ] + 2 * i		3362328	1		+			
ANR	3365089	ArrayIndexing	scan8 [ 0 ]		3362328	0					
ANR	3365090	Identifier	scan8		3362328	0					
ANR	3365091	PrimaryExpression	0		3362328	1					
ANR	3365092	MultiplicativeExpression	2 * i		3362328	1		*			
ANR	3365093	PrimaryExpression	2		3362328	0					
ANR	3365094	Identifier	i		3362328	1					
ANR	3365095	Argument	2		3362328	1					
ANR	3365096	PrimaryExpression	2		3362328	0					
ANR	3365097	Argument	4		3362328	2					
ANR	3365098	PrimaryExpression	4		3362328	0					
ANR	3365099	Argument	8		3362328	3					
ANR	3365100	PrimaryExpression	8		3362328	0					
ANR	3365101	Argument	val		3362328	4					
ANR	3365102	Identifier	val		3362328	0					
ANR	3365103	Argument	1		3362328	5					
ANR	3365104	PrimaryExpression	1		3362328	0					
ANR	3365105	ForStatement	for ( list = 0 ; list < sl -> list_count ; list ++ )		3362328	2					
ANR	3365106	ForInit	list = 0 ;	681:17:15202:15210	3362328	0	True				
ANR	3365107	AssignmentExpression	list = 0		3362328	0		=			
ANR	3365108	Identifier	list		3362328	0					
ANR	3365109	PrimaryExpression	0		3362328	1					
ANR	3365110	Condition	list < sl -> list_count	681:27:15212:15232	3362328	1	True				
ANR	3365111	RelationalExpression	list < sl -> list_count		3362328	0		<			
ANR	3365112	Identifier	list		3362328	0					
ANR	3365113	PtrMemberAccess	sl -> list_count		3362328	1					
ANR	3365114	Identifier	sl		3362328	0					
ANR	3365115	Identifier	list_count		3362328	1					
ANR	3365116	PostIncDecOperationExpression	list ++	681:50:15235:15240	3362328	2	True				
ANR	3365117	Identifier	list		3362328	0					
ANR	3365118	IncDec	++		3362328	1					
ANR	3365119	CompoundStatement		679:58:15169:15169	3362328	3					
ANR	3365120	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		3362328	0					
ANR	3365121	ForInit	i = 0 ;	683:20:15266:15269	3362328	0	True				
ANR	3365122	AssignmentExpression	i = 0		3362328	0		=			
ANR	3365123	Identifier	i		3362328	0					
ANR	3365124	PrimaryExpression	0		3362328	1					
ANR	3365125	Condition	i < 2	683:25:15271:15273	3362328	1	True				
ANR	3365126	RelationalExpression	i < 2		3362328	0		<			
ANR	3365127	Identifier	i		3362328	0					
ANR	3365128	PrimaryExpression	2		3362328	1					
ANR	3365129	PostIncDecOperationExpression	i ++	683:30:15276:15278	3362328	2	True				
ANR	3365130	Identifier	i		3362328	0					
ANR	3365131	IncDec	++		3362328	1					
ANR	3365132	CompoundStatement		683:20:15229:15245	3362328	3					
ANR	3365133	IdentifierDeclStatement	unsigned int val ;	685:20:15303:15319	3362328	0	True				
ANR	3365134	IdentifierDecl	val		3362328	0					
ANR	3365135	IdentifierDeclType	unsigned int		3362328	0					
ANR	3365136	Identifier	val		3362328	1					
ANR	3365137	IfStatement	"if ( IS_DIR ( mb_type , i , list ) )"		3362328	1					
ANR	3365138	Condition	"IS_DIR ( mb_type , i , list )"	687:23:15345:15368	3362328	0	True				
ANR	3365139	CallExpression	"IS_DIR ( mb_type , i , list )"		3362328	0					
ANR	3365140	Callee	IS_DIR		3362328	0					
ANR	3365141	Identifier	IS_DIR		3362328	0					
ANR	3365142	ArgumentList	mb_type		3362328	1					
ANR	3365143	Argument	mb_type		3362328	0					
ANR	3365144	Identifier	mb_type		3362328	0					
ANR	3365145	Argument	i		3362328	1					
ANR	3365146	Identifier	i		3362328	0					
ANR	3365147	Argument	list		3362328	2					
ANR	3365148	Identifier	list		3362328	0					
ANR	3365149	CompoundStatement		685:48:15296:15296	3362328	1					
ANR	3365150	ExpressionStatement	"pred_8x16_motion ( h , sl , i * 4 , list , sl -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , & mx , & my )"	689:24:15397:15480	3362328	0	True				
ANR	3365151	CallExpression	"pred_8x16_motion ( h , sl , i * 4 , list , sl -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , & mx , & my )"		3362328	0					
ANR	3365152	Callee	pred_8x16_motion		3362328	0					
ANR	3365153	Identifier	pred_8x16_motion		3362328	0					
ANR	3365154	ArgumentList	h		3362328	1					
ANR	3365155	Argument	h		3362328	0					
ANR	3365156	Identifier	h		3362328	0					
ANR	3365157	Argument	sl		3362328	1					
ANR	3365158	Identifier	sl		3362328	0					
ANR	3365159	Argument	i * 4		3362328	2					
ANR	3365160	MultiplicativeExpression	i * 4		3362328	0		*			
ANR	3365161	Identifier	i		3362328	0					
ANR	3365162	PrimaryExpression	4		3362328	1					
ANR	3365163	Argument	list		3362328	3					
ANR	3365164	Identifier	list		3362328	0					
ANR	3365165	Argument	sl -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3362328	4					
ANR	3365166	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3362328	0					
ANR	3365167	ArrayIndexing	sl -> ref_cache [ list ]		3362328	0					
ANR	3365168	PtrMemberAccess	sl -> ref_cache		3362328	0					
ANR	3365169	Identifier	sl		3362328	0					
ANR	3365170	Identifier	ref_cache		3362328	1					
ANR	3365171	Identifier	list		3362328	1					
ANR	3365172	AdditiveExpression	scan8 [ 0 ] + 2 * i		3362328	1		+			
ANR	3365173	ArrayIndexing	scan8 [ 0 ]		3362328	0					
ANR	3365174	Identifier	scan8		3362328	0					
ANR	3365175	PrimaryExpression	0		3362328	1					
ANR	3365176	MultiplicativeExpression	2 * i		3362328	1		*			
ANR	3365177	PrimaryExpression	2		3362328	0					
ANR	3365178	Identifier	i		3362328	1					
ANR	3365179	Argument	& mx		3362328	5					
ANR	3365180	UnaryOperationExpression	& mx		3362328	0					
ANR	3365181	UnaryOperator	&		3362328	0					
ANR	3365182	Identifier	mx		3362328	1					
ANR	3365183	Argument	& my		3362328	6					
ANR	3365184	UnaryOperationExpression	& my		3362328	0					
ANR	3365185	UnaryOperator	&		3362328	0					
ANR	3365186	Identifier	my		3362328	1					
ANR	3365187	ExpressionStatement	mx += get_se_golomb ( & sl -> gb )	691:24:15507:15535	3362328	1	True				
ANR	3365188	AssignmentExpression	mx += get_se_golomb ( & sl -> gb )		3362328	0		+=			
ANR	3365189	Identifier	mx		3362328	0					
ANR	3365190	CallExpression	get_se_golomb ( & sl -> gb )		3362328	1					
ANR	3365191	Callee	get_se_golomb		3362328	0					
ANR	3365192	Identifier	get_se_golomb		3362328	0					
ANR	3365193	ArgumentList	& sl -> gb		3362328	1					
ANR	3365194	Argument	& sl -> gb		3362328	0					
ANR	3365195	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3365196	UnaryOperator	&		3362328	0					
ANR	3365197	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3365198	Identifier	sl		3362328	0					
ANR	3365199	Identifier	gb		3362328	1					
ANR	3365200	ExpressionStatement	my += get_se_golomb ( & sl -> gb )	693:24:15562:15590	3362328	2	True				
ANR	3365201	AssignmentExpression	my += get_se_golomb ( & sl -> gb )		3362328	0		+=			
ANR	3365202	Identifier	my		3362328	0					
ANR	3365203	CallExpression	get_se_golomb ( & sl -> gb )		3362328	1					
ANR	3365204	Callee	get_se_golomb		3362328	0					
ANR	3365205	Identifier	get_se_golomb		3362328	0					
ANR	3365206	ArgumentList	& sl -> gb		3362328	1					
ANR	3365207	Argument	& sl -> gb		3362328	0					
ANR	3365208	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3365209	UnaryOperator	&		3362328	0					
ANR	3365210	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3365211	Identifier	sl		3362328	0					
ANR	3365212	Identifier	gb		3362328	1					
ANR	3365213	ExpressionStatement	"ff_tlog ( h -> avctx , ""final mv:%d %d\\n"" , mx , my )"	695:24:15617:15662	3362328	3	True				
ANR	3365214	CallExpression	"ff_tlog ( h -> avctx , ""final mv:%d %d\\n"" , mx , my )"		3362328	0					
ANR	3365215	Callee	ff_tlog		3362328	0					
ANR	3365216	Identifier	ff_tlog		3362328	0					
ANR	3365217	ArgumentList	h -> avctx		3362328	1					
ANR	3365218	Argument	h -> avctx		3362328	0					
ANR	3365219	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3365220	Identifier	h		3362328	0					
ANR	3365221	Identifier	avctx		3362328	1					
ANR	3365222	Argument	"""final mv:%d %d\\n"""		3362328	1					
ANR	3365223	PrimaryExpression	"""final mv:%d %d\\n"""		3362328	0					
ANR	3365224	Argument	mx		3362328	2					
ANR	3365225	Identifier	mx		3362328	0					
ANR	3365226	Argument	my		3362328	3					
ANR	3365227	Identifier	my		3362328	0					
ANR	3365228	ExpressionStatement	"val = pack16to32 ( mx , my )"	699:24:15691:15713	3362328	4	True				
ANR	3365229	AssignmentExpression	"val = pack16to32 ( mx , my )"		3362328	0		=			
ANR	3365230	Identifier	val		3362328	0					
ANR	3365231	CallExpression	"pack16to32 ( mx , my )"		3362328	1					
ANR	3365232	Callee	pack16to32		3362328	0					
ANR	3365233	Identifier	pack16to32		3362328	0					
ANR	3365234	ArgumentList	mx		3362328	1					
ANR	3365235	Argument	mx		3362328	0					
ANR	3365236	Identifier	mx		3362328	0					
ANR	3365237	Argument	my		3362328	1					
ANR	3365238	Identifier	my		3362328	0					
ANR	3365239	ElseStatement	else		3362328	0					
ANR	3365240	ExpressionStatement	val = 0	703:24:15767:15772	3362328	0	True				
ANR	3365241	AssignmentExpression	val = 0		3362328	0		=			
ANR	3365242	Identifier	val		3362328	0					
ANR	3365243	PrimaryExpression	0		3362328	1					
ANR	3365244	ExpressionStatement	"fill_rectangle ( sl -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , val , 4 )"	705:20:15795:15864	3362328	2	True				
ANR	3365245	CallExpression	"fill_rectangle ( sl -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ] , 2 , 4 , 8 , val , 4 )"		3362328	0					
ANR	3365246	Callee	fill_rectangle		3362328	0					
ANR	3365247	Identifier	fill_rectangle		3362328	0					
ANR	3365248	ArgumentList	sl -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3362328	1					
ANR	3365249	Argument	sl -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3362328	0					
ANR	3365250	ArrayIndexing	sl -> mv_cache [ list ] [ scan8 [ 0 ] + 2 * i ]		3362328	0					
ANR	3365251	ArrayIndexing	sl -> mv_cache [ list ]		3362328	0					
ANR	3365252	PtrMemberAccess	sl -> mv_cache		3362328	0					
ANR	3365253	Identifier	sl		3362328	0					
ANR	3365254	Identifier	mv_cache		3362328	1					
ANR	3365255	Identifier	list		3362328	1					
ANR	3365256	AdditiveExpression	scan8 [ 0 ] + 2 * i		3362328	1		+			
ANR	3365257	ArrayIndexing	scan8 [ 0 ]		3362328	0					
ANR	3365258	Identifier	scan8		3362328	0					
ANR	3365259	PrimaryExpression	0		3362328	1					
ANR	3365260	MultiplicativeExpression	2 * i		3362328	1		*			
ANR	3365261	PrimaryExpression	2		3362328	0					
ANR	3365262	Identifier	i		3362328	1					
ANR	3365263	Argument	2		3362328	1					
ANR	3365264	PrimaryExpression	2		3362328	0					
ANR	3365265	Argument	4		3362328	2					
ANR	3365266	PrimaryExpression	4		3362328	0					
ANR	3365267	Argument	8		3362328	3					
ANR	3365268	PrimaryExpression	8		3362328	0					
ANR	3365269	Argument	val		3362328	4					
ANR	3365270	Identifier	val		3362328	0					
ANR	3365271	Argument	4		3362328	5					
ANR	3365272	PrimaryExpression	4		3362328	0					
ANR	3365273	IfStatement	if ( IS_INTER ( mb_type ) )		3362328	20					
ANR	3365274	Condition	IS_INTER ( mb_type )	717:7:15928:15944	3362328	0	True				
ANR	3365275	CallExpression	IS_INTER ( mb_type )		3362328	0					
ANR	3365276	Callee	IS_INTER		3362328	0					
ANR	3365277	Identifier	IS_INTER		3362328	0					
ANR	3365278	ArgumentList	mb_type		3362328	1					
ANR	3365279	Argument	mb_type		3362328	0					
ANR	3365280	Identifier	mb_type		3362328	0					
ANR	3365281	ExpressionStatement	"write_back_motion ( h , sl , mb_type )"	719:8:15956:15989	3362328	1	True				
ANR	3365282	CallExpression	"write_back_motion ( h , sl , mb_type )"		3362328	0					
ANR	3365283	Callee	write_back_motion		3362328	0					
ANR	3365284	Identifier	write_back_motion		3362328	0					
ANR	3365285	ArgumentList	h		3362328	1					
ANR	3365286	Argument	h		3362328	0					
ANR	3365287	Identifier	h		3362328	0					
ANR	3365288	Argument	sl		3362328	1					
ANR	3365289	Identifier	sl		3362328	0					
ANR	3365290	Argument	mb_type		3362328	2					
ANR	3365291	Identifier	mb_type		3362328	0					
ANR	3365292	IfStatement	if ( ! IS_INTRA16x16 ( mb_type ) )		3362328	21					
ANR	3365293	Condition	! IS_INTRA16x16 ( mb_type )	723:7:16001:16023	3362328	0	True				
ANR	3365294	UnaryOperationExpression	! IS_INTRA16x16 ( mb_type )		3362328	0					
ANR	3365295	UnaryOperator	!		3362328	0					
ANR	3365296	CallExpression	IS_INTRA16x16 ( mb_type )		3362328	1					
ANR	3365297	Callee	IS_INTRA16x16		3362328	0					
ANR	3365298	Identifier	IS_INTRA16x16		3362328	0					
ANR	3365299	ArgumentList	mb_type		3362328	1					
ANR	3365300	Argument	mb_type		3362328	0					
ANR	3365301	Identifier	mb_type		3362328	0					
ANR	3365302	CompoundStatement		721:31:15951:15951	3362328	1					
ANR	3365303	ExpressionStatement	cbp = get_ue_golomb ( & sl -> gb )	725:8:16036:16063	3362328	0	True				
ANR	3365304	AssignmentExpression	cbp = get_ue_golomb ( & sl -> gb )		3362328	0		=			
ANR	3365305	Identifier	cbp		3362328	0					
ANR	3365306	CallExpression	get_ue_golomb ( & sl -> gb )		3362328	1					
ANR	3365307	Callee	get_ue_golomb		3362328	0					
ANR	3365308	Identifier	get_ue_golomb		3362328	0					
ANR	3365309	ArgumentList	& sl -> gb		3362328	1					
ANR	3365310	Argument	& sl -> gb		3362328	0					
ANR	3365311	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3365312	UnaryOperator	&		3362328	0					
ANR	3365313	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3365314	Identifier	sl		3362328	0					
ANR	3365315	Identifier	gb		3362328	1					
ANR	3365316	IfStatement	if ( decode_chroma )		3362328	1					
ANR	3365317	Condition	decode_chroma	729:11:16079:16091	3362328	0	True				
ANR	3365318	Identifier	decode_chroma		3362328	0					
ANR	3365319	CompoundStatement		727:25:16019:16019	3362328	1					
ANR	3365320	IfStatement	if ( cbp > 47 )		3362328	0					
ANR	3365321	Condition	cbp > 47	731:15:16111:16118	3362328	0	True				
ANR	3365322	RelationalExpression	cbp > 47		3362328	0		>			
ANR	3365323	Identifier	cbp		3362328	0					
ANR	3365324	PrimaryExpression	47		3362328	1					
ANR	3365325	CompoundStatement		729:24:16046:16046	3362328	1					
ANR	3365326	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""cbp too large (%u) at %d %d\\n"" , cbp , sl -> mb_x , sl -> mb_y )"	733:16:16139:16227	3362328	0	True				
ANR	3365327	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""cbp too large (%u) at %d %d\\n"" , cbp , sl -> mb_x , sl -> mb_y )"		3362328	0					
ANR	3365328	Callee	av_log		3362328	0					
ANR	3365329	Identifier	av_log		3362328	0					
ANR	3365330	ArgumentList	h -> avctx		3362328	1					
ANR	3365331	Argument	h -> avctx		3362328	0					
ANR	3365332	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3365333	Identifier	h		3362328	0					
ANR	3365334	Identifier	avctx		3362328	1					
ANR	3365335	Argument	AV_LOG_ERROR		3362328	1					
ANR	3365336	Identifier	AV_LOG_ERROR		3362328	0					
ANR	3365337	Argument	"""cbp too large (%u) at %d %d\\n"""		3362328	2					
ANR	3365338	PrimaryExpression	"""cbp too large (%u) at %d %d\\n"""		3362328	0					
ANR	3365339	Argument	cbp		3362328	3					
ANR	3365340	Identifier	cbp		3362328	0					
ANR	3365341	Argument	sl -> mb_x		3362328	4					
ANR	3365342	PtrMemberAccess	sl -> mb_x		3362328	0					
ANR	3365343	Identifier	sl		3362328	0					
ANR	3365344	Identifier	mb_x		3362328	1					
ANR	3365345	Argument	sl -> mb_y		3362328	5					
ANR	3365346	PtrMemberAccess	sl -> mb_y		3362328	0					
ANR	3365347	Identifier	sl		3362328	0					
ANR	3365348	Identifier	mb_y		3362328	1					
ANR	3365349	ReturnStatement	return - 1 ;	735:16:16246:16255	3362328	1	True				
ANR	3365350	UnaryOperationExpression	- 1		3362328	0					
ANR	3365351	UnaryOperator	-		3362328	0					
ANR	3365352	PrimaryExpression	1		3362328	1					
ANR	3365353	IfStatement	if ( IS_INTRA4x4 ( mb_type ) )		3362328	1					
ANR	3365354	Condition	IS_INTRA4x4 ( mb_type )	739:16:16289:16308	3362328	0	True				
ANR	3365355	CallExpression	IS_INTRA4x4 ( mb_type )		3362328	0					
ANR	3365356	Callee	IS_INTRA4x4		3362328	0					
ANR	3365357	Identifier	IS_INTRA4x4		3362328	0					
ANR	3365358	ArgumentList	mb_type		3362328	1					
ANR	3365359	Argument	mb_type		3362328	0					
ANR	3365360	Identifier	mb_type		3362328	0					
ANR	3365361	ExpressionStatement	cbp = ff_h264_golomb_to_intra4x4_cbp [ cbp ]	741:16:16328:16369	3362328	1	True				
ANR	3365362	AssignmentExpression	cbp = ff_h264_golomb_to_intra4x4_cbp [ cbp ]		3362328	0		=			
ANR	3365363	Identifier	cbp		3362328	0					
ANR	3365364	ArrayIndexing	ff_h264_golomb_to_intra4x4_cbp [ cbp ]		3362328	1					
ANR	3365365	Identifier	ff_h264_golomb_to_intra4x4_cbp		3362328	0					
ANR	3365366	Identifier	cbp		3362328	1					
ANR	3365367	ElseStatement	else		3362328	0					
ANR	3365368	ExpressionStatement	cbp = ff_h264_golomb_to_inter_cbp [ cbp ]	745:16:16406:16444	3362328	0	True				
ANR	3365369	AssignmentExpression	cbp = ff_h264_golomb_to_inter_cbp [ cbp ]		3362328	0		=			
ANR	3365370	Identifier	cbp		3362328	0					
ANR	3365371	ArrayIndexing	ff_h264_golomb_to_inter_cbp [ cbp ]		3362328	1					
ANR	3365372	Identifier	ff_h264_golomb_to_inter_cbp		3362328	0					
ANR	3365373	Identifier	cbp		3362328	1					
ANR	3365374	ElseStatement	else		3362328	0					
ANR	3365375	CompoundStatement		745:13:16386:16386	3362328	0					
ANR	3365376	IfStatement	if ( cbp > 15 )		3362328	0					
ANR	3365377	Condition	cbp > 15	749:15:16478:16485	3362328	0	True				
ANR	3365378	RelationalExpression	cbp > 15		3362328	0		>			
ANR	3365379	Identifier	cbp		3362328	0					
ANR	3365380	PrimaryExpression	15		3362328	1					
ANR	3365381	CompoundStatement		747:24:16413:16413	3362328	1					
ANR	3365382	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""cbp too large (%u) at %d %d\\n"" , cbp , sl -> mb_x , sl -> mb_y )"	751:16:16506:16594	3362328	0	True				
ANR	3365383	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""cbp too large (%u) at %d %d\\n"" , cbp , sl -> mb_x , sl -> mb_y )"		3362328	0					
ANR	3365384	Callee	av_log		3362328	0					
ANR	3365385	Identifier	av_log		3362328	0					
ANR	3365386	ArgumentList	h -> avctx		3362328	1					
ANR	3365387	Argument	h -> avctx		3362328	0					
ANR	3365388	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3365389	Identifier	h		3362328	0					
ANR	3365390	Identifier	avctx		3362328	1					
ANR	3365391	Argument	AV_LOG_ERROR		3362328	1					
ANR	3365392	Identifier	AV_LOG_ERROR		3362328	0					
ANR	3365393	Argument	"""cbp too large (%u) at %d %d\\n"""		3362328	2					
ANR	3365394	PrimaryExpression	"""cbp too large (%u) at %d %d\\n"""		3362328	0					
ANR	3365395	Argument	cbp		3362328	3					
ANR	3365396	Identifier	cbp		3362328	0					
ANR	3365397	Argument	sl -> mb_x		3362328	4					
ANR	3365398	PtrMemberAccess	sl -> mb_x		3362328	0					
ANR	3365399	Identifier	sl		3362328	0					
ANR	3365400	Identifier	mb_x		3362328	1					
ANR	3365401	Argument	sl -> mb_y		3362328	5					
ANR	3365402	PtrMemberAccess	sl -> mb_y		3362328	0					
ANR	3365403	Identifier	sl		3362328	0					
ANR	3365404	Identifier	mb_y		3362328	1					
ANR	3365405	ReturnStatement	return - 1 ;	753:16:16613:16622	3362328	1	True				
ANR	3365406	UnaryOperationExpression	- 1		3362328	0					
ANR	3365407	UnaryOperator	-		3362328	0					
ANR	3365408	PrimaryExpression	1		3362328	1					
ANR	3365409	IfStatement	if ( IS_INTRA4x4 ( mb_type ) )		3362328	1					
ANR	3365410	Condition	IS_INTRA4x4 ( mb_type )	757:15:16655:16674	3362328	0	True				
ANR	3365411	CallExpression	IS_INTRA4x4 ( mb_type )		3362328	0					
ANR	3365412	Callee	IS_INTRA4x4		3362328	0					
ANR	3365413	Identifier	IS_INTRA4x4		3362328	0					
ANR	3365414	ArgumentList	mb_type		3362328	1					
ANR	3365415	Argument	mb_type		3362328	0					
ANR	3365416	Identifier	mb_type		3362328	0					
ANR	3365417	ExpressionStatement	cbp = golomb_to_intra4x4_cbp_gray [ cbp ]	757:37:16677:16714	3362328	1	True				
ANR	3365418	AssignmentExpression	cbp = golomb_to_intra4x4_cbp_gray [ cbp ]		3362328	0		=			
ANR	3365419	Identifier	cbp		3362328	0					
ANR	3365420	ArrayIndexing	golomb_to_intra4x4_cbp_gray [ cbp ]		3362328	1					
ANR	3365421	Identifier	golomb_to_intra4x4_cbp_gray		3362328	0					
ANR	3365422	Identifier	cbp		3362328	1					
ANR	3365423	ElseStatement	else		3362328	0					
ANR	3365424	ExpressionStatement	cbp = golomb_to_inter_cbp_gray [ cbp ]	759:37:16754:16788	3362328	0	True				
ANR	3365425	AssignmentExpression	cbp = golomb_to_inter_cbp_gray [ cbp ]		3362328	0		=			
ANR	3365426	Identifier	cbp		3362328	0					
ANR	3365427	ArrayIndexing	golomb_to_inter_cbp_gray [ cbp ]		3362328	1					
ANR	3365428	Identifier	golomb_to_inter_cbp_gray		3362328	0					
ANR	3365429	Identifier	cbp		3362328	1					
ANR	3365430	ElseStatement	else		3362328	0					
ANR	3365431	CompoundStatement		761:11:16739:16739	3362328	0					
ANR	3365432	IfStatement	if ( ! decode_chroma && cbp > 15 )		3362328	0					
ANR	3365433	Condition	! decode_chroma && cbp > 15	765:12:16828:16851	3362328	0	True				
ANR	3365434	AndExpression	! decode_chroma && cbp > 15		3362328	0		&&			
ANR	3365435	UnaryOperationExpression	! decode_chroma		3362328	0					
ANR	3365436	UnaryOperator	!		3362328	0					
ANR	3365437	Identifier	decode_chroma		3362328	1					
ANR	3365438	RelationalExpression	cbp > 15		3362328	1		>			
ANR	3365439	Identifier	cbp		3362328	0					
ANR	3365440	PrimaryExpression	15		3362328	1					
ANR	3365441	CompoundStatement		763:38:16780:16780	3362328	1					
ANR	3365442	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""gray chroma\\n"" )"	767:12:16869:16916	3362328	0	True				
ANR	3365443	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""gray chroma\\n"" )"		3362328	0					
ANR	3365444	Callee	av_log		3362328	0					
ANR	3365445	Identifier	av_log		3362328	0					
ANR	3365446	ArgumentList	h -> avctx		3362328	1					
ANR	3365447	Argument	h -> avctx		3362328	0					
ANR	3365448	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3365449	Identifier	h		3362328	0					
ANR	3365450	Identifier	avctx		3362328	1					
ANR	3365451	Argument	AV_LOG_ERROR		3362328	1					
ANR	3365452	Identifier	AV_LOG_ERROR		3362328	0					
ANR	3365453	Argument	"""gray chroma\\n"""		3362328	2					
ANR	3365454	PrimaryExpression	"""gray chroma\\n"""		3362328	0					
ANR	3365455	ReturnStatement	return AVERROR_INVALIDDATA ;	769:12:16931:16957	3362328	1	True				
ANR	3365456	Identifier	AVERROR_INVALIDDATA		3362328	0					
ANR	3365457	IfStatement	if ( dct8x8_allowed && ( cbp & 15 ) && ! IS_INTRA ( mb_type ) )		3362328	22					
ANR	3365458	Condition	dct8x8_allowed && ( cbp & 15 ) && ! IS_INTRA ( mb_type )	777:7:16987:17034	3362328	0	True				
ANR	3365459	AndExpression	dct8x8_allowed && ( cbp & 15 ) && ! IS_INTRA ( mb_type )		3362328	0		&&			
ANR	3365460	Identifier	dct8x8_allowed		3362328	0					
ANR	3365461	AndExpression	( cbp & 15 ) && ! IS_INTRA ( mb_type )		3362328	1		&&			
ANR	3365462	BitAndExpression	cbp & 15		3362328	0		&			
ANR	3365463	Identifier	cbp		3362328	0					
ANR	3365464	PrimaryExpression	15		3362328	1					
ANR	3365465	UnaryOperationExpression	! IS_INTRA ( mb_type )		3362328	1					
ANR	3365466	UnaryOperator	!		3362328	0					
ANR	3365467	CallExpression	IS_INTRA ( mb_type )		3362328	1					
ANR	3365468	Callee	IS_INTRA		3362328	0					
ANR	3365469	Identifier	IS_INTRA		3362328	0					
ANR	3365470	ArgumentList	mb_type		3362328	1					
ANR	3365471	Argument	mb_type		3362328	0					
ANR	3365472	Identifier	mb_type		3362328	0					
ANR	3365473	CompoundStatement		775:56:16962:16962	3362328	1					
ANR	3365474	ExpressionStatement	mb_type |= MB_TYPE_8x8DCT * get_bits1 ( & sl -> gb )	779:8:17047:17091	3362328	0	True				
ANR	3365475	AssignmentExpression	mb_type |= MB_TYPE_8x8DCT * get_bits1 ( & sl -> gb )		3362328	0		|=			
ANR	3365476	Identifier	mb_type		3362328	0					
ANR	3365477	MultiplicativeExpression	MB_TYPE_8x8DCT * get_bits1 ( & sl -> gb )		3362328	1		*			
ANR	3365478	Identifier	MB_TYPE_8x8DCT		3362328	0					
ANR	3365479	CallExpression	get_bits1 ( & sl -> gb )		3362328	1					
ANR	3365480	Callee	get_bits1		3362328	0					
ANR	3365481	Identifier	get_bits1		3362328	0					
ANR	3365482	ArgumentList	& sl -> gb		3362328	1					
ANR	3365483	Argument	& sl -> gb		3362328	0					
ANR	3365484	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3365485	UnaryOperator	&		3362328	0					
ANR	3365486	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3365487	Identifier	sl		3362328	0					
ANR	3365488	Identifier	gb		3362328	1					
ANR	3365489	ExpressionStatement	sl -> cbp = h -> cbp_table [ mb_xy ] = cbp	783:4:17105:17143	3362328	23	True				
ANR	3365490	AssignmentExpression	sl -> cbp = h -> cbp_table [ mb_xy ] = cbp		3362328	0		=			
ANR	3365491	PtrMemberAccess	sl -> cbp		3362328	0					
ANR	3365492	Identifier	sl		3362328	0					
ANR	3365493	Identifier	cbp		3362328	1					
ANR	3365494	AssignmentExpression	h -> cbp_table [ mb_xy ] = cbp		3362328	1		=			
ANR	3365495	ArrayIndexing	h -> cbp_table [ mb_xy ]		3362328	0					
ANR	3365496	PtrMemberAccess	h -> cbp_table		3362328	0					
ANR	3365497	Identifier	h		3362328	0					
ANR	3365498	Identifier	cbp_table		3362328	1					
ANR	3365499	Identifier	mb_xy		3362328	1					
ANR	3365500	Identifier	cbp		3362328	1					
ANR	3365501	ExpressionStatement	h -> cur_pic . mb_type [ mb_xy ] = mb_type	787:4:17150:17185	3362328	24	True				
ANR	3365502	AssignmentExpression	h -> cur_pic . mb_type [ mb_xy ] = mb_type		3362328	0		=			
ANR	3365503	ArrayIndexing	h -> cur_pic . mb_type [ mb_xy ]		3362328	0					
ANR	3365504	MemberAccess	h -> cur_pic . mb_type		3362328	0					
ANR	3365505	PtrMemberAccess	h -> cur_pic		3362328	0					
ANR	3365506	Identifier	h		3362328	0					
ANR	3365507	Identifier	cur_pic		3362328	1					
ANR	3365508	Identifier	mb_type		3362328	1					
ANR	3365509	Identifier	mb_xy		3362328	1					
ANR	3365510	Identifier	mb_type		3362328	1					
ANR	3365511	IfStatement	if ( cbp || IS_INTRA16x16 ( mb_type ) )		3362328	25					
ANR	3365512	Condition	cbp || IS_INTRA16x16 ( mb_type )	791:7:17197:17225	3362328	0	True				
ANR	3365513	OrExpression	cbp || IS_INTRA16x16 ( mb_type )		3362328	0		||			
ANR	3365514	Identifier	cbp		3362328	0					
ANR	3365515	CallExpression	IS_INTRA16x16 ( mb_type )		3362328	1					
ANR	3365516	Callee	IS_INTRA16x16		3362328	0					
ANR	3365517	Identifier	IS_INTRA16x16		3362328	0					
ANR	3365518	ArgumentList	mb_type		3362328	1					
ANR	3365519	Argument	mb_type		3362328	0					
ANR	3365520	Identifier	mb_type		3362328	0					
ANR	3365521	CompoundStatement		801:8:17318:17377	3362328	1					
ANR	3365522	IdentifierDeclStatement	"int i4x4 , i8x8 , chroma_idx ;"	793:8:17238:17264	3362328	0	True				
ANR	3365523	IdentifierDecl	i4x4		3362328	0					
ANR	3365524	IdentifierDeclType	int		3362328	0					
ANR	3365525	Identifier	i4x4		3362328	1					
ANR	3365526	IdentifierDecl	i8x8		3362328	1					
ANR	3365527	IdentifierDeclType	int		3362328	0					
ANR	3365528	Identifier	i8x8		3362328	1					
ANR	3365529	IdentifierDecl	chroma_idx		3362328	2					
ANR	3365530	IdentifierDeclType	int		3362328	0					
ANR	3365531	Identifier	chroma_idx		3362328	1					
ANR	3365532	IdentifierDeclStatement	int dquant ;	795:8:17275:17285	3362328	1	True				
ANR	3365533	IdentifierDecl	dquant		3362328	0					
ANR	3365534	IdentifierDeclType	int		3362328	0					
ANR	3365535	Identifier	dquant		3362328	1					
ANR	3365536	IdentifierDeclStatement	int ret ;	797:8:17296:17303	3362328	2	True				
ANR	3365537	IdentifierDecl	ret		3362328	0					
ANR	3365538	IdentifierDeclType	int		3362328	0					
ANR	3365539	Identifier	ret		3362328	1					
ANR	3365540	IdentifierDeclStatement	GetBitContext * gb = & sl -> gb ;	799:8:17314:17341	3362328	3	True				
ANR	3365541	IdentifierDecl	* gb = & sl -> gb		3362328	0					
ANR	3365542	IdentifierDeclType	GetBitContext *		3362328	0					
ANR	3365543	Identifier	gb		3362328	1					
ANR	3365544	AssignmentExpression	* gb = & sl -> gb		3362328	2		=			
ANR	3365545	Identifier	gb		3362328	0					
ANR	3365546	UnaryOperationExpression	& sl -> gb		3362328	1					
ANR	3365547	UnaryOperator	&		3362328	0					
ANR	3365548	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3365549	Identifier	sl		3362328	0					
ANR	3365550	Identifier	gb		3362328	1					
ANR	3365551	IdentifierDeclStatement	"const uint8_t * scan , * scan8x8 ;"	801:8:17352:17381	3362328	4	True				
ANR	3365552	IdentifierDecl	* scan		3362328	0					
ANR	3365553	IdentifierDeclType	const uint8_t *		3362328	0					
ANR	3365554	Identifier	scan		3362328	1					
ANR	3365555	IdentifierDecl	* scan8x8		3362328	1					
ANR	3365556	IdentifierDeclType	const uint8_t *		3362328	0					
ANR	3365557	Identifier	scan8x8		3362328	1					
ANR	3365558	IdentifierDeclStatement	const int max_qp = 51 + 6 * ( h -> ps . sps -> bit_depth_luma - 8 ) ;	803:8:17392:17451	3362328	5	True				
ANR	3365559	IdentifierDecl	max_qp = 51 + 6 * ( h -> ps . sps -> bit_depth_luma - 8 )		3362328	0					
ANR	3365560	IdentifierDeclType	const int		3362328	0					
ANR	3365561	Identifier	max_qp		3362328	1					
ANR	3365562	AssignmentExpression	max_qp = 51 + 6 * ( h -> ps . sps -> bit_depth_luma - 8 )		3362328	2		=			
ANR	3365563	Identifier	max_qp		3362328	0					
ANR	3365564	AdditiveExpression	51 + 6 * ( h -> ps . sps -> bit_depth_luma - 8 )		3362328	1		+			
ANR	3365565	PrimaryExpression	51		3362328	0					
ANR	3365566	MultiplicativeExpression	6 * ( h -> ps . sps -> bit_depth_luma - 8 )		3362328	1		*			
ANR	3365567	PrimaryExpression	6		3362328	0					
ANR	3365568	AdditiveExpression	h -> ps . sps -> bit_depth_luma - 8		3362328	1		-			
ANR	3365569	PtrMemberAccess	h -> ps . sps -> bit_depth_luma		3362328	0					
ANR	3365570	MemberAccess	h -> ps . sps		3362328	0					
ANR	3365571	PtrMemberAccess	h -> ps		3362328	0					
ANR	3365572	Identifier	h		3362328	0					
ANR	3365573	Identifier	ps		3362328	1					
ANR	3365574	Identifier	sps		3362328	1					
ANR	3365575	Identifier	bit_depth_luma		3362328	1					
ANR	3365576	PrimaryExpression	8		3362328	1					
ANR	3365577	IfStatement	if ( IS_INTERLACED ( mb_type ) )		3362328	6					
ANR	3365578	Condition	IS_INTERLACED ( mb_type )	807:11:17467:17488	3362328	0	True				
ANR	3365579	CallExpression	IS_INTERLACED ( mb_type )		3362328	0					
ANR	3365580	Callee	IS_INTERLACED		3362328	0					
ANR	3365581	Identifier	IS_INTERLACED		3362328	0					
ANR	3365582	ArgumentList	mb_type		3362328	1					
ANR	3365583	Argument	mb_type		3362328	0					
ANR	3365584	Identifier	mb_type		3362328	0					
ANR	3365585	CompoundStatement		805:34:17416:17416	3362328	1					
ANR	3365586	ExpressionStatement	scan8x8 = sl -> qscale ? h -> field_scan8x8_cavlc : h -> field_scan8x8_cavlc_q0	809:12:17505:17578	3362328	0	True				
ANR	3365587	AssignmentExpression	scan8x8 = sl -> qscale ? h -> field_scan8x8_cavlc : h -> field_scan8x8_cavlc_q0		3362328	0		=			
ANR	3365588	Identifier	scan8x8		3362328	0					
ANR	3365589	ConditionalExpression	sl -> qscale ? h -> field_scan8x8_cavlc : h -> field_scan8x8_cavlc_q0		3362328	1					
ANR	3365590	Condition	sl -> qscale		3362328	0					
ANR	3365591	PtrMemberAccess	sl -> qscale		3362328	0					
ANR	3365592	Identifier	sl		3362328	0					
ANR	3365593	Identifier	qscale		3362328	1					
ANR	3365594	PtrMemberAccess	h -> field_scan8x8_cavlc		3362328	1					
ANR	3365595	Identifier	h		3362328	0					
ANR	3365596	Identifier	field_scan8x8_cavlc		3362328	1					
ANR	3365597	PtrMemberAccess	h -> field_scan8x8_cavlc_q0		3362328	2					
ANR	3365598	Identifier	h		3362328	0					
ANR	3365599	Identifier	field_scan8x8_cavlc_q0		3362328	1					
ANR	3365600	ExpressionStatement	scan = sl -> qscale ? h -> field_scan : h -> field_scan_q0	811:12:17593:17648	3362328	1	True				
ANR	3365601	AssignmentExpression	scan = sl -> qscale ? h -> field_scan : h -> field_scan_q0		3362328	0		=			
ANR	3365602	Identifier	scan		3362328	0					
ANR	3365603	ConditionalExpression	sl -> qscale ? h -> field_scan : h -> field_scan_q0		3362328	1					
ANR	3365604	Condition	sl -> qscale		3362328	0					
ANR	3365605	PtrMemberAccess	sl -> qscale		3362328	0					
ANR	3365606	Identifier	sl		3362328	0					
ANR	3365607	Identifier	qscale		3362328	1					
ANR	3365608	PtrMemberAccess	h -> field_scan		3362328	1					
ANR	3365609	Identifier	h		3362328	0					
ANR	3365610	Identifier	field_scan		3362328	1					
ANR	3365611	PtrMemberAccess	h -> field_scan_q0		3362328	2					
ANR	3365612	Identifier	h		3362328	0					
ANR	3365613	Identifier	field_scan_q0		3362328	1					
ANR	3365614	ElseStatement	else		3362328	0					
ANR	3365615	CompoundStatement		811:13:17590:17590	3362328	0					
ANR	3365616	ExpressionStatement	scan8x8 = sl -> qscale ? h -> zigzag_scan8x8_cavlc : h -> zigzag_scan8x8_cavlc_q0	815:12:17679:17754	3362328	0	True				
ANR	3365617	AssignmentExpression	scan8x8 = sl -> qscale ? h -> zigzag_scan8x8_cavlc : h -> zigzag_scan8x8_cavlc_q0		3362328	0		=			
ANR	3365618	Identifier	scan8x8		3362328	0					
ANR	3365619	ConditionalExpression	sl -> qscale ? h -> zigzag_scan8x8_cavlc : h -> zigzag_scan8x8_cavlc_q0		3362328	1					
ANR	3365620	Condition	sl -> qscale		3362328	0					
ANR	3365621	PtrMemberAccess	sl -> qscale		3362328	0					
ANR	3365622	Identifier	sl		3362328	0					
ANR	3365623	Identifier	qscale		3362328	1					
ANR	3365624	PtrMemberAccess	h -> zigzag_scan8x8_cavlc		3362328	1					
ANR	3365625	Identifier	h		3362328	0					
ANR	3365626	Identifier	zigzag_scan8x8_cavlc		3362328	1					
ANR	3365627	PtrMemberAccess	h -> zigzag_scan8x8_cavlc_q0		3362328	2					
ANR	3365628	Identifier	h		3362328	0					
ANR	3365629	Identifier	zigzag_scan8x8_cavlc_q0		3362328	1					
ANR	3365630	ExpressionStatement	scan = sl -> qscale ? h -> zigzag_scan : h -> zigzag_scan_q0	817:12:17769:17826	3362328	1	True				
ANR	3365631	AssignmentExpression	scan = sl -> qscale ? h -> zigzag_scan : h -> zigzag_scan_q0		3362328	0		=			
ANR	3365632	Identifier	scan		3362328	0					
ANR	3365633	ConditionalExpression	sl -> qscale ? h -> zigzag_scan : h -> zigzag_scan_q0		3362328	1					
ANR	3365634	Condition	sl -> qscale		3362328	0					
ANR	3365635	PtrMemberAccess	sl -> qscale		3362328	0					
ANR	3365636	Identifier	sl		3362328	0					
ANR	3365637	Identifier	qscale		3362328	1					
ANR	3365638	PtrMemberAccess	h -> zigzag_scan		3362328	1					
ANR	3365639	Identifier	h		3362328	0					
ANR	3365640	Identifier	zigzag_scan		3362328	1					
ANR	3365641	PtrMemberAccess	h -> zigzag_scan_q0		3362328	2					
ANR	3365642	Identifier	h		3362328	0					
ANR	3365643	Identifier	zigzag_scan_q0		3362328	1					
ANR	3365644	ExpressionStatement	dquant = get_se_golomb ( & sl -> gb )	823:8:17850:17880	3362328	7	True				
ANR	3365645	AssignmentExpression	dquant = get_se_golomb ( & sl -> gb )		3362328	0		=			
ANR	3365646	Identifier	dquant		3362328	0					
ANR	3365647	CallExpression	get_se_golomb ( & sl -> gb )		3362328	1					
ANR	3365648	Callee	get_se_golomb		3362328	0					
ANR	3365649	Identifier	get_se_golomb		3362328	0					
ANR	3365650	ArgumentList	& sl -> gb		3362328	1					
ANR	3365651	Argument	& sl -> gb		3362328	0					
ANR	3365652	UnaryOperationExpression	& sl -> gb		3362328	0					
ANR	3365653	UnaryOperator	&		3362328	0					
ANR	3365654	PtrMemberAccess	sl -> gb		3362328	1					
ANR	3365655	Identifier	sl		3362328	0					
ANR	3365656	Identifier	gb		3362328	1					
ANR	3365657	ExpressionStatement	sl -> qscale += dquant	827:8:17893:17913	3362328	8	True				
ANR	3365658	AssignmentExpression	sl -> qscale += dquant		3362328	0		+=			
ANR	3365659	PtrMemberAccess	sl -> qscale		3362328	0					
ANR	3365660	Identifier	sl		3362328	0					
ANR	3365661	Identifier	qscale		3362328	1					
ANR	3365662	Identifier	dquant		3362328	1					
ANR	3365663	IfStatement	if ( ( ( unsigned ) sl -> qscale ) > max_qp )		3362328	9					
ANR	3365664	Condition	( ( unsigned ) sl -> qscale ) > max_qp	831:12:17930:17960	3362328	0	True				
ANR	3365665	RelationalExpression	( ( unsigned ) sl -> qscale ) > max_qp		3362328	0		>			
ANR	3365666	CastExpression	( unsigned ) sl -> qscale		3362328	0					
ANR	3365667	CastTarget	unsigned		3362328	0					
ANR	3365668	PtrMemberAccess	sl -> qscale		3362328	1					
ANR	3365669	Identifier	sl		3362328	0					
ANR	3365670	Identifier	qscale		3362328	1					
ANR	3365671	Identifier	max_qp		3362328	1					
ANR	3365672	CompoundStatement		829:44:17888:17888	3362328	1					
ANR	3365673	IfStatement	if ( sl -> qscale < 0 )		3362328	0					
ANR	3365674	Condition	sl -> qscale < 0	833:16:17981:17994	3362328	0	True				
ANR	3365675	RelationalExpression	sl -> qscale < 0		3362328	0		<			
ANR	3365676	PtrMemberAccess	sl -> qscale		3362328	0					
ANR	3365677	Identifier	sl		3362328	0					
ANR	3365678	Identifier	qscale		3362328	1					
ANR	3365679	PrimaryExpression	0		3362328	1					
ANR	3365680	ExpressionStatement	sl -> qscale += max_qp + 1	833:32:17997:18021	3362328	1	True				
ANR	3365681	AssignmentExpression	sl -> qscale += max_qp + 1		3362328	0		+=			
ANR	3365682	PtrMemberAccess	sl -> qscale		3362328	0					
ANR	3365683	Identifier	sl		3362328	0					
ANR	3365684	Identifier	qscale		3362328	1					
ANR	3365685	AdditiveExpression	max_qp + 1		3362328	1		+			
ANR	3365686	Identifier	max_qp		3362328	0					
ANR	3365687	PrimaryExpression	1		3362328	1					
ANR	3365688	ElseStatement	else		3362328	0					
ANR	3365689	ExpressionStatement	sl -> qscale -= max_qp + 1	835:32:18056:18078	3362328	0	True				
ANR	3365690	AssignmentExpression	sl -> qscale -= max_qp + 1		3362328	0		-=			
ANR	3365691	PtrMemberAccess	sl -> qscale		3362328	0					
ANR	3365692	Identifier	sl		3362328	0					
ANR	3365693	Identifier	qscale		3362328	1					
ANR	3365694	AdditiveExpression	max_qp + 1		3362328	1		+			
ANR	3365695	Identifier	max_qp		3362328	0					
ANR	3365696	PrimaryExpression	1		3362328	1					
ANR	3365697	IfStatement	if ( ( ( unsigned ) sl -> qscale ) > max_qp )		3362328	1					
ANR	3365698	Condition	( ( unsigned ) sl -> qscale ) > max_qp	837:16:18097:18127	3362328	0	True				
ANR	3365699	RelationalExpression	( ( unsigned ) sl -> qscale ) > max_qp		3362328	0		>			
ANR	3365700	CastExpression	( unsigned ) sl -> qscale		3362328	0					
ANR	3365701	CastTarget	unsigned		3362328	0					
ANR	3365702	PtrMemberAccess	sl -> qscale		3362328	1					
ANR	3365703	Identifier	sl		3362328	0					
ANR	3365704	Identifier	qscale		3362328	1					
ANR	3365705	Identifier	max_qp		3362328	1					
ANR	3365706	CompoundStatement		835:48:18055:18055	3362328	1					
ANR	3365707	ExpressionStatement	"av_log ( h -> avctx , AV_LOG_ERROR , ""dquant out of range (%d) at %d %d\\n"" , dquant , sl -> mb_x , sl -> mb_y )"	839:16:18148:18245	3362328	0	True				
ANR	3365708	CallExpression	"av_log ( h -> avctx , AV_LOG_ERROR , ""dquant out of range (%d) at %d %d\\n"" , dquant , sl -> mb_x , sl -> mb_y )"		3362328	0					
ANR	3365709	Callee	av_log		3362328	0					
ANR	3365710	Identifier	av_log		3362328	0					
ANR	3365711	ArgumentList	h -> avctx		3362328	1					
ANR	3365712	Argument	h -> avctx		3362328	0					
ANR	3365713	PtrMemberAccess	h -> avctx		3362328	0					
ANR	3365714	Identifier	h		3362328	0					
ANR	3365715	Identifier	avctx		3362328	1					
ANR	3365716	Argument	AV_LOG_ERROR		3362328	1					
ANR	3365717	Identifier	AV_LOG_ERROR		3362328	0					
ANR	3365718	Argument	"""dquant out of range (%d) at %d %d\\n"""		3362328	2					
ANR	3365719	PrimaryExpression	"""dquant out of range (%d) at %d %d\\n"""		3362328	0					
ANR	3365720	Argument	dquant		3362328	3					
ANR	3365721	Identifier	dquant		3362328	0					
ANR	3365722	Argument	sl -> mb_x		3362328	4					
ANR	3365723	PtrMemberAccess	sl -> mb_x		3362328	0					
ANR	3365724	Identifier	sl		3362328	0					
ANR	3365725	Identifier	mb_x		3362328	1					
ANR	3365726	Argument	sl -> mb_y		3362328	5					
ANR	3365727	PtrMemberAccess	sl -> mb_y		3362328	0					
ANR	3365728	Identifier	sl		3362328	0					
ANR	3365729	Identifier	mb_y		3362328	1					
ANR	3365730	ReturnStatement	return - 1 ;	841:16:18264:18273	3362328	1	True				
ANR	3365731	UnaryOperationExpression	- 1		3362328	0					
ANR	3365732	UnaryOperator	-		3362328	0					
ANR	3365733	PrimaryExpression	1		3362328	1					
ANR	3365734	ExpressionStatement	"sl -> chroma_qp [ 0 ] = get_chroma_qp ( h -> ps . pps , 0 , sl -> qscale )"	849:8:18312:18370	3362328	10	True				
ANR	3365735	AssignmentExpression	"sl -> chroma_qp [ 0 ] = get_chroma_qp ( h -> ps . pps , 0 , sl -> qscale )"		3362328	0		=			
ANR	3365736	ArrayIndexing	sl -> chroma_qp [ 0 ]		3362328	0					
ANR	3365737	PtrMemberAccess	sl -> chroma_qp		3362328	0					
ANR	3365738	Identifier	sl		3362328	0					
ANR	3365739	Identifier	chroma_qp		3362328	1					
ANR	3365740	PrimaryExpression	0		3362328	1					
ANR	3365741	CallExpression	"get_chroma_qp ( h -> ps . pps , 0 , sl -> qscale )"		3362328	1					
ANR	3365742	Callee	get_chroma_qp		3362328	0					
ANR	3365743	Identifier	get_chroma_qp		3362328	0					
ANR	3365744	ArgumentList	h -> ps . pps		3362328	1					
ANR	3365745	Argument	h -> ps . pps		3362328	0					
ANR	3365746	MemberAccess	h -> ps . pps		3362328	0					
ANR	3365747	PtrMemberAccess	h -> ps		3362328	0					
ANR	3365748	Identifier	h		3362328	0					
ANR	3365749	Identifier	ps		3362328	1					
ANR	3365750	Identifier	pps		3362328	1					
ANR	3365751	Argument	0		3362328	1					
ANR	3365752	PrimaryExpression	0		3362328	0					
ANR	3365753	Argument	sl -> qscale		3362328	2					
ANR	3365754	PtrMemberAccess	sl -> qscale		3362328	0					
ANR	3365755	Identifier	sl		3362328	0					
ANR	3365756	Identifier	qscale		3362328	1					
ANR	3365757	ExpressionStatement	"sl -> chroma_qp [ 1 ] = get_chroma_qp ( h -> ps . pps , 1 , sl -> qscale )"	851:8:18381:18439	3362328	11	True				
ANR	3365758	AssignmentExpression	"sl -> chroma_qp [ 1 ] = get_chroma_qp ( h -> ps . pps , 1 , sl -> qscale )"		3362328	0		=			
ANR	3365759	ArrayIndexing	sl -> chroma_qp [ 1 ]		3362328	0					
ANR	3365760	PtrMemberAccess	sl -> chroma_qp		3362328	0					
ANR	3365761	Identifier	sl		3362328	0					
ANR	3365762	Identifier	chroma_qp		3362328	1					
ANR	3365763	PrimaryExpression	1		3362328	1					
ANR	3365764	CallExpression	"get_chroma_qp ( h -> ps . pps , 1 , sl -> qscale )"		3362328	1					
ANR	3365765	Callee	get_chroma_qp		3362328	0					
ANR	3365766	Identifier	get_chroma_qp		3362328	0					
ANR	3365767	ArgumentList	h -> ps . pps		3362328	1					
ANR	3365768	Argument	h -> ps . pps		3362328	0					
ANR	3365769	MemberAccess	h -> ps . pps		3362328	0					
ANR	3365770	PtrMemberAccess	h -> ps		3362328	0					
ANR	3365771	Identifier	h		3362328	0					
ANR	3365772	Identifier	ps		3362328	1					
ANR	3365773	Identifier	pps		3362328	1					
ANR	3365774	Argument	1		3362328	1					
ANR	3365775	PrimaryExpression	1		3362328	0					
ANR	3365776	Argument	sl -> qscale		3362328	2					
ANR	3365777	PtrMemberAccess	sl -> qscale		3362328	0					
ANR	3365778	Identifier	sl		3362328	0					
ANR	3365779	Identifier	qscale		3362328	1					
ANR	3365780	IfStatement	"if ( ( ret = decode_luma_residual ( h , sl , gb , scan , scan8x8 , pixel_shift , mb_type , cbp , 0 ) ) < 0 )"		3362328	12					
ANR	3365781	Condition	"( ret = decode_luma_residual ( h , sl , gb , scan , scan8x8 , pixel_shift , mb_type , cbp , 0 ) ) < 0"	855:12:18456:18543	3362328	0	True				
ANR	3365782	RelationalExpression	"( ret = decode_luma_residual ( h , sl , gb , scan , scan8x8 , pixel_shift , mb_type , cbp , 0 ) ) < 0"		3362328	0		<			
ANR	3365783	AssignmentExpression	"ret = decode_luma_residual ( h , sl , gb , scan , scan8x8 , pixel_shift , mb_type , cbp , 0 )"		3362328	0		=			
ANR	3365784	Identifier	ret		3362328	0					
ANR	3365785	CallExpression	"decode_luma_residual ( h , sl , gb , scan , scan8x8 , pixel_shift , mb_type , cbp , 0 )"		3362328	1					
ANR	3365786	Callee	decode_luma_residual		3362328	0					
ANR	3365787	Identifier	decode_luma_residual		3362328	0					
ANR	3365788	ArgumentList	h		3362328	1					
ANR	3365789	Argument	h		3362328	0					
ANR	3365790	Identifier	h		3362328	0					
ANR	3365791	Argument	sl		3362328	1					
ANR	3365792	Identifier	sl		3362328	0					
ANR	3365793	Argument	gb		3362328	2					
ANR	3365794	Identifier	gb		3362328	0					
ANR	3365795	Argument	scan		3362328	3					
ANR	3365796	Identifier	scan		3362328	0					
ANR	3365797	Argument	scan8x8		3362328	4					
ANR	3365798	Identifier	scan8x8		3362328	0					
ANR	3365799	Argument	pixel_shift		3362328	5					
ANR	3365800	Identifier	pixel_shift		3362328	0					
ANR	3365801	Argument	mb_type		3362328	6					
ANR	3365802	Identifier	mb_type		3362328	0					
ANR	3365803	Argument	cbp		3362328	7					
ANR	3365804	Identifier	cbp		3362328	0					
ANR	3365805	Argument	0		3362328	8					
ANR	3365806	PrimaryExpression	0		3362328	0					
ANR	3365807	PrimaryExpression	0		3362328	1					
ANR	3365808	CompoundStatement		853:103:18473:18473	3362328	1					
ANR	3365809	ReturnStatement	return - 1 ;	857:12:18562:18571	3362328	0	True				
ANR	3365810	UnaryOperationExpression	- 1		3362328	0					
ANR	3365811	UnaryOperator	-		3362328	0					
ANR	3365812	PrimaryExpression	1		3362328	1					
ANR	3365813	ExpressionStatement	h -> cbp_table [ mb_xy ] |= ret << 12	861:8:18593:18625	3362328	13	True				
ANR	3365814	AssignmentExpression	h -> cbp_table [ mb_xy ] |= ret << 12		3362328	0		|=			
ANR	3365815	ArrayIndexing	h -> cbp_table [ mb_xy ]		3362328	0					
ANR	3365816	PtrMemberAccess	h -> cbp_table		3362328	0					
ANR	3365817	Identifier	h		3362328	0					
ANR	3365818	Identifier	cbp_table		3362328	1					
ANR	3365819	Identifier	mb_xy		3362328	1					
ANR	3365820	ShiftExpression	ret << 12		3362328	1		<<			
ANR	3365821	Identifier	ret		3362328	0					
ANR	3365822	PrimaryExpression	12		3362328	1					
ANR	3365823	IfStatement	if ( CHROMA444 ( h ) )		3362328	14					
ANR	3365824	Condition	CHROMA444 ( h )	863:12:18640:18651	3362328	0	True				
ANR	3365825	CallExpression	CHROMA444 ( h )		3362328	0					
ANR	3365826	Callee	CHROMA444		3362328	0					
ANR	3365827	Identifier	CHROMA444		3362328	0					
ANR	3365828	ArgumentList	h		3362328	1					
ANR	3365829	Argument	h		3362328	0					
ANR	3365830	Identifier	h		3362328	0					
ANR	3365831	CompoundStatement		861:26:18580:18580	3362328	1					
ANR	3365832	IfStatement	"if ( decode_luma_residual ( h , sl , gb , scan , scan8x8 , pixel_shift , mb_type , cbp , 1 ) < 0 )"		3362328	0					
ANR	3365833	Condition	"decode_luma_residual ( h , sl , gb , scan , scan8x8 , pixel_shift , mb_type , cbp , 1 ) < 0"	865:16:18673:18752	3362328	0	True				
ANR	3365834	RelationalExpression	"decode_luma_residual ( h , sl , gb , scan , scan8x8 , pixel_shift , mb_type , cbp , 1 ) < 0"		3362328	0		<			
ANR	3365835	CallExpression	"decode_luma_residual ( h , sl , gb , scan , scan8x8 , pixel_shift , mb_type , cbp , 1 )"		3362328	0					
ANR	3365836	Callee	decode_luma_residual		3362328	0					
ANR	3365837	Identifier	decode_luma_residual		3362328	0					
ANR	3365838	ArgumentList	h		3362328	1					
ANR	3365839	Argument	h		3362328	0					
ANR	3365840	Identifier	h		3362328	0					
ANR	3365841	Argument	sl		3362328	1					
ANR	3365842	Identifier	sl		3362328	0					
ANR	3365843	Argument	gb		3362328	2					
ANR	3365844	Identifier	gb		3362328	0					
ANR	3365845	Argument	scan		3362328	3					
ANR	3365846	Identifier	scan		3362328	0					
ANR	3365847	Argument	scan8x8		3362328	4					
ANR	3365848	Identifier	scan8x8		3362328	0					
ANR	3365849	Argument	pixel_shift		3362328	5					
ANR	3365850	Identifier	pixel_shift		3362328	0					
ANR	3365851	Argument	mb_type		3362328	6					
ANR	3365852	Identifier	mb_type		3362328	0					
ANR	3365853	Argument	cbp		3362328	7					
ANR	3365854	Identifier	cbp		3362328	0					
ANR	3365855	Argument	1		3362328	8					
ANR	3365856	PrimaryExpression	1		3362328	0					
ANR	3365857	PrimaryExpression	0		3362328	1					
ANR	3365858	CompoundStatement		863:99:18682:18682	3362328	1					
ANR	3365859	ReturnStatement	return - 1 ;	867:16:18775:18784	3362328	0	True				
ANR	3365860	UnaryOperationExpression	- 1		3362328	0					
ANR	3365861	UnaryOperator	-		3362328	0					
ANR	3365862	PrimaryExpression	1		3362328	1					
ANR	3365863	IfStatement	"if ( decode_luma_residual ( h , sl , gb , scan , scan8x8 , pixel_shift , mb_type , cbp , 2 ) < 0 )"		3362328	1					
ANR	3365864	Condition	"decode_luma_residual ( h , sl , gb , scan , scan8x8 , pixel_shift , mb_type , cbp , 2 ) < 0"	871:16:18818:18897	3362328	0	True				
ANR	3365865	RelationalExpression	"decode_luma_residual ( h , sl , gb , scan , scan8x8 , pixel_shift , mb_type , cbp , 2 ) < 0"		3362328	0		<			
ANR	3365866	CallExpression	"decode_luma_residual ( h , sl , gb , scan , scan8x8 , pixel_shift , mb_type , cbp , 2 )"		3362328	0					
ANR	3365867	Callee	decode_luma_residual		3362328	0					
ANR	3365868	Identifier	decode_luma_residual		3362328	0					
ANR	3365869	ArgumentList	h		3362328	1					
ANR	3365870	Argument	h		3362328	0					
ANR	3365871	Identifier	h		3362328	0					
ANR	3365872	Argument	sl		3362328	1					
ANR	3365873	Identifier	sl		3362328	0					
ANR	3365874	Argument	gb		3362328	2					
ANR	3365875	Identifier	gb		3362328	0					
ANR	3365876	Argument	scan		3362328	3					
ANR	3365877	Identifier	scan		3362328	0					
ANR	3365878	Argument	scan8x8		3362328	4					
ANR	3365879	Identifier	scan8x8		3362328	0					
ANR	3365880	Argument	pixel_shift		3362328	5					
ANR	3365881	Identifier	pixel_shift		3362328	0					
ANR	3365882	Argument	mb_type		3362328	6					
ANR	3365883	Identifier	mb_type		3362328	0					
ANR	3365884	Argument	cbp		3362328	7					
ANR	3365885	Identifier	cbp		3362328	0					
ANR	3365886	Argument	2		3362328	8					
ANR	3365887	PrimaryExpression	2		3362328	0					
ANR	3365888	PrimaryExpression	0		3362328	1					
ANR	3365889	CompoundStatement		869:99:18827:18827	3362328	1					
ANR	3365890	ReturnStatement	return - 1 ;	873:16:18920:18929	3362328	0	True				
ANR	3365891	UnaryOperationExpression	- 1		3362328	0					
ANR	3365892	UnaryOperator	-		3362328	0					
ANR	3365893	PrimaryExpression	1		3362328	1					
ANR	3365894	ElseStatement	else		3362328	0					
ANR	3365895	CompoundStatement		877:12:18903:18952	3362328	0					
ANR	3365896	IdentifierDeclStatement	const int num_c8x8 = h -> ps . sps -> chroma_format_idc ;	879:12:18977:19026	3362328	0	True				
ANR	3365897	IdentifierDecl	num_c8x8 = h -> ps . sps -> chroma_format_idc		3362328	0					
ANR	3365898	IdentifierDeclType	const int		3362328	0					
ANR	3365899	Identifier	num_c8x8		3362328	1					
ANR	3365900	AssignmentExpression	num_c8x8 = h -> ps . sps -> chroma_format_idc		3362328	2		=			
ANR	3365901	Identifier	num_c8x8		3362328	0					
ANR	3365902	PtrMemberAccess	h -> ps . sps -> chroma_format_idc		3362328	1					
ANR	3365903	MemberAccess	h -> ps . sps		3362328	0					
ANR	3365904	PtrMemberAccess	h -> ps		3362328	0					
ANR	3365905	Identifier	h		3362328	0					
ANR	3365906	Identifier	ps		3362328	1					
ANR	3365907	Identifier	sps		3362328	1					
ANR	3365908	Identifier	chroma_format_idc		3362328	1					
ANR	3365909	IfStatement	if ( cbp & 0x30 )		3362328	1					
ANR	3365910	Condition	cbp & 0x30	883:15:19046:19053	3362328	0	True				
ANR	3365911	BitAndExpression	cbp & 0x30		3362328	0		&			
ANR	3365912	Identifier	cbp		3362328	0					
ANR	3365913	PrimaryExpression	0x30		3362328	1					
ANR	3365914	CompoundStatement		881:24:18981:18981	3362328	1					
ANR	3365915	ForStatement	for ( chroma_idx = 0 ; chroma_idx < 2 ; chroma_idx ++ )		3362328	0					
ANR	3365916	ForInit	chroma_idx = 0 ;	885:20:19078:19090	3362328	0	True				
ANR	3365917	AssignmentExpression	chroma_idx = 0		3362328	0		=			
ANR	3365918	Identifier	chroma_idx		3362328	0					
ANR	3365919	PrimaryExpression	0		3362328	1					
ANR	3365920	Condition	chroma_idx < 2	885:34:19092:19103	3362328	1	True				
ANR	3365921	RelationalExpression	chroma_idx < 2		3362328	0		<			
ANR	3365922	Identifier	chroma_idx		3362328	0					
ANR	3365923	PrimaryExpression	2		3362328	1					
ANR	3365924	PostIncDecOperationExpression	chroma_idx ++	885:48:19106:19117	3362328	2	True				
ANR	3365925	Identifier	chroma_idx		3362328	0					
ANR	3365926	IncDec	++		3362328	1					
ANR	3365927	IfStatement	"if ( decode_residual ( h , sl , gb , sl -> mb + ( ( 256 + 16 * 16 * chroma_idx ) << pixel_shift ) , CHROMA_DC_BLOCK_INDEX + chroma_idx , CHROMA422 ( h ) ? ff_h264_chroma422_dc_scan : ff_h264_chroma_dc_scan , NULL , 4 * num_c8x8 ) < 0 )"		3362328	3					
ANR	3365928	Condition	"decode_residual ( h , sl , gb , sl -> mb + ( ( 256 + 16 * 16 * chroma_idx ) << pixel_shift ) , CHROMA_DC_BLOCK_INDEX + chroma_idx , CHROMA422 ( h ) ? ff_h264_chroma422_dc_scan : ff_h264_chroma_dc_scan , NULL , 4 * num_c8x8 ) < 0"	887:24:19145:19472	3362328	0	True				
ANR	3365929	RelationalExpression	"decode_residual ( h , sl , gb , sl -> mb + ( ( 256 + 16 * 16 * chroma_idx ) << pixel_shift ) , CHROMA_DC_BLOCK_INDEX + chroma_idx , CHROMA422 ( h ) ? ff_h264_chroma422_dc_scan : ff_h264_chroma_dc_scan , NULL , 4 * num_c8x8 ) < 0"		3362328	0		<			
ANR	3365930	CallExpression	"decode_residual ( h , sl , gb , sl -> mb + ( ( 256 + 16 * 16 * chroma_idx ) << pixel_shift ) , CHROMA_DC_BLOCK_INDEX + chroma_idx , CHROMA422 ( h ) ? ff_h264_chroma422_dc_scan : ff_h264_chroma_dc_scan , NULL , 4 * num_c8x8 )"		3362328	0					
ANR	3365931	Callee	decode_residual		3362328	0					
ANR	3365932	Identifier	decode_residual		3362328	0					
ANR	3365933	ArgumentList	h		3362328	1					
ANR	3365934	Argument	h		3362328	0					
ANR	3365935	Identifier	h		3362328	0					
ANR	3365936	Argument	sl		3362328	1					
ANR	3365937	Identifier	sl		3362328	0					
ANR	3365938	Argument	gb		3362328	2					
ANR	3365939	Identifier	gb		3362328	0					
ANR	3365940	Argument	sl -> mb + ( ( 256 + 16 * 16 * chroma_idx ) << pixel_shift )		3362328	3					
ANR	3365941	AdditiveExpression	sl -> mb + ( ( 256 + 16 * 16 * chroma_idx ) << pixel_shift )		3362328	0		+			
ANR	3365942	PtrMemberAccess	sl -> mb		3362328	0					
ANR	3365943	Identifier	sl		3362328	0					
ANR	3365944	Identifier	mb		3362328	1					
ANR	3365945	ShiftExpression	( 256 + 16 * 16 * chroma_idx ) << pixel_shift		3362328	1		<<			
ANR	3365946	AdditiveExpression	256 + 16 * 16 * chroma_idx		3362328	0		+			
ANR	3365947	PrimaryExpression	256		3362328	0					
ANR	3365948	MultiplicativeExpression	16 * 16 * chroma_idx		3362328	1		*			
ANR	3365949	PrimaryExpression	16		3362328	0					
ANR	3365950	MultiplicativeExpression	16 * chroma_idx		3362328	1		*			
ANR	3365951	PrimaryExpression	16		3362328	0					
ANR	3365952	Identifier	chroma_idx		3362328	1					
ANR	3365953	Identifier	pixel_shift		3362328	1					
ANR	3365954	Argument	CHROMA_DC_BLOCK_INDEX + chroma_idx		3362328	4					
ANR	3365955	AdditiveExpression	CHROMA_DC_BLOCK_INDEX + chroma_idx		3362328	0		+			
ANR	3365956	Identifier	CHROMA_DC_BLOCK_INDEX		3362328	0					
ANR	3365957	Identifier	chroma_idx		3362328	1					
ANR	3365958	Argument	CHROMA422 ( h ) ? ff_h264_chroma422_dc_scan : ff_h264_chroma_dc_scan		3362328	5					
ANR	3365959	ConditionalExpression	CHROMA422 ( h ) ? ff_h264_chroma422_dc_scan : ff_h264_chroma_dc_scan		3362328	0					
ANR	3365960	Condition	CHROMA422 ( h )		3362328	0					
ANR	3365961	CallExpression	CHROMA422 ( h )		3362328	0					
ANR	3365962	Callee	CHROMA422		3362328	0					
ANR	3365963	Identifier	CHROMA422		3362328	0					
ANR	3365964	ArgumentList	h		3362328	1					
ANR	3365965	Argument	h		3362328	0					
ANR	3365966	Identifier	h		3362328	0					
ANR	3365967	Identifier	ff_h264_chroma422_dc_scan		3362328	1					
ANR	3365968	Identifier	ff_h264_chroma_dc_scan		3362328	2					
ANR	3365969	Argument	NULL		3362328	6					
ANR	3365970	Identifier	NULL		3362328	0					
ANR	3365971	Argument	4 * num_c8x8		3362328	7					
ANR	3365972	MultiplicativeExpression	4 * num_c8x8		3362328	0		*			
ANR	3365973	PrimaryExpression	4		3362328	0					
ANR	3365974	Identifier	num_c8x8		3362328	1					
ANR	3365975	PrimaryExpression	0		3362328	1					
ANR	3365976	CompoundStatement		891:65:19401:19401	3362328	1					
ANR	3365977	ReturnStatement	return - 1 ;	895:24:19502:19511	3362328	0	True				
ANR	3365978	UnaryOperationExpression	- 1		3362328	0					
ANR	3365979	UnaryOperator	-		3362328	0					
ANR	3365980	PrimaryExpression	1		3362328	1					
ANR	3365981	IfStatement	if ( cbp & 0x20 )		3362328	2					
ANR	3365982	Condition	cbp & 0x20	903:15:19569:19576	3362328	0	True				
ANR	3365983	BitAndExpression	cbp & 0x20		3362328	0		&			
ANR	3365984	Identifier	cbp		3362328	0					
ANR	3365985	PrimaryExpression	0x20		3362328	1					
ANR	3365986	CompoundStatement		901:24:19504:19504	3362328	1					
ANR	3365987	ForStatement	for ( chroma_idx = 0 ; chroma_idx < 2 ; chroma_idx ++ )		3362328	0					
ANR	3365988	ForInit	chroma_idx = 0 ;	905:20:19601:19613	3362328	0	True				
ANR	3365989	AssignmentExpression	chroma_idx = 0		3362328	0		=			
ANR	3365990	Identifier	chroma_idx		3362328	0					
ANR	3365991	PrimaryExpression	0		3362328	1					
ANR	3365992	Condition	chroma_idx < 2	905:34:19615:19626	3362328	1	True				
ANR	3365993	RelationalExpression	chroma_idx < 2		3362328	0		<			
ANR	3365994	Identifier	chroma_idx		3362328	0					
ANR	3365995	PrimaryExpression	2		3362328	1					
ANR	3365996	PostIncDecOperationExpression	chroma_idx ++	905:48:19629:19640	3362328	2	True				
ANR	3365997	Identifier	chroma_idx		3362328	0					
ANR	3365998	IncDec	++		3362328	1					
ANR	3365999	CompoundStatement		907:20:19731:19794	3362328	3					
ANR	3366000	IdentifierDeclStatement	const uint32_t * qmul = h -> ps . pps -> dequant4_coeff [ chroma_idx + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ sl -> chroma_qp [ chroma_idx ] ] ;	907:20:19665:19782	3362328	0	True				
ANR	3366001	IdentifierDecl	* qmul = h -> ps . pps -> dequant4_coeff [ chroma_idx + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ sl -> chroma_qp [ chroma_idx ] ]		3362328	0					
ANR	3366002	IdentifierDeclType	const uint32_t *		3362328	0					
ANR	3366003	Identifier	qmul		3362328	1					
ANR	3366004	AssignmentExpression	* qmul = h -> ps . pps -> dequant4_coeff [ chroma_idx + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ sl -> chroma_qp [ chroma_idx ] ]		3362328	2		=			
ANR	3366005	Identifier	qmul		3362328	0					
ANR	3366006	ArrayIndexing	h -> ps . pps -> dequant4_coeff [ chroma_idx + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ] [ sl -> chroma_qp [ chroma_idx ] ]		3362328	1					
ANR	3366007	ArrayIndexing	h -> ps . pps -> dequant4_coeff [ chroma_idx + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 ) ]		3362328	0					
ANR	3366008	PtrMemberAccess	h -> ps . pps -> dequant4_coeff		3362328	0					
ANR	3366009	MemberAccess	h -> ps . pps		3362328	0					
ANR	3366010	PtrMemberAccess	h -> ps		3362328	0					
ANR	3366011	Identifier	h		3362328	0					
ANR	3366012	Identifier	ps		3362328	1					
ANR	3366013	Identifier	pps		3362328	1					
ANR	3366014	Identifier	dequant4_coeff		3362328	1					
ANR	3366015	AdditiveExpression	chroma_idx + 1 + ( IS_INTRA ( mb_type ) ? 0 : 3 )		3362328	1		+			
ANR	3366016	Identifier	chroma_idx		3362328	0					
ANR	3366017	AdditiveExpression	1 + ( IS_INTRA ( mb_type ) ? 0 : 3 )		3362328	1		+			
ANR	3366018	PrimaryExpression	1		3362328	0					
ANR	3366019	ConditionalExpression	IS_INTRA ( mb_type ) ? 0 : 3		3362328	1					
ANR	3366020	Condition	IS_INTRA ( mb_type )		3362328	0					
ANR	3366021	CallExpression	IS_INTRA ( mb_type )		3362328	0					
ANR	3366022	Callee	IS_INTRA		3362328	0					
ANR	3366023	Identifier	IS_INTRA		3362328	0					
ANR	3366024	ArgumentList	mb_type		3362328	1					
ANR	3366025	Argument	mb_type		3362328	0					
ANR	3366026	Identifier	mb_type		3362328	0					
ANR	3366027	PrimaryExpression	0		3362328	1					
ANR	3366028	PrimaryExpression	3		3362328	2					
ANR	3366029	ArrayIndexing	sl -> chroma_qp [ chroma_idx ]		3362328	1					
ANR	3366030	PtrMemberAccess	sl -> chroma_qp		3362328	0					
ANR	3366031	Identifier	sl		3362328	0					
ANR	3366032	Identifier	chroma_qp		3362328	1					
ANR	3366033	Identifier	chroma_idx		3362328	1					
ANR	3366034	IdentifierDeclStatement	int16_t * mb = sl -> mb + ( 16 * ( 16 + 16 * chroma_idx ) << pixel_shift ) ;	909:20:19805:19868	3362328	1	True				
ANR	3366035	IdentifierDecl	* mb = sl -> mb + ( 16 * ( 16 + 16 * chroma_idx ) << pixel_shift )		3362328	0					
ANR	3366036	IdentifierDeclType	int16_t *		3362328	0					
ANR	3366037	Identifier	mb		3362328	1					
ANR	3366038	AssignmentExpression	* mb = sl -> mb + ( 16 * ( 16 + 16 * chroma_idx ) << pixel_shift )		3362328	2		=			
ANR	3366039	Identifier	mb		3362328	0					
ANR	3366040	AdditiveExpression	sl -> mb + ( 16 * ( 16 + 16 * chroma_idx ) << pixel_shift )		3362328	1		+			
ANR	3366041	PtrMemberAccess	sl -> mb		3362328	0					
ANR	3366042	Identifier	sl		3362328	0					
ANR	3366043	Identifier	mb		3362328	1					
ANR	3366044	ShiftExpression	16 * ( 16 + 16 * chroma_idx ) << pixel_shift		3362328	1		<<			
ANR	3366045	MultiplicativeExpression	16 * ( 16 + 16 * chroma_idx )		3362328	0		*			
ANR	3366046	PrimaryExpression	16		3362328	0					
ANR	3366047	AdditiveExpression	16 + 16 * chroma_idx		3362328	1		+			
ANR	3366048	PrimaryExpression	16		3362328	0					
ANR	3366049	MultiplicativeExpression	16 * chroma_idx		3362328	1		*			
ANR	3366050	PrimaryExpression	16		3362328	0					
ANR	3366051	Identifier	chroma_idx		3362328	1					
ANR	3366052	Identifier	pixel_shift		3362328	1					
ANR	3366053	ForStatement	for ( i8x8 = 0 ; i8x8 < num_c8x8 ; i8x8 ++ )		3362328	2					
ANR	3366054	ForInit	i8x8 = 0 ;	911:25:19896:19904	3362328	0	True				
ANR	3366055	AssignmentExpression	i8x8 = 0		3362328	0		=			
ANR	3366056	Identifier	i8x8		3362328	0					
ANR	3366057	PrimaryExpression	0		3362328	1					
ANR	3366058	Condition	i8x8 < num_c8x8	911:35:19906:19918	3362328	1	True				
ANR	3366059	RelationalExpression	i8x8 < num_c8x8		3362328	0		<			
ANR	3366060	Identifier	i8x8		3362328	0					
ANR	3366061	Identifier	num_c8x8		3362328	1					
ANR	3366062	PostIncDecOperationExpression	i8x8 ++	911:50:19921:19926	3362328	2	True				
ANR	3366063	Identifier	i8x8		3362328	0					
ANR	3366064	IncDec	++		3362328	1					
ANR	3366065	CompoundStatement		909:58:19855:19855	3362328	3					
ANR	3366066	ForStatement	for ( i4x4 = 0 ; i4x4 < 4 ; i4x4 ++ )		3362328	0					
ANR	3366067	ForInit	i4x4 = 0 ;	913:29:19961:19969	3362328	0	True				
ANR	3366068	AssignmentExpression	i4x4 = 0		3362328	0		=			
ANR	3366069	Identifier	i4x4		3362328	0					
ANR	3366070	PrimaryExpression	0		3362328	1					
ANR	3366071	Condition	i4x4 < 4	913:39:19971:19978	3362328	1	True				
ANR	3366072	RelationalExpression	i4x4 < 4		3362328	0		<			
ANR	3366073	Identifier	i4x4		3362328	0					
ANR	3366074	PrimaryExpression	4		3362328	1					
ANR	3366075	PostIncDecOperationExpression	i4x4 ++	913:49:19981:19986	3362328	2	True				
ANR	3366076	Identifier	i4x4		3362328	0					
ANR	3366077	IncDec	++		3362328	1					
ANR	3366078	CompoundStatement		913:28:19946:19998	3362328	3					
ANR	3366079	IdentifierDeclStatement	const int index = 16 + 16 * chroma_idx + 8 * i8x8 + i4x4 ;	915:28:20020:20072	3362328	0	True				
ANR	3366080	IdentifierDecl	index = 16 + 16 * chroma_idx + 8 * i8x8 + i4x4		3362328	0					
ANR	3366081	IdentifierDeclType	const int		3362328	0					
ANR	3366082	Identifier	index		3362328	1					
ANR	3366083	AssignmentExpression	index = 16 + 16 * chroma_idx + 8 * i8x8 + i4x4		3362328	2		=			
ANR	3366084	Identifier	index		3362328	0					
ANR	3366085	AdditiveExpression	16 + 16 * chroma_idx + 8 * i8x8 + i4x4		3362328	1		+			
ANR	3366086	PrimaryExpression	16		3362328	0					
ANR	3366087	AdditiveExpression	16 * chroma_idx + 8 * i8x8 + i4x4		3362328	1		+			
ANR	3366088	MultiplicativeExpression	16 * chroma_idx		3362328	0		*			
ANR	3366089	PrimaryExpression	16		3362328	0					
ANR	3366090	Identifier	chroma_idx		3362328	1					
ANR	3366091	AdditiveExpression	8 * i8x8 + i4x4		3362328	1		+			
ANR	3366092	MultiplicativeExpression	8 * i8x8		3362328	0		*			
ANR	3366093	PrimaryExpression	8		3362328	0					
ANR	3366094	Identifier	i8x8		3362328	1					
ANR	3366095	Identifier	i4x4		3362328	1					
ANR	3366096	IfStatement	"if ( decode_residual ( h , sl , gb , mb , index , scan + 1 , qmul , 15 ) < 0 )"		3362328	1					
ANR	3366097	Condition	"decode_residual ( h , sl , gb , mb , index , scan + 1 , qmul , 15 ) < 0"	917:32:20107:20167	3362328	0	True				
ANR	3366098	RelationalExpression	"decode_residual ( h , sl , gb , mb , index , scan + 1 , qmul , 15 ) < 0"		3362328	0		<			
ANR	3366099	CallExpression	"decode_residual ( h , sl , gb , mb , index , scan + 1 , qmul , 15 )"		3362328	0					
ANR	3366100	Callee	decode_residual		3362328	0					
ANR	3366101	Identifier	decode_residual		3362328	0					
ANR	3366102	ArgumentList	h		3362328	1					
ANR	3366103	Argument	h		3362328	0					
ANR	3366104	Identifier	h		3362328	0					
ANR	3366105	Argument	sl		3362328	1					
ANR	3366106	Identifier	sl		3362328	0					
ANR	3366107	Argument	gb		3362328	2					
ANR	3366108	Identifier	gb		3362328	0					
ANR	3366109	Argument	mb		3362328	3					
ANR	3366110	Identifier	mb		3362328	0					
ANR	3366111	Argument	index		3362328	4					
ANR	3366112	Identifier	index		3362328	0					
ANR	3366113	Argument	scan + 1		3362328	5					
ANR	3366114	AdditiveExpression	scan + 1		3362328	0		+			
ANR	3366115	Identifier	scan		3362328	0					
ANR	3366116	PrimaryExpression	1		3362328	1					
ANR	3366117	Argument	qmul		3362328	6					
ANR	3366118	Identifier	qmul		3362328	0					
ANR	3366119	Argument	15		3362328	7					
ANR	3366120	PrimaryExpression	15		3362328	0					
ANR	3366121	PrimaryExpression	0		3362328	1					
ANR	3366122	ReturnStatement	return - 1 ;	919:32:20203:20212	3362328	1	True				
ANR	3366123	UnaryOperationExpression	- 1		3362328	0					
ANR	3366124	UnaryOperator	-		3362328	0					
ANR	3366125	PrimaryExpression	1		3362328	1					
ANR	3366126	ExpressionStatement	mb += 16 << pixel_shift	921:28:20243:20266	3362328	2	True				
ANR	3366127	AssignmentExpression	mb += 16 << pixel_shift		3362328	0		+=			
ANR	3366128	Identifier	mb		3362328	0					
ANR	3366129	ShiftExpression	16 << pixel_shift		3362328	1		<<			
ANR	3366130	PrimaryExpression	16		3362328	0					
ANR	3366131	Identifier	pixel_shift		3362328	1					
ANR	3366132	ElseStatement	else		3362328	0					
ANR	3366133	CompoundStatement		927:17:20281:20281	3362328	0					
ANR	3366134	ExpressionStatement	"fill_rectangle ( & sl -> non_zero_count_cache [ scan8 [ 16 ] ] , 4 , 4 , 8 , 0 , 1 )"	931:16:20374:20441	3362328	0	True				
ANR	3366135	CallExpression	"fill_rectangle ( & sl -> non_zero_count_cache [ scan8 [ 16 ] ] , 4 , 4 , 8 , 0 , 1 )"		3362328	0					
ANR	3366136	Callee	fill_rectangle		3362328	0					
ANR	3366137	Identifier	fill_rectangle		3362328	0					
ANR	3366138	ArgumentList	& sl -> non_zero_count_cache [ scan8 [ 16 ] ]		3362328	1					
ANR	3366139	Argument	& sl -> non_zero_count_cache [ scan8 [ 16 ] ]		3362328	0					
ANR	3366140	UnaryOperationExpression	& sl -> non_zero_count_cache [ scan8 [ 16 ] ]		3362328	0					
ANR	3366141	UnaryOperator	&		3362328	0					
ANR	3366142	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ 16 ] ]		3362328	1					
ANR	3366143	PtrMemberAccess	sl -> non_zero_count_cache		3362328	0					
ANR	3366144	Identifier	sl		3362328	0					
ANR	3366145	Identifier	non_zero_count_cache		3362328	1					
ANR	3366146	ArrayIndexing	scan8 [ 16 ]		3362328	1					
ANR	3366147	Identifier	scan8		3362328	0					
ANR	3366148	PrimaryExpression	16		3362328	1					
ANR	3366149	Argument	4		3362328	1					
ANR	3366150	PrimaryExpression	4		3362328	0					
ANR	3366151	Argument	4		3362328	2					
ANR	3366152	PrimaryExpression	4		3362328	0					
ANR	3366153	Argument	8		3362328	3					
ANR	3366154	PrimaryExpression	8		3362328	0					
ANR	3366155	Argument	0		3362328	4					
ANR	3366156	PrimaryExpression	0		3362328	0					
ANR	3366157	Argument	1		3362328	5					
ANR	3366158	PrimaryExpression	1		3362328	0					
ANR	3366159	ExpressionStatement	"fill_rectangle ( & sl -> non_zero_count_cache [ scan8 [ 32 ] ] , 4 , 4 , 8 , 0 , 1 )"	933:16:20460:20527	3362328	1	True				
ANR	3366160	CallExpression	"fill_rectangle ( & sl -> non_zero_count_cache [ scan8 [ 32 ] ] , 4 , 4 , 8 , 0 , 1 )"		3362328	0					
ANR	3366161	Callee	fill_rectangle		3362328	0					
ANR	3366162	Identifier	fill_rectangle		3362328	0					
ANR	3366163	ArgumentList	& sl -> non_zero_count_cache [ scan8 [ 32 ] ]		3362328	1					
ANR	3366164	Argument	& sl -> non_zero_count_cache [ scan8 [ 32 ] ]		3362328	0					
ANR	3366165	UnaryOperationExpression	& sl -> non_zero_count_cache [ scan8 [ 32 ] ]		3362328	0					
ANR	3366166	UnaryOperator	&		3362328	0					
ANR	3366167	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ 32 ] ]		3362328	1					
ANR	3366168	PtrMemberAccess	sl -> non_zero_count_cache		3362328	0					
ANR	3366169	Identifier	sl		3362328	0					
ANR	3366170	Identifier	non_zero_count_cache		3362328	1					
ANR	3366171	ArrayIndexing	scan8 [ 32 ]		3362328	1					
ANR	3366172	Identifier	scan8		3362328	0					
ANR	3366173	PrimaryExpression	32		3362328	1					
ANR	3366174	Argument	4		3362328	1					
ANR	3366175	PrimaryExpression	4		3362328	0					
ANR	3366176	Argument	4		3362328	2					
ANR	3366177	PrimaryExpression	4		3362328	0					
ANR	3366178	Argument	8		3362328	3					
ANR	3366179	PrimaryExpression	8		3362328	0					
ANR	3366180	Argument	0		3362328	4					
ANR	3366181	PrimaryExpression	0		3362328	0					
ANR	3366182	Argument	1		3362328	5					
ANR	3366183	PrimaryExpression	1		3362328	0					
ANR	3366184	ElseStatement	else		3362328	0					
ANR	3366185	CompoundStatement		937:9:20491:20491	3362328	0					
ANR	3366186	ExpressionStatement	"fill_rectangle ( & sl -> non_zero_count_cache [ scan8 [ 0 ] ] , 4 , 4 , 8 , 0 , 1 )"	941:8:20576:20643	3362328	0	True				
ANR	3366187	CallExpression	"fill_rectangle ( & sl -> non_zero_count_cache [ scan8 [ 0 ] ] , 4 , 4 , 8 , 0 , 1 )"		3362328	0					
ANR	3366188	Callee	fill_rectangle		3362328	0					
ANR	3366189	Identifier	fill_rectangle		3362328	0					
ANR	3366190	ArgumentList	& sl -> non_zero_count_cache [ scan8 [ 0 ] ]		3362328	1					
ANR	3366191	Argument	& sl -> non_zero_count_cache [ scan8 [ 0 ] ]		3362328	0					
ANR	3366192	UnaryOperationExpression	& sl -> non_zero_count_cache [ scan8 [ 0 ] ]		3362328	0					
ANR	3366193	UnaryOperator	&		3362328	0					
ANR	3366194	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ 0 ] ]		3362328	1					
ANR	3366195	PtrMemberAccess	sl -> non_zero_count_cache		3362328	0					
ANR	3366196	Identifier	sl		3362328	0					
ANR	3366197	Identifier	non_zero_count_cache		3362328	1					
ANR	3366198	ArrayIndexing	scan8 [ 0 ]		3362328	1					
ANR	3366199	Identifier	scan8		3362328	0					
ANR	3366200	PrimaryExpression	0		3362328	1					
ANR	3366201	Argument	4		3362328	1					
ANR	3366202	PrimaryExpression	4		3362328	0					
ANR	3366203	Argument	4		3362328	2					
ANR	3366204	PrimaryExpression	4		3362328	0					
ANR	3366205	Argument	8		3362328	3					
ANR	3366206	PrimaryExpression	8		3362328	0					
ANR	3366207	Argument	0		3362328	4					
ANR	3366208	PrimaryExpression	0		3362328	0					
ANR	3366209	Argument	1		3362328	5					
ANR	3366210	PrimaryExpression	1		3362328	0					
ANR	3366211	ExpressionStatement	"fill_rectangle ( & sl -> non_zero_count_cache [ scan8 [ 16 ] ] , 4 , 4 , 8 , 0 , 1 )"	943:8:20654:20721	3362328	1	True				
ANR	3366212	CallExpression	"fill_rectangle ( & sl -> non_zero_count_cache [ scan8 [ 16 ] ] , 4 , 4 , 8 , 0 , 1 )"		3362328	0					
ANR	3366213	Callee	fill_rectangle		3362328	0					
ANR	3366214	Identifier	fill_rectangle		3362328	0					
ANR	3366215	ArgumentList	& sl -> non_zero_count_cache [ scan8 [ 16 ] ]		3362328	1					
ANR	3366216	Argument	& sl -> non_zero_count_cache [ scan8 [ 16 ] ]		3362328	0					
ANR	3366217	UnaryOperationExpression	& sl -> non_zero_count_cache [ scan8 [ 16 ] ]		3362328	0					
ANR	3366218	UnaryOperator	&		3362328	0					
ANR	3366219	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ 16 ] ]		3362328	1					
ANR	3366220	PtrMemberAccess	sl -> non_zero_count_cache		3362328	0					
ANR	3366221	Identifier	sl		3362328	0					
ANR	3366222	Identifier	non_zero_count_cache		3362328	1					
ANR	3366223	ArrayIndexing	scan8 [ 16 ]		3362328	1					
ANR	3366224	Identifier	scan8		3362328	0					
ANR	3366225	PrimaryExpression	16		3362328	1					
ANR	3366226	Argument	4		3362328	1					
ANR	3366227	PrimaryExpression	4		3362328	0					
ANR	3366228	Argument	4		3362328	2					
ANR	3366229	PrimaryExpression	4		3362328	0					
ANR	3366230	Argument	8		3362328	3					
ANR	3366231	PrimaryExpression	8		3362328	0					
ANR	3366232	Argument	0		3362328	4					
ANR	3366233	PrimaryExpression	0		3362328	0					
ANR	3366234	Argument	1		3362328	5					
ANR	3366235	PrimaryExpression	1		3362328	0					
ANR	3366236	ExpressionStatement	"fill_rectangle ( & sl -> non_zero_count_cache [ scan8 [ 32 ] ] , 4 , 4 , 8 , 0 , 1 )"	945:8:20732:20799	3362328	2	True				
ANR	3366237	CallExpression	"fill_rectangle ( & sl -> non_zero_count_cache [ scan8 [ 32 ] ] , 4 , 4 , 8 , 0 , 1 )"		3362328	0					
ANR	3366238	Callee	fill_rectangle		3362328	0					
ANR	3366239	Identifier	fill_rectangle		3362328	0					
ANR	3366240	ArgumentList	& sl -> non_zero_count_cache [ scan8 [ 32 ] ]		3362328	1					
ANR	3366241	Argument	& sl -> non_zero_count_cache [ scan8 [ 32 ] ]		3362328	0					
ANR	3366242	UnaryOperationExpression	& sl -> non_zero_count_cache [ scan8 [ 32 ] ]		3362328	0					
ANR	3366243	UnaryOperator	&		3362328	0					
ANR	3366244	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ 32 ] ]		3362328	1					
ANR	3366245	PtrMemberAccess	sl -> non_zero_count_cache		3362328	0					
ANR	3366246	Identifier	sl		3362328	0					
ANR	3366247	Identifier	non_zero_count_cache		3362328	1					
ANR	3366248	ArrayIndexing	scan8 [ 32 ]		3362328	1					
ANR	3366249	Identifier	scan8		3362328	0					
ANR	3366250	PrimaryExpression	32		3362328	1					
ANR	3366251	Argument	4		3362328	1					
ANR	3366252	PrimaryExpression	4		3362328	0					
ANR	3366253	Argument	4		3362328	2					
ANR	3366254	PrimaryExpression	4		3362328	0					
ANR	3366255	Argument	8		3362328	3					
ANR	3366256	PrimaryExpression	8		3362328	0					
ANR	3366257	Argument	0		3362328	4					
ANR	3366258	PrimaryExpression	0		3362328	0					
ANR	3366259	Argument	1		3362328	5					
ANR	3366260	PrimaryExpression	1		3362328	0					
ANR	3366261	ExpressionStatement	h -> cur_pic . qscale_table [ mb_xy ] = sl -> qscale	949:4:20813:20856	3362328	26	True				
ANR	3366262	AssignmentExpression	h -> cur_pic . qscale_table [ mb_xy ] = sl -> qscale		3362328	0		=			
ANR	3366263	ArrayIndexing	h -> cur_pic . qscale_table [ mb_xy ]		3362328	0					
ANR	3366264	MemberAccess	h -> cur_pic . qscale_table		3362328	0					
ANR	3366265	PtrMemberAccess	h -> cur_pic		3362328	0					
ANR	3366266	Identifier	h		3362328	0					
ANR	3366267	Identifier	cur_pic		3362328	1					
ANR	3366268	Identifier	qscale_table		3362328	1					
ANR	3366269	Identifier	mb_xy		3362328	1					
ANR	3366270	PtrMemberAccess	sl -> qscale		3362328	1					
ANR	3366271	Identifier	sl		3362328	0					
ANR	3366272	Identifier	qscale		3362328	1					
ANR	3366273	ExpressionStatement	"write_back_non_zero_count ( h , sl )"	951:4:20863:20895	3362328	27	True				
ANR	3366274	CallExpression	"write_back_non_zero_count ( h , sl )"		3362328	0					
ANR	3366275	Callee	write_back_non_zero_count		3362328	0					
ANR	3366276	Identifier	write_back_non_zero_count		3362328	0					
ANR	3366277	ArgumentList	h		3362328	1					
ANR	3366278	Argument	h		3362328	0					
ANR	3366279	Identifier	h		3362328	0					
ANR	3366280	Argument	sl		3362328	1					
ANR	3366281	Identifier	sl		3362328	0					
ANR	3366282	ReturnStatement	return 0 ;	955:4:20904:20912	3362328	28	True				
ANR	3366283	PrimaryExpression	0		3362328	0					
ANR	3366284	ReturnType	int		3362328	1					
ANR	3366285	Identifier	ff_h264_decode_mb_cavlc		3362328	2					
ANR	3366286	ParameterList	"const H264Context * h , H264SliceContext * sl"		3362328	3					
ANR	3366287	Parameter	const H264Context * h	1:28:28:47	3362328	0	True				
ANR	3366288	ParameterType	const H264Context *		3362328	0					
ANR	3366289	Identifier	h		3362328	1					
ANR	3366290	Parameter	H264SliceContext * sl	1:50:50:69	3362328	1	True				
ANR	3366291	ParameterType	H264SliceContext *		3362328	0					
ANR	3366292	Identifier	sl		3362328	1					
ANR	3366293	CFGEntryNode	ENTRY		3362328		True				
ANR	3366294	CFGExitNode	EXIT		3362328		True				
ANR	3366295	Symbol	pred_intra_mode		3362328						
ANR	3366296	Symbol	IS_INTRA_PCM		3362328						
ANR	3366297	Symbol	MB_TYPE_16x8		3362328						
ANR	3366298	Symbol	sl -> mb_skip_run		3362328						
ANR	3366299	Symbol	sl -> slice_type_nos		3362328						
ANR	3366300	Symbol	AV_PICTURE_TYPE_SI		3362328						
ANR	3366301	Symbol	* sl		3362328						
ANR	3366302	Symbol	h -> zigzag_scan		3362328						
ANR	3366303	Symbol	* h -> ps . sps		3362328						
ANR	3366304	Symbol	pred_mode		3362328						
ANR	3366305	Symbol	IS_16X16		3362328						
ANR	3366306	Symbol	* * h -> ps . sps		3362328						
ANR	3366307	Symbol	h -> pixel_shift		3362328						
ANR	3366308	Symbol	ff_h264_golomb_to_inter_cbp		3362328						
ANR	3366309	Symbol	rc		3362328						
ANR	3366310	Symbol	& sl -> gb		3362328						
ANR	3366311	Symbol	ff_h264_b_mb_type_info [ mb_type ] . type		3362328						
ANR	3366312	Symbol	pack16to32		3362328						
ANR	3366313	Symbol	* * * h -> ps . pps		3362328						
ANR	3366314	Symbol	sl -> prev_mb_skipped		3362328						
ANR	3366315	Symbol	golomb_to_intra4x4_cbp_gray		3362328						
ANR	3366316	Symbol	scan		3362328						
ANR	3366317	Symbol	* * sl -> mv_cache		3362328						
ANR	3366318	Symbol	dquant		3362328						
ANR	3366319	Symbol	h -> poc . frame_num		3362328						
ANR	3366320	Symbol	ff_h264_p_mb_type_info [ mb_type ] . type		3362328						
ANR	3366321	Symbol	h -> ps . pps -> dequant4_coeff		3362328						
ANR	3366322	Symbol	IS_SUB_4X8		3362328						
ANR	3366323	Symbol	h -> cur_pic . mb_type		3362328						
ANR	3366324	Symbol	pixel_shift		3362328						
ANR	3366325	Symbol	h -> slice_table		3362328						
ANR	3366326	Symbol	sl		3362328						
ANR	3366327	Symbol	h -> cbp_table		3362328						
ANR	3366328	Symbol	sl -> cbp		3362328						
ANR	3366329	Symbol	get_chroma_qp		3362328						
ANR	3366330	Symbol	* * h -> ps		3362328						
ANR	3366331	Symbol	h		3362328						
ANR	3366332	Symbol	i		3362328						
ANR	3366333	Symbol	j		3362328						
ANR	3366334	Symbol	ff_h264_i_mb_type_info [ mb_type ] . cbp		3362328						
ANR	3366335	Symbol	p		3362328						
ANR	3366336	Symbol	* * sl -> chroma_qp		3362328						
ANR	3366337	Symbol	* sl -> intra4x4_pred_mode_cache		3362328						
ANR	3366338	Symbol	sl -> intra4x4_pred_mode_cache		3362328						
ANR	3366339	Symbol	di		3362328						
ANR	3366340	Symbol	h -> poc		3362328						
ANR	3366341	Symbol	decode_chroma		3362328						
ANR	3366342	Symbol	h -> zigzag_scan_q0		3362328						
ANR	3366343	Symbol	* sub_partition_count		3362328						
ANR	3366344	Symbol	ff_h264_p_sub_mb_type_info		3362328						
ANR	3366345	Symbol	ref		3362328						
ANR	3366346	Symbol	* ff_h264_mb_sizes		3362328						
ANR	3366347	Symbol	h -> field_scan8x8_cavlc_q0		3362328						
ANR	3366348	Symbol	IS_DIR		3362328						
ANR	3366349	Symbol	h -> ps . sps -> direct_8x8_inference_flag		3362328						
ANR	3366350	Symbol	ret		3362328						
ANR	3366351	Symbol	rem_mode		3362328						
ANR	3366352	Symbol	* * i		3362328						
ANR	3366353	Symbol	* * h		3362328						
ANR	3366354	Symbol	* cbp		3362328						
ANR	3366355	Symbol	* IS_INTRA		3362328						
ANR	3366356	Symbol	chroma_idx		3362328						
ANR	3366357	Symbol	* chroma_idx		3362328						
ANR	3366358	Symbol	get_bits1		3362328						
ANR	3366359	Symbol	align_get_bits		3362328						
ANR	3366360	Symbol	sl -> mb_y		3362328						
ANR	3366361	Symbol	sl -> mb_x		3362328						
ANR	3366362	Symbol	& mb_type		3362328						
ANR	3366363	Symbol	list		3362328						
ANR	3366364	Symbol	* h -> cur_pic . mb_type		3362328						
ANR	3366365	Symbol	MB_TYPE_16x16		3362328						
ANR	3366366	Symbol	h -> ps . sps -> chroma_format_idc		3362328						
ANR	3366367	Symbol	sl -> list_count		3362328						
ANR	3366368	Symbol	IS_REF0		3362328						
ANR	3366369	Symbol	ff_h264_chroma_dc_scan		3362328						
ANR	3366370	Symbol	scan8x8		3362328						
ANR	3366371	Symbol	* h -> cur_pic		3362328						
ANR	3366372	Symbol	* ff_h264_b_mb_type_info		3362328						
ANR	3366373	Symbol	IS_INTRA		3362328						
ANR	3366374	Symbol	block_width		3362328						
ANR	3366375	Symbol	* ff_h264_p_sub_mb_type_info		3362328						
ANR	3366376	Symbol	sl -> mv_cache		3362328						
ANR	3366377	Symbol	* * list		3362328						
ANR	3366378	Symbol	* sl -> mv_cache		3362328						
ANR	3366379	Symbol	i4x4		3362328						
ANR	3366380	Symbol	mb_size		3362328						
ANR	3366381	Symbol	gb		3362328						
ANR	3366382	Symbol	sl -> intra16x16_pred_mode		3362328						
ANR	3366383	Symbol	* * index		3362328						
ANR	3366384	Symbol	LIST_NOT_USED		3362328						
ANR	3366385	Symbol	ff_h264_p_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . partition_count		3362328						
ANR	3366386	Symbol	get_se_golomb		3362328						
ANR	3366387	Symbol	sl -> chroma_pred_mode		3362328						
ANR	3366388	Symbol	h -> field_scan8x8_cavlc		3362328						
ANR	3366389	Symbol	sl -> qscale		3362328						
ANR	3366390	Symbol	* * ref		3362328						
ANR	3366391	Symbol	ff_h264_check_intra4x4_pred_mode		3362328						
ANR	3366392	Symbol	decode_luma_residual		3362328						
ANR	3366393	Symbol	sl -> mb_field_decoding_flag		3362328						
ANR	3366394	Symbol	IS_INTRA16x16		3362328						
ANR	3366395	Symbol	* mb_xy		3362328						
ANR	3366396	Symbol	DC_128_PRED8x8		3362328						
ANR	3366397	Symbol	ff_h264_b_sub_mb_type_info		3362328						
ANR	3366398	Symbol	* ff_h264_i_mb_type_info		3362328						
ANR	3366399	Symbol	* ff_h264_b_sub_mb_type_info		3362328						
ANR	3366400	Symbol	ff_h264_b_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . partition_count		3362328						
ANR	3366401	Symbol	* scan8		3362328						
ANR	3366402	Symbol	sl -> ref_count		3362328						
ANR	3366403	Symbol	* index		3362328						
ANR	3366404	Symbol	* h -> cbp_table		3362328						
ANR	3366405	Symbol	ff_h264_i_mb_type_info [ mb_type ] . type		3362328						
ANR	3366406	Symbol	* sl -> ref_count		3362328						
ANR	3366407	Symbol	tmp		3362328						
ANR	3366408	Symbol	mb_type		3362328						
ANR	3366409	Symbol	CHROMA422		3362328						
ANR	3366410	Symbol	ff_h264_p_mb_type_info		3362328						
ANR	3366411	Symbol	decode_residual		3362328						
ANR	3366412	Symbol	dct8x8_allowed		3362328						
ANR	3366413	Symbol	* ff_h264_golomb_to_intra4x4_cbp		3362328						
ANR	3366414	Symbol	sl -> chroma_qp		3362328						
ANR	3366415	Symbol	val		3362328						
ANR	3366416	Symbol	IS_16X8		3362328						
ANR	3366417	Symbol	partition_count		3362328						
ANR	3366418	Symbol	h -> ps . sps		3362328						
ANR	3366419	Symbol	* * h -> ps . pps -> dequant4_coeff		3362328						
ANR	3366420	Symbol	* h -> ps . pps -> dequant4_coeff		3362328						
ANR	3366421	Symbol	h -> cur_pic . qscale_table		3362328						
ANR	3366422	Symbol	index		3362328						
ANR	3366423	Symbol	FRAME_MBAFF		3362328						
ANR	3366424	Symbol	h -> mb_stride		3362328						
ANR	3366425	Symbol	* * chroma_idx		3362328						
ANR	3366426	Symbol	sl -> non_zero_count_cache		3362328						
ANR	3366427	Symbol	sl -> slice_num		3362328						
ANR	3366428	Symbol	* * * h		3362328						
ANR	3366429	Symbol	ff_h264_b_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . type		3362328						
ANR	3366430	Symbol	h -> zigzag_scan8x8_cavlc		3362328						
ANR	3366431	Symbol	* * * h -> ps		3362328						
ANR	3366432	Symbol	h -> non_zero_count		3362328						
ANR	3366433	Symbol	* h -> ps		3362328						
ANR	3366434	Symbol	* sl -> chroma_qp		3362328						
ANR	3366435	Symbol	* * sl -> ref_cache		3362328						
ANR	3366436	Symbol	IS_INTER		3362328						
ANR	3366437	Symbol	* * mv_cache		3362328						
ANR	3366438	Symbol	IS_INTERLACED		3362328						
ANR	3366439	Symbol	* h -> cur_pic . qscale_table		3362328						
ANR	3366440	Symbol	ff_h264_i_mb_type_info		3362328						
ANR	3366441	Symbol	IS_SUB_8X4		3362328						
ANR	3366442	Symbol	* h -> ps . pps		3362328						
ANR	3366443	Symbol	IS_SUB_8X8		3362328						
ANR	3366444	Symbol	max_qp		3362328						
ANR	3366445	Symbol	CHROMA444		3362328						
ANR	3366446	Symbol	golomb_to_inter_cbp_gray		3362328						
ANR	3366447	Symbol	h -> field_scan		3362328						
ANR	3366448	Symbol	MB_TYPE_INTERLACED		3362328						
ANR	3366449	Symbol	h -> field_scan_q0		3362328						
ANR	3366450	Symbol	AV_LOG_ERROR		3362328						
ANR	3366451	Symbol	ff_h264_golomb_to_intra4x4_cbp		3362328						
ANR	3366452	Symbol	sub_mb_type		3362328						
ANR	3366453	Symbol	get_ue_golomb		3362328						
ANR	3366454	Symbol	h -> ps . pps -> transform_8x8_mode		3362328						
ANR	3366455	Symbol	MB_MBAFF		3362328						
ANR	3366456	Symbol	sl -> intra_pcm_ptr		3362328						
ANR	3366457	Symbol	ff_h264_p_sub_mb_type_info [ sl -> sub_mb_type [ i ] ] . type		3362328						
ANR	3366458	Symbol	h -> zigzag_scan8x8_cavlc_q0		3362328						
ANR	3366459	Symbol	ff_h264_chroma422_dc_scan		3362328						
ANR	3366460	Symbol	* list		3362328						
ANR	3366461	Symbol	ff_h264_mb_sizes		3362328						
ANR	3366462	Symbol	AVERROR_INVALIDDATA		3362328						
ANR	3366463	Symbol	ff_h264_check_intra_pred_mode		3362328						
ANR	3366464	Symbol	MB_TYPE_8x8DCT		3362328						
ANR	3366465	Symbol	* golomb_to_inter_cbp_gray		3362328						
ANR	3366466	Symbol	* * h -> ps . pps		3362328						
ANR	3366467	Symbol	get_bits		3362328						
ANR	3366468	Symbol	qmul		3362328						
ANR	3366469	Symbol	* * sl -> sub_mb_type		3362328						
ANR	3366470	Symbol	sl -> slice_type		3362328						
ANR	3366471	Symbol	* * * * h		3362328						
ANR	3366472	Symbol	mode		3362328						
ANR	3366473	Symbol	sl -> top_samples_available		3362328						
ANR	3366474	Symbol	mb		3362328						
ANR	3366475	Symbol	sl -> ref_cache		3362328						
ANR	3366476	Symbol	* h -> non_zero_count		3362328						
ANR	3366477	Symbol	MB_FIELD		3362328						
ANR	3366478	Symbol	h -> ps		3362328						
ANR	3366479	Symbol	NULL		3362328						
ANR	3366480	Symbol	* * IS_INTRA		3362328						
ANR	3366481	Symbol	IS_8X16		3362328						
ANR	3366482	Symbol	IS_INTRA4x4		3362328						
ANR	3366483	Symbol	sl -> mb		3362328						
ANR	3366484	Symbol	sl -> sub_mb_type		3362328						
ANR	3366485	Symbol	* sl -> ref_cache		3362328						
ANR	3366486	Symbol	mx		3362328						
ANR	3366487	Symbol	* * scan8		3362328						
ANR	3366488	Symbol	sl -> left_samples_available		3362328						
ANR	3366489	Symbol	ref_count		3362328						
ANR	3366490	Symbol	my		3362328						
ANR	3366491	Symbol	num_c8x8		3362328						
ANR	3366492	Symbol	av_get_picture_type_char		3362328						
ANR	3366493	Symbol	* golomb_to_intra4x4_cbp_gray		3362328						
ANR	3366494	Symbol	get_ue_golomb_long		3362328						
ANR	3366495	Symbol	IS_DIRECT		3362328						
ANR	3366496	Symbol	* mb_type		3362328						
ANR	3366497	Symbol	sl -> mb_mbaff		3362328						
ANR	3366498	Symbol	h -> avctx		3362328						
ANR	3366499	Symbol	* * * sl		3362328						
ANR	3366500	Symbol	* sl -> sub_mb_type		3362328						
ANR	3366501	Symbol	AV_PICTURE_TYPE_P		3362328						
ANR	3366502	Symbol	sub_partition_count		3362328						
ANR	3366503	Symbol	mb_xy		3362328						
ANR	3366504	Symbol	sl -> mb_xy		3362328						
ANR	3366505	Symbol	* h -> slice_table		3362328						
ANR	3366506	Symbol	* * sl		3362328						
ANR	3366507	Symbol	get_dct8x8_allowed		3362328						
ANR	3366508	Symbol	get_bits_left		3362328						
ANR	3366509	Symbol	mv_cache		3362328						
ANR	3366510	Symbol	h -> cur_pic		3362328						
ANR	3366511	Symbol	CHROMA_DC_BLOCK_INDEX		3362328						
ANR	3366512	Symbol	scan8		3362328						
ANR	3366513	Symbol	AV_PICTURE_TYPE_I		3362328						
ANR	3366514	Symbol	h -> ps . sps -> bit_depth_luma		3362328						
ANR	3366515	Symbol	AV_PICTURE_TYPE_B		3362328						
ANR	3366516	Symbol	i8x8		3362328						
ANR	3366517	Symbol	* ff_h264_golomb_to_inter_cbp		3362328						
ANR	3366518	Symbol	h -> ps . pps		3362328						
ANR	3366519	Symbol	get_ue_golomb_31		3362328						
ANR	3366520	Symbol	ff_h264_p_mb_type_info [ mb_type ] . partition_count		3362328						
ANR	3366521	Symbol	ff_h264_i_mb_type_info [ mb_type ] . pred_mode		3362328						
ANR	3366522	Symbol	ff_h264_b_mb_type_info [ mb_type ] . partition_count		3362328						
ANR	3366523	Symbol	cbp		3362328						
ANR	3366524	Symbol	PART_NOT_AVAILABLE		3362328						
ANR	3366525	Symbol	* h		3362328						
ANR	3366526	Symbol	* h -> ps . sps -> chroma_format_idc		3362328						
ANR	3366527	Symbol	* i		3362328						
ANR	3366528	Symbol	& mx		3362328						
ANR	3366529	Symbol	* mv_cache		3362328						
ANR	3366530	Symbol	ff_h264_b_mb_type_info		3362328						
ANR	3366531	Symbol	& my		3362328						
ANR	3366532	Symbol	* p		3362328						
ANR	3366533	Symbol	* ff_h264_p_mb_type_info		3362328						
ANR	3366534	Symbol	* ref		3362328						
