command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8727696	File	/home/p4ultr4n/workplace/ReVeal/raw_code/v410_decode_init_1.c								
ANR	8727697	Function	v410_decode_init	1:0:0:515							
ANR	8727698	FunctionDef	v410_decode_init (AVCodecContext * avctx)		8727697	0					
ANR	8727699	CompoundStatement		3:0:60:515	8727697	0					
ANR	8727700	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_YUV444P10	5:4:67:113	8727697	0	True				
ANR	8727701	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_YUV444P10		8727697	0		=			
ANR	8727702	PtrMemberAccess	avctx -> pix_fmt		8727697	0					
ANR	8727703	Identifier	avctx		8727697	0					
ANR	8727704	Identifier	pix_fmt		8727697	1					
ANR	8727705	Identifier	PIX_FMT_YUV444P10		8727697	1					
ANR	8727706	ExpressionStatement	avctx -> bits_per_raw_sample = 10	7:4:120:151	8727697	1	True				
ANR	8727707	AssignmentExpression	avctx -> bits_per_raw_sample = 10		8727697	0		=			
ANR	8727708	PtrMemberAccess	avctx -> bits_per_raw_sample		8727697	0					
ANR	8727709	Identifier	avctx		8727697	0					
ANR	8727710	Identifier	bits_per_raw_sample		8727697	1					
ANR	8727711	PrimaryExpression	10		8727697	1					
ANR	8727712	IfStatement	if ( avctx -> width & 1 )		8727697	2					
ANR	8727713	Condition	avctx -> width & 1	11:8:164:179	8727697	0	True				
ANR	8727714	BitAndExpression	avctx -> width & 1		8727697	0		&			
ANR	8727715	PtrMemberAccess	avctx -> width		8727697	0					
ANR	8727716	Identifier	avctx		8727697	0					
ANR	8727717	Identifier	width		8727697	1					
ANR	8727718	PrimaryExpression	1		8727697	1					
ANR	8727719	CompoundStatement		9:26:121:121	8727697	1					
ANR	8727720	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""v410 requires width to be even.\\n"" )"	13:8:193:257	8727697	0	True				
ANR	8727721	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""v410 requires width to be even.\\n"" )"		8727697	0					
ANR	8727722	Callee	av_log		8727697	0					
ANR	8727723	Identifier	av_log		8727697	0					
ANR	8727724	ArgumentList	avctx		8727697	1					
ANR	8727725	Argument	avctx		8727697	0					
ANR	8727726	Identifier	avctx		8727697	0					
ANR	8727727	Argument	AV_LOG_ERROR		8727697	1					
ANR	8727728	Identifier	AV_LOG_ERROR		8727697	0					
ANR	8727729	Argument	"""v410 requires width to be even.\\n"""		8727697	2					
ANR	8727730	PrimaryExpression	"""v410 requires width to be even.\\n"""		8727697	0					
ANR	8727731	ReturnStatement	return AVERROR_INVALIDDATA ;	15:8:268:294	8727697	1	True				
ANR	8727732	Identifier	AVERROR_INVALIDDATA		8727697	0					
ANR	8727733	ExpressionStatement	avctx -> coded_frame = avcodec_alloc_frame ( )	21:4:310:352	8727697	3	True				
ANR	8727734	AssignmentExpression	avctx -> coded_frame = avcodec_alloc_frame ( )		8727697	0		=			
ANR	8727735	PtrMemberAccess	avctx -> coded_frame		8727697	0					
ANR	8727736	Identifier	avctx		8727697	0					
ANR	8727737	Identifier	coded_frame		8727697	1					
ANR	8727738	CallExpression	avcodec_alloc_frame ( )		8727697	1					
ANR	8727739	Callee	avcodec_alloc_frame		8727697	0					
ANR	8727740	Identifier	avcodec_alloc_frame		8727697	0					
ANR	8727741	ArgumentList			8727697	1					
ANR	8727742	IfStatement	if ( ! avctx -> coded_frame )		8727697	4					
ANR	8727743	Condition	! avctx -> coded_frame	25:8:365:383	8727697	0	True				
ANR	8727744	UnaryOperationExpression	! avctx -> coded_frame		8727697	0					
ANR	8727745	UnaryOperator	!		8727697	0					
ANR	8727746	PtrMemberAccess	avctx -> coded_frame		8727697	1					
ANR	8727747	Identifier	avctx		8727697	0					
ANR	8727748	Identifier	coded_frame		8727697	1					
ANR	8727749	CompoundStatement		23:29:325:325	8727697	1					
ANR	8727750	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Could not allocate frame.\\n"" )"	27:8:397:455	8727697	0	True				
ANR	8727751	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Could not allocate frame.\\n"" )"		8727697	0					
ANR	8727752	Callee	av_log		8727697	0					
ANR	8727753	Identifier	av_log		8727697	0					
ANR	8727754	ArgumentList	avctx		8727697	1					
ANR	8727755	Argument	avctx		8727697	0					
ANR	8727756	Identifier	avctx		8727697	0					
ANR	8727757	Argument	AV_LOG_ERROR		8727697	1					
ANR	8727758	Identifier	AV_LOG_ERROR		8727697	0					
ANR	8727759	Argument	"""Could not allocate frame.\\n"""		8727697	2					
ANR	8727760	PrimaryExpression	"""Could not allocate frame.\\n"""		8727697	0					
ANR	8727761	ReturnStatement	return AVERROR ( ENOMEM ) ;	29:8:466:488	8727697	1	True				
ANR	8727762	CallExpression	AVERROR ( ENOMEM )		8727697	0					
ANR	8727763	Callee	AVERROR		8727697	0					
ANR	8727764	Identifier	AVERROR		8727697	0					
ANR	8727765	ArgumentList	ENOMEM		8727697	1					
ANR	8727766	Argument	ENOMEM		8727697	0					
ANR	8727767	Identifier	ENOMEM		8727697	0					
ANR	8727768	ReturnStatement	return 0 ;	35:4:504:512	8727697	5	True				
ANR	8727769	PrimaryExpression	0		8727697	0					
ANR	8727770	ReturnType	static av_cold int		8727697	1					
ANR	8727771	Identifier	v410_decode_init		8727697	2					
ANR	8727772	ParameterList	AVCodecContext * avctx		8727697	3					
ANR	8727773	Parameter	AVCodecContext * avctx	1:36:36:56	8727697	0	True				
ANR	8727774	ParameterType	AVCodecContext *		8727697	0					
ANR	8727775	Identifier	avctx		8727697	1					
ANR	8727776	CFGEntryNode	ENTRY		8727697		True				
ANR	8727777	CFGExitNode	EXIT		8727697		True				
ANR	8727778	Symbol	avctx -> bits_per_raw_sample		8727697						
ANR	8727779	Symbol	ENOMEM		8727697						
ANR	8727780	Symbol	* avctx		8727697						
ANR	8727781	Symbol	avcodec_alloc_frame		8727697						
ANR	8727782	Symbol	AV_LOG_ERROR		8727697						
ANR	8727783	Symbol	avctx -> coded_frame		8727697						
ANR	8727784	Symbol	avctx -> width		8727697						
ANR	8727785	Symbol	AVERROR_INVALIDDATA		8727697						
ANR	8727786	Symbol	avctx -> pix_fmt		8727697						
ANR	8727787	Symbol	AVERROR		8727697						
ANR	8727788	Symbol	avctx		8727697						
ANR	8727789	Symbol	PIX_FMT_YUV444P10		8727697						
