command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6802989	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pxa2xx_lcdc_dma0_redraw_vert_0.c								
ANR	6802990	Function	pxa2xx_lcdc_dma0_redraw_vert	1:0:0:1857							
ANR	6802991	FunctionDef	"pxa2xx_lcdc_dma0_redraw_vert (struct pxa2xx_lcdc_s * s , uint8_t * fb , int * miny , int * maxy)"		6802990	0					
ANR	6802992	CompoundStatement		5:0:119:1857	6802990	0					
ANR	6802993	IdentifierDeclStatement	"int y , src_width , dest_width , dirty [ 2 ] ;"	7:4:126:164	6802990	0	True				
ANR	6802994	IdentifierDecl	y		6802990	0					
ANR	6802995	IdentifierDeclType	int		6802990	0					
ANR	6802996	Identifier	y		6802990	1					
ANR	6802997	IdentifierDecl	src_width		6802990	1					
ANR	6802998	IdentifierDeclType	int		6802990	0					
ANR	6802999	Identifier	src_width		6802990	1					
ANR	6803000	IdentifierDecl	dest_width		6802990	2					
ANR	6803001	IdentifierDeclType	int		6802990	0					
ANR	6803002	Identifier	dest_width		6802990	1					
ANR	6803003	IdentifierDecl	dirty [ 2 ]		6802990	3					
ANR	6803004	IdentifierDeclType	int [ 2 ]		6802990	0					
ANR	6803005	Identifier	dirty		6802990	1					
ANR	6803006	PrimaryExpression	2		6802990	2					
ANR	6803007	IdentifierDeclStatement	"uint8_t * src , * dest ;"	9:4:171:190	6802990	1	True				
ANR	6803008	IdentifierDecl	* src		6802990	0					
ANR	6803009	IdentifierDeclType	uint8_t *		6802990	0					
ANR	6803010	Identifier	src		6802990	1					
ANR	6803011	IdentifierDecl	* dest		6802990	1					
ANR	6803012	IdentifierDeclType	uint8_t *		6802990	0					
ANR	6803013	Identifier	dest		6802990	1					
ANR	6803014	IdentifierDeclStatement	"ram_addr_t x , addr , new_addr , start , end ;"	11:4:197:237	6802990	2	True				
ANR	6803015	IdentifierDecl	x		6802990	0					
ANR	6803016	IdentifierDeclType	ram_addr_t		6802990	0					
ANR	6803017	Identifier	x		6802990	1					
ANR	6803018	IdentifierDecl	addr		6802990	1					
ANR	6803019	IdentifierDeclType	ram_addr_t		6802990	0					
ANR	6803020	Identifier	addr		6802990	1					
ANR	6803021	IdentifierDecl	new_addr		6802990	2					
ANR	6803022	IdentifierDeclType	ram_addr_t		6802990	0					
ANR	6803023	Identifier	new_addr		6802990	1					
ANR	6803024	IdentifierDecl	start		6802990	3					
ANR	6803025	IdentifierDeclType	ram_addr_t		6802990	0					
ANR	6803026	Identifier	start		6802990	1					
ANR	6803027	IdentifierDecl	end		6802990	4					
ANR	6803028	IdentifierDeclType	ram_addr_t		6802990	0					
ANR	6803029	Identifier	end		6802990	1					
ANR	6803030	IdentifierDeclStatement	drawfn fn = 0 ;	13:4:244:257	6802990	3	True				
ANR	6803031	IdentifierDecl	fn = 0		6802990	0					
ANR	6803032	IdentifierDeclType	drawfn		6802990	0					
ANR	6803033	Identifier	fn		6802990	1					
ANR	6803034	AssignmentExpression	fn = 0		6802990	2		=			
ANR	6803035	Identifier	fn		6802990	0					
ANR	6803036	PrimaryExpression	0		6802990	1					
ANR	6803037	IfStatement	if ( s -> dest_width )		6802990	4					
ANR	6803038	Condition	s -> dest_width	15:8:268:280	6802990	0	True				
ANR	6803039	PtrMemberAccess	s -> dest_width		6802990	0					
ANR	6803040	Identifier	s		6802990	0					
ANR	6803041	Identifier	dest_width		6802990	1					
ANR	6803042	ExpressionStatement	fn = s -> line_fn [ s -> transp ] [ s -> bpp ]	17:8:292:326	6802990	1	True				
ANR	6803043	AssignmentExpression	fn = s -> line_fn [ s -> transp ] [ s -> bpp ]		6802990	0		=			
ANR	6803044	Identifier	fn		6802990	0					
ANR	6803045	ArrayIndexing	s -> line_fn [ s -> transp ] [ s -> bpp ]		6802990	1					
ANR	6803046	ArrayIndexing	s -> line_fn [ s -> transp ]		6802990	0					
ANR	6803047	PtrMemberAccess	s -> line_fn		6802990	0					
ANR	6803048	Identifier	s		6802990	0					
ANR	6803049	Identifier	line_fn		6802990	1					
ANR	6803050	PtrMemberAccess	s -> transp		6802990	1					
ANR	6803051	Identifier	s		6802990	0					
ANR	6803052	Identifier	transp		6802990	1					
ANR	6803053	PtrMemberAccess	s -> bpp		6802990	1					
ANR	6803054	Identifier	s		6802990	0					
ANR	6803055	Identifier	bpp		6802990	1					
ANR	6803056	IfStatement	if ( ! fn )		6802990	5					
ANR	6803057	Condition	! fn	19:8:337:339	6802990	0	True				
ANR	6803058	UnaryOperationExpression	! fn		6802990	0					
ANR	6803059	UnaryOperator	!		6802990	0					
ANR	6803060	Identifier	fn		6802990	1					
ANR	6803061	ReturnStatement	return ;	21:8:351:357	6802990	1	True				
ANR	6803062	ExpressionStatement	src = fb	25:4:366:374	6802990	6	True				
ANR	6803063	AssignmentExpression	src = fb		6802990	0		=			
ANR	6803064	Identifier	src		6802990	0					
ANR	6803065	Identifier	fb		6802990	1					
ANR	6803066	ExpressionStatement	src_width = ( s -> xres + 3 ) & ~3	27:4:381:411	6802990	7	True				
ANR	6803067	AssignmentExpression	src_width = ( s -> xres + 3 ) & ~3		6802990	0		=			
ANR	6803068	Identifier	src_width		6802990	0					
ANR	6803069	BitAndExpression	( s -> xres + 3 ) & ~3		6802990	1		&			
ANR	6803070	AdditiveExpression	s -> xres + 3		6802990	0		+			
ANR	6803071	PtrMemberAccess	s -> xres		6802990	0					
ANR	6803072	Identifier	s		6802990	0					
ANR	6803073	Identifier	xres		6802990	1					
ANR	6803074	PrimaryExpression	3		6802990	1					
ANR	6803075	Identifier	~3		6802990	1					
ANR	6803076	IfStatement	if ( s -> bpp == pxa_lcdc_19pbpp || s -> bpp == pxa_lcdc_18pbpp )		6802990	8					
ANR	6803077	Condition	s -> bpp == pxa_lcdc_19pbpp || s -> bpp == pxa_lcdc_18pbpp	29:8:459:512	6802990	0	True				
ANR	6803078	OrExpression	s -> bpp == pxa_lcdc_19pbpp || s -> bpp == pxa_lcdc_18pbpp		6802990	0		||			
ANR	6803079	EqualityExpression	s -> bpp == pxa_lcdc_19pbpp		6802990	0		==			
ANR	6803080	PtrMemberAccess	s -> bpp		6802990	0					
ANR	6803081	Identifier	s		6802990	0					
ANR	6803082	Identifier	bpp		6802990	1					
ANR	6803083	Identifier	pxa_lcdc_19pbpp		6802990	1					
ANR	6803084	EqualityExpression	s -> bpp == pxa_lcdc_18pbpp		6802990	1		==			
ANR	6803085	PtrMemberAccess	s -> bpp		6802990	0					
ANR	6803086	Identifier	s		6802990	0					
ANR	6803087	Identifier	bpp		6802990	1					
ANR	6803088	Identifier	pxa_lcdc_18pbpp		6802990	1					
ANR	6803089	ExpressionStatement	src_width *= 3	31:8:524:538	6802990	1	True				
ANR	6803090	AssignmentExpression	src_width *= 3		6802990	0		*=			
ANR	6803091	Identifier	src_width		6802990	0					
ANR	6803092	PrimaryExpression	3		6802990	1					
ANR	6803093	ElseStatement	else		6802990	0					
ANR	6803094	IfStatement	if ( s -> bpp > pxa_lcdc_16bpp )		6802990	0					
ANR	6803095	Condition	s -> bpp > pxa_lcdc_16bpp	33:13:554:576	6802990	0	True				
ANR	6803096	RelationalExpression	s -> bpp > pxa_lcdc_16bpp		6802990	0		>			
ANR	6803097	PtrMemberAccess	s -> bpp		6802990	0					
ANR	6803098	Identifier	s		6802990	0					
ANR	6803099	Identifier	bpp		6802990	1					
ANR	6803100	Identifier	pxa_lcdc_16bpp		6802990	1					
ANR	6803101	ExpressionStatement	src_width *= 4	35:8:588:602	6802990	1	True				
ANR	6803102	AssignmentExpression	src_width *= 4		6802990	0		*=			
ANR	6803103	Identifier	src_width		6802990	0					
ANR	6803104	PrimaryExpression	4		6802990	1					
ANR	6803105	ElseStatement	else		6802990	0					
ANR	6803106	IfStatement	if ( s -> bpp > pxa_lcdc_8bpp )		6802990	0					
ANR	6803107	Condition	s -> bpp > pxa_lcdc_8bpp	37:13:618:639	6802990	0	True				
ANR	6803108	RelationalExpression	s -> bpp > pxa_lcdc_8bpp		6802990	0		>			
ANR	6803109	PtrMemberAccess	s -> bpp		6802990	0					
ANR	6803110	Identifier	s		6802990	0					
ANR	6803111	Identifier	bpp		6802990	1					
ANR	6803112	Identifier	pxa_lcdc_8bpp		6802990	1					
ANR	6803113	ExpressionStatement	src_width *= 2	39:8:651:665	6802990	1	True				
ANR	6803114	AssignmentExpression	src_width *= 2		6802990	0		*=			
ANR	6803115	Identifier	src_width		6802990	0					
ANR	6803116	PrimaryExpression	2		6802990	1					
ANR	6803117	ExpressionStatement	dest_width = s -> yres * s -> dest_width	43:4:674:710	6802990	9	True				
ANR	6803118	AssignmentExpression	dest_width = s -> yres * s -> dest_width		6802990	0		=			
ANR	6803119	Identifier	dest_width		6802990	0					
ANR	6803120	MultiplicativeExpression	s -> yres * s -> dest_width		6802990	1		*			
ANR	6803121	PtrMemberAccess	s -> yres		6802990	0					
ANR	6803122	Identifier	s		6802990	0					
ANR	6803123	Identifier	yres		6802990	1					
ANR	6803124	PtrMemberAccess	s -> dest_width		6802990	1					
ANR	6803125	Identifier	s		6802990	0					
ANR	6803126	Identifier	dest_width		6802990	1					
ANR	6803127	ExpressionStatement	dest = ds_get_data ( s -> ds ) + dest_width * ( s -> xres - 1 )	45:4:717:771	6802990	10	True				
ANR	6803128	AssignmentExpression	dest = ds_get_data ( s -> ds ) + dest_width * ( s -> xres - 1 )		6802990	0		=			
ANR	6803129	Identifier	dest		6802990	0					
ANR	6803130	AdditiveExpression	ds_get_data ( s -> ds ) + dest_width * ( s -> xres - 1 )		6802990	1		+			
ANR	6803131	CallExpression	ds_get_data ( s -> ds )		6802990	0					
ANR	6803132	Callee	ds_get_data		6802990	0					
ANR	6803133	Identifier	ds_get_data		6802990	0					
ANR	6803134	ArgumentList	s -> ds		6802990	1					
ANR	6803135	Argument	s -> ds		6802990	0					
ANR	6803136	PtrMemberAccess	s -> ds		6802990	0					
ANR	6803137	Identifier	s		6802990	0					
ANR	6803138	Identifier	ds		6802990	1					
ANR	6803139	MultiplicativeExpression	dest_width * ( s -> xres - 1 )		6802990	1		*			
ANR	6803140	Identifier	dest_width		6802990	0					
ANR	6803141	AdditiveExpression	s -> xres - 1		6802990	1		-			
ANR	6803142	PtrMemberAccess	s -> xres		6802990	0					
ANR	6803143	Identifier	s		6802990	0					
ANR	6803144	Identifier	xres		6802990	1					
ANR	6803145	PrimaryExpression	1		6802990	1					
ANR	6803146	ExpressionStatement	addr = ( ram_addr_t ) ( fb - phys_ram_base )	49:4:780:820	6802990	11	True				
ANR	6803147	AssignmentExpression	addr = ( ram_addr_t ) ( fb - phys_ram_base )		6802990	0		=			
ANR	6803148	Identifier	addr		6802990	0					
ANR	6803149	CastExpression	( ram_addr_t ) ( fb - phys_ram_base )		6802990	1					
ANR	6803150	CastTarget	ram_addr_t		6802990	0					
ANR	6803151	AdditiveExpression	fb - phys_ram_base		6802990	1		-			
ANR	6803152	Identifier	fb		6802990	0					
ANR	6803153	Identifier	phys_ram_base		6802990	1					
ANR	6803154	ExpressionStatement	start = addr + s -> yres * src_width	51:4:827:861	6802990	12	True				
ANR	6803155	AssignmentExpression	start = addr + s -> yres * src_width		6802990	0		=			
ANR	6803156	Identifier	start		6802990	0					
ANR	6803157	AdditiveExpression	addr + s -> yres * src_width		6802990	1		+			
ANR	6803158	Identifier	addr		6802990	0					
ANR	6803159	MultiplicativeExpression	s -> yres * src_width		6802990	1		*			
ANR	6803160	PtrMemberAccess	s -> yres		6802990	0					
ANR	6803161	Identifier	s		6802990	0					
ANR	6803162	Identifier	yres		6802990	1					
ANR	6803163	Identifier	src_width		6802990	1					
ANR	6803164	ExpressionStatement	end = addr	53:4:868:878	6802990	13	True				
ANR	6803165	AssignmentExpression	end = addr		6802990	0		=			
ANR	6803166	Identifier	end		6802990	0					
ANR	6803167	Identifier	addr		6802990	1					
ANR	6803168	ExpressionStatement	"dirty [ 0 ] = dirty [ 1 ] = cpu_physical_memory_get_dirty ( start , VGA_DIRTY_FLAG )"	55:4:885:959	6802990	14	True				
ANR	6803169	AssignmentExpression	"dirty [ 0 ] = dirty [ 1 ] = cpu_physical_memory_get_dirty ( start , VGA_DIRTY_FLAG )"		6802990	0		=			
ANR	6803170	ArrayIndexing	dirty [ 0 ]		6802990	0					
ANR	6803171	Identifier	dirty		6802990	0					
ANR	6803172	PrimaryExpression	0		6802990	1					
ANR	6803173	AssignmentExpression	"dirty [ 1 ] = cpu_physical_memory_get_dirty ( start , VGA_DIRTY_FLAG )"		6802990	1		=			
ANR	6803174	ArrayIndexing	dirty [ 1 ]		6802990	0					
ANR	6803175	Identifier	dirty		6802990	0					
ANR	6803176	PrimaryExpression	1		6802990	1					
ANR	6803177	CallExpression	"cpu_physical_memory_get_dirty ( start , VGA_DIRTY_FLAG )"		6802990	1					
ANR	6803178	Callee	cpu_physical_memory_get_dirty		6802990	0					
ANR	6803179	Identifier	cpu_physical_memory_get_dirty		6802990	0					
ANR	6803180	ArgumentList	start		6802990	1					
ANR	6803181	Argument	start		6802990	0					
ANR	6803182	Identifier	start		6802990	0					
ANR	6803183	Argument	VGA_DIRTY_FLAG		6802990	1					
ANR	6803184	Identifier	VGA_DIRTY_FLAG		6802990	0					
ANR	6803185	ForStatement	for ( y = 0 ; y < s -> yres ; y ++ )		6802990	15					
ANR	6803186	ForInit	y = 0 ;	57:9:971:976	6802990	0	True				
ANR	6803187	AssignmentExpression	y = 0		6802990	0		=			
ANR	6803188	Identifier	y		6802990	0					
ANR	6803189	PrimaryExpression	0		6802990	1					
ANR	6803190	Condition	y < s -> yres	57:16:978:988	6802990	1	True				
ANR	6803191	RelationalExpression	y < s -> yres		6802990	0		<			
ANR	6803192	Identifier	y		6802990	0					
ANR	6803193	PtrMemberAccess	s -> yres		6802990	1					
ANR	6803194	Identifier	s		6802990	0					
ANR	6803195	Identifier	yres		6802990	1					
ANR	6803196	PostIncDecOperationExpression	y ++	57:29:991:994	6802990	2	True				
ANR	6803197	Identifier	y		6802990	0					
ANR	6803198	IncDec	++		6802990	1					
ANR	6803199	CompoundStatement		53:35:877:877	6802990	3					
ANR	6803200	ExpressionStatement	new_addr = addr + src_width	59:8:1008:1035	6802990	0	True				
ANR	6803201	AssignmentExpression	new_addr = addr + src_width		6802990	0		=			
ANR	6803202	Identifier	new_addr		6802990	0					
ANR	6803203	AdditiveExpression	addr + src_width		6802990	1		+			
ANR	6803204	Identifier	addr		6802990	0					
ANR	6803205	Identifier	src_width		6802990	1					
ANR	6803206	ForStatement	for ( x = addr + TARGET_PAGE_SIZE ; x < new_addr ; x += TARGET_PAGE_SIZE )		6802990	1					
ANR	6803207	ForInit	x = addr + TARGET_PAGE_SIZE ;	61:13:1051:1078	6802990	0	True				
ANR	6803208	AssignmentExpression	x = addr + TARGET_PAGE_SIZE		6802990	0		=			
ANR	6803209	Identifier	x		6802990	0					
ANR	6803210	AdditiveExpression	addr + TARGET_PAGE_SIZE		6802990	1		+			
ANR	6803211	Identifier	addr		6802990	0					
ANR	6803212	Identifier	TARGET_PAGE_SIZE		6802990	1					
ANR	6803213	Condition	x < new_addr	61:42:1080:1091	6802990	1	True				
ANR	6803214	RelationalExpression	x < new_addr		6802990	0		<			
ANR	6803215	Identifier	x		6802990	0					
ANR	6803216	Identifier	new_addr		6802990	1					
ANR	6803217	AssignmentExpression	x += TARGET_PAGE_SIZE	63:24:1119:1139	6802990	2	True	+=			
ANR	6803218	Identifier	x		6802990	0					
ANR	6803219	Identifier	TARGET_PAGE_SIZE		6802990	1					
ANR	6803220	CompoundStatement		59:47:1022:1022	6802990	3					
ANR	6803221	ExpressionStatement	"dirty [ 1 ] = cpu_physical_memory_get_dirty ( x , VGA_DIRTY_FLAG )"	65:12:1157:1216	6802990	0	True				
ANR	6803222	AssignmentExpression	"dirty [ 1 ] = cpu_physical_memory_get_dirty ( x , VGA_DIRTY_FLAG )"		6802990	0		=			
ANR	6803223	ArrayIndexing	dirty [ 1 ]		6802990	0					
ANR	6803224	Identifier	dirty		6802990	0					
ANR	6803225	PrimaryExpression	1		6802990	1					
ANR	6803226	CallExpression	"cpu_physical_memory_get_dirty ( x , VGA_DIRTY_FLAG )"		6802990	1					
ANR	6803227	Callee	cpu_physical_memory_get_dirty		6802990	0					
ANR	6803228	Identifier	cpu_physical_memory_get_dirty		6802990	0					
ANR	6803229	ArgumentList	x		6802990	1					
ANR	6803230	Argument	x		6802990	0					
ANR	6803231	Identifier	x		6802990	0					
ANR	6803232	Argument	VGA_DIRTY_FLAG		6802990	1					
ANR	6803233	Identifier	VGA_DIRTY_FLAG		6802990	0					
ANR	6803234	ExpressionStatement	dirty [ 0 ] |= dirty [ 1 ]	67:12:1231:1251	6802990	1	True				
ANR	6803235	AssignmentExpression	dirty [ 0 ] |= dirty [ 1 ]		6802990	0		|=			
ANR	6803236	ArrayIndexing	dirty [ 0 ]		6802990	0					
ANR	6803237	Identifier	dirty		6802990	0					
ANR	6803238	PrimaryExpression	0		6802990	1					
ANR	6803239	ArrayIndexing	dirty [ 1 ]		6802990	1					
ANR	6803240	Identifier	dirty		6802990	0					
ANR	6803241	PrimaryExpression	1		6802990	1					
ANR	6803242	IfStatement	if ( dirty [ 0 ] || s -> invalidated )		6802990	2					
ANR	6803243	Condition	dirty [ 0 ] || s -> invalidated	71:12:1277:1302	6802990	0	True				
ANR	6803244	OrExpression	dirty [ 0 ] || s -> invalidated		6802990	0		||			
ANR	6803245	ArrayIndexing	dirty [ 0 ]		6802990	0					
ANR	6803246	Identifier	dirty		6802990	0					
ANR	6803247	PrimaryExpression	0		6802990	1					
ANR	6803248	PtrMemberAccess	s -> invalidated		6802990	1					
ANR	6803249	Identifier	s		6802990	0					
ANR	6803250	Identifier	invalidated		6802990	1					
ANR	6803251	CompoundStatement		67:40:1185:1185	6802990	1					
ANR	6803252	ExpressionStatement	"fn ( ( uint32_t * ) s -> dma_ch [ 0 ] . palette , dest , src , s -> xres , - dest_width )"	73:12:1320:1419	6802990	0	True				
ANR	6803253	CallExpression	"fn ( ( uint32_t * ) s -> dma_ch [ 0 ] . palette , dest , src , s -> xres , - dest_width )"		6802990	0					
ANR	6803254	Callee	fn		6802990	0					
ANR	6803255	Identifier	fn		6802990	0					
ANR	6803256	ArgumentList	( uint32_t * ) s -> dma_ch [ 0 ] . palette		6802990	1					
ANR	6803257	Argument	( uint32_t * ) s -> dma_ch [ 0 ] . palette		6802990	0					
ANR	6803258	CastExpression	( uint32_t * ) s -> dma_ch [ 0 ] . palette		6802990	0					
ANR	6803259	CastTarget	uint32_t *		6802990	0					
ANR	6803260	MemberAccess	s -> dma_ch [ 0 ] . palette		6802990	1					
ANR	6803261	ArrayIndexing	s -> dma_ch [ 0 ]		6802990	0					
ANR	6803262	PtrMemberAccess	s -> dma_ch		6802990	0					
ANR	6803263	Identifier	s		6802990	0					
ANR	6803264	Identifier	dma_ch		6802990	1					
ANR	6803265	PrimaryExpression	0		6802990	1					
ANR	6803266	Identifier	palette		6802990	1					
ANR	6803267	Argument	dest		6802990	1					
ANR	6803268	Identifier	dest		6802990	0					
ANR	6803269	Argument	src		6802990	2					
ANR	6803270	Identifier	src		6802990	0					
ANR	6803271	Argument	s -> xres		6802990	3					
ANR	6803272	PtrMemberAccess	s -> xres		6802990	0					
ANR	6803273	Identifier	s		6802990	0					
ANR	6803274	Identifier	xres		6802990	1					
ANR	6803275	Argument	- dest_width		6802990	4					
ANR	6803276	UnaryOperationExpression	- dest_width		6802990	0					
ANR	6803277	UnaryOperator	-		6802990	0					
ANR	6803278	Identifier	dest_width		6802990	1					
ANR	6803279	IfStatement	if ( addr < start )		6802990	1					
ANR	6803280	Condition	addr < start	77:16:1438:1449	6802990	0	True				
ANR	6803281	RelationalExpression	addr < start		6802990	0		<			
ANR	6803282	Identifier	addr		6802990	0					
ANR	6803283	Identifier	start		6802990	1					
ANR	6803284	ExpressionStatement	start = addr	79:16:1469:1481	6802990	1	True				
ANR	6803285	AssignmentExpression	start = addr		6802990	0		=			
ANR	6803286	Identifier	start		6802990	0					
ANR	6803287	Identifier	addr		6802990	1					
ANR	6803288	ExpressionStatement	end = new_addr	81:12:1496:1510	6802990	2	True				
ANR	6803289	AssignmentExpression	end = new_addr		6802990	0		=			
ANR	6803290	Identifier	end		6802990	0					
ANR	6803291	Identifier	new_addr		6802990	1					
ANR	6803292	IfStatement	if ( y < * miny )		6802990	3					
ANR	6803293	Condition	y < * miny	83:16:1529:1537	6802990	0	True				
ANR	6803294	RelationalExpression	y < * miny		6802990	0		<			
ANR	6803295	Identifier	y		6802990	0					
ANR	6803296	UnaryOperationExpression	* miny		6802990	1					
ANR	6803297	UnaryOperator	*		6802990	0					
ANR	6803298	Identifier	miny		6802990	1					
ANR	6803299	ExpressionStatement	* miny = y	85:16:1557:1566	6802990	1	True				
ANR	6803300	AssignmentExpression	* miny = y		6802990	0		=			
ANR	6803301	UnaryOperationExpression	* miny		6802990	0					
ANR	6803302	UnaryOperator	*		6802990	0					
ANR	6803303	Identifier	miny		6802990	1					
ANR	6803304	Identifier	y		6802990	1					
ANR	6803305	IfStatement	if ( y >= * maxy )		6802990	4					
ANR	6803306	Condition	y >= * maxy	87:16:1585:1594	6802990	0	True				
ANR	6803307	RelationalExpression	y >= * maxy		6802990	0		>=			
ANR	6803308	Identifier	y		6802990	0					
ANR	6803309	UnaryOperationExpression	* maxy		6802990	1					
ANR	6803310	UnaryOperator	*		6802990	0					
ANR	6803311	Identifier	maxy		6802990	1					
ANR	6803312	ExpressionStatement	* maxy = y + 1	89:16:1614:1627	6802990	1	True				
ANR	6803313	AssignmentExpression	* maxy = y + 1		6802990	0		=			
ANR	6803314	UnaryOperationExpression	* maxy		6802990	0					
ANR	6803315	UnaryOperator	*		6802990	0					
ANR	6803316	Identifier	maxy		6802990	1					
ANR	6803317	AdditiveExpression	y + 1		6802990	1		+			
ANR	6803318	Identifier	y		6802990	0					
ANR	6803319	PrimaryExpression	1		6802990	1					
ANR	6803320	ExpressionStatement	addr = new_addr	93:8:1649:1664	6802990	3	True				
ANR	6803321	AssignmentExpression	addr = new_addr		6802990	0		=			
ANR	6803322	Identifier	addr		6802990	0					
ANR	6803323	Identifier	new_addr		6802990	1					
ANR	6803324	ExpressionStatement	dirty [ 0 ] = dirty [ 1 ]	95:8:1675:1694	6802990	4	True				
ANR	6803325	AssignmentExpression	dirty [ 0 ] = dirty [ 1 ]		6802990	0		=			
ANR	6803326	ArrayIndexing	dirty [ 0 ]		6802990	0					
ANR	6803327	Identifier	dirty		6802990	0					
ANR	6803328	PrimaryExpression	0		6802990	1					
ANR	6803329	ArrayIndexing	dirty [ 1 ]		6802990	1					
ANR	6803330	Identifier	dirty		6802990	0					
ANR	6803331	PrimaryExpression	1		6802990	1					
ANR	6803332	ExpressionStatement	src += src_width	97:8:1705:1721	6802990	5	True				
ANR	6803333	AssignmentExpression	src += src_width		6802990	0		+=			
ANR	6803334	Identifier	src		6802990	0					
ANR	6803335	Identifier	src_width		6802990	1					
ANR	6803336	ExpressionStatement	dest += s -> dest_width	99:8:1732:1753	6802990	6	True				
ANR	6803337	AssignmentExpression	dest += s -> dest_width		6802990	0		+=			
ANR	6803338	Identifier	dest		6802990	0					
ANR	6803339	PtrMemberAccess	s -> dest_width		6802990	1					
ANR	6803340	Identifier	s		6802990	0					
ANR	6803341	Identifier	dest_width		6802990	1					
ANR	6803342	IfStatement	if ( end > start )		6802990	16					
ANR	6803343	Condition	end > start	105:8:1773:1783	6802990	0	True				
ANR	6803344	RelationalExpression	end > start		6802990	0		>			
ANR	6803345	Identifier	end		6802990	0					
ANR	6803346	Identifier	start		6802990	1					
ANR	6803347	ExpressionStatement	"cpu_physical_memory_reset_dirty ( start , end , VGA_DIRTY_FLAG )"	107:8:1795:1854	6802990	1	True				
ANR	6803348	CallExpression	"cpu_physical_memory_reset_dirty ( start , end , VGA_DIRTY_FLAG )"		6802990	0					
ANR	6803349	Callee	cpu_physical_memory_reset_dirty		6802990	0					
ANR	6803350	Identifier	cpu_physical_memory_reset_dirty		6802990	0					
ANR	6803351	ArgumentList	start		6802990	1					
ANR	6803352	Argument	start		6802990	0					
ANR	6803353	Identifier	start		6802990	0					
ANR	6803354	Argument	end		6802990	1					
ANR	6803355	Identifier	end		6802990	0					
ANR	6803356	Argument	VGA_DIRTY_FLAG		6802990	2					
ANR	6803357	Identifier	VGA_DIRTY_FLAG		6802990	0					
ANR	6803358	ReturnType	static void		6802990	1					
ANR	6803359	Identifier	pxa2xx_lcdc_dma0_redraw_vert		6802990	2					
ANR	6803360	ParameterList	"struct pxa2xx_lcdc_s * s , uint8_t * fb , int * miny , int * maxy"		6802990	3					
ANR	6803361	Parameter	struct pxa2xx_lcdc_s * s	1:41:41:63	6802990	0	True				
ANR	6803362	ParameterType	struct pxa2xx_lcdc_s *		6802990	0					
ANR	6803363	Identifier	s		6802990	1					
ANR	6803364	Parameter	uint8_t * fb	3:16:83:93	6802990	1	True				
ANR	6803365	ParameterType	uint8_t *		6802990	0					
ANR	6803366	Identifier	fb		6802990	1					
ANR	6803367	Parameter	int * miny	3:29:96:104	6802990	2	True				
ANR	6803368	ParameterType	int *		6802990	0					
ANR	6803369	Identifier	miny		6802990	1					
ANR	6803370	Parameter	int * maxy	3:40:107:115	6802990	3	True				
ANR	6803371	ParameterType	int *		6802990	0					
ANR	6803372	Identifier	maxy		6802990	1					
ANR	6803373	CFGEntryNode	ENTRY		6802990		True				
ANR	6803374	CFGExitNode	EXIT		6802990		True				
ANR	6803375	Symbol	pxa_lcdc_19pbpp		6802990						
ANR	6803376	Symbol	s -> line_fn		6802990						
ANR	6803377	Symbol	pxa_lcdc_16bpp		6802990						
ANR	6803378	Symbol	s -> transp		6802990						
ANR	6803379	Symbol	pxa_lcdc_8bpp		6802990						
ANR	6803380	Symbol	fn		6802990						
ANR	6803381	Symbol	src_width		6802990						
ANR	6803382	Symbol	dest		6802990						
ANR	6803383	Symbol	s -> yres		6802990						
ANR	6803384	Symbol	* dirty		6802990						
ANR	6803385	Symbol	* * s -> line_fn		6802990						
ANR	6803386	Symbol	* s -> line_fn		6802990						
ANR	6803387	Symbol	pxa_lcdc_18pbpp		6802990						
ANR	6803388	Symbol	s -> dma_ch [ 0 ] . palette		6802990						
ANR	6803389	Symbol	miny		6802990						
ANR	6803390	Symbol	cpu_physical_memory_get_dirty		6802990						
ANR	6803391	Symbol	* * s		6802990						
ANR	6803392	Symbol	end		6802990						
ANR	6803393	Symbol	addr		6802990						
ANR	6803394	Symbol	dirty		6802990						
ANR	6803395	Symbol	ds_get_data		6802990						
ANR	6803396	Symbol	src		6802990						
ANR	6803397	Symbol	maxy		6802990						
ANR	6803398	Symbol	start		6802990						
ANR	6803399	Symbol	* s -> transp		6802990						
ANR	6803400	Symbol	s -> xres		6802990						
ANR	6803401	Symbol	TARGET_PAGE_SIZE		6802990						
ANR	6803402	Symbol	* * s -> transp		6802990						
ANR	6803403	Symbol	* maxy		6802990						
ANR	6803404	Symbol	dest_width		6802990						
ANR	6803405	Symbol	* * * s		6802990						
ANR	6803406	Symbol	s -> ds		6802990						
ANR	6803407	Symbol	* s -> dma_ch		6802990						
ANR	6803408	Symbol	s -> invalidated		6802990						
ANR	6803409	Symbol	s -> bpp		6802990						
ANR	6803410	Symbol	s		6802990						
ANR	6803411	Symbol	~3		6802990						
ANR	6803412	Symbol	VGA_DIRTY_FLAG		6802990						
ANR	6803413	Symbol	x		6802990						
ANR	6803414	Symbol	s -> dest_width		6802990						
ANR	6803415	Symbol	y		6802990						
ANR	6803416	Symbol	* s -> bpp		6802990						
ANR	6803417	Symbol	s -> dma_ch		6802990						
ANR	6803418	Symbol	phys_ram_base		6802990						
ANR	6803419	Symbol	fb		6802990						
ANR	6803420	Symbol	* miny		6802990						
ANR	6803421	Symbol	* s		6802990						
ANR	6803422	Symbol	new_addr		6802990						
