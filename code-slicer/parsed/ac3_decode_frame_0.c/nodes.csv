command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	346015	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ac3_decode_frame_0.c								
ANR	346016	Function	ac3_decode_frame	1:0:0:6566							
ANR	346017	FunctionDef	"ac3_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		346016	0					
ANR	346018	CompoundStatement		5:0:131:6566	346016	0					
ANR	346019	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:138:170	346016	0	True				
ANR	346020	IdentifierDecl	* buf = avpkt -> data		346016	0					
ANR	346021	IdentifierDeclType	const uint8_t *		346016	0					
ANR	346022	Identifier	buf		346016	1					
ANR	346023	AssignmentExpression	* buf = avpkt -> data		346016	2		=			
ANR	346024	Identifier	buf		346016	0					
ANR	346025	PtrMemberAccess	avpkt -> data		346016	1					
ANR	346026	Identifier	avpkt		346016	0					
ANR	346027	Identifier	data		346016	1					
ANR	346028	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:177:203	346016	1	True				
ANR	346029	IdentifierDecl	buf_size = avpkt -> size		346016	0					
ANR	346030	IdentifierDeclType	int		346016	0					
ANR	346031	Identifier	buf_size		346016	1					
ANR	346032	AssignmentExpression	buf_size = avpkt -> size		346016	2		=			
ANR	346033	Identifier	buf_size		346016	0					
ANR	346034	PtrMemberAccess	avpkt -> size		346016	1					
ANR	346035	Identifier	avpkt		346016	0					
ANR	346036	Identifier	size		346016	1					
ANR	346037	IdentifierDeclStatement	AC3DecodeContext * s = avctx -> priv_data ;	11:4:210:248	346016	2	True				
ANR	346038	IdentifierDecl	* s = avctx -> priv_data		346016	0					
ANR	346039	IdentifierDeclType	AC3DecodeContext *		346016	0					
ANR	346040	Identifier	s		346016	1					
ANR	346041	AssignmentExpression	* s = avctx -> priv_data		346016	2		=			
ANR	346042	Identifier	s		346016	0					
ANR	346043	PtrMemberAccess	avctx -> priv_data		346016	1					
ANR	346044	Identifier	avctx		346016	0					
ANR	346045	Identifier	priv_data		346016	1					
ANR	346046	IdentifierDeclStatement	"int blk , ch , err , ret ;"	13:4:255:276	346016	3	True				
ANR	346047	IdentifierDecl	blk		346016	0					
ANR	346048	IdentifierDeclType	int		346016	0					
ANR	346049	Identifier	blk		346016	1					
ANR	346050	IdentifierDecl	ch		346016	1					
ANR	346051	IdentifierDeclType	int		346016	0					
ANR	346052	Identifier	ch		346016	1					
ANR	346053	IdentifierDecl	err		346016	2					
ANR	346054	IdentifierDeclType	int		346016	0					
ANR	346055	Identifier	err		346016	1					
ANR	346056	IdentifierDecl	ret		346016	3					
ANR	346057	IdentifierDeclType	int		346016	0					
ANR	346058	Identifier	ret		346016	1					
ANR	346059	IdentifierDeclStatement	const uint8_t * channel_map ;	15:4:283:309	346016	4	True				
ANR	346060	IdentifierDecl	* channel_map		346016	0					
ANR	346061	IdentifierDeclType	const uint8_t *		346016	0					
ANR	346062	Identifier	channel_map		346016	1					
ANR	346063	IdentifierDeclStatement	const float * output [ AC3_MAX_CHANNELS ] ;	17:4:316:353	346016	5	True				
ANR	346064	IdentifierDecl	* output [ AC3_MAX_CHANNELS ]		346016	0					
ANR	346065	IdentifierDeclType	const float * [ AC3_MAX_CHANNELS ]		346016	0					
ANR	346066	Identifier	output		346016	1					
ANR	346067	Identifier	AC3_MAX_CHANNELS		346016	2					
ANR	346068	IfStatement	if ( buf_size >= 2 && AV_RB16 ( buf ) == 0x770B )		346016	6					
ANR	346069	Condition	buf_size >= 2 && AV_RB16 ( buf ) == 0x770B	25:8:514:552	346016	0	True				
ANR	346070	AndExpression	buf_size >= 2 && AV_RB16 ( buf ) == 0x770B		346016	0		&&			
ANR	346071	RelationalExpression	buf_size >= 2		346016	0		>=			
ANR	346072	Identifier	buf_size		346016	0					
ANR	346073	PrimaryExpression	2		346016	1					
ANR	346074	EqualityExpression	AV_RB16 ( buf ) == 0x770B		346016	1		==			
ANR	346075	CallExpression	AV_RB16 ( buf )		346016	0					
ANR	346076	Callee	AV_RB16		346016	0					
ANR	346077	Identifier	AV_RB16		346016	0					
ANR	346078	ArgumentList	buf		346016	1					
ANR	346079	Argument	buf		346016	0					
ANR	346080	Identifier	buf		346016	0					
ANR	346081	PrimaryExpression	0x770B		346016	1					
ANR	346082	CompoundStatement		25:8:476:529	346016	1					
ANR	346083	IdentifierDeclStatement	"int cnt = FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE ) >> 1 ;"	29:8:608:661	346016	0	True				
ANR	346084	IdentifierDecl	"cnt = FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE ) >> 1"		346016	0					
ANR	346085	IdentifierDeclType	int		346016	0					
ANR	346086	Identifier	cnt		346016	1					
ANR	346087	AssignmentExpression	"cnt = FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE ) >> 1"		346016	2		=			
ANR	346088	Identifier	cnt		346016	0					
ANR	346089	ShiftExpression	"FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE ) >> 1"		346016	1		>>			
ANR	346090	CallExpression	"FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE )"		346016	0					
ANR	346091	Callee	FFMIN		346016	0					
ANR	346092	Identifier	FFMIN		346016	0					
ANR	346093	ArgumentList	buf_size		346016	1					
ANR	346094	Argument	buf_size		346016	0					
ANR	346095	Identifier	buf_size		346016	0					
ANR	346096	Argument	AC3_FRAME_BUFFER_SIZE		346016	1					
ANR	346097	Identifier	AC3_FRAME_BUFFER_SIZE		346016	0					
ANR	346098	PrimaryExpression	1		346016	1					
ANR	346099	ExpressionStatement	"s -> dsp . bswap16_buf ( ( uint16_t * ) s -> input_buffer , ( const uint16_t * ) buf , cnt )"	31:8:672:747	346016	1	True				
ANR	346100	CallExpression	"s -> dsp . bswap16_buf ( ( uint16_t * ) s -> input_buffer , ( const uint16_t * ) buf , cnt )"		346016	0					
ANR	346101	Callee	s -> dsp . bswap16_buf		346016	0					
ANR	346102	MemberAccess	s -> dsp . bswap16_buf		346016	0					
ANR	346103	PtrMemberAccess	s -> dsp		346016	0					
ANR	346104	Identifier	s		346016	0					
ANR	346105	Identifier	dsp		346016	1					
ANR	346106	Identifier	bswap16_buf		346016	1					
ANR	346107	ArgumentList	( uint16_t * ) s -> input_buffer		346016	1					
ANR	346108	Argument	( uint16_t * ) s -> input_buffer		346016	0					
ANR	346109	CastExpression	( uint16_t * ) s -> input_buffer		346016	0					
ANR	346110	CastTarget	uint16_t *		346016	0					
ANR	346111	PtrMemberAccess	s -> input_buffer		346016	1					
ANR	346112	Identifier	s		346016	0					
ANR	346113	Identifier	input_buffer		346016	1					
ANR	346114	Argument	( const uint16_t * ) buf		346016	1					
ANR	346115	CastExpression	( const uint16_t * ) buf		346016	0					
ANR	346116	CastTarget	const uint16_t *		346016	0					
ANR	346117	Identifier	buf		346016	1					
ANR	346118	Argument	cnt		346016	2					
ANR	346119	Identifier	cnt		346016	0					
ANR	346120	ElseStatement	else		346016	0					
ANR	346121	ExpressionStatement	"memcpy ( s -> input_buffer , buf , FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE ) )"	35:8:770:838	346016	0	True				
ANR	346122	CallExpression	"memcpy ( s -> input_buffer , buf , FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE ) )"		346016	0					
ANR	346123	Callee	memcpy		346016	0					
ANR	346124	Identifier	memcpy		346016	0					
ANR	346125	ArgumentList	s -> input_buffer		346016	1					
ANR	346126	Argument	s -> input_buffer		346016	0					
ANR	346127	PtrMemberAccess	s -> input_buffer		346016	0					
ANR	346128	Identifier	s		346016	0					
ANR	346129	Identifier	input_buffer		346016	1					
ANR	346130	Argument	buf		346016	1					
ANR	346131	Identifier	buf		346016	0					
ANR	346132	Argument	"FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE )"		346016	2					
ANR	346133	CallExpression	"FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE )"		346016	0					
ANR	346134	Callee	FFMIN		346016	0					
ANR	346135	Identifier	FFMIN		346016	0					
ANR	346136	ArgumentList	buf_size		346016	1					
ANR	346137	Argument	buf_size		346016	0					
ANR	346138	Identifier	buf_size		346016	0					
ANR	346139	Argument	AC3_FRAME_BUFFER_SIZE		346016	1					
ANR	346140	Identifier	AC3_FRAME_BUFFER_SIZE		346016	0					
ANR	346141	ExpressionStatement	buf = s -> input_buffer	37:4:845:866	346016	7	True				
ANR	346142	AssignmentExpression	buf = s -> input_buffer		346016	0		=			
ANR	346143	Identifier	buf		346016	0					
ANR	346144	PtrMemberAccess	s -> input_buffer		346016	1					
ANR	346145	Identifier	s		346016	0					
ANR	346146	Identifier	input_buffer		346016	1					
ANR	346147	ExpressionStatement	"init_get_bits ( & s -> gbc , buf , buf_size * 8 )"	41:4:948:989	346016	8	True				
ANR	346148	CallExpression	"init_get_bits ( & s -> gbc , buf , buf_size * 8 )"		346016	0					
ANR	346149	Callee	init_get_bits		346016	0					
ANR	346150	Identifier	init_get_bits		346016	0					
ANR	346151	ArgumentList	& s -> gbc		346016	1					
ANR	346152	Argument	& s -> gbc		346016	0					
ANR	346153	UnaryOperationExpression	& s -> gbc		346016	0					
ANR	346154	UnaryOperator	&		346016	0					
ANR	346155	PtrMemberAccess	s -> gbc		346016	1					
ANR	346156	Identifier	s		346016	0					
ANR	346157	Identifier	gbc		346016	1					
ANR	346158	Argument	buf		346016	1					
ANR	346159	Identifier	buf		346016	0					
ANR	346160	Argument	buf_size * 8		346016	2					
ANR	346161	MultiplicativeExpression	buf_size * 8		346016	0		*			
ANR	346162	Identifier	buf_size		346016	0					
ANR	346163	PrimaryExpression	8		346016	1					
ANR	346164	ExpressionStatement	err = parse_frame_header ( s )	47:4:1028:1055	346016	9	True				
ANR	346165	AssignmentExpression	err = parse_frame_header ( s )		346016	0		=			
ANR	346166	Identifier	err		346016	0					
ANR	346167	CallExpression	parse_frame_header ( s )		346016	1					
ANR	346168	Callee	parse_frame_header		346016	0					
ANR	346169	Identifier	parse_frame_header		346016	0					
ANR	346170	ArgumentList	s		346016	1					
ANR	346171	Argument	s		346016	0					
ANR	346172	Identifier	s		346016	0					
ANR	346173	IfStatement	if ( err )		346016	10					
ANR	346174	Condition	err	51:8:1068:1070	346016	0	True				
ANR	346175	Identifier	err		346016	0					
ANR	346176	CompoundStatement		47:13:941:941	346016	1					
ANR	346177	SwitchStatement	switch ( err )		346016	0					
ANR	346178	Condition	err	53:16:1092:1094	346016	0	True				
ANR	346179	Identifier	err		346016	0					
ANR	346180	CompoundStatement		49:21:965:965	346016	1					
ANR	346181	Label	case AAC_AC3_PARSE_ERROR_SYNC :	55:8:1108:1137	346016	0	True				
ANR	346182	Identifier	AAC_AC3_PARSE_ERROR_SYNC		346016	0					
ANR	346183	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame sync error\\n"" )"	57:12:1152:1201	346016	1	True				
ANR	346184	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame sync error\\n"" )"		346016	0					
ANR	346185	Callee	av_log		346016	0					
ANR	346186	Identifier	av_log		346016	0					
ANR	346187	ArgumentList	avctx		346016	1					
ANR	346188	Argument	avctx		346016	0					
ANR	346189	Identifier	avctx		346016	0					
ANR	346190	Argument	AV_LOG_ERROR		346016	1					
ANR	346191	Identifier	AV_LOG_ERROR		346016	0					
ANR	346192	Argument	"""frame sync error\\n"""		346016	2					
ANR	346193	PrimaryExpression	"""frame sync error\\n"""		346016	0					
ANR	346194	ReturnStatement	return - 1 ;	59:12:1216:1225	346016	2	True				
ANR	346195	UnaryOperationExpression	- 1		346016	0					
ANR	346196	UnaryOperator	-		346016	0					
ANR	346197	PrimaryExpression	1		346016	1					
ANR	346198	Label	case AAC_AC3_PARSE_ERROR_BSID :	61:8:1236:1265	346016	3	True				
ANR	346199	Identifier	AAC_AC3_PARSE_ERROR_BSID		346016	0					
ANR	346200	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid bitstream id\\n"" )"	63:12:1280:1333	346016	4	True				
ANR	346201	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid bitstream id\\n"" )"		346016	0					
ANR	346202	Callee	av_log		346016	0					
ANR	346203	Identifier	av_log		346016	0					
ANR	346204	ArgumentList	avctx		346016	1					
ANR	346205	Argument	avctx		346016	0					
ANR	346206	Identifier	avctx		346016	0					
ANR	346207	Argument	AV_LOG_ERROR		346016	1					
ANR	346208	Identifier	AV_LOG_ERROR		346016	0					
ANR	346209	Argument	"""invalid bitstream id\\n"""		346016	2					
ANR	346210	PrimaryExpression	"""invalid bitstream id\\n"""		346016	0					
ANR	346211	BreakStatement	break ;	65:12:1348:1353	346016	5	True				
ANR	346212	Label	case AAC_AC3_PARSE_ERROR_SAMPLE_RATE :	67:8:1364:1400	346016	6	True				
ANR	346213	Identifier	AAC_AC3_PARSE_ERROR_SAMPLE_RATE		346016	0					
ANR	346214	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid sample rate\\n"" )"	69:12:1415:1467	346016	7	True				
ANR	346215	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid sample rate\\n"" )"		346016	0					
ANR	346216	Callee	av_log		346016	0					
ANR	346217	Identifier	av_log		346016	0					
ANR	346218	ArgumentList	avctx		346016	1					
ANR	346219	Argument	avctx		346016	0					
ANR	346220	Identifier	avctx		346016	0					
ANR	346221	Argument	AV_LOG_ERROR		346016	1					
ANR	346222	Identifier	AV_LOG_ERROR		346016	0					
ANR	346223	Argument	"""invalid sample rate\\n"""		346016	2					
ANR	346224	PrimaryExpression	"""invalid sample rate\\n"""		346016	0					
ANR	346225	BreakStatement	break ;	71:12:1482:1487	346016	8	True				
ANR	346226	Label	case AAC_AC3_PARSE_ERROR_FRAME_SIZE :	73:8:1498:1533	346016	9	True				
ANR	346227	Identifier	AAC_AC3_PARSE_ERROR_FRAME_SIZE		346016	0					
ANR	346228	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame size\\n"" )"	75:12:1548:1599	346016	10	True				
ANR	346229	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame size\\n"" )"		346016	0					
ANR	346230	Callee	av_log		346016	0					
ANR	346231	Identifier	av_log		346016	0					
ANR	346232	ArgumentList	avctx		346016	1					
ANR	346233	Argument	avctx		346016	0					
ANR	346234	Identifier	avctx		346016	0					
ANR	346235	Argument	AV_LOG_ERROR		346016	1					
ANR	346236	Identifier	AV_LOG_ERROR		346016	0					
ANR	346237	Argument	"""invalid frame size\\n"""		346016	2					
ANR	346238	PrimaryExpression	"""invalid frame size\\n"""		346016	0					
ANR	346239	BreakStatement	break ;	77:12:1614:1619	346016	11	True				
ANR	346240	Label	case AAC_AC3_PARSE_ERROR_FRAME_TYPE :	79:8:1630:1665	346016	12	True				
ANR	346241	Identifier	AAC_AC3_PARSE_ERROR_FRAME_TYPE		346016	0					
ANR	346242	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT || s -> substreamid )		346016	13					
ANR	346243	Condition	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT || s -> substreamid	85:16:1834:1893	346016	0	True				
ANR	346244	OrExpression	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT || s -> substreamid		346016	0		||			
ANR	346245	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT		346016	0		==			
ANR	346246	PtrMemberAccess	s -> frame_type		346016	0					
ANR	346247	Identifier	s		346016	0					
ANR	346248	Identifier	frame_type		346016	1					
ANR	346249	Identifier	EAC3_FRAME_TYPE_DEPENDENT		346016	1					
ANR	346250	PtrMemberAccess	s -> substreamid		346016	1					
ANR	346251	Identifier	s		346016	0					
ANR	346252	Identifier	substreamid		346016	1					
ANR	346253	CompoundStatement		81:78:1764:1764	346016	1					
ANR	346254	Statement	av_log	87:16:1915:1920	346016	0	True				
ANR	346255	Statement	(	87:22:1921:1921	346016	1	True				
ANR	346256	Statement	avctx	87:23:1922:1926	346016	2	True				
ANR	346257	Statement	","	87:28:1927:1927	346016	3	True				
ANR	346258	Statement	AV_LOG_ERROR	87:30:1929:1940	346016	4	True				
ANR	346259	Statement	","	87:42:1941:1941	346016	5	True				
ANR	346260	Statement	"""unsupported frame type : """	87:44:1943:1969	346016	6	True				
ANR	346261	Statement	"""skipping frame\\n"""	89:23:1995:2012	346016	7	True				
ANR	346262	Statement	)	89:41:2013:2013	346016	8	True				
ANR	346263	ExpressionStatement		89:42:2014:2014	346016	9	True				
ANR	346264	ExpressionStatement	* got_frame_ptr = 0	91:16:2033:2051	346016	10	True				
ANR	346265	AssignmentExpression	* got_frame_ptr = 0		346016	0		=			
ANR	346266	UnaryOperationExpression	* got_frame_ptr		346016	0					
ANR	346267	UnaryOperator	*		346016	0					
ANR	346268	Identifier	got_frame_ptr		346016	1					
ANR	346269	PrimaryExpression	0		346016	1					
ANR	346270	ReturnStatement	return s -> frame_size ;	93:16:2070:2090	346016	11	True				
ANR	346271	PtrMemberAccess	s -> frame_size		346016	0					
ANR	346272	Identifier	s		346016	0					
ANR	346273	Identifier	frame_size		346016	1					
ANR	346274	ElseStatement	else		346016	0					
ANR	346275	CompoundStatement		91:19:1980:1980	346016	0					
ANR	346276	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame type\\n"" )"	97:16:2131:2182	346016	0	True				
ANR	346277	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame type\\n"" )"		346016	0					
ANR	346278	Callee	av_log		346016	0					
ANR	346279	Identifier	av_log		346016	0					
ANR	346280	ArgumentList	avctx		346016	1					
ANR	346281	Argument	avctx		346016	0					
ANR	346282	Identifier	avctx		346016	0					
ANR	346283	Argument	AV_LOG_ERROR		346016	1					
ANR	346284	Identifier	AV_LOG_ERROR		346016	0					
ANR	346285	Argument	"""invalid frame type\\n"""		346016	2					
ANR	346286	PrimaryExpression	"""invalid frame type\\n"""		346016	0					
ANR	346287	BreakStatement	break ;	101:12:2212:2217	346016	14	True				
ANR	346288	Label	default :	103:8:2228:2235	346016	15	True				
ANR	346289	Identifier	default		346016	0					
ANR	346290	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid header\\n"" )"	105:12:2250:2297	346016	16	True				
ANR	346291	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid header\\n"" )"		346016	0					
ANR	346292	Callee	av_log		346016	0					
ANR	346293	Identifier	av_log		346016	0					
ANR	346294	ArgumentList	avctx		346016	1					
ANR	346295	Argument	avctx		346016	0					
ANR	346296	Identifier	avctx		346016	0					
ANR	346297	Argument	AV_LOG_ERROR		346016	1					
ANR	346298	Identifier	AV_LOG_ERROR		346016	0					
ANR	346299	Argument	"""invalid header\\n"""		346016	2					
ANR	346300	PrimaryExpression	"""invalid header\\n"""		346016	0					
ANR	346301	BreakStatement	break ;	107:12:2312:2317	346016	17	True				
ANR	346302	ElseStatement	else		346016	0					
ANR	346303	CompoundStatement		107:11:2210:2210	346016	0					
ANR	346304	IfStatement	if ( s -> frame_size > buf_size )		346016	0					
ANR	346305	Condition	s -> frame_size > buf_size	115:12:2424:2447	346016	0	True				
ANR	346306	RelationalExpression	s -> frame_size > buf_size		346016	0		>			
ANR	346307	PtrMemberAccess	s -> frame_size		346016	0					
ANR	346308	Identifier	s		346016	0					
ANR	346309	Identifier	frame_size		346016	1					
ANR	346310	Identifier	buf_size		346016	1					
ANR	346311	CompoundStatement		111:38:2318:2318	346016	1					
ANR	346312	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""incomplete frame\\n"" )"	117:12:2465:2514	346016	0	True				
ANR	346313	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""incomplete frame\\n"" )"		346016	0					
ANR	346314	Callee	av_log		346016	0					
ANR	346315	Identifier	av_log		346016	0					
ANR	346316	ArgumentList	avctx		346016	1					
ANR	346317	Argument	avctx		346016	0					
ANR	346318	Identifier	avctx		346016	0					
ANR	346319	Argument	AV_LOG_ERROR		346016	1					
ANR	346320	Identifier	AV_LOG_ERROR		346016	0					
ANR	346321	Argument	"""incomplete frame\\n"""		346016	2					
ANR	346322	PrimaryExpression	"""incomplete frame\\n"""		346016	0					
ANR	346323	ExpressionStatement	err = AAC_AC3_PARSE_ERROR_FRAME_SIZE	119:12:2529:2565	346016	1	True				
ANR	346324	AssignmentExpression	err = AAC_AC3_PARSE_ERROR_FRAME_SIZE		346016	0		=			
ANR	346325	Identifier	err		346016	0					
ANR	346326	Identifier	AAC_AC3_PARSE_ERROR_FRAME_SIZE		346016	1					
ANR	346327	ElseStatement	else		346016	0					
ANR	346328	IfStatement	if ( avctx -> err_recognition & ( AV_EF_CRCCHECK | AV_EF_CAREFUL ) )		346016	0					
ANR	346329	Condition	avctx -> err_recognition & ( AV_EF_CRCCHECK | AV_EF_CAREFUL )	121:19:2587:2641	346016	0	True				
ANR	346330	BitAndExpression	avctx -> err_recognition & ( AV_EF_CRCCHECK | AV_EF_CAREFUL )		346016	0		&			
ANR	346331	PtrMemberAccess	avctx -> err_recognition		346016	0					
ANR	346332	Identifier	avctx		346016	0					
ANR	346333	Identifier	err_recognition		346016	1					
ANR	346334	InclusiveOrExpression	AV_EF_CRCCHECK | AV_EF_CAREFUL		346016	1		|			
ANR	346335	Identifier	AV_EF_CRCCHECK		346016	0					
ANR	346336	Identifier	AV_EF_CAREFUL		346016	1					
ANR	346337	CompoundStatement		117:76:2512:2512	346016	1					
ANR	346338	IfStatement	"if ( av_crc ( av_crc_get_table ( AV_CRC_16_ANSI ) , 0 , & buf [ 2 ] , s -> frame_size - 2 ) )"		346016	0					
ANR	346339	Condition	"av_crc ( av_crc_get_table ( AV_CRC_16_ANSI ) , 0 , & buf [ 2 ] , s -> frame_size - 2 )"	125:16:2705:2799	346016	0	True				
ANR	346340	CallExpression	"av_crc ( av_crc_get_table ( AV_CRC_16_ANSI ) , 0 , & buf [ 2 ] , s -> frame_size - 2 )"		346016	0					
ANR	346341	Callee	av_crc		346016	0					
ANR	346342	Identifier	av_crc		346016	0					
ANR	346343	ArgumentList	av_crc_get_table ( AV_CRC_16_ANSI )		346016	1					
ANR	346344	Argument	av_crc_get_table ( AV_CRC_16_ANSI )		346016	0					
ANR	346345	CallExpression	av_crc_get_table ( AV_CRC_16_ANSI )		346016	0					
ANR	346346	Callee	av_crc_get_table		346016	0					
ANR	346347	Identifier	av_crc_get_table		346016	0					
ANR	346348	ArgumentList	AV_CRC_16_ANSI		346016	1					
ANR	346349	Argument	AV_CRC_16_ANSI		346016	0					
ANR	346350	Identifier	AV_CRC_16_ANSI		346016	0					
ANR	346351	Argument	0		346016	1					
ANR	346352	PrimaryExpression	0		346016	0					
ANR	346353	Argument	& buf [ 2 ]		346016	2					
ANR	346354	UnaryOperationExpression	& buf [ 2 ]		346016	0					
ANR	346355	UnaryOperator	&		346016	0					
ANR	346356	ArrayIndexing	buf [ 2 ]		346016	1					
ANR	346357	Identifier	buf		346016	0					
ANR	346358	PrimaryExpression	2		346016	1					
ANR	346359	Argument	s -> frame_size - 2		346016	3					
ANR	346360	AdditiveExpression	s -> frame_size - 2		346016	0		-			
ANR	346361	PtrMemberAccess	s -> frame_size		346016	0					
ANR	346362	Identifier	s		346016	0					
ANR	346363	Identifier	frame_size		346016	1					
ANR	346364	PrimaryExpression	2		346016	1					
ANR	346365	CompoundStatement		123:43:2670:2670	346016	1					
ANR	346366	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame CRC mismatch\\n"" )"	129:16:2821:2872	346016	0	True				
ANR	346367	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame CRC mismatch\\n"" )"		346016	0					
ANR	346368	Callee	av_log		346016	0					
ANR	346369	Identifier	av_log		346016	0					
ANR	346370	ArgumentList	avctx		346016	1					
ANR	346371	Argument	avctx		346016	0					
ANR	346372	Identifier	avctx		346016	0					
ANR	346373	Argument	AV_LOG_ERROR		346016	1					
ANR	346374	Identifier	AV_LOG_ERROR		346016	0					
ANR	346375	Argument	"""frame CRC mismatch\\n"""		346016	2					
ANR	346376	PrimaryExpression	"""frame CRC mismatch\\n"""		346016	0					
ANR	346377	ExpressionStatement	err = AAC_AC3_PARSE_ERROR_CRC	131:16:2891:2920	346016	1	True				
ANR	346378	AssignmentExpression	err = AAC_AC3_PARSE_ERROR_CRC		346016	0		=			
ANR	346379	Identifier	err		346016	0					
ANR	346380	Identifier	AAC_AC3_PARSE_ERROR_CRC		346016	1					
ANR	346381	IfStatement	if ( ! err )		346016	11					
ANR	346382	Condition	! err	143:8:3014:3017	346016	0	True				
ANR	346383	UnaryOperationExpression	! err		346016	0					
ANR	346384	UnaryOperator	!		346016	0					
ANR	346385	Identifier	err		346016	1					
ANR	346386	CompoundStatement		139:14:2888:2888	346016	1					
ANR	346387	ExpressionStatement	avctx -> sample_rate = s -> sample_rate	145:8:3031:3066	346016	0	True				
ANR	346388	AssignmentExpression	avctx -> sample_rate = s -> sample_rate		346016	0		=			
ANR	346389	PtrMemberAccess	avctx -> sample_rate		346016	0					
ANR	346390	Identifier	avctx		346016	0					
ANR	346391	Identifier	sample_rate		346016	1					
ANR	346392	PtrMemberAccess	s -> sample_rate		346016	1					
ANR	346393	Identifier	s		346016	0					
ANR	346394	Identifier	sample_rate		346016	1					
ANR	346395	ExpressionStatement	avctx -> bit_rate = s -> bit_rate	147:8:3077:3109	346016	1	True				
ANR	346396	AssignmentExpression	avctx -> bit_rate = s -> bit_rate		346016	0		=			
ANR	346397	PtrMemberAccess	avctx -> bit_rate		346016	0					
ANR	346398	Identifier	avctx		346016	0					
ANR	346399	Identifier	bit_rate		346016	1					
ANR	346400	PtrMemberAccess	s -> bit_rate		346016	1					
ANR	346401	Identifier	s		346016	0					
ANR	346402	Identifier	bit_rate		346016	1					
ANR	346403	ExpressionStatement	s -> out_channels = s -> channels	153:8:3152:3181	346016	2	True				
ANR	346404	AssignmentExpression	s -> out_channels = s -> channels		346016	0		=			
ANR	346405	PtrMemberAccess	s -> out_channels		346016	0					
ANR	346406	Identifier	s		346016	0					
ANR	346407	Identifier	out_channels		346016	1					
ANR	346408	PtrMemberAccess	s -> channels		346016	1					
ANR	346409	Identifier	s		346016	0					
ANR	346410	Identifier	channels		346016	1					
ANR	346411	ExpressionStatement	s -> output_mode = s -> channel_mode	155:8:3192:3225	346016	3	True				
ANR	346412	AssignmentExpression	s -> output_mode = s -> channel_mode		346016	0		=			
ANR	346413	PtrMemberAccess	s -> output_mode		346016	0					
ANR	346414	Identifier	s		346016	0					
ANR	346415	Identifier	output_mode		346016	1					
ANR	346416	PtrMemberAccess	s -> channel_mode		346016	1					
ANR	346417	Identifier	s		346016	0					
ANR	346418	Identifier	channel_mode		346016	1					
ANR	346419	IfStatement	if ( s -> lfe_on )		346016	4					
ANR	346420	Condition	s -> lfe_on	157:12:3240:3248	346016	0	True				
ANR	346421	PtrMemberAccess	s -> lfe_on		346016	0					
ANR	346422	Identifier	s		346016	0					
ANR	346423	Identifier	lfe_on		346016	1					
ANR	346424	ExpressionStatement	s -> output_mode |= AC3_OUTPUT_LFEON	159:12:3264:3298	346016	1	True				
ANR	346425	AssignmentExpression	s -> output_mode |= AC3_OUTPUT_LFEON		346016	0		|=			
ANR	346426	PtrMemberAccess	s -> output_mode		346016	0					
ANR	346427	Identifier	s		346016	0					
ANR	346428	Identifier	output_mode		346016	1					
ANR	346429	Identifier	AC3_OUTPUT_LFEON		346016	1					
ANR	346430	IfStatement	if ( avctx -> request_channels > 0 && avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels )		346016	5					
ANR	346431	Condition	avctx -> request_channels > 0 && avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels	161:12:3313:3429	346016	0	True				
ANR	346432	AndExpression	avctx -> request_channels > 0 && avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels		346016	0		&&			
ANR	346433	RelationalExpression	avctx -> request_channels > 0		346016	0		>			
ANR	346434	PtrMemberAccess	avctx -> request_channels		346016	0					
ANR	346435	Identifier	avctx		346016	0					
ANR	346436	Identifier	request_channels		346016	1					
ANR	346437	PrimaryExpression	0		346016	1					
ANR	346438	AndExpression	avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels		346016	1		&&			
ANR	346439	RelationalExpression	avctx -> request_channels <= 2		346016	0		<=			
ANR	346440	PtrMemberAccess	avctx -> request_channels		346016	0					
ANR	346441	Identifier	avctx		346016	0					
ANR	346442	Identifier	request_channels		346016	1					
ANR	346443	PrimaryExpression	2		346016	1					
ANR	346444	RelationalExpression	avctx -> request_channels < s -> channels		346016	1		<			
ANR	346445	PtrMemberAccess	avctx -> request_channels		346016	0					
ANR	346446	Identifier	avctx		346016	0					
ANR	346447	Identifier	request_channels		346016	1					
ANR	346448	PtrMemberAccess	s -> channels		346016	1					
ANR	346449	Identifier	s		346016	0					
ANR	346450	Identifier	channels		346016	1					
ANR	346451	CompoundStatement		159:55:3300:3300	346016	1					
ANR	346452	ExpressionStatement	s -> out_channels = avctx -> request_channels	165:12:3447:3488	346016	0	True				
ANR	346453	AssignmentExpression	s -> out_channels = avctx -> request_channels		346016	0		=			
ANR	346454	PtrMemberAccess	s -> out_channels		346016	0					
ANR	346455	Identifier	s		346016	0					
ANR	346456	Identifier	out_channels		346016	1					
ANR	346457	PtrMemberAccess	avctx -> request_channels		346016	1					
ANR	346458	Identifier	avctx		346016	0					
ANR	346459	Identifier	request_channels		346016	1					
ANR	346460	ExpressionStatement	s -> output_mode = avctx -> request_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO	167:12:3503:3587	346016	1	True				
ANR	346461	AssignmentExpression	s -> output_mode = avctx -> request_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		346016	0		=			
ANR	346462	PtrMemberAccess	s -> output_mode		346016	0					
ANR	346463	Identifier	s		346016	0					
ANR	346464	Identifier	output_mode		346016	1					
ANR	346465	ConditionalExpression	avctx -> request_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		346016	1					
ANR	346466	Condition	avctx -> request_channels == 1		346016	0					
ANR	346467	EqualityExpression	avctx -> request_channels == 1		346016	0		==			
ANR	346468	PtrMemberAccess	avctx -> request_channels		346016	0					
ANR	346469	Identifier	avctx		346016	0					
ANR	346470	Identifier	request_channels		346016	1					
ANR	346471	PrimaryExpression	1		346016	1					
ANR	346472	Identifier	AC3_CHMODE_MONO		346016	1					
ANR	346473	Identifier	AC3_CHMODE_STEREO		346016	2					
ANR	346474	ExpressionStatement	s -> channel_layout = avpriv_ac3_channel_layout_tab [ s -> output_mode ]	169:12:3602:3667	346016	2	True				
ANR	346475	AssignmentExpression	s -> channel_layout = avpriv_ac3_channel_layout_tab [ s -> output_mode ]		346016	0		=			
ANR	346476	PtrMemberAccess	s -> channel_layout		346016	0					
ANR	346477	Identifier	s		346016	0					
ANR	346478	Identifier	channel_layout		346016	1					
ANR	346479	ArrayIndexing	avpriv_ac3_channel_layout_tab [ s -> output_mode ]		346016	1					
ANR	346480	Identifier	avpriv_ac3_channel_layout_tab		346016	0					
ANR	346481	PtrMemberAccess	s -> output_mode		346016	1					
ANR	346482	Identifier	s		346016	0					
ANR	346483	Identifier	output_mode		346016	1					
ANR	346484	ExpressionStatement	avctx -> channels = s -> out_channels	173:8:3689:3728	346016	6	True				
ANR	346485	AssignmentExpression	avctx -> channels = s -> out_channels		346016	0		=			
ANR	346486	PtrMemberAccess	avctx -> channels		346016	0					
ANR	346487	Identifier	avctx		346016	0					
ANR	346488	Identifier	channels		346016	1					
ANR	346489	PtrMemberAccess	s -> out_channels		346016	1					
ANR	346490	Identifier	s		346016	0					
ANR	346491	Identifier	out_channels		346016	1					
ANR	346492	ExpressionStatement	avctx -> channel_layout = s -> channel_layout	175:8:3739:3780	346016	7	True				
ANR	346493	AssignmentExpression	avctx -> channel_layout = s -> channel_layout		346016	0		=			
ANR	346494	PtrMemberAccess	avctx -> channel_layout		346016	0					
ANR	346495	Identifier	avctx		346016	0					
ANR	346496	Identifier	channel_layout		346016	1					
ANR	346497	PtrMemberAccess	s -> channel_layout		346016	1					
ANR	346498	Identifier	s		346016	0					
ANR	346499	Identifier	channel_layout		346016	1					
ANR	346500	ExpressionStatement	s -> loro_center_mix_level = gain_levels [ s -> center_mix_level ]	179:8:3793:3856	346016	8	True				
ANR	346501	AssignmentExpression	s -> loro_center_mix_level = gain_levels [ s -> center_mix_level ]		346016	0		=			
ANR	346502	PtrMemberAccess	s -> loro_center_mix_level		346016	0					
ANR	346503	Identifier	s		346016	0					
ANR	346504	Identifier	loro_center_mix_level		346016	1					
ANR	346505	ArrayIndexing	gain_levels [ s -> center_mix_level ]		346016	1					
ANR	346506	Identifier	gain_levels		346016	0					
ANR	346507	PtrMemberAccess	s -> center_mix_level		346016	1					
ANR	346508	Identifier	s		346016	0					
ANR	346509	Identifier	center_mix_level		346016	1					
ANR	346510	ExpressionStatement	s -> loro_surround_mix_level = gain_levels [ s -> surround_mix_level ]	181:8:3867:3930	346016	9	True				
ANR	346511	AssignmentExpression	s -> loro_surround_mix_level = gain_levels [ s -> surround_mix_level ]		346016	0		=			
ANR	346512	PtrMemberAccess	s -> loro_surround_mix_level		346016	0					
ANR	346513	Identifier	s		346016	0					
ANR	346514	Identifier	loro_surround_mix_level		346016	1					
ANR	346515	ArrayIndexing	gain_levels [ s -> surround_mix_level ]		346016	1					
ANR	346516	Identifier	gain_levels		346016	0					
ANR	346517	PtrMemberAccess	s -> surround_mix_level		346016	1					
ANR	346518	Identifier	s		346016	0					
ANR	346519	Identifier	surround_mix_level		346016	1					
ANR	346520	ExpressionStatement	s -> ltrt_center_mix_level = LEVEL_MINUS_3DB	183:8:3941:3985	346016	10	True				
ANR	346521	AssignmentExpression	s -> ltrt_center_mix_level = LEVEL_MINUS_3DB		346016	0		=			
ANR	346522	PtrMemberAccess	s -> ltrt_center_mix_level		346016	0					
ANR	346523	Identifier	s		346016	0					
ANR	346524	Identifier	ltrt_center_mix_level		346016	1					
ANR	346525	Identifier	LEVEL_MINUS_3DB		346016	1					
ANR	346526	ExpressionStatement	s -> ltrt_surround_mix_level = LEVEL_MINUS_3DB	185:8:3996:4040	346016	11	True				
ANR	346527	AssignmentExpression	s -> ltrt_surround_mix_level = LEVEL_MINUS_3DB		346016	0		=			
ANR	346528	PtrMemberAccess	s -> ltrt_surround_mix_level		346016	0					
ANR	346529	Identifier	s		346016	0					
ANR	346530	Identifier	ltrt_surround_mix_level		346016	1					
ANR	346531	Identifier	LEVEL_MINUS_3DB		346016	1					
ANR	346532	IfStatement	if ( s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels ) )		346016	12					
ANR	346533	Condition	s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )	189:12:4108:4234	346016	0	True				
ANR	346534	AndExpression	s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )		346016	0		&&			
ANR	346535	EqualityExpression	s -> channels != s -> out_channels		346016	0		!=			
ANR	346536	PtrMemberAccess	s -> channels		346016	0					
ANR	346537	Identifier	s		346016	0					
ANR	346538	Identifier	channels		346016	1					
ANR	346539	PtrMemberAccess	s -> out_channels		346016	1					
ANR	346540	Identifier	s		346016	0					
ANR	346541	Identifier	out_channels		346016	1					
ANR	346542	UnaryOperationExpression	! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )		346016	1					
ANR	346543	UnaryOperator	!		346016	0					
ANR	346544	AndExpression	( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels		346016	1		&&			
ANR	346545	BitAndExpression	s -> output_mode & AC3_OUTPUT_LFEON		346016	0		&			
ANR	346546	PtrMemberAccess	s -> output_mode		346016	0					
ANR	346547	Identifier	s		346016	0					
ANR	346548	Identifier	output_mode		346016	1					
ANR	346549	Identifier	AC3_OUTPUT_LFEON		346016	1					
ANR	346550	EqualityExpression	s -> fbw_channels == s -> out_channels		346016	1		==			
ANR	346551	PtrMemberAccess	s -> fbw_channels		346016	0					
ANR	346552	Identifier	s		346016	0					
ANR	346553	Identifier	fbw_channels		346016	1					
ANR	346554	PtrMemberAccess	s -> out_channels		346016	1					
ANR	346555	Identifier	s		346016	0					
ANR	346556	Identifier	out_channels		346016	1					
ANR	346557	CompoundStatement		187:53:4105:4105	346016	1					
ANR	346558	ExpressionStatement	set_downmix_coeffs ( s )	193:12:4252:4273	346016	0	True				
ANR	346559	CallExpression	set_downmix_coeffs ( s )		346016	0					
ANR	346560	Callee	set_downmix_coeffs		346016	0					
ANR	346561	Identifier	set_downmix_coeffs		346016	0					
ANR	346562	ArgumentList	s		346016	1					
ANR	346563	Argument	s		346016	0					
ANR	346564	Identifier	s		346016	0					
ANR	346565	ElseStatement	else		346016	0					
ANR	346566	IfStatement	if ( ! s -> out_channels )		346016	0					
ANR	346567	Condition	! s -> out_channels	197:15:4302:4317	346016	0	True				
ANR	346568	UnaryOperationExpression	! s -> out_channels		346016	0					
ANR	346569	UnaryOperator	!		346016	0					
ANR	346570	PtrMemberAccess	s -> out_channels		346016	1					
ANR	346571	Identifier	s		346016	0					
ANR	346572	Identifier	out_channels		346016	1					
ANR	346573	CompoundStatement		193:33:4188:4188	346016	1					
ANR	346574	ExpressionStatement	s -> out_channels = avctx -> channels	199:8:4331:4364	346016	0	True				
ANR	346575	AssignmentExpression	s -> out_channels = avctx -> channels		346016	0		=			
ANR	346576	PtrMemberAccess	s -> out_channels		346016	0					
ANR	346577	Identifier	s		346016	0					
ANR	346578	Identifier	out_channels		346016	1					
ANR	346579	PtrMemberAccess	avctx -> channels		346016	1					
ANR	346580	Identifier	avctx		346016	0					
ANR	346581	Identifier	channels		346016	1					
ANR	346582	IfStatement	if ( s -> out_channels < s -> channels )		346016	1					
ANR	346583	Condition	s -> out_channels < s -> channels	201:12:4379:4407	346016	0	True				
ANR	346584	RelationalExpression	s -> out_channels < s -> channels		346016	0		<			
ANR	346585	PtrMemberAccess	s -> out_channels		346016	0					
ANR	346586	Identifier	s		346016	0					
ANR	346587	Identifier	out_channels		346016	1					
ANR	346588	PtrMemberAccess	s -> channels		346016	1					
ANR	346589	Identifier	s		346016	0					
ANR	346590	Identifier	channels		346016	1					
ANR	346591	ExpressionStatement	s -> output_mode = s -> out_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO	203:12:4423:4499	346016	1	True				
ANR	346592	AssignmentExpression	s -> output_mode = s -> out_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		346016	0		=			
ANR	346593	PtrMemberAccess	s -> output_mode		346016	0					
ANR	346594	Identifier	s		346016	0					
ANR	346595	Identifier	output_mode		346016	1					
ANR	346596	ConditionalExpression	s -> out_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		346016	1					
ANR	346597	Condition	s -> out_channels == 1		346016	0					
ANR	346598	EqualityExpression	s -> out_channels == 1		346016	0		==			
ANR	346599	PtrMemberAccess	s -> out_channels		346016	0					
ANR	346600	Identifier	s		346016	0					
ANR	346601	Identifier	out_channels		346016	1					
ANR	346602	PrimaryExpression	1		346016	1					
ANR	346603	Identifier	AC3_CHMODE_MONO		346016	1					
ANR	346604	Identifier	AC3_CHMODE_STEREO		346016	2					
ANR	346605	IfStatement	if ( avctx -> channels != s -> out_channels )		346016	12					
ANR	346606	Condition	avctx -> channels != s -> out_channels	207:8:4517:4550	346016	0	True				
ANR	346607	EqualityExpression	avctx -> channels != s -> out_channels		346016	0		!=			
ANR	346608	PtrMemberAccess	avctx -> channels		346016	0					
ANR	346609	Identifier	avctx		346016	0					
ANR	346610	Identifier	channels		346016	1					
ANR	346611	PtrMemberAccess	s -> out_channels		346016	1					
ANR	346612	Identifier	s		346016	0					
ANR	346613	Identifier	out_channels		346016	1					
ANR	346614	CompoundStatement		203:44:4421:4421	346016	1					
ANR	346615	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""channel number mismatching on damaged frame\\n"" )"	209:8:4564:4640	346016	0	True				
ANR	346616	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""channel number mismatching on damaged frame\\n"" )"		346016	0					
ANR	346617	Callee	av_log		346016	0					
ANR	346618	Identifier	av_log		346016	0					
ANR	346619	ArgumentList	avctx		346016	1					
ANR	346620	Argument	avctx		346016	0					
ANR	346621	Identifier	avctx		346016	0					
ANR	346622	Argument	AV_LOG_ERROR		346016	1					
ANR	346623	Identifier	AV_LOG_ERROR		346016	0					
ANR	346624	Argument	"""channel number mismatching on damaged frame\\n"""		346016	2					
ANR	346625	PrimaryExpression	"""channel number mismatching on damaged frame\\n"""		346016	0					
ANR	346626	ReturnStatement	return AVERROR_INVALIDDATA ;	211:8:4651:4677	346016	1	True				
ANR	346627	Identifier	AVERROR_INVALIDDATA		346016	0					
ANR	346628	ExpressionStatement	avctx -> audio_service_type = s -> bitstream_mode	217:4:4758:4803	346016	13	True				
ANR	346629	AssignmentExpression	avctx -> audio_service_type = s -> bitstream_mode		346016	0		=			
ANR	346630	PtrMemberAccess	avctx -> audio_service_type		346016	0					
ANR	346631	Identifier	avctx		346016	0					
ANR	346632	Identifier	audio_service_type		346016	1					
ANR	346633	PtrMemberAccess	s -> bitstream_mode		346016	1					
ANR	346634	Identifier	s		346016	0					
ANR	346635	Identifier	bitstream_mode		346016	1					
ANR	346636	IfStatement	if ( s -> bitstream_mode == 0x7 && s -> channels > 1 )		346016	14					
ANR	346637	Condition	s -> bitstream_mode == 0x7 && s -> channels > 1	219:8:4814:4856	346016	0	True				
ANR	346638	AndExpression	s -> bitstream_mode == 0x7 && s -> channels > 1		346016	0		&&			
ANR	346639	EqualityExpression	s -> bitstream_mode == 0x7		346016	0		==			
ANR	346640	PtrMemberAccess	s -> bitstream_mode		346016	0					
ANR	346641	Identifier	s		346016	0					
ANR	346642	Identifier	bitstream_mode		346016	1					
ANR	346643	PrimaryExpression	0x7		346016	1					
ANR	346644	RelationalExpression	s -> channels > 1		346016	1		>			
ANR	346645	PtrMemberAccess	s -> channels		346016	0					
ANR	346646	Identifier	s		346016	0					
ANR	346647	Identifier	channels		346016	1					
ANR	346648	PrimaryExpression	1		346016	1					
ANR	346649	ExpressionStatement	avctx -> audio_service_type = AV_AUDIO_SERVICE_TYPE_KARAOKE	221:8:4868:4925	346016	1	True				
ANR	346650	AssignmentExpression	avctx -> audio_service_type = AV_AUDIO_SERVICE_TYPE_KARAOKE		346016	0		=			
ANR	346651	PtrMemberAccess	avctx -> audio_service_type		346016	0					
ANR	346652	Identifier	avctx		346016	0					
ANR	346653	Identifier	audio_service_type		346016	1					
ANR	346654	Identifier	AV_AUDIO_SERVICE_TYPE_KARAOKE		346016	1					
ANR	346655	ExpressionStatement	avctx -> channels = s -> out_channels	227:4:4963:4996	346016	15	True				
ANR	346656	AssignmentExpression	avctx -> channels = s -> out_channels		346016	0		=			
ANR	346657	PtrMemberAccess	avctx -> channels		346016	0					
ANR	346658	Identifier	avctx		346016	0					
ANR	346659	Identifier	channels		346016	1					
ANR	346660	PtrMemberAccess	s -> out_channels		346016	1					
ANR	346661	Identifier	s		346016	0					
ANR	346662	Identifier	out_channels		346016	1					
ANR	346663	ExpressionStatement	s -> frame . nb_samples = s -> num_blocks * 256	229:4:5003:5044	346016	16	True				
ANR	346664	AssignmentExpression	s -> frame . nb_samples = s -> num_blocks * 256		346016	0		=			
ANR	346665	MemberAccess	s -> frame . nb_samples		346016	0					
ANR	346666	PtrMemberAccess	s -> frame		346016	0					
ANR	346667	Identifier	s		346016	0					
ANR	346668	Identifier	frame		346016	1					
ANR	346669	Identifier	nb_samples		346016	1					
ANR	346670	MultiplicativeExpression	s -> num_blocks * 256		346016	1		*			
ANR	346671	PtrMemberAccess	s -> num_blocks		346016	0					
ANR	346672	Identifier	s		346016	0					
ANR	346673	Identifier	num_blocks		346016	1					
ANR	346674	PrimaryExpression	256		346016	1					
ANR	346675	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , & s -> frame ) ) < 0 )"		346016	17					
ANR	346676	Condition	"( ret = ff_get_buffer ( avctx , & s -> frame ) ) < 0"	231:8:5055:5097	346016	0	True				
ANR	346677	RelationalExpression	"( ret = ff_get_buffer ( avctx , & s -> frame ) ) < 0"		346016	0		<			
ANR	346678	AssignmentExpression	"ret = ff_get_buffer ( avctx , & s -> frame )"		346016	0		=			
ANR	346679	Identifier	ret		346016	0					
ANR	346680	CallExpression	"ff_get_buffer ( avctx , & s -> frame )"		346016	1					
ANR	346681	Callee	ff_get_buffer		346016	0					
ANR	346682	Identifier	ff_get_buffer		346016	0					
ANR	346683	ArgumentList	avctx		346016	1					
ANR	346684	Argument	avctx		346016	0					
ANR	346685	Identifier	avctx		346016	0					
ANR	346686	Argument	& s -> frame		346016	1					
ANR	346687	UnaryOperationExpression	& s -> frame		346016	0					
ANR	346688	UnaryOperator	&		346016	0					
ANR	346689	PtrMemberAccess	s -> frame		346016	1					
ANR	346690	Identifier	s		346016	0					
ANR	346691	Identifier	frame		346016	1					
ANR	346692	PrimaryExpression	0		346016	1					
ANR	346693	CompoundStatement		227:53:4968:4968	346016	1					
ANR	346694	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	233:8:5111:5163	346016	0	True				
ANR	346695	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		346016	0					
ANR	346696	Callee	av_log		346016	0					
ANR	346697	Identifier	av_log		346016	0					
ANR	346698	ArgumentList	avctx		346016	1					
ANR	346699	Argument	avctx		346016	0					
ANR	346700	Identifier	avctx		346016	0					
ANR	346701	Argument	AV_LOG_ERROR		346016	1					
ANR	346702	Identifier	AV_LOG_ERROR		346016	0					
ANR	346703	Argument	"""get_buffer() failed\\n"""		346016	2					
ANR	346704	PrimaryExpression	"""get_buffer() failed\\n"""		346016	0					
ANR	346705	ReturnStatement	return ret ;	235:8:5174:5184	346016	1	True				
ANR	346706	Identifier	ret		346016	0					
ANR	346707	ExpressionStatement	channel_map = ff_ac3_dec_channel_map [ s -> output_mode & ~AC3_OUTPUT_LFEON ] [ s -> lfe_on ]	243:4:5235:5318	346016	18	True				
ANR	346708	AssignmentExpression	channel_map = ff_ac3_dec_channel_map [ s -> output_mode & ~AC3_OUTPUT_LFEON ] [ s -> lfe_on ]		346016	0		=			
ANR	346709	Identifier	channel_map		346016	0					
ANR	346710	ArrayIndexing	ff_ac3_dec_channel_map [ s -> output_mode & ~AC3_OUTPUT_LFEON ] [ s -> lfe_on ]		346016	1					
ANR	346711	ArrayIndexing	ff_ac3_dec_channel_map [ s -> output_mode & ~AC3_OUTPUT_LFEON ]		346016	0					
ANR	346712	Identifier	ff_ac3_dec_channel_map		346016	0					
ANR	346713	BitAndExpression	s -> output_mode & ~AC3_OUTPUT_LFEON		346016	1		&			
ANR	346714	PtrMemberAccess	s -> output_mode		346016	0					
ANR	346715	Identifier	s		346016	0					
ANR	346716	Identifier	output_mode		346016	1					
ANR	346717	Identifier	~AC3_OUTPUT_LFEON		346016	1					
ANR	346718	PtrMemberAccess	s -> lfe_on		346016	1					
ANR	346719	Identifier	s		346016	0					
ANR	346720	Identifier	lfe_on		346016	1					
ANR	346721	ForStatement	for ( ch = 0 ; ch < AC3_MAX_CHANNELS ; ch ++ )		346016	19					
ANR	346722	ForInit	ch = 0 ;	245:9:5330:5336	346016	0	True				
ANR	346723	AssignmentExpression	ch = 0		346016	0		=			
ANR	346724	Identifier	ch		346016	0					
ANR	346725	PrimaryExpression	0		346016	1					
ANR	346726	Condition	ch < AC3_MAX_CHANNELS	245:17:5338:5358	346016	1	True				
ANR	346727	RelationalExpression	ch < AC3_MAX_CHANNELS		346016	0		<			
ANR	346728	Identifier	ch		346016	0					
ANR	346729	Identifier	AC3_MAX_CHANNELS		346016	1					
ANR	346730	PostIncDecOperationExpression	ch ++	245:40:5361:5364	346016	2	True				
ANR	346731	Identifier	ch		346016	0					
ANR	346732	IncDec	++		346016	1					
ANR	346733	CompoundStatement		241:46:5235:5235	346016	3					
ANR	346734	ExpressionStatement	output [ ch ] = s -> output [ ch ]	247:8:5378:5404	346016	0	True				
ANR	346735	AssignmentExpression	output [ ch ] = s -> output [ ch ]		346016	0		=			
ANR	346736	ArrayIndexing	output [ ch ]		346016	0					
ANR	346737	Identifier	output		346016	0					
ANR	346738	Identifier	ch		346016	1					
ANR	346739	ArrayIndexing	s -> output [ ch ]		346016	1					
ANR	346740	PtrMemberAccess	s -> output		346016	0					
ANR	346741	Identifier	s		346016	0					
ANR	346742	Identifier	output		346016	1					
ANR	346743	Identifier	ch		346016	1					
ANR	346744	ExpressionStatement	s -> outptr [ ch ] = s -> output [ ch ]	249:8:5415:5444	346016	1	True				
ANR	346745	AssignmentExpression	s -> outptr [ ch ] = s -> output [ ch ]		346016	0		=			
ANR	346746	ArrayIndexing	s -> outptr [ ch ]		346016	0					
ANR	346747	PtrMemberAccess	s -> outptr		346016	0					
ANR	346748	Identifier	s		346016	0					
ANR	346749	Identifier	outptr		346016	1					
ANR	346750	Identifier	ch		346016	1					
ANR	346751	ArrayIndexing	s -> output [ ch ]		346016	1					
ANR	346752	PtrMemberAccess	s -> output		346016	0					
ANR	346753	Identifier	s		346016	0					
ANR	346754	Identifier	output		346016	1					
ANR	346755	Identifier	ch		346016	1					
ANR	346756	ForStatement	for ( ch = 0 ; ch < s -> channels ; ch ++ )		346016	20					
ANR	346757	ForInit	ch = 0 ;	253:9:5463:5469	346016	0	True				
ANR	346758	AssignmentExpression	ch = 0		346016	0		=			
ANR	346759	Identifier	ch		346016	0					
ANR	346760	PrimaryExpression	0		346016	1					
ANR	346761	Condition	ch < s -> channels	253:17:5471:5486	346016	1	True				
ANR	346762	RelationalExpression	ch < s -> channels		346016	0		<			
ANR	346763	Identifier	ch		346016	0					
ANR	346764	PtrMemberAccess	s -> channels		346016	1					
ANR	346765	Identifier	s		346016	0					
ANR	346766	Identifier	channels		346016	1					
ANR	346767	PostIncDecOperationExpression	ch ++	253:35:5489:5492	346016	2	True				
ANR	346768	Identifier	ch		346016	0					
ANR	346769	IncDec	++		346016	1					
ANR	346770	CompoundStatement		249:41:5363:5363	346016	3					
ANR	346771	IfStatement	if ( ch < s -> out_channels )		346016	0					
ANR	346772	Condition	ch < s -> out_channels	255:12:5510:5529	346016	0	True				
ANR	346773	RelationalExpression	ch < s -> out_channels		346016	0		<			
ANR	346774	Identifier	ch		346016	0					
ANR	346775	PtrMemberAccess	s -> out_channels		346016	1					
ANR	346776	Identifier	s		346016	0					
ANR	346777	Identifier	out_channels		346016	1					
ANR	346778	ExpressionStatement	s -> outptr [ channel_map [ ch ] ] = ( float * ) s -> frame . data [ ch ]	257:12:5545:5600	346016	1	True				
ANR	346779	AssignmentExpression	s -> outptr [ channel_map [ ch ] ] = ( float * ) s -> frame . data [ ch ]		346016	0		=			
ANR	346780	ArrayIndexing	s -> outptr [ channel_map [ ch ] ]		346016	0					
ANR	346781	PtrMemberAccess	s -> outptr		346016	0					
ANR	346782	Identifier	s		346016	0					
ANR	346783	Identifier	outptr		346016	1					
ANR	346784	ArrayIndexing	channel_map [ ch ]		346016	1					
ANR	346785	Identifier	channel_map		346016	0					
ANR	346786	Identifier	ch		346016	1					
ANR	346787	CastExpression	( float * ) s -> frame . data [ ch ]		346016	1					
ANR	346788	CastTarget	float *		346016	0					
ANR	346789	ArrayIndexing	s -> frame . data [ ch ]		346016	1					
ANR	346790	MemberAccess	s -> frame . data		346016	0					
ANR	346791	PtrMemberAccess	s -> frame		346016	0					
ANR	346792	Identifier	s		346016	0					
ANR	346793	Identifier	frame		346016	1					
ANR	346794	Identifier	data		346016	1					
ANR	346795	Identifier	ch		346016	1					
ANR	346796	ForStatement	for ( blk = 0 ; blk < s -> num_blocks ; blk ++ )		346016	21					
ANR	346797	ForInit	blk = 0 ;	261:9:5619:5626	346016	0	True				
ANR	346798	AssignmentExpression	blk = 0		346016	0		=			
ANR	346799	Identifier	blk		346016	0					
ANR	346800	PrimaryExpression	0		346016	1					
ANR	346801	Condition	blk < s -> num_blocks	261:18:5628:5646	346016	1	True				
ANR	346802	RelationalExpression	blk < s -> num_blocks		346016	0		<			
ANR	346803	Identifier	blk		346016	0					
ANR	346804	PtrMemberAccess	s -> num_blocks		346016	1					
ANR	346805	Identifier	s		346016	0					
ANR	346806	Identifier	num_blocks		346016	1					
ANR	346807	PostIncDecOperationExpression	blk ++	261:39:5649:5653	346016	2	True				
ANR	346808	Identifier	blk		346016	0					
ANR	346809	IncDec	++		346016	1					
ANR	346810	CompoundStatement		257:46:5524:5524	346016	3					
ANR	346811	IfStatement	"if ( ! err && decode_audio_block ( s , blk ) )"		346016	0					
ANR	346812	Condition	"! err && decode_audio_block ( s , blk )"	263:12:5671:5704	346016	0	True				
ANR	346813	AndExpression	"! err && decode_audio_block ( s , blk )"		346016	0		&&			
ANR	346814	UnaryOperationExpression	! err		346016	0					
ANR	346815	UnaryOperator	!		346016	0					
ANR	346816	Identifier	err		346016	1					
ANR	346817	CallExpression	"decode_audio_block ( s , blk )"		346016	1					
ANR	346818	Callee	decode_audio_block		346016	0					
ANR	346819	Identifier	decode_audio_block		346016	0					
ANR	346820	ArgumentList	s		346016	1					
ANR	346821	Argument	s		346016	0					
ANR	346822	Identifier	s		346016	0					
ANR	346823	Argument	blk		346016	1					
ANR	346824	Identifier	blk		346016	0					
ANR	346825	CompoundStatement		259:48:5575:5575	346016	1					
ANR	346826	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""error decoding the audio block\\n"" )"	265:12:5722:5785	346016	0	True				
ANR	346827	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""error decoding the audio block\\n"" )"		346016	0					
ANR	346828	Callee	av_log		346016	0					
ANR	346829	Identifier	av_log		346016	0					
ANR	346830	ArgumentList	avctx		346016	1					
ANR	346831	Argument	avctx		346016	0					
ANR	346832	Identifier	avctx		346016	0					
ANR	346833	Argument	AV_LOG_ERROR		346016	1					
ANR	346834	Identifier	AV_LOG_ERROR		346016	0					
ANR	346835	Argument	"""error decoding the audio block\\n"""		346016	2					
ANR	346836	PrimaryExpression	"""error decoding the audio block\\n"""		346016	0					
ANR	346837	ExpressionStatement	err = 1	267:12:5800:5807	346016	1	True				
ANR	346838	AssignmentExpression	err = 1		346016	0		=			
ANR	346839	Identifier	err		346016	0					
ANR	346840	PrimaryExpression	1		346016	1					
ANR	346841	IfStatement	if ( err )		346016	1					
ANR	346842	Condition	err	271:12:5833:5835	346016	0	True				
ANR	346843	Identifier	err		346016	0					
ANR	346844	ForStatement	for ( ch = 0 ; ch < s -> out_channels ; ch ++ )		346016	1					
ANR	346845	ForInit	ch = 0 ;	273:17:5856:5862	346016	0	True				
ANR	346846	AssignmentExpression	ch = 0		346016	0		=			
ANR	346847	Identifier	ch		346016	0					
ANR	346848	PrimaryExpression	0		346016	1					
ANR	346849	Condition	ch < s -> out_channels	273:25:5864:5883	346016	1	True				
ANR	346850	RelationalExpression	ch < s -> out_channels		346016	0		<			
ANR	346851	Identifier	ch		346016	0					
ANR	346852	PtrMemberAccess	s -> out_channels		346016	1					
ANR	346853	Identifier	s		346016	0					
ANR	346854	Identifier	out_channels		346016	1					
ANR	346855	PostIncDecOperationExpression	ch ++	273:47:5886:5889	346016	2	True				
ANR	346856	Identifier	ch		346016	0					
ANR	346857	IncDec	++		346016	1					
ANR	346858	ExpressionStatement	"memcpy ( ( ( float * ) s -> frame . data [ ch ] ) + AC3_BLOCK_SIZE * blk , output [ ch ] , 1024 )"	275:16:5909:5983	346016	3	True				
ANR	346859	CallExpression	"memcpy ( ( ( float * ) s -> frame . data [ ch ] ) + AC3_BLOCK_SIZE * blk , output [ ch ] , 1024 )"		346016	0					
ANR	346860	Callee	memcpy		346016	0					
ANR	346861	Identifier	memcpy		346016	0					
ANR	346862	ArgumentList	( ( float * ) s -> frame . data [ ch ] ) + AC3_BLOCK_SIZE * blk		346016	1					
ANR	346863	Argument	( ( float * ) s -> frame . data [ ch ] ) + AC3_BLOCK_SIZE * blk		346016	0					
ANR	346864	AdditiveExpression	( ( float * ) s -> frame . data [ ch ] ) + AC3_BLOCK_SIZE * blk		346016	0		+			
ANR	346865	CastExpression	( float * ) s -> frame . data [ ch ]		346016	0					
ANR	346866	CastTarget	float *		346016	0					
ANR	346867	ArrayIndexing	s -> frame . data [ ch ]		346016	1					
ANR	346868	MemberAccess	s -> frame . data		346016	0					
ANR	346869	PtrMemberAccess	s -> frame		346016	0					
ANR	346870	Identifier	s		346016	0					
ANR	346871	Identifier	frame		346016	1					
ANR	346872	Identifier	data		346016	1					
ANR	346873	Identifier	ch		346016	1					
ANR	346874	MultiplicativeExpression	AC3_BLOCK_SIZE * blk		346016	1		*			
ANR	346875	Identifier	AC3_BLOCK_SIZE		346016	0					
ANR	346876	Identifier	blk		346016	1					
ANR	346877	Argument	output [ ch ]		346016	1					
ANR	346878	ArrayIndexing	output [ ch ]		346016	0					
ANR	346879	Identifier	output		346016	0					
ANR	346880	Identifier	ch		346016	1					
ANR	346881	Argument	1024		346016	2					
ANR	346882	PrimaryExpression	1024		346016	0					
ANR	346883	ForStatement	for ( ch = 0 ; ch < s -> out_channels ; ch ++ )		346016	2					
ANR	346884	ForInit	ch = 0 ;	277:13:5999:6005	346016	0	True				
ANR	346885	AssignmentExpression	ch = 0		346016	0		=			
ANR	346886	Identifier	ch		346016	0					
ANR	346887	PrimaryExpression	0		346016	1					
ANR	346888	Condition	ch < s -> out_channels	277:21:6007:6026	346016	1	True				
ANR	346889	RelationalExpression	ch < s -> out_channels		346016	0		<			
ANR	346890	Identifier	ch		346016	0					
ANR	346891	PtrMemberAccess	s -> out_channels		346016	1					
ANR	346892	Identifier	s		346016	0					
ANR	346893	Identifier	out_channels		346016	1					
ANR	346894	PostIncDecOperationExpression	ch ++	277:43:6029:6032	346016	2	True				
ANR	346895	Identifier	ch		346016	0					
ANR	346896	IncDec	++		346016	1					
ANR	346897	CompoundStatement		273:49:5903:5903	346016	3					
ANR	346898	ExpressionStatement	output [ ch ] = s -> outptr [ channel_map [ ch ] ]	279:12:6050:6089	346016	0	True				
ANR	346899	AssignmentExpression	output [ ch ] = s -> outptr [ channel_map [ ch ] ]		346016	0		=			
ANR	346900	ArrayIndexing	output [ ch ]		346016	0					
ANR	346901	Identifier	output		346016	0					
ANR	346902	Identifier	ch		346016	1					
ANR	346903	ArrayIndexing	s -> outptr [ channel_map [ ch ] ]		346016	1					
ANR	346904	PtrMemberAccess	s -> outptr		346016	0					
ANR	346905	Identifier	s		346016	0					
ANR	346906	Identifier	outptr		346016	1					
ANR	346907	ArrayIndexing	channel_map [ ch ]		346016	1					
ANR	346908	Identifier	channel_map		346016	0					
ANR	346909	Identifier	ch		346016	1					
ANR	346910	IfStatement	if ( ! ch || channel_map [ ch ] )		346016	1					
ANR	346911	Condition	! ch || channel_map [ ch ]	281:16:6108:6129	346016	0	True				
ANR	346912	OrExpression	! ch || channel_map [ ch ]		346016	0		||			
ANR	346913	UnaryOperationExpression	! ch		346016	0					
ANR	346914	UnaryOperator	!		346016	0					
ANR	346915	Identifier	ch		346016	1					
ANR	346916	ArrayIndexing	channel_map [ ch ]		346016	1					
ANR	346917	Identifier	channel_map		346016	0					
ANR	346918	Identifier	ch		346016	1					
ANR	346919	ExpressionStatement	s -> outptr [ channel_map [ ch ] ] += AC3_BLOCK_SIZE	283:16:6149:6193	346016	1	True				
ANR	346920	AssignmentExpression	s -> outptr [ channel_map [ ch ] ] += AC3_BLOCK_SIZE		346016	0		+=			
ANR	346921	ArrayIndexing	s -> outptr [ channel_map [ ch ] ]		346016	0					
ANR	346922	PtrMemberAccess	s -> outptr		346016	0					
ANR	346923	Identifier	s		346016	0					
ANR	346924	Identifier	outptr		346016	1					
ANR	346925	ArrayIndexing	channel_map [ ch ]		346016	1					
ANR	346926	Identifier	channel_map		346016	0					
ANR	346927	Identifier	ch		346016	1					
ANR	346928	Identifier	AC3_BLOCK_SIZE		346016	1					
ANR	346929	ExpressionStatement	s -> frame . decode_error_flags = err ? FF_DECODE_ERROR_INVALID_BITSTREAM : 0	291:4:6220:6293	346016	22	True				
ANR	346930	AssignmentExpression	s -> frame . decode_error_flags = err ? FF_DECODE_ERROR_INVALID_BITSTREAM : 0		346016	0		=			
ANR	346931	MemberAccess	s -> frame . decode_error_flags		346016	0					
ANR	346932	PtrMemberAccess	s -> frame		346016	0					
ANR	346933	Identifier	s		346016	0					
ANR	346934	Identifier	frame		346016	1					
ANR	346935	Identifier	decode_error_flags		346016	1					
ANR	346936	ConditionalExpression	err ? FF_DECODE_ERROR_INVALID_BITSTREAM : 0		346016	1					
ANR	346937	Condition	err		346016	0					
ANR	346938	Identifier	err		346016	0					
ANR	346939	Identifier	FF_DECODE_ERROR_INVALID_BITSTREAM		346016	1					
ANR	346940	PrimaryExpression	0		346016	2					
ANR	346941	ForStatement	for ( ch = 0 ; ch < s -> out_channels ; ch ++ )		346016	23					
ANR	346942	ForInit	ch = 0 ;	297:9:6370:6376	346016	0	True				
ANR	346943	AssignmentExpression	ch = 0		346016	0		=			
ANR	346944	Identifier	ch		346016	0					
ANR	346945	PrimaryExpression	0		346016	1					
ANR	346946	Condition	ch < s -> out_channels	297:17:6378:6397	346016	1	True				
ANR	346947	RelationalExpression	ch < s -> out_channels		346016	0		<			
ANR	346948	Identifier	ch		346016	0					
ANR	346949	PtrMemberAccess	s -> out_channels		346016	1					
ANR	346950	Identifier	s		346016	0					
ANR	346951	Identifier	out_channels		346016	1					
ANR	346952	PostIncDecOperationExpression	ch ++	297:39:6400:6403	346016	2	True				
ANR	346953	Identifier	ch		346016	0					
ANR	346954	IncDec	++		346016	1					
ANR	346955	ExpressionStatement	"memcpy ( s -> output [ ch ] , output [ ch ] , 1024 )"	299:8:6415:6454	346016	3	True				
ANR	346956	CallExpression	"memcpy ( s -> output [ ch ] , output [ ch ] , 1024 )"		346016	0					
ANR	346957	Callee	memcpy		346016	0					
ANR	346958	Identifier	memcpy		346016	0					
ANR	346959	ArgumentList	s -> output [ ch ]		346016	1					
ANR	346960	Argument	s -> output [ ch ]		346016	0					
ANR	346961	ArrayIndexing	s -> output [ ch ]		346016	0					
ANR	346962	PtrMemberAccess	s -> output		346016	0					
ANR	346963	Identifier	s		346016	0					
ANR	346964	Identifier	output		346016	1					
ANR	346965	Identifier	ch		346016	1					
ANR	346966	Argument	output [ ch ]		346016	1					
ANR	346967	ArrayIndexing	output [ ch ]		346016	0					
ANR	346968	Identifier	output		346016	0					
ANR	346969	Identifier	ch		346016	1					
ANR	346970	Argument	1024		346016	2					
ANR	346971	PrimaryExpression	1024		346016	0					
ANR	346972	ExpressionStatement	* got_frame_ptr = 1	303:4:6463:6483	346016	24	True				
ANR	346973	AssignmentExpression	* got_frame_ptr = 1		346016	0		=			
ANR	346974	UnaryOperationExpression	* got_frame_ptr		346016	0					
ANR	346975	UnaryOperator	*		346016	0					
ANR	346976	Identifier	got_frame_ptr		346016	1					
ANR	346977	PrimaryExpression	1		346016	1					
ANR	346978	ExpressionStatement	* ( AVFrame * ) data = s -> frame	305:4:6490:6517	346016	25	True				
ANR	346979	AssignmentExpression	* ( AVFrame * ) data = s -> frame		346016	0		=			
ANR	346980	UnaryOperationExpression	* ( AVFrame * ) data		346016	0					
ANR	346981	UnaryOperator	*		346016	0					
ANR	346982	CastExpression	( AVFrame * ) data		346016	1					
ANR	346983	CastTarget	AVFrame *		346016	0					
ANR	346984	Identifier	data		346016	1					
ANR	346985	PtrMemberAccess	s -> frame		346016	1					
ANR	346986	Identifier	s		346016	0					
ANR	346987	Identifier	frame		346016	1					
ANR	346988	ReturnStatement	"return FFMIN ( buf_size , s -> frame_size ) ;"	309:4:6526:6563	346016	26	True				
ANR	346989	CallExpression	"FFMIN ( buf_size , s -> frame_size )"		346016	0					
ANR	346990	Callee	FFMIN		346016	0					
ANR	346991	Identifier	FFMIN		346016	0					
ANR	346992	ArgumentList	buf_size		346016	1					
ANR	346993	Argument	buf_size		346016	0					
ANR	346994	Identifier	buf_size		346016	0					
ANR	346995	Argument	s -> frame_size		346016	1					
ANR	346996	PtrMemberAccess	s -> frame_size		346016	0					
ANR	346997	Identifier	s		346016	0					
ANR	346998	Identifier	frame_size		346016	1					
ANR	346999	ReturnType	static int		346016	1					
ANR	347000	Identifier	ac3_decode_frame		346016	2					
ANR	347001	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		346016	3					
ANR	347002	Parameter	AVCodecContext * avctx	1:28:28:49	346016	0	True				
ANR	347003	ParameterType	AVCodecContext *		346016	0					
ANR	347004	Identifier	avctx		346016	1					
ANR	347005	Parameter	void * data	1:52:52:61	346016	1	True				
ANR	347006	ParameterType	void *		346016	0					
ANR	347007	Identifier	data		346016	1					
ANR	347008	Parameter	int * got_frame_ptr	3:28:93:110	346016	2	True				
ANR	347009	ParameterType	int *		346016	0					
ANR	347010	Identifier	got_frame_ptr		346016	1					
ANR	347011	Parameter	AVPacket * avpkt	3:48:113:127	346016	3	True				
ANR	347012	ParameterType	AVPacket *		346016	0					
ANR	347013	Identifier	avpkt		346016	1					
ANR	347014	CFGEntryNode	ENTRY		346016		True				
ANR	347015	CFGExitNode	EXIT		346016		True				
ANR	347016	Symbol	gain_levels		346016						
ANR	347017	Symbol	s -> channel_layout		346016						
ANR	347018	Symbol	* ch		346016						
ANR	347019	Symbol	s -> frame . data		346016						
ANR	347020	Symbol	AAC_AC3_PARSE_ERROR_FRAME_SIZE		346016						
ANR	347021	Symbol	got_frame_ptr		346016						
ANR	347022	Symbol	avpkt		346016						
ANR	347023	Symbol	* s -> frame		346016						
ANR	347024	Symbol	s -> lfe_on		346016						
ANR	347025	Symbol	output		346016						
ANR	347026	Symbol	ff_ac3_dec_channel_map		346016						
ANR	347027	Symbol	AAC_AC3_PARSE_ERROR_CRC		346016						
ANR	347028	Symbol	s -> frame		346016						
ANR	347029	Symbol	s -> loro_surround_mix_level		346016						
ANR	347030	Symbol	AV_CRC_16_ANSI		346016						
ANR	347031	Symbol	* channel_map		346016						
ANR	347032	Symbol	s -> substreamid		346016						
ANR	347033	Symbol	* avpriv_ac3_channel_layout_tab		346016						
ANR	347034	Symbol	s -> center_mix_level		346016						
ANR	347035	Symbol	s -> dsp		346016						
ANR	347036	Symbol	s -> ltrt_center_mix_level		346016						
ANR	347037	Symbol	* * * s		346016						
ANR	347038	Symbol	s -> bitstream_mode		346016						
ANR	347039	Symbol	avctx -> bit_rate		346016						
ANR	347040	Symbol	s -> num_blocks		346016						
ANR	347041	Symbol	parse_frame_header		346016						
ANR	347042	Symbol	* s -> output_mode		346016						
ANR	347043	Symbol	* s -> lfe_on		346016						
ANR	347044	Symbol	* s -> frame . data		346016						
ANR	347045	Symbol	AC3_FRAME_BUFFER_SIZE		346016						
ANR	347046	Symbol	* * s		346016						
ANR	347047	Symbol	avctx		346016						
ANR	347048	Symbol	blk		346016						
ANR	347049	Symbol	s -> frame_type		346016						
ANR	347050	Symbol	err		346016						
ANR	347051	Symbol	AV_LOG_ERROR		346016						
ANR	347052	Symbol	ch		346016						
ANR	347053	Symbol	cnt		346016						
ANR	347054	Symbol	* got_frame_ptr		346016						
ANR	347055	Symbol	avctx -> channel_layout		346016						
ANR	347056	Symbol	avctx -> sample_rate		346016						
ANR	347057	Symbol	buf		346016						
ANR	347058	Symbol	s		346016						
ANR	347059	Symbol	AC3_BLOCK_SIZE		346016						
ANR	347060	Symbol	AVERROR_INVALIDDATA		346016						
ANR	347061	Symbol	channel_map		346016						
ANR	347062	Symbol	* * channel_map		346016						
ANR	347063	Symbol	* data		346016						
ANR	347064	Symbol	* output		346016						
ANR	347065	Symbol	data		346016						
ANR	347066	Symbol	AV_RB16		346016						
ANR	347067	Symbol	FFMIN		346016						
ANR	347068	Symbol	EAC3_FRAME_TYPE_DEPENDENT		346016						
ANR	347069	Symbol	avctx -> audio_service_type		346016						
ANR	347070	Symbol	avctx -> channels		346016						
ANR	347071	Symbol	s -> outptr		346016						
ANR	347072	Symbol	ff_get_buffer		346016						
ANR	347073	Symbol	AC3_CHMODE_STEREO		346016						
ANR	347074	Symbol	s -> channel_mode		346016						
ANR	347075	Symbol	FF_DECODE_ERROR_INVALID_BITSTREAM		346016						
ANR	347076	Symbol	AV_AUDIO_SERVICE_TYPE_KARAOKE		346016						
ANR	347077	Symbol	ret		346016						
ANR	347078	Symbol	buf_size		346016						
ANR	347079	Symbol	s -> input_buffer		346016						
ANR	347080	Symbol	& s -> gbc		346016						
ANR	347081	Symbol	AC3_OUTPUT_LFEON		346016						
ANR	347082	Symbol	* s -> center_mix_level		346016						
ANR	347083	Symbol	s -> bit_rate		346016						
ANR	347084	Symbol	* ~AC3_OUTPUT_LFEON		346016						
ANR	347085	Symbol	avctx -> request_channels		346016						
ANR	347086	Symbol	s -> loro_center_mix_level		346016						
ANR	347087	Symbol	s -> output		346016						
ANR	347088	Symbol	s -> sample_rate		346016						
ANR	347089	Symbol	* avctx		346016						
ANR	347090	Symbol	decode_audio_block		346016						
ANR	347091	Symbol	avpkt -> data		346016						
ANR	347092	Symbol	s -> frame_size		346016						
ANR	347093	Symbol	AV_EF_CRCCHECK		346016						
ANR	347094	Symbol	& s -> frame		346016						
ANR	347095	Symbol	~AC3_OUTPUT_LFEON		346016						
ANR	347096	Symbol	s -> fbw_channels		346016						
ANR	347097	Symbol	s -> output_mode		346016						
ANR	347098	Symbol	* s -> outptr		346016						
ANR	347099	Symbol	s -> channels		346016						
ANR	347100	Symbol	s -> out_channels		346016						
ANR	347101	Symbol	* * ch		346016						
ANR	347102	Symbol	s -> surround_mix_level		346016						
ANR	347103	Symbol	* * s -> output_mode		346016						
ANR	347104	Symbol	LEVEL_MINUS_3DB		346016						
ANR	347105	Symbol	s -> frame . nb_samples		346016						
ANR	347106	Symbol	avpkt -> size		346016						
ANR	347107	Symbol	* gain_levels		346016						
ANR	347108	Symbol	s -> ltrt_surround_mix_level		346016						
ANR	347109	Symbol	* avpkt		346016						
ANR	347110	Symbol	avpriv_ac3_channel_layout_tab		346016						
ANR	347111	Symbol	* * ff_ac3_dec_channel_map		346016						
ANR	347112	Symbol	AV_EF_CAREFUL		346016						
ANR	347113	Symbol	AC3_MAX_CHANNELS		346016						
ANR	347114	Symbol	* s -> output		346016						
ANR	347115	Symbol	avctx -> priv_data		346016						
ANR	347116	Symbol	AC3_CHMODE_MONO		346016						
ANR	347117	Symbol	* * ~AC3_OUTPUT_LFEON		346016						
ANR	347118	Symbol	* ff_ac3_dec_channel_map		346016						
ANR	347119	Symbol	s -> frame . decode_error_flags		346016						
ANR	347120	Symbol	* s -> surround_mix_level		346016						
ANR	347121	Symbol	av_crc		346016						
ANR	347122	Symbol	* ( AVFrame * ) data		346016						
ANR	347123	Symbol	avctx -> err_recognition		346016						
ANR	347124	Symbol	* s		346016						
ANR	347125	Symbol	av_crc_get_table		346016						
