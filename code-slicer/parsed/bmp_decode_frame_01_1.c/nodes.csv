command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1099905	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bmp_decode_frame_01_1.c								
ANR	1099906	Function	bmp_decode_frame	1:0:0:10054							
ANR	1099907	FunctionDef	"bmp_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		1099906	0					
ANR	1099908	CompoundStatement		7:0:155:10054	1099906	0					
ANR	1099909	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:162:194	1099906	0	True				
ANR	1099910	IdentifierDecl	* buf = avpkt -> data		1099906	0					
ANR	1099911	IdentifierDeclType	const uint8_t *		1099906	0					
ANR	1099912	Identifier	buf		1099906	1					
ANR	1099913	AssignmentExpression	* buf = avpkt -> data		1099906	2		=			
ANR	1099914	Identifier	buf		1099906	0					
ANR	1099915	PtrMemberAccess	avpkt -> data		1099906	1					
ANR	1099916	Identifier	avpkt		1099906	0					
ANR	1099917	Identifier	data		1099906	1					
ANR	1099918	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:201:227	1099906	1	True				
ANR	1099919	IdentifierDecl	buf_size = avpkt -> size		1099906	0					
ANR	1099920	IdentifierDeclType	int		1099906	0					
ANR	1099921	Identifier	buf_size		1099906	1					
ANR	1099922	AssignmentExpression	buf_size = avpkt -> size		1099906	2		=			
ANR	1099923	Identifier	buf_size		1099906	0					
ANR	1099924	PtrMemberAccess	avpkt -> size		1099906	1					
ANR	1099925	Identifier	avpkt		1099906	0					
ANR	1099926	Identifier	size		1099906	1					
ANR	1099927	IdentifierDeclStatement	BMPContext * s = avctx -> priv_data ;	13:4:234:266	1099906	2	True				
ANR	1099928	IdentifierDecl	* s = avctx -> priv_data		1099906	0					
ANR	1099929	IdentifierDeclType	BMPContext *		1099906	0					
ANR	1099930	Identifier	s		1099906	1					
ANR	1099931	AssignmentExpression	* s = avctx -> priv_data		1099906	2		=			
ANR	1099932	Identifier	s		1099906	0					
ANR	1099933	PtrMemberAccess	avctx -> priv_data		1099906	1					
ANR	1099934	Identifier	avctx		1099906	0					
ANR	1099935	Identifier	priv_data		1099906	1					
ANR	1099936	IdentifierDeclStatement	AVFrame * picture = data ;	15:4:273:296	1099906	3	True				
ANR	1099937	IdentifierDecl	* picture = data		1099906	0					
ANR	1099938	IdentifierDeclType	AVFrame *		1099906	0					
ANR	1099939	Identifier	picture		1099906	1					
ANR	1099940	AssignmentExpression	* picture = data		1099906	2		=			
ANR	1099941	Identifier	data		1099906	0					
ANR	1099942	Identifier	data		1099906	1					
ANR	1099943	IdentifierDeclStatement	AVFrame * p = & s -> picture ;	17:4:303:327	1099906	4	True				
ANR	1099944	IdentifierDecl	* p = & s -> picture		1099906	0					
ANR	1099945	IdentifierDeclType	AVFrame *		1099906	0					
ANR	1099946	Identifier	p		1099906	1					
ANR	1099947	AssignmentExpression	* p = & s -> picture		1099906	2		=			
ANR	1099948	Identifier	p		1099906	0					
ANR	1099949	UnaryOperationExpression	& s -> picture		1099906	1					
ANR	1099950	UnaryOperator	&		1099906	0					
ANR	1099951	PtrMemberAccess	s -> picture		1099906	1					
ANR	1099952	Identifier	s		1099906	0					
ANR	1099953	Identifier	picture		1099906	1					
ANR	1099954	IdentifierDeclStatement	"unsigned int fsize , hsize ;"	19:4:334:359	1099906	5	True				
ANR	1099955	IdentifierDecl	fsize		1099906	0					
ANR	1099956	IdentifierDeclType	unsigned int		1099906	0					
ANR	1099957	Identifier	fsize		1099906	1					
ANR	1099958	IdentifierDecl	hsize		1099906	1					
ANR	1099959	IdentifierDeclType	unsigned int		1099906	0					
ANR	1099960	Identifier	hsize		1099906	1					
ANR	1099961	IdentifierDeclStatement	"int width , height ;"	21:4:366:383	1099906	6	True				
ANR	1099962	IdentifierDecl	width		1099906	0					
ANR	1099963	IdentifierDeclType	int		1099906	0					
ANR	1099964	Identifier	width		1099906	1					
ANR	1099965	IdentifierDecl	height		1099906	1					
ANR	1099966	IdentifierDeclType	int		1099906	0					
ANR	1099967	Identifier	height		1099906	1					
ANR	1099968	IdentifierDeclStatement	unsigned int depth ;	23:4:390:408	1099906	7	True				
ANR	1099969	IdentifierDecl	depth		1099906	0					
ANR	1099970	IdentifierDeclType	unsigned int		1099906	0					
ANR	1099971	Identifier	depth		1099906	1					
ANR	1099972	IdentifierDeclStatement	BiCompression comp ;	25:4:415:433	1099906	8	True				
ANR	1099973	IdentifierDecl	comp		1099906	0					
ANR	1099974	IdentifierDeclType	BiCompression		1099906	0					
ANR	1099975	Identifier	comp		1099906	1					
ANR	1099976	IdentifierDeclStatement	unsigned int ihsize ;	27:4:440:459	1099906	9	True				
ANR	1099977	IdentifierDecl	ihsize		1099906	0					
ANR	1099978	IdentifierDeclType	unsigned int		1099906	0					
ANR	1099979	Identifier	ihsize		1099906	1					
ANR	1099980	IdentifierDeclStatement	"int i , j , n , linesize ;"	29:4:466:487	1099906	10	True				
ANR	1099981	IdentifierDecl	i		1099906	0					
ANR	1099982	IdentifierDeclType	int		1099906	0					
ANR	1099983	Identifier	i		1099906	1					
ANR	1099984	IdentifierDecl	j		1099906	1					
ANR	1099985	IdentifierDeclType	int		1099906	0					
ANR	1099986	Identifier	j		1099906	1					
ANR	1099987	IdentifierDecl	n		1099906	2					
ANR	1099988	IdentifierDeclType	int		1099906	0					
ANR	1099989	Identifier	n		1099906	1					
ANR	1099990	IdentifierDecl	linesize		1099906	3					
ANR	1099991	IdentifierDeclType	int		1099906	0					
ANR	1099992	Identifier	linesize		1099906	1					
ANR	1099993	IdentifierDeclStatement	uint32_t rgb [ 3 ] ;	31:4:494:509	1099906	11	True				
ANR	1099994	IdentifierDecl	rgb [ 3 ]		1099906	0					
ANR	1099995	IdentifierDeclType	uint32_t [ 3 ]		1099906	0					
ANR	1099996	Identifier	rgb		1099906	1					
ANR	1099997	PrimaryExpression	3		1099906	2					
ANR	1099998	IdentifierDeclStatement	uint32_t alpha = 0 ;	33:4:516:534	1099906	12	True				
ANR	1099999	IdentifierDecl	alpha = 0		1099906	0					
ANR	1100000	IdentifierDeclType	uint32_t		1099906	0					
ANR	1100001	Identifier	alpha		1099906	1					
ANR	1100002	AssignmentExpression	alpha = 0		1099906	2		=			
ANR	1100003	Identifier	alpha		1099906	0					
ANR	1100004	PrimaryExpression	0		1099906	1					
ANR	1100005	IdentifierDeclStatement	uint8_t * ptr ;	35:4:541:553	1099906	13	True				
ANR	1100006	IdentifierDecl	* ptr		1099906	0					
ANR	1100007	IdentifierDeclType	uint8_t *		1099906	0					
ANR	1100008	Identifier	ptr		1099906	1					
ANR	1100009	IdentifierDeclStatement	int dsize ;	37:4:560:569	1099906	14	True				
ANR	1100010	IdentifierDecl	dsize		1099906	0					
ANR	1100011	IdentifierDeclType	int		1099906	0					
ANR	1100012	Identifier	dsize		1099906	1					
ANR	1100013	IdentifierDeclStatement	const uint8_t * buf0 = buf ;	39:4:576:601	1099906	15	True				
ANR	1100014	IdentifierDecl	* buf0 = buf		1099906	0					
ANR	1100015	IdentifierDeclType	const uint8_t *		1099906	0					
ANR	1100016	Identifier	buf0		1099906	1					
ANR	1100017	AssignmentExpression	* buf0 = buf		1099906	2		=			
ANR	1100018	Identifier	buf		1099906	0					
ANR	1100019	Identifier	buf		1099906	1					
ANR	1100020	IdentifierDeclStatement	GetByteContext gb ;	41:4:608:625	1099906	16	True				
ANR	1100021	IdentifierDecl	gb		1099906	0					
ANR	1100022	IdentifierDeclType	GetByteContext		1099906	0					
ANR	1100023	Identifier	gb		1099906	1					
ANR	1100024	IfStatement	if ( buf_size < 14 )		1099906	17					
ANR	1100025	Condition	buf_size < 14	45:7:637:649	1099906	0	True				
ANR	1100026	RelationalExpression	buf_size < 14		1099906	0		<			
ANR	1100027	Identifier	buf_size		1099906	0					
ANR	1100028	PrimaryExpression	14		1099906	1					
ANR	1100029	CompoundStatement		39:21:495:495	1099906	1					
ANR	1100030	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""buf size too small (%d)\\n"" , buf_size )"	47:8:662:728	1099906	0	True				
ANR	1100031	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""buf size too small (%d)\\n"" , buf_size )"		1099906	0					
ANR	1100032	Callee	av_log		1099906	0					
ANR	1100033	Identifier	av_log		1099906	0					
ANR	1100034	ArgumentList	avctx		1099906	1					
ANR	1100035	Argument	avctx		1099906	0					
ANR	1100036	Identifier	avctx		1099906	0					
ANR	1100037	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100038	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100039	Argument	"""buf size too small (%d)\\n"""		1099906	2					
ANR	1100040	PrimaryExpression	"""buf size too small (%d)\\n"""		1099906	0					
ANR	1100041	Argument	buf_size		1099906	3					
ANR	1100042	Identifier	buf_size		1099906	0					
ANR	1100043	ReturnStatement	return - 1 ;	49:8:739:748	1099906	1	True				
ANR	1100044	UnaryOperationExpression	- 1		1099906	0					
ANR	1100045	UnaryOperator	-		1099906	0					
ANR	1100046	PrimaryExpression	1		1099906	1					
ANR	1100047	IfStatement	if ( bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M' )		1099906	18					
ANR	1100048	Condition	bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M'	55:7:767:842	1099906	0	True				
ANR	1100049	OrExpression	bytestream_get_byte ( & buf ) != 'B' || bytestream_get_byte ( & buf ) != 'M'		1099906	0		||			
ANR	1100050	EqualityExpression	bytestream_get_byte ( & buf ) != 'B'		1099906	0		!=			
ANR	1100051	CallExpression	bytestream_get_byte ( & buf )		1099906	0					
ANR	1100052	Callee	bytestream_get_byte		1099906	0					
ANR	1100053	Identifier	bytestream_get_byte		1099906	0					
ANR	1100054	ArgumentList	& buf		1099906	1					
ANR	1100055	Argument	& buf		1099906	0					
ANR	1100056	UnaryOperationExpression	& buf		1099906	0					
ANR	1100057	UnaryOperator	&		1099906	0					
ANR	1100058	Identifier	buf		1099906	1					
ANR	1100059	PrimaryExpression	'B'		1099906	1					
ANR	1100060	EqualityExpression	bytestream_get_byte ( & buf ) != 'M'		1099906	1		!=			
ANR	1100061	CallExpression	bytestream_get_byte ( & buf )		1099906	0					
ANR	1100062	Callee	bytestream_get_byte		1099906	0					
ANR	1100063	Identifier	bytestream_get_byte		1099906	0					
ANR	1100064	ArgumentList	& buf		1099906	1					
ANR	1100065	Argument	& buf		1099906	0					
ANR	1100066	UnaryOperationExpression	& buf		1099906	0					
ANR	1100067	UnaryOperator	&		1099906	0					
ANR	1100068	Identifier	buf		1099906	1					
ANR	1100069	PrimaryExpression	'M'		1099906	1					
ANR	1100070	CompoundStatement		51:41:689:689	1099906	1					
ANR	1100071	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""bad magic number\\n"" )"	59:8:856:905	1099906	0	True				
ANR	1100072	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""bad magic number\\n"" )"		1099906	0					
ANR	1100073	Callee	av_log		1099906	0					
ANR	1100074	Identifier	av_log		1099906	0					
ANR	1100075	ArgumentList	avctx		1099906	1					
ANR	1100076	Argument	avctx		1099906	0					
ANR	1100077	Identifier	avctx		1099906	0					
ANR	1100078	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100079	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100080	Argument	"""bad magic number\\n"""		1099906	2					
ANR	1100081	PrimaryExpression	"""bad magic number\\n"""		1099906	0					
ANR	1100082	ReturnStatement	return - 1 ;	61:8:916:925	1099906	1	True				
ANR	1100083	UnaryOperationExpression	- 1		1099906	0					
ANR	1100084	UnaryOperator	-		1099906	0					
ANR	1100085	PrimaryExpression	1		1099906	1					
ANR	1100086	ExpressionStatement	fsize = bytestream_get_le32 ( & buf )	67:4:941:974	1099906	19	True				
ANR	1100087	AssignmentExpression	fsize = bytestream_get_le32 ( & buf )		1099906	0		=			
ANR	1100088	Identifier	fsize		1099906	0					
ANR	1100089	CallExpression	bytestream_get_le32 ( & buf )		1099906	1					
ANR	1100090	Callee	bytestream_get_le32		1099906	0					
ANR	1100091	Identifier	bytestream_get_le32		1099906	0					
ANR	1100092	ArgumentList	& buf		1099906	1					
ANR	1100093	Argument	& buf		1099906	0					
ANR	1100094	UnaryOperationExpression	& buf		1099906	0					
ANR	1100095	UnaryOperator	&		1099906	0					
ANR	1100096	Identifier	buf		1099906	1					
ANR	1100097	IfStatement	if ( buf_size < fsize )		1099906	20					
ANR	1100098	Condition	buf_size < fsize	69:7:984:999	1099906	0	True				
ANR	1100099	RelationalExpression	buf_size < fsize		1099906	0		<			
ANR	1100100	Identifier	buf_size		1099906	0					
ANR	1100101	Identifier	fsize		1099906	1					
ANR	1100102	CompoundStatement		63:24:845:845	1099906	1					
ANR	1100103	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d), trying to decode anyway\\n"" , buf_size , fsize )"	71:8:1012:1128	1099906	0	True				
ANR	1100104	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d), trying to decode anyway\\n"" , buf_size , fsize )"		1099906	0					
ANR	1100105	Callee	av_log		1099906	0					
ANR	1100106	Identifier	av_log		1099906	0					
ANR	1100107	ArgumentList	avctx		1099906	1					
ANR	1100108	Argument	avctx		1099906	0					
ANR	1100109	Identifier	avctx		1099906	0					
ANR	1100110	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100111	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100112	Argument	"""not enough data (%d < %d), trying to decode anyway\\n"""		1099906	2					
ANR	1100113	PrimaryExpression	"""not enough data (%d < %d), trying to decode anyway\\n"""		1099906	0					
ANR	1100114	Argument	buf_size		1099906	3					
ANR	1100115	Identifier	buf_size		1099906	0					
ANR	1100116	Argument	fsize		1099906	4					
ANR	1100117	Identifier	fsize		1099906	0					
ANR	1100118	ExpressionStatement	fsize = buf_size	75:8:1139:1155	1099906	1	True				
ANR	1100119	AssignmentExpression	fsize = buf_size		1099906	0		=			
ANR	1100120	Identifier	fsize		1099906	0					
ANR	1100121	Identifier	buf_size		1099906	1					
ANR	1100122	ExpressionStatement	buf += 2	81:4:1171:1179	1099906	21	True				
ANR	1100123	AssignmentExpression	buf += 2		1099906	0		+=			
ANR	1100124	Identifier	buf		1099906	0					
ANR	1100125	PrimaryExpression	2		1099906	1					
ANR	1100126	ExpressionStatement	buf += 2	83:4:1202:1210	1099906	22	True				
ANR	1100127	AssignmentExpression	buf += 2		1099906	0		+=			
ANR	1100128	Identifier	buf		1099906	0					
ANR	1100129	PrimaryExpression	2		1099906	1					
ANR	1100130	ExpressionStatement	hsize = bytestream_get_le32 ( & buf )	87:4:1235:1268	1099906	23	True				
ANR	1100131	AssignmentExpression	hsize = bytestream_get_le32 ( & buf )		1099906	0		=			
ANR	1100132	Identifier	hsize		1099906	0					
ANR	1100133	CallExpression	bytestream_get_le32 ( & buf )		1099906	1					
ANR	1100134	Callee	bytestream_get_le32		1099906	0					
ANR	1100135	Identifier	bytestream_get_le32		1099906	0					
ANR	1100136	ArgumentList	& buf		1099906	1					
ANR	1100137	Argument	& buf		1099906	0					
ANR	1100138	UnaryOperationExpression	& buf		1099906	0					
ANR	1100139	UnaryOperator	&		1099906	0					
ANR	1100140	Identifier	buf		1099906	1					
ANR	1100141	ExpressionStatement	ihsize = bytestream_get_le32 ( & buf )	89:4:1293:1327	1099906	24	True				
ANR	1100142	AssignmentExpression	ihsize = bytestream_get_le32 ( & buf )		1099906	0		=			
ANR	1100143	Identifier	ihsize		1099906	0					
ANR	1100144	CallExpression	bytestream_get_le32 ( & buf )		1099906	1					
ANR	1100145	Callee	bytestream_get_le32		1099906	0					
ANR	1100146	Identifier	bytestream_get_le32		1099906	0					
ANR	1100147	ArgumentList	& buf		1099906	1					
ANR	1100148	Argument	& buf		1099906	0					
ANR	1100149	UnaryOperationExpression	& buf		1099906	0					
ANR	1100150	UnaryOperator	&		1099906	0					
ANR	1100151	Identifier	buf		1099906	1					
ANR	1100152	IfStatement	if ( ihsize + 14 > hsize )		1099906	25					
ANR	1100153	Condition	ihsize + 14 > hsize	91:7:1366:1384	1099906	0	True				
ANR	1100154	RelationalExpression	ihsize + 14 > hsize		1099906	0		>			
ANR	1100155	AdditiveExpression	ihsize + 14		1099906	0		+			
ANR	1100156	Identifier	ihsize		1099906	0					
ANR	1100157	PrimaryExpression	14		1099906	1					
ANR	1100158	Identifier	hsize		1099906	1					
ANR	1100159	CompoundStatement		85:27:1230:1230	1099906	1					
ANR	1100160	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid header size %d\\n"" , hsize )"	93:8:1397:1459	1099906	0	True				
ANR	1100161	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid header size %d\\n"" , hsize )"		1099906	0					
ANR	1100162	Callee	av_log		1099906	0					
ANR	1100163	Identifier	av_log		1099906	0					
ANR	1100164	ArgumentList	avctx		1099906	1					
ANR	1100165	Argument	avctx		1099906	0					
ANR	1100166	Identifier	avctx		1099906	0					
ANR	1100167	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100168	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100169	Argument	"""invalid header size %d\\n"""		1099906	2					
ANR	1100170	PrimaryExpression	"""invalid header size %d\\n"""		1099906	0					
ANR	1100171	Argument	hsize		1099906	3					
ANR	1100172	Identifier	hsize		1099906	0					
ANR	1100173	ReturnStatement	return - 1 ;	95:8:1470:1479	1099906	1	True				
ANR	1100174	UnaryOperationExpression	- 1		1099906	0					
ANR	1100175	UnaryOperator	-		1099906	0					
ANR	1100176	PrimaryExpression	1		1099906	1					
ANR	1100177	IfStatement	if ( fsize == 14 || fsize == ihsize + 14 )		1099906	26					
ANR	1100178	Condition	fsize == 14 || fsize == ihsize + 14	103:7:1587:1621	1099906	0	True				
ANR	1100179	OrExpression	fsize == 14 || fsize == ihsize + 14		1099906	0		||			
ANR	1100180	EqualityExpression	fsize == 14		1099906	0		==			
ANR	1100181	Identifier	fsize		1099906	0					
ANR	1100182	PrimaryExpression	14		1099906	1					
ANR	1100183	EqualityExpression	fsize == ihsize + 14		1099906	1		==			
ANR	1100184	Identifier	fsize		1099906	0					
ANR	1100185	AdditiveExpression	ihsize + 14		1099906	1		+			
ANR	1100186	Identifier	ihsize		1099906	0					
ANR	1100187	PrimaryExpression	14		1099906	1					
ANR	1100188	ExpressionStatement	fsize = buf_size - 2	105:8:1633:1653	1099906	1	True				
ANR	1100189	AssignmentExpression	fsize = buf_size - 2		1099906	0		=			
ANR	1100190	Identifier	fsize		1099906	0					
ANR	1100191	AdditiveExpression	buf_size - 2		1099906	1		-			
ANR	1100192	Identifier	buf_size		1099906	0					
ANR	1100193	PrimaryExpression	2		1099906	1					
ANR	1100194	IfStatement	if ( fsize <= hsize )		1099906	27					
ANR	1100195	Condition	fsize <= hsize	109:7:1665:1678	1099906	0	True				
ANR	1100196	RelationalExpression	fsize <= hsize		1099906	0		<=			
ANR	1100197	Identifier	fsize		1099906	0					
ANR	1100198	Identifier	hsize		1099906	1					
ANR	1100199	CompoundStatement		103:22:1524:1524	1099906	1					
ANR	1100200	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""declared file size is less than header size (%d < %d)\\n"" , fsize , hsize )"	111:8:1691:1807	1099906	0	True				
ANR	1100201	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""declared file size is less than header size (%d < %d)\\n"" , fsize , hsize )"		1099906	0					
ANR	1100202	Callee	av_log		1099906	0					
ANR	1100203	Identifier	av_log		1099906	0					
ANR	1100204	ArgumentList	avctx		1099906	1					
ANR	1100205	Argument	avctx		1099906	0					
ANR	1100206	Identifier	avctx		1099906	0					
ANR	1100207	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100208	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100209	Argument	"""declared file size is less than header size (%d < %d)\\n"""		1099906	2					
ANR	1100210	PrimaryExpression	"""declared file size is less than header size (%d < %d)\\n"""		1099906	0					
ANR	1100211	Argument	fsize		1099906	3					
ANR	1100212	Identifier	fsize		1099906	0					
ANR	1100213	Argument	hsize		1099906	4					
ANR	1100214	Identifier	hsize		1099906	0					
ANR	1100215	ReturnStatement	return - 1 ;	115:8:1818:1827	1099906	1	True				
ANR	1100216	UnaryOperationExpression	- 1		1099906	0					
ANR	1100217	UnaryOperator	-		1099906	0					
ANR	1100218	PrimaryExpression	1		1099906	1					
ANR	1100219	SwitchStatement	switch ( ihsize )		1099906	28					
ANR	1100220	Condition	ihsize	121:11:1850:1855	1099906	0	True				
ANR	1100221	Identifier	ihsize		1099906	0					
ANR	1100222	CompoundStatement		115:18:1701:1701	1099906	1					
ANR	1100223	Label	case 40 :	123:4:1864:1872	1099906	0	True				
ANR	1100224	Label	case 56 :	125:4:1889:1897	1099906	1	True				
ANR	1100225	Label	case 64 :	127:4:1917:1925	1099906	2	True				
ANR	1100226	Label	case 108 :	129:4:1943:1951	1099906	3	True				
ANR	1100227	Label	case 124 :	131:4:1971:1979	1099906	4	True				
ANR	1100228	ExpressionStatement	width = bytestream_get_le32 ( & buf )	133:8:2003:2036	1099906	5	True				
ANR	1100229	AssignmentExpression	width = bytestream_get_le32 ( & buf )		1099906	0		=			
ANR	1100230	Identifier	width		1099906	0					
ANR	1100231	CallExpression	bytestream_get_le32 ( & buf )		1099906	1					
ANR	1100232	Callee	bytestream_get_le32		1099906	0					
ANR	1100233	Identifier	bytestream_get_le32		1099906	0					
ANR	1100234	ArgumentList	& buf		1099906	1					
ANR	1100235	Argument	& buf		1099906	0					
ANR	1100236	UnaryOperationExpression	& buf		1099906	0					
ANR	1100237	UnaryOperator	&		1099906	0					
ANR	1100238	Identifier	buf		1099906	1					
ANR	1100239	ExpressionStatement	height = bytestream_get_le32 ( & buf )	135:8:2047:2081	1099906	6	True				
ANR	1100240	AssignmentExpression	height = bytestream_get_le32 ( & buf )		1099906	0		=			
ANR	1100241	Identifier	height		1099906	0					
ANR	1100242	CallExpression	bytestream_get_le32 ( & buf )		1099906	1					
ANR	1100243	Callee	bytestream_get_le32		1099906	0					
ANR	1100244	Identifier	bytestream_get_le32		1099906	0					
ANR	1100245	ArgumentList	& buf		1099906	1					
ANR	1100246	Argument	& buf		1099906	0					
ANR	1100247	UnaryOperationExpression	& buf		1099906	0					
ANR	1100248	UnaryOperator	&		1099906	0					
ANR	1100249	Identifier	buf		1099906	1					
ANR	1100250	BreakStatement	break ;	137:8:2092:2097	1099906	7	True				
ANR	1100251	Label	case 12 :	139:4:2104:2112	1099906	8	True				
ANR	1100252	ExpressionStatement	width = bytestream_get_le16 ( & buf )	141:8:2134:2168	1099906	9	True				
ANR	1100253	AssignmentExpression	width = bytestream_get_le16 ( & buf )		1099906	0		=			
ANR	1100254	Identifier	width		1099906	0					
ANR	1100255	CallExpression	bytestream_get_le16 ( & buf )		1099906	1					
ANR	1100256	Callee	bytestream_get_le16		1099906	0					
ANR	1100257	Identifier	bytestream_get_le16		1099906	0					
ANR	1100258	ArgumentList	& buf		1099906	1					
ANR	1100259	Argument	& buf		1099906	0					
ANR	1100260	UnaryOperationExpression	& buf		1099906	0					
ANR	1100261	UnaryOperator	&		1099906	0					
ANR	1100262	Identifier	buf		1099906	1					
ANR	1100263	ExpressionStatement	height = bytestream_get_le16 ( & buf )	143:8:2179:2213	1099906	10	True				
ANR	1100264	AssignmentExpression	height = bytestream_get_le16 ( & buf )		1099906	0		=			
ANR	1100265	Identifier	height		1099906	0					
ANR	1100266	CallExpression	bytestream_get_le16 ( & buf )		1099906	1					
ANR	1100267	Callee	bytestream_get_le16		1099906	0					
ANR	1100268	Identifier	bytestream_get_le16		1099906	0					
ANR	1100269	ArgumentList	& buf		1099906	1					
ANR	1100270	Argument	& buf		1099906	0					
ANR	1100271	UnaryOperationExpression	& buf		1099906	0					
ANR	1100272	UnaryOperator	&		1099906	0					
ANR	1100273	Identifier	buf		1099906	1					
ANR	1100274	BreakStatement	break ;	145:8:2224:2229	1099906	11	True				
ANR	1100275	Label	default :	147:4:2236:2243	1099906	12	True				
ANR	1100276	Identifier	default		1099906	0					
ANR	1100277	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported BMP file, patch welcome\\n"" )"	149:8:2254:2322	1099906	13	True				
ANR	1100278	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported BMP file, patch welcome\\n"" )"		1099906	0					
ANR	1100279	Callee	av_log		1099906	0					
ANR	1100280	Identifier	av_log		1099906	0					
ANR	1100281	ArgumentList	avctx		1099906	1					
ANR	1100282	Argument	avctx		1099906	0					
ANR	1100283	Identifier	avctx		1099906	0					
ANR	1100284	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100285	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100286	Argument	"""unsupported BMP file, patch welcome\\n"""		1099906	2					
ANR	1100287	PrimaryExpression	"""unsupported BMP file, patch welcome\\n"""		1099906	0					
ANR	1100288	ReturnStatement	return - 1 ;	151:8:2333:2342	1099906	14	True				
ANR	1100289	UnaryOperationExpression	- 1		1099906	0					
ANR	1100290	UnaryOperator	-		1099906	0					
ANR	1100291	PrimaryExpression	1		1099906	1					
ANR	1100292	IfStatement	if ( bytestream_get_le16 ( & buf ) != 1 )		1099906	29					
ANR	1100293	Condition	bytestream_get_le16 ( & buf ) != 1	157:7:2361:2390	1099906	0	True				
ANR	1100294	EqualityExpression	bytestream_get_le16 ( & buf ) != 1		1099906	0		!=			
ANR	1100295	CallExpression	bytestream_get_le16 ( & buf )		1099906	0					
ANR	1100296	Callee	bytestream_get_le16		1099906	0					
ANR	1100297	Identifier	bytestream_get_le16		1099906	0					
ANR	1100298	ArgumentList	& buf		1099906	1					
ANR	1100299	Argument	& buf		1099906	0					
ANR	1100300	UnaryOperationExpression	& buf		1099906	0					
ANR	1100301	UnaryOperator	&		1099906	0					
ANR	1100302	Identifier	buf		1099906	1					
ANR	1100303	PrimaryExpression	1		1099906	1					
ANR	1100304	CompoundStatement		151:38:2236:2236	1099906	1					
ANR	1100305	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid BMP header\\n"" )"	159:8:2416:2467	1099906	0	True				
ANR	1100306	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid BMP header\\n"" )"		1099906	0					
ANR	1100307	Callee	av_log		1099906	0					
ANR	1100308	Identifier	av_log		1099906	0					
ANR	1100309	ArgumentList	avctx		1099906	1					
ANR	1100310	Argument	avctx		1099906	0					
ANR	1100311	Identifier	avctx		1099906	0					
ANR	1100312	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100313	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100314	Argument	"""invalid BMP header\\n"""		1099906	2					
ANR	1100315	PrimaryExpression	"""invalid BMP header\\n"""		1099906	0					
ANR	1100316	ReturnStatement	return - 1 ;	161:8:2478:2487	1099906	1	True				
ANR	1100317	UnaryOperationExpression	- 1		1099906	0					
ANR	1100318	UnaryOperator	-		1099906	0					
ANR	1100319	PrimaryExpression	1		1099906	1					
ANR	1100320	ExpressionStatement	depth = bytestream_get_le16 ( & buf )	167:4:2503:2536	1099906	30	True				
ANR	1100321	AssignmentExpression	depth = bytestream_get_le16 ( & buf )		1099906	0		=			
ANR	1100322	Identifier	depth		1099906	0					
ANR	1100323	CallExpression	bytestream_get_le16 ( & buf )		1099906	1					
ANR	1100324	Callee	bytestream_get_le16		1099906	0					
ANR	1100325	Identifier	bytestream_get_le16		1099906	0					
ANR	1100326	ArgumentList	& buf		1099906	1					
ANR	1100327	Argument	& buf		1099906	0					
ANR	1100328	UnaryOperationExpression	& buf		1099906	0					
ANR	1100329	UnaryOperator	&		1099906	0					
ANR	1100330	Identifier	buf		1099906	1					
ANR	1100331	IfStatement	if ( ihsize >= 40 )		1099906	31					
ANR	1100332	Condition	ihsize >= 40	171:8:2549:2560	1099906	0	True				
ANR	1100333	RelationalExpression	ihsize >= 40		1099906	0		>=			
ANR	1100334	Identifier	ihsize		1099906	0					
ANR	1100335	PrimaryExpression	40		1099906	1					
ANR	1100336	ExpressionStatement	comp = bytestream_get_le32 ( & buf )	173:8:2572:2604	1099906	1	True				
ANR	1100337	AssignmentExpression	comp = bytestream_get_le32 ( & buf )		1099906	0		=			
ANR	1100338	Identifier	comp		1099906	0					
ANR	1100339	CallExpression	bytestream_get_le32 ( & buf )		1099906	1					
ANR	1100340	Callee	bytestream_get_le32		1099906	0					
ANR	1100341	Identifier	bytestream_get_le32		1099906	0					
ANR	1100342	ArgumentList	& buf		1099906	1					
ANR	1100343	Argument	& buf		1099906	0					
ANR	1100344	UnaryOperationExpression	& buf		1099906	0					
ANR	1100345	UnaryOperator	&		1099906	0					
ANR	1100346	Identifier	buf		1099906	1					
ANR	1100347	ElseStatement	else		1099906	0					
ANR	1100348	ExpressionStatement	comp = BMP_RGB	177:8:2625:2639	1099906	0	True				
ANR	1100349	AssignmentExpression	comp = BMP_RGB		1099906	0		=			
ANR	1100350	Identifier	comp		1099906	0					
ANR	1100351	Identifier	BMP_RGB		1099906	1					
ANR	1100352	IfStatement	if ( comp != BMP_RGB && comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8 )		1099906	32					
ANR	1100353	Condition	comp != BMP_RGB && comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8	181:7:2651:2730	1099906	0	True				
ANR	1100354	AndExpression	comp != BMP_RGB && comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8		1099906	0		&&			
ANR	1100355	EqualityExpression	comp != BMP_RGB		1099906	0		!=			
ANR	1100356	Identifier	comp		1099906	0					
ANR	1100357	Identifier	BMP_RGB		1099906	1					
ANR	1100358	AndExpression	comp != BMP_BITFIELDS && comp != BMP_RLE4 && comp != BMP_RLE8		1099906	1		&&			
ANR	1100359	EqualityExpression	comp != BMP_BITFIELDS		1099906	0		!=			
ANR	1100360	Identifier	comp		1099906	0					
ANR	1100361	Identifier	BMP_BITFIELDS		1099906	1					
ANR	1100362	AndExpression	comp != BMP_RLE4 && comp != BMP_RLE8		1099906	1		&&			
ANR	1100363	EqualityExpression	comp != BMP_RLE4		1099906	0		!=			
ANR	1100364	Identifier	comp		1099906	0					
ANR	1100365	Identifier	BMP_RLE4		1099906	1					
ANR	1100366	EqualityExpression	comp != BMP_RLE8		1099906	1		!=			
ANR	1100367	Identifier	comp		1099906	0					
ANR	1100368	Identifier	BMP_RLE8		1099906	1					
ANR	1100369	CompoundStatement		175:88:2576:2576	1099906	1					
ANR	1100370	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""BMP coding %d not supported\\n"" , comp )"	183:8:2743:2809	1099906	0	True				
ANR	1100371	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""BMP coding %d not supported\\n"" , comp )"		1099906	0					
ANR	1100372	Callee	av_log		1099906	0					
ANR	1100373	Identifier	av_log		1099906	0					
ANR	1100374	ArgumentList	avctx		1099906	1					
ANR	1100375	Argument	avctx		1099906	0					
ANR	1100376	Identifier	avctx		1099906	0					
ANR	1100377	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100378	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100379	Argument	"""BMP coding %d not supported\\n"""		1099906	2					
ANR	1100380	PrimaryExpression	"""BMP coding %d not supported\\n"""		1099906	0					
ANR	1100381	Argument	comp		1099906	3					
ANR	1100382	Identifier	comp		1099906	0					
ANR	1100383	ReturnStatement	return - 1 ;	185:8:2820:2829	1099906	1	True				
ANR	1100384	UnaryOperationExpression	- 1		1099906	0					
ANR	1100385	UnaryOperator	-		1099906	0					
ANR	1100386	PrimaryExpression	1		1099906	1					
ANR	1100387	IfStatement	if ( comp == BMP_BITFIELDS )		1099906	33					
ANR	1100388	Condition	comp == BMP_BITFIELDS	191:7:2848:2868	1099906	0	True				
ANR	1100389	EqualityExpression	comp == BMP_BITFIELDS		1099906	0		==			
ANR	1100390	Identifier	comp		1099906	0					
ANR	1100391	Identifier	BMP_BITFIELDS		1099906	1					
ANR	1100392	CompoundStatement		185:29:2714:2714	1099906	1					
ANR	1100393	ExpressionStatement	buf += 20	193:8:2881:2890	1099906	0	True				
ANR	1100394	AssignmentExpression	buf += 20		1099906	0		+=			
ANR	1100395	Identifier	buf		1099906	0					
ANR	1100396	PrimaryExpression	20		1099906	1					
ANR	1100397	ExpressionStatement	rgb [ 0 ] = bytestream_get_le32 ( & buf )	195:8:2901:2935	1099906	1	True				
ANR	1100398	AssignmentExpression	rgb [ 0 ] = bytestream_get_le32 ( & buf )		1099906	0		=			
ANR	1100399	ArrayIndexing	rgb [ 0 ]		1099906	0					
ANR	1100400	Identifier	rgb		1099906	0					
ANR	1100401	PrimaryExpression	0		1099906	1					
ANR	1100402	CallExpression	bytestream_get_le32 ( & buf )		1099906	1					
ANR	1100403	Callee	bytestream_get_le32		1099906	0					
ANR	1100404	Identifier	bytestream_get_le32		1099906	0					
ANR	1100405	ArgumentList	& buf		1099906	1					
ANR	1100406	Argument	& buf		1099906	0					
ANR	1100407	UnaryOperationExpression	& buf		1099906	0					
ANR	1100408	UnaryOperator	&		1099906	0					
ANR	1100409	Identifier	buf		1099906	1					
ANR	1100410	ExpressionStatement	rgb [ 1 ] = bytestream_get_le32 ( & buf )	197:8:2946:2980	1099906	2	True				
ANR	1100411	AssignmentExpression	rgb [ 1 ] = bytestream_get_le32 ( & buf )		1099906	0		=			
ANR	1100412	ArrayIndexing	rgb [ 1 ]		1099906	0					
ANR	1100413	Identifier	rgb		1099906	0					
ANR	1100414	PrimaryExpression	1		1099906	1					
ANR	1100415	CallExpression	bytestream_get_le32 ( & buf )		1099906	1					
ANR	1100416	Callee	bytestream_get_le32		1099906	0					
ANR	1100417	Identifier	bytestream_get_le32		1099906	0					
ANR	1100418	ArgumentList	& buf		1099906	1					
ANR	1100419	Argument	& buf		1099906	0					
ANR	1100420	UnaryOperationExpression	& buf		1099906	0					
ANR	1100421	UnaryOperator	&		1099906	0					
ANR	1100422	Identifier	buf		1099906	1					
ANR	1100423	ExpressionStatement	rgb [ 2 ] = bytestream_get_le32 ( & buf )	199:8:2991:3025	1099906	3	True				
ANR	1100424	AssignmentExpression	rgb [ 2 ] = bytestream_get_le32 ( & buf )		1099906	0		=			
ANR	1100425	ArrayIndexing	rgb [ 2 ]		1099906	0					
ANR	1100426	Identifier	rgb		1099906	0					
ANR	1100427	PrimaryExpression	2		1099906	1					
ANR	1100428	CallExpression	bytestream_get_le32 ( & buf )		1099906	1					
ANR	1100429	Callee	bytestream_get_le32		1099906	0					
ANR	1100430	Identifier	bytestream_get_le32		1099906	0					
ANR	1100431	ArgumentList	& buf		1099906	1					
ANR	1100432	Argument	& buf		1099906	0					
ANR	1100433	UnaryOperationExpression	& buf		1099906	0					
ANR	1100434	UnaryOperator	&		1099906	0					
ANR	1100435	Identifier	buf		1099906	1					
ANR	1100436	ExpressionStatement	alpha = bytestream_get_le32 ( & buf )	201:8:3036:3069	1099906	4	True				
ANR	1100437	AssignmentExpression	alpha = bytestream_get_le32 ( & buf )		1099906	0		=			
ANR	1100438	Identifier	alpha		1099906	0					
ANR	1100439	CallExpression	bytestream_get_le32 ( & buf )		1099906	1					
ANR	1100440	Callee	bytestream_get_le32		1099906	0					
ANR	1100441	Identifier	bytestream_get_le32		1099906	0					
ANR	1100442	ArgumentList	& buf		1099906	1					
ANR	1100443	Argument	& buf		1099906	0					
ANR	1100444	UnaryOperationExpression	& buf		1099906	0					
ANR	1100445	UnaryOperator	&		1099906	0					
ANR	1100446	Identifier	buf		1099906	1					
ANR	1100447	ExpressionStatement	avctx -> width = width	207:4:3085:3105	1099906	34	True				
ANR	1100448	AssignmentExpression	avctx -> width = width		1099906	0		=			
ANR	1100449	PtrMemberAccess	avctx -> width		1099906	0					
ANR	1100450	Identifier	avctx		1099906	0					
ANR	1100451	Identifier	width		1099906	1					
ANR	1100452	Identifier	width		1099906	1					
ANR	1100453	ExpressionStatement	avctx -> height = height > 0 ? height : - height	209:4:3112:3155	1099906	35	True				
ANR	1100454	AssignmentExpression	avctx -> height = height > 0 ? height : - height		1099906	0		=			
ANR	1100455	PtrMemberAccess	avctx -> height		1099906	0					
ANR	1100456	Identifier	avctx		1099906	0					
ANR	1100457	Identifier	height		1099906	1					
ANR	1100458	ConditionalExpression	height > 0 ? height : - height		1099906	1					
ANR	1100459	Condition	height > 0		1099906	0					
ANR	1100460	RelationalExpression	height > 0		1099906	0		>			
ANR	1100461	Identifier	height		1099906	0					
ANR	1100462	PrimaryExpression	0		1099906	1					
ANR	1100463	Identifier	height		1099906	1					
ANR	1100464	UnaryOperationExpression	- height		1099906	2					
ANR	1100465	UnaryOperator	-		1099906	0					
ANR	1100466	Identifier	height		1099906	1					
ANR	1100467	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_NONE	213:4:3164:3196	1099906	36	True				
ANR	1100468	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_NONE		1099906	0		=			
ANR	1100469	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100470	Identifier	avctx		1099906	0					
ANR	1100471	Identifier	pix_fmt		1099906	1					
ANR	1100472	Identifier	AV_PIX_FMT_NONE		1099906	1					
ANR	1100473	SwitchStatement	switch ( depth )		1099906	37					
ANR	1100474	Condition	depth	217:11:3212:3216	1099906	0	True				
ANR	1100475	Identifier	depth		1099906	0					
ANR	1100476	CompoundStatement		211:17:3062:3062	1099906	1					
ANR	1100477	Label	case 32 :	219:4:3225:3232	1099906	0	True				
ANR	1100478	IfStatement	if ( comp == BMP_BITFIELDS )		1099906	1					
ANR	1100479	Condition	comp == BMP_BITFIELDS	221:11:3246:3266	1099906	0	True				
ANR	1100480	EqualityExpression	comp == BMP_BITFIELDS		1099906	0		==			
ANR	1100481	Identifier	comp		1099906	0					
ANR	1100482	Identifier	BMP_BITFIELDS		1099906	1					
ANR	1100483	CompoundStatement		215:33:3112:3112	1099906	1					
ANR	1100484	IfStatement	if ( rgb [ 0 ] == 0xFF000000 && rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0x0000FF00 )		1099906	0					
ANR	1100485	Condition	rgb [ 0 ] == 0xFF000000 && rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0x0000FF00	223:16:3287:3354	1099906	0	True				
ANR	1100486	AndExpression	rgb [ 0 ] == 0xFF000000 && rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0x0000FF00		1099906	0		&&			
ANR	1100487	EqualityExpression	rgb [ 0 ] == 0xFF000000		1099906	0		==			
ANR	1100488	ArrayIndexing	rgb [ 0 ]		1099906	0					
ANR	1100489	Identifier	rgb		1099906	0					
ANR	1100490	PrimaryExpression	0		1099906	1					
ANR	1100491	PrimaryExpression	0xFF000000		1099906	1					
ANR	1100492	AndExpression	rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0x0000FF00		1099906	1		&&			
ANR	1100493	EqualityExpression	rgb [ 1 ] == 0x00FF0000		1099906	0		==			
ANR	1100494	ArrayIndexing	rgb [ 1 ]		1099906	0					
ANR	1100495	Identifier	rgb		1099906	0					
ANR	1100496	PrimaryExpression	1		1099906	1					
ANR	1100497	PrimaryExpression	0x00FF0000		1099906	1					
ANR	1100498	EqualityExpression	rgb [ 2 ] == 0x0000FF00		1099906	1		==			
ANR	1100499	ArrayIndexing	rgb [ 2 ]		1099906	0					
ANR	1100500	Identifier	rgb		1099906	0					
ANR	1100501	PrimaryExpression	2		1099906	1					
ANR	1100502	PrimaryExpression	0x0000FF00		1099906	1					
ANR	1100503	ExpressionStatement	avctx -> pix_fmt = alpha ? AV_PIX_FMT_ABGR : AV_PIX_FMT_0BGR	225:16:3374:3432	1099906	1	True				
ANR	1100504	AssignmentExpression	avctx -> pix_fmt = alpha ? AV_PIX_FMT_ABGR : AV_PIX_FMT_0BGR		1099906	0		=			
ANR	1100505	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100506	Identifier	avctx		1099906	0					
ANR	1100507	Identifier	pix_fmt		1099906	1					
ANR	1100508	ConditionalExpression	alpha ? AV_PIX_FMT_ABGR : AV_PIX_FMT_0BGR		1099906	1					
ANR	1100509	Condition	alpha		1099906	0					
ANR	1100510	Identifier	alpha		1099906	0					
ANR	1100511	Identifier	AV_PIX_FMT_ABGR		1099906	1					
ANR	1100512	Identifier	AV_PIX_FMT_0BGR		1099906	2					
ANR	1100513	ElseStatement	else		1099906	0					
ANR	1100514	IfStatement	if ( rgb [ 0 ] == 0x00FF0000 && rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x000000FF )		1099906	0					
ANR	1100515	Condition	rgb [ 0 ] == 0x00FF0000 && rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x000000FF	227:21:3456:3523	1099906	0	True				
ANR	1100516	AndExpression	rgb [ 0 ] == 0x00FF0000 && rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x000000FF		1099906	0		&&			
ANR	1100517	EqualityExpression	rgb [ 0 ] == 0x00FF0000		1099906	0		==			
ANR	1100518	ArrayIndexing	rgb [ 0 ]		1099906	0					
ANR	1100519	Identifier	rgb		1099906	0					
ANR	1100520	PrimaryExpression	0		1099906	1					
ANR	1100521	PrimaryExpression	0x00FF0000		1099906	1					
ANR	1100522	AndExpression	rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x000000FF		1099906	1		&&			
ANR	1100523	EqualityExpression	rgb [ 1 ] == 0x0000FF00		1099906	0		==			
ANR	1100524	ArrayIndexing	rgb [ 1 ]		1099906	0					
ANR	1100525	Identifier	rgb		1099906	0					
ANR	1100526	PrimaryExpression	1		1099906	1					
ANR	1100527	PrimaryExpression	0x0000FF00		1099906	1					
ANR	1100528	EqualityExpression	rgb [ 2 ] == 0x000000FF		1099906	1		==			
ANR	1100529	ArrayIndexing	rgb [ 2 ]		1099906	0					
ANR	1100530	Identifier	rgb		1099906	0					
ANR	1100531	PrimaryExpression	2		1099906	1					
ANR	1100532	PrimaryExpression	0x000000FF		1099906	1					
ANR	1100533	ExpressionStatement	avctx -> pix_fmt = alpha ? AV_PIX_FMT_BGRA : AV_PIX_FMT_BGR0	229:16:3543:3601	1099906	1	True				
ANR	1100534	AssignmentExpression	avctx -> pix_fmt = alpha ? AV_PIX_FMT_BGRA : AV_PIX_FMT_BGR0		1099906	0		=			
ANR	1100535	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100536	Identifier	avctx		1099906	0					
ANR	1100537	Identifier	pix_fmt		1099906	1					
ANR	1100538	ConditionalExpression	alpha ? AV_PIX_FMT_BGRA : AV_PIX_FMT_BGR0		1099906	1					
ANR	1100539	Condition	alpha		1099906	0					
ANR	1100540	Identifier	alpha		1099906	0					
ANR	1100541	Identifier	AV_PIX_FMT_BGRA		1099906	1					
ANR	1100542	Identifier	AV_PIX_FMT_BGR0		1099906	2					
ANR	1100543	ElseStatement	else		1099906	0					
ANR	1100544	IfStatement	if ( rgb [ 0 ] == 0x0000FF00 && rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0xFF000000 )		1099906	0					
ANR	1100545	Condition	rgb [ 0 ] == 0x0000FF00 && rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0xFF000000	231:21:3625:3692	1099906	0	True				
ANR	1100546	AndExpression	rgb [ 0 ] == 0x0000FF00 && rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0xFF000000		1099906	0		&&			
ANR	1100547	EqualityExpression	rgb [ 0 ] == 0x0000FF00		1099906	0		==			
ANR	1100548	ArrayIndexing	rgb [ 0 ]		1099906	0					
ANR	1100549	Identifier	rgb		1099906	0					
ANR	1100550	PrimaryExpression	0		1099906	1					
ANR	1100551	PrimaryExpression	0x0000FF00		1099906	1					
ANR	1100552	AndExpression	rgb [ 1 ] == 0x00FF0000 && rgb [ 2 ] == 0xFF000000		1099906	1		&&			
ANR	1100553	EqualityExpression	rgb [ 1 ] == 0x00FF0000		1099906	0		==			
ANR	1100554	ArrayIndexing	rgb [ 1 ]		1099906	0					
ANR	1100555	Identifier	rgb		1099906	0					
ANR	1100556	PrimaryExpression	1		1099906	1					
ANR	1100557	PrimaryExpression	0x00FF0000		1099906	1					
ANR	1100558	EqualityExpression	rgb [ 2 ] == 0xFF000000		1099906	1		==			
ANR	1100559	ArrayIndexing	rgb [ 2 ]		1099906	0					
ANR	1100560	Identifier	rgb		1099906	0					
ANR	1100561	PrimaryExpression	2		1099906	1					
ANR	1100562	PrimaryExpression	0xFF000000		1099906	1					
ANR	1100563	ExpressionStatement	avctx -> pix_fmt = alpha ? AV_PIX_FMT_ARGB : AV_PIX_FMT_0RGB	233:16:3712:3770	1099906	1	True				
ANR	1100564	AssignmentExpression	avctx -> pix_fmt = alpha ? AV_PIX_FMT_ARGB : AV_PIX_FMT_0RGB		1099906	0		=			
ANR	1100565	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100566	Identifier	avctx		1099906	0					
ANR	1100567	Identifier	pix_fmt		1099906	1					
ANR	1100568	ConditionalExpression	alpha ? AV_PIX_FMT_ARGB : AV_PIX_FMT_0RGB		1099906	1					
ANR	1100569	Condition	alpha		1099906	0					
ANR	1100570	Identifier	alpha		1099906	0					
ANR	1100571	Identifier	AV_PIX_FMT_ARGB		1099906	1					
ANR	1100572	Identifier	AV_PIX_FMT_0RGB		1099906	2					
ANR	1100573	ElseStatement	else		1099906	0					
ANR	1100574	IfStatement	if ( rgb [ 0 ] == 0x000000FF && rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x00FF0000 )		1099906	0					
ANR	1100575	Condition	rgb [ 0 ] == 0x000000FF && rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x00FF0000	235:21:3794:3861	1099906	0	True				
ANR	1100576	AndExpression	rgb [ 0 ] == 0x000000FF && rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x00FF0000		1099906	0		&&			
ANR	1100577	EqualityExpression	rgb [ 0 ] == 0x000000FF		1099906	0		==			
ANR	1100578	ArrayIndexing	rgb [ 0 ]		1099906	0					
ANR	1100579	Identifier	rgb		1099906	0					
ANR	1100580	PrimaryExpression	0		1099906	1					
ANR	1100581	PrimaryExpression	0x000000FF		1099906	1					
ANR	1100582	AndExpression	rgb [ 1 ] == 0x0000FF00 && rgb [ 2 ] == 0x00FF0000		1099906	1		&&			
ANR	1100583	EqualityExpression	rgb [ 1 ] == 0x0000FF00		1099906	0		==			
ANR	1100584	ArrayIndexing	rgb [ 1 ]		1099906	0					
ANR	1100585	Identifier	rgb		1099906	0					
ANR	1100586	PrimaryExpression	1		1099906	1					
ANR	1100587	PrimaryExpression	0x0000FF00		1099906	1					
ANR	1100588	EqualityExpression	rgb [ 2 ] == 0x00FF0000		1099906	1		==			
ANR	1100589	ArrayIndexing	rgb [ 2 ]		1099906	0					
ANR	1100590	Identifier	rgb		1099906	0					
ANR	1100591	PrimaryExpression	2		1099906	1					
ANR	1100592	PrimaryExpression	0x00FF0000		1099906	1					
ANR	1100593	ExpressionStatement	avctx -> pix_fmt = alpha ? AV_PIX_FMT_RGBA : AV_PIX_FMT_RGB0	237:16:3881:3939	1099906	1	True				
ANR	1100594	AssignmentExpression	avctx -> pix_fmt = alpha ? AV_PIX_FMT_RGBA : AV_PIX_FMT_RGB0		1099906	0		=			
ANR	1100595	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100596	Identifier	avctx		1099906	0					
ANR	1100597	Identifier	pix_fmt		1099906	1					
ANR	1100598	ConditionalExpression	alpha ? AV_PIX_FMT_RGBA : AV_PIX_FMT_RGB0		1099906	1					
ANR	1100599	Condition	alpha		1099906	0					
ANR	1100600	Identifier	alpha		1099906	0					
ANR	1100601	Identifier	AV_PIX_FMT_RGBA		1099906	1					
ANR	1100602	Identifier	AV_PIX_FMT_RGB0		1099906	2					
ANR	1100603	ElseStatement	else		1099906	0					
ANR	1100604	CompoundStatement		233:17:3803:3803	1099906	0					
ANR	1100605	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown bitfields %0X %0X %0X\\n"" , rgb [ 0 ] , rgb [ 1 ] , rgb [ 2 ] )"	241:16:3978:4064	1099906	0	True				
ANR	1100606	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown bitfields %0X %0X %0X\\n"" , rgb [ 0 ] , rgb [ 1 ] , rgb [ 2 ] )"		1099906	0					
ANR	1100607	Callee	av_log		1099906	0					
ANR	1100608	Identifier	av_log		1099906	0					
ANR	1100609	ArgumentList	avctx		1099906	1					
ANR	1100610	Argument	avctx		1099906	0					
ANR	1100611	Identifier	avctx		1099906	0					
ANR	1100612	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100613	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100614	Argument	"""Unknown bitfields %0X %0X %0X\\n"""		1099906	2					
ANR	1100615	PrimaryExpression	"""Unknown bitfields %0X %0X %0X\\n"""		1099906	0					
ANR	1100616	Argument	rgb [ 0 ]		1099906	3					
ANR	1100617	ArrayIndexing	rgb [ 0 ]		1099906	0					
ANR	1100618	Identifier	rgb		1099906	0					
ANR	1100619	PrimaryExpression	0		1099906	1					
ANR	1100620	Argument	rgb [ 1 ]		1099906	4					
ANR	1100621	ArrayIndexing	rgb [ 1 ]		1099906	0					
ANR	1100622	Identifier	rgb		1099906	0					
ANR	1100623	PrimaryExpression	1		1099906	1					
ANR	1100624	Argument	rgb [ 2 ]		1099906	5					
ANR	1100625	ArrayIndexing	rgb [ 2 ]		1099906	0					
ANR	1100626	Identifier	rgb		1099906	0					
ANR	1100627	PrimaryExpression	2		1099906	1					
ANR	1100628	ReturnStatement	return AVERROR ( EINVAL ) ;	243:16:4083:4105	1099906	1	True				
ANR	1100629	CallExpression	AVERROR ( EINVAL )		1099906	0					
ANR	1100630	Callee	AVERROR		1099906	0					
ANR	1100631	Identifier	AVERROR		1099906	0					
ANR	1100632	ArgumentList	EINVAL		1099906	1					
ANR	1100633	Argument	EINVAL		1099906	0					
ANR	1100634	Identifier	EINVAL		1099906	0					
ANR	1100635	ElseStatement	else		1099906	0					
ANR	1100636	CompoundStatement		241:15:3982:3982	1099906	0					
ANR	1100637	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_BGRA	249:12:4153:4185	1099906	0	True				
ANR	1100638	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_BGRA		1099906	0		=			
ANR	1100639	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100640	Identifier	avctx		1099906	0					
ANR	1100641	Identifier	pix_fmt		1099906	1					
ANR	1100642	Identifier	AV_PIX_FMT_BGRA		1099906	1					
ANR	1100643	BreakStatement	break ;	253:8:4207:4212	1099906	2	True				
ANR	1100644	Label	case 24 :	255:4:4219:4226	1099906	3	True				
ANR	1100645	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_BGR24	257:8:4237:4270	1099906	4	True				
ANR	1100646	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_BGR24		1099906	0		=			
ANR	1100647	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100648	Identifier	avctx		1099906	0					
ANR	1100649	Identifier	pix_fmt		1099906	1					
ANR	1100650	Identifier	AV_PIX_FMT_BGR24		1099906	1					
ANR	1100651	BreakStatement	break ;	259:8:4281:4286	1099906	5	True				
ANR	1100652	Label	case 16 :	261:4:4293:4300	1099906	6	True				
ANR	1100653	IfStatement	if ( comp == BMP_RGB )		1099906	7					
ANR	1100654	Condition	comp == BMP_RGB	263:11:4314:4328	1099906	0	True				
ANR	1100655	EqualityExpression	comp == BMP_RGB		1099906	0		==			
ANR	1100656	Identifier	comp		1099906	0					
ANR	1100657	Identifier	BMP_RGB		1099906	1					
ANR	1100658	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_RGB555	265:12:4344:4378	1099906	1	True				
ANR	1100659	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_RGB555		1099906	0		=			
ANR	1100660	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100661	Identifier	avctx		1099906	0					
ANR	1100662	Identifier	pix_fmt		1099906	1					
ANR	1100663	Identifier	AV_PIX_FMT_RGB555		1099906	1					
ANR	1100664	ElseStatement	else		1099906	0					
ANR	1100665	IfStatement	if ( comp == BMP_BITFIELDS )		1099906	0					
ANR	1100666	Condition	comp == BMP_BITFIELDS	267:17:4398:4418	1099906	0	True				
ANR	1100667	EqualityExpression	comp == BMP_BITFIELDS		1099906	0		==			
ANR	1100668	Identifier	comp		1099906	0					
ANR	1100669	Identifier	BMP_BITFIELDS		1099906	1					
ANR	1100670	CompoundStatement		261:40:4265:4265	1099906	1					
ANR	1100671	IfStatement	if ( rgb [ 0 ] == 0xF800 && rgb [ 1 ] == 0x07E0 && rgb [ 2 ] == 0x001F )		1099906	0					
ANR	1100672	Condition	rgb [ 0 ] == 0xF800 && rgb [ 1 ] == 0x07E0 && rgb [ 2 ] == 0x001F	269:16:4440:4495	1099906	0	True				
ANR	1100673	AndExpression	rgb [ 0 ] == 0xF800 && rgb [ 1 ] == 0x07E0 && rgb [ 2 ] == 0x001F		1099906	0		&&			
ANR	1100674	EqualityExpression	rgb [ 0 ] == 0xF800		1099906	0		==			
ANR	1100675	ArrayIndexing	rgb [ 0 ]		1099906	0					
ANR	1100676	Identifier	rgb		1099906	0					
ANR	1100677	PrimaryExpression	0		1099906	1					
ANR	1100678	PrimaryExpression	0xF800		1099906	1					
ANR	1100679	AndExpression	rgb [ 1 ] == 0x07E0 && rgb [ 2 ] == 0x001F		1099906	1		&&			
ANR	1100680	EqualityExpression	rgb [ 1 ] == 0x07E0		1099906	0		==			
ANR	1100681	ArrayIndexing	rgb [ 1 ]		1099906	0					
ANR	1100682	Identifier	rgb		1099906	0					
ANR	1100683	PrimaryExpression	1		1099906	1					
ANR	1100684	PrimaryExpression	0x07E0		1099906	1					
ANR	1100685	EqualityExpression	rgb [ 2 ] == 0x001F		1099906	1		==			
ANR	1100686	ArrayIndexing	rgb [ 2 ]		1099906	0					
ANR	1100687	Identifier	rgb		1099906	0					
ANR	1100688	PrimaryExpression	2		1099906	1					
ANR	1100689	PrimaryExpression	0x001F		1099906	1					
ANR	1100690	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_RGB565	271:15:4514:4548	1099906	1	True				
ANR	1100691	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_RGB565		1099906	0		=			
ANR	1100692	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100693	Identifier	avctx		1099906	0					
ANR	1100694	Identifier	pix_fmt		1099906	1					
ANR	1100695	Identifier	AV_PIX_FMT_RGB565		1099906	1					
ANR	1100696	ElseStatement	else		1099906	0					
ANR	1100697	IfStatement	if ( rgb [ 0 ] == 0x7C00 && rgb [ 1 ] == 0x03E0 && rgb [ 2 ] == 0x001F )		1099906	0					
ANR	1100698	Condition	rgb [ 0 ] == 0x7C00 && rgb [ 1 ] == 0x03E0 && rgb [ 2 ] == 0x001F	273:21:4572:4627	1099906	0	True				
ANR	1100699	AndExpression	rgb [ 0 ] == 0x7C00 && rgb [ 1 ] == 0x03E0 && rgb [ 2 ] == 0x001F		1099906	0		&&			
ANR	1100700	EqualityExpression	rgb [ 0 ] == 0x7C00		1099906	0		==			
ANR	1100701	ArrayIndexing	rgb [ 0 ]		1099906	0					
ANR	1100702	Identifier	rgb		1099906	0					
ANR	1100703	PrimaryExpression	0		1099906	1					
ANR	1100704	PrimaryExpression	0x7C00		1099906	1					
ANR	1100705	AndExpression	rgb [ 1 ] == 0x03E0 && rgb [ 2 ] == 0x001F		1099906	1		&&			
ANR	1100706	EqualityExpression	rgb [ 1 ] == 0x03E0		1099906	0		==			
ANR	1100707	ArrayIndexing	rgb [ 1 ]		1099906	0					
ANR	1100708	Identifier	rgb		1099906	0					
ANR	1100709	PrimaryExpression	1		1099906	1					
ANR	1100710	PrimaryExpression	0x03E0		1099906	1					
ANR	1100711	EqualityExpression	rgb [ 2 ] == 0x001F		1099906	1		==			
ANR	1100712	ArrayIndexing	rgb [ 2 ]		1099906	0					
ANR	1100713	Identifier	rgb		1099906	0					
ANR	1100714	PrimaryExpression	2		1099906	1					
ANR	1100715	PrimaryExpression	0x001F		1099906	1					
ANR	1100716	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_RGB555	275:15:4646:4680	1099906	1	True				
ANR	1100717	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_RGB555		1099906	0		=			
ANR	1100718	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100719	Identifier	avctx		1099906	0					
ANR	1100720	Identifier	pix_fmt		1099906	1					
ANR	1100721	Identifier	AV_PIX_FMT_RGB555		1099906	1					
ANR	1100722	ElseStatement	else		1099906	0					
ANR	1100723	IfStatement	if ( rgb [ 0 ] == 0x0F00 && rgb [ 1 ] == 0x00F0 && rgb [ 2 ] == 0x000F )		1099906	0					
ANR	1100724	Condition	rgb [ 0 ] == 0x0F00 && rgb [ 1 ] == 0x00F0 && rgb [ 2 ] == 0x000F	277:21:4704:4759	1099906	0	True				
ANR	1100725	AndExpression	rgb [ 0 ] == 0x0F00 && rgb [ 1 ] == 0x00F0 && rgb [ 2 ] == 0x000F		1099906	0		&&			
ANR	1100726	EqualityExpression	rgb [ 0 ] == 0x0F00		1099906	0		==			
ANR	1100727	ArrayIndexing	rgb [ 0 ]		1099906	0					
ANR	1100728	Identifier	rgb		1099906	0					
ANR	1100729	PrimaryExpression	0		1099906	1					
ANR	1100730	PrimaryExpression	0x0F00		1099906	1					
ANR	1100731	AndExpression	rgb [ 1 ] == 0x00F0 && rgb [ 2 ] == 0x000F		1099906	1		&&			
ANR	1100732	EqualityExpression	rgb [ 1 ] == 0x00F0		1099906	0		==			
ANR	1100733	ArrayIndexing	rgb [ 1 ]		1099906	0					
ANR	1100734	Identifier	rgb		1099906	0					
ANR	1100735	PrimaryExpression	1		1099906	1					
ANR	1100736	PrimaryExpression	0x00F0		1099906	1					
ANR	1100737	EqualityExpression	rgb [ 2 ] == 0x000F		1099906	1		==			
ANR	1100738	ArrayIndexing	rgb [ 2 ]		1099906	0					
ANR	1100739	Identifier	rgb		1099906	0					
ANR	1100740	PrimaryExpression	2		1099906	1					
ANR	1100741	PrimaryExpression	0x000F		1099906	1					
ANR	1100742	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_RGB444	279:15:4778:4812	1099906	1	True				
ANR	1100743	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_RGB444		1099906	0		=			
ANR	1100744	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100745	Identifier	avctx		1099906	0					
ANR	1100746	Identifier	pix_fmt		1099906	1					
ANR	1100747	Identifier	AV_PIX_FMT_RGB444		1099906	1					
ANR	1100748	ElseStatement	else		1099906	0					
ANR	1100749	CompoundStatement		275:17:4676:4676	1099906	0					
ANR	1100750	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown bitfields %0X %0X %0X\\n"" , rgb [ 0 ] , rgb [ 1 ] , rgb [ 2 ] )"	283:15:4850:4936	1099906	0	True				
ANR	1100751	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown bitfields %0X %0X %0X\\n"" , rgb [ 0 ] , rgb [ 1 ] , rgb [ 2 ] )"		1099906	0					
ANR	1100752	Callee	av_log		1099906	0					
ANR	1100753	Identifier	av_log		1099906	0					
ANR	1100754	ArgumentList	avctx		1099906	1					
ANR	1100755	Argument	avctx		1099906	0					
ANR	1100756	Identifier	avctx		1099906	0					
ANR	1100757	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100758	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100759	Argument	"""Unknown bitfields %0X %0X %0X\\n"""		1099906	2					
ANR	1100760	PrimaryExpression	"""Unknown bitfields %0X %0X %0X\\n"""		1099906	0					
ANR	1100761	Argument	rgb [ 0 ]		1099906	3					
ANR	1100762	ArrayIndexing	rgb [ 0 ]		1099906	0					
ANR	1100763	Identifier	rgb		1099906	0					
ANR	1100764	PrimaryExpression	0		1099906	1					
ANR	1100765	Argument	rgb [ 1 ]		1099906	4					
ANR	1100766	ArrayIndexing	rgb [ 1 ]		1099906	0					
ANR	1100767	Identifier	rgb		1099906	0					
ANR	1100768	PrimaryExpression	1		1099906	1					
ANR	1100769	Argument	rgb [ 2 ]		1099906	5					
ANR	1100770	ArrayIndexing	rgb [ 2 ]		1099906	0					
ANR	1100771	Identifier	rgb		1099906	0					
ANR	1100772	PrimaryExpression	2		1099906	1					
ANR	1100773	ReturnStatement	return AVERROR ( EINVAL ) ;	285:15:4954:4976	1099906	1	True				
ANR	1100774	CallExpression	AVERROR ( EINVAL )		1099906	0					
ANR	1100775	Callee	AVERROR		1099906	0					
ANR	1100776	Identifier	AVERROR		1099906	0					
ANR	1100777	ArgumentList	EINVAL		1099906	1					
ANR	1100778	Argument	EINVAL		1099906	0					
ANR	1100779	Identifier	EINVAL		1099906	0					
ANR	1100780	BreakStatement	break ;	291:8:5013:5018	1099906	8	True				
ANR	1100781	Label	case 8 :	293:4:5025:5031	1099906	9	True				
ANR	1100782	IfStatement	if ( hsize - ihsize - 14 > 0 )		1099906	10					
ANR	1100783	Condition	hsize - ihsize - 14 > 0	295:11:5045:5067	1099906	0	True				
ANR	1100784	RelationalExpression	hsize - ihsize - 14 > 0		1099906	0		>			
ANR	1100785	AdditiveExpression	hsize - ihsize - 14		1099906	0		-			
ANR	1100786	Identifier	hsize		1099906	0					
ANR	1100787	AdditiveExpression	ihsize - 14		1099906	1		-			
ANR	1100788	Identifier	ihsize		1099906	0					
ANR	1100789	PrimaryExpression	14		1099906	1					
ANR	1100790	PrimaryExpression	0		1099906	1					
ANR	1100791	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_PAL8	297:12:5083:5115	1099906	1	True				
ANR	1100792	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_PAL8		1099906	0		=			
ANR	1100793	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100794	Identifier	avctx		1099906	0					
ANR	1100795	Identifier	pix_fmt		1099906	1					
ANR	1100796	Identifier	AV_PIX_FMT_PAL8		1099906	1					
ANR	1100797	ElseStatement	else		1099906	0					
ANR	1100798	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_GRAY8	301:12:5144:5177	1099906	0	True				
ANR	1100799	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_GRAY8		1099906	0		=			
ANR	1100800	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100801	Identifier	avctx		1099906	0					
ANR	1100802	Identifier	pix_fmt		1099906	1					
ANR	1100803	Identifier	AV_PIX_FMT_GRAY8		1099906	1					
ANR	1100804	BreakStatement	break ;	303:8:5188:5193	1099906	11	True				
ANR	1100805	Label	case 1 :	305:4:5200:5206	1099906	12	True				
ANR	1100806	Label	case 4 :	307:4:5213:5219	1099906	13	True				
ANR	1100807	IfStatement	if ( hsize - ihsize - 14 > 0 )		1099906	14					
ANR	1100808	Condition	hsize - ihsize - 14 > 0	309:11:5233:5255	1099906	0	True				
ANR	1100809	RelationalExpression	hsize - ihsize - 14 > 0		1099906	0		>			
ANR	1100810	AdditiveExpression	hsize - ihsize - 14		1099906	0		-			
ANR	1100811	Identifier	hsize		1099906	0					
ANR	1100812	AdditiveExpression	ihsize - 14		1099906	1		-			
ANR	1100813	Identifier	ihsize		1099906	0					
ANR	1100814	PrimaryExpression	14		1099906	1					
ANR	1100815	PrimaryExpression	0		1099906	1					
ANR	1100816	CompoundStatement		303:35:5101:5101	1099906	1					
ANR	1100817	ExpressionStatement	avctx -> pix_fmt = AV_PIX_FMT_PAL8	311:12:5272:5304	1099906	0	True				
ANR	1100818	AssignmentExpression	avctx -> pix_fmt = AV_PIX_FMT_PAL8		1099906	0		=			
ANR	1100819	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100820	Identifier	avctx		1099906	0					
ANR	1100821	Identifier	pix_fmt		1099906	1					
ANR	1100822	Identifier	AV_PIX_FMT_PAL8		1099906	1					
ANR	1100823	ElseStatement	else		1099906	0					
ANR	1100824	CompoundStatement		307:13:5164:5164	1099906	0					
ANR	1100825	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown palette for %d-colour BMP\\n"" , 1 << depth )"	315:12:5335:5411	1099906	0	True				
ANR	1100826	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown palette for %d-colour BMP\\n"" , 1 << depth )"		1099906	0					
ANR	1100827	Callee	av_log		1099906	0					
ANR	1100828	Identifier	av_log		1099906	0					
ANR	1100829	ArgumentList	avctx		1099906	1					
ANR	1100830	Argument	avctx		1099906	0					
ANR	1100831	Identifier	avctx		1099906	0					
ANR	1100832	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100833	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100834	Argument	"""Unknown palette for %d-colour BMP\\n"""		1099906	2					
ANR	1100835	PrimaryExpression	"""Unknown palette for %d-colour BMP\\n"""		1099906	0					
ANR	1100836	Argument	1 << depth		1099906	3					
ANR	1100837	ShiftExpression	1 << depth		1099906	0		<<			
ANR	1100838	PrimaryExpression	1		1099906	0					
ANR	1100839	Identifier	depth		1099906	1					
ANR	1100840	ReturnStatement	return - 1 ;	317:12:5426:5435	1099906	1	True				
ANR	1100841	UnaryOperationExpression	- 1		1099906	0					
ANR	1100842	UnaryOperator	-		1099906	0					
ANR	1100843	PrimaryExpression	1		1099906	1					
ANR	1100844	BreakStatement	break ;	321:8:5457:5462	1099906	15	True				
ANR	1100845	Label	default :	323:4:5469:5476	1099906	16	True				
ANR	1100846	Identifier	default		1099906	0					
ANR	1100847	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""depth %d not supported\\n"" , depth )"	325:8:5487:5549	1099906	17	True				
ANR	1100848	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""depth %d not supported\\n"" , depth )"		1099906	0					
ANR	1100849	Callee	av_log		1099906	0					
ANR	1100850	Identifier	av_log		1099906	0					
ANR	1100851	ArgumentList	avctx		1099906	1					
ANR	1100852	Argument	avctx		1099906	0					
ANR	1100853	Identifier	avctx		1099906	0					
ANR	1100854	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100855	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100856	Argument	"""depth %d not supported\\n"""		1099906	2					
ANR	1100857	PrimaryExpression	"""depth %d not supported\\n"""		1099906	0					
ANR	1100858	Argument	depth		1099906	3					
ANR	1100859	Identifier	depth		1099906	0					
ANR	1100860	ReturnStatement	return - 1 ;	327:8:5560:5569	1099906	18	True				
ANR	1100861	UnaryOperationExpression	- 1		1099906	0					
ANR	1100862	UnaryOperator	-		1099906	0					
ANR	1100863	PrimaryExpression	1		1099906	1					
ANR	1100864	IfStatement	if ( avctx -> pix_fmt == AV_PIX_FMT_NONE )		1099906	38					
ANR	1100865	Condition	avctx -> pix_fmt == AV_PIX_FMT_NONE	333:7:5588:5620	1099906	0	True				
ANR	1100866	EqualityExpression	avctx -> pix_fmt == AV_PIX_FMT_NONE		1099906	0		==			
ANR	1100867	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1100868	Identifier	avctx		1099906	0					
ANR	1100869	Identifier	pix_fmt		1099906	1					
ANR	1100870	Identifier	AV_PIX_FMT_NONE		1099906	1					
ANR	1100871	CompoundStatement		327:41:5466:5466	1099906	1					
ANR	1100872	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported pixel format\\n"" )"	335:8:5633:5690	1099906	0	True				
ANR	1100873	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported pixel format\\n"" )"		1099906	0					
ANR	1100874	Callee	av_log		1099906	0					
ANR	1100875	Identifier	av_log		1099906	0					
ANR	1100876	ArgumentList	avctx		1099906	1					
ANR	1100877	Argument	avctx		1099906	0					
ANR	1100878	Identifier	avctx		1099906	0					
ANR	1100879	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100880	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100881	Argument	"""unsupported pixel format\\n"""		1099906	2					
ANR	1100882	PrimaryExpression	"""unsupported pixel format\\n"""		1099906	0					
ANR	1100883	ReturnStatement	return - 1 ;	337:8:5701:5710	1099906	1	True				
ANR	1100884	UnaryOperationExpression	- 1		1099906	0					
ANR	1100885	UnaryOperator	-		1099906	0					
ANR	1100886	PrimaryExpression	1		1099906	1					
ANR	1100887	IfStatement	if ( p -> data [ 0 ] )		1099906	39					
ANR	1100888	Condition	p -> data [ 0 ]	343:7:5729:5738	1099906	0	True				
ANR	1100889	ArrayIndexing	p -> data [ 0 ]		1099906	0					
ANR	1100890	PtrMemberAccess	p -> data		1099906	0					
ANR	1100891	Identifier	p		1099906	0					
ANR	1100892	Identifier	data		1099906	1					
ANR	1100893	PrimaryExpression	0		1099906	1					
ANR	1100894	ExpressionStatement	"avctx -> release_buffer ( avctx , p )"	345:8:5750:5781	1099906	1	True				
ANR	1100895	CallExpression	"avctx -> release_buffer ( avctx , p )"		1099906	0					
ANR	1100896	Callee	avctx -> release_buffer		1099906	0					
ANR	1100897	PtrMemberAccess	avctx -> release_buffer		1099906	0					
ANR	1100898	Identifier	avctx		1099906	0					
ANR	1100899	Identifier	release_buffer		1099906	1					
ANR	1100900	ArgumentList	avctx		1099906	1					
ANR	1100901	Argument	avctx		1099906	0					
ANR	1100902	Identifier	avctx		1099906	0					
ANR	1100903	Argument	p		1099906	1					
ANR	1100904	Identifier	p		1099906	0					
ANR	1100905	ExpressionStatement	p -> reference = 0	349:4:5790:5806	1099906	40	True				
ANR	1100906	AssignmentExpression	p -> reference = 0		1099906	0		=			
ANR	1100907	PtrMemberAccess	p -> reference		1099906	0					
ANR	1100908	Identifier	p		1099906	0					
ANR	1100909	Identifier	reference		1099906	1					
ANR	1100910	PrimaryExpression	0		1099906	1					
ANR	1100911	IfStatement	"if ( avctx -> get_buffer ( avctx , p ) < 0 )"		1099906	41					
ANR	1100912	Condition	"avctx -> get_buffer ( avctx , p ) < 0"	351:7:5816:5846	1099906	0	True				
ANR	1100913	RelationalExpression	"avctx -> get_buffer ( avctx , p ) < 0"		1099906	0		<			
ANR	1100914	CallExpression	"avctx -> get_buffer ( avctx , p )"		1099906	0					
ANR	1100915	Callee	avctx -> get_buffer		1099906	0					
ANR	1100916	PtrMemberAccess	avctx -> get_buffer		1099906	0					
ANR	1100917	Identifier	avctx		1099906	0					
ANR	1100918	Identifier	get_buffer		1099906	1					
ANR	1100919	ArgumentList	avctx		1099906	1					
ANR	1100920	Argument	avctx		1099906	0					
ANR	1100921	Identifier	avctx		1099906	0					
ANR	1100922	Argument	p		1099906	1					
ANR	1100923	Identifier	p		1099906	0					
ANR	1100924	PrimaryExpression	0		1099906	1					
ANR	1100925	CompoundStatement		345:39:5692:5692	1099906	1					
ANR	1100926	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	353:8:5859:5911	1099906	0	True				
ANR	1100927	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		1099906	0					
ANR	1100928	Callee	av_log		1099906	0					
ANR	1100929	Identifier	av_log		1099906	0					
ANR	1100930	ArgumentList	avctx		1099906	1					
ANR	1100931	Argument	avctx		1099906	0					
ANR	1100932	Identifier	avctx		1099906	0					
ANR	1100933	Argument	AV_LOG_ERROR		1099906	1					
ANR	1100934	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1100935	Argument	"""get_buffer() failed\\n"""		1099906	2					
ANR	1100936	PrimaryExpression	"""get_buffer() failed\\n"""		1099906	0					
ANR	1100937	ReturnStatement	return - 1 ;	355:8:5922:5931	1099906	1	True				
ANR	1100938	UnaryOperationExpression	- 1		1099906	0					
ANR	1100939	UnaryOperator	-		1099906	0					
ANR	1100940	PrimaryExpression	1		1099906	1					
ANR	1100941	ExpressionStatement	p -> pict_type = AV_PICTURE_TYPE_I	359:4:5945:5977	1099906	42	True				
ANR	1100942	AssignmentExpression	p -> pict_type = AV_PICTURE_TYPE_I		1099906	0		=			
ANR	1100943	PtrMemberAccess	p -> pict_type		1099906	0					
ANR	1100944	Identifier	p		1099906	0					
ANR	1100945	Identifier	pict_type		1099906	1					
ANR	1100946	Identifier	AV_PICTURE_TYPE_I		1099906	1					
ANR	1100947	ExpressionStatement	p -> key_frame = 1	361:4:5984:6000	1099906	43	True				
ANR	1100948	AssignmentExpression	p -> key_frame = 1		1099906	0		=			
ANR	1100949	PtrMemberAccess	p -> key_frame		1099906	0					
ANR	1100950	Identifier	p		1099906	0					
ANR	1100951	Identifier	key_frame		1099906	1					
ANR	1100952	PrimaryExpression	1		1099906	1					
ANR	1100953	ExpressionStatement	buf = buf0 + hsize	365:4:6009:6027	1099906	44	True				
ANR	1100954	AssignmentExpression	buf = buf0 + hsize		1099906	0		=			
ANR	1100955	Identifier	buf		1099906	0					
ANR	1100956	AdditiveExpression	buf0 + hsize		1099906	1		+			
ANR	1100957	Identifier	buf0		1099906	0					
ANR	1100958	Identifier	hsize		1099906	1					
ANR	1100959	ExpressionStatement	dsize = buf_size - hsize	367:4:6034:6058	1099906	45	True				
ANR	1100960	AssignmentExpression	dsize = buf_size - hsize		1099906	0		=			
ANR	1100961	Identifier	dsize		1099906	0					
ANR	1100962	AdditiveExpression	buf_size - hsize		1099906	1		-			
ANR	1100963	Identifier	buf_size		1099906	0					
ANR	1100964	Identifier	hsize		1099906	1					
ANR	1100965	ExpressionStatement	n = ( ( avctx -> width * depth + 31 ) / 8 ) & ~3	373:4:6110:6152	1099906	46	True				
ANR	1100966	AssignmentExpression	n = ( ( avctx -> width * depth + 31 ) / 8 ) & ~3		1099906	0		=			
ANR	1100967	Identifier	n		1099906	0					
ANR	1100968	BitAndExpression	( ( avctx -> width * depth + 31 ) / 8 ) & ~3		1099906	1		&			
ANR	1100969	MultiplicativeExpression	( avctx -> width * depth + 31 ) / 8		1099906	0		/			
ANR	1100970	AdditiveExpression	avctx -> width * depth + 31		1099906	0		+			
ANR	1100971	MultiplicativeExpression	avctx -> width * depth		1099906	0		*			
ANR	1100972	PtrMemberAccess	avctx -> width		1099906	0					
ANR	1100973	Identifier	avctx		1099906	0					
ANR	1100974	Identifier	width		1099906	1					
ANR	1100975	Identifier	depth		1099906	1					
ANR	1100976	PrimaryExpression	31		1099906	1					
ANR	1100977	PrimaryExpression	8		1099906	1					
ANR	1100978	Identifier	~3		1099906	1					
ANR	1100979	IfStatement	if ( n * avctx -> height > dsize && comp != BMP_RLE4 && comp != BMP_RLE8 )		1099906	47					
ANR	1100980	Condition	n * avctx -> height > dsize && comp != BMP_RLE4 && comp != BMP_RLE8	377:7:6164:6228	1099906	0	True				
ANR	1100981	AndExpression	n * avctx -> height > dsize && comp != BMP_RLE4 && comp != BMP_RLE8		1099906	0		&&			
ANR	1100982	RelationalExpression	n * avctx -> height > dsize		1099906	0		>			
ANR	1100983	MultiplicativeExpression	n * avctx -> height		1099906	0		*			
ANR	1100984	Identifier	n		1099906	0					
ANR	1100985	PtrMemberAccess	avctx -> height		1099906	1					
ANR	1100986	Identifier	avctx		1099906	0					
ANR	1100987	Identifier	height		1099906	1					
ANR	1100988	Identifier	dsize		1099906	1					
ANR	1100989	AndExpression	comp != BMP_RLE4 && comp != BMP_RLE8		1099906	1		&&			
ANR	1100990	EqualityExpression	comp != BMP_RLE4		1099906	0		!=			
ANR	1100991	Identifier	comp		1099906	0					
ANR	1100992	Identifier	BMP_RLE4		1099906	1					
ANR	1100993	EqualityExpression	comp != BMP_RLE8		1099906	1		!=			
ANR	1100994	Identifier	comp		1099906	0					
ANR	1100995	Identifier	BMP_RLE8		1099906	1					
ANR	1100996	CompoundStatement		371:73:6074:6074	1099906	1					
ANR	1100997	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , dsize , n * avctx -> height )"	379:8:6241:6341	1099906	0	True				
ANR	1100998	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""not enough data (%d < %d)\\n"" , dsize , n * avctx -> height )"		1099906	0					
ANR	1100999	Callee	av_log		1099906	0					
ANR	1101000	Identifier	av_log		1099906	0					
ANR	1101001	ArgumentList	avctx		1099906	1					
ANR	1101002	Argument	avctx		1099906	0					
ANR	1101003	Identifier	avctx		1099906	0					
ANR	1101004	Argument	AV_LOG_ERROR		1099906	1					
ANR	1101005	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1101006	Argument	"""not enough data (%d < %d)\\n"""		1099906	2					
ANR	1101007	PrimaryExpression	"""not enough data (%d < %d)\\n"""		1099906	0					
ANR	1101008	Argument	dsize		1099906	3					
ANR	1101009	Identifier	dsize		1099906	0					
ANR	1101010	Argument	n * avctx -> height		1099906	4					
ANR	1101011	MultiplicativeExpression	n * avctx -> height		1099906	0		*			
ANR	1101012	Identifier	n		1099906	0					
ANR	1101013	PtrMemberAccess	avctx -> height		1099906	1					
ANR	1101014	Identifier	avctx		1099906	0					
ANR	1101015	Identifier	height		1099906	1					
ANR	1101016	ReturnStatement	return - 1 ;	383:8:6352:6361	1099906	1	True				
ANR	1101017	UnaryOperationExpression	- 1		1099906	0					
ANR	1101018	UnaryOperator	-		1099906	0					
ANR	1101019	PrimaryExpression	1		1099906	1					
ANR	1101020	IfStatement	if ( comp == BMP_RLE4 || comp == BMP_RLE8 )		1099906	48					
ANR	1101021	Condition	comp == BMP_RLE4 || comp == BMP_RLE8	391:7:6463:6498	1099906	0	True				
ANR	1101022	OrExpression	comp == BMP_RLE4 || comp == BMP_RLE8		1099906	0		||			
ANR	1101023	EqualityExpression	comp == BMP_RLE4		1099906	0		==			
ANR	1101024	Identifier	comp		1099906	0					
ANR	1101025	Identifier	BMP_RLE4		1099906	1					
ANR	1101026	EqualityExpression	comp == BMP_RLE8		1099906	1		==			
ANR	1101027	Identifier	comp		1099906	0					
ANR	1101028	Identifier	BMP_RLE8		1099906	1					
ANR	1101029	ExpressionStatement	"memset ( p -> data [ 0 ] , 0 , avctx -> height * p -> linesize [ 0 ] )"	393:8:6510:6563	1099906	1	True				
ANR	1101030	CallExpression	"memset ( p -> data [ 0 ] , 0 , avctx -> height * p -> linesize [ 0 ] )"		1099906	0					
ANR	1101031	Callee	memset		1099906	0					
ANR	1101032	Identifier	memset		1099906	0					
ANR	1101033	ArgumentList	p -> data [ 0 ]		1099906	1					
ANR	1101034	Argument	p -> data [ 0 ]		1099906	0					
ANR	1101035	ArrayIndexing	p -> data [ 0 ]		1099906	0					
ANR	1101036	PtrMemberAccess	p -> data		1099906	0					
ANR	1101037	Identifier	p		1099906	0					
ANR	1101038	Identifier	data		1099906	1					
ANR	1101039	PrimaryExpression	0		1099906	1					
ANR	1101040	Argument	0		1099906	1					
ANR	1101041	PrimaryExpression	0		1099906	0					
ANR	1101042	Argument	avctx -> height * p -> linesize [ 0 ]		1099906	2					
ANR	1101043	MultiplicativeExpression	avctx -> height * p -> linesize [ 0 ]		1099906	0		*			
ANR	1101044	PtrMemberAccess	avctx -> height		1099906	0					
ANR	1101045	Identifier	avctx		1099906	0					
ANR	1101046	Identifier	height		1099906	1					
ANR	1101047	ArrayIndexing	p -> linesize [ 0 ]		1099906	1					
ANR	1101048	PtrMemberAccess	p -> linesize		1099906	0					
ANR	1101049	Identifier	p		1099906	0					
ANR	1101050	Identifier	linesize		1099906	1					
ANR	1101051	PrimaryExpression	0		1099906	1					
ANR	1101052	IfStatement	if ( height > 0 )		1099906	49					
ANR	1101053	Condition	height > 0	397:7:6575:6584	1099906	0	True				
ANR	1101054	RelationalExpression	height > 0		1099906	0		>			
ANR	1101055	Identifier	height		1099906	0					
ANR	1101056	PrimaryExpression	0		1099906	1					
ANR	1101057	CompoundStatement		391:18:6430:6430	1099906	1					
ANR	1101058	ExpressionStatement	ptr = p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]	399:8:6597:6652	1099906	0	True				
ANR	1101059	AssignmentExpression	ptr = p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]		1099906	0		=			
ANR	1101060	Identifier	ptr		1099906	0					
ANR	1101061	AdditiveExpression	p -> data [ 0 ] + ( avctx -> height - 1 ) * p -> linesize [ 0 ]		1099906	1		+			
ANR	1101062	ArrayIndexing	p -> data [ 0 ]		1099906	0					
ANR	1101063	PtrMemberAccess	p -> data		1099906	0					
ANR	1101064	Identifier	p		1099906	0					
ANR	1101065	Identifier	data		1099906	1					
ANR	1101066	PrimaryExpression	0		1099906	1					
ANR	1101067	MultiplicativeExpression	( avctx -> height - 1 ) * p -> linesize [ 0 ]		1099906	1		*			
ANR	1101068	AdditiveExpression	avctx -> height - 1		1099906	0		-			
ANR	1101069	PtrMemberAccess	avctx -> height		1099906	0					
ANR	1101070	Identifier	avctx		1099906	0					
ANR	1101071	Identifier	height		1099906	1					
ANR	1101072	PrimaryExpression	1		1099906	1					
ANR	1101073	ArrayIndexing	p -> linesize [ 0 ]		1099906	1					
ANR	1101074	PtrMemberAccess	p -> linesize		1099906	0					
ANR	1101075	Identifier	p		1099906	0					
ANR	1101076	Identifier	linesize		1099906	1					
ANR	1101077	PrimaryExpression	0		1099906	1					
ANR	1101078	ExpressionStatement	linesize = - p -> linesize [ 0 ]	401:8:6663:6689	1099906	1	True				
ANR	1101079	AssignmentExpression	linesize = - p -> linesize [ 0 ]		1099906	0		=			
ANR	1101080	Identifier	linesize		1099906	0					
ANR	1101081	UnaryOperationExpression	- p -> linesize [ 0 ]		1099906	1					
ANR	1101082	UnaryOperator	-		1099906	0					
ANR	1101083	ArrayIndexing	p -> linesize [ 0 ]		1099906	1					
ANR	1101084	PtrMemberAccess	p -> linesize		1099906	0					
ANR	1101085	Identifier	p		1099906	0					
ANR	1101086	Identifier	linesize		1099906	1					
ANR	1101087	PrimaryExpression	0		1099906	1					
ANR	1101088	ElseStatement	else		1099906	0					
ANR	1101089	CompoundStatement		397:11:6547:6547	1099906	0					
ANR	1101090	ExpressionStatement	ptr = p -> data [ 0 ]	405:8:6714:6730	1099906	0	True				
ANR	1101091	AssignmentExpression	ptr = p -> data [ 0 ]		1099906	0		=			
ANR	1101092	Identifier	ptr		1099906	0					
ANR	1101093	ArrayIndexing	p -> data [ 0 ]		1099906	1					
ANR	1101094	PtrMemberAccess	p -> data		1099906	0					
ANR	1101095	Identifier	p		1099906	0					
ANR	1101096	Identifier	data		1099906	1					
ANR	1101097	PrimaryExpression	0		1099906	1					
ANR	1101098	ExpressionStatement	linesize = p -> linesize [ 0 ]	407:8:6741:6766	1099906	1	True				
ANR	1101099	AssignmentExpression	linesize = p -> linesize [ 0 ]		1099906	0		=			
ANR	1101100	Identifier	linesize		1099906	0					
ANR	1101101	ArrayIndexing	p -> linesize [ 0 ]		1099906	1					
ANR	1101102	PtrMemberAccess	p -> linesize		1099906	0					
ANR	1101103	Identifier	p		1099906	0					
ANR	1101104	Identifier	linesize		1099906	1					
ANR	1101105	PrimaryExpression	0		1099906	1					
ANR	1101106	IfStatement	if ( avctx -> pix_fmt == AV_PIX_FMT_PAL8 )		1099906	50					
ANR	1101107	Condition	avctx -> pix_fmt == AV_PIX_FMT_PAL8	413:7:6785:6817	1099906	0	True				
ANR	1101108	EqualityExpression	avctx -> pix_fmt == AV_PIX_FMT_PAL8		1099906	0		==			
ANR	1101109	PtrMemberAccess	avctx -> pix_fmt		1099906	0					
ANR	1101110	Identifier	avctx		1099906	0					
ANR	1101111	Identifier	pix_fmt		1099906	1					
ANR	1101112	Identifier	AV_PIX_FMT_PAL8		1099906	1					
ANR	1101113	CompoundStatement		409:8:6674:6697	1099906	1					
ANR	1101114	IdentifierDeclStatement	int colors = 1 << depth ;	415:8:6830:6853	1099906	0	True				
ANR	1101115	IdentifierDecl	colors = 1 << depth		1099906	0					
ANR	1101116	IdentifierDeclType	int		1099906	0					
ANR	1101117	Identifier	colors		1099906	1					
ANR	1101118	AssignmentExpression	colors = 1 << depth		1099906	2		=			
ANR	1101119	Identifier	colors		1099906	0					
ANR	1101120	ShiftExpression	1 << depth		1099906	1		<<			
ANR	1101121	PrimaryExpression	1		1099906	0					
ANR	1101122	Identifier	depth		1099906	1					
ANR	1101123	ExpressionStatement	"memset ( p -> data [ 1 ] , 0 , 1024 )"	419:8:6866:6893	1099906	1	True				
ANR	1101124	CallExpression	"memset ( p -> data [ 1 ] , 0 , 1024 )"		1099906	0					
ANR	1101125	Callee	memset		1099906	0					
ANR	1101126	Identifier	memset		1099906	0					
ANR	1101127	ArgumentList	p -> data [ 1 ]		1099906	1					
ANR	1101128	Argument	p -> data [ 1 ]		1099906	0					
ANR	1101129	ArrayIndexing	p -> data [ 1 ]		1099906	0					
ANR	1101130	PtrMemberAccess	p -> data		1099906	0					
ANR	1101131	Identifier	p		1099906	0					
ANR	1101132	Identifier	data		1099906	1					
ANR	1101133	PrimaryExpression	1		1099906	1					
ANR	1101134	Argument	0		1099906	1					
ANR	1101135	PrimaryExpression	0		1099906	0					
ANR	1101136	Argument	1024		1099906	2					
ANR	1101137	PrimaryExpression	1024		1099906	0					
ANR	1101138	IfStatement	if ( ihsize >= 36 )		1099906	2					
ANR	1101139	Condition	ihsize >= 36	423:11:6909:6920	1099906	0	True				
ANR	1101140	RelationalExpression	ihsize >= 36		1099906	0		>=			
ANR	1101141	Identifier	ihsize		1099906	0					
ANR	1101142	PrimaryExpression	36		1099906	1					
ANR	1101143	CompoundStatement		419:12:6781:6786	1099906	1					
ANR	1101144	IdentifierDeclStatement	int t ;	425:12:6937:6942	1099906	0	True				
ANR	1101145	IdentifierDecl	t		1099906	0					
ANR	1101146	IdentifierDeclType	int		1099906	0					
ANR	1101147	Identifier	t		1099906	1					
ANR	1101148	ExpressionStatement	buf = buf0 + 46	427:12:6957:6972	1099906	1	True				
ANR	1101149	AssignmentExpression	buf = buf0 + 46		1099906	0		=			
ANR	1101150	Identifier	buf		1099906	0					
ANR	1101151	AdditiveExpression	buf0 + 46		1099906	1		+			
ANR	1101152	Identifier	buf0		1099906	0					
ANR	1101153	PrimaryExpression	46		1099906	1					
ANR	1101154	ExpressionStatement	t = bytestream_get_le32 ( & buf )	429:12:6987:7016	1099906	2	True				
ANR	1101155	AssignmentExpression	t = bytestream_get_le32 ( & buf )		1099906	0		=			
ANR	1101156	Identifier	t		1099906	0					
ANR	1101157	CallExpression	bytestream_get_le32 ( & buf )		1099906	1					
ANR	1101158	Callee	bytestream_get_le32		1099906	0					
ANR	1101159	Identifier	bytestream_get_le32		1099906	0					
ANR	1101160	ArgumentList	& buf		1099906	1					
ANR	1101161	Argument	& buf		1099906	0					
ANR	1101162	UnaryOperationExpression	& buf		1099906	0					
ANR	1101163	UnaryOperator	&		1099906	0					
ANR	1101164	Identifier	buf		1099906	1					
ANR	1101165	IfStatement	if ( t < 0 || t > ( 1 << depth ) )		1099906	3					
ANR	1101166	Condition	t < 0 || t > ( 1 << depth )	431:15:7034:7058	1099906	0	True				
ANR	1101167	OrExpression	t < 0 || t > ( 1 << depth )		1099906	0		||			
ANR	1101168	RelationalExpression	t < 0		1099906	0		<			
ANR	1101169	Identifier	t		1099906	0					
ANR	1101170	PrimaryExpression	0		1099906	1					
ANR	1101171	RelationalExpression	t > ( 1 << depth )		1099906	1		>			
ANR	1101172	Identifier	t		1099906	0					
ANR	1101173	ShiftExpression	1 << depth		1099906	1		<<			
ANR	1101174	PrimaryExpression	1		1099906	0					
ANR	1101175	Identifier	depth		1099906	1					
ANR	1101176	CompoundStatement		425:41:6904:6904	1099906	1					
ANR	1101177	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect number of colors - %X for bitdepth %d\\n"" , t , depth )"	433:16:7079:7169	1099906	0	True				
ANR	1101178	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect number of colors - %X for bitdepth %d\\n"" , t , depth )"		1099906	0					
ANR	1101179	Callee	av_log		1099906	0					
ANR	1101180	Identifier	av_log		1099906	0					
ANR	1101181	ArgumentList	avctx		1099906	1					
ANR	1101182	Argument	avctx		1099906	0					
ANR	1101183	Identifier	avctx		1099906	0					
ANR	1101184	Argument	AV_LOG_ERROR		1099906	1					
ANR	1101185	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1101186	Argument	"""Incorrect number of colors - %X for bitdepth %d\\n"""		1099906	2					
ANR	1101187	PrimaryExpression	"""Incorrect number of colors - %X for bitdepth %d\\n"""		1099906	0					
ANR	1101188	Argument	t		1099906	3					
ANR	1101189	Identifier	t		1099906	0					
ANR	1101190	Argument	depth		1099906	4					
ANR	1101191	Identifier	depth		1099906	0					
ANR	1101192	ElseStatement	else		1099906	0					
ANR	1101193	IfStatement	if ( t )		1099906	0					
ANR	1101194	Condition	t	435:21:7193:7193	1099906	0	True				
ANR	1101195	Identifier	t		1099906	0					
ANR	1101196	CompoundStatement		429:23:7039:7039	1099906	1					
ANR	1101197	ExpressionStatement	colors = t	437:16:7214:7224	1099906	0	True				
ANR	1101198	AssignmentExpression	colors = t		1099906	0		=			
ANR	1101199	Identifier	colors		1099906	0					
ANR	1101200	Identifier	t		1099906	1					
ANR	1101201	ExpressionStatement	buf = buf0 + 14 + ihsize	443:8:7261:7285	1099906	3	True				
ANR	1101202	AssignmentExpression	buf = buf0 + 14 + ihsize		1099906	0		=			
ANR	1101203	Identifier	buf		1099906	0					
ANR	1101204	AdditiveExpression	buf0 + 14 + ihsize		1099906	1		+			
ANR	1101205	Identifier	buf0		1099906	0					
ANR	1101206	AdditiveExpression	14 + ihsize		1099906	1		+			
ANR	1101207	PrimaryExpression	14		1099906	0					
ANR	1101208	Identifier	ihsize		1099906	1					
ANR	1101209	IfStatement	if ( ( hsize - ihsize - 14 ) < ( colors << 2 ) )		1099906	4					
ANR	1101210	Condition	( hsize - ihsize - 14 ) < ( colors << 2 )	445:11:7318:7350	1099906	0	True				
ANR	1101211	RelationalExpression	( hsize - ihsize - 14 ) < ( colors << 2 )		1099906	0		<			
ANR	1101212	AdditiveExpression	hsize - ihsize - 14		1099906	0		-			
ANR	1101213	Identifier	hsize		1099906	0					
ANR	1101214	AdditiveExpression	ihsize - 14		1099906	1		-			
ANR	1101215	Identifier	ihsize		1099906	0					
ANR	1101216	PrimaryExpression	14		1099906	1					
ANR	1101217	ShiftExpression	colors << 2		1099906	1		<<			
ANR	1101218	Identifier	colors		1099906	0					
ANR	1101219	PrimaryExpression	2		1099906	1					
ANR	1101220	CompoundStatement		439:45:7196:7196	1099906	1					
ANR	1101221	ForStatement	for ( i = 0 ; i < colors ; i ++ )		1099906	0					
ANR	1101222	ForInit	i = 0 ;	447:16:7413:7418	1099906	0	True				
ANR	1101223	AssignmentExpression	i = 0		1099906	0		=			
ANR	1101224	Identifier	i		1099906	0					
ANR	1101225	PrimaryExpression	0		1099906	1					
ANR	1101226	Condition	i < colors	447:23:7420:7429	1099906	1	True				
ANR	1101227	RelationalExpression	i < colors		1099906	0		<			
ANR	1101228	Identifier	i		1099906	0					
ANR	1101229	Identifier	colors		1099906	1					
ANR	1101230	PostIncDecOperationExpression	i ++	447:35:7432:7434	1099906	2	True				
ANR	1101231	Identifier	i		1099906	0					
ANR	1101232	IncDec	++		1099906	1					
ANR	1101233	ExpressionStatement	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = ( 0xff << 24 ) | bytestream_get_le24 ( & buf )	449:16:7454:7521	1099906	3	True				
ANR	1101234	AssignmentExpression	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = ( 0xff << 24 ) | bytestream_get_le24 ( & buf )		1099906	0		=			
ANR	1101235	ArrayIndexing	( ( uint32_t * ) p -> data [ 1 ] ) [ i ]		1099906	0					
ANR	1101236	CastExpression	( uint32_t * ) p -> data [ 1 ]		1099906	0					
ANR	1101237	CastTarget	uint32_t *		1099906	0					
ANR	1101238	ArrayIndexing	p -> data [ 1 ]		1099906	1					
ANR	1101239	PtrMemberAccess	p -> data		1099906	0					
ANR	1101240	Identifier	p		1099906	0					
ANR	1101241	Identifier	data		1099906	1					
ANR	1101242	PrimaryExpression	1		1099906	1					
ANR	1101243	Identifier	i		1099906	1					
ANR	1101244	InclusiveOrExpression	( 0xff << 24 ) | bytestream_get_le24 ( & buf )		1099906	1		|			
ANR	1101245	ShiftExpression	0xff << 24		1099906	0		<<			
ANR	1101246	PrimaryExpression	0xff		1099906	0					
ANR	1101247	PrimaryExpression	24		1099906	1					
ANR	1101248	CallExpression	bytestream_get_le24 ( & buf )		1099906	1					
ANR	1101249	Callee	bytestream_get_le24		1099906	0					
ANR	1101250	Identifier	bytestream_get_le24		1099906	0					
ANR	1101251	ArgumentList	& buf		1099906	1					
ANR	1101252	Argument	& buf		1099906	0					
ANR	1101253	UnaryOperationExpression	& buf		1099906	0					
ANR	1101254	UnaryOperator	&		1099906	0					
ANR	1101255	Identifier	buf		1099906	1					
ANR	1101256	ElseStatement	else		1099906	0					
ANR	1101257	CompoundStatement		445:13:7381:7381	1099906	0					
ANR	1101258	ForStatement	for ( i = 0 ; i < colors ; i ++ )		1099906	0					
ANR	1101259	ForInit	i = 0 ;	453:16:7556:7561	1099906	0	True				
ANR	1101260	AssignmentExpression	i = 0		1099906	0		=			
ANR	1101261	Identifier	i		1099906	0					
ANR	1101262	PrimaryExpression	0		1099906	1					
ANR	1101263	Condition	i < colors	453:23:7563:7572	1099906	1	True				
ANR	1101264	RelationalExpression	i < colors		1099906	0		<			
ANR	1101265	Identifier	i		1099906	0					
ANR	1101266	Identifier	colors		1099906	1					
ANR	1101267	PostIncDecOperationExpression	i ++	453:35:7575:7577	1099906	2	True				
ANR	1101268	Identifier	i		1099906	0					
ANR	1101269	IncDec	++		1099906	1					
ANR	1101270	ExpressionStatement	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = 0xFFU << 24 | bytestream_get_le32 ( & buf )	455:16:7597:7665	1099906	3	True				
ANR	1101271	AssignmentExpression	( ( uint32_t * ) p -> data [ 1 ] ) [ i ] = 0xFFU << 24 | bytestream_get_le32 ( & buf )		1099906	0		=			
ANR	1101272	ArrayIndexing	( ( uint32_t * ) p -> data [ 1 ] ) [ i ]		1099906	0					
ANR	1101273	CastExpression	( uint32_t * ) p -> data [ 1 ]		1099906	0					
ANR	1101274	CastTarget	uint32_t *		1099906	0					
ANR	1101275	ArrayIndexing	p -> data [ 1 ]		1099906	1					
ANR	1101276	PtrMemberAccess	p -> data		1099906	0					
ANR	1101277	Identifier	p		1099906	0					
ANR	1101278	Identifier	data		1099906	1					
ANR	1101279	PrimaryExpression	1		1099906	1					
ANR	1101280	Identifier	i		1099906	1					
ANR	1101281	InclusiveOrExpression	0xFFU << 24 | bytestream_get_le32 ( & buf )		1099906	1		|			
ANR	1101282	ShiftExpression	0xFFU << 24		1099906	0		<<			
ANR	1101283	PrimaryExpression	0xFFU		1099906	0					
ANR	1101284	PrimaryExpression	24		1099906	1					
ANR	1101285	CallExpression	bytestream_get_le32 ( & buf )		1099906	1					
ANR	1101286	Callee	bytestream_get_le32		1099906	0					
ANR	1101287	Identifier	bytestream_get_le32		1099906	0					
ANR	1101288	ArgumentList	& buf		1099906	1					
ANR	1101289	Argument	& buf		1099906	0					
ANR	1101290	UnaryOperationExpression	& buf		1099906	0					
ANR	1101291	UnaryOperator	&		1099906	0					
ANR	1101292	Identifier	buf		1099906	1					
ANR	1101293	ExpressionStatement	buf = buf0 + hsize	459:8:7687:7705	1099906	5	True				
ANR	1101294	AssignmentExpression	buf = buf0 + hsize		1099906	0		=			
ANR	1101295	Identifier	buf		1099906	0					
ANR	1101296	AdditiveExpression	buf0 + hsize		1099906	1		+			
ANR	1101297	Identifier	buf0		1099906	0					
ANR	1101298	Identifier	hsize		1099906	1					
ANR	1101299	IfStatement	if ( comp == BMP_RLE4 || comp == BMP_RLE8 )		1099906	51					
ANR	1101300	Condition	comp == BMP_RLE4 || comp == BMP_RLE8	463:7:7722:7757	1099906	0	True				
ANR	1101301	OrExpression	comp == BMP_RLE4 || comp == BMP_RLE8		1099906	0		||			
ANR	1101302	EqualityExpression	comp == BMP_RLE4		1099906	0		==			
ANR	1101303	Identifier	comp		1099906	0					
ANR	1101304	Identifier	BMP_RLE4		1099906	1					
ANR	1101305	EqualityExpression	comp == BMP_RLE8		1099906	1		==			
ANR	1101306	Identifier	comp		1099906	0					
ANR	1101307	Identifier	BMP_RLE8		1099906	1					
ANR	1101308	CompoundStatement		457:44:7603:7603	1099906	1					
ANR	1101309	IfStatement	if ( height < 0 )		1099906	0					
ANR	1101310	Condition	height < 0	465:11:7773:7782	1099906	0	True				
ANR	1101311	RelationalExpression	height < 0		1099906	0		<			
ANR	1101312	Identifier	height		1099906	0					
ANR	1101313	PrimaryExpression	0		1099906	1					
ANR	1101314	CompoundStatement		459:22:7628:7628	1099906	1					
ANR	1101315	ExpressionStatement	p -> data [ 0 ] += p -> linesize [ 0 ] * ( avctx -> height - 1 )	467:12:7799:7849	1099906	0	True				
ANR	1101316	AssignmentExpression	p -> data [ 0 ] += p -> linesize [ 0 ] * ( avctx -> height - 1 )		1099906	0		+=			
ANR	1101317	ArrayIndexing	p -> data [ 0 ]		1099906	0					
ANR	1101318	PtrMemberAccess	p -> data		1099906	0					
ANR	1101319	Identifier	p		1099906	0					
ANR	1101320	Identifier	data		1099906	1					
ANR	1101321	PrimaryExpression	0		1099906	1					
ANR	1101322	MultiplicativeExpression	p -> linesize [ 0 ] * ( avctx -> height - 1 )		1099906	1		*			
ANR	1101323	ArrayIndexing	p -> linesize [ 0 ]		1099906	0					
ANR	1101324	PtrMemberAccess	p -> linesize		1099906	0					
ANR	1101325	Identifier	p		1099906	0					
ANR	1101326	Identifier	linesize		1099906	1					
ANR	1101327	PrimaryExpression	0		1099906	1					
ANR	1101328	AdditiveExpression	avctx -> height - 1		1099906	1		-			
ANR	1101329	PtrMemberAccess	avctx -> height		1099906	0					
ANR	1101330	Identifier	avctx		1099906	0					
ANR	1101331	Identifier	height		1099906	1					
ANR	1101332	PrimaryExpression	1		1099906	1					
ANR	1101333	ExpressionStatement	p -> linesize [ 0 ] = - p -> linesize [ 0 ]	469:12:7864:7896	1099906	1	True				
ANR	1101334	AssignmentExpression	p -> linesize [ 0 ] = - p -> linesize [ 0 ]		1099906	0		=			
ANR	1101335	ArrayIndexing	p -> linesize [ 0 ]		1099906	0					
ANR	1101336	PtrMemberAccess	p -> linesize		1099906	0					
ANR	1101337	Identifier	p		1099906	0					
ANR	1101338	Identifier	linesize		1099906	1					
ANR	1101339	PrimaryExpression	0		1099906	1					
ANR	1101340	UnaryOperationExpression	- p -> linesize [ 0 ]		1099906	1					
ANR	1101341	UnaryOperator	-		1099906	0					
ANR	1101342	ArrayIndexing	p -> linesize [ 0 ]		1099906	1					
ANR	1101343	PtrMemberAccess	p -> linesize		1099906	0					
ANR	1101344	Identifier	p		1099906	0					
ANR	1101345	Identifier	linesize		1099906	1					
ANR	1101346	PrimaryExpression	0		1099906	1					
ANR	1101347	ExpressionStatement	"bytestream2_init ( & gb , buf , dsize )"	473:8:7918:7951	1099906	1	True				
ANR	1101348	CallExpression	"bytestream2_init ( & gb , buf , dsize )"		1099906	0					
ANR	1101349	Callee	bytestream2_init		1099906	0					
ANR	1101350	Identifier	bytestream2_init		1099906	0					
ANR	1101351	ArgumentList	& gb		1099906	1					
ANR	1101352	Argument	& gb		1099906	0					
ANR	1101353	UnaryOperationExpression	& gb		1099906	0					
ANR	1101354	UnaryOperator	&		1099906	0					
ANR	1101355	Identifier	gb		1099906	1					
ANR	1101356	Argument	buf		1099906	1					
ANR	1101357	Identifier	buf		1099906	0					
ANR	1101358	Argument	dsize		1099906	2					
ANR	1101359	Identifier	dsize		1099906	0					
ANR	1101360	ExpressionStatement	"ff_msrle_decode ( avctx , ( AVPicture * ) p , depth , & gb )"	475:8:7962:8011	1099906	2	True				
ANR	1101361	CallExpression	"ff_msrle_decode ( avctx , ( AVPicture * ) p , depth , & gb )"		1099906	0					
ANR	1101362	Callee	ff_msrle_decode		1099906	0					
ANR	1101363	Identifier	ff_msrle_decode		1099906	0					
ANR	1101364	ArgumentList	avctx		1099906	1					
ANR	1101365	Argument	avctx		1099906	0					
ANR	1101366	Identifier	avctx		1099906	0					
ANR	1101367	Argument	( AVPicture * ) p		1099906	1					
ANR	1101368	CastExpression	( AVPicture * ) p		1099906	0					
ANR	1101369	CastTarget	AVPicture *		1099906	0					
ANR	1101370	Identifier	p		1099906	1					
ANR	1101371	Argument	depth		1099906	2					
ANR	1101372	Identifier	depth		1099906	0					
ANR	1101373	Argument	& gb		1099906	3					
ANR	1101374	UnaryOperationExpression	& gb		1099906	0					
ANR	1101375	UnaryOperator	&		1099906	0					
ANR	1101376	Identifier	gb		1099906	1					
ANR	1101377	IfStatement	if ( height < 0 )		1099906	3					
ANR	1101378	Condition	height < 0	477:11:8025:8034	1099906	0	True				
ANR	1101379	RelationalExpression	height < 0		1099906	0		<			
ANR	1101380	Identifier	height		1099906	0					
ANR	1101381	PrimaryExpression	0		1099906	1					
ANR	1101382	CompoundStatement		471:22:7880:7880	1099906	1					
ANR	1101383	ExpressionStatement	p -> data [ 0 ] += p -> linesize [ 0 ] * ( avctx -> height - 1 )	479:12:8051:8101	1099906	0	True				
ANR	1101384	AssignmentExpression	p -> data [ 0 ] += p -> linesize [ 0 ] * ( avctx -> height - 1 )		1099906	0		+=			
ANR	1101385	ArrayIndexing	p -> data [ 0 ]		1099906	0					
ANR	1101386	PtrMemberAccess	p -> data		1099906	0					
ANR	1101387	Identifier	p		1099906	0					
ANR	1101388	Identifier	data		1099906	1					
ANR	1101389	PrimaryExpression	0		1099906	1					
ANR	1101390	MultiplicativeExpression	p -> linesize [ 0 ] * ( avctx -> height - 1 )		1099906	1		*			
ANR	1101391	ArrayIndexing	p -> linesize [ 0 ]		1099906	0					
ANR	1101392	PtrMemberAccess	p -> linesize		1099906	0					
ANR	1101393	Identifier	p		1099906	0					
ANR	1101394	Identifier	linesize		1099906	1					
ANR	1101395	PrimaryExpression	0		1099906	1					
ANR	1101396	AdditiveExpression	avctx -> height - 1		1099906	1		-			
ANR	1101397	PtrMemberAccess	avctx -> height		1099906	0					
ANR	1101398	Identifier	avctx		1099906	0					
ANR	1101399	Identifier	height		1099906	1					
ANR	1101400	PrimaryExpression	1		1099906	1					
ANR	1101401	ExpressionStatement	p -> linesize [ 0 ] = - p -> linesize [ 0 ]	481:12:8116:8148	1099906	1	True				
ANR	1101402	AssignmentExpression	p -> linesize [ 0 ] = - p -> linesize [ 0 ]		1099906	0		=			
ANR	1101403	ArrayIndexing	p -> linesize [ 0 ]		1099906	0					
ANR	1101404	PtrMemberAccess	p -> linesize		1099906	0					
ANR	1101405	Identifier	p		1099906	0					
ANR	1101406	Identifier	linesize		1099906	1					
ANR	1101407	PrimaryExpression	0		1099906	1					
ANR	1101408	UnaryOperationExpression	- p -> linesize [ 0 ]		1099906	1					
ANR	1101409	UnaryOperator	-		1099906	0					
ANR	1101410	ArrayIndexing	p -> linesize [ 0 ]		1099906	1					
ANR	1101411	PtrMemberAccess	p -> linesize		1099906	0					
ANR	1101412	Identifier	p		1099906	0					
ANR	1101413	Identifier	linesize		1099906	1					
ANR	1101414	PrimaryExpression	0		1099906	1					
ANR	1101415	ElseStatement	else		1099906	0					
ANR	1101416	CompoundStatement		479:9:8015:8015	1099906	0					
ANR	1101417	SwitchStatement	switch ( depth )		1099906	0					
ANR	1101418	Condition	depth	487:15:8189:8193	1099906	0	True				
ANR	1101419	Identifier	depth		1099906	0					
ANR	1101420	CompoundStatement		481:21:8039:8039	1099906	1					
ANR	1101421	Label	case 1 :	489:8:8206:8212	1099906	0	True				
ANR	1101422	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1099906	1					
ANR	1101423	ForInit	i = 0 ;	491:17:8232:8237	1099906	0	True				
ANR	1101424	AssignmentExpression	i = 0		1099906	0		=			
ANR	1101425	Identifier	i		1099906	0					
ANR	1101426	PrimaryExpression	0		1099906	1					
ANR	1101427	Condition	i < avctx -> height	491:24:8239:8255	1099906	1	True				
ANR	1101428	RelationalExpression	i < avctx -> height		1099906	0		<			
ANR	1101429	Identifier	i		1099906	0					
ANR	1101430	PtrMemberAccess	avctx -> height		1099906	1					
ANR	1101431	Identifier	avctx		1099906	0					
ANR	1101432	Identifier	height		1099906	1					
ANR	1101433	PostIncDecOperationExpression	i ++	491:43:8258:8260	1099906	2	True				
ANR	1101434	Identifier	i		1099906	0					
ANR	1101435	IncDec	++		1099906	1					
ANR	1101436	CompoundStatement		487:16:8126:8131	1099906	3					
ANR	1101437	IdentifierDeclStatement	int j ;	493:16:8282:8287	1099906	0	True				
ANR	1101438	IdentifierDecl	j		1099906	0					
ANR	1101439	IdentifierDeclType	int		1099906	0					
ANR	1101440	Identifier	j		1099906	1					
ANR	1101441	ForStatement	for ( j = 0 ; j < n ; j ++ )		1099906	1					
ANR	1101442	ForInit	j = 0 ;	495:21:8311:8316	1099906	0	True				
ANR	1101443	AssignmentExpression	j = 0		1099906	0		=			
ANR	1101444	Identifier	j		1099906	0					
ANR	1101445	PrimaryExpression	0		1099906	1					
ANR	1101446	Condition	j < n	495:28:8318:8322	1099906	1	True				
ANR	1101447	RelationalExpression	j < n		1099906	0		<			
ANR	1101448	Identifier	j		1099906	0					
ANR	1101449	Identifier	n		1099906	1					
ANR	1101450	PostIncDecOperationExpression	j ++	495:35:8325:8327	1099906	2	True				
ANR	1101451	Identifier	j		1099906	0					
ANR	1101452	IncDec	++		1099906	1					
ANR	1101453	CompoundStatement		489:40:8174:8174	1099906	3					
ANR	1101454	ExpressionStatement	ptr [ j * 8 + 0 ] = buf [ j ] >> 7	497:20:8353:8378	1099906	0	True				
ANR	1101455	AssignmentExpression	ptr [ j * 8 + 0 ] = buf [ j ] >> 7		1099906	0		=			
ANR	1101456	ArrayIndexing	ptr [ j * 8 + 0 ]		1099906	0					
ANR	1101457	Identifier	ptr		1099906	0					
ANR	1101458	AdditiveExpression	j * 8 + 0		1099906	1		+			
ANR	1101459	MultiplicativeExpression	j * 8		1099906	0		*			
ANR	1101460	Identifier	j		1099906	0					
ANR	1101461	PrimaryExpression	8		1099906	1					
ANR	1101462	PrimaryExpression	0		1099906	1					
ANR	1101463	ShiftExpression	buf [ j ] >> 7		1099906	1		>>			
ANR	1101464	ArrayIndexing	buf [ j ]		1099906	0					
ANR	1101465	Identifier	buf		1099906	0					
ANR	1101466	Identifier	j		1099906	1					
ANR	1101467	PrimaryExpression	7		1099906	1					
ANR	1101468	ExpressionStatement	ptr [ j * 8 + 1 ] = ( buf [ j ] >> 6 ) & 1	499:20:8401:8431	1099906	1	True				
ANR	1101469	AssignmentExpression	ptr [ j * 8 + 1 ] = ( buf [ j ] >> 6 ) & 1		1099906	0		=			
ANR	1101470	ArrayIndexing	ptr [ j * 8 + 1 ]		1099906	0					
ANR	1101471	Identifier	ptr		1099906	0					
ANR	1101472	AdditiveExpression	j * 8 + 1		1099906	1		+			
ANR	1101473	MultiplicativeExpression	j * 8		1099906	0		*			
ANR	1101474	Identifier	j		1099906	0					
ANR	1101475	PrimaryExpression	8		1099906	1					
ANR	1101476	PrimaryExpression	1		1099906	1					
ANR	1101477	BitAndExpression	( buf [ j ] >> 6 ) & 1		1099906	1		&			
ANR	1101478	ShiftExpression	buf [ j ] >> 6		1099906	0		>>			
ANR	1101479	ArrayIndexing	buf [ j ]		1099906	0					
ANR	1101480	Identifier	buf		1099906	0					
ANR	1101481	Identifier	j		1099906	1					
ANR	1101482	PrimaryExpression	6		1099906	1					
ANR	1101483	PrimaryExpression	1		1099906	1					
ANR	1101484	ExpressionStatement	ptr [ j * 8 + 2 ] = ( buf [ j ] >> 5 ) & 1	501:20:8454:8484	1099906	2	True				
ANR	1101485	AssignmentExpression	ptr [ j * 8 + 2 ] = ( buf [ j ] >> 5 ) & 1		1099906	0		=			
ANR	1101486	ArrayIndexing	ptr [ j * 8 + 2 ]		1099906	0					
ANR	1101487	Identifier	ptr		1099906	0					
ANR	1101488	AdditiveExpression	j * 8 + 2		1099906	1		+			
ANR	1101489	MultiplicativeExpression	j * 8		1099906	0		*			
ANR	1101490	Identifier	j		1099906	0					
ANR	1101491	PrimaryExpression	8		1099906	1					
ANR	1101492	PrimaryExpression	2		1099906	1					
ANR	1101493	BitAndExpression	( buf [ j ] >> 5 ) & 1		1099906	1		&			
ANR	1101494	ShiftExpression	buf [ j ] >> 5		1099906	0		>>			
ANR	1101495	ArrayIndexing	buf [ j ]		1099906	0					
ANR	1101496	Identifier	buf		1099906	0					
ANR	1101497	Identifier	j		1099906	1					
ANR	1101498	PrimaryExpression	5		1099906	1					
ANR	1101499	PrimaryExpression	1		1099906	1					
ANR	1101500	ExpressionStatement	ptr [ j * 8 + 3 ] = ( buf [ j ] >> 4 ) & 1	503:20:8507:8537	1099906	3	True				
ANR	1101501	AssignmentExpression	ptr [ j * 8 + 3 ] = ( buf [ j ] >> 4 ) & 1		1099906	0		=			
ANR	1101502	ArrayIndexing	ptr [ j * 8 + 3 ]		1099906	0					
ANR	1101503	Identifier	ptr		1099906	0					
ANR	1101504	AdditiveExpression	j * 8 + 3		1099906	1		+			
ANR	1101505	MultiplicativeExpression	j * 8		1099906	0		*			
ANR	1101506	Identifier	j		1099906	0					
ANR	1101507	PrimaryExpression	8		1099906	1					
ANR	1101508	PrimaryExpression	3		1099906	1					
ANR	1101509	BitAndExpression	( buf [ j ] >> 4 ) & 1		1099906	1		&			
ANR	1101510	ShiftExpression	buf [ j ] >> 4		1099906	0		>>			
ANR	1101511	ArrayIndexing	buf [ j ]		1099906	0					
ANR	1101512	Identifier	buf		1099906	0					
ANR	1101513	Identifier	j		1099906	1					
ANR	1101514	PrimaryExpression	4		1099906	1					
ANR	1101515	PrimaryExpression	1		1099906	1					
ANR	1101516	ExpressionStatement	ptr [ j * 8 + 4 ] = ( buf [ j ] >> 3 ) & 1	505:20:8560:8590	1099906	4	True				
ANR	1101517	AssignmentExpression	ptr [ j * 8 + 4 ] = ( buf [ j ] >> 3 ) & 1		1099906	0		=			
ANR	1101518	ArrayIndexing	ptr [ j * 8 + 4 ]		1099906	0					
ANR	1101519	Identifier	ptr		1099906	0					
ANR	1101520	AdditiveExpression	j * 8 + 4		1099906	1		+			
ANR	1101521	MultiplicativeExpression	j * 8		1099906	0		*			
ANR	1101522	Identifier	j		1099906	0					
ANR	1101523	PrimaryExpression	8		1099906	1					
ANR	1101524	PrimaryExpression	4		1099906	1					
ANR	1101525	BitAndExpression	( buf [ j ] >> 3 ) & 1		1099906	1		&			
ANR	1101526	ShiftExpression	buf [ j ] >> 3		1099906	0		>>			
ANR	1101527	ArrayIndexing	buf [ j ]		1099906	0					
ANR	1101528	Identifier	buf		1099906	0					
ANR	1101529	Identifier	j		1099906	1					
ANR	1101530	PrimaryExpression	3		1099906	1					
ANR	1101531	PrimaryExpression	1		1099906	1					
ANR	1101532	ExpressionStatement	ptr [ j * 8 + 5 ] = ( buf [ j ] >> 2 ) & 1	507:20:8613:8643	1099906	5	True				
ANR	1101533	AssignmentExpression	ptr [ j * 8 + 5 ] = ( buf [ j ] >> 2 ) & 1		1099906	0		=			
ANR	1101534	ArrayIndexing	ptr [ j * 8 + 5 ]		1099906	0					
ANR	1101535	Identifier	ptr		1099906	0					
ANR	1101536	AdditiveExpression	j * 8 + 5		1099906	1		+			
ANR	1101537	MultiplicativeExpression	j * 8		1099906	0		*			
ANR	1101538	Identifier	j		1099906	0					
ANR	1101539	PrimaryExpression	8		1099906	1					
ANR	1101540	PrimaryExpression	5		1099906	1					
ANR	1101541	BitAndExpression	( buf [ j ] >> 2 ) & 1		1099906	1		&			
ANR	1101542	ShiftExpression	buf [ j ] >> 2		1099906	0		>>			
ANR	1101543	ArrayIndexing	buf [ j ]		1099906	0					
ANR	1101544	Identifier	buf		1099906	0					
ANR	1101545	Identifier	j		1099906	1					
ANR	1101546	PrimaryExpression	2		1099906	1					
ANR	1101547	PrimaryExpression	1		1099906	1					
ANR	1101548	ExpressionStatement	ptr [ j * 8 + 6 ] = ( buf [ j ] >> 1 ) & 1	509:20:8666:8696	1099906	6	True				
ANR	1101549	AssignmentExpression	ptr [ j * 8 + 6 ] = ( buf [ j ] >> 1 ) & 1		1099906	0		=			
ANR	1101550	ArrayIndexing	ptr [ j * 8 + 6 ]		1099906	0					
ANR	1101551	Identifier	ptr		1099906	0					
ANR	1101552	AdditiveExpression	j * 8 + 6		1099906	1		+			
ANR	1101553	MultiplicativeExpression	j * 8		1099906	0		*			
ANR	1101554	Identifier	j		1099906	0					
ANR	1101555	PrimaryExpression	8		1099906	1					
ANR	1101556	PrimaryExpression	6		1099906	1					
ANR	1101557	BitAndExpression	( buf [ j ] >> 1 ) & 1		1099906	1		&			
ANR	1101558	ShiftExpression	buf [ j ] >> 1		1099906	0		>>			
ANR	1101559	ArrayIndexing	buf [ j ]		1099906	0					
ANR	1101560	Identifier	buf		1099906	0					
ANR	1101561	Identifier	j		1099906	1					
ANR	1101562	PrimaryExpression	1		1099906	1					
ANR	1101563	PrimaryExpression	1		1099906	1					
ANR	1101564	ExpressionStatement	ptr [ j * 8 + 7 ] = buf [ j ] & 1	511:20:8719:8749	1099906	7	True				
ANR	1101565	AssignmentExpression	ptr [ j * 8 + 7 ] = buf [ j ] & 1		1099906	0		=			
ANR	1101566	ArrayIndexing	ptr [ j * 8 + 7 ]		1099906	0					
ANR	1101567	Identifier	ptr		1099906	0					
ANR	1101568	AdditiveExpression	j * 8 + 7		1099906	1		+			
ANR	1101569	MultiplicativeExpression	j * 8		1099906	0		*			
ANR	1101570	Identifier	j		1099906	0					
ANR	1101571	PrimaryExpression	8		1099906	1					
ANR	1101572	PrimaryExpression	7		1099906	1					
ANR	1101573	BitAndExpression	buf [ j ] & 1		1099906	1		&			
ANR	1101574	ArrayIndexing	buf [ j ]		1099906	0					
ANR	1101575	Identifier	buf		1099906	0					
ANR	1101576	Identifier	j		1099906	1					
ANR	1101577	PrimaryExpression	1		1099906	1					
ANR	1101578	ExpressionStatement	buf += n	515:16:8787:8795	1099906	2	True				
ANR	1101579	AssignmentExpression	buf += n		1099906	0		+=			
ANR	1101580	Identifier	buf		1099906	0					
ANR	1101581	Identifier	n		1099906	1					
ANR	1101582	ExpressionStatement	ptr += linesize	517:16:8814:8829	1099906	3	True				
ANR	1101583	AssignmentExpression	ptr += linesize		1099906	0		+=			
ANR	1101584	Identifier	ptr		1099906	0					
ANR	1101585	Identifier	linesize		1099906	1					
ANR	1101586	BreakStatement	break ;	521:12:8859:8864	1099906	2	True				
ANR	1101587	Label	case 8 :	523:8:8875:8881	1099906	3	True				
ANR	1101588	Label	case 24 :	525:8:8892:8899	1099906	4	True				
ANR	1101589	Label	case 32 :	527:8:8910:8917	1099906	5	True				
ANR	1101590	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1099906	6					
ANR	1101591	ForInit	i = 0 ;	529:16:8936:8941	1099906	0	True				
ANR	1101592	AssignmentExpression	i = 0		1099906	0		=			
ANR	1101593	Identifier	i		1099906	0					
ANR	1101594	PrimaryExpression	0		1099906	1					
ANR	1101595	Condition	i < avctx -> height	529:23:8943:8959	1099906	1	True				
ANR	1101596	RelationalExpression	i < avctx -> height		1099906	0		<			
ANR	1101597	Identifier	i		1099906	0					
ANR	1101598	PtrMemberAccess	avctx -> height		1099906	1					
ANR	1101599	Identifier	avctx		1099906	0					
ANR	1101600	Identifier	height		1099906	1					
ANR	1101601	PostIncDecOperationExpression	i ++	529:42:8962:8964	1099906	2	True				
ANR	1101602	Identifier	i		1099906	0					
ANR	1101603	IncDec	++		1099906	1					
ANR	1101604	CompoundStatement		523:46:8810:8810	1099906	3					
ANR	1101605	ExpressionStatement	"memcpy ( ptr , buf , n )"	531:16:8985:9004	1099906	0	True				
ANR	1101606	CallExpression	"memcpy ( ptr , buf , n )"		1099906	0					
ANR	1101607	Callee	memcpy		1099906	0					
ANR	1101608	Identifier	memcpy		1099906	0					
ANR	1101609	ArgumentList	ptr		1099906	1					
ANR	1101610	Argument	ptr		1099906	0					
ANR	1101611	Identifier	ptr		1099906	0					
ANR	1101612	Argument	buf		1099906	1					
ANR	1101613	Identifier	buf		1099906	0					
ANR	1101614	Argument	n		1099906	2					
ANR	1101615	Identifier	n		1099906	0					
ANR	1101616	ExpressionStatement	buf += n	533:16:9023:9031	1099906	1	True				
ANR	1101617	AssignmentExpression	buf += n		1099906	0		+=			
ANR	1101618	Identifier	buf		1099906	0					
ANR	1101619	Identifier	n		1099906	1					
ANR	1101620	ExpressionStatement	ptr += linesize	535:16:9050:9065	1099906	2	True				
ANR	1101621	AssignmentExpression	ptr += linesize		1099906	0		+=			
ANR	1101622	Identifier	ptr		1099906	0					
ANR	1101623	Identifier	linesize		1099906	1					
ANR	1101624	BreakStatement	break ;	539:12:9095:9100	1099906	7	True				
ANR	1101625	Label	case 4 :	541:8:9111:9117	1099906	8	True				
ANR	1101626	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1099906	9					
ANR	1101627	ForInit	i = 0 ;	543:16:9136:9141	1099906	0	True				
ANR	1101628	AssignmentExpression	i = 0		1099906	0		=			
ANR	1101629	Identifier	i		1099906	0					
ANR	1101630	PrimaryExpression	0		1099906	1					
ANR	1101631	Condition	i < avctx -> height	543:23:9143:9159	1099906	1	True				
ANR	1101632	RelationalExpression	i < avctx -> height		1099906	0		<			
ANR	1101633	Identifier	i		1099906	0					
ANR	1101634	PtrMemberAccess	avctx -> height		1099906	1					
ANR	1101635	Identifier	avctx		1099906	0					
ANR	1101636	Identifier	height		1099906	1					
ANR	1101637	PostIncDecOperationExpression	i ++	543:42:9162:9164	1099906	2	True				
ANR	1101638	Identifier	i		1099906	0					
ANR	1101639	IncDec	++		1099906	1					
ANR	1101640	CompoundStatement		539:16:9029:9034	1099906	3					
ANR	1101641	IdentifierDeclStatement	int j ;	545:16:9185:9190	1099906	0	True				
ANR	1101642	IdentifierDecl	j		1099906	0					
ANR	1101643	IdentifierDeclType	int		1099906	0					
ANR	1101644	Identifier	j		1099906	1					
ANR	1101645	ForStatement	for ( j = 0 ; j < n ; j ++ )		1099906	1					
ANR	1101646	ForInit	j = 0 ;	547:20:9213:9218	1099906	0	True				
ANR	1101647	AssignmentExpression	j = 0		1099906	0		=			
ANR	1101648	Identifier	j		1099906	0					
ANR	1101649	PrimaryExpression	0		1099906	1					
ANR	1101650	Condition	j < n	547:27:9220:9224	1099906	1	True				
ANR	1101651	RelationalExpression	j < n		1099906	0		<			
ANR	1101652	Identifier	j		1099906	0					
ANR	1101653	Identifier	n		1099906	1					
ANR	1101654	PostIncDecOperationExpression	j ++	547:34:9227:9229	1099906	2	True				
ANR	1101655	Identifier	j		1099906	0					
ANR	1101656	IncDec	++		1099906	1					
ANR	1101657	CompoundStatement		541:38:9075:9075	1099906	3					
ANR	1101658	ExpressionStatement	ptr [ j * 2 + 0 ] = ( buf [ j ] >> 4 ) & 0xF	549:20:9254:9286	1099906	0	True				
ANR	1101659	AssignmentExpression	ptr [ j * 2 + 0 ] = ( buf [ j ] >> 4 ) & 0xF		1099906	0		=			
ANR	1101660	ArrayIndexing	ptr [ j * 2 + 0 ]		1099906	0					
ANR	1101661	Identifier	ptr		1099906	0					
ANR	1101662	AdditiveExpression	j * 2 + 0		1099906	1		+			
ANR	1101663	MultiplicativeExpression	j * 2		1099906	0		*			
ANR	1101664	Identifier	j		1099906	0					
ANR	1101665	PrimaryExpression	2		1099906	1					
ANR	1101666	PrimaryExpression	0		1099906	1					
ANR	1101667	BitAndExpression	( buf [ j ] >> 4 ) & 0xF		1099906	1		&			
ANR	1101668	ShiftExpression	buf [ j ] >> 4		1099906	0		>>			
ANR	1101669	ArrayIndexing	buf [ j ]		1099906	0					
ANR	1101670	Identifier	buf		1099906	0					
ANR	1101671	Identifier	j		1099906	1					
ANR	1101672	PrimaryExpression	4		1099906	1					
ANR	1101673	PrimaryExpression	0xF		1099906	1					
ANR	1101674	ExpressionStatement	ptr [ j * 2 + 1 ] = buf [ j ] & 0xF	551:20:9309:9334	1099906	1	True				
ANR	1101675	AssignmentExpression	ptr [ j * 2 + 1 ] = buf [ j ] & 0xF		1099906	0		=			
ANR	1101676	ArrayIndexing	ptr [ j * 2 + 1 ]		1099906	0					
ANR	1101677	Identifier	ptr		1099906	0					
ANR	1101678	AdditiveExpression	j * 2 + 1		1099906	1		+			
ANR	1101679	MultiplicativeExpression	j * 2		1099906	0		*			
ANR	1101680	Identifier	j		1099906	0					
ANR	1101681	PrimaryExpression	2		1099906	1					
ANR	1101682	PrimaryExpression	1		1099906	1					
ANR	1101683	BitAndExpression	buf [ j ] & 0xF		1099906	1		&			
ANR	1101684	ArrayIndexing	buf [ j ]		1099906	0					
ANR	1101685	Identifier	buf		1099906	0					
ANR	1101686	Identifier	j		1099906	1					
ANR	1101687	PrimaryExpression	0xF		1099906	1					
ANR	1101688	ExpressionStatement	buf += n	555:16:9372:9380	1099906	2	True				
ANR	1101689	AssignmentExpression	buf += n		1099906	0		+=			
ANR	1101690	Identifier	buf		1099906	0					
ANR	1101691	Identifier	n		1099906	1					
ANR	1101692	ExpressionStatement	ptr += linesize	557:16:9399:9414	1099906	3	True				
ANR	1101693	AssignmentExpression	ptr += linesize		1099906	0		+=			
ANR	1101694	Identifier	ptr		1099906	0					
ANR	1101695	Identifier	linesize		1099906	1					
ANR	1101696	BreakStatement	break ;	561:12:9444:9449	1099906	10	True				
ANR	1101697	Label	case 16 :	563:8:9460:9467	1099906	11	True				
ANR	1101698	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		1099906	12					
ANR	1101699	ForInit	i = 0 ;	565:16:9486:9491	1099906	0	True				
ANR	1101700	AssignmentExpression	i = 0		1099906	0		=			
ANR	1101701	Identifier	i		1099906	0					
ANR	1101702	PrimaryExpression	0		1099906	1					
ANR	1101703	Condition	i < avctx -> height	565:23:9493:9509	1099906	1	True				
ANR	1101704	RelationalExpression	i < avctx -> height		1099906	0		<			
ANR	1101705	Identifier	i		1099906	0					
ANR	1101706	PtrMemberAccess	avctx -> height		1099906	1					
ANR	1101707	Identifier	avctx		1099906	0					
ANR	1101708	Identifier	height		1099906	1					
ANR	1101709	PostIncDecOperationExpression	i ++	565:42:9512:9514	1099906	2	True				
ANR	1101710	Identifier	i		1099906	0					
ANR	1101711	IncDec	++		1099906	1					
ANR	1101712	CompoundStatement		563:16:9442:9474	1099906	3					
ANR	1101713	IdentifierDeclStatement	const uint16_t * src = ( const uint16_t * ) buf ;	567:16:9535:9579	1099906	0	True				
ANR	1101714	IdentifierDecl	* src = ( const uint16_t * ) buf		1099906	0					
ANR	1101715	IdentifierDeclType	const uint16_t *		1099906	0					
ANR	1101716	Identifier	src		1099906	1					
ANR	1101717	AssignmentExpression	* src = ( const uint16_t * ) buf		1099906	2		=			
ANR	1101718	Identifier	src		1099906	0					
ANR	1101719	CastExpression	( const uint16_t * ) buf		1099906	1					
ANR	1101720	CastTarget	const uint16_t *		1099906	0					
ANR	1101721	Identifier	buf		1099906	1					
ANR	1101722	IdentifierDeclStatement	uint16_t * dst = ( uint16_t * ) ptr ;	569:16:9598:9630	1099906	1	True				
ANR	1101723	IdentifierDecl	* dst = ( uint16_t * ) ptr		1099906	0					
ANR	1101724	IdentifierDeclType	uint16_t *		1099906	0					
ANR	1101725	Identifier	dst		1099906	1					
ANR	1101726	AssignmentExpression	* dst = ( uint16_t * ) ptr		1099906	2		=			
ANR	1101727	Identifier	dst		1099906	0					
ANR	1101728	CastExpression	( uint16_t * ) ptr		1099906	1					
ANR	1101729	CastTarget	uint16_t *		1099906	0					
ANR	1101730	Identifier	ptr		1099906	1					
ANR	1101731	ForStatement	for ( j = 0 ; j < avctx -> width ; j ++ )		1099906	2					
ANR	1101732	ForInit	j = 0 ;	573:20:9655:9660	1099906	0	True				
ANR	1101733	AssignmentExpression	j = 0		1099906	0		=			
ANR	1101734	Identifier	j		1099906	0					
ANR	1101735	PrimaryExpression	0		1099906	1					
ANR	1101736	Condition	j < avctx -> width	573:27:9662:9677	1099906	1	True				
ANR	1101737	RelationalExpression	j < avctx -> width		1099906	0		<			
ANR	1101738	Identifier	j		1099906	0					
ANR	1101739	PtrMemberAccess	avctx -> width		1099906	1					
ANR	1101740	Identifier	avctx		1099906	0					
ANR	1101741	Identifier	width		1099906	1					
ANR	1101742	PostIncDecOperationExpression	j ++	573:45:9680:9682	1099906	2	True				
ANR	1101743	Identifier	j		1099906	0					
ANR	1101744	IncDec	++		1099906	1					
ANR	1101745	ExpressionStatement	* dst ++ = av_le2ne16 ( * src ++ )	575:20:9706:9733	1099906	3	True				
ANR	1101746	AssignmentExpression	* dst ++ = av_le2ne16 ( * src ++ )		1099906	0		=			
ANR	1101747	UnaryOperationExpression	* dst ++		1099906	0					
ANR	1101748	UnaryOperator	*		1099906	0					
ANR	1101749	PostIncDecOperationExpression	dst ++		1099906	1					
ANR	1101750	Identifier	dst		1099906	0					
ANR	1101751	IncDec	++		1099906	1					
ANR	1101752	CallExpression	av_le2ne16 ( * src ++ )		1099906	1					
ANR	1101753	Callee	av_le2ne16		1099906	0					
ANR	1101754	Identifier	av_le2ne16		1099906	0					
ANR	1101755	ArgumentList	* src ++		1099906	1					
ANR	1101756	Argument	* src ++		1099906	0					
ANR	1101757	UnaryOperationExpression	* src ++		1099906	0					
ANR	1101758	UnaryOperator	*		1099906	0					
ANR	1101759	PostIncDecOperationExpression	src ++		1099906	1					
ANR	1101760	Identifier	src		1099906	0					
ANR	1101761	IncDec	++		1099906	1					
ANR	1101762	ExpressionStatement	buf += n	579:16:9754:9762	1099906	3	True				
ANR	1101763	AssignmentExpression	buf += n		1099906	0		+=			
ANR	1101764	Identifier	buf		1099906	0					
ANR	1101765	Identifier	n		1099906	1					
ANR	1101766	ExpressionStatement	ptr += linesize	581:16:9781:9796	1099906	4	True				
ANR	1101767	AssignmentExpression	ptr += linesize		1099906	0		+=			
ANR	1101768	Identifier	ptr		1099906	0					
ANR	1101769	Identifier	linesize		1099906	1					
ANR	1101770	BreakStatement	break ;	585:12:9826:9831	1099906	13	True				
ANR	1101771	Label	default :	587:8:9842:9849	1099906	14	True				
ANR	1101772	Identifier	default		1099906	0					
ANR	1101773	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""BMP decoder is broken\\n"" )"	589:12:9864:9918	1099906	15	True				
ANR	1101774	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""BMP decoder is broken\\n"" )"		1099906	0					
ANR	1101775	Callee	av_log		1099906	0					
ANR	1101776	Identifier	av_log		1099906	0					
ANR	1101777	ArgumentList	avctx		1099906	1					
ANR	1101778	Argument	avctx		1099906	0					
ANR	1101779	Identifier	avctx		1099906	0					
ANR	1101780	Argument	AV_LOG_ERROR		1099906	1					
ANR	1101781	Identifier	AV_LOG_ERROR		1099906	0					
ANR	1101782	Argument	"""BMP decoder is broken\\n"""		1099906	2					
ANR	1101783	PrimaryExpression	"""BMP decoder is broken\\n"""		1099906	0					
ANR	1101784	ReturnStatement	return - 1 ;	591:12:9933:9942	1099906	16	True				
ANR	1101785	UnaryOperationExpression	- 1		1099906	0					
ANR	1101786	UnaryOperator	-		1099906	0					
ANR	1101787	PrimaryExpression	1		1099906	1					
ANR	1101788	ExpressionStatement	* picture = s -> picture	599:4:9969:9990	1099906	52	True				
ANR	1101789	AssignmentExpression	* picture = s -> picture		1099906	0		=			
ANR	1101790	UnaryOperationExpression	* picture		1099906	0					
ANR	1101791	UnaryOperator	*		1099906	0					
ANR	1101792	Identifier	picture		1099906	1					
ANR	1101793	PtrMemberAccess	s -> picture		1099906	1					
ANR	1101794	Identifier	s		1099906	0					
ANR	1101795	Identifier	picture		1099906	1					
ANR	1101796	ExpressionStatement	* data_size = sizeof ( AVPicture )	601:4:9997:10027	1099906	53	True				
ANR	1101797	AssignmentExpression	* data_size = sizeof ( AVPicture )		1099906	0		=			
ANR	1101798	UnaryOperationExpression	* data_size		1099906	0					
ANR	1101799	UnaryOperator	*		1099906	0					
ANR	1101800	Identifier	data_size		1099906	1					
ANR	1101801	SizeofExpression	sizeof ( AVPicture )		1099906	1					
ANR	1101802	Sizeof	sizeof		1099906	0					
ANR	1101803	SizeofOperand	AVPicture		1099906	1					
ANR	1101804	ReturnStatement	return buf_size ;	605:4:10036:10051	1099906	54	True				
ANR	1101805	Identifier	buf_size		1099906	0					
ANR	1101806	ReturnType	static int		1099906	1					
ANR	1101807	Identifier	bmp_decode_frame		1099906	2					
ANR	1101808	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		1099906	3					
ANR	1101809	Parameter	AVCodecContext * avctx	1:28:28:48	1099906	0	True				
ANR	1101810	ParameterType	AVCodecContext *		1099906	0					
ANR	1101811	Identifier	avctx		1099906	1					
ANR	1101812	Parameter	void * data	3:28:80:89	1099906	1	True				
ANR	1101813	ParameterType	void *		1099906	0					
ANR	1101814	Identifier	data		1099906	1					
ANR	1101815	Parameter	int * data_size	3:40:92:105	1099906	2	True				
ANR	1101816	ParameterType	int *		1099906	0					
ANR	1101817	Identifier	data_size		1099906	1					
ANR	1101818	Parameter	AVPacket * avpkt	5:28:137:151	1099906	3	True				
ANR	1101819	ParameterType	AVPacket *		1099906	0					
ANR	1101820	Identifier	avpkt		1099906	1					
ANR	1101821	CFGEntryNode	ENTRY		1099906		True				
ANR	1101822	CFGExitNode	EXIT		1099906		True				
ANR	1101823	Symbol	data		1099906						
ANR	1101824	Symbol	& gb		1099906						
ANR	1101825	Symbol	hsize		1099906						
ANR	1101826	Symbol	AV_PIX_FMT_PAL8		1099906						
ANR	1101827	Symbol	BMP_RGB		1099906						
ANR	1101828	Symbol	AV_PIX_FMT_BGR0		1099906						
ANR	1101829	Symbol	avpkt		1099906						
ANR	1101830	Symbol	* data_size		1099906						
ANR	1101831	Symbol	AV_PIX_FMT_RGBA		1099906						
ANR	1101832	Symbol	linesize		1099906						
ANR	1101833	Symbol	* p -> data		1099906						
ANR	1101834	Symbol	AV_PIX_FMT_RGB565		1099906						
ANR	1101835	Symbol	AV_PIX_FMT_RGB444		1099906						
ANR	1101836	Symbol	* ptr		1099906						
ANR	1101837	Symbol	height		1099906						
ANR	1101838	Symbol	data_size		1099906						
ANR	1101839	Symbol	comp		1099906						
ANR	1101840	Symbol	* buf		1099906						
ANR	1101841	Symbol	buf_size		1099906						
ANR	1101842	Symbol	AV_PIX_FMT_0BGR		1099906						
ANR	1101843	Symbol	AV_PIX_FMT_0RGB		1099906						
ANR	1101844	Symbol	* * p -> data		1099906						
ANR	1101845	Symbol	p -> linesize		1099906						
ANR	1101846	Symbol	bytestream_get_le16		1099906						
ANR	1101847	Symbol	* * * p		1099906						
ANR	1101848	Symbol	* avctx		1099906						
ANR	1101849	Symbol	buf0		1099906						
ANR	1101850	Symbol	fsize		1099906						
ANR	1101851	Symbol	AV_PIX_FMT_GRAY8		1099906						
ANR	1101852	Symbol	av_le2ne16		1099906						
ANR	1101853	Symbol	* dst ++		1099906						
ANR	1101854	Symbol	* rgb		1099906						
ANR	1101855	Symbol	* src ++		1099906						
ANR	1101856	Symbol	avpkt -> data		1099906						
ANR	1101857	Symbol	avctx -> pix_fmt		1099906						
ANR	1101858	Symbol	ihsize		1099906						
ANR	1101859	Symbol	p -> reference		1099906						
ANR	1101860	Symbol	dst		1099906						
ANR	1101861	Symbol	p -> data		1099906						
ANR	1101862	Symbol	avctx -> width		1099906						
ANR	1101863	Symbol	s -> picture		1099906						
ANR	1101864	Symbol	bytestream_get_le24		1099906						
ANR	1101865	Symbol	rgb		1099906						
ANR	1101866	Symbol	colors		1099906						
ANR	1101867	Symbol	AV_PIX_FMT_ABGR		1099906						
ANR	1101868	Symbol	AV_PIX_FMT_ARGB		1099906						
ANR	1101869	Symbol	BMP_RLE4		1099906						
ANR	1101870	Symbol	dsize		1099906						
ANR	1101871	Symbol	avctx -> height		1099906						
ANR	1101872	Symbol	BMP_RLE8		1099906						
ANR	1101873	Symbol	alpha		1099906						
ANR	1101874	Symbol	avpkt -> size		1099906						
ANR	1101875	Symbol	AV_PICTURE_TYPE_I		1099906						
ANR	1101876	Symbol	gb		1099906						
ANR	1101877	Symbol	* * p		1099906						
ANR	1101878	Symbol	avctx		1099906						
ANR	1101879	Symbol	p -> pict_type		1099906						
ANR	1101880	Symbol	& buf		1099906						
ANR	1101881	Symbol	* avpkt		1099906						
ANR	1101882	Symbol	BMP_BITFIELDS		1099906						
ANR	1101883	Symbol	AV_LOG_ERROR		1099906						
ANR	1101884	Symbol	avctx -> get_buffer		1099906						
ANR	1101885	Symbol	bytestream_get_byte		1099906						
ANR	1101886	Symbol	src		1099906						
ANR	1101887	Symbol	AV_PIX_FMT_BGRA		1099906						
ANR	1101888	Symbol	p -> key_frame		1099906						
ANR	1101889	Symbol	i		1099906						
ANR	1101890	Symbol	bytestream_get_le32		1099906						
ANR	1101891	Symbol	j		1099906						
ANR	1101892	Symbol	AV_PIX_FMT_NONE		1099906						
ANR	1101893	Symbol	avctx -> priv_data		1099906						
ANR	1101894	Symbol	* p -> linesize		1099906						
ANR	1101895	Symbol	picture		1099906						
ANR	1101896	Symbol	n		1099906						
ANR	1101897	Symbol	ptr		1099906						
ANR	1101898	Symbol	p		1099906						
ANR	1101899	Symbol	EINVAL		1099906						
ANR	1101900	Symbol	buf		1099906						
ANR	1101901	Symbol	AV_PIX_FMT_BGR24		1099906						
ANR	1101902	Symbol	s		1099906						
ANR	1101903	Symbol	depth		1099906						
ANR	1101904	Symbol	* i		1099906						
ANR	1101905	Symbol	& s -> picture		1099906						
ANR	1101906	Symbol	t		1099906						
ANR	1101907	Symbol	* j		1099906						
ANR	1101908	Symbol	~3		1099906						
ANR	1101909	Symbol	width		1099906						
ANR	1101910	Symbol	* picture		1099906						
ANR	1101911	Symbol	* p		1099906						
ANR	1101912	Symbol	AVERROR		1099906						
ANR	1101913	Symbol	* s		1099906						
ANR	1101914	Symbol	AV_PIX_FMT_RGB0		1099906						
ANR	1101915	Symbol	AV_PIX_FMT_RGB555		1099906						
