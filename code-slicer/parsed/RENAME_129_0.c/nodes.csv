command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	166609	File	/home/p4ultr4n/workplace/ReVeal/raw_code/RENAME_129_0.c								
ANR	166610	Function	rgb16to15	1:0:0:1685							
ANR	166611	FunctionDef	"rgb16to15 (const uint8_t * src , uint8_t * dst , long src_size)"		166610	0					
ANR	166612	CompoundStatement		3:0:87:1685	166610	0					
ANR	166613	Statement	register	5:4:94:101	166610	0	True				
ANR	166614	IdentifierDeclStatement	const uint8_t * s = src ;	5:13:103:123	166610	1	True				
ANR	166615	IdentifierDecl	* s = src		166610	0					
ANR	166616	IdentifierDeclType	const uint8_t *		166610	0					
ANR	166617	Identifier	s		166610	1					
ANR	166618	AssignmentExpression	* s = src		166610	2		=			
ANR	166619	Identifier	src		166610	0					
ANR	166620	Identifier	src		166610	1					
ANR	166621	Statement	register	7:4:130:137	166610	2	True				
ANR	166622	IdentifierDeclStatement	uint8_t * d = dst ;	7:13:139:153	166610	3	True				
ANR	166623	IdentifierDecl	* d = dst		166610	0					
ANR	166624	IdentifierDeclType	uint8_t *		166610	0					
ANR	166625	Identifier	d		166610	1					
ANR	166626	AssignmentExpression	* d = dst		166610	2		=			
ANR	166627	Identifier	dst		166610	0					
ANR	166628	Identifier	dst		166610	1					
ANR	166629	Statement	register	9:4:160:167	166610	4	True				
ANR	166630	IdentifierDeclStatement	const uint8_t * end ;	9:13:169:187	166610	5	True				
ANR	166631	IdentifierDecl	* end		166610	0					
ANR	166632	IdentifierDeclType	const uint8_t *		166610	0					
ANR	166633	Identifier	end		166610	1					
ANR	166634	IdentifierDeclStatement	const uint8_t * mm_end ;	11:4:194:215	166610	6	True				
ANR	166635	IdentifierDecl	* mm_end		166610	0					
ANR	166636	IdentifierDeclType	const uint8_t *		166610	0					
ANR	166637	Identifier	mm_end		166610	1					
ANR	166638	ExpressionStatement	end = s + src_size	13:4:222:240	166610	7	True				
ANR	166639	AssignmentExpression	end = s + src_size		166610	0		=			
ANR	166640	Identifier	end		166610	0					
ANR	166641	AdditiveExpression	s + src_size		166610	1		+			
ANR	166642	Identifier	s		166610	0					
ANR	166643	Identifier	src_size		166610	1					
ANR	166644	Statement	__asm__	17:4:273:279	166610	8	True				
ANR	166645	Statement	volatile	17:12:281:288	166610	9	True				
ANR	166646	Statement	(	17:20:289:289	166610	10	True				
ANR	166647	Statement	PREFETCH	17:21:290:297	166610	11	True				
ANR	166648	Statement	"""    %0"""	17:29:298:305	166610	12	True				
ANR	166649	Statement	::	17:37:306:307	166610	13	True				
ANR	166650	Statement	"""m"""	17:39:308:310	166610	14	True				
ANR	166651	Statement	(	17:42:311:311	166610	15	True				
ANR	166652	Statement	*	17:43:312:312	166610	16	True				
ANR	166653	Statement	s	17:44:313:313	166610	17	True				
ANR	166654	Statement	)	17:45:314:314	166610	18	True				
ANR	166655	Statement	)	17:46:315:315	166610	19	True				
ANR	166656	ExpressionStatement		17:47:316:316	166610	20	True				
ANR	166657	Statement	__asm__	19:4:323:329	166610	21	True				
ANR	166658	Statement	volatile	19:12:331:338	166610	22	True				
ANR	166659	Statement	(	19:20:339:339	166610	23	True				
ANR	166660	Statement	"""movq        %0, %%mm7"""	19:21:340:362	166610	24	True				
ANR	166661	Statement	::	19:44:363:364	166610	25	True				
ANR	166662	Statement	"""m"""	19:46:365:367	166610	26	True				
ANR	166663	Statement	(	19:49:368:368	166610	27	True				
ANR	166664	Statement	mask15rg	19:50:369:376	166610	28	True				
ANR	166665	Statement	)	19:58:377:377	166610	29	True				
ANR	166666	Statement	)	19:59:378:378	166610	30	True				
ANR	166667	ExpressionStatement		19:60:379:379	166610	31	True				
ANR	166668	Statement	__asm__	21:4:386:392	166610	32	True				
ANR	166669	Statement	volatile	21:12:394:401	166610	33	True				
ANR	166670	Statement	(	21:20:402:402	166610	34	True				
ANR	166671	Statement	"""movq        %0, %%mm6"""	21:21:403:425	166610	35	True				
ANR	166672	Statement	::	21:44:426:427	166610	36	True				
ANR	166673	Statement	"""m"""	21:46:428:430	166610	37	True				
ANR	166674	Statement	(	21:49:431:431	166610	38	True				
ANR	166675	Statement	mask15b	21:50:432:438	166610	39	True				
ANR	166676	Statement	)	21:57:439:439	166610	40	True				
ANR	166677	Statement	)	21:58:440:440	166610	41	True				
ANR	166678	ExpressionStatement		21:59:441:441	166610	42	True				
ANR	166679	ExpressionStatement	mm_end = end - 15	23:4:448:465	166610	43	True				
ANR	166680	AssignmentExpression	mm_end = end - 15		166610	0		=			
ANR	166681	Identifier	mm_end		166610	0					
ANR	166682	AdditiveExpression	end - 15		166610	1		-			
ANR	166683	Identifier	end		166610	0					
ANR	166684	PrimaryExpression	15		166610	1					
ANR	166685	WhileStatement	while ( s < mm_end )		166610	44					
ANR	166686	Condition	s < mm_end	25:11:479:486	166610	0	True				
ANR	166687	RelationalExpression	s < mm_end		166610	0		<			
ANR	166688	Identifier	s		166610	0					
ANR	166689	Identifier	mm_end		166610	1					
ANR	166690	CompoundStatement		23:21:401:401	166610	1					
ANR	166691	Statement	__asm__	27:8:500:506	166610	0	True				
ANR	166692	Statement	volatile	27:16:508:515	166610	1	True				
ANR	166693	Statement	(	27:24:516:516	166610	2	True				
ANR	166694	Statement	PREFETCH	29:12:531:538	166610	3	True				
ANR	166695	Statement	"""  32%1         \\n\\t"""	29:20:539:559	166610	4	True				
ANR	166696	Statement	"""movq        %1, %%mm0  \\n\\t"""	31:12:574:602	166610	5	True				
ANR	166697	Statement	"""movq       8%1, %%mm2  \\n\\t"""	33:12:617:645	166610	6	True				
ANR	166698	Statement	"""movq     %%mm0, %%mm1  \\n\\t"""	35:12:660:688	166610	7	True				
ANR	166699	Statement	"""movq     %%mm2, %%mm3  \\n\\t"""	37:12:703:731	166610	8	True				
ANR	166700	Statement	"""psrlq       $1, %%mm0  \\n\\t"""	39:12:746:774	166610	9	True				
ANR	166701	Statement	"""psrlq       $1, %%mm2  \\n\\t"""	41:12:789:817	166610	10	True				
ANR	166702	Statement	"""pand     %%mm7, %%mm0  \\n\\t"""	43:12:832:860	166610	11	True				
ANR	166703	Statement	"""pand     %%mm7, %%mm2  \\n\\t"""	45:12:875:903	166610	12	True				
ANR	166704	Statement	"""pand     %%mm6, %%mm1  \\n\\t"""	47:12:918:946	166610	13	True				
ANR	166705	Statement	"""pand     %%mm6, %%mm3  \\n\\t"""	49:12:961:989	166610	14	True				
ANR	166706	Statement	"""por      %%mm1, %%mm0  \\n\\t"""	51:12:1004:1032	166610	15	True				
ANR	166707	Statement	"""por      %%mm3, %%mm2  \\n\\t"""	53:12:1047:1075	166610	16	True				
ANR	166708	Statement	MOVNTQ	55:12:1090:1095	166610	17	True				
ANR	166709	Statement	"""   %%mm0,  %0    \\n\\t"""	55:18:1096:1118	166610	18	True				
ANR	166710	Statement	MOVNTQ	57:12:1133:1138	166610	19	True				
ANR	166711	Statement	"""   %%mm2, 8%0"""	57:18:1139:1153	166610	20	True				
ANR	166712	Statement	:	59:12:1168:1168	166610	21	True				
ANR	166713	Statement	"""=m"""	59:13:1169:1172	166610	22	True				
ANR	166714	Statement	(	59:17:1173:1173	166610	23	True				
ANR	166715	Statement	*	59:18:1174:1174	166610	24	True				
ANR	166716	Statement	d	59:19:1175:1175	166610	25	True				
ANR	166717	Statement	)	59:20:1176:1176	166610	26	True				
ANR	166718	Statement	:	61:12:1191:1191	166610	27	True				
ANR	166719	Statement	"""m"""	61:13:1192:1194	166610	28	True				
ANR	166720	Statement	(	61:16:1195:1195	166610	29	True				
ANR	166721	Statement	*	61:17:1196:1196	166610	30	True				
ANR	166722	Statement	s	61:18:1197:1197	166610	31	True				
ANR	166723	Statement	)	61:19:1198:1198	166610	32	True				
ANR	166724	Statement	)	63:8:1209:1209	166610	33	True				
ANR	166725	ExpressionStatement		63:9:1210:1210	166610	34	True				
ANR	166726	ExpressionStatement	d += 16	65:8:1221:1226	166610	35	True				
ANR	166727	AssignmentExpression	d += 16		166610	0		+=			
ANR	166728	Identifier	d		166610	0					
ANR	166729	PrimaryExpression	16		166610	1					
ANR	166730	ExpressionStatement	s += 16	67:8:1237:1242	166610	36	True				
ANR	166731	AssignmentExpression	s += 16		166610	0		+=			
ANR	166732	Identifier	s		166610	0					
ANR	166733	PrimaryExpression	16		166610	1					
ANR	166734	Statement	__asm__	71:4:1256:1262	166610	45	True				
ANR	166735	Statement	volatile	71:12:1264:1271	166610	46	True				
ANR	166736	Statement	(	71:20:1272:1272	166610	47	True				
ANR	166737	Statement	SFENCE	71:21:1273:1278	166610	48	True				
ANR	166738	Statement	::	71:27:1279:1280	166610	49	True				
ANR	166739	Statement	:	71:29:1281:1281	166610	50	True				
ANR	166740	Statement	"""memory"""	71:30:1282:1289	166610	51	True				
ANR	166741	Statement	)	71:38:1290:1290	166610	52	True				
ANR	166742	ExpressionStatement		71:39:1291:1291	166610	53	True				
ANR	166743	Statement	__asm__	73:4:1298:1304	166610	54	True				
ANR	166744	Statement	volatile	73:12:1306:1313	166610	55	True				
ANR	166745	Statement	(	73:20:1314:1314	166610	56	True				
ANR	166746	Statement	EMMS	73:21:1315:1318	166610	57	True				
ANR	166747	Statement	::	73:25:1319:1320	166610	58	True				
ANR	166748	Statement	:	73:27:1321:1321	166610	59	True				
ANR	166749	Statement	"""memory"""	73:28:1322:1329	166610	60	True				
ANR	166750	Statement	)	73:36:1330:1330	166610	61	True				
ANR	166751	ExpressionStatement		73:37:1331:1331	166610	62	True				
ANR	166752	ExpressionStatement	mm_end = end - 3	77:4:1346:1362	166610	63	True				
ANR	166753	AssignmentExpression	mm_end = end - 3		166610	0		=			
ANR	166754	Identifier	mm_end		166610	0					
ANR	166755	AdditiveExpression	end - 3		166610	1		-			
ANR	166756	Identifier	end		166610	0					
ANR	166757	PrimaryExpression	3		166610	1					
ANR	166758	WhileStatement	while ( s < mm_end )		166610	64					
ANR	166759	Condition	s < mm_end	79:11:1376:1385	166610	0	True				
ANR	166760	RelationalExpression	s < mm_end		166610	0		<			
ANR	166761	Identifier	s		166610	0					
ANR	166762	Identifier	mm_end		166610	1					
ANR	166763	CompoundStatement		79:17:1320:1353	166610	1					
ANR	166764	Statement	register	81:8:1399:1406	166610	0	True				
ANR	166765	IdentifierDeclStatement	uint32_t x = * ( ( const uint32_t * ) s ) ;	81:17:1408:1441	166610	1	True				
ANR	166766	IdentifierDecl	x = * ( ( const uint32_t * ) s )		166610	0					
ANR	166767	IdentifierDeclType	uint32_t		166610	0					
ANR	166768	Identifier	x		166610	1					
ANR	166769	AssignmentExpression	x = * ( ( const uint32_t * ) s )		166610	2		=			
ANR	166770	Identifier	x		166610	0					
ANR	166771	UnaryOperationExpression	* ( ( const uint32_t * ) s )		166610	1					
ANR	166772	UnaryOperator	*		166610	0					
ANR	166773	CastExpression	( const uint32_t * ) s		166610	1					
ANR	166774	CastTarget	const uint32_t *		166610	0					
ANR	166775	Identifier	s		166610	1					
ANR	166776	ExpressionStatement	* ( ( uint32_t * ) d ) = ( ( x >> 1 ) & 0x7FE07FE0 ) | ( x & 0x001F001F )	83:8:1452:1507	166610	2	True				
ANR	166777	AssignmentExpression	* ( ( uint32_t * ) d ) = ( ( x >> 1 ) & 0x7FE07FE0 ) | ( x & 0x001F001F )		166610	0		=			
ANR	166778	UnaryOperationExpression	* ( ( uint32_t * ) d )		166610	0					
ANR	166779	UnaryOperator	*		166610	0					
ANR	166780	CastExpression	( uint32_t * ) d		166610	1					
ANR	166781	CastTarget	uint32_t *		166610	0					
ANR	166782	Identifier	d		166610	1					
ANR	166783	InclusiveOrExpression	( ( x >> 1 ) & 0x7FE07FE0 ) | ( x & 0x001F001F )		166610	1		|			
ANR	166784	BitAndExpression	( x >> 1 ) & 0x7FE07FE0		166610	0		&			
ANR	166785	ShiftExpression	x >> 1		166610	0		>>			
ANR	166786	Identifier	x		166610	0					
ANR	166787	PrimaryExpression	1		166610	1					
ANR	166788	PrimaryExpression	0x7FE07FE0		166610	1					
ANR	166789	BitAndExpression	x & 0x001F001F		166610	1		&			
ANR	166790	Identifier	x		166610	0					
ANR	166791	PrimaryExpression	0x001F001F		166610	1					
ANR	166792	ExpressionStatement	s += 4	85:8:1518:1522	166610	3	True				
ANR	166793	AssignmentExpression	s += 4		166610	0		+=			
ANR	166794	Identifier	s		166610	0					
ANR	166795	PrimaryExpression	4		166610	1					
ANR	166796	ExpressionStatement	d += 4	87:8:1533:1537	166610	4	True				
ANR	166797	AssignmentExpression	d += 4		166610	0		+=			
ANR	166798	Identifier	d		166610	0					
ANR	166799	PrimaryExpression	4		166610	1					
ANR	166800	IfStatement	if ( s < end )		166610	65					
ANR	166801	Condition	s < end	91:8:1555:1561	166610	0	True				
ANR	166802	RelationalExpression	s < end		166610	0		<			
ANR	166803	Identifier	s		166610	0					
ANR	166804	Identifier	end		166610	1					
ANR	166805	CompoundStatement		91:17:1496:1529	166610	1					
ANR	166806	Statement	register	93:8:1575:1582	166610	0	True				
ANR	166807	IdentifierDeclStatement	uint16_t x = * ( ( const uint16_t * ) s ) ;	93:17:1584:1617	166610	1	True				
ANR	166808	IdentifierDecl	x = * ( ( const uint16_t * ) s )		166610	0					
ANR	166809	IdentifierDeclType	uint16_t		166610	0					
ANR	166810	Identifier	x		166610	1					
ANR	166811	AssignmentExpression	x = * ( ( const uint16_t * ) s )		166610	2		=			
ANR	166812	Identifier	x		166610	0					
ANR	166813	UnaryOperationExpression	* ( ( const uint16_t * ) s )		166610	1					
ANR	166814	UnaryOperator	*		166610	0					
ANR	166815	CastExpression	( const uint16_t * ) s		166610	1					
ANR	166816	CastTarget	const uint16_t *		166610	0					
ANR	166817	Identifier	s		166610	1					
ANR	166818	ExpressionStatement	* ( ( uint16_t * ) d ) = ( ( x >> 1 ) & 0x7FE0 ) | ( x & 0x001F )	95:8:1628:1675	166610	2	True				
ANR	166819	AssignmentExpression	* ( ( uint16_t * ) d ) = ( ( x >> 1 ) & 0x7FE0 ) | ( x & 0x001F )		166610	0		=			
ANR	166820	UnaryOperationExpression	* ( ( uint16_t * ) d )		166610	0					
ANR	166821	UnaryOperator	*		166610	0					
ANR	166822	CastExpression	( uint16_t * ) d		166610	1					
ANR	166823	CastTarget	uint16_t *		166610	0					
ANR	166824	Identifier	d		166610	1					
ANR	166825	InclusiveOrExpression	( ( x >> 1 ) & 0x7FE0 ) | ( x & 0x001F )		166610	1		|			
ANR	166826	BitAndExpression	( x >> 1 ) & 0x7FE0		166610	0		&			
ANR	166827	ShiftExpression	x >> 1		166610	0		>>			
ANR	166828	Identifier	x		166610	0					
ANR	166829	PrimaryExpression	1		166610	1					
ANR	166830	PrimaryExpression	0x7FE0		166610	1					
ANR	166831	BitAndExpression	x & 0x001F		166610	1		&			
ANR	166832	Identifier	x		166610	0					
ANR	166833	PrimaryExpression	0x001F		166610	1					
ANR	166834	ReturnType	static inline void RENAME		166610	1					
ANR	166835	Identifier	( rgb16to15 )		166610	2					
ANR	166836	Identifier	rgb16to15		166610	3					
ANR	166837	ParameterList	"const uint8_t * src , uint8_t * dst , long src_size"		166610	4					
ANR	166838	Parameter	const uint8_t * src	1:37:37:54	166610	0	True				
ANR	166839	ParameterType	const uint8_t *		166610	0					
ANR	166840	Identifier	src		166610	1					
ANR	166841	Parameter	uint8_t * dst	1:57:57:68	166610	1	True				
ANR	166842	ParameterType	uint8_t *		166610	0					
ANR	166843	Identifier	dst		166610	1					
ANR	166844	Parameter	long src_size	1:71:71:83	166610	2	True				
ANR	166845	ParameterType	long		166610	0					
ANR	166846	Identifier	src_size		166610	1					
ANR	166847	CFGEntryNode	ENTRY		166610		True				
ANR	166848	CFGExitNode	EXIT		166610		True				
ANR	166849	Symbol	* ( ( uint16_t * ) d )		166610						
ANR	166850	Symbol	dst		166610						
ANR	166851	Symbol	d		166610						
ANR	166852	Symbol	src		166610						
ANR	166853	Symbol	* d		166610						
ANR	166854	Symbol	mm_end		166610						
ANR	166855	Symbol	* ( ( const uint32_t * ) s )		166610						
ANR	166856	Symbol	src_size		166610						
ANR	166857	Symbol	s		166610						
ANR	166858	Symbol	x		166610						
ANR	166859	Symbol	* ( ( const uint16_t * ) s )		166610						
ANR	166860	Symbol	end		166610						
ANR	166861	Symbol	* s		166610						
ANR	166862	Symbol	* ( ( uint32_t * ) d )		166610						
