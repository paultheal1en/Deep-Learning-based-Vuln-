command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7005866	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qemu_pci_hot_add_nic_1.c								
ANR	7005867	Function	qemu_pci_hot_add_nic	1:0:0:1364							
ANR	7005868	FunctionDef	"qemu_pci_hot_add_nic (Monitor * mon , const char * devaddr , const char * opts_str)"		7005867	0					
ANR	7005869	CompoundStatement		7:0:177:1364	7005867	0					
ANR	7005870	IdentifierDeclStatement	Error * local_err = NULL ;	9:4:184:207	7005867	0	True				
ANR	7005871	IdentifierDecl	* local_err = NULL		7005867	0					
ANR	7005872	IdentifierDeclType	Error *		7005867	0					
ANR	7005873	Identifier	local_err		7005867	1					
ANR	7005874	AssignmentExpression	* local_err = NULL		7005867	2		=			
ANR	7005875	Identifier	NULL		7005867	0					
ANR	7005876	Identifier	NULL		7005867	1					
ANR	7005877	IdentifierDeclStatement	QemuOpts * opts ;	11:4:214:228	7005867	1	True				
ANR	7005878	IdentifierDecl	* opts		7005867	0					
ANR	7005879	IdentifierDeclType	QemuOpts *		7005867	0					
ANR	7005880	Identifier	opts		7005867	1					
ANR	7005881	IdentifierDeclStatement	PCIBus * root = pci_find_primary_bus ( ) ;	13:4:235:272	7005867	2	True				
ANR	7005882	IdentifierDecl	* root = pci_find_primary_bus ( )		7005867	0					
ANR	7005883	IdentifierDeclType	PCIBus *		7005867	0					
ANR	7005884	Identifier	root		7005867	1					
ANR	7005885	AssignmentExpression	* root = pci_find_primary_bus ( )		7005867	2		=			
ANR	7005886	Identifier	root		7005867	0					
ANR	7005887	CallExpression	pci_find_primary_bus ( )		7005867	1					
ANR	7005888	Callee	pci_find_primary_bus		7005867	0					
ANR	7005889	Identifier	pci_find_primary_bus		7005867	0					
ANR	7005890	ArgumentList			7005867	1					
ANR	7005891	IdentifierDeclStatement	PCIBus * bus ;	15:4:279:290	7005867	3	True				
ANR	7005892	IdentifierDecl	* bus		7005867	0					
ANR	7005893	IdentifierDeclType	PCIBus *		7005867	0					
ANR	7005894	Identifier	bus		7005867	1					
ANR	7005895	IdentifierDeclStatement	"int ret , devfn ;"	17:4:297:311	7005867	4	True				
ANR	7005896	IdentifierDecl	ret		7005867	0					
ANR	7005897	IdentifierDeclType	int		7005867	0					
ANR	7005898	Identifier	ret		7005867	1					
ANR	7005899	IdentifierDecl	devfn		7005867	1					
ANR	7005900	IdentifierDeclType	int		7005867	0					
ANR	7005901	Identifier	devfn		7005867	1					
ANR	7005902	IfStatement	if ( ! root )		7005867	5					
ANR	7005903	Condition	! root	21:8:324:328	7005867	0	True				
ANR	7005904	UnaryOperationExpression	! root		7005867	0					
ANR	7005905	UnaryOperator	!		7005867	0					
ANR	7005906	Identifier	root		7005867	1					
ANR	7005907	CompoundStatement		15:15:153:153	7005867	1					
ANR	7005908	Statement	monitor_printf	23:8:342:355	7005867	0	True				
ANR	7005909	Statement	(	23:22:356:356	7005867	1	True				
ANR	7005910	Statement	mon	23:23:357:359	7005867	2	True				
ANR	7005911	Statement	","	23:26:360:360	7005867	3	True				
ANR	7005912	Statement	"""no primary PCI bus (if there are multiple"""	23:28:362:404	7005867	4	True				
ANR	7005913	Statement	""" PCI roots, you must use device_add instead)"""	25:23:430:475	7005867	5	True				
ANR	7005914	Statement	)	25:69:476:476	7005867	6	True				
ANR	7005915	ExpressionStatement		25:70:477:477	7005867	7	True				
ANR	7005916	ReturnStatement	return NULL ;	27:8:488:499	7005867	8	True				
ANR	7005917	Identifier	NULL		7005867	0					
ANR	7005918	ExpressionStatement	"bus = pci_get_bus_devfn ( & devfn , root , devaddr )"	33:4:515:561	7005867	6	True				
ANR	7005919	AssignmentExpression	"bus = pci_get_bus_devfn ( & devfn , root , devaddr )"		7005867	0		=			
ANR	7005920	Identifier	bus		7005867	0					
ANR	7005921	CallExpression	"pci_get_bus_devfn ( & devfn , root , devaddr )"		7005867	1					
ANR	7005922	Callee	pci_get_bus_devfn		7005867	0					
ANR	7005923	Identifier	pci_get_bus_devfn		7005867	0					
ANR	7005924	ArgumentList	& devfn		7005867	1					
ANR	7005925	Argument	& devfn		7005867	0					
ANR	7005926	UnaryOperationExpression	& devfn		7005867	0					
ANR	7005927	UnaryOperator	&		7005867	0					
ANR	7005928	Identifier	devfn		7005867	1					
ANR	7005929	Argument	root		7005867	1					
ANR	7005930	Identifier	root		7005867	0					
ANR	7005931	Argument	devaddr		7005867	2					
ANR	7005932	Identifier	devaddr		7005867	0					
ANR	7005933	IfStatement	if ( ! bus )		7005867	7					
ANR	7005934	Condition	! bus	35:8:572:575	7005867	0	True				
ANR	7005935	UnaryOperationExpression	! bus		7005867	0					
ANR	7005936	UnaryOperator	!		7005867	0					
ANR	7005937	Identifier	bus		7005867	1					
ANR	7005938	CompoundStatement		29:14:400:400	7005867	1					
ANR	7005939	ExpressionStatement	"monitor_printf ( mon , ""Invalid PCI device address %s\\n"" , devaddr )"	37:8:589:652	7005867	0	True				
ANR	7005940	CallExpression	"monitor_printf ( mon , ""Invalid PCI device address %s\\n"" , devaddr )"		7005867	0					
ANR	7005941	Callee	monitor_printf		7005867	0					
ANR	7005942	Identifier	monitor_printf		7005867	0					
ANR	7005943	ArgumentList	mon		7005867	1					
ANR	7005944	Argument	mon		7005867	0					
ANR	7005945	Identifier	mon		7005867	0					
ANR	7005946	Argument	"""Invalid PCI device address %s\\n"""		7005867	1					
ANR	7005947	PrimaryExpression	"""Invalid PCI device address %s\\n"""		7005867	0					
ANR	7005948	Argument	devaddr		7005867	2					
ANR	7005949	Identifier	devaddr		7005867	0					
ANR	7005950	ReturnStatement	return NULL ;	39:8:663:674	7005867	1	True				
ANR	7005951	Identifier	NULL		7005867	0					
ANR	7005952	IfStatement	if ( ! qbus_is_hotpluggable ( BUS ( bus ) ) )		7005867	8					
ANR	7005953	Condition	! qbus_is_hotpluggable ( BUS ( bus ) )	43:8:692:722	7005867	0	True				
ANR	7005954	UnaryOperationExpression	! qbus_is_hotpluggable ( BUS ( bus ) )		7005867	0					
ANR	7005955	UnaryOperator	!		7005867	0					
ANR	7005956	CallExpression	qbus_is_hotpluggable ( BUS ( bus ) )		7005867	1					
ANR	7005957	Callee	qbus_is_hotpluggable		7005867	0					
ANR	7005958	Identifier	qbus_is_hotpluggable		7005867	0					
ANR	7005959	ArgumentList	BUS ( bus )		7005867	1					
ANR	7005960	Argument	BUS ( bus )		7005867	0					
ANR	7005961	CallExpression	BUS ( bus )		7005867	0					
ANR	7005962	Callee	BUS		7005867	0					
ANR	7005963	Identifier	BUS		7005867	0					
ANR	7005964	ArgumentList	bus		7005867	1					
ANR	7005965	Argument	bus		7005867	0					
ANR	7005966	Identifier	bus		7005867	0					
ANR	7005967	CompoundStatement		37:41:547:547	7005867	1					
ANR	7005968	ExpressionStatement	"monitor_printf ( mon , ""PCI bus doesn't support hotplug\\n"" )"	45:8:736:792	7005867	0	True				
ANR	7005969	CallExpression	"monitor_printf ( mon , ""PCI bus doesn't support hotplug\\n"" )"		7005867	0					
ANR	7005970	Callee	monitor_printf		7005867	0					
ANR	7005971	Identifier	monitor_printf		7005867	0					
ANR	7005972	ArgumentList	mon		7005867	1					
ANR	7005973	Argument	mon		7005867	0					
ANR	7005974	Identifier	mon		7005867	0					
ANR	7005975	Argument	"""PCI bus doesn't support hotplug\\n"""		7005867	1					
ANR	7005976	PrimaryExpression	"""PCI bus doesn't support hotplug\\n"""		7005867	0					
ANR	7005977	ReturnStatement	return NULL ;	47:8:803:814	7005867	1	True				
ANR	7005978	Identifier	NULL		7005867	0					
ANR	7005979	ExpressionStatement	"opts = qemu_opts_parse ( qemu_find_opts ( ""net"" ) , opts_str ? opts_str : """" , 0 )"	53:4:830:904	7005867	9	True				
ANR	7005980	AssignmentExpression	"opts = qemu_opts_parse ( qemu_find_opts ( ""net"" ) , opts_str ? opts_str : """" , 0 )"		7005867	0		=			
ANR	7005981	Identifier	opts		7005867	0					
ANR	7005982	CallExpression	"qemu_opts_parse ( qemu_find_opts ( ""net"" ) , opts_str ? opts_str : """" , 0 )"		7005867	1					
ANR	7005983	Callee	qemu_opts_parse		7005867	0					
ANR	7005984	Identifier	qemu_opts_parse		7005867	0					
ANR	7005985	ArgumentList	"qemu_find_opts ( ""net"" )"		7005867	1					
ANR	7005986	Argument	"qemu_find_opts ( ""net"" )"		7005867	0					
ANR	7005987	CallExpression	"qemu_find_opts ( ""net"" )"		7005867	0					
ANR	7005988	Callee	qemu_find_opts		7005867	0					
ANR	7005989	Identifier	qemu_find_opts		7005867	0					
ANR	7005990	ArgumentList	"""net"""		7005867	1					
ANR	7005991	Argument	"""net"""		7005867	0					
ANR	7005992	PrimaryExpression	"""net"""		7005867	0					
ANR	7005993	Argument	"opts_str ? opts_str : """""		7005867	1					
ANR	7005994	ConditionalExpression	"opts_str ? opts_str : """""		7005867	0					
ANR	7005995	Condition	opts_str		7005867	0					
ANR	7005996	Identifier	opts_str		7005867	0					
ANR	7005997	Identifier	opts_str		7005867	1					
ANR	7005998	PrimaryExpression	""""""		7005867	2					
ANR	7005999	Argument	0		7005867	2					
ANR	7006000	PrimaryExpression	0		7005867	0					
ANR	7006001	IfStatement	if ( ! opts )		7005867	10					
ANR	7006002	Condition	! opts	55:8:915:919	7005867	0	True				
ANR	7006003	UnaryOperationExpression	! opts		7005867	0					
ANR	7006004	UnaryOperator	!		7005867	0					
ANR	7006005	Identifier	opts		7005867	1					
ANR	7006006	CompoundStatement		49:15:744:744	7005867	1					
ANR	7006007	ReturnStatement	return NULL ;	57:8:933:944	7005867	0	True				
ANR	7006008	Identifier	NULL		7005867	0					
ANR	7006009	ExpressionStatement	"qemu_opt_set ( opts , ""type"" , ""nic"" )"	63:4:960:993	7005867	11	True				
ANR	7006010	CallExpression	"qemu_opt_set ( opts , ""type"" , ""nic"" )"		7005867	0					
ANR	7006011	Callee	qemu_opt_set		7005867	0					
ANR	7006012	Identifier	qemu_opt_set		7005867	0					
ANR	7006013	ArgumentList	opts		7005867	1					
ANR	7006014	Argument	opts		7005867	0					
ANR	7006015	Identifier	opts		7005867	0					
ANR	7006016	Argument	"""type"""		7005867	1					
ANR	7006017	PrimaryExpression	"""type"""		7005867	0					
ANR	7006018	Argument	"""nic"""		7005867	2					
ANR	7006019	PrimaryExpression	"""nic"""		7005867	0					
ANR	7006020	ExpressionStatement	"ret = net_client_init ( opts , 0 , & local_err )"	67:4:1002:1044	7005867	12	True				
ANR	7006021	AssignmentExpression	"ret = net_client_init ( opts , 0 , & local_err )"		7005867	0		=			
ANR	7006022	Identifier	ret		7005867	0					
ANR	7006023	CallExpression	"net_client_init ( opts , 0 , & local_err )"		7005867	1					
ANR	7006024	Callee	net_client_init		7005867	0					
ANR	7006025	Identifier	net_client_init		7005867	0					
ANR	7006026	ArgumentList	opts		7005867	1					
ANR	7006027	Argument	opts		7005867	0					
ANR	7006028	Identifier	opts		7005867	0					
ANR	7006029	Argument	0		7005867	1					
ANR	7006030	PrimaryExpression	0		7005867	0					
ANR	7006031	Argument	& local_err		7005867	2					
ANR	7006032	UnaryOperationExpression	& local_err		7005867	0					
ANR	7006033	UnaryOperator	&		7005867	0					
ANR	7006034	Identifier	local_err		7005867	1					
ANR	7006035	IfStatement	if ( local_err )		7005867	13					
ANR	7006036	Condition	local_err	69:8:1055:1063	7005867	0	True				
ANR	7006037	Identifier	local_err		7005867	0					
ANR	7006038	CompoundStatement		63:19:888:888	7005867	1					
ANR	7006039	ExpressionStatement	qerror_report_err ( local_err )	71:8:1077:1105	7005867	0	True				
ANR	7006040	CallExpression	qerror_report_err ( local_err )		7005867	0					
ANR	7006041	Callee	qerror_report_err		7005867	0					
ANR	7006042	Identifier	qerror_report_err		7005867	0					
ANR	7006043	ArgumentList	local_err		7005867	1					
ANR	7006044	Argument	local_err		7005867	0					
ANR	7006045	Identifier	local_err		7005867	0					
ANR	7006046	ExpressionStatement	error_free ( local_err )	73:8:1116:1137	7005867	1	True				
ANR	7006047	CallExpression	error_free ( local_err )		7005867	0					
ANR	7006048	Callee	error_free		7005867	0					
ANR	7006049	Identifier	error_free		7005867	0					
ANR	7006050	ArgumentList	local_err		7005867	1					
ANR	7006051	Argument	local_err		7005867	0					
ANR	7006052	Identifier	local_err		7005867	0					
ANR	7006053	ReturnStatement	return NULL ;	75:8:1148:1159	7005867	2	True				
ANR	7006054	Identifier	NULL		7005867	0					
ANR	7006055	IfStatement	if ( nd_table [ ret ] . devaddr )		7005867	14					
ANR	7006056	Condition	nd_table [ ret ] . devaddr	79:8:1177:1197	7005867	0	True				
ANR	7006057	MemberAccess	nd_table [ ret ] . devaddr		7005867	0					
ANR	7006058	ArrayIndexing	nd_table [ ret ]		7005867	0					
ANR	7006059	Identifier	nd_table		7005867	0					
ANR	7006060	Identifier	ret		7005867	1					
ANR	7006061	Identifier	devaddr		7005867	1					
ANR	7006062	CompoundStatement		73:31:1022:1022	7005867	1					
ANR	7006063	ExpressionStatement	"monitor_printf ( mon , ""Parameter addr not supported\\n"" )"	81:8:1211:1264	7005867	0	True				
ANR	7006064	CallExpression	"monitor_printf ( mon , ""Parameter addr not supported\\n"" )"		7005867	0					
ANR	7006065	Callee	monitor_printf		7005867	0					
ANR	7006066	Identifier	monitor_printf		7005867	0					
ANR	7006067	ArgumentList	mon		7005867	1					
ANR	7006068	Argument	mon		7005867	0					
ANR	7006069	Identifier	mon		7005867	0					
ANR	7006070	Argument	"""Parameter addr not supported\\n"""		7005867	1					
ANR	7006071	PrimaryExpression	"""Parameter addr not supported\\n"""		7005867	0					
ANR	7006072	ReturnStatement	return NULL ;	83:8:1275:1286	7005867	1	True				
ANR	7006073	Identifier	NULL		7005867	0					
ANR	7006074	ReturnStatement	"return pci_nic_init ( & nd_table [ ret ] , root , ""rtl8139"" , devaddr ) ;"	87:4:1300:1361	7005867	15	True				
ANR	7006075	CallExpression	"pci_nic_init ( & nd_table [ ret ] , root , ""rtl8139"" , devaddr )"		7005867	0					
ANR	7006076	Callee	pci_nic_init		7005867	0					
ANR	7006077	Identifier	pci_nic_init		7005867	0					
ANR	7006078	ArgumentList	& nd_table [ ret ]		7005867	1					
ANR	7006079	Argument	& nd_table [ ret ]		7005867	0					
ANR	7006080	UnaryOperationExpression	& nd_table [ ret ]		7005867	0					
ANR	7006081	UnaryOperator	&		7005867	0					
ANR	7006082	ArrayIndexing	nd_table [ ret ]		7005867	1					
ANR	7006083	Identifier	nd_table		7005867	0					
ANR	7006084	Identifier	ret		7005867	1					
ANR	7006085	Argument	root		7005867	1					
ANR	7006086	Identifier	root		7005867	0					
ANR	7006087	Argument	"""rtl8139"""		7005867	2					
ANR	7006088	PrimaryExpression	"""rtl8139"""		7005867	0					
ANR	7006089	Argument	devaddr		7005867	3					
ANR	7006090	Identifier	devaddr		7005867	0					
ANR	7006091	ReturnType	static PCIDevice *		7005867	1					
ANR	7006092	Identifier	qemu_pci_hot_add_nic		7005867	2					
ANR	7006093	ParameterList	"Monitor * mon , const char * devaddr , const char * opts_str"		7005867	3					
ANR	7006094	Parameter	Monitor * mon	1:39:39:50	7005867	0	True				
ANR	7006095	ParameterType	Monitor *		7005867	0					
ANR	7006096	Identifier	mon		7005867	1					
ANR	7006097	Parameter	const char * devaddr	3:39:93:111	7005867	1	True				
ANR	7006098	ParameterType	const char *		7005867	0					
ANR	7006099	Identifier	devaddr		7005867	1					
ANR	7006100	Parameter	const char * opts_str	5:39:154:173	7005867	2	True				
ANR	7006101	ParameterType	const char *		7005867	0					
ANR	7006102	Identifier	opts_str		7005867	1					
ANR	7006103	CFGEntryNode	ENTRY		7005867		True				
ANR	7006104	CFGExitNode	EXIT		7005867		True				
ANR	7006105	Symbol	ret		7005867						
ANR	7006106	Symbol	pci_get_bus_devfn		7005867						
ANR	7006107	Symbol	bus		7005867						
ANR	7006108	Symbol	BUS		7005867						
ANR	7006109	Symbol	qemu_find_opts		7005867						
ANR	7006110	Symbol	nd_table [ ret ] . devaddr		7005867						
ANR	7006111	Symbol	opts_str		7005867						
ANR	7006112	Symbol	pci_find_primary_bus		7005867						
ANR	7006113	Symbol	NULL		7005867						
ANR	7006114	Symbol	pci_nic_init		7005867						
ANR	7006115	Symbol	* ret		7005867						
ANR	7006116	Symbol	* nd_table		7005867						
ANR	7006117	Symbol	mon		7005867						
ANR	7006118	Symbol	devfn		7005867						
ANR	7006119	Symbol	qbus_is_hotpluggable		7005867						
ANR	7006120	Symbol	qemu_opts_parse		7005867						
ANR	7006121	Symbol	devaddr		7005867						
ANR	7006122	Symbol	opts		7005867						
ANR	7006123	Symbol	net_client_init		7005867						
ANR	7006124	Symbol	root		7005867						
ANR	7006125	Symbol	& local_err		7005867						
ANR	7006126	Symbol	nd_table		7005867						
ANR	7006127	Symbol	& devfn		7005867						
ANR	7006128	Symbol	local_err		7005867						
