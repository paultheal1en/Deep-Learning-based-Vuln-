command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	503043	File	/home/p4ultr4n/workplace/ReVeal/raw_code/alac_decode_frame_0.c								
ANR	503044	Function	alac_decode_frame	1:0:0:1701							
ANR	503045	FunctionDef	"alac_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		503044	0					
ANR	503046	CompoundStatement		5:0:132:1701	503044	0					
ANR	503047	IdentifierDeclStatement	ALACContext * alac = avctx -> priv_data ;	7:4:139:175	503044	0	True				
ANR	503048	IdentifierDecl	* alac = avctx -> priv_data		503044	0					
ANR	503049	IdentifierDeclType	ALACContext *		503044	0					
ANR	503050	Identifier	alac		503044	1					
ANR	503051	AssignmentExpression	* alac = avctx -> priv_data		503044	2		=			
ANR	503052	Identifier	alac		503044	0					
ANR	503053	PtrMemberAccess	avctx -> priv_data		503044	1					
ANR	503054	Identifier	avctx		503044	0					
ANR	503055	Identifier	priv_data		503044	1					
ANR	503056	IdentifierDeclStatement	enum RawDataBlockType element ;	9:4:182:211	503044	1	True				
ANR	503057	IdentifierDecl	element		503044	0					
ANR	503058	IdentifierDeclType	enum RawDataBlockType		503044	0					
ANR	503059	Identifier	element		503044	1					
ANR	503060	IdentifierDeclStatement	int channels ;	11:4:218:230	503044	2	True				
ANR	503061	IdentifierDecl	channels		503044	0					
ANR	503062	IdentifierDeclType	int		503044	0					
ANR	503063	Identifier	channels		503044	1					
ANR	503064	IdentifierDeclStatement	"int ch , ret , got_end ;"	13:4:237:257	503044	3	True				
ANR	503065	IdentifierDecl	ch		503044	0					
ANR	503066	IdentifierDeclType	int		503044	0					
ANR	503067	Identifier	ch		503044	1					
ANR	503068	IdentifierDecl	ret		503044	1					
ANR	503069	IdentifierDeclType	int		503044	0					
ANR	503070	Identifier	ret		503044	1					
ANR	503071	IdentifierDecl	got_end		503044	2					
ANR	503072	IdentifierDeclType	int		503044	0					
ANR	503073	Identifier	got_end		503044	1					
ANR	503074	ExpressionStatement	"init_get_bits ( & alac -> gb , avpkt -> data , avpkt -> size * 8 )"	17:4:266:320	503044	4	True				
ANR	503075	CallExpression	"init_get_bits ( & alac -> gb , avpkt -> data , avpkt -> size * 8 )"		503044	0					
ANR	503076	Callee	init_get_bits		503044	0					
ANR	503077	Identifier	init_get_bits		503044	0					
ANR	503078	ArgumentList	& alac -> gb		503044	1					
ANR	503079	Argument	& alac -> gb		503044	0					
ANR	503080	UnaryOperationExpression	& alac -> gb		503044	0					
ANR	503081	UnaryOperator	&		503044	0					
ANR	503082	PtrMemberAccess	alac -> gb		503044	1					
ANR	503083	Identifier	alac		503044	0					
ANR	503084	Identifier	gb		503044	1					
ANR	503085	Argument	avpkt -> data		503044	1					
ANR	503086	PtrMemberAccess	avpkt -> data		503044	0					
ANR	503087	Identifier	avpkt		503044	0					
ANR	503088	Identifier	data		503044	1					
ANR	503089	Argument	avpkt -> size * 8		503044	2					
ANR	503090	MultiplicativeExpression	avpkt -> size * 8		503044	0		*			
ANR	503091	PtrMemberAccess	avpkt -> size		503044	0					
ANR	503092	Identifier	avpkt		503044	0					
ANR	503093	Identifier	size		503044	1					
ANR	503094	PrimaryExpression	8		503044	1					
ANR	503095	ExpressionStatement	got_end = 0	21:4:329:340	503044	5	True				
ANR	503096	AssignmentExpression	got_end = 0		503044	0		=			
ANR	503097	Identifier	got_end		503044	0					
ANR	503098	PrimaryExpression	0		503044	1					
ANR	503099	ExpressionStatement	alac -> nb_samples = 0	23:4:347:367	503044	6	True				
ANR	503100	AssignmentExpression	alac -> nb_samples = 0		503044	0		=			
ANR	503101	PtrMemberAccess	alac -> nb_samples		503044	0					
ANR	503102	Identifier	alac		503044	0					
ANR	503103	Identifier	nb_samples		503044	1					
ANR	503104	PrimaryExpression	0		503044	1					
ANR	503105	ExpressionStatement	ch = 0	25:4:374:380	503044	7	True				
ANR	503106	AssignmentExpression	ch = 0		503044	0		=			
ANR	503107	Identifier	ch		503044	0					
ANR	503108	PrimaryExpression	0		503044	1					
ANR	503109	WhileStatement	while ( get_bits_left ( & alac -> gb ) >= 3 )		503044	8					
ANR	503110	Condition	get_bits_left ( & alac -> gb ) >= 3	27:11:394:422	503044	0	True				
ANR	503111	RelationalExpression	get_bits_left ( & alac -> gb ) >= 3		503044	0		>=			
ANR	503112	CallExpression	get_bits_left ( & alac -> gb )		503044	0					
ANR	503113	Callee	get_bits_left		503044	0					
ANR	503114	Identifier	get_bits_left		503044	0					
ANR	503115	ArgumentList	& alac -> gb		503044	1					
ANR	503116	Argument	& alac -> gb		503044	0					
ANR	503117	UnaryOperationExpression	& alac -> gb		503044	0					
ANR	503118	UnaryOperator	&		503044	0					
ANR	503119	PtrMemberAccess	alac -> gb		503044	1					
ANR	503120	Identifier	alac		503044	0					
ANR	503121	Identifier	gb		503044	1					
ANR	503122	PrimaryExpression	3		503044	1					
ANR	503123	CompoundStatement		23:42:292:292	503044	1					
ANR	503124	ExpressionStatement	"element = get_bits ( & alac -> gb , 3 )"	29:8:436:468	503044	0	True				
ANR	503125	AssignmentExpression	"element = get_bits ( & alac -> gb , 3 )"		503044	0		=			
ANR	503126	Identifier	element		503044	0					
ANR	503127	CallExpression	"get_bits ( & alac -> gb , 3 )"		503044	1					
ANR	503128	Callee	get_bits		503044	0					
ANR	503129	Identifier	get_bits		503044	0					
ANR	503130	ArgumentList	& alac -> gb		503044	1					
ANR	503131	Argument	& alac -> gb		503044	0					
ANR	503132	UnaryOperationExpression	& alac -> gb		503044	0					
ANR	503133	UnaryOperator	&		503044	0					
ANR	503134	PtrMemberAccess	alac -> gb		503044	1					
ANR	503135	Identifier	alac		503044	0					
ANR	503136	Identifier	gb		503044	1					
ANR	503137	Argument	3		503044	1					
ANR	503138	PrimaryExpression	3		503044	0					
ANR	503139	IfStatement	if ( element == TYPE_END )		503044	1					
ANR	503140	Condition	element == TYPE_END	31:12:483:501	503044	0	True				
ANR	503141	EqualityExpression	element == TYPE_END		503044	0		==			
ANR	503142	Identifier	element		503044	0					
ANR	503143	Identifier	TYPE_END		503044	1					
ANR	503144	CompoundStatement		27:33:371:371	503044	1					
ANR	503145	ExpressionStatement	got_end = 1	33:12:519:530	503044	0	True				
ANR	503146	AssignmentExpression	got_end = 1		503044	0		=			
ANR	503147	Identifier	got_end		503044	0					
ANR	503148	PrimaryExpression	1		503044	1					
ANR	503149	BreakStatement	break ;	35:12:545:550	503044	1	True				
ANR	503150	IfStatement	if ( element > TYPE_CPE && element != TYPE_LFE )		503044	2					
ANR	503151	Condition	element > TYPE_CPE && element != TYPE_LFE	39:12:576:616	503044	0	True				
ANR	503152	AndExpression	element > TYPE_CPE && element != TYPE_LFE		503044	0		&&			
ANR	503153	RelationalExpression	element > TYPE_CPE		503044	0		>			
ANR	503154	Identifier	element		503044	0					
ANR	503155	Identifier	TYPE_CPE		503044	1					
ANR	503156	EqualityExpression	element != TYPE_LFE		503044	1		!=			
ANR	503157	Identifier	element		503044	0					
ANR	503158	Identifier	TYPE_LFE		503044	1					
ANR	503159	CompoundStatement		35:55:486:486	503044	1					
ANR	503160	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""syntax element unsupported: %d\\n"" , element )"	41:12:634:706	503044	0	True				
ANR	503161	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""syntax element unsupported: %d\\n"" , element )"		503044	0					
ANR	503162	Callee	av_log		503044	0					
ANR	503163	Identifier	av_log		503044	0					
ANR	503164	ArgumentList	avctx		503044	1					
ANR	503165	Argument	avctx		503044	0					
ANR	503166	Identifier	avctx		503044	0					
ANR	503167	Argument	AV_LOG_ERROR		503044	1					
ANR	503168	Identifier	AV_LOG_ERROR		503044	0					
ANR	503169	Argument	"""syntax element unsupported: %d\\n"""		503044	2					
ANR	503170	PrimaryExpression	"""syntax element unsupported: %d\\n"""		503044	0					
ANR	503171	Argument	element		503044	3					
ANR	503172	Identifier	element		503044	0					
ANR	503173	ReturnStatement	return AVERROR_PATCHWELCOME ;	43:12:721:748	503044	1	True				
ANR	503174	Identifier	AVERROR_PATCHWELCOME		503044	0					
ANR	503175	ExpressionStatement	channels = ( element == TYPE_CPE ) ? 2 : 1	49:8:772:812	503044	3	True				
ANR	503176	AssignmentExpression	channels = ( element == TYPE_CPE ) ? 2 : 1		503044	0		=			
ANR	503177	Identifier	channels		503044	0					
ANR	503178	ConditionalExpression	( element == TYPE_CPE ) ? 2 : 1		503044	1					
ANR	503179	Condition	element == TYPE_CPE		503044	0					
ANR	503180	EqualityExpression	element == TYPE_CPE		503044	0		==			
ANR	503181	Identifier	element		503044	0					
ANR	503182	Identifier	TYPE_CPE		503044	1					
ANR	503183	PrimaryExpression	2		503044	1					
ANR	503184	PrimaryExpression	1		503044	2					
ANR	503185	IfStatement	if ( ch + channels > alac -> channels )		503044	4					
ANR	503186	Condition	ch + channels > alac -> channels	51:12:827:856	503044	0	True				
ANR	503187	RelationalExpression	ch + channels > alac -> channels		503044	0		>			
ANR	503188	AdditiveExpression	ch + channels		503044	0		+			
ANR	503189	Identifier	ch		503044	0					
ANR	503190	Identifier	channels		503044	1					
ANR	503191	PtrMemberAccess	alac -> channels		503044	1					
ANR	503192	Identifier	alac		503044	0					
ANR	503193	Identifier	channels		503044	1					
ANR	503194	CompoundStatement		47:44:726:726	503044	1					
ANR	503195	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid element channel count\\n"" )"	53:12:874:936	503044	0	True				
ANR	503196	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid element channel count\\n"" )"		503044	0					
ANR	503197	Callee	av_log		503044	0					
ANR	503198	Identifier	av_log		503044	0					
ANR	503199	ArgumentList	avctx		503044	1					
ANR	503200	Argument	avctx		503044	0					
ANR	503201	Identifier	avctx		503044	0					
ANR	503202	Argument	AV_LOG_ERROR		503044	1					
ANR	503203	Identifier	AV_LOG_ERROR		503044	0					
ANR	503204	Argument	"""invalid element channel count\\n"""		503044	2					
ANR	503205	PrimaryExpression	"""invalid element channel count\\n"""		503044	0					
ANR	503206	ReturnStatement	return AVERROR_INVALIDDATA ;	55:12:951:977	503044	1	True				
ANR	503207	Identifier	AVERROR_INVALIDDATA		503044	0					
ANR	503208	ExpressionStatement	"ret = decode_element ( avctx , data , alac_channel_layout_offsets [ alac -> channels - 1 ] [ ch ] , channels )"	61:8:1001:1157	503044	5	True				
ANR	503209	AssignmentExpression	"ret = decode_element ( avctx , data , alac_channel_layout_offsets [ alac -> channels - 1 ] [ ch ] , channels )"		503044	0		=			
ANR	503210	Identifier	ret		503044	0					
ANR	503211	CallExpression	"decode_element ( avctx , data , alac_channel_layout_offsets [ alac -> channels - 1 ] [ ch ] , channels )"		503044	1					
ANR	503212	Callee	decode_element		503044	0					
ANR	503213	Identifier	decode_element		503044	0					
ANR	503214	ArgumentList	avctx		503044	1					
ANR	503215	Argument	avctx		503044	0					
ANR	503216	Identifier	avctx		503044	0					
ANR	503217	Argument	data		503044	1					
ANR	503218	Identifier	data		503044	0					
ANR	503219	Argument	alac_channel_layout_offsets [ alac -> channels - 1 ] [ ch ]		503044	2					
ANR	503220	ArrayIndexing	alac_channel_layout_offsets [ alac -> channels - 1 ] [ ch ]		503044	0					
ANR	503221	ArrayIndexing	alac_channel_layout_offsets [ alac -> channels - 1 ]		503044	0					
ANR	503222	Identifier	alac_channel_layout_offsets		503044	0					
ANR	503223	AdditiveExpression	alac -> channels - 1		503044	1		-			
ANR	503224	PtrMemberAccess	alac -> channels		503044	0					
ANR	503225	Identifier	alac		503044	0					
ANR	503226	Identifier	channels		503044	1					
ANR	503227	PrimaryExpression	1		503044	1					
ANR	503228	Identifier	ch		503044	1					
ANR	503229	Argument	channels		503044	3					
ANR	503230	Identifier	channels		503044	0					
ANR	503231	IfStatement	if ( ret < 0 && get_bits_left ( & alac -> gb ) )		503044	6					
ANR	503232	Condition	ret < 0 && get_bits_left ( & alac -> gb )	67:12:1172:1206	503044	0	True				
ANR	503233	AndExpression	ret < 0 && get_bits_left ( & alac -> gb )		503044	0		&&			
ANR	503234	RelationalExpression	ret < 0		503044	0		<			
ANR	503235	Identifier	ret		503044	0					
ANR	503236	PrimaryExpression	0		503044	1					
ANR	503237	CallExpression	get_bits_left ( & alac -> gb )		503044	1					
ANR	503238	Callee	get_bits_left		503044	0					
ANR	503239	Identifier	get_bits_left		503044	0					
ANR	503240	ArgumentList	& alac -> gb		503044	1					
ANR	503241	Argument	& alac -> gb		503044	0					
ANR	503242	UnaryOperationExpression	& alac -> gb		503044	0					
ANR	503243	UnaryOperator	&		503044	0					
ANR	503244	PtrMemberAccess	alac -> gb		503044	1					
ANR	503245	Identifier	alac		503044	0					
ANR	503246	Identifier	gb		503044	1					
ANR	503247	ReturnStatement	return ret ;	69:12:1222:1232	503044	1	True				
ANR	503248	Identifier	ret		503044	0					
ANR	503249	ExpressionStatement	ch += channels	73:8:1245:1259	503044	7	True				
ANR	503250	AssignmentExpression	ch += channels		503044	0		+=			
ANR	503251	Identifier	ch		503044	0					
ANR	503252	Identifier	channels		503044	1					
ANR	503253	IfStatement	if ( ! got_end )		503044	9					
ANR	503254	Condition	! got_end	77:8:1277:1284	503044	0	True				
ANR	503255	UnaryOperationExpression	! got_end		503044	0					
ANR	503256	UnaryOperator	!		503044	0					
ANR	503257	Identifier	got_end		503044	1					
ANR	503258	CompoundStatement		73:18:1154:1154	503044	1					
ANR	503259	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""no end tag found. incomplete packet.\\n"" )"	79:8:1298:1367	503044	0	True				
ANR	503260	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""no end tag found. incomplete packet.\\n"" )"		503044	0					
ANR	503261	Callee	av_log		503044	0					
ANR	503262	Identifier	av_log		503044	0					
ANR	503263	ArgumentList	avctx		503044	1					
ANR	503264	Argument	avctx		503044	0					
ANR	503265	Identifier	avctx		503044	0					
ANR	503266	Argument	AV_LOG_ERROR		503044	1					
ANR	503267	Identifier	AV_LOG_ERROR		503044	0					
ANR	503268	Argument	"""no end tag found. incomplete packet.\\n"""		503044	2					
ANR	503269	PrimaryExpression	"""no end tag found. incomplete packet.\\n"""		503044	0					
ANR	503270	ReturnStatement	return AVERROR_INVALIDDATA ;	81:8:1378:1404	503044	1	True				
ANR	503271	Identifier	AVERROR_INVALIDDATA		503044	0					
ANR	503272	IfStatement	if ( avpkt -> size * 8 - get_bits_count ( & alac -> gb ) > 8 )		503044	10					
ANR	503273	Condition	avpkt -> size * 8 - get_bits_count ( & alac -> gb ) > 8	87:8:1424:1470	503044	0	True				
ANR	503274	RelationalExpression	avpkt -> size * 8 - get_bits_count ( & alac -> gb ) > 8		503044	0		>			
ANR	503275	AdditiveExpression	avpkt -> size * 8 - get_bits_count ( & alac -> gb )		503044	0		-			
ANR	503276	MultiplicativeExpression	avpkt -> size * 8		503044	0		*			
ANR	503277	PtrMemberAccess	avpkt -> size		503044	0					
ANR	503278	Identifier	avpkt		503044	0					
ANR	503279	Identifier	size		503044	1					
ANR	503280	PrimaryExpression	8		503044	1					
ANR	503281	CallExpression	get_bits_count ( & alac -> gb )		503044	1					
ANR	503282	Callee	get_bits_count		503044	0					
ANR	503283	Identifier	get_bits_count		503044	0					
ANR	503284	ArgumentList	& alac -> gb		503044	1					
ANR	503285	Argument	& alac -> gb		503044	0					
ANR	503286	UnaryOperationExpression	& alac -> gb		503044	0					
ANR	503287	UnaryOperator	&		503044	0					
ANR	503288	PtrMemberAccess	alac -> gb		503044	1					
ANR	503289	Identifier	alac		503044	0					
ANR	503290	Identifier	gb		503044	1					
ANR	503291	PrimaryExpression	8		503044	1					
ANR	503292	CompoundStatement		83:57:1340:1340	503044	1					
ANR	503293	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error : %d bits left\\n"" , avpkt -> size * 8 - get_bits_count ( & alac -> gb ) )"	89:8:1484:1598	503044	0	True				
ANR	503294	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error : %d bits left\\n"" , avpkt -> size * 8 - get_bits_count ( & alac -> gb ) )"		503044	0					
ANR	503295	Callee	av_log		503044	0					
ANR	503296	Identifier	av_log		503044	0					
ANR	503297	ArgumentList	avctx		503044	1					
ANR	503298	Argument	avctx		503044	0					
ANR	503299	Identifier	avctx		503044	0					
ANR	503300	Argument	AV_LOG_ERROR		503044	1					
ANR	503301	Identifier	AV_LOG_ERROR		503044	0					
ANR	503302	Argument	"""Error : %d bits left\\n"""		503044	2					
ANR	503303	PrimaryExpression	"""Error : %d bits left\\n"""		503044	0					
ANR	503304	Argument	avpkt -> size * 8 - get_bits_count ( & alac -> gb )		503044	3					
ANR	503305	AdditiveExpression	avpkt -> size * 8 - get_bits_count ( & alac -> gb )		503044	0		-			
ANR	503306	MultiplicativeExpression	avpkt -> size * 8		503044	0		*			
ANR	503307	PtrMemberAccess	avpkt -> size		503044	0					
ANR	503308	Identifier	avpkt		503044	0					
ANR	503309	Identifier	size		503044	1					
ANR	503310	PrimaryExpression	8		503044	1					
ANR	503311	CallExpression	get_bits_count ( & alac -> gb )		503044	1					
ANR	503312	Callee	get_bits_count		503044	0					
ANR	503313	Identifier	get_bits_count		503044	0					
ANR	503314	ArgumentList	& alac -> gb		503044	1					
ANR	503315	Argument	& alac -> gb		503044	0					
ANR	503316	UnaryOperationExpression	& alac -> gb		503044	0					
ANR	503317	UnaryOperator	&		503044	0					
ANR	503318	PtrMemberAccess	alac -> gb		503044	1					
ANR	503319	Identifier	alac		503044	0					
ANR	503320	Identifier	gb		503044	1					
ANR	503321	ExpressionStatement	* got_frame_ptr = 1	97:4:1614:1634	503044	11	True				
ANR	503322	AssignmentExpression	* got_frame_ptr = 1		503044	0		=			
ANR	503323	UnaryOperationExpression	* got_frame_ptr		503044	0					
ANR	503324	UnaryOperator	*		503044	0					
ANR	503325	Identifier	got_frame_ptr		503044	1					
ANR	503326	PrimaryExpression	1		503044	1					
ANR	503327	ExpressionStatement	* ( AVFrame * ) data = alac -> frame	99:4:1641:1671	503044	12	True				
ANR	503328	AssignmentExpression	* ( AVFrame * ) data = alac -> frame		503044	0		=			
ANR	503329	UnaryOperationExpression	* ( AVFrame * ) data		503044	0					
ANR	503330	UnaryOperator	*		503044	0					
ANR	503331	CastExpression	( AVFrame * ) data		503044	1					
ANR	503332	CastTarget	AVFrame *		503044	0					
ANR	503333	Identifier	data		503044	1					
ANR	503334	PtrMemberAccess	alac -> frame		503044	1					
ANR	503335	Identifier	alac		503044	0					
ANR	503336	Identifier	frame		503044	1					
ANR	503337	ReturnStatement	return avpkt -> size ;	103:4:1680:1698	503044	13	True				
ANR	503338	PtrMemberAccess	avpkt -> size		503044	0					
ANR	503339	Identifier	avpkt		503044	0					
ANR	503340	Identifier	size		503044	1					
ANR	503341	ReturnType	static int		503044	1					
ANR	503342	Identifier	alac_decode_frame		503044	2					
ANR	503343	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		503044	3					
ANR	503344	Parameter	AVCodecContext * avctx	1:29:29:49	503044	0	True				
ANR	503345	ParameterType	AVCodecContext *		503044	0					
ANR	503346	Identifier	avctx		503044	1					
ANR	503347	Parameter	void * data	1:52:52:61	503044	1	True				
ANR	503348	ParameterType	void *		503044	0					
ANR	503349	Identifier	data		503044	1					
ANR	503350	Parameter	int * got_frame_ptr	3:29:94:111	503044	2	True				
ANR	503351	ParameterType	int *		503044	0					
ANR	503352	Identifier	got_frame_ptr		503044	1					
ANR	503353	Parameter	AVPacket * avpkt	3:49:114:128	503044	3	True				
ANR	503354	ParameterType	AVPacket *		503044	0					
ANR	503355	Identifier	avpkt		503044	1					
ANR	503356	CFGEntryNode	ENTRY		503044		True				
ANR	503357	CFGExitNode	EXIT		503044		True				
ANR	503358	Symbol	* * * alac		503044						
ANR	503359	Symbol	data		503044						
ANR	503360	Symbol	get_bits		503044						
ANR	503361	Symbol	* ch		503044						
ANR	503362	Symbol	alac -> frame		503044						
ANR	503363	Symbol	got_frame_ptr		503044						
ANR	503364	Symbol	avpkt		503044						
ANR	503365	Symbol	* * alac -> channels		503044						
ANR	503366	Symbol	get_bits_left		503044						
ANR	503367	Symbol	* alac_channel_layout_offsets		503044						
ANR	503368	Symbol	avpkt -> size		503044						
ANR	503369	Symbol	AVERROR_PATCHWELCOME		503044						
ANR	503370	Symbol	* * alac_channel_layout_offsets		503044						
ANR	503371	Symbol	TYPE_CPE		503044						
ANR	503372	Symbol	* alac -> channels		503044						
ANR	503373	Symbol	avctx		503044						
ANR	503374	Symbol	element		503044						
ANR	503375	Symbol	* alac		503044						
ANR	503376	Symbol	alac -> nb_samples		503044						
ANR	503377	Symbol	TYPE_END		503044						
ANR	503378	Symbol	alac		503044						
ANR	503379	Symbol	ret		503044						
ANR	503380	Symbol	* avpkt		503044						
ANR	503381	Symbol	alac -> channels		503044						
ANR	503382	Symbol	AV_LOG_ERROR		503044						
ANR	503383	Symbol	ch		503044						
ANR	503384	Symbol	& alac -> gb		503044						
ANR	503385	Symbol	alac_channel_layout_offsets		503044						
ANR	503386	Symbol	* got_frame_ptr		503044						
ANR	503387	Symbol	avctx -> priv_data		503044						
ANR	503388	Symbol	* * alac		503044						
ANR	503389	Symbol	get_bits_count		503044						
ANR	503390	Symbol	TYPE_LFE		503044						
ANR	503391	Symbol	* avctx		503044						
ANR	503392	Symbol	got_end		503044						
ANR	503393	Symbol	channels		503044						
ANR	503394	Symbol	decode_element		503044						
ANR	503395	Symbol	AVERROR_INVALIDDATA		503044						
ANR	503396	Symbol	avpkt -> data		503044						
ANR	503397	Symbol	* ( AVFrame * ) data		503044						
ANR	503398	Symbol	* data		503044						
