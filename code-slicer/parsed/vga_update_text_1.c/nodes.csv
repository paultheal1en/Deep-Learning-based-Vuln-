command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9006142	File	/home/p4ultr4n/workplace/ReVeal/raw_code/vga_update_text_1.c								
ANR	9006143	Function	vga_update_text	1:0:0:4937							
ANR	9006144	FunctionDef	"vga_update_text (void * opaque , console_ch_t * chardata)"		9006143	0					
ANR	9006145	CompoundStatement		2:0:66:4937	9006143	0					
ANR	9006146	IdentifierDeclStatement	VGACommonState * s = opaque ;	3:4:72:99	9006143	0	True				
ANR	9006147	IdentifierDecl	* s = opaque		9006143	0					
ANR	9006148	IdentifierDeclType	VGACommonState *		9006143	0					
ANR	9006149	Identifier	s		9006143	1					
ANR	9006150	AssignmentExpression	* s = opaque		9006143	2		=			
ANR	9006151	Identifier	opaque		9006143	0					
ANR	9006152	Identifier	opaque		9006143	1					
ANR	9006153	IdentifierDeclStatement	"int graphic_mode , i , cursor_offset , cursor_visible ;"	4:4:105:155	9006143	1	True				
ANR	9006154	IdentifierDecl	graphic_mode		9006143	0					
ANR	9006155	IdentifierDeclType	int		9006143	0					
ANR	9006156	Identifier	graphic_mode		9006143	1					
ANR	9006157	IdentifierDecl	i		9006143	1					
ANR	9006158	IdentifierDeclType	int		9006143	0					
ANR	9006159	Identifier	i		9006143	1					
ANR	9006160	IdentifierDecl	cursor_offset		9006143	2					
ANR	9006161	IdentifierDeclType	int		9006143	0					
ANR	9006162	Identifier	cursor_offset		9006143	1					
ANR	9006163	IdentifierDecl	cursor_visible		9006143	3					
ANR	9006164	IdentifierDeclType	int		9006143	0					
ANR	9006165	Identifier	cursor_visible		9006143	1					
ANR	9006166	IdentifierDeclStatement	"int cw , cheight , width , height , size , c_min , c_max ;"	5:4:161:211	9006143	2	True				
ANR	9006167	IdentifierDecl	cw		9006143	0					
ANR	9006168	IdentifierDeclType	int		9006143	0					
ANR	9006169	Identifier	cw		9006143	1					
ANR	9006170	IdentifierDecl	cheight		9006143	1					
ANR	9006171	IdentifierDeclType	int		9006143	0					
ANR	9006172	Identifier	cheight		9006143	1					
ANR	9006173	IdentifierDecl	width		9006143	2					
ANR	9006174	IdentifierDeclType	int		9006143	0					
ANR	9006175	Identifier	width		9006143	1					
ANR	9006176	IdentifierDecl	height		9006143	3					
ANR	9006177	IdentifierDeclType	int		9006143	0					
ANR	9006178	Identifier	height		9006143	1					
ANR	9006179	IdentifierDecl	size		9006143	4					
ANR	9006180	IdentifierDeclType	int		9006143	0					
ANR	9006181	Identifier	size		9006143	1					
ANR	9006182	IdentifierDecl	c_min		9006143	5					
ANR	9006183	IdentifierDeclType	int		9006143	0					
ANR	9006184	Identifier	c_min		9006143	1					
ANR	9006185	IdentifierDecl	c_max		9006143	6					
ANR	9006186	IdentifierDeclType	int		9006143	0					
ANR	9006187	Identifier	c_max		9006143	1					
ANR	9006188	IdentifierDeclStatement	uint32_t * src ;	6:4:217:230	9006143	3	True				
ANR	9006189	IdentifierDecl	* src		9006143	0					
ANR	9006190	IdentifierDeclType	uint32_t *		9006143	0					
ANR	9006191	Identifier	src		9006143	1					
ANR	9006192	IdentifierDeclStatement	"console_ch_t * dst , val ;"	7:4:236:258	9006143	4	True				
ANR	9006193	IdentifierDecl	* dst		9006143	0					
ANR	9006194	IdentifierDeclType	console_ch_t *		9006143	0					
ANR	9006195	Identifier	dst		9006143	1					
ANR	9006196	IdentifierDecl	val		9006143	1					
ANR	9006197	IdentifierDeclType	console_ch_t		9006143	0					
ANR	9006198	Identifier	val		9006143	1					
ANR	9006199	IdentifierDeclStatement	char msg_buffer [ 80 ] ;	8:4:264:283	9006143	5	True				
ANR	9006200	IdentifierDecl	msg_buffer [ 80 ]		9006143	0					
ANR	9006201	IdentifierDeclType	char [ 80 ]		9006143	0					
ANR	9006202	Identifier	msg_buffer		9006143	1					
ANR	9006203	PrimaryExpression	80		9006143	2					
ANR	9006204	IdentifierDeclStatement	int full_update = 0 ;	9:4:289:308	9006143	6	True				
ANR	9006205	IdentifierDecl	full_update = 0		9006143	0					
ANR	9006206	IdentifierDeclType	int		9006143	0					
ANR	9006207	Identifier	full_update		9006143	1					
ANR	9006208	AssignmentExpression	full_update = 0		9006143	2		=			
ANR	9006209	Identifier	full_update		9006143	0					
ANR	9006210	PrimaryExpression	0		9006143	1					
ANR	9006211	IfStatement	if ( ! ( s -> ar_index & 0x20 ) )		9006143	7					
ANR	9006212	Condition	! ( s -> ar_index & 0x20 )	10:8:318:338	9006143	0	True				
ANR	9006213	UnaryOperationExpression	! ( s -> ar_index & 0x20 )		9006143	0					
ANR	9006214	UnaryOperator	!		9006143	0					
ANR	9006215	BitAndExpression	s -> ar_index & 0x20		9006143	1		&			
ANR	9006216	PtrMemberAccess	s -> ar_index		9006143	0					
ANR	9006217	Identifier	s		9006143	0					
ANR	9006218	Identifier	ar_index		9006143	1					
ANR	9006219	PrimaryExpression	0x20		9006143	1					
ANR	9006220	CompoundStatement		9:31:274:274	9006143	1					
ANR	9006221	ExpressionStatement	graphic_mode = GMODE_BLANK	11:8:351:377	9006143	0	True				
ANR	9006222	AssignmentExpression	graphic_mode = GMODE_BLANK		9006143	0		=			
ANR	9006223	Identifier	graphic_mode		9006143	0					
ANR	9006224	Identifier	GMODE_BLANK		9006143	1					
ANR	9006225	ElseStatement	else		9006143	0					
ANR	9006226	CompoundStatement		11:11:323:323	9006143	0					
ANR	9006227	ExpressionStatement	graphic_mode = s -> gr [ 6 ] & 1	13:8:400:427	9006143	0	True				
ANR	9006228	AssignmentExpression	graphic_mode = s -> gr [ 6 ] & 1		9006143	0		=			
ANR	9006229	Identifier	graphic_mode		9006143	0					
ANR	9006230	BitAndExpression	s -> gr [ 6 ] & 1		9006143	1		&			
ANR	9006231	ArrayIndexing	s -> gr [ 6 ]		9006143	0					
ANR	9006232	PtrMemberAccess	s -> gr		9006143	0					
ANR	9006233	Identifier	s		9006143	0					
ANR	9006234	Identifier	gr		9006143	1					
ANR	9006235	PrimaryExpression	6		9006143	1					
ANR	9006236	PrimaryExpression	1		9006143	1					
ANR	9006237	IfStatement	if ( graphic_mode != s -> graphic_mode )		9006143	8					
ANR	9006238	Condition	graphic_mode != s -> graphic_mode	15:8:443:473	9006143	0	True				
ANR	9006239	EqualityExpression	graphic_mode != s -> graphic_mode		9006143	0		!=			
ANR	9006240	Identifier	graphic_mode		9006143	0					
ANR	9006241	PtrMemberAccess	s -> graphic_mode		9006143	1					
ANR	9006242	Identifier	s		9006143	0					
ANR	9006243	Identifier	graphic_mode		9006143	1					
ANR	9006244	CompoundStatement		14:41:409:409	9006143	1					
ANR	9006245	ExpressionStatement	s -> graphic_mode = graphic_mode	16:8:486:516	9006143	0	True				
ANR	9006246	AssignmentExpression	s -> graphic_mode = graphic_mode		9006143	0		=			
ANR	9006247	PtrMemberAccess	s -> graphic_mode		9006143	0					
ANR	9006248	Identifier	s		9006143	0					
ANR	9006249	Identifier	graphic_mode		9006143	1					
ANR	9006250	Identifier	graphic_mode		9006143	1					
ANR	9006251	ExpressionStatement	full_update = 1	17:8:526:541	9006143	1	True				
ANR	9006252	AssignmentExpression	full_update = 1		9006143	0		=			
ANR	9006253	Identifier	full_update		9006143	0					
ANR	9006254	PrimaryExpression	1		9006143	1					
ANR	9006255	IfStatement	if ( s -> last_width == - 1 )		9006143	9					
ANR	9006256	Condition	s -> last_width == - 1	19:8:557:575	9006143	0	True				
ANR	9006257	EqualityExpression	s -> last_width == - 1		9006143	0		==			
ANR	9006258	PtrMemberAccess	s -> last_width		9006143	0					
ANR	9006259	Identifier	s		9006143	0					
ANR	9006260	Identifier	last_width		9006143	1					
ANR	9006261	UnaryOperationExpression	- 1		9006143	1					
ANR	9006262	UnaryOperator	-		9006143	0					
ANR	9006263	PrimaryExpression	1		9006143	1					
ANR	9006264	CompoundStatement		18:29:511:511	9006143	1					
ANR	9006265	ExpressionStatement	s -> last_width = 0	20:8:588:605	9006143	0	True				
ANR	9006266	AssignmentExpression	s -> last_width = 0		9006143	0		=			
ANR	9006267	PtrMemberAccess	s -> last_width		9006143	0					
ANR	9006268	Identifier	s		9006143	0					
ANR	9006269	Identifier	last_width		9006143	1					
ANR	9006270	PrimaryExpression	0		9006143	1					
ANR	9006271	ExpressionStatement	full_update = 1	21:8:615:630	9006143	1	True				
ANR	9006272	AssignmentExpression	full_update = 1		9006143	0		=			
ANR	9006273	Identifier	full_update		9006143	0					
ANR	9006274	PrimaryExpression	1		9006143	1					
ANR	9006275	SwitchStatement	switch ( graphic_mode )		9006143	10					
ANR	9006276	Condition	graphic_mode	23:12:650:661	9006143	0	True				
ANR	9006277	Identifier	graphic_mode		9006143	0					
ANR	9006278	CompoundStatement		22:26:597:597	9006143	1					
ANR	9006279	Label	case GMODE_TEXT :	24:4:670:685	9006143	0	True				
ANR	9006280	Identifier	GMODE_TEXT		9006143	0					
ANR	9006281	ExpressionStatement	full_update |= update_basic_params ( s )	26:8:730:767	9006143	1	True				
ANR	9006282	AssignmentExpression	full_update |= update_basic_params ( s )		9006143	0		|=			
ANR	9006283	Identifier	full_update		9006143	0					
ANR	9006284	CallExpression	update_basic_params ( s )		9006143	1					
ANR	9006285	Callee	update_basic_params		9006143	0					
ANR	9006286	Identifier	update_basic_params		9006143	0					
ANR	9006287	ArgumentList	s		9006143	1					
ANR	9006288	Argument	s		9006143	0					
ANR	9006289	Identifier	s		9006143	0					
ANR	9006290	ExpressionStatement	cheight = ( s -> cr [ 9 ] & 0x1f ) + 1	28:8:812:843	9006143	2	True				
ANR	9006291	AssignmentExpression	cheight = ( s -> cr [ 9 ] & 0x1f ) + 1		9006143	0		=			
ANR	9006292	Identifier	cheight		9006143	0					
ANR	9006293	AdditiveExpression	( s -> cr [ 9 ] & 0x1f ) + 1		9006143	1		+			
ANR	9006294	BitAndExpression	s -> cr [ 9 ] & 0x1f		9006143	0		&			
ANR	9006295	ArrayIndexing	s -> cr [ 9 ]		9006143	0					
ANR	9006296	PtrMemberAccess	s -> cr		9006143	0					
ANR	9006297	Identifier	s		9006143	0					
ANR	9006298	Identifier	cr		9006143	1					
ANR	9006299	PrimaryExpression	9		9006143	1					
ANR	9006300	PrimaryExpression	0x1f		9006143	1					
ANR	9006301	PrimaryExpression	1		9006143	1					
ANR	9006302	ExpressionStatement	cw = 8	29:8:853:859	9006143	3	True				
ANR	9006303	AssignmentExpression	cw = 8		9006143	0		=			
ANR	9006304	Identifier	cw		9006143	0					
ANR	9006305	PrimaryExpression	8		9006143	1					
ANR	9006306	IfStatement	if ( ! ( s -> sr [ 1 ] & 0x01 ) )		9006143	4					
ANR	9006307	Condition	! ( s -> sr [ 1 ] & 0x01 )	30:12:873:890	9006143	0	True				
ANR	9006308	UnaryOperationExpression	! ( s -> sr [ 1 ] & 0x01 )		9006143	0					
ANR	9006309	UnaryOperator	!		9006143	0					
ANR	9006310	BitAndExpression	s -> sr [ 1 ] & 0x01		9006143	1		&			
ANR	9006311	ArrayIndexing	s -> sr [ 1 ]		9006143	0					
ANR	9006312	PtrMemberAccess	s -> sr		9006143	0					
ANR	9006313	Identifier	s		9006143	0					
ANR	9006314	Identifier	sr		9006143	1					
ANR	9006315	PrimaryExpression	1		9006143	1					
ANR	9006316	PrimaryExpression	0x01		9006143	1					
ANR	9006317	ExpressionStatement	cw = 9	31:12:905:911	9006143	1	True				
ANR	9006318	AssignmentExpression	cw = 9		9006143	0		=			
ANR	9006319	Identifier	cw		9006143	0					
ANR	9006320	PrimaryExpression	9		9006143	1					
ANR	9006321	IfStatement	if ( s -> sr [ 1 ] & 0x08 )		9006143	5					
ANR	9006322	Condition	s -> sr [ 1 ] & 0x08	32:12:925:939	9006143	0	True				
ANR	9006323	BitAndExpression	s -> sr [ 1 ] & 0x08		9006143	0		&			
ANR	9006324	ArrayIndexing	s -> sr [ 1 ]		9006143	0					
ANR	9006325	PtrMemberAccess	s -> sr		9006143	0					
ANR	9006326	Identifier	s		9006143	0					
ANR	9006327	Identifier	sr		9006143	1					
ANR	9006328	PrimaryExpression	1		9006143	1					
ANR	9006329	PrimaryExpression	0x08		9006143	1					
ANR	9006330	ExpressionStatement	cw = 16	33:12:954:961	9006143	1	True				
ANR	9006331	AssignmentExpression	cw = 16		9006143	0		=			
ANR	9006332	Identifier	cw		9006143	0					
ANR	9006333	PrimaryExpression	16		9006143	1					
ANR	9006334	ExpressionStatement	width = ( s -> cr [ 0x01 ] + 1 )	34:8:1000:1025	9006143	6	True				
ANR	9006335	AssignmentExpression	width = ( s -> cr [ 0x01 ] + 1 )		9006143	0		=			
ANR	9006336	Identifier	width		9006143	0					
ANR	9006337	AdditiveExpression	s -> cr [ 0x01 ] + 1		9006143	1		+			
ANR	9006338	ArrayIndexing	s -> cr [ 0x01 ]		9006143	0					
ANR	9006339	PtrMemberAccess	s -> cr		9006143	0					
ANR	9006340	Identifier	s		9006143	0					
ANR	9006341	Identifier	cr		9006143	1					
ANR	9006342	PrimaryExpression	0x01		9006143	1					
ANR	9006343	PrimaryExpression	1		9006143	1					
ANR	9006344	IfStatement	if ( s -> cr [ 0x06 ] == 100 )		9006143	7					
ANR	9006345	Condition	s -> cr [ 0x06 ] == 100	35:12:1039:1056	9006143	0	True				
ANR	9006346	EqualityExpression	s -> cr [ 0x06 ] == 100		9006143	0		==			
ANR	9006347	ArrayIndexing	s -> cr [ 0x06 ]		9006143	0					
ANR	9006348	PtrMemberAccess	s -> cr		9006143	0					
ANR	9006349	Identifier	s		9006143	0					
ANR	9006350	Identifier	cr		9006143	1					
ANR	9006351	PrimaryExpression	0x06		9006143	1					
ANR	9006352	PrimaryExpression	100		9006143	1					
ANR	9006353	CompoundStatement		34:32:992:992	9006143	1					
ANR	9006354	ExpressionStatement	height = 100	37:12:1143:1155	9006143	0	True				
ANR	9006355	AssignmentExpression	height = 100		9006143	0		=			
ANR	9006356	Identifier	height		9006143	0					
ANR	9006357	PrimaryExpression	100		9006143	1					
ANR	9006358	ElseStatement	else		9006143	0					
ANR	9006359	CompoundStatement		37:15:1105:1105	9006143	0					
ANR	9006360	ExpressionStatement	height = s -> cr [ 0x12 ] | ( ( s -> cr [ 0x07 ] & 0x02 ) << 7 ) | ( ( s -> cr [ 0x07 ] & 0x40 ) << 3 )	39:12:1186:1300	9006143	0	True				
ANR	9006361	AssignmentExpression	height = s -> cr [ 0x12 ] | ( ( s -> cr [ 0x07 ] & 0x02 ) << 7 ) | ( ( s -> cr [ 0x07 ] & 0x40 ) << 3 )		9006143	0		=			
ANR	9006362	Identifier	height		9006143	0					
ANR	9006363	InclusiveOrExpression	s -> cr [ 0x12 ] | ( ( s -> cr [ 0x07 ] & 0x02 ) << 7 ) | ( ( s -> cr [ 0x07 ] & 0x40 ) << 3 )		9006143	1		|			
ANR	9006364	ArrayIndexing	s -> cr [ 0x12 ]		9006143	0					
ANR	9006365	PtrMemberAccess	s -> cr		9006143	0					
ANR	9006366	Identifier	s		9006143	0					
ANR	9006367	Identifier	cr		9006143	1					
ANR	9006368	PrimaryExpression	0x12		9006143	1					
ANR	9006369	InclusiveOrExpression	( ( s -> cr [ 0x07 ] & 0x02 ) << 7 ) | ( ( s -> cr [ 0x07 ] & 0x40 ) << 3 )		9006143	1		|			
ANR	9006370	ShiftExpression	( s -> cr [ 0x07 ] & 0x02 ) << 7		9006143	0		<<			
ANR	9006371	BitAndExpression	s -> cr [ 0x07 ] & 0x02		9006143	0		&			
ANR	9006372	ArrayIndexing	s -> cr [ 0x07 ]		9006143	0					
ANR	9006373	PtrMemberAccess	s -> cr		9006143	0					
ANR	9006374	Identifier	s		9006143	0					
ANR	9006375	Identifier	cr		9006143	1					
ANR	9006376	PrimaryExpression	0x07		9006143	1					
ANR	9006377	PrimaryExpression	0x02		9006143	1					
ANR	9006378	PrimaryExpression	7		9006143	1					
ANR	9006379	ShiftExpression	( s -> cr [ 0x07 ] & 0x40 ) << 3		9006143	1		<<			
ANR	9006380	BitAndExpression	s -> cr [ 0x07 ] & 0x40		9006143	0		&			
ANR	9006381	ArrayIndexing	s -> cr [ 0x07 ]		9006143	0					
ANR	9006382	PtrMemberAccess	s -> cr		9006143	0					
ANR	9006383	Identifier	s		9006143	0					
ANR	9006384	Identifier	cr		9006143	1					
ANR	9006385	PrimaryExpression	0x07		9006143	1					
ANR	9006386	PrimaryExpression	0x40		9006143	1					
ANR	9006387	PrimaryExpression	3		9006143	1					
ANR	9006388	ExpressionStatement	height = ( height + 1 ) / cheight	42:12:1314:1345	9006143	1	True				
ANR	9006389	AssignmentExpression	height = ( height + 1 ) / cheight		9006143	0		=			
ANR	9006390	Identifier	height		9006143	0					
ANR	9006391	MultiplicativeExpression	( height + 1 ) / cheight		9006143	1		/			
ANR	9006392	AdditiveExpression	height + 1		9006143	0		+			
ANR	9006393	Identifier	height		9006143	0					
ANR	9006394	PrimaryExpression	1		9006143	1					
ANR	9006395	Identifier	cheight		9006143	1					
ANR	9006396	ExpressionStatement	size = ( height * width )	44:8:1365:1388	9006143	8	True				
ANR	9006397	AssignmentExpression	size = ( height * width )		9006143	0		=			
ANR	9006398	Identifier	size		9006143	0					
ANR	9006399	MultiplicativeExpression	height * width		9006143	1		*			
ANR	9006400	Identifier	height		9006143	0					
ANR	9006401	Identifier	width		9006143	1					
ANR	9006402	IfStatement	if ( size > CH_ATTR_SIZE )		9006143	9					
ANR	9006403	Condition	size > CH_ATTR_SIZE	45:12:1402:1420	9006143	0	True				
ANR	9006404	RelationalExpression	size > CH_ATTR_SIZE		9006143	0		>			
ANR	9006405	Identifier	size		9006143	0					
ANR	9006406	Identifier	CH_ATTR_SIZE		9006143	1					
ANR	9006407	CompoundStatement		44:33:1356:1356	9006143	1					
ANR	9006408	IfStatement	if ( ! full_update )		9006143	0					
ANR	9006409	Condition	! full_update	46:16:1441:1452	9006143	0	True				
ANR	9006410	UnaryOperationExpression	! full_update		9006143	0					
ANR	9006411	UnaryOperator	!		9006143	0					
ANR	9006412	Identifier	full_update		9006143	1					
ANR	9006413	ReturnStatement	return ;	47:16:1471:1477	9006143	1	True				
ANR	9006414	ExpressionStatement	"snprintf ( msg_buffer , sizeof ( msg_buffer ) , ""%i x %i Text mode"" , width , height )"	48:12:1491:1588	9006143	1	True				
ANR	9006415	CallExpression	"snprintf ( msg_buffer , sizeof ( msg_buffer ) , ""%i x %i Text mode"" , width , height )"		9006143	0					
ANR	9006416	Callee	snprintf		9006143	0					
ANR	9006417	Identifier	snprintf		9006143	0					
ANR	9006418	ArgumentList	msg_buffer		9006143	1					
ANR	9006419	Argument	msg_buffer		9006143	0					
ANR	9006420	Identifier	msg_buffer		9006143	0					
ANR	9006421	Argument	sizeof ( msg_buffer )		9006143	1					
ANR	9006422	SizeofExpression	sizeof ( msg_buffer )		9006143	0					
ANR	9006423	Sizeof	sizeof		9006143	0					
ANR	9006424	SizeofOperand	msg_buffer		9006143	1					
ANR	9006425	Argument	"""%i x %i Text mode"""		9006143	2					
ANR	9006426	PrimaryExpression	"""%i x %i Text mode"""		9006143	0					
ANR	9006427	Argument	width		9006143	3					
ANR	9006428	Identifier	width		9006143	0					
ANR	9006429	Argument	height		9006143	4					
ANR	9006430	Identifier	height		9006143	0					
ANR	9006431	BreakStatement	break ;	50:12:1602:1607	9006143	2	True				
ANR	9006432	IfStatement	if ( width != s -> last_width || height != s -> last_height || cw != s -> last_cw || cheight != s -> last_ch )		9006143	10					
ANR	9006433	Condition	width != s -> last_width || height != s -> last_height || cw != s -> last_cw || cheight != s -> last_ch	52:12:1631:1737	9006143	0	True				
ANR	9006434	OrExpression	width != s -> last_width || height != s -> last_height || cw != s -> last_cw || cheight != s -> last_ch		9006143	0		||			
ANR	9006435	EqualityExpression	width != s -> last_width		9006143	0		!=			
ANR	9006436	Identifier	width		9006143	0					
ANR	9006437	PtrMemberAccess	s -> last_width		9006143	1					
ANR	9006438	Identifier	s		9006143	0					
ANR	9006439	Identifier	last_width		9006143	1					
ANR	9006440	OrExpression	height != s -> last_height || cw != s -> last_cw || cheight != s -> last_ch		9006143	1		||			
ANR	9006441	EqualityExpression	height != s -> last_height		9006143	0		!=			
ANR	9006442	Identifier	height		9006143	0					
ANR	9006443	PtrMemberAccess	s -> last_height		9006143	1					
ANR	9006444	Identifier	s		9006143	0					
ANR	9006445	Identifier	last_height		9006143	1					
ANR	9006446	OrExpression	cw != s -> last_cw || cheight != s -> last_ch		9006143	1		||			
ANR	9006447	EqualityExpression	cw != s -> last_cw		9006143	0		!=			
ANR	9006448	Identifier	cw		9006143	0					
ANR	9006449	PtrMemberAccess	s -> last_cw		9006143	1					
ANR	9006450	Identifier	s		9006143	0					
ANR	9006451	Identifier	last_cw		9006143	1					
ANR	9006452	EqualityExpression	cheight != s -> last_ch		9006143	1		!=			
ANR	9006453	Identifier	cheight		9006143	0					
ANR	9006454	PtrMemberAccess	s -> last_ch		9006143	1					
ANR	9006455	Identifier	s		9006143	0					
ANR	9006456	Identifier	last_ch		9006143	1					
ANR	9006457	CompoundStatement		52:55:1673:1673	9006143	1					
ANR	9006458	ExpressionStatement	s -> last_scr_width = width * cw	54:12:1754:1784	9006143	0	True				
ANR	9006459	AssignmentExpression	s -> last_scr_width = width * cw		9006143	0		=			
ANR	9006460	PtrMemberAccess	s -> last_scr_width		9006143	0					
ANR	9006461	Identifier	s		9006143	0					
ANR	9006462	Identifier	last_scr_width		9006143	1					
ANR	9006463	MultiplicativeExpression	width * cw		9006143	1		*			
ANR	9006464	Identifier	width		9006143	0					
ANR	9006465	Identifier	cw		9006143	1					
ANR	9006466	ExpressionStatement	s -> last_scr_height = height * cheight	55:12:1798:1835	9006143	1	True				
ANR	9006467	AssignmentExpression	s -> last_scr_height = height * cheight		9006143	0		=			
ANR	9006468	PtrMemberAccess	s -> last_scr_height		9006143	0					
ANR	9006469	Identifier	s		9006143	0					
ANR	9006470	Identifier	last_scr_height		9006143	1					
ANR	9006471	MultiplicativeExpression	height * cheight		9006143	1		*			
ANR	9006472	Identifier	height		9006143	0					
ANR	9006473	Identifier	cheight		9006143	1					
ANR	9006474	ExpressionStatement	s -> ds -> surface -> width = width	56:12:1849:1878	9006143	2	True				
ANR	9006475	AssignmentExpression	s -> ds -> surface -> width = width		9006143	0		=			
ANR	9006476	PtrMemberAccess	s -> ds -> surface -> width		9006143	0					
ANR	9006477	PtrMemberAccess	s -> ds -> surface		9006143	0					
ANR	9006478	PtrMemberAccess	s -> ds		9006143	0					
ANR	9006479	Identifier	s		9006143	0					
ANR	9006480	Identifier	ds		9006143	1					
ANR	9006481	Identifier	surface		9006143	1					
ANR	9006482	Identifier	width		9006143	1					
ANR	9006483	Identifier	width		9006143	1					
ANR	9006484	ExpressionStatement	s -> ds -> surface -> height = height	57:12:1892:1923	9006143	3	True				
ANR	9006485	AssignmentExpression	s -> ds -> surface -> height = height		9006143	0		=			
ANR	9006486	PtrMemberAccess	s -> ds -> surface -> height		9006143	0					
ANR	9006487	PtrMemberAccess	s -> ds -> surface		9006143	0					
ANR	9006488	PtrMemberAccess	s -> ds		9006143	0					
ANR	9006489	Identifier	s		9006143	0					
ANR	9006490	Identifier	ds		9006143	1					
ANR	9006491	Identifier	surface		9006143	1					
ANR	9006492	Identifier	height		9006143	1					
ANR	9006493	Identifier	height		9006143	1					
ANR	9006494	ExpressionStatement	dpy_resize ( s -> ds )	58:12:1937:1954	9006143	4	True				
ANR	9006495	CallExpression	dpy_resize ( s -> ds )		9006143	0					
ANR	9006496	Callee	dpy_resize		9006143	0					
ANR	9006497	Identifier	dpy_resize		9006143	0					
ANR	9006498	ArgumentList	s -> ds		9006143	1					
ANR	9006499	Argument	s -> ds		9006143	0					
ANR	9006500	PtrMemberAccess	s -> ds		9006143	0					
ANR	9006501	Identifier	s		9006143	0					
ANR	9006502	Identifier	ds		9006143	1					
ANR	9006503	ExpressionStatement	s -> last_width = width	59:12:1968:1989	9006143	5	True				
ANR	9006504	AssignmentExpression	s -> last_width = width		9006143	0		=			
ANR	9006505	PtrMemberAccess	s -> last_width		9006143	0					
ANR	9006506	Identifier	s		9006143	0					
ANR	9006507	Identifier	last_width		9006143	1					
ANR	9006508	Identifier	width		9006143	1					
ANR	9006509	ExpressionStatement	s -> last_height = height	60:12:2003:2026	9006143	6	True				
ANR	9006510	AssignmentExpression	s -> last_height = height		9006143	0		=			
ANR	9006511	PtrMemberAccess	s -> last_height		9006143	0					
ANR	9006512	Identifier	s		9006143	0					
ANR	9006513	Identifier	last_height		9006143	1					
ANR	9006514	Identifier	height		9006143	1					
ANR	9006515	ExpressionStatement	s -> last_ch = cheight	61:12:2040:2060	9006143	7	True				
ANR	9006516	AssignmentExpression	s -> last_ch = cheight		9006143	0		=			
ANR	9006517	PtrMemberAccess	s -> last_ch		9006143	0					
ANR	9006518	Identifier	s		9006143	0					
ANR	9006519	Identifier	last_ch		9006143	1					
ANR	9006520	Identifier	cheight		9006143	1					
ANR	9006521	ExpressionStatement	s -> last_cw = cw	62:12:2074:2089	9006143	8	True				
ANR	9006522	AssignmentExpression	s -> last_cw = cw		9006143	0		=			
ANR	9006523	PtrMemberAccess	s -> last_cw		9006143	0					
ANR	9006524	Identifier	s		9006143	0					
ANR	9006525	Identifier	last_cw		9006143	1					
ANR	9006526	Identifier	cw		9006143	1					
ANR	9006527	ExpressionStatement	full_update = 1	63:12:2103:2118	9006143	9	True				
ANR	9006528	AssignmentExpression	full_update = 1		9006143	0		=			
ANR	9006529	Identifier	full_update		9006143	0					
ANR	9006530	PrimaryExpression	1		9006143	1					
ANR	9006531	ExpressionStatement	cursor_offset = ( ( s -> cr [ 0x0e ] << 8 ) | s -> cr [ 0x0f ] ) - s -> start_addr	66:8:2177:2243	9006143	11	True				
ANR	9006532	AssignmentExpression	cursor_offset = ( ( s -> cr [ 0x0e ] << 8 ) | s -> cr [ 0x0f ] ) - s -> start_addr		9006143	0		=			
ANR	9006533	Identifier	cursor_offset		9006143	0					
ANR	9006534	AdditiveExpression	( ( s -> cr [ 0x0e ] << 8 ) | s -> cr [ 0x0f ] ) - s -> start_addr		9006143	1		-			
ANR	9006535	InclusiveOrExpression	( s -> cr [ 0x0e ] << 8 ) | s -> cr [ 0x0f ]		9006143	0		|			
ANR	9006536	ShiftExpression	s -> cr [ 0x0e ] << 8		9006143	0		<<			
ANR	9006537	ArrayIndexing	s -> cr [ 0x0e ]		9006143	0					
ANR	9006538	PtrMemberAccess	s -> cr		9006143	0					
ANR	9006539	Identifier	s		9006143	0					
ANR	9006540	Identifier	cr		9006143	1					
ANR	9006541	PrimaryExpression	0x0e		9006143	1					
ANR	9006542	PrimaryExpression	8		9006143	1					
ANR	9006543	ArrayIndexing	s -> cr [ 0x0f ]		9006143	1					
ANR	9006544	PtrMemberAccess	s -> cr		9006143	0					
ANR	9006545	Identifier	s		9006143	0					
ANR	9006546	Identifier	cr		9006143	1					
ANR	9006547	PrimaryExpression	0x0f		9006143	1					
ANR	9006548	PtrMemberAccess	s -> start_addr		9006143	1					
ANR	9006549	Identifier	s		9006143	0					
ANR	9006550	Identifier	start_addr		9006143	1					
ANR	9006551	IfStatement	if ( cursor_offset != s -> cursor_offset || s -> cr [ 0xa ] != s -> cursor_start || s -> cr [ 0xb ] != s -> cursor_end || full_update )		9006143	12					
ANR	9006552	Condition	cursor_offset != s -> cursor_offset || s -> cr [ 0xa ] != s -> cursor_start || s -> cr [ 0xb ] != s -> cursor_end || full_update	67:12:2257:2392	9006143	0	True				
ANR	9006553	OrExpression	cursor_offset != s -> cursor_offset || s -> cr [ 0xa ] != s -> cursor_start || s -> cr [ 0xb ] != s -> cursor_end || full_update		9006143	0		||			
ANR	9006554	EqualityExpression	cursor_offset != s -> cursor_offset		9006143	0		!=			
ANR	9006555	Identifier	cursor_offset		9006143	0					
ANR	9006556	PtrMemberAccess	s -> cursor_offset		9006143	1					
ANR	9006557	Identifier	s		9006143	0					
ANR	9006558	Identifier	cursor_offset		9006143	1					
ANR	9006559	OrExpression	s -> cr [ 0xa ] != s -> cursor_start || s -> cr [ 0xb ] != s -> cursor_end || full_update		9006143	1		||			
ANR	9006560	EqualityExpression	s -> cr [ 0xa ] != s -> cursor_start		9006143	0		!=			
ANR	9006561	ArrayIndexing	s -> cr [ 0xa ]		9006143	0					
ANR	9006562	PtrMemberAccess	s -> cr		9006143	0					
ANR	9006563	Identifier	s		9006143	0					
ANR	9006564	Identifier	cr		9006143	1					
ANR	9006565	PrimaryExpression	0xa		9006143	1					
ANR	9006566	PtrMemberAccess	s -> cursor_start		9006143	1					
ANR	9006567	Identifier	s		9006143	0					
ANR	9006568	Identifier	cursor_start		9006143	1					
ANR	9006569	OrExpression	s -> cr [ 0xb ] != s -> cursor_end || full_update		9006143	1		||			
ANR	9006570	EqualityExpression	s -> cr [ 0xb ] != s -> cursor_end		9006143	0		!=			
ANR	9006571	ArrayIndexing	s -> cr [ 0xb ]		9006143	0					
ANR	9006572	PtrMemberAccess	s -> cr		9006143	0					
ANR	9006573	Identifier	s		9006143	0					
ANR	9006574	Identifier	cr		9006143	1					
ANR	9006575	PrimaryExpression	0xb		9006143	1					
ANR	9006576	PtrMemberAccess	s -> cursor_end		9006143	1					
ANR	9006577	Identifier	s		9006143	0					
ANR	9006578	Identifier	cursor_end		9006143	1					
ANR	9006579	Identifier	full_update		9006143	1					
ANR	9006580	CompoundStatement		68:56:2328:2328	9006143	1					
ANR	9006581	ExpressionStatement	cursor_visible = ! ( s -> cr [ 0xa ] & 0x20 )	70:12:2409:2446	9006143	0	True				
ANR	9006582	AssignmentExpression	cursor_visible = ! ( s -> cr [ 0xa ] & 0x20 )		9006143	0		=			
ANR	9006583	Identifier	cursor_visible		9006143	0					
ANR	9006584	UnaryOperationExpression	! ( s -> cr [ 0xa ] & 0x20 )		9006143	1					
ANR	9006585	UnaryOperator	!		9006143	0					
ANR	9006586	BitAndExpression	s -> cr [ 0xa ] & 0x20		9006143	1		&			
ANR	9006587	ArrayIndexing	s -> cr [ 0xa ]		9006143	0					
ANR	9006588	PtrMemberAccess	s -> cr		9006143	0					
ANR	9006589	Identifier	s		9006143	0					
ANR	9006590	Identifier	cr		9006143	1					
ANR	9006591	PrimaryExpression	0xa		9006143	1					
ANR	9006592	PrimaryExpression	0x20		9006143	1					
ANR	9006593	IfStatement	if ( cursor_visible && cursor_offset < size && cursor_offset >= 0 )		9006143	1					
ANR	9006594	Condition	cursor_visible && cursor_offset < size && cursor_offset >= 0	71:16:2464:2523	9006143	0	True				
ANR	9006595	AndExpression	cursor_visible && cursor_offset < size && cursor_offset >= 0		9006143	0		&&			
ANR	9006596	Identifier	cursor_visible		9006143	0					
ANR	9006597	AndExpression	cursor_offset < size && cursor_offset >= 0		9006143	1		&&			
ANR	9006598	RelationalExpression	cursor_offset < size		9006143	0		<			
ANR	9006599	Identifier	cursor_offset		9006143	0					
ANR	9006600	Identifier	size		9006143	1					
ANR	9006601	RelationalExpression	cursor_offset >= 0		9006143	1		>=			
ANR	9006602	Identifier	cursor_offset		9006143	0					
ANR	9006603	PrimaryExpression	0		9006143	1					
ANR	9006604	ExpressionStatement	"dpy_cursor ( s -> ds , TEXTMODE_X ( cursor_offset ) , TEXTMODE_Y ( cursor_offset ) )"	72:16:2542:2667	9006143	1	True				
ANR	9006605	CallExpression	"dpy_cursor ( s -> ds , TEXTMODE_X ( cursor_offset ) , TEXTMODE_Y ( cursor_offset ) )"		9006143	0					
ANR	9006606	Callee	dpy_cursor		9006143	0					
ANR	9006607	Identifier	dpy_cursor		9006143	0					
ANR	9006608	ArgumentList	s -> ds		9006143	1					
ANR	9006609	Argument	s -> ds		9006143	0					
ANR	9006610	PtrMemberAccess	s -> ds		9006143	0					
ANR	9006611	Identifier	s		9006143	0					
ANR	9006612	Identifier	ds		9006143	1					
ANR	9006613	Argument	TEXTMODE_X ( cursor_offset )		9006143	1					
ANR	9006614	CallExpression	TEXTMODE_X ( cursor_offset )		9006143	0					
ANR	9006615	Callee	TEXTMODE_X		9006143	0					
ANR	9006616	Identifier	TEXTMODE_X		9006143	0					
ANR	9006617	ArgumentList	cursor_offset		9006143	1					
ANR	9006618	Argument	cursor_offset		9006143	0					
ANR	9006619	Identifier	cursor_offset		9006143	0					
ANR	9006620	Argument	TEXTMODE_Y ( cursor_offset )		9006143	2					
ANR	9006621	CallExpression	TEXTMODE_Y ( cursor_offset )		9006143	0					
ANR	9006622	Callee	TEXTMODE_Y		9006143	0					
ANR	9006623	Identifier	TEXTMODE_Y		9006143	0					
ANR	9006624	ArgumentList	cursor_offset		9006143	1					
ANR	9006625	Argument	cursor_offset		9006143	0					
ANR	9006626	Identifier	cursor_offset		9006143	0					
ANR	9006627	ElseStatement	else		9006143	0					
ANR	9006628	ExpressionStatement	"dpy_cursor ( s -> ds , - 1 , - 1 )"	76:16:2702:2727	9006143	0	True				
ANR	9006629	CallExpression	"dpy_cursor ( s -> ds , - 1 , - 1 )"		9006143	0					
ANR	9006630	Callee	dpy_cursor		9006143	0					
ANR	9006631	Identifier	dpy_cursor		9006143	0					
ANR	9006632	ArgumentList	s -> ds		9006143	1					
ANR	9006633	Argument	s -> ds		9006143	0					
ANR	9006634	PtrMemberAccess	s -> ds		9006143	0					
ANR	9006635	Identifier	s		9006143	0					
ANR	9006636	Identifier	ds		9006143	1					
ANR	9006637	Argument	- 1		9006143	1					
ANR	9006638	UnaryOperationExpression	- 1		9006143	0					
ANR	9006639	UnaryOperator	-		9006143	0					
ANR	9006640	PrimaryExpression	1		9006143	1					
ANR	9006641	Argument	- 1		9006143	2					
ANR	9006642	UnaryOperationExpression	- 1		9006143	0					
ANR	9006643	UnaryOperator	-		9006143	0					
ANR	9006644	PrimaryExpression	1		9006143	1					
ANR	9006645	ExpressionStatement	s -> cursor_offset = cursor_offset	77:12:2741:2773	9006143	2	True				
ANR	9006646	AssignmentExpression	s -> cursor_offset = cursor_offset		9006143	0		=			
ANR	9006647	PtrMemberAccess	s -> cursor_offset		9006143	0					
ANR	9006648	Identifier	s		9006143	0					
ANR	9006649	Identifier	cursor_offset		9006143	1					
ANR	9006650	Identifier	cursor_offset		9006143	1					
ANR	9006651	ExpressionStatement	s -> cursor_start = s -> cr [ 0xa ]	78:12:2787:2815	9006143	3	True				
ANR	9006652	AssignmentExpression	s -> cursor_start = s -> cr [ 0xa ]		9006143	0		=			
ANR	9006653	PtrMemberAccess	s -> cursor_start		9006143	0					
ANR	9006654	Identifier	s		9006143	0					
ANR	9006655	Identifier	cursor_start		9006143	1					
ANR	9006656	ArrayIndexing	s -> cr [ 0xa ]		9006143	1					
ANR	9006657	PtrMemberAccess	s -> cr		9006143	0					
ANR	9006658	Identifier	s		9006143	0					
ANR	9006659	Identifier	cr		9006143	1					
ANR	9006660	PrimaryExpression	0xa		9006143	1					
ANR	9006661	ExpressionStatement	s -> cursor_end = s -> cr [ 0xb ]	79:12:2829:2855	9006143	4	True				
ANR	9006662	AssignmentExpression	s -> cursor_end = s -> cr [ 0xb ]		9006143	0		=			
ANR	9006663	PtrMemberAccess	s -> cursor_end		9006143	0					
ANR	9006664	Identifier	s		9006143	0					
ANR	9006665	Identifier	cursor_end		9006143	1					
ANR	9006666	ArrayIndexing	s -> cr [ 0xb ]		9006143	1					
ANR	9006667	PtrMemberAccess	s -> cr		9006143	0					
ANR	9006668	Identifier	s		9006143	0					
ANR	9006669	Identifier	cr		9006143	1					
ANR	9006670	PrimaryExpression	0xb		9006143	1					
ANR	9006671	ExpressionStatement	src = ( uint32_t * ) s -> vram_ptr + s -> start_addr	81:8:2875:2921	9006143	13	True				
ANR	9006672	AssignmentExpression	src = ( uint32_t * ) s -> vram_ptr + s -> start_addr		9006143	0		=			
ANR	9006673	Identifier	src		9006143	0					
ANR	9006674	AdditiveExpression	( uint32_t * ) s -> vram_ptr + s -> start_addr		9006143	1		+			
ANR	9006675	CastExpression	( uint32_t * ) s -> vram_ptr		9006143	0					
ANR	9006676	CastTarget	uint32_t *		9006143	0					
ANR	9006677	PtrMemberAccess	s -> vram_ptr		9006143	1					
ANR	9006678	Identifier	s		9006143	0					
ANR	9006679	Identifier	vram_ptr		9006143	1					
ANR	9006680	PtrMemberAccess	s -> start_addr		9006143	1					
ANR	9006681	Identifier	s		9006143	0					
ANR	9006682	Identifier	start_addr		9006143	1					
ANR	9006683	ExpressionStatement	dst = chardata	82:8:2931:2945	9006143	14	True				
ANR	9006684	AssignmentExpression	dst = chardata		9006143	0		=			
ANR	9006685	Identifier	dst		9006143	0					
ANR	9006686	Identifier	chardata		9006143	1					
ANR	9006687	IfStatement	if ( full_update )		9006143	15					
ANR	9006688	Condition	full_update	83:12:2959:2969	9006143	0	True				
ANR	9006689	Identifier	full_update		9006143	0					
ANR	9006690	CompoundStatement		82:25:2905:2905	9006143	1					
ANR	9006691	ForStatement	"for ( i = 0 ; i < size ; src ++ , dst ++ , i ++ )"		9006143	0					
ANR	9006692	ForInit	i = 0 ;	84:17:2991:2996	9006143	0	True				
ANR	9006693	AssignmentExpression	i = 0		9006143	0		=			
ANR	9006694	Identifier	i		9006143	0					
ANR	9006695	PrimaryExpression	0		9006143	1					
ANR	9006696	Condition	i < size	84:24:2998:3005	9006143	1	True				
ANR	9006697	RelationalExpression	i < size		9006143	0		<			
ANR	9006698	Identifier	i		9006143	0					
ANR	9006699	Identifier	size		9006143	1					
ANR	9006700	Expression	"src ++ , dst ++ , i ++"	84:34:3008:3027	9006143	2	True				
ANR	9006701	PostIncDecOperationExpression	src ++		9006143	0					
ANR	9006702	Identifier	src		9006143	0					
ANR	9006703	IncDec	++		9006143	1					
ANR	9006704	Expression	"dst ++ , i ++"		9006143	1					
ANR	9006705	PostIncDecOperationExpression	dst ++		9006143	0					
ANR	9006706	Identifier	dst		9006143	0					
ANR	9006707	IncDec	++		9006143	1					
ANR	9006708	PostIncDecOperationExpression	i ++		9006143	1					
ANR	9006709	Identifier	i		9006143	0					
ANR	9006710	IncDec	++		9006143	1					
ANR	9006711	ExpressionStatement	"console_write_ch ( dst , VMEM2CHTYPE ( le32_to_cpu ( * src ) ) )"	85:16:3046:3099	9006143	3	True				
ANR	9006712	CallExpression	"console_write_ch ( dst , VMEM2CHTYPE ( le32_to_cpu ( * src ) ) )"		9006143	0					
ANR	9006713	Callee	console_write_ch		9006143	0					
ANR	9006714	Identifier	console_write_ch		9006143	0					
ANR	9006715	ArgumentList	dst		9006143	1					
ANR	9006716	Argument	dst		9006143	0					
ANR	9006717	Identifier	dst		9006143	0					
ANR	9006718	Argument	VMEM2CHTYPE ( le32_to_cpu ( * src ) )		9006143	1					
ANR	9006719	CallExpression	VMEM2CHTYPE ( le32_to_cpu ( * src ) )		9006143	0					
ANR	9006720	Callee	VMEM2CHTYPE		9006143	0					
ANR	9006721	Identifier	VMEM2CHTYPE		9006143	0					
ANR	9006722	ArgumentList	le32_to_cpu ( * src )		9006143	1					
ANR	9006723	Argument	le32_to_cpu ( * src )		9006143	0					
ANR	9006724	CallExpression	le32_to_cpu ( * src )		9006143	0					
ANR	9006725	Callee	le32_to_cpu		9006143	0					
ANR	9006726	Identifier	le32_to_cpu		9006143	0					
ANR	9006727	ArgumentList	* src		9006143	1					
ANR	9006728	Argument	* src		9006143	0					
ANR	9006729	UnaryOperationExpression	* src		9006143	0					
ANR	9006730	UnaryOperator	*		9006143	0					
ANR	9006731	Identifier	src		9006143	1					
ANR	9006732	ExpressionStatement	"dpy_update ( s -> ds , 0 , 0 , width , height )"	86:12:3113:3151	9006143	1	True				
ANR	9006733	CallExpression	"dpy_update ( s -> ds , 0 , 0 , width , height )"		9006143	0					
ANR	9006734	Callee	dpy_update		9006143	0					
ANR	9006735	Identifier	dpy_update		9006143	0					
ANR	9006736	ArgumentList	s -> ds		9006143	1					
ANR	9006737	Argument	s -> ds		9006143	0					
ANR	9006738	PtrMemberAccess	s -> ds		9006143	0					
ANR	9006739	Identifier	s		9006143	0					
ANR	9006740	Identifier	ds		9006143	1					
ANR	9006741	Argument	0		9006143	1					
ANR	9006742	PrimaryExpression	0		9006143	0					
ANR	9006743	Argument	0		9006143	2					
ANR	9006744	PrimaryExpression	0		9006143	0					
ANR	9006745	Argument	width		9006143	3					
ANR	9006746	Identifier	width		9006143	0					
ANR	9006747	Argument	height		9006143	4					
ANR	9006748	Identifier	height		9006143	0					
ANR	9006749	ElseStatement	else		9006143	0					
ANR	9006750	CompoundStatement		86:15:3101:3101	9006143	0					
ANR	9006751	ExpressionStatement	c_max = 0	88:12:3182:3191	9006143	0	True				
ANR	9006752	AssignmentExpression	c_max = 0		9006143	0		=			
ANR	9006753	Identifier	c_max		9006143	0					
ANR	9006754	PrimaryExpression	0		9006143	1					
ANR	9006755	ForStatement	"for ( i = 0 ; i < size ; src ++ , dst ++ , i ++ )"		9006143	1					
ANR	9006756	ForInit	i = 0 ;	89:17:3210:3215	9006143	0	True				
ANR	9006757	AssignmentExpression	i = 0		9006143	0		=			
ANR	9006758	Identifier	i		9006143	0					
ANR	9006759	PrimaryExpression	0		9006143	1					
ANR	9006760	Condition	i < size	89:24:3217:3224	9006143	1	True				
ANR	9006761	RelationalExpression	i < size		9006143	0		<			
ANR	9006762	Identifier	i		9006143	0					
ANR	9006763	Identifier	size		9006143	1					
ANR	9006764	Expression	"src ++ , dst ++ , i ++"	89:34:3227:3246	9006143	2	True				
ANR	9006765	PostIncDecOperationExpression	src ++		9006143	0					
ANR	9006766	Identifier	src		9006143	0					
ANR	9006767	IncDec	++		9006143	1					
ANR	9006768	Expression	"dst ++ , i ++"		9006143	1					
ANR	9006769	PostIncDecOperationExpression	dst ++		9006143	0					
ANR	9006770	Identifier	dst		9006143	0					
ANR	9006771	IncDec	++		9006143	1					
ANR	9006772	PostIncDecOperationExpression	i ++		9006143	1					
ANR	9006773	Identifier	i		9006143	0					
ANR	9006774	IncDec	++		9006143	1					
ANR	9006775	CompoundStatement		88:56:3182:3182	9006143	3					
ANR	9006776	ExpressionStatement	"console_write_ch ( & val , VMEM2CHTYPE ( le32_to_cpu ( * src ) ) )"	90:16:3267:3321	9006143	0	True				
ANR	9006777	CallExpression	"console_write_ch ( & val , VMEM2CHTYPE ( le32_to_cpu ( * src ) ) )"		9006143	0					
ANR	9006778	Callee	console_write_ch		9006143	0					
ANR	9006779	Identifier	console_write_ch		9006143	0					
ANR	9006780	ArgumentList	& val		9006143	1					
ANR	9006781	Argument	& val		9006143	0					
ANR	9006782	UnaryOperationExpression	& val		9006143	0					
ANR	9006783	UnaryOperator	&		9006143	0					
ANR	9006784	Identifier	val		9006143	1					
ANR	9006785	Argument	VMEM2CHTYPE ( le32_to_cpu ( * src ) )		9006143	1					
ANR	9006786	CallExpression	VMEM2CHTYPE ( le32_to_cpu ( * src ) )		9006143	0					
ANR	9006787	Callee	VMEM2CHTYPE		9006143	0					
ANR	9006788	Identifier	VMEM2CHTYPE		9006143	0					
ANR	9006789	ArgumentList	le32_to_cpu ( * src )		9006143	1					
ANR	9006790	Argument	le32_to_cpu ( * src )		9006143	0					
ANR	9006791	CallExpression	le32_to_cpu ( * src )		9006143	0					
ANR	9006792	Callee	le32_to_cpu		9006143	0					
ANR	9006793	Identifier	le32_to_cpu		9006143	0					
ANR	9006794	ArgumentList	* src		9006143	1					
ANR	9006795	Argument	* src		9006143	0					
ANR	9006796	UnaryOperationExpression	* src		9006143	0					
ANR	9006797	UnaryOperator	*		9006143	0					
ANR	9006798	Identifier	src		9006143	1					
ANR	9006799	IfStatement	if ( * dst != val )		9006143	1					
ANR	9006800	Condition	* dst != val	91:20:3343:3353	9006143	0	True				
ANR	9006801	EqualityExpression	* dst != val		9006143	0		!=			
ANR	9006802	UnaryOperationExpression	* dst		9006143	0					
ANR	9006803	UnaryOperator	*		9006143	0					
ANR	9006804	Identifier	dst		9006143	1					
ANR	9006805	Identifier	val		9006143	1					
ANR	9006806	CompoundStatement		90:33:3289:3289	9006143	1					
ANR	9006807	ExpressionStatement	* dst = val	92:20:3378:3388	9006143	0	True				
ANR	9006808	AssignmentExpression	* dst = val		9006143	0		=			
ANR	9006809	UnaryOperationExpression	* dst		9006143	0					
ANR	9006810	UnaryOperator	*		9006143	0					
ANR	9006811	Identifier	dst		9006143	1					
ANR	9006812	Identifier	val		9006143	1					
ANR	9006813	ExpressionStatement	c_max = i	93:20:3410:3419	9006143	1	True				
ANR	9006814	AssignmentExpression	c_max = i		9006143	0		=			
ANR	9006815	Identifier	c_max		9006143	0					
ANR	9006816	Identifier	i		9006143	1					
ANR	9006817	BreakStatement	break ;	94:20:3441:3446	9006143	2	True				
ANR	9006818	ExpressionStatement	c_min = i	97:12:3492:3501	9006143	2	True				
ANR	9006819	AssignmentExpression	c_min = i		9006143	0		=			
ANR	9006820	Identifier	c_min		9006143	0					
ANR	9006821	Identifier	i		9006143	1					
ANR	9006822	ForStatement	"for ( ; i < size ; src ++ , dst ++ , i ++ )"		9006143	3					
ANR	9006823	Condition	i < size	98:19:3522:3529	9006143	0	True				
ANR	9006824	RelationalExpression	i < size		9006143	0		<			
ANR	9006825	Identifier	i		9006143	0					
ANR	9006826	Identifier	size		9006143	1					
ANR	9006827	Expression	"src ++ , dst ++ , i ++"	98:29:3532:3551	9006143	1	True				
ANR	9006828	PostIncDecOperationExpression	src ++		9006143	0					
ANR	9006829	Identifier	src		9006143	0					
ANR	9006830	IncDec	++		9006143	1					
ANR	9006831	Expression	"dst ++ , i ++"		9006143	1					
ANR	9006832	PostIncDecOperationExpression	dst ++		9006143	0					
ANR	9006833	Identifier	dst		9006143	0					
ANR	9006834	IncDec	++		9006143	1					
ANR	9006835	PostIncDecOperationExpression	i ++		9006143	1					
ANR	9006836	Identifier	i		9006143	0					
ANR	9006837	IncDec	++		9006143	1					
ANR	9006838	CompoundStatement		97:51:3487:3487	9006143	2					
ANR	9006839	ExpressionStatement	"console_write_ch ( & val , VMEM2CHTYPE ( le32_to_cpu ( * src ) ) )"	99:16:3572:3626	9006143	0	True				
ANR	9006840	CallExpression	"console_write_ch ( & val , VMEM2CHTYPE ( le32_to_cpu ( * src ) ) )"		9006143	0					
ANR	9006841	Callee	console_write_ch		9006143	0					
ANR	9006842	Identifier	console_write_ch		9006143	0					
ANR	9006843	ArgumentList	& val		9006143	1					
ANR	9006844	Argument	& val		9006143	0					
ANR	9006845	UnaryOperationExpression	& val		9006143	0					
ANR	9006846	UnaryOperator	&		9006143	0					
ANR	9006847	Identifier	val		9006143	1					
ANR	9006848	Argument	VMEM2CHTYPE ( le32_to_cpu ( * src ) )		9006143	1					
ANR	9006849	CallExpression	VMEM2CHTYPE ( le32_to_cpu ( * src ) )		9006143	0					
ANR	9006850	Callee	VMEM2CHTYPE		9006143	0					
ANR	9006851	Identifier	VMEM2CHTYPE		9006143	0					
ANR	9006852	ArgumentList	le32_to_cpu ( * src )		9006143	1					
ANR	9006853	Argument	le32_to_cpu ( * src )		9006143	0					
ANR	9006854	CallExpression	le32_to_cpu ( * src )		9006143	0					
ANR	9006855	Callee	le32_to_cpu		9006143	0					
ANR	9006856	Identifier	le32_to_cpu		9006143	0					
ANR	9006857	ArgumentList	* src		9006143	1					
ANR	9006858	Argument	* src		9006143	0					
ANR	9006859	UnaryOperationExpression	* src		9006143	0					
ANR	9006860	UnaryOperator	*		9006143	0					
ANR	9006861	Identifier	src		9006143	1					
ANR	9006862	IfStatement	if ( * dst != val )		9006143	1					
ANR	9006863	Condition	* dst != val	100:20:3648:3658	9006143	0	True				
ANR	9006864	EqualityExpression	* dst != val		9006143	0		!=			
ANR	9006865	UnaryOperationExpression	* dst		9006143	0					
ANR	9006866	UnaryOperator	*		9006143	0					
ANR	9006867	Identifier	dst		9006143	1					
ANR	9006868	Identifier	val		9006143	1					
ANR	9006869	CompoundStatement		99:33:3594:3594	9006143	1					
ANR	9006870	ExpressionStatement	* dst = val	101:20:3683:3693	9006143	0	True				
ANR	9006871	AssignmentExpression	* dst = val		9006143	0		=			
ANR	9006872	UnaryOperationExpression	* dst		9006143	0					
ANR	9006873	UnaryOperator	*		9006143	0					
ANR	9006874	Identifier	dst		9006143	1					
ANR	9006875	Identifier	val		9006143	1					
ANR	9006876	ExpressionStatement	c_max = i	102:20:3715:3724	9006143	1	True				
ANR	9006877	AssignmentExpression	c_max = i		9006143	0		=			
ANR	9006878	Identifier	c_max		9006143	0					
ANR	9006879	Identifier	i		9006143	1					
ANR	9006880	IfStatement	if ( c_min <= c_max )		9006143	4					
ANR	9006881	Condition	c_min <= c_max	105:16:3774:3787	9006143	0	True				
ANR	9006882	RelationalExpression	c_min <= c_max		9006143	0		<=			
ANR	9006883	Identifier	c_min		9006143	0					
ANR	9006884	Identifier	c_max		9006143	1					
ANR	9006885	CompoundStatement		104:32:3723:3723	9006143	1					
ANR	9006886	ExpressionStatement	i = TEXTMODE_Y ( c_min )	106:16:3808:3829	9006143	0	True				
ANR	9006887	AssignmentExpression	i = TEXTMODE_Y ( c_min )		9006143	0		=			
ANR	9006888	Identifier	i		9006143	0					
ANR	9006889	CallExpression	TEXTMODE_Y ( c_min )		9006143	1					
ANR	9006890	Callee	TEXTMODE_Y		9006143	0					
ANR	9006891	Identifier	TEXTMODE_Y		9006143	0					
ANR	9006892	ArgumentList	c_min		9006143	1					
ANR	9006893	Argument	c_min		9006143	0					
ANR	9006894	Identifier	c_min		9006143	0					
ANR	9006895	ExpressionStatement	"dpy_update ( s -> ds , 0 , i , width , TEXTMODE_Y ( c_max ) - i + 1 )"	107:16:3847:3904	9006143	1	True				
ANR	9006896	CallExpression	"dpy_update ( s -> ds , 0 , i , width , TEXTMODE_Y ( c_max ) - i + 1 )"		9006143	0					
ANR	9006897	Callee	dpy_update		9006143	0					
ANR	9006898	Identifier	dpy_update		9006143	0					
ANR	9006899	ArgumentList	s -> ds		9006143	1					
ANR	9006900	Argument	s -> ds		9006143	0					
ANR	9006901	PtrMemberAccess	s -> ds		9006143	0					
ANR	9006902	Identifier	s		9006143	0					
ANR	9006903	Identifier	ds		9006143	1					
ANR	9006904	Argument	0		9006143	1					
ANR	9006905	PrimaryExpression	0		9006143	0					
ANR	9006906	Argument	i		9006143	2					
ANR	9006907	Identifier	i		9006143	0					
ANR	9006908	Argument	width		9006143	3					
ANR	9006909	Identifier	width		9006143	0					
ANR	9006910	Argument	TEXTMODE_Y ( c_max ) - i + 1		9006143	4					
ANR	9006911	AdditiveExpression	TEXTMODE_Y ( c_max ) - i + 1		9006143	0		-			
ANR	9006912	CallExpression	TEXTMODE_Y ( c_max )		9006143	0					
ANR	9006913	Callee	TEXTMODE_Y		9006143	0					
ANR	9006914	Identifier	TEXTMODE_Y		9006143	0					
ANR	9006915	ArgumentList	c_max		9006143	1					
ANR	9006916	Argument	c_max		9006143	0					
ANR	9006917	Identifier	c_max		9006143	0					
ANR	9006918	AdditiveExpression	i + 1		9006143	1		+			
ANR	9006919	Identifier	i		9006143	0					
ANR	9006920	PrimaryExpression	1		9006143	1					
ANR	9006921	ReturnStatement	return ;	110:8:3938:3944	9006143	16	True				
ANR	9006922	Label	case GMODE_GRAPH :	111:4:3950:3966	9006143	17	True				
ANR	9006923	Identifier	GMODE_GRAPH		9006143	0					
ANR	9006924	IfStatement	if ( ! full_update )		9006143	18					
ANR	9006925	Condition	! full_update	112:12:3980:3991	9006143	0	True				
ANR	9006926	UnaryOperationExpression	! full_update		9006143	0					
ANR	9006927	UnaryOperator	!		9006143	0					
ANR	9006928	Identifier	full_update		9006143	1					
ANR	9006929	ReturnStatement	return ;	113:12:4006:4012	9006143	1	True				
ANR	9006930	ExpressionStatement	"s -> get_resolution ( s , & width , & height )"	114:8:4022:4059	9006143	19	True				
ANR	9006931	CallExpression	"s -> get_resolution ( s , & width , & height )"		9006143	0					
ANR	9006932	Callee	s -> get_resolution		9006143	0					
ANR	9006933	PtrMemberAccess	s -> get_resolution		9006143	0					
ANR	9006934	Identifier	s		9006143	0					
ANR	9006935	Identifier	get_resolution		9006143	1					
ANR	9006936	ArgumentList	s		9006143	1					
ANR	9006937	Argument	s		9006143	0					
ANR	9006938	Identifier	s		9006143	0					
ANR	9006939	Argument	& width		9006143	1					
ANR	9006940	UnaryOperationExpression	& width		9006143	0					
ANR	9006941	UnaryOperator	&		9006143	0					
ANR	9006942	Identifier	width		9006143	1					
ANR	9006943	Argument	& height		9006143	2					
ANR	9006944	UnaryOperationExpression	& height		9006143	0					
ANR	9006945	UnaryOperator	&		9006143	0					
ANR	9006946	Identifier	height		9006143	1					
ANR	9006947	ExpressionStatement	"snprintf ( msg_buffer , sizeof ( msg_buffer ) , ""%i x %i Graphic mode"" , width , height )"	115:8:4069:4165	9006143	20	True				
ANR	9006948	CallExpression	"snprintf ( msg_buffer , sizeof ( msg_buffer ) , ""%i x %i Graphic mode"" , width , height )"		9006143	0					
ANR	9006949	Callee	snprintf		9006143	0					
ANR	9006950	Identifier	snprintf		9006143	0					
ANR	9006951	ArgumentList	msg_buffer		9006143	1					
ANR	9006952	Argument	msg_buffer		9006143	0					
ANR	9006953	Identifier	msg_buffer		9006143	0					
ANR	9006954	Argument	sizeof ( msg_buffer )		9006143	1					
ANR	9006955	SizeofExpression	sizeof ( msg_buffer )		9006143	0					
ANR	9006956	Sizeof	sizeof		9006143	0					
ANR	9006957	SizeofOperand	msg_buffer		9006143	1					
ANR	9006958	Argument	"""%i x %i Graphic mode"""		9006143	2					
ANR	9006959	PrimaryExpression	"""%i x %i Graphic mode"""		9006143	0					
ANR	9006960	Argument	width		9006143	3					
ANR	9006961	Identifier	width		9006143	0					
ANR	9006962	Argument	height		9006143	4					
ANR	9006963	Identifier	height		9006143	0					
ANR	9006964	BreakStatement	break ;	117:8:4175:4180	9006143	21	True				
ANR	9006965	Label	case GMODE_BLANK :	118:4:4186:4202	9006143	22	True				
ANR	9006966	Identifier	GMODE_BLANK		9006143	0					
ANR	9006967	Label	default :	119:4:4208:4215	9006143	23	True				
ANR	9006968	Identifier	default		9006143	0					
ANR	9006969	IfStatement	if ( ! full_update )		9006143	24					
ANR	9006970	Condition	! full_update	120:12:4229:4240	9006143	0	True				
ANR	9006971	UnaryOperationExpression	! full_update		9006143	0					
ANR	9006972	UnaryOperator	!		9006143	0					
ANR	9006973	Identifier	full_update		9006143	1					
ANR	9006974	ReturnStatement	return ;	121:12:4255:4261	9006143	1	True				
ANR	9006975	ExpressionStatement	"snprintf ( msg_buffer , sizeof ( msg_buffer ) , ""VGA Blank mode"" )"	122:8:4271:4329	9006143	25	True				
ANR	9006976	CallExpression	"snprintf ( msg_buffer , sizeof ( msg_buffer ) , ""VGA Blank mode"" )"		9006143	0					
ANR	9006977	Callee	snprintf		9006143	0					
ANR	9006978	Identifier	snprintf		9006143	0					
ANR	9006979	ArgumentList	msg_buffer		9006143	1					
ANR	9006980	Argument	msg_buffer		9006143	0					
ANR	9006981	Identifier	msg_buffer		9006143	0					
ANR	9006982	Argument	sizeof ( msg_buffer )		9006143	1					
ANR	9006983	SizeofExpression	sizeof ( msg_buffer )		9006143	0					
ANR	9006984	Sizeof	sizeof		9006143	0					
ANR	9006985	SizeofOperand	msg_buffer		9006143	1					
ANR	9006986	Argument	"""VGA Blank mode"""		9006143	2					
ANR	9006987	PrimaryExpression	"""VGA Blank mode"""		9006143	0					
ANR	9006988	BreakStatement	break ;	123:8:4339:4344	9006143	26	True				
ANR	9006989	ExpressionStatement	s -> last_width = 60	126:4:4384:4402	9006143	11	True				
ANR	9006990	AssignmentExpression	s -> last_width = 60		9006143	0		=			
ANR	9006991	PtrMemberAccess	s -> last_width		9006143	0					
ANR	9006992	Identifier	s		9006143	0					
ANR	9006993	Identifier	last_width		9006143	1					
ANR	9006994	PrimaryExpression	60		9006143	1					
ANR	9006995	ExpressionStatement	s -> last_height = height = 3	127:4:4408:4435	9006143	12	True				
ANR	9006996	AssignmentExpression	s -> last_height = height = 3		9006143	0		=			
ANR	9006997	PtrMemberAccess	s -> last_height		9006143	0					
ANR	9006998	Identifier	s		9006143	0					
ANR	9006999	Identifier	last_height		9006143	1					
ANR	9007000	AssignmentExpression	height = 3		9006143	1		=			
ANR	9007001	Identifier	height		9006143	0					
ANR	9007002	PrimaryExpression	3		9006143	1					
ANR	9007003	ExpressionStatement	"dpy_cursor ( s -> ds , - 1 , - 1 )"	128:4:4441:4466	9006143	13	True				
ANR	9007004	CallExpression	"dpy_cursor ( s -> ds , - 1 , - 1 )"		9006143	0					
ANR	9007005	Callee	dpy_cursor		9006143	0					
ANR	9007006	Identifier	dpy_cursor		9006143	0					
ANR	9007007	ArgumentList	s -> ds		9006143	1					
ANR	9007008	Argument	s -> ds		9006143	0					
ANR	9007009	PtrMemberAccess	s -> ds		9006143	0					
ANR	9007010	Identifier	s		9006143	0					
ANR	9007011	Identifier	ds		9006143	1					
ANR	9007012	Argument	- 1		9006143	1					
ANR	9007013	UnaryOperationExpression	- 1		9006143	0					
ANR	9007014	UnaryOperator	-		9006143	0					
ANR	9007015	PrimaryExpression	1		9006143	1					
ANR	9007016	Argument	- 1		9006143	2					
ANR	9007017	UnaryOperationExpression	- 1		9006143	0					
ANR	9007018	UnaryOperator	-		9006143	0					
ANR	9007019	PrimaryExpression	1		9006143	1					
ANR	9007020	ExpressionStatement	s -> ds -> surface -> width = s -> last_width	129:4:4472:4509	9006143	14	True				
ANR	9007021	AssignmentExpression	s -> ds -> surface -> width = s -> last_width		9006143	0		=			
ANR	9007022	PtrMemberAccess	s -> ds -> surface -> width		9006143	0					
ANR	9007023	PtrMemberAccess	s -> ds -> surface		9006143	0					
ANR	9007024	PtrMemberAccess	s -> ds		9006143	0					
ANR	9007025	Identifier	s		9006143	0					
ANR	9007026	Identifier	ds		9006143	1					
ANR	9007027	Identifier	surface		9006143	1					
ANR	9007028	Identifier	width		9006143	1					
ANR	9007029	PtrMemberAccess	s -> last_width		9006143	1					
ANR	9007030	Identifier	s		9006143	0					
ANR	9007031	Identifier	last_width		9006143	1					
ANR	9007032	ExpressionStatement	s -> ds -> surface -> height = height	130:4:4515:4546	9006143	15	True				
ANR	9007033	AssignmentExpression	s -> ds -> surface -> height = height		9006143	0		=			
ANR	9007034	PtrMemberAccess	s -> ds -> surface -> height		9006143	0					
ANR	9007035	PtrMemberAccess	s -> ds -> surface		9006143	0					
ANR	9007036	PtrMemberAccess	s -> ds		9006143	0					
ANR	9007037	Identifier	s		9006143	0					
ANR	9007038	Identifier	ds		9006143	1					
ANR	9007039	Identifier	surface		9006143	1					
ANR	9007040	Identifier	height		9006143	1					
ANR	9007041	Identifier	height		9006143	1					
ANR	9007042	ExpressionStatement	dpy_resize ( s -> ds )	131:4:4552:4569	9006143	16	True				
ANR	9007043	CallExpression	dpy_resize ( s -> ds )		9006143	0					
ANR	9007044	Callee	dpy_resize		9006143	0					
ANR	9007045	Identifier	dpy_resize		9006143	0					
ANR	9007046	ArgumentList	s -> ds		9006143	1					
ANR	9007047	Argument	s -> ds		9006143	0					
ANR	9007048	PtrMemberAccess	s -> ds		9006143	0					
ANR	9007049	Identifier	s		9006143	0					
ANR	9007050	Identifier	ds		9006143	1					
ANR	9007051	ForStatement	"for ( dst = chardata , i = 0 ; i < s -> last_width * height ; i ++ )"		9006143	17					
ANR	9007052	ForInit	"dst = chardata , i = 0 ;"	132:9:4580:4601	9006143	0	True				
ANR	9007053	Expression	"dst = chardata , i = 0"		9006143	0					
ANR	9007054	AssignmentExpression	dst = chardata		9006143	0		=			
ANR	9007055	Identifier	dst		9006143	0					
ANR	9007056	Identifier	chardata		9006143	1					
ANR	9007057	AssignmentExpression	i = 0		9006143	1		=			
ANR	9007058	Identifier	i		9006143	0					
ANR	9007059	PrimaryExpression	0		9006143	1					
ANR	9007060	Condition	i < s -> last_width * height	132:32:4603:4628	9006143	1	True				
ANR	9007061	RelationalExpression	i < s -> last_width * height		9006143	0		<			
ANR	9007062	Identifier	i		9006143	0					
ANR	9007063	MultiplicativeExpression	s -> last_width * height		9006143	1		*			
ANR	9007064	PtrMemberAccess	s -> last_width		9006143	0					
ANR	9007065	Identifier	s		9006143	0					
ANR	9007066	Identifier	last_width		9006143	1					
ANR	9007067	Identifier	height		9006143	1					
ANR	9007068	PostIncDecOperationExpression	i ++	132:60:4631:4634	9006143	2	True				
ANR	9007069	Identifier	i		9006143	0					
ANR	9007070	IncDec	++		9006143	1					
ANR	9007071	ExpressionStatement	"console_write_ch ( dst ++ , ' ' )"	133:8:4645:4674	9006143	3	True				
ANR	9007072	CallExpression	"console_write_ch ( dst ++ , ' ' )"		9006143	0					
ANR	9007073	Callee	console_write_ch		9006143	0					
ANR	9007074	Identifier	console_write_ch		9006143	0					
ANR	9007075	ArgumentList	dst ++		9006143	1					
ANR	9007076	Argument	dst ++		9006143	0					
ANR	9007077	PostIncDecOperationExpression	dst ++		9006143	0					
ANR	9007078	Identifier	dst		9006143	0					
ANR	9007079	IncDec	++		9006143	1					
ANR	9007080	Argument	' '		9006143	1					
ANR	9007081	PrimaryExpression	' '		9006143	0					
ANR	9007082	ExpressionStatement	size = strlen ( msg_buffer )	134:4:4680:4705	9006143	18	True				
ANR	9007083	AssignmentExpression	size = strlen ( msg_buffer )		9006143	0		=			
ANR	9007084	Identifier	size		9006143	0					
ANR	9007085	CallExpression	strlen ( msg_buffer )		9006143	1					
ANR	9007086	Callee	strlen		9006143	0					
ANR	9007087	Identifier	strlen		9006143	0					
ANR	9007088	ArgumentList	msg_buffer		9006143	1					
ANR	9007089	Argument	msg_buffer		9006143	0					
ANR	9007090	Identifier	msg_buffer		9006143	0					
ANR	9007091	ExpressionStatement	width = ( s -> last_width - size ) / 2	135:4:4711:4745	9006143	19	True				
ANR	9007092	AssignmentExpression	width = ( s -> last_width - size ) / 2		9006143	0		=			
ANR	9007093	Identifier	width		9006143	0					
ANR	9007094	MultiplicativeExpression	( s -> last_width - size ) / 2		9006143	1		/			
ANR	9007095	AdditiveExpression	s -> last_width - size		9006143	0		-			
ANR	9007096	PtrMemberAccess	s -> last_width		9006143	0					
ANR	9007097	Identifier	s		9006143	0					
ANR	9007098	Identifier	last_width		9006143	1					
ANR	9007099	Identifier	size		9006143	1					
ANR	9007100	PrimaryExpression	2		9006143	1					
ANR	9007101	ExpressionStatement	dst = chardata + s -> last_width + width	136:4:4751:4789	9006143	20	True				
ANR	9007102	AssignmentExpression	dst = chardata + s -> last_width + width		9006143	0		=			
ANR	9007103	Identifier	dst		9006143	0					
ANR	9007104	AdditiveExpression	chardata + s -> last_width + width		9006143	1		+			
ANR	9007105	Identifier	chardata		9006143	0					
ANR	9007106	AdditiveExpression	s -> last_width + width		9006143	1		+			
ANR	9007107	PtrMemberAccess	s -> last_width		9006143	0					
ANR	9007108	Identifier	s		9006143	0					
ANR	9007109	Identifier	last_width		9006143	1					
ANR	9007110	Identifier	width		9006143	1					
ANR	9007111	ForStatement	for ( i = 0 ; i < size ; i ++ )		9006143	21					
ANR	9007112	ForInit	i = 0 ;	137:9:4800:4805	9006143	0	True				
ANR	9007113	AssignmentExpression	i = 0		9006143	0		=			
ANR	9007114	Identifier	i		9006143	0					
ANR	9007115	PrimaryExpression	0		9006143	1					
ANR	9007116	Condition	i < size	137:16:4807:4814	9006143	1	True				
ANR	9007117	RelationalExpression	i < size		9006143	0		<			
ANR	9007118	Identifier	i		9006143	0					
ANR	9007119	Identifier	size		9006143	1					
ANR	9007120	PostIncDecOperationExpression	i ++	137:26:4817:4820	9006143	2	True				
ANR	9007121	Identifier	i		9006143	0					
ANR	9007122	IncDec	++		9006143	1					
ANR	9007123	ExpressionStatement	"console_write_ch ( dst ++ , 0x00200100 | msg_buffer [ i ] )"	138:8:4831:4883	9006143	3	True				
ANR	9007124	CallExpression	"console_write_ch ( dst ++ , 0x00200100 | msg_buffer [ i ] )"		9006143	0					
ANR	9007125	Callee	console_write_ch		9006143	0					
ANR	9007126	Identifier	console_write_ch		9006143	0					
ANR	9007127	ArgumentList	dst ++		9006143	1					
ANR	9007128	Argument	dst ++		9006143	0					
ANR	9007129	PostIncDecOperationExpression	dst ++		9006143	0					
ANR	9007130	Identifier	dst		9006143	0					
ANR	9007131	IncDec	++		9006143	1					
ANR	9007132	Argument	0x00200100 | msg_buffer [ i ]		9006143	1					
ANR	9007133	InclusiveOrExpression	0x00200100 | msg_buffer [ i ]		9006143	0		|			
ANR	9007134	PrimaryExpression	0x00200100		9006143	0					
ANR	9007135	ArrayIndexing	msg_buffer [ i ]		9006143	1					
ANR	9007136	Identifier	msg_buffer		9006143	0					
ANR	9007137	Identifier	i		9006143	1					
ANR	9007138	ExpressionStatement	"dpy_update ( s -> ds , 0 , 0 , s -> last_width , height )"	139:4:4889:4935	9006143	22	True				
ANR	9007139	CallExpression	"dpy_update ( s -> ds , 0 , 0 , s -> last_width , height )"		9006143	0					
ANR	9007140	Callee	dpy_update		9006143	0					
ANR	9007141	Identifier	dpy_update		9006143	0					
ANR	9007142	ArgumentList	s -> ds		9006143	1					
ANR	9007143	Argument	s -> ds		9006143	0					
ANR	9007144	PtrMemberAccess	s -> ds		9006143	0					
ANR	9007145	Identifier	s		9006143	0					
ANR	9007146	Identifier	ds		9006143	1					
ANR	9007147	Argument	0		9006143	1					
ANR	9007148	PrimaryExpression	0		9006143	0					
ANR	9007149	Argument	0		9006143	2					
ANR	9007150	PrimaryExpression	0		9006143	0					
ANR	9007151	Argument	s -> last_width		9006143	3					
ANR	9007152	PtrMemberAccess	s -> last_width		9006143	0					
ANR	9007153	Identifier	s		9006143	0					
ANR	9007154	Identifier	last_width		9006143	1					
ANR	9007155	Argument	height		9006143	4					
ANR	9007156	Identifier	height		9006143	0					
ANR	9007157	ReturnType	static void		9006143	1					
ANR	9007158	Identifier	vga_update_text		9006143	2					
ANR	9007159	ParameterList	"void * opaque , console_ch_t * chardata"		9006143	3					
ANR	9007160	Parameter	void * opaque	1:28:28:39	9006143	0	True				
ANR	9007161	ParameterType	void *		9006143	0					
ANR	9007162	Identifier	opaque		9006143	1					
ANR	9007163	Parameter	console_ch_t * chardata	1:42:42:63	9006143	1	True				
ANR	9007164	ParameterType	console_ch_t *		9006143	0					
ANR	9007165	Identifier	chardata		9006143	1					
ANR	9007166	CFGEntryNode	ENTRY		9006143		True				
ANR	9007167	CFGExitNode	EXIT		9006143		True				
ANR	9007168	Symbol	& val		9006143						
ANR	9007169	Symbol	full_update		9006143						
ANR	9007170	Symbol	* s -> ds		9006143						
ANR	9007171	Symbol	cheight		9006143						
ANR	9007172	Symbol	& height		9006143						
ANR	9007173	Symbol	* src		9006143						
ANR	9007174	Symbol	* dst		9006143						
ANR	9007175	Symbol	strlen		9006143						
ANR	9007176	Symbol	s -> last_width		9006143						
ANR	9007177	Symbol	chardata		9006143						
ANR	9007178	Symbol	c_max		9006143						
ANR	9007179	Symbol	CH_ATTR_SIZE		9006143						
ANR	9007180	Symbol	s -> ds -> surface -> width		9006143						
ANR	9007181	Symbol	s -> last_scr_width		9006143						
ANR	9007182	Symbol	height		9006143						
ANR	9007183	Symbol	val		9006143						
ANR	9007184	Symbol	* s -> cr		9006143						
ANR	9007185	Symbol	update_basic_params		9006143						
ANR	9007186	Symbol	* s -> gr		9006143						
ANR	9007187	Symbol	s -> ar_index		9006143						
ANR	9007188	Symbol	s -> last_cw		9006143						
ANR	9007189	Symbol	* * * s		9006143						
ANR	9007190	Symbol	s -> last_scr_height		9006143						
ANR	9007191	Symbol	s -> start_addr		9006143						
ANR	9007192	Symbol	size		9006143						
ANR	9007193	Symbol	* * s -> ds		9006143						
ANR	9007194	Symbol	* s -> sr		9006143						
ANR	9007195	Symbol	s -> cursor_start		9006143						
ANR	9007196	Symbol	cursor_visible		9006143						
ANR	9007197	Symbol	s -> last_ch		9006143						
ANR	9007198	Symbol	graphic_mode		9006143						
ANR	9007199	Symbol	dst		9006143						
ANR	9007200	Symbol	& width		9006143						
ANR	9007201	Symbol	s -> cr		9006143						
ANR	9007202	Symbol	s -> ds -> surface		9006143						
ANR	9007203	Symbol	s -> last_height		9006143						
ANR	9007204	Symbol	s -> gr		9006143						
ANR	9007205	Symbol	VMEM2CHTYPE		9006143						
ANR	9007206	Symbol	cursor_offset		9006143						
ANR	9007207	Symbol	le32_to_cpu		9006143						
ANR	9007208	Symbol	* msg_buffer		9006143						
ANR	9007209	Symbol	* * s		9006143						
ANR	9007210	Symbol	msg_buffer		9006143						
ANR	9007211	Symbol	s -> sr		9006143						
ANR	9007212	Symbol	* s -> ds -> surface		9006143						
ANR	9007213	Symbol	s -> ds -> surface -> height		9006143						
ANR	9007214	Symbol	opaque		9006143						
ANR	9007215	Symbol	src		9006143						
ANR	9007216	Symbol	s -> vram_ptr		9006143						
ANR	9007217	Symbol	i		9006143						
ANR	9007218	Symbol	c_min		9006143						
ANR	9007219	Symbol	s -> cursor_offset		9006143						
ANR	9007220	Symbol	s -> ds		9006143						
ANR	9007221	Symbol	s		9006143						
ANR	9007222	Symbol	s -> graphic_mode		9006143						
ANR	9007223	Symbol	* i		9006143						
ANR	9007224	Symbol	cw		9006143						
ANR	9007225	Symbol	TEXTMODE_X		9006143						
ANR	9007226	Symbol	TEXTMODE_Y		9006143						
ANR	9007227	Symbol	width		9006143						
ANR	9007228	Symbol	* s		9006143						
ANR	9007229	Symbol	GMODE_BLANK		9006143						
ANR	9007230	Symbol	s -> cursor_end		9006143						
