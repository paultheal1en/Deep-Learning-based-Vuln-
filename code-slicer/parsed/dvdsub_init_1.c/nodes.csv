command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2885765	File	/home/p4ultr4n/workplace/ReVeal/raw_code/dvdsub_init_1.c								
ANR	2885766	Function	dvdsub_init	1:0:0:1158							
ANR	2885767	FunctionDef	dvdsub_init (AVCodecContext * avctx)		2885766	0					
ANR	2885768	CompoundStatement		3:0:55:1158	2885766	0					
ANR	2885769	IdentifierDeclStatement	DVDSubContext * ctx = avctx -> priv_data ;	5:4:62:99	2885766	0	True				
ANR	2885770	IdentifierDecl	* ctx = avctx -> priv_data		2885766	0					
ANR	2885771	IdentifierDeclType	DVDSubContext *		2885766	0					
ANR	2885772	Identifier	ctx		2885766	1					
ANR	2885773	AssignmentExpression	* ctx = avctx -> priv_data		2885766	2		=			
ANR	2885774	Identifier	ctx		2885766	0					
ANR	2885775	PtrMemberAccess	avctx -> priv_data		2885766	1					
ANR	2885776	Identifier	avctx		2885766	0					
ANR	2885777	Identifier	priv_data		2885766	1					
ANR	2885778	IdentifierDeclStatement	"char * data , * cur ;"	7:4:106:122	2885766	1	True				
ANR	2885779	IdentifierDecl	* data		2885766	0					
ANR	2885780	IdentifierDeclType	char *		2885766	0					
ANR	2885781	Identifier	data		2885766	1					
ANR	2885782	IdentifierDecl	* cur		2885766	1					
ANR	2885783	IdentifierDeclType	char *		2885766	0					
ANR	2885784	Identifier	cur		2885766	1					
ANR	2885785	IfStatement	if ( ! avctx -> extradata || ! avctx -> extradata_size )		2885766	2					
ANR	2885786	Condition	! avctx -> extradata || ! avctx -> extradata_size	11:8:135:177	2885766	0	True				
ANR	2885787	OrExpression	! avctx -> extradata || ! avctx -> extradata_size		2885766	0		||			
ANR	2885788	UnaryOperationExpression	! avctx -> extradata		2885766	0					
ANR	2885789	UnaryOperator	!		2885766	0					
ANR	2885790	PtrMemberAccess	avctx -> extradata		2885766	1					
ANR	2885791	Identifier	avctx		2885766	0					
ANR	2885792	Identifier	extradata		2885766	1					
ANR	2885793	UnaryOperationExpression	! avctx -> extradata_size		2885766	1					
ANR	2885794	UnaryOperator	!		2885766	0					
ANR	2885795	PtrMemberAccess	avctx -> extradata_size		2885766	1					
ANR	2885796	Identifier	avctx		2885766	0					
ANR	2885797	Identifier	extradata_size		2885766	1					
ANR	2885798	ReturnStatement	return 0 ;	13:8:189:197	2885766	1	True				
ANR	2885799	PrimaryExpression	0		2885766	0					
ANR	2885800	ExpressionStatement	data = av_malloc ( avctx -> extradata_size + 1 )	17:4:206:249	2885766	3	True				
ANR	2885801	AssignmentExpression	data = av_malloc ( avctx -> extradata_size + 1 )		2885766	0		=			
ANR	2885802	Identifier	data		2885766	0					
ANR	2885803	CallExpression	av_malloc ( avctx -> extradata_size + 1 )		2885766	1					
ANR	2885804	Callee	av_malloc		2885766	0					
ANR	2885805	Identifier	av_malloc		2885766	0					
ANR	2885806	ArgumentList	avctx -> extradata_size + 1		2885766	1					
ANR	2885807	Argument	avctx -> extradata_size + 1		2885766	0					
ANR	2885808	AdditiveExpression	avctx -> extradata_size + 1		2885766	0		+			
ANR	2885809	PtrMemberAccess	avctx -> extradata_size		2885766	0					
ANR	2885810	Identifier	avctx		2885766	0					
ANR	2885811	Identifier	extradata_size		2885766	1					
ANR	2885812	PrimaryExpression	1		2885766	1					
ANR	2885813	IfStatement	if ( ! data )		2885766	4					
ANR	2885814	Condition	! data	19:8:260:264	2885766	0	True				
ANR	2885815	UnaryOperationExpression	! data		2885766	0					
ANR	2885816	UnaryOperator	!		2885766	0					
ANR	2885817	Identifier	data		2885766	1					
ANR	2885818	ReturnStatement	return AVERROR ( ENOMEM ) ;	21:8:276:298	2885766	1	True				
ANR	2885819	CallExpression	AVERROR ( ENOMEM )		2885766	0					
ANR	2885820	Callee	AVERROR		2885766	0					
ANR	2885821	Identifier	AVERROR		2885766	0					
ANR	2885822	ArgumentList	ENOMEM		2885766	1					
ANR	2885823	Argument	ENOMEM		2885766	0					
ANR	2885824	Identifier	ENOMEM		2885766	0					
ANR	2885825	ExpressionStatement	"memcpy ( data , avctx -> extradata , avctx -> extradata_size )"	23:4:305:358	2885766	5	True				
ANR	2885826	CallExpression	"memcpy ( data , avctx -> extradata , avctx -> extradata_size )"		2885766	0					
ANR	2885827	Callee	memcpy		2885766	0					
ANR	2885828	Identifier	memcpy		2885766	0					
ANR	2885829	ArgumentList	data		2885766	1					
ANR	2885830	Argument	data		2885766	0					
ANR	2885831	Identifier	data		2885766	0					
ANR	2885832	Argument	avctx -> extradata		2885766	1					
ANR	2885833	PtrMemberAccess	avctx -> extradata		2885766	0					
ANR	2885834	Identifier	avctx		2885766	0					
ANR	2885835	Identifier	extradata		2885766	1					
ANR	2885836	Argument	avctx -> extradata_size		2885766	2					
ANR	2885837	PtrMemberAccess	avctx -> extradata_size		2885766	0					
ANR	2885838	Identifier	avctx		2885766	0					
ANR	2885839	Identifier	extradata_size		2885766	1					
ANR	2885840	ExpressionStatement	data [ avctx -> extradata_size ] = '\\0'	25:4:365:399	2885766	6	True				
ANR	2885841	AssignmentExpression	data [ avctx -> extradata_size ] = '\\0'		2885766	0		=			
ANR	2885842	ArrayIndexing	data [ avctx -> extradata_size ]		2885766	0					
ANR	2885843	Identifier	data		2885766	0					
ANR	2885844	PtrMemberAccess	avctx -> extradata_size		2885766	1					
ANR	2885845	Identifier	avctx		2885766	0					
ANR	2885846	Identifier	extradata_size		2885766	1					
ANR	2885847	PrimaryExpression	'\\0'		2885766	1					
ANR	2885848	ExpressionStatement	cur = data	27:4:406:416	2885766	7	True				
ANR	2885849	AssignmentExpression	cur = data		2885766	0		=			
ANR	2885850	Identifier	cur		2885766	0					
ANR	2885851	Identifier	data		2885766	1					
ANR	2885852	WhileStatement	while ( * cur )		2885766	8					
ANR	2885853	Condition	* cur	31:11:432:435	2885766	0	True				
ANR	2885854	UnaryOperationExpression	* cur		2885766	0					
ANR	2885855	UnaryOperator	*		2885766	0					
ANR	2885856	Identifier	cur		2885766	1					
ANR	2885857	CompoundStatement		29:17:382:382	2885766	1					
ANR	2885858	IfStatement	"if ( strncmp ( ""palette:"" , cur , 8 ) == 0 )"		2885766	0					
ANR	2885859	Condition	"strncmp ( ""palette:"" , cur , 8 ) == 0"	33:12:453:484	2885766	0	True				
ANR	2885860	EqualityExpression	"strncmp ( ""palette:"" , cur , 8 ) == 0"		2885766	0		==			
ANR	2885861	CallExpression	"strncmp ( ""palette:"" , cur , 8 )"		2885766	0					
ANR	2885862	Callee	strncmp		2885766	0					
ANR	2885863	Identifier	strncmp		2885766	0					
ANR	2885864	ArgumentList	"""palette:"""		2885766	1					
ANR	2885865	Argument	"""palette:"""		2885766	0					
ANR	2885866	PrimaryExpression	"""palette:"""		2885766	0					
ANR	2885867	Argument	cur		2885766	1					
ANR	2885868	Identifier	cur		2885766	0					
ANR	2885869	Argument	8		2885766	2					
ANR	2885870	PrimaryExpression	8		2885766	0					
ANR	2885871	PrimaryExpression	0		2885766	1					
ANR	2885872	CompoundStatement		35:12:466:483	2885766	1					
ANR	2885873	IdentifierDeclStatement	int i ;	35:12:502:507	2885766	0	True				
ANR	2885874	IdentifierDecl	i		2885766	0					
ANR	2885875	IdentifierDeclType	int		2885766	0					
ANR	2885876	Identifier	i		2885766	1					
ANR	2885877	IdentifierDeclStatement	char * p = cur + 8 ;	37:12:522:539	2885766	1	True				
ANR	2885878	IdentifierDecl	* p = cur + 8		2885766	0					
ANR	2885879	IdentifierDeclType	char *		2885766	0					
ANR	2885880	Identifier	p		2885766	1					
ANR	2885881	AssignmentExpression	* p = cur + 8		2885766	2		=			
ANR	2885882	Identifier	p		2885766	0					
ANR	2885883	AdditiveExpression	cur + 8		2885766	1		+			
ANR	2885884	Identifier	cur		2885766	0					
ANR	2885885	PrimaryExpression	8		2885766	1					
ANR	2885886	ExpressionStatement	ctx -> has_palette = 1	39:12:554:574	2885766	2	True				
ANR	2885887	AssignmentExpression	ctx -> has_palette = 1		2885766	0		=			
ANR	2885888	PtrMemberAccess	ctx -> has_palette		2885766	0					
ANR	2885889	Identifier	ctx		2885766	0					
ANR	2885890	Identifier	has_palette		2885766	1					
ANR	2885891	PrimaryExpression	1		2885766	1					
ANR	2885892	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		2885766	3					
ANR	2885893	ForInit	i = 0 ;	41:17:594:599	2885766	0	True				
ANR	2885894	AssignmentExpression	i = 0		2885766	0		=			
ANR	2885895	Identifier	i		2885766	0					
ANR	2885896	PrimaryExpression	0		2885766	1					
ANR	2885897	Condition	i < 16	41:24:601:606	2885766	1	True				
ANR	2885898	RelationalExpression	i < 16		2885766	0		<			
ANR	2885899	Identifier	i		2885766	0					
ANR	2885900	PrimaryExpression	16		2885766	1					
ANR	2885901	PostIncDecOperationExpression	i ++	41:32:609:611	2885766	2	True				
ANR	2885902	Identifier	i		2885766	0					
ANR	2885903	IncDec	++		2885766	1					
ANR	2885904	CompoundStatement		39:37:558:558	2885766	3					
ANR	2885905	ExpressionStatement	"ctx -> palette [ i ] = strtoul ( p , & p , 16 )"	43:16:633:669	2885766	0	True				
ANR	2885906	AssignmentExpression	"ctx -> palette [ i ] = strtoul ( p , & p , 16 )"		2885766	0		=			
ANR	2885907	ArrayIndexing	ctx -> palette [ i ]		2885766	0					
ANR	2885908	PtrMemberAccess	ctx -> palette		2885766	0					
ANR	2885909	Identifier	ctx		2885766	0					
ANR	2885910	Identifier	palette		2885766	1					
ANR	2885911	Identifier	i		2885766	1					
ANR	2885912	CallExpression	"strtoul ( p , & p , 16 )"		2885766	1					
ANR	2885913	Callee	strtoul		2885766	0					
ANR	2885914	Identifier	strtoul		2885766	0					
ANR	2885915	ArgumentList	p		2885766	1					
ANR	2885916	Argument	p		2885766	0					
ANR	2885917	Identifier	p		2885766	0					
ANR	2885918	Argument	& p		2885766	1					
ANR	2885919	UnaryOperationExpression	& p		2885766	0					
ANR	2885920	UnaryOperator	&		2885766	0					
ANR	2885921	Identifier	p		2885766	1					
ANR	2885922	Argument	16		2885766	2					
ANR	2885923	PrimaryExpression	16		2885766	0					
ANR	2885924	WhileStatement	"while ( * p == ',' || av_isspace ( * p ) )"		2885766	1					
ANR	2885925	Condition	"* p == ',' || av_isspace ( * p )"	45:23:695:721	2885766	0	True				
ANR	2885926	OrExpression	"* p == ',' || av_isspace ( * p )"		2885766	0		||			
ANR	2885927	EqualityExpression	"* p == ','"		2885766	0		==			
ANR	2885928	UnaryOperationExpression	* p		2885766	0					
ANR	2885929	UnaryOperator	*		2885766	0					
ANR	2885930	Identifier	p		2885766	1					
ANR	2885931	PrimaryExpression	"','"		2885766	1					
ANR	2885932	CallExpression	av_isspace ( * p )		2885766	1					
ANR	2885933	Callee	av_isspace		2885766	0					
ANR	2885934	Identifier	av_isspace		2885766	0					
ANR	2885935	ArgumentList	* p		2885766	1					
ANR	2885936	Argument	* p		2885766	0					
ANR	2885937	UnaryOperationExpression	* p		2885766	0					
ANR	2885938	UnaryOperator	*		2885766	0					
ANR	2885939	Identifier	p		2885766	1					
ANR	2885940	ExpressionStatement	p ++	47:20:745:748	2885766	1	True				
ANR	2885941	PostIncDecOperationExpression	p ++		2885766	0					
ANR	2885942	Identifier	p		2885766	0					
ANR	2885943	IncDec	++		2885766	1					
ANR	2885944	ElseStatement	else		2885766	0					
ANR	2885945	IfStatement	"if ( ! strncmp ( ""size:"" , cur , 5 ) )"		2885766	0					
ANR	2885946	Condition	"! strncmp ( ""size:"" , cur , 5 )"	51:19:785:809	2885766	0	True				
ANR	2885947	UnaryOperationExpression	"! strncmp ( ""size:"" , cur , 5 )"		2885766	0					
ANR	2885948	UnaryOperator	!		2885766	0					
ANR	2885949	CallExpression	"strncmp ( ""size:"" , cur , 5 )"		2885766	1					
ANR	2885950	Callee	strncmp		2885766	0					
ANR	2885951	Identifier	strncmp		2885766	0					
ANR	2885952	ArgumentList	"""size:"""		2885766	1					
ANR	2885953	Argument	"""size:"""		2885766	0					
ANR	2885954	PrimaryExpression	"""size:"""		2885766	0					
ANR	2885955	Argument	cur		2885766	1					
ANR	2885956	Identifier	cur		2885766	0					
ANR	2885957	Argument	5		2885766	2					
ANR	2885958	PrimaryExpression	5		2885766	0					
ANR	2885959	CompoundStatement		51:12:771:779	2885766	1					
ANR	2885960	IdentifierDeclStatement	"int w , h ;"	53:12:827:835	2885766	0	True				
ANR	2885961	IdentifierDecl	w		2885766	0					
ANR	2885962	IdentifierDeclType	int		2885766	0					
ANR	2885963	Identifier	w		2885766	1					
ANR	2885964	IdentifierDecl	h		2885766	1					
ANR	2885965	IdentifierDeclType	int		2885766	0					
ANR	2885966	Identifier	h		2885766	1					
ANR	2885967	IfStatement	"if ( sscanf ( cur + 5 , ""%dx%d"" , & w , & h ) == 2 )"		2885766	1					
ANR	2885968	Condition	"sscanf ( cur + 5 , ""%dx%d"" , & w , & h ) == 2"	55:16:854:890	2885766	0	True				
ANR	2885969	EqualityExpression	"sscanf ( cur + 5 , ""%dx%d"" , & w , & h ) == 2"		2885766	0		==			
ANR	2885970	CallExpression	"sscanf ( cur + 5 , ""%dx%d"" , & w , & h )"		2885766	0					
ANR	2885971	Callee	sscanf		2885766	0					
ANR	2885972	Identifier	sscanf		2885766	0					
ANR	2885973	ArgumentList	cur + 5		2885766	1					
ANR	2885974	Argument	cur + 5		2885766	0					
ANR	2885975	AdditiveExpression	cur + 5		2885766	0		+			
ANR	2885976	Identifier	cur		2885766	0					
ANR	2885977	PrimaryExpression	5		2885766	1					
ANR	2885978	Argument	"""%dx%d"""		2885766	1					
ANR	2885979	PrimaryExpression	"""%dx%d"""		2885766	0					
ANR	2885980	Argument	& w		2885766	2					
ANR	2885981	UnaryOperationExpression	& w		2885766	0					
ANR	2885982	UnaryOperator	&		2885766	0					
ANR	2885983	Identifier	w		2885766	1					
ANR	2885984	Argument	& h		2885766	3					
ANR	2885985	UnaryOperationExpression	& h		2885766	0					
ANR	2885986	UnaryOperator	&		2885766	0					
ANR	2885987	Identifier	h		2885766	1					
ANR	2885988	PrimaryExpression	2		2885766	1					
ANR	2885989	CompoundStatement		55:15:855:895	2885766	1					
ANR	2885990	IdentifierDeclStatement	"int ret = ff_set_dimensions ( avctx , w , h ) ;"	57:15:911:951	2885766	0	True				
ANR	2885991	IdentifierDecl	"ret = ff_set_dimensions ( avctx , w , h )"		2885766	0					
ANR	2885992	IdentifierDeclType	int		2885766	0					
ANR	2885993	Identifier	ret		2885766	1					
ANR	2885994	AssignmentExpression	"ret = ff_set_dimensions ( avctx , w , h )"		2885766	2		=			
ANR	2885995	Identifier	ret		2885766	0					
ANR	2885996	CallExpression	"ff_set_dimensions ( avctx , w , h )"		2885766	1					
ANR	2885997	Callee	ff_set_dimensions		2885766	0					
ANR	2885998	Identifier	ff_set_dimensions		2885766	0					
ANR	2885999	ArgumentList	avctx		2885766	1					
ANR	2886000	Argument	avctx		2885766	0					
ANR	2886001	Identifier	avctx		2885766	0					
ANR	2886002	Argument	w		2885766	1					
ANR	2886003	Identifier	w		2885766	0					
ANR	2886004	Argument	h		2885766	2					
ANR	2886005	Identifier	h		2885766	0					
ANR	2886006	IfStatement	if ( ret < 0 )		2885766	1					
ANR	2886007	Condition	ret < 0	59:19:973:979	2885766	0	True				
ANR	2886008	RelationalExpression	ret < 0		2885766	0		<			
ANR	2886009	Identifier	ret		2885766	0					
ANR	2886010	PrimaryExpression	0		2885766	1					
ANR	2886011	ReturnStatement	return ret ;	61:19:1002:1012	2885766	1	True				
ANR	2886012	Identifier	ret		2885766	0					
ANR	2886013	ExpressionStatement	"cur += strcspn ( cur , ""\\n\\r"" )"	67:8:1049:1076	2885766	1	True				
ANR	2886014	AssignmentExpression	"cur += strcspn ( cur , ""\\n\\r"" )"		2885766	0		+=			
ANR	2886015	Identifier	cur		2885766	0					
ANR	2886016	CallExpression	"strcspn ( cur , ""\\n\\r"" )"		2885766	1					
ANR	2886017	Callee	strcspn		2885766	0					
ANR	2886018	Identifier	strcspn		2885766	0					
ANR	2886019	ArgumentList	cur		2885766	1					
ANR	2886020	Argument	cur		2885766	0					
ANR	2886021	Identifier	cur		2885766	0					
ANR	2886022	Argument	"""\\n\\r"""		2885766	1					
ANR	2886023	PrimaryExpression	"""\\n\\r"""		2885766	0					
ANR	2886024	ExpressionStatement	"cur += strspn ( cur , ""\\n\\r"" )"	69:8:1087:1113	2885766	2	True				
ANR	2886025	AssignmentExpression	"cur += strspn ( cur , ""\\n\\r"" )"		2885766	0		+=			
ANR	2886026	Identifier	cur		2885766	0					
ANR	2886027	CallExpression	"strspn ( cur , ""\\n\\r"" )"		2885766	1					
ANR	2886028	Callee	strspn		2885766	0					
ANR	2886029	Identifier	strspn		2885766	0					
ANR	2886030	ArgumentList	cur		2885766	1					
ANR	2886031	Argument	cur		2885766	0					
ANR	2886032	Identifier	cur		2885766	0					
ANR	2886033	Argument	"""\\n\\r"""		2885766	1					
ANR	2886034	PrimaryExpression	"""\\n\\r"""		2885766	0					
ANR	2886035	ExpressionStatement	av_free ( data )	73:4:1127:1140	2885766	9	True				
ANR	2886036	CallExpression	av_free ( data )		2885766	0					
ANR	2886037	Callee	av_free		2885766	0					
ANR	2886038	Identifier	av_free		2885766	0					
ANR	2886039	ArgumentList	data		2885766	1					
ANR	2886040	Argument	data		2885766	0					
ANR	2886041	Identifier	data		2885766	0					
ANR	2886042	ReturnStatement	return 0 ;	75:4:1147:1155	2885766	10	True				
ANR	2886043	PrimaryExpression	0		2885766	0					
ANR	2886044	ReturnType	static av_cold int		2885766	1					
ANR	2886045	Identifier	dvdsub_init		2885766	2					
ANR	2886046	ParameterList	AVCodecContext * avctx		2885766	3					
ANR	2886047	Parameter	AVCodecContext * avctx	1:31:31:51	2885766	0	True				
ANR	2886048	ParameterType	AVCodecContext *		2885766	0					
ANR	2886049	Identifier	avctx		2885766	1					
ANR	2886050	CFGEntryNode	ENTRY		2885766		True				
ANR	2886051	CFGExitNode	EXIT		2885766		True				
ANR	2886052	Symbol	av_malloc		2885766						
ANR	2886053	Symbol	cur		2885766						
ANR	2886054	Symbol	ENOMEM		2885766						
ANR	2886055	Symbol	data		2885766						
ANR	2886056	Symbol	* ctx -> palette		2885766						
ANR	2886057	Symbol	ctx -> has_palette		2885766						
ANR	2886058	Symbol	strcspn		2885766						
ANR	2886059	Symbol	strncmp		2885766						
ANR	2886060	Symbol	* cur		2885766						
ANR	2886061	Symbol	strtoul		2885766						
ANR	2886062	Symbol	avctx		2885766						
ANR	2886063	Symbol	* avctx -> extradata_size		2885766						
ANR	2886064	Symbol	ret		2885766						
ANR	2886065	Symbol	avctx -> extradata		2885766						
ANR	2886066	Symbol	ctx		2885766						
ANR	2886067	Symbol	ctx -> palette		2885766						
ANR	2886068	Symbol	avctx -> extradata_size		2885766						
ANR	2886069	Symbol	* * avctx		2885766						
ANR	2886070	Symbol	h		2885766						
ANR	2886071	Symbol	i		2885766						
ANR	2886072	Symbol	avctx -> priv_data		2885766						
ANR	2886073	Symbol	* ctx		2885766						
ANR	2886074	Symbol	& h		2885766						
ANR	2886075	Symbol	p		2885766						
ANR	2886076	Symbol	av_isspace		2885766						
ANR	2886077	Symbol	* avctx		2885766						
ANR	2886078	Symbol	ff_set_dimensions		2885766						
ANR	2886079	Symbol	* i		2885766						
ANR	2886080	Symbol	strspn		2885766						
ANR	2886081	Symbol	& p		2885766						
ANR	2886082	Symbol	sscanf		2885766						
ANR	2886083	Symbol	w		2885766						
ANR	2886084	Symbol	* p		2885766						
ANR	2886085	Symbol	AVERROR		2885766						
ANR	2886086	Symbol	* * ctx		2885766						
ANR	2886087	Symbol	* data		2885766						
ANR	2886088	Symbol	& w		2885766						
