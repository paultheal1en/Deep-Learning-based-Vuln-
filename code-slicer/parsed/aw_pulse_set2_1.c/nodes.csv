command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	914417	File	/home/p4ultr4n/workplace/ReVeal/raw_code/aw_pulse_set2_1.c								
ANR	914418	Function	aw_pulse_set2	1:0:0:3617							
ANR	914419	FunctionDef	"aw_pulse_set2 (WMAVoiceContext * s , GetBitContext * gb , int block_idx , AMRFixed * fcb)"		914418	0					
ANR	914420	CompoundStatement		5:0:123:3617	914418	0					
ANR	914421	IdentifierDeclStatement	uint16_t use_mask_mem [ 9 ] ;	7:4:130:154	914418	0	True				
ANR	914422	IdentifierDecl	use_mask_mem [ 9 ]		914418	0					
ANR	914423	IdentifierDeclType	uint16_t [ 9 ]		914418	0					
ANR	914424	Identifier	use_mask_mem		914418	1					
ANR	914425	PrimaryExpression	9		914418	2					
ANR	914426	IdentifierDeclStatement	uint16_t * use_mask = use_mask_mem + 2 ;	9:4:197:234	914418	1	True				
ANR	914427	IdentifierDecl	* use_mask = use_mask_mem + 2		914418	0					
ANR	914428	IdentifierDeclType	uint16_t *		914418	0					
ANR	914429	Identifier	use_mask		914418	1					
ANR	914430	AssignmentExpression	* use_mask = use_mask_mem + 2		914418	2		=			
ANR	914431	Identifier	use_mask		914418	0					
ANR	914432	AdditiveExpression	use_mask_mem + 2		914418	1		+			
ANR	914433	Identifier	use_mask_mem		914418	0					
ANR	914434	PrimaryExpression	2		914418	1					
ANR	914435	IdentifierDeclStatement	"int pulse_off = s -> aw_first_pulse_off [ block_idx ] , pulse_start , n , idx , range , aidx , start_off = 0 ;"	25:4:723:829	914418	2	True				
ANR	914436	IdentifierDecl	pulse_off = s -> aw_first_pulse_off [ block_idx ]		914418	0					
ANR	914437	IdentifierDeclType	int		914418	0					
ANR	914438	Identifier	pulse_off		914418	1					
ANR	914439	AssignmentExpression	pulse_off = s -> aw_first_pulse_off [ block_idx ]		914418	2		=			
ANR	914440	Identifier	pulse_off		914418	0					
ANR	914441	ArrayIndexing	s -> aw_first_pulse_off [ block_idx ]		914418	1					
ANR	914442	PtrMemberAccess	s -> aw_first_pulse_off		914418	0					
ANR	914443	Identifier	s		914418	0					
ANR	914444	Identifier	aw_first_pulse_off		914418	1					
ANR	914445	Identifier	block_idx		914418	1					
ANR	914446	IdentifierDecl	pulse_start		914418	1					
ANR	914447	IdentifierDeclType	int		914418	0					
ANR	914448	Identifier	pulse_start		914418	1					
ANR	914449	IdentifierDecl	n		914418	2					
ANR	914450	IdentifierDeclType	int		914418	0					
ANR	914451	Identifier	n		914418	1					
ANR	914452	IdentifierDecl	idx		914418	3					
ANR	914453	IdentifierDeclType	int		914418	0					
ANR	914454	Identifier	idx		914418	1					
ANR	914455	IdentifierDecl	range		914418	4					
ANR	914456	IdentifierDeclType	int		914418	0					
ANR	914457	Identifier	range		914418	1					
ANR	914458	IdentifierDecl	aidx		914418	5					
ANR	914459	IdentifierDeclType	int		914418	0					
ANR	914460	Identifier	aidx		914418	1					
ANR	914461	IdentifierDecl	start_off = 0		914418	6					
ANR	914462	IdentifierDeclType	int		914418	0					
ANR	914463	Identifier	start_off		914418	1					
ANR	914464	AssignmentExpression	start_off = 0		914418	2		=			
ANR	914465	Identifier	start_off		914418	0					
ANR	914466	PrimaryExpression	0		914418	1					
ANR	914467	IfStatement	if ( s -> aw_n_pulses [ block_idx ] > 0 )		914418	3					
ANR	914468	Condition	s -> aw_n_pulses [ block_idx ] > 0	33:8:900:928	914418	0	True				
ANR	914469	RelationalExpression	s -> aw_n_pulses [ block_idx ] > 0		914418	0		>			
ANR	914470	ArrayIndexing	s -> aw_n_pulses [ block_idx ]		914418	0					
ANR	914471	PtrMemberAccess	s -> aw_n_pulses		914418	0					
ANR	914472	Identifier	s		914418	0					
ANR	914473	Identifier	aw_n_pulses		914418	1					
ANR	914474	Identifier	block_idx		914418	1					
ANR	914475	PrimaryExpression	0		914418	1					
ANR	914476	WhileStatement	while ( pulse_off + s -> aw_pulse_range < 1 )		914418	1					
ANR	914477	Condition	pulse_off + s -> aw_pulse_range < 1	35:15:947:979	914418	0	True				
ANR	914478	RelationalExpression	pulse_off + s -> aw_pulse_range < 1		914418	0		<			
ANR	914479	AdditiveExpression	pulse_off + s -> aw_pulse_range		914418	0		+			
ANR	914480	Identifier	pulse_off		914418	0					
ANR	914481	PtrMemberAccess	s -> aw_pulse_range		914418	1					
ANR	914482	Identifier	s		914418	0					
ANR	914483	Identifier	aw_pulse_range		914418	1					
ANR	914484	PrimaryExpression	1		914418	1					
ANR	914485	ExpressionStatement	pulse_off += fcb -> pitch_lag	37:12:995:1022	914418	1	True				
ANR	914486	AssignmentExpression	pulse_off += fcb -> pitch_lag		914418	0		+=			
ANR	914487	Identifier	pulse_off		914418	0					
ANR	914488	PtrMemberAccess	fcb -> pitch_lag		914418	1					
ANR	914489	Identifier	fcb		914418	0					
ANR	914490	Identifier	pitch_lag		914418	1					
ANR	914491	IfStatement	if ( s -> aw_n_pulses [ 0 ] > 0 )		914418	4					
ANR	914492	Condition	s -> aw_n_pulses [ 0 ] > 0	43:8:1067:1087	914418	0	True				
ANR	914493	RelationalExpression	s -> aw_n_pulses [ 0 ] > 0		914418	0		>			
ANR	914494	ArrayIndexing	s -> aw_n_pulses [ 0 ]		914418	0					
ANR	914495	PtrMemberAccess	s -> aw_n_pulses		914418	0					
ANR	914496	Identifier	s		914418	0					
ANR	914497	Identifier	aw_n_pulses		914418	1					
ANR	914498	PrimaryExpression	0		914418	1					
ANR	914499	PrimaryExpression	0		914418	1					
ANR	914500	CompoundStatement		39:31:966:966	914418	1					
ANR	914501	IfStatement	if ( block_idx == 0 )		914418	0					
ANR	914502	Condition	block_idx == 0	45:12:1105:1118	914418	0	True				
ANR	914503	EqualityExpression	block_idx == 0		914418	0		==			
ANR	914504	Identifier	block_idx		914418	0					
ANR	914505	PrimaryExpression	0		914418	1					
ANR	914506	CompoundStatement		41:28:997:997	914418	1					
ANR	914507	ExpressionStatement	range = 32	47:12:1136:1146	914418	0	True				
ANR	914508	AssignmentExpression	range = 32		914418	0		=			
ANR	914509	Identifier	range		914418	0					
ANR	914510	PrimaryExpression	32		914418	1					
ANR	914511	ElseStatement	else		914418	0					
ANR	914512	CompoundStatement		45:35:1060:1060	914418	0					
ANR	914513	ExpressionStatement	range = 8	51:12:1199:1208	914418	0	True				
ANR	914514	AssignmentExpression	range = 8		914418	0		=			
ANR	914515	Identifier	range		914418	0					
ANR	914516	PrimaryExpression	8		914418	1					
ANR	914517	IfStatement	if ( s -> aw_n_pulses [ block_idx ] > 0 )		914418	1					
ANR	914518	Condition	s -> aw_n_pulses [ block_idx ] > 0	53:16:1227:1255	914418	0	True				
ANR	914519	RelationalExpression	s -> aw_n_pulses [ block_idx ] > 0		914418	0		>			
ANR	914520	ArrayIndexing	s -> aw_n_pulses [ block_idx ]		914418	0					
ANR	914521	PtrMemberAccess	s -> aw_n_pulses		914418	0					
ANR	914522	Identifier	s		914418	0					
ANR	914523	Identifier	aw_n_pulses		914418	1					
ANR	914524	Identifier	block_idx		914418	1					
ANR	914525	PrimaryExpression	0		914418	1					
ANR	914526	ExpressionStatement	pulse_off = s -> aw_next_pulse_off_cache	55:16:1275:1313	914418	1	True				
ANR	914527	AssignmentExpression	pulse_off = s -> aw_next_pulse_off_cache		914418	0		=			
ANR	914528	Identifier	pulse_off		914418	0					
ANR	914529	PtrMemberAccess	s -> aw_next_pulse_off_cache		914418	1					
ANR	914530	Identifier	s		914418	0					
ANR	914531	Identifier	aw_next_pulse_off_cache		914418	1					
ANR	914532	ElseStatement	else		914418	0					
ANR	914533	ExpressionStatement	range = 16	61:8:1347:1357	914418	0	True				
ANR	914534	AssignmentExpression	range = 16		914418	0		=			
ANR	914535	Identifier	range		914418	0					
ANR	914536	PrimaryExpression	16		914418	1					
ANR	914537	ExpressionStatement	pulse_start = s -> aw_n_pulses [ block_idx ] > 0 ? pulse_off - range / 2 : 0	63:4:1364:1435	914418	5	True				
ANR	914538	AssignmentExpression	pulse_start = s -> aw_n_pulses [ block_idx ] > 0 ? pulse_off - range / 2 : 0		914418	0		=			
ANR	914539	Identifier	pulse_start		914418	0					
ANR	914540	ConditionalExpression	s -> aw_n_pulses [ block_idx ] > 0 ? pulse_off - range / 2 : 0		914418	1					
ANR	914541	Condition	s -> aw_n_pulses [ block_idx ] > 0		914418	0					
ANR	914542	RelationalExpression	s -> aw_n_pulses [ block_idx ] > 0		914418	0		>			
ANR	914543	ArrayIndexing	s -> aw_n_pulses [ block_idx ]		914418	0					
ANR	914544	PtrMemberAccess	s -> aw_n_pulses		914418	0					
ANR	914545	Identifier	s		914418	0					
ANR	914546	Identifier	aw_n_pulses		914418	1					
ANR	914547	Identifier	block_idx		914418	1					
ANR	914548	PrimaryExpression	0		914418	1					
ANR	914549	AdditiveExpression	pulse_off - range / 2		914418	1		-			
ANR	914550	Identifier	pulse_off		914418	0					
ANR	914551	MultiplicativeExpression	range / 2		914418	1		/			
ANR	914552	Identifier	range		914418	0					
ANR	914553	PrimaryExpression	2		914418	1					
ANR	914554	PrimaryExpression	0		914418	2					
ANR	914555	ExpressionStatement	"memset ( & use_mask [ - 2 ] , 0 , 2 * sizeof ( use_mask [ 0 ] ) )"	73:4:1676:1725	914418	6	True				
ANR	914556	CallExpression	"memset ( & use_mask [ - 2 ] , 0 , 2 * sizeof ( use_mask [ 0 ] ) )"		914418	0					
ANR	914557	Callee	memset		914418	0					
ANR	914558	Identifier	memset		914418	0					
ANR	914559	ArgumentList	& use_mask [ - 2 ]		914418	1					
ANR	914560	Argument	& use_mask [ - 2 ]		914418	0					
ANR	914561	UnaryOperationExpression	& use_mask [ - 2 ]		914418	0					
ANR	914562	UnaryOperator	&		914418	0					
ANR	914563	ArrayIndexing	use_mask [ - 2 ]		914418	1					
ANR	914564	Identifier	use_mask		914418	0					
ANR	914565	UnaryOperationExpression	- 2		914418	1					
ANR	914566	UnaryOperator	-		914418	0					
ANR	914567	PrimaryExpression	2		914418	1					
ANR	914568	Argument	0		914418	1					
ANR	914569	PrimaryExpression	0		914418	0					
ANR	914570	Argument	2 * sizeof ( use_mask [ 0 ] )		914418	2					
ANR	914571	MultiplicativeExpression	2 * sizeof ( use_mask [ 0 ] )		914418	0		*			
ANR	914572	PrimaryExpression	2		914418	0					
ANR	914573	SizeofExpression	sizeof ( use_mask [ 0 ] )		914418	1					
ANR	914574	Sizeof	sizeof		914418	0					
ANR	914575	ArrayIndexing	use_mask [ 0 ]		914418	1					
ANR	914576	Identifier	use_mask		914418	0					
ANR	914577	PrimaryExpression	0		914418	1					
ANR	914578	ExpressionStatement	"memset ( use_mask , - 1 , 5 * sizeof ( use_mask [ 0 ] ) )"	75:4:1732:1780	914418	7	True				
ANR	914579	CallExpression	"memset ( use_mask , - 1 , 5 * sizeof ( use_mask [ 0 ] ) )"		914418	0					
ANR	914580	Callee	memset		914418	0					
ANR	914581	Identifier	memset		914418	0					
ANR	914582	ArgumentList	use_mask		914418	1					
ANR	914583	Argument	use_mask		914418	0					
ANR	914584	Identifier	use_mask		914418	0					
ANR	914585	Argument	- 1		914418	1					
ANR	914586	UnaryOperationExpression	- 1		914418	0					
ANR	914587	UnaryOperator	-		914418	0					
ANR	914588	PrimaryExpression	1		914418	1					
ANR	914589	Argument	5 * sizeof ( use_mask [ 0 ] )		914418	2					
ANR	914590	MultiplicativeExpression	5 * sizeof ( use_mask [ 0 ] )		914418	0		*			
ANR	914591	PrimaryExpression	5		914418	0					
ANR	914592	SizeofExpression	sizeof ( use_mask [ 0 ] )		914418	1					
ANR	914593	Sizeof	sizeof		914418	0					
ANR	914594	ArrayIndexing	use_mask [ 0 ]		914418	1					
ANR	914595	Identifier	use_mask		914418	0					
ANR	914596	PrimaryExpression	0		914418	1					
ANR	914597	ExpressionStatement	"memset ( & use_mask [ 5 ] , 0 , 2 * sizeof ( use_mask [ 0 ] ) )"	77:4:1787:1835	914418	8	True				
ANR	914598	CallExpression	"memset ( & use_mask [ 5 ] , 0 , 2 * sizeof ( use_mask [ 0 ] ) )"		914418	0					
ANR	914599	Callee	memset		914418	0					
ANR	914600	Identifier	memset		914418	0					
ANR	914601	ArgumentList	& use_mask [ 5 ]		914418	1					
ANR	914602	Argument	& use_mask [ 5 ]		914418	0					
ANR	914603	UnaryOperationExpression	& use_mask [ 5 ]		914418	0					
ANR	914604	UnaryOperator	&		914418	0					
ANR	914605	ArrayIndexing	use_mask [ 5 ]		914418	1					
ANR	914606	Identifier	use_mask		914418	0					
ANR	914607	PrimaryExpression	5		914418	1					
ANR	914608	Argument	0		914418	1					
ANR	914609	PrimaryExpression	0		914418	0					
ANR	914610	Argument	2 * sizeof ( use_mask [ 0 ] )		914418	2					
ANR	914611	MultiplicativeExpression	2 * sizeof ( use_mask [ 0 ] )		914418	0		*			
ANR	914612	PrimaryExpression	2		914418	0					
ANR	914613	SizeofExpression	sizeof ( use_mask [ 0 ] )		914418	1					
ANR	914614	Sizeof	sizeof		914418	0					
ANR	914615	ArrayIndexing	use_mask [ 0 ]		914418	1					
ANR	914616	Identifier	use_mask		914418	0					
ANR	914617	PrimaryExpression	0		914418	1					
ANR	914618	IfStatement	if ( s -> aw_n_pulses [ block_idx ] > 0 )		914418	9					
ANR	914619	Condition	s -> aw_n_pulses [ block_idx ] > 0	79:8:1846:1874	914418	0	True				
ANR	914620	RelationalExpression	s -> aw_n_pulses [ block_idx ] > 0		914418	0		>			
ANR	914621	ArrayIndexing	s -> aw_n_pulses [ block_idx ]		914418	0					
ANR	914622	PtrMemberAccess	s -> aw_n_pulses		914418	0					
ANR	914623	Identifier	s		914418	0					
ANR	914624	Identifier	aw_n_pulses		914418	1					
ANR	914625	Identifier	block_idx		914418	1					
ANR	914626	PrimaryExpression	0		914418	1					
ANR	914627	ForStatement	for ( idx = pulse_off ; idx < MAX_FRAMESIZE / 2 ; idx += fcb -> pitch_lag )		914418	1					
ANR	914628	ForInit	idx = pulse_off ;	81:13:1891:1906	914418	0	True				
ANR	914629	AssignmentExpression	idx = pulse_off		914418	0		=			
ANR	914630	Identifier	idx		914418	0					
ANR	914631	Identifier	pulse_off		914418	1					
ANR	914632	Condition	idx < MAX_FRAMESIZE / 2	81:30:1908:1930	914418	1	True				
ANR	914633	RelationalExpression	idx < MAX_FRAMESIZE / 2		914418	0		<			
ANR	914634	Identifier	idx		914418	0					
ANR	914635	MultiplicativeExpression	MAX_FRAMESIZE / 2		914418	1		/			
ANR	914636	Identifier	MAX_FRAMESIZE		914418	0					
ANR	914637	PrimaryExpression	2		914418	1					
ANR	914638	AssignmentExpression	idx += fcb -> pitch_lag	81:55:1933:1953	914418	2	True	+=			
ANR	914639	Identifier	idx		914418	0					
ANR	914640	PtrMemberAccess	fcb -> pitch_lag		914418	1					
ANR	914641	Identifier	fcb		914418	0					
ANR	914642	Identifier	pitch_lag		914418	1					
ANR	914643	CompoundStatement		83:12:1982:2022	914418	3					
ANR	914644	IdentifierDeclStatement	int excl_range = s -> aw_pulse_range ;	83:12:1971:2013	914418	0	True				
ANR	914645	IdentifierDecl	excl_range = s -> aw_pulse_range		914418	0					
ANR	914646	IdentifierDeclType	int		914418	0					
ANR	914647	Identifier	excl_range		914418	1					
ANR	914648	AssignmentExpression	excl_range = s -> aw_pulse_range		914418	2		=			
ANR	914649	Identifier	excl_range		914418	0					
ANR	914650	PtrMemberAccess	s -> aw_pulse_range		914418	1					
ANR	914651	Identifier	s		914418	0					
ANR	914652	Identifier	aw_pulse_range		914418	1					
ANR	914653	IdentifierDeclStatement	uint16_t * use_mask_ptr = & use_mask [ idx >> 4 ] ;	85:12:2047:2091	914418	1	True				
ANR	914654	IdentifierDecl	* use_mask_ptr = & use_mask [ idx >> 4 ]		914418	0					
ANR	914655	IdentifierDeclType	uint16_t *		914418	0					
ANR	914656	Identifier	use_mask_ptr		914418	1					
ANR	914657	AssignmentExpression	* use_mask_ptr = & use_mask [ idx >> 4 ]		914418	2		=			
ANR	914658	Identifier	use_mask_ptr		914418	0					
ANR	914659	UnaryOperationExpression	& use_mask [ idx >> 4 ]		914418	1					
ANR	914660	UnaryOperator	&		914418	0					
ANR	914661	ArrayIndexing	use_mask [ idx >> 4 ]		914418	1					
ANR	914662	Identifier	use_mask		914418	0					
ANR	914663	ShiftExpression	idx >> 4		914418	1		>>			
ANR	914664	Identifier	idx		914418	0					
ANR	914665	PrimaryExpression	4		914418	1					
ANR	914666	IdentifierDeclStatement	int first_sh = 16 - ( idx & 15 ) ;	87:12:2106:2146	914418	2	True				
ANR	914667	IdentifierDecl	first_sh = 16 - ( idx & 15 )		914418	0					
ANR	914668	IdentifierDeclType	int		914418	0					
ANR	914669	Identifier	first_sh		914418	1					
ANR	914670	AssignmentExpression	first_sh = 16 - ( idx & 15 )		914418	2		=			
ANR	914671	Identifier	first_sh		914418	0					
ANR	914672	AdditiveExpression	16 - ( idx & 15 )		914418	1		-			
ANR	914673	PrimaryExpression	16		914418	0					
ANR	914674	BitAndExpression	idx & 15		914418	1		&			
ANR	914675	Identifier	idx		914418	0					
ANR	914676	PrimaryExpression	15		914418	1					
ANR	914677	ExpressionStatement	* use_mask_ptr ++ &= 0xFFFF << first_sh	89:12:2161:2204	914418	3	True				
ANR	914678	AssignmentExpression	* use_mask_ptr ++ &= 0xFFFF << first_sh		914418	0		&=			
ANR	914679	UnaryOperationExpression	* use_mask_ptr ++		914418	0					
ANR	914680	UnaryOperator	*		914418	0					
ANR	914681	PostIncDecOperationExpression	use_mask_ptr ++		914418	1					
ANR	914682	Identifier	use_mask_ptr		914418	0					
ANR	914683	IncDec	++		914418	1					
ANR	914684	ShiftExpression	0xFFFF << first_sh		914418	1		<<			
ANR	914685	PrimaryExpression	0xFFFF		914418	0					
ANR	914686	Identifier	first_sh		914418	1					
ANR	914687	ExpressionStatement	excl_range -= first_sh	91:12:2219:2252	914418	4	True				
ANR	914688	AssignmentExpression	excl_range -= first_sh		914418	0		-=			
ANR	914689	Identifier	excl_range		914418	0					
ANR	914690	Identifier	first_sh		914418	1					
ANR	914691	IfStatement	if ( excl_range >= 16 )		914418	5					
ANR	914692	Condition	excl_range >= 16	93:16:2271:2286	914418	0	True				
ANR	914693	RelationalExpression	excl_range >= 16		914418	0		>=			
ANR	914694	Identifier	excl_range		914418	0					
ANR	914695	PrimaryExpression	16		914418	1					
ANR	914696	CompoundStatement		89:34:2165:2165	914418	1					
ANR	914697	ExpressionStatement	* use_mask_ptr ++ = 0	95:16:2308:2330	914418	0	True				
ANR	914698	AssignmentExpression	* use_mask_ptr ++ = 0		914418	0		=			
ANR	914699	UnaryOperationExpression	* use_mask_ptr ++		914418	0					
ANR	914700	UnaryOperator	*		914418	0					
ANR	914701	PostIncDecOperationExpression	use_mask_ptr ++		914418	1					
ANR	914702	Identifier	use_mask_ptr		914418	0					
ANR	914703	IncDec	++		914418	1					
ANR	914704	PrimaryExpression	0		914418	1					
ANR	914705	ExpressionStatement	* use_mask_ptr &= 0xFFFF >> ( excl_range - 16 )	97:16:2349:2397	914418	1	True				
ANR	914706	AssignmentExpression	* use_mask_ptr &= 0xFFFF >> ( excl_range - 16 )		914418	0		&=			
ANR	914707	UnaryOperationExpression	* use_mask_ptr		914418	0					
ANR	914708	UnaryOperator	*		914418	0					
ANR	914709	Identifier	use_mask_ptr		914418	1					
ANR	914710	ShiftExpression	0xFFFF >> ( excl_range - 16 )		914418	1		>>			
ANR	914711	PrimaryExpression	0xFFFF		914418	0					
ANR	914712	AdditiveExpression	excl_range - 16		914418	1		-			
ANR	914713	Identifier	excl_range		914418	0					
ANR	914714	PrimaryExpression	16		914418	1					
ANR	914715	ElseStatement	else		914418	0					
ANR	914716	ExpressionStatement	* use_mask_ptr &= 0xFFFF >> excl_range	101:16:2436:2477	914418	0	True				
ANR	914717	AssignmentExpression	* use_mask_ptr &= 0xFFFF >> excl_range		914418	0		&=			
ANR	914718	UnaryOperationExpression	* use_mask_ptr		914418	0					
ANR	914719	UnaryOperator	*		914418	0					
ANR	914720	Identifier	use_mask_ptr		914418	1					
ANR	914721	ShiftExpression	0xFFFF >> excl_range		914418	1		>>			
ANR	914722	PrimaryExpression	0xFFFF		914418	0					
ANR	914723	Identifier	excl_range		914418	1					
ANR	914724	ExpressionStatement	"aidx = get_bits ( gb , s -> aw_n_pulses [ 0 ] > 0 ? 5 - 2 * block_idx : 4 )"	109:4:2554:2620	914418	10	True				
ANR	914725	AssignmentExpression	"aidx = get_bits ( gb , s -> aw_n_pulses [ 0 ] > 0 ? 5 - 2 * block_idx : 4 )"		914418	0		=			
ANR	914726	Identifier	aidx		914418	0					
ANR	914727	CallExpression	"get_bits ( gb , s -> aw_n_pulses [ 0 ] > 0 ? 5 - 2 * block_idx : 4 )"		914418	1					
ANR	914728	Callee	get_bits		914418	0					
ANR	914729	Identifier	get_bits		914418	0					
ANR	914730	ArgumentList	gb		914418	1					
ANR	914731	Argument	gb		914418	0					
ANR	914732	Identifier	gb		914418	0					
ANR	914733	Argument	s -> aw_n_pulses [ 0 ] > 0 ? 5 - 2 * block_idx : 4		914418	1					
ANR	914734	ConditionalExpression	s -> aw_n_pulses [ 0 ] > 0 ? 5 - 2 * block_idx : 4		914418	0					
ANR	914735	Condition	s -> aw_n_pulses [ 0 ] > 0		914418	0					
ANR	914736	RelationalExpression	s -> aw_n_pulses [ 0 ] > 0		914418	0		>			
ANR	914737	ArrayIndexing	s -> aw_n_pulses [ 0 ]		914418	0					
ANR	914738	PtrMemberAccess	s -> aw_n_pulses		914418	0					
ANR	914739	Identifier	s		914418	0					
ANR	914740	Identifier	aw_n_pulses		914418	1					
ANR	914741	PrimaryExpression	0		914418	1					
ANR	914742	PrimaryExpression	0		914418	1					
ANR	914743	AdditiveExpression	5 - 2 * block_idx		914418	1		-			
ANR	914744	PrimaryExpression	5		914418	0					
ANR	914745	MultiplicativeExpression	2 * block_idx		914418	1		*			
ANR	914746	PrimaryExpression	2		914418	0					
ANR	914747	Identifier	block_idx		914418	1					
ANR	914748	PrimaryExpression	4		914418	2					
ANR	914749	ForStatement	for ( n = 0 ; n <= aidx ; pulse_start ++ )		914418	11					
ANR	914750	ForInit	n = 0 ;	111:9:2632:2637	914418	0	True				
ANR	914751	AssignmentExpression	n = 0		914418	0		=			
ANR	914752	Identifier	n		914418	0					
ANR	914753	PrimaryExpression	0		914418	1					
ANR	914754	Condition	n <= aidx	111:16:2639:2647	914418	1	True				
ANR	914755	RelationalExpression	n <= aidx		914418	0		<=			
ANR	914756	Identifier	n		914418	0					
ANR	914757	Identifier	aidx		914418	1					
ANR	914758	PostIncDecOperationExpression	pulse_start ++	111:27:2650:2662	914418	2	True				
ANR	914759	Identifier	pulse_start		914418	0					
ANR	914760	IncDec	++		914418	1					
ANR	914761	CompoundStatement		107:42:2541:2541	914418	3					
ANR	914762	ForStatement	for ( idx = pulse_start ; idx < 0 ; idx += fcb -> pitch_lag )		914418	0					
ANR	914763	ForInit	idx = pulse_start ;	113:13:2681:2698	914418	0	True				
ANR	914764	AssignmentExpression	idx = pulse_start		914418	0		=			
ANR	914765	Identifier	idx		914418	0					
ANR	914766	Identifier	pulse_start		914418	1					
ANR	914767	Condition	idx < 0	113:32:2700:2706	914418	1	True				
ANR	914768	RelationalExpression	idx < 0		914418	0		<			
ANR	914769	Identifier	idx		914418	0					
ANR	914770	PrimaryExpression	0		914418	1					
ANR	914771	AssignmentExpression	idx += fcb -> pitch_lag	113:41:2709:2729	914418	2	True	+=			
ANR	914772	Identifier	idx		914418	0					
ANR	914773	PtrMemberAccess	fcb -> pitch_lag		914418	1					
ANR	914774	Identifier	fcb		914418	0					
ANR	914775	Identifier	pitch_lag		914418	1					
ANR	914776	ExpressionStatement		113:64:2732:2732	914418	3	True				
ANR	914777	IfStatement	if ( idx >= MAX_FRAMESIZE / 2 )		914418	1					
ANR	914778	Condition	idx >= MAX_FRAMESIZE / 2	115:12:2747:2770	914418	0	True				
ANR	914779	RelationalExpression	idx >= MAX_FRAMESIZE / 2		914418	0		>=			
ANR	914780	Identifier	idx		914418	0					
ANR	914781	MultiplicativeExpression	MAX_FRAMESIZE / 2		914418	1		/			
ANR	914782	Identifier	MAX_FRAMESIZE		914418	0					
ANR	914783	PrimaryExpression	2		914418	1					
ANR	914784	CompoundStatement		111:38:2649:2649	914418	1					
ANR	914785	IfStatement	if ( use_mask [ 0 ] )		914418	0					
ANR	914786	Condition	use_mask [ 0 ]	117:16:2810:2820	914418	0	True				
ANR	914787	ArrayIndexing	use_mask [ 0 ]		914418	0					
ANR	914788	Identifier	use_mask		914418	0					
ANR	914789	PrimaryExpression	0		914418	1					
ANR	914790	ExpressionStatement	idx = 0x0F	117:34:2828:2838	914418	1	True				
ANR	914791	AssignmentExpression	idx = 0x0F		914418	0		=			
ANR	914792	Identifier	idx		914418	0					
ANR	914793	PrimaryExpression	0x0F		914418	1					
ANR	914794	ElseStatement	else		914418	0					
ANR	914795	IfStatement	if ( use_mask [ 1 ] )		914418	0					
ANR	914796	Condition	use_mask [ 1 ]	119:21:2862:2872	914418	0	True				
ANR	914797	ArrayIndexing	use_mask [ 1 ]		914418	0					
ANR	914798	Identifier	use_mask		914418	0					
ANR	914799	PrimaryExpression	1		914418	1					
ANR	914800	ExpressionStatement	idx = 0x1F	119:34:2875:2885	914418	1	True				
ANR	914801	AssignmentExpression	idx = 0x1F		914418	0		=			
ANR	914802	Identifier	idx		914418	0					
ANR	914803	PrimaryExpression	0x1F		914418	1					
ANR	914804	ElseStatement	else		914418	0					
ANR	914805	IfStatement	if ( use_mask [ 2 ] )		914418	0					
ANR	914806	Condition	use_mask [ 2 ]	121:21:2909:2919	914418	0	True				
ANR	914807	ArrayIndexing	use_mask [ 2 ]		914418	0					
ANR	914808	Identifier	use_mask		914418	0					
ANR	914809	PrimaryExpression	2		914418	1					
ANR	914810	ExpressionStatement	idx = 0x2F	121:34:2922:2932	914418	1	True				
ANR	914811	AssignmentExpression	idx = 0x2F		914418	0		=			
ANR	914812	Identifier	idx		914418	0					
ANR	914813	PrimaryExpression	0x2F		914418	1					
ANR	914814	ElseStatement	else		914418	0					
ANR	914815	IfStatement	if ( use_mask [ 3 ] )		914418	0					
ANR	914816	Condition	use_mask [ 3 ]	123:21:2956:2966	914418	0	True				
ANR	914817	ArrayIndexing	use_mask [ 3 ]		914418	0					
ANR	914818	Identifier	use_mask		914418	0					
ANR	914819	PrimaryExpression	3		914418	1					
ANR	914820	ExpressionStatement	idx = 0x3F	123:34:2969:2979	914418	1	True				
ANR	914821	AssignmentExpression	idx = 0x3F		914418	0		=			
ANR	914822	Identifier	idx		914418	0					
ANR	914823	PrimaryExpression	0x3F		914418	1					
ANR	914824	ElseStatement	else		914418	0					
ANR	914825	IfStatement	if ( use_mask [ 4 ] )		914418	0					
ANR	914826	Condition	use_mask [ 4 ]	125:21:3003:3013	914418	0	True				
ANR	914827	ArrayIndexing	use_mask [ 4 ]		914418	0					
ANR	914828	Identifier	use_mask		914418	0					
ANR	914829	PrimaryExpression	4		914418	1					
ANR	914830	ExpressionStatement	idx = 0x4F	125:34:3016:3026	914418	1	True				
ANR	914831	AssignmentExpression	idx = 0x4F		914418	0		=			
ANR	914832	Identifier	idx		914418	0					
ANR	914833	PrimaryExpression	0x4F		914418	1					
ANR	914834	ElseStatement	else		914418	0					
ANR	914835	ReturnStatement	return ;	127:34:3063:3069	914418	0	True				
ANR	914836	ExpressionStatement	idx -= av_log2_16bit ( use_mask [ idx >> 4 ] )	129:12:3084:3124	914418	1	True				
ANR	914837	AssignmentExpression	idx -= av_log2_16bit ( use_mask [ idx >> 4 ] )		914418	0		-=			
ANR	914838	Identifier	idx		914418	0					
ANR	914839	CallExpression	av_log2_16bit ( use_mask [ idx >> 4 ] )		914418	1					
ANR	914840	Callee	av_log2_16bit		914418	0					
ANR	914841	Identifier	av_log2_16bit		914418	0					
ANR	914842	ArgumentList	use_mask [ idx >> 4 ]		914418	1					
ANR	914843	Argument	use_mask [ idx >> 4 ]		914418	0					
ANR	914844	ArrayIndexing	use_mask [ idx >> 4 ]		914418	0					
ANR	914845	Identifier	use_mask		914418	0					
ANR	914846	ShiftExpression	idx >> 4		914418	1		>>			
ANR	914847	Identifier	idx		914418	0					
ANR	914848	PrimaryExpression	4		914418	1					
ANR	914849	IfStatement	if ( use_mask [ idx >> 4 ] & ( 0x8000 >> ( idx & 15 ) ) )		914418	2					
ANR	914850	Condition	use_mask [ idx >> 4 ] & ( 0x8000 >> ( idx & 15 ) )	133:12:3150:3192	914418	0	True				
ANR	914851	BitAndExpression	use_mask [ idx >> 4 ] & ( 0x8000 >> ( idx & 15 ) )		914418	0		&			
ANR	914852	ArrayIndexing	use_mask [ idx >> 4 ]		914418	0					
ANR	914853	Identifier	use_mask		914418	0					
ANR	914854	ShiftExpression	idx >> 4		914418	1		>>			
ANR	914855	Identifier	idx		914418	0					
ANR	914856	PrimaryExpression	4		914418	1					
ANR	914857	ShiftExpression	0x8000 >> ( idx & 15 )		914418	1		>>			
ANR	914858	PrimaryExpression	0x8000		914418	0					
ANR	914859	BitAndExpression	idx & 15		914418	1		&			
ANR	914860	Identifier	idx		914418	0					
ANR	914861	PrimaryExpression	15		914418	1					
ANR	914862	CompoundStatement		129:57:3071:3071	914418	1					
ANR	914863	ExpressionStatement	use_mask [ idx >> 4 ] &= ~ ( 0x8000 >> ( idx & 15 ) )	135:12:3210:3255	914418	0	True				
ANR	914864	AssignmentExpression	use_mask [ idx >> 4 ] &= ~ ( 0x8000 >> ( idx & 15 ) )		914418	0		&=			
ANR	914865	ArrayIndexing	use_mask [ idx >> 4 ]		914418	0					
ANR	914866	Identifier	use_mask		914418	0					
ANR	914867	ShiftExpression	idx >> 4		914418	1		>>			
ANR	914868	Identifier	idx		914418	0					
ANR	914869	PrimaryExpression	4		914418	1					
ANR	914870	UnaryOperationExpression	~ ( 0x8000 >> ( idx & 15 ) )		914418	1					
ANR	914871	UnaryOperator	~		914418	0					
ANR	914872	ShiftExpression	0x8000 >> ( idx & 15 )		914418	1		>>			
ANR	914873	PrimaryExpression	0x8000		914418	0					
ANR	914874	BitAndExpression	idx & 15		914418	1		&			
ANR	914875	Identifier	idx		914418	0					
ANR	914876	PrimaryExpression	15		914418	1					
ANR	914877	ExpressionStatement	n ++	137:12:3270:3273	914418	1	True				
ANR	914878	PostIncDecOperationExpression	n ++		914418	0					
ANR	914879	Identifier	n		914418	0					
ANR	914880	IncDec	++		914418	1					
ANR	914881	ExpressionStatement	start_off = idx	139:12:3288:3303	914418	2	True				
ANR	914882	AssignmentExpression	start_off = idx		914418	0		=			
ANR	914883	Identifier	start_off		914418	0					
ANR	914884	Identifier	idx		914418	1					
ANR	914885	ExpressionStatement	fcb -> x [ fcb -> n ] = start_off	147:4:3330:3356	914418	12	True				
ANR	914886	AssignmentExpression	fcb -> x [ fcb -> n ] = start_off		914418	0		=			
ANR	914887	ArrayIndexing	fcb -> x [ fcb -> n ]		914418	0					
ANR	914888	PtrMemberAccess	fcb -> x		914418	0					
ANR	914889	Identifier	fcb		914418	0					
ANR	914890	Identifier	x		914418	1					
ANR	914891	PtrMemberAccess	fcb -> n		914418	1					
ANR	914892	Identifier	fcb		914418	0					
ANR	914893	Identifier	n		914418	1					
ANR	914894	Identifier	start_off		914418	1					
ANR	914895	ExpressionStatement	fcb -> y [ fcb -> n ] = get_bits1 ( gb ) ? - 1.0 : 1.0	149:4:3363:3406	914418	13	True				
ANR	914896	AssignmentExpression	fcb -> y [ fcb -> n ] = get_bits1 ( gb ) ? - 1.0 : 1.0		914418	0		=			
ANR	914897	ArrayIndexing	fcb -> y [ fcb -> n ]		914418	0					
ANR	914898	PtrMemberAccess	fcb -> y		914418	0					
ANR	914899	Identifier	fcb		914418	0					
ANR	914900	Identifier	y		914418	1					
ANR	914901	PtrMemberAccess	fcb -> n		914418	1					
ANR	914902	Identifier	fcb		914418	0					
ANR	914903	Identifier	n		914418	1					
ANR	914904	ConditionalExpression	get_bits1 ( gb ) ? - 1.0 : 1.0		914418	1					
ANR	914905	Condition	get_bits1 ( gb )		914418	0					
ANR	914906	CallExpression	get_bits1 ( gb )		914418	0					
ANR	914907	Callee	get_bits1		914418	0					
ANR	914908	Identifier	get_bits1		914418	0					
ANR	914909	ArgumentList	gb		914418	1					
ANR	914910	Argument	gb		914418	0					
ANR	914911	Identifier	gb		914418	0					
ANR	914912	UnaryOperationExpression	- 1.0		914418	1					
ANR	914913	UnaryOperator	-		914418	0					
ANR	914914	PrimaryExpression	1.0		914418	1					
ANR	914915	PrimaryExpression	1.0		914418	2					
ANR	914916	ExpressionStatement	fcb -> n ++	151:4:3413:3421	914418	14	True				
ANR	914917	PostIncDecOperationExpression	fcb -> n ++		914418	0					
ANR	914918	PtrMemberAccess	fcb -> n		914418	0					
ANR	914919	Identifier	fcb		914418	0					
ANR	914920	Identifier	n		914418	1					
ANR	914921	IncDec	++		914418	1					
ANR	914922	ExpressionStatement	n = ( MAX_FRAMESIZE / 2 - start_off ) % fcb -> pitch_lag	157:4:3500:3552	914418	15	True				
ANR	914923	AssignmentExpression	n = ( MAX_FRAMESIZE / 2 - start_off ) % fcb -> pitch_lag		914418	0		=			
ANR	914924	Identifier	n		914418	0					
ANR	914925	MultiplicativeExpression	( MAX_FRAMESIZE / 2 - start_off ) % fcb -> pitch_lag		914418	1		%			
ANR	914926	AdditiveExpression	MAX_FRAMESIZE / 2 - start_off		914418	0		-			
ANR	914927	MultiplicativeExpression	MAX_FRAMESIZE / 2		914418	0		/			
ANR	914928	Identifier	MAX_FRAMESIZE		914418	0					
ANR	914929	PrimaryExpression	2		914418	1					
ANR	914930	Identifier	start_off		914418	1					
ANR	914931	PtrMemberAccess	fcb -> pitch_lag		914418	1					
ANR	914932	Identifier	fcb		914418	0					
ANR	914933	Identifier	pitch_lag		914418	1					
ANR	914934	ExpressionStatement	s -> aw_next_pulse_off_cache = n ? fcb -> pitch_lag - n : 0	159:4:3559:3614	914418	16	True				
ANR	914935	AssignmentExpression	s -> aw_next_pulse_off_cache = n ? fcb -> pitch_lag - n : 0		914418	0		=			
ANR	914936	PtrMemberAccess	s -> aw_next_pulse_off_cache		914418	0					
ANR	914937	Identifier	s		914418	0					
ANR	914938	Identifier	aw_next_pulse_off_cache		914418	1					
ANR	914939	ConditionalExpression	n ? fcb -> pitch_lag - n : 0		914418	1					
ANR	914940	Condition	n		914418	0					
ANR	914941	Identifier	n		914418	0					
ANR	914942	AdditiveExpression	fcb -> pitch_lag - n		914418	1		-			
ANR	914943	PtrMemberAccess	fcb -> pitch_lag		914418	0					
ANR	914944	Identifier	fcb		914418	0					
ANR	914945	Identifier	pitch_lag		914418	1					
ANR	914946	Identifier	n		914418	1					
ANR	914947	PrimaryExpression	0		914418	2					
ANR	914948	ReturnType	static void		914418	1					
ANR	914949	Identifier	aw_pulse_set2		914418	2					
ANR	914950	ParameterList	"WMAVoiceContext * s , GetBitContext * gb , int block_idx , AMRFixed * fcb"		914418	3					
ANR	914951	Parameter	WMAVoiceContext * s	1:26:26:43	914418	0	True				
ANR	914952	ParameterType	WMAVoiceContext *		914418	0					
ANR	914953	Identifier	s		914418	1					
ANR	914954	Parameter	GetBitContext * gb	1:46:46:62	914418	1	True				
ANR	914955	ParameterType	GetBitContext *		914418	0					
ANR	914956	Identifier	gb		914418	1					
ANR	914957	Parameter	int block_idx	3:26:92:104	914418	2	True				
ANR	914958	ParameterType	int		914418	0					
ANR	914959	Identifier	block_idx		914418	1					
ANR	914960	Parameter	AMRFixed * fcb	3:41:107:119	914418	3	True				
ANR	914961	ParameterType	AMRFixed *		914418	0					
ANR	914962	Identifier	fcb		914418	1					
ANR	914963	CFGEntryNode	ENTRY		914418		True				
ANR	914964	CFGExitNode	EXIT		914418		True				
ANR	914965	Symbol	* use_mask_ptr ++		914418						
ANR	914966	Symbol	fcb		914418						
ANR	914967	Symbol	get_bits		914418						
ANR	914968	Symbol	av_log2_16bit		914418						
ANR	914969	Symbol	* s -> aw_n_pulses		914418						
ANR	914970	Symbol	start_off		914418						
ANR	914971	Symbol	range		914418						
ANR	914972	Symbol	excl_range		914418						
ANR	914973	Symbol	use_mask_mem		914418						
ANR	914974	Symbol	s -> aw_first_pulse_off		914418						
ANR	914975	Symbol	block_idx		914418						
ANR	914976	Symbol	* fcb		914418						
ANR	914977	Symbol	fcb -> x		914418						
ANR	914978	Symbol	aidx		914418						
ANR	914979	Symbol	fcb -> y		914418						
ANR	914980	Symbol	* fcb -> x		914418						
ANR	914981	Symbol	MAX_FRAMESIZE		914418						
ANR	914982	Symbol	* fcb -> y		914418						
ANR	914983	Symbol	* * s		914418						
ANR	914984	Symbol	* idx		914418						
ANR	914985	Symbol	s -> aw_next_pulse_off_cache		914418						
ANR	914986	Symbol	* * fcb		914418						
ANR	914987	Symbol	gb		914418						
ANR	914988	Symbol	pulse_start		914418						
ANR	914989	Symbol	* fcb -> n		914418						
ANR	914990	Symbol	fcb -> pitch_lag		914418						
ANR	914991	Symbol	* s -> aw_first_pulse_off		914418						
ANR	914992	Symbol	use_mask_ptr		914418						
ANR	914993	Symbol	get_bits1		914418						
ANR	914994	Symbol	* block_idx		914418						
ANR	914995	Symbol	* use_mask		914418						
ANR	914996	Symbol	n		914418						
ANR	914997	Symbol	fcb -> n		914418						
ANR	914998	Symbol	s		914418						
ANR	914999	Symbol	* use_mask_ptr		914418						
ANR	915000	Symbol	s -> aw_n_pulses		914418						
ANR	915001	Symbol	use_mask		914418						
ANR	915002	Symbol	s -> aw_pulse_range		914418						
ANR	915003	Symbol	idx		914418						
ANR	915004	Symbol	pulse_off		914418						
ANR	915005	Symbol	* s		914418						
ANR	915006	Symbol	first_sh		914418						
