command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8468951	File	/home/p4ultr4n/workplace/ReVeal/raw_code/to_meta_with_crop_1.c								
ANR	8468952	Function	to_meta_with_crop	1:0:0:1009							
ANR	8468953	FunctionDef	"to_meta_with_crop (AVCodecContext * avctx , AVFrame * p , int * dest)"		8468952	0					
ANR	8468954	CompoundStatement		3:0:77:1009	8468952	0					
ANR	8468955	IdentifierDeclStatement	"int blockx , blocky , x , y ;"	5:4:84:108	8468952	0	True				
ANR	8468956	IdentifierDecl	blockx		8468952	0					
ANR	8468957	IdentifierDeclType	int		8468952	0					
ANR	8468958	Identifier	blockx		8468952	1					
ANR	8468959	IdentifierDecl	blocky		8468952	1					
ANR	8468960	IdentifierDeclType	int		8468952	0					
ANR	8468961	Identifier	blocky		8468952	1					
ANR	8468962	IdentifierDecl	x		8468952	2					
ANR	8468963	IdentifierDeclType	int		8468952	0					
ANR	8468964	Identifier	x		8468952	1					
ANR	8468965	IdentifierDecl	y		8468952	3					
ANR	8468966	IdentifierDeclType	int		8468952	0					
ANR	8468967	Identifier	y		8468952	1					
ANR	8468968	IdentifierDeclStatement	int luma = 0 ;	7:4:115:127	8468952	1	True				
ANR	8468969	IdentifierDecl	luma = 0		8468952	0					
ANR	8468970	IdentifierDeclType	int		8468952	0					
ANR	8468971	Identifier	luma		8468952	1					
ANR	8468972	AssignmentExpression	luma = 0		8468952	2		=			
ANR	8468973	Identifier	luma		8468952	0					
ANR	8468974	PrimaryExpression	0		8468952	1					
ANR	8468975	IdentifierDeclStatement	"int height = FFMIN ( avctx -> height , C64YRES ) ;"	9:4:134:176	8468952	2	True				
ANR	8468976	IdentifierDecl	"height = FFMIN ( avctx -> height , C64YRES )"		8468952	0					
ANR	8468977	IdentifierDeclType	int		8468952	0					
ANR	8468978	Identifier	height		8468952	1					
ANR	8468979	AssignmentExpression	"height = FFMIN ( avctx -> height , C64YRES )"		8468952	2		=			
ANR	8468980	Identifier	height		8468952	0					
ANR	8468981	CallExpression	"FFMIN ( avctx -> height , C64YRES )"		8468952	1					
ANR	8468982	Callee	FFMIN		8468952	0					
ANR	8468983	Identifier	FFMIN		8468952	0					
ANR	8468984	ArgumentList	avctx -> height		8468952	1					
ANR	8468985	Argument	avctx -> height		8468952	0					
ANR	8468986	PtrMemberAccess	avctx -> height		8468952	0					
ANR	8468987	Identifier	avctx		8468952	0					
ANR	8468988	Identifier	height		8468952	1					
ANR	8468989	Argument	C64YRES		8468952	1					
ANR	8468990	Identifier	C64YRES		8468952	0					
ANR	8468991	IdentifierDeclStatement	"int width = FFMIN ( avctx -> width , C64XRES ) ;"	11:4:183:225	8468952	3	True				
ANR	8468992	IdentifierDecl	"width = FFMIN ( avctx -> width , C64XRES )"		8468952	0					
ANR	8468993	IdentifierDeclType	int		8468952	0					
ANR	8468994	Identifier	width		8468952	1					
ANR	8468995	AssignmentExpression	"width = FFMIN ( avctx -> width , C64XRES )"		8468952	2		=			
ANR	8468996	Identifier	width		8468952	0					
ANR	8468997	CallExpression	"FFMIN ( avctx -> width , C64XRES )"		8468952	1					
ANR	8468998	Callee	FFMIN		8468952	0					
ANR	8468999	Identifier	FFMIN		8468952	0					
ANR	8469000	ArgumentList	avctx -> width		8468952	1					
ANR	8469001	Argument	avctx -> width		8468952	0					
ANR	8469002	PtrMemberAccess	avctx -> width		8468952	0					
ANR	8469003	Identifier	avctx		8468952	0					
ANR	8469004	Identifier	width		8468952	1					
ANR	8469005	Argument	C64XRES		8468952	1					
ANR	8469006	Identifier	C64XRES		8468952	0					
ANR	8469007	IdentifierDeclStatement	uint8_t * src = p -> data [ 0 ] ;	13:4:232:257	8468952	4	True				
ANR	8469008	IdentifierDecl	* src = p -> data [ 0 ]		8468952	0					
ANR	8469009	IdentifierDeclType	uint8_t *		8468952	0					
ANR	8469010	Identifier	src		8468952	1					
ANR	8469011	AssignmentExpression	* src = p -> data [ 0 ]		8468952	2		=			
ANR	8469012	Identifier	src		8468952	0					
ANR	8469013	ArrayIndexing	p -> data [ 0 ]		8468952	1					
ANR	8469014	PtrMemberAccess	p -> data		8468952	0					
ANR	8469015	Identifier	p		8468952	0					
ANR	8469016	Identifier	data		8468952	1					
ANR	8469017	PrimaryExpression	0		8468952	1					
ANR	8469018	ForStatement	for ( blocky = 0 ; blocky < C64YRES ; blocky += 8 )		8468952	5					
ANR	8469019	ForInit	blocky = 0 ;	17:9:271:281	8468952	0	True				
ANR	8469020	AssignmentExpression	blocky = 0		8468952	0		=			
ANR	8469021	Identifier	blocky		8468952	0					
ANR	8469022	PrimaryExpression	0		8468952	1					
ANR	8469023	Condition	blocky < C64YRES	17:21:283:298	8468952	1	True				
ANR	8469024	RelationalExpression	blocky < C64YRES		8468952	0		<			
ANR	8469025	Identifier	blocky		8468952	0					
ANR	8469026	Identifier	C64YRES		8468952	1					
ANR	8469027	AssignmentExpression	blocky += 8	17:39:301:311	8468952	2	True	+=			
ANR	8469028	Identifier	blocky		8468952	0					
ANR	8469029	PrimaryExpression	8		8468952	1					
ANR	8469030	CompoundStatement		15:52:236:236	8468952	3					
ANR	8469031	ForStatement	for ( blockx = 0 ; blockx < C64XRES ; blockx += 8 )		8468952	0					
ANR	8469032	ForInit	blockx = 0 ;	19:13:330:340	8468952	0	True				
ANR	8469033	AssignmentExpression	blockx = 0		8468952	0		=			
ANR	8469034	Identifier	blockx		8468952	0					
ANR	8469035	PrimaryExpression	0		8468952	1					
ANR	8469036	Condition	blockx < C64XRES	19:25:342:357	8468952	1	True				
ANR	8469037	RelationalExpression	blockx < C64XRES		8468952	0		<			
ANR	8469038	Identifier	blockx		8468952	0					
ANR	8469039	Identifier	C64XRES		8468952	1					
ANR	8469040	AssignmentExpression	blockx += 8	19:43:360:370	8468952	2	True	+=			
ANR	8469041	Identifier	blockx		8468952	0					
ANR	8469042	PrimaryExpression	8		8468952	1					
ANR	8469043	CompoundStatement		17:56:295:295	8468952	3					
ANR	8469044	ForStatement	for ( y = blocky ; y < blocky + 8 && y < C64YRES ; y ++ )		8468952	0					
ANR	8469045	ForInit	y = blocky ;	21:17:393:403	8468952	0	True				
ANR	8469046	AssignmentExpression	y = blocky		8468952	0		=			
ANR	8469047	Identifier	y		8468952	0					
ANR	8469048	Identifier	blocky		8468952	1					
ANR	8469049	Condition	y < blocky + 8 && y < C64YRES	21:29:405:433	8468952	1	True				
ANR	8469050	AndExpression	y < blocky + 8 && y < C64YRES		8468952	0		&&			
ANR	8469051	RelationalExpression	y < blocky + 8		8468952	0		<			
ANR	8469052	Identifier	y		8468952	0					
ANR	8469053	AdditiveExpression	blocky + 8		8468952	1		+			
ANR	8469054	Identifier	blocky		8468952	0					
ANR	8469055	PrimaryExpression	8		8468952	1					
ANR	8469056	RelationalExpression	y < C64YRES		8468952	1		<			
ANR	8469057	Identifier	y		8468952	0					
ANR	8469058	Identifier	C64YRES		8468952	1					
ANR	8469059	PostIncDecOperationExpression	y ++	21:60:436:438	8468952	2	True				
ANR	8469060	Identifier	y		8468952	0					
ANR	8469061	IncDec	++		8468952	1					
ANR	8469062	CompoundStatement		19:65:363:363	8468952	3					
ANR	8469063	ForStatement	for ( x = blockx ; x < blockx + 8 && x < C64XRES ; x += 2 )		8468952	0					
ANR	8469064	ForInit	x = blockx ;	23:21:465:475	8468952	0	True				
ANR	8469065	AssignmentExpression	x = blockx		8468952	0		=			
ANR	8469066	Identifier	x		8468952	0					
ANR	8469067	Identifier	blockx		8468952	1					
ANR	8469068	Condition	x < blockx + 8 && x < C64XRES	23:33:477:505	8468952	1	True				
ANR	8469069	AndExpression	x < blockx + 8 && x < C64XRES		8468952	0		&&			
ANR	8469070	RelationalExpression	x < blockx + 8		8468952	0		<			
ANR	8469071	Identifier	x		8468952	0					
ANR	8469072	AdditiveExpression	blockx + 8		8468952	1		+			
ANR	8469073	Identifier	blockx		8468952	0					
ANR	8469074	PrimaryExpression	8		8468952	1					
ANR	8469075	RelationalExpression	x < C64XRES		8468952	1		<			
ANR	8469076	Identifier	x		8468952	0					
ANR	8469077	Identifier	C64XRES		8468952	1					
ANR	8469078	AssignmentExpression	x += 2	23:64:508:513	8468952	2	True	+=			
ANR	8469079	Identifier	x		8468952	0					
ANR	8469080	PrimaryExpression	2		8468952	1					
ANR	8469081	CompoundStatement		21:72:438:438	8468952	3					
ANR	8469082	IfStatement	if ( x < width && y < height )		8468952	0					
ANR	8469083	Condition	x < width && y < height	25:23:542:564	8468952	0	True				
ANR	8469084	AndExpression	x < width && y < height		8468952	0		&&			
ANR	8469085	RelationalExpression	x < width		8468952	0		<			
ANR	8469086	Identifier	x		8468952	0					
ANR	8469087	Identifier	width		8468952	1					
ANR	8469088	RelationalExpression	y < height		8468952	1		<			
ANR	8469089	Identifier	y		8468952	0					
ANR	8469090	Identifier	height		8468952	1					
ANR	8469091	CompoundStatement		23:48:489:489	8468952	1					
ANR	8469092	ExpressionStatement	luma = ( src [ ( x + 0 + y * p -> linesize [ 0 ] ) ] + src [ ( x + 1 + y * p -> linesize [ 0 ] ) ] ) / 2	29:24:653:768	8468952	0	True				
ANR	8469093	AssignmentExpression	luma = ( src [ ( x + 0 + y * p -> linesize [ 0 ] ) ] + src [ ( x + 1 + y * p -> linesize [ 0 ] ) ] ) / 2		8468952	0		=			
ANR	8469094	Identifier	luma		8468952	0					
ANR	8469095	MultiplicativeExpression	( src [ ( x + 0 + y * p -> linesize [ 0 ] ) ] + src [ ( x + 1 + y * p -> linesize [ 0 ] ) ] ) / 2		8468952	1		/			
ANR	8469096	AdditiveExpression	src [ ( x + 0 + y * p -> linesize [ 0 ] ) ] + src [ ( x + 1 + y * p -> linesize [ 0 ] ) ]		8468952	0		+			
ANR	8469097	ArrayIndexing	src [ ( x + 0 + y * p -> linesize [ 0 ] ) ]		8468952	0					
ANR	8469098	Identifier	src		8468952	0					
ANR	8469099	AdditiveExpression	x + 0 + y * p -> linesize [ 0 ]		8468952	1		+			
ANR	8469100	Identifier	x		8468952	0					
ANR	8469101	AdditiveExpression	0 + y * p -> linesize [ 0 ]		8468952	1		+			
ANR	8469102	PrimaryExpression	0		8468952	0					
ANR	8469103	MultiplicativeExpression	y * p -> linesize [ 0 ]		8468952	1		*			
ANR	8469104	Identifier	y		8468952	0					
ANR	8469105	ArrayIndexing	p -> linesize [ 0 ]		8468952	1					
ANR	8469106	PtrMemberAccess	p -> linesize		8468952	0					
ANR	8469107	Identifier	p		8468952	0					
ANR	8469108	Identifier	linesize		8468952	1					
ANR	8469109	PrimaryExpression	0		8468952	1					
ANR	8469110	ArrayIndexing	src [ ( x + 1 + y * p -> linesize [ 0 ] ) ]		8468952	1					
ANR	8469111	Identifier	src		8468952	0					
ANR	8469112	AdditiveExpression	x + 1 + y * p -> linesize [ 0 ]		8468952	1		+			
ANR	8469113	Identifier	x		8468952	0					
ANR	8469114	AdditiveExpression	1 + y * p -> linesize [ 0 ]		8468952	1		+			
ANR	8469115	PrimaryExpression	1		8468952	0					
ANR	8469116	MultiplicativeExpression	y * p -> linesize [ 0 ]		8468952	1		*			
ANR	8469117	Identifier	y		8468952	0					
ANR	8469118	ArrayIndexing	p -> linesize [ 0 ]		8468952	1					
ANR	8469119	PtrMemberAccess	p -> linesize		8468952	0					
ANR	8469120	Identifier	p		8468952	0					
ANR	8469121	Identifier	linesize		8468952	1					
ANR	8469122	PrimaryExpression	0		8468952	1					
ANR	8469123	PrimaryExpression	2		8468952	1					
ANR	8469124	ExpressionStatement	dest [ 0 ] = luma	35:24:888:902	8468952	1	True				
ANR	8469125	AssignmentExpression	dest [ 0 ] = luma		8468952	0		=			
ANR	8469126	ArrayIndexing	dest [ 0 ]		8468952	0					
ANR	8469127	Identifier	dest		8468952	0					
ANR	8469128	PrimaryExpression	0		8468952	1					
ANR	8469129	Identifier	luma		8468952	1					
ANR	8469130	ExpressionStatement	dest ++	39:20:948:954	8468952	1	True				
ANR	8469131	PostIncDecOperationExpression	dest ++		8468952	0					
ANR	8469132	Identifier	dest		8468952	0					
ANR	8469133	IncDec	++		8468952	1					
ANR	8469134	ReturnType	static void		8468952	1					
ANR	8469135	Identifier	to_meta_with_crop		8468952	2					
ANR	8469136	ParameterList	"AVCodecContext * avctx , AVFrame * p , int * dest"		8468952	3					
ANR	8469137	Parameter	AVCodecContext * avctx	1:30:30:50	8468952	0	True				
ANR	8469138	ParameterType	AVCodecContext *		8468952	0					
ANR	8469139	Identifier	avctx		8468952	1					
ANR	8469140	Parameter	AVFrame * p	1:53:53:62	8468952	1	True				
ANR	8469141	ParameterType	AVFrame *		8468952	0					
ANR	8469142	Identifier	p		8468952	1					
ANR	8469143	Parameter	int * dest	1:65:65:73	8468952	2	True				
ANR	8469144	ParameterType	int *		8468952	0					
ANR	8469145	Identifier	dest		8468952	1					
ANR	8469146	CFGEntryNode	ENTRY		8468952		True				
ANR	8469147	CFGExitNode	EXIT		8468952		True				
ANR	8469148	Symbol	* x		8468952						
ANR	8469149	Symbol	* y		8468952						
ANR	8469150	Symbol	C64XRES		8468952						
ANR	8469151	Symbol	p -> data		8468952						
ANR	8469152	Symbol	* dest		8468952						
ANR	8469153	Symbol	avctx -> width		8468952						
ANR	8469154	Symbol	FFMIN		8468952						
ANR	8469155	Symbol	dest		8468952						
ANR	8469156	Symbol	* src		8468952						
ANR	8469157	Symbol	avctx -> height		8468952						
ANR	8469158	Symbol	* p -> data		8468952						
ANR	8469159	Symbol	* * p		8468952						
ANR	8469160	Symbol	avctx		8468952						
ANR	8469161	Symbol	height		8468952						
ANR	8469162	Symbol	* * p -> linesize		8468952						
ANR	8469163	Symbol	C64YRES		8468952						
ANR	8469164	Symbol	src		8468952						
ANR	8469165	Symbol	blockx		8468952						
ANR	8469166	Symbol	blocky		8468952						
ANR	8469167	Symbol	* p -> linesize		8468952						
ANR	8469168	Symbol	p -> linesize		8468952						
ANR	8469169	Symbol	luma		8468952						
ANR	8469170	Symbol	p		8468952						
ANR	8469171	Symbol	* * * p		8468952						
ANR	8469172	Symbol	* avctx		8468952						
ANR	8469173	Symbol	x		8468952						
ANR	8469174	Symbol	width		8468952						
ANR	8469175	Symbol	y		8468952						
ANR	8469176	Symbol	* p		8468952						
