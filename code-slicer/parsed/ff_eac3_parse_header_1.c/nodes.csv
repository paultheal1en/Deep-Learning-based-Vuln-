command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3247160	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_eac3_parse_header_1.c								
ANR	3247161	Function	ff_eac3_parse_header	1:0:0:12716							
ANR	3247162	FunctionDef	ff_eac3_parse_header (AC3DecodeContext * s)		3247161	0					
ANR	3247163	CompoundStatement		3:0:47:12716	3247161	0					
ANR	3247164	IdentifierDeclStatement	"int i , blk , ch ;"	5:4:54:68	3247161	0	True				
ANR	3247165	IdentifierDecl	i		3247161	0					
ANR	3247166	IdentifierDeclType	int		3247161	0					
ANR	3247167	Identifier	i		3247161	1					
ANR	3247168	IdentifierDecl	blk		3247161	1					
ANR	3247169	IdentifierDeclType	int		3247161	0					
ANR	3247170	Identifier	blk		3247161	1					
ANR	3247171	IdentifierDecl	ch		3247161	2					
ANR	3247172	IdentifierDeclType	int		3247161	0					
ANR	3247173	Identifier	ch		3247161	1					
ANR	3247174	IdentifierDeclStatement	"int ac3_exponent_strategy , parse_aht_info , parse_spx_atten_data ;"	7:4:75:138	3247161	1	True				
ANR	3247175	IdentifierDecl	ac3_exponent_strategy		3247161	0					
ANR	3247176	IdentifierDeclType	int		3247161	0					
ANR	3247177	Identifier	ac3_exponent_strategy		3247161	1					
ANR	3247178	IdentifierDecl	parse_aht_info		3247161	1					
ANR	3247179	IdentifierDeclType	int		3247161	0					
ANR	3247180	Identifier	parse_aht_info		3247161	1					
ANR	3247181	IdentifierDecl	parse_spx_atten_data		3247161	2					
ANR	3247182	IdentifierDeclType	int		3247161	0					
ANR	3247183	Identifier	parse_spx_atten_data		3247161	1					
ANR	3247184	IdentifierDeclStatement	int parse_transient_proc_info ;	9:4:145:174	3247161	2	True				
ANR	3247185	IdentifierDecl	parse_transient_proc_info		3247161	0					
ANR	3247186	IdentifierDeclType	int		3247161	0					
ANR	3247187	Identifier	parse_transient_proc_info		3247161	1					
ANR	3247188	IdentifierDeclStatement	int num_cpl_blocks ;	11:4:181:199	3247161	3	True				
ANR	3247189	IdentifierDecl	num_cpl_blocks		3247161	0					
ANR	3247190	IdentifierDeclType	int		3247161	0					
ANR	3247191	Identifier	num_cpl_blocks		3247161	1					
ANR	3247192	IdentifierDeclStatement	GetBitContext * gbc = & s -> gbc ;	13:4:206:234	3247161	4	True				
ANR	3247193	IdentifierDecl	* gbc = & s -> gbc		3247161	0					
ANR	3247194	IdentifierDeclType	GetBitContext *		3247161	0					
ANR	3247195	Identifier	gbc		3247161	1					
ANR	3247196	AssignmentExpression	* gbc = & s -> gbc		3247161	2		=			
ANR	3247197	Identifier	gbc		3247161	0					
ANR	3247198	UnaryOperationExpression	& s -> gbc		3247161	1					
ANR	3247199	UnaryOperator	&		3247161	0					
ANR	3247200	PtrMemberAccess	s -> gbc		3247161	1					
ANR	3247201	Identifier	s		3247161	0					
ANR	3247202	Identifier	gbc		3247161	1					
ANR	3247203	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT )		3247161	5					
ANR	3247204	Condition	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT	23:8:470:511	3247161	0	True				
ANR	3247205	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT		3247161	0		==			
ANR	3247206	PtrMemberAccess	s -> frame_type		3247161	0					
ANR	3247207	Identifier	s		3247161	0					
ANR	3247208	Identifier	frame_type		3247161	1					
ANR	3247209	Identifier	EAC3_FRAME_TYPE_DEPENDENT		3247161	1					
ANR	3247210	CompoundStatement		21:52:466:466	3247161	1					
ANR	3247211	ExpressionStatement	"avpriv_request_sample ( s -> avctx , ""Dependent substream decoding"" )"	25:8:525:588	3247161	0	True				
ANR	3247212	CallExpression	"avpriv_request_sample ( s -> avctx , ""Dependent substream decoding"" )"		3247161	0					
ANR	3247213	Callee	avpriv_request_sample		3247161	0					
ANR	3247214	Identifier	avpriv_request_sample		3247161	0					
ANR	3247215	ArgumentList	s -> avctx		3247161	1					
ANR	3247216	Argument	s -> avctx		3247161	0					
ANR	3247217	PtrMemberAccess	s -> avctx		3247161	0					
ANR	3247218	Identifier	s		3247161	0					
ANR	3247219	Identifier	avctx		3247161	1					
ANR	3247220	Argument	"""Dependent substream decoding"""		3247161	1					
ANR	3247221	PrimaryExpression	"""Dependent substream decoding"""		3247161	0					
ANR	3247222	ReturnStatement	return AAC_AC3_PARSE_ERROR_FRAME_TYPE ;	27:8:599:636	3247161	1	True				
ANR	3247223	Identifier	AAC_AC3_PARSE_ERROR_FRAME_TYPE		3247161	0					
ANR	3247224	ElseStatement	else		3247161	0					
ANR	3247225	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_RESERVED )		3247161	0					
ANR	3247226	Condition	s -> frame_type == EAC3_FRAME_TYPE_RESERVED	29:15:654:694	3247161	0	True				
ANR	3247227	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_RESERVED		3247161	0		==			
ANR	3247228	PtrMemberAccess	s -> frame_type		3247161	0					
ANR	3247229	Identifier	s		3247161	0					
ANR	3247230	Identifier	frame_type		3247161	1					
ANR	3247231	Identifier	EAC3_FRAME_TYPE_RESERVED		3247161	1					
ANR	3247232	CompoundStatement		27:58:649:649	3247161	1					
ANR	3247233	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Reserved frame type\\n"" )"	31:8:708:763	3247161	0	True				
ANR	3247234	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Reserved frame type\\n"" )"		3247161	0					
ANR	3247235	Callee	av_log		3247161	0					
ANR	3247236	Identifier	av_log		3247161	0					
ANR	3247237	ArgumentList	s -> avctx		3247161	1					
ANR	3247238	Argument	s -> avctx		3247161	0					
ANR	3247239	PtrMemberAccess	s -> avctx		3247161	0					
ANR	3247240	Identifier	s		3247161	0					
ANR	3247241	Identifier	avctx		3247161	1					
ANR	3247242	Argument	AV_LOG_ERROR		3247161	1					
ANR	3247243	Identifier	AV_LOG_ERROR		3247161	0					
ANR	3247244	Argument	"""Reserved frame type\\n"""		3247161	2					
ANR	3247245	PrimaryExpression	"""Reserved frame type\\n"""		3247161	0					
ANR	3247246	ReturnStatement	return AAC_AC3_PARSE_ERROR_FRAME_TYPE ;	33:8:774:811	3247161	1	True				
ANR	3247247	Identifier	AAC_AC3_PARSE_ERROR_FRAME_TYPE		3247161	0					
ANR	3247248	IfStatement	if ( s -> substreamid )		3247161	6					
ANR	3247249	Condition	s -> substreamid	45:8:1066:1079	3247161	0	True				
ANR	3247250	PtrMemberAccess	s -> substreamid		3247161	0					
ANR	3247251	Identifier	s		3247161	0					
ANR	3247252	Identifier	substreamid		3247161	1					
ANR	3247253	CompoundStatement		43:24:1034:1034	3247161	1					
ANR	3247254	ExpressionStatement	"avpriv_request_sample ( s -> avctx , ""Additional substreams"" )"	49:8:1173:1229	3247161	0	True				
ANR	3247255	CallExpression	"avpriv_request_sample ( s -> avctx , ""Additional substreams"" )"		3247161	0					
ANR	3247256	Callee	avpriv_request_sample		3247161	0					
ANR	3247257	Identifier	avpriv_request_sample		3247161	0					
ANR	3247258	ArgumentList	s -> avctx		3247161	1					
ANR	3247259	Argument	s -> avctx		3247161	0					
ANR	3247260	PtrMemberAccess	s -> avctx		3247161	0					
ANR	3247261	Identifier	s		3247161	0					
ANR	3247262	Identifier	avctx		3247161	1					
ANR	3247263	Argument	"""Additional substreams"""		3247161	1					
ANR	3247264	PrimaryExpression	"""Additional substreams"""		3247161	0					
ANR	3247265	ReturnStatement	return AAC_AC3_PARSE_ERROR_FRAME_TYPE ;	51:8:1240:1277	3247161	1	True				
ANR	3247266	Identifier	AAC_AC3_PARSE_ERROR_FRAME_TYPE		3247161	0					
ANR	3247267	IfStatement	if ( s -> bit_alloc_params . sr_code == EAC3_SR_CODE_REDUCED )		3247161	7					
ANR	3247268	Condition	s -> bit_alloc_params . sr_code == EAC3_SR_CODE_REDUCED	57:8:1297:1347	3247161	0	True				
ANR	3247269	EqualityExpression	s -> bit_alloc_params . sr_code == EAC3_SR_CODE_REDUCED		3247161	0		==			
ANR	3247270	MemberAccess	s -> bit_alloc_params . sr_code		3247161	0					
ANR	3247271	PtrMemberAccess	s -> bit_alloc_params		3247161	0					
ANR	3247272	Identifier	s		3247161	0					
ANR	3247273	Identifier	bit_alloc_params		3247161	1					
ANR	3247274	Identifier	sr_code		3247161	1					
ANR	3247275	Identifier	EAC3_SR_CODE_REDUCED		3247161	1					
ANR	3247276	CompoundStatement		55:61:1302:1302	3247161	1					
ANR	3247277	ExpressionStatement	"avpriv_request_sample ( s -> avctx , ""Reduced sampling rate"" )"	67:8:1648:1704	3247161	0	True				
ANR	3247278	CallExpression	"avpriv_request_sample ( s -> avctx , ""Reduced sampling rate"" )"		3247161	0					
ANR	3247279	Callee	avpriv_request_sample		3247161	0					
ANR	3247280	Identifier	avpriv_request_sample		3247161	0					
ANR	3247281	ArgumentList	s -> avctx		3247161	1					
ANR	3247282	Argument	s -> avctx		3247161	0					
ANR	3247283	PtrMemberAccess	s -> avctx		3247161	0					
ANR	3247284	Identifier	s		3247161	0					
ANR	3247285	Identifier	avctx		3247161	1					
ANR	3247286	Argument	"""Reduced sampling rate"""		3247161	1					
ANR	3247287	PrimaryExpression	"""Reduced sampling rate"""		3247161	0					
ANR	3247288	ReturnStatement	return AVERROR_PATCHWELCOME ;	69:8:1715:1742	3247161	1	True				
ANR	3247289	Identifier	AVERROR_PATCHWELCOME		3247161	0					
ANR	3247290	ExpressionStatement	"skip_bits ( gbc , 5 )"	73:4:1756:1773	3247161	8	True				
ANR	3247291	CallExpression	"skip_bits ( gbc , 5 )"		3247161	0					
ANR	3247292	Callee	skip_bits		3247161	0					
ANR	3247293	Identifier	skip_bits		3247161	0					
ANR	3247294	ArgumentList	gbc		3247161	1					
ANR	3247295	Argument	gbc		3247161	0					
ANR	3247296	Identifier	gbc		3247161	0					
ANR	3247297	Argument	5		3247161	1					
ANR	3247298	PrimaryExpression	5		3247161	0					
ANR	3247299	ForStatement	for ( i = 0 ; i < ( s -> channel_mode ? 1 : 2 ) ; i ++ )		3247161	9					
ANR	3247300	ForInit	i = 0 ;	79:9:1841:1846	3247161	0	True				
ANR	3247301	AssignmentExpression	i = 0		3247161	0		=			
ANR	3247302	Identifier	i		3247161	0					
ANR	3247303	PrimaryExpression	0		3247161	1					
ANR	3247304	Condition	i < ( s -> channel_mode ? 1 : 2 )	79:16:1848:1876	3247161	1	True				
ANR	3247305	RelationalExpression	i < ( s -> channel_mode ? 1 : 2 )		3247161	0		<			
ANR	3247306	Identifier	i		3247161	0					
ANR	3247307	ConditionalExpression	s -> channel_mode ? 1 : 2		3247161	1					
ANR	3247308	Condition	s -> channel_mode		3247161	0					
ANR	3247309	PtrMemberAccess	s -> channel_mode		3247161	0					
ANR	3247310	Identifier	s		3247161	0					
ANR	3247311	Identifier	channel_mode		3247161	1					
ANR	3247312	PrimaryExpression	1		3247161	1					
ANR	3247313	PrimaryExpression	2		3247161	2					
ANR	3247314	PostIncDecOperationExpression	i ++	79:47:1879:1881	3247161	2	True				
ANR	3247315	Identifier	i		3247161	0					
ANR	3247316	IncDec	++		3247161	1					
ANR	3247317	CompoundStatement		77:52:1836:1836	3247161	3					
ANR	3247318	ExpressionStatement	"skip_bits ( gbc , 5 )"	81:8:1895:1912	3247161	0	True				
ANR	3247319	CallExpression	"skip_bits ( gbc , 5 )"		3247161	0					
ANR	3247320	Callee	skip_bits		3247161	0					
ANR	3247321	Identifier	skip_bits		3247161	0					
ANR	3247322	ArgumentList	gbc		3247161	1					
ANR	3247323	Argument	gbc		3247161	0					
ANR	3247324	Identifier	gbc		3247161	0					
ANR	3247325	Argument	5		3247161	1					
ANR	3247326	PrimaryExpression	5		3247161	0					
ANR	3247327	IfStatement	if ( get_bits1 ( gbc ) )		3247161	1					
ANR	3247328	Condition	get_bits1 ( gbc )	83:12:1956:1969	3247161	0	True				
ANR	3247329	CallExpression	get_bits1 ( gbc )		3247161	0					
ANR	3247330	Callee	get_bits1		3247161	0					
ANR	3247331	Identifier	get_bits1		3247161	0					
ANR	3247332	ArgumentList	gbc		3247161	1					
ANR	3247333	Argument	gbc		3247161	0					
ANR	3247334	Identifier	gbc		3247161	0					
ANR	3247335	CompoundStatement		81:28:1924:1924	3247161	1					
ANR	3247336	ExpressionStatement	"skip_bits ( gbc , 8 )"	85:12:1987:2004	3247161	0	True				
ANR	3247337	CallExpression	"skip_bits ( gbc , 8 )"		3247161	0					
ANR	3247338	Callee	skip_bits		3247161	0					
ANR	3247339	Identifier	skip_bits		3247161	0					
ANR	3247340	ArgumentList	gbc		3247161	1					
ANR	3247341	Argument	gbc		3247161	0					
ANR	3247342	Identifier	gbc		3247161	0					
ANR	3247343	Argument	8		3247161	1					
ANR	3247344	PrimaryExpression	8		3247161	0					
ANR	3247345	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT )		3247161	10					
ANR	3247346	Condition	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT	95:8:2105:2146	3247161	0	True				
ANR	3247347	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT		3247161	0		==			
ANR	3247348	PtrMemberAccess	s -> frame_type		3247161	0					
ANR	3247349	Identifier	s		3247161	0					
ANR	3247350	Identifier	frame_type		3247161	1					
ANR	3247351	Identifier	EAC3_FRAME_TYPE_DEPENDENT		3247161	1					
ANR	3247352	CompoundStatement		93:52:2101:2101	3247161	1					
ANR	3247353	IfStatement	if ( get_bits1 ( gbc ) )		3247161	0					
ANR	3247354	Condition	get_bits1 ( gbc )	97:12:2164:2177	3247161	0	True				
ANR	3247355	CallExpression	get_bits1 ( gbc )		3247161	0					
ANR	3247356	Callee	get_bits1		3247161	0					
ANR	3247357	Identifier	get_bits1		3247161	0					
ANR	3247358	ArgumentList	gbc		3247161	1					
ANR	3247359	Argument	gbc		3247161	0					
ANR	3247360	Identifier	gbc		3247161	0					
ANR	3247361	CompoundStatement		95:28:2132:2132	3247161	1					
ANR	3247362	ExpressionStatement	"skip_bits ( gbc , 16 )"	99:12:2195:2213	3247161	0	True				
ANR	3247363	CallExpression	"skip_bits ( gbc , 16 )"		3247161	0					
ANR	3247364	Callee	skip_bits		3247161	0					
ANR	3247365	Identifier	skip_bits		3247161	0					
ANR	3247366	ArgumentList	gbc		3247161	1					
ANR	3247367	Argument	gbc		3247161	0					
ANR	3247368	Identifier	gbc		3247161	0					
ANR	3247369	Argument	16		3247161	1					
ANR	3247370	PrimaryExpression	16		3247161	0					
ANR	3247371	IfStatement	if ( get_bits1 ( gbc ) )		3247161	11					
ANR	3247372	Condition	get_bits1 ( gbc )	109:8:2298:2311	3247161	0	True				
ANR	3247373	CallExpression	get_bits1 ( gbc )		3247161	0					
ANR	3247374	Callee	get_bits1		3247161	0					
ANR	3247375	Identifier	get_bits1		3247161	0					
ANR	3247376	ArgumentList	gbc		3247161	1					
ANR	3247377	Argument	gbc		3247161	0					
ANR	3247378	Identifier	gbc		3247161	0					
ANR	3247379	CompoundStatement		107:24:2266:2266	3247161	1					
ANR	3247380	IfStatement	if ( s -> channel_mode > AC3_CHMODE_STEREO )		3247161	0					
ANR	3247381	Condition	s -> channel_mode > AC3_CHMODE_STEREO	113:12:2375:2409	3247161	0	True				
ANR	3247382	RelationalExpression	s -> channel_mode > AC3_CHMODE_STEREO		3247161	0		>			
ANR	3247383	PtrMemberAccess	s -> channel_mode		3247161	0					
ANR	3247384	Identifier	s		3247161	0					
ANR	3247385	Identifier	channel_mode		3247161	1					
ANR	3247386	Identifier	AC3_CHMODE_STEREO		3247161	1					
ANR	3247387	CompoundStatement		111:49:2364:2364	3247161	1					
ANR	3247388	ExpressionStatement	"s -> preferred_downmix = get_bits ( gbc , 2 )"	115:12:2427:2466	3247161	0	True				
ANR	3247389	AssignmentExpression	"s -> preferred_downmix = get_bits ( gbc , 2 )"		3247161	0		=			
ANR	3247390	PtrMemberAccess	s -> preferred_downmix		3247161	0					
ANR	3247391	Identifier	s		3247161	0					
ANR	3247392	Identifier	preferred_downmix		3247161	1					
ANR	3247393	CallExpression	"get_bits ( gbc , 2 )"		3247161	1					
ANR	3247394	Callee	get_bits		3247161	0					
ANR	3247395	Identifier	get_bits		3247161	0					
ANR	3247396	ArgumentList	gbc		3247161	1					
ANR	3247397	Argument	gbc		3247161	0					
ANR	3247398	Identifier	gbc		3247161	0					
ANR	3247399	Argument	2		3247161	1					
ANR	3247400	PrimaryExpression	2		3247161	0					
ANR	3247401	IfStatement	if ( s -> channel_mode & 1 )		3247161	1					
ANR	3247402	Condition	s -> channel_mode & 1	117:16:2485:2503	3247161	0	True				
ANR	3247403	BitAndExpression	s -> channel_mode & 1		3247161	0		&			
ANR	3247404	PtrMemberAccess	s -> channel_mode		3247161	0					
ANR	3247405	Identifier	s		3247161	0					
ANR	3247406	Identifier	channel_mode		3247161	1					
ANR	3247407	PrimaryExpression	1		3247161	1					
ANR	3247408	CompoundStatement		115:37:2458:2458	3247161	1					
ANR	3247409	ExpressionStatement	"s -> center_mix_level_ltrt = get_bits ( gbc , 3 )"	121:16:2578:2621	3247161	0	True				
ANR	3247410	AssignmentExpression	"s -> center_mix_level_ltrt = get_bits ( gbc , 3 )"		3247161	0		=			
ANR	3247411	PtrMemberAccess	s -> center_mix_level_ltrt		3247161	0					
ANR	3247412	Identifier	s		3247161	0					
ANR	3247413	Identifier	center_mix_level_ltrt		3247161	1					
ANR	3247414	CallExpression	"get_bits ( gbc , 3 )"		3247161	1					
ANR	3247415	Callee	get_bits		3247161	0					
ANR	3247416	Identifier	get_bits		3247161	0					
ANR	3247417	ArgumentList	gbc		3247161	1					
ANR	3247418	Argument	gbc		3247161	0					
ANR	3247419	Identifier	gbc		3247161	0					
ANR	3247420	Argument	3		3247161	1					
ANR	3247421	PrimaryExpression	3		3247161	0					
ANR	3247422	ExpressionStatement	"s -> center_mix_level = get_bits ( gbc , 3 )"	123:16:2640:2683	3247161	1	True				
ANR	3247423	AssignmentExpression	"s -> center_mix_level = get_bits ( gbc , 3 )"		3247161	0		=			
ANR	3247424	PtrMemberAccess	s -> center_mix_level		3247161	0					
ANR	3247425	Identifier	s		3247161	0					
ANR	3247426	Identifier	center_mix_level		3247161	1					
ANR	3247427	CallExpression	"get_bits ( gbc , 3 )"		3247161	1					
ANR	3247428	Callee	get_bits		3247161	0					
ANR	3247429	Identifier	get_bits		3247161	0					
ANR	3247430	ArgumentList	gbc		3247161	1					
ANR	3247431	Argument	gbc		3247161	0					
ANR	3247432	Identifier	gbc		3247161	0					
ANR	3247433	Argument	3		3247161	1					
ANR	3247434	PrimaryExpression	3		3247161	0					
ANR	3247435	IfStatement	if ( s -> channel_mode & 4 )		3247161	2					
ANR	3247436	Condition	s -> channel_mode & 4	127:16:2717:2735	3247161	0	True				
ANR	3247437	BitAndExpression	s -> channel_mode & 4		3247161	0		&			
ANR	3247438	PtrMemberAccess	s -> channel_mode		3247161	0					
ANR	3247439	Identifier	s		3247161	0					
ANR	3247440	Identifier	channel_mode		3247161	1					
ANR	3247441	PrimaryExpression	4		3247161	1					
ANR	3247442	CompoundStatement		125:37:2690:2690	3247161	1					
ANR	3247443	ExpressionStatement	"s -> surround_mix_level_ltrt = av_clip ( get_bits ( gbc , 3 ) , 3 , 7 )"	131:16:2809:2869	3247161	0	True				
ANR	3247444	AssignmentExpression	"s -> surround_mix_level_ltrt = av_clip ( get_bits ( gbc , 3 ) , 3 , 7 )"		3247161	0		=			
ANR	3247445	PtrMemberAccess	s -> surround_mix_level_ltrt		3247161	0					
ANR	3247446	Identifier	s		3247161	0					
ANR	3247447	Identifier	surround_mix_level_ltrt		3247161	1					
ANR	3247448	CallExpression	"av_clip ( get_bits ( gbc , 3 ) , 3 , 7 )"		3247161	1					
ANR	3247449	Callee	av_clip		3247161	0					
ANR	3247450	Identifier	av_clip		3247161	0					
ANR	3247451	ArgumentList	"get_bits ( gbc , 3 )"		3247161	1					
ANR	3247452	Argument	"get_bits ( gbc , 3 )"		3247161	0					
ANR	3247453	CallExpression	"get_bits ( gbc , 3 )"		3247161	0					
ANR	3247454	Callee	get_bits		3247161	0					
ANR	3247455	Identifier	get_bits		3247161	0					
ANR	3247456	ArgumentList	gbc		3247161	1					
ANR	3247457	Argument	gbc		3247161	0					
ANR	3247458	Identifier	gbc		3247161	0					
ANR	3247459	Argument	3		3247161	1					
ANR	3247460	PrimaryExpression	3		3247161	0					
ANR	3247461	Argument	3		3247161	1					
ANR	3247462	PrimaryExpression	3		3247161	0					
ANR	3247463	Argument	7		3247161	2					
ANR	3247464	PrimaryExpression	7		3247161	0					
ANR	3247465	ExpressionStatement	"s -> surround_mix_level = av_clip ( get_bits ( gbc , 3 ) , 3 , 7 )"	133:16:2888:2948	3247161	1	True				
ANR	3247466	AssignmentExpression	"s -> surround_mix_level = av_clip ( get_bits ( gbc , 3 ) , 3 , 7 )"		3247161	0		=			
ANR	3247467	PtrMemberAccess	s -> surround_mix_level		3247161	0					
ANR	3247468	Identifier	s		3247161	0					
ANR	3247469	Identifier	surround_mix_level		3247161	1					
ANR	3247470	CallExpression	"av_clip ( get_bits ( gbc , 3 ) , 3 , 7 )"		3247161	1					
ANR	3247471	Callee	av_clip		3247161	0					
ANR	3247472	Identifier	av_clip		3247161	0					
ANR	3247473	ArgumentList	"get_bits ( gbc , 3 )"		3247161	1					
ANR	3247474	Argument	"get_bits ( gbc , 3 )"		3247161	0					
ANR	3247475	CallExpression	"get_bits ( gbc , 3 )"		3247161	0					
ANR	3247476	Callee	get_bits		3247161	0					
ANR	3247477	Identifier	get_bits		3247161	0					
ANR	3247478	ArgumentList	gbc		3247161	1					
ANR	3247479	Argument	gbc		3247161	0					
ANR	3247480	Identifier	gbc		3247161	0					
ANR	3247481	Argument	3		3247161	1					
ANR	3247482	PrimaryExpression	3		3247161	0					
ANR	3247483	Argument	3		3247161	1					
ANR	3247484	PrimaryExpression	3		3247161	0					
ANR	3247485	Argument	7		3247161	2					
ANR	3247486	PrimaryExpression	7		3247161	0					
ANR	3247487	IfStatement	if ( s -> lfe_on && ( s -> lfe_mix_level_exists = get_bits1 ( gbc ) ) )		3247161	1					
ANR	3247488	Condition	s -> lfe_on && ( s -> lfe_mix_level_exists = get_bits1 ( gbc ) )	143:12:3020:3074	3247161	0	True				
ANR	3247489	AndExpression	s -> lfe_on && ( s -> lfe_mix_level_exists = get_bits1 ( gbc ) )		3247161	0		&&			
ANR	3247490	PtrMemberAccess	s -> lfe_on		3247161	0					
ANR	3247491	Identifier	s		3247161	0					
ANR	3247492	Identifier	lfe_on		3247161	1					
ANR	3247493	AssignmentExpression	s -> lfe_mix_level_exists = get_bits1 ( gbc )		3247161	1		=			
ANR	3247494	PtrMemberAccess	s -> lfe_mix_level_exists		3247161	0					
ANR	3247495	Identifier	s		3247161	0					
ANR	3247496	Identifier	lfe_mix_level_exists		3247161	1					
ANR	3247497	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3247498	Callee	get_bits1		3247161	0					
ANR	3247499	Identifier	get_bits1		3247161	0					
ANR	3247500	ArgumentList	gbc		3247161	1					
ANR	3247501	Argument	gbc		3247161	0					
ANR	3247502	Identifier	gbc		3247161	0					
ANR	3247503	CompoundStatement		141:69:3029:3029	3247161	1					
ANR	3247504	ExpressionStatement	"s -> lfe_mix_level = get_bits ( gbc , 5 )"	145:12:3092:3127	3247161	0	True				
ANR	3247505	AssignmentExpression	"s -> lfe_mix_level = get_bits ( gbc , 5 )"		3247161	0		=			
ANR	3247506	PtrMemberAccess	s -> lfe_mix_level		3247161	0					
ANR	3247507	Identifier	s		3247161	0					
ANR	3247508	Identifier	lfe_mix_level		3247161	1					
ANR	3247509	CallExpression	"get_bits ( gbc , 5 )"		3247161	1					
ANR	3247510	Callee	get_bits		3247161	0					
ANR	3247511	Identifier	get_bits		3247161	0					
ANR	3247512	ArgumentList	gbc		3247161	1					
ANR	3247513	Argument	gbc		3247161	0					
ANR	3247514	Identifier	gbc		3247161	0					
ANR	3247515	Argument	5		3247161	1					
ANR	3247516	PrimaryExpression	5		3247161	0					
ANR	3247517	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT )		3247161	2					
ANR	3247518	Condition	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT	153:12:3220:3263	3247161	0	True				
ANR	3247519	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT		3247161	0		==			
ANR	3247520	PtrMemberAccess	s -> frame_type		3247161	0					
ANR	3247521	Identifier	s		3247161	0					
ANR	3247522	Identifier	frame_type		3247161	1					
ANR	3247523	Identifier	EAC3_FRAME_TYPE_INDEPENDENT		3247161	1					
ANR	3247524	CompoundStatement		151:58:3218:3218	3247161	1					
ANR	3247525	ForStatement	for ( i = 0 ; i < ( s -> channel_mode ? 1 : 2 ) ; i ++ )		3247161	0					
ANR	3247526	ForInit	i = 0 ;	155:17:3286:3291	3247161	0	True				
ANR	3247527	AssignmentExpression	i = 0		3247161	0		=			
ANR	3247528	Identifier	i		3247161	0					
ANR	3247529	PrimaryExpression	0		3247161	1					
ANR	3247530	Condition	i < ( s -> channel_mode ? 1 : 2 )	155:24:3293:3321	3247161	1	True				
ANR	3247531	RelationalExpression	i < ( s -> channel_mode ? 1 : 2 )		3247161	0		<			
ANR	3247532	Identifier	i		3247161	0					
ANR	3247533	ConditionalExpression	s -> channel_mode ? 1 : 2		3247161	1					
ANR	3247534	Condition	s -> channel_mode		3247161	0					
ANR	3247535	PtrMemberAccess	s -> channel_mode		3247161	0					
ANR	3247536	Identifier	s		3247161	0					
ANR	3247537	Identifier	channel_mode		3247161	1					
ANR	3247538	PrimaryExpression	1		3247161	1					
ANR	3247539	PrimaryExpression	2		3247161	2					
ANR	3247540	PostIncDecOperationExpression	i ++	155:55:3324:3326	3247161	2	True				
ANR	3247541	Identifier	i		3247161	0					
ANR	3247542	IncDec	++		3247161	1					
ANR	3247543	CompoundStatement		153:60:3281:3281	3247161	3					
ANR	3247544	IfStatement	if ( get_bits1 ( gbc ) )		3247161	0					
ANR	3247545	Condition	get_bits1 ( gbc )	159:20:3405:3418	3247161	0	True				
ANR	3247546	CallExpression	get_bits1 ( gbc )		3247161	0					
ANR	3247547	Callee	get_bits1		3247161	0					
ANR	3247548	Identifier	get_bits1		3247161	0					
ANR	3247549	ArgumentList	gbc		3247161	1					
ANR	3247550	Argument	gbc		3247161	0					
ANR	3247551	Identifier	gbc		3247161	0					
ANR	3247552	CompoundStatement		157:36:3373:3373	3247161	1					
ANR	3247553	ExpressionStatement	"skip_bits ( gbc , 6 )"	161:20:3444:3461	3247161	0	True				
ANR	3247554	CallExpression	"skip_bits ( gbc , 6 )"		3247161	0					
ANR	3247555	Callee	skip_bits		3247161	0					
ANR	3247556	Identifier	skip_bits		3247161	0					
ANR	3247557	ArgumentList	gbc		3247161	1					
ANR	3247558	Argument	gbc		3247161	0					
ANR	3247559	Identifier	gbc		3247161	0					
ANR	3247560	Argument	6		3247161	1					
ANR	3247561	PrimaryExpression	6		3247161	0					
ANR	3247562	IfStatement	if ( get_bits1 ( gbc ) )		3247161	1					
ANR	3247563	Condition	get_bits1 ( gbc )	167:16:3544:3557	3247161	0	True				
ANR	3247564	CallExpression	get_bits1 ( gbc )		3247161	0					
ANR	3247565	Callee	get_bits1		3247161	0					
ANR	3247566	Identifier	get_bits1		3247161	0					
ANR	3247567	ArgumentList	gbc		3247161	1					
ANR	3247568	Argument	gbc		3247161	0					
ANR	3247569	Identifier	gbc		3247161	0					
ANR	3247570	CompoundStatement		165:32:3512:3512	3247161	1					
ANR	3247571	ExpressionStatement	"skip_bits ( gbc , 6 )"	169:16:3579:3596	3247161	0	True				
ANR	3247572	CallExpression	"skip_bits ( gbc , 6 )"		3247161	0					
ANR	3247573	Callee	skip_bits		3247161	0					
ANR	3247574	Identifier	skip_bits		3247161	0					
ANR	3247575	ArgumentList	gbc		3247161	1					
ANR	3247576	Argument	gbc		3247161	0					
ANR	3247577	Identifier	gbc		3247161	0					
ANR	3247578	Argument	6		3247161	1					
ANR	3247579	PrimaryExpression	6		3247161	0					
ANR	3247580	SwitchStatement	"switch ( get_bits ( gbc , 2 ) )"		3247161	2					
ANR	3247581	Condition	"get_bits ( gbc , 2 )"	175:19:3718:3733	3247161	0	True				
ANR	3247582	CallExpression	"get_bits ( gbc , 2 )"		3247161	0					
ANR	3247583	Callee	get_bits		3247161	0					
ANR	3247584	Identifier	get_bits		3247161	0					
ANR	3247585	ArgumentList	gbc		3247161	1					
ANR	3247586	Argument	gbc		3247161	0					
ANR	3247587	Identifier	gbc		3247161	0					
ANR	3247588	Argument	2		3247161	1					
ANR	3247589	PrimaryExpression	2		3247161	0					
ANR	3247590	CompoundStatement		173:37:3688:3688	3247161	1					
ANR	3247591	Label	case 1 :	177:16:3755:3761	3247161	0	True				
ANR	3247592	ExpressionStatement	"skip_bits ( gbc , 5 )"	177:24:3763:3780	3247161	1	True				
ANR	3247593	CallExpression	"skip_bits ( gbc , 5 )"		3247161	0					
ANR	3247594	Callee	skip_bits		3247161	0					
ANR	3247595	Identifier	skip_bits		3247161	0					
ANR	3247596	ArgumentList	gbc		3247161	1					
ANR	3247597	Argument	gbc		3247161	0					
ANR	3247598	Identifier	gbc		3247161	0					
ANR	3247599	Argument	5		3247161	1					
ANR	3247600	PrimaryExpression	5		3247161	0					
ANR	3247601	BreakStatement	break ;	177:44:3783:3788	3247161	2	True				
ANR	3247602	Label	case 2 :	179:16:3807:3813	3247161	3	True				
ANR	3247603	ExpressionStatement	"skip_bits ( gbc , 12 )"	179:24:3815:3833	3247161	4	True				
ANR	3247604	CallExpression	"skip_bits ( gbc , 12 )"		3247161	0					
ANR	3247605	Callee	skip_bits		3247161	0					
ANR	3247606	Identifier	skip_bits		3247161	0					
ANR	3247607	ArgumentList	gbc		3247161	1					
ANR	3247608	Argument	gbc		3247161	0					
ANR	3247609	Identifier	gbc		3247161	0					
ANR	3247610	Argument	12		3247161	1					
ANR	3247611	PrimaryExpression	12		3247161	0					
ANR	3247612	BreakStatement	break ;	179:44:3835:3840	3247161	5	True				
ANR	3247613	Label	case 3 :	181:16:3859:3865	3247161	6	True				
ANR	3247614	CompoundStatement		181:20:3842:3889	3247161	7					
ANR	3247615	IdentifierDeclStatement	"int mix_data_size = ( get_bits ( gbc , 5 ) + 2 ) << 3 ;"	183:20:3890:3937	3247161	0	True				
ANR	3247616	IdentifierDecl	"mix_data_size = ( get_bits ( gbc , 5 ) + 2 ) << 3"		3247161	0					
ANR	3247617	IdentifierDeclType	int		3247161	0					
ANR	3247618	Identifier	mix_data_size		3247161	1					
ANR	3247619	AssignmentExpression	"mix_data_size = ( get_bits ( gbc , 5 ) + 2 ) << 3"		3247161	2		=			
ANR	3247620	Identifier	mix_data_size		3247161	0					
ANR	3247621	ShiftExpression	"( get_bits ( gbc , 5 ) + 2 ) << 3"		3247161	1		<<			
ANR	3247622	AdditiveExpression	"get_bits ( gbc , 5 ) + 2"		3247161	0		+			
ANR	3247623	CallExpression	"get_bits ( gbc , 5 )"		3247161	0					
ANR	3247624	Callee	get_bits		3247161	0					
ANR	3247625	Identifier	get_bits		3247161	0					
ANR	3247626	ArgumentList	gbc		3247161	1					
ANR	3247627	Argument	gbc		3247161	0					
ANR	3247628	Identifier	gbc		3247161	0					
ANR	3247629	Argument	5		3247161	1					
ANR	3247630	PrimaryExpression	5		3247161	0					
ANR	3247631	PrimaryExpression	2		3247161	1					
ANR	3247632	PrimaryExpression	3		3247161	1					
ANR	3247633	ExpressionStatement	"skip_bits_long ( gbc , mix_data_size )"	185:20:3960:3994	3247161	1	True				
ANR	3247634	CallExpression	"skip_bits_long ( gbc , mix_data_size )"		3247161	0					
ANR	3247635	Callee	skip_bits_long		3247161	0					
ANR	3247636	Identifier	skip_bits_long		3247161	0					
ANR	3247637	ArgumentList	gbc		3247161	1					
ANR	3247638	Argument	gbc		3247161	0					
ANR	3247639	Identifier	gbc		3247161	0					
ANR	3247640	Argument	mix_data_size		3247161	1					
ANR	3247641	Identifier	mix_data_size		3247161	0					
ANR	3247642	BreakStatement	break ;	187:20:4017:4022	3247161	2	True				
ANR	3247643	IfStatement	if ( s -> channel_mode < AC3_CHMODE_STEREO )		3247161	3					
ANR	3247644	Condition	s -> channel_mode < AC3_CHMODE_STEREO	195:16:4144:4178	3247161	0	True				
ANR	3247645	RelationalExpression	s -> channel_mode < AC3_CHMODE_STEREO		3247161	0		<			
ANR	3247646	PtrMemberAccess	s -> channel_mode		3247161	0					
ANR	3247647	Identifier	s		3247161	0					
ANR	3247648	Identifier	channel_mode		3247161	1					
ANR	3247649	Identifier	AC3_CHMODE_STEREO		3247161	1					
ANR	3247650	CompoundStatement		193:53:4133:4133	3247161	1					
ANR	3247651	ForStatement	for ( i = 0 ; i < ( s -> channel_mode ? 1 : 2 ) ; i ++ )		3247161	0					
ANR	3247652	ForInit	i = 0 ;	197:21:4205:4210	3247161	0	True				
ANR	3247653	AssignmentExpression	i = 0		3247161	0		=			
ANR	3247654	Identifier	i		3247161	0					
ANR	3247655	PrimaryExpression	0		3247161	1					
ANR	3247656	Condition	i < ( s -> channel_mode ? 1 : 2 )	197:28:4212:4240	3247161	1	True				
ANR	3247657	RelationalExpression	i < ( s -> channel_mode ? 1 : 2 )		3247161	0		<			
ANR	3247658	Identifier	i		3247161	0					
ANR	3247659	ConditionalExpression	s -> channel_mode ? 1 : 2		3247161	1					
ANR	3247660	Condition	s -> channel_mode		3247161	0					
ANR	3247661	PtrMemberAccess	s -> channel_mode		3247161	0					
ANR	3247662	Identifier	s		3247161	0					
ANR	3247663	Identifier	channel_mode		3247161	1					
ANR	3247664	PrimaryExpression	1		3247161	1					
ANR	3247665	PrimaryExpression	2		3247161	2					
ANR	3247666	PostIncDecOperationExpression	i ++	197:59:4243:4245	3247161	2	True				
ANR	3247667	Identifier	i		3247161	0					
ANR	3247668	IncDec	++		3247161	1					
ANR	3247669	CompoundStatement		195:64:4200:4200	3247161	3					
ANR	3247670	IfStatement	if ( get_bits1 ( gbc ) )		3247161	0					
ANR	3247671	Condition	get_bits1 ( gbc )	199:24:4275:4288	3247161	0	True				
ANR	3247672	CallExpression	get_bits1 ( gbc )		3247161	0					
ANR	3247673	Callee	get_bits1		3247161	0					
ANR	3247674	Identifier	get_bits1		3247161	0					
ANR	3247675	ArgumentList	gbc		3247161	1					
ANR	3247676	Argument	gbc		3247161	0					
ANR	3247677	Identifier	gbc		3247161	0					
ANR	3247678	CompoundStatement		197:40:4243:4243	3247161	1					
ANR	3247679	ExpressionStatement	"skip_bits ( gbc , 8 )"	207:24:4520:4537	3247161	0	True				
ANR	3247680	CallExpression	"skip_bits ( gbc , 8 )"		3247161	0					
ANR	3247681	Callee	skip_bits		3247161	0					
ANR	3247682	Identifier	skip_bits		3247161	0					
ANR	3247683	ArgumentList	gbc		3247161	1					
ANR	3247684	Argument	gbc		3247161	0					
ANR	3247685	Identifier	gbc		3247161	0					
ANR	3247686	Argument	8		3247161	1					
ANR	3247687	PrimaryExpression	8		3247161	0					
ANR	3247688	ExpressionStatement	"skip_bits ( gbc , 6 )"	209:24:4598:4615	3247161	1	True				
ANR	3247689	CallExpression	"skip_bits ( gbc , 6 )"		3247161	0					
ANR	3247690	Callee	skip_bits		3247161	0					
ANR	3247691	Identifier	skip_bits		3247161	0					
ANR	3247692	ArgumentList	gbc		3247161	1					
ANR	3247693	Argument	gbc		3247161	0					
ANR	3247694	Identifier	gbc		3247161	0					
ANR	3247695	Argument	6		3247161	1					
ANR	3247696	PrimaryExpression	6		3247161	0					
ANR	3247697	IfStatement	if ( get_bits1 ( gbc ) )		3247161	4					
ANR	3247698	Condition	get_bits1 ( gbc )	219:16:4779:4792	3247161	0	True				
ANR	3247699	CallExpression	get_bits1 ( gbc )		3247161	0					
ANR	3247700	Callee	get_bits1		3247161	0					
ANR	3247701	Identifier	get_bits1		3247161	0					
ANR	3247702	ArgumentList	gbc		3247161	1					
ANR	3247703	Argument	gbc		3247161	0					
ANR	3247704	Identifier	gbc		3247161	0					
ANR	3247705	CompoundStatement		217:32:4747:4747	3247161	1					
ANR	3247706	ForStatement	for ( blk = 0 ; blk < s -> num_blocks ; blk ++ )		3247161	0					
ANR	3247707	ForInit	blk = 0 ;	221:21:4819:4826	3247161	0	True				
ANR	3247708	AssignmentExpression	blk = 0		3247161	0		=			
ANR	3247709	Identifier	blk		3247161	0					
ANR	3247710	PrimaryExpression	0		3247161	1					
ANR	3247711	Condition	blk < s -> num_blocks	221:30:4828:4846	3247161	1	True				
ANR	3247712	RelationalExpression	blk < s -> num_blocks		3247161	0		<			
ANR	3247713	Identifier	blk		3247161	0					
ANR	3247714	PtrMemberAccess	s -> num_blocks		3247161	1					
ANR	3247715	Identifier	s		3247161	0					
ANR	3247716	Identifier	num_blocks		3247161	1					
ANR	3247717	PostIncDecOperationExpression	blk ++	221:51:4849:4853	3247161	2	True				
ANR	3247718	Identifier	blk		3247161	0					
ANR	3247719	IncDec	++		3247161	1					
ANR	3247720	CompoundStatement		219:58:4808:4808	3247161	3					
ANR	3247721	IfStatement	if ( s -> num_blocks == 1 || get_bits1 ( gbc ) )		3247161	0					
ANR	3247722	Condition	s -> num_blocks == 1 || get_bits1 ( gbc )	223:24:4883:4918	3247161	0	True				
ANR	3247723	OrExpression	s -> num_blocks == 1 || get_bits1 ( gbc )		3247161	0		||			
ANR	3247724	EqualityExpression	s -> num_blocks == 1		3247161	0		==			
ANR	3247725	PtrMemberAccess	s -> num_blocks		3247161	0					
ANR	3247726	Identifier	s		3247161	0					
ANR	3247727	Identifier	num_blocks		3247161	1					
ANR	3247728	PrimaryExpression	1		3247161	1					
ANR	3247729	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3247730	Callee	get_bits1		3247161	0					
ANR	3247731	Identifier	get_bits1		3247161	0					
ANR	3247732	ArgumentList	gbc		3247161	1					
ANR	3247733	Argument	gbc		3247161	0					
ANR	3247734	Identifier	gbc		3247161	0					
ANR	3247735	CompoundStatement		221:62:4873:4873	3247161	1					
ANR	3247736	ExpressionStatement	"skip_bits ( gbc , 5 )"	225:24:4948:4965	3247161	0	True				
ANR	3247737	CallExpression	"skip_bits ( gbc , 5 )"		3247161	0					
ANR	3247738	Callee	skip_bits		3247161	0					
ANR	3247739	Identifier	skip_bits		3247161	0					
ANR	3247740	ArgumentList	gbc		3247161	1					
ANR	3247741	Argument	gbc		3247161	0					
ANR	3247742	Identifier	gbc		3247161	0					
ANR	3247743	Argument	5		3247161	1					
ANR	3247744	PrimaryExpression	5		3247161	0					
ANR	3247745	IfStatement	if ( get_bits1 ( gbc ) )		3247161	12					
ANR	3247746	Condition	get_bits1 ( gbc )	241:8:5087:5100	3247161	0	True				
ANR	3247747	CallExpression	get_bits1 ( gbc )		3247161	0					
ANR	3247748	Callee	get_bits1		3247161	0					
ANR	3247749	Identifier	get_bits1		3247161	0					
ANR	3247750	ArgumentList	gbc		3247161	1					
ANR	3247751	Argument	gbc		3247161	0					
ANR	3247752	Identifier	gbc		3247161	0					
ANR	3247753	CompoundStatement		239:24:5055:5055	3247161	1					
ANR	3247754	ExpressionStatement	"s -> bitstream_mode = get_bits ( gbc , 3 )"	243:8:5114:5150	3247161	0	True				
ANR	3247755	AssignmentExpression	"s -> bitstream_mode = get_bits ( gbc , 3 )"		3247161	0		=			
ANR	3247756	PtrMemberAccess	s -> bitstream_mode		3247161	0					
ANR	3247757	Identifier	s		3247161	0					
ANR	3247758	Identifier	bitstream_mode		3247161	1					
ANR	3247759	CallExpression	"get_bits ( gbc , 3 )"		3247161	1					
ANR	3247760	Callee	get_bits		3247161	0					
ANR	3247761	Identifier	get_bits		3247161	0					
ANR	3247762	ArgumentList	gbc		3247161	1					
ANR	3247763	Argument	gbc		3247161	0					
ANR	3247764	Identifier	gbc		3247161	0					
ANR	3247765	Argument	3		3247161	1					
ANR	3247766	PrimaryExpression	3		3247161	0					
ANR	3247767	ExpressionStatement	"skip_bits ( gbc , 2 )"	245:8:5161:5178	3247161	1	True				
ANR	3247768	CallExpression	"skip_bits ( gbc , 2 )"		3247161	0					
ANR	3247769	Callee	skip_bits		3247161	0					
ANR	3247770	Identifier	skip_bits		3247161	0					
ANR	3247771	ArgumentList	gbc		3247161	1					
ANR	3247772	Argument	gbc		3247161	0					
ANR	3247773	Identifier	gbc		3247161	0					
ANR	3247774	Argument	2		3247161	1					
ANR	3247775	PrimaryExpression	2		3247161	0					
ANR	3247776	IfStatement	if ( s -> channel_mode == AC3_CHMODE_STEREO )		3247161	2					
ANR	3247777	Condition	s -> channel_mode == AC3_CHMODE_STEREO	247:12:5242:5277	3247161	0	True				
ANR	3247778	EqualityExpression	s -> channel_mode == AC3_CHMODE_STEREO		3247161	0		==			
ANR	3247779	PtrMemberAccess	s -> channel_mode		3247161	0					
ANR	3247780	Identifier	s		3247161	0					
ANR	3247781	Identifier	channel_mode		3247161	1					
ANR	3247782	Identifier	AC3_CHMODE_STEREO		3247161	1					
ANR	3247783	CompoundStatement		245:50:5232:5232	3247161	1					
ANR	3247784	ExpressionStatement	"s -> dolby_surround_mode = get_bits ( gbc , 2 )"	249:12:5295:5337	3247161	0	True				
ANR	3247785	AssignmentExpression	"s -> dolby_surround_mode = get_bits ( gbc , 2 )"		3247161	0		=			
ANR	3247786	PtrMemberAccess	s -> dolby_surround_mode		3247161	0					
ANR	3247787	Identifier	s		3247161	0					
ANR	3247788	Identifier	dolby_surround_mode		3247161	1					
ANR	3247789	CallExpression	"get_bits ( gbc , 2 )"		3247161	1					
ANR	3247790	Callee	get_bits		3247161	0					
ANR	3247791	Identifier	get_bits		3247161	0					
ANR	3247792	ArgumentList	gbc		3247161	1					
ANR	3247793	Argument	gbc		3247161	0					
ANR	3247794	Identifier	gbc		3247161	0					
ANR	3247795	Argument	2		3247161	1					
ANR	3247796	PrimaryExpression	2		3247161	0					
ANR	3247797	ExpressionStatement	"s -> dolby_headphone_mode = get_bits ( gbc , 2 )"	251:12:5352:5394	3247161	1	True				
ANR	3247798	AssignmentExpression	"s -> dolby_headphone_mode = get_bits ( gbc , 2 )"		3247161	0		=			
ANR	3247799	PtrMemberAccess	s -> dolby_headphone_mode		3247161	0					
ANR	3247800	Identifier	s		3247161	0					
ANR	3247801	Identifier	dolby_headphone_mode		3247161	1					
ANR	3247802	CallExpression	"get_bits ( gbc , 2 )"		3247161	1					
ANR	3247803	Callee	get_bits		3247161	0					
ANR	3247804	Identifier	get_bits		3247161	0					
ANR	3247805	ArgumentList	gbc		3247161	1					
ANR	3247806	Argument	gbc		3247161	0					
ANR	3247807	Identifier	gbc		3247161	0					
ANR	3247808	Argument	2		3247161	1					
ANR	3247809	PrimaryExpression	2		3247161	0					
ANR	3247810	IfStatement	if ( s -> channel_mode >= AC3_CHMODE_2F2R )		3247161	3					
ANR	3247811	Condition	s -> channel_mode >= AC3_CHMODE_2F2R	255:12:5420:5453	3247161	0	True				
ANR	3247812	RelationalExpression	s -> channel_mode >= AC3_CHMODE_2F2R		3247161	0		>=			
ANR	3247813	PtrMemberAccess	s -> channel_mode		3247161	0					
ANR	3247814	Identifier	s		3247161	0					
ANR	3247815	Identifier	channel_mode		3247161	1					
ANR	3247816	Identifier	AC3_CHMODE_2F2R		3247161	1					
ANR	3247817	CompoundStatement		253:48:5408:5408	3247161	1					
ANR	3247818	ExpressionStatement	"s -> dolby_surround_ex_mode = get_bits ( gbc , 2 )"	257:12:5471:5515	3247161	0	True				
ANR	3247819	AssignmentExpression	"s -> dolby_surround_ex_mode = get_bits ( gbc , 2 )"		3247161	0		=			
ANR	3247820	PtrMemberAccess	s -> dolby_surround_ex_mode		3247161	0					
ANR	3247821	Identifier	s		3247161	0					
ANR	3247822	Identifier	dolby_surround_ex_mode		3247161	1					
ANR	3247823	CallExpression	"get_bits ( gbc , 2 )"		3247161	1					
ANR	3247824	Callee	get_bits		3247161	0					
ANR	3247825	Identifier	get_bits		3247161	0					
ANR	3247826	ArgumentList	gbc		3247161	1					
ANR	3247827	Argument	gbc		3247161	0					
ANR	3247828	Identifier	gbc		3247161	0					
ANR	3247829	Argument	2		3247161	1					
ANR	3247830	PrimaryExpression	2		3247161	0					
ANR	3247831	ForStatement	for ( i = 0 ; i < ( s -> channel_mode ? 1 : 2 ) ; i ++ )		3247161	4					
ANR	3247832	ForInit	i = 0 ;	261:13:5542:5547	3247161	0	True				
ANR	3247833	AssignmentExpression	i = 0		3247161	0		=			
ANR	3247834	Identifier	i		3247161	0					
ANR	3247835	PrimaryExpression	0		3247161	1					
ANR	3247836	Condition	i < ( s -> channel_mode ? 1 : 2 )	261:20:5549:5577	3247161	1	True				
ANR	3247837	RelationalExpression	i < ( s -> channel_mode ? 1 : 2 )		3247161	0		<			
ANR	3247838	Identifier	i		3247161	0					
ANR	3247839	ConditionalExpression	s -> channel_mode ? 1 : 2		3247161	1					
ANR	3247840	Condition	s -> channel_mode		3247161	0					
ANR	3247841	PtrMemberAccess	s -> channel_mode		3247161	0					
ANR	3247842	Identifier	s		3247161	0					
ANR	3247843	Identifier	channel_mode		3247161	1					
ANR	3247844	PrimaryExpression	1		3247161	1					
ANR	3247845	PrimaryExpression	2		3247161	2					
ANR	3247846	PostIncDecOperationExpression	i ++	261:51:5580:5582	3247161	2	True				
ANR	3247847	Identifier	i		3247161	0					
ANR	3247848	IncDec	++		3247161	1					
ANR	3247849	CompoundStatement		259:56:5537:5537	3247161	3					
ANR	3247850	IfStatement	if ( get_bits1 ( gbc ) )		3247161	0					
ANR	3247851	Condition	get_bits1 ( gbc )	263:16:5604:5617	3247161	0	True				
ANR	3247852	CallExpression	get_bits1 ( gbc )		3247161	0					
ANR	3247853	Callee	get_bits1		3247161	0					
ANR	3247854	Identifier	get_bits1		3247161	0					
ANR	3247855	ArgumentList	gbc		3247161	1					
ANR	3247856	Argument	gbc		3247161	0					
ANR	3247857	Identifier	gbc		3247161	0					
ANR	3247858	CompoundStatement		261:32:5572:5572	3247161	1					
ANR	3247859	ExpressionStatement	"skip_bits ( gbc , 8 )"	265:16:5639:5656	3247161	0	True				
ANR	3247860	CallExpression	"skip_bits ( gbc , 8 )"		3247161	0					
ANR	3247861	Callee	skip_bits		3247161	0					
ANR	3247862	Identifier	skip_bits		3247161	0					
ANR	3247863	ArgumentList	gbc		3247161	1					
ANR	3247864	Argument	gbc		3247161	0					
ANR	3247865	Identifier	gbc		3247161	0					
ANR	3247866	Argument	8		3247161	1					
ANR	3247867	PrimaryExpression	8		3247161	0					
ANR	3247868	IfStatement	if ( s -> bit_alloc_params . sr_code != EAC3_SR_CODE_REDUCED )		3247161	5					
ANR	3247869	Condition	s -> bit_alloc_params . sr_code != EAC3_SR_CODE_REDUCED	271:12:5750:5800	3247161	0	True				
ANR	3247870	EqualityExpression	s -> bit_alloc_params . sr_code != EAC3_SR_CODE_REDUCED		3247161	0		!=			
ANR	3247871	MemberAccess	s -> bit_alloc_params . sr_code		3247161	0					
ANR	3247872	PtrMemberAccess	s -> bit_alloc_params		3247161	0					
ANR	3247873	Identifier	s		3247161	0					
ANR	3247874	Identifier	bit_alloc_params		3247161	1					
ANR	3247875	Identifier	sr_code		3247161	1					
ANR	3247876	Identifier	EAC3_SR_CODE_REDUCED		3247161	1					
ANR	3247877	CompoundStatement		269:65:5755:5755	3247161	1					
ANR	3247878	ExpressionStatement	skip_bits1 ( gbc )	273:12:5818:5833	3247161	0	True				
ANR	3247879	CallExpression	skip_bits1 ( gbc )		3247161	0					
ANR	3247880	Callee	skip_bits1		3247161	0					
ANR	3247881	Identifier	skip_bits1		3247161	0					
ANR	3247882	ArgumentList	gbc		3247161	1					
ANR	3247883	Argument	gbc		3247161	0					
ANR	3247884	Identifier	gbc		3247161	0					
ANR	3247885	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && s -> num_blocks != 6 )		3247161	13					
ANR	3247886	Condition	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && s -> num_blocks != 6	289:8:6132:6197	3247161	0	True				
ANR	3247887	AndExpression	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && s -> num_blocks != 6		3247161	0		&&			
ANR	3247888	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT		3247161	0		==			
ANR	3247889	PtrMemberAccess	s -> frame_type		3247161	0					
ANR	3247890	Identifier	s		3247161	0					
ANR	3247891	Identifier	frame_type		3247161	1					
ANR	3247892	Identifier	EAC3_FRAME_TYPE_INDEPENDENT		3247161	1					
ANR	3247893	EqualityExpression	s -> num_blocks != 6		3247161	1		!=			
ANR	3247894	PtrMemberAccess	s -> num_blocks		3247161	0					
ANR	3247895	Identifier	s		3247161	0					
ANR	3247896	Identifier	num_blocks		3247161	1					
ANR	3247897	PrimaryExpression	6		3247161	1					
ANR	3247898	CompoundStatement		287:76:6152:6152	3247161	1					
ANR	3247899	ExpressionStatement	skip_bits1 ( gbc )	291:8:6211:6226	3247161	0	True				
ANR	3247900	CallExpression	skip_bits1 ( gbc )		3247161	0					
ANR	3247901	Callee	skip_bits1		3247161	0					
ANR	3247902	Identifier	skip_bits1		3247161	0					
ANR	3247903	ArgumentList	gbc		3247161	1					
ANR	3247904	Argument	gbc		3247161	0					
ANR	3247905	Identifier	gbc		3247161	0					
ANR	3247906	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_AC3_CONVERT && ( s -> num_blocks == 6 || get_bits1 ( gbc ) ) )		3247161	14					
ANR	3247907	Condition	s -> frame_type == EAC3_FRAME_TYPE_AC3_CONVERT && ( s -> num_blocks == 6 || get_bits1 ( gbc ) )	299:8:6360:6458	3247161	0	True				
ANR	3247908	AndExpression	s -> frame_type == EAC3_FRAME_TYPE_AC3_CONVERT && ( s -> num_blocks == 6 || get_bits1 ( gbc ) )		3247161	0		&&			
ANR	3247909	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_AC3_CONVERT		3247161	0		==			
ANR	3247910	PtrMemberAccess	s -> frame_type		3247161	0					
ANR	3247911	Identifier	s		3247161	0					
ANR	3247912	Identifier	frame_type		3247161	1					
ANR	3247913	Identifier	EAC3_FRAME_TYPE_AC3_CONVERT		3247161	1					
ANR	3247914	OrExpression	s -> num_blocks == 6 || get_bits1 ( gbc )		3247161	1		||			
ANR	3247915	EqualityExpression	s -> num_blocks == 6		3247161	0		==			
ANR	3247916	PtrMemberAccess	s -> num_blocks		3247161	0					
ANR	3247917	Identifier	s		3247161	0					
ANR	3247918	Identifier	num_blocks		3247161	1					
ANR	3247919	PrimaryExpression	6		3247161	1					
ANR	3247920	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3247921	Callee	get_bits1		3247161	0					
ANR	3247922	Identifier	get_bits1		3247161	0					
ANR	3247923	ArgumentList	gbc		3247161	1					
ANR	3247924	Argument	gbc		3247161	0					
ANR	3247925	Identifier	gbc		3247161	0					
ANR	3247926	CompoundStatement		299:52:6413:6413	3247161	1					
ANR	3247927	ExpressionStatement	"skip_bits ( gbc , 6 )"	303:8:6472:6489	3247161	0	True				
ANR	3247928	CallExpression	"skip_bits ( gbc , 6 )"		3247161	0					
ANR	3247929	Callee	skip_bits		3247161	0					
ANR	3247930	Identifier	skip_bits		3247161	0					
ANR	3247931	ArgumentList	gbc		3247161	1					
ANR	3247932	Argument	gbc		3247161	0					
ANR	3247933	Identifier	gbc		3247161	0					
ANR	3247934	Argument	6		3247161	1					
ANR	3247935	PrimaryExpression	6		3247161	0					
ANR	3247936	IfStatement	if ( get_bits1 ( gbc ) )		3247161	15					
ANR	3247937	Condition	get_bits1 ( gbc )	311:8:6570:6583	3247161	0	True				
ANR	3247938	CallExpression	get_bits1 ( gbc )		3247161	0					
ANR	3247939	Callee	get_bits1		3247161	0					
ANR	3247940	Identifier	get_bits1		3247161	0					
ANR	3247941	ArgumentList	gbc		3247161	1					
ANR	3247942	Argument	gbc		3247161	0					
ANR	3247943	Identifier	gbc		3247161	0					
ANR	3247944	CompoundStatement		311:8:6549:6579	3247161	1					
ANR	3247945	IdentifierDeclStatement	"int addbsil = get_bits ( gbc , 6 ) ;"	313:8:6597:6627	3247161	0	True				
ANR	3247946	IdentifierDecl	"addbsil = get_bits ( gbc , 6 )"		3247161	0					
ANR	3247947	IdentifierDeclType	int		3247161	0					
ANR	3247948	Identifier	addbsil		3247161	1					
ANR	3247949	AssignmentExpression	"addbsil = get_bits ( gbc , 6 )"		3247161	2		=			
ANR	3247950	Identifier	addbsil		3247161	0					
ANR	3247951	CallExpression	"get_bits ( gbc , 6 )"		3247161	1					
ANR	3247952	Callee	get_bits		3247161	0					
ANR	3247953	Identifier	get_bits		3247161	0					
ANR	3247954	ArgumentList	gbc		3247161	1					
ANR	3247955	Argument	gbc		3247161	0					
ANR	3247956	Identifier	gbc		3247161	0					
ANR	3247957	Argument	6		3247161	1					
ANR	3247958	PrimaryExpression	6		3247161	0					
ANR	3247959	ForStatement	for ( i = 0 ; i < addbsil + 1 ; i ++ )		3247161	1					
ANR	3247960	ForInit	i = 0 ;	315:13:6643:6648	3247161	0	True				
ANR	3247961	AssignmentExpression	i = 0		3247161	0		=			
ANR	3247962	Identifier	i		3247161	0					
ANR	3247963	PrimaryExpression	0		3247161	1					
ANR	3247964	Condition	i < addbsil + 1	315:20:6650:6664	3247161	1	True				
ANR	3247965	RelationalExpression	i < addbsil + 1		3247161	0		<			
ANR	3247966	Identifier	i		3247161	0					
ANR	3247967	AdditiveExpression	addbsil + 1		3247161	1		+			
ANR	3247968	Identifier	addbsil		3247161	0					
ANR	3247969	PrimaryExpression	1		3247161	1					
ANR	3247970	PostIncDecOperationExpression	i ++	315:37:6667:6669	3247161	2	True				
ANR	3247971	Identifier	i		3247161	0					
ANR	3247972	IncDec	++		3247161	1					
ANR	3247973	CompoundStatement		313:42:6624:6624	3247161	3					
ANR	3247974	ExpressionStatement	"skip_bits ( gbc , 8 )"	317:12:6687:6704	3247161	0	True				
ANR	3247975	CallExpression	"skip_bits ( gbc , 8 )"		3247161	0					
ANR	3247976	Callee	skip_bits		3247161	0					
ANR	3247977	Identifier	skip_bits		3247161	0					
ANR	3247978	ArgumentList	gbc		3247161	1					
ANR	3247979	Argument	gbc		3247161	0					
ANR	3247980	Identifier	gbc		3247161	0					
ANR	3247981	Argument	8		3247161	1					
ANR	3247982	PrimaryExpression	8		3247161	0					
ANR	3247983	IfStatement	if ( s -> num_blocks == 6 )		3247161	16					
ANR	3247984	Condition	s -> num_blocks == 6	329:8:6843:6860	3247161	0	True				
ANR	3247985	EqualityExpression	s -> num_blocks == 6		3247161	0		==			
ANR	3247986	PtrMemberAccess	s -> num_blocks		3247161	0					
ANR	3247987	Identifier	s		3247161	0					
ANR	3247988	Identifier	num_blocks		3247161	1					
ANR	3247989	PrimaryExpression	6		3247161	1					
ANR	3247990	CompoundStatement		327:28:6815:6815	3247161	1					
ANR	3247991	ExpressionStatement	ac3_exponent_strategy = get_bits1 ( gbc )	331:8:6874:6912	3247161	0	True				
ANR	3247992	AssignmentExpression	ac3_exponent_strategy = get_bits1 ( gbc )		3247161	0		=			
ANR	3247993	Identifier	ac3_exponent_strategy		3247161	0					
ANR	3247994	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3247995	Callee	get_bits1		3247161	0					
ANR	3247996	Identifier	get_bits1		3247161	0					
ANR	3247997	ArgumentList	gbc		3247161	1					
ANR	3247998	Argument	gbc		3247161	0					
ANR	3247999	Identifier	gbc		3247161	0					
ANR	3248000	ExpressionStatement	parse_aht_info = get_bits1 ( gbc )	333:8:6923:6961	3247161	1	True				
ANR	3248001	AssignmentExpression	parse_aht_info = get_bits1 ( gbc )		3247161	0		=			
ANR	3248002	Identifier	parse_aht_info		3247161	0					
ANR	3248003	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248004	Callee	get_bits1		3247161	0					
ANR	3248005	Identifier	get_bits1		3247161	0					
ANR	3248006	ArgumentList	gbc		3247161	1					
ANR	3248007	Argument	gbc		3247161	0					
ANR	3248008	Identifier	gbc		3247161	0					
ANR	3248009	ElseStatement	else		3247161	0					
ANR	3248010	CompoundStatement		333:11:6927:6927	3247161	0					
ANR	3248011	ExpressionStatement	ac3_exponent_strategy = 1	341:8:7096:7121	3247161	0	True				
ANR	3248012	AssignmentExpression	ac3_exponent_strategy = 1		3247161	0		=			
ANR	3248013	Identifier	ac3_exponent_strategy		3247161	0					
ANR	3248014	PrimaryExpression	1		3247161	1					
ANR	3248015	ExpressionStatement	parse_aht_info = 0	343:8:7132:7150	3247161	1	True				
ANR	3248016	AssignmentExpression	parse_aht_info = 0		3247161	0		=			
ANR	3248017	Identifier	parse_aht_info		3247161	0					
ANR	3248018	PrimaryExpression	0		3247161	1					
ANR	3248019	ExpressionStatement	"s -> snr_offset_strategy = get_bits ( gbc , 2 )"	349:4:7166:7210	3247161	17	True				
ANR	3248020	AssignmentExpression	"s -> snr_offset_strategy = get_bits ( gbc , 2 )"		3247161	0		=			
ANR	3248021	PtrMemberAccess	s -> snr_offset_strategy		3247161	0					
ANR	3248022	Identifier	s		3247161	0					
ANR	3248023	Identifier	snr_offset_strategy		3247161	1					
ANR	3248024	CallExpression	"get_bits ( gbc , 2 )"		3247161	1					
ANR	3248025	Callee	get_bits		3247161	0					
ANR	3248026	Identifier	get_bits		3247161	0					
ANR	3248027	ArgumentList	gbc		3247161	1					
ANR	3248028	Argument	gbc		3247161	0					
ANR	3248029	Identifier	gbc		3247161	0					
ANR	3248030	Argument	2		3247161	1					
ANR	3248031	PrimaryExpression	2		3247161	0					
ANR	3248032	ExpressionStatement	parse_transient_proc_info = get_bits1 ( gbc )	351:4:7217:7259	3247161	18	True				
ANR	3248033	AssignmentExpression	parse_transient_proc_info = get_bits1 ( gbc )		3247161	0		=			
ANR	3248034	Identifier	parse_transient_proc_info		3247161	0					
ANR	3248035	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248036	Callee	get_bits1		3247161	0					
ANR	3248037	Identifier	get_bits1		3247161	0					
ANR	3248038	ArgumentList	gbc		3247161	1					
ANR	3248039	Argument	gbc		3247161	0					
ANR	3248040	Identifier	gbc		3247161	0					
ANR	3248041	ExpressionStatement	s -> block_switch_syntax = get_bits1 ( gbc )	355:4:7268:7307	3247161	19	True				
ANR	3248042	AssignmentExpression	s -> block_switch_syntax = get_bits1 ( gbc )		3247161	0		=			
ANR	3248043	PtrMemberAccess	s -> block_switch_syntax		3247161	0					
ANR	3248044	Identifier	s		3247161	0					
ANR	3248045	Identifier	block_switch_syntax		3247161	1					
ANR	3248046	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248047	Callee	get_bits1		3247161	0					
ANR	3248048	Identifier	get_bits1		3247161	0					
ANR	3248049	ArgumentList	gbc		3247161	1					
ANR	3248050	Argument	gbc		3247161	0					
ANR	3248051	Identifier	gbc		3247161	0					
ANR	3248052	IfStatement	if ( ! s -> block_switch_syntax )		3247161	20					
ANR	3248053	Condition	! s -> block_switch_syntax	357:8:7318:7340	3247161	0	True				
ANR	3248054	UnaryOperationExpression	! s -> block_switch_syntax		3247161	0					
ANR	3248055	UnaryOperator	!		3247161	0					
ANR	3248056	PtrMemberAccess	s -> block_switch_syntax		3247161	1					
ANR	3248057	Identifier	s		3247161	0					
ANR	3248058	Identifier	block_switch_syntax		3247161	1					
ANR	3248059	ExpressionStatement	"memset ( s -> block_switch , 0 , sizeof ( s -> block_switch ) )"	359:8:7352:7403	3247161	1	True				
ANR	3248060	CallExpression	"memset ( s -> block_switch , 0 , sizeof ( s -> block_switch ) )"		3247161	0					
ANR	3248061	Callee	memset		3247161	0					
ANR	3248062	Identifier	memset		3247161	0					
ANR	3248063	ArgumentList	s -> block_switch		3247161	1					
ANR	3248064	Argument	s -> block_switch		3247161	0					
ANR	3248065	PtrMemberAccess	s -> block_switch		3247161	0					
ANR	3248066	Identifier	s		3247161	0					
ANR	3248067	Identifier	block_switch		3247161	1					
ANR	3248068	Argument	0		3247161	1					
ANR	3248069	PrimaryExpression	0		3247161	0					
ANR	3248070	Argument	sizeof ( s -> block_switch )		3247161	2					
ANR	3248071	SizeofExpression	sizeof ( s -> block_switch )		3247161	0					
ANR	3248072	Sizeof	sizeof		3247161	0					
ANR	3248073	PtrMemberAccess	s -> block_switch		3247161	1					
ANR	3248074	Identifier	s		3247161	0					
ANR	3248075	Identifier	block_switch		3247161	1					
ANR	3248076	ExpressionStatement	s -> dither_flag_syntax = get_bits1 ( gbc )	363:4:7412:7450	3247161	21	True				
ANR	3248077	AssignmentExpression	s -> dither_flag_syntax = get_bits1 ( gbc )		3247161	0		=			
ANR	3248078	PtrMemberAccess	s -> dither_flag_syntax		3247161	0					
ANR	3248079	Identifier	s		3247161	0					
ANR	3248080	Identifier	dither_flag_syntax		3247161	1					
ANR	3248081	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248082	Callee	get_bits1		3247161	0					
ANR	3248083	Identifier	get_bits1		3247161	0					
ANR	3248084	ArgumentList	gbc		3247161	1					
ANR	3248085	Argument	gbc		3247161	0					
ANR	3248086	Identifier	gbc		3247161	0					
ANR	3248087	IfStatement	if ( ! s -> dither_flag_syntax )		3247161	22					
ANR	3248088	Condition	! s -> dither_flag_syntax	365:8:7461:7482	3247161	0	True				
ANR	3248089	UnaryOperationExpression	! s -> dither_flag_syntax		3247161	0					
ANR	3248090	UnaryOperator	!		3247161	0					
ANR	3248091	PtrMemberAccess	s -> dither_flag_syntax		3247161	1					
ANR	3248092	Identifier	s		3247161	0					
ANR	3248093	Identifier	dither_flag_syntax		3247161	1					
ANR	3248094	CompoundStatement		363:32:7437:7437	3247161	1					
ANR	3248095	ForStatement	for ( ch = 1 ; ch <= s -> fbw_channels ; ch ++ )		3247161	0					
ANR	3248096	ForInit	ch = 1 ;	367:13:7501:7507	3247161	0	True				
ANR	3248097	AssignmentExpression	ch = 1		3247161	0		=			
ANR	3248098	Identifier	ch		3247161	0					
ANR	3248099	PrimaryExpression	1		3247161	1					
ANR	3248100	Condition	ch <= s -> fbw_channels	367:21:7509:7529	3247161	1	True				
ANR	3248101	RelationalExpression	ch <= s -> fbw_channels		3247161	0		<=			
ANR	3248102	Identifier	ch		3247161	0					
ANR	3248103	PtrMemberAccess	s -> fbw_channels		3247161	1					
ANR	3248104	Identifier	s		3247161	0					
ANR	3248105	Identifier	fbw_channels		3247161	1					
ANR	3248106	PostIncDecOperationExpression	ch ++	367:44:7532:7535	3247161	2	True				
ANR	3248107	Identifier	ch		3247161	0					
ANR	3248108	IncDec	++		3247161	1					
ANR	3248109	ExpressionStatement	s -> dither_flag [ ch ] = 1	369:12:7551:7573	3247161	3	True				
ANR	3248110	AssignmentExpression	s -> dither_flag [ ch ] = 1		3247161	0		=			
ANR	3248111	ArrayIndexing	s -> dither_flag [ ch ]		3247161	0					
ANR	3248112	PtrMemberAccess	s -> dither_flag		3247161	0					
ANR	3248113	Identifier	s		3247161	0					
ANR	3248114	Identifier	dither_flag		3247161	1					
ANR	3248115	Identifier	ch		3247161	1					
ANR	3248116	PrimaryExpression	1		3247161	1					
ANR	3248117	ExpressionStatement	s -> dither_flag [ CPL_CH ] = s -> dither_flag [ s -> lfe_ch ] = 0	373:4:7587:7641	3247161	23	True				
ANR	3248118	AssignmentExpression	s -> dither_flag [ CPL_CH ] = s -> dither_flag [ s -> lfe_ch ] = 0		3247161	0		=			
ANR	3248119	ArrayIndexing	s -> dither_flag [ CPL_CH ]		3247161	0					
ANR	3248120	PtrMemberAccess	s -> dither_flag		3247161	0					
ANR	3248121	Identifier	s		3247161	0					
ANR	3248122	Identifier	dither_flag		3247161	1					
ANR	3248123	Identifier	CPL_CH		3247161	1					
ANR	3248124	AssignmentExpression	s -> dither_flag [ s -> lfe_ch ] = 0		3247161	1		=			
ANR	3248125	ArrayIndexing	s -> dither_flag [ s -> lfe_ch ]		3247161	0					
ANR	3248126	PtrMemberAccess	s -> dither_flag		3247161	0					
ANR	3248127	Identifier	s		3247161	0					
ANR	3248128	Identifier	dither_flag		3247161	1					
ANR	3248129	PtrMemberAccess	s -> lfe_ch		3247161	1					
ANR	3248130	Identifier	s		3247161	0					
ANR	3248131	Identifier	lfe_ch		3247161	1					
ANR	3248132	PrimaryExpression	0		3247161	1					
ANR	3248133	ExpressionStatement	s -> bit_allocation_syntax = get_bits1 ( gbc )	377:4:7650:7691	3247161	24	True				
ANR	3248134	AssignmentExpression	s -> bit_allocation_syntax = get_bits1 ( gbc )		3247161	0		=			
ANR	3248135	PtrMemberAccess	s -> bit_allocation_syntax		3247161	0					
ANR	3248136	Identifier	s		3247161	0					
ANR	3248137	Identifier	bit_allocation_syntax		3247161	1					
ANR	3248138	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248139	Callee	get_bits1		3247161	0					
ANR	3248140	Identifier	get_bits1		3247161	0					
ANR	3248141	ArgumentList	gbc		3247161	1					
ANR	3248142	Argument	gbc		3247161	0					
ANR	3248143	Identifier	gbc		3247161	0					
ANR	3248144	IfStatement	if ( ! s -> bit_allocation_syntax )		3247161	25					
ANR	3248145	Condition	! s -> bit_allocation_syntax	379:8:7702:7726	3247161	0	True				
ANR	3248146	UnaryOperationExpression	! s -> bit_allocation_syntax		3247161	0					
ANR	3248147	UnaryOperator	!		3247161	0					
ANR	3248148	PtrMemberAccess	s -> bit_allocation_syntax		3247161	1					
ANR	3248149	Identifier	s		3247161	0					
ANR	3248150	Identifier	bit_allocation_syntax		3247161	1					
ANR	3248151	CompoundStatement		377:35:7681:7681	3247161	1					
ANR	3248152	ExpressionStatement	s -> bit_alloc_params . slow_decay = ff_ac3_slow_decay_tab [ 2 ]	383:8:7793:7850	3247161	0	True				
ANR	3248153	AssignmentExpression	s -> bit_alloc_params . slow_decay = ff_ac3_slow_decay_tab [ 2 ]		3247161	0		=			
ANR	3248154	MemberAccess	s -> bit_alloc_params . slow_decay		3247161	0					
ANR	3248155	PtrMemberAccess	s -> bit_alloc_params		3247161	0					
ANR	3248156	Identifier	s		3247161	0					
ANR	3248157	Identifier	bit_alloc_params		3247161	1					
ANR	3248158	Identifier	slow_decay		3247161	1					
ANR	3248159	ArrayIndexing	ff_ac3_slow_decay_tab [ 2 ]		3247161	1					
ANR	3248160	Identifier	ff_ac3_slow_decay_tab		3247161	0					
ANR	3248161	PrimaryExpression	2		3247161	1					
ANR	3248162	ExpressionStatement	s -> bit_alloc_params . fast_decay = ff_ac3_fast_decay_tab [ 1 ]	385:8:7861:7918	3247161	1	True				
ANR	3248163	AssignmentExpression	s -> bit_alloc_params . fast_decay = ff_ac3_fast_decay_tab [ 1 ]		3247161	0		=			
ANR	3248164	MemberAccess	s -> bit_alloc_params . fast_decay		3247161	0					
ANR	3248165	PtrMemberAccess	s -> bit_alloc_params		3247161	0					
ANR	3248166	Identifier	s		3247161	0					
ANR	3248167	Identifier	bit_alloc_params		3247161	1					
ANR	3248168	Identifier	fast_decay		3247161	1					
ANR	3248169	ArrayIndexing	ff_ac3_fast_decay_tab [ 1 ]		3247161	1					
ANR	3248170	Identifier	ff_ac3_fast_decay_tab		3247161	0					
ANR	3248171	PrimaryExpression	1		3247161	1					
ANR	3248172	ExpressionStatement	s -> bit_alloc_params . slow_gain = ff_ac3_slow_gain_tab [ 1 ]	387:8:7929:7986	3247161	2	True				
ANR	3248173	AssignmentExpression	s -> bit_alloc_params . slow_gain = ff_ac3_slow_gain_tab [ 1 ]		3247161	0		=			
ANR	3248174	MemberAccess	s -> bit_alloc_params . slow_gain		3247161	0					
ANR	3248175	PtrMemberAccess	s -> bit_alloc_params		3247161	0					
ANR	3248176	Identifier	s		3247161	0					
ANR	3248177	Identifier	bit_alloc_params		3247161	1					
ANR	3248178	Identifier	slow_gain		3247161	1					
ANR	3248179	ArrayIndexing	ff_ac3_slow_gain_tab [ 1 ]		3247161	1					
ANR	3248180	Identifier	ff_ac3_slow_gain_tab		3247161	0					
ANR	3248181	PrimaryExpression	1		3247161	1					
ANR	3248182	ExpressionStatement	s -> bit_alloc_params . db_per_bit = ff_ac3_db_per_bit_tab [ 2 ]	389:8:7997:8054	3247161	3	True				
ANR	3248183	AssignmentExpression	s -> bit_alloc_params . db_per_bit = ff_ac3_db_per_bit_tab [ 2 ]		3247161	0		=			
ANR	3248184	MemberAccess	s -> bit_alloc_params . db_per_bit		3247161	0					
ANR	3248185	PtrMemberAccess	s -> bit_alloc_params		3247161	0					
ANR	3248186	Identifier	s		3247161	0					
ANR	3248187	Identifier	bit_alloc_params		3247161	1					
ANR	3248188	Identifier	db_per_bit		3247161	1					
ANR	3248189	ArrayIndexing	ff_ac3_db_per_bit_tab [ 2 ]		3247161	1					
ANR	3248190	Identifier	ff_ac3_db_per_bit_tab		3247161	0					
ANR	3248191	PrimaryExpression	2		3247161	1					
ANR	3248192	ExpressionStatement	s -> bit_alloc_params . floor = ff_ac3_floor_tab [ 7 ]	391:8:8065:8122	3247161	4	True				
ANR	3248193	AssignmentExpression	s -> bit_alloc_params . floor = ff_ac3_floor_tab [ 7 ]		3247161	0		=			
ANR	3248194	MemberAccess	s -> bit_alloc_params . floor		3247161	0					
ANR	3248195	PtrMemberAccess	s -> bit_alloc_params		3247161	0					
ANR	3248196	Identifier	s		3247161	0					
ANR	3248197	Identifier	bit_alloc_params		3247161	1					
ANR	3248198	Identifier	floor		3247161	1					
ANR	3248199	ArrayIndexing	ff_ac3_floor_tab [ 7 ]		3247161	1					
ANR	3248200	Identifier	ff_ac3_floor_tab		3247161	0					
ANR	3248201	PrimaryExpression	7		3247161	1					
ANR	3248202	ExpressionStatement	s -> fast_gain_syntax = get_bits1 ( gbc )	397:4:8138:8175	3247161	26	True				
ANR	3248203	AssignmentExpression	s -> fast_gain_syntax = get_bits1 ( gbc )		3247161	0		=			
ANR	3248204	PtrMemberAccess	s -> fast_gain_syntax		3247161	0					
ANR	3248205	Identifier	s		3247161	0					
ANR	3248206	Identifier	fast_gain_syntax		3247161	1					
ANR	3248207	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248208	Callee	get_bits1		3247161	0					
ANR	3248209	Identifier	get_bits1		3247161	0					
ANR	3248210	ArgumentList	gbc		3247161	1					
ANR	3248211	Argument	gbc		3247161	0					
ANR	3248212	Identifier	gbc		3247161	0					
ANR	3248213	ExpressionStatement	s -> dba_syntax = get_bits1 ( gbc )	399:4:8182:8219	3247161	27	True				
ANR	3248214	AssignmentExpression	s -> dba_syntax = get_bits1 ( gbc )		3247161	0		=			
ANR	3248215	PtrMemberAccess	s -> dba_syntax		3247161	0					
ANR	3248216	Identifier	s		3247161	0					
ANR	3248217	Identifier	dba_syntax		3247161	1					
ANR	3248218	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248219	Callee	get_bits1		3247161	0					
ANR	3248220	Identifier	get_bits1		3247161	0					
ANR	3248221	ArgumentList	gbc		3247161	1					
ANR	3248222	Argument	gbc		3247161	0					
ANR	3248223	Identifier	gbc		3247161	0					
ANR	3248224	ExpressionStatement	s -> skip_syntax = get_bits1 ( gbc )	401:4:8226:8263	3247161	28	True				
ANR	3248225	AssignmentExpression	s -> skip_syntax = get_bits1 ( gbc )		3247161	0		=			
ANR	3248226	PtrMemberAccess	s -> skip_syntax		3247161	0					
ANR	3248227	Identifier	s		3247161	0					
ANR	3248228	Identifier	skip_syntax		3247161	1					
ANR	3248229	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248230	Callee	get_bits1		3247161	0					
ANR	3248231	Identifier	get_bits1		3247161	0					
ANR	3248232	ArgumentList	gbc		3247161	1					
ANR	3248233	Argument	gbc		3247161	0					
ANR	3248234	Identifier	gbc		3247161	0					
ANR	3248235	ExpressionStatement	parse_spx_atten_data = get_bits1 ( gbc )	403:4:8270:8307	3247161	29	True				
ANR	3248236	AssignmentExpression	parse_spx_atten_data = get_bits1 ( gbc )		3247161	0		=			
ANR	3248237	Identifier	parse_spx_atten_data		3247161	0					
ANR	3248238	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248239	Callee	get_bits1		3247161	0					
ANR	3248240	Identifier	get_bits1		3247161	0					
ANR	3248241	ArgumentList	gbc		3247161	1					
ANR	3248242	Argument	gbc		3247161	0					
ANR	3248243	Identifier	gbc		3247161	0					
ANR	3248244	ExpressionStatement	num_cpl_blocks = 0	409:4:8383:8401	3247161	30	True				
ANR	3248245	AssignmentExpression	num_cpl_blocks = 0		3247161	0		=			
ANR	3248246	Identifier	num_cpl_blocks		3247161	0					
ANR	3248247	PrimaryExpression	0		3247161	1					
ANR	3248248	IfStatement	if ( s -> channel_mode > 1 )		3247161	31					
ANR	3248249	Condition	s -> channel_mode > 1	411:8:8412:8430	3247161	0	True				
ANR	3248250	RelationalExpression	s -> channel_mode > 1		3247161	0		>			
ANR	3248251	PtrMemberAccess	s -> channel_mode		3247161	0					
ANR	3248252	Identifier	s		3247161	0					
ANR	3248253	Identifier	channel_mode		3247161	1					
ANR	3248254	PrimaryExpression	1		3247161	1					
ANR	3248255	CompoundStatement		409:29:8385:8385	3247161	1					
ANR	3248256	ForStatement	for ( blk = 0 ; blk < s -> num_blocks ; blk ++ )		3247161	0					
ANR	3248257	ForInit	blk = 0 ;	413:13:8449:8456	3247161	0	True				
ANR	3248258	AssignmentExpression	blk = 0		3247161	0		=			
ANR	3248259	Identifier	blk		3247161	0					
ANR	3248260	PrimaryExpression	0		3247161	1					
ANR	3248261	Condition	blk < s -> num_blocks	413:22:8458:8476	3247161	1	True				
ANR	3248262	RelationalExpression	blk < s -> num_blocks		3247161	0		<			
ANR	3248263	Identifier	blk		3247161	0					
ANR	3248264	PtrMemberAccess	s -> num_blocks		3247161	1					
ANR	3248265	Identifier	s		3247161	0					
ANR	3248266	Identifier	num_blocks		3247161	1					
ANR	3248267	PostIncDecOperationExpression	blk ++	413:43:8479:8483	3247161	2	True				
ANR	3248268	Identifier	blk		3247161	0					
ANR	3248269	IncDec	++		3247161	1					
ANR	3248270	CompoundStatement		411:50:8438:8438	3247161	3					
ANR	3248271	ExpressionStatement	s -> cpl_strategy_exists [ blk ] = ( ! blk || get_bits1 ( gbc ) )	415:12:8501:8555	3247161	0	True				
ANR	3248272	AssignmentExpression	s -> cpl_strategy_exists [ blk ] = ( ! blk || get_bits1 ( gbc ) )		3247161	0		=			
ANR	3248273	ArrayIndexing	s -> cpl_strategy_exists [ blk ]		3247161	0					
ANR	3248274	PtrMemberAccess	s -> cpl_strategy_exists		3247161	0					
ANR	3248275	Identifier	s		3247161	0					
ANR	3248276	Identifier	cpl_strategy_exists		3247161	1					
ANR	3248277	Identifier	blk		3247161	1					
ANR	3248278	OrExpression	! blk || get_bits1 ( gbc )		3247161	1		||			
ANR	3248279	UnaryOperationExpression	! blk		3247161	0					
ANR	3248280	UnaryOperator	!		3247161	0					
ANR	3248281	Identifier	blk		3247161	1					
ANR	3248282	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248283	Callee	get_bits1		3247161	0					
ANR	3248284	Identifier	get_bits1		3247161	0					
ANR	3248285	ArgumentList	gbc		3247161	1					
ANR	3248286	Argument	gbc		3247161	0					
ANR	3248287	Identifier	gbc		3247161	0					
ANR	3248288	IfStatement	if ( s -> cpl_strategy_exists [ blk ] )		3247161	1					
ANR	3248289	Condition	s -> cpl_strategy_exists [ blk ]	417:16:8574:8600	3247161	0	True				
ANR	3248290	ArrayIndexing	s -> cpl_strategy_exists [ blk ]		3247161	0					
ANR	3248291	PtrMemberAccess	s -> cpl_strategy_exists		3247161	0					
ANR	3248292	Identifier	s		3247161	0					
ANR	3248293	Identifier	cpl_strategy_exists		3247161	1					
ANR	3248294	Identifier	blk		3247161	1					
ANR	3248295	CompoundStatement		415:45:8555:8555	3247161	1					
ANR	3248296	ExpressionStatement	s -> cpl_in_use [ blk ] = get_bits1 ( gbc )	419:16:8622:8657	3247161	0	True				
ANR	3248297	AssignmentExpression	s -> cpl_in_use [ blk ] = get_bits1 ( gbc )		3247161	0		=			
ANR	3248298	ArrayIndexing	s -> cpl_in_use [ blk ]		3247161	0					
ANR	3248299	PtrMemberAccess	s -> cpl_in_use		3247161	0					
ANR	3248300	Identifier	s		3247161	0					
ANR	3248301	Identifier	cpl_in_use		3247161	1					
ANR	3248302	Identifier	blk		3247161	1					
ANR	3248303	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248304	Callee	get_bits1		3247161	0					
ANR	3248305	Identifier	get_bits1		3247161	0					
ANR	3248306	ArgumentList	gbc		3247161	1					
ANR	3248307	Argument	gbc		3247161	0					
ANR	3248308	Identifier	gbc		3247161	0					
ANR	3248309	ElseStatement	else		3247161	0					
ANR	3248310	CompoundStatement		419:19:8631:8631	3247161	0					
ANR	3248311	ExpressionStatement	s -> cpl_in_use [ blk ] = s -> cpl_in_use [ blk - 1 ]	423:16:8698:8739	3247161	0	True				
ANR	3248312	AssignmentExpression	s -> cpl_in_use [ blk ] = s -> cpl_in_use [ blk - 1 ]		3247161	0		=			
ANR	3248313	ArrayIndexing	s -> cpl_in_use [ blk ]		3247161	0					
ANR	3248314	PtrMemberAccess	s -> cpl_in_use		3247161	0					
ANR	3248315	Identifier	s		3247161	0					
ANR	3248316	Identifier	cpl_in_use		3247161	1					
ANR	3248317	Identifier	blk		3247161	1					
ANR	3248318	ArrayIndexing	s -> cpl_in_use [ blk - 1 ]		3247161	1					
ANR	3248319	PtrMemberAccess	s -> cpl_in_use		3247161	0					
ANR	3248320	Identifier	s		3247161	0					
ANR	3248321	Identifier	cpl_in_use		3247161	1					
ANR	3248322	AdditiveExpression	blk - 1		3247161	1		-			
ANR	3248323	Identifier	blk		3247161	0					
ANR	3248324	PrimaryExpression	1		3247161	1					
ANR	3248325	ExpressionStatement	num_cpl_blocks += s -> cpl_in_use [ blk ]	427:12:8769:8805	3247161	2	True				
ANR	3248326	AssignmentExpression	num_cpl_blocks += s -> cpl_in_use [ blk ]		3247161	0		+=			
ANR	3248327	Identifier	num_cpl_blocks		3247161	0					
ANR	3248328	ArrayIndexing	s -> cpl_in_use [ blk ]		3247161	1					
ANR	3248329	PtrMemberAccess	s -> cpl_in_use		3247161	0					
ANR	3248330	Identifier	s		3247161	0					
ANR	3248331	Identifier	cpl_in_use		3247161	1					
ANR	3248332	Identifier	blk		3247161	1					
ANR	3248333	ElseStatement	else		3247161	0					
ANR	3248334	CompoundStatement		429:11:8782:8782	3247161	0					
ANR	3248335	ExpressionStatement	"memset ( s -> cpl_in_use , 0 , sizeof ( s -> cpl_in_use ) )"	433:8:8841:8888	3247161	0	True				
ANR	3248336	CallExpression	"memset ( s -> cpl_in_use , 0 , sizeof ( s -> cpl_in_use ) )"		3247161	0					
ANR	3248337	Callee	memset		3247161	0					
ANR	3248338	Identifier	memset		3247161	0					
ANR	3248339	ArgumentList	s -> cpl_in_use		3247161	1					
ANR	3248340	Argument	s -> cpl_in_use		3247161	0					
ANR	3248341	PtrMemberAccess	s -> cpl_in_use		3247161	0					
ANR	3248342	Identifier	s		3247161	0					
ANR	3248343	Identifier	cpl_in_use		3247161	1					
ANR	3248344	Argument	0		3247161	1					
ANR	3248345	PrimaryExpression	0		3247161	0					
ANR	3248346	Argument	sizeof ( s -> cpl_in_use )		3247161	2					
ANR	3248347	SizeofExpression	sizeof ( s -> cpl_in_use )		3247161	0					
ANR	3248348	Sizeof	sizeof		3247161	0					
ANR	3248349	PtrMemberAccess	s -> cpl_in_use		3247161	1					
ANR	3248350	Identifier	s		3247161	0					
ANR	3248351	Identifier	cpl_in_use		3247161	1					
ANR	3248352	IfStatement	if ( ac3_exponent_strategy )		3247161	32					
ANR	3248353	Condition	ac3_exponent_strategy	441:8:8942:8962	3247161	0	True				
ANR	3248354	Identifier	ac3_exponent_strategy		3247161	0					
ANR	3248355	CompoundStatement		439:31:8917:8917	3247161	1					
ANR	3248356	ForStatement	for ( blk = 0 ; blk < s -> num_blocks ; blk ++ )		3247161	0					
ANR	3248357	ForInit	blk = 0 ;	445:13:9032:9039	3247161	0	True				
ANR	3248358	AssignmentExpression	blk = 0		3247161	0		=			
ANR	3248359	Identifier	blk		3247161	0					
ANR	3248360	PrimaryExpression	0		3247161	1					
ANR	3248361	Condition	blk < s -> num_blocks	445:22:9041:9059	3247161	1	True				
ANR	3248362	RelationalExpression	blk < s -> num_blocks		3247161	0		<			
ANR	3248363	Identifier	blk		3247161	0					
ANR	3248364	PtrMemberAccess	s -> num_blocks		3247161	1					
ANR	3248365	Identifier	s		3247161	0					
ANR	3248366	Identifier	num_blocks		3247161	1					
ANR	3248367	PostIncDecOperationExpression	blk ++	445:43:9062:9066	3247161	2	True				
ANR	3248368	Identifier	blk		3247161	0					
ANR	3248369	IncDec	++		3247161	1					
ANR	3248370	CompoundStatement		443:50:9021:9021	3247161	3					
ANR	3248371	ForStatement	for ( ch = ! s -> cpl_in_use [ blk ] ; ch <= s -> fbw_channels ; ch ++ )		3247161	0					
ANR	3248372	ForInit	ch = ! s -> cpl_in_use [ blk ] ;	447:17:9089:9113	3247161	0	True				
ANR	3248373	AssignmentExpression	ch = ! s -> cpl_in_use [ blk ]		3247161	0		=			
ANR	3248374	Identifier	ch		3247161	0					
ANR	3248375	UnaryOperationExpression	! s -> cpl_in_use [ blk ]		3247161	1					
ANR	3248376	UnaryOperator	!		3247161	0					
ANR	3248377	ArrayIndexing	s -> cpl_in_use [ blk ]		3247161	1					
ANR	3248378	PtrMemberAccess	s -> cpl_in_use		3247161	0					
ANR	3248379	Identifier	s		3247161	0					
ANR	3248380	Identifier	cpl_in_use		3247161	1					
ANR	3248381	Identifier	blk		3247161	1					
ANR	3248382	Condition	ch <= s -> fbw_channels	447:43:9115:9135	3247161	1	True				
ANR	3248383	RelationalExpression	ch <= s -> fbw_channels		3247161	0		<=			
ANR	3248384	Identifier	ch		3247161	0					
ANR	3248385	PtrMemberAccess	s -> fbw_channels		3247161	1					
ANR	3248386	Identifier	s		3247161	0					
ANR	3248387	Identifier	fbw_channels		3247161	1					
ANR	3248388	PostIncDecOperationExpression	ch ++	447:66:9138:9141	3247161	2	True				
ANR	3248389	Identifier	ch		3247161	0					
ANR	3248390	IncDec	++		3247161	1					
ANR	3248391	CompoundStatement		445:72:9096:9096	3247161	3					
ANR	3248392	ExpressionStatement	"s -> exp_strategy [ blk ] [ ch ] = get_bits ( gbc , 2 )"	449:16:9163:9206	3247161	0	True				
ANR	3248393	AssignmentExpression	"s -> exp_strategy [ blk ] [ ch ] = get_bits ( gbc , 2 )"		3247161	0		=			
ANR	3248394	ArrayIndexing	s -> exp_strategy [ blk ] [ ch ]		3247161	0					
ANR	3248395	ArrayIndexing	s -> exp_strategy [ blk ]		3247161	0					
ANR	3248396	PtrMemberAccess	s -> exp_strategy		3247161	0					
ANR	3248397	Identifier	s		3247161	0					
ANR	3248398	Identifier	exp_strategy		3247161	1					
ANR	3248399	Identifier	blk		3247161	1					
ANR	3248400	Identifier	ch		3247161	1					
ANR	3248401	CallExpression	"get_bits ( gbc , 2 )"		3247161	1					
ANR	3248402	Callee	get_bits		3247161	0					
ANR	3248403	Identifier	get_bits		3247161	0					
ANR	3248404	ArgumentList	gbc		3247161	1					
ANR	3248405	Argument	gbc		3247161	0					
ANR	3248406	Identifier	gbc		3247161	0					
ANR	3248407	Argument	2		3247161	1					
ANR	3248408	PrimaryExpression	2		3247161	0					
ANR	3248409	ElseStatement	else		3247161	0					
ANR	3248410	CompoundStatement		453:11:9198:9198	3247161	0					
ANR	3248411	ForStatement	for ( ch = ! ( ( s -> channel_mode > 1 ) && num_cpl_blocks ) ; ch <= s -> fbw_channels ; ch ++ )		3247161	0					
ANR	3248412	ForInit	ch = ! ( ( s -> channel_mode > 1 ) && num_cpl_blocks ) ;	459:13:9312:9359	3247161	0	True				
ANR	3248413	AssignmentExpression	ch = ! ( ( s -> channel_mode > 1 ) && num_cpl_blocks )		3247161	0		=			
ANR	3248414	Identifier	ch		3247161	0					
ANR	3248415	UnaryOperationExpression	! ( ( s -> channel_mode > 1 ) && num_cpl_blocks )		3247161	1					
ANR	3248416	UnaryOperator	!		3247161	0					
ANR	3248417	AndExpression	( s -> channel_mode > 1 ) && num_cpl_blocks		3247161	1		&&			
ANR	3248418	RelationalExpression	s -> channel_mode > 1		3247161	0		>			
ANR	3248419	PtrMemberAccess	s -> channel_mode		3247161	0					
ANR	3248420	Identifier	s		3247161	0					
ANR	3248421	Identifier	channel_mode		3247161	1					
ANR	3248422	PrimaryExpression	1		3247161	1					
ANR	3248423	Identifier	num_cpl_blocks		3247161	1					
ANR	3248424	Condition	ch <= s -> fbw_channels	459:62:9361:9381	3247161	1	True				
ANR	3248425	RelationalExpression	ch <= s -> fbw_channels		3247161	0		<=			
ANR	3248426	Identifier	ch		3247161	0					
ANR	3248427	PtrMemberAccess	s -> fbw_channels		3247161	1					
ANR	3248428	Identifier	s		3247161	0					
ANR	3248429	Identifier	fbw_channels		3247161	1					
ANR	3248430	PostIncDecOperationExpression	ch ++	459:85:9384:9387	3247161	2	True				
ANR	3248431	Identifier	ch		3247161	0					
ANR	3248432	IncDec	++		3247161	1					
ANR	3248433	CompoundStatement		459:12:9357:9391	3247161	3					
ANR	3248434	IdentifierDeclStatement	"int frmchexpstr = get_bits ( gbc , 5 ) ;"	461:12:9405:9439	3247161	0	True				
ANR	3248435	IdentifierDecl	"frmchexpstr = get_bits ( gbc , 5 )"		3247161	0					
ANR	3248436	IdentifierDeclType	int		3247161	0					
ANR	3248437	Identifier	frmchexpstr		3247161	1					
ANR	3248438	AssignmentExpression	"frmchexpstr = get_bits ( gbc , 5 )"		3247161	2		=			
ANR	3248439	Identifier	frmchexpstr		3247161	0					
ANR	3248440	CallExpression	"get_bits ( gbc , 5 )"		3247161	1					
ANR	3248441	Callee	get_bits		3247161	0					
ANR	3248442	Identifier	get_bits		3247161	0					
ANR	3248443	ArgumentList	gbc		3247161	1					
ANR	3248444	Argument	gbc		3247161	0					
ANR	3248445	Identifier	gbc		3247161	0					
ANR	3248446	Argument	5		3247161	1					
ANR	3248447	PrimaryExpression	5		3247161	0					
ANR	3248448	ForStatement	for ( blk = 0 ; blk < 6 ; blk ++ )		3247161	1					
ANR	3248449	ForInit	blk = 0 ;	463:17:9459:9466	3247161	0	True				
ANR	3248450	AssignmentExpression	blk = 0		3247161	0		=			
ANR	3248451	Identifier	blk		3247161	0					
ANR	3248452	PrimaryExpression	0		3247161	1					
ANR	3248453	Condition	blk < 6	463:26:9468:9474	3247161	1	True				
ANR	3248454	RelationalExpression	blk < 6		3247161	0		<			
ANR	3248455	Identifier	blk		3247161	0					
ANR	3248456	PrimaryExpression	6		3247161	1					
ANR	3248457	PostIncDecOperationExpression	blk ++	463:35:9477:9481	3247161	2	True				
ANR	3248458	Identifier	blk		3247161	0					
ANR	3248459	IncDec	++		3247161	1					
ANR	3248460	CompoundStatement		461:42:9436:9436	3247161	3					
ANR	3248461	ExpressionStatement	s -> exp_strategy [ blk ] [ ch ] = ff_eac3_frm_expstr [ frmchexpstr ] [ blk ]	465:16:9503:9566	3247161	0	True				
ANR	3248462	AssignmentExpression	s -> exp_strategy [ blk ] [ ch ] = ff_eac3_frm_expstr [ frmchexpstr ] [ blk ]		3247161	0		=			
ANR	3248463	ArrayIndexing	s -> exp_strategy [ blk ] [ ch ]		3247161	0					
ANR	3248464	ArrayIndexing	s -> exp_strategy [ blk ]		3247161	0					
ANR	3248465	PtrMemberAccess	s -> exp_strategy		3247161	0					
ANR	3248466	Identifier	s		3247161	0					
ANR	3248467	Identifier	exp_strategy		3247161	1					
ANR	3248468	Identifier	blk		3247161	1					
ANR	3248469	Identifier	ch		3247161	1					
ANR	3248470	ArrayIndexing	ff_eac3_frm_expstr [ frmchexpstr ] [ blk ]		3247161	1					
ANR	3248471	ArrayIndexing	ff_eac3_frm_expstr [ frmchexpstr ]		3247161	0					
ANR	3248472	Identifier	ff_eac3_frm_expstr		3247161	0					
ANR	3248473	Identifier	frmchexpstr		3247161	1					
ANR	3248474	Identifier	blk		3247161	1					
ANR	3248475	IfStatement	if ( s -> lfe_on )		3247161	33					
ANR	3248476	Condition	s -> lfe_on	475:8:9643:9651	3247161	0	True				
ANR	3248477	PtrMemberAccess	s -> lfe_on		3247161	0					
ANR	3248478	Identifier	s		3247161	0					
ANR	3248479	Identifier	lfe_on		3247161	1					
ANR	3248480	CompoundStatement		473:19:9606:9606	3247161	1					
ANR	3248481	ForStatement	for ( blk = 0 ; blk < s -> num_blocks ; blk ++ )		3247161	0					
ANR	3248482	ForInit	blk = 0 ;	477:13:9670:9677	3247161	0	True				
ANR	3248483	AssignmentExpression	blk = 0		3247161	0		=			
ANR	3248484	Identifier	blk		3247161	0					
ANR	3248485	PrimaryExpression	0		3247161	1					
ANR	3248486	Condition	blk < s -> num_blocks	477:22:9679:9697	3247161	1	True				
ANR	3248487	RelationalExpression	blk < s -> num_blocks		3247161	0		<			
ANR	3248488	Identifier	blk		3247161	0					
ANR	3248489	PtrMemberAccess	s -> num_blocks		3247161	1					
ANR	3248490	Identifier	s		3247161	0					
ANR	3248491	Identifier	num_blocks		3247161	1					
ANR	3248492	PostIncDecOperationExpression	blk ++	477:43:9700:9704	3247161	2	True				
ANR	3248493	Identifier	blk		3247161	0					
ANR	3248494	IncDec	++		3247161	1					
ANR	3248495	CompoundStatement		475:50:9659:9659	3247161	3					
ANR	3248496	ExpressionStatement	s -> exp_strategy [ blk ] [ s -> lfe_ch ] = get_bits1 ( gbc )	479:12:9722:9770	3247161	0	True				
ANR	3248497	AssignmentExpression	s -> exp_strategy [ blk ] [ s -> lfe_ch ] = get_bits1 ( gbc )		3247161	0		=			
ANR	3248498	ArrayIndexing	s -> exp_strategy [ blk ] [ s -> lfe_ch ]		3247161	0					
ANR	3248499	ArrayIndexing	s -> exp_strategy [ blk ]		3247161	0					
ANR	3248500	PtrMemberAccess	s -> exp_strategy		3247161	0					
ANR	3248501	Identifier	s		3247161	0					
ANR	3248502	Identifier	exp_strategy		3247161	1					
ANR	3248503	Identifier	blk		3247161	1					
ANR	3248504	PtrMemberAccess	s -> lfe_ch		3247161	1					
ANR	3248505	Identifier	s		3247161	0					
ANR	3248506	Identifier	lfe_ch		3247161	1					
ANR	3248507	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248508	Callee	get_bits1		3247161	0					
ANR	3248509	Identifier	get_bits1		3247161	0					
ANR	3248510	ArgumentList	gbc		3247161	1					
ANR	3248511	Argument	gbc		3247161	0					
ANR	3248512	Identifier	gbc		3247161	0					
ANR	3248513	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && ( s -> num_blocks == 6 || get_bits1 ( gbc ) ) )		3247161	34					
ANR	3248514	Condition	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && ( s -> num_blocks == 6 || get_bits1 ( gbc ) )	487:8:9878:9976	3247161	0	True				
ANR	3248515	AndExpression	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT && ( s -> num_blocks == 6 || get_bits1 ( gbc ) )		3247161	0		&&			
ANR	3248516	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_INDEPENDENT		3247161	0		==			
ANR	3248517	PtrMemberAccess	s -> frame_type		3247161	0					
ANR	3248518	Identifier	s		3247161	0					
ANR	3248519	Identifier	frame_type		3247161	1					
ANR	3248520	Identifier	EAC3_FRAME_TYPE_INDEPENDENT		3247161	1					
ANR	3248521	OrExpression	s -> num_blocks == 6 || get_bits1 ( gbc )		3247161	1		||			
ANR	3248522	EqualityExpression	s -> num_blocks == 6		3247161	0		==			
ANR	3248523	PtrMemberAccess	s -> num_blocks		3247161	0					
ANR	3248524	Identifier	s		3247161	0					
ANR	3248525	Identifier	num_blocks		3247161	1					
ANR	3248526	PrimaryExpression	6		3247161	1					
ANR	3248527	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248528	Callee	get_bits1		3247161	0					
ANR	3248529	Identifier	get_bits1		3247161	0					
ANR	3248530	ArgumentList	gbc		3247161	1					
ANR	3248531	Argument	gbc		3247161	0					
ANR	3248532	Identifier	gbc		3247161	0					
ANR	3248533	CompoundStatement		487:52:9931:9931	3247161	1					
ANR	3248534	ExpressionStatement	"skip_bits ( gbc , 5 * s -> fbw_channels )"	491:8:9990:10025	3247161	0	True				
ANR	3248535	CallExpression	"skip_bits ( gbc , 5 * s -> fbw_channels )"		3247161	0					
ANR	3248536	Callee	skip_bits		3247161	0					
ANR	3248537	Identifier	skip_bits		3247161	0					
ANR	3248538	ArgumentList	gbc		3247161	1					
ANR	3248539	Argument	gbc		3247161	0					
ANR	3248540	Identifier	gbc		3247161	0					
ANR	3248541	Argument	5 * s -> fbw_channels		3247161	1					
ANR	3248542	MultiplicativeExpression	5 * s -> fbw_channels		3247161	0		*			
ANR	3248543	PrimaryExpression	5		3247161	0					
ANR	3248544	PtrMemberAccess	s -> fbw_channels		3247161	1					
ANR	3248545	Identifier	s		3247161	0					
ANR	3248546	Identifier	fbw_channels		3247161	1					
ANR	3248547	IfStatement	if ( parse_aht_info )		3247161	35					
ANR	3248548	Condition	parse_aht_info	499:8:10133:10146	3247161	0	True				
ANR	3248549	Identifier	parse_aht_info		3247161	0					
ANR	3248550	CompoundStatement		497:24:10101:10101	3247161	1					
ANR	3248551	ExpressionStatement	s -> channel_uses_aht [ CPL_CH ] = 0	509:8:10417:10446	3247161	0	True				
ANR	3248552	AssignmentExpression	s -> channel_uses_aht [ CPL_CH ] = 0		3247161	0		=			
ANR	3248553	ArrayIndexing	s -> channel_uses_aht [ CPL_CH ]		3247161	0					
ANR	3248554	PtrMemberAccess	s -> channel_uses_aht		3247161	0					
ANR	3248555	Identifier	s		3247161	0					
ANR	3248556	Identifier	channel_uses_aht		3247161	1					
ANR	3248557	Identifier	CPL_CH		3247161	1					
ANR	3248558	PrimaryExpression	0		3247161	1					
ANR	3248559	ForStatement	for ( ch = ( num_cpl_blocks != 6 ) ; ch <= s -> channels ; ch ++ )		3247161	1					
ANR	3248560	ForInit	ch = ( num_cpl_blocks != 6 ) ;	511:13:10462:10488	3247161	0	True				
ANR	3248561	AssignmentExpression	ch = ( num_cpl_blocks != 6 )		3247161	0		=			
ANR	3248562	Identifier	ch		3247161	0					
ANR	3248563	EqualityExpression	num_cpl_blocks != 6		3247161	1		!=			
ANR	3248564	Identifier	num_cpl_blocks		3247161	0					
ANR	3248565	PrimaryExpression	6		3247161	1					
ANR	3248566	Condition	ch <= s -> channels	511:41:10490:10506	3247161	1	True				
ANR	3248567	RelationalExpression	ch <= s -> channels		3247161	0		<=			
ANR	3248568	Identifier	ch		3247161	0					
ANR	3248569	PtrMemberAccess	s -> channels		3247161	1					
ANR	3248570	Identifier	s		3247161	0					
ANR	3248571	Identifier	channels		3247161	1					
ANR	3248572	PostIncDecOperationExpression	ch ++	511:60:10509:10512	3247161	2	True				
ANR	3248573	Identifier	ch		3247161	0					
ANR	3248574	IncDec	++		3247161	1					
ANR	3248575	CompoundStatement		511:12:10482:10497	3247161	3					
ANR	3248576	IdentifierDeclStatement	int use_aht = 1 ;	513:12:10530:10545	3247161	0	True				
ANR	3248577	IdentifierDecl	use_aht = 1		3247161	0					
ANR	3248578	IdentifierDeclType	int		3247161	0					
ANR	3248579	Identifier	use_aht		3247161	1					
ANR	3248580	AssignmentExpression	use_aht = 1		3247161	2		=			
ANR	3248581	Identifier	use_aht		3247161	0					
ANR	3248582	PrimaryExpression	1		3247161	1					
ANR	3248583	ForStatement	for ( blk = 1 ; blk < 6 ; blk ++ )		3247161	1					
ANR	3248584	ForInit	blk = 1 ;	515:17:10565:10572	3247161	0	True				
ANR	3248585	AssignmentExpression	blk = 1		3247161	0		=			
ANR	3248586	Identifier	blk		3247161	0					
ANR	3248587	PrimaryExpression	1		3247161	1					
ANR	3248588	Condition	blk < 6	515:26:10574:10580	3247161	1	True				
ANR	3248589	RelationalExpression	blk < 6		3247161	0		<			
ANR	3248590	Identifier	blk		3247161	0					
ANR	3248591	PrimaryExpression	6		3247161	1					
ANR	3248592	PostIncDecOperationExpression	blk ++	515:35:10583:10587	3247161	2	True				
ANR	3248593	Identifier	blk		3247161	0					
ANR	3248594	IncDec	++		3247161	1					
ANR	3248595	CompoundStatement		513:42:10542:10542	3247161	3					
ANR	3248596	IfStatement	if ( ( s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE ) || ( ! ch && s -> cpl_strategy_exists [ blk ] ) )		3247161	0					
ANR	3248597	Condition	( s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE ) || ( ! ch && s -> cpl_strategy_exists [ blk ] )	517:20:10613:10716	3247161	0	True				
ANR	3248598	OrExpression	( s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE ) || ( ! ch && s -> cpl_strategy_exists [ blk ] )		3247161	0		||			
ANR	3248599	EqualityExpression	s -> exp_strategy [ blk ] [ ch ] != EXP_REUSE		3247161	0		!=			
ANR	3248600	ArrayIndexing	s -> exp_strategy [ blk ] [ ch ]		3247161	0					
ANR	3248601	ArrayIndexing	s -> exp_strategy [ blk ]		3247161	0					
ANR	3248602	PtrMemberAccess	s -> exp_strategy		3247161	0					
ANR	3248603	Identifier	s		3247161	0					
ANR	3248604	Identifier	exp_strategy		3247161	1					
ANR	3248605	Identifier	blk		3247161	1					
ANR	3248606	Identifier	ch		3247161	1					
ANR	3248607	Identifier	EXP_REUSE		3247161	1					
ANR	3248608	AndExpression	! ch && s -> cpl_strategy_exists [ blk ]		3247161	1		&&			
ANR	3248609	UnaryOperationExpression	! ch		3247161	0					
ANR	3248610	UnaryOperator	!		3247161	0					
ANR	3248611	Identifier	ch		3247161	1					
ANR	3248612	ArrayIndexing	s -> cpl_strategy_exists [ blk ]		3247161	1					
ANR	3248613	PtrMemberAccess	s -> cpl_strategy_exists		3247161	0					
ANR	3248614	Identifier	s		3247161	0					
ANR	3248615	Identifier	cpl_strategy_exists		3247161	1					
ANR	3248616	Identifier	blk		3247161	1					
ANR	3248617	CompoundStatement		517:62:10671:10671	3247161	1					
ANR	3248618	ExpressionStatement	use_aht = 0	521:20:10742:10753	3247161	0	True				
ANR	3248619	AssignmentExpression	use_aht = 0		3247161	0		=			
ANR	3248620	Identifier	use_aht		3247161	0					
ANR	3248621	PrimaryExpression	0		3247161	1					
ANR	3248622	BreakStatement	break ;	523:20:10776:10781	3247161	1	True				
ANR	3248623	ExpressionStatement	s -> channel_uses_aht [ ch ] = use_aht && get_bits1 ( gbc )	529:12:10830:10881	3247161	2	True				
ANR	3248624	AssignmentExpression	s -> channel_uses_aht [ ch ] = use_aht && get_bits1 ( gbc )		3247161	0		=			
ANR	3248625	ArrayIndexing	s -> channel_uses_aht [ ch ]		3247161	0					
ANR	3248626	PtrMemberAccess	s -> channel_uses_aht		3247161	0					
ANR	3248627	Identifier	s		3247161	0					
ANR	3248628	Identifier	channel_uses_aht		3247161	1					
ANR	3248629	Identifier	ch		3247161	1					
ANR	3248630	AndExpression	use_aht && get_bits1 ( gbc )		3247161	1		&&			
ANR	3248631	Identifier	use_aht		3247161	0					
ANR	3248632	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248633	Callee	get_bits1		3247161	0					
ANR	3248634	Identifier	get_bits1		3247161	0					
ANR	3248635	ArgumentList	gbc		3247161	1					
ANR	3248636	Argument	gbc		3247161	0					
ANR	3248637	Identifier	gbc		3247161	0					
ANR	3248638	ElseStatement	else		3247161	0					
ANR	3248639	CompoundStatement		531:11:10858:10858	3247161	0					
ANR	3248640	ExpressionStatement	"memset ( s -> channel_uses_aht , 0 , sizeof ( s -> channel_uses_aht ) )"	535:8:10917:10976	3247161	0	True				
ANR	3248641	CallExpression	"memset ( s -> channel_uses_aht , 0 , sizeof ( s -> channel_uses_aht ) )"		3247161	0					
ANR	3248642	Callee	memset		3247161	0					
ANR	3248643	Identifier	memset		3247161	0					
ANR	3248644	ArgumentList	s -> channel_uses_aht		3247161	1					
ANR	3248645	Argument	s -> channel_uses_aht		3247161	0					
ANR	3248646	PtrMemberAccess	s -> channel_uses_aht		3247161	0					
ANR	3248647	Identifier	s		3247161	0					
ANR	3248648	Identifier	channel_uses_aht		3247161	1					
ANR	3248649	Argument	0		3247161	1					
ANR	3248650	PrimaryExpression	0		3247161	0					
ANR	3248651	Argument	sizeof ( s -> channel_uses_aht )		3247161	2					
ANR	3248652	SizeofExpression	sizeof ( s -> channel_uses_aht )		3247161	0					
ANR	3248653	Sizeof	sizeof		3247161	0					
ANR	3248654	PtrMemberAccess	s -> channel_uses_aht		3247161	1					
ANR	3248655	Identifier	s		3247161	0					
ANR	3248656	Identifier	channel_uses_aht		3247161	1					
ANR	3248657	IfStatement	if ( ! s -> snr_offset_strategy )		3247161	36					
ANR	3248658	Condition	! s -> snr_offset_strategy	543:8:11028:11050	3247161	0	True				
ANR	3248659	UnaryOperationExpression	! s -> snr_offset_strategy		3247161	0					
ANR	3248660	UnaryOperator	!		3247161	0					
ANR	3248661	PtrMemberAccess	s -> snr_offset_strategy		3247161	1					
ANR	3248662	Identifier	s		3247161	0					
ANR	3248663	Identifier	snr_offset_strategy		3247161	1					
ANR	3248664	CompoundStatement		545:8:11071:11121	3247161	1					
ANR	3248665	IdentifierDeclStatement	"int csnroffst = ( get_bits ( gbc , 6 ) - 15 ) << 4 ;"	545:8:11064:11108	3247161	0	True				
ANR	3248666	IdentifierDecl	"csnroffst = ( get_bits ( gbc , 6 ) - 15 ) << 4"		3247161	0					
ANR	3248667	IdentifierDeclType	int		3247161	0					
ANR	3248668	Identifier	csnroffst		3247161	1					
ANR	3248669	AssignmentExpression	"csnroffst = ( get_bits ( gbc , 6 ) - 15 ) << 4"		3247161	2		=			
ANR	3248670	Identifier	csnroffst		3247161	0					
ANR	3248671	ShiftExpression	"( get_bits ( gbc , 6 ) - 15 ) << 4"		3247161	1		<<			
ANR	3248672	AdditiveExpression	"get_bits ( gbc , 6 ) - 15"		3247161	0		-			
ANR	3248673	CallExpression	"get_bits ( gbc , 6 )"		3247161	0					
ANR	3248674	Callee	get_bits		3247161	0					
ANR	3248675	Identifier	get_bits		3247161	0					
ANR	3248676	ArgumentList	gbc		3247161	1					
ANR	3248677	Argument	gbc		3247161	0					
ANR	3248678	Identifier	gbc		3247161	0					
ANR	3248679	Argument	6		3247161	1					
ANR	3248680	PrimaryExpression	6		3247161	0					
ANR	3248681	PrimaryExpression	15		3247161	1					
ANR	3248682	PrimaryExpression	4		3247161	1					
ANR	3248683	IdentifierDeclStatement	"int snroffst = ( csnroffst + get_bits ( gbc , 4 ) ) << 2 ;"	547:8:11119:11169	3247161	1	True				
ANR	3248684	IdentifierDecl	"snroffst = ( csnroffst + get_bits ( gbc , 4 ) ) << 2"		3247161	0					
ANR	3248685	IdentifierDeclType	int		3247161	0					
ANR	3248686	Identifier	snroffst		3247161	1					
ANR	3248687	AssignmentExpression	"snroffst = ( csnroffst + get_bits ( gbc , 4 ) ) << 2"		3247161	2		=			
ANR	3248688	Identifier	snroffst		3247161	0					
ANR	3248689	ShiftExpression	"( csnroffst + get_bits ( gbc , 4 ) ) << 2"		3247161	1		<<			
ANR	3248690	AdditiveExpression	"csnroffst + get_bits ( gbc , 4 )"		3247161	0		+			
ANR	3248691	Identifier	csnroffst		3247161	0					
ANR	3248692	CallExpression	"get_bits ( gbc , 4 )"		3247161	1					
ANR	3248693	Callee	get_bits		3247161	0					
ANR	3248694	Identifier	get_bits		3247161	0					
ANR	3248695	ArgumentList	gbc		3247161	1					
ANR	3248696	Argument	gbc		3247161	0					
ANR	3248697	Identifier	gbc		3247161	0					
ANR	3248698	Argument	4		3247161	1					
ANR	3248699	PrimaryExpression	4		3247161	0					
ANR	3248700	PrimaryExpression	2		3247161	1					
ANR	3248701	ForStatement	for ( ch = 0 ; ch <= s -> channels ; ch ++ )		3247161	2					
ANR	3248702	ForInit	ch = 0 ;	549:13:11185:11191	3247161	0	True				
ANR	3248703	AssignmentExpression	ch = 0		3247161	0		=			
ANR	3248704	Identifier	ch		3247161	0					
ANR	3248705	PrimaryExpression	0		3247161	1					
ANR	3248706	Condition	ch <= s -> channels	549:21:11193:11209	3247161	1	True				
ANR	3248707	RelationalExpression	ch <= s -> channels		3247161	0		<=			
ANR	3248708	Identifier	ch		3247161	0					
ANR	3248709	PtrMemberAccess	s -> channels		3247161	1					
ANR	3248710	Identifier	s		3247161	0					
ANR	3248711	Identifier	channels		3247161	1					
ANR	3248712	PostIncDecOperationExpression	ch ++	549:40:11212:11215	3247161	2	True				
ANR	3248713	Identifier	ch		3247161	0					
ANR	3248714	IncDec	++		3247161	1					
ANR	3248715	ExpressionStatement	s -> snr_offset [ ch ] = snroffst	551:12:11231:11259	3247161	3	True				
ANR	3248716	AssignmentExpression	s -> snr_offset [ ch ] = snroffst		3247161	0		=			
ANR	3248717	ArrayIndexing	s -> snr_offset [ ch ]		3247161	0					
ANR	3248718	PtrMemberAccess	s -> snr_offset		3247161	0					
ANR	3248719	Identifier	s		3247161	0					
ANR	3248720	Identifier	snr_offset		3247161	1					
ANR	3248721	Identifier	ch		3247161	1					
ANR	3248722	Identifier	snroffst		3247161	1					
ANR	3248723	IfStatement	if ( parse_transient_proc_info )		3247161	37					
ANR	3248724	Condition	parse_transient_proc_info	559:8:11326:11350	3247161	0	True				
ANR	3248725	Identifier	parse_transient_proc_info		3247161	0					
ANR	3248726	CompoundStatement		557:35:11305:11305	3247161	1					
ANR	3248727	ForStatement	for ( ch = 1 ; ch <= s -> fbw_channels ; ch ++ )		3247161	0					
ANR	3248728	ForInit	ch = 1 ;	561:13:11369:11375	3247161	0	True				
ANR	3248729	AssignmentExpression	ch = 1		3247161	0		=			
ANR	3248730	Identifier	ch		3247161	0					
ANR	3248731	PrimaryExpression	1		3247161	1					
ANR	3248732	Condition	ch <= s -> fbw_channels	561:21:11377:11397	3247161	1	True				
ANR	3248733	RelationalExpression	ch <= s -> fbw_channels		3247161	0		<=			
ANR	3248734	Identifier	ch		3247161	0					
ANR	3248735	PtrMemberAccess	s -> fbw_channels		3247161	1					
ANR	3248736	Identifier	s		3247161	0					
ANR	3248737	Identifier	fbw_channels		3247161	1					
ANR	3248738	PostIncDecOperationExpression	ch ++	561:44:11400:11403	3247161	2	True				
ANR	3248739	Identifier	ch		3247161	0					
ANR	3248740	IncDec	++		3247161	1					
ANR	3248741	CompoundStatement		559:50:11358:11358	3247161	3					
ANR	3248742	IfStatement	if ( get_bits1 ( gbc ) )		3247161	0					
ANR	3248743	Condition	get_bits1 ( gbc )	563:16:11425:11438	3247161	0	True				
ANR	3248744	CallExpression	get_bits1 ( gbc )		3247161	0					
ANR	3248745	Callee	get_bits1		3247161	0					
ANR	3248746	Identifier	get_bits1		3247161	0					
ANR	3248747	ArgumentList	gbc		3247161	1					
ANR	3248748	Argument	gbc		3247161	0					
ANR	3248749	Identifier	gbc		3247161	0					
ANR	3248750	CompoundStatement		561:32:11393:11393	3247161	1					
ANR	3248751	ExpressionStatement	"skip_bits ( gbc , 10 )"	565:16:11495:11513	3247161	0	True				
ANR	3248752	CallExpression	"skip_bits ( gbc , 10 )"		3247161	0					
ANR	3248753	Callee	skip_bits		3247161	0					
ANR	3248754	Identifier	skip_bits		3247161	0					
ANR	3248755	ArgumentList	gbc		3247161	1					
ANR	3248756	Argument	gbc		3247161	0					
ANR	3248757	Identifier	gbc		3247161	0					
ANR	3248758	Argument	10		3247161	1					
ANR	3248759	PrimaryExpression	10		3247161	0					
ANR	3248760	ExpressionStatement	"skip_bits ( gbc , 8 )"	567:16:11570:11587	3247161	1	True				
ANR	3248761	CallExpression	"skip_bits ( gbc , 8 )"		3247161	0					
ANR	3248762	Callee	skip_bits		3247161	0					
ANR	3248763	Identifier	skip_bits		3247161	0					
ANR	3248764	ArgumentList	gbc		3247161	1					
ANR	3248765	Argument	gbc		3247161	0					
ANR	3248766	Identifier	gbc		3247161	0					
ANR	3248767	Argument	8		3247161	1					
ANR	3248768	PrimaryExpression	8		3247161	0					
ANR	3248769	ForStatement	for ( ch = 1 ; ch <= s -> fbw_channels ; ch ++ )		3247161	38					
ANR	3248770	ForInit	ch = 1 ;	579:9:11718:11724	3247161	0	True				
ANR	3248771	AssignmentExpression	ch = 1		3247161	0		=			
ANR	3248772	Identifier	ch		3247161	0					
ANR	3248773	PrimaryExpression	1		3247161	1					
ANR	3248774	Condition	ch <= s -> fbw_channels	579:17:11726:11746	3247161	1	True				
ANR	3248775	RelationalExpression	ch <= s -> fbw_channels		3247161	0		<=			
ANR	3248776	Identifier	ch		3247161	0					
ANR	3248777	PtrMemberAccess	s -> fbw_channels		3247161	1					
ANR	3248778	Identifier	s		3247161	0					
ANR	3248779	Identifier	fbw_channels		3247161	1					
ANR	3248780	PostIncDecOperationExpression	ch ++	579:40:11749:11752	3247161	2	True				
ANR	3248781	Identifier	ch		3247161	0					
ANR	3248782	IncDec	++		3247161	1					
ANR	3248783	CompoundStatement		577:46:11707:11707	3247161	3					
ANR	3248784	IfStatement	if ( parse_spx_atten_data && get_bits1 ( gbc ) )		3247161	0					
ANR	3248785	Condition	parse_spx_atten_data && get_bits1 ( gbc )	581:12:11770:11807	3247161	0	True				
ANR	3248786	AndExpression	parse_spx_atten_data && get_bits1 ( gbc )		3247161	0		&&			
ANR	3248787	Identifier	parse_spx_atten_data		3247161	0					
ANR	3248788	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248789	Callee	get_bits1		3247161	0					
ANR	3248790	Identifier	get_bits1		3247161	0					
ANR	3248791	ArgumentList	gbc		3247161	1					
ANR	3248792	Argument	gbc		3247161	0					
ANR	3248793	Identifier	gbc		3247161	0					
ANR	3248794	CompoundStatement		579:52:11762:11762	3247161	1					
ANR	3248795	ExpressionStatement	"s -> spx_atten_code [ ch ] = get_bits ( gbc , 5 )"	583:12:11825:11865	3247161	0	True				
ANR	3248796	AssignmentExpression	"s -> spx_atten_code [ ch ] = get_bits ( gbc , 5 )"		3247161	0		=			
ANR	3248797	ArrayIndexing	s -> spx_atten_code [ ch ]		3247161	0					
ANR	3248798	PtrMemberAccess	s -> spx_atten_code		3247161	0					
ANR	3248799	Identifier	s		3247161	0					
ANR	3248800	Identifier	spx_atten_code		3247161	1					
ANR	3248801	Identifier	ch		3247161	1					
ANR	3248802	CallExpression	"get_bits ( gbc , 5 )"		3247161	1					
ANR	3248803	Callee	get_bits		3247161	0					
ANR	3248804	Identifier	get_bits		3247161	0					
ANR	3248805	ArgumentList	gbc		3247161	1					
ANR	3248806	Argument	gbc		3247161	0					
ANR	3248807	Identifier	gbc		3247161	0					
ANR	3248808	Argument	5		3247161	1					
ANR	3248809	PrimaryExpression	5		3247161	0					
ANR	3248810	ElseStatement	else		3247161	0					
ANR	3248811	CompoundStatement		583:15:11835:11835	3247161	0					
ANR	3248812	ExpressionStatement	s -> spx_atten_code [ ch ] = - 1	587:12:11898:11924	3247161	0	True				
ANR	3248813	AssignmentExpression	s -> spx_atten_code [ ch ] = - 1		3247161	0		=			
ANR	3248814	ArrayIndexing	s -> spx_atten_code [ ch ]		3247161	0					
ANR	3248815	PtrMemberAccess	s -> spx_atten_code		3247161	0					
ANR	3248816	Identifier	s		3247161	0					
ANR	3248817	Identifier	spx_atten_code		3247161	1					
ANR	3248818	Identifier	ch		3247161	1					
ANR	3248819	UnaryOperationExpression	- 1		3247161	1					
ANR	3248820	UnaryOperator	-		3247161	0					
ANR	3248821	PrimaryExpression	1		3247161	1					
ANR	3248822	IfStatement	if ( s -> num_blocks > 1 && get_bits1 ( gbc ) )		3247161	39					
ANR	3248823	Condition	s -> num_blocks > 1 && get_bits1 ( gbc )	597:8:11990:12024	3247161	0	True				
ANR	3248824	AndExpression	s -> num_blocks > 1 && get_bits1 ( gbc )		3247161	0		&&			
ANR	3248825	RelationalExpression	s -> num_blocks > 1		3247161	0		>			
ANR	3248826	PtrMemberAccess	s -> num_blocks		3247161	0					
ANR	3248827	Identifier	s		3247161	0					
ANR	3248828	Identifier	num_blocks		3247161	1					
ANR	3248829	PrimaryExpression	1		3247161	1					
ANR	3248830	CallExpression	get_bits1 ( gbc )		3247161	1					
ANR	3248831	Callee	get_bits1		3247161	0					
ANR	3248832	Identifier	get_bits1		3247161	0					
ANR	3248833	ArgumentList	gbc		3247161	1					
ANR	3248834	Argument	gbc		3247161	0					
ANR	3248835	Identifier	gbc		3247161	0					
ANR	3248836	CompoundStatement		605:8:12257:12330	3247161	1					
ANR	3248837	IdentifierDeclStatement	int block_start_bits = ( s -> num_blocks - 1 ) * ( 4 + av_log2 ( s -> frame_size - 2 ) ) ;	607:8:12305:12378	3247161	0	True				
ANR	3248838	IdentifierDecl	block_start_bits = ( s -> num_blocks - 1 ) * ( 4 + av_log2 ( s -> frame_size - 2 ) )		3247161	0					
ANR	3248839	IdentifierDeclType	int		3247161	0					
ANR	3248840	Identifier	block_start_bits		3247161	1					
ANR	3248841	AssignmentExpression	block_start_bits = ( s -> num_blocks - 1 ) * ( 4 + av_log2 ( s -> frame_size - 2 ) )		3247161	2		=			
ANR	3248842	Identifier	block_start_bits		3247161	0					
ANR	3248843	MultiplicativeExpression	( s -> num_blocks - 1 ) * ( 4 + av_log2 ( s -> frame_size - 2 ) )		3247161	1		*			
ANR	3248844	AdditiveExpression	s -> num_blocks - 1		3247161	0		-			
ANR	3248845	PtrMemberAccess	s -> num_blocks		3247161	0					
ANR	3248846	Identifier	s		3247161	0					
ANR	3248847	Identifier	num_blocks		3247161	1					
ANR	3248848	PrimaryExpression	1		3247161	1					
ANR	3248849	AdditiveExpression	4 + av_log2 ( s -> frame_size - 2 )		3247161	1		+			
ANR	3248850	PrimaryExpression	4		3247161	0					
ANR	3248851	CallExpression	av_log2 ( s -> frame_size - 2 )		3247161	1					
ANR	3248852	Callee	av_log2		3247161	0					
ANR	3248853	Identifier	av_log2		3247161	0					
ANR	3248854	ArgumentList	s -> frame_size - 2		3247161	1					
ANR	3248855	Argument	s -> frame_size - 2		3247161	0					
ANR	3248856	AdditiveExpression	s -> frame_size - 2		3247161	0		-			
ANR	3248857	PtrMemberAccess	s -> frame_size		3247161	0					
ANR	3248858	Identifier	s		3247161	0					
ANR	3248859	Identifier	frame_size		3247161	1					
ANR	3248860	PrimaryExpression	2		3247161	1					
ANR	3248861	ExpressionStatement	"skip_bits_long ( gbc , block_start_bits )"	609:8:12389:12426	3247161	1	True				
ANR	3248862	CallExpression	"skip_bits_long ( gbc , block_start_bits )"		3247161	0					
ANR	3248863	Callee	skip_bits_long		3247161	0					
ANR	3248864	Identifier	skip_bits_long		3247161	0					
ANR	3248865	ArgumentList	gbc		3247161	1					
ANR	3248866	Argument	gbc		3247161	0					
ANR	3248867	Identifier	gbc		3247161	0					
ANR	3248868	Argument	block_start_bits		3247161	1					
ANR	3248869	Identifier	block_start_bits		3247161	0					
ANR	3248870	ExpressionStatement	"avpriv_request_sample ( s -> avctx , ""Block start info"" )"	611:8:12437:12488	3247161	2	True				
ANR	3248871	CallExpression	"avpriv_request_sample ( s -> avctx , ""Block start info"" )"		3247161	0					
ANR	3248872	Callee	avpriv_request_sample		3247161	0					
ANR	3248873	Identifier	avpriv_request_sample		3247161	0					
ANR	3248874	ArgumentList	s -> avctx		3247161	1					
ANR	3248875	Argument	s -> avctx		3247161	0					
ANR	3248876	PtrMemberAccess	s -> avctx		3247161	0					
ANR	3248877	Identifier	s		3247161	0					
ANR	3248878	Identifier	avctx		3247161	1					
ANR	3248879	Argument	"""Block start info"""		3247161	1					
ANR	3248880	PrimaryExpression	"""Block start info"""		3247161	0					
ANR	3248881	ForStatement	for ( ch = 1 ; ch <= s -> fbw_channels ; ch ++ )		3247161	40					
ANR	3248882	ForInit	ch = 1 ;	619:9:12548:12554	3247161	0	True				
ANR	3248883	AssignmentExpression	ch = 1		3247161	0		=			
ANR	3248884	Identifier	ch		3247161	0					
ANR	3248885	PrimaryExpression	1		3247161	1					
ANR	3248886	Condition	ch <= s -> fbw_channels	619:17:12556:12576	3247161	1	True				
ANR	3248887	RelationalExpression	ch <= s -> fbw_channels		3247161	0		<=			
ANR	3248888	Identifier	ch		3247161	0					
ANR	3248889	PtrMemberAccess	s -> fbw_channels		3247161	1					
ANR	3248890	Identifier	s		3247161	0					
ANR	3248891	Identifier	fbw_channels		3247161	1					
ANR	3248892	PostIncDecOperationExpression	ch ++	619:40:12579:12582	3247161	2	True				
ANR	3248893	Identifier	ch		3247161	0					
ANR	3248894	IncDec	++		3247161	1					
ANR	3248895	CompoundStatement		617:46:12537:12537	3247161	3					
ANR	3248896	ExpressionStatement	s -> first_spx_coords [ ch ] = 1	621:8:12596:12623	3247161	0	True				
ANR	3248897	AssignmentExpression	s -> first_spx_coords [ ch ] = 1		3247161	0		=			
ANR	3248898	ArrayIndexing	s -> first_spx_coords [ ch ]		3247161	0					
ANR	3248899	PtrMemberAccess	s -> first_spx_coords		3247161	0					
ANR	3248900	Identifier	s		3247161	0					
ANR	3248901	Identifier	first_spx_coords		3247161	1					
ANR	3248902	Identifier	ch		3247161	1					
ANR	3248903	PrimaryExpression	1		3247161	1					
ANR	3248904	ExpressionStatement	s -> first_cpl_coords [ ch ] = 1	623:8:12634:12661	3247161	1	True				
ANR	3248905	AssignmentExpression	s -> first_cpl_coords [ ch ] = 1		3247161	0		=			
ANR	3248906	ArrayIndexing	s -> first_cpl_coords [ ch ]		3247161	0					
ANR	3248907	PtrMemberAccess	s -> first_cpl_coords		3247161	0					
ANR	3248908	Identifier	s		3247161	0					
ANR	3248909	Identifier	first_cpl_coords		3247161	1					
ANR	3248910	Identifier	ch		3247161	1					
ANR	3248911	PrimaryExpression	1		3247161	1					
ANR	3248912	ExpressionStatement	s -> first_cpl_leak = 1	627:4:12675:12696	3247161	41	True				
ANR	3248913	AssignmentExpression	s -> first_cpl_leak = 1		3247161	0		=			
ANR	3248914	PtrMemberAccess	s -> first_cpl_leak		3247161	0					
ANR	3248915	Identifier	s		3247161	0					
ANR	3248916	Identifier	first_cpl_leak		3247161	1					
ANR	3248917	PrimaryExpression	1		3247161	1					
ANR	3248918	ReturnStatement	return 0 ;	631:4:12705:12713	3247161	42	True				
ANR	3248919	PrimaryExpression	0		3247161	0					
ANR	3248920	ReturnType	int		3247161	1					
ANR	3248921	Identifier	ff_eac3_parse_header		3247161	2					
ANR	3248922	ParameterList	AC3DecodeContext * s		3247161	3					
ANR	3248923	Parameter	AC3DecodeContext * s	1:25:25:43	3247161	0	True				
ANR	3248924	ParameterType	AC3DecodeContext *		3247161	0					
ANR	3248925	Identifier	s		3247161	1					
ANR	3248926	CFGEntryNode	ENTRY		3247161		True				
ANR	3248927	CFGExitNode	EXIT		3247161		True				
ANR	3248928	Symbol	s -> dolby_headphone_mode		3247161						
ANR	3248929	Symbol	s -> block_switch		3247161						
ANR	3248930	Symbol	* * ff_eac3_frm_expstr		3247161						
ANR	3248931	Symbol	frmchexpstr		3247161						
ANR	3248932	Symbol	* ch		3247161						
ANR	3248933	Symbol	s -> bit_allocation_syntax		3247161						
ANR	3248934	Symbol	ff_eac3_frm_expstr		3247161						
ANR	3248935	Symbol	s -> lfe_on		3247161						
ANR	3248936	Symbol	s -> bit_alloc_params . slow_gain		3247161						
ANR	3248937	Symbol	snroffst		3247161						
ANR	3248938	Symbol	EAC3_SR_CODE_REDUCED		3247161						
ANR	3248939	Symbol	av_clip		3247161						
ANR	3248940	Symbol	* ff_ac3_fast_decay_tab		3247161						
ANR	3248941	Symbol	* s -> snr_offset		3247161						
ANR	3248942	Symbol	EXP_REUSE		3247161						
ANR	3248943	Symbol	s -> first_cpl_leak		3247161						
ANR	3248944	Symbol	s -> channel_uses_aht		3247161						
ANR	3248945	Symbol	mix_data_size		3247161						
ANR	3248946	Symbol	s -> exp_strategy		3247161						
ANR	3248947	Symbol	s -> substreamid		3247161						
ANR	3248948	Symbol	s -> center_mix_level		3247161						
ANR	3248949	Symbol	ff_ac3_slow_gain_tab		3247161						
ANR	3248950	Symbol	* * * s		3247161						
ANR	3248951	Symbol	s -> bit_alloc_params		3247161						
ANR	3248952	Symbol	s -> bitstream_mode		3247161						
ANR	3248953	Symbol	EAC3_FRAME_TYPE_RESERVED		3247161						
ANR	3248954	Symbol	* blk		3247161						
ANR	3248955	Symbol	s -> num_blocks		3247161						
ANR	3248956	Symbol	* * blk		3247161						
ANR	3248957	Symbol	block_start_bits		3247161						
ANR	3248958	Symbol	csnroffst		3247161						
ANR	3248959	Symbol	av_log2		3247161						
ANR	3248960	Symbol	ff_ac3_fast_decay_tab		3247161						
ANR	3248961	Symbol	* CPL_CH		3247161						
ANR	3248962	Symbol	s -> bit_alloc_params . sr_code		3247161						
ANR	3248963	Symbol	s -> bit_alloc_params . floor		3247161						
ANR	3248964	Symbol	use_aht		3247161						
ANR	3248965	Symbol	parse_spx_atten_data		3247161						
ANR	3248966	Symbol	* ff_ac3_slow_gain_tab		3247161						
ANR	3248967	Symbol	* ff_ac3_floor_tab		3247161						
ANR	3248968	Symbol	s -> dba_syntax		3247161						
ANR	3248969	Symbol	ff_ac3_db_per_bit_tab		3247161						
ANR	3248970	Symbol	* s -> spx_atten_code		3247161						
ANR	3248971	Symbol	* * s		3247161						
ANR	3248972	Symbol	AVERROR_PATCHWELCOME		3247161						
ANR	3248973	Symbol	s -> lfe_mix_level_exists		3247161						
ANR	3248974	Symbol	* * s -> exp_strategy		3247161						
ANR	3248975	Symbol	s -> bit_alloc_params . fast_decay		3247161						
ANR	3248976	Symbol	* s -> cpl_strategy_exists		3247161						
ANR	3248977	Symbol	blk		3247161						
ANR	3248978	Symbol	s -> frame_type		3247161						
ANR	3248979	Symbol	AV_LOG_ERROR		3247161						
ANR	3248980	Symbol	ch		3247161						
ANR	3248981	Symbol	* * frmchexpstr		3247161						
ANR	3248982	Symbol	i		3247161						
ANR	3248983	Symbol	s -> dither_flag_syntax		3247161						
ANR	3248984	Symbol	* s -> first_spx_coords		3247161						
ANR	3248985	Symbol	s -> skip_syntax		3247161						
ANR	3248986	Symbol	s		3247161						
ANR	3248987	Symbol	s -> center_mix_level_ltrt		3247161						
ANR	3248988	Symbol	s -> cpl_strategy_exists		3247161						
ANR	3248989	Symbol	s -> fast_gain_syntax		3247161						
ANR	3248990	Symbol	s -> snr_offset		3247161						
ANR	3248991	Symbol	s -> lfe_ch		3247161						
ANR	3248992	Symbol	* ff_ac3_slow_decay_tab		3247161						
ANR	3248993	Symbol	ac3_exponent_strategy		3247161						
ANR	3248994	Symbol	* s -> exp_strategy		3247161						
ANR	3248995	Symbol	get_bits		3247161						
ANR	3248996	Symbol	AC3_CHMODE_2F2R		3247161						
ANR	3248997	Symbol	EAC3_FRAME_TYPE_DEPENDENT		3247161						
ANR	3248998	Symbol	* ff_ac3_db_per_bit_tab		3247161						
ANR	3248999	Symbol	parse_aht_info		3247161						
ANR	3249000	Symbol	s -> snr_offset_strategy		3247161						
ANR	3249001	Symbol	s -> dolby_surround_mode		3247161						
ANR	3249002	Symbol	AC3_CHMODE_STEREO		3247161						
ANR	3249003	Symbol	s -> first_cpl_coords		3247161						
ANR	3249004	Symbol	s -> channel_mode		3247161						
ANR	3249005	Symbol	s -> dolby_surround_ex_mode		3247161						
ANR	3249006	Symbol	parse_transient_proc_info		3247161						
ANR	3249007	Symbol	s -> spx_atten_code		3247161						
ANR	3249008	Symbol	& s -> gbc		3247161						
ANR	3249009	Symbol	get_bits1		3247161						
ANR	3249010	Symbol	num_cpl_blocks		3247161						
ANR	3249011	Symbol	s -> surround_mix_level_ltrt		3247161						
ANR	3249012	Symbol	* s -> channel_uses_aht		3247161						
ANR	3249013	Symbol	* frmchexpstr		3247161						
ANR	3249014	Symbol	s -> frame_size		3247161						
ANR	3249015	Symbol	s -> avctx		3247161						
ANR	3249016	Symbol	* s -> dither_flag		3247161						
ANR	3249017	Symbol	ff_ac3_floor_tab		3247161						
ANR	3249018	Symbol	s -> bit_alloc_params . db_per_bit		3247161						
ANR	3249019	Symbol	s -> fbw_channels		3247161						
ANR	3249020	Symbol	addbsil		3247161						
ANR	3249021	Symbol	CPL_CH		3247161						
ANR	3249022	Symbol	s -> preferred_downmix		3247161						
ANR	3249023	Symbol	s -> first_spx_coords		3247161						
ANR	3249024	Symbol	s -> channels		3247161						
ANR	3249025	Symbol	ff_ac3_slow_decay_tab		3247161						
ANR	3249026	Symbol	* s -> cpl_in_use		3247161						
ANR	3249027	Symbol	EAC3_FRAME_TYPE_AC3_CONVERT		3247161						
ANR	3249028	Symbol	s -> surround_mix_level		3247161						
ANR	3249029	Symbol	s -> dither_flag		3247161						
ANR	3249030	Symbol	s -> bit_alloc_params . slow_decay		3247161						
ANR	3249031	Symbol	* ff_eac3_frm_expstr		3247161						
ANR	3249032	Symbol	s -> lfe_mix_level		3247161						
ANR	3249033	Symbol	EAC3_FRAME_TYPE_INDEPENDENT		3247161						
ANR	3249034	Symbol	gbc		3247161						
ANR	3249035	Symbol	* s -> lfe_ch		3247161						
ANR	3249036	Symbol	AAC_AC3_PARSE_ERROR_FRAME_TYPE		3247161						
ANR	3249037	Symbol	s -> cpl_in_use		3247161						
ANR	3249038	Symbol	* s -> first_cpl_coords		3247161						
ANR	3249039	Symbol	s -> block_switch_syntax		3247161						
ANR	3249040	Symbol	* s		3247161						
