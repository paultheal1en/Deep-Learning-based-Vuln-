command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6616075	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ppc_hash64_translate_0.c								
ANR	6616076	Function	ppc_hash64_translate	1:0:0:2552							
ANR	6616077	FunctionDef	"ppc_hash64_translate (CPUPPCState * env , struct mmu_ctx_hash64 * ctx , target_ulong eaddr , int rwx)"		6616076	0					
ANR	6616078	CompoundStatement		5:0:141:2552	6616076	0					
ANR	6616079	IdentifierDeclStatement	int ret ;	7:4:148:155	6616076	0	True				
ANR	6616080	IdentifierDecl	ret		6616076	0					
ANR	6616081	IdentifierDeclType	int		6616076	0					
ANR	6616082	Identifier	ret		6616076	1					
ANR	6616083	IdentifierDeclStatement	ppc_slb_t * slb ;	9:4:162:176	6616076	1	True				
ANR	6616084	IdentifierDecl	* slb		6616076	0					
ANR	6616085	IdentifierDeclType	ppc_slb_t *		6616076	0					
ANR	6616086	Identifier	slb		6616076	1					
ANR	6616087	IdentifierDeclStatement	hwaddr pte_offset ;	11:4:183:200	6616076	2	True				
ANR	6616088	IdentifierDecl	pte_offset		6616076	0					
ANR	6616089	IdentifierDeclType	hwaddr		6616076	0					
ANR	6616090	Identifier	pte_offset		6616076	1					
ANR	6616091	IdentifierDeclStatement	ppc_hash_pte64_t pte ;	13:4:207:227	6616076	3	True				
ANR	6616092	IdentifierDecl	pte		6616076	0					
ANR	6616093	IdentifierDeclType	ppc_hash_pte64_t		6616076	0					
ANR	6616094	Identifier	pte		6616076	1					
ANR	6616095	IdentifierDeclStatement	int target_page_bits ;	15:4:234:254	6616076	4	True				
ANR	6616096	IdentifierDecl	target_page_bits		6616076	0					
ANR	6616097	IdentifierDeclType	int		6616076	0					
ANR	6616098	Identifier	target_page_bits		6616076	1					
ANR	6616099	ExpressionStatement	assert ( ( rwx == 0 ) || ( rwx == 1 ) || ( rwx == 2 ) )	19:4:263:309	6616076	5	True				
ANR	6616100	CallExpression	assert ( ( rwx == 0 ) || ( rwx == 1 ) || ( rwx == 2 ) )		6616076	0					
ANR	6616101	Callee	assert		6616076	0					
ANR	6616102	Identifier	assert		6616076	0					
ANR	6616103	ArgumentList	( rwx == 0 ) || ( rwx == 1 ) || ( rwx == 2 )		6616076	1					
ANR	6616104	Argument	( rwx == 0 ) || ( rwx == 1 ) || ( rwx == 2 )		6616076	0					
ANR	6616105	OrExpression	( rwx == 0 ) || ( rwx == 1 ) || ( rwx == 2 )		6616076	0		||			
ANR	6616106	EqualityExpression	rwx == 0		6616076	0		==			
ANR	6616107	Identifier	rwx		6616076	0					
ANR	6616108	PrimaryExpression	0		6616076	1					
ANR	6616109	OrExpression	( rwx == 1 ) || ( rwx == 2 )		6616076	1		||			
ANR	6616110	EqualityExpression	rwx == 1		6616076	0		==			
ANR	6616111	Identifier	rwx		6616076	0					
ANR	6616112	PrimaryExpression	1		6616076	1					
ANR	6616113	EqualityExpression	rwx == 2		6616076	1		==			
ANR	6616114	Identifier	rwx		6616076	0					
ANR	6616115	PrimaryExpression	2		6616076	1					
ANR	6616116	IfStatement	if ( ( ( rwx == 2 ) && ( msr_ir == 0 ) ) || ( ( rwx != 2 ) && ( msr_dr == 0 ) ) )		6616076	6					
ANR	6616117	Condition	( ( rwx == 2 ) && ( msr_ir == 0 ) ) || ( ( rwx != 2 ) && ( msr_dr == 0 ) )	25:8:362:423	6616076	0	True				
ANR	6616118	OrExpression	( ( rwx == 2 ) && ( msr_ir == 0 ) ) || ( ( rwx != 2 ) && ( msr_dr == 0 ) )		6616076	0		||			
ANR	6616119	AndExpression	( rwx == 2 ) && ( msr_ir == 0 )		6616076	0		&&			
ANR	6616120	EqualityExpression	rwx == 2		6616076	0		==			
ANR	6616121	Identifier	rwx		6616076	0					
ANR	6616122	PrimaryExpression	2		6616076	1					
ANR	6616123	EqualityExpression	msr_ir == 0		6616076	1		==			
ANR	6616124	Identifier	msr_ir		6616076	0					
ANR	6616125	PrimaryExpression	0		6616076	1					
ANR	6616126	AndExpression	( rwx != 2 ) && ( msr_dr == 0 )		6616076	1		&&			
ANR	6616127	EqualityExpression	rwx != 2		6616076	0		!=			
ANR	6616128	Identifier	rwx		6616076	0					
ANR	6616129	PrimaryExpression	2		6616076	1					
ANR	6616130	EqualityExpression	msr_dr == 0		6616076	1		==			
ANR	6616131	Identifier	msr_dr		6616076	0					
ANR	6616132	PrimaryExpression	0		6616076	1					
ANR	6616133	CompoundStatement		21:72:284:284	6616076	1					
ANR	6616134	Statement	ctx	31:8:544:546	6616076	0	True				
ANR	6616135	Statement	->	31:11:547:548	6616076	1	True				
ANR	6616136	Statement	raddr	31:13:549:553	6616076	2	True				
ANR	6616137	Statement	=	31:19:555:555	6616076	3	True				
ANR	6616138	Statement	eaddr	31:21:557:561	6616076	4	True				
ANR	6616139	Statement	&	31:27:563:563	6616076	5	True				
ANR	6616140	Statement	0x0FFFFFFFFFFFFFFFUL	31:29:565:584	6616076	6	True				
ANR	6616141	ExpressionStatement	L	31:49:585:586	6616076	7	True				
ANR	6616142	Identifier	L		6616076	0					
ANR	6616143	ExpressionStatement	ctx -> prot = PAGE_READ | PAGE_EXEC | PAGE_WRITE	33:8:597:643	6616076	8	True				
ANR	6616144	AssignmentExpression	ctx -> prot = PAGE_READ | PAGE_EXEC | PAGE_WRITE		6616076	0		=			
ANR	6616145	PtrMemberAccess	ctx -> prot		6616076	0					
ANR	6616146	Identifier	ctx		6616076	0					
ANR	6616147	Identifier	prot		6616076	1					
ANR	6616148	InclusiveOrExpression	PAGE_READ | PAGE_EXEC | PAGE_WRITE		6616076	1		|			
ANR	6616149	Identifier	PAGE_READ		6616076	0					
ANR	6616150	InclusiveOrExpression	PAGE_EXEC | PAGE_WRITE		6616076	1		|			
ANR	6616151	Identifier	PAGE_EXEC		6616076	0					
ANR	6616152	Identifier	PAGE_WRITE		6616076	1					
ANR	6616153	ReturnStatement	return 0 ;	35:8:654:662	6616076	9	True				
ANR	6616154	PrimaryExpression	0		6616076	0					
ANR	6616155	ExpressionStatement	"slb = slb_lookup ( env , eaddr )"	43:4:730:758	6616076	7	True				
ANR	6616156	AssignmentExpression	"slb = slb_lookup ( env , eaddr )"		6616076	0		=			
ANR	6616157	Identifier	slb		6616076	0					
ANR	6616158	CallExpression	"slb_lookup ( env , eaddr )"		6616076	1					
ANR	6616159	Callee	slb_lookup		6616076	0					
ANR	6616160	Identifier	slb_lookup		6616076	0					
ANR	6616161	ArgumentList	env		6616076	1					
ANR	6616162	Argument	env		6616076	0					
ANR	6616163	Identifier	env		6616076	0					
ANR	6616164	Argument	eaddr		6616076	1					
ANR	6616165	Identifier	eaddr		6616076	0					
ANR	6616166	IfStatement	if ( ! slb )		6616076	8					
ANR	6616167	Condition	! slb	47:8:771:774	6616076	0	True				
ANR	6616168	UnaryOperationExpression	! slb		6616076	0					
ANR	6616169	UnaryOperator	!		6616076	0					
ANR	6616170	Identifier	slb		6616076	1					
ANR	6616171	CompoundStatement		43:14:635:635	6616076	1					
ANR	6616172	ReturnStatement	return - 5 ;	49:8:788:797	6616076	0	True				
ANR	6616173	UnaryOperationExpression	- 5		6616076	0					
ANR	6616174	UnaryOperator	-		6616076	0					
ANR	6616175	PrimaryExpression	5		6616076	1					
ANR	6616176	IfStatement	if ( ( rwx == 2 ) && ( slb -> vsid & SLB_VSID_N ) )		6616076	9					
ANR	6616177	Condition	( rwx == 2 ) && ( slb -> vsid & SLB_VSID_N )	57:8:876:913	6616076	0	True				
ANR	6616178	AndExpression	( rwx == 2 ) && ( slb -> vsid & SLB_VSID_N )		6616076	0		&&			
ANR	6616179	EqualityExpression	rwx == 2		6616076	0		==			
ANR	6616180	Identifier	rwx		6616076	0					
ANR	6616181	PrimaryExpression	2		6616076	1					
ANR	6616182	BitAndExpression	slb -> vsid & SLB_VSID_N		6616076	1		&			
ANR	6616183	PtrMemberAccess	slb -> vsid		6616076	0					
ANR	6616184	Identifier	slb		6616076	0					
ANR	6616185	Identifier	vsid		6616076	1					
ANR	6616186	Identifier	SLB_VSID_N		6616076	1					
ANR	6616187	CompoundStatement		53:48:774:774	6616076	1					
ANR	6616188	ReturnStatement	return - 3 ;	59:8:927:936	6616076	0	True				
ANR	6616189	UnaryOperationExpression	- 3		6616076	0					
ANR	6616190	UnaryOperator	-		6616076	0					
ANR	6616191	PrimaryExpression	3		6616076	1					
ANR	6616192	ExpressionStatement	"pte_offset = ppc_hash64_htab_lookup ( env , slb , eaddr , & pte )"	67:4:999:1057	6616076	10	True				
ANR	6616193	AssignmentExpression	"pte_offset = ppc_hash64_htab_lookup ( env , slb , eaddr , & pte )"		6616076	0		=			
ANR	6616194	Identifier	pte_offset		6616076	0					
ANR	6616195	CallExpression	"ppc_hash64_htab_lookup ( env , slb , eaddr , & pte )"		6616076	1					
ANR	6616196	Callee	ppc_hash64_htab_lookup		6616076	0					
ANR	6616197	Identifier	ppc_hash64_htab_lookup		6616076	0					
ANR	6616198	ArgumentList	env		6616076	1					
ANR	6616199	Argument	env		6616076	0					
ANR	6616200	Identifier	env		6616076	0					
ANR	6616201	Argument	slb		6616076	1					
ANR	6616202	Identifier	slb		6616076	0					
ANR	6616203	Argument	eaddr		6616076	2					
ANR	6616204	Identifier	eaddr		6616076	0					
ANR	6616205	Argument	& pte		6616076	3					
ANR	6616206	UnaryOperationExpression	& pte		6616076	0					
ANR	6616207	UnaryOperator	&		6616076	0					
ANR	6616208	Identifier	pte		6616076	1					
ANR	6616209	IfStatement	if ( pte_offset == - 1 )		6616076	11					
ANR	6616210	Condition	pte_offset == - 1	69:8:1068:1083	6616076	0	True				
ANR	6616211	EqualityExpression	pte_offset == - 1		6616076	0		==			
ANR	6616212	Identifier	pte_offset		6616076	0					
ANR	6616213	UnaryOperationExpression	- 1		6616076	1					
ANR	6616214	UnaryOperator	-		6616076	0					
ANR	6616215	PrimaryExpression	1		6616076	1					
ANR	6616216	CompoundStatement		65:26:944:944	6616076	1					
ANR	6616217	ReturnStatement	return - 1 ;	71:8:1097:1106	6616076	0	True				
ANR	6616218	UnaryOperationExpression	- 1		6616076	0					
ANR	6616219	UnaryOperator	-		6616076	0					
ANR	6616220	PrimaryExpression	1		6616076	1					
ANR	6616221	Statement	LOG_MMU	75:4:1120:1126	6616076	12	True				
ANR	6616222	Statement	(	75:11:1127:1127	6616076	13	True				
ANR	6616223	Statement	"""found PTE at offset %08"""	75:12:1128:1152	6616076	14	True				
ANR	6616224	Statement	HWADDR_PRIx	75:38:1154:1164	6616076	15	True				
ANR	6616225	Statement	"""\\n"""	75:50:1166:1169	6616076	16	True				
ANR	6616226	Statement	","	75:54:1170:1170	6616076	17	True				
ANR	6616227	Statement	pte_offset	75:56:1172:1181	6616076	18	True				
ANR	6616228	Statement	)	75:66:1182:1182	6616076	19	True				
ANR	6616229	ExpressionStatement		75:67:1183:1183	6616076	20	True				
ANR	6616230	ExpressionStatement	ctx -> key = ! ! ( msr_pr ? ( slb -> vsid & SLB_VSID_KP ) : ( slb -> vsid & SLB_VSID_KS ) )	81:4:1231:1327	6616076	21	True				
ANR	6616231	AssignmentExpression	ctx -> key = ! ! ( msr_pr ? ( slb -> vsid & SLB_VSID_KP ) : ( slb -> vsid & SLB_VSID_KS ) )		6616076	0		=			
ANR	6616232	PtrMemberAccess	ctx -> key		6616076	0					
ANR	6616233	Identifier	ctx		6616076	0					
ANR	6616234	Identifier	key		6616076	1					
ANR	6616235	UnaryOperationExpression	! ! ( msr_pr ? ( slb -> vsid & SLB_VSID_KP ) : ( slb -> vsid & SLB_VSID_KS ) )		6616076	1					
ANR	6616236	UnaryOperator	!		6616076	0					
ANR	6616237	UnaryOperationExpression	! ( msr_pr ? ( slb -> vsid & SLB_VSID_KP ) : ( slb -> vsid & SLB_VSID_KS ) )		6616076	1					
ANR	6616238	UnaryOperator	!		6616076	0					
ANR	6616239	ConditionalExpression	msr_pr ? ( slb -> vsid & SLB_VSID_KP ) : ( slb -> vsid & SLB_VSID_KS )		6616076	1					
ANR	6616240	Condition	msr_pr		6616076	0					
ANR	6616241	Identifier	msr_pr		6616076	0					
ANR	6616242	BitAndExpression	slb -> vsid & SLB_VSID_KP		6616076	1		&			
ANR	6616243	PtrMemberAccess	slb -> vsid		6616076	0					
ANR	6616244	Identifier	slb		6616076	0					
ANR	6616245	Identifier	vsid		6616076	1					
ANR	6616246	Identifier	SLB_VSID_KP		6616076	1					
ANR	6616247	BitAndExpression	slb -> vsid & SLB_VSID_KS		6616076	2		&			
ANR	6616248	PtrMemberAccess	slb -> vsid		6616076	0					
ANR	6616249	Identifier	slb		6616076	0					
ANR	6616250	Identifier	vsid		6616076	1					
ANR	6616251	Identifier	SLB_VSID_KS		6616076	1					
ANR	6616252	IdentifierDeclStatement	"int access , pp ;"	89:4:1338:1352	6616076	22	True				
ANR	6616253	IdentifierDecl	access		6616076	0					
ANR	6616254	IdentifierDeclType	int		6616076	0					
ANR	6616255	Identifier	access		6616076	1					
ANR	6616256	IdentifierDecl	pp		6616076	1					
ANR	6616257	IdentifierDeclType	int		6616076	0					
ANR	6616258	Identifier	pp		6616076	1					
ANR	6616259	IdentifierDeclStatement	bool nx ;	91:4:1359:1366	6616076	23	True				
ANR	6616260	IdentifierDecl	nx		6616076	0					
ANR	6616261	IdentifierDeclType	bool		6616076	0					
ANR	6616262	Identifier	nx		6616076	1					
ANR	6616263	ExpressionStatement	pp = ( pte . pte1 & HPTE64_R_PP ) | ( ( pte . pte1 & HPTE64_R_PP0 ) >> 61 )	95:4:1375:1440	6616076	24	True				
ANR	6616264	AssignmentExpression	pp = ( pte . pte1 & HPTE64_R_PP ) | ( ( pte . pte1 & HPTE64_R_PP0 ) >> 61 )		6616076	0		=			
ANR	6616265	Identifier	pp		6616076	0					
ANR	6616266	InclusiveOrExpression	( pte . pte1 & HPTE64_R_PP ) | ( ( pte . pte1 & HPTE64_R_PP0 ) >> 61 )		6616076	1		|			
ANR	6616267	BitAndExpression	pte . pte1 & HPTE64_R_PP		6616076	0		&			
ANR	6616268	MemberAccess	pte . pte1		6616076	0					
ANR	6616269	Identifier	pte		6616076	0					
ANR	6616270	Identifier	pte1		6616076	1					
ANR	6616271	Identifier	HPTE64_R_PP		6616076	1					
ANR	6616272	ShiftExpression	( pte . pte1 & HPTE64_R_PP0 ) >> 61		6616076	1		>>			
ANR	6616273	BitAndExpression	pte . pte1 & HPTE64_R_PP0		6616076	0		&			
ANR	6616274	MemberAccess	pte . pte1		6616076	0					
ANR	6616275	Identifier	pte		6616076	0					
ANR	6616276	Identifier	pte1		6616076	1					
ANR	6616277	Identifier	HPTE64_R_PP0		6616076	1					
ANR	6616278	PrimaryExpression	61		6616076	1					
ANR	6616279	ExpressionStatement	nx = ( pte . pte1 & HPTE64_R_N ) || ( pte . pte1 & HPTE64_R_G )	99:4:1506:1561	6616076	25	True				
ANR	6616280	AssignmentExpression	nx = ( pte . pte1 & HPTE64_R_N ) || ( pte . pte1 & HPTE64_R_G )		6616076	0		=			
ANR	6616281	Identifier	nx		6616076	0					
ANR	6616282	OrExpression	( pte . pte1 & HPTE64_R_N ) || ( pte . pte1 & HPTE64_R_G )		6616076	1		||			
ANR	6616283	BitAndExpression	pte . pte1 & HPTE64_R_N		6616076	0		&			
ANR	6616284	MemberAccess	pte . pte1		6616076	0					
ANR	6616285	Identifier	pte		6616076	0					
ANR	6616286	Identifier	pte1		6616076	1					
ANR	6616287	Identifier	HPTE64_R_N		6616076	1					
ANR	6616288	BitAndExpression	pte . pte1 & HPTE64_R_G		6616076	1		&			
ANR	6616289	MemberAccess	pte . pte1		6616076	0					
ANR	6616290	Identifier	pte		6616076	0					
ANR	6616291	Identifier	pte1		6616076	1					
ANR	6616292	Identifier	HPTE64_R_G		6616076	1					
ANR	6616293	ExpressionStatement	"access = ppc_hash64_pp_check ( ctx -> key , pp , nx )"	103:4:1601:1647	6616076	26	True				
ANR	6616294	AssignmentExpression	"access = ppc_hash64_pp_check ( ctx -> key , pp , nx )"		6616076	0		=			
ANR	6616295	Identifier	access		6616076	0					
ANR	6616296	CallExpression	"ppc_hash64_pp_check ( ctx -> key , pp , nx )"		6616076	1					
ANR	6616297	Callee	ppc_hash64_pp_check		6616076	0					
ANR	6616298	Identifier	ppc_hash64_pp_check		6616076	0					
ANR	6616299	ArgumentList	ctx -> key		6616076	1					
ANR	6616300	Argument	ctx -> key		6616076	0					
ANR	6616301	PtrMemberAccess	ctx -> key		6616076	0					
ANR	6616302	Identifier	ctx		6616076	0					
ANR	6616303	Identifier	key		6616076	1					
ANR	6616304	Argument	pp		6616076	1					
ANR	6616305	Identifier	pp		6616076	0					
ANR	6616306	Argument	nx		6616076	2					
ANR	6616307	Identifier	nx		6616076	0					
ANR	6616308	ExpressionStatement	ctx -> raddr = pte . pte1	107:4:1700:1721	6616076	27	True				
ANR	6616309	AssignmentExpression	ctx -> raddr = pte . pte1		6616076	0		=			
ANR	6616310	PtrMemberAccess	ctx -> raddr		6616076	0					
ANR	6616311	Identifier	ctx		6616076	0					
ANR	6616312	Identifier	raddr		6616076	1					
ANR	6616313	MemberAccess	pte . pte1		6616076	1					
ANR	6616314	Identifier	pte		6616076	0					
ANR	6616315	Identifier	pte1		6616076	1					
ANR	6616316	ExpressionStatement	ctx -> prot = access	109:4:1728:1746	6616076	28	True				
ANR	6616317	AssignmentExpression	ctx -> prot = access		6616076	0		=			
ANR	6616318	PtrMemberAccess	ctx -> prot		6616076	0					
ANR	6616319	Identifier	ctx		6616076	0					
ANR	6616320	Identifier	prot		6616076	1					
ANR	6616321	Identifier	access		6616076	1					
ANR	6616322	ExpressionStatement	"ret = ppc_hash64_check_prot ( ctx -> prot , rwx )"	111:4:1753:1796	6616076	29	True				
ANR	6616323	AssignmentExpression	"ret = ppc_hash64_check_prot ( ctx -> prot , rwx )"		6616076	0		=			
ANR	6616324	Identifier	ret		6616076	0					
ANR	6616325	CallExpression	"ppc_hash64_check_prot ( ctx -> prot , rwx )"		6616076	1					
ANR	6616326	Callee	ppc_hash64_check_prot		6616076	0					
ANR	6616327	Identifier	ppc_hash64_check_prot		6616076	0					
ANR	6616328	ArgumentList	ctx -> prot		6616076	1					
ANR	6616329	Argument	ctx -> prot		6616076	0					
ANR	6616330	PtrMemberAccess	ctx -> prot		6616076	0					
ANR	6616331	Identifier	ctx		6616076	0					
ANR	6616332	Identifier	prot		6616076	1					
ANR	6616333	Argument	rwx		6616076	1					
ANR	6616334	Identifier	rwx		6616076	0					
ANR	6616335	IfStatement	if ( ret )		6616076	30					
ANR	6616336	Condition	ret	115:8:1809:1811	6616076	0	True				
ANR	6616337	Identifier	ret		6616076	0					
ANR	6616338	CompoundStatement		111:13:1672:1672	6616076	1					
ANR	6616339	ExpressionStatement	"LOG_MMU ( ""PTE access rejected\\n"" )"	119:8:1863:1895	6616076	0	True				
ANR	6616340	CallExpression	"LOG_MMU ( ""PTE access rejected\\n"" )"		6616076	0					
ANR	6616341	Callee	LOG_MMU		6616076	0					
ANR	6616342	Identifier	LOG_MMU		6616076	0					
ANR	6616343	ArgumentList	"""PTE access rejected\\n"""		6616076	1					
ANR	6616344	Argument	"""PTE access rejected\\n"""		6616076	0					
ANR	6616345	PrimaryExpression	"""PTE access rejected\\n"""		6616076	0					
ANR	6616346	ReturnStatement	return ret ;	121:8:1906:1916	6616076	1	True				
ANR	6616347	Identifier	ret		6616076	0					
ANR	6616348	ExpressionStatement	"LOG_MMU ( ""PTE access granted !\\n"" )"	127:4:1932:1965	6616076	31	True				
ANR	6616349	CallExpression	"LOG_MMU ( ""PTE access granted !\\n"" )"		6616076	0					
ANR	6616350	Callee	LOG_MMU		6616076	0					
ANR	6616351	Identifier	LOG_MMU		6616076	0					
ANR	6616352	ArgumentList	"""PTE access granted !\\n"""		6616076	1					
ANR	6616353	Argument	"""PTE access granted !\\n"""		6616076	0					
ANR	6616354	PrimaryExpression	"""PTE access granted !\\n"""		6616076	0					
ANR	6616355	IfStatement	"if ( ppc_hash64_pte_update_flags ( ctx , & pte . pte1 , ret , rwx ) == 1 )"		6616076	32					
ANR	6616356	Condition	"ppc_hash64_pte_update_flags ( ctx , & pte . pte1 , ret , rwx ) == 1"	135:8:2046:2103	6616076	0	True				
ANR	6616357	EqualityExpression	"ppc_hash64_pte_update_flags ( ctx , & pte . pte1 , ret , rwx ) == 1"		6616076	0		==			
ANR	6616358	CallExpression	"ppc_hash64_pte_update_flags ( ctx , & pte . pte1 , ret , rwx )"		6616076	0					
ANR	6616359	Callee	ppc_hash64_pte_update_flags		6616076	0					
ANR	6616360	Identifier	ppc_hash64_pte_update_flags		6616076	0					
ANR	6616361	ArgumentList	ctx		6616076	1					
ANR	6616362	Argument	ctx		6616076	0					
ANR	6616363	Identifier	ctx		6616076	0					
ANR	6616364	Argument	& pte . pte1		6616076	1					
ANR	6616365	UnaryOperationExpression	& pte . pte1		6616076	0					
ANR	6616366	UnaryOperator	&		6616076	0					
ANR	6616367	MemberAccess	pte . pte1		6616076	1					
ANR	6616368	Identifier	pte		6616076	0					
ANR	6616369	Identifier	pte1		6616076	1					
ANR	6616370	Argument	ret		6616076	2					
ANR	6616371	Identifier	ret		6616076	0					
ANR	6616372	Argument	rwx		6616076	3					
ANR	6616373	Identifier	rwx		6616076	0					
ANR	6616374	PrimaryExpression	1		6616076	1					
ANR	6616375	CompoundStatement		131:68:1964:1964	6616076	1					
ANR	6616376	ExpressionStatement	"ppc_hash64_store_hpte1 ( env , pte_offset , pte . pte1 )"	137:8:2117:2166	6616076	0	True				
ANR	6616377	CallExpression	"ppc_hash64_store_hpte1 ( env , pte_offset , pte . pte1 )"		6616076	0					
ANR	6616378	Callee	ppc_hash64_store_hpte1		6616076	0					
ANR	6616379	Identifier	ppc_hash64_store_hpte1		6616076	0					
ANR	6616380	ArgumentList	env		6616076	1					
ANR	6616381	Argument	env		6616076	0					
ANR	6616382	Identifier	env		6616076	0					
ANR	6616383	Argument	pte_offset		6616076	1					
ANR	6616384	Identifier	pte_offset		6616076	0					
ANR	6616385	Argument	pte . pte1		6616076	2					
ANR	6616386	MemberAccess	pte . pte1		6616076	0					
ANR	6616387	Identifier	pte		6616076	0					
ANR	6616388	Identifier	pte1		6616076	1					
ANR	6616389	ExpressionStatement	target_page_bits = ( slb -> vsid & SLB_VSID_L ) ? TARGET_PAGE_BITS_16M : TARGET_PAGE_BITS	147:4:2276:2370	6616076	33	True				
ANR	6616390	AssignmentExpression	target_page_bits = ( slb -> vsid & SLB_VSID_L ) ? TARGET_PAGE_BITS_16M : TARGET_PAGE_BITS		6616076	0		=			
ANR	6616391	Identifier	target_page_bits		6616076	0					
ANR	6616392	ConditionalExpression	( slb -> vsid & SLB_VSID_L ) ? TARGET_PAGE_BITS_16M : TARGET_PAGE_BITS		6616076	1					
ANR	6616393	Condition	slb -> vsid & SLB_VSID_L		6616076	0					
ANR	6616394	BitAndExpression	slb -> vsid & SLB_VSID_L		6616076	0		&			
ANR	6616395	PtrMemberAccess	slb -> vsid		6616076	0					
ANR	6616396	Identifier	slb		6616076	0					
ANR	6616397	Identifier	vsid		6616076	1					
ANR	6616398	Identifier	SLB_VSID_L		6616076	1					
ANR	6616399	Identifier	TARGET_PAGE_BITS_16M		6616076	1					
ANR	6616400	Identifier	TARGET_PAGE_BITS		6616076	2					
ANR	6616401	IfStatement	if ( target_page_bits != TARGET_PAGE_BITS )		6616076	34					
ANR	6616402	Condition	target_page_bits != TARGET_PAGE_BITS	151:8:2381:2416	6616076	0	True				
ANR	6616403	EqualityExpression	target_page_bits != TARGET_PAGE_BITS		6616076	0		!=			
ANR	6616404	Identifier	target_page_bits		6616076	0					
ANR	6616405	Identifier	TARGET_PAGE_BITS		6616076	1					
ANR	6616406	CompoundStatement		147:46:2277:2277	6616076	1					
ANR	6616407	ExpressionStatement	ctx -> raddr |= ( eaddr & ( ( 1 << target_page_bits ) - 1 ) ) & TARGET_PAGE_MASK	153:8:2430:2525	6616076	0	True				
ANR	6616408	AssignmentExpression	ctx -> raddr |= ( eaddr & ( ( 1 << target_page_bits ) - 1 ) ) & TARGET_PAGE_MASK		6616076	0		|=			
ANR	6616409	PtrMemberAccess	ctx -> raddr		6616076	0					
ANR	6616410	Identifier	ctx		6616076	0					
ANR	6616411	Identifier	raddr		6616076	1					
ANR	6616412	BitAndExpression	( eaddr & ( ( 1 << target_page_bits ) - 1 ) ) & TARGET_PAGE_MASK		6616076	1		&			
ANR	6616413	BitAndExpression	eaddr & ( ( 1 << target_page_bits ) - 1 )		6616076	0		&			
ANR	6616414	Identifier	eaddr		6616076	0					
ANR	6616415	AdditiveExpression	( 1 << target_page_bits ) - 1		6616076	1		-			
ANR	6616416	ShiftExpression	1 << target_page_bits		6616076	0		<<			
ANR	6616417	PrimaryExpression	1		6616076	0					
ANR	6616418	Identifier	target_page_bits		6616076	1					
ANR	6616419	PrimaryExpression	1		6616076	1					
ANR	6616420	Identifier	TARGET_PAGE_MASK		6616076	1					
ANR	6616421	ReturnStatement	return ret ;	159:4:2539:2549	6616076	35	True				
ANR	6616422	Identifier	ret		6616076	0					
ANR	6616423	ReturnType	static int		6616076	1					
ANR	6616424	Identifier	ppc_hash64_translate		6616076	2					
ANR	6616425	ParameterList	"CPUPPCState * env , struct mmu_ctx_hash64 * ctx , target_ulong eaddr , int rwx"		6616076	3					
ANR	6616426	Parameter	CPUPPCState * env	1:32:32:47	6616076	0	True				
ANR	6616427	ParameterType	CPUPPCState *		6616076	0					
ANR	6616428	Identifier	env		6616076	1					
ANR	6616429	Parameter	struct mmu_ctx_hash64 * ctx	1:50:50:75	6616076	1	True				
ANR	6616430	ParameterType	struct mmu_ctx_hash64 *		6616076	0					
ANR	6616431	Identifier	ctx		6616076	1					
ANR	6616432	Parameter	target_ulong eaddr	3:32:111:128	6616076	2	True				
ANR	6616433	ParameterType	target_ulong		6616076	0					
ANR	6616434	Identifier	eaddr		6616076	1					
ANR	6616435	Parameter	int rwx	3:52:131:137	6616076	3	True				
ANR	6616436	ParameterType	int		6616076	0					
ANR	6616437	Identifier	rwx		6616076	1					
ANR	6616438	CFGEntryNode	ENTRY		6616076		True				
ANR	6616439	CFGExitNode	EXIT		6616076		True				
ANR	6616440	Symbol	& pte		6616076						
ANR	6616441	Symbol	pp		6616076						
ANR	6616442	Symbol	PAGE_EXEC		6616076						
ANR	6616443	Symbol	ppc_hash64_htab_lookup		6616076						
ANR	6616444	Symbol	access		6616076						
ANR	6616445	Symbol	ctx -> key		6616076						
ANR	6616446	Symbol	SLB_VSID_L		6616076						
ANR	6616447	Symbol	TARGET_PAGE_MASK		6616076						
ANR	6616448	Symbol	nx		6616076						
ANR	6616449	Symbol	slb_lookup		6616076						
ANR	6616450	Symbol	HPTE64_R_PP		6616076						
ANR	6616451	Symbol	PAGE_READ		6616076						
ANR	6616452	Symbol	SLB_VSID_N		6616076						
ANR	6616453	Symbol	pte_offset		6616076						
ANR	6616454	Symbol	rwx		6616076						
ANR	6616455	Symbol	ctx -> prot		6616076						
ANR	6616456	Symbol	* slb		6616076						
ANR	6616457	Symbol	ppc_hash64_pte_update_flags		6616076						
ANR	6616458	Symbol	& pte . pte1		6616076						
ANR	6616459	Symbol	ppc_hash64_check_prot		6616076						
ANR	6616460	Symbol	TARGET_PAGE_BITS_16M		6616076						
ANR	6616461	Symbol	target_page_bits		6616076						
ANR	6616462	Symbol	msr_pr		6616076						
ANR	6616463	Symbol	ret		6616076						
ANR	6616464	Symbol	pte		6616076						
ANR	6616465	Symbol	ctx		6616076						
ANR	6616466	Symbol	slb		6616076						
ANR	6616467	Symbol	eaddr		6616076						
ANR	6616468	Symbol	msr_dr		6616076						
ANR	6616469	Symbol	TARGET_PAGE_BITS		6616076						
ANR	6616470	Symbol	env		6616076						
ANR	6616471	Symbol	* ctx		6616076						
ANR	6616472	Symbol	PAGE_WRITE		6616076						
ANR	6616473	Symbol	ppc_hash64_pp_check		6616076						
ANR	6616474	Symbol	SLB_VSID_KP		6616076						
ANR	6616475	Symbol	HPTE64_R_PP0		6616076						
ANR	6616476	Symbol	HPTE64_R_N		6616076						
ANR	6616477	Symbol	msr_ir		6616076						
ANR	6616478	Symbol	HPTE64_R_G		6616076						
ANR	6616479	Symbol	ctx -> raddr		6616076						
ANR	6616480	Symbol	pte . pte1		6616076						
ANR	6616481	Symbol	slb -> vsid		6616076						
ANR	6616482	Symbol	SLB_VSID_KS		6616076						
