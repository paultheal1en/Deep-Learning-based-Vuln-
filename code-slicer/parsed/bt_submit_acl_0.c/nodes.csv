command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1126016	File	/home/p4ultr4n/workplace/ReVeal/raw_code/bt_submit_acl_0.c								
ANR	1126017	Function	bt_submit_acl	1:0:0:2189							
ANR	1126018	FunctionDef	"bt_submit_acl (struct HCIInfo * info , const uint8_t * data , int length)"		1126017	0					
ANR	1126019	CompoundStatement		5:0:99:2189	1126017	0					
ANR	1126020	IdentifierDeclStatement	struct bt_hci_s * hci = hci_from_info ( info ) ;	7:4:106:148	1126017	0	True				
ANR	1126021	IdentifierDecl	* hci = hci_from_info ( info )		1126017	0					
ANR	1126022	IdentifierDeclType	struct bt_hci_s *		1126017	0					
ANR	1126023	Identifier	hci		1126017	1					
ANR	1126024	AssignmentExpression	* hci = hci_from_info ( info )		1126017	2		=			
ANR	1126025	Identifier	hci		1126017	0					
ANR	1126026	CallExpression	hci_from_info ( info )		1126017	1					
ANR	1126027	Callee	hci_from_info		1126017	0					
ANR	1126028	Identifier	hci_from_info		1126017	0					
ANR	1126029	ArgumentList	info		1126017	1					
ANR	1126030	Argument	info		1126017	0					
ANR	1126031	Identifier	info		1126017	0					
ANR	1126032	IdentifierDeclStatement	uint16_t handle ;	9:4:155:170	1126017	1	True				
ANR	1126033	IdentifierDecl	handle		1126017	0					
ANR	1126034	IdentifierDeclType	uint16_t		1126017	0					
ANR	1126035	Identifier	handle		1126017	1					
ANR	1126036	IdentifierDeclStatement	"int datalen , flags ;"	11:4:177:195	1126017	2	True				
ANR	1126037	IdentifierDecl	datalen		1126017	0					
ANR	1126038	IdentifierDeclType	int		1126017	0					
ANR	1126039	Identifier	datalen		1126017	1					
ANR	1126040	IdentifierDecl	flags		1126017	1					
ANR	1126041	IdentifierDeclType	int		1126017	0					
ANR	1126042	Identifier	flags		1126017	1					
ANR	1126043	IdentifierDeclStatement	struct bt_link_s * link ;	13:4:202:224	1126017	3	True				
ANR	1126044	IdentifierDecl	* link		1126017	0					
ANR	1126045	IdentifierDeclType	struct bt_link_s *		1126017	0					
ANR	1126046	Identifier	link		1126017	1					
ANR	1126047	IfStatement	if ( length < HCI_ACL_HDR_SIZE )		1126017	4					
ANR	1126048	Condition	length < HCI_ACL_HDR_SIZE	17:8:237:261	1126017	0	True				
ANR	1126049	RelationalExpression	length < HCI_ACL_HDR_SIZE		1126017	0		<			
ANR	1126050	Identifier	length		1126017	0					
ANR	1126051	Identifier	HCI_ACL_HDR_SIZE		1126017	1					
ANR	1126052	CompoundStatement		13:35:164:164	1126017	1					
ANR	1126053	ExpressionStatement	"fprintf ( stderr , ""%s: ACL packet too short (%iB)\\n"" , __FUNCTION__ , length )"	19:8:275:373	1126017	0	True				
ANR	1126054	CallExpression	"fprintf ( stderr , ""%s: ACL packet too short (%iB)\\n"" , __FUNCTION__ , length )"		1126017	0					
ANR	1126055	Callee	fprintf		1126017	0					
ANR	1126056	Identifier	fprintf		1126017	0					
ANR	1126057	ArgumentList	stderr		1126017	1					
ANR	1126058	Argument	stderr		1126017	0					
ANR	1126059	Identifier	stderr		1126017	0					
ANR	1126060	Argument	"""%s: ACL packet too short (%iB)\\n"""		1126017	1					
ANR	1126061	PrimaryExpression	"""%s: ACL packet too short (%iB)\\n"""		1126017	0					
ANR	1126062	Argument	__FUNCTION__		1126017	2					
ANR	1126063	Identifier	__FUNCTION__		1126017	0					
ANR	1126064	Argument	length		1126017	3					
ANR	1126065	Identifier	length		1126017	0					
ANR	1126066	ReturnStatement	return ;	23:8:384:390	1126017	1	True				
ANR	1126067	ExpressionStatement	handle = acl_handle ( ( data [ 1 ] << 8 ) | data [ 0 ] )	29:4:406:451	1126017	5	True				
ANR	1126068	AssignmentExpression	handle = acl_handle ( ( data [ 1 ] << 8 ) | data [ 0 ] )		1126017	0		=			
ANR	1126069	Identifier	handle		1126017	0					
ANR	1126070	CallExpression	acl_handle ( ( data [ 1 ] << 8 ) | data [ 0 ] )		1126017	1					
ANR	1126071	Callee	acl_handle		1126017	0					
ANR	1126072	Identifier	acl_handle		1126017	0					
ANR	1126073	ArgumentList	( data [ 1 ] << 8 ) | data [ 0 ]		1126017	1					
ANR	1126074	Argument	( data [ 1 ] << 8 ) | data [ 0 ]		1126017	0					
ANR	1126075	InclusiveOrExpression	( data [ 1 ] << 8 ) | data [ 0 ]		1126017	0		|			
ANR	1126076	ShiftExpression	data [ 1 ] << 8		1126017	0		<<			
ANR	1126077	ArrayIndexing	data [ 1 ]		1126017	0					
ANR	1126078	Identifier	data		1126017	0					
ANR	1126079	PrimaryExpression	1		1126017	1					
ANR	1126080	PrimaryExpression	8		1126017	1					
ANR	1126081	ArrayIndexing	data [ 0 ]		1126017	1					
ANR	1126082	Identifier	data		1126017	0					
ANR	1126083	PrimaryExpression	0		1126017	1					
ANR	1126084	ExpressionStatement	flags = acl_flags ( ( data [ 1 ] << 8 ) | data [ 0 ] )	31:4:458:501	1126017	6	True				
ANR	1126085	AssignmentExpression	flags = acl_flags ( ( data [ 1 ] << 8 ) | data [ 0 ] )		1126017	0		=			
ANR	1126086	Identifier	flags		1126017	0					
ANR	1126087	CallExpression	acl_flags ( ( data [ 1 ] << 8 ) | data [ 0 ] )		1126017	1					
ANR	1126088	Callee	acl_flags		1126017	0					
ANR	1126089	Identifier	acl_flags		1126017	0					
ANR	1126090	ArgumentList	( data [ 1 ] << 8 ) | data [ 0 ]		1126017	1					
ANR	1126091	Argument	( data [ 1 ] << 8 ) | data [ 0 ]		1126017	0					
ANR	1126092	InclusiveOrExpression	( data [ 1 ] << 8 ) | data [ 0 ]		1126017	0		|			
ANR	1126093	ShiftExpression	data [ 1 ] << 8		1126017	0		<<			
ANR	1126094	ArrayIndexing	data [ 1 ]		1126017	0					
ANR	1126095	Identifier	data		1126017	0					
ANR	1126096	PrimaryExpression	1		1126017	1					
ANR	1126097	PrimaryExpression	8		1126017	1					
ANR	1126098	ArrayIndexing	data [ 0 ]		1126017	1					
ANR	1126099	Identifier	data		1126017	0					
ANR	1126100	PrimaryExpression	0		1126017	1					
ANR	1126101	ExpressionStatement	datalen = ( data [ 3 ] << 8 ) | data [ 2 ]	33:4:508:542	1126017	7	True				
ANR	1126102	AssignmentExpression	datalen = ( data [ 3 ] << 8 ) | data [ 2 ]		1126017	0		=			
ANR	1126103	Identifier	datalen		1126017	0					
ANR	1126104	InclusiveOrExpression	( data [ 3 ] << 8 ) | data [ 2 ]		1126017	1		|			
ANR	1126105	ShiftExpression	data [ 3 ] << 8		1126017	0		<<			
ANR	1126106	ArrayIndexing	data [ 3 ]		1126017	0					
ANR	1126107	Identifier	data		1126017	0					
ANR	1126108	PrimaryExpression	3		1126017	1					
ANR	1126109	PrimaryExpression	8		1126017	1					
ANR	1126110	ArrayIndexing	data [ 2 ]		1126017	1					
ANR	1126111	Identifier	data		1126017	0					
ANR	1126112	PrimaryExpression	2		1126017	1					
ANR	1126113	ExpressionStatement	data += HCI_ACL_HDR_SIZE	35:4:549:573	1126017	8	True				
ANR	1126114	AssignmentExpression	data += HCI_ACL_HDR_SIZE		1126017	0		+=			
ANR	1126115	Identifier	data		1126017	0					
ANR	1126116	Identifier	HCI_ACL_HDR_SIZE		1126017	1					
ANR	1126117	ExpressionStatement	length -= HCI_ACL_HDR_SIZE	37:4:580:606	1126017	9	True				
ANR	1126118	AssignmentExpression	length -= HCI_ACL_HDR_SIZE		1126017	0		-=			
ANR	1126119	Identifier	length		1126017	0					
ANR	1126120	Identifier	HCI_ACL_HDR_SIZE		1126017	1					
ANR	1126121	IfStatement	"if ( bt_hci_handle_bad ( hci , handle ) )"		1126017	10					
ANR	1126122	Condition	"bt_hci_handle_bad ( hci , handle )"	41:8:619:648	1126017	0	True				
ANR	1126123	CallExpression	"bt_hci_handle_bad ( hci , handle )"		1126017	0					
ANR	1126124	Callee	bt_hci_handle_bad		1126017	0					
ANR	1126125	Identifier	bt_hci_handle_bad		1126017	0					
ANR	1126126	ArgumentList	hci		1126017	1					
ANR	1126127	Argument	hci		1126017	0					
ANR	1126128	Identifier	hci		1126017	0					
ANR	1126129	Argument	handle		1126017	1					
ANR	1126130	Identifier	handle		1126017	0					
ANR	1126131	CompoundStatement		37:40:551:551	1126017	1					
ANR	1126132	ExpressionStatement	"fprintf ( stderr , ""%s: invalid ACL handle %03x\\n"" , __FUNCTION__ , handle )"	43:8:662:757	1126017	0	True				
ANR	1126133	CallExpression	"fprintf ( stderr , ""%s: invalid ACL handle %03x\\n"" , __FUNCTION__ , handle )"		1126017	0					
ANR	1126134	Callee	fprintf		1126017	0					
ANR	1126135	Identifier	fprintf		1126017	0					
ANR	1126136	ArgumentList	stderr		1126017	1					
ANR	1126137	Argument	stderr		1126017	0					
ANR	1126138	Identifier	stderr		1126017	0					
ANR	1126139	Argument	"""%s: invalid ACL handle %03x\\n"""		1126017	1					
ANR	1126140	PrimaryExpression	"""%s: invalid ACL handle %03x\\n"""		1126017	0					
ANR	1126141	Argument	__FUNCTION__		1126017	2					
ANR	1126142	Identifier	__FUNCTION__		1126017	0					
ANR	1126143	Argument	handle		1126017	3					
ANR	1126144	Identifier	handle		1126017	0					
ANR	1126145	ReturnStatement	return ;	49:8:805:811	1126017	1	True				
ANR	1126146	ExpressionStatement	handle &= ~HCI_HANDLE_OFFSET	53:4:825:853	1126017	11	True				
ANR	1126147	AssignmentExpression	handle &= ~HCI_HANDLE_OFFSET		1126017	0		&=			
ANR	1126148	Identifier	handle		1126017	0					
ANR	1126149	Identifier	~HCI_HANDLE_OFFSET		1126017	1					
ANR	1126150	IfStatement	if ( datalen > length )		1126017	12					
ANR	1126151	Condition	datalen > length	57:8:866:881	1126017	0	True				
ANR	1126152	RelationalExpression	datalen > length		1126017	0		>			
ANR	1126153	Identifier	datalen		1126017	0					
ANR	1126154	Identifier	length		1126017	1					
ANR	1126155	CompoundStatement		53:26:784:784	1126017	1					
ANR	1126156	ExpressionStatement	"fprintf ( stderr , ""%s: ACL packet too short (%iB < %iB)\\n"" , __FUNCTION__ , length , datalen )"	59:8:895:1008	1126017	0	True				
ANR	1126157	CallExpression	"fprintf ( stderr , ""%s: ACL packet too short (%iB < %iB)\\n"" , __FUNCTION__ , length , datalen )"		1126017	0					
ANR	1126158	Callee	fprintf		1126017	0					
ANR	1126159	Identifier	fprintf		1126017	0					
ANR	1126160	ArgumentList	stderr		1126017	1					
ANR	1126161	Argument	stderr		1126017	0					
ANR	1126162	Identifier	stderr		1126017	0					
ANR	1126163	Argument	"""%s: ACL packet too short (%iB < %iB)\\n"""		1126017	1					
ANR	1126164	PrimaryExpression	"""%s: ACL packet too short (%iB < %iB)\\n"""		1126017	0					
ANR	1126165	Argument	__FUNCTION__		1126017	2					
ANR	1126166	Identifier	__FUNCTION__		1126017	0					
ANR	1126167	Argument	length		1126017	3					
ANR	1126168	Identifier	length		1126017	0					
ANR	1126169	Argument	datalen		1126017	4					
ANR	1126170	Identifier	datalen		1126017	0					
ANR	1126171	ReturnStatement	return ;	63:8:1019:1025	1126017	1	True				
ANR	1126172	ExpressionStatement	link = hci -> lm . handle [ handle ] . link	69:4:1041:1075	1126017	13	True				
ANR	1126173	AssignmentExpression	link = hci -> lm . handle [ handle ] . link		1126017	0		=			
ANR	1126174	Identifier	link		1126017	0					
ANR	1126175	MemberAccess	hci -> lm . handle [ handle ] . link		1126017	1					
ANR	1126176	ArrayIndexing	hci -> lm . handle [ handle ]		1126017	0					
ANR	1126177	MemberAccess	hci -> lm . handle		1126017	0					
ANR	1126178	PtrMemberAccess	hci -> lm		1126017	0					
ANR	1126179	Identifier	hci		1126017	0					
ANR	1126180	Identifier	lm		1126017	1					
ANR	1126181	Identifier	handle		1126017	1					
ANR	1126182	Identifier	handle		1126017	1					
ANR	1126183	Identifier	link		1126017	1					
ANR	1126184	IfStatement	if ( ( flags & ~3 ) == ACL_ACTIVE_BCAST )		1126017	14					
ANR	1126185	Condition	( flags & ~3 ) == ACL_ACTIVE_BCAST	73:8:1088:1119	1126017	0	True				
ANR	1126186	EqualityExpression	( flags & ~3 ) == ACL_ACTIVE_BCAST		1126017	0		==			
ANR	1126187	BitAndExpression	flags & ~3		1126017	0		&			
ANR	1126188	Identifier	flags		1126017	0					
ANR	1126189	Identifier	~3		1126017	1					
ANR	1126190	Identifier	ACL_ACTIVE_BCAST		1126017	1					
ANR	1126191	CompoundStatement		69:42:1022:1022	1126017	1					
ANR	1126192	IfStatement	if ( ! hci -> asb_handle )		1126017	0					
ANR	1126193	Condition	! hci -> asb_handle	75:12:1137:1152	1126017	0	True				
ANR	1126194	UnaryOperationExpression	! hci -> asb_handle		1126017	0					
ANR	1126195	UnaryOperator	!		1126017	0					
ANR	1126196	PtrMemberAccess	hci -> asb_handle		1126017	1					
ANR	1126197	Identifier	hci		1126017	0					
ANR	1126198	Identifier	asb_handle		1126017	1					
ANR	1126199	ExpressionStatement	hci -> asb_handle = handle	77:12:1168:1192	1126017	1	True				
ANR	1126200	AssignmentExpression	hci -> asb_handle = handle		1126017	0		=			
ANR	1126201	PtrMemberAccess	hci -> asb_handle		1126017	0					
ANR	1126202	Identifier	hci		1126017	0					
ANR	1126203	Identifier	asb_handle		1126017	1					
ANR	1126204	Identifier	handle		1126017	1					
ANR	1126205	ElseStatement	else		1126017	0					
ANR	1126206	IfStatement	if ( handle != hci -> asb_handle )		1126017	0					
ANR	1126207	Condition	handle != hci -> asb_handle	79:17:1212:1236	1126017	0	True				
ANR	1126208	EqualityExpression	handle != hci -> asb_handle		1126017	0		!=			
ANR	1126209	Identifier	handle		1126017	0					
ANR	1126210	PtrMemberAccess	hci -> asb_handle		1126017	1					
ANR	1126211	Identifier	hci		1126017	0					
ANR	1126212	Identifier	asb_handle		1126017	1					
ANR	1126213	CompoundStatement		75:44:1139:1139	1126017	1					
ANR	1126214	ExpressionStatement	"fprintf ( stderr , ""%s: Bad handle %03x in Active Slave Broadcast\\n"" , __FUNCTION__ , handle )"	81:12:1254:1371	1126017	0	True				
ANR	1126215	CallExpression	"fprintf ( stderr , ""%s: Bad handle %03x in Active Slave Broadcast\\n"" , __FUNCTION__ , handle )"		1126017	0					
ANR	1126216	Callee	fprintf		1126017	0					
ANR	1126217	Identifier	fprintf		1126017	0					
ANR	1126218	ArgumentList	stderr		1126017	1					
ANR	1126219	Argument	stderr		1126017	0					
ANR	1126220	Identifier	stderr		1126017	0					
ANR	1126221	Argument	"""%s: Bad handle %03x in Active Slave Broadcast\\n"""		1126017	1					
ANR	1126222	PrimaryExpression	"""%s: Bad handle %03x in Active Slave Broadcast\\n"""		1126017	0					
ANR	1126223	Argument	__FUNCTION__		1126017	2					
ANR	1126224	Identifier	__FUNCTION__		1126017	0					
ANR	1126225	Argument	handle		1126017	3					
ANR	1126226	Identifier	handle		1126017	0					
ANR	1126227	ReturnStatement	return ;	87:12:1427:1433	1126017	1	True				
ANR	1126228	IfStatement	if ( ( flags & ~3 ) == ACL_PICO_BCAST )		1126017	15					
ANR	1126229	Condition	( flags & ~3 ) == ACL_PICO_BCAST	99:8:1486:1515	1126017	0	True				
ANR	1126230	EqualityExpression	( flags & ~3 ) == ACL_PICO_BCAST		1126017	0		==			
ANR	1126231	BitAndExpression	flags & ~3		1126017	0		&			
ANR	1126232	Identifier	flags		1126017	0					
ANR	1126233	Identifier	~3		1126017	1					
ANR	1126234	Identifier	ACL_PICO_BCAST		1126017	1					
ANR	1126235	CompoundStatement		95:40:1418:1418	1126017	1					
ANR	1126236	IfStatement	if ( ! hci -> psb_handle )		1126017	0					
ANR	1126237	Condition	! hci -> psb_handle	101:12:1533:1548	1126017	0	True				
ANR	1126238	UnaryOperationExpression	! hci -> psb_handle		1126017	0					
ANR	1126239	UnaryOperator	!		1126017	0					
ANR	1126240	PtrMemberAccess	hci -> psb_handle		1126017	1					
ANR	1126241	Identifier	hci		1126017	0					
ANR	1126242	Identifier	psb_handle		1126017	1					
ANR	1126243	ExpressionStatement	hci -> psb_handle = handle	103:12:1564:1588	1126017	1	True				
ANR	1126244	AssignmentExpression	hci -> psb_handle = handle		1126017	0		=			
ANR	1126245	PtrMemberAccess	hci -> psb_handle		1126017	0					
ANR	1126246	Identifier	hci		1126017	0					
ANR	1126247	Identifier	psb_handle		1126017	1					
ANR	1126248	Identifier	handle		1126017	1					
ANR	1126249	ElseStatement	else		1126017	0					
ANR	1126250	IfStatement	if ( handle != hci -> psb_handle )		1126017	0					
ANR	1126251	Condition	handle != hci -> psb_handle	105:17:1608:1632	1126017	0	True				
ANR	1126252	EqualityExpression	handle != hci -> psb_handle		1126017	0		!=			
ANR	1126253	Identifier	handle		1126017	0					
ANR	1126254	PtrMemberAccess	hci -> psb_handle		1126017	1					
ANR	1126255	Identifier	hci		1126017	0					
ANR	1126256	Identifier	psb_handle		1126017	1					
ANR	1126257	CompoundStatement		101:44:1535:1535	1126017	1					
ANR	1126258	ExpressionStatement	"fprintf ( stderr , ""%s: Bad handle %03x in Parked Slave Broadcast\\n"" , __FUNCTION__ , handle )"	107:12:1650:1767	1126017	0	True				
ANR	1126259	CallExpression	"fprintf ( stderr , ""%s: Bad handle %03x in Parked Slave Broadcast\\n"" , __FUNCTION__ , handle )"		1126017	0					
ANR	1126260	Callee	fprintf		1126017	0					
ANR	1126261	Identifier	fprintf		1126017	0					
ANR	1126262	ArgumentList	stderr		1126017	1					
ANR	1126263	Argument	stderr		1126017	0					
ANR	1126264	Identifier	stderr		1126017	0					
ANR	1126265	Argument	"""%s: Bad handle %03x in Parked Slave Broadcast\\n"""		1126017	1					
ANR	1126266	PrimaryExpression	"""%s: Bad handle %03x in Parked Slave Broadcast\\n"""		1126017	0					
ANR	1126267	Argument	__FUNCTION__		1126017	2					
ANR	1126268	Identifier	__FUNCTION__		1126017	0					
ANR	1126269	Argument	handle		1126017	3					
ANR	1126270	Identifier	handle		1126017	0					
ANR	1126271	ReturnStatement	return ;	113:12:1823:1829	1126017	1	True				
ANR	1126272	ExpressionStatement	"bt_hci_event_num_comp_pkts ( hci , handle | HCI_HANDLE_OFFSET , 1 )"	127:4:1939:2001	1126017	16	True				
ANR	1126273	CallExpression	"bt_hci_event_num_comp_pkts ( hci , handle | HCI_HANDLE_OFFSET , 1 )"		1126017	0					
ANR	1126274	Callee	bt_hci_event_num_comp_pkts		1126017	0					
ANR	1126275	Identifier	bt_hci_event_num_comp_pkts		1126017	0					
ANR	1126276	ArgumentList	hci		1126017	1					
ANR	1126277	Argument	hci		1126017	0					
ANR	1126278	Identifier	hci		1126017	0					
ANR	1126279	Argument	handle | HCI_HANDLE_OFFSET		1126017	1					
ANR	1126280	InclusiveOrExpression	handle | HCI_HANDLE_OFFSET		1126017	0		|			
ANR	1126281	Identifier	handle		1126017	0					
ANR	1126282	Identifier	HCI_HANDLE_OFFSET		1126017	1					
ANR	1126283	Argument	1		1126017	2					
ANR	1126284	PrimaryExpression	1		1126017	0					
ANR	1126285	ExpressionStatement	"hci -> lm . handle [ handle ] . lmp_acl_data ( link , data , ( flags & 3 ) == ACL_START , length )"	133:4:2084:2186	1126017	17	True				
ANR	1126286	CallExpression	"hci -> lm . handle [ handle ] . lmp_acl_data ( link , data , ( flags & 3 ) == ACL_START , length )"		1126017	0					
ANR	1126287	Callee	hci -> lm . handle [ handle ] . lmp_acl_data		1126017	0					
ANR	1126288	MemberAccess	hci -> lm . handle [ handle ] . lmp_acl_data		1126017	0					
ANR	1126289	ArrayIndexing	hci -> lm . handle [ handle ]		1126017	0					
ANR	1126290	MemberAccess	hci -> lm . handle		1126017	0					
ANR	1126291	PtrMemberAccess	hci -> lm		1126017	0					
ANR	1126292	Identifier	hci		1126017	0					
ANR	1126293	Identifier	lm		1126017	1					
ANR	1126294	Identifier	handle		1126017	1					
ANR	1126295	Identifier	handle		1126017	1					
ANR	1126296	Identifier	lmp_acl_data		1126017	1					
ANR	1126297	ArgumentList	link		1126017	1					
ANR	1126298	Argument	link		1126017	0					
ANR	1126299	Identifier	link		1126017	0					
ANR	1126300	Argument	data		1126017	1					
ANR	1126301	Identifier	data		1126017	0					
ANR	1126302	Argument	( flags & 3 ) == ACL_START		1126017	2					
ANR	1126303	EqualityExpression	( flags & 3 ) == ACL_START		1126017	0		==			
ANR	1126304	BitAndExpression	flags & 3		1126017	0		&			
ANR	1126305	Identifier	flags		1126017	0					
ANR	1126306	PrimaryExpression	3		1126017	1					
ANR	1126307	Identifier	ACL_START		1126017	1					
ANR	1126308	Argument	length		1126017	3					
ANR	1126309	Identifier	length		1126017	0					
ANR	1126310	ReturnType	static void		1126017	1					
ANR	1126311	Identifier	bt_submit_acl		1126017	2					
ANR	1126312	ParameterList	"struct HCIInfo * info , const uint8_t * data , int length"		1126017	3					
ANR	1126313	Parameter	struct HCIInfo * info	1:26:26:45	1126017	0	True				
ANR	1126314	ParameterType	struct HCIInfo *		1126017	0					
ANR	1126315	Identifier	info		1126017	1					
ANR	1126316	Parameter	const uint8_t * data	3:16:65:83	1126017	1	True				
ANR	1126317	ParameterType	const uint8_t *		1126017	0					
ANR	1126318	Identifier	data		1126017	1					
ANR	1126319	Parameter	int length	3:37:86:95	1126017	2	True				
ANR	1126320	ParameterType	int		1126017	0					
ANR	1126321	Identifier	length		1126017	1					
ANR	1126322	CFGEntryNode	ENTRY		1126017		True				
ANR	1126323	CFGExitNode	EXIT		1126017		True				
ANR	1126324	Symbol	acl_handle		1126017						
ANR	1126325	Symbol	data		1126017						
ANR	1126326	Symbol	bt_hci_handle_bad		1126017						
ANR	1126327	Symbol	* hci		1126017						
ANR	1126328	Symbol	flags		1126017						
ANR	1126329	Symbol	link		1126017						
ANR	1126330	Symbol	hci -> lm . handle		1126017						
ANR	1126331	Symbol	HCI_HANDLE_OFFSET		1126017						
ANR	1126332	Symbol	hci		1126017						
ANR	1126333	Symbol	ACL_START		1126017						
ANR	1126334	Symbol	hci -> lm . handle [ handle ] . link		1126017						
ANR	1126335	Symbol	ACL_PICO_BCAST		1126017						
ANR	1126336	Symbol	acl_flags		1126017						
ANR	1126337	Symbol	info		1126017						
ANR	1126338	Symbol	* * hci		1126017						
ANR	1126339	Symbol	* handle		1126017						
ANR	1126340	Symbol	length		1126017						
ANR	1126341	Symbol	hci -> psb_handle		1126017						
ANR	1126342	Symbol	handle		1126017						
ANR	1126343	Symbol	hci -> asb_handle		1126017						
ANR	1126344	Symbol	stderr		1126017						
ANR	1126345	Symbol	ACL_ACTIVE_BCAST		1126017						
ANR	1126346	Symbol	datalen		1126017						
ANR	1126347	Symbol	__FUNCTION__		1126017						
ANR	1126348	Symbol	hci_from_info		1126017						
ANR	1126349	Symbol	HCI_ACL_HDR_SIZE		1126017						
ANR	1126350	Symbol	~3		1126017						
ANR	1126351	Symbol	* hci -> lm . handle		1126017						
ANR	1126352	Symbol	~HCI_HANDLE_OFFSET		1126017						
ANR	1126353	Symbol	* data		1126017						
ANR	1126354	Symbol	* hci -> lm		1126017						
ANR	1126355	Symbol	hci -> lm		1126017						
