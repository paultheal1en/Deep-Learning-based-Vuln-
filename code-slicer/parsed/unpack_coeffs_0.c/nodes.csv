command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8628604	File	/home/p4ultr4n/workplace/ReVeal/raw_code/unpack_coeffs_0.c								
ANR	8628605	Function	unpack_coeffs	1:0:0:3307							
ANR	8628606	FunctionDef	"unpack_coeffs (SnowContext * s , SubBand * b , SubBand * parent , int orientation)"		8628605	0					
ANR	8628607	CompoundStatement		1:95:95:3307	8628605	0					
ANR	8628608	IdentifierDeclStatement	const int w = b -> width ;	3:4:102:123	8628605	0	True				
ANR	8628609	IdentifierDecl	w = b -> width		8628605	0					
ANR	8628610	IdentifierDeclType	const int		8628605	0					
ANR	8628611	Identifier	w		8628605	1					
ANR	8628612	AssignmentExpression	w = b -> width		8628605	2		=			
ANR	8628613	Identifier	w		8628605	0					
ANR	8628614	PtrMemberAccess	b -> width		8628605	1					
ANR	8628615	Identifier	b		8628605	0					
ANR	8628616	Identifier	width		8628605	1					
ANR	8628617	IdentifierDeclStatement	const int h = b -> height ;	5:4:130:152	8628605	1	True				
ANR	8628618	IdentifierDecl	h = b -> height		8628605	0					
ANR	8628619	IdentifierDeclType	const int		8628605	0					
ANR	8628620	Identifier	h		8628605	1					
ANR	8628621	AssignmentExpression	h = b -> height		8628605	2		=			
ANR	8628622	Identifier	h		8628605	0					
ANR	8628623	PtrMemberAccess	b -> height		8628605	1					
ANR	8628624	Identifier	b		8628605	0					
ANR	8628625	Identifier	height		8628605	1					
ANR	8628626	IdentifierDeclStatement	"int x , y ;"	7:4:159:166	8628605	2	True				
ANR	8628627	IdentifierDecl	x		8628605	0					
ANR	8628628	IdentifierDeclType	int		8628605	0					
ANR	8628629	Identifier	x		8628605	1					
ANR	8628630	IdentifierDecl	y		8628605	1					
ANR	8628631	IdentifierDeclType	int		8628605	0					
ANR	8628632	Identifier	y		8628605	1					
ANR	8628633	IfStatement	if ( 1 )		8628605	3					
ANR	8628634	Condition	1	11:7:182:182	8628605	0	True				
ANR	8628635	PrimaryExpression	1		8628605	0					
ANR	8628636	CompoundStatement		23:8:294:332	8628605	1					
ANR	8628637	IdentifierDeclStatement	int run ;	13:8:195:202	8628605	0	True				
ANR	8628638	IdentifierDecl	run		8628605	0					
ANR	8628639	IdentifierDeclType	int		8628605	0					
ANR	8628640	Identifier	run		8628605	1					
ANR	8628641	IdentifierDeclStatement	x_and_coeff * xc = b -> x_coeff ;	15:8:213:240	8628605	1	True				
ANR	8628642	IdentifierDecl	* xc = b -> x_coeff		8628605	0					
ANR	8628643	IdentifierDeclType	x_and_coeff *		8628605	0					
ANR	8628644	Identifier	xc		8628605	1					
ANR	8628645	AssignmentExpression	* xc = b -> x_coeff		8628605	2		=			
ANR	8628646	Identifier	xc		8628605	0					
ANR	8628647	PtrMemberAccess	b -> x_coeff		8628605	1					
ANR	8628648	Identifier	b		8628605	0					
ANR	8628649	Identifier	x_coeff		8628605	1					
ANR	8628650	IdentifierDeclStatement	x_and_coeff * prev_xc = NULL ;	17:8:251:277	8628605	2	True				
ANR	8628651	IdentifierDecl	* prev_xc = NULL		8628605	0					
ANR	8628652	IdentifierDeclType	x_and_coeff *		8628605	0					
ANR	8628653	Identifier	prev_xc		8628605	1					
ANR	8628654	AssignmentExpression	* prev_xc = NULL		8628605	2		=			
ANR	8628655	Identifier	NULL		8628605	0					
ANR	8628656	Identifier	NULL		8628605	1					
ANR	8628657	IdentifierDeclStatement	x_and_coeff * prev2_xc = xc ;	19:8:288:313	8628605	3	True				
ANR	8628658	IdentifierDecl	* prev2_xc = xc		8628605	0					
ANR	8628659	IdentifierDeclType	x_and_coeff *		8628605	0					
ANR	8628660	Identifier	prev2_xc		8628605	1					
ANR	8628661	AssignmentExpression	* prev2_xc = xc		8628605	2		=			
ANR	8628662	Identifier	xc		8628605	0					
ANR	8628663	Identifier	xc		8628605	1					
ANR	8628664	IdentifierDeclStatement	x_and_coeff * parent_xc = parent ? parent -> x_coeff : NULL ;	21:8:324:379	8628605	4	True				
ANR	8628665	IdentifierDecl	* parent_xc = parent ? parent -> x_coeff : NULL		8628605	0					
ANR	8628666	IdentifierDeclType	x_and_coeff *		8628605	0					
ANR	8628667	Identifier	parent_xc		8628605	1					
ANR	8628668	AssignmentExpression	* parent_xc = parent ? parent -> x_coeff : NULL		8628605	2		=			
ANR	8628669	Identifier	parent_xc		8628605	0					
ANR	8628670	ConditionalExpression	parent ? parent -> x_coeff : NULL		8628605	1					
ANR	8628671	Condition	parent		8628605	0					
ANR	8628672	Identifier	parent		8628605	0					
ANR	8628673	PtrMemberAccess	parent -> x_coeff		8628605	1					
ANR	8628674	Identifier	parent		8628605	0					
ANR	8628675	Identifier	x_coeff		8628605	1					
ANR	8628676	Identifier	NULL		8628605	2					
ANR	8628677	IdentifierDeclStatement	x_and_coeff * prev_parent_xc = parent_xc ;	23:8:390:428	8628605	5	True				
ANR	8628678	IdentifierDecl	* prev_parent_xc = parent_xc		8628605	0					
ANR	8628679	IdentifierDeclType	x_and_coeff *		8628605	0					
ANR	8628680	Identifier	prev_parent_xc		8628605	1					
ANR	8628681	AssignmentExpression	* prev_parent_xc = parent_xc		8628605	2		=			
ANR	8628682	Identifier	parent_xc		8628605	0					
ANR	8628683	Identifier	parent_xc		8628605	1					
ANR	8628684	ExpressionStatement	"run = get_symbol2 ( & s -> c , b -> state [ 1 ] , 3 )"	27:8:441:480	8628605	6	True				
ANR	8628685	AssignmentExpression	"run = get_symbol2 ( & s -> c , b -> state [ 1 ] , 3 )"		8628605	0		=			
ANR	8628686	Identifier	run		8628605	0					
ANR	8628687	CallExpression	"get_symbol2 ( & s -> c , b -> state [ 1 ] , 3 )"		8628605	1					
ANR	8628688	Callee	get_symbol2		8628605	0					
ANR	8628689	Identifier	get_symbol2		8628605	0					
ANR	8628690	ArgumentList	& s -> c		8628605	1					
ANR	8628691	Argument	& s -> c		8628605	0					
ANR	8628692	UnaryOperationExpression	& s -> c		8628605	0					
ANR	8628693	UnaryOperator	&		8628605	0					
ANR	8628694	PtrMemberAccess	s -> c		8628605	1					
ANR	8628695	Identifier	s		8628605	0					
ANR	8628696	Identifier	c		8628605	1					
ANR	8628697	Argument	b -> state [ 1 ]		8628605	1					
ANR	8628698	ArrayIndexing	b -> state [ 1 ]		8628605	0					
ANR	8628699	PtrMemberAccess	b -> state		8628605	0					
ANR	8628700	Identifier	b		8628605	0					
ANR	8628701	Identifier	state		8628605	1					
ANR	8628702	PrimaryExpression	1		8628605	1					
ANR	8628703	Argument	3		8628605	2					
ANR	8628704	PrimaryExpression	3		8628605	0					
ANR	8628705	ForStatement	for ( y = 0 ; y < h ; y ++ )		8628605	7					
ANR	8628706	ForInit	y = 0 ;	29:12:495:498	8628605	0	True				
ANR	8628707	AssignmentExpression	y = 0		8628605	0		=			
ANR	8628708	Identifier	y		8628605	0					
ANR	8628709	PrimaryExpression	0		8628605	1					
ANR	8628710	Condition	y < h	29:17:500:502	8628605	1	True				
ANR	8628711	RelationalExpression	y < h		8628605	0		<			
ANR	8628712	Identifier	y		8628605	0					
ANR	8628713	Identifier	h		8628605	1					
ANR	8628714	PostIncDecOperationExpression	y ++	29:22:505:507	8628605	2	True				
ANR	8628715	Identifier	y		8628605	0					
ANR	8628716	IncDec	++		8628605	1					
ANR	8628717	CompoundStatement		33:12:450:469	8628605	3					
ANR	8628718	IdentifierDeclStatement	int v = 0 ;	31:12:524:531	8628605	0	True				
ANR	8628719	IdentifierDecl	v = 0		8628605	0					
ANR	8628720	IdentifierDeclType	int		8628605	0					
ANR	8628721	Identifier	v		8628605	1					
ANR	8628722	AssignmentExpression	v = 0		8628605	2		=			
ANR	8628723	Identifier	v		8628605	0					
ANR	8628724	PrimaryExpression	0		8628605	1					
ANR	8628725	IdentifierDeclStatement	"int lt = 0 , t = 0 , rt = 0 ;"	33:12:546:565	8628605	1	True				
ANR	8628726	IdentifierDecl	lt = 0		8628605	0					
ANR	8628727	IdentifierDeclType	int		8628605	0					
ANR	8628728	Identifier	lt		8628605	1					
ANR	8628729	AssignmentExpression	lt = 0		8628605	2		=			
ANR	8628730	Identifier	lt		8628605	0					
ANR	8628731	PrimaryExpression	0		8628605	1					
ANR	8628732	IdentifierDecl	t = 0		8628605	1					
ANR	8628733	IdentifierDeclType	int		8628605	0					
ANR	8628734	Identifier	t		8628605	1					
ANR	8628735	AssignmentExpression	t = 0		8628605	2		=			
ANR	8628736	Identifier	t		8628605	0					
ANR	8628737	PrimaryExpression	0		8628605	1					
ANR	8628738	IdentifierDecl	rt = 0		8628605	2					
ANR	8628739	IdentifierDeclType	int		8628605	0					
ANR	8628740	Identifier	rt		8628605	1					
ANR	8628741	AssignmentExpression	rt = 0		8628605	2		=			
ANR	8628742	Identifier	rt		8628605	0					
ANR	8628743	PrimaryExpression	0		8628605	1					
ANR	8628744	IfStatement	if ( y && prev_xc -> x == 0 )		8628605	2					
ANR	8628745	Condition	y && prev_xc -> x == 0	37:15:585:604	8628605	0	True				
ANR	8628746	AndExpression	y && prev_xc -> x == 0		8628605	0		&&			
ANR	8628747	Identifier	y		8628605	0					
ANR	8628748	EqualityExpression	prev_xc -> x == 0		8628605	1		==			
ANR	8628749	PtrMemberAccess	prev_xc -> x		8628605	0					
ANR	8628750	Identifier	prev_xc		8628605	0					
ANR	8628751	Identifier	x		8628605	1					
ANR	8628752	PrimaryExpression	0		8628605	1					
ANR	8628753	CompoundStatement		37:36:510:510	8628605	1					
ANR	8628754	ExpressionStatement	rt = prev_xc -> coeff	39:16:625:643	8628605	0	True				
ANR	8628755	AssignmentExpression	rt = prev_xc -> coeff		8628605	0		=			
ANR	8628756	Identifier	rt		8628605	0					
ANR	8628757	PtrMemberAccess	prev_xc -> coeff		8628605	1					
ANR	8628758	Identifier	prev_xc		8628605	0					
ANR	8628759	Identifier	coeff		8628605	1					
ANR	8628760	ForStatement	for ( x = 0 ; x < w ; x ++ )		8628605	3					
ANR	8628761	ForInit	x = 0 ;	43:16:677:680	8628605	0	True				
ANR	8628762	AssignmentExpression	x = 0		8628605	0		=			
ANR	8628763	Identifier	x		8628605	0					
ANR	8628764	PrimaryExpression	0		8628605	1					
ANR	8628765	Condition	x < w	43:21:682:684	8628605	1	True				
ANR	8628766	RelationalExpression	x < w		8628605	0		<			
ANR	8628767	Identifier	x		8628605	0					
ANR	8628768	Identifier	w		8628605	1					
ANR	8628769	PostIncDecOperationExpression	x ++	43:26:687:689	8628605	2	True				
ANR	8628770	Identifier	x		8628605	0					
ANR	8628771	IncDec	++		8628605	1					
ANR	8628772	CompoundStatement		47:16:640:654	8628605	3					
ANR	8628773	IdentifierDeclStatement	int p = 0 ;	45:16:710:717	8628605	0	True				
ANR	8628774	IdentifierDecl	p = 0		8628605	0					
ANR	8628775	IdentifierDeclType	int		8628605	0					
ANR	8628776	Identifier	p		8628605	1					
ANR	8628777	AssignmentExpression	p = 0		8628605	2		=			
ANR	8628778	Identifier	p		8628605	0					
ANR	8628779	PrimaryExpression	0		8628605	1					
ANR	8628780	IdentifierDeclStatement	const int l = v ;	47:16:736:750	8628605	1	True				
ANR	8628781	IdentifierDecl	l = v		8628605	0					
ANR	8628782	IdentifierDeclType	const int		8628605	0					
ANR	8628783	Identifier	l		8628605	1					
ANR	8628784	AssignmentExpression	l = v		8628605	2		=			
ANR	8628785	Identifier	v		8628605	0					
ANR	8628786	Identifier	v		8628605	1					
ANR	8628787	ExpressionStatement	lt = t	51:16:787:792	8628605	2	True				
ANR	8628788	AssignmentExpression	lt = t		8628605	0		=			
ANR	8628789	Identifier	lt		8628605	0					
ANR	8628790	Identifier	t		8628605	1					
ANR	8628791	ExpressionStatement	t = rt	51:23:794:799	8628605	3	True				
ANR	8628792	AssignmentExpression	t = rt		8628605	0		=			
ANR	8628793	Identifier	t		8628605	0					
ANR	8628794	Identifier	rt		8628605	1					
ANR	8628795	IfStatement	if ( y )		8628605	4					
ANR	8628796	Condition	y	55:19:823:823	8628605	0	True				
ANR	8628797	Identifier	y		8628605	0					
ANR	8628798	CompoundStatement		55:21:729:729	8628605	1					
ANR	8628799	IfStatement	if ( prev_xc -> x <= x )		8628605	0					
ANR	8628800	Condition	prev_xc -> x <= x	57:23:851:865	8628605	0	True				
ANR	8628801	RelationalExpression	prev_xc -> x <= x		8628605	0		<=			
ANR	8628802	PtrMemberAccess	prev_xc -> x		8628605	0					
ANR	8628803	Identifier	prev_xc		8628605	0					
ANR	8628804	Identifier	x		8628605	1					
ANR	8628805	Identifier	x		8628605	1					
ANR	8628806	ExpressionStatement	prev_xc ++	59:24:893:902	8628605	1	True				
ANR	8628807	PostIncDecOperationExpression	prev_xc ++		8628605	0					
ANR	8628808	Identifier	prev_xc		8628605	0					
ANR	8628809	IncDec	++		8628605	1					
ANR	8628810	IfStatement	if ( prev_xc -> x == x + 1 )		8628605	1					
ANR	8628811	Condition	prev_xc -> x == x + 1	61:23:928:946	8628605	0	True				
ANR	8628812	EqualityExpression	prev_xc -> x == x + 1		8628605	0		==			
ANR	8628813	PtrMemberAccess	prev_xc -> x		8628605	0					
ANR	8628814	Identifier	prev_xc		8628605	0					
ANR	8628815	Identifier	x		8628605	1					
ANR	8628816	AdditiveExpression	x + 1		8628605	1		+			
ANR	8628817	Identifier	x		8628605	0					
ANR	8628818	PrimaryExpression	1		8628605	1					
ANR	8628819	ExpressionStatement	rt = prev_xc -> coeff	63:24:974:992	8628605	1	True				
ANR	8628820	AssignmentExpression	rt = prev_xc -> coeff		8628605	0		=			
ANR	8628821	Identifier	rt		8628605	0					
ANR	8628822	PtrMemberAccess	prev_xc -> coeff		8628605	1					
ANR	8628823	Identifier	prev_xc		8628605	0					
ANR	8628824	Identifier	coeff		8628605	1					
ANR	8628825	ElseStatement	else		8628605	0					
ANR	8628826	ExpressionStatement	rt = 0	67:24:1045:1049	8628605	0	True				
ANR	8628827	AssignmentExpression	rt = 0		8628605	0		=			
ANR	8628828	Identifier	rt		8628605	0					
ANR	8628829	PrimaryExpression	0		8628605	1					
ANR	8628830	IfStatement	if ( parent_xc )		8628605	5					
ANR	8628831	Condition	parent_xc	71:19:1090:1098	8628605	0	True				
ANR	8628832	Identifier	parent_xc		8628605	0					
ANR	8628833	CompoundStatement		71:29:1004:1004	8628605	1					
ANR	8628834	IfStatement	if ( x >> 1 > parent_xc -> x )		8628605	0					
ANR	8628835	Condition	x >> 1 > parent_xc -> x	73:23:1126:1144	8628605	0	True				
ANR	8628836	RelationalExpression	x >> 1 > parent_xc -> x		8628605	0		>			
ANR	8628837	ShiftExpression	x >> 1		8628605	0		>>			
ANR	8628838	Identifier	x		8628605	0					
ANR	8628839	PrimaryExpression	1		8628605	1					
ANR	8628840	PtrMemberAccess	parent_xc -> x		8628605	1					
ANR	8628841	Identifier	parent_xc		8628605	0					
ANR	8628842	Identifier	x		8628605	1					
ANR	8628843	CompoundStatement		73:43:1050:1050	8628605	1					
ANR	8628844	ExpressionStatement	parent_xc ++	75:24:1173:1184	8628605	0	True				
ANR	8628845	PostIncDecOperationExpression	parent_xc ++		8628605	0					
ANR	8628846	Identifier	parent_xc		8628605	0					
ANR	8628847	IncDec	++		8628605	1					
ANR	8628848	IfStatement	if ( x >> 1 == parent_xc -> x )		8628605	1					
ANR	8628849	Condition	x >> 1 == parent_xc -> x	79:23:1233:1252	8628605	0	True				
ANR	8628850	EqualityExpression	x >> 1 == parent_xc -> x		8628605	0		==			
ANR	8628851	ShiftExpression	x >> 1		8628605	0		>>			
ANR	8628852	Identifier	x		8628605	0					
ANR	8628853	PrimaryExpression	1		8628605	1					
ANR	8628854	PtrMemberAccess	parent_xc -> x		8628605	1					
ANR	8628855	Identifier	parent_xc		8628605	0					
ANR	8628856	Identifier	x		8628605	1					
ANR	8628857	CompoundStatement		79:44:1158:1158	8628605	1					
ANR	8628858	ExpressionStatement	p = parent_xc -> coeff	81:24:1281:1300	8628605	0	True				
ANR	8628859	AssignmentExpression	p = parent_xc -> coeff		8628605	0		=			
ANR	8628860	Identifier	p		8628605	0					
ANR	8628861	PtrMemberAccess	parent_xc -> coeff		8628605	1					
ANR	8628862	Identifier	parent_xc		8628605	0					
ANR	8628863	Identifier	coeff		8628605	1					
ANR	8628864	IfStatement	if ( l | lt | t | rt | p )		8628605	6					
ANR	8628865	Condition	l | lt | t | rt | p	87:26:1371:1381	8628605	0	True				
ANR	8628866	InclusiveOrExpression	l | lt | t | rt | p		8628605	0		|			
ANR	8628867	Identifier	l		8628605	0					
ANR	8628868	InclusiveOrExpression	lt | t | rt | p		8628605	1		|			
ANR	8628869	Identifier	lt		8628605	0					
ANR	8628870	InclusiveOrExpression	t | rt | p		8628605	1		|			
ANR	8628871	Identifier	t		8628605	0					
ANR	8628872	InclusiveOrExpression	rt | p		8628605	1		|			
ANR	8628873	Identifier	rt		8628605	0					
ANR	8628874	Identifier	p		8628605	1					
ANR	8628875	CompoundStatement		89:20:1310:1392	8628605	1					
ANR	8628876	IdentifierDeclStatement	int context = av_log2 ( 3 * ( l >> 1 ) + ( lt >> 1 ) + ( t & ~1 ) + ( rt >> 1 ) + ( p >> 1 ) ) ;	89:20:1406:1488	8628605	0	True				
ANR	8628877	IdentifierDecl	context = av_log2 ( 3 * ( l >> 1 ) + ( lt >> 1 ) + ( t & ~1 ) + ( rt >> 1 ) + ( p >> 1 ) )		8628605	0					
ANR	8628878	IdentifierDeclType	int		8628605	0					
ANR	8628879	Identifier	context		8628605	1					
ANR	8628880	AssignmentExpression	context = av_log2 ( 3 * ( l >> 1 ) + ( lt >> 1 ) + ( t & ~1 ) + ( rt >> 1 ) + ( p >> 1 ) )		8628605	2		=			
ANR	8628881	Identifier	context		8628605	0					
ANR	8628882	CallExpression	av_log2 ( 3 * ( l >> 1 ) + ( lt >> 1 ) + ( t & ~1 ) + ( rt >> 1 ) + ( p >> 1 ) )		8628605	1					
ANR	8628883	Callee	av_log2		8628605	0					
ANR	8628884	Identifier	av_log2		8628605	0					
ANR	8628885	ArgumentList	3 * ( l >> 1 ) + ( lt >> 1 ) + ( t & ~1 ) + ( rt >> 1 ) + ( p >> 1 )		8628605	1					
ANR	8628886	Argument	3 * ( l >> 1 ) + ( lt >> 1 ) + ( t & ~1 ) + ( rt >> 1 ) + ( p >> 1 )		8628605	0					
ANR	8628887	AdditiveExpression	3 * ( l >> 1 ) + ( lt >> 1 ) + ( t & ~1 ) + ( rt >> 1 ) + ( p >> 1 )		8628605	0		+			
ANR	8628888	MultiplicativeExpression	3 * ( l >> 1 )		8628605	0		*			
ANR	8628889	PrimaryExpression	3		8628605	0					
ANR	8628890	ShiftExpression	l >> 1		8628605	1		>>			
ANR	8628891	Identifier	l		8628605	0					
ANR	8628892	PrimaryExpression	1		8628605	1					
ANR	8628893	AdditiveExpression	( lt >> 1 ) + ( t & ~1 ) + ( rt >> 1 ) + ( p >> 1 )		8628605	1		+			
ANR	8628894	ShiftExpression	lt >> 1		8628605	0		>>			
ANR	8628895	Identifier	lt		8628605	0					
ANR	8628896	PrimaryExpression	1		8628605	1					
ANR	8628897	AdditiveExpression	( t & ~1 ) + ( rt >> 1 ) + ( p >> 1 )		8628605	1		+			
ANR	8628898	BitAndExpression	t & ~1		8628605	0		&			
ANR	8628899	Identifier	t		8628605	0					
ANR	8628900	Identifier	~1		8628605	1					
ANR	8628901	AdditiveExpression	( rt >> 1 ) + ( p >> 1 )		8628605	1		+			
ANR	8628902	ShiftExpression	rt >> 1		8628605	0		>>			
ANR	8628903	Identifier	rt		8628605	0					
ANR	8628904	PrimaryExpression	1		8628605	1					
ANR	8628905	ShiftExpression	p >> 1		8628605	1		>>			
ANR	8628906	Identifier	p		8628605	0					
ANR	8628907	PrimaryExpression	1		8628605	1					
ANR	8628908	ExpressionStatement	"v = get_rac ( & s -> c , & b -> state [ 0 ] [ context ] )"	93:20:1513:1552	8628605	1	True				
ANR	8628909	AssignmentExpression	"v = get_rac ( & s -> c , & b -> state [ 0 ] [ context ] )"		8628605	0		=			
ANR	8628910	Identifier	v		8628605	0					
ANR	8628911	CallExpression	"get_rac ( & s -> c , & b -> state [ 0 ] [ context ] )"		8628605	1					
ANR	8628912	Callee	get_rac		8628605	0					
ANR	8628913	Identifier	get_rac		8628605	0					
ANR	8628914	ArgumentList	& s -> c		8628605	1					
ANR	8628915	Argument	& s -> c		8628605	0					
ANR	8628916	UnaryOperationExpression	& s -> c		8628605	0					
ANR	8628917	UnaryOperator	&		8628605	0					
ANR	8628918	PtrMemberAccess	s -> c		8628605	1					
ANR	8628919	Identifier	s		8628605	0					
ANR	8628920	Identifier	c		8628605	1					
ANR	8628921	Argument	& b -> state [ 0 ] [ context ]		8628605	1					
ANR	8628922	UnaryOperationExpression	& b -> state [ 0 ] [ context ]		8628605	0					
ANR	8628923	UnaryOperator	&		8628605	0					
ANR	8628924	ArrayIndexing	b -> state [ 0 ] [ context ]		8628605	1					
ANR	8628925	ArrayIndexing	b -> state [ 0 ]		8628605	0					
ANR	8628926	PtrMemberAccess	b -> state		8628605	0					
ANR	8628927	Identifier	b		8628605	0					
ANR	8628928	Identifier	state		8628605	1					
ANR	8628929	PrimaryExpression	0		8628605	1					
ANR	8628930	Identifier	context		8628605	1					
ANR	8628931	IfStatement	if ( v )		8628605	2					
ANR	8628932	Condition	v	95:23:1578:1578	8628605	0	True				
ANR	8628933	Identifier	v		8628605	0					
ANR	8628934	CompoundStatement		95:25:1484:1484	8628605	1					
ANR	8628935	ExpressionStatement	"v = 2 * ( get_symbol2 ( & s -> c , b -> state [ context + 2 ] , context - 4 ) + 1 )"	97:24:1607:1670	8628605	0	True				
ANR	8628936	AssignmentExpression	"v = 2 * ( get_symbol2 ( & s -> c , b -> state [ context + 2 ] , context - 4 ) + 1 )"		8628605	0		=			
ANR	8628937	Identifier	v		8628605	0					
ANR	8628938	MultiplicativeExpression	"2 * ( get_symbol2 ( & s -> c , b -> state [ context + 2 ] , context - 4 ) + 1 )"		8628605	1		*			
ANR	8628939	PrimaryExpression	2		8628605	0					
ANR	8628940	AdditiveExpression	"get_symbol2 ( & s -> c , b -> state [ context + 2 ] , context - 4 ) + 1"		8628605	1		+			
ANR	8628941	CallExpression	"get_symbol2 ( & s -> c , b -> state [ context + 2 ] , context - 4 )"		8628605	0					
ANR	8628942	Callee	get_symbol2		8628605	0					
ANR	8628943	Identifier	get_symbol2		8628605	0					
ANR	8628944	ArgumentList	& s -> c		8628605	1					
ANR	8628945	Argument	& s -> c		8628605	0					
ANR	8628946	UnaryOperationExpression	& s -> c		8628605	0					
ANR	8628947	UnaryOperator	&		8628605	0					
ANR	8628948	PtrMemberAccess	s -> c		8628605	1					
ANR	8628949	Identifier	s		8628605	0					
ANR	8628950	Identifier	c		8628605	1					
ANR	8628951	Argument	b -> state [ context + 2 ]		8628605	1					
ANR	8628952	ArrayIndexing	b -> state [ context + 2 ]		8628605	0					
ANR	8628953	PtrMemberAccess	b -> state		8628605	0					
ANR	8628954	Identifier	b		8628605	0					
ANR	8628955	Identifier	state		8628605	1					
ANR	8628956	AdditiveExpression	context + 2		8628605	1		+			
ANR	8628957	Identifier	context		8628605	0					
ANR	8628958	PrimaryExpression	2		8628605	1					
ANR	8628959	Argument	context - 4		8628605	2					
ANR	8628960	AdditiveExpression	context - 4		8628605	0		-			
ANR	8628961	Identifier	context		8628605	0					
ANR	8628962	PrimaryExpression	4		8628605	1					
ANR	8628963	PrimaryExpression	1		8628605	1					
ANR	8628964	ExpressionStatement	"v += get_rac ( & s -> c , & b -> state [ 0 ] [ 16 + 1 + 3 + quant3bA [ l & 0xFF ] + 3 * quant3bA [ t & 0xFF ] ] )"	99:24:1697:1780	8628605	1	True				
ANR	8628965	AssignmentExpression	"v += get_rac ( & s -> c , & b -> state [ 0 ] [ 16 + 1 + 3 + quant3bA [ l & 0xFF ] + 3 * quant3bA [ t & 0xFF ] ] )"		8628605	0		+=			
ANR	8628966	Identifier	v		8628605	0					
ANR	8628967	CallExpression	"get_rac ( & s -> c , & b -> state [ 0 ] [ 16 + 1 + 3 + quant3bA [ l & 0xFF ] + 3 * quant3bA [ t & 0xFF ] ] )"		8628605	1					
ANR	8628968	Callee	get_rac		8628605	0					
ANR	8628969	Identifier	get_rac		8628605	0					
ANR	8628970	ArgumentList	& s -> c		8628605	1					
ANR	8628971	Argument	& s -> c		8628605	0					
ANR	8628972	UnaryOperationExpression	& s -> c		8628605	0					
ANR	8628973	UnaryOperator	&		8628605	0					
ANR	8628974	PtrMemberAccess	s -> c		8628605	1					
ANR	8628975	Identifier	s		8628605	0					
ANR	8628976	Identifier	c		8628605	1					
ANR	8628977	Argument	& b -> state [ 0 ] [ 16 + 1 + 3 + quant3bA [ l & 0xFF ] + 3 * quant3bA [ t & 0xFF ] ]		8628605	1					
ANR	8628978	UnaryOperationExpression	& b -> state [ 0 ] [ 16 + 1 + 3 + quant3bA [ l & 0xFF ] + 3 * quant3bA [ t & 0xFF ] ]		8628605	0					
ANR	8628979	UnaryOperator	&		8628605	0					
ANR	8628980	ArrayIndexing	b -> state [ 0 ] [ 16 + 1 + 3 + quant3bA [ l & 0xFF ] + 3 * quant3bA [ t & 0xFF ] ]		8628605	1					
ANR	8628981	ArrayIndexing	b -> state [ 0 ]		8628605	0					
ANR	8628982	PtrMemberAccess	b -> state		8628605	0					
ANR	8628983	Identifier	b		8628605	0					
ANR	8628984	Identifier	state		8628605	1					
ANR	8628985	PrimaryExpression	0		8628605	1					
ANR	8628986	AdditiveExpression	16 + 1 + 3 + quant3bA [ l & 0xFF ] + 3 * quant3bA [ t & 0xFF ]		8628605	1		+			
ANR	8628987	PrimaryExpression	16		8628605	0					
ANR	8628988	AdditiveExpression	1 + 3 + quant3bA [ l & 0xFF ] + 3 * quant3bA [ t & 0xFF ]		8628605	1		+			
ANR	8628989	PrimaryExpression	1		8628605	0					
ANR	8628990	AdditiveExpression	3 + quant3bA [ l & 0xFF ] + 3 * quant3bA [ t & 0xFF ]		8628605	1		+			
ANR	8628991	PrimaryExpression	3		8628605	0					
ANR	8628992	AdditiveExpression	quant3bA [ l & 0xFF ] + 3 * quant3bA [ t & 0xFF ]		8628605	1		+			
ANR	8628993	ArrayIndexing	quant3bA [ l & 0xFF ]		8628605	0					
ANR	8628994	Identifier	quant3bA		8628605	0					
ANR	8628995	BitAndExpression	l & 0xFF		8628605	1		&			
ANR	8628996	Identifier	l		8628605	0					
ANR	8628997	PrimaryExpression	0xFF		8628605	1					
ANR	8628998	MultiplicativeExpression	3 * quant3bA [ t & 0xFF ]		8628605	1		*			
ANR	8628999	PrimaryExpression	3		8628605	0					
ANR	8629000	ArrayIndexing	quant3bA [ t & 0xFF ]		8628605	1					
ANR	8629001	Identifier	quant3bA		8628605	0					
ANR	8629002	BitAndExpression	t & 0xFF		8628605	1		&			
ANR	8629003	Identifier	t		8628605	0					
ANR	8629004	PrimaryExpression	0xFF		8628605	1					
ANR	8629005	ExpressionStatement	xc -> x = x	103:24:1833:1840	8628605	2	True				
ANR	8629006	AssignmentExpression	xc -> x = x		8628605	0		=			
ANR	8629007	PtrMemberAccess	xc -> x		8628605	0					
ANR	8629008	Identifier	xc		8628605	0					
ANR	8629009	Identifier	x		8628605	1					
ANR	8629010	Identifier	x		8628605	1					
ANR	8629011	ExpressionStatement	( xc ++ ) -> coeff = v	105:24:1867:1883	8628605	3	True				
ANR	8629012	AssignmentExpression	( xc ++ ) -> coeff = v		8628605	0		=			
ANR	8629013	PtrMemberAccess	( xc ++ ) -> coeff		8628605	0					
ANR	8629014	PostIncDecOperationExpression	xc ++		8628605	0					
ANR	8629015	Identifier	xc		8628605	0					
ANR	8629016	IncDec	++		8628605	1					
ANR	8629017	Identifier	coeff		8628605	1					
ANR	8629018	Identifier	v		8628605	1					
ANR	8629019	ElseStatement	else		8628605	0					
ANR	8629020	CompoundStatement		109:21:1834:1834	8628605	0					
ANR	8629021	IfStatement	if ( ! run )		8628605	0					
ANR	8629022	Condition	! run	111:23:1956:1959	8628605	0	True				
ANR	8629023	UnaryOperationExpression	! run		8628605	0					
ANR	8629024	UnaryOperator	!		8628605	0					
ANR	8629025	Identifier	run		8628605	1					
ANR	8629026	CompoundStatement		111:28:1865:1865	8628605	1					
ANR	8629027	ExpressionStatement	"run = get_symbol2 ( & s -> c , b -> state [ 1 ] , 3 )"	113:24:1988:2027	8628605	0	True				
ANR	8629028	AssignmentExpression	"run = get_symbol2 ( & s -> c , b -> state [ 1 ] , 3 )"		8628605	0		=			
ANR	8629029	Identifier	run		8628605	0					
ANR	8629030	CallExpression	"get_symbol2 ( & s -> c , b -> state [ 1 ] , 3 )"		8628605	1					
ANR	8629031	Callee	get_symbol2		8628605	0					
ANR	8629032	Identifier	get_symbol2		8628605	0					
ANR	8629033	ArgumentList	& s -> c		8628605	1					
ANR	8629034	Argument	& s -> c		8628605	0					
ANR	8629035	UnaryOperationExpression	& s -> c		8628605	0					
ANR	8629036	UnaryOperator	&		8628605	0					
ANR	8629037	PtrMemberAccess	s -> c		8628605	1					
ANR	8629038	Identifier	s		8628605	0					
ANR	8629039	Identifier	c		8628605	1					
ANR	8629040	Argument	b -> state [ 1 ]		8628605	1					
ANR	8629041	ArrayIndexing	b -> state [ 1 ]		8628605	0					
ANR	8629042	PtrMemberAccess	b -> state		8628605	0					
ANR	8629043	Identifier	b		8628605	0					
ANR	8629044	Identifier	state		8628605	1					
ANR	8629045	PrimaryExpression	1		8628605	1					
ANR	8629046	Argument	3		8628605	2					
ANR	8629047	PrimaryExpression	3		8628605	0					
ANR	8629048	ExpressionStatement	"v = 2 * ( get_symbol2 ( & s -> c , b -> state [ 0 + 2 ] , 0 - 4 ) + 1 )"	115:24:2054:2105	8628605	1	True				
ANR	8629049	AssignmentExpression	"v = 2 * ( get_symbol2 ( & s -> c , b -> state [ 0 + 2 ] , 0 - 4 ) + 1 )"		8628605	0		=			
ANR	8629050	Identifier	v		8628605	0					
ANR	8629051	MultiplicativeExpression	"2 * ( get_symbol2 ( & s -> c , b -> state [ 0 + 2 ] , 0 - 4 ) + 1 )"		8628605	1		*			
ANR	8629052	PrimaryExpression	2		8628605	0					
ANR	8629053	AdditiveExpression	"get_symbol2 ( & s -> c , b -> state [ 0 + 2 ] , 0 - 4 ) + 1"		8628605	1		+			
ANR	8629054	CallExpression	"get_symbol2 ( & s -> c , b -> state [ 0 + 2 ] , 0 - 4 )"		8628605	0					
ANR	8629055	Callee	get_symbol2		8628605	0					
ANR	8629056	Identifier	get_symbol2		8628605	0					
ANR	8629057	ArgumentList	& s -> c		8628605	1					
ANR	8629058	Argument	& s -> c		8628605	0					
ANR	8629059	UnaryOperationExpression	& s -> c		8628605	0					
ANR	8629060	UnaryOperator	&		8628605	0					
ANR	8629061	PtrMemberAccess	s -> c		8628605	1					
ANR	8629062	Identifier	s		8628605	0					
ANR	8629063	Identifier	c		8628605	1					
ANR	8629064	Argument	b -> state [ 0 + 2 ]		8628605	1					
ANR	8629065	ArrayIndexing	b -> state [ 0 + 2 ]		8628605	0					
ANR	8629066	PtrMemberAccess	b -> state		8628605	0					
ANR	8629067	Identifier	b		8628605	0					
ANR	8629068	Identifier	state		8628605	1					
ANR	8629069	AdditiveExpression	0 + 2		8628605	1		+			
ANR	8629070	PrimaryExpression	0		8628605	0					
ANR	8629071	PrimaryExpression	2		8628605	1					
ANR	8629072	Argument	0 - 4		8628605	2					
ANR	8629073	AdditiveExpression	0 - 4		8628605	0		-			
ANR	8629074	PrimaryExpression	0		8628605	0					
ANR	8629075	PrimaryExpression	4		8628605	1					
ANR	8629076	PrimaryExpression	1		8628605	1					
ANR	8629077	ExpressionStatement	"v += get_rac ( & s -> c , & b -> state [ 0 ] [ 16 + 1 + 3 ] )"	117:24:2132:2175	8628605	2	True				
ANR	8629078	AssignmentExpression	"v += get_rac ( & s -> c , & b -> state [ 0 ] [ 16 + 1 + 3 ] )"		8628605	0		+=			
ANR	8629079	Identifier	v		8628605	0					
ANR	8629080	CallExpression	"get_rac ( & s -> c , & b -> state [ 0 ] [ 16 + 1 + 3 ] )"		8628605	1					
ANR	8629081	Callee	get_rac		8628605	0					
ANR	8629082	Identifier	get_rac		8628605	0					
ANR	8629083	ArgumentList	& s -> c		8628605	1					
ANR	8629084	Argument	& s -> c		8628605	0					
ANR	8629085	UnaryOperationExpression	& s -> c		8628605	0					
ANR	8629086	UnaryOperator	&		8628605	0					
ANR	8629087	PtrMemberAccess	s -> c		8628605	1					
ANR	8629088	Identifier	s		8628605	0					
ANR	8629089	Identifier	c		8628605	1					
ANR	8629090	Argument	& b -> state [ 0 ] [ 16 + 1 + 3 ]		8628605	1					
ANR	8629091	UnaryOperationExpression	& b -> state [ 0 ] [ 16 + 1 + 3 ]		8628605	0					
ANR	8629092	UnaryOperator	&		8628605	0					
ANR	8629093	ArrayIndexing	b -> state [ 0 ] [ 16 + 1 + 3 ]		8628605	1					
ANR	8629094	ArrayIndexing	b -> state [ 0 ]		8628605	0					
ANR	8629095	PtrMemberAccess	b -> state		8628605	0					
ANR	8629096	Identifier	b		8628605	0					
ANR	8629097	Identifier	state		8628605	1					
ANR	8629098	PrimaryExpression	0		8628605	1					
ANR	8629099	AdditiveExpression	16 + 1 + 3		8628605	1		+			
ANR	8629100	PrimaryExpression	16		8628605	0					
ANR	8629101	AdditiveExpression	1 + 3		8628605	1		+			
ANR	8629102	PrimaryExpression	1		8628605	0					
ANR	8629103	PrimaryExpression	3		8628605	1					
ANR	8629104	ExpressionStatement	xc -> x = x	121:24:2228:2235	8628605	3	True				
ANR	8629105	AssignmentExpression	xc -> x = x		8628605	0		=			
ANR	8629106	PtrMemberAccess	xc -> x		8628605	0					
ANR	8629107	Identifier	xc		8628605	0					
ANR	8629108	Identifier	x		8628605	1					
ANR	8629109	Identifier	x		8628605	1					
ANR	8629110	ExpressionStatement	( xc ++ ) -> coeff = v	123:24:2262:2278	8628605	4	True				
ANR	8629111	AssignmentExpression	( xc ++ ) -> coeff = v		8628605	0		=			
ANR	8629112	PtrMemberAccess	( xc ++ ) -> coeff		8628605	0					
ANR	8629113	PostIncDecOperationExpression	xc ++		8628605	0					
ANR	8629114	Identifier	xc		8628605	0					
ANR	8629115	IncDec	++		8628605	1					
ANR	8629116	Identifier	coeff		8628605	1					
ANR	8629117	Identifier	v		8628605	1					
ANR	8629118	ElseStatement	else		8628605	0					
ANR	8629119	CompoundStatement		127:24:2237:2248	8628605	0					
ANR	8629120	IdentifierDeclStatement	int max_run ;	127:24:2333:2344	8628605	0	True				
ANR	8629121	IdentifierDecl	max_run		8628605	0					
ANR	8629122	IdentifierDeclType	int		8628605	0					
ANR	8629123	Identifier	max_run		8628605	1					
ANR	8629124	ExpressionStatement	run --	129:24:2371:2376	8628605	1	True				
ANR	8629125	PostIncDecOperationExpression	run --		8628605	0					
ANR	8629126	Identifier	run		8628605	0					
ANR	8629127	IncDec	--		8628605	1					
ANR	8629128	ExpressionStatement	v = 0	131:24:2403:2406	8628605	2	True				
ANR	8629129	AssignmentExpression	v = 0		8628605	0		=			
ANR	8629130	Identifier	v		8628605	0					
ANR	8629131	PrimaryExpression	0		8628605	1					
ANR	8629132	IfStatement	if ( y )		8628605	3					
ANR	8629133	Condition	y	135:27:2438:2438	8628605	0	True				
ANR	8629134	Identifier	y		8628605	0					
ANR	8629135	ExpressionStatement	"max_run = FFMIN ( run , prev_xc -> x - x - 2 )"	135:30:2441:2480	8628605	1	True				
ANR	8629136	AssignmentExpression	"max_run = FFMIN ( run , prev_xc -> x - x - 2 )"		8628605	0		=			
ANR	8629137	Identifier	max_run		8628605	0					
ANR	8629138	CallExpression	"FFMIN ( run , prev_xc -> x - x - 2 )"		8628605	1					
ANR	8629139	Callee	FFMIN		8628605	0					
ANR	8629140	Identifier	FFMIN		8628605	0					
ANR	8629141	ArgumentList	run		8628605	1					
ANR	8629142	Argument	run		8628605	0					
ANR	8629143	Identifier	run		8628605	0					
ANR	8629144	Argument	prev_xc -> x - x - 2		8628605	1					
ANR	8629145	AdditiveExpression	prev_xc -> x - x - 2		8628605	0		-			
ANR	8629146	PtrMemberAccess	prev_xc -> x		8628605	0					
ANR	8629147	Identifier	prev_xc		8628605	0					
ANR	8629148	Identifier	x		8628605	1					
ANR	8629149	AdditiveExpression	x - 2		8628605	1		-			
ANR	8629150	Identifier	x		8628605	0					
ANR	8629151	PrimaryExpression	2		8628605	1					
ANR	8629152	ElseStatement	else		8628605	0					
ANR	8629153	ExpressionStatement	"max_run = FFMIN ( run , w - x - 1 )"	137:30:2513:2539	8628605	0	True				
ANR	8629154	AssignmentExpression	"max_run = FFMIN ( run , w - x - 1 )"		8628605	0		=			
ANR	8629155	Identifier	max_run		8628605	0					
ANR	8629156	CallExpression	"FFMIN ( run , w - x - 1 )"		8628605	1					
ANR	8629157	Callee	FFMIN		8628605	0					
ANR	8629158	Identifier	FFMIN		8628605	0					
ANR	8629159	ArgumentList	run		8628605	1					
ANR	8629160	Argument	run		8628605	0					
ANR	8629161	Identifier	run		8628605	0					
ANR	8629162	Argument	w - x - 1		8628605	1					
ANR	8629163	AdditiveExpression	w - x - 1		8628605	0		-			
ANR	8629164	Identifier	w		8628605	0					
ANR	8629165	AdditiveExpression	x - 1		8628605	1		-			
ANR	8629166	Identifier	x		8628605	0					
ANR	8629167	PrimaryExpression	1		8628605	1					
ANR	8629168	IfStatement	if ( parent_xc )		8628605	4					
ANR	8629169	Condition	parent_xc	139:27:2569:2577	8628605	0	True				
ANR	8629170	Identifier	parent_xc		8628605	0					
ANR	8629171	ExpressionStatement	"max_run = FFMIN ( max_run , 2 * parent_xc -> x - x - 1 )"	141:28:2609:2656	8628605	1	True				
ANR	8629172	AssignmentExpression	"max_run = FFMIN ( max_run , 2 * parent_xc -> x - x - 1 )"		8628605	0		=			
ANR	8629173	Identifier	max_run		8628605	0					
ANR	8629174	CallExpression	"FFMIN ( max_run , 2 * parent_xc -> x - x - 1 )"		8628605	1					
ANR	8629175	Callee	FFMIN		8628605	0					
ANR	8629176	Identifier	FFMIN		8628605	0					
ANR	8629177	ArgumentList	max_run		8628605	1					
ANR	8629178	Argument	max_run		8628605	0					
ANR	8629179	Identifier	max_run		8628605	0					
ANR	8629180	Argument	2 * parent_xc -> x - x - 1		8628605	1					
ANR	8629181	AdditiveExpression	2 * parent_xc -> x - x - 1		8628605	0		-			
ANR	8629182	MultiplicativeExpression	2 * parent_xc -> x		8628605	0		*			
ANR	8629183	PrimaryExpression	2		8628605	0					
ANR	8629184	PtrMemberAccess	parent_xc -> x		8628605	1					
ANR	8629185	Identifier	parent_xc		8628605	0					
ANR	8629186	Identifier	x		8628605	1					
ANR	8629187	AdditiveExpression	x - 1		8628605	1		-			
ANR	8629188	Identifier	x		8628605	0					
ANR	8629189	PrimaryExpression	1		8628605	1					
ANR	8629190	ExpressionStatement	x += max_run	143:24:2683:2694	8628605	5	True				
ANR	8629191	AssignmentExpression	x += max_run		8628605	0		+=			
ANR	8629192	Identifier	x		8628605	0					
ANR	8629193	Identifier	max_run		8628605	1					
ANR	8629194	ExpressionStatement	run -= max_run	145:24:2721:2734	8628605	6	True				
ANR	8629195	AssignmentExpression	run -= max_run		8628605	0		-=			
ANR	8629196	Identifier	run		8628605	0					
ANR	8629197	Identifier	max_run		8628605	1					
ANR	8629198	ExpressionStatement	( xc ++ ) -> x = w + 1	153:12:2806:2820	8628605	4	True				
ANR	8629199	AssignmentExpression	( xc ++ ) -> x = w + 1		8628605	0		=			
ANR	8629200	PtrMemberAccess	( xc ++ ) -> x		8628605	0					
ANR	8629201	PostIncDecOperationExpression	xc ++		8628605	0					
ANR	8629202	Identifier	xc		8628605	0					
ANR	8629203	IncDec	++		8628605	1					
ANR	8629204	Identifier	x		8628605	1					
ANR	8629205	AdditiveExpression	w + 1		8628605	1		+			
ANR	8629206	Identifier	w		8628605	0					
ANR	8629207	PrimaryExpression	1		8628605	1					
ANR	8629208	ExpressionStatement	prev_xc = prev2_xc	155:12:2848:2865	8628605	5	True				
ANR	8629209	AssignmentExpression	prev_xc = prev2_xc		8628605	0		=			
ANR	8629210	Identifier	prev_xc		8628605	0					
ANR	8629211	Identifier	prev2_xc		8628605	1					
ANR	8629212	ExpressionStatement	prev2_xc = xc	157:12:2880:2892	8628605	6	True				
ANR	8629213	AssignmentExpression	prev2_xc = xc		8628605	0		=			
ANR	8629214	Identifier	prev2_xc		8628605	0					
ANR	8629215	Identifier	xc		8628605	1					
ANR	8629216	IfStatement	if ( parent_xc )		8628605	7					
ANR	8629217	Condition	parent_xc	161:15:2924:2932	8628605	0	True				
ANR	8629218	Identifier	parent_xc		8628605	0					
ANR	8629219	CompoundStatement		161:25:2838:2838	8628605	1					
ANR	8629220	IfStatement	if ( y & 1 )		8628605	0					
ANR	8629221	Condition	y & 1	163:19:2956:2958	8628605	0	True				
ANR	8629222	BitAndExpression	y & 1		8628605	0		&			
ANR	8629223	Identifier	y		8628605	0					
ANR	8629224	PrimaryExpression	1		8628605	1					
ANR	8629225	CompoundStatement		163:23:2864:2864	8628605	1					
ANR	8629226	WhileStatement	while ( parent_xc -> x != parent -> width + 1 )		8628605	0					
ANR	8629227	Condition	parent_xc -> x != parent -> width + 1	165:26:2989:3019	8628605	0	True				
ANR	8629228	EqualityExpression	parent_xc -> x != parent -> width + 1		8628605	0		!=			
ANR	8629229	PtrMemberAccess	parent_xc -> x		8628605	0					
ANR	8629230	Identifier	parent_xc		8628605	0					
ANR	8629231	Identifier	x		8628605	1					
ANR	8629232	AdditiveExpression	parent -> width + 1		8628605	1		+			
ANR	8629233	PtrMemberAccess	parent -> width		8628605	0					
ANR	8629234	Identifier	parent		8628605	0					
ANR	8629235	Identifier	width		8628605	1					
ANR	8629236	PrimaryExpression	1		8628605	1					
ANR	8629237	ExpressionStatement	parent_xc ++	167:24:3047:3058	8628605	1	True				
ANR	8629238	PostIncDecOperationExpression	parent_xc ++		8628605	0					
ANR	8629239	Identifier	parent_xc		8628605	0					
ANR	8629240	IncDec	++		8628605	1					
ANR	8629241	ExpressionStatement	parent_xc ++	169:20:3081:3092	8628605	1	True				
ANR	8629242	PostIncDecOperationExpression	parent_xc ++		8628605	0					
ANR	8629243	Identifier	parent_xc		8628605	0					
ANR	8629244	IncDec	++		8628605	1					
ANR	8629245	ExpressionStatement	prev_parent_xc = parent_xc	171:20:3115:3140	8628605	2	True				
ANR	8629246	AssignmentExpression	prev_parent_xc = parent_xc		8628605	0		=			
ANR	8629247	Identifier	prev_parent_xc		8628605	0					
ANR	8629248	Identifier	parent_xc		8628605	1					
ANR	8629249	ElseStatement	else		8628605	0					
ANR	8629250	CompoundStatement		173:21:3068:3068	8628605	0					
ANR	8629251	ExpressionStatement	parent_xc = prev_parent_xc	175:20:3187:3212	8628605	0	True				
ANR	8629252	AssignmentExpression	parent_xc = prev_parent_xc		8628605	0		=			
ANR	8629253	Identifier	parent_xc		8628605	0					
ANR	8629254	Identifier	prev_parent_xc		8628605	1					
ANR	8629255	ExpressionStatement	( xc ++ ) -> x = w + 1	185:8:3270:3284	8628605	8	True				
ANR	8629256	AssignmentExpression	( xc ++ ) -> x = w + 1		8628605	0		=			
ANR	8629257	PtrMemberAccess	( xc ++ ) -> x		8628605	0					
ANR	8629258	PostIncDecOperationExpression	xc ++		8628605	0					
ANR	8629259	Identifier	xc		8628605	0					
ANR	8629260	IncDec	++		8628605	1					
ANR	8629261	Identifier	x		8628605	1					
ANR	8629262	AdditiveExpression	w + 1		8628605	1		+			
ANR	8629263	Identifier	w		8628605	0					
ANR	8629264	PrimaryExpression	1		8628605	1					
ANR	8629265	ReturnType	static inline void		8628605	1					
ANR	8629266	Identifier	unpack_coeffs		8628605	2					
ANR	8629267	ParameterList	"SnowContext * s , SubBand * b , SubBand * parent , int orientation"		8628605	3					
ANR	8629268	Parameter	SnowContext * s	1:33:33:46	8628605	0	True				
ANR	8629269	ParameterType	SnowContext *		8628605	0					
ANR	8629270	Identifier	s		8628605	1					
ANR	8629271	Parameter	SubBand * b	1:49:49:58	8628605	1	True				
ANR	8629272	ParameterType	SubBand *		8628605	0					
ANR	8629273	Identifier	b		8628605	1					
ANR	8629274	Parameter	SubBand * parent	1:61:61:76	8628605	2	True				
ANR	8629275	ParameterType	SubBand *		8628605	0					
ANR	8629276	Identifier	parent		8628605	1					
ANR	8629277	Parameter	int orientation	1:79:79:93	8628605	3	True				
ANR	8629278	ParameterType	int		8628605	0					
ANR	8629279	Identifier	orientation		8628605	1					
ANR	8629280	CFGEntryNode	ENTRY		8628605		True				
ANR	8629281	CFGExitNode	EXIT		8628605		True				
ANR	8629282	Symbol	parent		8628605						
ANR	8629283	Symbol	* parent		8628605						
ANR	8629284	Symbol	lt		8628605						
ANR	8629285	Symbol	quant3bA		8628605						
ANR	8629286	Symbol	FFMIN		8628605						
ANR	8629287	Symbol	run		8628605						
ANR	8629288	Symbol	prev_xc -> x		8628605						
ANR	8629289	Symbol	parent -> width		8628605						
ANR	8629290	Symbol	parent_xc -> x		8628605						
ANR	8629291	Symbol	get_symbol2		8628605						
ANR	8629292	Symbol	context		8628605						
ANR	8629293	Symbol	prev_parent_xc		8628605						
ANR	8629294	Symbol	get_rac		8628605						
ANR	8629295	Symbol	NULL		8628605						
ANR	8629296	Symbol	* quant3bA		8628605						
ANR	8629297	Symbol	* * b		8628605						
ANR	8629298	Symbol	* context		8628605						
ANR	8629299	Symbol	* parent_xc		8628605						
ANR	8629300	Symbol	prev2_xc		8628605						
ANR	8629301	Symbol	& s -> c		8628605						
ANR	8629302	Symbol	* xc		8628605						
ANR	8629303	Symbol	av_log2		8628605						
ANR	8629304	Symbol	rt		8628605						
ANR	8629305	Symbol	parent_xc -> coeff		8628605						
ANR	8629306	Symbol	parent_xc		8628605						
ANR	8629307	Symbol	parent -> x_coeff		8628605						
ANR	8629308	Symbol	b -> state		8628605						
ANR	8629309	Symbol	prev_xc -> coeff		8628605						
ANR	8629310	Symbol	b -> width		8628605						
ANR	8629311	Symbol	b		8628605						
ANR	8629312	Symbol	orientation		8628605						
ANR	8629313	Symbol	max_run		8628605						
ANR	8629314	Symbol	h		8628605						
ANR	8629315	Symbol	b -> x_coeff		8628605						
ANR	8629316	Symbol	* prev_xc		8628605						
ANR	8629317	Symbol	xc		8628605						
ANR	8629318	Symbol	* b		8628605						
ANR	8629319	Symbol	l		8628605						
ANR	8629320	Symbol	xc -> x		8628605						
ANR	8629321	Symbol	p		8628605						
ANR	8629322	Symbol	b -> height		8628605						
ANR	8629323	Symbol	s		8628605						
ANR	8629324	Symbol	~1		8628605						
ANR	8629325	Symbol	t		8628605						
ANR	8629326	Symbol	* b -> state		8628605						
ANR	8629327	Symbol	v		8628605						
ANR	8629328	Symbol	* l		8628605						
ANR	8629329	Symbol	w		8628605						
ANR	8629330	Symbol	( xc ++ ) -> coeff		8628605						
ANR	8629331	Symbol	( xc ++ ) -> x		8628605						
ANR	8629332	Symbol	x		8628605						
ANR	8629333	Symbol	y		8628605						
ANR	8629334	Symbol	* t		8628605						
ANR	8629335	Symbol	prev_xc		8628605						
