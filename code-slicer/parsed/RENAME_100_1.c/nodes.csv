command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	144668	File	/home/p4ultr4n/workplace/ReVeal/raw_code/RENAME_100_1.c								
ANR	144669	Function	decode_line	1:0:0:2813							
ANR	144670	FunctionDef	"decode_line (FFV1Context * s , int w , TYPE * sample [ 2 ] , int plane_index , int bits)"		144669	0					
ANR	144671	CompoundStatement		7:0:217:2813	144669	0					
ANR	144672	Statement	PlaneContext	9:4:224:235	144669	0	True				
ANR	144673	Statement	*	9:17:237:237	144669	1	True				
ANR	144674	Statement	const	9:18:238:242	144669	2	True				
ANR	144675	ExpressionStatement	p = & s -> plane [ plane_index ]	9:24:244:270	144669	3	True				
ANR	144676	AssignmentExpression	p = & s -> plane [ plane_index ]		144669	0		=			
ANR	144677	Identifier	p		144669	0					
ANR	144678	UnaryOperationExpression	& s -> plane [ plane_index ]		144669	1					
ANR	144679	UnaryOperator	&		144669	0					
ANR	144680	ArrayIndexing	s -> plane [ plane_index ]		144669	1					
ANR	144681	PtrMemberAccess	s -> plane		144669	0					
ANR	144682	Identifier	s		144669	0					
ANR	144683	Identifier	plane		144669	1					
ANR	144684	Identifier	plane_index		144669	1					
ANR	144685	Statement	RangeCoder	11:4:277:286	144669	4	True				
ANR	144686	Statement	*	11:15:288:288	144669	5	True				
ANR	144687	Statement	const	11:16:289:293	144669	6	True				
ANR	144688	ExpressionStatement	c = & s -> c	11:22:295:306	144669	7	True				
ANR	144689	AssignmentExpression	c = & s -> c		144669	0		=			
ANR	144690	Identifier	c		144669	0					
ANR	144691	UnaryOperationExpression	& s -> c		144669	1					
ANR	144692	UnaryOperator	&		144669	0					
ANR	144693	PtrMemberAccess	s -> c		144669	1					
ANR	144694	Identifier	s		144669	0					
ANR	144695	Identifier	c		144669	1					
ANR	144696	IdentifierDeclStatement	int x ;	13:4:313:318	144669	8	True				
ANR	144697	IdentifierDecl	x		144669	0					
ANR	144698	IdentifierDeclType	int		144669	0					
ANR	144699	Identifier	x		144669	1					
ANR	144700	IdentifierDeclStatement	int run_count = 0 ;	15:4:325:342	144669	9	True				
ANR	144701	IdentifierDecl	run_count = 0		144669	0					
ANR	144702	IdentifierDeclType	int		144669	0					
ANR	144703	Identifier	run_count		144669	1					
ANR	144704	AssignmentExpression	run_count = 0		144669	2		=			
ANR	144705	Identifier	run_count		144669	0					
ANR	144706	PrimaryExpression	0		144669	1					
ANR	144707	IdentifierDeclStatement	int run_mode = 0 ;	17:4:349:366	144669	10	True				
ANR	144708	IdentifierDecl	run_mode = 0		144669	0					
ANR	144709	IdentifierDeclType	int		144669	0					
ANR	144710	Identifier	run_mode		144669	1					
ANR	144711	AssignmentExpression	run_mode = 0		144669	2		=			
ANR	144712	Identifier	run_mode		144669	0					
ANR	144713	PrimaryExpression	0		144669	1					
ANR	144714	IdentifierDeclStatement	int run_index = s -> run_index ;	19:4:373:401	144669	11	True				
ANR	144715	IdentifierDecl	run_index = s -> run_index		144669	0					
ANR	144716	IdentifierDeclType	int		144669	0					
ANR	144717	Identifier	run_index		144669	1					
ANR	144718	AssignmentExpression	run_index = s -> run_index		144669	2		=			
ANR	144719	Identifier	run_index		144669	0					
ANR	144720	PtrMemberAccess	s -> run_index		144669	1					
ANR	144721	Identifier	s		144669	0					
ANR	144722	Identifier	run_index		144669	1					
ANR	144723	IfStatement	if ( s -> slice_coding_mode == 1 )		144669	12					
ANR	144724	Condition	s -> slice_coding_mode == 1	23:8:414:438	144669	0	True				
ANR	144725	EqualityExpression	s -> slice_coding_mode == 1		144669	0		==			
ANR	144726	PtrMemberAccess	s -> slice_coding_mode		144669	0					
ANR	144727	Identifier	s		144669	0					
ANR	144728	Identifier	slice_coding_mode		144669	1					
ANR	144729	PrimaryExpression	1		144669	1					
ANR	144730	CompoundStatement		19:8:234:239	144669	1					
ANR	144731	IdentifierDeclStatement	int i ;	25:8:452:457	144669	0	True				
ANR	144732	IdentifierDecl	i		144669	0					
ANR	144733	IdentifierDeclType	int		144669	0					
ANR	144734	Identifier	i		144669	1					
ANR	144735	ForStatement	for ( x = 0 ; x < w ; x ++ )		144669	1					
ANR	144736	ForInit	x = 0 ;	27:13:473:478	144669	0	True				
ANR	144737	AssignmentExpression	x = 0		144669	0		=			
ANR	144738	Identifier	x		144669	0					
ANR	144739	PrimaryExpression	0		144669	1					
ANR	144740	Condition	x < w	27:20:480:484	144669	1	True				
ANR	144741	RelationalExpression	x < w		144669	0		<			
ANR	144742	Identifier	x		144669	0					
ANR	144743	Identifier	w		144669	1					
ANR	144744	PostIncDecOperationExpression	x ++	27:27:487:489	144669	2	True				
ANR	144745	Identifier	x		144669	0					
ANR	144746	IncDec	++		144669	1					
ANR	144747	CompoundStatement		23:12:289:298	144669	3					
ANR	144748	IdentifierDeclStatement	int v = 0 ;	29:12:507:516	144669	0	True				
ANR	144749	IdentifierDecl	v = 0		144669	0					
ANR	144750	IdentifierDeclType	int		144669	0					
ANR	144751	Identifier	v		144669	1					
ANR	144752	AssignmentExpression	v = 0		144669	2		=			
ANR	144753	Identifier	v		144669	0					
ANR	144754	PrimaryExpression	0		144669	1					
ANR	144755	ForStatement	for ( i = 0 ; i < bits ; i ++ )		144669	1					
ANR	144756	ForInit	i = 0 ;	31:17:536:539	144669	0	True				
ANR	144757	AssignmentExpression	i = 0		144669	0		=			
ANR	144758	Identifier	i		144669	0					
ANR	144759	PrimaryExpression	0		144669	1					
ANR	144760	Condition	i < bits	31:22:541:546	144669	1	True				
ANR	144761	RelationalExpression	i < bits		144669	0		<			
ANR	144762	Identifier	i		144669	0					
ANR	144763	Identifier	bits		144669	1					
ANR	144764	PostIncDecOperationExpression	i ++	31:30:549:551	144669	2	True				
ANR	144765	Identifier	i		144669	0					
ANR	144766	IncDec	++		144669	1					
ANR	144767	CompoundStatement		27:16:355:374	144669	3					
ANR	144768	IdentifierDeclStatement	uint8_t state = 128 ;	33:16:573:592	144669	0	True				
ANR	144769	IdentifierDecl	state = 128		144669	0					
ANR	144770	IdentifierDeclType	uint8_t		144669	0					
ANR	144771	Identifier	state		144669	1					
ANR	144772	AssignmentExpression	state = 128		144669	2		=			
ANR	144773	Identifier	state		144669	0					
ANR	144774	PrimaryExpression	128		144669	1					
ANR	144775	ExpressionStatement	"v += v + get_rac ( c , & state )"	35:16:611:638	144669	1	True				
ANR	144776	AssignmentExpression	"v += v + get_rac ( c , & state )"		144669	0		+=			
ANR	144777	Identifier	v		144669	0					
ANR	144778	AdditiveExpression	"v + get_rac ( c , & state )"		144669	1		+			
ANR	144779	Identifier	v		144669	0					
ANR	144780	CallExpression	"get_rac ( c , & state )"		144669	1					
ANR	144781	Callee	get_rac		144669	0					
ANR	144782	Identifier	get_rac		144669	0					
ANR	144783	ArgumentList	c		144669	1					
ANR	144784	Argument	c		144669	0					
ANR	144785	Identifier	c		144669	0					
ANR	144786	Argument	& state		144669	1					
ANR	144787	UnaryOperationExpression	& state		144669	0					
ANR	144788	UnaryOperator	&		144669	0					
ANR	144789	Identifier	state		144669	1					
ANR	144790	ExpressionStatement	sample [ 1 ] [ x ] = v	39:12:668:684	144669	2	True				
ANR	144791	AssignmentExpression	sample [ 1 ] [ x ] = v		144669	0		=			
ANR	144792	ArrayIndexing	sample [ 1 ] [ x ]		144669	0					
ANR	144793	ArrayIndexing	sample [ 1 ]		144669	0					
ANR	144794	Identifier	sample		144669	0					
ANR	144795	PrimaryExpression	1		144669	1					
ANR	144796	Identifier	x		144669	1					
ANR	144797	Identifier	v		144669	1					
ANR	144798	ReturnStatement	return ;	43:8:706:712	144669	2	True				
ANR	144799	ForStatement	for ( x = 0 ; x < w ; x ++ )		144669	13					
ANR	144800	ForInit	x = 0 ;	49:9:733:738	144669	0	True				
ANR	144801	AssignmentExpression	x = 0		144669	0		=			
ANR	144802	Identifier	x		144669	0					
ANR	144803	PrimaryExpression	0		144669	1					
ANR	144804	Condition	x < w	49:16:740:744	144669	1	True				
ANR	144805	RelationalExpression	x < w		144669	0		<			
ANR	144806	Identifier	x		144669	0					
ANR	144807	Identifier	w		144669	1					
ANR	144808	PostIncDecOperationExpression	x ++	49:23:747:749	144669	2	True				
ANR	144809	Identifier	x		144669	0					
ANR	144810	IncDec	++		144669	1					
ANR	144811	CompoundStatement		45:8:545:568	144669	3					
ANR	144812	IdentifierDeclStatement	"int diff , context , sign ;"	51:8:763:786	144669	0	True				
ANR	144813	IdentifierDecl	diff		144669	0					
ANR	144814	IdentifierDeclType	int		144669	0					
ANR	144815	Identifier	diff		144669	1					
ANR	144816	IdentifierDecl	context		144669	1					
ANR	144817	IdentifierDeclType	int		144669	0					
ANR	144818	Identifier	context		144669	1					
ANR	144819	IdentifierDecl	sign		144669	2					
ANR	144820	IdentifierDeclType	int		144669	0					
ANR	144821	Identifier	sign		144669	1					
ANR	144822	ExpressionStatement	"context = RENAME ( get_context ) ( p , sample [ 1 ] + x , sample [ 0 ] + x , sample [ 1 ] + x )"	55:8:799:876	144669	1	True				
ANR	144823	AssignmentExpression	"context = RENAME ( get_context ) ( p , sample [ 1 ] + x , sample [ 0 ] + x , sample [ 1 ] + x )"		144669	0		=			
ANR	144824	Identifier	context		144669	0					
ANR	144825	CallExpression	"RENAME ( get_context ) ( p , sample [ 1 ] + x , sample [ 0 ] + x , sample [ 1 ] + x )"		144669	1					
ANR	144826	Callee	RENAME ( get_context )		144669	0					
ANR	144827	CallExpression	RENAME ( get_context )		144669	0					
ANR	144828	Callee	RENAME		144669	0					
ANR	144829	Identifier	RENAME		144669	0					
ANR	144830	ArgumentList	get_context		144669	1					
ANR	144831	Argument	get_context		144669	0					
ANR	144832	Identifier	get_context		144669	0					
ANR	144833	ArgumentList	p		144669	1					
ANR	144834	Argument	p		144669	0					
ANR	144835	Identifier	p		144669	0					
ANR	144836	Argument	sample [ 1 ] + x		144669	1					
ANR	144837	AdditiveExpression	sample [ 1 ] + x		144669	0		+			
ANR	144838	ArrayIndexing	sample [ 1 ]		144669	0					
ANR	144839	Identifier	sample		144669	0					
ANR	144840	PrimaryExpression	1		144669	1					
ANR	144841	Identifier	x		144669	1					
ANR	144842	Argument	sample [ 0 ] + x		144669	2					
ANR	144843	AdditiveExpression	sample [ 0 ] + x		144669	0		+			
ANR	144844	ArrayIndexing	sample [ 0 ]		144669	0					
ANR	144845	Identifier	sample		144669	0					
ANR	144846	PrimaryExpression	0		144669	1					
ANR	144847	Identifier	x		144669	1					
ANR	144848	Argument	sample [ 1 ] + x		144669	3					
ANR	144849	AdditiveExpression	sample [ 1 ] + x		144669	0		+			
ANR	144850	ArrayIndexing	sample [ 1 ]		144669	0					
ANR	144851	Identifier	sample		144669	0					
ANR	144852	PrimaryExpression	1		144669	1					
ANR	144853	Identifier	x		144669	1					
ANR	144854	IfStatement	if ( context < 0 )		144669	2					
ANR	144855	Condition	context < 0	57:12:891:901	144669	0	True				
ANR	144856	RelationalExpression	context < 0		144669	0		<			
ANR	144857	Identifier	context		144669	0					
ANR	144858	PrimaryExpression	0		144669	1					
ANR	144859	CompoundStatement		51:25:686:686	144669	1					
ANR	144860	ExpressionStatement	context = - context	59:12:919:937	144669	0	True				
ANR	144861	AssignmentExpression	context = - context		144669	0		=			
ANR	144862	Identifier	context		144669	0					
ANR	144863	UnaryOperationExpression	- context		144669	1					
ANR	144864	UnaryOperator	-		144669	0					
ANR	144865	Identifier	context		144669	1					
ANR	144866	ExpressionStatement	sign = 1	61:12:952:963	144669	1	True				
ANR	144867	AssignmentExpression	sign = 1		144669	0		=			
ANR	144868	Identifier	sign		144669	0					
ANR	144869	PrimaryExpression	1		144669	1					
ANR	144870	ElseStatement	else		144669	0					
ANR	144871	ExpressionStatement	sign = 0	65:12:994:1002	144669	0	True				
ANR	144872	AssignmentExpression	sign = 0		144669	0		=			
ANR	144873	Identifier	sign		144669	0					
ANR	144874	PrimaryExpression	0		144669	1					
ANR	144875	ExpressionStatement	av_assert2 ( context < p -> context_count )	69:8:1015:1053	144669	3	True				
ANR	144876	CallExpression	av_assert2 ( context < p -> context_count )		144669	0					
ANR	144877	Callee	av_assert2		144669	0					
ANR	144878	Identifier	av_assert2		144669	0					
ANR	144879	ArgumentList	context < p -> context_count		144669	1					
ANR	144880	Argument	context < p -> context_count		144669	0					
ANR	144881	RelationalExpression	context < p -> context_count		144669	0		<			
ANR	144882	Identifier	context		144669	0					
ANR	144883	PtrMemberAccess	p -> context_count		144669	1					
ANR	144884	Identifier	p		144669	0					
ANR	144885	Identifier	context_count		144669	1					
ANR	144886	IfStatement	if ( s -> ac != AC_GOLOMB_RICE )		144669	4					
ANR	144887	Condition	s -> ac != AC_GOLOMB_RICE	73:12:1070:1092	144669	0	True				
ANR	144888	EqualityExpression	s -> ac != AC_GOLOMB_RICE		144669	0		!=			
ANR	144889	PtrMemberAccess	s -> ac		144669	0					
ANR	144890	Identifier	s		144669	0					
ANR	144891	Identifier	ac		144669	1					
ANR	144892	Identifier	AC_GOLOMB_RICE		144669	1					
ANR	144893	CompoundStatement		67:37:877:877	144669	1					
ANR	144894	ExpressionStatement	"diff = get_symbol_inline ( c , p -> state [ context ] , 1 )"	75:12:1110:1159	144669	0	True				
ANR	144895	AssignmentExpression	"diff = get_symbol_inline ( c , p -> state [ context ] , 1 )"		144669	0		=			
ANR	144896	Identifier	diff		144669	0					
ANR	144897	CallExpression	"get_symbol_inline ( c , p -> state [ context ] , 1 )"		144669	1					
ANR	144898	Callee	get_symbol_inline		144669	0					
ANR	144899	Identifier	get_symbol_inline		144669	0					
ANR	144900	ArgumentList	c		144669	1					
ANR	144901	Argument	c		144669	0					
ANR	144902	Identifier	c		144669	0					
ANR	144903	Argument	p -> state [ context ]		144669	1					
ANR	144904	ArrayIndexing	p -> state [ context ]		144669	0					
ANR	144905	PtrMemberAccess	p -> state		144669	0					
ANR	144906	Identifier	p		144669	0					
ANR	144907	Identifier	state		144669	1					
ANR	144908	Identifier	context		144669	1					
ANR	144909	Argument	1		144669	2					
ANR	144910	PrimaryExpression	1		144669	0					
ANR	144911	ElseStatement	else		144669	0					
ANR	144912	CompoundStatement		71:15:959:959	144669	0					
ANR	144913	IfStatement	if ( context == 0 && run_mode == 0 )		144669	0					
ANR	144914	Condition	context == 0 && run_mode == 0	79:16:1196:1224	144669	0	True				
ANR	144915	AndExpression	context == 0 && run_mode == 0		144669	0		&&			
ANR	144916	EqualityExpression	context == 0		144669	0		==			
ANR	144917	Identifier	context		144669	0					
ANR	144918	PrimaryExpression	0		144669	1					
ANR	144919	EqualityExpression	run_mode == 0		144669	1		==			
ANR	144920	Identifier	run_mode		144669	0					
ANR	144921	PrimaryExpression	0		144669	1					
ANR	144922	ExpressionStatement	run_mode = 1	81:16:1244:1256	144669	1	True				
ANR	144923	AssignmentExpression	run_mode = 1		144669	0		=			
ANR	144924	Identifier	run_mode		144669	0					
ANR	144925	PrimaryExpression	1		144669	1					
ANR	144926	IfStatement	if ( run_mode )		144669	1					
ANR	144927	Condition	run_mode	85:16:1277:1284	144669	0	True				
ANR	144928	Identifier	run_mode		144669	0					
ANR	144929	CompoundStatement		79:26:1069:1069	144669	1					
ANR	144930	IfStatement	if ( run_count == 0 && run_mode == 1 )		144669	0					
ANR	144931	Condition	run_count == 0 && run_mode == 1	87:20:1310:1340	144669	0	True				
ANR	144932	AndExpression	run_count == 0 && run_mode == 1		144669	0		&&			
ANR	144933	EqualityExpression	run_count == 0		144669	0		==			
ANR	144934	Identifier	run_count		144669	0					
ANR	144935	PrimaryExpression	0		144669	1					
ANR	144936	EqualityExpression	run_mode == 1		144669	1		==			
ANR	144937	Identifier	run_mode		144669	0					
ANR	144938	PrimaryExpression	1		144669	1					
ANR	144939	CompoundStatement		81:53:1125:1125	144669	1					
ANR	144940	IfStatement	if ( get_bits1 ( & s -> gb ) )		144669	0					
ANR	144941	Condition	get_bits1 ( & s -> gb )	89:24:1370:1386	144669	0	True				
ANR	144942	CallExpression	get_bits1 ( & s -> gb )		144669	0					
ANR	144943	Callee	get_bits1		144669	0					
ANR	144944	Identifier	get_bits1		144669	0					
ANR	144945	ArgumentList	& s -> gb		144669	1					
ANR	144946	Argument	& s -> gb		144669	0					
ANR	144947	UnaryOperationExpression	& s -> gb		144669	0					
ANR	144948	UnaryOperator	&		144669	0					
ANR	144949	PtrMemberAccess	s -> gb		144669	1					
ANR	144950	Identifier	s		144669	0					
ANR	144951	Identifier	gb		144669	1					
ANR	144952	CompoundStatement		83:43:1171:1171	144669	1					
ANR	144953	ExpressionStatement	run_count = 1 << ff_log2_run [ run_index ]	91:24:1416:1455	144669	0	True				
ANR	144954	AssignmentExpression	run_count = 1 << ff_log2_run [ run_index ]		144669	0		=			
ANR	144955	Identifier	run_count		144669	0					
ANR	144956	ShiftExpression	1 << ff_log2_run [ run_index ]		144669	1		<<			
ANR	144957	PrimaryExpression	1		144669	0					
ANR	144958	ArrayIndexing	ff_log2_run [ run_index ]		144669	1					
ANR	144959	Identifier	ff_log2_run		144669	0					
ANR	144960	Identifier	run_index		144669	1					
ANR	144961	IfStatement	if ( x + run_count <= w )		144669	1					
ANR	144962	Condition	x + run_count <= w	93:28:1486:1503	144669	0	True				
ANR	144963	RelationalExpression	x + run_count <= w		144669	0		<=			
ANR	144964	AdditiveExpression	x + run_count		144669	0		+			
ANR	144965	Identifier	x		144669	0					
ANR	144966	Identifier	run_count		144669	1					
ANR	144967	Identifier	w		144669	1					
ANR	144968	ExpressionStatement	run_index ++	95:28:1535:1546	144669	1	True				
ANR	144969	PostIncDecOperationExpression	run_index ++		144669	0					
ANR	144970	Identifier	run_index		144669	0					
ANR	144971	IncDec	++		144669	1					
ANR	144972	ElseStatement	else		144669	0					
ANR	144973	CompoundStatement		91:27:1358:1358	144669	0					
ANR	144974	IfStatement	if ( ff_log2_run [ run_index ] )		144669	0					
ANR	144975	Condition	ff_log2_run [ run_index ]	99:28:1607:1628	144669	0	True				
ANR	144976	ArrayIndexing	ff_log2_run [ run_index ]		144669	0					
ANR	144977	Identifier	ff_log2_run		144669	0					
ANR	144978	Identifier	run_index		144669	1					
ANR	144979	ExpressionStatement	"run_count = get_bits ( & s -> gb , ff_log2_run [ run_index ] )"	101:28:1660:1712	144669	1	True				
ANR	144980	AssignmentExpression	"run_count = get_bits ( & s -> gb , ff_log2_run [ run_index ] )"		144669	0		=			
ANR	144981	Identifier	run_count		144669	0					
ANR	144982	CallExpression	"get_bits ( & s -> gb , ff_log2_run [ run_index ] )"		144669	1					
ANR	144983	Callee	get_bits		144669	0					
ANR	144984	Identifier	get_bits		144669	0					
ANR	144985	ArgumentList	& s -> gb		144669	1					
ANR	144986	Argument	& s -> gb		144669	0					
ANR	144987	UnaryOperationExpression	& s -> gb		144669	0					
ANR	144988	UnaryOperator	&		144669	0					
ANR	144989	PtrMemberAccess	s -> gb		144669	1					
ANR	144990	Identifier	s		144669	0					
ANR	144991	Identifier	gb		144669	1					
ANR	144992	Argument	ff_log2_run [ run_index ]		144669	1					
ANR	144993	ArrayIndexing	ff_log2_run [ run_index ]		144669	0					
ANR	144994	Identifier	ff_log2_run		144669	0					
ANR	144995	Identifier	run_index		144669	1					
ANR	144996	ElseStatement	else		144669	0					
ANR	144997	ExpressionStatement	run_count = 0	105:28:1773:1786	144669	0	True				
ANR	144998	AssignmentExpression	run_count = 0		144669	0		=			
ANR	144999	Identifier	run_count		144669	0					
ANR	145000	PrimaryExpression	0		144669	1					
ANR	145001	IfStatement	if ( run_index )		144669	1					
ANR	145002	Condition	run_index	107:28:1817:1825	144669	0	True				
ANR	145003	Identifier	run_index		144669	0					
ANR	145004	ExpressionStatement	run_index --	109:28:1857:1868	144669	1	True				
ANR	145005	PostIncDecOperationExpression	run_index --		144669	0					
ANR	145006	Identifier	run_index		144669	0					
ANR	145007	IncDec	--		144669	1					
ANR	145008	ExpressionStatement	run_mode = 2	111:24:1895:1907	144669	2	True				
ANR	145009	AssignmentExpression	run_mode = 2		144669	0		=			
ANR	145010	Identifier	run_mode		144669	0					
ANR	145011	PrimaryExpression	2		144669	1					
ANR	145012	ExpressionStatement	run_count --	117:16:1968:1979	144669	1	True				
ANR	145013	PostIncDecOperationExpression	run_count --		144669	0					
ANR	145014	Identifier	run_count		144669	0					
ANR	145015	IncDec	--		144669	1					
ANR	145016	IfStatement	if ( run_count < 0 )		144669	2					
ANR	145017	Condition	run_count < 0	119:20:2002:2014	144669	0	True				
ANR	145018	RelationalExpression	run_count < 0		144669	0		<			
ANR	145019	Identifier	run_count		144669	0					
ANR	145020	PrimaryExpression	0		144669	1					
ANR	145021	CompoundStatement		113:35:1799:1799	144669	1					
ANR	145022	ExpressionStatement	run_mode = 0	121:20:2040:2053	144669	0	True				
ANR	145023	AssignmentExpression	run_mode = 0		144669	0		=			
ANR	145024	Identifier	run_mode		144669	0					
ANR	145025	PrimaryExpression	0		144669	1					
ANR	145026	ExpressionStatement	run_count = 0	123:20:2076:2089	144669	1	True				
ANR	145027	AssignmentExpression	run_count = 0		144669	0		=			
ANR	145028	Identifier	run_count		144669	0					
ANR	145029	PrimaryExpression	0		144669	1					
ANR	145030	ExpressionStatement	"diff = get_vlc_symbol ( & s -> gb , & p -> vlc_state [ context ] , bits )"	125:20:2112:2224	144669	2	True				
ANR	145031	AssignmentExpression	"diff = get_vlc_symbol ( & s -> gb , & p -> vlc_state [ context ] , bits )"		144669	0		=			
ANR	145032	Identifier	diff		144669	0					
ANR	145033	CallExpression	"get_vlc_symbol ( & s -> gb , & p -> vlc_state [ context ] , bits )"		144669	1					
ANR	145034	Callee	get_vlc_symbol		144669	0					
ANR	145035	Identifier	get_vlc_symbol		144669	0					
ANR	145036	ArgumentList	& s -> gb		144669	1					
ANR	145037	Argument	& s -> gb		144669	0					
ANR	145038	UnaryOperationExpression	& s -> gb		144669	0					
ANR	145039	UnaryOperator	&		144669	0					
ANR	145040	PtrMemberAccess	s -> gb		144669	1					
ANR	145041	Identifier	s		144669	0					
ANR	145042	Identifier	gb		144669	1					
ANR	145043	Argument	& p -> vlc_state [ context ]		144669	1					
ANR	145044	UnaryOperationExpression	& p -> vlc_state [ context ]		144669	0					
ANR	145045	UnaryOperator	&		144669	0					
ANR	145046	ArrayIndexing	p -> vlc_state [ context ]		144669	1					
ANR	145047	PtrMemberAccess	p -> vlc_state		144669	0					
ANR	145048	Identifier	p		144669	0					
ANR	145049	Identifier	vlc_state		144669	1					
ANR	145050	Identifier	context		144669	1					
ANR	145051	Argument	bits		144669	2					
ANR	145052	Identifier	bits		144669	0					
ANR	145053	IfStatement	if ( diff >= 0 )		144669	3					
ANR	145054	Condition	diff >= 0	129:24:2251:2259	144669	0	True				
ANR	145055	RelationalExpression	diff >= 0		144669	0		>=			
ANR	145056	Identifier	diff		144669	0					
ANR	145057	PrimaryExpression	0		144669	1					
ANR	145058	ExpressionStatement	diff ++	131:24:2287:2293	144669	1	True				
ANR	145059	PostIncDecOperationExpression	diff ++		144669	0					
ANR	145060	Identifier	diff		144669	0					
ANR	145061	IncDec	++		144669	1					
ANR	145062	ElseStatement	else		144669	0					
ANR	145063	ExpressionStatement	diff = 0	135:20:2340:2348	144669	0	True				
ANR	145064	AssignmentExpression	diff = 0		144669	0		=			
ANR	145065	Identifier	diff		144669	0					
ANR	145066	PrimaryExpression	0		144669	1					
ANR	145067	ElseStatement	else		144669	0					
ANR	145068	ExpressionStatement	"diff = get_vlc_symbol ( & s -> gb , & p -> vlc_state [ context ] , bits )"	139:16:2387:2446	144669	0	True				
ANR	145069	AssignmentExpression	"diff = get_vlc_symbol ( & s -> gb , & p -> vlc_state [ context ] , bits )"		144669	0		=			
ANR	145070	Identifier	diff		144669	0					
ANR	145071	CallExpression	"get_vlc_symbol ( & s -> gb , & p -> vlc_state [ context ] , bits )"		144669	1					
ANR	145072	Callee	get_vlc_symbol		144669	0					
ANR	145073	Identifier	get_vlc_symbol		144669	0					
ANR	145074	ArgumentList	& s -> gb		144669	1					
ANR	145075	Argument	& s -> gb		144669	0					
ANR	145076	UnaryOperationExpression	& s -> gb		144669	0					
ANR	145077	UnaryOperator	&		144669	0					
ANR	145078	PtrMemberAccess	s -> gb		144669	1					
ANR	145079	Identifier	s		144669	0					
ANR	145080	Identifier	gb		144669	1					
ANR	145081	Argument	& p -> vlc_state [ context ]		144669	1					
ANR	145082	UnaryOperationExpression	& p -> vlc_state [ context ]		144669	0					
ANR	145083	UnaryOperator	&		144669	0					
ANR	145084	ArrayIndexing	p -> vlc_state [ context ]		144669	1					
ANR	145085	PtrMemberAccess	p -> vlc_state		144669	0					
ANR	145086	Identifier	p		144669	0					
ANR	145087	Identifier	vlc_state		144669	1					
ANR	145088	Identifier	context		144669	1					
ANR	145089	Argument	bits		144669	2					
ANR	145090	Identifier	bits		144669	0					
ANR	145091	ExpressionStatement	"ff_dlog ( s -> avctx , ""count:%d index:%d, mode:%d, x:%d pos:%d\\n"" , run_count , run_index , run_mode , x , get_bits_count ( & s -> gb ) )"	143:12:2463:2605	144669	2	True				
ANR	145092	CallExpression	"ff_dlog ( s -> avctx , ""count:%d index:%d, mode:%d, x:%d pos:%d\\n"" , run_count , run_index , run_mode , x , get_bits_count ( & s -> gb ) )"		144669	0					
ANR	145093	Callee	ff_dlog		144669	0					
ANR	145094	Identifier	ff_dlog		144669	0					
ANR	145095	ArgumentList	s -> avctx		144669	1					
ANR	145096	Argument	s -> avctx		144669	0					
ANR	145097	PtrMemberAccess	s -> avctx		144669	0					
ANR	145098	Identifier	s		144669	0					
ANR	145099	Identifier	avctx		144669	1					
ANR	145100	Argument	"""count:%d index:%d, mode:%d, x:%d pos:%d\\n"""		144669	1					
ANR	145101	PrimaryExpression	"""count:%d index:%d, mode:%d, x:%d pos:%d\\n"""		144669	0					
ANR	145102	Argument	run_count		144669	2					
ANR	145103	Identifier	run_count		144669	0					
ANR	145104	Argument	run_index		144669	3					
ANR	145105	Identifier	run_index		144669	0					
ANR	145106	Argument	run_mode		144669	4					
ANR	145107	Identifier	run_mode		144669	0					
ANR	145108	Argument	x		144669	5					
ANR	145109	Identifier	x		144669	0					
ANR	145110	Argument	get_bits_count ( & s -> gb )		144669	6					
ANR	145111	CallExpression	get_bits_count ( & s -> gb )		144669	0					
ANR	145112	Callee	get_bits_count		144669	0					
ANR	145113	Identifier	get_bits_count		144669	0					
ANR	145114	ArgumentList	& s -> gb		144669	1					
ANR	145115	Argument	& s -> gb		144669	0					
ANR	145116	UnaryOperationExpression	& s -> gb		144669	0					
ANR	145117	UnaryOperator	&		144669	0					
ANR	145118	PtrMemberAccess	s -> gb		144669	1					
ANR	145119	Identifier	s		144669	0					
ANR	145120	Identifier	gb		144669	1					
ANR	145121	IfStatement	if ( sign )		144669	5					
ANR	145122	Condition	sign	151:12:2633:2636	144669	0	True				
ANR	145123	Identifier	sign		144669	0					
ANR	145124	ExpressionStatement	diff = - diff	153:12:2652:2664	144669	1	True				
ANR	145125	AssignmentExpression	diff = - diff		144669	0		=			
ANR	145126	Identifier	diff		144669	0					
ANR	145127	UnaryOperationExpression	- diff		144669	1					
ANR	145128	UnaryOperator	-		144669	0					
ANR	145129	Identifier	diff		144669	1					
ANR	145130	ExpressionStatement	"sample [ 1 ] [ x ] = av_mod_uintp2 ( RENAME ( predict ) ( sample [ 1 ] + x , sample [ 0 ] + x ) + ( SUINT ) diff , bits )"	157:8:2677:2772	144669	6	True				
ANR	145131	AssignmentExpression	"sample [ 1 ] [ x ] = av_mod_uintp2 ( RENAME ( predict ) ( sample [ 1 ] + x , sample [ 0 ] + x ) + ( SUINT ) diff , bits )"		144669	0		=			
ANR	145132	ArrayIndexing	sample [ 1 ] [ x ]		144669	0					
ANR	145133	ArrayIndexing	sample [ 1 ]		144669	0					
ANR	145134	Identifier	sample		144669	0					
ANR	145135	PrimaryExpression	1		144669	1					
ANR	145136	Identifier	x		144669	1					
ANR	145137	CallExpression	"av_mod_uintp2 ( RENAME ( predict ) ( sample [ 1 ] + x , sample [ 0 ] + x ) + ( SUINT ) diff , bits )"		144669	1					
ANR	145138	Callee	av_mod_uintp2		144669	0					
ANR	145139	Identifier	av_mod_uintp2		144669	0					
ANR	145140	ArgumentList	"RENAME ( predict ) ( sample [ 1 ] + x , sample [ 0 ] + x ) + ( SUINT ) diff"		144669	1					
ANR	145141	Argument	"RENAME ( predict ) ( sample [ 1 ] + x , sample [ 0 ] + x ) + ( SUINT ) diff"		144669	0					
ANR	145142	AdditiveExpression	"RENAME ( predict ) ( sample [ 1 ] + x , sample [ 0 ] + x ) + ( SUINT ) diff"		144669	0		+			
ANR	145143	CallExpression	"RENAME ( predict ) ( sample [ 1 ] + x , sample [ 0 ] + x )"		144669	0					
ANR	145144	Callee	RENAME ( predict )		144669	0					
ANR	145145	CallExpression	RENAME ( predict )		144669	0					
ANR	145146	Callee	RENAME		144669	0					
ANR	145147	Identifier	RENAME		144669	0					
ANR	145148	ArgumentList	predict		144669	1					
ANR	145149	Argument	predict		144669	0					
ANR	145150	Identifier	predict		144669	0					
ANR	145151	ArgumentList	sample [ 1 ] + x		144669	1					
ANR	145152	Argument	sample [ 1 ] + x		144669	0					
ANR	145153	AdditiveExpression	sample [ 1 ] + x		144669	0		+			
ANR	145154	ArrayIndexing	sample [ 1 ]		144669	0					
ANR	145155	Identifier	sample		144669	0					
ANR	145156	PrimaryExpression	1		144669	1					
ANR	145157	Identifier	x		144669	1					
ANR	145158	Argument	sample [ 0 ] + x		144669	1					
ANR	145159	AdditiveExpression	sample [ 0 ] + x		144669	0		+			
ANR	145160	ArrayIndexing	sample [ 0 ]		144669	0					
ANR	145161	Identifier	sample		144669	0					
ANR	145162	PrimaryExpression	0		144669	1					
ANR	145163	Identifier	x		144669	1					
ANR	145164	CastExpression	( SUINT ) diff		144669	1					
ANR	145165	CastTarget	SUINT		144669	0					
ANR	145166	Identifier	diff		144669	1					
ANR	145167	Argument	bits		144669	1					
ANR	145168	Identifier	bits		144669	0					
ANR	145169	ExpressionStatement	s -> run_index = run_index	161:4:2786:2810	144669	14	True				
ANR	145170	AssignmentExpression	s -> run_index = run_index		144669	0		=			
ANR	145171	PtrMemberAccess	s -> run_index		144669	0					
ANR	145172	Identifier	s		144669	0					
ANR	145173	Identifier	run_index		144669	1					
ANR	145174	Identifier	run_index		144669	1					
ANR	145175	ReturnType	static av_always_inline void RENAME		144669	1					
ANR	145176	Identifier	( decode_line )		144669	2					
ANR	145177	Identifier	decode_line		144669	3					
ANR	145178	ParameterList	"FFV1Context * s , int w , TYPE * sample [ 2 ] , int plane_index , int bits"		144669	4					
ANR	145179	Parameter	FFV1Context * s	1:49:49:62	144669	0	True				
ANR	145180	ParameterType	FFV1Context *		144669	0					
ANR	145181	Identifier	s		144669	1					
ANR	145182	Parameter	int w	1:65:65:69	144669	1	True				
ANR	145183	ParameterType	int		144669	0					
ANR	145184	Identifier	w		144669	1					
ANR	145185	Parameter	TYPE * sample [ 2 ]	3:49:122:136	144669	2	True				
ANR	145186	ParameterType	TYPE * [ 2 ]		144669	0					
ANR	145187	Identifier	sample		144669	1					
ANR	145188	Parameter	int plane_index	5:49:189:203	144669	3	True				
ANR	145189	ParameterType	int		144669	0					
ANR	145190	Identifier	plane_index		144669	1					
ANR	145191	Parameter	int bits	5:66:206:213	144669	4	True				
ANR	145192	ParameterType	int		144669	0					
ANR	145193	Identifier	bits		144669	1					
ANR	145194	CFGEntryNode	ENTRY		144669		True				
ANR	145195	CFGExitNode	EXIT		144669		True				
ANR	145196	Symbol	get_context		144669						
ANR	145197	Symbol	* x		144669						
ANR	145198	Symbol	get_bits		144669						
ANR	145199	Symbol	sign		144669						
ANR	145200	Symbol	plane_index		144669						
ANR	145201	Symbol	* * sample		144669						
ANR	145202	Symbol	get_symbol_inline		144669						
ANR	145203	Symbol	get_vlc_symbol		144669						
ANR	145204	Symbol	ff_log2_run		144669						
ANR	145205	Symbol	context		144669						
ANR	145206	Symbol	s -> ac		144669						
ANR	145207	Symbol	state		144669						
ANR	145208	Symbol	av_mod_uintp2		144669						
ANR	145209	Symbol	* ff_log2_run		144669						
ANR	145210	Symbol	get_rac		144669						
ANR	145211	Symbol	get_bits1		144669						
ANR	145212	Symbol	bits		144669						
ANR	145213	Symbol	diff		144669						
ANR	145214	Symbol	get_bits_count		144669						
ANR	145215	Symbol	* context		144669						
ANR	145216	Symbol	p -> vlc_state		144669						
ANR	145217	Symbol	* p -> state		144669						
ANR	145218	Symbol	& s -> gb		144669						
ANR	145219	Symbol	& s -> c		144669						
ANR	145220	Symbol	* run_index		144669						
ANR	145221	Symbol	s -> avctx		144669						
ANR	145222	Symbol	p -> state		144669						
ANR	145223	Symbol	& state		144669						
ANR	145224	Symbol	s -> run_index		144669						
ANR	145225	Symbol	run_count		144669						
ANR	145226	Symbol	s -> slice_coding_mode		144669						
ANR	145227	Symbol	predict		144669						
ANR	145228	Symbol	* * p		144669						
ANR	145229	Symbol	s -> plane		144669						
ANR	145230	Symbol	* sample		144669						
ANR	145231	Symbol	RENAME		144669						
ANR	145232	Symbol	c		144669						
ANR	145233	Symbol	i		144669						
ANR	145234	Symbol	sample		144669						
ANR	145235	Symbol	p		144669						
ANR	145236	Symbol	p -> context_count		144669						
ANR	145237	Symbol	s		144669						
ANR	145238	Symbol	run_mode		144669						
ANR	145239	Symbol	v		144669						
ANR	145240	Symbol	AC_GOLOMB_RICE		144669						
ANR	145241	Symbol	w		144669						
ANR	145242	Symbol	x		144669						
ANR	145243	Symbol	run_index		144669						
ANR	145244	Symbol	* p		144669						
ANR	145245	Symbol	* s		144669						
