command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8382452	File	/home/p4ultr4n/workplace/ReVeal/raw_code/test_speed_1.c								
ANR	8382453	Function	test_speed	1:7:7:810							
ANR	8382454	FunctionDef	test_speed (int step)		8382453	0					
ANR	8382455	CompoundStatement		3:0:29:810	8382453	0					
ANR	8382456	IdentifierDeclStatement	const struct pix_func * pix = pix_func ;	5:4:36:73	8382453	0	True				
ANR	8382457	IdentifierDecl	* pix = pix_func		8382453	0					
ANR	8382458	IdentifierDeclType	const struct pix_func *		8382453	0					
ANR	8382459	Identifier	pix		8382453	1					
ANR	8382460	AssignmentExpression	* pix = pix_func		8382453	2		=			
ANR	8382461	Identifier	pix_func		8382453	0					
ANR	8382462	Identifier	pix_func		8382453	1					
ANR	8382463	IdentifierDeclStatement	const int linesize = 720 ;	7:4:80:104	8382453	1	True				
ANR	8382464	IdentifierDecl	linesize = 720		8382453	0					
ANR	8382465	IdentifierDeclType	const int		8382453	0					
ANR	8382466	Identifier	linesize		8382453	1					
ANR	8382467	AssignmentExpression	linesize = 720		8382453	2		=			
ANR	8382468	Identifier	linesize		8382453	0					
ANR	8382469	PrimaryExpression	720		8382453	1					
ANR	8382470	IdentifierDeclStatement	char empty [ 32768 ] ;	9:4:111:128	8382453	2	True				
ANR	8382471	IdentifierDecl	empty [ 32768 ]		8382453	0					
ANR	8382472	IdentifierDeclType	char [ 32768 ]		8382453	0					
ANR	8382473	Identifier	empty		8382453	1					
ANR	8382474	PrimaryExpression	32768		8382453	2					
ANR	8382475	IdentifierDeclStatement	char * bu = ( char * ) ( ( ( long ) empty + 32 ) & ~0xf ) ;	11:4:135:179	8382453	3	True				
ANR	8382476	IdentifierDecl	* bu = ( char * ) ( ( ( long ) empty + 32 ) & ~0xf )		8382453	0					
ANR	8382477	IdentifierDeclType	char *		8382453	0					
ANR	8382478	Identifier	bu		8382453	1					
ANR	8382479	AssignmentExpression	* bu = ( char * ) ( ( ( long ) empty + 32 ) & ~0xf )		8382453	2		=			
ANR	8382480	Identifier	bu		8382453	0					
ANR	8382481	CastExpression	( char * ) ( ( ( long ) empty + 32 ) & ~0xf )		8382453	1					
ANR	8382482	CastTarget	char *		8382453	0					
ANR	8382483	BitAndExpression	( ( long ) empty + 32 ) & ~0xf		8382453	1		&			
ANR	8382484	AdditiveExpression	( long ) empty + 32		8382453	0		+			
ANR	8382485	CastExpression	( long ) empty		8382453	0					
ANR	8382486	CastTarget	long		8382453	0					
ANR	8382487	Identifier	empty		8382453	1					
ANR	8382488	PrimaryExpression	32		8382453	1					
ANR	8382489	Identifier	~0xf		8382453	1					
ANR	8382490	IdentifierDeclStatement	int sum = 0 ;	15:4:188:199	8382453	4	True				
ANR	8382491	IdentifierDecl	sum = 0		8382453	0					
ANR	8382492	IdentifierDeclType	int		8382453	0					
ANR	8382493	Identifier	sum		8382453	1					
ANR	8382494	AssignmentExpression	sum = 0		8382453	2		=			
ANR	8382495	Identifier	sum		8382453	0					
ANR	8382496	PrimaryExpression	0		8382453	1					
ANR	8382497	WhileStatement	while ( pix -> name )		8382453	5					
ANR	8382498	Condition	pix -> name	19:11:215:223	8382453	0	True				
ANR	8382499	PtrMemberAccess	pix -> name		8382453	0					
ANR	8382500	Identifier	pix		8382453	0					
ANR	8382501	Identifier	name		8382453	1					
ANR	8382502	CompoundStatement		27:1:282:295	8382453	1					
ANR	8382503	IdentifierDeclStatement	int i ;	23:1:235:240	8382453	0	True				
ANR	8382504	IdentifierDecl	i		8382453	0					
ANR	8382505	IdentifierDeclType	int		8382453	0					
ANR	8382506	Identifier	i		8382453	1					
ANR	8382507	IdentifierDeclStatement	"uint64_t te , ts ;"	25:8:251:266	8382453	1	True				
ANR	8382508	IdentifierDecl	te		8382453	0					
ANR	8382509	IdentifierDeclType	uint64_t		8382453	0					
ANR	8382510	Identifier	te		8382453	1					
ANR	8382511	IdentifierDecl	ts		8382453	1					
ANR	8382512	IdentifierDeclType	uint64_t		8382453	0					
ANR	8382513	Identifier	ts		8382453	1					
ANR	8382514	IdentifierDeclStatement	op_pixels_func func = pix -> func ;	27:8:277:308	8382453	2	True				
ANR	8382515	IdentifierDecl	func = pix -> func		8382453	0					
ANR	8382516	IdentifierDeclType	op_pixels_func		8382453	0					
ANR	8382517	Identifier	func		8382453	1					
ANR	8382518	AssignmentExpression	func = pix -> func		8382453	2		=			
ANR	8382519	Identifier	func		8382453	0					
ANR	8382520	PtrMemberAccess	pix -> func		8382453	1					
ANR	8382521	Identifier	pix		8382453	0					
ANR	8382522	Identifier	func		8382453	1					
ANR	8382523	IdentifierDeclStatement	char * im = bu ;	29:1:312:325	8382453	3	True				
ANR	8382524	IdentifierDecl	* im = bu		8382453	0					
ANR	8382525	IdentifierDeclType	char *		8382453	0					
ANR	8382526	Identifier	im		8382453	1					
ANR	8382527	AssignmentExpression	* im = bu		8382453	2		=			
ANR	8382528	Identifier	bu		8382453	0					
ANR	8382529	Identifier	bu		8382453	1					
ANR	8382530	IfStatement	if ( ! ( pix -> mm_flags & mm_flags ) )		8382453	4					
ANR	8382531	Condition	! ( pix -> mm_flags & mm_flags )	33:5:335:361	8382453	0	True				
ANR	8382532	UnaryOperationExpression	! ( pix -> mm_flags & mm_flags )		8382453	0					
ANR	8382533	UnaryOperator	!		8382453	0					
ANR	8382534	BitAndExpression	pix -> mm_flags & mm_flags		8382453	1		&			
ANR	8382535	PtrMemberAccess	pix -> mm_flags		8382453	0					
ANR	8382536	Identifier	pix		8382453	0					
ANR	8382537	Identifier	mm_flags		8382453	1					
ANR	8382538	Identifier	mm_flags		8382453	1					
ANR	8382539	ContinueStatement	continue ;	35:12:377:385	8382453	1	True				
ANR	8382540	ExpressionStatement	"printf ( ""%30s... "" , pix -> name )"	39:1:391:420	8382453	5	True				
ANR	8382541	CallExpression	"printf ( ""%30s... "" , pix -> name )"		8382453	0					
ANR	8382542	Callee	printf		8382453	0					
ANR	8382543	Identifier	printf		8382453	0					
ANR	8382544	ArgumentList	"""%30s... """		8382453	1					
ANR	8382545	Argument	"""%30s... """		8382453	0					
ANR	8382546	PrimaryExpression	"""%30s... """		8382453	0					
ANR	8382547	Argument	pix -> name		8382453	1					
ANR	8382548	PtrMemberAccess	pix -> name		8382453	0					
ANR	8382549	Identifier	pix		8382453	0					
ANR	8382550	Identifier	name		8382453	1					
ANR	8382551	ExpressionStatement	fflush ( stdout )	41:8:431:445	8382453	6	True				
ANR	8382552	CallExpression	fflush ( stdout )		8382453	0					
ANR	8382553	Callee	fflush		8382453	0					
ANR	8382554	Identifier	fflush		8382453	0					
ANR	8382555	ArgumentList	stdout		8382453	1					
ANR	8382556	Argument	stdout		8382453	0					
ANR	8382557	Identifier	stdout		8382453	0					
ANR	8382558	ExpressionStatement	ts = rdtsc ( )	43:1:449:461	8382453	7	True				
ANR	8382559	AssignmentExpression	ts = rdtsc ( )		8382453	0		=			
ANR	8382560	Identifier	ts		8382453	0					
ANR	8382561	CallExpression	rdtsc ( )		8382453	1					
ANR	8382562	Callee	rdtsc		8382453	0					
ANR	8382563	Identifier	rdtsc		8382453	0					
ANR	8382564	ArgumentList			8382453	1					
ANR	8382565	ForStatement	for ( i = 0 ; i < 100000 ; i ++ )		8382453	8					
ANR	8382566	ForInit	i = 0 ;	45:5:469:472	8382453	0	True				
ANR	8382567	AssignmentExpression	i = 0		8382453	0		=			
ANR	8382568	Identifier	i		8382453	0					
ANR	8382569	PrimaryExpression	0		8382453	1					
ANR	8382570	Condition	i < 100000	45:10:474:481	8382453	1	True				
ANR	8382571	RelationalExpression	i < 100000		8382453	0		<			
ANR	8382572	Identifier	i		8382453	0					
ANR	8382573	PrimaryExpression	100000		8382453	1					
ANR	8382574	PostIncDecOperationExpression	i ++	45:20:484:486	8382453	2	True				
ANR	8382575	Identifier	i		8382453	0					
ANR	8382576	IncDec	++		8382453	1					
ANR	8382577	CompoundStatement		43:24:458:458	8382453	3					
ANR	8382578	ExpressionStatement	"func ( im , im + 1000 , linesize , 16 )"	47:5:496:529	8382453	0	True				
ANR	8382579	CallExpression	"func ( im , im + 1000 , linesize , 16 )"		8382453	0					
ANR	8382580	Callee	func		8382453	0					
ANR	8382581	Identifier	func		8382453	0					
ANR	8382582	ArgumentList	im		8382453	1					
ANR	8382583	Argument	im		8382453	0					
ANR	8382584	Identifier	im		8382453	0					
ANR	8382585	Argument	im + 1000		8382453	1					
ANR	8382586	AdditiveExpression	im + 1000		8382453	0		+			
ANR	8382587	Identifier	im		8382453	0					
ANR	8382588	PrimaryExpression	1000		8382453	1					
ANR	8382589	Argument	linesize		8382453	2					
ANR	8382590	Identifier	linesize		8382453	0					
ANR	8382591	Argument	16		8382453	3					
ANR	8382592	PrimaryExpression	16		8382453	0					
ANR	8382593	ExpressionStatement	im += step	49:5:537:547	8382453	1	True				
ANR	8382594	AssignmentExpression	im += step		8382453	0		+=			
ANR	8382595	Identifier	im		8382453	0					
ANR	8382596	Identifier	step		8382453	1					
ANR	8382597	IfStatement	if ( im > bu + 20000 )		8382453	2					
ANR	8382598	Condition	im > bu + 20000	51:9:559:573	8382453	0	True				
ANR	8382599	RelationalExpression	im > bu + 20000		8382453	0		>			
ANR	8382600	Identifier	im		8382453	0					
ANR	8382601	AdditiveExpression	bu + 20000		8382453	1		+			
ANR	8382602	Identifier	bu		8382453	0					
ANR	8382603	PrimaryExpression	20000		8382453	1					
ANR	8382604	ExpressionStatement	im = bu	53:2:579:586	8382453	1	True				
ANR	8382605	AssignmentExpression	im = bu		8382453	0		=			
ANR	8382606	Identifier	im		8382453	0					
ANR	8382607	Identifier	bu		8382453	1					
ANR	8382608	ExpressionStatement	te = rdtsc ( )	57:1:594:606	8382453	9	True				
ANR	8382609	AssignmentExpression	te = rdtsc ( )		8382453	0		=			
ANR	8382610	Identifier	te		8382453	0					
ANR	8382611	CallExpression	rdtsc ( )		8382453	1					
ANR	8382612	Callee	rdtsc		8382453	0					
ANR	8382613	Identifier	rdtsc		8382453	0					
ANR	8382614	ArgumentList			8382453	1					
ANR	8382615	ExpressionStatement	emms ( )	59:8:617:623	8382453	10	True				
ANR	8382616	CallExpression	emms ( )		8382453	0					
ANR	8382617	Callee	emms		8382453	0					
ANR	8382618	Identifier	emms		8382453	0					
ANR	8382619	ArgumentList			8382453	1					
ANR	8382620	ExpressionStatement	"printf ( ""% 9d\\n"" , ( int ) ( te - ts ) )"	61:1:627:659	8382453	11	True				
ANR	8382621	CallExpression	"printf ( ""% 9d\\n"" , ( int ) ( te - ts ) )"		8382453	0					
ANR	8382622	Callee	printf		8382453	0					
ANR	8382623	Identifier	printf		8382453	0					
ANR	8382624	ArgumentList	"""% 9d\\n"""		8382453	1					
ANR	8382625	Argument	"""% 9d\\n"""		8382453	0					
ANR	8382626	PrimaryExpression	"""% 9d\\n"""		8382453	0					
ANR	8382627	Argument	( int ) ( te - ts )		8382453	1					
ANR	8382628	CastExpression	( int ) ( te - ts )		8382453	0					
ANR	8382629	CastTarget	int		8382453	0					
ANR	8382630	AdditiveExpression	te - ts		8382453	1		-			
ANR	8382631	Identifier	te		8382453	0					
ANR	8382632	Identifier	ts		8382453	1					
ANR	8382633	ExpressionStatement	sum += ( te - ts ) / 100000	63:8:670:695	8382453	12	True				
ANR	8382634	AssignmentExpression	sum += ( te - ts ) / 100000		8382453	0		+=			
ANR	8382635	Identifier	sum		8382453	0					
ANR	8382636	MultiplicativeExpression	( te - ts ) / 100000		8382453	1		/			
ANR	8382637	AdditiveExpression	te - ts		8382453	0		-			
ANR	8382638	Identifier	te		8382453	0					
ANR	8382639	Identifier	ts		8382453	1					
ANR	8382640	PrimaryExpression	100000		8382453	1					
ANR	8382641	IfStatement	if ( pix -> mm_flags & PAD )		8382453	13					
ANR	8382642	Condition	pix -> mm_flags & PAD	65:5:703:721	8382453	0	True				
ANR	8382643	BitAndExpression	pix -> mm_flags & PAD		8382453	0		&			
ANR	8382644	PtrMemberAccess	pix -> mm_flags		8382453	0					
ANR	8382645	Identifier	pix		8382453	0					
ANR	8382646	Identifier	mm_flags		8382453	1					
ANR	8382647	Identifier	PAD		8382453	1					
ANR	8382648	ExpressionStatement	"puts ( """" )"	67:12:737:745	8382453	1	True				
ANR	8382649	CallExpression	"puts ( """" )"		8382453	0					
ANR	8382650	Callee	puts		8382453	0					
ANR	8382651	Identifier	puts		8382453	0					
ANR	8382652	ArgumentList	""""""		8382453	1					
ANR	8382653	Argument	""""""		8382453	0					
ANR	8382654	PrimaryExpression	""""""		8382453	0					
ANR	8382655	ExpressionStatement	pix ++	69:8:756:761	8382453	14	True				
ANR	8382656	PostIncDecOperationExpression	pix ++		8382453	0					
ANR	8382657	Identifier	pix		8382453	0					
ANR	8382658	IncDec	++		8382453	1					
ANR	8382659	ExpressionStatement	"printf ( ""Total sum: %d\\n"" , sum )"	75:4:777:807	8382453	6	True				
ANR	8382660	CallExpression	"printf ( ""Total sum: %d\\n"" , sum )"		8382453	0					
ANR	8382661	Callee	printf		8382453	0					
ANR	8382662	Identifier	printf		8382453	0					
ANR	8382663	ArgumentList	"""Total sum: %d\\n"""		8382453	1					
ANR	8382664	Argument	"""Total sum: %d\\n"""		8382453	0					
ANR	8382665	PrimaryExpression	"""Total sum: %d\\n"""		8382453	0					
ANR	8382666	Argument	sum		8382453	1					
ANR	8382667	Identifier	sum		8382453	0					
ANR	8382668	Identifier	test_speed		8382453	1					
ANR	8382669	ParameterList	int step		8382453	2					
ANR	8382670	Parameter	int step	1:18:18:25	8382453	0	True				
ANR	8382671	ParameterType	int		8382453	0					
ANR	8382672	Identifier	step		8382453	1					
ANR	8382673	CFGEntryNode	ENTRY		8382453		True				
ANR	8382674	CFGExitNode	EXIT		8382453		True				
ANR	8382675	Symbol	pix -> mm_flags		8382453						
ANR	8382676	Symbol	im		8382453						
ANR	8382677	Symbol	stdout		8382453						
ANR	8382678	Symbol	pix_func		8382453						
ANR	8382679	Symbol	rdtsc		8382453						
ANR	8382680	Symbol	* pix		8382453						
ANR	8382681	Symbol	i		8382453						
ANR	8382682	Symbol	sum		8382453						
ANR	8382683	Symbol	pix -> func		8382453						
ANR	8382684	Symbol	empty		8382453						
ANR	8382685	Symbol	te		8382453						
ANR	8382686	Symbol	linesize		8382453						
ANR	8382687	Symbol	PAD		8382453						
ANR	8382688	Symbol	bu		8382453						
ANR	8382689	Symbol	func		8382453						
ANR	8382690	Symbol	step		8382453						
ANR	8382691	Symbol	~0xf		8382453						
ANR	8382692	Symbol	pix -> name		8382453						
ANR	8382693	Symbol	mm_flags		8382453						
ANR	8382694	Symbol	pix		8382453						
ANR	8382695	Symbol	ts		8382453						
