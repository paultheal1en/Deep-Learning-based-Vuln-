command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	581598	File	/home/p4ultr4n/workplace/ReVeal/raw_code/apply_loop_filter_01_0.c								
ANR	581599	Function	apply_loop_filter	1:0:0:2704							
ANR	581600	FunctionDef	"apply_loop_filter (Vp3DecodeContext * s , int plane , int ystart , int yend)"		581599	0					
ANR	581601	CompoundStatement		3:0:85:2704	581599	0					
ANR	581602	IdentifierDeclStatement	"int x , y ;"	5:4:92:100	581599	0	True				
ANR	581603	IdentifierDecl	x		581599	0					
ANR	581604	IdentifierDeclType	int		581599	0					
ANR	581605	Identifier	x		581599	1					
ANR	581606	IdentifierDecl	y		581599	1					
ANR	581607	IdentifierDeclType	int		581599	0					
ANR	581608	Identifier	y		581599	1					
ANR	581609	IdentifierDeclStatement	int * bounding_values = s -> bounding_values_array + 127 ;	7:4:107:157	581599	1	True				
ANR	581610	IdentifierDecl	* bounding_values = s -> bounding_values_array + 127		581599	0					
ANR	581611	IdentifierDeclType	int *		581599	0					
ANR	581612	Identifier	bounding_values		581599	1					
ANR	581613	AssignmentExpression	* bounding_values = s -> bounding_values_array + 127		581599	2		=			
ANR	581614	Identifier	bounding_values		581599	0					
ANR	581615	AdditiveExpression	s -> bounding_values_array + 127		581599	1		+			
ANR	581616	PtrMemberAccess	s -> bounding_values_array		581599	0					
ANR	581617	Identifier	s		581599	0					
ANR	581618	Identifier	bounding_values_array		581599	1					
ANR	581619	PrimaryExpression	127		581599	1					
ANR	581620	IdentifierDeclStatement	int width = s -> fragment_width [ ! ! plane ] ;	11:4:166:214	581599	2	True				
ANR	581621	IdentifierDecl	width = s -> fragment_width [ ! ! plane ]		581599	0					
ANR	581622	IdentifierDeclType	int		581599	0					
ANR	581623	Identifier	width		581599	1					
ANR	581624	AssignmentExpression	width = s -> fragment_width [ ! ! plane ]		581599	2		=			
ANR	581625	Identifier	width		581599	0					
ANR	581626	ArrayIndexing	s -> fragment_width [ ! ! plane ]		581599	1					
ANR	581627	PtrMemberAccess	s -> fragment_width		581599	0					
ANR	581628	Identifier	s		581599	0					
ANR	581629	Identifier	fragment_width		581599	1					
ANR	581630	UnaryOperationExpression	! ! plane		581599	1					
ANR	581631	UnaryOperator	!		581599	0					
ANR	581632	UnaryOperationExpression	! plane		581599	1					
ANR	581633	UnaryOperator	!		581599	0					
ANR	581634	Identifier	plane		581599	1					
ANR	581635	IdentifierDeclStatement	int height = s -> fragment_height [ ! ! plane ] ;	13:4:221:270	581599	3	True				
ANR	581636	IdentifierDecl	height = s -> fragment_height [ ! ! plane ]		581599	0					
ANR	581637	IdentifierDeclType	int		581599	0					
ANR	581638	Identifier	height		581599	1					
ANR	581639	AssignmentExpression	height = s -> fragment_height [ ! ! plane ]		581599	2		=			
ANR	581640	Identifier	height		581599	0					
ANR	581641	ArrayIndexing	s -> fragment_height [ ! ! plane ]		581599	1					
ANR	581642	PtrMemberAccess	s -> fragment_height		581599	0					
ANR	581643	Identifier	s		581599	0					
ANR	581644	Identifier	fragment_height		581599	1					
ANR	581645	UnaryOperationExpression	! ! plane		581599	1					
ANR	581646	UnaryOperator	!		581599	0					
ANR	581647	UnaryOperationExpression	! plane		581599	1					
ANR	581648	UnaryOperator	!		581599	0					
ANR	581649	Identifier	plane		581599	1					
ANR	581650	IdentifierDeclStatement	int fragment = s -> fragment_start [ plane ] + ystart * width ;	15:4:277:348	581599	4	True				
ANR	581651	IdentifierDecl	fragment = s -> fragment_start [ plane ] + ystart * width		581599	0					
ANR	581652	IdentifierDeclType	int		581599	0					
ANR	581653	Identifier	fragment		581599	1					
ANR	581654	AssignmentExpression	fragment = s -> fragment_start [ plane ] + ystart * width		581599	2		=			
ANR	581655	Identifier	fragment		581599	0					
ANR	581656	AdditiveExpression	s -> fragment_start [ plane ] + ystart * width		581599	1		+			
ANR	581657	ArrayIndexing	s -> fragment_start [ plane ]		581599	0					
ANR	581658	PtrMemberAccess	s -> fragment_start		581599	0					
ANR	581659	Identifier	s		581599	0					
ANR	581660	Identifier	fragment_start		581599	1					
ANR	581661	Identifier	plane		581599	1					
ANR	581662	MultiplicativeExpression	ystart * width		581599	1		*			
ANR	581663	Identifier	ystart		581599	0					
ANR	581664	Identifier	width		581599	1					
ANR	581665	IdentifierDeclStatement	int stride = s -> current_frame . linesize [ plane ] ;	17:4:355:409	581599	5	True				
ANR	581666	IdentifierDecl	stride = s -> current_frame . linesize [ plane ]		581599	0					
ANR	581667	IdentifierDeclType	int		581599	0					
ANR	581668	Identifier	stride		581599	1					
ANR	581669	AssignmentExpression	stride = s -> current_frame . linesize [ plane ]		581599	2		=			
ANR	581670	Identifier	stride		581599	0					
ANR	581671	ArrayIndexing	s -> current_frame . linesize [ plane ]		581599	1					
ANR	581672	MemberAccess	s -> current_frame . linesize		581599	0					
ANR	581673	PtrMemberAccess	s -> current_frame		581599	0					
ANR	581674	Identifier	s		581599	0					
ANR	581675	Identifier	current_frame		581599	1					
ANR	581676	Identifier	linesize		581599	1					
ANR	581677	Identifier	plane		581599	1					
ANR	581678	IdentifierDeclStatement	uint8_t * plane_data = s -> current_frame . data [ plane ] ;	19:4:416:470	581599	6	True				
ANR	581679	IdentifierDecl	* plane_data = s -> current_frame . data [ plane ]		581599	0					
ANR	581680	IdentifierDeclType	uint8_t *		581599	0					
ANR	581681	Identifier	plane_data		581599	1					
ANR	581682	AssignmentExpression	* plane_data = s -> current_frame . data [ plane ]		581599	2		=			
ANR	581683	Identifier	plane_data		581599	0					
ANR	581684	ArrayIndexing	s -> current_frame . data [ plane ]		581599	1					
ANR	581685	MemberAccess	s -> current_frame . data		581599	0					
ANR	581686	PtrMemberAccess	s -> current_frame		581599	0					
ANR	581687	Identifier	s		581599	0					
ANR	581688	Identifier	current_frame		581599	1					
ANR	581689	Identifier	data		581599	1					
ANR	581690	Identifier	plane		581599	1					
ANR	581691	IfStatement	if ( ! s -> flipped_image )		581599	7					
ANR	581692	Condition	! s -> flipped_image	21:8:481:497	581599	0	True				
ANR	581693	UnaryOperationExpression	! s -> flipped_image		581599	0					
ANR	581694	UnaryOperator	!		581599	0					
ANR	581695	PtrMemberAccess	s -> flipped_image		581599	1					
ANR	581696	Identifier	s		581599	0					
ANR	581697	Identifier	flipped_image		581599	1					
ANR	581698	ExpressionStatement	stride = - stride	21:27:500:516	581599	1	True				
ANR	581699	AssignmentExpression	stride = - stride		581599	0		=			
ANR	581700	Identifier	stride		581599	0					
ANR	581701	UnaryOperationExpression	- stride		581599	1					
ANR	581702	UnaryOperator	-		581599	0					
ANR	581703	Identifier	stride		581599	1					
ANR	581704	ExpressionStatement	plane_data += s -> data_offset [ plane ] + 8 * ystart * stride	23:4:523:576	581599	8	True				
ANR	581705	AssignmentExpression	plane_data += s -> data_offset [ plane ] + 8 * ystart * stride		581599	0		+=			
ANR	581706	Identifier	plane_data		581599	0					
ANR	581707	AdditiveExpression	s -> data_offset [ plane ] + 8 * ystart * stride		581599	1		+			
ANR	581708	ArrayIndexing	s -> data_offset [ plane ]		581599	0					
ANR	581709	PtrMemberAccess	s -> data_offset		581599	0					
ANR	581710	Identifier	s		581599	0					
ANR	581711	Identifier	data_offset		581599	1					
ANR	581712	Identifier	plane		581599	1					
ANR	581713	MultiplicativeExpression	8 * ystart * stride		581599	1		*			
ANR	581714	PrimaryExpression	8		581599	0					
ANR	581715	MultiplicativeExpression	ystart * stride		581599	1		*			
ANR	581716	Identifier	ystart		581599	0					
ANR	581717	Identifier	stride		581599	1					
ANR	581718	ForStatement	for ( y = ystart ; y < yend ; y ++ )		581599	9					
ANR	581719	ForInit	y = ystart ;	27:9:590:600	581599	0	True				
ANR	581720	AssignmentExpression	y = ystart		581599	0		=			
ANR	581721	Identifier	y		581599	0					
ANR	581722	Identifier	ystart		581599	1					
ANR	581723	Condition	y < yend	27:21:602:609	581599	1	True				
ANR	581724	RelationalExpression	y < yend		581599	0		<			
ANR	581725	Identifier	y		581599	0					
ANR	581726	Identifier	yend		581599	1					
ANR	581727	PostIncDecOperationExpression	y ++	27:31:612:614	581599	2	True				
ANR	581728	Identifier	y		581599	0					
ANR	581729	IncDec	++		581599	1					
ANR	581730	CompoundStatement		25:36:531:531	581599	3					
ANR	581731	ForStatement	for ( x = 0 ; x < width ; x ++ )		581599	0					
ANR	581732	ForInit	x = 0 ;	31:13:635:640	581599	0	True				
ANR	581733	AssignmentExpression	x = 0		581599	0		=			
ANR	581734	Identifier	x		581599	0					
ANR	581735	PrimaryExpression	0		581599	1					
ANR	581736	Condition	x < width	31:20:642:650	581599	1	True				
ANR	581737	RelationalExpression	x < width		581599	0		<			
ANR	581738	Identifier	x		581599	0					
ANR	581739	Identifier	width		581599	1					
ANR	581740	PostIncDecOperationExpression	x ++	31:31:653:655	581599	2	True				
ANR	581741	Identifier	x		581599	0					
ANR	581742	IncDec	++		581599	1					
ANR	581743	CompoundStatement		29:36:572:572	581599	3					
ANR	581744	IfStatement	if ( s -> all_fragments [ fragment ] . coding_method != MODE_COPY )		581599	0					
ANR	581745	Condition	s -> all_fragments [ fragment ] . coding_method != MODE_COPY	41:16:971:1023	581599	0	True				
ANR	581746	EqualityExpression	s -> all_fragments [ fragment ] . coding_method != MODE_COPY		581599	0		!=			
ANR	581747	MemberAccess	s -> all_fragments [ fragment ] . coding_method		581599	0					
ANR	581748	ArrayIndexing	s -> all_fragments [ fragment ]		581599	0					
ANR	581749	PtrMemberAccess	s -> all_fragments		581599	0					
ANR	581750	Identifier	s		581599	0					
ANR	581751	Identifier	all_fragments		581599	1					
ANR	581752	Identifier	fragment		581599	1					
ANR	581753	Identifier	coding_method		581599	1					
ANR	581754	Identifier	MODE_COPY		581599	1					
ANR	581755	CompoundStatement		41:12:954:954	581599	1					
ANR	581756	IfStatement	if ( x > 0 )		581599	0					
ANR	581757	Condition	x > 0	47:20:1141:1145	581599	0	True				
ANR	581758	RelationalExpression	x > 0		581599	0		>			
ANR	581759	Identifier	x		581599	0					
ANR	581760	PrimaryExpression	0		581599	1					
ANR	581761	CompoundStatement		45:27:1062:1062	581599	1					
ANR	581762	ExpressionStatement	"s -> dsp . vp3_h_loop_filter ( plane_data + 8 * x , stride , bounding_values )"	49:20:1171:1289	581599	0	True				
ANR	581763	CallExpression	"s -> dsp . vp3_h_loop_filter ( plane_data + 8 * x , stride , bounding_values )"		581599	0					
ANR	581764	Callee	s -> dsp . vp3_h_loop_filter		581599	0					
ANR	581765	MemberAccess	s -> dsp . vp3_h_loop_filter		581599	0					
ANR	581766	PtrMemberAccess	s -> dsp		581599	0					
ANR	581767	Identifier	s		581599	0					
ANR	581768	Identifier	dsp		581599	1					
ANR	581769	Identifier	vp3_h_loop_filter		581599	1					
ANR	581770	ArgumentList	plane_data + 8 * x		581599	1					
ANR	581771	Argument	plane_data + 8 * x		581599	0					
ANR	581772	AdditiveExpression	plane_data + 8 * x		581599	0		+			
ANR	581773	Identifier	plane_data		581599	0					
ANR	581774	MultiplicativeExpression	8 * x		581599	1		*			
ANR	581775	PrimaryExpression	8		581599	0					
ANR	581776	Identifier	x		581599	1					
ANR	581777	Argument	stride		581599	1					
ANR	581778	Identifier	stride		581599	0					
ANR	581779	Argument	bounding_values		581599	2					
ANR	581780	Identifier	bounding_values		581599	0					
ANR	581781	IfStatement	if ( y > 0 )		581599	1					
ANR	581782	Condition	y > 0	61:20:1409:1413	581599	0	True				
ANR	581783	RelationalExpression	y > 0		581599	0		>			
ANR	581784	Identifier	y		581599	0					
ANR	581785	PrimaryExpression	0		581599	1					
ANR	581786	CompoundStatement		59:27:1330:1330	581599	1					
ANR	581787	ExpressionStatement	"s -> dsp . vp3_v_loop_filter ( plane_data + 8 * x , stride , bounding_values )"	63:20:1439:1557	581599	0	True				
ANR	581788	CallExpression	"s -> dsp . vp3_v_loop_filter ( plane_data + 8 * x , stride , bounding_values )"		581599	0					
ANR	581789	Callee	s -> dsp . vp3_v_loop_filter		581599	0					
ANR	581790	MemberAccess	s -> dsp . vp3_v_loop_filter		581599	0					
ANR	581791	PtrMemberAccess	s -> dsp		581599	0					
ANR	581792	Identifier	s		581599	0					
ANR	581793	Identifier	dsp		581599	1					
ANR	581794	Identifier	vp3_v_loop_filter		581599	1					
ANR	581795	ArgumentList	plane_data + 8 * x		581599	1					
ANR	581796	Argument	plane_data + 8 * x		581599	0					
ANR	581797	AdditiveExpression	plane_data + 8 * x		581599	0		+			
ANR	581798	Identifier	plane_data		581599	0					
ANR	581799	MultiplicativeExpression	8 * x		581599	1		*			
ANR	581800	PrimaryExpression	8		581599	0					
ANR	581801	Identifier	x		581599	1					
ANR	581802	Argument	stride		581599	1					
ANR	581803	Identifier	stride		581599	0					
ANR	581804	Argument	bounding_values		581599	2					
ANR	581805	Identifier	bounding_values		581599	0					
ANR	581806	IfStatement	if ( ( x < width - 1 ) && ( s -> all_fragments [ fragment + 1 ] . coding_method == MODE_COPY ) )		581599	2					
ANR	581807	Condition	( x < width - 1 ) && ( s -> all_fragments [ fragment + 1 ] . coding_method == MODE_COPY )	79:20:1822:1920	581599	0	True				
ANR	581808	AndExpression	( x < width - 1 ) && ( s -> all_fragments [ fragment + 1 ] . coding_method == MODE_COPY )		581599	0		&&			
ANR	581809	RelationalExpression	x < width - 1		581599	0		<			
ANR	581810	Identifier	x		581599	0					
ANR	581811	AdditiveExpression	width - 1		581599	1		-			
ANR	581812	Identifier	width		581599	0					
ANR	581813	PrimaryExpression	1		581599	1					
ANR	581814	EqualityExpression	s -> all_fragments [ fragment + 1 ] . coding_method == MODE_COPY		581599	1		==			
ANR	581815	MemberAccess	s -> all_fragments [ fragment + 1 ] . coding_method		581599	0					
ANR	581816	ArrayIndexing	s -> all_fragments [ fragment + 1 ]		581599	0					
ANR	581817	PtrMemberAccess	s -> all_fragments		581599	0					
ANR	581818	Identifier	s		581599	0					
ANR	581819	Identifier	all_fragments		581599	1					
ANR	581820	AdditiveExpression	fragment + 1		581599	1		+			
ANR	581821	Identifier	fragment		581599	0					
ANR	581822	PrimaryExpression	1		581599	1					
ANR	581823	Identifier	coding_method		581599	1					
ANR	581824	Identifier	MODE_COPY		581599	1					
ANR	581825	CompoundStatement		79:81:1837:1837	581599	1					
ANR	581826	ExpressionStatement	"s -> dsp . vp3_h_loop_filter ( plane_data + 8 * x + 8 , stride , bounding_values )"	83:20:1946:2068	581599	0	True				
ANR	581827	CallExpression	"s -> dsp . vp3_h_loop_filter ( plane_data + 8 * x + 8 , stride , bounding_values )"		581599	0					
ANR	581828	Callee	s -> dsp . vp3_h_loop_filter		581599	0					
ANR	581829	MemberAccess	s -> dsp . vp3_h_loop_filter		581599	0					
ANR	581830	PtrMemberAccess	s -> dsp		581599	0					
ANR	581831	Identifier	s		581599	0					
ANR	581832	Identifier	dsp		581599	1					
ANR	581833	Identifier	vp3_h_loop_filter		581599	1					
ANR	581834	ArgumentList	plane_data + 8 * x + 8		581599	1					
ANR	581835	Argument	plane_data + 8 * x + 8		581599	0					
ANR	581836	AdditiveExpression	plane_data + 8 * x + 8		581599	0		+			
ANR	581837	Identifier	plane_data		581599	0					
ANR	581838	AdditiveExpression	8 * x + 8		581599	1		+			
ANR	581839	MultiplicativeExpression	8 * x		581599	0		*			
ANR	581840	PrimaryExpression	8		581599	0					
ANR	581841	Identifier	x		581599	1					
ANR	581842	PrimaryExpression	8		581599	1					
ANR	581843	Argument	stride		581599	1					
ANR	581844	Identifier	stride		581599	0					
ANR	581845	Argument	bounding_values		581599	2					
ANR	581846	Identifier	bounding_values		581599	0					
ANR	581847	IfStatement	if ( ( y < height - 1 ) && ( s -> all_fragments [ fragment + width ] . coding_method == MODE_COPY ) )		581599	3					
ANR	581848	Condition	( y < height - 1 ) && ( s -> all_fragments [ fragment + width ] . coding_method == MODE_COPY )	99:20:2331:2434	581599	0	True				
ANR	581849	AndExpression	( y < height - 1 ) && ( s -> all_fragments [ fragment + width ] . coding_method == MODE_COPY )		581599	0		&&			
ANR	581850	RelationalExpression	y < height - 1		581599	0		<			
ANR	581851	Identifier	y		581599	0					
ANR	581852	AdditiveExpression	height - 1		581599	1		-			
ANR	581853	Identifier	height		581599	0					
ANR	581854	PrimaryExpression	1		581599	1					
ANR	581855	EqualityExpression	s -> all_fragments [ fragment + width ] . coding_method == MODE_COPY		581599	1		==			
ANR	581856	MemberAccess	s -> all_fragments [ fragment + width ] . coding_method		581599	0					
ANR	581857	ArrayIndexing	s -> all_fragments [ fragment + width ]		581599	0					
ANR	581858	PtrMemberAccess	s -> all_fragments		581599	0					
ANR	581859	Identifier	s		581599	0					
ANR	581860	Identifier	all_fragments		581599	1					
ANR	581861	AdditiveExpression	fragment + width		581599	1		+			
ANR	581862	Identifier	fragment		581599	0					
ANR	581863	Identifier	width		581599	1					
ANR	581864	Identifier	coding_method		581599	1					
ANR	581865	Identifier	MODE_COPY		581599	1					
ANR	581866	CompoundStatement		99:85:2351:2351	581599	1					
ANR	581867	ExpressionStatement	"s -> dsp . vp3_v_loop_filter ( plane_data + 8 * x + 8 * stride , stride , bounding_values )"	103:20:2460:2589	581599	0	True				
ANR	581868	CallExpression	"s -> dsp . vp3_v_loop_filter ( plane_data + 8 * x + 8 * stride , stride , bounding_values )"		581599	0					
ANR	581869	Callee	s -> dsp . vp3_v_loop_filter		581599	0					
ANR	581870	MemberAccess	s -> dsp . vp3_v_loop_filter		581599	0					
ANR	581871	PtrMemberAccess	s -> dsp		581599	0					
ANR	581872	Identifier	s		581599	0					
ANR	581873	Identifier	dsp		581599	1					
ANR	581874	Identifier	vp3_v_loop_filter		581599	1					
ANR	581875	ArgumentList	plane_data + 8 * x + 8 * stride		581599	1					
ANR	581876	Argument	plane_data + 8 * x + 8 * stride		581599	0					
ANR	581877	AdditiveExpression	plane_data + 8 * x + 8 * stride		581599	0		+			
ANR	581878	Identifier	plane_data		581599	0					
ANR	581879	AdditiveExpression	8 * x + 8 * stride		581599	1		+			
ANR	581880	MultiplicativeExpression	8 * x		581599	0		*			
ANR	581881	PrimaryExpression	8		581599	0					
ANR	581882	Identifier	x		581599	1					
ANR	581883	MultiplicativeExpression	8 * stride		581599	1		*			
ANR	581884	PrimaryExpression	8		581599	0					
ANR	581885	Identifier	stride		581599	1					
ANR	581886	Argument	stride		581599	1					
ANR	581887	Identifier	stride		581599	0					
ANR	581888	Argument	bounding_values		581599	2					
ANR	581889	Identifier	bounding_values		581599	0					
ANR	581890	ExpressionStatement	fragment ++	115:12:2640:2650	581599	1	True				
ANR	581891	PostIncDecOperationExpression	fragment ++		581599	0					
ANR	581892	Identifier	fragment		581599	0					
ANR	581893	IncDec	++		581599	1					
ANR	581894	ExpressionStatement	plane_data += 8 * stride	119:8:2672:2694	581599	1	True				
ANR	581895	AssignmentExpression	plane_data += 8 * stride		581599	0		+=			
ANR	581896	Identifier	plane_data		581599	0					
ANR	581897	MultiplicativeExpression	8 * stride		581599	1		*			
ANR	581898	PrimaryExpression	8		581599	0					
ANR	581899	Identifier	stride		581599	1					
ANR	581900	ReturnType	static void		581599	1					
ANR	581901	Identifier	apply_loop_filter		581599	2					
ANR	581902	ParameterList	"Vp3DecodeContext * s , int plane , int ystart , int yend"		581599	3					
ANR	581903	Parameter	Vp3DecodeContext * s	1:30:30:48	581599	0	True				
ANR	581904	ParameterType	Vp3DecodeContext *		581599	0					
ANR	581905	Identifier	s		581599	1					
ANR	581906	Parameter	int plane	1:51:51:59	581599	1	True				
ANR	581907	ParameterType	int		581599	0					
ANR	581908	Identifier	plane		581599	1					
ANR	581909	Parameter	int ystart	1:62:62:71	581599	2	True				
ANR	581910	ParameterType	int		581599	0					
ANR	581911	Identifier	ystart		581599	1					
ANR	581912	Parameter	int yend	1:74:74:81	581599	3	True				
ANR	581913	ParameterType	int		581599	0					
ANR	581914	Identifier	yend		581599	1					
ANR	581915	CFGEntryNode	ENTRY		581599		True				
ANR	581916	CFGExitNode	EXIT		581599		True				
ANR	581917	Symbol	plane		581599						
ANR	581918	Symbol	MODE_COPY		581599						
ANR	581919	Symbol	ystart		581599						
ANR	581920	Symbol	stride		581599						
ANR	581921	Symbol	* width		581599						
ANR	581922	Symbol	s -> all_fragments [ fragment + 1 ] . coding_method		581599						
ANR	581923	Symbol	s -> fragment_height		581599						
ANR	581924	Symbol	s -> current_frame . data		581599						
ANR	581925	Symbol	* * s		581599						
ANR	581926	Symbol	s -> fragment_width		581599						
ANR	581927	Symbol	* plane		581599						
ANR	581928	Symbol	s -> flipped_image		581599						
ANR	581929	Symbol	* s -> fragment_height		581599						
ANR	581930	Symbol	* s -> fragment_start		581599						
ANR	581931	Symbol	height		581599						
ANR	581932	Symbol	* s -> current_frame . data		581599						
ANR	581933	Symbol	s -> data_offset		581599						
ANR	581934	Symbol	s -> all_fragments [ fragment ] . coding_method		581599						
ANR	581935	Symbol	s -> all_fragments [ fragment + width ] . coding_method		581599						
ANR	581936	Symbol	s -> bounding_values_array		581599						
ANR	581937	Symbol	s -> current_frame . linesize		581599						
ANR	581938	Symbol	* s -> data_offset		581599						
ANR	581939	Symbol	s -> dsp		581599						
ANR	581940	Symbol	plane_data		581599						
ANR	581941	Symbol	s -> all_fragments		581599						
ANR	581942	Symbol	fragment		581599						
ANR	581943	Symbol	* s -> current_frame		581599						
ANR	581944	Symbol	* s -> all_fragments		581599						
ANR	581945	Symbol	s		581599						
ANR	581946	Symbol	s -> current_frame		581599						
ANR	581947	Symbol	bounding_values		581599						
ANR	581948	Symbol	* s -> fragment_width		581599						
ANR	581949	Symbol	x		581599						
ANR	581950	Symbol	width		581599						
ANR	581951	Symbol	* s -> current_frame . linesize		581599						
ANR	581952	Symbol	y		581599						
ANR	581953	Symbol	yend		581599						
ANR	581954	Symbol	s -> fragment_start		581599						
ANR	581955	Symbol	* fragment		581599						
ANR	581956	Symbol	* s		581599						
