command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6904707	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qcrypto_block_luks_create_0.c								
ANR	6904708	Function	qcrypto_block_luks_create	1:0:0:17060							
ANR	6904709	FunctionDef	"qcrypto_block_luks_create (QCryptoBlock * block , QCryptoBlockCreateOptions * options , QCryptoBlockInitFunc initfunc , QCryptoBlockWriteFunc writefunc , void * opaque , Error * * errp)"		6904708	0					
ANR	6904710	CompoundStatement		13:0:311:17060	6904708	0					
ANR	6904711	IdentifierDeclStatement	QCryptoBlockLUKS * luks ;	15:4:318:340	6904708	0	True				
ANR	6904712	IdentifierDecl	* luks		6904708	0					
ANR	6904713	IdentifierDeclType	QCryptoBlockLUKS *		6904708	0					
ANR	6904714	Identifier	luks		6904708	1					
ANR	6904715	IdentifierDeclStatement	QCryptoBlockCreateOptionsLUKS luks_opts ;	17:4:347:386	6904708	1	True				
ANR	6904716	IdentifierDecl	luks_opts		6904708	0					
ANR	6904717	IdentifierDeclType	QCryptoBlockCreateOptionsLUKS		6904708	0					
ANR	6904718	Identifier	luks_opts		6904708	1					
ANR	6904719	IdentifierDeclStatement	Error * local_err = NULL ;	19:4:393:416	6904708	2	True				
ANR	6904720	IdentifierDecl	* local_err = NULL		6904708	0					
ANR	6904721	IdentifierDeclType	Error *		6904708	0					
ANR	6904722	Identifier	local_err		6904708	1					
ANR	6904723	AssignmentExpression	* local_err = NULL		6904708	2		=			
ANR	6904724	Identifier	NULL		6904708	0					
ANR	6904725	Identifier	NULL		6904708	1					
ANR	6904726	IdentifierDeclStatement	uint8_t * masterkey = NULL ;	21:4:423:448	6904708	3	True				
ANR	6904727	IdentifierDecl	* masterkey = NULL		6904708	0					
ANR	6904728	IdentifierDeclType	uint8_t *		6904708	0					
ANR	6904729	Identifier	masterkey		6904708	1					
ANR	6904730	AssignmentExpression	* masterkey = NULL		6904708	2		=			
ANR	6904731	Identifier	NULL		6904708	0					
ANR	6904732	Identifier	NULL		6904708	1					
ANR	6904733	IdentifierDeclStatement	uint8_t * slotkey = NULL ;	23:4:455:478	6904708	4	True				
ANR	6904734	IdentifierDecl	* slotkey = NULL		6904708	0					
ANR	6904735	IdentifierDeclType	uint8_t *		6904708	0					
ANR	6904736	Identifier	slotkey		6904708	1					
ANR	6904737	AssignmentExpression	* slotkey = NULL		6904708	2		=			
ANR	6904738	Identifier	NULL		6904708	0					
ANR	6904739	Identifier	NULL		6904708	1					
ANR	6904740	IdentifierDeclStatement	uint8_t * splitkey = NULL ;	25:4:485:509	6904708	5	True				
ANR	6904741	IdentifierDecl	* splitkey = NULL		6904708	0					
ANR	6904742	IdentifierDeclType	uint8_t *		6904708	0					
ANR	6904743	Identifier	splitkey		6904708	1					
ANR	6904744	AssignmentExpression	* splitkey = NULL		6904708	2		=			
ANR	6904745	Identifier	NULL		6904708	0					
ANR	6904746	Identifier	NULL		6904708	1					
ANR	6904747	IdentifierDeclStatement	size_t splitkeylen = 0 ;	27:4:516:538	6904708	6	True				
ANR	6904748	IdentifierDecl	splitkeylen = 0		6904708	0					
ANR	6904749	IdentifierDeclType	size_t		6904708	0					
ANR	6904750	Identifier	splitkeylen		6904708	1					
ANR	6904751	AssignmentExpression	splitkeylen = 0		6904708	2		=			
ANR	6904752	Identifier	splitkeylen		6904708	0					
ANR	6904753	PrimaryExpression	0		6904708	1					
ANR	6904754	IdentifierDeclStatement	size_t i ;	29:4:545:553	6904708	7	True				
ANR	6904755	IdentifierDecl	i		6904708	0					
ANR	6904756	IdentifierDeclType	size_t		6904708	0					
ANR	6904757	Identifier	i		6904708	1					
ANR	6904758	IdentifierDeclStatement	QCryptoCipher * cipher = NULL ;	31:4:560:588	6904708	8	True				
ANR	6904759	IdentifierDecl	* cipher = NULL		6904708	0					
ANR	6904760	IdentifierDeclType	QCryptoCipher *		6904708	0					
ANR	6904761	Identifier	cipher		6904708	1					
ANR	6904762	AssignmentExpression	* cipher = NULL		6904708	2		=			
ANR	6904763	Identifier	NULL		6904708	0					
ANR	6904764	Identifier	NULL		6904708	1					
ANR	6904765	IdentifierDeclStatement	QCryptoIVGen * ivgen = NULL ;	33:4:595:621	6904708	9	True				
ANR	6904766	IdentifierDecl	* ivgen = NULL		6904708	0					
ANR	6904767	IdentifierDeclType	QCryptoIVGen *		6904708	0					
ANR	6904768	Identifier	ivgen		6904708	1					
ANR	6904769	AssignmentExpression	* ivgen = NULL		6904708	2		=			
ANR	6904770	Identifier	NULL		6904708	0					
ANR	6904771	Identifier	NULL		6904708	1					
ANR	6904772	IdentifierDeclStatement	char * password ;	35:4:628:642	6904708	10	True				
ANR	6904773	IdentifierDecl	* password		6904708	0					
ANR	6904774	IdentifierDeclType	char *		6904708	0					
ANR	6904775	Identifier	password		6904708	1					
ANR	6904776	IdentifierDeclStatement	const char * cipher_alg ;	37:4:649:671	6904708	11	True				
ANR	6904777	IdentifierDecl	* cipher_alg		6904708	0					
ANR	6904778	IdentifierDeclType	const char *		6904708	0					
ANR	6904779	Identifier	cipher_alg		6904708	1					
ANR	6904780	IdentifierDeclStatement	const char * cipher_mode ;	39:4:678:701	6904708	12	True				
ANR	6904781	IdentifierDecl	* cipher_mode		6904708	0					
ANR	6904782	IdentifierDeclType	const char *		6904708	0					
ANR	6904783	Identifier	cipher_mode		6904708	1					
ANR	6904784	IdentifierDeclStatement	const char * ivgen_alg ;	41:4:708:729	6904708	13	True				
ANR	6904785	IdentifierDecl	* ivgen_alg		6904708	0					
ANR	6904786	IdentifierDeclType	const char *		6904708	0					
ANR	6904787	Identifier	ivgen_alg		6904708	1					
ANR	6904788	IdentifierDeclStatement	const char * ivgen_hash_alg = NULL ;	43:4:736:769	6904708	14	True				
ANR	6904789	IdentifierDecl	* ivgen_hash_alg = NULL		6904708	0					
ANR	6904790	IdentifierDeclType	const char *		6904708	0					
ANR	6904791	Identifier	ivgen_hash_alg		6904708	1					
ANR	6904792	AssignmentExpression	* ivgen_hash_alg = NULL		6904708	2		=			
ANR	6904793	Identifier	NULL		6904708	0					
ANR	6904794	Identifier	NULL		6904708	1					
ANR	6904795	IdentifierDeclStatement	const char * hash_alg ;	45:4:776:796	6904708	15	True				
ANR	6904796	IdentifierDecl	* hash_alg		6904708	0					
ANR	6904797	IdentifierDeclType	const char *		6904708	0					
ANR	6904798	Identifier	hash_alg		6904708	1					
ANR	6904799	IdentifierDeclStatement	char * cipher_mode_spec = NULL ;	47:4:803:832	6904708	16	True				
ANR	6904800	IdentifierDecl	* cipher_mode_spec = NULL		6904708	0					
ANR	6904801	IdentifierDeclType	char *		6904708	0					
ANR	6904802	Identifier	cipher_mode_spec		6904708	1					
ANR	6904803	AssignmentExpression	* cipher_mode_spec = NULL		6904708	2		=			
ANR	6904804	Identifier	NULL		6904708	0					
ANR	6904805	Identifier	NULL		6904708	1					
ANR	6904806	IdentifierDeclStatement	QCryptoCipherAlgorithm ivcipheralg = 0 ;	49:4:839:877	6904708	17	True				
ANR	6904807	IdentifierDecl	ivcipheralg = 0		6904708	0					
ANR	6904808	IdentifierDeclType	QCryptoCipherAlgorithm		6904708	0					
ANR	6904809	Identifier	ivcipheralg		6904708	1					
ANR	6904810	AssignmentExpression	ivcipheralg = 0		6904708	2		=			
ANR	6904811	Identifier	ivcipheralg		6904708	0					
ANR	6904812	PrimaryExpression	0		6904708	1					
ANR	6904813	IdentifierDeclStatement	uint64_t iters ;	51:4:884:898	6904708	18	True				
ANR	6904814	IdentifierDecl	iters		6904708	0					
ANR	6904815	IdentifierDeclType	uint64_t		6904708	0					
ANR	6904816	Identifier	iters		6904708	1					
ANR	6904817	ExpressionStatement	"memcpy ( & luks_opts , & options -> u . luks , sizeof ( luks_opts ) )"	55:4:907:962	6904708	19	True				
ANR	6904818	CallExpression	"memcpy ( & luks_opts , & options -> u . luks , sizeof ( luks_opts ) )"		6904708	0					
ANR	6904819	Callee	memcpy		6904708	0					
ANR	6904820	Identifier	memcpy		6904708	0					
ANR	6904821	ArgumentList	& luks_opts		6904708	1					
ANR	6904822	Argument	& luks_opts		6904708	0					
ANR	6904823	UnaryOperationExpression	& luks_opts		6904708	0					
ANR	6904824	UnaryOperator	&		6904708	0					
ANR	6904825	Identifier	luks_opts		6904708	1					
ANR	6904826	Argument	& options -> u . luks		6904708	1					
ANR	6904827	UnaryOperationExpression	& options -> u . luks		6904708	0					
ANR	6904828	UnaryOperator	&		6904708	0					
ANR	6904829	MemberAccess	options -> u . luks		6904708	1					
ANR	6904830	PtrMemberAccess	options -> u		6904708	0					
ANR	6904831	Identifier	options		6904708	0					
ANR	6904832	Identifier	u		6904708	1					
ANR	6904833	Identifier	luks		6904708	1					
ANR	6904834	Argument	sizeof ( luks_opts )		6904708	2					
ANR	6904835	SizeofExpression	sizeof ( luks_opts )		6904708	0					
ANR	6904836	Sizeof	sizeof		6904708	0					
ANR	6904837	SizeofOperand	luks_opts		6904708	1					
ANR	6904838	IfStatement	if ( ! luks_opts . has_iter_time )		6904708	20					
ANR	6904839	Condition	! luks_opts . has_iter_time	57:8:973:996	6904708	0	True				
ANR	6904840	UnaryOperationExpression	! luks_opts . has_iter_time		6904708	0					
ANR	6904841	UnaryOperator	!		6904708	0					
ANR	6904842	MemberAccess	luks_opts . has_iter_time		6904708	1					
ANR	6904843	Identifier	luks_opts		6904708	0					
ANR	6904844	Identifier	has_iter_time		6904708	1					
ANR	6904845	CompoundStatement		45:34:687:687	6904708	1					
ANR	6904846	ExpressionStatement	luks_opts . iter_time = 2000	59:8:1010:1036	6904708	0	True				
ANR	6904847	AssignmentExpression	luks_opts . iter_time = 2000		6904708	0		=			
ANR	6904848	MemberAccess	luks_opts . iter_time		6904708	0					
ANR	6904849	Identifier	luks_opts		6904708	0					
ANR	6904850	Identifier	iter_time		6904708	1					
ANR	6904851	PrimaryExpression	2000		6904708	1					
ANR	6904852	IfStatement	if ( ! luks_opts . has_cipher_alg )		6904708	21					
ANR	6904853	Condition	! luks_opts . has_cipher_alg	63:8:1054:1078	6904708	0	True				
ANR	6904854	UnaryOperationExpression	! luks_opts . has_cipher_alg		6904708	0					
ANR	6904855	UnaryOperator	!		6904708	0					
ANR	6904856	MemberAccess	luks_opts . has_cipher_alg		6904708	1					
ANR	6904857	Identifier	luks_opts		6904708	0					
ANR	6904858	Identifier	has_cipher_alg		6904708	1					
ANR	6904859	CompoundStatement		51:35:769:769	6904708	1					
ANR	6904860	ExpressionStatement	luks_opts . cipher_alg = QCRYPTO_CIPHER_ALG_AES_256	65:8:1092:1141	6904708	0	True				
ANR	6904861	AssignmentExpression	luks_opts . cipher_alg = QCRYPTO_CIPHER_ALG_AES_256		6904708	0		=			
ANR	6904862	MemberAccess	luks_opts . cipher_alg		6904708	0					
ANR	6904863	Identifier	luks_opts		6904708	0					
ANR	6904864	Identifier	cipher_alg		6904708	1					
ANR	6904865	Identifier	QCRYPTO_CIPHER_ALG_AES_256		6904708	1					
ANR	6904866	IfStatement	if ( ! luks_opts . has_cipher_mode )		6904708	22					
ANR	6904867	Condition	! luks_opts . has_cipher_mode	69:8:1159:1184	6904708	0	True				
ANR	6904868	UnaryOperationExpression	! luks_opts . has_cipher_mode		6904708	0					
ANR	6904869	UnaryOperator	!		6904708	0					
ANR	6904870	MemberAccess	luks_opts . has_cipher_mode		6904708	1					
ANR	6904871	Identifier	luks_opts		6904708	0					
ANR	6904872	Identifier	has_cipher_mode		6904708	1					
ANR	6904873	CompoundStatement		57:36:875:875	6904708	1					
ANR	6904874	ExpressionStatement	luks_opts . cipher_mode = QCRYPTO_CIPHER_MODE_XTS	71:8:1198:1245	6904708	0	True				
ANR	6904875	AssignmentExpression	luks_opts . cipher_mode = QCRYPTO_CIPHER_MODE_XTS		6904708	0		=			
ANR	6904876	MemberAccess	luks_opts . cipher_mode		6904708	0					
ANR	6904877	Identifier	luks_opts		6904708	0					
ANR	6904878	Identifier	cipher_mode		6904708	1					
ANR	6904879	Identifier	QCRYPTO_CIPHER_MODE_XTS		6904708	1					
ANR	6904880	IfStatement	if ( ! luks_opts . has_ivgen_alg )		6904708	23					
ANR	6904881	Condition	! luks_opts . has_ivgen_alg	75:8:1263:1286	6904708	0	True				
ANR	6904882	UnaryOperationExpression	! luks_opts . has_ivgen_alg		6904708	0					
ANR	6904883	UnaryOperator	!		6904708	0					
ANR	6904884	MemberAccess	luks_opts . has_ivgen_alg		6904708	1					
ANR	6904885	Identifier	luks_opts		6904708	0					
ANR	6904886	Identifier	has_ivgen_alg		6904708	1					
ANR	6904887	CompoundStatement		63:34:977:977	6904708	1					
ANR	6904888	ExpressionStatement	luks_opts . ivgen_alg = QCRYPTO_IVGEN_ALG_PLAIN64	77:8:1300:1347	6904708	0	True				
ANR	6904889	AssignmentExpression	luks_opts . ivgen_alg = QCRYPTO_IVGEN_ALG_PLAIN64		6904708	0		=			
ANR	6904890	MemberAccess	luks_opts . ivgen_alg		6904708	0					
ANR	6904891	Identifier	luks_opts		6904708	0					
ANR	6904892	Identifier	ivgen_alg		6904708	1					
ANR	6904893	Identifier	QCRYPTO_IVGEN_ALG_PLAIN64		6904708	1					
ANR	6904894	IfStatement	if ( ! luks_opts . has_hash_alg )		6904708	24					
ANR	6904895	Condition	! luks_opts . has_hash_alg	81:8:1365:1387	6904708	0	True				
ANR	6904896	UnaryOperationExpression	! luks_opts . has_hash_alg		6904708	0					
ANR	6904897	UnaryOperator	!		6904708	0					
ANR	6904898	MemberAccess	luks_opts . has_hash_alg		6904708	1					
ANR	6904899	Identifier	luks_opts		6904708	0					
ANR	6904900	Identifier	has_hash_alg		6904708	1					
ANR	6904901	CompoundStatement		69:33:1078:1078	6904708	1					
ANR	6904902	ExpressionStatement	luks_opts . hash_alg = QCRYPTO_HASH_ALG_SHA256	83:8:1401:1445	6904708	0	True				
ANR	6904903	AssignmentExpression	luks_opts . hash_alg = QCRYPTO_HASH_ALG_SHA256		6904708	0		=			
ANR	6904904	MemberAccess	luks_opts . hash_alg		6904708	0					
ANR	6904905	Identifier	luks_opts		6904708	0					
ANR	6904906	Identifier	hash_alg		6904708	1					
ANR	6904907	Identifier	QCRYPTO_HASH_ALG_SHA256		6904708	1					
ANR	6904908	IfStatement	if ( luks_opts . ivgen_alg == QCRYPTO_IVGEN_ALG_ESSIV )		6904708	25					
ANR	6904909	Condition	luks_opts . ivgen_alg == QCRYPTO_IVGEN_ALG_ESSIV	87:8:1463:1508	6904708	0	True				
ANR	6904910	EqualityExpression	luks_opts . ivgen_alg == QCRYPTO_IVGEN_ALG_ESSIV		6904708	0		==			
ANR	6904911	MemberAccess	luks_opts . ivgen_alg		6904708	0					
ANR	6904912	Identifier	luks_opts		6904708	0					
ANR	6904913	Identifier	ivgen_alg		6904708	1					
ANR	6904914	Identifier	QCRYPTO_IVGEN_ALG_ESSIV		6904708	1					
ANR	6904915	CompoundStatement		75:56:1199:1199	6904708	1					
ANR	6904916	IfStatement	if ( ! luks_opts . has_ivgen_hash_alg )		6904708	0					
ANR	6904917	Condition	! luks_opts . has_ivgen_hash_alg	89:12:1526:1554	6904708	0	True				
ANR	6904918	UnaryOperationExpression	! luks_opts . has_ivgen_hash_alg		6904708	0					
ANR	6904919	UnaryOperator	!		6904708	0					
ANR	6904920	MemberAccess	luks_opts . has_ivgen_hash_alg		6904708	1					
ANR	6904921	Identifier	luks_opts		6904708	0					
ANR	6904922	Identifier	has_ivgen_hash_alg		6904708	1					
ANR	6904923	CompoundStatement		77:43:1245:1245	6904708	1					
ANR	6904924	ExpressionStatement	luks_opts . ivgen_hash_alg = QCRYPTO_HASH_ALG_SHA256	91:12:1572:1622	6904708	0	True				
ANR	6904925	AssignmentExpression	luks_opts . ivgen_hash_alg = QCRYPTO_HASH_ALG_SHA256		6904708	0		=			
ANR	6904926	MemberAccess	luks_opts . ivgen_hash_alg		6904708	0					
ANR	6904927	Identifier	luks_opts		6904708	0					
ANR	6904928	Identifier	ivgen_hash_alg		6904708	1					
ANR	6904929	Identifier	QCRYPTO_HASH_ALG_SHA256		6904708	1					
ANR	6904930	ExpressionStatement	luks_opts . has_ivgen_hash_alg = true	93:12:1637:1672	6904708	1	True				
ANR	6904931	AssignmentExpression	luks_opts . has_ivgen_hash_alg = true		6904708	0		=			
ANR	6904932	MemberAccess	luks_opts . has_ivgen_hash_alg		6904708	0					
ANR	6904933	Identifier	luks_opts		6904708	0					
ANR	6904934	Identifier	has_ivgen_hash_alg		6904708	1					
ANR	6904935	Identifier	true		6904708	1					
ANR	6904936	IfStatement	if ( ! options -> u . luks . key_secret )		6904708	26					
ANR	6904937	Condition	! options -> u . luks . key_secret	107:8:1893:1919	6904708	0	True				
ANR	6904938	UnaryOperationExpression	! options -> u . luks . key_secret		6904708	0					
ANR	6904939	UnaryOperator	!		6904708	0					
ANR	6904940	MemberAccess	options -> u . luks . key_secret		6904708	1					
ANR	6904941	MemberAccess	options -> u . luks		6904708	0					
ANR	6904942	PtrMemberAccess	options -> u		6904708	0					
ANR	6904943	Identifier	options		6904708	0					
ANR	6904944	Identifier	u		6904708	1					
ANR	6904945	Identifier	luks		6904708	1					
ANR	6904946	Identifier	key_secret		6904708	1					
ANR	6904947	CompoundStatement		95:37:1610:1610	6904708	1					
ANR	6904948	ExpressionStatement	"error_setg ( errp , ""Parameter 'key-secret' is required for cipher"" )"	109:8:1933:1998	6904708	0	True				
ANR	6904949	CallExpression	"error_setg ( errp , ""Parameter 'key-secret' is required for cipher"" )"		6904708	0					
ANR	6904950	Callee	error_setg		6904708	0					
ANR	6904951	Identifier	error_setg		6904708	0					
ANR	6904952	ArgumentList	errp		6904708	1					
ANR	6904953	Argument	errp		6904708	0					
ANR	6904954	Identifier	errp		6904708	0					
ANR	6904955	Argument	"""Parameter 'key-secret' is required for cipher"""		6904708	1					
ANR	6904956	PrimaryExpression	"""Parameter 'key-secret' is required for cipher"""		6904708	0					
ANR	6904957	ReturnStatement	return - 1 ;	111:8:2009:2018	6904708	1	True				
ANR	6904958	UnaryOperationExpression	- 1		6904708	0					
ANR	6904959	UnaryOperator	-		6904708	0					
ANR	6904960	PrimaryExpression	1		6904708	1					
ANR	6904961	ExpressionStatement	"password = qcrypto_secret_lookup_as_utf8 ( luks_opts . key_secret , errp )"	115:4:2032:2100	6904708	27	True				
ANR	6904962	AssignmentExpression	"password = qcrypto_secret_lookup_as_utf8 ( luks_opts . key_secret , errp )"		6904708	0		=			
ANR	6904963	Identifier	password		6904708	0					
ANR	6904964	CallExpression	"qcrypto_secret_lookup_as_utf8 ( luks_opts . key_secret , errp )"		6904708	1					
ANR	6904965	Callee	qcrypto_secret_lookup_as_utf8		6904708	0					
ANR	6904966	Identifier	qcrypto_secret_lookup_as_utf8		6904708	0					
ANR	6904967	ArgumentList	luks_opts . key_secret		6904708	1					
ANR	6904968	Argument	luks_opts . key_secret		6904708	0					
ANR	6904969	MemberAccess	luks_opts . key_secret		6904708	0					
ANR	6904970	Identifier	luks_opts		6904708	0					
ANR	6904971	Identifier	key_secret		6904708	1					
ANR	6904972	Argument	errp		6904708	1					
ANR	6904973	Identifier	errp		6904708	0					
ANR	6904974	IfStatement	if ( ! password )		6904708	28					
ANR	6904975	Condition	! password	117:8:2111:2119	6904708	0	True				
ANR	6904976	UnaryOperationExpression	! password		6904708	0					
ANR	6904977	UnaryOperator	!		6904708	0					
ANR	6904978	Identifier	password		6904708	1					
ANR	6904979	CompoundStatement		105:19:1810:1810	6904708	1					
ANR	6904980	ReturnStatement	return - 1 ;	119:8:2133:2142	6904708	0	True				
ANR	6904981	UnaryOperationExpression	- 1		6904708	0					
ANR	6904982	UnaryOperator	-		6904708	0					
ANR	6904983	PrimaryExpression	1		6904708	1					
ANR	6904984	ExpressionStatement	"luks = g_new0 ( QCryptoBlockLUKS , 1 )"	125:4:2158:2192	6904708	29	True				
ANR	6904985	AssignmentExpression	"luks = g_new0 ( QCryptoBlockLUKS , 1 )"		6904708	0		=			
ANR	6904986	Identifier	luks		6904708	0					
ANR	6904987	CallExpression	"g_new0 ( QCryptoBlockLUKS , 1 )"		6904708	1					
ANR	6904988	Callee	g_new0		6904708	0					
ANR	6904989	Identifier	g_new0		6904708	0					
ANR	6904990	ArgumentList	QCryptoBlockLUKS		6904708	1					
ANR	6904991	Argument	QCryptoBlockLUKS		6904708	0					
ANR	6904992	Identifier	QCryptoBlockLUKS		6904708	0					
ANR	6904993	Argument	1		6904708	1					
ANR	6904994	PrimaryExpression	1		6904708	0					
ANR	6904995	ExpressionStatement	block -> opaque = luks	127:4:2199:2219	6904708	30	True				
ANR	6904996	AssignmentExpression	block -> opaque = luks		6904708	0		=			
ANR	6904997	PtrMemberAccess	block -> opaque		6904708	0					
ANR	6904998	Identifier	block		6904708	0					
ANR	6904999	Identifier	opaque		6904708	1					
ANR	6905000	Identifier	luks		6904708	1					
ANR	6905001	ExpressionStatement	"memcpy ( luks -> header . magic , qcrypto_block_luks_magic , QCRYPTO_BLOCK_LUKS_MAGIC_LEN )"	131:4:2228:2322	6904708	31	True				
ANR	6905002	CallExpression	"memcpy ( luks -> header . magic , qcrypto_block_luks_magic , QCRYPTO_BLOCK_LUKS_MAGIC_LEN )"		6904708	0					
ANR	6905003	Callee	memcpy		6904708	0					
ANR	6905004	Identifier	memcpy		6904708	0					
ANR	6905005	ArgumentList	luks -> header . magic		6904708	1					
ANR	6905006	Argument	luks -> header . magic		6904708	0					
ANR	6905007	MemberAccess	luks -> header . magic		6904708	0					
ANR	6905008	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905009	Identifier	luks		6904708	0					
ANR	6905010	Identifier	header		6904708	1					
ANR	6905011	Identifier	magic		6904708	1					
ANR	6905012	Argument	qcrypto_block_luks_magic		6904708	1					
ANR	6905013	Identifier	qcrypto_block_luks_magic		6904708	0					
ANR	6905014	Argument	QCRYPTO_BLOCK_LUKS_MAGIC_LEN		6904708	2					
ANR	6905015	Identifier	QCRYPTO_BLOCK_LUKS_MAGIC_LEN		6904708	0					
ANR	6905016	ExpressionStatement	luks -> header . version = QCRYPTO_BLOCK_LUKS_VERSION	145:4:2495:2544	6904708	32	True				
ANR	6905017	AssignmentExpression	luks -> header . version = QCRYPTO_BLOCK_LUKS_VERSION		6904708	0		=			
ANR	6905018	MemberAccess	luks -> header . version		6904708	0					
ANR	6905019	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905020	Identifier	luks		6904708	0					
ANR	6905021	Identifier	header		6904708	1					
ANR	6905022	Identifier	version		6904708	1					
ANR	6905023	Identifier	QCRYPTO_BLOCK_LUKS_VERSION		6904708	1					
ANR	6905024	ExpressionStatement	qcrypto_block_luks_uuid_gen ( luks -> header . uuid )	147:4:2551:2597	6904708	33	True				
ANR	6905025	CallExpression	qcrypto_block_luks_uuid_gen ( luks -> header . uuid )		6904708	0					
ANR	6905026	Callee	qcrypto_block_luks_uuid_gen		6904708	0					
ANR	6905027	Identifier	qcrypto_block_luks_uuid_gen		6904708	0					
ANR	6905028	ArgumentList	luks -> header . uuid		6904708	1					
ANR	6905029	Argument	luks -> header . uuid		6904708	0					
ANR	6905030	MemberAccess	luks -> header . uuid		6904708	0					
ANR	6905031	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905032	Identifier	luks		6904708	0					
ANR	6905033	Identifier	header		6904708	1					
ANR	6905034	Identifier	uuid		6904708	1					
ANR	6905035	ExpressionStatement	"cipher_alg = qcrypto_block_luks_cipher_alg_lookup ( luks_opts . cipher_alg , errp )"	151:4:2606:2738	6904708	34	True				
ANR	6905036	AssignmentExpression	"cipher_alg = qcrypto_block_luks_cipher_alg_lookup ( luks_opts . cipher_alg , errp )"		6904708	0		=			
ANR	6905037	Identifier	cipher_alg		6904708	0					
ANR	6905038	CallExpression	"qcrypto_block_luks_cipher_alg_lookup ( luks_opts . cipher_alg , errp )"		6904708	1					
ANR	6905039	Callee	qcrypto_block_luks_cipher_alg_lookup		6904708	0					
ANR	6905040	Identifier	qcrypto_block_luks_cipher_alg_lookup		6904708	0					
ANR	6905041	ArgumentList	luks_opts . cipher_alg		6904708	1					
ANR	6905042	Argument	luks_opts . cipher_alg		6904708	0					
ANR	6905043	MemberAccess	luks_opts . cipher_alg		6904708	0					
ANR	6905044	Identifier	luks_opts		6904708	0					
ANR	6905045	Identifier	cipher_alg		6904708	1					
ANR	6905046	Argument	errp		6904708	1					
ANR	6905047	Identifier	errp		6904708	0					
ANR	6905048	IfStatement	if ( ! cipher_alg )		6904708	35					
ANR	6905049	Condition	! cipher_alg	155:8:2749:2759	6904708	0	True				
ANR	6905050	UnaryOperationExpression	! cipher_alg		6904708	0					
ANR	6905051	UnaryOperator	!		6904708	0					
ANR	6905052	Identifier	cipher_alg		6904708	1					
ANR	6905053	CompoundStatement		143:21:2450:2450	6904708	1					
ANR	6905054	GotoStatement	goto error ;	157:8:2773:2783	6904708	0	True				
ANR	6905055	Identifier	error		6904708	0					
ANR	6905056	ExpressionStatement	cipher_mode = QCryptoCipherMode_lookup [ luks_opts . cipher_mode ]	163:4:2799:2860	6904708	36	True				
ANR	6905057	AssignmentExpression	cipher_mode = QCryptoCipherMode_lookup [ luks_opts . cipher_mode ]		6904708	0		=			
ANR	6905058	Identifier	cipher_mode		6904708	0					
ANR	6905059	ArrayIndexing	QCryptoCipherMode_lookup [ luks_opts . cipher_mode ]		6904708	1					
ANR	6905060	Identifier	QCryptoCipherMode_lookup		6904708	0					
ANR	6905061	MemberAccess	luks_opts . cipher_mode		6904708	1					
ANR	6905062	Identifier	luks_opts		6904708	0					
ANR	6905063	Identifier	cipher_mode		6904708	1					
ANR	6905064	ExpressionStatement	ivgen_alg = QCryptoIVGenAlgorithm_lookup [ luks_opts . ivgen_alg ]	165:4:2867:2928	6904708	37	True				
ANR	6905065	AssignmentExpression	ivgen_alg = QCryptoIVGenAlgorithm_lookup [ luks_opts . ivgen_alg ]		6904708	0		=			
ANR	6905066	Identifier	ivgen_alg		6904708	0					
ANR	6905067	ArrayIndexing	QCryptoIVGenAlgorithm_lookup [ luks_opts . ivgen_alg ]		6904708	1					
ANR	6905068	Identifier	QCryptoIVGenAlgorithm_lookup		6904708	0					
ANR	6905069	MemberAccess	luks_opts . ivgen_alg		6904708	1					
ANR	6905070	Identifier	luks_opts		6904708	0					
ANR	6905071	Identifier	ivgen_alg		6904708	1					
ANR	6905072	IfStatement	if ( luks_opts . has_ivgen_hash_alg )		6904708	38					
ANR	6905073	Condition	luks_opts . has_ivgen_hash_alg	167:8:2939:2966	6904708	0	True				
ANR	6905074	MemberAccess	luks_opts . has_ivgen_hash_alg		6904708	0					
ANR	6905075	Identifier	luks_opts		6904708	0					
ANR	6905076	Identifier	has_ivgen_hash_alg		6904708	1					
ANR	6905077	CompoundStatement		155:38:2657:2657	6904708	1					
ANR	6905078	ExpressionStatement	ivgen_hash_alg = QCryptoHashAlgorithm_lookup [ luks_opts . ivgen_hash_alg ]	169:8:2980:3050	6904708	0	True				
ANR	6905079	AssignmentExpression	ivgen_hash_alg = QCryptoHashAlgorithm_lookup [ luks_opts . ivgen_hash_alg ]		6904708	0		=			
ANR	6905080	Identifier	ivgen_hash_alg		6904708	0					
ANR	6905081	ArrayIndexing	QCryptoHashAlgorithm_lookup [ luks_opts . ivgen_hash_alg ]		6904708	1					
ANR	6905082	Identifier	QCryptoHashAlgorithm_lookup		6904708	0					
ANR	6905083	MemberAccess	luks_opts . ivgen_hash_alg		6904708	1					
ANR	6905084	Identifier	luks_opts		6904708	0					
ANR	6905085	Identifier	ivgen_hash_alg		6904708	1					
ANR	6905086	ExpressionStatement	"cipher_mode_spec = g_strdup_printf ( ""%s-%s:%s"" , cipher_mode , ivgen_alg , ivgen_hash_alg )"	171:8:3061:3191	6904708	1	True				
ANR	6905087	AssignmentExpression	"cipher_mode_spec = g_strdup_printf ( ""%s-%s:%s"" , cipher_mode , ivgen_alg , ivgen_hash_alg )"		6904708	0		=			
ANR	6905088	Identifier	cipher_mode_spec		6904708	0					
ANR	6905089	CallExpression	"g_strdup_printf ( ""%s-%s:%s"" , cipher_mode , ivgen_alg , ivgen_hash_alg )"		6904708	1					
ANR	6905090	Callee	g_strdup_printf		6904708	0					
ANR	6905091	Identifier	g_strdup_printf		6904708	0					
ANR	6905092	ArgumentList	"""%s-%s:%s"""		6904708	1					
ANR	6905093	Argument	"""%s-%s:%s"""		6904708	0					
ANR	6905094	PrimaryExpression	"""%s-%s:%s"""		6904708	0					
ANR	6905095	Argument	cipher_mode		6904708	1					
ANR	6905096	Identifier	cipher_mode		6904708	0					
ANR	6905097	Argument	ivgen_alg		6904708	2					
ANR	6905098	Identifier	ivgen_alg		6904708	0					
ANR	6905099	Argument	ivgen_hash_alg		6904708	3					
ANR	6905100	Identifier	ivgen_hash_alg		6904708	0					
ANR	6905101	ElseStatement	else		6904708	0					
ANR	6905102	CompoundStatement		163:11:2893:2893	6904708	0					
ANR	6905103	ExpressionStatement	"cipher_mode_spec = g_strdup_printf ( ""%s-%s"" , cipher_mode , ivgen_alg )"	177:8:3216:3283	6904708	0	True				
ANR	6905104	AssignmentExpression	"cipher_mode_spec = g_strdup_printf ( ""%s-%s"" , cipher_mode , ivgen_alg )"		6904708	0		=			
ANR	6905105	Identifier	cipher_mode_spec		6904708	0					
ANR	6905106	CallExpression	"g_strdup_printf ( ""%s-%s"" , cipher_mode , ivgen_alg )"		6904708	1					
ANR	6905107	Callee	g_strdup_printf		6904708	0					
ANR	6905108	Identifier	g_strdup_printf		6904708	0					
ANR	6905109	ArgumentList	"""%s-%s"""		6904708	1					
ANR	6905110	Argument	"""%s-%s"""		6904708	0					
ANR	6905111	PrimaryExpression	"""%s-%s"""		6904708	0					
ANR	6905112	Argument	cipher_mode		6904708	1					
ANR	6905113	Identifier	cipher_mode		6904708	0					
ANR	6905114	Argument	ivgen_alg		6904708	2					
ANR	6905115	Identifier	ivgen_alg		6904708	0					
ANR	6905116	ExpressionStatement	hash_alg = QCryptoHashAlgorithm_lookup [ luks_opts . hash_alg ]	181:4:3297:3355	6904708	39	True				
ANR	6905117	AssignmentExpression	hash_alg = QCryptoHashAlgorithm_lookup [ luks_opts . hash_alg ]		6904708	0		=			
ANR	6905118	Identifier	hash_alg		6904708	0					
ANR	6905119	ArrayIndexing	QCryptoHashAlgorithm_lookup [ luks_opts . hash_alg ]		6904708	1					
ANR	6905120	Identifier	QCryptoHashAlgorithm_lookup		6904708	0					
ANR	6905121	MemberAccess	luks_opts . hash_alg		6904708	1					
ANR	6905122	Identifier	luks_opts		6904708	0					
ANR	6905123	Identifier	hash_alg		6904708	1					
ANR	6905124	IfStatement	if ( strlen ( cipher_alg ) >= QCRYPTO_BLOCK_LUKS_CIPHER_NAME_LEN )		6904708	40					
ANR	6905125	Condition	strlen ( cipher_alg ) >= QCRYPTO_BLOCK_LUKS_CIPHER_NAME_LEN	187:8:3370:3425	6904708	0	True				
ANR	6905126	RelationalExpression	strlen ( cipher_alg ) >= QCRYPTO_BLOCK_LUKS_CIPHER_NAME_LEN		6904708	0		>=			
ANR	6905127	CallExpression	strlen ( cipher_alg )		6904708	0					
ANR	6905128	Callee	strlen		6904708	0					
ANR	6905129	Identifier	strlen		6904708	0					
ANR	6905130	ArgumentList	cipher_alg		6904708	1					
ANR	6905131	Argument	cipher_alg		6904708	0					
ANR	6905132	Identifier	cipher_alg		6904708	0					
ANR	6905133	Identifier	QCRYPTO_BLOCK_LUKS_CIPHER_NAME_LEN		6904708	1					
ANR	6905134	CompoundStatement		175:66:3116:3116	6904708	1					
ANR	6905135	ExpressionStatement	"error_setg ( errp , ""Cipher name '%s' is too long for LUKS header"" , cipher_alg )"	189:8:3439:3535	6904708	0	True				
ANR	6905136	CallExpression	"error_setg ( errp , ""Cipher name '%s' is too long for LUKS header"" , cipher_alg )"		6904708	0					
ANR	6905137	Callee	error_setg		6904708	0					
ANR	6905138	Identifier	error_setg		6904708	0					
ANR	6905139	ArgumentList	errp		6904708	1					
ANR	6905140	Argument	errp		6904708	0					
ANR	6905141	Identifier	errp		6904708	0					
ANR	6905142	Argument	"""Cipher name '%s' is too long for LUKS header"""		6904708	1					
ANR	6905143	PrimaryExpression	"""Cipher name '%s' is too long for LUKS header"""		6904708	0					
ANR	6905144	Argument	cipher_alg		6904708	2					
ANR	6905145	Identifier	cipher_alg		6904708	0					
ANR	6905146	GotoStatement	goto error ;	193:8:3546:3556	6904708	1	True				
ANR	6905147	Identifier	error		6904708	0					
ANR	6905148	IfStatement	if ( strlen ( cipher_mode_spec ) >= QCRYPTO_BLOCK_LUKS_CIPHER_MODE_LEN )		6904708	41					
ANR	6905149	Condition	strlen ( cipher_mode_spec ) >= QCRYPTO_BLOCK_LUKS_CIPHER_MODE_LEN	197:8:3574:3635	6904708	0	True				
ANR	6905150	RelationalExpression	strlen ( cipher_mode_spec ) >= QCRYPTO_BLOCK_LUKS_CIPHER_MODE_LEN		6904708	0		>=			
ANR	6905151	CallExpression	strlen ( cipher_mode_spec )		6904708	0					
ANR	6905152	Callee	strlen		6904708	0					
ANR	6905153	Identifier	strlen		6904708	0					
ANR	6905154	ArgumentList	cipher_mode_spec		6904708	1					
ANR	6905155	Argument	cipher_mode_spec		6904708	0					
ANR	6905156	Identifier	cipher_mode_spec		6904708	0					
ANR	6905157	Identifier	QCRYPTO_BLOCK_LUKS_CIPHER_MODE_LEN		6904708	1					
ANR	6905158	CompoundStatement		185:72:3326:3326	6904708	1					
ANR	6905159	ExpressionStatement	"error_setg ( errp , ""Cipher mode '%s' is too long for LUKS header"" , cipher_mode_spec )"	199:8:3649:3751	6904708	0	True				
ANR	6905160	CallExpression	"error_setg ( errp , ""Cipher mode '%s' is too long for LUKS header"" , cipher_mode_spec )"		6904708	0					
ANR	6905161	Callee	error_setg		6904708	0					
ANR	6905162	Identifier	error_setg		6904708	0					
ANR	6905163	ArgumentList	errp		6904708	1					
ANR	6905164	Argument	errp		6904708	0					
ANR	6905165	Identifier	errp		6904708	0					
ANR	6905166	Argument	"""Cipher mode '%s' is too long for LUKS header"""		6904708	1					
ANR	6905167	PrimaryExpression	"""Cipher mode '%s' is too long for LUKS header"""		6904708	0					
ANR	6905168	Argument	cipher_mode_spec		6904708	2					
ANR	6905169	Identifier	cipher_mode_spec		6904708	0					
ANR	6905170	GotoStatement	goto error ;	203:8:3762:3772	6904708	1	True				
ANR	6905171	Identifier	error		6904708	0					
ANR	6905172	IfStatement	if ( strlen ( hash_alg ) >= QCRYPTO_BLOCK_LUKS_HASH_SPEC_LEN )		6904708	42					
ANR	6905173	Condition	strlen ( hash_alg ) >= QCRYPTO_BLOCK_LUKS_HASH_SPEC_LEN	207:8:3790:3841	6904708	0	True				
ANR	6905174	RelationalExpression	strlen ( hash_alg ) >= QCRYPTO_BLOCK_LUKS_HASH_SPEC_LEN		6904708	0		>=			
ANR	6905175	CallExpression	strlen ( hash_alg )		6904708	0					
ANR	6905176	Callee	strlen		6904708	0					
ANR	6905177	Identifier	strlen		6904708	0					
ANR	6905178	ArgumentList	hash_alg		6904708	1					
ANR	6905179	Argument	hash_alg		6904708	0					
ANR	6905180	Identifier	hash_alg		6904708	0					
ANR	6905181	Identifier	QCRYPTO_BLOCK_LUKS_HASH_SPEC_LEN		6904708	1					
ANR	6905182	CompoundStatement		195:62:3532:3532	6904708	1					
ANR	6905183	ExpressionStatement	"error_setg ( errp , ""Hash name '%s' is too long for LUKS header"" , hash_alg )"	209:8:3855:3947	6904708	0	True				
ANR	6905184	CallExpression	"error_setg ( errp , ""Hash name '%s' is too long for LUKS header"" , hash_alg )"		6904708	0					
ANR	6905185	Callee	error_setg		6904708	0					
ANR	6905186	Identifier	error_setg		6904708	0					
ANR	6905187	ArgumentList	errp		6904708	1					
ANR	6905188	Argument	errp		6904708	0					
ANR	6905189	Identifier	errp		6904708	0					
ANR	6905190	Argument	"""Hash name '%s' is too long for LUKS header"""		6904708	1					
ANR	6905191	PrimaryExpression	"""Hash name '%s' is too long for LUKS header"""		6904708	0					
ANR	6905192	Argument	hash_alg		6904708	2					
ANR	6905193	Identifier	hash_alg		6904708	0					
ANR	6905194	GotoStatement	goto error ;	213:8:3958:3968	6904708	1	True				
ANR	6905195	Identifier	error		6904708	0					
ANR	6905196	IfStatement	if ( luks_opts . ivgen_alg == QCRYPTO_IVGEN_ALG_ESSIV )		6904708	43					
ANR	6905197	Condition	luks_opts . ivgen_alg == QCRYPTO_IVGEN_ALG_ESSIV	219:8:3988:4033	6904708	0	True				
ANR	6905198	EqualityExpression	luks_opts . ivgen_alg == QCRYPTO_IVGEN_ALG_ESSIV		6904708	0		==			
ANR	6905199	MemberAccess	luks_opts . ivgen_alg		6904708	0					
ANR	6905200	Identifier	luks_opts		6904708	0					
ANR	6905201	Identifier	ivgen_alg		6904708	1					
ANR	6905202	Identifier	QCRYPTO_IVGEN_ALG_ESSIV		6904708	1					
ANR	6905203	CompoundStatement		207:56:3724:3724	6904708	1					
ANR	6905204	ExpressionStatement	"ivcipheralg = qcrypto_block_luks_essiv_cipher ( luks_opts . cipher_alg , luks_opts . ivgen_hash_alg , & local_err )"	221:8:4047:4262	6904708	0	True				
ANR	6905205	AssignmentExpression	"ivcipheralg = qcrypto_block_luks_essiv_cipher ( luks_opts . cipher_alg , luks_opts . ivgen_hash_alg , & local_err )"		6904708	0		=			
ANR	6905206	Identifier	ivcipheralg		6904708	0					
ANR	6905207	CallExpression	"qcrypto_block_luks_essiv_cipher ( luks_opts . cipher_alg , luks_opts . ivgen_hash_alg , & local_err )"		6904708	1					
ANR	6905208	Callee	qcrypto_block_luks_essiv_cipher		6904708	0					
ANR	6905209	Identifier	qcrypto_block_luks_essiv_cipher		6904708	0					
ANR	6905210	ArgumentList	luks_opts . cipher_alg		6904708	1					
ANR	6905211	Argument	luks_opts . cipher_alg		6904708	0					
ANR	6905212	MemberAccess	luks_opts . cipher_alg		6904708	0					
ANR	6905213	Identifier	luks_opts		6904708	0					
ANR	6905214	Identifier	cipher_alg		6904708	1					
ANR	6905215	Argument	luks_opts . ivgen_hash_alg		6904708	1					
ANR	6905216	MemberAccess	luks_opts . ivgen_hash_alg		6904708	0					
ANR	6905217	Identifier	luks_opts		6904708	0					
ANR	6905218	Identifier	ivgen_hash_alg		6904708	1					
ANR	6905219	Argument	& local_err		6904708	2					
ANR	6905220	UnaryOperationExpression	& local_err		6904708	0					
ANR	6905221	UnaryOperator	&		6904708	0					
ANR	6905222	Identifier	local_err		6904708	1					
ANR	6905223	IfStatement	if ( local_err )		6904708	1					
ANR	6905224	Condition	local_err	227:12:4277:4285	6904708	0	True				
ANR	6905225	Identifier	local_err		6904708	0					
ANR	6905226	CompoundStatement		215:23:3976:3976	6904708	1					
ANR	6905227	ExpressionStatement	"error_propagate ( errp , local_err )"	229:12:4303:4335	6904708	0	True				
ANR	6905228	CallExpression	"error_propagate ( errp , local_err )"		6904708	0					
ANR	6905229	Callee	error_propagate		6904708	0					
ANR	6905230	Identifier	error_propagate		6904708	0					
ANR	6905231	ArgumentList	errp		6904708	1					
ANR	6905232	Argument	errp		6904708	0					
ANR	6905233	Identifier	errp		6904708	0					
ANR	6905234	Argument	local_err		6904708	1					
ANR	6905235	Identifier	local_err		6904708	0					
ANR	6905236	GotoStatement	goto error ;	231:12:4350:4360	6904708	1	True				
ANR	6905237	Identifier	error		6904708	0					
ANR	6905238	ElseStatement	else		6904708	0					
ANR	6905239	CompoundStatement		223:11:4073:4073	6904708	0					
ANR	6905240	ExpressionStatement	ivcipheralg = luks_opts . cipher_alg	237:8:4396:4430	6904708	0	True				
ANR	6905241	AssignmentExpression	ivcipheralg = luks_opts . cipher_alg		6904708	0		=			
ANR	6905242	Identifier	ivcipheralg		6904708	0					
ANR	6905243	MemberAccess	luks_opts . cipher_alg		6904708	1					
ANR	6905244	Identifier	luks_opts		6904708	0					
ANR	6905245	Identifier	cipher_alg		6904708	1					
ANR	6905246	ExpressionStatement	"strcpy ( luks -> header . cipher_name , cipher_alg )"	243:4:4446:4490	6904708	44	True				
ANR	6905247	CallExpression	"strcpy ( luks -> header . cipher_name , cipher_alg )"		6904708	0					
ANR	6905248	Callee	strcpy		6904708	0					
ANR	6905249	Identifier	strcpy		6904708	0					
ANR	6905250	ArgumentList	luks -> header . cipher_name		6904708	1					
ANR	6905251	Argument	luks -> header . cipher_name		6904708	0					
ANR	6905252	MemberAccess	luks -> header . cipher_name		6904708	0					
ANR	6905253	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905254	Identifier	luks		6904708	0					
ANR	6905255	Identifier	header		6904708	1					
ANR	6905256	Identifier	cipher_name		6904708	1					
ANR	6905257	Argument	cipher_alg		6904708	1					
ANR	6905258	Identifier	cipher_alg		6904708	0					
ANR	6905259	ExpressionStatement	"strcpy ( luks -> header . cipher_mode , cipher_mode_spec )"	245:4:4497:4547	6904708	45	True				
ANR	6905260	CallExpression	"strcpy ( luks -> header . cipher_mode , cipher_mode_spec )"		6904708	0					
ANR	6905261	Callee	strcpy		6904708	0					
ANR	6905262	Identifier	strcpy		6904708	0					
ANR	6905263	ArgumentList	luks -> header . cipher_mode		6904708	1					
ANR	6905264	Argument	luks -> header . cipher_mode		6904708	0					
ANR	6905265	MemberAccess	luks -> header . cipher_mode		6904708	0					
ANR	6905266	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905267	Identifier	luks		6904708	0					
ANR	6905268	Identifier	header		6904708	1					
ANR	6905269	Identifier	cipher_mode		6904708	1					
ANR	6905270	Argument	cipher_mode_spec		6904708	1					
ANR	6905271	Identifier	cipher_mode_spec		6904708	0					
ANR	6905272	ExpressionStatement	"strcpy ( luks -> header . hash_spec , hash_alg )"	247:4:4554:4594	6904708	46	True				
ANR	6905273	CallExpression	"strcpy ( luks -> header . hash_spec , hash_alg )"		6904708	0					
ANR	6905274	Callee	strcpy		6904708	0					
ANR	6905275	Identifier	strcpy		6904708	0					
ANR	6905276	ArgumentList	luks -> header . hash_spec		6904708	1					
ANR	6905277	Argument	luks -> header . hash_spec		6904708	0					
ANR	6905278	MemberAccess	luks -> header . hash_spec		6904708	0					
ANR	6905279	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905280	Identifier	luks		6904708	0					
ANR	6905281	Identifier	header		6904708	1					
ANR	6905282	Identifier	hash_spec		6904708	1					
ANR	6905283	Argument	hash_alg		6904708	1					
ANR	6905284	Identifier	hash_alg		6904708	0					
ANR	6905285	ExpressionStatement	luks -> header . key_bytes = qcrypto_cipher_get_key_len ( luks_opts . cipher_alg )	251:4:4603:4676	6904708	47	True				
ANR	6905286	AssignmentExpression	luks -> header . key_bytes = qcrypto_cipher_get_key_len ( luks_opts . cipher_alg )		6904708	0		=			
ANR	6905287	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6905288	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905289	Identifier	luks		6904708	0					
ANR	6905290	Identifier	header		6904708	1					
ANR	6905291	Identifier	key_bytes		6904708	1					
ANR	6905292	CallExpression	qcrypto_cipher_get_key_len ( luks_opts . cipher_alg )		6904708	1					
ANR	6905293	Callee	qcrypto_cipher_get_key_len		6904708	0					
ANR	6905294	Identifier	qcrypto_cipher_get_key_len		6904708	0					
ANR	6905295	ArgumentList	luks_opts . cipher_alg		6904708	1					
ANR	6905296	Argument	luks_opts . cipher_alg		6904708	0					
ANR	6905297	MemberAccess	luks_opts . cipher_alg		6904708	0					
ANR	6905298	Identifier	luks_opts		6904708	0					
ANR	6905299	Identifier	cipher_alg		6904708	1					
ANR	6905300	IfStatement	if ( luks_opts . cipher_mode == QCRYPTO_CIPHER_MODE_XTS )		6904708	48					
ANR	6905301	Condition	luks_opts . cipher_mode == QCRYPTO_CIPHER_MODE_XTS	253:8:4687:4734	6904708	0	True				
ANR	6905302	EqualityExpression	luks_opts . cipher_mode == QCRYPTO_CIPHER_MODE_XTS		6904708	0		==			
ANR	6905303	MemberAccess	luks_opts . cipher_mode		6904708	0					
ANR	6905304	Identifier	luks_opts		6904708	0					
ANR	6905305	Identifier	cipher_mode		6904708	1					
ANR	6905306	Identifier	QCRYPTO_CIPHER_MODE_XTS		6904708	1					
ANR	6905307	CompoundStatement		241:58:4425:4425	6904708	1					
ANR	6905308	ExpressionStatement	luks -> header . key_bytes *= 2	255:8:4748:4775	6904708	0	True				
ANR	6905309	AssignmentExpression	luks -> header . key_bytes *= 2		6904708	0		*=			
ANR	6905310	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6905311	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905312	Identifier	luks		6904708	0					
ANR	6905313	Identifier	header		6904708	1					
ANR	6905314	Identifier	key_bytes		6904708	1					
ANR	6905315	PrimaryExpression	2		6904708	1					
ANR	6905316	IfStatement	"if ( qcrypto_random_bytes ( luks -> header . master_key_salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , errp ) < 0 )"		6904708	49					
ANR	6905317	Condition	"qcrypto_random_bytes ( luks -> header . master_key_salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , errp ) < 0"	267:8:4887:5035	6904708	0	True				
ANR	6905318	RelationalExpression	"qcrypto_random_bytes ( luks -> header . master_key_salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , errp ) < 0"		6904708	0		<			
ANR	6905319	CallExpression	"qcrypto_random_bytes ( luks -> header . master_key_salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , errp )"		6904708	0					
ANR	6905320	Callee	qcrypto_random_bytes		6904708	0					
ANR	6905321	Identifier	qcrypto_random_bytes		6904708	0					
ANR	6905322	ArgumentList	luks -> header . master_key_salt		6904708	1					
ANR	6905323	Argument	luks -> header . master_key_salt		6904708	0					
ANR	6905324	MemberAccess	luks -> header . master_key_salt		6904708	0					
ANR	6905325	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905326	Identifier	luks		6904708	0					
ANR	6905327	Identifier	header		6904708	1					
ANR	6905328	Identifier	master_key_salt		6904708	1					
ANR	6905329	Argument	QCRYPTO_BLOCK_LUKS_SALT_LEN		6904708	1					
ANR	6905330	Identifier	QCRYPTO_BLOCK_LUKS_SALT_LEN		6904708	0					
ANR	6905331	Argument	errp		6904708	2					
ANR	6905332	Identifier	errp		6904708	0					
ANR	6905333	PrimaryExpression	0		6904708	1					
ANR	6905334	CompoundStatement		259:40:4726:4726	6904708	1					
ANR	6905335	GotoStatement	goto error ;	273:8:5049:5059	6904708	0	True				
ANR	6905336	Identifier	error		6904708	0					
ANR	6905337	ExpressionStatement	"masterkey = g_new0 ( uint8_t , luks -> header . key_bytes )"	281:4:5113:5164	6904708	50	True				
ANR	6905338	AssignmentExpression	"masterkey = g_new0 ( uint8_t , luks -> header . key_bytes )"		6904708	0		=			
ANR	6905339	Identifier	masterkey		6904708	0					
ANR	6905340	CallExpression	"g_new0 ( uint8_t , luks -> header . key_bytes )"		6904708	1					
ANR	6905341	Callee	g_new0		6904708	0					
ANR	6905342	Identifier	g_new0		6904708	0					
ANR	6905343	ArgumentList	uint8_t		6904708	1					
ANR	6905344	Argument	uint8_t		6904708	0					
ANR	6905345	Identifier	uint8_t		6904708	0					
ANR	6905346	Argument	luks -> header . key_bytes		6904708	1					
ANR	6905347	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6905348	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905349	Identifier	luks		6904708	0					
ANR	6905350	Identifier	header		6904708	1					
ANR	6905351	Identifier	key_bytes		6904708	1					
ANR	6905352	IfStatement	"if ( qcrypto_random_bytes ( masterkey , luks -> header . key_bytes , errp ) < 0 )"		6904708	51					
ANR	6905353	Condition	"qcrypto_random_bytes ( masterkey , luks -> header . key_bytes , errp ) < 0"	283:8:5175:5269	6904708	0	True				
ANR	6905354	RelationalExpression	"qcrypto_random_bytes ( masterkey , luks -> header . key_bytes , errp ) < 0"		6904708	0		<			
ANR	6905355	CallExpression	"qcrypto_random_bytes ( masterkey , luks -> header . key_bytes , errp )"		6904708	0					
ANR	6905356	Callee	qcrypto_random_bytes		6904708	0					
ANR	6905357	Identifier	qcrypto_random_bytes		6904708	0					
ANR	6905358	ArgumentList	masterkey		6904708	1					
ANR	6905359	Argument	masterkey		6904708	0					
ANR	6905360	Identifier	masterkey		6904708	0					
ANR	6905361	Argument	luks -> header . key_bytes		6904708	1					
ANR	6905362	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6905363	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905364	Identifier	luks		6904708	0					
ANR	6905365	Identifier	header		6904708	1					
ANR	6905366	Identifier	key_bytes		6904708	1					
ANR	6905367	Argument	errp		6904708	2					
ANR	6905368	Identifier	errp		6904708	0					
ANR	6905369	PrimaryExpression	0		6904708	1					
ANR	6905370	CompoundStatement		273:64:4960:4960	6904708	1					
ANR	6905371	GotoStatement	goto error ;	287:8:5283:5293	6904708	0	True				
ANR	6905372	Identifier	error		6904708	0					
ANR	6905373	ExpressionStatement	"block -> cipher = qcrypto_cipher_new ( luks_opts . cipher_alg , luks_opts . cipher_mode , masterkey , luks -> header . key_bytes , errp )"	297:4:5372:5612	6904708	52	True				
ANR	6905374	AssignmentExpression	"block -> cipher = qcrypto_cipher_new ( luks_opts . cipher_alg , luks_opts . cipher_mode , masterkey , luks -> header . key_bytes , errp )"		6904708	0		=			
ANR	6905375	PtrMemberAccess	block -> cipher		6904708	0					
ANR	6905376	Identifier	block		6904708	0					
ANR	6905377	Identifier	cipher		6904708	1					
ANR	6905378	CallExpression	"qcrypto_cipher_new ( luks_opts . cipher_alg , luks_opts . cipher_mode , masterkey , luks -> header . key_bytes , errp )"		6904708	1					
ANR	6905379	Callee	qcrypto_cipher_new		6904708	0					
ANR	6905380	Identifier	qcrypto_cipher_new		6904708	0					
ANR	6905381	ArgumentList	luks_opts . cipher_alg		6904708	1					
ANR	6905382	Argument	luks_opts . cipher_alg		6904708	0					
ANR	6905383	MemberAccess	luks_opts . cipher_alg		6904708	0					
ANR	6905384	Identifier	luks_opts		6904708	0					
ANR	6905385	Identifier	cipher_alg		6904708	1					
ANR	6905386	Argument	luks_opts . cipher_mode		6904708	1					
ANR	6905387	MemberAccess	luks_opts . cipher_mode		6904708	0					
ANR	6905388	Identifier	luks_opts		6904708	0					
ANR	6905389	Identifier	cipher_mode		6904708	1					
ANR	6905390	Argument	masterkey		6904708	2					
ANR	6905391	Identifier	masterkey		6904708	0					
ANR	6905392	Argument	luks -> header . key_bytes		6904708	3					
ANR	6905393	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6905394	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905395	Identifier	luks		6904708	0					
ANR	6905396	Identifier	header		6904708	1					
ANR	6905397	Identifier	key_bytes		6904708	1					
ANR	6905398	Argument	errp		6904708	4					
ANR	6905399	Identifier	errp		6904708	0					
ANR	6905400	IfStatement	if ( ! block -> cipher )		6904708	53					
ANR	6905401	Condition	! block -> cipher	305:8:5623:5636	6904708	0	True				
ANR	6905402	UnaryOperationExpression	! block -> cipher		6904708	0					
ANR	6905403	UnaryOperator	!		6904708	0					
ANR	6905404	PtrMemberAccess	block -> cipher		6904708	1					
ANR	6905405	Identifier	block		6904708	0					
ANR	6905406	Identifier	cipher		6904708	1					
ANR	6905407	CompoundStatement		293:24:5327:5327	6904708	1					
ANR	6905408	GotoStatement	goto error ;	307:8:5650:5660	6904708	0	True				
ANR	6905409	Identifier	error		6904708	0					
ANR	6905410	ExpressionStatement	block -> kdfhash = luks_opts . hash_alg	313:4:5676:5711	6904708	54	True				
ANR	6905411	AssignmentExpression	block -> kdfhash = luks_opts . hash_alg		6904708	0		=			
ANR	6905412	PtrMemberAccess	block -> kdfhash		6904708	0					
ANR	6905413	Identifier	block		6904708	0					
ANR	6905414	Identifier	kdfhash		6904708	1					
ANR	6905415	MemberAccess	luks_opts . hash_alg		6904708	1					
ANR	6905416	Identifier	luks_opts		6904708	0					
ANR	6905417	Identifier	hash_alg		6904708	1					
ANR	6905418	ExpressionStatement	"block -> niv = qcrypto_cipher_get_iv_len ( luks_opts . cipher_alg , luks_opts . cipher_mode )"	315:4:5718:5845	6904708	55	True				
ANR	6905419	AssignmentExpression	"block -> niv = qcrypto_cipher_get_iv_len ( luks_opts . cipher_alg , luks_opts . cipher_mode )"		6904708	0		=			
ANR	6905420	PtrMemberAccess	block -> niv		6904708	0					
ANR	6905421	Identifier	block		6904708	0					
ANR	6905422	Identifier	niv		6904708	1					
ANR	6905423	CallExpression	"qcrypto_cipher_get_iv_len ( luks_opts . cipher_alg , luks_opts . cipher_mode )"		6904708	1					
ANR	6905424	Callee	qcrypto_cipher_get_iv_len		6904708	0					
ANR	6905425	Identifier	qcrypto_cipher_get_iv_len		6904708	0					
ANR	6905426	ArgumentList	luks_opts . cipher_alg		6904708	1					
ANR	6905427	Argument	luks_opts . cipher_alg		6904708	0					
ANR	6905428	MemberAccess	luks_opts . cipher_alg		6904708	0					
ANR	6905429	Identifier	luks_opts		6904708	0					
ANR	6905430	Identifier	cipher_alg		6904708	1					
ANR	6905431	Argument	luks_opts . cipher_mode		6904708	1					
ANR	6905432	MemberAccess	luks_opts . cipher_mode		6904708	0					
ANR	6905433	Identifier	luks_opts		6904708	0					
ANR	6905434	Identifier	cipher_mode		6904708	1					
ANR	6905435	ExpressionStatement	"block -> ivgen = qcrypto_ivgen_new ( luks_opts . ivgen_alg , ivcipheralg , luks_opts . ivgen_hash_alg , masterkey , luks -> header . key_bytes , errp )"	319:4:5852:6137	6904708	56	True				
ANR	6905436	AssignmentExpression	"block -> ivgen = qcrypto_ivgen_new ( luks_opts . ivgen_alg , ivcipheralg , luks_opts . ivgen_hash_alg , masterkey , luks -> header . key_bytes , errp )"		6904708	0		=			
ANR	6905437	PtrMemberAccess	block -> ivgen		6904708	0					
ANR	6905438	Identifier	block		6904708	0					
ANR	6905439	Identifier	ivgen		6904708	1					
ANR	6905440	CallExpression	"qcrypto_ivgen_new ( luks_opts . ivgen_alg , ivcipheralg , luks_opts . ivgen_hash_alg , masterkey , luks -> header . key_bytes , errp )"		6904708	1					
ANR	6905441	Callee	qcrypto_ivgen_new		6904708	0					
ANR	6905442	Identifier	qcrypto_ivgen_new		6904708	0					
ANR	6905443	ArgumentList	luks_opts . ivgen_alg		6904708	1					
ANR	6905444	Argument	luks_opts . ivgen_alg		6904708	0					
ANR	6905445	MemberAccess	luks_opts . ivgen_alg		6904708	0					
ANR	6905446	Identifier	luks_opts		6904708	0					
ANR	6905447	Identifier	ivgen_alg		6904708	1					
ANR	6905448	Argument	ivcipheralg		6904708	1					
ANR	6905449	Identifier	ivcipheralg		6904708	0					
ANR	6905450	Argument	luks_opts . ivgen_hash_alg		6904708	2					
ANR	6905451	MemberAccess	luks_opts . ivgen_hash_alg		6904708	0					
ANR	6905452	Identifier	luks_opts		6904708	0					
ANR	6905453	Identifier	ivgen_hash_alg		6904708	1					
ANR	6905454	Argument	masterkey		6904708	3					
ANR	6905455	Identifier	masterkey		6904708	0					
ANR	6905456	Argument	luks -> header . key_bytes		6904708	4					
ANR	6905457	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6905458	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905459	Identifier	luks		6904708	0					
ANR	6905460	Identifier	header		6904708	1					
ANR	6905461	Identifier	key_bytes		6904708	1					
ANR	6905462	Argument	errp		6904708	5					
ANR	6905463	Identifier	errp		6904708	0					
ANR	6905464	IfStatement	if ( ! block -> ivgen )		6904708	57					
ANR	6905465	Condition	! block -> ivgen	331:8:6150:6162	6904708	0	True				
ANR	6905466	UnaryOperationExpression	! block -> ivgen		6904708	0					
ANR	6905467	UnaryOperator	!		6904708	0					
ANR	6905468	PtrMemberAccess	block -> ivgen		6904708	1					
ANR	6905469	Identifier	block		6904708	0					
ANR	6905470	Identifier	ivgen		6904708	1					
ANR	6905471	CompoundStatement		319:23:5853:5853	6904708	1					
ANR	6905472	GotoStatement	goto error ;	333:8:6176:6186	6904708	0	True				
ANR	6905473	Identifier	error		6904708	0					
ANR	6905474	ExpressionStatement	"iters = qcrypto_pbkdf2_count_iters ( luks_opts . hash_alg , masterkey , luks -> header . key_bytes , luks -> header . master_key_salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , QCRYPTO_BLOCK_LUKS_DIGEST_LEN , & local_err )"	347:4:6338:6729	6904708	58	True				
ANR	6905475	AssignmentExpression	"iters = qcrypto_pbkdf2_count_iters ( luks_opts . hash_alg , masterkey , luks -> header . key_bytes , luks -> header . master_key_salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , QCRYPTO_BLOCK_LUKS_DIGEST_LEN , & local_err )"		6904708	0		=			
ANR	6905476	Identifier	iters		6904708	0					
ANR	6905477	CallExpression	"qcrypto_pbkdf2_count_iters ( luks_opts . hash_alg , masterkey , luks -> header . key_bytes , luks -> header . master_key_salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , QCRYPTO_BLOCK_LUKS_DIGEST_LEN , & local_err )"		6904708	1					
ANR	6905478	Callee	qcrypto_pbkdf2_count_iters		6904708	0					
ANR	6905479	Identifier	qcrypto_pbkdf2_count_iters		6904708	0					
ANR	6905480	ArgumentList	luks_opts . hash_alg		6904708	1					
ANR	6905481	Argument	luks_opts . hash_alg		6904708	0					
ANR	6905482	MemberAccess	luks_opts . hash_alg		6904708	0					
ANR	6905483	Identifier	luks_opts		6904708	0					
ANR	6905484	Identifier	hash_alg		6904708	1					
ANR	6905485	Argument	masterkey		6904708	1					
ANR	6905486	Identifier	masterkey		6904708	0					
ANR	6905487	Argument	luks -> header . key_bytes		6904708	2					
ANR	6905488	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6905489	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905490	Identifier	luks		6904708	0					
ANR	6905491	Identifier	header		6904708	1					
ANR	6905492	Identifier	key_bytes		6904708	1					
ANR	6905493	Argument	luks -> header . master_key_salt		6904708	3					
ANR	6905494	MemberAccess	luks -> header . master_key_salt		6904708	0					
ANR	6905495	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905496	Identifier	luks		6904708	0					
ANR	6905497	Identifier	header		6904708	1					
ANR	6905498	Identifier	master_key_salt		6904708	1					
ANR	6905499	Argument	QCRYPTO_BLOCK_LUKS_SALT_LEN		6904708	4					
ANR	6905500	Identifier	QCRYPTO_BLOCK_LUKS_SALT_LEN		6904708	0					
ANR	6905501	Argument	QCRYPTO_BLOCK_LUKS_DIGEST_LEN		6904708	5					
ANR	6905502	Identifier	QCRYPTO_BLOCK_LUKS_DIGEST_LEN		6904708	0					
ANR	6905503	Argument	& local_err		6904708	6					
ANR	6905504	UnaryOperationExpression	& local_err		6904708	0					
ANR	6905505	UnaryOperator	&		6904708	0					
ANR	6905506	Identifier	local_err		6904708	1					
ANR	6905507	IfStatement	if ( local_err )		6904708	59					
ANR	6905508	Condition	local_err	359:8:6740:6748	6904708	0	True				
ANR	6905509	Identifier	local_err		6904708	0					
ANR	6905510	CompoundStatement		347:19:6439:6439	6904708	1					
ANR	6905511	ExpressionStatement	"error_propagate ( errp , local_err )"	361:8:6762:6794	6904708	0	True				
ANR	6905512	CallExpression	"error_propagate ( errp , local_err )"		6904708	0					
ANR	6905513	Callee	error_propagate		6904708	0					
ANR	6905514	Identifier	error_propagate		6904708	0					
ANR	6905515	ArgumentList	errp		6904708	1					
ANR	6905516	Argument	errp		6904708	0					
ANR	6905517	Identifier	errp		6904708	0					
ANR	6905518	Argument	local_err		6904708	1					
ANR	6905519	Identifier	local_err		6904708	0					
ANR	6905520	GotoStatement	goto error ;	363:8:6805:6815	6904708	1	True				
ANR	6905521	Identifier	error		6904708	0					
ANR	6905522	IfStatement	if ( iters > ( ULLONG_MAX / luks_opts . iter_time ) )		6904708	60					
ANR	6905523	Condition	iters > ( ULLONG_MAX / luks_opts . iter_time )	369:8:6835:6876	6904708	0	True				
ANR	6905524	RelationalExpression	iters > ( ULLONG_MAX / luks_opts . iter_time )		6904708	0		>			
ANR	6905525	Identifier	iters		6904708	0					
ANR	6905526	MultiplicativeExpression	ULLONG_MAX / luks_opts . iter_time		6904708	1		/			
ANR	6905527	Identifier	ULLONG_MAX		6904708	0					
ANR	6905528	MemberAccess	luks_opts . iter_time		6904708	1					
ANR	6905529	Identifier	luks_opts		6904708	0					
ANR	6905530	Identifier	iter_time		6904708	1					
ANR	6905531	CompoundStatement		357:52:6567:6567	6904708	1					
ANR	6905532	ExpressionStatement	"error_setg_errno ( errp , ERANGE , ""PBKDF iterations %llu too large to scale"" , ( unsigned long long ) iters )"	371:8:6890:7043	6904708	0	True				
ANR	6905533	CallExpression	"error_setg_errno ( errp , ERANGE , ""PBKDF iterations %llu too large to scale"" , ( unsigned long long ) iters )"		6904708	0					
ANR	6905534	Callee	error_setg_errno		6904708	0					
ANR	6905535	Identifier	error_setg_errno		6904708	0					
ANR	6905536	ArgumentList	errp		6904708	1					
ANR	6905537	Argument	errp		6904708	0					
ANR	6905538	Identifier	errp		6904708	0					
ANR	6905539	Argument	ERANGE		6904708	1					
ANR	6905540	Identifier	ERANGE		6904708	0					
ANR	6905541	Argument	"""PBKDF iterations %llu too large to scale"""		6904708	2					
ANR	6905542	PrimaryExpression	"""PBKDF iterations %llu too large to scale"""		6904708	0					
ANR	6905543	Argument	( unsigned long long ) iters		6904708	3					
ANR	6905544	CastExpression	( unsigned long long ) iters		6904708	0					
ANR	6905545	CastTarget	unsigned long long		6904708	0					
ANR	6905546	Identifier	iters		6904708	1					
ANR	6905547	GotoStatement	goto error ;	377:8:7054:7064	6904708	1	True				
ANR	6905548	Identifier	error		6904708	0					
ANR	6905549	ExpressionStatement	iters = iters * luks_opts . iter_time / 1000	385:4:7150:7192	6904708	61	True				
ANR	6905550	AssignmentExpression	iters = iters * luks_opts . iter_time / 1000		6904708	0		=			
ANR	6905551	Identifier	iters		6904708	0					
ANR	6905552	MultiplicativeExpression	iters * luks_opts . iter_time / 1000		6904708	1		*			
ANR	6905553	Identifier	iters		6904708	0					
ANR	6905554	MultiplicativeExpression	luks_opts . iter_time / 1000		6904708	1		/			
ANR	6905555	MemberAccess	luks_opts . iter_time		6904708	0					
ANR	6905556	Identifier	luks_opts		6904708	0					
ANR	6905557	Identifier	iter_time		6904708	1					
ANR	6905558	PrimaryExpression	1000		6904708	1					
ANR	6905559	ExpressionStatement	iters /= 8	397:4:7424:7434	6904708	62	True				
ANR	6905560	AssignmentExpression	iters /= 8		6904708	0		/=			
ANR	6905561	Identifier	iters		6904708	0					
ANR	6905562	PrimaryExpression	8		6904708	1					
ANR	6905563	IfStatement	if ( iters > UINT32_MAX )		6904708	63					
ANR	6905564	Condition	iters > UINT32_MAX	399:8:7445:7462	6904708	0	True				
ANR	6905565	RelationalExpression	iters > UINT32_MAX		6904708	0		>			
ANR	6905566	Identifier	iters		6904708	0					
ANR	6905567	Identifier	UINT32_MAX		6904708	1					
ANR	6905568	CompoundStatement		387:28:7153:7153	6904708	1					
ANR	6905569	ExpressionStatement	"error_setg_errno ( errp , ERANGE , ""PBKDF iterations %llu larger than %u"" , ( unsigned long long ) iters , UINT32_MAX )"	401:8:7476:7637	6904708	0	True				
ANR	6905570	CallExpression	"error_setg_errno ( errp , ERANGE , ""PBKDF iterations %llu larger than %u"" , ( unsigned long long ) iters , UINT32_MAX )"		6904708	0					
ANR	6905571	Callee	error_setg_errno		6904708	0					
ANR	6905572	Identifier	error_setg_errno		6904708	0					
ANR	6905573	ArgumentList	errp		6904708	1					
ANR	6905574	Argument	errp		6904708	0					
ANR	6905575	Identifier	errp		6904708	0					
ANR	6905576	Argument	ERANGE		6904708	1					
ANR	6905577	Identifier	ERANGE		6904708	0					
ANR	6905578	Argument	"""PBKDF iterations %llu larger than %u"""		6904708	2					
ANR	6905579	PrimaryExpression	"""PBKDF iterations %llu larger than %u"""		6904708	0					
ANR	6905580	Argument	( unsigned long long ) iters		6904708	3					
ANR	6905581	CastExpression	( unsigned long long ) iters		6904708	0					
ANR	6905582	CastTarget	unsigned long long		6904708	0					
ANR	6905583	Identifier	iters		6904708	1					
ANR	6905584	Argument	UINT32_MAX		6904708	4					
ANR	6905585	Identifier	UINT32_MAX		6904708	0					
ANR	6905586	GotoStatement	goto error ;	407:8:7648:7658	6904708	1	True				
ANR	6905587	Identifier	error		6904708	0					
ANR	6905588	ExpressionStatement	"iters = MAX ( iters , QCRYPTO_BLOCK_LUKS_MIN_MASTER_KEY_ITERS )"	411:4:7672:7731	6904708	64	True				
ANR	6905589	AssignmentExpression	"iters = MAX ( iters , QCRYPTO_BLOCK_LUKS_MIN_MASTER_KEY_ITERS )"		6904708	0		=			
ANR	6905590	Identifier	iters		6904708	0					
ANR	6905591	CallExpression	"MAX ( iters , QCRYPTO_BLOCK_LUKS_MIN_MASTER_KEY_ITERS )"		6904708	1					
ANR	6905592	Callee	MAX		6904708	0					
ANR	6905593	Identifier	MAX		6904708	0					
ANR	6905594	ArgumentList	iters		6904708	1					
ANR	6905595	Argument	iters		6904708	0					
ANR	6905596	Identifier	iters		6904708	0					
ANR	6905597	Argument	QCRYPTO_BLOCK_LUKS_MIN_MASTER_KEY_ITERS		6904708	1					
ANR	6905598	Identifier	QCRYPTO_BLOCK_LUKS_MIN_MASTER_KEY_ITERS		6904708	0					
ANR	6905599	ExpressionStatement	luks -> header . master_key_iterations = iters	413:4:7738:7780	6904708	65	True				
ANR	6905600	AssignmentExpression	luks -> header . master_key_iterations = iters		6904708	0		=			
ANR	6905601	MemberAccess	luks -> header . master_key_iterations		6904708	0					
ANR	6905602	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905603	Identifier	luks		6904708	0					
ANR	6905604	Identifier	header		6904708	1					
ANR	6905605	Identifier	master_key_iterations		6904708	1					
ANR	6905606	Identifier	iters		6904708	1					
ANR	6905607	IfStatement	"if ( qcrypto_pbkdf2 ( luks_opts . hash_alg , masterkey , luks -> header . key_bytes , luks -> header . master_key_salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , luks -> header . master_key_iterations , luks -> header . master_key_digest , QCRYPTO_BLOCK_LUKS_DIGEST_LEN , errp ) < 0 )"		6904708	66					
ANR	6905608	Condition	"qcrypto_pbkdf2 ( luks_opts . hash_alg , masterkey , luks -> header . key_bytes , luks -> header . master_key_salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , luks -> header . master_key_iterations , luks -> header . master_key_digest , QCRYPTO_BLOCK_LUKS_DIGEST_LEN , errp ) < 0"	427:8:8006:8410	6904708	0	True				
ANR	6905609	RelationalExpression	"qcrypto_pbkdf2 ( luks_opts . hash_alg , masterkey , luks -> header . key_bytes , luks -> header . master_key_salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , luks -> header . master_key_iterations , luks -> header . master_key_digest , QCRYPTO_BLOCK_LUKS_DIGEST_LEN , errp ) < 0"		6904708	0		<			
ANR	6905610	CallExpression	"qcrypto_pbkdf2 ( luks_opts . hash_alg , masterkey , luks -> header . key_bytes , luks -> header . master_key_salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , luks -> header . master_key_iterations , luks -> header . master_key_digest , QCRYPTO_BLOCK_LUKS_DIGEST_LEN , errp )"		6904708	0					
ANR	6905611	Callee	qcrypto_pbkdf2		6904708	0					
ANR	6905612	Identifier	qcrypto_pbkdf2		6904708	0					
ANR	6905613	ArgumentList	luks_opts . hash_alg		6904708	1					
ANR	6905614	Argument	luks_opts . hash_alg		6904708	0					
ANR	6905615	MemberAccess	luks_opts . hash_alg		6904708	0					
ANR	6905616	Identifier	luks_opts		6904708	0					
ANR	6905617	Identifier	hash_alg		6904708	1					
ANR	6905618	Argument	masterkey		6904708	1					
ANR	6905619	Identifier	masterkey		6904708	0					
ANR	6905620	Argument	luks -> header . key_bytes		6904708	2					
ANR	6905621	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6905622	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905623	Identifier	luks		6904708	0					
ANR	6905624	Identifier	header		6904708	1					
ANR	6905625	Identifier	key_bytes		6904708	1					
ANR	6905626	Argument	luks -> header . master_key_salt		6904708	3					
ANR	6905627	MemberAccess	luks -> header . master_key_salt		6904708	0					
ANR	6905628	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905629	Identifier	luks		6904708	0					
ANR	6905630	Identifier	header		6904708	1					
ANR	6905631	Identifier	master_key_salt		6904708	1					
ANR	6905632	Argument	QCRYPTO_BLOCK_LUKS_SALT_LEN		6904708	4					
ANR	6905633	Identifier	QCRYPTO_BLOCK_LUKS_SALT_LEN		6904708	0					
ANR	6905634	Argument	luks -> header . master_key_iterations		6904708	5					
ANR	6905635	MemberAccess	luks -> header . master_key_iterations		6904708	0					
ANR	6905636	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905637	Identifier	luks		6904708	0					
ANR	6905638	Identifier	header		6904708	1					
ANR	6905639	Identifier	master_key_iterations		6904708	1					
ANR	6905640	Argument	luks -> header . master_key_digest		6904708	6					
ANR	6905641	MemberAccess	luks -> header . master_key_digest		6904708	0					
ANR	6905642	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905643	Identifier	luks		6904708	0					
ANR	6905644	Identifier	header		6904708	1					
ANR	6905645	Identifier	master_key_digest		6904708	1					
ANR	6905646	Argument	QCRYPTO_BLOCK_LUKS_DIGEST_LEN		6904708	7					
ANR	6905647	Identifier	QCRYPTO_BLOCK_LUKS_DIGEST_LEN		6904708	0					
ANR	6905648	Argument	errp		6904708	8					
ANR	6905649	Identifier	errp		6904708	0					
ANR	6905650	PrimaryExpression	0		6904708	1					
ANR	6905651	CompoundStatement		429:34:8101:8101	6904708	1					
ANR	6905652	GotoStatement	goto error ;	443:8:8424:8434	6904708	0	True				
ANR	6905653	Identifier	error		6904708	0					
ANR	6905654	ExpressionStatement	splitkeylen = luks -> header . key_bytes * QCRYPTO_BLOCK_LUKS_STRIPES	455:4:8552:8617	6904708	67	True				
ANR	6905655	AssignmentExpression	splitkeylen = luks -> header . key_bytes * QCRYPTO_BLOCK_LUKS_STRIPES		6904708	0		=			
ANR	6905656	Identifier	splitkeylen		6904708	0					
ANR	6905657	MultiplicativeExpression	luks -> header . key_bytes * QCRYPTO_BLOCK_LUKS_STRIPES		6904708	1		*			
ANR	6905658	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6905659	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905660	Identifier	luks		6904708	0					
ANR	6905661	Identifier	header		6904708	1					
ANR	6905662	Identifier	key_bytes		6904708	1					
ANR	6905663	Identifier	QCRYPTO_BLOCK_LUKS_STRIPES		6904708	1					
ANR	6905664	ForStatement	for ( i = 0 ; i < QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS ; i ++ )		6904708	68					
ANR	6905665	ForInit	i = 0 ;	457:9:8629:8634	6904708	0	True				
ANR	6905666	AssignmentExpression	i = 0		6904708	0		=			
ANR	6905667	Identifier	i		6904708	0					
ANR	6905668	PrimaryExpression	0		6904708	1					
ANR	6905669	Condition	i < QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS	457:16:8636:8671	6904708	1	True				
ANR	6905670	RelationalExpression	i < QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS		6904708	0		<			
ANR	6905671	Identifier	i		6904708	0					
ANR	6905672	Identifier	QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS		6904708	1					
ANR	6905673	PostIncDecOperationExpression	i ++	457:54:8674:8676	6904708	2	True				
ANR	6905674	Identifier	i		6904708	0					
ANR	6905675	IncDec	++		6904708	1					
ANR	6905676	CompoundStatement		445:59:8367:8367	6904708	3					
ANR	6905677	ExpressionStatement	luks -> header . key_slots [ i ] . active = i == 0 ? QCRYPTO_BLOCK_LUKS_KEY_SLOT_ENABLED : QCRYPTO_BLOCK_LUKS_KEY_SLOT_DISABLED	459:8:8690:8834	6904708	0	True				
ANR	6905678	AssignmentExpression	luks -> header . key_slots [ i ] . active = i == 0 ? QCRYPTO_BLOCK_LUKS_KEY_SLOT_ENABLED : QCRYPTO_BLOCK_LUKS_KEY_SLOT_DISABLED		6904708	0		=			
ANR	6905679	MemberAccess	luks -> header . key_slots [ i ] . active		6904708	0					
ANR	6905680	ArrayIndexing	luks -> header . key_slots [ i ]		6904708	0					
ANR	6905681	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6905682	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905683	Identifier	luks		6904708	0					
ANR	6905684	Identifier	header		6904708	1					
ANR	6905685	Identifier	key_slots		6904708	1					
ANR	6905686	Identifier	i		6904708	1					
ANR	6905687	Identifier	active		6904708	1					
ANR	6905688	ConditionalExpression	i == 0 ? QCRYPTO_BLOCK_LUKS_KEY_SLOT_ENABLED : QCRYPTO_BLOCK_LUKS_KEY_SLOT_DISABLED		6904708	1					
ANR	6905689	Condition	i == 0		6904708	0					
ANR	6905690	EqualityExpression	i == 0		6904708	0		==			
ANR	6905691	Identifier	i		6904708	0					
ANR	6905692	PrimaryExpression	0		6904708	1					
ANR	6905693	Identifier	QCRYPTO_BLOCK_LUKS_KEY_SLOT_ENABLED		6904708	1					
ANR	6905694	Identifier	QCRYPTO_BLOCK_LUKS_KEY_SLOT_DISABLED		6904708	2					
ANR	6905695	ExpressionStatement	luks -> header . key_slots [ i ] . stripes = QCRYPTO_BLOCK_LUKS_STRIPES	465:8:8845:8907	6904708	1	True				
ANR	6905696	AssignmentExpression	luks -> header . key_slots [ i ] . stripes = QCRYPTO_BLOCK_LUKS_STRIPES		6904708	0		=			
ANR	6905697	MemberAccess	luks -> header . key_slots [ i ] . stripes		6904708	0					
ANR	6905698	ArrayIndexing	luks -> header . key_slots [ i ]		6904708	0					
ANR	6905699	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6905700	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905701	Identifier	luks		6904708	0					
ANR	6905702	Identifier	header		6904708	1					
ANR	6905703	Identifier	key_slots		6904708	1					
ANR	6905704	Identifier	i		6904708	1					
ANR	6905705	Identifier	stripes		6904708	1					
ANR	6905706	Identifier	QCRYPTO_BLOCK_LUKS_STRIPES		6904708	1					
ANR	6905707	ExpressionStatement	"luks -> header . key_slots [ i ] . key_offset = ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) + ( ROUND_UP ( DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) , ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) ) * i )"	475:8:9063:9405	6904708	2	True				
ANR	6905708	AssignmentExpression	"luks -> header . key_slots [ i ] . key_offset = ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) + ( ROUND_UP ( DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) , ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) ) * i )"		6904708	0		=			
ANR	6905709	MemberAccess	luks -> header . key_slots [ i ] . key_offset		6904708	0					
ANR	6905710	ArrayIndexing	luks -> header . key_slots [ i ]		6904708	0					
ANR	6905711	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6905712	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905713	Identifier	luks		6904708	0					
ANR	6905714	Identifier	header		6904708	1					
ANR	6905715	Identifier	key_slots		6904708	1					
ANR	6905716	Identifier	i		6904708	1					
ANR	6905717	Identifier	key_offset		6904708	1					
ANR	6905718	AdditiveExpression	"( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) + ( ROUND_UP ( DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) , ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) ) * i )"		6904708	1		+			
ANR	6905719	MultiplicativeExpression	QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	0		/			
ANR	6905720	Identifier	QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET		6904708	0					
ANR	6905721	Identifier	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	1					
ANR	6905722	MultiplicativeExpression	"ROUND_UP ( DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) , ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) ) * i"		6904708	1		*			
ANR	6905723	CallExpression	"ROUND_UP ( DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) , ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) )"		6904708	0					
ANR	6905724	Callee	ROUND_UP		6904708	0					
ANR	6905725	Identifier	ROUND_UP		6904708	0					
ANR	6905726	ArgumentList	"DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE )"		6904708	1					
ANR	6905727	Argument	"DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE )"		6904708	0					
ANR	6905728	CallExpression	"DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE )"		6904708	0					
ANR	6905729	Callee	DIV_ROUND_UP		6904708	0					
ANR	6905730	Identifier	DIV_ROUND_UP		6904708	0					
ANR	6905731	ArgumentList	splitkeylen		6904708	1					
ANR	6905732	Argument	splitkeylen		6904708	0					
ANR	6905733	Identifier	splitkeylen		6904708	0					
ANR	6905734	Argument	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	1					
ANR	6905735	Identifier	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	0					
ANR	6905736	Argument	QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	1					
ANR	6905737	MultiplicativeExpression	QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	0		/			
ANR	6905738	Identifier	QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET		6904708	0					
ANR	6905739	Identifier	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	1					
ANR	6905740	Identifier	i		6904708	1					
ANR	6905741	IfStatement	"if ( qcrypto_random_bytes ( luks -> header . key_slots [ 0 ] . salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , errp ) < 0 )"		6904708	69					
ANR	6905742	Condition	"qcrypto_random_bytes ( luks -> header . key_slots [ 0 ] . salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , errp ) < 0"	491:8:9425:9575	6904708	0	True				
ANR	6905743	RelationalExpression	"qcrypto_random_bytes ( luks -> header . key_slots [ 0 ] . salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , errp ) < 0"		6904708	0		<			
ANR	6905744	CallExpression	"qcrypto_random_bytes ( luks -> header . key_slots [ 0 ] . salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , errp )"		6904708	0					
ANR	6905745	Callee	qcrypto_random_bytes		6904708	0					
ANR	6905746	Identifier	qcrypto_random_bytes		6904708	0					
ANR	6905747	ArgumentList	luks -> header . key_slots [ 0 ] . salt		6904708	1					
ANR	6905748	Argument	luks -> header . key_slots [ 0 ] . salt		6904708	0					
ANR	6905749	MemberAccess	luks -> header . key_slots [ 0 ] . salt		6904708	0					
ANR	6905750	ArrayIndexing	luks -> header . key_slots [ 0 ]		6904708	0					
ANR	6905751	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6905752	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905753	Identifier	luks		6904708	0					
ANR	6905754	Identifier	header		6904708	1					
ANR	6905755	Identifier	key_slots		6904708	1					
ANR	6905756	PrimaryExpression	0		6904708	1					
ANR	6905757	Identifier	salt		6904708	1					
ANR	6905758	Argument	QCRYPTO_BLOCK_LUKS_SALT_LEN		6904708	1					
ANR	6905759	Identifier	QCRYPTO_BLOCK_LUKS_SALT_LEN		6904708	0					
ANR	6905760	Argument	errp		6904708	2					
ANR	6905761	Identifier	errp		6904708	0					
ANR	6905762	PrimaryExpression	0		6904708	1					
ANR	6905763	CompoundStatement		483:40:9266:9266	6904708	1					
ANR	6905764	GotoStatement	goto error ;	497:8:9589:9599	6904708	0	True				
ANR	6905765	Identifier	error		6904708	0					
ANR	6905766	ExpressionStatement	"iters = qcrypto_pbkdf2_count_iters ( luks_opts . hash_alg , ( uint8_t * ) password , strlen ( password ) , luks -> header . key_slots [ 0 ] . salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , luks -> header . key_bytes , & local_err )"	509:4:9761:10151	6904708	70	True				
ANR	6905767	AssignmentExpression	"iters = qcrypto_pbkdf2_count_iters ( luks_opts . hash_alg , ( uint8_t * ) password , strlen ( password ) , luks -> header . key_slots [ 0 ] . salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , luks -> header . key_bytes , & local_err )"		6904708	0		=			
ANR	6905768	Identifier	iters		6904708	0					
ANR	6905769	CallExpression	"qcrypto_pbkdf2_count_iters ( luks_opts . hash_alg , ( uint8_t * ) password , strlen ( password ) , luks -> header . key_slots [ 0 ] . salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , luks -> header . key_bytes , & local_err )"		6904708	1					
ANR	6905770	Callee	qcrypto_pbkdf2_count_iters		6904708	0					
ANR	6905771	Identifier	qcrypto_pbkdf2_count_iters		6904708	0					
ANR	6905772	ArgumentList	luks_opts . hash_alg		6904708	1					
ANR	6905773	Argument	luks_opts . hash_alg		6904708	0					
ANR	6905774	MemberAccess	luks_opts . hash_alg		6904708	0					
ANR	6905775	Identifier	luks_opts		6904708	0					
ANR	6905776	Identifier	hash_alg		6904708	1					
ANR	6905777	Argument	( uint8_t * ) password		6904708	1					
ANR	6905778	CastExpression	( uint8_t * ) password		6904708	0					
ANR	6905779	CastTarget	uint8_t *		6904708	0					
ANR	6905780	Identifier	password		6904708	1					
ANR	6905781	Argument	strlen ( password )		6904708	2					
ANR	6905782	CallExpression	strlen ( password )		6904708	0					
ANR	6905783	Callee	strlen		6904708	0					
ANR	6905784	Identifier	strlen		6904708	0					
ANR	6905785	ArgumentList	password		6904708	1					
ANR	6905786	Argument	password		6904708	0					
ANR	6905787	Identifier	password		6904708	0					
ANR	6905788	Argument	luks -> header . key_slots [ 0 ] . salt		6904708	3					
ANR	6905789	MemberAccess	luks -> header . key_slots [ 0 ] . salt		6904708	0					
ANR	6905790	ArrayIndexing	luks -> header . key_slots [ 0 ]		6904708	0					
ANR	6905791	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6905792	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905793	Identifier	luks		6904708	0					
ANR	6905794	Identifier	header		6904708	1					
ANR	6905795	Identifier	key_slots		6904708	1					
ANR	6905796	PrimaryExpression	0		6904708	1					
ANR	6905797	Identifier	salt		6904708	1					
ANR	6905798	Argument	QCRYPTO_BLOCK_LUKS_SALT_LEN		6904708	4					
ANR	6905799	Identifier	QCRYPTO_BLOCK_LUKS_SALT_LEN		6904708	0					
ANR	6905800	Argument	luks -> header . key_bytes		6904708	5					
ANR	6905801	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6905802	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905803	Identifier	luks		6904708	0					
ANR	6905804	Identifier	header		6904708	1					
ANR	6905805	Identifier	key_bytes		6904708	1					
ANR	6905806	Argument	& local_err		6904708	6					
ANR	6905807	UnaryOperationExpression	& local_err		6904708	0					
ANR	6905808	UnaryOperator	&		6904708	0					
ANR	6905809	Identifier	local_err		6904708	1					
ANR	6905810	IfStatement	if ( local_err )		6904708	71					
ANR	6905811	Condition	local_err	521:8:10162:10170	6904708	0	True				
ANR	6905812	Identifier	local_err		6904708	0					
ANR	6905813	CompoundStatement		509:19:9861:9861	6904708	1					
ANR	6905814	ExpressionStatement	"error_propagate ( errp , local_err )"	523:8:10184:10216	6904708	0	True				
ANR	6905815	CallExpression	"error_propagate ( errp , local_err )"		6904708	0					
ANR	6905816	Callee	error_propagate		6904708	0					
ANR	6905817	Identifier	error_propagate		6904708	0					
ANR	6905818	ArgumentList	errp		6904708	1					
ANR	6905819	Argument	errp		6904708	0					
ANR	6905820	Identifier	errp		6904708	0					
ANR	6905821	Argument	local_err		6904708	1					
ANR	6905822	Identifier	local_err		6904708	0					
ANR	6905823	GotoStatement	goto error ;	525:8:10227:10237	6904708	1	True				
ANR	6905824	Identifier	error		6904708	0					
ANR	6905825	IfStatement	if ( iters > ( ULLONG_MAX / luks_opts . iter_time ) )		6904708	72					
ANR	6905826	Condition	iters > ( ULLONG_MAX / luks_opts . iter_time )	531:8:10257:10298	6904708	0	True				
ANR	6905827	RelationalExpression	iters > ( ULLONG_MAX / luks_opts . iter_time )		6904708	0		>			
ANR	6905828	Identifier	iters		6904708	0					
ANR	6905829	MultiplicativeExpression	ULLONG_MAX / luks_opts . iter_time		6904708	1		/			
ANR	6905830	Identifier	ULLONG_MAX		6904708	0					
ANR	6905831	MemberAccess	luks_opts . iter_time		6904708	1					
ANR	6905832	Identifier	luks_opts		6904708	0					
ANR	6905833	Identifier	iter_time		6904708	1					
ANR	6905834	CompoundStatement		519:52:9989:9989	6904708	1					
ANR	6905835	ExpressionStatement	"error_setg_errno ( errp , ERANGE , ""PBKDF iterations %llu too large to scale"" , ( unsigned long long ) iters )"	533:8:10312:10465	6904708	0	True				
ANR	6905836	CallExpression	"error_setg_errno ( errp , ERANGE , ""PBKDF iterations %llu too large to scale"" , ( unsigned long long ) iters )"		6904708	0					
ANR	6905837	Callee	error_setg_errno		6904708	0					
ANR	6905838	Identifier	error_setg_errno		6904708	0					
ANR	6905839	ArgumentList	errp		6904708	1					
ANR	6905840	Argument	errp		6904708	0					
ANR	6905841	Identifier	errp		6904708	0					
ANR	6905842	Argument	ERANGE		6904708	1					
ANR	6905843	Identifier	ERANGE		6904708	0					
ANR	6905844	Argument	"""PBKDF iterations %llu too large to scale"""		6904708	2					
ANR	6905845	PrimaryExpression	"""PBKDF iterations %llu too large to scale"""		6904708	0					
ANR	6905846	Argument	( unsigned long long ) iters		6904708	3					
ANR	6905847	CastExpression	( unsigned long long ) iters		6904708	0					
ANR	6905848	CastTarget	unsigned long long		6904708	0					
ANR	6905849	Identifier	iters		6904708	1					
ANR	6905850	GotoStatement	goto error ;	539:8:10476:10486	6904708	1	True				
ANR	6905851	Identifier	error		6904708	0					
ANR	6905852	ExpressionStatement	iters = iters * luks_opts . iter_time / 1000	547:4:10572:10614	6904708	73	True				
ANR	6905853	AssignmentExpression	iters = iters * luks_opts . iter_time / 1000		6904708	0		=			
ANR	6905854	Identifier	iters		6904708	0					
ANR	6905855	MultiplicativeExpression	iters * luks_opts . iter_time / 1000		6904708	1		*			
ANR	6905856	Identifier	iters		6904708	0					
ANR	6905857	MultiplicativeExpression	luks_opts . iter_time / 1000		6904708	1		/			
ANR	6905858	MemberAccess	luks_opts . iter_time		6904708	0					
ANR	6905859	Identifier	luks_opts		6904708	0					
ANR	6905860	Identifier	iter_time		6904708	1					
ANR	6905861	PrimaryExpression	1000		6904708	1					
ANR	6905862	IfStatement	if ( iters > UINT32_MAX )		6904708	74					
ANR	6905863	Condition	iters > UINT32_MAX	551:8:10627:10644	6904708	0	True				
ANR	6905864	RelationalExpression	iters > UINT32_MAX		6904708	0		>			
ANR	6905865	Identifier	iters		6904708	0					
ANR	6905866	Identifier	UINT32_MAX		6904708	1					
ANR	6905867	CompoundStatement		539:28:10335:10335	6904708	1					
ANR	6905868	ExpressionStatement	"error_setg_errno ( errp , ERANGE , ""PBKDF iterations %llu larger than %u"" , ( unsigned long long ) iters , UINT32_MAX )"	553:8:10658:10819	6904708	0	True				
ANR	6905869	CallExpression	"error_setg_errno ( errp , ERANGE , ""PBKDF iterations %llu larger than %u"" , ( unsigned long long ) iters , UINT32_MAX )"		6904708	0					
ANR	6905870	Callee	error_setg_errno		6904708	0					
ANR	6905871	Identifier	error_setg_errno		6904708	0					
ANR	6905872	ArgumentList	errp		6904708	1					
ANR	6905873	Argument	errp		6904708	0					
ANR	6905874	Identifier	errp		6904708	0					
ANR	6905875	Argument	ERANGE		6904708	1					
ANR	6905876	Identifier	ERANGE		6904708	0					
ANR	6905877	Argument	"""PBKDF iterations %llu larger than %u"""		6904708	2					
ANR	6905878	PrimaryExpression	"""PBKDF iterations %llu larger than %u"""		6904708	0					
ANR	6905879	Argument	( unsigned long long ) iters		6904708	3					
ANR	6905880	CastExpression	( unsigned long long ) iters		6904708	0					
ANR	6905881	CastTarget	unsigned long long		6904708	0					
ANR	6905882	Identifier	iters		6904708	1					
ANR	6905883	Argument	UINT32_MAX		6904708	4					
ANR	6905884	Identifier	UINT32_MAX		6904708	0					
ANR	6905885	GotoStatement	goto error ;	559:8:10830:10840	6904708	1	True				
ANR	6905886	Identifier	error		6904708	0					
ANR	6905887	ExpressionStatement	"luks -> header . key_slots [ 0 ] . iterations = MAX ( iters , QCRYPTO_BLOCK_LUKS_MIN_SLOT_KEY_ITERS )"	565:4:10856:10953	6904708	75	True				
ANR	6905888	AssignmentExpression	"luks -> header . key_slots [ 0 ] . iterations = MAX ( iters , QCRYPTO_BLOCK_LUKS_MIN_SLOT_KEY_ITERS )"		6904708	0		=			
ANR	6905889	MemberAccess	luks -> header . key_slots [ 0 ] . iterations		6904708	0					
ANR	6905890	ArrayIndexing	luks -> header . key_slots [ 0 ]		6904708	0					
ANR	6905891	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6905892	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905893	Identifier	luks		6904708	0					
ANR	6905894	Identifier	header		6904708	1					
ANR	6905895	Identifier	key_slots		6904708	1					
ANR	6905896	PrimaryExpression	0		6904708	1					
ANR	6905897	Identifier	iterations		6904708	1					
ANR	6905898	CallExpression	"MAX ( iters , QCRYPTO_BLOCK_LUKS_MIN_SLOT_KEY_ITERS )"		6904708	1					
ANR	6905899	Callee	MAX		6904708	0					
ANR	6905900	Identifier	MAX		6904708	0					
ANR	6905901	ArgumentList	iters		6904708	1					
ANR	6905902	Argument	iters		6904708	0					
ANR	6905903	Identifier	iters		6904708	0					
ANR	6905904	Argument	QCRYPTO_BLOCK_LUKS_MIN_SLOT_KEY_ITERS		6904708	1					
ANR	6905905	Identifier	QCRYPTO_BLOCK_LUKS_MIN_SLOT_KEY_ITERS		6904708	0					
ANR	6905906	ExpressionStatement	"slotkey = g_new0 ( uint8_t , luks -> header . key_bytes )"	579:4:11071:11120	6904708	76	True				
ANR	6905907	AssignmentExpression	"slotkey = g_new0 ( uint8_t , luks -> header . key_bytes )"		6904708	0		=			
ANR	6905908	Identifier	slotkey		6904708	0					
ANR	6905909	CallExpression	"g_new0 ( uint8_t , luks -> header . key_bytes )"		6904708	1					
ANR	6905910	Callee	g_new0		6904708	0					
ANR	6905911	Identifier	g_new0		6904708	0					
ANR	6905912	ArgumentList	uint8_t		6904708	1					
ANR	6905913	Argument	uint8_t		6904708	0					
ANR	6905914	Identifier	uint8_t		6904708	0					
ANR	6905915	Argument	luks -> header . key_bytes		6904708	1					
ANR	6905916	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6905917	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905918	Identifier	luks		6904708	0					
ANR	6905919	Identifier	header		6904708	1					
ANR	6905920	Identifier	key_bytes		6904708	1					
ANR	6905921	IfStatement	"if ( qcrypto_pbkdf2 ( luks_opts . hash_alg , ( uint8_t * ) password , strlen ( password ) , luks -> header . key_slots [ 0 ] . salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , luks -> header . key_slots [ 0 ] . iterations , slotkey , luks -> header . key_bytes , errp ) < 0 )"		6904708	77					
ANR	6905922	Condition	"qcrypto_pbkdf2 ( luks_opts . hash_alg , ( uint8_t * ) password , strlen ( password ) , luks -> header . key_slots [ 0 ] . salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , luks -> header . key_slots [ 0 ] . iterations , slotkey , luks -> header . key_bytes , errp ) < 0"	581:8:11131:11489	6904708	0	True				
ANR	6905923	RelationalExpression	"qcrypto_pbkdf2 ( luks_opts . hash_alg , ( uint8_t * ) password , strlen ( password ) , luks -> header . key_slots [ 0 ] . salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , luks -> header . key_slots [ 0 ] . iterations , slotkey , luks -> header . key_bytes , errp ) < 0"		6904708	0		<			
ANR	6905924	CallExpression	"qcrypto_pbkdf2 ( luks_opts . hash_alg , ( uint8_t * ) password , strlen ( password ) , luks -> header . key_slots [ 0 ] . salt , QCRYPTO_BLOCK_LUKS_SALT_LEN , luks -> header . key_slots [ 0 ] . iterations , slotkey , luks -> header . key_bytes , errp )"		6904708	0					
ANR	6905925	Callee	qcrypto_pbkdf2		6904708	0					
ANR	6905926	Identifier	qcrypto_pbkdf2		6904708	0					
ANR	6905927	ArgumentList	luks_opts . hash_alg		6904708	1					
ANR	6905928	Argument	luks_opts . hash_alg		6904708	0					
ANR	6905929	MemberAccess	luks_opts . hash_alg		6904708	0					
ANR	6905930	Identifier	luks_opts		6904708	0					
ANR	6905931	Identifier	hash_alg		6904708	1					
ANR	6905932	Argument	( uint8_t * ) password		6904708	1					
ANR	6905933	CastExpression	( uint8_t * ) password		6904708	0					
ANR	6905934	CastTarget	uint8_t *		6904708	0					
ANR	6905935	Identifier	password		6904708	1					
ANR	6905936	Argument	strlen ( password )		6904708	2					
ANR	6905937	CallExpression	strlen ( password )		6904708	0					
ANR	6905938	Callee	strlen		6904708	0					
ANR	6905939	Identifier	strlen		6904708	0					
ANR	6905940	ArgumentList	password		6904708	1					
ANR	6905941	Argument	password		6904708	0					
ANR	6905942	Identifier	password		6904708	0					
ANR	6905943	Argument	luks -> header . key_slots [ 0 ] . salt		6904708	3					
ANR	6905944	MemberAccess	luks -> header . key_slots [ 0 ] . salt		6904708	0					
ANR	6905945	ArrayIndexing	luks -> header . key_slots [ 0 ]		6904708	0					
ANR	6905946	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6905947	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905948	Identifier	luks		6904708	0					
ANR	6905949	Identifier	header		6904708	1					
ANR	6905950	Identifier	key_slots		6904708	1					
ANR	6905951	PrimaryExpression	0		6904708	1					
ANR	6905952	Identifier	salt		6904708	1					
ANR	6905953	Argument	QCRYPTO_BLOCK_LUKS_SALT_LEN		6904708	4					
ANR	6905954	Identifier	QCRYPTO_BLOCK_LUKS_SALT_LEN		6904708	0					
ANR	6905955	Argument	luks -> header . key_slots [ 0 ] . iterations		6904708	5					
ANR	6905956	MemberAccess	luks -> header . key_slots [ 0 ] . iterations		6904708	0					
ANR	6905957	ArrayIndexing	luks -> header . key_slots [ 0 ]		6904708	0					
ANR	6905958	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6905959	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905960	Identifier	luks		6904708	0					
ANR	6905961	Identifier	header		6904708	1					
ANR	6905962	Identifier	key_slots		6904708	1					
ANR	6905963	PrimaryExpression	0		6904708	1					
ANR	6905964	Identifier	iterations		6904708	1					
ANR	6905965	Argument	slotkey		6904708	6					
ANR	6905966	Identifier	slotkey		6904708	0					
ANR	6905967	Argument	luks -> header . key_bytes		6904708	7					
ANR	6905968	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6905969	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905970	Identifier	luks		6904708	0					
ANR	6905971	Identifier	header		6904708	1					
ANR	6905972	Identifier	key_bytes		6904708	1					
ANR	6905973	Argument	errp		6904708	8					
ANR	6905974	Identifier	errp		6904708	0					
ANR	6905975	PrimaryExpression	0		6904708	1					
ANR	6905976	CompoundStatement		581:34:11180:11180	6904708	1					
ANR	6905977	GotoStatement	goto error ;	595:8:11503:11513	6904708	0	True				
ANR	6905978	Identifier	error		6904708	0					
ANR	6905979	ExpressionStatement	"cipher = qcrypto_cipher_new ( luks_opts . cipher_alg , luks_opts . cipher_mode , slotkey , luks -> header . key_bytes , errp )"	609:4:11627:11837	6904708	78	True				
ANR	6905980	AssignmentExpression	"cipher = qcrypto_cipher_new ( luks_opts . cipher_alg , luks_opts . cipher_mode , slotkey , luks -> header . key_bytes , errp )"		6904708	0		=			
ANR	6905981	Identifier	cipher		6904708	0					
ANR	6905982	CallExpression	"qcrypto_cipher_new ( luks_opts . cipher_alg , luks_opts . cipher_mode , slotkey , luks -> header . key_bytes , errp )"		6904708	1					
ANR	6905983	Callee	qcrypto_cipher_new		6904708	0					
ANR	6905984	Identifier	qcrypto_cipher_new		6904708	0					
ANR	6905985	ArgumentList	luks_opts . cipher_alg		6904708	1					
ANR	6905986	Argument	luks_opts . cipher_alg		6904708	0					
ANR	6905987	MemberAccess	luks_opts . cipher_alg		6904708	0					
ANR	6905988	Identifier	luks_opts		6904708	0					
ANR	6905989	Identifier	cipher_alg		6904708	1					
ANR	6905990	Argument	luks_opts . cipher_mode		6904708	1					
ANR	6905991	MemberAccess	luks_opts . cipher_mode		6904708	0					
ANR	6905992	Identifier	luks_opts		6904708	0					
ANR	6905993	Identifier	cipher_mode		6904708	1					
ANR	6905994	Argument	slotkey		6904708	2					
ANR	6905995	Identifier	slotkey		6904708	0					
ANR	6905996	Argument	luks -> header . key_bytes		6904708	3					
ANR	6905997	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6905998	PtrMemberAccess	luks -> header		6904708	0					
ANR	6905999	Identifier	luks		6904708	0					
ANR	6906000	Identifier	header		6904708	1					
ANR	6906001	Identifier	key_bytes		6904708	1					
ANR	6906002	Argument	errp		6904708	4					
ANR	6906003	Identifier	errp		6904708	0					
ANR	6906004	IfStatement	if ( ! cipher )		6904708	79					
ANR	6906005	Condition	! cipher	617:8:11848:11854	6904708	0	True				
ANR	6906006	UnaryOperationExpression	! cipher		6904708	0					
ANR	6906007	UnaryOperator	!		6904708	0					
ANR	6906008	Identifier	cipher		6904708	1					
ANR	6906009	CompoundStatement		605:17:11545:11545	6904708	1					
ANR	6906010	GotoStatement	goto error ;	619:8:11868:11878	6904708	0	True				
ANR	6906011	Identifier	error		6904708	0					
ANR	6906012	ExpressionStatement	"ivgen = qcrypto_ivgen_new ( luks_opts . ivgen_alg , ivcipheralg , luks_opts . ivgen_hash_alg , slotkey , luks -> header . key_bytes , errp )"	625:4:11894:12142	6904708	80	True				
ANR	6906013	AssignmentExpression	"ivgen = qcrypto_ivgen_new ( luks_opts . ivgen_alg , ivcipheralg , luks_opts . ivgen_hash_alg , slotkey , luks -> header . key_bytes , errp )"		6904708	0		=			
ANR	6906014	Identifier	ivgen		6904708	0					
ANR	6906015	CallExpression	"qcrypto_ivgen_new ( luks_opts . ivgen_alg , ivcipheralg , luks_opts . ivgen_hash_alg , slotkey , luks -> header . key_bytes , errp )"		6904708	1					
ANR	6906016	Callee	qcrypto_ivgen_new		6904708	0					
ANR	6906017	Identifier	qcrypto_ivgen_new		6904708	0					
ANR	6906018	ArgumentList	luks_opts . ivgen_alg		6904708	1					
ANR	6906019	Argument	luks_opts . ivgen_alg		6904708	0					
ANR	6906020	MemberAccess	luks_opts . ivgen_alg		6904708	0					
ANR	6906021	Identifier	luks_opts		6904708	0					
ANR	6906022	Identifier	ivgen_alg		6904708	1					
ANR	6906023	Argument	ivcipheralg		6904708	1					
ANR	6906024	Identifier	ivcipheralg		6904708	0					
ANR	6906025	Argument	luks_opts . ivgen_hash_alg		6904708	2					
ANR	6906026	MemberAccess	luks_opts . ivgen_hash_alg		6904708	0					
ANR	6906027	Identifier	luks_opts		6904708	0					
ANR	6906028	Identifier	ivgen_hash_alg		6904708	1					
ANR	6906029	Argument	slotkey		6904708	3					
ANR	6906030	Identifier	slotkey		6904708	0					
ANR	6906031	Argument	luks -> header . key_bytes		6904708	4					
ANR	6906032	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6906033	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906034	Identifier	luks		6904708	0					
ANR	6906035	Identifier	header		6904708	1					
ANR	6906036	Identifier	key_bytes		6904708	1					
ANR	6906037	Argument	errp		6904708	5					
ANR	6906038	Identifier	errp		6904708	0					
ANR	6906039	IfStatement	if ( ! ivgen )		6904708	81					
ANR	6906040	Condition	! ivgen	635:8:12153:12158	6904708	0	True				
ANR	6906041	UnaryOperationExpression	! ivgen		6904708	0					
ANR	6906042	UnaryOperator	!		6904708	0					
ANR	6906043	Identifier	ivgen		6904708	1					
ANR	6906044	CompoundStatement		623:16:11849:11849	6904708	1					
ANR	6906045	GotoStatement	goto error ;	637:8:12172:12182	6904708	0	True				
ANR	6906046	Identifier	error		6904708	0					
ANR	6906047	ExpressionStatement	"splitkey = g_new0 ( uint8_t , splitkeylen )"	649:4:12343:12382	6904708	82	True				
ANR	6906048	AssignmentExpression	"splitkey = g_new0 ( uint8_t , splitkeylen )"		6904708	0		=			
ANR	6906049	Identifier	splitkey		6904708	0					
ANR	6906050	CallExpression	"g_new0 ( uint8_t , splitkeylen )"		6904708	1					
ANR	6906051	Callee	g_new0		6904708	0					
ANR	6906052	Identifier	g_new0		6904708	0					
ANR	6906053	ArgumentList	uint8_t		6904708	1					
ANR	6906054	Argument	uint8_t		6904708	0					
ANR	6906055	Identifier	uint8_t		6904708	0					
ANR	6906056	Argument	splitkeylen		6904708	1					
ANR	6906057	Identifier	splitkeylen		6904708	0					
ANR	6906058	IfStatement	"if ( qcrypto_afsplit_encode ( luks_opts . hash_alg , luks -> header . key_bytes , luks -> header . key_slots [ 0 ] . stripes , masterkey , splitkey , errp ) < 0 )"		6904708	83					
ANR	6906059	Condition	"qcrypto_afsplit_encode ( luks_opts . hash_alg , luks -> header . key_bytes , luks -> header . key_slots [ 0 ] . stripes , masterkey , splitkey , errp ) < 0"	653:8:12395:12686	6904708	0	True				
ANR	6906060	RelationalExpression	"qcrypto_afsplit_encode ( luks_opts . hash_alg , luks -> header . key_bytes , luks -> header . key_slots [ 0 ] . stripes , masterkey , splitkey , errp ) < 0"		6904708	0		<			
ANR	6906061	CallExpression	"qcrypto_afsplit_encode ( luks_opts . hash_alg , luks -> header . key_bytes , luks -> header . key_slots [ 0 ] . stripes , masterkey , splitkey , errp )"		6904708	0					
ANR	6906062	Callee	qcrypto_afsplit_encode		6904708	0					
ANR	6906063	Identifier	qcrypto_afsplit_encode		6904708	0					
ANR	6906064	ArgumentList	luks_opts . hash_alg		6904708	1					
ANR	6906065	Argument	luks_opts . hash_alg		6904708	0					
ANR	6906066	MemberAccess	luks_opts . hash_alg		6904708	0					
ANR	6906067	Identifier	luks_opts		6904708	0					
ANR	6906068	Identifier	hash_alg		6904708	1					
ANR	6906069	Argument	luks -> header . key_bytes		6904708	1					
ANR	6906070	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6906071	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906072	Identifier	luks		6904708	0					
ANR	6906073	Identifier	header		6904708	1					
ANR	6906074	Identifier	key_bytes		6904708	1					
ANR	6906075	Argument	luks -> header . key_slots [ 0 ] . stripes		6904708	2					
ANR	6906076	MemberAccess	luks -> header . key_slots [ 0 ] . stripes		6904708	0					
ANR	6906077	ArrayIndexing	luks -> header . key_slots [ 0 ]		6904708	0					
ANR	6906078	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6906079	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906080	Identifier	luks		6904708	0					
ANR	6906081	Identifier	header		6904708	1					
ANR	6906082	Identifier	key_slots		6904708	1					
ANR	6906083	PrimaryExpression	0		6904708	1					
ANR	6906084	Identifier	stripes		6904708	1					
ANR	6906085	Argument	masterkey		6904708	3					
ANR	6906086	Identifier	masterkey		6904708	0					
ANR	6906087	Argument	splitkey		6904708	4					
ANR	6906088	Identifier	splitkey		6904708	0					
ANR	6906089	Argument	errp		6904708	5					
ANR	6906090	Identifier	errp		6904708	0					
ANR	6906091	PrimaryExpression	0		6904708	1					
ANR	6906092	CompoundStatement		651:42:12377:12377	6904708	1					
ANR	6906093	GotoStatement	goto error ;	665:8:12700:12710	6904708	0	True				
ANR	6906094	Identifier	error		6904708	0					
ANR	6906095	IfStatement	"if ( qcrypto_block_encrypt_helper ( cipher , block -> niv , ivgen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE , 0 , splitkey , splitkeylen , errp ) < 0 )"		6904708	84					
ANR	6906096	Condition	"qcrypto_block_encrypt_helper ( cipher , block -> niv , ivgen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE , 0 , splitkey , splitkeylen , errp ) < 0"	675:8:12852:13164	6904708	0	True				
ANR	6906097	RelationalExpression	"qcrypto_block_encrypt_helper ( cipher , block -> niv , ivgen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE , 0 , splitkey , splitkeylen , errp ) < 0"		6904708	0		<			
ANR	6906098	CallExpression	"qcrypto_block_encrypt_helper ( cipher , block -> niv , ivgen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE , 0 , splitkey , splitkeylen , errp )"		6904708	0					
ANR	6906099	Callee	qcrypto_block_encrypt_helper		6904708	0					
ANR	6906100	Identifier	qcrypto_block_encrypt_helper		6904708	0					
ANR	6906101	ArgumentList	cipher		6904708	1					
ANR	6906102	Argument	cipher		6904708	0					
ANR	6906103	Identifier	cipher		6904708	0					
ANR	6906104	Argument	block -> niv		6904708	1					
ANR	6906105	PtrMemberAccess	block -> niv		6904708	0					
ANR	6906106	Identifier	block		6904708	0					
ANR	6906107	Identifier	niv		6904708	1					
ANR	6906108	Argument	ivgen		6904708	2					
ANR	6906109	Identifier	ivgen		6904708	0					
ANR	6906110	Argument	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	3					
ANR	6906111	Identifier	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	0					
ANR	6906112	Argument	0		6904708	4					
ANR	6906113	PrimaryExpression	0		6904708	0					
ANR	6906114	Argument	splitkey		6904708	5					
ANR	6906115	Identifier	splitkey		6904708	0					
ANR	6906116	Argument	splitkeylen		6904708	6					
ANR	6906117	Identifier	splitkeylen		6904708	0					
ANR	6906118	Argument	errp		6904708	7					
ANR	6906119	Identifier	errp		6904708	0					
ANR	6906120	PrimaryExpression	0		6904708	1					
ANR	6906121	CompoundStatement		673:48:12855:12855	6904708	1					
ANR	6906122	GotoStatement	goto error ;	687:8:13178:13188	6904708	0	True				
ANR	6906123	Identifier	error		6904708	0					
ANR	6906124	ExpressionStatement	"luks -> header . payload_offset = ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) + ( ROUND_UP ( DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) , ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) ) * QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS )"	703:4:13451:13805	6904708	85	True				
ANR	6906125	AssignmentExpression	"luks -> header . payload_offset = ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) + ( ROUND_UP ( DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) , ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) ) * QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS )"		6904708	0		=			
ANR	6906126	MemberAccess	luks -> header . payload_offset		6904708	0					
ANR	6906127	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906128	Identifier	luks		6904708	0					
ANR	6906129	Identifier	header		6904708	1					
ANR	6906130	Identifier	payload_offset		6904708	1					
ANR	6906131	AdditiveExpression	"( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) + ( ROUND_UP ( DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) , ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) ) * QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS )"		6904708	1		+			
ANR	6906132	MultiplicativeExpression	QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	0		/			
ANR	6906133	Identifier	QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET		6904708	0					
ANR	6906134	Identifier	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	1					
ANR	6906135	MultiplicativeExpression	"ROUND_UP ( DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) , ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) ) * QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS"		6904708	1		*			
ANR	6906136	CallExpression	"ROUND_UP ( DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) , ( QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE ) )"		6904708	0					
ANR	6906137	Callee	ROUND_UP		6904708	0					
ANR	6906138	Identifier	ROUND_UP		6904708	0					
ANR	6906139	ArgumentList	"DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE )"		6904708	1					
ANR	6906140	Argument	"DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE )"		6904708	0					
ANR	6906141	CallExpression	"DIV_ROUND_UP ( splitkeylen , QCRYPTO_BLOCK_LUKS_SECTOR_SIZE )"		6904708	0					
ANR	6906142	Callee	DIV_ROUND_UP		6904708	0					
ANR	6906143	Identifier	DIV_ROUND_UP		6904708	0					
ANR	6906144	ArgumentList	splitkeylen		6904708	1					
ANR	6906145	Argument	splitkeylen		6904708	0					
ANR	6906146	Identifier	splitkeylen		6904708	0					
ANR	6906147	Argument	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	1					
ANR	6906148	Identifier	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	0					
ANR	6906149	Argument	QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	1					
ANR	6906150	MultiplicativeExpression	QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET / QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	0		/			
ANR	6906151	Identifier	QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET		6904708	0					
ANR	6906152	Identifier	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	1					
ANR	6906153	Identifier	QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS		6904708	1					
ANR	6906154	ExpressionStatement	block -> payload_offset = luks -> header . payload_offset * QCRYPTO_BLOCK_LUKS_SECTOR_SIZE	719:4:13814:13907	6904708	86	True				
ANR	6906155	AssignmentExpression	block -> payload_offset = luks -> header . payload_offset * QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	0		=			
ANR	6906156	PtrMemberAccess	block -> payload_offset		6904708	0					
ANR	6906157	Identifier	block		6904708	0					
ANR	6906158	Identifier	payload_offset		6904708	1					
ANR	6906159	MultiplicativeExpression	luks -> header . payload_offset * QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	1		*			
ANR	6906160	MemberAccess	luks -> header . payload_offset		6904708	0					
ANR	6906161	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906162	Identifier	luks		6904708	0					
ANR	6906163	Identifier	header		6904708	1					
ANR	6906164	Identifier	payload_offset		6904708	1					
ANR	6906165	Identifier	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	1					
ANR	6906166	ExpressionStatement	"initfunc ( block , block -> payload_offset , & local_err , opaque )"	727:4:13972:14030	6904708	87	True				
ANR	6906167	CallExpression	"initfunc ( block , block -> payload_offset , & local_err , opaque )"		6904708	0					
ANR	6906168	Callee	initfunc		6904708	0					
ANR	6906169	Identifier	initfunc		6904708	0					
ANR	6906170	ArgumentList	block		6904708	1					
ANR	6906171	Argument	block		6904708	0					
ANR	6906172	Identifier	block		6904708	0					
ANR	6906173	Argument	block -> payload_offset		6904708	1					
ANR	6906174	PtrMemberAccess	block -> payload_offset		6904708	0					
ANR	6906175	Identifier	block		6904708	0					
ANR	6906176	Identifier	payload_offset		6904708	1					
ANR	6906177	Argument	& local_err		6904708	2					
ANR	6906178	UnaryOperationExpression	& local_err		6904708	0					
ANR	6906179	UnaryOperator	&		6904708	0					
ANR	6906180	Identifier	local_err		6904708	1					
ANR	6906181	Argument	opaque		6904708	3					
ANR	6906182	Identifier	opaque		6904708	0					
ANR	6906183	IfStatement	if ( local_err )		6904708	88					
ANR	6906184	Condition	local_err	729:8:14041:14049	6904708	0	True				
ANR	6906185	Identifier	local_err		6904708	0					
ANR	6906186	CompoundStatement		717:19:13740:13740	6904708	1					
ANR	6906187	ExpressionStatement	"error_propagate ( errp , local_err )"	731:8:14063:14095	6904708	0	True				
ANR	6906188	CallExpression	"error_propagate ( errp , local_err )"		6904708	0					
ANR	6906189	Callee	error_propagate		6904708	0					
ANR	6906190	Identifier	error_propagate		6904708	0					
ANR	6906191	ArgumentList	errp		6904708	1					
ANR	6906192	Argument	errp		6904708	0					
ANR	6906193	Identifier	errp		6904708	0					
ANR	6906194	Argument	local_err		6904708	1					
ANR	6906195	Identifier	local_err		6904708	0					
ANR	6906196	GotoStatement	goto error ;	733:8:14106:14116	6904708	1	True				
ANR	6906197	Identifier	error		6904708	0					
ANR	6906198	ExpressionStatement	cpu_to_be16s ( & luks -> header . version )	743:4:14229:14264	6904708	89	True				
ANR	6906199	CallExpression	cpu_to_be16s ( & luks -> header . version )		6904708	0					
ANR	6906200	Callee	cpu_to_be16s		6904708	0					
ANR	6906201	Identifier	cpu_to_be16s		6904708	0					
ANR	6906202	ArgumentList	& luks -> header . version		6904708	1					
ANR	6906203	Argument	& luks -> header . version		6904708	0					
ANR	6906204	UnaryOperationExpression	& luks -> header . version		6904708	0					
ANR	6906205	UnaryOperator	&		6904708	0					
ANR	6906206	MemberAccess	luks -> header . version		6904708	1					
ANR	6906207	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906208	Identifier	luks		6904708	0					
ANR	6906209	Identifier	header		6904708	1					
ANR	6906210	Identifier	version		6904708	1					
ANR	6906211	ExpressionStatement	cpu_to_be32s ( & luks -> header . payload_offset )	745:4:14271:14313	6904708	90	True				
ANR	6906212	CallExpression	cpu_to_be32s ( & luks -> header . payload_offset )		6904708	0					
ANR	6906213	Callee	cpu_to_be32s		6904708	0					
ANR	6906214	Identifier	cpu_to_be32s		6904708	0					
ANR	6906215	ArgumentList	& luks -> header . payload_offset		6904708	1					
ANR	6906216	Argument	& luks -> header . payload_offset		6904708	0					
ANR	6906217	UnaryOperationExpression	& luks -> header . payload_offset		6904708	0					
ANR	6906218	UnaryOperator	&		6904708	0					
ANR	6906219	MemberAccess	luks -> header . payload_offset		6904708	1					
ANR	6906220	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906221	Identifier	luks		6904708	0					
ANR	6906222	Identifier	header		6904708	1					
ANR	6906223	Identifier	payload_offset		6904708	1					
ANR	6906224	ExpressionStatement	cpu_to_be32s ( & luks -> header . key_bytes )	747:4:14320:14357	6904708	91	True				
ANR	6906225	CallExpression	cpu_to_be32s ( & luks -> header . key_bytes )		6904708	0					
ANR	6906226	Callee	cpu_to_be32s		6904708	0					
ANR	6906227	Identifier	cpu_to_be32s		6904708	0					
ANR	6906228	ArgumentList	& luks -> header . key_bytes		6904708	1					
ANR	6906229	Argument	& luks -> header . key_bytes		6904708	0					
ANR	6906230	UnaryOperationExpression	& luks -> header . key_bytes		6904708	0					
ANR	6906231	UnaryOperator	&		6904708	0					
ANR	6906232	MemberAccess	luks -> header . key_bytes		6904708	1					
ANR	6906233	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906234	Identifier	luks		6904708	0					
ANR	6906235	Identifier	header		6904708	1					
ANR	6906236	Identifier	key_bytes		6904708	1					
ANR	6906237	ExpressionStatement	cpu_to_be32s ( & luks -> header . master_key_iterations )	749:4:14364:14413	6904708	92	True				
ANR	6906238	CallExpression	cpu_to_be32s ( & luks -> header . master_key_iterations )		6904708	0					
ANR	6906239	Callee	cpu_to_be32s		6904708	0					
ANR	6906240	Identifier	cpu_to_be32s		6904708	0					
ANR	6906241	ArgumentList	& luks -> header . master_key_iterations		6904708	1					
ANR	6906242	Argument	& luks -> header . master_key_iterations		6904708	0					
ANR	6906243	UnaryOperationExpression	& luks -> header . master_key_iterations		6904708	0					
ANR	6906244	UnaryOperator	&		6904708	0					
ANR	6906245	MemberAccess	luks -> header . master_key_iterations		6904708	1					
ANR	6906246	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906247	Identifier	luks		6904708	0					
ANR	6906248	Identifier	header		6904708	1					
ANR	6906249	Identifier	master_key_iterations		6904708	1					
ANR	6906250	ForStatement	for ( i = 0 ; i < QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS ; i ++ )		6904708	93					
ANR	6906251	ForInit	i = 0 ;	753:9:14427:14432	6904708	0	True				
ANR	6906252	AssignmentExpression	i = 0		6904708	0		=			
ANR	6906253	Identifier	i		6904708	0					
ANR	6906254	PrimaryExpression	0		6904708	1					
ANR	6906255	Condition	i < QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS	753:16:14434:14469	6904708	1	True				
ANR	6906256	RelationalExpression	i < QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS		6904708	0		<			
ANR	6906257	Identifier	i		6904708	0					
ANR	6906258	Identifier	QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS		6904708	1					
ANR	6906259	PostIncDecOperationExpression	i ++	753:54:14472:14474	6904708	2	True				
ANR	6906260	Identifier	i		6904708	0					
ANR	6906261	IncDec	++		6904708	1					
ANR	6906262	CompoundStatement		741:59:14165:14165	6904708	3					
ANR	6906263	ExpressionStatement	cpu_to_be32s ( & luks -> header . key_slots [ i ] . active )	755:8:14488:14535	6904708	0	True				
ANR	6906264	CallExpression	cpu_to_be32s ( & luks -> header . key_slots [ i ] . active )		6904708	0					
ANR	6906265	Callee	cpu_to_be32s		6904708	0					
ANR	6906266	Identifier	cpu_to_be32s		6904708	0					
ANR	6906267	ArgumentList	& luks -> header . key_slots [ i ] . active		6904708	1					
ANR	6906268	Argument	& luks -> header . key_slots [ i ] . active		6904708	0					
ANR	6906269	UnaryOperationExpression	& luks -> header . key_slots [ i ] . active		6904708	0					
ANR	6906270	UnaryOperator	&		6904708	0					
ANR	6906271	MemberAccess	luks -> header . key_slots [ i ] . active		6904708	1					
ANR	6906272	ArrayIndexing	luks -> header . key_slots [ i ]		6904708	0					
ANR	6906273	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6906274	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906275	Identifier	luks		6904708	0					
ANR	6906276	Identifier	header		6904708	1					
ANR	6906277	Identifier	key_slots		6904708	1					
ANR	6906278	Identifier	i		6904708	1					
ANR	6906279	Identifier	active		6904708	1					
ANR	6906280	ExpressionStatement	cpu_to_be32s ( & luks -> header . key_slots [ i ] . iterations )	757:8:14546:14597	6904708	1	True				
ANR	6906281	CallExpression	cpu_to_be32s ( & luks -> header . key_slots [ i ] . iterations )		6904708	0					
ANR	6906282	Callee	cpu_to_be32s		6904708	0					
ANR	6906283	Identifier	cpu_to_be32s		6904708	0					
ANR	6906284	ArgumentList	& luks -> header . key_slots [ i ] . iterations		6904708	1					
ANR	6906285	Argument	& luks -> header . key_slots [ i ] . iterations		6904708	0					
ANR	6906286	UnaryOperationExpression	& luks -> header . key_slots [ i ] . iterations		6904708	0					
ANR	6906287	UnaryOperator	&		6904708	0					
ANR	6906288	MemberAccess	luks -> header . key_slots [ i ] . iterations		6904708	1					
ANR	6906289	ArrayIndexing	luks -> header . key_slots [ i ]		6904708	0					
ANR	6906290	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6906291	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906292	Identifier	luks		6904708	0					
ANR	6906293	Identifier	header		6904708	1					
ANR	6906294	Identifier	key_slots		6904708	1					
ANR	6906295	Identifier	i		6904708	1					
ANR	6906296	Identifier	iterations		6904708	1					
ANR	6906297	ExpressionStatement	cpu_to_be32s ( & luks -> header . key_slots [ i ] . key_offset )	759:8:14608:14659	6904708	2	True				
ANR	6906298	CallExpression	cpu_to_be32s ( & luks -> header . key_slots [ i ] . key_offset )		6904708	0					
ANR	6906299	Callee	cpu_to_be32s		6904708	0					
ANR	6906300	Identifier	cpu_to_be32s		6904708	0					
ANR	6906301	ArgumentList	& luks -> header . key_slots [ i ] . key_offset		6904708	1					
ANR	6906302	Argument	& luks -> header . key_slots [ i ] . key_offset		6904708	0					
ANR	6906303	UnaryOperationExpression	& luks -> header . key_slots [ i ] . key_offset		6904708	0					
ANR	6906304	UnaryOperator	&		6904708	0					
ANR	6906305	MemberAccess	luks -> header . key_slots [ i ] . key_offset		6904708	1					
ANR	6906306	ArrayIndexing	luks -> header . key_slots [ i ]		6904708	0					
ANR	6906307	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6906308	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906309	Identifier	luks		6904708	0					
ANR	6906310	Identifier	header		6904708	1					
ANR	6906311	Identifier	key_slots		6904708	1					
ANR	6906312	Identifier	i		6904708	1					
ANR	6906313	Identifier	key_offset		6904708	1					
ANR	6906314	ExpressionStatement	cpu_to_be32s ( & luks -> header . key_slots [ i ] . stripes )	761:8:14670:14718	6904708	3	True				
ANR	6906315	CallExpression	cpu_to_be32s ( & luks -> header . key_slots [ i ] . stripes )		6904708	0					
ANR	6906316	Callee	cpu_to_be32s		6904708	0					
ANR	6906317	Identifier	cpu_to_be32s		6904708	0					
ANR	6906318	ArgumentList	& luks -> header . key_slots [ i ] . stripes		6904708	1					
ANR	6906319	Argument	& luks -> header . key_slots [ i ] . stripes		6904708	0					
ANR	6906320	UnaryOperationExpression	& luks -> header . key_slots [ i ] . stripes		6904708	0					
ANR	6906321	UnaryOperator	&		6904708	0					
ANR	6906322	MemberAccess	luks -> header . key_slots [ i ] . stripes		6904708	1					
ANR	6906323	ArrayIndexing	luks -> header . key_slots [ i ]		6904708	0					
ANR	6906324	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6906325	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906326	Identifier	luks		6904708	0					
ANR	6906327	Identifier	header		6904708	1					
ANR	6906328	Identifier	key_slots		6904708	1					
ANR	6906329	Identifier	i		6904708	1					
ANR	6906330	Identifier	stripes		6904708	1					
ANR	6906331	ExpressionStatement	"writefunc ( block , 0 , ( const uint8_t * ) & luks -> header , sizeof ( luks -> header ) , & local_err , opaque )"	771:4:14799:14952	6904708	94	True				
ANR	6906332	CallExpression	"writefunc ( block , 0 , ( const uint8_t * ) & luks -> header , sizeof ( luks -> header ) , & local_err , opaque )"		6904708	0					
ANR	6906333	Callee	writefunc		6904708	0					
ANR	6906334	Identifier	writefunc		6904708	0					
ANR	6906335	ArgumentList	block		6904708	1					
ANR	6906336	Argument	block		6904708	0					
ANR	6906337	Identifier	block		6904708	0					
ANR	6906338	Argument	0		6904708	1					
ANR	6906339	PrimaryExpression	0		6904708	0					
ANR	6906340	Argument	( const uint8_t * ) & luks -> header		6904708	2					
ANR	6906341	CastExpression	( const uint8_t * ) & luks -> header		6904708	0					
ANR	6906342	CastTarget	const uint8_t *		6904708	0					
ANR	6906343	UnaryOperationExpression	& luks -> header		6904708	1					
ANR	6906344	UnaryOperator	&		6904708	0					
ANR	6906345	PtrMemberAccess	luks -> header		6904708	1					
ANR	6906346	Identifier	luks		6904708	0					
ANR	6906347	Identifier	header		6904708	1					
ANR	6906348	Argument	sizeof ( luks -> header )		6904708	3					
ANR	6906349	SizeofExpression	sizeof ( luks -> header )		6904708	0					
ANR	6906350	Sizeof	sizeof		6904708	0					
ANR	6906351	PtrMemberAccess	luks -> header		6904708	1					
ANR	6906352	Identifier	luks		6904708	0					
ANR	6906353	Identifier	header		6904708	1					
ANR	6906354	Argument	& local_err		6904708	4					
ANR	6906355	UnaryOperationExpression	& local_err		6904708	0					
ANR	6906356	UnaryOperator	&		6904708	0					
ANR	6906357	Identifier	local_err		6904708	1					
ANR	6906358	Argument	opaque		6904708	5					
ANR	6906359	Identifier	opaque		6904708	0					
ANR	6906360	ExpressionStatement	be16_to_cpus ( & luks -> header . version )	791:4:15119:15154	6904708	95	True				
ANR	6906361	CallExpression	be16_to_cpus ( & luks -> header . version )		6904708	0					
ANR	6906362	Callee	be16_to_cpus		6904708	0					
ANR	6906363	Identifier	be16_to_cpus		6904708	0					
ANR	6906364	ArgumentList	& luks -> header . version		6904708	1					
ANR	6906365	Argument	& luks -> header . version		6904708	0					
ANR	6906366	UnaryOperationExpression	& luks -> header . version		6904708	0					
ANR	6906367	UnaryOperator	&		6904708	0					
ANR	6906368	MemberAccess	luks -> header . version		6904708	1					
ANR	6906369	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906370	Identifier	luks		6904708	0					
ANR	6906371	Identifier	header		6904708	1					
ANR	6906372	Identifier	version		6904708	1					
ANR	6906373	ExpressionStatement	be32_to_cpus ( & luks -> header . payload_offset )	793:4:15161:15203	6904708	96	True				
ANR	6906374	CallExpression	be32_to_cpus ( & luks -> header . payload_offset )		6904708	0					
ANR	6906375	Callee	be32_to_cpus		6904708	0					
ANR	6906376	Identifier	be32_to_cpus		6904708	0					
ANR	6906377	ArgumentList	& luks -> header . payload_offset		6904708	1					
ANR	6906378	Argument	& luks -> header . payload_offset		6904708	0					
ANR	6906379	UnaryOperationExpression	& luks -> header . payload_offset		6904708	0					
ANR	6906380	UnaryOperator	&		6904708	0					
ANR	6906381	MemberAccess	luks -> header . payload_offset		6904708	1					
ANR	6906382	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906383	Identifier	luks		6904708	0					
ANR	6906384	Identifier	header		6904708	1					
ANR	6906385	Identifier	payload_offset		6904708	1					
ANR	6906386	ExpressionStatement	be32_to_cpus ( & luks -> header . key_bytes )	795:4:15210:15247	6904708	97	True				
ANR	6906387	CallExpression	be32_to_cpus ( & luks -> header . key_bytes )		6904708	0					
ANR	6906388	Callee	be32_to_cpus		6904708	0					
ANR	6906389	Identifier	be32_to_cpus		6904708	0					
ANR	6906390	ArgumentList	& luks -> header . key_bytes		6904708	1					
ANR	6906391	Argument	& luks -> header . key_bytes		6904708	0					
ANR	6906392	UnaryOperationExpression	& luks -> header . key_bytes		6904708	0					
ANR	6906393	UnaryOperator	&		6904708	0					
ANR	6906394	MemberAccess	luks -> header . key_bytes		6904708	1					
ANR	6906395	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906396	Identifier	luks		6904708	0					
ANR	6906397	Identifier	header		6904708	1					
ANR	6906398	Identifier	key_bytes		6904708	1					
ANR	6906399	ExpressionStatement	be32_to_cpus ( & luks -> header . master_key_iterations )	797:4:15254:15303	6904708	98	True				
ANR	6906400	CallExpression	be32_to_cpus ( & luks -> header . master_key_iterations )		6904708	0					
ANR	6906401	Callee	be32_to_cpus		6904708	0					
ANR	6906402	Identifier	be32_to_cpus		6904708	0					
ANR	6906403	ArgumentList	& luks -> header . master_key_iterations		6904708	1					
ANR	6906404	Argument	& luks -> header . master_key_iterations		6904708	0					
ANR	6906405	UnaryOperationExpression	& luks -> header . master_key_iterations		6904708	0					
ANR	6906406	UnaryOperator	&		6904708	0					
ANR	6906407	MemberAccess	luks -> header . master_key_iterations		6904708	1					
ANR	6906408	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906409	Identifier	luks		6904708	0					
ANR	6906410	Identifier	header		6904708	1					
ANR	6906411	Identifier	master_key_iterations		6904708	1					
ANR	6906412	ForStatement	for ( i = 0 ; i < QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS ; i ++ )		6904708	99					
ANR	6906413	ForInit	i = 0 ;	801:9:15317:15322	6904708	0	True				
ANR	6906414	AssignmentExpression	i = 0		6904708	0		=			
ANR	6906415	Identifier	i		6904708	0					
ANR	6906416	PrimaryExpression	0		6904708	1					
ANR	6906417	Condition	i < QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS	801:16:15324:15359	6904708	1	True				
ANR	6906418	RelationalExpression	i < QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS		6904708	0		<			
ANR	6906419	Identifier	i		6904708	0					
ANR	6906420	Identifier	QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS		6904708	1					
ANR	6906421	PostIncDecOperationExpression	i ++	801:54:15362:15364	6904708	2	True				
ANR	6906422	Identifier	i		6904708	0					
ANR	6906423	IncDec	++		6904708	1					
ANR	6906424	CompoundStatement		789:59:15055:15055	6904708	3					
ANR	6906425	ExpressionStatement	be32_to_cpus ( & luks -> header . key_slots [ i ] . active )	803:8:15378:15425	6904708	0	True				
ANR	6906426	CallExpression	be32_to_cpus ( & luks -> header . key_slots [ i ] . active )		6904708	0					
ANR	6906427	Callee	be32_to_cpus		6904708	0					
ANR	6906428	Identifier	be32_to_cpus		6904708	0					
ANR	6906429	ArgumentList	& luks -> header . key_slots [ i ] . active		6904708	1					
ANR	6906430	Argument	& luks -> header . key_slots [ i ] . active		6904708	0					
ANR	6906431	UnaryOperationExpression	& luks -> header . key_slots [ i ] . active		6904708	0					
ANR	6906432	UnaryOperator	&		6904708	0					
ANR	6906433	MemberAccess	luks -> header . key_slots [ i ] . active		6904708	1					
ANR	6906434	ArrayIndexing	luks -> header . key_slots [ i ]		6904708	0					
ANR	6906435	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6906436	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906437	Identifier	luks		6904708	0					
ANR	6906438	Identifier	header		6904708	1					
ANR	6906439	Identifier	key_slots		6904708	1					
ANR	6906440	Identifier	i		6904708	1					
ANR	6906441	Identifier	active		6904708	1					
ANR	6906442	ExpressionStatement	be32_to_cpus ( & luks -> header . key_slots [ i ] . iterations )	805:8:15436:15487	6904708	1	True				
ANR	6906443	CallExpression	be32_to_cpus ( & luks -> header . key_slots [ i ] . iterations )		6904708	0					
ANR	6906444	Callee	be32_to_cpus		6904708	0					
ANR	6906445	Identifier	be32_to_cpus		6904708	0					
ANR	6906446	ArgumentList	& luks -> header . key_slots [ i ] . iterations		6904708	1					
ANR	6906447	Argument	& luks -> header . key_slots [ i ] . iterations		6904708	0					
ANR	6906448	UnaryOperationExpression	& luks -> header . key_slots [ i ] . iterations		6904708	0					
ANR	6906449	UnaryOperator	&		6904708	0					
ANR	6906450	MemberAccess	luks -> header . key_slots [ i ] . iterations		6904708	1					
ANR	6906451	ArrayIndexing	luks -> header . key_slots [ i ]		6904708	0					
ANR	6906452	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6906453	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906454	Identifier	luks		6904708	0					
ANR	6906455	Identifier	header		6904708	1					
ANR	6906456	Identifier	key_slots		6904708	1					
ANR	6906457	Identifier	i		6904708	1					
ANR	6906458	Identifier	iterations		6904708	1					
ANR	6906459	ExpressionStatement	be32_to_cpus ( & luks -> header . key_slots [ i ] . key_offset )	807:8:15498:15549	6904708	2	True				
ANR	6906460	CallExpression	be32_to_cpus ( & luks -> header . key_slots [ i ] . key_offset )		6904708	0					
ANR	6906461	Callee	be32_to_cpus		6904708	0					
ANR	6906462	Identifier	be32_to_cpus		6904708	0					
ANR	6906463	ArgumentList	& luks -> header . key_slots [ i ] . key_offset		6904708	1					
ANR	6906464	Argument	& luks -> header . key_slots [ i ] . key_offset		6904708	0					
ANR	6906465	UnaryOperationExpression	& luks -> header . key_slots [ i ] . key_offset		6904708	0					
ANR	6906466	UnaryOperator	&		6904708	0					
ANR	6906467	MemberAccess	luks -> header . key_slots [ i ] . key_offset		6904708	1					
ANR	6906468	ArrayIndexing	luks -> header . key_slots [ i ]		6904708	0					
ANR	6906469	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6906470	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906471	Identifier	luks		6904708	0					
ANR	6906472	Identifier	header		6904708	1					
ANR	6906473	Identifier	key_slots		6904708	1					
ANR	6906474	Identifier	i		6904708	1					
ANR	6906475	Identifier	key_offset		6904708	1					
ANR	6906476	ExpressionStatement	be32_to_cpus ( & luks -> header . key_slots [ i ] . stripes )	809:8:15560:15608	6904708	3	True				
ANR	6906477	CallExpression	be32_to_cpus ( & luks -> header . key_slots [ i ] . stripes )		6904708	0					
ANR	6906478	Callee	be32_to_cpus		6904708	0					
ANR	6906479	Identifier	be32_to_cpus		6904708	0					
ANR	6906480	ArgumentList	& luks -> header . key_slots [ i ] . stripes		6904708	1					
ANR	6906481	Argument	& luks -> header . key_slots [ i ] . stripes		6904708	0					
ANR	6906482	UnaryOperationExpression	& luks -> header . key_slots [ i ] . stripes		6904708	0					
ANR	6906483	UnaryOperator	&		6904708	0					
ANR	6906484	MemberAccess	luks -> header . key_slots [ i ] . stripes		6904708	1					
ANR	6906485	ArrayIndexing	luks -> header . key_slots [ i ]		6904708	0					
ANR	6906486	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6906487	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906488	Identifier	luks		6904708	0					
ANR	6906489	Identifier	header		6904708	1					
ANR	6906490	Identifier	key_slots		6904708	1					
ANR	6906491	Identifier	i		6904708	1					
ANR	6906492	Identifier	stripes		6904708	1					
ANR	6906493	IfStatement	if ( local_err )		6904708	100					
ANR	6906494	Condition	local_err	815:8:15628:15636	6904708	0	True				
ANR	6906495	Identifier	local_err		6904708	0					
ANR	6906496	CompoundStatement		803:19:15327:15327	6904708	1					
ANR	6906497	ExpressionStatement	"error_propagate ( errp , local_err )"	817:8:15650:15682	6904708	0	True				
ANR	6906498	CallExpression	"error_propagate ( errp , local_err )"		6904708	0					
ANR	6906499	Callee	error_propagate		6904708	0					
ANR	6906500	Identifier	error_propagate		6904708	0					
ANR	6906501	ArgumentList	errp		6904708	1					
ANR	6906502	Argument	errp		6904708	0					
ANR	6906503	Identifier	errp		6904708	0					
ANR	6906504	Argument	local_err		6904708	1					
ANR	6906505	Identifier	local_err		6904708	0					
ANR	6906506	GotoStatement	goto error ;	819:8:15693:15703	6904708	1	True				
ANR	6906507	Identifier	error		6904708	0					
ANR	6906508	IfStatement	"if ( writefunc ( block , luks -> header . key_slots [ 0 ] . key_offset * QCRYPTO_BLOCK_LUKS_SECTOR_SIZE , splitkey , splitkeylen , errp , opaque ) != splitkeylen )"		6904708	101					
ANR	6906509	Condition	"writefunc ( block , luks -> header . key_slots [ 0 ] . key_offset * QCRYPTO_BLOCK_LUKS_SECTOR_SIZE , splitkey , splitkeylen , errp , opaque ) != splitkeylen"	829:8:15844:16077	6904708	0	True				
ANR	6906510	EqualityExpression	"writefunc ( block , luks -> header . key_slots [ 0 ] . key_offset * QCRYPTO_BLOCK_LUKS_SECTOR_SIZE , splitkey , splitkeylen , errp , opaque ) != splitkeylen"		6904708	0		!=			
ANR	6906511	CallExpression	"writefunc ( block , luks -> header . key_slots [ 0 ] . key_offset * QCRYPTO_BLOCK_LUKS_SECTOR_SIZE , splitkey , splitkeylen , errp , opaque )"		6904708	0					
ANR	6906512	Callee	writefunc		6904708	0					
ANR	6906513	Identifier	writefunc		6904708	0					
ANR	6906514	ArgumentList	block		6904708	1					
ANR	6906515	Argument	block		6904708	0					
ANR	6906516	Identifier	block		6904708	0					
ANR	6906517	Argument	luks -> header . key_slots [ 0 ] . key_offset * QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	1					
ANR	6906518	MultiplicativeExpression	luks -> header . key_slots [ 0 ] . key_offset * QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	0		*			
ANR	6906519	MemberAccess	luks -> header . key_slots [ 0 ] . key_offset		6904708	0					
ANR	6906520	ArrayIndexing	luks -> header . key_slots [ 0 ]		6904708	0					
ANR	6906521	MemberAccess	luks -> header . key_slots		6904708	0					
ANR	6906522	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906523	Identifier	luks		6904708	0					
ANR	6906524	Identifier	header		6904708	1					
ANR	6906525	Identifier	key_slots		6904708	1					
ANR	6906526	PrimaryExpression	0		6904708	1					
ANR	6906527	Identifier	key_offset		6904708	1					
ANR	6906528	Identifier	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708	1					
ANR	6906529	Argument	splitkey		6904708	2					
ANR	6906530	Identifier	splitkey		6904708	0					
ANR	6906531	Argument	splitkeylen		6904708	3					
ANR	6906532	Identifier	splitkeylen		6904708	0					
ANR	6906533	Argument	errp		6904708	4					
ANR	6906534	Identifier	errp		6904708	0					
ANR	6906535	Argument	opaque		6904708	5					
ANR	6906536	Identifier	opaque		6904708	0					
ANR	6906537	Identifier	splitkeylen		6904708	1					
ANR	6906538	CompoundStatement		827:42:15768:15768	6904708	1					
ANR	6906539	GotoStatement	goto error ;	841:8:16091:16101	6904708	0	True				
ANR	6906540	Identifier	error		6904708	0					
ANR	6906541	ExpressionStatement	luks -> cipher_alg = luks_opts . cipher_alg	847:4:16117:16156	6904708	102	True				
ANR	6906542	AssignmentExpression	luks -> cipher_alg = luks_opts . cipher_alg		6904708	0		=			
ANR	6906543	PtrMemberAccess	luks -> cipher_alg		6904708	0					
ANR	6906544	Identifier	luks		6904708	0					
ANR	6906545	Identifier	cipher_alg		6904708	1					
ANR	6906546	MemberAccess	luks_opts . cipher_alg		6904708	1					
ANR	6906547	Identifier	luks_opts		6904708	0					
ANR	6906548	Identifier	cipher_alg		6904708	1					
ANR	6906549	ExpressionStatement	luks -> cipher_mode = luks_opts . cipher_mode	849:4:16163:16204	6904708	103	True				
ANR	6906550	AssignmentExpression	luks -> cipher_mode = luks_opts . cipher_mode		6904708	0		=			
ANR	6906551	PtrMemberAccess	luks -> cipher_mode		6904708	0					
ANR	6906552	Identifier	luks		6904708	0					
ANR	6906553	Identifier	cipher_mode		6904708	1					
ANR	6906554	MemberAccess	luks_opts . cipher_mode		6904708	1					
ANR	6906555	Identifier	luks_opts		6904708	0					
ANR	6906556	Identifier	cipher_mode		6904708	1					
ANR	6906557	ExpressionStatement	luks -> ivgen_alg = luks_opts . ivgen_alg	851:4:16211:16248	6904708	104	True				
ANR	6906558	AssignmentExpression	luks -> ivgen_alg = luks_opts . ivgen_alg		6904708	0		=			
ANR	6906559	PtrMemberAccess	luks -> ivgen_alg		6904708	0					
ANR	6906560	Identifier	luks		6904708	0					
ANR	6906561	Identifier	ivgen_alg		6904708	1					
ANR	6906562	MemberAccess	luks_opts . ivgen_alg		6904708	1					
ANR	6906563	Identifier	luks_opts		6904708	0					
ANR	6906564	Identifier	ivgen_alg		6904708	1					
ANR	6906565	ExpressionStatement	luks -> ivgen_hash_alg = luks_opts . ivgen_hash_alg	853:4:16255:16302	6904708	105	True				
ANR	6906566	AssignmentExpression	luks -> ivgen_hash_alg = luks_opts . ivgen_hash_alg		6904708	0		=			
ANR	6906567	PtrMemberAccess	luks -> ivgen_hash_alg		6904708	0					
ANR	6906568	Identifier	luks		6904708	0					
ANR	6906569	Identifier	ivgen_hash_alg		6904708	1					
ANR	6906570	MemberAccess	luks_opts . ivgen_hash_alg		6904708	1					
ANR	6906571	Identifier	luks_opts		6904708	0					
ANR	6906572	Identifier	ivgen_hash_alg		6904708	1					
ANR	6906573	ExpressionStatement	luks -> hash_alg = luks_opts . hash_alg	855:4:16309:16344	6904708	106	True				
ANR	6906574	AssignmentExpression	luks -> hash_alg = luks_opts . hash_alg		6904708	0		=			
ANR	6906575	PtrMemberAccess	luks -> hash_alg		6904708	0					
ANR	6906576	Identifier	luks		6904708	0					
ANR	6906577	Identifier	hash_alg		6904708	1					
ANR	6906578	MemberAccess	luks_opts . hash_alg		6904708	1					
ANR	6906579	Identifier	luks_opts		6904708	0					
ANR	6906580	Identifier	hash_alg		6904708	1					
ANR	6906581	ExpressionStatement	"memset ( masterkey , 0 , luks -> header . key_bytes )"	859:4:16353:16397	6904708	107	True				
ANR	6906582	CallExpression	"memset ( masterkey , 0 , luks -> header . key_bytes )"		6904708	0					
ANR	6906583	Callee	memset		6904708	0					
ANR	6906584	Identifier	memset		6904708	0					
ANR	6906585	ArgumentList	masterkey		6904708	1					
ANR	6906586	Argument	masterkey		6904708	0					
ANR	6906587	Identifier	masterkey		6904708	0					
ANR	6906588	Argument	0		6904708	1					
ANR	6906589	PrimaryExpression	0		6904708	0					
ANR	6906590	Argument	luks -> header . key_bytes		6904708	2					
ANR	6906591	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6906592	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906593	Identifier	luks		6904708	0					
ANR	6906594	Identifier	header		6904708	1					
ANR	6906595	Identifier	key_bytes		6904708	1					
ANR	6906596	ExpressionStatement	g_free ( masterkey )	861:4:16404:16421	6904708	108	True				
ANR	6906597	CallExpression	g_free ( masterkey )		6904708	0					
ANR	6906598	Callee	g_free		6904708	0					
ANR	6906599	Identifier	g_free		6904708	0					
ANR	6906600	ArgumentList	masterkey		6904708	1					
ANR	6906601	Argument	masterkey		6904708	0					
ANR	6906602	Identifier	masterkey		6904708	0					
ANR	6906603	ExpressionStatement	"memset ( slotkey , 0 , luks -> header . key_bytes )"	863:4:16428:16470	6904708	109	True				
ANR	6906604	CallExpression	"memset ( slotkey , 0 , luks -> header . key_bytes )"		6904708	0					
ANR	6906605	Callee	memset		6904708	0					
ANR	6906606	Identifier	memset		6904708	0					
ANR	6906607	ArgumentList	slotkey		6904708	1					
ANR	6906608	Argument	slotkey		6904708	0					
ANR	6906609	Identifier	slotkey		6904708	0					
ANR	6906610	Argument	0		6904708	1					
ANR	6906611	PrimaryExpression	0		6904708	0					
ANR	6906612	Argument	luks -> header . key_bytes		6904708	2					
ANR	6906613	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6906614	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906615	Identifier	luks		6904708	0					
ANR	6906616	Identifier	header		6904708	1					
ANR	6906617	Identifier	key_bytes		6904708	1					
ANR	6906618	ExpressionStatement	g_free ( slotkey )	865:4:16477:16492	6904708	110	True				
ANR	6906619	CallExpression	g_free ( slotkey )		6904708	0					
ANR	6906620	Callee	g_free		6904708	0					
ANR	6906621	Identifier	g_free		6904708	0					
ANR	6906622	ArgumentList	slotkey		6904708	1					
ANR	6906623	Argument	slotkey		6904708	0					
ANR	6906624	Identifier	slotkey		6904708	0					
ANR	6906625	ExpressionStatement	g_free ( splitkey )	867:4:16499:16515	6904708	111	True				
ANR	6906626	CallExpression	g_free ( splitkey )		6904708	0					
ANR	6906627	Callee	g_free		6904708	0					
ANR	6906628	Identifier	g_free		6904708	0					
ANR	6906629	ArgumentList	splitkey		6904708	1					
ANR	6906630	Argument	splitkey		6904708	0					
ANR	6906631	Identifier	splitkey		6904708	0					
ANR	6906632	ExpressionStatement	g_free ( password )	869:4:16522:16538	6904708	112	True				
ANR	6906633	CallExpression	g_free ( password )		6904708	0					
ANR	6906634	Callee	g_free		6904708	0					
ANR	6906635	Identifier	g_free		6904708	0					
ANR	6906636	ArgumentList	password		6904708	1					
ANR	6906637	Argument	password		6904708	0					
ANR	6906638	Identifier	password		6904708	0					
ANR	6906639	ExpressionStatement	g_free ( cipher_mode_spec )	871:4:16545:16569	6904708	113	True				
ANR	6906640	CallExpression	g_free ( cipher_mode_spec )		6904708	0					
ANR	6906641	Callee	g_free		6904708	0					
ANR	6906642	Identifier	g_free		6904708	0					
ANR	6906643	ArgumentList	cipher_mode_spec		6904708	1					
ANR	6906644	Argument	cipher_mode_spec		6904708	0					
ANR	6906645	Identifier	cipher_mode_spec		6904708	0					
ANR	6906646	ExpressionStatement	qcrypto_ivgen_free ( ivgen )	875:4:16578:16603	6904708	114	True				
ANR	6906647	CallExpression	qcrypto_ivgen_free ( ivgen )		6904708	0					
ANR	6906648	Callee	qcrypto_ivgen_free		6904708	0					
ANR	6906649	Identifier	qcrypto_ivgen_free		6904708	0					
ANR	6906650	ArgumentList	ivgen		6904708	1					
ANR	6906651	Argument	ivgen		6904708	0					
ANR	6906652	Identifier	ivgen		6904708	0					
ANR	6906653	ExpressionStatement	qcrypto_cipher_free ( cipher )	877:4:16610:16637	6904708	115	True				
ANR	6906654	CallExpression	qcrypto_cipher_free ( cipher )		6904708	0					
ANR	6906655	Callee	qcrypto_cipher_free		6904708	0					
ANR	6906656	Identifier	qcrypto_cipher_free		6904708	0					
ANR	6906657	ArgumentList	cipher		6904708	1					
ANR	6906658	Argument	cipher		6904708	0					
ANR	6906659	Identifier	cipher		6904708	0					
ANR	6906660	ReturnStatement	return 0 ;	881:4:16646:16654	6904708	116	True				
ANR	6906661	PrimaryExpression	0		6904708	0					
ANR	6906662	Label	error :	885:1:16660:16665	6904708	117	True				
ANR	6906663	Identifier	error		6904708	0					
ANR	6906664	IfStatement	if ( masterkey )		6904708	118					
ANR	6906665	Condition	masterkey	887:8:16676:16684	6904708	0	True				
ANR	6906666	Identifier	masterkey		6904708	0					
ANR	6906667	CompoundStatement		875:19:16375:16375	6904708	1					
ANR	6906668	ExpressionStatement	"memset ( masterkey , 0 , luks -> header . key_bytes )"	889:8:16698:16742	6904708	0	True				
ANR	6906669	CallExpression	"memset ( masterkey , 0 , luks -> header . key_bytes )"		6904708	0					
ANR	6906670	Callee	memset		6904708	0					
ANR	6906671	Identifier	memset		6904708	0					
ANR	6906672	ArgumentList	masterkey		6904708	1					
ANR	6906673	Argument	masterkey		6904708	0					
ANR	6906674	Identifier	masterkey		6904708	0					
ANR	6906675	Argument	0		6904708	1					
ANR	6906676	PrimaryExpression	0		6904708	0					
ANR	6906677	Argument	luks -> header . key_bytes		6904708	2					
ANR	6906678	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6906679	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906680	Identifier	luks		6904708	0					
ANR	6906681	Identifier	header		6904708	1					
ANR	6906682	Identifier	key_bytes		6904708	1					
ANR	6906683	ExpressionStatement	g_free ( masterkey )	893:4:16756:16773	6904708	119	True				
ANR	6906684	CallExpression	g_free ( masterkey )		6904708	0					
ANR	6906685	Callee	g_free		6904708	0					
ANR	6906686	Identifier	g_free		6904708	0					
ANR	6906687	ArgumentList	masterkey		6904708	1					
ANR	6906688	Argument	masterkey		6904708	0					
ANR	6906689	Identifier	masterkey		6904708	0					
ANR	6906690	IfStatement	if ( slotkey )		6904708	120					
ANR	6906691	Condition	slotkey	895:8:16784:16790	6904708	0	True				
ANR	6906692	Identifier	slotkey		6904708	0					
ANR	6906693	CompoundStatement		883:17:16481:16481	6904708	1					
ANR	6906694	ExpressionStatement	"memset ( slotkey , 0 , luks -> header . key_bytes )"	897:8:16804:16846	6904708	0	True				
ANR	6906695	CallExpression	"memset ( slotkey , 0 , luks -> header . key_bytes )"		6904708	0					
ANR	6906696	Callee	memset		6904708	0					
ANR	6906697	Identifier	memset		6904708	0					
ANR	6906698	ArgumentList	slotkey		6904708	1					
ANR	6906699	Argument	slotkey		6904708	0					
ANR	6906700	Identifier	slotkey		6904708	0					
ANR	6906701	Argument	0		6904708	1					
ANR	6906702	PrimaryExpression	0		6904708	0					
ANR	6906703	Argument	luks -> header . key_bytes		6904708	2					
ANR	6906704	MemberAccess	luks -> header . key_bytes		6904708	0					
ANR	6906705	PtrMemberAccess	luks -> header		6904708	0					
ANR	6906706	Identifier	luks		6904708	0					
ANR	6906707	Identifier	header		6904708	1					
ANR	6906708	Identifier	key_bytes		6904708	1					
ANR	6906709	ExpressionStatement	g_free ( slotkey )	901:4:16860:16875	6904708	121	True				
ANR	6906710	CallExpression	g_free ( slotkey )		6904708	0					
ANR	6906711	Callee	g_free		6904708	0					
ANR	6906712	Identifier	g_free		6904708	0					
ANR	6906713	ArgumentList	slotkey		6904708	1					
ANR	6906714	Argument	slotkey		6904708	0					
ANR	6906715	Identifier	slotkey		6904708	0					
ANR	6906716	ExpressionStatement	g_free ( splitkey )	903:4:16882:16898	6904708	122	True				
ANR	6906717	CallExpression	g_free ( splitkey )		6904708	0					
ANR	6906718	Callee	g_free		6904708	0					
ANR	6906719	Identifier	g_free		6904708	0					
ANR	6906720	ArgumentList	splitkey		6904708	1					
ANR	6906721	Argument	splitkey		6904708	0					
ANR	6906722	Identifier	splitkey		6904708	0					
ANR	6906723	ExpressionStatement	g_free ( password )	905:4:16905:16921	6904708	123	True				
ANR	6906724	CallExpression	g_free ( password )		6904708	0					
ANR	6906725	Callee	g_free		6904708	0					
ANR	6906726	Identifier	g_free		6904708	0					
ANR	6906727	ArgumentList	password		6904708	1					
ANR	6906728	Argument	password		6904708	0					
ANR	6906729	Identifier	password		6904708	0					
ANR	6906730	ExpressionStatement	g_free ( cipher_mode_spec )	907:4:16928:16952	6904708	124	True				
ANR	6906731	CallExpression	g_free ( cipher_mode_spec )		6904708	0					
ANR	6906732	Callee	g_free		6904708	0					
ANR	6906733	Identifier	g_free		6904708	0					
ANR	6906734	ArgumentList	cipher_mode_spec		6904708	1					
ANR	6906735	Argument	cipher_mode_spec		6904708	0					
ANR	6906736	Identifier	cipher_mode_spec		6904708	0					
ANR	6906737	ExpressionStatement	qcrypto_ivgen_free ( ivgen )	911:4:16961:16986	6904708	125	True				
ANR	6906738	CallExpression	qcrypto_ivgen_free ( ivgen )		6904708	0					
ANR	6906739	Callee	qcrypto_ivgen_free		6904708	0					
ANR	6906740	Identifier	qcrypto_ivgen_free		6904708	0					
ANR	6906741	ArgumentList	ivgen		6904708	1					
ANR	6906742	Argument	ivgen		6904708	0					
ANR	6906743	Identifier	ivgen		6904708	0					
ANR	6906744	ExpressionStatement	qcrypto_cipher_free ( cipher )	913:4:16993:17020	6904708	126	True				
ANR	6906745	CallExpression	qcrypto_cipher_free ( cipher )		6904708	0					
ANR	6906746	Callee	qcrypto_cipher_free		6904708	0					
ANR	6906747	Identifier	qcrypto_cipher_free		6904708	0					
ANR	6906748	ArgumentList	cipher		6904708	1					
ANR	6906749	Argument	cipher		6904708	0					
ANR	6906750	Identifier	cipher		6904708	0					
ANR	6906751	ExpressionStatement	g_free ( luks )	917:4:17029:17041	6904708	127	True				
ANR	6906752	CallExpression	g_free ( luks )		6904708	0					
ANR	6906753	Callee	g_free		6904708	0					
ANR	6906754	Identifier	g_free		6904708	0					
ANR	6906755	ArgumentList	luks		6904708	1					
ANR	6906756	Argument	luks		6904708	0					
ANR	6906757	Identifier	luks		6904708	0					
ANR	6906758	ReturnStatement	return - 1 ;	919:4:17048:17057	6904708	128	True				
ANR	6906759	UnaryOperationExpression	- 1		6904708	0					
ANR	6906760	UnaryOperator	-		6904708	0					
ANR	6906761	PrimaryExpression	1		6904708	1					
ANR	6906762	Identifier	qcrypto_block_luks_create		6904708	1					
ANR	6906763	ParameterList	"QCryptoBlock * block , QCryptoBlockCreateOptions * options , QCryptoBlockInitFunc initfunc , QCryptoBlockWriteFunc writefunc , void * opaque , Error * * errp"		6904708	2					
ANR	6906764	Parameter	QCryptoBlock * block	1:26:26:44	6904708	0	True				
ANR	6906765	ParameterType	QCryptoBlock *		6904708	0					
ANR	6906766	Identifier	block		6904708	1					
ANR	6906767	Parameter	QCryptoBlockCreateOptions * options	3:26:74:107	6904708	1	True				
ANR	6906768	ParameterType	QCryptoBlockCreateOptions *		6904708	0					
ANR	6906769	Identifier	options		6904708	1					
ANR	6906770	Parameter	QCryptoBlockInitFunc initfunc	5:26:137:165	6904708	2	True				
ANR	6906771	ParameterType	QCryptoBlockInitFunc		6904708	0					
ANR	6906772	Identifier	initfunc		6904708	1					
ANR	6906773	Parameter	QCryptoBlockWriteFunc writefunc	7:26:195:225	6904708	3	True				
ANR	6906774	ParameterType	QCryptoBlockWriteFunc		6904708	0					
ANR	6906775	Identifier	writefunc		6904708	1					
ANR	6906776	Parameter	void * opaque	9:26:255:266	6904708	4	True				
ANR	6906777	ParameterType	void *		6904708	0					
ANR	6906778	Identifier	opaque		6904708	1					
ANR	6906779	Parameter	Error * * errp	11:26:296:307	6904708	5	True				
ANR	6906780	ParameterType	Error * *		6904708	0					
ANR	6906781	Identifier	errp		6904708	1					
ANR	6906782	CFGEntryNode	ENTRY		6904708		True				
ANR	6906783	CFGExitNode	EXIT		6904708		True				
ANR	6906784	Symbol	block -> payload_offset		6904708						
ANR	6906785	Symbol	qcrypto_cipher_new		6904708						
ANR	6906786	Symbol	DIV_ROUND_UP		6904708						
ANR	6906787	Symbol	luks -> header		6904708						
ANR	6906788	Symbol	QCRYPTO_BLOCK_LUKS_HASH_SPEC_LEN		6904708						
ANR	6906789	Symbol	& luks -> header . key_slots [ i ] . key_offset		6904708						
ANR	6906790	Symbol	* luks_opts . ivgen_alg		6904708						
ANR	6906791	Symbol	luks_opts . has_iter_time		6904708						
ANR	6906792	Symbol	password		6904708						
ANR	6906793	Symbol	writefunc		6904708						
ANR	6906794	Symbol	options		6904708						
ANR	6906795	Symbol	luks_opts . hash_alg		6904708						
ANR	6906796	Symbol	block		6904708						
ANR	6906797	Symbol	* luks_opts		6904708						
ANR	6906798	Symbol	options -> u		6904708						
ANR	6906799	Symbol	QCRYPTO_BLOCK_LUKS_MIN_MASTER_KEY_ITERS		6904708						
ANR	6906800	Symbol	& options -> u . luks		6904708						
ANR	6906801	Symbol	qcrypto_block_luks_essiv_cipher		6904708						
ANR	6906802	Symbol	luks_opts . ivgen_hash_alg		6904708						
ANR	6906803	Symbol	masterkey		6904708						
ANR	6906804	Symbol	qcrypto_secret_lookup_as_utf8		6904708						
ANR	6906805	Symbol	luks -> ivgen_alg		6904708						
ANR	6906806	Symbol	luks_opts . key_secret		6904708						
ANR	6906807	Symbol	splitkey		6904708						
ANR	6906808	Symbol	hash_alg		6904708						
ANR	6906809	Symbol	luks -> header . key_slots [ 0 ] . salt		6904708						
ANR	6906810	Symbol	luks -> header . key_slots		6904708						
ANR	6906811	Symbol	cipher_alg		6904708						
ANR	6906812	Symbol	splitkeylen		6904708						
ANR	6906813	Symbol	QCRYPTO_BLOCK_LUKS_SALT_LEN		6904708						
ANR	6906814	Symbol	QCryptoCipherMode_lookup		6904708						
ANR	6906815	Symbol	uint8_t		6904708						
ANR	6906816	Symbol	* luks_opts . cipher_mode		6904708						
ANR	6906817	Symbol	UINT32_MAX		6904708						
ANR	6906818	Symbol	luks_opts		6904708						
ANR	6906819	Symbol	QCRYPTO_IVGEN_ALG_PLAIN64		6904708						
ANR	6906820	Symbol	MAX		6904708						
ANR	6906821	Symbol	QCRYPTO_BLOCK_LUKS_STRIPES		6904708						
ANR	6906822	Symbol	* luks		6904708						
ANR	6906823	Symbol	QCRYPTO_BLOCK_LUKS_MAGIC_LEN		6904708						
ANR	6906824	Symbol	* options		6904708						
ANR	6906825	Symbol	ivcipheralg		6904708						
ANR	6906826	Symbol	& local_err		6904708						
ANR	6906827	Symbol	g_new0		6904708						
ANR	6906828	Symbol	& luks -> header		6904708						
ANR	6906829	Symbol	ULLONG_MAX		6904708						
ANR	6906830	Symbol	luks -> header . master_key_digest		6904708						
ANR	6906831	Symbol	luks -> header . payload_offset		6904708						
ANR	6906832	Symbol	* luks_opts . hash_alg		6904708						
ANR	6906833	Symbol	luks -> header . key_slots [ 0 ] . stripes		6904708						
ANR	6906834	Symbol	* luks -> header		6904708						
ANR	6906835	Symbol	& luks -> header . key_bytes		6904708						
ANR	6906836	Symbol	i		6904708						
ANR	6906837	Symbol	QCryptoIVGenAlgorithm_lookup		6904708						
ANR	6906838	Symbol	QCRYPTO_BLOCK_LUKS_MIN_SLOT_KEY_ITERS		6904708						
ANR	6906839	Symbol	block -> opaque		6904708						
ANR	6906840	Symbol	luks -> cipher_alg		6904708						
ANR	6906841	Symbol	qcrypto_pbkdf2_count_iters		6904708						
ANR	6906842	Symbol	ivgen_alg		6904708						
ANR	6906843	Symbol	luks -> hash_alg		6904708						
ANR	6906844	Symbol	& luks -> header . payload_offset		6904708						
ANR	6906845	Symbol	ivgen_hash_alg		6904708						
ANR	6906846	Symbol	& luks -> header . key_slots [ i ] . iterations		6904708						
ANR	6906847	Symbol	QCRYPTO_IVGEN_ALG_ESSIV		6904708						
ANR	6906848	Symbol	luks -> header . master_key_salt		6904708						
ANR	6906849	Symbol	QCRYPTO_BLOCK_LUKS_NUM_KEY_SLOTS		6904708						
ANR	6906850	Symbol	luks -> ivgen_hash_alg		6904708						
ANR	6906851	Symbol	luks -> cipher_mode		6904708						
ANR	6906852	Symbol	luks		6904708						
ANR	6906853	Symbol	errp		6904708						
ANR	6906854	Symbol	QCryptoBlockLUKS		6904708						
ANR	6906855	Symbol	luks -> header . version		6904708						
ANR	6906856	Symbol	QCRYPTO_BLOCK_LUKS_CIPHER_NAME_LEN		6904708						
ANR	6906857	Symbol	QCRYPTO_CIPHER_MODE_XTS		6904708						
ANR	6906858	Symbol	QCRYPTO_BLOCK_LUKS_DIGEST_LEN		6904708						
ANR	6906859	Symbol	cipher_mode		6904708						
ANR	6906860	Symbol	qcrypto_random_bytes		6904708						
ANR	6906861	Symbol	strlen		6904708						
ANR	6906862	Symbol	qcrypto_cipher_get_iv_len		6904708						
ANR	6906863	Symbol	* luks -> header . key_slots		6904708						
ANR	6906864	Symbol	* QCryptoIVGenAlgorithm_lookup		6904708						
ANR	6906865	Symbol	luks -> header . key_slots [ i ] . stripes		6904708						
ANR	6906866	Symbol	& luks -> header . key_slots [ i ] . active		6904708						
ANR	6906867	Symbol	luks_opts . has_ivgen_alg		6904708						
ANR	6906868	Symbol	luks -> header . key_slots [ i ] . key_offset		6904708						
ANR	6906869	Symbol	ERANGE		6904708						
ANR	6906870	Symbol	luks_opts . has_cipher_alg		6904708						
ANR	6906871	Symbol	qcrypto_afsplit_encode		6904708						
ANR	6906872	Symbol	QCryptoHashAlgorithm_lookup		6904708						
ANR	6906873	Symbol	qcrypto_block_encrypt_helper		6904708						
ANR	6906874	Symbol	block -> cipher		6904708						
ANR	6906875	Symbol	& options -> u		6904708						
ANR	6906876	Symbol	QCRYPTO_BLOCK_LUKS_KEY_SLOT_ENABLED		6904708						
ANR	6906877	Symbol	NULL		6904708						
ANR	6906878	Symbol	& luks -> header . key_slots [ i ] . stripes		6904708						
ANR	6906879	Symbol	luks -> header . key_slots [ 0 ] . key_offset		6904708						
ANR	6906880	Symbol	iters		6904708						
ANR	6906881	Symbol	qcrypto_block_luks_cipher_alg_lookup		6904708						
ANR	6906882	Symbol	ROUND_UP		6904708						
ANR	6906883	Symbol	luks -> header . key_slots [ 0 ] . iterations		6904708						
ANR	6906884	Symbol	slotkey		6904708						
ANR	6906885	Symbol	QCRYPTO_BLOCK_LUKS_KEY_SLOT_OFFSET		6904708						
ANR	6906886	Symbol	luks -> header . hash_spec		6904708						
ANR	6906887	Symbol	luks_opts . iter_time		6904708						
ANR	6906888	Symbol	QCRYPTO_BLOCK_LUKS_KEY_SLOT_DISABLED		6904708						
ANR	6906889	Symbol	qcrypto_pbkdf2		6904708						
ANR	6906890	Symbol	true		6904708						
ANR	6906891	Symbol	options -> u . luks . key_secret		6904708						
ANR	6906892	Symbol	qcrypto_cipher_get_key_len		6904708						
ANR	6906893	Symbol	& luks_opts		6904708						
ANR	6906894	Symbol	local_err		6904708						
ANR	6906895	Symbol	luks -> header . magic		6904708						
ANR	6906896	Symbol	luks -> header . key_slots [ i ] . active		6904708						
ANR	6906897	Symbol	* * luks		6904708						
ANR	6906898	Symbol	qcrypto_block_luks_magic		6904708						
ANR	6906899	Symbol	QCRYPTO_HASH_ALG_SHA256		6904708						
ANR	6906900	Symbol	options -> u . luks		6904708						
ANR	6906901	Symbol	block -> ivgen		6904708						
ANR	6906902	Symbol	luks_opts . cipher_alg		6904708						
ANR	6906903	Symbol	luks_opts . cipher_mode		6904708						
ANR	6906904	Symbol	luks_opts . ivgen_alg		6904708						
ANR	6906905	Symbol	luks -> header . cipher_name		6904708						
ANR	6906906	Symbol	* luks_opts . ivgen_hash_alg		6904708						
ANR	6906907	Symbol	QCRYPTO_BLOCK_LUKS_VERSION		6904708						
ANR	6906908	Symbol	* QCryptoHashAlgorithm_lookup		6904708						
ANR	6906909	Symbol	* QCryptoCipherMode_lookup		6904708						
ANR	6906910	Symbol	initfunc		6904708						
ANR	6906911	Symbol	block -> kdfhash		6904708						
ANR	6906912	Symbol	luks_opts . has_cipher_mode		6904708						
ANR	6906913	Symbol	luks -> header . master_key_iterations		6904708						
ANR	6906914	Symbol	cipher		6904708						
ANR	6906915	Symbol	QCRYPTO_CIPHER_ALG_AES_256		6904708						
ANR	6906916	Symbol	QCRYPTO_BLOCK_LUKS_SECTOR_SIZE		6904708						
ANR	6906917	Symbol	opaque		6904708						
ANR	6906918	Symbol	luks -> header . uuid		6904708						
ANR	6906919	Symbol	& luks -> header . master_key_iterations		6904708						
ANR	6906920	Symbol	block -> niv		6904708						
ANR	6906921	Symbol	qcrypto_ivgen_new		6904708						
ANR	6906922	Symbol	& luks -> header . version		6904708						
ANR	6906923	Symbol	* block		6904708						
ANR	6906924	Symbol	* i		6904708						
ANR	6906925	Symbol	QCRYPTO_BLOCK_LUKS_CIPHER_MODE_LEN		6904708						
ANR	6906926	Symbol	luks_opts . has_ivgen_hash_alg		6904708						
ANR	6906927	Symbol	luks -> header . cipher_mode		6904708						
ANR	6906928	Symbol	luks -> header . key_bytes		6904708						
ANR	6906929	Symbol	cipher_mode_spec		6904708						
ANR	6906930	Symbol	g_strdup_printf		6904708						
ANR	6906931	Symbol	luks_opts . has_hash_alg		6904708						
ANR	6906932	Symbol	ivgen		6904708						
