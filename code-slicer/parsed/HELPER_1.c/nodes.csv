command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	52249	File	/home/p4ultr4n/workplace/ReVeal/raw_code/HELPER_1.c								
ANR	52250	Function	simcall	1:0:0:4812							
ANR	52251	FunctionDef	simcall (CPUXtensaState * env)		52250	0					
ANR	52252	CompoundStatement		3:0:43:4812	52250	0					
ANR	52253	IdentifierDeclStatement	uint32_t * regs = env -> regs ;	5:4:50:76	52250	0	True				
ANR	52254	IdentifierDecl	* regs = env -> regs		52250	0					
ANR	52255	IdentifierDeclType	uint32_t *		52250	0					
ANR	52256	Identifier	regs		52250	1					
ANR	52257	AssignmentExpression	* regs = env -> regs		52250	2		=			
ANR	52258	Identifier	regs		52250	0					
ANR	52259	PtrMemberAccess	env -> regs		52250	1					
ANR	52260	Identifier	env		52250	0					
ANR	52261	Identifier	regs		52250	1					
ANR	52262	SwitchStatement	switch ( regs [ 2 ] )		52250	1					
ANR	52263	Condition	regs [ 2 ]	9:12:93:99	52250	0	True				
ANR	52264	ArrayIndexing	regs [ 2 ]		52250	0					
ANR	52265	Identifier	regs		52250	0					
ANR	52266	PrimaryExpression	2		52250	1					
ANR	52267	CompoundStatement		7:21:58:58	52250	1					
ANR	52268	Label	case TARGET_SYS_exit :	11:4:109:129	52250	0	True				
ANR	52269	Identifier	TARGET_SYS_exit		52250	0					
ANR	52270	ExpressionStatement	"qemu_log ( ""exit(%d) simcall\\n"" , regs [ 3 ] )"	13:8:140:179	52250	1	True				
ANR	52271	CallExpression	"qemu_log ( ""exit(%d) simcall\\n"" , regs [ 3 ] )"		52250	0					
ANR	52272	Callee	qemu_log		52250	0					
ANR	52273	Identifier	qemu_log		52250	0					
ANR	52274	ArgumentList	"""exit(%d) simcall\\n"""		52250	1					
ANR	52275	Argument	"""exit(%d) simcall\\n"""		52250	0					
ANR	52276	PrimaryExpression	"""exit(%d) simcall\\n"""		52250	0					
ANR	52277	Argument	regs [ 3 ]		52250	1					
ANR	52278	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52279	Identifier	regs		52250	0					
ANR	52280	PrimaryExpression	3		52250	1					
ANR	52281	ExpressionStatement	exit ( regs [ 3 ] )	15:8:190:203	52250	2	True				
ANR	52282	CallExpression	exit ( regs [ 3 ] )		52250	0					
ANR	52283	Callee	exit		52250	0					
ANR	52284	Identifier	exit		52250	0					
ANR	52285	ArgumentList	regs [ 3 ]		52250	1					
ANR	52286	Argument	regs [ 3 ]		52250	0					
ANR	52287	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52288	Identifier	regs		52250	0					
ANR	52289	PrimaryExpression	3		52250	1					
ANR	52290	BreakStatement	break ;	17:8:214:219	52250	3	True				
ANR	52291	Label	case TARGET_SYS_read :	21:4:228:248	52250	4	True				
ANR	52292	Identifier	TARGET_SYS_read		52250	0					
ANR	52293	Label	case TARGET_SYS_write :	23:4:255:276	52250	5	True				
ANR	52294	Identifier	TARGET_SYS_write		52250	0					
ANR	52295	CompoundStatement		31:12:391:413	52250	6					
ANR	52296	IdentifierDeclStatement	bool is_write = regs [ 2 ] == TARGET_SYS_write ;	27:12:302:345	52250	0	True				
ANR	52297	IdentifierDecl	is_write = regs [ 2 ] == TARGET_SYS_write		52250	0					
ANR	52298	IdentifierDeclType	bool		52250	0					
ANR	52299	Identifier	is_write		52250	1					
ANR	52300	AssignmentExpression	is_write = regs [ 2 ] == TARGET_SYS_write		52250	2		=			
ANR	52301	Identifier	is_write		52250	0					
ANR	52302	EqualityExpression	regs [ 2 ] == TARGET_SYS_write		52250	1		==			
ANR	52303	ArrayIndexing	regs [ 2 ]		52250	0					
ANR	52304	Identifier	regs		52250	0					
ANR	52305	PrimaryExpression	2		52250	1					
ANR	52306	Identifier	TARGET_SYS_write		52250	1					
ANR	52307	IdentifierDeclStatement	uint32_t fd = regs [ 3 ] ;	29:12:360:381	52250	1	True				
ANR	52308	IdentifierDecl	fd = regs [ 3 ]		52250	0					
ANR	52309	IdentifierDeclType	uint32_t		52250	0					
ANR	52310	Identifier	fd		52250	1					
ANR	52311	AssignmentExpression	fd = regs [ 3 ]		52250	2		=			
ANR	52312	Identifier	fd		52250	0					
ANR	52313	ArrayIndexing	regs [ 3 ]		52250	1					
ANR	52314	Identifier	regs		52250	0					
ANR	52315	PrimaryExpression	3		52250	1					
ANR	52316	IdentifierDeclStatement	uint32_t vaddr = regs [ 4 ] ;	31:12:396:420	52250	2	True				
ANR	52317	IdentifierDecl	vaddr = regs [ 4 ]		52250	0					
ANR	52318	IdentifierDeclType	uint32_t		52250	0					
ANR	52319	Identifier	vaddr		52250	1					
ANR	52320	AssignmentExpression	vaddr = regs [ 4 ]		52250	2		=			
ANR	52321	Identifier	vaddr		52250	0					
ANR	52322	ArrayIndexing	regs [ 4 ]		52250	1					
ANR	52323	Identifier	regs		52250	0					
ANR	52324	PrimaryExpression	4		52250	1					
ANR	52325	IdentifierDeclStatement	uint32_t len = regs [ 5 ] ;	33:12:435:457	52250	3	True				
ANR	52326	IdentifierDecl	len = regs [ 5 ]		52250	0					
ANR	52327	IdentifierDeclType	uint32_t		52250	0					
ANR	52328	Identifier	len		52250	1					
ANR	52329	AssignmentExpression	len = regs [ 5 ]		52250	2		=			
ANR	52330	Identifier	len		52250	0					
ANR	52331	ArrayIndexing	regs [ 5 ]		52250	1					
ANR	52332	Identifier	regs		52250	0					
ANR	52333	PrimaryExpression	5		52250	1					
ANR	52334	WhileStatement	while ( len > 0 )		52250	4					
ANR	52335	Condition	len > 0	37:19:481:487	52250	0	True				
ANR	52336	RelationalExpression	len > 0		52250	0		>			
ANR	52337	Identifier	len		52250	0					
ANR	52338	PrimaryExpression	0		52250	1					
ANR	52339	CompoundStatement		49:16:796:853	52250	1					
ANR	52340	IdentifierDeclStatement	"target_phys_addr_t paddr = cpu_get_phys_page_debug ( env , vaddr ) ;"	39:16:509:592	52250	0	True				
ANR	52341	IdentifierDecl	"paddr = cpu_get_phys_page_debug ( env , vaddr )"		52250	0					
ANR	52342	IdentifierDeclType	target_phys_addr_t		52250	0					
ANR	52343	Identifier	paddr		52250	1					
ANR	52344	AssignmentExpression	"paddr = cpu_get_phys_page_debug ( env , vaddr )"		52250	2		=			
ANR	52345	Identifier	paddr		52250	0					
ANR	52346	CallExpression	"cpu_get_phys_page_debug ( env , vaddr )"		52250	1					
ANR	52347	Callee	cpu_get_phys_page_debug		52250	0					
ANR	52348	Identifier	cpu_get_phys_page_debug		52250	0					
ANR	52349	ArgumentList	env		52250	1					
ANR	52350	Argument	env		52250	0					
ANR	52351	Identifier	env		52250	0					
ANR	52352	Argument	vaddr		52250	1					
ANR	52353	Identifier	vaddr		52250	0					
ANR	52354	IdentifierDeclStatement	uint32_t page_left = TARGET_PAGE_SIZE - ( vaddr & ( TARGET_PAGE_SIZE - 1 ) ) ;	43:16:611:704	52250	1	True				
ANR	52355	IdentifierDecl	page_left = TARGET_PAGE_SIZE - ( vaddr & ( TARGET_PAGE_SIZE - 1 ) )		52250	0					
ANR	52356	IdentifierDeclType	uint32_t		52250	0					
ANR	52357	Identifier	page_left		52250	1					
ANR	52358	AssignmentExpression	page_left = TARGET_PAGE_SIZE - ( vaddr & ( TARGET_PAGE_SIZE - 1 ) )		52250	2		=			
ANR	52359	Identifier	page_left		52250	0					
ANR	52360	AdditiveExpression	TARGET_PAGE_SIZE - ( vaddr & ( TARGET_PAGE_SIZE - 1 ) )		52250	1		-			
ANR	52361	Identifier	TARGET_PAGE_SIZE		52250	0					
ANR	52362	BitAndExpression	vaddr & ( TARGET_PAGE_SIZE - 1 )		52250	1		&			
ANR	52363	Identifier	vaddr		52250	0					
ANR	52364	AdditiveExpression	TARGET_PAGE_SIZE - 1		52250	1		-			
ANR	52365	Identifier	TARGET_PAGE_SIZE		52250	0					
ANR	52366	PrimaryExpression	1		52250	1					
ANR	52367	IdentifierDeclStatement	uint32_t io_sz = page_left < len ? page_left : len ;	47:16:723:773	52250	2	True				
ANR	52368	IdentifierDecl	io_sz = page_left < len ? page_left : len		52250	0					
ANR	52369	IdentifierDeclType	uint32_t		52250	0					
ANR	52370	Identifier	io_sz		52250	1					
ANR	52371	AssignmentExpression	io_sz = page_left < len ? page_left : len		52250	2		=			
ANR	52372	Identifier	io_sz		52250	0					
ANR	52373	ConditionalExpression	page_left < len ? page_left : len		52250	1					
ANR	52374	Condition	page_left < len		52250	0					
ANR	52375	RelationalExpression	page_left < len		52250	0		<			
ANR	52376	Identifier	page_left		52250	0					
ANR	52377	Identifier	len		52250	1					
ANR	52378	Identifier	page_left		52250	1					
ANR	52379	Identifier	len		52250	2					
ANR	52380	IdentifierDeclStatement	target_phys_addr_t sz = io_sz ;	49:16:792:821	52250	3	True				
ANR	52381	IdentifierDecl	sz = io_sz		52250	0					
ANR	52382	IdentifierDeclType	target_phys_addr_t		52250	0					
ANR	52383	Identifier	sz		52250	1					
ANR	52384	AssignmentExpression	sz = io_sz		52250	2		=			
ANR	52385	Identifier	io_sz		52250	0					
ANR	52386	Identifier	io_sz		52250	1					
ANR	52387	IdentifierDeclStatement	"void * buf = cpu_physical_memory_map ( paddr , & sz , is_write ) ;"	51:16:840:897	52250	4	True				
ANR	52388	IdentifierDecl	"* buf = cpu_physical_memory_map ( paddr , & sz , is_write )"		52250	0					
ANR	52389	IdentifierDeclType	void *		52250	0					
ANR	52390	Identifier	buf		52250	1					
ANR	52391	AssignmentExpression	"* buf = cpu_physical_memory_map ( paddr , & sz , is_write )"		52250	2		=			
ANR	52392	Identifier	buf		52250	0					
ANR	52393	CallExpression	"cpu_physical_memory_map ( paddr , & sz , is_write )"		52250	1					
ANR	52394	Callee	cpu_physical_memory_map		52250	0					
ANR	52395	Identifier	cpu_physical_memory_map		52250	0					
ANR	52396	ArgumentList	paddr		52250	1					
ANR	52397	Argument	paddr		52250	0					
ANR	52398	Identifier	paddr		52250	0					
ANR	52399	Argument	& sz		52250	1					
ANR	52400	UnaryOperationExpression	& sz		52250	0					
ANR	52401	UnaryOperator	&		52250	0					
ANR	52402	Identifier	sz		52250	1					
ANR	52403	Argument	is_write		52250	2					
ANR	52404	Identifier	is_write		52250	0					
ANR	52405	IfStatement	if ( buf )		52250	5					
ANR	52406	Condition	buf	55:20:922:924	52250	0	True				
ANR	52407	Identifier	buf		52250	0					
ANR	52408	CompoundStatement		53:25:883:883	52250	1					
ANR	52409	ExpressionStatement	vaddr += io_sz	57:20:950:964	52250	0	True				
ANR	52410	AssignmentExpression	vaddr += io_sz		52250	0		+=			
ANR	52411	Identifier	vaddr		52250	0					
ANR	52412	Identifier	io_sz		52250	1					
ANR	52413	ExpressionStatement	len -= io_sz	59:20:987:999	52250	1	True				
ANR	52414	AssignmentExpression	len -= io_sz		52250	0		-=			
ANR	52415	Identifier	len		52250	0					
ANR	52416	Identifier	io_sz		52250	1					
ANR	52417	ExpressionStatement	"regs [ 2 ] = is_write ? write ( fd , buf , io_sz ) : read ( fd , buf , io_sz )"	61:20:1022:1137	52250	2	True				
ANR	52418	AssignmentExpression	"regs [ 2 ] = is_write ? write ( fd , buf , io_sz ) : read ( fd , buf , io_sz )"		52250	0		=			
ANR	52419	ArrayIndexing	regs [ 2 ]		52250	0					
ANR	52420	Identifier	regs		52250	0					
ANR	52421	PrimaryExpression	2		52250	1					
ANR	52422	ConditionalExpression	"is_write ? write ( fd , buf , io_sz ) : read ( fd , buf , io_sz )"		52250	1					
ANR	52423	Condition	is_write		52250	0					
ANR	52424	Identifier	is_write		52250	0					
ANR	52425	CallExpression	"write ( fd , buf , io_sz )"		52250	1					
ANR	52426	Callee	write		52250	0					
ANR	52427	Identifier	write		52250	0					
ANR	52428	ArgumentList	fd		52250	1					
ANR	52429	Argument	fd		52250	0					
ANR	52430	Identifier	fd		52250	0					
ANR	52431	Argument	buf		52250	1					
ANR	52432	Identifier	buf		52250	0					
ANR	52433	Argument	io_sz		52250	2					
ANR	52434	Identifier	io_sz		52250	0					
ANR	52435	CallExpression	"read ( fd , buf , io_sz )"		52250	2					
ANR	52436	Callee	read		52250	0					
ANR	52437	Identifier	read		52250	0					
ANR	52438	ArgumentList	fd		52250	1					
ANR	52439	Argument	fd		52250	0					
ANR	52440	Identifier	fd		52250	0					
ANR	52441	Argument	buf		52250	1					
ANR	52442	Identifier	buf		52250	0					
ANR	52443	Argument	io_sz		52250	2					
ANR	52444	Identifier	io_sz		52250	0					
ANR	52445	ExpressionStatement	regs [ 3 ] = errno	67:20:1160:1175	52250	3	True				
ANR	52446	AssignmentExpression	regs [ 3 ] = errno		52250	0		=			
ANR	52447	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52448	Identifier	regs		52250	0					
ANR	52449	PrimaryExpression	3		52250	1					
ANR	52450	Identifier	errno		52250	1					
ANR	52451	ExpressionStatement	"cpu_physical_memory_unmap ( buf , sz , is_write , sz )"	69:20:1198:1246	52250	4	True				
ANR	52452	CallExpression	"cpu_physical_memory_unmap ( buf , sz , is_write , sz )"		52250	0					
ANR	52453	Callee	cpu_physical_memory_unmap		52250	0					
ANR	52454	Identifier	cpu_physical_memory_unmap		52250	0					
ANR	52455	ArgumentList	buf		52250	1					
ANR	52456	Argument	buf		52250	0					
ANR	52457	Identifier	buf		52250	0					
ANR	52458	Argument	sz		52250	1					
ANR	52459	Identifier	sz		52250	0					
ANR	52460	Argument	is_write		52250	2					
ANR	52461	Identifier	is_write		52250	0					
ANR	52462	Argument	sz		52250	3					
ANR	52463	Identifier	sz		52250	0					
ANR	52464	IfStatement	if ( regs [ 2 ] == - 1 )		52250	5					
ANR	52465	Condition	regs [ 2 ] == - 1	71:24:1273:1285	52250	0	True				
ANR	52466	EqualityExpression	regs [ 2 ] == - 1		52250	0		==			
ANR	52467	ArrayIndexing	regs [ 2 ]		52250	0					
ANR	52468	Identifier	regs		52250	0					
ANR	52469	PrimaryExpression	2		52250	1					
ANR	52470	UnaryOperationExpression	- 1		52250	1					
ANR	52471	UnaryOperator	-		52250	0					
ANR	52472	PrimaryExpression	1		52250	1					
ANR	52473	CompoundStatement		69:39:1244:1244	52250	1					
ANR	52474	BreakStatement	break ;	73:24:1315:1320	52250	0	True				
ANR	52475	ElseStatement	else		52250	0					
ANR	52476	CompoundStatement		75:23:1325:1325	52250	0					
ANR	52477	ExpressionStatement	regs [ 3 ] = EINVAL	80:20:1393:1409	52250	0	True				
ANR	52478	AssignmentExpression	regs [ 3 ] = EINVAL		52250	0		=			
ANR	52479	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52480	Identifier	regs		52250	0					
ANR	52481	PrimaryExpression	3		52250	1					
ANR	52482	Identifier	EINVAL		52250	1					
ANR	52483	BreakStatement	break ;	82:20:1432:1437	52250	1	True				
ANR	52484	BreakStatement	break ;	90:8:1493:1498	52250	7	True				
ANR	52485	Label	case TARGET_SYS_open :	94:4:1507:1527	52250	8	True				
ANR	52486	Identifier	TARGET_SYS_open		52250	0					
ANR	52487	CompoundStatement		100:12:1560:1565	52250	9					
ANR	52488	IdentifierDeclStatement	char name [ 1024 ] ;	98:12:1553:1568	52250	0	True				
ANR	52489	IdentifierDecl	name [ 1024 ]		52250	0					
ANR	52490	IdentifierDeclType	char [ 1024 ]		52250	0					
ANR	52491	Identifier	name		52250	1					
ANR	52492	PrimaryExpression	1024		52250	2					
ANR	52493	IdentifierDeclStatement	int rc ;	100:12:1583:1589	52250	1	True				
ANR	52494	IdentifierDecl	rc		52250	0					
ANR	52495	IdentifierDeclType	int		52250	0					
ANR	52496	Identifier	rc		52250	1					
ANR	52497	IdentifierDeclStatement	int i ;	102:12:1604:1609	52250	2	True				
ANR	52498	IdentifierDecl	i		52250	0					
ANR	52499	IdentifierDeclType	int		52250	0					
ANR	52500	Identifier	i		52250	1					
ANR	52501	ForStatement	for ( i = 0 ; i < ARRAY_SIZE ( name ) ; ++ i )		52250	3					
ANR	52502	ForInit	i = 0 ;	106:17:1631:1636	52250	0	True				
ANR	52503	AssignmentExpression	i = 0		52250	0		=			
ANR	52504	Identifier	i		52250	0					
ANR	52505	PrimaryExpression	0		52250	1					
ANR	52506	Condition	i < ARRAY_SIZE ( name )	106:24:1638:1657	52250	1	True				
ANR	52507	RelationalExpression	i < ARRAY_SIZE ( name )		52250	0		<			
ANR	52508	Identifier	i		52250	0					
ANR	52509	CallExpression	ARRAY_SIZE ( name )		52250	1					
ANR	52510	Callee	ARRAY_SIZE		52250	0					
ANR	52511	Identifier	ARRAY_SIZE		52250	0					
ANR	52512	ArgumentList	name		52250	1					
ANR	52513	Argument	name		52250	0					
ANR	52514	Identifier	name		52250	0					
ANR	52515	UnaryExpression	++ i	106:46:1660:1662	52250	2	True				
ANR	52516	IncDec	++		52250	0					
ANR	52517	Identifier	i		52250	1					
ANR	52518	CompoundStatement		104:51:1621:1621	52250	3					
ANR	52519	ExpressionStatement	"rc = cpu_memory_rw_debug ( env , regs [ 3 ] + i , ( uint8_t * ) name + i , 1 , 0 )"	108:16:1684:1779	52250	0	True				
ANR	52520	AssignmentExpression	"rc = cpu_memory_rw_debug ( env , regs [ 3 ] + i , ( uint8_t * ) name + i , 1 , 0 )"		52250	0		=			
ANR	52521	Identifier	rc		52250	0					
ANR	52522	CallExpression	"cpu_memory_rw_debug ( env , regs [ 3 ] + i , ( uint8_t * ) name + i , 1 , 0 )"		52250	1					
ANR	52523	Callee	cpu_memory_rw_debug		52250	0					
ANR	52524	Identifier	cpu_memory_rw_debug		52250	0					
ANR	52525	ArgumentList	env		52250	1					
ANR	52526	Argument	env		52250	0					
ANR	52527	Identifier	env		52250	0					
ANR	52528	Argument	regs [ 3 ] + i		52250	1					
ANR	52529	AdditiveExpression	regs [ 3 ] + i		52250	0		+			
ANR	52530	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52531	Identifier	regs		52250	0					
ANR	52532	PrimaryExpression	3		52250	1					
ANR	52533	Identifier	i		52250	1					
ANR	52534	Argument	( uint8_t * ) name + i		52250	2					
ANR	52535	AdditiveExpression	( uint8_t * ) name + i		52250	0		+			
ANR	52536	CastExpression	( uint8_t * ) name		52250	0					
ANR	52537	CastTarget	uint8_t *		52250	0					
ANR	52538	Identifier	name		52250	1					
ANR	52539	Identifier	i		52250	1					
ANR	52540	Argument	1		52250	3					
ANR	52541	PrimaryExpression	1		52250	0					
ANR	52542	Argument	0		52250	4					
ANR	52543	PrimaryExpression	0		52250	0					
ANR	52544	IfStatement	if ( rc != 0 || name [ i ] == 0 )		52250	1					
ANR	52545	Condition	rc != 0 || name [ i ] == 0	112:20:1802:1824	52250	0	True				
ANR	52546	OrExpression	rc != 0 || name [ i ] == 0		52250	0		||			
ANR	52547	EqualityExpression	rc != 0		52250	0		!=			
ANR	52548	Identifier	rc		52250	0					
ANR	52549	PrimaryExpression	0		52250	1					
ANR	52550	EqualityExpression	name [ i ] == 0		52250	1		==			
ANR	52551	ArrayIndexing	name [ i ]		52250	0					
ANR	52552	Identifier	name		52250	0					
ANR	52553	Identifier	i		52250	1					
ANR	52554	PrimaryExpression	0		52250	1					
ANR	52555	CompoundStatement		110:45:1783:1783	52250	1					
ANR	52556	BreakStatement	break ;	114:20:1850:1855	52250	0	True				
ANR	52557	IfStatement	if ( rc == 0 && i < ARRAY_SIZE ( name ) )		52250	4					
ANR	52558	Condition	rc == 0 && i < ARRAY_SIZE ( name )	122:16:1910:1940	52250	0	True				
ANR	52559	AndExpression	rc == 0 && i < ARRAY_SIZE ( name )		52250	0		&&			
ANR	52560	EqualityExpression	rc == 0		52250	0		==			
ANR	52561	Identifier	rc		52250	0					
ANR	52562	PrimaryExpression	0		52250	1					
ANR	52563	RelationalExpression	i < ARRAY_SIZE ( name )		52250	1		<			
ANR	52564	Identifier	i		52250	0					
ANR	52565	CallExpression	ARRAY_SIZE ( name )		52250	1					
ANR	52566	Callee	ARRAY_SIZE		52250	0					
ANR	52567	Identifier	ARRAY_SIZE		52250	0					
ANR	52568	ArgumentList	name		52250	1					
ANR	52569	Argument	name		52250	0					
ANR	52570	Identifier	name		52250	0					
ANR	52571	CompoundStatement		120:49:1899:1899	52250	1					
ANR	52572	ExpressionStatement	"regs [ 2 ] = open ( name , regs [ 4 ] , regs [ 5 ] )"	124:16:1962:2000	52250	0	True				
ANR	52573	AssignmentExpression	"regs [ 2 ] = open ( name , regs [ 4 ] , regs [ 5 ] )"		52250	0		=			
ANR	52574	ArrayIndexing	regs [ 2 ]		52250	0					
ANR	52575	Identifier	regs		52250	0					
ANR	52576	PrimaryExpression	2		52250	1					
ANR	52577	CallExpression	"open ( name , regs [ 4 ] , regs [ 5 ] )"		52250	1					
ANR	52578	Callee	open		52250	0					
ANR	52579	Identifier	open		52250	0					
ANR	52580	ArgumentList	name		52250	1					
ANR	52581	Argument	name		52250	0					
ANR	52582	Identifier	name		52250	0					
ANR	52583	Argument	regs [ 4 ]		52250	1					
ANR	52584	ArrayIndexing	regs [ 4 ]		52250	0					
ANR	52585	Identifier	regs		52250	0					
ANR	52586	PrimaryExpression	4		52250	1					
ANR	52587	Argument	regs [ 5 ]		52250	2					
ANR	52588	ArrayIndexing	regs [ 5 ]		52250	0					
ANR	52589	Identifier	regs		52250	0					
ANR	52590	PrimaryExpression	5		52250	1					
ANR	52591	ExpressionStatement	regs [ 3 ] = errno	126:16:2019:2034	52250	1	True				
ANR	52592	AssignmentExpression	regs [ 3 ] = errno		52250	0		=			
ANR	52593	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52594	Identifier	regs		52250	0					
ANR	52595	PrimaryExpression	3		52250	1					
ANR	52596	Identifier	errno		52250	1					
ANR	52597	ElseStatement	else		52250	0					
ANR	52598	CompoundStatement		126:19:2012:2012	52250	0					
ANR	52599	ExpressionStatement	regs [ 3 ] = EINVAL	131:16:2076:2092	52250	0	True				
ANR	52600	AssignmentExpression	regs [ 3 ] = EINVAL		52250	0		=			
ANR	52601	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52602	Identifier	regs		52250	0					
ANR	52603	PrimaryExpression	3		52250	1					
ANR	52604	Identifier	EINVAL		52250	1					
ANR	52605	BreakStatement	break ;	137:8:2129:2134	52250	10	True				
ANR	52606	Label	case TARGET_SYS_close :	141:4:2143:2164	52250	11	True				
ANR	52607	Identifier	TARGET_SYS_close		52250	0					
ANR	52608	IfStatement	if ( regs [ 3 ] < 3 )		52250	12					
ANR	52609	Condition	regs [ 3 ] < 3	143:12:2179:2189	52250	0	True				
ANR	52610	RelationalExpression	regs [ 3 ] < 3		52250	0		<			
ANR	52611	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52612	Identifier	regs		52250	0					
ANR	52613	PrimaryExpression	3		52250	1					
ANR	52614	PrimaryExpression	3		52250	1					
ANR	52615	CompoundStatement		141:25:2148:2148	52250	1					
ANR	52616	ExpressionStatement	regs [ 2 ] = regs [ 3 ] = 0	145:12:2207:2228	52250	0	True				
ANR	52617	AssignmentExpression	regs [ 2 ] = regs [ 3 ] = 0		52250	0		=			
ANR	52618	ArrayIndexing	regs [ 2 ]		52250	0					
ANR	52619	Identifier	regs		52250	0					
ANR	52620	PrimaryExpression	2		52250	1					
ANR	52621	AssignmentExpression	regs [ 3 ] = 0		52250	1		=			
ANR	52622	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52623	Identifier	regs		52250	0					
ANR	52624	PrimaryExpression	3		52250	1					
ANR	52625	PrimaryExpression	0		52250	1					
ANR	52626	ElseStatement	else		52250	0					
ANR	52627	CompoundStatement		145:15:2202:2202	52250	0					
ANR	52628	ExpressionStatement	regs [ 2 ] = close ( regs [ 3 ] )	149:12:2261:2285	52250	0	True				
ANR	52629	AssignmentExpression	regs [ 2 ] = close ( regs [ 3 ] )		52250	0		=			
ANR	52630	ArrayIndexing	regs [ 2 ]		52250	0					
ANR	52631	Identifier	regs		52250	0					
ANR	52632	PrimaryExpression	2		52250	1					
ANR	52633	CallExpression	close ( regs [ 3 ] )		52250	1					
ANR	52634	Callee	close		52250	0					
ANR	52635	Identifier	close		52250	0					
ANR	52636	ArgumentList	regs [ 3 ]		52250	1					
ANR	52637	Argument	regs [ 3 ]		52250	0					
ANR	52638	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52639	Identifier	regs		52250	0					
ANR	52640	PrimaryExpression	3		52250	1					
ANR	52641	ExpressionStatement	regs [ 3 ] = errno	151:12:2300:2315	52250	1	True				
ANR	52642	AssignmentExpression	regs [ 3 ] = errno		52250	0		=			
ANR	52643	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52644	Identifier	regs		52250	0					
ANR	52645	PrimaryExpression	3		52250	1					
ANR	52646	Identifier	errno		52250	1					
ANR	52647	BreakStatement	break ;	155:8:2337:2342	52250	13	True				
ANR	52648	Label	case TARGET_SYS_lseek :	159:4:2351:2372	52250	14	True				
ANR	52649	Identifier	TARGET_SYS_lseek		52250	0					
ANR	52650	ExpressionStatement	"regs [ 2 ] = lseek ( regs [ 3 ] , ( off_t ) ( int32_t ) regs [ 4 ] , regs [ 5 ] )"	161:8:2383:2441	52250	15	True				
ANR	52651	AssignmentExpression	"regs [ 2 ] = lseek ( regs [ 3 ] , ( off_t ) ( int32_t ) regs [ 4 ] , regs [ 5 ] )"		52250	0		=			
ANR	52652	ArrayIndexing	regs [ 2 ]		52250	0					
ANR	52653	Identifier	regs		52250	0					
ANR	52654	PrimaryExpression	2		52250	1					
ANR	52655	CallExpression	"lseek ( regs [ 3 ] , ( off_t ) ( int32_t ) regs [ 4 ] , regs [ 5 ] )"		52250	1					
ANR	52656	Callee	lseek		52250	0					
ANR	52657	Identifier	lseek		52250	0					
ANR	52658	ArgumentList	regs [ 3 ]		52250	1					
ANR	52659	Argument	regs [ 3 ]		52250	0					
ANR	52660	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52661	Identifier	regs		52250	0					
ANR	52662	PrimaryExpression	3		52250	1					
ANR	52663	Argument	( off_t ) ( int32_t ) regs [ 4 ]		52250	1					
ANR	52664	CastExpression	( off_t ) ( int32_t ) regs [ 4 ]		52250	0					
ANR	52665	CastTarget	off_t		52250	0					
ANR	52666	CastExpression	( int32_t ) regs [ 4 ]		52250	1					
ANR	52667	CastTarget	int32_t		52250	0					
ANR	52668	ArrayIndexing	regs [ 4 ]		52250	1					
ANR	52669	Identifier	regs		52250	0					
ANR	52670	PrimaryExpression	4		52250	1					
ANR	52671	Argument	regs [ 5 ]		52250	2					
ANR	52672	ArrayIndexing	regs [ 5 ]		52250	0					
ANR	52673	Identifier	regs		52250	0					
ANR	52674	PrimaryExpression	5		52250	1					
ANR	52675	ExpressionStatement	regs [ 3 ] = errno	163:8:2452:2467	52250	16	True				
ANR	52676	AssignmentExpression	regs [ 3 ] = errno		52250	0		=			
ANR	52677	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52678	Identifier	regs		52250	0					
ANR	52679	PrimaryExpression	3		52250	1					
ANR	52680	Identifier	errno		52250	1					
ANR	52681	BreakStatement	break ;	165:8:2478:2483	52250	17	True				
ANR	52682	Label	case TARGET_SYS_select_one :	169:4:2492:2518	52250	18	True				
ANR	52683	Identifier	TARGET_SYS_select_one		52250	0					
ANR	52684	CompoundStatement		183:12:2692:2704	52250	19					
ANR	52685	IdentifierDeclStatement	uint32_t fd = regs [ 3 ] ;	173:12:2544:2565	52250	0	True				
ANR	52686	IdentifierDecl	fd = regs [ 3 ]		52250	0					
ANR	52687	IdentifierDeclType	uint32_t		52250	0					
ANR	52688	Identifier	fd		52250	1					
ANR	52689	AssignmentExpression	fd = regs [ 3 ]		52250	2		=			
ANR	52690	Identifier	fd		52250	0					
ANR	52691	ArrayIndexing	regs [ 3 ]		52250	1					
ANR	52692	Identifier	regs		52250	0					
ANR	52693	PrimaryExpression	3		52250	1					
ANR	52694	IdentifierDeclStatement	uint32_t rq = regs [ 4 ] ;	175:12:2580:2601	52250	1	True				
ANR	52695	IdentifierDecl	rq = regs [ 4 ]		52250	0					
ANR	52696	IdentifierDeclType	uint32_t		52250	0					
ANR	52697	Identifier	rq		52250	1					
ANR	52698	AssignmentExpression	rq = regs [ 4 ]		52250	2		=			
ANR	52699	Identifier	rq		52250	0					
ANR	52700	ArrayIndexing	regs [ 4 ]		52250	1					
ANR	52701	Identifier	regs		52250	0					
ANR	52702	PrimaryExpression	4		52250	1					
ANR	52703	IdentifierDeclStatement	uint32_t target_tv = regs [ 5 ] ;	177:12:2616:2644	52250	2	True				
ANR	52704	IdentifierDecl	target_tv = regs [ 5 ]		52250	0					
ANR	52705	IdentifierDeclType	uint32_t		52250	0					
ANR	52706	Identifier	target_tv		52250	1					
ANR	52707	AssignmentExpression	target_tv = regs [ 5 ]		52250	2		=			
ANR	52708	Identifier	target_tv		52250	0					
ANR	52709	ArrayIndexing	regs [ 5 ]		52250	1					
ANR	52710	Identifier	regs		52250	0					
ANR	52711	PrimaryExpression	5		52250	1					
ANR	52712	IdentifierDeclStatement	uint32_t target_tvv [ 2 ] ;	179:12:2659:2681	52250	3	True				
ANR	52713	IdentifierDecl	target_tvv [ 2 ]		52250	0					
ANR	52714	IdentifierDeclType	uint32_t [ 2 ]		52250	0					
ANR	52715	Identifier	target_tvv		52250	1					
ANR	52716	PrimaryExpression	2		52250	2					
ANR	52717	IdentifierDeclStatement	struct timeval tv = { 0 } ;	183:12:2698:2721	52250	4	True				
ANR	52718	IdentifierDecl	tv = { 0 }		52250	0					
ANR	52719	IdentifierDeclType	struct timeval		52250	0					
ANR	52720	Identifier	tv		52250	1					
ANR	52721	AssignmentExpression	tv = { 0 }		52250	2		=			
ANR	52722	Identifier	tv		52250	0					
ANR	52723	InitializerList	0		52250	1					
ANR	52724	PrimaryExpression	0		52250	0					
ANR	52725	IdentifierDeclStatement	fd_set fdset ;	185:12:2736:2748	52250	5	True				
ANR	52726	IdentifierDecl	fdset		52250	0					
ANR	52727	IdentifierDeclType	fd_set		52250	0					
ANR	52728	Identifier	fdset		52250	1					
ANR	52729	ExpressionStatement	FD_ZERO ( & fdset )	189:12:2765:2780	52250	6	True				
ANR	52730	CallExpression	FD_ZERO ( & fdset )		52250	0					
ANR	52731	Callee	FD_ZERO		52250	0					
ANR	52732	Identifier	FD_ZERO		52250	0					
ANR	52733	ArgumentList	& fdset		52250	1					
ANR	52734	Argument	& fdset		52250	0					
ANR	52735	UnaryOperationExpression	& fdset		52250	0					
ANR	52736	UnaryOperator	&		52250	0					
ANR	52737	Identifier	fdset		52250	1					
ANR	52738	ExpressionStatement	"FD_SET ( fd , & fdset )"	191:12:2795:2813	52250	7	True				
ANR	52739	CallExpression	"FD_SET ( fd , & fdset )"		52250	0					
ANR	52740	Callee	FD_SET		52250	0					
ANR	52741	Identifier	FD_SET		52250	0					
ANR	52742	ArgumentList	fd		52250	1					
ANR	52743	Argument	fd		52250	0					
ANR	52744	Identifier	fd		52250	0					
ANR	52745	Argument	& fdset		52250	1					
ANR	52746	UnaryOperationExpression	& fdset		52250	0					
ANR	52747	UnaryOperator	&		52250	0					
ANR	52748	Identifier	fdset		52250	1					
ANR	52749	IfStatement	if ( target_tv )		52250	8					
ANR	52750	Condition	target_tv	195:16:2834:2842	52250	0	True				
ANR	52751	Identifier	target_tv		52250	0					
ANR	52752	CompoundStatement		193:27:2801:2801	52250	1					
ANR	52753	ExpressionStatement	"cpu_memory_rw_debug ( env , target_tv , ( uint8_t * ) target_tvv , sizeof ( target_tvv ) , 0 )"	197:16:2864:2970	52250	0	True				
ANR	52754	CallExpression	"cpu_memory_rw_debug ( env , target_tv , ( uint8_t * ) target_tvv , sizeof ( target_tvv ) , 0 )"		52250	0					
ANR	52755	Callee	cpu_memory_rw_debug		52250	0					
ANR	52756	Identifier	cpu_memory_rw_debug		52250	0					
ANR	52757	ArgumentList	env		52250	1					
ANR	52758	Argument	env		52250	0					
ANR	52759	Identifier	env		52250	0					
ANR	52760	Argument	target_tv		52250	1					
ANR	52761	Identifier	target_tv		52250	0					
ANR	52762	Argument	( uint8_t * ) target_tvv		52250	2					
ANR	52763	CastExpression	( uint8_t * ) target_tvv		52250	0					
ANR	52764	CastTarget	uint8_t *		52250	0					
ANR	52765	Identifier	target_tvv		52250	1					
ANR	52766	Argument	sizeof ( target_tvv )		52250	3					
ANR	52767	SizeofExpression	sizeof ( target_tvv )		52250	0					
ANR	52768	Sizeof	sizeof		52250	0					
ANR	52769	SizeofOperand	target_tvv		52250	1					
ANR	52770	Argument	0		52250	4					
ANR	52771	PrimaryExpression	0		52250	0					
ANR	52772	ExpressionStatement	tv . tv_sec = ( int32_t ) tswap32 ( target_tvv [ 0 ] )	201:16:2989:3032	52250	1	True				
ANR	52773	AssignmentExpression	tv . tv_sec = ( int32_t ) tswap32 ( target_tvv [ 0 ] )		52250	0		=			
ANR	52774	MemberAccess	tv . tv_sec		52250	0					
ANR	52775	Identifier	tv		52250	0					
ANR	52776	Identifier	tv_sec		52250	1					
ANR	52777	CastExpression	( int32_t ) tswap32 ( target_tvv [ 0 ] )		52250	1					
ANR	52778	CastTarget	int32_t		52250	0					
ANR	52779	CallExpression	tswap32 ( target_tvv [ 0 ] )		52250	1					
ANR	52780	Callee	tswap32		52250	0					
ANR	52781	Identifier	tswap32		52250	0					
ANR	52782	ArgumentList	target_tvv [ 0 ]		52250	1					
ANR	52783	Argument	target_tvv [ 0 ]		52250	0					
ANR	52784	ArrayIndexing	target_tvv [ 0 ]		52250	0					
ANR	52785	Identifier	target_tvv		52250	0					
ANR	52786	PrimaryExpression	0		52250	1					
ANR	52787	ExpressionStatement	tv . tv_usec = ( int32_t ) tswap32 ( target_tvv [ 1 ] )	203:16:3051:3095	52250	2	True				
ANR	52788	AssignmentExpression	tv . tv_usec = ( int32_t ) tswap32 ( target_tvv [ 1 ] )		52250	0		=			
ANR	52789	MemberAccess	tv . tv_usec		52250	0					
ANR	52790	Identifier	tv		52250	0					
ANR	52791	Identifier	tv_usec		52250	1					
ANR	52792	CastExpression	( int32_t ) tswap32 ( target_tvv [ 1 ] )		52250	1					
ANR	52793	CastTarget	int32_t		52250	0					
ANR	52794	CallExpression	tswap32 ( target_tvv [ 1 ] )		52250	1					
ANR	52795	Callee	tswap32		52250	0					
ANR	52796	Identifier	tswap32		52250	0					
ANR	52797	ArgumentList	target_tvv [ 1 ]		52250	1					
ANR	52798	Argument	target_tvv [ 1 ]		52250	0					
ANR	52799	ArrayIndexing	target_tvv [ 1 ]		52250	0					
ANR	52800	Identifier	target_tvv		52250	0					
ANR	52801	PrimaryExpression	1		52250	1					
ANR	52802	ExpressionStatement	"regs [ 2 ] = select ( fd + 1 , rq == SELECT_ONE_READ ? & fdset : NULL , rq == SELECT_ONE_WRITE ? & fdset : NULL , rq == SELECT_ONE_EXCEPT ? & fdset : NULL , target_tv ? & tv : NULL )"	207:12:3125:3380	52250	9	True				
ANR	52803	AssignmentExpression	"regs [ 2 ] = select ( fd + 1 , rq == SELECT_ONE_READ ? & fdset : NULL , rq == SELECT_ONE_WRITE ? & fdset : NULL , rq == SELECT_ONE_EXCEPT ? & fdset : NULL , target_tv ? & tv : NULL )"		52250	0		=			
ANR	52804	ArrayIndexing	regs [ 2 ]		52250	0					
ANR	52805	Identifier	regs		52250	0					
ANR	52806	PrimaryExpression	2		52250	1					
ANR	52807	CallExpression	"select ( fd + 1 , rq == SELECT_ONE_READ ? & fdset : NULL , rq == SELECT_ONE_WRITE ? & fdset : NULL , rq == SELECT_ONE_EXCEPT ? & fdset : NULL , target_tv ? & tv : NULL )"		52250	1					
ANR	52808	Callee	select		52250	0					
ANR	52809	Identifier	select		52250	0					
ANR	52810	ArgumentList	fd + 1		52250	1					
ANR	52811	Argument	fd + 1		52250	0					
ANR	52812	AdditiveExpression	fd + 1		52250	0		+			
ANR	52813	Identifier	fd		52250	0					
ANR	52814	PrimaryExpression	1		52250	1					
ANR	52815	Argument	rq == SELECT_ONE_READ ? & fdset : NULL		52250	1					
ANR	52816	ConditionalExpression	rq == SELECT_ONE_READ ? & fdset : NULL		52250	0					
ANR	52817	Condition	rq == SELECT_ONE_READ		52250	0					
ANR	52818	EqualityExpression	rq == SELECT_ONE_READ		52250	0		==			
ANR	52819	Identifier	rq		52250	0					
ANR	52820	Identifier	SELECT_ONE_READ		52250	1					
ANR	52821	UnaryOperationExpression	& fdset		52250	1					
ANR	52822	UnaryOperator	&		52250	0					
ANR	52823	Identifier	fdset		52250	1					
ANR	52824	Identifier	NULL		52250	2					
ANR	52825	Argument	rq == SELECT_ONE_WRITE ? & fdset : NULL		52250	2					
ANR	52826	ConditionalExpression	rq == SELECT_ONE_WRITE ? & fdset : NULL		52250	0					
ANR	52827	Condition	rq == SELECT_ONE_WRITE		52250	0					
ANR	52828	EqualityExpression	rq == SELECT_ONE_WRITE		52250	0		==			
ANR	52829	Identifier	rq		52250	0					
ANR	52830	Identifier	SELECT_ONE_WRITE		52250	1					
ANR	52831	UnaryOperationExpression	& fdset		52250	1					
ANR	52832	UnaryOperator	&		52250	0					
ANR	52833	Identifier	fdset		52250	1					
ANR	52834	Identifier	NULL		52250	2					
ANR	52835	Argument	rq == SELECT_ONE_EXCEPT ? & fdset : NULL		52250	3					
ANR	52836	ConditionalExpression	rq == SELECT_ONE_EXCEPT ? & fdset : NULL		52250	0					
ANR	52837	Condition	rq == SELECT_ONE_EXCEPT		52250	0					
ANR	52838	EqualityExpression	rq == SELECT_ONE_EXCEPT		52250	0		==			
ANR	52839	Identifier	rq		52250	0					
ANR	52840	Identifier	SELECT_ONE_EXCEPT		52250	1					
ANR	52841	UnaryOperationExpression	& fdset		52250	1					
ANR	52842	UnaryOperator	&		52250	0					
ANR	52843	Identifier	fdset		52250	1					
ANR	52844	Identifier	NULL		52250	2					
ANR	52845	Argument	target_tv ? & tv : NULL		52250	4					
ANR	52846	ConditionalExpression	target_tv ? & tv : NULL		52250	0					
ANR	52847	Condition	target_tv		52250	0					
ANR	52848	Identifier	target_tv		52250	0					
ANR	52849	UnaryOperationExpression	& tv		52250	1					
ANR	52850	UnaryOperator	&		52250	0					
ANR	52851	Identifier	tv		52250	1					
ANR	52852	Identifier	NULL		52250	2					
ANR	52853	ExpressionStatement	regs [ 3 ] = errno	217:12:3395:3410	52250	10	True				
ANR	52854	AssignmentExpression	regs [ 3 ] = errno		52250	0		=			
ANR	52855	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52856	Identifier	regs		52250	0					
ANR	52857	PrimaryExpression	3		52250	1					
ANR	52858	Identifier	errno		52250	1					
ANR	52859	BreakStatement	break ;	221:8:3432:3437	52250	20	True				
ANR	52860	Label	case TARGET_SYS_argc :	225:4:3446:3466	52250	21	True				
ANR	52861	Identifier	TARGET_SYS_argc		52250	0					
ANR	52862	ExpressionStatement	regs [ 2 ] = 1	227:8:3477:3488	52250	22	True				
ANR	52863	AssignmentExpression	regs [ 2 ] = 1		52250	0		=			
ANR	52864	ArrayIndexing	regs [ 2 ]		52250	0					
ANR	52865	Identifier	regs		52250	0					
ANR	52866	PrimaryExpression	2		52250	1					
ANR	52867	PrimaryExpression	1		52250	1					
ANR	52868	ExpressionStatement	regs [ 3 ] = 0	229:8:3499:3510	52250	23	True				
ANR	52869	AssignmentExpression	regs [ 3 ] = 0		52250	0		=			
ANR	52870	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52871	Identifier	regs		52250	0					
ANR	52872	PrimaryExpression	3		52250	1					
ANR	52873	PrimaryExpression	0		52250	1					
ANR	52874	BreakStatement	break ;	231:8:3521:3526	52250	24	True				
ANR	52875	Label	case TARGET_SYS_argv_sz :	235:4:3535:3558	52250	25	True				
ANR	52876	Identifier	TARGET_SYS_argv_sz		52250	0					
ANR	52877	ExpressionStatement	regs [ 2 ] = 128	237:8:3569:3582	52250	26	True				
ANR	52878	AssignmentExpression	regs [ 2 ] = 128		52250	0		=			
ANR	52879	ArrayIndexing	regs [ 2 ]		52250	0					
ANR	52880	Identifier	regs		52250	0					
ANR	52881	PrimaryExpression	2		52250	1					
ANR	52882	PrimaryExpression	128		52250	1					
ANR	52883	ExpressionStatement	regs [ 3 ] = 0	239:8:3593:3604	52250	27	True				
ANR	52884	AssignmentExpression	regs [ 3 ] = 0		52250	0		=			
ANR	52885	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52886	Identifier	regs		52250	0					
ANR	52887	PrimaryExpression	3		52250	1					
ANR	52888	PrimaryExpression	0		52250	1					
ANR	52889	BreakStatement	break ;	241:8:3615:3620	52250	28	True				
ANR	52890	Label	case TARGET_SYS_argv :	245:4:3629:3649	52250	29	True				
ANR	52891	Identifier	TARGET_SYS_argv		52250	0					
ANR	52892	CompoundStatement		247:12:3631:3802	52250	30					
ANR	52893	ClassDefStatement	"struct Argv { uint32_t argptr [ 2 ] ; char text [ 120 ] ; } argv = { { 0 , 0 } , ""test"" } ;"	249:12:3675:3846	52250	0	True				
ANR	52894	Identifier	Argv		52250	0					
ANR	52895	IdentifierDecl	"argv = { { 0 , 0 } , ""test"" }"		52250	1					
ANR	52896	IdentifierDeclType	Argv		52250	0					
ANR	52897	Identifier	argv		52250	1					
ANR	52898	AssignmentExpression	"argv = { { 0 , 0 } , ""test"" }"		52250	2		=			
ANR	52899	Identifier	argv		52250	0					
ANR	52900	InitializerList	0		52250	1					
ANR	52901	InitializerList	0		52250	0					
ANR	52902	PrimaryExpression	0		52250	0					
ANR	52903	PrimaryExpression	0		52250	1					
ANR	52904	PrimaryExpression	"""test"""		52250	1					
ANR	52905	Statement	argv	265:12:3863:3866	52250	1	True				
ANR	52906	Statement	.	265:16:3867:3867	52250	2	True				
ANR	52907	Statement	argptr	265:17:3868:3873	52250	3	True				
ANR	52908	Statement	[	265:23:3874:3874	52250	4	True				
ANR	52909	Statement	0	265:24:3875:3875	52250	5	True				
ANR	52910	Statement	]	265:25:3876:3876	52250	6	True				
ANR	52911	Statement	=	265:27:3878:3878	52250	7	True				
ANR	52912	Statement	tswap32	265:29:3880:3886	52250	8	True				
ANR	52913	Statement	(	265:36:3887:3887	52250	9	True				
ANR	52914	Statement	regs	265:37:3888:3891	52250	10	True				
ANR	52915	Statement	[	265:41:3892:3892	52250	11	True				
ANR	52916	Statement	3	265:42:3893:3893	52250	12	True				
ANR	52917	Statement	]	265:43:3894:3894	52250	13	True				
ANR	52918	Statement	+	265:45:3896:3896	52250	14	True				
ANR	52919	Statement	offsetof	265:47:3898:3905	52250	15	True				
ANR	52920	Statement	(	265:55:3906:3906	52250	16	True				
ANR	52921	Statement	struct	265:56:3907:3912	52250	17	True				
ANR	52922	Statement	Argv	265:63:3914:3917	52250	18	True				
ANR	52923	Statement	","	265:67:3918:3918	52250	19	True				
ANR	52924	Statement	text	265:69:3920:3923	52250	20	True				
ANR	52925	Statement	)	265:73:3924:3924	52250	21	True				
ANR	52926	Statement	)	265:74:3925:3925	52250	22	True				
ANR	52927	ExpressionStatement		265:75:3926:3926	52250	23	True				
ANR	52928	ExpressionStatement	"cpu_memory_rw_debug ( env , regs [ 3 ] , ( uint8_t * ) & argv , sizeof ( argv ) , 1 )"	267:12:3941:4031	52250	24	True				
ANR	52929	CallExpression	"cpu_memory_rw_debug ( env , regs [ 3 ] , ( uint8_t * ) & argv , sizeof ( argv ) , 1 )"		52250	0					
ANR	52930	Callee	cpu_memory_rw_debug		52250	0					
ANR	52931	Identifier	cpu_memory_rw_debug		52250	0					
ANR	52932	ArgumentList	env		52250	1					
ANR	52933	Argument	env		52250	0					
ANR	52934	Identifier	env		52250	0					
ANR	52935	Argument	regs [ 3 ]		52250	1					
ANR	52936	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	52937	Identifier	regs		52250	0					
ANR	52938	PrimaryExpression	3		52250	1					
ANR	52939	Argument	( uint8_t * ) & argv		52250	2					
ANR	52940	CastExpression	( uint8_t * ) & argv		52250	0					
ANR	52941	CastTarget	uint8_t *		52250	0					
ANR	52942	UnaryOperationExpression	& argv		52250	1					
ANR	52943	UnaryOperator	&		52250	0					
ANR	52944	Identifier	argv		52250	1					
ANR	52945	Argument	sizeof ( argv )		52250	3					
ANR	52946	SizeofExpression	sizeof ( argv )		52250	0					
ANR	52947	Sizeof	sizeof		52250	0					
ANR	52948	SizeofOperand	argv		52250	1					
ANR	52949	Argument	1		52250	4					
ANR	52950	PrimaryExpression	1		52250	0					
ANR	52951	BreakStatement	break ;	273:8:4053:4058	52250	31	True				
ANR	52952	Label	case TARGET_SYS_memset :	277:4:4067:4089	52250	32	True				
ANR	52953	Identifier	TARGET_SYS_memset		52250	0					
ANR	52954	CompoundStatement		281:12:4109:4130	52250	33					
ANR	52955	IdentifierDeclStatement	uint32_t base = regs [ 3 ] ;	281:12:4115:4138	52250	0	True				
ANR	52956	IdentifierDecl	base = regs [ 3 ]		52250	0					
ANR	52957	IdentifierDeclType	uint32_t		52250	0					
ANR	52958	Identifier	base		52250	1					
ANR	52959	AssignmentExpression	base = regs [ 3 ]		52250	2		=			
ANR	52960	Identifier	base		52250	0					
ANR	52961	ArrayIndexing	regs [ 3 ]		52250	1					
ANR	52962	Identifier	regs		52250	0					
ANR	52963	PrimaryExpression	3		52250	1					
ANR	52964	IdentifierDeclStatement	uint32_t sz = regs [ 5 ] ;	283:12:4153:4174	52250	1	True				
ANR	52965	IdentifierDecl	sz = regs [ 5 ]		52250	0					
ANR	52966	IdentifierDeclType	uint32_t		52250	0					
ANR	52967	Identifier	sz		52250	1					
ANR	52968	AssignmentExpression	sz = regs [ 5 ]		52250	2		=			
ANR	52969	Identifier	sz		52250	0					
ANR	52970	ArrayIndexing	regs [ 5 ]		52250	1					
ANR	52971	Identifier	regs		52250	0					
ANR	52972	PrimaryExpression	5		52250	1					
ANR	52973	WhileStatement	while ( sz )		52250	2					
ANR	52974	Condition	sz	287:19:4198:4199	52250	0	True				
ANR	52975	Identifier	sz		52250	0					
ANR	52976	CompoundStatement		289:16:4223:4273	52250	1					
ANR	52977	IdentifierDeclStatement	target_phys_addr_t len = sz ;	289:16:4221:4248	52250	0	True				
ANR	52978	IdentifierDecl	len = sz		52250	0					
ANR	52979	IdentifierDeclType	target_phys_addr_t		52250	0					
ANR	52980	Identifier	len		52250	1					
ANR	52981	AssignmentExpression	len = sz		52250	2		=			
ANR	52982	Identifier	sz		52250	0					
ANR	52983	Identifier	sz		52250	1					
ANR	52984	IdentifierDeclStatement	"void * buf = cpu_physical_memory_map ( base , & len , 1 ) ;"	291:16:4267:4317	52250	1	True				
ANR	52985	IdentifierDecl	"* buf = cpu_physical_memory_map ( base , & len , 1 )"		52250	0					
ANR	52986	IdentifierDeclType	void *		52250	0					
ANR	52987	Identifier	buf		52250	1					
ANR	52988	AssignmentExpression	"* buf = cpu_physical_memory_map ( base , & len , 1 )"		52250	2		=			
ANR	52989	Identifier	buf		52250	0					
ANR	52990	CallExpression	"cpu_physical_memory_map ( base , & len , 1 )"		52250	1					
ANR	52991	Callee	cpu_physical_memory_map		52250	0					
ANR	52992	Identifier	cpu_physical_memory_map		52250	0					
ANR	52993	ArgumentList	base		52250	1					
ANR	52994	Argument	base		52250	0					
ANR	52995	Identifier	base		52250	0					
ANR	52996	Argument	& len		52250	1					
ANR	52997	UnaryOperationExpression	& len		52250	0					
ANR	52998	UnaryOperator	&		52250	0					
ANR	52999	Identifier	len		52250	1					
ANR	53000	Argument	1		52250	2					
ANR	53001	PrimaryExpression	1		52250	0					
ANR	53002	IfStatement	if ( buf && len )		52250	2					
ANR	53003	Condition	buf && len	295:20:4342:4351	52250	0	True				
ANR	53004	AndExpression	buf && len		52250	0		&&			
ANR	53005	Identifier	buf		52250	0					
ANR	53006	Identifier	len		52250	1					
ANR	53007	CompoundStatement		293:32:4310:4310	52250	1					
ANR	53008	ExpressionStatement	"memset ( buf , regs [ 4 ] , len )"	297:20:4377:4402	52250	0	True				
ANR	53009	CallExpression	"memset ( buf , regs [ 4 ] , len )"		52250	0					
ANR	53010	Callee	memset		52250	0					
ANR	53011	Identifier	memset		52250	0					
ANR	53012	ArgumentList	buf		52250	1					
ANR	53013	Argument	buf		52250	0					
ANR	53014	Identifier	buf		52250	0					
ANR	53015	Argument	regs [ 4 ]		52250	1					
ANR	53016	ArrayIndexing	regs [ 4 ]		52250	0					
ANR	53017	Identifier	regs		52250	0					
ANR	53018	PrimaryExpression	4		52250	1					
ANR	53019	Argument	len		52250	2					
ANR	53020	Identifier	len		52250	0					
ANR	53021	ExpressionStatement	"cpu_physical_memory_unmap ( buf , len , 1 , len )"	299:20:4425:4468	52250	1	True				
ANR	53022	CallExpression	"cpu_physical_memory_unmap ( buf , len , 1 , len )"		52250	0					
ANR	53023	Callee	cpu_physical_memory_unmap		52250	0					
ANR	53024	Identifier	cpu_physical_memory_unmap		52250	0					
ANR	53025	ArgumentList	buf		52250	1					
ANR	53026	Argument	buf		52250	0					
ANR	53027	Identifier	buf		52250	0					
ANR	53028	Argument	len		52250	1					
ANR	53029	Identifier	len		52250	0					
ANR	53030	Argument	1		52250	2					
ANR	53031	PrimaryExpression	1		52250	0					
ANR	53032	Argument	len		52250	3					
ANR	53033	Identifier	len		52250	0					
ANR	53034	ElseStatement	else		52250	0					
ANR	53035	CompoundStatement		299:23:4450:4450	52250	0					
ANR	53036	ExpressionStatement	len = 1	303:20:4517:4524	52250	0	True				
ANR	53037	AssignmentExpression	len = 1		52250	0		=			
ANR	53038	Identifier	len		52250	0					
ANR	53039	PrimaryExpression	1		52250	1					
ANR	53040	ExpressionStatement	base += len	307:16:4562:4573	52250	3	True				
ANR	53041	AssignmentExpression	base += len		52250	0		+=			
ANR	53042	Identifier	base		52250	0					
ANR	53043	Identifier	len		52250	1					
ANR	53044	ExpressionStatement	sz -= len	309:16:4592:4601	52250	4	True				
ANR	53045	AssignmentExpression	sz -= len		52250	0		-=			
ANR	53046	Identifier	sz		52250	0					
ANR	53047	Identifier	len		52250	1					
ANR	53048	ExpressionStatement	regs [ 2 ] = regs [ 3 ]	313:12:4631:4648	52250	3	True				
ANR	53049	AssignmentExpression	regs [ 2 ] = regs [ 3 ]		52250	0		=			
ANR	53050	ArrayIndexing	regs [ 2 ]		52250	0					
ANR	53051	Identifier	regs		52250	0					
ANR	53052	PrimaryExpression	2		52250	1					
ANR	53053	ArrayIndexing	regs [ 3 ]		52250	1					
ANR	53054	Identifier	regs		52250	0					
ANR	53055	PrimaryExpression	3		52250	1					
ANR	53056	ExpressionStatement	regs [ 3 ] = 0	315:12:4663:4674	52250	4	True				
ANR	53057	AssignmentExpression	regs [ 3 ] = 0		52250	0		=			
ANR	53058	ArrayIndexing	regs [ 3 ]		52250	0					
ANR	53059	Identifier	regs		52250	0					
ANR	53060	PrimaryExpression	3		52250	1					
ANR	53061	PrimaryExpression	0		52250	1					
ANR	53062	BreakStatement	break ;	319:8:4696:4701	52250	34	True				
ANR	53063	Label	default :	323:4:4710:4717	52250	35	True				
ANR	53064	Identifier	default		52250	0					
ANR	53065	ExpressionStatement	"qemu_log ( ""%s(%d): not implemented\\n"" , __func__ , regs [ 2 ] )"	325:8:4728:4784	52250	36	True				
ANR	53066	CallExpression	"qemu_log ( ""%s(%d): not implemented\\n"" , __func__ , regs [ 2 ] )"		52250	0					
ANR	53067	Callee	qemu_log		52250	0					
ANR	53068	Identifier	qemu_log		52250	0					
ANR	53069	ArgumentList	"""%s(%d): not implemented\\n"""		52250	1					
ANR	53070	Argument	"""%s(%d): not implemented\\n"""		52250	0					
ANR	53071	PrimaryExpression	"""%s(%d): not implemented\\n"""		52250	0					
ANR	53072	Argument	__func__		52250	1					
ANR	53073	Identifier	__func__		52250	0					
ANR	53074	Argument	regs [ 2 ]		52250	2					
ANR	53075	ArrayIndexing	regs [ 2 ]		52250	0					
ANR	53076	Identifier	regs		52250	0					
ANR	53077	PrimaryExpression	2		52250	1					
ANR	53078	BreakStatement	break ;	329:8:4797:4802	52250	37	True				
ANR	53079	ReturnType	void HELPER		52250	1					
ANR	53080	Identifier	( simcall )		52250	2					
ANR	53081	Identifier	simcall		52250	3					
ANR	53082	ParameterList	CPUXtensaState * env		52250	4					
ANR	53083	Parameter	CPUXtensaState * env	1:21:21:39	52250	0	True				
ANR	53084	ParameterType	CPUXtensaState *		52250	0					
ANR	53085	Identifier	env		52250	1					
ANR	53086	CFGEntryNode	ENTRY		52250		True				
ANR	53087	CFGExitNode	EXIT		52250		True				
ANR	53088	Symbol	target_tvv		52250						
ANR	53089	Symbol	TARGET_SYS_write		52250						
ANR	53090	Symbol	tv		52250						
ANR	53091	Symbol	cpu_memory_rw_debug		52250						
ANR	53092	Symbol	select		52250						
ANR	53093	Symbol	env -> regs		52250						
ANR	53094	Symbol	target_tv		52250						
ANR	53095	Symbol	len		52250						
ANR	53096	Symbol	page_left		52250						
ANR	53097	Symbol	write		52250						
ANR	53098	Symbol	SELECT_ONE_READ		52250						
ANR	53099	Symbol	ARRAY_SIZE		52250						
ANR	53100	Symbol	errno		52250						
ANR	53101	Symbol	read		52250						
ANR	53102	Symbol	NULL		52250						
ANR	53103	Symbol	* env		52250						
ANR	53104	Symbol	fdset		52250						
ANR	53105	Symbol	cpu_get_phys_page_debug		52250						
ANR	53106	Symbol	TARGET_PAGE_SIZE		52250						
ANR	53107	Symbol	is_write		52250						
ANR	53108	Symbol	& tv		52250						
ANR	53109	Symbol	& sz		52250						
ANR	53110	Symbol	rc		52250						
ANR	53111	Symbol	* regs		52250						
ANR	53112	Symbol	paddr		52250						
ANR	53113	Symbol	SELECT_ONE_WRITE		52250						
ANR	53114	Symbol	__func__		52250						
ANR	53115	Symbol	name		52250						
ANR	53116	Symbol	cpu_physical_memory_map		52250						
ANR	53117	Symbol	& len		52250						
ANR	53118	Symbol	fd		52250						
ANR	53119	Symbol	rq		52250						
ANR	53120	Symbol	tv . tv_sec		52250						
ANR	53121	Symbol	lseek		52250						
ANR	53122	Symbol	SELECT_ONE_EXCEPT		52250						
ANR	53123	Symbol	vaddr		52250						
ANR	53124	Symbol	argv		52250						
ANR	53125	Symbol	& argv		52250						
ANR	53126	Symbol	io_sz		52250						
ANR	53127	Symbol	close		52250						
ANR	53128	Symbol	* name		52250						
ANR	53129	Symbol	tv . tv_usec		52250						
ANR	53130	Symbol	sz		52250						
ANR	53131	Symbol	i		52250						
ANR	53132	Symbol	regs		52250						
ANR	53133	Symbol	env		52250						
ANR	53134	Symbol	tswap32		52250						
ANR	53135	Symbol	EINVAL		52250						
ANR	53136	Symbol	buf		52250						
ANR	53137	Symbol	* i		52250						
ANR	53138	Symbol	* target_tvv		52250						
ANR	53139	Symbol	open		52250						
ANR	53140	Symbol	& fdset		52250						
ANR	53141	Symbol	base		52250						
