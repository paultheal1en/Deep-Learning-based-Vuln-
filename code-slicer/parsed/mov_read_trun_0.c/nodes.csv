command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5633588	File	/home/p4ultr4n/workplace/ReVeal/raw_code/mov_read_trun_0.c								
ANR	5633589	Function	mov_read_trun	1:0:0:2702							
ANR	5633590	FunctionDef	"mov_read_trun (MOVContext * c , ByteIOContext * pb , MOV_atom_t atom)"		5633589	0					
ANR	5633591	CompoundStatement		3:0:77:2702	5633589	0					
ANR	5633592	IdentifierDeclStatement	MOVFragment * frag = & c -> fragment ;	5:4:84:116	5633589	0	True				
ANR	5633593	IdentifierDecl	* frag = & c -> fragment		5633589	0					
ANR	5633594	IdentifierDeclType	MOVFragment *		5633589	0					
ANR	5633595	Identifier	frag		5633589	1					
ANR	5633596	AssignmentExpression	* frag = & c -> fragment		5633589	2		=			
ANR	5633597	Identifier	frag		5633589	0					
ANR	5633598	UnaryOperationExpression	& c -> fragment		5633589	1					
ANR	5633599	UnaryOperator	&		5633589	0					
ANR	5633600	PtrMemberAccess	c -> fragment		5633589	1					
ANR	5633601	Identifier	c		5633589	0					
ANR	5633602	Identifier	fragment		5633589	1					
ANR	5633603	IdentifierDeclStatement	AVStream * st = c -> fc -> streams [ frag -> track_id - 1 ] ;	7:4:123:170	5633589	1	True				
ANR	5633604	IdentifierDecl	* st = c -> fc -> streams [ frag -> track_id - 1 ]		5633589	0					
ANR	5633605	IdentifierDeclType	AVStream *		5633589	0					
ANR	5633606	Identifier	st		5633589	1					
ANR	5633607	AssignmentExpression	* st = c -> fc -> streams [ frag -> track_id - 1 ]		5633589	2		=			
ANR	5633608	Identifier	st		5633589	0					
ANR	5633609	ArrayIndexing	c -> fc -> streams [ frag -> track_id - 1 ]		5633589	1					
ANR	5633610	PtrMemberAccess	c -> fc -> streams		5633589	0					
ANR	5633611	PtrMemberAccess	c -> fc		5633589	0					
ANR	5633612	Identifier	c		5633589	0					
ANR	5633613	Identifier	fc		5633589	1					
ANR	5633614	Identifier	streams		5633589	1					
ANR	5633615	AdditiveExpression	frag -> track_id - 1		5633589	1		-			
ANR	5633616	PtrMemberAccess	frag -> track_id		5633589	0					
ANR	5633617	Identifier	frag		5633589	0					
ANR	5633618	Identifier	track_id		5633589	1					
ANR	5633619	PrimaryExpression	1		5633589	1					
ANR	5633620	IdentifierDeclStatement	MOVStreamContext * sc = st -> priv_data ;	9:4:177:213	5633589	2	True				
ANR	5633621	IdentifierDecl	* sc = st -> priv_data		5633589	0					
ANR	5633622	IdentifierDeclType	MOVStreamContext *		5633589	0					
ANR	5633623	Identifier	sc		5633589	1					
ANR	5633624	AssignmentExpression	* sc = st -> priv_data		5633589	2		=			
ANR	5633625	Identifier	sc		5633589	0					
ANR	5633626	PtrMemberAccess	st -> priv_data		5633589	1					
ANR	5633627	Identifier	st		5633589	0					
ANR	5633628	Identifier	priv_data		5633589	1					
ANR	5633629	IdentifierDeclStatement	uint64_t offset ;	11:4:220:235	5633589	3	True				
ANR	5633630	IdentifierDecl	offset		5633589	0					
ANR	5633631	IdentifierDeclType	uint64_t		5633589	0					
ANR	5633632	Identifier	offset		5633589	1					
ANR	5633633	IdentifierDeclStatement	int64_t dts ;	13:4:242:253	5633589	4	True				
ANR	5633634	IdentifierDecl	dts		5633589	0					
ANR	5633635	IdentifierDeclType	int64_t		5633589	0					
ANR	5633636	Identifier	dts		5633589	1					
ANR	5633637	IdentifierDeclStatement	int data_offset = 0 ;	15:4:260:279	5633589	5	True				
ANR	5633638	IdentifierDecl	data_offset = 0		5633589	0					
ANR	5633639	IdentifierDeclType	int		5633589	0					
ANR	5633640	Identifier	data_offset		5633589	1					
ANR	5633641	AssignmentExpression	data_offset = 0		5633589	2		=			
ANR	5633642	Identifier	data_offset		5633589	0					
ANR	5633643	PrimaryExpression	0		5633589	1					
ANR	5633644	IdentifierDeclStatement	"unsigned entries , first_sample_flags = frag -> flags ;"	17:4:286:336	5633589	6	True				
ANR	5633645	IdentifierDecl	entries		5633589	0					
ANR	5633646	IdentifierDeclType	unsigned		5633589	0					
ANR	5633647	Identifier	entries		5633589	1					
ANR	5633648	IdentifierDecl	first_sample_flags = frag -> flags		5633589	1					
ANR	5633649	IdentifierDeclType	unsigned		5633589	0					
ANR	5633650	Identifier	first_sample_flags		5633589	1					
ANR	5633651	AssignmentExpression	first_sample_flags = frag -> flags		5633589	2		=			
ANR	5633652	Identifier	first_sample_flags		5633589	0					
ANR	5633653	PtrMemberAccess	frag -> flags		5633589	1					
ANR	5633654	Identifier	frag		5633589	0					
ANR	5633655	Identifier	flags		5633589	1					
ANR	5633656	IdentifierDeclStatement	"int flags , distance , i ;"	19:4:343:365	5633589	7	True				
ANR	5633657	IdentifierDecl	flags		5633589	0					
ANR	5633658	IdentifierDeclType	int		5633589	0					
ANR	5633659	Identifier	flags		5633589	1					
ANR	5633660	IdentifierDecl	distance		5633589	1					
ANR	5633661	IdentifierDeclType	int		5633589	0					
ANR	5633662	Identifier	distance		5633589	1					
ANR	5633663	IdentifierDecl	i		5633589	2					
ANR	5633664	IdentifierDeclType	int		5633589	0					
ANR	5633665	Identifier	i		5633589	1					
ANR	5633666	IfStatement	if ( sc -> pseudo_stream_id + 1 != frag -> stsd_id )		5633589	8					
ANR	5633667	Condition	sc -> pseudo_stream_id + 1 != frag -> stsd_id	23:8:378:416	5633589	0	True				
ANR	5633668	EqualityExpression	sc -> pseudo_stream_id + 1 != frag -> stsd_id		5633589	0		!=			
ANR	5633669	AdditiveExpression	sc -> pseudo_stream_id + 1		5633589	0		+			
ANR	5633670	PtrMemberAccess	sc -> pseudo_stream_id		5633589	0					
ANR	5633671	Identifier	sc		5633589	0					
ANR	5633672	Identifier	pseudo_stream_id		5633589	1					
ANR	5633673	PrimaryExpression	1		5633589	1					
ANR	5633674	PtrMemberAccess	frag -> stsd_id		5633589	1					
ANR	5633675	Identifier	frag		5633589	0					
ANR	5633676	Identifier	stsd_id		5633589	1					
ANR	5633677	ReturnStatement	return 0 ;	25:8:428:436	5633589	1	True				
ANR	5633678	PrimaryExpression	0		5633589	0					
ANR	5633679	IfStatement	if ( ! st -> nb_index_entries )		5633589	9					
ANR	5633680	Condition	! st -> nb_index_entries	27:8:447:467	5633589	0	True				
ANR	5633681	UnaryOperationExpression	! st -> nb_index_entries		5633589	0					
ANR	5633682	UnaryOperator	!		5633589	0					
ANR	5633683	PtrMemberAccess	st -> nb_index_entries		5633589	1					
ANR	5633684	Identifier	st		5633589	0					
ANR	5633685	Identifier	nb_index_entries		5633589	1					
ANR	5633686	ReturnStatement	return - 1 ;	29:8:479:488	5633589	1	True				
ANR	5633687	UnaryOperationExpression	- 1		5633589	0					
ANR	5633688	UnaryOperator	-		5633589	0					
ANR	5633689	PrimaryExpression	1		5633589	1					
ANR	5633690	ExpressionStatement	get_byte ( pb )	31:4:495:507	5633589	10	True				
ANR	5633691	CallExpression	get_byte ( pb )		5633589	0					
ANR	5633692	Callee	get_byte		5633589	0					
ANR	5633693	Identifier	get_byte		5633589	0					
ANR	5633694	ArgumentList	pb		5633589	1					
ANR	5633695	Argument	pb		5633589	0					
ANR	5633696	Identifier	pb		5633589	0					
ANR	5633697	ExpressionStatement	flags = get_be24 ( pb )	33:4:528:548	5633589	11	True				
ANR	5633698	AssignmentExpression	flags = get_be24 ( pb )		5633589	0		=			
ANR	5633699	Identifier	flags		5633589	0					
ANR	5633700	CallExpression	get_be24 ( pb )		5633589	1					
ANR	5633701	Callee	get_be24		5633589	0					
ANR	5633702	Identifier	get_be24		5633589	0					
ANR	5633703	ArgumentList	pb		5633589	1					
ANR	5633704	Argument	pb		5633589	0					
ANR	5633705	Identifier	pb		5633589	0					
ANR	5633706	ExpressionStatement	entries = get_be32 ( pb )	35:4:555:577	5633589	12	True				
ANR	5633707	AssignmentExpression	entries = get_be32 ( pb )		5633589	0		=			
ANR	5633708	Identifier	entries		5633589	0					
ANR	5633709	CallExpression	get_be32 ( pb )		5633589	1					
ANR	5633710	Callee	get_be32		5633589	0					
ANR	5633711	Identifier	get_be32		5633589	0					
ANR	5633712	ArgumentList	pb		5633589	1					
ANR	5633713	Argument	pb		5633589	0					
ANR	5633714	Identifier	pb		5633589	0					
ANR	5633715	ExpressionStatement	"dprintf ( c -> fc , ""flags 0x%x entries %d\\n"" , flags , entries )"	37:4:584:641	5633589	13	True				
ANR	5633716	CallExpression	"dprintf ( c -> fc , ""flags 0x%x entries %d\\n"" , flags , entries )"		5633589	0					
ANR	5633717	Callee	dprintf		5633589	0					
ANR	5633718	Identifier	dprintf		5633589	0					
ANR	5633719	ArgumentList	c -> fc		5633589	1					
ANR	5633720	Argument	c -> fc		5633589	0					
ANR	5633721	PtrMemberAccess	c -> fc		5633589	0					
ANR	5633722	Identifier	c		5633589	0					
ANR	5633723	Identifier	fc		5633589	1					
ANR	5633724	Argument	"""flags 0x%x entries %d\\n"""		5633589	1					
ANR	5633725	PrimaryExpression	"""flags 0x%x entries %d\\n"""		5633589	0					
ANR	5633726	Argument	flags		5633589	2					
ANR	5633727	Identifier	flags		5633589	0					
ANR	5633728	Argument	entries		5633589	3					
ANR	5633729	Identifier	entries		5633589	0					
ANR	5633730	IfStatement	if ( flags & 0x001 )		5633589	14					
ANR	5633731	Condition	flags & 0x001	39:8:652:664	5633589	0	True				
ANR	5633732	BitAndExpression	flags & 0x001		5633589	0		&			
ANR	5633733	Identifier	flags		5633589	0					
ANR	5633734	PrimaryExpression	0x001		5633589	1					
ANR	5633735	ExpressionStatement	data_offset = get_be32 ( pb )	39:23:667:700	5633589	1	True				
ANR	5633736	AssignmentExpression	data_offset = get_be32 ( pb )		5633589	0		=			
ANR	5633737	Identifier	data_offset		5633589	0					
ANR	5633738	CallExpression	get_be32 ( pb )		5633589	1					
ANR	5633739	Callee	get_be32		5633589	0					
ANR	5633740	Identifier	get_be32		5633589	0					
ANR	5633741	ArgumentList	pb		5633589	1					
ANR	5633742	Argument	pb		5633589	0					
ANR	5633743	Identifier	pb		5633589	0					
ANR	5633744	IfStatement	if ( flags & 0x004 )		5633589	15					
ANR	5633745	Condition	flags & 0x004	41:8:711:723	5633589	0	True				
ANR	5633746	BitAndExpression	flags & 0x004		5633589	0		&			
ANR	5633747	Identifier	flags		5633589	0					
ANR	5633748	PrimaryExpression	0x004		5633589	1					
ANR	5633749	ExpressionStatement	first_sample_flags = get_be32 ( pb )	41:23:726:759	5633589	1	True				
ANR	5633750	AssignmentExpression	first_sample_flags = get_be32 ( pb )		5633589	0		=			
ANR	5633751	Identifier	first_sample_flags		5633589	0					
ANR	5633752	CallExpression	get_be32 ( pb )		5633589	1					
ANR	5633753	Callee	get_be32		5633589	0					
ANR	5633754	Identifier	get_be32		5633589	0					
ANR	5633755	ArgumentList	pb		5633589	1					
ANR	5633756	Argument	pb		5633589	0					
ANR	5633757	Identifier	pb		5633589	0					
ANR	5633758	IfStatement	if ( flags & 0x800 )		5633589	16					
ANR	5633759	Condition	flags & 0x800	43:8:770:782	5633589	0	True				
ANR	5633760	BitAndExpression	flags & 0x800		5633589	0		&			
ANR	5633761	Identifier	flags		5633589	0					
ANR	5633762	PrimaryExpression	0x800		5633589	1					
ANR	5633763	CompoundStatement		41:23:707:707	5633589	1					
ANR	5633764	IfStatement	if ( ( uint64_t ) entries + sc -> ctts_count >= UINT_MAX / sizeof ( * sc -> ctts_data ) )		5633589	0					
ANR	5633765	Condition	( uint64_t ) entries + sc -> ctts_count >= UINT_MAX / sizeof ( * sc -> ctts_data )	45:12:800:866	5633589	0	True				
ANR	5633766	RelationalExpression	( uint64_t ) entries + sc -> ctts_count >= UINT_MAX / sizeof ( * sc -> ctts_data )		5633589	0		>=			
ANR	5633767	AdditiveExpression	( uint64_t ) entries + sc -> ctts_count		5633589	0		+			
ANR	5633768	CastExpression	( uint64_t ) entries		5633589	0					
ANR	5633769	CastTarget	uint64_t		5633589	0					
ANR	5633770	Identifier	entries		5633589	1					
ANR	5633771	PtrMemberAccess	sc -> ctts_count		5633589	1					
ANR	5633772	Identifier	sc		5633589	0					
ANR	5633773	Identifier	ctts_count		5633589	1					
ANR	5633774	MultiplicativeExpression	UINT_MAX / sizeof ( * sc -> ctts_data )		5633589	1		/			
ANR	5633775	Identifier	UINT_MAX		5633589	0					
ANR	5633776	SizeofExpression	sizeof ( * sc -> ctts_data )		5633589	1					
ANR	5633777	Sizeof	sizeof		5633589	0					
ANR	5633778	UnaryOperationExpression	* sc -> ctts_data		5633589	1					
ANR	5633779	UnaryOperator	*		5633589	0					
ANR	5633780	PtrMemberAccess	sc -> ctts_data		5633589	1					
ANR	5633781	Identifier	sc		5633589	0					
ANR	5633782	Identifier	ctts_data		5633589	1					
ANR	5633783	ReturnStatement	return - 1 ;	47:12:882:891	5633589	1	True				
ANR	5633784	UnaryOperationExpression	- 1		5633589	0					
ANR	5633785	UnaryOperator	-		5633589	0					
ANR	5633786	PrimaryExpression	1		5633589	1					
ANR	5633787	ExpressionStatement	"sc -> ctts_data = av_realloc ( sc -> ctts_data , ( entries + sc -> ctts_count ) * sizeof ( * sc -> ctts_data ) )"	49:8:902:1028	5633589	1	True				
ANR	5633788	AssignmentExpression	"sc -> ctts_data = av_realloc ( sc -> ctts_data , ( entries + sc -> ctts_count ) * sizeof ( * sc -> ctts_data ) )"		5633589	0		=			
ANR	5633789	PtrMemberAccess	sc -> ctts_data		5633589	0					
ANR	5633790	Identifier	sc		5633589	0					
ANR	5633791	Identifier	ctts_data		5633589	1					
ANR	5633792	CallExpression	"av_realloc ( sc -> ctts_data , ( entries + sc -> ctts_count ) * sizeof ( * sc -> ctts_data ) )"		5633589	1					
ANR	5633793	Callee	av_realloc		5633589	0					
ANR	5633794	Identifier	av_realloc		5633589	0					
ANR	5633795	ArgumentList	sc -> ctts_data		5633589	1					
ANR	5633796	Argument	sc -> ctts_data		5633589	0					
ANR	5633797	PtrMemberAccess	sc -> ctts_data		5633589	0					
ANR	5633798	Identifier	sc		5633589	0					
ANR	5633799	Identifier	ctts_data		5633589	1					
ANR	5633800	Argument	( entries + sc -> ctts_count ) * sizeof ( * sc -> ctts_data )		5633589	1					
ANR	5633801	MultiplicativeExpression	( entries + sc -> ctts_count ) * sizeof ( * sc -> ctts_data )		5633589	0		*			
ANR	5633802	AdditiveExpression	entries + sc -> ctts_count		5633589	0		+			
ANR	5633803	Identifier	entries		5633589	0					
ANR	5633804	PtrMemberAccess	sc -> ctts_count		5633589	1					
ANR	5633805	Identifier	sc		5633589	0					
ANR	5633806	Identifier	ctts_count		5633589	1					
ANR	5633807	SizeofExpression	sizeof ( * sc -> ctts_data )		5633589	1					
ANR	5633808	Sizeof	sizeof		5633589	0					
ANR	5633809	UnaryOperationExpression	* sc -> ctts_data		5633589	1					
ANR	5633810	UnaryOperator	*		5633589	0					
ANR	5633811	PtrMemberAccess	sc -> ctts_data		5633589	1					
ANR	5633812	Identifier	sc		5633589	0					
ANR	5633813	Identifier	ctts_data		5633589	1					
ANR	5633814	IfStatement	if ( ! sc -> ctts_data )		5633589	2					
ANR	5633815	Condition	! sc -> ctts_data	53:12:1043:1056	5633589	0	True				
ANR	5633816	UnaryOperationExpression	! sc -> ctts_data		5633589	0					
ANR	5633817	UnaryOperator	!		5633589	0					
ANR	5633818	PtrMemberAccess	sc -> ctts_data		5633589	1					
ANR	5633819	Identifier	sc		5633589	0					
ANR	5633820	Identifier	ctts_data		5633589	1					
ANR	5633821	ReturnStatement	return AVERROR ( ENOMEM ) ;	55:12:1072:1094	5633589	1	True				
ANR	5633822	CallExpression	AVERROR ( ENOMEM )		5633589	0					
ANR	5633823	Callee	AVERROR		5633589	0					
ANR	5633824	Identifier	AVERROR		5633589	0					
ANR	5633825	ArgumentList	ENOMEM		5633589	1					
ANR	5633826	Argument	ENOMEM		5633589	0					
ANR	5633827	Identifier	ENOMEM		5633589	0					
ANR	5633828	ExpressionStatement	dts = st -> duration	59:4:1108:1126	5633589	17	True				
ANR	5633829	AssignmentExpression	dts = st -> duration		5633589	0		=			
ANR	5633830	Identifier	dts		5633589	0					
ANR	5633831	PtrMemberAccess	st -> duration		5633589	1					
ANR	5633832	Identifier	st		5633589	0					
ANR	5633833	Identifier	duration		5633589	1					
ANR	5633834	ExpressionStatement	offset = frag -> base_data_offset + data_offset	61:4:1133:1178	5633589	18	True				
ANR	5633835	AssignmentExpression	offset = frag -> base_data_offset + data_offset		5633589	0		=			
ANR	5633836	Identifier	offset		5633589	0					
ANR	5633837	AdditiveExpression	frag -> base_data_offset + data_offset		5633589	1		+			
ANR	5633838	PtrMemberAccess	frag -> base_data_offset		5633589	0					
ANR	5633839	Identifier	frag		5633589	0					
ANR	5633840	Identifier	base_data_offset		5633589	1					
ANR	5633841	Identifier	data_offset		5633589	1					
ANR	5633842	ExpressionStatement	distance = 0	63:4:1185:1197	5633589	19	True				
ANR	5633843	AssignmentExpression	distance = 0		5633589	0		=			
ANR	5633844	Identifier	distance		5633589	0					
ANR	5633845	PrimaryExpression	0		5633589	1					
ANR	5633846	ExpressionStatement	"dprintf ( c -> fc , ""first sample flags 0x%x\\n"" , first_sample_flags )"	65:4:1204:1267	5633589	20	True				
ANR	5633847	CallExpression	"dprintf ( c -> fc , ""first sample flags 0x%x\\n"" , first_sample_flags )"		5633589	0					
ANR	5633848	Callee	dprintf		5633589	0					
ANR	5633849	Identifier	dprintf		5633589	0					
ANR	5633850	ArgumentList	c -> fc		5633589	1					
ANR	5633851	Argument	c -> fc		5633589	0					
ANR	5633852	PtrMemberAccess	c -> fc		5633589	0					
ANR	5633853	Identifier	c		5633589	0					
ANR	5633854	Identifier	fc		5633589	1					
ANR	5633855	Argument	"""first sample flags 0x%x\\n"""		5633589	1					
ANR	5633856	PrimaryExpression	"""first sample flags 0x%x\\n"""		5633589	0					
ANR	5633857	Argument	first_sample_flags		5633589	2					
ANR	5633858	Identifier	first_sample_flags		5633589	0					
ANR	5633859	ForStatement	for ( i = 0 ; i < entries ; i ++ )		5633589	21					
ANR	5633860	ForInit	i = 0 ;	67:9:1279:1284	5633589	0	True				
ANR	5633861	AssignmentExpression	i = 0		5633589	0		=			
ANR	5633862	Identifier	i		5633589	0					
ANR	5633863	PrimaryExpression	0		5633589	1					
ANR	5633864	Condition	i < entries	67:16:1286:1296	5633589	1	True				
ANR	5633865	RelationalExpression	i < entries		5633589	0		<			
ANR	5633866	Identifier	i		5633589	0					
ANR	5633867	Identifier	entries		5633589	1					
ANR	5633868	PostIncDecOperationExpression	i ++	67:29:1299:1301	5633589	2	True				
ANR	5633869	Identifier	i		5633589	0					
ANR	5633870	IncDec	++		5633589	1					
ANR	5633871	CompoundStatement		73:8:1399:1411	5633589	3					
ANR	5633872	IdentifierDeclStatement	unsigned sample_size = frag -> size ;	69:8:1315:1348	5633589	0	True				
ANR	5633873	IdentifierDecl	sample_size = frag -> size		5633589	0					
ANR	5633874	IdentifierDeclType	unsigned		5633589	0					
ANR	5633875	Identifier	sample_size		5633589	1					
ANR	5633876	AssignmentExpression	sample_size = frag -> size		5633589	2		=			
ANR	5633877	Identifier	sample_size		5633589	0					
ANR	5633878	PtrMemberAccess	frag -> size		5633589	1					
ANR	5633879	Identifier	frag		5633589	0					
ANR	5633880	Identifier	size		5633589	1					
ANR	5633881	IdentifierDeclStatement	int sample_flags = i ? frag -> flags : first_sample_flags ;	71:8:1359:1414	5633589	1	True				
ANR	5633882	IdentifierDecl	sample_flags = i ? frag -> flags : first_sample_flags		5633589	0					
ANR	5633883	IdentifierDeclType	int		5633589	0					
ANR	5633884	Identifier	sample_flags		5633589	1					
ANR	5633885	AssignmentExpression	sample_flags = i ? frag -> flags : first_sample_flags		5633589	2		=			
ANR	5633886	Identifier	sample_flags		5633589	0					
ANR	5633887	ConditionalExpression	i ? frag -> flags : first_sample_flags		5633589	1					
ANR	5633888	Condition	i		5633589	0					
ANR	5633889	Identifier	i		5633589	0					
ANR	5633890	PtrMemberAccess	frag -> flags		5633589	1					
ANR	5633891	Identifier	frag		5633589	0					
ANR	5633892	Identifier	flags		5633589	1					
ANR	5633893	Identifier	first_sample_flags		5633589	2					
ANR	5633894	IdentifierDeclStatement	unsigned sample_duration = frag -> duration ;	73:8:1425:1466	5633589	2	True				
ANR	5633895	IdentifierDecl	sample_duration = frag -> duration		5633589	0					
ANR	5633896	IdentifierDeclType	unsigned		5633589	0					
ANR	5633897	Identifier	sample_duration		5633589	1					
ANR	5633898	AssignmentExpression	sample_duration = frag -> duration		5633589	2		=			
ANR	5633899	Identifier	sample_duration		5633589	0					
ANR	5633900	PtrMemberAccess	frag -> duration		5633589	1					
ANR	5633901	Identifier	frag		5633589	0					
ANR	5633902	Identifier	duration		5633589	1					
ANR	5633903	IdentifierDeclStatement	int keyframe ;	75:8:1477:1489	5633589	3	True				
ANR	5633904	IdentifierDecl	keyframe		5633589	0					
ANR	5633905	IdentifierDeclType	int		5633589	0					
ANR	5633906	Identifier	keyframe		5633589	1					
ANR	5633907	IfStatement	if ( flags & 0x100 )		5633589	4					
ANR	5633908	Condition	flags & 0x100	79:12:1506:1518	5633589	0	True				
ANR	5633909	BitAndExpression	flags & 0x100		5633589	0		&			
ANR	5633910	Identifier	flags		5633589	0					
ANR	5633911	PrimaryExpression	0x100		5633589	1					
ANR	5633912	ExpressionStatement	sample_duration = get_be32 ( pb )	79:27:1521:1551	5633589	1	True				
ANR	5633913	AssignmentExpression	sample_duration = get_be32 ( pb )		5633589	0		=			
ANR	5633914	Identifier	sample_duration		5633589	0					
ANR	5633915	CallExpression	get_be32 ( pb )		5633589	1					
ANR	5633916	Callee	get_be32		5633589	0					
ANR	5633917	Identifier	get_be32		5633589	0					
ANR	5633918	ArgumentList	pb		5633589	1					
ANR	5633919	Argument	pb		5633589	0					
ANR	5633920	Identifier	pb		5633589	0					
ANR	5633921	IfStatement	if ( flags & 0x200 )		5633589	5					
ANR	5633922	Condition	flags & 0x200	81:12:1566:1578	5633589	0	True				
ANR	5633923	BitAndExpression	flags & 0x200		5633589	0		&			
ANR	5633924	Identifier	flags		5633589	0					
ANR	5633925	PrimaryExpression	0x200		5633589	1					
ANR	5633926	ExpressionStatement	sample_size = get_be32 ( pb )	81:27:1581:1611	5633589	1	True				
ANR	5633927	AssignmentExpression	sample_size = get_be32 ( pb )		5633589	0		=			
ANR	5633928	Identifier	sample_size		5633589	0					
ANR	5633929	CallExpression	get_be32 ( pb )		5633589	1					
ANR	5633930	Callee	get_be32		5633589	0					
ANR	5633931	Identifier	get_be32		5633589	0					
ANR	5633932	ArgumentList	pb		5633589	1					
ANR	5633933	Argument	pb		5633589	0					
ANR	5633934	Identifier	pb		5633589	0					
ANR	5633935	IfStatement	if ( flags & 0x400 )		5633589	6					
ANR	5633936	Condition	flags & 0x400	83:12:1626:1638	5633589	0	True				
ANR	5633937	BitAndExpression	flags & 0x400		5633589	0		&			
ANR	5633938	Identifier	flags		5633589	0					
ANR	5633939	PrimaryExpression	0x400		5633589	1					
ANR	5633940	ExpressionStatement	sample_flags = get_be32 ( pb )	83:27:1641:1671	5633589	1	True				
ANR	5633941	AssignmentExpression	sample_flags = get_be32 ( pb )		5633589	0		=			
ANR	5633942	Identifier	sample_flags		5633589	0					
ANR	5633943	CallExpression	get_be32 ( pb )		5633589	1					
ANR	5633944	Callee	get_be32		5633589	0					
ANR	5633945	Identifier	get_be32		5633589	0					
ANR	5633946	ArgumentList	pb		5633589	1					
ANR	5633947	Argument	pb		5633589	0					
ANR	5633948	Identifier	pb		5633589	0					
ANR	5633949	IfStatement	if ( flags & 0x800 )		5633589	7					
ANR	5633950	Condition	flags & 0x800	85:12:1686:1698	5633589	0	True				
ANR	5633951	BitAndExpression	flags & 0x800		5633589	0		&			
ANR	5633952	Identifier	flags		5633589	0					
ANR	5633953	PrimaryExpression	0x800		5633589	1					
ANR	5633954	CompoundStatement		83:27:1623:1623	5633589	1					
ANR	5633955	ExpressionStatement	sc -> ctts_data [ sc -> ctts_count ] . count = 1	87:12:1716:1755	5633589	0	True				
ANR	5633956	AssignmentExpression	sc -> ctts_data [ sc -> ctts_count ] . count = 1		5633589	0		=			
ANR	5633957	MemberAccess	sc -> ctts_data [ sc -> ctts_count ] . count		5633589	0					
ANR	5633958	ArrayIndexing	sc -> ctts_data [ sc -> ctts_count ]		5633589	0					
ANR	5633959	PtrMemberAccess	sc -> ctts_data		5633589	0					
ANR	5633960	Identifier	sc		5633589	0					
ANR	5633961	Identifier	ctts_data		5633589	1					
ANR	5633962	PtrMemberAccess	sc -> ctts_count		5633589	1					
ANR	5633963	Identifier	sc		5633589	0					
ANR	5633964	Identifier	ctts_count		5633589	1					
ANR	5633965	Identifier	count		5633589	1					
ANR	5633966	PrimaryExpression	1		5633589	1					
ANR	5633967	ExpressionStatement	sc -> ctts_data [ sc -> ctts_count ] . duration = get_be32 ( pb )	89:12:1770:1823	5633589	1	True				
ANR	5633968	AssignmentExpression	sc -> ctts_data [ sc -> ctts_count ] . duration = get_be32 ( pb )		5633589	0		=			
ANR	5633969	MemberAccess	sc -> ctts_data [ sc -> ctts_count ] . duration		5633589	0					
ANR	5633970	ArrayIndexing	sc -> ctts_data [ sc -> ctts_count ]		5633589	0					
ANR	5633971	PtrMemberAccess	sc -> ctts_data		5633589	0					
ANR	5633972	Identifier	sc		5633589	0					
ANR	5633973	Identifier	ctts_data		5633589	1					
ANR	5633974	PtrMemberAccess	sc -> ctts_count		5633589	1					
ANR	5633975	Identifier	sc		5633589	0					
ANR	5633976	Identifier	ctts_count		5633589	1					
ANR	5633977	Identifier	duration		5633589	1					
ANR	5633978	CallExpression	get_be32 ( pb )		5633589	1					
ANR	5633979	Callee	get_be32		5633589	0					
ANR	5633980	Identifier	get_be32		5633589	0					
ANR	5633981	ArgumentList	pb		5633589	1					
ANR	5633982	Argument	pb		5633589	0					
ANR	5633983	Identifier	pb		5633589	0					
ANR	5633984	ExpressionStatement	sc -> ctts_count ++	91:12:1838:1854	5633589	2	True				
ANR	5633985	PostIncDecOperationExpression	sc -> ctts_count ++		5633589	0					
ANR	5633986	PtrMemberAccess	sc -> ctts_count		5633589	0					
ANR	5633987	Identifier	sc		5633589	0					
ANR	5633988	Identifier	ctts_count		5633589	1					
ANR	5633989	IncDec	++		5633589	1					
ANR	5633990	IfStatement	if ( ( keyframe = st -> codec -> codec_type == CODEC_TYPE_AUDIO || ( flags & 0x004 && ! i && ! sample_flags ) || sample_flags & 0x2000000 ) )		5633589	8					
ANR	5633991	Condition	keyframe = st -> codec -> codec_type == CODEC_TYPE_AUDIO || ( flags & 0x004 && ! i && ! sample_flags ) || sample_flags & 0x2000000	95:12:1880:2017	5633589	0	True				
ANR	5633992	AssignmentExpression	keyframe = st -> codec -> codec_type == CODEC_TYPE_AUDIO || ( flags & 0x004 && ! i && ! sample_flags ) || sample_flags & 0x2000000		5633589	0		=			
ANR	5633993	Identifier	keyframe		5633589	0					
ANR	5633994	OrExpression	st -> codec -> codec_type == CODEC_TYPE_AUDIO || ( flags & 0x004 && ! i && ! sample_flags ) || sample_flags & 0x2000000		5633589	1		||			
ANR	5633995	EqualityExpression	st -> codec -> codec_type == CODEC_TYPE_AUDIO		5633589	0		==			
ANR	5633996	PtrMemberAccess	st -> codec -> codec_type		5633589	0					
ANR	5633997	PtrMemberAccess	st -> codec		5633589	0					
ANR	5633998	Identifier	st		5633589	0					
ANR	5633999	Identifier	codec		5633589	1					
ANR	5634000	Identifier	codec_type		5633589	1					
ANR	5634001	Identifier	CODEC_TYPE_AUDIO		5633589	1					
ANR	5634002	OrExpression	( flags & 0x004 && ! i && ! sample_flags ) || sample_flags & 0x2000000		5633589	1		||			
ANR	5634003	AndExpression	flags & 0x004 && ! i && ! sample_flags		5633589	0		&&			
ANR	5634004	BitAndExpression	flags & 0x004		5633589	0		&			
ANR	5634005	Identifier	flags		5633589	0					
ANR	5634006	PrimaryExpression	0x004		5633589	1					
ANR	5634007	AndExpression	! i && ! sample_flags		5633589	1		&&			
ANR	5634008	UnaryOperationExpression	! i		5633589	0					
ANR	5634009	UnaryOperator	!		5633589	0					
ANR	5634010	Identifier	i		5633589	1					
ANR	5634011	UnaryOperationExpression	! sample_flags		5633589	1					
ANR	5634012	UnaryOperator	!		5633589	0					
ANR	5634013	Identifier	sample_flags		5633589	1					
ANR	5634014	BitAndExpression	sample_flags & 0x2000000		5633589	1		&			
ANR	5634015	Identifier	sample_flags		5633589	0					
ANR	5634016	PrimaryExpression	0x2000000		5633589	1					
ANR	5634017	ExpressionStatement	distance = 0	99:12:2033:2045	5633589	1	True				
ANR	5634018	AssignmentExpression	distance = 0		5633589	0		=			
ANR	5634019	Identifier	distance		5633589	0					
ANR	5634020	PrimaryExpression	0		5633589	1					
ANR	5634021	ExpressionStatement	"av_add_index_entry ( st , offset , dts , sample_size , distance , keyframe ? AVINDEX_KEYFRAME : 0 )"	101:8:2056:2175	5633589	9	True				
ANR	5634022	CallExpression	"av_add_index_entry ( st , offset , dts , sample_size , distance , keyframe ? AVINDEX_KEYFRAME : 0 )"		5633589	0					
ANR	5634023	Callee	av_add_index_entry		5633589	0					
ANR	5634024	Identifier	av_add_index_entry		5633589	0					
ANR	5634025	ArgumentList	st		5633589	1					
ANR	5634026	Argument	st		5633589	0					
ANR	5634027	Identifier	st		5633589	0					
ANR	5634028	Argument	offset		5633589	1					
ANR	5634029	Identifier	offset		5633589	0					
ANR	5634030	Argument	dts		5633589	2					
ANR	5634031	Identifier	dts		5633589	0					
ANR	5634032	Argument	sample_size		5633589	3					
ANR	5634033	Identifier	sample_size		5633589	0					
ANR	5634034	Argument	distance		5633589	4					
ANR	5634035	Identifier	distance		5633589	0					
ANR	5634036	Argument	keyframe ? AVINDEX_KEYFRAME : 0		5633589	5					
ANR	5634037	ConditionalExpression	keyframe ? AVINDEX_KEYFRAME : 0		5633589	0					
ANR	5634038	Condition	keyframe		5633589	0					
ANR	5634039	Identifier	keyframe		5633589	0					
ANR	5634040	Identifier	AVINDEX_KEYFRAME		5633589	1					
ANR	5634041	PrimaryExpression	0		5633589	2					
ANR	5634042	Statement	dprintf	105:8:2186:2192	5633589	10	True				
ANR	5634043	Statement	(	105:15:2193:2193	5633589	11	True				
ANR	5634044	Statement	c	105:16:2194:2194	5633589	12	True				
ANR	5634045	Statement	->	105:17:2195:2196	5633589	13	True				
ANR	5634046	Statement	fc	105:19:2197:2198	5633589	14	True				
ANR	5634047	Statement	","	105:21:2199:2199	5633589	15	True				
ANR	5634048	Statement	"""AVIndex stream %d, sample %d, offset %"""	105:23:2201:2240	5633589	16	True				
ANR	5634049	Statement	PRIx64	105:63:2241:2246	5633589	17	True				
ANR	5634050	Statement	""", dts %"""	105:69:2247:2255	5633589	18	True				
ANR	5634051	Statement	PRId64	105:78:2256:2261	5633589	19	True				
ANR	5634052	Statement	""", """	105:84:2262:2265	5633589	20	True				
ANR	5634053	Statement	"""size %d, distance %d, keyframe %d\\n"""	107:16:2284:2320	5633589	21	True				
ANR	5634054	Statement	","	107:53:2321:2321	5633589	22	True				
ANR	5634055	Statement	st	107:55:2323:2324	5633589	23	True				
ANR	5634056	Statement	->	107:57:2325:2326	5633589	24	True				
ANR	5634057	Statement	index	107:59:2327:2331	5633589	25	True				
ANR	5634058	Statement	","	107:64:2332:2332	5633589	26	True				
ANR	5634059	Statement	sc	107:66:2334:2335	5633589	27	True				
ANR	5634060	Statement	->	107:68:2336:2337	5633589	28	True				
ANR	5634061	Statement	sample_count	107:70:2338:2349	5633589	29	True				
ANR	5634062	Statement	+	107:82:2350:2350	5633589	30	True				
ANR	5634063	Statement	i	107:83:2351:2351	5633589	31	True				
ANR	5634064	Statement	","	107:84:2352:2352	5633589	32	True				
ANR	5634065	Statement	offset	109:16:2371:2376	5633589	33	True				
ANR	5634066	Statement	","	109:22:2377:2377	5633589	34	True				
ANR	5634067	Statement	dts	109:24:2379:2381	5633589	35	True				
ANR	5634068	Statement	","	109:27:2382:2382	5633589	36	True				
ANR	5634069	Statement	sample_size	109:29:2384:2394	5633589	37	True				
ANR	5634070	Statement	","	109:40:2395:2395	5633589	38	True				
ANR	5634071	Statement	distance	109:42:2397:2404	5633589	39	True				
ANR	5634072	Statement	","	109:50:2405:2405	5633589	40	True				
ANR	5634073	Statement	keyframe	109:52:2407:2414	5633589	41	True				
ANR	5634074	Statement	)	109:60:2415:2415	5633589	42	True				
ANR	5634075	ExpressionStatement		109:61:2416:2416	5633589	43	True				
ANR	5634076	ExpressionStatement	distance ++	111:8:2427:2437	5633589	44	True				
ANR	5634077	PostIncDecOperationExpression	distance ++		5633589	0					
ANR	5634078	Identifier	distance		5633589	0					
ANR	5634079	IncDec	++		5633589	1					
ANR	5634080	ExpressionStatement	assert ( sample_duration % sc -> time_rate == 0 )	113:8:2448:2492	5633589	45	True				
ANR	5634081	CallExpression	assert ( sample_duration % sc -> time_rate == 0 )		5633589	0					
ANR	5634082	Callee	assert		5633589	0					
ANR	5634083	Identifier	assert		5633589	0					
ANR	5634084	ArgumentList	sample_duration % sc -> time_rate == 0		5633589	1					
ANR	5634085	Argument	sample_duration % sc -> time_rate == 0		5633589	0					
ANR	5634086	EqualityExpression	sample_duration % sc -> time_rate == 0		5633589	0		==			
ANR	5634087	MultiplicativeExpression	sample_duration % sc -> time_rate		5633589	0		%			
ANR	5634088	Identifier	sample_duration		5633589	0					
ANR	5634089	PtrMemberAccess	sc -> time_rate		5633589	1					
ANR	5634090	Identifier	sc		5633589	0					
ANR	5634091	Identifier	time_rate		5633589	1					
ANR	5634092	PrimaryExpression	0		5633589	1					
ANR	5634093	ExpressionStatement	dts += sample_duration / sc -> time_rate	115:8:2503:2541	5633589	46	True				
ANR	5634094	AssignmentExpression	dts += sample_duration / sc -> time_rate		5633589	0		+=			
ANR	5634095	Identifier	dts		5633589	0					
ANR	5634096	MultiplicativeExpression	sample_duration / sc -> time_rate		5633589	1		/			
ANR	5634097	Identifier	sample_duration		5633589	0					
ANR	5634098	PtrMemberAccess	sc -> time_rate		5633589	1					
ANR	5634099	Identifier	sc		5633589	0					
ANR	5634100	Identifier	time_rate		5633589	1					
ANR	5634101	ExpressionStatement	offset += sample_size	117:8:2552:2573	5633589	47	True				
ANR	5634102	AssignmentExpression	offset += sample_size		5633589	0		+=			
ANR	5634103	Identifier	offset		5633589	0					
ANR	5634104	Identifier	sample_size		5633589	1					
ANR	5634105	ExpressionStatement	frag -> moof_offset = offset	121:4:2587:2613	5633589	22	True				
ANR	5634106	AssignmentExpression	frag -> moof_offset = offset		5633589	0		=			
ANR	5634107	PtrMemberAccess	frag -> moof_offset		5633589	0					
ANR	5634108	Identifier	frag		5633589	0					
ANR	5634109	Identifier	moof_offset		5633589	1					
ANR	5634110	Identifier	offset		5633589	1					
ANR	5634111	ExpressionStatement	sc -> sample_count = st -> nb_index_entries	123:4:2620:2659	5633589	23	True				
ANR	5634112	AssignmentExpression	sc -> sample_count = st -> nb_index_entries		5633589	0		=			
ANR	5634113	PtrMemberAccess	sc -> sample_count		5633589	0					
ANR	5634114	Identifier	sc		5633589	0					
ANR	5634115	Identifier	sample_count		5633589	1					
ANR	5634116	PtrMemberAccess	st -> nb_index_entries		5633589	1					
ANR	5634117	Identifier	st		5633589	0					
ANR	5634118	Identifier	nb_index_entries		5633589	1					
ANR	5634119	ExpressionStatement	st -> duration = dts	125:4:2666:2684	5633589	24	True				
ANR	5634120	AssignmentExpression	st -> duration = dts		5633589	0		=			
ANR	5634121	PtrMemberAccess	st -> duration		5633589	0					
ANR	5634122	Identifier	st		5633589	0					
ANR	5634123	Identifier	duration		5633589	1					
ANR	5634124	Identifier	dts		5633589	1					
ANR	5634125	ReturnStatement	return 0 ;	127:4:2691:2699	5633589	25	True				
ANR	5634126	PrimaryExpression	0		5633589	0					
ANR	5634127	ReturnType	static int		5633589	1					
ANR	5634128	Identifier	mov_read_trun		5633589	2					
ANR	5634129	ParameterList	"MOVContext * c , ByteIOContext * pb , MOV_atom_t atom"		5633589	3					
ANR	5634130	Parameter	MOVContext * c	1:25:25:37	5633589	0	True				
ANR	5634131	ParameterType	MOVContext *		5633589	0					
ANR	5634132	Identifier	c		5633589	1					
ANR	5634133	Parameter	ByteIOContext * pb	1:40:40:56	5633589	1	True				
ANR	5634134	ParameterType	ByteIOContext *		5633589	0					
ANR	5634135	Identifier	pb		5633589	1					
ANR	5634136	Parameter	MOV_atom_t atom	1:59:59:73	5633589	2	True				
ANR	5634137	ParameterType	MOV_atom_t		5633589	0					
ANR	5634138	Identifier	atom		5633589	1					
ANR	5634139	CFGEntryNode	ENTRY		5633589		True				
ANR	5634140	CFGExitNode	EXIT		5633589		True				
ANR	5634141	Symbol	av_realloc		5633589						
ANR	5634142	Symbol	sc -> ctts_data		5633589						
ANR	5634143	Symbol	ENOMEM		5633589						
ANR	5634144	Symbol	* c -> fc		5633589						
ANR	5634145	Symbol	sc -> pseudo_stream_id		5633589						
ANR	5634146	Symbol	sc -> time_rate		5633589						
ANR	5634147	Symbol	* st		5633589						
ANR	5634148	Symbol	* * frag		5633589						
ANR	5634149	Symbol	* st -> codec		5633589						
ANR	5634150	Symbol	UINT_MAX		5633589						
ANR	5634151	Symbol	* sc -> ctts_data		5633589						
ANR	5634152	Symbol	frag -> flags		5633589						
ANR	5634153	Symbol	* sc		5633589						
ANR	5634154	Symbol	sc -> ctts_data [ sc -> ctts_count ] . duration		5633589						
ANR	5634155	Symbol	AVINDEX_KEYFRAME		5633589						
ANR	5634156	Symbol	sc -> sample_count		5633589						
ANR	5634157	Symbol	sc -> ctts_data [ sc -> ctts_count ] . count		5633589						
ANR	5634158	Symbol	frag -> moof_offset		5633589						
ANR	5634159	Symbol	* frag -> track_id		5633589						
ANR	5634160	Symbol	* c -> fc -> streams		5633589						
ANR	5634161	Symbol	offset		5633589						
ANR	5634162	Symbol	* * c		5633589						
ANR	5634163	Symbol	c -> fc -> streams		5633589						
ANR	5634164	Symbol	keyframe		5633589						
ANR	5634165	Symbol	entries		5633589						
ANR	5634166	Symbol	frag -> base_data_offset		5633589						
ANR	5634167	Symbol	sample_duration		5633589						
ANR	5634168	Symbol	c -> fc		5633589						
ANR	5634169	Symbol	* frag		5633589						
ANR	5634170	Symbol	first_sample_flags		5633589						
ANR	5634171	Symbol	frag -> size		5633589						
ANR	5634172	Symbol	* * * c		5633589						
ANR	5634173	Symbol	* * sc		5633589						
ANR	5634174	Symbol	frag		5633589						
ANR	5634175	Symbol	distance		5633589						
ANR	5634176	Symbol	get_be24		5633589						
ANR	5634177	Symbol	flags		5633589						
ANR	5634178	Symbol	st -> priv_data		5633589						
ANR	5634179	Symbol	* * st		5633589						
ANR	5634180	Symbol	sc		5633589						
ANR	5634181	Symbol	sample_size		5633589						
ANR	5634182	Symbol	sample_flags		5633589						
ANR	5634183	Symbol	st -> codec -> codec_type		5633589						
ANR	5634184	Symbol	sc -> ctts_count		5633589						
ANR	5634185	Symbol	st -> duration		5633589						
ANR	5634186	Symbol	st		5633589						
ANR	5634187	Symbol	dts		5633589						
ANR	5634188	Symbol	get_be32		5633589						
ANR	5634189	Symbol	c		5633589						
ANR	5634190	Symbol	i		5633589						
ANR	5634191	Symbol	st -> nb_index_entries		5633589						
ANR	5634192	Symbol	st -> codec		5633589						
ANR	5634193	Symbol	* c		5633589						
ANR	5634194	Symbol	* * c -> fc		5633589						
ANR	5634195	Symbol	data_offset		5633589						
ANR	5634196	Symbol	frag -> duration		5633589						
ANR	5634197	Symbol	frag -> stsd_id		5633589						
ANR	5634198	Symbol	& c -> fragment		5633589						
ANR	5634199	Symbol	pb		5633589						
ANR	5634200	Symbol	AVERROR		5633589						
ANR	5634201	Symbol	CODEC_TYPE_AUDIO		5633589						
ANR	5634202	Symbol	atom		5633589						
ANR	5634203	Symbol	frag -> track_id		5633589						
ANR	5634204	Symbol	* sc -> ctts_count		5633589						
