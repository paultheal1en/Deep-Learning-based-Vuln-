command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6365217	File	/home/p4ultr4n/workplace/ReVeal/raw_code/parse_read_intervals_0.c								
ANR	6365218	Function	parse_read_intervals	1:0:0:1220							
ANR	6365219	FunctionDef	parse_read_intervals (const char * intervals_spec)		6365218	0					
ANR	6365220	CompoundStatement		3:0:61:1220	6365218	0					
ANR	6365221	IdentifierDeclStatement	"int ret , n , i ;"	5:4:68:81	6365218	0	True				
ANR	6365222	IdentifierDecl	ret		6365218	0					
ANR	6365223	IdentifierDeclType	int		6365218	0					
ANR	6365224	Identifier	ret		6365218	1					
ANR	6365225	IdentifierDecl	n		6365218	1					
ANR	6365226	IdentifierDeclType	int		6365218	0					
ANR	6365227	Identifier	n		6365218	1					
ANR	6365228	IdentifierDecl	i		6365218	2					
ANR	6365229	IdentifierDeclType	int		6365218	0					
ANR	6365230	Identifier	i		6365218	1					
ANR	6365231	IdentifierDeclStatement	"char * p , * spec = av_strdup ( intervals_spec ) ;"	7:4:88:130	6365218	1	True				
ANR	6365232	IdentifierDecl	* p		6365218	0					
ANR	6365233	IdentifierDeclType	char *		6365218	0					
ANR	6365234	Identifier	p		6365218	1					
ANR	6365235	IdentifierDecl	* spec = av_strdup ( intervals_spec )		6365218	1					
ANR	6365236	IdentifierDeclType	char *		6365218	0					
ANR	6365237	Identifier	spec		6365218	1					
ANR	6365238	AssignmentExpression	* spec = av_strdup ( intervals_spec )		6365218	2		=			
ANR	6365239	Identifier	spec		6365218	0					
ANR	6365240	CallExpression	av_strdup ( intervals_spec )		6365218	1					
ANR	6365241	Callee	av_strdup		6365218	0					
ANR	6365242	Identifier	av_strdup		6365218	0					
ANR	6365243	ArgumentList	intervals_spec		6365218	1					
ANR	6365244	Argument	intervals_spec		6365218	0					
ANR	6365245	Identifier	intervals_spec		6365218	0					
ANR	6365246	IfStatement	if ( ! spec )		6365218	2					
ANR	6365247	Condition	! spec	9:8:141:145	6365218	0	True				
ANR	6365248	UnaryOperationExpression	! spec		6365218	0					
ANR	6365249	UnaryOperator	!		6365218	0					
ANR	6365250	Identifier	spec		6365218	1					
ANR	6365251	ReturnStatement	return AVERROR ( ENOMEM ) ;	11:8:157:179	6365218	1	True				
ANR	6365252	CallExpression	AVERROR ( ENOMEM )		6365218	0					
ANR	6365253	Callee	AVERROR		6365218	0					
ANR	6365254	Identifier	AVERROR		6365218	0					
ANR	6365255	ArgumentList	ENOMEM		6365218	1					
ANR	6365256	Argument	ENOMEM		6365218	0					
ANR	6365257	Identifier	ENOMEM		6365218	0					
ANR	6365258	ForStatement	"for ( n = 0 , p = spec ; * p ; p ++ )"		6365218	3					
ANR	6365259	ForInit	"n = 0 , p = spec ;"	17:9:252:267	6365218	0	True				
ANR	6365260	Expression	"n = 0 , p = spec"		6365218	0					
ANR	6365261	AssignmentExpression	n = 0		6365218	0		=			
ANR	6365262	Identifier	n		6365218	0					
ANR	6365263	PrimaryExpression	0		6365218	1					
ANR	6365264	AssignmentExpression	p = spec		6365218	1		=			
ANR	6365265	Identifier	p		6365218	0					
ANR	6365266	Identifier	spec		6365218	1					
ANR	6365267	Condition	* p	17:26:269:270	6365218	1	True				
ANR	6365268	UnaryOperationExpression	* p		6365218	0					
ANR	6365269	UnaryOperator	*		6365218	0					
ANR	6365270	Identifier	p		6365218	1					
ANR	6365271	PostIncDecOperationExpression	p ++	17:30:273:275	6365218	2	True				
ANR	6365272	Identifier	p		6365218	0					
ANR	6365273	IncDec	++		6365218	1					
ANR	6365274	IfStatement	"if ( * p == ',' )"		6365218	3					
ANR	6365275	Condition	"* p == ','"	19:12:291:299	6365218	0	True				
ANR	6365276	EqualityExpression	"* p == ','"		6365218	0		==			
ANR	6365277	UnaryOperationExpression	* p		6365218	0					
ANR	6365278	UnaryOperator	*		6365218	0					
ANR	6365279	Identifier	p		6365218	1					
ANR	6365280	PrimaryExpression	"','"		6365218	1					
ANR	6365281	ExpressionStatement	n ++	21:12:315:318	6365218	1	True				
ANR	6365282	PostIncDecOperationExpression	n ++		6365218	0					
ANR	6365283	Identifier	n		6365218	0					
ANR	6365284	IncDec	++		6365218	1					
ANR	6365285	ExpressionStatement	n ++	23:4:325:328	6365218	4	True				
ANR	6365286	PostIncDecOperationExpression	n ++		6365218	0					
ANR	6365287	Identifier	n		6365218	0					
ANR	6365288	IncDec	++		6365218	1					
ANR	6365289	ExpressionStatement	read_intervals = av_malloc ( n * sizeof ( * read_intervals ) )	27:4:337:392	6365218	5	True				
ANR	6365290	AssignmentExpression	read_intervals = av_malloc ( n * sizeof ( * read_intervals ) )		6365218	0		=			
ANR	6365291	Identifier	read_intervals		6365218	0					
ANR	6365292	CallExpression	av_malloc ( n * sizeof ( * read_intervals ) )		6365218	1					
ANR	6365293	Callee	av_malloc		6365218	0					
ANR	6365294	Identifier	av_malloc		6365218	0					
ANR	6365295	ArgumentList	n * sizeof ( * read_intervals )		6365218	1					
ANR	6365296	Argument	n * sizeof ( * read_intervals )		6365218	0					
ANR	6365297	MultiplicativeExpression	n * sizeof ( * read_intervals )		6365218	0		*			
ANR	6365298	Identifier	n		6365218	0					
ANR	6365299	SizeofExpression	sizeof ( * read_intervals )		6365218	1					
ANR	6365300	Sizeof	sizeof		6365218	0					
ANR	6365301	UnaryOperationExpression	* read_intervals		6365218	1					
ANR	6365302	UnaryOperator	*		6365218	0					
ANR	6365303	Identifier	read_intervals		6365218	1					
ANR	6365304	IfStatement	if ( ! read_intervals )		6365218	6					
ANR	6365305	Condition	! read_intervals	29:8:403:417	6365218	0	True				
ANR	6365306	UnaryOperationExpression	! read_intervals		6365218	0					
ANR	6365307	UnaryOperator	!		6365218	0					
ANR	6365308	Identifier	read_intervals		6365218	1					
ANR	6365309	CompoundStatement		27:25:358:358	6365218	1					
ANR	6365310	ExpressionStatement	ret = AVERROR ( ENOMEM )	31:8:431:452	6365218	0	True				
ANR	6365311	AssignmentExpression	ret = AVERROR ( ENOMEM )		6365218	0		=			
ANR	6365312	Identifier	ret		6365218	0					
ANR	6365313	CallExpression	AVERROR ( ENOMEM )		6365218	1					
ANR	6365314	Callee	AVERROR		6365218	0					
ANR	6365315	Identifier	AVERROR		6365218	0					
ANR	6365316	ArgumentList	ENOMEM		6365218	1					
ANR	6365317	Argument	ENOMEM		6365218	0					
ANR	6365318	Identifier	ENOMEM		6365218	0					
ANR	6365319	GotoStatement	goto end ;	33:8:463:471	6365218	1	True				
ANR	6365320	Identifier	end		6365218	0					
ANR	6365321	ExpressionStatement	read_intervals_nb = n	37:4:485:506	6365218	7	True				
ANR	6365322	AssignmentExpression	read_intervals_nb = n		6365218	0		=			
ANR	6365323	Identifier	read_intervals_nb		6365218	0					
ANR	6365324	Identifier	n		6365218	1					
ANR	6365325	ExpressionStatement	p = spec	43:4:542:550	6365218	8	True				
ANR	6365326	AssignmentExpression	p = spec		6365218	0		=			
ANR	6365327	Identifier	p		6365218	0					
ANR	6365328	Identifier	spec		6365218	1					
ANR	6365329	ForStatement	for ( i = 0 ; i < n ; i ++ )		6365218	9					
ANR	6365330	ForInit	i = 0 ;	45:9:562:567	6365218	0	True				
ANR	6365331	AssignmentExpression	i = 0		6365218	0		=			
ANR	6365332	Identifier	i		6365218	0					
ANR	6365333	PrimaryExpression	0		6365218	1					
ANR	6365334	Condition	i < n	45:16:569:573	6365218	1	True				
ANR	6365335	RelationalExpression	i < n		6365218	0		<			
ANR	6365336	Identifier	i		6365218	0					
ANR	6365337	Identifier	n		6365218	1					
ANR	6365338	PostIncDecOperationExpression	i ++	45:23:576:578	6365218	2	True				
ANR	6365339	Identifier	i		6365218	0					
ANR	6365340	IncDec	++		6365218	1					
ANR	6365341	CompoundStatement		45:8:530:557	6365218	3					
ANR	6365342	IdentifierDeclStatement	"char * next = strchr ( p , ',' ) ;"	47:8:592:619	6365218	0	True				
ANR	6365343	IdentifierDecl	"* next = strchr ( p , ',' )"		6365218	0					
ANR	6365344	IdentifierDeclType	char *		6365218	0					
ANR	6365345	Identifier	next		6365218	1					
ANR	6365346	AssignmentExpression	"* next = strchr ( p , ',' )"		6365218	2		=			
ANR	6365347	Identifier	next		6365218	0					
ANR	6365348	CallExpression	"strchr ( p , ',' )"		6365218	1					
ANR	6365349	Callee	strchr		6365218	0					
ANR	6365350	Identifier	strchr		6365218	0					
ANR	6365351	ArgumentList	p		6365218	1					
ANR	6365352	Argument	p		6365218	0					
ANR	6365353	Identifier	p		6365218	0					
ANR	6365354	Argument	"','"		6365218	1					
ANR	6365355	PrimaryExpression	"','"		6365218	0					
ANR	6365356	IfStatement	if ( next )		6365218	1					
ANR	6365357	Condition	next	49:12:634:637	6365218	0	True				
ANR	6365358	Identifier	next		6365218	0					
ANR	6365359	ExpressionStatement	* next ++ = 0	51:12:653:664	6365218	1	True				
ANR	6365360	AssignmentExpression	* next ++ = 0		6365218	0		=			
ANR	6365361	UnaryOperationExpression	* next ++		6365218	0					
ANR	6365362	UnaryOperator	*		6365218	0					
ANR	6365363	PostIncDecOperationExpression	next ++		6365218	1					
ANR	6365364	Identifier	next		6365218	0					
ANR	6365365	IncDec	++		6365218	1					
ANR	6365366	PrimaryExpression	0		6365218	1					
ANR	6365367	ExpressionStatement	read_intervals [ i ] . id = i	55:8:677:701	6365218	2	True				
ANR	6365368	AssignmentExpression	read_intervals [ i ] . id = i		6365218	0		=			
ANR	6365369	MemberAccess	read_intervals [ i ] . id		6365218	0					
ANR	6365370	ArrayIndexing	read_intervals [ i ]		6365218	0					
ANR	6365371	Identifier	read_intervals		6365218	0					
ANR	6365372	Identifier	i		6365218	1					
ANR	6365373	Identifier	id		6365218	1					
ANR	6365374	Identifier	i		6365218	1					
ANR	6365375	ExpressionStatement	"ret = parse_read_interval ( p , & read_intervals [ i ] )"	57:8:712:760	6365218	3	True				
ANR	6365376	AssignmentExpression	"ret = parse_read_interval ( p , & read_intervals [ i ] )"		6365218	0		=			
ANR	6365377	Identifier	ret		6365218	0					
ANR	6365378	CallExpression	"parse_read_interval ( p , & read_intervals [ i ] )"		6365218	1					
ANR	6365379	Callee	parse_read_interval		6365218	0					
ANR	6365380	Identifier	parse_read_interval		6365218	0					
ANR	6365381	ArgumentList	p		6365218	1					
ANR	6365382	Argument	p		6365218	0					
ANR	6365383	Identifier	p		6365218	0					
ANR	6365384	Argument	& read_intervals [ i ]		6365218	1					
ANR	6365385	UnaryOperationExpression	& read_intervals [ i ]		6365218	0					
ANR	6365386	UnaryOperator	&		6365218	0					
ANR	6365387	ArrayIndexing	read_intervals [ i ]		6365218	1					
ANR	6365388	Identifier	read_intervals		6365218	0					
ANR	6365389	Identifier	i		6365218	1					
ANR	6365390	IfStatement	if ( ret < 0 )		6365218	4					
ANR	6365391	Condition	ret < 0	59:12:775:781	6365218	0	True				
ANR	6365392	RelationalExpression	ret < 0		6365218	0		<			
ANR	6365393	Identifier	ret		6365218	0					
ANR	6365394	PrimaryExpression	0		6365218	1					
ANR	6365395	CompoundStatement		57:21:722:722	6365218	1					
ANR	6365396	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Error parsing read interval #%d '%s'\\n"" , i , p )"	61:12:799:893	6365218	0	True				
ANR	6365397	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Error parsing read interval #%d '%s'\\n"" , i , p )"		6365218	0					
ANR	6365398	Callee	av_log		6365218	0					
ANR	6365399	Identifier	av_log		6365218	0					
ANR	6365400	ArgumentList	NULL		6365218	1					
ANR	6365401	Argument	NULL		6365218	0					
ANR	6365402	Identifier	NULL		6365218	0					
ANR	6365403	Argument	AV_LOG_ERROR		6365218	1					
ANR	6365404	Identifier	AV_LOG_ERROR		6365218	0					
ANR	6365405	Argument	"""Error parsing read interval #%d '%s'\\n"""		6365218	2					
ANR	6365406	PrimaryExpression	"""Error parsing read interval #%d '%s'\\n"""		6365218	0					
ANR	6365407	Argument	i		6365218	3					
ANR	6365408	Identifier	i		6365218	0					
ANR	6365409	Argument	p		6365218	4					
ANR	6365410	Identifier	p		6365218	0					
ANR	6365411	GotoStatement	goto end ;	65:12:908:916	6365218	1	True				
ANR	6365412	Identifier	end		6365218	0					
ANR	6365413	ExpressionStatement	"av_log ( NULL , AV_LOG_VERBOSE , ""Parsed log interval "" )"	69:8:938:990	6365218	5	True				
ANR	6365414	CallExpression	"av_log ( NULL , AV_LOG_VERBOSE , ""Parsed log interval "" )"		6365218	0					
ANR	6365415	Callee	av_log		6365218	0					
ANR	6365416	Identifier	av_log		6365218	0					
ANR	6365417	ArgumentList	NULL		6365218	1					
ANR	6365418	Argument	NULL		6365218	0					
ANR	6365419	Identifier	NULL		6365218	0					
ANR	6365420	Argument	AV_LOG_VERBOSE		6365218	1					
ANR	6365421	Identifier	AV_LOG_VERBOSE		6365218	0					
ANR	6365422	Argument	"""Parsed log interval """		6365218	2					
ANR	6365423	PrimaryExpression	"""Parsed log interval """		6365218	0					
ANR	6365424	ExpressionStatement	"log_read_interval ( & read_intervals [ i ] , NULL , AV_LOG_VERBOSE )"	71:8:1001:1060	6365218	6	True				
ANR	6365425	CallExpression	"log_read_interval ( & read_intervals [ i ] , NULL , AV_LOG_VERBOSE )"		6365218	0					
ANR	6365426	Callee	log_read_interval		6365218	0					
ANR	6365427	Identifier	log_read_interval		6365218	0					
ANR	6365428	ArgumentList	& read_intervals [ i ]		6365218	1					
ANR	6365429	Argument	& read_intervals [ i ]		6365218	0					
ANR	6365430	UnaryOperationExpression	& read_intervals [ i ]		6365218	0					
ANR	6365431	UnaryOperator	&		6365218	0					
ANR	6365432	ArrayIndexing	read_intervals [ i ]		6365218	1					
ANR	6365433	Identifier	read_intervals		6365218	0					
ANR	6365434	Identifier	i		6365218	1					
ANR	6365435	Argument	NULL		6365218	1					
ANR	6365436	Identifier	NULL		6365218	0					
ANR	6365437	Argument	AV_LOG_VERBOSE		6365218	2					
ANR	6365438	Identifier	AV_LOG_VERBOSE		6365218	0					
ANR	6365439	ExpressionStatement	p = next	73:8:1071:1079	6365218	7	True				
ANR	6365440	AssignmentExpression	p = next		6365218	0		=			
ANR	6365441	Identifier	p		6365218	0					
ANR	6365442	Identifier	next		6365218	1					
ANR	6365443	ExpressionStatement	av_assert0 ( i <= read_intervals_nb )	75:8:1090:1124	6365218	8	True				
ANR	6365444	CallExpression	av_assert0 ( i <= read_intervals_nb )		6365218	0					
ANR	6365445	Callee	av_assert0		6365218	0					
ANR	6365446	Identifier	av_assert0		6365218	0					
ANR	6365447	ArgumentList	i <= read_intervals_nb		6365218	1					
ANR	6365448	Argument	i <= read_intervals_nb		6365218	0					
ANR	6365449	RelationalExpression	i <= read_intervals_nb		6365218	0		<=			
ANR	6365450	Identifier	i		6365218	0					
ANR	6365451	Identifier	read_intervals_nb		6365218	1					
ANR	6365452	ExpressionStatement	av_assert0 ( i == read_intervals_nb )	79:4:1138:1172	6365218	10	True				
ANR	6365453	CallExpression	av_assert0 ( i == read_intervals_nb )		6365218	0					
ANR	6365454	Callee	av_assert0		6365218	0					
ANR	6365455	Identifier	av_assert0		6365218	0					
ANR	6365456	ArgumentList	i == read_intervals_nb		6365218	1					
ANR	6365457	Argument	i == read_intervals_nb		6365218	0					
ANR	6365458	EqualityExpression	i == read_intervals_nb		6365218	0		==			
ANR	6365459	Identifier	i		6365218	0					
ANR	6365460	Identifier	read_intervals_nb		6365218	1					
ANR	6365461	Label	end :	83:0:1177:1180	6365218	11	True				
ANR	6365462	Identifier	end		6365218	0					
ANR	6365463	ExpressionStatement	av_free ( spec )	85:4:1187:1200	6365218	12	True				
ANR	6365464	CallExpression	av_free ( spec )		6365218	0					
ANR	6365465	Callee	av_free		6365218	0					
ANR	6365466	Identifier	av_free		6365218	0					
ANR	6365467	ArgumentList	spec		6365218	1					
ANR	6365468	Argument	spec		6365218	0					
ANR	6365469	Identifier	spec		6365218	0					
ANR	6365470	ReturnStatement	return ret ;	87:4:1207:1217	6365218	13	True				
ANR	6365471	Identifier	ret		6365218	0					
ANR	6365472	ReturnType	static int		6365218	1					
ANR	6365473	Identifier	parse_read_intervals		6365218	2					
ANR	6365474	ParameterList	const char * intervals_spec		6365218	3					
ANR	6365475	Parameter	const char * intervals_spec	1:32:32:57	6365218	0	True				
ANR	6365476	ParameterType	const char *		6365218	0					
ANR	6365477	Identifier	intervals_spec		6365218	1					
ANR	6365478	CFGEntryNode	ENTRY		6365218		True				
ANR	6365479	CFGExitNode	EXIT		6365218		True				
ANR	6365480	Symbol	ret		6365218						
ANR	6365481	Symbol	av_malloc		6365218						
ANR	6365482	Symbol	next		6365218						
ANR	6365483	Symbol	ENOMEM		6365218						
ANR	6365484	Symbol	* next ++		6365218						
ANR	6365485	Symbol	NULL		6365218						
ANR	6365486	Symbol	read_intervals [ i ] . id		6365218						
ANR	6365487	Symbol	AV_LOG_ERROR		6365218						
ANR	6365488	Symbol	parse_read_interval		6365218						
ANR	6365489	Symbol	av_strdup		6365218						
ANR	6365490	Symbol	i		6365218						
ANR	6365491	Symbol	strchr		6365218						
ANR	6365492	Symbol	n		6365218						
ANR	6365493	Symbol	spec		6365218						
ANR	6365494	Symbol	AV_LOG_VERBOSE		6365218						
ANR	6365495	Symbol	* read_intervals		6365218						
ANR	6365496	Symbol	p		6365218						
ANR	6365497	Symbol	intervals_spec		6365218						
ANR	6365498	Symbol	* i		6365218						
ANR	6365499	Symbol	* p		6365218						
ANR	6365500	Symbol	AVERROR		6365218						
ANR	6365501	Symbol	read_intervals_nb		6365218						
ANR	6365502	Symbol	read_intervals		6365218						
