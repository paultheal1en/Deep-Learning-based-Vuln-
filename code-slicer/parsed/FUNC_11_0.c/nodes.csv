command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	35427	File	/home/p4ultr4n/workplace/ReVeal/raw_code/FUNC_11_0.c								
ANR	35428	Function	hl_decode_mb	1:0:0:11889							
ANR	35429	FunctionDef	hl_decode_mb (H264Context * h)		35428	0					
ANR	35430	CompoundStatement		3:0:60:11889	35428	0					
ANR	35431	IdentifierDeclStatement	const int mb_x = h -> mb_x ;	5:4:67:94	35428	0	True				
ANR	35432	IdentifierDecl	mb_x = h -> mb_x		35428	0					
ANR	35433	IdentifierDeclType	const int		35428	0					
ANR	35434	Identifier	mb_x		35428	1					
ANR	35435	AssignmentExpression	mb_x = h -> mb_x		35428	2		=			
ANR	35436	Identifier	mb_x		35428	0					
ANR	35437	PtrMemberAccess	h -> mb_x		35428	1					
ANR	35438	Identifier	h		35428	0					
ANR	35439	Identifier	mb_x		35428	1					
ANR	35440	IdentifierDeclStatement	const int mb_y = h -> mb_y ;	7:4:101:128	35428	1	True				
ANR	35441	IdentifierDecl	mb_y = h -> mb_y		35428	0					
ANR	35442	IdentifierDeclType	const int		35428	0					
ANR	35443	Identifier	mb_y		35428	1					
ANR	35444	AssignmentExpression	mb_y = h -> mb_y		35428	2		=			
ANR	35445	Identifier	mb_y		35428	0					
ANR	35446	PtrMemberAccess	h -> mb_y		35428	1					
ANR	35447	Identifier	h		35428	0					
ANR	35448	Identifier	mb_y		35428	1					
ANR	35449	IdentifierDeclStatement	const int mb_xy = h -> mb_xy ;	9:4:135:163	35428	2	True				
ANR	35450	IdentifierDecl	mb_xy = h -> mb_xy		35428	0					
ANR	35451	IdentifierDeclType	const int		35428	0					
ANR	35452	Identifier	mb_xy		35428	1					
ANR	35453	AssignmentExpression	mb_xy = h -> mb_xy		35428	2		=			
ANR	35454	Identifier	mb_xy		35428	0					
ANR	35455	PtrMemberAccess	h -> mb_xy		35428	1					
ANR	35456	Identifier	h		35428	0					
ANR	35457	Identifier	mb_xy		35428	1					
ANR	35458	IdentifierDeclStatement	const int mb_type = h -> cur_pic . f . mb_type [ mb_xy ] ;	11:4:170:217	35428	3	True				
ANR	35459	IdentifierDecl	mb_type = h -> cur_pic . f . mb_type [ mb_xy ]		35428	0					
ANR	35460	IdentifierDeclType	const int		35428	0					
ANR	35461	Identifier	mb_type		35428	1					
ANR	35462	AssignmentExpression	mb_type = h -> cur_pic . f . mb_type [ mb_xy ]		35428	2		=			
ANR	35463	Identifier	mb_type		35428	0					
ANR	35464	ArrayIndexing	h -> cur_pic . f . mb_type [ mb_xy ]		35428	1					
ANR	35465	MemberAccess	h -> cur_pic . f . mb_type		35428	0					
ANR	35466	MemberAccess	h -> cur_pic . f		35428	0					
ANR	35467	PtrMemberAccess	h -> cur_pic		35428	0					
ANR	35468	Identifier	h		35428	0					
ANR	35469	Identifier	cur_pic		35428	1					
ANR	35470	Identifier	f		35428	1					
ANR	35471	Identifier	mb_type		35428	1					
ANR	35472	Identifier	mb_xy		35428	1					
ANR	35473	IdentifierDeclStatement	"uint8_t * dest_y , * dest_cb , * dest_cr ;"	13:4:224:259	35428	4	True				
ANR	35474	IdentifierDecl	* dest_y		35428	0					
ANR	35475	IdentifierDeclType	uint8_t *		35428	0					
ANR	35476	Identifier	dest_y		35428	1					
ANR	35477	IdentifierDecl	* dest_cb		35428	1					
ANR	35478	IdentifierDeclType	uint8_t *		35428	0					
ANR	35479	Identifier	dest_cb		35428	1					
ANR	35480	IdentifierDecl	* dest_cr		35428	2					
ANR	35481	IdentifierDeclType	uint8_t *		35428	0					
ANR	35482	Identifier	dest_cr		35428	1					
ANR	35483	IdentifierDeclStatement	"int linesize , uvlinesize ;"	15:4:266:305	35428	5	True				
ANR	35484	IdentifierDecl	linesize		35428	0					
ANR	35485	IdentifierDeclType	int		35428	0					
ANR	35486	Identifier	linesize		35428	1					
ANR	35487	IdentifierDecl	uvlinesize		35428	1					
ANR	35488	IdentifierDeclType	int		35428	0					
ANR	35489	Identifier	uvlinesize		35428	1					
ANR	35490	IdentifierDeclStatement	"int i , j ;"	17:4:312:320	35428	6	True				
ANR	35491	IdentifierDecl	i		35428	0					
ANR	35492	IdentifierDeclType	int		35428	0					
ANR	35493	Identifier	i		35428	1					
ANR	35494	IdentifierDecl	j		35428	1					
ANR	35495	IdentifierDeclType	int		35428	0					
ANR	35496	Identifier	j		35428	1					
ANR	35497	IdentifierDeclStatement	int * block_offset = & h -> block_offset [ 0 ] ;	19:4:327:366	35428	7	True				
ANR	35498	IdentifierDecl	* block_offset = & h -> block_offset [ 0 ]		35428	0					
ANR	35499	IdentifierDeclType	int *		35428	0					
ANR	35500	Identifier	block_offset		35428	1					
ANR	35501	AssignmentExpression	* block_offset = & h -> block_offset [ 0 ]		35428	2		=			
ANR	35502	Identifier	block_offset		35428	0					
ANR	35503	UnaryOperationExpression	& h -> block_offset [ 0 ]		35428	1					
ANR	35504	UnaryOperator	&		35428	0					
ANR	35505	ArrayIndexing	h -> block_offset [ 0 ]		35428	1					
ANR	35506	PtrMemberAccess	h -> block_offset		35428	0					
ANR	35507	Identifier	h		35428	0					
ANR	35508	Identifier	block_offset		35428	1					
ANR	35509	PrimaryExpression	0		35428	1					
ANR	35510	IdentifierDeclStatement	const int transform_bypass = ! SIMPLE && ( h -> qscale == 0 && h -> sps . transform_bypass ) ;	21:4:373:456	35428	8	True				
ANR	35511	IdentifierDecl	transform_bypass = ! SIMPLE && ( h -> qscale == 0 && h -> sps . transform_bypass )		35428	0					
ANR	35512	IdentifierDeclType	const int		35428	0					
ANR	35513	Identifier	transform_bypass		35428	1					
ANR	35514	AssignmentExpression	transform_bypass = ! SIMPLE && ( h -> qscale == 0 && h -> sps . transform_bypass )		35428	2		=			
ANR	35515	Identifier	transform_bypass		35428	0					
ANR	35516	AndExpression	! SIMPLE && ( h -> qscale == 0 && h -> sps . transform_bypass )		35428	1		&&			
ANR	35517	UnaryOperationExpression	! SIMPLE		35428	0					
ANR	35518	UnaryOperator	!		35428	0					
ANR	35519	Identifier	SIMPLE		35428	1					
ANR	35520	AndExpression	h -> qscale == 0 && h -> sps . transform_bypass		35428	1		&&			
ANR	35521	EqualityExpression	h -> qscale == 0		35428	0		==			
ANR	35522	PtrMemberAccess	h -> qscale		35428	0					
ANR	35523	Identifier	h		35428	0					
ANR	35524	Identifier	qscale		35428	1					
ANR	35525	PrimaryExpression	0		35428	1					
ANR	35526	MemberAccess	h -> sps . transform_bypass		35428	1					
ANR	35527	PtrMemberAccess	h -> sps		35428	0					
ANR	35528	Identifier	h		35428	0					
ANR	35529	Identifier	sps		35428	1					
ANR	35530	Identifier	transform_bypass		35428	1					
ANR	35531	IdentifierDeclStatement	const int is_h264 = ! CONFIG_SVQ3_DECODER || SIMPLE || h -> avctx -> codec_id == AV_CODEC_ID_H264 ;	25:4:525:617	35428	9	True				
ANR	35532	IdentifierDecl	is_h264 = ! CONFIG_SVQ3_DECODER || SIMPLE || h -> avctx -> codec_id == AV_CODEC_ID_H264		35428	0					
ANR	35533	IdentifierDeclType	const int		35428	0					
ANR	35534	Identifier	is_h264		35428	1					
ANR	35535	AssignmentExpression	is_h264 = ! CONFIG_SVQ3_DECODER || SIMPLE || h -> avctx -> codec_id == AV_CODEC_ID_H264		35428	2		=			
ANR	35536	Identifier	is_h264		35428	0					
ANR	35537	OrExpression	! CONFIG_SVQ3_DECODER || SIMPLE || h -> avctx -> codec_id == AV_CODEC_ID_H264		35428	1		||			
ANR	35538	UnaryOperationExpression	! CONFIG_SVQ3_DECODER		35428	0					
ANR	35539	UnaryOperator	!		35428	0					
ANR	35540	Identifier	CONFIG_SVQ3_DECODER		35428	1					
ANR	35541	OrExpression	SIMPLE || h -> avctx -> codec_id == AV_CODEC_ID_H264		35428	1		||			
ANR	35542	Identifier	SIMPLE		35428	0					
ANR	35543	EqualityExpression	h -> avctx -> codec_id == AV_CODEC_ID_H264		35428	1		==			
ANR	35544	PtrMemberAccess	h -> avctx -> codec_id		35428	0					
ANR	35545	PtrMemberAccess	h -> avctx		35428	0					
ANR	35546	Identifier	h		35428	0					
ANR	35547	Identifier	avctx		35428	1					
ANR	35548	Identifier	codec_id		35428	1					
ANR	35549	Identifier	AV_CODEC_ID_H264		35428	1					
ANR	35550	IdentifierDeclStatement	"void ( * idct_add ) ( uint8_t * dst , int16_t * block , int stride ) ;"	27:4:624:682	35428	10	True				
ANR	35551	IdentifierDecl	"( * idct_add ) ( uint8_t * dst , int16_t * block , int stride )"		35428	0					
ANR	35552	IdentifierDeclType	"void ( * ) ( uint8_t * dst , int16_t * block , int stride )"		35428	0					
ANR	35553	Identifier	idct_add		35428	1					
ANR	35554	Identifier	dst		35428	2					
ANR	35555	Identifier	block		35428	3					
ANR	35556	IdentifierDeclStatement	const int block_h = 16 >> h -> chroma_y_shift ;	29:4:689:734	35428	11	True				
ANR	35557	IdentifierDecl	block_h = 16 >> h -> chroma_y_shift		35428	0					
ANR	35558	IdentifierDeclType	const int		35428	0					
ANR	35559	Identifier	block_h		35428	1					
ANR	35560	AssignmentExpression	block_h = 16 >> h -> chroma_y_shift		35428	2		=			
ANR	35561	Identifier	block_h		35428	0					
ANR	35562	ShiftExpression	16 >> h -> chroma_y_shift		35428	1		>>			
ANR	35563	PrimaryExpression	16		35428	0					
ANR	35564	PtrMemberAccess	h -> chroma_y_shift		35428	1					
ANR	35565	Identifier	h		35428	0					
ANR	35566	Identifier	chroma_y_shift		35428	1					
ANR	35567	IdentifierDeclStatement	const int chroma422 = CHROMA422 ;	31:4:741:772	35428	12	True				
ANR	35568	IdentifierDecl	chroma422 = CHROMA422		35428	0					
ANR	35569	IdentifierDeclType	const int		35428	0					
ANR	35570	Identifier	chroma422		35428	1					
ANR	35571	AssignmentExpression	chroma422 = CHROMA422		35428	2		=			
ANR	35572	Identifier	CHROMA422		35428	0					
ANR	35573	Identifier	CHROMA422		35428	1					
ANR	35574	ExpressionStatement	dest_y = h -> cur_pic . f . data [ 0 ] + ( ( mb_x << PIXEL_SHIFT ) + mb_y * h -> linesize ) * 16	35:4:781:868	35428	13	True				
ANR	35575	AssignmentExpression	dest_y = h -> cur_pic . f . data [ 0 ] + ( ( mb_x << PIXEL_SHIFT ) + mb_y * h -> linesize ) * 16		35428	0		=			
ANR	35576	Identifier	dest_y		35428	0					
ANR	35577	AdditiveExpression	h -> cur_pic . f . data [ 0 ] + ( ( mb_x << PIXEL_SHIFT ) + mb_y * h -> linesize ) * 16		35428	1		+			
ANR	35578	ArrayIndexing	h -> cur_pic . f . data [ 0 ]		35428	0					
ANR	35579	MemberAccess	h -> cur_pic . f . data		35428	0					
ANR	35580	MemberAccess	h -> cur_pic . f		35428	0					
ANR	35581	PtrMemberAccess	h -> cur_pic		35428	0					
ANR	35582	Identifier	h		35428	0					
ANR	35583	Identifier	cur_pic		35428	1					
ANR	35584	Identifier	f		35428	1					
ANR	35585	Identifier	data		35428	1					
ANR	35586	PrimaryExpression	0		35428	1					
ANR	35587	MultiplicativeExpression	( ( mb_x << PIXEL_SHIFT ) + mb_y * h -> linesize ) * 16		35428	1		*			
ANR	35588	AdditiveExpression	( mb_x << PIXEL_SHIFT ) + mb_y * h -> linesize		35428	0		+			
ANR	35589	ShiftExpression	mb_x << PIXEL_SHIFT		35428	0		<<			
ANR	35590	Identifier	mb_x		35428	0					
ANR	35591	Identifier	PIXEL_SHIFT		35428	1					
ANR	35592	MultiplicativeExpression	mb_y * h -> linesize		35428	1		*			
ANR	35593	Identifier	mb_y		35428	0					
ANR	35594	PtrMemberAccess	h -> linesize		35428	1					
ANR	35595	Identifier	h		35428	0					
ANR	35596	Identifier	linesize		35428	1					
ANR	35597	PrimaryExpression	16		35428	1					
ANR	35598	ExpressionStatement	dest_cb = h -> cur_pic . f . data [ 1 ] + ( mb_x << PIXEL_SHIFT ) * 8 + mb_y * h -> uvlinesize * block_h	37:4:875:967	35428	14	True				
ANR	35599	AssignmentExpression	dest_cb = h -> cur_pic . f . data [ 1 ] + ( mb_x << PIXEL_SHIFT ) * 8 + mb_y * h -> uvlinesize * block_h		35428	0		=			
ANR	35600	Identifier	dest_cb		35428	0					
ANR	35601	AdditiveExpression	h -> cur_pic . f . data [ 1 ] + ( mb_x << PIXEL_SHIFT ) * 8 + mb_y * h -> uvlinesize * block_h		35428	1		+			
ANR	35602	ArrayIndexing	h -> cur_pic . f . data [ 1 ]		35428	0					
ANR	35603	MemberAccess	h -> cur_pic . f . data		35428	0					
ANR	35604	MemberAccess	h -> cur_pic . f		35428	0					
ANR	35605	PtrMemberAccess	h -> cur_pic		35428	0					
ANR	35606	Identifier	h		35428	0					
ANR	35607	Identifier	cur_pic		35428	1					
ANR	35608	Identifier	f		35428	1					
ANR	35609	Identifier	data		35428	1					
ANR	35610	PrimaryExpression	1		35428	1					
ANR	35611	AdditiveExpression	( mb_x << PIXEL_SHIFT ) * 8 + mb_y * h -> uvlinesize * block_h		35428	1		+			
ANR	35612	MultiplicativeExpression	( mb_x << PIXEL_SHIFT ) * 8		35428	0		*			
ANR	35613	ShiftExpression	mb_x << PIXEL_SHIFT		35428	0		<<			
ANR	35614	Identifier	mb_x		35428	0					
ANR	35615	Identifier	PIXEL_SHIFT		35428	1					
ANR	35616	PrimaryExpression	8		35428	1					
ANR	35617	MultiplicativeExpression	mb_y * h -> uvlinesize * block_h		35428	1		*			
ANR	35618	Identifier	mb_y		35428	0					
ANR	35619	MultiplicativeExpression	h -> uvlinesize * block_h		35428	1		*			
ANR	35620	PtrMemberAccess	h -> uvlinesize		35428	0					
ANR	35621	Identifier	h		35428	0					
ANR	35622	Identifier	uvlinesize		35428	1					
ANR	35623	Identifier	block_h		35428	1					
ANR	35624	ExpressionStatement	dest_cr = h -> cur_pic . f . data [ 2 ] + ( mb_x << PIXEL_SHIFT ) * 8 + mb_y * h -> uvlinesize * block_h	39:4:974:1066	35428	15	True				
ANR	35625	AssignmentExpression	dest_cr = h -> cur_pic . f . data [ 2 ] + ( mb_x << PIXEL_SHIFT ) * 8 + mb_y * h -> uvlinesize * block_h		35428	0		=			
ANR	35626	Identifier	dest_cr		35428	0					
ANR	35627	AdditiveExpression	h -> cur_pic . f . data [ 2 ] + ( mb_x << PIXEL_SHIFT ) * 8 + mb_y * h -> uvlinesize * block_h		35428	1		+			
ANR	35628	ArrayIndexing	h -> cur_pic . f . data [ 2 ]		35428	0					
ANR	35629	MemberAccess	h -> cur_pic . f . data		35428	0					
ANR	35630	MemberAccess	h -> cur_pic . f		35428	0					
ANR	35631	PtrMemberAccess	h -> cur_pic		35428	0					
ANR	35632	Identifier	h		35428	0					
ANR	35633	Identifier	cur_pic		35428	1					
ANR	35634	Identifier	f		35428	1					
ANR	35635	Identifier	data		35428	1					
ANR	35636	PrimaryExpression	2		35428	1					
ANR	35637	AdditiveExpression	( mb_x << PIXEL_SHIFT ) * 8 + mb_y * h -> uvlinesize * block_h		35428	1		+			
ANR	35638	MultiplicativeExpression	( mb_x << PIXEL_SHIFT ) * 8		35428	0		*			
ANR	35639	ShiftExpression	mb_x << PIXEL_SHIFT		35428	0		<<			
ANR	35640	Identifier	mb_x		35428	0					
ANR	35641	Identifier	PIXEL_SHIFT		35428	1					
ANR	35642	PrimaryExpression	8		35428	1					
ANR	35643	MultiplicativeExpression	mb_y * h -> uvlinesize * block_h		35428	1		*			
ANR	35644	Identifier	mb_y		35428	0					
ANR	35645	MultiplicativeExpression	h -> uvlinesize * block_h		35428	1		*			
ANR	35646	PtrMemberAccess	h -> uvlinesize		35428	0					
ANR	35647	Identifier	h		35428	0					
ANR	35648	Identifier	uvlinesize		35428	1					
ANR	35649	Identifier	block_h		35428	1					
ANR	35650	ExpressionStatement	"h -> vdsp . prefetch ( dest_y + ( h -> mb_x & 3 ) * 4 * h -> linesize + ( 64 << PIXEL_SHIFT ) , h -> linesize , 4 )"	43:4:1075:1180	35428	16	True				
ANR	35651	CallExpression	"h -> vdsp . prefetch ( dest_y + ( h -> mb_x & 3 ) * 4 * h -> linesize + ( 64 << PIXEL_SHIFT ) , h -> linesize , 4 )"		35428	0					
ANR	35652	Callee	h -> vdsp . prefetch		35428	0					
ANR	35653	MemberAccess	h -> vdsp . prefetch		35428	0					
ANR	35654	PtrMemberAccess	h -> vdsp		35428	0					
ANR	35655	Identifier	h		35428	0					
ANR	35656	Identifier	vdsp		35428	1					
ANR	35657	Identifier	prefetch		35428	1					
ANR	35658	ArgumentList	dest_y + ( h -> mb_x & 3 ) * 4 * h -> linesize + ( 64 << PIXEL_SHIFT )		35428	1					
ANR	35659	Argument	dest_y + ( h -> mb_x & 3 ) * 4 * h -> linesize + ( 64 << PIXEL_SHIFT )		35428	0					
ANR	35660	AdditiveExpression	dest_y + ( h -> mb_x & 3 ) * 4 * h -> linesize + ( 64 << PIXEL_SHIFT )		35428	0		+			
ANR	35661	Identifier	dest_y		35428	0					
ANR	35662	AdditiveExpression	( h -> mb_x & 3 ) * 4 * h -> linesize + ( 64 << PIXEL_SHIFT )		35428	1		+			
ANR	35663	MultiplicativeExpression	( h -> mb_x & 3 ) * 4 * h -> linesize		35428	0		*			
ANR	35664	BitAndExpression	h -> mb_x & 3		35428	0		&			
ANR	35665	PtrMemberAccess	h -> mb_x		35428	0					
ANR	35666	Identifier	h		35428	0					
ANR	35667	Identifier	mb_x		35428	1					
ANR	35668	PrimaryExpression	3		35428	1					
ANR	35669	MultiplicativeExpression	4 * h -> linesize		35428	1		*			
ANR	35670	PrimaryExpression	4		35428	0					
ANR	35671	PtrMemberAccess	h -> linesize		35428	1					
ANR	35672	Identifier	h		35428	0					
ANR	35673	Identifier	linesize		35428	1					
ANR	35674	ShiftExpression	64 << PIXEL_SHIFT		35428	1		<<			
ANR	35675	PrimaryExpression	64		35428	0					
ANR	35676	Identifier	PIXEL_SHIFT		35428	1					
ANR	35677	Argument	h -> linesize		35428	1					
ANR	35678	PtrMemberAccess	h -> linesize		35428	0					
ANR	35679	Identifier	h		35428	0					
ANR	35680	Identifier	linesize		35428	1					
ANR	35681	Argument	4		35428	2					
ANR	35682	PrimaryExpression	4		35428	0					
ANR	35683	ExpressionStatement	"h -> vdsp . prefetch ( dest_cb + ( h -> mb_x & 7 ) * h -> uvlinesize + ( 64 << PIXEL_SHIFT ) , dest_cr - dest_cb , 2 )"	45:4:1187:1292	35428	17	True				
ANR	35684	CallExpression	"h -> vdsp . prefetch ( dest_cb + ( h -> mb_x & 7 ) * h -> uvlinesize + ( 64 << PIXEL_SHIFT ) , dest_cr - dest_cb , 2 )"		35428	0					
ANR	35685	Callee	h -> vdsp . prefetch		35428	0					
ANR	35686	MemberAccess	h -> vdsp . prefetch		35428	0					
ANR	35687	PtrMemberAccess	h -> vdsp		35428	0					
ANR	35688	Identifier	h		35428	0					
ANR	35689	Identifier	vdsp		35428	1					
ANR	35690	Identifier	prefetch		35428	1					
ANR	35691	ArgumentList	dest_cb + ( h -> mb_x & 7 ) * h -> uvlinesize + ( 64 << PIXEL_SHIFT )		35428	1					
ANR	35692	Argument	dest_cb + ( h -> mb_x & 7 ) * h -> uvlinesize + ( 64 << PIXEL_SHIFT )		35428	0					
ANR	35693	AdditiveExpression	dest_cb + ( h -> mb_x & 7 ) * h -> uvlinesize + ( 64 << PIXEL_SHIFT )		35428	0		+			
ANR	35694	Identifier	dest_cb		35428	0					
ANR	35695	AdditiveExpression	( h -> mb_x & 7 ) * h -> uvlinesize + ( 64 << PIXEL_SHIFT )		35428	1		+			
ANR	35696	MultiplicativeExpression	( h -> mb_x & 7 ) * h -> uvlinesize		35428	0		*			
ANR	35697	BitAndExpression	h -> mb_x & 7		35428	0		&			
ANR	35698	PtrMemberAccess	h -> mb_x		35428	0					
ANR	35699	Identifier	h		35428	0					
ANR	35700	Identifier	mb_x		35428	1					
ANR	35701	PrimaryExpression	7		35428	1					
ANR	35702	PtrMemberAccess	h -> uvlinesize		35428	1					
ANR	35703	Identifier	h		35428	0					
ANR	35704	Identifier	uvlinesize		35428	1					
ANR	35705	ShiftExpression	64 << PIXEL_SHIFT		35428	1		<<			
ANR	35706	PrimaryExpression	64		35428	0					
ANR	35707	Identifier	PIXEL_SHIFT		35428	1					
ANR	35708	Argument	dest_cr - dest_cb		35428	1					
ANR	35709	AdditiveExpression	dest_cr - dest_cb		35428	0		-			
ANR	35710	Identifier	dest_cr		35428	0					
ANR	35711	Identifier	dest_cb		35428	1					
ANR	35712	Argument	2		35428	2					
ANR	35713	PrimaryExpression	2		35428	0					
ANR	35714	ExpressionStatement	h -> list_counts [ mb_xy ] = h -> list_count	49:4:1301:1338	35428	18	True				
ANR	35715	AssignmentExpression	h -> list_counts [ mb_xy ] = h -> list_count		35428	0		=			
ANR	35716	ArrayIndexing	h -> list_counts [ mb_xy ]		35428	0					
ANR	35717	PtrMemberAccess	h -> list_counts		35428	0					
ANR	35718	Identifier	h		35428	0					
ANR	35719	Identifier	list_counts		35428	1					
ANR	35720	Identifier	mb_xy		35428	1					
ANR	35721	PtrMemberAccess	h -> list_count		35428	1					
ANR	35722	Identifier	h		35428	0					
ANR	35723	Identifier	list_count		35428	1					
ANR	35724	IfStatement	if ( ! SIMPLE && MB_FIELD )		35428	19					
ANR	35725	Condition	! SIMPLE && MB_FIELD	53:8:1351:1369	35428	0	True				
ANR	35726	AndExpression	! SIMPLE && MB_FIELD		35428	0		&&			
ANR	35727	UnaryOperationExpression	! SIMPLE		35428	0					
ANR	35728	UnaryOperator	!		35428	0					
ANR	35729	Identifier	SIMPLE		35428	1					
ANR	35730	Identifier	MB_FIELD		35428	1					
ANR	35731	CompoundStatement		51:29:1311:1311	35428	1					
ANR	35732	ExpressionStatement	linesize = h -> mb_linesize = h -> linesize * 2	55:8:1383:1430	35428	0	True				
ANR	35733	AssignmentExpression	linesize = h -> mb_linesize = h -> linesize * 2		35428	0		=			
ANR	35734	Identifier	linesize		35428	0					
ANR	35735	AssignmentExpression	h -> mb_linesize = h -> linesize * 2		35428	1		=			
ANR	35736	PtrMemberAccess	h -> mb_linesize		35428	0					
ANR	35737	Identifier	h		35428	0					
ANR	35738	Identifier	mb_linesize		35428	1					
ANR	35739	MultiplicativeExpression	h -> linesize * 2		35428	1		*			
ANR	35740	PtrMemberAccess	h -> linesize		35428	0					
ANR	35741	Identifier	h		35428	0					
ANR	35742	Identifier	linesize		35428	1					
ANR	35743	PrimaryExpression	2		35428	1					
ANR	35744	ExpressionStatement	uvlinesize = h -> mb_uvlinesize = h -> uvlinesize * 2	57:8:1441:1492	35428	1	True				
ANR	35745	AssignmentExpression	uvlinesize = h -> mb_uvlinesize = h -> uvlinesize * 2		35428	0		=			
ANR	35746	Identifier	uvlinesize		35428	0					
ANR	35747	AssignmentExpression	h -> mb_uvlinesize = h -> uvlinesize * 2		35428	1		=			
ANR	35748	PtrMemberAccess	h -> mb_uvlinesize		35428	0					
ANR	35749	Identifier	h		35428	0					
ANR	35750	Identifier	mb_uvlinesize		35428	1					
ANR	35751	MultiplicativeExpression	h -> uvlinesize * 2		35428	1		*			
ANR	35752	PtrMemberAccess	h -> uvlinesize		35428	0					
ANR	35753	Identifier	h		35428	0					
ANR	35754	Identifier	uvlinesize		35428	1					
ANR	35755	PrimaryExpression	2		35428	1					
ANR	35756	ExpressionStatement	block_offset = & h -> block_offset [ 48 ]	59:8:1503:1538	35428	2	True				
ANR	35757	AssignmentExpression	block_offset = & h -> block_offset [ 48 ]		35428	0		=			
ANR	35758	Identifier	block_offset		35428	0					
ANR	35759	UnaryOperationExpression	& h -> block_offset [ 48 ]		35428	1					
ANR	35760	UnaryOperator	&		35428	0					
ANR	35761	ArrayIndexing	h -> block_offset [ 48 ]		35428	1					
ANR	35762	PtrMemberAccess	h -> block_offset		35428	0					
ANR	35763	Identifier	h		35428	0					
ANR	35764	Identifier	block_offset		35428	1					
ANR	35765	PrimaryExpression	48		35428	1					
ANR	35766	IfStatement	if ( mb_y & 1 )		35428	3					
ANR	35767	Condition	mb_y & 1	61:12:1553:1560	35428	0	True				
ANR	35768	BitAndExpression	mb_y & 1		35428	0		&			
ANR	35769	Identifier	mb_y		35428	0					
ANR	35770	PrimaryExpression	1		35428	1					
ANR	35771	CompoundStatement		59:22:1502:1502	35428	1					
ANR	35772	ExpressionStatement	dest_y -= h -> linesize * 15	63:12:1614:1641	35428	0	True				
ANR	35773	AssignmentExpression	dest_y -= h -> linesize * 15		35428	0		-=			
ANR	35774	Identifier	dest_y		35428	0					
ANR	35775	MultiplicativeExpression	h -> linesize * 15		35428	1		*			
ANR	35776	PtrMemberAccess	h -> linesize		35428	0					
ANR	35777	Identifier	h		35428	0					
ANR	35778	Identifier	linesize		35428	1					
ANR	35779	PrimaryExpression	15		35428	1					
ANR	35780	ExpressionStatement	dest_cb -= h -> uvlinesize * ( block_h - 1 )	65:12:1656:1696	35428	1	True				
ANR	35781	AssignmentExpression	dest_cb -= h -> uvlinesize * ( block_h - 1 )		35428	0		-=			
ANR	35782	Identifier	dest_cb		35428	0					
ANR	35783	MultiplicativeExpression	h -> uvlinesize * ( block_h - 1 )		35428	1		*			
ANR	35784	PtrMemberAccess	h -> uvlinesize		35428	0					
ANR	35785	Identifier	h		35428	0					
ANR	35786	Identifier	uvlinesize		35428	1					
ANR	35787	AdditiveExpression	block_h - 1		35428	1		-			
ANR	35788	Identifier	block_h		35428	0					
ANR	35789	PrimaryExpression	1		35428	1					
ANR	35790	ExpressionStatement	dest_cr -= h -> uvlinesize * ( block_h - 1 )	67:12:1711:1751	35428	2	True				
ANR	35791	AssignmentExpression	dest_cr -= h -> uvlinesize * ( block_h - 1 )		35428	0		-=			
ANR	35792	Identifier	dest_cr		35428	0					
ANR	35793	MultiplicativeExpression	h -> uvlinesize * ( block_h - 1 )		35428	1		*			
ANR	35794	PtrMemberAccess	h -> uvlinesize		35428	0					
ANR	35795	Identifier	h		35428	0					
ANR	35796	Identifier	uvlinesize		35428	1					
ANR	35797	AdditiveExpression	block_h - 1		35428	1		-			
ANR	35798	Identifier	block_h		35428	0					
ANR	35799	PrimaryExpression	1		35428	1					
ANR	35800	IfStatement	if ( FRAME_MBAFF )		35428	4					
ANR	35801	Condition	FRAME_MBAFF	71:12:1777:1787	35428	0	True				
ANR	35802	Identifier	FRAME_MBAFF		35428	0					
ANR	35803	CompoundStatement		71:12:1744:1752	35428	1					
ANR	35804	IdentifierDeclStatement	int list ;	73:12:1805:1813	35428	0	True				
ANR	35805	IdentifierDecl	list		35428	0					
ANR	35806	IdentifierDeclType	int		35428	0					
ANR	35807	Identifier	list		35428	1					
ANR	35808	ForStatement	for ( list = 0 ; list < h -> list_count ; list ++ )		35428	1					
ANR	35809	ForInit	list = 0 ;	75:17:1833:1841	35428	0	True				
ANR	35810	AssignmentExpression	list = 0		35428	0		=			
ANR	35811	Identifier	list		35428	0					
ANR	35812	PrimaryExpression	0		35428	1					
ANR	35813	Condition	list < h -> list_count	75:27:1843:1862	35428	1	True				
ANR	35814	RelationalExpression	list < h -> list_count		35428	0		<			
ANR	35815	Identifier	list		35428	0					
ANR	35816	PtrMemberAccess	h -> list_count		35428	1					
ANR	35817	Identifier	h		35428	0					
ANR	35818	Identifier	list_count		35428	1					
ANR	35819	PostIncDecOperationExpression	list ++	75:49:1865:1870	35428	2	True				
ANR	35820	Identifier	list		35428	0					
ANR	35821	IncDec	++		35428	1					
ANR	35822	CompoundStatement		73:57:1812:1812	35428	3					
ANR	35823	IfStatement	"if ( ! USES_LIST ( mb_type , list ) )"		35428	0					
ANR	35824	Condition	"! USES_LIST ( mb_type , list )"	77:20:1896:1920	35428	0	True				
ANR	35825	UnaryOperationExpression	"! USES_LIST ( mb_type , list )"		35428	0					
ANR	35826	UnaryOperator	!		35428	0					
ANR	35827	CallExpression	"USES_LIST ( mb_type , list )"		35428	1					
ANR	35828	Callee	USES_LIST		35428	0					
ANR	35829	Identifier	USES_LIST		35428	0					
ANR	35830	ArgumentList	mb_type		35428	1					
ANR	35831	Argument	mb_type		35428	0					
ANR	35832	Identifier	mb_type		35428	0					
ANR	35833	Argument	list		35428	1					
ANR	35834	Identifier	list		35428	0					
ANR	35835	ContinueStatement	continue ;	79:20:1944:1952	35428	1	True				
ANR	35836	IfStatement	if ( IS_16X16 ( mb_type ) )		35428	1					
ANR	35837	Condition	IS_16X16 ( mb_type )	81:20:1975:1991	35428	0	True				
ANR	35838	CallExpression	IS_16X16 ( mb_type )		35428	0					
ANR	35839	Callee	IS_16X16		35428	0					
ANR	35840	Identifier	IS_16X16		35428	0					
ANR	35841	ArgumentList	mb_type		35428	1					
ANR	35842	Argument	mb_type		35428	0					
ANR	35843	Identifier	mb_type		35428	0					
ANR	35844	CompoundStatement		81:20:1956:1999	35428	1					
ANR	35845	IdentifierDeclStatement	int8_t * ref = & h -> ref_cache [ list ] [ scan8 [ 0 ] ] ;	83:20:2017:2060	35428	0	True				
ANR	35846	IdentifierDecl	* ref = & h -> ref_cache [ list ] [ scan8 [ 0 ] ]		35428	0					
ANR	35847	IdentifierDeclType	int8_t *		35428	0					
ANR	35848	Identifier	ref		35428	1					
ANR	35849	AssignmentExpression	* ref = & h -> ref_cache [ list ] [ scan8 [ 0 ] ]		35428	2		=			
ANR	35850	Identifier	ref		35428	0					
ANR	35851	UnaryOperationExpression	& h -> ref_cache [ list ] [ scan8 [ 0 ] ]		35428	1					
ANR	35852	UnaryOperator	&		35428	0					
ANR	35853	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ 0 ] ]		35428	1					
ANR	35854	ArrayIndexing	h -> ref_cache [ list ]		35428	0					
ANR	35855	PtrMemberAccess	h -> ref_cache		35428	0					
ANR	35856	Identifier	h		35428	0					
ANR	35857	Identifier	ref_cache		35428	1					
ANR	35858	Identifier	list		35428	1					
ANR	35859	ArrayIndexing	scan8 [ 0 ]		35428	1					
ANR	35860	Identifier	scan8		35428	0					
ANR	35861	PrimaryExpression	0		35428	1					
ANR	35862	ExpressionStatement	"fill_rectangle ( ref , 4 , 4 , 8 , ( 16 + * ref ) ^ ( h -> mb_y & 1 ) , 1 )"	85:20:2083:2143	35428	1	True				
ANR	35863	CallExpression	"fill_rectangle ( ref , 4 , 4 , 8 , ( 16 + * ref ) ^ ( h -> mb_y & 1 ) , 1 )"		35428	0					
ANR	35864	Callee	fill_rectangle		35428	0					
ANR	35865	Identifier	fill_rectangle		35428	0					
ANR	35866	ArgumentList	ref		35428	1					
ANR	35867	Argument	ref		35428	0					
ANR	35868	Identifier	ref		35428	0					
ANR	35869	Argument	4		35428	1					
ANR	35870	PrimaryExpression	4		35428	0					
ANR	35871	Argument	4		35428	2					
ANR	35872	PrimaryExpression	4		35428	0					
ANR	35873	Argument	8		35428	3					
ANR	35874	PrimaryExpression	8		35428	0					
ANR	35875	Argument	( 16 + * ref ) ^ ( h -> mb_y & 1 )		35428	4					
ANR	35876	ExclusiveOrExpression	( 16 + * ref ) ^ ( h -> mb_y & 1 )		35428	0		^			
ANR	35877	AdditiveExpression	16 + * ref		35428	0		+			
ANR	35878	PrimaryExpression	16		35428	0					
ANR	35879	UnaryOperationExpression	* ref		35428	1					
ANR	35880	UnaryOperator	*		35428	0					
ANR	35881	Identifier	ref		35428	1					
ANR	35882	BitAndExpression	h -> mb_y & 1		35428	1		&			
ANR	35883	PtrMemberAccess	h -> mb_y		35428	0					
ANR	35884	Identifier	h		35428	0					
ANR	35885	Identifier	mb_y		35428	1					
ANR	35886	PrimaryExpression	1		35428	1					
ANR	35887	Argument	1		35428	5					
ANR	35888	PrimaryExpression	1		35428	0					
ANR	35889	ElseStatement	else		35428	0					
ANR	35890	CompoundStatement		85:23:2108:2108	35428	0					
ANR	35891	ForStatement	for ( i = 0 ; i < 16 ; i += 4 )		35428	0					
ANR	35892	ForInit	i = 0 ;	89:25:2197:2202	35428	0	True				
ANR	35893	AssignmentExpression	i = 0		35428	0		=			
ANR	35894	Identifier	i		35428	0					
ANR	35895	PrimaryExpression	0		35428	1					
ANR	35896	Condition	i < 16	89:32:2204:2209	35428	1	True				
ANR	35897	RelationalExpression	i < 16		35428	0		<			
ANR	35898	Identifier	i		35428	0					
ANR	35899	PrimaryExpression	16		35428	1					
ANR	35900	AssignmentExpression	i += 4	89:40:2212:2217	35428	2	True	+=			
ANR	35901	Identifier	i		35428	0					
ANR	35902	PrimaryExpression	4		35428	1					
ANR	35903	CompoundStatement		89:24:2186:2224	35428	3					
ANR	35904	IdentifierDeclStatement	int ref = h -> ref_cache [ list ] [ scan8 [ i ] ] ;	91:24:2247:2285	35428	0	True				
ANR	35905	IdentifierDecl	ref = h -> ref_cache [ list ] [ scan8 [ i ] ]		35428	0					
ANR	35906	IdentifierDeclType	int		35428	0					
ANR	35907	Identifier	ref		35428	1					
ANR	35908	AssignmentExpression	ref = h -> ref_cache [ list ] [ scan8 [ i ] ]		35428	2		=			
ANR	35909	Identifier	ref		35428	0					
ANR	35910	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ i ] ]		35428	1					
ANR	35911	ArrayIndexing	h -> ref_cache [ list ]		35428	0					
ANR	35912	PtrMemberAccess	h -> ref_cache		35428	0					
ANR	35913	Identifier	h		35428	0					
ANR	35914	Identifier	ref_cache		35428	1					
ANR	35915	Identifier	list		35428	1					
ANR	35916	ArrayIndexing	scan8 [ i ]		35428	1					
ANR	35917	Identifier	scan8		35428	0					
ANR	35918	Identifier	i		35428	1					
ANR	35919	IfStatement	if ( ref >= 0 )		35428	1					
ANR	35920	Condition	ref >= 0	93:28:2316:2323	35428	0	True				
ANR	35921	RelationalExpression	ref >= 0		35428	0		>=			
ANR	35922	Identifier	ref		35428	0					
ANR	35923	PrimaryExpression	0		35428	1					
ANR	35924	ExpressionStatement	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ i ] ] , 2 , 2 , 8 , ( 16 + ref ) ^ ( h -> mb_y & 1 ) , 1 )"	95:28:2355:2484	35428	1	True				
ANR	35925	CallExpression	"fill_rectangle ( & h -> ref_cache [ list ] [ scan8 [ i ] ] , 2 , 2 , 8 , ( 16 + ref ) ^ ( h -> mb_y & 1 ) , 1 )"		35428	0					
ANR	35926	Callee	fill_rectangle		35428	0					
ANR	35927	Identifier	fill_rectangle		35428	0					
ANR	35928	ArgumentList	& h -> ref_cache [ list ] [ scan8 [ i ] ]		35428	1					
ANR	35929	Argument	& h -> ref_cache [ list ] [ scan8 [ i ] ]		35428	0					
ANR	35930	UnaryOperationExpression	& h -> ref_cache [ list ] [ scan8 [ i ] ]		35428	0					
ANR	35931	UnaryOperator	&		35428	0					
ANR	35932	ArrayIndexing	h -> ref_cache [ list ] [ scan8 [ i ] ]		35428	1					
ANR	35933	ArrayIndexing	h -> ref_cache [ list ]		35428	0					
ANR	35934	PtrMemberAccess	h -> ref_cache		35428	0					
ANR	35935	Identifier	h		35428	0					
ANR	35936	Identifier	ref_cache		35428	1					
ANR	35937	Identifier	list		35428	1					
ANR	35938	ArrayIndexing	scan8 [ i ]		35428	1					
ANR	35939	Identifier	scan8		35428	0					
ANR	35940	Identifier	i		35428	1					
ANR	35941	Argument	2		35428	1					
ANR	35942	PrimaryExpression	2		35428	0					
ANR	35943	Argument	2		35428	2					
ANR	35944	PrimaryExpression	2		35428	0					
ANR	35945	Argument	8		35428	3					
ANR	35946	PrimaryExpression	8		35428	0					
ANR	35947	Argument	( 16 + ref ) ^ ( h -> mb_y & 1 )		35428	4					
ANR	35948	ExclusiveOrExpression	( 16 + ref ) ^ ( h -> mb_y & 1 )		35428	0		^			
ANR	35949	AdditiveExpression	16 + ref		35428	0		+			
ANR	35950	PrimaryExpression	16		35428	0					
ANR	35951	Identifier	ref		35428	1					
ANR	35952	BitAndExpression	h -> mb_y & 1		35428	1		&			
ANR	35953	PtrMemberAccess	h -> mb_y		35428	0					
ANR	35954	Identifier	h		35428	0					
ANR	35955	Identifier	mb_y		35428	1					
ANR	35956	PrimaryExpression	1		35428	1					
ANR	35957	Argument	1		35428	5					
ANR	35958	PrimaryExpression	1		35428	0					
ANR	35959	ElseStatement	else		35428	0					
ANR	35960	CompoundStatement		105:11:2505:2505	35428	0					
ANR	35961	ExpressionStatement	linesize = h -> mb_linesize = h -> linesize	109:8:2577:2620	35428	0	True				
ANR	35962	AssignmentExpression	linesize = h -> mb_linesize = h -> linesize		35428	0		=			
ANR	35963	Identifier	linesize		35428	0					
ANR	35964	AssignmentExpression	h -> mb_linesize = h -> linesize		35428	1		=			
ANR	35965	PtrMemberAccess	h -> mb_linesize		35428	0					
ANR	35966	Identifier	h		35428	0					
ANR	35967	Identifier	mb_linesize		35428	1					
ANR	35968	PtrMemberAccess	h -> linesize		35428	1					
ANR	35969	Identifier	h		35428	0					
ANR	35970	Identifier	linesize		35428	1					
ANR	35971	ExpressionStatement	uvlinesize = h -> mb_uvlinesize = h -> uvlinesize	111:8:2631:2676	35428	1	True				
ANR	35972	AssignmentExpression	uvlinesize = h -> mb_uvlinesize = h -> uvlinesize		35428	0		=			
ANR	35973	Identifier	uvlinesize		35428	0					
ANR	35974	AssignmentExpression	h -> mb_uvlinesize = h -> uvlinesize		35428	1		=			
ANR	35975	PtrMemberAccess	h -> mb_uvlinesize		35428	0					
ANR	35976	Identifier	h		35428	0					
ANR	35977	Identifier	mb_uvlinesize		35428	1					
ANR	35978	PtrMemberAccess	h -> uvlinesize		35428	1					
ANR	35979	Identifier	h		35428	0					
ANR	35980	Identifier	uvlinesize		35428	1					
ANR	35981	IfStatement	if ( ! SIMPLE && IS_INTRA_PCM ( mb_type ) )		35428	20					
ANR	35982	Condition	! SIMPLE && IS_INTRA_PCM ( mb_type )	119:8:2739:2770	35428	0	True				
ANR	35983	AndExpression	! SIMPLE && IS_INTRA_PCM ( mb_type )		35428	0		&&			
ANR	35984	UnaryOperationExpression	! SIMPLE		35428	0					
ANR	35985	UnaryOperator	!		35428	0					
ANR	35986	Identifier	SIMPLE		35428	1					
ANR	35987	CallExpression	IS_INTRA_PCM ( mb_type )		35428	1					
ANR	35988	Callee	IS_INTRA_PCM		35428	0					
ANR	35989	Identifier	IS_INTRA_PCM		35428	0					
ANR	35990	ArgumentList	mb_type		35428	1					
ANR	35991	Argument	mb_type		35428	0					
ANR	35992	Identifier	mb_type		35428	0					
ANR	35993	CompoundStatement		119:8:2723:2766	35428	1					
ANR	35994	IdentifierDeclStatement	const int bit_depth = h -> sps . bit_depth_luma ;	121:8:2784:2827	35428	0	True				
ANR	35995	IdentifierDecl	bit_depth = h -> sps . bit_depth_luma		35428	0					
ANR	35996	IdentifierDeclType	const int		35428	0					
ANR	35997	Identifier	bit_depth		35428	1					
ANR	35998	AssignmentExpression	bit_depth = h -> sps . bit_depth_luma		35428	2		=			
ANR	35999	Identifier	bit_depth		35428	0					
ANR	36000	MemberAccess	h -> sps . bit_depth_luma		35428	1					
ANR	36001	PtrMemberAccess	h -> sps		35428	0					
ANR	36002	Identifier	h		35428	0					
ANR	36003	Identifier	sps		35428	1					
ANR	36004	Identifier	bit_depth_luma		35428	1					
ANR	36005	IfStatement	if ( PIXEL_SHIFT )		35428	1					
ANR	36006	Condition	PIXEL_SHIFT	123:12:2842:2852	35428	0	True				
ANR	36007	Identifier	PIXEL_SHIFT		35428	0					
ANR	36008	CompoundStatement		125:12:2829:2845	35428	1					
ANR	36009	IdentifierDeclStatement	int j ;	125:12:2870:2875	35428	0	True				
ANR	36010	IdentifierDecl	j		35428	0					
ANR	36011	IdentifierDeclType	int		35428	0					
ANR	36012	Identifier	j		35428	1					
ANR	36013	IdentifierDeclStatement	GetBitContext gb ;	127:12:2890:2906	35428	1	True				
ANR	36014	IdentifierDecl	gb		35428	0					
ANR	36015	IdentifierDeclType	GetBitContext		35428	0					
ANR	36016	Identifier	gb		35428	1					
ANR	36017	ExpressionStatement	"init_get_bits ( & gb , ( uint8_t * ) h -> intra_pcm_ptr , ff_h264_mb_sizes [ h -> sps . chroma_format_idc ] * bit_depth )"	129:12:2921:3051	35428	2	True				
ANR	36018	CallExpression	"init_get_bits ( & gb , ( uint8_t * ) h -> intra_pcm_ptr , ff_h264_mb_sizes [ h -> sps . chroma_format_idc ] * bit_depth )"		35428	0					
ANR	36019	Callee	init_get_bits		35428	0					
ANR	36020	Identifier	init_get_bits		35428	0					
ANR	36021	ArgumentList	& gb		35428	1					
ANR	36022	Argument	& gb		35428	0					
ANR	36023	UnaryOperationExpression	& gb		35428	0					
ANR	36024	UnaryOperator	&		35428	0					
ANR	36025	Identifier	gb		35428	1					
ANR	36026	Argument	( uint8_t * ) h -> intra_pcm_ptr		35428	1					
ANR	36027	CastExpression	( uint8_t * ) h -> intra_pcm_ptr		35428	0					
ANR	36028	CastTarget	uint8_t *		35428	0					
ANR	36029	PtrMemberAccess	h -> intra_pcm_ptr		35428	1					
ANR	36030	Identifier	h		35428	0					
ANR	36031	Identifier	intra_pcm_ptr		35428	1					
ANR	36032	Argument	ff_h264_mb_sizes [ h -> sps . chroma_format_idc ] * bit_depth		35428	2					
ANR	36033	MultiplicativeExpression	ff_h264_mb_sizes [ h -> sps . chroma_format_idc ] * bit_depth		35428	0		*			
ANR	36034	ArrayIndexing	ff_h264_mb_sizes [ h -> sps . chroma_format_idc ]		35428	0					
ANR	36035	Identifier	ff_h264_mb_sizes		35428	0					
ANR	36036	MemberAccess	h -> sps . chroma_format_idc		35428	1					
ANR	36037	PtrMemberAccess	h -> sps		35428	0					
ANR	36038	Identifier	h		35428	0					
ANR	36039	Identifier	sps		35428	1					
ANR	36040	Identifier	chroma_format_idc		35428	1					
ANR	36041	Identifier	bit_depth		35428	1					
ANR	36042	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		35428	3					
ANR	36043	ForInit	i = 0 ;	135:17:3073:3078	35428	0	True				
ANR	36044	AssignmentExpression	i = 0		35428	0		=			
ANR	36045	Identifier	i		35428	0					
ANR	36046	PrimaryExpression	0		35428	1					
ANR	36047	Condition	i < 16	135:24:3080:3085	35428	1	True				
ANR	36048	RelationalExpression	i < 16		35428	0		<			
ANR	36049	Identifier	i		35428	0					
ANR	36050	PrimaryExpression	16		35428	1					
ANR	36051	PostIncDecOperationExpression	i ++	135:32:3088:3090	35428	2	True				
ANR	36052	Identifier	i		35428	0					
ANR	36053	IncDec	++		35428	1					
ANR	36054	CompoundStatement		135:16:3051:3104	35428	3					
ANR	36055	IdentifierDeclStatement	uint16_t * tmp_y = ( uint16_t * ) ( dest_y + i * linesize ) ;	137:16:3112:3165	35428	0	True				
ANR	36056	IdentifierDecl	* tmp_y = ( uint16_t * ) ( dest_y + i * linesize )		35428	0					
ANR	36057	IdentifierDeclType	uint16_t *		35428	0					
ANR	36058	Identifier	tmp_y		35428	1					
ANR	36059	AssignmentExpression	* tmp_y = ( uint16_t * ) ( dest_y + i * linesize )		35428	2		=			
ANR	36060	Identifier	tmp_y		35428	0					
ANR	36061	CastExpression	( uint16_t * ) ( dest_y + i * linesize )		35428	1					
ANR	36062	CastTarget	uint16_t *		35428	0					
ANR	36063	AdditiveExpression	dest_y + i * linesize		35428	1		+			
ANR	36064	Identifier	dest_y		35428	0					
ANR	36065	MultiplicativeExpression	i * linesize		35428	1		*			
ANR	36066	Identifier	i		35428	0					
ANR	36067	Identifier	linesize		35428	1					
ANR	36068	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		35428	1					
ANR	36069	ForInit	j = 0 ;	139:21:3189:3194	35428	0	True				
ANR	36070	AssignmentExpression	j = 0		35428	0		=			
ANR	36071	Identifier	j		35428	0					
ANR	36072	PrimaryExpression	0		35428	1					
ANR	36073	Condition	j < 16	139:28:3196:3201	35428	1	True				
ANR	36074	RelationalExpression	j < 16		35428	0		<			
ANR	36075	Identifier	j		35428	0					
ANR	36076	PrimaryExpression	16		35428	1					
ANR	36077	PostIncDecOperationExpression	j ++	139:36:3204:3206	35428	2	True				
ANR	36078	Identifier	j		35428	0					
ANR	36079	IncDec	++		35428	1					
ANR	36080	ExpressionStatement	"tmp_y [ j ] = get_bits ( & gb , bit_depth )"	141:20:3230:3265	35428	3	True				
ANR	36081	AssignmentExpression	"tmp_y [ j ] = get_bits ( & gb , bit_depth )"		35428	0		=			
ANR	36082	ArrayIndexing	tmp_y [ j ]		35428	0					
ANR	36083	Identifier	tmp_y		35428	0					
ANR	36084	Identifier	j		35428	1					
ANR	36085	CallExpression	"get_bits ( & gb , bit_depth )"		35428	1					
ANR	36086	Callee	get_bits		35428	0					
ANR	36087	Identifier	get_bits		35428	0					
ANR	36088	ArgumentList	& gb		35428	1					
ANR	36089	Argument	& gb		35428	0					
ANR	36090	UnaryOperationExpression	& gb		35428	0					
ANR	36091	UnaryOperator	&		35428	0					
ANR	36092	Identifier	gb		35428	1					
ANR	36093	Argument	bit_depth		35428	1					
ANR	36094	Identifier	bit_depth		35428	0					
ANR	36095	IfStatement	if ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY ) )		35428	4					
ANR	36096	Condition	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )	145:16:3299:3353	35428	0	True				
ANR	36097	OrExpression	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )		35428	0		||			
ANR	36098	Identifier	SIMPLE		35428	0					
ANR	36099	OrExpression	! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )		35428	1		||			
ANR	36100	UnaryOperationExpression	! CONFIG_GRAY		35428	0					
ANR	36101	UnaryOperator	!		35428	0					
ANR	36102	Identifier	CONFIG_GRAY		35428	1					
ANR	36103	UnaryOperationExpression	! ( h -> flags & CODEC_FLAG_GRAY )		35428	1					
ANR	36104	UnaryOperator	!		35428	0					
ANR	36105	BitAndExpression	h -> flags & CODEC_FLAG_GRAY		35428	1		&			
ANR	36106	PtrMemberAccess	h -> flags		35428	0					
ANR	36107	Identifier	h		35428	0					
ANR	36108	Identifier	flags		35428	1					
ANR	36109	Identifier	CODEC_FLAG_GRAY		35428	1					
ANR	36110	CompoundStatement		143:73:3295:3295	35428	1					
ANR	36111	IfStatement	if ( ! h -> sps . chroma_format_idc )		35428	0					
ANR	36112	Condition	! h -> sps . chroma_format_idc	147:20:3379:3403	35428	0	True				
ANR	36113	UnaryOperationExpression	! h -> sps . chroma_format_idc		35428	0					
ANR	36114	UnaryOperator	!		35428	0					
ANR	36115	MemberAccess	h -> sps . chroma_format_idc		35428	1					
ANR	36116	PtrMemberAccess	h -> sps		35428	0					
ANR	36117	Identifier	h		35428	0					
ANR	36118	Identifier	sps		35428	1					
ANR	36119	Identifier	chroma_format_idc		35428	1					
ANR	36120	CompoundStatement		145:47:3345:3345	35428	1					
ANR	36121	ForStatement	for ( i = 0 ; i < block_h ; i ++ )		35428	0					
ANR	36122	ForInit	i = 0 ;	149:25:3434:3439	35428	0	True				
ANR	36123	AssignmentExpression	i = 0		35428	0		=			
ANR	36124	Identifier	i		35428	0					
ANR	36125	PrimaryExpression	0		35428	1					
ANR	36126	Condition	i < block_h	149:32:3441:3451	35428	1	True				
ANR	36127	RelationalExpression	i < block_h		35428	0		<			
ANR	36128	Identifier	i		35428	0					
ANR	36129	Identifier	block_h		35428	1					
ANR	36130	PostIncDecOperationExpression	i ++	149:45:3454:3456	35428	2	True				
ANR	36131	Identifier	i		35428	0					
ANR	36132	IncDec	++		35428	1					
ANR	36133	CompoundStatement		151:24:3509:3566	35428	3					
ANR	36134	IdentifierDeclStatement	uint16_t * tmp_cb = ( uint16_t * ) ( dest_cb + i * uvlinesize ) ;	151:24:3486:3543	35428	0	True				
ANR	36135	IdentifierDecl	* tmp_cb = ( uint16_t * ) ( dest_cb + i * uvlinesize )		35428	0					
ANR	36136	IdentifierDeclType	uint16_t *		35428	0					
ANR	36137	Identifier	tmp_cb		35428	1					
ANR	36138	AssignmentExpression	* tmp_cb = ( uint16_t * ) ( dest_cb + i * uvlinesize )		35428	2		=			
ANR	36139	Identifier	tmp_cb		35428	0					
ANR	36140	CastExpression	( uint16_t * ) ( dest_cb + i * uvlinesize )		35428	1					
ANR	36141	CastTarget	uint16_t *		35428	0					
ANR	36142	AdditiveExpression	dest_cb + i * uvlinesize		35428	1		+			
ANR	36143	Identifier	dest_cb		35428	0					
ANR	36144	MultiplicativeExpression	i * uvlinesize		35428	1		*			
ANR	36145	Identifier	i		35428	0					
ANR	36146	Identifier	uvlinesize		35428	1					
ANR	36147	IdentifierDeclStatement	uint16_t * tmp_cr = ( uint16_t * ) ( dest_cr + i * uvlinesize ) ;	153:24:3570:3627	35428	1	True				
ANR	36148	IdentifierDecl	* tmp_cr = ( uint16_t * ) ( dest_cr + i * uvlinesize )		35428	0					
ANR	36149	IdentifierDeclType	uint16_t *		35428	0					
ANR	36150	Identifier	tmp_cr		35428	1					
ANR	36151	AssignmentExpression	* tmp_cr = ( uint16_t * ) ( dest_cr + i * uvlinesize )		35428	2		=			
ANR	36152	Identifier	tmp_cr		35428	0					
ANR	36153	CastExpression	( uint16_t * ) ( dest_cr + i * uvlinesize )		35428	1					
ANR	36154	CastTarget	uint16_t *		35428	0					
ANR	36155	AdditiveExpression	dest_cr + i * uvlinesize		35428	1		+			
ANR	36156	Identifier	dest_cr		35428	0					
ANR	36157	MultiplicativeExpression	i * uvlinesize		35428	1		*			
ANR	36158	Identifier	i		35428	0					
ANR	36159	Identifier	uvlinesize		35428	1					
ANR	36160	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		35428	2					
ANR	36161	ForInit	j = 0 ;	155:29:3659:3664	35428	0	True				
ANR	36162	AssignmentExpression	j = 0		35428	0		=			
ANR	36163	Identifier	j		35428	0					
ANR	36164	PrimaryExpression	0		35428	1					
ANR	36165	Condition	j < 8	155:36:3666:3670	35428	1	True				
ANR	36166	RelationalExpression	j < 8		35428	0		<			
ANR	36167	Identifier	j		35428	0					
ANR	36168	PrimaryExpression	8		35428	1					
ANR	36169	PostIncDecOperationExpression	j ++	155:43:3673:3675	35428	2	True				
ANR	36170	Identifier	j		35428	0					
ANR	36171	IncDec	++		35428	1					
ANR	36172	CompoundStatement		153:48:3617:3617	35428	3					
ANR	36173	ExpressionStatement	tmp_cb [ j ] = tmp_cr [ j ] = 1 << ( bit_depth - 1 )	157:28:3709:3753	35428	0	True				
ANR	36174	AssignmentExpression	tmp_cb [ j ] = tmp_cr [ j ] = 1 << ( bit_depth - 1 )		35428	0		=			
ANR	36175	ArrayIndexing	tmp_cb [ j ]		35428	0					
ANR	36176	Identifier	tmp_cb		35428	0					
ANR	36177	Identifier	j		35428	1					
ANR	36178	AssignmentExpression	tmp_cr [ j ] = 1 << ( bit_depth - 1 )		35428	1		=			
ANR	36179	ArrayIndexing	tmp_cr [ j ]		35428	0					
ANR	36180	Identifier	tmp_cr		35428	0					
ANR	36181	Identifier	j		35428	1					
ANR	36182	ShiftExpression	1 << ( bit_depth - 1 )		35428	1		<<			
ANR	36183	PrimaryExpression	1		35428	0					
ANR	36184	AdditiveExpression	bit_depth - 1		35428	1		-			
ANR	36185	Identifier	bit_depth		35428	0					
ANR	36186	PrimaryExpression	1		35428	1					
ANR	36187	ElseStatement	else		35428	0					
ANR	36188	CompoundStatement		161:23:3768:3768	35428	0					
ANR	36189	ForStatement	for ( i = 0 ; i < block_h ; i ++ )		35428	0					
ANR	36190	ForInit	i = 0 ;	165:25:3857:3862	35428	0	True				
ANR	36191	AssignmentExpression	i = 0		35428	0		=			
ANR	36192	Identifier	i		35428	0					
ANR	36193	PrimaryExpression	0		35428	1					
ANR	36194	Condition	i < block_h	165:32:3864:3874	35428	1	True				
ANR	36195	RelationalExpression	i < block_h		35428	0		<			
ANR	36196	Identifier	i		35428	0					
ANR	36197	Identifier	block_h		35428	1					
ANR	36198	PostIncDecOperationExpression	i ++	165:45:3877:3879	35428	2	True				
ANR	36199	Identifier	i		35428	0					
ANR	36200	IncDec	++		35428	1					
ANR	36201	CompoundStatement		165:24:3848:3905	35428	3					
ANR	36202	IdentifierDeclStatement	uint16_t * tmp_cb = ( uint16_t * ) ( dest_cb + i * uvlinesize ) ;	167:24:3909:3966	35428	0	True				
ANR	36203	IdentifierDecl	* tmp_cb = ( uint16_t * ) ( dest_cb + i * uvlinesize )		35428	0					
ANR	36204	IdentifierDeclType	uint16_t *		35428	0					
ANR	36205	Identifier	tmp_cb		35428	1					
ANR	36206	AssignmentExpression	* tmp_cb = ( uint16_t * ) ( dest_cb + i * uvlinesize )		35428	2		=			
ANR	36207	Identifier	tmp_cb		35428	0					
ANR	36208	CastExpression	( uint16_t * ) ( dest_cb + i * uvlinesize )		35428	1					
ANR	36209	CastTarget	uint16_t *		35428	0					
ANR	36210	AdditiveExpression	dest_cb + i * uvlinesize		35428	1		+			
ANR	36211	Identifier	dest_cb		35428	0					
ANR	36212	MultiplicativeExpression	i * uvlinesize		35428	1		*			
ANR	36213	Identifier	i		35428	0					
ANR	36214	Identifier	uvlinesize		35428	1					
ANR	36215	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		35428	1					
ANR	36216	ForInit	j = 0 ;	169:29:3998:4003	35428	0	True				
ANR	36217	AssignmentExpression	j = 0		35428	0		=			
ANR	36218	Identifier	j		35428	0					
ANR	36219	PrimaryExpression	0		35428	1					
ANR	36220	Condition	j < 8	169:36:4005:4009	35428	1	True				
ANR	36221	RelationalExpression	j < 8		35428	0		<			
ANR	36222	Identifier	j		35428	0					
ANR	36223	PrimaryExpression	8		35428	1					
ANR	36224	PostIncDecOperationExpression	j ++	169:43:4012:4014	35428	2	True				
ANR	36225	Identifier	j		35428	0					
ANR	36226	IncDec	++		35428	1					
ANR	36227	ExpressionStatement	"tmp_cb [ j ] = get_bits ( & gb , bit_depth )"	171:28:4046:4082	35428	3	True				
ANR	36228	AssignmentExpression	"tmp_cb [ j ] = get_bits ( & gb , bit_depth )"		35428	0		=			
ANR	36229	ArrayIndexing	tmp_cb [ j ]		35428	0					
ANR	36230	Identifier	tmp_cb		35428	0					
ANR	36231	Identifier	j		35428	1					
ANR	36232	CallExpression	"get_bits ( & gb , bit_depth )"		35428	1					
ANR	36233	Callee	get_bits		35428	0					
ANR	36234	Identifier	get_bits		35428	0					
ANR	36235	ArgumentList	& gb		35428	1					
ANR	36236	Argument	& gb		35428	0					
ANR	36237	UnaryOperationExpression	& gb		35428	0					
ANR	36238	UnaryOperator	&		35428	0					
ANR	36239	Identifier	gb		35428	1					
ANR	36240	Argument	bit_depth		35428	1					
ANR	36241	Identifier	bit_depth		35428	0					
ANR	36242	ForStatement	for ( i = 0 ; i < block_h ; i ++ )		35428	1					
ANR	36243	ForInit	i = 0 ;	175:25:4133:4138	35428	0	True				
ANR	36244	AssignmentExpression	i = 0		35428	0		=			
ANR	36245	Identifier	i		35428	0					
ANR	36246	PrimaryExpression	0		35428	1					
ANR	36247	Condition	i < block_h	175:32:4140:4150	35428	1	True				
ANR	36248	RelationalExpression	i < block_h		35428	0		<			
ANR	36249	Identifier	i		35428	0					
ANR	36250	Identifier	block_h		35428	1					
ANR	36251	PostIncDecOperationExpression	i ++	175:45:4153:4155	35428	2	True				
ANR	36252	Identifier	i		35428	0					
ANR	36253	IncDec	++		35428	1					
ANR	36254	CompoundStatement		175:24:4124:4181	35428	3					
ANR	36255	IdentifierDeclStatement	uint16_t * tmp_cr = ( uint16_t * ) ( dest_cr + i * uvlinesize ) ;	177:24:4185:4242	35428	0	True				
ANR	36256	IdentifierDecl	* tmp_cr = ( uint16_t * ) ( dest_cr + i * uvlinesize )		35428	0					
ANR	36257	IdentifierDeclType	uint16_t *		35428	0					
ANR	36258	Identifier	tmp_cr		35428	1					
ANR	36259	AssignmentExpression	* tmp_cr = ( uint16_t * ) ( dest_cr + i * uvlinesize )		35428	2		=			
ANR	36260	Identifier	tmp_cr		35428	0					
ANR	36261	CastExpression	( uint16_t * ) ( dest_cr + i * uvlinesize )		35428	1					
ANR	36262	CastTarget	uint16_t *		35428	0					
ANR	36263	AdditiveExpression	dest_cr + i * uvlinesize		35428	1		+			
ANR	36264	Identifier	dest_cr		35428	0					
ANR	36265	MultiplicativeExpression	i * uvlinesize		35428	1		*			
ANR	36266	Identifier	i		35428	0					
ANR	36267	Identifier	uvlinesize		35428	1					
ANR	36268	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		35428	1					
ANR	36269	ForInit	j = 0 ;	179:29:4274:4279	35428	0	True				
ANR	36270	AssignmentExpression	j = 0		35428	0		=			
ANR	36271	Identifier	j		35428	0					
ANR	36272	PrimaryExpression	0		35428	1					
ANR	36273	Condition	j < 8	179:36:4281:4285	35428	1	True				
ANR	36274	RelationalExpression	j < 8		35428	0		<			
ANR	36275	Identifier	j		35428	0					
ANR	36276	PrimaryExpression	8		35428	1					
ANR	36277	PostIncDecOperationExpression	j ++	179:43:4288:4290	35428	2	True				
ANR	36278	Identifier	j		35428	0					
ANR	36279	IncDec	++		35428	1					
ANR	36280	ExpressionStatement	"tmp_cr [ j ] = get_bits ( & gb , bit_depth )"	181:28:4322:4358	35428	3	True				
ANR	36281	AssignmentExpression	"tmp_cr [ j ] = get_bits ( & gb , bit_depth )"		35428	0		=			
ANR	36282	ArrayIndexing	tmp_cr [ j ]		35428	0					
ANR	36283	Identifier	tmp_cr		35428	0					
ANR	36284	Identifier	j		35428	1					
ANR	36285	CallExpression	"get_bits ( & gb , bit_depth )"		35428	1					
ANR	36286	Callee	get_bits		35428	0					
ANR	36287	Identifier	get_bits		35428	0					
ANR	36288	ArgumentList	& gb		35428	1					
ANR	36289	Argument	& gb		35428	0					
ANR	36290	UnaryOperationExpression	& gb		35428	0					
ANR	36291	UnaryOperator	&		35428	0					
ANR	36292	Identifier	gb		35428	1					
ANR	36293	Argument	bit_depth		35428	1					
ANR	36294	Identifier	bit_depth		35428	0					
ANR	36295	ElseStatement	else		35428	0					
ANR	36296	CompoundStatement		187:15:4372:4372	35428	0					
ANR	36297	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		35428	0					
ANR	36298	ForInit	i = 0 ;	191:17:4453:4458	35428	0	True				
ANR	36299	AssignmentExpression	i = 0		35428	0		=			
ANR	36300	Identifier	i		35428	0					
ANR	36301	PrimaryExpression	0		35428	1					
ANR	36302	Condition	i < 16	191:24:4460:4465	35428	1	True				
ANR	36303	RelationalExpression	i < 16		35428	0		<			
ANR	36304	Identifier	i		35428	0					
ANR	36305	PrimaryExpression	16		35428	1					
ANR	36306	PostIncDecOperationExpression	i ++	191:32:4468:4470	35428	2	True				
ANR	36307	Identifier	i		35428	0					
ANR	36308	IncDec	++		35428	1					
ANR	36309	ExpressionStatement	"memcpy ( dest_y + i * linesize , ( uint8_t * ) h -> intra_pcm_ptr + i * 16 , 16 )"	193:16:4490:4561	35428	3	True				
ANR	36310	CallExpression	"memcpy ( dest_y + i * linesize , ( uint8_t * ) h -> intra_pcm_ptr + i * 16 , 16 )"		35428	0					
ANR	36311	Callee	memcpy		35428	0					
ANR	36312	Identifier	memcpy		35428	0					
ANR	36313	ArgumentList	dest_y + i * linesize		35428	1					
ANR	36314	Argument	dest_y + i * linesize		35428	0					
ANR	36315	AdditiveExpression	dest_y + i * linesize		35428	0		+			
ANR	36316	Identifier	dest_y		35428	0					
ANR	36317	MultiplicativeExpression	i * linesize		35428	1		*			
ANR	36318	Identifier	i		35428	0					
ANR	36319	Identifier	linesize		35428	1					
ANR	36320	Argument	( uint8_t * ) h -> intra_pcm_ptr + i * 16		35428	1					
ANR	36321	AdditiveExpression	( uint8_t * ) h -> intra_pcm_ptr + i * 16		35428	0		+			
ANR	36322	CastExpression	( uint8_t * ) h -> intra_pcm_ptr		35428	0					
ANR	36323	CastTarget	uint8_t *		35428	0					
ANR	36324	PtrMemberAccess	h -> intra_pcm_ptr		35428	1					
ANR	36325	Identifier	h		35428	0					
ANR	36326	Identifier	intra_pcm_ptr		35428	1					
ANR	36327	MultiplicativeExpression	i * 16		35428	1		*			
ANR	36328	Identifier	i		35428	0					
ANR	36329	PrimaryExpression	16		35428	1					
ANR	36330	Argument	16		35428	2					
ANR	36331	PrimaryExpression	16		35428	0					
ANR	36332	IfStatement	if ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY ) )		35428	1					
ANR	36333	Condition	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )	195:16:4580:4634	35428	0	True				
ANR	36334	OrExpression	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )		35428	0		||			
ANR	36335	Identifier	SIMPLE		35428	0					
ANR	36336	OrExpression	! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )		35428	1		||			
ANR	36337	UnaryOperationExpression	! CONFIG_GRAY		35428	0					
ANR	36338	UnaryOperator	!		35428	0					
ANR	36339	Identifier	CONFIG_GRAY		35428	1					
ANR	36340	UnaryOperationExpression	! ( h -> flags & CODEC_FLAG_GRAY )		35428	1					
ANR	36341	UnaryOperator	!		35428	0					
ANR	36342	BitAndExpression	h -> flags & CODEC_FLAG_GRAY		35428	1		&			
ANR	36343	PtrMemberAccess	h -> flags		35428	0					
ANR	36344	Identifier	h		35428	0					
ANR	36345	Identifier	flags		35428	1					
ANR	36346	Identifier	CODEC_FLAG_GRAY		35428	1					
ANR	36347	CompoundStatement		193:73:4576:4576	35428	1					
ANR	36348	IfStatement	if ( ! h -> sps . chroma_format_idc )		35428	0					
ANR	36349	Condition	! h -> sps . chroma_format_idc	197:20:4660:4684	35428	0	True				
ANR	36350	UnaryOperationExpression	! h -> sps . chroma_format_idc		35428	0					
ANR	36351	UnaryOperator	!		35428	0					
ANR	36352	MemberAccess	h -> sps . chroma_format_idc		35428	1					
ANR	36353	PtrMemberAccess	h -> sps		35428	0					
ANR	36354	Identifier	h		35428	0					
ANR	36355	Identifier	sps		35428	1					
ANR	36356	Identifier	chroma_format_idc		35428	1					
ANR	36357	CompoundStatement		195:47:4626:4626	35428	1					
ANR	36358	ForStatement	for ( i = 0 ; i < 8 ; i ++ )		35428	0					
ANR	36359	ForInit	i = 0 ;	199:25:4715:4720	35428	0	True				
ANR	36360	AssignmentExpression	i = 0		35428	0		=			
ANR	36361	Identifier	i		35428	0					
ANR	36362	PrimaryExpression	0		35428	1					
ANR	36363	Condition	i < 8	199:32:4722:4726	35428	1	True				
ANR	36364	RelationalExpression	i < 8		35428	0		<			
ANR	36365	Identifier	i		35428	0					
ANR	36366	PrimaryExpression	8		35428	1					
ANR	36367	PostIncDecOperationExpression	i ++	199:39:4729:4731	35428	2	True				
ANR	36368	Identifier	i		35428	0					
ANR	36369	IncDec	++		35428	1					
ANR	36370	CompoundStatement		197:44:4673:4673	35428	3					
ANR	36371	ExpressionStatement	"memset ( dest_cb + i * uvlinesize , 1 << ( bit_depth - 1 ) , 8 )"	201:24:4761:4816	35428	0	True				
ANR	36372	CallExpression	"memset ( dest_cb + i * uvlinesize , 1 << ( bit_depth - 1 ) , 8 )"		35428	0					
ANR	36373	Callee	memset		35428	0					
ANR	36374	Identifier	memset		35428	0					
ANR	36375	ArgumentList	dest_cb + i * uvlinesize		35428	1					
ANR	36376	Argument	dest_cb + i * uvlinesize		35428	0					
ANR	36377	AdditiveExpression	dest_cb + i * uvlinesize		35428	0		+			
ANR	36378	Identifier	dest_cb		35428	0					
ANR	36379	MultiplicativeExpression	i * uvlinesize		35428	1		*			
ANR	36380	Identifier	i		35428	0					
ANR	36381	Identifier	uvlinesize		35428	1					
ANR	36382	Argument	1 << ( bit_depth - 1 )		35428	1					
ANR	36383	ShiftExpression	1 << ( bit_depth - 1 )		35428	0		<<			
ANR	36384	PrimaryExpression	1		35428	0					
ANR	36385	AdditiveExpression	bit_depth - 1		35428	1		-			
ANR	36386	Identifier	bit_depth		35428	0					
ANR	36387	PrimaryExpression	1		35428	1					
ANR	36388	Argument	8		35428	2					
ANR	36389	PrimaryExpression	8		35428	0					
ANR	36390	ExpressionStatement	"memset ( dest_cr + i * uvlinesize , 1 << ( bit_depth - 1 ) , 8 )"	203:24:4843:4898	35428	1	True				
ANR	36391	CallExpression	"memset ( dest_cr + i * uvlinesize , 1 << ( bit_depth - 1 ) , 8 )"		35428	0					
ANR	36392	Callee	memset		35428	0					
ANR	36393	Identifier	memset		35428	0					
ANR	36394	ArgumentList	dest_cr + i * uvlinesize		35428	1					
ANR	36395	Argument	dest_cr + i * uvlinesize		35428	0					
ANR	36396	AdditiveExpression	dest_cr + i * uvlinesize		35428	0		+			
ANR	36397	Identifier	dest_cr		35428	0					
ANR	36398	MultiplicativeExpression	i * uvlinesize		35428	1		*			
ANR	36399	Identifier	i		35428	0					
ANR	36400	Identifier	uvlinesize		35428	1					
ANR	36401	Argument	1 << ( bit_depth - 1 )		35428	1					
ANR	36402	ShiftExpression	1 << ( bit_depth - 1 )		35428	0		<<			
ANR	36403	PrimaryExpression	1		35428	0					
ANR	36404	AdditiveExpression	bit_depth - 1		35428	1		-			
ANR	36405	Identifier	bit_depth		35428	0					
ANR	36406	PrimaryExpression	1		35428	1					
ANR	36407	Argument	8		35428	2					
ANR	36408	PrimaryExpression	8		35428	0					
ANR	36409	ElseStatement	else		35428	0					
ANR	36410	CompoundStatement		209:20:4983:5048	35428	0					
ANR	36411	IdentifierDeclStatement	uint8_t * src_cb = ( uint8_t * ) h -> intra_pcm_ptr + 256 ;	209:20:4970:5021	35428	0	True				
ANR	36412	IdentifierDecl	* src_cb = ( uint8_t * ) h -> intra_pcm_ptr + 256		35428	0					
ANR	36413	IdentifierDeclType	uint8_t *		35428	0					
ANR	36414	Identifier	src_cb		35428	1					
ANR	36415	AssignmentExpression	* src_cb = ( uint8_t * ) h -> intra_pcm_ptr + 256		35428	2		=			
ANR	36416	Identifier	src_cb		35428	0					
ANR	36417	AdditiveExpression	( uint8_t * ) h -> intra_pcm_ptr + 256		35428	1		+			
ANR	36418	CastExpression	( uint8_t * ) h -> intra_pcm_ptr		35428	0					
ANR	36419	CastTarget	uint8_t *		35428	0					
ANR	36420	PtrMemberAccess	h -> intra_pcm_ptr		35428	1					
ANR	36421	Identifier	h		35428	0					
ANR	36422	Identifier	intra_pcm_ptr		35428	1					
ANR	36423	PrimaryExpression	256		35428	1					
ANR	36424	IdentifierDeclStatement	uint8_t * src_cr = ( uint8_t * ) h -> intra_pcm_ptr + 256 + block_h * 8 ;	211:20:5044:5109	35428	1	True				
ANR	36425	IdentifierDecl	* src_cr = ( uint8_t * ) h -> intra_pcm_ptr + 256 + block_h * 8		35428	0					
ANR	36426	IdentifierDeclType	uint8_t *		35428	0					
ANR	36427	Identifier	src_cr		35428	1					
ANR	36428	AssignmentExpression	* src_cr = ( uint8_t * ) h -> intra_pcm_ptr + 256 + block_h * 8		35428	2		=			
ANR	36429	Identifier	src_cr		35428	0					
ANR	36430	AdditiveExpression	( uint8_t * ) h -> intra_pcm_ptr + 256 + block_h * 8		35428	1		+			
ANR	36431	CastExpression	( uint8_t * ) h -> intra_pcm_ptr		35428	0					
ANR	36432	CastTarget	uint8_t *		35428	0					
ANR	36433	PtrMemberAccess	h -> intra_pcm_ptr		35428	1					
ANR	36434	Identifier	h		35428	0					
ANR	36435	Identifier	intra_pcm_ptr		35428	1					
ANR	36436	AdditiveExpression	256 + block_h * 8		35428	1		+			
ANR	36437	PrimaryExpression	256		35428	0					
ANR	36438	MultiplicativeExpression	block_h * 8		35428	1		*			
ANR	36439	Identifier	block_h		35428	0					
ANR	36440	PrimaryExpression	8		35428	1					
ANR	36441	ForStatement	for ( i = 0 ; i < block_h ; i ++ )		35428	2					
ANR	36442	ForInit	i = 0 ;	213:25:5137:5142	35428	0	True				
ANR	36443	AssignmentExpression	i = 0		35428	0		=			
ANR	36444	Identifier	i		35428	0					
ANR	36445	PrimaryExpression	0		35428	1					
ANR	36446	Condition	i < block_h	213:32:5144:5154	35428	1	True				
ANR	36447	RelationalExpression	i < block_h		35428	0		<			
ANR	36448	Identifier	i		35428	0					
ANR	36449	Identifier	block_h		35428	1					
ANR	36450	PostIncDecOperationExpression	i ++	213:45:5157:5159	35428	2	True				
ANR	36451	Identifier	i		35428	0					
ANR	36452	IncDec	++		35428	1					
ANR	36453	CompoundStatement		211:50:5101:5101	35428	3					
ANR	36454	ExpressionStatement	"memcpy ( dest_cb + i * uvlinesize , src_cb + i * 8 , 8 )"	215:24:5189:5240	35428	0	True				
ANR	36455	CallExpression	"memcpy ( dest_cb + i * uvlinesize , src_cb + i * 8 , 8 )"		35428	0					
ANR	36456	Callee	memcpy		35428	0					
ANR	36457	Identifier	memcpy		35428	0					
ANR	36458	ArgumentList	dest_cb + i * uvlinesize		35428	1					
ANR	36459	Argument	dest_cb + i * uvlinesize		35428	0					
ANR	36460	AdditiveExpression	dest_cb + i * uvlinesize		35428	0		+			
ANR	36461	Identifier	dest_cb		35428	0					
ANR	36462	MultiplicativeExpression	i * uvlinesize		35428	1		*			
ANR	36463	Identifier	i		35428	0					
ANR	36464	Identifier	uvlinesize		35428	1					
ANR	36465	Argument	src_cb + i * 8		35428	1					
ANR	36466	AdditiveExpression	src_cb + i * 8		35428	0		+			
ANR	36467	Identifier	src_cb		35428	0					
ANR	36468	MultiplicativeExpression	i * 8		35428	1		*			
ANR	36469	Identifier	i		35428	0					
ANR	36470	PrimaryExpression	8		35428	1					
ANR	36471	Argument	8		35428	2					
ANR	36472	PrimaryExpression	8		35428	0					
ANR	36473	ExpressionStatement	"memcpy ( dest_cr + i * uvlinesize , src_cr + i * 8 , 8 )"	217:24:5267:5318	35428	1	True				
ANR	36474	CallExpression	"memcpy ( dest_cr + i * uvlinesize , src_cr + i * 8 , 8 )"		35428	0					
ANR	36475	Callee	memcpy		35428	0					
ANR	36476	Identifier	memcpy		35428	0					
ANR	36477	ArgumentList	dest_cr + i * uvlinesize		35428	1					
ANR	36478	Argument	dest_cr + i * uvlinesize		35428	0					
ANR	36479	AdditiveExpression	dest_cr + i * uvlinesize		35428	0		+			
ANR	36480	Identifier	dest_cr		35428	0					
ANR	36481	MultiplicativeExpression	i * uvlinesize		35428	1		*			
ANR	36482	Identifier	i		35428	0					
ANR	36483	Identifier	uvlinesize		35428	1					
ANR	36484	Argument	src_cr + i * 8		35428	1					
ANR	36485	AdditiveExpression	src_cr + i * 8		35428	0		+			
ANR	36486	Identifier	src_cr		35428	0					
ANR	36487	MultiplicativeExpression	i * 8		35428	1		*			
ANR	36488	Identifier	i		35428	0					
ANR	36489	PrimaryExpression	8		35428	1					
ANR	36490	Argument	8		35428	2					
ANR	36491	PrimaryExpression	8		35428	0					
ANR	36492	ElseStatement	else		35428	0					
ANR	36493	CompoundStatement		225:11:5339:5339	35428	0					
ANR	36494	IfStatement	if ( IS_INTRA ( mb_type ) )		35428	0					
ANR	36495	Condition	IS_INTRA ( mb_type )	229:12:5415:5431	35428	0	True				
ANR	36496	CallExpression	IS_INTRA ( mb_type )		35428	0					
ANR	36497	Callee	IS_INTRA		35428	0					
ANR	36498	Identifier	IS_INTRA		35428	0					
ANR	36499	ArgumentList	mb_type		35428	1					
ANR	36500	Argument	mb_type		35428	0					
ANR	36501	Identifier	mb_type		35428	0					
ANR	36502	CompoundStatement		227:31:5373:5373	35428	1					
ANR	36503	IfStatement	if ( h -> deblocking_filter )		35428	0					
ANR	36504	Condition	h -> deblocking_filter	231:16:5453:5472	35428	0	True				
ANR	36505	PtrMemberAccess	h -> deblocking_filter		35428	0					
ANR	36506	Identifier	h		35428	0					
ANR	36507	Identifier	deblocking_filter		35428	1					
ANR	36508	ExpressionStatement	"xchg_mb_border ( h , dest_y , dest_cb , dest_cr , linesize , uvlinesize , 1 , 0 , SIMPLE , PIXEL_SHIFT )"	233:16:5492:5616	35428	1	True				
ANR	36509	CallExpression	"xchg_mb_border ( h , dest_y , dest_cb , dest_cr , linesize , uvlinesize , 1 , 0 , SIMPLE , PIXEL_SHIFT )"		35428	0					
ANR	36510	Callee	xchg_mb_border		35428	0					
ANR	36511	Identifier	xchg_mb_border		35428	0					
ANR	36512	ArgumentList	h		35428	1					
ANR	36513	Argument	h		35428	0					
ANR	36514	Identifier	h		35428	0					
ANR	36515	Argument	dest_y		35428	1					
ANR	36516	Identifier	dest_y		35428	0					
ANR	36517	Argument	dest_cb		35428	2					
ANR	36518	Identifier	dest_cb		35428	0					
ANR	36519	Argument	dest_cr		35428	3					
ANR	36520	Identifier	dest_cr		35428	0					
ANR	36521	Argument	linesize		35428	4					
ANR	36522	Identifier	linesize		35428	0					
ANR	36523	Argument	uvlinesize		35428	5					
ANR	36524	Identifier	uvlinesize		35428	0					
ANR	36525	Argument	1		35428	6					
ANR	36526	PrimaryExpression	1		35428	0					
ANR	36527	Argument	0		35428	7					
ANR	36528	PrimaryExpression	0		35428	0					
ANR	36529	Argument	SIMPLE		35428	8					
ANR	36530	Identifier	SIMPLE		35428	0					
ANR	36531	Argument	PIXEL_SHIFT		35428	9					
ANR	36532	Identifier	PIXEL_SHIFT		35428	0					
ANR	36533	IfStatement	if ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY ) )		35428	1					
ANR	36534	Condition	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )	239:16:5637:5691	35428	0	True				
ANR	36535	OrExpression	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )		35428	0		||			
ANR	36536	Identifier	SIMPLE		35428	0					
ANR	36537	OrExpression	! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )		35428	1		||			
ANR	36538	UnaryOperationExpression	! CONFIG_GRAY		35428	0					
ANR	36539	UnaryOperator	!		35428	0					
ANR	36540	Identifier	CONFIG_GRAY		35428	1					
ANR	36541	UnaryOperationExpression	! ( h -> flags & CODEC_FLAG_GRAY )		35428	1					
ANR	36542	UnaryOperator	!		35428	0					
ANR	36543	BitAndExpression	h -> flags & CODEC_FLAG_GRAY		35428	1		&			
ANR	36544	PtrMemberAccess	h -> flags		35428	0					
ANR	36545	Identifier	h		35428	0					
ANR	36546	Identifier	flags		35428	1					
ANR	36547	Identifier	CODEC_FLAG_GRAY		35428	1					
ANR	36548	CompoundStatement		237:73:5633:5633	35428	1					
ANR	36549	ExpressionStatement	"h -> hpc . pred8x8 [ h -> chroma_pred_mode ] ( dest_cb , uvlinesize )"	241:16:5713:5769	35428	0	True				
ANR	36550	CallExpression	"h -> hpc . pred8x8 [ h -> chroma_pred_mode ] ( dest_cb , uvlinesize )"		35428	0					
ANR	36551	Callee	h -> hpc . pred8x8 [ h -> chroma_pred_mode ]		35428	0					
ANR	36552	ArrayIndexing	h -> hpc . pred8x8 [ h -> chroma_pred_mode ]		35428	0					
ANR	36553	MemberAccess	h -> hpc . pred8x8		35428	0					
ANR	36554	PtrMemberAccess	h -> hpc		35428	0					
ANR	36555	Identifier	h		35428	0					
ANR	36556	Identifier	hpc		35428	1					
ANR	36557	Identifier	pred8x8		35428	1					
ANR	36558	PtrMemberAccess	h -> chroma_pred_mode		35428	1					
ANR	36559	Identifier	h		35428	0					
ANR	36560	Identifier	chroma_pred_mode		35428	1					
ANR	36561	ArgumentList	dest_cb		35428	1					
ANR	36562	Argument	dest_cb		35428	0					
ANR	36563	Identifier	dest_cb		35428	0					
ANR	36564	Argument	uvlinesize		35428	1					
ANR	36565	Identifier	uvlinesize		35428	0					
ANR	36566	ExpressionStatement	"h -> hpc . pred8x8 [ h -> chroma_pred_mode ] ( dest_cr , uvlinesize )"	243:16:5788:5844	35428	1	True				
ANR	36567	CallExpression	"h -> hpc . pred8x8 [ h -> chroma_pred_mode ] ( dest_cr , uvlinesize )"		35428	0					
ANR	36568	Callee	h -> hpc . pred8x8 [ h -> chroma_pred_mode ]		35428	0					
ANR	36569	ArrayIndexing	h -> hpc . pred8x8 [ h -> chroma_pred_mode ]		35428	0					
ANR	36570	MemberAccess	h -> hpc . pred8x8		35428	0					
ANR	36571	PtrMemberAccess	h -> hpc		35428	0					
ANR	36572	Identifier	h		35428	0					
ANR	36573	Identifier	hpc		35428	1					
ANR	36574	Identifier	pred8x8		35428	1					
ANR	36575	PtrMemberAccess	h -> chroma_pred_mode		35428	1					
ANR	36576	Identifier	h		35428	0					
ANR	36577	Identifier	chroma_pred_mode		35428	1					
ANR	36578	ArgumentList	dest_cr		35428	1					
ANR	36579	Argument	dest_cr		35428	0					
ANR	36580	Identifier	dest_cr		35428	0					
ANR	36581	Argument	uvlinesize		35428	1					
ANR	36582	Identifier	uvlinesize		35428	0					
ANR	36583	ExpressionStatement	"hl_decode_mb_predict_luma ( h , mb_type , is_h264 , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest_y , 0 )"	249:12:5876:6074	35428	2	True				
ANR	36584	CallExpression	"hl_decode_mb_predict_luma ( h , mb_type , is_h264 , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest_y , 0 )"		35428	0					
ANR	36585	Callee	hl_decode_mb_predict_luma		35428	0					
ANR	36586	Identifier	hl_decode_mb_predict_luma		35428	0					
ANR	36587	ArgumentList	h		35428	1					
ANR	36588	Argument	h		35428	0					
ANR	36589	Identifier	h		35428	0					
ANR	36590	Argument	mb_type		35428	1					
ANR	36591	Identifier	mb_type		35428	0					
ANR	36592	Argument	is_h264		35428	2					
ANR	36593	Identifier	is_h264		35428	0					
ANR	36594	Argument	SIMPLE		35428	3					
ANR	36595	Identifier	SIMPLE		35428	0					
ANR	36596	Argument	transform_bypass		35428	4					
ANR	36597	Identifier	transform_bypass		35428	0					
ANR	36598	Argument	PIXEL_SHIFT		35428	5					
ANR	36599	Identifier	PIXEL_SHIFT		35428	0					
ANR	36600	Argument	block_offset		35428	6					
ANR	36601	Identifier	block_offset		35428	0					
ANR	36602	Argument	linesize		35428	7					
ANR	36603	Identifier	linesize		35428	0					
ANR	36604	Argument	dest_y		35428	8					
ANR	36605	Identifier	dest_y		35428	0					
ANR	36606	Argument	0		35428	9					
ANR	36607	PrimaryExpression	0		35428	0					
ANR	36608	IfStatement	if ( h -> deblocking_filter )		35428	3					
ANR	36609	Condition	h -> deblocking_filter	257:16:6095:6114	35428	0	True				
ANR	36610	PtrMemberAccess	h -> deblocking_filter		35428	0					
ANR	36611	Identifier	h		35428	0					
ANR	36612	Identifier	deblocking_filter		35428	1					
ANR	36613	ExpressionStatement	"xchg_mb_border ( h , dest_y , dest_cb , dest_cr , linesize , uvlinesize , 0 , 0 , SIMPLE , PIXEL_SHIFT )"	259:16:6134:6258	35428	1	True				
ANR	36614	CallExpression	"xchg_mb_border ( h , dest_y , dest_cb , dest_cr , linesize , uvlinesize , 0 , 0 , SIMPLE , PIXEL_SHIFT )"		35428	0					
ANR	36615	Callee	xchg_mb_border		35428	0					
ANR	36616	Identifier	xchg_mb_border		35428	0					
ANR	36617	ArgumentList	h		35428	1					
ANR	36618	Argument	h		35428	0					
ANR	36619	Identifier	h		35428	0					
ANR	36620	Argument	dest_y		35428	1					
ANR	36621	Identifier	dest_y		35428	0					
ANR	36622	Argument	dest_cb		35428	2					
ANR	36623	Identifier	dest_cb		35428	0					
ANR	36624	Argument	dest_cr		35428	3					
ANR	36625	Identifier	dest_cr		35428	0					
ANR	36626	Argument	linesize		35428	4					
ANR	36627	Identifier	linesize		35428	0					
ANR	36628	Argument	uvlinesize		35428	5					
ANR	36629	Identifier	uvlinesize		35428	0					
ANR	36630	Argument	0		35428	6					
ANR	36631	PrimaryExpression	0		35428	0					
ANR	36632	Argument	0		35428	7					
ANR	36633	PrimaryExpression	0		35428	0					
ANR	36634	Argument	SIMPLE		35428	8					
ANR	36635	Identifier	SIMPLE		35428	0					
ANR	36636	Argument	PIXEL_SHIFT		35428	9					
ANR	36637	Identifier	PIXEL_SHIFT		35428	0					
ANR	36638	ElseStatement	else		35428	0					
ANR	36639	IfStatement	if ( is_h264 )		35428	0					
ANR	36640	Condition	is_h264	263:19:6280:6286	35428	0	True				
ANR	36641	Identifier	is_h264		35428	0					
ANR	36642	CompoundStatement		261:28:6228:6228	35428	1					
ANR	36643	IfStatement	if ( chroma422 )		35428	0					
ANR	36644	Condition	chroma422	265:16:6308:6316	35428	0	True				
ANR	36645	Identifier	chroma422		35428	0					
ANR	36646	CompoundStatement		263:27:6258:6258	35428	1					
ANR	36647	ExpressionStatement	"FUNC ( hl_motion_422 ) ( h , dest_y , dest_cb , dest_cr , h -> me . qpel_put , h -> h264chroma . put_h264_chroma_pixels_tab , h -> me . qpel_avg , h -> h264chroma . avg_h264_chroma_pixels_tab , h -> h264dsp . weight_h264_pixels_tab , h -> h264dsp . biweight_h264_pixels_tab )"	267:16:6338:6698	35428	0	True				
ANR	36648	CallExpression	"FUNC ( hl_motion_422 ) ( h , dest_y , dest_cb , dest_cr , h -> me . qpel_put , h -> h264chroma . put_h264_chroma_pixels_tab , h -> me . qpel_avg , h -> h264chroma . avg_h264_chroma_pixels_tab , h -> h264dsp . weight_h264_pixels_tab , h -> h264dsp . biweight_h264_pixels_tab )"		35428	0					
ANR	36649	Callee	FUNC ( hl_motion_422 )		35428	0					
ANR	36650	CallExpression	FUNC ( hl_motion_422 )		35428	0					
ANR	36651	Callee	FUNC		35428	0					
ANR	36652	Identifier	FUNC		35428	0					
ANR	36653	ArgumentList	hl_motion_422		35428	1					
ANR	36654	Argument	hl_motion_422		35428	0					
ANR	36655	Identifier	hl_motion_422		35428	0					
ANR	36656	ArgumentList	h		35428	1					
ANR	36657	Argument	h		35428	0					
ANR	36658	Identifier	h		35428	0					
ANR	36659	Argument	dest_y		35428	1					
ANR	36660	Identifier	dest_y		35428	0					
ANR	36661	Argument	dest_cb		35428	2					
ANR	36662	Identifier	dest_cb		35428	0					
ANR	36663	Argument	dest_cr		35428	3					
ANR	36664	Identifier	dest_cr		35428	0					
ANR	36665	Argument	h -> me . qpel_put		35428	4					
ANR	36666	MemberAccess	h -> me . qpel_put		35428	0					
ANR	36667	PtrMemberAccess	h -> me		35428	0					
ANR	36668	Identifier	h		35428	0					
ANR	36669	Identifier	me		35428	1					
ANR	36670	Identifier	qpel_put		35428	1					
ANR	36671	Argument	h -> h264chroma . put_h264_chroma_pixels_tab		35428	5					
ANR	36672	MemberAccess	h -> h264chroma . put_h264_chroma_pixels_tab		35428	0					
ANR	36673	PtrMemberAccess	h -> h264chroma		35428	0					
ANR	36674	Identifier	h		35428	0					
ANR	36675	Identifier	h264chroma		35428	1					
ANR	36676	Identifier	put_h264_chroma_pixels_tab		35428	1					
ANR	36677	Argument	h -> me . qpel_avg		35428	6					
ANR	36678	MemberAccess	h -> me . qpel_avg		35428	0					
ANR	36679	PtrMemberAccess	h -> me		35428	0					
ANR	36680	Identifier	h		35428	0					
ANR	36681	Identifier	me		35428	1					
ANR	36682	Identifier	qpel_avg		35428	1					
ANR	36683	Argument	h -> h264chroma . avg_h264_chroma_pixels_tab		35428	7					
ANR	36684	MemberAccess	h -> h264chroma . avg_h264_chroma_pixels_tab		35428	0					
ANR	36685	PtrMemberAccess	h -> h264chroma		35428	0					
ANR	36686	Identifier	h		35428	0					
ANR	36687	Identifier	h264chroma		35428	1					
ANR	36688	Identifier	avg_h264_chroma_pixels_tab		35428	1					
ANR	36689	Argument	h -> h264dsp . weight_h264_pixels_tab		35428	8					
ANR	36690	MemberAccess	h -> h264dsp . weight_h264_pixels_tab		35428	0					
ANR	36691	PtrMemberAccess	h -> h264dsp		35428	0					
ANR	36692	Identifier	h		35428	0					
ANR	36693	Identifier	h264dsp		35428	1					
ANR	36694	Identifier	weight_h264_pixels_tab		35428	1					
ANR	36695	Argument	h -> h264dsp . biweight_h264_pixels_tab		35428	9					
ANR	36696	MemberAccess	h -> h264dsp . biweight_h264_pixels_tab		35428	0					
ANR	36697	PtrMemberAccess	h -> h264dsp		35428	0					
ANR	36698	Identifier	h		35428	0					
ANR	36699	Identifier	h264dsp		35428	1					
ANR	36700	Identifier	biweight_h264_pixels_tab		35428	1					
ANR	36701	ElseStatement	else		35428	0					
ANR	36702	CompoundStatement		275:19:6659:6659	35428	0					
ANR	36703	ExpressionStatement	"FUNC ( hl_motion_420 ) ( h , dest_y , dest_cb , dest_cr , h -> me . qpel_put , h -> h264chroma . put_h264_chroma_pixels_tab , h -> me . qpel_avg , h -> h264chroma . avg_h264_chroma_pixels_tab , h -> h264dsp . weight_h264_pixels_tab , h -> h264dsp . biweight_h264_pixels_tab )"	279:16:6739:7099	35428	0	True				
ANR	36704	CallExpression	"FUNC ( hl_motion_420 ) ( h , dest_y , dest_cb , dest_cr , h -> me . qpel_put , h -> h264chroma . put_h264_chroma_pixels_tab , h -> me . qpel_avg , h -> h264chroma . avg_h264_chroma_pixels_tab , h -> h264dsp . weight_h264_pixels_tab , h -> h264dsp . biweight_h264_pixels_tab )"		35428	0					
ANR	36705	Callee	FUNC ( hl_motion_420 )		35428	0					
ANR	36706	CallExpression	FUNC ( hl_motion_420 )		35428	0					
ANR	36707	Callee	FUNC		35428	0					
ANR	36708	Identifier	FUNC		35428	0					
ANR	36709	ArgumentList	hl_motion_420		35428	1					
ANR	36710	Argument	hl_motion_420		35428	0					
ANR	36711	Identifier	hl_motion_420		35428	0					
ANR	36712	ArgumentList	h		35428	1					
ANR	36713	Argument	h		35428	0					
ANR	36714	Identifier	h		35428	0					
ANR	36715	Argument	dest_y		35428	1					
ANR	36716	Identifier	dest_y		35428	0					
ANR	36717	Argument	dest_cb		35428	2					
ANR	36718	Identifier	dest_cb		35428	0					
ANR	36719	Argument	dest_cr		35428	3					
ANR	36720	Identifier	dest_cr		35428	0					
ANR	36721	Argument	h -> me . qpel_put		35428	4					
ANR	36722	MemberAccess	h -> me . qpel_put		35428	0					
ANR	36723	PtrMemberAccess	h -> me		35428	0					
ANR	36724	Identifier	h		35428	0					
ANR	36725	Identifier	me		35428	1					
ANR	36726	Identifier	qpel_put		35428	1					
ANR	36727	Argument	h -> h264chroma . put_h264_chroma_pixels_tab		35428	5					
ANR	36728	MemberAccess	h -> h264chroma . put_h264_chroma_pixels_tab		35428	0					
ANR	36729	PtrMemberAccess	h -> h264chroma		35428	0					
ANR	36730	Identifier	h		35428	0					
ANR	36731	Identifier	h264chroma		35428	1					
ANR	36732	Identifier	put_h264_chroma_pixels_tab		35428	1					
ANR	36733	Argument	h -> me . qpel_avg		35428	6					
ANR	36734	MemberAccess	h -> me . qpel_avg		35428	0					
ANR	36735	PtrMemberAccess	h -> me		35428	0					
ANR	36736	Identifier	h		35428	0					
ANR	36737	Identifier	me		35428	1					
ANR	36738	Identifier	qpel_avg		35428	1					
ANR	36739	Argument	h -> h264chroma . avg_h264_chroma_pixels_tab		35428	7					
ANR	36740	MemberAccess	h -> h264chroma . avg_h264_chroma_pixels_tab		35428	0					
ANR	36741	PtrMemberAccess	h -> h264chroma		35428	0					
ANR	36742	Identifier	h		35428	0					
ANR	36743	Identifier	h264chroma		35428	1					
ANR	36744	Identifier	avg_h264_chroma_pixels_tab		35428	1					
ANR	36745	Argument	h -> h264dsp . weight_h264_pixels_tab		35428	8					
ANR	36746	MemberAccess	h -> h264dsp . weight_h264_pixels_tab		35428	0					
ANR	36747	PtrMemberAccess	h -> h264dsp		35428	0					
ANR	36748	Identifier	h		35428	0					
ANR	36749	Identifier	h264dsp		35428	1					
ANR	36750	Identifier	weight_h264_pixels_tab		35428	1					
ANR	36751	Argument	h -> h264dsp . biweight_h264_pixels_tab		35428	9					
ANR	36752	MemberAccess	h -> h264dsp . biweight_h264_pixels_tab		35428	0					
ANR	36753	PtrMemberAccess	h -> h264dsp		35428	0					
ANR	36754	Identifier	h		35428	0					
ANR	36755	Identifier	h264dsp		35428	1					
ANR	36756	Identifier	biweight_h264_pixels_tab		35428	1					
ANR	36757	ExpressionStatement	"hl_decode_mb_idct_luma ( h , mb_type , is_h264 , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest_y , 0 )"	295:8:7138:7287	35428	1	True				
ANR	36758	CallExpression	"hl_decode_mb_idct_luma ( h , mb_type , is_h264 , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest_y , 0 )"		35428	0					
ANR	36759	Callee	hl_decode_mb_idct_luma		35428	0					
ANR	36760	Identifier	hl_decode_mb_idct_luma		35428	0					
ANR	36761	ArgumentList	h		35428	1					
ANR	36762	Argument	h		35428	0					
ANR	36763	Identifier	h		35428	0					
ANR	36764	Argument	mb_type		35428	1					
ANR	36765	Identifier	mb_type		35428	0					
ANR	36766	Argument	is_h264		35428	2					
ANR	36767	Identifier	is_h264		35428	0					
ANR	36768	Argument	SIMPLE		35428	3					
ANR	36769	Identifier	SIMPLE		35428	0					
ANR	36770	Argument	transform_bypass		35428	4					
ANR	36771	Identifier	transform_bypass		35428	0					
ANR	36772	Argument	PIXEL_SHIFT		35428	5					
ANR	36773	Identifier	PIXEL_SHIFT		35428	0					
ANR	36774	Argument	block_offset		35428	6					
ANR	36775	Identifier	block_offset		35428	0					
ANR	36776	Argument	linesize		35428	7					
ANR	36777	Identifier	linesize		35428	0					
ANR	36778	Argument	dest_y		35428	8					
ANR	36779	Identifier	dest_y		35428	0					
ANR	36780	Argument	0		35428	9					
ANR	36781	PrimaryExpression	0		35428	0					
ANR	36782	IfStatement	if ( ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY ) ) && ( h -> cbp & 0x30 ) )		35428	2					
ANR	36783	Condition	( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY ) ) && ( h -> cbp & 0x30 )	301:12:7304:7392	35428	0	True				
ANR	36784	AndExpression	( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY ) ) && ( h -> cbp & 0x30 )		35428	0		&&			
ANR	36785	OrExpression	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )		35428	0		||			
ANR	36786	Identifier	SIMPLE		35428	0					
ANR	36787	OrExpression	! CONFIG_GRAY || ! ( h -> flags & CODEC_FLAG_GRAY )		35428	1		||			
ANR	36788	UnaryOperationExpression	! CONFIG_GRAY		35428	0					
ANR	36789	UnaryOperator	!		35428	0					
ANR	36790	Identifier	CONFIG_GRAY		35428	1					
ANR	36791	UnaryOperationExpression	! ( h -> flags & CODEC_FLAG_GRAY )		35428	1					
ANR	36792	UnaryOperator	!		35428	0					
ANR	36793	BitAndExpression	h -> flags & CODEC_FLAG_GRAY		35428	1		&			
ANR	36794	PtrMemberAccess	h -> flags		35428	0					
ANR	36795	Identifier	h		35428	0					
ANR	36796	Identifier	flags		35428	1					
ANR	36797	Identifier	CODEC_FLAG_GRAY		35428	1					
ANR	36798	BitAndExpression	h -> cbp & 0x30		35428	1		&			
ANR	36799	PtrMemberAccess	h -> cbp		35428	0					
ANR	36800	Identifier	h		35428	0					
ANR	36801	Identifier	cbp		35428	1					
ANR	36802	PrimaryExpression	0x30		35428	1					
ANR	36803	CompoundStatement		303:12:7349:7388	35428	1					
ANR	36804	IdentifierDeclStatement	"uint8_t * dest [ 2 ] = { dest_cb , dest_cr } ;"	305:12:7410:7449	35428	0	True				
ANR	36805	IdentifierDecl	"* dest [ 2 ] = { dest_cb , dest_cr }"		35428	0					
ANR	36806	IdentifierDeclType	uint8_t * [ 2 ]		35428	0					
ANR	36807	Identifier	dest		35428	1					
ANR	36808	PrimaryExpression	2		35428	2					
ANR	36809	AssignmentExpression	"* dest [ 2 ] = { dest_cb , dest_cr }"		35428	3		=			
ANR	36810	Identifier	dest		35428	0					
ANR	36811	InitializerList	dest_cb		35428	1					
ANR	36812	Identifier	dest_cb		35428	0					
ANR	36813	Identifier	dest_cr		35428	1					
ANR	36814	IfStatement	if ( transform_bypass )		35428	1					
ANR	36815	Condition	transform_bypass	307:16:7468:7483	35428	0	True				
ANR	36816	Identifier	transform_bypass		35428	0					
ANR	36817	CompoundStatement		305:34:7425:7425	35428	1					
ANR	36818	IfStatement	if ( IS_INTRA ( mb_type ) && h -> sps . profile_idc == 244 && ( h -> chroma_pred_mode == VERT_PRED8x8 || h -> chroma_pred_mode == HOR_PRED8x8 ) )		35428	0					
ANR	36819	Condition	IS_INTRA ( mb_type ) && h -> sps . profile_idc == 244 && ( h -> chroma_pred_mode == VERT_PRED8x8 || h -> chroma_pred_mode == HOR_PRED8x8 )	309:20:7509:7676	35428	0	True				
ANR	36820	AndExpression	IS_INTRA ( mb_type ) && h -> sps . profile_idc == 244 && ( h -> chroma_pred_mode == VERT_PRED8x8 || h -> chroma_pred_mode == HOR_PRED8x8 )		35428	0		&&			
ANR	36821	CallExpression	IS_INTRA ( mb_type )		35428	0					
ANR	36822	Callee	IS_INTRA		35428	0					
ANR	36823	Identifier	IS_INTRA		35428	0					
ANR	36824	ArgumentList	mb_type		35428	1					
ANR	36825	Argument	mb_type		35428	0					
ANR	36826	Identifier	mb_type		35428	0					
ANR	36827	AndExpression	h -> sps . profile_idc == 244 && ( h -> chroma_pred_mode == VERT_PRED8x8 || h -> chroma_pred_mode == HOR_PRED8x8 )		35428	1		&&			
ANR	36828	EqualityExpression	h -> sps . profile_idc == 244		35428	0		==			
ANR	36829	MemberAccess	h -> sps . profile_idc		35428	0					
ANR	36830	PtrMemberAccess	h -> sps		35428	0					
ANR	36831	Identifier	h		35428	0					
ANR	36832	Identifier	sps		35428	1					
ANR	36833	Identifier	profile_idc		35428	1					
ANR	36834	PrimaryExpression	244		35428	1					
ANR	36835	OrExpression	h -> chroma_pred_mode == VERT_PRED8x8 || h -> chroma_pred_mode == HOR_PRED8x8		35428	1		||			
ANR	36836	EqualityExpression	h -> chroma_pred_mode == VERT_PRED8x8		35428	0		==			
ANR	36837	PtrMemberAccess	h -> chroma_pred_mode		35428	0					
ANR	36838	Identifier	h		35428	0					
ANR	36839	Identifier	chroma_pred_mode		35428	1					
ANR	36840	Identifier	VERT_PRED8x8		35428	1					
ANR	36841	EqualityExpression	h -> chroma_pred_mode == HOR_PRED8x8		35428	1		==			
ANR	36842	PtrMemberAccess	h -> chroma_pred_mode		35428	0					
ANR	36843	Identifier	h		35428	0					
ANR	36844	Identifier	chroma_pred_mode		35428	1					
ANR	36845	Identifier	HOR_PRED8x8		35428	1					
ANR	36846	CompoundStatement		311:58:7618:7618	35428	1					
ANR	36847	ExpressionStatement	"h -> hpc . pred8x8_add [ h -> chroma_pred_mode ] ( dest [ 0 ] , block_offset + 16 , h -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT ) , uvlinesize )"	315:20:7702:8002	35428	0	True				
ANR	36848	CallExpression	"h -> hpc . pred8x8_add [ h -> chroma_pred_mode ] ( dest [ 0 ] , block_offset + 16 , h -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT ) , uvlinesize )"		35428	0					
ANR	36849	Callee	h -> hpc . pred8x8_add [ h -> chroma_pred_mode ]		35428	0					
ANR	36850	ArrayIndexing	h -> hpc . pred8x8_add [ h -> chroma_pred_mode ]		35428	0					
ANR	36851	MemberAccess	h -> hpc . pred8x8_add		35428	0					
ANR	36852	PtrMemberAccess	h -> hpc		35428	0					
ANR	36853	Identifier	h		35428	0					
ANR	36854	Identifier	hpc		35428	1					
ANR	36855	Identifier	pred8x8_add		35428	1					
ANR	36856	PtrMemberAccess	h -> chroma_pred_mode		35428	1					
ANR	36857	Identifier	h		35428	0					
ANR	36858	Identifier	chroma_pred_mode		35428	1					
ANR	36859	ArgumentList	dest [ 0 ]		35428	1					
ANR	36860	Argument	dest [ 0 ]		35428	0					
ANR	36861	ArrayIndexing	dest [ 0 ]		35428	0					
ANR	36862	Identifier	dest		35428	0					
ANR	36863	PrimaryExpression	0		35428	1					
ANR	36864	Argument	block_offset + 16		35428	1					
ANR	36865	AdditiveExpression	block_offset + 16		35428	0		+			
ANR	36866	Identifier	block_offset		35428	0					
ANR	36867	PrimaryExpression	16		35428	1					
ANR	36868	Argument	h -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT )		35428	2					
ANR	36869	AdditiveExpression	h -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT )		35428	0		+			
ANR	36870	PtrMemberAccess	h -> mb		35428	0					
ANR	36871	Identifier	h		35428	0					
ANR	36872	Identifier	mb		35428	1					
ANR	36873	ShiftExpression	16 * 16 * 1 << PIXEL_SHIFT		35428	1		<<			
ANR	36874	MultiplicativeExpression	16 * 16 * 1		35428	0		*			
ANR	36875	PrimaryExpression	16		35428	0					
ANR	36876	MultiplicativeExpression	16 * 1		35428	1		*			
ANR	36877	PrimaryExpression	16		35428	0					
ANR	36878	PrimaryExpression	1		35428	1					
ANR	36879	Identifier	PIXEL_SHIFT		35428	1					
ANR	36880	Argument	uvlinesize		35428	3					
ANR	36881	Identifier	uvlinesize		35428	0					
ANR	36882	ExpressionStatement	"h -> hpc . pred8x8_add [ h -> chroma_pred_mode ] ( dest [ 1 ] , block_offset + 32 , h -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT ) , uvlinesize )"	323:20:8025:8325	35428	1	True				
ANR	36883	CallExpression	"h -> hpc . pred8x8_add [ h -> chroma_pred_mode ] ( dest [ 1 ] , block_offset + 32 , h -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT ) , uvlinesize )"		35428	0					
ANR	36884	Callee	h -> hpc . pred8x8_add [ h -> chroma_pred_mode ]		35428	0					
ANR	36885	ArrayIndexing	h -> hpc . pred8x8_add [ h -> chroma_pred_mode ]		35428	0					
ANR	36886	MemberAccess	h -> hpc . pred8x8_add		35428	0					
ANR	36887	PtrMemberAccess	h -> hpc		35428	0					
ANR	36888	Identifier	h		35428	0					
ANR	36889	Identifier	hpc		35428	1					
ANR	36890	Identifier	pred8x8_add		35428	1					
ANR	36891	PtrMemberAccess	h -> chroma_pred_mode		35428	1					
ANR	36892	Identifier	h		35428	0					
ANR	36893	Identifier	chroma_pred_mode		35428	1					
ANR	36894	ArgumentList	dest [ 1 ]		35428	1					
ANR	36895	Argument	dest [ 1 ]		35428	0					
ANR	36896	ArrayIndexing	dest [ 1 ]		35428	0					
ANR	36897	Identifier	dest		35428	0					
ANR	36898	PrimaryExpression	1		35428	1					
ANR	36899	Argument	block_offset + 32		35428	1					
ANR	36900	AdditiveExpression	block_offset + 32		35428	0		+			
ANR	36901	Identifier	block_offset		35428	0					
ANR	36902	PrimaryExpression	32		35428	1					
ANR	36903	Argument	h -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT )		35428	2					
ANR	36904	AdditiveExpression	h -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT )		35428	0		+			
ANR	36905	PtrMemberAccess	h -> mb		35428	0					
ANR	36906	Identifier	h		35428	0					
ANR	36907	Identifier	mb		35428	1					
ANR	36908	ShiftExpression	16 * 16 * 2 << PIXEL_SHIFT		35428	1		<<			
ANR	36909	MultiplicativeExpression	16 * 16 * 2		35428	0		*			
ANR	36910	PrimaryExpression	16		35428	0					
ANR	36911	MultiplicativeExpression	16 * 2		35428	1		*			
ANR	36912	PrimaryExpression	16		35428	0					
ANR	36913	PrimaryExpression	2		35428	1					
ANR	36914	Identifier	PIXEL_SHIFT		35428	1					
ANR	36915	Argument	uvlinesize		35428	3					
ANR	36916	Identifier	uvlinesize		35428	0					
ANR	36917	ElseStatement	else		35428	0					
ANR	36918	CompoundStatement		329:23:8290:8290	35428	0					
ANR	36919	ExpressionStatement	idct_add = h -> h264dsp . h264_add_pixels4	333:20:8374:8412	35428	0	True				
ANR	36920	AssignmentExpression	idct_add = h -> h264dsp . h264_add_pixels4		35428	0		=			
ANR	36921	Identifier	idct_add		35428	0					
ANR	36922	MemberAccess	h -> h264dsp . h264_add_pixels4		35428	1					
ANR	36923	PtrMemberAccess	h -> h264dsp		35428	0					
ANR	36924	Identifier	h		35428	0					
ANR	36925	Identifier	h264dsp		35428	1					
ANR	36926	Identifier	h264_add_pixels4		35428	1					
ANR	36927	ForStatement	for ( j = 1 ; j < 3 ; j ++ )		35428	1					
ANR	36928	ForInit	j = 1 ;	335:25:8440:8445	35428	0	True				
ANR	36929	AssignmentExpression	j = 1		35428	0		=			
ANR	36930	Identifier	j		35428	0					
ANR	36931	PrimaryExpression	1		35428	1					
ANR	36932	Condition	j < 3	335:32:8447:8451	35428	1	True				
ANR	36933	RelationalExpression	j < 3		35428	0		<			
ANR	36934	Identifier	j		35428	0					
ANR	36935	PrimaryExpression	3		35428	1					
ANR	36936	PostIncDecOperationExpression	j ++	335:39:8454:8456	35428	2	True				
ANR	36937	Identifier	j		35428	0					
ANR	36938	IncDec	++		35428	1					
ANR	36939	CompoundStatement		333:44:8398:8398	35428	3					
ANR	36940	ForStatement	for ( i = j * 16 ; i < j * 16 + 4 ; i ++ )		35428	0					
ANR	36941	ForInit	i = j * 16 ;	337:29:8491:8501	35428	0	True				
ANR	36942	AssignmentExpression	i = j * 16		35428	0		=			
ANR	36943	Identifier	i		35428	0					
ANR	36944	MultiplicativeExpression	j * 16		35428	1		*			
ANR	36945	Identifier	j		35428	0					
ANR	36946	PrimaryExpression	16		35428	1					
ANR	36947	Condition	i < j * 16 + 4	337:41:8503:8516	35428	1	True				
ANR	36948	RelationalExpression	i < j * 16 + 4		35428	0		<			
ANR	36949	Identifier	i		35428	0					
ANR	36950	AdditiveExpression	j * 16 + 4		35428	1		+			
ANR	36951	MultiplicativeExpression	j * 16		35428	0		*			
ANR	36952	Identifier	j		35428	0					
ANR	36953	PrimaryExpression	16		35428	1					
ANR	36954	PrimaryExpression	4		35428	1					
ANR	36955	PostIncDecOperationExpression	i ++	337:57:8519:8521	35428	2	True				
ANR	36956	Identifier	i		35428	0					
ANR	36957	IncDec	++		35428	1					
ANR	36958	IfStatement	"if ( h -> non_zero_count_cache [ scan8 [ i ] ] || dctcoef_get ( h -> mb , PIXEL_SHIFT , i * 16 ) )"		35428	3					
ANR	36959	Condition	"h -> non_zero_count_cache [ scan8 [ i ] ] || dctcoef_get ( h -> mb , PIXEL_SHIFT , i * 16 )"	339:32:8557:8665	35428	0	True				
ANR	36960	OrExpression	"h -> non_zero_count_cache [ scan8 [ i ] ] || dctcoef_get ( h -> mb , PIXEL_SHIFT , i * 16 )"		35428	0		||			
ANR	36961	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ i ] ]		35428	0					
ANR	36962	PtrMemberAccess	h -> non_zero_count_cache		35428	0					
ANR	36963	Identifier	h		35428	0					
ANR	36964	Identifier	non_zero_count_cache		35428	1					
ANR	36965	ArrayIndexing	scan8 [ i ]		35428	1					
ANR	36966	Identifier	scan8		35428	0					
ANR	36967	Identifier	i		35428	1					
ANR	36968	CallExpression	"dctcoef_get ( h -> mb , PIXEL_SHIFT , i * 16 )"		35428	1					
ANR	36969	Callee	dctcoef_get		35428	0					
ANR	36970	Identifier	dctcoef_get		35428	0					
ANR	36971	ArgumentList	h -> mb		35428	1					
ANR	36972	Argument	h -> mb		35428	0					
ANR	36973	PtrMemberAccess	h -> mb		35428	0					
ANR	36974	Identifier	h		35428	0					
ANR	36975	Identifier	mb		35428	1					
ANR	36976	Argument	PIXEL_SHIFT		35428	1					
ANR	36977	Identifier	PIXEL_SHIFT		35428	0					
ANR	36978	Argument	i * 16		35428	2					
ANR	36979	MultiplicativeExpression	i * 16		35428	0		*			
ANR	36980	Identifier	i		35428	0					
ANR	36981	PrimaryExpression	16		35428	1					
ANR	36982	ExpressionStatement	"idct_add ( dest [ j - 1 ] + block_offset [ i ] , h -> mb + ( i * 16 << PIXEL_SHIFT ) , uvlinesize )"	343:32:8701:8869	35428	1	True				
ANR	36983	CallExpression	"idct_add ( dest [ j - 1 ] + block_offset [ i ] , h -> mb + ( i * 16 << PIXEL_SHIFT ) , uvlinesize )"		35428	0					
ANR	36984	Callee	idct_add		35428	0					
ANR	36985	Identifier	idct_add		35428	0					
ANR	36986	ArgumentList	dest [ j - 1 ] + block_offset [ i ]		35428	1					
ANR	36987	Argument	dest [ j - 1 ] + block_offset [ i ]		35428	0					
ANR	36988	AdditiveExpression	dest [ j - 1 ] + block_offset [ i ]		35428	0		+			
ANR	36989	ArrayIndexing	dest [ j - 1 ]		35428	0					
ANR	36990	Identifier	dest		35428	0					
ANR	36991	AdditiveExpression	j - 1		35428	1		-			
ANR	36992	Identifier	j		35428	0					
ANR	36993	PrimaryExpression	1		35428	1					
ANR	36994	ArrayIndexing	block_offset [ i ]		35428	1					
ANR	36995	Identifier	block_offset		35428	0					
ANR	36996	Identifier	i		35428	1					
ANR	36997	Argument	h -> mb + ( i * 16 << PIXEL_SHIFT )		35428	1					
ANR	36998	AdditiveExpression	h -> mb + ( i * 16 << PIXEL_SHIFT )		35428	0		+			
ANR	36999	PtrMemberAccess	h -> mb		35428	0					
ANR	37000	Identifier	h		35428	0					
ANR	37001	Identifier	mb		35428	1					
ANR	37002	ShiftExpression	i * 16 << PIXEL_SHIFT		35428	1		<<			
ANR	37003	MultiplicativeExpression	i * 16		35428	0		*			
ANR	37004	Identifier	i		35428	0					
ANR	37005	PrimaryExpression	16		35428	1					
ANR	37006	Identifier	PIXEL_SHIFT		35428	1					
ANR	37007	Argument	uvlinesize		35428	2					
ANR	37008	Identifier	uvlinesize		35428	0					
ANR	37009	IfStatement	if ( chroma422 )		35428	1					
ANR	37010	Condition	chroma422	349:28:8900:8908	35428	0	True				
ANR	37011	Identifier	chroma422		35428	0					
ANR	37012	CompoundStatement		347:39:8850:8850	35428	1					
ANR	37013	ForStatement	for ( i = j * 16 + 4 ; i < j * 16 + 8 ; i ++ )		35428	0					
ANR	37014	ForInit	i = j * 16 + 4 ;	351:33:8947:8961	35428	0	True				
ANR	37015	AssignmentExpression	i = j * 16 + 4		35428	0		=			
ANR	37016	Identifier	i		35428	0					
ANR	37017	AdditiveExpression	j * 16 + 4		35428	1		+			
ANR	37018	MultiplicativeExpression	j * 16		35428	0		*			
ANR	37019	Identifier	j		35428	0					
ANR	37020	PrimaryExpression	16		35428	1					
ANR	37021	PrimaryExpression	4		35428	1					
ANR	37022	Condition	i < j * 16 + 8	351:49:8963:8976	35428	1	True				
ANR	37023	RelationalExpression	i < j * 16 + 8		35428	0		<			
ANR	37024	Identifier	i		35428	0					
ANR	37025	AdditiveExpression	j * 16 + 8		35428	1		+			
ANR	37026	MultiplicativeExpression	j * 16		35428	0		*			
ANR	37027	Identifier	j		35428	0					
ANR	37028	PrimaryExpression	16		35428	1					
ANR	37029	PrimaryExpression	8		35428	1					
ANR	37030	PostIncDecOperationExpression	i ++	351:65:8979:8981	35428	2	True				
ANR	37031	Identifier	i		35428	0					
ANR	37032	IncDec	++		35428	1					
ANR	37033	IfStatement	"if ( h -> non_zero_count_cache [ scan8 [ i + 4 ] ] || dctcoef_get ( h -> mb , PIXEL_SHIFT , i * 16 ) )"		35428	3					
ANR	37034	Condition	"h -> non_zero_count_cache [ scan8 [ i + 4 ] ] || dctcoef_get ( h -> mb , PIXEL_SHIFT , i * 16 )"	353:36:9021:9137	35428	0	True				
ANR	37035	OrExpression	"h -> non_zero_count_cache [ scan8 [ i + 4 ] ] || dctcoef_get ( h -> mb , PIXEL_SHIFT , i * 16 )"		35428	0		||			
ANR	37036	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ i + 4 ] ]		35428	0					
ANR	37037	PtrMemberAccess	h -> non_zero_count_cache		35428	0					
ANR	37038	Identifier	h		35428	0					
ANR	37039	Identifier	non_zero_count_cache		35428	1					
ANR	37040	ArrayIndexing	scan8 [ i + 4 ]		35428	1					
ANR	37041	Identifier	scan8		35428	0					
ANR	37042	AdditiveExpression	i + 4		35428	1		+			
ANR	37043	Identifier	i		35428	0					
ANR	37044	PrimaryExpression	4		35428	1					
ANR	37045	CallExpression	"dctcoef_get ( h -> mb , PIXEL_SHIFT , i * 16 )"		35428	1					
ANR	37046	Callee	dctcoef_get		35428	0					
ANR	37047	Identifier	dctcoef_get		35428	0					
ANR	37048	ArgumentList	h -> mb		35428	1					
ANR	37049	Argument	h -> mb		35428	0					
ANR	37050	PtrMemberAccess	h -> mb		35428	0					
ANR	37051	Identifier	h		35428	0					
ANR	37052	Identifier	mb		35428	1					
ANR	37053	Argument	PIXEL_SHIFT		35428	1					
ANR	37054	Identifier	PIXEL_SHIFT		35428	0					
ANR	37055	Argument	i * 16		35428	2					
ANR	37056	MultiplicativeExpression	i * 16		35428	0		*			
ANR	37057	Identifier	i		35428	0					
ANR	37058	PrimaryExpression	16		35428	1					
ANR	37059	ExpressionStatement	"idct_add ( dest [ j - 1 ] + block_offset [ i + 4 ] , h -> mb + ( i * 16 << PIXEL_SHIFT ) , uvlinesize )"	357:36:9177:9357	35428	1	True				
ANR	37060	CallExpression	"idct_add ( dest [ j - 1 ] + block_offset [ i + 4 ] , h -> mb + ( i * 16 << PIXEL_SHIFT ) , uvlinesize )"		35428	0					
ANR	37061	Callee	idct_add		35428	0					
ANR	37062	Identifier	idct_add		35428	0					
ANR	37063	ArgumentList	dest [ j - 1 ] + block_offset [ i + 4 ]		35428	1					
ANR	37064	Argument	dest [ j - 1 ] + block_offset [ i + 4 ]		35428	0					
ANR	37065	AdditiveExpression	dest [ j - 1 ] + block_offset [ i + 4 ]		35428	0		+			
ANR	37066	ArrayIndexing	dest [ j - 1 ]		35428	0					
ANR	37067	Identifier	dest		35428	0					
ANR	37068	AdditiveExpression	j - 1		35428	1		-			
ANR	37069	Identifier	j		35428	0					
ANR	37070	PrimaryExpression	1		35428	1					
ANR	37071	ArrayIndexing	block_offset [ i + 4 ]		35428	1					
ANR	37072	Identifier	block_offset		35428	0					
ANR	37073	AdditiveExpression	i + 4		35428	1		+			
ANR	37074	Identifier	i		35428	0					
ANR	37075	PrimaryExpression	4		35428	1					
ANR	37076	Argument	h -> mb + ( i * 16 << PIXEL_SHIFT )		35428	1					
ANR	37077	AdditiveExpression	h -> mb + ( i * 16 << PIXEL_SHIFT )		35428	0		+			
ANR	37078	PtrMemberAccess	h -> mb		35428	0					
ANR	37079	Identifier	h		35428	0					
ANR	37080	Identifier	mb		35428	1					
ANR	37081	ShiftExpression	i * 16 << PIXEL_SHIFT		35428	1		<<			
ANR	37082	MultiplicativeExpression	i * 16		35428	0		*			
ANR	37083	Identifier	i		35428	0					
ANR	37084	PrimaryExpression	16		35428	1					
ANR	37085	Identifier	PIXEL_SHIFT		35428	1					
ANR	37086	Argument	uvlinesize		35428	2					
ANR	37087	Identifier	uvlinesize		35428	0					
ANR	37088	ElseStatement	else		35428	0					
ANR	37089	CompoundStatement		367:19:9387:9387	35428	0					
ANR	37090	IfStatement	if ( is_h264 )		35428	0					
ANR	37091	Condition	is_h264	371:20:9471:9477	35428	0	True				
ANR	37092	Identifier	is_h264		35428	0					
ANR	37093	CompoundStatement		371:20:9442:9451	35428	1					
ANR	37094	IdentifierDeclStatement	int qp [ 2 ] ;	373:20:9503:9512	35428	0	True				
ANR	37095	IdentifierDecl	qp [ 2 ]		35428	0					
ANR	37096	IdentifierDeclType	int [ 2 ]		35428	0					
ANR	37097	Identifier	qp		35428	1					
ANR	37098	PrimaryExpression	2		35428	2					
ANR	37099	IfStatement	if ( chroma422 )		35428	1					
ANR	37100	Condition	chroma422	375:24:9539:9547	35428	0	True				
ANR	37101	Identifier	chroma422		35428	0					
ANR	37102	CompoundStatement		373:35:9489:9489	35428	1					
ANR	37103	ExpressionStatement	qp [ 0 ] = h -> chroma_qp [ 0 ] + 3	377:24:9577:9604	35428	0	True				
ANR	37104	AssignmentExpression	qp [ 0 ] = h -> chroma_qp [ 0 ] + 3		35428	0		=			
ANR	37105	ArrayIndexing	qp [ 0 ]		35428	0					
ANR	37106	Identifier	qp		35428	0					
ANR	37107	PrimaryExpression	0		35428	1					
ANR	37108	AdditiveExpression	h -> chroma_qp [ 0 ] + 3		35428	1		+			
ANR	37109	ArrayIndexing	h -> chroma_qp [ 0 ]		35428	0					
ANR	37110	PtrMemberAccess	h -> chroma_qp		35428	0					
ANR	37111	Identifier	h		35428	0					
ANR	37112	Identifier	chroma_qp		35428	1					
ANR	37113	PrimaryExpression	0		35428	1					
ANR	37114	PrimaryExpression	3		35428	1					
ANR	37115	ExpressionStatement	qp [ 1 ] = h -> chroma_qp [ 1 ] + 3	379:24:9631:9658	35428	1	True				
ANR	37116	AssignmentExpression	qp [ 1 ] = h -> chroma_qp [ 1 ] + 3		35428	0		=			
ANR	37117	ArrayIndexing	qp [ 1 ]		35428	0					
ANR	37118	Identifier	qp		35428	0					
ANR	37119	PrimaryExpression	1		35428	1					
ANR	37120	AdditiveExpression	h -> chroma_qp [ 1 ] + 3		35428	1		+			
ANR	37121	ArrayIndexing	h -> chroma_qp [ 1 ]		35428	0					
ANR	37122	PtrMemberAccess	h -> chroma_qp		35428	0					
ANR	37123	Identifier	h		35428	0					
ANR	37124	Identifier	chroma_qp		35428	1					
ANR	37125	PrimaryExpression	1		35428	1					
ANR	37126	PrimaryExpression	3		35428	1					
ANR	37127	ElseStatement	else		35428	0					
ANR	37128	CompoundStatement		379:27:9627:9627	35428	0					
ANR	37129	ExpressionStatement	qp [ 0 ] = h -> chroma_qp [ 0 ]	383:24:9715:9738	35428	0	True				
ANR	37130	AssignmentExpression	qp [ 0 ] = h -> chroma_qp [ 0 ]		35428	0		=			
ANR	37131	ArrayIndexing	qp [ 0 ]		35428	0					
ANR	37132	Identifier	qp		35428	0					
ANR	37133	PrimaryExpression	0		35428	1					
ANR	37134	ArrayIndexing	h -> chroma_qp [ 0 ]		35428	1					
ANR	37135	PtrMemberAccess	h -> chroma_qp		35428	0					
ANR	37136	Identifier	h		35428	0					
ANR	37137	Identifier	chroma_qp		35428	1					
ANR	37138	PrimaryExpression	0		35428	1					
ANR	37139	ExpressionStatement	qp [ 1 ] = h -> chroma_qp [ 1 ]	385:24:9765:9788	35428	1	True				
ANR	37140	AssignmentExpression	qp [ 1 ] = h -> chroma_qp [ 1 ]		35428	0		=			
ANR	37141	ArrayIndexing	qp [ 1 ]		35428	0					
ANR	37142	Identifier	qp		35428	0					
ANR	37143	PrimaryExpression	1		35428	1					
ANR	37144	ArrayIndexing	h -> chroma_qp [ 1 ]		35428	1					
ANR	37145	PtrMemberAccess	h -> chroma_qp		35428	0					
ANR	37146	Identifier	h		35428	0					
ANR	37147	Identifier	chroma_qp		35428	1					
ANR	37148	PrimaryExpression	1		35428	1					
ANR	37149	IfStatement	if ( h -> non_zero_count_cache [ scan8 [ CHROMA_DC_BLOCK_INDEX + 0 ] ] )		35428	2					
ANR	37150	Condition	h -> non_zero_count_cache [ scan8 [ CHROMA_DC_BLOCK_INDEX + 0 ] ]	389:24:9838:9894	35428	0	True				
ANR	37151	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ CHROMA_DC_BLOCK_INDEX + 0 ] ]		35428	0					
ANR	37152	PtrMemberAccess	h -> non_zero_count_cache		35428	0					
ANR	37153	Identifier	h		35428	0					
ANR	37154	Identifier	non_zero_count_cache		35428	1					
ANR	37155	ArrayIndexing	scan8 [ CHROMA_DC_BLOCK_INDEX + 0 ]		35428	1					
ANR	37156	Identifier	scan8		35428	0					
ANR	37157	AdditiveExpression	CHROMA_DC_BLOCK_INDEX + 0		35428	1		+			
ANR	37158	Identifier	CHROMA_DC_BLOCK_INDEX		35428	0					
ANR	37159	PrimaryExpression	0		35428	1					
ANR	37160	ExpressionStatement	"h -> h264dsp . h264_chroma_dc_dequant_idct ( h -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT ) , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ qp [ 0 ] ] [ 0 ] )"	391:24:9922:10118	35428	1	True				
ANR	37161	CallExpression	"h -> h264dsp . h264_chroma_dc_dequant_idct ( h -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT ) , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ qp [ 0 ] ] [ 0 ] )"		35428	0					
ANR	37162	Callee	h -> h264dsp . h264_chroma_dc_dequant_idct		35428	0					
ANR	37163	MemberAccess	h -> h264dsp . h264_chroma_dc_dequant_idct		35428	0					
ANR	37164	PtrMemberAccess	h -> h264dsp		35428	0					
ANR	37165	Identifier	h		35428	0					
ANR	37166	Identifier	h264dsp		35428	1					
ANR	37167	Identifier	h264_chroma_dc_dequant_idct		35428	1					
ANR	37168	ArgumentList	h -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT )		35428	1					
ANR	37169	Argument	h -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT )		35428	0					
ANR	37170	AdditiveExpression	h -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT )		35428	0		+			
ANR	37171	PtrMemberAccess	h -> mb		35428	0					
ANR	37172	Identifier	h		35428	0					
ANR	37173	Identifier	mb		35428	1					
ANR	37174	ShiftExpression	16 * 16 * 1 << PIXEL_SHIFT		35428	1		<<			
ANR	37175	MultiplicativeExpression	16 * 16 * 1		35428	0		*			
ANR	37176	PrimaryExpression	16		35428	0					
ANR	37177	MultiplicativeExpression	16 * 1		35428	1		*			
ANR	37178	PrimaryExpression	16		35428	0					
ANR	37179	PrimaryExpression	1		35428	1					
ANR	37180	Identifier	PIXEL_SHIFT		35428	1					
ANR	37181	Argument	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ qp [ 0 ] ] [ 0 ]		35428	1					
ANR	37182	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ qp [ 0 ] ] [ 0 ]		35428	0					
ANR	37183	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ qp [ 0 ] ]		35428	0					
ANR	37184	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ]		35428	0					
ANR	37185	PtrMemberAccess	h -> dequant4_coeff		35428	0					
ANR	37186	Identifier	h		35428	0					
ANR	37187	Identifier	dequant4_coeff		35428	1					
ANR	37188	ConditionalExpression	IS_INTRA ( mb_type ) ? 1 : 4		35428	1					
ANR	37189	Condition	IS_INTRA ( mb_type )		35428	0					
ANR	37190	CallExpression	IS_INTRA ( mb_type )		35428	0					
ANR	37191	Callee	IS_INTRA		35428	0					
ANR	37192	Identifier	IS_INTRA		35428	0					
ANR	37193	ArgumentList	mb_type		35428	1					
ANR	37194	Argument	mb_type		35428	0					
ANR	37195	Identifier	mb_type		35428	0					
ANR	37196	PrimaryExpression	1		35428	1					
ANR	37197	PrimaryExpression	4		35428	2					
ANR	37198	ArrayIndexing	qp [ 0 ]		35428	1					
ANR	37199	Identifier	qp		35428	0					
ANR	37200	PrimaryExpression	0		35428	1					
ANR	37201	PrimaryExpression	0		35428	1					
ANR	37202	IfStatement	if ( h -> non_zero_count_cache [ scan8 [ CHROMA_DC_BLOCK_INDEX + 1 ] ] )		35428	3					
ANR	37203	Condition	h -> non_zero_count_cache [ scan8 [ CHROMA_DC_BLOCK_INDEX + 1 ] ]	395:24:10145:10201	35428	0	True				
ANR	37204	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ CHROMA_DC_BLOCK_INDEX + 1 ] ]		35428	0					
ANR	37205	PtrMemberAccess	h -> non_zero_count_cache		35428	0					
ANR	37206	Identifier	h		35428	0					
ANR	37207	Identifier	non_zero_count_cache		35428	1					
ANR	37208	ArrayIndexing	scan8 [ CHROMA_DC_BLOCK_INDEX + 1 ]		35428	1					
ANR	37209	Identifier	scan8		35428	0					
ANR	37210	AdditiveExpression	CHROMA_DC_BLOCK_INDEX + 1		35428	1		+			
ANR	37211	Identifier	CHROMA_DC_BLOCK_INDEX		35428	0					
ANR	37212	PrimaryExpression	1		35428	1					
ANR	37213	ExpressionStatement	"h -> h264dsp . h264_chroma_dc_dequant_idct ( h -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT ) , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ qp [ 1 ] ] [ 0 ] )"	397:24:10229:10425	35428	1	True				
ANR	37214	CallExpression	"h -> h264dsp . h264_chroma_dc_dequant_idct ( h -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT ) , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ qp [ 1 ] ] [ 0 ] )"		35428	0					
ANR	37215	Callee	h -> h264dsp . h264_chroma_dc_dequant_idct		35428	0					
ANR	37216	MemberAccess	h -> h264dsp . h264_chroma_dc_dequant_idct		35428	0					
ANR	37217	PtrMemberAccess	h -> h264dsp		35428	0					
ANR	37218	Identifier	h		35428	0					
ANR	37219	Identifier	h264dsp		35428	1					
ANR	37220	Identifier	h264_chroma_dc_dequant_idct		35428	1					
ANR	37221	ArgumentList	h -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT )		35428	1					
ANR	37222	Argument	h -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT )		35428	0					
ANR	37223	AdditiveExpression	h -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT )		35428	0		+			
ANR	37224	PtrMemberAccess	h -> mb		35428	0					
ANR	37225	Identifier	h		35428	0					
ANR	37226	Identifier	mb		35428	1					
ANR	37227	ShiftExpression	16 * 16 * 2 << PIXEL_SHIFT		35428	1		<<			
ANR	37228	MultiplicativeExpression	16 * 16 * 2		35428	0		*			
ANR	37229	PrimaryExpression	16		35428	0					
ANR	37230	MultiplicativeExpression	16 * 2		35428	1		*			
ANR	37231	PrimaryExpression	16		35428	0					
ANR	37232	PrimaryExpression	2		35428	1					
ANR	37233	Identifier	PIXEL_SHIFT		35428	1					
ANR	37234	Argument	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ qp [ 1 ] ] [ 0 ]		35428	1					
ANR	37235	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ qp [ 1 ] ] [ 0 ]		35428	0					
ANR	37236	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ qp [ 1 ] ]		35428	0					
ANR	37237	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ]		35428	0					
ANR	37238	PtrMemberAccess	h -> dequant4_coeff		35428	0					
ANR	37239	Identifier	h		35428	0					
ANR	37240	Identifier	dequant4_coeff		35428	1					
ANR	37241	ConditionalExpression	IS_INTRA ( mb_type ) ? 2 : 5		35428	1					
ANR	37242	Condition	IS_INTRA ( mb_type )		35428	0					
ANR	37243	CallExpression	IS_INTRA ( mb_type )		35428	0					
ANR	37244	Callee	IS_INTRA		35428	0					
ANR	37245	Identifier	IS_INTRA		35428	0					
ANR	37246	ArgumentList	mb_type		35428	1					
ANR	37247	Argument	mb_type		35428	0					
ANR	37248	Identifier	mb_type		35428	0					
ANR	37249	PrimaryExpression	2		35428	1					
ANR	37250	PrimaryExpression	5		35428	2					
ANR	37251	ArrayIndexing	qp [ 1 ]		35428	1					
ANR	37252	Identifier	qp		35428	0					
ANR	37253	PrimaryExpression	1		35428	1					
ANR	37254	PrimaryExpression	0		35428	1					
ANR	37255	ExpressionStatement	"h -> h264dsp . h264_idct_add8 ( dest , block_offset , h -> mb , uvlinesize , h -> non_zero_count_cache )"	401:20:10448:10631	35428	4	True				
ANR	37256	CallExpression	"h -> h264dsp . h264_idct_add8 ( dest , block_offset , h -> mb , uvlinesize , h -> non_zero_count_cache )"		35428	0					
ANR	37257	Callee	h -> h264dsp . h264_idct_add8		35428	0					
ANR	37258	MemberAccess	h -> h264dsp . h264_idct_add8		35428	0					
ANR	37259	PtrMemberAccess	h -> h264dsp		35428	0					
ANR	37260	Identifier	h		35428	0					
ANR	37261	Identifier	h264dsp		35428	1					
ANR	37262	Identifier	h264_idct_add8		35428	1					
ANR	37263	ArgumentList	dest		35428	1					
ANR	37264	Argument	dest		35428	0					
ANR	37265	Identifier	dest		35428	0					
ANR	37266	Argument	block_offset		35428	1					
ANR	37267	Identifier	block_offset		35428	0					
ANR	37268	Argument	h -> mb		35428	2					
ANR	37269	PtrMemberAccess	h -> mb		35428	0					
ANR	37270	Identifier	h		35428	0					
ANR	37271	Identifier	mb		35428	1					
ANR	37272	Argument	uvlinesize		35428	3					
ANR	37273	Identifier	uvlinesize		35428	0					
ANR	37274	Argument	h -> non_zero_count_cache		35428	4					
ANR	37275	PtrMemberAccess	h -> non_zero_count_cache		35428	0					
ANR	37276	Identifier	h		35428	0					
ANR	37277	Identifier	non_zero_count_cache		35428	1					
ANR	37278	ElseStatement	else		35428	0					
ANR	37279	IfStatement	if ( CONFIG_SVQ3_DECODER )		35428	0					
ANR	37280	Condition	CONFIG_SVQ3_DECODER	407:27:10661:10679	35428	0	True				
ANR	37281	Identifier	CONFIG_SVQ3_DECODER		35428	0					
ANR	37282	CompoundStatement		405:48:10621:10621	35428	1					
ANR	37283	ExpressionStatement	"h -> h264dsp . h264_chroma_dc_dequant_idct ( h -> mb + 16 * 16 * 1 , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ h -> chroma_qp [ 0 ] ] [ 0 ] )"	409:20:10705:10890	35428	0	True				
ANR	37284	CallExpression	"h -> h264dsp . h264_chroma_dc_dequant_idct ( h -> mb + 16 * 16 * 1 , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ h -> chroma_qp [ 0 ] ] [ 0 ] )"		35428	0					
ANR	37285	Callee	h -> h264dsp . h264_chroma_dc_dequant_idct		35428	0					
ANR	37286	MemberAccess	h -> h264dsp . h264_chroma_dc_dequant_idct		35428	0					
ANR	37287	PtrMemberAccess	h -> h264dsp		35428	0					
ANR	37288	Identifier	h		35428	0					
ANR	37289	Identifier	h264dsp		35428	1					
ANR	37290	Identifier	h264_chroma_dc_dequant_idct		35428	1					
ANR	37291	ArgumentList	h -> mb + 16 * 16 * 1		35428	1					
ANR	37292	Argument	h -> mb + 16 * 16 * 1		35428	0					
ANR	37293	AdditiveExpression	h -> mb + 16 * 16 * 1		35428	0		+			
ANR	37294	PtrMemberAccess	h -> mb		35428	0					
ANR	37295	Identifier	h		35428	0					
ANR	37296	Identifier	mb		35428	1					
ANR	37297	MultiplicativeExpression	16 * 16 * 1		35428	1		*			
ANR	37298	PrimaryExpression	16		35428	0					
ANR	37299	MultiplicativeExpression	16 * 1		35428	1		*			
ANR	37300	PrimaryExpression	16		35428	0					
ANR	37301	PrimaryExpression	1		35428	1					
ANR	37302	Argument	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ h -> chroma_qp [ 0 ] ] [ 0 ]		35428	1					
ANR	37303	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ h -> chroma_qp [ 0 ] ] [ 0 ]		35428	0					
ANR	37304	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ h -> chroma_qp [ 0 ] ]		35428	0					
ANR	37305	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ]		35428	0					
ANR	37306	PtrMemberAccess	h -> dequant4_coeff		35428	0					
ANR	37307	Identifier	h		35428	0					
ANR	37308	Identifier	dequant4_coeff		35428	1					
ANR	37309	ConditionalExpression	IS_INTRA ( mb_type ) ? 1 : 4		35428	1					
ANR	37310	Condition	IS_INTRA ( mb_type )		35428	0					
ANR	37311	CallExpression	IS_INTRA ( mb_type )		35428	0					
ANR	37312	Callee	IS_INTRA		35428	0					
ANR	37313	Identifier	IS_INTRA		35428	0					
ANR	37314	ArgumentList	mb_type		35428	1					
ANR	37315	Argument	mb_type		35428	0					
ANR	37316	Identifier	mb_type		35428	0					
ANR	37317	PrimaryExpression	1		35428	1					
ANR	37318	PrimaryExpression	4		35428	2					
ANR	37319	ArrayIndexing	h -> chroma_qp [ 0 ]		35428	1					
ANR	37320	PtrMemberAccess	h -> chroma_qp		35428	0					
ANR	37321	Identifier	h		35428	0					
ANR	37322	Identifier	chroma_qp		35428	1					
ANR	37323	PrimaryExpression	0		35428	1					
ANR	37324	PrimaryExpression	0		35428	1					
ANR	37325	ExpressionStatement	"h -> h264dsp . h264_chroma_dc_dequant_idct ( h -> mb + 16 * 16 * 2 , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ h -> chroma_qp [ 1 ] ] [ 0 ] )"	413:20:10913:11098	35428	1	True				
ANR	37326	CallExpression	"h -> h264dsp . h264_chroma_dc_dequant_idct ( h -> mb + 16 * 16 * 2 , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ h -> chroma_qp [ 1 ] ] [ 0 ] )"		35428	0					
ANR	37327	Callee	h -> h264dsp . h264_chroma_dc_dequant_idct		35428	0					
ANR	37328	MemberAccess	h -> h264dsp . h264_chroma_dc_dequant_idct		35428	0					
ANR	37329	PtrMemberAccess	h -> h264dsp		35428	0					
ANR	37330	Identifier	h		35428	0					
ANR	37331	Identifier	h264dsp		35428	1					
ANR	37332	Identifier	h264_chroma_dc_dequant_idct		35428	1					
ANR	37333	ArgumentList	h -> mb + 16 * 16 * 2		35428	1					
ANR	37334	Argument	h -> mb + 16 * 16 * 2		35428	0					
ANR	37335	AdditiveExpression	h -> mb + 16 * 16 * 2		35428	0		+			
ANR	37336	PtrMemberAccess	h -> mb		35428	0					
ANR	37337	Identifier	h		35428	0					
ANR	37338	Identifier	mb		35428	1					
ANR	37339	MultiplicativeExpression	16 * 16 * 2		35428	1		*			
ANR	37340	PrimaryExpression	16		35428	0					
ANR	37341	MultiplicativeExpression	16 * 2		35428	1		*			
ANR	37342	PrimaryExpression	16		35428	0					
ANR	37343	PrimaryExpression	2		35428	1					
ANR	37344	Argument	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ h -> chroma_qp [ 1 ] ] [ 0 ]		35428	1					
ANR	37345	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ h -> chroma_qp [ 1 ] ] [ 0 ]		35428	0					
ANR	37346	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ h -> chroma_qp [ 1 ] ]		35428	0					
ANR	37347	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ]		35428	0					
ANR	37348	PtrMemberAccess	h -> dequant4_coeff		35428	0					
ANR	37349	Identifier	h		35428	0					
ANR	37350	Identifier	dequant4_coeff		35428	1					
ANR	37351	ConditionalExpression	IS_INTRA ( mb_type ) ? 2 : 5		35428	1					
ANR	37352	Condition	IS_INTRA ( mb_type )		35428	0					
ANR	37353	CallExpression	IS_INTRA ( mb_type )		35428	0					
ANR	37354	Callee	IS_INTRA		35428	0					
ANR	37355	Identifier	IS_INTRA		35428	0					
ANR	37356	ArgumentList	mb_type		35428	1					
ANR	37357	Argument	mb_type		35428	0					
ANR	37358	Identifier	mb_type		35428	0					
ANR	37359	PrimaryExpression	2		35428	1					
ANR	37360	PrimaryExpression	5		35428	2					
ANR	37361	ArrayIndexing	h -> chroma_qp [ 1 ]		35428	1					
ANR	37362	PtrMemberAccess	h -> chroma_qp		35428	0					
ANR	37363	Identifier	h		35428	0					
ANR	37364	Identifier	chroma_qp		35428	1					
ANR	37365	PrimaryExpression	1		35428	1					
ANR	37366	PrimaryExpression	0		35428	1					
ANR	37367	ForStatement	for ( j = 1 ; j < 3 ; j ++ )		35428	2					
ANR	37368	ForInit	j = 1 ;	417:25:11126:11131	35428	0	True				
ANR	37369	AssignmentExpression	j = 1		35428	0		=			
ANR	37370	Identifier	j		35428	0					
ANR	37371	PrimaryExpression	1		35428	1					
ANR	37372	Condition	j < 3	417:32:11133:11137	35428	1	True				
ANR	37373	RelationalExpression	j < 3		35428	0		<			
ANR	37374	Identifier	j		35428	0					
ANR	37375	PrimaryExpression	3		35428	1					
ANR	37376	PostIncDecOperationExpression	j ++	417:39:11140:11142	35428	2	True				
ANR	37377	Identifier	j		35428	0					
ANR	37378	IncDec	++		35428	1					
ANR	37379	CompoundStatement		415:44:11084:11084	35428	3					
ANR	37380	ForStatement	for ( i = j * 16 ; i < j * 16 + 4 ; i ++ )		35428	0					
ANR	37381	ForInit	i = j * 16 ;	419:29:11177:11187	35428	0	True				
ANR	37382	AssignmentExpression	i = j * 16		35428	0		=			
ANR	37383	Identifier	i		35428	0					
ANR	37384	MultiplicativeExpression	j * 16		35428	1		*			
ANR	37385	Identifier	j		35428	0					
ANR	37386	PrimaryExpression	16		35428	1					
ANR	37387	Condition	i < j * 16 + 4	419:41:11189:11202	35428	1	True				
ANR	37388	RelationalExpression	i < j * 16 + 4		35428	0		<			
ANR	37389	Identifier	i		35428	0					
ANR	37390	AdditiveExpression	j * 16 + 4		35428	1		+			
ANR	37391	MultiplicativeExpression	j * 16		35428	0		*			
ANR	37392	Identifier	j		35428	0					
ANR	37393	PrimaryExpression	16		35428	1					
ANR	37394	PrimaryExpression	4		35428	1					
ANR	37395	PostIncDecOperationExpression	i ++	419:57:11205:11207	35428	2	True				
ANR	37396	Identifier	i		35428	0					
ANR	37397	IncDec	++		35428	1					
ANR	37398	IfStatement	if ( h -> non_zero_count_cache [ scan8 [ i ] ] || h -> mb [ i * 16 ] )		35428	3					
ANR	37399	Condition	h -> non_zero_count_cache [ scan8 [ i ] ] || h -> mb [ i * 16 ]	421:32:11243:11292	35428	0	True				
ANR	37400	OrExpression	h -> non_zero_count_cache [ scan8 [ i ] ] || h -> mb [ i * 16 ]		35428	0		||			
ANR	37401	ArrayIndexing	h -> non_zero_count_cache [ scan8 [ i ] ]		35428	0					
ANR	37402	PtrMemberAccess	h -> non_zero_count_cache		35428	0					
ANR	37403	Identifier	h		35428	0					
ANR	37404	Identifier	non_zero_count_cache		35428	1					
ANR	37405	ArrayIndexing	scan8 [ i ]		35428	1					
ANR	37406	Identifier	scan8		35428	0					
ANR	37407	Identifier	i		35428	1					
ANR	37408	ArrayIndexing	h -> mb [ i * 16 ]		35428	1					
ANR	37409	PtrMemberAccess	h -> mb		35428	0					
ANR	37410	Identifier	h		35428	0					
ANR	37411	Identifier	mb		35428	1					
ANR	37412	MultiplicativeExpression	i * 16		35428	1		*			
ANR	37413	Identifier	i		35428	0					
ANR	37414	PrimaryExpression	16		35428	1					
ANR	37415	CompoundStatement		419:84:11234:11234	35428	1					
ANR	37416	Statement	uint8_t	423:32:11330:11336	35428	0	True				
ANR	37417	Statement	*	423:40:11338:11338	35428	1	True				
ANR	37418	Statement	const	423:41:11339:11343	35428	2	True				
ANR	37419	ExpressionStatement	ptr = dest [ j - 1 ] + block_offset [ i ]	423:47:11345:11380	35428	3	True				
ANR	37420	AssignmentExpression	ptr = dest [ j - 1 ] + block_offset [ i ]		35428	0		=			
ANR	37421	Identifier	ptr		35428	0					
ANR	37422	AdditiveExpression	dest [ j - 1 ] + block_offset [ i ]		35428	1		+			
ANR	37423	ArrayIndexing	dest [ j - 1 ]		35428	0					
ANR	37424	Identifier	dest		35428	0					
ANR	37425	AdditiveExpression	j - 1		35428	1		-			
ANR	37426	Identifier	j		35428	0					
ANR	37427	PrimaryExpression	1		35428	1					
ANR	37428	ArrayIndexing	block_offset [ i ]		35428	1					
ANR	37429	Identifier	block_offset		35428	0					
ANR	37430	Identifier	i		35428	1					
ANR	37431	ExpressionStatement	"ff_svq3_add_idct_c ( ptr , h -> mb + i * 16 , uvlinesize , ff_h264_chroma_qp [ 0 ] [ h -> qscale + 12 ] - 12 , 2 )"	425:32:11415:11616	35428	4	True				
ANR	37432	CallExpression	"ff_svq3_add_idct_c ( ptr , h -> mb + i * 16 , uvlinesize , ff_h264_chroma_qp [ 0 ] [ h -> qscale + 12 ] - 12 , 2 )"		35428	0					
ANR	37433	Callee	ff_svq3_add_idct_c		35428	0					
ANR	37434	Identifier	ff_svq3_add_idct_c		35428	0					
ANR	37435	ArgumentList	ptr		35428	1					
ANR	37436	Argument	ptr		35428	0					
ANR	37437	Identifier	ptr		35428	0					
ANR	37438	Argument	h -> mb + i * 16		35428	1					
ANR	37439	AdditiveExpression	h -> mb + i * 16		35428	0		+			
ANR	37440	PtrMemberAccess	h -> mb		35428	0					
ANR	37441	Identifier	h		35428	0					
ANR	37442	Identifier	mb		35428	1					
ANR	37443	MultiplicativeExpression	i * 16		35428	1		*			
ANR	37444	Identifier	i		35428	0					
ANR	37445	PrimaryExpression	16		35428	1					
ANR	37446	Argument	uvlinesize		35428	2					
ANR	37447	Identifier	uvlinesize		35428	0					
ANR	37448	Argument	ff_h264_chroma_qp [ 0 ] [ h -> qscale + 12 ] - 12		35428	3					
ANR	37449	AdditiveExpression	ff_h264_chroma_qp [ 0 ] [ h -> qscale + 12 ] - 12		35428	0		-			
ANR	37450	ArrayIndexing	ff_h264_chroma_qp [ 0 ] [ h -> qscale + 12 ]		35428	0					
ANR	37451	ArrayIndexing	ff_h264_chroma_qp [ 0 ]		35428	0					
ANR	37452	Identifier	ff_h264_chroma_qp		35428	0					
ANR	37453	PrimaryExpression	0		35428	1					
ANR	37454	AdditiveExpression	h -> qscale + 12		35428	1		+			
ANR	37455	PtrMemberAccess	h -> qscale		35428	0					
ANR	37456	Identifier	h		35428	0					
ANR	37457	Identifier	qscale		35428	1					
ANR	37458	PrimaryExpression	12		35428	1					
ANR	37459	PrimaryExpression	12		35428	1					
ANR	37460	Argument	2		35428	4					
ANR	37461	PrimaryExpression	2		35428	0					
ANR	37462	IfStatement	if ( h -> cbp || IS_INTRA ( mb_type ) )		35428	3					
ANR	37463	Condition	h -> cbp || IS_INTRA ( mb_type )	441:12:11730:11756	35428	0	True				
ANR	37464	OrExpression	h -> cbp || IS_INTRA ( mb_type )		35428	0		||			
ANR	37465	PtrMemberAccess	h -> cbp		35428	0					
ANR	37466	Identifier	h		35428	0					
ANR	37467	Identifier	cbp		35428	1					
ANR	37468	CallExpression	IS_INTRA ( mb_type )		35428	1					
ANR	37469	Callee	IS_INTRA		35428	0					
ANR	37470	Identifier	IS_INTRA		35428	0					
ANR	37471	ArgumentList	mb_type		35428	1					
ANR	37472	Argument	mb_type		35428	0					
ANR	37473	Identifier	mb_type		35428	0					
ANR	37474	CompoundStatement		439:41:11698:11698	35428	1					
ANR	37475	ExpressionStatement	h -> dsp . clear_blocks ( h -> mb )	443:12:11774:11800	35428	0	True				
ANR	37476	CallExpression	h -> dsp . clear_blocks ( h -> mb )		35428	0					
ANR	37477	Callee	h -> dsp . clear_blocks		35428	0					
ANR	37478	MemberAccess	h -> dsp . clear_blocks		35428	0					
ANR	37479	PtrMemberAccess	h -> dsp		35428	0					
ANR	37480	Identifier	h		35428	0					
ANR	37481	Identifier	dsp		35428	1					
ANR	37482	Identifier	clear_blocks		35428	1					
ANR	37483	ArgumentList	h -> mb		35428	1					
ANR	37484	Argument	h -> mb		35428	0					
ANR	37485	PtrMemberAccess	h -> mb		35428	0					
ANR	37486	Identifier	h		35428	0					
ANR	37487	Identifier	mb		35428	1					
ANR	37488	ExpressionStatement	h -> dsp . clear_blocks ( h -> mb + ( 24 * 16 << PIXEL_SHIFT ) )	445:12:11815:11868	35428	1	True				
ANR	37489	CallExpression	h -> dsp . clear_blocks ( h -> mb + ( 24 * 16 << PIXEL_SHIFT ) )		35428	0					
ANR	37490	Callee	h -> dsp . clear_blocks		35428	0					
ANR	37491	MemberAccess	h -> dsp . clear_blocks		35428	0					
ANR	37492	PtrMemberAccess	h -> dsp		35428	0					
ANR	37493	Identifier	h		35428	0					
ANR	37494	Identifier	dsp		35428	1					
ANR	37495	Identifier	clear_blocks		35428	1					
ANR	37496	ArgumentList	h -> mb + ( 24 * 16 << PIXEL_SHIFT )		35428	1					
ANR	37497	Argument	h -> mb + ( 24 * 16 << PIXEL_SHIFT )		35428	0					
ANR	37498	AdditiveExpression	h -> mb + ( 24 * 16 << PIXEL_SHIFT )		35428	0		+			
ANR	37499	PtrMemberAccess	h -> mb		35428	0					
ANR	37500	Identifier	h		35428	0					
ANR	37501	Identifier	mb		35428	1					
ANR	37502	ShiftExpression	24 * 16 << PIXEL_SHIFT		35428	1		<<			
ANR	37503	MultiplicativeExpression	24 * 16		35428	0		*			
ANR	37504	PrimaryExpression	24		35428	0					
ANR	37505	PrimaryExpression	16		35428	1					
ANR	37506	Identifier	PIXEL_SHIFT		35428	1					
ANR	37507	ReturnType	static av_noinline void FUNC		35428	1					
ANR	37508	Identifier	( hl_decode_mb )		35428	2					
ANR	37509	Identifier	hl_decode_mb		35428	3					
ANR	37510	ParameterList	H264Context * h		35428	4					
ANR	37511	Parameter	H264Context * h	1:43:43:56	35428	0	True				
ANR	37512	ParameterType	H264Context *		35428	0					
ANR	37513	Identifier	h		35428	1					
ANR	37514	CFGEntryNode	ENTRY		35428		True				
ANR	37515	CFGExitNode	EXIT		35428		True				
ANR	37516	Symbol	IS_INTRA_PCM		35428						
ANR	37517	Symbol	h -> dequant4_coeff		35428						
ANR	37518	Symbol	& gb		35428						
ANR	37519	Symbol	* scan8		35428						
ANR	37520	Symbol	h -> hpc . pred8x8_add		35428						
ANR	37521	Symbol	h -> intra_pcm_ptr		35428						
ANR	37522	Symbol	h -> dsp		35428						
ANR	37523	Symbol	h -> me . qpel_avg		35428						
ANR	37524	Symbol	linesize		35428						
ANR	37525	Symbol	h -> sps . profile_idc		35428						
ANR	37526	Symbol	block_offset		35428						
ANR	37527	Symbol	h -> h264dsp . weight_h264_pixels_tab		35428						
ANR	37528	Symbol	h -> mb		35428						
ANR	37529	Symbol	h -> me		35428						
ANR	37530	Symbol	mb_type		35428						
ANR	37531	Symbol	CHROMA422		35428						
ANR	37532	Symbol	src_cr		35428						
ANR	37533	Symbol	qp		35428						
ANR	37534	Symbol	IS_16X16		35428						
ANR	37535	Symbol	* CHROMA_DC_BLOCK_INDEX		35428						
ANR	37536	Symbol	src_cb		35428						
ANR	37537	Symbol	h -> uvlinesize		35428						
ANR	37538	Symbol	FRAME_MBAFF		35428						
ANR	37539	Symbol	h -> linesize		35428						
ANR	37540	Symbol	* tmp_y		35428						
ANR	37541	Symbol	chroma422		35428						
ANR	37542	Symbol	* * * IS_INTRA		35428						
ANR	37543	Symbol	dctcoef_get		35428						
ANR	37544	Symbol	h -> h264dsp . h264_add_pixels4		35428						
ANR	37545	Symbol	h -> flags		35428						
ANR	37546	Symbol	h -> cur_pic . f		35428						
ANR	37547	Symbol	h -> cur_pic . f . data		35428						
ANR	37548	Symbol	* * * h		35428						
ANR	37549	Symbol	h -> h264dsp . biweight_h264_pixels_tab		35428						
ANR	37550	Symbol	h -> cbp		35428						
ANR	37551	Symbol	h -> h264chroma		35428						
ANR	37552	Symbol	* dest		35428						
ANR	37553	Symbol	* * CHROMA_DC_BLOCK_INDEX		35428						
ANR	37554	Symbol	* h -> sps . chroma_format_idc		35428						
ANR	37555	Symbol	h -> hpc . pred8x8		35428						
ANR	37556	Symbol	h -> h264dsp		35428						
ANR	37557	Symbol	h -> mb_linesize		35428						
ANR	37558	Symbol	ff_h264_chroma_qp		35428						
ANR	37559	Symbol	CONFIG_GRAY		35428						
ANR	37560	Symbol	* * h -> ref_cache		35428						
ANR	37561	Symbol	* h -> dequant4_coeff		35428						
ANR	37562	Symbol	HOR_PRED8x8		35428						
ANR	37563	Symbol	h -> list_counts		35428						
ANR	37564	Symbol	* h -> qscale		35428						
ANR	37565	Symbol	* h -> cur_pic . f		35428						
ANR	37566	Symbol	idct_add		35428						
ANR	37567	Symbol	h		35428						
ANR	37568	Symbol	i		35428						
ANR	37569	Symbol	j		35428						
ANR	37570	Symbol	h -> sps . transform_bypass		35428						
ANR	37571	Symbol	dest_y		35428						
ANR	37572	Symbol	* list		35428						
ANR	37573	Symbol	ff_h264_mb_sizes		35428						
ANR	37574	Symbol	SIMPLE		35428						
ANR	37575	Symbol	mb_y		35428						
ANR	37576	Symbol	mb_x		35428						
ANR	37577	Symbol	CODEC_FLAG_GRAY		35428						
ANR	37578	Symbol	PIXEL_SHIFT		35428						
ANR	37579	Symbol	VERT_PRED8x8		35428						
ANR	37580	Symbol	h -> chroma_y_shift		35428						
ANR	37581	Symbol	get_bits		35428						
ANR	37582	Symbol	* * * h -> chroma_qp		35428						
ANR	37583	Symbol	h -> mb_x		35428						
ANR	37584	Symbol	* * qp		35428						
ANR	37585	Symbol	h -> mb_y		35428						
ANR	37586	Symbol	dest		35428						
ANR	37587	Symbol	* h -> avctx		35428						
ANR	37588	Symbol	block_h		35428						
ANR	37589	Symbol	h -> list_count		35428						
ANR	37590	Symbol	* * * * h		35428						
ANR	37591	Symbol	hl_motion_422		35428						
ANR	37592	Symbol	ref		35428						
ANR	37593	Symbol	* tmp_cr		35428						
ANR	37594	Symbol	hl_motion_420		35428						
ANR	37595	Symbol	uvlinesize		35428						
ANR	37596	Symbol	* h -> sps		35428						
ANR	37597	Symbol	* ff_h264_mb_sizes		35428						
ANR	37598	Symbol	MB_FIELD		35428						
ANR	37599	Symbol	tmp_cb		35428						
ANR	37600	Symbol	h -> hpc		35428						
ANR	37601	Symbol	* * i		35428						
ANR	37602	Symbol	* * h		35428						
ANR	37603	Symbol	* * IS_INTRA		35428						
ANR	37604	Symbol	h -> block_offset		35428						
ANR	37605	Symbol	h -> mb_uvlinesize		35428						
ANR	37606	Symbol	h -> deblocking_filter		35428						
ANR	37607	Symbol	* IS_INTRA		35428						
ANR	37608	Symbol	* * h -> chroma_qp		35428						
ANR	37609	Symbol	list		35428						
ANR	37610	Symbol	* * scan8		35428						
ANR	37611	Symbol	* * * h -> dequant4_coeff		35428						
ANR	37612	Symbol	* ff_h264_chroma_qp		35428						
ANR	37613	Symbol	* h -> mb		35428						
ANR	37614	Symbol	* * ff_h264_chroma_qp		35428						
ANR	37615	Symbol	tmp_cr		35428						
ANR	37616	Symbol	* h -> cur_pic . f . mb_type		35428						
ANR	37617	Symbol	bit_depth		35428						
ANR	37618	Symbol	h -> avctx		35428						
ANR	37619	Symbol	* h -> cur_pic		35428						
ANR	37620	Symbol	AV_CODEC_ID_H264		35428						
ANR	37621	Symbol	tmp_y		35428						
ANR	37622	Symbol	h -> h264chroma . put_h264_chroma_pixels_tab		35428						
ANR	37623	Symbol	h -> chroma_qp		35428						
ANR	37624	Symbol	mb_xy		35428						
ANR	37625	Symbol	* qp		35428						
ANR	37626	Symbol	IS_INTRA		35428						
ANR	37627	Symbol	dest_cb		35428						
ANR	37628	Symbol	h -> ref_cache		35428						
ANR	37629	Symbol	transform_bypass		35428						
ANR	37630	Symbol	h -> cur_pic		35428						
ANR	37631	Symbol	h -> vdsp		35428						
ANR	37632	Symbol	* * list		35428						
ANR	37633	Symbol	* h -> cur_pic . f . data		35428						
ANR	37634	Symbol	* h -> non_zero_count_cache		35428						
ANR	37635	Symbol	h -> qscale		35428						
ANR	37636	Symbol	CHROMA_DC_BLOCK_INDEX		35428						
ANR	37637	Symbol	h -> me . qpel_put		35428						
ANR	37638	Symbol	scan8		35428						
ANR	37639	Symbol	gb		35428						
ANR	37640	Symbol	* h -> list_counts		35428						
ANR	37641	Symbol	h -> sps . bit_depth_luma		35428						
ANR	37642	Symbol	h -> sps . chroma_format_idc		35428						
ANR	37643	Symbol	h -> avctx -> codec_id		35428						
ANR	37644	Symbol	* tmp_cb		35428						
ANR	37645	Symbol	h -> chroma_pred_mode		35428						
ANR	37646	Symbol	h -> cur_pic . f . mb_type		35428						
ANR	37647	Symbol	h -> non_zero_count_cache		35428						
ANR	37648	Symbol	is_h264		35428						
ANR	37649	Symbol	CONFIG_SVQ3_DECODER		35428						
ANR	37650	Symbol	* block_offset		35428						
ANR	37651	Symbol	ptr		35428						
ANR	37652	Symbol	h -> mb_xy		35428						
ANR	37653	Symbol	* h		35428						
ANR	37654	Symbol	* i		35428						
ANR	37655	Symbol	* j		35428						
ANR	37656	Symbol	* h -> chroma_qp		35428						
ANR	37657	Symbol	h -> h264chroma . avg_h264_chroma_pixels_tab		35428						
ANR	37658	Symbol	USES_LIST		35428						
ANR	37659	Symbol	h -> sps		35428						
ANR	37660	Symbol	* * h -> dequant4_coeff		35428						
ANR	37661	Symbol	* mb_xy		35428						
ANR	37662	Symbol	* * * qp		35428						
ANR	37663	Symbol	* ref		35428						
ANR	37664	Symbol	dest_cr		35428						
ANR	37665	Symbol	* h -> ref_cache		35428						
