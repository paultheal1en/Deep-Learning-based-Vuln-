command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4812193	File	/home/p4ultr4n/workplace/ReVeal/raw_code/if_output_0.c								
ANR	4812194	Function	if_output	1:0:0:2309							
ANR	4812195	FunctionDef	"if_output (struct socket * so , struct mbuf * ifm)"		4812194	0					
ANR	4812196	CompoundStatement		3:0:48:2309	4812194	0					
ANR	4812197	IdentifierDeclStatement	struct mbuf * ifq ;	5:1:52:68	4812194	0	True				
ANR	4812198	IdentifierDecl	* ifq		4812194	0					
ANR	4812199	IdentifierDeclType	struct mbuf *		4812194	0					
ANR	4812200	Identifier	ifq		4812194	1					
ANR	4812201	IdentifierDeclStatement	int on_fastq = 1 ;	7:1:72:88	4812194	1	True				
ANR	4812202	IdentifierDecl	on_fastq = 1		4812194	0					
ANR	4812203	IdentifierDeclType	int		4812194	0					
ANR	4812204	Identifier	on_fastq		4812194	1					
ANR	4812205	AssignmentExpression	on_fastq = 1		4812194	2		=			
ANR	4812206	Identifier	on_fastq		4812194	0					
ANR	4812207	PrimaryExpression	1		4812194	1					
ANR	4812208	ExpressionStatement	"DEBUG_CALL ( ""if_output"" )"	11:1:94:117	4812194	2	True				
ANR	4812209	CallExpression	"DEBUG_CALL ( ""if_output"" )"		4812194	0					
ANR	4812210	Callee	DEBUG_CALL		4812194	0					
ANR	4812211	Identifier	DEBUG_CALL		4812194	0					
ANR	4812212	ArgumentList	"""if_output"""		4812194	1					
ANR	4812213	Argument	"""if_output"""		4812194	0					
ANR	4812214	PrimaryExpression	"""if_output"""		4812194	0					
ANR	4812215	ExpressionStatement	"DEBUG_ARG ( ""so = %lx"" , ( long ) so )"	13:1:121:152	4812194	3	True				
ANR	4812216	CallExpression	"DEBUG_ARG ( ""so = %lx"" , ( long ) so )"		4812194	0					
ANR	4812217	Callee	DEBUG_ARG		4812194	0					
ANR	4812218	Identifier	DEBUG_ARG		4812194	0					
ANR	4812219	ArgumentList	"""so = %lx"""		4812194	1					
ANR	4812220	Argument	"""so = %lx"""		4812194	0					
ANR	4812221	PrimaryExpression	"""so = %lx"""		4812194	0					
ANR	4812222	Argument	( long ) so		4812194	1					
ANR	4812223	CastExpression	( long ) so		4812194	0					
ANR	4812224	CastTarget	long		4812194	0					
ANR	4812225	Identifier	so		4812194	1					
ANR	4812226	ExpressionStatement	"DEBUG_ARG ( ""ifm = %lx"" , ( long ) ifm )"	15:1:156:189	4812194	4	True				
ANR	4812227	CallExpression	"DEBUG_ARG ( ""ifm = %lx"" , ( long ) ifm )"		4812194	0					
ANR	4812228	Callee	DEBUG_ARG		4812194	0					
ANR	4812229	Identifier	DEBUG_ARG		4812194	0					
ANR	4812230	ArgumentList	"""ifm = %lx"""		4812194	1					
ANR	4812231	Argument	"""ifm = %lx"""		4812194	0					
ANR	4812232	PrimaryExpression	"""ifm = %lx"""		4812194	0					
ANR	4812233	Argument	( long ) ifm		4812194	1					
ANR	4812234	CastExpression	( long ) ifm		4812194	0					
ANR	4812235	CastTarget	long		4812194	0					
ANR	4812236	Identifier	ifm		4812194	1					
ANR	4812237	IfStatement	if ( ifm -> m_flags & M_USEDLIST )		4812194	5					
ANR	4812238	Condition	ifm -> m_flags & M_USEDLIST	29:5:364:388	4812194	0	True				
ANR	4812239	BitAndExpression	ifm -> m_flags & M_USEDLIST		4812194	0		&			
ANR	4812240	PtrMemberAccess	ifm -> m_flags		4812194	0					
ANR	4812241	Identifier	ifm		4812194	0					
ANR	4812242	Identifier	m_flags		4812194	1					
ANR	4812243	Identifier	M_USEDLIST		4812194	1					
ANR	4812244	CompoundStatement		27:32:342:342	4812194	1					
ANR	4812245	ExpressionStatement	remque ( ifm )	31:2:396:407	4812194	0	True				
ANR	4812246	CallExpression	remque ( ifm )		4812194	0					
ANR	4812247	Callee	remque		4812194	0					
ANR	4812248	Identifier	remque		4812194	0					
ANR	4812249	ArgumentList	ifm		4812194	1					
ANR	4812250	Argument	ifm		4812194	0					
ANR	4812251	Identifier	ifm		4812194	0					
ANR	4812252	ExpressionStatement	ifm -> m_flags &= ~M_USEDLIST	33:2:412:439	4812194	1	True				
ANR	4812253	AssignmentExpression	ifm -> m_flags &= ~M_USEDLIST		4812194	0		&=			
ANR	4812254	PtrMemberAccess	ifm -> m_flags		4812194	0					
ANR	4812255	Identifier	ifm		4812194	0					
ANR	4812256	Identifier	m_flags		4812194	1					
ANR	4812257	Identifier	~M_USEDLIST		4812194	1					
ANR	4812258	ForStatement	for ( ifq = if_batchq . ifq_prev ; ifq != & if_batchq ; ifq = ifq -> ifq_prev )		4812194	6					
ANR	4812259	ForInit	ifq = if_batchq . ifq_prev ;	53:6:780:804	4812194	0	True				
ANR	4812260	AssignmentExpression	ifq = if_batchq . ifq_prev		4812194	0		=			
ANR	4812261	Identifier	ifq		4812194	0					
ANR	4812262	MemberAccess	if_batchq . ifq_prev		4812194	1					
ANR	4812263	Identifier	if_batchq		4812194	0					
ANR	4812264	Identifier	ifq_prev		4812194	1					
ANR	4812265	Condition	ifq != & if_batchq	53:32:806:822	4812194	1	True				
ANR	4812266	EqualityExpression	ifq != & if_batchq		4812194	0		!=			
ANR	4812267	Identifier	ifq		4812194	0					
ANR	4812268	UnaryOperationExpression	& if_batchq		4812194	1					
ANR	4812269	UnaryOperator	&		4812194	0					
ANR	4812270	Identifier	if_batchq		4812194	1					
ANR	4812271	AssignmentExpression	ifq = ifq -> ifq_prev	53:51:825:843	4812194	2	True	=			
ANR	4812272	Identifier	ifq		4812194	0					
ANR	4812273	PtrMemberAccess	ifq -> ifq_prev		4812194	1					
ANR	4812274	Identifier	ifq		4812194	0					
ANR	4812275	Identifier	ifq_prev		4812194	1					
ANR	4812276	CompoundStatement		51:72:797:797	4812194	3					
ANR	4812277	IfStatement	if ( so == ifq -> ifq_so )		4812194	0					
ANR	4812278	Condition	so == ifq -> ifq_so	55:6:855:871	4812194	0	True				
ANR	4812279	EqualityExpression	so == ifq -> ifq_so		4812194	0		==			
ANR	4812280	Identifier	so		4812194	0					
ANR	4812281	PtrMemberAccess	ifq -> ifq_so		4812194	1					
ANR	4812282	Identifier	ifq		4812194	0					
ANR	4812283	Identifier	ifq_so		4812194	1					
ANR	4812284	CompoundStatement		53:25:825:825	4812194	1					
ANR	4812285	ExpressionStatement	ifm -> ifq_so = so	59:3:899:915	4812194	0	True				
ANR	4812286	AssignmentExpression	ifm -> ifq_so = so		4812194	0		=			
ANR	4812287	PtrMemberAccess	ifm -> ifq_so		4812194	0					
ANR	4812288	Identifier	ifm		4812194	0					
ANR	4812289	Identifier	ifq_so		4812194	1					
ANR	4812290	Identifier	so		4812194	1					
ANR	4812291	ExpressionStatement	"ifs_insque ( ifm , ifq -> ifs_prev )"	61:3:921:951	4812194	1	True				
ANR	4812292	CallExpression	"ifs_insque ( ifm , ifq -> ifs_prev )"		4812194	0					
ANR	4812293	Callee	ifs_insque		4812194	0					
ANR	4812294	Identifier	ifs_insque		4812194	0					
ANR	4812295	ArgumentList	ifm		4812194	1					
ANR	4812296	Argument	ifm		4812194	0					
ANR	4812297	Identifier	ifm		4812194	0					
ANR	4812298	Argument	ifq -> ifs_prev		4812194	1					
ANR	4812299	PtrMemberAccess	ifq -> ifs_prev		4812194	0					
ANR	4812300	Identifier	ifq		4812194	0					
ANR	4812301	Identifier	ifs_prev		4812194	1					
ANR	4812302	GotoStatement	goto diddit ;	63:3:957:968	4812194	2	True				
ANR	4812303	Identifier	diddit		4812194	0					
ANR	4812304	IfStatement	if ( so && ( so -> so_iptos & IPTOS_LOWDELAY ) )		4812194	7					
ANR	4812305	Condition	so && ( so -> so_iptos & IPTOS_LOWDELAY )	73:5:1036:1072	4812194	0	True				
ANR	4812306	AndExpression	so && ( so -> so_iptos & IPTOS_LOWDELAY )		4812194	0		&&			
ANR	4812307	Identifier	so		4812194	0					
ANR	4812308	BitAndExpression	so -> so_iptos & IPTOS_LOWDELAY		4812194	1		&			
ANR	4812309	PtrMemberAccess	so -> so_iptos		4812194	0					
ANR	4812310	Identifier	so		4812194	0					
ANR	4812311	Identifier	so_iptos		4812194	1					
ANR	4812312	Identifier	IPTOS_LOWDELAY		4812194	1					
ANR	4812313	CompoundStatement		71:44:1026:1026	4812194	1					
ANR	4812314	ExpressionStatement	ifq = if_fastq . ifq_prev	75:2:1080:1103	4812194	0	True				
ANR	4812315	AssignmentExpression	ifq = if_fastq . ifq_prev		4812194	0		=			
ANR	4812316	Identifier	ifq		4812194	0					
ANR	4812317	MemberAccess	if_fastq . ifq_prev		4812194	1					
ANR	4812318	Identifier	if_fastq		4812194	0					
ANR	4812319	Identifier	ifq_prev		4812194	1					
ANR	4812320	ExpressionStatement	on_fastq = 1	77:2:1108:1120	4812194	1	True				
ANR	4812321	AssignmentExpression	on_fastq = 1		4812194	0		=			
ANR	4812322	Identifier	on_fastq		4812194	0					
ANR	4812323	PrimaryExpression	1		4812194	1					
ANR	4812324	IfStatement	if ( ifq -> ifq_so == so )		4812194	2					
ANR	4812325	Condition	ifq -> ifq_so == so	87:6:1214:1230	4812194	0	True				
ANR	4812326	EqualityExpression	ifq -> ifq_so == so		4812194	0		==			
ANR	4812327	PtrMemberAccess	ifq -> ifq_so		4812194	0					
ANR	4812328	Identifier	ifq		4812194	0					
ANR	4812329	Identifier	ifq_so		4812194	1					
ANR	4812330	Identifier	so		4812194	1					
ANR	4812331	CompoundStatement		85:25:1184:1184	4812194	1					
ANR	4812332	ExpressionStatement	ifm -> ifq_so = so	89:3:1239:1255	4812194	0	True				
ANR	4812333	AssignmentExpression	ifm -> ifq_so = so		4812194	0		=			
ANR	4812334	PtrMemberAccess	ifm -> ifq_so		4812194	0					
ANR	4812335	Identifier	ifm		4812194	0					
ANR	4812336	Identifier	ifq_so		4812194	1					
ANR	4812337	Identifier	so		4812194	1					
ANR	4812338	ExpressionStatement	"ifs_insque ( ifm , ifq -> ifs_prev )"	91:3:1261:1291	4812194	1	True				
ANR	4812339	CallExpression	"ifs_insque ( ifm , ifq -> ifs_prev )"		4812194	0					
ANR	4812340	Callee	ifs_insque		4812194	0					
ANR	4812341	Identifier	ifs_insque		4812194	0					
ANR	4812342	ArgumentList	ifm		4812194	1					
ANR	4812343	Argument	ifm		4812194	0					
ANR	4812344	Identifier	ifm		4812194	0					
ANR	4812345	Argument	ifq -> ifs_prev		4812194	1					
ANR	4812346	PtrMemberAccess	ifq -> ifs_prev		4812194	0					
ANR	4812347	Identifier	ifq		4812194	0					
ANR	4812348	Identifier	ifs_prev		4812194	1					
ANR	4812349	GotoStatement	goto diddit ;	93:3:1297:1308	4812194	2	True				
ANR	4812350	Identifier	diddit		4812194	0					
ANR	4812351	ElseStatement	else		4812194	0					
ANR	4812352	ExpressionStatement	ifq = if_batchq . ifq_prev	99:2:1327:1351	4812194	0	True				
ANR	4812353	AssignmentExpression	ifq = if_batchq . ifq_prev		4812194	0		=			
ANR	4812354	Identifier	ifq		4812194	0					
ANR	4812355	MemberAccess	if_batchq . ifq_prev		4812194	1					
ANR	4812356	Identifier	if_batchq		4812194	0					
ANR	4812357	Identifier	ifq_prev		4812194	1					
ANR	4812358	ExpressionStatement	ifm -> ifq_so = so	105:1:1414:1430	4812194	8	True				
ANR	4812359	AssignmentExpression	ifm -> ifq_so = so		4812194	0		=			
ANR	4812360	PtrMemberAccess	ifm -> ifq_so		4812194	0					
ANR	4812361	Identifier	ifm		4812194	0					
ANR	4812362	Identifier	ifq_so		4812194	1					
ANR	4812363	Identifier	so		4812194	1					
ANR	4812364	ExpressionStatement	ifs_init ( ifm )	107:1:1434:1447	4812194	9	True				
ANR	4812365	CallExpression	ifs_init ( ifm )		4812194	0					
ANR	4812366	Callee	ifs_init		4812194	0					
ANR	4812367	Identifier	ifs_init		4812194	0					
ANR	4812368	ArgumentList	ifm		4812194	1					
ANR	4812369	Argument	ifm		4812194	0					
ANR	4812370	Identifier	ifm		4812194	0					
ANR	4812371	ExpressionStatement	"insque ( ifm , ifq )"	109:1:1451:1467	4812194	10	True				
ANR	4812372	CallExpression	"insque ( ifm , ifq )"		4812194	0					
ANR	4812373	Callee	insque		4812194	0					
ANR	4812374	Identifier	insque		4812194	0					
ANR	4812375	ArgumentList	ifm		4812194	1					
ANR	4812376	Argument	ifm		4812194	0					
ANR	4812377	Identifier	ifm		4812194	0					
ANR	4812378	Argument	ifq		4812194	1					
ANR	4812379	Identifier	ifq		4812194	0					
ANR	4812380	Label	diddit :	113:0:1472:1478	4812194	11	True				
ANR	4812381	Identifier	diddit		4812194	0					
ANR	4812382	ExpressionStatement	++ if_queued	115:1:1482:1493	4812194	12	True				
ANR	4812383	UnaryExpression	++ if_queued		4812194	0					
ANR	4812384	IncDec	++		4812194	0					
ANR	4812385	Identifier	if_queued		4812194	1					
ANR	4812386	IfStatement	if ( so )		4812194	13					
ANR	4812387	Condition	so	119:5:1503:1504	4812194	0	True				
ANR	4812388	Identifier	so		4812194	0					
ANR	4812389	CompoundStatement		117:9:1458:1458	4812194	1					
ANR	4812390	ExpressionStatement	so -> so_queued ++	123:2:1537:1552	4812194	0	True				
ANR	4812391	PostIncDecOperationExpression	so -> so_queued ++		4812194	0					
ANR	4812392	PtrMemberAccess	so -> so_queued		4812194	0					
ANR	4812393	Identifier	so		4812194	0					
ANR	4812394	Identifier	so_queued		4812194	1					
ANR	4812395	IncDec	++		4812194	1					
ANR	4812396	ExpressionStatement	so -> so_nqueued ++	125:2:1557:1573	4812194	1	True				
ANR	4812397	PostIncDecOperationExpression	so -> so_nqueued ++		4812194	0					
ANR	4812398	PtrMemberAccess	so -> so_nqueued		4812194	0					
ANR	4812399	Identifier	so		4812194	0					
ANR	4812400	Identifier	so_nqueued		4812194	1					
ANR	4812401	IncDec	++		4812194	1					
ANR	4812402	IfStatement	if ( on_fastq && ( ( so -> so_nqueued >= 6 ) && ( so -> so_nqueued - so -> so_queued ) >= 3 ) )		4812194	2					
ANR	4812403	Condition	on_fastq && ( ( so -> so_nqueued >= 6 ) && ( so -> so_nqueued - so -> so_queued ) >= 3 )	141:6:1882:1963	4812194	0	True				
ANR	4812404	AndExpression	on_fastq && ( ( so -> so_nqueued >= 6 ) && ( so -> so_nqueued - so -> so_queued ) >= 3 )		4812194	0		&&			
ANR	4812405	Identifier	on_fastq		4812194	0					
ANR	4812406	AndExpression	( so -> so_nqueued >= 6 ) && ( so -> so_nqueued - so -> so_queued ) >= 3		4812194	1		&&			
ANR	4812407	RelationalExpression	so -> so_nqueued >= 6		4812194	0		>=			
ANR	4812408	PtrMemberAccess	so -> so_nqueued		4812194	0					
ANR	4812409	Identifier	so		4812194	0					
ANR	4812410	Identifier	so_nqueued		4812194	1					
ANR	4812411	PrimaryExpression	6		4812194	1					
ANR	4812412	RelationalExpression	( so -> so_nqueued - so -> so_queued ) >= 3		4812194	1		>=			
ANR	4812413	AdditiveExpression	so -> so_nqueued - so -> so_queued		4812194	0		-			
ANR	4812414	PtrMemberAccess	so -> so_nqueued		4812194	0					
ANR	4812415	Identifier	so		4812194	0					
ANR	4812416	Identifier	so_nqueued		4812194	1					
ANR	4812417	PtrMemberAccess	so -> so_queued		4812194	1					
ANR	4812418	Identifier	so		4812194	0					
ANR	4812419	Identifier	so_queued		4812194	1					
ANR	4812420	PrimaryExpression	3		4812194	1					
ANR	4812421	CompoundStatement		141:45:1917:1917	4812194	1					
ANR	4812422	ExpressionStatement	remque ( ifm -> ifs_next )	149:3:2013:2034	4812194	0	True				
ANR	4812423	CallExpression	remque ( ifm -> ifs_next )		4812194	0					
ANR	4812424	Callee	remque		4812194	0					
ANR	4812425	Identifier	remque		4812194	0					
ANR	4812426	ArgumentList	ifm -> ifs_next		4812194	1					
ANR	4812427	Argument	ifm -> ifs_next		4812194	0					
ANR	4812428	PtrMemberAccess	ifm -> ifs_next		4812194	0					
ANR	4812429	Identifier	ifm		4812194	0					
ANR	4812430	Identifier	ifs_next		4812194	1					
ANR	4812431	ExpressionStatement	"insque ( ifm -> ifs_next , & if_batchq )"	155:3:2097:2130	4812194	1	True				
ANR	4812432	CallExpression	"insque ( ifm -> ifs_next , & if_batchq )"		4812194	0					
ANR	4812433	Callee	insque		4812194	0					
ANR	4812434	Identifier	insque		4812194	0					
ANR	4812435	ArgumentList	ifm -> ifs_next		4812194	1					
ANR	4812436	Argument	ifm -> ifs_next		4812194	0					
ANR	4812437	PtrMemberAccess	ifm -> ifs_next		4812194	0					
ANR	4812438	Identifier	ifm		4812194	0					
ANR	4812439	Identifier	ifs_next		4812194	1					
ANR	4812440	Argument	& if_batchq		4812194	1					
ANR	4812441	UnaryOperationExpression	& if_batchq		4812194	0					
ANR	4812442	UnaryOperator	&		4812194	0					
ANR	4812443	Identifier	if_batchq		4812194	1					
ANR	4812444	IfStatement	if ( link_up )		4812194	14					
ANR	4812445	Condition	link_up	171:5:2233:2239	4812194	0	True				
ANR	4812446	Identifier	link_up		4812194	0					
ANR	4812447	CompoundStatement		169:14:2193:2193	4812194	1					
ANR	4812448	ExpressionStatement	if_start ( )	175:2:2284:2294	4812194	0	True				
ANR	4812449	CallExpression	if_start ( )		4812194	0					
ANR	4812450	Callee	if_start		4812194	0					
ANR	4812451	Identifier	if_start		4812194	0					
ANR	4812452	ArgumentList			4812194	1					
ANR	4812453	Identifier	if_output		4812194	1					
ANR	4812454	ParameterList	"struct socket * so , struct mbuf * ifm"		4812194	2					
ANR	4812455	Parameter	struct socket * so	1:10:10:26	4812194	0	True				
ANR	4812456	ParameterType	struct socket *		4812194	0					
ANR	4812457	Identifier	so		4812194	1					
ANR	4812458	Parameter	struct mbuf * ifm	1:29:29:44	4812194	1	True				
ANR	4812459	ParameterType	struct mbuf *		4812194	0					
ANR	4812460	Identifier	ifm		4812194	1					
ANR	4812461	CFGEntryNode	ENTRY		4812194		True				
ANR	4812462	CFGExitNode	EXIT		4812194		True				
ANR	4812463	Symbol	IPTOS_LOWDELAY		4812194						
ANR	4812464	Symbol	* so		4812194						
ANR	4812465	Symbol	on_fastq		4812194						
ANR	4812466	Symbol	M_USEDLIST		4812194						
ANR	4812467	Symbol	ifq -> ifs_prev		4812194						
ANR	4812468	Symbol	ifm -> m_flags		4812194						
ANR	4812469	Symbol	ifm -> ifq_so		4812194						
ANR	4812470	Symbol	ifq -> ifq_prev		4812194						
ANR	4812471	Symbol	if_fastq		4812194						
ANR	4812472	Symbol	if_batchq . ifq_prev		4812194						
ANR	4812473	Symbol	link_up		4812194						
ANR	4812474	Symbol	ifm -> ifs_next		4812194						
ANR	4812475	Symbol	ifq -> ifq_so		4812194						
ANR	4812476	Symbol	if_batchq		4812194						
ANR	4812477	Symbol	so		4812194						
ANR	4812478	Symbol	~M_USEDLIST		4812194						
ANR	4812479	Symbol	so -> so_queued		4812194						
ANR	4812480	Symbol	* ifq		4812194						
ANR	4812481	Symbol	* ifm		4812194						
ANR	4812482	Symbol	so -> so_nqueued		4812194						
ANR	4812483	Symbol	ifm		4812194						
ANR	4812484	Symbol	ifq		4812194						
ANR	4812485	Symbol	if_fastq . ifq_prev		4812194						
ANR	4812486	Symbol	& if_batchq		4812194						
ANR	4812487	Symbol	so -> so_iptos		4812194						
