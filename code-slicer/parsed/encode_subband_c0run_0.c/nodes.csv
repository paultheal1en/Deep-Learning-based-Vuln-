command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3040252	File	/home/p4ultr4n/workplace/ReVeal/raw_code/encode_subband_c0run_0.c								
ANR	3040253	Function	encode_subband_c0run	1:0:0:4022							
ANR	3040254	FunctionDef	"encode_subband_c0run (SnowContext * s , SubBand * b , DWTELEM * src , DWTELEM * parent , int stride , int orientation)"		3040253	0					
ANR	3040255	CompoundStatement		1:119:119:4022	3040253	0					
ANR	3040256	IdentifierDeclStatement	const int w = b -> width ;	3:4:126:147	3040253	0	True				
ANR	3040257	IdentifierDecl	w = b -> width		3040253	0					
ANR	3040258	IdentifierDeclType	const int		3040253	0					
ANR	3040259	Identifier	w		3040253	1					
ANR	3040260	AssignmentExpression	w = b -> width		3040253	2		=			
ANR	3040261	Identifier	w		3040253	0					
ANR	3040262	PtrMemberAccess	b -> width		3040253	1					
ANR	3040263	Identifier	b		3040253	0					
ANR	3040264	Identifier	width		3040253	1					
ANR	3040265	IdentifierDeclStatement	const int h = b -> height ;	5:4:154:176	3040253	1	True				
ANR	3040266	IdentifierDecl	h = b -> height		3040253	0					
ANR	3040267	IdentifierDeclType	const int		3040253	0					
ANR	3040268	Identifier	h		3040253	1					
ANR	3040269	AssignmentExpression	h = b -> height		3040253	2		=			
ANR	3040270	Identifier	h		3040253	0					
ANR	3040271	PtrMemberAccess	b -> height		3040253	1					
ANR	3040272	Identifier	b		3040253	0					
ANR	3040273	Identifier	height		3040253	1					
ANR	3040274	IdentifierDeclStatement	"int x , y ;"	7:4:183:191	3040253	2	True				
ANR	3040275	IdentifierDecl	x		3040253	0					
ANR	3040276	IdentifierDeclType	int		3040253	0					
ANR	3040277	Identifier	x		3040253	1					
ANR	3040278	IdentifierDecl	y		3040253	1					
ANR	3040279	IdentifierDeclType	int		3040253	0					
ANR	3040280	Identifier	y		3040253	1					
ANR	3040281	IfStatement	if ( 1 )		3040253	3					
ANR	3040282	Condition	1	11:7:203:203	3040253	0	True				
ANR	3040283	PrimaryExpression	1		3040253	0					
ANR	3040284	CompoundStatement		17:8:140:155	3040253	1					
ANR	3040285	IdentifierDeclStatement	int run = 0 ;	13:8:216:225	3040253	0	True				
ANR	3040286	IdentifierDecl	run = 0		3040253	0					
ANR	3040287	IdentifierDeclType	int		3040253	0					
ANR	3040288	Identifier	run		3040253	1					
ANR	3040289	AssignmentExpression	run = 0		3040253	2		=			
ANR	3040290	Identifier	run		3040253	0					
ANR	3040291	PrimaryExpression	0		3040253	1					
ANR	3040292	IdentifierDeclStatement	int runs [ w * h ] ;	15:8:236:249	3040253	1	True				
ANR	3040293	IdentifierDecl	runs [ w * h ]		3040253	0					
ANR	3040294	IdentifierDeclType	int [ w * h ]		3040253	0					
ANR	3040295	Identifier	runs		3040253	1					
ANR	3040296	MultiplicativeExpression	w * h		3040253	2		*			
ANR	3040297	Identifier	w		3040253	0					
ANR	3040298	Identifier	h		3040253	1					
ANR	3040299	IdentifierDeclStatement	int run_index = 0 ;	17:8:260:275	3040253	2	True				
ANR	3040300	IdentifierDecl	run_index = 0		3040253	0					
ANR	3040301	IdentifierDeclType	int		3040253	0					
ANR	3040302	Identifier	run_index		3040253	1					
ANR	3040303	AssignmentExpression	run_index = 0		3040253	2		=			
ANR	3040304	Identifier	run_index		3040253	0					
ANR	3040305	PrimaryExpression	0		3040253	1					
ANR	3040306	ForStatement	for ( y = 0 ; y < h ; y ++ )		3040253	3					
ANR	3040307	ForInit	y = 0 ;	21:12:308:311	3040253	0	True				
ANR	3040308	AssignmentExpression	y = 0		3040253	0		=			
ANR	3040309	Identifier	y		3040253	0					
ANR	3040310	PrimaryExpression	0		3040253	1					
ANR	3040311	Condition	y < h	21:17:313:315	3040253	1	True				
ANR	3040312	RelationalExpression	y < h		3040253	0		<			
ANR	3040313	Identifier	y		3040253	0					
ANR	3040314	Identifier	h		3040253	1					
ANR	3040315	PostIncDecOperationExpression	y ++	21:22:318:320	3040253	2	True				
ANR	3040316	Identifier	y		3040253	0					
ANR	3040317	IncDec	++		3040253	1					
ANR	3040318	CompoundStatement		21:26:202:202	3040253	3					
ANR	3040319	ForStatement	for ( x = 0 ; x < w ; x ++ )		3040253	0					
ANR	3040320	ForInit	x = 0 ;	23:16:341:344	3040253	0	True				
ANR	3040321	AssignmentExpression	x = 0		3040253	0		=			
ANR	3040322	Identifier	x		3040253	0					
ANR	3040323	PrimaryExpression	0		3040253	1					
ANR	3040324	Condition	x < w	23:21:346:348	3040253	1	True				
ANR	3040325	RelationalExpression	x < w		3040253	0		<			
ANR	3040326	Identifier	x		3040253	0					
ANR	3040327	Identifier	w		3040253	1					
ANR	3040328	PostIncDecOperationExpression	x ++	23:26:351:353	3040253	2	True				
ANR	3040329	Identifier	x		3040253	0					
ANR	3040330	IncDec	++		3040253	1					
ANR	3040331	CompoundStatement		27:16:283:317	3040253	3					
ANR	3040332	IdentifierDeclStatement	"int v , p = 0 ;"	25:16:374:384	3040253	0	True				
ANR	3040333	IdentifierDecl	v		3040253	0					
ANR	3040334	IdentifierDeclType	int		3040253	0					
ANR	3040335	Identifier	v		3040253	1					
ANR	3040336	IdentifierDecl	p = 0		3040253	1					
ANR	3040337	IdentifierDeclType	int		3040253	0					
ANR	3040338	Identifier	p		3040253	1					
ANR	3040339	AssignmentExpression	p = 0		3040253	2		=			
ANR	3040340	Identifier	p		3040253	0					
ANR	3040341	PrimaryExpression	0		3040253	1					
ANR	3040342	IdentifierDeclStatement	"int l = 0 , lt = 0 , t = 0 , rt = 0 ;"	27:16:403:437	3040253	1	True				
ANR	3040343	IdentifierDecl	l = 0		3040253	0					
ANR	3040344	IdentifierDeclType	int		3040253	0					
ANR	3040345	Identifier	l		3040253	1					
ANR	3040346	AssignmentExpression	l = 0		3040253	2		=			
ANR	3040347	Identifier	l		3040253	0					
ANR	3040348	PrimaryExpression	0		3040253	1					
ANR	3040349	IdentifierDecl	lt = 0		3040253	1					
ANR	3040350	IdentifierDeclType	int		3040253	0					
ANR	3040351	Identifier	lt		3040253	1					
ANR	3040352	AssignmentExpression	lt = 0		3040253	2		=			
ANR	3040353	Identifier	lt		3040253	0					
ANR	3040354	PrimaryExpression	0		3040253	1					
ANR	3040355	IdentifierDecl	t = 0		3040253	2					
ANR	3040356	IdentifierDeclType	int		3040253	0					
ANR	3040357	Identifier	t		3040253	1					
ANR	3040358	AssignmentExpression	t = 0		3040253	2		=			
ANR	3040359	Identifier	t		3040253	0					
ANR	3040360	PrimaryExpression	0		3040253	1					
ANR	3040361	IdentifierDecl	rt = 0		3040253	3					
ANR	3040362	IdentifierDeclType	int		3040253	0					
ANR	3040363	Identifier	rt		3040253	1					
ANR	3040364	AssignmentExpression	rt = 0		3040253	2		=			
ANR	3040365	Identifier	rt		3040253	0					
ANR	3040366	PrimaryExpression	0		3040253	1					
ANR	3040367	ExpressionStatement	v = src [ x + y * stride ]	29:16:456:476	3040253	2	True				
ANR	3040368	AssignmentExpression	v = src [ x + y * stride ]		3040253	0		=			
ANR	3040369	Identifier	v		3040253	0					
ANR	3040370	ArrayIndexing	src [ x + y * stride ]		3040253	1					
ANR	3040371	Identifier	src		3040253	0					
ANR	3040372	AdditiveExpression	x + y * stride		3040253	1		+			
ANR	3040373	Identifier	x		3040253	0					
ANR	3040374	MultiplicativeExpression	y * stride		3040253	1		*			
ANR	3040375	Identifier	y		3040253	0					
ANR	3040376	Identifier	stride		3040253	1					
ANR	3040377	IfStatement	if ( y )		3040253	3					
ANR	3040378	Condition	y	33:19:500:500	3040253	0	True				
ANR	3040379	Identifier	y		3040253	0					
ANR	3040380	CompoundStatement		33:21:382:382	3040253	1					
ANR	3040381	ExpressionStatement	t = src [ x + ( y - 1 ) * stride ]	35:20:525:549	3040253	0	True				
ANR	3040382	AssignmentExpression	t = src [ x + ( y - 1 ) * stride ]		3040253	0		=			
ANR	3040383	Identifier	t		3040253	0					
ANR	3040384	ArrayIndexing	src [ x + ( y - 1 ) * stride ]		3040253	1					
ANR	3040385	Identifier	src		3040253	0					
ANR	3040386	AdditiveExpression	x + ( y - 1 ) * stride		3040253	1		+			
ANR	3040387	Identifier	x		3040253	0					
ANR	3040388	MultiplicativeExpression	( y - 1 ) * stride		3040253	1		*			
ANR	3040389	AdditiveExpression	y - 1		3040253	0		-			
ANR	3040390	Identifier	y		3040253	0					
ANR	3040391	PrimaryExpression	1		3040253	1					
ANR	3040392	Identifier	stride		3040253	1					
ANR	3040393	IfStatement	if ( x )		3040253	1					
ANR	3040394	Condition	x	37:23:575:575	3040253	0	True				
ANR	3040395	Identifier	x		3040253	0					
ANR	3040396	CompoundStatement		37:25:457:457	3040253	1					
ANR	3040397	ExpressionStatement	lt = src [ x - 1 + ( y - 1 ) * stride ]	39:24:604:633	3040253	0	True				
ANR	3040398	AssignmentExpression	lt = src [ x - 1 + ( y - 1 ) * stride ]		3040253	0		=			
ANR	3040399	Identifier	lt		3040253	0					
ANR	3040400	ArrayIndexing	src [ x - 1 + ( y - 1 ) * stride ]		3040253	1					
ANR	3040401	Identifier	src		3040253	0					
ANR	3040402	AdditiveExpression	x - 1 + ( y - 1 ) * stride		3040253	1		-			
ANR	3040403	Identifier	x		3040253	0					
ANR	3040404	AdditiveExpression	1 + ( y - 1 ) * stride		3040253	1		+			
ANR	3040405	PrimaryExpression	1		3040253	0					
ANR	3040406	MultiplicativeExpression	( y - 1 ) * stride		3040253	1		*			
ANR	3040407	AdditiveExpression	y - 1		3040253	0		-			
ANR	3040408	Identifier	y		3040253	0					
ANR	3040409	PrimaryExpression	1		3040253	1					
ANR	3040410	Identifier	stride		3040253	1					
ANR	3040411	IfStatement	if ( x + 1 < w )		3040253	2					
ANR	3040412	Condition	x + 1 < w	43:23:682:690	3040253	0	True				
ANR	3040413	RelationalExpression	x + 1 < w		3040253	0		<			
ANR	3040414	AdditiveExpression	x + 1		3040253	0		+			
ANR	3040415	Identifier	x		3040253	0					
ANR	3040416	PrimaryExpression	1		3040253	1					
ANR	3040417	Identifier	w		3040253	1					
ANR	3040418	CompoundStatement		43:33:572:572	3040253	1					
ANR	3040419	ExpressionStatement	rt = src [ x + 1 + ( y - 1 ) * stride ]	45:24:719:748	3040253	0	True				
ANR	3040420	AssignmentExpression	rt = src [ x + 1 + ( y - 1 ) * stride ]		3040253	0		=			
ANR	3040421	Identifier	rt		3040253	0					
ANR	3040422	ArrayIndexing	src [ x + 1 + ( y - 1 ) * stride ]		3040253	1					
ANR	3040423	Identifier	src		3040253	0					
ANR	3040424	AdditiveExpression	x + 1 + ( y - 1 ) * stride		3040253	1		+			
ANR	3040425	Identifier	x		3040253	0					
ANR	3040426	AdditiveExpression	1 + ( y - 1 ) * stride		3040253	1		+			
ANR	3040427	PrimaryExpression	1		3040253	0					
ANR	3040428	MultiplicativeExpression	( y - 1 ) * stride		3040253	1		*			
ANR	3040429	AdditiveExpression	y - 1		3040253	0		-			
ANR	3040430	Identifier	y		3040253	0					
ANR	3040431	PrimaryExpression	1		3040253	1					
ANR	3040432	Identifier	stride		3040253	1					
ANR	3040433	IfStatement	if ( x )		3040253	4					
ANR	3040434	Condition	x	51:19:812:812	3040253	0	True				
ANR	3040435	Identifier	x		3040253	0					
ANR	3040436	CompoundStatement		51:21:694:694	3040253	1					
ANR	3040437	ExpressionStatement	l = src [ x - 1 + y * stride ]	53:20:837:861	3040253	0	True				
ANR	3040438	AssignmentExpression	l = src [ x - 1 + y * stride ]		3040253	0		=			
ANR	3040439	Identifier	l		3040253	0					
ANR	3040440	ArrayIndexing	src [ x - 1 + y * stride ]		3040253	1					
ANR	3040441	Identifier	src		3040253	0					
ANR	3040442	AdditiveExpression	x - 1 + y * stride		3040253	1		-			
ANR	3040443	Identifier	x		3040253	0					
ANR	3040444	AdditiveExpression	1 + y * stride		3040253	1		+			
ANR	3040445	PrimaryExpression	1		3040253	0					
ANR	3040446	MultiplicativeExpression	y * stride		3040253	1		*			
ANR	3040447	Identifier	y		3040253	0					
ANR	3040448	Identifier	stride		3040253	1					
ANR	3040449	IfStatement	if ( parent )		3040253	5					
ANR	3040450	Condition	parent	65:19:1103:1108	3040253	0	True				
ANR	3040451	Identifier	parent		3040253	0					
ANR	3040452	CompoundStatement		69:20:1048:1060	3040253	1					
ANR	3040453	IdentifierDeclStatement	int px = x >> 1 ;	67:20:1133:1145	3040253	0	True				
ANR	3040454	IdentifierDecl	px = x >> 1		3040253	0					
ANR	3040455	IdentifierDeclType	int		3040253	0					
ANR	3040456	Identifier	px		3040253	1					
ANR	3040457	AssignmentExpression	px = x >> 1		3040253	2		=			
ANR	3040458	Identifier	px		3040253	0					
ANR	3040459	ShiftExpression	x >> 1		3040253	1		>>			
ANR	3040460	Identifier	x		3040253	0					
ANR	3040461	PrimaryExpression	1		3040253	1					
ANR	3040462	IdentifierDeclStatement	int py = y >> 1 ;	69:20:1168:1180	3040253	1	True				
ANR	3040463	IdentifierDecl	py = y >> 1		3040253	0					
ANR	3040464	IdentifierDeclType	int		3040253	0					
ANR	3040465	Identifier	py		3040253	1					
ANR	3040466	AssignmentExpression	py = y >> 1		3040253	2		=			
ANR	3040467	Identifier	py		3040253	0					
ANR	3040468	ShiftExpression	y >> 1		3040253	1		>>			
ANR	3040469	Identifier	y		3040253	0					
ANR	3040470	PrimaryExpression	1		3040253	1					
ANR	3040471	IfStatement	if ( px < b -> parent -> width && py < b -> parent -> height )		3040253	2					
ANR	3040472	Condition	px < b -> parent -> width && py < b -> parent -> height	71:23:1206:1248	3040253	0	True				
ANR	3040473	AndExpression	px < b -> parent -> width && py < b -> parent -> height		3040253	0		&&			
ANR	3040474	RelationalExpression	px < b -> parent -> width		3040253	0		<			
ANR	3040475	Identifier	px		3040253	0					
ANR	3040476	PtrMemberAccess	b -> parent -> width		3040253	1					
ANR	3040477	PtrMemberAccess	b -> parent		3040253	0					
ANR	3040478	Identifier	b		3040253	0					
ANR	3040479	Identifier	parent		3040253	1					
ANR	3040480	Identifier	width		3040253	1					
ANR	3040481	RelationalExpression	py < b -> parent -> height		3040253	1		<			
ANR	3040482	Identifier	py		3040253	0					
ANR	3040483	PtrMemberAccess	b -> parent -> height		3040253	1					
ANR	3040484	PtrMemberAccess	b -> parent		3040253	0					
ANR	3040485	Identifier	b		3040253	0					
ANR	3040486	Identifier	parent		3040253	1					
ANR	3040487	Identifier	height		3040253	1					
ANR	3040488	ExpressionStatement	p = parent [ px + py * 2 * stride ]	73:24:1277:1304	3040253	1	True				
ANR	3040489	AssignmentExpression	p = parent [ px + py * 2 * stride ]		3040253	0		=			
ANR	3040490	Identifier	p		3040253	0					
ANR	3040491	ArrayIndexing	parent [ px + py * 2 * stride ]		3040253	1					
ANR	3040492	Identifier	parent		3040253	0					
ANR	3040493	AdditiveExpression	px + py * 2 * stride		3040253	1		+			
ANR	3040494	Identifier	px		3040253	0					
ANR	3040495	MultiplicativeExpression	py * 2 * stride		3040253	1		*			
ANR	3040496	Identifier	py		3040253	0					
ANR	3040497	MultiplicativeExpression	2 * stride		3040253	1		*			
ANR	3040498	PrimaryExpression	2		3040253	0					
ANR	3040499	Identifier	stride		3040253	1					
ANR	3040500	IfStatement	if ( ! ( l | lt | t | rt | p ) )		3040253	6					
ANR	3040501	Condition	! ( l | lt | t | rt | p )	77:19:1345:1365	3040253	0	True				
ANR	3040502	UnaryOperationExpression	! ( l | lt | t | rt | p )		3040253	0					
ANR	3040503	UnaryOperator	!		3040253	0					
ANR	3040504	InclusiveOrExpression	l | lt | t | rt | p		3040253	1		|			
ANR	3040505	Identifier	l		3040253	0					
ANR	3040506	InclusiveOrExpression	lt | t | rt | p		3040253	1		|			
ANR	3040507	Identifier	lt		3040253	0					
ANR	3040508	InclusiveOrExpression	t | rt | p		3040253	1		|			
ANR	3040509	Identifier	t		3040253	0					
ANR	3040510	InclusiveOrExpression	rt | p		3040253	1		|			
ANR	3040511	Identifier	rt		3040253	0					
ANR	3040512	Identifier	p		3040253	1					
ANR	3040513	CompoundStatement		77:41:1247:1247	3040253	1					
ANR	3040514	IfStatement	if ( v )		3040253	0					
ANR	3040515	Condition	v	79:23:1393:1393	3040253	0	True				
ANR	3040516	Identifier	v		3040253	0					
ANR	3040517	CompoundStatement		79:25:1275:1275	3040253	1					
ANR	3040518	ExpressionStatement	runs [ run_index ++ ] = run	81:24:1422:1444	3040253	0	True				
ANR	3040519	AssignmentExpression	runs [ run_index ++ ] = run		3040253	0		=			
ANR	3040520	ArrayIndexing	runs [ run_index ++ ]		3040253	0					
ANR	3040521	Identifier	runs		3040253	0					
ANR	3040522	PostIncDecOperationExpression	run_index ++		3040253	1					
ANR	3040523	Identifier	run_index		3040253	0					
ANR	3040524	IncDec	++		3040253	1					
ANR	3040525	Identifier	run		3040253	1					
ANR	3040526	ExpressionStatement	run = 0	83:24:1471:1476	3040253	1	True				
ANR	3040527	AssignmentExpression	run = 0		3040253	0		=			
ANR	3040528	Identifier	run		3040253	0					
ANR	3040529	PrimaryExpression	0		3040253	1					
ANR	3040530	ElseStatement	else		3040253	0					
ANR	3040531	CompoundStatement		85:25:1384:1384	3040253	0					
ANR	3040532	ExpressionStatement	run ++	87:24:1531:1536	3040253	0	True				
ANR	3040533	PostIncDecOperationExpression	run ++		3040253	0					
ANR	3040534	Identifier	run		3040253	0					
ANR	3040535	IncDec	++		3040253	1					
ANR	3040536	ExpressionStatement	runs [ run_index ++ ] = run	97:8:1615:1637	3040253	4	True				
ANR	3040537	AssignmentExpression	runs [ run_index ++ ] = run		3040253	0		=			
ANR	3040538	ArrayIndexing	runs [ run_index ++ ]		3040253	0					
ANR	3040539	Identifier	runs		3040253	0					
ANR	3040540	PostIncDecOperationExpression	run_index ++		3040253	1					
ANR	3040541	Identifier	run_index		3040253	0					
ANR	3040542	IncDec	++		3040253	1					
ANR	3040543	Identifier	run		3040253	1					
ANR	3040544	ExpressionStatement	run_index = 0	99:8:1648:1659	3040253	5	True				
ANR	3040545	AssignmentExpression	run_index = 0		3040253	0		=			
ANR	3040546	Identifier	run_index		3040253	0					
ANR	3040547	PrimaryExpression	0		3040253	1					
ANR	3040548	ExpressionStatement	run = runs [ run_index ++ ]	101:8:1670:1692	3040253	6	True				
ANR	3040549	AssignmentExpression	run = runs [ run_index ++ ]		3040253	0		=			
ANR	3040550	Identifier	run		3040253	0					
ANR	3040551	ArrayIndexing	runs [ run_index ++ ]		3040253	1					
ANR	3040552	Identifier	runs		3040253	0					
ANR	3040553	PostIncDecOperationExpression	run_index ++		3040253	1					
ANR	3040554	Identifier	run_index		3040253	0					
ANR	3040555	IncDec	++		3040253	1					
ANR	3040556	ExpressionStatement	"put_symbol2 ( & s -> c , b -> state [ 1 ] , run , 3 )"	105:8:1705:1744	3040253	7	True				
ANR	3040557	CallExpression	"put_symbol2 ( & s -> c , b -> state [ 1 ] , run , 3 )"		3040253	0					
ANR	3040558	Callee	put_symbol2		3040253	0					
ANR	3040559	Identifier	put_symbol2		3040253	0					
ANR	3040560	ArgumentList	& s -> c		3040253	1					
ANR	3040561	Argument	& s -> c		3040253	0					
ANR	3040562	UnaryOperationExpression	& s -> c		3040253	0					
ANR	3040563	UnaryOperator	&		3040253	0					
ANR	3040564	PtrMemberAccess	s -> c		3040253	1					
ANR	3040565	Identifier	s		3040253	0					
ANR	3040566	Identifier	c		3040253	1					
ANR	3040567	Argument	b -> state [ 1 ]		3040253	1					
ANR	3040568	ArrayIndexing	b -> state [ 1 ]		3040253	0					
ANR	3040569	PtrMemberAccess	b -> state		3040253	0					
ANR	3040570	Identifier	b		3040253	0					
ANR	3040571	Identifier	state		3040253	1					
ANR	3040572	PrimaryExpression	1		3040253	1					
ANR	3040573	Argument	run		3040253	2					
ANR	3040574	Identifier	run		3040253	0					
ANR	3040575	Argument	3		3040253	3					
ANR	3040576	PrimaryExpression	3		3040253	0					
ANR	3040577	ForStatement	for ( y = 0 ; y < h ; y ++ )		3040253	8					
ANR	3040578	ForInit	y = 0 ;	109:12:1769:1772	3040253	0	True				
ANR	3040579	AssignmentExpression	y = 0		3040253	0		=			
ANR	3040580	Identifier	y		3040253	0					
ANR	3040581	PrimaryExpression	0		3040253	1					
ANR	3040582	Condition	y < h	109:17:1774:1776	3040253	1	True				
ANR	3040583	RelationalExpression	y < h		3040253	0		<			
ANR	3040584	Identifier	y		3040253	0					
ANR	3040585	Identifier	h		3040253	1					
ANR	3040586	PostIncDecOperationExpression	y ++	109:22:1779:1781	3040253	2	True				
ANR	3040587	Identifier	y		3040253	0					
ANR	3040588	IncDec	++		3040253	1					
ANR	3040589	CompoundStatement		109:26:1663:1663	3040253	3					
ANR	3040590	IfStatement	if ( s -> c . bytestream_end - s -> c . bytestream < w * 40 )		3040253	0					
ANR	3040591	Condition	s -> c . bytestream_end - s -> c . bytestream < w * 40	111:15:1801:1844	3040253	0	True				
ANR	3040592	RelationalExpression	s -> c . bytestream_end - s -> c . bytestream < w * 40		3040253	0		<			
ANR	3040593	AdditiveExpression	s -> c . bytestream_end - s -> c . bytestream		3040253	0		-			
ANR	3040594	MemberAccess	s -> c . bytestream_end		3040253	0					
ANR	3040595	PtrMemberAccess	s -> c		3040253	0					
ANR	3040596	Identifier	s		3040253	0					
ANR	3040597	Identifier	c		3040253	1					
ANR	3040598	Identifier	bytestream_end		3040253	1					
ANR	3040599	MemberAccess	s -> c . bytestream		3040253	1					
ANR	3040600	PtrMemberAccess	s -> c		3040253	0					
ANR	3040601	Identifier	s		3040253	0					
ANR	3040602	Identifier	c		3040253	1					
ANR	3040603	Identifier	bytestream		3040253	1					
ANR	3040604	MultiplicativeExpression	w * 40		3040253	1		*			
ANR	3040605	Identifier	w		3040253	0					
ANR	3040606	PrimaryExpression	40		3040253	1					
ANR	3040607	CompoundStatement		111:60:1726:1726	3040253	1					
ANR	3040608	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""encoded frame too large\\n"" )"	113:16:1865:1924	3040253	0	True				
ANR	3040609	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""encoded frame too large\\n"" )"		3040253	0					
ANR	3040610	Callee	av_log		3040253	0					
ANR	3040611	Identifier	av_log		3040253	0					
ANR	3040612	ArgumentList	s -> avctx		3040253	1					
ANR	3040613	Argument	s -> avctx		3040253	0					
ANR	3040614	PtrMemberAccess	s -> avctx		3040253	0					
ANR	3040615	Identifier	s		3040253	0					
ANR	3040616	Identifier	avctx		3040253	1					
ANR	3040617	Argument	AV_LOG_ERROR		3040253	1					
ANR	3040618	Identifier	AV_LOG_ERROR		3040253	0					
ANR	3040619	Argument	"""encoded frame too large\\n"""		3040253	2					
ANR	3040620	PrimaryExpression	"""encoded frame too large\\n"""		3040253	0					
ANR	3040621	ReturnStatement	return - 1 ;	115:16:1943:1952	3040253	1	True				
ANR	3040622	UnaryOperationExpression	- 1		3040253	0					
ANR	3040623	UnaryOperator	-		3040253	0					
ANR	3040624	PrimaryExpression	1		3040253	1					
ANR	3040625	ForStatement	for ( x = 0 ; x < w ; x ++ )		3040253	1					
ANR	3040626	ForInit	x = 0 ;	119:16:1986:1989	3040253	0	True				
ANR	3040627	AssignmentExpression	x = 0		3040253	0		=			
ANR	3040628	Identifier	x		3040253	0					
ANR	3040629	PrimaryExpression	0		3040253	1					
ANR	3040630	Condition	x < w	119:21:1991:1993	3040253	1	True				
ANR	3040631	RelationalExpression	x < w		3040253	0		<			
ANR	3040632	Identifier	x		3040253	0					
ANR	3040633	Identifier	w		3040253	1					
ANR	3040634	PostIncDecOperationExpression	x ++	119:26:1996:1998	3040253	2	True				
ANR	3040635	Identifier	x		3040253	0					
ANR	3040636	IncDec	++		3040253	1					
ANR	3040637	CompoundStatement		123:16:1928:1962	3040253	3					
ANR	3040638	IdentifierDeclStatement	"int v , p = 0 ;"	121:16:2019:2029	3040253	0	True				
ANR	3040639	IdentifierDecl	v		3040253	0					
ANR	3040640	IdentifierDeclType	int		3040253	0					
ANR	3040641	Identifier	v		3040253	1					
ANR	3040642	IdentifierDecl	p = 0		3040253	1					
ANR	3040643	IdentifierDeclType	int		3040253	0					
ANR	3040644	Identifier	p		3040253	1					
ANR	3040645	AssignmentExpression	p = 0		3040253	2		=			
ANR	3040646	Identifier	p		3040253	0					
ANR	3040647	PrimaryExpression	0		3040253	1					
ANR	3040648	IdentifierDeclStatement	"int l = 0 , lt = 0 , t = 0 , rt = 0 ;"	123:16:2048:2082	3040253	1	True				
ANR	3040649	IdentifierDecl	l = 0		3040253	0					
ANR	3040650	IdentifierDeclType	int		3040253	0					
ANR	3040651	Identifier	l		3040253	1					
ANR	3040652	AssignmentExpression	l = 0		3040253	2		=			
ANR	3040653	Identifier	l		3040253	0					
ANR	3040654	PrimaryExpression	0		3040253	1					
ANR	3040655	IdentifierDecl	lt = 0		3040253	1					
ANR	3040656	IdentifierDeclType	int		3040253	0					
ANR	3040657	Identifier	lt		3040253	1					
ANR	3040658	AssignmentExpression	lt = 0		3040253	2		=			
ANR	3040659	Identifier	lt		3040253	0					
ANR	3040660	PrimaryExpression	0		3040253	1					
ANR	3040661	IdentifierDecl	t = 0		3040253	2					
ANR	3040662	IdentifierDeclType	int		3040253	0					
ANR	3040663	Identifier	t		3040253	1					
ANR	3040664	AssignmentExpression	t = 0		3040253	2		=			
ANR	3040665	Identifier	t		3040253	0					
ANR	3040666	PrimaryExpression	0		3040253	1					
ANR	3040667	IdentifierDecl	rt = 0		3040253	3					
ANR	3040668	IdentifierDeclType	int		3040253	0					
ANR	3040669	Identifier	rt		3040253	1					
ANR	3040670	AssignmentExpression	rt = 0		3040253	2		=			
ANR	3040671	Identifier	rt		3040253	0					
ANR	3040672	PrimaryExpression	0		3040253	1					
ANR	3040673	ExpressionStatement	v = src [ x + y * stride ]	125:16:2101:2121	3040253	2	True				
ANR	3040674	AssignmentExpression	v = src [ x + y * stride ]		3040253	0		=			
ANR	3040675	Identifier	v		3040253	0					
ANR	3040676	ArrayIndexing	src [ x + y * stride ]		3040253	1					
ANR	3040677	Identifier	src		3040253	0					
ANR	3040678	AdditiveExpression	x + y * stride		3040253	1		+			
ANR	3040679	Identifier	x		3040253	0					
ANR	3040680	MultiplicativeExpression	y * stride		3040253	1		*			
ANR	3040681	Identifier	y		3040253	0					
ANR	3040682	Identifier	stride		3040253	1					
ANR	3040683	IfStatement	if ( y )		3040253	3					
ANR	3040684	Condition	y	129:19:2145:2145	3040253	0	True				
ANR	3040685	Identifier	y		3040253	0					
ANR	3040686	CompoundStatement		129:21:2027:2027	3040253	1					
ANR	3040687	ExpressionStatement	t = src [ x + ( y - 1 ) * stride ]	131:20:2170:2194	3040253	0	True				
ANR	3040688	AssignmentExpression	t = src [ x + ( y - 1 ) * stride ]		3040253	0		=			
ANR	3040689	Identifier	t		3040253	0					
ANR	3040690	ArrayIndexing	src [ x + ( y - 1 ) * stride ]		3040253	1					
ANR	3040691	Identifier	src		3040253	0					
ANR	3040692	AdditiveExpression	x + ( y - 1 ) * stride		3040253	1		+			
ANR	3040693	Identifier	x		3040253	0					
ANR	3040694	MultiplicativeExpression	( y - 1 ) * stride		3040253	1		*			
ANR	3040695	AdditiveExpression	y - 1		3040253	0		-			
ANR	3040696	Identifier	y		3040253	0					
ANR	3040697	PrimaryExpression	1		3040253	1					
ANR	3040698	Identifier	stride		3040253	1					
ANR	3040699	IfStatement	if ( x )		3040253	1					
ANR	3040700	Condition	x	133:23:2220:2220	3040253	0	True				
ANR	3040701	Identifier	x		3040253	0					
ANR	3040702	CompoundStatement		133:25:2102:2102	3040253	1					
ANR	3040703	ExpressionStatement	lt = src [ x - 1 + ( y - 1 ) * stride ]	135:24:2249:2278	3040253	0	True				
ANR	3040704	AssignmentExpression	lt = src [ x - 1 + ( y - 1 ) * stride ]		3040253	0		=			
ANR	3040705	Identifier	lt		3040253	0					
ANR	3040706	ArrayIndexing	src [ x - 1 + ( y - 1 ) * stride ]		3040253	1					
ANR	3040707	Identifier	src		3040253	0					
ANR	3040708	AdditiveExpression	x - 1 + ( y - 1 ) * stride		3040253	1		-			
ANR	3040709	Identifier	x		3040253	0					
ANR	3040710	AdditiveExpression	1 + ( y - 1 ) * stride		3040253	1		+			
ANR	3040711	PrimaryExpression	1		3040253	0					
ANR	3040712	MultiplicativeExpression	( y - 1 ) * stride		3040253	1		*			
ANR	3040713	AdditiveExpression	y - 1		3040253	0		-			
ANR	3040714	Identifier	y		3040253	0					
ANR	3040715	PrimaryExpression	1		3040253	1					
ANR	3040716	Identifier	stride		3040253	1					
ANR	3040717	IfStatement	if ( x + 1 < w )		3040253	2					
ANR	3040718	Condition	x + 1 < w	139:23:2327:2335	3040253	0	True				
ANR	3040719	RelationalExpression	x + 1 < w		3040253	0		<			
ANR	3040720	AdditiveExpression	x + 1		3040253	0		+			
ANR	3040721	Identifier	x		3040253	0					
ANR	3040722	PrimaryExpression	1		3040253	1					
ANR	3040723	Identifier	w		3040253	1					
ANR	3040724	CompoundStatement		139:33:2217:2217	3040253	1					
ANR	3040725	ExpressionStatement	rt = src [ x + 1 + ( y - 1 ) * stride ]	141:24:2364:2393	3040253	0	True				
ANR	3040726	AssignmentExpression	rt = src [ x + 1 + ( y - 1 ) * stride ]		3040253	0		=			
ANR	3040727	Identifier	rt		3040253	0					
ANR	3040728	ArrayIndexing	src [ x + 1 + ( y - 1 ) * stride ]		3040253	1					
ANR	3040729	Identifier	src		3040253	0					
ANR	3040730	AdditiveExpression	x + 1 + ( y - 1 ) * stride		3040253	1		+			
ANR	3040731	Identifier	x		3040253	0					
ANR	3040732	AdditiveExpression	1 + ( y - 1 ) * stride		3040253	1		+			
ANR	3040733	PrimaryExpression	1		3040253	0					
ANR	3040734	MultiplicativeExpression	( y - 1 ) * stride		3040253	1		*			
ANR	3040735	AdditiveExpression	y - 1		3040253	0		-			
ANR	3040736	Identifier	y		3040253	0					
ANR	3040737	PrimaryExpression	1		3040253	1					
ANR	3040738	Identifier	stride		3040253	1					
ANR	3040739	IfStatement	if ( x )		3040253	4					
ANR	3040740	Condition	x	147:19:2457:2457	3040253	0	True				
ANR	3040741	Identifier	x		3040253	0					
ANR	3040742	CompoundStatement		147:21:2339:2339	3040253	1					
ANR	3040743	ExpressionStatement	l = src [ x - 1 + y * stride ]	149:20:2482:2506	3040253	0	True				
ANR	3040744	AssignmentExpression	l = src [ x - 1 + y * stride ]		3040253	0		=			
ANR	3040745	Identifier	l		3040253	0					
ANR	3040746	ArrayIndexing	src [ x - 1 + y * stride ]		3040253	1					
ANR	3040747	Identifier	src		3040253	0					
ANR	3040748	AdditiveExpression	x - 1 + y * stride		3040253	1		-			
ANR	3040749	Identifier	x		3040253	0					
ANR	3040750	AdditiveExpression	1 + y * stride		3040253	1		+			
ANR	3040751	PrimaryExpression	1		3040253	0					
ANR	3040752	MultiplicativeExpression	y * stride		3040253	1		*			
ANR	3040753	Identifier	y		3040253	0					
ANR	3040754	Identifier	stride		3040253	1					
ANR	3040755	IfStatement	if ( parent )		3040253	5					
ANR	3040756	Condition	parent	161:19:2748:2753	3040253	0	True				
ANR	3040757	Identifier	parent		3040253	0					
ANR	3040758	CompoundStatement		165:20:2693:2705	3040253	1					
ANR	3040759	IdentifierDeclStatement	int px = x >> 1 ;	163:20:2778:2790	3040253	0	True				
ANR	3040760	IdentifierDecl	px = x >> 1		3040253	0					
ANR	3040761	IdentifierDeclType	int		3040253	0					
ANR	3040762	Identifier	px		3040253	1					
ANR	3040763	AssignmentExpression	px = x >> 1		3040253	2		=			
ANR	3040764	Identifier	px		3040253	0					
ANR	3040765	ShiftExpression	x >> 1		3040253	1		>>			
ANR	3040766	Identifier	x		3040253	0					
ANR	3040767	PrimaryExpression	1		3040253	1					
ANR	3040768	IdentifierDeclStatement	int py = y >> 1 ;	165:20:2813:2825	3040253	1	True				
ANR	3040769	IdentifierDecl	py = y >> 1		3040253	0					
ANR	3040770	IdentifierDeclType	int		3040253	0					
ANR	3040771	Identifier	py		3040253	1					
ANR	3040772	AssignmentExpression	py = y >> 1		3040253	2		=			
ANR	3040773	Identifier	py		3040253	0					
ANR	3040774	ShiftExpression	y >> 1		3040253	1		>>			
ANR	3040775	Identifier	y		3040253	0					
ANR	3040776	PrimaryExpression	1		3040253	1					
ANR	3040777	IfStatement	if ( px < b -> parent -> width && py < b -> parent -> height )		3040253	2					
ANR	3040778	Condition	px < b -> parent -> width && py < b -> parent -> height	167:23:2851:2893	3040253	0	True				
ANR	3040779	AndExpression	px < b -> parent -> width && py < b -> parent -> height		3040253	0		&&			
ANR	3040780	RelationalExpression	px < b -> parent -> width		3040253	0		<			
ANR	3040781	Identifier	px		3040253	0					
ANR	3040782	PtrMemberAccess	b -> parent -> width		3040253	1					
ANR	3040783	PtrMemberAccess	b -> parent		3040253	0					
ANR	3040784	Identifier	b		3040253	0					
ANR	3040785	Identifier	parent		3040253	1					
ANR	3040786	Identifier	width		3040253	1					
ANR	3040787	RelationalExpression	py < b -> parent -> height		3040253	1		<			
ANR	3040788	Identifier	py		3040253	0					
ANR	3040789	PtrMemberAccess	b -> parent -> height		3040253	1					
ANR	3040790	PtrMemberAccess	b -> parent		3040253	0					
ANR	3040791	Identifier	b		3040253	0					
ANR	3040792	Identifier	parent		3040253	1					
ANR	3040793	Identifier	height		3040253	1					
ANR	3040794	ExpressionStatement	p = parent [ px + py * 2 * stride ]	169:24:2922:2949	3040253	1	True				
ANR	3040795	AssignmentExpression	p = parent [ px + py * 2 * stride ]		3040253	0		=			
ANR	3040796	Identifier	p		3040253	0					
ANR	3040797	ArrayIndexing	parent [ px + py * 2 * stride ]		3040253	1					
ANR	3040798	Identifier	parent		3040253	0					
ANR	3040799	AdditiveExpression	px + py * 2 * stride		3040253	1		+			
ANR	3040800	Identifier	px		3040253	0					
ANR	3040801	MultiplicativeExpression	py * 2 * stride		3040253	1		*			
ANR	3040802	Identifier	py		3040253	0					
ANR	3040803	MultiplicativeExpression	2 * stride		3040253	1		*			
ANR	3040804	PrimaryExpression	2		3040253	0					
ANR	3040805	Identifier	stride		3040253	1					
ANR	3040806	IfStatement	if ( l | lt | t | rt | p )		3040253	6					
ANR	3040807	Condition	l | lt | t | rt | p	173:26:2997:3007	3040253	0	True				
ANR	3040808	InclusiveOrExpression	l | lt | t | rt | p		3040253	0		|			
ANR	3040809	Identifier	l		3040253	0					
ANR	3040810	InclusiveOrExpression	lt | t | rt | p		3040253	1		|			
ANR	3040811	Identifier	lt		3040253	0					
ANR	3040812	InclusiveOrExpression	t | rt | p		3040253	1		|			
ANR	3040813	Identifier	t		3040253	0					
ANR	3040814	InclusiveOrExpression	rt | p		3040253	1		|			
ANR	3040815	Identifier	rt		3040253	0					
ANR	3040816	Identifier	p		3040253	1					
ANR	3040817	CompoundStatement		175:20:2912:2996	3040253	1					
ANR	3040818	IdentifierDeclStatement	int context = av_log2 ( 3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p ) ) ;	175:20:3032:3116	3040253	0	True				
ANR	3040819	IdentifierDecl	context = av_log2 ( 3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p ) )		3040253	0					
ANR	3040820	IdentifierDeclType	int		3040253	0					
ANR	3040821	Identifier	context		3040253	1					
ANR	3040822	AssignmentExpression	context = av_log2 ( 3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p ) )		3040253	2		=			
ANR	3040823	Identifier	context		3040253	0					
ANR	3040824	CallExpression	av_log2 ( 3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p ) )		3040253	1					
ANR	3040825	Callee	av_log2		3040253	0					
ANR	3040826	Identifier	av_log2		3040253	0					
ANR	3040827	ArgumentList	3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p )		3040253	1					
ANR	3040828	Argument	3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p )		3040253	0					
ANR	3040829	AdditiveExpression	3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p )		3040253	0		+			
ANR	3040830	MultiplicativeExpression	3 * ABS ( l )		3040253	0		*			
ANR	3040831	PrimaryExpression	3		3040253	0					
ANR	3040832	CallExpression	ABS ( l )		3040253	1					
ANR	3040833	Callee	ABS		3040253	0					
ANR	3040834	Identifier	ABS		3040253	0					
ANR	3040835	ArgumentList	l		3040253	1					
ANR	3040836	Argument	l		3040253	0					
ANR	3040837	Identifier	l		3040253	0					
ANR	3040838	AdditiveExpression	ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p )		3040253	1		+			
ANR	3040839	CallExpression	ABS ( lt )		3040253	0					
ANR	3040840	Callee	ABS		3040253	0					
ANR	3040841	Identifier	ABS		3040253	0					
ANR	3040842	ArgumentList	lt		3040253	1					
ANR	3040843	Argument	lt		3040253	0					
ANR	3040844	Identifier	lt		3040253	0					
ANR	3040845	AdditiveExpression	2 * ABS ( t ) + ABS ( rt ) + ABS ( p )		3040253	1		+			
ANR	3040846	MultiplicativeExpression	2 * ABS ( t )		3040253	0		*			
ANR	3040847	PrimaryExpression	2		3040253	0					
ANR	3040848	CallExpression	ABS ( t )		3040253	1					
ANR	3040849	Callee	ABS		3040253	0					
ANR	3040850	Identifier	ABS		3040253	0					
ANR	3040851	ArgumentList	t		3040253	1					
ANR	3040852	Argument	t		3040253	0					
ANR	3040853	Identifier	t		3040253	0					
ANR	3040854	AdditiveExpression	ABS ( rt ) + ABS ( p )		3040253	1		+			
ANR	3040855	CallExpression	ABS ( rt )		3040253	0					
ANR	3040856	Callee	ABS		3040253	0					
ANR	3040857	Identifier	ABS		3040253	0					
ANR	3040858	ArgumentList	rt		3040253	1					
ANR	3040859	Argument	rt		3040253	0					
ANR	3040860	Identifier	rt		3040253	0					
ANR	3040861	CallExpression	ABS ( p )		3040253	1					
ANR	3040862	Callee	ABS		3040253	0					
ANR	3040863	Identifier	ABS		3040253	0					
ANR	3040864	ArgumentList	p		3040253	1					
ANR	3040865	Argument	p		3040253	0					
ANR	3040866	Identifier	p		3040253	0					
ANR	3040867	ExpressionStatement	"put_rac ( & s -> c , & b -> state [ 0 ] [ context ] , ! ! v )"	179:20:3141:3183	3040253	1	True				
ANR	3040868	CallExpression	"put_rac ( & s -> c , & b -> state [ 0 ] [ context ] , ! ! v )"		3040253	0					
ANR	3040869	Callee	put_rac		3040253	0					
ANR	3040870	Identifier	put_rac		3040253	0					
ANR	3040871	ArgumentList	& s -> c		3040253	1					
ANR	3040872	Argument	& s -> c		3040253	0					
ANR	3040873	UnaryOperationExpression	& s -> c		3040253	0					
ANR	3040874	UnaryOperator	&		3040253	0					
ANR	3040875	PtrMemberAccess	s -> c		3040253	1					
ANR	3040876	Identifier	s		3040253	0					
ANR	3040877	Identifier	c		3040253	1					
ANR	3040878	Argument	& b -> state [ 0 ] [ context ]		3040253	1					
ANR	3040879	UnaryOperationExpression	& b -> state [ 0 ] [ context ]		3040253	0					
ANR	3040880	UnaryOperator	&		3040253	0					
ANR	3040881	ArrayIndexing	b -> state [ 0 ] [ context ]		3040253	1					
ANR	3040882	ArrayIndexing	b -> state [ 0 ]		3040253	0					
ANR	3040883	PtrMemberAccess	b -> state		3040253	0					
ANR	3040884	Identifier	b		3040253	0					
ANR	3040885	Identifier	state		3040253	1					
ANR	3040886	PrimaryExpression	0		3040253	1					
ANR	3040887	Identifier	context		3040253	1					
ANR	3040888	Argument	! ! v		3040253	2					
ANR	3040889	UnaryOperationExpression	! ! v		3040253	0					
ANR	3040890	UnaryOperator	!		3040253	0					
ANR	3040891	UnaryOperationExpression	! v		3040253	1					
ANR	3040892	UnaryOperator	!		3040253	0					
ANR	3040893	Identifier	v		3040253	1					
ANR	3040894	ElseStatement	else		3040253	0					
ANR	3040895	CompoundStatement		181:21:3087:3087	3040253	0					
ANR	3040896	IfStatement	if ( ! run )		3040253	0					
ANR	3040897	Condition	! run	183:23:3233:3236	3040253	0	True				
ANR	3040898	UnaryOperationExpression	! run		3040253	0					
ANR	3040899	UnaryOperator	!		3040253	0					
ANR	3040900	Identifier	run		3040253	1					
ANR	3040901	CompoundStatement		183:28:3118:3118	3040253	1					
ANR	3040902	ExpressionStatement	run = runs [ run_index ++ ]	185:24:3265:3287	3040253	0	True				
ANR	3040903	AssignmentExpression	run = runs [ run_index ++ ]		3040253	0		=			
ANR	3040904	Identifier	run		3040253	0					
ANR	3040905	ArrayIndexing	runs [ run_index ++ ]		3040253	1					
ANR	3040906	Identifier	runs		3040253	0					
ANR	3040907	PostIncDecOperationExpression	run_index ++		3040253	1					
ANR	3040908	Identifier	run_index		3040253	0					
ANR	3040909	IncDec	++		3040253	1					
ANR	3040910	ExpressionStatement	"put_symbol2 ( & s -> c , b -> state [ 1 ] , run , 3 )"	189:24:3316:3355	3040253	1	True				
ANR	3040911	CallExpression	"put_symbol2 ( & s -> c , b -> state [ 1 ] , run , 3 )"		3040253	0					
ANR	3040912	Callee	put_symbol2		3040253	0					
ANR	3040913	Identifier	put_symbol2		3040253	0					
ANR	3040914	ArgumentList	& s -> c		3040253	1					
ANR	3040915	Argument	& s -> c		3040253	0					
ANR	3040916	UnaryOperationExpression	& s -> c		3040253	0					
ANR	3040917	UnaryOperator	&		3040253	0					
ANR	3040918	PtrMemberAccess	s -> c		3040253	1					
ANR	3040919	Identifier	s		3040253	0					
ANR	3040920	Identifier	c		3040253	1					
ANR	3040921	Argument	b -> state [ 1 ]		3040253	1					
ANR	3040922	ArrayIndexing	b -> state [ 1 ]		3040253	0					
ANR	3040923	PtrMemberAccess	b -> state		3040253	0					
ANR	3040924	Identifier	b		3040253	0					
ANR	3040925	Identifier	state		3040253	1					
ANR	3040926	PrimaryExpression	1		3040253	1					
ANR	3040927	Argument	run		3040253	2					
ANR	3040928	Identifier	run		3040253	0					
ANR	3040929	Argument	3		3040253	3					
ANR	3040930	PrimaryExpression	3		3040253	0					
ANR	3040931	ExpressionStatement	assert ( v )	191:24:3382:3391	3040253	2	True				
ANR	3040932	CallExpression	assert ( v )		3040253	0					
ANR	3040933	Callee	assert		3040253	0					
ANR	3040934	Identifier	assert		3040253	0					
ANR	3040935	ArgumentList	v		3040253	1					
ANR	3040936	Argument	v		3040253	0					
ANR	3040937	Identifier	v		3040253	0					
ANR	3040938	ElseStatement	else		3040253	0					
ANR	3040939	CompoundStatement		193:25:3299:3299	3040253	0					
ANR	3040940	ExpressionStatement	run --	195:24:3446:3451	3040253	0	True				
ANR	3040941	PostIncDecOperationExpression	run --		3040253	0					
ANR	3040942	Identifier	run		3040253	0					
ANR	3040943	IncDec	--		3040253	1					
ANR	3040944	ExpressionStatement	assert ( ! v )	197:24:3478:3488	3040253	1	True				
ANR	3040945	CallExpression	assert ( ! v )		3040253	0					
ANR	3040946	Callee	assert		3040253	0					
ANR	3040947	Identifier	assert		3040253	0					
ANR	3040948	ArgumentList	! v		3040253	1					
ANR	3040949	Argument	! v		3040253	0					
ANR	3040950	UnaryOperationExpression	! v		3040253	0					
ANR	3040951	UnaryOperator	!		3040253	0					
ANR	3040952	Identifier	v		3040253	1					
ANR	3040953	IfStatement	if ( v )		3040253	7					
ANR	3040954	Condition	v	203:19:3552:3552	3040253	0	True				
ANR	3040955	Identifier	v		3040253	0					
ANR	3040956	CompoundStatement		209:20:3611:3635	3040253	1					
ANR	3040957	IdentifierDeclStatement	int context = av_log2 ( 3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p ) ) ;	205:20:3577:3661	3040253	0	True				
ANR	3040958	IdentifierDecl	context = av_log2 ( 3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p ) )		3040253	0					
ANR	3040959	IdentifierDeclType	int		3040253	0					
ANR	3040960	Identifier	context		3040253	1					
ANR	3040961	AssignmentExpression	context = av_log2 ( 3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p ) )		3040253	2		=			
ANR	3040962	Identifier	context		3040253	0					
ANR	3040963	CallExpression	av_log2 ( 3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p ) )		3040253	1					
ANR	3040964	Callee	av_log2		3040253	0					
ANR	3040965	Identifier	av_log2		3040253	0					
ANR	3040966	ArgumentList	3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p )		3040253	1					
ANR	3040967	Argument	3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p )		3040253	0					
ANR	3040968	AdditiveExpression	3 * ABS ( l ) + ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p )		3040253	0		+			
ANR	3040969	MultiplicativeExpression	3 * ABS ( l )		3040253	0		*			
ANR	3040970	PrimaryExpression	3		3040253	0					
ANR	3040971	CallExpression	ABS ( l )		3040253	1					
ANR	3040972	Callee	ABS		3040253	0					
ANR	3040973	Identifier	ABS		3040253	0					
ANR	3040974	ArgumentList	l		3040253	1					
ANR	3040975	Argument	l		3040253	0					
ANR	3040976	Identifier	l		3040253	0					
ANR	3040977	AdditiveExpression	ABS ( lt ) + 2 * ABS ( t ) + ABS ( rt ) + ABS ( p )		3040253	1		+			
ANR	3040978	CallExpression	ABS ( lt )		3040253	0					
ANR	3040979	Callee	ABS		3040253	0					
ANR	3040980	Identifier	ABS		3040253	0					
ANR	3040981	ArgumentList	lt		3040253	1					
ANR	3040982	Argument	lt		3040253	0					
ANR	3040983	Identifier	lt		3040253	0					
ANR	3040984	AdditiveExpression	2 * ABS ( t ) + ABS ( rt ) + ABS ( p )		3040253	1		+			
ANR	3040985	MultiplicativeExpression	2 * ABS ( t )		3040253	0		*			
ANR	3040986	PrimaryExpression	2		3040253	0					
ANR	3040987	CallExpression	ABS ( t )		3040253	1					
ANR	3040988	Callee	ABS		3040253	0					
ANR	3040989	Identifier	ABS		3040253	0					
ANR	3040990	ArgumentList	t		3040253	1					
ANR	3040991	Argument	t		3040253	0					
ANR	3040992	Identifier	t		3040253	0					
ANR	3040993	AdditiveExpression	ABS ( rt ) + ABS ( p )		3040253	1		+			
ANR	3040994	CallExpression	ABS ( rt )		3040253	0					
ANR	3040995	Callee	ABS		3040253	0					
ANR	3040996	Identifier	ABS		3040253	0					
ANR	3040997	ArgumentList	rt		3040253	1					
ANR	3040998	Argument	rt		3040253	0					
ANR	3040999	Identifier	rt		3040253	0					
ANR	3041000	CallExpression	ABS ( p )		3040253	1					
ANR	3041001	Callee	ABS		3040253	0					
ANR	3041002	Identifier	ABS		3040253	0					
ANR	3041003	ArgumentList	p		3040253	1					
ANR	3041004	Argument	p		3040253	0					
ANR	3041005	Identifier	p		3040253	0					
ANR	3041006	IdentifierDeclStatement	int l2 = 2 * ABS ( l ) + ( l < 0 ) ;	207:20:3684:3708	3040253	1	True				
ANR	3041007	IdentifierDecl	l2 = 2 * ABS ( l ) + ( l < 0 )		3040253	0					
ANR	3041008	IdentifierDeclType	int		3040253	0					
ANR	3041009	Identifier	l2		3040253	1					
ANR	3041010	AssignmentExpression	l2 = 2 * ABS ( l ) + ( l < 0 )		3040253	2		=			
ANR	3041011	Identifier	l2		3040253	0					
ANR	3041012	AdditiveExpression	2 * ABS ( l ) + ( l < 0 )		3040253	1		+			
ANR	3041013	MultiplicativeExpression	2 * ABS ( l )		3040253	0		*			
ANR	3041014	PrimaryExpression	2		3040253	0					
ANR	3041015	CallExpression	ABS ( l )		3040253	1					
ANR	3041016	Callee	ABS		3040253	0					
ANR	3041017	Identifier	ABS		3040253	0					
ANR	3041018	ArgumentList	l		3040253	1					
ANR	3041019	Argument	l		3040253	0					
ANR	3041020	Identifier	l		3040253	0					
ANR	3041021	RelationalExpression	l < 0		3040253	1		<			
ANR	3041022	Identifier	l		3040253	0					
ANR	3041023	PrimaryExpression	0		3040253	1					
ANR	3041024	IdentifierDeclStatement	int t2 = 2 * ABS ( t ) + ( t < 0 ) ;	209:20:3731:3755	3040253	2	True				
ANR	3041025	IdentifierDecl	t2 = 2 * ABS ( t ) + ( t < 0 )		3040253	0					
ANR	3041026	IdentifierDeclType	int		3040253	0					
ANR	3041027	Identifier	t2		3040253	1					
ANR	3041028	AssignmentExpression	t2 = 2 * ABS ( t ) + ( t < 0 )		3040253	2		=			
ANR	3041029	Identifier	t2		3040253	0					
ANR	3041030	AdditiveExpression	2 * ABS ( t ) + ( t < 0 )		3040253	1		+			
ANR	3041031	MultiplicativeExpression	2 * ABS ( t )		3040253	0		*			
ANR	3041032	PrimaryExpression	2		3040253	0					
ANR	3041033	CallExpression	ABS ( t )		3040253	1					
ANR	3041034	Callee	ABS		3040253	0					
ANR	3041035	Identifier	ABS		3040253	0					
ANR	3041036	ArgumentList	t		3040253	1					
ANR	3041037	Argument	t		3040253	0					
ANR	3041038	Identifier	t		3040253	0					
ANR	3041039	RelationalExpression	t < 0		3040253	1		<			
ANR	3041040	Identifier	t		3040253	0					
ANR	3041041	PrimaryExpression	0		3040253	1					
ANR	3041042	ExpressionStatement	"put_symbol2 ( & s -> c , b -> state [ context + 2 ] , ABS ( v ) - 1 , context - 4 )"	213:20:3780:3842	3040253	3	True				
ANR	3041043	CallExpression	"put_symbol2 ( & s -> c , b -> state [ context + 2 ] , ABS ( v ) - 1 , context - 4 )"		3040253	0					
ANR	3041044	Callee	put_symbol2		3040253	0					
ANR	3041045	Identifier	put_symbol2		3040253	0					
ANR	3041046	ArgumentList	& s -> c		3040253	1					
ANR	3041047	Argument	& s -> c		3040253	0					
ANR	3041048	UnaryOperationExpression	& s -> c		3040253	0					
ANR	3041049	UnaryOperator	&		3040253	0					
ANR	3041050	PtrMemberAccess	s -> c		3040253	1					
ANR	3041051	Identifier	s		3040253	0					
ANR	3041052	Identifier	c		3040253	1					
ANR	3041053	Argument	b -> state [ context + 2 ]		3040253	1					
ANR	3041054	ArrayIndexing	b -> state [ context + 2 ]		3040253	0					
ANR	3041055	PtrMemberAccess	b -> state		3040253	0					
ANR	3041056	Identifier	b		3040253	0					
ANR	3041057	Identifier	state		3040253	1					
ANR	3041058	AdditiveExpression	context + 2		3040253	1		+			
ANR	3041059	Identifier	context		3040253	0					
ANR	3041060	PrimaryExpression	2		3040253	1					
ANR	3041061	Argument	ABS ( v ) - 1		3040253	2					
ANR	3041062	AdditiveExpression	ABS ( v ) - 1		3040253	0		-			
ANR	3041063	CallExpression	ABS ( v )		3040253	0					
ANR	3041064	Callee	ABS		3040253	0					
ANR	3041065	Identifier	ABS		3040253	0					
ANR	3041066	ArgumentList	v		3040253	1					
ANR	3041067	Argument	v		3040253	0					
ANR	3041068	Identifier	v		3040253	0					
ANR	3041069	PrimaryExpression	1		3040253	1					
ANR	3041070	Argument	context - 4		3040253	3					
ANR	3041071	AdditiveExpression	context - 4		3040253	0		-			
ANR	3041072	Identifier	context		3040253	0					
ANR	3041073	PrimaryExpression	4		3040253	1					
ANR	3041074	ExpressionStatement	"put_rac ( & s -> c , & b -> state [ 0 ] [ 16 + 1 + 3 + quant3bA [ l2 & 0xFF ] + 3 * quant3bA [ t2 & 0xFF ] ] , v < 0 )"	215:20:3865:3952	3040253	4	True				
ANR	3041075	CallExpression	"put_rac ( & s -> c , & b -> state [ 0 ] [ 16 + 1 + 3 + quant3bA [ l2 & 0xFF ] + 3 * quant3bA [ t2 & 0xFF ] ] , v < 0 )"		3040253	0					
ANR	3041076	Callee	put_rac		3040253	0					
ANR	3041077	Identifier	put_rac		3040253	0					
ANR	3041078	ArgumentList	& s -> c		3040253	1					
ANR	3041079	Argument	& s -> c		3040253	0					
ANR	3041080	UnaryOperationExpression	& s -> c		3040253	0					
ANR	3041081	UnaryOperator	&		3040253	0					
ANR	3041082	PtrMemberAccess	s -> c		3040253	1					
ANR	3041083	Identifier	s		3040253	0					
ANR	3041084	Identifier	c		3040253	1					
ANR	3041085	Argument	& b -> state [ 0 ] [ 16 + 1 + 3 + quant3bA [ l2 & 0xFF ] + 3 * quant3bA [ t2 & 0xFF ] ]		3040253	1					
ANR	3041086	UnaryOperationExpression	& b -> state [ 0 ] [ 16 + 1 + 3 + quant3bA [ l2 & 0xFF ] + 3 * quant3bA [ t2 & 0xFF ] ]		3040253	0					
ANR	3041087	UnaryOperator	&		3040253	0					
ANR	3041088	ArrayIndexing	b -> state [ 0 ] [ 16 + 1 + 3 + quant3bA [ l2 & 0xFF ] + 3 * quant3bA [ t2 & 0xFF ] ]		3040253	1					
ANR	3041089	ArrayIndexing	b -> state [ 0 ]		3040253	0					
ANR	3041090	PtrMemberAccess	b -> state		3040253	0					
ANR	3041091	Identifier	b		3040253	0					
ANR	3041092	Identifier	state		3040253	1					
ANR	3041093	PrimaryExpression	0		3040253	1					
ANR	3041094	AdditiveExpression	16 + 1 + 3 + quant3bA [ l2 & 0xFF ] + 3 * quant3bA [ t2 & 0xFF ]		3040253	1		+			
ANR	3041095	PrimaryExpression	16		3040253	0					
ANR	3041096	AdditiveExpression	1 + 3 + quant3bA [ l2 & 0xFF ] + 3 * quant3bA [ t2 & 0xFF ]		3040253	1		+			
ANR	3041097	PrimaryExpression	1		3040253	0					
ANR	3041098	AdditiveExpression	3 + quant3bA [ l2 & 0xFF ] + 3 * quant3bA [ t2 & 0xFF ]		3040253	1		+			
ANR	3041099	PrimaryExpression	3		3040253	0					
ANR	3041100	AdditiveExpression	quant3bA [ l2 & 0xFF ] + 3 * quant3bA [ t2 & 0xFF ]		3040253	1		+			
ANR	3041101	ArrayIndexing	quant3bA [ l2 & 0xFF ]		3040253	0					
ANR	3041102	Identifier	quant3bA		3040253	0					
ANR	3041103	BitAndExpression	l2 & 0xFF		3040253	1		&			
ANR	3041104	Identifier	l2		3040253	0					
ANR	3041105	PrimaryExpression	0xFF		3040253	1					
ANR	3041106	MultiplicativeExpression	3 * quant3bA [ t2 & 0xFF ]		3040253	1		*			
ANR	3041107	PrimaryExpression	3		3040253	0					
ANR	3041108	ArrayIndexing	quant3bA [ t2 & 0xFF ]		3040253	1					
ANR	3041109	Identifier	quant3bA		3040253	0					
ANR	3041110	BitAndExpression	t2 & 0xFF		3040253	1		&			
ANR	3041111	Identifier	t2		3040253	0					
ANR	3041112	PrimaryExpression	0xFF		3040253	1					
ANR	3041113	Argument	v < 0		3040253	2					
ANR	3041114	RelationalExpression	v < 0		3040253	0		<			
ANR	3041115	Identifier	v		3040253	0					
ANR	3041116	PrimaryExpression	0		3040253	1					
ANR	3041117	ReturnStatement	return 0 ;	225:4:4011:4019	3040253	4	True				
ANR	3041118	PrimaryExpression	0		3040253	0					
ANR	3041119	ReturnType	static int		3040253	1					
ANR	3041120	Identifier	encode_subband_c0run		3040253	2					
ANR	3041121	ParameterList	"SnowContext * s , SubBand * b , DWTELEM * src , DWTELEM * parent , int stride , int orientation"		3040253	3					
ANR	3041122	Parameter	SnowContext * s	1:32:32:45	3040253	0	True				
ANR	3041123	ParameterType	SnowContext *		3040253	0					
ANR	3041124	Identifier	s		3040253	1					
ANR	3041125	Parameter	SubBand * b	1:48:48:57	3040253	1	True				
ANR	3041126	ParameterType	SubBand *		3040253	0					
ANR	3041127	Identifier	b		3040253	1					
ANR	3041128	Parameter	DWTELEM * src	1:60:60:71	3040253	2	True				
ANR	3041129	ParameterType	DWTELEM *		3040253	0					
ANR	3041130	Identifier	src		3040253	1					
ANR	3041131	Parameter	DWTELEM * parent	1:74:74:88	3040253	3	True				
ANR	3041132	ParameterType	DWTELEM *		3040253	0					
ANR	3041133	Identifier	parent		3040253	1					
ANR	3041134	Parameter	int stride	1:91:91:100	3040253	4	True				
ANR	3041135	ParameterType	int		3040253	0					
ANR	3041136	Identifier	stride		3040253	1					
ANR	3041137	Parameter	int orientation	1:103:103:117	3040253	5	True				
ANR	3041138	ParameterType	int		3040253	0					
ANR	3041139	Identifier	orientation		3040253	1					
ANR	3041140	CFGEntryNode	ENTRY		3040253		True				
ANR	3041141	CFGExitNode	EXIT		3040253		True				
ANR	3041142	Symbol	parent		3040253						
ANR	3041143	Symbol	* stride		3040253						
ANR	3041144	Symbol	* x		3040253						
ANR	3041145	Symbol	* y		3040253						
ANR	3041146	Symbol	* parent		3040253						
ANR	3041147	Symbol	b -> parent		3040253						
ANR	3041148	Symbol	lt		3040253						
ANR	3041149	Symbol	px		3040253						
ANR	3041150	Symbol	quant3bA		3040253						
ANR	3041151	Symbol	py		3040253						
ANR	3041152	Symbol	run		3040253						
ANR	3041153	Symbol	s -> c . bytestream		3040253						
ANR	3041154	Symbol	stride		3040253						
ANR	3041155	Symbol	* src		3040253						
ANR	3041156	Symbol	context		3040253						
ANR	3041157	Symbol	* quant3bA		3040253						
ANR	3041158	Symbol	* * b		3040253						
ANR	3041159	Symbol	* py		3040253						
ANR	3041160	Symbol	* px		3040253						
ANR	3041161	Symbol	* context		3040253						
ANR	3041162	Symbol	& s -> c		3040253						
ANR	3041163	Symbol	* b -> parent		3040253						
ANR	3041164	Symbol	b -> parent -> height		3040253						
ANR	3041165	Symbol	s -> avctx		3040253						
ANR	3041166	Symbol	av_log2		3040253						
ANR	3041167	Symbol	t2		3040253						
ANR	3041168	Symbol	rt		3040253						
ANR	3041169	Symbol	l2		3040253						
ANR	3041170	Symbol	b -> state		3040253						
ANR	3041171	Symbol	b -> width		3040253						
ANR	3041172	Symbol	ABS		3040253						
ANR	3041173	Symbol	s -> c . bytestream_end		3040253						
ANR	3041174	Symbol	s -> c		3040253						
ANR	3041175	Symbol	b -> parent -> width		3040253						
ANR	3041176	Symbol	* runs		3040253						
ANR	3041177	Symbol	b		3040253						
ANR	3041178	Symbol	orientation		3040253						
ANR	3041179	Symbol	AV_LOG_ERROR		3040253						
ANR	3041180	Symbol	src		3040253						
ANR	3041181	Symbol	* t2		3040253						
ANR	3041182	Symbol	h		3040253						
ANR	3041183	Symbol	* b		3040253						
ANR	3041184	Symbol	l		3040253						
ANR	3041185	Symbol	* l2		3040253						
ANR	3041186	Symbol	p		3040253						
ANR	3041187	Symbol	b -> height		3040253						
ANR	3041188	Symbol	s		3040253						
ANR	3041189	Symbol	t		3040253						
ANR	3041190	Symbol	* b -> state		3040253						
ANR	3041191	Symbol	v		3040253						
ANR	3041192	Symbol	w		3040253						
ANR	3041193	Symbol	x		3040253						
ANR	3041194	Symbol	y		3040253						
ANR	3041195	Symbol	run_index		3040253						
ANR	3041196	Symbol	runs		3040253						
ANR	3041197	Symbol	* s		3040253						
