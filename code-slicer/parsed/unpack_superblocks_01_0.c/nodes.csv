command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8633370	File	/home/p4ultr4n/workplace/ReVeal/raw_code/unpack_superblocks_01_0.c								
ANR	8633371	Function	unpack_superblocks	1:0:0:6007							
ANR	8633372	FunctionDef	"unpack_superblocks (Vp3DecodeContext * s , GetBitContext * gb)"		8633371	0					
ANR	8633373	CompoundStatement		3:0:71:6007	8633371	0					
ANR	8633374	IdentifierDeclStatement	"int superblock_starts [ 3 ] = { 0 , s -> u_superblock_start , s -> v_superblock_start } ;"	5:4:78:170	8633371	0	True				
ANR	8633375	IdentifierDecl	"superblock_starts [ 3 ] = { 0 , s -> u_superblock_start , s -> v_superblock_start }"		8633371	0					
ANR	8633376	IdentifierDeclType	int [ 3 ]		8633371	0					
ANR	8633377	Identifier	superblock_starts		8633371	1					
ANR	8633378	PrimaryExpression	3		8633371	2					
ANR	8633379	AssignmentExpression	"superblock_starts [ 3 ] = { 0 , s -> u_superblock_start , s -> v_superblock_start }"		8633371	3		=			
ANR	8633380	Identifier	superblock_starts		8633371	0					
ANR	8633381	InitializerList	0		8633371	1					
ANR	8633382	PrimaryExpression	0		8633371	0					
ANR	8633383	PtrMemberAccess	s -> u_superblock_start		8633371	1					
ANR	8633384	Identifier	s		8633371	0					
ANR	8633385	Identifier	u_superblock_start		8633371	1					
ANR	8633386	PtrMemberAccess	s -> v_superblock_start		8633371	2					
ANR	8633387	Identifier	s		8633371	0					
ANR	8633388	Identifier	v_superblock_start		8633371	1					
ANR	8633389	IdentifierDeclStatement	int bit = 0 ;	11:4:177:188	8633371	1	True				
ANR	8633390	IdentifierDecl	bit = 0		8633371	0					
ANR	8633391	IdentifierDeclType	int		8633371	0					
ANR	8633392	Identifier	bit		8633371	1					
ANR	8633393	AssignmentExpression	bit = 0		8633371	2		=			
ANR	8633394	Identifier	bit		8633371	0					
ANR	8633395	PrimaryExpression	0		8633371	1					
ANR	8633396	IdentifierDeclStatement	int current_superblock = 0 ;	13:4:195:221	8633371	2	True				
ANR	8633397	IdentifierDecl	current_superblock = 0		8633371	0					
ANR	8633398	IdentifierDeclType	int		8633371	0					
ANR	8633399	Identifier	current_superblock		8633371	1					
ANR	8633400	AssignmentExpression	current_superblock = 0		8633371	2		=			
ANR	8633401	Identifier	current_superblock		8633371	0					
ANR	8633402	PrimaryExpression	0		8633371	1					
ANR	8633403	IdentifierDeclStatement	int current_run = 0 ;	15:4:228:247	8633371	3	True				
ANR	8633404	IdentifierDecl	current_run = 0		8633371	0					
ANR	8633405	IdentifierDeclType	int		8633371	0					
ANR	8633406	Identifier	current_run		8633371	1					
ANR	8633407	AssignmentExpression	current_run = 0		8633371	2		=			
ANR	8633408	Identifier	current_run		8633371	0					
ANR	8633409	PrimaryExpression	0		8633371	1					
ANR	8633410	IdentifierDeclStatement	int num_partial_superblocks = 0 ;	17:4:254:285	8633371	4	True				
ANR	8633411	IdentifierDecl	num_partial_superblocks = 0		8633371	0					
ANR	8633412	IdentifierDeclType	int		8633371	0					
ANR	8633413	Identifier	num_partial_superblocks		8633371	1					
ANR	8633414	AssignmentExpression	num_partial_superblocks = 0		8633371	2		=			
ANR	8633415	Identifier	num_partial_superblocks		8633371	0					
ANR	8633416	PrimaryExpression	0		8633371	1					
ANR	8633417	IdentifierDeclStatement	"int i , j ;"	21:4:294:302	8633371	5	True				
ANR	8633418	IdentifierDecl	i		8633371	0					
ANR	8633419	IdentifierDeclType	int		8633371	0					
ANR	8633420	Identifier	i		8633371	1					
ANR	8633421	IdentifierDecl	j		8633371	1					
ANR	8633422	IdentifierDeclType	int		8633371	0					
ANR	8633423	Identifier	j		8633371	1					
ANR	8633424	IdentifierDeclStatement	int current_fragment ;	23:4:309:329	8633371	6	True				
ANR	8633425	IdentifierDecl	current_fragment		8633371	0					
ANR	8633426	IdentifierDeclType	int		8633371	0					
ANR	8633427	Identifier	current_fragment		8633371	1					
ANR	8633428	IdentifierDeclStatement	int plane ;	25:4:336:345	8633371	7	True				
ANR	8633429	IdentifierDecl	plane		8633371	0					
ANR	8633430	IdentifierDeclType	int		8633371	0					
ANR	8633431	Identifier	plane		8633371	1					
ANR	8633432	IfStatement	if ( s -> keyframe )		8633371	8					
ANR	8633433	Condition	s -> keyframe	29:8:358:368	8633371	0	True				
ANR	8633434	PtrMemberAccess	s -> keyframe		8633371	0					
ANR	8633435	Identifier	s		8633371	0					
ANR	8633436	Identifier	keyframe		8633371	1					
ANR	8633437	CompoundStatement		27:21:299:299	8633371	1					
ANR	8633438	ExpressionStatement	"memset ( s -> superblock_coding , SB_FULLY_CODED , s -> superblock_count )"	31:8:382:447	8633371	0	True				
ANR	8633439	CallExpression	"memset ( s -> superblock_coding , SB_FULLY_CODED , s -> superblock_count )"		8633371	0					
ANR	8633440	Callee	memset		8633371	0					
ANR	8633441	Identifier	memset		8633371	0					
ANR	8633442	ArgumentList	s -> superblock_coding		8633371	1					
ANR	8633443	Argument	s -> superblock_coding		8633371	0					
ANR	8633444	PtrMemberAccess	s -> superblock_coding		8633371	0					
ANR	8633445	Identifier	s		8633371	0					
ANR	8633446	Identifier	superblock_coding		8633371	1					
ANR	8633447	Argument	SB_FULLY_CODED		8633371	1					
ANR	8633448	Identifier	SB_FULLY_CODED		8633371	0					
ANR	8633449	Argument	s -> superblock_count		8633371	2					
ANR	8633450	PtrMemberAccess	s -> superblock_count		8633371	0					
ANR	8633451	Identifier	s		8633371	0					
ANR	8633452	Identifier	superblock_count		8633371	1					
ANR	8633453	ElseStatement	else		8633371	0					
ANR	8633454	CompoundStatement		31:11:389:389	8633371	0					
ANR	8633455	ExpressionStatement	bit = get_bits1 ( gb ) ^ 1	37:8:534:565	8633371	0	True				
ANR	8633456	AssignmentExpression	bit = get_bits1 ( gb ) ^ 1		8633371	0		=			
ANR	8633457	Identifier	bit		8633371	0					
ANR	8633458	ExclusiveOrExpression	get_bits1 ( gb ) ^ 1		8633371	1		^			
ANR	8633459	CallExpression	get_bits1 ( gb )		8633371	0					
ANR	8633460	Callee	get_bits1		8633371	0					
ANR	8633461	Identifier	get_bits1		8633371	0					
ANR	8633462	ArgumentList	gb		8633371	1					
ANR	8633463	Argument	gb		8633371	0					
ANR	8633464	Identifier	gb		8633371	0					
ANR	8633465	PrimaryExpression	1		8633371	1					
ANR	8633466	ExpressionStatement	current_run = 0	39:8:576:591	8633371	1	True				
ANR	8633467	AssignmentExpression	current_run = 0		8633371	0		=			
ANR	8633468	Identifier	current_run		8633371	0					
ANR	8633469	PrimaryExpression	0		8633371	1					
ANR	8633470	WhileStatement	while ( current_superblock < s -> superblock_count && get_bits_left ( gb ) > 0 )		8633371	2					
ANR	8633471	Condition	current_superblock < s -> superblock_count && get_bits_left ( gb ) > 0	43:15:611:675	8633371	0	True				
ANR	8633472	AndExpression	current_superblock < s -> superblock_count && get_bits_left ( gb ) > 0		8633371	0		&&			
ANR	8633473	RelationalExpression	current_superblock < s -> superblock_count		8633371	0		<			
ANR	8633474	Identifier	current_superblock		8633371	0					
ANR	8633475	PtrMemberAccess	s -> superblock_count		8633371	1					
ANR	8633476	Identifier	s		8633371	0					
ANR	8633477	Identifier	superblock_count		8633371	1					
ANR	8633478	RelationalExpression	get_bits_left ( gb ) > 0		8633371	1		>			
ANR	8633479	CallExpression	get_bits_left ( gb )		8633371	0					
ANR	8633480	Callee	get_bits_left		8633371	0					
ANR	8633481	Identifier	get_bits_left		8633371	0					
ANR	8633482	ArgumentList	gb		8633371	1					
ANR	8633483	Argument	gb		8633371	0					
ANR	8633484	Identifier	gb		8633371	0					
ANR	8633485	PrimaryExpression	0		8633371	1					
ANR	8633486	CompoundStatement		41:82:606:606	8633371	1					
ANR	8633487	IfStatement	if ( s -> theora && current_run == MAXIMUM_LONG_BIT_RUN )		8633371	0					
ANR	8633488	Condition	s -> theora && current_run == MAXIMUM_LONG_BIT_RUN	45:16:697:744	8633371	0	True				
ANR	8633489	AndExpression	s -> theora && current_run == MAXIMUM_LONG_BIT_RUN		8633371	0		&&			
ANR	8633490	PtrMemberAccess	s -> theora		8633371	0					
ANR	8633491	Identifier	s		8633371	0					
ANR	8633492	Identifier	theora		8633371	1					
ANR	8633493	EqualityExpression	current_run == MAXIMUM_LONG_BIT_RUN		8633371	1		==			
ANR	8633494	Identifier	current_run		8633371	0					
ANR	8633495	Identifier	MAXIMUM_LONG_BIT_RUN		8633371	1					
ANR	8633496	ExpressionStatement	bit = get_bits1 ( gb )	47:16:764:783	8633371	1	True				
ANR	8633497	AssignmentExpression	bit = get_bits1 ( gb )		8633371	0		=			
ANR	8633498	Identifier	bit		8633371	0					
ANR	8633499	CallExpression	get_bits1 ( gb )		8633371	1					
ANR	8633500	Callee	get_bits1		8633371	0					
ANR	8633501	Identifier	get_bits1		8633371	0					
ANR	8633502	ArgumentList	gb		8633371	1					
ANR	8633503	Argument	gb		8633371	0					
ANR	8633504	Identifier	gb		8633371	0					
ANR	8633505	ElseStatement	else		8633371	0					
ANR	8633506	ExpressionStatement	bit ^= 1	51:16:820:828	8633371	0	True				
ANR	8633507	AssignmentExpression	bit ^= 1		8633371	0		^=			
ANR	8633508	Identifier	bit		8633371	0					
ANR	8633509	PrimaryExpression	1		8633371	1					
ANR	8633510	ExpressionStatement	"current_run = get_vlc2 ( gb , s -> superblock_run_length_vlc . table , 6 , 2 ) + 1"	55:12:845:953	8633371	1	True				
ANR	8633511	AssignmentExpression	"current_run = get_vlc2 ( gb , s -> superblock_run_length_vlc . table , 6 , 2 ) + 1"		8633371	0		=			
ANR	8633512	Identifier	current_run		8633371	0					
ANR	8633513	AdditiveExpression	"get_vlc2 ( gb , s -> superblock_run_length_vlc . table , 6 , 2 ) + 1"		8633371	1		+			
ANR	8633514	CallExpression	"get_vlc2 ( gb , s -> superblock_run_length_vlc . table , 6 , 2 )"		8633371	0					
ANR	8633515	Callee	get_vlc2		8633371	0					
ANR	8633516	Identifier	get_vlc2		8633371	0					
ANR	8633517	ArgumentList	gb		8633371	1					
ANR	8633518	Argument	gb		8633371	0					
ANR	8633519	Identifier	gb		8633371	0					
ANR	8633520	Argument	s -> superblock_run_length_vlc . table		8633371	1					
ANR	8633521	MemberAccess	s -> superblock_run_length_vlc . table		8633371	0					
ANR	8633522	PtrMemberAccess	s -> superblock_run_length_vlc		8633371	0					
ANR	8633523	Identifier	s		8633371	0					
ANR	8633524	Identifier	superblock_run_length_vlc		8633371	1					
ANR	8633525	Identifier	table		8633371	1					
ANR	8633526	Argument	6		8633371	2					
ANR	8633527	PrimaryExpression	6		8633371	0					
ANR	8633528	Argument	2		8633371	3					
ANR	8633529	PrimaryExpression	2		8633371	0					
ANR	8633530	PrimaryExpression	1		8633371	1					
ANR	8633531	IfStatement	if ( current_run == 34 )		8633371	2					
ANR	8633532	Condition	current_run == 34	59:16:972:988	8633371	0	True				
ANR	8633533	EqualityExpression	current_run == 34		8633371	0		==			
ANR	8633534	Identifier	current_run		8633371	0					
ANR	8633535	PrimaryExpression	34		8633371	1					
ANR	8633536	ExpressionStatement	"current_run += get_bits ( gb , 12 )"	61:16:1008:1039	8633371	1	True				
ANR	8633537	AssignmentExpression	"current_run += get_bits ( gb , 12 )"		8633371	0		+=			
ANR	8633538	Identifier	current_run		8633371	0					
ANR	8633539	CallExpression	"get_bits ( gb , 12 )"		8633371	1					
ANR	8633540	Callee	get_bits		8633371	0					
ANR	8633541	Identifier	get_bits		8633371	0					
ANR	8633542	ArgumentList	gb		8633371	1					
ANR	8633543	Argument	gb		8633371	0					
ANR	8633544	Identifier	gb		8633371	0					
ANR	8633545	Argument	12		8633371	1					
ANR	8633546	PrimaryExpression	12		8633371	0					
ANR	8633547	IfStatement	if ( current_superblock + current_run > s -> superblock_count )		8633371	3					
ANR	8633548	Condition	current_superblock + current_run > s -> superblock_count	65:16:1060:1113	8633371	0	True				
ANR	8633549	RelationalExpression	current_superblock + current_run > s -> superblock_count		8633371	0		>			
ANR	8633550	AdditiveExpression	current_superblock + current_run		8633371	0		+			
ANR	8633551	Identifier	current_superblock		8633371	0					
ANR	8633552	Identifier	current_run		8633371	1					
ANR	8633553	PtrMemberAccess	s -> superblock_count		8633371	1					
ANR	8633554	Identifier	s		8633371	0					
ANR	8633555	Identifier	superblock_count		8633371	1					
ANR	8633556	CompoundStatement		63:72:1044:1044	8633371	1					
ANR	8633557	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Invalid partially coded superblock run length\\n"" )"	67:16:1135:1240	8633371	0	True				
ANR	8633558	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Invalid partially coded superblock run length\\n"" )"		8633371	0					
ANR	8633559	Callee	av_log		8633371	0					
ANR	8633560	Identifier	av_log		8633371	0					
ANR	8633561	ArgumentList	s -> avctx		8633371	1					
ANR	8633562	Argument	s -> avctx		8633371	0					
ANR	8633563	PtrMemberAccess	s -> avctx		8633371	0					
ANR	8633564	Identifier	s		8633371	0					
ANR	8633565	Identifier	avctx		8633371	1					
ANR	8633566	Argument	AV_LOG_ERROR		8633371	1					
ANR	8633567	Identifier	AV_LOG_ERROR		8633371	0					
ANR	8633568	Argument	"""Invalid partially coded superblock run length\\n"""		8633371	2					
ANR	8633569	PrimaryExpression	"""Invalid partially coded superblock run length\\n"""		8633371	0					
ANR	8633570	ReturnStatement	return - 1 ;	71:16:1259:1268	8633371	1	True				
ANR	8633571	UnaryOperationExpression	- 1		8633371	0					
ANR	8633572	UnaryOperator	-		8633371	0					
ANR	8633573	PrimaryExpression	1		8633371	1					
ANR	8633574	ExpressionStatement	"memset ( s -> superblock_coding + current_superblock , bit , current_run )"	77:12:1300:1367	8633371	4	True				
ANR	8633575	CallExpression	"memset ( s -> superblock_coding + current_superblock , bit , current_run )"		8633371	0					
ANR	8633576	Callee	memset		8633371	0					
ANR	8633577	Identifier	memset		8633371	0					
ANR	8633578	ArgumentList	s -> superblock_coding + current_superblock		8633371	1					
ANR	8633579	Argument	s -> superblock_coding + current_superblock		8633371	0					
ANR	8633580	AdditiveExpression	s -> superblock_coding + current_superblock		8633371	0		+			
ANR	8633581	PtrMemberAccess	s -> superblock_coding		8633371	0					
ANR	8633582	Identifier	s		8633371	0					
ANR	8633583	Identifier	superblock_coding		8633371	1					
ANR	8633584	Identifier	current_superblock		8633371	1					
ANR	8633585	Argument	bit		8633371	1					
ANR	8633586	Identifier	bit		8633371	0					
ANR	8633587	Argument	current_run		8633371	2					
ANR	8633588	Identifier	current_run		8633371	0					
ANR	8633589	ExpressionStatement	current_superblock += current_run	81:12:1384:1417	8633371	5	True				
ANR	8633590	AssignmentExpression	current_superblock += current_run		8633371	0		+=			
ANR	8633591	Identifier	current_superblock		8633371	0					
ANR	8633592	Identifier	current_run		8633371	1					
ANR	8633593	IfStatement	if ( bit )		8633371	6					
ANR	8633594	Condition	bit	83:16:1436:1438	8633371	0	True				
ANR	8633595	Identifier	bit		8633371	0					
ANR	8633596	ExpressionStatement	num_partial_superblocks += current_run	85:16:1458:1496	8633371	1	True				
ANR	8633597	AssignmentExpression	num_partial_superblocks += current_run		8633371	0		+=			
ANR	8633598	Identifier	num_partial_superblocks		8633371	0					
ANR	8633599	Identifier	current_run		8633371	1					
ANR	8633600	IfStatement	if ( num_partial_superblocks < s -> superblock_count )		8633371	3					
ANR	8633601	Condition	num_partial_superblocks < s -> superblock_count	95:12:1671:1715	8633371	0	True				
ANR	8633602	RelationalExpression	num_partial_superblocks < s -> superblock_count		8633371	0		<			
ANR	8633603	Identifier	num_partial_superblocks		8633371	0					
ANR	8633604	PtrMemberAccess	s -> superblock_count		8633371	1					
ANR	8633605	Identifier	s		8633371	0					
ANR	8633606	Identifier	superblock_count		8633371	1					
ANR	8633607	CompoundStatement		95:12:1661:1688	8633371	1					
ANR	8633608	IdentifierDeclStatement	int superblocks_decoded = 0 ;	97:12:1733:1760	8633371	0	True				
ANR	8633609	IdentifierDecl	superblocks_decoded = 0		8633371	0					
ANR	8633610	IdentifierDeclType	int		8633371	0					
ANR	8633611	Identifier	superblocks_decoded		8633371	1					
ANR	8633612	AssignmentExpression	superblocks_decoded = 0		8633371	2		=			
ANR	8633613	Identifier	superblocks_decoded		8633371	0					
ANR	8633614	PrimaryExpression	0		8633371	1					
ANR	8633615	ExpressionStatement	current_superblock = 0	101:12:1777:1799	8633371	1	True				
ANR	8633616	AssignmentExpression	current_superblock = 0		8633371	0		=			
ANR	8633617	Identifier	current_superblock		8633371	0					
ANR	8633618	PrimaryExpression	0		8633371	1					
ANR	8633619	ExpressionStatement	bit = get_bits1 ( gb ) ^ 1	103:12:1814:1852	8633371	2	True				
ANR	8633620	AssignmentExpression	bit = get_bits1 ( gb ) ^ 1		8633371	0		=			
ANR	8633621	Identifier	bit		8633371	0					
ANR	8633622	ExclusiveOrExpression	get_bits1 ( gb ) ^ 1		8633371	1		^			
ANR	8633623	CallExpression	get_bits1 ( gb )		8633371	0					
ANR	8633624	Callee	get_bits1		8633371	0					
ANR	8633625	Identifier	get_bits1		8633371	0					
ANR	8633626	ArgumentList	gb		8633371	1					
ANR	8633627	Argument	gb		8633371	0					
ANR	8633628	Identifier	gb		8633371	0					
ANR	8633629	PrimaryExpression	1		8633371	1					
ANR	8633630	ExpressionStatement	current_run = 0	105:12:1867:1889	8633371	3	True				
ANR	8633631	AssignmentExpression	current_run = 0		8633371	0		=			
ANR	8633632	Identifier	current_run		8633371	0					
ANR	8633633	PrimaryExpression	0		8633371	1					
ANR	8633634	WhileStatement	while ( superblocks_decoded < s -> superblock_count - num_partial_superblocks && get_bits_left ( gb ) > 0 )		8633371	4					
ANR	8633635	Condition	superblocks_decoded < s -> superblock_count - num_partial_superblocks && get_bits_left ( gb ) > 0	109:19:1913:2024	8633371	0	True				
ANR	8633636	AndExpression	superblocks_decoded < s -> superblock_count - num_partial_superblocks && get_bits_left ( gb ) > 0		8633371	0		&&			
ANR	8633637	RelationalExpression	superblocks_decoded < s -> superblock_count - num_partial_superblocks		8633371	0		<			
ANR	8633638	Identifier	superblocks_decoded		8633371	0					
ANR	8633639	AdditiveExpression	s -> superblock_count - num_partial_superblocks		8633371	1		-			
ANR	8633640	PtrMemberAccess	s -> superblock_count		8633371	0					
ANR	8633641	Identifier	s		8633371	0					
ANR	8633642	Identifier	superblock_count		8633371	1					
ANR	8633643	Identifier	num_partial_superblocks		8633371	1					
ANR	8633644	RelationalExpression	get_bits_left ( gb ) > 0		8633371	1		>			
ANR	8633645	CallExpression	get_bits_left ( gb )		8633371	0					
ANR	8633646	Callee	get_bits_left		8633371	0					
ANR	8633647	Identifier	get_bits_left		8633371	0					
ANR	8633648	ArgumentList	gb		8633371	1					
ANR	8633649	Argument	gb		8633371	0					
ANR	8633650	Identifier	gb		8633371	0					
ANR	8633651	PrimaryExpression	0		8633371	1					
ANR	8633652	CompoundStatement		109:42:1955:1955	8633371	1					
ANR	8633653	IfStatement	if ( s -> theora && current_run == MAXIMUM_LONG_BIT_RUN )		8633371	0					
ANR	8633654	Condition	s -> theora && current_run == MAXIMUM_LONG_BIT_RUN	113:20:2050:2097	8633371	0	True				
ANR	8633655	AndExpression	s -> theora && current_run == MAXIMUM_LONG_BIT_RUN		8633371	0		&&			
ANR	8633656	PtrMemberAccess	s -> theora		8633371	0					
ANR	8633657	Identifier	s		8633371	0					
ANR	8633658	Identifier	theora		8633371	1					
ANR	8633659	EqualityExpression	current_run == MAXIMUM_LONG_BIT_RUN		8633371	1		==			
ANR	8633660	Identifier	current_run		8633371	0					
ANR	8633661	Identifier	MAXIMUM_LONG_BIT_RUN		8633371	1					
ANR	8633662	ExpressionStatement	bit = get_bits1 ( gb )	115:20:2121:2140	8633371	1	True				
ANR	8633663	AssignmentExpression	bit = get_bits1 ( gb )		8633371	0		=			
ANR	8633664	Identifier	bit		8633371	0					
ANR	8633665	CallExpression	get_bits1 ( gb )		8633371	1					
ANR	8633666	Callee	get_bits1		8633371	0					
ANR	8633667	Identifier	get_bits1		8633371	0					
ANR	8633668	ArgumentList	gb		8633371	1					
ANR	8633669	Argument	gb		8633371	0					
ANR	8633670	Identifier	gb		8633371	0					
ANR	8633671	ElseStatement	else		8633371	0					
ANR	8633672	ExpressionStatement	bit ^= 1	119:20:2185:2193	8633371	0	True				
ANR	8633673	AssignmentExpression	bit ^= 1		8633371	0		^=			
ANR	8633674	Identifier	bit		8633371	0					
ANR	8633675	PrimaryExpression	1		8633371	1					
ANR	8633676	ExpressionStatement	"current_run = get_vlc2 ( gb , s -> superblock_run_length_vlc . table , 6 , 2 ) + 1"	123:16:2214:2326	8633371	1	True				
ANR	8633677	AssignmentExpression	"current_run = get_vlc2 ( gb , s -> superblock_run_length_vlc . table , 6 , 2 ) + 1"		8633371	0		=			
ANR	8633678	Identifier	current_run		8633371	0					
ANR	8633679	AdditiveExpression	"get_vlc2 ( gb , s -> superblock_run_length_vlc . table , 6 , 2 ) + 1"		8633371	1		+			
ANR	8633680	CallExpression	"get_vlc2 ( gb , s -> superblock_run_length_vlc . table , 6 , 2 )"		8633371	0					
ANR	8633681	Callee	get_vlc2		8633371	0					
ANR	8633682	Identifier	get_vlc2		8633371	0					
ANR	8633683	ArgumentList	gb		8633371	1					
ANR	8633684	Argument	gb		8633371	0					
ANR	8633685	Identifier	gb		8633371	0					
ANR	8633686	Argument	s -> superblock_run_length_vlc . table		8633371	1					
ANR	8633687	MemberAccess	s -> superblock_run_length_vlc . table		8633371	0					
ANR	8633688	PtrMemberAccess	s -> superblock_run_length_vlc		8633371	0					
ANR	8633689	Identifier	s		8633371	0					
ANR	8633690	Identifier	superblock_run_length_vlc		8633371	1					
ANR	8633691	Identifier	table		8633371	1					
ANR	8633692	Argument	6		8633371	2					
ANR	8633693	PrimaryExpression	6		8633371	0					
ANR	8633694	Argument	2		8633371	3					
ANR	8633695	PrimaryExpression	2		8633371	0					
ANR	8633696	PrimaryExpression	1		8633371	1					
ANR	8633697	IfStatement	if ( current_run == 34 )		8633371	2					
ANR	8633698	Condition	current_run == 34	127:20:2349:2365	8633371	0	True				
ANR	8633699	EqualityExpression	current_run == 34		8633371	0		==			
ANR	8633700	Identifier	current_run		8633371	0					
ANR	8633701	PrimaryExpression	34		8633371	1					
ANR	8633702	ExpressionStatement	"current_run += get_bits ( gb , 12 )"	129:20:2389:2420	8633371	1	True				
ANR	8633703	AssignmentExpression	"current_run += get_bits ( gb , 12 )"		8633371	0		+=			
ANR	8633704	Identifier	current_run		8633371	0					
ANR	8633705	CallExpression	"get_bits ( gb , 12 )"		8633371	1					
ANR	8633706	Callee	get_bits		8633371	0					
ANR	8633707	Identifier	get_bits		8633371	0					
ANR	8633708	ArgumentList	gb		8633371	1					
ANR	8633709	Argument	gb		8633371	0					
ANR	8633710	Identifier	gb		8633371	0					
ANR	8633711	Argument	12		8633371	1					
ANR	8633712	PrimaryExpression	12		8633371	0					
ANR	8633713	ForStatement	for ( j = 0 ; j < current_run ; current_superblock ++ )		8633371	3					
ANR	8633714	ForInit	j = 0 ;	133:21:2446:2451	8633371	0	True				
ANR	8633715	AssignmentExpression	j = 0		8633371	0		=			
ANR	8633716	Identifier	j		8633371	0					
ANR	8633717	PrimaryExpression	0		8633371	1					
ANR	8633718	Condition	j < current_run	133:28:2453:2467	8633371	1	True				
ANR	8633719	RelationalExpression	j < current_run		8633371	0		<			
ANR	8633720	Identifier	j		8633371	0					
ANR	8633721	Identifier	current_run		8633371	1					
ANR	8633722	PostIncDecOperationExpression	current_superblock ++	133:45:2470:2489	8633371	2	True				
ANR	8633723	Identifier	current_superblock		8633371	0					
ANR	8633724	IncDec	++		8633371	1					
ANR	8633725	CompoundStatement		131:67:2420:2420	8633371	3					
ANR	8633726	IfStatement	if ( current_superblock >= s -> superblock_count )		8633371	0					
ANR	8633727	Condition	current_superblock >= s -> superblock_count	135:24:2519:2559	8633371	0	True				
ANR	8633728	RelationalExpression	current_superblock >= s -> superblock_count		8633371	0		>=			
ANR	8633729	Identifier	current_superblock		8633371	0					
ANR	8633730	PtrMemberAccess	s -> superblock_count		8633371	1					
ANR	8633731	Identifier	s		8633371	0					
ANR	8633732	Identifier	superblock_count		8633371	1					
ANR	8633733	CompoundStatement		133:67:2490:2490	8633371	1					
ANR	8633734	ExpressionStatement	"av_log ( s -> avctx , AV_LOG_ERROR , ""Invalid fully coded superblock run length\\n"" )"	137:24:2589:2698	8633371	0	True				
ANR	8633735	CallExpression	"av_log ( s -> avctx , AV_LOG_ERROR , ""Invalid fully coded superblock run length\\n"" )"		8633371	0					
ANR	8633736	Callee	av_log		8633371	0					
ANR	8633737	Identifier	av_log		8633371	0					
ANR	8633738	ArgumentList	s -> avctx		8633371	1					
ANR	8633739	Argument	s -> avctx		8633371	0					
ANR	8633740	PtrMemberAccess	s -> avctx		8633371	0					
ANR	8633741	Identifier	s		8633371	0					
ANR	8633742	Identifier	avctx		8633371	1					
ANR	8633743	Argument	AV_LOG_ERROR		8633371	1					
ANR	8633744	Identifier	AV_LOG_ERROR		8633371	0					
ANR	8633745	Argument	"""Invalid fully coded superblock run length\\n"""		8633371	2					
ANR	8633746	PrimaryExpression	"""Invalid fully coded superblock run length\\n"""		8633371	0					
ANR	8633747	ReturnStatement	return - 1 ;	141:24:2725:2734	8633371	1	True				
ANR	8633748	UnaryOperationExpression	- 1		8633371	0					
ANR	8633749	UnaryOperator	-		8633371	0					
ANR	8633750	PrimaryExpression	1		8633371	1					
ANR	8633751	IfStatement	if ( s -> superblock_coding [ current_superblock ] == SB_NOT_CODED )		8633371	1					
ANR	8633752	Condition	s -> superblock_coding [ current_superblock ] == SB_NOT_CODED	149:24:2868:2923	8633371	0	True				
ANR	8633753	EqualityExpression	s -> superblock_coding [ current_superblock ] == SB_NOT_CODED		8633371	0		==			
ANR	8633754	ArrayIndexing	s -> superblock_coding [ current_superblock ]		8633371	0					
ANR	8633755	PtrMemberAccess	s -> superblock_coding		8633371	0					
ANR	8633756	Identifier	s		8633371	0					
ANR	8633757	Identifier	superblock_coding		8633371	1					
ANR	8633758	Identifier	current_superblock		8633371	1					
ANR	8633759	Identifier	SB_NOT_CODED		8633371	1					
ANR	8633760	CompoundStatement		147:82:2854:2854	8633371	1					
ANR	8633761	ExpressionStatement	s -> superblock_coding [ current_superblock ] = 2 * bit	151:24:2953:3003	8633371	0	True				
ANR	8633762	AssignmentExpression	s -> superblock_coding [ current_superblock ] = 2 * bit		8633371	0		=			
ANR	8633763	ArrayIndexing	s -> superblock_coding [ current_superblock ]		8633371	0					
ANR	8633764	PtrMemberAccess	s -> superblock_coding		8633371	0					
ANR	8633765	Identifier	s		8633371	0					
ANR	8633766	Identifier	superblock_coding		8633371	1					
ANR	8633767	Identifier	current_superblock		8633371	1					
ANR	8633768	MultiplicativeExpression	2 * bit		8633371	1		*			
ANR	8633769	PrimaryExpression	2		8633371	0					
ANR	8633770	Identifier	bit		8633371	1					
ANR	8633771	ExpressionStatement	j ++	153:24:3030:3033	8633371	1	True				
ANR	8633772	PostIncDecOperationExpression	j ++		8633371	0					
ANR	8633773	Identifier	j		8633371	0					
ANR	8633774	IncDec	++		8633371	1					
ANR	8633775	ExpressionStatement	superblocks_decoded += current_run	159:16:3094:3128	8633371	4	True				
ANR	8633776	AssignmentExpression	superblocks_decoded += current_run		8633371	0		+=			
ANR	8633777	Identifier	superblocks_decoded		8633371	0					
ANR	8633778	Identifier	current_run		8633371	1					
ANR	8633779	IfStatement	if ( num_partial_superblocks )		8633371	4					
ANR	8633780	Condition	num_partial_superblocks	171:12:3280:3302	8633371	0	True				
ANR	8633781	Identifier	num_partial_superblocks		8633371	0					
ANR	8633782	CompoundStatement		169:37:3233:3233	8633371	1					
ANR	8633783	ExpressionStatement	current_run = 0	173:12:3320:3335	8633371	0	True				
ANR	8633784	AssignmentExpression	current_run = 0		8633371	0		=			
ANR	8633785	Identifier	current_run		8633371	0					
ANR	8633786	PrimaryExpression	0		8633371	1					
ANR	8633787	ExpressionStatement	bit = get_bits1 ( gb )	175:12:3350:3377	8633371	1	True				
ANR	8633788	AssignmentExpression	bit = get_bits1 ( gb )		8633371	0		=			
ANR	8633789	Identifier	bit		8633371	0					
ANR	8633790	CallExpression	get_bits1 ( gb )		8633371	1					
ANR	8633791	Callee	get_bits1		8633371	0					
ANR	8633792	Identifier	get_bits1		8633371	0					
ANR	8633793	ArgumentList	gb		8633371	1					
ANR	8633794	Argument	gb		8633371	0					
ANR	8633795	Identifier	gb		8633371	0					
ANR	8633796	ExpressionStatement	bit ^= 1	181:12:3523:3531	8633371	2	True				
ANR	8633797	AssignmentExpression	bit ^= 1		8633371	0		^=			
ANR	8633798	Identifier	bit		8633371	0					
ANR	8633799	PrimaryExpression	1		8633371	1					
ANR	8633800	ExpressionStatement	s -> total_num_coded_frags = 0	193:4:3660:3688	8633371	9	True				
ANR	8633801	AssignmentExpression	s -> total_num_coded_frags = 0		8633371	0		=			
ANR	8633802	PtrMemberAccess	s -> total_num_coded_frags		8633371	0					
ANR	8633803	Identifier	s		8633371	0					
ANR	8633804	Identifier	total_num_coded_frags		8633371	1					
ANR	8633805	PrimaryExpression	0		8633371	1					
ANR	8633806	ExpressionStatement	"memset ( s -> macroblock_coding , MODE_COPY , s -> macroblock_count )"	195:4:3695:3755	8633371	10	True				
ANR	8633807	CallExpression	"memset ( s -> macroblock_coding , MODE_COPY , s -> macroblock_count )"		8633371	0					
ANR	8633808	Callee	memset		8633371	0					
ANR	8633809	Identifier	memset		8633371	0					
ANR	8633810	ArgumentList	s -> macroblock_coding		8633371	1					
ANR	8633811	Argument	s -> macroblock_coding		8633371	0					
ANR	8633812	PtrMemberAccess	s -> macroblock_coding		8633371	0					
ANR	8633813	Identifier	s		8633371	0					
ANR	8633814	Identifier	macroblock_coding		8633371	1					
ANR	8633815	Argument	MODE_COPY		8633371	1					
ANR	8633816	Identifier	MODE_COPY		8633371	0					
ANR	8633817	Argument	s -> macroblock_count		8633371	2					
ANR	8633818	PtrMemberAccess	s -> macroblock_count		8633371	0					
ANR	8633819	Identifier	s		8633371	0					
ANR	8633820	Identifier	macroblock_count		8633371	1					
ANR	8633821	ForStatement	for ( plane = 0 ; plane < 3 ; plane ++ )		8633371	11					
ANR	8633822	ForInit	plane = 0 ;	199:9:3769:3778	8633371	0	True				
ANR	8633823	AssignmentExpression	plane = 0		8633371	0		=			
ANR	8633824	Identifier	plane		8633371	0					
ANR	8633825	PrimaryExpression	0		8633371	1					
ANR	8633826	Condition	plane < 3	199:20:3780:3788	8633371	1	True				
ANR	8633827	RelationalExpression	plane < 3		8633371	0		<			
ANR	8633828	Identifier	plane		8633371	0					
ANR	8633829	PrimaryExpression	3		8633371	1					
ANR	8633830	PostIncDecOperationExpression	plane ++	199:31:3791:3797	8633371	2	True				
ANR	8633831	Identifier	plane		8633371	0					
ANR	8633832	IncDec	++		8633371	1					
ANR	8633833	CompoundStatement		205:8:3923:3946	8633371	3					
ANR	8633834	IdentifierDeclStatement	int sb_start = superblock_starts [ plane ] ;	201:8:3811:3850	8633371	0	True				
ANR	8633835	IdentifierDecl	sb_start = superblock_starts [ plane ]		8633371	0					
ANR	8633836	IdentifierDeclType	int		8633371	0					
ANR	8633837	Identifier	sb_start		8633371	1					
ANR	8633838	AssignmentExpression	sb_start = superblock_starts [ plane ]		8633371	2		=			
ANR	8633839	Identifier	sb_start		8633371	0					
ANR	8633840	ArrayIndexing	superblock_starts [ plane ]		8633371	1					
ANR	8633841	Identifier	superblock_starts		8633371	0					
ANR	8633842	Identifier	plane		8633371	1					
ANR	8633843	IdentifierDeclStatement	int sb_end = sb_start + ( plane ? s -> c_superblock_count : s -> y_superblock_count ) ;	203:8:3861:3984	8633371	1	True				
ANR	8633844	IdentifierDecl	sb_end = sb_start + ( plane ? s -> c_superblock_count : s -> y_superblock_count )		8633371	0					
ANR	8633845	IdentifierDeclType	int		8633371	0					
ANR	8633846	Identifier	sb_end		8633371	1					
ANR	8633847	AssignmentExpression	sb_end = sb_start + ( plane ? s -> c_superblock_count : s -> y_superblock_count )		8633371	2		=			
ANR	8633848	Identifier	sb_end		8633371	0					
ANR	8633849	AdditiveExpression	sb_start + ( plane ? s -> c_superblock_count : s -> y_superblock_count )		8633371	1		+			
ANR	8633850	Identifier	sb_start		8633371	0					
ANR	8633851	ConditionalExpression	plane ? s -> c_superblock_count : s -> y_superblock_count		8633371	1					
ANR	8633852	Condition	plane		8633371	0					
ANR	8633853	Identifier	plane		8633371	0					
ANR	8633854	PtrMemberAccess	s -> c_superblock_count		8633371	1					
ANR	8633855	Identifier	s		8633371	0					
ANR	8633856	Identifier	c_superblock_count		8633371	1					
ANR	8633857	PtrMemberAccess	s -> y_superblock_count		8633371	2					
ANR	8633858	Identifier	s		8633371	0					
ANR	8633859	Identifier	y_superblock_count		8633371	1					
ANR	8633860	IdentifierDeclStatement	int num_coded_frags = 0 ;	207:8:3995:4018	8633371	2	True				
ANR	8633861	IdentifierDecl	num_coded_frags = 0		8633371	0					
ANR	8633862	IdentifierDeclType	int		8633371	0					
ANR	8633863	Identifier	num_coded_frags		8633371	1					
ANR	8633864	AssignmentExpression	num_coded_frags = 0		8633371	2		=			
ANR	8633865	Identifier	num_coded_frags		8633371	0					
ANR	8633866	PrimaryExpression	0		8633371	1					
ANR	8633867	ForStatement	for ( i = sb_start ; i < sb_end && get_bits_left ( gb ) > 0 ; i ++ )		8633371	3					
ANR	8633868	ForInit	i = sb_start ;	211:13:4036:4048	8633371	0	True				
ANR	8633869	AssignmentExpression	i = sb_start		8633371	0		=			
ANR	8633870	Identifier	i		8633371	0					
ANR	8633871	Identifier	sb_start		8633371	1					
ANR	8633872	Condition	i < sb_end && get_bits_left ( gb ) > 0	211:27:4050:4084	8633371	1	True				
ANR	8633873	AndExpression	i < sb_end && get_bits_left ( gb ) > 0		8633371	0		&&			
ANR	8633874	RelationalExpression	i < sb_end		8633371	0		<			
ANR	8633875	Identifier	i		8633371	0					
ANR	8633876	Identifier	sb_end		8633371	1					
ANR	8633877	RelationalExpression	get_bits_left ( gb ) > 0		8633371	1		>			
ANR	8633878	CallExpression	get_bits_left ( gb )		8633371	0					
ANR	8633879	Callee	get_bits_left		8633371	0					
ANR	8633880	Identifier	get_bits_left		8633371	0					
ANR	8633881	ArgumentList	gb		8633371	1					
ANR	8633882	Argument	gb		8633371	0					
ANR	8633883	Identifier	gb		8633371	0					
ANR	8633884	PrimaryExpression	0		8633371	1					
ANR	8633885	PostIncDecOperationExpression	i ++	211:64:4087:4089	8633371	2	True				
ANR	8633886	Identifier	i		8633371	0					
ANR	8633887	IncDec	++		8633371	1					
ANR	8633888	CompoundStatement		209:69:4020:4020	8633371	3					
ANR	8633889	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		8633371	0					
ANR	8633890	ForInit	j = 0 ;	215:17:4180:4185	8633371	0	True				
ANR	8633891	AssignmentExpression	j = 0		8633371	0		=			
ANR	8633892	Identifier	j		8633371	0					
ANR	8633893	PrimaryExpression	0		8633371	1					
ANR	8633894	Condition	j < 16	215:24:4187:4192	8633371	1	True				
ANR	8633895	RelationalExpression	j < 16		8633371	0		<			
ANR	8633896	Identifier	j		8633371	0					
ANR	8633897	PrimaryExpression	16		8633371	1					
ANR	8633898	PostIncDecOperationExpression	j ++	215:32:4195:4197	8633371	2	True				
ANR	8633899	Identifier	j		8633371	0					
ANR	8633900	IncDec	++		8633371	1					
ANR	8633901	CompoundStatement		213:37:4128:4128	8633371	3					
ANR	8633902	ExpressionStatement	current_fragment = s -> superblock_fragments [ i * 16 + j ]	219:16:4296:4350	8633371	0	True				
ANR	8633903	AssignmentExpression	current_fragment = s -> superblock_fragments [ i * 16 + j ]		8633371	0		=			
ANR	8633904	Identifier	current_fragment		8633371	0					
ANR	8633905	ArrayIndexing	s -> superblock_fragments [ i * 16 + j ]		8633371	1					
ANR	8633906	PtrMemberAccess	s -> superblock_fragments		8633371	0					
ANR	8633907	Identifier	s		8633371	0					
ANR	8633908	Identifier	superblock_fragments		8633371	1					
ANR	8633909	AdditiveExpression	i * 16 + j		8633371	1		+			
ANR	8633910	MultiplicativeExpression	i * 16		8633371	0		*			
ANR	8633911	Identifier	i		8633371	0					
ANR	8633912	PrimaryExpression	16		8633371	1					
ANR	8633913	Identifier	j		8633371	1					
ANR	8633914	IfStatement	if ( current_fragment != - 1 )		8633371	1					
ANR	8633915	Condition	current_fragment != - 1	221:20:4373:4394	8633371	0	True				
ANR	8633916	EqualityExpression	current_fragment != - 1		8633371	0		!=			
ANR	8633917	Identifier	current_fragment		8633371	0					
ANR	8633918	UnaryOperationExpression	- 1		8633371	1					
ANR	8633919	UnaryOperator	-		8633371	0					
ANR	8633920	PrimaryExpression	1		8633371	1					
ANR	8633921	CompoundStatement		221:20:4348:4383	8633371	1					
ANR	8633922	IdentifierDeclStatement	int coded = s -> superblock_coding [ i ] ;	223:20:4420:4455	8633371	0	True				
ANR	8633923	IdentifierDecl	coded = s -> superblock_coding [ i ]		8633371	0					
ANR	8633924	IdentifierDeclType	int		8633371	0					
ANR	8633925	Identifier	coded		8633371	1					
ANR	8633926	AssignmentExpression	coded = s -> superblock_coding [ i ]		8633371	2		=			
ANR	8633927	Identifier	coded		8633371	0					
ANR	8633928	ArrayIndexing	s -> superblock_coding [ i ]		8633371	1					
ANR	8633929	PtrMemberAccess	s -> superblock_coding		8633371	0					
ANR	8633930	Identifier	s		8633371	0					
ANR	8633931	Identifier	superblock_coding		8633371	1					
ANR	8633932	Identifier	i		8633371	1					
ANR	8633933	IfStatement	if ( s -> superblock_coding [ i ] == SB_PARTIALLY_CODED )		8633371	1					
ANR	8633934	Condition	s -> superblock_coding [ i ] == SB_PARTIALLY_CODED	227:24:4484:4528	8633371	0	True				
ANR	8633935	EqualityExpression	s -> superblock_coding [ i ] == SB_PARTIALLY_CODED		8633371	0		==			
ANR	8633936	ArrayIndexing	s -> superblock_coding [ i ]		8633371	0					
ANR	8633937	PtrMemberAccess	s -> superblock_coding		8633371	0					
ANR	8633938	Identifier	s		8633371	0					
ANR	8633939	Identifier	superblock_coding		8633371	1					
ANR	8633940	Identifier	i		8633371	1					
ANR	8633941	Identifier	SB_PARTIALLY_CODED		8633371	1					
ANR	8633942	CompoundStatement		225:71:4459:4459	8633371	1					
ANR	8633943	IfStatement	if ( current_run -- == 0 )		8633371	0					
ANR	8633944	Condition	current_run -- == 0	233:28:4714:4731	8633371	0	True				
ANR	8633945	EqualityExpression	current_run -- == 0		8633371	0		==			
ANR	8633946	PostIncDecOperationExpression	current_run --		8633371	0					
ANR	8633947	Identifier	current_run		8633371	0					
ANR	8633948	IncDec	--		8633371	1					
ANR	8633949	PrimaryExpression	0		8633371	1					
ANR	8633950	CompoundStatement		231:48:4662:4662	8633371	1					
ANR	8633951	ExpressionStatement	bit ^= 1	235:28:4765:4780	8633371	0	True				
ANR	8633952	AssignmentExpression	bit ^= 1		8633371	0		^=			
ANR	8633953	Identifier	bit		8633371	0					
ANR	8633954	PrimaryExpression	1		8633371	1					
ANR	8633955	ExpressionStatement	"current_run = get_vlc2 ( gb , s -> fragment_run_length_vlc . table , 5 , 2 )"	237:28:4811:4877	8633371	1	True				
ANR	8633956	AssignmentExpression	"current_run = get_vlc2 ( gb , s -> fragment_run_length_vlc . table , 5 , 2 )"		8633371	0		=			
ANR	8633957	Identifier	current_run		8633371	0					
ANR	8633958	CallExpression	"get_vlc2 ( gb , s -> fragment_run_length_vlc . table , 5 , 2 )"		8633371	1					
ANR	8633959	Callee	get_vlc2		8633371	0					
ANR	8633960	Identifier	get_vlc2		8633371	0					
ANR	8633961	ArgumentList	gb		8633371	1					
ANR	8633962	Argument	gb		8633371	0					
ANR	8633963	Identifier	gb		8633371	0					
ANR	8633964	Argument	s -> fragment_run_length_vlc . table		8633371	1					
ANR	8633965	MemberAccess	s -> fragment_run_length_vlc . table		8633371	0					
ANR	8633966	PtrMemberAccess	s -> fragment_run_length_vlc		8633371	0					
ANR	8633967	Identifier	s		8633371	0					
ANR	8633968	Identifier	fragment_run_length_vlc		8633371	1					
ANR	8633969	Identifier	table		8633371	1					
ANR	8633970	Argument	5		8633371	2					
ANR	8633971	PrimaryExpression	5		8633371	0					
ANR	8633972	Argument	2		8633371	3					
ANR	8633973	PrimaryExpression	2		8633371	0					
ANR	8633974	ExpressionStatement	coded = bit	241:24:4931:4942	8633371	1	True				
ANR	8633975	AssignmentExpression	coded = bit		8633371	0		=			
ANR	8633976	Identifier	coded		8633371	0					
ANR	8633977	Identifier	bit		8633371	1					
ANR	8633978	IfStatement	if ( coded )		8633371	2					
ANR	8633979	Condition	coded	247:24:4994:4998	8633371	0	True				
ANR	8633980	Identifier	coded		8633371	0					
ANR	8633981	CompoundStatement		245:31:4929:4929	8633371	1					
ANR	8633982	ExpressionStatement	s -> all_fragments [ current_fragment ] . coding_method = MODE_INTER_NO_MV	253:24:5147:5243	8633371	0	True				
ANR	8633983	AssignmentExpression	s -> all_fragments [ current_fragment ] . coding_method = MODE_INTER_NO_MV		8633371	0		=			
ANR	8633984	MemberAccess	s -> all_fragments [ current_fragment ] . coding_method		8633371	0					
ANR	8633985	ArrayIndexing	s -> all_fragments [ current_fragment ]		8633371	0					
ANR	8633986	PtrMemberAccess	s -> all_fragments		8633371	0					
ANR	8633987	Identifier	s		8633371	0					
ANR	8633988	Identifier	all_fragments		8633371	1					
ANR	8633989	Identifier	current_fragment		8633371	1					
ANR	8633990	Identifier	coding_method		8633371	1					
ANR	8633991	Identifier	MODE_INTER_NO_MV		8633371	1					
ANR	8633992	ExpressionStatement	s -> coded_fragment_list [ plane ] [ num_coded_frags ++ ] = current_fragment	257:24:5270:5366	8633371	1	True				
ANR	8633993	AssignmentExpression	s -> coded_fragment_list [ plane ] [ num_coded_frags ++ ] = current_fragment		8633371	0		=			
ANR	8633994	ArrayIndexing	s -> coded_fragment_list [ plane ] [ num_coded_frags ++ ]		8633371	0					
ANR	8633995	ArrayIndexing	s -> coded_fragment_list [ plane ]		8633371	0					
ANR	8633996	PtrMemberAccess	s -> coded_fragment_list		8633371	0					
ANR	8633997	Identifier	s		8633371	0					
ANR	8633998	Identifier	coded_fragment_list		8633371	1					
ANR	8633999	Identifier	plane		8633371	1					
ANR	8634000	PostIncDecOperationExpression	num_coded_frags ++		8633371	1					
ANR	8634001	Identifier	num_coded_frags		8633371	0					
ANR	8634002	IncDec	++		8633371	1					
ANR	8634003	Identifier	current_fragment		8633371	1					
ANR	8634004	ElseStatement	else		8633371	0					
ANR	8634005	CompoundStatement		259:27:5324:5324	8633371	0					
ANR	8634006	ExpressionStatement	s -> all_fragments [ current_fragment ] . coding_method = MODE_COPY	265:24:5505:5594	8633371	0	True				
ANR	8634007	AssignmentExpression	s -> all_fragments [ current_fragment ] . coding_method = MODE_COPY		8633371	0		=			
ANR	8634008	MemberAccess	s -> all_fragments [ current_fragment ] . coding_method		8633371	0					
ANR	8634009	ArrayIndexing	s -> all_fragments [ current_fragment ]		8633371	0					
ANR	8634010	PtrMemberAccess	s -> all_fragments		8633371	0					
ANR	8634011	Identifier	s		8633371	0					
ANR	8634012	Identifier	all_fragments		8633371	1					
ANR	8634013	Identifier	current_fragment		8633371	1					
ANR	8634014	Identifier	coding_method		8633371	1					
ANR	8634015	Identifier	MODE_COPY		8633371	1					
ANR	8634016	ExpressionStatement	s -> total_num_coded_frags += num_coded_frags	277:8:5673:5716	8633371	4	True				
ANR	8634017	AssignmentExpression	s -> total_num_coded_frags += num_coded_frags		8633371	0		+=			
ANR	8634018	PtrMemberAccess	s -> total_num_coded_frags		8633371	0					
ANR	8634019	Identifier	s		8633371	0					
ANR	8634020	Identifier	total_num_coded_frags		8633371	1					
ANR	8634021	Identifier	num_coded_frags		8633371	1					
ANR	8634022	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		8633371	5					
ANR	8634023	ForInit	i = 0 ;	279:13:5732:5737	8633371	0	True				
ANR	8634024	AssignmentExpression	i = 0		8633371	0		=			
ANR	8634025	Identifier	i		8633371	0					
ANR	8634026	PrimaryExpression	0		8633371	1					
ANR	8634027	Condition	i < 64	279:20:5739:5744	8633371	1	True				
ANR	8634028	RelationalExpression	i < 64		8633371	0		<			
ANR	8634029	Identifier	i		8633371	0					
ANR	8634030	PrimaryExpression	64		8633371	1					
ANR	8634031	PostIncDecOperationExpression	i ++	279:28:5747:5749	8633371	2	True				
ANR	8634032	Identifier	i		8633371	0					
ANR	8634033	IncDec	++		8633371	1					
ANR	8634034	ExpressionStatement	s -> num_coded_frags [ plane ] [ i ] = num_coded_frags	281:12:5765:5811	8633371	3	True				
ANR	8634035	AssignmentExpression	s -> num_coded_frags [ plane ] [ i ] = num_coded_frags		8633371	0		=			
ANR	8634036	ArrayIndexing	s -> num_coded_frags [ plane ] [ i ]		8633371	0					
ANR	8634037	ArrayIndexing	s -> num_coded_frags [ plane ]		8633371	0					
ANR	8634038	PtrMemberAccess	s -> num_coded_frags		8633371	0					
ANR	8634039	Identifier	s		8633371	0					
ANR	8634040	Identifier	num_coded_frags		8633371	1					
ANR	8634041	Identifier	plane		8633371	1					
ANR	8634042	Identifier	i		8633371	1					
ANR	8634043	Identifier	num_coded_frags		8633371	1					
ANR	8634044	IfStatement	if ( plane < 2 )		8633371	6					
ANR	8634045	Condition	plane < 2	283:12:5826:5834	8633371	0	True				
ANR	8634046	RelationalExpression	plane < 2		8633371	0		<			
ANR	8634047	Identifier	plane		8633371	0					
ANR	8634048	PrimaryExpression	2		8633371	1					
ANR	8634049	ExpressionStatement	s -> coded_fragment_list [ plane + 1 ] = s -> coded_fragment_list [ plane ] + num_coded_frags	285:12:5850:5982	8633371	1	True				
ANR	8634050	AssignmentExpression	s -> coded_fragment_list [ plane + 1 ] = s -> coded_fragment_list [ plane ] + num_coded_frags		8633371	0		=			
ANR	8634051	ArrayIndexing	s -> coded_fragment_list [ plane + 1 ]		8633371	0					
ANR	8634052	PtrMemberAccess	s -> coded_fragment_list		8633371	0					
ANR	8634053	Identifier	s		8633371	0					
ANR	8634054	Identifier	coded_fragment_list		8633371	1					
ANR	8634055	AdditiveExpression	plane + 1		8633371	1		+			
ANR	8634056	Identifier	plane		8633371	0					
ANR	8634057	PrimaryExpression	1		8633371	1					
ANR	8634058	AdditiveExpression	s -> coded_fragment_list [ plane ] + num_coded_frags		8633371	1		+			
ANR	8634059	ArrayIndexing	s -> coded_fragment_list [ plane ]		8633371	0					
ANR	8634060	PtrMemberAccess	s -> coded_fragment_list		8633371	0					
ANR	8634061	Identifier	s		8633371	0					
ANR	8634062	Identifier	coded_fragment_list		8633371	1					
ANR	8634063	Identifier	plane		8633371	1					
ANR	8634064	Identifier	num_coded_frags		8633371	1					
ANR	8634065	ReturnStatement	return 0 ;	291:4:5996:6004	8633371	12	True				
ANR	8634066	PrimaryExpression	0		8633371	0					
ANR	8634067	ReturnType	static int		8633371	1					
ANR	8634068	Identifier	unpack_superblocks		8633371	2					
ANR	8634069	ParameterList	"Vp3DecodeContext * s , GetBitContext * gb"		8633371	3					
ANR	8634070	Parameter	Vp3DecodeContext * s	1:30:30:48	8633371	0	True				
ANR	8634071	ParameterType	Vp3DecodeContext *		8633371	0					
ANR	8634072	Identifier	s		8633371	1					
ANR	8634073	Parameter	GetBitContext * gb	1:51:51:67	8633371	1	True				
ANR	8634074	ParameterType	GetBitContext *		8633371	0					
ANR	8634075	Identifier	gb		8633371	1					
ANR	8634076	CFGEntryNode	ENTRY		8633371		True				
ANR	8634077	CFGExitNode	EXIT		8633371		True				
ANR	8634078	Symbol	plane		8633371						
ANR	8634079	Symbol	s -> superblock_run_length_vlc . table		8633371						
ANR	8634080	Symbol	sb_start		8633371						
ANR	8634081	Symbol	get_bits		8633371						
ANR	8634082	Symbol	s -> keyframe		8633371						
ANR	8634083	Symbol	bit		8633371						
ANR	8634084	Symbol	* s -> superblock_coding		8633371						
ANR	8634085	Symbol	* s -> superblock_fragments		8633371						
ANR	8634086	Symbol	s -> v_superblock_start		8633371						
ANR	8634087	Symbol	SB_FULLY_CODED		8633371						
ANR	8634088	Symbol	current_run		8633371						
ANR	8634089	Symbol	current_fragment		8633371						
ANR	8634090	Symbol	s -> y_superblock_count		8633371						
ANR	8634091	Symbol	* s -> coded_fragment_list		8633371						
ANR	8634092	Symbol	sb_end		8633371						
ANR	8634093	Symbol	s -> u_superblock_start		8633371						
ANR	8634094	Symbol	s -> num_coded_frags		8633371						
ANR	8634095	Symbol	get_bits1		8633371						
ANR	8634096	Symbol	num_partial_superblocks		8633371						
ANR	8634097	Symbol	* current_fragment		8633371						
ANR	8634098	Symbol	* * * s		8633371						
ANR	8634099	Symbol	coded		8633371						
ANR	8634100	Symbol	s -> all_fragments		8633371						
ANR	8634101	Symbol	s -> theora		8633371						
ANR	8634102	Symbol	* s -> all_fragments		8633371						
ANR	8634103	Symbol	* * s -> num_coded_frags		8633371						
ANR	8634104	Symbol	s -> macroblock_coding		8633371						
ANR	8634105	Symbol	s -> superblock_count		8633371						
ANR	8634106	Symbol	s -> superblock_coding		8633371						
ANR	8634107	Symbol	MAXIMUM_LONG_BIT_RUN		8633371						
ANR	8634108	Symbol	s -> avctx		8633371						
ANR	8634109	Symbol	s -> fragment_run_length_vlc . table		8633371						
ANR	8634110	Symbol	s -> superblock_run_length_vlc		8633371						
ANR	8634111	Symbol	s -> total_num_coded_frags		8633371						
ANR	8634112	Symbol	MODE_COPY		8633371						
ANR	8634113	Symbol	superblock_starts		8633371						
ANR	8634114	Symbol	get_bits_left		8633371						
ANR	8634115	Symbol	MODE_INTER_NO_MV		8633371						
ANR	8634116	Symbol	* s -> num_coded_frags		8633371						
ANR	8634117	Symbol	* current_superblock		8633371						
ANR	8634118	Symbol	SB_NOT_CODED		8633371						
ANR	8634119	Symbol	* * s		8633371						
ANR	8634120	Symbol	s -> superblock_fragments		8633371						
ANR	8634121	Symbol	s -> fragment_run_length_vlc		8633371						
ANR	8634122	Symbol	gb		8633371						
ANR	8634123	Symbol	* plane		8633371						
ANR	8634124	Symbol	* superblock_starts		8633371						
ANR	8634125	Symbol	AV_LOG_ERROR		8633371						
ANR	8634126	Symbol	superblocks_decoded		8633371						
ANR	8634127	Symbol	current_superblock		8633371						
ANR	8634128	Symbol	* * s -> coded_fragment_list		8633371						
ANR	8634129	Symbol	i		8633371						
ANR	8634130	Symbol	SB_PARTIALLY_CODED		8633371						
ANR	8634131	Symbol	j		8633371						
ANR	8634132	Symbol	s -> coded_fragment_list		8633371						
ANR	8634133	Symbol	s -> macroblock_count		8633371						
ANR	8634134	Symbol	* * plane		8633371						
ANR	8634135	Symbol	s		8633371						
ANR	8634136	Symbol	* i		8633371						
ANR	8634137	Symbol	num_coded_frags		8633371						
ANR	8634138	Symbol	* j		8633371						
ANR	8634139	Symbol	get_vlc2		8633371						
ANR	8634140	Symbol	* s		8633371						
ANR	8634141	Symbol	s -> c_superblock_count		8633371						
ANR	8634142	Symbol	s -> all_fragments [ current_fragment ] . coding_method		8633371						
