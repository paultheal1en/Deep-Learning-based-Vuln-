command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	28591	File	/home/p4ultr4n/workplace/ReVeal/raw_code/FUNC_05_0.c								
ANR	28592	Function	hl_decode_mb	1:0:0:10606							
ANR	28593	FunctionDef	"hl_decode_mb (const H264Context * h , H264SliceContext * sl)"		28592	0					
ANR	28594	CompoundStatement		3:0:88:10606	28592	0					
ANR	28595	IdentifierDeclStatement	const int mb_x = sl -> mb_x ;	5:4:95:123	28592	0	True				
ANR	28596	IdentifierDecl	mb_x = sl -> mb_x		28592	0					
ANR	28597	IdentifierDeclType	const int		28592	0					
ANR	28598	Identifier	mb_x		28592	1					
ANR	28599	AssignmentExpression	mb_x = sl -> mb_x		28592	2		=			
ANR	28600	Identifier	mb_x		28592	0					
ANR	28601	PtrMemberAccess	sl -> mb_x		28592	1					
ANR	28602	Identifier	sl		28592	0					
ANR	28603	Identifier	mb_x		28592	1					
ANR	28604	IdentifierDeclStatement	const int mb_y = sl -> mb_y ;	7:4:130:158	28592	1	True				
ANR	28605	IdentifierDecl	mb_y = sl -> mb_y		28592	0					
ANR	28606	IdentifierDeclType	const int		28592	0					
ANR	28607	Identifier	mb_y		28592	1					
ANR	28608	AssignmentExpression	mb_y = sl -> mb_y		28592	2		=			
ANR	28609	Identifier	mb_y		28592	0					
ANR	28610	PtrMemberAccess	sl -> mb_y		28592	1					
ANR	28611	Identifier	sl		28592	0					
ANR	28612	Identifier	mb_y		28592	1					
ANR	28613	IdentifierDeclStatement	const int mb_xy = sl -> mb_xy ;	9:4:165:194	28592	2	True				
ANR	28614	IdentifierDecl	mb_xy = sl -> mb_xy		28592	0					
ANR	28615	IdentifierDeclType	const int		28592	0					
ANR	28616	Identifier	mb_xy		28592	1					
ANR	28617	AssignmentExpression	mb_xy = sl -> mb_xy		28592	2		=			
ANR	28618	Identifier	mb_xy		28592	0					
ANR	28619	PtrMemberAccess	sl -> mb_xy		28592	1					
ANR	28620	Identifier	sl		28592	0					
ANR	28621	Identifier	mb_xy		28592	1					
ANR	28622	IdentifierDeclStatement	const int mb_type = h -> cur_pic . mb_type [ mb_xy ] ;	11:4:201:246	28592	3	True				
ANR	28623	IdentifierDecl	mb_type = h -> cur_pic . mb_type [ mb_xy ]		28592	0					
ANR	28624	IdentifierDeclType	const int		28592	0					
ANR	28625	Identifier	mb_type		28592	1					
ANR	28626	AssignmentExpression	mb_type = h -> cur_pic . mb_type [ mb_xy ]		28592	2		=			
ANR	28627	Identifier	mb_type		28592	0					
ANR	28628	ArrayIndexing	h -> cur_pic . mb_type [ mb_xy ]		28592	1					
ANR	28629	MemberAccess	h -> cur_pic . mb_type		28592	0					
ANR	28630	PtrMemberAccess	h -> cur_pic		28592	0					
ANR	28631	Identifier	h		28592	0					
ANR	28632	Identifier	cur_pic		28592	1					
ANR	28633	Identifier	mb_type		28592	1					
ANR	28634	Identifier	mb_xy		28592	1					
ANR	28635	IdentifierDeclStatement	"uint8_t * dest_y , * dest_cb , * dest_cr ;"	13:4:253:288	28592	4	True				
ANR	28636	IdentifierDecl	* dest_y		28592	0					
ANR	28637	IdentifierDeclType	uint8_t *		28592	0					
ANR	28638	Identifier	dest_y		28592	1					
ANR	28639	IdentifierDecl	* dest_cb		28592	1					
ANR	28640	IdentifierDeclType	uint8_t *		28592	0					
ANR	28641	Identifier	dest_cb		28592	1					
ANR	28642	IdentifierDecl	* dest_cr		28592	2					
ANR	28643	IdentifierDeclType	uint8_t *		28592	0					
ANR	28644	Identifier	dest_cr		28592	1					
ANR	28645	IdentifierDeclStatement	"int linesize , uvlinesize ;"	15:4:295:334	28592	5	True				
ANR	28646	IdentifierDecl	linesize		28592	0					
ANR	28647	IdentifierDeclType	int		28592	0					
ANR	28648	Identifier	linesize		28592	1					
ANR	28649	IdentifierDecl	uvlinesize		28592	1					
ANR	28650	IdentifierDeclType	int		28592	0					
ANR	28651	Identifier	uvlinesize		28592	1					
ANR	28652	IdentifierDeclStatement	"int i , j ;"	17:4:341:349	28592	6	True				
ANR	28653	IdentifierDecl	i		28592	0					
ANR	28654	IdentifierDeclType	int		28592	0					
ANR	28655	Identifier	i		28592	1					
ANR	28656	IdentifierDecl	j		28592	1					
ANR	28657	IdentifierDeclType	int		28592	0					
ANR	28658	Identifier	j		28592	1					
ANR	28659	IdentifierDeclStatement	const int * block_offset = & h -> block_offset [ 0 ] ;	19:4:356:401	28592	7	True				
ANR	28660	IdentifierDecl	* block_offset = & h -> block_offset [ 0 ]		28592	0					
ANR	28661	IdentifierDeclType	const int *		28592	0					
ANR	28662	Identifier	block_offset		28592	1					
ANR	28663	AssignmentExpression	* block_offset = & h -> block_offset [ 0 ]		28592	2		=			
ANR	28664	Identifier	block_offset		28592	0					
ANR	28665	UnaryOperationExpression	& h -> block_offset [ 0 ]		28592	1					
ANR	28666	UnaryOperator	&		28592	0					
ANR	28667	ArrayIndexing	h -> block_offset [ 0 ]		28592	1					
ANR	28668	PtrMemberAccess	h -> block_offset		28592	0					
ANR	28669	Identifier	h		28592	0					
ANR	28670	Identifier	block_offset		28592	1					
ANR	28671	PrimaryExpression	0		28592	1					
ANR	28672	IdentifierDeclStatement	const int transform_bypass = ! SIMPLE && ( sl -> qscale == 0 && h -> sps . transform_bypass ) ;	21:4:408:492	28592	8	True				
ANR	28673	IdentifierDecl	transform_bypass = ! SIMPLE && ( sl -> qscale == 0 && h -> sps . transform_bypass )		28592	0					
ANR	28674	IdentifierDeclType	const int		28592	0					
ANR	28675	Identifier	transform_bypass		28592	1					
ANR	28676	AssignmentExpression	transform_bypass = ! SIMPLE && ( sl -> qscale == 0 && h -> sps . transform_bypass )		28592	2		=			
ANR	28677	Identifier	transform_bypass		28592	0					
ANR	28678	AndExpression	! SIMPLE && ( sl -> qscale == 0 && h -> sps . transform_bypass )		28592	1		&&			
ANR	28679	UnaryOperationExpression	! SIMPLE		28592	0					
ANR	28680	UnaryOperator	!		28592	0					
ANR	28681	Identifier	SIMPLE		28592	1					
ANR	28682	AndExpression	sl -> qscale == 0 && h -> sps . transform_bypass		28592	1		&&			
ANR	28683	EqualityExpression	sl -> qscale == 0		28592	0		==			
ANR	28684	PtrMemberAccess	sl -> qscale		28592	0					
ANR	28685	Identifier	sl		28592	0					
ANR	28686	Identifier	qscale		28592	1					
ANR	28687	PrimaryExpression	0		28592	1					
ANR	28688	MemberAccess	h -> sps . transform_bypass		28592	1					
ANR	28689	PtrMemberAccess	h -> sps		28592	0					
ANR	28690	Identifier	h		28592	0					
ANR	28691	Identifier	sps		28592	1					
ANR	28692	Identifier	transform_bypass		28592	1					
ANR	28693	IdentifierDeclStatement	"void ( * idct_add ) ( uint8_t * dst , int16_t * block , int stride ) ;"	23:4:499:557	28592	9	True				
ANR	28694	IdentifierDecl	"( * idct_add ) ( uint8_t * dst , int16_t * block , int stride )"		28592	0					
ANR	28695	IdentifierDeclType	"void ( * ) ( uint8_t * dst , int16_t * block , int stride )"		28592	0					
ANR	28696	Identifier	idct_add		28592	1					
ANR	28697	Identifier	dst		28592	2					
ANR	28698	Identifier	block		28592	3					
ANR	28699	IdentifierDeclStatement	const int block_h = 16 >> h -> chroma_y_shift ;	25:4:564:609	28592	10	True				
ANR	28700	IdentifierDecl	block_h = 16 >> h -> chroma_y_shift		28592	0					
ANR	28701	IdentifierDeclType	const int		28592	0					
ANR	28702	Identifier	block_h		28592	1					
ANR	28703	AssignmentExpression	block_h = 16 >> h -> chroma_y_shift		28592	2		=			
ANR	28704	Identifier	block_h		28592	0					
ANR	28705	ShiftExpression	16 >> h -> chroma_y_shift		28592	1		>>			
ANR	28706	PrimaryExpression	16		28592	0					
ANR	28707	PtrMemberAccess	h -> chroma_y_shift		28592	1					
ANR	28708	Identifier	h		28592	0					
ANR	28709	Identifier	chroma_y_shift		28592	1					
ANR	28710	IdentifierDeclStatement	const int chroma422 = CHROMA422 ( h ) ;	27:4:616:650	28592	11	True				
ANR	28711	IdentifierDecl	chroma422 = CHROMA422 ( h )		28592	0					
ANR	28712	IdentifierDeclType	const int		28592	0					
ANR	28713	Identifier	chroma422		28592	1					
ANR	28714	AssignmentExpression	chroma422 = CHROMA422 ( h )		28592	2		=			
ANR	28715	Identifier	chroma422		28592	0					
ANR	28716	CallExpression	CHROMA422 ( h )		28592	1					
ANR	28717	Callee	CHROMA422		28592	0					
ANR	28718	Identifier	CHROMA422		28592	0					
ANR	28719	ArgumentList	h		28592	1					
ANR	28720	Argument	h		28592	0					
ANR	28721	Identifier	h		28592	0					
ANR	28722	ExpressionStatement	dest_y = h -> cur_pic . f -> data [ 0 ] + ( ( mb_x << PIXEL_SHIFT ) + mb_y * sl -> linesize ) * 16	31:4:659:748	28592	12	True				
ANR	28723	AssignmentExpression	dest_y = h -> cur_pic . f -> data [ 0 ] + ( ( mb_x << PIXEL_SHIFT ) + mb_y * sl -> linesize ) * 16		28592	0		=			
ANR	28724	Identifier	dest_y		28592	0					
ANR	28725	AdditiveExpression	h -> cur_pic . f -> data [ 0 ] + ( ( mb_x << PIXEL_SHIFT ) + mb_y * sl -> linesize ) * 16		28592	1		+			
ANR	28726	ArrayIndexing	h -> cur_pic . f -> data [ 0 ]		28592	0					
ANR	28727	PtrMemberAccess	h -> cur_pic . f -> data		28592	0					
ANR	28728	MemberAccess	h -> cur_pic . f		28592	0					
ANR	28729	PtrMemberAccess	h -> cur_pic		28592	0					
ANR	28730	Identifier	h		28592	0					
ANR	28731	Identifier	cur_pic		28592	1					
ANR	28732	Identifier	f		28592	1					
ANR	28733	Identifier	data		28592	1					
ANR	28734	PrimaryExpression	0		28592	1					
ANR	28735	MultiplicativeExpression	( ( mb_x << PIXEL_SHIFT ) + mb_y * sl -> linesize ) * 16		28592	1		*			
ANR	28736	AdditiveExpression	( mb_x << PIXEL_SHIFT ) + mb_y * sl -> linesize		28592	0		+			
ANR	28737	ShiftExpression	mb_x << PIXEL_SHIFT		28592	0		<<			
ANR	28738	Identifier	mb_x		28592	0					
ANR	28739	Identifier	PIXEL_SHIFT		28592	1					
ANR	28740	MultiplicativeExpression	mb_y * sl -> linesize		28592	1		*			
ANR	28741	Identifier	mb_y		28592	0					
ANR	28742	PtrMemberAccess	sl -> linesize		28592	1					
ANR	28743	Identifier	sl		28592	0					
ANR	28744	Identifier	linesize		28592	1					
ANR	28745	PrimaryExpression	16		28592	1					
ANR	28746	ExpressionStatement	dest_cb = h -> cur_pic . f -> data [ 1 ] + ( mb_x << PIXEL_SHIFT ) * 8 + mb_y * sl -> uvlinesize * block_h	33:4:755:849	28592	13	True				
ANR	28747	AssignmentExpression	dest_cb = h -> cur_pic . f -> data [ 1 ] + ( mb_x << PIXEL_SHIFT ) * 8 + mb_y * sl -> uvlinesize * block_h		28592	0		=			
ANR	28748	Identifier	dest_cb		28592	0					
ANR	28749	AdditiveExpression	h -> cur_pic . f -> data [ 1 ] + ( mb_x << PIXEL_SHIFT ) * 8 + mb_y * sl -> uvlinesize * block_h		28592	1		+			
ANR	28750	ArrayIndexing	h -> cur_pic . f -> data [ 1 ]		28592	0					
ANR	28751	PtrMemberAccess	h -> cur_pic . f -> data		28592	0					
ANR	28752	MemberAccess	h -> cur_pic . f		28592	0					
ANR	28753	PtrMemberAccess	h -> cur_pic		28592	0					
ANR	28754	Identifier	h		28592	0					
ANR	28755	Identifier	cur_pic		28592	1					
ANR	28756	Identifier	f		28592	1					
ANR	28757	Identifier	data		28592	1					
ANR	28758	PrimaryExpression	1		28592	1					
ANR	28759	AdditiveExpression	( mb_x << PIXEL_SHIFT ) * 8 + mb_y * sl -> uvlinesize * block_h		28592	1		+			
ANR	28760	MultiplicativeExpression	( mb_x << PIXEL_SHIFT ) * 8		28592	0		*			
ANR	28761	ShiftExpression	mb_x << PIXEL_SHIFT		28592	0		<<			
ANR	28762	Identifier	mb_x		28592	0					
ANR	28763	Identifier	PIXEL_SHIFT		28592	1					
ANR	28764	PrimaryExpression	8		28592	1					
ANR	28765	MultiplicativeExpression	mb_y * sl -> uvlinesize * block_h		28592	1		*			
ANR	28766	Identifier	mb_y		28592	0					
ANR	28767	MultiplicativeExpression	sl -> uvlinesize * block_h		28592	1		*			
ANR	28768	PtrMemberAccess	sl -> uvlinesize		28592	0					
ANR	28769	Identifier	sl		28592	0					
ANR	28770	Identifier	uvlinesize		28592	1					
ANR	28771	Identifier	block_h		28592	1					
ANR	28772	ExpressionStatement	dest_cr = h -> cur_pic . f -> data [ 2 ] + ( mb_x << PIXEL_SHIFT ) * 8 + mb_y * sl -> uvlinesize * block_h	35:4:856:950	28592	14	True				
ANR	28773	AssignmentExpression	dest_cr = h -> cur_pic . f -> data [ 2 ] + ( mb_x << PIXEL_SHIFT ) * 8 + mb_y * sl -> uvlinesize * block_h		28592	0		=			
ANR	28774	Identifier	dest_cr		28592	0					
ANR	28775	AdditiveExpression	h -> cur_pic . f -> data [ 2 ] + ( mb_x << PIXEL_SHIFT ) * 8 + mb_y * sl -> uvlinesize * block_h		28592	1		+			
ANR	28776	ArrayIndexing	h -> cur_pic . f -> data [ 2 ]		28592	0					
ANR	28777	PtrMemberAccess	h -> cur_pic . f -> data		28592	0					
ANR	28778	MemberAccess	h -> cur_pic . f		28592	0					
ANR	28779	PtrMemberAccess	h -> cur_pic		28592	0					
ANR	28780	Identifier	h		28592	0					
ANR	28781	Identifier	cur_pic		28592	1					
ANR	28782	Identifier	f		28592	1					
ANR	28783	Identifier	data		28592	1					
ANR	28784	PrimaryExpression	2		28592	1					
ANR	28785	AdditiveExpression	( mb_x << PIXEL_SHIFT ) * 8 + mb_y * sl -> uvlinesize * block_h		28592	1		+			
ANR	28786	MultiplicativeExpression	( mb_x << PIXEL_SHIFT ) * 8		28592	0		*			
ANR	28787	ShiftExpression	mb_x << PIXEL_SHIFT		28592	0		<<			
ANR	28788	Identifier	mb_x		28592	0					
ANR	28789	Identifier	PIXEL_SHIFT		28592	1					
ANR	28790	PrimaryExpression	8		28592	1					
ANR	28791	MultiplicativeExpression	mb_y * sl -> uvlinesize * block_h		28592	1		*			
ANR	28792	Identifier	mb_y		28592	0					
ANR	28793	MultiplicativeExpression	sl -> uvlinesize * block_h		28592	1		*			
ANR	28794	PtrMemberAccess	sl -> uvlinesize		28592	0					
ANR	28795	Identifier	sl		28592	0					
ANR	28796	Identifier	uvlinesize		28592	1					
ANR	28797	Identifier	block_h		28592	1					
ANR	28798	ExpressionStatement	"h -> vdsp . prefetch ( dest_y + ( sl -> mb_x & 3 ) * 4 * sl -> linesize + ( 64 << PIXEL_SHIFT ) , sl -> linesize , 4 )"	39:4:959:1067	28592	15	True				
ANR	28799	CallExpression	"h -> vdsp . prefetch ( dest_y + ( sl -> mb_x & 3 ) * 4 * sl -> linesize + ( 64 << PIXEL_SHIFT ) , sl -> linesize , 4 )"		28592	0					
ANR	28800	Callee	h -> vdsp . prefetch		28592	0					
ANR	28801	MemberAccess	h -> vdsp . prefetch		28592	0					
ANR	28802	PtrMemberAccess	h -> vdsp		28592	0					
ANR	28803	Identifier	h		28592	0					
ANR	28804	Identifier	vdsp		28592	1					
ANR	28805	Identifier	prefetch		28592	1					
ANR	28806	ArgumentList	dest_y + ( sl -> mb_x & 3 ) * 4 * sl -> linesize + ( 64 << PIXEL_SHIFT )		28592	1					
ANR	28807	Argument	dest_y + ( sl -> mb_x & 3 ) * 4 * sl -> linesize + ( 64 << PIXEL_SHIFT )		28592	0					
ANR	28808	AdditiveExpression	dest_y + ( sl -> mb_x & 3 ) * 4 * sl -> linesize + ( 64 << PIXEL_SHIFT )		28592	0		+			
ANR	28809	Identifier	dest_y		28592	0					
ANR	28810	AdditiveExpression	( sl -> mb_x & 3 ) * 4 * sl -> linesize + ( 64 << PIXEL_SHIFT )		28592	1		+			
ANR	28811	MultiplicativeExpression	( sl -> mb_x & 3 ) * 4 * sl -> linesize		28592	0		*			
ANR	28812	BitAndExpression	sl -> mb_x & 3		28592	0		&			
ANR	28813	PtrMemberAccess	sl -> mb_x		28592	0					
ANR	28814	Identifier	sl		28592	0					
ANR	28815	Identifier	mb_x		28592	1					
ANR	28816	PrimaryExpression	3		28592	1					
ANR	28817	MultiplicativeExpression	4 * sl -> linesize		28592	1		*			
ANR	28818	PrimaryExpression	4		28592	0					
ANR	28819	PtrMemberAccess	sl -> linesize		28592	1					
ANR	28820	Identifier	sl		28592	0					
ANR	28821	Identifier	linesize		28592	1					
ANR	28822	ShiftExpression	64 << PIXEL_SHIFT		28592	1		<<			
ANR	28823	PrimaryExpression	64		28592	0					
ANR	28824	Identifier	PIXEL_SHIFT		28592	1					
ANR	28825	Argument	sl -> linesize		28592	1					
ANR	28826	PtrMemberAccess	sl -> linesize		28592	0					
ANR	28827	Identifier	sl		28592	0					
ANR	28828	Identifier	linesize		28592	1					
ANR	28829	Argument	4		28592	2					
ANR	28830	PrimaryExpression	4		28592	0					
ANR	28831	ExpressionStatement	"h -> vdsp . prefetch ( dest_cb + ( sl -> mb_x & 7 ) * sl -> uvlinesize + ( 64 << PIXEL_SHIFT ) , dest_cr - dest_cb , 2 )"	41:4:1074:1181	28592	16	True				
ANR	28832	CallExpression	"h -> vdsp . prefetch ( dest_cb + ( sl -> mb_x & 7 ) * sl -> uvlinesize + ( 64 << PIXEL_SHIFT ) , dest_cr - dest_cb , 2 )"		28592	0					
ANR	28833	Callee	h -> vdsp . prefetch		28592	0					
ANR	28834	MemberAccess	h -> vdsp . prefetch		28592	0					
ANR	28835	PtrMemberAccess	h -> vdsp		28592	0					
ANR	28836	Identifier	h		28592	0					
ANR	28837	Identifier	vdsp		28592	1					
ANR	28838	Identifier	prefetch		28592	1					
ANR	28839	ArgumentList	dest_cb + ( sl -> mb_x & 7 ) * sl -> uvlinesize + ( 64 << PIXEL_SHIFT )		28592	1					
ANR	28840	Argument	dest_cb + ( sl -> mb_x & 7 ) * sl -> uvlinesize + ( 64 << PIXEL_SHIFT )		28592	0					
ANR	28841	AdditiveExpression	dest_cb + ( sl -> mb_x & 7 ) * sl -> uvlinesize + ( 64 << PIXEL_SHIFT )		28592	0		+			
ANR	28842	Identifier	dest_cb		28592	0					
ANR	28843	AdditiveExpression	( sl -> mb_x & 7 ) * sl -> uvlinesize + ( 64 << PIXEL_SHIFT )		28592	1		+			
ANR	28844	MultiplicativeExpression	( sl -> mb_x & 7 ) * sl -> uvlinesize		28592	0		*			
ANR	28845	BitAndExpression	sl -> mb_x & 7		28592	0		&			
ANR	28846	PtrMemberAccess	sl -> mb_x		28592	0					
ANR	28847	Identifier	sl		28592	0					
ANR	28848	Identifier	mb_x		28592	1					
ANR	28849	PrimaryExpression	7		28592	1					
ANR	28850	PtrMemberAccess	sl -> uvlinesize		28592	1					
ANR	28851	Identifier	sl		28592	0					
ANR	28852	Identifier	uvlinesize		28592	1					
ANR	28853	ShiftExpression	64 << PIXEL_SHIFT		28592	1		<<			
ANR	28854	PrimaryExpression	64		28592	0					
ANR	28855	Identifier	PIXEL_SHIFT		28592	1					
ANR	28856	Argument	dest_cr - dest_cb		28592	1					
ANR	28857	AdditiveExpression	dest_cr - dest_cb		28592	0		-			
ANR	28858	Identifier	dest_cr		28592	0					
ANR	28859	Identifier	dest_cb		28592	1					
ANR	28860	Argument	2		28592	2					
ANR	28861	PrimaryExpression	2		28592	0					
ANR	28862	ExpressionStatement	h -> list_counts [ mb_xy ] = sl -> list_count	45:4:1190:1228	28592	17	True				
ANR	28863	AssignmentExpression	h -> list_counts [ mb_xy ] = sl -> list_count		28592	0		=			
ANR	28864	ArrayIndexing	h -> list_counts [ mb_xy ]		28592	0					
ANR	28865	PtrMemberAccess	h -> list_counts		28592	0					
ANR	28866	Identifier	h		28592	0					
ANR	28867	Identifier	list_counts		28592	1					
ANR	28868	Identifier	mb_xy		28592	1					
ANR	28869	PtrMemberAccess	sl -> list_count		28592	1					
ANR	28870	Identifier	sl		28592	0					
ANR	28871	Identifier	list_count		28592	1					
ANR	28872	IfStatement	if ( ! SIMPLE && MB_FIELD ( sl ) )		28592	18					
ANR	28873	Condition	! SIMPLE && MB_FIELD ( sl )	49:8:1241:1263	28592	0	True				
ANR	28874	AndExpression	! SIMPLE && MB_FIELD ( sl )		28592	0		&&			
ANR	28875	UnaryOperationExpression	! SIMPLE		28592	0					
ANR	28876	UnaryOperator	!		28592	0					
ANR	28877	Identifier	SIMPLE		28592	1					
ANR	28878	CallExpression	MB_FIELD ( sl )		28592	1					
ANR	28879	Callee	MB_FIELD		28592	0					
ANR	28880	Identifier	MB_FIELD		28592	0					
ANR	28881	ArgumentList	sl		28592	1					
ANR	28882	Argument	sl		28592	0					
ANR	28883	Identifier	sl		28592	0					
ANR	28884	CompoundStatement		47:33:1177:1177	28592	1					
ANR	28885	ExpressionStatement	linesize = sl -> mb_linesize = sl -> linesize * 2	51:8:1277:1326	28592	0	True				
ANR	28886	AssignmentExpression	linesize = sl -> mb_linesize = sl -> linesize * 2		28592	0		=			
ANR	28887	Identifier	linesize		28592	0					
ANR	28888	AssignmentExpression	sl -> mb_linesize = sl -> linesize * 2		28592	1		=			
ANR	28889	PtrMemberAccess	sl -> mb_linesize		28592	0					
ANR	28890	Identifier	sl		28592	0					
ANR	28891	Identifier	mb_linesize		28592	1					
ANR	28892	MultiplicativeExpression	sl -> linesize * 2		28592	1		*			
ANR	28893	PtrMemberAccess	sl -> linesize		28592	0					
ANR	28894	Identifier	sl		28592	0					
ANR	28895	Identifier	linesize		28592	1					
ANR	28896	PrimaryExpression	2		28592	1					
ANR	28897	ExpressionStatement	uvlinesize = sl -> mb_uvlinesize = sl -> uvlinesize * 2	53:8:1337:1390	28592	1	True				
ANR	28898	AssignmentExpression	uvlinesize = sl -> mb_uvlinesize = sl -> uvlinesize * 2		28592	0		=			
ANR	28899	Identifier	uvlinesize		28592	0					
ANR	28900	AssignmentExpression	sl -> mb_uvlinesize = sl -> uvlinesize * 2		28592	1		=			
ANR	28901	PtrMemberAccess	sl -> mb_uvlinesize		28592	0					
ANR	28902	Identifier	sl		28592	0					
ANR	28903	Identifier	mb_uvlinesize		28592	1					
ANR	28904	MultiplicativeExpression	sl -> uvlinesize * 2		28592	1		*			
ANR	28905	PtrMemberAccess	sl -> uvlinesize		28592	0					
ANR	28906	Identifier	sl		28592	0					
ANR	28907	Identifier	uvlinesize		28592	1					
ANR	28908	PrimaryExpression	2		28592	1					
ANR	28909	ExpressionStatement	block_offset = & h -> block_offset [ 48 ]	55:8:1401:1436	28592	2	True				
ANR	28910	AssignmentExpression	block_offset = & h -> block_offset [ 48 ]		28592	0		=			
ANR	28911	Identifier	block_offset		28592	0					
ANR	28912	UnaryOperationExpression	& h -> block_offset [ 48 ]		28592	1					
ANR	28913	UnaryOperator	&		28592	0					
ANR	28914	ArrayIndexing	h -> block_offset [ 48 ]		28592	1					
ANR	28915	PtrMemberAccess	h -> block_offset		28592	0					
ANR	28916	Identifier	h		28592	0					
ANR	28917	Identifier	block_offset		28592	1					
ANR	28918	PrimaryExpression	48		28592	1					
ANR	28919	IfStatement	if ( mb_y & 1 )		28592	3					
ANR	28920	Condition	mb_y & 1	57:12:1451:1458	28592	0	True				
ANR	28921	BitAndExpression	mb_y & 1		28592	0		&			
ANR	28922	Identifier	mb_y		28592	0					
ANR	28923	PrimaryExpression	1		28592	1					
ANR	28924	CompoundStatement		55:22:1372:1372	28592	1					
ANR	28925	ExpressionStatement	dest_y -= sl -> linesize * 15	59:12:1512:1540	28592	0	True				
ANR	28926	AssignmentExpression	dest_y -= sl -> linesize * 15		28592	0		-=			
ANR	28927	Identifier	dest_y		28592	0					
ANR	28928	MultiplicativeExpression	sl -> linesize * 15		28592	1		*			
ANR	28929	PtrMemberAccess	sl -> linesize		28592	0					
ANR	28930	Identifier	sl		28592	0					
ANR	28931	Identifier	linesize		28592	1					
ANR	28932	PrimaryExpression	15		28592	1					
ANR	28933	ExpressionStatement	dest_cb -= sl -> uvlinesize * ( block_h - 1 )	61:12:1555:1596	28592	1	True				
ANR	28934	AssignmentExpression	dest_cb -= sl -> uvlinesize * ( block_h - 1 )		28592	0		-=			
ANR	28935	Identifier	dest_cb		28592	0					
ANR	28936	MultiplicativeExpression	sl -> uvlinesize * ( block_h - 1 )		28592	1		*			
ANR	28937	PtrMemberAccess	sl -> uvlinesize		28592	0					
ANR	28938	Identifier	sl		28592	0					
ANR	28939	Identifier	uvlinesize		28592	1					
ANR	28940	AdditiveExpression	block_h - 1		28592	1		-			
ANR	28941	Identifier	block_h		28592	0					
ANR	28942	PrimaryExpression	1		28592	1					
ANR	28943	ExpressionStatement	dest_cr -= sl -> uvlinesize * ( block_h - 1 )	63:12:1611:1652	28592	2	True				
ANR	28944	AssignmentExpression	dest_cr -= sl -> uvlinesize * ( block_h - 1 )		28592	0		-=			
ANR	28945	Identifier	dest_cr		28592	0					
ANR	28946	MultiplicativeExpression	sl -> uvlinesize * ( block_h - 1 )		28592	1		*			
ANR	28947	PtrMemberAccess	sl -> uvlinesize		28592	0					
ANR	28948	Identifier	sl		28592	0					
ANR	28949	Identifier	uvlinesize		28592	1					
ANR	28950	AdditiveExpression	block_h - 1		28592	1		-			
ANR	28951	Identifier	block_h		28592	0					
ANR	28952	PrimaryExpression	1		28592	1					
ANR	28953	IfStatement	if ( FRAME_MBAFF ( h ) )		28592	4					
ANR	28954	Condition	FRAME_MBAFF ( h )	67:12:1678:1691	28592	0	True				
ANR	28955	CallExpression	FRAME_MBAFF ( h )		28592	0					
ANR	28956	Callee	FRAME_MBAFF		28592	0					
ANR	28957	Identifier	FRAME_MBAFF		28592	0					
ANR	28958	ArgumentList	h		28592	1					
ANR	28959	Argument	h		28592	0					
ANR	28960	Identifier	h		28592	0					
ANR	28961	CompoundStatement		67:12:1620:1628	28592	1					
ANR	28962	IdentifierDeclStatement	int list ;	69:12:1709:1717	28592	0	True				
ANR	28963	IdentifierDecl	list		28592	0					
ANR	28964	IdentifierDeclType	int		28592	0					
ANR	28965	Identifier	list		28592	1					
ANR	28966	ForStatement	for ( list = 0 ; list < sl -> list_count ; list ++ )		28592	1					
ANR	28967	ForInit	list = 0 ;	71:17:1737:1745	28592	0	True				
ANR	28968	AssignmentExpression	list = 0		28592	0		=			
ANR	28969	Identifier	list		28592	0					
ANR	28970	PrimaryExpression	0		28592	1					
ANR	28971	Condition	list < sl -> list_count	71:27:1747:1767	28592	1	True				
ANR	28972	RelationalExpression	list < sl -> list_count		28592	0		<			
ANR	28973	Identifier	list		28592	0					
ANR	28974	PtrMemberAccess	sl -> list_count		28592	1					
ANR	28975	Identifier	sl		28592	0					
ANR	28976	Identifier	list_count		28592	1					
ANR	28977	PostIncDecOperationExpression	list ++	71:50:1770:1775	28592	2	True				
ANR	28978	Identifier	list		28592	0					
ANR	28979	IncDec	++		28592	1					
ANR	28980	CompoundStatement		69:58:1689:1689	28592	3					
ANR	28981	IfStatement	"if ( ! USES_LIST ( mb_type , list ) )"		28592	0					
ANR	28982	Condition	"! USES_LIST ( mb_type , list )"	73:20:1801:1825	28592	0	True				
ANR	28983	UnaryOperationExpression	"! USES_LIST ( mb_type , list )"		28592	0					
ANR	28984	UnaryOperator	!		28592	0					
ANR	28985	CallExpression	"USES_LIST ( mb_type , list )"		28592	1					
ANR	28986	Callee	USES_LIST		28592	0					
ANR	28987	Identifier	USES_LIST		28592	0					
ANR	28988	ArgumentList	mb_type		28592	1					
ANR	28989	Argument	mb_type		28592	0					
ANR	28990	Identifier	mb_type		28592	0					
ANR	28991	Argument	list		28592	1					
ANR	28992	Identifier	list		28592	0					
ANR	28993	ContinueStatement	continue ;	75:20:1849:1857	28592	1	True				
ANR	28994	IfStatement	if ( IS_16X16 ( mb_type ) )		28592	1					
ANR	28995	Condition	IS_16X16 ( mb_type )	77:20:1880:1896	28592	0	True				
ANR	28996	CallExpression	IS_16X16 ( mb_type )		28592	0					
ANR	28997	Callee	IS_16X16		28592	0					
ANR	28998	Identifier	IS_16X16		28592	0					
ANR	28999	ArgumentList	mb_type		28592	1					
ANR	29000	Argument	mb_type		28592	0					
ANR	29001	Identifier	mb_type		28592	0					
ANR	29002	CompoundStatement		77:20:1833:1877	28592	1					
ANR	29003	IdentifierDeclStatement	int8_t * ref = & sl -> ref_cache [ list ] [ scan8 [ 0 ] ] ;	79:20:1922:1966	28592	0	True				
ANR	29004	IdentifierDecl	* ref = & sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		28592	0					
ANR	29005	IdentifierDeclType	int8_t *		28592	0					
ANR	29006	Identifier	ref		28592	1					
ANR	29007	AssignmentExpression	* ref = & sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		28592	2		=			
ANR	29008	Identifier	ref		28592	0					
ANR	29009	UnaryOperationExpression	& sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		28592	1					
ANR	29010	UnaryOperator	&		28592	0					
ANR	29011	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ 0 ] ]		28592	1					
ANR	29012	ArrayIndexing	sl -> ref_cache [ list ]		28592	0					
ANR	29013	PtrMemberAccess	sl -> ref_cache		28592	0					
ANR	29014	Identifier	sl		28592	0					
ANR	29015	Identifier	ref_cache		28592	1					
ANR	29016	Identifier	list		28592	1					
ANR	29017	ArrayIndexing	scan8 [ 0 ]		28592	1					
ANR	29018	Identifier	scan8		28592	0					
ANR	29019	PrimaryExpression	0		28592	1					
ANR	29020	ExpressionStatement	"fill_rectangle ( ref , 4 , 4 , 8 , ( 16 + * ref ) ^ ( sl -> mb_y & 1 ) , 1 )"	81:20:1989:2050	28592	1	True				
ANR	29021	CallExpression	"fill_rectangle ( ref , 4 , 4 , 8 , ( 16 + * ref ) ^ ( sl -> mb_y & 1 ) , 1 )"		28592	0					
ANR	29022	Callee	fill_rectangle		28592	0					
ANR	29023	Identifier	fill_rectangle		28592	0					
ANR	29024	ArgumentList	ref		28592	1					
ANR	29025	Argument	ref		28592	0					
ANR	29026	Identifier	ref		28592	0					
ANR	29027	Argument	4		28592	1					
ANR	29028	PrimaryExpression	4		28592	0					
ANR	29029	Argument	4		28592	2					
ANR	29030	PrimaryExpression	4		28592	0					
ANR	29031	Argument	8		28592	3					
ANR	29032	PrimaryExpression	8		28592	0					
ANR	29033	Argument	( 16 + * ref ) ^ ( sl -> mb_y & 1 )		28592	4					
ANR	29034	ExclusiveOrExpression	( 16 + * ref ) ^ ( sl -> mb_y & 1 )		28592	0		^			
ANR	29035	AdditiveExpression	16 + * ref		28592	0		+			
ANR	29036	PrimaryExpression	16		28592	0					
ANR	29037	UnaryOperationExpression	* ref		28592	1					
ANR	29038	UnaryOperator	*		28592	0					
ANR	29039	Identifier	ref		28592	1					
ANR	29040	BitAndExpression	sl -> mb_y & 1		28592	1		&			
ANR	29041	PtrMemberAccess	sl -> mb_y		28592	0					
ANR	29042	Identifier	sl		28592	0					
ANR	29043	Identifier	mb_y		28592	1					
ANR	29044	PrimaryExpression	1		28592	1					
ANR	29045	Argument	1		28592	5					
ANR	29046	PrimaryExpression	1		28592	0					
ANR	29047	ElseStatement	else		28592	0					
ANR	29048	CompoundStatement		81:23:1987:1987	28592	0					
ANR	29049	ForStatement	for ( i = 0 ; i < 16 ; i += 4 )		28592	0					
ANR	29050	ForInit	i = 0 ;	85:25:2104:2109	28592	0	True				
ANR	29051	AssignmentExpression	i = 0		28592	0		=			
ANR	29052	Identifier	i		28592	0					
ANR	29053	PrimaryExpression	0		28592	1					
ANR	29054	Condition	i < 16	85:32:2111:2116	28592	1	True				
ANR	29055	RelationalExpression	i < 16		28592	0		<			
ANR	29056	Identifier	i		28592	0					
ANR	29057	PrimaryExpression	16		28592	1					
ANR	29058	AssignmentExpression	i += 4	85:40:2119:2124	28592	2	True	+=			
ANR	29059	Identifier	i		28592	0					
ANR	29060	PrimaryExpression	4		28592	1					
ANR	29061	CompoundStatement		85:24:2065:2104	28592	3					
ANR	29062	IdentifierDeclStatement	int ref = sl -> ref_cache [ list ] [ scan8 [ i ] ] ;	87:24:2154:2193	28592	0	True				
ANR	29063	IdentifierDecl	ref = sl -> ref_cache [ list ] [ scan8 [ i ] ]		28592	0					
ANR	29064	IdentifierDeclType	int		28592	0					
ANR	29065	Identifier	ref		28592	1					
ANR	29066	AssignmentExpression	ref = sl -> ref_cache [ list ] [ scan8 [ i ] ]		28592	2		=			
ANR	29067	Identifier	ref		28592	0					
ANR	29068	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ i ] ]		28592	1					
ANR	29069	ArrayIndexing	sl -> ref_cache [ list ]		28592	0					
ANR	29070	PtrMemberAccess	sl -> ref_cache		28592	0					
ANR	29071	Identifier	sl		28592	0					
ANR	29072	Identifier	ref_cache		28592	1					
ANR	29073	Identifier	list		28592	1					
ANR	29074	ArrayIndexing	scan8 [ i ]		28592	1					
ANR	29075	Identifier	scan8		28592	0					
ANR	29076	Identifier	i		28592	1					
ANR	29077	IfStatement	if ( ref >= 0 )		28592	1					
ANR	29078	Condition	ref >= 0	89:28:2224:2231	28592	0	True				
ANR	29079	RelationalExpression	ref >= 0		28592	0		>=			
ANR	29080	Identifier	ref		28592	0					
ANR	29081	PrimaryExpression	0		28592	1					
ANR	29082	ExpressionStatement	"fill_rectangle ( & sl -> ref_cache [ list ] [ scan8 [ i ] ] , 2 , 2 , 8 , ( 16 + ref ) ^ ( sl -> mb_y & 1 ) , 1 )"	91:28:2263:2394	28592	1	True				
ANR	29083	CallExpression	"fill_rectangle ( & sl -> ref_cache [ list ] [ scan8 [ i ] ] , 2 , 2 , 8 , ( 16 + ref ) ^ ( sl -> mb_y & 1 ) , 1 )"		28592	0					
ANR	29084	Callee	fill_rectangle		28592	0					
ANR	29085	Identifier	fill_rectangle		28592	0					
ANR	29086	ArgumentList	& sl -> ref_cache [ list ] [ scan8 [ i ] ]		28592	1					
ANR	29087	Argument	& sl -> ref_cache [ list ] [ scan8 [ i ] ]		28592	0					
ANR	29088	UnaryOperationExpression	& sl -> ref_cache [ list ] [ scan8 [ i ] ]		28592	0					
ANR	29089	UnaryOperator	&		28592	0					
ANR	29090	ArrayIndexing	sl -> ref_cache [ list ] [ scan8 [ i ] ]		28592	1					
ANR	29091	ArrayIndexing	sl -> ref_cache [ list ]		28592	0					
ANR	29092	PtrMemberAccess	sl -> ref_cache		28592	0					
ANR	29093	Identifier	sl		28592	0					
ANR	29094	Identifier	ref_cache		28592	1					
ANR	29095	Identifier	list		28592	1					
ANR	29096	ArrayIndexing	scan8 [ i ]		28592	1					
ANR	29097	Identifier	scan8		28592	0					
ANR	29098	Identifier	i		28592	1					
ANR	29099	Argument	2		28592	1					
ANR	29100	PrimaryExpression	2		28592	0					
ANR	29101	Argument	2		28592	2					
ANR	29102	PrimaryExpression	2		28592	0					
ANR	29103	Argument	8		28592	3					
ANR	29104	PrimaryExpression	8		28592	0					
ANR	29105	Argument	( 16 + ref ) ^ ( sl -> mb_y & 1 )		28592	4					
ANR	29106	ExclusiveOrExpression	( 16 + ref ) ^ ( sl -> mb_y & 1 )		28592	0		^			
ANR	29107	AdditiveExpression	16 + ref		28592	0		+			
ANR	29108	PrimaryExpression	16		28592	0					
ANR	29109	Identifier	ref		28592	1					
ANR	29110	BitAndExpression	sl -> mb_y & 1		28592	1		&			
ANR	29111	PtrMemberAccess	sl -> mb_y		28592	0					
ANR	29112	Identifier	sl		28592	0					
ANR	29113	Identifier	mb_y		28592	1					
ANR	29114	PrimaryExpression	1		28592	1					
ANR	29115	Argument	1		28592	5					
ANR	29116	PrimaryExpression	1		28592	0					
ANR	29117	ElseStatement	else		28592	0					
ANR	29118	CompoundStatement		101:11:2387:2387	28592	0					
ANR	29119	ExpressionStatement	linesize = sl -> mb_linesize = sl -> linesize	105:8:2487:2532	28592	0	True				
ANR	29120	AssignmentExpression	linesize = sl -> mb_linesize = sl -> linesize		28592	0		=			
ANR	29121	Identifier	linesize		28592	0					
ANR	29122	AssignmentExpression	sl -> mb_linesize = sl -> linesize		28592	1		=			
ANR	29123	PtrMemberAccess	sl -> mb_linesize		28592	0					
ANR	29124	Identifier	sl		28592	0					
ANR	29125	Identifier	mb_linesize		28592	1					
ANR	29126	PtrMemberAccess	sl -> linesize		28592	1					
ANR	29127	Identifier	sl		28592	0					
ANR	29128	Identifier	linesize		28592	1					
ANR	29129	ExpressionStatement	uvlinesize = sl -> mb_uvlinesize = sl -> uvlinesize	107:8:2543:2590	28592	1	True				
ANR	29130	AssignmentExpression	uvlinesize = sl -> mb_uvlinesize = sl -> uvlinesize		28592	0		=			
ANR	29131	Identifier	uvlinesize		28592	0					
ANR	29132	AssignmentExpression	sl -> mb_uvlinesize = sl -> uvlinesize		28592	1		=			
ANR	29133	PtrMemberAccess	sl -> mb_uvlinesize		28592	0					
ANR	29134	Identifier	sl		28592	0					
ANR	29135	Identifier	mb_uvlinesize		28592	1					
ANR	29136	PtrMemberAccess	sl -> uvlinesize		28592	1					
ANR	29137	Identifier	sl		28592	0					
ANR	29138	Identifier	uvlinesize		28592	1					
ANR	29139	IfStatement	if ( ! SIMPLE && IS_INTRA_PCM ( mb_type ) )		28592	19					
ANR	29140	Condition	! SIMPLE && IS_INTRA_PCM ( mb_type )	115:8:2653:2684	28592	0	True				
ANR	29141	AndExpression	! SIMPLE && IS_INTRA_PCM ( mb_type )		28592	0		&&			
ANR	29142	UnaryOperationExpression	! SIMPLE		28592	0					
ANR	29143	UnaryOperator	!		28592	0					
ANR	29144	Identifier	SIMPLE		28592	1					
ANR	29145	CallExpression	IS_INTRA_PCM ( mb_type )		28592	1					
ANR	29146	Callee	IS_INTRA_PCM		28592	0					
ANR	29147	Identifier	IS_INTRA_PCM		28592	0					
ANR	29148	ArgumentList	mb_type		28592	1					
ANR	29149	Argument	mb_type		28592	0					
ANR	29150	Identifier	mb_type		28592	0					
ANR	29151	CompoundStatement		113:42:2598:2598	28592	1					
ANR	29152	IfStatement	if ( PIXEL_SHIFT )		28592	0					
ANR	29153	Condition	PIXEL_SHIFT	117:12:2702:2712	28592	0	True				
ANR	29154	Identifier	PIXEL_SHIFT		28592	0					
ANR	29155	CompoundStatement		121:12:2719:2735	28592	1					
ANR	29156	IdentifierDeclStatement	const int bit_depth = h -> sps . bit_depth_luma ;	119:12:2730:2773	28592	0	True				
ANR	29157	IdentifierDecl	bit_depth = h -> sps . bit_depth_luma		28592	0					
ANR	29158	IdentifierDeclType	const int		28592	0					
ANR	29159	Identifier	bit_depth		28592	1					
ANR	29160	AssignmentExpression	bit_depth = h -> sps . bit_depth_luma		28592	2		=			
ANR	29161	Identifier	bit_depth		28592	0					
ANR	29162	MemberAccess	h -> sps . bit_depth_luma		28592	1					
ANR	29163	PtrMemberAccess	h -> sps		28592	0					
ANR	29164	Identifier	h		28592	0					
ANR	29165	Identifier	sps		28592	1					
ANR	29166	Identifier	bit_depth_luma		28592	1					
ANR	29167	IdentifierDeclStatement	int j ;	121:12:2788:2793	28592	1	True				
ANR	29168	IdentifierDecl	j		28592	0					
ANR	29169	IdentifierDeclType	int		28592	0					
ANR	29170	Identifier	j		28592	1					
ANR	29171	IdentifierDeclStatement	GetBitContext gb ;	123:12:2808:2824	28592	2	True				
ANR	29172	IdentifierDecl	gb		28592	0					
ANR	29173	IdentifierDeclType	GetBitContext		28592	0					
ANR	29174	Identifier	gb		28592	1					
ANR	29175	ExpressionStatement	"init_get_bits ( & gb , sl -> intra_pcm_ptr , ff_h264_mb_sizes [ h -> sps . chroma_format_idc ] * bit_depth )"	125:12:2839:2959	28592	3	True				
ANR	29176	CallExpression	"init_get_bits ( & gb , sl -> intra_pcm_ptr , ff_h264_mb_sizes [ h -> sps . chroma_format_idc ] * bit_depth )"		28592	0					
ANR	29177	Callee	init_get_bits		28592	0					
ANR	29178	Identifier	init_get_bits		28592	0					
ANR	29179	ArgumentList	& gb		28592	1					
ANR	29180	Argument	& gb		28592	0					
ANR	29181	UnaryOperationExpression	& gb		28592	0					
ANR	29182	UnaryOperator	&		28592	0					
ANR	29183	Identifier	gb		28592	1					
ANR	29184	Argument	sl -> intra_pcm_ptr		28592	1					
ANR	29185	PtrMemberAccess	sl -> intra_pcm_ptr		28592	0					
ANR	29186	Identifier	sl		28592	0					
ANR	29187	Identifier	intra_pcm_ptr		28592	1					
ANR	29188	Argument	ff_h264_mb_sizes [ h -> sps . chroma_format_idc ] * bit_depth		28592	2					
ANR	29189	MultiplicativeExpression	ff_h264_mb_sizes [ h -> sps . chroma_format_idc ] * bit_depth		28592	0		*			
ANR	29190	ArrayIndexing	ff_h264_mb_sizes [ h -> sps . chroma_format_idc ]		28592	0					
ANR	29191	Identifier	ff_h264_mb_sizes		28592	0					
ANR	29192	MemberAccess	h -> sps . chroma_format_idc		28592	1					
ANR	29193	PtrMemberAccess	h -> sps		28592	0					
ANR	29194	Identifier	h		28592	0					
ANR	29195	Identifier	sps		28592	1					
ANR	29196	Identifier	chroma_format_idc		28592	1					
ANR	29197	Identifier	bit_depth		28592	1					
ANR	29198	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		28592	4					
ANR	29199	ForInit	i = 0 ;	131:17:2981:2986	28592	0	True				
ANR	29200	AssignmentExpression	i = 0		28592	0		=			
ANR	29201	Identifier	i		28592	0					
ANR	29202	PrimaryExpression	0		28592	1					
ANR	29203	Condition	i < 16	131:24:2988:2993	28592	1	True				
ANR	29204	RelationalExpression	i < 16		28592	0		<			
ANR	29205	Identifier	i		28592	0					
ANR	29206	PrimaryExpression	16		28592	1					
ANR	29207	PostIncDecOperationExpression	i ++	131:32:2996:2998	28592	2	True				
ANR	29208	Identifier	i		28592	0					
ANR	29209	IncDec	++		28592	1					
ANR	29210	CompoundStatement		131:16:2931:2984	28592	3					
ANR	29211	IdentifierDeclStatement	uint16_t * tmp_y = ( uint16_t * ) ( dest_y + i * linesize ) ;	133:16:3020:3073	28592	0	True				
ANR	29212	IdentifierDecl	* tmp_y = ( uint16_t * ) ( dest_y + i * linesize )		28592	0					
ANR	29213	IdentifierDeclType	uint16_t *		28592	0					
ANR	29214	Identifier	tmp_y		28592	1					
ANR	29215	AssignmentExpression	* tmp_y = ( uint16_t * ) ( dest_y + i * linesize )		28592	2		=			
ANR	29216	Identifier	tmp_y		28592	0					
ANR	29217	CastExpression	( uint16_t * ) ( dest_y + i * linesize )		28592	1					
ANR	29218	CastTarget	uint16_t *		28592	0					
ANR	29219	AdditiveExpression	dest_y + i * linesize		28592	1		+			
ANR	29220	Identifier	dest_y		28592	0					
ANR	29221	MultiplicativeExpression	i * linesize		28592	1		*			
ANR	29222	Identifier	i		28592	0					
ANR	29223	Identifier	linesize		28592	1					
ANR	29224	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		28592	1					
ANR	29225	ForInit	j = 0 ;	135:21:3097:3102	28592	0	True				
ANR	29226	AssignmentExpression	j = 0		28592	0		=			
ANR	29227	Identifier	j		28592	0					
ANR	29228	PrimaryExpression	0		28592	1					
ANR	29229	Condition	j < 16	135:28:3104:3109	28592	1	True				
ANR	29230	RelationalExpression	j < 16		28592	0		<			
ANR	29231	Identifier	j		28592	0					
ANR	29232	PrimaryExpression	16		28592	1					
ANR	29233	PostIncDecOperationExpression	j ++	135:36:3112:3114	28592	2	True				
ANR	29234	Identifier	j		28592	0					
ANR	29235	IncDec	++		28592	1					
ANR	29236	ExpressionStatement	"tmp_y [ j ] = get_bits ( & gb , bit_depth )"	137:20:3138:3173	28592	3	True				
ANR	29237	AssignmentExpression	"tmp_y [ j ] = get_bits ( & gb , bit_depth )"		28592	0		=			
ANR	29238	ArrayIndexing	tmp_y [ j ]		28592	0					
ANR	29239	Identifier	tmp_y		28592	0					
ANR	29240	Identifier	j		28592	1					
ANR	29241	CallExpression	"get_bits ( & gb , bit_depth )"		28592	1					
ANR	29242	Callee	get_bits		28592	0					
ANR	29243	Identifier	get_bits		28592	0					
ANR	29244	ArgumentList	& gb		28592	1					
ANR	29245	Argument	& gb		28592	0					
ANR	29246	UnaryOperationExpression	& gb		28592	0					
ANR	29247	UnaryOperator	&		28592	0					
ANR	29248	Identifier	gb		28592	1					
ANR	29249	Argument	bit_depth		28592	1					
ANR	29250	Identifier	bit_depth		28592	0					
ANR	29251	IfStatement	if ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY ) )		28592	5					
ANR	29252	Condition	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )	141:16:3207:3264	28592	0	True				
ANR	29253	OrExpression	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )		28592	0		||			
ANR	29254	Identifier	SIMPLE		28592	0					
ANR	29255	OrExpression	! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )		28592	1		||			
ANR	29256	UnaryOperationExpression	! CONFIG_GRAY		28592	0					
ANR	29257	UnaryOperator	!		28592	0					
ANR	29258	Identifier	CONFIG_GRAY		28592	1					
ANR	29259	UnaryOperationExpression	! ( h -> flags & AV_CODEC_FLAG_GRAY )		28592	1					
ANR	29260	UnaryOperator	!		28592	0					
ANR	29261	BitAndExpression	h -> flags & AV_CODEC_FLAG_GRAY		28592	1		&			
ANR	29262	PtrMemberAccess	h -> flags		28592	0					
ANR	29263	Identifier	h		28592	0					
ANR	29264	Identifier	flags		28592	1					
ANR	29265	Identifier	AV_CODEC_FLAG_GRAY		28592	1					
ANR	29266	CompoundStatement		139:76:3178:3178	28592	1					
ANR	29267	IfStatement	if ( ! h -> sps . chroma_format_idc )		28592	0					
ANR	29268	Condition	! h -> sps . chroma_format_idc	143:20:3290:3314	28592	0	True				
ANR	29269	UnaryOperationExpression	! h -> sps . chroma_format_idc		28592	0					
ANR	29270	UnaryOperator	!		28592	0					
ANR	29271	MemberAccess	h -> sps . chroma_format_idc		28592	1					
ANR	29272	PtrMemberAccess	h -> sps		28592	0					
ANR	29273	Identifier	h		28592	0					
ANR	29274	Identifier	sps		28592	1					
ANR	29275	Identifier	chroma_format_idc		28592	1					
ANR	29276	CompoundStatement		141:47:3228:3228	28592	1					
ANR	29277	ForStatement	for ( i = 0 ; i < block_h ; i ++ )		28592	0					
ANR	29278	ForInit	i = 0 ;	145:25:3345:3350	28592	0	True				
ANR	29279	AssignmentExpression	i = 0		28592	0		=			
ANR	29280	Identifier	i		28592	0					
ANR	29281	PrimaryExpression	0		28592	1					
ANR	29282	Condition	i < block_h	145:32:3352:3362	28592	1	True				
ANR	29283	RelationalExpression	i < block_h		28592	0		<			
ANR	29284	Identifier	i		28592	0					
ANR	29285	Identifier	block_h		28592	1					
ANR	29286	PostIncDecOperationExpression	i ++	145:45:3365:3367	28592	2	True				
ANR	29287	Identifier	i		28592	0					
ANR	29288	IncDec	++		28592	1					
ANR	29289	CompoundStatement		145:24:3308:3365	28592	3					
ANR	29290	IdentifierDeclStatement	uint16_t * tmp_cb = ( uint16_t * ) ( dest_cb + i * uvlinesize ) ;	147:24:3397:3454	28592	0	True				
ANR	29291	IdentifierDecl	* tmp_cb = ( uint16_t * ) ( dest_cb + i * uvlinesize )		28592	0					
ANR	29292	IdentifierDeclType	uint16_t *		28592	0					
ANR	29293	Identifier	tmp_cb		28592	1					
ANR	29294	AssignmentExpression	* tmp_cb = ( uint16_t * ) ( dest_cb + i * uvlinesize )		28592	2		=			
ANR	29295	Identifier	tmp_cb		28592	0					
ANR	29296	CastExpression	( uint16_t * ) ( dest_cb + i * uvlinesize )		28592	1					
ANR	29297	CastTarget	uint16_t *		28592	0					
ANR	29298	AdditiveExpression	dest_cb + i * uvlinesize		28592	1		+			
ANR	29299	Identifier	dest_cb		28592	0					
ANR	29300	MultiplicativeExpression	i * uvlinesize		28592	1		*			
ANR	29301	Identifier	i		28592	0					
ANR	29302	Identifier	uvlinesize		28592	1					
ANR	29303	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		28592	1					
ANR	29304	ForInit	j = 0 ;	149:29:3486:3491	28592	0	True				
ANR	29305	AssignmentExpression	j = 0		28592	0		=			
ANR	29306	Identifier	j		28592	0					
ANR	29307	PrimaryExpression	0		28592	1					
ANR	29308	Condition	j < 8	149:36:3493:3497	28592	1	True				
ANR	29309	RelationalExpression	j < 8		28592	0		<			
ANR	29310	Identifier	j		28592	0					
ANR	29311	PrimaryExpression	8		28592	1					
ANR	29312	PostIncDecOperationExpression	j ++	149:43:3500:3502	28592	2	True				
ANR	29313	Identifier	j		28592	0					
ANR	29314	IncDec	++		28592	1					
ANR	29315	ExpressionStatement	tmp_cb [ j ] = 1 << ( bit_depth - 1 )	151:28:3534:3566	28592	3	True				
ANR	29316	AssignmentExpression	tmp_cb [ j ] = 1 << ( bit_depth - 1 )		28592	0		=			
ANR	29317	ArrayIndexing	tmp_cb [ j ]		28592	0					
ANR	29318	Identifier	tmp_cb		28592	0					
ANR	29319	Identifier	j		28592	1					
ANR	29320	ShiftExpression	1 << ( bit_depth - 1 )		28592	1		<<			
ANR	29321	PrimaryExpression	1		28592	0					
ANR	29322	AdditiveExpression	bit_depth - 1		28592	1		-			
ANR	29323	Identifier	bit_depth		28592	0					
ANR	29324	PrimaryExpression	1		28592	1					
ANR	29325	ForStatement	for ( i = 0 ; i < block_h ; i ++ )		28592	1					
ANR	29326	ForInit	i = 0 ;	155:25:3617:3622	28592	0	True				
ANR	29327	AssignmentExpression	i = 0		28592	0		=			
ANR	29328	Identifier	i		28592	0					
ANR	29329	PrimaryExpression	0		28592	1					
ANR	29330	Condition	i < block_h	155:32:3624:3634	28592	1	True				
ANR	29331	RelationalExpression	i < block_h		28592	0		<			
ANR	29332	Identifier	i		28592	0					
ANR	29333	Identifier	block_h		28592	1					
ANR	29334	PostIncDecOperationExpression	i ++	155:45:3637:3639	28592	2	True				
ANR	29335	Identifier	i		28592	0					
ANR	29336	IncDec	++		28592	1					
ANR	29337	CompoundStatement		155:24:3580:3637	28592	3					
ANR	29338	IdentifierDeclStatement	uint16_t * tmp_cr = ( uint16_t * ) ( dest_cr + i * uvlinesize ) ;	157:24:3669:3726	28592	0	True				
ANR	29339	IdentifierDecl	* tmp_cr = ( uint16_t * ) ( dest_cr + i * uvlinesize )		28592	0					
ANR	29340	IdentifierDeclType	uint16_t *		28592	0					
ANR	29341	Identifier	tmp_cr		28592	1					
ANR	29342	AssignmentExpression	* tmp_cr = ( uint16_t * ) ( dest_cr + i * uvlinesize )		28592	2		=			
ANR	29343	Identifier	tmp_cr		28592	0					
ANR	29344	CastExpression	( uint16_t * ) ( dest_cr + i * uvlinesize )		28592	1					
ANR	29345	CastTarget	uint16_t *		28592	0					
ANR	29346	AdditiveExpression	dest_cr + i * uvlinesize		28592	1		+			
ANR	29347	Identifier	dest_cr		28592	0					
ANR	29348	MultiplicativeExpression	i * uvlinesize		28592	1		*			
ANR	29349	Identifier	i		28592	0					
ANR	29350	Identifier	uvlinesize		28592	1					
ANR	29351	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		28592	1					
ANR	29352	ForInit	j = 0 ;	159:29:3758:3763	28592	0	True				
ANR	29353	AssignmentExpression	j = 0		28592	0		=			
ANR	29354	Identifier	j		28592	0					
ANR	29355	PrimaryExpression	0		28592	1					
ANR	29356	Condition	j < 8	159:36:3765:3769	28592	1	True				
ANR	29357	RelationalExpression	j < 8		28592	0		<			
ANR	29358	Identifier	j		28592	0					
ANR	29359	PrimaryExpression	8		28592	1					
ANR	29360	PostIncDecOperationExpression	j ++	159:43:3772:3774	28592	2	True				
ANR	29361	Identifier	j		28592	0					
ANR	29362	IncDec	++		28592	1					
ANR	29363	ExpressionStatement	tmp_cr [ j ] = 1 << ( bit_depth - 1 )	161:28:3806:3838	28592	3	True				
ANR	29364	AssignmentExpression	tmp_cr [ j ] = 1 << ( bit_depth - 1 )		28592	0		=			
ANR	29365	ArrayIndexing	tmp_cr [ j ]		28592	0					
ANR	29366	Identifier	tmp_cr		28592	0					
ANR	29367	Identifier	j		28592	1					
ANR	29368	ShiftExpression	1 << ( bit_depth - 1 )		28592	1		<<			
ANR	29369	PrimaryExpression	1		28592	0					
ANR	29370	AdditiveExpression	bit_depth - 1		28592	1		-			
ANR	29371	Identifier	bit_depth		28592	0					
ANR	29372	PrimaryExpression	1		28592	1					
ANR	29373	ElseStatement	else		28592	0					
ANR	29374	CompoundStatement		163:23:3798:3798	28592	0					
ANR	29375	ForStatement	for ( i = 0 ; i < block_h ; i ++ )		28592	0					
ANR	29376	ForInit	i = 0 ;	167:25:3915:3920	28592	0	True				
ANR	29377	AssignmentExpression	i = 0		28592	0		=			
ANR	29378	Identifier	i		28592	0					
ANR	29379	PrimaryExpression	0		28592	1					
ANR	29380	Condition	i < block_h	167:32:3922:3932	28592	1	True				
ANR	29381	RelationalExpression	i < block_h		28592	0		<			
ANR	29382	Identifier	i		28592	0					
ANR	29383	Identifier	block_h		28592	1					
ANR	29384	PostIncDecOperationExpression	i ++	167:45:3935:3937	28592	2	True				
ANR	29385	Identifier	i		28592	0					
ANR	29386	IncDec	++		28592	1					
ANR	29387	CompoundStatement		167:24:3878:3935	28592	3					
ANR	29388	IdentifierDeclStatement	uint16_t * tmp_cb = ( uint16_t * ) ( dest_cb + i * uvlinesize ) ;	169:24:3967:4024	28592	0	True				
ANR	29389	IdentifierDecl	* tmp_cb = ( uint16_t * ) ( dest_cb + i * uvlinesize )		28592	0					
ANR	29390	IdentifierDeclType	uint16_t *		28592	0					
ANR	29391	Identifier	tmp_cb		28592	1					
ANR	29392	AssignmentExpression	* tmp_cb = ( uint16_t * ) ( dest_cb + i * uvlinesize )		28592	2		=			
ANR	29393	Identifier	tmp_cb		28592	0					
ANR	29394	CastExpression	( uint16_t * ) ( dest_cb + i * uvlinesize )		28592	1					
ANR	29395	CastTarget	uint16_t *		28592	0					
ANR	29396	AdditiveExpression	dest_cb + i * uvlinesize		28592	1		+			
ANR	29397	Identifier	dest_cb		28592	0					
ANR	29398	MultiplicativeExpression	i * uvlinesize		28592	1		*			
ANR	29399	Identifier	i		28592	0					
ANR	29400	Identifier	uvlinesize		28592	1					
ANR	29401	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		28592	1					
ANR	29402	ForInit	j = 0 ;	171:29:4056:4061	28592	0	True				
ANR	29403	AssignmentExpression	j = 0		28592	0		=			
ANR	29404	Identifier	j		28592	0					
ANR	29405	PrimaryExpression	0		28592	1					
ANR	29406	Condition	j < 8	171:36:4063:4067	28592	1	True				
ANR	29407	RelationalExpression	j < 8		28592	0		<			
ANR	29408	Identifier	j		28592	0					
ANR	29409	PrimaryExpression	8		28592	1					
ANR	29410	PostIncDecOperationExpression	j ++	171:43:4070:4072	28592	2	True				
ANR	29411	Identifier	j		28592	0					
ANR	29412	IncDec	++		28592	1					
ANR	29413	ExpressionStatement	"tmp_cb [ j ] = get_bits ( & gb , bit_depth )"	173:28:4104:4140	28592	3	True				
ANR	29414	AssignmentExpression	"tmp_cb [ j ] = get_bits ( & gb , bit_depth )"		28592	0		=			
ANR	29415	ArrayIndexing	tmp_cb [ j ]		28592	0					
ANR	29416	Identifier	tmp_cb		28592	0					
ANR	29417	Identifier	j		28592	1					
ANR	29418	CallExpression	"get_bits ( & gb , bit_depth )"		28592	1					
ANR	29419	Callee	get_bits		28592	0					
ANR	29420	Identifier	get_bits		28592	0					
ANR	29421	ArgumentList	& gb		28592	1					
ANR	29422	Argument	& gb		28592	0					
ANR	29423	UnaryOperationExpression	& gb		28592	0					
ANR	29424	UnaryOperator	&		28592	0					
ANR	29425	Identifier	gb		28592	1					
ANR	29426	Argument	bit_depth		28592	1					
ANR	29427	Identifier	bit_depth		28592	0					
ANR	29428	ForStatement	for ( i = 0 ; i < block_h ; i ++ )		28592	1					
ANR	29429	ForInit	i = 0 ;	177:25:4191:4196	28592	0	True				
ANR	29430	AssignmentExpression	i = 0		28592	0		=			
ANR	29431	Identifier	i		28592	0					
ANR	29432	PrimaryExpression	0		28592	1					
ANR	29433	Condition	i < block_h	177:32:4198:4208	28592	1	True				
ANR	29434	RelationalExpression	i < block_h		28592	0		<			
ANR	29435	Identifier	i		28592	0					
ANR	29436	Identifier	block_h		28592	1					
ANR	29437	PostIncDecOperationExpression	i ++	177:45:4211:4213	28592	2	True				
ANR	29438	Identifier	i		28592	0					
ANR	29439	IncDec	++		28592	1					
ANR	29440	CompoundStatement		177:24:4154:4211	28592	3					
ANR	29441	IdentifierDeclStatement	uint16_t * tmp_cr = ( uint16_t * ) ( dest_cr + i * uvlinesize ) ;	179:24:4243:4300	28592	0	True				
ANR	29442	IdentifierDecl	* tmp_cr = ( uint16_t * ) ( dest_cr + i * uvlinesize )		28592	0					
ANR	29443	IdentifierDeclType	uint16_t *		28592	0					
ANR	29444	Identifier	tmp_cr		28592	1					
ANR	29445	AssignmentExpression	* tmp_cr = ( uint16_t * ) ( dest_cr + i * uvlinesize )		28592	2		=			
ANR	29446	Identifier	tmp_cr		28592	0					
ANR	29447	CastExpression	( uint16_t * ) ( dest_cr + i * uvlinesize )		28592	1					
ANR	29448	CastTarget	uint16_t *		28592	0					
ANR	29449	AdditiveExpression	dest_cr + i * uvlinesize		28592	1		+			
ANR	29450	Identifier	dest_cr		28592	0					
ANR	29451	MultiplicativeExpression	i * uvlinesize		28592	1		*			
ANR	29452	Identifier	i		28592	0					
ANR	29453	Identifier	uvlinesize		28592	1					
ANR	29454	ForStatement	for ( j = 0 ; j < 8 ; j ++ )		28592	1					
ANR	29455	ForInit	j = 0 ;	181:29:4332:4337	28592	0	True				
ANR	29456	AssignmentExpression	j = 0		28592	0		=			
ANR	29457	Identifier	j		28592	0					
ANR	29458	PrimaryExpression	0		28592	1					
ANR	29459	Condition	j < 8	181:36:4339:4343	28592	1	True				
ANR	29460	RelationalExpression	j < 8		28592	0		<			
ANR	29461	Identifier	j		28592	0					
ANR	29462	PrimaryExpression	8		28592	1					
ANR	29463	PostIncDecOperationExpression	j ++	181:43:4346:4348	28592	2	True				
ANR	29464	Identifier	j		28592	0					
ANR	29465	IncDec	++		28592	1					
ANR	29466	ExpressionStatement	"tmp_cr [ j ] = get_bits ( & gb , bit_depth )"	183:28:4380:4416	28592	3	True				
ANR	29467	AssignmentExpression	"tmp_cr [ j ] = get_bits ( & gb , bit_depth )"		28592	0		=			
ANR	29468	ArrayIndexing	tmp_cr [ j ]		28592	0					
ANR	29469	Identifier	tmp_cr		28592	0					
ANR	29470	Identifier	j		28592	1					
ANR	29471	CallExpression	"get_bits ( & gb , bit_depth )"		28592	1					
ANR	29472	Callee	get_bits		28592	0					
ANR	29473	Identifier	get_bits		28592	0					
ANR	29474	ArgumentList	& gb		28592	1					
ANR	29475	Argument	& gb		28592	0					
ANR	29476	UnaryOperationExpression	& gb		28592	0					
ANR	29477	UnaryOperator	&		28592	0					
ANR	29478	Identifier	gb		28592	1					
ANR	29479	Argument	bit_depth		28592	1					
ANR	29480	Identifier	bit_depth		28592	0					
ANR	29481	ElseStatement	else		28592	0					
ANR	29482	CompoundStatement		189:15:4402:4402	28592	0					
ANR	29483	ForStatement	for ( i = 0 ; i < 16 ; i ++ )		28592	0					
ANR	29484	ForInit	i = 0 ;	193:17:4511:4516	28592	0	True				
ANR	29485	AssignmentExpression	i = 0		28592	0		=			
ANR	29486	Identifier	i		28592	0					
ANR	29487	PrimaryExpression	0		28592	1					
ANR	29488	Condition	i < 16	193:24:4518:4523	28592	1	True				
ANR	29489	RelationalExpression	i < 16		28592	0		<			
ANR	29490	Identifier	i		28592	0					
ANR	29491	PrimaryExpression	16		28592	1					
ANR	29492	PostIncDecOperationExpression	i ++	193:32:4526:4528	28592	2	True				
ANR	29493	Identifier	i		28592	0					
ANR	29494	IncDec	++		28592	1					
ANR	29495	ExpressionStatement	"memcpy ( dest_y + i * linesize , sl -> intra_pcm_ptr + i * 16 , 16 )"	195:16:4548:4609	28592	3	True				
ANR	29496	CallExpression	"memcpy ( dest_y + i * linesize , sl -> intra_pcm_ptr + i * 16 , 16 )"		28592	0					
ANR	29497	Callee	memcpy		28592	0					
ANR	29498	Identifier	memcpy		28592	0					
ANR	29499	ArgumentList	dest_y + i * linesize		28592	1					
ANR	29500	Argument	dest_y + i * linesize		28592	0					
ANR	29501	AdditiveExpression	dest_y + i * linesize		28592	0		+			
ANR	29502	Identifier	dest_y		28592	0					
ANR	29503	MultiplicativeExpression	i * linesize		28592	1		*			
ANR	29504	Identifier	i		28592	0					
ANR	29505	Identifier	linesize		28592	1					
ANR	29506	Argument	sl -> intra_pcm_ptr + i * 16		28592	1					
ANR	29507	AdditiveExpression	sl -> intra_pcm_ptr + i * 16		28592	0		+			
ANR	29508	PtrMemberAccess	sl -> intra_pcm_ptr		28592	0					
ANR	29509	Identifier	sl		28592	0					
ANR	29510	Identifier	intra_pcm_ptr		28592	1					
ANR	29511	MultiplicativeExpression	i * 16		28592	1		*			
ANR	29512	Identifier	i		28592	0					
ANR	29513	PrimaryExpression	16		28592	1					
ANR	29514	Argument	16		28592	2					
ANR	29515	PrimaryExpression	16		28592	0					
ANR	29516	IfStatement	if ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY ) )		28592	1					
ANR	29517	Condition	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )	197:16:4628:4685	28592	0	True				
ANR	29518	OrExpression	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )		28592	0		||			
ANR	29519	Identifier	SIMPLE		28592	0					
ANR	29520	OrExpression	! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )		28592	1		||			
ANR	29521	UnaryOperationExpression	! CONFIG_GRAY		28592	0					
ANR	29522	UnaryOperator	!		28592	0					
ANR	29523	Identifier	CONFIG_GRAY		28592	1					
ANR	29524	UnaryOperationExpression	! ( h -> flags & AV_CODEC_FLAG_GRAY )		28592	1					
ANR	29525	UnaryOperator	!		28592	0					
ANR	29526	BitAndExpression	h -> flags & AV_CODEC_FLAG_GRAY		28592	1		&			
ANR	29527	PtrMemberAccess	h -> flags		28592	0					
ANR	29528	Identifier	h		28592	0					
ANR	29529	Identifier	flags		28592	1					
ANR	29530	Identifier	AV_CODEC_FLAG_GRAY		28592	1					
ANR	29531	CompoundStatement		195:76:4599:4599	28592	1					
ANR	29532	IfStatement	if ( ! h -> sps . chroma_format_idc )		28592	0					
ANR	29533	Condition	! h -> sps . chroma_format_idc	199:20:4711:4735	28592	0	True				
ANR	29534	UnaryOperationExpression	! h -> sps . chroma_format_idc		28592	0					
ANR	29535	UnaryOperator	!		28592	0					
ANR	29536	MemberAccess	h -> sps . chroma_format_idc		28592	1					
ANR	29537	PtrMemberAccess	h -> sps		28592	0					
ANR	29538	Identifier	h		28592	0					
ANR	29539	Identifier	sps		28592	1					
ANR	29540	Identifier	chroma_format_idc		28592	1					
ANR	29541	CompoundStatement		197:47:4649:4649	28592	1					
ANR	29542	ForStatement	for ( i = 0 ; i < block_h ; i ++ )		28592	0					
ANR	29543	ForInit	i = 0 ;	201:25:4766:4771	28592	0	True				
ANR	29544	AssignmentExpression	i = 0		28592	0		=			
ANR	29545	Identifier	i		28592	0					
ANR	29546	PrimaryExpression	0		28592	1					
ANR	29547	Condition	i < block_h	201:32:4773:4783	28592	1	True				
ANR	29548	RelationalExpression	i < block_h		28592	0		<			
ANR	29549	Identifier	i		28592	0					
ANR	29550	Identifier	block_h		28592	1					
ANR	29551	PostIncDecOperationExpression	i ++	201:45:4786:4788	28592	2	True				
ANR	29552	Identifier	i		28592	0					
ANR	29553	IncDec	++		28592	1					
ANR	29554	CompoundStatement		199:50:4702:4702	28592	3					
ANR	29555	ExpressionStatement	"memset ( dest_cb + i * uvlinesize , 128 , 8 )"	203:24:4818:4858	28592	0	True				
ANR	29556	CallExpression	"memset ( dest_cb + i * uvlinesize , 128 , 8 )"		28592	0					
ANR	29557	Callee	memset		28592	0					
ANR	29558	Identifier	memset		28592	0					
ANR	29559	ArgumentList	dest_cb + i * uvlinesize		28592	1					
ANR	29560	Argument	dest_cb + i * uvlinesize		28592	0					
ANR	29561	AdditiveExpression	dest_cb + i * uvlinesize		28592	0		+			
ANR	29562	Identifier	dest_cb		28592	0					
ANR	29563	MultiplicativeExpression	i * uvlinesize		28592	1		*			
ANR	29564	Identifier	i		28592	0					
ANR	29565	Identifier	uvlinesize		28592	1					
ANR	29566	Argument	128		28592	1					
ANR	29567	PrimaryExpression	128		28592	0					
ANR	29568	Argument	8		28592	2					
ANR	29569	PrimaryExpression	8		28592	0					
ANR	29570	ExpressionStatement	"memset ( dest_cr + i * uvlinesize , 128 , 8 )"	205:24:4885:4925	28592	1	True				
ANR	29571	CallExpression	"memset ( dest_cr + i * uvlinesize , 128 , 8 )"		28592	0					
ANR	29572	Callee	memset		28592	0					
ANR	29573	Identifier	memset		28592	0					
ANR	29574	ArgumentList	dest_cr + i * uvlinesize		28592	1					
ANR	29575	Argument	dest_cr + i * uvlinesize		28592	0					
ANR	29576	AdditiveExpression	dest_cr + i * uvlinesize		28592	0		+			
ANR	29577	Identifier	dest_cr		28592	0					
ANR	29578	MultiplicativeExpression	i * uvlinesize		28592	1		*			
ANR	29579	Identifier	i		28592	0					
ANR	29580	Identifier	uvlinesize		28592	1					
ANR	29581	Argument	128		28592	1					
ANR	29582	PrimaryExpression	128		28592	0					
ANR	29583	Argument	8		28592	2					
ANR	29584	PrimaryExpression	8		28592	0					
ANR	29585	ElseStatement	else		28592	0					
ANR	29586	CompoundStatement		211:20:4978:5039	28592	0					
ANR	29587	IdentifierDeclStatement	const uint8_t * src_cb = sl -> intra_pcm_ptr + 256 ;	211:20:4997:5044	28592	0	True				
ANR	29588	IdentifierDecl	* src_cb = sl -> intra_pcm_ptr + 256		28592	0					
ANR	29589	IdentifierDeclType	const uint8_t *		28592	0					
ANR	29590	Identifier	src_cb		28592	1					
ANR	29591	AssignmentExpression	* src_cb = sl -> intra_pcm_ptr + 256		28592	2		=			
ANR	29592	Identifier	src_cb		28592	0					
ANR	29593	AdditiveExpression	sl -> intra_pcm_ptr + 256		28592	1		+			
ANR	29594	PtrMemberAccess	sl -> intra_pcm_ptr		28592	0					
ANR	29595	Identifier	sl		28592	0					
ANR	29596	Identifier	intra_pcm_ptr		28592	1					
ANR	29597	PrimaryExpression	256		28592	1					
ANR	29598	IdentifierDeclStatement	const uint8_t * src_cr = sl -> intra_pcm_ptr + 256 + block_h * 8 ;	213:20:5067:5128	28592	1	True				
ANR	29599	IdentifierDecl	* src_cr = sl -> intra_pcm_ptr + 256 + block_h * 8		28592	0					
ANR	29600	IdentifierDeclType	const uint8_t *		28592	0					
ANR	29601	Identifier	src_cr		28592	1					
ANR	29602	AssignmentExpression	* src_cr = sl -> intra_pcm_ptr + 256 + block_h * 8		28592	2		=			
ANR	29603	Identifier	src_cr		28592	0					
ANR	29604	AdditiveExpression	sl -> intra_pcm_ptr + 256 + block_h * 8		28592	1		+			
ANR	29605	PtrMemberAccess	sl -> intra_pcm_ptr		28592	0					
ANR	29606	Identifier	sl		28592	0					
ANR	29607	Identifier	intra_pcm_ptr		28592	1					
ANR	29608	AdditiveExpression	256 + block_h * 8		28592	1		+			
ANR	29609	PrimaryExpression	256		28592	0					
ANR	29610	MultiplicativeExpression	block_h * 8		28592	1		*			
ANR	29611	Identifier	block_h		28592	0					
ANR	29612	PrimaryExpression	8		28592	1					
ANR	29613	ForStatement	for ( i = 0 ; i < block_h ; i ++ )		28592	2					
ANR	29614	ForInit	i = 0 ;	215:25:5156:5161	28592	0	True				
ANR	29615	AssignmentExpression	i = 0		28592	0		=			
ANR	29616	Identifier	i		28592	0					
ANR	29617	PrimaryExpression	0		28592	1					
ANR	29618	Condition	i < block_h	215:32:5163:5173	28592	1	True				
ANR	29619	RelationalExpression	i < block_h		28592	0		<			
ANR	29620	Identifier	i		28592	0					
ANR	29621	Identifier	block_h		28592	1					
ANR	29622	PostIncDecOperationExpression	i ++	215:45:5176:5178	28592	2	True				
ANR	29623	Identifier	i		28592	0					
ANR	29624	IncDec	++		28592	1					
ANR	29625	CompoundStatement		213:50:5092:5092	28592	3					
ANR	29626	ExpressionStatement	"memcpy ( dest_cb + i * uvlinesize , src_cb + i * 8 , 8 )"	217:24:5208:5259	28592	0	True				
ANR	29627	CallExpression	"memcpy ( dest_cb + i * uvlinesize , src_cb + i * 8 , 8 )"		28592	0					
ANR	29628	Callee	memcpy		28592	0					
ANR	29629	Identifier	memcpy		28592	0					
ANR	29630	ArgumentList	dest_cb + i * uvlinesize		28592	1					
ANR	29631	Argument	dest_cb + i * uvlinesize		28592	0					
ANR	29632	AdditiveExpression	dest_cb + i * uvlinesize		28592	0		+			
ANR	29633	Identifier	dest_cb		28592	0					
ANR	29634	MultiplicativeExpression	i * uvlinesize		28592	1		*			
ANR	29635	Identifier	i		28592	0					
ANR	29636	Identifier	uvlinesize		28592	1					
ANR	29637	Argument	src_cb + i * 8		28592	1					
ANR	29638	AdditiveExpression	src_cb + i * 8		28592	0		+			
ANR	29639	Identifier	src_cb		28592	0					
ANR	29640	MultiplicativeExpression	i * 8		28592	1		*			
ANR	29641	Identifier	i		28592	0					
ANR	29642	PrimaryExpression	8		28592	1					
ANR	29643	Argument	8		28592	2					
ANR	29644	PrimaryExpression	8		28592	0					
ANR	29645	ExpressionStatement	"memcpy ( dest_cr + i * uvlinesize , src_cr + i * 8 , 8 )"	219:24:5286:5337	28592	1	True				
ANR	29646	CallExpression	"memcpy ( dest_cr + i * uvlinesize , src_cr + i * 8 , 8 )"		28592	0					
ANR	29647	Callee	memcpy		28592	0					
ANR	29648	Identifier	memcpy		28592	0					
ANR	29649	ArgumentList	dest_cr + i * uvlinesize		28592	1					
ANR	29650	Argument	dest_cr + i * uvlinesize		28592	0					
ANR	29651	AdditiveExpression	dest_cr + i * uvlinesize		28592	0		+			
ANR	29652	Identifier	dest_cr		28592	0					
ANR	29653	MultiplicativeExpression	i * uvlinesize		28592	1		*			
ANR	29654	Identifier	i		28592	0					
ANR	29655	Identifier	uvlinesize		28592	1					
ANR	29656	Argument	src_cr + i * 8		28592	1					
ANR	29657	AdditiveExpression	src_cr + i * 8		28592	0		+			
ANR	29658	Identifier	src_cr		28592	0					
ANR	29659	MultiplicativeExpression	i * 8		28592	1		*			
ANR	29660	Identifier	i		28592	0					
ANR	29661	PrimaryExpression	8		28592	1					
ANR	29662	Argument	8		28592	2					
ANR	29663	PrimaryExpression	8		28592	0					
ANR	29664	ElseStatement	else		28592	0					
ANR	29665	CompoundStatement		227:11:5330:5330	28592	0					
ANR	29666	IfStatement	if ( IS_INTRA ( mb_type ) )		28592	0					
ANR	29667	Condition	IS_INTRA ( mb_type )	231:12:5434:5450	28592	0	True				
ANR	29668	CallExpression	IS_INTRA ( mb_type )		28592	0					
ANR	29669	Callee	IS_INTRA		28592	0					
ANR	29670	Identifier	IS_INTRA		28592	0					
ANR	29671	ArgumentList	mb_type		28592	1					
ANR	29672	Argument	mb_type		28592	0					
ANR	29673	Identifier	mb_type		28592	0					
ANR	29674	CompoundStatement		229:31:5364:5364	28592	1					
ANR	29675	IfStatement	if ( sl -> deblocking_filter )		28592	0					
ANR	29676	Condition	sl -> deblocking_filter	233:16:5472:5492	28592	0	True				
ANR	29677	PtrMemberAccess	sl -> deblocking_filter		28592	0					
ANR	29678	Identifier	sl		28592	0					
ANR	29679	Identifier	deblocking_filter		28592	1					
ANR	29680	ExpressionStatement	"xchg_mb_border ( h , sl , dest_y , dest_cb , dest_cr , linesize , uvlinesize , 1 , 0 , SIMPLE , PIXEL_SHIFT )"	235:16:5512:5640	28592	1	True				
ANR	29681	CallExpression	"xchg_mb_border ( h , sl , dest_y , dest_cb , dest_cr , linesize , uvlinesize , 1 , 0 , SIMPLE , PIXEL_SHIFT )"		28592	0					
ANR	29682	Callee	xchg_mb_border		28592	0					
ANR	29683	Identifier	xchg_mb_border		28592	0					
ANR	29684	ArgumentList	h		28592	1					
ANR	29685	Argument	h		28592	0					
ANR	29686	Identifier	h		28592	0					
ANR	29687	Argument	sl		28592	1					
ANR	29688	Identifier	sl		28592	0					
ANR	29689	Argument	dest_y		28592	2					
ANR	29690	Identifier	dest_y		28592	0					
ANR	29691	Argument	dest_cb		28592	3					
ANR	29692	Identifier	dest_cb		28592	0					
ANR	29693	Argument	dest_cr		28592	4					
ANR	29694	Identifier	dest_cr		28592	0					
ANR	29695	Argument	linesize		28592	5					
ANR	29696	Identifier	linesize		28592	0					
ANR	29697	Argument	uvlinesize		28592	6					
ANR	29698	Identifier	uvlinesize		28592	0					
ANR	29699	Argument	1		28592	7					
ANR	29700	PrimaryExpression	1		28592	0					
ANR	29701	Argument	0		28592	8					
ANR	29702	PrimaryExpression	0		28592	0					
ANR	29703	Argument	SIMPLE		28592	9					
ANR	29704	Identifier	SIMPLE		28592	0					
ANR	29705	Argument	PIXEL_SHIFT		28592	10					
ANR	29706	Identifier	PIXEL_SHIFT		28592	0					
ANR	29707	IfStatement	if ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY ) )		28592	1					
ANR	29708	Condition	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )	241:16:5661:5718	28592	0	True				
ANR	29709	OrExpression	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )		28592	0		||			
ANR	29710	Identifier	SIMPLE		28592	0					
ANR	29711	OrExpression	! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )		28592	1		||			
ANR	29712	UnaryOperationExpression	! CONFIG_GRAY		28592	0					
ANR	29713	UnaryOperator	!		28592	0					
ANR	29714	Identifier	CONFIG_GRAY		28592	1					
ANR	29715	UnaryOperationExpression	! ( h -> flags & AV_CODEC_FLAG_GRAY )		28592	1					
ANR	29716	UnaryOperator	!		28592	0					
ANR	29717	BitAndExpression	h -> flags & AV_CODEC_FLAG_GRAY		28592	1		&			
ANR	29718	PtrMemberAccess	h -> flags		28592	0					
ANR	29719	Identifier	h		28592	0					
ANR	29720	Identifier	flags		28592	1					
ANR	29721	Identifier	AV_CODEC_FLAG_GRAY		28592	1					
ANR	29722	CompoundStatement		239:76:5632:5632	28592	1					
ANR	29723	ExpressionStatement	"h -> hpc . pred8x8 [ sl -> chroma_pred_mode ] ( dest_cb , uvlinesize )"	243:16:5740:5797	28592	0	True				
ANR	29724	CallExpression	"h -> hpc . pred8x8 [ sl -> chroma_pred_mode ] ( dest_cb , uvlinesize )"		28592	0					
ANR	29725	Callee	h -> hpc . pred8x8 [ sl -> chroma_pred_mode ]		28592	0					
ANR	29726	ArrayIndexing	h -> hpc . pred8x8 [ sl -> chroma_pred_mode ]		28592	0					
ANR	29727	MemberAccess	h -> hpc . pred8x8		28592	0					
ANR	29728	PtrMemberAccess	h -> hpc		28592	0					
ANR	29729	Identifier	h		28592	0					
ANR	29730	Identifier	hpc		28592	1					
ANR	29731	Identifier	pred8x8		28592	1					
ANR	29732	PtrMemberAccess	sl -> chroma_pred_mode		28592	1					
ANR	29733	Identifier	sl		28592	0					
ANR	29734	Identifier	chroma_pred_mode		28592	1					
ANR	29735	ArgumentList	dest_cb		28592	1					
ANR	29736	Argument	dest_cb		28592	0					
ANR	29737	Identifier	dest_cb		28592	0					
ANR	29738	Argument	uvlinesize		28592	1					
ANR	29739	Identifier	uvlinesize		28592	0					
ANR	29740	ExpressionStatement	"h -> hpc . pred8x8 [ sl -> chroma_pred_mode ] ( dest_cr , uvlinesize )"	245:16:5816:5873	28592	1	True				
ANR	29741	CallExpression	"h -> hpc . pred8x8 [ sl -> chroma_pred_mode ] ( dest_cr , uvlinesize )"		28592	0					
ANR	29742	Callee	h -> hpc . pred8x8 [ sl -> chroma_pred_mode ]		28592	0					
ANR	29743	ArrayIndexing	h -> hpc . pred8x8 [ sl -> chroma_pred_mode ]		28592	0					
ANR	29744	MemberAccess	h -> hpc . pred8x8		28592	0					
ANR	29745	PtrMemberAccess	h -> hpc		28592	0					
ANR	29746	Identifier	h		28592	0					
ANR	29747	Identifier	hpc		28592	1					
ANR	29748	Identifier	pred8x8		28592	1					
ANR	29749	PtrMemberAccess	sl -> chroma_pred_mode		28592	1					
ANR	29750	Identifier	sl		28592	0					
ANR	29751	Identifier	chroma_pred_mode		28592	1					
ANR	29752	ArgumentList	dest_cr		28592	1					
ANR	29753	Argument	dest_cr		28592	0					
ANR	29754	Identifier	dest_cr		28592	0					
ANR	29755	Argument	uvlinesize		28592	1					
ANR	29756	Identifier	uvlinesize		28592	0					
ANR	29757	ExpressionStatement	"hl_decode_mb_predict_luma ( h , sl , mb_type , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest_y , 0 )"	251:12:5905:6098	28592	2	True				
ANR	29758	CallExpression	"hl_decode_mb_predict_luma ( h , sl , mb_type , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest_y , 0 )"		28592	0					
ANR	29759	Callee	hl_decode_mb_predict_luma		28592	0					
ANR	29760	Identifier	hl_decode_mb_predict_luma		28592	0					
ANR	29761	ArgumentList	h		28592	1					
ANR	29762	Argument	h		28592	0					
ANR	29763	Identifier	h		28592	0					
ANR	29764	Argument	sl		28592	1					
ANR	29765	Identifier	sl		28592	0					
ANR	29766	Argument	mb_type		28592	2					
ANR	29767	Identifier	mb_type		28592	0					
ANR	29768	Argument	SIMPLE		28592	3					
ANR	29769	Identifier	SIMPLE		28592	0					
ANR	29770	Argument	transform_bypass		28592	4					
ANR	29771	Identifier	transform_bypass		28592	0					
ANR	29772	Argument	PIXEL_SHIFT		28592	5					
ANR	29773	Identifier	PIXEL_SHIFT		28592	0					
ANR	29774	Argument	block_offset		28592	6					
ANR	29775	Identifier	block_offset		28592	0					
ANR	29776	Argument	linesize		28592	7					
ANR	29777	Identifier	linesize		28592	0					
ANR	29778	Argument	dest_y		28592	8					
ANR	29779	Identifier	dest_y		28592	0					
ANR	29780	Argument	0		28592	9					
ANR	29781	PrimaryExpression	0		28592	0					
ANR	29782	IfStatement	if ( sl -> deblocking_filter )		28592	3					
ANR	29783	Condition	sl -> deblocking_filter	259:16:6119:6139	28592	0	True				
ANR	29784	PtrMemberAccess	sl -> deblocking_filter		28592	0					
ANR	29785	Identifier	sl		28592	0					
ANR	29786	Identifier	deblocking_filter		28592	1					
ANR	29787	ExpressionStatement	"xchg_mb_border ( h , sl , dest_y , dest_cb , dest_cr , linesize , uvlinesize , 0 , 0 , SIMPLE , PIXEL_SHIFT )"	261:16:6159:6287	28592	1	True				
ANR	29788	CallExpression	"xchg_mb_border ( h , sl , dest_y , dest_cb , dest_cr , linesize , uvlinesize , 0 , 0 , SIMPLE , PIXEL_SHIFT )"		28592	0					
ANR	29789	Callee	xchg_mb_border		28592	0					
ANR	29790	Identifier	xchg_mb_border		28592	0					
ANR	29791	ArgumentList	h		28592	1					
ANR	29792	Argument	h		28592	0					
ANR	29793	Identifier	h		28592	0					
ANR	29794	Argument	sl		28592	1					
ANR	29795	Identifier	sl		28592	0					
ANR	29796	Argument	dest_y		28592	2					
ANR	29797	Identifier	dest_y		28592	0					
ANR	29798	Argument	dest_cb		28592	3					
ANR	29799	Identifier	dest_cb		28592	0					
ANR	29800	Argument	dest_cr		28592	4					
ANR	29801	Identifier	dest_cr		28592	0					
ANR	29802	Argument	linesize		28592	5					
ANR	29803	Identifier	linesize		28592	0					
ANR	29804	Argument	uvlinesize		28592	6					
ANR	29805	Identifier	uvlinesize		28592	0					
ANR	29806	Argument	0		28592	7					
ANR	29807	PrimaryExpression	0		28592	0					
ANR	29808	Argument	0		28592	8					
ANR	29809	PrimaryExpression	0		28592	0					
ANR	29810	Argument	SIMPLE		28592	9					
ANR	29811	Identifier	SIMPLE		28592	0					
ANR	29812	Argument	PIXEL_SHIFT		28592	10					
ANR	29813	Identifier	PIXEL_SHIFT		28592	0					
ANR	29814	ElseStatement	else		28592	0					
ANR	29815	CompoundStatement		263:15:6216:6216	28592	0					
ANR	29816	IfStatement	if ( chroma422 )		28592	0					
ANR	29817	Condition	chroma422	267:16:6324:6332	28592	0	True				
ANR	29818	Identifier	chroma422		28592	0					
ANR	29819	CompoundStatement		265:27:6246:6246	28592	1					
ANR	29820	ExpressionStatement	"FUNC ( hl_motion_422 ) ( h , sl , dest_y , dest_cb , dest_cr , h -> qpel_put , h -> h264chroma . put_h264_chroma_pixels_tab , h -> qpel_avg , h -> h264chroma . avg_h264_chroma_pixels_tab , h -> h264dsp . weight_h264_pixels_tab , h -> h264dsp . biweight_h264_pixels_tab )"	269:16:6354:6712	28592	0	True				
ANR	29821	CallExpression	"FUNC ( hl_motion_422 ) ( h , sl , dest_y , dest_cb , dest_cr , h -> qpel_put , h -> h264chroma . put_h264_chroma_pixels_tab , h -> qpel_avg , h -> h264chroma . avg_h264_chroma_pixels_tab , h -> h264dsp . weight_h264_pixels_tab , h -> h264dsp . biweight_h264_pixels_tab )"		28592	0					
ANR	29822	Callee	FUNC ( hl_motion_422 )		28592	0					
ANR	29823	CallExpression	FUNC ( hl_motion_422 )		28592	0					
ANR	29824	Callee	FUNC		28592	0					
ANR	29825	Identifier	FUNC		28592	0					
ANR	29826	ArgumentList	hl_motion_422		28592	1					
ANR	29827	Argument	hl_motion_422		28592	0					
ANR	29828	Identifier	hl_motion_422		28592	0					
ANR	29829	ArgumentList	h		28592	1					
ANR	29830	Argument	h		28592	0					
ANR	29831	Identifier	h		28592	0					
ANR	29832	Argument	sl		28592	1					
ANR	29833	Identifier	sl		28592	0					
ANR	29834	Argument	dest_y		28592	2					
ANR	29835	Identifier	dest_y		28592	0					
ANR	29836	Argument	dest_cb		28592	3					
ANR	29837	Identifier	dest_cb		28592	0					
ANR	29838	Argument	dest_cr		28592	4					
ANR	29839	Identifier	dest_cr		28592	0					
ANR	29840	Argument	h -> qpel_put		28592	5					
ANR	29841	PtrMemberAccess	h -> qpel_put		28592	0					
ANR	29842	Identifier	h		28592	0					
ANR	29843	Identifier	qpel_put		28592	1					
ANR	29844	Argument	h -> h264chroma . put_h264_chroma_pixels_tab		28592	6					
ANR	29845	MemberAccess	h -> h264chroma . put_h264_chroma_pixels_tab		28592	0					
ANR	29846	PtrMemberAccess	h -> h264chroma		28592	0					
ANR	29847	Identifier	h		28592	0					
ANR	29848	Identifier	h264chroma		28592	1					
ANR	29849	Identifier	put_h264_chroma_pixels_tab		28592	1					
ANR	29850	Argument	h -> qpel_avg		28592	7					
ANR	29851	PtrMemberAccess	h -> qpel_avg		28592	0					
ANR	29852	Identifier	h		28592	0					
ANR	29853	Identifier	qpel_avg		28592	1					
ANR	29854	Argument	h -> h264chroma . avg_h264_chroma_pixels_tab		28592	8					
ANR	29855	MemberAccess	h -> h264chroma . avg_h264_chroma_pixels_tab		28592	0					
ANR	29856	PtrMemberAccess	h -> h264chroma		28592	0					
ANR	29857	Identifier	h		28592	0					
ANR	29858	Identifier	h264chroma		28592	1					
ANR	29859	Identifier	avg_h264_chroma_pixels_tab		28592	1					
ANR	29860	Argument	h -> h264dsp . weight_h264_pixels_tab		28592	9					
ANR	29861	MemberAccess	h -> h264dsp . weight_h264_pixels_tab		28592	0					
ANR	29862	PtrMemberAccess	h -> h264dsp		28592	0					
ANR	29863	Identifier	h		28592	0					
ANR	29864	Identifier	h264dsp		28592	1					
ANR	29865	Identifier	weight_h264_pixels_tab		28592	1					
ANR	29866	Argument	h -> h264dsp . biweight_h264_pixels_tab		28592	10					
ANR	29867	MemberAccess	h -> h264dsp . biweight_h264_pixels_tab		28592	0					
ANR	29868	PtrMemberAccess	h -> h264dsp		28592	0					
ANR	29869	Identifier	h		28592	0					
ANR	29870	Identifier	h264dsp		28592	1					
ANR	29871	Identifier	biweight_h264_pixels_tab		28592	1					
ANR	29872	ElseStatement	else		28592	0					
ANR	29873	CompoundStatement		277:19:6645:6645	28592	0					
ANR	29874	ExpressionStatement	"FUNC ( hl_motion_420 ) ( h , sl , dest_y , dest_cb , dest_cr , h -> qpel_put , h -> h264chroma . put_h264_chroma_pixels_tab , h -> qpel_avg , h -> h264chroma . avg_h264_chroma_pixels_tab , h -> h264dsp . weight_h264_pixels_tab , h -> h264dsp . biweight_h264_pixels_tab )"	281:16:6753:7111	28592	0	True				
ANR	29875	CallExpression	"FUNC ( hl_motion_420 ) ( h , sl , dest_y , dest_cb , dest_cr , h -> qpel_put , h -> h264chroma . put_h264_chroma_pixels_tab , h -> qpel_avg , h -> h264chroma . avg_h264_chroma_pixels_tab , h -> h264dsp . weight_h264_pixels_tab , h -> h264dsp . biweight_h264_pixels_tab )"		28592	0					
ANR	29876	Callee	FUNC ( hl_motion_420 )		28592	0					
ANR	29877	CallExpression	FUNC ( hl_motion_420 )		28592	0					
ANR	29878	Callee	FUNC		28592	0					
ANR	29879	Identifier	FUNC		28592	0					
ANR	29880	ArgumentList	hl_motion_420		28592	1					
ANR	29881	Argument	hl_motion_420		28592	0					
ANR	29882	Identifier	hl_motion_420		28592	0					
ANR	29883	ArgumentList	h		28592	1					
ANR	29884	Argument	h		28592	0					
ANR	29885	Identifier	h		28592	0					
ANR	29886	Argument	sl		28592	1					
ANR	29887	Identifier	sl		28592	0					
ANR	29888	Argument	dest_y		28592	2					
ANR	29889	Identifier	dest_y		28592	0					
ANR	29890	Argument	dest_cb		28592	3					
ANR	29891	Identifier	dest_cb		28592	0					
ANR	29892	Argument	dest_cr		28592	4					
ANR	29893	Identifier	dest_cr		28592	0					
ANR	29894	Argument	h -> qpel_put		28592	5					
ANR	29895	PtrMemberAccess	h -> qpel_put		28592	0					
ANR	29896	Identifier	h		28592	0					
ANR	29897	Identifier	qpel_put		28592	1					
ANR	29898	Argument	h -> h264chroma . put_h264_chroma_pixels_tab		28592	6					
ANR	29899	MemberAccess	h -> h264chroma . put_h264_chroma_pixels_tab		28592	0					
ANR	29900	PtrMemberAccess	h -> h264chroma		28592	0					
ANR	29901	Identifier	h		28592	0					
ANR	29902	Identifier	h264chroma		28592	1					
ANR	29903	Identifier	put_h264_chroma_pixels_tab		28592	1					
ANR	29904	Argument	h -> qpel_avg		28592	7					
ANR	29905	PtrMemberAccess	h -> qpel_avg		28592	0					
ANR	29906	Identifier	h		28592	0					
ANR	29907	Identifier	qpel_avg		28592	1					
ANR	29908	Argument	h -> h264chroma . avg_h264_chroma_pixels_tab		28592	8					
ANR	29909	MemberAccess	h -> h264chroma . avg_h264_chroma_pixels_tab		28592	0					
ANR	29910	PtrMemberAccess	h -> h264chroma		28592	0					
ANR	29911	Identifier	h		28592	0					
ANR	29912	Identifier	h264chroma		28592	1					
ANR	29913	Identifier	avg_h264_chroma_pixels_tab		28592	1					
ANR	29914	Argument	h -> h264dsp . weight_h264_pixels_tab		28592	9					
ANR	29915	MemberAccess	h -> h264dsp . weight_h264_pixels_tab		28592	0					
ANR	29916	PtrMemberAccess	h -> h264dsp		28592	0					
ANR	29917	Identifier	h		28592	0					
ANR	29918	Identifier	h264dsp		28592	1					
ANR	29919	Identifier	weight_h264_pixels_tab		28592	1					
ANR	29920	Argument	h -> h264dsp . biweight_h264_pixels_tab		28592	10					
ANR	29921	MemberAccess	h -> h264dsp . biweight_h264_pixels_tab		28592	0					
ANR	29922	PtrMemberAccess	h -> h264dsp		28592	0					
ANR	29923	Identifier	h		28592	0					
ANR	29924	Identifier	h264dsp		28592	1					
ANR	29925	Identifier	biweight_h264_pixels_tab		28592	1					
ANR	29926	ExpressionStatement	"hl_decode_mb_idct_luma ( h , sl , mb_type , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest_y , 0 )"	297:8:7150:7294	28592	1	True				
ANR	29927	CallExpression	"hl_decode_mb_idct_luma ( h , sl , mb_type , SIMPLE , transform_bypass , PIXEL_SHIFT , block_offset , linesize , dest_y , 0 )"		28592	0					
ANR	29928	Callee	hl_decode_mb_idct_luma		28592	0					
ANR	29929	Identifier	hl_decode_mb_idct_luma		28592	0					
ANR	29930	ArgumentList	h		28592	1					
ANR	29931	Argument	h		28592	0					
ANR	29932	Identifier	h		28592	0					
ANR	29933	Argument	sl		28592	1					
ANR	29934	Identifier	sl		28592	0					
ANR	29935	Argument	mb_type		28592	2					
ANR	29936	Identifier	mb_type		28592	0					
ANR	29937	Argument	SIMPLE		28592	3					
ANR	29938	Identifier	SIMPLE		28592	0					
ANR	29939	Argument	transform_bypass		28592	4					
ANR	29940	Identifier	transform_bypass		28592	0					
ANR	29941	Argument	PIXEL_SHIFT		28592	5					
ANR	29942	Identifier	PIXEL_SHIFT		28592	0					
ANR	29943	Argument	block_offset		28592	6					
ANR	29944	Identifier	block_offset		28592	0					
ANR	29945	Argument	linesize		28592	7					
ANR	29946	Identifier	linesize		28592	0					
ANR	29947	Argument	dest_y		28592	8					
ANR	29948	Identifier	dest_y		28592	0					
ANR	29949	Argument	0		28592	9					
ANR	29950	PrimaryExpression	0		28592	0					
ANR	29951	IfStatement	if ( ( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY ) ) && ( sl -> cbp & 0x30 ) )		28592	2					
ANR	29952	Condition	( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY ) ) && ( sl -> cbp & 0x30 )	303:12:7311:7403	28592	0	True				
ANR	29953	AndExpression	( SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY ) ) && ( sl -> cbp & 0x30 )		28592	0		&&			
ANR	29954	OrExpression	SIMPLE || ! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )		28592	0		||			
ANR	29955	Identifier	SIMPLE		28592	0					
ANR	29956	OrExpression	! CONFIG_GRAY || ! ( h -> flags & AV_CODEC_FLAG_GRAY )		28592	1		||			
ANR	29957	UnaryOperationExpression	! CONFIG_GRAY		28592	0					
ANR	29958	UnaryOperator	!		28592	0					
ANR	29959	Identifier	CONFIG_GRAY		28592	1					
ANR	29960	UnaryOperationExpression	! ( h -> flags & AV_CODEC_FLAG_GRAY )		28592	1					
ANR	29961	UnaryOperator	!		28592	0					
ANR	29962	BitAndExpression	h -> flags & AV_CODEC_FLAG_GRAY		28592	1		&			
ANR	29963	PtrMemberAccess	h -> flags		28592	0					
ANR	29964	Identifier	h		28592	0					
ANR	29965	Identifier	flags		28592	1					
ANR	29966	Identifier	AV_CODEC_FLAG_GRAY		28592	1					
ANR	29967	BitAndExpression	sl -> cbp & 0x30		28592	1		&			
ANR	29968	PtrMemberAccess	sl -> cbp		28592	0					
ANR	29969	Identifier	sl		28592	0					
ANR	29970	Identifier	cbp		28592	1					
ANR	29971	PrimaryExpression	0x30		28592	1					
ANR	29972	CompoundStatement		305:12:7332:7371	28592	1					
ANR	29973	IdentifierDeclStatement	"uint8_t * dest [ 2 ] = { dest_cb , dest_cr } ;"	307:12:7421:7460	28592	0	True				
ANR	29974	IdentifierDecl	"* dest [ 2 ] = { dest_cb , dest_cr }"		28592	0					
ANR	29975	IdentifierDeclType	uint8_t * [ 2 ]		28592	0					
ANR	29976	Identifier	dest		28592	1					
ANR	29977	PrimaryExpression	2		28592	2					
ANR	29978	AssignmentExpression	"* dest [ 2 ] = { dest_cb , dest_cr }"		28592	3		=			
ANR	29979	Identifier	dest		28592	0					
ANR	29980	InitializerList	dest_cb		28592	1					
ANR	29981	Identifier	dest_cb		28592	0					
ANR	29982	Identifier	dest_cr		28592	1					
ANR	29983	IfStatement	if ( transform_bypass )		28592	1					
ANR	29984	Condition	transform_bypass	309:16:7479:7494	28592	0	True				
ANR	29985	Identifier	transform_bypass		28592	0					
ANR	29986	CompoundStatement		307:34:7408:7408	28592	1					
ANR	29987	IfStatement	if ( IS_INTRA ( mb_type ) && h -> sps . profile_idc == 244 && ( sl -> chroma_pred_mode == VERT_PRED8x8 || sl -> chroma_pred_mode == HOR_PRED8x8 ) )		28592	0					
ANR	29988	Condition	IS_INTRA ( mb_type ) && h -> sps . profile_idc == 244 && ( sl -> chroma_pred_mode == VERT_PRED8x8 || sl -> chroma_pred_mode == HOR_PRED8x8 )	311:20:7520:7689	28592	0	True				
ANR	29989	AndExpression	IS_INTRA ( mb_type ) && h -> sps . profile_idc == 244 && ( sl -> chroma_pred_mode == VERT_PRED8x8 || sl -> chroma_pred_mode == HOR_PRED8x8 )		28592	0		&&			
ANR	29990	CallExpression	IS_INTRA ( mb_type )		28592	0					
ANR	29991	Callee	IS_INTRA		28592	0					
ANR	29992	Identifier	IS_INTRA		28592	0					
ANR	29993	ArgumentList	mb_type		28592	1					
ANR	29994	Argument	mb_type		28592	0					
ANR	29995	Identifier	mb_type		28592	0					
ANR	29996	AndExpression	h -> sps . profile_idc == 244 && ( sl -> chroma_pred_mode == VERT_PRED8x8 || sl -> chroma_pred_mode == HOR_PRED8x8 )		28592	1		&&			
ANR	29997	EqualityExpression	h -> sps . profile_idc == 244		28592	0		==			
ANR	29998	MemberAccess	h -> sps . profile_idc		28592	0					
ANR	29999	PtrMemberAccess	h -> sps		28592	0					
ANR	30000	Identifier	h		28592	0					
ANR	30001	Identifier	sps		28592	1					
ANR	30002	Identifier	profile_idc		28592	1					
ANR	30003	PrimaryExpression	244		28592	1					
ANR	30004	OrExpression	sl -> chroma_pred_mode == VERT_PRED8x8 || sl -> chroma_pred_mode == HOR_PRED8x8		28592	1		||			
ANR	30005	EqualityExpression	sl -> chroma_pred_mode == VERT_PRED8x8		28592	0		==			
ANR	30006	PtrMemberAccess	sl -> chroma_pred_mode		28592	0					
ANR	30007	Identifier	sl		28592	0					
ANR	30008	Identifier	chroma_pred_mode		28592	1					
ANR	30009	Identifier	VERT_PRED8x8		28592	1					
ANR	30010	EqualityExpression	sl -> chroma_pred_mode == HOR_PRED8x8		28592	1		==			
ANR	30011	PtrMemberAccess	sl -> chroma_pred_mode		28592	0					
ANR	30012	Identifier	sl		28592	0					
ANR	30013	Identifier	chroma_pred_mode		28592	1					
ANR	30014	Identifier	HOR_PRED8x8		28592	1					
ANR	30015	CompoundStatement		313:59:7603:7603	28592	1					
ANR	30016	ExpressionStatement	"h -> hpc . pred8x8_add [ sl -> chroma_pred_mode ] ( dest [ 0 ] , block_offset + 16 , sl -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT ) , uvlinesize )"	317:20:7715:8017	28592	0	True				
ANR	30017	CallExpression	"h -> hpc . pred8x8_add [ sl -> chroma_pred_mode ] ( dest [ 0 ] , block_offset + 16 , sl -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT ) , uvlinesize )"		28592	0					
ANR	30018	Callee	h -> hpc . pred8x8_add [ sl -> chroma_pred_mode ]		28592	0					
ANR	30019	ArrayIndexing	h -> hpc . pred8x8_add [ sl -> chroma_pred_mode ]		28592	0					
ANR	30020	MemberAccess	h -> hpc . pred8x8_add		28592	0					
ANR	30021	PtrMemberAccess	h -> hpc		28592	0					
ANR	30022	Identifier	h		28592	0					
ANR	30023	Identifier	hpc		28592	1					
ANR	30024	Identifier	pred8x8_add		28592	1					
ANR	30025	PtrMemberAccess	sl -> chroma_pred_mode		28592	1					
ANR	30026	Identifier	sl		28592	0					
ANR	30027	Identifier	chroma_pred_mode		28592	1					
ANR	30028	ArgumentList	dest [ 0 ]		28592	1					
ANR	30029	Argument	dest [ 0 ]		28592	0					
ANR	30030	ArrayIndexing	dest [ 0 ]		28592	0					
ANR	30031	Identifier	dest		28592	0					
ANR	30032	PrimaryExpression	0		28592	1					
ANR	30033	Argument	block_offset + 16		28592	1					
ANR	30034	AdditiveExpression	block_offset + 16		28592	0		+			
ANR	30035	Identifier	block_offset		28592	0					
ANR	30036	PrimaryExpression	16		28592	1					
ANR	30037	Argument	sl -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT )		28592	2					
ANR	30038	AdditiveExpression	sl -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT )		28592	0		+			
ANR	30039	PtrMemberAccess	sl -> mb		28592	0					
ANR	30040	Identifier	sl		28592	0					
ANR	30041	Identifier	mb		28592	1					
ANR	30042	ShiftExpression	16 * 16 * 1 << PIXEL_SHIFT		28592	1		<<			
ANR	30043	MultiplicativeExpression	16 * 16 * 1		28592	0		*			
ANR	30044	PrimaryExpression	16		28592	0					
ANR	30045	MultiplicativeExpression	16 * 1		28592	1		*			
ANR	30046	PrimaryExpression	16		28592	0					
ANR	30047	PrimaryExpression	1		28592	1					
ANR	30048	Identifier	PIXEL_SHIFT		28592	1					
ANR	30049	Argument	uvlinesize		28592	3					
ANR	30050	Identifier	uvlinesize		28592	0					
ANR	30051	ExpressionStatement	"h -> hpc . pred8x8_add [ sl -> chroma_pred_mode ] ( dest [ 1 ] , block_offset + 32 , sl -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT ) , uvlinesize )"	325:20:8040:8342	28592	1	True				
ANR	30052	CallExpression	"h -> hpc . pred8x8_add [ sl -> chroma_pred_mode ] ( dest [ 1 ] , block_offset + 32 , sl -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT ) , uvlinesize )"		28592	0					
ANR	30053	Callee	h -> hpc . pred8x8_add [ sl -> chroma_pred_mode ]		28592	0					
ANR	30054	ArrayIndexing	h -> hpc . pred8x8_add [ sl -> chroma_pred_mode ]		28592	0					
ANR	30055	MemberAccess	h -> hpc . pred8x8_add		28592	0					
ANR	30056	PtrMemberAccess	h -> hpc		28592	0					
ANR	30057	Identifier	h		28592	0					
ANR	30058	Identifier	hpc		28592	1					
ANR	30059	Identifier	pred8x8_add		28592	1					
ANR	30060	PtrMemberAccess	sl -> chroma_pred_mode		28592	1					
ANR	30061	Identifier	sl		28592	0					
ANR	30062	Identifier	chroma_pred_mode		28592	1					
ANR	30063	ArgumentList	dest [ 1 ]		28592	1					
ANR	30064	Argument	dest [ 1 ]		28592	0					
ANR	30065	ArrayIndexing	dest [ 1 ]		28592	0					
ANR	30066	Identifier	dest		28592	0					
ANR	30067	PrimaryExpression	1		28592	1					
ANR	30068	Argument	block_offset + 32		28592	1					
ANR	30069	AdditiveExpression	block_offset + 32		28592	0		+			
ANR	30070	Identifier	block_offset		28592	0					
ANR	30071	PrimaryExpression	32		28592	1					
ANR	30072	Argument	sl -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT )		28592	2					
ANR	30073	AdditiveExpression	sl -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT )		28592	0		+			
ANR	30074	PtrMemberAccess	sl -> mb		28592	0					
ANR	30075	Identifier	sl		28592	0					
ANR	30076	Identifier	mb		28592	1					
ANR	30077	ShiftExpression	16 * 16 * 2 << PIXEL_SHIFT		28592	1		<<			
ANR	30078	MultiplicativeExpression	16 * 16 * 2		28592	0		*			
ANR	30079	PrimaryExpression	16		28592	0					
ANR	30080	MultiplicativeExpression	16 * 2		28592	1		*			
ANR	30081	PrimaryExpression	16		28592	0					
ANR	30082	PrimaryExpression	2		28592	1					
ANR	30083	Identifier	PIXEL_SHIFT		28592	1					
ANR	30084	Argument	uvlinesize		28592	3					
ANR	30085	Identifier	uvlinesize		28592	0					
ANR	30086	ElseStatement	else		28592	0					
ANR	30087	CompoundStatement		331:23:8279:8279	28592	0					
ANR	30088	ExpressionStatement	idct_add = h -> h264dsp . h264_add_pixels4_clear	335:20:8391:8435	28592	0	True				
ANR	30089	AssignmentExpression	idct_add = h -> h264dsp . h264_add_pixels4_clear		28592	0		=			
ANR	30090	Identifier	idct_add		28592	0					
ANR	30091	MemberAccess	h -> h264dsp . h264_add_pixels4_clear		28592	1					
ANR	30092	PtrMemberAccess	h -> h264dsp		28592	0					
ANR	30093	Identifier	h		28592	0					
ANR	30094	Identifier	h264dsp		28592	1					
ANR	30095	Identifier	h264_add_pixels4_clear		28592	1					
ANR	30096	ForStatement	for ( j = 1 ; j < 3 ; j ++ )		28592	1					
ANR	30097	ForInit	j = 1 ;	337:25:8463:8468	28592	0	True				
ANR	30098	AssignmentExpression	j = 1		28592	0		=			
ANR	30099	Identifier	j		28592	0					
ANR	30100	PrimaryExpression	1		28592	1					
ANR	30101	Condition	j < 3	337:32:8470:8474	28592	1	True				
ANR	30102	RelationalExpression	j < 3		28592	0		<			
ANR	30103	Identifier	j		28592	0					
ANR	30104	PrimaryExpression	3		28592	1					
ANR	30105	PostIncDecOperationExpression	j ++	337:39:8477:8479	28592	2	True				
ANR	30106	Identifier	j		28592	0					
ANR	30107	IncDec	++		28592	1					
ANR	30108	CompoundStatement		335:44:8393:8393	28592	3					
ANR	30109	ForStatement	for ( i = j * 16 ; i < j * 16 + 4 ; i ++ )		28592	0					
ANR	30110	ForInit	i = j * 16 ;	339:29:8514:8524	28592	0	True				
ANR	30111	AssignmentExpression	i = j * 16		28592	0		=			
ANR	30112	Identifier	i		28592	0					
ANR	30113	MultiplicativeExpression	j * 16		28592	1		*			
ANR	30114	Identifier	j		28592	0					
ANR	30115	PrimaryExpression	16		28592	1					
ANR	30116	Condition	i < j * 16 + 4	339:41:8526:8539	28592	1	True				
ANR	30117	RelationalExpression	i < j * 16 + 4		28592	0		<			
ANR	30118	Identifier	i		28592	0					
ANR	30119	AdditiveExpression	j * 16 + 4		28592	1		+			
ANR	30120	MultiplicativeExpression	j * 16		28592	0		*			
ANR	30121	Identifier	j		28592	0					
ANR	30122	PrimaryExpression	16		28592	1					
ANR	30123	PrimaryExpression	4		28592	1					
ANR	30124	PostIncDecOperationExpression	i ++	339:57:8542:8544	28592	2	True				
ANR	30125	Identifier	i		28592	0					
ANR	30126	IncDec	++		28592	1					
ANR	30127	IfStatement	"if ( sl -> non_zero_count_cache [ scan8 [ i ] ] || dctcoef_get ( sl -> mb , PIXEL_SHIFT , i * 16 ) )"		28592	3					
ANR	30128	Condition	"sl -> non_zero_count_cache [ scan8 [ i ] ] || dctcoef_get ( sl -> mb , PIXEL_SHIFT , i * 16 )"	341:32:8580:8690	28592	0	True				
ANR	30129	OrExpression	"sl -> non_zero_count_cache [ scan8 [ i ] ] || dctcoef_get ( sl -> mb , PIXEL_SHIFT , i * 16 )"		28592	0		||			
ANR	30130	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ i ] ]		28592	0					
ANR	30131	PtrMemberAccess	sl -> non_zero_count_cache		28592	0					
ANR	30132	Identifier	sl		28592	0					
ANR	30133	Identifier	non_zero_count_cache		28592	1					
ANR	30134	ArrayIndexing	scan8 [ i ]		28592	1					
ANR	30135	Identifier	scan8		28592	0					
ANR	30136	Identifier	i		28592	1					
ANR	30137	CallExpression	"dctcoef_get ( sl -> mb , PIXEL_SHIFT , i * 16 )"		28592	1					
ANR	30138	Callee	dctcoef_get		28592	0					
ANR	30139	Identifier	dctcoef_get		28592	0					
ANR	30140	ArgumentList	sl -> mb		28592	1					
ANR	30141	Argument	sl -> mb		28592	0					
ANR	30142	PtrMemberAccess	sl -> mb		28592	0					
ANR	30143	Identifier	sl		28592	0					
ANR	30144	Identifier	mb		28592	1					
ANR	30145	Argument	PIXEL_SHIFT		28592	1					
ANR	30146	Identifier	PIXEL_SHIFT		28592	0					
ANR	30147	Argument	i * 16		28592	2					
ANR	30148	MultiplicativeExpression	i * 16		28592	0		*			
ANR	30149	Identifier	i		28592	0					
ANR	30150	PrimaryExpression	16		28592	1					
ANR	30151	ExpressionStatement	"idct_add ( dest [ j - 1 ] + block_offset [ i ] , sl -> mb + ( i * 16 << PIXEL_SHIFT ) , uvlinesize )"	345:32:8726:8895	28592	1	True				
ANR	30152	CallExpression	"idct_add ( dest [ j - 1 ] + block_offset [ i ] , sl -> mb + ( i * 16 << PIXEL_SHIFT ) , uvlinesize )"		28592	0					
ANR	30153	Callee	idct_add		28592	0					
ANR	30154	Identifier	idct_add		28592	0					
ANR	30155	ArgumentList	dest [ j - 1 ] + block_offset [ i ]		28592	1					
ANR	30156	Argument	dest [ j - 1 ] + block_offset [ i ]		28592	0					
ANR	30157	AdditiveExpression	dest [ j - 1 ] + block_offset [ i ]		28592	0		+			
ANR	30158	ArrayIndexing	dest [ j - 1 ]		28592	0					
ANR	30159	Identifier	dest		28592	0					
ANR	30160	AdditiveExpression	j - 1		28592	1		-			
ANR	30161	Identifier	j		28592	0					
ANR	30162	PrimaryExpression	1		28592	1					
ANR	30163	ArrayIndexing	block_offset [ i ]		28592	1					
ANR	30164	Identifier	block_offset		28592	0					
ANR	30165	Identifier	i		28592	1					
ANR	30166	Argument	sl -> mb + ( i * 16 << PIXEL_SHIFT )		28592	1					
ANR	30167	AdditiveExpression	sl -> mb + ( i * 16 << PIXEL_SHIFT )		28592	0		+			
ANR	30168	PtrMemberAccess	sl -> mb		28592	0					
ANR	30169	Identifier	sl		28592	0					
ANR	30170	Identifier	mb		28592	1					
ANR	30171	ShiftExpression	i * 16 << PIXEL_SHIFT		28592	1		<<			
ANR	30172	MultiplicativeExpression	i * 16		28592	0		*			
ANR	30173	Identifier	i		28592	0					
ANR	30174	PrimaryExpression	16		28592	1					
ANR	30175	Identifier	PIXEL_SHIFT		28592	1					
ANR	30176	Argument	uvlinesize		28592	2					
ANR	30177	Identifier	uvlinesize		28592	0					
ANR	30178	IfStatement	if ( chroma422 )		28592	1					
ANR	30179	Condition	chroma422	351:28:8926:8934	28592	0	True				
ANR	30180	Identifier	chroma422		28592	0					
ANR	30181	CompoundStatement		349:39:8848:8848	28592	1					
ANR	30182	ForStatement	for ( i = j * 16 + 4 ; i < j * 16 + 8 ; i ++ )		28592	0					
ANR	30183	ForInit	i = j * 16 + 4 ;	353:33:8973:8987	28592	0	True				
ANR	30184	AssignmentExpression	i = j * 16 + 4		28592	0		=			
ANR	30185	Identifier	i		28592	0					
ANR	30186	AdditiveExpression	j * 16 + 4		28592	1		+			
ANR	30187	MultiplicativeExpression	j * 16		28592	0		*			
ANR	30188	Identifier	j		28592	0					
ANR	30189	PrimaryExpression	16		28592	1					
ANR	30190	PrimaryExpression	4		28592	1					
ANR	30191	Condition	i < j * 16 + 8	353:49:8989:9002	28592	1	True				
ANR	30192	RelationalExpression	i < j * 16 + 8		28592	0		<			
ANR	30193	Identifier	i		28592	0					
ANR	30194	AdditiveExpression	j * 16 + 8		28592	1		+			
ANR	30195	MultiplicativeExpression	j * 16		28592	0		*			
ANR	30196	Identifier	j		28592	0					
ANR	30197	PrimaryExpression	16		28592	1					
ANR	30198	PrimaryExpression	8		28592	1					
ANR	30199	PostIncDecOperationExpression	i ++	353:65:9005:9007	28592	2	True				
ANR	30200	Identifier	i		28592	0					
ANR	30201	IncDec	++		28592	1					
ANR	30202	IfStatement	"if ( sl -> non_zero_count_cache [ scan8 [ i + 4 ] ] || dctcoef_get ( sl -> mb , PIXEL_SHIFT , i * 16 ) )"		28592	3					
ANR	30203	Condition	"sl -> non_zero_count_cache [ scan8 [ i + 4 ] ] || dctcoef_get ( sl -> mb , PIXEL_SHIFT , i * 16 )"	355:36:9047:9165	28592	0	True				
ANR	30204	OrExpression	"sl -> non_zero_count_cache [ scan8 [ i + 4 ] ] || dctcoef_get ( sl -> mb , PIXEL_SHIFT , i * 16 )"		28592	0		||			
ANR	30205	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ i + 4 ] ]		28592	0					
ANR	30206	PtrMemberAccess	sl -> non_zero_count_cache		28592	0					
ANR	30207	Identifier	sl		28592	0					
ANR	30208	Identifier	non_zero_count_cache		28592	1					
ANR	30209	ArrayIndexing	scan8 [ i + 4 ]		28592	1					
ANR	30210	Identifier	scan8		28592	0					
ANR	30211	AdditiveExpression	i + 4		28592	1		+			
ANR	30212	Identifier	i		28592	0					
ANR	30213	PrimaryExpression	4		28592	1					
ANR	30214	CallExpression	"dctcoef_get ( sl -> mb , PIXEL_SHIFT , i * 16 )"		28592	1					
ANR	30215	Callee	dctcoef_get		28592	0					
ANR	30216	Identifier	dctcoef_get		28592	0					
ANR	30217	ArgumentList	sl -> mb		28592	1					
ANR	30218	Argument	sl -> mb		28592	0					
ANR	30219	PtrMemberAccess	sl -> mb		28592	0					
ANR	30220	Identifier	sl		28592	0					
ANR	30221	Identifier	mb		28592	1					
ANR	30222	Argument	PIXEL_SHIFT		28592	1					
ANR	30223	Identifier	PIXEL_SHIFT		28592	0					
ANR	30224	Argument	i * 16		28592	2					
ANR	30225	MultiplicativeExpression	i * 16		28592	0		*			
ANR	30226	Identifier	i		28592	0					
ANR	30227	PrimaryExpression	16		28592	1					
ANR	30228	ExpressionStatement	"idct_add ( dest [ j - 1 ] + block_offset [ i + 4 ] , sl -> mb + ( i * 16 << PIXEL_SHIFT ) , uvlinesize )"	359:36:9205:9386	28592	1	True				
ANR	30229	CallExpression	"idct_add ( dest [ j - 1 ] + block_offset [ i + 4 ] , sl -> mb + ( i * 16 << PIXEL_SHIFT ) , uvlinesize )"		28592	0					
ANR	30230	Callee	idct_add		28592	0					
ANR	30231	Identifier	idct_add		28592	0					
ANR	30232	ArgumentList	dest [ j - 1 ] + block_offset [ i + 4 ]		28592	1					
ANR	30233	Argument	dest [ j - 1 ] + block_offset [ i + 4 ]		28592	0					
ANR	30234	AdditiveExpression	dest [ j - 1 ] + block_offset [ i + 4 ]		28592	0		+			
ANR	30235	ArrayIndexing	dest [ j - 1 ]		28592	0					
ANR	30236	Identifier	dest		28592	0					
ANR	30237	AdditiveExpression	j - 1		28592	1		-			
ANR	30238	Identifier	j		28592	0					
ANR	30239	PrimaryExpression	1		28592	1					
ANR	30240	ArrayIndexing	block_offset [ i + 4 ]		28592	1					
ANR	30241	Identifier	block_offset		28592	0					
ANR	30242	AdditiveExpression	i + 4		28592	1		+			
ANR	30243	Identifier	i		28592	0					
ANR	30244	PrimaryExpression	4		28592	1					
ANR	30245	Argument	sl -> mb + ( i * 16 << PIXEL_SHIFT )		28592	1					
ANR	30246	AdditiveExpression	sl -> mb + ( i * 16 << PIXEL_SHIFT )		28592	0		+			
ANR	30247	PtrMemberAccess	sl -> mb		28592	0					
ANR	30248	Identifier	sl		28592	0					
ANR	30249	Identifier	mb		28592	1					
ANR	30250	ShiftExpression	i * 16 << PIXEL_SHIFT		28592	1		<<			
ANR	30251	MultiplicativeExpression	i * 16		28592	0		*			
ANR	30252	Identifier	i		28592	0					
ANR	30253	PrimaryExpression	16		28592	1					
ANR	30254	Identifier	PIXEL_SHIFT		28592	1					
ANR	30255	Argument	uvlinesize		28592	2					
ANR	30256	Identifier	uvlinesize		28592	0					
ANR	30257	ElseStatement	else		28592	0					
ANR	30258	CompoundStatement		371:16:9407:9416	28592	0					
ANR	30259	IdentifierDeclStatement	int qp [ 2 ] ;	373:16:9496:9505	28592	0	True				
ANR	30260	IdentifierDecl	qp [ 2 ]		28592	0					
ANR	30261	IdentifierDeclType	int [ 2 ]		28592	0					
ANR	30262	Identifier	qp		28592	1					
ANR	30263	PrimaryExpression	2		28592	2					
ANR	30264	IfStatement	if ( chroma422 )		28592	1					
ANR	30265	Condition	chroma422	375:20:9528:9536	28592	0	True				
ANR	30266	Identifier	chroma422		28592	0					
ANR	30267	CompoundStatement		373:31:9450:9450	28592	1					
ANR	30268	ExpressionStatement	qp [ 0 ] = sl -> chroma_qp [ 0 ] + 3	377:20:9562:9590	28592	0	True				
ANR	30269	AssignmentExpression	qp [ 0 ] = sl -> chroma_qp [ 0 ] + 3		28592	0		=			
ANR	30270	ArrayIndexing	qp [ 0 ]		28592	0					
ANR	30271	Identifier	qp		28592	0					
ANR	30272	PrimaryExpression	0		28592	1					
ANR	30273	AdditiveExpression	sl -> chroma_qp [ 0 ] + 3		28592	1		+			
ANR	30274	ArrayIndexing	sl -> chroma_qp [ 0 ]		28592	0					
ANR	30275	PtrMemberAccess	sl -> chroma_qp		28592	0					
ANR	30276	Identifier	sl		28592	0					
ANR	30277	Identifier	chroma_qp		28592	1					
ANR	30278	PrimaryExpression	0		28592	1					
ANR	30279	PrimaryExpression	3		28592	1					
ANR	30280	ExpressionStatement	qp [ 1 ] = sl -> chroma_qp [ 1 ] + 3	379:20:9613:9641	28592	1	True				
ANR	30281	AssignmentExpression	qp [ 1 ] = sl -> chroma_qp [ 1 ] + 3		28592	0		=			
ANR	30282	ArrayIndexing	qp [ 1 ]		28592	0					
ANR	30283	Identifier	qp		28592	0					
ANR	30284	PrimaryExpression	1		28592	1					
ANR	30285	AdditiveExpression	sl -> chroma_qp [ 1 ] + 3		28592	1		+			
ANR	30286	ArrayIndexing	sl -> chroma_qp [ 1 ]		28592	0					
ANR	30287	PtrMemberAccess	sl -> chroma_qp		28592	0					
ANR	30288	Identifier	sl		28592	0					
ANR	30289	Identifier	chroma_qp		28592	1					
ANR	30290	PrimaryExpression	1		28592	1					
ANR	30291	PrimaryExpression	3		28592	1					
ANR	30292	ElseStatement	else		28592	0					
ANR	30293	CompoundStatement		379:23:9578:9578	28592	0					
ANR	30294	ExpressionStatement	qp [ 0 ] = sl -> chroma_qp [ 0 ]	383:20:9690:9714	28592	0	True				
ANR	30295	AssignmentExpression	qp [ 0 ] = sl -> chroma_qp [ 0 ]		28592	0		=			
ANR	30296	ArrayIndexing	qp [ 0 ]		28592	0					
ANR	30297	Identifier	qp		28592	0					
ANR	30298	PrimaryExpression	0		28592	1					
ANR	30299	ArrayIndexing	sl -> chroma_qp [ 0 ]		28592	1					
ANR	30300	PtrMemberAccess	sl -> chroma_qp		28592	0					
ANR	30301	Identifier	sl		28592	0					
ANR	30302	Identifier	chroma_qp		28592	1					
ANR	30303	PrimaryExpression	0		28592	1					
ANR	30304	ExpressionStatement	qp [ 1 ] = sl -> chroma_qp [ 1 ]	385:20:9737:9761	28592	1	True				
ANR	30305	AssignmentExpression	qp [ 1 ] = sl -> chroma_qp [ 1 ]		28592	0		=			
ANR	30306	ArrayIndexing	qp [ 1 ]		28592	0					
ANR	30307	Identifier	qp		28592	0					
ANR	30308	PrimaryExpression	1		28592	1					
ANR	30309	ArrayIndexing	sl -> chroma_qp [ 1 ]		28592	1					
ANR	30310	PtrMemberAccess	sl -> chroma_qp		28592	0					
ANR	30311	Identifier	sl		28592	0					
ANR	30312	Identifier	chroma_qp		28592	1					
ANR	30313	PrimaryExpression	1		28592	1					
ANR	30314	IfStatement	if ( sl -> non_zero_count_cache [ scan8 [ CHROMA_DC_BLOCK_INDEX + 0 ] ] )		28592	2					
ANR	30315	Condition	sl -> non_zero_count_cache [ scan8 [ CHROMA_DC_BLOCK_INDEX + 0 ] ]	389:20:9803:9860	28592	0	True				
ANR	30316	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ CHROMA_DC_BLOCK_INDEX + 0 ] ]		28592	0					
ANR	30317	PtrMemberAccess	sl -> non_zero_count_cache		28592	0					
ANR	30318	Identifier	sl		28592	0					
ANR	30319	Identifier	non_zero_count_cache		28592	1					
ANR	30320	ArrayIndexing	scan8 [ CHROMA_DC_BLOCK_INDEX + 0 ]		28592	1					
ANR	30321	Identifier	scan8		28592	0					
ANR	30322	AdditiveExpression	CHROMA_DC_BLOCK_INDEX + 0		28592	1		+			
ANR	30323	Identifier	CHROMA_DC_BLOCK_INDEX		28592	0					
ANR	30324	PrimaryExpression	0		28592	1					
ANR	30325	ExpressionStatement	"h -> h264dsp . h264_chroma_dc_dequant_idct ( sl -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT ) , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ qp [ 0 ] ] [ 0 ] )"	391:20:9884:10077	28592	1	True				
ANR	30326	CallExpression	"h -> h264dsp . h264_chroma_dc_dequant_idct ( sl -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT ) , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ qp [ 0 ] ] [ 0 ] )"		28592	0					
ANR	30327	Callee	h -> h264dsp . h264_chroma_dc_dequant_idct		28592	0					
ANR	30328	MemberAccess	h -> h264dsp . h264_chroma_dc_dequant_idct		28592	0					
ANR	30329	PtrMemberAccess	h -> h264dsp		28592	0					
ANR	30330	Identifier	h		28592	0					
ANR	30331	Identifier	h264dsp		28592	1					
ANR	30332	Identifier	h264_chroma_dc_dequant_idct		28592	1					
ANR	30333	ArgumentList	sl -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT )		28592	1					
ANR	30334	Argument	sl -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT )		28592	0					
ANR	30335	AdditiveExpression	sl -> mb + ( 16 * 16 * 1 << PIXEL_SHIFT )		28592	0		+			
ANR	30336	PtrMemberAccess	sl -> mb		28592	0					
ANR	30337	Identifier	sl		28592	0					
ANR	30338	Identifier	mb		28592	1					
ANR	30339	ShiftExpression	16 * 16 * 1 << PIXEL_SHIFT		28592	1		<<			
ANR	30340	MultiplicativeExpression	16 * 16 * 1		28592	0		*			
ANR	30341	PrimaryExpression	16		28592	0					
ANR	30342	MultiplicativeExpression	16 * 1		28592	1		*			
ANR	30343	PrimaryExpression	16		28592	0					
ANR	30344	PrimaryExpression	1		28592	1					
ANR	30345	Identifier	PIXEL_SHIFT		28592	1					
ANR	30346	Argument	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ qp [ 0 ] ] [ 0 ]		28592	1					
ANR	30347	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ qp [ 0 ] ] [ 0 ]		28592	0					
ANR	30348	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ] [ qp [ 0 ] ]		28592	0					
ANR	30349	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 1 : 4 ]		28592	0					
ANR	30350	PtrMemberAccess	h -> dequant4_coeff		28592	0					
ANR	30351	Identifier	h		28592	0					
ANR	30352	Identifier	dequant4_coeff		28592	1					
ANR	30353	ConditionalExpression	IS_INTRA ( mb_type ) ? 1 : 4		28592	1					
ANR	30354	Condition	IS_INTRA ( mb_type )		28592	0					
ANR	30355	CallExpression	IS_INTRA ( mb_type )		28592	0					
ANR	30356	Callee	IS_INTRA		28592	0					
ANR	30357	Identifier	IS_INTRA		28592	0					
ANR	30358	ArgumentList	mb_type		28592	1					
ANR	30359	Argument	mb_type		28592	0					
ANR	30360	Identifier	mb_type		28592	0					
ANR	30361	PrimaryExpression	1		28592	1					
ANR	30362	PrimaryExpression	4		28592	2					
ANR	30363	ArrayIndexing	qp [ 0 ]		28592	1					
ANR	30364	Identifier	qp		28592	0					
ANR	30365	PrimaryExpression	0		28592	1					
ANR	30366	PrimaryExpression	0		28592	1					
ANR	30367	IfStatement	if ( sl -> non_zero_count_cache [ scan8 [ CHROMA_DC_BLOCK_INDEX + 1 ] ] )		28592	3					
ANR	30368	Condition	sl -> non_zero_count_cache [ scan8 [ CHROMA_DC_BLOCK_INDEX + 1 ] ]	395:20:10100:10157	28592	0	True				
ANR	30369	ArrayIndexing	sl -> non_zero_count_cache [ scan8 [ CHROMA_DC_BLOCK_INDEX + 1 ] ]		28592	0					
ANR	30370	PtrMemberAccess	sl -> non_zero_count_cache		28592	0					
ANR	30371	Identifier	sl		28592	0					
ANR	30372	Identifier	non_zero_count_cache		28592	1					
ANR	30373	ArrayIndexing	scan8 [ CHROMA_DC_BLOCK_INDEX + 1 ]		28592	1					
ANR	30374	Identifier	scan8		28592	0					
ANR	30375	AdditiveExpression	CHROMA_DC_BLOCK_INDEX + 1		28592	1		+			
ANR	30376	Identifier	CHROMA_DC_BLOCK_INDEX		28592	0					
ANR	30377	PrimaryExpression	1		28592	1					
ANR	30378	ExpressionStatement	"h -> h264dsp . h264_chroma_dc_dequant_idct ( sl -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT ) , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ qp [ 1 ] ] [ 0 ] )"	397:20:10181:10374	28592	1	True				
ANR	30379	CallExpression	"h -> h264dsp . h264_chroma_dc_dequant_idct ( sl -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT ) , h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ qp [ 1 ] ] [ 0 ] )"		28592	0					
ANR	30380	Callee	h -> h264dsp . h264_chroma_dc_dequant_idct		28592	0					
ANR	30381	MemberAccess	h -> h264dsp . h264_chroma_dc_dequant_idct		28592	0					
ANR	30382	PtrMemberAccess	h -> h264dsp		28592	0					
ANR	30383	Identifier	h		28592	0					
ANR	30384	Identifier	h264dsp		28592	1					
ANR	30385	Identifier	h264_chroma_dc_dequant_idct		28592	1					
ANR	30386	ArgumentList	sl -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT )		28592	1					
ANR	30387	Argument	sl -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT )		28592	0					
ANR	30388	AdditiveExpression	sl -> mb + ( 16 * 16 * 2 << PIXEL_SHIFT )		28592	0		+			
ANR	30389	PtrMemberAccess	sl -> mb		28592	0					
ANR	30390	Identifier	sl		28592	0					
ANR	30391	Identifier	mb		28592	1					
ANR	30392	ShiftExpression	16 * 16 * 2 << PIXEL_SHIFT		28592	1		<<			
ANR	30393	MultiplicativeExpression	16 * 16 * 2		28592	0		*			
ANR	30394	PrimaryExpression	16		28592	0					
ANR	30395	MultiplicativeExpression	16 * 2		28592	1		*			
ANR	30396	PrimaryExpression	16		28592	0					
ANR	30397	PrimaryExpression	2		28592	1					
ANR	30398	Identifier	PIXEL_SHIFT		28592	1					
ANR	30399	Argument	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ qp [ 1 ] ] [ 0 ]		28592	1					
ANR	30400	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ qp [ 1 ] ] [ 0 ]		28592	0					
ANR	30401	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ] [ qp [ 1 ] ]		28592	0					
ANR	30402	ArrayIndexing	h -> dequant4_coeff [ IS_INTRA ( mb_type ) ? 2 : 5 ]		28592	0					
ANR	30403	PtrMemberAccess	h -> dequant4_coeff		28592	0					
ANR	30404	Identifier	h		28592	0					
ANR	30405	Identifier	dequant4_coeff		28592	1					
ANR	30406	ConditionalExpression	IS_INTRA ( mb_type ) ? 2 : 5		28592	1					
ANR	30407	Condition	IS_INTRA ( mb_type )		28592	0					
ANR	30408	CallExpression	IS_INTRA ( mb_type )		28592	0					
ANR	30409	Callee	IS_INTRA		28592	0					
ANR	30410	Identifier	IS_INTRA		28592	0					
ANR	30411	ArgumentList	mb_type		28592	1					
ANR	30412	Argument	mb_type		28592	0					
ANR	30413	Identifier	mb_type		28592	0					
ANR	30414	PrimaryExpression	2		28592	1					
ANR	30415	PrimaryExpression	5		28592	2					
ANR	30416	ArrayIndexing	qp [ 1 ]		28592	1					
ANR	30417	Identifier	qp		28592	0					
ANR	30418	PrimaryExpression	1		28592	1					
ANR	30419	PrimaryExpression	0		28592	1					
ANR	30420	ExpressionStatement	"h -> h264dsp . h264_idct_add8 ( dest , block_offset , sl -> mb , uvlinesize , sl -> non_zero_count_cache )"	401:16:10393:10570	28592	4	True				
ANR	30421	CallExpression	"h -> h264dsp . h264_idct_add8 ( dest , block_offset , sl -> mb , uvlinesize , sl -> non_zero_count_cache )"		28592	0					
ANR	30422	Callee	h -> h264dsp . h264_idct_add8		28592	0					
ANR	30423	MemberAccess	h -> h264dsp . h264_idct_add8		28592	0					
ANR	30424	PtrMemberAccess	h -> h264dsp		28592	0					
ANR	30425	Identifier	h		28592	0					
ANR	30426	Identifier	h264dsp		28592	1					
ANR	30427	Identifier	h264_idct_add8		28592	1					
ANR	30428	ArgumentList	dest		28592	1					
ANR	30429	Argument	dest		28592	0					
ANR	30430	Identifier	dest		28592	0					
ANR	30431	Argument	block_offset		28592	1					
ANR	30432	Identifier	block_offset		28592	0					
ANR	30433	Argument	sl -> mb		28592	2					
ANR	30434	PtrMemberAccess	sl -> mb		28592	0					
ANR	30435	Identifier	sl		28592	0					
ANR	30436	Identifier	mb		28592	1					
ANR	30437	Argument	uvlinesize		28592	3					
ANR	30438	Identifier	uvlinesize		28592	0					
ANR	30439	Argument	sl -> non_zero_count_cache		28592	4					
ANR	30440	PtrMemberAccess	sl -> non_zero_count_cache		28592	0					
ANR	30441	Identifier	sl		28592	0					
ANR	30442	Identifier	non_zero_count_cache		28592	1					
ANR	30443	ReturnType	static av_noinline void FUNC		28592	1					
ANR	30444	Identifier	( hl_decode_mb )		28592	2					
ANR	30445	Identifier	hl_decode_mb		28592	3					
ANR	30446	ParameterList	"const H264Context * h , H264SliceContext * sl"		28592	4					
ANR	30447	Parameter	const H264Context * h	1:43:43:62	28592	0	True				
ANR	30448	ParameterType	const H264Context *		28592	0					
ANR	30449	Identifier	h		28592	1					
ANR	30450	Parameter	H264SliceContext * sl	1:65:65:84	28592	1	True				
ANR	30451	ParameterType	H264SliceContext *		28592	0					
ANR	30452	Identifier	sl		28592	1					
ANR	30453	CFGEntryNode	ENTRY		28592		True				
ANR	30454	CFGExitNode	EXIT		28592		True				
ANR	30455	Symbol	* * h -> cur_pic . f		28592						
ANR	30456	Symbol	IS_INTRA_PCM		28592						
ANR	30457	Symbol	h -> dequant4_coeff		28592						
ANR	30458	Symbol	& gb		28592						
ANR	30459	Symbol	* scan8		28592						
ANR	30460	Symbol	h -> hpc . pred8x8_add		28592						
ANR	30461	Symbol	linesize		28592						
ANR	30462	Symbol	h -> sps . profile_idc		28592						
ANR	30463	Symbol	block_offset		28592						
ANR	30464	Symbol	h -> h264dsp . weight_h264_pixels_tab		28592						
ANR	30465	Symbol	mb_type		28592						
ANR	30466	Symbol	CHROMA422		28592						
ANR	30467	Symbol	src_cr		28592						
ANR	30468	Symbol	* sl		28592						
ANR	30469	Symbol	sl -> chroma_qp		28592						
ANR	30470	Symbol	qp		28592						
ANR	30471	Symbol	IS_16X16		28592						
ANR	30472	Symbol	* CHROMA_DC_BLOCK_INDEX		28592						
ANR	30473	Symbol	src_cb		28592						
ANR	30474	Symbol	FRAME_MBAFF		28592						
ANR	30475	Symbol	* tmp_y		28592						
ANR	30476	Symbol	AV_CODEC_FLAG_GRAY		28592						
ANR	30477	Symbol	chroma422		28592						
ANR	30478	Symbol	sl -> non_zero_count_cache		28592						
ANR	30479	Symbol	* * * IS_INTRA		28592						
ANR	30480	Symbol	dctcoef_get		28592						
ANR	30481	Symbol	sl -> deblocking_filter		28592						
ANR	30482	Symbol	h -> flags		28592						
ANR	30483	Symbol	h -> cur_pic . f		28592						
ANR	30484	Symbol	* * * h		28592						
ANR	30485	Symbol	h -> h264dsp . biweight_h264_pixels_tab		28592						
ANR	30486	Symbol	* sl -> chroma_qp		28592						
ANR	30487	Symbol	* * sl -> ref_cache		28592						
ANR	30488	Symbol	h -> h264chroma		28592						
ANR	30489	Symbol	* dest		28592						
ANR	30490	Symbol	sl -> mb_uvlinesize		28592						
ANR	30491	Symbol	* * CHROMA_DC_BLOCK_INDEX		28592						
ANR	30492	Symbol	* h -> sps . chroma_format_idc		28592						
ANR	30493	Symbol	h -> hpc . pred8x8		28592						
ANR	30494	Symbol	h -> h264dsp		28592						
ANR	30495	Symbol	h -> cur_pic . mb_type		28592						
ANR	30496	Symbol	sl		28592						
ANR	30497	Symbol	CONFIG_GRAY		28592						
ANR	30498	Symbol	* h -> dequant4_coeff		28592						
ANR	30499	Symbol	h -> qpel_avg		28592						
ANR	30500	Symbol	HOR_PRED8x8		28592						
ANR	30501	Symbol	h -> list_counts		28592						
ANR	30502	Symbol	sl -> cbp		28592						
ANR	30503	Symbol	* h -> cur_pic . f		28592						
ANR	30504	Symbol	idct_add		28592						
ANR	30505	Symbol	h		28592						
ANR	30506	Symbol	i		28592						
ANR	30507	Symbol	j		28592						
ANR	30508	Symbol	h -> sps . transform_bypass		28592						
ANR	30509	Symbol	sl -> intra_pcm_ptr		28592						
ANR	30510	Symbol	h -> cur_pic . f -> data		28592						
ANR	30511	Symbol	dest_y		28592						
ANR	30512	Symbol	* list		28592						
ANR	30513	Symbol	ff_h264_mb_sizes		28592						
ANR	30514	Symbol	SIMPLE		28592						
ANR	30515	Symbol	mb_y		28592						
ANR	30516	Symbol	mb_x		28592						
ANR	30517	Symbol	PIXEL_SHIFT		28592						
ANR	30518	Symbol	VERT_PRED8x8		28592						
ANR	30519	Symbol	h -> chroma_y_shift		28592						
ANR	30520	Symbol	get_bits		28592						
ANR	30521	Symbol	* * qp		28592						
ANR	30522	Symbol	dest		28592						
ANR	30523	Symbol	block_h		28592						
ANR	30524	Symbol	* * * * h		28592						
ANR	30525	Symbol	hl_motion_422		28592						
ANR	30526	Symbol	ref		28592						
ANR	30527	Symbol	* tmp_cr		28592						
ANR	30528	Symbol	hl_motion_420		28592						
ANR	30529	Symbol	uvlinesize		28592						
ANR	30530	Symbol	* h -> cur_pic . f -> data		28592						
ANR	30531	Symbol	* h -> sps		28592						
ANR	30532	Symbol	* ff_h264_mb_sizes		28592						
ANR	30533	Symbol	sl -> ref_cache		28592						
ANR	30534	Symbol	* sl -> non_zero_count_cache		28592						
ANR	30535	Symbol	MB_FIELD		28592						
ANR	30536	Symbol	tmp_cb		28592						
ANR	30537	Symbol	h -> hpc		28592						
ANR	30538	Symbol	* * i		28592						
ANR	30539	Symbol	* * h		28592						
ANR	30540	Symbol	h -> h264dsp . h264_add_pixels4_clear		28592						
ANR	30541	Symbol	* * IS_INTRA		28592						
ANR	30542	Symbol	h -> block_offset		28592						
ANR	30543	Symbol	* IS_INTRA		28592						
ANR	30544	Symbol	sl -> uvlinesize		28592						
ANR	30545	Symbol	sl -> mb		28592						
ANR	30546	Symbol	* sl -> ref_cache		28592						
ANR	30547	Symbol	sl -> mb_y		28592						
ANR	30548	Symbol	sl -> mb_x		28592						
ANR	30549	Symbol	list		28592						
ANR	30550	Symbol	* * scan8		28592						
ANR	30551	Symbol	* * * h -> dequant4_coeff		28592						
ANR	30552	Symbol	* h -> cur_pic . mb_type		28592						
ANR	30553	Symbol	tmp_cr		28592						
ANR	30554	Symbol	sl -> linesize		28592						
ANR	30555	Symbol	sl -> list_count		28592						
ANR	30556	Symbol	bit_depth		28592						
ANR	30557	Symbol	h -> qpel_put		28592						
ANR	30558	Symbol	* h -> cur_pic		28592						
ANR	30559	Symbol	* * * sl		28592						
ANR	30560	Symbol	tmp_y		28592						
ANR	30561	Symbol	h -> h264chroma . put_h264_chroma_pixels_tab		28592						
ANR	30562	Symbol	sl -> mb_xy		28592						
ANR	30563	Symbol	mb_xy		28592						
ANR	30564	Symbol	* qp		28592						
ANR	30565	Symbol	* * sl		28592						
ANR	30566	Symbol	IS_INTRA		28592						
ANR	30567	Symbol	dest_cb		28592						
ANR	30568	Symbol	transform_bypass		28592						
ANR	30569	Symbol	h -> cur_pic		28592						
ANR	30570	Symbol	h -> vdsp		28592						
ANR	30571	Symbol	* * list		28592						
ANR	30572	Symbol	CHROMA_DC_BLOCK_INDEX		28592						
ANR	30573	Symbol	scan8		28592						
ANR	30574	Symbol	gb		28592						
ANR	30575	Symbol	* h -> list_counts		28592						
ANR	30576	Symbol	h -> sps . bit_depth_luma		28592						
ANR	30577	Symbol	h -> sps . chroma_format_idc		28592						
ANR	30578	Symbol	* tmp_cb		28592						
ANR	30579	Symbol	sl -> chroma_pred_mode		28592						
ANR	30580	Symbol	sl -> qscale		28592						
ANR	30581	Symbol	* * h -> cur_pic		28592						
ANR	30582	Symbol	sl -> mb_linesize		28592						
ANR	30583	Symbol	* block_offset		28592						
ANR	30584	Symbol	* h		28592						
ANR	30585	Symbol	* i		28592						
ANR	30586	Symbol	* j		28592						
ANR	30587	Symbol	h -> h264chroma . avg_h264_chroma_pixels_tab		28592						
ANR	30588	Symbol	USES_LIST		28592						
ANR	30589	Symbol	h -> sps		28592						
ANR	30590	Symbol	* * h -> dequant4_coeff		28592						
ANR	30591	Symbol	* mb_xy		28592						
ANR	30592	Symbol	* * * qp		28592						
ANR	30593	Symbol	* ref		28592						
ANR	30594	Symbol	dest_cr		28592						
