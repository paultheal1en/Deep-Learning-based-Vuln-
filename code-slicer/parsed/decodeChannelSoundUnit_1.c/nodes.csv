command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1674736	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decodeChannelSoundUnit_1.c								
ANR	1674737	Function	decodeChannelSoundUnit	1:0:0:2152							
ANR	1674738	FunctionDef	"decodeChannelSoundUnit (ATRAC3Context * q , GetBitContext * gb , channel_unit * pSnd , float * pOut , int channelNum , int codingMode)"		1674737	0					
ANR	1674739	CompoundStatement		3:0:138:2152	1674737	0					
ANR	1674740	IdentifierDeclStatement	"int band , result = 0 , numSubbands , lastTonal , numBands ;"	5:4:145:199	1674737	0	True				
ANR	1674741	IdentifierDecl	band		1674737	0					
ANR	1674742	IdentifierDeclType	int		1674737	0					
ANR	1674743	Identifier	band		1674737	1					
ANR	1674744	IdentifierDecl	result = 0		1674737	1					
ANR	1674745	IdentifierDeclType	int		1674737	0					
ANR	1674746	Identifier	result		1674737	1					
ANR	1674747	AssignmentExpression	result = 0		1674737	2		=			
ANR	1674748	Identifier	result		1674737	0					
ANR	1674749	PrimaryExpression	0		1674737	1					
ANR	1674750	IdentifierDecl	numSubbands		1674737	2					
ANR	1674751	IdentifierDeclType	int		1674737	0					
ANR	1674752	Identifier	numSubbands		1674737	1					
ANR	1674753	IdentifierDecl	lastTonal		1674737	3					
ANR	1674754	IdentifierDeclType	int		1674737	0					
ANR	1674755	Identifier	lastTonal		1674737	1					
ANR	1674756	IdentifierDecl	numBands		1674737	4					
ANR	1674757	IdentifierDeclType	int		1674737	0					
ANR	1674758	Identifier	numBands		1674737	1					
ANR	1674759	IfStatement	if ( codingMode == JOINT_STEREO && channelNum == 1 )		1674737	1					
ANR	1674760	Condition	codingMode == JOINT_STEREO && channelNum == 1	9:8:212:256	1674737	0	True				
ANR	1674761	AndExpression	codingMode == JOINT_STEREO && channelNum == 1		1674737	0		&&			
ANR	1674762	EqualityExpression	codingMode == JOINT_STEREO		1674737	0		==			
ANR	1674763	Identifier	codingMode		1674737	0					
ANR	1674764	Identifier	JOINT_STEREO		1674737	1					
ANR	1674765	EqualityExpression	channelNum == 1		1674737	1		==			
ANR	1674766	Identifier	channelNum		1674737	0					
ANR	1674767	PrimaryExpression	1		1674737	1					
ANR	1674768	CompoundStatement		7:55:120:120	1674737	1					
ANR	1674769	IfStatement	"if ( get_bits ( gb , 2 ) != 3 )"		1674737	0					
ANR	1674770	Condition	"get_bits ( gb , 2 ) != 3"	11:12:274:292	1674737	0	True				
ANR	1674771	EqualityExpression	"get_bits ( gb , 2 ) != 3"		1674737	0		!=			
ANR	1674772	CallExpression	"get_bits ( gb , 2 )"		1674737	0					
ANR	1674773	Callee	get_bits		1674737	0					
ANR	1674774	Identifier	get_bits		1674737	0					
ANR	1674775	ArgumentList	gb		1674737	1					
ANR	1674776	Argument	gb		1674737	0					
ANR	1674777	Identifier	gb		1674737	0					
ANR	1674778	Argument	2		1674737	1					
ANR	1674779	PrimaryExpression	2		1674737	0					
ANR	1674780	PrimaryExpression	3		1674737	1					
ANR	1674781	CompoundStatement		9:33:156:156	1674737	1					
ANR	1674782	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""JS mono Sound Unit id != 3.\\n"" )"	13:12:310:367	1674737	0	True				
ANR	1674783	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""JS mono Sound Unit id != 3.\\n"" )"		1674737	0					
ANR	1674784	Callee	av_log		1674737	0					
ANR	1674785	Identifier	av_log		1674737	0					
ANR	1674786	ArgumentList	NULL		1674737	1					
ANR	1674787	Argument	NULL		1674737	0					
ANR	1674788	Identifier	NULL		1674737	0					
ANR	1674789	Argument	AV_LOG_ERROR		1674737	1					
ANR	1674790	Identifier	AV_LOG_ERROR		1674737	0					
ANR	1674791	Argument	"""JS mono Sound Unit id != 3.\\n"""		1674737	2					
ANR	1674792	PrimaryExpression	"""JS mono Sound Unit id != 3.\\n"""		1674737	0					
ANR	1674793	ReturnStatement	return - 1 ;	15:12:382:391	1674737	1	True				
ANR	1674794	UnaryOperationExpression	- 1		1674737	0					
ANR	1674795	UnaryOperator	-		1674737	0					
ANR	1674796	PrimaryExpression	1		1674737	1					
ANR	1674797	ElseStatement	else		1674737	0					
ANR	1674798	CompoundStatement		17:11:277:277	1674737	0					
ANR	1674799	IfStatement	"if ( get_bits ( gb , 6 ) != 0x28 )"		1674737	0					
ANR	1674800	Condition	"get_bits ( gb , 6 ) != 0x28"	21:12:431:452	1674737	0	True				
ANR	1674801	EqualityExpression	"get_bits ( gb , 6 ) != 0x28"		1674737	0		!=			
ANR	1674802	CallExpression	"get_bits ( gb , 6 )"		1674737	0					
ANR	1674803	Callee	get_bits		1674737	0					
ANR	1674804	Identifier	get_bits		1674737	0					
ANR	1674805	ArgumentList	gb		1674737	1					
ANR	1674806	Argument	gb		1674737	0					
ANR	1674807	Identifier	gb		1674737	0					
ANR	1674808	Argument	6		1674737	1					
ANR	1674809	PrimaryExpression	6		1674737	0					
ANR	1674810	PrimaryExpression	0x28		1674737	1					
ANR	1674811	CompoundStatement		19:36:316:316	1674737	1					
ANR	1674812	ExpressionStatement	"av_log ( NULL , AV_LOG_ERROR , ""Sound Unit id != 0x28.\\n"" )"	23:12:470:522	1674737	0	True				
ANR	1674813	CallExpression	"av_log ( NULL , AV_LOG_ERROR , ""Sound Unit id != 0x28.\\n"" )"		1674737	0					
ANR	1674814	Callee	av_log		1674737	0					
ANR	1674815	Identifier	av_log		1674737	0					
ANR	1674816	ArgumentList	NULL		1674737	1					
ANR	1674817	Argument	NULL		1674737	0					
ANR	1674818	Identifier	NULL		1674737	0					
ANR	1674819	Argument	AV_LOG_ERROR		1674737	1					
ANR	1674820	Identifier	AV_LOG_ERROR		1674737	0					
ANR	1674821	Argument	"""Sound Unit id != 0x28.\\n"""		1674737	2					
ANR	1674822	PrimaryExpression	"""Sound Unit id != 0x28.\\n"""		1674737	0					
ANR	1674823	ReturnStatement	return - 1 ;	25:12:537:546	1674737	1	True				
ANR	1674824	UnaryOperationExpression	- 1		1674737	0					
ANR	1674825	UnaryOperator	-		1674737	0					
ANR	1674826	PrimaryExpression	1		1674737	1					
ANR	1674827	ExpressionStatement	"pSnd -> bandsCoded = get_bits ( gb , 2 )"	35:4:610:643	1674737	2	True				
ANR	1674828	AssignmentExpression	"pSnd -> bandsCoded = get_bits ( gb , 2 )"		1674737	0		=			
ANR	1674829	PtrMemberAccess	pSnd -> bandsCoded		1674737	0					
ANR	1674830	Identifier	pSnd		1674737	0					
ANR	1674831	Identifier	bandsCoded		1674737	1					
ANR	1674832	CallExpression	"get_bits ( gb , 2 )"		1674737	1					
ANR	1674833	Callee	get_bits		1674737	0					
ANR	1674834	Identifier	get_bits		1674737	0					
ANR	1674835	ArgumentList	gb		1674737	1					
ANR	1674836	Argument	gb		1674737	0					
ANR	1674837	Identifier	gb		1674737	0					
ANR	1674838	Argument	2		1674737	1					
ANR	1674839	PrimaryExpression	2		1674737	0					
ANR	1674840	ExpressionStatement	"result = decodeGainControl ( gb , & ( pSnd -> gainBlock [ pSnd -> gcBlkSwitch ] ) , pSnd -> bandsCoded )"	39:4:652:740	1674737	3	True				
ANR	1674841	AssignmentExpression	"result = decodeGainControl ( gb , & ( pSnd -> gainBlock [ pSnd -> gcBlkSwitch ] ) , pSnd -> bandsCoded )"		1674737	0		=			
ANR	1674842	Identifier	result		1674737	0					
ANR	1674843	CallExpression	"decodeGainControl ( gb , & ( pSnd -> gainBlock [ pSnd -> gcBlkSwitch ] ) , pSnd -> bandsCoded )"		1674737	1					
ANR	1674844	Callee	decodeGainControl		1674737	0					
ANR	1674845	Identifier	decodeGainControl		1674737	0					
ANR	1674846	ArgumentList	gb		1674737	1					
ANR	1674847	Argument	gb		1674737	0					
ANR	1674848	Identifier	gb		1674737	0					
ANR	1674849	Argument	& ( pSnd -> gainBlock [ pSnd -> gcBlkSwitch ] )		1674737	1					
ANR	1674850	UnaryOperationExpression	& ( pSnd -> gainBlock [ pSnd -> gcBlkSwitch ] )		1674737	0					
ANR	1674851	UnaryOperator	&		1674737	0					
ANR	1674852	ArrayIndexing	pSnd -> gainBlock [ pSnd -> gcBlkSwitch ]		1674737	1					
ANR	1674853	PtrMemberAccess	pSnd -> gainBlock		1674737	0					
ANR	1674854	Identifier	pSnd		1674737	0					
ANR	1674855	Identifier	gainBlock		1674737	1					
ANR	1674856	PtrMemberAccess	pSnd -> gcBlkSwitch		1674737	1					
ANR	1674857	Identifier	pSnd		1674737	0					
ANR	1674858	Identifier	gcBlkSwitch		1674737	1					
ANR	1674859	Argument	pSnd -> bandsCoded		1674737	2					
ANR	1674860	PtrMemberAccess	pSnd -> bandsCoded		1674737	0					
ANR	1674861	Identifier	pSnd		1674737	0					
ANR	1674862	Identifier	bandsCoded		1674737	1					
ANR	1674863	IfStatement	if ( result )		1674737	4					
ANR	1674864	Condition	result	41:8:751:756	1674737	0	True				
ANR	1674865	Identifier	result		1674737	0					
ANR	1674866	ReturnStatement	return result ;	41:16:759:772	1674737	1	True				
ANR	1674867	Identifier	result		1674737	0					
ANR	1674868	ExpressionStatement	"pSnd -> numComponents = decodeTonalComponents ( gb , pSnd -> components , pSnd -> bandsCoded )"	45:4:781:865	1674737	5	True				
ANR	1674869	AssignmentExpression	"pSnd -> numComponents = decodeTonalComponents ( gb , pSnd -> components , pSnd -> bandsCoded )"		1674737	0		=			
ANR	1674870	PtrMemberAccess	pSnd -> numComponents		1674737	0					
ANR	1674871	Identifier	pSnd		1674737	0					
ANR	1674872	Identifier	numComponents		1674737	1					
ANR	1674873	CallExpression	"decodeTonalComponents ( gb , pSnd -> components , pSnd -> bandsCoded )"		1674737	1					
ANR	1674874	Callee	decodeTonalComponents		1674737	0					
ANR	1674875	Identifier	decodeTonalComponents		1674737	0					
ANR	1674876	ArgumentList	gb		1674737	1					
ANR	1674877	Argument	gb		1674737	0					
ANR	1674878	Identifier	gb		1674737	0					
ANR	1674879	Argument	pSnd -> components		1674737	1					
ANR	1674880	PtrMemberAccess	pSnd -> components		1674737	0					
ANR	1674881	Identifier	pSnd		1674737	0					
ANR	1674882	Identifier	components		1674737	1					
ANR	1674883	Argument	pSnd -> bandsCoded		1674737	2					
ANR	1674884	PtrMemberAccess	pSnd -> bandsCoded		1674737	0					
ANR	1674885	Identifier	pSnd		1674737	0					
ANR	1674886	Identifier	bandsCoded		1674737	1					
ANR	1674887	IfStatement	if ( pSnd -> numComponents == - 1 )		1674737	6					
ANR	1674888	Condition	pSnd -> numComponents == - 1	47:8:876:900	1674737	0	True				
ANR	1674889	EqualityExpression	pSnd -> numComponents == - 1		1674737	0		==			
ANR	1674890	PtrMemberAccess	pSnd -> numComponents		1674737	0					
ANR	1674891	Identifier	pSnd		1674737	0					
ANR	1674892	Identifier	numComponents		1674737	1					
ANR	1674893	UnaryOperationExpression	- 1		1674737	1					
ANR	1674894	UnaryOperator	-		1674737	0					
ANR	1674895	PrimaryExpression	1		1674737	1					
ANR	1674896	ReturnStatement	return - 1 ;	47:35:903:912	1674737	1	True				
ANR	1674897	UnaryOperationExpression	- 1		1674737	0					
ANR	1674898	UnaryOperator	-		1674737	0					
ANR	1674899	PrimaryExpression	1		1674737	1					
ANR	1674900	ExpressionStatement	"numSubbands = decodeSpectrum ( gb , pSnd -> spectrum )"	51:4:921:970	1674737	7	True				
ANR	1674901	AssignmentExpression	"numSubbands = decodeSpectrum ( gb , pSnd -> spectrum )"		1674737	0		=			
ANR	1674902	Identifier	numSubbands		1674737	0					
ANR	1674903	CallExpression	"decodeSpectrum ( gb , pSnd -> spectrum )"		1674737	1					
ANR	1674904	Callee	decodeSpectrum		1674737	0					
ANR	1674905	Identifier	decodeSpectrum		1674737	0					
ANR	1674906	ArgumentList	gb		1674737	1					
ANR	1674907	Argument	gb		1674737	0					
ANR	1674908	Identifier	gb		1674737	0					
ANR	1674909	Argument	pSnd -> spectrum		1674737	1					
ANR	1674910	PtrMemberAccess	pSnd -> spectrum		1674737	0					
ANR	1674911	Identifier	pSnd		1674737	0					
ANR	1674912	Identifier	spectrum		1674737	1					
ANR	1674913	ExpressionStatement	"lastTonal = addTonalComponents ( pSnd -> spectrum , pSnd -> numComponents , pSnd -> components )"	57:4:1039:1125	1674737	8	True				
ANR	1674914	AssignmentExpression	"lastTonal = addTonalComponents ( pSnd -> spectrum , pSnd -> numComponents , pSnd -> components )"		1674737	0		=			
ANR	1674915	Identifier	lastTonal		1674737	0					
ANR	1674916	CallExpression	"addTonalComponents ( pSnd -> spectrum , pSnd -> numComponents , pSnd -> components )"		1674737	1					
ANR	1674917	Callee	addTonalComponents		1674737	0					
ANR	1674918	Identifier	addTonalComponents		1674737	0					
ANR	1674919	ArgumentList	pSnd -> spectrum		1674737	1					
ANR	1674920	Argument	pSnd -> spectrum		1674737	0					
ANR	1674921	PtrMemberAccess	pSnd -> spectrum		1674737	0					
ANR	1674922	Identifier	pSnd		1674737	0					
ANR	1674923	Identifier	spectrum		1674737	1					
ANR	1674924	Argument	pSnd -> numComponents		1674737	1					
ANR	1674925	PtrMemberAccess	pSnd -> numComponents		1674737	0					
ANR	1674926	Identifier	pSnd		1674737	0					
ANR	1674927	Identifier	numComponents		1674737	1					
ANR	1674928	Argument	pSnd -> components		1674737	2					
ANR	1674929	PtrMemberAccess	pSnd -> components		1674737	0					
ANR	1674930	Identifier	pSnd		1674737	0					
ANR	1674931	Identifier	components		1674737	1					
ANR	1674932	ExpressionStatement	numBands = ( subbandTab [ numSubbands ] - 1 ) >> 8	65:4:1234:1279	1674737	9	True				
ANR	1674933	AssignmentExpression	numBands = ( subbandTab [ numSubbands ] - 1 ) >> 8		1674737	0		=			
ANR	1674934	Identifier	numBands		1674737	0					
ANR	1674935	ShiftExpression	( subbandTab [ numSubbands ] - 1 ) >> 8		1674737	1		>>			
ANR	1674936	AdditiveExpression	subbandTab [ numSubbands ] - 1		1674737	0		-			
ANR	1674937	ArrayIndexing	subbandTab [ numSubbands ]		1674737	0					
ANR	1674938	Identifier	subbandTab		1674737	0					
ANR	1674939	Identifier	numSubbands		1674737	1					
ANR	1674940	PrimaryExpression	1		1674737	1					
ANR	1674941	PrimaryExpression	8		1674737	1					
ANR	1674942	IfStatement	if ( lastTonal >= 0 )		1674737	10					
ANR	1674943	Condition	lastTonal >= 0	67:8:1290:1303	1674737	0	True				
ANR	1674944	RelationalExpression	lastTonal >= 0		1674737	0		>=			
ANR	1674945	Identifier	lastTonal		1674737	0					
ANR	1674946	PrimaryExpression	0		1674737	1					
ANR	1674947	ExpressionStatement	"numBands = FFMAX ( ( lastTonal + 256 ) >> 8 , numBands )"	69:8:1315:1365	1674737	1	True				
ANR	1674948	AssignmentExpression	"numBands = FFMAX ( ( lastTonal + 256 ) >> 8 , numBands )"		1674737	0		=			
ANR	1674949	Identifier	numBands		1674737	0					
ANR	1674950	CallExpression	"FFMAX ( ( lastTonal + 256 ) >> 8 , numBands )"		1674737	1					
ANR	1674951	Callee	FFMAX		1674737	0					
ANR	1674952	Identifier	FFMAX		1674737	0					
ANR	1674953	ArgumentList	( lastTonal + 256 ) >> 8		1674737	1					
ANR	1674954	Argument	( lastTonal + 256 ) >> 8		1674737	0					
ANR	1674955	ShiftExpression	( lastTonal + 256 ) >> 8		1674737	0		>>			
ANR	1674956	AdditiveExpression	lastTonal + 256		1674737	0		+			
ANR	1674957	Identifier	lastTonal		1674737	0					
ANR	1674958	PrimaryExpression	256		1674737	1					
ANR	1674959	PrimaryExpression	8		1674737	1					
ANR	1674960	Argument	numBands		1674737	1					
ANR	1674961	Identifier	numBands		1674737	0					
ANR	1674962	ForStatement	for ( band = 0 ; band < 4 ; band ++ )		1674737	11					
ANR	1674963	ForInit	band = 0 ;	77:9:1425:1431	1674737	0	True				
ANR	1674964	AssignmentExpression	band = 0		1674737	0		=			
ANR	1674965	Identifier	band		1674737	0					
ANR	1674966	PrimaryExpression	0		1674737	1					
ANR	1674967	Condition	band < 4	77:17:1433:1438	1674737	1	True				
ANR	1674968	RelationalExpression	band < 4		1674737	0		<			
ANR	1674969	Identifier	band		1674737	0					
ANR	1674970	PrimaryExpression	4		1674737	1					
ANR	1674971	PostIncDecOperationExpression	band ++	77:25:1441:1446	1674737	2	True				
ANR	1674972	Identifier	band		1674737	0					
ANR	1674973	IncDec	++		1674737	1					
ANR	1674974	CompoundStatement		75:33:1310:1310	1674737	3					
ANR	1674975	IfStatement	if ( band <= numBands )		1674737	0					
ANR	1674976	Condition	band <= numBands	81:12:1523:1538	1674737	0	True				
ANR	1674977	RelationalExpression	band <= numBands		1674737	0		<=			
ANR	1674978	Identifier	band		1674737	0					
ANR	1674979	Identifier	numBands		1674737	1					
ANR	1674980	CompoundStatement		79:30:1402:1402	1674737	1					
ANR	1674981	ExpressionStatement	"IMLT ( & ( pSnd -> spectrum [ band * 256 ] ) , pSnd -> IMDCT_buf , band & 1 )"	83:12:1556:1614	1674737	0	True				
ANR	1674982	CallExpression	"IMLT ( & ( pSnd -> spectrum [ band * 256 ] ) , pSnd -> IMDCT_buf , band & 1 )"		1674737	0					
ANR	1674983	Callee	IMLT		1674737	0					
ANR	1674984	Identifier	IMLT		1674737	0					
ANR	1674985	ArgumentList	& ( pSnd -> spectrum [ band * 256 ] )		1674737	1					
ANR	1674986	Argument	& ( pSnd -> spectrum [ band * 256 ] )		1674737	0					
ANR	1674987	UnaryOperationExpression	& ( pSnd -> spectrum [ band * 256 ] )		1674737	0					
ANR	1674988	UnaryOperator	&		1674737	0					
ANR	1674989	ArrayIndexing	pSnd -> spectrum [ band * 256 ]		1674737	1					
ANR	1674990	PtrMemberAccess	pSnd -> spectrum		1674737	0					
ANR	1674991	Identifier	pSnd		1674737	0					
ANR	1674992	Identifier	spectrum		1674737	1					
ANR	1674993	MultiplicativeExpression	band * 256		1674737	1		*			
ANR	1674994	Identifier	band		1674737	0					
ANR	1674995	PrimaryExpression	256		1674737	1					
ANR	1674996	Argument	pSnd -> IMDCT_buf		1674737	1					
ANR	1674997	PtrMemberAccess	pSnd -> IMDCT_buf		1674737	0					
ANR	1674998	Identifier	pSnd		1674737	0					
ANR	1674999	Identifier	IMDCT_buf		1674737	1					
ANR	1675000	Argument	band & 1		1674737	2					
ANR	1675001	BitAndExpression	band & 1		1674737	0		&			
ANR	1675002	Identifier	band		1674737	0					
ANR	1675003	PrimaryExpression	1		1674737	1					
ANR	1675004	ElseStatement	else		1674737	0					
ANR	1675005	ExpressionStatement	"memset ( pSnd -> IMDCT_buf , 0 , 512 * sizeof ( float ) )"	87:12:1645:1692	1674737	0	True				
ANR	1675006	CallExpression	"memset ( pSnd -> IMDCT_buf , 0 , 512 * sizeof ( float ) )"		1674737	0					
ANR	1675007	Callee	memset		1674737	0					
ANR	1675008	Identifier	memset		1674737	0					
ANR	1675009	ArgumentList	pSnd -> IMDCT_buf		1674737	1					
ANR	1675010	Argument	pSnd -> IMDCT_buf		1674737	0					
ANR	1675011	PtrMemberAccess	pSnd -> IMDCT_buf		1674737	0					
ANR	1675012	Identifier	pSnd		1674737	0					
ANR	1675013	Identifier	IMDCT_buf		1674737	1					
ANR	1675014	Argument	0		1674737	1					
ANR	1675015	PrimaryExpression	0		1674737	0					
ANR	1675016	Argument	512 * sizeof ( float )		1674737	2					
ANR	1675017	MultiplicativeExpression	512 * sizeof ( float )		1674737	0		*			
ANR	1675018	PrimaryExpression	512		1674737	0					
ANR	1675019	SizeofExpression	sizeof ( float )		1674737	1					
ANR	1675020	Sizeof	sizeof		1674737	0					
ANR	1675021	SizeofOperand	float		1674737	1					
ANR	1675022	ExpressionStatement	"gainCompensateAndOverlap ( pSnd -> IMDCT_buf , & ( pSnd -> prevFrame [ band * 256 ] ) , & ( pOut [ band * 256 ] ) , & ( ( pSnd -> gainBlock [ 1 - ( pSnd -> gcBlkSwitch ) ] ) . gBlock [ band ] ) , & ( ( pSnd -> gainBlock [ pSnd -> gcBlkSwitch ] ) . gBlock [ band ] ) )"	93:8:1754:2033	1674737	1	True				
ANR	1675023	CallExpression	"gainCompensateAndOverlap ( pSnd -> IMDCT_buf , & ( pSnd -> prevFrame [ band * 256 ] ) , & ( pOut [ band * 256 ] ) , & ( ( pSnd -> gainBlock [ 1 - ( pSnd -> gcBlkSwitch ) ] ) . gBlock [ band ] ) , & ( ( pSnd -> gainBlock [ pSnd -> gcBlkSwitch ] ) . gBlock [ band ] ) )"		1674737	0					
ANR	1675024	Callee	gainCompensateAndOverlap		1674737	0					
ANR	1675025	Identifier	gainCompensateAndOverlap		1674737	0					
ANR	1675026	ArgumentList	pSnd -> IMDCT_buf		1674737	1					
ANR	1675027	Argument	pSnd -> IMDCT_buf		1674737	0					
ANR	1675028	PtrMemberAccess	pSnd -> IMDCT_buf		1674737	0					
ANR	1675029	Identifier	pSnd		1674737	0					
ANR	1675030	Identifier	IMDCT_buf		1674737	1					
ANR	1675031	Argument	& ( pSnd -> prevFrame [ band * 256 ] )		1674737	1					
ANR	1675032	UnaryOperationExpression	& ( pSnd -> prevFrame [ band * 256 ] )		1674737	0					
ANR	1675033	UnaryOperator	&		1674737	0					
ANR	1675034	ArrayIndexing	pSnd -> prevFrame [ band * 256 ]		1674737	1					
ANR	1675035	PtrMemberAccess	pSnd -> prevFrame		1674737	0					
ANR	1675036	Identifier	pSnd		1674737	0					
ANR	1675037	Identifier	prevFrame		1674737	1					
ANR	1675038	MultiplicativeExpression	band * 256		1674737	1		*			
ANR	1675039	Identifier	band		1674737	0					
ANR	1675040	PrimaryExpression	256		1674737	1					
ANR	1675041	Argument	& ( pOut [ band * 256 ] )		1674737	2					
ANR	1675042	UnaryOperationExpression	& ( pOut [ band * 256 ] )		1674737	0					
ANR	1675043	UnaryOperator	&		1674737	0					
ANR	1675044	ArrayIndexing	pOut [ band * 256 ]		1674737	1					
ANR	1675045	Identifier	pOut		1674737	0					
ANR	1675046	MultiplicativeExpression	band * 256		1674737	1		*			
ANR	1675047	Identifier	band		1674737	0					
ANR	1675048	PrimaryExpression	256		1674737	1					
ANR	1675049	Argument	& ( ( pSnd -> gainBlock [ 1 - ( pSnd -> gcBlkSwitch ) ] ) . gBlock [ band ] )		1674737	3					
ANR	1675050	UnaryOperationExpression	& ( ( pSnd -> gainBlock [ 1 - ( pSnd -> gcBlkSwitch ) ] ) . gBlock [ band ] )		1674737	0					
ANR	1675051	UnaryOperator	&		1674737	0					
ANR	1675052	ArrayIndexing	( pSnd -> gainBlock [ 1 - ( pSnd -> gcBlkSwitch ) ] ) . gBlock [ band ]		1674737	1					
ANR	1675053	MemberAccess	( pSnd -> gainBlock [ 1 - ( pSnd -> gcBlkSwitch ) ] ) . gBlock		1674737	0					
ANR	1675054	ArrayIndexing	pSnd -> gainBlock [ 1 - ( pSnd -> gcBlkSwitch ) ]		1674737	0					
ANR	1675055	PtrMemberAccess	pSnd -> gainBlock		1674737	0					
ANR	1675056	Identifier	pSnd		1674737	0					
ANR	1675057	Identifier	gainBlock		1674737	1					
ANR	1675058	AdditiveExpression	1 - ( pSnd -> gcBlkSwitch )		1674737	1		-			
ANR	1675059	PrimaryExpression	1		1674737	0					
ANR	1675060	PtrMemberAccess	pSnd -> gcBlkSwitch		1674737	1					
ANR	1675061	Identifier	pSnd		1674737	0					
ANR	1675062	Identifier	gcBlkSwitch		1674737	1					
ANR	1675063	Identifier	gBlock		1674737	1					
ANR	1675064	Identifier	band		1674737	1					
ANR	1675065	Argument	& ( ( pSnd -> gainBlock [ pSnd -> gcBlkSwitch ] ) . gBlock [ band ] )		1674737	4					
ANR	1675066	UnaryOperationExpression	& ( ( pSnd -> gainBlock [ pSnd -> gcBlkSwitch ] ) . gBlock [ band ] )		1674737	0					
ANR	1675067	UnaryOperator	&		1674737	0					
ANR	1675068	ArrayIndexing	( pSnd -> gainBlock [ pSnd -> gcBlkSwitch ] ) . gBlock [ band ]		1674737	1					
ANR	1675069	MemberAccess	( pSnd -> gainBlock [ pSnd -> gcBlkSwitch ] ) . gBlock		1674737	0					
ANR	1675070	ArrayIndexing	pSnd -> gainBlock [ pSnd -> gcBlkSwitch ]		1674737	0					
ANR	1675071	PtrMemberAccess	pSnd -> gainBlock		1674737	0					
ANR	1675072	Identifier	pSnd		1674737	0					
ANR	1675073	Identifier	gainBlock		1674737	1					
ANR	1675074	PtrMemberAccess	pSnd -> gcBlkSwitch		1674737	1					
ANR	1675075	Identifier	pSnd		1674737	0					
ANR	1675076	Identifier	gcBlkSwitch		1674737	1					
ANR	1675077	Identifier	gBlock		1674737	1					
ANR	1675078	Identifier	band		1674737	1					
ANR	1675079	ExpressionStatement	pSnd -> gcBlkSwitch ^= 1	105:4:2110:2132	1674737	12	True				
ANR	1675080	AssignmentExpression	pSnd -> gcBlkSwitch ^= 1		1674737	0		^=			
ANR	1675081	PtrMemberAccess	pSnd -> gcBlkSwitch		1674737	0					
ANR	1675082	Identifier	pSnd		1674737	0					
ANR	1675083	Identifier	gcBlkSwitch		1674737	1					
ANR	1675084	PrimaryExpression	1		1674737	1					
ANR	1675085	ReturnStatement	return 0 ;	109:4:2141:2149	1674737	13	True				
ANR	1675086	PrimaryExpression	0		1674737	0					
ANR	1675087	ReturnType	static int		1674737	1					
ANR	1675088	Identifier	decodeChannelSoundUnit		1674737	2					
ANR	1675089	ParameterList	"ATRAC3Context * q , GetBitContext * gb , channel_unit * pSnd , float * pOut , int channelNum , int codingMode"		1674737	3					
ANR	1675090	Parameter	ATRAC3Context * q	1:35:35:50	1674737	0	True				
ANR	1675091	ParameterType	ATRAC3Context *		1674737	0					
ANR	1675092	Identifier	q		1674737	1					
ANR	1675093	Parameter	GetBitContext * gb	1:53:53:69	1674737	1	True				
ANR	1675094	ParameterType	GetBitContext *		1674737	0					
ANR	1675095	Identifier	gb		1674737	1					
ANR	1675096	Parameter	channel_unit * pSnd	1:72:72:89	1674737	2	True				
ANR	1675097	ParameterType	channel_unit *		1674737	0					
ANR	1675098	Identifier	pSnd		1674737	1					
ANR	1675099	Parameter	float * pOut	1:92:92:102	1674737	3	True				
ANR	1675100	ParameterType	float *		1674737	0					
ANR	1675101	Identifier	pOut		1674737	1					
ANR	1675102	Parameter	int channelNum	1:105:105:118	1674737	4	True				
ANR	1675103	ParameterType	int		1674737	0					
ANR	1675104	Identifier	channelNum		1674737	1					
ANR	1675105	Parameter	int codingMode	1:121:121:134	1674737	5	True				
ANR	1675106	ParameterType	int		1674737	0					
ANR	1675107	Identifier	codingMode		1674737	1					
ANR	1675108	CFGEntryNode	ENTRY		1674737		True				
ANR	1675109	CFGExitNode	EXIT		1674737		True				
ANR	1675110	Symbol	JOINT_STEREO		1674737						
ANR	1675111	Symbol	decodeSpectrum		1674737						
ANR	1675112	Symbol	pSnd -> gainBlock		1674737						
ANR	1675113	Symbol	pSnd -> IMDCT_buf		1674737						
ANR	1675114	Symbol	numSubbands		1674737						
ANR	1675115	Symbol	get_bits		1674737						
ANR	1675116	Symbol	pOut		1674737						
ANR	1675117	Symbol	pSnd -> spectrum		1674737						
ANR	1675118	Symbol	* subbandTab		1674737						
ANR	1675119	Symbol	result		1674737						
ANR	1675120	Symbol	addTonalComponents		1674737						
ANR	1675121	Symbol	( pSnd -> gainBlock [ pSnd -> gcBlkSwitch ] ) . gBlock		1674737						
ANR	1675122	Symbol	codingMode		1674737						
ANR	1675123	Symbol	( pSnd -> gainBlock [ 1 - ( pSnd -> gcBlkSwitch ) ] ) . gBlock		1674737						
ANR	1675124	Symbol	pSnd -> prevFrame		1674737						
ANR	1675125	Symbol	gb		1674737						
ANR	1675126	Symbol	band		1674737						
ANR	1675127	Symbol	* pSnd -> gcBlkSwitch		1674737						
ANR	1675128	Symbol	* * pSnd		1674737						
ANR	1675129	Symbol	pSnd -> bandsCoded		1674737						
ANR	1675130	Symbol	pSnd -> numComponents		1674737						
ANR	1675131	Symbol	NULL		1674737						
ANR	1675132	Symbol	pSnd -> gcBlkSwitch		1674737						
ANR	1675133	Symbol	AV_LOG_ERROR		1674737						
ANR	1675134	Symbol	decodeGainControl		1674737						
ANR	1675135	Symbol	pSnd -> components		1674737						
ANR	1675136	Symbol	* pSnd -> gainBlock		1674737						
ANR	1675137	Symbol	channelNum		1674737						
ANR	1675138	Symbol	lastTonal		1674737						
ANR	1675139	Symbol	decodeTonalComponents		1674737						
ANR	1675140	Symbol	pSnd		1674737						
ANR	1675141	Symbol	* pSnd		1674737						
ANR	1675142	Symbol	q		1674737						
ANR	1675143	Symbol	numBands		1674737						
ANR	1675144	Symbol	* numSubbands		1674737						
ANR	1675145	Symbol	subbandTab		1674737						
ANR	1675146	Symbol	FFMAX		1674737						
