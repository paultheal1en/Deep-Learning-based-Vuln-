command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2005989	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_plane_02_0.c								
ANR	2005990	Function	decode_plane	1:0:0:2790							
ANR	2005991	FunctionDef	"decode_plane (UtvideoContext * c , int plane_no , uint8_t * dst , int step , int stride , int width , int height , const uint8_t * src , int src_size , int use_pred)"		2005990	0					
ANR	2005992	CompoundStatement		9:0:240:2790	2005990	0					
ANR	2005993	IdentifierDeclStatement	"int i , j , slice , pix ;"	11:4:247:267	2005990	0	True				
ANR	2005994	IdentifierDecl	i		2005990	0					
ANR	2005995	IdentifierDeclType	int		2005990	0					
ANR	2005996	Identifier	i		2005990	1					
ANR	2005997	IdentifierDecl	j		2005990	1					
ANR	2005998	IdentifierDeclType	int		2005990	0					
ANR	2005999	Identifier	j		2005990	1					
ANR	2006000	IdentifierDecl	slice		2005990	2					
ANR	2006001	IdentifierDeclType	int		2005990	0					
ANR	2006002	Identifier	slice		2005990	1					
ANR	2006003	IdentifierDecl	pix		2005990	3					
ANR	2006004	IdentifierDeclType	int		2005990	0					
ANR	2006005	Identifier	pix		2005990	1					
ANR	2006006	IdentifierDeclStatement	"int sstart , send ;"	13:4:274:290	2005990	1	True				
ANR	2006007	IdentifierDecl	sstart		2005990	0					
ANR	2006008	IdentifierDeclType	int		2005990	0					
ANR	2006009	Identifier	sstart		2005990	1					
ANR	2006010	IdentifierDecl	send		2005990	1					
ANR	2006011	IdentifierDeclType	int		2005990	0					
ANR	2006012	Identifier	send		2005990	1					
ANR	2006013	IdentifierDeclStatement	VLC vlc ;	15:4:297:304	2005990	2	True				
ANR	2006014	IdentifierDecl	vlc		2005990	0					
ANR	2006015	IdentifierDeclType	VLC		2005990	0					
ANR	2006016	Identifier	vlc		2005990	1					
ANR	2006017	IdentifierDeclStatement	GetBitContext gb ;	17:4:311:327	2005990	3	True				
ANR	2006018	IdentifierDecl	gb		2005990	0					
ANR	2006019	IdentifierDeclType	GetBitContext		2005990	0					
ANR	2006020	Identifier	gb		2005990	1					
ANR	2006021	IdentifierDeclStatement	int prev ;	19:4:334:342	2005990	4	True				
ANR	2006022	IdentifierDecl	prev		2005990	0					
ANR	2006023	IdentifierDeclType	int		2005990	0					
ANR	2006024	Identifier	prev		2005990	1					
ANR	2006025	IdentifierDeclStatement	const int cmask = ~ ( ! plane_no && c -> avctx -> pix_fmt == PIX_FMT_YUV420P ) ;	21:4:349:419	2005990	5	True				
ANR	2006026	IdentifierDecl	cmask = ~ ( ! plane_no && c -> avctx -> pix_fmt == PIX_FMT_YUV420P )		2005990	0					
ANR	2006027	IdentifierDeclType	const int		2005990	0					
ANR	2006028	Identifier	cmask		2005990	1					
ANR	2006029	AssignmentExpression	cmask = ~ ( ! plane_no && c -> avctx -> pix_fmt == PIX_FMT_YUV420P )		2005990	2		=			
ANR	2006030	Identifier	cmask		2005990	0					
ANR	2006031	UnaryOperationExpression	~ ( ! plane_no && c -> avctx -> pix_fmt == PIX_FMT_YUV420P )		2005990	1					
ANR	2006032	UnaryOperator	~		2005990	0					
ANR	2006033	AndExpression	! plane_no && c -> avctx -> pix_fmt == PIX_FMT_YUV420P		2005990	1		&&			
ANR	2006034	UnaryOperationExpression	! plane_no		2005990	0					
ANR	2006035	UnaryOperator	!		2005990	0					
ANR	2006036	Identifier	plane_no		2005990	1					
ANR	2006037	EqualityExpression	c -> avctx -> pix_fmt == PIX_FMT_YUV420P		2005990	1		==			
ANR	2006038	PtrMemberAccess	c -> avctx -> pix_fmt		2005990	0					
ANR	2006039	PtrMemberAccess	c -> avctx		2005990	0					
ANR	2006040	Identifier	c		2005990	0					
ANR	2006041	Identifier	avctx		2005990	1					
ANR	2006042	Identifier	pix_fmt		2005990	1					
ANR	2006043	Identifier	PIX_FMT_YUV420P		2005990	1					
ANR	2006044	IfStatement	"if ( build_huff ( src , & vlc ) )"		2005990	6					
ANR	2006045	Condition	"build_huff ( src , & vlc )"	25:8:432:452	2005990	0	True				
ANR	2006046	CallExpression	"build_huff ( src , & vlc )"		2005990	0					
ANR	2006047	Callee	build_huff		2005990	0					
ANR	2006048	Identifier	build_huff		2005990	0					
ANR	2006049	ArgumentList	src		2005990	1					
ANR	2006050	Argument	src		2005990	0					
ANR	2006051	Identifier	src		2005990	0					
ANR	2006052	Argument	& vlc		2005990	1					
ANR	2006053	UnaryOperationExpression	& vlc		2005990	0					
ANR	2006054	UnaryOperator	&		2005990	0					
ANR	2006055	Identifier	vlc		2005990	1					
ANR	2006056	CompoundStatement		17:31:214:214	2005990	1					
ANR	2006057	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Cannot build Huffman codes\\n"" )"	27:8:466:528	2005990	0	True				
ANR	2006058	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Cannot build Huffman codes\\n"" )"		2005990	0					
ANR	2006059	Callee	av_log		2005990	0					
ANR	2006060	Identifier	av_log		2005990	0					
ANR	2006061	ArgumentList	c -> avctx		2005990	1					
ANR	2006062	Argument	c -> avctx		2005990	0					
ANR	2006063	PtrMemberAccess	c -> avctx		2005990	0					
ANR	2006064	Identifier	c		2005990	0					
ANR	2006065	Identifier	avctx		2005990	1					
ANR	2006066	Argument	AV_LOG_ERROR		2005990	1					
ANR	2006067	Identifier	AV_LOG_ERROR		2005990	0					
ANR	2006068	Argument	"""Cannot build Huffman codes\\n"""		2005990	2					
ANR	2006069	PrimaryExpression	"""Cannot build Huffman codes\\n"""		2005990	0					
ANR	2006070	ReturnStatement	return AVERROR_INVALIDDATA ;	29:8:539:565	2005990	1	True				
ANR	2006071	Identifier	AVERROR_INVALIDDATA		2005990	0					
ANR	2006072	ExpressionStatement	src += 256	35:4:581:596	2005990	7	True				
ANR	2006073	AssignmentExpression	src += 256		2005990	0		+=			
ANR	2006074	Identifier	src		2005990	0					
ANR	2006075	PrimaryExpression	256		2005990	1					
ANR	2006076	ExpressionStatement	src_size -= 256	37:4:603:618	2005990	8	True				
ANR	2006077	AssignmentExpression	src_size -= 256		2005990	0		-=			
ANR	2006078	Identifier	src_size		2005990	0					
ANR	2006079	PrimaryExpression	256		2005990	1					
ANR	2006080	ExpressionStatement	send = 0	41:4:627:635	2005990	9	True				
ANR	2006081	AssignmentExpression	send = 0		2005990	0		=			
ANR	2006082	Identifier	send		2005990	0					
ANR	2006083	PrimaryExpression	0		2005990	1					
ANR	2006084	ForStatement	for ( slice = 0 ; slice < c -> slices ; slice ++ )		2005990	10					
ANR	2006085	ForInit	slice = 0 ;	43:9:647:656	2005990	0	True				
ANR	2006086	AssignmentExpression	slice = 0		2005990	0		=			
ANR	2006087	Identifier	slice		2005990	0					
ANR	2006088	PrimaryExpression	0		2005990	1					
ANR	2006089	Condition	slice < c -> slices	43:20:658:674	2005990	1	True				
ANR	2006090	RelationalExpression	slice < c -> slices		2005990	0		<			
ANR	2006091	Identifier	slice		2005990	0					
ANR	2006092	PtrMemberAccess	c -> slices		2005990	1					
ANR	2006093	Identifier	c		2005990	0					
ANR	2006094	Identifier	slices		2005990	1					
ANR	2006095	PostIncDecOperationExpression	slice ++	43:39:677:683	2005990	2	True				
ANR	2006096	Identifier	slice		2005990	0					
ANR	2006097	IncDec	++		2005990	1					
ANR	2006098	CompoundStatement		39:8:480:528	2005990	3					
ANR	2006099	IdentifierDeclStatement	uint8_t * dest ;	45:8:697:710	2005990	0	True				
ANR	2006100	IdentifierDecl	* dest		2005990	0					
ANR	2006101	IdentifierDeclType	uint8_t *		2005990	0					
ANR	2006102	Identifier	dest		2005990	1					
ANR	2006103	IdentifierDeclStatement	"int slice_data_start , slice_data_end , slice_size ;"	47:8:721:769	2005990	1	True				
ANR	2006104	IdentifierDecl	slice_data_start		2005990	0					
ANR	2006105	IdentifierDeclType	int		2005990	0					
ANR	2006106	Identifier	slice_data_start		2005990	1					
ANR	2006107	IdentifierDecl	slice_data_end		2005990	1					
ANR	2006108	IdentifierDeclType	int		2005990	0					
ANR	2006109	Identifier	slice_data_end		2005990	1					
ANR	2006110	IdentifierDecl	slice_size		2005990	2					
ANR	2006111	IdentifierDeclType	int		2005990	0					
ANR	2006112	Identifier	slice_size		2005990	1					
ANR	2006113	ExpressionStatement	sstart = send	51:8:782:795	2005990	2	True				
ANR	2006114	AssignmentExpression	sstart = send		2005990	0		=			
ANR	2006115	Identifier	sstart		2005990	0					
ANR	2006116	Identifier	send		2005990	1					
ANR	2006117	ExpressionStatement	send = ( height * ( slice + 1 ) / c -> slices ) & cmask	53:8:806:857	2005990	3	True				
ANR	2006118	AssignmentExpression	send = ( height * ( slice + 1 ) / c -> slices ) & cmask		2005990	0		=			
ANR	2006119	Identifier	send		2005990	0					
ANR	2006120	BitAndExpression	( height * ( slice + 1 ) / c -> slices ) & cmask		2005990	1		&			
ANR	2006121	MultiplicativeExpression	height * ( slice + 1 ) / c -> slices		2005990	0		*			
ANR	2006122	Identifier	height		2005990	0					
ANR	2006123	MultiplicativeExpression	( slice + 1 ) / c -> slices		2005990	1		/			
ANR	2006124	AdditiveExpression	slice + 1		2005990	0		+			
ANR	2006125	Identifier	slice		2005990	0					
ANR	2006126	PrimaryExpression	1		2005990	1					
ANR	2006127	PtrMemberAccess	c -> slices		2005990	1					
ANR	2006128	Identifier	c		2005990	0					
ANR	2006129	Identifier	slices		2005990	1					
ANR	2006130	Identifier	cmask		2005990	1					
ANR	2006131	ExpressionStatement	dest = dst + sstart * stride	55:8:868:898	2005990	4	True				
ANR	2006132	AssignmentExpression	dest = dst + sstart * stride		2005990	0		=			
ANR	2006133	Identifier	dest		2005990	0					
ANR	2006134	AdditiveExpression	dst + sstart * stride		2005990	1		+			
ANR	2006135	Identifier	dst		2005990	0					
ANR	2006136	MultiplicativeExpression	sstart * stride		2005990	1		*			
ANR	2006137	Identifier	sstart		2005990	0					
ANR	2006138	Identifier	stride		2005990	1					
ANR	2006139	ExpressionStatement	slice_data_start = slice ? AV_RL32 ( src + slice * 4 - 4 ) : 0	61:8:973:1032	2005990	5	True				
ANR	2006140	AssignmentExpression	slice_data_start = slice ? AV_RL32 ( src + slice * 4 - 4 ) : 0		2005990	0		=			
ANR	2006141	Identifier	slice_data_start		2005990	0					
ANR	2006142	ConditionalExpression	slice ? AV_RL32 ( src + slice * 4 - 4 ) : 0		2005990	1					
ANR	2006143	Condition	slice		2005990	0					
ANR	2006144	Identifier	slice		2005990	0					
ANR	2006145	CallExpression	AV_RL32 ( src + slice * 4 - 4 )		2005990	1					
ANR	2006146	Callee	AV_RL32		2005990	0					
ANR	2006147	Identifier	AV_RL32		2005990	0					
ANR	2006148	ArgumentList	src + slice * 4 - 4		2005990	1					
ANR	2006149	Argument	src + slice * 4 - 4		2005990	0					
ANR	2006150	AdditiveExpression	src + slice * 4 - 4		2005990	0		+			
ANR	2006151	Identifier	src		2005990	0					
ANR	2006152	AdditiveExpression	slice * 4 - 4		2005990	1		-			
ANR	2006153	MultiplicativeExpression	slice * 4		2005990	0		*			
ANR	2006154	Identifier	slice		2005990	0					
ANR	2006155	PrimaryExpression	4		2005990	1					
ANR	2006156	PrimaryExpression	4		2005990	1					
ANR	2006157	PrimaryExpression	0		2005990	2					
ANR	2006158	ExpressionStatement	slice_data_end = AV_RL32 ( src + slice * 4 )	63:8:1043:1086	2005990	6	True				
ANR	2006159	AssignmentExpression	slice_data_end = AV_RL32 ( src + slice * 4 )		2005990	0		=			
ANR	2006160	Identifier	slice_data_end		2005990	0					
ANR	2006161	CallExpression	AV_RL32 ( src + slice * 4 )		2005990	1					
ANR	2006162	Callee	AV_RL32		2005990	0					
ANR	2006163	Identifier	AV_RL32		2005990	0					
ANR	2006164	ArgumentList	src + slice * 4		2005990	1					
ANR	2006165	Argument	src + slice * 4		2005990	0					
ANR	2006166	AdditiveExpression	src + slice * 4		2005990	0		+			
ANR	2006167	Identifier	src		2005990	0					
ANR	2006168	MultiplicativeExpression	slice * 4		2005990	1		*			
ANR	2006169	Identifier	slice		2005990	0					
ANR	2006170	PrimaryExpression	4		2005990	1					
ANR	2006171	ExpressionStatement	slice_size = slice_data_end - slice_data_start	65:8:1097:1149	2005990	7	True				
ANR	2006172	AssignmentExpression	slice_size = slice_data_end - slice_data_start		2005990	0		=			
ANR	2006173	Identifier	slice_size		2005990	0					
ANR	2006174	AdditiveExpression	slice_data_end - slice_data_start		2005990	1		-			
ANR	2006175	Identifier	slice_data_end		2005990	0					
ANR	2006176	Identifier	slice_data_start		2005990	1					
ANR	2006177	IfStatement	if ( ! slice_size )		2005990	8					
ANR	2006178	Condition	! slice_size	69:12:1166:1176	2005990	0	True				
ANR	2006179	UnaryOperationExpression	! slice_size		2005990	0					
ANR	2006180	UnaryOperator	!		2005990	0					
ANR	2006181	Identifier	slice_size		2005990	1					
ANR	2006182	CompoundStatement		61:25:938:938	2005990	1					
ANR	2006183	ForStatement	for ( j = sstart ; j < send ; j ++ )		2005990	0					
ANR	2006184	ForInit	j = sstart ;	71:17:1199:1209	2005990	0	True				
ANR	2006185	AssignmentExpression	j = sstart		2005990	0		=			
ANR	2006186	Identifier	j		2005990	0					
ANR	2006187	Identifier	sstart		2005990	1					
ANR	2006188	Condition	j < send	71:29:1211:1218	2005990	1	True				
ANR	2006189	RelationalExpression	j < send		2005990	0		<			
ANR	2006190	Identifier	j		2005990	0					
ANR	2006191	Identifier	send		2005990	1					
ANR	2006192	PostIncDecOperationExpression	j ++	71:39:1221:1223	2005990	2	True				
ANR	2006193	Identifier	j		2005990	0					
ANR	2006194	IncDec	++		2005990	1					
ANR	2006195	CompoundStatement		63:44:985:985	2005990	3					
ANR	2006196	ForStatement	for ( i = 0 ; i < width * step ; i += step )		2005990	0					
ANR	2006197	ForInit	i = 0 ;	73:21:1250:1255	2005990	0	True				
ANR	2006198	AssignmentExpression	i = 0		2005990	0		=			
ANR	2006199	Identifier	i		2005990	0					
ANR	2006200	PrimaryExpression	0		2005990	1					
ANR	2006201	Condition	i < width * step	73:28:1257:1272	2005990	1	True				
ANR	2006202	RelationalExpression	i < width * step		2005990	0		<			
ANR	2006203	Identifier	i		2005990	0					
ANR	2006204	MultiplicativeExpression	width * step		2005990	1		*			
ANR	2006205	Identifier	width		2005990	0					
ANR	2006206	Identifier	step		2005990	1					
ANR	2006207	AssignmentExpression	i += step	73:46:1275:1283	2005990	2	True	+=			
ANR	2006208	Identifier	i		2005990	0					
ANR	2006209	Identifier	step		2005990	1					
ANR	2006210	ExpressionStatement	dest [ i ] = 0x80	75:20:1307:1321	2005990	3	True				
ANR	2006211	AssignmentExpression	dest [ i ] = 0x80		2005990	0		=			
ANR	2006212	ArrayIndexing	dest [ i ]		2005990	0					
ANR	2006213	Identifier	dest		2005990	0					
ANR	2006214	Identifier	i		2005990	1					
ANR	2006215	PrimaryExpression	0x80		2005990	1					
ANR	2006216	ExpressionStatement	dest += stride	77:16:1340:1354	2005990	1	True				
ANR	2006217	AssignmentExpression	dest += stride		2005990	0		+=			
ANR	2006218	Identifier	dest		2005990	0					
ANR	2006219	Identifier	stride		2005990	1					
ANR	2006220	ContinueStatement	continue ;	81:12:1384:1392	2005990	1	True				
ANR	2006221	ExpressionStatement	"memcpy ( c -> slice_bits , src + slice_data_start + c -> slices * 4 , slice_size )"	87:8:1416:1489	2005990	9	True				
ANR	2006222	CallExpression	"memcpy ( c -> slice_bits , src + slice_data_start + c -> slices * 4 , slice_size )"		2005990	0					
ANR	2006223	Callee	memcpy		2005990	0					
ANR	2006224	Identifier	memcpy		2005990	0					
ANR	2006225	ArgumentList	c -> slice_bits		2005990	1					
ANR	2006226	Argument	c -> slice_bits		2005990	0					
ANR	2006227	PtrMemberAccess	c -> slice_bits		2005990	0					
ANR	2006228	Identifier	c		2005990	0					
ANR	2006229	Identifier	slice_bits		2005990	1					
ANR	2006230	Argument	src + slice_data_start + c -> slices * 4		2005990	1					
ANR	2006231	AdditiveExpression	src + slice_data_start + c -> slices * 4		2005990	0		+			
ANR	2006232	Identifier	src		2005990	0					
ANR	2006233	AdditiveExpression	slice_data_start + c -> slices * 4		2005990	1		+			
ANR	2006234	Identifier	slice_data_start		2005990	0					
ANR	2006235	MultiplicativeExpression	c -> slices * 4		2005990	1		*			
ANR	2006236	PtrMemberAccess	c -> slices		2005990	0					
ANR	2006237	Identifier	c		2005990	0					
ANR	2006238	Identifier	slices		2005990	1					
ANR	2006239	PrimaryExpression	4		2005990	1					
ANR	2006240	Argument	slice_size		2005990	2					
ANR	2006241	Identifier	slice_size		2005990	0					
ANR	2006242	ExpressionStatement	"memset ( c -> slice_bits + slice_size , 0 , FF_INPUT_BUFFER_PADDING_SIZE )"	89:8:1500:1567	2005990	10	True				
ANR	2006243	CallExpression	"memset ( c -> slice_bits + slice_size , 0 , FF_INPUT_BUFFER_PADDING_SIZE )"		2005990	0					
ANR	2006244	Callee	memset		2005990	0					
ANR	2006245	Identifier	memset		2005990	0					
ANR	2006246	ArgumentList	c -> slice_bits + slice_size		2005990	1					
ANR	2006247	Argument	c -> slice_bits + slice_size		2005990	0					
ANR	2006248	AdditiveExpression	c -> slice_bits + slice_size		2005990	0		+			
ANR	2006249	PtrMemberAccess	c -> slice_bits		2005990	0					
ANR	2006250	Identifier	c		2005990	0					
ANR	2006251	Identifier	slice_bits		2005990	1					
ANR	2006252	Identifier	slice_size		2005990	1					
ANR	2006253	Argument	0		2005990	1					
ANR	2006254	PrimaryExpression	0		2005990	0					
ANR	2006255	Argument	FF_INPUT_BUFFER_PADDING_SIZE		2005990	2					
ANR	2006256	Identifier	FF_INPUT_BUFFER_PADDING_SIZE		2005990	0					
ANR	2006257	ExpressionStatement	"c -> dsp . bswap_buf ( ( uint32_t * ) c -> slice_bits , ( uint32_t * ) c -> slice_bits , ( slice_data_end - slice_data_start + 3 ) >> 2 )"	91:8:1578:1718	2005990	11	True				
ANR	2006258	CallExpression	"c -> dsp . bswap_buf ( ( uint32_t * ) c -> slice_bits , ( uint32_t * ) c -> slice_bits , ( slice_data_end - slice_data_start + 3 ) >> 2 )"		2005990	0					
ANR	2006259	Callee	c -> dsp . bswap_buf		2005990	0					
ANR	2006260	MemberAccess	c -> dsp . bswap_buf		2005990	0					
ANR	2006261	PtrMemberAccess	c -> dsp		2005990	0					
ANR	2006262	Identifier	c		2005990	0					
ANR	2006263	Identifier	dsp		2005990	1					
ANR	2006264	Identifier	bswap_buf		2005990	1					
ANR	2006265	ArgumentList	( uint32_t * ) c -> slice_bits		2005990	1					
ANR	2006266	Argument	( uint32_t * ) c -> slice_bits		2005990	0					
ANR	2006267	CastExpression	( uint32_t * ) c -> slice_bits		2005990	0					
ANR	2006268	CastTarget	uint32_t *		2005990	0					
ANR	2006269	PtrMemberAccess	c -> slice_bits		2005990	1					
ANR	2006270	Identifier	c		2005990	0					
ANR	2006271	Identifier	slice_bits		2005990	1					
ANR	2006272	Argument	( uint32_t * ) c -> slice_bits		2005990	1					
ANR	2006273	CastExpression	( uint32_t * ) c -> slice_bits		2005990	0					
ANR	2006274	CastTarget	uint32_t *		2005990	0					
ANR	2006275	PtrMemberAccess	c -> slice_bits		2005990	1					
ANR	2006276	Identifier	c		2005990	0					
ANR	2006277	Identifier	slice_bits		2005990	1					
ANR	2006278	Argument	( slice_data_end - slice_data_start + 3 ) >> 2		2005990	2					
ANR	2006279	ShiftExpression	( slice_data_end - slice_data_start + 3 ) >> 2		2005990	0		>>			
ANR	2006280	AdditiveExpression	slice_data_end - slice_data_start + 3		2005990	0		-			
ANR	2006281	Identifier	slice_data_end		2005990	0					
ANR	2006282	AdditiveExpression	slice_data_start + 3		2005990	1		+			
ANR	2006283	Identifier	slice_data_start		2005990	0					
ANR	2006284	PrimaryExpression	3		2005990	1					
ANR	2006285	PrimaryExpression	2		2005990	1					
ANR	2006286	ExpressionStatement	"init_get_bits ( & gb , c -> slice_bits , slice_size * 8 )"	95:8:1729:1778	2005990	12	True				
ANR	2006287	CallExpression	"init_get_bits ( & gb , c -> slice_bits , slice_size * 8 )"		2005990	0					
ANR	2006288	Callee	init_get_bits		2005990	0					
ANR	2006289	Identifier	init_get_bits		2005990	0					
ANR	2006290	ArgumentList	& gb		2005990	1					
ANR	2006291	Argument	& gb		2005990	0					
ANR	2006292	UnaryOperationExpression	& gb		2005990	0					
ANR	2006293	UnaryOperator	&		2005990	0					
ANR	2006294	Identifier	gb		2005990	1					
ANR	2006295	Argument	c -> slice_bits		2005990	1					
ANR	2006296	PtrMemberAccess	c -> slice_bits		2005990	0					
ANR	2006297	Identifier	c		2005990	0					
ANR	2006298	Identifier	slice_bits		2005990	1					
ANR	2006299	Argument	slice_size * 8		2005990	2					
ANR	2006300	MultiplicativeExpression	slice_size * 8		2005990	0		*			
ANR	2006301	Identifier	slice_size		2005990	0					
ANR	2006302	PrimaryExpression	8		2005990	1					
ANR	2006303	ExpressionStatement	prev = 0x80	99:8:1791:1802	2005990	13	True				
ANR	2006304	AssignmentExpression	prev = 0x80		2005990	0		=			
ANR	2006305	Identifier	prev		2005990	0					
ANR	2006306	PrimaryExpression	0x80		2005990	1					
ANR	2006307	ForStatement	for ( j = sstart ; j < send ; j ++ )		2005990	14					
ANR	2006308	ForInit	j = sstart ;	101:13:1818:1828	2005990	0	True				
ANR	2006309	AssignmentExpression	j = sstart		2005990	0		=			
ANR	2006310	Identifier	j		2005990	0					
ANR	2006311	Identifier	sstart		2005990	1					
ANR	2006312	Condition	j < send	101:25:1830:1837	2005990	1	True				
ANR	2006313	RelationalExpression	j < send		2005990	0		<			
ANR	2006314	Identifier	j		2005990	0					
ANR	2006315	Identifier	send		2005990	1					
ANR	2006316	PostIncDecOperationExpression	j ++	101:35:1840:1842	2005990	2	True				
ANR	2006317	Identifier	j		2005990	0					
ANR	2006318	IncDec	++		2005990	1					
ANR	2006319	CompoundStatement		93:40:1604:1604	2005990	3					
ANR	2006320	ForStatement	for ( i = 0 ; i < width * step ; i += step )		2005990	0					
ANR	2006321	ForInit	i = 0 ;	103:17:1865:1870	2005990	0	True				
ANR	2006322	AssignmentExpression	i = 0		2005990	0		=			
ANR	2006323	Identifier	i		2005990	0					
ANR	2006324	PrimaryExpression	0		2005990	1					
ANR	2006325	Condition	i < width * step	103:24:1872:1887	2005990	1	True				
ANR	2006326	RelationalExpression	i < width * step		2005990	0		<			
ANR	2006327	Identifier	i		2005990	0					
ANR	2006328	MultiplicativeExpression	width * step		2005990	1		*			
ANR	2006329	Identifier	width		2005990	0					
ANR	2006330	Identifier	step		2005990	1					
ANR	2006331	AssignmentExpression	i += step	103:42:1890:1898	2005990	2	True	+=			
ANR	2006332	Identifier	i		2005990	0					
ANR	2006333	Identifier	step		2005990	1					
ANR	2006334	CompoundStatement		95:53:1660:1660	2005990	3					
ANR	2006335	IfStatement	if ( get_bits_left ( & gb ) <= 0 )		2005990	0					
ANR	2006336	Condition	get_bits_left ( & gb ) <= 0	105:20:1924:1946	2005990	0	True				
ANR	2006337	RelationalExpression	get_bits_left ( & gb ) <= 0		2005990	0		<=			
ANR	2006338	CallExpression	get_bits_left ( & gb )		2005990	0					
ANR	2006339	Callee	get_bits_left		2005990	0					
ANR	2006340	Identifier	get_bits_left		2005990	0					
ANR	2006341	ArgumentList	& gb		2005990	1					
ANR	2006342	Argument	& gb		2005990	0					
ANR	2006343	UnaryOperationExpression	& gb		2005990	0					
ANR	2006344	UnaryOperator	&		2005990	0					
ANR	2006345	Identifier	gb		2005990	1					
ANR	2006346	PrimaryExpression	0		2005990	1					
ANR	2006347	CompoundStatement		97:45:1708:1708	2005990	1					
ANR	2006348	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Slice decoding ran out of bits\\n"" )"	107:20:1972:2038	2005990	0	True				
ANR	2006349	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Slice decoding ran out of bits\\n"" )"		2005990	0					
ANR	2006350	Callee	av_log		2005990	0					
ANR	2006351	Identifier	av_log		2005990	0					
ANR	2006352	ArgumentList	c -> avctx		2005990	1					
ANR	2006353	Argument	c -> avctx		2005990	0					
ANR	2006354	PtrMemberAccess	c -> avctx		2005990	0					
ANR	2006355	Identifier	c		2005990	0					
ANR	2006356	Identifier	avctx		2005990	1					
ANR	2006357	Argument	AV_LOG_ERROR		2005990	1					
ANR	2006358	Identifier	AV_LOG_ERROR		2005990	0					
ANR	2006359	Argument	"""Slice decoding ran out of bits\\n"""		2005990	2					
ANR	2006360	PrimaryExpression	"""Slice decoding ran out of bits\\n"""		2005990	0					
ANR	2006361	GotoStatement	goto fail ;	109:20:2061:2070	2005990	1	True				
ANR	2006362	Identifier	fail		2005990	0					
ANR	2006363	ExpressionStatement	"pix = get_vlc2 ( & gb , vlc . table , vlc . bits , 4 )"	113:16:2108:2151	2005990	1	True				
ANR	2006364	AssignmentExpression	"pix = get_vlc2 ( & gb , vlc . table , vlc . bits , 4 )"		2005990	0		=			
ANR	2006365	Identifier	pix		2005990	0					
ANR	2006366	CallExpression	"get_vlc2 ( & gb , vlc . table , vlc . bits , 4 )"		2005990	1					
ANR	2006367	Callee	get_vlc2		2005990	0					
ANR	2006368	Identifier	get_vlc2		2005990	0					
ANR	2006369	ArgumentList	& gb		2005990	1					
ANR	2006370	Argument	& gb		2005990	0					
ANR	2006371	UnaryOperationExpression	& gb		2005990	0					
ANR	2006372	UnaryOperator	&		2005990	0					
ANR	2006373	Identifier	gb		2005990	1					
ANR	2006374	Argument	vlc . table		2005990	1					
ANR	2006375	MemberAccess	vlc . table		2005990	0					
ANR	2006376	Identifier	vlc		2005990	0					
ANR	2006377	Identifier	table		2005990	1					
ANR	2006378	Argument	vlc . bits		2005990	2					
ANR	2006379	MemberAccess	vlc . bits		2005990	0					
ANR	2006380	Identifier	vlc		2005990	0					
ANR	2006381	Identifier	bits		2005990	1					
ANR	2006382	Argument	4		2005990	3					
ANR	2006383	PrimaryExpression	4		2005990	0					
ANR	2006384	IfStatement	if ( pix < 0 )		2005990	2					
ANR	2006385	Condition	pix < 0	115:20:2174:2180	2005990	0	True				
ANR	2006386	RelationalExpression	pix < 0		2005990	0		<			
ANR	2006387	Identifier	pix		2005990	0					
ANR	2006388	PrimaryExpression	0		2005990	1					
ANR	2006389	CompoundStatement		107:29:1942:1942	2005990	1					
ANR	2006390	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Decoding error\\n"" )"	117:20:2206:2256	2005990	0	True				
ANR	2006391	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Decoding error\\n"" )"		2005990	0					
ANR	2006392	Callee	av_log		2005990	0					
ANR	2006393	Identifier	av_log		2005990	0					
ANR	2006394	ArgumentList	c -> avctx		2005990	1					
ANR	2006395	Argument	c -> avctx		2005990	0					
ANR	2006396	PtrMemberAccess	c -> avctx		2005990	0					
ANR	2006397	Identifier	c		2005990	0					
ANR	2006398	Identifier	avctx		2005990	1					
ANR	2006399	Argument	AV_LOG_ERROR		2005990	1					
ANR	2006400	Identifier	AV_LOG_ERROR		2005990	0					
ANR	2006401	Argument	"""Decoding error\\n"""		2005990	2					
ANR	2006402	PrimaryExpression	"""Decoding error\\n"""		2005990	0					
ANR	2006403	GotoStatement	goto fail ;	119:20:2279:2288	2005990	1	True				
ANR	2006404	Identifier	fail		2005990	0					
ANR	2006405	IfStatement	if ( use_pred )		2005990	3					
ANR	2006406	Condition	use_pred	123:20:2330:2337	2005990	0	True				
ANR	2006407	Identifier	use_pred		2005990	0					
ANR	2006408	CompoundStatement		115:30:2099:2099	2005990	1					
ANR	2006409	ExpressionStatement	prev += pix	125:20:2363:2374	2005990	0	True				
ANR	2006410	AssignmentExpression	prev += pix		2005990	0		+=			
ANR	2006411	Identifier	prev		2005990	0					
ANR	2006412	Identifier	pix		2005990	1					
ANR	2006413	ExpressionStatement	pix = prev	127:20:2397:2409	2005990	1	True				
ANR	2006414	AssignmentExpression	pix = prev		2005990	0		=			
ANR	2006415	Identifier	pix		2005990	0					
ANR	2006416	Identifier	prev		2005990	1					
ANR	2006417	ExpressionStatement	dest [ i ] = pix	131:16:2447:2460	2005990	4	True				
ANR	2006418	AssignmentExpression	dest [ i ] = pix		2005990	0		=			
ANR	2006419	ArrayIndexing	dest [ i ]		2005990	0					
ANR	2006420	Identifier	dest		2005990	0					
ANR	2006421	Identifier	i		2005990	1					
ANR	2006422	Identifier	pix		2005990	1					
ANR	2006423	ExpressionStatement	dest += stride	135:12:2490:2504	2005990	1	True				
ANR	2006424	AssignmentExpression	dest += stride		2005990	0		+=			
ANR	2006425	Identifier	dest		2005990	0					
ANR	2006426	Identifier	stride		2005990	1					
ANR	2006427	IfStatement	if ( get_bits_left ( & gb ) > 32 )		2005990	15					
ANR	2006428	Condition	get_bits_left ( & gb ) > 32	139:12:2530:2552	2005990	0	True				
ANR	2006429	RelationalExpression	get_bits_left ( & gb ) > 32		2005990	0		>			
ANR	2006430	CallExpression	get_bits_left ( & gb )		2005990	0					
ANR	2006431	Callee	get_bits_left		2005990	0					
ANR	2006432	Identifier	get_bits_left		2005990	0					
ANR	2006433	ArgumentList	& gb		2005990	1					
ANR	2006434	Argument	& gb		2005990	0					
ANR	2006435	UnaryOperationExpression	& gb		2005990	0					
ANR	2006436	UnaryOperator	&		2005990	0					
ANR	2006437	Identifier	gb		2005990	1					
ANR	2006438	PrimaryExpression	32		2005990	1					
ANR	2006439	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_WARNING , ""%d bits left after decoding slice\\n"" , get_bits_left ( & gb ) )"	141:12:2568:2679	2005990	1	True				
ANR	2006440	CallExpression	"av_log ( c -> avctx , AV_LOG_WARNING , ""%d bits left after decoding slice\\n"" , get_bits_left ( & gb ) )"		2005990	0					
ANR	2006441	Callee	av_log		2005990	0					
ANR	2006442	Identifier	av_log		2005990	0					
ANR	2006443	ArgumentList	c -> avctx		2005990	1					
ANR	2006444	Argument	c -> avctx		2005990	0					
ANR	2006445	PtrMemberAccess	c -> avctx		2005990	0					
ANR	2006446	Identifier	c		2005990	0					
ANR	2006447	Identifier	avctx		2005990	1					
ANR	2006448	Argument	AV_LOG_WARNING		2005990	1					
ANR	2006449	Identifier	AV_LOG_WARNING		2005990	0					
ANR	2006450	Argument	"""%d bits left after decoding slice\\n"""		2005990	2					
ANR	2006451	PrimaryExpression	"""%d bits left after decoding slice\\n"""		2005990	0					
ANR	2006452	Argument	get_bits_left ( & gb )		2005990	3					
ANR	2006453	CallExpression	get_bits_left ( & gb )		2005990	0					
ANR	2006454	Callee	get_bits_left		2005990	0					
ANR	2006455	Identifier	get_bits_left		2005990	0					
ANR	2006456	ArgumentList	& gb		2005990	1					
ANR	2006457	Argument	& gb		2005990	0					
ANR	2006458	UnaryOperationExpression	& gb		2005990	0					
ANR	2006459	UnaryOperator	&		2005990	0					
ANR	2006460	Identifier	gb		2005990	1					
ANR	2006461	ExpressionStatement	free_vlc ( & vlc )	149:4:2695:2709	2005990	11	True				
ANR	2006462	CallExpression	free_vlc ( & vlc )		2005990	0					
ANR	2006463	Callee	free_vlc		2005990	0					
ANR	2006464	Identifier	free_vlc		2005990	0					
ANR	2006465	ArgumentList	& vlc		2005990	1					
ANR	2006466	Argument	& vlc		2005990	0					
ANR	2006467	UnaryOperationExpression	& vlc		2005990	0					
ANR	2006468	UnaryOperator	&		2005990	0					
ANR	2006469	Identifier	vlc		2005990	1					
ANR	2006470	ReturnStatement	return 0 ;	153:4:2718:2726	2005990	12	True				
ANR	2006471	PrimaryExpression	0		2005990	0					
ANR	2006472	Label	fail :	155:0:2729:2733	2005990	13	True				
ANR	2006473	Identifier	fail		2005990	0					
ANR	2006474	ExpressionStatement	free_vlc ( & vlc )	157:4:2740:2754	2005990	14	True				
ANR	2006475	CallExpression	free_vlc ( & vlc )		2005990	0					
ANR	2006476	Callee	free_vlc		2005990	0					
ANR	2006477	Identifier	free_vlc		2005990	0					
ANR	2006478	ArgumentList	& vlc		2005990	1					
ANR	2006479	Argument	& vlc		2005990	0					
ANR	2006480	UnaryOperationExpression	& vlc		2005990	0					
ANR	2006481	UnaryOperator	&		2005990	0					
ANR	2006482	Identifier	vlc		2005990	1					
ANR	2006483	ReturnStatement	return AVERROR_INVALIDDATA ;	159:4:2761:2787	2005990	15	True				
ANR	2006484	Identifier	AVERROR_INVALIDDATA		2005990	0					
ANR	2006485	ReturnType	static int		2005990	1					
ANR	2006486	Identifier	decode_plane		2005990	2					
ANR	2006487	ParameterList	"UtvideoContext * c , int plane_no , uint8_t * dst , int step , int stride , int width , int height , const uint8_t * src , int src_size , int use_pred"		2005990	3					
ANR	2006488	Parameter	UtvideoContext * c	1:24:24:40	2005990	0	True				
ANR	2006489	ParameterType	UtvideoContext *		2005990	0					
ANR	2006490	Identifier	c		2005990	1					
ANR	2006491	Parameter	int plane_no	1:43:43:54	2005990	1	True				
ANR	2006492	ParameterType	int		2005990	0					
ANR	2006493	Identifier	plane_no		2005990	1					
ANR	2006494	Parameter	uint8_t * dst	3:24:82:93	2005990	2	True				
ANR	2006495	ParameterType	uint8_t *		2005990	0					
ANR	2006496	Identifier	dst		2005990	1					
ANR	2006497	Parameter	int step	3:38:96:103	2005990	3	True				
ANR	2006498	ParameterType	int		2005990	0					
ANR	2006499	Identifier	step		2005990	1					
ANR	2006500	Parameter	int stride	3:48:106:115	2005990	4	True				
ANR	2006501	ParameterType	int		2005990	0					
ANR	2006502	Identifier	stride		2005990	1					
ANR	2006503	Parameter	int width	5:24:143:151	2005990	5	True				
ANR	2006504	ParameterType	int		2005990	0					
ANR	2006505	Identifier	width		2005990	1					
ANR	2006506	Parameter	int height	5:35:154:163	2005990	6	True				
ANR	2006507	ParameterType	int		2005990	0					
ANR	2006508	Identifier	height		2005990	1					
ANR	2006509	Parameter	const uint8_t * src	7:24:191:208	2005990	7	True				
ANR	2006510	ParameterType	const uint8_t *		2005990	0					
ANR	2006511	Identifier	src		2005990	1					
ANR	2006512	Parameter	int src_size	7:44:211:222	2005990	8	True				
ANR	2006513	ParameterType	int		2005990	0					
ANR	2006514	Identifier	src_size		2005990	1					
ANR	2006515	Parameter	int use_pred	7:58:225:236	2005990	9	True				
ANR	2006516	ParameterType	int		2005990	0					
ANR	2006517	Identifier	use_pred		2005990	1					
ANR	2006518	CFGEntryNode	ENTRY		2005990		True				
ANR	2006519	CFGExitNode	EXIT		2005990		True				
ANR	2006520	Symbol	c -> avctx -> pix_fmt		2005990						
ANR	2006521	Symbol	dst		2005990						
ANR	2006522	Symbol	& gb		2005990						
ANR	2006523	Symbol	slice_size		2005990						
ANR	2006524	Symbol	* dest		2005990						
ANR	2006525	Symbol	* c -> avctx		2005990						
ANR	2006526	Symbol	use_pred		2005990						
ANR	2006527	Symbol	sstart		2005990						
ANR	2006528	Symbol	prev		2005990						
ANR	2006529	Symbol	stride		2005990						
ANR	2006530	Symbol	dest		2005990						
ANR	2006531	Symbol	get_bits_left		2005990						
ANR	2006532	Symbol	build_huff		2005990						
ANR	2006533	Symbol	vlc . bits		2005990						
ANR	2006534	Symbol	FF_INPUT_BUFFER_PADDING_SIZE		2005990						
ANR	2006535	Symbol	PIX_FMT_YUV420P		2005990						
ANR	2006536	Symbol	& vlc		2005990						
ANR	2006537	Symbol	slice		2005990						
ANR	2006538	Symbol	gb		2005990						
ANR	2006539	Symbol	pix		2005990						
ANR	2006540	Symbol	c -> slice_bits		2005990						
ANR	2006541	Symbol	height		2005990						
ANR	2006542	Symbol	c		2005990						
ANR	2006543	Symbol	slice_data_start		2005990						
ANR	2006544	Symbol	AV_LOG_ERROR		2005990						
ANR	2006545	Symbol	c -> slices		2005990						
ANR	2006546	Symbol	src		2005990						
ANR	2006547	Symbol	vlc . table		2005990						
ANR	2006548	Symbol	* * c		2005990						
ANR	2006549	Symbol	i		2005990						
ANR	2006550	Symbol	cmask		2005990						
ANR	2006551	Symbol	j		2005990						
ANR	2006552	Symbol	plane_no		2005990						
ANR	2006553	Symbol	vlc		2005990						
ANR	2006554	Symbol	* c		2005990						
ANR	2006555	Symbol	slice_data_end		2005990						
ANR	2006556	Symbol	c -> dsp		2005990						
ANR	2006557	Symbol	src_size		2005990						
ANR	2006558	Symbol	* i		2005990						
ANR	2006559	Symbol	c -> avctx		2005990						
ANR	2006560	Symbol	AV_RL32		2005990						
ANR	2006561	Symbol	width		2005990						
ANR	2006562	Symbol	step		2005990						
ANR	2006563	Symbol	AVERROR_INVALIDDATA		2005990						
ANR	2006564	Symbol	get_vlc2		2005990						
ANR	2006565	Symbol	AV_LOG_WARNING		2005990						
ANR	2006566	Symbol	send		2005990						
