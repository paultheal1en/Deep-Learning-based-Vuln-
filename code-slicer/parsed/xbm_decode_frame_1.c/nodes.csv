command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9510391	File	/home/p4ultr4n/workplace/ReVeal/raw_code/xbm_decode_frame_1.c								
ANR	9510392	Function	xbm_decode_frame	1:0:0:2043							
ANR	9510393	FunctionDef	"xbm_decode_frame (AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt)"		9510392	0					
ANR	9510394	CompoundStatement		5:0:126:2043	9510392	0					
ANR	9510395	IdentifierDeclStatement	AVFrame * p = data ;	7:4:133:150	9510392	0	True				
ANR	9510396	IdentifierDecl	* p = data		9510392	0					
ANR	9510397	IdentifierDeclType	AVFrame *		9510392	0					
ANR	9510398	Identifier	p		9510392	1					
ANR	9510399	AssignmentExpression	* p = data		9510392	2		=			
ANR	9510400	Identifier	data		9510392	0					
ANR	9510401	Identifier	data		9510392	1					
ANR	9510402	IdentifierDeclStatement	"const uint8_t * end , * ptr = avpkt -> data ;"	9:4:157:195	9510392	1	True				
ANR	9510403	IdentifierDecl	* end		9510392	0					
ANR	9510404	IdentifierDeclType	const uint8_t *		9510392	0					
ANR	9510405	Identifier	end		9510392	1					
ANR	9510406	IdentifierDecl	* ptr = avpkt -> data		9510392	1					
ANR	9510407	IdentifierDeclType	const uint8_t *		9510392	0					
ANR	9510408	Identifier	ptr		9510392	1					
ANR	9510409	AssignmentExpression	* ptr = avpkt -> data		9510392	2		=			
ANR	9510410	Identifier	ptr		9510392	0					
ANR	9510411	PtrMemberAccess	avpkt -> data		9510392	1					
ANR	9510412	Identifier	avpkt		9510392	0					
ANR	9510413	Identifier	data		9510392	1					
ANR	9510414	IdentifierDeclStatement	uint8_t * dst ;	11:4:202:214	9510392	2	True				
ANR	9510415	IdentifierDecl	* dst		9510392	0					
ANR	9510416	IdentifierDeclType	uint8_t *		9510392	0					
ANR	9510417	Identifier	dst		9510392	1					
ANR	9510418	IdentifierDeclStatement	"int ret , linesize , i , j ;"	13:4:221:244	9510392	3	True				
ANR	9510419	IdentifierDecl	ret		9510392	0					
ANR	9510420	IdentifierDeclType	int		9510392	0					
ANR	9510421	Identifier	ret		9510392	1					
ANR	9510422	IdentifierDecl	linesize		9510392	1					
ANR	9510423	IdentifierDeclType	int		9510392	0					
ANR	9510424	Identifier	linesize		9510392	1					
ANR	9510425	IdentifierDecl	i		9510392	2					
ANR	9510426	IdentifierDeclType	int		9510392	0					
ANR	9510427	Identifier	i		9510392	1					
ANR	9510428	IdentifierDecl	j		9510392	3					
ANR	9510429	IdentifierDeclType	int		9510392	0					
ANR	9510430	Identifier	j		9510392	1					
ANR	9510431	ExpressionStatement	end = avpkt -> data + avpkt -> size	17:4:253:284	9510392	4	True				
ANR	9510432	AssignmentExpression	end = avpkt -> data + avpkt -> size		9510392	0		=			
ANR	9510433	Identifier	end		9510392	0					
ANR	9510434	AdditiveExpression	avpkt -> data + avpkt -> size		9510392	1		+			
ANR	9510435	PtrMemberAccess	avpkt -> data		9510392	0					
ANR	9510436	Identifier	avpkt		9510392	0					
ANR	9510437	Identifier	data		9510392	1					
ANR	9510438	PtrMemberAccess	avpkt -> size		9510392	1					
ANR	9510439	Identifier	avpkt		9510392	0					
ANR	9510440	Identifier	size		9510392	1					
ANR	9510441	WhileStatement	while ( ! avctx -> width || ! avctx -> height )		9510392	5					
ANR	9510442	Condition	! avctx -> width || ! avctx -> height	19:11:298:328	9510392	0	True				
ANR	9510443	OrExpression	! avctx -> width || ! avctx -> height		9510392	0		||			
ANR	9510444	UnaryOperationExpression	! avctx -> width		9510392	0					
ANR	9510445	UnaryOperator	!		9510392	0					
ANR	9510446	PtrMemberAccess	avctx -> width		9510392	1					
ANR	9510447	Identifier	avctx		9510392	0					
ANR	9510448	Identifier	width		9510392	1					
ANR	9510449	UnaryOperationExpression	! avctx -> height		9510392	1					
ANR	9510450	UnaryOperator	!		9510392	0					
ANR	9510451	PtrMemberAccess	avctx -> height		9510392	1					
ANR	9510452	Identifier	avctx		9510392	0					
ANR	9510453	Identifier	height		9510392	1					
ANR	9510454	CompoundStatement		19:8:240:255	9510392	1					
ANR	9510455	IdentifierDeclStatement	char name [ 256 ] ;	21:8:342:356	9510392	0	True				
ANR	9510456	IdentifierDecl	name [ 256 ]		9510392	0					
ANR	9510457	IdentifierDeclType	char [ 256 ]		9510392	0					
ANR	9510458	Identifier	name		9510392	1					
ANR	9510459	PrimaryExpression	256		9510392	2					
ANR	9510460	IdentifierDeclStatement	"int number , len ;"	23:8:367:382	9510392	1	True				
ANR	9510461	IdentifierDecl	number		9510392	0					
ANR	9510462	IdentifierDeclType	int		9510392	0					
ANR	9510463	Identifier	number		9510392	1					
ANR	9510464	IdentifierDecl	len		9510392	1					
ANR	9510465	IdentifierDeclType	int		9510392	0					
ANR	9510466	Identifier	len		9510392	1					
ANR	9510467	ExpressionStatement	"ptr += strcspn ( ptr , ""#"" )"	27:8:395:419	9510392	2	True				
ANR	9510468	AssignmentExpression	"ptr += strcspn ( ptr , ""#"" )"		9510392	0		+=			
ANR	9510469	Identifier	ptr		9510392	0					
ANR	9510470	CallExpression	"strcspn ( ptr , ""#"" )"		9510392	1					
ANR	9510471	Callee	strcspn		9510392	0					
ANR	9510472	Identifier	strcspn		9510392	0					
ANR	9510473	ArgumentList	ptr		9510392	1					
ANR	9510474	Argument	ptr		9510392	0					
ANR	9510475	Identifier	ptr		9510392	0					
ANR	9510476	Argument	"""#"""		9510392	1					
ANR	9510477	PrimaryExpression	"""#"""		9510392	0					
ANR	9510478	IfStatement	"if ( sscanf ( ptr , ""#define %256s %u"" , name , & number ) != 2 )"		9510392	3					
ANR	9510479	Condition	"sscanf ( ptr , ""#define %256s %u"" , name , & number ) != 2"	29:12:434:484	9510392	0	True				
ANR	9510480	EqualityExpression	"sscanf ( ptr , ""#define %256s %u"" , name , & number ) != 2"		9510392	0		!=			
ANR	9510481	CallExpression	"sscanf ( ptr , ""#define %256s %u"" , name , & number )"		9510392	0					
ANR	9510482	Callee	sscanf		9510392	0					
ANR	9510483	Identifier	sscanf		9510392	0					
ANR	9510484	ArgumentList	ptr		9510392	1					
ANR	9510485	Argument	ptr		9510392	0					
ANR	9510486	Identifier	ptr		9510392	0					
ANR	9510487	Argument	"""#define %256s %u"""		9510392	1					
ANR	9510488	PrimaryExpression	"""#define %256s %u"""		9510392	0					
ANR	9510489	Argument	name		9510392	2					
ANR	9510490	Identifier	name		9510392	0					
ANR	9510491	Argument	& number		9510392	3					
ANR	9510492	UnaryOperationExpression	& number		9510392	0					
ANR	9510493	UnaryOperator	&		9510392	0					
ANR	9510494	Identifier	number		9510392	1					
ANR	9510495	PrimaryExpression	2		9510392	1					
ANR	9510496	CompoundStatement		25:65:360:360	9510392	1					
ANR	9510497	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unexpected preprocessor directive\\n"" )"	31:12:502:568	9510392	0	True				
ANR	9510498	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unexpected preprocessor directive\\n"" )"		9510392	0					
ANR	9510499	Callee	av_log		9510392	0					
ANR	9510500	Identifier	av_log		9510392	0					
ANR	9510501	ArgumentList	avctx		9510392	1					
ANR	9510502	Argument	avctx		9510392	0					
ANR	9510503	Identifier	avctx		9510392	0					
ANR	9510504	Argument	AV_LOG_ERROR		9510392	1					
ANR	9510505	Identifier	AV_LOG_ERROR		9510392	0					
ANR	9510506	Argument	"""Unexpected preprocessor directive\\n"""		9510392	2					
ANR	9510507	PrimaryExpression	"""Unexpected preprocessor directive\\n"""		9510392	0					
ANR	9510508	ReturnStatement	return AVERROR_INVALIDDATA ;	33:12:583:609	9510392	1	True				
ANR	9510509	Identifier	AVERROR_INVALIDDATA		9510392	0					
ANR	9510510	ExpressionStatement	len = strlen ( name )	39:8:633:651	9510392	4	True				
ANR	9510511	AssignmentExpression	len = strlen ( name )		9510392	0		=			
ANR	9510512	Identifier	len		9510392	0					
ANR	9510513	CallExpression	strlen ( name )		9510392	1					
ANR	9510514	Callee	strlen		9510392	0					
ANR	9510515	Identifier	strlen		9510392	0					
ANR	9510516	ArgumentList	name		9510392	1					
ANR	9510517	Argument	name		9510392	0					
ANR	9510518	Identifier	name		9510392	0					
ANR	9510519	IfStatement	"if ( ( len > 6 ) && ! avctx -> height && ! memcmp ( name + len - 7 , ""_height"" , 7 ) )"		9510392	5					
ANR	9510520	Condition	"( len > 6 ) && ! avctx -> height && ! memcmp ( name + len - 7 , ""_height"" , 7 )"	41:12:666:733	9510392	0	True				
ANR	9510521	AndExpression	"( len > 6 ) && ! avctx -> height && ! memcmp ( name + len - 7 , ""_height"" , 7 )"		9510392	0		&&			
ANR	9510522	RelationalExpression	len > 6		9510392	0		>			
ANR	9510523	Identifier	len		9510392	0					
ANR	9510524	PrimaryExpression	6		9510392	1					
ANR	9510525	AndExpression	"! avctx -> height && ! memcmp ( name + len - 7 , ""_height"" , 7 )"		9510392	1		&&			
ANR	9510526	UnaryOperationExpression	! avctx -> height		9510392	0					
ANR	9510527	UnaryOperator	!		9510392	0					
ANR	9510528	PtrMemberAccess	avctx -> height		9510392	1					
ANR	9510529	Identifier	avctx		9510392	0					
ANR	9510530	Identifier	height		9510392	1					
ANR	9510531	UnaryOperationExpression	"! memcmp ( name + len - 7 , ""_height"" , 7 )"		9510392	1					
ANR	9510532	UnaryOperator	!		9510392	0					
ANR	9510533	CallExpression	"memcmp ( name + len - 7 , ""_height"" , 7 )"		9510392	1					
ANR	9510534	Callee	memcmp		9510392	0					
ANR	9510535	Identifier	memcmp		9510392	0					
ANR	9510536	ArgumentList	name + len - 7		9510392	1					
ANR	9510537	Argument	name + len - 7		9510392	0					
ANR	9510538	AdditiveExpression	name + len - 7		9510392	0		+			
ANR	9510539	Identifier	name		9510392	0					
ANR	9510540	AdditiveExpression	len - 7		9510392	1		-			
ANR	9510541	Identifier	len		9510392	0					
ANR	9510542	PrimaryExpression	7		9510392	1					
ANR	9510543	Argument	"""_height"""		9510392	1					
ANR	9510544	PrimaryExpression	"""_height"""		9510392	0					
ANR	9510545	Argument	7		9510392	2					
ANR	9510546	PrimaryExpression	7		9510392	0					
ANR	9510547	CompoundStatement		37:82:609:609	9510392	1					
ANR	9510548	ExpressionStatement	avctx -> height = number	43:16:755:777	9510392	0	True				
ANR	9510549	AssignmentExpression	avctx -> height = number		9510392	0		=			
ANR	9510550	PtrMemberAccess	avctx -> height		9510392	0					
ANR	9510551	Identifier	avctx		9510392	0					
ANR	9510552	Identifier	height		9510392	1					
ANR	9510553	Identifier	number		9510392	1					
ANR	9510554	ElseStatement	else		9510392	0					
ANR	9510555	IfStatement	"if ( ( len > 5 ) && ! avctx -> width && ! memcmp ( name + len - 6 , ""_width"" , 6 ) )"		9510392	0					
ANR	9510556	Condition	"( len > 5 ) && ! avctx -> width && ! memcmp ( name + len - 6 , ""_width"" , 6 )"	45:19:799:864	9510392	0	True				
ANR	9510557	AndExpression	"( len > 5 ) && ! avctx -> width && ! memcmp ( name + len - 6 , ""_width"" , 6 )"		9510392	0		&&			
ANR	9510558	RelationalExpression	len > 5		9510392	0		>			
ANR	9510559	Identifier	len		9510392	0					
ANR	9510560	PrimaryExpression	5		9510392	1					
ANR	9510561	AndExpression	"! avctx -> width && ! memcmp ( name + len - 6 , ""_width"" , 6 )"		9510392	1		&&			
ANR	9510562	UnaryOperationExpression	! avctx -> width		9510392	0					
ANR	9510563	UnaryOperator	!		9510392	0					
ANR	9510564	PtrMemberAccess	avctx -> width		9510392	1					
ANR	9510565	Identifier	avctx		9510392	0					
ANR	9510566	Identifier	width		9510392	1					
ANR	9510567	UnaryOperationExpression	"! memcmp ( name + len - 6 , ""_width"" , 6 )"		9510392	1					
ANR	9510568	UnaryOperator	!		9510392	0					
ANR	9510569	CallExpression	"memcmp ( name + len - 6 , ""_width"" , 6 )"		9510392	1					
ANR	9510570	Callee	memcmp		9510392	0					
ANR	9510571	Identifier	memcmp		9510392	0					
ANR	9510572	ArgumentList	name + len - 6		9510392	1					
ANR	9510573	Argument	name + len - 6		9510392	0					
ANR	9510574	AdditiveExpression	name + len - 6		9510392	0		+			
ANR	9510575	Identifier	name		9510392	0					
ANR	9510576	AdditiveExpression	len - 6		9510392	1		-			
ANR	9510577	Identifier	len		9510392	0					
ANR	9510578	PrimaryExpression	6		9510392	1					
ANR	9510579	Argument	"""_width"""		9510392	1					
ANR	9510580	PrimaryExpression	"""_width"""		9510392	0					
ANR	9510581	Argument	6		9510392	2					
ANR	9510582	PrimaryExpression	6		9510392	0					
ANR	9510583	CompoundStatement		41:87:740:740	9510392	1					
ANR	9510584	ExpressionStatement	avctx -> width = number	47:16:886:907	9510392	0	True				
ANR	9510585	AssignmentExpression	avctx -> width = number		9510392	0		=			
ANR	9510586	PtrMemberAccess	avctx -> width		9510392	0					
ANR	9510587	Identifier	avctx		9510392	0					
ANR	9510588	Identifier	width		9510392	1					
ANR	9510589	Identifier	number		9510392	1					
ANR	9510590	ElseStatement	else		9510392	0					
ANR	9510591	CompoundStatement		45:15:798:798	9510392	0					
ANR	9510592	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unknown define '%s'\\n"" , name )"	51:12:940:998	9510392	0	True				
ANR	9510593	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unknown define '%s'\\n"" , name )"		9510392	0					
ANR	9510594	Callee	av_log		9510392	0					
ANR	9510595	Identifier	av_log		9510392	0					
ANR	9510596	ArgumentList	avctx		9510392	1					
ANR	9510597	Argument	avctx		9510392	0					
ANR	9510598	Identifier	avctx		9510392	0					
ANR	9510599	Argument	AV_LOG_ERROR		9510392	1					
ANR	9510600	Identifier	AV_LOG_ERROR		9510392	0					
ANR	9510601	Argument	"""Unknown define '%s'\\n"""		9510392	2					
ANR	9510602	PrimaryExpression	"""Unknown define '%s'\\n"""		9510392	0					
ANR	9510603	Argument	name		9510392	3					
ANR	9510604	Identifier	name		9510392	0					
ANR	9510605	ReturnStatement	return AVERROR_INVALIDDATA ;	53:12:1013:1039	9510392	1	True				
ANR	9510606	Identifier	AVERROR_INVALIDDATA		9510392	0					
ANR	9510607	ExpressionStatement	"ptr += strcspn ( ptr , ""\\n\\r"" ) + 1"	57:8:1061:1092	9510392	6	True				
ANR	9510608	AssignmentExpression	"ptr += strcspn ( ptr , ""\\n\\r"" ) + 1"		9510392	0		+=			
ANR	9510609	Identifier	ptr		9510392	0					
ANR	9510610	AdditiveExpression	"strcspn ( ptr , ""\\n\\r"" ) + 1"		9510392	1		+			
ANR	9510611	CallExpression	"strcspn ( ptr , ""\\n\\r"" )"		9510392	0					
ANR	9510612	Callee	strcspn		9510392	0					
ANR	9510613	Identifier	strcspn		9510392	0					
ANR	9510614	ArgumentList	ptr		9510392	1					
ANR	9510615	Argument	ptr		9510392	0					
ANR	9510616	Identifier	ptr		9510392	0					
ANR	9510617	Argument	"""\\n\\r"""		9510392	1					
ANR	9510618	PrimaryExpression	"""\\n\\r"""		9510392	0					
ANR	9510619	PrimaryExpression	1		9510392	1					
ANR	9510620	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , p , 0 ) ) < 0 )"		9510392	6					
ANR	9510621	Condition	"( ret = ff_get_buffer ( avctx , p , 0 ) ) < 0"	63:8:1112:1149	9510392	0	True				
ANR	9510622	RelationalExpression	"( ret = ff_get_buffer ( avctx , p , 0 ) ) < 0"		9510392	0		<			
ANR	9510623	AssignmentExpression	"ret = ff_get_buffer ( avctx , p , 0 )"		9510392	0		=			
ANR	9510624	Identifier	ret		9510392	0					
ANR	9510625	CallExpression	"ff_get_buffer ( avctx , p , 0 )"		9510392	1					
ANR	9510626	Callee	ff_get_buffer		9510392	0					
ANR	9510627	Identifier	ff_get_buffer		9510392	0					
ANR	9510628	ArgumentList	avctx		9510392	1					
ANR	9510629	Argument	avctx		9510392	0					
ANR	9510630	Identifier	avctx		9510392	0					
ANR	9510631	Argument	p		9510392	1					
ANR	9510632	Identifier	p		9510392	0					
ANR	9510633	Argument	0		9510392	2					
ANR	9510634	PrimaryExpression	0		9510392	0					
ANR	9510635	PrimaryExpression	0		9510392	1					
ANR	9510636	ReturnStatement	return ret ;	65:8:1161:1171	9510392	1	True				
ANR	9510637	Identifier	ret		9510392	0					
ANR	9510638	ExpressionStatement	"ptr += strcspn ( ptr , ""{"" ) + 1"	71:4:1213:1241	9510392	7	True				
ANR	9510639	AssignmentExpression	"ptr += strcspn ( ptr , ""{"" ) + 1"		9510392	0		+=			
ANR	9510640	Identifier	ptr		9510392	0					
ANR	9510641	AdditiveExpression	"strcspn ( ptr , ""{"" ) + 1"		9510392	1		+			
ANR	9510642	CallExpression	"strcspn ( ptr , ""{"" )"		9510392	0					
ANR	9510643	Callee	strcspn		9510392	0					
ANR	9510644	Identifier	strcspn		9510392	0					
ANR	9510645	ArgumentList	ptr		9510392	1					
ANR	9510646	Argument	ptr		9510392	0					
ANR	9510647	Identifier	ptr		9510392	0					
ANR	9510648	Argument	"""{"""		9510392	1					
ANR	9510649	PrimaryExpression	"""{"""		9510392	0					
ANR	9510650	PrimaryExpression	1		9510392	1					
ANR	9510651	ExpressionStatement	linesize = ( avctx -> width + 7 ) / 8	75:4:1250:1283	9510392	8	True				
ANR	9510652	AssignmentExpression	linesize = ( avctx -> width + 7 ) / 8		9510392	0		=			
ANR	9510653	Identifier	linesize		9510392	0					
ANR	9510654	MultiplicativeExpression	( avctx -> width + 7 ) / 8		9510392	1		/			
ANR	9510655	AdditiveExpression	avctx -> width + 7		9510392	0		+			
ANR	9510656	PtrMemberAccess	avctx -> width		9510392	0					
ANR	9510657	Identifier	avctx		9510392	0					
ANR	9510658	Identifier	width		9510392	1					
ANR	9510659	PrimaryExpression	7		9510392	1					
ANR	9510660	PrimaryExpression	8		9510392	1					
ANR	9510661	ForStatement	for ( i = 0 ; i < avctx -> height ; i ++ )		9510392	9					
ANR	9510662	ForInit	i = 0 ;	77:9:1295:1300	9510392	0	True				
ANR	9510663	AssignmentExpression	i = 0		9510392	0		=			
ANR	9510664	Identifier	i		9510392	0					
ANR	9510665	PrimaryExpression	0		9510392	1					
ANR	9510666	Condition	i < avctx -> height	77:16:1302:1318	9510392	1	True				
ANR	9510667	RelationalExpression	i < avctx -> height		9510392	0		<			
ANR	9510668	Identifier	i		9510392	0					
ANR	9510669	PtrMemberAccess	avctx -> height		9510392	1					
ANR	9510670	Identifier	avctx		9510392	0					
ANR	9510671	Identifier	height		9510392	1					
ANR	9510672	PostIncDecOperationExpression	i ++	77:35:1321:1323	9510392	2	True				
ANR	9510673	Identifier	i		9510392	0					
ANR	9510674	IncDec	++		9510392	1					
ANR	9510675	CompoundStatement		73:40:1199:1199	9510392	3					
ANR	9510676	ExpressionStatement	dst = p -> data [ 0 ] + i * p -> linesize [ 0 ]	79:8:1337:1374	9510392	0	True				
ANR	9510677	AssignmentExpression	dst = p -> data [ 0 ] + i * p -> linesize [ 0 ]		9510392	0		=			
ANR	9510678	Identifier	dst		9510392	0					
ANR	9510679	AdditiveExpression	p -> data [ 0 ] + i * p -> linesize [ 0 ]		9510392	1		+			
ANR	9510680	ArrayIndexing	p -> data [ 0 ]		9510392	0					
ANR	9510681	PtrMemberAccess	p -> data		9510392	0					
ANR	9510682	Identifier	p		9510392	0					
ANR	9510683	Identifier	data		9510392	1					
ANR	9510684	PrimaryExpression	0		9510392	1					
ANR	9510685	MultiplicativeExpression	i * p -> linesize [ 0 ]		9510392	1		*			
ANR	9510686	Identifier	i		9510392	0					
ANR	9510687	ArrayIndexing	p -> linesize [ 0 ]		9510392	1					
ANR	9510688	PtrMemberAccess	p -> linesize		9510392	0					
ANR	9510689	Identifier	p		9510392	0					
ANR	9510690	Identifier	linesize		9510392	1					
ANR	9510691	PrimaryExpression	0		9510392	1					
ANR	9510692	ForStatement	for ( j = 0 ; j < linesize ; j ++ )		9510392	1					
ANR	9510693	ForInit	j = 0 ;	81:13:1390:1395	9510392	0	True				
ANR	9510694	AssignmentExpression	j = 0		9510392	0		=			
ANR	9510695	Identifier	j		9510392	0					
ANR	9510696	PrimaryExpression	0		9510392	1					
ANR	9510697	Condition	j < linesize	81:20:1397:1408	9510392	1	True				
ANR	9510698	RelationalExpression	j < linesize		9510392	0		<			
ANR	9510699	Identifier	j		9510392	0					
ANR	9510700	Identifier	linesize		9510392	1					
ANR	9510701	PostIncDecOperationExpression	j ++	81:34:1411:1413	9510392	2	True				
ANR	9510702	Identifier	j		9510392	0					
ANR	9510703	IncDec	++		9510392	1					
ANR	9510704	CompoundStatement		79:12:1304:1315	9510392	3					
ANR	9510705	IdentifierDeclStatement	uint8_t val ;	83:12:1431:1442	9510392	0	True				
ANR	9510706	IdentifierDecl	val		9510392	0					
ANR	9510707	IdentifierDeclType	uint8_t		9510392	0					
ANR	9510708	Identifier	val		9510392	1					
ANR	9510709	ExpressionStatement	"ptr += strcspn ( ptr , ""x"" ) + 1"	87:12:1459:1487	9510392	1	True				
ANR	9510710	AssignmentExpression	"ptr += strcspn ( ptr , ""x"" ) + 1"		9510392	0		+=			
ANR	9510711	Identifier	ptr		9510392	0					
ANR	9510712	AdditiveExpression	"strcspn ( ptr , ""x"" ) + 1"		9510392	1		+			
ANR	9510713	CallExpression	"strcspn ( ptr , ""x"" )"		9510392	0					
ANR	9510714	Callee	strcspn		9510392	0					
ANR	9510715	Identifier	strcspn		9510392	0					
ANR	9510716	ArgumentList	ptr		9510392	1					
ANR	9510717	Argument	ptr		9510392	0					
ANR	9510718	Identifier	ptr		9510392	0					
ANR	9510719	Argument	"""x"""		9510392	1					
ANR	9510720	PrimaryExpression	"""x"""		9510392	0					
ANR	9510721	PrimaryExpression	1		9510392	1					
ANR	9510722	IfStatement	if ( ptr < end && av_isxdigit ( * ptr ) )		9510392	2					
ANR	9510723	Condition	ptr < end && av_isxdigit ( * ptr )	89:16:1506:1535	9510392	0	True				
ANR	9510724	AndExpression	ptr < end && av_isxdigit ( * ptr )		9510392	0		&&			
ANR	9510725	RelationalExpression	ptr < end		9510392	0		<			
ANR	9510726	Identifier	ptr		9510392	0					
ANR	9510727	Identifier	end		9510392	1					
ANR	9510728	CallExpression	av_isxdigit ( * ptr )		9510392	1					
ANR	9510729	Callee	av_isxdigit		9510392	0					
ANR	9510730	Identifier	av_isxdigit		9510392	0					
ANR	9510731	ArgumentList	* ptr		9510392	1					
ANR	9510732	Argument	* ptr		9510392	0					
ANR	9510733	UnaryOperationExpression	* ptr		9510392	0					
ANR	9510734	UnaryOperator	*		9510392	0					
ANR	9510735	Identifier	ptr		9510392	1					
ANR	9510736	CompoundStatement		85:48:1411:1411	9510392	1					
ANR	9510737	ExpressionStatement	val = convert ( * ptr )	91:16:1557:1576	9510392	0	True				
ANR	9510738	AssignmentExpression	val = convert ( * ptr )		9510392	0		=			
ANR	9510739	Identifier	val		9510392	0					
ANR	9510740	CallExpression	convert ( * ptr )		9510392	1					
ANR	9510741	Callee	convert		9510392	0					
ANR	9510742	Identifier	convert		9510392	0					
ANR	9510743	ArgumentList	* ptr		9510392	1					
ANR	9510744	Argument	* ptr		9510392	0					
ANR	9510745	UnaryOperationExpression	* ptr		9510392	0					
ANR	9510746	UnaryOperator	*		9510392	0					
ANR	9510747	Identifier	ptr		9510392	1					
ANR	9510748	ExpressionStatement	ptr ++	93:16:1595:1600	9510392	1	True				
ANR	9510749	PostIncDecOperationExpression	ptr ++		9510392	0					
ANR	9510750	Identifier	ptr		9510392	0					
ANR	9510751	IncDec	++		9510392	1					
ANR	9510752	IfStatement	if ( av_isxdigit ( * ptr ) )		9510392	2					
ANR	9510753	Condition	av_isxdigit ( * ptr )	95:20:1623:1639	9510392	0	True				
ANR	9510754	CallExpression	av_isxdigit ( * ptr )		9510392	0					
ANR	9510755	Callee	av_isxdigit		9510392	0					
ANR	9510756	Identifier	av_isxdigit		9510392	0					
ANR	9510757	ArgumentList	* ptr		9510392	1					
ANR	9510758	Argument	* ptr		9510392	0					
ANR	9510759	UnaryOperationExpression	* ptr		9510392	0					
ANR	9510760	UnaryOperator	*		9510392	0					
ANR	9510761	Identifier	ptr		9510392	1					
ANR	9510762	ExpressionStatement	val = ( val << 4 ) + convert ( * ptr )	97:20:1663:1695	9510392	1	True				
ANR	9510763	AssignmentExpression	val = ( val << 4 ) + convert ( * ptr )		9510392	0		=			
ANR	9510764	Identifier	val		9510392	0					
ANR	9510765	AdditiveExpression	( val << 4 ) + convert ( * ptr )		9510392	1		+			
ANR	9510766	ShiftExpression	val << 4		9510392	0		<<			
ANR	9510767	Identifier	val		9510392	0					
ANR	9510768	PrimaryExpression	4		9510392	1					
ANR	9510769	CallExpression	convert ( * ptr )		9510392	1					
ANR	9510770	Callee	convert		9510392	0					
ANR	9510771	Identifier	convert		9510392	0					
ANR	9510772	ArgumentList	* ptr		9510392	1					
ANR	9510773	Argument	* ptr		9510392	0					
ANR	9510774	UnaryOperationExpression	* ptr		9510392	0					
ANR	9510775	UnaryOperator	*		9510392	0					
ANR	9510776	Identifier	ptr		9510392	1					
ANR	9510777	ExpressionStatement	* dst ++ = ff_reverse [ val ]	99:16:1714:1738	9510392	3	True				
ANR	9510778	AssignmentExpression	* dst ++ = ff_reverse [ val ]		9510392	0		=			
ANR	9510779	UnaryOperationExpression	* dst ++		9510392	0					
ANR	9510780	UnaryOperator	*		9510392	0					
ANR	9510781	PostIncDecOperationExpression	dst ++		9510392	1					
ANR	9510782	Identifier	dst		9510392	0					
ANR	9510783	IncDec	++		9510392	1					
ANR	9510784	ArrayIndexing	ff_reverse [ val ]		9510392	1					
ANR	9510785	Identifier	ff_reverse		9510392	0					
ANR	9510786	Identifier	val		9510392	1					
ANR	9510787	ElseStatement	else		9510392	0					
ANR	9510788	CompoundStatement		97:19:1633:1633	9510392	0					
ANR	9510789	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Unexpected data at '%.8s'\\n"" , ptr )"	103:16:1779:1842	9510392	0	True				
ANR	9510790	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Unexpected data at '%.8s'\\n"" , ptr )"		9510392	0					
ANR	9510791	Callee	av_log		9510392	0					
ANR	9510792	Identifier	av_log		9510392	0					
ANR	9510793	ArgumentList	avctx		9510392	1					
ANR	9510794	Argument	avctx		9510392	0					
ANR	9510795	Identifier	avctx		9510392	0					
ANR	9510796	Argument	AV_LOG_ERROR		9510392	1					
ANR	9510797	Identifier	AV_LOG_ERROR		9510392	0					
ANR	9510798	Argument	"""Unexpected data at '%.8s'\\n"""		9510392	2					
ANR	9510799	PrimaryExpression	"""Unexpected data at '%.8s'\\n"""		9510392	0					
ANR	9510800	Argument	ptr		9510392	3					
ANR	9510801	Identifier	ptr		9510392	0					
ANR	9510802	ReturnStatement	return AVERROR_INVALIDDATA ;	105:16:1861:1887	9510392	1	True				
ANR	9510803	Identifier	AVERROR_INVALIDDATA		9510392	0					
ANR	9510804	ExpressionStatement	p -> key_frame = 1	115:4:1929:1945	9510392	10	True				
ANR	9510805	AssignmentExpression	p -> key_frame = 1		9510392	0		=			
ANR	9510806	PtrMemberAccess	p -> key_frame		9510392	0					
ANR	9510807	Identifier	p		9510392	0					
ANR	9510808	Identifier	key_frame		9510392	1					
ANR	9510809	PrimaryExpression	1		9510392	1					
ANR	9510810	ExpressionStatement	p -> pict_type = AV_PICTURE_TYPE_I	117:4:1952:1984	9510392	11	True				
ANR	9510811	AssignmentExpression	p -> pict_type = AV_PICTURE_TYPE_I		9510392	0		=			
ANR	9510812	PtrMemberAccess	p -> pict_type		9510392	0					
ANR	9510813	Identifier	p		9510392	0					
ANR	9510814	Identifier	pict_type		9510392	1					
ANR	9510815	Identifier	AV_PICTURE_TYPE_I		9510392	1					
ANR	9510816	ExpressionStatement	* got_frame = 1	121:4:1993:2013	9510392	12	True				
ANR	9510817	AssignmentExpression	* got_frame = 1		9510392	0		=			
ANR	9510818	UnaryOperationExpression	* got_frame		9510392	0					
ANR	9510819	UnaryOperator	*		9510392	0					
ANR	9510820	Identifier	got_frame		9510392	1					
ANR	9510821	PrimaryExpression	1		9510392	1					
ANR	9510822	ReturnStatement	return avpkt -> size ;	125:4:2022:2040	9510392	13	True				
ANR	9510823	PtrMemberAccess	avpkt -> size		9510392	0					
ANR	9510824	Identifier	avpkt		9510392	0					
ANR	9510825	Identifier	size		9510392	1					
ANR	9510826	ReturnType	static int		9510392	1					
ANR	9510827	Identifier	xbm_decode_frame		9510392	2					
ANR	9510828	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame , AVPacket * avpkt"		9510392	3					
ANR	9510829	Parameter	AVCodecContext * avctx	1:28:28:48	9510392	0	True				
ANR	9510830	ParameterType	AVCodecContext *		9510392	0					
ANR	9510831	Identifier	avctx		9510392	1					
ANR	9510832	Parameter	void * data	1:51:51:60	9510392	1	True				
ANR	9510833	ParameterType	void *		9510392	0					
ANR	9510834	Identifier	data		9510392	1					
ANR	9510835	Parameter	int * got_frame	3:28:92:105	9510392	2	True				
ANR	9510836	ParameterType	int *		9510392	0					
ANR	9510837	Identifier	got_frame		9510392	1					
ANR	9510838	Parameter	AVPacket * avpkt	3:44:108:122	9510392	3	True				
ANR	9510839	ParameterType	AVPacket *		9510392	0					
ANR	9510840	Identifier	avpkt		9510392	1					
ANR	9510841	CFGEntryNode	ENTRY		9510392		True				
ANR	9510842	CFGExitNode	EXIT		9510392		True				
ANR	9510843	Symbol	data		9510392						
ANR	9510844	Symbol	dst		9510392						
ANR	9510845	Symbol	p -> data		9510392						
ANR	9510846	Symbol	ff_reverse		9510392						
ANR	9510847	Symbol	avctx -> width		9510392						
ANR	9510848	Symbol	avpkt		9510392						
ANR	9510849	Symbol	convert		9510392						
ANR	9510850	Symbol	* val		9510392						
ANR	9510851	Symbol	strcspn		9510392						
ANR	9510852	Symbol	av_isxdigit		9510392						
ANR	9510853	Symbol	& number		9510392						
ANR	9510854	Symbol	number		9510392						
ANR	9510855	Symbol	strlen		9510392						
ANR	9510856	Symbol	linesize		9510392						
ANR	9510857	Symbol	avctx -> height		9510392						
ANR	9510858	Symbol	memcmp		9510392						
ANR	9510859	Symbol	ff_get_buffer		9510392						
ANR	9510860	Symbol	* p -> data		9510392						
ANR	9510861	Symbol	len		9510392						
ANR	9510862	Symbol	got_frame		9510392						
ANR	9510863	Symbol	* ptr		9510392						
ANR	9510864	Symbol	avpkt -> size		9510392						
ANR	9510865	Symbol	end		9510392						
ANR	9510866	Symbol	AV_PICTURE_TYPE_I		9510392						
ANR	9510867	Symbol	* * p		9510392						
ANR	9510868	Symbol	avctx		9510392						
ANR	9510869	Symbol	p -> pict_type		9510392						
ANR	9510870	Symbol	ret		9510392						
ANR	9510871	Symbol	val		9510392						
ANR	9510872	Symbol	* avpkt		9510392						
ANR	9510873	Symbol	AV_LOG_ERROR		9510392						
ANR	9510874	Symbol	* got_frame		9510392						
ANR	9510875	Symbol	p -> key_frame		9510392						
ANR	9510876	Symbol	i		9510392						
ANR	9510877	Symbol	j		9510392						
ANR	9510878	Symbol	* p -> linesize		9510392						
ANR	9510879	Symbol	p -> linesize		9510392						
ANR	9510880	Symbol	ptr		9510392						
ANR	9510881	Symbol	p		9510392						
ANR	9510882	Symbol	* avctx		9510392						
ANR	9510883	Symbol	sscanf		9510392						
ANR	9510884	Symbol	* dst ++		9510392						
ANR	9510885	Symbol	name		9510392						
ANR	9510886	Symbol	* ff_reverse		9510392						
ANR	9510887	Symbol	AVERROR_INVALIDDATA		9510392						
ANR	9510888	Symbol	* p		9510392						
ANR	9510889	Symbol	avpkt -> data		9510392						
