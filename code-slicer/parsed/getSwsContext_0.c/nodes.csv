command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4325054	File	/home/p4ultr4n/workplace/ReVeal/raw_code/getSwsContext_0.c								
ANR	4325055	Function	getSwsContext	1:0:0:10564							
ANR	4325056	FunctionDef	"getSwsContext (int srcW , int srcH , int srcFormat , int dstW , int dstH , int dstFormat , int flags , SwsFilter * srcFilter , SwsFilter * dstFilter)"		4325055	0					
ANR	4325057	CompoundStatement		3:68:176:10564	4325055	0					
ANR	4325058	IdentifierDeclStatement	SwsContext * c ;	7:1:182:195	4325055	0	True				
ANR	4325059	IdentifierDecl	* c		4325055	0					
ANR	4325060	IdentifierDeclType	SwsContext *		4325055	0					
ANR	4325061	Identifier	c		4325055	1					
ANR	4325062	IdentifierDeclStatement	int i ;	9:1:199:204	4325055	1	True				
ANR	4325063	IdentifierDecl	i		4325055	0					
ANR	4325064	IdentifierDeclType	int		4325055	0					
ANR	4325065	Identifier	i		4325055	1					
ANR	4325066	IdentifierDeclStatement	"SwsFilter dummyFilter = { NULL , NULL , NULL , NULL } ;"	11:1:208:255	4325055	2	True				
ANR	4325067	IdentifierDecl	"dummyFilter = { NULL , NULL , NULL , NULL }"		4325055	0					
ANR	4325068	IdentifierDeclType	SwsFilter		4325055	0					
ANR	4325069	Identifier	dummyFilter		4325055	1					
ANR	4325070	AssignmentExpression	"dummyFilter = { NULL , NULL , NULL , NULL }"		4325055	2		=			
ANR	4325071	Identifier	dummyFilter		4325055	0					
ANR	4325072	InitializerList	NULL		4325055	1					
ANR	4325073	Identifier	NULL		4325055	0					
ANR	4325074	Identifier	NULL		4325055	1					
ANR	4325075	Identifier	NULL		4325055	2					
ANR	4325076	Identifier	NULL		4325055	3					
ANR	4325077	IfStatement	if ( gCpuCaps . hasMMX )		4325055	3					
ANR	4325078	Condition	gCpuCaps . hasMMX	17:4:281:295	4325055	0	True				
ANR	4325079	MemberAccess	gCpuCaps . hasMMX		4325055	0					
ANR	4325080	Identifier	gCpuCaps		4325055	0					
ANR	4325081	Identifier	hasMMX		4325055	1					
ANR	4325082	Statement	asm	19:2:301:303	4325055	1	True				
ANR	4325083	Statement	volatile	19:6:305:312	4325055	4	True				
ANR	4325084	Statement	(	19:14:313:313	4325055	5	True				
ANR	4325085	Statement	"""emms\\n\\t"""	19:15:314:323	4325055	6	True				
ANR	4325086	Statement	::	19:25:324:325	4325055	7	True				
ANR	4325087	Statement	:	19:27:326:326	4325055	8	True				
ANR	4325088	Statement	"""memory"""	19:29:328:335	4325055	9	True				
ANR	4325089	Statement	)	19:37:336:336	4325055	10	True				
ANR	4325090	ExpressionStatement		19:38:337:337	4325055	11	True				
ANR	4325091	IfStatement	if ( swScale == NULL )		4325055	12					
ANR	4325092	Condition	swScale == NULL	25:4:354:366	4325055	0	True				
ANR	4325093	EqualityExpression	swScale == NULL		4325055	0		==			
ANR	4325094	Identifier	swScale		4325055	0					
ANR	4325095	Identifier	NULL		4325055	1					
ANR	4325096	ExpressionStatement	globalInit ( )	25:19:369:381	4325055	1	True				
ANR	4325097	CallExpression	globalInit ( )		4325055	0					
ANR	4325098	Callee	globalInit		4325055	0					
ANR	4325099	Identifier	globalInit		4325055	0					
ANR	4325100	ArgumentList			4325055	1					
ANR	4325101	IfStatement	if ( srcW < 4 || srcH < 1 || dstW < 8 || dstH < 1 )		4325055	13					
ANR	4325102	Condition	srcW < 4 || srcH < 1 || dstW < 8 || dstH < 1	31:4:411:446	4325055	0	True				
ANR	4325103	OrExpression	srcW < 4 || srcH < 1 || dstW < 8 || dstH < 1		4325055	0		||			
ANR	4325104	RelationalExpression	srcW < 4		4325055	0		<			
ANR	4325105	Identifier	srcW		4325055	0					
ANR	4325106	PrimaryExpression	4		4325055	1					
ANR	4325107	OrExpression	srcH < 1 || dstW < 8 || dstH < 1		4325055	1		||			
ANR	4325108	RelationalExpression	srcH < 1		4325055	0		<			
ANR	4325109	Identifier	srcH		4325055	0					
ANR	4325110	PrimaryExpression	1		4325055	1					
ANR	4325111	OrExpression	dstW < 8 || dstH < 1		4325055	1		||			
ANR	4325112	RelationalExpression	dstW < 8		4325055	0		<			
ANR	4325113	Identifier	dstW		4325055	0					
ANR	4325114	PrimaryExpression	8		4325055	1					
ANR	4325115	RelationalExpression	dstH < 1		4325055	1		<			
ANR	4325116	Identifier	dstH		4325055	0					
ANR	4325117	PrimaryExpression	1		4325055	1					
ANR	4325118	ReturnStatement	return NULL ;	31:42:449:460	4325055	1	True				
ANR	4325119	Identifier	NULL		4325055	0					
ANR	4325120	IfStatement	if ( ! dstFilter )		4325055	14					
ANR	4325121	Condition	! dstFilter	41:4:668:677	4325055	0	True				
ANR	4325122	UnaryOperationExpression	! dstFilter		4325055	0					
ANR	4325123	UnaryOperator	!		4325055	0					
ANR	4325124	Identifier	dstFilter		4325055	1					
ANR	4325125	ExpressionStatement	dstFilter = & dummyFilter	41:16:680:703	4325055	1	True				
ANR	4325126	AssignmentExpression	dstFilter = & dummyFilter		4325055	0		=			
ANR	4325127	Identifier	dstFilter		4325055	0					
ANR	4325128	UnaryOperationExpression	& dummyFilter		4325055	1					
ANR	4325129	UnaryOperator	&		4325055	0					
ANR	4325130	Identifier	dummyFilter		4325055	1					
ANR	4325131	IfStatement	if ( ! srcFilter )		4325055	15					
ANR	4325132	Condition	! srcFilter	43:4:710:719	4325055	0	True				
ANR	4325133	UnaryOperationExpression	! srcFilter		4325055	0					
ANR	4325134	UnaryOperator	!		4325055	0					
ANR	4325135	Identifier	srcFilter		4325055	1					
ANR	4325136	ExpressionStatement	srcFilter = & dummyFilter	43:16:722:745	4325055	1	True				
ANR	4325137	AssignmentExpression	srcFilter = & dummyFilter		4325055	0		=			
ANR	4325138	Identifier	srcFilter		4325055	0					
ANR	4325139	UnaryOperationExpression	& dummyFilter		4325055	1					
ANR	4325140	UnaryOperator	&		4325055	0					
ANR	4325141	Identifier	dummyFilter		4325055	1					
ANR	4325142	ExpressionStatement	"c = memalign ( 64 , sizeof ( SwsContext ) )"	47:1:751:786	4325055	16	True				
ANR	4325143	AssignmentExpression	"c = memalign ( 64 , sizeof ( SwsContext ) )"		4325055	0		=			
ANR	4325144	Identifier	c		4325055	0					
ANR	4325145	CallExpression	"memalign ( 64 , sizeof ( SwsContext ) )"		4325055	1					
ANR	4325146	Callee	memalign		4325055	0					
ANR	4325147	Identifier	memalign		4325055	0					
ANR	4325148	ArgumentList	64		4325055	1					
ANR	4325149	Argument	64		4325055	0					
ANR	4325150	PrimaryExpression	64		4325055	0					
ANR	4325151	Argument	sizeof ( SwsContext )		4325055	1					
ANR	4325152	SizeofExpression	sizeof ( SwsContext )		4325055	0					
ANR	4325153	Sizeof	sizeof		4325055	0					
ANR	4325154	SizeofOperand	SwsContext		4325055	1					
ANR	4325155	ExpressionStatement	"memset ( c , 0 , sizeof ( SwsContext ) )"	49:1:790:822	4325055	17	True				
ANR	4325156	CallExpression	"memset ( c , 0 , sizeof ( SwsContext ) )"		4325055	0					
ANR	4325157	Callee	memset		4325055	0					
ANR	4325158	Identifier	memset		4325055	0					
ANR	4325159	ArgumentList	c		4325055	1					
ANR	4325160	Argument	c		4325055	0					
ANR	4325161	Identifier	c		4325055	0					
ANR	4325162	Argument	0		4325055	1					
ANR	4325163	PrimaryExpression	0		4325055	0					
ANR	4325164	Argument	sizeof ( SwsContext )		4325055	2					
ANR	4325165	SizeofExpression	sizeof ( SwsContext )		4325055	0					
ANR	4325166	Sizeof	sizeof		4325055	0					
ANR	4325167	SizeofOperand	SwsContext		4325055	1					
ANR	4325168	ExpressionStatement	c -> srcW = srcW	53:1:828:841	4325055	18	True				
ANR	4325169	AssignmentExpression	c -> srcW = srcW		4325055	0		=			
ANR	4325170	PtrMemberAccess	c -> srcW		4325055	0					
ANR	4325171	Identifier	c		4325055	0					
ANR	4325172	Identifier	srcW		4325055	1					
ANR	4325173	Identifier	srcW		4325055	1					
ANR	4325174	ExpressionStatement	c -> srcH = srcH	55:1:845:858	4325055	19	True				
ANR	4325175	AssignmentExpression	c -> srcH = srcH		4325055	0		=			
ANR	4325176	PtrMemberAccess	c -> srcH		4325055	0					
ANR	4325177	Identifier	c		4325055	0					
ANR	4325178	Identifier	srcH		4325055	1					
ANR	4325179	Identifier	srcH		4325055	1					
ANR	4325180	ExpressionStatement	c -> dstW = dstW	57:1:862:875	4325055	20	True				
ANR	4325181	AssignmentExpression	c -> dstW = dstW		4325055	0		=			
ANR	4325182	PtrMemberAccess	c -> dstW		4325055	0					
ANR	4325183	Identifier	c		4325055	0					
ANR	4325184	Identifier	dstW		4325055	1					
ANR	4325185	Identifier	dstW		4325055	1					
ANR	4325186	ExpressionStatement	c -> dstH = dstH	59:1:879:892	4325055	21	True				
ANR	4325187	AssignmentExpression	c -> dstH = dstH		4325055	0		=			
ANR	4325188	PtrMemberAccess	c -> dstH		4325055	0					
ANR	4325189	Identifier	c		4325055	0					
ANR	4325190	Identifier	dstH		4325055	1					
ANR	4325191	Identifier	dstH		4325055	1					
ANR	4325192	ExpressionStatement	c -> lumXInc = ( ( srcW << 16 ) + ( dstW >> 1 ) ) / dstW	61:1:896:937	4325055	22	True				
ANR	4325193	AssignmentExpression	c -> lumXInc = ( ( srcW << 16 ) + ( dstW >> 1 ) ) / dstW		4325055	0		=			
ANR	4325194	PtrMemberAccess	c -> lumXInc		4325055	0					
ANR	4325195	Identifier	c		4325055	0					
ANR	4325196	Identifier	lumXInc		4325055	1					
ANR	4325197	MultiplicativeExpression	( ( srcW << 16 ) + ( dstW >> 1 ) ) / dstW		4325055	1		/			
ANR	4325198	AdditiveExpression	( srcW << 16 ) + ( dstW >> 1 )		4325055	0		+			
ANR	4325199	ShiftExpression	srcW << 16		4325055	0		<<			
ANR	4325200	Identifier	srcW		4325055	0					
ANR	4325201	PrimaryExpression	16		4325055	1					
ANR	4325202	ShiftExpression	dstW >> 1		4325055	1		>>			
ANR	4325203	Identifier	dstW		4325055	0					
ANR	4325204	PrimaryExpression	1		4325055	1					
ANR	4325205	Identifier	dstW		4325055	1					
ANR	4325206	ExpressionStatement	c -> lumYInc = ( ( srcH << 16 ) + ( dstH >> 1 ) ) / dstH	63:1:941:982	4325055	23	True				
ANR	4325207	AssignmentExpression	c -> lumYInc = ( ( srcH << 16 ) + ( dstH >> 1 ) ) / dstH		4325055	0		=			
ANR	4325208	PtrMemberAccess	c -> lumYInc		4325055	0					
ANR	4325209	Identifier	c		4325055	0					
ANR	4325210	Identifier	lumYInc		4325055	1					
ANR	4325211	MultiplicativeExpression	( ( srcH << 16 ) + ( dstH >> 1 ) ) / dstH		4325055	1		/			
ANR	4325212	AdditiveExpression	( srcH << 16 ) + ( dstH >> 1 )		4325055	0		+			
ANR	4325213	ShiftExpression	srcH << 16		4325055	0		<<			
ANR	4325214	Identifier	srcH		4325055	0					
ANR	4325215	PrimaryExpression	16		4325055	1					
ANR	4325216	ShiftExpression	dstH >> 1		4325055	1		>>			
ANR	4325217	Identifier	dstH		4325055	0					
ANR	4325218	PrimaryExpression	1		4325055	1					
ANR	4325219	Identifier	dstH		4325055	1					
ANR	4325220	ExpressionStatement	c -> flags = flags	65:1:986:1001	4325055	24	True				
ANR	4325221	AssignmentExpression	c -> flags = flags		4325055	0		=			
ANR	4325222	PtrMemberAccess	c -> flags		4325055	0					
ANR	4325223	Identifier	c		4325055	0					
ANR	4325224	Identifier	flags		4325055	1					
ANR	4325225	Identifier	flags		4325055	1					
ANR	4325226	ExpressionStatement	c -> dstFormat = dstFormat	67:1:1005:1028	4325055	25	True				
ANR	4325227	AssignmentExpression	c -> dstFormat = dstFormat		4325055	0		=			
ANR	4325228	PtrMemberAccess	c -> dstFormat		4325055	0					
ANR	4325229	Identifier	c		4325055	0					
ANR	4325230	Identifier	dstFormat		4325055	1					
ANR	4325231	Identifier	dstFormat		4325055	1					
ANR	4325232	ExpressionStatement	c -> srcFormat = srcFormat	69:1:1032:1055	4325055	26	True				
ANR	4325233	AssignmentExpression	c -> srcFormat = srcFormat		4325055	0		=			
ANR	4325234	PtrMemberAccess	c -> srcFormat		4325055	0					
ANR	4325235	Identifier	c		4325055	0					
ANR	4325236	Identifier	srcFormat		4325055	1					
ANR	4325237	Identifier	srcFormat		4325055	1					
ANR	4325238	IfStatement	if ( cpuCaps . hasMMX2 )		4325055	27					
ANR	4325239	Condition	cpuCaps . hasMMX2	73:4:1064:1078	4325055	0	True				
ANR	4325240	MemberAccess	cpuCaps . hasMMX2		4325055	0					
ANR	4325241	Identifier	cpuCaps		4325055	0					
ANR	4325242	Identifier	hasMMX2		4325055	1					
ANR	4325243	CompoundStatement		73:1:906:906	4325055	1					
ANR	4325244	ExpressionStatement	c -> canMMX2BeUsed = ( dstW >= srcW && ( dstW & 31 ) == 0 && ( srcW & 15 ) == 0 ) ? 1 : 0	77:2:1088:1159	4325055	0	True				
ANR	4325245	AssignmentExpression	c -> canMMX2BeUsed = ( dstW >= srcW && ( dstW & 31 ) == 0 && ( srcW & 15 ) == 0 ) ? 1 : 0		4325055	0		=			
ANR	4325246	PtrMemberAccess	c -> canMMX2BeUsed		4325055	0					
ANR	4325247	Identifier	c		4325055	0					
ANR	4325248	Identifier	canMMX2BeUsed		4325055	1					
ANR	4325249	ConditionalExpression	( dstW >= srcW && ( dstW & 31 ) == 0 && ( srcW & 15 ) == 0 ) ? 1 : 0		4325055	1					
ANR	4325250	Condition	dstW >= srcW && ( dstW & 31 ) == 0 && ( srcW & 15 ) == 0		4325055	0					
ANR	4325251	AndExpression	dstW >= srcW && ( dstW & 31 ) == 0 && ( srcW & 15 ) == 0		4325055	0		&&			
ANR	4325252	RelationalExpression	dstW >= srcW		4325055	0		>=			
ANR	4325253	Identifier	dstW		4325055	0					
ANR	4325254	Identifier	srcW		4325055	1					
ANR	4325255	AndExpression	( dstW & 31 ) == 0 && ( srcW & 15 ) == 0		4325055	1		&&			
ANR	4325256	EqualityExpression	( dstW & 31 ) == 0		4325055	0		==			
ANR	4325257	BitAndExpression	dstW & 31		4325055	0		&			
ANR	4325258	Identifier	dstW		4325055	0					
ANR	4325259	PrimaryExpression	31		4325055	1					
ANR	4325260	PrimaryExpression	0		4325055	1					
ANR	4325261	EqualityExpression	( srcW & 15 ) == 0		4325055	1		==			
ANR	4325262	BitAndExpression	srcW & 15		4325055	0		&			
ANR	4325263	Identifier	srcW		4325055	0					
ANR	4325264	PrimaryExpression	15		4325055	1					
ANR	4325265	PrimaryExpression	0		4325055	1					
ANR	4325266	PrimaryExpression	1		4325055	1					
ANR	4325267	PrimaryExpression	0		4325055	2					
ANR	4325268	IfStatement	if ( ! c -> canMMX2BeUsed && dstW >= srcW && ( srcW & 15 ) == 0 && ( flags & SWS_FAST_BILINEAR ) )		4325055	1					
ANR	4325269	Condition	! c -> canMMX2BeUsed && dstW >= srcW && ( srcW & 15 ) == 0 && ( flags & SWS_FAST_BILINEAR )	79:5:1167:1243	4325055	0	True				
ANR	4325270	AndExpression	! c -> canMMX2BeUsed && dstW >= srcW && ( srcW & 15 ) == 0 && ( flags & SWS_FAST_BILINEAR )		4325055	0		&&			
ANR	4325271	UnaryOperationExpression	! c -> canMMX2BeUsed		4325055	0					
ANR	4325272	UnaryOperator	!		4325055	0					
ANR	4325273	PtrMemberAccess	c -> canMMX2BeUsed		4325055	1					
ANR	4325274	Identifier	c		4325055	0					
ANR	4325275	Identifier	canMMX2BeUsed		4325055	1					
ANR	4325276	AndExpression	dstW >= srcW && ( srcW & 15 ) == 0 && ( flags & SWS_FAST_BILINEAR )		4325055	1		&&			
ANR	4325277	RelationalExpression	dstW >= srcW		4325055	0		>=			
ANR	4325278	Identifier	dstW		4325055	0					
ANR	4325279	Identifier	srcW		4325055	1					
ANR	4325280	AndExpression	( srcW & 15 ) == 0 && ( flags & SWS_FAST_BILINEAR )		4325055	1		&&			
ANR	4325281	EqualityExpression	( srcW & 15 ) == 0		4325055	0		==			
ANR	4325282	BitAndExpression	srcW & 15		4325055	0		&			
ANR	4325283	Identifier	srcW		4325055	0					
ANR	4325284	PrimaryExpression	15		4325055	1					
ANR	4325285	PrimaryExpression	0		4325055	1					
ANR	4325286	BitAndExpression	flags & SWS_FAST_BILINEAR		4325055	1		&			
ANR	4325287	Identifier	flags		4325055	0					
ANR	4325288	Identifier	SWS_FAST_BILINEAR		4325055	1					
ANR	4325289	CompoundStatement		79:2:1072:1072	4325055	1					
ANR	4325290	IfStatement	if ( flags & SWS_PRINT_INFO )		4325055	0					
ANR	4325291	Condition	flags & SWS_PRINT_INFO	83:6:1258:1277	4325055	0	True				
ANR	4325292	BitAndExpression	flags & SWS_PRINT_INFO		4325055	0		&			
ANR	4325293	Identifier	flags		4325055	0					
ANR	4325294	Identifier	SWS_PRINT_INFO		4325055	1					
ANR	4325295	ExpressionStatement	"fprintf ( stderr , ""SwScaler: output Width is not a multiple of 32 -> no MMX2 scaler\\n"" )"	85:4:1285:1370	4325055	1	True				
ANR	4325296	CallExpression	"fprintf ( stderr , ""SwScaler: output Width is not a multiple of 32 -> no MMX2 scaler\\n"" )"		4325055	0					
ANR	4325297	Callee	fprintf		4325055	0					
ANR	4325298	Identifier	fprintf		4325055	0					
ANR	4325299	ArgumentList	stderr		4325055	1					
ANR	4325300	Argument	stderr		4325055	0					
ANR	4325301	Identifier	stderr		4325055	0					
ANR	4325302	Argument	"""SwScaler: output Width is not a multiple of 32 -> no MMX2 scaler\\n"""		4325055	1					
ANR	4325303	PrimaryExpression	"""SwScaler: output Width is not a multiple of 32 -> no MMX2 scaler\\n"""		4325055	0					
ANR	4325304	ElseStatement	else		4325055	0					
ANR	4325305	ExpressionStatement	c -> canMMX2BeUsed = 0	93:2:1391:1409	4325055	0	True				
ANR	4325306	AssignmentExpression	c -> canMMX2BeUsed = 0		4325055	0		=			
ANR	4325307	PtrMemberAccess	c -> canMMX2BeUsed		4325055	0					
ANR	4325308	Identifier	c		4325055	0					
ANR	4325309	Identifier	canMMX2BeUsed		4325055	1					
ANR	4325310	PrimaryExpression	0		4325055	1					
ANR	4325311	IfStatement	if ( isHalfChrV ( srcFormat ) )		4325055	28					
ANR	4325312	Condition	isHalfChrV ( srcFormat )	101:4:1504:1524	4325055	0	True				
ANR	4325313	CallExpression	isHalfChrV ( srcFormat )		4325055	0					
ANR	4325314	Callee	isHalfChrV		4325055	0					
ANR	4325315	Identifier	isHalfChrV		4325055	0					
ANR	4325316	ArgumentList	srcFormat		4325055	1					
ANR	4325317	Argument	srcFormat		4325055	0					
ANR	4325318	Identifier	srcFormat		4325055	0					
ANR	4325319	ExpressionStatement	c -> flags = flags = flags & ( ~SWS_FULL_CHR_V )	101:27:1527:1567	4325055	1	True				
ANR	4325320	AssignmentExpression	c -> flags = flags = flags & ( ~SWS_FULL_CHR_V )		4325055	0		=			
ANR	4325321	PtrMemberAccess	c -> flags		4325055	0					
ANR	4325322	Identifier	c		4325055	0					
ANR	4325323	Identifier	flags		4325055	1					
ANR	4325324	AssignmentExpression	flags = flags & ( ~SWS_FULL_CHR_V )		4325055	1		=			
ANR	4325325	Identifier	flags		4325055	0					
ANR	4325326	BitAndExpression	flags & ( ~SWS_FULL_CHR_V )		4325055	1		&			
ANR	4325327	Identifier	flags		4325055	0					
ANR	4325328	Identifier	~SWS_FULL_CHR_V		4325055	1					
ANR	4325329	IfStatement	if ( isHalfChrH ( srcFormat ) )		4325055	29					
ANR	4325330	Condition	isHalfChrH ( srcFormat )	105:4:1650:1670	4325055	0	True				
ANR	4325331	CallExpression	isHalfChrH ( srcFormat )		4325055	0					
ANR	4325332	Callee	isHalfChrH		4325055	0					
ANR	4325333	Identifier	isHalfChrH		4325055	0					
ANR	4325334	ArgumentList	srcFormat		4325055	1					
ANR	4325335	Argument	srcFormat		4325055	0					
ANR	4325336	Identifier	srcFormat		4325055	0					
ANR	4325337	ExpressionStatement	c -> flags = flags = flags & ( ~SWS_FULL_CHR_H_INP )	105:27:1673:1717	4325055	1	True				
ANR	4325338	AssignmentExpression	c -> flags = flags = flags & ( ~SWS_FULL_CHR_H_INP )		4325055	0		=			
ANR	4325339	PtrMemberAccess	c -> flags		4325055	0					
ANR	4325340	Identifier	c		4325055	0					
ANR	4325341	Identifier	flags		4325055	1					
ANR	4325342	AssignmentExpression	flags = flags & ( ~SWS_FULL_CHR_H_INP )		4325055	1		=			
ANR	4325343	Identifier	flags		4325055	0					
ANR	4325344	BitAndExpression	flags & ( ~SWS_FULL_CHR_H_INP )		4325055	1		&			
ANR	4325345	Identifier	flags		4325055	0					
ANR	4325346	Identifier	~SWS_FULL_CHR_H_INP		4325055	1					
ANR	4325347	IfStatement	if ( isHalfChrH ( dstFormat ) )		4325055	30					
ANR	4325348	Condition	isHalfChrH ( dstFormat )	109:4:1810:1830	4325055	0	True				
ANR	4325349	CallExpression	isHalfChrH ( dstFormat )		4325055	0					
ANR	4325350	Callee	isHalfChrH		4325055	0					
ANR	4325351	Identifier	isHalfChrH		4325055	0					
ANR	4325352	ArgumentList	dstFormat		4325055	1					
ANR	4325353	Argument	dstFormat		4325055	0					
ANR	4325354	Identifier	dstFormat		4325055	0					
ANR	4325355	ExpressionStatement	c -> flags = flags = flags & ( ~SWS_FULL_CHR_H_INT )	109:27:1833:1877	4325055	1	True				
ANR	4325356	AssignmentExpression	c -> flags = flags = flags & ( ~SWS_FULL_CHR_H_INT )		4325055	0		=			
ANR	4325357	PtrMemberAccess	c -> flags		4325055	0					
ANR	4325358	Identifier	c		4325055	0					
ANR	4325359	Identifier	flags		4325055	1					
ANR	4325360	AssignmentExpression	flags = flags & ( ~SWS_FULL_CHR_H_INT )		4325055	1		=			
ANR	4325361	Identifier	flags		4325055	0					
ANR	4325362	BitAndExpression	flags & ( ~SWS_FULL_CHR_H_INT )		4325055	1		&			
ANR	4325363	Identifier	flags		4325055	0					
ANR	4325364	Identifier	~SWS_FULL_CHR_H_INT		4325055	1					
ANR	4325365	IfStatement	if ( flags & SWS_FULL_CHR_H_INP )		4325055	31					
ANR	4325366	Condition	flags & SWS_FULL_CHR_H_INP	113:4:1886:1909	4325055	0	True				
ANR	4325367	BitAndExpression	flags & SWS_FULL_CHR_H_INP		4325055	0		&			
ANR	4325368	Identifier	flags		4325055	0					
ANR	4325369	Identifier	SWS_FULL_CHR_H_INP		4325055	1					
ANR	4325370	ExpressionStatement	c -> chrSrcW = srcW	113:30:1912:1928	4325055	1	True				
ANR	4325371	AssignmentExpression	c -> chrSrcW = srcW		4325055	0		=			
ANR	4325372	PtrMemberAccess	c -> chrSrcW		4325055	0					
ANR	4325373	Identifier	c		4325055	0					
ANR	4325374	Identifier	chrSrcW		4325055	1					
ANR	4325375	Identifier	srcW		4325055	1					
ANR	4325376	ElseStatement	else		4325055	0					
ANR	4325377	ExpressionStatement	c -> chrSrcW = ( srcW + 1 ) >> 1	115:9:1940:1963	4325055	0	True				
ANR	4325378	AssignmentExpression	c -> chrSrcW = ( srcW + 1 ) >> 1		4325055	0		=			
ANR	4325379	PtrMemberAccess	c -> chrSrcW		4325055	0					
ANR	4325380	Identifier	c		4325055	0					
ANR	4325381	Identifier	chrSrcW		4325055	1					
ANR	4325382	ShiftExpression	( srcW + 1 ) >> 1		4325055	1		>>			
ANR	4325383	AdditiveExpression	srcW + 1		4325055	0		+			
ANR	4325384	Identifier	srcW		4325055	0					
ANR	4325385	PrimaryExpression	1		4325055	1					
ANR	4325386	PrimaryExpression	1		4325055	1					
ANR	4325387	IfStatement	if ( flags & SWS_FULL_CHR_H_INT )		4325055	32					
ANR	4325388	Condition	flags & SWS_FULL_CHR_H_INT	119:4:1972:1995	4325055	0	True				
ANR	4325389	BitAndExpression	flags & SWS_FULL_CHR_H_INT		4325055	0		&			
ANR	4325390	Identifier	flags		4325055	0					
ANR	4325391	Identifier	SWS_FULL_CHR_H_INT		4325055	1					
ANR	4325392	ExpressionStatement	c -> chrDstW = dstW	119:30:1998:2014	4325055	1	True				
ANR	4325393	AssignmentExpression	c -> chrDstW = dstW		4325055	0		=			
ANR	4325394	PtrMemberAccess	c -> chrDstW		4325055	0					
ANR	4325395	Identifier	c		4325055	0					
ANR	4325396	Identifier	chrDstW		4325055	1					
ANR	4325397	Identifier	dstW		4325055	1					
ANR	4325398	ElseStatement	else		4325055	0					
ANR	4325399	ExpressionStatement	c -> chrDstW = ( dstW + 1 ) >> 1	121:9:2026:2049	4325055	0	True				
ANR	4325400	AssignmentExpression	c -> chrDstW = ( dstW + 1 ) >> 1		4325055	0		=			
ANR	4325401	PtrMemberAccess	c -> chrDstW		4325055	0					
ANR	4325402	Identifier	c		4325055	0					
ANR	4325403	Identifier	chrDstW		4325055	1					
ANR	4325404	ShiftExpression	( dstW + 1 ) >> 1		4325055	1		>>			
ANR	4325405	AdditiveExpression	dstW + 1		4325055	0		+			
ANR	4325406	Identifier	dstW		4325055	0					
ANR	4325407	PrimaryExpression	1		4325055	1					
ANR	4325408	PrimaryExpression	1		4325055	1					
ANR	4325409	IfStatement	if ( flags & SWS_FULL_CHR_V )		4325055	33					
ANR	4325410	Condition	flags & SWS_FULL_CHR_V	125:4:2058:2077	4325055	0	True				
ANR	4325411	BitAndExpression	flags & SWS_FULL_CHR_V		4325055	0		&			
ANR	4325412	Identifier	flags		4325055	0					
ANR	4325413	Identifier	SWS_FULL_CHR_V		4325055	1					
ANR	4325414	ExpressionStatement	c -> chrSrcH = srcH	125:26:2080:2096	4325055	1	True				
ANR	4325415	AssignmentExpression	c -> chrSrcH = srcH		4325055	0		=			
ANR	4325416	PtrMemberAccess	c -> chrSrcH		4325055	0					
ANR	4325417	Identifier	c		4325055	0					
ANR	4325418	Identifier	chrSrcH		4325055	1					
ANR	4325419	Identifier	srcH		4325055	1					
ANR	4325420	ElseStatement	else		4325055	0					
ANR	4325421	ExpressionStatement	c -> chrSrcH = ( srcH + 1 ) >> 1	127:9:2108:2131	4325055	0	True				
ANR	4325422	AssignmentExpression	c -> chrSrcH = ( srcH + 1 ) >> 1		4325055	0		=			
ANR	4325423	PtrMemberAccess	c -> chrSrcH		4325055	0					
ANR	4325424	Identifier	c		4325055	0					
ANR	4325425	Identifier	chrSrcH		4325055	1					
ANR	4325426	ShiftExpression	( srcH + 1 ) >> 1		4325055	1		>>			
ANR	4325427	AdditiveExpression	srcH + 1		4325055	0		+			
ANR	4325428	Identifier	srcH		4325055	0					
ANR	4325429	PrimaryExpression	1		4325055	1					
ANR	4325430	PrimaryExpression	1		4325055	1					
ANR	4325431	IfStatement	if ( isHalfChrV ( dstFormat ) )		4325055	34					
ANR	4325432	Condition	isHalfChrV ( dstFormat )	131:4:2140:2160	4325055	0	True				
ANR	4325433	CallExpression	isHalfChrV ( dstFormat )		4325055	0					
ANR	4325434	Callee	isHalfChrV		4325055	0					
ANR	4325435	Identifier	isHalfChrV		4325055	0					
ANR	4325436	ArgumentList	dstFormat		4325055	1					
ANR	4325437	Argument	dstFormat		4325055	0					
ANR	4325438	Identifier	dstFormat		4325055	0					
ANR	4325439	ExpressionStatement	c -> chrDstH = ( dstH + 1 ) >> 1	131:27:2163:2186	4325055	1	True				
ANR	4325440	AssignmentExpression	c -> chrDstH = ( dstH + 1 ) >> 1		4325055	0		=			
ANR	4325441	PtrMemberAccess	c -> chrDstH		4325055	0					
ANR	4325442	Identifier	c		4325055	0					
ANR	4325443	Identifier	chrDstH		4325055	1					
ANR	4325444	ShiftExpression	( dstH + 1 ) >> 1		4325055	1		>>			
ANR	4325445	AdditiveExpression	dstH + 1		4325055	0		+			
ANR	4325446	Identifier	dstH		4325055	0					
ANR	4325447	PrimaryExpression	1		4325055	1					
ANR	4325448	PrimaryExpression	1		4325055	1					
ANR	4325449	ElseStatement	else		4325055	0					
ANR	4325450	ExpressionStatement	c -> chrDstH = dstH	133:9:2198:2214	4325055	0	True				
ANR	4325451	AssignmentExpression	c -> chrDstH = dstH		4325055	0		=			
ANR	4325452	PtrMemberAccess	c -> chrDstH		4325055	0					
ANR	4325453	Identifier	c		4325055	0					
ANR	4325454	Identifier	chrDstH		4325055	1					
ANR	4325455	Identifier	dstH		4325055	1					
ANR	4325456	ExpressionStatement	c -> chrXInc = ( ( c -> chrSrcW << 16 ) + ( c -> chrDstW >> 1 ) ) / c -> chrDstW	137:1:2220:2279	4325055	35	True				
ANR	4325457	AssignmentExpression	c -> chrXInc = ( ( c -> chrSrcW << 16 ) + ( c -> chrDstW >> 1 ) ) / c -> chrDstW		4325055	0		=			
ANR	4325458	PtrMemberAccess	c -> chrXInc		4325055	0					
ANR	4325459	Identifier	c		4325055	0					
ANR	4325460	Identifier	chrXInc		4325055	1					
ANR	4325461	MultiplicativeExpression	( ( c -> chrSrcW << 16 ) + ( c -> chrDstW >> 1 ) ) / c -> chrDstW		4325055	1		/			
ANR	4325462	AdditiveExpression	( c -> chrSrcW << 16 ) + ( c -> chrDstW >> 1 )		4325055	0		+			
ANR	4325463	ShiftExpression	c -> chrSrcW << 16		4325055	0		<<			
ANR	4325464	PtrMemberAccess	c -> chrSrcW		4325055	0					
ANR	4325465	Identifier	c		4325055	0					
ANR	4325466	Identifier	chrSrcW		4325055	1					
ANR	4325467	PrimaryExpression	16		4325055	1					
ANR	4325468	ShiftExpression	c -> chrDstW >> 1		4325055	1		>>			
ANR	4325469	PtrMemberAccess	c -> chrDstW		4325055	0					
ANR	4325470	Identifier	c		4325055	0					
ANR	4325471	Identifier	chrDstW		4325055	1					
ANR	4325472	PrimaryExpression	1		4325055	1					
ANR	4325473	PtrMemberAccess	c -> chrDstW		4325055	1					
ANR	4325474	Identifier	c		4325055	0					
ANR	4325475	Identifier	chrDstW		4325055	1					
ANR	4325476	ExpressionStatement	c -> chrYInc = ( ( c -> chrSrcH << 16 ) + ( c -> chrDstH >> 1 ) ) / c -> chrDstH	139:1:2283:2342	4325055	36	True				
ANR	4325477	AssignmentExpression	c -> chrYInc = ( ( c -> chrSrcH << 16 ) + ( c -> chrDstH >> 1 ) ) / c -> chrDstH		4325055	0		=			
ANR	4325478	PtrMemberAccess	c -> chrYInc		4325055	0					
ANR	4325479	Identifier	c		4325055	0					
ANR	4325480	Identifier	chrYInc		4325055	1					
ANR	4325481	MultiplicativeExpression	( ( c -> chrSrcH << 16 ) + ( c -> chrDstH >> 1 ) ) / c -> chrDstH		4325055	1		/			
ANR	4325482	AdditiveExpression	( c -> chrSrcH << 16 ) + ( c -> chrDstH >> 1 )		4325055	0		+			
ANR	4325483	ShiftExpression	c -> chrSrcH << 16		4325055	0		<<			
ANR	4325484	PtrMemberAccess	c -> chrSrcH		4325055	0					
ANR	4325485	Identifier	c		4325055	0					
ANR	4325486	Identifier	chrSrcH		4325055	1					
ANR	4325487	PrimaryExpression	16		4325055	1					
ANR	4325488	ShiftExpression	c -> chrDstH >> 1		4325055	1		>>			
ANR	4325489	PtrMemberAccess	c -> chrDstH		4325055	0					
ANR	4325490	Identifier	c		4325055	0					
ANR	4325491	Identifier	chrDstH		4325055	1					
ANR	4325492	PrimaryExpression	1		4325055	1					
ANR	4325493	PtrMemberAccess	c -> chrDstH		4325055	1					
ANR	4325494	Identifier	c		4325055	0					
ANR	4325495	Identifier	chrDstH		4325055	1					
ANR	4325496	IfStatement	if ( flags & SWS_FAST_BILINEAR )		4325055	37					
ANR	4325497	Condition	flags & SWS_FAST_BILINEAR	157:4:2770:2792	4325055	0	True				
ANR	4325498	BitAndExpression	flags & SWS_FAST_BILINEAR		4325055	0		&			
ANR	4325499	Identifier	flags		4325055	0					
ANR	4325500	Identifier	SWS_FAST_BILINEAR		4325055	1					
ANR	4325501	CompoundStatement		157:1:2620:2620	4325055	1					
ANR	4325502	IfStatement	if ( c -> canMMX2BeUsed )		4325055	0					
ANR	4325503	Condition	c -> canMMX2BeUsed	161:5:2805:2820	4325055	0	True				
ANR	4325504	PtrMemberAccess	c -> canMMX2BeUsed		4325055	0					
ANR	4325505	Identifier	c		4325055	0					
ANR	4325506	Identifier	canMMX2BeUsed		4325055	1					
ANR	4325507	CompoundStatement		161:2:2649:2649	4325055	1					
ANR	4325508	ExpressionStatement	c -> lumXInc += 20	165:3:2832:2847	4325055	0	True				
ANR	4325509	AssignmentExpression	c -> lumXInc += 20		4325055	0		+=			
ANR	4325510	PtrMemberAccess	c -> lumXInc		4325055	0					
ANR	4325511	Identifier	c		4325055	0					
ANR	4325512	Identifier	lumXInc		4325055	1					
ANR	4325513	PrimaryExpression	20		4325055	1					
ANR	4325514	ExpressionStatement	c -> chrXInc += 20	167:3:2853:2868	4325055	1	True				
ANR	4325515	AssignmentExpression	c -> chrXInc += 20		4325055	0		+=			
ANR	4325516	PtrMemberAccess	c -> chrXInc		4325055	0					
ANR	4325517	Identifier	c		4325055	0					
ANR	4325518	Identifier	chrXInc		4325055	1					
ANR	4325519	PrimaryExpression	20		4325055	1					
ANR	4325520	ElseStatement	else		4325055	0					
ANR	4325521	IfStatement	if ( cpuCaps . hasMMX )		4325055	0					
ANR	4325522	Condition	cpuCaps . hasMMX	173:10:2941:2954	4325055	0	True				
ANR	4325523	MemberAccess	cpuCaps . hasMMX		4325055	0					
ANR	4325524	Identifier	cpuCaps		4325055	0					
ANR	4325525	Identifier	hasMMX		4325055	1					
ANR	4325526	CompoundStatement		173:2:2783:2783	4325055	1					
ANR	4325527	ExpressionStatement	c -> lumXInc = ( ( srcW - 2 ) << 16 ) / ( dstW - 2 ) - 20	177:3:2966:3007	4325055	0	True				
ANR	4325528	AssignmentExpression	c -> lumXInc = ( ( srcW - 2 ) << 16 ) / ( dstW - 2 ) - 20		4325055	0		=			
ANR	4325529	PtrMemberAccess	c -> lumXInc		4325055	0					
ANR	4325530	Identifier	c		4325055	0					
ANR	4325531	Identifier	lumXInc		4325055	1					
ANR	4325532	AdditiveExpression	( ( srcW - 2 ) << 16 ) / ( dstW - 2 ) - 20		4325055	1		-			
ANR	4325533	MultiplicativeExpression	( ( srcW - 2 ) << 16 ) / ( dstW - 2 )		4325055	0		/			
ANR	4325534	ShiftExpression	( srcW - 2 ) << 16		4325055	0		<<			
ANR	4325535	AdditiveExpression	srcW - 2		4325055	0		-			
ANR	4325536	Identifier	srcW		4325055	0					
ANR	4325537	PrimaryExpression	2		4325055	1					
ANR	4325538	PrimaryExpression	16		4325055	1					
ANR	4325539	AdditiveExpression	dstW - 2		4325055	1		-			
ANR	4325540	Identifier	dstW		4325055	0					
ANR	4325541	PrimaryExpression	2		4325055	1					
ANR	4325542	PrimaryExpression	20		4325055	1					
ANR	4325543	ExpressionStatement	c -> chrXInc = ( ( c -> chrSrcW - 2 ) << 16 ) / ( c -> chrDstW - 2 ) - 20	179:3:3013:3066	4325055	1	True				
ANR	4325544	AssignmentExpression	c -> chrXInc = ( ( c -> chrSrcW - 2 ) << 16 ) / ( c -> chrDstW - 2 ) - 20		4325055	0		=			
ANR	4325545	PtrMemberAccess	c -> chrXInc		4325055	0					
ANR	4325546	Identifier	c		4325055	0					
ANR	4325547	Identifier	chrXInc		4325055	1					
ANR	4325548	AdditiveExpression	( ( c -> chrSrcW - 2 ) << 16 ) / ( c -> chrDstW - 2 ) - 20		4325055	1		-			
ANR	4325549	MultiplicativeExpression	( ( c -> chrSrcW - 2 ) << 16 ) / ( c -> chrDstW - 2 )		4325055	0		/			
ANR	4325550	ShiftExpression	( c -> chrSrcW - 2 ) << 16		4325055	0		<<			
ANR	4325551	AdditiveExpression	c -> chrSrcW - 2		4325055	0		-			
ANR	4325552	PtrMemberAccess	c -> chrSrcW		4325055	0					
ANR	4325553	Identifier	c		4325055	0					
ANR	4325554	Identifier	chrSrcW		4325055	1					
ANR	4325555	PrimaryExpression	2		4325055	1					
ANR	4325556	PrimaryExpression	16		4325055	1					
ANR	4325557	AdditiveExpression	c -> chrDstW - 2		4325055	1		-			
ANR	4325558	PtrMemberAccess	c -> chrDstW		4325055	0					
ANR	4325559	Identifier	c		4325055	0					
ANR	4325560	Identifier	chrDstW		4325055	1					
ANR	4325561	PrimaryExpression	2		4325055	1					
ANR	4325562	PrimaryExpression	20		4325055	1					
ANR	4325563	CompoundStatement		189:2:2968:3013	4325055	38					
ANR	4325564	IdentifierDeclStatement	const int filterAlign = cpuCaps . hasMMX ? 4 : 1 ;	191:2:3145:3190	4325055	0	True				
ANR	4325565	IdentifierDecl	filterAlign = cpuCaps . hasMMX ? 4 : 1		4325055	0					
ANR	4325566	IdentifierDeclType	const int		4325055	0					
ANR	4325567	Identifier	filterAlign		4325055	1					
ANR	4325568	AssignmentExpression	filterAlign = cpuCaps . hasMMX ? 4 : 1		4325055	2		=			
ANR	4325569	Identifier	filterAlign		4325055	0					
ANR	4325570	ConditionalExpression	cpuCaps . hasMMX ? 4 : 1		4325055	1					
ANR	4325571	Condition	cpuCaps . hasMMX		4325055	0					
ANR	4325572	MemberAccess	cpuCaps . hasMMX		4325055	0					
ANR	4325573	Identifier	cpuCaps		4325055	0					
ANR	4325574	Identifier	hasMMX		4325055	1					
ANR	4325575	PrimaryExpression	4		4325055	1					
ANR	4325576	PrimaryExpression	1		4325055	2					
ANR	4325577	ExpressionStatement	"initFilter ( & c -> hLumFilter , & c -> hLumFilterPos , & c -> hLumFilterSize , c -> lumXInc , srcW , dstW , filterAlign , 1 << 14 , flags , srcFilter -> lumH , dstFilter -> lumH )"	195:2:3197:3371	4325055	1	True				
ANR	4325578	CallExpression	"initFilter ( & c -> hLumFilter , & c -> hLumFilterPos , & c -> hLumFilterSize , c -> lumXInc , srcW , dstW , filterAlign , 1 << 14 , flags , srcFilter -> lumH , dstFilter -> lumH )"		4325055	0					
ANR	4325579	Callee	initFilter		4325055	0					
ANR	4325580	Identifier	initFilter		4325055	0					
ANR	4325581	ArgumentList	& c -> hLumFilter		4325055	1					
ANR	4325582	Argument	& c -> hLumFilter		4325055	0					
ANR	4325583	UnaryOperationExpression	& c -> hLumFilter		4325055	0					
ANR	4325584	UnaryOperator	&		4325055	0					
ANR	4325585	PtrMemberAccess	c -> hLumFilter		4325055	1					
ANR	4325586	Identifier	c		4325055	0					
ANR	4325587	Identifier	hLumFilter		4325055	1					
ANR	4325588	Argument	& c -> hLumFilterPos		4325055	1					
ANR	4325589	UnaryOperationExpression	& c -> hLumFilterPos		4325055	0					
ANR	4325590	UnaryOperator	&		4325055	0					
ANR	4325591	PtrMemberAccess	c -> hLumFilterPos		4325055	1					
ANR	4325592	Identifier	c		4325055	0					
ANR	4325593	Identifier	hLumFilterPos		4325055	1					
ANR	4325594	Argument	& c -> hLumFilterSize		4325055	2					
ANR	4325595	UnaryOperationExpression	& c -> hLumFilterSize		4325055	0					
ANR	4325596	UnaryOperator	&		4325055	0					
ANR	4325597	PtrMemberAccess	c -> hLumFilterSize		4325055	1					
ANR	4325598	Identifier	c		4325055	0					
ANR	4325599	Identifier	hLumFilterSize		4325055	1					
ANR	4325600	Argument	c -> lumXInc		4325055	3					
ANR	4325601	PtrMemberAccess	c -> lumXInc		4325055	0					
ANR	4325602	Identifier	c		4325055	0					
ANR	4325603	Identifier	lumXInc		4325055	1					
ANR	4325604	Argument	srcW		4325055	4					
ANR	4325605	Identifier	srcW		4325055	0					
ANR	4325606	Argument	dstW		4325055	5					
ANR	4325607	Identifier	dstW		4325055	0					
ANR	4325608	Argument	filterAlign		4325055	6					
ANR	4325609	Identifier	filterAlign		4325055	0					
ANR	4325610	Argument	1 << 14		4325055	7					
ANR	4325611	ShiftExpression	1 << 14		4325055	0		<<			
ANR	4325612	PrimaryExpression	1		4325055	0					
ANR	4325613	PrimaryExpression	14		4325055	1					
ANR	4325614	Argument	flags		4325055	8					
ANR	4325615	Identifier	flags		4325055	0					
ANR	4325616	Argument	srcFilter -> lumH		4325055	9					
ANR	4325617	PtrMemberAccess	srcFilter -> lumH		4325055	0					
ANR	4325618	Identifier	srcFilter		4325055	0					
ANR	4325619	Identifier	lumH		4325055	1					
ANR	4325620	Argument	dstFilter -> lumH		4325055	10					
ANR	4325621	PtrMemberAccess	dstFilter -> lumH		4325055	0					
ANR	4325622	Identifier	dstFilter		4325055	0					
ANR	4325623	Identifier	lumH		4325055	1					
ANR	4325624	ExpressionStatement	"initFilter ( & c -> hChrFilter , & c -> hChrFilterPos , & c -> hChrFilterSize , c -> chrXInc , ( srcW + 1 ) >> 1 , c -> chrDstW , filterAlign , 1 << 14 , flags , srcFilter -> chrH , dstFilter -> chrH )"	201:2:3376:3550	4325055	2	True				
ANR	4325625	CallExpression	"initFilter ( & c -> hChrFilter , & c -> hChrFilterPos , & c -> hChrFilterSize , c -> chrXInc , ( srcW + 1 ) >> 1 , c -> chrDstW , filterAlign , 1 << 14 , flags , srcFilter -> chrH , dstFilter -> chrH )"		4325055	0					
ANR	4325626	Callee	initFilter		4325055	0					
ANR	4325627	Identifier	initFilter		4325055	0					
ANR	4325628	ArgumentList	& c -> hChrFilter		4325055	1					
ANR	4325629	Argument	& c -> hChrFilter		4325055	0					
ANR	4325630	UnaryOperationExpression	& c -> hChrFilter		4325055	0					
ANR	4325631	UnaryOperator	&		4325055	0					
ANR	4325632	PtrMemberAccess	c -> hChrFilter		4325055	1					
ANR	4325633	Identifier	c		4325055	0					
ANR	4325634	Identifier	hChrFilter		4325055	1					
ANR	4325635	Argument	& c -> hChrFilterPos		4325055	1					
ANR	4325636	UnaryOperationExpression	& c -> hChrFilterPos		4325055	0					
ANR	4325637	UnaryOperator	&		4325055	0					
ANR	4325638	PtrMemberAccess	c -> hChrFilterPos		4325055	1					
ANR	4325639	Identifier	c		4325055	0					
ANR	4325640	Identifier	hChrFilterPos		4325055	1					
ANR	4325641	Argument	& c -> hChrFilterSize		4325055	2					
ANR	4325642	UnaryOperationExpression	& c -> hChrFilterSize		4325055	0					
ANR	4325643	UnaryOperator	&		4325055	0					
ANR	4325644	PtrMemberAccess	c -> hChrFilterSize		4325055	1					
ANR	4325645	Identifier	c		4325055	0					
ANR	4325646	Identifier	hChrFilterSize		4325055	1					
ANR	4325647	Argument	c -> chrXInc		4325055	3					
ANR	4325648	PtrMemberAccess	c -> chrXInc		4325055	0					
ANR	4325649	Identifier	c		4325055	0					
ANR	4325650	Identifier	chrXInc		4325055	1					
ANR	4325651	Argument	( srcW + 1 ) >> 1		4325055	4					
ANR	4325652	ShiftExpression	( srcW + 1 ) >> 1		4325055	0		>>			
ANR	4325653	AdditiveExpression	srcW + 1		4325055	0		+			
ANR	4325654	Identifier	srcW		4325055	0					
ANR	4325655	PrimaryExpression	1		4325055	1					
ANR	4325656	PrimaryExpression	1		4325055	1					
ANR	4325657	Argument	c -> chrDstW		4325055	5					
ANR	4325658	PtrMemberAccess	c -> chrDstW		4325055	0					
ANR	4325659	Identifier	c		4325055	0					
ANR	4325660	Identifier	chrDstW		4325055	1					
ANR	4325661	Argument	filterAlign		4325055	6					
ANR	4325662	Identifier	filterAlign		4325055	0					
ANR	4325663	Argument	1 << 14		4325055	7					
ANR	4325664	ShiftExpression	1 << 14		4325055	0		<<			
ANR	4325665	PrimaryExpression	1		4325055	0					
ANR	4325666	PrimaryExpression	14		4325055	1					
ANR	4325667	Argument	flags		4325055	8					
ANR	4325668	Identifier	flags		4325055	0					
ANR	4325669	Argument	srcFilter -> chrH		4325055	9					
ANR	4325670	PtrMemberAccess	srcFilter -> chrH		4325055	0					
ANR	4325671	Identifier	srcFilter		4325055	0					
ANR	4325672	Identifier	chrH		4325055	1					
ANR	4325673	Argument	dstFilter -> chrH		4325055	10					
ANR	4325674	PtrMemberAccess	dstFilter -> chrH		4325055	0					
ANR	4325675	Identifier	dstFilter		4325055	0					
ANR	4325676	Identifier	chrH		4325055	1					
ANR	4325677	IfStatement	if ( c -> canMMX2BeUsed && ( flags & SWS_FAST_BILINEAR ) )		4325055	3					
ANR	4325678	Condition	c -> canMMX2BeUsed && ( flags & SWS_FAST_BILINEAR )	213:5:3600:3646	4325055	0	True				
ANR	4325679	AndExpression	c -> canMMX2BeUsed && ( flags & SWS_FAST_BILINEAR )		4325055	0		&&			
ANR	4325680	PtrMemberAccess	c -> canMMX2BeUsed		4325055	0					
ANR	4325681	Identifier	c		4325055	0					
ANR	4325682	Identifier	canMMX2BeUsed		4325055	1					
ANR	4325683	BitAndExpression	flags & SWS_FAST_BILINEAR		4325055	1		&			
ANR	4325684	Identifier	flags		4325055	0					
ANR	4325685	Identifier	SWS_FAST_BILINEAR		4325055	1					
ANR	4325686	CompoundStatement		213:2:3475:3475	4325055	1					
ANR	4325687	ExpressionStatement	"initMMX2HScaler ( dstW , c -> lumXInc , c -> funnyYCode )"	217:3:3658:3712	4325055	0	True				
ANR	4325688	CallExpression	"initMMX2HScaler ( dstW , c -> lumXInc , c -> funnyYCode )"		4325055	0					
ANR	4325689	Callee	initMMX2HScaler		4325055	0					
ANR	4325690	Identifier	initMMX2HScaler		4325055	0					
ANR	4325691	ArgumentList	dstW		4325055	1					
ANR	4325692	Argument	dstW		4325055	0					
ANR	4325693	Identifier	dstW		4325055	0					
ANR	4325694	Argument	c -> lumXInc		4325055	1					
ANR	4325695	PtrMemberAccess	c -> lumXInc		4325055	0					
ANR	4325696	Identifier	c		4325055	0					
ANR	4325697	Identifier	lumXInc		4325055	1					
ANR	4325698	Argument	c -> funnyYCode		4325055	2					
ANR	4325699	PtrMemberAccess	c -> funnyYCode		4325055	0					
ANR	4325700	Identifier	c		4325055	0					
ANR	4325701	Identifier	funnyYCode		4325055	1					
ANR	4325702	ExpressionStatement	"initMMX2HScaler ( c -> chrDstW , c -> chrXInc , c -> funnyUVCode )"	219:3:3718:3773	4325055	1	True				
ANR	4325703	CallExpression	"initMMX2HScaler ( c -> chrDstW , c -> chrXInc , c -> funnyUVCode )"		4325055	0					
ANR	4325704	Callee	initMMX2HScaler		4325055	0					
ANR	4325705	Identifier	initMMX2HScaler		4325055	0					
ANR	4325706	ArgumentList	c -> chrDstW		4325055	1					
ANR	4325707	Argument	c -> chrDstW		4325055	0					
ANR	4325708	PtrMemberAccess	c -> chrDstW		4325055	0					
ANR	4325709	Identifier	c		4325055	0					
ANR	4325710	Identifier	chrDstW		4325055	1					
ANR	4325711	Argument	c -> chrXInc		4325055	1					
ANR	4325712	PtrMemberAccess	c -> chrXInc		4325055	0					
ANR	4325713	Identifier	c		4325055	0					
ANR	4325714	Identifier	chrXInc		4325055	1					
ANR	4325715	Argument	c -> funnyUVCode		4325055	2					
ANR	4325716	PtrMemberAccess	c -> funnyUVCode		4325055	0					
ANR	4325717	Identifier	c		4325055	0					
ANR	4325718	Identifier	funnyUVCode		4325055	1					
ANR	4325719	ExpressionStatement	"initFilter ( & c -> vLumFilter , & c -> vLumFilterPos , & c -> vLumFilterSize , c -> lumYInc , srcH , dstH , 1 , ( 1 << 12 ) - 4 , flags , srcFilter -> lumV , dstFilter -> lumV )"	235:1:3882:4047	4325055	39	True				
ANR	4325720	CallExpression	"initFilter ( & c -> vLumFilter , & c -> vLumFilterPos , & c -> vLumFilterSize , c -> lumYInc , srcH , dstH , 1 , ( 1 << 12 ) - 4 , flags , srcFilter -> lumV , dstFilter -> lumV )"		4325055	0					
ANR	4325721	Callee	initFilter		4325055	0					
ANR	4325722	Identifier	initFilter		4325055	0					
ANR	4325723	ArgumentList	& c -> vLumFilter		4325055	1					
ANR	4325724	Argument	& c -> vLumFilter		4325055	0					
ANR	4325725	UnaryOperationExpression	& c -> vLumFilter		4325055	0					
ANR	4325726	UnaryOperator	&		4325055	0					
ANR	4325727	PtrMemberAccess	c -> vLumFilter		4325055	1					
ANR	4325728	Identifier	c		4325055	0					
ANR	4325729	Identifier	vLumFilter		4325055	1					
ANR	4325730	Argument	& c -> vLumFilterPos		4325055	1					
ANR	4325731	UnaryOperationExpression	& c -> vLumFilterPos		4325055	0					
ANR	4325732	UnaryOperator	&		4325055	0					
ANR	4325733	PtrMemberAccess	c -> vLumFilterPos		4325055	1					
ANR	4325734	Identifier	c		4325055	0					
ANR	4325735	Identifier	vLumFilterPos		4325055	1					
ANR	4325736	Argument	& c -> vLumFilterSize		4325055	2					
ANR	4325737	UnaryOperationExpression	& c -> vLumFilterSize		4325055	0					
ANR	4325738	UnaryOperator	&		4325055	0					
ANR	4325739	PtrMemberAccess	c -> vLumFilterSize		4325055	1					
ANR	4325740	Identifier	c		4325055	0					
ANR	4325741	Identifier	vLumFilterSize		4325055	1					
ANR	4325742	Argument	c -> lumYInc		4325055	3					
ANR	4325743	PtrMemberAccess	c -> lumYInc		4325055	0					
ANR	4325744	Identifier	c		4325055	0					
ANR	4325745	Identifier	lumYInc		4325055	1					
ANR	4325746	Argument	srcH		4325055	4					
ANR	4325747	Identifier	srcH		4325055	0					
ANR	4325748	Argument	dstH		4325055	5					
ANR	4325749	Identifier	dstH		4325055	0					
ANR	4325750	Argument	1		4325055	6					
ANR	4325751	PrimaryExpression	1		4325055	0					
ANR	4325752	Argument	( 1 << 12 ) - 4		4325055	7					
ANR	4325753	AdditiveExpression	( 1 << 12 ) - 4		4325055	0		-			
ANR	4325754	ShiftExpression	1 << 12		4325055	0		<<			
ANR	4325755	PrimaryExpression	1		4325055	0					
ANR	4325756	PrimaryExpression	12		4325055	1					
ANR	4325757	PrimaryExpression	4		4325055	1					
ANR	4325758	Argument	flags		4325055	8					
ANR	4325759	Identifier	flags		4325055	0					
ANR	4325760	Argument	srcFilter -> lumV		4325055	9					
ANR	4325761	PtrMemberAccess	srcFilter -> lumV		4325055	0					
ANR	4325762	Identifier	srcFilter		4325055	0					
ANR	4325763	Identifier	lumV		4325055	1					
ANR	4325764	Argument	dstFilter -> lumV		4325055	10					
ANR	4325765	PtrMemberAccess	dstFilter -> lumV		4325055	0					
ANR	4325766	Identifier	dstFilter		4325055	0					
ANR	4325767	Identifier	lumV		4325055	1					
ANR	4325768	ExpressionStatement	"initFilter ( & c -> vChrFilter , & c -> vChrFilterPos , & c -> vChrFilterSize , c -> chrYInc , ( srcH + 1 ) >> 1 , c -> chrDstH , 1 , ( 1 << 12 ) - 4 , flags , srcFilter -> chrV , dstFilter -> chrV )"	241:1:4051:4217	4325055	40	True				
ANR	4325769	CallExpression	"initFilter ( & c -> vChrFilter , & c -> vChrFilterPos , & c -> vChrFilterSize , c -> chrYInc , ( srcH + 1 ) >> 1 , c -> chrDstH , 1 , ( 1 << 12 ) - 4 , flags , srcFilter -> chrV , dstFilter -> chrV )"		4325055	0					
ANR	4325770	Callee	initFilter		4325055	0					
ANR	4325771	Identifier	initFilter		4325055	0					
ANR	4325772	ArgumentList	& c -> vChrFilter		4325055	1					
ANR	4325773	Argument	& c -> vChrFilter		4325055	0					
ANR	4325774	UnaryOperationExpression	& c -> vChrFilter		4325055	0					
ANR	4325775	UnaryOperator	&		4325055	0					
ANR	4325776	PtrMemberAccess	c -> vChrFilter		4325055	1					
ANR	4325777	Identifier	c		4325055	0					
ANR	4325778	Identifier	vChrFilter		4325055	1					
ANR	4325779	Argument	& c -> vChrFilterPos		4325055	1					
ANR	4325780	UnaryOperationExpression	& c -> vChrFilterPos		4325055	0					
ANR	4325781	UnaryOperator	&		4325055	0					
ANR	4325782	PtrMemberAccess	c -> vChrFilterPos		4325055	1					
ANR	4325783	Identifier	c		4325055	0					
ANR	4325784	Identifier	vChrFilterPos		4325055	1					
ANR	4325785	Argument	& c -> vChrFilterSize		4325055	2					
ANR	4325786	UnaryOperationExpression	& c -> vChrFilterSize		4325055	0					
ANR	4325787	UnaryOperator	&		4325055	0					
ANR	4325788	PtrMemberAccess	c -> vChrFilterSize		4325055	1					
ANR	4325789	Identifier	c		4325055	0					
ANR	4325790	Identifier	vChrFilterSize		4325055	1					
ANR	4325791	Argument	c -> chrYInc		4325055	3					
ANR	4325792	PtrMemberAccess	c -> chrYInc		4325055	0					
ANR	4325793	Identifier	c		4325055	0					
ANR	4325794	Identifier	chrYInc		4325055	1					
ANR	4325795	Argument	( srcH + 1 ) >> 1		4325055	4					
ANR	4325796	ShiftExpression	( srcH + 1 ) >> 1		4325055	0		>>			
ANR	4325797	AdditiveExpression	srcH + 1		4325055	0		+			
ANR	4325798	Identifier	srcH		4325055	0					
ANR	4325799	PrimaryExpression	1		4325055	1					
ANR	4325800	PrimaryExpression	1		4325055	1					
ANR	4325801	Argument	c -> chrDstH		4325055	5					
ANR	4325802	PtrMemberAccess	c -> chrDstH		4325055	0					
ANR	4325803	Identifier	c		4325055	0					
ANR	4325804	Identifier	chrDstH		4325055	1					
ANR	4325805	Argument	1		4325055	6					
ANR	4325806	PrimaryExpression	1		4325055	0					
ANR	4325807	Argument	( 1 << 12 ) - 4		4325055	7					
ANR	4325808	AdditiveExpression	( 1 << 12 ) - 4		4325055	0		-			
ANR	4325809	ShiftExpression	1 << 12		4325055	0		<<			
ANR	4325810	PrimaryExpression	1		4325055	0					
ANR	4325811	PrimaryExpression	12		4325055	1					
ANR	4325812	PrimaryExpression	4		4325055	1					
ANR	4325813	Argument	flags		4325055	8					
ANR	4325814	Identifier	flags		4325055	0					
ANR	4325815	Argument	srcFilter -> chrV		4325055	9					
ANR	4325816	PtrMemberAccess	srcFilter -> chrV		4325055	0					
ANR	4325817	Identifier	srcFilter		4325055	0					
ANR	4325818	Identifier	chrV		4325055	1					
ANR	4325819	Argument	dstFilter -> chrV		4325055	10					
ANR	4325820	PtrMemberAccess	dstFilter -> chrV		4325055	0					
ANR	4325821	Identifier	dstFilter		4325055	0					
ANR	4325822	Identifier	chrV		4325055	1					
ANR	4325823	ExpressionStatement	c -> vLumBufSize = c -> vLumFilterSize	251:1:4310:4343	4325055	41	True				
ANR	4325824	AssignmentExpression	c -> vLumBufSize = c -> vLumFilterSize		4325055	0		=			
ANR	4325825	PtrMemberAccess	c -> vLumBufSize		4325055	0					
ANR	4325826	Identifier	c		4325055	0					
ANR	4325827	Identifier	vLumBufSize		4325055	1					
ANR	4325828	PtrMemberAccess	c -> vLumFilterSize		4325055	1					
ANR	4325829	Identifier	c		4325055	0					
ANR	4325830	Identifier	vLumFilterSize		4325055	1					
ANR	4325831	ExpressionStatement	c -> vChrBufSize = c -> vChrFilterSize	253:1:4347:4380	4325055	42	True				
ANR	4325832	AssignmentExpression	c -> vChrBufSize = c -> vChrFilterSize		4325055	0		=			
ANR	4325833	PtrMemberAccess	c -> vChrBufSize		4325055	0					
ANR	4325834	Identifier	c		4325055	0					
ANR	4325835	Identifier	vChrBufSize		4325055	1					
ANR	4325836	PtrMemberAccess	c -> vChrFilterSize		4325055	1					
ANR	4325837	Identifier	c		4325055	0					
ANR	4325838	Identifier	vChrFilterSize		4325055	1					
ANR	4325839	ForStatement	for ( i = 0 ; i < dstH ; i ++ )		4325055	43					
ANR	4325840	ForInit	i = 0 ;	255:5:4388:4391	4325055	0	True				
ANR	4325841	AssignmentExpression	i = 0		4325055	0		=			
ANR	4325842	Identifier	i		4325055	0					
ANR	4325843	PrimaryExpression	0		4325055	1					
ANR	4325844	Condition	i < dstH	255:10:4393:4398	4325055	1	True				
ANR	4325845	RelationalExpression	i < dstH		4325055	0		<			
ANR	4325846	Identifier	i		4325055	0					
ANR	4325847	Identifier	dstH		4325055	1					
ANR	4325848	PostIncDecOperationExpression	i ++	255:18:4401:4403	4325055	2	True				
ANR	4325849	Identifier	i		4325055	0					
ANR	4325850	IncDec	++		4325055	1					
ANR	4325851	CompoundStatement		259:2:4270:4397	4325055	3					
ANR	4325852	IdentifierDeclStatement	int chrI = i * c -> chrDstH / dstH ;	259:2:4413:4442	4325055	0	True				
ANR	4325853	IdentifierDecl	chrI = i * c -> chrDstH / dstH		4325055	0					
ANR	4325854	IdentifierDeclType	int		4325055	0					
ANR	4325855	Identifier	chrI		4325055	1					
ANR	4325856	AssignmentExpression	chrI = i * c -> chrDstH / dstH		4325055	2		=			
ANR	4325857	Identifier	chrI		4325055	0					
ANR	4325858	MultiplicativeExpression	i * c -> chrDstH / dstH		4325055	1		*			
ANR	4325859	Identifier	i		4325055	0					
ANR	4325860	MultiplicativeExpression	c -> chrDstH / dstH		4325055	1		/			
ANR	4325861	PtrMemberAccess	c -> chrDstH		4325055	0					
ANR	4325862	Identifier	c		4325055	0					
ANR	4325863	Identifier	chrDstH		4325055	1					
ANR	4325864	Identifier	dstH		4325055	1					
ANR	4325865	IdentifierDeclStatement	"int nextSlice = MAX ( c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1 , ( ( c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1 ) << 1 ) ) ;"	261:2:4447:4574	4325055	1	True				
ANR	4325866	IdentifierDecl	"nextSlice = MAX ( c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1 , ( ( c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1 ) << 1 ) )"		4325055	0					
ANR	4325867	IdentifierDeclType	int		4325055	0					
ANR	4325868	Identifier	nextSlice		4325055	1					
ANR	4325869	AssignmentExpression	"nextSlice = MAX ( c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1 , ( ( c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1 ) << 1 ) )"		4325055	2		=			
ANR	4325870	Identifier	nextSlice		4325055	0					
ANR	4325871	CallExpression	"MAX ( c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1 , ( ( c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1 ) << 1 ) )"		4325055	1					
ANR	4325872	Callee	MAX		4325055	0					
ANR	4325873	Identifier	MAX		4325055	0					
ANR	4325874	ArgumentList	c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1		4325055	1					
ANR	4325875	Argument	c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1		4325055	0					
ANR	4325876	AdditiveExpression	c -> vLumFilterPos [ i ] + c -> vLumFilterSize - 1		4325055	0		+			
ANR	4325877	ArrayIndexing	c -> vLumFilterPos [ i ]		4325055	0					
ANR	4325878	PtrMemberAccess	c -> vLumFilterPos		4325055	0					
ANR	4325879	Identifier	c		4325055	0					
ANR	4325880	Identifier	vLumFilterPos		4325055	1					
ANR	4325881	Identifier	i		4325055	1					
ANR	4325882	AdditiveExpression	c -> vLumFilterSize - 1		4325055	1		-			
ANR	4325883	PtrMemberAccess	c -> vLumFilterSize		4325055	0					
ANR	4325884	Identifier	c		4325055	0					
ANR	4325885	Identifier	vLumFilterSize		4325055	1					
ANR	4325886	PrimaryExpression	1		4325055	1					
ANR	4325887	Argument	( c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1 ) << 1		4325055	1					
ANR	4325888	ShiftExpression	( c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1 ) << 1		4325055	0		<<			
ANR	4325889	AdditiveExpression	c -> vChrFilterPos [ chrI ] + c -> vChrFilterSize - 1		4325055	0		+			
ANR	4325890	ArrayIndexing	c -> vChrFilterPos [ chrI ]		4325055	0					
ANR	4325891	PtrMemberAccess	c -> vChrFilterPos		4325055	0					
ANR	4325892	Identifier	c		4325055	0					
ANR	4325893	Identifier	vChrFilterPos		4325055	1					
ANR	4325894	Identifier	chrI		4325055	1					
ANR	4325895	AdditiveExpression	c -> vChrFilterSize - 1		4325055	1		-			
ANR	4325896	PtrMemberAccess	c -> vChrFilterSize		4325055	0					
ANR	4325897	Identifier	c		4325055	0					
ANR	4325898	Identifier	vChrFilterSize		4325055	1					
ANR	4325899	PrimaryExpression	1		4325055	1					
ANR	4325900	PrimaryExpression	1		4325055	1					
ANR	4325901	ExpressionStatement	nextSlice &= ~1	265:2:4579:4593	4325055	2	True				
ANR	4325902	AssignmentExpression	nextSlice &= ~1		4325055	0		&=			
ANR	4325903	Identifier	nextSlice		4325055	0					
ANR	4325904	Identifier	~1		4325055	1					
ANR	4325905	IfStatement	if ( c -> vLumFilterPos [ i ] + c -> vLumBufSize < nextSlice )		4325055	3					
ANR	4325906	Condition	c -> vLumFilterPos [ i ] + c -> vLumBufSize < nextSlice	267:5:4636:4686	4325055	0	True				
ANR	4325907	RelationalExpression	c -> vLumFilterPos [ i ] + c -> vLumBufSize < nextSlice		4325055	0		<			
ANR	4325908	AdditiveExpression	c -> vLumFilterPos [ i ] + c -> vLumBufSize		4325055	0		+			
ANR	4325909	ArrayIndexing	c -> vLumFilterPos [ i ]		4325055	0					
ANR	4325910	PtrMemberAccess	c -> vLumFilterPos		4325055	0					
ANR	4325911	Identifier	c		4325055	0					
ANR	4325912	Identifier	vLumFilterPos		4325055	1					
ANR	4325913	Identifier	i		4325055	1					
ANR	4325914	PtrMemberAccess	c -> vLumBufSize		4325055	1					
ANR	4325915	Identifier	c		4325055	0					
ANR	4325916	Identifier	vLumBufSize		4325055	1					
ANR	4325917	Identifier	nextSlice		4325055	1					
ANR	4325918	ExpressionStatement	c -> vLumBufSize = nextSlice - c -> vLumFilterPos [ i ]	269:3:4693:4743	4325055	1	True				
ANR	4325919	AssignmentExpression	c -> vLumBufSize = nextSlice - c -> vLumFilterPos [ i ]		4325055	0		=			
ANR	4325920	PtrMemberAccess	c -> vLumBufSize		4325055	0					
ANR	4325921	Identifier	c		4325055	0					
ANR	4325922	Identifier	vLumBufSize		4325055	1					
ANR	4325923	AdditiveExpression	nextSlice - c -> vLumFilterPos [ i ]		4325055	1		-			
ANR	4325924	Identifier	nextSlice		4325055	0					
ANR	4325925	ArrayIndexing	c -> vLumFilterPos [ i ]		4325055	1					
ANR	4325926	PtrMemberAccess	c -> vLumFilterPos		4325055	0					
ANR	4325927	Identifier	c		4325055	0					
ANR	4325928	Identifier	vLumFilterPos		4325055	1					
ANR	4325929	Identifier	i		4325055	1					
ANR	4325930	IfStatement	if ( c -> vChrFilterPos [ chrI ] + c -> vChrBufSize < ( nextSlice >> 1 ) )		4325055	4					
ANR	4325931	Condition	c -> vChrFilterPos [ chrI ] + c -> vChrBufSize < ( nextSlice >> 1 )	271:5:4751:4806	4325055	0	True				
ANR	4325932	RelationalExpression	c -> vChrFilterPos [ chrI ] + c -> vChrBufSize < ( nextSlice >> 1 )		4325055	0		<			
ANR	4325933	AdditiveExpression	c -> vChrFilterPos [ chrI ] + c -> vChrBufSize		4325055	0		+			
ANR	4325934	ArrayIndexing	c -> vChrFilterPos [ chrI ]		4325055	0					
ANR	4325935	PtrMemberAccess	c -> vChrFilterPos		4325055	0					
ANR	4325936	Identifier	c		4325055	0					
ANR	4325937	Identifier	vChrFilterPos		4325055	1					
ANR	4325938	Identifier	chrI		4325055	1					
ANR	4325939	PtrMemberAccess	c -> vChrBufSize		4325055	1					
ANR	4325940	Identifier	c		4325055	0					
ANR	4325941	Identifier	vChrBufSize		4325055	1					
ANR	4325942	ShiftExpression	nextSlice >> 1		4325055	1		>>			
ANR	4325943	Identifier	nextSlice		4325055	0					
ANR	4325944	PrimaryExpression	1		4325055	1					
ANR	4325945	ExpressionStatement	c -> vChrBufSize = ( nextSlice >> 1 ) - c -> vChrFilterPos [ chrI ]	273:3:4813:4868	4325055	1	True				
ANR	4325946	AssignmentExpression	c -> vChrBufSize = ( nextSlice >> 1 ) - c -> vChrFilterPos [ chrI ]		4325055	0		=			
ANR	4325947	PtrMemberAccess	c -> vChrBufSize		4325055	0					
ANR	4325948	Identifier	c		4325055	0					
ANR	4325949	Identifier	vChrBufSize		4325055	1					
ANR	4325950	AdditiveExpression	( nextSlice >> 1 ) - c -> vChrFilterPos [ chrI ]		4325055	1		-			
ANR	4325951	ShiftExpression	nextSlice >> 1		4325055	0		>>			
ANR	4325952	Identifier	nextSlice		4325055	0					
ANR	4325953	PrimaryExpression	1		4325055	1					
ANR	4325954	ArrayIndexing	c -> vChrFilterPos [ chrI ]		4325055	1					
ANR	4325955	PtrMemberAccess	c -> vChrFilterPos		4325055	0					
ANR	4325956	Identifier	c		4325055	0					
ANR	4325957	Identifier	vChrFilterPos		4325055	1					
ANR	4325958	Identifier	chrI		4325055	1					
ANR	4325959	ExpressionStatement	"c -> lumPixBuf = ( int16_t * * ) memalign ( 4 , c -> vLumBufSize * 2 * sizeof ( int16_t * ) )"	281:1:4962:5033	4325055	44	True				
ANR	4325960	AssignmentExpression	"c -> lumPixBuf = ( int16_t * * ) memalign ( 4 , c -> vLumBufSize * 2 * sizeof ( int16_t * ) )"		4325055	0		=			
ANR	4325961	PtrMemberAccess	c -> lumPixBuf		4325055	0					
ANR	4325962	Identifier	c		4325055	0					
ANR	4325963	Identifier	lumPixBuf		4325055	1					
ANR	4325964	CastExpression	"( int16_t * * ) memalign ( 4 , c -> vLumBufSize * 2 * sizeof ( int16_t * ) )"		4325055	1					
ANR	4325965	CastTarget	int16_t * *		4325055	0					
ANR	4325966	CallExpression	"memalign ( 4 , c -> vLumBufSize * 2 * sizeof ( int16_t * ) )"		4325055	1					
ANR	4325967	Callee	memalign		4325055	0					
ANR	4325968	Identifier	memalign		4325055	0					
ANR	4325969	ArgumentList	4		4325055	1					
ANR	4325970	Argument	4		4325055	0					
ANR	4325971	PrimaryExpression	4		4325055	0					
ANR	4325972	Argument	c -> vLumBufSize * 2 * sizeof ( int16_t * )		4325055	1					
ANR	4325973	MultiplicativeExpression	c -> vLumBufSize * 2 * sizeof ( int16_t * )		4325055	0		*			
ANR	4325974	PtrMemberAccess	c -> vLumBufSize		4325055	0					
ANR	4325975	Identifier	c		4325055	0					
ANR	4325976	Identifier	vLumBufSize		4325055	1					
ANR	4325977	MultiplicativeExpression	2 * sizeof ( int16_t * )		4325055	1		*			
ANR	4325978	PrimaryExpression	2		4325055	0					
ANR	4325979	SizeofExpression	sizeof ( int16_t * )		4325055	1					
ANR	4325980	Sizeof	sizeof		4325055	0					
ANR	4325981	SizeofOperand	int16_t *		4325055	1					
ANR	4325982	ExpressionStatement	"c -> chrPixBuf = ( int16_t * * ) memalign ( 4 , c -> vChrBufSize * 2 * sizeof ( int16_t * ) )"	283:1:5037:5108	4325055	45	True				
ANR	4325983	AssignmentExpression	"c -> chrPixBuf = ( int16_t * * ) memalign ( 4 , c -> vChrBufSize * 2 * sizeof ( int16_t * ) )"		4325055	0		=			
ANR	4325984	PtrMemberAccess	c -> chrPixBuf		4325055	0					
ANR	4325985	Identifier	c		4325055	0					
ANR	4325986	Identifier	chrPixBuf		4325055	1					
ANR	4325987	CastExpression	"( int16_t * * ) memalign ( 4 , c -> vChrBufSize * 2 * sizeof ( int16_t * ) )"		4325055	1					
ANR	4325988	CastTarget	int16_t * *		4325055	0					
ANR	4325989	CallExpression	"memalign ( 4 , c -> vChrBufSize * 2 * sizeof ( int16_t * ) )"		4325055	1					
ANR	4325990	Callee	memalign		4325055	0					
ANR	4325991	Identifier	memalign		4325055	0					
ANR	4325992	ArgumentList	4		4325055	1					
ANR	4325993	Argument	4		4325055	0					
ANR	4325994	PrimaryExpression	4		4325055	0					
ANR	4325995	Argument	c -> vChrBufSize * 2 * sizeof ( int16_t * )		4325055	1					
ANR	4325996	MultiplicativeExpression	c -> vChrBufSize * 2 * sizeof ( int16_t * )		4325055	0		*			
ANR	4325997	PtrMemberAccess	c -> vChrBufSize		4325055	0					
ANR	4325998	Identifier	c		4325055	0					
ANR	4325999	Identifier	vChrBufSize		4325055	1					
ANR	4326000	MultiplicativeExpression	2 * sizeof ( int16_t * )		4325055	1		*			
ANR	4326001	PrimaryExpression	2		4325055	0					
ANR	4326002	SizeofExpression	sizeof ( int16_t * )		4325055	1					
ANR	4326003	Sizeof	sizeof		4325055	0					
ANR	4326004	SizeofOperand	int16_t *		4325055	1					
ANR	4326005	ForStatement	for ( i = 0 ; i < c -> vLumBufSize ; i ++ )		4325055	46					
ANR	4326006	ForInit	i = 0 ;	287:5:5243:5246	4325055	0	True				
ANR	4326007	AssignmentExpression	i = 0		4325055	0		=			
ANR	4326008	Identifier	i		4325055	0					
ANR	4326009	PrimaryExpression	0		4325055	1					
ANR	4326010	Condition	i < c -> vLumBufSize	287:10:5248:5263	4325055	1	True				
ANR	4326011	RelationalExpression	i < c -> vLumBufSize		4325055	0		<			
ANR	4326012	Identifier	i		4325055	0					
ANR	4326013	PtrMemberAccess	c -> vLumBufSize		4325055	1					
ANR	4326014	Identifier	c		4325055	0					
ANR	4326015	Identifier	vLumBufSize		4325055	1					
ANR	4326016	PostIncDecOperationExpression	i ++	287:28:5266:5268	4325055	2	True				
ANR	4326017	Identifier	i		4325055	0					
ANR	4326018	IncDec	++		4325055	1					
ANR	4326019	ExpressionStatement	"c -> lumPixBuf [ i ] = c -> lumPixBuf [ i + c -> vLumBufSize ] = ( uint16_t * ) memalign ( 8 , 4000 )"	289:2:5274:5351	4325055	3	True				
ANR	4326020	AssignmentExpression	"c -> lumPixBuf [ i ] = c -> lumPixBuf [ i + c -> vLumBufSize ] = ( uint16_t * ) memalign ( 8 , 4000 )"		4325055	0		=			
ANR	4326021	ArrayIndexing	c -> lumPixBuf [ i ]		4325055	0					
ANR	4326022	PtrMemberAccess	c -> lumPixBuf		4325055	0					
ANR	4326023	Identifier	c		4325055	0					
ANR	4326024	Identifier	lumPixBuf		4325055	1					
ANR	4326025	Identifier	i		4325055	1					
ANR	4326026	AssignmentExpression	"c -> lumPixBuf [ i + c -> vLumBufSize ] = ( uint16_t * ) memalign ( 8 , 4000 )"		4325055	1		=			
ANR	4326027	ArrayIndexing	c -> lumPixBuf [ i + c -> vLumBufSize ]		4325055	0					
ANR	4326028	PtrMemberAccess	c -> lumPixBuf		4325055	0					
ANR	4326029	Identifier	c		4325055	0					
ANR	4326030	Identifier	lumPixBuf		4325055	1					
ANR	4326031	AdditiveExpression	i + c -> vLumBufSize		4325055	1		+			
ANR	4326032	Identifier	i		4325055	0					
ANR	4326033	PtrMemberAccess	c -> vLumBufSize		4325055	1					
ANR	4326034	Identifier	c		4325055	0					
ANR	4326035	Identifier	vLumBufSize		4325055	1					
ANR	4326036	CastExpression	"( uint16_t * ) memalign ( 8 , 4000 )"		4325055	1					
ANR	4326037	CastTarget	uint16_t *		4325055	0					
ANR	4326038	CallExpression	"memalign ( 8 , 4000 )"		4325055	1					
ANR	4326039	Callee	memalign		4325055	0					
ANR	4326040	Identifier	memalign		4325055	0					
ANR	4326041	ArgumentList	8		4325055	1					
ANR	4326042	Argument	8		4325055	0					
ANR	4326043	PrimaryExpression	8		4325055	0					
ANR	4326044	Argument	4000		4325055	1					
ANR	4326045	PrimaryExpression	4000		4325055	0					
ANR	4326046	ForStatement	for ( i = 0 ; i < c -> vChrBufSize ; i ++ )		4325055	47					
ANR	4326047	ForInit	i = 0 ;	291:5:5359:5362	4325055	0	True				
ANR	4326048	AssignmentExpression	i = 0		4325055	0		=			
ANR	4326049	Identifier	i		4325055	0					
ANR	4326050	PrimaryExpression	0		4325055	1					
ANR	4326051	Condition	i < c -> vChrBufSize	291:10:5364:5379	4325055	1	True				
ANR	4326052	RelationalExpression	i < c -> vChrBufSize		4325055	0		<			
ANR	4326053	Identifier	i		4325055	0					
ANR	4326054	PtrMemberAccess	c -> vChrBufSize		4325055	1					
ANR	4326055	Identifier	c		4325055	0					
ANR	4326056	Identifier	vChrBufSize		4325055	1					
ANR	4326057	PostIncDecOperationExpression	i ++	291:28:5382:5384	4325055	2	True				
ANR	4326058	Identifier	i		4325055	0					
ANR	4326059	IncDec	++		4325055	1					
ANR	4326060	ExpressionStatement	"c -> chrPixBuf [ i ] = c -> chrPixBuf [ i + c -> vChrBufSize ] = ( uint16_t * ) memalign ( 8 , 8000 )"	293:2:5390:5467	4325055	3	True				
ANR	4326061	AssignmentExpression	"c -> chrPixBuf [ i ] = c -> chrPixBuf [ i + c -> vChrBufSize ] = ( uint16_t * ) memalign ( 8 , 8000 )"		4325055	0		=			
ANR	4326062	ArrayIndexing	c -> chrPixBuf [ i ]		4325055	0					
ANR	4326063	PtrMemberAccess	c -> chrPixBuf		4325055	0					
ANR	4326064	Identifier	c		4325055	0					
ANR	4326065	Identifier	chrPixBuf		4325055	1					
ANR	4326066	Identifier	i		4325055	1					
ANR	4326067	AssignmentExpression	"c -> chrPixBuf [ i + c -> vChrBufSize ] = ( uint16_t * ) memalign ( 8 , 8000 )"		4325055	1		=			
ANR	4326068	ArrayIndexing	c -> chrPixBuf [ i + c -> vChrBufSize ]		4325055	0					
ANR	4326069	PtrMemberAccess	c -> chrPixBuf		4325055	0					
ANR	4326070	Identifier	c		4325055	0					
ANR	4326071	Identifier	chrPixBuf		4325055	1					
ANR	4326072	AdditiveExpression	i + c -> vChrBufSize		4325055	1		+			
ANR	4326073	Identifier	i		4325055	0					
ANR	4326074	PtrMemberAccess	c -> vChrBufSize		4325055	1					
ANR	4326075	Identifier	c		4325055	0					
ANR	4326076	Identifier	vChrBufSize		4325055	1					
ANR	4326077	CastExpression	"( uint16_t * ) memalign ( 8 , 8000 )"		4325055	1					
ANR	4326078	CastTarget	uint16_t *		4325055	0					
ANR	4326079	CallExpression	"memalign ( 8 , 8000 )"		4325055	1					
ANR	4326080	Callee	memalign		4325055	0					
ANR	4326081	Identifier	memalign		4325055	0					
ANR	4326082	ArgumentList	8		4325055	1					
ANR	4326083	Argument	8		4325055	0					
ANR	4326084	PrimaryExpression	8		4325055	0					
ANR	4326085	Argument	8000		4325055	1					
ANR	4326086	PrimaryExpression	8000		4325055	0					
ANR	4326087	ForStatement	for ( i = 0 ; i < c -> vLumBufSize ; i ++ )		4325055	48					
ANR	4326088	ForInit	i = 0 ;	299:5:5555:5558	4325055	0	True				
ANR	4326089	AssignmentExpression	i = 0		4325055	0		=			
ANR	4326090	Identifier	i		4325055	0					
ANR	4326091	PrimaryExpression	0		4325055	1					
ANR	4326092	Condition	i < c -> vLumBufSize	299:10:5560:5575	4325055	1	True				
ANR	4326093	RelationalExpression	i < c -> vLumBufSize		4325055	0		<			
ANR	4326094	Identifier	i		4325055	0					
ANR	4326095	PtrMemberAccess	c -> vLumBufSize		4325055	1					
ANR	4326096	Identifier	c		4325055	0					
ANR	4326097	Identifier	vLumBufSize		4325055	1					
ANR	4326098	PostIncDecOperationExpression	i ++	299:28:5578:5580	4325055	2	True				
ANR	4326099	Identifier	i		4325055	0					
ANR	4326100	IncDec	++		4325055	1					
ANR	4326101	ExpressionStatement	"memset ( c -> lumPixBuf [ i ] , 0 , 4000 )"	299:33:5583:5615	4325055	3	True				
ANR	4326102	CallExpression	"memset ( c -> lumPixBuf [ i ] , 0 , 4000 )"		4325055	0					
ANR	4326103	Callee	memset		4325055	0					
ANR	4326104	Identifier	memset		4325055	0					
ANR	4326105	ArgumentList	c -> lumPixBuf [ i ]		4325055	1					
ANR	4326106	Argument	c -> lumPixBuf [ i ]		4325055	0					
ANR	4326107	ArrayIndexing	c -> lumPixBuf [ i ]		4325055	0					
ANR	4326108	PtrMemberAccess	c -> lumPixBuf		4325055	0					
ANR	4326109	Identifier	c		4325055	0					
ANR	4326110	Identifier	lumPixBuf		4325055	1					
ANR	4326111	Identifier	i		4325055	1					
ANR	4326112	Argument	0		4325055	1					
ANR	4326113	PrimaryExpression	0		4325055	0					
ANR	4326114	Argument	4000		4325055	2					
ANR	4326115	PrimaryExpression	4000		4325055	0					
ANR	4326116	ForStatement	for ( i = 0 ; i < c -> vChrBufSize ; i ++ )		4325055	49					
ANR	4326117	ForInit	i = 0 ;	301:5:5623:5626	4325055	0	True				
ANR	4326118	AssignmentExpression	i = 0		4325055	0		=			
ANR	4326119	Identifier	i		4325055	0					
ANR	4326120	PrimaryExpression	0		4325055	1					
ANR	4326121	Condition	i < c -> vChrBufSize	301:10:5628:5643	4325055	1	True				
ANR	4326122	RelationalExpression	i < c -> vChrBufSize		4325055	0		<			
ANR	4326123	Identifier	i		4325055	0					
ANR	4326124	PtrMemberAccess	c -> vChrBufSize		4325055	1					
ANR	4326125	Identifier	c		4325055	0					
ANR	4326126	Identifier	vChrBufSize		4325055	1					
ANR	4326127	PostIncDecOperationExpression	i ++	301:28:5646:5648	4325055	2	True				
ANR	4326128	Identifier	i		4325055	0					
ANR	4326129	IncDec	++		4325055	1					
ANR	4326130	ExpressionStatement	"memset ( c -> chrPixBuf [ i ] , 64 , 8000 )"	301:33:5651:5684	4325055	3	True				
ANR	4326131	CallExpression	"memset ( c -> chrPixBuf [ i ] , 64 , 8000 )"		4325055	0					
ANR	4326132	Callee	memset		4325055	0					
ANR	4326133	Identifier	memset		4325055	0					
ANR	4326134	ArgumentList	c -> chrPixBuf [ i ]		4325055	1					
ANR	4326135	Argument	c -> chrPixBuf [ i ]		4325055	0					
ANR	4326136	ArrayIndexing	c -> chrPixBuf [ i ]		4325055	0					
ANR	4326137	PtrMemberAccess	c -> chrPixBuf		4325055	0					
ANR	4326138	Identifier	c		4325055	0					
ANR	4326139	Identifier	chrPixBuf		4325055	1					
ANR	4326140	Identifier	i		4325055	1					
ANR	4326141	Argument	64		4325055	1					
ANR	4326142	PrimaryExpression	64		4325055	0					
ANR	4326143	Argument	8000		4325055	2					
ANR	4326144	PrimaryExpression	8000		4325055	0					
ANR	4326145	Statement	ASSERT	305:1:5690:5695	4325055	50	True				
ANR	4326146	Statement	(	305:7:5696:5696	4325055	51	True				
ANR	4326147	Statement	c	305:8:5697:5697	4325055	52	True				
ANR	4326148	Statement	->	305:9:5698:5699	4325055	53	True				
ANR	4326149	Statement	chrDstH	305:11:5700:5706	4325055	54	True				
ANR	4326150	Statement	<=	305:19:5708:5709	4325055	55	True				
ANR	4326151	Statement	dstH	305:22:5711:5714	4325055	56	True				
ANR	4326152	Statement	)	305:26:5715:5715	4325055	57	True				
ANR	4326153	IfStatement	if ( cpuCaps . hasMMX )		4325055	58					
ANR	4326154	Condition	cpuCaps . hasMMX	311:4:5759:5772	4325055	0	True				
ANR	4326155	MemberAccess	cpuCaps . hasMMX		4325055	0					
ANR	4326156	Identifier	cpuCaps		4325055	0					
ANR	4326157	Identifier	hasMMX		4325055	1					
ANR	4326158	CompoundStatement		311:1:5600:5600	4325055	1					
ANR	4326159	ExpressionStatement	"c -> lumMmxFilter = ( int16_t * ) memalign ( 8 , c -> vLumFilterSize * dstH * 4 * sizeof ( int16_t ) )"	315:2:5782:5868	4325055	0	True				
ANR	4326160	AssignmentExpression	"c -> lumMmxFilter = ( int16_t * ) memalign ( 8 , c -> vLumFilterSize * dstH * 4 * sizeof ( int16_t ) )"		4325055	0		=			
ANR	4326161	PtrMemberAccess	c -> lumMmxFilter		4325055	0					
ANR	4326162	Identifier	c		4325055	0					
ANR	4326163	Identifier	lumMmxFilter		4325055	1					
ANR	4326164	CastExpression	"( int16_t * ) memalign ( 8 , c -> vLumFilterSize * dstH * 4 * sizeof ( int16_t ) )"		4325055	1					
ANR	4326165	CastTarget	int16_t *		4325055	0					
ANR	4326166	CallExpression	"memalign ( 8 , c -> vLumFilterSize * dstH * 4 * sizeof ( int16_t ) )"		4325055	1					
ANR	4326167	Callee	memalign		4325055	0					
ANR	4326168	Identifier	memalign		4325055	0					
ANR	4326169	ArgumentList	8		4325055	1					
ANR	4326170	Argument	8		4325055	0					
ANR	4326171	PrimaryExpression	8		4325055	0					
ANR	4326172	Argument	c -> vLumFilterSize * dstH * 4 * sizeof ( int16_t )		4325055	1					
ANR	4326173	MultiplicativeExpression	c -> vLumFilterSize * dstH * 4 * sizeof ( int16_t )		4325055	0		*			
ANR	4326174	PtrMemberAccess	c -> vLumFilterSize		4325055	0					
ANR	4326175	Identifier	c		4325055	0					
ANR	4326176	Identifier	vLumFilterSize		4325055	1					
ANR	4326177	MultiplicativeExpression	dstH * 4 * sizeof ( int16_t )		4325055	1		*			
ANR	4326178	Identifier	dstH		4325055	0					
ANR	4326179	MultiplicativeExpression	4 * sizeof ( int16_t )		4325055	1		*			
ANR	4326180	PrimaryExpression	4		4325055	0					
ANR	4326181	SizeofExpression	sizeof ( int16_t )		4325055	1					
ANR	4326182	Sizeof	sizeof		4325055	0					
ANR	4326183	SizeofOperand	int16_t		4325055	1					
ANR	4326184	ExpressionStatement	"c -> chrMmxFilter = ( int16_t * ) memalign ( 8 , c -> vChrFilterSize * c -> chrDstH * 4 * sizeof ( int16_t ) )"	317:2:5873:5959	4325055	1	True				
ANR	4326185	AssignmentExpression	"c -> chrMmxFilter = ( int16_t * ) memalign ( 8 , c -> vChrFilterSize * c -> chrDstH * 4 * sizeof ( int16_t ) )"		4325055	0		=			
ANR	4326186	PtrMemberAccess	c -> chrMmxFilter		4325055	0					
ANR	4326187	Identifier	c		4325055	0					
ANR	4326188	Identifier	chrMmxFilter		4325055	1					
ANR	4326189	CastExpression	"( int16_t * ) memalign ( 8 , c -> vChrFilterSize * c -> chrDstH * 4 * sizeof ( int16_t ) )"		4325055	1					
ANR	4326190	CastTarget	int16_t *		4325055	0					
ANR	4326191	CallExpression	"memalign ( 8 , c -> vChrFilterSize * c -> chrDstH * 4 * sizeof ( int16_t ) )"		4325055	1					
ANR	4326192	Callee	memalign		4325055	0					
ANR	4326193	Identifier	memalign		4325055	0					
ANR	4326194	ArgumentList	8		4325055	1					
ANR	4326195	Argument	8		4325055	0					
ANR	4326196	PrimaryExpression	8		4325055	0					
ANR	4326197	Argument	c -> vChrFilterSize * c -> chrDstH * 4 * sizeof ( int16_t )		4325055	1					
ANR	4326198	MultiplicativeExpression	c -> vChrFilterSize * c -> chrDstH * 4 * sizeof ( int16_t )		4325055	0		*			
ANR	4326199	PtrMemberAccess	c -> vChrFilterSize		4325055	0					
ANR	4326200	Identifier	c		4325055	0					
ANR	4326201	Identifier	vChrFilterSize		4325055	1					
ANR	4326202	MultiplicativeExpression	c -> chrDstH * 4 * sizeof ( int16_t )		4325055	1		*			
ANR	4326203	PtrMemberAccess	c -> chrDstH		4325055	0					
ANR	4326204	Identifier	c		4325055	0					
ANR	4326205	Identifier	chrDstH		4325055	1					
ANR	4326206	MultiplicativeExpression	4 * sizeof ( int16_t )		4325055	1		*			
ANR	4326207	PrimaryExpression	4		4325055	0					
ANR	4326208	SizeofExpression	sizeof ( int16_t )		4325055	1					
ANR	4326209	Sizeof	sizeof		4325055	0					
ANR	4326210	SizeofOperand	int16_t		4325055	1					
ANR	4326211	ForStatement	for ( i = 0 ; i < c -> vLumFilterSize * dstH ; i ++ )		4325055	2					
ANR	4326212	ForInit	i = 0 ;	319:6:5968:5971	4325055	0	True				
ANR	4326213	AssignmentExpression	i = 0		4325055	0		=			
ANR	4326214	Identifier	i		4325055	0					
ANR	4326215	PrimaryExpression	0		4325055	1					
ANR	4326216	Condition	i < c -> vLumFilterSize * dstH	319:11:5973:5996	4325055	1	True				
ANR	4326217	RelationalExpression	i < c -> vLumFilterSize * dstH		4325055	0		<			
ANR	4326218	Identifier	i		4325055	0					
ANR	4326219	MultiplicativeExpression	c -> vLumFilterSize * dstH		4325055	1		*			
ANR	4326220	PtrMemberAccess	c -> vLumFilterSize		4325055	0					
ANR	4326221	Identifier	c		4325055	0					
ANR	4326222	Identifier	vLumFilterSize		4325055	1					
ANR	4326223	Identifier	dstH		4325055	1					
ANR	4326224	PostIncDecOperationExpression	i ++	319:37:5999:6001	4325055	2	True				
ANR	4326225	Identifier	i		4325055	0					
ANR	4326226	IncDec	++		4325055	1					
ANR	4326227	ExpressionStatement	c -> lumMmxFilter [ 4 * i ] = c -> lumMmxFilter [ 4 * i + 1 ] = c -> lumMmxFilter [ 4 * i + 2 ] = c -> lumMmxFilter [ 4 * i + 3 ] = c -> vLumFilter [ i ]	321:3:6008:6120	4325055	3	True				
ANR	4326228	AssignmentExpression	c -> lumMmxFilter [ 4 * i ] = c -> lumMmxFilter [ 4 * i + 1 ] = c -> lumMmxFilter [ 4 * i + 2 ] = c -> lumMmxFilter [ 4 * i + 3 ] = c -> vLumFilter [ i ]		4325055	0		=			
ANR	4326229	ArrayIndexing	c -> lumMmxFilter [ 4 * i ]		4325055	0					
ANR	4326230	PtrMemberAccess	c -> lumMmxFilter		4325055	0					
ANR	4326231	Identifier	c		4325055	0					
ANR	4326232	Identifier	lumMmxFilter		4325055	1					
ANR	4326233	MultiplicativeExpression	4 * i		4325055	1		*			
ANR	4326234	PrimaryExpression	4		4325055	0					
ANR	4326235	Identifier	i		4325055	1					
ANR	4326236	AssignmentExpression	c -> lumMmxFilter [ 4 * i + 1 ] = c -> lumMmxFilter [ 4 * i + 2 ] = c -> lumMmxFilter [ 4 * i + 3 ] = c -> vLumFilter [ i ]		4325055	1		=			
ANR	4326237	ArrayIndexing	c -> lumMmxFilter [ 4 * i + 1 ]		4325055	0					
ANR	4326238	PtrMemberAccess	c -> lumMmxFilter		4325055	0					
ANR	4326239	Identifier	c		4325055	0					
ANR	4326240	Identifier	lumMmxFilter		4325055	1					
ANR	4326241	AdditiveExpression	4 * i + 1		4325055	1		+			
ANR	4326242	MultiplicativeExpression	4 * i		4325055	0		*			
ANR	4326243	PrimaryExpression	4		4325055	0					
ANR	4326244	Identifier	i		4325055	1					
ANR	4326245	PrimaryExpression	1		4325055	1					
ANR	4326246	AssignmentExpression	c -> lumMmxFilter [ 4 * i + 2 ] = c -> lumMmxFilter [ 4 * i + 3 ] = c -> vLumFilter [ i ]		4325055	1		=			
ANR	4326247	ArrayIndexing	c -> lumMmxFilter [ 4 * i + 2 ]		4325055	0					
ANR	4326248	PtrMemberAccess	c -> lumMmxFilter		4325055	0					
ANR	4326249	Identifier	c		4325055	0					
ANR	4326250	Identifier	lumMmxFilter		4325055	1					
ANR	4326251	AdditiveExpression	4 * i + 2		4325055	1		+			
ANR	4326252	MultiplicativeExpression	4 * i		4325055	0		*			
ANR	4326253	PrimaryExpression	4		4325055	0					
ANR	4326254	Identifier	i		4325055	1					
ANR	4326255	PrimaryExpression	2		4325055	1					
ANR	4326256	AssignmentExpression	c -> lumMmxFilter [ 4 * i + 3 ] = c -> vLumFilter [ i ]		4325055	1		=			
ANR	4326257	ArrayIndexing	c -> lumMmxFilter [ 4 * i + 3 ]		4325055	0					
ANR	4326258	PtrMemberAccess	c -> lumMmxFilter		4325055	0					
ANR	4326259	Identifier	c		4325055	0					
ANR	4326260	Identifier	lumMmxFilter		4325055	1					
ANR	4326261	AdditiveExpression	4 * i + 3		4325055	1		+			
ANR	4326262	MultiplicativeExpression	4 * i		4325055	0		*			
ANR	4326263	PrimaryExpression	4		4325055	0					
ANR	4326264	Identifier	i		4325055	1					
ANR	4326265	PrimaryExpression	3		4325055	1					
ANR	4326266	ArrayIndexing	c -> vLumFilter [ i ]		4325055	1					
ANR	4326267	PtrMemberAccess	c -> vLumFilter		4325055	0					
ANR	4326268	Identifier	c		4325055	0					
ANR	4326269	Identifier	vLumFilter		4325055	1					
ANR	4326270	Identifier	i		4325055	1					
ANR	4326271	ForStatement	for ( i = 0 ; i < c -> vChrFilterSize * c -> chrDstH ; i ++ )		4325055	3					
ANR	4326272	ForInit	i = 0 ;	325:6:6129:6132	4325055	0	True				
ANR	4326273	AssignmentExpression	i = 0		4325055	0		=			
ANR	4326274	Identifier	i		4325055	0					
ANR	4326275	PrimaryExpression	0		4325055	1					
ANR	4326276	Condition	i < c -> vChrFilterSize * c -> chrDstH	325:11:6134:6163	4325055	1	True				
ANR	4326277	RelationalExpression	i < c -> vChrFilterSize * c -> chrDstH		4325055	0		<			
ANR	4326278	Identifier	i		4325055	0					
ANR	4326279	MultiplicativeExpression	c -> vChrFilterSize * c -> chrDstH		4325055	1		*			
ANR	4326280	PtrMemberAccess	c -> vChrFilterSize		4325055	0					
ANR	4326281	Identifier	c		4325055	0					
ANR	4326282	Identifier	vChrFilterSize		4325055	1					
ANR	4326283	PtrMemberAccess	c -> chrDstH		4325055	1					
ANR	4326284	Identifier	c		4325055	0					
ANR	4326285	Identifier	chrDstH		4325055	1					
ANR	4326286	PostIncDecOperationExpression	i ++	325:43:6166:6168	4325055	2	True				
ANR	4326287	Identifier	i		4325055	0					
ANR	4326288	IncDec	++		4325055	1					
ANR	4326289	ExpressionStatement	c -> chrMmxFilter [ 4 * i ] = c -> chrMmxFilter [ 4 * i + 1 ] = c -> chrMmxFilter [ 4 * i + 2 ] = c -> chrMmxFilter [ 4 * i + 3 ] = c -> vChrFilter [ i ]	327:3:6175:6287	4325055	3	True				
ANR	4326290	AssignmentExpression	c -> chrMmxFilter [ 4 * i ] = c -> chrMmxFilter [ 4 * i + 1 ] = c -> chrMmxFilter [ 4 * i + 2 ] = c -> chrMmxFilter [ 4 * i + 3 ] = c -> vChrFilter [ i ]		4325055	0		=			
ANR	4326291	ArrayIndexing	c -> chrMmxFilter [ 4 * i ]		4325055	0					
ANR	4326292	PtrMemberAccess	c -> chrMmxFilter		4325055	0					
ANR	4326293	Identifier	c		4325055	0					
ANR	4326294	Identifier	chrMmxFilter		4325055	1					
ANR	4326295	MultiplicativeExpression	4 * i		4325055	1		*			
ANR	4326296	PrimaryExpression	4		4325055	0					
ANR	4326297	Identifier	i		4325055	1					
ANR	4326298	AssignmentExpression	c -> chrMmxFilter [ 4 * i + 1 ] = c -> chrMmxFilter [ 4 * i + 2 ] = c -> chrMmxFilter [ 4 * i + 3 ] = c -> vChrFilter [ i ]		4325055	1		=			
ANR	4326299	ArrayIndexing	c -> chrMmxFilter [ 4 * i + 1 ]		4325055	0					
ANR	4326300	PtrMemberAccess	c -> chrMmxFilter		4325055	0					
ANR	4326301	Identifier	c		4325055	0					
ANR	4326302	Identifier	chrMmxFilter		4325055	1					
ANR	4326303	AdditiveExpression	4 * i + 1		4325055	1		+			
ANR	4326304	MultiplicativeExpression	4 * i		4325055	0		*			
ANR	4326305	PrimaryExpression	4		4325055	0					
ANR	4326306	Identifier	i		4325055	1					
ANR	4326307	PrimaryExpression	1		4325055	1					
ANR	4326308	AssignmentExpression	c -> chrMmxFilter [ 4 * i + 2 ] = c -> chrMmxFilter [ 4 * i + 3 ] = c -> vChrFilter [ i ]		4325055	1		=			
ANR	4326309	ArrayIndexing	c -> chrMmxFilter [ 4 * i + 2 ]		4325055	0					
ANR	4326310	PtrMemberAccess	c -> chrMmxFilter		4325055	0					
ANR	4326311	Identifier	c		4325055	0					
ANR	4326312	Identifier	chrMmxFilter		4325055	1					
ANR	4326313	AdditiveExpression	4 * i + 2		4325055	1		+			
ANR	4326314	MultiplicativeExpression	4 * i		4325055	0		*			
ANR	4326315	PrimaryExpression	4		4325055	0					
ANR	4326316	Identifier	i		4325055	1					
ANR	4326317	PrimaryExpression	2		4325055	1					
ANR	4326318	AssignmentExpression	c -> chrMmxFilter [ 4 * i + 3 ] = c -> vChrFilter [ i ]		4325055	1		=			
ANR	4326319	ArrayIndexing	c -> chrMmxFilter [ 4 * i + 3 ]		4325055	0					
ANR	4326320	PtrMemberAccess	c -> chrMmxFilter		4325055	0					
ANR	4326321	Identifier	c		4325055	0					
ANR	4326322	Identifier	chrMmxFilter		4325055	1					
ANR	4326323	AdditiveExpression	4 * i + 3		4325055	1		+			
ANR	4326324	MultiplicativeExpression	4 * i		4325055	0		*			
ANR	4326325	PrimaryExpression	4		4325055	0					
ANR	4326326	Identifier	i		4325055	1					
ANR	4326327	PrimaryExpression	3		4325055	1					
ANR	4326328	ArrayIndexing	c -> vChrFilter [ i ]		4325055	1					
ANR	4326329	PtrMemberAccess	c -> vChrFilter		4325055	0					
ANR	4326330	Identifier	c		4325055	0					
ANR	4326331	Identifier	vChrFilter		4325055	1					
ANR	4326332	Identifier	i		4325055	1					
ANR	4326333	IfStatement	if ( flags & SWS_PRINT_INFO )		4325055	59					
ANR	4326334	Condition	flags & SWS_PRINT_INFO	335:4:6300:6319	4325055	0	True				
ANR	4326335	BitAndExpression	flags & SWS_PRINT_INFO		4325055	0		&			
ANR	4326336	Identifier	flags		4325055	0					
ANR	4326337	Identifier	SWS_PRINT_INFO		4325055	1					
ANR	4326338	CompoundStatement		339:2:6172:6197	4325055	1					
ANR	4326339	IdentifierDeclStatement	"char * dither = "" dithered"" ;"	341:2:6349:6374	4325055	0	True				
ANR	4326340	IdentifierDecl	"* dither = "" dithered"""		4325055	0					
ANR	4326341	IdentifierDeclType	char *		4325055	0					
ANR	4326342	Identifier	dither		4325055	1					
ANR	4326343	AssignmentExpression	"* dither = "" dithered"""		4325055	2		=			
ANR	4326344	Identifier	dither		4325055	0					
ANR	4326345	PrimaryExpression	""" dithered"""		4325055	1					
ANR	4326346	IfStatement	if ( flags & SWS_FAST_BILINEAR )		4325055	1					
ANR	4326347	Condition	flags & SWS_FAST_BILINEAR	349:5:6418:6440	4325055	0	True				
ANR	4326348	BitAndExpression	flags & SWS_FAST_BILINEAR		4325055	0		&			
ANR	4326349	Identifier	flags		4325055	0					
ANR	4326350	Identifier	SWS_FAST_BILINEAR		4325055	1					
ANR	4326351	ExpressionStatement	"fprintf ( stderr , ""\\nSwScaler: FAST_BILINEAR scaler, "" )"	351:3:6447:6500	4325055	1	True				
ANR	4326352	CallExpression	"fprintf ( stderr , ""\\nSwScaler: FAST_BILINEAR scaler, "" )"		4325055	0					
ANR	4326353	Callee	fprintf		4325055	0					
ANR	4326354	Identifier	fprintf		4325055	0					
ANR	4326355	ArgumentList	stderr		4325055	1					
ANR	4326356	Argument	stderr		4325055	0					
ANR	4326357	Identifier	stderr		4325055	0					
ANR	4326358	Argument	"""\\nSwScaler: FAST_BILINEAR scaler, """		4325055	1					
ANR	4326359	PrimaryExpression	"""\\nSwScaler: FAST_BILINEAR scaler, """		4325055	0					
ANR	4326360	ElseStatement	else		4325055	0					
ANR	4326361	IfStatement	if ( flags & SWS_BILINEAR )		4325055	0					
ANR	4326362	Condition	flags & SWS_BILINEAR	353:10:6513:6530	4325055	0	True				
ANR	4326363	BitAndExpression	flags & SWS_BILINEAR		4325055	0		&			
ANR	4326364	Identifier	flags		4325055	0					
ANR	4326365	Identifier	SWS_BILINEAR		4325055	1					
ANR	4326366	ExpressionStatement	"fprintf ( stderr , ""\\nSwScaler: BILINEAR scaler, "" )"	355:3:6537:6585	4325055	1	True				
ANR	4326367	CallExpression	"fprintf ( stderr , ""\\nSwScaler: BILINEAR scaler, "" )"		4325055	0					
ANR	4326368	Callee	fprintf		4325055	0					
ANR	4326369	Identifier	fprintf		4325055	0					
ANR	4326370	ArgumentList	stderr		4325055	1					
ANR	4326371	Argument	stderr		4325055	0					
ANR	4326372	Identifier	stderr		4325055	0					
ANR	4326373	Argument	"""\\nSwScaler: BILINEAR scaler, """		4325055	1					
ANR	4326374	PrimaryExpression	"""\\nSwScaler: BILINEAR scaler, """		4325055	0					
ANR	4326375	ElseStatement	else		4325055	0					
ANR	4326376	IfStatement	if ( flags & SWS_BICUBIC )		4325055	0					
ANR	4326377	Condition	flags & SWS_BICUBIC	357:10:6598:6614	4325055	0	True				
ANR	4326378	BitAndExpression	flags & SWS_BICUBIC		4325055	0		&			
ANR	4326379	Identifier	flags		4325055	0					
ANR	4326380	Identifier	SWS_BICUBIC		4325055	1					
ANR	4326381	ExpressionStatement	"fprintf ( stderr , ""\\nSwScaler: BICUBIC scaler, "" )"	359:3:6621:6668	4325055	1	True				
ANR	4326382	CallExpression	"fprintf ( stderr , ""\\nSwScaler: BICUBIC scaler, "" )"		4325055	0					
ANR	4326383	Callee	fprintf		4325055	0					
ANR	4326384	Identifier	fprintf		4325055	0					
ANR	4326385	ArgumentList	stderr		4325055	1					
ANR	4326386	Argument	stderr		4325055	0					
ANR	4326387	Identifier	stderr		4325055	0					
ANR	4326388	Argument	"""\\nSwScaler: BICUBIC scaler, """		4325055	1					
ANR	4326389	PrimaryExpression	"""\\nSwScaler: BICUBIC scaler, """		4325055	0					
ANR	4326390	ElseStatement	else		4325055	0					
ANR	4326391	IfStatement	if ( flags & SWS_X )		4325055	0					
ANR	4326392	Condition	flags & SWS_X	361:10:6681:6691	4325055	0	True				
ANR	4326393	BitAndExpression	flags & SWS_X		4325055	0		&			
ANR	4326394	Identifier	flags		4325055	0					
ANR	4326395	Identifier	SWS_X		4325055	1					
ANR	4326396	ExpressionStatement	"fprintf ( stderr , ""\\nSwScaler: Experimental scaler, "" )"	363:3:6698:6750	4325055	1	True				
ANR	4326397	CallExpression	"fprintf ( stderr , ""\\nSwScaler: Experimental scaler, "" )"		4325055	0					
ANR	4326398	Callee	fprintf		4325055	0					
ANR	4326399	Identifier	fprintf		4325055	0					
ANR	4326400	ArgumentList	stderr		4325055	1					
ANR	4326401	Argument	stderr		4325055	0					
ANR	4326402	Identifier	stderr		4325055	0					
ANR	4326403	Argument	"""\\nSwScaler: Experimental scaler, """		4325055	1					
ANR	4326404	PrimaryExpression	"""\\nSwScaler: Experimental scaler, """		4325055	0					
ANR	4326405	ElseStatement	else		4325055	0					
ANR	4326406	IfStatement	if ( flags & SWS_POINT )		4325055	0					
ANR	4326407	Condition	flags & SWS_POINT	365:10:6763:6777	4325055	0	True				
ANR	4326408	BitAndExpression	flags & SWS_POINT		4325055	0		&			
ANR	4326409	Identifier	flags		4325055	0					
ANR	4326410	Identifier	SWS_POINT		4325055	1					
ANR	4326411	ExpressionStatement	"fprintf ( stderr , ""\\nSwScaler: Nearest Neighbor / POINT scaler, "" )"	367:3:6784:6848	4325055	1	True				
ANR	4326412	CallExpression	"fprintf ( stderr , ""\\nSwScaler: Nearest Neighbor / POINT scaler, "" )"		4325055	0					
ANR	4326413	Callee	fprintf		4325055	0					
ANR	4326414	Identifier	fprintf		4325055	0					
ANR	4326415	ArgumentList	stderr		4325055	1					
ANR	4326416	Argument	stderr		4325055	0					
ANR	4326417	Identifier	stderr		4325055	0					
ANR	4326418	Argument	"""\\nSwScaler: Nearest Neighbor / POINT scaler, """		4325055	1					
ANR	4326419	PrimaryExpression	"""\\nSwScaler: Nearest Neighbor / POINT scaler, """		4325055	0					
ANR	4326420	ElseStatement	else		4325055	0					
ANR	4326421	IfStatement	if ( flags & SWS_AREA )		4325055	0					
ANR	4326422	Condition	flags & SWS_AREA	369:10:6861:6874	4325055	0	True				
ANR	4326423	BitAndExpression	flags & SWS_AREA		4325055	0		&			
ANR	4326424	Identifier	flags		4325055	0					
ANR	4326425	Identifier	SWS_AREA		4325055	1					
ANR	4326426	ExpressionStatement	"fprintf ( stderr , ""\\nSwScaler: Area Averageing scaler, "" )"	371:3:6881:6936	4325055	1	True				
ANR	4326427	CallExpression	"fprintf ( stderr , ""\\nSwScaler: Area Averageing scaler, "" )"		4325055	0					
ANR	4326428	Callee	fprintf		4325055	0					
ANR	4326429	Identifier	fprintf		4325055	0					
ANR	4326430	ArgumentList	stderr		4325055	1					
ANR	4326431	Argument	stderr		4325055	0					
ANR	4326432	Identifier	stderr		4325055	0					
ANR	4326433	Argument	"""\\nSwScaler: Area Averageing scaler, """		4325055	1					
ANR	4326434	PrimaryExpression	"""\\nSwScaler: Area Averageing scaler, """		4325055	0					
ANR	4326435	ElseStatement	else		4325055	0					
ANR	4326436	ExpressionStatement	"fprintf ( stderr , ""\\nSwScaler: ehh flags invalid?! "" )"	375:3:6950:7001	4325055	0	True				
ANR	4326437	CallExpression	"fprintf ( stderr , ""\\nSwScaler: ehh flags invalid?! "" )"		4325055	0					
ANR	4326438	Callee	fprintf		4325055	0					
ANR	4326439	Identifier	fprintf		4325055	0					
ANR	4326440	ArgumentList	stderr		4325055	1					
ANR	4326441	Argument	stderr		4325055	0					
ANR	4326442	Identifier	stderr		4325055	0					
ANR	4326443	Argument	"""\\nSwScaler: ehh flags invalid?! """		4325055	1					
ANR	4326444	PrimaryExpression	"""\\nSwScaler: ehh flags invalid?! """		4325055	0					
ANR	4326445	IfStatement	if ( dstFormat == IMGFMT_BGR15 || dstFormat == IMGFMT_BGR16 )		4325055	2					
ANR	4326446	Condition	dstFormat == IMGFMT_BGR15 || dstFormat == IMGFMT_BGR16	379:5:7011:7060	4325055	0	True				
ANR	4326447	OrExpression	dstFormat == IMGFMT_BGR15 || dstFormat == IMGFMT_BGR16		4325055	0		||			
ANR	4326448	EqualityExpression	dstFormat == IMGFMT_BGR15		4325055	0		==			
ANR	4326449	Identifier	dstFormat		4325055	0					
ANR	4326450	Identifier	IMGFMT_BGR15		4325055	1					
ANR	4326451	EqualityExpression	dstFormat == IMGFMT_BGR16		4325055	1		==			
ANR	4326452	Identifier	dstFormat		4325055	0					
ANR	4326453	Identifier	IMGFMT_BGR16		4325055	1					
ANR	4326454	ExpressionStatement	"fprintf ( stderr , ""from %s to%s %s "" , vo_format_name ( srcFormat ) , dither , vo_format_name ( dstFormat ) )"	381:3:7067:7170	4325055	1	True				
ANR	4326455	CallExpression	"fprintf ( stderr , ""from %s to%s %s "" , vo_format_name ( srcFormat ) , dither , vo_format_name ( dstFormat ) )"		4325055	0					
ANR	4326456	Callee	fprintf		4325055	0					
ANR	4326457	Identifier	fprintf		4325055	0					
ANR	4326458	ArgumentList	stderr		4325055	1					
ANR	4326459	Argument	stderr		4325055	0					
ANR	4326460	Identifier	stderr		4325055	0					
ANR	4326461	Argument	"""from %s to%s %s """		4325055	1					
ANR	4326462	PrimaryExpression	"""from %s to%s %s """		4325055	0					
ANR	4326463	Argument	vo_format_name ( srcFormat )		4325055	2					
ANR	4326464	CallExpression	vo_format_name ( srcFormat )		4325055	0					
ANR	4326465	Callee	vo_format_name		4325055	0					
ANR	4326466	Identifier	vo_format_name		4325055	0					
ANR	4326467	ArgumentList	srcFormat		4325055	1					
ANR	4326468	Argument	srcFormat		4325055	0					
ANR	4326469	Identifier	srcFormat		4325055	0					
ANR	4326470	Argument	dither		4325055	3					
ANR	4326471	Identifier	dither		4325055	0					
ANR	4326472	Argument	vo_format_name ( dstFormat )		4325055	4					
ANR	4326473	CallExpression	vo_format_name ( dstFormat )		4325055	0					
ANR	4326474	Callee	vo_format_name		4325055	0					
ANR	4326475	Identifier	vo_format_name		4325055	0					
ANR	4326476	ArgumentList	dstFormat		4325055	1					
ANR	4326477	Argument	dstFormat		4325055	0					
ANR	4326478	Identifier	dstFormat		4325055	0					
ANR	4326479	ElseStatement	else		4325055	0					
ANR	4326480	ExpressionStatement	"fprintf ( stderr , ""from %s to %s "" , vo_format_name ( srcFormat ) , vo_format_name ( dstFormat ) )"	387:3:7184:7277	4325055	0	True				
ANR	4326481	CallExpression	"fprintf ( stderr , ""from %s to %s "" , vo_format_name ( srcFormat ) , vo_format_name ( dstFormat ) )"		4325055	0					
ANR	4326482	Callee	fprintf		4325055	0					
ANR	4326483	Identifier	fprintf		4325055	0					
ANR	4326484	ArgumentList	stderr		4325055	1					
ANR	4326485	Argument	stderr		4325055	0					
ANR	4326486	Identifier	stderr		4325055	0					
ANR	4326487	Argument	"""from %s to %s """		4325055	1					
ANR	4326488	PrimaryExpression	"""from %s to %s """		4325055	0					
ANR	4326489	Argument	vo_format_name ( srcFormat )		4325055	2					
ANR	4326490	CallExpression	vo_format_name ( srcFormat )		4325055	0					
ANR	4326491	Callee	vo_format_name		4325055	0					
ANR	4326492	Identifier	vo_format_name		4325055	0					
ANR	4326493	ArgumentList	srcFormat		4325055	1					
ANR	4326494	Argument	srcFormat		4325055	0					
ANR	4326495	Identifier	srcFormat		4325055	0					
ANR	4326496	Argument	vo_format_name ( dstFormat )		4325055	3					
ANR	4326497	CallExpression	vo_format_name ( dstFormat )		4325055	0					
ANR	4326498	Callee	vo_format_name		4325055	0					
ANR	4326499	Identifier	vo_format_name		4325055	0					
ANR	4326500	ArgumentList	dstFormat		4325055	1					
ANR	4326501	Argument	dstFormat		4325055	0					
ANR	4326502	Identifier	dstFormat		4325055	0					
ANR	4326503	IfStatement	if ( cpuCaps . hasMMX2 )		4325055	3					
ANR	4326504	Condition	cpuCaps . hasMMX2	393:5:7287:7301	4325055	0	True				
ANR	4326505	MemberAccess	cpuCaps . hasMMX2		4325055	0					
ANR	4326506	Identifier	cpuCaps		4325055	0					
ANR	4326507	Identifier	hasMMX2		4325055	1					
ANR	4326508	ExpressionStatement	"fprintf ( stderr , ""using MMX2\\n"" )"	395:3:7308:7339	4325055	1	True				
ANR	4326509	CallExpression	"fprintf ( stderr , ""using MMX2\\n"" )"		4325055	0					
ANR	4326510	Callee	fprintf		4325055	0					
ANR	4326511	Identifier	fprintf		4325055	0					
ANR	4326512	ArgumentList	stderr		4325055	1					
ANR	4326513	Argument	stderr		4325055	0					
ANR	4326514	Identifier	stderr		4325055	0					
ANR	4326515	Argument	"""using MMX2\\n"""		4325055	1					
ANR	4326516	PrimaryExpression	"""using MMX2\\n"""		4325055	0					
ANR	4326517	ElseStatement	else		4325055	0					
ANR	4326518	IfStatement	if ( cpuCaps . has3DNow )		4325055	0					
ANR	4326519	Condition	cpuCaps . has3DNow	397:10:7352:7367	4325055	0	True				
ANR	4326520	MemberAccess	cpuCaps . has3DNow		4325055	0					
ANR	4326521	Identifier	cpuCaps		4325055	0					
ANR	4326522	Identifier	has3DNow		4325055	1					
ANR	4326523	ExpressionStatement	"fprintf ( stderr , ""using 3DNOW\\n"" )"	399:3:7374:7406	4325055	1	True				
ANR	4326524	CallExpression	"fprintf ( stderr , ""using 3DNOW\\n"" )"		4325055	0					
ANR	4326525	Callee	fprintf		4325055	0					
ANR	4326526	Identifier	fprintf		4325055	0					
ANR	4326527	ArgumentList	stderr		4325055	1					
ANR	4326528	Argument	stderr		4325055	0					
ANR	4326529	Identifier	stderr		4325055	0					
ANR	4326530	Argument	"""using 3DNOW\\n"""		4325055	1					
ANR	4326531	PrimaryExpression	"""using 3DNOW\\n"""		4325055	0					
ANR	4326532	ElseStatement	else		4325055	0					
ANR	4326533	IfStatement	if ( cpuCaps . hasMMX )		4325055	0					
ANR	4326534	Condition	cpuCaps . hasMMX	401:10:7419:7432	4325055	0	True				
ANR	4326535	MemberAccess	cpuCaps . hasMMX		4325055	0					
ANR	4326536	Identifier	cpuCaps		4325055	0					
ANR	4326537	Identifier	hasMMX		4325055	1					
ANR	4326538	ExpressionStatement	"fprintf ( stderr , ""using MMX\\n"" )"	403:3:7439:7469	4325055	1	True				
ANR	4326539	CallExpression	"fprintf ( stderr , ""using MMX\\n"" )"		4325055	0					
ANR	4326540	Callee	fprintf		4325055	0					
ANR	4326541	Identifier	fprintf		4325055	0					
ANR	4326542	ArgumentList	stderr		4325055	1					
ANR	4326543	Argument	stderr		4325055	0					
ANR	4326544	Identifier	stderr		4325055	0					
ANR	4326545	Argument	"""using MMX\\n"""		4325055	1					
ANR	4326546	PrimaryExpression	"""using MMX\\n"""		4325055	0					
ANR	4326547	ElseStatement	else		4325055	0					
ANR	4326548	ExpressionStatement	"fprintf ( stderr , ""using C\\n"" )"	407:3:7483:7511	4325055	0	True				
ANR	4326549	CallExpression	"fprintf ( stderr , ""using C\\n"" )"		4325055	0					
ANR	4326550	Callee	fprintf		4325055	0					
ANR	4326551	Identifier	fprintf		4325055	0					
ANR	4326552	ArgumentList	stderr		4325055	1					
ANR	4326553	Argument	stderr		4325055	0					
ANR	4326554	Identifier	stderr		4325055	0					
ANR	4326555	Argument	"""using C\\n"""		4325055	1					
ANR	4326556	PrimaryExpression	"""using C\\n"""		4325055	0					
ANR	4326557	IfStatement	if ( ( flags & SWS_PRINT_INFO ) && verbose )		4325055	60					
ANR	4326558	Condition	( flags & SWS_PRINT_INFO ) && verbose	413:4:7524:7558	4325055	0	True				
ANR	4326559	AndExpression	( flags & SWS_PRINT_INFO ) && verbose		4325055	0		&&			
ANR	4326560	BitAndExpression	flags & SWS_PRINT_INFO		4325055	0		&			
ANR	4326561	Identifier	flags		4325055	0					
ANR	4326562	Identifier	SWS_PRINT_INFO		4325055	1					
ANR	4326563	Identifier	verbose		4325055	1					
ANR	4326564	CompoundStatement		413:1:7386:7386	4325055	1					
ANR	4326565	IfStatement	if ( cpuCaps . hasMMX )		4325055	0					
ANR	4326566	Condition	cpuCaps . hasMMX	417:5:7571:7584	4325055	0	True				
ANR	4326567	MemberAccess	cpuCaps . hasMMX		4325055	0					
ANR	4326568	Identifier	cpuCaps		4325055	0					
ANR	4326569	Identifier	hasMMX		4325055	1					
ANR	4326570	CompoundStatement		417:2:7413:7413	4325055	1					
ANR	4326571	IfStatement	if ( c -> canMMX2BeUsed && ( flags & SWS_FAST_BILINEAR ) )		4325055	0					
ANR	4326572	Condition	c -> canMMX2BeUsed && ( flags & SWS_FAST_BILINEAR )	421:6:7599:7643	4325055	0	True				
ANR	4326573	AndExpression	c -> canMMX2BeUsed && ( flags & SWS_FAST_BILINEAR )		4325055	0		&&			
ANR	4326574	PtrMemberAccess	c -> canMMX2BeUsed		4325055	0					
ANR	4326575	Identifier	c		4325055	0					
ANR	4326576	Identifier	canMMX2BeUsed		4325055	1					
ANR	4326577	BitAndExpression	flags & SWS_FAST_BILINEAR		4325055	1		&			
ANR	4326578	Identifier	flags		4325055	0					
ANR	4326579	Identifier	SWS_FAST_BILINEAR		4325055	1					
ANR	4326580	ExpressionStatement	"printf ( ""SwScaler: using FAST_BILINEAR MMX2 scaler for horizontal scaling\\n"" )"	423:4:7651:7727	4325055	1	True				
ANR	4326581	CallExpression	"printf ( ""SwScaler: using FAST_BILINEAR MMX2 scaler for horizontal scaling\\n"" )"		4325055	0					
ANR	4326582	Callee	printf		4325055	0					
ANR	4326583	Identifier	printf		4325055	0					
ANR	4326584	ArgumentList	"""SwScaler: using FAST_BILINEAR MMX2 scaler for horizontal scaling\\n"""		4325055	1					
ANR	4326585	Argument	"""SwScaler: using FAST_BILINEAR MMX2 scaler for horizontal scaling\\n"""		4325055	0					
ANR	4326586	PrimaryExpression	"""SwScaler: using FAST_BILINEAR MMX2 scaler for horizontal scaling\\n"""		4325055	0					
ANR	4326587	ElseStatement	else		4325055	0					
ANR	4326588	CompoundStatement		425:3:7565:7565	4325055	0					
ANR	4326589	IfStatement	if ( c -> hLumFilterSize == 4 )		4325055	0					
ANR	4326590	Condition	c -> hLumFilterSize == 4	429:7:7752:7771	4325055	0	True				
ANR	4326591	EqualityExpression	c -> hLumFilterSize == 4		4325055	0		==			
ANR	4326592	PtrMemberAccess	c -> hLumFilterSize		4325055	0					
ANR	4326593	Identifier	c		4325055	0					
ANR	4326594	Identifier	hLumFilterSize		4325055	1					
ANR	4326595	PrimaryExpression	4		4325055	1					
ANR	4326596	ExpressionStatement	"printf ( ""SwScaler: using 4-tap MMX scaler for horizontal luminance scaling\\n"" )"	431:5:7780:7857	4325055	1	True				
ANR	4326597	CallExpression	"printf ( ""SwScaler: using 4-tap MMX scaler for horizontal luminance scaling\\n"" )"		4325055	0					
ANR	4326598	Callee	printf		4325055	0					
ANR	4326599	Identifier	printf		4325055	0					
ANR	4326600	ArgumentList	"""SwScaler: using 4-tap MMX scaler for horizontal luminance scaling\\n"""		4325055	1					
ANR	4326601	Argument	"""SwScaler: using 4-tap MMX scaler for horizontal luminance scaling\\n"""		4325055	0					
ANR	4326602	PrimaryExpression	"""SwScaler: using 4-tap MMX scaler for horizontal luminance scaling\\n"""		4325055	0					
ANR	4326603	ElseStatement	else		4325055	0					
ANR	4326604	IfStatement	if ( c -> hLumFilterSize == 8 )		4325055	0					
ANR	4326605	Condition	c -> hLumFilterSize == 8	433:12:7872:7891	4325055	0	True				
ANR	4326606	EqualityExpression	c -> hLumFilterSize == 8		4325055	0		==			
ANR	4326607	PtrMemberAccess	c -> hLumFilterSize		4325055	0					
ANR	4326608	Identifier	c		4325055	0					
ANR	4326609	Identifier	hLumFilterSize		4325055	1					
ANR	4326610	PrimaryExpression	8		4325055	1					
ANR	4326611	ExpressionStatement	"printf ( ""SwScaler: using 8-tap MMX scaler for horizontal luminance scaling\\n"" )"	435:5:7900:7977	4325055	1	True				
ANR	4326612	CallExpression	"printf ( ""SwScaler: using 8-tap MMX scaler for horizontal luminance scaling\\n"" )"		4325055	0					
ANR	4326613	Callee	printf		4325055	0					
ANR	4326614	Identifier	printf		4325055	0					
ANR	4326615	ArgumentList	"""SwScaler: using 8-tap MMX scaler for horizontal luminance scaling\\n"""		4325055	1					
ANR	4326616	Argument	"""SwScaler: using 8-tap MMX scaler for horizontal luminance scaling\\n"""		4325055	0					
ANR	4326617	PrimaryExpression	"""SwScaler: using 8-tap MMX scaler for horizontal luminance scaling\\n"""		4325055	0					
ANR	4326618	ElseStatement	else		4325055	0					
ANR	4326619	ExpressionStatement	"printf ( ""SwScaler: using n-tap MMX scaler for horizontal luminance scaling\\n"" )"	439:5:7995:8072	4325055	0	True				
ANR	4326620	CallExpression	"printf ( ""SwScaler: using n-tap MMX scaler for horizontal luminance scaling\\n"" )"		4325055	0					
ANR	4326621	Callee	printf		4325055	0					
ANR	4326622	Identifier	printf		4325055	0					
ANR	4326623	ArgumentList	"""SwScaler: using n-tap MMX scaler for horizontal luminance scaling\\n"""		4325055	1					
ANR	4326624	Argument	"""SwScaler: using n-tap MMX scaler for horizontal luminance scaling\\n"""		4325055	0					
ANR	4326625	PrimaryExpression	"""SwScaler: using n-tap MMX scaler for horizontal luminance scaling\\n"""		4325055	0					
ANR	4326626	IfStatement	if ( c -> hChrFilterSize == 4 )		4325055	1					
ANR	4326627	Condition	c -> hChrFilterSize == 4	443:7:8084:8103	4325055	0	True				
ANR	4326628	EqualityExpression	c -> hChrFilterSize == 4		4325055	0		==			
ANR	4326629	PtrMemberAccess	c -> hChrFilterSize		4325055	0					
ANR	4326630	Identifier	c		4325055	0					
ANR	4326631	Identifier	hChrFilterSize		4325055	1					
ANR	4326632	PrimaryExpression	4		4325055	1					
ANR	4326633	ExpressionStatement	"printf ( ""SwScaler: using 4-tap MMX scaler for horizontal chrominance scaling\\n"" )"	445:5:8112:8191	4325055	1	True				
ANR	4326634	CallExpression	"printf ( ""SwScaler: using 4-tap MMX scaler for horizontal chrominance scaling\\n"" )"		4325055	0					
ANR	4326635	Callee	printf		4325055	0					
ANR	4326636	Identifier	printf		4325055	0					
ANR	4326637	ArgumentList	"""SwScaler: using 4-tap MMX scaler for horizontal chrominance scaling\\n"""		4325055	1					
ANR	4326638	Argument	"""SwScaler: using 4-tap MMX scaler for horizontal chrominance scaling\\n"""		4325055	0					
ANR	4326639	PrimaryExpression	"""SwScaler: using 4-tap MMX scaler for horizontal chrominance scaling\\n"""		4325055	0					
ANR	4326640	ElseStatement	else		4325055	0					
ANR	4326641	IfStatement	if ( c -> hChrFilterSize == 8 )		4325055	0					
ANR	4326642	Condition	c -> hChrFilterSize == 8	447:12:8206:8225	4325055	0	True				
ANR	4326643	EqualityExpression	c -> hChrFilterSize == 8		4325055	0		==			
ANR	4326644	PtrMemberAccess	c -> hChrFilterSize		4325055	0					
ANR	4326645	Identifier	c		4325055	0					
ANR	4326646	Identifier	hChrFilterSize		4325055	1					
ANR	4326647	PrimaryExpression	8		4325055	1					
ANR	4326648	ExpressionStatement	"printf ( ""SwScaler: using 8-tap MMX scaler for horizontal chrominance scaling\\n"" )"	449:5:8234:8313	4325055	1	True				
ANR	4326649	CallExpression	"printf ( ""SwScaler: using 8-tap MMX scaler for horizontal chrominance scaling\\n"" )"		4325055	0					
ANR	4326650	Callee	printf		4325055	0					
ANR	4326651	Identifier	printf		4325055	0					
ANR	4326652	ArgumentList	"""SwScaler: using 8-tap MMX scaler for horizontal chrominance scaling\\n"""		4325055	1					
ANR	4326653	Argument	"""SwScaler: using 8-tap MMX scaler for horizontal chrominance scaling\\n"""		4325055	0					
ANR	4326654	PrimaryExpression	"""SwScaler: using 8-tap MMX scaler for horizontal chrominance scaling\\n"""		4325055	0					
ANR	4326655	ElseStatement	else		4325055	0					
ANR	4326656	ExpressionStatement	"printf ( ""SwScaler: using n-tap MMX scaler for horizontal chrominance scaling\\n"" )"	453:5:8331:8410	4325055	0	True				
ANR	4326657	CallExpression	"printf ( ""SwScaler: using n-tap MMX scaler for horizontal chrominance scaling\\n"" )"		4325055	0					
ANR	4326658	Callee	printf		4325055	0					
ANR	4326659	Identifier	printf		4325055	0					
ANR	4326660	ArgumentList	"""SwScaler: using n-tap MMX scaler for horizontal chrominance scaling\\n"""		4325055	1					
ANR	4326661	Argument	"""SwScaler: using n-tap MMX scaler for horizontal chrominance scaling\\n"""		4325055	0					
ANR	4326662	PrimaryExpression	"""SwScaler: using n-tap MMX scaler for horizontal chrominance scaling\\n"""		4325055	0					
ANR	4326663	ElseStatement	else		4325055	0					
ANR	4326664	CompoundStatement		459:2:8257:8257	4325055	0					
ANR	4326665	ExpressionStatement	"printf ( ""SwScaler: using X86-Asm scaler for horizontal scaling\\n"" )"	465:3:8457:8522	4325055	0	True				
ANR	4326666	CallExpression	"printf ( ""SwScaler: using X86-Asm scaler for horizontal scaling\\n"" )"		4325055	0					
ANR	4326667	Callee	printf		4325055	0					
ANR	4326668	Identifier	printf		4325055	0					
ANR	4326669	ArgumentList	"""SwScaler: using X86-Asm scaler for horizontal scaling\\n"""		4325055	1					
ANR	4326670	Argument	"""SwScaler: using X86-Asm scaler for horizontal scaling\\n"""		4325055	0					
ANR	4326671	PrimaryExpression	"""SwScaler: using X86-Asm scaler for horizontal scaling\\n"""		4325055	0					
ANR	4326672	IfStatement	if ( isPlanarYUV ( dstFormat ) )		4325055	1					
ANR	4326673	Condition	isPlanarYUV ( dstFormat )	481:5:8739:8760	4325055	0	True				
ANR	4326674	CallExpression	isPlanarYUV ( dstFormat )		4325055	0					
ANR	4326675	Callee	isPlanarYUV		4325055	0					
ANR	4326676	Identifier	isPlanarYUV		4325055	0					
ANR	4326677	ArgumentList	dstFormat		4325055	1					
ANR	4326678	Argument	dstFormat		4325055	0					
ANR	4326679	Identifier	dstFormat		4325055	0					
ANR	4326680	CompoundStatement		481:2:8589:8589	4325055	1					
ANR	4326681	IfStatement	if ( c -> vLumFilterSize == 1 )		4325055	0					
ANR	4326682	Condition	c -> vLumFilterSize == 1	485:6:8775:8794	4325055	0	True				
ANR	4326683	EqualityExpression	c -> vLumFilterSize == 1		4325055	0		==			
ANR	4326684	PtrMemberAccess	c -> vLumFilterSize		4325055	0					
ANR	4326685	Identifier	c		4325055	0					
ANR	4326686	Identifier	vLumFilterSize		4325055	1					
ANR	4326687	PrimaryExpression	1		4325055	1					
ANR	4326688	ExpressionStatement	"printf ( ""SwScaler: using 1-tap %s \\""scaler\\"" for vertical scaling (YV12 like)\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"	487:4:8802:8912	4325055	1	True				
ANR	4326689	CallExpression	"printf ( ""SwScaler: using 1-tap %s \\""scaler\\"" for vertical scaling (YV12 like)\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"		4325055	0					
ANR	4326690	Callee	printf		4325055	0					
ANR	4326691	Identifier	printf		4325055	0					
ANR	4326692	ArgumentList	"""SwScaler: using 1-tap %s \\""scaler\\"" for vertical scaling (YV12 like)\\n"""		4325055	1					
ANR	4326693	Argument	"""SwScaler: using 1-tap %s \\""scaler\\"" for vertical scaling (YV12 like)\\n"""		4325055	0					
ANR	4326694	PrimaryExpression	"""SwScaler: using 1-tap %s \\""scaler\\"" for vertical scaling (YV12 like)\\n"""		4325055	0					
ANR	4326695	Argument	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	1					
ANR	4326696	ConditionalExpression	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	0					
ANR	4326697	Condition	cpuCaps . hasMMX		4325055	0					
ANR	4326698	MemberAccess	cpuCaps . hasMMX		4325055	0					
ANR	4326699	Identifier	cpuCaps		4325055	0					
ANR	4326700	Identifier	hasMMX		4325055	1					
ANR	4326701	PrimaryExpression	"""MMX"""		4325055	1					
ANR	4326702	PrimaryExpression	"""C"""		4325055	2					
ANR	4326703	ElseStatement	else		4325055	0					
ANR	4326704	ExpressionStatement	"printf ( ""SwScaler: using n-tap %s scaler for vertical scaling (YV12 like)\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"	491:4:8928:9034	4325055	0	True				
ANR	4326705	CallExpression	"printf ( ""SwScaler: using n-tap %s scaler for vertical scaling (YV12 like)\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"		4325055	0					
ANR	4326706	Callee	printf		4325055	0					
ANR	4326707	Identifier	printf		4325055	0					
ANR	4326708	ArgumentList	"""SwScaler: using n-tap %s scaler for vertical scaling (YV12 like)\\n"""		4325055	1					
ANR	4326709	Argument	"""SwScaler: using n-tap %s scaler for vertical scaling (YV12 like)\\n"""		4325055	0					
ANR	4326710	PrimaryExpression	"""SwScaler: using n-tap %s scaler for vertical scaling (YV12 like)\\n"""		4325055	0					
ANR	4326711	Argument	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	1					
ANR	4326712	ConditionalExpression	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	0					
ANR	4326713	Condition	cpuCaps . hasMMX		4325055	0					
ANR	4326714	MemberAccess	cpuCaps . hasMMX		4325055	0					
ANR	4326715	Identifier	cpuCaps		4325055	0					
ANR	4326716	Identifier	hasMMX		4325055	1					
ANR	4326717	PrimaryExpression	"""MMX"""		4325055	1					
ANR	4326718	PrimaryExpression	"""C"""		4325055	2					
ANR	4326719	ElseStatement	else		4325055	0					
ANR	4326720	CompoundStatement		495:2:8875:8875	4325055	0					
ANR	4326721	IfStatement	if ( c -> vLumFilterSize == 1 && c -> vChrFilterSize == 2 )		4325055	0					
ANR	4326722	Condition	c -> vLumFilterSize == 1 && c -> vChrFilterSize == 2	499:6:9061:9104	4325055	0	True				
ANR	4326723	AndExpression	c -> vLumFilterSize == 1 && c -> vChrFilterSize == 2		4325055	0		&&			
ANR	4326724	EqualityExpression	c -> vLumFilterSize == 1		4325055	0		==			
ANR	4326725	PtrMemberAccess	c -> vLumFilterSize		4325055	0					
ANR	4326726	Identifier	c		4325055	0					
ANR	4326727	Identifier	vLumFilterSize		4325055	1					
ANR	4326728	PrimaryExpression	1		4325055	1					
ANR	4326729	EqualityExpression	c -> vChrFilterSize == 2		4325055	1		==			
ANR	4326730	PtrMemberAccess	c -> vChrFilterSize		4325055	0					
ANR	4326731	Identifier	c		4325055	0					
ANR	4326732	Identifier	vChrFilterSize		4325055	1					
ANR	4326733	PrimaryExpression	2		4325055	1					
ANR	4326734	Statement	printf	501:4:9112:9117	4325055	1	True				
ANR	4326735	ElseStatement	else		4325055	0					
ANR	4326736	IfStatement	if ( c -> vLumFilterSize == 2 && c -> vChrFilterSize == 2 )		4325055	0					
ANR	4326737	Condition	c -> vLumFilterSize == 2 && c -> vChrFilterSize == 2	505:11:9323:9366	4325055	0	True				
ANR	4326738	AndExpression	c -> vLumFilterSize == 2 && c -> vChrFilterSize == 2		4325055	0		&&			
ANR	4326739	EqualityExpression	c -> vLumFilterSize == 2		4325055	0		==			
ANR	4326740	PtrMemberAccess	c -> vLumFilterSize		4325055	0					
ANR	4326741	Identifier	c		4325055	0					
ANR	4326742	Identifier	vLumFilterSize		4325055	1					
ANR	4326743	PrimaryExpression	2		4325055	1					
ANR	4326744	EqualityExpression	c -> vChrFilterSize == 2		4325055	1		==			
ANR	4326745	PtrMemberAccess	c -> vChrFilterSize		4325055	0					
ANR	4326746	Identifier	c		4325055	0					
ANR	4326747	Identifier	vChrFilterSize		4325055	1					
ANR	4326748	PrimaryExpression	2		4325055	1					
ANR	4326749	ExpressionStatement	"printf ( ""SwScaler: using 2-tap linear %s scaler for vertical scaling (BGR)\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"	507:4:9374:9481	4325055	1	True				
ANR	4326750	CallExpression	"printf ( ""SwScaler: using 2-tap linear %s scaler for vertical scaling (BGR)\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"		4325055	0					
ANR	4326751	Callee	printf		4325055	0					
ANR	4326752	Identifier	printf		4325055	0					
ANR	4326753	ArgumentList	"""SwScaler: using 2-tap linear %s scaler for vertical scaling (BGR)\\n"""		4325055	1					
ANR	4326754	Argument	"""SwScaler: using 2-tap linear %s scaler for vertical scaling (BGR)\\n"""		4325055	0					
ANR	4326755	PrimaryExpression	"""SwScaler: using 2-tap linear %s scaler for vertical scaling (BGR)\\n"""		4325055	0					
ANR	4326756	Argument	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	1					
ANR	4326757	ConditionalExpression	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	0					
ANR	4326758	Condition	cpuCaps . hasMMX		4325055	0					
ANR	4326759	MemberAccess	cpuCaps . hasMMX		4325055	0					
ANR	4326760	Identifier	cpuCaps		4325055	0					
ANR	4326761	Identifier	hasMMX		4325055	1					
ANR	4326762	PrimaryExpression	"""MMX"""		4325055	1					
ANR	4326763	PrimaryExpression	"""C"""		4325055	2					
ANR	4326764	ElseStatement	else		4325055	0					
ANR	4326765	ExpressionStatement	"printf ( ""SwScaler: using n-tap %s scaler for vertical scaling (BGR)\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"	511:4:9497:9597	4325055	0	True				
ANR	4326766	CallExpression	"printf ( ""SwScaler: using n-tap %s scaler for vertical scaling (BGR)\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"		4325055	0					
ANR	4326767	Callee	printf		4325055	0					
ANR	4326768	Identifier	printf		4325055	0					
ANR	4326769	ArgumentList	"""SwScaler: using n-tap %s scaler for vertical scaling (BGR)\\n"""		4325055	1					
ANR	4326770	Argument	"""SwScaler: using n-tap %s scaler for vertical scaling (BGR)\\n"""		4325055	0					
ANR	4326771	PrimaryExpression	"""SwScaler: using n-tap %s scaler for vertical scaling (BGR)\\n"""		4325055	0					
ANR	4326772	Argument	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	1					
ANR	4326773	ConditionalExpression	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	0					
ANR	4326774	Condition	cpuCaps . hasMMX		4325055	0					
ANR	4326775	MemberAccess	cpuCaps . hasMMX		4325055	0					
ANR	4326776	Identifier	cpuCaps		4325055	0					
ANR	4326777	Identifier	hasMMX		4325055	1					
ANR	4326778	PrimaryExpression	"""MMX"""		4325055	1					
ANR	4326779	PrimaryExpression	"""C"""		4325055	2					
ANR	4326780	Statement	(	501:10:9118:9118	4325055	1	True				
ANR	4326781	Statement	"""SwScaler: using 1-tap %s \\""scaler\\"" for vertical luminance scaling (BGR)\\n"""	501:11:9119:9194	4325055	2	True				
ANR	4326782	Statement	"""SwScaler:       2-tap scaler for vertical chrominance scaling (BGR)\\n"""	503:11:9208:9278	4325055	3	True				
ANR	4326783	Statement	","	503:82:9279:9279	4325055	4	True				
ANR	4326784	Statement	cpuCaps	503:83:9280:9286	4325055	5	True				
ANR	4326785	Statement	.	503:90:9287:9287	4325055	6	True				
ANR	4326786	Statement	hasMMX	503:91:9288:9293	4325055	7	True				
ANR	4326787	Statement	?	503:98:9295:9295	4325055	8	True				
ANR	4326788	Statement	"""MMX"""	503:100:9297:9301	4325055	9	True				
ANR	4326789	Statement	:	503:106:9303:9303	4325055	10	True				
ANR	4326790	Statement	"""C"""	503:108:9305:9307	4325055	11	True				
ANR	4326791	Statement	)	503:111:9308:9308	4325055	12	True				
ANR	4326792	ExpressionStatement		503:112:9309:9309	4325055	13	True				
ANR	4326793	IfStatement	if ( dstFormat == IMGFMT_BGR24 )		4325055	2					
ANR	4326794	Condition	dstFormat == IMGFMT_BGR24	517:5:9612:9634	4325055	0	True				
ANR	4326795	EqualityExpression	dstFormat == IMGFMT_BGR24		4325055	0		==			
ANR	4326796	Identifier	dstFormat		4325055	0					
ANR	4326797	Identifier	IMGFMT_BGR24		4325055	1					
ANR	4326798	ExpressionStatement	"printf ( ""SwScaler: using %s YV12->BGR24 Converter\\n"" , cpuCaps . hasMMX2 ? ""MMX2"" : ( cpuCaps . hasMMX ? ""MMX"" : ""C"" ) )"	519:3:9641:9757	4325055	1	True				
ANR	4326799	CallExpression	"printf ( ""SwScaler: using %s YV12->BGR24 Converter\\n"" , cpuCaps . hasMMX2 ? ""MMX2"" : ( cpuCaps . hasMMX ? ""MMX"" : ""C"" ) )"		4325055	0					
ANR	4326800	Callee	printf		4325055	0					
ANR	4326801	Identifier	printf		4325055	0					
ANR	4326802	ArgumentList	"""SwScaler: using %s YV12->BGR24 Converter\\n"""		4325055	1					
ANR	4326803	Argument	"""SwScaler: using %s YV12->BGR24 Converter\\n"""		4325055	0					
ANR	4326804	PrimaryExpression	"""SwScaler: using %s YV12->BGR24 Converter\\n"""		4325055	0					
ANR	4326805	Argument	"cpuCaps . hasMMX2 ? ""MMX2"" : ( cpuCaps . hasMMX ? ""MMX"" : ""C"" )"		4325055	1					
ANR	4326806	ConditionalExpression	"cpuCaps . hasMMX2 ? ""MMX2"" : ( cpuCaps . hasMMX ? ""MMX"" : ""C"" )"		4325055	0					
ANR	4326807	Condition	cpuCaps . hasMMX2		4325055	0					
ANR	4326808	MemberAccess	cpuCaps . hasMMX2		4325055	0					
ANR	4326809	Identifier	cpuCaps		4325055	0					
ANR	4326810	Identifier	hasMMX2		4325055	1					
ANR	4326811	PrimaryExpression	"""MMX2"""		4325055	1					
ANR	4326812	ConditionalExpression	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	2					
ANR	4326813	Condition	cpuCaps . hasMMX		4325055	0					
ANR	4326814	MemberAccess	cpuCaps . hasMMX		4325055	0					
ANR	4326815	Identifier	cpuCaps		4325055	0					
ANR	4326816	Identifier	hasMMX		4325055	1					
ANR	4326817	PrimaryExpression	"""MMX"""		4325055	1					
ANR	4326818	PrimaryExpression	"""C"""		4325055	2					
ANR	4326819	ElseStatement	else		4325055	0					
ANR	4326820	IfStatement	if ( dstFormat == IMGFMT_BGR32 )		4325055	0					
ANR	4326821	Condition	dstFormat == IMGFMT_BGR32	523:10:9770:9792	4325055	0	True				
ANR	4326822	EqualityExpression	dstFormat == IMGFMT_BGR32		4325055	0		==			
ANR	4326823	Identifier	dstFormat		4325055	0					
ANR	4326824	Identifier	IMGFMT_BGR32		4325055	1					
ANR	4326825	ExpressionStatement	"printf ( ""SwScaler: using %s YV12->BGR32 Converter\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"	525:3:9799:9881	4325055	1	True				
ANR	4326826	CallExpression	"printf ( ""SwScaler: using %s YV12->BGR32 Converter\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"		4325055	0					
ANR	4326827	Callee	printf		4325055	0					
ANR	4326828	Identifier	printf		4325055	0					
ANR	4326829	ArgumentList	"""SwScaler: using %s YV12->BGR32 Converter\\n"""		4325055	1					
ANR	4326830	Argument	"""SwScaler: using %s YV12->BGR32 Converter\\n"""		4325055	0					
ANR	4326831	PrimaryExpression	"""SwScaler: using %s YV12->BGR32 Converter\\n"""		4325055	0					
ANR	4326832	Argument	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	1					
ANR	4326833	ConditionalExpression	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	0					
ANR	4326834	Condition	cpuCaps . hasMMX		4325055	0					
ANR	4326835	MemberAccess	cpuCaps . hasMMX		4325055	0					
ANR	4326836	Identifier	cpuCaps		4325055	0					
ANR	4326837	Identifier	hasMMX		4325055	1					
ANR	4326838	PrimaryExpression	"""MMX"""		4325055	1					
ANR	4326839	PrimaryExpression	"""C"""		4325055	2					
ANR	4326840	ElseStatement	else		4325055	0					
ANR	4326841	IfStatement	if ( dstFormat == IMGFMT_BGR16 )		4325055	0					
ANR	4326842	Condition	dstFormat == IMGFMT_BGR16	527:10:9894:9916	4325055	0	True				
ANR	4326843	EqualityExpression	dstFormat == IMGFMT_BGR16		4325055	0		==			
ANR	4326844	Identifier	dstFormat		4325055	0					
ANR	4326845	Identifier	IMGFMT_BGR16		4325055	1					
ANR	4326846	ExpressionStatement	"printf ( ""SwScaler: using %s YV12->BGR16 Converter\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"	529:3:9923:10005	4325055	1	True				
ANR	4326847	CallExpression	"printf ( ""SwScaler: using %s YV12->BGR16 Converter\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"		4325055	0					
ANR	4326848	Callee	printf		4325055	0					
ANR	4326849	Identifier	printf		4325055	0					
ANR	4326850	ArgumentList	"""SwScaler: using %s YV12->BGR16 Converter\\n"""		4325055	1					
ANR	4326851	Argument	"""SwScaler: using %s YV12->BGR16 Converter\\n"""		4325055	0					
ANR	4326852	PrimaryExpression	"""SwScaler: using %s YV12->BGR16 Converter\\n"""		4325055	0					
ANR	4326853	Argument	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	1					
ANR	4326854	ConditionalExpression	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	0					
ANR	4326855	Condition	cpuCaps . hasMMX		4325055	0					
ANR	4326856	MemberAccess	cpuCaps . hasMMX		4325055	0					
ANR	4326857	Identifier	cpuCaps		4325055	0					
ANR	4326858	Identifier	hasMMX		4325055	1					
ANR	4326859	PrimaryExpression	"""MMX"""		4325055	1					
ANR	4326860	PrimaryExpression	"""C"""		4325055	2					
ANR	4326861	ElseStatement	else		4325055	0					
ANR	4326862	IfStatement	if ( dstFormat == IMGFMT_BGR15 )		4325055	0					
ANR	4326863	Condition	dstFormat == IMGFMT_BGR15	531:10:10018:10040	4325055	0	True				
ANR	4326864	EqualityExpression	dstFormat == IMGFMT_BGR15		4325055	0		==			
ANR	4326865	Identifier	dstFormat		4325055	0					
ANR	4326866	Identifier	IMGFMT_BGR15		4325055	1					
ANR	4326867	ExpressionStatement	"printf ( ""SwScaler: using %s YV12->BGR15 Converter\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"	533:3:10047:10129	4325055	1	True				
ANR	4326868	CallExpression	"printf ( ""SwScaler: using %s YV12->BGR15 Converter\\n"" , cpuCaps . hasMMX ? ""MMX"" : ""C"" )"		4325055	0					
ANR	4326869	Callee	printf		4325055	0					
ANR	4326870	Identifier	printf		4325055	0					
ANR	4326871	ArgumentList	"""SwScaler: using %s YV12->BGR15 Converter\\n"""		4325055	1					
ANR	4326872	Argument	"""SwScaler: using %s YV12->BGR15 Converter\\n"""		4325055	0					
ANR	4326873	PrimaryExpression	"""SwScaler: using %s YV12->BGR15 Converter\\n"""		4325055	0					
ANR	4326874	Argument	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	1					
ANR	4326875	ConditionalExpression	"cpuCaps . hasMMX ? ""MMX"" : ""C"""		4325055	0					
ANR	4326876	Condition	cpuCaps . hasMMX		4325055	0					
ANR	4326877	MemberAccess	cpuCaps . hasMMX		4325055	0					
ANR	4326878	Identifier	cpuCaps		4325055	0					
ANR	4326879	Identifier	hasMMX		4325055	1					
ANR	4326880	PrimaryExpression	"""MMX"""		4325055	1					
ANR	4326881	PrimaryExpression	"""C"""		4325055	2					
ANR	4326882	ExpressionStatement	"printf ( ""SwScaler: %dx%d -> %dx%d\\n"" , srcW , srcH , dstW , dstH )"	537:2:10136:10196	4325055	3	True				
ANR	4326883	CallExpression	"printf ( ""SwScaler: %dx%d -> %dx%d\\n"" , srcW , srcH , dstW , dstH )"		4325055	0					
ANR	4326884	Callee	printf		4325055	0					
ANR	4326885	Identifier	printf		4325055	0					
ANR	4326886	ArgumentList	"""SwScaler: %dx%d -> %dx%d\\n"""		4325055	1					
ANR	4326887	Argument	"""SwScaler: %dx%d -> %dx%d\\n"""		4325055	0					
ANR	4326888	PrimaryExpression	"""SwScaler: %dx%d -> %dx%d\\n"""		4325055	0					
ANR	4326889	Argument	srcW		4325055	1					
ANR	4326890	Identifier	srcW		4325055	0					
ANR	4326891	Argument	srcH		4325055	2					
ANR	4326892	Identifier	srcH		4325055	0					
ANR	4326893	Argument	dstW		4325055	3					
ANR	4326894	Identifier	dstW		4325055	0					
ANR	4326895	Argument	dstH		4325055	4					
ANR	4326896	Identifier	dstH		4325055	0					
ANR	4326897	IfStatement	if ( ( flags & SWS_PRINT_INFO ) && verbose > 1 )		4325055	61					
ANR	4326898	Condition	( flags & SWS_PRINT_INFO ) && verbose > 1	541:4:10207:10243	4325055	0	True				
ANR	4326899	AndExpression	( flags & SWS_PRINT_INFO ) && verbose > 1		4325055	0		&&			
ANR	4326900	BitAndExpression	flags & SWS_PRINT_INFO		4325055	0		&			
ANR	4326901	Identifier	flags		4325055	0					
ANR	4326902	Identifier	SWS_PRINT_INFO		4325055	1					
ANR	4326903	RelationalExpression	verbose > 1		4325055	1		>			
ANR	4326904	Identifier	verbose		4325055	0					
ANR	4326905	PrimaryExpression	1		4325055	1					
ANR	4326906	CompoundStatement		541:1:10071:10071	4325055	1					
ANR	4326907	ExpressionStatement	"printf ( ""SwScaler:Lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"" , c -> srcW , c -> srcH , c -> dstW , c -> dstH , c -> lumXInc , c -> lumYInc )"	545:2:10253:10389	4325055	0	True				
ANR	4326908	CallExpression	"printf ( ""SwScaler:Lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"" , c -> srcW , c -> srcH , c -> dstW , c -> dstH , c -> lumXInc , c -> lumYInc )"		4325055	0					
ANR	4326909	Callee	printf		4325055	0					
ANR	4326910	Identifier	printf		4325055	0					
ANR	4326911	ArgumentList	"""SwScaler:Lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"""		4325055	1					
ANR	4326912	Argument	"""SwScaler:Lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"""		4325055	0					
ANR	4326913	PrimaryExpression	"""SwScaler:Lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"""		4325055	0					
ANR	4326914	Argument	c -> srcW		4325055	1					
ANR	4326915	PtrMemberAccess	c -> srcW		4325055	0					
ANR	4326916	Identifier	c		4325055	0					
ANR	4326917	Identifier	srcW		4325055	1					
ANR	4326918	Argument	c -> srcH		4325055	2					
ANR	4326919	PtrMemberAccess	c -> srcH		4325055	0					
ANR	4326920	Identifier	c		4325055	0					
ANR	4326921	Identifier	srcH		4325055	1					
ANR	4326922	Argument	c -> dstW		4325055	3					
ANR	4326923	PtrMemberAccess	c -> dstW		4325055	0					
ANR	4326924	Identifier	c		4325055	0					
ANR	4326925	Identifier	dstW		4325055	1					
ANR	4326926	Argument	c -> dstH		4325055	4					
ANR	4326927	PtrMemberAccess	c -> dstH		4325055	0					
ANR	4326928	Identifier	c		4325055	0					
ANR	4326929	Identifier	dstH		4325055	1					
ANR	4326930	Argument	c -> lumXInc		4325055	5					
ANR	4326931	PtrMemberAccess	c -> lumXInc		4325055	0					
ANR	4326932	Identifier	c		4325055	0					
ANR	4326933	Identifier	lumXInc		4325055	1					
ANR	4326934	Argument	c -> lumYInc		4325055	6					
ANR	4326935	PtrMemberAccess	c -> lumYInc		4325055	0					
ANR	4326936	Identifier	c		4325055	0					
ANR	4326937	Identifier	lumYInc		4325055	1					
ANR	4326938	ExpressionStatement	"printf ( ""SwScaler:Chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"" , c -> chrSrcW , c -> chrSrcH , c -> chrDstW , c -> chrDstH , c -> chrXInc , c -> chrYInc )"	549:2:10394:10542	4325055	1	True				
ANR	4326939	CallExpression	"printf ( ""SwScaler:Chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"" , c -> chrSrcW , c -> chrSrcH , c -> chrDstW , c -> chrDstH , c -> chrXInc , c -> chrYInc )"		4325055	0					
ANR	4326940	Callee	printf		4325055	0					
ANR	4326941	Identifier	printf		4325055	0					
ANR	4326942	ArgumentList	"""SwScaler:Chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"""		4325055	1					
ANR	4326943	Argument	"""SwScaler:Chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"""		4325055	0					
ANR	4326944	PrimaryExpression	"""SwScaler:Chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\\n"""		4325055	0					
ANR	4326945	Argument	c -> chrSrcW		4325055	1					
ANR	4326946	PtrMemberAccess	c -> chrSrcW		4325055	0					
ANR	4326947	Identifier	c		4325055	0					
ANR	4326948	Identifier	chrSrcW		4325055	1					
ANR	4326949	Argument	c -> chrSrcH		4325055	2					
ANR	4326950	PtrMemberAccess	c -> chrSrcH		4325055	0					
ANR	4326951	Identifier	c		4325055	0					
ANR	4326952	Identifier	chrSrcH		4325055	1					
ANR	4326953	Argument	c -> chrDstW		4325055	3					
ANR	4326954	PtrMemberAccess	c -> chrDstW		4325055	0					
ANR	4326955	Identifier	c		4325055	0					
ANR	4326956	Identifier	chrDstW		4325055	1					
ANR	4326957	Argument	c -> chrDstH		4325055	4					
ANR	4326958	PtrMemberAccess	c -> chrDstH		4325055	0					
ANR	4326959	Identifier	c		4325055	0					
ANR	4326960	Identifier	chrDstH		4325055	1					
ANR	4326961	Argument	c -> chrXInc		4325055	5					
ANR	4326962	PtrMemberAccess	c -> chrXInc		4325055	0					
ANR	4326963	Identifier	c		4325055	0					
ANR	4326964	Identifier	chrXInc		4325055	1					
ANR	4326965	Argument	c -> chrYInc		4325055	6					
ANR	4326966	PtrMemberAccess	c -> chrYInc		4325055	0					
ANR	4326967	Identifier	c		4325055	0					
ANR	4326968	Identifier	chrYInc		4325055	1					
ANR	4326969	ReturnStatement	return c ;	557:1:10553:10561	4325055	62	True				
ANR	4326970	Identifier	c		4325055	0					
ANR	4326971	ReturnType	SwsContext *		4325055	1					
ANR	4326972	Identifier	getSwsContext		4325055	2					
ANR	4326973	ParameterList	"int srcW , int srcH , int srcFormat , int dstW , int dstH , int dstFormat , int flags , SwsFilter * srcFilter , SwsFilter * dstFilter"		4325055	3					
ANR	4326974	Parameter	int srcW	1:26:26:33	4325055	0	True				
ANR	4326975	ParameterType	int		4325055	0					
ANR	4326976	Identifier	srcW		4325055	1					
ANR	4326977	Parameter	int srcH	1:36:36:43	4325055	1	True				
ANR	4326978	ParameterType	int		4325055	0					
ANR	4326979	Identifier	srcH		4325055	1					
ANR	4326980	Parameter	int srcFormat	1:46:46:58	4325055	2	True				
ANR	4326981	ParameterType	int		4325055	0					
ANR	4326982	Identifier	srcFormat		4325055	1					
ANR	4326983	Parameter	int dstW	1:61:61:68	4325055	3	True				
ANR	4326984	ParameterType	int		4325055	0					
ANR	4326985	Identifier	dstW		4325055	1					
ANR	4326986	Parameter	int dstH	1:71:71:78	4325055	4	True				
ANR	4326987	ParameterType	int		4325055	0					
ANR	4326988	Identifier	dstH		4325055	1					
ANR	4326989	Parameter	int dstFormat	1:81:81:93	4325055	5	True				
ANR	4326990	ParameterType	int		4325055	0					
ANR	4326991	Identifier	dstFormat		4325055	1					
ANR	4326992	Parameter	int flags	1:96:96:104	4325055	6	True				
ANR	4326993	ParameterType	int		4325055	0					
ANR	4326994	Identifier	flags		4325055	1					
ANR	4326995	Parameter	SwsFilter * srcFilter	3:25:133:152	4325055	7	True				
ANR	4326996	ParameterType	SwsFilter *		4325055	0					
ANR	4326997	Identifier	srcFilter		4325055	1					
ANR	4326998	Parameter	SwsFilter * dstFilter	3:47:155:174	4325055	8	True				
ANR	4326999	ParameterType	SwsFilter *		4325055	0					
ANR	4327000	Identifier	dstFilter		4325055	1					
ANR	4327001	CFGEntryNode	ENTRY		4325055		True				
ANR	4327002	CFGExitNode	EXIT		4325055		True				
ANR	4327003	Symbol	& c -> hChrFilter		4325055						
ANR	4327004	Symbol	c -> lumXInc		4325055						
ANR	4327005	Symbol	srcFilter		4325055						
ANR	4327006	Symbol	* c -> vChrFilter		4325055						
ANR	4327007	Symbol	* c -> vChrBufSize		4325055						
ANR	4327008	Symbol	dstH		4325055						
ANR	4327009	Symbol	c -> chrDstH		4325055						
ANR	4327010	Symbol	cpuCaps		4325055						
ANR	4327011	Symbol	isHalfChrV		4325055						
ANR	4327012	Symbol	chrI		4325055						
ANR	4327013	Symbol	c -> vChrBufSize		4325055						
ANR	4327014	Symbol	c -> hChrFilterSize		4325055						
ANR	4327015	Symbol	c -> vLumFilterSize		4325055						
ANR	4327016	Symbol	c -> vLumBufSize		4325055						
ANR	4327017	Symbol	dstW		4325055						
ANR	4327018	Symbol	c -> chrMmxFilter		4325055						
ANR	4327019	Symbol	& c -> vLumFilterSize		4325055						
ANR	4327020	Symbol	SWS_PRINT_INFO		4325055						
ANR	4327021	Symbol	& c -> hChrFilterSize		4325055						
ANR	4327022	Symbol	c -> lumPixBuf		4325055						
ANR	4327023	Symbol	filterAlign		4325055						
ANR	4327024	Symbol	srcFormat		4325055						
ANR	4327025	Symbol	c -> srcFormat		4325055						
ANR	4327026	Symbol	* srcFilter		4325055						
ANR	4327027	Symbol	isHalfChrH		4325055						
ANR	4327028	Symbol	SWS_X		4325055						
ANR	4327029	Symbol	* c -> vLumBufSize		4325055						
ANR	4327030	Symbol	dstFilter		4325055						
ANR	4327031	Symbol	c -> chrDstW		4325055						
ANR	4327032	Symbol	c -> lumMmxFilter		4325055						
ANR	4327033	Symbol	SWS_FULL_CHR_H_INP		4325055						
ANR	4327034	Symbol	* c -> chrPixBuf		4325055						
ANR	4327035	Symbol	srcFilter -> chrH		4325055						
ANR	4327036	Symbol	SWS_FULL_CHR_H_INT		4325055						
ANR	4327037	Symbol	MAX		4325055						
ANR	4327038	Symbol	c -> chrSrcH		4325055						
ANR	4327039	Symbol	dstFilter -> lumH		4325055						
ANR	4327040	Symbol	flags		4325055						
ANR	4327041	Symbol	dstFilter -> lumV		4325055						
ANR	4327042	Symbol	IMGFMT_BGR15		4325055						
ANR	4327043	Symbol	IMGFMT_BGR16		4325055						
ANR	4327044	Symbol	srcFilter -> chrV		4325055						
ANR	4327045	Symbol	c -> dstW		4325055						
ANR	4327046	Symbol	c -> vLumFilter		4325055						
ANR	4327047	Symbol	& c -> vChrFilter		4325055						
ANR	4327048	Symbol	& c -> vChrFilterSize		4325055						
ANR	4327049	Symbol	c -> vLumFilterPos		4325055						
ANR	4327050	Symbol	c		4325055						
ANR	4327051	Symbol	SWS_AREA		4325055						
ANR	4327052	Symbol	i		4325055						
ANR	4327053	Symbol	dummyFilter		4325055						
ANR	4327054	Symbol	memalign		4325055						
ANR	4327055	Symbol	verbose		4325055						
ANR	4327056	Symbol	* dstFilter		4325055						
ANR	4327057	Symbol	& c -> hLumFilterSize		4325055						
ANR	4327058	Symbol	~1		4325055						
ANR	4327059	Symbol	c -> chrSrcW		4325055						
ANR	4327060	Symbol	gCpuCaps . hasMMX		4325055						
ANR	4327061	Symbol	* c -> vLumFilter		4325055						
ANR	4327062	Symbol	swScale		4325055						
ANR	4327063	Symbol	cpuCaps . hasMMX2		4325055						
ANR	4327064	Symbol	c -> vChrFilterPos		4325055						
ANR	4327065	Symbol	* c -> lumPixBuf		4325055						
ANR	4327066	Symbol	* c -> vLumFilterPos		4325055						
ANR	4327067	Symbol	dither		4325055						
ANR	4327068	Symbol	& c -> hChrFilterPos		4325055						
ANR	4327069	Symbol	c -> hLumFilterSize		4325055						
ANR	4327070	Symbol	SWS_FULL_CHR_V		4325055						
ANR	4327071	Symbol	~SWS_FULL_CHR_V		4325055						
ANR	4327072	Symbol	& dummyFilter		4325055						
ANR	4327073	Symbol	& c -> vLumFilterPos		4325055						
ANR	4327074	Symbol	~SWS_FULL_CHR_H_INT		4325055						
ANR	4327075	Symbol	IMGFMT_BGR32		4325055						
ANR	4327076	Symbol	cpuCaps . hasMMX		4325055						
ANR	4327077	Symbol	c -> srcW		4325055						
ANR	4327078	Symbol	~SWS_FULL_CHR_H_INP		4325055						
ANR	4327079	Symbol	c -> funnyYCode		4325055						
ANR	4327080	Symbol	NULL		4325055						
ANR	4327081	Symbol	* c -> vChrFilterPos		4325055						
ANR	4327082	Symbol	c -> chrPixBuf		4325055						
ANR	4327083	Symbol	SWS_POINT		4325055						
ANR	4327084	Symbol	c -> dstH		4325055						
ANR	4327085	Symbol	c -> vChrFilterSize		4325055						
ANR	4327086	Symbol	* * c		4325055						
ANR	4327087	Symbol	vo_format_name		4325055						
ANR	4327088	Symbol	& c -> vLumFilter		4325055						
ANR	4327089	Symbol	stderr		4325055						
ANR	4327090	Symbol	& c -> vChrFilterPos		4325055						
ANR	4327091	Symbol	c -> canMMX2BeUsed		4325055						
ANR	4327092	Symbol	IMGFMT_BGR24		4325055						
ANR	4327093	Symbol	c -> chrYInc		4325055						
ANR	4327094	Symbol	nextSlice		4325055						
ANR	4327095	Symbol	c -> flags		4325055						
ANR	4327096	Symbol	& c -> hLumFilter		4325055						
ANR	4327097	Symbol	srcW		4325055						
ANR	4327098	Symbol	dstFilter -> chrV		4325055						
ANR	4327099	Symbol	gCpuCaps		4325055						
ANR	4327100	Symbol	srcFilter -> lumH		4325055						
ANR	4327101	Symbol	srcH		4325055						
ANR	4327102	Symbol	dstFilter -> chrH		4325055						
ANR	4327103	Symbol	c -> chrXInc		4325055						
ANR	4327104	Symbol	srcFilter -> lumV		4325055						
ANR	4327105	Symbol	c -> dstFormat		4325055						
ANR	4327106	Symbol	cpuCaps . has3DNow		4325055						
ANR	4327107	Symbol	dstFormat		4325055						
ANR	4327108	Symbol	SWS_FAST_BILINEAR		4325055						
ANR	4327109	Symbol	c -> vChrFilter		4325055						
ANR	4327110	Symbol	SWS_BILINEAR		4325055						
ANR	4327111	Symbol	c -> lumYInc		4325055						
ANR	4327112	Symbol	c -> srcH		4325055						
ANR	4327113	Symbol	SWS_BICUBIC		4325055						
ANR	4327114	Symbol	* c		4325055						
ANR	4327115	Symbol	& c -> hLumFilterPos		4325055						
ANR	4327116	Symbol	* chrI		4325055						
ANR	4327117	Symbol	c -> funnyUVCode		4325055						
ANR	4327118	Symbol	* i		4325055						
ANR	4327119	Symbol	* c -> lumMmxFilter		4325055						
ANR	4327120	Symbol	* c -> chrMmxFilter		4325055						
ANR	4327121	Symbol	isPlanarYUV		4325055						
