command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5079672	File	/home/p4ultr4n/workplace/ReVeal/raw_code/kmvc_decode_intra_8x8_1.c								
ANR	5079673	Function	kmvc_decode_intra_8x8	1:0:0:4975							
ANR	5079674	FunctionDef	"kmvc_decode_intra_8x8 (KmvcContext * ctx , const uint8_t * src , int src_size , int w , int h)"		5079673	0					
ANR	5079675	CompoundStatement		3:0:102:4975	5079673	0					
ANR	5079676	IdentifierDeclStatement	BitBuf bb ;	5:4:109:118	5079673	0	True				
ANR	5079677	IdentifierDecl	bb		5079673	0					
ANR	5079678	IdentifierDeclType	BitBuf		5079673	0					
ANR	5079679	Identifier	bb		5079673	1					
ANR	5079680	IdentifierDeclStatement	"int res , val ;"	7:4:125:137	5079673	1	True				
ANR	5079681	IdentifierDecl	res		5079673	0					
ANR	5079682	IdentifierDeclType	int		5079673	0					
ANR	5079683	Identifier	res		5079673	1					
ANR	5079684	IdentifierDecl	val		5079673	1					
ANR	5079685	IdentifierDeclType	int		5079673	0					
ANR	5079686	Identifier	val		5079673	1					
ANR	5079687	IdentifierDeclStatement	"int i , j ;"	9:4:144:152	5079673	2	True				
ANR	5079688	IdentifierDecl	i		5079673	0					
ANR	5079689	IdentifierDeclType	int		5079673	0					
ANR	5079690	Identifier	i		5079673	1					
ANR	5079691	IdentifierDecl	j		5079673	1					
ANR	5079692	IdentifierDeclType	int		5079673	0					
ANR	5079693	Identifier	j		5079673	1					
ANR	5079694	IdentifierDeclStatement	"int bx , by ;"	11:4:159:169	5079673	3	True				
ANR	5079695	IdentifierDecl	bx		5079673	0					
ANR	5079696	IdentifierDeclType	int		5079673	0					
ANR	5079697	Identifier	bx		5079673	1					
ANR	5079698	IdentifierDecl	by		5079673	1					
ANR	5079699	IdentifierDeclType	int		5079673	0					
ANR	5079700	Identifier	by		5079673	1					
ANR	5079701	IdentifierDeclStatement	"int l0x , l1x , l0y , l1y ;"	13:4:176:198	5079673	4	True				
ANR	5079702	IdentifierDecl	l0x		5079673	0					
ANR	5079703	IdentifierDeclType	int		5079673	0					
ANR	5079704	Identifier	l0x		5079673	1					
ANR	5079705	IdentifierDecl	l1x		5079673	1					
ANR	5079706	IdentifierDeclType	int		5079673	0					
ANR	5079707	Identifier	l1x		5079673	1					
ANR	5079708	IdentifierDecl	l0y		5079673	2					
ANR	5079709	IdentifierDeclType	int		5079673	0					
ANR	5079710	Identifier	l0y		5079673	1					
ANR	5079711	IdentifierDecl	l1y		5079673	3					
ANR	5079712	IdentifierDeclType	int		5079673	0					
ANR	5079713	Identifier	l1y		5079673	1					
ANR	5079714	IdentifierDeclStatement	"int mx , my ;"	15:4:205:215	5079673	5	True				
ANR	5079715	IdentifierDecl	mx		5079673	0					
ANR	5079716	IdentifierDeclType	int		5079673	0					
ANR	5079717	Identifier	mx		5079673	1					
ANR	5079718	IdentifierDecl	my		5079673	1					
ANR	5079719	IdentifierDeclType	int		5079673	0					
ANR	5079720	Identifier	my		5079673	1					
ANR	5079721	IdentifierDeclStatement	const uint8_t * src_end = src + src_size ;	17:4:222:261	5079673	6	True				
ANR	5079722	IdentifierDecl	* src_end = src + src_size		5079673	0					
ANR	5079723	IdentifierDeclType	const uint8_t *		5079673	0					
ANR	5079724	Identifier	src_end		5079673	1					
ANR	5079725	AssignmentExpression	* src_end = src + src_size		5079673	2		=			
ANR	5079726	Identifier	src_end		5079673	0					
ANR	5079727	AdditiveExpression	src + src_size		5079673	1		+			
ANR	5079728	Identifier	src		5079673	0					
ANR	5079729	Identifier	src_size		5079673	1					
ANR	5079730	ExpressionStatement	"kmvc_init_getbits ( bb , src )"	21:4:270:296	5079673	7	True				
ANR	5079731	CallExpression	"kmvc_init_getbits ( bb , src )"		5079673	0					
ANR	5079732	Callee	kmvc_init_getbits		5079673	0					
ANR	5079733	Identifier	kmvc_init_getbits		5079673	0					
ANR	5079734	ArgumentList	bb		5079673	1					
ANR	5079735	Argument	bb		5079673	0					
ANR	5079736	Identifier	bb		5079673	0					
ANR	5079737	Argument	src		5079673	1					
ANR	5079738	Identifier	src		5079673	0					
ANR	5079739	ForStatement	for ( by = 0 ; by < h ; by += 8 )		5079673	8					
ANR	5079740	ForInit	by = 0 ;	25:9:310:316	5079673	0	True				
ANR	5079741	AssignmentExpression	by = 0		5079673	0		=			
ANR	5079742	Identifier	by		5079673	0					
ANR	5079743	PrimaryExpression	0		5079673	1					
ANR	5079744	Condition	by < h	25:17:318:323	5079673	1	True				
ANR	5079745	RelationalExpression	by < h		5079673	0		<			
ANR	5079746	Identifier	by		5079673	0					
ANR	5079747	Identifier	h		5079673	1					
ANR	5079748	AssignmentExpression	by += 8	25:25:326:332	5079673	2	True	+=			
ANR	5079749	Identifier	by		5079673	0					
ANR	5079750	PrimaryExpression	8		5079673	1					
ANR	5079751	ForStatement	for ( bx = 0 ; bx < w ; bx += 8 )		5079673	3					
ANR	5079752	ForInit	bx = 0 ;	27:13:349:355	5079673	0	True				
ANR	5079753	AssignmentExpression	bx = 0		5079673	0		=			
ANR	5079754	Identifier	bx		5079673	0					
ANR	5079755	PrimaryExpression	0		5079673	1					
ANR	5079756	Condition	bx < w	27:21:357:362	5079673	1	True				
ANR	5079757	RelationalExpression	bx < w		5079673	0		<			
ANR	5079758	Identifier	bx		5079673	0					
ANR	5079759	Identifier	w		5079673	1					
ANR	5079760	AssignmentExpression	bx += 8	27:29:365:371	5079673	2	True	+=			
ANR	5079761	Identifier	bx		5079673	0					
ANR	5079762	PrimaryExpression	8		5079673	1					
ANR	5079763	CompoundStatement		25:38:271:271	5079673	3					
ANR	5079764	ExpressionStatement	"kmvc_getbit ( bb , src , src_end , res )"	29:12:389:423	5079673	0	True				
ANR	5079765	CallExpression	"kmvc_getbit ( bb , src , src_end , res )"		5079673	0					
ANR	5079766	Callee	kmvc_getbit		5079673	0					
ANR	5079767	Identifier	kmvc_getbit		5079673	0					
ANR	5079768	ArgumentList	bb		5079673	1					
ANR	5079769	Argument	bb		5079673	0					
ANR	5079770	Identifier	bb		5079673	0					
ANR	5079771	Argument	src		5079673	1					
ANR	5079772	Identifier	src		5079673	0					
ANR	5079773	Argument	src_end		5079673	2					
ANR	5079774	Identifier	src_end		5079673	0					
ANR	5079775	Argument	res		5079673	3					
ANR	5079776	Identifier	res		5079673	0					
ANR	5079777	IfStatement	if ( ! res )		5079673	1					
ANR	5079778	Condition	! res	31:16:442:445	5079673	0	True				
ANR	5079779	UnaryOperationExpression	! res		5079673	0					
ANR	5079780	UnaryOperator	!		5079673	0					
ANR	5079781	Identifier	res		5079673	1					
ANR	5079782	CompoundStatement		29:22:345:345	5079673	1					
ANR	5079783	IfStatement	if ( src >= src_end )		5079673	0					
ANR	5079784	Condition	src >= src_end	33:20:503:516	5079673	0	True				
ANR	5079785	RelationalExpression	src >= src_end		5079673	0		>=			
ANR	5079786	Identifier	src		5079673	0					
ANR	5079787	Identifier	src_end		5079673	1					
ANR	5079788	CompoundStatement		31:36:416:416	5079673	1					
ANR	5079789	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"	35:20:542:592	5079673	0	True				
ANR	5079790	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"		5079673	0					
ANR	5079791	Callee	av_log		5079673	0					
ANR	5079792	Identifier	av_log		5079673	0					
ANR	5079793	ArgumentList	ctx -> avctx		5079673	1					
ANR	5079794	Argument	ctx -> avctx		5079673	0					
ANR	5079795	PtrMemberAccess	ctx -> avctx		5079673	0					
ANR	5079796	Identifier	ctx		5079673	0					
ANR	5079797	Identifier	avctx		5079673	1					
ANR	5079798	Argument	AV_LOG_ERROR		5079673	1					
ANR	5079799	Identifier	AV_LOG_ERROR		5079673	0					
ANR	5079800	Argument	"""Data overrun\\n"""		5079673	2					
ANR	5079801	PrimaryExpression	"""Data overrun\\n"""		5079673	0					
ANR	5079802	ReturnStatement	return AVERROR_INVALIDDATA ;	37:20:615:641	5079673	1	True				
ANR	5079803	Identifier	AVERROR_INVALIDDATA		5079673	0					
ANR	5079804	ExpressionStatement	val = * src ++	41:16:679:691	5079673	1	True				
ANR	5079805	AssignmentExpression	val = * src ++		5079673	0		=			
ANR	5079806	Identifier	val		5079673	0					
ANR	5079807	UnaryOperationExpression	* src ++		5079673	1					
ANR	5079808	UnaryOperator	*		5079673	0					
ANR	5079809	PostIncDecOperationExpression	src ++		5079673	1					
ANR	5079810	Identifier	src		5079673	0					
ANR	5079811	IncDec	++		5079673	1					
ANR	5079812	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		5079673	2					
ANR	5079813	ForInit	i = 0 ;	43:21:715:720	5079673	0	True				
ANR	5079814	AssignmentExpression	i = 0		5079673	0		=			
ANR	5079815	Identifier	i		5079673	0					
ANR	5079816	PrimaryExpression	0		5079673	1					
ANR	5079817	Condition	i < 64	43:28:722:727	5079673	1	True				
ANR	5079818	RelationalExpression	i < 64		5079673	0		<			
ANR	5079819	Identifier	i		5079673	0					
ANR	5079820	PrimaryExpression	64		5079673	1					
ANR	5079821	PostIncDecOperationExpression	i ++	43:36:730:732	5079673	2	True				
ANR	5079822	Identifier	i		5079673	0					
ANR	5079823	IncDec	++		5079673	1					
ANR	5079824	ExpressionStatement	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) ) = val"	45:20:756:806	5079673	3	True				
ANR	5079825	AssignmentExpression	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) ) = val"		5079673	0		=			
ANR	5079826	CallExpression	"BLK ( ctx -> cur , bx + ( i & 0x7 ) , by + ( i >> 3 ) )"		5079673	0					
ANR	5079827	Callee	BLK		5079673	0					
ANR	5079828	Identifier	BLK		5079673	0					
ANR	5079829	ArgumentList	ctx -> cur		5079673	1					
ANR	5079830	Argument	ctx -> cur		5079673	0					
ANR	5079831	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5079832	Identifier	ctx		5079673	0					
ANR	5079833	Identifier	cur		5079673	1					
ANR	5079834	Argument	bx + ( i & 0x7 )		5079673	1					
ANR	5079835	AdditiveExpression	bx + ( i & 0x7 )		5079673	0		+			
ANR	5079836	Identifier	bx		5079673	0					
ANR	5079837	BitAndExpression	i & 0x7		5079673	1		&			
ANR	5079838	Identifier	i		5079673	0					
ANR	5079839	PrimaryExpression	0x7		5079673	1					
ANR	5079840	Argument	by + ( i >> 3 )		5079673	2					
ANR	5079841	AdditiveExpression	by + ( i >> 3 )		5079673	0		+			
ANR	5079842	Identifier	by		5079673	0					
ANR	5079843	ShiftExpression	i >> 3		5079673	1		>>			
ANR	5079844	Identifier	i		5079673	0					
ANR	5079845	PrimaryExpression	3		5079673	1					
ANR	5079846	Identifier	val		5079673	1					
ANR	5079847	ElseStatement	else		5079673	0					
ANR	5079848	CompoundStatement		45:19:725:725	5079673	0					
ANR	5079849	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		5079673	0					
ANR	5079850	ForInit	i = 0 ;	49:21:892:897	5079673	0	True				
ANR	5079851	AssignmentExpression	i = 0		5079673	0		=			
ANR	5079852	Identifier	i		5079673	0					
ANR	5079853	PrimaryExpression	0		5079673	1					
ANR	5079854	Condition	i < 4	49:28:899:903	5079673	1	True				
ANR	5079855	RelationalExpression	i < 4		5079673	0		<			
ANR	5079856	Identifier	i		5079673	0					
ANR	5079857	PrimaryExpression	4		5079673	1					
ANR	5079858	PostIncDecOperationExpression	i ++	49:35:906:908	5079673	2	True				
ANR	5079859	Identifier	i		5079673	0					
ANR	5079860	IncDec	++		5079673	1					
ANR	5079861	CompoundStatement		47:40:808:808	5079673	3					
ANR	5079862	ExpressionStatement	l0x = bx + ( i & 1 ) * 4	51:20:934:956	5079673	0	True				
ANR	5079863	AssignmentExpression	l0x = bx + ( i & 1 ) * 4		5079673	0		=			
ANR	5079864	Identifier	l0x		5079673	0					
ANR	5079865	AdditiveExpression	bx + ( i & 1 ) * 4		5079673	1		+			
ANR	5079866	Identifier	bx		5079673	0					
ANR	5079867	MultiplicativeExpression	( i & 1 ) * 4		5079673	1		*			
ANR	5079868	BitAndExpression	i & 1		5079673	0		&			
ANR	5079869	Identifier	i		5079673	0					
ANR	5079870	PrimaryExpression	1		5079673	1					
ANR	5079871	PrimaryExpression	4		5079673	1					
ANR	5079872	ExpressionStatement	l0y = by + ( i & 2 ) * 2	53:20:979:1001	5079673	1	True				
ANR	5079873	AssignmentExpression	l0y = by + ( i & 2 ) * 2		5079673	0		=			
ANR	5079874	Identifier	l0y		5079673	0					
ANR	5079875	AdditiveExpression	by + ( i & 2 ) * 2		5079673	1		+			
ANR	5079876	Identifier	by		5079673	0					
ANR	5079877	MultiplicativeExpression	( i & 2 ) * 2		5079673	1		*			
ANR	5079878	BitAndExpression	i & 2		5079673	0		&			
ANR	5079879	Identifier	i		5079673	0					
ANR	5079880	PrimaryExpression	2		5079673	1					
ANR	5079881	PrimaryExpression	2		5079673	1					
ANR	5079882	ExpressionStatement	"kmvc_getbit ( bb , src , src_end , res )"	55:20:1024:1058	5079673	2	True				
ANR	5079883	CallExpression	"kmvc_getbit ( bb , src , src_end , res )"		5079673	0					
ANR	5079884	Callee	kmvc_getbit		5079673	0					
ANR	5079885	Identifier	kmvc_getbit		5079673	0					
ANR	5079886	ArgumentList	bb		5079673	1					
ANR	5079887	Argument	bb		5079673	0					
ANR	5079888	Identifier	bb		5079673	0					
ANR	5079889	Argument	src		5079673	1					
ANR	5079890	Identifier	src		5079673	0					
ANR	5079891	Argument	src_end		5079673	2					
ANR	5079892	Identifier	src_end		5079673	0					
ANR	5079893	Argument	res		5079673	3					
ANR	5079894	Identifier	res		5079673	0					
ANR	5079895	IfStatement	if ( ! res )		5079673	3					
ANR	5079896	Condition	! res	57:24:1085:1088	5079673	0	True				
ANR	5079897	UnaryOperationExpression	! res		5079673	0					
ANR	5079898	UnaryOperator	!		5079673	0					
ANR	5079899	Identifier	res		5079673	1					
ANR	5079900	CompoundStatement		55:30:988:988	5079673	1					
ANR	5079901	ExpressionStatement	"kmvc_getbit ( bb , src , src_end , res )"	59:24:1118:1152	5079673	0	True				
ANR	5079902	CallExpression	"kmvc_getbit ( bb , src , src_end , res )"		5079673	0					
ANR	5079903	Callee	kmvc_getbit		5079673	0					
ANR	5079904	Identifier	kmvc_getbit		5079673	0					
ANR	5079905	ArgumentList	bb		5079673	1					
ANR	5079906	Argument	bb		5079673	0					
ANR	5079907	Identifier	bb		5079673	0					
ANR	5079908	Argument	src		5079673	1					
ANR	5079909	Identifier	src		5079673	0					
ANR	5079910	Argument	src_end		5079673	2					
ANR	5079911	Identifier	src_end		5079673	0					
ANR	5079912	Argument	res		5079673	3					
ANR	5079913	Identifier	res		5079673	0					
ANR	5079914	IfStatement	if ( ! res )		5079673	1					
ANR	5079915	Condition	! res	61:28:1183:1186	5079673	0	True				
ANR	5079916	UnaryOperationExpression	! res		5079673	0					
ANR	5079917	UnaryOperator	!		5079673	0					
ANR	5079918	Identifier	res		5079673	1					
ANR	5079919	CompoundStatement		59:34:1086:1086	5079673	1					
ANR	5079920	IfStatement	if ( src >= src_end )		5079673	0					
ANR	5079921	Condition	src >= src_end	63:32:1252:1265	5079673	0	True				
ANR	5079922	RelationalExpression	src >= src_end		5079673	0		>=			
ANR	5079923	Identifier	src		5079673	0					
ANR	5079924	Identifier	src_end		5079673	1					
ANR	5079925	CompoundStatement		61:48:1165:1165	5079673	1					
ANR	5079926	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"	65:32:1303:1353	5079673	0	True				
ANR	5079927	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"		5079673	0					
ANR	5079928	Callee	av_log		5079673	0					
ANR	5079929	Identifier	av_log		5079673	0					
ANR	5079930	ArgumentList	ctx -> avctx		5079673	1					
ANR	5079931	Argument	ctx -> avctx		5079673	0					
ANR	5079932	PtrMemberAccess	ctx -> avctx		5079673	0					
ANR	5079933	Identifier	ctx		5079673	0					
ANR	5079934	Identifier	avctx		5079673	1					
ANR	5079935	Argument	AV_LOG_ERROR		5079673	1					
ANR	5079936	Identifier	AV_LOG_ERROR		5079673	0					
ANR	5079937	Argument	"""Data overrun\\n"""		5079673	2					
ANR	5079938	PrimaryExpression	"""Data overrun\\n"""		5079673	0					
ANR	5079939	ReturnStatement	return AVERROR_INVALIDDATA ;	67:32:1388:1414	5079673	1	True				
ANR	5079940	Identifier	AVERROR_INVALIDDATA		5079673	0					
ANR	5079941	ExpressionStatement	val = * src ++	71:28:1476:1488	5079673	1	True				
ANR	5079942	AssignmentExpression	val = * src ++		5079673	0		=			
ANR	5079943	Identifier	val		5079673	0					
ANR	5079944	UnaryOperationExpression	* src ++		5079673	1					
ANR	5079945	UnaryOperator	*		5079673	0					
ANR	5079946	PostIncDecOperationExpression	src ++		5079673	1					
ANR	5079947	Identifier	src		5079673	0					
ANR	5079948	IncDec	++		5079673	1					
ANR	5079949	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		5079673	2					
ANR	5079950	ForInit	j = 0 ;	73:33:1524:1529	5079673	0	True				
ANR	5079951	AssignmentExpression	j = 0		5079673	0		=			
ANR	5079952	Identifier	j		5079673	0					
ANR	5079953	PrimaryExpression	0		5079673	1					
ANR	5079954	Condition	j < 16	73:40:1531:1536	5079673	1	True				
ANR	5079955	RelationalExpression	j < 16		5079673	0		<			
ANR	5079956	Identifier	j		5079673	0					
ANR	5079957	PrimaryExpression	16		5079673	1					
ANR	5079958	PostIncDecOperationExpression	j ++	73:48:1539:1541	5079673	2	True				
ANR	5079959	Identifier	j		5079673	0					
ANR	5079960	IncDec	++		5079673	1					
ANR	5079961	ExpressionStatement	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) ) = val"	75:32:1577:1627	5079673	3	True				
ANR	5079962	AssignmentExpression	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) ) = val"		5079673	0		=			
ANR	5079963	CallExpression	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) )"		5079673	0					
ANR	5079964	Callee	BLK		5079673	0					
ANR	5079965	Identifier	BLK		5079673	0					
ANR	5079966	ArgumentList	ctx -> cur		5079673	1					
ANR	5079967	Argument	ctx -> cur		5079673	0					
ANR	5079968	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5079969	Identifier	ctx		5079673	0					
ANR	5079970	Identifier	cur		5079673	1					
ANR	5079971	Argument	l0x + ( j & 3 )		5079673	1					
ANR	5079972	AdditiveExpression	l0x + ( j & 3 )		5079673	0		+			
ANR	5079973	Identifier	l0x		5079673	0					
ANR	5079974	BitAndExpression	j & 3		5079673	1		&			
ANR	5079975	Identifier	j		5079673	0					
ANR	5079976	PrimaryExpression	3		5079673	1					
ANR	5079977	Argument	l0y + ( j >> 2 )		5079673	2					
ANR	5079978	AdditiveExpression	l0y + ( j >> 2 )		5079673	0		+			
ANR	5079979	Identifier	l0y		5079673	0					
ANR	5079980	ShiftExpression	j >> 2		5079673	1		>>			
ANR	5079981	Identifier	j		5079673	0					
ANR	5079982	PrimaryExpression	2		5079673	1					
ANR	5079983	Identifier	val		5079673	1					
ANR	5079984	ElseStatement	else		5079673	0					
ANR	5079985	CompoundStatement		75:31:1558:1558	5079673	0					
ANR	5079986	IfStatement	if ( src >= src_end )		5079673	0					
ANR	5079987	Condition	src >= src_end	79:32:1744:1757	5079673	0	True				
ANR	5079988	RelationalExpression	src >= src_end		5079673	0		>=			
ANR	5079989	Identifier	src		5079673	0					
ANR	5079990	Identifier	src_end		5079673	1					
ANR	5079991	CompoundStatement		77:48:1657:1657	5079673	1					
ANR	5079992	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"	81:32:1795:1845	5079673	0	True				
ANR	5079993	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"		5079673	0					
ANR	5079994	Callee	av_log		5079673	0					
ANR	5079995	Identifier	av_log		5079673	0					
ANR	5079996	ArgumentList	ctx -> avctx		5079673	1					
ANR	5079997	Argument	ctx -> avctx		5079673	0					
ANR	5079998	PtrMemberAccess	ctx -> avctx		5079673	0					
ANR	5079999	Identifier	ctx		5079673	0					
ANR	5080000	Identifier	avctx		5079673	1					
ANR	5080001	Argument	AV_LOG_ERROR		5079673	1					
ANR	5080002	Identifier	AV_LOG_ERROR		5079673	0					
ANR	5080003	Argument	"""Data overrun\\n"""		5079673	2					
ANR	5080004	PrimaryExpression	"""Data overrun\\n"""		5079673	0					
ANR	5080005	ReturnStatement	return AVERROR_INVALIDDATA ;	83:32:1880:1906	5079673	1	True				
ANR	5080006	Identifier	AVERROR_INVALIDDATA		5079673	0					
ANR	5080007	ExpressionStatement	val = * src ++	87:28:1968:1980	5079673	1	True				
ANR	5080008	AssignmentExpression	val = * src ++		5079673	0		=			
ANR	5080009	Identifier	val		5079673	0					
ANR	5080010	UnaryOperationExpression	* src ++		5079673	1					
ANR	5080011	UnaryOperator	*		5079673	0					
ANR	5080012	PostIncDecOperationExpression	src ++		5079673	1					
ANR	5080013	Identifier	src		5079673	0					
ANR	5080014	IncDec	++		5079673	1					
ANR	5080015	ExpressionStatement	mx = val & 0xF	89:28:2011:2025	5079673	2	True				
ANR	5080016	AssignmentExpression	mx = val & 0xF		5079673	0		=			
ANR	5080017	Identifier	mx		5079673	0					
ANR	5080018	BitAndExpression	val & 0xF		5079673	1		&			
ANR	5080019	Identifier	val		5079673	0					
ANR	5080020	PrimaryExpression	0xF		5079673	1					
ANR	5080021	ExpressionStatement	my = val >> 4	91:28:2056:2069	5079673	3	True				
ANR	5080022	AssignmentExpression	my = val >> 4		5079673	0		=			
ANR	5080023	Identifier	my		5079673	0					
ANR	5080024	ShiftExpression	val >> 4		5079673	1		>>			
ANR	5080025	Identifier	val		5079673	0					
ANR	5080026	PrimaryExpression	4		5079673	1					
ANR	5080027	ForStatement	for ( j = 0 ; j < 16 ; j ++ )		5079673	4					
ANR	5080028	ForInit	j = 0 ;	93:33:2105:2110	5079673	0	True				
ANR	5080029	AssignmentExpression	j = 0		5079673	0		=			
ANR	5080030	Identifier	j		5079673	0					
ANR	5080031	PrimaryExpression	0		5079673	1					
ANR	5080032	Condition	j < 16	93:40:2112:2117	5079673	1	True				
ANR	5080033	RelationalExpression	j < 16		5079673	0		<			
ANR	5080034	Identifier	j		5079673	0					
ANR	5080035	PrimaryExpression	16		5079673	1					
ANR	5080036	PostIncDecOperationExpression	j ++	93:48:2120:2122	5079673	2	True				
ANR	5080037	Identifier	j		5079673	0					
ANR	5080038	IncDec	++		5079673	1					
ANR	5080039	ExpressionStatement	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) ) = BLK ( ctx -> cur , l0x + ( j & 3 ) - mx , l0y + ( j >> 2 ) - my )"	95:32:2158:2296	5079673	3	True				
ANR	5080040	AssignmentExpression	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) ) = BLK ( ctx -> cur , l0x + ( j & 3 ) - mx , l0y + ( j >> 2 ) - my )"		5079673	0		=			
ANR	5080041	CallExpression	"BLK ( ctx -> cur , l0x + ( j & 3 ) , l0y + ( j >> 2 ) )"		5079673	0					
ANR	5080042	Callee	BLK		5079673	0					
ANR	5080043	Identifier	BLK		5079673	0					
ANR	5080044	ArgumentList	ctx -> cur		5079673	1					
ANR	5080045	Argument	ctx -> cur		5079673	0					
ANR	5080046	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080047	Identifier	ctx		5079673	0					
ANR	5080048	Identifier	cur		5079673	1					
ANR	5080049	Argument	l0x + ( j & 3 )		5079673	1					
ANR	5080050	AdditiveExpression	l0x + ( j & 3 )		5079673	0		+			
ANR	5080051	Identifier	l0x		5079673	0					
ANR	5080052	BitAndExpression	j & 3		5079673	1		&			
ANR	5080053	Identifier	j		5079673	0					
ANR	5080054	PrimaryExpression	3		5079673	1					
ANR	5080055	Argument	l0y + ( j >> 2 )		5079673	2					
ANR	5080056	AdditiveExpression	l0y + ( j >> 2 )		5079673	0		+			
ANR	5080057	Identifier	l0y		5079673	0					
ANR	5080058	ShiftExpression	j >> 2		5079673	1		>>			
ANR	5080059	Identifier	j		5079673	0					
ANR	5080060	PrimaryExpression	2		5079673	1					
ANR	5080061	CallExpression	"BLK ( ctx -> cur , l0x + ( j & 3 ) - mx , l0y + ( j >> 2 ) - my )"		5079673	1					
ANR	5080062	Callee	BLK		5079673	0					
ANR	5080063	Identifier	BLK		5079673	0					
ANR	5080064	ArgumentList	ctx -> cur		5079673	1					
ANR	5080065	Argument	ctx -> cur		5079673	0					
ANR	5080066	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080067	Identifier	ctx		5079673	0					
ANR	5080068	Identifier	cur		5079673	1					
ANR	5080069	Argument	l0x + ( j & 3 ) - mx		5079673	1					
ANR	5080070	AdditiveExpression	l0x + ( j & 3 ) - mx		5079673	0		+			
ANR	5080071	Identifier	l0x		5079673	0					
ANR	5080072	AdditiveExpression	( j & 3 ) - mx		5079673	1		-			
ANR	5080073	BitAndExpression	j & 3		5079673	0		&			
ANR	5080074	Identifier	j		5079673	0					
ANR	5080075	PrimaryExpression	3		5079673	1					
ANR	5080076	Identifier	mx		5079673	1					
ANR	5080077	Argument	l0y + ( j >> 2 ) - my		5079673	2					
ANR	5080078	AdditiveExpression	l0y + ( j >> 2 ) - my		5079673	0		+			
ANR	5080079	Identifier	l0y		5079673	0					
ANR	5080080	AdditiveExpression	( j >> 2 ) - my		5079673	1		-			
ANR	5080081	ShiftExpression	j >> 2		5079673	0		>>			
ANR	5080082	Identifier	j		5079673	0					
ANR	5080083	PrimaryExpression	2		5079673	1					
ANR	5080084	Identifier	my		5079673	1					
ANR	5080085	ElseStatement	else		5079673	0					
ANR	5080086	CompoundStatement		99:27:2250:2250	5079673	0					
ANR	5080087	ForStatement	for ( j = 0 ; j < 4 ; j ++ )		5079673	0					
ANR	5080088	ForInit	j = 0 ;	103:29:2421:2426	5079673	0	True				
ANR	5080089	AssignmentExpression	j = 0		5079673	0		=			
ANR	5080090	Identifier	j		5079673	0					
ANR	5080091	PrimaryExpression	0		5079673	1					
ANR	5080092	Condition	j < 4	103:36:2428:2432	5079673	1	True				
ANR	5080093	RelationalExpression	j < 4		5079673	0		<			
ANR	5080094	Identifier	j		5079673	0					
ANR	5080095	PrimaryExpression	4		5079673	1					
ANR	5080096	PostIncDecOperationExpression	j ++	103:43:2435:2437	5079673	2	True				
ANR	5080097	Identifier	j		5079673	0					
ANR	5080098	IncDec	++		5079673	1					
ANR	5080099	CompoundStatement		101:48:2337:2337	5079673	3					
ANR	5080100	ExpressionStatement	l1x = l0x + ( j & 1 ) * 2	105:28:2471:2494	5079673	0	True				
ANR	5080101	AssignmentExpression	l1x = l0x + ( j & 1 ) * 2		5079673	0		=			
ANR	5080102	Identifier	l1x		5079673	0					
ANR	5080103	AdditiveExpression	l0x + ( j & 1 ) * 2		5079673	1		+			
ANR	5080104	Identifier	l0x		5079673	0					
ANR	5080105	MultiplicativeExpression	( j & 1 ) * 2		5079673	1		*			
ANR	5080106	BitAndExpression	j & 1		5079673	0		&			
ANR	5080107	Identifier	j		5079673	0					
ANR	5080108	PrimaryExpression	1		5079673	1					
ANR	5080109	PrimaryExpression	2		5079673	1					
ANR	5080110	ExpressionStatement	l1y = l0y + ( j & 2 )	107:28:2525:2544	5079673	1	True				
ANR	5080111	AssignmentExpression	l1y = l0y + ( j & 2 )		5079673	0		=			
ANR	5080112	Identifier	l1y		5079673	0					
ANR	5080113	AdditiveExpression	l0y + ( j & 2 )		5079673	1		+			
ANR	5080114	Identifier	l0y		5079673	0					
ANR	5080115	BitAndExpression	j & 2		5079673	1		&			
ANR	5080116	Identifier	j		5079673	0					
ANR	5080117	PrimaryExpression	2		5079673	1					
ANR	5080118	ExpressionStatement	"kmvc_getbit ( bb , src , src_end , res )"	109:28:2575:2609	5079673	2	True				
ANR	5080119	CallExpression	"kmvc_getbit ( bb , src , src_end , res )"		5079673	0					
ANR	5080120	Callee	kmvc_getbit		5079673	0					
ANR	5080121	Identifier	kmvc_getbit		5079673	0					
ANR	5080122	ArgumentList	bb		5079673	1					
ANR	5080123	Argument	bb		5079673	0					
ANR	5080124	Identifier	bb		5079673	0					
ANR	5080125	Argument	src		5079673	1					
ANR	5080126	Identifier	src		5079673	0					
ANR	5080127	Argument	src_end		5079673	2					
ANR	5080128	Identifier	src_end		5079673	0					
ANR	5080129	Argument	res		5079673	3					
ANR	5080130	Identifier	res		5079673	0					
ANR	5080131	IfStatement	if ( ! res )		5079673	3					
ANR	5080132	Condition	! res	111:32:2644:2647	5079673	0	True				
ANR	5080133	UnaryOperationExpression	! res		5079673	0					
ANR	5080134	UnaryOperator	!		5079673	0					
ANR	5080135	Identifier	res		5079673	1					
ANR	5080136	CompoundStatement		109:38:2547:2547	5079673	1					
ANR	5080137	ExpressionStatement	"kmvc_getbit ( bb , src , src_end , res )"	113:32:2685:2719	5079673	0	True				
ANR	5080138	CallExpression	"kmvc_getbit ( bb , src , src_end , res )"		5079673	0					
ANR	5080139	Callee	kmvc_getbit		5079673	0					
ANR	5080140	Identifier	kmvc_getbit		5079673	0					
ANR	5080141	ArgumentList	bb		5079673	1					
ANR	5080142	Argument	bb		5079673	0					
ANR	5080143	Identifier	bb		5079673	0					
ANR	5080144	Argument	src		5079673	1					
ANR	5080145	Identifier	src		5079673	0					
ANR	5080146	Argument	src_end		5079673	2					
ANR	5080147	Identifier	src_end		5079673	0					
ANR	5080148	Argument	res		5079673	3					
ANR	5080149	Identifier	res		5079673	0					
ANR	5080150	IfStatement	if ( ! res )		5079673	1					
ANR	5080151	Condition	! res	115:36:2758:2761	5079673	0	True				
ANR	5080152	UnaryOperationExpression	! res		5079673	0					
ANR	5080153	UnaryOperator	!		5079673	0					
ANR	5080154	Identifier	res		5079673	1					
ANR	5080155	CompoundStatement		113:42:2661:2661	5079673	1					
ANR	5080156	IfStatement	if ( src >= src_end )		5079673	0					
ANR	5080157	Condition	src >= src_end	117:40:2835:2848	5079673	0	True				
ANR	5080158	RelationalExpression	src >= src_end		5079673	0		>=			
ANR	5080159	Identifier	src		5079673	0					
ANR	5080160	Identifier	src_end		5079673	1					
ANR	5080161	CompoundStatement		115:56:2748:2748	5079673	1					
ANR	5080162	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"	119:40:2894:2944	5079673	0	True				
ANR	5080163	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"		5079673	0					
ANR	5080164	Callee	av_log		5079673	0					
ANR	5080165	Identifier	av_log		5079673	0					
ANR	5080166	ArgumentList	ctx -> avctx		5079673	1					
ANR	5080167	Argument	ctx -> avctx		5079673	0					
ANR	5080168	PtrMemberAccess	ctx -> avctx		5079673	0					
ANR	5080169	Identifier	ctx		5079673	0					
ANR	5080170	Identifier	avctx		5079673	1					
ANR	5080171	Argument	AV_LOG_ERROR		5079673	1					
ANR	5080172	Identifier	AV_LOG_ERROR		5079673	0					
ANR	5080173	Argument	"""Data overrun\\n"""		5079673	2					
ANR	5080174	PrimaryExpression	"""Data overrun\\n"""		5079673	0					
ANR	5080175	ReturnStatement	return AVERROR_INVALIDDATA ;	121:40:2987:3013	5079673	1	True				
ANR	5080176	Identifier	AVERROR_INVALIDDATA		5079673	0					
ANR	5080177	ExpressionStatement	val = * src ++	125:36:3091:3103	5079673	1	True				
ANR	5080178	AssignmentExpression	val = * src ++		5079673	0		=			
ANR	5080179	Identifier	val		5079673	0					
ANR	5080180	UnaryOperationExpression	* src ++		5079673	1					
ANR	5080181	UnaryOperator	*		5079673	0					
ANR	5080182	PostIncDecOperationExpression	src ++		5079673	1					
ANR	5080183	Identifier	src		5079673	0					
ANR	5080184	IncDec	++		5079673	1					
ANR	5080185	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y ) = val"	127:36:3142:3171	5079673	2	True				
ANR	5080186	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y ) = val"		5079673	0		=			
ANR	5080187	CallExpression	"BLK ( ctx -> cur , l1x , l1y )"		5079673	0					
ANR	5080188	Callee	BLK		5079673	0					
ANR	5080189	Identifier	BLK		5079673	0					
ANR	5080190	ArgumentList	ctx -> cur		5079673	1					
ANR	5080191	Argument	ctx -> cur		5079673	0					
ANR	5080192	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080193	Identifier	ctx		5079673	0					
ANR	5080194	Identifier	cur		5079673	1					
ANR	5080195	Argument	l1x		5079673	1					
ANR	5080196	Identifier	l1x		5079673	0					
ANR	5080197	Argument	l1y		5079673	2					
ANR	5080198	Identifier	l1y		5079673	0					
ANR	5080199	Identifier	val		5079673	1					
ANR	5080200	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y ) = val"	129:36:3210:3243	5079673	3	True				
ANR	5080201	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y ) = val"		5079673	0		=			
ANR	5080202	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y )"		5079673	0					
ANR	5080203	Callee	BLK		5079673	0					
ANR	5080204	Identifier	BLK		5079673	0					
ANR	5080205	ArgumentList	ctx -> cur		5079673	1					
ANR	5080206	Argument	ctx -> cur		5079673	0					
ANR	5080207	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080208	Identifier	ctx		5079673	0					
ANR	5080209	Identifier	cur		5079673	1					
ANR	5080210	Argument	l1x + 1		5079673	1					
ANR	5080211	AdditiveExpression	l1x + 1		5079673	0		+			
ANR	5080212	Identifier	l1x		5079673	0					
ANR	5080213	PrimaryExpression	1		5079673	1					
ANR	5080214	Argument	l1y		5079673	2					
ANR	5080215	Identifier	l1y		5079673	0					
ANR	5080216	Identifier	val		5079673	1					
ANR	5080217	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y + 1 ) = val"	131:36:3282:3315	5079673	4	True				
ANR	5080218	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y + 1 ) = val"		5079673	0		=			
ANR	5080219	CallExpression	"BLK ( ctx -> cur , l1x , l1y + 1 )"		5079673	0					
ANR	5080220	Callee	BLK		5079673	0					
ANR	5080221	Identifier	BLK		5079673	0					
ANR	5080222	ArgumentList	ctx -> cur		5079673	1					
ANR	5080223	Argument	ctx -> cur		5079673	0					
ANR	5080224	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080225	Identifier	ctx		5079673	0					
ANR	5080226	Identifier	cur		5079673	1					
ANR	5080227	Argument	l1x		5079673	1					
ANR	5080228	Identifier	l1x		5079673	0					
ANR	5080229	Argument	l1y + 1		5079673	2					
ANR	5080230	AdditiveExpression	l1y + 1		5079673	0		+			
ANR	5080231	Identifier	l1y		5079673	0					
ANR	5080232	PrimaryExpression	1		5079673	1					
ANR	5080233	Identifier	val		5079673	1					
ANR	5080234	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = val"	133:36:3354:3391	5079673	5	True				
ANR	5080235	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = val"		5079673	0		=			
ANR	5080236	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 )"		5079673	0					
ANR	5080237	Callee	BLK		5079673	0					
ANR	5080238	Identifier	BLK		5079673	0					
ANR	5080239	ArgumentList	ctx -> cur		5079673	1					
ANR	5080240	Argument	ctx -> cur		5079673	0					
ANR	5080241	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080242	Identifier	ctx		5079673	0					
ANR	5080243	Identifier	cur		5079673	1					
ANR	5080244	Argument	l1x + 1		5079673	1					
ANR	5080245	AdditiveExpression	l1x + 1		5079673	0		+			
ANR	5080246	Identifier	l1x		5079673	0					
ANR	5080247	PrimaryExpression	1		5079673	1					
ANR	5080248	Argument	l1y + 1		5079673	2					
ANR	5080249	AdditiveExpression	l1y + 1		5079673	0		+			
ANR	5080250	Identifier	l1y		5079673	0					
ANR	5080251	PrimaryExpression	1		5079673	1					
ANR	5080252	Identifier	val		5079673	1					
ANR	5080253	ElseStatement	else		5079673	0					
ANR	5080254	CompoundStatement		133:39:3330:3330	5079673	0					
ANR	5080255	IfStatement	if ( src >= src_end )		5079673	0					
ANR	5080256	Condition	src >= src_end	137:40:3524:3537	5079673	0	True				
ANR	5080257	RelationalExpression	src >= src_end		5079673	0		>=			
ANR	5080258	Identifier	src		5079673	0					
ANR	5080259	Identifier	src_end		5079673	1					
ANR	5080260	CompoundStatement		135:56:3437:3437	5079673	1					
ANR	5080261	ExpressionStatement	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"	139:40:3583:3633	5079673	0	True				
ANR	5080262	CallExpression	"av_log ( ctx -> avctx , AV_LOG_ERROR , ""Data overrun\\n"" )"		5079673	0					
ANR	5080263	Callee	av_log		5079673	0					
ANR	5080264	Identifier	av_log		5079673	0					
ANR	5080265	ArgumentList	ctx -> avctx		5079673	1					
ANR	5080266	Argument	ctx -> avctx		5079673	0					
ANR	5080267	PtrMemberAccess	ctx -> avctx		5079673	0					
ANR	5080268	Identifier	ctx		5079673	0					
ANR	5080269	Identifier	avctx		5079673	1					
ANR	5080270	Argument	AV_LOG_ERROR		5079673	1					
ANR	5080271	Identifier	AV_LOG_ERROR		5079673	0					
ANR	5080272	Argument	"""Data overrun\\n"""		5079673	2					
ANR	5080273	PrimaryExpression	"""Data overrun\\n"""		5079673	0					
ANR	5080274	ReturnStatement	return AVERROR_INVALIDDATA ;	141:40:3676:3702	5079673	1	True				
ANR	5080275	Identifier	AVERROR_INVALIDDATA		5079673	0					
ANR	5080276	ExpressionStatement	val = * src ++	145:36:3780:3792	5079673	1	True				
ANR	5080277	AssignmentExpression	val = * src ++		5079673	0		=			
ANR	5080278	Identifier	val		5079673	0					
ANR	5080279	UnaryOperationExpression	* src ++		5079673	1					
ANR	5080280	UnaryOperator	*		5079673	0					
ANR	5080281	PostIncDecOperationExpression	src ++		5079673	1					
ANR	5080282	Identifier	src		5079673	0					
ANR	5080283	IncDec	++		5079673	1					
ANR	5080284	ExpressionStatement	mx = val & 0xF	147:36:3831:3845	5079673	2	True				
ANR	5080285	AssignmentExpression	mx = val & 0xF		5079673	0		=			
ANR	5080286	Identifier	mx		5079673	0					
ANR	5080287	BitAndExpression	val & 0xF		5079673	1		&			
ANR	5080288	Identifier	val		5079673	0					
ANR	5080289	PrimaryExpression	0xF		5079673	1					
ANR	5080290	ExpressionStatement	my = val >> 4	149:36:3884:3897	5079673	3	True				
ANR	5080291	AssignmentExpression	my = val >> 4		5079673	0		=			
ANR	5080292	Identifier	my		5079673	0					
ANR	5080293	ShiftExpression	val >> 4		5079673	1		>>			
ANR	5080294	Identifier	val		5079673	0					
ANR	5080295	PrimaryExpression	4		5079673	1					
ANR	5080296	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y ) = BLK ( ctx -> cur , l1x - mx , l1y - my )"	151:36:3936:3995	5079673	4	True				
ANR	5080297	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y ) = BLK ( ctx -> cur , l1x - mx , l1y - my )"		5079673	0		=			
ANR	5080298	CallExpression	"BLK ( ctx -> cur , l1x , l1y )"		5079673	0					
ANR	5080299	Callee	BLK		5079673	0					
ANR	5080300	Identifier	BLK		5079673	0					
ANR	5080301	ArgumentList	ctx -> cur		5079673	1					
ANR	5080302	Argument	ctx -> cur		5079673	0					
ANR	5080303	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080304	Identifier	ctx		5079673	0					
ANR	5080305	Identifier	cur		5079673	1					
ANR	5080306	Argument	l1x		5079673	1					
ANR	5080307	Identifier	l1x		5079673	0					
ANR	5080308	Argument	l1y		5079673	2					
ANR	5080309	Identifier	l1y		5079673	0					
ANR	5080310	CallExpression	"BLK ( ctx -> cur , l1x - mx , l1y - my )"		5079673	1					
ANR	5080311	Callee	BLK		5079673	0					
ANR	5080312	Identifier	BLK		5079673	0					
ANR	5080313	ArgumentList	ctx -> cur		5079673	1					
ANR	5080314	Argument	ctx -> cur		5079673	0					
ANR	5080315	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080316	Identifier	ctx		5079673	0					
ANR	5080317	Identifier	cur		5079673	1					
ANR	5080318	Argument	l1x - mx		5079673	1					
ANR	5080319	AdditiveExpression	l1x - mx		5079673	0		-			
ANR	5080320	Identifier	l1x		5079673	0					
ANR	5080321	Identifier	mx		5079673	1					
ANR	5080322	Argument	l1y - my		5079673	2					
ANR	5080323	AdditiveExpression	l1y - my		5079673	0		-			
ANR	5080324	Identifier	l1y		5079673	0					
ANR	5080325	Identifier	my		5079673	1					
ANR	5080326	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y ) = BLK ( ctx -> cur , l1x + 1 - mx , l1y - my )"	153:36:4034:4142	5079673	5	True				
ANR	5080327	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y ) = BLK ( ctx -> cur , l1x + 1 - mx , l1y - my )"		5079673	0		=			
ANR	5080328	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y )"		5079673	0					
ANR	5080329	Callee	BLK		5079673	0					
ANR	5080330	Identifier	BLK		5079673	0					
ANR	5080331	ArgumentList	ctx -> cur		5079673	1					
ANR	5080332	Argument	ctx -> cur		5079673	0					
ANR	5080333	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080334	Identifier	ctx		5079673	0					
ANR	5080335	Identifier	cur		5079673	1					
ANR	5080336	Argument	l1x + 1		5079673	1					
ANR	5080337	AdditiveExpression	l1x + 1		5079673	0		+			
ANR	5080338	Identifier	l1x		5079673	0					
ANR	5080339	PrimaryExpression	1		5079673	1					
ANR	5080340	Argument	l1y		5079673	2					
ANR	5080341	Identifier	l1y		5079673	0					
ANR	5080342	CallExpression	"BLK ( ctx -> cur , l1x + 1 - mx , l1y - my )"		5079673	1					
ANR	5080343	Callee	BLK		5079673	0					
ANR	5080344	Identifier	BLK		5079673	0					
ANR	5080345	ArgumentList	ctx -> cur		5079673	1					
ANR	5080346	Argument	ctx -> cur		5079673	0					
ANR	5080347	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080348	Identifier	ctx		5079673	0					
ANR	5080349	Identifier	cur		5079673	1					
ANR	5080350	Argument	l1x + 1 - mx		5079673	1					
ANR	5080351	AdditiveExpression	l1x + 1 - mx		5079673	0		+			
ANR	5080352	Identifier	l1x		5079673	0					
ANR	5080353	AdditiveExpression	1 - mx		5079673	1		-			
ANR	5080354	PrimaryExpression	1		5079673	0					
ANR	5080355	Identifier	mx		5079673	1					
ANR	5080356	Argument	l1y - my		5079673	2					
ANR	5080357	AdditiveExpression	l1y - my		5079673	0		-			
ANR	5080358	Identifier	l1y		5079673	0					
ANR	5080359	Identifier	my		5079673	1					
ANR	5080360	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y + 1 ) = BLK ( ctx -> cur , l1x - mx , l1y + 1 - my )"	157:36:4181:4289	5079673	6	True				
ANR	5080361	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y + 1 ) = BLK ( ctx -> cur , l1x - mx , l1y + 1 - my )"		5079673	0		=			
ANR	5080362	CallExpression	"BLK ( ctx -> cur , l1x , l1y + 1 )"		5079673	0					
ANR	5080363	Callee	BLK		5079673	0					
ANR	5080364	Identifier	BLK		5079673	0					
ANR	5080365	ArgumentList	ctx -> cur		5079673	1					
ANR	5080366	Argument	ctx -> cur		5079673	0					
ANR	5080367	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080368	Identifier	ctx		5079673	0					
ANR	5080369	Identifier	cur		5079673	1					
ANR	5080370	Argument	l1x		5079673	1					
ANR	5080371	Identifier	l1x		5079673	0					
ANR	5080372	Argument	l1y + 1		5079673	2					
ANR	5080373	AdditiveExpression	l1y + 1		5079673	0		+			
ANR	5080374	Identifier	l1y		5079673	0					
ANR	5080375	PrimaryExpression	1		5079673	1					
ANR	5080376	CallExpression	"BLK ( ctx -> cur , l1x - mx , l1y + 1 - my )"		5079673	1					
ANR	5080377	Callee	BLK		5079673	0					
ANR	5080378	Identifier	BLK		5079673	0					
ANR	5080379	ArgumentList	ctx -> cur		5079673	1					
ANR	5080380	Argument	ctx -> cur		5079673	0					
ANR	5080381	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080382	Identifier	ctx		5079673	0					
ANR	5080383	Identifier	cur		5079673	1					
ANR	5080384	Argument	l1x - mx		5079673	1					
ANR	5080385	AdditiveExpression	l1x - mx		5079673	0		-			
ANR	5080386	Identifier	l1x		5079673	0					
ANR	5080387	Identifier	mx		5079673	1					
ANR	5080388	Argument	l1y + 1 - my		5079673	2					
ANR	5080389	AdditiveExpression	l1y + 1 - my		5079673	0		+			
ANR	5080390	Identifier	l1y		5079673	0					
ANR	5080391	AdditiveExpression	1 - my		5079673	1		-			
ANR	5080392	PrimaryExpression	1		5079673	0					
ANR	5080393	Identifier	my		5079673	1					
ANR	5080394	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = BLK ( ctx -> cur , l1x + 1 - mx , l1y + 1 - my )"	161:36:4328:4444	5079673	7	True				
ANR	5080395	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = BLK ( ctx -> cur , l1x + 1 - mx , l1y + 1 - my )"		5079673	0		=			
ANR	5080396	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 )"		5079673	0					
ANR	5080397	Callee	BLK		5079673	0					
ANR	5080398	Identifier	BLK		5079673	0					
ANR	5080399	ArgumentList	ctx -> cur		5079673	1					
ANR	5080400	Argument	ctx -> cur		5079673	0					
ANR	5080401	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080402	Identifier	ctx		5079673	0					
ANR	5080403	Identifier	cur		5079673	1					
ANR	5080404	Argument	l1x + 1		5079673	1					
ANR	5080405	AdditiveExpression	l1x + 1		5079673	0		+			
ANR	5080406	Identifier	l1x		5079673	0					
ANR	5080407	PrimaryExpression	1		5079673	1					
ANR	5080408	Argument	l1y + 1		5079673	2					
ANR	5080409	AdditiveExpression	l1y + 1		5079673	0		+			
ANR	5080410	Identifier	l1y		5079673	0					
ANR	5080411	PrimaryExpression	1		5079673	1					
ANR	5080412	CallExpression	"BLK ( ctx -> cur , l1x + 1 - mx , l1y + 1 - my )"		5079673	1					
ANR	5080413	Callee	BLK		5079673	0					
ANR	5080414	Identifier	BLK		5079673	0					
ANR	5080415	ArgumentList	ctx -> cur		5079673	1					
ANR	5080416	Argument	ctx -> cur		5079673	0					
ANR	5080417	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080418	Identifier	ctx		5079673	0					
ANR	5080419	Identifier	cur		5079673	1					
ANR	5080420	Argument	l1x + 1 - mx		5079673	1					
ANR	5080421	AdditiveExpression	l1x + 1 - mx		5079673	0		+			
ANR	5080422	Identifier	l1x		5079673	0					
ANR	5080423	AdditiveExpression	1 - mx		5079673	1		-			
ANR	5080424	PrimaryExpression	1		5079673	0					
ANR	5080425	Identifier	mx		5079673	1					
ANR	5080426	Argument	l1y + 1 - my		5079673	2					
ANR	5080427	AdditiveExpression	l1y + 1 - my		5079673	0		+			
ANR	5080428	Identifier	l1y		5079673	0					
ANR	5080429	AdditiveExpression	1 - my		5079673	1		-			
ANR	5080430	PrimaryExpression	1		5079673	0					
ANR	5080431	Identifier	my		5079673	1					
ANR	5080432	ElseStatement	else		5079673	0					
ANR	5080433	CompoundStatement		165:35:4414:4414	5079673	0					
ANR	5080434	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y ) = * src ++"	169:32:4580:4612	5079673	0	True				
ANR	5080435	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y ) = * src ++"		5079673	0		=			
ANR	5080436	CallExpression	"BLK ( ctx -> cur , l1x , l1y )"		5079673	0					
ANR	5080437	Callee	BLK		5079673	0					
ANR	5080438	Identifier	BLK		5079673	0					
ANR	5080439	ArgumentList	ctx -> cur		5079673	1					
ANR	5080440	Argument	ctx -> cur		5079673	0					
ANR	5080441	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080442	Identifier	ctx		5079673	0					
ANR	5080443	Identifier	cur		5079673	1					
ANR	5080444	Argument	l1x		5079673	1					
ANR	5080445	Identifier	l1x		5079673	0					
ANR	5080446	Argument	l1y		5079673	2					
ANR	5080447	Identifier	l1y		5079673	0					
ANR	5080448	UnaryOperationExpression	* src ++		5079673	1					
ANR	5080449	UnaryOperator	*		5079673	0					
ANR	5080450	PostIncDecOperationExpression	src ++		5079673	1					
ANR	5080451	Identifier	src		5079673	0					
ANR	5080452	IncDec	++		5079673	1					
ANR	5080453	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y ) = * src ++"	171:32:4647:4683	5079673	1	True				
ANR	5080454	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y ) = * src ++"		5079673	0		=			
ANR	5080455	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y )"		5079673	0					
ANR	5080456	Callee	BLK		5079673	0					
ANR	5080457	Identifier	BLK		5079673	0					
ANR	5080458	ArgumentList	ctx -> cur		5079673	1					
ANR	5080459	Argument	ctx -> cur		5079673	0					
ANR	5080460	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080461	Identifier	ctx		5079673	0					
ANR	5080462	Identifier	cur		5079673	1					
ANR	5080463	Argument	l1x + 1		5079673	1					
ANR	5080464	AdditiveExpression	l1x + 1		5079673	0		+			
ANR	5080465	Identifier	l1x		5079673	0					
ANR	5080466	PrimaryExpression	1		5079673	1					
ANR	5080467	Argument	l1y		5079673	2					
ANR	5080468	Identifier	l1y		5079673	0					
ANR	5080469	UnaryOperationExpression	* src ++		5079673	1					
ANR	5080470	UnaryOperator	*		5079673	0					
ANR	5080471	PostIncDecOperationExpression	src ++		5079673	1					
ANR	5080472	Identifier	src		5079673	0					
ANR	5080473	IncDec	++		5079673	1					
ANR	5080474	ExpressionStatement	"BLK ( ctx -> cur , l1x , l1y + 1 ) = * src ++"	173:32:4718:4754	5079673	2	True				
ANR	5080475	AssignmentExpression	"BLK ( ctx -> cur , l1x , l1y + 1 ) = * src ++"		5079673	0		=			
ANR	5080476	CallExpression	"BLK ( ctx -> cur , l1x , l1y + 1 )"		5079673	0					
ANR	5080477	Callee	BLK		5079673	0					
ANR	5080478	Identifier	BLK		5079673	0					
ANR	5080479	ArgumentList	ctx -> cur		5079673	1					
ANR	5080480	Argument	ctx -> cur		5079673	0					
ANR	5080481	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080482	Identifier	ctx		5079673	0					
ANR	5080483	Identifier	cur		5079673	1					
ANR	5080484	Argument	l1x		5079673	1					
ANR	5080485	Identifier	l1x		5079673	0					
ANR	5080486	Argument	l1y + 1		5079673	2					
ANR	5080487	AdditiveExpression	l1y + 1		5079673	0		+			
ANR	5080488	Identifier	l1y		5079673	0					
ANR	5080489	PrimaryExpression	1		5079673	1					
ANR	5080490	UnaryOperationExpression	* src ++		5079673	1					
ANR	5080491	UnaryOperator	*		5079673	0					
ANR	5080492	PostIncDecOperationExpression	src ++		5079673	1					
ANR	5080493	Identifier	src		5079673	0					
ANR	5080494	IncDec	++		5079673	1					
ANR	5080495	ExpressionStatement	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = * src ++"	175:32:4789:4829	5079673	3	True				
ANR	5080496	AssignmentExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 ) = * src ++"		5079673	0		=			
ANR	5080497	CallExpression	"BLK ( ctx -> cur , l1x + 1 , l1y + 1 )"		5079673	0					
ANR	5080498	Callee	BLK		5079673	0					
ANR	5080499	Identifier	BLK		5079673	0					
ANR	5080500	ArgumentList	ctx -> cur		5079673	1					
ANR	5080501	Argument	ctx -> cur		5079673	0					
ANR	5080502	PtrMemberAccess	ctx -> cur		5079673	0					
ANR	5080503	Identifier	ctx		5079673	0					
ANR	5080504	Identifier	cur		5079673	1					
ANR	5080505	Argument	l1x + 1		5079673	1					
ANR	5080506	AdditiveExpression	l1x + 1		5079673	0		+			
ANR	5080507	Identifier	l1x		5079673	0					
ANR	5080508	PrimaryExpression	1		5079673	1					
ANR	5080509	Argument	l1y + 1		5079673	2					
ANR	5080510	AdditiveExpression	l1y + 1		5079673	0		+			
ANR	5080511	Identifier	l1y		5079673	0					
ANR	5080512	PrimaryExpression	1		5079673	1					
ANR	5080513	UnaryOperationExpression	* src ++		5079673	1					
ANR	5080514	UnaryOperator	*		5079673	0					
ANR	5080515	PostIncDecOperationExpression	src ++		5079673	1					
ANR	5080516	Identifier	src		5079673	0					
ANR	5080517	IncDec	++		5079673	1					
ANR	5080518	ReturnStatement	return 0 ;	191:4:4964:4972	5079673	9	True				
ANR	5080519	PrimaryExpression	0		5079673	0					
ANR	5080520	ReturnType	static int		5079673	1					
ANR	5080521	Identifier	kmvc_decode_intra_8x8		5079673	2					
ANR	5080522	ParameterList	"KmvcContext * ctx , const uint8_t * src , int src_size , int w , int h"		5079673	3					
ANR	5080523	Parameter	KmvcContext * ctx	1:33:33:49	5079673	0	True				
ANR	5080524	ParameterType	KmvcContext *		5079673	0					
ANR	5080525	Identifier	ctx		5079673	1					
ANR	5080526	Parameter	const uint8_t * src	1:52:52:70	5079673	1	True				
ANR	5080527	ParameterType	const uint8_t *		5079673	0					
ANR	5080528	Identifier	src		5079673	1					
ANR	5080529	Parameter	int src_size	1:73:73:84	5079673	2	True				
ANR	5080530	ParameterType	int		5079673	0					
ANR	5080531	Identifier	src_size		5079673	1					
ANR	5080532	Parameter	int w	1:87:87:91	5079673	3	True				
ANR	5080533	ParameterType	int		5079673	0					
ANR	5080534	Identifier	w		5079673	1					
ANR	5080535	Parameter	int h	1:94:94:98	5079673	4	True				
ANR	5080536	ParameterType	int		5079673	0					
ANR	5080537	Identifier	h		5079673	1					
ANR	5080538	CFGEntryNode	ENTRY		5079673		True				
ANR	5080539	CFGExitNode	EXIT		5079673		True				
ANR	5080540	Symbol	bb		5079673						
ANR	5080541	Symbol	BLK		5079673						
ANR	5080542	Symbol	l1x		5079673						
ANR	5080543	Symbol	src_end		5079673						
ANR	5080544	Symbol	l1y		5079673						
ANR	5080545	Symbol	bx		5079673						
ANR	5080546	Symbol	by		5079673						
ANR	5080547	Symbol	val		5079673						
ANR	5080548	Symbol	res		5079673						
ANR	5080549	Symbol	AV_LOG_ERROR		5079673						
ANR	5080550	Symbol	src		5079673						
ANR	5080551	Symbol	ctx		5079673						
ANR	5080552	Symbol	h		5079673						
ANR	5080553	Symbol	i		5079673						
ANR	5080554	Symbol	j		5079673						
ANR	5080555	Symbol	mx		5079673						
ANR	5080556	Symbol	ctx -> cur		5079673						
ANR	5080557	Symbol	my		5079673						
ANR	5080558	Symbol	* ctx		5079673						
ANR	5080559	Symbol	src_size		5079673						
ANR	5080560	Symbol	ctx -> avctx		5079673						
ANR	5080561	Symbol	l0y		5079673						
ANR	5080562	Symbol	l0x		5079673						
ANR	5080563	Symbol	w		5079673						
ANR	5080564	Symbol	* src ++		5079673						
ANR	5080565	Symbol	AVERROR_INVALIDDATA		5079673						
