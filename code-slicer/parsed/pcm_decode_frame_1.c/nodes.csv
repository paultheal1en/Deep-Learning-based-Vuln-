command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6481345	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pcm_decode_frame_1.c								
ANR	6481346	Function	pcm_decode_frame	1:0:0:7191							
ANR	6481347	FunctionDef	"pcm_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		6481346	0					
ANR	6481348	CompoundStatement		7:0:155:7191	6481346	0					
ANR	6481349	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:162:194	6481346	0	True				
ANR	6481350	IdentifierDecl	* buf = avpkt -> data		6481346	0					
ANR	6481351	IdentifierDeclType	const uint8_t *		6481346	0					
ANR	6481352	Identifier	buf		6481346	1					
ANR	6481353	AssignmentExpression	* buf = avpkt -> data		6481346	2		=			
ANR	6481354	Identifier	buf		6481346	0					
ANR	6481355	PtrMemberAccess	avpkt -> data		6481346	1					
ANR	6481356	Identifier	avpkt		6481346	0					
ANR	6481357	Identifier	data		6481346	1					
ANR	6481358	IdentifierDeclStatement	int buf_size = avpkt -> size ;	11:4:201:227	6481346	1	True				
ANR	6481359	IdentifierDecl	buf_size = avpkt -> size		6481346	0					
ANR	6481360	IdentifierDeclType	int		6481346	0					
ANR	6481361	Identifier	buf_size		6481346	1					
ANR	6481362	AssignmentExpression	buf_size = avpkt -> size		6481346	2		=			
ANR	6481363	Identifier	buf_size		6481346	0					
ANR	6481364	PtrMemberAccess	avpkt -> size		6481346	1					
ANR	6481365	Identifier	avpkt		6481346	0					
ANR	6481366	Identifier	size		6481346	1					
ANR	6481367	IdentifierDeclStatement	PCMDecode * s = avctx -> priv_data ;	13:4:234:265	6481346	2	True				
ANR	6481368	IdentifierDecl	* s = avctx -> priv_data		6481346	0					
ANR	6481369	IdentifierDeclType	PCMDecode *		6481346	0					
ANR	6481370	Identifier	s		6481346	1					
ANR	6481371	AssignmentExpression	* s = avctx -> priv_data		6481346	2		=			
ANR	6481372	Identifier	s		6481346	0					
ANR	6481373	PtrMemberAccess	avctx -> priv_data		6481346	1					
ANR	6481374	Identifier	avctx		6481346	0					
ANR	6481375	Identifier	priv_data		6481346	1					
ANR	6481376	IdentifierDeclStatement	"int sample_size , c , n , i ;"	15:4:272:296	6481346	3	True				
ANR	6481377	IdentifierDecl	sample_size		6481346	0					
ANR	6481378	IdentifierDeclType	int		6481346	0					
ANR	6481379	Identifier	sample_size		6481346	1					
ANR	6481380	IdentifierDecl	c		6481346	1					
ANR	6481381	IdentifierDeclType	int		6481346	0					
ANR	6481382	Identifier	c		6481346	1					
ANR	6481383	IdentifierDecl	n		6481346	2					
ANR	6481384	IdentifierDeclType	int		6481346	0					
ANR	6481385	Identifier	n		6481346	1					
ANR	6481386	IdentifierDecl	i		6481346	3					
ANR	6481387	IdentifierDeclType	int		6481346	0					
ANR	6481388	Identifier	i		6481346	1					
ANR	6481389	IdentifierDeclStatement	short * samples ;	17:4:303:317	6481346	4	True				
ANR	6481390	IdentifierDecl	* samples		6481346	0					
ANR	6481391	IdentifierDeclType	short *		6481346	0					
ANR	6481392	Identifier	samples		6481346	1					
ANR	6481393	IdentifierDeclStatement	"const uint8_t * src , * src8 , * src2 [ MAX_CHANNELS ] ;"	19:4:324:370	6481346	5	True				
ANR	6481394	IdentifierDecl	* src		6481346	0					
ANR	6481395	IdentifierDeclType	const uint8_t *		6481346	0					
ANR	6481396	Identifier	src		6481346	1					
ANR	6481397	IdentifierDecl	* src8		6481346	1					
ANR	6481398	IdentifierDeclType	const uint8_t *		6481346	0					
ANR	6481399	Identifier	src8		6481346	1					
ANR	6481400	IdentifierDecl	* src2 [ MAX_CHANNELS ]		6481346	2					
ANR	6481401	IdentifierDeclType	const uint8_t * [ MAX_CHANNELS ]		6481346	0					
ANR	6481402	Identifier	src2		6481346	1					
ANR	6481403	Identifier	MAX_CHANNELS		6481346	2					
ANR	6481404	IdentifierDeclStatement	uint8_t * dstu8 ;	21:4:377:391	6481346	6	True				
ANR	6481405	IdentifierDecl	* dstu8		6481346	0					
ANR	6481406	IdentifierDeclType	uint8_t *		6481346	0					
ANR	6481407	Identifier	dstu8		6481346	1					
ANR	6481408	IdentifierDeclStatement	int16_t * dst_int16_t ;	23:4:398:418	6481346	7	True				
ANR	6481409	IdentifierDecl	* dst_int16_t		6481346	0					
ANR	6481410	IdentifierDeclType	int16_t *		6481346	0					
ANR	6481411	Identifier	dst_int16_t		6481346	1					
ANR	6481412	IdentifierDeclStatement	int32_t * dst_int32_t ;	25:4:425:445	6481346	8	True				
ANR	6481413	IdentifierDecl	* dst_int32_t		6481346	0					
ANR	6481414	IdentifierDeclType	int32_t *		6481346	0					
ANR	6481415	Identifier	dst_int32_t		6481346	1					
ANR	6481416	IdentifierDeclStatement	int64_t * dst_int64_t ;	27:4:452:472	6481346	9	True				
ANR	6481417	IdentifierDecl	* dst_int64_t		6481346	0					
ANR	6481418	IdentifierDeclType	int64_t *		6481346	0					
ANR	6481419	Identifier	dst_int64_t		6481346	1					
ANR	6481420	IdentifierDeclStatement	uint16_t * dst_uint16_t ;	29:4:479:501	6481346	10	True				
ANR	6481421	IdentifierDecl	* dst_uint16_t		6481346	0					
ANR	6481422	IdentifierDeclType	uint16_t *		6481346	0					
ANR	6481423	Identifier	dst_uint16_t		6481346	1					
ANR	6481424	IdentifierDeclStatement	uint32_t * dst_uint32_t ;	31:4:508:530	6481346	11	True				
ANR	6481425	IdentifierDecl	* dst_uint32_t		6481346	0					
ANR	6481426	IdentifierDeclType	uint32_t *		6481346	0					
ANR	6481427	Identifier	dst_uint32_t		6481346	1					
ANR	6481428	ExpressionStatement	samples = data	35:4:539:553	6481346	12	True				
ANR	6481429	AssignmentExpression	samples = data		6481346	0		=			
ANR	6481430	Identifier	samples		6481346	0					
ANR	6481431	Identifier	data		6481346	1					
ANR	6481432	ExpressionStatement	src = buf	37:4:560:569	6481346	13	True				
ANR	6481433	AssignmentExpression	src = buf		6481346	0		=			
ANR	6481434	Identifier	src		6481346	0					
ANR	6481435	Identifier	buf		6481346	1					
ANR	6481436	IfStatement	if ( avctx -> sample_fmt != avctx -> codec -> sample_fmts [ 0 ] )		6481346	14					
ANR	6481437	Condition	avctx -> sample_fmt != avctx -> codec -> sample_fmts [ 0 ]	41:8:582:628	6481346	0	True				
ANR	6481438	EqualityExpression	avctx -> sample_fmt != avctx -> codec -> sample_fmts [ 0 ]		6481346	0		!=			
ANR	6481439	PtrMemberAccess	avctx -> sample_fmt		6481346	0					
ANR	6481440	Identifier	avctx		6481346	0					
ANR	6481441	Identifier	sample_fmt		6481346	1					
ANR	6481442	ArrayIndexing	avctx -> codec -> sample_fmts [ 0 ]		6481346	1					
ANR	6481443	PtrMemberAccess	avctx -> codec -> sample_fmts		6481346	0					
ANR	6481444	PtrMemberAccess	avctx -> codec		6481346	0					
ANR	6481445	Identifier	avctx		6481346	0					
ANR	6481446	Identifier	codec		6481346	1					
ANR	6481447	Identifier	sample_fmts		6481346	1					
ANR	6481448	PrimaryExpression	0		6481346	1					
ANR	6481449	CompoundStatement		35:57:475:475	6481346	1					
ANR	6481450	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid sample_fmt\\n"" )"	43:8:642:693	6481346	0	True				
ANR	6481451	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid sample_fmt\\n"" )"		6481346	0					
ANR	6481452	Callee	av_log		6481346	0					
ANR	6481453	Identifier	av_log		6481346	0					
ANR	6481454	ArgumentList	avctx		6481346	1					
ANR	6481455	Argument	avctx		6481346	0					
ANR	6481456	Identifier	avctx		6481346	0					
ANR	6481457	Argument	AV_LOG_ERROR		6481346	1					
ANR	6481458	Identifier	AV_LOG_ERROR		6481346	0					
ANR	6481459	Argument	"""invalid sample_fmt\\n"""		6481346	2					
ANR	6481460	PrimaryExpression	"""invalid sample_fmt\\n"""		6481346	0					
ANR	6481461	ReturnStatement	return - 1 ;	45:8:704:713	6481346	1	True				
ANR	6481462	UnaryOperationExpression	- 1		6481346	0					
ANR	6481463	UnaryOperator	-		6481346	0					
ANR	6481464	PrimaryExpression	1		6481346	1					
ANR	6481465	IfStatement	if ( avctx -> channels <= 0 || avctx -> channels > MAX_CHANNELS )		6481346	15					
ANR	6481466	Condition	avctx -> channels <= 0 || avctx -> channels > MAX_CHANNELS	51:7:732:785	6481346	0	True				
ANR	6481467	OrExpression	avctx -> channels <= 0 || avctx -> channels > MAX_CHANNELS		6481346	0		||			
ANR	6481468	RelationalExpression	avctx -> channels <= 0		6481346	0		<=			
ANR	6481469	PtrMemberAccess	avctx -> channels		6481346	0					
ANR	6481470	Identifier	avctx		6481346	0					
ANR	6481471	Identifier	channels		6481346	1					
ANR	6481472	PrimaryExpression	0		6481346	1					
ANR	6481473	RelationalExpression	avctx -> channels > MAX_CHANNELS		6481346	1		>			
ANR	6481474	PtrMemberAccess	avctx -> channels		6481346	0					
ANR	6481475	Identifier	avctx		6481346	0					
ANR	6481476	Identifier	channels		6481346	1					
ANR	6481477	Identifier	MAX_CHANNELS		6481346	1					
ANR	6481478	CompoundStatement		45:62:631:631	6481346	1					
ANR	6481479	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""PCM channels out of bounds\\n"" )"	53:8:798:857	6481346	0	True				
ANR	6481480	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""PCM channels out of bounds\\n"" )"		6481346	0					
ANR	6481481	Callee	av_log		6481346	0					
ANR	6481482	Identifier	av_log		6481346	0					
ANR	6481483	ArgumentList	avctx		6481346	1					
ANR	6481484	Argument	avctx		6481346	0					
ANR	6481485	Identifier	avctx		6481346	0					
ANR	6481486	Argument	AV_LOG_ERROR		6481346	1					
ANR	6481487	Identifier	AV_LOG_ERROR		6481346	0					
ANR	6481488	Argument	"""PCM channels out of bounds\\n"""		6481346	2					
ANR	6481489	PrimaryExpression	"""PCM channels out of bounds\\n"""		6481346	0					
ANR	6481490	ReturnStatement	return - 1 ;	55:8:868:877	6481346	1	True				
ANR	6481491	UnaryOperationExpression	- 1		6481346	0					
ANR	6481492	UnaryOperator	-		6481346	0					
ANR	6481493	PrimaryExpression	1		6481346	1					
ANR	6481494	ExpressionStatement	sample_size = av_get_bits_per_sample ( avctx -> codec_id ) / 8	61:4:893:948	6481346	16	True				
ANR	6481495	AssignmentExpression	sample_size = av_get_bits_per_sample ( avctx -> codec_id ) / 8		6481346	0		=			
ANR	6481496	Identifier	sample_size		6481346	0					
ANR	6481497	MultiplicativeExpression	av_get_bits_per_sample ( avctx -> codec_id ) / 8		6481346	1		/			
ANR	6481498	CallExpression	av_get_bits_per_sample ( avctx -> codec_id )		6481346	0					
ANR	6481499	Callee	av_get_bits_per_sample		6481346	0					
ANR	6481500	Identifier	av_get_bits_per_sample		6481346	0					
ANR	6481501	ArgumentList	avctx -> codec_id		6481346	1					
ANR	6481502	Argument	avctx -> codec_id		6481346	0					
ANR	6481503	PtrMemberAccess	avctx -> codec_id		6481346	0					
ANR	6481504	Identifier	avctx		6481346	0					
ANR	6481505	Identifier	codec_id		6481346	1					
ANR	6481506	PrimaryExpression	8		6481346	1					
ANR	6481507	IfStatement	if ( CODEC_ID_PCM_DVD == avctx -> codec_id )		6481346	17					
ANR	6481508	Condition	CODEC_ID_PCM_DVD == avctx -> codec_id	67:8:1026:1060	6481346	0	True				
ANR	6481509	EqualityExpression	CODEC_ID_PCM_DVD == avctx -> codec_id		6481346	0		==			
ANR	6481510	Identifier	CODEC_ID_PCM_DVD		6481346	0					
ANR	6481511	PtrMemberAccess	avctx -> codec_id		6481346	1					
ANR	6481512	Identifier	avctx		6481346	0					
ANR	6481513	Identifier	codec_id		6481346	1					
ANR	6481514	ExpressionStatement	sample_size = avctx -> bits_per_coded_sample * 2 / 8	71:8:1134:1184	6481346	1	True				
ANR	6481515	AssignmentExpression	sample_size = avctx -> bits_per_coded_sample * 2 / 8		6481346	0		=			
ANR	6481516	Identifier	sample_size		6481346	0					
ANR	6481517	MultiplicativeExpression	avctx -> bits_per_coded_sample * 2 / 8		6481346	1		*			
ANR	6481518	PtrMemberAccess	avctx -> bits_per_coded_sample		6481346	0					
ANR	6481519	Identifier	avctx		6481346	0					
ANR	6481520	Identifier	bits_per_coded_sample		6481346	1					
ANR	6481521	MultiplicativeExpression	2 / 8		6481346	1		/			
ANR	6481522	PrimaryExpression	2		6481346	0					
ANR	6481523	PrimaryExpression	8		6481346	1					
ANR	6481524	ElseStatement	else		6481346	0					
ANR	6481525	IfStatement	if ( avctx -> codec_id == CODEC_ID_PCM_LXF )		6481346	0					
ANR	6481526	Condition	avctx -> codec_id == CODEC_ID_PCM_LXF	73:13:1200:1234	6481346	0	True				
ANR	6481527	EqualityExpression	avctx -> codec_id == CODEC_ID_PCM_LXF		6481346	0		==			
ANR	6481528	PtrMemberAccess	avctx -> codec_id		6481346	0					
ANR	6481529	Identifier	avctx		6481346	0					
ANR	6481530	Identifier	codec_id		6481346	1					
ANR	6481531	Identifier	CODEC_ID_PCM_LXF		6481346	1					
ANR	6481532	ExpressionStatement	sample_size = 5	77:8:1306:1321	6481346	1	True				
ANR	6481533	AssignmentExpression	sample_size = 5		6481346	0		=			
ANR	6481534	Identifier	sample_size		6481346	0					
ANR	6481535	PrimaryExpression	5		6481346	1					
ANR	6481536	IfStatement	if ( sample_size == 0 )		6481346	18					
ANR	6481537	Condition	sample_size == 0	81:8:1334:1349	6481346	0	True				
ANR	6481538	EqualityExpression	sample_size == 0		6481346	0		==			
ANR	6481539	Identifier	sample_size		6481346	0					
ANR	6481540	PrimaryExpression	0		6481346	1					
ANR	6481541	CompoundStatement		75:26:1196:1196	6481346	1					
ANR	6481542	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid sample_size\\n"" )"	83:8:1363:1415	6481346	0	True				
ANR	6481543	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid sample_size\\n"" )"		6481346	0					
ANR	6481544	Callee	av_log		6481346	0					
ANR	6481545	Identifier	av_log		6481346	0					
ANR	6481546	ArgumentList	avctx		6481346	1					
ANR	6481547	Argument	avctx		6481346	0					
ANR	6481548	Identifier	avctx		6481346	0					
ANR	6481549	Argument	AV_LOG_ERROR		6481346	1					
ANR	6481550	Identifier	AV_LOG_ERROR		6481346	0					
ANR	6481551	Argument	"""Invalid sample_size\\n"""		6481346	2					
ANR	6481552	PrimaryExpression	"""Invalid sample_size\\n"""		6481346	0					
ANR	6481553	ReturnStatement	return AVERROR ( EINVAL ) ;	85:8:1426:1448	6481346	1	True				
ANR	6481554	CallExpression	AVERROR ( EINVAL )		6481346	0					
ANR	6481555	Callee	AVERROR		6481346	0					
ANR	6481556	Identifier	AVERROR		6481346	0					
ANR	6481557	ArgumentList	EINVAL		6481346	1					
ANR	6481558	Argument	EINVAL		6481346	0					
ANR	6481559	Identifier	EINVAL		6481346	0					
ANR	6481560	ExpressionStatement	n = avctx -> channels * sample_size	91:4:1464:1497	6481346	19	True				
ANR	6481561	AssignmentExpression	n = avctx -> channels * sample_size		6481346	0		=			
ANR	6481562	Identifier	n		6481346	0					
ANR	6481563	MultiplicativeExpression	avctx -> channels * sample_size		6481346	1		*			
ANR	6481564	PtrMemberAccess	avctx -> channels		6481346	0					
ANR	6481565	Identifier	avctx		6481346	0					
ANR	6481566	Identifier	channels		6481346	1					
ANR	6481567	Identifier	sample_size		6481346	1					
ANR	6481568	IfStatement	if ( n && buf_size % n )		6481346	20					
ANR	6481569	Condition	n && buf_size % n	95:7:1509:1525	6481346	0	True				
ANR	6481570	AndExpression	n && buf_size % n		6481346	0		&&			
ANR	6481571	Identifier	n		6481346	0					
ANR	6481572	MultiplicativeExpression	buf_size % n		6481346	1		%			
ANR	6481573	Identifier	buf_size		6481346	0					
ANR	6481574	Identifier	n		6481346	1					
ANR	6481575	CompoundStatement		89:25:1371:1371	6481346	1					
ANR	6481576	IfStatement	if ( buf_size < n )		6481346	0					
ANR	6481577	Condition	buf_size < n	97:12:1542:1553	6481346	0	True				
ANR	6481578	RelationalExpression	buf_size < n		6481346	0		<			
ANR	6481579	Identifier	buf_size		6481346	0					
ANR	6481580	Identifier	n		6481346	1					
ANR	6481581	CompoundStatement		91:26:1400:1400	6481346	1					
ANR	6481582	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid PCM packet\\n"" )"	99:12:1571:1622	6481346	0	True				
ANR	6481583	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid PCM packet\\n"" )"		6481346	0					
ANR	6481584	Callee	av_log		6481346	0					
ANR	6481585	Identifier	av_log		6481346	0					
ANR	6481586	ArgumentList	avctx		6481346	1					
ANR	6481587	Argument	avctx		6481346	0					
ANR	6481588	Identifier	avctx		6481346	0					
ANR	6481589	Argument	AV_LOG_ERROR		6481346	1					
ANR	6481590	Identifier	AV_LOG_ERROR		6481346	0					
ANR	6481591	Argument	"""invalid PCM packet\\n"""		6481346	2					
ANR	6481592	PrimaryExpression	"""invalid PCM packet\\n"""		6481346	0					
ANR	6481593	ReturnStatement	return - 1 ;	101:12:1637:1646	6481346	1	True				
ANR	6481594	UnaryOperationExpression	- 1		6481346	0					
ANR	6481595	UnaryOperator	-		6481346	0					
ANR	6481596	PrimaryExpression	1		6481346	1					
ANR	6481597	ElseStatement	else		6481346	0					
ANR	6481598	ExpressionStatement	buf_size -= buf_size % n	105:12:1676:1700	6481346	0	True				
ANR	6481599	AssignmentExpression	buf_size -= buf_size % n		6481346	0		-=			
ANR	6481600	Identifier	buf_size		6481346	0					
ANR	6481601	MultiplicativeExpression	buf_size % n		6481346	1		%			
ANR	6481602	Identifier	buf_size		6481346	0					
ANR	6481603	Identifier	n		6481346	1					
ANR	6481604	ExpressionStatement	"buf_size = FFMIN ( buf_size , * data_size / 2 )"	111:4:1716:1755	6481346	21	True				
ANR	6481605	AssignmentExpression	"buf_size = FFMIN ( buf_size , * data_size / 2 )"		6481346	0		=			
ANR	6481606	Identifier	buf_size		6481346	0					
ANR	6481607	CallExpression	"FFMIN ( buf_size , * data_size / 2 )"		6481346	1					
ANR	6481608	Callee	FFMIN		6481346	0					
ANR	6481609	Identifier	FFMIN		6481346	0					
ANR	6481610	ArgumentList	buf_size		6481346	1					
ANR	6481611	Argument	buf_size		6481346	0					
ANR	6481612	Identifier	buf_size		6481346	0					
ANR	6481613	Argument	* data_size / 2		6481346	1					
ANR	6481614	MultiplicativeExpression	* data_size / 2		6481346	0		/			
ANR	6481615	UnaryOperationExpression	* data_size		6481346	0					
ANR	6481616	UnaryOperator	*		6481346	0					
ANR	6481617	Identifier	data_size		6481346	1					
ANR	6481618	PrimaryExpression	2		6481346	1					
ANR	6481619	ExpressionStatement	* data_size = 0	113:4:1762:1774	6481346	22	True				
ANR	6481620	AssignmentExpression	* data_size = 0		6481346	0		=			
ANR	6481621	UnaryOperationExpression	* data_size		6481346	0					
ANR	6481622	UnaryOperator	*		6481346	0					
ANR	6481623	Identifier	data_size		6481346	1					
ANR	6481624	PrimaryExpression	0		6481346	1					
ANR	6481625	ExpressionStatement	n = buf_size / sample_size	117:4:1783:1807	6481346	23	True				
ANR	6481626	AssignmentExpression	n = buf_size / sample_size		6481346	0		=			
ANR	6481627	Identifier	n		6481346	0					
ANR	6481628	MultiplicativeExpression	buf_size / sample_size		6481346	1		/			
ANR	6481629	Identifier	buf_size		6481346	0					
ANR	6481630	Identifier	sample_size		6481346	1					
ANR	6481631	SwitchStatement	switch ( avctx -> codec -> id )		6481346	24					
ANR	6481632	Condition	avctx -> codec -> id	121:11:1823:1838	6481346	0	True				
ANR	6481633	PtrMemberAccess	avctx -> codec -> id		6481346	0					
ANR	6481634	PtrMemberAccess	avctx -> codec		6481346	0					
ANR	6481635	Identifier	avctx		6481346	0					
ANR	6481636	Identifier	codec		6481346	1					
ANR	6481637	Identifier	id		6481346	1					
ANR	6481638	CompoundStatement		115:29:1685:1685	6481346	1					
ANR	6481639	Label	case CODEC_ID_PCM_U32LE :	123:4:1848:1871	6481346	0	True				
ANR	6481640	Identifier	CODEC_ID_PCM_U32LE		6481346	0					
ANR	6481641	Statement	DECODE	125:8:1882:1887	6481346	1	True				
ANR	6481642	Statement	(	125:14:1888:1888	6481346	2	True				
ANR	6481643	Statement	uint32_t	125:15:1889:1896	6481346	3	True				
ANR	6481644	Statement	","	125:23:1897:1897	6481346	4	True				
ANR	6481645	Statement	le32	125:25:1899:1902	6481346	5	True				
ANR	6481646	Statement	","	125:29:1903:1903	6481346	6	True				
ANR	6481647	Statement	src	125:31:1905:1907	6481346	7	True				
ANR	6481648	Statement	","	125:34:1908:1908	6481346	8	True				
ANR	6481649	Statement	samples	125:36:1910:1916	6481346	9	True				
ANR	6481650	Statement	","	125:43:1917:1917	6481346	10	True				
ANR	6481651	Statement	n	125:45:1919:1919	6481346	11	True				
ANR	6481652	Statement	","	125:46:1920:1920	6481346	12	True				
ANR	6481653	Statement	0	125:48:1922:1922	6481346	13	True				
ANR	6481654	Statement	","	125:49:1923:1923	6481346	14	True				
ANR	6481655	Statement	0x80000000	125:51:1925:1934	6481346	15	True				
ANR	6481656	Statement	)	125:61:1935:1935	6481346	16	True				
ANR	6481657	BreakStatement	break ;	127:8:1946:1951	6481346	17	True				
ANR	6481658	Label	case CODEC_ID_PCM_U32BE :	129:4:1958:1981	6481346	18	True				
ANR	6481659	Identifier	CODEC_ID_PCM_U32BE		6481346	0					
ANR	6481660	Statement	DECODE	131:8:1992:1997	6481346	19	True				
ANR	6481661	Statement	(	131:14:1998:1998	6481346	20	True				
ANR	6481662	Statement	uint32_t	131:15:1999:2006	6481346	21	True				
ANR	6481663	Statement	","	131:23:2007:2007	6481346	22	True				
ANR	6481664	Statement	be32	131:25:2009:2012	6481346	23	True				
ANR	6481665	Statement	","	131:29:2013:2013	6481346	24	True				
ANR	6481666	Statement	src	131:31:2015:2017	6481346	25	True				
ANR	6481667	Statement	","	131:34:2018:2018	6481346	26	True				
ANR	6481668	Statement	samples	131:36:2020:2026	6481346	27	True				
ANR	6481669	Statement	","	131:43:2027:2027	6481346	28	True				
ANR	6481670	Statement	n	131:45:2029:2029	6481346	29	True				
ANR	6481671	Statement	","	131:46:2030:2030	6481346	30	True				
ANR	6481672	Statement	0	131:48:2032:2032	6481346	31	True				
ANR	6481673	Statement	","	131:49:2033:2033	6481346	32	True				
ANR	6481674	Statement	0x80000000	131:51:2035:2044	6481346	33	True				
ANR	6481675	Statement	)	131:61:2045:2045	6481346	34	True				
ANR	6481676	BreakStatement	break ;	133:8:2056:2061	6481346	35	True				
ANR	6481677	Label	case CODEC_ID_PCM_S24LE :	135:4:2068:2091	6481346	36	True				
ANR	6481678	Identifier	CODEC_ID_PCM_S24LE		6481346	0					
ANR	6481679	Statement	DECODE	137:8:2102:2107	6481346	37	True				
ANR	6481680	Statement	(	137:14:2108:2108	6481346	38	True				
ANR	6481681	Statement	int32_t	137:15:2109:2115	6481346	39	True				
ANR	6481682	Statement	","	137:22:2116:2116	6481346	40	True				
ANR	6481683	Statement	le24	137:24:2118:2121	6481346	41	True				
ANR	6481684	Statement	","	137:28:2122:2122	6481346	42	True				
ANR	6481685	Statement	src	137:30:2124:2126	6481346	43	True				
ANR	6481686	Statement	","	137:33:2127:2127	6481346	44	True				
ANR	6481687	Statement	samples	137:35:2129:2135	6481346	45	True				
ANR	6481688	Statement	","	137:42:2136:2136	6481346	46	True				
ANR	6481689	Statement	n	137:44:2138:2138	6481346	47	True				
ANR	6481690	Statement	","	137:45:2139:2139	6481346	48	True				
ANR	6481691	Statement	8	137:47:2141:2141	6481346	49	True				
ANR	6481692	Statement	","	137:48:2142:2142	6481346	50	True				
ANR	6481693	Statement	0	137:50:2144:2144	6481346	51	True				
ANR	6481694	Statement	)	137:51:2145:2145	6481346	52	True				
ANR	6481695	BreakStatement	break ;	139:8:2156:2161	6481346	53	True				
ANR	6481696	Label	case CODEC_ID_PCM_S24BE :	141:4:2168:2191	6481346	54	True				
ANR	6481697	Identifier	CODEC_ID_PCM_S24BE		6481346	0					
ANR	6481698	Statement	DECODE	143:8:2202:2207	6481346	55	True				
ANR	6481699	Statement	(	143:14:2208:2208	6481346	56	True				
ANR	6481700	Statement	int32_t	143:15:2209:2215	6481346	57	True				
ANR	6481701	Statement	","	143:22:2216:2216	6481346	58	True				
ANR	6481702	Statement	be24	143:24:2218:2221	6481346	59	True				
ANR	6481703	Statement	","	143:28:2222:2222	6481346	60	True				
ANR	6481704	Statement	src	143:30:2224:2226	6481346	61	True				
ANR	6481705	Statement	","	143:33:2227:2227	6481346	62	True				
ANR	6481706	Statement	samples	143:35:2229:2235	6481346	63	True				
ANR	6481707	Statement	","	143:42:2236:2236	6481346	64	True				
ANR	6481708	Statement	n	143:44:2238:2238	6481346	65	True				
ANR	6481709	Statement	","	143:45:2239:2239	6481346	66	True				
ANR	6481710	Statement	8	143:47:2241:2241	6481346	67	True				
ANR	6481711	Statement	","	143:48:2242:2242	6481346	68	True				
ANR	6481712	Statement	0	143:50:2244:2244	6481346	69	True				
ANR	6481713	Statement	)	143:51:2245:2245	6481346	70	True				
ANR	6481714	BreakStatement	break ;	145:8:2256:2261	6481346	71	True				
ANR	6481715	Label	case CODEC_ID_PCM_U24LE :	147:4:2268:2291	6481346	72	True				
ANR	6481716	Identifier	CODEC_ID_PCM_U24LE		6481346	0					
ANR	6481717	Statement	DECODE	149:8:2302:2307	6481346	73	True				
ANR	6481718	Statement	(	149:14:2308:2308	6481346	74	True				
ANR	6481719	Statement	uint32_t	149:15:2309:2316	6481346	75	True				
ANR	6481720	Statement	","	149:23:2317:2317	6481346	76	True				
ANR	6481721	Statement	le24	149:25:2319:2322	6481346	77	True				
ANR	6481722	Statement	","	149:29:2323:2323	6481346	78	True				
ANR	6481723	Statement	src	149:31:2325:2327	6481346	79	True				
ANR	6481724	Statement	","	149:34:2328:2328	6481346	80	True				
ANR	6481725	Statement	samples	149:36:2330:2336	6481346	81	True				
ANR	6481726	Statement	","	149:43:2337:2337	6481346	82	True				
ANR	6481727	Statement	n	149:45:2339:2339	6481346	83	True				
ANR	6481728	Statement	","	149:46:2340:2340	6481346	84	True				
ANR	6481729	Statement	8	149:48:2342:2342	6481346	85	True				
ANR	6481730	Statement	","	149:49:2343:2343	6481346	86	True				
ANR	6481731	Statement	0x800000	149:51:2345:2352	6481346	87	True				
ANR	6481732	Statement	)	149:59:2353:2353	6481346	88	True				
ANR	6481733	BreakStatement	break ;	151:8:2364:2369	6481346	89	True				
ANR	6481734	Label	case CODEC_ID_PCM_U24BE :	153:4:2376:2399	6481346	90	True				
ANR	6481735	Identifier	CODEC_ID_PCM_U24BE		6481346	0					
ANR	6481736	Statement	DECODE	155:8:2410:2415	6481346	91	True				
ANR	6481737	Statement	(	155:14:2416:2416	6481346	92	True				
ANR	6481738	Statement	uint32_t	155:15:2417:2424	6481346	93	True				
ANR	6481739	Statement	","	155:23:2425:2425	6481346	94	True				
ANR	6481740	Statement	be24	155:25:2427:2430	6481346	95	True				
ANR	6481741	Statement	","	155:29:2431:2431	6481346	96	True				
ANR	6481742	Statement	src	155:31:2433:2435	6481346	97	True				
ANR	6481743	Statement	","	155:34:2436:2436	6481346	98	True				
ANR	6481744	Statement	samples	155:36:2438:2444	6481346	99	True				
ANR	6481745	Statement	","	155:43:2445:2445	6481346	100	True				
ANR	6481746	Statement	n	155:45:2447:2447	6481346	101	True				
ANR	6481747	Statement	","	155:46:2448:2448	6481346	102	True				
ANR	6481748	Statement	8	155:48:2450:2450	6481346	103	True				
ANR	6481749	Statement	","	155:49:2451:2451	6481346	104	True				
ANR	6481750	Statement	0x800000	155:51:2453:2460	6481346	105	True				
ANR	6481751	Statement	)	155:59:2461:2461	6481346	106	True				
ANR	6481752	BreakStatement	break ;	157:8:2472:2477	6481346	107	True				
ANR	6481753	Label	case CODEC_ID_PCM_S24DAUD :	159:4:2484:2509	6481346	108	True				
ANR	6481754	Identifier	CODEC_ID_PCM_S24DAUD		6481346	0					
ANR	6481755	ForStatement	for ( ; n > 0 ; n -- )		6481346	109					
ANR	6481756	Condition	n > 0	161:13:2525:2527	6481346	0	True				
ANR	6481757	RelationalExpression	n > 0		6481346	0		>			
ANR	6481758	Identifier	n		6481346	0					
ANR	6481759	PrimaryExpression	0		6481346	1					
ANR	6481760	PostIncDecOperationExpression	n --	161:17:2529:2531	6481346	1	True				
ANR	6481761	Identifier	n		6481346	0					
ANR	6481762	IncDec	--		6481346	1					
ANR	6481763	CompoundStatement		157:10:2391:2429	6481346	2					
ANR	6481764	IdentifierDeclStatement	uint32_t v = bytestream_get_be24 ( & src ) ;	163:10:2547:2585	6481346	0	True				
ANR	6481765	IdentifierDecl	v = bytestream_get_be24 ( & src )		6481346	0					
ANR	6481766	IdentifierDeclType	uint32_t		6481346	0					
ANR	6481767	Identifier	v		6481346	1					
ANR	6481768	AssignmentExpression	v = bytestream_get_be24 ( & src )		6481346	2		=			
ANR	6481769	Identifier	v		6481346	0					
ANR	6481770	CallExpression	bytestream_get_be24 ( & src )		6481346	1					
ANR	6481771	Callee	bytestream_get_be24		6481346	0					
ANR	6481772	Identifier	bytestream_get_be24		6481346	0					
ANR	6481773	ArgumentList	& src		6481346	1					
ANR	6481774	Argument	& src		6481346	0					
ANR	6481775	UnaryOperationExpression	& src		6481346	0					
ANR	6481776	UnaryOperator	&		6481346	0					
ANR	6481777	Identifier	src		6481346	1					
ANR	6481778	ExpressionStatement	v >>= 4	165:10:2598:2605	6481346	1	True				
ANR	6481779	AssignmentExpression	v >>= 4		6481346	0		>>=			
ANR	6481780	Identifier	v		6481346	0					
ANR	6481781	PrimaryExpression	4		6481346	1					
ANR	6481782	ExpressionStatement	* samples ++ = av_reverse [ ( v >> 8 ) & 0xff ] + ( av_reverse [ v & 0xff ] << 8 )	167:10:2641:2735	6481346	2	True				
ANR	6481783	AssignmentExpression	* samples ++ = av_reverse [ ( v >> 8 ) & 0xff ] + ( av_reverse [ v & 0xff ] << 8 )		6481346	0		=			
ANR	6481784	UnaryOperationExpression	* samples ++		6481346	0					
ANR	6481785	UnaryOperator	*		6481346	0					
ANR	6481786	PostIncDecOperationExpression	samples ++		6481346	1					
ANR	6481787	Identifier	samples		6481346	0					
ANR	6481788	IncDec	++		6481346	1					
ANR	6481789	AdditiveExpression	av_reverse [ ( v >> 8 ) & 0xff ] + ( av_reverse [ v & 0xff ] << 8 )		6481346	1		+			
ANR	6481790	ArrayIndexing	av_reverse [ ( v >> 8 ) & 0xff ]		6481346	0					
ANR	6481791	Identifier	av_reverse		6481346	0					
ANR	6481792	BitAndExpression	( v >> 8 ) & 0xff		6481346	1		&			
ANR	6481793	ShiftExpression	v >> 8		6481346	0		>>			
ANR	6481794	Identifier	v		6481346	0					
ANR	6481795	PrimaryExpression	8		6481346	1					
ANR	6481796	PrimaryExpression	0xff		6481346	1					
ANR	6481797	ShiftExpression	av_reverse [ v & 0xff ] << 8		6481346	1		<<			
ANR	6481798	ArrayIndexing	av_reverse [ v & 0xff ]		6481346	0					
ANR	6481799	Identifier	av_reverse		6481346	0					
ANR	6481800	BitAndExpression	v & 0xff		6481346	1		&			
ANR	6481801	Identifier	v		6481346	0					
ANR	6481802	PrimaryExpression	0xff		6481346	1					
ANR	6481803	PrimaryExpression	8		6481346	1					
ANR	6481804	BreakStatement	break ;	173:8:2757:2762	6481346	110	True				
ANR	6481805	Label	case CODEC_ID_PCM_S16LE_PLANAR :	175:4:2769:2799	6481346	111	True				
ANR	6481806	Identifier	CODEC_ID_PCM_S16LE_PLANAR		6481346	0					
ANR	6481807	ExpressionStatement	n /= avctx -> channels	177:8:2810:2830	6481346	112	True				
ANR	6481808	AssignmentExpression	n /= avctx -> channels		6481346	0		/=			
ANR	6481809	Identifier	n		6481346	0					
ANR	6481810	PtrMemberAccess	avctx -> channels		6481346	1					
ANR	6481811	Identifier	avctx		6481346	0					
ANR	6481812	Identifier	channels		6481346	1					
ANR	6481813	ForStatement	for ( c = 0 ; c < avctx -> channels ; c ++ )		6481346	113					
ANR	6481814	ForInit	c = 0 ;	179:12:2845:2848	6481346	0	True				
ANR	6481815	AssignmentExpression	c = 0		6481346	0		=			
ANR	6481816	Identifier	c		6481346	0					
ANR	6481817	PrimaryExpression	0		6481346	1					
ANR	6481818	Condition	c < avctx -> channels	179:16:2849:2865	6481346	1	True				
ANR	6481819	RelationalExpression	c < avctx -> channels		6481346	0		<			
ANR	6481820	Identifier	c		6481346	0					
ANR	6481821	PtrMemberAccess	avctx -> channels		6481346	1					
ANR	6481822	Identifier	avctx		6481346	0					
ANR	6481823	Identifier	channels		6481346	1					
ANR	6481824	PostIncDecOperationExpression	c ++	179:34:2867:2869	6481346	2	True				
ANR	6481825	Identifier	c		6481346	0					
ANR	6481826	IncDec	++		6481346	1					
ANR	6481827	ExpressionStatement	src2 [ c ] = & src [ c * n * 2 ]	181:12:2885:2906	6481346	3	True				
ANR	6481828	AssignmentExpression	src2 [ c ] = & src [ c * n * 2 ]		6481346	0		=			
ANR	6481829	ArrayIndexing	src2 [ c ]		6481346	0					
ANR	6481830	Identifier	src2		6481346	0					
ANR	6481831	Identifier	c		6481346	1					
ANR	6481832	UnaryOperationExpression	& src [ c * n * 2 ]		6481346	1					
ANR	6481833	UnaryOperator	&		6481346	0					
ANR	6481834	ArrayIndexing	src [ c * n * 2 ]		6481346	1					
ANR	6481835	Identifier	src		6481346	0					
ANR	6481836	MultiplicativeExpression	c * n * 2		6481346	1		*			
ANR	6481837	Identifier	c		6481346	0					
ANR	6481838	MultiplicativeExpression	n * 2		6481346	1		*			
ANR	6481839	Identifier	n		6481346	0					
ANR	6481840	PrimaryExpression	2		6481346	1					
ANR	6481841	ForStatement	for ( ; n > 0 ; n -- )		6481346	114					
ANR	6481842	Condition	n > 0	183:13:2922:2924	6481346	0	True				
ANR	6481843	RelationalExpression	n > 0		6481346	0		>			
ANR	6481844	Identifier	n		6481346	0					
ANR	6481845	PrimaryExpression	0		6481346	1					
ANR	6481846	PostIncDecOperationExpression	n --	183:17:2926:2928	6481346	1	True				
ANR	6481847	Identifier	n		6481346	0					
ANR	6481848	IncDec	--		6481346	1					
ANR	6481849	ForStatement	for ( c = 0 ; c < avctx -> channels ; c ++ )		6481346	2					
ANR	6481850	ForInit	c = 0 ;	185:16:2948:2951	6481346	0	True				
ANR	6481851	AssignmentExpression	c = 0		6481346	0		=			
ANR	6481852	Identifier	c		6481346	0					
ANR	6481853	PrimaryExpression	0		6481346	1					
ANR	6481854	Condition	c < avctx -> channels	185:20:2952:2968	6481346	1	True				
ANR	6481855	RelationalExpression	c < avctx -> channels		6481346	0		<			
ANR	6481856	Identifier	c		6481346	0					
ANR	6481857	PtrMemberAccess	avctx -> channels		6481346	1					
ANR	6481858	Identifier	avctx		6481346	0					
ANR	6481859	Identifier	channels		6481346	1					
ANR	6481860	PostIncDecOperationExpression	c ++	185:38:2970:2972	6481346	2	True				
ANR	6481861	Identifier	c		6481346	0					
ANR	6481862	IncDec	++		6481346	1					
ANR	6481863	ExpressionStatement	* samples ++ = bytestream_get_le16 ( & src2 [ c ] )	187:16:2992:3034	6481346	3	True				
ANR	6481864	AssignmentExpression	* samples ++ = bytestream_get_le16 ( & src2 [ c ] )		6481346	0		=			
ANR	6481865	UnaryOperationExpression	* samples ++		6481346	0					
ANR	6481866	UnaryOperator	*		6481346	0					
ANR	6481867	PostIncDecOperationExpression	samples ++		6481346	1					
ANR	6481868	Identifier	samples		6481346	0					
ANR	6481869	IncDec	++		6481346	1					
ANR	6481870	CallExpression	bytestream_get_le16 ( & src2 [ c ] )		6481346	1					
ANR	6481871	Callee	bytestream_get_le16		6481346	0					
ANR	6481872	Identifier	bytestream_get_le16		6481346	0					
ANR	6481873	ArgumentList	& src2 [ c ]		6481346	1					
ANR	6481874	Argument	& src2 [ c ]		6481346	0					
ANR	6481875	UnaryOperationExpression	& src2 [ c ]		6481346	0					
ANR	6481876	UnaryOperator	&		6481346	0					
ANR	6481877	ArrayIndexing	src2 [ c ]		6481346	1					
ANR	6481878	Identifier	src2		6481346	0					
ANR	6481879	Identifier	c		6481346	1					
ANR	6481880	ExpressionStatement	src = src2 [ avctx -> channels - 1 ]	189:8:3045:3074	6481346	115	True				
ANR	6481881	AssignmentExpression	src = src2 [ avctx -> channels - 1 ]		6481346	0		=			
ANR	6481882	Identifier	src		6481346	0					
ANR	6481883	ArrayIndexing	src2 [ avctx -> channels - 1 ]		6481346	1					
ANR	6481884	Identifier	src2		6481346	0					
ANR	6481885	AdditiveExpression	avctx -> channels - 1		6481346	1		-			
ANR	6481886	PtrMemberAccess	avctx -> channels		6481346	0					
ANR	6481887	Identifier	avctx		6481346	0					
ANR	6481888	Identifier	channels		6481346	1					
ANR	6481889	PrimaryExpression	1		6481346	1					
ANR	6481890	BreakStatement	break ;	191:8:3085:3090	6481346	116	True				
ANR	6481891	Label	case CODEC_ID_PCM_U16LE :	193:4:3097:3120	6481346	117	True				
ANR	6481892	Identifier	CODEC_ID_PCM_U16LE		6481346	0					
ANR	6481893	Statement	DECODE	195:8:3131:3136	6481346	118	True				
ANR	6481894	Statement	(	195:14:3137:3137	6481346	119	True				
ANR	6481895	Statement	uint16_t	195:15:3138:3145	6481346	120	True				
ANR	6481896	Statement	","	195:23:3146:3146	6481346	121	True				
ANR	6481897	Statement	le16	195:25:3148:3151	6481346	122	True				
ANR	6481898	Statement	","	195:29:3152:3152	6481346	123	True				
ANR	6481899	Statement	src	195:31:3154:3156	6481346	124	True				
ANR	6481900	Statement	","	195:34:3157:3157	6481346	125	True				
ANR	6481901	Statement	samples	195:36:3159:3165	6481346	126	True				
ANR	6481902	Statement	","	195:43:3166:3166	6481346	127	True				
ANR	6481903	Statement	n	195:45:3168:3168	6481346	128	True				
ANR	6481904	Statement	","	195:46:3169:3169	6481346	129	True				
ANR	6481905	Statement	0	195:48:3171:3171	6481346	130	True				
ANR	6481906	Statement	","	195:49:3172:3172	6481346	131	True				
ANR	6481907	Statement	0x8000	195:51:3174:3179	6481346	132	True				
ANR	6481908	Statement	)	195:57:3180:3180	6481346	133	True				
ANR	6481909	BreakStatement	break ;	197:8:3191:3196	6481346	134	True				
ANR	6481910	Label	case CODEC_ID_PCM_U16BE :	199:4:3203:3226	6481346	135	True				
ANR	6481911	Identifier	CODEC_ID_PCM_U16BE		6481346	0					
ANR	6481912	Statement	DECODE	201:8:3237:3242	6481346	136	True				
ANR	6481913	Statement	(	201:14:3243:3243	6481346	137	True				
ANR	6481914	Statement	uint16_t	201:15:3244:3251	6481346	138	True				
ANR	6481915	Statement	","	201:23:3252:3252	6481346	139	True				
ANR	6481916	Statement	be16	201:25:3254:3257	6481346	140	True				
ANR	6481917	Statement	","	201:29:3258:3258	6481346	141	True				
ANR	6481918	Statement	src	201:31:3260:3262	6481346	142	True				
ANR	6481919	Statement	","	201:34:3263:3263	6481346	143	True				
ANR	6481920	Statement	samples	201:36:3265:3271	6481346	144	True				
ANR	6481921	Statement	","	201:43:3272:3272	6481346	145	True				
ANR	6481922	Statement	n	201:45:3274:3274	6481346	146	True				
ANR	6481923	Statement	","	201:46:3275:3275	6481346	147	True				
ANR	6481924	Statement	0	201:48:3277:3277	6481346	148	True				
ANR	6481925	Statement	","	201:49:3278:3278	6481346	149	True				
ANR	6481926	Statement	0x8000	201:51:3280:3285	6481346	150	True				
ANR	6481927	Statement	)	201:57:3286:3286	6481346	151	True				
ANR	6481928	BreakStatement	break ;	203:8:3297:3302	6481346	152	True				
ANR	6481929	Label	case CODEC_ID_PCM_S8 :	205:4:3309:3329	6481346	153	True				
ANR	6481930	Identifier	CODEC_ID_PCM_S8		6481346	0					
ANR	6481931	ExpressionStatement	dstu8 = ( uint8_t * ) samples	207:8:3340:3364	6481346	154	True				
ANR	6481932	AssignmentExpression	dstu8 = ( uint8_t * ) samples		6481346	0		=			
ANR	6481933	Identifier	dstu8		6481346	0					
ANR	6481934	CastExpression	( uint8_t * ) samples		6481346	1					
ANR	6481935	CastTarget	uint8_t *		6481346	0					
ANR	6481936	Identifier	samples		6481346	1					
ANR	6481937	ForStatement	for ( ; n > 0 ; n -- )		6481346	155					
ANR	6481938	Condition	n > 0	209:13:3380:3382	6481346	0	True				
ANR	6481939	RelationalExpression	n > 0		6481346	0		>			
ANR	6481940	Identifier	n		6481346	0					
ANR	6481941	PrimaryExpression	0		6481346	1					
ANR	6481942	PostIncDecOperationExpression	n --	209:17:3384:3386	6481346	1	True				
ANR	6481943	Identifier	n		6481346	0					
ANR	6481944	IncDec	--		6481346	1					
ANR	6481945	CompoundStatement		203:22:3233:3233	6481346	2					
ANR	6481946	ExpressionStatement	* dstu8 ++ = * src ++ + 128	211:12:3404:3427	6481346	0	True				
ANR	6481947	AssignmentExpression	* dstu8 ++ = * src ++ + 128		6481346	0		=			
ANR	6481948	UnaryOperationExpression	* dstu8 ++		6481346	0					
ANR	6481949	UnaryOperator	*		6481346	0					
ANR	6481950	PostIncDecOperationExpression	dstu8 ++		6481346	1					
ANR	6481951	Identifier	dstu8		6481346	0					
ANR	6481952	IncDec	++		6481346	1					
ANR	6481953	AdditiveExpression	* src ++ + 128		6481346	1		+			
ANR	6481954	UnaryOperationExpression	* src ++		6481346	0					
ANR	6481955	UnaryOperator	*		6481346	0					
ANR	6481956	PostIncDecOperationExpression	src ++		6481346	1					
ANR	6481957	Identifier	src		6481346	0					
ANR	6481958	IncDec	++		6481346	1					
ANR	6481959	PrimaryExpression	128		6481346	1					
ANR	6481960	ExpressionStatement	samples = ( short * ) dstu8	215:8:3449:3471	6481346	156	True				
ANR	6481961	AssignmentExpression	samples = ( short * ) dstu8		6481346	0		=			
ANR	6481962	Identifier	samples		6481346	0					
ANR	6481963	CastExpression	( short * ) dstu8		6481346	1					
ANR	6481964	CastTarget	short *		6481346	0					
ANR	6481965	Identifier	dstu8		6481346	1					
ANR	6481966	BreakStatement	break ;	217:8:3482:3487	6481346	157	True				
ANR	6481967	Label	case CODEC_ID_PCM_F64LE :	221:4:3514:3537	6481346	158	True				
ANR	6481968	Identifier	CODEC_ID_PCM_F64LE		6481346	0					
ANR	6481969	Statement	DECODE	223:8:3548:3553	6481346	159	True				
ANR	6481970	Statement	(	223:14:3554:3554	6481346	160	True				
ANR	6481971	Statement	int64_t	223:15:3555:3561	6481346	161	True				
ANR	6481972	Statement	","	223:22:3562:3562	6481346	162	True				
ANR	6481973	Statement	le64	223:24:3564:3567	6481346	163	True				
ANR	6481974	Statement	","	223:28:3568:3568	6481346	164	True				
ANR	6481975	Statement	src	223:30:3570:3572	6481346	165	True				
ANR	6481976	Statement	","	223:33:3573:3573	6481346	166	True				
ANR	6481977	Statement	samples	223:35:3575:3581	6481346	167	True				
ANR	6481978	Statement	","	223:42:3582:3582	6481346	168	True				
ANR	6481979	Statement	n	223:44:3584:3584	6481346	169	True				
ANR	6481980	Statement	","	223:45:3585:3585	6481346	170	True				
ANR	6481981	Statement	0	223:47:3587:3587	6481346	171	True				
ANR	6481982	Statement	","	223:48:3588:3588	6481346	172	True				
ANR	6481983	Statement	0	223:50:3590:3590	6481346	173	True				
ANR	6481984	Statement	)	223:51:3591:3591	6481346	174	True				
ANR	6481985	BreakStatement	break ;	225:8:3602:3607	6481346	175	True				
ANR	6481986	Label	case CODEC_ID_PCM_S32LE :	227:4:3614:3637	6481346	176	True				
ANR	6481987	Identifier	CODEC_ID_PCM_S32LE		6481346	0					
ANR	6481988	Label	case CODEC_ID_PCM_F32LE :	229:4:3644:3667	6481346	177	True				
ANR	6481989	Identifier	CODEC_ID_PCM_F32LE		6481346	0					
ANR	6481990	Statement	DECODE	231:8:3678:3683	6481346	178	True				
ANR	6481991	Statement	(	231:14:3684:3684	6481346	179	True				
ANR	6481992	Statement	int32_t	231:15:3685:3691	6481346	180	True				
ANR	6481993	Statement	","	231:22:3692:3692	6481346	181	True				
ANR	6481994	Statement	le32	231:24:3694:3697	6481346	182	True				
ANR	6481995	Statement	","	231:28:3698:3698	6481346	183	True				
ANR	6481996	Statement	src	231:30:3700:3702	6481346	184	True				
ANR	6481997	Statement	","	231:33:3703:3703	6481346	185	True				
ANR	6481998	Statement	samples	231:35:3705:3711	6481346	186	True				
ANR	6481999	Statement	","	231:42:3712:3712	6481346	187	True				
ANR	6482000	Statement	n	231:44:3714:3714	6481346	188	True				
ANR	6482001	Statement	","	231:45:3715:3715	6481346	189	True				
ANR	6482002	Statement	0	231:47:3717:3717	6481346	190	True				
ANR	6482003	Statement	","	231:48:3718:3718	6481346	191	True				
ANR	6482004	Statement	0	231:50:3720:3720	6481346	192	True				
ANR	6482005	Statement	)	231:51:3721:3721	6481346	193	True				
ANR	6482006	BreakStatement	break ;	233:8:3732:3737	6481346	194	True				
ANR	6482007	Label	case CODEC_ID_PCM_S16LE :	235:4:3744:3767	6481346	195	True				
ANR	6482008	Identifier	CODEC_ID_PCM_S16LE		6481346	0					
ANR	6482009	Statement	DECODE	237:8:3778:3783	6481346	196	True				
ANR	6482010	Statement	(	237:14:3784:3784	6481346	197	True				
ANR	6482011	Statement	int16_t	237:15:3785:3791	6481346	198	True				
ANR	6482012	Statement	","	237:22:3792:3792	6481346	199	True				
ANR	6482013	Statement	le16	237:24:3794:3797	6481346	200	True				
ANR	6482014	Statement	","	237:28:3798:3798	6481346	201	True				
ANR	6482015	Statement	src	237:30:3800:3802	6481346	202	True				
ANR	6482016	Statement	","	237:33:3803:3803	6481346	203	True				
ANR	6482017	Statement	samples	237:35:3805:3811	6481346	204	True				
ANR	6482018	Statement	","	237:42:3812:3812	6481346	205	True				
ANR	6482019	Statement	n	237:44:3814:3814	6481346	206	True				
ANR	6482020	Statement	","	237:45:3815:3815	6481346	207	True				
ANR	6482021	Statement	0	237:47:3817:3817	6481346	208	True				
ANR	6482022	Statement	","	237:48:3818:3818	6481346	209	True				
ANR	6482023	Statement	0	237:50:3820:3820	6481346	210	True				
ANR	6482024	Statement	)	237:51:3821:3821	6481346	211	True				
ANR	6482025	BreakStatement	break ;	239:8:3832:3837	6481346	212	True				
ANR	6482026	Label	case CODEC_ID_PCM_F64BE :	241:4:3844:3867	6481346	213	True				
ANR	6482027	Identifier	CODEC_ID_PCM_F64BE		6481346	0					
ANR	6482028	Label	case CODEC_ID_PCM_F32BE :	243:4:3874:3897	6481346	214	True				
ANR	6482029	Identifier	CODEC_ID_PCM_F32BE		6481346	0					
ANR	6482030	Label	case CODEC_ID_PCM_S32BE :	245:4:3904:3927	6481346	215	True				
ANR	6482031	Identifier	CODEC_ID_PCM_S32BE		6481346	0					
ANR	6482032	Label	case CODEC_ID_PCM_S16BE :	247:4:3934:3957	6481346	216	True				
ANR	6482033	Identifier	CODEC_ID_PCM_S16BE		6481346	0					
ANR	6482034	Label	case CODEC_ID_PCM_U8 :	281:4:4450:4470	6481346	217	True				
ANR	6482035	Identifier	CODEC_ID_PCM_U8		6481346	0					
ANR	6482036	ExpressionStatement	"memcpy ( samples , src , n * sample_size )"	283:8:4481:4516	6481346	218	True				
ANR	6482037	CallExpression	"memcpy ( samples , src , n * sample_size )"		6481346	0					
ANR	6482038	Callee	memcpy		6481346	0					
ANR	6482039	Identifier	memcpy		6481346	0					
ANR	6482040	ArgumentList	samples		6481346	1					
ANR	6482041	Argument	samples		6481346	0					
ANR	6482042	Identifier	samples		6481346	0					
ANR	6482043	Argument	src		6481346	1					
ANR	6482044	Identifier	src		6481346	0					
ANR	6482045	Argument	n * sample_size		6481346	2					
ANR	6482046	MultiplicativeExpression	n * sample_size		6481346	0		*			
ANR	6482047	Identifier	n		6481346	0					
ANR	6482048	Identifier	sample_size		6481346	1					
ANR	6482049	ExpressionStatement	src += n * sample_size	285:8:4527:4547	6481346	219	True				
ANR	6482050	AssignmentExpression	src += n * sample_size		6481346	0		+=			
ANR	6482051	Identifier	src		6481346	0					
ANR	6482052	MultiplicativeExpression	n * sample_size		6481346	1		*			
ANR	6482053	Identifier	n		6481346	0					
ANR	6482054	Identifier	sample_size		6481346	1					
ANR	6482055	ExpressionStatement	samples = ( short * ) ( ( uint8_t * ) data + n * sample_size )	287:8:4558:4608	6481346	220	True				
ANR	6482056	AssignmentExpression	samples = ( short * ) ( ( uint8_t * ) data + n * sample_size )		6481346	0		=			
ANR	6482057	Identifier	samples		6481346	0					
ANR	6482058	CastExpression	( short * ) ( ( uint8_t * ) data + n * sample_size )		6481346	1					
ANR	6482059	CastTarget	short *		6481346	0					
ANR	6482060	AdditiveExpression	( uint8_t * ) data + n * sample_size		6481346	1		+			
ANR	6482061	CastExpression	( uint8_t * ) data		6481346	0					
ANR	6482062	CastTarget	uint8_t *		6481346	0					
ANR	6482063	Identifier	data		6481346	1					
ANR	6482064	MultiplicativeExpression	n * sample_size		6481346	1		*			
ANR	6482065	Identifier	n		6481346	0					
ANR	6482066	Identifier	sample_size		6481346	1					
ANR	6482067	BreakStatement	break ;	289:8:4619:4624	6481346	221	True				
ANR	6482068	Label	case CODEC_ID_PCM_ZORK :	291:4:4631:4653	6481346	222	True				
ANR	6482069	Identifier	CODEC_ID_PCM_ZORK		6481346	0					
ANR	6482070	ForStatement	for ( ; n > 0 ; n -- )		6481346	223					
ANR	6482071	Condition	n > 0	293:13:4669:4671	6481346	0	True				
ANR	6482072	RelationalExpression	n > 0		6481346	0		>			
ANR	6482073	Identifier	n		6481346	0					
ANR	6482074	PrimaryExpression	0		6481346	1					
ANR	6482075	PostIncDecOperationExpression	n --	293:17:4673:4675	6481346	1	True				
ANR	6482076	Identifier	n		6481346	0					
ANR	6482077	IncDec	--		6481346	1					
ANR	6482078	CompoundStatement		289:12:4537:4550	6481346	2					
ANR	6482079	IdentifierDeclStatement	int x = * src ++ ;	295:12:4693:4706	6481346	0	True				
ANR	6482080	IdentifierDecl	x = * src ++		6481346	0					
ANR	6482081	IdentifierDeclType	int		6481346	0					
ANR	6482082	Identifier	x		6481346	1					
ANR	6482083	AssignmentExpression	x = * src ++		6481346	2		=			
ANR	6482084	Identifier	x		6481346	0					
ANR	6482085	UnaryOperationExpression	* src ++		6481346	1					
ANR	6482086	UnaryOperator	*		6481346	0					
ANR	6482087	PostIncDecOperationExpression	src ++		6481346	1					
ANR	6482088	Identifier	src		6481346	0					
ANR	6482089	IncDec	++		6481346	1					
ANR	6482090	IfStatement	if ( x & 128 )		6481346	1					
ANR	6482091	Condition	x & 128	297:15:4724:4728	6481346	0	True				
ANR	6482092	BitAndExpression	x & 128		6481346	0		&			
ANR	6482093	Identifier	x		6481346	0					
ANR	6482094	PrimaryExpression	128		6481346	1					
ANR	6482095	ExpressionStatement	x -= 128	297:22:4731:4738	6481346	1	True				
ANR	6482096	AssignmentExpression	x -= 128		6481346	0		-=			
ANR	6482097	Identifier	x		6481346	0					
ANR	6482098	PrimaryExpression	128		6481346	1					
ANR	6482099	ElseStatement	else		6481346	0					
ANR	6482100	ExpressionStatement	x = - x	299:22:4763:4769	6481346	0	True				
ANR	6482101	AssignmentExpression	x = - x		6481346	0		=			
ANR	6482102	Identifier	x		6481346	0					
ANR	6482103	UnaryOperationExpression	- x		6481346	1					
ANR	6482104	UnaryOperator	-		6481346	0					
ANR	6482105	Identifier	x		6481346	1					
ANR	6482106	ExpressionStatement	* samples ++ = x << 8	301:12:4784:4803	6481346	2	True				
ANR	6482107	AssignmentExpression	* samples ++ = x << 8		6481346	0		=			
ANR	6482108	UnaryOperationExpression	* samples ++		6481346	0					
ANR	6482109	UnaryOperator	*		6481346	0					
ANR	6482110	PostIncDecOperationExpression	samples ++		6481346	1					
ANR	6482111	Identifier	samples		6481346	0					
ANR	6482112	IncDec	++		6481346	1					
ANR	6482113	ShiftExpression	x << 8		6481346	1		<<			
ANR	6482114	Identifier	x		6481346	0					
ANR	6482115	PrimaryExpression	8		6481346	1					
ANR	6482116	BreakStatement	break ;	305:8:4825:4830	6481346	224	True				
ANR	6482117	Label	case CODEC_ID_PCM_ALAW :	307:4:4837:4859	6481346	225	True				
ANR	6482118	Identifier	CODEC_ID_PCM_ALAW		6481346	0					
ANR	6482119	Label	case CODEC_ID_PCM_MULAW :	309:4:4866:4889	6481346	226	True				
ANR	6482120	Identifier	CODEC_ID_PCM_MULAW		6481346	0					
ANR	6482121	ForStatement	for ( ; n > 0 ; n -- )		6481346	227					
ANR	6482122	Condition	n > 0	311:13:4905:4907	6481346	0	True				
ANR	6482123	RelationalExpression	n > 0		6481346	0		>			
ANR	6482124	Identifier	n		6481346	0					
ANR	6482125	PrimaryExpression	0		6481346	1					
ANR	6482126	PostIncDecOperationExpression	n --	311:17:4909:4911	6481346	1	True				
ANR	6482127	Identifier	n		6481346	0					
ANR	6482128	IncDec	--		6481346	1					
ANR	6482129	CompoundStatement		305:22:4758:4758	6481346	2					
ANR	6482130	ExpressionStatement	* samples ++ = s -> table [ * src ++ ]	313:12:4929:4958	6481346	0	True				
ANR	6482131	AssignmentExpression	* samples ++ = s -> table [ * src ++ ]		6481346	0		=			
ANR	6482132	UnaryOperationExpression	* samples ++		6481346	0					
ANR	6482133	UnaryOperator	*		6481346	0					
ANR	6482134	PostIncDecOperationExpression	samples ++		6481346	1					
ANR	6482135	Identifier	samples		6481346	0					
ANR	6482136	IncDec	++		6481346	1					
ANR	6482137	ArrayIndexing	s -> table [ * src ++ ]		6481346	1					
ANR	6482138	PtrMemberAccess	s -> table		6481346	0					
ANR	6482139	Identifier	s		6481346	0					
ANR	6482140	Identifier	table		6481346	1					
ANR	6482141	UnaryOperationExpression	* src ++		6481346	1					
ANR	6482142	UnaryOperator	*		6481346	0					
ANR	6482143	PostIncDecOperationExpression	src ++		6481346	1					
ANR	6482144	Identifier	src		6481346	0					
ANR	6482145	IncDec	++		6481346	1					
ANR	6482146	BreakStatement	break ;	317:8:4980:4985	6481346	228	True				
ANR	6482147	Label	case CODEC_ID_PCM_DVD :	319:4:4992:5013	6481346	229	True				
ANR	6482148	Identifier	CODEC_ID_PCM_DVD		6481346	0					
ANR	6482149	ExpressionStatement	dst_int32_t = data	321:8:5024:5042	6481346	230	True				
ANR	6482150	AssignmentExpression	dst_int32_t = data		6481346	0		=			
ANR	6482151	Identifier	dst_int32_t		6481346	0					
ANR	6482152	Identifier	data		6481346	1					
ANR	6482153	ExpressionStatement	n /= avctx -> channels	323:8:5053:5073	6481346	231	True				
ANR	6482154	AssignmentExpression	n /= avctx -> channels		6481346	0		/=			
ANR	6482155	Identifier	n		6481346	0					
ANR	6482156	PtrMemberAccess	avctx -> channels		6481346	1					
ANR	6482157	Identifier	avctx		6481346	0					
ANR	6482158	Identifier	channels		6481346	1					
ANR	6482159	SwitchStatement	switch ( avctx -> bits_per_coded_sample )		6481346	232					
ANR	6482160	Condition	avctx -> bits_per_coded_sample	325:16:5092:5119	6481346	0	True				
ANR	6482161	PtrMemberAccess	avctx -> bits_per_coded_sample		6481346	0					
ANR	6482162	Identifier	avctx		6481346	0					
ANR	6482163	Identifier	bits_per_coded_sample		6481346	1					
ANR	6482164	CompoundStatement		319:46:4966:4966	6481346	1					
ANR	6482165	Label	case 20 :	327:8:5133:5140	6481346	0	True				
ANR	6482166	WhileStatement	while ( n -- )		6481346	1					
ANR	6482167	Condition	n --	329:19:5162:5164	6481346	0	True				
ANR	6482168	PostIncDecOperationExpression	n --		6481346	0					
ANR	6482169	Identifier	n		6481346	0					
ANR	6482170	IncDec	--		6481346	1					
ANR	6482171	CompoundStatement		323:24:5011:5011	6481346	1					
ANR	6482172	ExpressionStatement	c = avctx -> channels	331:16:5186:5205	6481346	0	True				
ANR	6482173	AssignmentExpression	c = avctx -> channels		6481346	0		=			
ANR	6482174	Identifier	c		6481346	0					
ANR	6482175	PtrMemberAccess	avctx -> channels		6481346	1					
ANR	6482176	Identifier	avctx		6481346	0					
ANR	6482177	Identifier	channels		6481346	1					
ANR	6482178	ExpressionStatement	src8 = src + 4 * c	333:16:5224:5240	6481346	1	True				
ANR	6482179	AssignmentExpression	src8 = src + 4 * c		6481346	0		=			
ANR	6482180	Identifier	src8		6481346	0					
ANR	6482181	AdditiveExpression	src + 4 * c		6481346	1		+			
ANR	6482182	Identifier	src		6481346	0					
ANR	6482183	MultiplicativeExpression	4 * c		6481346	1		*			
ANR	6482184	PrimaryExpression	4		6481346	0					
ANR	6482185	Identifier	c		6481346	1					
ANR	6482186	WhileStatement	while ( c -- )		6481346	2					
ANR	6482187	Condition	c --	335:23:5266:5268	6481346	0	True				
ANR	6482188	PostIncDecOperationExpression	c --		6481346	0					
ANR	6482189	Identifier	c		6481346	0					
ANR	6482190	IncDec	--		6481346	1					
ANR	6482191	CompoundStatement		329:28:5115:5115	6481346	1					
ANR	6482192	ExpressionStatement	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 & 0xf0 ) << 8 )	337:20:5294:5369	6481346	0	True				
ANR	6482193	AssignmentExpression	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 & 0xf0 ) << 8 )		6481346	0		=			
ANR	6482194	UnaryOperationExpression	* dst_int32_t ++		6481346	0					
ANR	6482195	UnaryOperator	*		6481346	0					
ANR	6482196	PostIncDecOperationExpression	dst_int32_t ++		6481346	1					
ANR	6482197	Identifier	dst_int32_t		6481346	0					
ANR	6482198	IncDec	++		6481346	1					
ANR	6482199	AdditiveExpression	( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 & 0xf0 ) << 8 )		6481346	1		+			
ANR	6482200	ShiftExpression	bytestream_get_be16 ( & src ) << 16		6481346	0		<<			
ANR	6482201	CallExpression	bytestream_get_be16 ( & src )		6481346	0					
ANR	6482202	Callee	bytestream_get_be16		6481346	0					
ANR	6482203	Identifier	bytestream_get_be16		6481346	0					
ANR	6482204	ArgumentList	& src		6481346	1					
ANR	6482205	Argument	& src		6481346	0					
ANR	6482206	UnaryOperationExpression	& src		6481346	0					
ANR	6482207	UnaryOperator	&		6481346	0					
ANR	6482208	Identifier	src		6481346	1					
ANR	6482209	PrimaryExpression	16		6481346	1					
ANR	6482210	ShiftExpression	( * src8 & 0xf0 ) << 8		6481346	1		<<			
ANR	6482211	BitAndExpression	* src8 & 0xf0		6481346	0		&			
ANR	6482212	UnaryOperationExpression	* src8		6481346	0					
ANR	6482213	UnaryOperator	*		6481346	0					
ANR	6482214	Identifier	src8		6481346	1					
ANR	6482215	PrimaryExpression	0xf0		6481346	1					
ANR	6482216	PrimaryExpression	8		6481346	1					
ANR	6482217	ExpressionStatement	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ & 0x0f ) << 12 )	339:20:5392:5468	6481346	1	True				
ANR	6482218	AssignmentExpression	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ & 0x0f ) << 12 )		6481346	0		=			
ANR	6482219	UnaryOperationExpression	* dst_int32_t ++		6481346	0					
ANR	6482220	UnaryOperator	*		6481346	0					
ANR	6482221	PostIncDecOperationExpression	dst_int32_t ++		6481346	1					
ANR	6482222	Identifier	dst_int32_t		6481346	0					
ANR	6482223	IncDec	++		6481346	1					
ANR	6482224	AdditiveExpression	( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ & 0x0f ) << 12 )		6481346	1		+			
ANR	6482225	ShiftExpression	bytestream_get_be16 ( & src ) << 16		6481346	0		<<			
ANR	6482226	CallExpression	bytestream_get_be16 ( & src )		6481346	0					
ANR	6482227	Callee	bytestream_get_be16		6481346	0					
ANR	6482228	Identifier	bytestream_get_be16		6481346	0					
ANR	6482229	ArgumentList	& src		6481346	1					
ANR	6482230	Argument	& src		6481346	0					
ANR	6482231	UnaryOperationExpression	& src		6481346	0					
ANR	6482232	UnaryOperator	&		6481346	0					
ANR	6482233	Identifier	src		6481346	1					
ANR	6482234	PrimaryExpression	16		6481346	1					
ANR	6482235	ShiftExpression	( * src8 ++ & 0x0f ) << 12		6481346	1		<<			
ANR	6482236	BitAndExpression	* src8 ++ & 0x0f		6481346	0		&			
ANR	6482237	UnaryOperationExpression	* src8 ++		6481346	0					
ANR	6482238	UnaryOperator	*		6481346	0					
ANR	6482239	PostIncDecOperationExpression	src8 ++		6481346	1					
ANR	6482240	Identifier	src8		6481346	0					
ANR	6482241	IncDec	++		6481346	1					
ANR	6482242	PrimaryExpression	0x0f		6481346	1					
ANR	6482243	PrimaryExpression	12		6481346	1					
ANR	6482244	ExpressionStatement	src = src8	343:16:5506:5516	6481346	3	True				
ANR	6482245	AssignmentExpression	src = src8		6481346	0		=			
ANR	6482246	Identifier	src		6481346	0					
ANR	6482247	Identifier	src8		6481346	1					
ANR	6482248	BreakStatement	break ;	347:12:5546:5551	6481346	2	True				
ANR	6482249	Label	case 24 :	349:8:5562:5569	6481346	3	True				
ANR	6482250	WhileStatement	while ( n -- )		6481346	4					
ANR	6482251	Condition	n --	351:19:5591:5593	6481346	0	True				
ANR	6482252	PostIncDecOperationExpression	n --		6481346	0					
ANR	6482253	Identifier	n		6481346	0					
ANR	6482254	IncDec	--		6481346	1					
ANR	6482255	CompoundStatement		345:24:5440:5440	6481346	1					
ANR	6482256	ExpressionStatement	c = avctx -> channels	353:16:5615:5634	6481346	0	True				
ANR	6482257	AssignmentExpression	c = avctx -> channels		6481346	0		=			
ANR	6482258	Identifier	c		6481346	0					
ANR	6482259	PtrMemberAccess	avctx -> channels		6481346	1					
ANR	6482260	Identifier	avctx		6481346	0					
ANR	6482261	Identifier	channels		6481346	1					
ANR	6482262	ExpressionStatement	src8 = src + 4 * c	355:16:5653:5669	6481346	1	True				
ANR	6482263	AssignmentExpression	src8 = src + 4 * c		6481346	0		=			
ANR	6482264	Identifier	src8		6481346	0					
ANR	6482265	AdditiveExpression	src + 4 * c		6481346	1		+			
ANR	6482266	Identifier	src		6481346	0					
ANR	6482267	MultiplicativeExpression	4 * c		6481346	1		*			
ANR	6482268	PrimaryExpression	4		6481346	0					
ANR	6482269	Identifier	c		6481346	1					
ANR	6482270	WhileStatement	while ( c -- )		6481346	2					
ANR	6482271	Condition	c --	357:23:5695:5697	6481346	0	True				
ANR	6482272	PostIncDecOperationExpression	c --		6481346	0					
ANR	6482273	Identifier	c		6481346	0					
ANR	6482274	IncDec	--		6481346	1					
ANR	6482275	CompoundStatement		351:28:5544:5544	6481346	1					
ANR	6482276	ExpressionStatement	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )	359:20:5723:5792	6481346	0	True				
ANR	6482277	AssignmentExpression	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )		6481346	0		=			
ANR	6482278	UnaryOperationExpression	* dst_int32_t ++		6481346	0					
ANR	6482279	UnaryOperator	*		6481346	0					
ANR	6482280	PostIncDecOperationExpression	dst_int32_t ++		6481346	1					
ANR	6482281	Identifier	dst_int32_t		6481346	0					
ANR	6482282	IncDec	++		6481346	1					
ANR	6482283	AdditiveExpression	( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )		6481346	1		+			
ANR	6482284	ShiftExpression	bytestream_get_be16 ( & src ) << 16		6481346	0		<<			
ANR	6482285	CallExpression	bytestream_get_be16 ( & src )		6481346	0					
ANR	6482286	Callee	bytestream_get_be16		6481346	0					
ANR	6482287	Identifier	bytestream_get_be16		6481346	0					
ANR	6482288	ArgumentList	& src		6481346	1					
ANR	6482289	Argument	& src		6481346	0					
ANR	6482290	UnaryOperationExpression	& src		6481346	0					
ANR	6482291	UnaryOperator	&		6481346	0					
ANR	6482292	Identifier	src		6481346	1					
ANR	6482293	PrimaryExpression	16		6481346	1					
ANR	6482294	ShiftExpression	( * src8 ++ ) << 8		6481346	1		<<			
ANR	6482295	UnaryOperationExpression	* src8 ++		6481346	0					
ANR	6482296	UnaryOperator	*		6481346	0					
ANR	6482297	PostIncDecOperationExpression	src8 ++		6481346	1					
ANR	6482298	Identifier	src8		6481346	0					
ANR	6482299	IncDec	++		6481346	1					
ANR	6482300	PrimaryExpression	8		6481346	1					
ANR	6482301	ExpressionStatement	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )	361:20:5815:5884	6481346	1	True				
ANR	6482302	AssignmentExpression	* dst_int32_t ++ = ( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )		6481346	0		=			
ANR	6482303	UnaryOperationExpression	* dst_int32_t ++		6481346	0					
ANR	6482304	UnaryOperator	*		6481346	0					
ANR	6482305	PostIncDecOperationExpression	dst_int32_t ++		6481346	1					
ANR	6482306	Identifier	dst_int32_t		6481346	0					
ANR	6482307	IncDec	++		6481346	1					
ANR	6482308	AdditiveExpression	( bytestream_get_be16 ( & src ) << 16 ) + ( ( * src8 ++ ) << 8 )		6481346	1		+			
ANR	6482309	ShiftExpression	bytestream_get_be16 ( & src ) << 16		6481346	0		<<			
ANR	6482310	CallExpression	bytestream_get_be16 ( & src )		6481346	0					
ANR	6482311	Callee	bytestream_get_be16		6481346	0					
ANR	6482312	Identifier	bytestream_get_be16		6481346	0					
ANR	6482313	ArgumentList	& src		6481346	1					
ANR	6482314	Argument	& src		6481346	0					
ANR	6482315	UnaryOperationExpression	& src		6481346	0					
ANR	6482316	UnaryOperator	&		6481346	0					
ANR	6482317	Identifier	src		6481346	1					
ANR	6482318	PrimaryExpression	16		6481346	1					
ANR	6482319	ShiftExpression	( * src8 ++ ) << 8		6481346	1		<<			
ANR	6482320	UnaryOperationExpression	* src8 ++		6481346	0					
ANR	6482321	UnaryOperator	*		6481346	0					
ANR	6482322	PostIncDecOperationExpression	src8 ++		6481346	1					
ANR	6482323	Identifier	src8		6481346	0					
ANR	6482324	IncDec	++		6481346	1					
ANR	6482325	PrimaryExpression	8		6481346	1					
ANR	6482326	ExpressionStatement	src = src8	365:16:5922:5932	6481346	3	True				
ANR	6482327	AssignmentExpression	src = src8		6481346	0		=			
ANR	6482328	Identifier	src		6481346	0					
ANR	6482329	Identifier	src8		6481346	1					
ANR	6482330	BreakStatement	break ;	369:12:5962:5967	6481346	5	True				
ANR	6482331	Label	default :	371:8:5978:5985	6481346	6	True				
ANR	6482332	Identifier	default		6481346	0					
ANR	6482333	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""PCM DVD unsupported sample depth\\n"" )"	373:12:6000:6065	6481346	7	True				
ANR	6482334	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""PCM DVD unsupported sample depth\\n"" )"		6481346	0					
ANR	6482335	Callee	av_log		6481346	0					
ANR	6482336	Identifier	av_log		6481346	0					
ANR	6482337	ArgumentList	avctx		6481346	1					
ANR	6482338	Argument	avctx		6481346	0					
ANR	6482339	Identifier	avctx		6481346	0					
ANR	6482340	Argument	AV_LOG_ERROR		6481346	1					
ANR	6482341	Identifier	AV_LOG_ERROR		6481346	0					
ANR	6482342	Argument	"""PCM DVD unsupported sample depth\\n"""		6481346	2					
ANR	6482343	PrimaryExpression	"""PCM DVD unsupported sample depth\\n"""		6481346	0					
ANR	6482344	ReturnStatement	return - 1 ;	375:12:6080:6089	6481346	8	True				
ANR	6482345	UnaryOperationExpression	- 1		6481346	0					
ANR	6482346	UnaryOperator	-		6481346	0					
ANR	6482347	PrimaryExpression	1		6481346	1					
ANR	6482348	ExpressionStatement	samples = ( short * ) dst_int32_t	379:8:6111:6142	6481346	233	True				
ANR	6482349	AssignmentExpression	samples = ( short * ) dst_int32_t		6481346	0		=			
ANR	6482350	Identifier	samples		6481346	0					
ANR	6482351	CastExpression	( short * ) dst_int32_t		6481346	1					
ANR	6482352	CastTarget	short *		6481346	0					
ANR	6482353	Identifier	dst_int32_t		6481346	1					
ANR	6482354	BreakStatement	break ;	381:8:6153:6158	6481346	234	True				
ANR	6482355	Label	case CODEC_ID_PCM_LXF :	383:4:6165:6186	6481346	235	True				
ANR	6482356	Identifier	CODEC_ID_PCM_LXF		6481346	0					
ANR	6482357	ExpressionStatement	dst_int32_t = data	385:8:6197:6215	6481346	236	True				
ANR	6482358	AssignmentExpression	dst_int32_t = data		6481346	0		=			
ANR	6482359	Identifier	dst_int32_t		6481346	0					
ANR	6482360	Identifier	data		6481346	1					
ANR	6482361	ExpressionStatement	n /= avctx -> channels	387:8:6226:6246	6481346	237	True				
ANR	6482362	AssignmentExpression	n /= avctx -> channels		6481346	0		/=			
ANR	6482363	Identifier	n		6481346	0					
ANR	6482364	PtrMemberAccess	avctx -> channels		6481346	1					
ANR	6482365	Identifier	avctx		6481346	0					
ANR	6482366	Identifier	channels		6481346	1					
ANR	6482367	ForStatement	for ( i = 0 ; i < n ; i ++ )		6481346	238					
ANR	6482368	ForInit	i = 0 ;	391:13:6297:6302	6481346	0	True				
ANR	6482369	AssignmentExpression	i = 0		6481346	0		=			
ANR	6482370	Identifier	i		6481346	0					
ANR	6482371	PrimaryExpression	0		6481346	1					
ANR	6482372	Condition	i < n	391:20:6304:6308	6481346	1	True				
ANR	6482373	RelationalExpression	i < n		6481346	0		<			
ANR	6482374	Identifier	i		6481346	0					
ANR	6482375	Identifier	n		6481346	1					
ANR	6482376	PostIncDecOperationExpression	i ++	391:27:6311:6313	6481346	2	True				
ANR	6482377	Identifier	i		6481346	0					
ANR	6482378	IncDec	++		6481346	1					
ANR	6482379	CompoundStatement		385:32:6160:6160	6481346	3					
ANR	6482380	ForStatement	"for ( c = 0 , src8 = src + i * 5 ; c < avctx -> channels ; c ++ , src8 += n * 5 )"		6481346	0					
ANR	6482381	ForInit	"c = 0 , src8 = src + i * 5 ;"	393:17:6336:6359	6481346	0	True				
ANR	6482382	Expression	"c = 0 , src8 = src + i * 5"		6481346	0					
ANR	6482383	AssignmentExpression	c = 0		6481346	0		=			
ANR	6482384	Identifier	c		6481346	0					
ANR	6482385	PrimaryExpression	0		6481346	1					
ANR	6482386	AssignmentExpression	src8 = src + i * 5		6481346	1		=			
ANR	6482387	Identifier	src8		6481346	0					
ANR	6482388	AdditiveExpression	src + i * 5		6481346	1		+			
ANR	6482389	Identifier	src		6481346	0					
ANR	6482390	MultiplicativeExpression	i * 5		6481346	1		*			
ANR	6482391	Identifier	i		6481346	0					
ANR	6482392	PrimaryExpression	5		6481346	1					
ANR	6482393	Condition	c < avctx -> channels	393:42:6361:6379	6481346	1	True				
ANR	6482394	RelationalExpression	c < avctx -> channels		6481346	0		<			
ANR	6482395	Identifier	c		6481346	0					
ANR	6482396	PtrMemberAccess	avctx -> channels		6481346	1					
ANR	6482397	Identifier	avctx		6481346	0					
ANR	6482398	Identifier	channels		6481346	1					
ANR	6482399	Expression	"c ++ , src8 += n * 5"	393:63:6382:6397	6481346	2	True				
ANR	6482400	PostIncDecOperationExpression	c ++		6481346	0					
ANR	6482401	Identifier	c		6481346	0					
ANR	6482402	IncDec	++		6481346	1					
ANR	6482403	AssignmentExpression	src8 += n * 5		6481346	1		+=			
ANR	6482404	Identifier	src8		6481346	0					
ANR	6482405	MultiplicativeExpression	n * 5		6481346	1		*			
ANR	6482406	Identifier	n		6481346	0					
ANR	6482407	PrimaryExpression	5		6481346	1					
ANR	6482408	CompoundStatement		387:81:6244:6244	6481346	3					
ANR	6482409	ExpressionStatement	* dst_int32_t ++ = ( src8 [ 2 ] << 28 ) | ( src8 [ 1 ] << 20 ) | ( src8 [ 0 ] << 12 ) | ( ( src8 [ 2 ] & 0xF ) << 8 ) | src8 [ 1 ]	397:16:6480:6617	6481346	0	True				
ANR	6482410	AssignmentExpression	* dst_int32_t ++ = ( src8 [ 2 ] << 28 ) | ( src8 [ 1 ] << 20 ) | ( src8 [ 0 ] << 12 ) | ( ( src8 [ 2 ] & 0xF ) << 8 ) | src8 [ 1 ]		6481346	0		=			
ANR	6482411	UnaryOperationExpression	* dst_int32_t ++		6481346	0					
ANR	6482412	UnaryOperator	*		6481346	0					
ANR	6482413	PostIncDecOperationExpression	dst_int32_t ++		6481346	1					
ANR	6482414	Identifier	dst_int32_t		6481346	0					
ANR	6482415	IncDec	++		6481346	1					
ANR	6482416	InclusiveOrExpression	( src8 [ 2 ] << 28 ) | ( src8 [ 1 ] << 20 ) | ( src8 [ 0 ] << 12 ) | ( ( src8 [ 2 ] & 0xF ) << 8 ) | src8 [ 1 ]		6481346	1		|			
ANR	6482417	ShiftExpression	src8 [ 2 ] << 28		6481346	0		<<			
ANR	6482418	ArrayIndexing	src8 [ 2 ]		6481346	0					
ANR	6482419	Identifier	src8		6481346	0					
ANR	6482420	PrimaryExpression	2		6481346	1					
ANR	6482421	PrimaryExpression	28		6481346	1					
ANR	6482422	InclusiveOrExpression	( src8 [ 1 ] << 20 ) | ( src8 [ 0 ] << 12 ) | ( ( src8 [ 2 ] & 0xF ) << 8 ) | src8 [ 1 ]		6481346	1		|			
ANR	6482423	ShiftExpression	src8 [ 1 ] << 20		6481346	0		<<			
ANR	6482424	ArrayIndexing	src8 [ 1 ]		6481346	0					
ANR	6482425	Identifier	src8		6481346	0					
ANR	6482426	PrimaryExpression	1		6481346	1					
ANR	6482427	PrimaryExpression	20		6481346	1					
ANR	6482428	InclusiveOrExpression	( src8 [ 0 ] << 12 ) | ( ( src8 [ 2 ] & 0xF ) << 8 ) | src8 [ 1 ]		6481346	1		|			
ANR	6482429	ShiftExpression	src8 [ 0 ] << 12		6481346	0		<<			
ANR	6482430	ArrayIndexing	src8 [ 0 ]		6481346	0					
ANR	6482431	Identifier	src8		6481346	0					
ANR	6482432	PrimaryExpression	0		6481346	1					
ANR	6482433	PrimaryExpression	12		6481346	1					
ANR	6482434	InclusiveOrExpression	( ( src8 [ 2 ] & 0xF ) << 8 ) | src8 [ 1 ]		6481346	1		|			
ANR	6482435	ShiftExpression	( src8 [ 2 ] & 0xF ) << 8		6481346	0		<<			
ANR	6482436	BitAndExpression	src8 [ 2 ] & 0xF		6481346	0		&			
ANR	6482437	ArrayIndexing	src8 [ 2 ]		6481346	0					
ANR	6482438	Identifier	src8		6481346	0					
ANR	6482439	PrimaryExpression	2		6481346	1					
ANR	6482440	PrimaryExpression	0xF		6481346	1					
ANR	6482441	PrimaryExpression	8		6481346	1					
ANR	6482442	ArrayIndexing	src8 [ 1 ]		6481346	1					
ANR	6482443	Identifier	src8		6481346	0					
ANR	6482444	PrimaryExpression	1		6481346	1					
ANR	6482445	ForStatement	"for ( c = 0 , src8 = src + i * 5 ; c < avctx -> channels ; c ++ , src8 += n * 5 )"		6481346	1					
ANR	6482446	ForInit	"c = 0 , src8 = src + i * 5 ;"	405:17:6654:6677	6481346	0	True				
ANR	6482447	Expression	"c = 0 , src8 = src + i * 5"		6481346	0					
ANR	6482448	AssignmentExpression	c = 0		6481346	0		=			
ANR	6482449	Identifier	c		6481346	0					
ANR	6482450	PrimaryExpression	0		6481346	1					
ANR	6482451	AssignmentExpression	src8 = src + i * 5		6481346	1		=			
ANR	6482452	Identifier	src8		6481346	0					
ANR	6482453	AdditiveExpression	src + i * 5		6481346	1		+			
ANR	6482454	Identifier	src		6481346	0					
ANR	6482455	MultiplicativeExpression	i * 5		6481346	1		*			
ANR	6482456	Identifier	i		6481346	0					
ANR	6482457	PrimaryExpression	5		6481346	1					
ANR	6482458	Condition	c < avctx -> channels	405:42:6679:6697	6481346	1	True				
ANR	6482459	RelationalExpression	c < avctx -> channels		6481346	0		<			
ANR	6482460	Identifier	c		6481346	0					
ANR	6482461	PtrMemberAccess	avctx -> channels		6481346	1					
ANR	6482462	Identifier	avctx		6481346	0					
ANR	6482463	Identifier	channels		6481346	1					
ANR	6482464	Expression	"c ++ , src8 += n * 5"	405:63:6700:6715	6481346	2	True				
ANR	6482465	PostIncDecOperationExpression	c ++		6481346	0					
ANR	6482466	Identifier	c		6481346	0					
ANR	6482467	IncDec	++		6481346	1					
ANR	6482468	AssignmentExpression	src8 += n * 5		6481346	1		+=			
ANR	6482469	Identifier	src8		6481346	0					
ANR	6482470	MultiplicativeExpression	n * 5		6481346	1		*			
ANR	6482471	Identifier	n		6481346	0					
ANR	6482472	PrimaryExpression	5		6481346	1					
ANR	6482473	CompoundStatement		399:81:6562:6562	6481346	3					
ANR	6482474	ExpressionStatement	* dst_int32_t ++ = ( src8 [ 4 ] << 24 ) | ( src8 [ 3 ] << 16 ) | ( ( src8 [ 2 ] & 0xF0 ) << 8 ) | ( src8 [ 4 ] << 4 ) | ( src8 [ 3 ] >> 4 )	409:16:6799:6943	6481346	0	True				
ANR	6482475	AssignmentExpression	* dst_int32_t ++ = ( src8 [ 4 ] << 24 ) | ( src8 [ 3 ] << 16 ) | ( ( src8 [ 2 ] & 0xF0 ) << 8 ) | ( src8 [ 4 ] << 4 ) | ( src8 [ 3 ] >> 4 )		6481346	0		=			
ANR	6482476	UnaryOperationExpression	* dst_int32_t ++		6481346	0					
ANR	6482477	UnaryOperator	*		6481346	0					
ANR	6482478	PostIncDecOperationExpression	dst_int32_t ++		6481346	1					
ANR	6482479	Identifier	dst_int32_t		6481346	0					
ANR	6482480	IncDec	++		6481346	1					
ANR	6482481	InclusiveOrExpression	( src8 [ 4 ] << 24 ) | ( src8 [ 3 ] << 16 ) | ( ( src8 [ 2 ] & 0xF0 ) << 8 ) | ( src8 [ 4 ] << 4 ) | ( src8 [ 3 ] >> 4 )		6481346	1		|			
ANR	6482482	ShiftExpression	src8 [ 4 ] << 24		6481346	0		<<			
ANR	6482483	ArrayIndexing	src8 [ 4 ]		6481346	0					
ANR	6482484	Identifier	src8		6481346	0					
ANR	6482485	PrimaryExpression	4		6481346	1					
ANR	6482486	PrimaryExpression	24		6481346	1					
ANR	6482487	InclusiveOrExpression	( src8 [ 3 ] << 16 ) | ( ( src8 [ 2 ] & 0xF0 ) << 8 ) | ( src8 [ 4 ] << 4 ) | ( src8 [ 3 ] >> 4 )		6481346	1		|			
ANR	6482488	ShiftExpression	src8 [ 3 ] << 16		6481346	0		<<			
ANR	6482489	ArrayIndexing	src8 [ 3 ]		6481346	0					
ANR	6482490	Identifier	src8		6481346	0					
ANR	6482491	PrimaryExpression	3		6481346	1					
ANR	6482492	PrimaryExpression	16		6481346	1					
ANR	6482493	InclusiveOrExpression	( ( src8 [ 2 ] & 0xF0 ) << 8 ) | ( src8 [ 4 ] << 4 ) | ( src8 [ 3 ] >> 4 )		6481346	1		|			
ANR	6482494	ShiftExpression	( src8 [ 2 ] & 0xF0 ) << 8		6481346	0		<<			
ANR	6482495	BitAndExpression	src8 [ 2 ] & 0xF0		6481346	0		&			
ANR	6482496	ArrayIndexing	src8 [ 2 ]		6481346	0					
ANR	6482497	Identifier	src8		6481346	0					
ANR	6482498	PrimaryExpression	2		6481346	1					
ANR	6482499	PrimaryExpression	0xF0		6481346	1					
ANR	6482500	PrimaryExpression	8		6481346	1					
ANR	6482501	InclusiveOrExpression	( src8 [ 4 ] << 4 ) | ( src8 [ 3 ] >> 4 )		6481346	1		|			
ANR	6482502	ShiftExpression	src8 [ 4 ] << 4		6481346	0		<<			
ANR	6482503	ArrayIndexing	src8 [ 4 ]		6481346	0					
ANR	6482504	Identifier	src8		6481346	0					
ANR	6482505	PrimaryExpression	4		6481346	1					
ANR	6482506	PrimaryExpression	4		6481346	1					
ANR	6482507	ShiftExpression	src8 [ 3 ] >> 4		6481346	1		>>			
ANR	6482508	ArrayIndexing	src8 [ 3 ]		6481346	0					
ANR	6482509	Identifier	src8		6481346	0					
ANR	6482510	PrimaryExpression	3		6481346	1					
ANR	6482511	PrimaryExpression	4		6481346	1					
ANR	6482512	ExpressionStatement	src += n * avctx -> channels * 5	417:8:6980:7010	6481346	239	True				
ANR	6482513	AssignmentExpression	src += n * avctx -> channels * 5		6481346	0		+=			
ANR	6482514	Identifier	src		6481346	0					
ANR	6482515	MultiplicativeExpression	n * avctx -> channels * 5		6481346	1		*			
ANR	6482516	Identifier	n		6481346	0					
ANR	6482517	MultiplicativeExpression	avctx -> channels * 5		6481346	1		*			
ANR	6482518	PtrMemberAccess	avctx -> channels		6481346	0					
ANR	6482519	Identifier	avctx		6481346	0					
ANR	6482520	Identifier	channels		6481346	1					
ANR	6482521	PrimaryExpression	5		6481346	1					
ANR	6482522	ExpressionStatement	samples = ( short * ) dst_int32_t	419:8:7021:7052	6481346	240	True				
ANR	6482523	AssignmentExpression	samples = ( short * ) dst_int32_t		6481346	0		=			
ANR	6482524	Identifier	samples		6481346	0					
ANR	6482525	CastExpression	( short * ) dst_int32_t		6481346	1					
ANR	6482526	CastTarget	short *		6481346	0					
ANR	6482527	Identifier	dst_int32_t		6481346	1					
ANR	6482528	BreakStatement	break ;	421:8:7063:7068	6481346	241	True				
ANR	6482529	Label	default :	423:4:7075:7082	6481346	242	True				
ANR	6482530	Identifier	default		6481346	0					
ANR	6482531	ReturnStatement	return - 1 ;	425:8:7093:7102	6481346	243	True				
ANR	6482532	UnaryOperationExpression	- 1		6481346	0					
ANR	6482533	UnaryOperator	-		6481346	0					
ANR	6482534	PrimaryExpression	1		6481346	1					
ANR	6482535	ExpressionStatement	* data_size = ( uint8_t * ) samples - ( uint8_t * ) data	429:4:7116:7165	6481346	25	True				
ANR	6482536	AssignmentExpression	* data_size = ( uint8_t * ) samples - ( uint8_t * ) data		6481346	0		=			
ANR	6482537	UnaryOperationExpression	* data_size		6481346	0					
ANR	6482538	UnaryOperator	*		6481346	0					
ANR	6482539	Identifier	data_size		6481346	1					
ANR	6482540	AdditiveExpression	( uint8_t * ) samples - ( uint8_t * ) data		6481346	1		-			
ANR	6482541	CastExpression	( uint8_t * ) samples		6481346	0					
ANR	6482542	CastTarget	uint8_t *		6481346	0					
ANR	6482543	Identifier	samples		6481346	1					
ANR	6482544	CastExpression	( uint8_t * ) data		6481346	1					
ANR	6482545	CastTarget	uint8_t *		6481346	0					
ANR	6482546	Identifier	data		6481346	1					
ANR	6482547	ReturnStatement	return src - buf ;	431:4:7172:7188	6481346	26	True				
ANR	6482548	AdditiveExpression	src - buf		6481346	0		-			
ANR	6482549	Identifier	src		6481346	0					
ANR	6482550	Identifier	buf		6481346	1					
ANR	6482551	ReturnType	static int		6481346	1					
ANR	6482552	Identifier	pcm_decode_frame		6481346	2					
ANR	6482553	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		6481346	3					
ANR	6482554	Parameter	AVCodecContext * avctx	1:28:28:48	6481346	0	True				
ANR	6482555	ParameterType	AVCodecContext *		6481346	0					
ANR	6482556	Identifier	avctx		6481346	1					
ANR	6482557	Parameter	void * data	3:28:80:89	6481346	1	True				
ANR	6482558	ParameterType	void *		6481346	0					
ANR	6482559	Identifier	data		6481346	1					
ANR	6482560	Parameter	int * data_size	3:40:92:105	6481346	2	True				
ANR	6482561	ParameterType	int *		6481346	0					
ANR	6482562	Identifier	data_size		6481346	1					
ANR	6482563	Parameter	AVPacket * avpkt	5:28:137:151	6481346	3	True				
ANR	6482564	ParameterType	AVPacket *		6481346	0					
ANR	6482565	Identifier	avpkt		6481346	1					
ANR	6482566	CFGEntryNode	ENTRY		6481346		True				
ANR	6482567	CFGExitNode	EXIT		6481346		True				
ANR	6482568	Symbol	* v		6481346						
ANR	6482569	Symbol	data		6481346						
ANR	6482570	Symbol	bytestream_get_be16		6481346						
ANR	6482571	Symbol	FFMIN		6481346						
ANR	6482572	Symbol	avpkt		6481346						
ANR	6482573	Symbol	dst_int32_t		6481346						
ANR	6482574	Symbol	* data_size		6481346						
ANR	6482575	Symbol	* * src ++		6481346						
ANR	6482576	Symbol	avctx -> channels		6481346						
ANR	6482577	Symbol	* avctx -> codec		6481346						
ANR	6482578	Symbol	data_size		6481346						
ANR	6482579	Symbol	* src2		6481346						
ANR	6482580	Symbol	avctx -> sample_fmt		6481346						
ANR	6482581	Symbol	CODEC_ID_PCM_LXF		6481346						
ANR	6482582	Symbol	s -> table		6481346						
ANR	6482583	Symbol	avctx -> codec		6481346						
ANR	6482584	Symbol	av_reverse		6481346						
ANR	6482585	Symbol	buf_size		6481346						
ANR	6482586	Symbol	* * avctx		6481346						
ANR	6482587	Symbol	bytestream_get_be24		6481346						
ANR	6482588	Symbol	* avctx -> channels		6481346						
ANR	6482589	Symbol	* s -> table		6481346						
ANR	6482590	Symbol	dst_int64_t		6481346						
ANR	6482591	Symbol	samples		6481346						
ANR	6482592	Symbol	* src8		6481346						
ANR	6482593	Symbol	bytestream_get_le16		6481346						
ANR	6482594	Symbol	* avctx		6481346						
ANR	6482595	Symbol	* av_reverse		6481346						
ANR	6482596	Symbol	* dstu8 ++		6481346						
ANR	6482597	Symbol	* src ++		6481346						
ANR	6482598	Symbol	dst_uint16_t		6481346						
ANR	6482599	Symbol	avpkt -> data		6481346						
ANR	6482600	Symbol	* * avctx -> codec		6481346						
ANR	6482601	Symbol	* avctx -> codec -> sample_fmts		6481346						
ANR	6482602	Symbol	avctx -> codec_id		6481346						
ANR	6482603	Symbol	avctx -> bits_per_coded_sample		6481346						
ANR	6482604	Symbol	MAX_CHANNELS		6481346						
ANR	6482605	Symbol	dst_int16_t		6481346						
ANR	6482606	Symbol	& src		6481346						
ANR	6482607	Symbol	avctx -> codec -> sample_fmts		6481346						
ANR	6482608	Symbol	sample_size		6481346						
ANR	6482609	Symbol	* src8 ++		6481346						
ANR	6482610	Symbol	* * s		6481346						
ANR	6482611	Symbol	avpkt -> size		6481346						
ANR	6482612	Symbol	avctx		6481346						
ANR	6482613	Symbol	* samples ++		6481346						
ANR	6482614	Symbol	dstu8		6481346						
ANR	6482615	Symbol	* avpkt		6481346						
ANR	6482616	Symbol	src8		6481346						
ANR	6482617	Symbol	av_get_bits_per_sample		6481346						
ANR	6482618	Symbol	c		6481346						
ANR	6482619	Symbol	AV_LOG_ERROR		6481346						
ANR	6482620	Symbol	src		6481346						
ANR	6482621	Symbol	i		6481346						
ANR	6482622	Symbol	CODEC_ID_PCM_DVD		6481346						
ANR	6482623	Symbol	* dst_int32_t ++		6481346						
ANR	6482624	Symbol	avctx -> priv_data		6481346						
ANR	6482625	Symbol	* c		6481346						
ANR	6482626	Symbol	n		6481346						
ANR	6482627	Symbol	EINVAL		6481346						
ANR	6482628	Symbol	avctx -> codec -> id		6481346						
ANR	6482629	Symbol	buf		6481346						
ANR	6482630	Symbol	* * * avctx		6481346						
ANR	6482631	Symbol	s		6481346						
ANR	6482632	Symbol	v		6481346						
ANR	6482633	Symbol	x		6481346						
ANR	6482634	Symbol	src2		6481346						
ANR	6482635	Symbol	AVERROR		6481346						
ANR	6482636	Symbol	dst_uint32_t		6481346						
ANR	6482637	Symbol	* s		6481346						
