command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7307175	File	/home/p4ultr4n/workplace/ReVeal/raw_code/read_mv_component_1.c								
ANR	7307176	Function	read_mv_component	1:0:0:780							
ANR	7307177	FunctionDef	"read_mv_component (VP56RangeCoder * c , const uint8_t * p)"		7307176	0					
ANR	7307178	CompoundStatement		3:0:67:780	7307176	0					
ANR	7307179	IdentifierDeclStatement	"int bit , x = 0 ;"	5:4:74:88	7307176	0	True				
ANR	7307180	IdentifierDecl	bit		7307176	0					
ANR	7307181	IdentifierDeclType	int		7307176	0					
ANR	7307182	Identifier	bit		7307176	1					
ANR	7307183	IdentifierDecl	x = 0		7307176	1					
ANR	7307184	IdentifierDeclType	int		7307176	0					
ANR	7307185	Identifier	x		7307176	1					
ANR	7307186	AssignmentExpression	x = 0		7307176	2		=			
ANR	7307187	Identifier	x		7307176	0					
ANR	7307188	PrimaryExpression	0		7307176	1					
ANR	7307189	IfStatement	"if ( vp56_rac_get_prob_branchy ( c , p [ 0 ] ) )"		7307176	1					
ANR	7307190	Condition	"vp56_rac_get_prob_branchy ( c , p [ 0 ] )"	9:8:101:134	7307176	0	True				
ANR	7307191	CallExpression	"vp56_rac_get_prob_branchy ( c , p [ 0 ] )"		7307176	0					
ANR	7307192	Callee	vp56_rac_get_prob_branchy		7307176	0					
ANR	7307193	Identifier	vp56_rac_get_prob_branchy		7307176	0					
ANR	7307194	ArgumentList	c		7307176	1					
ANR	7307195	Argument	c		7307176	0					
ANR	7307196	Identifier	c		7307176	0					
ANR	7307197	Argument	p [ 0 ]		7307176	1					
ANR	7307198	ArrayIndexing	p [ 0 ]		7307176	0					
ANR	7307199	Identifier	p		7307176	0					
ANR	7307200	PrimaryExpression	0		7307176	1					
ANR	7307201	CompoundStatement		9:8:80:85	7307176	1					
ANR	7307202	IdentifierDeclStatement	int i ;	11:8:148:153	7307176	0	True				
ANR	7307203	IdentifierDecl	i		7307176	0					
ANR	7307204	IdentifierDeclType	int		7307176	0					
ANR	7307205	Identifier	i		7307176	1					
ANR	7307206	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		7307176	1					
ANR	7307207	ForInit	i = 0 ;	15:13:171:176	7307176	0	True				
ANR	7307208	AssignmentExpression	i = 0		7307176	0		=			
ANR	7307209	Identifier	i		7307176	0					
ANR	7307210	PrimaryExpression	0		7307176	1					
ANR	7307211	Condition	i < 3	15:20:178:182	7307176	1	True				
ANR	7307212	RelationalExpression	i < 3		7307176	0		<			
ANR	7307213	Identifier	i		7307176	0					
ANR	7307214	PrimaryExpression	3		7307176	1					
ANR	7307215	PostIncDecOperationExpression	i ++	15:27:185:187	7307176	2	True				
ANR	7307216	Identifier	i		7307176	0					
ANR	7307217	IncDec	++		7307176	1					
ANR	7307218	ExpressionStatement	"x += vp56_rac_get_prob ( c , p [ 9 + i ] ) << i"	17:12:203:243	7307176	3	True				
ANR	7307219	AssignmentExpression	"x += vp56_rac_get_prob ( c , p [ 9 + i ] ) << i"		7307176	0		+=			
ANR	7307220	Identifier	x		7307176	0					
ANR	7307221	ShiftExpression	"vp56_rac_get_prob ( c , p [ 9 + i ] ) << i"		7307176	1		<<			
ANR	7307222	CallExpression	"vp56_rac_get_prob ( c , p [ 9 + i ] )"		7307176	0					
ANR	7307223	Callee	vp56_rac_get_prob		7307176	0					
ANR	7307224	Identifier	vp56_rac_get_prob		7307176	0					
ANR	7307225	ArgumentList	c		7307176	1					
ANR	7307226	Argument	c		7307176	0					
ANR	7307227	Identifier	c		7307176	0					
ANR	7307228	Argument	p [ 9 + i ]		7307176	1					
ANR	7307229	ArrayIndexing	p [ 9 + i ]		7307176	0					
ANR	7307230	Identifier	p		7307176	0					
ANR	7307231	AdditiveExpression	9 + i		7307176	1		+			
ANR	7307232	PrimaryExpression	9		7307176	0					
ANR	7307233	Identifier	i		7307176	1					
ANR	7307234	Identifier	i		7307176	1					
ANR	7307235	ForStatement	for ( i = 9 ; i > 3 ; i -- )		7307176	2					
ANR	7307236	ForInit	i = 9 ;	19:13:259:264	7307176	0	True				
ANR	7307237	AssignmentExpression	i = 9		7307176	0		=			
ANR	7307238	Identifier	i		7307176	0					
ANR	7307239	PrimaryExpression	9		7307176	1					
ANR	7307240	Condition	i > 3	19:20:266:270	7307176	1	True				
ANR	7307241	RelationalExpression	i > 3		7307176	0		>			
ANR	7307242	Identifier	i		7307176	0					
ANR	7307243	PrimaryExpression	3		7307176	1					
ANR	7307244	PostIncDecOperationExpression	i --	19:27:273:275	7307176	2	True				
ANR	7307245	Identifier	i		7307176	0					
ANR	7307246	IncDec	--		7307176	1					
ANR	7307247	ExpressionStatement	"x += vp56_rac_get_prob ( c , p [ 9 + i ] ) << i"	21:12:291:331	7307176	3	True				
ANR	7307248	AssignmentExpression	"x += vp56_rac_get_prob ( c , p [ 9 + i ] ) << i"		7307176	0		+=			
ANR	7307249	Identifier	x		7307176	0					
ANR	7307250	ShiftExpression	"vp56_rac_get_prob ( c , p [ 9 + i ] ) << i"		7307176	1		<<			
ANR	7307251	CallExpression	"vp56_rac_get_prob ( c , p [ 9 + i ] )"		7307176	0					
ANR	7307252	Callee	vp56_rac_get_prob		7307176	0					
ANR	7307253	Identifier	vp56_rac_get_prob		7307176	0					
ANR	7307254	ArgumentList	c		7307176	1					
ANR	7307255	Argument	c		7307176	0					
ANR	7307256	Identifier	c		7307176	0					
ANR	7307257	Argument	p [ 9 + i ]		7307176	1					
ANR	7307258	ArrayIndexing	p [ 9 + i ]		7307176	0					
ANR	7307259	Identifier	p		7307176	0					
ANR	7307260	AdditiveExpression	9 + i		7307176	1		+			
ANR	7307261	PrimaryExpression	9		7307176	0					
ANR	7307262	Identifier	i		7307176	1					
ANR	7307263	Identifier	i		7307176	1					
ANR	7307264	IfStatement	"if ( ! ( x & 0xFFF0 ) || vp56_rac_get_prob ( c , p [ 12 ] ) )"		7307176	3					
ANR	7307265	Condition	"! ( x & 0xFFF0 ) || vp56_rac_get_prob ( c , p [ 12 ] )"	23:12:346:389	7307176	0	True				
ANR	7307266	OrExpression	"! ( x & 0xFFF0 ) || vp56_rac_get_prob ( c , p [ 12 ] )"		7307176	0		||			
ANR	7307267	UnaryOperationExpression	! ( x & 0xFFF0 )		7307176	0					
ANR	7307268	UnaryOperator	!		7307176	0					
ANR	7307269	BitAndExpression	x & 0xFFF0		7307176	1		&			
ANR	7307270	Identifier	x		7307176	0					
ANR	7307271	PrimaryExpression	0xFFF0		7307176	1					
ANR	7307272	CallExpression	"vp56_rac_get_prob ( c , p [ 12 ] )"		7307176	1					
ANR	7307273	Callee	vp56_rac_get_prob		7307176	0					
ANR	7307274	Identifier	vp56_rac_get_prob		7307176	0					
ANR	7307275	ArgumentList	c		7307176	1					
ANR	7307276	Argument	c		7307176	0					
ANR	7307277	Identifier	c		7307176	0					
ANR	7307278	Argument	p [ 12 ]		7307176	1					
ANR	7307279	ArrayIndexing	p [ 12 ]		7307176	0					
ANR	7307280	Identifier	p		7307176	0					
ANR	7307281	PrimaryExpression	12		7307176	1					
ANR	7307282	ExpressionStatement	x += 8	25:12:405:411	7307176	1	True				
ANR	7307283	AssignmentExpression	x += 8		7307176	0		+=			
ANR	7307284	Identifier	x		7307176	0					
ANR	7307285	PrimaryExpression	8		7307176	1					
ANR	7307286	ElseStatement	else		7307176	0					
ANR	7307287	CompoundStatement		29:8:393:418	7307176	0					
ANR	7307288	IdentifierDeclStatement	const uint8_t * ps = p + 2 ;	31:8:461:486	7307176	0	True				
ANR	7307289	IdentifierDecl	* ps = p + 2		7307176	0					
ANR	7307290	IdentifierDeclType	const uint8_t *		7307176	0					
ANR	7307291	Identifier	ps		7307176	1					
ANR	7307292	AssignmentExpression	* ps = p + 2		7307176	2		=			
ANR	7307293	Identifier	ps		7307176	0					
ANR	7307294	AdditiveExpression	p + 2		7307176	1		+			
ANR	7307295	Identifier	p		7307176	0					
ANR	7307296	PrimaryExpression	2		7307176	1					
ANR	7307297	ExpressionStatement	"bit = vp56_rac_get_prob ( c , * ps )"	33:8:497:528	7307176	1	True				
ANR	7307298	AssignmentExpression	"bit = vp56_rac_get_prob ( c , * ps )"		7307176	0		=			
ANR	7307299	Identifier	bit		7307176	0					
ANR	7307300	CallExpression	"vp56_rac_get_prob ( c , * ps )"		7307176	1					
ANR	7307301	Callee	vp56_rac_get_prob		7307176	0					
ANR	7307302	Identifier	vp56_rac_get_prob		7307176	0					
ANR	7307303	ArgumentList	c		7307176	1					
ANR	7307304	Argument	c		7307176	0					
ANR	7307305	Identifier	c		7307176	0					
ANR	7307306	Argument	* ps		7307176	1					
ANR	7307307	UnaryOperationExpression	* ps		7307176	0					
ANR	7307308	UnaryOperator	*		7307176	0					
ANR	7307309	Identifier	ps		7307176	1					
ANR	7307310	ExpressionStatement	ps += 1 + 3 * bit	35:8:539:556	7307176	2	True				
ANR	7307311	AssignmentExpression	ps += 1 + 3 * bit		7307176	0		+=			
ANR	7307312	Identifier	ps		7307176	0					
ANR	7307313	AdditiveExpression	1 + 3 * bit		7307176	1		+			
ANR	7307314	PrimaryExpression	1		7307176	0					
ANR	7307315	MultiplicativeExpression	3 * bit		7307176	1		*			
ANR	7307316	PrimaryExpression	3		7307176	0					
ANR	7307317	Identifier	bit		7307176	1					
ANR	7307318	ExpressionStatement	x += 4 * bit	37:8:567:580	7307176	3	True				
ANR	7307319	AssignmentExpression	x += 4 * bit		7307176	0		+=			
ANR	7307320	Identifier	x		7307176	0					
ANR	7307321	MultiplicativeExpression	4 * bit		7307176	1		*			
ANR	7307322	PrimaryExpression	4		7307176	0					
ANR	7307323	Identifier	bit		7307176	1					
ANR	7307324	ExpressionStatement	"bit = vp56_rac_get_prob ( c , * ps )"	39:8:591:622	7307176	4	True				
ANR	7307325	AssignmentExpression	"bit = vp56_rac_get_prob ( c , * ps )"		7307176	0		=			
ANR	7307326	Identifier	bit		7307176	0					
ANR	7307327	CallExpression	"vp56_rac_get_prob ( c , * ps )"		7307176	1					
ANR	7307328	Callee	vp56_rac_get_prob		7307176	0					
ANR	7307329	Identifier	vp56_rac_get_prob		7307176	0					
ANR	7307330	ArgumentList	c		7307176	1					
ANR	7307331	Argument	c		7307176	0					
ANR	7307332	Identifier	c		7307176	0					
ANR	7307333	Argument	* ps		7307176	1					
ANR	7307334	UnaryOperationExpression	* ps		7307176	0					
ANR	7307335	UnaryOperator	*		7307176	0					
ANR	7307336	Identifier	ps		7307176	1					
ANR	7307337	ExpressionStatement	ps += 1 + bit	41:8:633:646	7307176	5	True				
ANR	7307338	AssignmentExpression	ps += 1 + bit		7307176	0		+=			
ANR	7307339	Identifier	ps		7307176	0					
ANR	7307340	AdditiveExpression	1 + bit		7307176	1		+			
ANR	7307341	PrimaryExpression	1		7307176	0					
ANR	7307342	Identifier	bit		7307176	1					
ANR	7307343	ExpressionStatement	x += 2 * bit	43:8:657:670	7307176	6	True				
ANR	7307344	AssignmentExpression	x += 2 * bit		7307176	0		+=			
ANR	7307345	Identifier	x		7307176	0					
ANR	7307346	MultiplicativeExpression	2 * bit		7307176	1		*			
ANR	7307347	PrimaryExpression	2		7307176	0					
ANR	7307348	Identifier	bit		7307176	1					
ANR	7307349	ExpressionStatement	"x += vp56_rac_get_prob ( c , * ps )"	45:8:681:712	7307176	7	True				
ANR	7307350	AssignmentExpression	"x += vp56_rac_get_prob ( c , * ps )"		7307176	0		+=			
ANR	7307351	Identifier	x		7307176	0					
ANR	7307352	CallExpression	"vp56_rac_get_prob ( c , * ps )"		7307176	1					
ANR	7307353	Callee	vp56_rac_get_prob		7307176	0					
ANR	7307354	Identifier	vp56_rac_get_prob		7307176	0					
ANR	7307355	ArgumentList	c		7307176	1					
ANR	7307356	Argument	c		7307176	0					
ANR	7307357	Identifier	c		7307176	0					
ANR	7307358	Argument	* ps		7307176	1					
ANR	7307359	UnaryOperationExpression	* ps		7307176	0					
ANR	7307360	UnaryOperator	*		7307176	0					
ANR	7307361	Identifier	ps		7307176	1					
ANR	7307362	ReturnStatement	"return ( x && vp56_rac_get_prob ( c , p [ 1 ] ) ) ? - x : x ;"	51:4:728:777	7307176	2	True				
ANR	7307363	ConditionalExpression	"( x && vp56_rac_get_prob ( c , p [ 1 ] ) ) ? - x : x"		7307176	0					
ANR	7307364	Condition	"x && vp56_rac_get_prob ( c , p [ 1 ] )"		7307176	0					
ANR	7307365	AndExpression	"x && vp56_rac_get_prob ( c , p [ 1 ] )"		7307176	0		&&			
ANR	7307366	Identifier	x		7307176	0					
ANR	7307367	CallExpression	"vp56_rac_get_prob ( c , p [ 1 ] )"		7307176	1					
ANR	7307368	Callee	vp56_rac_get_prob		7307176	0					
ANR	7307369	Identifier	vp56_rac_get_prob		7307176	0					
ANR	7307370	ArgumentList	c		7307176	1					
ANR	7307371	Argument	c		7307176	0					
ANR	7307372	Identifier	c		7307176	0					
ANR	7307373	Argument	p [ 1 ]		7307176	1					
ANR	7307374	ArrayIndexing	p [ 1 ]		7307176	0					
ANR	7307375	Identifier	p		7307176	0					
ANR	7307376	PrimaryExpression	1		7307176	1					
ANR	7307377	UnaryOperationExpression	- x		7307176	1					
ANR	7307378	UnaryOperator	-		7307176	0					
ANR	7307379	Identifier	x		7307176	1					
ANR	7307380	Identifier	x		7307176	2					
ANR	7307381	ReturnType	static int		7307176	1					
ANR	7307382	Identifier	read_mv_component		7307176	2					
ANR	7307383	ParameterList	"VP56RangeCoder * c , const uint8_t * p"		7307176	3					
ANR	7307384	Parameter	VP56RangeCoder * c	1:29:29:45	7307176	0	True				
ANR	7307385	ParameterType	VP56RangeCoder *		7307176	0					
ANR	7307386	Identifier	c		7307176	1					
ANR	7307387	Parameter	const uint8_t * p	1:48:48:63	7307176	1	True				
ANR	7307388	ParameterType	const uint8_t *		7307176	0					
ANR	7307389	Identifier	p		7307176	1					
ANR	7307390	CFGEntryNode	ENTRY		7307176		True				
ANR	7307391	CFGExitNode	EXIT		7307176		True				
ANR	7307392	Symbol	p		7307176						
ANR	7307393	Symbol	c		7307176						
ANR	7307394	Symbol	* i		7307176						
ANR	7307395	Symbol	ps		7307176						
ANR	7307396	Symbol	vp56_rac_get_prob_branchy		7307176						
ANR	7307397	Symbol	x		7307176						
ANR	7307398	Symbol	i		7307176						
ANR	7307399	Symbol	* p		7307176						
ANR	7307400	Symbol	* ps		7307176						
ANR	7307401	Symbol	bit		7307176						
ANR	7307402	Symbol	vp56_rac_get_prob		7307176						
