command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2148470	File	/home/p4ultr4n/workplace/ReVeal/raw_code/device_try_init_0.c								
ANR	2148471	Function	device_try_init	1:0:0:2061							
ANR	2148472	FunctionDef	"device_try_init (AVFormatContext * ctx , enum AVPixelFormat pix_fmt , int * width , int * height , uint32_t * desired_format , enum AVCodecID * codec_id)"		2148471	0					
ANR	2148473	CompoundStatement		13:0:295:2061	2148471	0					
ANR	2148474	IdentifierDeclStatement	"int ret , i ;"	15:4:302:312	2148471	0	True				
ANR	2148475	IdentifierDecl	ret		2148471	0					
ANR	2148476	IdentifierDeclType	int		2148471	0					
ANR	2148477	Identifier	ret		2148471	1					
ANR	2148478	IdentifierDecl	i		2148471	1					
ANR	2148479	IdentifierDeclType	int		2148471	0					
ANR	2148480	Identifier	i		2148471	1					
ANR	2148481	ExpressionStatement	"* desired_format = avpriv_fmt_ff2v4l ( pix_fmt , ctx -> video_codec_id )"	19:4:321:386	2148471	1	True				
ANR	2148482	AssignmentExpression	"* desired_format = avpriv_fmt_ff2v4l ( pix_fmt , ctx -> video_codec_id )"		2148471	0		=			
ANR	2148483	UnaryOperationExpression	* desired_format		2148471	0					
ANR	2148484	UnaryOperator	*		2148471	0					
ANR	2148485	Identifier	desired_format		2148471	1					
ANR	2148486	CallExpression	"avpriv_fmt_ff2v4l ( pix_fmt , ctx -> video_codec_id )"		2148471	1					
ANR	2148487	Callee	avpriv_fmt_ff2v4l		2148471	0					
ANR	2148488	Identifier	avpriv_fmt_ff2v4l		2148471	0					
ANR	2148489	ArgumentList	pix_fmt		2148471	1					
ANR	2148490	Argument	pix_fmt		2148471	0					
ANR	2148491	Identifier	pix_fmt		2148471	0					
ANR	2148492	Argument	ctx -> video_codec_id		2148471	1					
ANR	2148493	PtrMemberAccess	ctx -> video_codec_id		2148471	0					
ANR	2148494	Identifier	ctx		2148471	0					
ANR	2148495	Identifier	video_codec_id		2148471	1					
ANR	2148496	IfStatement	if ( * desired_format )		2148471	2					
ANR	2148497	Condition	* desired_format	23:8:399:413	2148471	0	True				
ANR	2148498	UnaryOperationExpression	* desired_format		2148471	0					
ANR	2148499	UnaryOperator	*		2148471	0					
ANR	2148500	Identifier	desired_format		2148471	1					
ANR	2148501	CompoundStatement		11:25:120:120	2148471	1					
ANR	2148502	ExpressionStatement	"ret = device_init ( ctx , width , height , * desired_format )"	25:8:427:481	2148471	0	True				
ANR	2148503	AssignmentExpression	"ret = device_init ( ctx , width , height , * desired_format )"		2148471	0		=			
ANR	2148504	Identifier	ret		2148471	0					
ANR	2148505	CallExpression	"device_init ( ctx , width , height , * desired_format )"		2148471	1					
ANR	2148506	Callee	device_init		2148471	0					
ANR	2148507	Identifier	device_init		2148471	0					
ANR	2148508	ArgumentList	ctx		2148471	1					
ANR	2148509	Argument	ctx		2148471	0					
ANR	2148510	Identifier	ctx		2148471	0					
ANR	2148511	Argument	width		2148471	1					
ANR	2148512	Identifier	width		2148471	0					
ANR	2148513	Argument	height		2148471	2					
ANR	2148514	Identifier	height		2148471	0					
ANR	2148515	Argument	* desired_format		2148471	3					
ANR	2148516	UnaryOperationExpression	* desired_format		2148471	0					
ANR	2148517	UnaryOperator	*		2148471	0					
ANR	2148518	Identifier	desired_format		2148471	1					
ANR	2148519	IfStatement	if ( ret < 0 )		2148471	1					
ANR	2148520	Condition	ret < 0	27:12:496:502	2148471	0	True				
ANR	2148521	RelationalExpression	ret < 0		2148471	0		<			
ANR	2148522	Identifier	ret		2148471	0					
ANR	2148523	PrimaryExpression	0		2148471	1					
ANR	2148524	CompoundStatement		15:21:209:209	2148471	1					
ANR	2148525	ExpressionStatement	* desired_format = 0	29:12:520:539	2148471	0	True				
ANR	2148526	AssignmentExpression	* desired_format = 0		2148471	0		=			
ANR	2148527	UnaryOperationExpression	* desired_format		2148471	0					
ANR	2148528	UnaryOperator	*		2148471	0					
ANR	2148529	Identifier	desired_format		2148471	1					
ANR	2148530	PrimaryExpression	0		2148471	1					
ANR	2148531	IfStatement	if ( ret != AVERROR ( EINVAL ) )		2148471	1					
ANR	2148532	Condition	ret != AVERROR ( EINVAL )	31:16:558:579	2148471	0	True				
ANR	2148533	EqualityExpression	ret != AVERROR ( EINVAL )		2148471	0		!=			
ANR	2148534	Identifier	ret		2148471	0					
ANR	2148535	CallExpression	AVERROR ( EINVAL )		2148471	1					
ANR	2148536	Callee	AVERROR		2148471	0					
ANR	2148537	Identifier	AVERROR		2148471	0					
ANR	2148538	ArgumentList	EINVAL		2148471	1					
ANR	2148539	Argument	EINVAL		2148471	0					
ANR	2148540	Identifier	EINVAL		2148471	0					
ANR	2148541	ReturnStatement	return ret ;	33:16:599:609	2148471	1	True				
ANR	2148542	Identifier	ret		2148471	0					
ANR	2148543	IfStatement	if ( ! * desired_format )		2148471	3					
ANR	2148544	Condition	! * desired_format	41:8:640:655	2148471	0	True				
ANR	2148545	UnaryOperationExpression	! * desired_format		2148471	0					
ANR	2148546	UnaryOperator	!		2148471	0					
ANR	2148547	UnaryOperationExpression	* desired_format		2148471	1					
ANR	2148548	UnaryOperator	*		2148471	0					
ANR	2148549	Identifier	desired_format		2148471	1					
ANR	2148550	CompoundStatement		29:26:362:362	2148471	1					
ANR	2148551	ForStatement	for ( i = 0 ; avpriv_fmt_conversion_table [ i ] . codec_id != AV_CODEC_ID_NONE ; i ++ )		2148471	0					
ANR	2148552	ForInit	i = 0 ;	43:13:674:679	2148471	0	True				
ANR	2148553	AssignmentExpression	i = 0		2148471	0		=			
ANR	2148554	Identifier	i		2148471	0					
ANR	2148555	PrimaryExpression	0		2148471	1					
ANR	2148556	Condition	avpriv_fmt_conversion_table [ i ] . codec_id != AV_CODEC_ID_NONE	43:20:681:739	2148471	1	True				
ANR	2148557	EqualityExpression	avpriv_fmt_conversion_table [ i ] . codec_id != AV_CODEC_ID_NONE		2148471	0		!=			
ANR	2148558	MemberAccess	avpriv_fmt_conversion_table [ i ] . codec_id		2148471	0					
ANR	2148559	ArrayIndexing	avpriv_fmt_conversion_table [ i ]		2148471	0					
ANR	2148560	Identifier	avpriv_fmt_conversion_table		2148471	0					
ANR	2148561	Identifier	i		2148471	1					
ANR	2148562	Identifier	codec_id		2148471	1					
ANR	2148563	Identifier	AV_CODEC_ID_NONE		2148471	1					
ANR	2148564	PostIncDecOperationExpression	i ++	43:81:742:744	2148471	2	True				
ANR	2148565	Identifier	i		2148471	0					
ANR	2148566	IncDec	++		2148471	1					
ANR	2148567	CompoundStatement		31:86:451:451	2148471	3					
ANR	2148568	IfStatement	if ( ctx -> video_codec_id == AV_CODEC_ID_NONE || avpriv_fmt_conversion_table [ i ] . codec_id == ctx -> video_codec_id )		2148471	0					
ANR	2148569	Condition	ctx -> video_codec_id == AV_CODEC_ID_NONE || avpriv_fmt_conversion_table [ i ] . codec_id == ctx -> video_codec_id	45:16:766:887	2148471	0	True				
ANR	2148570	OrExpression	ctx -> video_codec_id == AV_CODEC_ID_NONE || avpriv_fmt_conversion_table [ i ] . codec_id == ctx -> video_codec_id		2148471	0		||			
ANR	2148571	EqualityExpression	ctx -> video_codec_id == AV_CODEC_ID_NONE		2148471	0		==			
ANR	2148572	PtrMemberAccess	ctx -> video_codec_id		2148471	0					
ANR	2148573	Identifier	ctx		2148471	0					
ANR	2148574	Identifier	video_codec_id		2148471	1					
ANR	2148575	Identifier	AV_CODEC_ID_NONE		2148471	1					
ANR	2148576	EqualityExpression	avpriv_fmt_conversion_table [ i ] . codec_id == ctx -> video_codec_id		2148471	1		==			
ANR	2148577	MemberAccess	avpriv_fmt_conversion_table [ i ] . codec_id		2148471	0					
ANR	2148578	ArrayIndexing	avpriv_fmt_conversion_table [ i ]		2148471	0					
ANR	2148579	Identifier	avpriv_fmt_conversion_table		2148471	0					
ANR	2148580	Identifier	i		2148471	1					
ANR	2148581	Identifier	codec_id		2148471	1					
ANR	2148582	PtrMemberAccess	ctx -> video_codec_id		2148471	1					
ANR	2148583	Identifier	ctx		2148471	0					
ANR	2148584	Identifier	video_codec_id		2148471	1					
ANR	2148585	CompoundStatement		35:80:594:594	2148471	1					
ANR	2148586	ExpressionStatement	"av_log ( ctx , AV_LOG_DEBUG , ""Trying to set codec:%s pix_fmt:%s\\n"" , avcodec_get_name ( avpriv_fmt_conversion_table [ i ] . codec_id ) , ( char * ) av_x_if_null ( av_get_pix_fmt_name ( avpriv_fmt_conversion_table [ i ] . ff_fmt ) , ""none"" ) )"	49:16:909:1170	2148471	0	True				
ANR	2148587	CallExpression	"av_log ( ctx , AV_LOG_DEBUG , ""Trying to set codec:%s pix_fmt:%s\\n"" , avcodec_get_name ( avpriv_fmt_conversion_table [ i ] . codec_id ) , ( char * ) av_x_if_null ( av_get_pix_fmt_name ( avpriv_fmt_conversion_table [ i ] . ff_fmt ) , ""none"" ) )"		2148471	0					
ANR	2148588	Callee	av_log		2148471	0					
ANR	2148589	Identifier	av_log		2148471	0					
ANR	2148590	ArgumentList	ctx		2148471	1					
ANR	2148591	Argument	ctx		2148471	0					
ANR	2148592	Identifier	ctx		2148471	0					
ANR	2148593	Argument	AV_LOG_DEBUG		2148471	1					
ANR	2148594	Identifier	AV_LOG_DEBUG		2148471	0					
ANR	2148595	Argument	"""Trying to set codec:%s pix_fmt:%s\\n"""		2148471	2					
ANR	2148596	PrimaryExpression	"""Trying to set codec:%s pix_fmt:%s\\n"""		2148471	0					
ANR	2148597	Argument	avcodec_get_name ( avpriv_fmt_conversion_table [ i ] . codec_id )		2148471	3					
ANR	2148598	CallExpression	avcodec_get_name ( avpriv_fmt_conversion_table [ i ] . codec_id )		2148471	0					
ANR	2148599	Callee	avcodec_get_name		2148471	0					
ANR	2148600	Identifier	avcodec_get_name		2148471	0					
ANR	2148601	ArgumentList	avpriv_fmt_conversion_table [ i ] . codec_id		2148471	1					
ANR	2148602	Argument	avpriv_fmt_conversion_table [ i ] . codec_id		2148471	0					
ANR	2148603	MemberAccess	avpriv_fmt_conversion_table [ i ] . codec_id		2148471	0					
ANR	2148604	ArrayIndexing	avpriv_fmt_conversion_table [ i ]		2148471	0					
ANR	2148605	Identifier	avpriv_fmt_conversion_table		2148471	0					
ANR	2148606	Identifier	i		2148471	1					
ANR	2148607	Identifier	codec_id		2148471	1					
ANR	2148608	Argument	"( char * ) av_x_if_null ( av_get_pix_fmt_name ( avpriv_fmt_conversion_table [ i ] . ff_fmt ) , ""none"" )"		2148471	4					
ANR	2148609	CastExpression	"( char * ) av_x_if_null ( av_get_pix_fmt_name ( avpriv_fmt_conversion_table [ i ] . ff_fmt ) , ""none"" )"		2148471	0					
ANR	2148610	CastTarget	char *		2148471	0					
ANR	2148611	CallExpression	"av_x_if_null ( av_get_pix_fmt_name ( avpriv_fmt_conversion_table [ i ] . ff_fmt ) , ""none"" )"		2148471	1					
ANR	2148612	Callee	av_x_if_null		2148471	0					
ANR	2148613	Identifier	av_x_if_null		2148471	0					
ANR	2148614	ArgumentList	av_get_pix_fmt_name ( avpriv_fmt_conversion_table [ i ] . ff_fmt )		2148471	1					
ANR	2148615	Argument	av_get_pix_fmt_name ( avpriv_fmt_conversion_table [ i ] . ff_fmt )		2148471	0					
ANR	2148616	CallExpression	av_get_pix_fmt_name ( avpriv_fmt_conversion_table [ i ] . ff_fmt )		2148471	0					
ANR	2148617	Callee	av_get_pix_fmt_name		2148471	0					
ANR	2148618	Identifier	av_get_pix_fmt_name		2148471	0					
ANR	2148619	ArgumentList	avpriv_fmt_conversion_table [ i ] . ff_fmt		2148471	1					
ANR	2148620	Argument	avpriv_fmt_conversion_table [ i ] . ff_fmt		2148471	0					
ANR	2148621	MemberAccess	avpriv_fmt_conversion_table [ i ] . ff_fmt		2148471	0					
ANR	2148622	ArrayIndexing	avpriv_fmt_conversion_table [ i ]		2148471	0					
ANR	2148623	Identifier	avpriv_fmt_conversion_table		2148471	0					
ANR	2148624	Identifier	i		2148471	1					
ANR	2148625	Identifier	ff_fmt		2148471	1					
ANR	2148626	Argument	"""none"""		2148471	1					
ANR	2148627	PrimaryExpression	"""none"""		2148471	0					
ANR	2148628	ExpressionStatement	* desired_format = avpriv_fmt_conversion_table [ i ] . v4l2_fmt	57:16:1191:1248	2148471	1	True				
ANR	2148629	AssignmentExpression	* desired_format = avpriv_fmt_conversion_table [ i ] . v4l2_fmt		2148471	0		=			
ANR	2148630	UnaryOperationExpression	* desired_format		2148471	0					
ANR	2148631	UnaryOperator	*		2148471	0					
ANR	2148632	Identifier	desired_format		2148471	1					
ANR	2148633	MemberAccess	avpriv_fmt_conversion_table [ i ] . v4l2_fmt		2148471	1					
ANR	2148634	ArrayIndexing	avpriv_fmt_conversion_table [ i ]		2148471	0					
ANR	2148635	Identifier	avpriv_fmt_conversion_table		2148471	0					
ANR	2148636	Identifier	i		2148471	1					
ANR	2148637	Identifier	v4l2_fmt		2148471	1					
ANR	2148638	ExpressionStatement	"ret = device_init ( ctx , width , height , * desired_format )"	59:16:1267:1321	2148471	2	True				
ANR	2148639	AssignmentExpression	"ret = device_init ( ctx , width , height , * desired_format )"		2148471	0		=			
ANR	2148640	Identifier	ret		2148471	0					
ANR	2148641	CallExpression	"device_init ( ctx , width , height , * desired_format )"		2148471	1					
ANR	2148642	Callee	device_init		2148471	0					
ANR	2148643	Identifier	device_init		2148471	0					
ANR	2148644	ArgumentList	ctx		2148471	1					
ANR	2148645	Argument	ctx		2148471	0					
ANR	2148646	Identifier	ctx		2148471	0					
ANR	2148647	Argument	width		2148471	1					
ANR	2148648	Identifier	width		2148471	0					
ANR	2148649	Argument	height		2148471	2					
ANR	2148650	Identifier	height		2148471	0					
ANR	2148651	Argument	* desired_format		2148471	3					
ANR	2148652	UnaryOperationExpression	* desired_format		2148471	0					
ANR	2148653	UnaryOperator	*		2148471	0					
ANR	2148654	Identifier	desired_format		2148471	1					
ANR	2148655	IfStatement	if ( ret >= 0 )		2148471	3					
ANR	2148656	Condition	ret >= 0	61:20:1344:1351	2148471	0	True				
ANR	2148657	RelationalExpression	ret >= 0		2148471	0		>=			
ANR	2148658	Identifier	ret		2148471	0					
ANR	2148659	PrimaryExpression	0		2148471	1					
ANR	2148660	BreakStatement	break ;	63:20:1375:1380	2148471	1	True				
ANR	2148661	ElseStatement	else		2148471	0					
ANR	2148662	IfStatement	if ( ret != AVERROR ( EINVAL ) )		2148471	0					
ANR	2148663	Condition	ret != AVERROR ( EINVAL )	65:25:1408:1429	2148471	0	True				
ANR	2148664	EqualityExpression	ret != AVERROR ( EINVAL )		2148471	0		!=			
ANR	2148665	Identifier	ret		2148471	0					
ANR	2148666	CallExpression	AVERROR ( EINVAL )		2148471	1					
ANR	2148667	Callee	AVERROR		2148471	0					
ANR	2148668	Identifier	AVERROR		2148471	0					
ANR	2148669	ArgumentList	EINVAL		2148471	1					
ANR	2148670	Argument	EINVAL		2148471	0					
ANR	2148671	Identifier	EINVAL		2148471	0					
ANR	2148672	ReturnStatement	return ret ;	67:20:1453:1463	2148471	1	True				
ANR	2148673	Identifier	ret		2148471	0					
ANR	2148674	ExpressionStatement	* desired_format = 0	69:16:1482:1501	2148471	4	True				
ANR	2148675	AssignmentExpression	* desired_format = 0		2148471	0		=			
ANR	2148676	UnaryOperationExpression	* desired_format		2148471	0					
ANR	2148677	UnaryOperator	*		2148471	0					
ANR	2148678	Identifier	desired_format		2148471	1					
ANR	2148679	PrimaryExpression	0		2148471	1					
ANR	2148680	IfStatement	if ( * desired_format == 0 )		2148471	1					
ANR	2148681	Condition	* desired_format == 0	77:12:1544:1563	2148471	0	True				
ANR	2148682	EqualityExpression	* desired_format == 0		2148471	0		==			
ANR	2148683	UnaryOperationExpression	* desired_format		2148471	0					
ANR	2148684	UnaryOperator	*		2148471	0					
ANR	2148685	Identifier	desired_format		2148471	1					
ANR	2148686	PrimaryExpression	0		2148471	1					
ANR	2148687	CompoundStatement		65:34:1270:1270	2148471	1					
ANR	2148688	Statement	av_log	79:12:1581:1586	2148471	0	True				
ANR	2148689	Statement	(	79:18:1587:1587	2148471	1	True				
ANR	2148690	Statement	ctx	79:19:1588:1590	2148471	2	True				
ANR	2148691	Statement	","	79:22:1591:1591	2148471	3	True				
ANR	2148692	Statement	AV_LOG_ERROR	79:24:1593:1604	2148471	4	True				
ANR	2148693	Statement	","	79:36:1605:1605	2148471	5	True				
ANR	2148694	Statement	"""Cannot find a proper format for """	79:38:1607:1640	2148471	6	True				
ANR	2148695	Statement	"""codec '%s' (id %d), pixel format '%s' (id %d)\\n"""	81:19:1662:1710	2148471	7	True				
ANR	2148696	Statement	","	81:68:1711:1711	2148471	8	True				
ANR	2148697	Statement	avcodec_get_name	83:19:1733:1748	2148471	9	True				
ANR	2148698	Statement	(	83:35:1749:1749	2148471	10	True				
ANR	2148699	Statement	ctx	83:36:1750:1752	2148471	11	True				
ANR	2148700	Statement	->	83:39:1753:1754	2148471	12	True				
ANR	2148701	Statement	video_codec_id	83:41:1755:1768	2148471	13	True				
ANR	2148702	Statement	)	83:55:1769:1769	2148471	14	True				
ANR	2148703	Statement	","	83:56:1770:1770	2148471	15	True				
ANR	2148704	Statement	ctx	83:58:1772:1774	2148471	16	True				
ANR	2148705	Statement	->	83:61:1775:1776	2148471	17	True				
ANR	2148706	Statement	video_codec_id	83:63:1777:1790	2148471	18	True				
ANR	2148707	Statement	","	83:77:1791:1791	2148471	19	True				
ANR	2148708	Statement	(	85:19:1813:1813	2148471	20	True				
ANR	2148709	Statement	char	85:20:1814:1817	2148471	21	True				
ANR	2148710	Statement	*	85:25:1819:1819	2148471	22	True				
ANR	2148711	Statement	)	85:26:1820:1820	2148471	23	True				
ANR	2148712	Statement	av_x_if_null	85:27:1821:1832	2148471	24	True				
ANR	2148713	Statement	(	85:39:1833:1833	2148471	25	True				
ANR	2148714	Statement	av_get_pix_fmt_name	85:40:1834:1852	2148471	26	True				
ANR	2148715	Statement	(	85:59:1853:1853	2148471	27	True				
ANR	2148716	Statement	pix_fmt	85:60:1854:1860	2148471	28	True				
ANR	2148717	Statement	)	85:67:1861:1861	2148471	29	True				
ANR	2148718	Statement	","	85:68:1862:1862	2148471	30	True				
ANR	2148719	Statement	"""none"""	85:70:1864:1869	2148471	31	True				
ANR	2148720	Statement	)	85:76:1870:1870	2148471	32	True				
ANR	2148721	Statement	","	85:77:1871:1871	2148471	33	True				
ANR	2148722	Statement	pix_fmt	85:79:1873:1879	2148471	34	True				
ANR	2148723	Statement	)	85:86:1880:1880	2148471	35	True				
ANR	2148724	ExpressionStatement		85:87:1881:1881	2148471	36	True				
ANR	2148725	ExpressionStatement	ret = AVERROR ( EINVAL )	87:12:1896:1917	2148471	37	True				
ANR	2148726	AssignmentExpression	ret = AVERROR ( EINVAL )		2148471	0		=			
ANR	2148727	Identifier	ret		2148471	0					
ANR	2148728	CallExpression	AVERROR ( EINVAL )		2148471	1					
ANR	2148729	Callee	AVERROR		2148471	0					
ANR	2148730	Identifier	AVERROR		2148471	0					
ANR	2148731	ArgumentList	EINVAL		2148471	1					
ANR	2148732	Argument	EINVAL		2148471	0					
ANR	2148733	Identifier	EINVAL		2148471	0					
ANR	2148734	ExpressionStatement	* codec_id = avpriv_fmt_v4l2codec ( * desired_format )	95:4:1944:1993	2148471	4	True				
ANR	2148735	AssignmentExpression	* codec_id = avpriv_fmt_v4l2codec ( * desired_format )		2148471	0		=			
ANR	2148736	UnaryOperationExpression	* codec_id		2148471	0					
ANR	2148737	UnaryOperator	*		2148471	0					
ANR	2148738	Identifier	codec_id		2148471	1					
ANR	2148739	CallExpression	avpriv_fmt_v4l2codec ( * desired_format )		2148471	1					
ANR	2148740	Callee	avpriv_fmt_v4l2codec		2148471	0					
ANR	2148741	Identifier	avpriv_fmt_v4l2codec		2148471	0					
ANR	2148742	ArgumentList	* desired_format		2148471	1					
ANR	2148743	Argument	* desired_format		2148471	0					
ANR	2148744	UnaryOperationExpression	* desired_format		2148471	0					
ANR	2148745	UnaryOperator	*		2148471	0					
ANR	2148746	Identifier	desired_format		2148471	1					
ANR	2148747	ExpressionStatement	av_assert0 ( * codec_id != AV_CODEC_ID_NONE )	97:4:2000:2041	2148471	5	True				
ANR	2148748	CallExpression	av_assert0 ( * codec_id != AV_CODEC_ID_NONE )		2148471	0					
ANR	2148749	Callee	av_assert0		2148471	0					
ANR	2148750	Identifier	av_assert0		2148471	0					
ANR	2148751	ArgumentList	* codec_id != AV_CODEC_ID_NONE		2148471	1					
ANR	2148752	Argument	* codec_id != AV_CODEC_ID_NONE		2148471	0					
ANR	2148753	EqualityExpression	* codec_id != AV_CODEC_ID_NONE		2148471	0		!=			
ANR	2148754	UnaryOperationExpression	* codec_id		2148471	0					
ANR	2148755	UnaryOperator	*		2148471	0					
ANR	2148756	Identifier	codec_id		2148471	1					
ANR	2148757	Identifier	AV_CODEC_ID_NONE		2148471	1					
ANR	2148758	ReturnStatement	return ret ;	99:4:2048:2058	2148471	6	True				
ANR	2148759	Identifier	ret		2148471	0					
ANR	2148760	ReturnType	static int		2148471	1					
ANR	2148761	Identifier	device_try_init		2148471	2					
ANR	2148762	ParameterList	"AVFormatContext * ctx , enum AVPixelFormat pix_fmt , int * width , int * height , uint32_t * desired_format , enum AVCodecID * codec_id"		2148471	3					
ANR	2148763	Parameter	AVFormatContext * ctx	1:27:27:46	2148471	0	True				
ANR	2148764	ParameterType	AVFormatContext *		2148471	0					
ANR	2148765	Identifier	ctx		2148471	1					
ANR	2148766	Parameter	enum AVPixelFormat pix_fmt	3:27:77:102	2148471	1	True				
ANR	2148767	ParameterType	enum AVPixelFormat		2148471	0					
ANR	2148768	Identifier	pix_fmt		2148471	1					
ANR	2148769	Parameter	int * width	5:27:133:142	2148471	2	True				
ANR	2148770	ParameterType	int *		2148471	0					
ANR	2148771	Identifier	width		2148471	1					
ANR	2148772	Parameter	int * height	7:27:173:183	2148471	3	True				
ANR	2148773	ParameterType	int *		2148471	0					
ANR	2148774	Identifier	height		2148471	1					
ANR	2148775	Parameter	uint32_t * desired_format	9:27:214:237	2148471	4	True				
ANR	2148776	ParameterType	uint32_t *		2148471	0					
ANR	2148777	Identifier	desired_format		2148471	1					
ANR	2148778	Parameter	enum AVCodecID * codec_id	11:27:268:291	2148471	5	True				
ANR	2148779	ParameterType	enum AVCodecID *		2148471	0					
ANR	2148780	Identifier	codec_id		2148471	1					
ANR	2148781	CFGEntryNode	ENTRY		2148471		True				
ANR	2148782	CFGExitNode	EXIT		2148471		True				
ANR	2148783	Symbol	pix_fmt		2148471						
ANR	2148784	Symbol	* avpriv_fmt_conversion_table		2148471						
ANR	2148785	Symbol	avpriv_fmt_conversion_table		2148471						
ANR	2148786	Symbol	av_x_if_null		2148471						
ANR	2148787	Symbol	desired_format		2148471						
ANR	2148788	Symbol	avpriv_fmt_ff2v4l		2148471						
ANR	2148789	Symbol	avpriv_fmt_conversion_table [ i ] . ff_fmt		2148471						
ANR	2148790	Symbol	device_init		2148471						
ANR	2148791	Symbol	av_get_pix_fmt_name		2148471						
ANR	2148792	Symbol	AV_LOG_DEBUG		2148471						
ANR	2148793	Symbol	height		2148471						
ANR	2148794	Symbol	avpriv_fmt_conversion_table [ i ] . codec_id		2148471						
ANR	2148795	Symbol	ret		2148471						
ANR	2148796	Symbol	avcodec_get_name		2148471						
ANR	2148797	Symbol	ctx		2148471						
ANR	2148798	Symbol	i		2148471						
ANR	2148799	Symbol	avpriv_fmt_conversion_table [ i ] . v4l2_fmt		2148471						
ANR	2148800	Symbol	ctx -> video_codec_id		2148471						
ANR	2148801	Symbol	codec_id		2148471						
ANR	2148802	Symbol	* ctx		2148471						
ANR	2148803	Symbol	EINVAL		2148471						
ANR	2148804	Symbol	avpriv_fmt_v4l2codec		2148471						
ANR	2148805	Symbol	* i		2148471						
ANR	2148806	Symbol	AV_CODEC_ID_NONE		2148471						
ANR	2148807	Symbol	* desired_format		2148471						
ANR	2148808	Symbol	width		2148471						
ANR	2148809	Symbol	AVERROR		2148471						
ANR	2148810	Symbol	* codec_id		2148471						
