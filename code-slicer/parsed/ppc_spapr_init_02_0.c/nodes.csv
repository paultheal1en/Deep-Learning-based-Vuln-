command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6645230	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ppc_spapr_init_02_0.c								
ANR	6645231	Function	ppc_spapr_init	1:0:0:10632							
ANR	6645232	FunctionDef	ppc_spapr_init (MachineState * machine)		6645231	0					
ANR	6645233	CompoundStatement		3:0:51:10632	6645231	0					
ANR	6645234	IdentifierDeclStatement	sPAPRMachineState * spapr = SPAPR_MACHINE ( machine ) ;	5:4:58:107	6645231	0	True				
ANR	6645235	IdentifierDecl	* spapr = SPAPR_MACHINE ( machine )		6645231	0					
ANR	6645236	IdentifierDeclType	sPAPRMachineState *		6645231	0					
ANR	6645237	Identifier	spapr		6645231	1					
ANR	6645238	AssignmentExpression	* spapr = SPAPR_MACHINE ( machine )		6645231	2		=			
ANR	6645239	Identifier	spapr		6645231	0					
ANR	6645240	CallExpression	SPAPR_MACHINE ( machine )		6645231	1					
ANR	6645241	Callee	SPAPR_MACHINE		6645231	0					
ANR	6645242	Identifier	SPAPR_MACHINE		6645231	0					
ANR	6645243	ArgumentList	machine		6645231	1					
ANR	6645244	Argument	machine		6645231	0					
ANR	6645245	Identifier	machine		6645231	0					
ANR	6645246	IdentifierDeclStatement	sPAPRMachineClass * smc = SPAPR_MACHINE_GET_CLASS ( machine ) ;	7:4:114:171	6645231	1	True				
ANR	6645247	IdentifierDecl	* smc = SPAPR_MACHINE_GET_CLASS ( machine )		6645231	0					
ANR	6645248	IdentifierDeclType	sPAPRMachineClass *		6645231	0					
ANR	6645249	Identifier	smc		6645231	1					
ANR	6645250	AssignmentExpression	* smc = SPAPR_MACHINE_GET_CLASS ( machine )		6645231	2		=			
ANR	6645251	Identifier	smc		6645231	0					
ANR	6645252	CallExpression	SPAPR_MACHINE_GET_CLASS ( machine )		6645231	1					
ANR	6645253	Callee	SPAPR_MACHINE_GET_CLASS		6645231	0					
ANR	6645254	Identifier	SPAPR_MACHINE_GET_CLASS		6645231	0					
ANR	6645255	ArgumentList	machine		6645231	1					
ANR	6645256	Argument	machine		6645231	0					
ANR	6645257	Identifier	machine		6645231	0					
ANR	6645258	IdentifierDeclStatement	const char * kernel_filename = machine -> kernel_filename ;	9:4:178:232	6645231	2	True				
ANR	6645259	IdentifierDecl	* kernel_filename = machine -> kernel_filename		6645231	0					
ANR	6645260	IdentifierDeclType	const char *		6645231	0					
ANR	6645261	Identifier	kernel_filename		6645231	1					
ANR	6645262	AssignmentExpression	* kernel_filename = machine -> kernel_filename		6645231	2		=			
ANR	6645263	Identifier	kernel_filename		6645231	0					
ANR	6645264	PtrMemberAccess	machine -> kernel_filename		6645231	1					
ANR	6645265	Identifier	machine		6645231	0					
ANR	6645266	Identifier	kernel_filename		6645231	1					
ANR	6645267	IdentifierDeclStatement	const char * kernel_cmdline = machine -> kernel_cmdline ;	11:4:239:291	6645231	3	True				
ANR	6645268	IdentifierDecl	* kernel_cmdline = machine -> kernel_cmdline		6645231	0					
ANR	6645269	IdentifierDeclType	const char *		6645231	0					
ANR	6645270	Identifier	kernel_cmdline		6645231	1					
ANR	6645271	AssignmentExpression	* kernel_cmdline = machine -> kernel_cmdline		6645231	2		=			
ANR	6645272	Identifier	kernel_cmdline		6645231	0					
ANR	6645273	PtrMemberAccess	machine -> kernel_cmdline		6645231	1					
ANR	6645274	Identifier	machine		6645231	0					
ANR	6645275	Identifier	kernel_cmdline		6645231	1					
ANR	6645276	IdentifierDeclStatement	const char * initrd_filename = machine -> initrd_filename ;	13:4:298:352	6645231	4	True				
ANR	6645277	IdentifierDecl	* initrd_filename = machine -> initrd_filename		6645231	0					
ANR	6645278	IdentifierDeclType	const char *		6645231	0					
ANR	6645279	Identifier	initrd_filename		6645231	1					
ANR	6645280	AssignmentExpression	* initrd_filename = machine -> initrd_filename		6645231	2		=			
ANR	6645281	Identifier	initrd_filename		6645231	0					
ANR	6645282	PtrMemberAccess	machine -> initrd_filename		6645231	1					
ANR	6645283	Identifier	machine		6645231	0					
ANR	6645284	Identifier	initrd_filename		6645231	1					
ANR	6645285	IdentifierDeclStatement	PowerPCCPU * cpu ;	15:4:359:374	6645231	5	True				
ANR	6645286	IdentifierDecl	* cpu		6645231	0					
ANR	6645287	IdentifierDeclType	PowerPCCPU *		6645231	0					
ANR	6645288	Identifier	cpu		6645231	1					
ANR	6645289	IdentifierDeclStatement	PCIHostState * phb ;	17:4:381:398	6645231	6	True				
ANR	6645290	IdentifierDecl	* phb		6645231	0					
ANR	6645291	IdentifierDeclType	PCIHostState *		6645231	0					
ANR	6645292	Identifier	phb		6645231	1					
ANR	6645293	IdentifierDeclStatement	int i ;	19:4:405:410	6645231	7	True				
ANR	6645294	IdentifierDecl	i		6645231	0					
ANR	6645295	IdentifierDeclType	int		6645231	0					
ANR	6645296	Identifier	i		6645231	1					
ANR	6645297	IdentifierDeclStatement	MemoryRegion * sysmem = get_system_memory ( ) ;	21:4:417:459	6645231	8	True				
ANR	6645298	IdentifierDecl	* sysmem = get_system_memory ( )		6645231	0					
ANR	6645299	IdentifierDeclType	MemoryRegion *		6645231	0					
ANR	6645300	Identifier	sysmem		6645231	1					
ANR	6645301	AssignmentExpression	* sysmem = get_system_memory ( )		6645231	2		=			
ANR	6645302	Identifier	sysmem		6645231	0					
ANR	6645303	CallExpression	get_system_memory ( )		6645231	1					
ANR	6645304	Callee	get_system_memory		6645231	0					
ANR	6645305	Identifier	get_system_memory		6645231	0					
ANR	6645306	ArgumentList			6645231	1					
ANR	6645307	IdentifierDeclStatement	"MemoryRegion * ram = g_new ( MemoryRegion , 1 ) ;"	23:4:466:508	6645231	9	True				
ANR	6645308	IdentifierDecl	"* ram = g_new ( MemoryRegion , 1 )"		6645231	0					
ANR	6645309	IdentifierDeclType	MemoryRegion *		6645231	0					
ANR	6645310	Identifier	ram		6645231	1					
ANR	6645311	AssignmentExpression	"* ram = g_new ( MemoryRegion , 1 )"		6645231	2		=			
ANR	6645312	Identifier	ram		6645231	0					
ANR	6645313	CallExpression	"g_new ( MemoryRegion , 1 )"		6645231	1					
ANR	6645314	Callee	g_new		6645231	0					
ANR	6645315	Identifier	g_new		6645231	0					
ANR	6645316	ArgumentList	MemoryRegion		6645231	1					
ANR	6645317	Argument	MemoryRegion		6645231	0					
ANR	6645318	Identifier	MemoryRegion		6645231	0					
ANR	6645319	Argument	1		6645231	1					
ANR	6645320	PrimaryExpression	1		6645231	0					
ANR	6645321	IdentifierDeclStatement	MemoryRegion * rma_region ;	25:4:515:539	6645231	10	True				
ANR	6645322	IdentifierDecl	* rma_region		6645231	0					
ANR	6645323	IdentifierDeclType	MemoryRegion *		6645231	0					
ANR	6645324	Identifier	rma_region		6645231	1					
ANR	6645325	IdentifierDeclStatement	void * rma = NULL ;	27:4:546:562	6645231	11	True				
ANR	6645326	IdentifierDecl	* rma = NULL		6645231	0					
ANR	6645327	IdentifierDeclType	void *		6645231	0					
ANR	6645328	Identifier	rma		6645231	1					
ANR	6645329	AssignmentExpression	* rma = NULL		6645231	2		=			
ANR	6645330	Identifier	NULL		6645231	0					
ANR	6645331	Identifier	NULL		6645231	1					
ANR	6645332	IdentifierDeclStatement	hwaddr rma_alloc_size ;	29:4:569:590	6645231	12	True				
ANR	6645333	IdentifierDecl	rma_alloc_size		6645231	0					
ANR	6645334	IdentifierDeclType	hwaddr		6645231	0					
ANR	6645335	Identifier	rma_alloc_size		6645231	1					
ANR	6645336	IdentifierDeclStatement	hwaddr node0_size = spapr_node0_size ( ) ;	31:4:597:635	6645231	13	True				
ANR	6645337	IdentifierDecl	node0_size = spapr_node0_size ( )		6645231	0					
ANR	6645338	IdentifierDeclType	hwaddr		6645231	0					
ANR	6645339	Identifier	node0_size		6645231	1					
ANR	6645340	AssignmentExpression	node0_size = spapr_node0_size ( )		6645231	2		=			
ANR	6645341	Identifier	node0_size		6645231	0					
ANR	6645342	CallExpression	spapr_node0_size ( )		6645231	1					
ANR	6645343	Callee	spapr_node0_size		6645231	0					
ANR	6645344	Identifier	spapr_node0_size		6645231	0					
ANR	6645345	ArgumentList			6645231	1					
ANR	6645346	IdentifierDeclStatement	uint32_t initrd_base = 0 ;	33:4:642:666	6645231	14	True				
ANR	6645347	IdentifierDecl	initrd_base = 0		6645231	0					
ANR	6645348	IdentifierDeclType	uint32_t		6645231	0					
ANR	6645349	Identifier	initrd_base		6645231	1					
ANR	6645350	AssignmentExpression	initrd_base = 0		6645231	2		=			
ANR	6645351	Identifier	initrd_base		6645231	0					
ANR	6645352	PrimaryExpression	0		6645231	1					
ANR	6645353	IdentifierDeclStatement	"long kernel_size = 0 , initrd_size = 0 ;"	35:4:673:710	6645231	15	True				
ANR	6645354	IdentifierDecl	kernel_size = 0		6645231	0					
ANR	6645355	IdentifierDeclType	long		6645231	0					
ANR	6645356	Identifier	kernel_size		6645231	1					
ANR	6645357	AssignmentExpression	kernel_size = 0		6645231	2		=			
ANR	6645358	Identifier	kernel_size		6645231	0					
ANR	6645359	PrimaryExpression	0		6645231	1					
ANR	6645360	IdentifierDecl	initrd_size = 0		6645231	1					
ANR	6645361	IdentifierDeclType	long		6645231	0					
ANR	6645362	Identifier	initrd_size		6645231	1					
ANR	6645363	AssignmentExpression	initrd_size = 0		6645231	2		=			
ANR	6645364	Identifier	initrd_size		6645231	0					
ANR	6645365	PrimaryExpression	0		6645231	1					
ANR	6645366	IdentifierDeclStatement	"long load_limit , fw_size ;"	37:4:717:741	6645231	16	True				
ANR	6645367	IdentifierDecl	load_limit		6645231	0					
ANR	6645368	IdentifierDeclType	long		6645231	0					
ANR	6645369	Identifier	load_limit		6645231	1					
ANR	6645370	IdentifierDecl	fw_size		6645231	1					
ANR	6645371	IdentifierDeclType	long		6645231	0					
ANR	6645372	Identifier	fw_size		6645231	1					
ANR	6645373	IdentifierDeclStatement	bool kernel_le = false ;	39:4:748:770	6645231	17	True				
ANR	6645374	IdentifierDecl	kernel_le = false		6645231	0					
ANR	6645375	IdentifierDeclType	bool		6645231	0					
ANR	6645376	Identifier	kernel_le		6645231	1					
ANR	6645377	AssignmentExpression	kernel_le = false		6645231	2		=			
ANR	6645378	Identifier	false		6645231	0					
ANR	6645379	Identifier	false		6645231	1					
ANR	6645380	IdentifierDeclStatement	char * filename ;	41:4:777:791	6645231	18	True				
ANR	6645381	IdentifierDecl	* filename		6645231	0					
ANR	6645382	IdentifierDeclType	char *		6645231	0					
ANR	6645383	Identifier	filename		6645231	1					
ANR	6645384	ExpressionStatement	msi_supported = true	45:4:800:820	6645231	19	True				
ANR	6645385	AssignmentExpression	msi_supported = true		6645231	0		=			
ANR	6645386	Identifier	msi_supported		6645231	0					
ANR	6645387	Identifier	true		6645231	1					
ANR	6645388	ExpressionStatement	QLIST_INIT ( & spapr -> phbs )	49:4:829:853	6645231	20	True				
ANR	6645389	CallExpression	QLIST_INIT ( & spapr -> phbs )		6645231	0					
ANR	6645390	Callee	QLIST_INIT		6645231	0					
ANR	6645391	Identifier	QLIST_INIT		6645231	0					
ANR	6645392	ArgumentList	& spapr -> phbs		6645231	1					
ANR	6645393	Argument	& spapr -> phbs		6645231	0					
ANR	6645394	UnaryOperationExpression	& spapr -> phbs		6645231	0					
ANR	6645395	UnaryOperator	&		6645231	0					
ANR	6645396	PtrMemberAccess	spapr -> phbs		6645231	1					
ANR	6645397	Identifier	spapr		6645231	0					
ANR	6645398	Identifier	phbs		6645231	1					
ANR	6645399	ExpressionStatement	cpu_ppc_hypercall = emulate_spapr_hypercall	53:4:862:905	6645231	21	True				
ANR	6645400	AssignmentExpression	cpu_ppc_hypercall = emulate_spapr_hypercall		6645231	0		=			
ANR	6645401	Identifier	cpu_ppc_hypercall		6645231	0					
ANR	6645402	Identifier	emulate_spapr_hypercall		6645231	1					
ANR	6645403	ExpressionStatement	rma_alloc_size = kvmppc_alloc_rma ( & rma )	59:4:951:990	6645231	22	True				
ANR	6645404	AssignmentExpression	rma_alloc_size = kvmppc_alloc_rma ( & rma )		6645231	0		=			
ANR	6645405	Identifier	rma_alloc_size		6645231	0					
ANR	6645406	CallExpression	kvmppc_alloc_rma ( & rma )		6645231	1					
ANR	6645407	Callee	kvmppc_alloc_rma		6645231	0					
ANR	6645408	Identifier	kvmppc_alloc_rma		6645231	0					
ANR	6645409	ArgumentList	& rma		6645231	1					
ANR	6645410	Argument	& rma		6645231	0					
ANR	6645411	UnaryOperationExpression	& rma		6645231	0					
ANR	6645412	UnaryOperator	&		6645231	0					
ANR	6645413	Identifier	rma		6645231	1					
ANR	6645414	IfStatement	if ( rma_alloc_size == - 1 )		6645231	23					
ANR	6645415	Condition	rma_alloc_size == - 1	63:8:1003:1022	6645231	0	True				
ANR	6645416	EqualityExpression	rma_alloc_size == - 1		6645231	0		==			
ANR	6645417	Identifier	rma_alloc_size		6645231	0					
ANR	6645418	UnaryOperationExpression	- 1		6645231	1					
ANR	6645419	UnaryOperator	-		6645231	0					
ANR	6645420	PrimaryExpression	1		6645231	1					
ANR	6645421	CompoundStatement		61:30:973:973	6645231	1					
ANR	6645422	ExpressionStatement	"error_report ( ""Unable to create RMA"" )"	65:8:1036:1072	6645231	0	True				
ANR	6645423	CallExpression	"error_report ( ""Unable to create RMA"" )"		6645231	0					
ANR	6645424	Callee	error_report		6645231	0					
ANR	6645425	Identifier	error_report		6645231	0					
ANR	6645426	ArgumentList	"""Unable to create RMA"""		6645231	1					
ANR	6645427	Argument	"""Unable to create RMA"""		6645231	0					
ANR	6645428	PrimaryExpression	"""Unable to create RMA"""		6645231	0					
ANR	6645429	ExpressionStatement	exit ( 1 )	67:8:1083:1090	6645231	1	True				
ANR	6645430	CallExpression	exit ( 1 )		6645231	0					
ANR	6645431	Callee	exit		6645231	0					
ANR	6645432	Identifier	exit		6645231	0					
ANR	6645433	ArgumentList	1		6645231	1					
ANR	6645434	Argument	1		6645231	0					
ANR	6645435	PrimaryExpression	1		6645231	0					
ANR	6645436	IfStatement	if ( rma_alloc_size && ( rma_alloc_size < node0_size ) )		6645231	24					
ANR	6645437	Condition	rma_alloc_size && ( rma_alloc_size < node0_size )	73:8:1110:1156	6645231	0	True				
ANR	6645438	AndExpression	rma_alloc_size && ( rma_alloc_size < node0_size )		6645231	0		&&			
ANR	6645439	Identifier	rma_alloc_size		6645231	0					
ANR	6645440	RelationalExpression	rma_alloc_size < node0_size		6645231	1		<			
ANR	6645441	Identifier	rma_alloc_size		6645231	0					
ANR	6645442	Identifier	node0_size		6645231	1					
ANR	6645443	CompoundStatement		71:57:1107:1107	6645231	1					
ANR	6645444	ExpressionStatement	spapr -> rma_size = rma_alloc_size	75:8:1170:1202	6645231	0	True				
ANR	6645445	AssignmentExpression	spapr -> rma_size = rma_alloc_size		6645231	0		=			
ANR	6645446	PtrMemberAccess	spapr -> rma_size		6645231	0					
ANR	6645447	Identifier	spapr		6645231	0					
ANR	6645448	Identifier	rma_size		6645231	1					
ANR	6645449	Identifier	rma_alloc_size		6645231	1					
ANR	6645450	ElseStatement	else		6645231	0					
ANR	6645451	CompoundStatement		75:11:1164:1164	6645231	0					
ANR	6645452	ExpressionStatement	spapr -> rma_size = node0_size	79:8:1227:1255	6645231	0	True				
ANR	6645453	AssignmentExpression	spapr -> rma_size = node0_size		6645231	0		=			
ANR	6645454	PtrMemberAccess	spapr -> rma_size		6645231	0					
ANR	6645455	Identifier	spapr		6645231	0					
ANR	6645456	Identifier	rma_size		6645231	1					
ANR	6645457	Identifier	node0_size		6645231	1					
ANR	6645458	IfStatement	if ( kvm_enabled ( ) )		6645231	1					
ANR	6645459	Condition	kvm_enabled ( )	101:12:1755:1767	6645231	0	True				
ANR	6645460	CallExpression	kvm_enabled ( )		6645231	0					
ANR	6645461	Callee	kvm_enabled		6645231	0					
ANR	6645462	Identifier	kvm_enabled		6645231	0					
ANR	6645463	ArgumentList			6645231	1					
ANR	6645464	CompoundStatement		99:27:1718:1718	6645231	1					
ANR	6645465	ExpressionStatement	spapr -> vrma_adjust = 1	103:12:1785:1807	6645231	0	True				
ANR	6645466	AssignmentExpression	spapr -> vrma_adjust = 1		6645231	0		=			
ANR	6645467	PtrMemberAccess	spapr -> vrma_adjust		6645231	0					
ANR	6645468	Identifier	spapr		6645231	0					
ANR	6645469	Identifier	vrma_adjust		6645231	1					
ANR	6645470	PrimaryExpression	1		6645231	1					
ANR	6645471	ExpressionStatement	"spapr -> rma_size = MIN ( spapr -> rma_size , 0x10000000 )"	105:12:1822:1872	6645231	1	True				
ANR	6645472	AssignmentExpression	"spapr -> rma_size = MIN ( spapr -> rma_size , 0x10000000 )"		6645231	0		=			
ANR	6645473	PtrMemberAccess	spapr -> rma_size		6645231	0					
ANR	6645474	Identifier	spapr		6645231	0					
ANR	6645475	Identifier	rma_size		6645231	1					
ANR	6645476	CallExpression	"MIN ( spapr -> rma_size , 0x10000000 )"		6645231	1					
ANR	6645477	Callee	MIN		6645231	0					
ANR	6645478	Identifier	MIN		6645231	0					
ANR	6645479	ArgumentList	spapr -> rma_size		6645231	1					
ANR	6645480	Argument	spapr -> rma_size		6645231	0					
ANR	6645481	PtrMemberAccess	spapr -> rma_size		6645231	0					
ANR	6645482	Identifier	spapr		6645231	0					
ANR	6645483	Identifier	rma_size		6645231	1					
ANR	6645484	Argument	0x10000000		6645231	1					
ANR	6645485	PrimaryExpression	0x10000000		6645231	0					
ANR	6645486	IfStatement	if ( spapr -> rma_size > node0_size )		6645231	25					
ANR	6645487	Condition	spapr -> rma_size > node0_size	113:8:1903:1930	6645231	0	True				
ANR	6645488	RelationalExpression	spapr -> rma_size > node0_size		6645231	0		>			
ANR	6645489	PtrMemberAccess	spapr -> rma_size		6645231	0					
ANR	6645490	Identifier	spapr		6645231	0					
ANR	6645491	Identifier	rma_size		6645231	1					
ANR	6645492	Identifier	node0_size		6645231	1					
ANR	6645493	CompoundStatement		111:38:1881:1881	6645231	1					
ANR	6645494	Statement	error_report	115:8:1944:1955	6645231	0	True				
ANR	6645495	Statement	(	115:20:1956:1956	6645231	1	True				
ANR	6645496	Statement	"""Numa node 0 has to span the RMA (%#08"""	115:21:1957:1995	6645231	2	True				
ANR	6645497	Statement	HWADDR_PRIx	115:60:1996:2006	6645231	3	True				
ANR	6645498	Statement	""")"""	115:71:2007:2009	6645231	4	True				
ANR	6645499	Statement	","	115:74:2010:2010	6645231	5	True				
ANR	6645500	Statement	spapr	117:21:2034:2038	6645231	6	True				
ANR	6645501	Statement	->	117:26:2039:2040	6645231	7	True				
ANR	6645502	Statement	rma_size	117:28:2041:2048	6645231	8	True				
ANR	6645503	Statement	)	117:36:2049:2049	6645231	9	True				
ANR	6645504	ExpressionStatement		117:37:2050:2050	6645231	10	True				
ANR	6645505	ExpressionStatement	exit ( 1 )	119:8:2061:2068	6645231	11	True				
ANR	6645506	CallExpression	exit ( 1 )		6645231	0					
ANR	6645507	Callee	exit		6645231	0					
ANR	6645508	Identifier	exit		6645231	0					
ANR	6645509	ArgumentList	1		6645231	1					
ANR	6645510	Argument	1		6645231	0					
ANR	6645511	PrimaryExpression	1		6645231	0					
ANR	6645512	ExpressionStatement	"load_limit = MIN ( spapr -> rma_size , RTAS_MAX_ADDR ) - FW_OVERHEAD"	127:4:2160:2222	6645231	26	True				
ANR	6645513	AssignmentExpression	"load_limit = MIN ( spapr -> rma_size , RTAS_MAX_ADDR ) - FW_OVERHEAD"		6645231	0		=			
ANR	6645514	Identifier	load_limit		6645231	0					
ANR	6645515	AdditiveExpression	"MIN ( spapr -> rma_size , RTAS_MAX_ADDR ) - FW_OVERHEAD"		6645231	1		-			
ANR	6645516	CallExpression	"MIN ( spapr -> rma_size , RTAS_MAX_ADDR )"		6645231	0					
ANR	6645517	Callee	MIN		6645231	0					
ANR	6645518	Identifier	MIN		6645231	0					
ANR	6645519	ArgumentList	spapr -> rma_size		6645231	1					
ANR	6645520	Argument	spapr -> rma_size		6645231	0					
ANR	6645521	PtrMemberAccess	spapr -> rma_size		6645231	0					
ANR	6645522	Identifier	spapr		6645231	0					
ANR	6645523	Identifier	rma_size		6645231	1					
ANR	6645524	Argument	RTAS_MAX_ADDR		6645231	1					
ANR	6645525	Identifier	RTAS_MAX_ADDR		6645231	0					
ANR	6645526	Identifier	FW_OVERHEAD		6645231	1					
ANR	6645527	ExpressionStatement	spapr -> htab_shift = 18	137:4:2430:2452	6645231	27	True				
ANR	6645528	AssignmentExpression	spapr -> htab_shift = 18		6645231	0		=			
ANR	6645529	PtrMemberAccess	spapr -> htab_shift		6645231	0					
ANR	6645530	Identifier	spapr		6645231	0					
ANR	6645531	Identifier	htab_shift		6645231	1					
ANR	6645532	PrimaryExpression	18		6645231	1					
ANR	6645533	WhileStatement	while ( spapr -> htab_shift <= 46 )		6645231	28					
ANR	6645534	Condition	spapr -> htab_shift <= 46	139:11:2497:2519	6645231	0	True				
ANR	6645535	RelationalExpression	spapr -> htab_shift <= 46		6645231	0		<=			
ANR	6645536	PtrMemberAccess	spapr -> htab_shift		6645231	0					
ANR	6645537	Identifier	spapr		6645231	0					
ANR	6645538	Identifier	htab_shift		6645231	1					
ANR	6645539	PrimaryExpression	46		6645231	1					
ANR	6645540	CompoundStatement		137:36:2470:2470	6645231	1					
ANR	6645541	Statement	if	141:8:2533:2534	6645231	0	True				
ANR	6645542	Statement	(	141:11:2536:2536	6645231	1	True				
ANR	6645543	Statement	(	141:12:2537:2537	6645231	2	True				
ANR	6645544	Statement	1UL	141:13:2538:2540	6645231	3	True				
ANR	6645545	Statement	L	141:16:2541:2541	6645231	4	True				
ANR	6645546	Statement	<<	141:18:2543:2544	6645231	5	True				
ANR	6645547	Statement	(	141:21:2546:2546	6645231	6	True				
ANR	6645548	Statement	spapr	141:22:2547:2551	6645231	7	True				
ANR	6645549	Statement	->	141:27:2552:2553	6645231	8	True				
ANR	6645550	Statement	htab_shift	141:29:2554:2563	6645231	9	True				
ANR	6645551	Statement	+	141:40:2565:2565	6645231	10	True				
ANR	6645552	Statement	7	141:42:2567:2567	6645231	11	True				
ANR	6645553	Statement	)	141:43:2568:2568	6645231	12	True				
ANR	6645554	Statement	)	141:44:2569:2569	6645231	13	True				
ANR	6645555	Statement	>=	141:46:2571:2572	6645231	14	True				
ANR	6645556	Statement	machine	141:49:2574:2580	6645231	15	True				
ANR	6645557	Statement	->	141:56:2581:2582	6645231	16	True				
ANR	6645558	Statement	maxram_size	141:58:2583:2593	6645231	17	True				
ANR	6645559	Statement	)	141:69:2594:2594	6645231	18	True				
ANR	6645560	CompoundStatement		139:71:2544:2544	6645231	19					
ANR	6645561	BreakStatement	break ;	143:12:2611:2616	6645231	0	True				
ANR	6645562	ExpressionStatement	spapr -> htab_shift ++	147:8:2638:2657	6645231	20	True				
ANR	6645563	PostIncDecOperationExpression	spapr -> htab_shift ++		6645231	0					
ANR	6645564	PtrMemberAccess	spapr -> htab_shift		6645231	0					
ANR	6645565	Identifier	spapr		6645231	0					
ANR	6645566	Identifier	htab_shift		6645231	1					
ANR	6645567	IncDec	++		6645231	1					
ANR	6645568	ExpressionStatement	spapr_alloc_htab ( spapr )	151:4:2671:2694	6645231	29	True				
ANR	6645569	CallExpression	spapr_alloc_htab ( spapr )		6645231	0					
ANR	6645570	Callee	spapr_alloc_htab		6645231	0					
ANR	6645571	Identifier	spapr_alloc_htab		6645231	0					
ANR	6645572	ArgumentList	spapr		6645231	1					
ANR	6645573	Argument	spapr		6645231	0					
ANR	6645574	Identifier	spapr		6645231	0					
ANR	6645575	ExpressionStatement	"spapr -> icp = xics_system_init ( machine , DIV_ROUND_UP ( max_cpus * kvmppc_smt_threads ( ) , smp_threads ) , XICS_IRQS , & error_fatal )"	157:4:2769:3010	6645231	30	True				
ANR	6645576	AssignmentExpression	"spapr -> icp = xics_system_init ( machine , DIV_ROUND_UP ( max_cpus * kvmppc_smt_threads ( ) , smp_threads ) , XICS_IRQS , & error_fatal )"		6645231	0		=			
ANR	6645577	PtrMemberAccess	spapr -> icp		6645231	0					
ANR	6645578	Identifier	spapr		6645231	0					
ANR	6645579	Identifier	icp		6645231	1					
ANR	6645580	CallExpression	"xics_system_init ( machine , DIV_ROUND_UP ( max_cpus * kvmppc_smt_threads ( ) , smp_threads ) , XICS_IRQS , & error_fatal )"		6645231	1					
ANR	6645581	Callee	xics_system_init		6645231	0					
ANR	6645582	Identifier	xics_system_init		6645231	0					
ANR	6645583	ArgumentList	machine		6645231	1					
ANR	6645584	Argument	machine		6645231	0					
ANR	6645585	Identifier	machine		6645231	0					
ANR	6645586	Argument	"DIV_ROUND_UP ( max_cpus * kvmppc_smt_threads ( ) , smp_threads )"		6645231	1					
ANR	6645587	CallExpression	"DIV_ROUND_UP ( max_cpus * kvmppc_smt_threads ( ) , smp_threads )"		6645231	0					
ANR	6645588	Callee	DIV_ROUND_UP		6645231	0					
ANR	6645589	Identifier	DIV_ROUND_UP		6645231	0					
ANR	6645590	ArgumentList	max_cpus * kvmppc_smt_threads ( )		6645231	1					
ANR	6645591	Argument	max_cpus * kvmppc_smt_threads ( )		6645231	0					
ANR	6645592	MultiplicativeExpression	max_cpus * kvmppc_smt_threads ( )		6645231	0		*			
ANR	6645593	Identifier	max_cpus		6645231	0					
ANR	6645594	CallExpression	kvmppc_smt_threads ( )		6645231	1					
ANR	6645595	Callee	kvmppc_smt_threads		6645231	0					
ANR	6645596	Identifier	kvmppc_smt_threads		6645231	0					
ANR	6645597	ArgumentList			6645231	1					
ANR	6645598	Argument	smp_threads		6645231	1					
ANR	6645599	Identifier	smp_threads		6645231	0					
ANR	6645600	Argument	XICS_IRQS		6645231	2					
ANR	6645601	Identifier	XICS_IRQS		6645231	0					
ANR	6645602	Argument	& error_fatal		6645231	3					
ANR	6645603	UnaryOperationExpression	& error_fatal		6645231	0					
ANR	6645604	UnaryOperator	&		6645231	0					
ANR	6645605	Identifier	error_fatal		6645231	1					
ANR	6645606	IfStatement	if ( smc -> dr_lmb_enabled )		6645231	31					
ANR	6645607	Condition	smc -> dr_lmb_enabled	167:8:3023:3041	6645231	0	True				
ANR	6645608	PtrMemberAccess	smc -> dr_lmb_enabled		6645231	0					
ANR	6645609	Identifier	smc		6645231	0					
ANR	6645610	Identifier	dr_lmb_enabled		6645231	1					
ANR	6645611	CompoundStatement		165:29:2992:2992	6645231	1					
ANR	6645612	ExpressionStatement	"spapr_validate_node_memory ( machine , & error_fatal )"	169:8:3055:3104	6645231	0	True				
ANR	6645613	CallExpression	"spapr_validate_node_memory ( machine , & error_fatal )"		6645231	0					
ANR	6645614	Callee	spapr_validate_node_memory		6645231	0					
ANR	6645615	Identifier	spapr_validate_node_memory		6645231	0					
ANR	6645616	ArgumentList	machine		6645231	1					
ANR	6645617	Argument	machine		6645231	0					
ANR	6645618	Identifier	machine		6645231	0					
ANR	6645619	Argument	& error_fatal		6645231	1					
ANR	6645620	UnaryOperationExpression	& error_fatal		6645231	0					
ANR	6645621	UnaryOperator	&		6645231	0					
ANR	6645622	Identifier	error_fatal		6645231	1					
ANR	6645623	IfStatement	if ( machine -> cpu_model == NULL )		6645231	32					
ANR	6645624	Condition	machine -> cpu_model == NULL	177:8:3145:3170	6645231	0	True				
ANR	6645625	EqualityExpression	machine -> cpu_model == NULL		6645231	0		==			
ANR	6645626	PtrMemberAccess	machine -> cpu_model		6645231	0					
ANR	6645627	Identifier	machine		6645231	0					
ANR	6645628	Identifier	cpu_model		6645231	1					
ANR	6645629	Identifier	NULL		6645231	1					
ANR	6645630	CompoundStatement		175:36:3121:3121	6645231	1					
ANR	6645631	ExpressionStatement	"machine -> cpu_model = kvm_enabled ( ) ? ""host"" : ""POWER7"""	179:8:3184:3238	6645231	0	True				
ANR	6645632	AssignmentExpression	"machine -> cpu_model = kvm_enabled ( ) ? ""host"" : ""POWER7"""		6645231	0		=			
ANR	6645633	PtrMemberAccess	machine -> cpu_model		6645231	0					
ANR	6645634	Identifier	machine		6645231	0					
ANR	6645635	Identifier	cpu_model		6645231	1					
ANR	6645636	ConditionalExpression	"kvm_enabled ( ) ? ""host"" : ""POWER7"""		6645231	1					
ANR	6645637	Condition	kvm_enabled ( )		6645231	0					
ANR	6645638	CallExpression	kvm_enabled ( )		6645231	0					
ANR	6645639	Callee	kvm_enabled		6645231	0					
ANR	6645640	Identifier	kvm_enabled		6645231	0					
ANR	6645641	ArgumentList			6645231	1					
ANR	6645642	PrimaryExpression	"""host"""		6645231	1					
ANR	6645643	PrimaryExpression	"""POWER7"""		6645231	2					
ANR	6645644	ForStatement	for ( i = 0 ; i < smp_cpus ; i ++ )		6645231	33					
ANR	6645645	ForInit	i = 0 ;	183:9:3257:3262	6645231	0	True				
ANR	6645646	AssignmentExpression	i = 0		6645231	0		=			
ANR	6645647	Identifier	i		6645231	0					
ANR	6645648	PrimaryExpression	0		6645231	1					
ANR	6645649	Condition	i < smp_cpus	183:16:3264:3275	6645231	1	True				
ANR	6645650	RelationalExpression	i < smp_cpus		6645231	0		<			
ANR	6645651	Identifier	i		6645231	0					
ANR	6645652	Identifier	smp_cpus		6645231	1					
ANR	6645653	PostIncDecOperationExpression	i ++	183:30:3278:3280	6645231	2	True				
ANR	6645654	Identifier	i		6645231	0					
ANR	6645655	IncDec	++		6645231	1					
ANR	6645656	CompoundStatement		181:35:3231:3231	6645231	3					
ANR	6645657	ExpressionStatement	cpu = cpu_ppc_init ( machine -> cpu_model )	185:8:3294:3332	6645231	0	True				
ANR	6645658	AssignmentExpression	cpu = cpu_ppc_init ( machine -> cpu_model )		6645231	0		=			
ANR	6645659	Identifier	cpu		6645231	0					
ANR	6645660	CallExpression	cpu_ppc_init ( machine -> cpu_model )		6645231	1					
ANR	6645661	Callee	cpu_ppc_init		6645231	0					
ANR	6645662	Identifier	cpu_ppc_init		6645231	0					
ANR	6645663	ArgumentList	machine -> cpu_model		6645231	1					
ANR	6645664	Argument	machine -> cpu_model		6645231	0					
ANR	6645665	PtrMemberAccess	machine -> cpu_model		6645231	0					
ANR	6645666	Identifier	machine		6645231	0					
ANR	6645667	Identifier	cpu_model		6645231	1					
ANR	6645668	IfStatement	if ( cpu == NULL )		6645231	1					
ANR	6645669	Condition	cpu == NULL	187:12:3347:3357	6645231	0	True				
ANR	6645670	EqualityExpression	cpu == NULL		6645231	0		==			
ANR	6645671	Identifier	cpu		6645231	0					
ANR	6645672	Identifier	NULL		6645231	1					
ANR	6645673	CompoundStatement		185:25:3308:3308	6645231	1					
ANR	6645674	ExpressionStatement	"error_report ( ""Unable to find PowerPC CPU definition"" )"	189:12:3375:3428	6645231	0	True				
ANR	6645675	CallExpression	"error_report ( ""Unable to find PowerPC CPU definition"" )"		6645231	0					
ANR	6645676	Callee	error_report		6645231	0					
ANR	6645677	Identifier	error_report		6645231	0					
ANR	6645678	ArgumentList	"""Unable to find PowerPC CPU definition"""		6645231	1					
ANR	6645679	Argument	"""Unable to find PowerPC CPU definition"""		6645231	0					
ANR	6645680	PrimaryExpression	"""Unable to find PowerPC CPU definition"""		6645231	0					
ANR	6645681	ExpressionStatement	exit ( 1 )	191:12:3443:3450	6645231	1	True				
ANR	6645682	CallExpression	exit ( 1 )		6645231	0					
ANR	6645683	Callee	exit		6645231	0					
ANR	6645684	Identifier	exit		6645231	0					
ANR	6645685	ArgumentList	1		6645231	1					
ANR	6645686	Argument	1		6645231	0					
ANR	6645687	PrimaryExpression	1		6645231	0					
ANR	6645688	ExpressionStatement	"spapr_cpu_init ( spapr , cpu , & error_fatal )"	195:8:3472:3512	6645231	2	True				
ANR	6645689	CallExpression	"spapr_cpu_init ( spapr , cpu , & error_fatal )"		6645231	0					
ANR	6645690	Callee	spapr_cpu_init		6645231	0					
ANR	6645691	Identifier	spapr_cpu_init		6645231	0					
ANR	6645692	ArgumentList	spapr		6645231	1					
ANR	6645693	Argument	spapr		6645231	0					
ANR	6645694	Identifier	spapr		6645231	0					
ANR	6645695	Argument	cpu		6645231	1					
ANR	6645696	Identifier	cpu		6645231	0					
ANR	6645697	Argument	& error_fatal		6645231	2					
ANR	6645698	UnaryOperationExpression	& error_fatal		6645231	0					
ANR	6645699	UnaryOperator	&		6645231	0					
ANR	6645700	Identifier	error_fatal		6645231	1					
ANR	6645701	IfStatement	if ( kvm_enabled ( ) )		6645231	34					
ANR	6645702	Condition	kvm_enabled ( )	201:8:3532:3544	6645231	0	True				
ANR	6645703	CallExpression	kvm_enabled ( )		6645231	0					
ANR	6645704	Callee	kvm_enabled		6645231	0					
ANR	6645705	Identifier	kvm_enabled		6645231	0					
ANR	6645706	ArgumentList			6645231	1					
ANR	6645707	CompoundStatement		199:23:3495:3495	6645231	1					
ANR	6645708	ExpressionStatement	kvmppc_enable_logical_ci_hcalls ( )	205:8:3633:3666	6645231	0	True				
ANR	6645709	CallExpression	kvmppc_enable_logical_ci_hcalls ( )		6645231	0					
ANR	6645710	Callee	kvmppc_enable_logical_ci_hcalls		6645231	0					
ANR	6645711	Identifier	kvmppc_enable_logical_ci_hcalls		6645231	0					
ANR	6645712	ArgumentList			6645231	1					
ANR	6645713	ExpressionStatement	kvmppc_enable_set_mode_hcall ( )	207:8:3677:3707	6645231	1	True				
ANR	6645714	CallExpression	kvmppc_enable_set_mode_hcall ( )		6645231	0					
ANR	6645715	Callee	kvmppc_enable_set_mode_hcall		6645231	0					
ANR	6645716	Identifier	kvmppc_enable_set_mode_hcall		6645231	0					
ANR	6645717	ArgumentList			6645231	1					
ANR	6645718	ExpressionStatement	"memory_region_allocate_system_memory ( ram , NULL , ""ppc_spapr.ram"" , machine -> ram_size )"	215:4:3747:3872	6645231	35	True				
ANR	6645719	CallExpression	"memory_region_allocate_system_memory ( ram , NULL , ""ppc_spapr.ram"" , machine -> ram_size )"		6645231	0					
ANR	6645720	Callee	memory_region_allocate_system_memory		6645231	0					
ANR	6645721	Identifier	memory_region_allocate_system_memory		6645231	0					
ANR	6645722	ArgumentList	ram		6645231	1					
ANR	6645723	Argument	ram		6645231	0					
ANR	6645724	Identifier	ram		6645231	0					
ANR	6645725	Argument	NULL		6645231	1					
ANR	6645726	Identifier	NULL		6645231	0					
ANR	6645727	Argument	"""ppc_spapr.ram"""		6645231	2					
ANR	6645728	PrimaryExpression	"""ppc_spapr.ram"""		6645231	0					
ANR	6645729	Argument	machine -> ram_size		6645231	3					
ANR	6645730	PtrMemberAccess	machine -> ram_size		6645231	0					
ANR	6645731	Identifier	machine		6645231	0					
ANR	6645732	Identifier	ram_size		6645231	1					
ANR	6645733	ExpressionStatement	"memory_region_add_subregion ( sysmem , 0 , ram )"	219:4:3879:3922	6645231	36	True				
ANR	6645734	CallExpression	"memory_region_add_subregion ( sysmem , 0 , ram )"		6645231	0					
ANR	6645735	Callee	memory_region_add_subregion		6645231	0					
ANR	6645736	Identifier	memory_region_add_subregion		6645231	0					
ANR	6645737	ArgumentList	sysmem		6645231	1					
ANR	6645738	Argument	sysmem		6645231	0					
ANR	6645739	Identifier	sysmem		6645231	0					
ANR	6645740	Argument	0		6645231	1					
ANR	6645741	PrimaryExpression	0		6645231	0					
ANR	6645742	Argument	ram		6645231	2					
ANR	6645743	Identifier	ram		6645231	0					
ANR	6645744	IfStatement	if ( rma_alloc_size && rma )		6645231	37					
ANR	6645745	Condition	rma_alloc_size && rma	223:8:3935:3955	6645231	0	True				
ANR	6645746	AndExpression	rma_alloc_size && rma		6645231	0		&&			
ANR	6645747	Identifier	rma_alloc_size		6645231	0					
ANR	6645748	Identifier	rma		6645231	1					
ANR	6645749	CompoundStatement		221:31:3906:3906	6645231	1					
ANR	6645750	ExpressionStatement	"rma_region = g_new ( MemoryRegion , 1 )"	225:8:3969:4004	6645231	0	True				
ANR	6645751	AssignmentExpression	"rma_region = g_new ( MemoryRegion , 1 )"		6645231	0		=			
ANR	6645752	Identifier	rma_region		6645231	0					
ANR	6645753	CallExpression	"g_new ( MemoryRegion , 1 )"		6645231	1					
ANR	6645754	Callee	g_new		6645231	0					
ANR	6645755	Identifier	g_new		6645231	0					
ANR	6645756	ArgumentList	MemoryRegion		6645231	1					
ANR	6645757	Argument	MemoryRegion		6645231	0					
ANR	6645758	Identifier	MemoryRegion		6645231	0					
ANR	6645759	Argument	1		6645231	1					
ANR	6645760	PrimaryExpression	1		6645231	0					
ANR	6645761	ExpressionStatement	"memory_region_init_ram_ptr ( rma_region , NULL , ""ppc_spapr.rma"" , rma_alloc_size , rma )"	227:8:4015:4133	6645231	1	True				
ANR	6645762	CallExpression	"memory_region_init_ram_ptr ( rma_region , NULL , ""ppc_spapr.rma"" , rma_alloc_size , rma )"		6645231	0					
ANR	6645763	Callee	memory_region_init_ram_ptr		6645231	0					
ANR	6645764	Identifier	memory_region_init_ram_ptr		6645231	0					
ANR	6645765	ArgumentList	rma_region		6645231	1					
ANR	6645766	Argument	rma_region		6645231	0					
ANR	6645767	Identifier	rma_region		6645231	0					
ANR	6645768	Argument	NULL		6645231	1					
ANR	6645769	Identifier	NULL		6645231	0					
ANR	6645770	Argument	"""ppc_spapr.rma"""		6645231	2					
ANR	6645771	PrimaryExpression	"""ppc_spapr.rma"""		6645231	0					
ANR	6645772	Argument	rma_alloc_size		6645231	3					
ANR	6645773	Identifier	rma_alloc_size		6645231	0					
ANR	6645774	Argument	rma		6645231	4					
ANR	6645775	Identifier	rma		6645231	0					
ANR	6645776	ExpressionStatement	vmstate_register_ram_global ( rma_region )	231:8:4144:4183	6645231	2	True				
ANR	6645777	CallExpression	vmstate_register_ram_global ( rma_region )		6645231	0					
ANR	6645778	Callee	vmstate_register_ram_global		6645231	0					
ANR	6645779	Identifier	vmstate_register_ram_global		6645231	0					
ANR	6645780	ArgumentList	rma_region		6645231	1					
ANR	6645781	Argument	rma_region		6645231	0					
ANR	6645782	Identifier	rma_region		6645231	0					
ANR	6645783	ExpressionStatement	"memory_region_add_subregion ( sysmem , 0 , rma_region )"	233:8:4194:4244	6645231	3	True				
ANR	6645784	CallExpression	"memory_region_add_subregion ( sysmem , 0 , rma_region )"		6645231	0					
ANR	6645785	Callee	memory_region_add_subregion		6645231	0					
ANR	6645786	Identifier	memory_region_add_subregion		6645231	0					
ANR	6645787	ArgumentList	sysmem		6645231	1					
ANR	6645788	Argument	sysmem		6645231	0					
ANR	6645789	Identifier	sysmem		6645231	0					
ANR	6645790	Argument	0		6645231	1					
ANR	6645791	PrimaryExpression	0		6645231	0					
ANR	6645792	Argument	rma_region		6645231	2					
ANR	6645793	Identifier	rma_region		6645231	0					
ANR	6645794	IfStatement	if ( machine -> ram_size < machine -> maxram_size )		6645231	38					
ANR	6645795	Condition	machine -> ram_size < machine -> maxram_size	241:8:4315:4354	6645231	0	True				
ANR	6645796	RelationalExpression	machine -> ram_size < machine -> maxram_size		6645231	0		<			
ANR	6645797	PtrMemberAccess	machine -> ram_size		6645231	0					
ANR	6645798	Identifier	machine		6645231	0					
ANR	6645799	Identifier	ram_size		6645231	1					
ANR	6645800	PtrMemberAccess	machine -> maxram_size		6645231	1					
ANR	6645801	Identifier	machine		6645231	0					
ANR	6645802	Identifier	maxram_size		6645231	1					
ANR	6645803	CompoundStatement		241:8:4316:4386	6645231	1					
ANR	6645804	IdentifierDeclStatement	ram_addr_t hotplug_mem_size = machine -> maxram_size - machine -> ram_size ;	243:8:4368:4438	6645231	0	True				
ANR	6645805	IdentifierDecl	hotplug_mem_size = machine -> maxram_size - machine -> ram_size		6645231	0					
ANR	6645806	IdentifierDeclType	ram_addr_t		6645231	0					
ANR	6645807	Identifier	hotplug_mem_size		6645231	1					
ANR	6645808	AssignmentExpression	hotplug_mem_size = machine -> maxram_size - machine -> ram_size		6645231	2		=			
ANR	6645809	Identifier	hotplug_mem_size		6645231	0					
ANR	6645810	AdditiveExpression	machine -> maxram_size - machine -> ram_size		6645231	1		-			
ANR	6645811	PtrMemberAccess	machine -> maxram_size		6645231	0					
ANR	6645812	Identifier	machine		6645231	0					
ANR	6645813	Identifier	maxram_size		6645231	1					
ANR	6645814	PtrMemberAccess	machine -> ram_size		6645231	1					
ANR	6645815	Identifier	machine		6645231	0					
ANR	6645816	Identifier	ram_size		6645231	1					
ANR	6645817	IfStatement	if ( machine -> ram_slots > SPAPR_MAX_RAM_SLOTS )		6645231	1					
ANR	6645818	Condition	machine -> ram_slots > SPAPR_MAX_RAM_SLOTS	247:12:4455:4494	6645231	0	True				
ANR	6645819	RelationalExpression	machine -> ram_slots > SPAPR_MAX_RAM_SLOTS		6645231	0		>			
ANR	6645820	PtrMemberAccess	machine -> ram_slots		6645231	0					
ANR	6645821	Identifier	machine		6645231	0					
ANR	6645822	Identifier	ram_slots		6645231	1					
ANR	6645823	Identifier	SPAPR_MAX_RAM_SLOTS		6645231	1					
ANR	6645824	CompoundStatement		245:54:4445:4445	6645231	1					
ANR	6645825	Statement	error_report	249:12:4512:4523	6645231	0	True				
ANR	6645826	Statement	(	249:24:4524:4524	6645231	1	True				
ANR	6645827	Statement	"""Specified number of memory slots %"""	249:25:4525:4560	6645231	2	True				
ANR	6645828	Statement	PRIu64	251:25:4588:4593	6645231	3	True				
ANR	6645829	Statement	""" exceeds max supported %d"""	251:31:4594:4620	6645231	4	True				
ANR	6645830	Statement	","	251:58:4621:4621	6645231	5	True				
ANR	6645831	Statement	machine	253:25:4649:4655	6645231	6	True				
ANR	6645832	Statement	->	253:32:4656:4657	6645231	7	True				
ANR	6645833	Statement	ram_slots	253:34:4658:4666	6645231	8	True				
ANR	6645834	Statement	","	253:43:4667:4667	6645231	9	True				
ANR	6645835	Statement	SPAPR_MAX_RAM_SLOTS	253:45:4669:4687	6645231	10	True				
ANR	6645836	Statement	)	253:64:4688:4688	6645231	11	True				
ANR	6645837	ExpressionStatement		253:65:4689:4689	6645231	12	True				
ANR	6645838	ExpressionStatement	exit ( 1 )	255:12:4704:4711	6645231	13	True				
ANR	6645839	CallExpression	exit ( 1 )		6645231	0					
ANR	6645840	Callee	exit		6645231	0					
ANR	6645841	Identifier	exit		6645231	0					
ANR	6645842	ArgumentList	1		6645231	1					
ANR	6645843	Argument	1		6645231	0					
ANR	6645844	PrimaryExpression	1		6645231	0					
ANR	6645845	ExpressionStatement	"spapr -> hotplug_memory . base = ROUND_UP ( machine -> ram_size , SPAPR_HOTPLUG_MEM_ALIGN )"	261:8:4735:4863	6645231	2	True				
ANR	6645846	AssignmentExpression	"spapr -> hotplug_memory . base = ROUND_UP ( machine -> ram_size , SPAPR_HOTPLUG_MEM_ALIGN )"		6645231	0		=			
ANR	6645847	MemberAccess	spapr -> hotplug_memory . base		6645231	0					
ANR	6645848	PtrMemberAccess	spapr -> hotplug_memory		6645231	0					
ANR	6645849	Identifier	spapr		6645231	0					
ANR	6645850	Identifier	hotplug_memory		6645231	1					
ANR	6645851	Identifier	base		6645231	1					
ANR	6645852	CallExpression	"ROUND_UP ( machine -> ram_size , SPAPR_HOTPLUG_MEM_ALIGN )"		6645231	1					
ANR	6645853	Callee	ROUND_UP		6645231	0					
ANR	6645854	Identifier	ROUND_UP		6645231	0					
ANR	6645855	ArgumentList	machine -> ram_size		6645231	1					
ANR	6645856	Argument	machine -> ram_size		6645231	0					
ANR	6645857	PtrMemberAccess	machine -> ram_size		6645231	0					
ANR	6645858	Identifier	machine		6645231	0					
ANR	6645859	Identifier	ram_size		6645231	1					
ANR	6645860	Argument	SPAPR_HOTPLUG_MEM_ALIGN		6645231	1					
ANR	6645861	Identifier	SPAPR_HOTPLUG_MEM_ALIGN		6645231	0					
ANR	6645862	ExpressionStatement	"memory_region_init ( & spapr -> hotplug_memory . mr , OBJECT ( spapr ) , ""hotplug-memory"" , hotplug_mem_size )"	265:8:4874:4998	6645231	3	True				
ANR	6645863	CallExpression	"memory_region_init ( & spapr -> hotplug_memory . mr , OBJECT ( spapr ) , ""hotplug-memory"" , hotplug_mem_size )"		6645231	0					
ANR	6645864	Callee	memory_region_init		6645231	0					
ANR	6645865	Identifier	memory_region_init		6645231	0					
ANR	6645866	ArgumentList	& spapr -> hotplug_memory . mr		6645231	1					
ANR	6645867	Argument	& spapr -> hotplug_memory . mr		6645231	0					
ANR	6645868	UnaryOperationExpression	& spapr -> hotplug_memory . mr		6645231	0					
ANR	6645869	UnaryOperator	&		6645231	0					
ANR	6645870	MemberAccess	spapr -> hotplug_memory . mr		6645231	1					
ANR	6645871	PtrMemberAccess	spapr -> hotplug_memory		6645231	0					
ANR	6645872	Identifier	spapr		6645231	0					
ANR	6645873	Identifier	hotplug_memory		6645231	1					
ANR	6645874	Identifier	mr		6645231	1					
ANR	6645875	Argument	OBJECT ( spapr )		6645231	1					
ANR	6645876	CallExpression	OBJECT ( spapr )		6645231	0					
ANR	6645877	Callee	OBJECT		6645231	0					
ANR	6645878	Identifier	OBJECT		6645231	0					
ANR	6645879	ArgumentList	spapr		6645231	1					
ANR	6645880	Argument	spapr		6645231	0					
ANR	6645881	Identifier	spapr		6645231	0					
ANR	6645882	Argument	"""hotplug-memory"""		6645231	2					
ANR	6645883	PrimaryExpression	"""hotplug-memory"""		6645231	0					
ANR	6645884	Argument	hotplug_mem_size		6645231	3					
ANR	6645885	Identifier	hotplug_mem_size		6645231	0					
ANR	6645886	ExpressionStatement	"memory_region_add_subregion ( sysmem , spapr -> hotplug_memory . base , & spapr -> hotplug_memory . mr )"	269:8:5009:5136	6645231	4	True				
ANR	6645887	CallExpression	"memory_region_add_subregion ( sysmem , spapr -> hotplug_memory . base , & spapr -> hotplug_memory . mr )"		6645231	0					
ANR	6645888	Callee	memory_region_add_subregion		6645231	0					
ANR	6645889	Identifier	memory_region_add_subregion		6645231	0					
ANR	6645890	ArgumentList	sysmem		6645231	1					
ANR	6645891	Argument	sysmem		6645231	0					
ANR	6645892	Identifier	sysmem		6645231	0					
ANR	6645893	Argument	spapr -> hotplug_memory . base		6645231	1					
ANR	6645894	MemberAccess	spapr -> hotplug_memory . base		6645231	0					
ANR	6645895	PtrMemberAccess	spapr -> hotplug_memory		6645231	0					
ANR	6645896	Identifier	spapr		6645231	0					
ANR	6645897	Identifier	hotplug_memory		6645231	1					
ANR	6645898	Identifier	base		6645231	1					
ANR	6645899	Argument	& spapr -> hotplug_memory . mr		6645231	2					
ANR	6645900	UnaryOperationExpression	& spapr -> hotplug_memory . mr		6645231	0					
ANR	6645901	UnaryOperator	&		6645231	0					
ANR	6645902	MemberAccess	spapr -> hotplug_memory . mr		6645231	1					
ANR	6645903	PtrMemberAccess	spapr -> hotplug_memory		6645231	0					
ANR	6645904	Identifier	spapr		6645231	0					
ANR	6645905	Identifier	hotplug_memory		6645231	1					
ANR	6645906	Identifier	mr		6645231	1					
ANR	6645907	IfStatement	if ( smc -> dr_lmb_enabled )		6645231	39					
ANR	6645908	Condition	smc -> dr_lmb_enabled	277:8:5156:5174	6645231	0	True				
ANR	6645909	PtrMemberAccess	smc -> dr_lmb_enabled		6645231	0					
ANR	6645910	Identifier	smc		6645231	0					
ANR	6645911	Identifier	dr_lmb_enabled		6645231	1					
ANR	6645912	CompoundStatement		275:29:5125:5125	6645231	1					
ANR	6645913	ExpressionStatement	spapr_create_lmb_dr_connectors ( spapr )	279:8:5188:5225	6645231	0	True				
ANR	6645914	CallExpression	spapr_create_lmb_dr_connectors ( spapr )		6645231	0					
ANR	6645915	Callee	spapr_create_lmb_dr_connectors		6645231	0					
ANR	6645916	Identifier	spapr_create_lmb_dr_connectors		6645231	0					
ANR	6645917	ArgumentList	spapr		6645231	1					
ANR	6645918	Argument	spapr		6645231	0					
ANR	6645919	Identifier	spapr		6645231	0					
ANR	6645920	ExpressionStatement	"filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , ""spapr-rtas.bin"" )"	285:4:5241:5305	6645231	40	True				
ANR	6645921	AssignmentExpression	"filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , ""spapr-rtas.bin"" )"		6645231	0		=			
ANR	6645922	Identifier	filename		6645231	0					
ANR	6645923	CallExpression	"qemu_find_file ( QEMU_FILE_TYPE_BIOS , ""spapr-rtas.bin"" )"		6645231	1					
ANR	6645924	Callee	qemu_find_file		6645231	0					
ANR	6645925	Identifier	qemu_find_file		6645231	0					
ANR	6645926	ArgumentList	QEMU_FILE_TYPE_BIOS		6645231	1					
ANR	6645927	Argument	QEMU_FILE_TYPE_BIOS		6645231	0					
ANR	6645928	Identifier	QEMU_FILE_TYPE_BIOS		6645231	0					
ANR	6645929	Argument	"""spapr-rtas.bin"""		6645231	1					
ANR	6645930	PrimaryExpression	"""spapr-rtas.bin"""		6645231	0					
ANR	6645931	IfStatement	if ( ! filename )		6645231	41					
ANR	6645932	Condition	! filename	287:8:5316:5324	6645231	0	True				
ANR	6645933	UnaryOperationExpression	! filename		6645231	0					
ANR	6645934	UnaryOperator	!		6645231	0					
ANR	6645935	Identifier	filename		6645231	1					
ANR	6645936	CompoundStatement		285:19:5275:5275	6645231	1					
ANR	6645937	ExpressionStatement	"error_report ( ""Could not find LPAR rtas '%s'"" , ""spapr-rtas.bin"" )"	289:8:5338:5401	6645231	0	True				
ANR	6645938	CallExpression	"error_report ( ""Could not find LPAR rtas '%s'"" , ""spapr-rtas.bin"" )"		6645231	0					
ANR	6645939	Callee	error_report		6645231	0					
ANR	6645940	Identifier	error_report		6645231	0					
ANR	6645941	ArgumentList	"""Could not find LPAR rtas '%s'"""		6645231	1					
ANR	6645942	Argument	"""Could not find LPAR rtas '%s'"""		6645231	0					
ANR	6645943	PrimaryExpression	"""Could not find LPAR rtas '%s'"""		6645231	0					
ANR	6645944	Argument	"""spapr-rtas.bin"""		6645231	1					
ANR	6645945	PrimaryExpression	"""spapr-rtas.bin"""		6645231	0					
ANR	6645946	ExpressionStatement	exit ( 1 )	291:8:5412:5419	6645231	1	True				
ANR	6645947	CallExpression	exit ( 1 )		6645231	0					
ANR	6645948	Callee	exit		6645231	0					
ANR	6645949	Identifier	exit		6645231	0					
ANR	6645950	ArgumentList	1		6645231	1					
ANR	6645951	Argument	1		6645231	0					
ANR	6645952	PrimaryExpression	1		6645231	0					
ANR	6645953	ExpressionStatement	spapr -> rtas_size = get_image_size ( filename )	295:4:5433:5476	6645231	42	True				
ANR	6645954	AssignmentExpression	spapr -> rtas_size = get_image_size ( filename )		6645231	0		=			
ANR	6645955	PtrMemberAccess	spapr -> rtas_size		6645231	0					
ANR	6645956	Identifier	spapr		6645231	0					
ANR	6645957	Identifier	rtas_size		6645231	1					
ANR	6645958	CallExpression	get_image_size ( filename )		6645231	1					
ANR	6645959	Callee	get_image_size		6645231	0					
ANR	6645960	Identifier	get_image_size		6645231	0					
ANR	6645961	ArgumentList	filename		6645231	1					
ANR	6645962	Argument	filename		6645231	0					
ANR	6645963	Identifier	filename		6645231	0					
ANR	6645964	ExpressionStatement	spapr -> rtas_blob = g_malloc ( spapr -> rtas_size )	297:4:5483:5528	6645231	43	True				
ANR	6645965	AssignmentExpression	spapr -> rtas_blob = g_malloc ( spapr -> rtas_size )		6645231	0		=			
ANR	6645966	PtrMemberAccess	spapr -> rtas_blob		6645231	0					
ANR	6645967	Identifier	spapr		6645231	0					
ANR	6645968	Identifier	rtas_blob		6645231	1					
ANR	6645969	CallExpression	g_malloc ( spapr -> rtas_size )		6645231	1					
ANR	6645970	Callee	g_malloc		6645231	0					
ANR	6645971	Identifier	g_malloc		6645231	0					
ANR	6645972	ArgumentList	spapr -> rtas_size		6645231	1					
ANR	6645973	Argument	spapr -> rtas_size		6645231	0					
ANR	6645974	PtrMemberAccess	spapr -> rtas_size		6645231	0					
ANR	6645975	Identifier	spapr		6645231	0					
ANR	6645976	Identifier	rtas_size		6645231	1					
ANR	6645977	IfStatement	"if ( load_image_size ( filename , spapr -> rtas_blob , spapr -> rtas_size ) < 0 )"		6645231	44					
ANR	6645978	Condition	"load_image_size ( filename , spapr -> rtas_blob , spapr -> rtas_size ) < 0"	299:8:5539:5603	6645231	0	True				
ANR	6645979	RelationalExpression	"load_image_size ( filename , spapr -> rtas_blob , spapr -> rtas_size ) < 0"		6645231	0		<			
ANR	6645980	CallExpression	"load_image_size ( filename , spapr -> rtas_blob , spapr -> rtas_size )"		6645231	0					
ANR	6645981	Callee	load_image_size		6645231	0					
ANR	6645982	Identifier	load_image_size		6645231	0					
ANR	6645983	ArgumentList	filename		6645231	1					
ANR	6645984	Argument	filename		6645231	0					
ANR	6645985	Identifier	filename		6645231	0					
ANR	6645986	Argument	spapr -> rtas_blob		6645231	1					
ANR	6645987	PtrMemberAccess	spapr -> rtas_blob		6645231	0					
ANR	6645988	Identifier	spapr		6645231	0					
ANR	6645989	Identifier	rtas_blob		6645231	1					
ANR	6645990	Argument	spapr -> rtas_size		6645231	2					
ANR	6645991	PtrMemberAccess	spapr -> rtas_size		6645231	0					
ANR	6645992	Identifier	spapr		6645231	0					
ANR	6645993	Identifier	rtas_size		6645231	1					
ANR	6645994	PrimaryExpression	0		6645231	1					
ANR	6645995	CompoundStatement		297:75:5554:5554	6645231	1					
ANR	6645996	ExpressionStatement	"error_report ( ""Could not load LPAR rtas '%s'"" , filename )"	301:8:5617:5672	6645231	0	True				
ANR	6645997	CallExpression	"error_report ( ""Could not load LPAR rtas '%s'"" , filename )"		6645231	0					
ANR	6645998	Callee	error_report		6645231	0					
ANR	6645999	Identifier	error_report		6645231	0					
ANR	6646000	ArgumentList	"""Could not load LPAR rtas '%s'"""		6645231	1					
ANR	6646001	Argument	"""Could not load LPAR rtas '%s'"""		6645231	0					
ANR	6646002	PrimaryExpression	"""Could not load LPAR rtas '%s'"""		6645231	0					
ANR	6646003	Argument	filename		6645231	1					
ANR	6646004	Identifier	filename		6645231	0					
ANR	6646005	ExpressionStatement	exit ( 1 )	303:8:5683:5690	6645231	1	True				
ANR	6646006	CallExpression	exit ( 1 )		6645231	0					
ANR	6646007	Callee	exit		6645231	0					
ANR	6646008	Identifier	exit		6645231	0					
ANR	6646009	ArgumentList	1		6645231	1					
ANR	6646010	Argument	1		6645231	0					
ANR	6646011	PrimaryExpression	1		6645231	0					
ANR	6646012	IfStatement	if ( spapr -> rtas_size > RTAS_MAX_SIZE )		6645231	45					
ANR	6646013	Condition	spapr -> rtas_size > RTAS_MAX_SIZE	307:8:5708:5739	6645231	0	True				
ANR	6646014	RelationalExpression	spapr -> rtas_size > RTAS_MAX_SIZE		6645231	0		>			
ANR	6646015	PtrMemberAccess	spapr -> rtas_size		6645231	0					
ANR	6646016	Identifier	spapr		6645231	0					
ANR	6646017	Identifier	rtas_size		6645231	1					
ANR	6646018	Identifier	RTAS_MAX_SIZE		6645231	1					
ANR	6646019	CompoundStatement		305:42:5690:5690	6645231	1					
ANR	6646020	ExpressionStatement	"error_report ( ""RTAS too big ! 0x%zx bytes (max is 0x%x)"" , ( size_t ) spapr -> rtas_size , RTAS_MAX_SIZE )"	309:8:5753:5872	6645231	0	True				
ANR	6646021	CallExpression	"error_report ( ""RTAS too big ! 0x%zx bytes (max is 0x%x)"" , ( size_t ) spapr -> rtas_size , RTAS_MAX_SIZE )"		6645231	0					
ANR	6646022	Callee	error_report		6645231	0					
ANR	6646023	Identifier	error_report		6645231	0					
ANR	6646024	ArgumentList	"""RTAS too big ! 0x%zx bytes (max is 0x%x)"""		6645231	1					
ANR	6646025	Argument	"""RTAS too big ! 0x%zx bytes (max is 0x%x)"""		6645231	0					
ANR	6646026	PrimaryExpression	"""RTAS too big ! 0x%zx bytes (max is 0x%x)"""		6645231	0					
ANR	6646027	Argument	( size_t ) spapr -> rtas_size		6645231	1					
ANR	6646028	CastExpression	( size_t ) spapr -> rtas_size		6645231	0					
ANR	6646029	CastTarget	size_t		6645231	0					
ANR	6646030	PtrMemberAccess	spapr -> rtas_size		6645231	1					
ANR	6646031	Identifier	spapr		6645231	0					
ANR	6646032	Identifier	rtas_size		6645231	1					
ANR	6646033	Argument	RTAS_MAX_SIZE		6645231	2					
ANR	6646034	Identifier	RTAS_MAX_SIZE		6645231	0					
ANR	6646035	ExpressionStatement	exit ( 1 )	313:8:5883:5890	6645231	1	True				
ANR	6646036	CallExpression	exit ( 1 )		6645231	0					
ANR	6646037	Callee	exit		6645231	0					
ANR	6646038	Identifier	exit		6645231	0					
ANR	6646039	ArgumentList	1		6645231	1					
ANR	6646040	Argument	1		6645231	0					
ANR	6646041	PrimaryExpression	1		6645231	0					
ANR	6646042	ExpressionStatement	g_free ( filename )	317:4:5904:5920	6645231	46	True				
ANR	6646043	CallExpression	g_free ( filename )		6645231	0					
ANR	6646044	Callee	g_free		6645231	0					
ANR	6646045	Identifier	g_free		6645231	0					
ANR	6646046	ArgumentList	filename		6645231	1					
ANR	6646047	Argument	filename		6645231	0					
ANR	6646048	Identifier	filename		6645231	0					
ANR	6646049	ExpressionStatement	spapr_events_init ( spapr )	323:4:5974:5998	6645231	47	True				
ANR	6646050	CallExpression	spapr_events_init ( spapr )		6645231	0					
ANR	6646051	Callee	spapr_events_init		6645231	0					
ANR	6646052	Identifier	spapr_events_init		6645231	0					
ANR	6646053	ArgumentList	spapr		6645231	1					
ANR	6646054	Argument	spapr		6645231	0					
ANR	6646055	Identifier	spapr		6645231	0					
ANR	6646056	ExpressionStatement	spapr_rtc_create ( spapr )	329:4:6049:6072	6645231	48	True				
ANR	6646057	CallExpression	spapr_rtc_create ( spapr )		6645231	0					
ANR	6646058	Callee	spapr_rtc_create		6645231	0					
ANR	6646059	Identifier	spapr_rtc_create		6645231	0					
ANR	6646060	ArgumentList	spapr		6645231	1					
ANR	6646061	Argument	spapr		6645231	0					
ANR	6646062	Identifier	spapr		6645231	0					
ANR	6646063	ExpressionStatement	spapr -> vio_bus = spapr_vio_bus_init ( )	335:4:6107:6144	6645231	49	True				
ANR	6646064	AssignmentExpression	spapr -> vio_bus = spapr_vio_bus_init ( )		6645231	0		=			
ANR	6646065	PtrMemberAccess	spapr -> vio_bus		6645231	0					
ANR	6646066	Identifier	spapr		6645231	0					
ANR	6646067	Identifier	vio_bus		6645231	1					
ANR	6646068	CallExpression	spapr_vio_bus_init ( )		6645231	1					
ANR	6646069	Callee	spapr_vio_bus_init		6645231	0					
ANR	6646070	Identifier	spapr_vio_bus_init		6645231	0					
ANR	6646071	ArgumentList			6645231	1					
ANR	6646072	ForStatement	for ( i = 0 ; i < MAX_SERIAL_PORTS ; i ++ )		6645231	50					
ANR	6646073	ForInit	i = 0 ;	339:9:6158:6163	6645231	0	True				
ANR	6646074	AssignmentExpression	i = 0		6645231	0		=			
ANR	6646075	Identifier	i		6645231	0					
ANR	6646076	PrimaryExpression	0		6645231	1					
ANR	6646077	Condition	i < MAX_SERIAL_PORTS	339:16:6165:6184	6645231	1	True				
ANR	6646078	RelationalExpression	i < MAX_SERIAL_PORTS		6645231	0		<			
ANR	6646079	Identifier	i		6645231	0					
ANR	6646080	Identifier	MAX_SERIAL_PORTS		6645231	1					
ANR	6646081	PostIncDecOperationExpression	i ++	339:38:6187:6189	6645231	2	True				
ANR	6646082	Identifier	i		6645231	0					
ANR	6646083	IncDec	++		6645231	1					
ANR	6646084	CompoundStatement		337:43:6140:6140	6645231	3					
ANR	6646085	IfStatement	if ( serial_hds [ i ] )		6645231	0					
ANR	6646086	Condition	serial_hds [ i ]	341:12:6207:6219	6645231	0	True				
ANR	6646087	ArrayIndexing	serial_hds [ i ]		6645231	0					
ANR	6646088	Identifier	serial_hds		6645231	0					
ANR	6646089	Identifier	i		6645231	1					
ANR	6646090	CompoundStatement		339:27:6170:6170	6645231	1					
ANR	6646091	ExpressionStatement	"spapr_vty_create ( spapr -> vio_bus , serial_hds [ i ] )"	343:12:6237:6284	6645231	0	True				
ANR	6646092	CallExpression	"spapr_vty_create ( spapr -> vio_bus , serial_hds [ i ] )"		6645231	0					
ANR	6646093	Callee	spapr_vty_create		6645231	0					
ANR	6646094	Identifier	spapr_vty_create		6645231	0					
ANR	6646095	ArgumentList	spapr -> vio_bus		6645231	1					
ANR	6646096	Argument	spapr -> vio_bus		6645231	0					
ANR	6646097	PtrMemberAccess	spapr -> vio_bus		6645231	0					
ANR	6646098	Identifier	spapr		6645231	0					
ANR	6646099	Identifier	vio_bus		6645231	1					
ANR	6646100	Argument	serial_hds [ i ]		6645231	1					
ANR	6646101	ArrayIndexing	serial_hds [ i ]		6645231	0					
ANR	6646102	Identifier	serial_hds		6645231	0					
ANR	6646103	Identifier	i		6645231	1					
ANR	6646104	ExpressionStatement	spapr_create_nvram ( spapr )	353:4:6370:6395	6645231	51	True				
ANR	6646105	CallExpression	spapr_create_nvram ( spapr )		6645231	0					
ANR	6646106	Callee	spapr_create_nvram		6645231	0					
ANR	6646107	Identifier	spapr_create_nvram		6645231	0					
ANR	6646108	ArgumentList	spapr		6645231	1					
ANR	6646109	Argument	spapr		6645231	0					
ANR	6646110	Identifier	spapr		6645231	0					
ANR	6646111	ExpressionStatement	spapr_pci_rtas_init ( )	359:4:6426:6447	6645231	52	True				
ANR	6646112	CallExpression	spapr_pci_rtas_init ( )		6645231	0					
ANR	6646113	Callee	spapr_pci_rtas_init		6645231	0					
ANR	6646114	Identifier	spapr_pci_rtas_init		6645231	0					
ANR	6646115	ArgumentList			6645231	1					
ANR	6646116	ExpressionStatement	"phb = spapr_create_phb ( spapr , 0 )"	363:4:6456:6488	6645231	53	True				
ANR	6646117	AssignmentExpression	"phb = spapr_create_phb ( spapr , 0 )"		6645231	0		=			
ANR	6646118	Identifier	phb		6645231	0					
ANR	6646119	CallExpression	"spapr_create_phb ( spapr , 0 )"		6645231	1					
ANR	6646120	Callee	spapr_create_phb		6645231	0					
ANR	6646121	Identifier	spapr_create_phb		6645231	0					
ANR	6646122	ArgumentList	spapr		6645231	1					
ANR	6646123	Argument	spapr		6645231	0					
ANR	6646124	Identifier	spapr		6645231	0					
ANR	6646125	Argument	0		6645231	1					
ANR	6646126	PrimaryExpression	0		6645231	0					
ANR	6646127	ForStatement	for ( i = 0 ; i < nb_nics ; i ++ )		6645231	54					
ANR	6646128	ForInit	i = 0 ;	367:9:6502:6507	6645231	0	True				
ANR	6646129	AssignmentExpression	i = 0		6645231	0		=			
ANR	6646130	Identifier	i		6645231	0					
ANR	6646131	PrimaryExpression	0		6645231	1					
ANR	6646132	Condition	i < nb_nics	367:16:6509:6519	6645231	1	True				
ANR	6646133	RelationalExpression	i < nb_nics		6645231	0		<			
ANR	6646134	Identifier	i		6645231	0					
ANR	6646135	Identifier	nb_nics		6645231	1					
ANR	6646136	PostIncDecOperationExpression	i ++	367:29:6522:6524	6645231	2	True				
ANR	6646137	Identifier	i		6645231	0					
ANR	6646138	IncDec	++		6645231	1					
ANR	6646139	CompoundStatement		367:8:6486:6512	6645231	3					
ANR	6646140	IdentifierDeclStatement	NICInfo * nd = & nd_table [ i ] ;	369:8:6538:6564	6645231	0	True				
ANR	6646141	IdentifierDecl	* nd = & nd_table [ i ]		6645231	0					
ANR	6646142	IdentifierDeclType	NICInfo *		6645231	0					
ANR	6646143	Identifier	nd		6645231	1					
ANR	6646144	AssignmentExpression	* nd = & nd_table [ i ]		6645231	2		=			
ANR	6646145	Identifier	nd		6645231	0					
ANR	6646146	UnaryOperationExpression	& nd_table [ i ]		6645231	1					
ANR	6646147	UnaryOperator	&		6645231	0					
ANR	6646148	ArrayIndexing	nd_table [ i ]		6645231	1					
ANR	6646149	Identifier	nd_table		6645231	0					
ANR	6646150	Identifier	i		6645231	1					
ANR	6646151	IfStatement	if ( ! nd -> model )		6645231	1					
ANR	6646152	Condition	! nd -> model	373:12:6581:6590	6645231	0	True				
ANR	6646153	UnaryOperationExpression	! nd -> model		6645231	0					
ANR	6646154	UnaryOperator	!		6645231	0					
ANR	6646155	PtrMemberAccess	nd -> model		6645231	1					
ANR	6646156	Identifier	nd		6645231	0					
ANR	6646157	Identifier	model		6645231	1					
ANR	6646158	CompoundStatement		371:24:6541:6541	6645231	1					
ANR	6646159	ExpressionStatement	"nd -> model = g_strdup ( ""ibmveth"" )"	375:12:6608:6639	6645231	0	True				
ANR	6646160	AssignmentExpression	"nd -> model = g_strdup ( ""ibmveth"" )"		6645231	0		=			
ANR	6646161	PtrMemberAccess	nd -> model		6645231	0					
ANR	6646162	Identifier	nd		6645231	0					
ANR	6646163	Identifier	model		6645231	1					
ANR	6646164	CallExpression	"g_strdup ( ""ibmveth"" )"		6645231	1					
ANR	6646165	Callee	g_strdup		6645231	0					
ANR	6646166	Identifier	g_strdup		6645231	0					
ANR	6646167	ArgumentList	"""ibmveth"""		6645231	1					
ANR	6646168	Argument	"""ibmveth"""		6645231	0					
ANR	6646169	PrimaryExpression	"""ibmveth"""		6645231	0					
ANR	6646170	IfStatement	"if ( strcmp ( nd -> model , ""ibmveth"" ) == 0 )"		6645231	2					
ANR	6646171	Condition	"strcmp ( nd -> model , ""ibmveth"" ) == 0"	381:12:6667:6699	6645231	0	True				
ANR	6646172	EqualityExpression	"strcmp ( nd -> model , ""ibmveth"" ) == 0"		6645231	0		==			
ANR	6646173	CallExpression	"strcmp ( nd -> model , ""ibmveth"" )"		6645231	0					
ANR	6646174	Callee	strcmp		6645231	0					
ANR	6646175	Identifier	strcmp		6645231	0					
ANR	6646176	ArgumentList	nd -> model		6645231	1					
ANR	6646177	Argument	nd -> model		6645231	0					
ANR	6646178	PtrMemberAccess	nd -> model		6645231	0					
ANR	6646179	Identifier	nd		6645231	0					
ANR	6646180	Identifier	model		6645231	1					
ANR	6646181	Argument	"""ibmveth"""		6645231	1					
ANR	6646182	PrimaryExpression	"""ibmveth"""		6645231	0					
ANR	6646183	PrimaryExpression	0		6645231	1					
ANR	6646184	CompoundStatement		379:47:6650:6650	6645231	1					
ANR	6646185	ExpressionStatement	"spapr_vlan_create ( spapr -> vio_bus , nd )"	383:12:6717:6754	6645231	0	True				
ANR	6646186	CallExpression	"spapr_vlan_create ( spapr -> vio_bus , nd )"		6645231	0					
ANR	6646187	Callee	spapr_vlan_create		6645231	0					
ANR	6646188	Identifier	spapr_vlan_create		6645231	0					
ANR	6646189	ArgumentList	spapr -> vio_bus		6645231	1					
ANR	6646190	Argument	spapr -> vio_bus		6645231	0					
ANR	6646191	PtrMemberAccess	spapr -> vio_bus		6645231	0					
ANR	6646192	Identifier	spapr		6645231	0					
ANR	6646193	Identifier	vio_bus		6645231	1					
ANR	6646194	Argument	nd		6645231	1					
ANR	6646195	Identifier	nd		6645231	0					
ANR	6646196	ElseStatement	else		6645231	0					
ANR	6646197	CompoundStatement		383:15:6720:6720	6645231	0					
ANR	6646198	ExpressionStatement	"pci_nic_init_nofail ( & nd_table [ i ] , phb -> bus , nd -> model , NULL )"	387:12:6787:6847	6645231	0	True				
ANR	6646199	CallExpression	"pci_nic_init_nofail ( & nd_table [ i ] , phb -> bus , nd -> model , NULL )"		6645231	0					
ANR	6646200	Callee	pci_nic_init_nofail		6645231	0					
ANR	6646201	Identifier	pci_nic_init_nofail		6645231	0					
ANR	6646202	ArgumentList	& nd_table [ i ]		6645231	1					
ANR	6646203	Argument	& nd_table [ i ]		6645231	0					
ANR	6646204	UnaryOperationExpression	& nd_table [ i ]		6645231	0					
ANR	6646205	UnaryOperator	&		6645231	0					
ANR	6646206	ArrayIndexing	nd_table [ i ]		6645231	1					
ANR	6646207	Identifier	nd_table		6645231	0					
ANR	6646208	Identifier	i		6645231	1					
ANR	6646209	Argument	phb -> bus		6645231	1					
ANR	6646210	PtrMemberAccess	phb -> bus		6645231	0					
ANR	6646211	Identifier	phb		6645231	0					
ANR	6646212	Identifier	bus		6645231	1					
ANR	6646213	Argument	nd -> model		6645231	2					
ANR	6646214	PtrMemberAccess	nd -> model		6645231	0					
ANR	6646215	Identifier	nd		6645231	0					
ANR	6646216	Identifier	model		6645231	1					
ANR	6646217	Argument	NULL		6645231	3					
ANR	6646218	Identifier	NULL		6645231	0					
ANR	6646219	ForStatement	for ( i = 0 ; i <= drive_get_max_bus ( IF_SCSI ) ; i ++ )		6645231	55					
ANR	6646220	ForInit	i = 0 ;	395:9:6879:6884	6645231	0	True				
ANR	6646221	AssignmentExpression	i = 0		6645231	0		=			
ANR	6646222	Identifier	i		6645231	0					
ANR	6646223	PrimaryExpression	0		6645231	1					
ANR	6646224	Condition	i <= drive_get_max_bus ( IF_SCSI )	395:16:6886:6916	6645231	1	True				
ANR	6646225	RelationalExpression	i <= drive_get_max_bus ( IF_SCSI )		6645231	0		<=			
ANR	6646226	Identifier	i		6645231	0					
ANR	6646227	CallExpression	drive_get_max_bus ( IF_SCSI )		6645231	1					
ANR	6646228	Callee	drive_get_max_bus		6645231	0					
ANR	6646229	Identifier	drive_get_max_bus		6645231	0					
ANR	6646230	ArgumentList	IF_SCSI		6645231	1					
ANR	6646231	Argument	IF_SCSI		6645231	0					
ANR	6646232	Identifier	IF_SCSI		6645231	0					
ANR	6646233	PostIncDecOperationExpression	i ++	395:49:6919:6921	6645231	2	True				
ANR	6646234	Identifier	i		6645231	0					
ANR	6646235	IncDec	++		6645231	1					
ANR	6646236	CompoundStatement		393:54:6872:6872	6645231	3					
ANR	6646237	ExpressionStatement	spapr_vscsi_create ( spapr -> vio_bus )	397:8:6935:6969	6645231	0	True				
ANR	6646238	CallExpression	spapr_vscsi_create ( spapr -> vio_bus )		6645231	0					
ANR	6646239	Callee	spapr_vscsi_create		6645231	0					
ANR	6646240	Identifier	spapr_vscsi_create		6645231	0					
ANR	6646241	ArgumentList	spapr -> vio_bus		6645231	1					
ANR	6646242	Argument	spapr -> vio_bus		6645231	0					
ANR	6646243	PtrMemberAccess	spapr -> vio_bus		6645231	0					
ANR	6646244	Identifier	spapr		6645231	0					
ANR	6646245	Identifier	vio_bus		6645231	1					
ANR	6646246	IfStatement	"if ( spapr_vga_init ( phb -> bus , & error_fatal ) )"		6645231	56					
ANR	6646247	Condition	"spapr_vga_init ( phb -> bus , & error_fatal )"	405:8:7009:7046	6645231	0	True				
ANR	6646248	CallExpression	"spapr_vga_init ( phb -> bus , & error_fatal )"		6645231	0					
ANR	6646249	Callee	spapr_vga_init		6645231	0					
ANR	6646250	Identifier	spapr_vga_init		6645231	0					
ANR	6646251	ArgumentList	phb -> bus		6645231	1					
ANR	6646252	Argument	phb -> bus		6645231	0					
ANR	6646253	PtrMemberAccess	phb -> bus		6645231	0					
ANR	6646254	Identifier	phb		6645231	0					
ANR	6646255	Identifier	bus		6645231	1					
ANR	6646256	Argument	& error_fatal		6645231	1					
ANR	6646257	UnaryOperationExpression	& error_fatal		6645231	0					
ANR	6646258	UnaryOperator	&		6645231	0					
ANR	6646259	Identifier	error_fatal		6645231	1					
ANR	6646260	CompoundStatement		403:48:6997:6997	6645231	1					
ANR	6646261	ExpressionStatement	spapr -> has_graphics = true	407:8:7060:7086	6645231	0	True				
ANR	6646262	AssignmentExpression	spapr -> has_graphics = true		6645231	0		=			
ANR	6646263	PtrMemberAccess	spapr -> has_graphics		6645231	0					
ANR	6646264	Identifier	spapr		6645231	0					
ANR	6646265	Identifier	has_graphics		6645231	1					
ANR	6646266	Identifier	true		6645231	1					
ANR	6646267	ExpressionStatement	machine -> usb |= defaults_enabled ( ) && ! machine -> usb_disabled	409:8:7097:7157	6645231	1	True				
ANR	6646268	AssignmentExpression	machine -> usb |= defaults_enabled ( ) && ! machine -> usb_disabled		6645231	0		|=			
ANR	6646269	PtrMemberAccess	machine -> usb		6645231	0					
ANR	6646270	Identifier	machine		6645231	0					
ANR	6646271	Identifier	usb		6645231	1					
ANR	6646272	AndExpression	defaults_enabled ( ) && ! machine -> usb_disabled		6645231	1		&&			
ANR	6646273	CallExpression	defaults_enabled ( )		6645231	0					
ANR	6646274	Callee	defaults_enabled		6645231	0					
ANR	6646275	Identifier	defaults_enabled		6645231	0					
ANR	6646276	ArgumentList			6645231	1					
ANR	6646277	UnaryOperationExpression	! machine -> usb_disabled		6645231	1					
ANR	6646278	UnaryOperator	!		6645231	0					
ANR	6646279	PtrMemberAccess	machine -> usb_disabled		6645231	1					
ANR	6646280	Identifier	machine		6645231	0					
ANR	6646281	Identifier	usb_disabled		6645231	1					
ANR	6646282	IfStatement	if ( machine -> usb )		6645231	57					
ANR	6646283	Condition	machine -> usb	415:8:7177:7188	6645231	0	True				
ANR	6646284	PtrMemberAccess	machine -> usb		6645231	0					
ANR	6646285	Identifier	machine		6645231	0					
ANR	6646286	Identifier	usb		6645231	1					
ANR	6646287	CompoundStatement		413:22:7139:7139	6645231	1					
ANR	6646288	IfStatement	if ( smc -> use_ohci_by_default )		6645231	0					
ANR	6646289	Condition	smc -> use_ohci_by_default	417:12:7206:7229	6645231	0	True				
ANR	6646290	PtrMemberAccess	smc -> use_ohci_by_default		6645231	0					
ANR	6646291	Identifier	smc		6645231	0					
ANR	6646292	Identifier	use_ohci_by_default		6645231	1					
ANR	6646293	CompoundStatement		415:38:7180:7180	6645231	1					
ANR	6646294	ExpressionStatement	"pci_create_simple ( phb -> bus , - 1 , ""pci-ohci"" )"	419:12:7247:7290	6645231	0	True				
ANR	6646295	CallExpression	"pci_create_simple ( phb -> bus , - 1 , ""pci-ohci"" )"		6645231	0					
ANR	6646296	Callee	pci_create_simple		6645231	0					
ANR	6646297	Identifier	pci_create_simple		6645231	0					
ANR	6646298	ArgumentList	phb -> bus		6645231	1					
ANR	6646299	Argument	phb -> bus		6645231	0					
ANR	6646300	PtrMemberAccess	phb -> bus		6645231	0					
ANR	6646301	Identifier	phb		6645231	0					
ANR	6646302	Identifier	bus		6645231	1					
ANR	6646303	Argument	- 1		6645231	1					
ANR	6646304	UnaryOperationExpression	- 1		6645231	0					
ANR	6646305	UnaryOperator	-		6645231	0					
ANR	6646306	PrimaryExpression	1		6645231	1					
ANR	6646307	Argument	"""pci-ohci"""		6645231	2					
ANR	6646308	PrimaryExpression	"""pci-ohci"""		6645231	0					
ANR	6646309	ElseStatement	else		6645231	0					
ANR	6646310	CompoundStatement		419:15:7256:7256	6645231	0					
ANR	6646311	ExpressionStatement	"pci_create_simple ( phb -> bus , - 1 , ""nec-usb-xhci"" )"	423:12:7323:7370	6645231	0	True				
ANR	6646312	CallExpression	"pci_create_simple ( phb -> bus , - 1 , ""nec-usb-xhci"" )"		6645231	0					
ANR	6646313	Callee	pci_create_simple		6645231	0					
ANR	6646314	Identifier	pci_create_simple		6645231	0					
ANR	6646315	ArgumentList	phb -> bus		6645231	1					
ANR	6646316	Argument	phb -> bus		6645231	0					
ANR	6646317	PtrMemberAccess	phb -> bus		6645231	0					
ANR	6646318	Identifier	phb		6645231	0					
ANR	6646319	Identifier	bus		6645231	1					
ANR	6646320	Argument	- 1		6645231	1					
ANR	6646321	UnaryOperationExpression	- 1		6645231	0					
ANR	6646322	UnaryOperator	-		6645231	0					
ANR	6646323	PrimaryExpression	1		6645231	1					
ANR	6646324	Argument	"""nec-usb-xhci"""		6645231	2					
ANR	6646325	PrimaryExpression	"""nec-usb-xhci"""		6645231	0					
ANR	6646326	IfStatement	if ( spapr -> has_graphics )		6645231	1					
ANR	6646327	Condition	spapr -> has_graphics	429:12:7398:7416	6645231	0	True				
ANR	6646328	PtrMemberAccess	spapr -> has_graphics		6645231	0					
ANR	6646329	Identifier	spapr		6645231	0					
ANR	6646330	Identifier	has_graphics		6645231	1					
ANR	6646331	CompoundStatement		429:12:7382:7416	6645231	1					
ANR	6646332	IdentifierDeclStatement	USBBus * usb_bus = usb_bus_find ( - 1 ) ;	431:12:7434:7468	6645231	0	True				
ANR	6646333	IdentifierDecl	* usb_bus = usb_bus_find ( - 1 )		6645231	0					
ANR	6646334	IdentifierDeclType	USBBus *		6645231	0					
ANR	6646335	Identifier	usb_bus		6645231	1					
ANR	6646336	AssignmentExpression	* usb_bus = usb_bus_find ( - 1 )		6645231	2		=			
ANR	6646337	Identifier	usb_bus		6645231	0					
ANR	6646338	CallExpression	usb_bus_find ( - 1 )		6645231	1					
ANR	6646339	Callee	usb_bus_find		6645231	0					
ANR	6646340	Identifier	usb_bus_find		6645231	0					
ANR	6646341	ArgumentList	- 1		6645231	1					
ANR	6646342	Argument	- 1		6645231	0					
ANR	6646343	UnaryOperationExpression	- 1		6645231	0					
ANR	6646344	UnaryOperator	-		6645231	0					
ANR	6646345	PrimaryExpression	1		6645231	1					
ANR	6646346	ExpressionStatement	"usb_create_simple ( usb_bus , ""usb-kbd"" )"	435:12:7485:7522	6645231	1	True				
ANR	6646347	CallExpression	"usb_create_simple ( usb_bus , ""usb-kbd"" )"		6645231	0					
ANR	6646348	Callee	usb_create_simple		6645231	0					
ANR	6646349	Identifier	usb_create_simple		6645231	0					
ANR	6646350	ArgumentList	usb_bus		6645231	1					
ANR	6646351	Argument	usb_bus		6645231	0					
ANR	6646352	Identifier	usb_bus		6645231	0					
ANR	6646353	Argument	"""usb-kbd"""		6645231	1					
ANR	6646354	PrimaryExpression	"""usb-kbd"""		6645231	0					
ANR	6646355	ExpressionStatement	"usb_create_simple ( usb_bus , ""usb-mouse"" )"	437:12:7537:7576	6645231	2	True				
ANR	6646356	CallExpression	"usb_create_simple ( usb_bus , ""usb-mouse"" )"		6645231	0					
ANR	6646357	Callee	usb_create_simple		6645231	0					
ANR	6646358	Identifier	usb_create_simple		6645231	0					
ANR	6646359	ArgumentList	usb_bus		6645231	1					
ANR	6646360	Argument	usb_bus		6645231	0					
ANR	6646361	Identifier	usb_bus		6645231	0					
ANR	6646362	Argument	"""usb-mouse"""		6645231	1					
ANR	6646363	PrimaryExpression	"""usb-mouse"""		6645231	0					
ANR	6646364	IfStatement	if ( spapr -> rma_size < ( MIN_RMA_SLOF << 20 ) )		6645231	58					
ANR	6646365	Condition	spapr -> rma_size < ( MIN_RMA_SLOF << 20 )	445:8:7607:7644	6645231	0	True				
ANR	6646366	RelationalExpression	spapr -> rma_size < ( MIN_RMA_SLOF << 20 )		6645231	0		<			
ANR	6646367	PtrMemberAccess	spapr -> rma_size		6645231	0					
ANR	6646368	Identifier	spapr		6645231	0					
ANR	6646369	Identifier	rma_size		6645231	1					
ANR	6646370	ShiftExpression	MIN_RMA_SLOF << 20		6645231	1		<<			
ANR	6646371	Identifier	MIN_RMA_SLOF		6645231	0					
ANR	6646372	PrimaryExpression	20		6645231	1					
ANR	6646373	CompoundStatement		443:48:7595:7595	6645231	1					
ANR	6646374	ExpressionStatement	"error_report ( ""pSeries SLOF firmware requires >= %ldM guest RMA (Real Mode Area memory)"" , MIN_RMA_SLOF )"	447:8:7658:7787	6645231	0	True				
ANR	6646375	CallExpression	"error_report ( ""pSeries SLOF firmware requires >= %ldM guest RMA (Real Mode Area memory)"" , MIN_RMA_SLOF )"		6645231	0					
ANR	6646376	Callee	error_report		6645231	0					
ANR	6646377	Identifier	error_report		6645231	0					
ANR	6646378	ArgumentList	"""pSeries SLOF firmware requires >= %ldM guest RMA (Real Mode Area memory)"""		6645231	1					
ANR	6646379	Argument	"""pSeries SLOF firmware requires >= %ldM guest RMA (Real Mode Area memory)"""		6645231	0					
ANR	6646380	PrimaryExpression	"""pSeries SLOF firmware requires >= %ldM guest RMA (Real Mode Area memory)"""		6645231	0					
ANR	6646381	Argument	MIN_RMA_SLOF		6645231	1					
ANR	6646382	Identifier	MIN_RMA_SLOF		6645231	0					
ANR	6646383	ExpressionStatement	exit ( 1 )	453:8:7798:7805	6645231	1	True				
ANR	6646384	CallExpression	exit ( 1 )		6645231	0					
ANR	6646385	Callee	exit		6645231	0					
ANR	6646386	Identifier	exit		6645231	0					
ANR	6646387	ArgumentList	1		6645231	1					
ANR	6646388	Argument	1		6645231	0					
ANR	6646389	PrimaryExpression	1		6645231	0					
ANR	6646390	IfStatement	if ( kernel_filename )		6645231	59					
ANR	6646391	Condition	kernel_filename	459:8:7825:7839	6645231	0	True				
ANR	6646392	Identifier	kernel_filename		6645231	0					
ANR	6646393	CompoundStatement		459:8:7801:7821	6645231	1					
ANR	6646394	IdentifierDeclStatement	uint64_t lowaddr = 0 ;	461:8:7853:7873	6645231	0	True				
ANR	6646395	IdentifierDecl	lowaddr = 0		6645231	0					
ANR	6646396	IdentifierDeclType	uint64_t		6645231	0					
ANR	6646397	Identifier	lowaddr		6645231	1					
ANR	6646398	AssignmentExpression	lowaddr = 0		6645231	2		=			
ANR	6646399	Identifier	lowaddr		6645231	0					
ANR	6646400	PrimaryExpression	0		6645231	1					
ANR	6646401	ExpressionStatement	"kernel_size = load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 1 , PPC_ELF_MACHINE , 0 )"	465:8:7886:8034	6645231	1	True				
ANR	6646402	AssignmentExpression	"kernel_size = load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 1 , PPC_ELF_MACHINE , 0 )"		6645231	0		=			
ANR	6646403	Identifier	kernel_size		6645231	0					
ANR	6646404	CallExpression	"load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 1 , PPC_ELF_MACHINE , 0 )"		6645231	1					
ANR	6646405	Callee	load_elf		6645231	0					
ANR	6646406	Identifier	load_elf		6645231	0					
ANR	6646407	ArgumentList	kernel_filename		6645231	1					
ANR	6646408	Argument	kernel_filename		6645231	0					
ANR	6646409	Identifier	kernel_filename		6645231	0					
ANR	6646410	Argument	translate_kernel_address		6645231	1					
ANR	6646411	Identifier	translate_kernel_address		6645231	0					
ANR	6646412	Argument	NULL		6645231	2					
ANR	6646413	Identifier	NULL		6645231	0					
ANR	6646414	Argument	NULL		6645231	3					
ANR	6646415	Identifier	NULL		6645231	0					
ANR	6646416	Argument	& lowaddr		6645231	4					
ANR	6646417	UnaryOperationExpression	& lowaddr		6645231	0					
ANR	6646418	UnaryOperator	&		6645231	0					
ANR	6646419	Identifier	lowaddr		6645231	1					
ANR	6646420	Argument	NULL		6645231	5					
ANR	6646421	Identifier	NULL		6645231	0					
ANR	6646422	Argument	1		6645231	6					
ANR	6646423	PrimaryExpression	1		6645231	0					
ANR	6646424	Argument	PPC_ELF_MACHINE		6645231	7					
ANR	6646425	Identifier	PPC_ELF_MACHINE		6645231	0					
ANR	6646426	Argument	0		6645231	8					
ANR	6646427	PrimaryExpression	0		6645231	0					
ANR	6646428	IfStatement	if ( kernel_size == ELF_LOAD_WRONG_ENDIAN )		6645231	2					
ANR	6646429	Condition	kernel_size == ELF_LOAD_WRONG_ENDIAN	469:12:8049:8084	6645231	0	True				
ANR	6646430	EqualityExpression	kernel_size == ELF_LOAD_WRONG_ENDIAN		6645231	0		==			
ANR	6646431	Identifier	kernel_size		6645231	0					
ANR	6646432	Identifier	ELF_LOAD_WRONG_ENDIAN		6645231	1					
ANR	6646433	CompoundStatement		467:50:8035:8035	6645231	1					
ANR	6646434	ExpressionStatement	"kernel_size = load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 0 , PPC_ELF_MACHINE , 0 )"	471:12:8102:8290	6645231	0	True				
ANR	6646435	AssignmentExpression	"kernel_size = load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 0 , PPC_ELF_MACHINE , 0 )"		6645231	0		=			
ANR	6646436	Identifier	kernel_size		6645231	0					
ANR	6646437	CallExpression	"load_elf ( kernel_filename , translate_kernel_address , NULL , NULL , & lowaddr , NULL , 0 , PPC_ELF_MACHINE , 0 )"		6645231	1					
ANR	6646438	Callee	load_elf		6645231	0					
ANR	6646439	Identifier	load_elf		6645231	0					
ANR	6646440	ArgumentList	kernel_filename		6645231	1					
ANR	6646441	Argument	kernel_filename		6645231	0					
ANR	6646442	Identifier	kernel_filename		6645231	0					
ANR	6646443	Argument	translate_kernel_address		6645231	1					
ANR	6646444	Identifier	translate_kernel_address		6645231	0					
ANR	6646445	Argument	NULL		6645231	2					
ANR	6646446	Identifier	NULL		6645231	0					
ANR	6646447	Argument	NULL		6645231	3					
ANR	6646448	Identifier	NULL		6645231	0					
ANR	6646449	Argument	& lowaddr		6645231	4					
ANR	6646450	UnaryOperationExpression	& lowaddr		6645231	0					
ANR	6646451	UnaryOperator	&		6645231	0					
ANR	6646452	Identifier	lowaddr		6645231	1					
ANR	6646453	Argument	NULL		6645231	5					
ANR	6646454	Identifier	NULL		6645231	0					
ANR	6646455	Argument	0		6645231	6					
ANR	6646456	PrimaryExpression	0		6645231	0					
ANR	6646457	Argument	PPC_ELF_MACHINE		6645231	7					
ANR	6646458	Identifier	PPC_ELF_MACHINE		6645231	0					
ANR	6646459	Argument	0		6645231	8					
ANR	6646460	PrimaryExpression	0		6645231	0					
ANR	6646461	ExpressionStatement	kernel_le = kernel_size > 0	477:12:8305:8332	6645231	1	True				
ANR	6646462	AssignmentExpression	kernel_le = kernel_size > 0		6645231	0		=			
ANR	6646463	Identifier	kernel_le		6645231	0					
ANR	6646464	RelationalExpression	kernel_size > 0		6645231	1		>			
ANR	6646465	Identifier	kernel_size		6645231	0					
ANR	6646466	PrimaryExpression	0		6645231	1					
ANR	6646467	IfStatement	if ( kernel_size < 0 )		6645231	3					
ANR	6646468	Condition	kernel_size < 0	481:12:8358:8372	6645231	0	True				
ANR	6646469	RelationalExpression	kernel_size < 0		6645231	0		<			
ANR	6646470	Identifier	kernel_size		6645231	0					
ANR	6646471	PrimaryExpression	0		6645231	1					
ANR	6646472	CompoundStatement		479:29:8323:8323	6645231	1					
ANR	6646473	ExpressionStatement	"error_report ( ""error loading %s: %s"" , kernel_filename , load_elf_strerror ( kernel_size ) )"	483:12:8390:8501	6645231	0	True				
ANR	6646474	CallExpression	"error_report ( ""error loading %s: %s"" , kernel_filename , load_elf_strerror ( kernel_size ) )"		6645231	0					
ANR	6646475	Callee	error_report		6645231	0					
ANR	6646476	Identifier	error_report		6645231	0					
ANR	6646477	ArgumentList	"""error loading %s: %s"""		6645231	1					
ANR	6646478	Argument	"""error loading %s: %s"""		6645231	0					
ANR	6646479	PrimaryExpression	"""error loading %s: %s"""		6645231	0					
ANR	6646480	Argument	kernel_filename		6645231	1					
ANR	6646481	Identifier	kernel_filename		6645231	0					
ANR	6646482	Argument	load_elf_strerror ( kernel_size )		6645231	2					
ANR	6646483	CallExpression	load_elf_strerror ( kernel_size )		6645231	0					
ANR	6646484	Callee	load_elf_strerror		6645231	0					
ANR	6646485	Identifier	load_elf_strerror		6645231	0					
ANR	6646486	ArgumentList	kernel_size		6645231	1					
ANR	6646487	Argument	kernel_size		6645231	0					
ANR	6646488	Identifier	kernel_size		6645231	0					
ANR	6646489	ExpressionStatement	exit ( 1 )	487:12:8516:8523	6645231	1	True				
ANR	6646490	CallExpression	exit ( 1 )		6645231	0					
ANR	6646491	Callee	exit		6645231	0					
ANR	6646492	Identifier	exit		6645231	0					
ANR	6646493	ArgumentList	1		6645231	1					
ANR	6646494	Argument	1		6645231	0					
ANR	6646495	PrimaryExpression	1		6645231	0					
ANR	6646496	IfStatement	if ( initrd_filename )		6645231	4					
ANR	6646497	Condition	initrd_filename	495:12:8578:8592	6645231	0	True				
ANR	6646498	Identifier	initrd_filename		6645231	0					
ANR	6646499	CompoundStatement		493:29:8543:8543	6645231	1					
ANR	6646500	ExpressionStatement	initrd_base = ( KERNEL_LOAD_ADDR + kernel_size + 0x1ffff ) & ~0xffff	503:12:8764:8830	6645231	0	True				
ANR	6646501	AssignmentExpression	initrd_base = ( KERNEL_LOAD_ADDR + kernel_size + 0x1ffff ) & ~0xffff		6645231	0		=			
ANR	6646502	Identifier	initrd_base		6645231	0					
ANR	6646503	BitAndExpression	( KERNEL_LOAD_ADDR + kernel_size + 0x1ffff ) & ~0xffff		6645231	1		&			
ANR	6646504	AdditiveExpression	KERNEL_LOAD_ADDR + kernel_size + 0x1ffff		6645231	0		+			
ANR	6646505	Identifier	KERNEL_LOAD_ADDR		6645231	0					
ANR	6646506	AdditiveExpression	kernel_size + 0x1ffff		6645231	1		+			
ANR	6646507	Identifier	kernel_size		6645231	0					
ANR	6646508	PrimaryExpression	0x1ffff		6645231	1					
ANR	6646509	Identifier	~0xffff		6645231	1					
ANR	6646510	ExpressionStatement	"initrd_size = load_image_targphys ( initrd_filename , initrd_base , load_limit - initrd_base )"	505:12:8845:8981	6645231	1	True				
ANR	6646511	AssignmentExpression	"initrd_size = load_image_targphys ( initrd_filename , initrd_base , load_limit - initrd_base )"		6645231	0		=			
ANR	6646512	Identifier	initrd_size		6645231	0					
ANR	6646513	CallExpression	"load_image_targphys ( initrd_filename , initrd_base , load_limit - initrd_base )"		6645231	1					
ANR	6646514	Callee	load_image_targphys		6645231	0					
ANR	6646515	Identifier	load_image_targphys		6645231	0					
ANR	6646516	ArgumentList	initrd_filename		6645231	1					
ANR	6646517	Argument	initrd_filename		6645231	0					
ANR	6646518	Identifier	initrd_filename		6645231	0					
ANR	6646519	Argument	initrd_base		6645231	1					
ANR	6646520	Identifier	initrd_base		6645231	0					
ANR	6646521	Argument	load_limit - initrd_base		6645231	2					
ANR	6646522	AdditiveExpression	load_limit - initrd_base		6645231	0		-			
ANR	6646523	Identifier	load_limit		6645231	0					
ANR	6646524	Identifier	initrd_base		6645231	1					
ANR	6646525	IfStatement	if ( initrd_size < 0 )		6645231	2					
ANR	6646526	Condition	initrd_size < 0	509:16:9000:9014	6645231	0	True				
ANR	6646527	RelationalExpression	initrd_size < 0		6645231	0		<			
ANR	6646528	Identifier	initrd_size		6645231	0					
ANR	6646529	PrimaryExpression	0		6645231	1					
ANR	6646530	CompoundStatement		507:33:8965:8965	6645231	1					
ANR	6646531	ExpressionStatement	"error_report ( ""could not load initial ram disk '%s'"" , initrd_filename )"	511:16:9036:9135	6645231	0	True				
ANR	6646532	CallExpression	"error_report ( ""could not load initial ram disk '%s'"" , initrd_filename )"		6645231	0					
ANR	6646533	Callee	error_report		6645231	0					
ANR	6646534	Identifier	error_report		6645231	0					
ANR	6646535	ArgumentList	"""could not load initial ram disk '%s'"""		6645231	1					
ANR	6646536	Argument	"""could not load initial ram disk '%s'"""		6645231	0					
ANR	6646537	PrimaryExpression	"""could not load initial ram disk '%s'"""		6645231	0					
ANR	6646538	Argument	initrd_filename		6645231	1					
ANR	6646539	Identifier	initrd_filename		6645231	0					
ANR	6646540	ExpressionStatement	exit ( 1 )	515:16:9154:9161	6645231	1	True				
ANR	6646541	CallExpression	exit ( 1 )		6645231	0					
ANR	6646542	Callee	exit		6645231	0					
ANR	6646543	Identifier	exit		6645231	0					
ANR	6646544	ArgumentList	1		6645231	1					
ANR	6646545	Argument	1		6645231	0					
ANR	6646546	PrimaryExpression	1		6645231	0					
ANR	6646547	ElseStatement	else		6645231	0					
ANR	6646548	CompoundStatement		517:15:9142:9142	6645231	0					
ANR	6646549	ExpressionStatement	initrd_base = 0	521:12:9209:9224	6645231	0	True				
ANR	6646550	AssignmentExpression	initrd_base = 0		6645231	0		=			
ANR	6646551	Identifier	initrd_base		6645231	0					
ANR	6646552	PrimaryExpression	0		6645231	1					
ANR	6646553	ExpressionStatement	initrd_size = 0	523:12:9239:9254	6645231	1	True				
ANR	6646554	AssignmentExpression	initrd_size = 0		6645231	0		=			
ANR	6646555	Identifier	initrd_size		6645231	0					
ANR	6646556	PrimaryExpression	0		6645231	1					
ANR	6646557	IfStatement	if ( bios_name == NULL )		6645231	60					
ANR	6646558	Condition	bios_name == NULL	531:8:9285:9301	6645231	0	True				
ANR	6646559	EqualityExpression	bios_name == NULL		6645231	0		==			
ANR	6646560	Identifier	bios_name		6645231	0					
ANR	6646561	Identifier	NULL		6645231	1					
ANR	6646562	CompoundStatement		529:27:9252:9252	6645231	1					
ANR	6646563	ExpressionStatement	bios_name = FW_FILE_NAME	533:8:9315:9339	6645231	0	True				
ANR	6646564	AssignmentExpression	bios_name = FW_FILE_NAME		6645231	0		=			
ANR	6646565	Identifier	bios_name		6645231	0					
ANR	6646566	Identifier	FW_FILE_NAME		6645231	1					
ANR	6646567	ExpressionStatement	"filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , bios_name )"	537:4:9353:9410	6645231	61	True				
ANR	6646568	AssignmentExpression	"filename = qemu_find_file ( QEMU_FILE_TYPE_BIOS , bios_name )"		6645231	0		=			
ANR	6646569	Identifier	filename		6645231	0					
ANR	6646570	CallExpression	"qemu_find_file ( QEMU_FILE_TYPE_BIOS , bios_name )"		6645231	1					
ANR	6646571	Callee	qemu_find_file		6645231	0					
ANR	6646572	Identifier	qemu_find_file		6645231	0					
ANR	6646573	ArgumentList	QEMU_FILE_TYPE_BIOS		6645231	1					
ANR	6646574	Argument	QEMU_FILE_TYPE_BIOS		6645231	0					
ANR	6646575	Identifier	QEMU_FILE_TYPE_BIOS		6645231	0					
ANR	6646576	Argument	bios_name		6645231	1					
ANR	6646577	Identifier	bios_name		6645231	0					
ANR	6646578	IfStatement	if ( ! filename )		6645231	62					
ANR	6646579	Condition	! filename	539:8:9421:9429	6645231	0	True				
ANR	6646580	UnaryOperationExpression	! filename		6645231	0					
ANR	6646581	UnaryOperator	!		6645231	0					
ANR	6646582	Identifier	filename		6645231	1					
ANR	6646583	CompoundStatement		537:19:9380:9380	6645231	1					
ANR	6646584	ExpressionStatement	"error_report ( ""Could not find LPAR firmware '%s'"" , bios_name )"	541:8:9443:9503	6645231	0	True				
ANR	6646585	CallExpression	"error_report ( ""Could not find LPAR firmware '%s'"" , bios_name )"		6645231	0					
ANR	6646586	Callee	error_report		6645231	0					
ANR	6646587	Identifier	error_report		6645231	0					
ANR	6646588	ArgumentList	"""Could not find LPAR firmware '%s'"""		6645231	1					
ANR	6646589	Argument	"""Could not find LPAR firmware '%s'"""		6645231	0					
ANR	6646590	PrimaryExpression	"""Could not find LPAR firmware '%s'"""		6645231	0					
ANR	6646591	Argument	bios_name		6645231	1					
ANR	6646592	Identifier	bios_name		6645231	0					
ANR	6646593	ExpressionStatement	exit ( 1 )	543:8:9514:9521	6645231	1	True				
ANR	6646594	CallExpression	exit ( 1 )		6645231	0					
ANR	6646595	Callee	exit		6645231	0					
ANR	6646596	Identifier	exit		6645231	0					
ANR	6646597	ArgumentList	1		6645231	1					
ANR	6646598	Argument	1		6645231	0					
ANR	6646599	PrimaryExpression	1		6645231	0					
ANR	6646600	ExpressionStatement	"fw_size = load_image_targphys ( filename , 0 , FW_MAX_SIZE )"	547:4:9535:9590	6645231	63	True				
ANR	6646601	AssignmentExpression	"fw_size = load_image_targphys ( filename , 0 , FW_MAX_SIZE )"		6645231	0		=			
ANR	6646602	Identifier	fw_size		6645231	0					
ANR	6646603	CallExpression	"load_image_targphys ( filename , 0 , FW_MAX_SIZE )"		6645231	1					
ANR	6646604	Callee	load_image_targphys		6645231	0					
ANR	6646605	Identifier	load_image_targphys		6645231	0					
ANR	6646606	ArgumentList	filename		6645231	1					
ANR	6646607	Argument	filename		6645231	0					
ANR	6646608	Identifier	filename		6645231	0					
ANR	6646609	Argument	0		6645231	1					
ANR	6646610	PrimaryExpression	0		6645231	0					
ANR	6646611	Argument	FW_MAX_SIZE		6645231	2					
ANR	6646612	Identifier	FW_MAX_SIZE		6645231	0					
ANR	6646613	IfStatement	if ( fw_size <= 0 )		6645231	64					
ANR	6646614	Condition	fw_size <= 0	549:8:9601:9612	6645231	0	True				
ANR	6646615	RelationalExpression	fw_size <= 0		6645231	0		<=			
ANR	6646616	Identifier	fw_size		6645231	0					
ANR	6646617	PrimaryExpression	0		6645231	1					
ANR	6646618	CompoundStatement		547:22:9563:9563	6645231	1					
ANR	6646619	ExpressionStatement	"error_report ( ""Could not load LPAR firmware '%s'"" , filename )"	551:8:9626:9685	6645231	0	True				
ANR	6646620	CallExpression	"error_report ( ""Could not load LPAR firmware '%s'"" , filename )"		6645231	0					
ANR	6646621	Callee	error_report		6645231	0					
ANR	6646622	Identifier	error_report		6645231	0					
ANR	6646623	ArgumentList	"""Could not load LPAR firmware '%s'"""		6645231	1					
ANR	6646624	Argument	"""Could not load LPAR firmware '%s'"""		6645231	0					
ANR	6646625	PrimaryExpression	"""Could not load LPAR firmware '%s'"""		6645231	0					
ANR	6646626	Argument	filename		6645231	1					
ANR	6646627	Identifier	filename		6645231	0					
ANR	6646628	ExpressionStatement	exit ( 1 )	553:8:9696:9703	6645231	1	True				
ANR	6646629	CallExpression	exit ( 1 )		6645231	0					
ANR	6646630	Callee	exit		6645231	0					
ANR	6646631	Identifier	exit		6645231	0					
ANR	6646632	ArgumentList	1		6645231	1					
ANR	6646633	Argument	1		6645231	0					
ANR	6646634	PrimaryExpression	1		6645231	0					
ANR	6646635	ExpressionStatement	g_free ( filename )	557:4:9717:9733	6645231	65	True				
ANR	6646636	CallExpression	g_free ( filename )		6645231	0					
ANR	6646637	Callee	g_free		6645231	0					
ANR	6646638	Identifier	g_free		6645231	0					
ANR	6646639	ArgumentList	filename		6645231	1					
ANR	6646640	Argument	filename		6645231	0					
ANR	6646641	Identifier	filename		6645231	0					
ANR	6646642	ExpressionStatement	"vmstate_register ( NULL , 0 , & vmstate_spapr , spapr )"	567:4:9950:9998	6645231	66	True				
ANR	6646643	CallExpression	"vmstate_register ( NULL , 0 , & vmstate_spapr , spapr )"		6645231	0					
ANR	6646644	Callee	vmstate_register		6645231	0					
ANR	6646645	Identifier	vmstate_register		6645231	0					
ANR	6646646	ArgumentList	NULL		6645231	1					
ANR	6646647	Argument	NULL		6645231	0					
ANR	6646648	Identifier	NULL		6645231	0					
ANR	6646649	Argument	0		6645231	1					
ANR	6646650	PrimaryExpression	0		6645231	0					
ANR	6646651	Argument	& vmstate_spapr		6645231	2					
ANR	6646652	UnaryOperationExpression	& vmstate_spapr		6645231	0					
ANR	6646653	UnaryOperator	&		6645231	0					
ANR	6646654	Identifier	vmstate_spapr		6645231	1					
ANR	6646655	Argument	spapr		6645231	3					
ANR	6646656	Identifier	spapr		6645231	0					
ANR	6646657	ExpressionStatement	"register_savevm_live ( NULL , ""spapr/htab"" , - 1 , 1 , & savevm_htab_handlers , spapr )"	569:4:10005:10108	6645231	67	True				
ANR	6646658	CallExpression	"register_savevm_live ( NULL , ""spapr/htab"" , - 1 , 1 , & savevm_htab_handlers , spapr )"		6645231	0					
ANR	6646659	Callee	register_savevm_live		6645231	0					
ANR	6646660	Identifier	register_savevm_live		6645231	0					
ANR	6646661	ArgumentList	NULL		6645231	1					
ANR	6646662	Argument	NULL		6645231	0					
ANR	6646663	Identifier	NULL		6645231	0					
ANR	6646664	Argument	"""spapr/htab"""		6645231	1					
ANR	6646665	PrimaryExpression	"""spapr/htab"""		6645231	0					
ANR	6646666	Argument	- 1		6645231	2					
ANR	6646667	UnaryOperationExpression	- 1		6645231	0					
ANR	6646668	UnaryOperator	-		6645231	0					
ANR	6646669	PrimaryExpression	1		6645231	1					
ANR	6646670	Argument	1		6645231	3					
ANR	6646671	PrimaryExpression	1		6645231	0					
ANR	6646672	Argument	& savevm_htab_handlers		6645231	4					
ANR	6646673	UnaryOperationExpression	& savevm_htab_handlers		6645231	0					
ANR	6646674	UnaryOperator	&		6645231	0					
ANR	6646675	Identifier	savevm_htab_handlers		6645231	1					
ANR	6646676	Argument	spapr		6645231	5					
ANR	6646677	Identifier	spapr		6645231	0					
ANR	6646678	ExpressionStatement	"spapr -> fdt_skel = spapr_create_fdt_skel ( initrd_base , initrd_size , kernel_size , kernel_le , kernel_cmdline , spapr -> check_exception_irq )"	577:4:10152:10420	6645231	68	True				
ANR	6646679	AssignmentExpression	"spapr -> fdt_skel = spapr_create_fdt_skel ( initrd_base , initrd_size , kernel_size , kernel_le , kernel_cmdline , spapr -> check_exception_irq )"		6645231	0		=			
ANR	6646680	PtrMemberAccess	spapr -> fdt_skel		6645231	0					
ANR	6646681	Identifier	spapr		6645231	0					
ANR	6646682	Identifier	fdt_skel		6645231	1					
ANR	6646683	CallExpression	"spapr_create_fdt_skel ( initrd_base , initrd_size , kernel_size , kernel_le , kernel_cmdline , spapr -> check_exception_irq )"		6645231	1					
ANR	6646684	Callee	spapr_create_fdt_skel		6645231	0					
ANR	6646685	Identifier	spapr_create_fdt_skel		6645231	0					
ANR	6646686	ArgumentList	initrd_base		6645231	1					
ANR	6646687	Argument	initrd_base		6645231	0					
ANR	6646688	Identifier	initrd_base		6645231	0					
ANR	6646689	Argument	initrd_size		6645231	1					
ANR	6646690	Identifier	initrd_size		6645231	0					
ANR	6646691	Argument	kernel_size		6645231	2					
ANR	6646692	Identifier	kernel_size		6645231	0					
ANR	6646693	Argument	kernel_le		6645231	3					
ANR	6646694	Identifier	kernel_le		6645231	0					
ANR	6646695	Argument	kernel_cmdline		6645231	4					
ANR	6646696	Identifier	kernel_cmdline		6645231	0					
ANR	6646697	Argument	spapr -> check_exception_irq		6645231	5					
ANR	6646698	PtrMemberAccess	spapr -> check_exception_irq		6645231	0					
ANR	6646699	Identifier	spapr		6645231	0					
ANR	6646700	Identifier	check_exception_irq		6645231	1					
ANR	6646701	ExpressionStatement	assert ( spapr -> fdt_skel != NULL )	585:4:10427:10458	6645231	69	True				
ANR	6646702	CallExpression	assert ( spapr -> fdt_skel != NULL )		6645231	0					
ANR	6646703	Callee	assert		6645231	0					
ANR	6646704	Identifier	assert		6645231	0					
ANR	6646705	ArgumentList	spapr -> fdt_skel != NULL		6645231	1					
ANR	6646706	Argument	spapr -> fdt_skel != NULL		6645231	0					
ANR	6646707	EqualityExpression	spapr -> fdt_skel != NULL		6645231	0		!=			
ANR	6646708	PtrMemberAccess	spapr -> fdt_skel		6645231	0					
ANR	6646709	Identifier	spapr		6645231	0					
ANR	6646710	Identifier	fdt_skel		6645231	1					
ANR	6646711	Identifier	NULL		6645231	1					
ANR	6646712	ExpressionStatement	QTAILQ_INIT ( & spapr -> ccs_list )	591:4:10491:10520	6645231	70	True				
ANR	6646713	CallExpression	QTAILQ_INIT ( & spapr -> ccs_list )		6645231	0					
ANR	6646714	Callee	QTAILQ_INIT		6645231	0					
ANR	6646715	Identifier	QTAILQ_INIT		6645231	0					
ANR	6646716	ArgumentList	& spapr -> ccs_list		6645231	1					
ANR	6646717	Argument	& spapr -> ccs_list		6645231	0					
ANR	6646718	UnaryOperationExpression	& spapr -> ccs_list		6645231	0					
ANR	6646719	UnaryOperator	&		6645231	0					
ANR	6646720	PtrMemberAccess	spapr -> ccs_list		6645231	1					
ANR	6646721	Identifier	spapr		6645231	0					
ANR	6646722	Identifier	ccs_list		6645231	1					
ANR	6646723	ExpressionStatement	"qemu_register_reset ( spapr_ccs_reset_hook , spapr )"	593:4:10527:10575	6645231	71	True				
ANR	6646724	CallExpression	"qemu_register_reset ( spapr_ccs_reset_hook , spapr )"		6645231	0					
ANR	6646725	Callee	qemu_register_reset		6645231	0					
ANR	6646726	Identifier	qemu_register_reset		6645231	0					
ANR	6646727	ArgumentList	spapr_ccs_reset_hook		6645231	1					
ANR	6646728	Argument	spapr_ccs_reset_hook		6645231	0					
ANR	6646729	Identifier	spapr_ccs_reset_hook		6645231	0					
ANR	6646730	Argument	spapr		6645231	1					
ANR	6646731	Identifier	spapr		6645231	0					
ANR	6646732	ExpressionStatement	"qemu_register_boot_set ( spapr_boot_set , spapr )"	597:4:10584:10629	6645231	72	True				
ANR	6646733	CallExpression	"qemu_register_boot_set ( spapr_boot_set , spapr )"		6645231	0					
ANR	6646734	Callee	qemu_register_boot_set		6645231	0					
ANR	6646735	Identifier	qemu_register_boot_set		6645231	0					
ANR	6646736	ArgumentList	spapr_boot_set		6645231	1					
ANR	6646737	Argument	spapr_boot_set		6645231	0					
ANR	6646738	Identifier	spapr_boot_set		6645231	0					
ANR	6646739	Argument	spapr		6645231	1					
ANR	6646740	Identifier	spapr		6645231	0					
ANR	6646741	ReturnType	static void		6645231	1					
ANR	6646742	Identifier	ppc_spapr_init		6645231	2					
ANR	6646743	ParameterList	MachineState * machine		6645231	3					
ANR	6646744	Parameter	MachineState * machine	1:27:27:47	6645231	0	True				
ANR	6646745	ParameterType	MachineState *		6645231	0					
ANR	6646746	Identifier	machine		6645231	1					
ANR	6646747	CFGEntryNode	ENTRY		6645231		True				
ANR	6646748	CFGExitNode	EXIT		6645231		True				
ANR	6646749	Symbol	lowaddr		6645231						
ANR	6646750	Symbol	smp_threads		6645231						
ANR	6646751	Symbol	DIV_ROUND_UP		6645231						
ANR	6646752	Symbol	SPAPR_MACHINE_GET_CLASS		6645231						
ANR	6646753	Symbol	load_limit		6645231						
ANR	6646754	Symbol	drive_get_max_bus		6645231						
ANR	6646755	Symbol	machine -> kernel_cmdline		6645231						
ANR	6646756	Symbol	cpu_ppc_hypercall		6645231						
ANR	6646757	Symbol	g_new		6645231						
ANR	6646758	Symbol	* phb		6645231						
ANR	6646759	Symbol	SPAPR_MACHINE		6645231						
ANR	6646760	Symbol	spapr_ccs_reset_hook		6645231						
ANR	6646761	Symbol	ram		6645231						
ANR	6646762	Symbol	kvmppc_alloc_rma		6645231						
ANR	6646763	Symbol	spapr_create_fdt_skel		6645231						
ANR	6646764	Symbol	MemoryRegion		6645231						
ANR	6646765	Symbol	phb -> bus		6645231						
ANR	6646766	Symbol	rma_region		6645231						
ANR	6646767	Symbol	spapr		6645231						
ANR	6646768	Symbol	& vmstate_spapr		6645231						
ANR	6646769	Symbol	filename		6645231						
ANR	6646770	Symbol	MIN		6645231						
ANR	6646771	Symbol	& error_fatal		6645231						
ANR	6646772	Symbol	* smc		6645231						
ANR	6646773	Symbol	RTAS_MAX_SIZE		6645231						
ANR	6646774	Symbol	smc		6645231						
ANR	6646775	Symbol	spapr -> vrma_adjust		6645231						
ANR	6646776	Symbol	spapr -> htab_shift		6645231						
ANR	6646777	Symbol	hotplug_mem_size		6645231						
ANR	6646778	Symbol	usb_bus		6645231						
ANR	6646779	Symbol	spapr -> fdt_skel		6645231						
ANR	6646780	Symbol	spapr_node0_size		6645231						
ANR	6646781	Symbol	g_malloc		6645231						
ANR	6646782	Symbol	spapr_vga_init		6645231						
ANR	6646783	Symbol	FW_MAX_SIZE		6645231						
ANR	6646784	Symbol	load_image_targphys		6645231						
ANR	6646785	Symbol	kvm_enabled		6645231						
ANR	6646786	Symbol	& spapr -> ccs_list		6645231						
ANR	6646787	Symbol	machine -> maxram_size		6645231						
ANR	6646788	Symbol	nd_table		6645231						
ANR	6646789	Symbol	SPAPR_HOTPLUG_MEM_ALIGN		6645231						
ANR	6646790	Symbol	get_system_memory		6645231						
ANR	6646791	Symbol	spapr_boot_set		6645231						
ANR	6646792	Symbol	xics_system_init		6645231						
ANR	6646793	Symbol	ELF_LOAD_WRONG_ENDIAN		6645231						
ANR	6646794	Symbol	i		6645231						
ANR	6646795	Symbol	phb		6645231						
ANR	6646796	Symbol	node0_size		6645231						
ANR	6646797	Symbol	machine -> cpu_model		6645231						
ANR	6646798	Symbol	spapr -> hotplug_memory		6645231						
ANR	6646799	Symbol	FW_FILE_NAME		6645231						
ANR	6646800	Symbol	cpu_ppc_init		6645231						
ANR	6646801	Symbol	machine		6645231						
ANR	6646802	Symbol	emulate_spapr_hypercall		6645231						
ANR	6646803	Symbol	FW_OVERHEAD		6645231						
ANR	6646804	Symbol	kernel_filename		6645231						
ANR	6646805	Symbol	serial_hds		6645231						
ANR	6646806	Symbol	machine -> ram_slots		6645231						
ANR	6646807	Symbol	* nd		6645231						
ANR	6646808	Symbol	nb_nics		6645231						
ANR	6646809	Symbol	spapr -> has_graphics		6645231						
ANR	6646810	Symbol	rma_alloc_size		6645231						
ANR	6646811	Symbol	msi_supported		6645231						
ANR	6646812	Symbol	rma		6645231						
ANR	6646813	Symbol	spapr -> rma_size		6645231						
ANR	6646814	Symbol	defaults_enabled		6645231						
ANR	6646815	Symbol	max_cpus		6645231						
ANR	6646816	Symbol	nd -> model		6645231						
ANR	6646817	Symbol	spapr -> rtas_size		6645231						
ANR	6646818	Symbol	MIN_RMA_SLOF		6645231						
ANR	6646819	Symbol	spapr -> icp		6645231						
ANR	6646820	Symbol	machine -> initrd_filename		6645231						
ANR	6646821	Symbol	kvmppc_smt_threads		6645231						
ANR	6646822	Symbol	fw_size		6645231						
ANR	6646823	Symbol	XICS_IRQS		6645231						
ANR	6646824	Symbol	machine -> usb		6645231						
ANR	6646825	Symbol	spapr_create_phb		6645231						
ANR	6646826	Symbol	& savevm_htab_handlers		6645231						
ANR	6646827	Symbol	kernel_size		6645231						
ANR	6646828	Symbol	load_elf_strerror		6645231						
ANR	6646829	Symbol	strcmp		6645231						
ANR	6646830	Symbol	PPC_ELF_MACHINE		6645231						
ANR	6646831	Symbol	smp_cpus		6645231						
ANR	6646832	Symbol	NULL		6645231						
ANR	6646833	Symbol	get_image_size		6645231						
ANR	6646834	Symbol	initrd_base		6645231						
ANR	6646835	Symbol	ROUND_UP		6645231						
ANR	6646836	Symbol	cpu		6645231						
ANR	6646837	Symbol	QEMU_FILE_TYPE_BIOS		6645231						
ANR	6646838	Symbol	spapr_vio_bus_init		6645231						
ANR	6646839	Symbol	& rma		6645231						
ANR	6646840	Symbol	KERNEL_LOAD_ADDR		6645231						
ANR	6646841	Symbol	OBJECT		6645231						
ANR	6646842	Symbol	nd		6645231						
ANR	6646843	Symbol	true		6645231						
ANR	6646844	Symbol	smc -> use_ohci_by_default		6645231						
ANR	6646845	Symbol	* machine		6645231						
ANR	6646846	Symbol	load_elf		6645231						
ANR	6646847	Symbol	translate_kernel_address		6645231						
ANR	6646848	Symbol	~0xffff		6645231						
ANR	6646849	Symbol	kernel_cmdline		6645231						
ANR	6646850	Symbol	spapr -> check_exception_irq		6645231						
ANR	6646851	Symbol	RTAS_MAX_ADDR		6645231						
ANR	6646852	Symbol	machine -> ram_size		6645231						
ANR	6646853	Symbol	SPAPR_MAX_RAM_SLOTS		6645231						
ANR	6646854	Symbol	initrd_filename		6645231						
ANR	6646855	Symbol	machine -> usb_disabled		6645231						
ANR	6646856	Symbol	initrd_size		6645231						
ANR	6646857	Symbol	spapr -> hotplug_memory . base		6645231						
ANR	6646858	Symbol	bios_name		6645231						
ANR	6646859	Symbol	machine -> kernel_filename		6645231						
ANR	6646860	Symbol	kernel_le		6645231						
ANR	6646861	Symbol	& spapr -> hotplug_memory . mr		6645231						
ANR	6646862	Symbol	g_strdup		6645231						
ANR	6646863	Symbol	& lowaddr		6645231						
ANR	6646864	Symbol	* spapr		6645231						
ANR	6646865	Symbol	smc -> dr_lmb_enabled		6645231						
ANR	6646866	Symbol	qemu_find_file		6645231						
ANR	6646867	Symbol	spapr -> vio_bus		6645231						
ANR	6646868	Symbol	spapr -> rtas_blob		6645231						
ANR	6646869	Symbol	MAX_SERIAL_PORTS		6645231						
ANR	6646870	Symbol	& spapr -> phbs		6645231						
ANR	6646871	Symbol	& spapr -> hotplug_memory		6645231						
ANR	6646872	Symbol	false		6645231						
ANR	6646873	Symbol	* serial_hds		6645231						
ANR	6646874	Symbol	usb_bus_find		6645231						
ANR	6646875	Symbol	* i		6645231						
ANR	6646876	Symbol	IF_SCSI		6645231						
ANR	6646877	Symbol	sysmem		6645231						
ANR	6646878	Symbol	load_image_size		6645231						
