command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3429111	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_h264_idct_add16intra_sse2_0.c								
ANR	3429112	Function	ff_h264_idct_add16intra_sse2	1:0:0:447							
ANR	3429113	FunctionDef	"ff_h264_idct_add16intra_sse2 (uint8_t * dst , const int * block_offset , DCTELEM * block , int stride , const uint8_t nnzc [ 6 * 8 ])"		3429112	0					
ANR	3429114	CompoundStatement		1:132:132:447	3429112	0					
ANR	3429115	IdentifierDeclStatement	int i ;	3:4:139:144	3429112	0	True				
ANR	3429116	IdentifierDecl	i		3429112	0					
ANR	3429117	IdentifierDeclType	int		3429112	0					
ANR	3429118	Identifier	i		3429112	1					
ANR	3429119	ForStatement	for ( i = 0 ; i < 16 ; i += 2 )		3429112	1					
ANR	3429120	ForInit	i = 0 ;	5:8:155:158	3429112	0	True				
ANR	3429121	AssignmentExpression	i = 0		3429112	0		=			
ANR	3429122	Identifier	i		3429112	0					
ANR	3429123	PrimaryExpression	0		3429112	1					
ANR	3429124	Condition	i < 16	5:13:160:163	3429112	1	True				
ANR	3429125	RelationalExpression	i < 16		3429112	0		<			
ANR	3429126	Identifier	i		3429112	0					
ANR	3429127	PrimaryExpression	16		3429112	1					
ANR	3429128	AssignmentExpression	i += 2	5:19:166:169	3429112	2	True	+=			
ANR	3429129	Identifier	i		3429112	0					
ANR	3429130	PrimaryExpression	2		3429112	1					
ANR	3429131	CompoundStatement		5:24:38:38	3429112	3					
ANR	3429132	IfStatement	if ( nnzc [ scan8 [ i + 0 ] ] | nnzc [ scan8 [ i + 1 ] ] )		3429112	0					
ANR	3429133	Condition	nnzc [ scan8 [ i + 0 ] ] | nnzc [ scan8 [ i + 1 ] ]	7:11:185:221	3429112	0	True				
ANR	3429134	InclusiveOrExpression	nnzc [ scan8 [ i + 0 ] ] | nnzc [ scan8 [ i + 1 ] ]		3429112	0		|			
ANR	3429135	ArrayIndexing	nnzc [ scan8 [ i + 0 ] ]		3429112	0					
ANR	3429136	Identifier	nnzc		3429112	0					
ANR	3429137	ArrayIndexing	scan8 [ i + 0 ]		3429112	1					
ANR	3429138	Identifier	scan8		3429112	0					
ANR	3429139	AdditiveExpression	i + 0		3429112	1		+			
ANR	3429140	Identifier	i		3429112	0					
ANR	3429141	PrimaryExpression	0		3429112	1					
ANR	3429142	ArrayIndexing	nnzc [ scan8 [ i + 1 ] ]		3429112	1					
ANR	3429143	Identifier	nnzc		3429112	0					
ANR	3429144	ArrayIndexing	scan8 [ i + 1 ]		3429112	1					
ANR	3429145	Identifier	scan8		3429112	0					
ANR	3429146	AdditiveExpression	i + 1		3429112	1		+			
ANR	3429147	Identifier	i		3429112	0					
ANR	3429148	PrimaryExpression	1		3429112	1					
ANR	3429149	ExpressionStatement	"ff_x264_add8x4_idct_sse2 ( dst + block_offset [ i ] , block + i * 16 , stride )"	9:12:237:307	3429112	1	True				
ANR	3429150	CallExpression	"ff_x264_add8x4_idct_sse2 ( dst + block_offset [ i ] , block + i * 16 , stride )"		3429112	0					
ANR	3429151	Callee	ff_x264_add8x4_idct_sse2		3429112	0					
ANR	3429152	Identifier	ff_x264_add8x4_idct_sse2		3429112	0					
ANR	3429153	ArgumentList	dst + block_offset [ i ]		3429112	1					
ANR	3429154	Argument	dst + block_offset [ i ]		3429112	0					
ANR	3429155	AdditiveExpression	dst + block_offset [ i ]		3429112	0		+			
ANR	3429156	Identifier	dst		3429112	0					
ANR	3429157	ArrayIndexing	block_offset [ i ]		3429112	1					
ANR	3429158	Identifier	block_offset		3429112	0					
ANR	3429159	Identifier	i		3429112	1					
ANR	3429160	Argument	block + i * 16		3429112	1					
ANR	3429161	AdditiveExpression	block + i * 16		3429112	0		+			
ANR	3429162	Identifier	block		3429112	0					
ANR	3429163	MultiplicativeExpression	i * 16		3429112	1		*			
ANR	3429164	Identifier	i		3429112	0					
ANR	3429165	PrimaryExpression	16		3429112	1					
ANR	3429166	Argument	stride		3429112	2					
ANR	3429167	Identifier	stride		3429112	0					
ANR	3429168	ElseStatement	else		3429112	0					
ANR	3429169	IfStatement	if ( block [ i * 16 ] | block [ i * 16 + 16 ] )		3429112	0					
ANR	3429170	Condition	block [ i * 16 ] | block [ i * 16 + 16 ]	11:16:326:351	3429112	0	True				
ANR	3429171	InclusiveOrExpression	block [ i * 16 ] | block [ i * 16 + 16 ]		3429112	0		|			
ANR	3429172	ArrayIndexing	block [ i * 16 ]		3429112	0					
ANR	3429173	Identifier	block		3429112	0					
ANR	3429174	MultiplicativeExpression	i * 16		3429112	1		*			
ANR	3429175	Identifier	i		3429112	0					
ANR	3429176	PrimaryExpression	16		3429112	1					
ANR	3429177	ArrayIndexing	block [ i * 16 + 16 ]		3429112	1					
ANR	3429178	Identifier	block		3429112	0					
ANR	3429179	AdditiveExpression	i * 16 + 16		3429112	1		+			
ANR	3429180	MultiplicativeExpression	i * 16		3429112	0		*			
ANR	3429181	Identifier	i		3429112	0					
ANR	3429182	PrimaryExpression	16		3429112	1					
ANR	3429183	PrimaryExpression	16		3429112	1					
ANR	3429184	ExpressionStatement	"ff_h264_idct_dc_add8_mmx2 ( dst + block_offset [ i ] , block + i * 16 , stride )"	13:12:367:437	3429112	1	True				
ANR	3429185	CallExpression	"ff_h264_idct_dc_add8_mmx2 ( dst + block_offset [ i ] , block + i * 16 , stride )"		3429112	0					
ANR	3429186	Callee	ff_h264_idct_dc_add8_mmx2		3429112	0					
ANR	3429187	Identifier	ff_h264_idct_dc_add8_mmx2		3429112	0					
ANR	3429188	ArgumentList	dst + block_offset [ i ]		3429112	1					
ANR	3429189	Argument	dst + block_offset [ i ]		3429112	0					
ANR	3429190	AdditiveExpression	dst + block_offset [ i ]		3429112	0		+			
ANR	3429191	Identifier	dst		3429112	0					
ANR	3429192	ArrayIndexing	block_offset [ i ]		3429112	1					
ANR	3429193	Identifier	block_offset		3429112	0					
ANR	3429194	Identifier	i		3429112	1					
ANR	3429195	Argument	block + i * 16		3429112	1					
ANR	3429196	AdditiveExpression	block + i * 16		3429112	0		+			
ANR	3429197	Identifier	block		3429112	0					
ANR	3429198	MultiplicativeExpression	i * 16		3429112	1		*			
ANR	3429199	Identifier	i		3429112	0					
ANR	3429200	PrimaryExpression	16		3429112	1					
ANR	3429201	Argument	stride		3429112	2					
ANR	3429202	Identifier	stride		3429112	0					
ANR	3429203	ReturnType	static void		3429112	1					
ANR	3429204	Identifier	ff_h264_idct_add16intra_sse2		3429112	2					
ANR	3429205	ParameterList	"uint8_t * dst , const int * block_offset , DCTELEM * block , int stride , const uint8_t nnzc [ 6 * 8 ]"		3429112	3					
ANR	3429206	Parameter	uint8_t * dst	1:41:41:52	3429112	0	True				
ANR	3429207	ParameterType	uint8_t *		3429112	0					
ANR	3429208	Identifier	dst		3429112	1					
ANR	3429209	Parameter	const int * block_offset	1:55:55:77	3429112	1	True				
ANR	3429210	ParameterType	const int *		3429112	0					
ANR	3429211	Identifier	block_offset		3429112	1					
ANR	3429212	Parameter	DCTELEM * block	1:80:80:93	3429112	2	True				
ANR	3429213	ParameterType	DCTELEM *		3429112	0					
ANR	3429214	Identifier	block		3429112	1					
ANR	3429215	Parameter	int stride	1:96:96:105	3429112	3	True				
ANR	3429216	ParameterType	int		3429112	0					
ANR	3429217	Identifier	stride		3429112	1					
ANR	3429218	Parameter	const uint8_t nnzc [ 6 * 8 ]	1:108:108:130	3429112	4	True				
ANR	3429219	ParameterType	const uint8_t [ 6 * 8 ]		3429112	0					
ANR	3429220	Identifier	nnzc		3429112	1					
ANR	3429221	CFGEntryNode	ENTRY		3429112		True				
ANR	3429222	CFGExitNode	EXIT		3429112		True				
ANR	3429223	Symbol	* * i		3429112						
ANR	3429224	Symbol	dst		3429112						
ANR	3429225	Symbol	* scan8		3429112						
ANR	3429226	Symbol	i		3429112						
ANR	3429227	Symbol	stride		3429112						
ANR	3429228	Symbol	* * scan8		3429112						
ANR	3429229	Symbol	* block_offset		3429112						
ANR	3429230	Symbol	* block		3429112						
ANR	3429231	Symbol	* i		3429112						
ANR	3429232	Symbol	block_offset		3429112						
ANR	3429233	Symbol	scan8		3429112						
ANR	3429234	Symbol	block		3429112						
ANR	3429235	Symbol	nnzc		3429112						
ANR	3429236	Symbol	* nnzc		3429112						
