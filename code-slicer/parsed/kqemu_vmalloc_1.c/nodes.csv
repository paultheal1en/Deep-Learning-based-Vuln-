command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5083952	File	/home/p4ultr4n/workplace/ReVeal/raw_code/kqemu_vmalloc_1.c								
ANR	5083953	Function	kqemu_vmalloc	1:0:0:3112							
ANR	5083954	FunctionDef	kqemu_vmalloc (size_t size)		5083953	0					
ANR	5083955	CompoundStatement		3:0:34:3112	5083953	0					
ANR	5083956	Statement	static	5:4:41:46	5083953	0	True				
ANR	5083957	IdentifierDeclStatement	int phys_ram_fd = - 1 ;	5:11:48:68	5083953	1	True				
ANR	5083958	IdentifierDecl	phys_ram_fd = - 1		5083953	0					
ANR	5083959	IdentifierDeclType	int		5083953	0					
ANR	5083960	Identifier	phys_ram_fd		5083953	1					
ANR	5083961	AssignmentExpression	phys_ram_fd = - 1		5083953	2		=			
ANR	5083962	Identifier	phys_ram_fd		5083953	0					
ANR	5083963	UnaryOperationExpression	- 1		5083953	1					
ANR	5083964	UnaryOperator	-		5083953	0					
ANR	5083965	PrimaryExpression	1		5083953	1					
ANR	5083966	Statement	static	7:4:75:80	5083953	2	True				
ANR	5083967	IdentifierDeclStatement	int phys_ram_size = 0 ;	7:11:82:103	5083953	3	True				
ANR	5083968	IdentifierDecl	phys_ram_size = 0		5083953	0					
ANR	5083969	IdentifierDeclType	int		5083953	0					
ANR	5083970	Identifier	phys_ram_size		5083953	1					
ANR	5083971	AssignmentExpression	phys_ram_size = 0		5083953	2		=			
ANR	5083972	Identifier	phys_ram_size		5083953	0					
ANR	5083973	PrimaryExpression	0		5083953	1					
ANR	5083974	IdentifierDeclStatement	const char * tmpdir ;	9:4:110:128	5083953	4	True				
ANR	5083975	IdentifierDecl	* tmpdir		5083953	0					
ANR	5083976	IdentifierDeclType	const char *		5083953	0					
ANR	5083977	Identifier	tmpdir		5083953	1					
ANR	5083978	IdentifierDeclStatement	char phys_ram_file [ 1024 ] ;	11:4:135:159	5083953	5	True				
ANR	5083979	IdentifierDecl	phys_ram_file [ 1024 ]		5083953	0					
ANR	5083980	IdentifierDeclType	char [ 1024 ]		5083953	0					
ANR	5083981	Identifier	phys_ram_file		5083953	1					
ANR	5083982	PrimaryExpression	1024		5083953	2					
ANR	5083983	IdentifierDeclStatement	void * ptr ;	13:4:166:175	5083953	6	True				
ANR	5083984	IdentifierDecl	* ptr		5083953	0					
ANR	5083985	IdentifierDeclType	void *		5083953	0					
ANR	5083986	Identifier	ptr		5083953	1					
ANR	5083987	IdentifierDeclStatement	struct statfs stfs ;	15:4:182:200	5083953	7	True				
ANR	5083988	IdentifierDecl	stfs		5083953	0					
ANR	5083989	IdentifierDeclType	struct statfs		5083953	0					
ANR	5083990	Identifier	stfs		5083953	1					
ANR	5083991	IfStatement	if ( phys_ram_fd < 0 )		5083953	8					
ANR	5083992	Condition	phys_ram_fd < 0	19:8:213:227	5083953	0	True				
ANR	5083993	RelationalExpression	phys_ram_fd < 0		5083953	0		<			
ANR	5083994	Identifier	phys_ram_fd		5083953	0					
ANR	5083995	PrimaryExpression	0		5083953	1					
ANR	5083996	CompoundStatement		17:25:195:195	5083953	1					
ANR	5083997	ExpressionStatement	"tmpdir = getenv ( ""QEMU_TMPDIR"" )"	21:8:241:271	5083953	0	True				
ANR	5083998	AssignmentExpression	"tmpdir = getenv ( ""QEMU_TMPDIR"" )"		5083953	0		=			
ANR	5083999	Identifier	tmpdir		5083953	0					
ANR	5084000	CallExpression	"getenv ( ""QEMU_TMPDIR"" )"		5083953	1					
ANR	5084001	Callee	getenv		5083953	0					
ANR	5084002	Identifier	getenv		5083953	0					
ANR	5084003	ArgumentList	"""QEMU_TMPDIR"""		5083953	1					
ANR	5084004	Argument	"""QEMU_TMPDIR"""		5083953	0					
ANR	5084005	PrimaryExpression	"""QEMU_TMPDIR"""		5083953	0					
ANR	5084006	IfStatement	if ( ! tmpdir )		5083953	1					
ANR	5084007	Condition	! tmpdir	23:12:286:292	5083953	0	True				
ANR	5084008	UnaryOperationExpression	! tmpdir		5083953	0					
ANR	5084009	UnaryOperator	!		5083953	0					
ANR	5084010	Identifier	tmpdir		5083953	1					
ANR	5084011	ExpressionStatement	"tmpdir = ""/dev/shm"""	25:12:308:327	5083953	1	True				
ANR	5084012	AssignmentExpression	"tmpdir = ""/dev/shm"""		5083953	0		=			
ANR	5084013	Identifier	tmpdir		5083953	0					
ANR	5084014	PrimaryExpression	"""/dev/shm"""		5083953	1					
ANR	5084015	IfStatement	"if ( statfs ( tmpdir , & stfs ) == 0 )"		5083953	2					
ANR	5084016	Condition	"statfs ( tmpdir , & stfs ) == 0"	27:12:342:367	5083953	0	True				
ANR	5084017	EqualityExpression	"statfs ( tmpdir , & stfs ) == 0"		5083953	0		==			
ANR	5084018	CallExpression	"statfs ( tmpdir , & stfs )"		5083953	0					
ANR	5084019	Callee	statfs		5083953	0					
ANR	5084020	Identifier	statfs		5083953	0					
ANR	5084021	ArgumentList	tmpdir		5083953	1					
ANR	5084022	Argument	tmpdir		5083953	0					
ANR	5084023	Identifier	tmpdir		5083953	0					
ANR	5084024	Argument	& stfs		5083953	1					
ANR	5084025	UnaryOperationExpression	& stfs		5083953	0					
ANR	5084026	UnaryOperator	&		5083953	0					
ANR	5084027	Identifier	stfs		5083953	1					
ANR	5084028	PrimaryExpression	0		5083953	1					
ANR	5084029	CompoundStatement		33:12:410:429	5083953	1					
ANR	5084030	IdentifierDeclStatement	int64_t free_space ;	29:12:385:403	5083953	0	True				
ANR	5084031	IdentifierDecl	free_space		5083953	0					
ANR	5084032	IdentifierDeclType	int64_t		5083953	0					
ANR	5084033	Identifier	free_space		5083953	1					
ANR	5084034	IdentifierDeclStatement	int ram_mb ;	31:12:418:428	5083953	1	True				
ANR	5084035	IdentifierDecl	ram_mb		5083953	0					
ANR	5084036	IdentifierDeclType	int		5083953	0					
ANR	5084037	Identifier	ram_mb		5083953	1					
ANR	5084038	IdentifierDeclStatement	extern int ram_size ;	35:12:445:464	5083953	2	True				
ANR	5084039	IdentifierDecl	ram_size		5083953	0					
ANR	5084040	IdentifierDeclType	extern int		5083953	0					
ANR	5084041	Identifier	ram_size		5083953	1					
ANR	5084042	ExpressionStatement	free_space = ( int64_t ) stfs . f_bavail * stfs . f_bsize	37:12:479:529	5083953	3	True				
ANR	5084043	AssignmentExpression	free_space = ( int64_t ) stfs . f_bavail * stfs . f_bsize		5083953	0		=			
ANR	5084044	Identifier	free_space		5083953	0					
ANR	5084045	MultiplicativeExpression	( int64_t ) stfs . f_bavail * stfs . f_bsize		5083953	1		*			
ANR	5084046	CastExpression	( int64_t ) stfs . f_bavail		5083953	0					
ANR	5084047	CastTarget	int64_t		5083953	0					
ANR	5084048	MemberAccess	stfs . f_bavail		5083953	1					
ANR	5084049	Identifier	stfs		5083953	0					
ANR	5084050	Identifier	f_bavail		5083953	1					
ANR	5084051	MemberAccess	stfs . f_bsize		5083953	1					
ANR	5084052	Identifier	stfs		5083953	0					
ANR	5084053	Identifier	f_bsize		5083953	1					
ANR	5084054	IfStatement	if ( ( ram_size + 8192 * 1024 ) >= free_space )		5083953	4					
ANR	5084055	Condition	( ram_size + 8192 * 1024 ) >= free_space	39:16:548:585	5083953	0	True				
ANR	5084056	RelationalExpression	( ram_size + 8192 * 1024 ) >= free_space		5083953	0		>=			
ANR	5084057	AdditiveExpression	ram_size + 8192 * 1024		5083953	0		+			
ANR	5084058	Identifier	ram_size		5083953	0					
ANR	5084059	MultiplicativeExpression	8192 * 1024		5083953	1		*			
ANR	5084060	PrimaryExpression	8192		5083953	0					
ANR	5084061	PrimaryExpression	1024		5083953	1					
ANR	5084062	Identifier	free_space		5083953	1					
ANR	5084063	CompoundStatement		37:56:553:553	5083953	1					
ANR	5084064	ExpressionStatement	ram_mb = ( ram_size / ( 1024 * 1024 ) )	41:16:607:642	5083953	0	True				
ANR	5084065	AssignmentExpression	ram_mb = ( ram_size / ( 1024 * 1024 ) )		5083953	0		=			
ANR	5084066	Identifier	ram_mb		5083953	0					
ANR	5084067	MultiplicativeExpression	ram_size / ( 1024 * 1024 )		5083953	1		/			
ANR	5084068	Identifier	ram_size		5083953	0					
ANR	5084069	MultiplicativeExpression	1024 * 1024		5083953	1		*			
ANR	5084070	PrimaryExpression	1024		5083953	0					
ANR	5084071	PrimaryExpression	1024		5083953	1					
ANR	5084072	ExpressionStatement	"fprintf ( stderr , ""You do not have enough space in '%s' for the %d MB of QEMU virtual RAM.\\n"" , tmpdir , ram_mb )"	43:16:661:820	5083953	1	True				
ANR	5084073	CallExpression	"fprintf ( stderr , ""You do not have enough space in '%s' for the %d MB of QEMU virtual RAM.\\n"" , tmpdir , ram_mb )"		5083953	0					
ANR	5084074	Callee	fprintf		5083953	0					
ANR	5084075	Identifier	fprintf		5083953	0					
ANR	5084076	ArgumentList	stderr		5083953	1					
ANR	5084077	Argument	stderr		5083953	0					
ANR	5084078	Identifier	stderr		5083953	0					
ANR	5084079	Argument	"""You do not have enough space in '%s' for the %d MB of QEMU virtual RAM.\\n"""		5083953	1					
ANR	5084080	PrimaryExpression	"""You do not have enough space in '%s' for the %d MB of QEMU virtual RAM.\\n"""		5083953	0					
ANR	5084081	Argument	tmpdir		5083953	2					
ANR	5084082	Identifier	tmpdir		5083953	0					
ANR	5084083	Argument	ram_mb		5083953	3					
ANR	5084084	Identifier	ram_mb		5083953	0					
ANR	5084085	IfStatement	"if ( strcmp ( tmpdir , ""/dev/shm"" ) == 0 )"		5083953	2					
ANR	5084086	Condition	"strcmp ( tmpdir , ""/dev/shm"" ) == 0"	49:20:843:873	5083953	0	True				
ANR	5084087	EqualityExpression	"strcmp ( tmpdir , ""/dev/shm"" ) == 0"		5083953	0		==			
ANR	5084088	CallExpression	"strcmp ( tmpdir , ""/dev/shm"" )"		5083953	0					
ANR	5084089	Callee	strcmp		5083953	0					
ANR	5084090	Identifier	strcmp		5083953	0					
ANR	5084091	ArgumentList	tmpdir		5083953	1					
ANR	5084092	Argument	tmpdir		5083953	0					
ANR	5084093	Identifier	tmpdir		5083953	0					
ANR	5084094	Argument	"""/dev/shm"""		5083953	1					
ANR	5084095	PrimaryExpression	"""/dev/shm"""		5083953	0					
ANR	5084096	PrimaryExpression	0		5083953	1					
ANR	5084097	CompoundStatement		47:53:841:841	5083953	1					
ANR	5084098	Statement	fprintf	51:20:899:905	5083953	0	True				
ANR	5084099	Statement	(	51:27:906:906	5083953	1	True				
ANR	5084100	Statement	stderr	51:28:907:912	5083953	2	True				
ANR	5084101	Statement	","	51:34:913:913	5083953	3	True				
ANR	5084102	Statement	"""To have more space available provided you have enough RAM and swap, do as root:\\n"""	51:36:915:997	5083953	4	True				
ANR	5084103	Statement	"""umount /dev/shm\\n"""	53:28:1028:1046	5083953	5	True				
ANR	5084104	Statement	"""mount -t tmpfs -o size=%dm none /dev/shm\\n"""	55:28:1077:1120	5083953	6	True				
ANR	5084105	Statement	","	55:72:1121:1121	5083953	7	True				
ANR	5084106	Statement	ram_mb	57:28:1152:1157	5083953	8	True				
ANR	5084107	Statement	+	57:35:1159:1159	5083953	9	True				
ANR	5084108	Statement	16	57:37:1161:1162	5083953	10	True				
ANR	5084109	Statement	)	57:39:1163:1163	5083953	11	True				
ANR	5084110	ExpressionStatement		57:40:1164:1164	5083953	12	True				
ANR	5084111	ElseStatement	else		5083953	0					
ANR	5084112	CompoundStatement		57:23:1155:1155	5083953	0					
ANR	5084113	Statement	fprintf	61:20:1213:1219	5083953	0	True				
ANR	5084114	Statement	(	61:27:1220:1220	5083953	1	True				
ANR	5084115	Statement	stderr	61:28:1221:1226	5083953	2	True				
ANR	5084116	Statement	","	61:34:1227:1227	5083953	3	True				
ANR	5084117	Statement	"""Use the '-m' option of QEMU to diminish the amount of virtual RAM or use the\\n"""	63:28:1259:1338	5083953	4	True				
ANR	5084118	Statement	"""QEMU_TMPDIR environment variable to set another directory where the QEMU\\n"""	65:28:1369:1444	5083953	5	True				
ANR	5084119	Statement	"""temporary RAM file will be opened.\\n"""	67:28:1475:1512	5083953	6	True				
ANR	5084120	Statement	)	67:66:1513:1513	5083953	7	True				
ANR	5084121	ExpressionStatement		67:67:1514:1514	5083953	8	True				
ANR	5084122	ExpressionStatement	"fprintf ( stderr , ""Or disable the accelerator module with -no-kqemu\\n"" )"	71:16:1552:1621	5083953	3	True				
ANR	5084123	CallExpression	"fprintf ( stderr , ""Or disable the accelerator module with -no-kqemu\\n"" )"		5083953	0					
ANR	5084124	Callee	fprintf		5083953	0					
ANR	5084125	Identifier	fprintf		5083953	0					
ANR	5084126	ArgumentList	stderr		5083953	1					
ANR	5084127	Argument	stderr		5083953	0					
ANR	5084128	Identifier	stderr		5083953	0					
ANR	5084129	Argument	"""Or disable the accelerator module with -no-kqemu\\n"""		5083953	1					
ANR	5084130	PrimaryExpression	"""Or disable the accelerator module with -no-kqemu\\n"""		5083953	0					
ANR	5084131	ExpressionStatement	exit ( 1 )	73:16:1640:1647	5083953	4	True				
ANR	5084132	CallExpression	exit ( 1 )		5083953	0					
ANR	5084133	Callee	exit		5083953	0					
ANR	5084134	Identifier	exit		5083953	0					
ANR	5084135	ArgumentList	1		5083953	1					
ANR	5084136	Argument	1		5083953	0					
ANR	5084137	PrimaryExpression	1		5083953	0					
ANR	5084138	ExpressionStatement	"snprintf ( phys_ram_file , sizeof ( phys_ram_file ) , ""%s/qemuXXXXXX"" , tmpdir )"	79:8:1684:1774	5083953	3	True				
ANR	5084139	CallExpression	"snprintf ( phys_ram_file , sizeof ( phys_ram_file ) , ""%s/qemuXXXXXX"" , tmpdir )"		5083953	0					
ANR	5084140	Callee	snprintf		5083953	0					
ANR	5084141	Identifier	snprintf		5083953	0					
ANR	5084142	ArgumentList	phys_ram_file		5083953	1					
ANR	5084143	Argument	phys_ram_file		5083953	0					
ANR	5084144	Identifier	phys_ram_file		5083953	0					
ANR	5084145	Argument	sizeof ( phys_ram_file )		5083953	1					
ANR	5084146	SizeofExpression	sizeof ( phys_ram_file )		5083953	0					
ANR	5084147	Sizeof	sizeof		5083953	0					
ANR	5084148	SizeofOperand	phys_ram_file		5083953	1					
ANR	5084149	Argument	"""%s/qemuXXXXXX"""		5083953	2					
ANR	5084150	PrimaryExpression	"""%s/qemuXXXXXX"""		5083953	0					
ANR	5084151	Argument	tmpdir		5083953	3					
ANR	5084152	Identifier	tmpdir		5083953	0					
ANR	5084153	IfStatement	if ( mkstemp ( phys_ram_file ) < 0 )		5083953	4					
ANR	5084154	Condition	mkstemp ( phys_ram_file ) < 0	83:12:1789:1814	5083953	0	True				
ANR	5084155	RelationalExpression	mkstemp ( phys_ram_file ) < 0		5083953	0		<			
ANR	5084156	CallExpression	mkstemp ( phys_ram_file )		5083953	0					
ANR	5084157	Callee	mkstemp		5083953	0					
ANR	5084158	Identifier	mkstemp		5083953	0					
ANR	5084159	ArgumentList	phys_ram_file		5083953	1					
ANR	5084160	Argument	phys_ram_file		5083953	0					
ANR	5084161	Identifier	phys_ram_file		5083953	0					
ANR	5084162	PrimaryExpression	0		5083953	1					
ANR	5084163	CompoundStatement		81:40:1782:1782	5083953	1					
ANR	5084164	Statement	fprintf	85:12:1832:1838	5083953	0	True				
ANR	5084165	Statement	(	85:19:1839:1839	5083953	1	True				
ANR	5084166	Statement	stderr	85:20:1840:1845	5083953	2	True				
ANR	5084167	Statement	","	85:26:1846:1846	5083953	3	True				
ANR	5084168	Statement	"""warning: could not create temporary file in '%s'.\\n"""	87:20:1870:1922	5083953	4	True				
ANR	5084169	Statement	"""Use QEMU_TMPDIR to select a directory in a tmpfs filesystem.\\n"""	89:20:1945:2008	5083953	5	True				
ANR	5084170	Statement	"""Using '/tmp' as fallback.\\n"""	91:20:2031:2059	5083953	6	True				
ANR	5084171	Statement	","	91:49:2060:2060	5083953	7	True				
ANR	5084172	Statement	tmpdir	93:20:2083:2088	5083953	8	True				
ANR	5084173	Statement	)	93:26:2089:2089	5083953	9	True				
ANR	5084174	ExpressionStatement		93:27:2090:2090	5083953	10	True				
ANR	5084175	ExpressionStatement	"snprintf ( phys_ram_file , sizeof ( phys_ram_file ) , ""%s/qemuXXXXXX"" , ""/tmp"" )"	95:12:2105:2199	5083953	11	True				
ANR	5084176	CallExpression	"snprintf ( phys_ram_file , sizeof ( phys_ram_file ) , ""%s/qemuXXXXXX"" , ""/tmp"" )"		5083953	0					
ANR	5084177	Callee	snprintf		5083953	0					
ANR	5084178	Identifier	snprintf		5083953	0					
ANR	5084179	ArgumentList	phys_ram_file		5083953	1					
ANR	5084180	Argument	phys_ram_file		5083953	0					
ANR	5084181	Identifier	phys_ram_file		5083953	0					
ANR	5084182	Argument	sizeof ( phys_ram_file )		5083953	1					
ANR	5084183	SizeofExpression	sizeof ( phys_ram_file )		5083953	0					
ANR	5084184	Sizeof	sizeof		5083953	0					
ANR	5084185	SizeofOperand	phys_ram_file		5083953	1					
ANR	5084186	Argument	"""%s/qemuXXXXXX"""		5083953	2					
ANR	5084187	PrimaryExpression	"""%s/qemuXXXXXX"""		5083953	0					
ANR	5084188	Argument	"""/tmp"""		5083953	3					
ANR	5084189	PrimaryExpression	"""/tmp"""		5083953	0					
ANR	5084190	IfStatement	if ( mkstemp ( phys_ram_file ) < 0 )		5083953	12					
ANR	5084191	Condition	mkstemp ( phys_ram_file ) < 0	99:16:2218:2243	5083953	0	True				
ANR	5084192	RelationalExpression	mkstemp ( phys_ram_file ) < 0		5083953	0		<			
ANR	5084193	CallExpression	mkstemp ( phys_ram_file )		5083953	0					
ANR	5084194	Callee	mkstemp		5083953	0					
ANR	5084195	Identifier	mkstemp		5083953	0					
ANR	5084196	ArgumentList	phys_ram_file		5083953	1					
ANR	5084197	Argument	phys_ram_file		5083953	0					
ANR	5084198	Identifier	phys_ram_file		5083953	0					
ANR	5084199	PrimaryExpression	0		5083953	1					
ANR	5084200	CompoundStatement		97:44:2211:2211	5083953	1					
ANR	5084201	ExpressionStatement	"fprintf ( stderr , ""Could not create temporary memory file '%s'\\n"" , phys_ram_file )"	101:16:2265:2370	5083953	0	True				
ANR	5084202	CallExpression	"fprintf ( stderr , ""Could not create temporary memory file '%s'\\n"" , phys_ram_file )"		5083953	0					
ANR	5084203	Callee	fprintf		5083953	0					
ANR	5084204	Identifier	fprintf		5083953	0					
ANR	5084205	ArgumentList	stderr		5083953	1					
ANR	5084206	Argument	stderr		5083953	0					
ANR	5084207	Identifier	stderr		5083953	0					
ANR	5084208	Argument	"""Could not create temporary memory file '%s'\\n"""		5083953	1					
ANR	5084209	PrimaryExpression	"""Could not create temporary memory file '%s'\\n"""		5083953	0					
ANR	5084210	Argument	phys_ram_file		5083953	2					
ANR	5084211	Identifier	phys_ram_file		5083953	0					
ANR	5084212	ExpressionStatement	exit ( 1 )	105:16:2389:2396	5083953	1	True				
ANR	5084213	CallExpression	exit ( 1 )		5083953	0					
ANR	5084214	Callee	exit		5083953	0					
ANR	5084215	Identifier	exit		5083953	0					
ANR	5084216	ArgumentList	1		5083953	1					
ANR	5084217	Argument	1		5083953	0					
ANR	5084218	PrimaryExpression	1		5083953	0					
ANR	5084219	ExpressionStatement	"phys_ram_fd = open ( phys_ram_file , O_CREAT | O_TRUNC | O_RDWR , 0600 )"	111:8:2433:2500	5083953	5	True				
ANR	5084220	AssignmentExpression	"phys_ram_fd = open ( phys_ram_file , O_CREAT | O_TRUNC | O_RDWR , 0600 )"		5083953	0		=			
ANR	5084221	Identifier	phys_ram_fd		5083953	0					
ANR	5084222	CallExpression	"open ( phys_ram_file , O_CREAT | O_TRUNC | O_RDWR , 0600 )"		5083953	1					
ANR	5084223	Callee	open		5083953	0					
ANR	5084224	Identifier	open		5083953	0					
ANR	5084225	ArgumentList	phys_ram_file		5083953	1					
ANR	5084226	Argument	phys_ram_file		5083953	0					
ANR	5084227	Identifier	phys_ram_file		5083953	0					
ANR	5084228	Argument	O_CREAT | O_TRUNC | O_RDWR		5083953	1					
ANR	5084229	InclusiveOrExpression	O_CREAT | O_TRUNC | O_RDWR		5083953	0		|			
ANR	5084230	Identifier	O_CREAT		5083953	0					
ANR	5084231	InclusiveOrExpression	O_TRUNC | O_RDWR		5083953	1		|			
ANR	5084232	Identifier	O_TRUNC		5083953	0					
ANR	5084233	Identifier	O_RDWR		5083953	1					
ANR	5084234	Argument	0600		5083953	2					
ANR	5084235	PrimaryExpression	0600		5083953	0					
ANR	5084236	IfStatement	if ( phys_ram_fd < 0 )		5083953	6					
ANR	5084237	Condition	phys_ram_fd < 0	113:12:2515:2529	5083953	0	True				
ANR	5084238	RelationalExpression	phys_ram_fd < 0		5083953	0		<			
ANR	5084239	Identifier	phys_ram_fd		5083953	0					
ANR	5084240	PrimaryExpression	0		5083953	1					
ANR	5084241	CompoundStatement		111:29:2497:2497	5083953	1					
ANR	5084242	ExpressionStatement	"fprintf ( stderr , ""Could not open temporary memory file '%s'\\n"" , phys_ram_file )"	115:12:2547:2646	5083953	0	True				
ANR	5084243	CallExpression	"fprintf ( stderr , ""Could not open temporary memory file '%s'\\n"" , phys_ram_file )"		5083953	0					
ANR	5084244	Callee	fprintf		5083953	0					
ANR	5084245	Identifier	fprintf		5083953	0					
ANR	5084246	ArgumentList	stderr		5083953	1					
ANR	5084247	Argument	stderr		5083953	0					
ANR	5084248	Identifier	stderr		5083953	0					
ANR	5084249	Argument	"""Could not open temporary memory file '%s'\\n"""		5083953	1					
ANR	5084250	PrimaryExpression	"""Could not open temporary memory file '%s'\\n"""		5083953	0					
ANR	5084251	Argument	phys_ram_file		5083953	2					
ANR	5084252	Identifier	phys_ram_file		5083953	0					
ANR	5084253	ExpressionStatement	exit ( 1 )	119:12:2661:2668	5083953	1	True				
ANR	5084254	CallExpression	exit ( 1 )		5083953	0					
ANR	5084255	Callee	exit		5083953	0					
ANR	5084256	Identifier	exit		5083953	0					
ANR	5084257	ArgumentList	1		5083953	1					
ANR	5084258	Argument	1		5083953	0					
ANR	5084259	PrimaryExpression	1		5083953	0					
ANR	5084260	ExpressionStatement	unlink ( phys_ram_file )	123:8:2690:2711	5083953	7	True				
ANR	5084261	CallExpression	unlink ( phys_ram_file )		5083953	0					
ANR	5084262	Callee	unlink		5083953	0					
ANR	5084263	Identifier	unlink		5083953	0					
ANR	5084264	ArgumentList	phys_ram_file		5083953	1					
ANR	5084265	Argument	phys_ram_file		5083953	0					
ANR	5084266	Identifier	phys_ram_file		5083953	0					
ANR	5084267	ExpressionStatement	size = ( size + 4095 ) & ~4095	127:4:2725:2753	5083953	9	True				
ANR	5084268	AssignmentExpression	size = ( size + 4095 ) & ~4095		5083953	0		=			
ANR	5084269	Identifier	size		5083953	0					
ANR	5084270	BitAndExpression	( size + 4095 ) & ~4095		5083953	1		&			
ANR	5084271	AdditiveExpression	size + 4095		5083953	0		+			
ANR	5084272	Identifier	size		5083953	0					
ANR	5084273	PrimaryExpression	4095		5083953	1					
ANR	5084274	Identifier	~4095		5083953	1					
ANR	5084275	ExpressionStatement	"ftruncate ( phys_ram_fd , phys_ram_size + size )"	129:4:2760:2804	5083953	10	True				
ANR	5084276	CallExpression	"ftruncate ( phys_ram_fd , phys_ram_size + size )"		5083953	0					
ANR	5084277	Callee	ftruncate		5083953	0					
ANR	5084278	Identifier	ftruncate		5083953	0					
ANR	5084279	ArgumentList	phys_ram_fd		5083953	1					
ANR	5084280	Argument	phys_ram_fd		5083953	0					
ANR	5084281	Identifier	phys_ram_fd		5083953	0					
ANR	5084282	Argument	phys_ram_size + size		5083953	1					
ANR	5084283	AdditiveExpression	phys_ram_size + size		5083953	0		+			
ANR	5084284	Identifier	phys_ram_size		5083953	0					
ANR	5084285	Identifier	size		5083953	1					
ANR	5084286	ExpressionStatement	"ptr = mmap ( NULL , size , PROT_WRITE | PROT_READ , MAP_SHARED , phys_ram_fd , phys_ram_size )"	131:4:2811:2948	5083953	11	True				
ANR	5084287	AssignmentExpression	"ptr = mmap ( NULL , size , PROT_WRITE | PROT_READ , MAP_SHARED , phys_ram_fd , phys_ram_size )"		5083953	0		=			
ANR	5084288	Identifier	ptr		5083953	0					
ANR	5084289	CallExpression	"mmap ( NULL , size , PROT_WRITE | PROT_READ , MAP_SHARED , phys_ram_fd , phys_ram_size )"		5083953	1					
ANR	5084290	Callee	mmap		5083953	0					
ANR	5084291	Identifier	mmap		5083953	0					
ANR	5084292	ArgumentList	NULL		5083953	1					
ANR	5084293	Argument	NULL		5083953	0					
ANR	5084294	Identifier	NULL		5083953	0					
ANR	5084295	Argument	size		5083953	1					
ANR	5084296	Identifier	size		5083953	0					
ANR	5084297	Argument	PROT_WRITE | PROT_READ		5083953	2					
ANR	5084298	InclusiveOrExpression	PROT_WRITE | PROT_READ		5083953	0		|			
ANR	5084299	Identifier	PROT_WRITE		5083953	0					
ANR	5084300	Identifier	PROT_READ		5083953	1					
ANR	5084301	Argument	MAP_SHARED		5083953	3					
ANR	5084302	Identifier	MAP_SHARED		5083953	0					
ANR	5084303	Argument	phys_ram_fd		5083953	4					
ANR	5084304	Identifier	phys_ram_fd		5083953	0					
ANR	5084305	Argument	phys_ram_size		5083953	5					
ANR	5084306	Identifier	phys_ram_size		5083953	0					
ANR	5084307	IfStatement	if ( ptr == MAP_FAILED )		5083953	12					
ANR	5084308	Condition	ptr == MAP_FAILED	139:8:2959:2975	5083953	0	True				
ANR	5084309	EqualityExpression	ptr == MAP_FAILED		5083953	0		==			
ANR	5084310	Identifier	ptr		5083953	0					
ANR	5084311	Identifier	MAP_FAILED		5083953	1					
ANR	5084312	CompoundStatement		137:27:2943:2943	5083953	1					
ANR	5084313	ExpressionStatement	"fprintf ( stderr , ""Could not map physical memory\\n"" )"	141:8:2989:3039	5083953	0	True				
ANR	5084314	CallExpression	"fprintf ( stderr , ""Could not map physical memory\\n"" )"		5083953	0					
ANR	5084315	Callee	fprintf		5083953	0					
ANR	5084316	Identifier	fprintf		5083953	0					
ANR	5084317	ArgumentList	stderr		5083953	1					
ANR	5084318	Argument	stderr		5083953	0					
ANR	5084319	Identifier	stderr		5083953	0					
ANR	5084320	Argument	"""Could not map physical memory\\n"""		5083953	1					
ANR	5084321	PrimaryExpression	"""Could not map physical memory\\n"""		5083953	0					
ANR	5084322	ExpressionStatement	exit ( 1 )	143:8:3050:3057	5083953	1	True				
ANR	5084323	CallExpression	exit ( 1 )		5083953	0					
ANR	5084324	Callee	exit		5083953	0					
ANR	5084325	Identifier	exit		5083953	0					
ANR	5084326	ArgumentList	1		5083953	1					
ANR	5084327	Argument	1		5083953	0					
ANR	5084328	PrimaryExpression	1		5083953	0					
ANR	5084329	ExpressionStatement	phys_ram_size += size	147:4:3071:3092	5083953	13	True				
ANR	5084330	AssignmentExpression	phys_ram_size += size		5083953	0		+=			
ANR	5084331	Identifier	phys_ram_size		5083953	0					
ANR	5084332	Identifier	size		5083953	1					
ANR	5084333	ReturnStatement	return ptr ;	149:4:3099:3109	5083953	14	True				
ANR	5084334	Identifier	ptr		5083953	0					
ANR	5084335	ReturnType	void *		5083953	1					
ANR	5084336	Identifier	kqemu_vmalloc		5083953	2					
ANR	5084337	ParameterList	size_t size		5083953	3					
ANR	5084338	Parameter	size_t size	1:20:20:30	5083953	0	True				
ANR	5084339	ParameterType	size_t		5083953	0					
ANR	5084340	Identifier	size		5083953	1					
ANR	5084341	CFGEntryNode	ENTRY		5083953		True				
ANR	5084342	CFGExitNode	EXIT		5083953		True				
ANR	5084343	Symbol	mkstemp		5083953						
ANR	5084344	Symbol	ram_mb		5083953						
ANR	5084345	Symbol	O_CREAT		5083953						
ANR	5084346	Symbol	MAP_FAILED		5083953						
ANR	5084347	Symbol	~4095		5083953						
ANR	5084348	Symbol	O_RDWR		5083953						
ANR	5084349	Symbol	PROT_WRITE		5083953						
ANR	5084350	Symbol	stfs		5083953						
ANR	5084351	Symbol	getenv		5083953						
ANR	5084352	Symbol	strcmp		5083953						
ANR	5084353	Symbol	phys_ram_size		5083953						
ANR	5084354	Symbol	NULL		5083953						
ANR	5084355	Symbol	PROT_READ		5083953						
ANR	5084356	Symbol	phys_ram_fd		5083953						
ANR	5084357	Symbol	phys_ram_file		5083953						
ANR	5084358	Symbol	statfs		5083953						
ANR	5084359	Symbol	stderr		5083953						
ANR	5084360	Symbol	ptr		5083953						
ANR	5084361	Symbol	tmpdir		5083953						
ANR	5084362	Symbol	ram_size		5083953						
ANR	5084363	Symbol	stfs . f_bsize		5083953						
ANR	5084364	Symbol	O_TRUNC		5083953						
ANR	5084365	Symbol	stfs . f_bavail		5083953						
ANR	5084366	Symbol	size		5083953						
ANR	5084367	Symbol	MAP_SHARED		5083953						
ANR	5084368	Symbol	& stfs		5083953						
ANR	5084369	Symbol	mmap		5083953						
ANR	5084370	Symbol	free_space		5083953						
ANR	5084371	Symbol	open		5083953						
