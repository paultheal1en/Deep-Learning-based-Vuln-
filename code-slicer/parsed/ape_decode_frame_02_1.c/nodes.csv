command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	559005	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ape_decode_frame_02_1.c								
ANR	559006	Function	ape_decode_frame	1:0:0:4950							
ANR	559007	FunctionDef	"ape_decode_frame (AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt)"		559006	0					
ANR	559008	CompoundStatement		5:0:130:4950	559006	0					
ANR	559009	IdentifierDeclStatement	AVFrame * frame = data ;	7:4:137:162	559006	0	True				
ANR	559010	IdentifierDecl	* frame = data		559006	0					
ANR	559011	IdentifierDeclType	AVFrame *		559006	0					
ANR	559012	Identifier	frame		559006	1					
ANR	559013	AssignmentExpression	* frame = data		559006	2		=			
ANR	559014	Identifier	data		559006	0					
ANR	559015	Identifier	data		559006	1					
ANR	559016	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	9:4:169:201	559006	1	True				
ANR	559017	IdentifierDecl	* buf = avpkt -> data		559006	0					
ANR	559018	IdentifierDeclType	const uint8_t *		559006	0					
ANR	559019	Identifier	buf		559006	1					
ANR	559020	AssignmentExpression	* buf = avpkt -> data		559006	2		=			
ANR	559021	Identifier	buf		559006	0					
ANR	559022	PtrMemberAccess	avpkt -> data		559006	1					
ANR	559023	Identifier	avpkt		559006	0					
ANR	559024	Identifier	data		559006	1					
ANR	559025	IdentifierDeclStatement	APEContext * s = avctx -> priv_data ;	11:4:208:240	559006	2	True				
ANR	559026	IdentifierDecl	* s = avctx -> priv_data		559006	0					
ANR	559027	IdentifierDeclType	APEContext *		559006	0					
ANR	559028	Identifier	s		559006	1					
ANR	559029	AssignmentExpression	* s = avctx -> priv_data		559006	2		=			
ANR	559030	Identifier	s		559006	0					
ANR	559031	PtrMemberAccess	avctx -> priv_data		559006	1					
ANR	559032	Identifier	avctx		559006	0					
ANR	559033	Identifier	priv_data		559006	1					
ANR	559034	IdentifierDeclStatement	uint8_t * sample8 ;	13:4:247:263	559006	3	True				
ANR	559035	IdentifierDecl	* sample8		559006	0					
ANR	559036	IdentifierDeclType	uint8_t *		559006	0					
ANR	559037	Identifier	sample8		559006	1					
ANR	559038	IdentifierDeclStatement	int16_t * sample16 ;	15:4:270:287	559006	4	True				
ANR	559039	IdentifierDecl	* sample16		559006	0					
ANR	559040	IdentifierDeclType	int16_t *		559006	0					
ANR	559041	Identifier	sample16		559006	1					
ANR	559042	IdentifierDeclStatement	int32_t * sample24 ;	17:4:294:311	559006	5	True				
ANR	559043	IdentifierDecl	* sample24		559006	0					
ANR	559044	IdentifierDeclType	int32_t *		559006	0					
ANR	559045	Identifier	sample24		559006	1					
ANR	559046	IdentifierDeclStatement	"int i , ch , ret ;"	19:4:318:332	559006	6	True				
ANR	559047	IdentifierDecl	i		559006	0					
ANR	559048	IdentifierDeclType	int		559006	0					
ANR	559049	Identifier	i		559006	1					
ANR	559050	IdentifierDecl	ch		559006	1					
ANR	559051	IdentifierDeclType	int		559006	0					
ANR	559052	Identifier	ch		559006	1					
ANR	559053	IdentifierDecl	ret		559006	2					
ANR	559054	IdentifierDeclType	int		559006	0					
ANR	559055	Identifier	ret		559006	1					
ANR	559056	IdentifierDeclStatement	int blockstodecode ;	21:4:339:357	559006	7	True				
ANR	559057	IdentifierDecl	blockstodecode		559006	0					
ANR	559058	IdentifierDeclType	int		559006	0					
ANR	559059	Identifier	blockstodecode		559006	1					
ANR	559060	ExpressionStatement	av_assert0 ( s -> samples >= 0 )	29:4:484:511	559006	8	True				
ANR	559061	CallExpression	av_assert0 ( s -> samples >= 0 )		559006	0					
ANR	559062	Callee	av_assert0		559006	0					
ANR	559063	Identifier	av_assert0		559006	0					
ANR	559064	ArgumentList	s -> samples >= 0		559006	1					
ANR	559065	Argument	s -> samples >= 0		559006	0					
ANR	559066	RelationalExpression	s -> samples >= 0		559006	0		>=			
ANR	559067	PtrMemberAccess	s -> samples		559006	0					
ANR	559068	Identifier	s		559006	0					
ANR	559069	Identifier	samples		559006	1					
ANR	559070	PrimaryExpression	0		559006	1					
ANR	559071	IfStatement	if ( ! s -> samples )		559006	9					
ANR	559072	Condition	! s -> samples	33:7:523:533	559006	0	True				
ANR	559073	UnaryOperationExpression	! s -> samples		559006	0					
ANR	559074	UnaryOperator	!		559006	0					
ANR	559075	PtrMemberAccess	s -> samples		559006	1					
ANR	559076	Identifier	s		559006	0					
ANR	559077	Identifier	samples		559006	1					
ANR	559078	CompoundStatement		33:8:450:462	559006	1					
ANR	559079	IdentifierDeclStatement	"uint32_t nblocks , offset ;"	35:8:546:570	559006	0	True				
ANR	559080	IdentifierDecl	nblocks		559006	0					
ANR	559081	IdentifierDeclType	uint32_t		559006	0					
ANR	559082	Identifier	nblocks		559006	1					
ANR	559083	IdentifierDecl	offset		559006	1					
ANR	559084	IdentifierDeclType	uint32_t		559006	0					
ANR	559085	Identifier	offset		559006	1					
ANR	559086	IdentifierDeclStatement	int buf_size ;	37:8:581:593	559006	1	True				
ANR	559087	IdentifierDecl	buf_size		559006	0					
ANR	559088	IdentifierDeclType	int		559006	0					
ANR	559089	Identifier	buf_size		559006	1					
ANR	559090	IfStatement	if ( ! avpkt -> size )		559006	2					
ANR	559091	Condition	! avpkt -> size	41:12:610:621	559006	0	True				
ANR	559092	UnaryOperationExpression	! avpkt -> size		559006	0					
ANR	559093	UnaryOperator	!		559006	0					
ANR	559094	PtrMemberAccess	avpkt -> size		559006	1					
ANR	559095	Identifier	avpkt		559006	0					
ANR	559096	Identifier	size		559006	1					
ANR	559097	CompoundStatement		37:26:493:493	559006	1					
ANR	559098	ExpressionStatement	* got_frame_ptr = 0	43:12:639:657	559006	0	True				
ANR	559099	AssignmentExpression	* got_frame_ptr = 0		559006	0		=			
ANR	559100	UnaryOperationExpression	* got_frame_ptr		559006	0					
ANR	559101	UnaryOperator	*		559006	0					
ANR	559102	Identifier	got_frame_ptr		559006	1					
ANR	559103	PrimaryExpression	0		559006	1					
ANR	559104	ReturnStatement	return 0 ;	45:12:672:680	559006	1	True				
ANR	559105	PrimaryExpression	0		559006	0					
ANR	559106	IfStatement	if ( avpkt -> size < 8 )		559006	3					
ANR	559107	Condition	avpkt -> size < 8	49:12:706:720	559006	0	True				
ANR	559108	RelationalExpression	avpkt -> size < 8		559006	0		<			
ANR	559109	PtrMemberAccess	avpkt -> size		559006	0					
ANR	559110	Identifier	avpkt		559006	0					
ANR	559111	Identifier	size		559006	1					
ANR	559112	PrimaryExpression	8		559006	1					
ANR	559113	CompoundStatement		45:29:592:592	559006	1					
ANR	559114	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Packet is too small\\n"" )"	51:12:738:790	559006	0	True				
ANR	559115	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Packet is too small\\n"" )"		559006	0					
ANR	559116	Callee	av_log		559006	0					
ANR	559117	Identifier	av_log		559006	0					
ANR	559118	ArgumentList	avctx		559006	1					
ANR	559119	Argument	avctx		559006	0					
ANR	559120	Identifier	avctx		559006	0					
ANR	559121	Argument	AV_LOG_ERROR		559006	1					
ANR	559122	Identifier	AV_LOG_ERROR		559006	0					
ANR	559123	Argument	"""Packet is too small\\n"""		559006	2					
ANR	559124	PrimaryExpression	"""Packet is too small\\n"""		559006	0					
ANR	559125	ReturnStatement	return AVERROR_INVALIDDATA ;	53:12:805:831	559006	1	True				
ANR	559126	Identifier	AVERROR_INVALIDDATA		559006	0					
ANR	559127	ExpressionStatement	buf_size = avpkt -> size & ~3	57:8:853:880	559006	4	True				
ANR	559128	AssignmentExpression	buf_size = avpkt -> size & ~3		559006	0		=			
ANR	559129	Identifier	buf_size		559006	0					
ANR	559130	BitAndExpression	avpkt -> size & ~3		559006	1		&			
ANR	559131	PtrMemberAccess	avpkt -> size		559006	0					
ANR	559132	Identifier	avpkt		559006	0					
ANR	559133	Identifier	size		559006	1					
ANR	559134	Identifier	~3		559006	1					
ANR	559135	IfStatement	if ( buf_size != avpkt -> size )		559006	5					
ANR	559136	Condition	buf_size != avpkt -> size	59:12:895:917	559006	0	True				
ANR	559137	EqualityExpression	buf_size != avpkt -> size		559006	0		!=			
ANR	559138	Identifier	buf_size		559006	0					
ANR	559139	PtrMemberAccess	avpkt -> size		559006	1					
ANR	559140	Identifier	avpkt		559006	0					
ANR	559141	Identifier	size		559006	1					
ANR	559142	CompoundStatement		55:37:789:789	559006	1					
ANR	559143	Statement	av_log	61:12:935:940	559006	0	True				
ANR	559144	Statement	(	61:18:941:941	559006	1	True				
ANR	559145	Statement	avctx	61:19:942:946	559006	2	True				
ANR	559146	Statement	","	61:24:947:947	559006	3	True				
ANR	559147	Statement	AV_LOG_WARNING	61:26:949:962	559006	4	True				
ANR	559148	Statement	","	61:40:963:963	559006	5	True				
ANR	559149	Statement	"""packet size is not a multiple of 4. """	61:42:965:1002	559006	6	True				
ANR	559150	Statement	"""extra bytes at the end will be skipped.\\n"""	63:19:1024:1066	559006	7	True				
ANR	559151	Statement	)	63:62:1067:1067	559006	8	True				
ANR	559152	ExpressionStatement		63:63:1068:1068	559006	9	True				
ANR	559153	IfStatement	if ( s -> fileversion < 3950 )		559006	6					
ANR	559154	Condition	s -> fileversion < 3950	67:12:1094:1114	559006	0	True				
ANR	559155	RelationalExpression	s -> fileversion < 3950		559006	0		<			
ANR	559156	PtrMemberAccess	s -> fileversion		559006	0					
ANR	559157	Identifier	s		559006	0					
ANR	559158	Identifier	fileversion		559006	1					
ANR	559159	PrimaryExpression	3950		559006	1					
ANR	559160	ExpressionStatement	buf_size += 2	69:12:1170:1183	559006	1	True				
ANR	559161	AssignmentExpression	buf_size += 2		559006	0		+=			
ANR	559162	Identifier	buf_size		559006	0					
ANR	559163	PrimaryExpression	2		559006	1					
ANR	559164	ExpressionStatement	"av_fast_malloc ( & s -> data , & s -> data_size , buf_size )"	71:8:1194:1243	559006	7	True				
ANR	559165	CallExpression	"av_fast_malloc ( & s -> data , & s -> data_size , buf_size )"		559006	0					
ANR	559166	Callee	av_fast_malloc		559006	0					
ANR	559167	Identifier	av_fast_malloc		559006	0					
ANR	559168	ArgumentList	& s -> data		559006	1					
ANR	559169	Argument	& s -> data		559006	0					
ANR	559170	UnaryOperationExpression	& s -> data		559006	0					
ANR	559171	UnaryOperator	&		559006	0					
ANR	559172	PtrMemberAccess	s -> data		559006	1					
ANR	559173	Identifier	s		559006	0					
ANR	559174	Identifier	data		559006	1					
ANR	559175	Argument	& s -> data_size		559006	1					
ANR	559176	UnaryOperationExpression	& s -> data_size		559006	0					
ANR	559177	UnaryOperator	&		559006	0					
ANR	559178	PtrMemberAccess	s -> data_size		559006	1					
ANR	559179	Identifier	s		559006	0					
ANR	559180	Identifier	data_size		559006	1					
ANR	559181	Argument	buf_size		559006	2					
ANR	559182	Identifier	buf_size		559006	0					
ANR	559183	IfStatement	if ( ! s -> data )		559006	8					
ANR	559184	Condition	! s -> data	73:12:1258:1265	559006	0	True				
ANR	559185	UnaryOperationExpression	! s -> data		559006	0					
ANR	559186	UnaryOperator	!		559006	0					
ANR	559187	PtrMemberAccess	s -> data		559006	1					
ANR	559188	Identifier	s		559006	0					
ANR	559189	Identifier	data		559006	1					
ANR	559190	ReturnStatement	return AVERROR ( ENOMEM ) ;	75:12:1281:1303	559006	1	True				
ANR	559191	CallExpression	AVERROR ( ENOMEM )		559006	0					
ANR	559192	Callee	AVERROR		559006	0					
ANR	559193	Identifier	AVERROR		559006	0					
ANR	559194	ArgumentList	ENOMEM		559006	1					
ANR	559195	Argument	ENOMEM		559006	0					
ANR	559196	Identifier	ENOMEM		559006	0					
ANR	559197	ExpressionStatement	"s -> dsp . bswap_buf ( ( uint32_t * ) s -> data , ( const uint32_t * ) buf , buf_size >> 2 )"	77:8:1314:1387	559006	9	True				
ANR	559198	CallExpression	"s -> dsp . bswap_buf ( ( uint32_t * ) s -> data , ( const uint32_t * ) buf , buf_size >> 2 )"		559006	0					
ANR	559199	Callee	s -> dsp . bswap_buf		559006	0					
ANR	559200	MemberAccess	s -> dsp . bswap_buf		559006	0					
ANR	559201	PtrMemberAccess	s -> dsp		559006	0					
ANR	559202	Identifier	s		559006	0					
ANR	559203	Identifier	dsp		559006	1					
ANR	559204	Identifier	bswap_buf		559006	1					
ANR	559205	ArgumentList	( uint32_t * ) s -> data		559006	1					
ANR	559206	Argument	( uint32_t * ) s -> data		559006	0					
ANR	559207	CastExpression	( uint32_t * ) s -> data		559006	0					
ANR	559208	CastTarget	uint32_t *		559006	0					
ANR	559209	PtrMemberAccess	s -> data		559006	1					
ANR	559210	Identifier	s		559006	0					
ANR	559211	Identifier	data		559006	1					
ANR	559212	Argument	( const uint32_t * ) buf		559006	1					
ANR	559213	CastExpression	( const uint32_t * ) buf		559006	0					
ANR	559214	CastTarget	const uint32_t *		559006	0					
ANR	559215	Identifier	buf		559006	1					
ANR	559216	Argument	buf_size >> 2		559006	2					
ANR	559217	ShiftExpression	buf_size >> 2		559006	0		>>			
ANR	559218	Identifier	buf_size		559006	0					
ANR	559219	PrimaryExpression	2		559006	1					
ANR	559220	ExpressionStatement	"memset ( s -> data + ( buf_size & ~3 ) , 0 , buf_size & 3 )"	79:8:1398:1448	559006	10	True				
ANR	559221	CallExpression	"memset ( s -> data + ( buf_size & ~3 ) , 0 , buf_size & 3 )"		559006	0					
ANR	559222	Callee	memset		559006	0					
ANR	559223	Identifier	memset		559006	0					
ANR	559224	ArgumentList	s -> data + ( buf_size & ~3 )		559006	1					
ANR	559225	Argument	s -> data + ( buf_size & ~3 )		559006	0					
ANR	559226	AdditiveExpression	s -> data + ( buf_size & ~3 )		559006	0		+			
ANR	559227	PtrMemberAccess	s -> data		559006	0					
ANR	559228	Identifier	s		559006	0					
ANR	559229	Identifier	data		559006	1					
ANR	559230	BitAndExpression	buf_size & ~3		559006	1		&			
ANR	559231	Identifier	buf_size		559006	0					
ANR	559232	Identifier	~3		559006	1					
ANR	559233	Argument	0		559006	1					
ANR	559234	PrimaryExpression	0		559006	0					
ANR	559235	Argument	buf_size & 3		559006	2					
ANR	559236	BitAndExpression	buf_size & 3		559006	0		&			
ANR	559237	Identifier	buf_size		559006	0					
ANR	559238	PrimaryExpression	3		559006	1					
ANR	559239	ExpressionStatement	s -> ptr = s -> data	81:8:1459:1475	559006	11	True				
ANR	559240	AssignmentExpression	s -> ptr = s -> data		559006	0		=			
ANR	559241	PtrMemberAccess	s -> ptr		559006	0					
ANR	559242	Identifier	s		559006	0					
ANR	559243	Identifier	ptr		559006	1					
ANR	559244	PtrMemberAccess	s -> data		559006	1					
ANR	559245	Identifier	s		559006	0					
ANR	559246	Identifier	data		559006	1					
ANR	559247	ExpressionStatement	s -> data_end = s -> data + buf_size	83:8:1486:1518	559006	12	True				
ANR	559248	AssignmentExpression	s -> data_end = s -> data + buf_size		559006	0		=			
ANR	559249	PtrMemberAccess	s -> data_end		559006	0					
ANR	559250	Identifier	s		559006	0					
ANR	559251	Identifier	data_end		559006	1					
ANR	559252	AdditiveExpression	s -> data + buf_size		559006	1		+			
ANR	559253	PtrMemberAccess	s -> data		559006	0					
ANR	559254	Identifier	s		559006	0					
ANR	559255	Identifier	data		559006	1					
ANR	559256	Identifier	buf_size		559006	1					
ANR	559257	ExpressionStatement	nblocks = bytestream_get_be32 ( & s -> ptr )	87:8:1531:1569	559006	13	True				
ANR	559258	AssignmentExpression	nblocks = bytestream_get_be32 ( & s -> ptr )		559006	0		=			
ANR	559259	Identifier	nblocks		559006	0					
ANR	559260	CallExpression	bytestream_get_be32 ( & s -> ptr )		559006	1					
ANR	559261	Callee	bytestream_get_be32		559006	0					
ANR	559262	Identifier	bytestream_get_be32		559006	0					
ANR	559263	ArgumentList	& s -> ptr		559006	1					
ANR	559264	Argument	& s -> ptr		559006	0					
ANR	559265	UnaryOperationExpression	& s -> ptr		559006	0					
ANR	559266	UnaryOperator	&		559006	0					
ANR	559267	PtrMemberAccess	s -> ptr		559006	1					
ANR	559268	Identifier	s		559006	0					
ANR	559269	Identifier	ptr		559006	1					
ANR	559270	ExpressionStatement	offset = bytestream_get_be32 ( & s -> ptr )	89:8:1580:1618	559006	14	True				
ANR	559271	AssignmentExpression	offset = bytestream_get_be32 ( & s -> ptr )		559006	0		=			
ANR	559272	Identifier	offset		559006	0					
ANR	559273	CallExpression	bytestream_get_be32 ( & s -> ptr )		559006	1					
ANR	559274	Callee	bytestream_get_be32		559006	0					
ANR	559275	Identifier	bytestream_get_be32		559006	0					
ANR	559276	ArgumentList	& s -> ptr		559006	1					
ANR	559277	Argument	& s -> ptr		559006	0					
ANR	559278	UnaryOperationExpression	& s -> ptr		559006	0					
ANR	559279	UnaryOperator	&		559006	0					
ANR	559280	PtrMemberAccess	s -> ptr		559006	1					
ANR	559281	Identifier	s		559006	0					
ANR	559282	Identifier	ptr		559006	1					
ANR	559283	IfStatement	if ( s -> fileversion >= 3900 )		559006	15					
ANR	559284	Condition	s -> fileversion >= 3900	91:12:1633:1654	559006	0	True				
ANR	559285	RelationalExpression	s -> fileversion >= 3900		559006	0		>=			
ANR	559286	PtrMemberAccess	s -> fileversion		559006	0					
ANR	559287	Identifier	s		559006	0					
ANR	559288	Identifier	fileversion		559006	1					
ANR	559289	PrimaryExpression	3900		559006	1					
ANR	559290	CompoundStatement		87:36:1526:1526	559006	1					
ANR	559291	IfStatement	if ( offset > 3 )		559006	0					
ANR	559292	Condition	offset > 3	93:16:1676:1685	559006	0	True				
ANR	559293	RelationalExpression	offset > 3		559006	0		>			
ANR	559294	Identifier	offset		559006	0					
ANR	559295	PrimaryExpression	3		559006	1					
ANR	559296	CompoundStatement		89:28:1557:1557	559006	1					
ANR	559297	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect offset passed\\n"" )"	95:16:1707:1763	559006	0	True				
ANR	559298	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Incorrect offset passed\\n"" )"		559006	0					
ANR	559299	Callee	av_log		559006	0					
ANR	559300	Identifier	av_log		559006	0					
ANR	559301	ArgumentList	avctx		559006	1					
ANR	559302	Argument	avctx		559006	0					
ANR	559303	Identifier	avctx		559006	0					
ANR	559304	Argument	AV_LOG_ERROR		559006	1					
ANR	559305	Identifier	AV_LOG_ERROR		559006	0					
ANR	559306	Argument	"""Incorrect offset passed\\n"""		559006	2					
ANR	559307	PrimaryExpression	"""Incorrect offset passed\\n"""		559006	0					
ANR	559308	ExpressionStatement	s -> data = NULL	97:16:1782:1796	559006	1	True				
ANR	559309	AssignmentExpression	s -> data = NULL		559006	0		=			
ANR	559310	PtrMemberAccess	s -> data		559006	0					
ANR	559311	Identifier	s		559006	0					
ANR	559312	Identifier	data		559006	1					
ANR	559313	Identifier	NULL		559006	1					
ANR	559314	ReturnStatement	return AVERROR_INVALIDDATA ;	99:16:1815:1841	559006	2	True				
ANR	559315	Identifier	AVERROR_INVALIDDATA		559006	0					
ANR	559316	IfStatement	if ( s -> data_end - s -> ptr < offset )		559006	1					
ANR	559317	Condition	s -> data_end - s -> ptr < offset	103:16:1875:1903	559006	0	True				
ANR	559318	RelationalExpression	s -> data_end - s -> ptr < offset		559006	0		<			
ANR	559319	AdditiveExpression	s -> data_end - s -> ptr		559006	0		-			
ANR	559320	PtrMemberAccess	s -> data_end		559006	0					
ANR	559321	Identifier	s		559006	0					
ANR	559322	Identifier	data_end		559006	1					
ANR	559323	PtrMemberAccess	s -> ptr		559006	1					
ANR	559324	Identifier	s		559006	0					
ANR	559325	Identifier	ptr		559006	1					
ANR	559326	Identifier	offset		559006	1					
ANR	559327	CompoundStatement		99:47:1775:1775	559006	1					
ANR	559328	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Packet is too small\\n"" )"	105:16:1925:1977	559006	0	True				
ANR	559329	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Packet is too small\\n"" )"		559006	0					
ANR	559330	Callee	av_log		559006	0					
ANR	559331	Identifier	av_log		559006	0					
ANR	559332	ArgumentList	avctx		559006	1					
ANR	559333	Argument	avctx		559006	0					
ANR	559334	Identifier	avctx		559006	0					
ANR	559335	Argument	AV_LOG_ERROR		559006	1					
ANR	559336	Identifier	AV_LOG_ERROR		559006	0					
ANR	559337	Argument	"""Packet is too small\\n"""		559006	2					
ANR	559338	PrimaryExpression	"""Packet is too small\\n"""		559006	0					
ANR	559339	ReturnStatement	return AVERROR_INVALIDDATA ;	107:16:1996:2022	559006	1	True				
ANR	559340	Identifier	AVERROR_INVALIDDATA		559006	0					
ANR	559341	ExpressionStatement	s -> ptr += offset	111:12:2052:2068	559006	2	True				
ANR	559342	AssignmentExpression	s -> ptr += offset		559006	0		+=			
ANR	559343	PtrMemberAccess	s -> ptr		559006	0					
ANR	559344	Identifier	s		559006	0					
ANR	559345	Identifier	ptr		559006	1					
ANR	559346	Identifier	offset		559006	1					
ANR	559347	ElseStatement	else		559006	0					
ANR	559348	CompoundStatement		109:15:1955:1955	559006	0					
ANR	559349	IfStatement	"if ( ( ret = init_get_bits8 ( & s -> gb , s -> ptr , s -> data_end - s -> ptr ) ) < 0 )"		559006	0					
ANR	559350	Condition	"( ret = init_get_bits8 ( & s -> gb , s -> ptr , s -> data_end - s -> ptr ) ) < 0"	115:16:2105:2168	559006	0	True				
ANR	559351	RelationalExpression	"( ret = init_get_bits8 ( & s -> gb , s -> ptr , s -> data_end - s -> ptr ) ) < 0"		559006	0		<			
ANR	559352	AssignmentExpression	"ret = init_get_bits8 ( & s -> gb , s -> ptr , s -> data_end - s -> ptr )"		559006	0		=			
ANR	559353	Identifier	ret		559006	0					
ANR	559354	CallExpression	"init_get_bits8 ( & s -> gb , s -> ptr , s -> data_end - s -> ptr )"		559006	1					
ANR	559355	Callee	init_get_bits8		559006	0					
ANR	559356	Identifier	init_get_bits8		559006	0					
ANR	559357	ArgumentList	& s -> gb		559006	1					
ANR	559358	Argument	& s -> gb		559006	0					
ANR	559359	UnaryOperationExpression	& s -> gb		559006	0					
ANR	559360	UnaryOperator	&		559006	0					
ANR	559361	PtrMemberAccess	s -> gb		559006	1					
ANR	559362	Identifier	s		559006	0					
ANR	559363	Identifier	gb		559006	1					
ANR	559364	Argument	s -> ptr		559006	1					
ANR	559365	PtrMemberAccess	s -> ptr		559006	0					
ANR	559366	Identifier	s		559006	0					
ANR	559367	Identifier	ptr		559006	1					
ANR	559368	Argument	s -> data_end - s -> ptr		559006	2					
ANR	559369	AdditiveExpression	s -> data_end - s -> ptr		559006	0		-			
ANR	559370	PtrMemberAccess	s -> data_end		559006	0					
ANR	559371	Identifier	s		559006	0					
ANR	559372	Identifier	data_end		559006	1					
ANR	559373	PtrMemberAccess	s -> ptr		559006	1					
ANR	559374	Identifier	s		559006	0					
ANR	559375	Identifier	ptr		559006	1					
ANR	559376	PrimaryExpression	0		559006	1					
ANR	559377	ReturnStatement	return ret ;	117:16:2188:2198	559006	1	True				
ANR	559378	Identifier	ret		559006	0					
ANR	559379	IfStatement	if ( s -> fileversion > 3800 )		559006	1					
ANR	559380	Condition	s -> fileversion > 3800	119:16:2217:2237	559006	0	True				
ANR	559381	RelationalExpression	s -> fileversion > 3800		559006	0		>			
ANR	559382	PtrMemberAccess	s -> fileversion		559006	0					
ANR	559383	Identifier	s		559006	0					
ANR	559384	Identifier	fileversion		559006	1					
ANR	559385	PrimaryExpression	3800		559006	1					
ANR	559386	ExpressionStatement	"skip_bits_long ( & s -> gb , offset * 8 )"	121:16:2257:2291	559006	1	True				
ANR	559387	CallExpression	"skip_bits_long ( & s -> gb , offset * 8 )"		559006	0					
ANR	559388	Callee	skip_bits_long		559006	0					
ANR	559389	Identifier	skip_bits_long		559006	0					
ANR	559390	ArgumentList	& s -> gb		559006	1					
ANR	559391	Argument	& s -> gb		559006	0					
ANR	559392	UnaryOperationExpression	& s -> gb		559006	0					
ANR	559393	UnaryOperator	&		559006	0					
ANR	559394	PtrMemberAccess	s -> gb		559006	1					
ANR	559395	Identifier	s		559006	0					
ANR	559396	Identifier	gb		559006	1					
ANR	559397	Argument	offset * 8		559006	1					
ANR	559398	MultiplicativeExpression	offset * 8		559006	0		*			
ANR	559399	Identifier	offset		559006	0					
ANR	559400	PrimaryExpression	8		559006	1					
ANR	559401	ElseStatement	else		559006	0					
ANR	559402	ExpressionStatement	"skip_bits_long ( & s -> gb , offset )"	125:16:2328:2358	559006	0	True				
ANR	559403	CallExpression	"skip_bits_long ( & s -> gb , offset )"		559006	0					
ANR	559404	Callee	skip_bits_long		559006	0					
ANR	559405	Identifier	skip_bits_long		559006	0					
ANR	559406	ArgumentList	& s -> gb		559006	1					
ANR	559407	Argument	& s -> gb		559006	0					
ANR	559408	UnaryOperationExpression	& s -> gb		559006	0					
ANR	559409	UnaryOperator	&		559006	0					
ANR	559410	PtrMemberAccess	s -> gb		559006	1					
ANR	559411	Identifier	s		559006	0					
ANR	559412	Identifier	gb		559006	1					
ANR	559413	Argument	offset		559006	1					
ANR	559414	Identifier	offset		559006	0					
ANR	559415	IfStatement	if ( ! nblocks || nblocks > INT_MAX )		559006	16					
ANR	559416	Condition	! nblocks || nblocks > INT_MAX	131:12:2386:2414	559006	0	True				
ANR	559417	OrExpression	! nblocks || nblocks > INT_MAX		559006	0		||			
ANR	559418	UnaryOperationExpression	! nblocks		559006	0					
ANR	559419	UnaryOperator	!		559006	0					
ANR	559420	Identifier	nblocks		559006	1					
ANR	559421	RelationalExpression	nblocks > INT_MAX		559006	1		>			
ANR	559422	Identifier	nblocks		559006	0					
ANR	559423	Identifier	INT_MAX		559006	1					
ANR	559424	CompoundStatement		127:43:2286:2286	559006	1					
ANR	559425	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Invalid sample count: %u.\\n"" , nblocks )"	133:12:2432:2499	559006	0	True				
ANR	559426	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Invalid sample count: %u.\\n"" , nblocks )"		559006	0					
ANR	559427	Callee	av_log		559006	0					
ANR	559428	Identifier	av_log		559006	0					
ANR	559429	ArgumentList	avctx		559006	1					
ANR	559430	Argument	avctx		559006	0					
ANR	559431	Identifier	avctx		559006	0					
ANR	559432	Argument	AV_LOG_ERROR		559006	1					
ANR	559433	Identifier	AV_LOG_ERROR		559006	0					
ANR	559434	Argument	"""Invalid sample count: %u.\\n"""		559006	2					
ANR	559435	PrimaryExpression	"""Invalid sample count: %u.\\n"""		559006	0					
ANR	559436	Argument	nblocks		559006	3					
ANR	559437	Identifier	nblocks		559006	0					
ANR	559438	ReturnStatement	return AVERROR_INVALIDDATA ;	135:12:2514:2540	559006	1	True				
ANR	559439	Identifier	AVERROR_INVALIDDATA		559006	0					
ANR	559440	ExpressionStatement	s -> samples = nblocks	139:8:2562:2582	559006	17	True				
ANR	559441	AssignmentExpression	s -> samples = nblocks		559006	0		=			
ANR	559442	PtrMemberAccess	s -> samples		559006	0					
ANR	559443	Identifier	s		559006	0					
ANR	559444	Identifier	samples		559006	1					
ANR	559445	Identifier	nblocks		559006	1					
ANR	559446	IfStatement	if ( init_frame_decoder ( s ) < 0 )		559006	18					
ANR	559447	Condition	init_frame_decoder ( s ) < 0	145:12:2643:2667	559006	0	True				
ANR	559448	RelationalExpression	init_frame_decoder ( s ) < 0		559006	0		<			
ANR	559449	CallExpression	init_frame_decoder ( s )		559006	0					
ANR	559450	Callee	init_frame_decoder		559006	0					
ANR	559451	Identifier	init_frame_decoder		559006	0					
ANR	559452	ArgumentList	s		559006	1					
ANR	559453	Argument	s		559006	0					
ANR	559454	Identifier	s		559006	0					
ANR	559455	PrimaryExpression	0		559006	1					
ANR	559456	CompoundStatement		141:39:2539:2539	559006	1					
ANR	559457	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error reading frame header\\n"" )"	147:12:2685:2744	559006	0	True				
ANR	559458	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error reading frame header\\n"" )"		559006	0					
ANR	559459	Callee	av_log		559006	0					
ANR	559460	Identifier	av_log		559006	0					
ANR	559461	ArgumentList	avctx		559006	1					
ANR	559462	Argument	avctx		559006	0					
ANR	559463	Identifier	avctx		559006	0					
ANR	559464	Argument	AV_LOG_ERROR		559006	1					
ANR	559465	Identifier	AV_LOG_ERROR		559006	0					
ANR	559466	Argument	"""Error reading frame header\\n"""		559006	2					
ANR	559467	PrimaryExpression	"""Error reading frame header\\n"""		559006	0					
ANR	559468	ReturnStatement	return AVERROR_INVALIDDATA ;	149:12:2759:2785	559006	1	True				
ANR	559469	Identifier	AVERROR_INVALIDDATA		559006	0					
ANR	559470	IfStatement	if ( ! s -> data )		559006	10					
ANR	559471	Condition	! s -> data	157:8:2816:2823	559006	0	True				
ANR	559472	UnaryOperationExpression	! s -> data		559006	0					
ANR	559473	UnaryOperator	!		559006	0					
ANR	559474	PtrMemberAccess	s -> data		559006	1					
ANR	559475	Identifier	s		559006	0					
ANR	559476	Identifier	data		559006	1					
ANR	559477	CompoundStatement		153:18:2695:2695	559006	1					
ANR	559478	ExpressionStatement	* got_frame_ptr = 0	159:8:2837:2855	559006	0	True				
ANR	559479	AssignmentExpression	* got_frame_ptr = 0		559006	0		=			
ANR	559480	UnaryOperationExpression	* got_frame_ptr		559006	0					
ANR	559481	UnaryOperator	*		559006	0					
ANR	559482	Identifier	got_frame_ptr		559006	1					
ANR	559483	PrimaryExpression	0		559006	1					
ANR	559484	ReturnStatement	return avpkt -> size ;	161:8:2866:2884	559006	1	True				
ANR	559485	PtrMemberAccess	avpkt -> size		559006	0					
ANR	559486	Identifier	avpkt		559006	0					
ANR	559487	Identifier	size		559006	1					
ANR	559488	ExpressionStatement	"blockstodecode = FFMIN ( s -> blocks_per_loop , s -> samples )"	167:4:2900:2954	559006	11	True				
ANR	559489	AssignmentExpression	"blockstodecode = FFMIN ( s -> blocks_per_loop , s -> samples )"		559006	0		=			
ANR	559490	Identifier	blockstodecode		559006	0					
ANR	559491	CallExpression	"FFMIN ( s -> blocks_per_loop , s -> samples )"		559006	1					
ANR	559492	Callee	FFMIN		559006	0					
ANR	559493	Identifier	FFMIN		559006	0					
ANR	559494	ArgumentList	s -> blocks_per_loop		559006	1					
ANR	559495	Argument	s -> blocks_per_loop		559006	0					
ANR	559496	PtrMemberAccess	s -> blocks_per_loop		559006	0					
ANR	559497	Identifier	s		559006	0					
ANR	559498	Identifier	blocks_per_loop		559006	1					
ANR	559499	Argument	s -> samples		559006	1					
ANR	559500	PtrMemberAccess	s -> samples		559006	0					
ANR	559501	Identifier	s		559006	0					
ANR	559502	Identifier	samples		559006	1					
ANR	559503	IfStatement	if ( s -> fileversion < 3930 )		559006	12					
ANR	559504	Condition	s -> fileversion < 3930	173:8:3071:3091	559006	0	True				
ANR	559505	RelationalExpression	s -> fileversion < 3930		559006	0		<			
ANR	559506	PtrMemberAccess	s -> fileversion		559006	0					
ANR	559507	Identifier	s		559006	0					
ANR	559508	Identifier	fileversion		559006	1					
ANR	559509	PrimaryExpression	3930		559006	1					
ANR	559510	ExpressionStatement	blockstodecode = s -> samples	175:8:3103:3130	559006	1	True				
ANR	559511	AssignmentExpression	blockstodecode = s -> samples		559006	0		=			
ANR	559512	Identifier	blockstodecode		559006	0					
ANR	559513	PtrMemberAccess	s -> samples		559006	1					
ANR	559514	Identifier	s		559006	0					
ANR	559515	Identifier	samples		559006	1					
ANR	559516	ExpressionStatement	"av_fast_malloc ( & s -> decoded_buffer , & s -> decoded_size , 2 * FFALIGN ( blockstodecode , 8 ) * sizeof ( * s -> decoded_buffer ) )"	181:4:3193:3326	559006	13	True				
ANR	559517	CallExpression	"av_fast_malloc ( & s -> decoded_buffer , & s -> decoded_size , 2 * FFALIGN ( blockstodecode , 8 ) * sizeof ( * s -> decoded_buffer ) )"		559006	0					
ANR	559518	Callee	av_fast_malloc		559006	0					
ANR	559519	Identifier	av_fast_malloc		559006	0					
ANR	559520	ArgumentList	& s -> decoded_buffer		559006	1					
ANR	559521	Argument	& s -> decoded_buffer		559006	0					
ANR	559522	UnaryOperationExpression	& s -> decoded_buffer		559006	0					
ANR	559523	UnaryOperator	&		559006	0					
ANR	559524	PtrMemberAccess	s -> decoded_buffer		559006	1					
ANR	559525	Identifier	s		559006	0					
ANR	559526	Identifier	decoded_buffer		559006	1					
ANR	559527	Argument	& s -> decoded_size		559006	1					
ANR	559528	UnaryOperationExpression	& s -> decoded_size		559006	0					
ANR	559529	UnaryOperator	&		559006	0					
ANR	559530	PtrMemberAccess	s -> decoded_size		559006	1					
ANR	559531	Identifier	s		559006	0					
ANR	559532	Identifier	decoded_size		559006	1					
ANR	559533	Argument	"2 * FFALIGN ( blockstodecode , 8 ) * sizeof ( * s -> decoded_buffer )"		559006	2					
ANR	559534	MultiplicativeExpression	"2 * FFALIGN ( blockstodecode , 8 ) * sizeof ( * s -> decoded_buffer )"		559006	0		*			
ANR	559535	PrimaryExpression	2		559006	0					
ANR	559536	MultiplicativeExpression	"FFALIGN ( blockstodecode , 8 ) * sizeof ( * s -> decoded_buffer )"		559006	1		*			
ANR	559537	CallExpression	"FFALIGN ( blockstodecode , 8 )"		559006	0					
ANR	559538	Callee	FFALIGN		559006	0					
ANR	559539	Identifier	FFALIGN		559006	0					
ANR	559540	ArgumentList	blockstodecode		559006	1					
ANR	559541	Argument	blockstodecode		559006	0					
ANR	559542	Identifier	blockstodecode		559006	0					
ANR	559543	Argument	8		559006	1					
ANR	559544	PrimaryExpression	8		559006	0					
ANR	559545	SizeofExpression	sizeof ( * s -> decoded_buffer )		559006	1					
ANR	559546	Sizeof	sizeof		559006	0					
ANR	559547	UnaryOperationExpression	* s -> decoded_buffer		559006	1					
ANR	559548	UnaryOperator	*		559006	0					
ANR	559549	PtrMemberAccess	s -> decoded_buffer		559006	1					
ANR	559550	Identifier	s		559006	0					
ANR	559551	Identifier	decoded_buffer		559006	1					
ANR	559552	IfStatement	if ( ! s -> decoded_buffer )		559006	14					
ANR	559553	Condition	! s -> decoded_buffer	185:8:3337:3354	559006	0	True				
ANR	559554	UnaryOperationExpression	! s -> decoded_buffer		559006	0					
ANR	559555	UnaryOperator	!		559006	0					
ANR	559556	PtrMemberAccess	s -> decoded_buffer		559006	1					
ANR	559557	Identifier	s		559006	0					
ANR	559558	Identifier	decoded_buffer		559006	1					
ANR	559559	ReturnStatement	return AVERROR ( ENOMEM ) ;	187:8:3366:3388	559006	1	True				
ANR	559560	CallExpression	AVERROR ( ENOMEM )		559006	0					
ANR	559561	Callee	AVERROR		559006	0					
ANR	559562	Identifier	AVERROR		559006	0					
ANR	559563	ArgumentList	ENOMEM		559006	1					
ANR	559564	Argument	ENOMEM		559006	0					
ANR	559565	Identifier	ENOMEM		559006	0					
ANR	559566	ExpressionStatement	"memset ( s -> decoded_buffer , 0 , s -> decoded_size )"	189:4:3395:3440	559006	15	True				
ANR	559567	CallExpression	"memset ( s -> decoded_buffer , 0 , s -> decoded_size )"		559006	0					
ANR	559568	Callee	memset		559006	0					
ANR	559569	Identifier	memset		559006	0					
ANR	559570	ArgumentList	s -> decoded_buffer		559006	1					
ANR	559571	Argument	s -> decoded_buffer		559006	0					
ANR	559572	PtrMemberAccess	s -> decoded_buffer		559006	0					
ANR	559573	Identifier	s		559006	0					
ANR	559574	Identifier	decoded_buffer		559006	1					
ANR	559575	Argument	0		559006	1					
ANR	559576	PrimaryExpression	0		559006	0					
ANR	559577	Argument	s -> decoded_size		559006	2					
ANR	559578	PtrMemberAccess	s -> decoded_size		559006	0					
ANR	559579	Identifier	s		559006	0					
ANR	559580	Identifier	decoded_size		559006	1					
ANR	559581	ExpressionStatement	s -> decoded [ 0 ] = s -> decoded_buffer	191:4:3447:3480	559006	16	True				
ANR	559582	AssignmentExpression	s -> decoded [ 0 ] = s -> decoded_buffer		559006	0		=			
ANR	559583	ArrayIndexing	s -> decoded [ 0 ]		559006	0					
ANR	559584	PtrMemberAccess	s -> decoded		559006	0					
ANR	559585	Identifier	s		559006	0					
ANR	559586	Identifier	decoded		559006	1					
ANR	559587	PrimaryExpression	0		559006	1					
ANR	559588	PtrMemberAccess	s -> decoded_buffer		559006	1					
ANR	559589	Identifier	s		559006	0					
ANR	559590	Identifier	decoded_buffer		559006	1					
ANR	559591	ExpressionStatement	"s -> decoded [ 1 ] = s -> decoded_buffer + FFALIGN ( blockstodecode , 8 )"	193:4:3487:3549	559006	17	True				
ANR	559592	AssignmentExpression	"s -> decoded [ 1 ] = s -> decoded_buffer + FFALIGN ( blockstodecode , 8 )"		559006	0		=			
ANR	559593	ArrayIndexing	s -> decoded [ 1 ]		559006	0					
ANR	559594	PtrMemberAccess	s -> decoded		559006	0					
ANR	559595	Identifier	s		559006	0					
ANR	559596	Identifier	decoded		559006	1					
ANR	559597	PrimaryExpression	1		559006	1					
ANR	559598	AdditiveExpression	"s -> decoded_buffer + FFALIGN ( blockstodecode , 8 )"		559006	1		+			
ANR	559599	PtrMemberAccess	s -> decoded_buffer		559006	0					
ANR	559600	Identifier	s		559006	0					
ANR	559601	Identifier	decoded_buffer		559006	1					
ANR	559602	CallExpression	"FFALIGN ( blockstodecode , 8 )"		559006	1					
ANR	559603	Callee	FFALIGN		559006	0					
ANR	559604	Identifier	FFALIGN		559006	0					
ANR	559605	ArgumentList	blockstodecode		559006	1					
ANR	559606	Argument	blockstodecode		559006	0					
ANR	559607	Identifier	blockstodecode		559006	0					
ANR	559608	Argument	8		559006	1					
ANR	559609	PrimaryExpression	8		559006	0					
ANR	559610	ExpressionStatement	frame -> nb_samples = blockstodecode	199:4:3587:3621	559006	18	True				
ANR	559611	AssignmentExpression	frame -> nb_samples = blockstodecode		559006	0		=			
ANR	559612	PtrMemberAccess	frame -> nb_samples		559006	0					
ANR	559613	Identifier	frame		559006	0					
ANR	559614	Identifier	nb_samples		559006	1					
ANR	559615	Identifier	blockstodecode		559006	1					
ANR	559616	IfStatement	"if ( ( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0 )"		559006	19					
ANR	559617	Condition	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"	201:8:3632:3673	559006	0	True				
ANR	559618	RelationalExpression	"( ret = ff_get_buffer ( avctx , frame , 0 ) ) < 0"		559006	0		<			
ANR	559619	AssignmentExpression	"ret = ff_get_buffer ( avctx , frame , 0 )"		559006	0		=			
ANR	559620	Identifier	ret		559006	0					
ANR	559621	CallExpression	"ff_get_buffer ( avctx , frame , 0 )"		559006	1					
ANR	559622	Callee	ff_get_buffer		559006	0					
ANR	559623	Identifier	ff_get_buffer		559006	0					
ANR	559624	ArgumentList	avctx		559006	1					
ANR	559625	Argument	avctx		559006	0					
ANR	559626	Identifier	avctx		559006	0					
ANR	559627	Argument	frame		559006	1					
ANR	559628	Identifier	frame		559006	0					
ANR	559629	Argument	0		559006	2					
ANR	559630	PrimaryExpression	0		559006	0					
ANR	559631	PrimaryExpression	0		559006	1					
ANR	559632	ReturnStatement	return ret ;	203:8:3685:3695	559006	1	True				
ANR	559633	Identifier	ret		559006	0					
ANR	559634	ExpressionStatement	s -> error = 0	207:4:3704:3714	559006	20	True				
ANR	559635	AssignmentExpression	s -> error = 0		559006	0		=			
ANR	559636	PtrMemberAccess	s -> error		559006	0					
ANR	559637	Identifier	s		559006	0					
ANR	559638	Identifier	error		559006	1					
ANR	559639	PrimaryExpression	0		559006	1					
ANR	559640	IfStatement	if ( ( s -> channels == 1 ) || ( s -> frameflags & APE_FRAMECODE_PSEUDO_STEREO ) )		559006	21					
ANR	559641	Condition	( s -> channels == 1 ) || ( s -> frameflags & APE_FRAMECODE_PSEUDO_STEREO )	211:8:3727:3793	559006	0	True				
ANR	559642	OrExpression	( s -> channels == 1 ) || ( s -> frameflags & APE_FRAMECODE_PSEUDO_STEREO )		559006	0		||			
ANR	559643	EqualityExpression	s -> channels == 1		559006	0		==			
ANR	559644	PtrMemberAccess	s -> channels		559006	0					
ANR	559645	Identifier	s		559006	0					
ANR	559646	Identifier	channels		559006	1					
ANR	559647	PrimaryExpression	1		559006	1					
ANR	559648	BitAndExpression	s -> frameflags & APE_FRAMECODE_PSEUDO_STEREO		559006	1		&			
ANR	559649	PtrMemberAccess	s -> frameflags		559006	0					
ANR	559650	Identifier	s		559006	0					
ANR	559651	Identifier	frameflags		559006	1					
ANR	559652	Identifier	APE_FRAMECODE_PSEUDO_STEREO		559006	1					
ANR	559653	ExpressionStatement	"ape_unpack_mono ( s , blockstodecode )"	213:8:3805:3839	559006	1	True				
ANR	559654	CallExpression	"ape_unpack_mono ( s , blockstodecode )"		559006	0					
ANR	559655	Callee	ape_unpack_mono		559006	0					
ANR	559656	Identifier	ape_unpack_mono		559006	0					
ANR	559657	ArgumentList	s		559006	1					
ANR	559658	Argument	s		559006	0					
ANR	559659	Identifier	s		559006	0					
ANR	559660	Argument	blockstodecode		559006	1					
ANR	559661	Identifier	blockstodecode		559006	0					
ANR	559662	ElseStatement	else		559006	0					
ANR	559663	ExpressionStatement	"ape_unpack_stereo ( s , blockstodecode )"	217:8:3860:3896	559006	0	True				
ANR	559664	CallExpression	"ape_unpack_stereo ( s , blockstodecode )"		559006	0					
ANR	559665	Callee	ape_unpack_stereo		559006	0					
ANR	559666	Identifier	ape_unpack_stereo		559006	0					
ANR	559667	ArgumentList	s		559006	1					
ANR	559668	Argument	s		559006	0					
ANR	559669	Identifier	s		559006	0					
ANR	559670	Argument	blockstodecode		559006	1					
ANR	559671	Identifier	blockstodecode		559006	0					
ANR	559672	ExpressionStatement	emms_c ( )	219:4:3903:3911	559006	22	True				
ANR	559673	CallExpression	emms_c ( )		559006	0					
ANR	559674	Callee	emms_c		559006	0					
ANR	559675	Identifier	emms_c		559006	0					
ANR	559676	ArgumentList			559006	1					
ANR	559677	IfStatement	if ( s -> error )		559006	23					
ANR	559678	Condition	s -> error	223:8:3924:3931	559006	0	True				
ANR	559679	PtrMemberAccess	s -> error		559006	0					
ANR	559680	Identifier	s		559006	0					
ANR	559681	Identifier	error		559006	1					
ANR	559682	CompoundStatement		219:18:3803:3803	559006	1					
ANR	559683	ExpressionStatement	s -> samples = 0	225:8:3945:3957	559006	0	True				
ANR	559684	AssignmentExpression	s -> samples = 0		559006	0		=			
ANR	559685	PtrMemberAccess	s -> samples		559006	0					
ANR	559686	Identifier	s		559006	0					
ANR	559687	Identifier	samples		559006	1					
ANR	559688	PrimaryExpression	0		559006	1					
ANR	559689	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error decoding frame\\n"" )"	227:8:3968:4021	559006	1	True				
ANR	559690	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error decoding frame\\n"" )"		559006	0					
ANR	559691	Callee	av_log		559006	0					
ANR	559692	Identifier	av_log		559006	0					
ANR	559693	ArgumentList	avctx		559006	1					
ANR	559694	Argument	avctx		559006	0					
ANR	559695	Identifier	avctx		559006	0					
ANR	559696	Argument	AV_LOG_ERROR		559006	1					
ANR	559697	Identifier	AV_LOG_ERROR		559006	0					
ANR	559698	Argument	"""Error decoding frame\\n"""		559006	2					
ANR	559699	PrimaryExpression	"""Error decoding frame\\n"""		559006	0					
ANR	559700	ReturnStatement	return AVERROR_INVALIDDATA ;	229:8:4032:4058	559006	2	True				
ANR	559701	Identifier	AVERROR_INVALIDDATA		559006	0					
ANR	559702	SwitchStatement	switch ( s -> bps )		559006	24					
ANR	559703	Condition	s -> bps	235:12:4082:4087	559006	0	True				
ANR	559704	PtrMemberAccess	s -> bps		559006	0					
ANR	559705	Identifier	s		559006	0					
ANR	559706	Identifier	bps		559006	1					
ANR	559707	CompoundStatement		231:20:3959:3959	559006	1					
ANR	559708	Label	case 8 :	237:4:4097:4103	559006	0	True				
ANR	559709	ForStatement	for ( ch = 0 ; ch < s -> channels ; ch ++ )		559006	1					
ANR	559710	ForInit	ch = 0 ;	239:13:4119:4125	559006	0	True				
ANR	559711	AssignmentExpression	ch = 0		559006	0		=			
ANR	559712	Identifier	ch		559006	0					
ANR	559713	PrimaryExpression	0		559006	1					
ANR	559714	Condition	ch < s -> channels	239:21:4127:4142	559006	1	True				
ANR	559715	RelationalExpression	ch < s -> channels		559006	0		<			
ANR	559716	Identifier	ch		559006	0					
ANR	559717	PtrMemberAccess	s -> channels		559006	1					
ANR	559718	Identifier	s		559006	0					
ANR	559719	Identifier	channels		559006	1					
ANR	559720	PostIncDecOperationExpression	ch ++	239:39:4145:4148	559006	2	True				
ANR	559721	Identifier	ch		559006	0					
ANR	559722	IncDec	++		559006	1					
ANR	559723	CompoundStatement		235:45:4020:4020	559006	3					
ANR	559724	ExpressionStatement	sample8 = ( uint8_t * ) frame -> data [ ch ]	241:12:4166:4202	559006	0	True				
ANR	559725	AssignmentExpression	sample8 = ( uint8_t * ) frame -> data [ ch ]		559006	0		=			
ANR	559726	Identifier	sample8		559006	0					
ANR	559727	CastExpression	( uint8_t * ) frame -> data [ ch ]		559006	1					
ANR	559728	CastTarget	uint8_t *		559006	0					
ANR	559729	ArrayIndexing	frame -> data [ ch ]		559006	1					
ANR	559730	PtrMemberAccess	frame -> data		559006	0					
ANR	559731	Identifier	frame		559006	0					
ANR	559732	Identifier	data		559006	1					
ANR	559733	Identifier	ch		559006	1					
ANR	559734	ForStatement	for ( i = 0 ; i < blockstodecode ; i ++ )		559006	1					
ANR	559735	ForInit	i = 0 ;	243:17:4222:4227	559006	0	True				
ANR	559736	AssignmentExpression	i = 0		559006	0		=			
ANR	559737	Identifier	i		559006	0					
ANR	559738	PrimaryExpression	0		559006	1					
ANR	559739	Condition	i < blockstodecode	243:24:4229:4246	559006	1	True				
ANR	559740	RelationalExpression	i < blockstodecode		559006	0		<			
ANR	559741	Identifier	i		559006	0					
ANR	559742	Identifier	blockstodecode		559006	1					
ANR	559743	PostIncDecOperationExpression	i ++	243:44:4249:4251	559006	2	True				
ANR	559744	Identifier	i		559006	0					
ANR	559745	IncDec	++		559006	1					
ANR	559746	ExpressionStatement	* sample8 ++ = ( s -> decoded [ ch ] [ i ] + 0x80 ) & 0xff	245:16:4271:4317	559006	3	True				
ANR	559747	AssignmentExpression	* sample8 ++ = ( s -> decoded [ ch ] [ i ] + 0x80 ) & 0xff		559006	0		=			
ANR	559748	UnaryOperationExpression	* sample8 ++		559006	0					
ANR	559749	UnaryOperator	*		559006	0					
ANR	559750	PostIncDecOperationExpression	sample8 ++		559006	1					
ANR	559751	Identifier	sample8		559006	0					
ANR	559752	IncDec	++		559006	1					
ANR	559753	BitAndExpression	( s -> decoded [ ch ] [ i ] + 0x80 ) & 0xff		559006	1		&			
ANR	559754	AdditiveExpression	s -> decoded [ ch ] [ i ] + 0x80		559006	0		+			
ANR	559755	ArrayIndexing	s -> decoded [ ch ] [ i ]		559006	0					
ANR	559756	ArrayIndexing	s -> decoded [ ch ]		559006	0					
ANR	559757	PtrMemberAccess	s -> decoded		559006	0					
ANR	559758	Identifier	s		559006	0					
ANR	559759	Identifier	decoded		559006	1					
ANR	559760	Identifier	ch		559006	1					
ANR	559761	Identifier	i		559006	1					
ANR	559762	PrimaryExpression	0x80		559006	1					
ANR	559763	PrimaryExpression	0xff		559006	1					
ANR	559764	BreakStatement	break ;	249:8:4339:4344	559006	2	True				
ANR	559765	Label	case 16 :	251:4:4351:4358	559006	3	True				
ANR	559766	ForStatement	for ( ch = 0 ; ch < s -> channels ; ch ++ )		559006	4					
ANR	559767	ForInit	ch = 0 ;	253:13:4374:4380	559006	0	True				
ANR	559768	AssignmentExpression	ch = 0		559006	0		=			
ANR	559769	Identifier	ch		559006	0					
ANR	559770	PrimaryExpression	0		559006	1					
ANR	559771	Condition	ch < s -> channels	253:21:4382:4397	559006	1	True				
ANR	559772	RelationalExpression	ch < s -> channels		559006	0		<			
ANR	559773	Identifier	ch		559006	0					
ANR	559774	PtrMemberAccess	s -> channels		559006	1					
ANR	559775	Identifier	s		559006	0					
ANR	559776	Identifier	channels		559006	1					
ANR	559777	PostIncDecOperationExpression	ch ++	253:39:4400:4403	559006	2	True				
ANR	559778	Identifier	ch		559006	0					
ANR	559779	IncDec	++		559006	1					
ANR	559780	CompoundStatement		249:45:4275:4275	559006	3					
ANR	559781	ExpressionStatement	sample16 = ( int16_t * ) frame -> data [ ch ]	255:12:4421:4458	559006	0	True				
ANR	559782	AssignmentExpression	sample16 = ( int16_t * ) frame -> data [ ch ]		559006	0		=			
ANR	559783	Identifier	sample16		559006	0					
ANR	559784	CastExpression	( int16_t * ) frame -> data [ ch ]		559006	1					
ANR	559785	CastTarget	int16_t *		559006	0					
ANR	559786	ArrayIndexing	frame -> data [ ch ]		559006	1					
ANR	559787	PtrMemberAccess	frame -> data		559006	0					
ANR	559788	Identifier	frame		559006	0					
ANR	559789	Identifier	data		559006	1					
ANR	559790	Identifier	ch		559006	1					
ANR	559791	ForStatement	for ( i = 0 ; i < blockstodecode ; i ++ )		559006	1					
ANR	559792	ForInit	i = 0 ;	257:17:4478:4483	559006	0	True				
ANR	559793	AssignmentExpression	i = 0		559006	0		=			
ANR	559794	Identifier	i		559006	0					
ANR	559795	PrimaryExpression	0		559006	1					
ANR	559796	Condition	i < blockstodecode	257:24:4485:4502	559006	1	True				
ANR	559797	RelationalExpression	i < blockstodecode		559006	0		<			
ANR	559798	Identifier	i		559006	0					
ANR	559799	Identifier	blockstodecode		559006	1					
ANR	559800	PostIncDecOperationExpression	i ++	257:44:4505:4507	559006	2	True				
ANR	559801	Identifier	i		559006	0					
ANR	559802	IncDec	++		559006	1					
ANR	559803	ExpressionStatement	* sample16 ++ = s -> decoded [ ch ] [ i ]	259:16:4527:4558	559006	3	True				
ANR	559804	AssignmentExpression	* sample16 ++ = s -> decoded [ ch ] [ i ]		559006	0		=			
ANR	559805	UnaryOperationExpression	* sample16 ++		559006	0					
ANR	559806	UnaryOperator	*		559006	0					
ANR	559807	PostIncDecOperationExpression	sample16 ++		559006	1					
ANR	559808	Identifier	sample16		559006	0					
ANR	559809	IncDec	++		559006	1					
ANR	559810	ArrayIndexing	s -> decoded [ ch ] [ i ]		559006	1					
ANR	559811	ArrayIndexing	s -> decoded [ ch ]		559006	0					
ANR	559812	PtrMemberAccess	s -> decoded		559006	0					
ANR	559813	Identifier	s		559006	0					
ANR	559814	Identifier	decoded		559006	1					
ANR	559815	Identifier	ch		559006	1					
ANR	559816	Identifier	i		559006	1					
ANR	559817	BreakStatement	break ;	263:8:4580:4585	559006	5	True				
ANR	559818	Label	case 24 :	265:4:4592:4599	559006	6	True				
ANR	559819	ForStatement	for ( ch = 0 ; ch < s -> channels ; ch ++ )		559006	7					
ANR	559820	ForInit	ch = 0 ;	267:13:4615:4621	559006	0	True				
ANR	559821	AssignmentExpression	ch = 0		559006	0		=			
ANR	559822	Identifier	ch		559006	0					
ANR	559823	PrimaryExpression	0		559006	1					
ANR	559824	Condition	ch < s -> channels	267:21:4623:4638	559006	1	True				
ANR	559825	RelationalExpression	ch < s -> channels		559006	0		<			
ANR	559826	Identifier	ch		559006	0					
ANR	559827	PtrMemberAccess	s -> channels		559006	1					
ANR	559828	Identifier	s		559006	0					
ANR	559829	Identifier	channels		559006	1					
ANR	559830	PostIncDecOperationExpression	ch ++	267:39:4641:4644	559006	2	True				
ANR	559831	Identifier	ch		559006	0					
ANR	559832	IncDec	++		559006	1					
ANR	559833	CompoundStatement		263:45:4516:4516	559006	3					
ANR	559834	ExpressionStatement	sample24 = ( int32_t * ) frame -> data [ ch ]	269:12:4662:4699	559006	0	True				
ANR	559835	AssignmentExpression	sample24 = ( int32_t * ) frame -> data [ ch ]		559006	0		=			
ANR	559836	Identifier	sample24		559006	0					
ANR	559837	CastExpression	( int32_t * ) frame -> data [ ch ]		559006	1					
ANR	559838	CastTarget	int32_t *		559006	0					
ANR	559839	ArrayIndexing	frame -> data [ ch ]		559006	1					
ANR	559840	PtrMemberAccess	frame -> data		559006	0					
ANR	559841	Identifier	frame		559006	0					
ANR	559842	Identifier	data		559006	1					
ANR	559843	Identifier	ch		559006	1					
ANR	559844	ForStatement	for ( i = 0 ; i < blockstodecode ; i ++ )		559006	1					
ANR	559845	ForInit	i = 0 ;	271:17:4719:4724	559006	0	True				
ANR	559846	AssignmentExpression	i = 0		559006	0		=			
ANR	559847	Identifier	i		559006	0					
ANR	559848	PrimaryExpression	0		559006	1					
ANR	559849	Condition	i < blockstodecode	271:24:4726:4743	559006	1	True				
ANR	559850	RelationalExpression	i < blockstodecode		559006	0		<			
ANR	559851	Identifier	i		559006	0					
ANR	559852	Identifier	blockstodecode		559006	1					
ANR	559853	PostIncDecOperationExpression	i ++	271:44:4746:4748	559006	2	True				
ANR	559854	Identifier	i		559006	0					
ANR	559855	IncDec	++		559006	1					
ANR	559856	ExpressionStatement	* sample24 ++ = s -> decoded [ ch ] [ i ] << 8	273:16:4768:4804	559006	3	True				
ANR	559857	AssignmentExpression	* sample24 ++ = s -> decoded [ ch ] [ i ] << 8		559006	0		=			
ANR	559858	UnaryOperationExpression	* sample24 ++		559006	0					
ANR	559859	UnaryOperator	*		559006	0					
ANR	559860	PostIncDecOperationExpression	sample24 ++		559006	1					
ANR	559861	Identifier	sample24		559006	0					
ANR	559862	IncDec	++		559006	1					
ANR	559863	ShiftExpression	s -> decoded [ ch ] [ i ] << 8		559006	1		<<			
ANR	559864	ArrayIndexing	s -> decoded [ ch ] [ i ]		559006	0					
ANR	559865	ArrayIndexing	s -> decoded [ ch ]		559006	0					
ANR	559866	PtrMemberAccess	s -> decoded		559006	0					
ANR	559867	Identifier	s		559006	0					
ANR	559868	Identifier	decoded		559006	1					
ANR	559869	Identifier	ch		559006	1					
ANR	559870	Identifier	i		559006	1					
ANR	559871	PrimaryExpression	8		559006	1					
ANR	559872	BreakStatement	break ;	277:8:4826:4831	559006	8	True				
ANR	559873	ExpressionStatement	s -> samples -= blockstodecode	283:4:4847:4875	559006	25	True				
ANR	559874	AssignmentExpression	s -> samples -= blockstodecode		559006	0		-=			
ANR	559875	PtrMemberAccess	s -> samples		559006	0					
ANR	559876	Identifier	s		559006	0					
ANR	559877	Identifier	samples		559006	1					
ANR	559878	Identifier	blockstodecode		559006	1					
ANR	559879	ExpressionStatement	* got_frame_ptr = 1	287:4:4884:4902	559006	26	True				
ANR	559880	AssignmentExpression	* got_frame_ptr = 1		559006	0		=			
ANR	559881	UnaryOperationExpression	* got_frame_ptr		559006	0					
ANR	559882	UnaryOperator	*		559006	0					
ANR	559883	Identifier	got_frame_ptr		559006	1					
ANR	559884	PrimaryExpression	1		559006	1					
ANR	559885	ReturnStatement	return ! s -> samples ? avpkt -> size : 0 ;	291:4:4911:4947	559006	27	True				
ANR	559886	ConditionalExpression	! s -> samples ? avpkt -> size : 0		559006	0					
ANR	559887	Condition	! s -> samples		559006	0					
ANR	559888	UnaryOperationExpression	! s -> samples		559006	0					
ANR	559889	UnaryOperator	!		559006	0					
ANR	559890	PtrMemberAccess	s -> samples		559006	1					
ANR	559891	Identifier	s		559006	0					
ANR	559892	Identifier	samples		559006	1					
ANR	559893	PtrMemberAccess	avpkt -> size		559006	1					
ANR	559894	Identifier	avpkt		559006	0					
ANR	559895	Identifier	size		559006	1					
ANR	559896	PrimaryExpression	0		559006	2					
ANR	559897	ReturnType	static int		559006	1					
ANR	559898	Identifier	ape_decode_frame		559006	2					
ANR	559899	ParameterList	"AVCodecContext * avctx , void * data , int * got_frame_ptr , AVPacket * avpkt"		559006	3					
ANR	559900	Parameter	AVCodecContext * avctx	1:28:28:48	559006	0	True				
ANR	559901	ParameterType	AVCodecContext *		559006	0					
ANR	559902	Identifier	avctx		559006	1					
ANR	559903	Parameter	void * data	1:51:51:60	559006	1	True				
ANR	559904	ParameterType	void *		559006	0					
ANR	559905	Identifier	data		559006	1					
ANR	559906	Parameter	int * got_frame_ptr	3:28:92:109	559006	2	True				
ANR	559907	ParameterType	int *		559006	0					
ANR	559908	Identifier	got_frame_ptr		559006	1					
ANR	559909	Parameter	AVPacket * avpkt	3:48:112:126	559006	3	True				
ANR	559910	ParameterType	AVPacket *		559006	0					
ANR	559911	Identifier	avpkt		559006	1					
ANR	559912	CFGEntryNode	ENTRY		559006		True				
ANR	559913	CFGExitNode	EXIT		559006		True				
ANR	559914	Symbol	ENOMEM		559006						
ANR	559915	Symbol	data		559006						
ANR	559916	Symbol	* ch		559006						
ANR	559917	Symbol	FFMIN		559006						
ANR	559918	Symbol	s -> decoded_size		559006						
ANR	559919	Symbol	got_frame_ptr		559006						
ANR	559920	Symbol	avpkt		559006						
ANR	559921	Symbol	* s -> decoded_buffer		559006						
ANR	559922	Symbol	sample16		559006						
ANR	559923	Symbol	* * frame		559006						
ANR	559924	Symbol	ff_get_buffer		559006						
ANR	559925	Symbol	* * s -> decoded		559006						
ANR	559926	Symbol	s -> data		559006						
ANR	559927	Symbol	* sample8 ++		559006						
ANR	559928	Symbol	init_frame_decoder		559006						
ANR	559929	Symbol	& s -> decoded_size		559006						
ANR	559930	Symbol	frame -> data		559006						
ANR	559931	Symbol	ret		559006						
ANR	559932	Symbol	& s -> ptr		559006						
ANR	559933	Symbol	NULL		559006						
ANR	559934	Symbol	s -> blocks_per_loop		559006						
ANR	559935	Symbol	* sample24 ++		559006						
ANR	559936	Symbol	offset		559006						
ANR	559937	Symbol	s -> error		559006						
ANR	559938	Symbol	& s -> decoded_buffer		559006						
ANR	559939	Symbol	buf_size		559006						
ANR	559940	Symbol	& s -> data		559006						
ANR	559941	Symbol	sample24		559006						
ANR	559942	Symbol	s -> dsp		559006						
ANR	559943	Symbol	* * * s		559006						
ANR	559944	Symbol	& s -> gb		559006						
ANR	559945	Symbol	s -> frameflags		559006						
ANR	559946	Symbol	* avctx		559006						
ANR	559947	Symbol	init_get_bits8		559006						
ANR	559948	Symbol	& s -> data_size		559006						
ANR	559949	Symbol	nblocks		559006						
ANR	559950	Symbol	FFALIGN		559006						
ANR	559951	Symbol	avpkt -> data		559006						
ANR	559952	Symbol	frame		559006						
ANR	559953	Symbol	* frame -> data		559006						
ANR	559954	Symbol	* frame		559006						
ANR	559955	Symbol	s -> samples		559006						
ANR	559956	Symbol	APE_FRAMECODE_PSEUDO_STEREO		559006						
ANR	559957	Symbol	s -> channels		559006						
ANR	559958	Symbol	s -> decoded_buffer		559006						
ANR	559959	Symbol	bytestream_get_be32		559006						
ANR	559960	Symbol	* * ch		559006						
ANR	559961	Symbol	INT_MAX		559006						
ANR	559962	Symbol	* * s		559006						
ANR	559963	Symbol	avpkt -> size		559006						
ANR	559964	Symbol	avctx		559006						
ANR	559965	Symbol	s -> decoded		559006						
ANR	559966	Symbol	* avpkt		559006						
ANR	559967	Symbol	frame -> nb_samples		559006						
ANR	559968	Symbol	AV_LOG_ERROR		559006						
ANR	559969	Symbol	ch		559006						
ANR	559970	Symbol	* got_frame_ptr		559006						
ANR	559971	Symbol	sample8		559006						
ANR	559972	Symbol	i		559006						
ANR	559973	Symbol	s -> data_end		559006						
ANR	559974	Symbol	* sample16 ++		559006						
ANR	559975	Symbol	avctx -> priv_data		559006						
ANR	559976	Symbol	s -> bps		559006						
ANR	559977	Symbol	buf		559006						
ANR	559978	Symbol	* s -> decoded		559006						
ANR	559979	Symbol	s		559006						
ANR	559980	Symbol	s -> fileversion		559006						
ANR	559981	Symbol	* i		559006						
ANR	559982	Symbol	~3		559006						
ANR	559983	Symbol	AVERROR_INVALIDDATA		559006						
ANR	559984	Symbol	blockstodecode		559006						
ANR	559985	Symbol	AVERROR		559006						
ANR	559986	Symbol	* s		559006						
ANR	559987	Symbol	s -> ptr		559006						
