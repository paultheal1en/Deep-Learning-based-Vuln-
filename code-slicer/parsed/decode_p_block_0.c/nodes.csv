command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1982467	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_p_block_0.c								
ANR	1982468	Function	decode_p_block	1:0:0:2213							
ANR	1982469	FunctionDef	"decode_p_block (FourXContext * f , uint16_t * dst , uint16_t * src , int log2w , int log2h , int stride)"		1982468	0					
ANR	1982470	CompoundStatement		5:0:135:2213	1982468	0					
ANR	1982471	IdentifierDeclStatement	const int index = size2index [ log2h ] [ log2w ] ;	7:4:142:184	1982468	0	True				
ANR	1982472	IdentifierDecl	index = size2index [ log2h ] [ log2w ]		1982468	0					
ANR	1982473	IdentifierDeclType	const int		1982468	0					
ANR	1982474	Identifier	index		1982468	1					
ANR	1982475	AssignmentExpression	index = size2index [ log2h ] [ log2w ]		1982468	2		=			
ANR	1982476	Identifier	index		1982468	0					
ANR	1982477	ArrayIndexing	size2index [ log2h ] [ log2w ]		1982468	1					
ANR	1982478	ArrayIndexing	size2index [ log2h ]		1982468	0					
ANR	1982479	Identifier	size2index		1982468	0					
ANR	1982480	Identifier	log2h		1982468	1					
ANR	1982481	Identifier	log2w		1982468	1					
ANR	1982482	IdentifierDeclStatement	const int h = 1 << log2h ;	9:4:191:219	1982468	1	True				
ANR	1982483	IdentifierDecl	h = 1 << log2h		1982468	0					
ANR	1982484	IdentifierDeclType	const int		1982468	0					
ANR	1982485	Identifier	h		1982468	1					
ANR	1982486	AssignmentExpression	h = 1 << log2h		1982468	2		=			
ANR	1982487	Identifier	h		1982468	0					
ANR	1982488	ShiftExpression	1 << log2h		1982468	1		<<			
ANR	1982489	PrimaryExpression	1		1982468	0					
ANR	1982490	Identifier	log2h		1982468	1					
ANR	1982491	IdentifierDeclStatement	"int code = get_vlc2 ( & f -> gb , block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table , BLOCK_TYPE_VLC_BITS , 1 ) ;"	11:4:226:399	1982468	2	True				
ANR	1982492	IdentifierDecl	"code = get_vlc2 ( & f -> gb , block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table , BLOCK_TYPE_VLC_BITS , 1 )"		1982468	0					
ANR	1982493	IdentifierDeclType	int		1982468	0					
ANR	1982494	Identifier	code		1982468	1					
ANR	1982495	AssignmentExpression	"code = get_vlc2 ( & f -> gb , block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table , BLOCK_TYPE_VLC_BITS , 1 )"		1982468	2		=			
ANR	1982496	Identifier	code		1982468	0					
ANR	1982497	CallExpression	"get_vlc2 ( & f -> gb , block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table , BLOCK_TYPE_VLC_BITS , 1 )"		1982468	1					
ANR	1982498	Callee	get_vlc2		1982468	0					
ANR	1982499	Identifier	get_vlc2		1982468	0					
ANR	1982500	ArgumentList	& f -> gb		1982468	1					
ANR	1982501	Argument	& f -> gb		1982468	0					
ANR	1982502	UnaryOperationExpression	& f -> gb		1982468	0					
ANR	1982503	UnaryOperator	&		1982468	0					
ANR	1982504	PtrMemberAccess	f -> gb		1982468	1					
ANR	1982505	Identifier	f		1982468	0					
ANR	1982506	Identifier	gb		1982468	1					
ANR	1982507	Argument	block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table		1982468	1					
ANR	1982508	MemberAccess	block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table		1982468	0					
ANR	1982509	ArrayIndexing	block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ]		1982468	0					
ANR	1982510	ArrayIndexing	block_type_vlc [ 1 - ( f -> version > 1 ) ]		1982468	0					
ANR	1982511	Identifier	block_type_vlc		1982468	0					
ANR	1982512	AdditiveExpression	1 - ( f -> version > 1 )		1982468	1		-			
ANR	1982513	PrimaryExpression	1		1982468	0					
ANR	1982514	RelationalExpression	f -> version > 1		1982468	1		>			
ANR	1982515	PtrMemberAccess	f -> version		1982468	0					
ANR	1982516	Identifier	f		1982468	0					
ANR	1982517	Identifier	version		1982468	1					
ANR	1982518	PrimaryExpression	1		1982468	1					
ANR	1982519	Identifier	index		1982468	1					
ANR	1982520	Identifier	table		1982468	1					
ANR	1982521	Argument	BLOCK_TYPE_VLC_BITS		1982468	2					
ANR	1982522	Identifier	BLOCK_TYPE_VLC_BITS		1982468	0					
ANR	1982523	Argument	1		1982468	3					
ANR	1982524	PrimaryExpression	1		1982468	0					
ANR	1982525	IdentifierDeclStatement	uint16_t * start = f -> last_frame_buffer ;	17:4:406:444	1982468	3	True				
ANR	1982526	IdentifierDecl	* start = f -> last_frame_buffer		1982468	0					
ANR	1982527	IdentifierDeclType	uint16_t *		1982468	0					
ANR	1982528	Identifier	start		1982468	1					
ANR	1982529	AssignmentExpression	* start = f -> last_frame_buffer		1982468	2		=			
ANR	1982530	Identifier	start		1982468	0					
ANR	1982531	PtrMemberAccess	f -> last_frame_buffer		1982468	1					
ANR	1982532	Identifier	f		1982468	0					
ANR	1982533	Identifier	last_frame_buffer		1982468	1					
ANR	1982534	IdentifierDeclStatement	uint16_t * end = start + stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w ) ;	19:4:451:527	1982468	4	True				
ANR	1982535	IdentifierDecl	* end = start + stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w )		1982468	0					
ANR	1982536	IdentifierDeclType	uint16_t *		1982468	0					
ANR	1982537	Identifier	end		1982468	1					
ANR	1982538	AssignmentExpression	* end = start + stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w )		1982468	2		=			
ANR	1982539	Identifier	end		1982468	0					
ANR	1982540	AdditiveExpression	start + stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w )		1982468	1		+			
ANR	1982541	Identifier	start		1982468	0					
ANR	1982542	AdditiveExpression	stride * ( f -> avctx -> height - h + 1 ) - ( 1 << log2w )		1982468	1		-			
ANR	1982543	MultiplicativeExpression	stride * ( f -> avctx -> height - h + 1 )		1982468	0		*			
ANR	1982544	Identifier	stride		1982468	0					
ANR	1982545	AdditiveExpression	f -> avctx -> height - h + 1		1982468	1		-			
ANR	1982546	PtrMemberAccess	f -> avctx -> height		1982468	0					
ANR	1982547	PtrMemberAccess	f -> avctx		1982468	0					
ANR	1982548	Identifier	f		1982468	0					
ANR	1982549	Identifier	avctx		1982468	1					
ANR	1982550	Identifier	height		1982468	1					
ANR	1982551	AdditiveExpression	h + 1		1982468	1		+			
ANR	1982552	Identifier	h		1982468	0					
ANR	1982553	PrimaryExpression	1		1982468	1					
ANR	1982554	ShiftExpression	1 << log2w		1982468	1		<<			
ANR	1982555	PrimaryExpression	1		1982468	0					
ANR	1982556	Identifier	log2w		1982468	1					
ANR	1982557	IdentifierDeclStatement	int ret ;	21:4:534:541	1982468	5	True				
ANR	1982558	IdentifierDecl	ret		1982468	0					
ANR	1982559	IdentifierDeclType	int		1982468	0					
ANR	1982560	Identifier	ret		1982468	1					
ANR	1982561	IdentifierDeclStatement	int scale = 1 ;	23:4:548:563	1982468	6	True				
ANR	1982562	IdentifierDecl	scale = 1		1982468	0					
ANR	1982563	IdentifierDeclType	int		1982468	0					
ANR	1982564	Identifier	scale		1982468	1					
ANR	1982565	AssignmentExpression	scale = 1		1982468	2		=			
ANR	1982566	Identifier	scale		1982468	0					
ANR	1982567	PrimaryExpression	1		1982468	1					
ANR	1982568	IdentifierDeclStatement	unsigned dc = 0 ;	25:4:570:585	1982468	7	True				
ANR	1982569	IdentifierDecl	dc = 0		1982468	0					
ANR	1982570	IdentifierDeclType	unsigned		1982468	0					
ANR	1982571	Identifier	dc		1982468	1					
ANR	1982572	AssignmentExpression	dc = 0		1982468	2		=			
ANR	1982573	Identifier	dc		1982468	0					
ANR	1982574	PrimaryExpression	0		1982468	1					
ANR	1982575	IfStatement	if ( code < 0 || code > 6 || log2w < 0 )		1982468	8					
ANR	1982576	Condition	code < 0 || code > 6 || log2w < 0	29:8:598:630	1982468	0	True				
ANR	1982577	OrExpression	code < 0 || code > 6 || log2w < 0		1982468	0		||			
ANR	1982578	RelationalExpression	code < 0		1982468	0		<			
ANR	1982579	Identifier	code		1982468	0					
ANR	1982580	PrimaryExpression	0		1982468	1					
ANR	1982581	OrExpression	code > 6 || log2w < 0		1982468	1		||			
ANR	1982582	RelationalExpression	code > 6		1982468	0		>			
ANR	1982583	Identifier	code		1982468	0					
ANR	1982584	PrimaryExpression	6		1982468	1					
ANR	1982585	RelationalExpression	log2w < 0		1982468	1		<			
ANR	1982586	Identifier	log2w		1982468	0					
ANR	1982587	PrimaryExpression	0		1982468	1					
ANR	1982588	ReturnStatement	return AVERROR_INVALIDDATA ;	31:8:642:668	1982468	1	True				
ANR	1982589	Identifier	AVERROR_INVALIDDATA		1982468	0					
ANR	1982590	IfStatement	if ( code == 1 )		1982468	9					
ANR	1982591	Condition	code == 1	35:8:681:689	1982468	0	True				
ANR	1982592	EqualityExpression	code == 1		1982468	0		==			
ANR	1982593	Identifier	code		1982468	0					
ANR	1982594	PrimaryExpression	1		1982468	1					
ANR	1982595	CompoundStatement		31:19:556:556	1982468	1					
ANR	1982596	ExpressionStatement	log2h --	37:8:703:710	1982468	0	True				
ANR	1982597	PostIncDecOperationExpression	log2h --		1982468	0					
ANR	1982598	Identifier	log2h		1982468	0					
ANR	1982599	IncDec	--		1982468	1					
ANR	1982600	IfStatement	"if ( ( ret = decode_p_block ( f , dst , src , log2w , log2h , stride ) ) < 0 )"		1982468	1					
ANR	1982601	Condition	"( ret = decode_p_block ( f , dst , src , log2w , log2h , stride ) ) < 0"	39:12:725:785	1982468	0	True				
ANR	1982602	RelationalExpression	"( ret = decode_p_block ( f , dst , src , log2w , log2h , stride ) ) < 0"		1982468	0		<			
ANR	1982603	AssignmentExpression	"ret = decode_p_block ( f , dst , src , log2w , log2h , stride )"		1982468	0		=			
ANR	1982604	Identifier	ret		1982468	0					
ANR	1982605	CallExpression	"decode_p_block ( f , dst , src , log2w , log2h , stride )"		1982468	1					
ANR	1982606	Callee	decode_p_block		1982468	0					
ANR	1982607	Identifier	decode_p_block		1982468	0					
ANR	1982608	ArgumentList	f		1982468	1					
ANR	1982609	Argument	f		1982468	0					
ANR	1982610	Identifier	f		1982468	0					
ANR	1982611	Argument	dst		1982468	1					
ANR	1982612	Identifier	dst		1982468	0					
ANR	1982613	Argument	src		1982468	2					
ANR	1982614	Identifier	src		1982468	0					
ANR	1982615	Argument	log2w		1982468	3					
ANR	1982616	Identifier	log2w		1982468	0					
ANR	1982617	Argument	log2h		1982468	4					
ANR	1982618	Identifier	log2h		1982468	0					
ANR	1982619	Argument	stride		1982468	5					
ANR	1982620	Identifier	stride		1982468	0					
ANR	1982621	PrimaryExpression	0		1982468	1					
ANR	1982622	ReturnStatement	return ret ;	41:12:801:811	1982468	1	True				
ANR	1982623	Identifier	ret		1982468	0					
ANR	1982624	ReturnStatement	"return decode_p_block ( f , dst + ( stride << log2h ) , src + ( stride << log2h ) , log2w , log2h , stride ) ;"	43:8:822:980	1982468	2	True				
ANR	1982625	CallExpression	"decode_p_block ( f , dst + ( stride << log2h ) , src + ( stride << log2h ) , log2w , log2h , stride )"		1982468	0					
ANR	1982626	Callee	decode_p_block		1982468	0					
ANR	1982627	Identifier	decode_p_block		1982468	0					
ANR	1982628	ArgumentList	f		1982468	1					
ANR	1982629	Argument	f		1982468	0					
ANR	1982630	Identifier	f		1982468	0					
ANR	1982631	Argument	dst + ( stride << log2h )		1982468	1					
ANR	1982632	AdditiveExpression	dst + ( stride << log2h )		1982468	0		+			
ANR	1982633	Identifier	dst		1982468	0					
ANR	1982634	ShiftExpression	stride << log2h		1982468	1		<<			
ANR	1982635	Identifier	stride		1982468	0					
ANR	1982636	Identifier	log2h		1982468	1					
ANR	1982637	Argument	src + ( stride << log2h )		1982468	2					
ANR	1982638	AdditiveExpression	src + ( stride << log2h )		1982468	0		+			
ANR	1982639	Identifier	src		1982468	0					
ANR	1982640	ShiftExpression	stride << log2h		1982468	1		<<			
ANR	1982641	Identifier	stride		1982468	0					
ANR	1982642	Identifier	log2h		1982468	1					
ANR	1982643	Argument	log2w		1982468	3					
ANR	1982644	Identifier	log2w		1982468	0					
ANR	1982645	Argument	log2h		1982468	4					
ANR	1982646	Identifier	log2h		1982468	0					
ANR	1982647	Argument	stride		1982468	5					
ANR	1982648	Identifier	stride		1982468	0					
ANR	1982649	ElseStatement	else		1982468	0					
ANR	1982650	IfStatement	if ( code == 2 )		1982468	0					
ANR	1982651	Condition	code == 2	49:15:998:1006	1982468	0	True				
ANR	1982652	EqualityExpression	code == 2		1982468	0		==			
ANR	1982653	Identifier	code		1982468	0					
ANR	1982654	PrimaryExpression	2		1982468	1					
ANR	1982655	CompoundStatement		45:26:873:873	1982468	1					
ANR	1982656	ExpressionStatement	log2w --	51:8:1020:1027	1982468	0	True				
ANR	1982657	PostIncDecOperationExpression	log2w --		1982468	0					
ANR	1982658	Identifier	log2w		1982468	0					
ANR	1982659	IncDec	--		1982468	1					
ANR	1982660	IfStatement	"if ( ( ret = decode_p_block ( f , dst , src , log2w , log2h , stride ) ) < 0 )"		1982468	1					
ANR	1982661	Condition	"( ret = decode_p_block ( f , dst , src , log2w , log2h , stride ) ) < 0"	53:12:1042:1103	1982468	0	True				
ANR	1982662	RelationalExpression	"( ret = decode_p_block ( f , dst , src , log2w , log2h , stride ) ) < 0"		1982468	0		<			
ANR	1982663	AssignmentExpression	"ret = decode_p_block ( f , dst , src , log2w , log2h , stride )"		1982468	0		=			
ANR	1982664	Identifier	ret		1982468	0					
ANR	1982665	CallExpression	"decode_p_block ( f , dst , src , log2w , log2h , stride )"		1982468	1					
ANR	1982666	Callee	decode_p_block		1982468	0					
ANR	1982667	Identifier	decode_p_block		1982468	0					
ANR	1982668	ArgumentList	f		1982468	1					
ANR	1982669	Argument	f		1982468	0					
ANR	1982670	Identifier	f		1982468	0					
ANR	1982671	Argument	dst		1982468	1					
ANR	1982672	Identifier	dst		1982468	0					
ANR	1982673	Argument	src		1982468	2					
ANR	1982674	Identifier	src		1982468	0					
ANR	1982675	Argument	log2w		1982468	3					
ANR	1982676	Identifier	log2w		1982468	0					
ANR	1982677	Argument	log2h		1982468	4					
ANR	1982678	Identifier	log2h		1982468	0					
ANR	1982679	Argument	stride		1982468	5					
ANR	1982680	Identifier	stride		1982468	0					
ANR	1982681	PrimaryExpression	0		1982468	1					
ANR	1982682	ReturnStatement	return ret ;	55:12:1119:1129	1982468	1	True				
ANR	1982683	Identifier	ret		1982468	0					
ANR	1982684	ReturnStatement	"return decode_p_block ( f , dst + ( 1 << log2w ) , src + ( 1 << log2w ) , log2w , log2h , stride ) ;"	57:8:1140:1288	1982468	2	True				
ANR	1982685	CallExpression	"decode_p_block ( f , dst + ( 1 << log2w ) , src + ( 1 << log2w ) , log2w , log2h , stride )"		1982468	0					
ANR	1982686	Callee	decode_p_block		1982468	0					
ANR	1982687	Identifier	decode_p_block		1982468	0					
ANR	1982688	ArgumentList	f		1982468	1					
ANR	1982689	Argument	f		1982468	0					
ANR	1982690	Identifier	f		1982468	0					
ANR	1982691	Argument	dst + ( 1 << log2w )		1982468	1					
ANR	1982692	AdditiveExpression	dst + ( 1 << log2w )		1982468	0		+			
ANR	1982693	Identifier	dst		1982468	0					
ANR	1982694	ShiftExpression	1 << log2w		1982468	1		<<			
ANR	1982695	PrimaryExpression	1		1982468	0					
ANR	1982696	Identifier	log2w		1982468	1					
ANR	1982697	Argument	src + ( 1 << log2w )		1982468	2					
ANR	1982698	AdditiveExpression	src + ( 1 << log2w )		1982468	0		+			
ANR	1982699	Identifier	src		1982468	0					
ANR	1982700	ShiftExpression	1 << log2w		1982468	1		<<			
ANR	1982701	PrimaryExpression	1		1982468	0					
ANR	1982702	Identifier	log2w		1982468	1					
ANR	1982703	Argument	log2w		1982468	3					
ANR	1982704	Identifier	log2w		1982468	0					
ANR	1982705	Argument	log2h		1982468	4					
ANR	1982706	Identifier	log2h		1982468	0					
ANR	1982707	Argument	stride		1982468	5					
ANR	1982708	Identifier	stride		1982468	0					
ANR	1982709	ElseStatement	else		1982468	0					
ANR	1982710	IfStatement	if ( code == 6 )		1982468	0					
ANR	1982711	Condition	code == 6	63:15:1306:1314	1982468	0	True				
ANR	1982712	EqualityExpression	code == 6		1982468	0		==			
ANR	1982713	Identifier	code		1982468	0					
ANR	1982714	PrimaryExpression	6		1982468	1					
ANR	1982715	CompoundStatement		59:26:1181:1181	1982468	1					
ANR	1982716	IfStatement	if ( log2w )		1982468	0					
ANR	1982717	Condition	log2w	65:12:1332:1336	1982468	0	True				
ANR	1982718	Identifier	log2w		1982468	0					
ANR	1982719	CompoundStatement		61:19:1203:1203	1982468	1					
ANR	1982720	ExpressionStatement	dst [ 0 ] = bytestream2_get_le16 ( & f -> g2 )	67:12:1354:1396	1982468	0	True				
ANR	1982721	AssignmentExpression	dst [ 0 ] = bytestream2_get_le16 ( & f -> g2 )		1982468	0		=			
ANR	1982722	ArrayIndexing	dst [ 0 ]		1982468	0					
ANR	1982723	Identifier	dst		1982468	0					
ANR	1982724	PrimaryExpression	0		1982468	1					
ANR	1982725	CallExpression	bytestream2_get_le16 ( & f -> g2 )		1982468	1					
ANR	1982726	Callee	bytestream2_get_le16		1982468	0					
ANR	1982727	Identifier	bytestream2_get_le16		1982468	0					
ANR	1982728	ArgumentList	& f -> g2		1982468	1					
ANR	1982729	Argument	& f -> g2		1982468	0					
ANR	1982730	UnaryOperationExpression	& f -> g2		1982468	0					
ANR	1982731	UnaryOperator	&		1982468	0					
ANR	1982732	PtrMemberAccess	f -> g2		1982468	1					
ANR	1982733	Identifier	f		1982468	0					
ANR	1982734	Identifier	g2		1982468	1					
ANR	1982735	ExpressionStatement	dst [ 1 ] = bytestream2_get_le16 ( & f -> g2 )	69:12:1411:1453	1982468	1	True				
ANR	1982736	AssignmentExpression	dst [ 1 ] = bytestream2_get_le16 ( & f -> g2 )		1982468	0		=			
ANR	1982737	ArrayIndexing	dst [ 1 ]		1982468	0					
ANR	1982738	Identifier	dst		1982468	0					
ANR	1982739	PrimaryExpression	1		1982468	1					
ANR	1982740	CallExpression	bytestream2_get_le16 ( & f -> g2 )		1982468	1					
ANR	1982741	Callee	bytestream2_get_le16		1982468	0					
ANR	1982742	Identifier	bytestream2_get_le16		1982468	0					
ANR	1982743	ArgumentList	& f -> g2		1982468	1					
ANR	1982744	Argument	& f -> g2		1982468	0					
ANR	1982745	UnaryOperationExpression	& f -> g2		1982468	0					
ANR	1982746	UnaryOperator	&		1982468	0					
ANR	1982747	PtrMemberAccess	f -> g2		1982468	1					
ANR	1982748	Identifier	f		1982468	0					
ANR	1982749	Identifier	g2		1982468	1					
ANR	1982750	ElseStatement	else		1982468	0					
ANR	1982751	CompoundStatement		67:15:1335:1335	1982468	0					
ANR	1982752	ExpressionStatement	dst [ 0 ] = bytestream2_get_le16 ( & f -> g2 )	73:12:1486:1528	1982468	0	True				
ANR	1982753	AssignmentExpression	dst [ 0 ] = bytestream2_get_le16 ( & f -> g2 )		1982468	0		=			
ANR	1982754	ArrayIndexing	dst [ 0 ]		1982468	0					
ANR	1982755	Identifier	dst		1982468	0					
ANR	1982756	PrimaryExpression	0		1982468	1					
ANR	1982757	CallExpression	bytestream2_get_le16 ( & f -> g2 )		1982468	1					
ANR	1982758	Callee	bytestream2_get_le16		1982468	0					
ANR	1982759	Identifier	bytestream2_get_le16		1982468	0					
ANR	1982760	ArgumentList	& f -> g2		1982468	1					
ANR	1982761	Argument	& f -> g2		1982468	0					
ANR	1982762	UnaryOperationExpression	& f -> g2		1982468	0					
ANR	1982763	UnaryOperator	&		1982468	0					
ANR	1982764	PtrMemberAccess	f -> g2		1982468	1					
ANR	1982765	Identifier	f		1982468	0					
ANR	1982766	Identifier	g2		1982468	1					
ANR	1982767	ExpressionStatement	dst [ stride ] = bytestream2_get_le16 ( & f -> g2 )	75:12:1543:1585	1982468	1	True				
ANR	1982768	AssignmentExpression	dst [ stride ] = bytestream2_get_le16 ( & f -> g2 )		1982468	0		=			
ANR	1982769	ArrayIndexing	dst [ stride ]		1982468	0					
ANR	1982770	Identifier	dst		1982468	0					
ANR	1982771	Identifier	stride		1982468	1					
ANR	1982772	CallExpression	bytestream2_get_le16 ( & f -> g2 )		1982468	1					
ANR	1982773	Callee	bytestream2_get_le16		1982468	0					
ANR	1982774	Identifier	bytestream2_get_le16		1982468	0					
ANR	1982775	ArgumentList	& f -> g2		1982468	1					
ANR	1982776	Argument	& f -> g2		1982468	0					
ANR	1982777	UnaryOperationExpression	& f -> g2		1982468	0					
ANR	1982778	UnaryOperator	&		1982468	0					
ANR	1982779	PtrMemberAccess	f -> g2		1982468	1					
ANR	1982780	Identifier	f		1982468	0					
ANR	1982781	Identifier	g2		1982468	1					
ANR	1982782	ReturnStatement	return 0 ;	79:8:1607:1615	1982468	1	True				
ANR	1982783	PrimaryExpression	0		1982468	0					
ANR	1982784	IfStatement	if ( code == 0 )		1982468	10					
ANR	1982785	Condition	code == 0	85:8:1635:1643	1982468	0	True				
ANR	1982786	EqualityExpression	code == 0		1982468	0		==			
ANR	1982787	Identifier	code		1982468	0					
ANR	1982788	PrimaryExpression	0		1982468	1					
ANR	1982789	CompoundStatement		81:19:1510:1510	1982468	1					
ANR	1982790	ExpressionStatement	src += f -> mv [ bytestream2_get_byte ( & f -> g ) ]	87:8:1657:1699	1982468	0	True				
ANR	1982791	AssignmentExpression	src += f -> mv [ bytestream2_get_byte ( & f -> g ) ]		1982468	0		+=			
ANR	1982792	Identifier	src		1982468	0					
ANR	1982793	ArrayIndexing	f -> mv [ bytestream2_get_byte ( & f -> g ) ]		1982468	1					
ANR	1982794	PtrMemberAccess	f -> mv		1982468	0					
ANR	1982795	Identifier	f		1982468	0					
ANR	1982796	Identifier	mv		1982468	1					
ANR	1982797	CallExpression	bytestream2_get_byte ( & f -> g )		1982468	1					
ANR	1982798	Callee	bytestream2_get_byte		1982468	0					
ANR	1982799	Identifier	bytestream2_get_byte		1982468	0					
ANR	1982800	ArgumentList	& f -> g		1982468	1					
ANR	1982801	Argument	& f -> g		1982468	0					
ANR	1982802	UnaryOperationExpression	& f -> g		1982468	0					
ANR	1982803	UnaryOperator	&		1982468	0					
ANR	1982804	PtrMemberAccess	f -> g		1982468	1					
ANR	1982805	Identifier	f		1982468	0					
ANR	1982806	Identifier	g		1982468	1					
ANR	1982807	ElseStatement	else		1982468	0					
ANR	1982808	IfStatement	if ( code == 3 && f -> version >= 2 )		1982468	0					
ANR	1982809	Condition	code == 3 && f -> version >= 2	89:15:1717:1744	1982468	0	True				
ANR	1982810	AndExpression	code == 3 && f -> version >= 2		1982468	0		&&			
ANR	1982811	EqualityExpression	code == 3		1982468	0		==			
ANR	1982812	Identifier	code		1982468	0					
ANR	1982813	PrimaryExpression	3		1982468	1					
ANR	1982814	RelationalExpression	f -> version >= 2		1982468	1		>=			
ANR	1982815	PtrMemberAccess	f -> version		1982468	0					
ANR	1982816	Identifier	f		1982468	0					
ANR	1982817	Identifier	version		1982468	1					
ANR	1982818	PrimaryExpression	2		1982468	1					
ANR	1982819	CompoundStatement		85:45:1611:1611	1982468	1					
ANR	1982820	ReturnStatement	return 0 ;	91:8:1758:1766	1982468	0	True				
ANR	1982821	PrimaryExpression	0		1982468	0					
ANR	1982822	ElseStatement	else		1982468	0					
ANR	1982823	IfStatement	if ( code == 4 )		1982468	0					
ANR	1982824	Condition	code == 4	93:15:1784:1792	1982468	0	True				
ANR	1982825	EqualityExpression	code == 4		1982468	0		==			
ANR	1982826	Identifier	code		1982468	0					
ANR	1982827	PrimaryExpression	4		1982468	1					
ANR	1982828	CompoundStatement		89:26:1659:1659	1982468	1					
ANR	1982829	ExpressionStatement	src += f -> mv [ bytestream2_get_byte ( & f -> g ) ]	95:8:1806:1848	1982468	0	True				
ANR	1982830	AssignmentExpression	src += f -> mv [ bytestream2_get_byte ( & f -> g ) ]		1982468	0		+=			
ANR	1982831	Identifier	src		1982468	0					
ANR	1982832	ArrayIndexing	f -> mv [ bytestream2_get_byte ( & f -> g ) ]		1982468	1					
ANR	1982833	PtrMemberAccess	f -> mv		1982468	0					
ANR	1982834	Identifier	f		1982468	0					
ANR	1982835	Identifier	mv		1982468	1					
ANR	1982836	CallExpression	bytestream2_get_byte ( & f -> g )		1982468	1					
ANR	1982837	Callee	bytestream2_get_byte		1982468	0					
ANR	1982838	Identifier	bytestream2_get_byte		1982468	0					
ANR	1982839	ArgumentList	& f -> g		1982468	1					
ANR	1982840	Argument	& f -> g		1982468	0					
ANR	1982841	UnaryOperationExpression	& f -> g		1982468	0					
ANR	1982842	UnaryOperator	&		1982468	0					
ANR	1982843	PtrMemberAccess	f -> g		1982468	1					
ANR	1982844	Identifier	f		1982468	0					
ANR	1982845	Identifier	g		1982468	1					
ANR	1982846	ExpressionStatement	dc = bytestream2_get_le16 ( & f -> g2 )	97:8:1859:1895	1982468	1	True				
ANR	1982847	AssignmentExpression	dc = bytestream2_get_le16 ( & f -> g2 )		1982468	0		=			
ANR	1982848	Identifier	dc		1982468	0					
ANR	1982849	CallExpression	bytestream2_get_le16 ( & f -> g2 )		1982468	1					
ANR	1982850	Callee	bytestream2_get_le16		1982468	0					
ANR	1982851	Identifier	bytestream2_get_le16		1982468	0					
ANR	1982852	ArgumentList	& f -> g2		1982468	1					
ANR	1982853	Argument	& f -> g2		1982468	0					
ANR	1982854	UnaryOperationExpression	& f -> g2		1982468	0					
ANR	1982855	UnaryOperator	&		1982468	0					
ANR	1982856	PtrMemberAccess	f -> g2		1982468	1					
ANR	1982857	Identifier	f		1982468	0					
ANR	1982858	Identifier	g2		1982468	1					
ANR	1982859	ElseStatement	else		1982468	0					
ANR	1982860	IfStatement	if ( code == 5 )		1982468	0					
ANR	1982861	Condition	code == 5	99:15:1913:1921	1982468	0	True				
ANR	1982862	EqualityExpression	code == 5		1982468	0		==			
ANR	1982863	Identifier	code		1982468	0					
ANR	1982864	PrimaryExpression	5		1982468	1					
ANR	1982865	CompoundStatement		95:26:1788:1788	1982468	1					
ANR	1982866	ExpressionStatement	scale = 0	101:8:1935:1944	1982468	0	True				
ANR	1982867	AssignmentExpression	scale = 0		1982468	0		=			
ANR	1982868	Identifier	scale		1982468	0					
ANR	1982869	PrimaryExpression	0		1982468	1					
ANR	1982870	ExpressionStatement	dc = bytestream2_get_le16 ( & f -> g2 )	103:8:1955:1991	1982468	1	True				
ANR	1982871	AssignmentExpression	dc = bytestream2_get_le16 ( & f -> g2 )		1982468	0		=			
ANR	1982872	Identifier	dc		1982468	0					
ANR	1982873	CallExpression	bytestream2_get_le16 ( & f -> g2 )		1982468	1					
ANR	1982874	Callee	bytestream2_get_le16		1982468	0					
ANR	1982875	Identifier	bytestream2_get_le16		1982468	0					
ANR	1982876	ArgumentList	& f -> g2		1982468	1					
ANR	1982877	Argument	& f -> g2		1982468	0					
ANR	1982878	UnaryOperationExpression	& f -> g2		1982468	0					
ANR	1982879	UnaryOperator	&		1982468	0					
ANR	1982880	PtrMemberAccess	f -> g2		1982468	1					
ANR	1982881	Identifier	f		1982468	0					
ANR	1982882	Identifier	g2		1982468	1					
ANR	1982883	IfStatement	if ( start > src || src > end )		1982468	11					
ANR	1982884	Condition	start > src || src > end	109:8:2011:2034	1982468	0	True				
ANR	1982885	OrExpression	start > src || src > end		1982468	0		||			
ANR	1982886	RelationalExpression	start > src		1982468	0		>			
ANR	1982887	Identifier	start		1982468	0					
ANR	1982888	Identifier	src		1982468	1					
ANR	1982889	RelationalExpression	src > end		1982468	1		>			
ANR	1982890	Identifier	src		1982468	0					
ANR	1982891	Identifier	end		1982468	1					
ANR	1982892	CompoundStatement		105:34:1901:1901	1982468	1					
ANR	1982893	ExpressionStatement	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"	111:8:2048:2097	1982468	0	True				
ANR	1982894	CallExpression	"av_log ( f -> avctx , AV_LOG_ERROR , ""mv out of pic\\n"" )"		1982468	0					
ANR	1982895	Callee	av_log		1982468	0					
ANR	1982896	Identifier	av_log		1982468	0					
ANR	1982897	ArgumentList	f -> avctx		1982468	1					
ANR	1982898	Argument	f -> avctx		1982468	0					
ANR	1982899	PtrMemberAccess	f -> avctx		1982468	0					
ANR	1982900	Identifier	f		1982468	0					
ANR	1982901	Identifier	avctx		1982468	1					
ANR	1982902	Argument	AV_LOG_ERROR		1982468	1					
ANR	1982903	Identifier	AV_LOG_ERROR		1982468	0					
ANR	1982904	Argument	"""mv out of pic\\n"""		1982468	2					
ANR	1982905	PrimaryExpression	"""mv out of pic\\n"""		1982468	0					
ANR	1982906	ReturnStatement	return AVERROR_INVALIDDATA ;	113:8:2108:2134	1982468	1	True				
ANR	1982907	Identifier	AVERROR_INVALIDDATA		1982468	0					
ANR	1982908	ExpressionStatement	"mcdc ( dst , src , log2w , h , stride , scale , dc )"	119:4:2150:2193	1982468	12	True				
ANR	1982909	CallExpression	"mcdc ( dst , src , log2w , h , stride , scale , dc )"		1982468	0					
ANR	1982910	Callee	mcdc		1982468	0					
ANR	1982911	Identifier	mcdc		1982468	0					
ANR	1982912	ArgumentList	dst		1982468	1					
ANR	1982913	Argument	dst		1982468	0					
ANR	1982914	Identifier	dst		1982468	0					
ANR	1982915	Argument	src		1982468	1					
ANR	1982916	Identifier	src		1982468	0					
ANR	1982917	Argument	log2w		1982468	2					
ANR	1982918	Identifier	log2w		1982468	0					
ANR	1982919	Argument	h		1982468	3					
ANR	1982920	Identifier	h		1982468	0					
ANR	1982921	Argument	stride		1982468	4					
ANR	1982922	Identifier	stride		1982468	0					
ANR	1982923	Argument	scale		1982468	5					
ANR	1982924	Identifier	scale		1982468	0					
ANR	1982925	Argument	dc		1982468	6					
ANR	1982926	Identifier	dc		1982468	0					
ANR	1982927	ReturnStatement	return 0 ;	123:4:2202:2210	1982468	13	True				
ANR	1982928	PrimaryExpression	0		1982468	0					
ANR	1982929	ReturnType	static int		1982468	1					
ANR	1982930	Identifier	decode_p_block		1982468	2					
ANR	1982931	ParameterList	"FourXContext * f , uint16_t * dst , uint16_t * src , int log2w , int log2h , int stride"		1982468	3					
ANR	1982932	Parameter	FourXContext * f	1:26:26:40	1982468	0	True				
ANR	1982933	ParameterType	FourXContext *		1982468	0					
ANR	1982934	Identifier	f		1982468	1					
ANR	1982935	Parameter	uint16_t * dst	1:43:43:55	1982468	1	True				
ANR	1982936	ParameterType	uint16_t *		1982468	0					
ANR	1982937	Identifier	dst		1982468	1					
ANR	1982938	Parameter	uint16_t * src	1:58:58:70	1982468	2	True				
ANR	1982939	ParameterType	uint16_t *		1982468	0					
ANR	1982940	Identifier	src		1982468	1					
ANR	1982941	Parameter	int log2w	3:26:100:108	1982468	3	True				
ANR	1982942	ParameterType	int		1982468	0					
ANR	1982943	Identifier	log2w		1982468	1					
ANR	1982944	Parameter	int log2h	3:37:111:119	1982468	4	True				
ANR	1982945	ParameterType	int		1982468	0					
ANR	1982946	Identifier	log2h		1982468	1					
ANR	1982947	Parameter	int stride	3:48:122:131	1982468	5	True				
ANR	1982948	ParameterType	int		1982468	0					
ANR	1982949	Identifier	stride		1982468	1					
ANR	1982950	CFGEntryNode	ENTRY		1982468		True				
ANR	1982951	CFGExitNode	EXIT		1982468		True				
ANR	1982952	Symbol	* stride		1982468						
ANR	1982953	Symbol	* f -> mv		1982468						
ANR	1982954	Symbol	* index		1982468						
ANR	1982955	Symbol	stride		1982468						
ANR	1982956	Symbol	* * size2index		1982468						
ANR	1982957	Symbol	* dst		1982468						
ANR	1982958	Symbol	f -> last_frame_buffer		1982468						
ANR	1982959	Symbol	f -> version		1982468						
ANR	1982960	Symbol	log2h		1982468						
ANR	1982961	Symbol	size2index		1982468						
ANR	1982962	Symbol	ret		1982468						
ANR	1982963	Symbol	* f -> version		1982468						
ANR	1982964	Symbol	bytestream2_get_le16		1982468						
ANR	1982965	Symbol	* * f		1982468						
ANR	1982966	Symbol	* * log2h		1982468						
ANR	1982967	Symbol	block_type_vlc		1982468						
ANR	1982968	Symbol	index		1982468						
ANR	1982969	Symbol	* bytestream2_get_byte		1982468						
ANR	1982970	Symbol	* * * f		1982468						
ANR	1982971	Symbol	* * block_type_vlc		1982468						
ANR	1982972	Symbol	* log2h		1982468						
ANR	1982973	Symbol	code		1982468						
ANR	1982974	Symbol	dst		1982468						
ANR	1982975	Symbol	scale		1982468						
ANR	1982976	Symbol	BLOCK_TYPE_VLC_BITS		1982468						
ANR	1982977	Symbol	f -> avctx		1982468						
ANR	1982978	Symbol	& f -> gb		1982468						
ANR	1982979	Symbol	block_type_vlc [ 1 - ( f -> version > 1 ) ] [ index ] . table		1982468						
ANR	1982980	Symbol	f -> mv		1982468						
ANR	1982981	Symbol	* log2w		1982468						
ANR	1982982	Symbol	end		1982468						
ANR	1982983	Symbol	* * f -> version		1982468						
ANR	1982984	Symbol	* block_type_vlc		1982468						
ANR	1982985	Symbol	* f -> avctx		1982468						
ANR	1982986	Symbol	AV_LOG_ERROR		1982468						
ANR	1982987	Symbol	src		1982468						
ANR	1982988	Symbol	f		1982468						
ANR	1982989	Symbol	h		1982468						
ANR	1982990	Symbol	start		1982468						
ANR	1982991	Symbol	* size2index		1982468						
ANR	1982992	Symbol	log2w		1982468						
ANR	1982993	Symbol	* f		1982468						
ANR	1982994	Symbol	decode_p_block		1982468						
ANR	1982995	Symbol	f -> avctx -> height		1982468						
ANR	1982996	Symbol	& f -> g		1982468						
ANR	1982997	Symbol	AVERROR_INVALIDDATA		1982468						
ANR	1982998	Symbol	get_vlc2		1982468						
ANR	1982999	Symbol	bytestream2_get_byte		1982468						
ANR	1983000	Symbol	& f -> g2		1982468						
ANR	1983001	Symbol	dc		1982468						
