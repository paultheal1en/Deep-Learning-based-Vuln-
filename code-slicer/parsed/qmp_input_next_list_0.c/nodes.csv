command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7111746	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qmp_input_next_list_0.c								
ANR	7111747	Function	qmp_input_next_list	1:0:0:574							
ANR	7111748	FunctionDef	"qmp_input_next_list (Visitor * v , GenericList * * list , Error * * errp)"		7111747	0					
ANR	7111749	CompoundStatement		5:0:128:574	7111747	0					
ANR	7111750	IdentifierDeclStatement	QmpInputVisitor * qiv = to_qiv ( v ) ;	7:4:135:167	7111747	0	True				
ANR	7111751	IdentifierDecl	* qiv = to_qiv ( v )		7111747	0					
ANR	7111752	IdentifierDeclType	QmpInputVisitor *		7111747	0					
ANR	7111753	Identifier	qiv		7111747	1					
ANR	7111754	AssignmentExpression	* qiv = to_qiv ( v )		7111747	2		=			
ANR	7111755	Identifier	qiv		7111747	0					
ANR	7111756	CallExpression	to_qiv ( v )		7111747	1					
ANR	7111757	Callee	to_qiv		7111747	0					
ANR	7111758	Identifier	to_qiv		7111747	0					
ANR	7111759	ArgumentList	v		7111747	1					
ANR	7111760	Argument	v		7111747	0					
ANR	7111761	Identifier	v		7111747	0					
ANR	7111762	IdentifierDeclStatement	GenericList * entry ;	9:4:174:192	7111747	1	True				
ANR	7111763	IdentifierDecl	* entry		7111747	0					
ANR	7111764	IdentifierDeclType	GenericList *		7111747	0					
ANR	7111765	Identifier	entry		7111747	1					
ANR	7111766	IdentifierDeclStatement	StackObject * so = & qiv -> stack [ qiv -> nb_stack - 1 ] ;	11:4:199:247	7111747	2	True				
ANR	7111767	IdentifierDecl	* so = & qiv -> stack [ qiv -> nb_stack - 1 ]		7111747	0					
ANR	7111768	IdentifierDeclType	StackObject *		7111747	0					
ANR	7111769	Identifier	so		7111747	1					
ANR	7111770	AssignmentExpression	* so = & qiv -> stack [ qiv -> nb_stack - 1 ]		7111747	2		=			
ANR	7111771	Identifier	so		7111747	0					
ANR	7111772	UnaryOperationExpression	& qiv -> stack [ qiv -> nb_stack - 1 ]		7111747	1					
ANR	7111773	UnaryOperator	&		7111747	0					
ANR	7111774	ArrayIndexing	qiv -> stack [ qiv -> nb_stack - 1 ]		7111747	1					
ANR	7111775	PtrMemberAccess	qiv -> stack		7111747	0					
ANR	7111776	Identifier	qiv		7111747	0					
ANR	7111777	Identifier	stack		7111747	1					
ANR	7111778	AdditiveExpression	qiv -> nb_stack - 1		7111747	1		-			
ANR	7111779	PtrMemberAccess	qiv -> nb_stack		7111747	0					
ANR	7111780	Identifier	qiv		7111747	0					
ANR	7111781	Identifier	nb_stack		7111747	1					
ANR	7111782	PrimaryExpression	1		7111747	1					
ANR	7111783	IfStatement	if ( so -> entry == NULL )		7111747	3					
ANR	7111784	Condition	so -> entry == NULL	15:8:260:276	7111747	0	True				
ANR	7111785	EqualityExpression	so -> entry == NULL		7111747	0		==			
ANR	7111786	PtrMemberAccess	so -> entry		7111747	0					
ANR	7111787	Identifier	so		7111747	0					
ANR	7111788	Identifier	entry		7111747	1					
ANR	7111789	Identifier	NULL		7111747	1					
ANR	7111790	CompoundStatement		11:27:150:150	7111747	1					
ANR	7111791	ReturnStatement	return NULL ;	17:8:290:301	7111747	0	True				
ANR	7111792	Identifier	NULL		7111747	0					
ANR	7111793	ExpressionStatement	entry = g_malloc0 ( sizeof ( * entry ) )	23:4:317:350	7111747	4	True				
ANR	7111794	AssignmentExpression	entry = g_malloc0 ( sizeof ( * entry ) )		7111747	0		=			
ANR	7111795	Identifier	entry		7111747	0					
ANR	7111796	CallExpression	g_malloc0 ( sizeof ( * entry ) )		7111747	1					
ANR	7111797	Callee	g_malloc0		7111747	0					
ANR	7111798	Identifier	g_malloc0		7111747	0					
ANR	7111799	ArgumentList	sizeof ( * entry )		7111747	1					
ANR	7111800	Argument	sizeof ( * entry )		7111747	0					
ANR	7111801	SizeofExpression	sizeof ( * entry )		7111747	0					
ANR	7111802	Sizeof	sizeof		7111747	0					
ANR	7111803	UnaryOperationExpression	* entry		7111747	1					
ANR	7111804	UnaryOperator	*		7111747	0					
ANR	7111805	Identifier	entry		7111747	1					
ANR	7111806	IfStatement	if ( * list )		7111747	5					
ANR	7111807	Condition	* list	25:8:361:365	7111747	0	True				
ANR	7111808	UnaryOperationExpression	* list		7111747	0					
ANR	7111809	UnaryOperator	*		7111747	0					
ANR	7111810	Identifier	list		7111747	1					
ANR	7111811	CompoundStatement		21:15:239:239	7111747	1					
ANR	7111812	ExpressionStatement	so -> entry = qlist_next ( so -> entry )	27:8:379:412	7111747	0	True				
ANR	7111813	AssignmentExpression	so -> entry = qlist_next ( so -> entry )		7111747	0		=			
ANR	7111814	PtrMemberAccess	so -> entry		7111747	0					
ANR	7111815	Identifier	so		7111747	0					
ANR	7111816	Identifier	entry		7111747	1					
ANR	7111817	CallExpression	qlist_next ( so -> entry )		7111747	1					
ANR	7111818	Callee	qlist_next		7111747	0					
ANR	7111819	Identifier	qlist_next		7111747	0					
ANR	7111820	ArgumentList	so -> entry		7111747	1					
ANR	7111821	Argument	so -> entry		7111747	0					
ANR	7111822	PtrMemberAccess	so -> entry		7111747	0					
ANR	7111823	Identifier	so		7111747	0					
ANR	7111824	Identifier	entry		7111747	1					
ANR	7111825	IfStatement	if ( so -> entry == NULL )		7111747	1					
ANR	7111826	Condition	so -> entry == NULL	29:12:427:443	7111747	0	True				
ANR	7111827	EqualityExpression	so -> entry == NULL		7111747	0		==			
ANR	7111828	PtrMemberAccess	so -> entry		7111747	0					
ANR	7111829	Identifier	so		7111747	0					
ANR	7111830	Identifier	entry		7111747	1					
ANR	7111831	Identifier	NULL		7111747	1					
ANR	7111832	CompoundStatement		25:31:317:317	7111747	1					
ANR	7111833	ExpressionStatement	g_free ( entry )	31:12:461:474	7111747	0	True				
ANR	7111834	CallExpression	g_free ( entry )		7111747	0					
ANR	7111835	Callee	g_free		7111747	0					
ANR	7111836	Identifier	g_free		7111747	0					
ANR	7111837	ArgumentList	entry		7111747	1					
ANR	7111838	Argument	entry		7111747	0					
ANR	7111839	Identifier	entry		7111747	0					
ANR	7111840	ReturnStatement	return NULL ;	33:12:489:500	7111747	1	True				
ANR	7111841	Identifier	NULL		7111747	0					
ANR	7111842	ExpressionStatement	( * list ) -> next = entry	37:8:522:543	7111747	2	True				
ANR	7111843	AssignmentExpression	( * list ) -> next = entry		7111747	0		=			
ANR	7111844	PtrMemberAccess	( * list ) -> next		7111747	0					
ANR	7111845	UnaryOperationExpression	* list		7111747	0					
ANR	7111846	UnaryOperator	*		7111747	0					
ANR	7111847	Identifier	list		7111747	1					
ANR	7111848	Identifier	next		7111747	1					
ANR	7111849	Identifier	entry		7111747	1					
ANR	7111850	ReturnStatement	return entry ;	43:4:559:571	7111747	6	True				
ANR	7111851	Identifier	entry		7111747	0					
ANR	7111852	ReturnType	static GenericList *		7111747	1					
ANR	7111853	Identifier	qmp_input_next_list		7111747	2					
ANR	7111854	ParameterList	"Visitor * v , GenericList * * list , Error * * errp"		7111747	3					
ANR	7111855	Parameter	Visitor * v	1:40:40:49	7111747	0	True				
ANR	7111856	ParameterType	Visitor *		7111747	0					
ANR	7111857	Identifier	v		7111747	1					
ANR	7111858	Parameter	GenericList * * list	1:52:52:69	7111747	1	True				
ANR	7111859	ParameterType	GenericList * *		7111747	0					
ANR	7111860	Identifier	list		7111747	1					
ANR	7111861	Parameter	Error * * errp	3:40:113:124	7111747	2	True				
ANR	7111862	ParameterType	Error * *		7111747	0					
ANR	7111863	Identifier	errp		7111747	1					
ANR	7111864	CFGEntryNode	ENTRY		7111747		True				
ANR	7111865	CFGExitNode	EXIT		7111747		True				
ANR	7111866	Symbol	to_qiv		7111747						
ANR	7111867	Symbol	* so		7111747						
ANR	7111868	Symbol	NULL		7111747						
ANR	7111869	Symbol	errp		7111747						
ANR	7111870	Symbol	qiv -> stack		7111747						
ANR	7111871	Symbol	* qiv		7111747						
ANR	7111872	Symbol	qiv -> nb_stack		7111747						
ANR	7111873	Symbol	list		7111747						
ANR	7111874	Symbol	so -> entry		7111747						
ANR	7111875	Symbol	entry		7111747						
ANR	7111876	Symbol	qlist_next		7111747						
ANR	7111877	Symbol	( * list ) -> next		7111747						
ANR	7111878	Symbol	* * list		7111747						
ANR	7111879	Symbol	* list		7111747						
ANR	7111880	Symbol	v		7111747						
ANR	7111881	Symbol	g_malloc0		7111747						
ANR	7111882	Symbol	so		7111747						
ANR	7111883	Symbol	qiv		7111747						
ANR	7111884	Symbol	* entry		7111747						
