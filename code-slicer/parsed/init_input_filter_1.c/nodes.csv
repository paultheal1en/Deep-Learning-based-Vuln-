command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4906945	File	/home/p4ultr4n/workplace/ReVeal/raw_code/init_input_filter_1.c								
ANR	4906946	Function	init_input_filter	1:0:0:2700							
ANR	4906947	FunctionDef	"init_input_filter (FilterGraph * fg , AVFilterInOut * in)"		4906946	0					
ANR	4906948	CompoundStatement		3:0:67:2700	4906946	0					
ANR	4906949	IdentifierDeclStatement	InputStream * ist ;	5:4:74:90	4906946	0	True				
ANR	4906950	IdentifierDecl	* ist		4906946	0					
ANR	4906951	IdentifierDeclType	InputStream *		4906946	0					
ANR	4906952	Identifier	ist		4906946	1					
ANR	4906953	IdentifierDeclStatement	"enum AVMediaType type = avfilter_pad_get_type ( in -> filter_ctx -> input_pads , in -> pad_idx ) ;"	7:4:97:183	4906946	1	True				
ANR	4906954	IdentifierDecl	"type = avfilter_pad_get_type ( in -> filter_ctx -> input_pads , in -> pad_idx )"		4906946	0					
ANR	4906955	IdentifierDeclType	enum AVMediaType		4906946	0					
ANR	4906956	Identifier	type		4906946	1					
ANR	4906957	AssignmentExpression	"type = avfilter_pad_get_type ( in -> filter_ctx -> input_pads , in -> pad_idx )"		4906946	2		=			
ANR	4906958	Identifier	type		4906946	0					
ANR	4906959	CallExpression	"avfilter_pad_get_type ( in -> filter_ctx -> input_pads , in -> pad_idx )"		4906946	1					
ANR	4906960	Callee	avfilter_pad_get_type		4906946	0					
ANR	4906961	Identifier	avfilter_pad_get_type		4906946	0					
ANR	4906962	ArgumentList	in -> filter_ctx -> input_pads		4906946	1					
ANR	4906963	Argument	in -> filter_ctx -> input_pads		4906946	0					
ANR	4906964	PtrMemberAccess	in -> filter_ctx -> input_pads		4906946	0					
ANR	4906965	PtrMemberAccess	in -> filter_ctx		4906946	0					
ANR	4906966	Identifier	in		4906946	0					
ANR	4906967	Identifier	filter_ctx		4906946	1					
ANR	4906968	Identifier	input_pads		4906946	1					
ANR	4906969	Argument	in -> pad_idx		4906946	1					
ANR	4906970	PtrMemberAccess	in -> pad_idx		4906946	0					
ANR	4906971	Identifier	in		4906946	0					
ANR	4906972	Identifier	pad_idx		4906946	1					
ANR	4906973	IdentifierDeclStatement	int i ;	9:4:190:195	4906946	2	True				
ANR	4906974	IdentifierDecl	i		4906946	0					
ANR	4906975	IdentifierDeclType	int		4906946	0					
ANR	4906976	Identifier	i		4906946	1					
ANR	4906977	IfStatement	if ( type != AVMEDIA_TYPE_VIDEO && type != AVMEDIA_TYPE_AUDIO )		4906946	3					
ANR	4906978	Condition	type != AVMEDIA_TYPE_VIDEO && type != AVMEDIA_TYPE_AUDIO	15:8:249:304	4906946	0	True				
ANR	4906979	AndExpression	type != AVMEDIA_TYPE_VIDEO && type != AVMEDIA_TYPE_AUDIO		4906946	0		&&			
ANR	4906980	EqualityExpression	type != AVMEDIA_TYPE_VIDEO		4906946	0		!=			
ANR	4906981	Identifier	type		4906946	0					
ANR	4906982	Identifier	AVMEDIA_TYPE_VIDEO		4906946	1					
ANR	4906983	EqualityExpression	type != AVMEDIA_TYPE_AUDIO		4906946	1		!=			
ANR	4906984	Identifier	type		4906946	0					
ANR	4906985	Identifier	AVMEDIA_TYPE_AUDIO		4906946	1					
ANR	4906986	CompoundStatement		13:66:239:239	4906946	1					
ANR	4906987	Statement	av_log	17:8:318:323	4906946	0	True				
ANR	4906988	Statement	(	17:14:324:324	4906946	1	True				
ANR	4906989	Statement	NULL	17:15:325:328	4906946	2	True				
ANR	4906990	Statement	","	17:19:329:329	4906946	3	True				
ANR	4906991	Statement	AV_LOG_FATAL	17:21:331:342	4906946	4	True				
ANR	4906992	Statement	","	17:33:343:343	4906946	5	True				
ANR	4906993	Statement	"""Only video and audio filters supported """	17:35:345:385	4906946	6	True				
ANR	4906994	Statement	"""currently.\\n"""	19:15:403:416	4906946	7	True				
ANR	4906995	Statement	)	19:29:417:417	4906946	8	True				
ANR	4906996	ExpressionStatement		19:30:418:418	4906946	9	True				
ANR	4906997	ExpressionStatement	exit_program ( 1 )	21:8:429:444	4906946	10	True				
ANR	4906998	CallExpression	exit_program ( 1 )		4906946	0					
ANR	4906999	Callee	exit_program		4906946	0					
ANR	4907000	Identifier	exit_program		4906946	0					
ANR	4907001	ArgumentList	1		4906946	1					
ANR	4907002	Argument	1		4906946	0					
ANR	4907003	PrimaryExpression	1		4906946	0					
ANR	4907004	IfStatement	if ( in -> name )		4906946	4					
ANR	4907005	Condition	in -> name	27:8:464:471	4906946	0	True				
ANR	4907006	PtrMemberAccess	in -> name		4906946	0					
ANR	4907007	Identifier	in		4906946	0					
ANR	4907008	Identifier	name		4906946	1					
ANR	4907009	CompoundStatement		33:8:500:538	4906946	1					
ANR	4907010	IdentifierDeclStatement	AVFormatContext * s ;	29:8:485:503	4906946	0	True				
ANR	4907011	IdentifierDecl	* s		4906946	0					
ANR	4907012	IdentifierDeclType	AVFormatContext *		4906946	0					
ANR	4907013	Identifier	s		4906946	1					
ANR	4907014	IdentifierDeclStatement	AVStream * st = NULL ;	31:8:514:539	4906946	1	True				
ANR	4907015	IdentifierDecl	* st = NULL		4906946	0					
ANR	4907016	IdentifierDeclType	AVStream *		4906946	0					
ANR	4907017	Identifier	st		4906946	1					
ANR	4907018	AssignmentExpression	* st = NULL		4906946	2		=			
ANR	4907019	Identifier	NULL		4906946	0					
ANR	4907020	Identifier	NULL		4906946	1					
ANR	4907021	IdentifierDeclStatement	char * p ;	33:8:550:557	4906946	2	True				
ANR	4907022	IdentifierDecl	* p		4906946	0					
ANR	4907023	IdentifierDeclType	char *		4906946	0					
ANR	4907024	Identifier	p		4906946	1					
ANR	4907025	IdentifierDeclStatement	"int file_idx = strtol ( in -> name , & p , 0 ) ;"	35:8:568:606	4906946	3	True				
ANR	4907026	IdentifierDecl	"file_idx = strtol ( in -> name , & p , 0 )"		4906946	0					
ANR	4907027	IdentifierDeclType	int		4906946	0					
ANR	4907028	Identifier	file_idx		4906946	1					
ANR	4907029	AssignmentExpression	"file_idx = strtol ( in -> name , & p , 0 )"		4906946	2		=			
ANR	4907030	Identifier	file_idx		4906946	0					
ANR	4907031	CallExpression	"strtol ( in -> name , & p , 0 )"		4906946	1					
ANR	4907032	Callee	strtol		4906946	0					
ANR	4907033	Identifier	strtol		4906946	0					
ANR	4907034	ArgumentList	in -> name		4906946	1					
ANR	4907035	Argument	in -> name		4906946	0					
ANR	4907036	PtrMemberAccess	in -> name		4906946	0					
ANR	4907037	Identifier	in		4906946	0					
ANR	4907038	Identifier	name		4906946	1					
ANR	4907039	Argument	& p		4906946	1					
ANR	4907040	UnaryOperationExpression	& p		4906946	0					
ANR	4907041	UnaryOperator	&		4906946	0					
ANR	4907042	Identifier	p		4906946	1					
ANR	4907043	Argument	0		4906946	2					
ANR	4907044	PrimaryExpression	0		4906946	0					
ANR	4907045	IfStatement	if ( file_idx < 0 || file_idx >= nb_input_files )		4906946	4					
ANR	4907046	Condition	file_idx < 0 || file_idx >= nb_input_files	39:12:623:664	4906946	0	True				
ANR	4907047	OrExpression	file_idx < 0 || file_idx >= nb_input_files		4906946	0		||			
ANR	4907048	RelationalExpression	file_idx < 0		4906946	0		<			
ANR	4907049	Identifier	file_idx		4906946	0					
ANR	4907050	PrimaryExpression	0		4906946	1					
ANR	4907051	RelationalExpression	file_idx >= nb_input_files		4906946	1		>=			
ANR	4907052	Identifier	file_idx		4906946	0					
ANR	4907053	Identifier	nb_input_files		4906946	1					
ANR	4907054	CompoundStatement		37:56:599:599	4906946	1					
ANR	4907055	ExpressionStatement	"av_log ( NULL , AV_LOG_FATAL , ""Invalid file index %d in filtegraph description %s.\\n"" , file_idx , fg -> graph_desc )"	41:12:682:811	4906946	0	True				
ANR	4907056	CallExpression	"av_log ( NULL , AV_LOG_FATAL , ""Invalid file index %d in filtegraph description %s.\\n"" , file_idx , fg -> graph_desc )"		4906946	0					
ANR	4907057	Callee	av_log		4906946	0					
ANR	4907058	Identifier	av_log		4906946	0					
ANR	4907059	ArgumentList	NULL		4906946	1					
ANR	4907060	Argument	NULL		4906946	0					
ANR	4907061	Identifier	NULL		4906946	0					
ANR	4907062	Argument	AV_LOG_FATAL		4906946	1					
ANR	4907063	Identifier	AV_LOG_FATAL		4906946	0					
ANR	4907064	Argument	"""Invalid file index %d in filtegraph description %s.\\n"""		4906946	2					
ANR	4907065	PrimaryExpression	"""Invalid file index %d in filtegraph description %s.\\n"""		4906946	0					
ANR	4907066	Argument	file_idx		4906946	3					
ANR	4907067	Identifier	file_idx		4906946	0					
ANR	4907068	Argument	fg -> graph_desc		4906946	4					
ANR	4907069	PtrMemberAccess	fg -> graph_desc		4906946	0					
ANR	4907070	Identifier	fg		4906946	0					
ANR	4907071	Identifier	graph_desc		4906946	1					
ANR	4907072	ExpressionStatement	exit_program ( 1 )	45:12:826:841	4906946	1	True				
ANR	4907073	CallExpression	exit_program ( 1 )		4906946	0					
ANR	4907074	Callee	exit_program		4906946	0					
ANR	4907075	Identifier	exit_program		4906946	0					
ANR	4907076	ArgumentList	1		4906946	1					
ANR	4907077	Argument	1		4906946	0					
ANR	4907078	PrimaryExpression	1		4906946	0					
ANR	4907079	ExpressionStatement	s = input_files [ file_idx ] -> ctx	49:8:863:893	4906946	5	True				
ANR	4907080	AssignmentExpression	s = input_files [ file_idx ] -> ctx		4906946	0		=			
ANR	4907081	Identifier	s		4906946	0					
ANR	4907082	PtrMemberAccess	input_files [ file_idx ] -> ctx		4906946	1					
ANR	4907083	ArrayIndexing	input_files [ file_idx ]		4906946	0					
ANR	4907084	Identifier	input_files		4906946	0					
ANR	4907085	Identifier	file_idx		4906946	1					
ANR	4907086	Identifier	ctx		4906946	1					
ANR	4907087	ForStatement	for ( i = 0 ; i < s -> nb_streams ; i ++ )		4906946	6					
ANR	4907088	ForInit	i = 0 ;	53:13:911:916	4906946	0	True				
ANR	4907089	AssignmentExpression	i = 0		4906946	0		=			
ANR	4907090	Identifier	i		4906946	0					
ANR	4907091	PrimaryExpression	0		4906946	1					
ANR	4907092	Condition	i < s -> nb_streams	53:20:918:934	4906946	1	True				
ANR	4907093	RelationalExpression	i < s -> nb_streams		4906946	0		<			
ANR	4907094	Identifier	i		4906946	0					
ANR	4907095	PtrMemberAccess	s -> nb_streams		4906946	1					
ANR	4907096	Identifier	s		4906946	0					
ANR	4907097	Identifier	nb_streams		4906946	1					
ANR	4907098	PostIncDecOperationExpression	i ++	53:39:937:939	4906946	2	True				
ANR	4907099	Identifier	i		4906946	0					
ANR	4907100	IncDec	++		4906946	1					
ANR	4907101	CompoundStatement		51:44:874:874	4906946	3					
ANR	4907102	IfStatement	if ( s -> streams [ i ] -> codec -> codec_type != type )		4906946	0					
ANR	4907103	Condition	s -> streams [ i ] -> codec -> codec_type != type	55:16:961:1000	4906946	0	True				
ANR	4907104	EqualityExpression	s -> streams [ i ] -> codec -> codec_type != type		4906946	0		!=			
ANR	4907105	PtrMemberAccess	s -> streams [ i ] -> codec -> codec_type		4906946	0					
ANR	4907106	PtrMemberAccess	s -> streams [ i ] -> codec		4906946	0					
ANR	4907107	ArrayIndexing	s -> streams [ i ]		4906946	0					
ANR	4907108	PtrMemberAccess	s -> streams		4906946	0					
ANR	4907109	Identifier	s		4906946	0					
ANR	4907110	Identifier	streams		4906946	1					
ANR	4907111	Identifier	i		4906946	1					
ANR	4907112	Identifier	codec		4906946	1					
ANR	4907113	Identifier	codec_type		4906946	1					
ANR	4907114	Identifier	type		4906946	1					
ANR	4907115	ContinueStatement	continue ;	57:16:1020:1028	4906946	1	True				
ANR	4907116	IfStatement	"if ( check_stream_specifier ( s , s -> streams [ i ] , * p == ':' ? p + 1 : p ) == 1 )"		4906946	1					
ANR	4907117	Condition	"check_stream_specifier ( s , s -> streams [ i ] , * p == ':' ? p + 1 : p ) == 1"	59:16:1047:1114	4906946	0	True				
ANR	4907118	EqualityExpression	"check_stream_specifier ( s , s -> streams [ i ] , * p == ':' ? p + 1 : p ) == 1"		4906946	0		==			
ANR	4907119	CallExpression	"check_stream_specifier ( s , s -> streams [ i ] , * p == ':' ? p + 1 : p )"		4906946	0					
ANR	4907120	Callee	check_stream_specifier		4906946	0					
ANR	4907121	Identifier	check_stream_specifier		4906946	0					
ANR	4907122	ArgumentList	s		4906946	1					
ANR	4907123	Argument	s		4906946	0					
ANR	4907124	Identifier	s		4906946	0					
ANR	4907125	Argument	s -> streams [ i ]		4906946	1					
ANR	4907126	ArrayIndexing	s -> streams [ i ]		4906946	0					
ANR	4907127	PtrMemberAccess	s -> streams		4906946	0					
ANR	4907128	Identifier	s		4906946	0					
ANR	4907129	Identifier	streams		4906946	1					
ANR	4907130	Identifier	i		4906946	1					
ANR	4907131	Argument	* p == ':' ? p + 1 : p		4906946	2					
ANR	4907132	ConditionalExpression	* p == ':' ? p + 1 : p		4906946	0					
ANR	4907133	Condition	* p == ':'		4906946	0					
ANR	4907134	EqualityExpression	* p == ':'		4906946	0		==			
ANR	4907135	UnaryOperationExpression	* p		4906946	0					
ANR	4907136	UnaryOperator	*		4906946	0					
ANR	4907137	Identifier	p		4906946	1					
ANR	4907138	PrimaryExpression	':'		4906946	1					
ANR	4907139	AdditiveExpression	p + 1		4906946	1		+			
ANR	4907140	Identifier	p		4906946	0					
ANR	4907141	PrimaryExpression	1		4906946	1					
ANR	4907142	Identifier	p		4906946	2					
ANR	4907143	PrimaryExpression	1		4906946	1					
ANR	4907144	CompoundStatement		57:86:1049:1049	4906946	1					
ANR	4907145	ExpressionStatement	st = s -> streams [ i ]	61:16:1136:1154	4906946	0	True				
ANR	4907146	AssignmentExpression	st = s -> streams [ i ]		4906946	0		=			
ANR	4907147	Identifier	st		4906946	0					
ANR	4907148	ArrayIndexing	s -> streams [ i ]		4906946	1					
ANR	4907149	PtrMemberAccess	s -> streams		4906946	0					
ANR	4907150	Identifier	s		4906946	0					
ANR	4907151	Identifier	streams		4906946	1					
ANR	4907152	Identifier	i		4906946	1					
ANR	4907153	BreakStatement	break ;	63:16:1173:1178	4906946	1	True				
ANR	4907154	IfStatement	if ( ! st )		4906946	7					
ANR	4907155	Condition	! st	69:12:1219:1221	4906946	0	True				
ANR	4907156	UnaryOperationExpression	! st		4906946	0					
ANR	4907157	UnaryOperator	!		4906946	0					
ANR	4907158	Identifier	st		4906946	1					
ANR	4907159	CompoundStatement		67:17:1156:1156	4906946	1					
ANR	4907160	Statement	av_log	71:12:1239:1244	4906946	0	True				
ANR	4907161	Statement	(	71:18:1245:1245	4906946	1	True				
ANR	4907162	Statement	NULL	71:19:1246:1249	4906946	2	True				
ANR	4907163	Statement	","	71:23:1250:1250	4906946	3	True				
ANR	4907164	Statement	AV_LOG_FATAL	71:25:1252:1263	4906946	4	True				
ANR	4907165	Statement	","	71:37:1264:1264	4906946	5	True				
ANR	4907166	Statement	"""Stream specifier '%s' in filtergraph description %s """	71:39:1266:1319	4906946	6	True				
ANR	4907167	Statement	"""matches no streams.\\n"""	73:19:1341:1363	4906946	7	True				
ANR	4907168	Statement	","	73:42:1364:1364	4906946	8	True				
ANR	4907169	Statement	p	73:44:1366:1366	4906946	9	True				
ANR	4907170	Statement	","	73:45:1367:1367	4906946	10	True				
ANR	4907171	Statement	fg	73:47:1369:1370	4906946	11	True				
ANR	4907172	Statement	->	73:49:1371:1372	4906946	12	True				
ANR	4907173	Statement	graph_desc	73:51:1373:1382	4906946	13	True				
ANR	4907174	Statement	)	73:61:1383:1383	4906946	14	True				
ANR	4907175	ExpressionStatement		73:62:1384:1384	4906946	15	True				
ANR	4907176	ExpressionStatement	exit_program ( 1 )	75:12:1399:1414	4906946	16	True				
ANR	4907177	CallExpression	exit_program ( 1 )		4906946	0					
ANR	4907178	Callee	exit_program		4906946	0					
ANR	4907179	Identifier	exit_program		4906946	0					
ANR	4907180	ArgumentList	1		4906946	1					
ANR	4907181	Argument	1		4906946	0					
ANR	4907182	PrimaryExpression	1		4906946	0					
ANR	4907183	ExpressionStatement	ist = input_streams [ input_files [ file_idx ] -> ist_index + st -> index ]	79:8:1436:1501	4906946	8	True				
ANR	4907184	AssignmentExpression	ist = input_streams [ input_files [ file_idx ] -> ist_index + st -> index ]		4906946	0		=			
ANR	4907185	Identifier	ist		4906946	0					
ANR	4907186	ArrayIndexing	input_streams [ input_files [ file_idx ] -> ist_index + st -> index ]		4906946	1					
ANR	4907187	Identifier	input_streams		4906946	0					
ANR	4907188	AdditiveExpression	input_files [ file_idx ] -> ist_index + st -> index		4906946	1		+			
ANR	4907189	PtrMemberAccess	input_files [ file_idx ] -> ist_index		4906946	0					
ANR	4907190	ArrayIndexing	input_files [ file_idx ]		4906946	0					
ANR	4907191	Identifier	input_files		4906946	0					
ANR	4907192	Identifier	file_idx		4906946	1					
ANR	4907193	Identifier	ist_index		4906946	1					
ANR	4907194	PtrMemberAccess	st -> index		4906946	1					
ANR	4907195	Identifier	st		4906946	0					
ANR	4907196	Identifier	index		4906946	1					
ANR	4907197	ElseStatement	else		4906946	0					
ANR	4907198	CompoundStatement		79:11:1447:1447	4906946	0					
ANR	4907199	ForStatement	for ( i = 0 ; i < nb_input_streams ; i ++ )		4906946	0					
ANR	4907200	ForInit	i = 0 ;	85:13:1597:1602	4906946	0	True				
ANR	4907201	AssignmentExpression	i = 0		4906946	0		=			
ANR	4907202	Identifier	i		4906946	0					
ANR	4907203	PrimaryExpression	0		4906946	1					
ANR	4907204	Condition	i < nb_input_streams	85:20:1604:1623	4906946	1	True				
ANR	4907205	RelationalExpression	i < nb_input_streams		4906946	0		<			
ANR	4907206	Identifier	i		4906946	0					
ANR	4907207	Identifier	nb_input_streams		4906946	1					
ANR	4907208	PostIncDecOperationExpression	i ++	85:42:1626:1628	4906946	2	True				
ANR	4907209	Identifier	i		4906946	0					
ANR	4907210	IncDec	++		4906946	1					
ANR	4907211	CompoundStatement		83:47:1563:1563	4906946	3					
ANR	4907212	ExpressionStatement	ist = input_streams [ i ]	87:12:1646:1668	4906946	0	True				
ANR	4907213	AssignmentExpression	ist = input_streams [ i ]		4906946	0		=			
ANR	4907214	Identifier	ist		4906946	0					
ANR	4907215	ArrayIndexing	input_streams [ i ]		4906946	1					
ANR	4907216	Identifier	input_streams		4906946	0					
ANR	4907217	Identifier	i		4906946	1					
ANR	4907218	IfStatement	if ( ist -> st -> codec -> codec_type == type && ist -> discard )		4906946	1					
ANR	4907219	Condition	ist -> st -> codec -> codec_type == type && ist -> discard	89:16:1687:1736	4906946	0	True				
ANR	4907220	AndExpression	ist -> st -> codec -> codec_type == type && ist -> discard		4906946	0		&&			
ANR	4907221	EqualityExpression	ist -> st -> codec -> codec_type == type		4906946	0		==			
ANR	4907222	PtrMemberAccess	ist -> st -> codec -> codec_type		4906946	0					
ANR	4907223	PtrMemberAccess	ist -> st -> codec		4906946	0					
ANR	4907224	PtrMemberAccess	ist -> st		4906946	0					
ANR	4907225	Identifier	ist		4906946	0					
ANR	4907226	Identifier	st		4906946	1					
ANR	4907227	Identifier	codec		4906946	1					
ANR	4907228	Identifier	codec_type		4906946	1					
ANR	4907229	Identifier	type		4906946	1					
ANR	4907230	PtrMemberAccess	ist -> discard		4906946	1					
ANR	4907231	Identifier	ist		4906946	0					
ANR	4907232	Identifier	discard		4906946	1					
ANR	4907233	BreakStatement	break ;	91:16:1756:1761	4906946	1	True				
ANR	4907234	IfStatement	if ( i == nb_input_streams )		4906946	1					
ANR	4907235	Condition	i == nb_input_streams	95:12:1787:1807	4906946	0	True				
ANR	4907236	EqualityExpression	i == nb_input_streams		4906946	0		==			
ANR	4907237	Identifier	i		4906946	0					
ANR	4907238	Identifier	nb_input_streams		4906946	1					
ANR	4907239	CompoundStatement		93:35:1742:1742	4906946	1					
ANR	4907240	Statement	av_log	97:12:1825:1830	4906946	0	True				
ANR	4907241	Statement	(	97:18:1831:1831	4906946	1	True				
ANR	4907242	Statement	NULL	97:19:1832:1835	4906946	2	True				
ANR	4907243	Statement	","	97:23:1836:1836	4906946	3	True				
ANR	4907244	Statement	AV_LOG_FATAL	97:25:1838:1849	4906946	4	True				
ANR	4907245	Statement	","	97:37:1850:1850	4906946	5	True				
ANR	4907246	Statement	"""Cannot find a matching stream for """	97:39:1852:1887	4906946	6	True				
ANR	4907247	Statement	"""unlabeled input pad %d on filter %s"""	99:19:1909:1945	4906946	7	True				
ANR	4907248	Statement	","	99:56:1946:1946	4906946	8	True				
ANR	4907249	Statement	in	99:58:1948:1949	4906946	9	True				
ANR	4907250	Statement	->	99:60:1950:1951	4906946	10	True				
ANR	4907251	Statement	pad_idx	99:62:1952:1958	4906946	11	True				
ANR	4907252	Statement	","	99:69:1959:1959	4906946	12	True				
ANR	4907253	Statement	in	101:19:1981:1982	4906946	13	True				
ANR	4907254	Statement	->	101:21:1983:1984	4906946	14	True				
ANR	4907255	Statement	filter_ctx	101:23:1985:1994	4906946	15	True				
ANR	4907256	Statement	->	101:33:1995:1996	4906946	16	True				
ANR	4907257	Statement	name	101:35:1997:2000	4906946	17	True				
ANR	4907258	Statement	)	101:39:2001:2001	4906946	18	True				
ANR	4907259	ExpressionStatement		101:40:2002:2002	4906946	19	True				
ANR	4907260	ExpressionStatement	exit_program ( 1 )	103:12:2017:2032	4906946	20	True				
ANR	4907261	CallExpression	exit_program ( 1 )		4906946	0					
ANR	4907262	Callee	exit_program		4906946	0					
ANR	4907263	Identifier	exit_program		4906946	0					
ANR	4907264	ArgumentList	1		4906946	1					
ANR	4907265	Argument	1		4906946	0					
ANR	4907266	PrimaryExpression	1		4906946	0					
ANR	4907267	ExpressionStatement	ist -> discard = 0	109:4:2057:2081	4906946	5	True				
ANR	4907268	AssignmentExpression	ist -> discard = 0		4906946	0		=			
ANR	4907269	PtrMemberAccess	ist -> discard		4906946	0					
ANR	4907270	Identifier	ist		4906946	0					
ANR	4907271	Identifier	discard		4906946	1					
ANR	4907272	PrimaryExpression	0		4906946	1					
ANR	4907273	ExpressionStatement	ist -> decoding_needed = 1	111:4:2088:2112	4906946	6	True				
ANR	4907274	AssignmentExpression	ist -> decoding_needed = 1		4906946	0		=			
ANR	4907275	PtrMemberAccess	ist -> decoding_needed		4906946	0					
ANR	4907276	Identifier	ist		4906946	0					
ANR	4907277	Identifier	decoding_needed		4906946	1					
ANR	4907278	PrimaryExpression	1		4906946	1					
ANR	4907279	ExpressionStatement	ist -> st -> discard = AVDISCARD_NONE	113:4:2119:2152	4906946	7	True				
ANR	4907280	AssignmentExpression	ist -> st -> discard = AVDISCARD_NONE		4906946	0		=			
ANR	4907281	PtrMemberAccess	ist -> st -> discard		4906946	0					
ANR	4907282	PtrMemberAccess	ist -> st		4906946	0					
ANR	4907283	Identifier	ist		4906946	0					
ANR	4907284	Identifier	st		4906946	1					
ANR	4907285	Identifier	discard		4906946	1					
ANR	4907286	Identifier	AVDISCARD_NONE		4906946	1					
ANR	4907287	ExpressionStatement	"fg -> inputs = grow_array ( fg -> inputs , sizeof ( * fg -> inputs ) , & fg -> nb_inputs , fg -> nb_inputs + 1 )"	117:4:2161:2281	4906946	8	True				
ANR	4907288	AssignmentExpression	"fg -> inputs = grow_array ( fg -> inputs , sizeof ( * fg -> inputs ) , & fg -> nb_inputs , fg -> nb_inputs + 1 )"		4906946	0		=			
ANR	4907289	PtrMemberAccess	fg -> inputs		4906946	0					
ANR	4907290	Identifier	fg		4906946	0					
ANR	4907291	Identifier	inputs		4906946	1					
ANR	4907292	CallExpression	"grow_array ( fg -> inputs , sizeof ( * fg -> inputs ) , & fg -> nb_inputs , fg -> nb_inputs + 1 )"		4906946	1					
ANR	4907293	Callee	grow_array		4906946	0					
ANR	4907294	Identifier	grow_array		4906946	0					
ANR	4907295	ArgumentList	fg -> inputs		4906946	1					
ANR	4907296	Argument	fg -> inputs		4906946	0					
ANR	4907297	PtrMemberAccess	fg -> inputs		4906946	0					
ANR	4907298	Identifier	fg		4906946	0					
ANR	4907299	Identifier	inputs		4906946	1					
ANR	4907300	Argument	sizeof ( * fg -> inputs )		4906946	1					
ANR	4907301	SizeofExpression	sizeof ( * fg -> inputs )		4906946	0					
ANR	4907302	Sizeof	sizeof		4906946	0					
ANR	4907303	UnaryOperationExpression	* fg -> inputs		4906946	1					
ANR	4907304	UnaryOperator	*		4906946	0					
ANR	4907305	PtrMemberAccess	fg -> inputs		4906946	1					
ANR	4907306	Identifier	fg		4906946	0					
ANR	4907307	Identifier	inputs		4906946	1					
ANR	4907308	Argument	& fg -> nb_inputs		4906946	2					
ANR	4907309	UnaryOperationExpression	& fg -> nb_inputs		4906946	0					
ANR	4907310	UnaryOperator	&		4906946	0					
ANR	4907311	PtrMemberAccess	fg -> nb_inputs		4906946	1					
ANR	4907312	Identifier	fg		4906946	0					
ANR	4907313	Identifier	nb_inputs		4906946	1					
ANR	4907314	Argument	fg -> nb_inputs + 1		4906946	3					
ANR	4907315	AdditiveExpression	fg -> nb_inputs + 1		4906946	0		+			
ANR	4907316	PtrMemberAccess	fg -> nb_inputs		4906946	0					
ANR	4907317	Identifier	fg		4906946	0					
ANR	4907318	Identifier	nb_inputs		4906946	1					
ANR	4907319	PrimaryExpression	1		4906946	1					
ANR	4907320	IfStatement	if ( ! ( fg -> inputs [ fg -> nb_inputs - 1 ] = av_mallocz ( sizeof ( * fg -> inputs [ 0 ] ) ) ) )		4906946	9					
ANR	4907321	Condition	! ( fg -> inputs [ fg -> nb_inputs - 1 ] = av_mallocz ( sizeof ( * fg -> inputs [ 0 ] ) ) )	121:8:2292:2360	4906946	0	True				
ANR	4907322	UnaryOperationExpression	! ( fg -> inputs [ fg -> nb_inputs - 1 ] = av_mallocz ( sizeof ( * fg -> inputs [ 0 ] ) ) )		4906946	0					
ANR	4907323	UnaryOperator	!		4906946	0					
ANR	4907324	AssignmentExpression	fg -> inputs [ fg -> nb_inputs - 1 ] = av_mallocz ( sizeof ( * fg -> inputs [ 0 ] ) )		4906946	1		=			
ANR	4907325	ArrayIndexing	fg -> inputs [ fg -> nb_inputs - 1 ]		4906946	0					
ANR	4907326	PtrMemberAccess	fg -> inputs		4906946	0					
ANR	4907327	Identifier	fg		4906946	0					
ANR	4907328	Identifier	inputs		4906946	1					
ANR	4907329	AdditiveExpression	fg -> nb_inputs - 1		4906946	1		-			
ANR	4907330	PtrMemberAccess	fg -> nb_inputs		4906946	0					
ANR	4907331	Identifier	fg		4906946	0					
ANR	4907332	Identifier	nb_inputs		4906946	1					
ANR	4907333	PrimaryExpression	1		4906946	1					
ANR	4907334	CallExpression	av_mallocz ( sizeof ( * fg -> inputs [ 0 ] ) )		4906946	1					
ANR	4907335	Callee	av_mallocz		4906946	0					
ANR	4907336	Identifier	av_mallocz		4906946	0					
ANR	4907337	ArgumentList	sizeof ( * fg -> inputs [ 0 ] )		4906946	1					
ANR	4907338	Argument	sizeof ( * fg -> inputs [ 0 ] )		4906946	0					
ANR	4907339	SizeofExpression	sizeof ( * fg -> inputs [ 0 ] )		4906946	0					
ANR	4907340	Sizeof	sizeof		4906946	0					
ANR	4907341	UnaryOperationExpression	* fg -> inputs [ 0 ]		4906946	1					
ANR	4907342	UnaryOperator	*		4906946	0					
ANR	4907343	ArrayIndexing	fg -> inputs [ 0 ]		4906946	1					
ANR	4907344	PtrMemberAccess	fg -> inputs		4906946	0					
ANR	4907345	Identifier	fg		4906946	0					
ANR	4907346	Identifier	inputs		4906946	1					
ANR	4907347	PrimaryExpression	0		4906946	1					
ANR	4907348	ExpressionStatement	exit_program ( 1 )	123:8:2372:2387	4906946	1	True				
ANR	4907349	CallExpression	exit_program ( 1 )		4906946	0					
ANR	4907350	Callee	exit_program		4906946	0					
ANR	4907351	Identifier	exit_program		4906946	0					
ANR	4907352	ArgumentList	1		4906946	1					
ANR	4907353	Argument	1		4906946	0					
ANR	4907354	PrimaryExpression	1		4906946	0					
ANR	4907355	ExpressionStatement	fg -> inputs [ fg -> nb_inputs - 1 ] -> ist = ist	125:4:2394:2436	4906946	10	True				
ANR	4907356	AssignmentExpression	fg -> inputs [ fg -> nb_inputs - 1 ] -> ist = ist		4906946	0		=			
ANR	4907357	PtrMemberAccess	fg -> inputs [ fg -> nb_inputs - 1 ] -> ist		4906946	0					
ANR	4907358	ArrayIndexing	fg -> inputs [ fg -> nb_inputs - 1 ]		4906946	0					
ANR	4907359	PtrMemberAccess	fg -> inputs		4906946	0					
ANR	4907360	Identifier	fg		4906946	0					
ANR	4907361	Identifier	inputs		4906946	1					
ANR	4907362	AdditiveExpression	fg -> nb_inputs - 1		4906946	1		-			
ANR	4907363	PtrMemberAccess	fg -> nb_inputs		4906946	0					
ANR	4907364	Identifier	fg		4906946	0					
ANR	4907365	Identifier	nb_inputs		4906946	1					
ANR	4907366	PrimaryExpression	1		4906946	1					
ANR	4907367	Identifier	ist		4906946	1					
ANR	4907368	Identifier	ist		4906946	1					
ANR	4907369	ExpressionStatement	fg -> inputs [ fg -> nb_inputs - 1 ] -> graph = fg	127:4:2443:2484	4906946	11	True				
ANR	4907370	AssignmentExpression	fg -> inputs [ fg -> nb_inputs - 1 ] -> graph = fg		4906946	0		=			
ANR	4907371	PtrMemberAccess	fg -> inputs [ fg -> nb_inputs - 1 ] -> graph		4906946	0					
ANR	4907372	ArrayIndexing	fg -> inputs [ fg -> nb_inputs - 1 ]		4906946	0					
ANR	4907373	PtrMemberAccess	fg -> inputs		4906946	0					
ANR	4907374	Identifier	fg		4906946	0					
ANR	4907375	Identifier	inputs		4906946	1					
ANR	4907376	AdditiveExpression	fg -> nb_inputs - 1		4906946	1		-			
ANR	4907377	PtrMemberAccess	fg -> nb_inputs		4906946	0					
ANR	4907378	Identifier	fg		4906946	0					
ANR	4907379	Identifier	nb_inputs		4906946	1					
ANR	4907380	PrimaryExpression	1		4906946	1					
ANR	4907381	Identifier	graph		4906946	1					
ANR	4907382	Identifier	fg		4906946	1					
ANR	4907383	ExpressionStatement	"ist -> filters = grow_array ( ist -> filters , sizeof ( * ist -> filters ) , & ist -> nb_filters , ist -> nb_filters + 1 )"	131:4:2493:2625	4906946	12	True				
ANR	4907384	AssignmentExpression	"ist -> filters = grow_array ( ist -> filters , sizeof ( * ist -> filters ) , & ist -> nb_filters , ist -> nb_filters + 1 )"		4906946	0		=			
ANR	4907385	PtrMemberAccess	ist -> filters		4906946	0					
ANR	4907386	Identifier	ist		4906946	0					
ANR	4907387	Identifier	filters		4906946	1					
ANR	4907388	CallExpression	"grow_array ( ist -> filters , sizeof ( * ist -> filters ) , & ist -> nb_filters , ist -> nb_filters + 1 )"		4906946	1					
ANR	4907389	Callee	grow_array		4906946	0					
ANR	4907390	Identifier	grow_array		4906946	0					
ANR	4907391	ArgumentList	ist -> filters		4906946	1					
ANR	4907392	Argument	ist -> filters		4906946	0					
ANR	4907393	PtrMemberAccess	ist -> filters		4906946	0					
ANR	4907394	Identifier	ist		4906946	0					
ANR	4907395	Identifier	filters		4906946	1					
ANR	4907396	Argument	sizeof ( * ist -> filters )		4906946	1					
ANR	4907397	SizeofExpression	sizeof ( * ist -> filters )		4906946	0					
ANR	4907398	Sizeof	sizeof		4906946	0					
ANR	4907399	UnaryOperationExpression	* ist -> filters		4906946	1					
ANR	4907400	UnaryOperator	*		4906946	0					
ANR	4907401	PtrMemberAccess	ist -> filters		4906946	1					
ANR	4907402	Identifier	ist		4906946	0					
ANR	4907403	Identifier	filters		4906946	1					
ANR	4907404	Argument	& ist -> nb_filters		4906946	2					
ANR	4907405	UnaryOperationExpression	& ist -> nb_filters		4906946	0					
ANR	4907406	UnaryOperator	&		4906946	0					
ANR	4907407	PtrMemberAccess	ist -> nb_filters		4906946	1					
ANR	4907408	Identifier	ist		4906946	0					
ANR	4907409	Identifier	nb_filters		4906946	1					
ANR	4907410	Argument	ist -> nb_filters + 1		4906946	3					
ANR	4907411	AdditiveExpression	ist -> nb_filters + 1		4906946	0		+			
ANR	4907412	PtrMemberAccess	ist -> nb_filters		4906946	0					
ANR	4907413	Identifier	ist		4906946	0					
ANR	4907414	Identifier	nb_filters		4906946	1					
ANR	4907415	PrimaryExpression	1		4906946	1					
ANR	4907416	ExpressionStatement	ist -> filters [ ist -> nb_filters - 1 ] = fg -> inputs [ fg -> nb_inputs - 1 ]	135:4:2632:2697	4906946	13	True				
ANR	4907417	AssignmentExpression	ist -> filters [ ist -> nb_filters - 1 ] = fg -> inputs [ fg -> nb_inputs - 1 ]		4906946	0		=			
ANR	4907418	ArrayIndexing	ist -> filters [ ist -> nb_filters - 1 ]		4906946	0					
ANR	4907419	PtrMemberAccess	ist -> filters		4906946	0					
ANR	4907420	Identifier	ist		4906946	0					
ANR	4907421	Identifier	filters		4906946	1					
ANR	4907422	AdditiveExpression	ist -> nb_filters - 1		4906946	1		-			
ANR	4907423	PtrMemberAccess	ist -> nb_filters		4906946	0					
ANR	4907424	Identifier	ist		4906946	0					
ANR	4907425	Identifier	nb_filters		4906946	1					
ANR	4907426	PrimaryExpression	1		4906946	1					
ANR	4907427	ArrayIndexing	fg -> inputs [ fg -> nb_inputs - 1 ]		4906946	1					
ANR	4907428	PtrMemberAccess	fg -> inputs		4906946	0					
ANR	4907429	Identifier	fg		4906946	0					
ANR	4907430	Identifier	inputs		4906946	1					
ANR	4907431	AdditiveExpression	fg -> nb_inputs - 1		4906946	1		-			
ANR	4907432	PtrMemberAccess	fg -> nb_inputs		4906946	0					
ANR	4907433	Identifier	fg		4906946	0					
ANR	4907434	Identifier	nb_inputs		4906946	1					
ANR	4907435	PrimaryExpression	1		4906946	1					
ANR	4907436	ReturnType	static void		4906946	1					
ANR	4907437	Identifier	init_input_filter		4906946	2					
ANR	4907438	ParameterList	"FilterGraph * fg , AVFilterInOut * in"		4906946	3					
ANR	4907439	Parameter	FilterGraph * fg	1:30:30:44	4906946	0	True				
ANR	4907440	ParameterType	FilterGraph *		4906946	0					
ANR	4907441	Identifier	fg		4906946	1					
ANR	4907442	Parameter	AVFilterInOut * in	1:47:47:63	4906946	1	True				
ANR	4907443	ParameterType	AVFilterInOut *		4906946	0					
ANR	4907444	Identifier	in		4906946	1					
ANR	4907445	CFGEntryNode	ENTRY		4906946		True				
ANR	4907446	CFGExitNode	EXIT		4906946		True				
ANR	4907447	Symbol	AVMEDIA_TYPE_AUDIO		4906946						
ANR	4907448	Symbol	* * * * s		4906946						
ANR	4907449	Symbol	* st		4906946						
ANR	4907450	Symbol	avfilter_pad_get_type		4906946						
ANR	4907451	Symbol	ist -> st -> discard		4906946						
ANR	4907452	Symbol	s -> streams		4906946						
ANR	4907453	Symbol	* * * ist		4906946						
ANR	4907454	Symbol	* * ist -> st		4906946						
ANR	4907455	Symbol	ist		4906946						
ANR	4907456	Symbol	type		4906946						
ANR	4907457	Symbol	AVMEDIA_TYPE_VIDEO		4906946						
ANR	4907458	Symbol	AV_LOG_FATAL		4906946						
ANR	4907459	Symbol	* * in		4906946						
ANR	4907460	Symbol	in -> filter_ctx		4906946						
ANR	4907461	Symbol	* s -> streams		4906946						
ANR	4907462	Symbol	* * * input_files		4906946						
ANR	4907463	Symbol	* input_files [ file_idx ] -> ist_index		4906946						
ANR	4907464	Symbol	input_files [ file_idx ] -> ist_index		4906946						
ANR	4907465	Symbol	nb_input_streams		4906946						
ANR	4907466	Symbol	* * fg -> nb_inputs		4906946						
ANR	4907467	Symbol	* * i		4906946						
ANR	4907468	Symbol	NULL		4906946						
ANR	4907469	Symbol	* s -> streams [ i ] -> codec		4906946						
ANR	4907470	Symbol	in		4906946						
ANR	4907471	Symbol	fg -> graph_desc		4906946						
ANR	4907472	Symbol	fg -> inputs [ fg -> nb_inputs - 1 ] -> graph		4906946						
ANR	4907473	Symbol	ist -> st		4906946						
ANR	4907474	Symbol	av_mallocz		4906946						
ANR	4907475	Symbol	ist -> discard		4906946						
ANR	4907476	Symbol	* * * s		4906946						
ANR	4907477	Symbol	* * fg		4906946						
ANR	4907478	Symbol	s -> streams [ i ] -> codec -> codec_type		4906946						
ANR	4907479	Symbol	input_files		4906946						
ANR	4907480	Symbol	* * input_files		4906946						
ANR	4907481	Symbol	* * * i		4906946						
ANR	4907482	Symbol	* in -> filter_ctx		4906946						
ANR	4907483	Symbol	* ist -> nb_filters		4906946						
ANR	4907484	Symbol	* st -> index		4906946						
ANR	4907485	Symbol	fg		4906946						
ANR	4907486	Symbol	* * s -> streams		4906946						
ANR	4907487	Symbol	in -> pad_idx		4906946						
ANR	4907488	Symbol	AVDISCARD_NONE		4906946						
ANR	4907489	Symbol	ist -> decoding_needed		4906946						
ANR	4907490	Symbol	* fg -> nb_inputs		4906946						
ANR	4907491	Symbol	* in		4906946						
ANR	4907492	Symbol	* fg -> inputs		4906946						
ANR	4907493	Symbol	* ist		4906946						
ANR	4907494	Symbol	& ist -> nb_filters		4906946						
ANR	4907495	Symbol	input_files [ file_idx ] -> ctx		4906946						
ANR	4907496	Symbol	* * st		4906946						
ANR	4907497	Symbol	* ist -> st		4906946						
ANR	4907498	Symbol	strtol		4906946						
ANR	4907499	Symbol	s -> streams [ i ] -> codec		4906946						
ANR	4907500	Symbol	file_idx		4906946						
ANR	4907501	Symbol	* * * s -> streams		4906946						
ANR	4907502	Symbol	* * s		4906946						
ANR	4907503	Symbol	* input_streams		4906946						
ANR	4907504	Symbol	fg -> inputs		4906946						
ANR	4907505	Symbol	s -> nb_streams		4906946						
ANR	4907506	Symbol	ist -> st -> codec -> codec_type		4906946						
ANR	4907507	Symbol	* * * fg		4906946						
ANR	4907508	Symbol	* * * file_idx		4906946						
ANR	4907509	Symbol	in -> filter_ctx -> input_pads		4906946						
ANR	4907510	Symbol	* * ist		4906946						
ANR	4907511	Symbol	st		4906946						
ANR	4907512	Symbol	nb_input_files		4906946						
ANR	4907513	Symbol	* fg		4906946						
ANR	4907514	Symbol	check_stream_specifier		4906946						
ANR	4907515	Symbol	* * file_idx		4906946						
ANR	4907516	Symbol	* * fg -> inputs		4906946						
ANR	4907517	Symbol	input_streams		4906946						
ANR	4907518	Symbol	i		4906946						
ANR	4907519	Symbol	* input_files		4906946						
ANR	4907520	Symbol	fg -> nb_inputs		4906946						
ANR	4907521	Symbol	& fg -> nb_inputs		4906946						
ANR	4907522	Symbol	ist -> st -> codec		4906946						
ANR	4907523	Symbol	* ist -> filters		4906946						
ANR	4907524	Symbol	p		4906946						
ANR	4907525	Symbol	s		4906946						
ANR	4907526	Symbol	* i		4906946						
ANR	4907527	Symbol	* fg -> inputs [ 0 ]		4906946						
ANR	4907528	Symbol	& p		4906946						
ANR	4907529	Symbol	ist -> nb_filters		4906946						
ANR	4907530	Symbol	in -> name		4906946						
ANR	4907531	Symbol	* file_idx		4906946						
ANR	4907532	Symbol	* ist -> st -> codec		4906946						
ANR	4907533	Symbol	ist -> filters		4906946						
ANR	4907534	Symbol	* p		4906946						
ANR	4907535	Symbol	grow_array		4906946						
ANR	4907536	Symbol	st -> index		4906946						
ANR	4907537	Symbol	* s		4906946						
ANR	4907538	Symbol	fg -> inputs [ fg -> nb_inputs - 1 ] -> ist		4906946						
