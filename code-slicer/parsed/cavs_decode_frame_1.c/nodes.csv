command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1212199	File	/home/p4ultr4n/workplace/ReVeal/raw_code/cavs_decode_frame_1.c								
ANR	1212200	Function	cavs_decode_frame	1:0:0:2532							
ANR	1212201	FunctionDef	"cavs_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		1212200	0					
ANR	1212202	CompoundStatement		3:46:127:2532	1212200	0					
ANR	1212203	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	5:4:134:166	1212200	0	True				
ANR	1212204	IdentifierDecl	* buf = avpkt -> data		1212200	0					
ANR	1212205	IdentifierDeclType	const uint8_t *		1212200	0					
ANR	1212206	Identifier	buf		1212200	1					
ANR	1212207	AssignmentExpression	* buf = avpkt -> data		1212200	2		=			
ANR	1212208	Identifier	buf		1212200	0					
ANR	1212209	PtrMemberAccess	avpkt -> data		1212200	1					
ANR	1212210	Identifier	avpkt		1212200	0					
ANR	1212211	Identifier	data		1212200	1					
ANR	1212212	IdentifierDeclStatement	int buf_size = avpkt -> size ;	7:4:173:199	1212200	1	True				
ANR	1212213	IdentifierDecl	buf_size = avpkt -> size		1212200	0					
ANR	1212214	IdentifierDeclType	int		1212200	0					
ANR	1212215	Identifier	buf_size		1212200	1					
ANR	1212216	AssignmentExpression	buf_size = avpkt -> size		1212200	2		=			
ANR	1212217	Identifier	buf_size		1212200	0					
ANR	1212218	PtrMemberAccess	avpkt -> size		1212200	1					
ANR	1212219	Identifier	avpkt		1212200	0					
ANR	1212220	Identifier	size		1212200	1					
ANR	1212221	IdentifierDeclStatement	AVSContext * h = avctx -> priv_data ;	9:4:206:238	1212200	2	True				
ANR	1212222	IdentifierDecl	* h = avctx -> priv_data		1212200	0					
ANR	1212223	IdentifierDeclType	AVSContext *		1212200	0					
ANR	1212224	Identifier	h		1212200	1					
ANR	1212225	AssignmentExpression	* h = avctx -> priv_data		1212200	2		=			
ANR	1212226	Identifier	h		1212200	0					
ANR	1212227	PtrMemberAccess	avctx -> priv_data		1212200	1					
ANR	1212228	Identifier	avctx		1212200	0					
ANR	1212229	Identifier	priv_data		1212200	1					
ANR	1212230	IdentifierDeclStatement	MpegEncContext * s = & h -> s ;	11:4:245:270	1212200	3	True				
ANR	1212231	IdentifierDecl	* s = & h -> s		1212200	0					
ANR	1212232	IdentifierDeclType	MpegEncContext *		1212200	0					
ANR	1212233	Identifier	s		1212200	1					
ANR	1212234	AssignmentExpression	* s = & h -> s		1212200	2		=			
ANR	1212235	Identifier	s		1212200	0					
ANR	1212236	UnaryOperationExpression	& h -> s		1212200	1					
ANR	1212237	UnaryOperator	&		1212200	0					
ANR	1212238	PtrMemberAccess	h -> s		1212200	1					
ANR	1212239	Identifier	h		1212200	0					
ANR	1212240	Identifier	s		1212200	1					
ANR	1212241	IdentifierDeclStatement	int input_size ;	13:4:277:291	1212200	4	True				
ANR	1212242	IdentifierDecl	input_size		1212200	0					
ANR	1212243	IdentifierDeclType	int		1212200	0					
ANR	1212244	Identifier	input_size		1212200	1					
ANR	1212245	IdentifierDeclStatement	const uint8_t * buf_end ;	15:4:298:320	1212200	5	True				
ANR	1212246	IdentifierDecl	* buf_end		1212200	0					
ANR	1212247	IdentifierDeclType	const uint8_t *		1212200	0					
ANR	1212248	Identifier	buf_end		1212200	1					
ANR	1212249	IdentifierDeclStatement	const uint8_t * buf_ptr ;	17:4:327:349	1212200	6	True				
ANR	1212250	IdentifierDecl	* buf_ptr		1212200	0					
ANR	1212251	IdentifierDeclType	const uint8_t *		1212200	0					
ANR	1212252	Identifier	buf_ptr		1212200	1					
ANR	1212253	IdentifierDeclStatement	AVFrame * picture = data ;	19:4:356:379	1212200	7	True				
ANR	1212254	IdentifierDecl	* picture = data		1212200	0					
ANR	1212255	IdentifierDeclType	AVFrame *		1212200	0					
ANR	1212256	Identifier	picture		1212200	1					
ANR	1212257	AssignmentExpression	* picture = data		1212200	2		=			
ANR	1212258	Identifier	data		1212200	0					
ANR	1212259	Identifier	data		1212200	1					
ANR	1212260	IdentifierDeclStatement	uint32_t stc = - 1 ;	21:4:386:403	1212200	8	True				
ANR	1212261	IdentifierDecl	stc = - 1		1212200	0					
ANR	1212262	IdentifierDeclType	uint32_t		1212200	0					
ANR	1212263	Identifier	stc		1212200	1					
ANR	1212264	AssignmentExpression	stc = - 1		1212200	2		=			
ANR	1212265	Identifier	stc		1212200	0					
ANR	1212266	UnaryOperationExpression	- 1		1212200	1					
ANR	1212267	UnaryOperator	-		1212200	0					
ANR	1212268	PrimaryExpression	1		1212200	1					
ANR	1212269	ExpressionStatement	s -> avctx = avctx	25:4:412:428	1212200	9	True				
ANR	1212270	AssignmentExpression	s -> avctx = avctx		1212200	0		=			
ANR	1212271	PtrMemberAccess	s -> avctx		1212200	0					
ANR	1212272	Identifier	s		1212200	0					
ANR	1212273	Identifier	avctx		1212200	1					
ANR	1212274	Identifier	avctx		1212200	1					
ANR	1212275	IfStatement	if ( buf_size == 0 )		1212200	10					
ANR	1212276	Condition	buf_size == 0	29:8:441:453	1212200	0	True				
ANR	1212277	EqualityExpression	buf_size == 0		1212200	0		==			
ANR	1212278	Identifier	buf_size		1212200	0					
ANR	1212279	PrimaryExpression	0		1212200	1					
ANR	1212280	CompoundStatement		27:23:328:328	1212200	1					
ANR	1212281	IfStatement	if ( ! s -> low_delay && h -> DPB [ 0 ] . f . data [ 0 ] )		1212200	0					
ANR	1212282	Condition	! s -> low_delay && h -> DPB [ 0 ] . f . data [ 0 ]	31:12:471:506	1212200	0	True				
ANR	1212283	AndExpression	! s -> low_delay && h -> DPB [ 0 ] . f . data [ 0 ]		1212200	0		&&			
ANR	1212284	UnaryOperationExpression	! s -> low_delay		1212200	0					
ANR	1212285	UnaryOperator	!		1212200	0					
ANR	1212286	PtrMemberAccess	s -> low_delay		1212200	1					
ANR	1212287	Identifier	s		1212200	0					
ANR	1212288	Identifier	low_delay		1212200	1					
ANR	1212289	ArrayIndexing	h -> DPB [ 0 ] . f . data [ 0 ]		1212200	1					
ANR	1212290	MemberAccess	h -> DPB [ 0 ] . f . data		1212200	0					
ANR	1212291	MemberAccess	h -> DPB [ 0 ] . f		1212200	0					
ANR	1212292	ArrayIndexing	h -> DPB [ 0 ]		1212200	0					
ANR	1212293	PtrMemberAccess	h -> DPB		1212200	0					
ANR	1212294	Identifier	h		1212200	0					
ANR	1212295	Identifier	DPB		1212200	1					
ANR	1212296	PrimaryExpression	0		1212200	1					
ANR	1212297	Identifier	f		1212200	1					
ANR	1212298	Identifier	data		1212200	1					
ANR	1212299	PrimaryExpression	0		1212200	1					
ANR	1212300	CompoundStatement		29:50:381:381	1212200	1					
ANR	1212301	ExpressionStatement	* data_size = sizeof ( AVPicture )	33:12:524:554	1212200	0	True				
ANR	1212302	AssignmentExpression	* data_size = sizeof ( AVPicture )		1212200	0		=			
ANR	1212303	UnaryOperationExpression	* data_size		1212200	0					
ANR	1212304	UnaryOperator	*		1212200	0					
ANR	1212305	Identifier	data_size		1212200	1					
ANR	1212306	SizeofExpression	sizeof ( AVPicture )		1212200	1					
ANR	1212307	Sizeof	sizeof		1212200	0					
ANR	1212308	SizeofOperand	AVPicture		1212200	1					
ANR	1212309	ExpressionStatement	* picture = * ( AVFrame * ) & h -> DPB [ 0 ]	35:12:569:603	1212200	1	True				
ANR	1212310	AssignmentExpression	* picture = * ( AVFrame * ) & h -> DPB [ 0 ]		1212200	0		=			
ANR	1212311	UnaryOperationExpression	* picture		1212200	0					
ANR	1212312	UnaryOperator	*		1212200	0					
ANR	1212313	Identifier	picture		1212200	1					
ANR	1212314	UnaryOperationExpression	* ( AVFrame * ) & h -> DPB [ 0 ]		1212200	1					
ANR	1212315	UnaryOperator	*		1212200	0					
ANR	1212316	CastExpression	( AVFrame * ) & h -> DPB [ 0 ]		1212200	1					
ANR	1212317	CastTarget	AVFrame *		1212200	0					
ANR	1212318	UnaryOperationExpression	& h -> DPB [ 0 ]		1212200	1					
ANR	1212319	UnaryOperator	&		1212200	0					
ANR	1212320	ArrayIndexing	h -> DPB [ 0 ]		1212200	1					
ANR	1212321	PtrMemberAccess	h -> DPB		1212200	0					
ANR	1212322	Identifier	h		1212200	0					
ANR	1212323	Identifier	DPB		1212200	1					
ANR	1212324	PrimaryExpression	0		1212200	1					
ANR	1212325	ReturnStatement	return 0 ;	39:8:625:633	1212200	1	True				
ANR	1212326	PrimaryExpression	0		1212200	0					
ANR	1212327	ExpressionStatement	buf_ptr = buf	45:4:649:662	1212200	11	True				
ANR	1212328	AssignmentExpression	buf_ptr = buf		1212200	0		=			
ANR	1212329	Identifier	buf_ptr		1212200	0					
ANR	1212330	Identifier	buf		1212200	1					
ANR	1212331	ExpressionStatement	buf_end = buf + buf_size	47:4:669:693	1212200	12	True				
ANR	1212332	AssignmentExpression	buf_end = buf + buf_size		1212200	0		=			
ANR	1212333	Identifier	buf_end		1212200	0					
ANR	1212334	AdditiveExpression	buf + buf_size		1212200	1		+			
ANR	1212335	Identifier	buf		1212200	0					
ANR	1212336	Identifier	buf_size		1212200	1					
ANR	1212337	ForStatement	for ( ; ; )		1212200	13					
ANR	1212338	CompoundStatement		47:12:580:580	1212200	0					
ANR	1212339	ExpressionStatement	"buf_ptr = ff_find_start_code ( buf_ptr , buf_end , & stc )"	51:8:719:770	1212200	0	True				
ANR	1212340	AssignmentExpression	"buf_ptr = ff_find_start_code ( buf_ptr , buf_end , & stc )"		1212200	0		=			
ANR	1212341	Identifier	buf_ptr		1212200	0					
ANR	1212342	CallExpression	"ff_find_start_code ( buf_ptr , buf_end , & stc )"		1212200	1					
ANR	1212343	Callee	ff_find_start_code		1212200	0					
ANR	1212344	Identifier	ff_find_start_code		1212200	0					
ANR	1212345	ArgumentList	buf_ptr		1212200	1					
ANR	1212346	Argument	buf_ptr		1212200	0					
ANR	1212347	Identifier	buf_ptr		1212200	0					
ANR	1212348	Argument	buf_end		1212200	1					
ANR	1212349	Identifier	buf_end		1212200	0					
ANR	1212350	Argument	& stc		1212200	2					
ANR	1212351	UnaryOperationExpression	& stc		1212200	0					
ANR	1212352	UnaryOperator	&		1212200	0					
ANR	1212353	Identifier	stc		1212200	1					
ANR	1212354	IfStatement	if ( stc & 0xFFFFFE00 )		1212200	1					
ANR	1212355	Condition	stc & 0xFFFFFE00	53:11:784:799	1212200	0	True				
ANR	1212356	BitAndExpression	stc & 0xFFFFFE00		1212200	0		&			
ANR	1212357	Identifier	stc		1212200	0					
ANR	1212358	PrimaryExpression	0xFFFFFE00		1212200	1					
ANR	1212359	ReturnStatement	"return FFMAX ( 0 , buf_ptr - buf - s -> parse_context . last_index ) ;"	55:12:815:875	1212200	1	True				
ANR	1212360	CallExpression	"FFMAX ( 0 , buf_ptr - buf - s -> parse_context . last_index )"		1212200	0					
ANR	1212361	Callee	FFMAX		1212200	0					
ANR	1212362	Identifier	FFMAX		1212200	0					
ANR	1212363	ArgumentList	0		1212200	1					
ANR	1212364	Argument	0		1212200	0					
ANR	1212365	PrimaryExpression	0		1212200	0					
ANR	1212366	Argument	buf_ptr - buf - s -> parse_context . last_index		1212200	1					
ANR	1212367	AdditiveExpression	buf_ptr - buf - s -> parse_context . last_index		1212200	0		-			
ANR	1212368	Identifier	buf_ptr		1212200	0					
ANR	1212369	AdditiveExpression	buf - s -> parse_context . last_index		1212200	1		-			
ANR	1212370	Identifier	buf		1212200	0					
ANR	1212371	MemberAccess	s -> parse_context . last_index		1212200	1					
ANR	1212372	PtrMemberAccess	s -> parse_context		1212200	0					
ANR	1212373	Identifier	s		1212200	0					
ANR	1212374	Identifier	parse_context		1212200	1					
ANR	1212375	Identifier	last_index		1212200	1					
ANR	1212376	ExpressionStatement	input_size = ( buf_end - buf_ptr ) * 8	57:8:886:920	1212200	2	True				
ANR	1212377	AssignmentExpression	input_size = ( buf_end - buf_ptr ) * 8		1212200	0		=			
ANR	1212378	Identifier	input_size		1212200	0					
ANR	1212379	MultiplicativeExpression	( buf_end - buf_ptr ) * 8		1212200	1		*			
ANR	1212380	AdditiveExpression	buf_end - buf_ptr		1212200	0		-			
ANR	1212381	Identifier	buf_end		1212200	0					
ANR	1212382	Identifier	buf_ptr		1212200	1					
ANR	1212383	PrimaryExpression	8		1212200	1					
ANR	1212384	SwitchStatement	switch ( stc )		1212200	3					
ANR	1212385	Condition	stc	59:15:938:940	1212200	0	True				
ANR	1212386	Identifier	stc		1212200	0					
ANR	1212387	CompoundStatement		57:20:815:815	1212200	1					
ANR	1212388	Label	case CAVS_START_CODE :	61:8:954:974	1212200	0	True				
ANR	1212389	Identifier	CAVS_START_CODE		1212200	0					
ANR	1212390	ExpressionStatement	"init_get_bits ( & s -> gb , buf_ptr , input_size )"	63:12:989:1031	1212200	1	True				
ANR	1212391	CallExpression	"init_get_bits ( & s -> gb , buf_ptr , input_size )"		1212200	0					
ANR	1212392	Callee	init_get_bits		1212200	0					
ANR	1212393	Identifier	init_get_bits		1212200	0					
ANR	1212394	ArgumentList	& s -> gb		1212200	1					
ANR	1212395	Argument	& s -> gb		1212200	0					
ANR	1212396	UnaryOperationExpression	& s -> gb		1212200	0					
ANR	1212397	UnaryOperator	&		1212200	0					
ANR	1212398	PtrMemberAccess	s -> gb		1212200	1					
ANR	1212399	Identifier	s		1212200	0					
ANR	1212400	Identifier	gb		1212200	1					
ANR	1212401	Argument	buf_ptr		1212200	1					
ANR	1212402	Identifier	buf_ptr		1212200	0					
ANR	1212403	Argument	input_size		1212200	2					
ANR	1212404	Identifier	input_size		1212200	0					
ANR	1212405	ExpressionStatement	decode_seq_header ( h )	65:12:1046:1066	1212200	2	True				
ANR	1212406	CallExpression	decode_seq_header ( h )		1212200	0					
ANR	1212407	Callee	decode_seq_header		1212200	0					
ANR	1212408	Identifier	decode_seq_header		1212200	0					
ANR	1212409	ArgumentList	h		1212200	1					
ANR	1212410	Argument	h		1212200	0					
ANR	1212411	Identifier	h		1212200	0					
ANR	1212412	BreakStatement	break ;	67:12:1081:1086	1212200	3	True				
ANR	1212413	Label	case PIC_I_START_CODE :	69:8:1097:1118	1212200	4	True				
ANR	1212414	Identifier	PIC_I_START_CODE		1212200	0					
ANR	1212415	IfStatement	if ( ! h -> got_keyframe )		1212200	5					
ANR	1212416	Condition	! h -> got_keyframe	71:15:1136:1151	1212200	0	True				
ANR	1212417	UnaryOperationExpression	! h -> got_keyframe		1212200	0					
ANR	1212418	UnaryOperator	!		1212200	0					
ANR	1212419	PtrMemberAccess	h -> got_keyframe		1212200	1					
ANR	1212420	Identifier	h		1212200	0					
ANR	1212421	Identifier	got_keyframe		1212200	1					
ANR	1212422	CompoundStatement		69:33:1026:1026	1212200	1					
ANR	1212423	IfStatement	if ( h -> DPB [ 0 ] . f . data [ 0 ] )		1212200	0					
ANR	1212424	Condition	h -> DPB [ 0 ] . f . data [ 0 ]	73:19:1176:1194	1212200	0	True				
ANR	1212425	ArrayIndexing	h -> DPB [ 0 ] . f . data [ 0 ]		1212200	0					
ANR	1212426	MemberAccess	h -> DPB [ 0 ] . f . data		1212200	0					
ANR	1212427	MemberAccess	h -> DPB [ 0 ] . f		1212200	0					
ANR	1212428	ArrayIndexing	h -> DPB [ 0 ]		1212200	0					
ANR	1212429	PtrMemberAccess	h -> DPB		1212200	0					
ANR	1212430	Identifier	h		1212200	0					
ANR	1212431	Identifier	DPB		1212200	1					
ANR	1212432	PrimaryExpression	0		1212200	1					
ANR	1212433	Identifier	f		1212200	1					
ANR	1212434	Identifier	data		1212200	1					
ANR	1212435	PrimaryExpression	0		1212200	1					
ANR	1212436	ExpressionStatement	"avctx -> release_buffer ( avctx , ( AVFrame * ) & h -> DPB [ 0 ] )"	75:20:1218:1269	1212200	1	True				
ANR	1212437	CallExpression	"avctx -> release_buffer ( avctx , ( AVFrame * ) & h -> DPB [ 0 ] )"		1212200	0					
ANR	1212438	Callee	avctx -> release_buffer		1212200	0					
ANR	1212439	PtrMemberAccess	avctx -> release_buffer		1212200	0					
ANR	1212440	Identifier	avctx		1212200	0					
ANR	1212441	Identifier	release_buffer		1212200	1					
ANR	1212442	ArgumentList	avctx		1212200	1					
ANR	1212443	Argument	avctx		1212200	0					
ANR	1212444	Identifier	avctx		1212200	0					
ANR	1212445	Argument	( AVFrame * ) & h -> DPB [ 0 ]		1212200	1					
ANR	1212446	CastExpression	( AVFrame * ) & h -> DPB [ 0 ]		1212200	0					
ANR	1212447	CastTarget	AVFrame *		1212200	0					
ANR	1212448	UnaryOperationExpression	& h -> DPB [ 0 ]		1212200	1					
ANR	1212449	UnaryOperator	&		1212200	0					
ANR	1212450	ArrayIndexing	h -> DPB [ 0 ]		1212200	1					
ANR	1212451	PtrMemberAccess	h -> DPB		1212200	0					
ANR	1212452	Identifier	h		1212200	0					
ANR	1212453	Identifier	DPB		1212200	1					
ANR	1212454	PrimaryExpression	0		1212200	1					
ANR	1212455	IfStatement	if ( h -> DPB [ 1 ] . f . data [ 0 ] )		1212200	1					
ANR	1212456	Condition	h -> DPB [ 1 ] . f . data [ 0 ]	77:19:1291:1309	1212200	0	True				
ANR	1212457	ArrayIndexing	h -> DPB [ 1 ] . f . data [ 0 ]		1212200	0					
ANR	1212458	MemberAccess	h -> DPB [ 1 ] . f . data		1212200	0					
ANR	1212459	MemberAccess	h -> DPB [ 1 ] . f		1212200	0					
ANR	1212460	ArrayIndexing	h -> DPB [ 1 ]		1212200	0					
ANR	1212461	PtrMemberAccess	h -> DPB		1212200	0					
ANR	1212462	Identifier	h		1212200	0					
ANR	1212463	Identifier	DPB		1212200	1					
ANR	1212464	PrimaryExpression	1		1212200	1					
ANR	1212465	Identifier	f		1212200	1					
ANR	1212466	Identifier	data		1212200	1					
ANR	1212467	PrimaryExpression	0		1212200	1					
ANR	1212468	ExpressionStatement	"avctx -> release_buffer ( avctx , ( AVFrame * ) & h -> DPB [ 1 ] )"	79:20:1333:1384	1212200	1	True				
ANR	1212469	CallExpression	"avctx -> release_buffer ( avctx , ( AVFrame * ) & h -> DPB [ 1 ] )"		1212200	0					
ANR	1212470	Callee	avctx -> release_buffer		1212200	0					
ANR	1212471	PtrMemberAccess	avctx -> release_buffer		1212200	0					
ANR	1212472	Identifier	avctx		1212200	0					
ANR	1212473	Identifier	release_buffer		1212200	1					
ANR	1212474	ArgumentList	avctx		1212200	1					
ANR	1212475	Argument	avctx		1212200	0					
ANR	1212476	Identifier	avctx		1212200	0					
ANR	1212477	Argument	( AVFrame * ) & h -> DPB [ 1 ]		1212200	1					
ANR	1212478	CastExpression	( AVFrame * ) & h -> DPB [ 1 ]		1212200	0					
ANR	1212479	CastTarget	AVFrame *		1212200	0					
ANR	1212480	UnaryOperationExpression	& h -> DPB [ 1 ]		1212200	1					
ANR	1212481	UnaryOperator	&		1212200	0					
ANR	1212482	ArrayIndexing	h -> DPB [ 1 ]		1212200	1					
ANR	1212483	PtrMemberAccess	h -> DPB		1212200	0					
ANR	1212484	Identifier	h		1212200	0					
ANR	1212485	Identifier	DPB		1212200	1					
ANR	1212486	PrimaryExpression	1		1212200	1					
ANR	1212487	ExpressionStatement	h -> got_keyframe = 1	81:16:1403:1422	1212200	2	True				
ANR	1212488	AssignmentExpression	h -> got_keyframe = 1		1212200	0		=			
ANR	1212489	PtrMemberAccess	h -> got_keyframe		1212200	0					
ANR	1212490	Identifier	h		1212200	0					
ANR	1212491	Identifier	got_keyframe		1212200	1					
ANR	1212492	PrimaryExpression	1		1212200	1					
ANR	1212493	Label	case PIC_PB_START_CODE :	85:8:1448:1470	1212200	6	True				
ANR	1212494	Identifier	PIC_PB_START_CODE		1212200	0					
ANR	1212495	ExpressionStatement	* data_size = 0	87:12:1485:1499	1212200	7	True				
ANR	1212496	AssignmentExpression	* data_size = 0		1212200	0		=			
ANR	1212497	UnaryOperationExpression	* data_size		1212200	0					
ANR	1212498	UnaryOperator	*		1212200	0					
ANR	1212499	Identifier	data_size		1212200	1					
ANR	1212500	PrimaryExpression	0		1212200	1					
ANR	1212501	IfStatement	if ( ! h -> got_keyframe )		1212200	8					
ANR	1212502	Condition	! h -> got_keyframe	89:15:1517:1532	1212200	0	True				
ANR	1212503	UnaryOperationExpression	! h -> got_keyframe		1212200	0					
ANR	1212504	UnaryOperator	!		1212200	0					
ANR	1212505	PtrMemberAccess	h -> got_keyframe		1212200	1					
ANR	1212506	Identifier	h		1212200	0					
ANR	1212507	Identifier	got_keyframe		1212200	1					
ANR	1212508	BreakStatement	break ;	91:16:1552:1557	1212200	1	True				
ANR	1212509	ExpressionStatement	"init_get_bits ( & s -> gb , buf_ptr , input_size )"	93:12:1572:1614	1212200	9	True				
ANR	1212510	CallExpression	"init_get_bits ( & s -> gb , buf_ptr , input_size )"		1212200	0					
ANR	1212511	Callee	init_get_bits		1212200	0					
ANR	1212512	Identifier	init_get_bits		1212200	0					
ANR	1212513	ArgumentList	& s -> gb		1212200	1					
ANR	1212514	Argument	& s -> gb		1212200	0					
ANR	1212515	UnaryOperationExpression	& s -> gb		1212200	0					
ANR	1212516	UnaryOperator	&		1212200	0					
ANR	1212517	PtrMemberAccess	s -> gb		1212200	1					
ANR	1212518	Identifier	s		1212200	0					
ANR	1212519	Identifier	gb		1212200	1					
ANR	1212520	Argument	buf_ptr		1212200	1					
ANR	1212521	Identifier	buf_ptr		1212200	0					
ANR	1212522	Argument	input_size		1212200	2					
ANR	1212523	Identifier	input_size		1212200	0					
ANR	1212524	ExpressionStatement	h -> stc = stc	95:12:1629:1641	1212200	10	True				
ANR	1212525	AssignmentExpression	h -> stc = stc		1212200	0		=			
ANR	1212526	PtrMemberAccess	h -> stc		1212200	0					
ANR	1212527	Identifier	h		1212200	0					
ANR	1212528	Identifier	stc		1212200	1					
ANR	1212529	Identifier	stc		1212200	1					
ANR	1212530	IfStatement	if ( decode_pic ( h ) )		1212200	11					
ANR	1212531	Condition	decode_pic ( h )	97:15:1659:1671	1212200	0	True				
ANR	1212532	CallExpression	decode_pic ( h )		1212200	0					
ANR	1212533	Callee	decode_pic		1212200	0					
ANR	1212534	Identifier	decode_pic		1212200	0					
ANR	1212535	ArgumentList	h		1212200	1					
ANR	1212536	Argument	h		1212200	0					
ANR	1212537	Identifier	h		1212200	0					
ANR	1212538	BreakStatement	break ;	99:16:1691:1696	1212200	1	True				
ANR	1212539	ExpressionStatement	* data_size = sizeof ( AVPicture )	101:12:1711:1741	1212200	12	True				
ANR	1212540	AssignmentExpression	* data_size = sizeof ( AVPicture )		1212200	0		=			
ANR	1212541	UnaryOperationExpression	* data_size		1212200	0					
ANR	1212542	UnaryOperator	*		1212200	0					
ANR	1212543	Identifier	data_size		1212200	1					
ANR	1212544	SizeofExpression	sizeof ( AVPicture )		1212200	1					
ANR	1212545	Sizeof	sizeof		1212200	0					
ANR	1212546	SizeofOperand	AVPicture		1212200	1					
ANR	1212547	IfStatement	if ( h -> pic_type != AV_PICTURE_TYPE_B )		1212200	13					
ANR	1212548	Condition	h -> pic_type != AV_PICTURE_TYPE_B	103:15:1759:1790	1212200	0	True				
ANR	1212549	EqualityExpression	h -> pic_type != AV_PICTURE_TYPE_B		1212200	0		!=			
ANR	1212550	PtrMemberAccess	h -> pic_type		1212200	0					
ANR	1212551	Identifier	h		1212200	0					
ANR	1212552	Identifier	pic_type		1212200	1					
ANR	1212553	Identifier	AV_PICTURE_TYPE_B		1212200	1					
ANR	1212554	CompoundStatement		101:49:1665:1665	1212200	1					
ANR	1212555	IfStatement	if ( h -> DPB [ 1 ] . f . data [ 0 ] )		1212200	0					
ANR	1212556	Condition	h -> DPB [ 1 ] . f . data [ 0 ]	105:19:1815:1833	1212200	0	True				
ANR	1212557	ArrayIndexing	h -> DPB [ 1 ] . f . data [ 0 ]		1212200	0					
ANR	1212558	MemberAccess	h -> DPB [ 1 ] . f . data		1212200	0					
ANR	1212559	MemberAccess	h -> DPB [ 1 ] . f		1212200	0					
ANR	1212560	ArrayIndexing	h -> DPB [ 1 ]		1212200	0					
ANR	1212561	PtrMemberAccess	h -> DPB		1212200	0					
ANR	1212562	Identifier	h		1212200	0					
ANR	1212563	Identifier	DPB		1212200	1					
ANR	1212564	PrimaryExpression	1		1212200	1					
ANR	1212565	Identifier	f		1212200	1					
ANR	1212566	Identifier	data		1212200	1					
ANR	1212567	PrimaryExpression	0		1212200	1					
ANR	1212568	CompoundStatement		103:40:1708:1708	1212200	1					
ANR	1212569	ExpressionStatement	* picture = * ( AVFrame * ) & h -> DPB [ 1 ]	107:20:1859:1893	1212200	0	True				
ANR	1212570	AssignmentExpression	* picture = * ( AVFrame * ) & h -> DPB [ 1 ]		1212200	0		=			
ANR	1212571	UnaryOperationExpression	* picture		1212200	0					
ANR	1212572	UnaryOperator	*		1212200	0					
ANR	1212573	Identifier	picture		1212200	1					
ANR	1212574	UnaryOperationExpression	* ( AVFrame * ) & h -> DPB [ 1 ]		1212200	1					
ANR	1212575	UnaryOperator	*		1212200	0					
ANR	1212576	CastExpression	( AVFrame * ) & h -> DPB [ 1 ]		1212200	1					
ANR	1212577	CastTarget	AVFrame *		1212200	0					
ANR	1212578	UnaryOperationExpression	& h -> DPB [ 1 ]		1212200	1					
ANR	1212579	UnaryOperator	&		1212200	0					
ANR	1212580	ArrayIndexing	h -> DPB [ 1 ]		1212200	1					
ANR	1212581	PtrMemberAccess	h -> DPB		1212200	0					
ANR	1212582	Identifier	h		1212200	0					
ANR	1212583	Identifier	DPB		1212200	1					
ANR	1212584	PrimaryExpression	1		1212200	1					
ANR	1212585	ElseStatement	else		1212200	0					
ANR	1212586	CompoundStatement		107:23:1791:1791	1212200	0					
ANR	1212587	ExpressionStatement	* data_size = 0	111:20:1942:1956	1212200	0	True				
ANR	1212588	AssignmentExpression	* data_size = 0		1212200	0		=			
ANR	1212589	UnaryOperationExpression	* data_size		1212200	0					
ANR	1212590	UnaryOperator	*		1212200	0					
ANR	1212591	Identifier	data_size		1212200	1					
ANR	1212592	PrimaryExpression	0		1212200	1					
ANR	1212593	ElseStatement	else		1212200	0					
ANR	1212594	ExpressionStatement	* picture = * ( AVFrame * ) & h -> picture	117:16:2014:2049	1212200	0	True				
ANR	1212595	AssignmentExpression	* picture = * ( AVFrame * ) & h -> picture		1212200	0		=			
ANR	1212596	UnaryOperationExpression	* picture		1212200	0					
ANR	1212597	UnaryOperator	*		1212200	0					
ANR	1212598	Identifier	picture		1212200	1					
ANR	1212599	UnaryOperationExpression	* ( AVFrame * ) & h -> picture		1212200	1					
ANR	1212600	UnaryOperator	*		1212200	0					
ANR	1212601	CastExpression	( AVFrame * ) & h -> picture		1212200	1					
ANR	1212602	CastTarget	AVFrame *		1212200	0					
ANR	1212603	UnaryOperationExpression	& h -> picture		1212200	1					
ANR	1212604	UnaryOperator	&		1212200	0					
ANR	1212605	PtrMemberAccess	h -> picture		1212200	1					
ANR	1212606	Identifier	h		1212200	0					
ANR	1212607	Identifier	picture		1212200	1					
ANR	1212608	BreakStatement	break ;	119:12:2064:2069	1212200	14	True				
ANR	1212609	Label	case EXT_START_CODE :	121:8:2080:2099	1212200	15	True				
ANR	1212610	Identifier	EXT_START_CODE		1212200	0					
ANR	1212611	BreakStatement	break ;	125:12:2179:2184	1212200	16	True				
ANR	1212612	Label	case USER_START_CODE :	127:8:2195:2215	1212200	17	True				
ANR	1212613	Identifier	USER_START_CODE		1212200	0					
ANR	1212614	BreakStatement	break ;	131:12:2295:2300	1212200	18	True				
ANR	1212615	Label	default :	133:8:2311:2318	1212200	19	True				
ANR	1212616	Identifier	default		1212200	0					
ANR	1212617	IfStatement	if ( stc <= SLICE_MAX_START_CODE )		1212200	20					
ANR	1212618	Condition	stc <= SLICE_MAX_START_CODE	135:16:2337:2363	1212200	0	True				
ANR	1212619	RelationalExpression	stc <= SLICE_MAX_START_CODE		1212200	0		<=			
ANR	1212620	Identifier	stc		1212200	0					
ANR	1212621	Identifier	SLICE_MAX_START_CODE		1212200	1					
ANR	1212622	CompoundStatement		133:45:2238:2238	1212200	1					
ANR	1212623	ExpressionStatement	"init_get_bits ( & s -> gb , buf_ptr , input_size )"	137:16:2385:2427	1212200	0	True				
ANR	1212624	CallExpression	"init_get_bits ( & s -> gb , buf_ptr , input_size )"		1212200	0					
ANR	1212625	Callee	init_get_bits		1212200	0					
ANR	1212626	Identifier	init_get_bits		1212200	0					
ANR	1212627	ArgumentList	& s -> gb		1212200	1					
ANR	1212628	Argument	& s -> gb		1212200	0					
ANR	1212629	UnaryOperationExpression	& s -> gb		1212200	0					
ANR	1212630	UnaryOperator	&		1212200	0					
ANR	1212631	PtrMemberAccess	s -> gb		1212200	1					
ANR	1212632	Identifier	s		1212200	0					
ANR	1212633	Identifier	gb		1212200	1					
ANR	1212634	Argument	buf_ptr		1212200	1					
ANR	1212635	Identifier	buf_ptr		1212200	0					
ANR	1212636	Argument	input_size		1212200	2					
ANR	1212637	Identifier	input_size		1212200	0					
ANR	1212638	ExpressionStatement	"decode_slice_header ( h , & s -> gb )"	139:16:2446:2476	1212200	1	True				
ANR	1212639	CallExpression	"decode_slice_header ( h , & s -> gb )"		1212200	0					
ANR	1212640	Callee	decode_slice_header		1212200	0					
ANR	1212641	Identifier	decode_slice_header		1212200	0					
ANR	1212642	ArgumentList	h		1212200	1					
ANR	1212643	Argument	h		1212200	0					
ANR	1212644	Identifier	h		1212200	0					
ANR	1212645	Argument	& s -> gb		1212200	1					
ANR	1212646	UnaryOperationExpression	& s -> gb		1212200	0					
ANR	1212647	UnaryOperator	&		1212200	0					
ANR	1212648	PtrMemberAccess	s -> gb		1212200	1					
ANR	1212649	Identifier	s		1212200	0					
ANR	1212650	Identifier	gb		1212200	1					
ANR	1212651	BreakStatement	break ;	143:12:2506:2511	1212200	21	True				
ANR	1212652	ReturnType	static int		1212200	1					
ANR	1212653	Identifier	cavs_decode_frame		1212200	2					
ANR	1212654	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		1212200	3					
ANR	1212655	Parameter	AVCodecContext * avctx	1:29:29:50	1212200	0	True				
ANR	1212656	ParameterType	AVCodecContext *		1212200	0					
ANR	1212657	Identifier	avctx		1212200	1					
ANR	1212658	Parameter	void * data	1:52:52:61	1212200	1	True				
ANR	1212659	ParameterType	void *		1212200	0					
ANR	1212660	Identifier	data		1212200	1					
ANR	1212661	Parameter	int * data_size	1:64:64:77	1212200	2	True				
ANR	1212662	ParameterType	int *		1212200	0					
ANR	1212663	Identifier	data_size		1212200	1					
ANR	1212664	Parameter	AVPacket * avpkt	3:29:110:124	1212200	3	True				
ANR	1212665	ParameterType	AVPacket *		1212200	0					
ANR	1212666	Identifier	avpkt		1212200	1					
ANR	1212667	CFGEntryNode	ENTRY		1212200		True				
ANR	1212668	CFGExitNode	EXIT		1212200		True				
ANR	1212669	InfiniteForNode	true		1212200		True				
ANR	1212670	Symbol	s -> parse_context		1212200						
ANR	1212671	Symbol	data		1212200						
ANR	1212672	Symbol	* ( AVFrame * ) & h -> picture		1212200						
ANR	1212673	Symbol	avpkt		1212200						
ANR	1212674	Symbol	* data_size		1212200						
ANR	1212675	Symbol	* ( AVFrame * ) & h -> DPB [ 1 ]		1212200						
ANR	1212676	Symbol	& stc		1212200						
ANR	1212677	Symbol	h -> DPB [ 1 ] . f		1212200						
ANR	1212678	Symbol	s -> low_delay		1212200						
ANR	1212679	Symbol	buf_end		1212200						
ANR	1212680	Symbol	data_size		1212200						
ANR	1212681	Symbol	stc		1212200						
ANR	1212682	Symbol	* * h		1212200						
ANR	1212683	Symbol	buf_size		1212200						
ANR	1212684	Symbol	* h -> DPB [ 0 ] . f . data		1212200						
ANR	1212685	Symbol	h -> DPB [ 1 ] . f . data		1212200						
ANR	1212686	Symbol	* h -> DPB		1212200						
ANR	1212687	Symbol	h -> DPB [ 0 ] . f . data		1212200						
ANR	1212688	Symbol	* h -> DPB [ 1 ] . f . data		1212200						
ANR	1212689	Symbol	& s -> gb		1212200						
ANR	1212690	Symbol	* h -> DPB [ 1 ] . f		1212200						
ANR	1212691	Symbol	buf_ptr		1212200						
ANR	1212692	Symbol	* * h -> DPB		1212200						
ANR	1212693	Symbol	SLICE_MAX_START_CODE		1212200						
ANR	1212694	Symbol	* avctx		1212200						
ANR	1212695	Symbol	& h -> s		1212200						
ANR	1212696	Symbol	h -> picture		1212200						
ANR	1212697	Symbol	* * * h		1212200						
ANR	1212698	Symbol	avpkt -> data		1212200						
ANR	1212699	Symbol	s -> avctx		1212200						
ANR	1212700	Symbol	decode_pic		1212200						
ANR	1212701	Symbol	& h -> picture		1212200						
ANR	1212702	Symbol	* ( AVFrame * ) & h -> DPB [ 0 ]		1212200						
ANR	1212703	Symbol	avpkt -> size		1212200						
ANR	1212704	Symbol	avctx		1212200						
ANR	1212705	Symbol	AV_PICTURE_TYPE_B		1212200						
ANR	1212706	Symbol	* avpkt		1212200						
ANR	1212707	Symbol	ff_find_start_code		1212200						
ANR	1212708	Symbol	h		1212200						
ANR	1212709	Symbol	h -> pic_type		1212200						
ANR	1212710	Symbol	avctx -> priv_data		1212200						
ANR	1212711	Symbol	* h -> DPB [ 0 ] . f		1212200						
ANR	1212712	Symbol	s -> parse_context . last_index		1212200						
ANR	1212713	Symbol	picture		1212200						
ANR	1212714	Symbol	h -> got_keyframe		1212200						
ANR	1212715	Symbol	h -> stc		1212200						
ANR	1212716	Symbol	input_size		1212200						
ANR	1212717	Symbol	buf		1212200						
ANR	1212718	Symbol	* h		1212200						
ANR	1212719	Symbol	s		1212200						
ANR	1212720	Symbol	h -> DPB [ 0 ] . f		1212200						
ANR	1212721	Symbol	* picture		1212200						
ANR	1212722	Symbol	h -> DPB		1212200						
ANR	1212723	Symbol	* s		1212200						
ANR	1212724	Symbol	FFMAX		1212200						
