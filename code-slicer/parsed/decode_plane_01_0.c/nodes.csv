command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2005120	File	/home/p4ultr4n/workplace/ReVeal/raw_code/decode_plane_01_0.c								
ANR	2005121	Function	decode_plane	1:0:0:3560							
ANR	2005122	FunctionDef	"decode_plane (UtvideoContext * c , int plane_no , uint8_t * dst , int step , ptrdiff_t stride , int width , int height , const uint8_t * src , int use_pred)"		2005121	0					
ANR	2005123	CompoundStatement		9:0:232:3560	2005121	0					
ANR	2005124	IdentifierDeclStatement	"int i , j , slice , pix ;"	11:4:239:259	2005121	0	True				
ANR	2005125	IdentifierDecl	i		2005121	0					
ANR	2005126	IdentifierDeclType	int		2005121	0					
ANR	2005127	Identifier	i		2005121	1					
ANR	2005128	IdentifierDecl	j		2005121	1					
ANR	2005129	IdentifierDeclType	int		2005121	0					
ANR	2005130	Identifier	j		2005121	1					
ANR	2005131	IdentifierDecl	slice		2005121	2					
ANR	2005132	IdentifierDeclType	int		2005121	0					
ANR	2005133	Identifier	slice		2005121	1					
ANR	2005134	IdentifierDecl	pix		2005121	3					
ANR	2005135	IdentifierDeclType	int		2005121	0					
ANR	2005136	Identifier	pix		2005121	1					
ANR	2005137	IdentifierDeclStatement	"int sstart , send ;"	13:4:266:282	2005121	1	True				
ANR	2005138	IdentifierDecl	sstart		2005121	0					
ANR	2005139	IdentifierDeclType	int		2005121	0					
ANR	2005140	Identifier	sstart		2005121	1					
ANR	2005141	IdentifierDecl	send		2005121	1					
ANR	2005142	IdentifierDeclType	int		2005121	0					
ANR	2005143	Identifier	send		2005121	1					
ANR	2005144	IdentifierDeclStatement	VLC vlc ;	15:4:289:296	2005121	2	True				
ANR	2005145	IdentifierDecl	vlc		2005121	0					
ANR	2005146	IdentifierDeclType	VLC		2005121	0					
ANR	2005147	Identifier	vlc		2005121	1					
ANR	2005148	IdentifierDeclStatement	GetBitContext gb ;	17:4:303:319	2005121	3	True				
ANR	2005149	IdentifierDecl	gb		2005121	0					
ANR	2005150	IdentifierDeclType	GetBitContext		2005121	0					
ANR	2005151	Identifier	gb		2005121	1					
ANR	2005152	IdentifierDeclStatement	"int prev , fsym ;"	19:4:326:340	2005121	4	True				
ANR	2005153	IdentifierDecl	prev		2005121	0					
ANR	2005154	IdentifierDeclType	int		2005121	0					
ANR	2005155	Identifier	prev		2005121	1					
ANR	2005156	IdentifierDecl	fsym		2005121	1					
ANR	2005157	IdentifierDeclType	int		2005121	0					
ANR	2005158	Identifier	fsym		2005121	1					
ANR	2005159	IdentifierDeclStatement	const int cmask = c -> interlaced ? ~ ( 1 + 2 * ( ! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P ) ) : ~ ( ! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P ) ;	21:4:347:504	2005121	5	True				
ANR	2005160	IdentifierDecl	cmask = c -> interlaced ? ~ ( 1 + 2 * ( ! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P ) ) : ~ ( ! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P )		2005121	0					
ANR	2005161	IdentifierDeclType	const int		2005121	0					
ANR	2005162	Identifier	cmask		2005121	1					
ANR	2005163	AssignmentExpression	cmask = c -> interlaced ? ~ ( 1 + 2 * ( ! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P ) ) : ~ ( ! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P )		2005121	2		=			
ANR	2005164	Identifier	cmask		2005121	0					
ANR	2005165	ConditionalExpression	c -> interlaced ? ~ ( 1 + 2 * ( ! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P ) ) : ~ ( ! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P )		2005121	1					
ANR	2005166	Condition	c -> interlaced		2005121	0					
ANR	2005167	PtrMemberAccess	c -> interlaced		2005121	0					
ANR	2005168	Identifier	c		2005121	0					
ANR	2005169	Identifier	interlaced		2005121	1					
ANR	2005170	UnaryOperationExpression	~ ( 1 + 2 * ( ! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P ) )		2005121	1					
ANR	2005171	UnaryOperator	~		2005121	0					
ANR	2005172	AdditiveExpression	1 + 2 * ( ! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P )		2005121	1		+			
ANR	2005173	PrimaryExpression	1		2005121	0					
ANR	2005174	MultiplicativeExpression	2 * ( ! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P )		2005121	1		*			
ANR	2005175	PrimaryExpression	2		2005121	0					
ANR	2005176	AndExpression	! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P		2005121	1		&&			
ANR	2005177	UnaryOperationExpression	! plane_no		2005121	0					
ANR	2005178	UnaryOperator	!		2005121	0					
ANR	2005179	Identifier	plane_no		2005121	1					
ANR	2005180	EqualityExpression	c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P		2005121	1		==			
ANR	2005181	PtrMemberAccess	c -> avctx -> pix_fmt		2005121	0					
ANR	2005182	PtrMemberAccess	c -> avctx		2005121	0					
ANR	2005183	Identifier	c		2005121	0					
ANR	2005184	Identifier	avctx		2005121	1					
ANR	2005185	Identifier	pix_fmt		2005121	1					
ANR	2005186	Identifier	AV_PIX_FMT_YUV420P		2005121	1					
ANR	2005187	UnaryOperationExpression	~ ( ! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P )		2005121	2					
ANR	2005188	UnaryOperator	~		2005121	0					
ANR	2005189	AndExpression	! plane_no && c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P		2005121	1		&&			
ANR	2005190	UnaryOperationExpression	! plane_no		2005121	0					
ANR	2005191	UnaryOperator	!		2005121	0					
ANR	2005192	Identifier	plane_no		2005121	1					
ANR	2005193	EqualityExpression	c -> avctx -> pix_fmt == AV_PIX_FMT_YUV420P		2005121	1		==			
ANR	2005194	PtrMemberAccess	c -> avctx -> pix_fmt		2005121	0					
ANR	2005195	PtrMemberAccess	c -> avctx		2005121	0					
ANR	2005196	Identifier	c		2005121	0					
ANR	2005197	Identifier	avctx		2005121	1					
ANR	2005198	Identifier	pix_fmt		2005121	1					
ANR	2005199	Identifier	AV_PIX_FMT_YUV420P		2005121	1					
ANR	2005200	IfStatement	"if ( build_huff ( src , & vlc , & fsym ) )"		2005121	6					
ANR	2005201	Condition	"build_huff ( src , & vlc , & fsym )"	25:8:517:544	2005121	0	True				
ANR	2005202	CallExpression	"build_huff ( src , & vlc , & fsym )"		2005121	0					
ANR	2005203	Callee	build_huff		2005121	0					
ANR	2005204	Identifier	build_huff		2005121	0					
ANR	2005205	ArgumentList	src		2005121	1					
ANR	2005206	Argument	src		2005121	0					
ANR	2005207	Identifier	src		2005121	0					
ANR	2005208	Argument	& vlc		2005121	1					
ANR	2005209	UnaryOperationExpression	& vlc		2005121	0					
ANR	2005210	UnaryOperator	&		2005121	0					
ANR	2005211	Identifier	vlc		2005121	1					
ANR	2005212	Argument	& fsym		2005121	2					
ANR	2005213	UnaryOperationExpression	& fsym		2005121	0					
ANR	2005214	UnaryOperator	&		2005121	0					
ANR	2005215	Identifier	fsym		2005121	1					
ANR	2005216	CompoundStatement		17:38:314:314	2005121	1					
ANR	2005217	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Cannot build Huffman codes\\n"" )"	27:8:558:620	2005121	0	True				
ANR	2005218	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Cannot build Huffman codes\\n"" )"		2005121	0					
ANR	2005219	Callee	av_log		2005121	0					
ANR	2005220	Identifier	av_log		2005121	0					
ANR	2005221	ArgumentList	c -> avctx		2005121	1					
ANR	2005222	Argument	c -> avctx		2005121	0					
ANR	2005223	PtrMemberAccess	c -> avctx		2005121	0					
ANR	2005224	Identifier	c		2005121	0					
ANR	2005225	Identifier	avctx		2005121	1					
ANR	2005226	Argument	AV_LOG_ERROR		2005121	1					
ANR	2005227	Identifier	AV_LOG_ERROR		2005121	0					
ANR	2005228	Argument	"""Cannot build Huffman codes\\n"""		2005121	2					
ANR	2005229	PrimaryExpression	"""Cannot build Huffman codes\\n"""		2005121	0					
ANR	2005230	ReturnStatement	return AVERROR_INVALIDDATA ;	29:8:631:657	2005121	1	True				
ANR	2005231	Identifier	AVERROR_INVALIDDATA		2005121	0					
ANR	2005232	IfStatement	if ( fsym >= 0 )		2005121	7					
ANR	2005233	Condition	fsym >= 0	33:8:675:683	2005121	0	True				
ANR	2005234	RelationalExpression	fsym >= 0		2005121	0		>=			
ANR	2005235	Identifier	fsym		2005121	0					
ANR	2005236	PrimaryExpression	0		2005121	1					
ANR	2005237	CompoundStatement		25:19:453:453	2005121	1					
ANR	2005238	ExpressionStatement	send = 0	35:8:749:757	2005121	0	True				
ANR	2005239	AssignmentExpression	send = 0		2005121	0		=			
ANR	2005240	Identifier	send		2005121	0					
ANR	2005241	PrimaryExpression	0		2005121	1					
ANR	2005242	ForStatement	for ( slice = 0 ; slice < c -> slices ; slice ++ )		2005121	1					
ANR	2005243	ForInit	slice = 0 ;	37:13:773:782	2005121	0	True				
ANR	2005244	AssignmentExpression	slice = 0		2005121	0		=			
ANR	2005245	Identifier	slice		2005121	0					
ANR	2005246	PrimaryExpression	0		2005121	1					
ANR	2005247	Condition	slice < c -> slices	37:24:784:800	2005121	1	True				
ANR	2005248	RelationalExpression	slice < c -> slices		2005121	0		<			
ANR	2005249	Identifier	slice		2005121	0					
ANR	2005250	PtrMemberAccess	c -> slices		2005121	1					
ANR	2005251	Identifier	c		2005121	0					
ANR	2005252	Identifier	slices		2005121	1					
ANR	2005253	PostIncDecOperationExpression	slice ++	37:43:803:809	2005121	2	True				
ANR	2005254	Identifier	slice		2005121	0					
ANR	2005255	IncDec	++		2005121	1					
ANR	2005256	CompoundStatement		31:12:594:607	2005121	3					
ANR	2005257	IdentifierDeclStatement	uint8_t * dest ;	39:12:827:840	2005121	0	True				
ANR	2005258	IdentifierDecl	* dest		2005121	0					
ANR	2005259	IdentifierDeclType	uint8_t *		2005121	0					
ANR	2005260	Identifier	dest		2005121	1					
ANR	2005261	ExpressionStatement	sstart = send	43:12:857:870	2005121	1	True				
ANR	2005262	AssignmentExpression	sstart = send		2005121	0		=			
ANR	2005263	Identifier	sstart		2005121	0					
ANR	2005264	Identifier	send		2005121	1					
ANR	2005265	ExpressionStatement	send = ( height * ( slice + 1 ) / c -> slices ) & cmask	45:12:885:936	2005121	2	True				
ANR	2005266	AssignmentExpression	send = ( height * ( slice + 1 ) / c -> slices ) & cmask		2005121	0		=			
ANR	2005267	Identifier	send		2005121	0					
ANR	2005268	BitAndExpression	( height * ( slice + 1 ) / c -> slices ) & cmask		2005121	1		&			
ANR	2005269	MultiplicativeExpression	height * ( slice + 1 ) / c -> slices		2005121	0		*			
ANR	2005270	Identifier	height		2005121	0					
ANR	2005271	MultiplicativeExpression	( slice + 1 ) / c -> slices		2005121	1		/			
ANR	2005272	AdditiveExpression	slice + 1		2005121	0		+			
ANR	2005273	Identifier	slice		2005121	0					
ANR	2005274	PrimaryExpression	1		2005121	1					
ANR	2005275	PtrMemberAccess	c -> slices		2005121	1					
ANR	2005276	Identifier	c		2005121	0					
ANR	2005277	Identifier	slices		2005121	1					
ANR	2005278	Identifier	cmask		2005121	1					
ANR	2005279	ExpressionStatement	dest = dst + sstart * stride	47:12:951:981	2005121	3	True				
ANR	2005280	AssignmentExpression	dest = dst + sstart * stride		2005121	0		=			
ANR	2005281	Identifier	dest		2005121	0					
ANR	2005282	AdditiveExpression	dst + sstart * stride		2005121	1		+			
ANR	2005283	Identifier	dst		2005121	0					
ANR	2005284	MultiplicativeExpression	sstart * stride		2005121	1		*			
ANR	2005285	Identifier	sstart		2005121	0					
ANR	2005286	Identifier	stride		2005121	1					
ANR	2005287	ExpressionStatement	prev = 0x80	51:12:998:1009	2005121	4	True				
ANR	2005288	AssignmentExpression	prev = 0x80		2005121	0		=			
ANR	2005289	Identifier	prev		2005121	0					
ANR	2005290	PrimaryExpression	0x80		2005121	1					
ANR	2005291	ForStatement	for ( j = sstart ; j < send ; j ++ )		2005121	5					
ANR	2005292	ForInit	j = sstart ;	53:17:1029:1039	2005121	0	True				
ANR	2005293	AssignmentExpression	j = sstart		2005121	0		=			
ANR	2005294	Identifier	j		2005121	0					
ANR	2005295	Identifier	sstart		2005121	1					
ANR	2005296	Condition	j < send	53:29:1041:1048	2005121	1	True				
ANR	2005297	RelationalExpression	j < send		2005121	0		<			
ANR	2005298	Identifier	j		2005121	0					
ANR	2005299	Identifier	send		2005121	1					
ANR	2005300	PostIncDecOperationExpression	j ++	53:39:1051:1053	2005121	2	True				
ANR	2005301	Identifier	j		2005121	0					
ANR	2005302	IncDec	++		2005121	1					
ANR	2005303	CompoundStatement		45:44:823:823	2005121	3					
ANR	2005304	ForStatement	for ( i = 0 ; i < width * step ; i += step )		2005121	0					
ANR	2005305	ForInit	i = 0 ;	55:21:1080:1085	2005121	0	True				
ANR	2005306	AssignmentExpression	i = 0		2005121	0		=			
ANR	2005307	Identifier	i		2005121	0					
ANR	2005308	PrimaryExpression	0		2005121	1					
ANR	2005309	Condition	i < width * step	55:28:1087:1102	2005121	1	True				
ANR	2005310	RelationalExpression	i < width * step		2005121	0		<			
ANR	2005311	Identifier	i		2005121	0					
ANR	2005312	MultiplicativeExpression	width * step		2005121	1		*			
ANR	2005313	Identifier	width		2005121	0					
ANR	2005314	Identifier	step		2005121	1					
ANR	2005315	AssignmentExpression	i += step	55:46:1105:1113	2005121	2	True	+=			
ANR	2005316	Identifier	i		2005121	0					
ANR	2005317	Identifier	step		2005121	1					
ANR	2005318	CompoundStatement		47:57:883:883	2005121	3					
ANR	2005319	ExpressionStatement	pix = fsym	57:20:1139:1149	2005121	0	True				
ANR	2005320	AssignmentExpression	pix = fsym		2005121	0		=			
ANR	2005321	Identifier	pix		2005121	0					
ANR	2005322	Identifier	fsym		2005121	1					
ANR	2005323	IfStatement	if ( use_pred )		2005121	1					
ANR	2005324	Condition	use_pred	59:24:1176:1183	2005121	0	True				
ANR	2005325	Identifier	use_pred		2005121	0					
ANR	2005326	CompoundStatement		51:34:953:953	2005121	1					
ANR	2005327	ExpressionStatement	prev += pix	61:24:1213:1224	2005121	0	True				
ANR	2005328	AssignmentExpression	prev += pix		2005121	0		+=			
ANR	2005329	Identifier	prev		2005121	0					
ANR	2005330	Identifier	pix		2005121	1					
ANR	2005331	ExpressionStatement	pix = prev	63:24:1251:1263	2005121	1	True				
ANR	2005332	AssignmentExpression	pix = prev		2005121	0		=			
ANR	2005333	Identifier	pix		2005121	0					
ANR	2005334	Identifier	prev		2005121	1					
ANR	2005335	ExpressionStatement	dest [ i ] = pix	67:20:1309:1322	2005121	2	True				
ANR	2005336	AssignmentExpression	dest [ i ] = pix		2005121	0		=			
ANR	2005337	ArrayIndexing	dest [ i ]		2005121	0					
ANR	2005338	Identifier	dest		2005121	0					
ANR	2005339	Identifier	i		2005121	1					
ANR	2005340	Identifier	pix		2005121	1					
ANR	2005341	ExpressionStatement	dest += stride	71:16:1360:1374	2005121	1	True				
ANR	2005342	AssignmentExpression	dest += stride		2005121	0		+=			
ANR	2005343	Identifier	dest		2005121	0					
ANR	2005344	Identifier	stride		2005121	1					
ANR	2005345	ReturnStatement	return 0 ;	77:8:1411:1419	2005121	2	True				
ANR	2005346	PrimaryExpression	0		2005121	0					
ANR	2005347	ExpressionStatement	src += 256	83:4:1435:1450	2005121	8	True				
ANR	2005348	AssignmentExpression	src += 256		2005121	0		+=			
ANR	2005349	Identifier	src		2005121	0					
ANR	2005350	PrimaryExpression	256		2005121	1					
ANR	2005351	ExpressionStatement	send = 0	87:4:1459:1467	2005121	9	True				
ANR	2005352	AssignmentExpression	send = 0		2005121	0		=			
ANR	2005353	Identifier	send		2005121	0					
ANR	2005354	PrimaryExpression	0		2005121	1					
ANR	2005355	ForStatement	for ( slice = 0 ; slice < c -> slices ; slice ++ )		2005121	10					
ANR	2005356	ForInit	slice = 0 ;	89:9:1479:1488	2005121	0	True				
ANR	2005357	AssignmentExpression	slice = 0		2005121	0		=			
ANR	2005358	Identifier	slice		2005121	0					
ANR	2005359	PrimaryExpression	0		2005121	1					
ANR	2005360	Condition	slice < c -> slices	89:20:1490:1506	2005121	1	True				
ANR	2005361	RelationalExpression	slice < c -> slices		2005121	0		<			
ANR	2005362	Identifier	slice		2005121	0					
ANR	2005363	PtrMemberAccess	c -> slices		2005121	1					
ANR	2005364	Identifier	c		2005121	0					
ANR	2005365	Identifier	slices		2005121	1					
ANR	2005366	PostIncDecOperationExpression	slice ++	89:39:1509:1515	2005121	2	True				
ANR	2005367	Identifier	slice		2005121	0					
ANR	2005368	IncDec	++		2005121	1					
ANR	2005369	CompoundStatement		85:8:1320:1368	2005121	3					
ANR	2005370	IdentifierDeclStatement	uint8_t * dest ;	91:8:1529:1542	2005121	0	True				
ANR	2005371	IdentifierDecl	* dest		2005121	0					
ANR	2005372	IdentifierDeclType	uint8_t *		2005121	0					
ANR	2005373	Identifier	dest		2005121	1					
ANR	2005374	IdentifierDeclStatement	"int slice_data_start , slice_data_end , slice_size ;"	93:8:1553:1601	2005121	1	True				
ANR	2005375	IdentifierDecl	slice_data_start		2005121	0					
ANR	2005376	IdentifierDeclType	int		2005121	0					
ANR	2005377	Identifier	slice_data_start		2005121	1					
ANR	2005378	IdentifierDecl	slice_data_end		2005121	1					
ANR	2005379	IdentifierDeclType	int		2005121	0					
ANR	2005380	Identifier	slice_data_end		2005121	1					
ANR	2005381	IdentifierDecl	slice_size		2005121	2					
ANR	2005382	IdentifierDeclType	int		2005121	0					
ANR	2005383	Identifier	slice_size		2005121	1					
ANR	2005384	ExpressionStatement	sstart = send	97:8:1614:1627	2005121	2	True				
ANR	2005385	AssignmentExpression	sstart = send		2005121	0		=			
ANR	2005386	Identifier	sstart		2005121	0					
ANR	2005387	Identifier	send		2005121	1					
ANR	2005388	ExpressionStatement	send = ( height * ( slice + 1 ) / c -> slices ) & cmask	99:8:1638:1689	2005121	3	True				
ANR	2005389	AssignmentExpression	send = ( height * ( slice + 1 ) / c -> slices ) & cmask		2005121	0		=			
ANR	2005390	Identifier	send		2005121	0					
ANR	2005391	BitAndExpression	( height * ( slice + 1 ) / c -> slices ) & cmask		2005121	1		&			
ANR	2005392	MultiplicativeExpression	height * ( slice + 1 ) / c -> slices		2005121	0		*			
ANR	2005393	Identifier	height		2005121	0					
ANR	2005394	MultiplicativeExpression	( slice + 1 ) / c -> slices		2005121	1		/			
ANR	2005395	AdditiveExpression	slice + 1		2005121	0		+			
ANR	2005396	Identifier	slice		2005121	0					
ANR	2005397	PrimaryExpression	1		2005121	1					
ANR	2005398	PtrMemberAccess	c -> slices		2005121	1					
ANR	2005399	Identifier	c		2005121	0					
ANR	2005400	Identifier	slices		2005121	1					
ANR	2005401	Identifier	cmask		2005121	1					
ANR	2005402	ExpressionStatement	dest = dst + sstart * stride	101:8:1700:1730	2005121	4	True				
ANR	2005403	AssignmentExpression	dest = dst + sstart * stride		2005121	0		=			
ANR	2005404	Identifier	dest		2005121	0					
ANR	2005405	AdditiveExpression	dst + sstart * stride		2005121	1		+			
ANR	2005406	Identifier	dst		2005121	0					
ANR	2005407	MultiplicativeExpression	sstart * stride		2005121	1		*			
ANR	2005408	Identifier	sstart		2005121	0					
ANR	2005409	Identifier	stride		2005121	1					
ANR	2005410	ExpressionStatement	slice_data_start = slice ? AV_RL32 ( src + slice * 4 - 4 ) : 0	107:8:1805:1864	2005121	5	True				
ANR	2005411	AssignmentExpression	slice_data_start = slice ? AV_RL32 ( src + slice * 4 - 4 ) : 0		2005121	0		=			
ANR	2005412	Identifier	slice_data_start		2005121	0					
ANR	2005413	ConditionalExpression	slice ? AV_RL32 ( src + slice * 4 - 4 ) : 0		2005121	1					
ANR	2005414	Condition	slice		2005121	0					
ANR	2005415	Identifier	slice		2005121	0					
ANR	2005416	CallExpression	AV_RL32 ( src + slice * 4 - 4 )		2005121	1					
ANR	2005417	Callee	AV_RL32		2005121	0					
ANR	2005418	Identifier	AV_RL32		2005121	0					
ANR	2005419	ArgumentList	src + slice * 4 - 4		2005121	1					
ANR	2005420	Argument	src + slice * 4 - 4		2005121	0					
ANR	2005421	AdditiveExpression	src + slice * 4 - 4		2005121	0		+			
ANR	2005422	Identifier	src		2005121	0					
ANR	2005423	AdditiveExpression	slice * 4 - 4		2005121	1		-			
ANR	2005424	MultiplicativeExpression	slice * 4		2005121	0		*			
ANR	2005425	Identifier	slice		2005121	0					
ANR	2005426	PrimaryExpression	4		2005121	1					
ANR	2005427	PrimaryExpression	4		2005121	1					
ANR	2005428	PrimaryExpression	0		2005121	2					
ANR	2005429	ExpressionStatement	slice_data_end = AV_RL32 ( src + slice * 4 )	109:8:1875:1918	2005121	6	True				
ANR	2005430	AssignmentExpression	slice_data_end = AV_RL32 ( src + slice * 4 )		2005121	0		=			
ANR	2005431	Identifier	slice_data_end		2005121	0					
ANR	2005432	CallExpression	AV_RL32 ( src + slice * 4 )		2005121	1					
ANR	2005433	Callee	AV_RL32		2005121	0					
ANR	2005434	Identifier	AV_RL32		2005121	0					
ANR	2005435	ArgumentList	src + slice * 4		2005121	1					
ANR	2005436	Argument	src + slice * 4		2005121	0					
ANR	2005437	AdditiveExpression	src + slice * 4		2005121	0		+			
ANR	2005438	Identifier	src		2005121	0					
ANR	2005439	MultiplicativeExpression	slice * 4		2005121	1		*			
ANR	2005440	Identifier	slice		2005121	0					
ANR	2005441	PrimaryExpression	4		2005121	1					
ANR	2005442	ExpressionStatement	slice_size = slice_data_end - slice_data_start	111:8:1929:1981	2005121	7	True				
ANR	2005443	AssignmentExpression	slice_size = slice_data_end - slice_data_start		2005121	0		=			
ANR	2005444	Identifier	slice_size		2005121	0					
ANR	2005445	AdditiveExpression	slice_data_end - slice_data_start		2005121	1		-			
ANR	2005446	Identifier	slice_data_end		2005121	0					
ANR	2005447	Identifier	slice_data_start		2005121	1					
ANR	2005448	IfStatement	if ( ! slice_size )		2005121	8					
ANR	2005449	Condition	! slice_size	115:12:1998:2008	2005121	0	True				
ANR	2005450	UnaryOperationExpression	! slice_size		2005121	0					
ANR	2005451	UnaryOperator	!		2005121	0					
ANR	2005452	Identifier	slice_size		2005121	1					
ANR	2005453	CompoundStatement		107:25:1778:1778	2005121	1					
ANR	2005454	Statement	av_log	117:12:2026:2031	2005121	0	True				
ANR	2005455	Statement	(	117:18:2032:2032	2005121	1	True				
ANR	2005456	Statement	c	117:19:2033:2033	2005121	2	True				
ANR	2005457	Statement	->	117:20:2034:2035	2005121	3	True				
ANR	2005458	Statement	avctx	117:22:2036:2040	2005121	4	True				
ANR	2005459	Statement	","	117:27:2041:2041	2005121	5	True				
ANR	2005460	Statement	AV_LOG_ERROR	117:29:2043:2054	2005121	6	True				
ANR	2005461	Statement	","	117:41:2055:2055	2005121	7	True				
ANR	2005462	Statement	"""Plane has more than one symbol """	117:43:2057:2089	2005121	8	True				
ANR	2005463	Statement	"""yet a slice has a length of zero.\\n"""	119:19:2111:2147	2005121	9	True				
ANR	2005464	Statement	)	119:56:2148:2148	2005121	10	True				
ANR	2005465	ExpressionStatement		119:57:2149:2149	2005121	11	True				
ANR	2005466	GotoStatement	goto fail ;	121:12:2164:2173	2005121	12	True				
ANR	2005467	Identifier	fail		2005121	0					
ANR	2005468	ExpressionStatement	"memset ( c -> slice_bits + slice_size , 0 , AV_INPUT_BUFFER_PADDING_SIZE )"	127:8:2197:2264	2005121	9	True				
ANR	2005469	CallExpression	"memset ( c -> slice_bits + slice_size , 0 , AV_INPUT_BUFFER_PADDING_SIZE )"		2005121	0					
ANR	2005470	Callee	memset		2005121	0					
ANR	2005471	Identifier	memset		2005121	0					
ANR	2005472	ArgumentList	c -> slice_bits + slice_size		2005121	1					
ANR	2005473	Argument	c -> slice_bits + slice_size		2005121	0					
ANR	2005474	AdditiveExpression	c -> slice_bits + slice_size		2005121	0		+			
ANR	2005475	PtrMemberAccess	c -> slice_bits		2005121	0					
ANR	2005476	Identifier	c		2005121	0					
ANR	2005477	Identifier	slice_bits		2005121	1					
ANR	2005478	Identifier	slice_size		2005121	1					
ANR	2005479	Argument	0		2005121	1					
ANR	2005480	PrimaryExpression	0		2005121	0					
ANR	2005481	Argument	AV_INPUT_BUFFER_PADDING_SIZE		2005121	2					
ANR	2005482	Identifier	AV_INPUT_BUFFER_PADDING_SIZE		2005121	0					
ANR	2005483	ExpressionStatement	"c -> bdsp . bswap_buf ( ( uint32_t * ) c -> slice_bits , ( uint32_t * ) ( src + slice_data_start + c -> slices * 4 ) , ( slice_data_end - slice_data_start + 3 ) >> 2 )"	129:8:2275:2474	2005121	10	True				
ANR	2005484	CallExpression	"c -> bdsp . bswap_buf ( ( uint32_t * ) c -> slice_bits , ( uint32_t * ) ( src + slice_data_start + c -> slices * 4 ) , ( slice_data_end - slice_data_start + 3 ) >> 2 )"		2005121	0					
ANR	2005485	Callee	c -> bdsp . bswap_buf		2005121	0					
ANR	2005486	MemberAccess	c -> bdsp . bswap_buf		2005121	0					
ANR	2005487	PtrMemberAccess	c -> bdsp		2005121	0					
ANR	2005488	Identifier	c		2005121	0					
ANR	2005489	Identifier	bdsp		2005121	1					
ANR	2005490	Identifier	bswap_buf		2005121	1					
ANR	2005491	ArgumentList	( uint32_t * ) c -> slice_bits		2005121	1					
ANR	2005492	Argument	( uint32_t * ) c -> slice_bits		2005121	0					
ANR	2005493	CastExpression	( uint32_t * ) c -> slice_bits		2005121	0					
ANR	2005494	CastTarget	uint32_t *		2005121	0					
ANR	2005495	PtrMemberAccess	c -> slice_bits		2005121	1					
ANR	2005496	Identifier	c		2005121	0					
ANR	2005497	Identifier	slice_bits		2005121	1					
ANR	2005498	Argument	( uint32_t * ) ( src + slice_data_start + c -> slices * 4 )		2005121	1					
ANR	2005499	CastExpression	( uint32_t * ) ( src + slice_data_start + c -> slices * 4 )		2005121	0					
ANR	2005500	CastTarget	uint32_t *		2005121	0					
ANR	2005501	AdditiveExpression	src + slice_data_start + c -> slices * 4		2005121	1		+			
ANR	2005502	Identifier	src		2005121	0					
ANR	2005503	AdditiveExpression	slice_data_start + c -> slices * 4		2005121	1		+			
ANR	2005504	Identifier	slice_data_start		2005121	0					
ANR	2005505	MultiplicativeExpression	c -> slices * 4		2005121	1		*			
ANR	2005506	PtrMemberAccess	c -> slices		2005121	0					
ANR	2005507	Identifier	c		2005121	0					
ANR	2005508	Identifier	slices		2005121	1					
ANR	2005509	PrimaryExpression	4		2005121	1					
ANR	2005510	Argument	( slice_data_end - slice_data_start + 3 ) >> 2		2005121	2					
ANR	2005511	ShiftExpression	( slice_data_end - slice_data_start + 3 ) >> 2		2005121	0		>>			
ANR	2005512	AdditiveExpression	slice_data_end - slice_data_start + 3		2005121	0		-			
ANR	2005513	Identifier	slice_data_end		2005121	0					
ANR	2005514	AdditiveExpression	slice_data_start + 3		2005121	1		+			
ANR	2005515	Identifier	slice_data_start		2005121	0					
ANR	2005516	PrimaryExpression	3		2005121	1					
ANR	2005517	PrimaryExpression	2		2005121	1					
ANR	2005518	ExpressionStatement	"init_get_bits ( & gb , c -> slice_bits , slice_size * 8 )"	135:8:2485:2534	2005121	11	True				
ANR	2005519	CallExpression	"init_get_bits ( & gb , c -> slice_bits , slice_size * 8 )"		2005121	0					
ANR	2005520	Callee	init_get_bits		2005121	0					
ANR	2005521	Identifier	init_get_bits		2005121	0					
ANR	2005522	ArgumentList	& gb		2005121	1					
ANR	2005523	Argument	& gb		2005121	0					
ANR	2005524	UnaryOperationExpression	& gb		2005121	0					
ANR	2005525	UnaryOperator	&		2005121	0					
ANR	2005526	Identifier	gb		2005121	1					
ANR	2005527	Argument	c -> slice_bits		2005121	1					
ANR	2005528	PtrMemberAccess	c -> slice_bits		2005121	0					
ANR	2005529	Identifier	c		2005121	0					
ANR	2005530	Identifier	slice_bits		2005121	1					
ANR	2005531	Argument	slice_size * 8		2005121	2					
ANR	2005532	MultiplicativeExpression	slice_size * 8		2005121	0		*			
ANR	2005533	Identifier	slice_size		2005121	0					
ANR	2005534	PrimaryExpression	8		2005121	1					
ANR	2005535	ExpressionStatement	prev = 0x80	139:8:2547:2558	2005121	12	True				
ANR	2005536	AssignmentExpression	prev = 0x80		2005121	0		=			
ANR	2005537	Identifier	prev		2005121	0					
ANR	2005538	PrimaryExpression	0x80		2005121	1					
ANR	2005539	ForStatement	for ( j = sstart ; j < send ; j ++ )		2005121	13					
ANR	2005540	ForInit	j = sstart ;	141:13:2574:2584	2005121	0	True				
ANR	2005541	AssignmentExpression	j = sstart		2005121	0		=			
ANR	2005542	Identifier	j		2005121	0					
ANR	2005543	Identifier	sstart		2005121	1					
ANR	2005544	Condition	j < send	141:25:2586:2593	2005121	1	True				
ANR	2005545	RelationalExpression	j < send		2005121	0		<			
ANR	2005546	Identifier	j		2005121	0					
ANR	2005547	Identifier	send		2005121	1					
ANR	2005548	PostIncDecOperationExpression	j ++	141:35:2596:2598	2005121	2	True				
ANR	2005549	Identifier	j		2005121	0					
ANR	2005550	IncDec	++		2005121	1					
ANR	2005551	CompoundStatement		133:40:2368:2368	2005121	3					
ANR	2005552	ForStatement	for ( i = 0 ; i < width * step ; i += step )		2005121	0					
ANR	2005553	ForInit	i = 0 ;	143:17:2621:2626	2005121	0	True				
ANR	2005554	AssignmentExpression	i = 0		2005121	0		=			
ANR	2005555	Identifier	i		2005121	0					
ANR	2005556	PrimaryExpression	0		2005121	1					
ANR	2005557	Condition	i < width * step	143:24:2628:2643	2005121	1	True				
ANR	2005558	RelationalExpression	i < width * step		2005121	0		<			
ANR	2005559	Identifier	i		2005121	0					
ANR	2005560	MultiplicativeExpression	width * step		2005121	1		*			
ANR	2005561	Identifier	width		2005121	0					
ANR	2005562	Identifier	step		2005121	1					
ANR	2005563	AssignmentExpression	i += step	143:42:2646:2654	2005121	2	True	+=			
ANR	2005564	Identifier	i		2005121	0					
ANR	2005565	Identifier	step		2005121	1					
ANR	2005566	CompoundStatement		135:53:2424:2424	2005121	3					
ANR	2005567	ExpressionStatement	"pix = get_vlc2 ( & gb , vlc . table , VLC_BITS , 3 )"	145:16:2676:2719	2005121	0	True				
ANR	2005568	AssignmentExpression	"pix = get_vlc2 ( & gb , vlc . table , VLC_BITS , 3 )"		2005121	0		=			
ANR	2005569	Identifier	pix		2005121	0					
ANR	2005570	CallExpression	"get_vlc2 ( & gb , vlc . table , VLC_BITS , 3 )"		2005121	1					
ANR	2005571	Callee	get_vlc2		2005121	0					
ANR	2005572	Identifier	get_vlc2		2005121	0					
ANR	2005573	ArgumentList	& gb		2005121	1					
ANR	2005574	Argument	& gb		2005121	0					
ANR	2005575	UnaryOperationExpression	& gb		2005121	0					
ANR	2005576	UnaryOperator	&		2005121	0					
ANR	2005577	Identifier	gb		2005121	1					
ANR	2005578	Argument	vlc . table		2005121	1					
ANR	2005579	MemberAccess	vlc . table		2005121	0					
ANR	2005580	Identifier	vlc		2005121	0					
ANR	2005581	Identifier	table		2005121	1					
ANR	2005582	Argument	VLC_BITS		2005121	2					
ANR	2005583	Identifier	VLC_BITS		2005121	0					
ANR	2005584	Argument	3		2005121	3					
ANR	2005585	PrimaryExpression	3		2005121	0					
ANR	2005586	IfStatement	if ( pix < 0 )		2005121	1					
ANR	2005587	Condition	pix < 0	147:20:2742:2748	2005121	0	True				
ANR	2005588	RelationalExpression	pix < 0		2005121	0		<			
ANR	2005589	Identifier	pix		2005121	0					
ANR	2005590	PrimaryExpression	0		2005121	1					
ANR	2005591	CompoundStatement		139:29:2518:2518	2005121	1					
ANR	2005592	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Decoding error\\n"" )"	149:20:2774:2824	2005121	0	True				
ANR	2005593	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Decoding error\\n"" )"		2005121	0					
ANR	2005594	Callee	av_log		2005121	0					
ANR	2005595	Identifier	av_log		2005121	0					
ANR	2005596	ArgumentList	c -> avctx		2005121	1					
ANR	2005597	Argument	c -> avctx		2005121	0					
ANR	2005598	PtrMemberAccess	c -> avctx		2005121	0					
ANR	2005599	Identifier	c		2005121	0					
ANR	2005600	Identifier	avctx		2005121	1					
ANR	2005601	Argument	AV_LOG_ERROR		2005121	1					
ANR	2005602	Identifier	AV_LOG_ERROR		2005121	0					
ANR	2005603	Argument	"""Decoding error\\n"""		2005121	2					
ANR	2005604	PrimaryExpression	"""Decoding error\\n"""		2005121	0					
ANR	2005605	GotoStatement	goto fail ;	151:20:2847:2856	2005121	1	True				
ANR	2005606	Identifier	fail		2005121	0					
ANR	2005607	IfStatement	if ( use_pred )		2005121	2					
ANR	2005608	Condition	use_pred	155:20:2898:2905	2005121	0	True				
ANR	2005609	Identifier	use_pred		2005121	0					
ANR	2005610	CompoundStatement		147:30:2675:2675	2005121	1					
ANR	2005611	ExpressionStatement	prev += pix	157:20:2931:2942	2005121	0	True				
ANR	2005612	AssignmentExpression	prev += pix		2005121	0		+=			
ANR	2005613	Identifier	prev		2005121	0					
ANR	2005614	Identifier	pix		2005121	1					
ANR	2005615	ExpressionStatement	pix = prev	159:20:2965:2977	2005121	1	True				
ANR	2005616	AssignmentExpression	pix = prev		2005121	0		=			
ANR	2005617	Identifier	pix		2005121	0					
ANR	2005618	Identifier	prev		2005121	1					
ANR	2005619	ExpressionStatement	dest [ i ] = pix	163:16:3015:3028	2005121	3	True				
ANR	2005620	AssignmentExpression	dest [ i ] = pix		2005121	0		=			
ANR	2005621	ArrayIndexing	dest [ i ]		2005121	0					
ANR	2005622	Identifier	dest		2005121	0					
ANR	2005623	Identifier	i		2005121	1					
ANR	2005624	Identifier	pix		2005121	1					
ANR	2005625	IfStatement	if ( get_bits_left ( & gb ) < 0 )		2005121	1					
ANR	2005626	Condition	get_bits_left ( & gb ) < 0	167:16:3062:3083	2005121	0	True				
ANR	2005627	RelationalExpression	get_bits_left ( & gb ) < 0		2005121	0		<			
ANR	2005628	CallExpression	get_bits_left ( & gb )		2005121	0					
ANR	2005629	Callee	get_bits_left		2005121	0					
ANR	2005630	Identifier	get_bits_left		2005121	0					
ANR	2005631	ArgumentList	& gb		2005121	1					
ANR	2005632	Argument	& gb		2005121	0					
ANR	2005633	UnaryOperationExpression	& gb		2005121	0					
ANR	2005634	UnaryOperator	&		2005121	0					
ANR	2005635	Identifier	gb		2005121	1					
ANR	2005636	PrimaryExpression	0		2005121	1					
ANR	2005637	CompoundStatement		159:40:2853:2853	2005121	1					
ANR	2005638	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_ERROR , ""Slice decoding ran out of bits\\n"" )"	169:16:3105:3196	2005121	0	True				
ANR	2005639	CallExpression	"av_log ( c -> avctx , AV_LOG_ERROR , ""Slice decoding ran out of bits\\n"" )"		2005121	0					
ANR	2005640	Callee	av_log		2005121	0					
ANR	2005641	Identifier	av_log		2005121	0					
ANR	2005642	ArgumentList	c -> avctx		2005121	1					
ANR	2005643	Argument	c -> avctx		2005121	0					
ANR	2005644	PtrMemberAccess	c -> avctx		2005121	0					
ANR	2005645	Identifier	c		2005121	0					
ANR	2005646	Identifier	avctx		2005121	1					
ANR	2005647	Argument	AV_LOG_ERROR		2005121	1					
ANR	2005648	Identifier	AV_LOG_ERROR		2005121	0					
ANR	2005649	Argument	"""Slice decoding ran out of bits\\n"""		2005121	2					
ANR	2005650	PrimaryExpression	"""Slice decoding ran out of bits\\n"""		2005121	0					
ANR	2005651	GotoStatement	goto fail ;	173:16:3215:3224	2005121	1	True				
ANR	2005652	Identifier	fail		2005121	0					
ANR	2005653	ExpressionStatement	dest += stride	177:12:3254:3268	2005121	2	True				
ANR	2005654	AssignmentExpression	dest += stride		2005121	0		+=			
ANR	2005655	Identifier	dest		2005121	0					
ANR	2005656	Identifier	stride		2005121	1					
ANR	2005657	IfStatement	if ( get_bits_left ( & gb ) > 32 )		2005121	14					
ANR	2005658	Condition	get_bits_left ( & gb ) > 32	181:12:3294:3316	2005121	0	True				
ANR	2005659	RelationalExpression	get_bits_left ( & gb ) > 32		2005121	0		>			
ANR	2005660	CallExpression	get_bits_left ( & gb )		2005121	0					
ANR	2005661	Callee	get_bits_left		2005121	0					
ANR	2005662	Identifier	get_bits_left		2005121	0					
ANR	2005663	ArgumentList	& gb		2005121	1					
ANR	2005664	Argument	& gb		2005121	0					
ANR	2005665	UnaryOperationExpression	& gb		2005121	0					
ANR	2005666	UnaryOperator	&		2005121	0					
ANR	2005667	Identifier	gb		2005121	1					
ANR	2005668	PrimaryExpression	32		2005121	1					
ANR	2005669	ExpressionStatement	"av_log ( c -> avctx , AV_LOG_WARNING , ""%d bits left after decoding slice\\n"" , get_bits_left ( & gb ) )"	183:12:3332:3443	2005121	1	True				
ANR	2005670	CallExpression	"av_log ( c -> avctx , AV_LOG_WARNING , ""%d bits left after decoding slice\\n"" , get_bits_left ( & gb ) )"		2005121	0					
ANR	2005671	Callee	av_log		2005121	0					
ANR	2005672	Identifier	av_log		2005121	0					
ANR	2005673	ArgumentList	c -> avctx		2005121	1					
ANR	2005674	Argument	c -> avctx		2005121	0					
ANR	2005675	PtrMemberAccess	c -> avctx		2005121	0					
ANR	2005676	Identifier	c		2005121	0					
ANR	2005677	Identifier	avctx		2005121	1					
ANR	2005678	Argument	AV_LOG_WARNING		2005121	1					
ANR	2005679	Identifier	AV_LOG_WARNING		2005121	0					
ANR	2005680	Argument	"""%d bits left after decoding slice\\n"""		2005121	2					
ANR	2005681	PrimaryExpression	"""%d bits left after decoding slice\\n"""		2005121	0					
ANR	2005682	Argument	get_bits_left ( & gb )		2005121	3					
ANR	2005683	CallExpression	get_bits_left ( & gb )		2005121	0					
ANR	2005684	Callee	get_bits_left		2005121	0					
ANR	2005685	Identifier	get_bits_left		2005121	0					
ANR	2005686	ArgumentList	& gb		2005121	1					
ANR	2005687	Argument	& gb		2005121	0					
ANR	2005688	UnaryOperationExpression	& gb		2005121	0					
ANR	2005689	UnaryOperator	&		2005121	0					
ANR	2005690	Identifier	gb		2005121	1					
ANR	2005691	ExpressionStatement	ff_free_vlc ( & vlc )	191:4:3459:3476	2005121	11	True				
ANR	2005692	CallExpression	ff_free_vlc ( & vlc )		2005121	0					
ANR	2005693	Callee	ff_free_vlc		2005121	0					
ANR	2005694	Identifier	ff_free_vlc		2005121	0					
ANR	2005695	ArgumentList	& vlc		2005121	1					
ANR	2005696	Argument	& vlc		2005121	0					
ANR	2005697	UnaryOperationExpression	& vlc		2005121	0					
ANR	2005698	UnaryOperator	&		2005121	0					
ANR	2005699	Identifier	vlc		2005121	1					
ANR	2005700	ReturnStatement	return 0 ;	195:4:3485:3493	2005121	12	True				
ANR	2005701	PrimaryExpression	0		2005121	0					
ANR	2005702	Label	fail :	197:0:3496:3500	2005121	13	True				
ANR	2005703	Identifier	fail		2005121	0					
ANR	2005704	ExpressionStatement	ff_free_vlc ( & vlc )	199:4:3507:3524	2005121	14	True				
ANR	2005705	CallExpression	ff_free_vlc ( & vlc )		2005121	0					
ANR	2005706	Callee	ff_free_vlc		2005121	0					
ANR	2005707	Identifier	ff_free_vlc		2005121	0					
ANR	2005708	ArgumentList	& vlc		2005121	1					
ANR	2005709	Argument	& vlc		2005121	0					
ANR	2005710	UnaryOperationExpression	& vlc		2005121	0					
ANR	2005711	UnaryOperator	&		2005121	0					
ANR	2005712	Identifier	vlc		2005121	1					
ANR	2005713	ReturnStatement	return AVERROR_INVALIDDATA ;	201:4:3531:3557	2005121	15	True				
ANR	2005714	Identifier	AVERROR_INVALIDDATA		2005121	0					
ANR	2005715	ReturnType	static int		2005121	1					
ANR	2005716	Identifier	decode_plane		2005121	2					
ANR	2005717	ParameterList	"UtvideoContext * c , int plane_no , uint8_t * dst , int step , ptrdiff_t stride , int width , int height , const uint8_t * src , int use_pred"		2005121	3					
ANR	2005718	Parameter	UtvideoContext * c	1:24:24:40	2005121	0	True				
ANR	2005719	ParameterType	UtvideoContext *		2005121	0					
ANR	2005720	Identifier	c		2005121	1					
ANR	2005721	Parameter	int plane_no	1:43:43:54	2005121	1	True				
ANR	2005722	ParameterType	int		2005121	0					
ANR	2005723	Identifier	plane_no		2005121	1					
ANR	2005724	Parameter	uint8_t * dst	3:24:82:93	2005121	2	True				
ANR	2005725	ParameterType	uint8_t *		2005121	0					
ANR	2005726	Identifier	dst		2005121	1					
ANR	2005727	Parameter	int step	3:38:96:103	2005121	3	True				
ANR	2005728	ParameterType	int		2005121	0					
ANR	2005729	Identifier	step		2005121	1					
ANR	2005730	Parameter	ptrdiff_t stride	3:48:106:121	2005121	4	True				
ANR	2005731	ParameterType	ptrdiff_t		2005121	0					
ANR	2005732	Identifier	stride		2005121	1					
ANR	2005733	Parameter	int width	5:24:149:157	2005121	5	True				
ANR	2005734	ParameterType	int		2005121	0					
ANR	2005735	Identifier	width		2005121	1					
ANR	2005736	Parameter	int height	5:35:160:169	2005121	6	True				
ANR	2005737	ParameterType	int		2005121	0					
ANR	2005738	Identifier	height		2005121	1					
ANR	2005739	Parameter	const uint8_t * src	7:24:197:214	2005121	7	True				
ANR	2005740	ParameterType	const uint8_t *		2005121	0					
ANR	2005741	Identifier	src		2005121	1					
ANR	2005742	Parameter	int use_pred	7:44:217:228	2005121	8	True				
ANR	2005743	ParameterType	int		2005121	0					
ANR	2005744	Identifier	use_pred		2005121	1					
ANR	2005745	CFGEntryNode	ENTRY		2005121		True				
ANR	2005746	CFGExitNode	EXIT		2005121		True				
ANR	2005747	Symbol	& gb		2005121						
ANR	2005748	Symbol	slice_size		2005121						
ANR	2005749	Symbol	sstart		2005121						
ANR	2005750	Symbol	prev		2005121						
ANR	2005751	Symbol	AV_INPUT_BUFFER_PADDING_SIZE		2005121						
ANR	2005752	Symbol	stride		2005121						
ANR	2005753	Symbol	dest		2005121						
ANR	2005754	Symbol	& fsym		2005121						
ANR	2005755	Symbol	fsym		2005121						
ANR	2005756	Symbol	slice		2005121						
ANR	2005757	Symbol	VLC_BITS		2005121						
ANR	2005758	Symbol	pix		2005121						
ANR	2005759	Symbol	height		2005121						
ANR	2005760	Symbol	c -> bdsp		2005121						
ANR	2005761	Symbol	c -> slices		2005121						
ANR	2005762	Symbol	vlc . table		2005121						
ANR	2005763	Symbol	* * c		2005121						
ANR	2005764	Symbol	AV_PIX_FMT_YUV420P		2005121						
ANR	2005765	Symbol	c -> avctx		2005121						
ANR	2005766	Symbol	send		2005121						
ANR	2005767	Symbol	c -> avctx -> pix_fmt		2005121						
ANR	2005768	Symbol	dst		2005121						
ANR	2005769	Symbol	* dest		2005121						
ANR	2005770	Symbol	* c -> avctx		2005121						
ANR	2005771	Symbol	use_pred		2005121						
ANR	2005772	Symbol	get_bits_left		2005121						
ANR	2005773	Symbol	build_huff		2005121						
ANR	2005774	Symbol	& vlc		2005121						
ANR	2005775	Symbol	gb		2005121						
ANR	2005776	Symbol	c -> slice_bits		2005121						
ANR	2005777	Symbol	c		2005121						
ANR	2005778	Symbol	slice_data_start		2005121						
ANR	2005779	Symbol	AV_LOG_ERROR		2005121						
ANR	2005780	Symbol	src		2005121						
ANR	2005781	Symbol	c -> interlaced		2005121						
ANR	2005782	Symbol	i		2005121						
ANR	2005783	Symbol	cmask		2005121						
ANR	2005784	Symbol	j		2005121						
ANR	2005785	Symbol	plane_no		2005121						
ANR	2005786	Symbol	vlc		2005121						
ANR	2005787	Symbol	* c		2005121						
ANR	2005788	Symbol	slice_data_end		2005121						
ANR	2005789	Symbol	* i		2005121						
ANR	2005790	Symbol	AV_RL32		2005121						
ANR	2005791	Symbol	width		2005121						
ANR	2005792	Symbol	step		2005121						
ANR	2005793	Symbol	AVERROR_INVALIDDATA		2005121						
ANR	2005794	Symbol	get_vlc2		2005121						
ANR	2005795	Symbol	AV_LOG_WARNING		2005121						
