command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1396214	File	/home/p4ultr4n/workplace/ReVeal/raw_code/configure_accelerator_01_0.c								
ANR	1396215	Function	configure_accelerator	1:0:0:1792							
ANR	1396216	FunctionDef	configure_accelerator (MachineClass * mc)		1396215	0					
ANR	1396217	CompoundStatement		3:0:52:1792	1396215	0					
ANR	1396218	IdentifierDeclStatement	const char * p ;	5:4:59:72	1396215	0	True				
ANR	1396219	IdentifierDecl	* p		1396215	0					
ANR	1396220	IdentifierDeclType	const char *		1396215	0					
ANR	1396221	Identifier	p		1396215	1					
ANR	1396222	IdentifierDeclStatement	char buf [ 10 ] ;	7:4:79:91	1396215	1	True				
ANR	1396223	IdentifierDecl	buf [ 10 ]		1396215	0					
ANR	1396224	IdentifierDeclType	char [ 10 ]		1396215	0					
ANR	1396225	Identifier	buf		1396215	1					
ANR	1396226	PrimaryExpression	10		1396215	2					
ANR	1396227	IdentifierDeclStatement	"int i , ret ;"	9:4:98:108	1396215	2	True				
ANR	1396228	IdentifierDecl	i		1396215	0					
ANR	1396229	IdentifierDeclType	int		1396215	0					
ANR	1396230	Identifier	i		1396215	1					
ANR	1396231	IdentifierDecl	ret		1396215	1					
ANR	1396232	IdentifierDeclType	int		1396215	0					
ANR	1396233	Identifier	ret		1396215	1					
ANR	1396234	IdentifierDeclStatement	bool accel_initialised = false ;	11:4:115:145	1396215	3	True				
ANR	1396235	IdentifierDecl	accel_initialised = false		1396215	0					
ANR	1396236	IdentifierDeclType	bool		1396215	0					
ANR	1396237	Identifier	accel_initialised		1396215	1					
ANR	1396238	AssignmentExpression	accel_initialised = false		1396215	2		=			
ANR	1396239	Identifier	false		1396215	0					
ANR	1396240	Identifier	false		1396215	1					
ANR	1396241	IdentifierDeclStatement	bool init_failed = false ;	13:4:152:176	1396215	4	True				
ANR	1396242	IdentifierDecl	init_failed = false		1396215	0					
ANR	1396243	IdentifierDeclType	bool		1396215	0					
ANR	1396244	Identifier	init_failed		1396215	1					
ANR	1396245	AssignmentExpression	init_failed = false		1396215	2		=			
ANR	1396246	Identifier	false		1396215	0					
ANR	1396247	Identifier	false		1396215	1					
ANR	1396248	ExpressionStatement	"p = qemu_opt_get ( qemu_get_machine_opts ( ) , ""accel"" )"	17:4:185:235	1396215	5	True				
ANR	1396249	AssignmentExpression	"p = qemu_opt_get ( qemu_get_machine_opts ( ) , ""accel"" )"		1396215	0		=			
ANR	1396250	Identifier	p		1396215	0					
ANR	1396251	CallExpression	"qemu_opt_get ( qemu_get_machine_opts ( ) , ""accel"" )"		1396215	1					
ANR	1396252	Callee	qemu_opt_get		1396215	0					
ANR	1396253	Identifier	qemu_opt_get		1396215	0					
ANR	1396254	ArgumentList	qemu_get_machine_opts ( )		1396215	1					
ANR	1396255	Argument	qemu_get_machine_opts ( )		1396215	0					
ANR	1396256	CallExpression	qemu_get_machine_opts ( )		1396215	0					
ANR	1396257	Callee	qemu_get_machine_opts		1396215	0					
ANR	1396258	Identifier	qemu_get_machine_opts		1396215	0					
ANR	1396259	ArgumentList			1396215	1					
ANR	1396260	Argument	"""accel"""		1396215	1					
ANR	1396261	PrimaryExpression	"""accel"""		1396215	0					
ANR	1396262	IfStatement	if ( p == NULL )		1396215	6					
ANR	1396263	Condition	p == NULL	19:8:246:254	1396215	0	True				
ANR	1396264	EqualityExpression	p == NULL		1396215	0		==			
ANR	1396265	Identifier	p		1396215	0					
ANR	1396266	Identifier	NULL		1396215	1					
ANR	1396267	CompoundStatement		17:19:204:204	1396215	1					
ANR	1396268	ExpressionStatement	"p = ""tcg"""	23:8:318:327	1396215	0	True				
ANR	1396269	AssignmentExpression	"p = ""tcg"""		1396215	0		=			
ANR	1396270	Identifier	p		1396215	0					
ANR	1396271	PrimaryExpression	"""tcg"""		1396215	1					
ANR	1396272	WhileStatement	while ( ! accel_initialised && * p != '\\0' )		1396215	7					
ANR	1396273	Condition	! accel_initialised && * p != '\\0'	29:11:350:381	1396215	0	True				
ANR	1396274	AndExpression	! accel_initialised && * p != '\\0'		1396215	0		&&			
ANR	1396275	UnaryOperationExpression	! accel_initialised		1396215	0					
ANR	1396276	UnaryOperator	!		1396215	0					
ANR	1396277	Identifier	accel_initialised		1396215	1					
ANR	1396278	EqualityExpression	* p != '\\0'		1396215	1		!=			
ANR	1396279	UnaryOperationExpression	* p		1396215	0					
ANR	1396280	UnaryOperator	*		1396215	0					
ANR	1396281	Identifier	p		1396215	1					
ANR	1396282	PrimaryExpression	'\\0'		1396215	1					
ANR	1396283	CompoundStatement		27:45:331:331	1396215	1					
ANR	1396284	IfStatement	if ( * p == ':' )		1396215	0					
ANR	1396285	Condition	* p == ':'	31:12:399:407	1396215	0	True				
ANR	1396286	EqualityExpression	* p == ':'		1396215	0		==			
ANR	1396287	UnaryOperationExpression	* p		1396215	0					
ANR	1396288	UnaryOperator	*		1396215	0					
ANR	1396289	Identifier	p		1396215	1					
ANR	1396290	PrimaryExpression	':'		1396215	1					
ANR	1396291	CompoundStatement		29:23:357:357	1396215	1					
ANR	1396292	ExpressionStatement	p ++	33:12:425:428	1396215	0	True				
ANR	1396293	PostIncDecOperationExpression	p ++		1396215	0					
ANR	1396294	Identifier	p		1396215	0					
ANR	1396295	IncDec	++		1396215	1					
ANR	1396296	ExpressionStatement	"p = get_opt_name ( buf , sizeof ( buf ) , p , ':' )"	37:8:450:493	1396215	1	True				
ANR	1396297	AssignmentExpression	"p = get_opt_name ( buf , sizeof ( buf ) , p , ':' )"		1396215	0		=			
ANR	1396298	Identifier	p		1396215	0					
ANR	1396299	CallExpression	"get_opt_name ( buf , sizeof ( buf ) , p , ':' )"		1396215	1					
ANR	1396300	Callee	get_opt_name		1396215	0					
ANR	1396301	Identifier	get_opt_name		1396215	0					
ANR	1396302	ArgumentList	buf		1396215	1					
ANR	1396303	Argument	buf		1396215	0					
ANR	1396304	Identifier	buf		1396215	0					
ANR	1396305	Argument	sizeof ( buf )		1396215	1					
ANR	1396306	SizeofExpression	sizeof ( buf )		1396215	0					
ANR	1396307	Sizeof	sizeof		1396215	0					
ANR	1396308	SizeofOperand	buf		1396215	1					
ANR	1396309	Argument	p		1396215	2					
ANR	1396310	Identifier	p		1396215	0					
ANR	1396311	Argument	':'		1396215	3					
ANR	1396312	PrimaryExpression	':'		1396215	0					
ANR	1396313	ForStatement	for ( i = 0 ; i < ARRAY_SIZE ( accel_list ) ; i ++ )		1396215	2					
ANR	1396314	ForInit	i = 0 ;	39:13:509:514	1396215	0	True				
ANR	1396315	AssignmentExpression	i = 0		1396215	0		=			
ANR	1396316	Identifier	i		1396215	0					
ANR	1396317	PrimaryExpression	0		1396215	1					
ANR	1396318	Condition	i < ARRAY_SIZE ( accel_list )	39:20:516:541	1396215	1	True				
ANR	1396319	RelationalExpression	i < ARRAY_SIZE ( accel_list )		1396215	0		<			
ANR	1396320	Identifier	i		1396215	0					
ANR	1396321	CallExpression	ARRAY_SIZE ( accel_list )		1396215	1					
ANR	1396322	Callee	ARRAY_SIZE		1396215	0					
ANR	1396323	Identifier	ARRAY_SIZE		1396215	0					
ANR	1396324	ArgumentList	accel_list		1396215	1					
ANR	1396325	Argument	accel_list		1396215	0					
ANR	1396326	Identifier	accel_list		1396215	0					
ANR	1396327	PostIncDecOperationExpression	i ++	39:48:544:546	1396215	2	True				
ANR	1396328	Identifier	i		1396215	0					
ANR	1396329	IncDec	++		1396215	1					
ANR	1396330	CompoundStatement		37:53:496:496	1396215	3					
ANR	1396331	IfStatement	"if ( strcmp ( accel_list [ i ] . opt_name , buf ) == 0 )"		1396215	0					
ANR	1396332	Condition	"strcmp ( accel_list [ i ] . opt_name , buf ) == 0"	41:16:568:607	1396215	0	True				
ANR	1396333	EqualityExpression	"strcmp ( accel_list [ i ] . opt_name , buf ) == 0"		1396215	0		==			
ANR	1396334	CallExpression	"strcmp ( accel_list [ i ] . opt_name , buf )"		1396215	0					
ANR	1396335	Callee	strcmp		1396215	0					
ANR	1396336	Identifier	strcmp		1396215	0					
ANR	1396337	ArgumentList	accel_list [ i ] . opt_name		1396215	1					
ANR	1396338	Argument	accel_list [ i ] . opt_name		1396215	0					
ANR	1396339	MemberAccess	accel_list [ i ] . opt_name		1396215	0					
ANR	1396340	ArrayIndexing	accel_list [ i ]		1396215	0					
ANR	1396341	Identifier	accel_list		1396215	0					
ANR	1396342	Identifier	i		1396215	1					
ANR	1396343	Identifier	opt_name		1396215	1					
ANR	1396344	Argument	buf		1396215	1					
ANR	1396345	Identifier	buf		1396215	0					
ANR	1396346	PrimaryExpression	0		1396215	1					
ANR	1396347	CompoundStatement		39:58:557:557	1396215	1					
ANR	1396348	IfStatement	if ( ! accel_list [ i ] . available ( ) )		1396215	0					
ANR	1396349	Condition	! accel_list [ i ] . available ( )	43:20:633:658	1396215	0	True				
ANR	1396350	UnaryOperationExpression	! accel_list [ i ] . available ( )		1396215	0					
ANR	1396351	UnaryOperator	!		1396215	0					
ANR	1396352	CallExpression	accel_list [ i ] . available ( )		1396215	1					
ANR	1396353	Callee	accel_list [ i ] . available		1396215	0					
ANR	1396354	MemberAccess	accel_list [ i ] . available		1396215	0					
ANR	1396355	ArrayIndexing	accel_list [ i ]		1396215	0					
ANR	1396356	Identifier	accel_list		1396215	0					
ANR	1396357	Identifier	i		1396215	1					
ANR	1396358	Identifier	available		1396215	1					
ANR	1396359	ArgumentList			1396215	1					
ANR	1396360	CompoundStatement		41:48:608:608	1396215	1					
ANR	1396361	ExpressionStatement	"printf ( ""%s not supported for this target\\n"" , accel_list [ i ] . name )"	45:20:684:776	1396215	0	True				
ANR	1396362	CallExpression	"printf ( ""%s not supported for this target\\n"" , accel_list [ i ] . name )"		1396215	0					
ANR	1396363	Callee	printf		1396215	0					
ANR	1396364	Identifier	printf		1396215	0					
ANR	1396365	ArgumentList	"""%s not supported for this target\\n"""		1396215	1					
ANR	1396366	Argument	"""%s not supported for this target\\n"""		1396215	0					
ANR	1396367	PrimaryExpression	"""%s not supported for this target\\n"""		1396215	0					
ANR	1396368	Argument	accel_list [ i ] . name		1396215	1					
ANR	1396369	MemberAccess	accel_list [ i ] . name		1396215	0					
ANR	1396370	ArrayIndexing	accel_list [ i ]		1396215	0					
ANR	1396371	Identifier	accel_list		1396215	0					
ANR	1396372	Identifier	i		1396215	1					
ANR	1396373	Identifier	name		1396215	1					
ANR	1396374	BreakStatement	break ;	49:20:799:804	1396215	1	True				
ANR	1396375	ExpressionStatement	* ( accel_list [ i ] . allowed ) = true	53:16:842:873	1396215	1	True				
ANR	1396376	AssignmentExpression	* ( accel_list [ i ] . allowed ) = true		1396215	0		=			
ANR	1396377	UnaryOperationExpression	* ( accel_list [ i ] . allowed )		1396215	0					
ANR	1396378	UnaryOperator	*		1396215	0					
ANR	1396379	MemberAccess	accel_list [ i ] . allowed		1396215	1					
ANR	1396380	ArrayIndexing	accel_list [ i ]		1396215	0					
ANR	1396381	Identifier	accel_list		1396215	0					
ANR	1396382	Identifier	i		1396215	1					
ANR	1396383	Identifier	allowed		1396215	1					
ANR	1396384	Identifier	true		1396215	1					
ANR	1396385	ExpressionStatement	ret = accel_list [ i ] . init ( mc )	55:16:892:920	1396215	2	True				
ANR	1396386	AssignmentExpression	ret = accel_list [ i ] . init ( mc )		1396215	0		=			
ANR	1396387	Identifier	ret		1396215	0					
ANR	1396388	CallExpression	accel_list [ i ] . init ( mc )		1396215	1					
ANR	1396389	Callee	accel_list [ i ] . init		1396215	0					
ANR	1396390	MemberAccess	accel_list [ i ] . init		1396215	0					
ANR	1396391	ArrayIndexing	accel_list [ i ]		1396215	0					
ANR	1396392	Identifier	accel_list		1396215	0					
ANR	1396393	Identifier	i		1396215	1					
ANR	1396394	Identifier	init		1396215	1					
ANR	1396395	ArgumentList	mc		1396215	1					
ANR	1396396	Argument	mc		1396215	0					
ANR	1396397	Identifier	mc		1396215	0					
ANR	1396398	IfStatement	if ( ret < 0 )		1396215	3					
ANR	1396399	Condition	ret < 0	57:20:943:949	1396215	0	True				
ANR	1396400	RelationalExpression	ret < 0		1396215	0		<			
ANR	1396401	Identifier	ret		1396215	0					
ANR	1396402	PrimaryExpression	0		1396215	1					
ANR	1396403	CompoundStatement		55:29:899:899	1396215	1					
ANR	1396404	ExpressionStatement	init_failed = true	59:20:975:993	1396215	0	True				
ANR	1396405	AssignmentExpression	init_failed = true		1396215	0		=			
ANR	1396406	Identifier	init_failed		1396215	0					
ANR	1396407	Identifier	true		1396215	1					
ANR	1396408	ExpressionStatement	"fprintf ( stderr , ""failed to initialize %s: %s\\n"" , accel_list [ i ] . name , strerror ( - ret ) )"	61:20:1016:1158	1396215	1	True				
ANR	1396409	CallExpression	"fprintf ( stderr , ""failed to initialize %s: %s\\n"" , accel_list [ i ] . name , strerror ( - ret ) )"		1396215	0					
ANR	1396410	Callee	fprintf		1396215	0					
ANR	1396411	Identifier	fprintf		1396215	0					
ANR	1396412	ArgumentList	stderr		1396215	1					
ANR	1396413	Argument	stderr		1396215	0					
ANR	1396414	Identifier	stderr		1396215	0					
ANR	1396415	Argument	"""failed to initialize %s: %s\\n"""		1396215	1					
ANR	1396416	PrimaryExpression	"""failed to initialize %s: %s\\n"""		1396215	0					
ANR	1396417	Argument	accel_list [ i ] . name		1396215	2					
ANR	1396418	MemberAccess	accel_list [ i ] . name		1396215	0					
ANR	1396419	ArrayIndexing	accel_list [ i ]		1396215	0					
ANR	1396420	Identifier	accel_list		1396215	0					
ANR	1396421	Identifier	i		1396215	1					
ANR	1396422	Identifier	name		1396215	1					
ANR	1396423	Argument	strerror ( - ret )		1396215	3					
ANR	1396424	CallExpression	strerror ( - ret )		1396215	0					
ANR	1396425	Callee	strerror		1396215	0					
ANR	1396426	Identifier	strerror		1396215	0					
ANR	1396427	ArgumentList	- ret		1396215	1					
ANR	1396428	Argument	- ret		1396215	0					
ANR	1396429	UnaryOperationExpression	- ret		1396215	0					
ANR	1396430	UnaryOperator	-		1396215	0					
ANR	1396431	Identifier	ret		1396215	1					
ANR	1396432	ExpressionStatement	* ( accel_list [ i ] . allowed ) = false	67:20:1181:1213	1396215	2	True				
ANR	1396433	AssignmentExpression	* ( accel_list [ i ] . allowed ) = false		1396215	0		=			
ANR	1396434	UnaryOperationExpression	* ( accel_list [ i ] . allowed )		1396215	0					
ANR	1396435	UnaryOperator	*		1396215	0					
ANR	1396436	MemberAccess	accel_list [ i ] . allowed		1396215	1					
ANR	1396437	ArrayIndexing	accel_list [ i ]		1396215	0					
ANR	1396438	Identifier	accel_list		1396215	0					
ANR	1396439	Identifier	i		1396215	1					
ANR	1396440	Identifier	allowed		1396215	1					
ANR	1396441	Identifier	false		1396215	1					
ANR	1396442	ElseStatement	else		1396215	0					
ANR	1396443	CompoundStatement		67:23:1186:1186	1396215	0					
ANR	1396444	ExpressionStatement	accel_initialised = true	71:20:1262:1286	1396215	0	True				
ANR	1396445	AssignmentExpression	accel_initialised = true		1396215	0		=			
ANR	1396446	Identifier	accel_initialised		1396215	0					
ANR	1396447	Identifier	true		1396215	1					
ANR	1396448	BreakStatement	break ;	75:16:1324:1329	1396215	4	True				
ANR	1396449	IfStatement	if ( i == ARRAY_SIZE ( accel_list ) )		1396215	3					
ANR	1396450	Condition	i == ARRAY_SIZE ( accel_list )	81:12:1370:1396	1396215	0	True				
ANR	1396451	EqualityExpression	i == ARRAY_SIZE ( accel_list )		1396215	0		==			
ANR	1396452	Identifier	i		1396215	0					
ANR	1396453	CallExpression	ARRAY_SIZE ( accel_list )		1396215	1					
ANR	1396454	Callee	ARRAY_SIZE		1396215	0					
ANR	1396455	Identifier	ARRAY_SIZE		1396215	0					
ANR	1396456	ArgumentList	accel_list		1396215	1					
ANR	1396457	Argument	accel_list		1396215	0					
ANR	1396458	Identifier	accel_list		1396215	0					
ANR	1396459	CompoundStatement		79:41:1346:1346	1396215	1					
ANR	1396460	ExpressionStatement	"fprintf ( stderr , ""\\""%s\\"" accelerator does not exist.\\n"" , buf )"	83:12:1414:1474	1396215	0	True				
ANR	1396461	CallExpression	"fprintf ( stderr , ""\\""%s\\"" accelerator does not exist.\\n"" , buf )"		1396215	0					
ANR	1396462	Callee	fprintf		1396215	0					
ANR	1396463	Identifier	fprintf		1396215	0					
ANR	1396464	ArgumentList	stderr		1396215	1					
ANR	1396465	Argument	stderr		1396215	0					
ANR	1396466	Identifier	stderr		1396215	0					
ANR	1396467	Argument	"""\\""%s\\"" accelerator does not exist.\\n"""		1396215	1					
ANR	1396468	PrimaryExpression	"""\\""%s\\"" accelerator does not exist.\\n"""		1396215	0					
ANR	1396469	Argument	buf		1396215	2					
ANR	1396470	Identifier	buf		1396215	0					
ANR	1396471	IfStatement	if ( ! accel_initialised )		1396215	8					
ANR	1396472	Condition	! accel_initialised	91:8:1505:1522	1396215	0	True				
ANR	1396473	UnaryOperationExpression	! accel_initialised		1396215	0					
ANR	1396474	UnaryOperator	!		1396215	0					
ANR	1396475	Identifier	accel_initialised		1396215	1					
ANR	1396476	CompoundStatement		89:28:1472:1472	1396215	1					
ANR	1396477	IfStatement	if ( ! init_failed )		1396215	0					
ANR	1396478	Condition	! init_failed	93:12:1540:1551	1396215	0	True				
ANR	1396479	UnaryOperationExpression	! init_failed		1396215	0					
ANR	1396480	UnaryOperator	!		1396215	0					
ANR	1396481	Identifier	init_failed		1396215	1					
ANR	1396482	CompoundStatement		91:26:1501:1501	1396215	1					
ANR	1396483	ExpressionStatement	"fprintf ( stderr , ""No accelerator found!\\n"" )"	95:12:1569:1611	1396215	0	True				
ANR	1396484	CallExpression	"fprintf ( stderr , ""No accelerator found!\\n"" )"		1396215	0					
ANR	1396485	Callee	fprintf		1396215	0					
ANR	1396486	Identifier	fprintf		1396215	0					
ANR	1396487	ArgumentList	stderr		1396215	1					
ANR	1396488	Argument	stderr		1396215	0					
ANR	1396489	Identifier	stderr		1396215	0					
ANR	1396490	Argument	"""No accelerator found!\\n"""		1396215	1					
ANR	1396491	PrimaryExpression	"""No accelerator found!\\n"""		1396215	0					
ANR	1396492	ExpressionStatement	exit ( 1 )	99:8:1633:1640	1396215	1	True				
ANR	1396493	CallExpression	exit ( 1 )		1396215	0					
ANR	1396494	Callee	exit		1396215	0					
ANR	1396495	Identifier	exit		1396215	0					
ANR	1396496	ArgumentList	1		1396215	1					
ANR	1396497	Argument	1		1396215	0					
ANR	1396498	PrimaryExpression	1		1396215	0					
ANR	1396499	IfStatement	if ( init_failed )		1396215	9					
ANR	1396500	Condition	init_failed	105:8:1660:1670	1396215	0	True				
ANR	1396501	Identifier	init_failed		1396215	0					
ANR	1396502	CompoundStatement		103:21:1620:1620	1396215	1					
ANR	1396503	ExpressionStatement	"fprintf ( stderr , ""Back to %s accelerator.\\n"" , accel_list [ i ] . name )"	107:8:1684:1748	1396215	0	True				
ANR	1396504	CallExpression	"fprintf ( stderr , ""Back to %s accelerator.\\n"" , accel_list [ i ] . name )"		1396215	0					
ANR	1396505	Callee	fprintf		1396215	0					
ANR	1396506	Identifier	fprintf		1396215	0					
ANR	1396507	ArgumentList	stderr		1396215	1					
ANR	1396508	Argument	stderr		1396215	0					
ANR	1396509	Identifier	stderr		1396215	0					
ANR	1396510	Argument	"""Back to %s accelerator.\\n"""		1396215	1					
ANR	1396511	PrimaryExpression	"""Back to %s accelerator.\\n"""		1396215	0					
ANR	1396512	Argument	accel_list [ i ] . name		1396215	2					
ANR	1396513	MemberAccess	accel_list [ i ] . name		1396215	0					
ANR	1396514	ArrayIndexing	accel_list [ i ]		1396215	0					
ANR	1396515	Identifier	accel_list		1396215	0					
ANR	1396516	Identifier	i		1396215	1					
ANR	1396517	Identifier	name		1396215	1					
ANR	1396518	ReturnStatement	return ! accel_initialised ;	113:4:1764:1789	1396215	10	True				
ANR	1396519	UnaryOperationExpression	! accel_initialised		1396215	0					
ANR	1396520	UnaryOperator	!		1396215	0					
ANR	1396521	Identifier	accel_initialised		1396215	1					
ANR	1396522	ReturnType	static int		1396215	1					
ANR	1396523	Identifier	configure_accelerator		1396215	2					
ANR	1396524	ParameterList	MachineClass * mc		1396215	3					
ANR	1396525	Parameter	MachineClass * mc	1:33:33:48	1396215	0	True				
ANR	1396526	ParameterType	MachineClass *		1396215	0					
ANR	1396527	Identifier	mc		1396215	1					
ANR	1396528	CFGEntryNode	ENTRY		1396215		True				
ANR	1396529	CFGExitNode	EXIT		1396215		True				
ANR	1396530	Symbol	qemu_opt_get		1396215						
ANR	1396531	Symbol	qemu_get_machine_opts		1396215						
ANR	1396532	Symbol	accel_list [ i ] . opt_name		1396215						
ANR	1396533	Symbol	mc		1396215						
ANR	1396534	Symbol	accel_initialised		1396215						
ANR	1396535	Symbol	* accel_list [ i ] . allowed		1396215						
ANR	1396536	Symbol	ret		1396215						
ANR	1396537	Symbol	ARRAY_SIZE		1396215						
ANR	1396538	Symbol	strcmp		1396215						
ANR	1396539	Symbol	accel_list [ i ] . available		1396215						
ANR	1396540	Symbol	* * i		1396215						
ANR	1396541	Symbol	NULL		1396215						
ANR	1396542	Symbol	* accel_list		1396215						
ANR	1396543	Symbol	false		1396215						
ANR	1396544	Symbol	i		1396215						
ANR	1396545	Symbol	accel_list [ i ] . init		1396215						
ANR	1396546	Symbol	stderr		1396215						
ANR	1396547	Symbol	* * accel_list		1396215						
ANR	1396548	Symbol	accel_list [ i ] . name		1396215						
ANR	1396549	Symbol	p		1396215						
ANR	1396550	Symbol	init_failed		1396215						
ANR	1396551	Symbol	strerror		1396215						
ANR	1396552	Symbol	buf		1396215						
ANR	1396553	Symbol	* i		1396215						
ANR	1396554	Symbol	accel_list		1396215						
ANR	1396555	Symbol	true		1396215						
ANR	1396556	Symbol	* ( accel_list [ i ] . allowed )		1396215						
ANR	1396557	Symbol	* p		1396215						
ANR	1396558	Symbol	get_opt_name		1396215						
ANR	1396559	Symbol	accel_list [ i ] . allowed		1396215						
