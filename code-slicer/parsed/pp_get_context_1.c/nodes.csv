command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6582166	File	/home/p4ultr4n/workplace/ReVeal/raw_code/pp_get_context_1.c								
ANR	6582167	Function	pp_get_context	1:0:0:1018							
ANR	6582168	FunctionDef	"pp_get_context (int width , int height , int cpuCaps)"		6582167	0					
ANR	6582169	CompoundStatement		1:62:62:1018	6582167	0					
ANR	6582170	IdentifierDeclStatement	PPContext * c = av_mallocz ( sizeof ( PPContext ) ) ;	2:4:68:111	6582167	0	True				
ANR	6582171	IdentifierDecl	* c = av_mallocz ( sizeof ( PPContext ) )		6582167	0					
ANR	6582172	IdentifierDeclType	PPContext *		6582167	0					
ANR	6582173	Identifier	c		6582167	1					
ANR	6582174	AssignmentExpression	* c = av_mallocz ( sizeof ( PPContext ) )		6582167	2		=			
ANR	6582175	Identifier	c		6582167	0					
ANR	6582176	CallExpression	av_mallocz ( sizeof ( PPContext ) )		6582167	1					
ANR	6582177	Callee	av_mallocz		6582167	0					
ANR	6582178	Identifier	av_mallocz		6582167	0					
ANR	6582179	ArgumentList	sizeof ( PPContext )		6582167	1					
ANR	6582180	Argument	sizeof ( PPContext )		6582167	0					
ANR	6582181	SizeofExpression	sizeof ( PPContext )		6582167	0					
ANR	6582182	Sizeof	sizeof		6582167	0					
ANR	6582183	SizeofOperand	PPContext		6582167	1					
ANR	6582184	IdentifierDeclStatement	"int stride = FFALIGN ( width , 16 ) ;"	3:4:117:147	6582167	1	True				
ANR	6582185	IdentifierDecl	"stride = FFALIGN ( width , 16 )"		6582167	0					
ANR	6582186	IdentifierDeclType	int		6582167	0					
ANR	6582187	Identifier	stride		6582167	1					
ANR	6582188	AssignmentExpression	"stride = FFALIGN ( width , 16 )"		6582167	2		=			
ANR	6582189	Identifier	stride		6582167	0					
ANR	6582190	CallExpression	"FFALIGN ( width , 16 )"		6582167	1					
ANR	6582191	Callee	FFALIGN		6582167	0					
ANR	6582192	Identifier	FFALIGN		6582167	0					
ANR	6582193	ArgumentList	width		6582167	1					
ANR	6582194	Argument	width		6582167	0					
ANR	6582195	Identifier	width		6582167	0					
ANR	6582196	Argument	16		6582167	1					
ANR	6582197	PrimaryExpression	16		6582167	0					
ANR	6582198	IdentifierDeclStatement	int qpStride = ( width + 15 ) / 16 + 2 ;	4:4:189:220	6582167	2	True				
ANR	6582199	IdentifierDecl	qpStride = ( width + 15 ) / 16 + 2		6582167	0					
ANR	6582200	IdentifierDeclType	int		6582167	0					
ANR	6582201	Identifier	qpStride		6582167	1					
ANR	6582202	AssignmentExpression	qpStride = ( width + 15 ) / 16 + 2		6582167	2		=			
ANR	6582203	Identifier	qpStride		6582167	0					
ANR	6582204	AdditiveExpression	( width + 15 ) / 16 + 2		6582167	1		+			
ANR	6582205	MultiplicativeExpression	( width + 15 ) / 16		6582167	0		/			
ANR	6582206	AdditiveExpression	width + 15		6582167	0		+			
ANR	6582207	Identifier	width		6582167	0					
ANR	6582208	PrimaryExpression	15		6582167	1					
ANR	6582209	PrimaryExpression	16		6582167	1					
ANR	6582210	PrimaryExpression	2		6582167	1					
ANR	6582211	ExpressionStatement	c -> av_class = & av_codec_context_class	5:4:261:298	6582167	3	True				
ANR	6582212	AssignmentExpression	c -> av_class = & av_codec_context_class		6582167	0		=			
ANR	6582213	PtrMemberAccess	c -> av_class		6582167	0					
ANR	6582214	Identifier	c		6582167	0					
ANR	6582215	Identifier	av_class		6582167	1					
ANR	6582216	UnaryOperationExpression	& av_codec_context_class		6582167	1					
ANR	6582217	UnaryOperator	&		6582167	0					
ANR	6582218	Identifier	av_codec_context_class		6582167	1					
ANR	6582219	IfStatement	if ( cpuCaps & PP_FORMAT )		6582167	4					
ANR	6582220	Condition	cpuCaps & PP_FORMAT	6:7:307:323	6582167	0	True				
ANR	6582221	BitAndExpression	cpuCaps & PP_FORMAT		6582167	0		&			
ANR	6582222	Identifier	cpuCaps		6582167	0					
ANR	6582223	Identifier	PP_FORMAT		6582167	1					
ANR	6582224	CompoundStatement		6:25:262:262	6582167	1					
ANR	6582225	ExpressionStatement	c -> hChromaSubSample = cpuCaps & 0x3	7:8:335:367	6582167	0	True				
ANR	6582226	AssignmentExpression	c -> hChromaSubSample = cpuCaps & 0x3		6582167	0		=			
ANR	6582227	PtrMemberAccess	c -> hChromaSubSample		6582167	0					
ANR	6582228	Identifier	c		6582167	0					
ANR	6582229	Identifier	hChromaSubSample		6582167	1					
ANR	6582230	BitAndExpression	cpuCaps & 0x3		6582167	1		&			
ANR	6582231	Identifier	cpuCaps		6582167	0					
ANR	6582232	PrimaryExpression	0x3		6582167	1					
ANR	6582233	ExpressionStatement	c -> vChromaSubSample = ( cpuCaps >> 4 ) & 0x3	8:8:377:414	6582167	1	True				
ANR	6582234	AssignmentExpression	c -> vChromaSubSample = ( cpuCaps >> 4 ) & 0x3		6582167	0		=			
ANR	6582235	PtrMemberAccess	c -> vChromaSubSample		6582167	0					
ANR	6582236	Identifier	c		6582167	0					
ANR	6582237	Identifier	vChromaSubSample		6582167	1					
ANR	6582238	BitAndExpression	( cpuCaps >> 4 ) & 0x3		6582167	1		&			
ANR	6582239	ShiftExpression	cpuCaps >> 4		6582167	0		>>			
ANR	6582240	Identifier	cpuCaps		6582167	0					
ANR	6582241	PrimaryExpression	4		6582167	1					
ANR	6582242	PrimaryExpression	0x3		6582167	1					
ANR	6582243	ElseStatement	else		6582167	0					
ANR	6582244	CompoundStatement		9:9:362:362	6582167	0					
ANR	6582245	ExpressionStatement	c -> hChromaSubSample = 1	10:8:435:457	6582167	0	True				
ANR	6582246	AssignmentExpression	c -> hChromaSubSample = 1		6582167	0		=			
ANR	6582247	PtrMemberAccess	c -> hChromaSubSample		6582167	0					
ANR	6582248	Identifier	c		6582167	0					
ANR	6582249	Identifier	hChromaSubSample		6582167	1					
ANR	6582250	PrimaryExpression	1		6582167	1					
ANR	6582251	ExpressionStatement	c -> vChromaSubSample = 1	11:8:467:489	6582167	1	True				
ANR	6582252	AssignmentExpression	c -> vChromaSubSample = 1		6582167	0		=			
ANR	6582253	PtrMemberAccess	c -> vChromaSubSample		6582167	0					
ANR	6582254	Identifier	c		6582167	0					
ANR	6582255	Identifier	vChromaSubSample		6582167	1					
ANR	6582256	PrimaryExpression	1		6582167	1					
ANR	6582257	IfStatement	if ( cpuCaps & PP_CPU_CAPS_AUTO )		6582167	5					
ANR	6582258	Condition	cpuCaps & PP_CPU_CAPS_AUTO	13:8:505:530	6582167	0	True				
ANR	6582259	BitAndExpression	cpuCaps & PP_CPU_CAPS_AUTO		6582167	0		&			
ANR	6582260	Identifier	cpuCaps		6582167	0					
ANR	6582261	Identifier	PP_CPU_CAPS_AUTO		6582167	1					
ANR	6582262	CompoundStatement		13:36:470:470	6582167	1					
ANR	6582263	ExpressionStatement	c -> cpuCaps = av_get_cpu_flags ( )	14:8:543:574	6582167	0	True				
ANR	6582264	AssignmentExpression	c -> cpuCaps = av_get_cpu_flags ( )		6582167	0		=			
ANR	6582265	PtrMemberAccess	c -> cpuCaps		6582167	0					
ANR	6582266	Identifier	c		6582167	0					
ANR	6582267	Identifier	cpuCaps		6582167	1					
ANR	6582268	CallExpression	av_get_cpu_flags ( )		6582167	1					
ANR	6582269	Callee	av_get_cpu_flags		6582167	0					
ANR	6582270	Identifier	av_get_cpu_flags		6582167	0					
ANR	6582271	ArgumentList			6582167	1					
ANR	6582272	ElseStatement	else		6582167	0					
ANR	6582273	CompoundStatement		15:11:524:524	6582167	0					
ANR	6582274	ExpressionStatement	c -> cpuCaps = 0	16:8:597:611	6582167	0	True				
ANR	6582275	AssignmentExpression	c -> cpuCaps = 0		6582167	0		=			
ANR	6582276	PtrMemberAccess	c -> cpuCaps		6582167	0					
ANR	6582277	Identifier	c		6582167	0					
ANR	6582278	Identifier	cpuCaps		6582167	1					
ANR	6582279	PrimaryExpression	0		6582167	1					
ANR	6582280	IfStatement	if ( cpuCaps & PP_CPU_CAPS_MMX )		6582167	1					
ANR	6582281	Condition	cpuCaps & PP_CPU_CAPS_MMX	17:12:625:649	6582167	0	True				
ANR	6582282	BitAndExpression	cpuCaps & PP_CPU_CAPS_MMX		6582167	0		&			
ANR	6582283	Identifier	cpuCaps		6582167	0					
ANR	6582284	Identifier	PP_CPU_CAPS_MMX		6582167	1					
ANR	6582285	ExpressionStatement	c -> cpuCaps |= AV_CPU_FLAG_MMX	17:44:657:686	6582167	1	True				
ANR	6582286	AssignmentExpression	c -> cpuCaps |= AV_CPU_FLAG_MMX		6582167	0		|=			
ANR	6582287	PtrMemberAccess	c -> cpuCaps		6582167	0					
ANR	6582288	Identifier	c		6582167	0					
ANR	6582289	Identifier	cpuCaps		6582167	1					
ANR	6582290	Identifier	AV_CPU_FLAG_MMX		6582167	1					
ANR	6582291	IfStatement	if ( cpuCaps & PP_CPU_CAPS_MMX2 )		6582167	2					
ANR	6582292	Condition	cpuCaps & PP_CPU_CAPS_MMX2	18:12:700:725	6582167	0	True				
ANR	6582293	BitAndExpression	cpuCaps & PP_CPU_CAPS_MMX2		6582167	0		&			
ANR	6582294	Identifier	cpuCaps		6582167	0					
ANR	6582295	Identifier	PP_CPU_CAPS_MMX2		6582167	1					
ANR	6582296	ExpressionStatement	c -> cpuCaps |= AV_CPU_FLAG_MMXEXT	18:44:732:764	6582167	1	True				
ANR	6582297	AssignmentExpression	c -> cpuCaps |= AV_CPU_FLAG_MMXEXT		6582167	0		|=			
ANR	6582298	PtrMemberAccess	c -> cpuCaps		6582167	0					
ANR	6582299	Identifier	c		6582167	0					
ANR	6582300	Identifier	cpuCaps		6582167	1					
ANR	6582301	Identifier	AV_CPU_FLAG_MMXEXT		6582167	1					
ANR	6582302	IfStatement	if ( cpuCaps & PP_CPU_CAPS_3DNOW )		6582167	3					
ANR	6582303	Condition	cpuCaps & PP_CPU_CAPS_3DNOW	19:12:778:804	6582167	0	True				
ANR	6582304	BitAndExpression	cpuCaps & PP_CPU_CAPS_3DNOW		6582167	0		&			
ANR	6582305	Identifier	cpuCaps		6582167	0					
ANR	6582306	Identifier	PP_CPU_CAPS_3DNOW		6582167	1					
ANR	6582307	ExpressionStatement	c -> cpuCaps |= AV_CPU_FLAG_3DNOW	19:44:810:841	6582167	1	True				
ANR	6582308	AssignmentExpression	c -> cpuCaps |= AV_CPU_FLAG_3DNOW		6582167	0		|=			
ANR	6582309	PtrMemberAccess	c -> cpuCaps		6582167	0					
ANR	6582310	Identifier	c		6582167	0					
ANR	6582311	Identifier	cpuCaps		6582167	1					
ANR	6582312	Identifier	AV_CPU_FLAG_3DNOW		6582167	1					
ANR	6582313	IfStatement	if ( cpuCaps & PP_CPU_CAPS_ALTIVEC )		6582167	4					
ANR	6582314	Condition	cpuCaps & PP_CPU_CAPS_ALTIVEC	20:12:855:883	6582167	0	True				
ANR	6582315	BitAndExpression	cpuCaps & PP_CPU_CAPS_ALTIVEC		6582167	0		&			
ANR	6582316	Identifier	cpuCaps		6582167	0					
ANR	6582317	Identifier	PP_CPU_CAPS_ALTIVEC		6582167	1					
ANR	6582318	ExpressionStatement	c -> cpuCaps |= AV_CPU_FLAG_ALTIVEC	20:44:887:920	6582167	1	True				
ANR	6582319	AssignmentExpression	c -> cpuCaps |= AV_CPU_FLAG_ALTIVEC		6582167	0		|=			
ANR	6582320	PtrMemberAccess	c -> cpuCaps		6582167	0					
ANR	6582321	Identifier	c		6582167	0					
ANR	6582322	Identifier	cpuCaps		6582167	1					
ANR	6582323	Identifier	AV_CPU_FLAG_ALTIVEC		6582167	1					
ANR	6582324	ExpressionStatement	"reallocBuffers ( c , width , height , stride , qpStride )"	22:4:932:982	6582167	6	True				
ANR	6582325	CallExpression	"reallocBuffers ( c , width , height , stride , qpStride )"		6582167	0					
ANR	6582326	Callee	reallocBuffers		6582167	0					
ANR	6582327	Identifier	reallocBuffers		6582167	0					
ANR	6582328	ArgumentList	c		6582167	1					
ANR	6582329	Argument	c		6582167	0					
ANR	6582330	Identifier	c		6582167	0					
ANR	6582331	Argument	width		6582167	1					
ANR	6582332	Identifier	width		6582167	0					
ANR	6582333	Argument	height		6582167	2					
ANR	6582334	Identifier	height		6582167	0					
ANR	6582335	Argument	stride		6582167	3					
ANR	6582336	Identifier	stride		6582167	0					
ANR	6582337	Argument	qpStride		6582167	4					
ANR	6582338	Identifier	qpStride		6582167	0					
ANR	6582339	ExpressionStatement	c -> frameNum = - 1	23:4:988:1002	6582167	7	True				
ANR	6582340	AssignmentExpression	c -> frameNum = - 1		6582167	0		=			
ANR	6582341	PtrMemberAccess	c -> frameNum		6582167	0					
ANR	6582342	Identifier	c		6582167	0					
ANR	6582343	Identifier	frameNum		6582167	1					
ANR	6582344	UnaryOperationExpression	- 1		6582167	1					
ANR	6582345	UnaryOperator	-		6582167	0					
ANR	6582346	PrimaryExpression	1		6582167	1					
ANR	6582347	ReturnStatement	return c ;	24:4:1008:1016	6582167	8	True				
ANR	6582348	Identifier	c		6582167	0					
ANR	6582349	ReturnType	pp_context *		6582167	1					
ANR	6582350	Identifier	pp_get_context		6582167	2					
ANR	6582351	ParameterList	"int width , int height , int cpuCaps"		6582167	3					
ANR	6582352	Parameter	int width	1:27:27:35	6582167	0	True				
ANR	6582353	ParameterType	int		6582167	0					
ANR	6582354	Identifier	width		6582167	1					
ANR	6582355	Parameter	int height	1:38:38:47	6582167	1	True				
ANR	6582356	ParameterType	int		6582167	0					
ANR	6582357	Identifier	height		6582167	1					
ANR	6582358	Parameter	int cpuCaps	1:50:50:60	6582167	2	True				
ANR	6582359	ParameterType	int		6582167	0					
ANR	6582360	Identifier	cpuCaps		6582167	1					
ANR	6582361	CFGEntryNode	ENTRY		6582167		True				
ANR	6582362	CFGExitNode	EXIT		6582167		True				
ANR	6582363	Symbol	qpStride		6582167						
ANR	6582364	Symbol	AV_CPU_FLAG_MMX		6582167						
ANR	6582365	Symbol	stride		6582167						
ANR	6582366	Symbol	cpuCaps		6582167						
ANR	6582367	Symbol	& av_codec_context_class		6582167						
ANR	6582368	Symbol	c -> hChromaSubSample		6582167						
ANR	6582369	Symbol	c -> vChromaSubSample		6582167						
ANR	6582370	Symbol	c -> av_class		6582167						
ANR	6582371	Symbol	PP_CPU_CAPS_MMX2		6582167						
ANR	6582372	Symbol	height		6582167						
ANR	6582373	Symbol	PP_CPU_CAPS_AUTO		6582167						
ANR	6582374	Symbol	c		6582167						
ANR	6582375	Symbol	PP_CPU_CAPS_ALTIVEC		6582167						
ANR	6582376	Symbol	av_mallocz		6582167						
ANR	6582377	Symbol	PP_CPU_CAPS_3DNOW		6582167						
ANR	6582378	Symbol	* c		6582167						
ANR	6582379	Symbol	AV_CPU_FLAG_3DNOW		6582167						
ANR	6582380	Symbol	AV_CPU_FLAG_MMXEXT		6582167						
ANR	6582381	Symbol	PP_CPU_CAPS_MMX		6582167						
ANR	6582382	Symbol	c -> cpuCaps		6582167						
ANR	6582383	Symbol	PP_FORMAT		6582167						
ANR	6582384	Symbol	c -> frameNum		6582167						
ANR	6582385	Symbol	width		6582167						
ANR	6582386	Symbol	av_get_cpu_flags		6582167						
ANR	6582387	Symbol	FFALIGN		6582167						
ANR	6582388	Symbol	AV_CPU_FLAG_ALTIVEC		6582167						
