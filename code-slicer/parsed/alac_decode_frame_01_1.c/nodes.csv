command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	504479	File	/home/p4ultr4n/workplace/ReVeal/raw_code/alac_decode_frame_01_1.c								
ANR	504480	Function	alac_decode_frame	1:0:0:8948							
ANR	504481	FunctionDef	"alac_decode_frame (AVCodecContext * avctx , void * outbuffer , int * outputsize , AVPacket * avpkt)"		504480	0					
ANR	504482	CompoundStatement		7:0:164:8948	504480	0					
ANR	504483	IdentifierDeclStatement	const uint8_t * inbuffer = avpkt -> data ;	9:4:171:208	504480	0	True				
ANR	504484	IdentifierDecl	* inbuffer = avpkt -> data		504480	0					
ANR	504485	IdentifierDeclType	const uint8_t *		504480	0					
ANR	504486	Identifier	inbuffer		504480	1					
ANR	504487	AssignmentExpression	* inbuffer = avpkt -> data		504480	2		=			
ANR	504488	Identifier	inbuffer		504480	0					
ANR	504489	PtrMemberAccess	avpkt -> data		504480	1					
ANR	504490	Identifier	avpkt		504480	0					
ANR	504491	Identifier	data		504480	1					
ANR	504492	IdentifierDeclStatement	int input_buffer_size = avpkt -> size ;	11:4:215:250	504480	1	True				
ANR	504493	IdentifierDecl	input_buffer_size = avpkt -> size		504480	0					
ANR	504494	IdentifierDeclType	int		504480	0					
ANR	504495	Identifier	input_buffer_size		504480	1					
ANR	504496	AssignmentExpression	input_buffer_size = avpkt -> size		504480	2		=			
ANR	504497	Identifier	input_buffer_size		504480	0					
ANR	504498	PtrMemberAccess	avpkt -> size		504480	1					
ANR	504499	Identifier	avpkt		504480	0					
ANR	504500	Identifier	size		504480	1					
ANR	504501	IdentifierDeclStatement	ALACContext * alac = avctx -> priv_data ;	13:4:257:293	504480	2	True				
ANR	504502	IdentifierDecl	* alac = avctx -> priv_data		504480	0					
ANR	504503	IdentifierDeclType	ALACContext *		504480	0					
ANR	504504	Identifier	alac		504480	1					
ANR	504505	AssignmentExpression	* alac = avctx -> priv_data		504480	2		=			
ANR	504506	Identifier	alac		504480	0					
ANR	504507	PtrMemberAccess	avctx -> priv_data		504480	1					
ANR	504508	Identifier	avctx		504480	0					
ANR	504509	Identifier	priv_data		504480	1					
ANR	504510	IdentifierDeclStatement	int channels ;	17:4:302:314	504480	3	True				
ANR	504511	IdentifierDecl	channels		504480	0					
ANR	504512	IdentifierDeclType	int		504480	0					
ANR	504513	Identifier	channels		504480	1					
ANR	504514	IdentifierDeclStatement	unsigned int outputsamples ;	19:4:321:347	504480	4	True				
ANR	504515	IdentifierDecl	outputsamples		504480	0					
ANR	504516	IdentifierDeclType	unsigned int		504480	0					
ANR	504517	Identifier	outputsamples		504480	1					
ANR	504518	IdentifierDeclStatement	int hassize ;	21:4:354:365	504480	5	True				
ANR	504519	IdentifierDecl	hassize		504480	0					
ANR	504520	IdentifierDeclType	int		504480	0					
ANR	504521	Identifier	hassize		504480	1					
ANR	504522	IdentifierDeclStatement	unsigned int readsamplesize ;	23:4:372:399	504480	6	True				
ANR	504523	IdentifierDecl	readsamplesize		504480	0					
ANR	504524	IdentifierDeclType	unsigned int		504480	0					
ANR	504525	Identifier	readsamplesize		504480	1					
ANR	504526	IdentifierDeclStatement	int isnotcompressed ;	25:4:406:425	504480	7	True				
ANR	504527	IdentifierDecl	isnotcompressed		504480	0					
ANR	504528	IdentifierDeclType	int		504480	0					
ANR	504529	Identifier	isnotcompressed		504480	1					
ANR	504530	IdentifierDeclStatement	uint8_t interlacing_shift ;	27:4:432:457	504480	8	True				
ANR	504531	IdentifierDecl	interlacing_shift		504480	0					
ANR	504532	IdentifierDeclType	uint8_t		504480	0					
ANR	504533	Identifier	interlacing_shift		504480	1					
ANR	504534	IdentifierDeclStatement	uint8_t interlacing_leftweight ;	29:4:464:494	504480	9	True				
ANR	504535	IdentifierDecl	interlacing_leftweight		504480	0					
ANR	504536	IdentifierDeclType	uint8_t		504480	0					
ANR	504537	Identifier	interlacing_leftweight		504480	1					
ANR	504538	IfStatement	if ( ! inbuffer || ! input_buffer_size )		504480	10					
ANR	504539	Condition	! inbuffer || ! input_buffer_size	35:8:545:575	504480	0	True				
ANR	504540	OrExpression	! inbuffer || ! input_buffer_size		504480	0		||			
ANR	504541	UnaryOperationExpression	! inbuffer		504480	0					
ANR	504542	UnaryOperator	!		504480	0					
ANR	504543	Identifier	inbuffer		504480	1					
ANR	504544	UnaryOperationExpression	! input_buffer_size		504480	1					
ANR	504545	UnaryOperator	!		504480	0					
ANR	504546	Identifier	input_buffer_size		504480	1					
ANR	504547	ReturnStatement	return input_buffer_size ;	37:8:587:611	504480	1	True				
ANR	504548	Identifier	input_buffer_size		504480	0					
ANR	504549	IfStatement	if ( ! alac -> context_initialized )		504480	11					
ANR	504550	Condition	! alac -> context_initialized	43:8:665:690	504480	0	True				
ANR	504551	UnaryOperationExpression	! alac -> context_initialized		504480	0					
ANR	504552	UnaryOperator	!		504480	0					
ANR	504553	PtrMemberAccess	alac -> context_initialized		504480	1					
ANR	504554	Identifier	alac		504480	0					
ANR	504555	Identifier	context_initialized		504480	1					
ANR	504556	CompoundStatement		37:36:528:528	504480	1					
ANR	504557	IfStatement	if ( alac -> avctx -> extradata_size != ALAC_EXTRADATA_SIZE )		504480	0					
ANR	504558	Condition	alac -> avctx -> extradata_size != ALAC_EXTRADATA_SIZE	45:12:708:757	504480	0	True				
ANR	504559	EqualityExpression	alac -> avctx -> extradata_size != ALAC_EXTRADATA_SIZE		504480	0		!=			
ANR	504560	PtrMemberAccess	alac -> avctx -> extradata_size		504480	0					
ANR	504561	PtrMemberAccess	alac -> avctx		504480	0					
ANR	504562	Identifier	alac		504480	0					
ANR	504563	Identifier	avctx		504480	1					
ANR	504564	Identifier	extradata_size		504480	1					
ANR	504565	Identifier	ALAC_EXTRADATA_SIZE		504480	1					
ANR	504566	CompoundStatement		39:64:595:595	504480	1					
ANR	504567	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""alac: expected %d extradata bytes\\n"" , ALAC_EXTRADATA_SIZE )"	47:12:775:879	504480	0	True				
ANR	504568	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""alac: expected %d extradata bytes\\n"" , ALAC_EXTRADATA_SIZE )"		504480	0					
ANR	504569	Callee	av_log		504480	0					
ANR	504570	Identifier	av_log		504480	0					
ANR	504571	ArgumentList	avctx		504480	1					
ANR	504572	Argument	avctx		504480	0					
ANR	504573	Identifier	avctx		504480	0					
ANR	504574	Argument	AV_LOG_ERROR		504480	1					
ANR	504575	Identifier	AV_LOG_ERROR		504480	0					
ANR	504576	Argument	"""alac: expected %d extradata bytes\\n"""		504480	2					
ANR	504577	PrimaryExpression	"""alac: expected %d extradata bytes\\n"""		504480	0					
ANR	504578	Argument	ALAC_EXTRADATA_SIZE		504480	3					
ANR	504579	Identifier	ALAC_EXTRADATA_SIZE		504480	0					
ANR	504580	ReturnStatement	return input_buffer_size ;	51:12:894:918	504480	1	True				
ANR	504581	Identifier	input_buffer_size		504480	0					
ANR	504582	IfStatement	if ( alac_set_info ( alac ) )		504480	1					
ANR	504583	Condition	alac_set_info ( alac )	55:12:944:962	504480	0	True				
ANR	504584	CallExpression	alac_set_info ( alac )		504480	0					
ANR	504585	Callee	alac_set_info		504480	0					
ANR	504586	Identifier	alac_set_info		504480	0					
ANR	504587	ArgumentList	alac		504480	1					
ANR	504588	Argument	alac		504480	0					
ANR	504589	Identifier	alac		504480	0					
ANR	504590	CompoundStatement		49:33:800:800	504480	1					
ANR	504591	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""alac: set_info failed\\n"" )"	57:12:980:1034	504480	0	True				
ANR	504592	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""alac: set_info failed\\n"" )"		504480	0					
ANR	504593	Callee	av_log		504480	0					
ANR	504594	Identifier	av_log		504480	0					
ANR	504595	ArgumentList	avctx		504480	1					
ANR	504596	Argument	avctx		504480	0					
ANR	504597	Identifier	avctx		504480	0					
ANR	504598	Argument	AV_LOG_ERROR		504480	1					
ANR	504599	Identifier	AV_LOG_ERROR		504480	0					
ANR	504600	Argument	"""alac: set_info failed\\n"""		504480	2					
ANR	504601	PrimaryExpression	"""alac: set_info failed\\n"""		504480	0					
ANR	504602	ReturnStatement	return input_buffer_size ;	59:12:1049:1073	504480	1	True				
ANR	504603	Identifier	input_buffer_size		504480	0					
ANR	504604	ExpressionStatement	alac -> context_initialized = 1	63:8:1095:1124	504480	2	True				
ANR	504605	AssignmentExpression	alac -> context_initialized = 1		504480	0		=			
ANR	504606	PtrMemberAccess	alac -> context_initialized		504480	0					
ANR	504607	Identifier	alac		504480	0					
ANR	504608	Identifier	context_initialized		504480	1					
ANR	504609	PrimaryExpression	1		504480	1					
ANR	504610	ExpressionStatement	"init_get_bits ( & alac -> gb , inbuffer , input_buffer_size * 8 )"	69:4:1140:1197	504480	12	True				
ANR	504611	CallExpression	"init_get_bits ( & alac -> gb , inbuffer , input_buffer_size * 8 )"		504480	0					
ANR	504612	Callee	init_get_bits		504480	0					
ANR	504613	Identifier	init_get_bits		504480	0					
ANR	504614	ArgumentList	& alac -> gb		504480	1					
ANR	504615	Argument	& alac -> gb		504480	0					
ANR	504616	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	504617	UnaryOperator	&		504480	0					
ANR	504618	PtrMemberAccess	alac -> gb		504480	1					
ANR	504619	Identifier	alac		504480	0					
ANR	504620	Identifier	gb		504480	1					
ANR	504621	Argument	inbuffer		504480	1					
ANR	504622	Identifier	inbuffer		504480	0					
ANR	504623	Argument	input_buffer_size * 8		504480	2					
ANR	504624	MultiplicativeExpression	input_buffer_size * 8		504480	0		*			
ANR	504625	Identifier	input_buffer_size		504480	0					
ANR	504626	PrimaryExpression	8		504480	1					
ANR	504627	ExpressionStatement	"channels = get_bits ( & alac -> gb , 3 ) + 1"	73:4:1206:1243	504480	13	True				
ANR	504628	AssignmentExpression	"channels = get_bits ( & alac -> gb , 3 ) + 1"		504480	0		=			
ANR	504629	Identifier	channels		504480	0					
ANR	504630	AdditiveExpression	"get_bits ( & alac -> gb , 3 ) + 1"		504480	1		+			
ANR	504631	CallExpression	"get_bits ( & alac -> gb , 3 )"		504480	0					
ANR	504632	Callee	get_bits		504480	0					
ANR	504633	Identifier	get_bits		504480	0					
ANR	504634	ArgumentList	& alac -> gb		504480	1					
ANR	504635	Argument	& alac -> gb		504480	0					
ANR	504636	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	504637	UnaryOperator	&		504480	0					
ANR	504638	PtrMemberAccess	alac -> gb		504480	1					
ANR	504639	Identifier	alac		504480	0					
ANR	504640	Identifier	gb		504480	1					
ANR	504641	Argument	3		504480	1					
ANR	504642	PrimaryExpression	3		504480	0					
ANR	504643	PrimaryExpression	1		504480	1					
ANR	504644	IfStatement	if ( channels > MAX_CHANNELS )		504480	14					
ANR	504645	Condition	channels > MAX_CHANNELS	75:8:1254:1276	504480	0	True				
ANR	504646	RelationalExpression	channels > MAX_CHANNELS		504480	0		>			
ANR	504647	Identifier	channels		504480	0					
ANR	504648	Identifier	MAX_CHANNELS		504480	1					
ANR	504649	CompoundStatement		69:33:1114:1114	504480	1					
ANR	504650	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""channels > %d not supported\\n"" , MAX_CHANNELS )"	77:8:1290:1380	504480	0	True				
ANR	504651	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""channels > %d not supported\\n"" , MAX_CHANNELS )"		504480	0					
ANR	504652	Callee	av_log		504480	0					
ANR	504653	Identifier	av_log		504480	0					
ANR	504654	ArgumentList	avctx		504480	1					
ANR	504655	Argument	avctx		504480	0					
ANR	504656	Identifier	avctx		504480	0					
ANR	504657	Argument	AV_LOG_ERROR		504480	1					
ANR	504658	Identifier	AV_LOG_ERROR		504480	0					
ANR	504659	Argument	"""channels > %d not supported\\n"""		504480	2					
ANR	504660	PrimaryExpression	"""channels > %d not supported\\n"""		504480	0					
ANR	504661	Argument	MAX_CHANNELS		504480	3					
ANR	504662	Identifier	MAX_CHANNELS		504480	0					
ANR	504663	ReturnStatement	return input_buffer_size ;	81:8:1391:1415	504480	1	True				
ANR	504664	Identifier	input_buffer_size		504480	0					
ANR	504665	ExpressionStatement	"skip_bits ( & alac -> gb , 4 )"	93:4:1552:1575	504480	15	True				
ANR	504666	CallExpression	"skip_bits ( & alac -> gb , 4 )"		504480	0					
ANR	504667	Callee	skip_bits		504480	0					
ANR	504668	Identifier	skip_bits		504480	0					
ANR	504669	ArgumentList	& alac -> gb		504480	1					
ANR	504670	Argument	& alac -> gb		504480	0					
ANR	504671	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	504672	UnaryOperator	&		504480	0					
ANR	504673	PtrMemberAccess	alac -> gb		504480	1					
ANR	504674	Identifier	alac		504480	0					
ANR	504675	Identifier	gb		504480	1					
ANR	504676	Argument	4		504480	1					
ANR	504677	PrimaryExpression	4		504480	0					
ANR	504678	ExpressionStatement	"skip_bits ( & alac -> gb , 12 )"	97:4:1584:1608	504480	16	True				
ANR	504679	CallExpression	"skip_bits ( & alac -> gb , 12 )"		504480	0					
ANR	504680	Callee	skip_bits		504480	0					
ANR	504681	Identifier	skip_bits		504480	0					
ANR	504682	ArgumentList	& alac -> gb		504480	1					
ANR	504683	Argument	& alac -> gb		504480	0					
ANR	504684	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	504685	UnaryOperator	&		504480	0					
ANR	504686	PtrMemberAccess	alac -> gb		504480	1					
ANR	504687	Identifier	alac		504480	0					
ANR	504688	Identifier	gb		504480	1					
ANR	504689	Argument	12		504480	1					
ANR	504690	PrimaryExpression	12		504480	0					
ANR	504691	ExpressionStatement	hassize = get_bits1 ( & alac -> gb )	103:4:1694:1724	504480	17	True				
ANR	504692	AssignmentExpression	hassize = get_bits1 ( & alac -> gb )		504480	0		=			
ANR	504693	Identifier	hassize		504480	0					
ANR	504694	CallExpression	get_bits1 ( & alac -> gb )		504480	1					
ANR	504695	Callee	get_bits1		504480	0					
ANR	504696	Identifier	get_bits1		504480	0					
ANR	504697	ArgumentList	& alac -> gb		504480	1					
ANR	504698	Argument	& alac -> gb		504480	0					
ANR	504699	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	504700	UnaryOperator	&		504480	0					
ANR	504701	PtrMemberAccess	alac -> gb		504480	1					
ANR	504702	Identifier	alac		504480	0					
ANR	504703	Identifier	gb		504480	1					
ANR	504704	ExpressionStatement	"alac -> wasted_bits = get_bits ( & alac -> gb , 2 ) << 3"	107:4:1733:1780	504480	18	True				
ANR	504705	AssignmentExpression	"alac -> wasted_bits = get_bits ( & alac -> gb , 2 ) << 3"		504480	0		=			
ANR	504706	PtrMemberAccess	alac -> wasted_bits		504480	0					
ANR	504707	Identifier	alac		504480	0					
ANR	504708	Identifier	wasted_bits		504480	1					
ANR	504709	ShiftExpression	"get_bits ( & alac -> gb , 2 ) << 3"		504480	1		<<			
ANR	504710	CallExpression	"get_bits ( & alac -> gb , 2 )"		504480	0					
ANR	504711	Callee	get_bits		504480	0					
ANR	504712	Identifier	get_bits		504480	0					
ANR	504713	ArgumentList	& alac -> gb		504480	1					
ANR	504714	Argument	& alac -> gb		504480	0					
ANR	504715	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	504716	UnaryOperator	&		504480	0					
ANR	504717	PtrMemberAccess	alac -> gb		504480	1					
ANR	504718	Identifier	alac		504480	0					
ANR	504719	Identifier	gb		504480	1					
ANR	504720	Argument	2		504480	1					
ANR	504721	PrimaryExpression	2		504480	0					
ANR	504722	PrimaryExpression	3		504480	1					
ANR	504723	ExpressionStatement	isnotcompressed = get_bits1 ( & alac -> gb )	113:4:1832:1870	504480	19	True				
ANR	504724	AssignmentExpression	isnotcompressed = get_bits1 ( & alac -> gb )		504480	0		=			
ANR	504725	Identifier	isnotcompressed		504480	0					
ANR	504726	CallExpression	get_bits1 ( & alac -> gb )		504480	1					
ANR	504727	Callee	get_bits1		504480	0					
ANR	504728	Identifier	get_bits1		504480	0					
ANR	504729	ArgumentList	& alac -> gb		504480	1					
ANR	504730	Argument	& alac -> gb		504480	0					
ANR	504731	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	504732	UnaryOperator	&		504480	0					
ANR	504733	PtrMemberAccess	alac -> gb		504480	1					
ANR	504734	Identifier	alac		504480	0					
ANR	504735	Identifier	gb		504480	1					
ANR	504736	IfStatement	if ( hassize )		504480	20					
ANR	504737	Condition	hassize	117:8:1883:1889	504480	0	True				
ANR	504738	Identifier	hassize		504480	0					
ANR	504739	CompoundStatement		111:17:1727:1727	504480	1					
ANR	504740	ExpressionStatement	"outputsamples = get_bits_long ( & alac -> gb , 32 )"	121:8:1968:2012	504480	0	True				
ANR	504741	AssignmentExpression	"outputsamples = get_bits_long ( & alac -> gb , 32 )"		504480	0		=			
ANR	504742	Identifier	outputsamples		504480	0					
ANR	504743	CallExpression	"get_bits_long ( & alac -> gb , 32 )"		504480	1					
ANR	504744	Callee	get_bits_long		504480	0					
ANR	504745	Identifier	get_bits_long		504480	0					
ANR	504746	ArgumentList	& alac -> gb		504480	1					
ANR	504747	Argument	& alac -> gb		504480	0					
ANR	504748	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	504749	UnaryOperator	&		504480	0					
ANR	504750	PtrMemberAccess	alac -> gb		504480	1					
ANR	504751	Identifier	alac		504480	0					
ANR	504752	Identifier	gb		504480	1					
ANR	504753	Argument	32		504480	1					
ANR	504754	PrimaryExpression	32		504480	0					
ANR	504755	IfStatement	if ( outputsamples > alac -> setinfo_max_samples_per_frame )		504480	1					
ANR	504756	Condition	outputsamples > alac -> setinfo_max_samples_per_frame	123:11:2026:2076	504480	0	True				
ANR	504757	RelationalExpression	outputsamples > alac -> setinfo_max_samples_per_frame		504480	0		>			
ANR	504758	Identifier	outputsamples		504480	0					
ANR	504759	PtrMemberAccess	alac -> setinfo_max_samples_per_frame		504480	1					
ANR	504760	Identifier	alac		504480	0					
ANR	504761	Identifier	setinfo_max_samples_per_frame		504480	1					
ANR	504762	CompoundStatement		117:63:1913:1913	504480	1					
ANR	504763	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""outputsamples %d > %d\\n"" , outputsamples , alac -> setinfo_max_samples_per_frame )"	125:12:2093:2199	504480	0	True				
ANR	504764	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""outputsamples %d > %d\\n"" , outputsamples , alac -> setinfo_max_samples_per_frame )"		504480	0					
ANR	504765	Callee	av_log		504480	0					
ANR	504766	Identifier	av_log		504480	0					
ANR	504767	ArgumentList	avctx		504480	1					
ANR	504768	Argument	avctx		504480	0					
ANR	504769	Identifier	avctx		504480	0					
ANR	504770	Argument	AV_LOG_ERROR		504480	1					
ANR	504771	Identifier	AV_LOG_ERROR		504480	0					
ANR	504772	Argument	"""outputsamples %d > %d\\n"""		504480	2					
ANR	504773	PrimaryExpression	"""outputsamples %d > %d\\n"""		504480	0					
ANR	504774	Argument	outputsamples		504480	3					
ANR	504775	Identifier	outputsamples		504480	0					
ANR	504776	Argument	alac -> setinfo_max_samples_per_frame		504480	4					
ANR	504777	PtrMemberAccess	alac -> setinfo_max_samples_per_frame		504480	0					
ANR	504778	Identifier	alac		504480	0					
ANR	504779	Identifier	setinfo_max_samples_per_frame		504480	1					
ANR	504780	ReturnStatement	return - 1 ;	127:12:2214:2223	504480	1	True				
ANR	504781	UnaryOperationExpression	- 1		504480	0					
ANR	504782	UnaryOperator	-		504480	0					
ANR	504783	PrimaryExpression	1		504480	1					
ANR	504784	ElseStatement	else		504480	0					
ANR	504785	ExpressionStatement	outputsamples = alac -> setinfo_max_samples_per_frame	133:8:2257:2308	504480	0	True				
ANR	504786	AssignmentExpression	outputsamples = alac -> setinfo_max_samples_per_frame		504480	0		=			
ANR	504787	Identifier	outputsamples		504480	0					
ANR	504788	PtrMemberAccess	alac -> setinfo_max_samples_per_frame		504480	1					
ANR	504789	Identifier	alac		504480	0					
ANR	504790	Identifier	setinfo_max_samples_per_frame		504480	1					
ANR	504791	SwitchStatement	switch ( alac -> setinfo_sample_size )		504480	21					
ANR	504792	Condition	alac -> setinfo_sample_size	137:12:2325:2349	504480	0	True				
ANR	504793	PtrMemberAccess	alac -> setinfo_sample_size		504480	0					
ANR	504794	Identifier	alac		504480	0					
ANR	504795	Identifier	setinfo_sample_size		504480	1					
ANR	504796	CompoundStatement		131:39:2187:2187	504480	1					
ANR	504797	Label	case 16 :	139:4:2359:2366	504480	0	True				
ANR	504798	ExpressionStatement	avctx -> sample_fmt = SAMPLE_FMT_S16	139:13:2368:2405	504480	1	True				
ANR	504799	AssignmentExpression	avctx -> sample_fmt = SAMPLE_FMT_S16		504480	0		=			
ANR	504800	PtrMemberAccess	avctx -> sample_fmt		504480	0					
ANR	504801	Identifier	avctx		504480	0					
ANR	504802	Identifier	sample_fmt		504480	1					
ANR	504803	Identifier	SAMPLE_FMT_S16		504480	1					
ANR	504804	ExpressionStatement	alac -> bytespersample = channels << 1	141:13:2421:2457	504480	2	True				
ANR	504805	AssignmentExpression	alac -> bytespersample = channels << 1		504480	0		=			
ANR	504806	PtrMemberAccess	alac -> bytespersample		504480	0					
ANR	504807	Identifier	alac		504480	0					
ANR	504808	Identifier	bytespersample		504480	1					
ANR	504809	ShiftExpression	channels << 1		504480	1		<<			
ANR	504810	Identifier	channels		504480	0					
ANR	504811	PrimaryExpression	1		504480	1					
ANR	504812	BreakStatement	break ;	143:13:2473:2478	504480	3	True				
ANR	504813	Label	case 24 :	145:4:2485:2492	504480	4	True				
ANR	504814	ExpressionStatement	avctx -> sample_fmt = SAMPLE_FMT_S32	145:13:2494:2531	504480	5	True				
ANR	504815	AssignmentExpression	avctx -> sample_fmt = SAMPLE_FMT_S32		504480	0		=			
ANR	504816	PtrMemberAccess	avctx -> sample_fmt		504480	0					
ANR	504817	Identifier	avctx		504480	0					
ANR	504818	Identifier	sample_fmt		504480	1					
ANR	504819	Identifier	SAMPLE_FMT_S32		504480	1					
ANR	504820	ExpressionStatement	alac -> bytespersample = channels << 2	147:13:2547:2583	504480	6	True				
ANR	504821	AssignmentExpression	alac -> bytespersample = channels << 2		504480	0		=			
ANR	504822	PtrMemberAccess	alac -> bytespersample		504480	0					
ANR	504823	Identifier	alac		504480	0					
ANR	504824	Identifier	bytespersample		504480	1					
ANR	504825	ShiftExpression	channels << 2		504480	1		<<			
ANR	504826	Identifier	channels		504480	0					
ANR	504827	PrimaryExpression	2		504480	1					
ANR	504828	BreakStatement	break ;	149:13:2599:2604	504480	7	True				
ANR	504829	Label	default :	151:4:2611:2618	504480	8	True				
ANR	504830	Identifier	default		504480	0					
ANR	504831	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Sample depth %d is not supported.\\n"" , alac -> setinfo_sample_size )"	151:13:2620:2734	504480	9	True				
ANR	504832	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Sample depth %d is not supported.\\n"" , alac -> setinfo_sample_size )"		504480	0					
ANR	504833	Callee	av_log		504480	0					
ANR	504834	Identifier	av_log		504480	0					
ANR	504835	ArgumentList	avctx		504480	1					
ANR	504836	Argument	avctx		504480	0					
ANR	504837	Identifier	avctx		504480	0					
ANR	504838	Argument	AV_LOG_ERROR		504480	1					
ANR	504839	Identifier	AV_LOG_ERROR		504480	0					
ANR	504840	Argument	"""Sample depth %d is not supported.\\n"""		504480	2					
ANR	504841	PrimaryExpression	"""Sample depth %d is not supported.\\n"""		504480	0					
ANR	504842	Argument	alac -> setinfo_sample_size		504480	3					
ANR	504843	PtrMemberAccess	alac -> setinfo_sample_size		504480	0					
ANR	504844	Identifier	alac		504480	0					
ANR	504845	Identifier	setinfo_sample_size		504480	1					
ANR	504846	ReturnStatement	return - 1 ;	155:13:2750:2759	504480	10	True				
ANR	504847	UnaryOperationExpression	- 1		504480	0					
ANR	504848	UnaryOperator	-		504480	0					
ANR	504849	PrimaryExpression	1		504480	1					
ANR	504850	IfStatement	if ( outputsamples > * outputsize / alac -> bytespersample )		504480	22					
ANR	504851	Condition	outputsamples > * outputsize / alac -> bytespersample	161:7:2778:2827	504480	0	True				
ANR	504852	RelationalExpression	outputsamples > * outputsize / alac -> bytespersample		504480	0		>			
ANR	504853	Identifier	outputsamples		504480	0					
ANR	504854	MultiplicativeExpression	* outputsize / alac -> bytespersample		504480	1		/			
ANR	504855	UnaryOperationExpression	* outputsize		504480	0					
ANR	504856	UnaryOperator	*		504480	0					
ANR	504857	Identifier	outputsize		504480	1					
ANR	504858	PtrMemberAccess	alac -> bytespersample		504480	1					
ANR	504859	Identifier	alac		504480	0					
ANR	504860	Identifier	bytespersample		504480	1					
ANR	504861	CompoundStatement		155:58:2664:2664	504480	1					
ANR	504862	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""sample buffer too small\\n"" )"	163:8:2840:2896	504480	0	True				
ANR	504863	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""sample buffer too small\\n"" )"		504480	0					
ANR	504864	Callee	av_log		504480	0					
ANR	504865	Identifier	av_log		504480	0					
ANR	504866	ArgumentList	avctx		504480	1					
ANR	504867	Argument	avctx		504480	0					
ANR	504868	Identifier	avctx		504480	0					
ANR	504869	Argument	AV_LOG_ERROR		504480	1					
ANR	504870	Identifier	AV_LOG_ERROR		504480	0					
ANR	504871	Argument	"""sample buffer too small\\n"""		504480	2					
ANR	504872	PrimaryExpression	"""sample buffer too small\\n"""		504480	0					
ANR	504873	ReturnStatement	return - 1 ;	165:8:2907:2916	504480	1	True				
ANR	504874	UnaryOperationExpression	- 1		504480	0					
ANR	504875	UnaryOperator	-		504480	0					
ANR	504876	PrimaryExpression	1		504480	1					
ANR	504877	ExpressionStatement	* outputsize = outputsamples * alac -> bytespersample	171:4:2932:2982	504480	23	True				
ANR	504878	AssignmentExpression	* outputsize = outputsamples * alac -> bytespersample		504480	0		=			
ANR	504879	UnaryOperationExpression	* outputsize		504480	0					
ANR	504880	UnaryOperator	*		504480	0					
ANR	504881	Identifier	outputsize		504480	1					
ANR	504882	MultiplicativeExpression	outputsamples * alac -> bytespersample		504480	1		*			
ANR	504883	Identifier	outputsamples		504480	0					
ANR	504884	PtrMemberAccess	alac -> bytespersample		504480	1					
ANR	504885	Identifier	alac		504480	0					
ANR	504886	Identifier	bytespersample		504480	1					
ANR	504887	ExpressionStatement	readsamplesize = alac -> setinfo_sample_size - ( alac -> wasted_bits ) + channels - 1	173:4:2989:3068	504480	24	True				
ANR	504888	AssignmentExpression	readsamplesize = alac -> setinfo_sample_size - ( alac -> wasted_bits ) + channels - 1		504480	0		=			
ANR	504889	Identifier	readsamplesize		504480	0					
ANR	504890	AdditiveExpression	alac -> setinfo_sample_size - ( alac -> wasted_bits ) + channels - 1		504480	1		-			
ANR	504891	PtrMemberAccess	alac -> setinfo_sample_size		504480	0					
ANR	504892	Identifier	alac		504480	0					
ANR	504893	Identifier	setinfo_sample_size		504480	1					
ANR	504894	AdditiveExpression	( alac -> wasted_bits ) + channels - 1		504480	1		+			
ANR	504895	PtrMemberAccess	alac -> wasted_bits		504480	0					
ANR	504896	Identifier	alac		504480	0					
ANR	504897	Identifier	wasted_bits		504480	1					
ANR	504898	AdditiveExpression	channels - 1		504480	1		-			
ANR	504899	Identifier	channels		504480	0					
ANR	504900	PrimaryExpression	1		504480	1					
ANR	504901	IfStatement	if ( readsamplesize > MIN_CACHE_BITS )		504480	25					
ANR	504902	Condition	readsamplesize > MIN_CACHE_BITS	175:8:3079:3109	504480	0	True				
ANR	504903	RelationalExpression	readsamplesize > MIN_CACHE_BITS		504480	0		>			
ANR	504904	Identifier	readsamplesize		504480	0					
ANR	504905	Identifier	MIN_CACHE_BITS		504480	1					
ANR	504906	CompoundStatement		169:41:2947:2947	504480	1					
ANR	504907	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""readsamplesize too big (%d)\\n"" , readsamplesize )"	177:8:3123:3199	504480	0	True				
ANR	504908	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""readsamplesize too big (%d)\\n"" , readsamplesize )"		504480	0					
ANR	504909	Callee	av_log		504480	0					
ANR	504910	Identifier	av_log		504480	0					
ANR	504911	ArgumentList	avctx		504480	1					
ANR	504912	Argument	avctx		504480	0					
ANR	504913	Identifier	avctx		504480	0					
ANR	504914	Argument	AV_LOG_ERROR		504480	1					
ANR	504915	Identifier	AV_LOG_ERROR		504480	0					
ANR	504916	Argument	"""readsamplesize too big (%d)\\n"""		504480	2					
ANR	504917	PrimaryExpression	"""readsamplesize too big (%d)\\n"""		504480	0					
ANR	504918	Argument	readsamplesize		504480	3					
ANR	504919	Identifier	readsamplesize		504480	0					
ANR	504920	ReturnStatement	return - 1 ;	179:8:3210:3219	504480	1	True				
ANR	504921	UnaryOperationExpression	- 1		504480	0					
ANR	504922	UnaryOperator	-		504480	0					
ANR	504923	PrimaryExpression	1		504480	1					
ANR	504924	IfStatement	if ( ! isnotcompressed )		504480	26					
ANR	504925	Condition	! isnotcompressed	185:8:3239:3254	504480	0	True				
ANR	504926	UnaryOperationExpression	! isnotcompressed		504480	0					
ANR	504927	UnaryOperator	!		504480	0					
ANR	504928	Identifier	isnotcompressed		504480	1					
ANR	504929	CompoundStatement		193:8:3381:3392	504480	1					
ANR	504930	Statement	int16_t	189:8:3303:3309	504480	0	True				
ANR	504931	ExpressionStatement	predictor_coef_table [ MAX_CHANNELS ] [ 32 ]	189:16:3311:3349	504480	1	True				
ANR	504932	ArrayIndexing	predictor_coef_table [ MAX_CHANNELS ] [ 32 ]		504480	0					
ANR	504933	ArrayIndexing	predictor_coef_table [ MAX_CHANNELS ]		504480	0					
ANR	504934	Identifier	predictor_coef_table		504480	0					
ANR	504935	Identifier	MAX_CHANNELS		504480	1					
ANR	504936	PrimaryExpression	32		504480	1					
ANR	504937	IdentifierDeclStatement	int predictor_coef_num [ MAX_CHANNELS ] ;	191:8:3360:3396	504480	2	True				
ANR	504938	IdentifierDecl	predictor_coef_num [ MAX_CHANNELS ]		504480	0					
ANR	504939	IdentifierDeclType	int [ MAX_CHANNELS ]		504480	0					
ANR	504940	Identifier	predictor_coef_num		504480	1					
ANR	504941	Identifier	MAX_CHANNELS		504480	2					
ANR	504942	IdentifierDeclStatement	int prediction_type [ MAX_CHANNELS ] ;	193:8:3407:3440	504480	3	True				
ANR	504943	IdentifierDecl	prediction_type [ MAX_CHANNELS ]		504480	0					
ANR	504944	IdentifierDeclType	int [ MAX_CHANNELS ]		504480	0					
ANR	504945	Identifier	prediction_type		504480	1					
ANR	504946	Identifier	MAX_CHANNELS		504480	2					
ANR	504947	IdentifierDeclStatement	int prediction_quantitization [ MAX_CHANNELS ] ;	195:8:3451:3494	504480	4	True				
ANR	504948	IdentifierDecl	prediction_quantitization [ MAX_CHANNELS ]		504480	0					
ANR	504949	IdentifierDeclType	int [ MAX_CHANNELS ]		504480	0					
ANR	504950	Identifier	prediction_quantitization		504480	1					
ANR	504951	Identifier	MAX_CHANNELS		504480	2					
ANR	504952	IdentifierDeclStatement	int ricemodifier [ MAX_CHANNELS ] ;	197:8:3505:3535	504480	5	True				
ANR	504953	IdentifierDecl	ricemodifier [ MAX_CHANNELS ]		504480	0					
ANR	504954	IdentifierDeclType	int [ MAX_CHANNELS ]		504480	0					
ANR	504955	Identifier	ricemodifier		504480	1					
ANR	504956	Identifier	MAX_CHANNELS		504480	2					
ANR	504957	IdentifierDeclStatement	"int i , chan ;"	199:8:3546:3557	504480	6	True				
ANR	504958	IdentifierDecl	i		504480	0					
ANR	504959	IdentifierDeclType	int		504480	0					
ANR	504960	Identifier	i		504480	1					
ANR	504961	IdentifierDecl	chan		504480	1					
ANR	504962	IdentifierDeclType	int		504480	0					
ANR	504963	Identifier	chan		504480	1					
ANR	504964	ExpressionStatement	"interlacing_shift = get_bits ( & alac -> gb , 8 )"	203:8:3570:3612	504480	7	True				
ANR	504965	AssignmentExpression	"interlacing_shift = get_bits ( & alac -> gb , 8 )"		504480	0		=			
ANR	504966	Identifier	interlacing_shift		504480	0					
ANR	504967	CallExpression	"get_bits ( & alac -> gb , 8 )"		504480	1					
ANR	504968	Callee	get_bits		504480	0					
ANR	504969	Identifier	get_bits		504480	0					
ANR	504970	ArgumentList	& alac -> gb		504480	1					
ANR	504971	Argument	& alac -> gb		504480	0					
ANR	504972	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	504973	UnaryOperator	&		504480	0					
ANR	504974	PtrMemberAccess	alac -> gb		504480	1					
ANR	504975	Identifier	alac		504480	0					
ANR	504976	Identifier	gb		504480	1					
ANR	504977	Argument	8		504480	1					
ANR	504978	PrimaryExpression	8		504480	0					
ANR	504979	ExpressionStatement	"interlacing_leftweight = get_bits ( & alac -> gb , 8 )"	205:8:3623:3670	504480	8	True				
ANR	504980	AssignmentExpression	"interlacing_leftweight = get_bits ( & alac -> gb , 8 )"		504480	0		=			
ANR	504981	Identifier	interlacing_leftweight		504480	0					
ANR	504982	CallExpression	"get_bits ( & alac -> gb , 8 )"		504480	1					
ANR	504983	Callee	get_bits		504480	0					
ANR	504984	Identifier	get_bits		504480	0					
ANR	504985	ArgumentList	& alac -> gb		504480	1					
ANR	504986	Argument	& alac -> gb		504480	0					
ANR	504987	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	504988	UnaryOperator	&		504480	0					
ANR	504989	PtrMemberAccess	alac -> gb		504480	1					
ANR	504990	Identifier	alac		504480	0					
ANR	504991	Identifier	gb		504480	1					
ANR	504992	Argument	8		504480	1					
ANR	504993	PrimaryExpression	8		504480	0					
ANR	504994	ForStatement	for ( chan = 0 ; chan < channels ; chan ++ )		504480	9					
ANR	504995	ForInit	chan = 0 ;	209:13:3688:3696	504480	0	True				
ANR	504996	AssignmentExpression	chan = 0		504480	0		=			
ANR	504997	Identifier	chan		504480	0					
ANR	504998	PrimaryExpression	0		504480	1					
ANR	504999	Condition	chan < channels	209:23:3698:3712	504480	1	True				
ANR	505000	RelationalExpression	chan < channels		504480	0		<			
ANR	505001	Identifier	chan		504480	0					
ANR	505002	Identifier	channels		504480	1					
ANR	505003	PostIncDecOperationExpression	chan ++	209:40:3715:3720	504480	2	True				
ANR	505004	Identifier	chan		504480	0					
ANR	505005	IncDec	++		504480	1					
ANR	505006	CompoundStatement		203:48:3558:3558	504480	3					
ANR	505007	ExpressionStatement	"prediction_type [ chan ] = get_bits ( & alac -> gb , 4 )"	211:12:3738:3784	504480	0	True				
ANR	505008	AssignmentExpression	"prediction_type [ chan ] = get_bits ( & alac -> gb , 4 )"		504480	0		=			
ANR	505009	ArrayIndexing	prediction_type [ chan ]		504480	0					
ANR	505010	Identifier	prediction_type		504480	0					
ANR	505011	Identifier	chan		504480	1					
ANR	505012	CallExpression	"get_bits ( & alac -> gb , 4 )"		504480	1					
ANR	505013	Callee	get_bits		504480	0					
ANR	505014	Identifier	get_bits		504480	0					
ANR	505015	ArgumentList	& alac -> gb		504480	1					
ANR	505016	Argument	& alac -> gb		504480	0					
ANR	505017	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	505018	UnaryOperator	&		504480	0					
ANR	505019	PtrMemberAccess	alac -> gb		504480	1					
ANR	505020	Identifier	alac		504480	0					
ANR	505021	Identifier	gb		504480	1					
ANR	505022	Argument	4		504480	1					
ANR	505023	PrimaryExpression	4		504480	0					
ANR	505024	ExpressionStatement	"prediction_quantitization [ chan ] = get_bits ( & alac -> gb , 4 )"	213:12:3799:3855	504480	1	True				
ANR	505025	AssignmentExpression	"prediction_quantitization [ chan ] = get_bits ( & alac -> gb , 4 )"		504480	0		=			
ANR	505026	ArrayIndexing	prediction_quantitization [ chan ]		504480	0					
ANR	505027	Identifier	prediction_quantitization		504480	0					
ANR	505028	Identifier	chan		504480	1					
ANR	505029	CallExpression	"get_bits ( & alac -> gb , 4 )"		504480	1					
ANR	505030	Callee	get_bits		504480	0					
ANR	505031	Identifier	get_bits		504480	0					
ANR	505032	ArgumentList	& alac -> gb		504480	1					
ANR	505033	Argument	& alac -> gb		504480	0					
ANR	505034	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	505035	UnaryOperator	&		504480	0					
ANR	505036	PtrMemberAccess	alac -> gb		504480	1					
ANR	505037	Identifier	alac		504480	0					
ANR	505038	Identifier	gb		504480	1					
ANR	505039	Argument	4		504480	1					
ANR	505040	PrimaryExpression	4		504480	0					
ANR	505041	ExpressionStatement	"ricemodifier [ chan ] = get_bits ( & alac -> gb , 3 )"	217:12:3872:3915	504480	2	True				
ANR	505042	AssignmentExpression	"ricemodifier [ chan ] = get_bits ( & alac -> gb , 3 )"		504480	0		=			
ANR	505043	ArrayIndexing	ricemodifier [ chan ]		504480	0					
ANR	505044	Identifier	ricemodifier		504480	0					
ANR	505045	Identifier	chan		504480	1					
ANR	505046	CallExpression	"get_bits ( & alac -> gb , 3 )"		504480	1					
ANR	505047	Callee	get_bits		504480	0					
ANR	505048	Identifier	get_bits		504480	0					
ANR	505049	ArgumentList	& alac -> gb		504480	1					
ANR	505050	Argument	& alac -> gb		504480	0					
ANR	505051	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	505052	UnaryOperator	&		504480	0					
ANR	505053	PtrMemberAccess	alac -> gb		504480	1					
ANR	505054	Identifier	alac		504480	0					
ANR	505055	Identifier	gb		504480	1					
ANR	505056	Argument	3		504480	1					
ANR	505057	PrimaryExpression	3		504480	0					
ANR	505058	ExpressionStatement	"predictor_coef_num [ chan ] = get_bits ( & alac -> gb , 5 )"	219:12:3930:3979	504480	3	True				
ANR	505059	AssignmentExpression	"predictor_coef_num [ chan ] = get_bits ( & alac -> gb , 5 )"		504480	0		=			
ANR	505060	ArrayIndexing	predictor_coef_num [ chan ]		504480	0					
ANR	505061	Identifier	predictor_coef_num		504480	0					
ANR	505062	Identifier	chan		504480	1					
ANR	505063	CallExpression	"get_bits ( & alac -> gb , 5 )"		504480	1					
ANR	505064	Callee	get_bits		504480	0					
ANR	505065	Identifier	get_bits		504480	0					
ANR	505066	ArgumentList	& alac -> gb		504480	1					
ANR	505067	Argument	& alac -> gb		504480	0					
ANR	505068	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	505069	UnaryOperator	&		504480	0					
ANR	505070	PtrMemberAccess	alac -> gb		504480	1					
ANR	505071	Identifier	alac		504480	0					
ANR	505072	Identifier	gb		504480	1					
ANR	505073	Argument	5		504480	1					
ANR	505074	PrimaryExpression	5		504480	0					
ANR	505075	ForStatement	for ( i = 0 ; i < predictor_coef_num [ chan ] ; i ++ )		504480	4					
ANR	505076	ForInit	i = 0 ;	225:17:4045:4050	504480	0	True				
ANR	505077	AssignmentExpression	i = 0		504480	0		=			
ANR	505078	Identifier	i		504480	0					
ANR	505079	PrimaryExpression	0		504480	1					
ANR	505080	Condition	i < predictor_coef_num [ chan ]	225:24:4052:4079	504480	1	True				
ANR	505081	RelationalExpression	i < predictor_coef_num [ chan ]		504480	0		<			
ANR	505082	Identifier	i		504480	0					
ANR	505083	ArrayIndexing	predictor_coef_num [ chan ]		504480	1					
ANR	505084	Identifier	predictor_coef_num		504480	0					
ANR	505085	Identifier	chan		504480	1					
ANR	505086	PostIncDecOperationExpression	i ++	225:54:4082:4084	504480	2	True				
ANR	505087	Identifier	i		504480	0					
ANR	505088	IncDec	++		504480	1					
ANR	505089	ExpressionStatement	"predictor_coef_table [ chan ] [ i ] = ( int16_t ) get_bits ( & alac -> gb , 16 )"	227:16:4104:4168	504480	3	True				
ANR	505090	AssignmentExpression	"predictor_coef_table [ chan ] [ i ] = ( int16_t ) get_bits ( & alac -> gb , 16 )"		504480	0		=			
ANR	505091	ArrayIndexing	predictor_coef_table [ chan ] [ i ]		504480	0					
ANR	505092	ArrayIndexing	predictor_coef_table [ chan ]		504480	0					
ANR	505093	Identifier	predictor_coef_table		504480	0					
ANR	505094	Identifier	chan		504480	1					
ANR	505095	Identifier	i		504480	1					
ANR	505096	CastExpression	"( int16_t ) get_bits ( & alac -> gb , 16 )"		504480	1					
ANR	505097	CastTarget	int16_t		504480	0					
ANR	505098	CallExpression	"get_bits ( & alac -> gb , 16 )"		504480	1					
ANR	505099	Callee	get_bits		504480	0					
ANR	505100	Identifier	get_bits		504480	0					
ANR	505101	ArgumentList	& alac -> gb		504480	1					
ANR	505102	Argument	& alac -> gb		504480	0					
ANR	505103	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	505104	UnaryOperator	&		504480	0					
ANR	505105	PtrMemberAccess	alac -> gb		504480	1					
ANR	505106	Identifier	alac		504480	0					
ANR	505107	Identifier	gb		504480	1					
ANR	505108	Argument	16		504480	1					
ANR	505109	PrimaryExpression	16		504480	0					
ANR	505110	IfStatement	if ( alac -> wasted_bits )		504480	10					
ANR	505111	Condition	alac -> wasted_bits	233:12:4196:4212	504480	0	True				
ANR	505112	PtrMemberAccess	alac -> wasted_bits		504480	0					
ANR	505113	Identifier	alac		504480	0					
ANR	505114	Identifier	wasted_bits		504480	1					
ANR	505115	CompoundStatement		229:12:4065:4074	504480	1					
ANR	505116	IdentifierDeclStatement	"int i , ch ;"	235:12:4230:4239	504480	0	True				
ANR	505117	IdentifierDecl	i		504480	0					
ANR	505118	IdentifierDeclType	int		504480	0					
ANR	505119	Identifier	i		504480	1					
ANR	505120	IdentifierDecl	ch		504480	1					
ANR	505121	IdentifierDeclType	int		504480	0					
ANR	505122	Identifier	ch		504480	1					
ANR	505123	ForStatement	for ( i = 0 ; i < outputsamples ; i ++ )		504480	1					
ANR	505124	ForInit	i = 0 ;	237:17:4259:4264	504480	0	True				
ANR	505125	AssignmentExpression	i = 0		504480	0		=			
ANR	505126	Identifier	i		504480	0					
ANR	505127	PrimaryExpression	0		504480	1					
ANR	505128	Condition	i < outputsamples	237:24:4266:4282	504480	1	True				
ANR	505129	RelationalExpression	i < outputsamples		504480	0		<			
ANR	505130	Identifier	i		504480	0					
ANR	505131	Identifier	outputsamples		504480	1					
ANR	505132	PostIncDecOperationExpression	i ++	237:43:4285:4287	504480	2	True				
ANR	505133	Identifier	i		504480	0					
ANR	505134	IncDec	++		504480	1					
ANR	505135	CompoundStatement		231:48:4125:4125	504480	3					
ANR	505136	ForStatement	for ( ch = 0 ; ch < channels ; ch ++ )		504480	0					
ANR	505137	ForInit	ch = 0 ;	239:21:4314:4320	504480	0	True				
ANR	505138	AssignmentExpression	ch = 0		504480	0		=			
ANR	505139	Identifier	ch		504480	0					
ANR	505140	PrimaryExpression	0		504480	1					
ANR	505141	Condition	ch < channels	239:29:4322:4334	504480	1	True				
ANR	505142	RelationalExpression	ch < channels		504480	0		<			
ANR	505143	Identifier	ch		504480	0					
ANR	505144	Identifier	channels		504480	1					
ANR	505145	PostIncDecOperationExpression	ch ++	239:44:4337:4340	504480	2	True				
ANR	505146	Identifier	ch		504480	0					
ANR	505147	IncDec	++		504480	1					
ANR	505148	ExpressionStatement	"alac -> wasted_bits_buffer [ ch ] [ i ] = get_bits ( & alac -> gb , alac -> wasted_bits )"	241:20:4364:4436	504480	3	True				
ANR	505149	AssignmentExpression	"alac -> wasted_bits_buffer [ ch ] [ i ] = get_bits ( & alac -> gb , alac -> wasted_bits )"		504480	0		=			
ANR	505150	ArrayIndexing	alac -> wasted_bits_buffer [ ch ] [ i ]		504480	0					
ANR	505151	ArrayIndexing	alac -> wasted_bits_buffer [ ch ]		504480	0					
ANR	505152	PtrMemberAccess	alac -> wasted_bits_buffer		504480	0					
ANR	505153	Identifier	alac		504480	0					
ANR	505154	Identifier	wasted_bits_buffer		504480	1					
ANR	505155	Identifier	ch		504480	1					
ANR	505156	Identifier	i		504480	1					
ANR	505157	CallExpression	"get_bits ( & alac -> gb , alac -> wasted_bits )"		504480	1					
ANR	505158	Callee	get_bits		504480	0					
ANR	505159	Identifier	get_bits		504480	0					
ANR	505160	ArgumentList	& alac -> gb		504480	1					
ANR	505161	Argument	& alac -> gb		504480	0					
ANR	505162	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	505163	UnaryOperator	&		504480	0					
ANR	505164	PtrMemberAccess	alac -> gb		504480	1					
ANR	505165	Identifier	alac		504480	0					
ANR	505166	Identifier	gb		504480	1					
ANR	505167	Argument	alac -> wasted_bits		504480	1					
ANR	505168	PtrMemberAccess	alac -> wasted_bits		504480	0					
ANR	505169	Identifier	alac		504480	0					
ANR	505170	Identifier	wasted_bits		504480	1					
ANR	505171	ForStatement	for ( chan = 0 ; chan < channels ; chan ++ )		504480	11					
ANR	505172	ForInit	chan = 0 ;	247:13:4478:4486	504480	0	True				
ANR	505173	AssignmentExpression	chan = 0		504480	0		=			
ANR	505174	Identifier	chan		504480	0					
ANR	505175	PrimaryExpression	0		504480	1					
ANR	505176	Condition	chan < channels	247:23:4488:4502	504480	1	True				
ANR	505177	RelationalExpression	chan < channels		504480	0		<			
ANR	505178	Identifier	chan		504480	0					
ANR	505179	Identifier	channels		504480	1					
ANR	505180	PostIncDecOperationExpression	chan ++	247:40:4505:4510	504480	2	True				
ANR	505181	Identifier	chan		504480	0					
ANR	505182	IncDec	++		504480	1					
ANR	505183	CompoundStatement		241:48:4348:4348	504480	3					
ANR	505184	ExpressionStatement	"bastardized_rice_decompress ( alac , alac -> predicterror_buffer [ chan ] , outputsamples , readsamplesize , alac -> setinfo_rice_initialhistory , alac -> setinfo_rice_kmodifier , ricemodifier [ chan ] * alac -> setinfo_rice_historymult / 4 , ( 1 << alac -> setinfo_rice_kmodifier ) - 1 )"	249:12:4528:5075	504480	0	True				
ANR	505185	CallExpression	"bastardized_rice_decompress ( alac , alac -> predicterror_buffer [ chan ] , outputsamples , readsamplesize , alac -> setinfo_rice_initialhistory , alac -> setinfo_rice_kmodifier , ricemodifier [ chan ] * alac -> setinfo_rice_historymult / 4 , ( 1 << alac -> setinfo_rice_kmodifier ) - 1 )"		504480	0					
ANR	505186	Callee	bastardized_rice_decompress		504480	0					
ANR	505187	Identifier	bastardized_rice_decompress		504480	0					
ANR	505188	ArgumentList	alac		504480	1					
ANR	505189	Argument	alac		504480	0					
ANR	505190	Identifier	alac		504480	0					
ANR	505191	Argument	alac -> predicterror_buffer [ chan ]		504480	1					
ANR	505192	ArrayIndexing	alac -> predicterror_buffer [ chan ]		504480	0					
ANR	505193	PtrMemberAccess	alac -> predicterror_buffer		504480	0					
ANR	505194	Identifier	alac		504480	0					
ANR	505195	Identifier	predicterror_buffer		504480	1					
ANR	505196	Identifier	chan		504480	1					
ANR	505197	Argument	outputsamples		504480	2					
ANR	505198	Identifier	outputsamples		504480	0					
ANR	505199	Argument	readsamplesize		504480	3					
ANR	505200	Identifier	readsamplesize		504480	0					
ANR	505201	Argument	alac -> setinfo_rice_initialhistory		504480	4					
ANR	505202	PtrMemberAccess	alac -> setinfo_rice_initialhistory		504480	0					
ANR	505203	Identifier	alac		504480	0					
ANR	505204	Identifier	setinfo_rice_initialhistory		504480	1					
ANR	505205	Argument	alac -> setinfo_rice_kmodifier		504480	5					
ANR	505206	PtrMemberAccess	alac -> setinfo_rice_kmodifier		504480	0					
ANR	505207	Identifier	alac		504480	0					
ANR	505208	Identifier	setinfo_rice_kmodifier		504480	1					
ANR	505209	Argument	ricemodifier [ chan ] * alac -> setinfo_rice_historymult / 4		504480	6					
ANR	505210	MultiplicativeExpression	ricemodifier [ chan ] * alac -> setinfo_rice_historymult / 4		504480	0		*			
ANR	505211	ArrayIndexing	ricemodifier [ chan ]		504480	0					
ANR	505212	Identifier	ricemodifier		504480	0					
ANR	505213	Identifier	chan		504480	1					
ANR	505214	MultiplicativeExpression	alac -> setinfo_rice_historymult / 4		504480	1		/			
ANR	505215	PtrMemberAccess	alac -> setinfo_rice_historymult		504480	0					
ANR	505216	Identifier	alac		504480	0					
ANR	505217	Identifier	setinfo_rice_historymult		504480	1					
ANR	505218	PrimaryExpression	4		504480	1					
ANR	505219	Argument	( 1 << alac -> setinfo_rice_kmodifier ) - 1		504480	7					
ANR	505220	AdditiveExpression	( 1 << alac -> setinfo_rice_kmodifier ) - 1		504480	0		-			
ANR	505221	ShiftExpression	1 << alac -> setinfo_rice_kmodifier		504480	0		<<			
ANR	505222	PrimaryExpression	1		504480	0					
ANR	505223	PtrMemberAccess	alac -> setinfo_rice_kmodifier		504480	1					
ANR	505224	Identifier	alac		504480	0					
ANR	505225	Identifier	setinfo_rice_kmodifier		504480	1					
ANR	505226	PrimaryExpression	1		504480	1					
ANR	505227	IfStatement	if ( prediction_type [ chan ] == 0 )		504480	1					
ANR	505228	Condition	prediction_type [ chan ] == 0	267:16:5096:5121	504480	0	True				
ANR	505229	EqualityExpression	prediction_type [ chan ] == 0		504480	0		==			
ANR	505230	ArrayIndexing	prediction_type [ chan ]		504480	0					
ANR	505231	Identifier	prediction_type		504480	0					
ANR	505232	Identifier	chan		504480	1					
ANR	505233	PrimaryExpression	0		504480	1					
ANR	505234	CompoundStatement		261:44:4959:4959	504480	1					
ANR	505235	ExpressionStatement	"predictor_decompress_fir_adapt ( alac -> predicterror_buffer [ chan ] , alac -> outputsamples_buffer [ chan ] , outputsamples , readsamplesize , predictor_coef_table [ chan ] , predictor_coef_num [ chan ] , prediction_quantitization [ chan ] )"	271:16:5179:5682	504480	0	True				
ANR	505236	CallExpression	"predictor_decompress_fir_adapt ( alac -> predicterror_buffer [ chan ] , alac -> outputsamples_buffer [ chan ] , outputsamples , readsamplesize , predictor_coef_table [ chan ] , predictor_coef_num [ chan ] , prediction_quantitization [ chan ] )"		504480	0					
ANR	505237	Callee	predictor_decompress_fir_adapt		504480	0					
ANR	505238	Identifier	predictor_decompress_fir_adapt		504480	0					
ANR	505239	ArgumentList	alac -> predicterror_buffer [ chan ]		504480	1					
ANR	505240	Argument	alac -> predicterror_buffer [ chan ]		504480	0					
ANR	505241	ArrayIndexing	alac -> predicterror_buffer [ chan ]		504480	0					
ANR	505242	PtrMemberAccess	alac -> predicterror_buffer		504480	0					
ANR	505243	Identifier	alac		504480	0					
ANR	505244	Identifier	predicterror_buffer		504480	1					
ANR	505245	Identifier	chan		504480	1					
ANR	505246	Argument	alac -> outputsamples_buffer [ chan ]		504480	1					
ANR	505247	ArrayIndexing	alac -> outputsamples_buffer [ chan ]		504480	0					
ANR	505248	PtrMemberAccess	alac -> outputsamples_buffer		504480	0					
ANR	505249	Identifier	alac		504480	0					
ANR	505250	Identifier	outputsamples_buffer		504480	1					
ANR	505251	Identifier	chan		504480	1					
ANR	505252	Argument	outputsamples		504480	2					
ANR	505253	Identifier	outputsamples		504480	0					
ANR	505254	Argument	readsamplesize		504480	3					
ANR	505255	Identifier	readsamplesize		504480	0					
ANR	505256	Argument	predictor_coef_table [ chan ]		504480	4					
ANR	505257	ArrayIndexing	predictor_coef_table [ chan ]		504480	0					
ANR	505258	Identifier	predictor_coef_table		504480	0					
ANR	505259	Identifier	chan		504480	1					
ANR	505260	Argument	predictor_coef_num [ chan ]		504480	5					
ANR	505261	ArrayIndexing	predictor_coef_num [ chan ]		504480	0					
ANR	505262	Identifier	predictor_coef_num		504480	0					
ANR	505263	Identifier	chan		504480	1					
ANR	505264	Argument	prediction_quantitization [ chan ]		504480	6					
ANR	505265	ArrayIndexing	prediction_quantitization [ chan ]		504480	0					
ANR	505266	Identifier	prediction_quantitization		504480	0					
ANR	505267	Identifier	chan		504480	1					
ANR	505268	ElseStatement	else		504480	0					
ANR	505269	CompoundStatement		279:19:5539:5539	504480	0					
ANR	505270	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""FIXME: unhandled prediction type: %i\\n"" , prediction_type [ chan ] )"	287:16:5723:5815	504480	0	True				
ANR	505271	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""FIXME: unhandled prediction type: %i\\n"" , prediction_type [ chan ] )"		504480	0					
ANR	505272	Callee	av_log		504480	0					
ANR	505273	Identifier	av_log		504480	0					
ANR	505274	ArgumentList	avctx		504480	1					
ANR	505275	Argument	avctx		504480	0					
ANR	505276	Identifier	avctx		504480	0					
ANR	505277	Argument	AV_LOG_ERROR		504480	1					
ANR	505278	Identifier	AV_LOG_ERROR		504480	0					
ANR	505279	Argument	"""FIXME: unhandled prediction type: %i\\n"""		504480	2					
ANR	505280	PrimaryExpression	"""FIXME: unhandled prediction type: %i\\n"""		504480	0					
ANR	505281	Argument	prediction_type [ chan ]		504480	3					
ANR	505282	ArrayIndexing	prediction_type [ chan ]		504480	0					
ANR	505283	Identifier	prediction_type		504480	0					
ANR	505284	Identifier	chan		504480	1					
ANR	505285	ElseStatement	else		504480	0					
ANR	505286	CompoundStatement		303:8:6117:6128	504480	0					
ANR	505287	IdentifierDeclStatement	"int i , chan ;"	309:8:6282:6293	504480	0	True				
ANR	505288	IdentifierDecl	i		504480	0					
ANR	505289	IdentifierDeclType	int		504480	0					
ANR	505290	Identifier	i		504480	1					
ANR	505291	IdentifierDecl	chan		504480	1					
ANR	505292	IdentifierDeclType	int		504480	0					
ANR	505293	Identifier	chan		504480	1					
ANR	505294	IfStatement	if ( alac -> setinfo_sample_size <= 16 )		504480	1					
ANR	505295	Condition	alac -> setinfo_sample_size <= 16	311:12:6308:6338	504480	0	True				
ANR	505296	RelationalExpression	alac -> setinfo_sample_size <= 16		504480	0		<=			
ANR	505297	PtrMemberAccess	alac -> setinfo_sample_size		504480	0					
ANR	505298	Identifier	alac		504480	0					
ANR	505299	Identifier	setinfo_sample_size		504480	1					
ANR	505300	PrimaryExpression	16		504480	1					
ANR	505301	CompoundStatement		305:45:6176:6176	504480	1					
ANR	505302	ForStatement	for ( i = 0 ; i < outputsamples ; i ++ )		504480	0					
ANR	505303	ForInit	i = 0 ;	313:13:6357:6362	504480	0	True				
ANR	505304	AssignmentExpression	i = 0		504480	0		=			
ANR	505305	Identifier	i		504480	0					
ANR	505306	PrimaryExpression	0		504480	1					
ANR	505307	Condition	i < outputsamples	313:20:6364:6380	504480	1	True				
ANR	505308	RelationalExpression	i < outputsamples		504480	0		<			
ANR	505309	Identifier	i		504480	0					
ANR	505310	Identifier	outputsamples		504480	1					
ANR	505311	PostIncDecOperationExpression	i ++	313:39:6383:6385	504480	2	True				
ANR	505312	Identifier	i		504480	0					
ANR	505313	IncDec	++		504480	1					
ANR	505314	ForStatement	for ( chan = 0 ; chan < channels ; chan ++ )		504480	3					
ANR	505315	ForInit	chan = 0 ;	315:17:6406:6414	504480	0	True				
ANR	505316	AssignmentExpression	chan = 0		504480	0		=			
ANR	505317	Identifier	chan		504480	0					
ANR	505318	PrimaryExpression	0		504480	1					
ANR	505319	Condition	chan < channels	315:27:6416:6430	504480	1	True				
ANR	505320	RelationalExpression	chan < channels		504480	0		<			
ANR	505321	Identifier	chan		504480	0					
ANR	505322	Identifier	channels		504480	1					
ANR	505323	PostIncDecOperationExpression	chan ++	315:44:6433:6438	504480	2	True				
ANR	505324	Identifier	chan		504480	0					
ANR	505325	IncDec	++		504480	1					
ANR	505326	CompoundStatement		311:16:6295:6312	504480	3					
ANR	505327	IdentifierDeclStatement	int32_t audiobits ;	317:16:6460:6477	504480	0	True				
ANR	505328	IdentifierDecl	audiobits		504480	0					
ANR	505329	IdentifierDeclType	int32_t		504480	0					
ANR	505330	Identifier	audiobits		504480	1					
ANR	505331	ExpressionStatement	"audiobits = get_sbits_long ( & alac -> gb , alac -> setinfo_sample_size )"	321:16:6498:6562	504480	1	True				
ANR	505332	AssignmentExpression	"audiobits = get_sbits_long ( & alac -> gb , alac -> setinfo_sample_size )"		504480	0		=			
ANR	505333	Identifier	audiobits		504480	0					
ANR	505334	CallExpression	"get_sbits_long ( & alac -> gb , alac -> setinfo_sample_size )"		504480	1					
ANR	505335	Callee	get_sbits_long		504480	0					
ANR	505336	Identifier	get_sbits_long		504480	0					
ANR	505337	ArgumentList	& alac -> gb		504480	1					
ANR	505338	Argument	& alac -> gb		504480	0					
ANR	505339	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	505340	UnaryOperator	&		504480	0					
ANR	505341	PtrMemberAccess	alac -> gb		504480	1					
ANR	505342	Identifier	alac		504480	0					
ANR	505343	Identifier	gb		504480	1					
ANR	505344	Argument	alac -> setinfo_sample_size		504480	1					
ANR	505345	PtrMemberAccess	alac -> setinfo_sample_size		504480	0					
ANR	505346	Identifier	alac		504480	0					
ANR	505347	Identifier	setinfo_sample_size		504480	1					
ANR	505348	ExpressionStatement	alac -> outputsamples_buffer [ chan ] [ i ] = audiobits	325:16:6583:6630	504480	2	True				
ANR	505349	AssignmentExpression	alac -> outputsamples_buffer [ chan ] [ i ] = audiobits		504480	0		=			
ANR	505350	ArrayIndexing	alac -> outputsamples_buffer [ chan ] [ i ]		504480	0					
ANR	505351	ArrayIndexing	alac -> outputsamples_buffer [ chan ]		504480	0					
ANR	505352	PtrMemberAccess	alac -> outputsamples_buffer		504480	0					
ANR	505353	Identifier	alac		504480	0					
ANR	505354	Identifier	outputsamples_buffer		504480	1					
ANR	505355	Identifier	chan		504480	1					
ANR	505356	Identifier	i		504480	1					
ANR	505357	Identifier	audiobits		504480	1					
ANR	505358	ElseStatement	else		504480	0					
ANR	505359	CompoundStatement		323:15:6498:6498	504480	0					
ANR	505360	ForStatement	for ( i = 0 ; i < outputsamples ; i ++ )		504480	0					
ANR	505361	ForInit	i = 0 ;	331:17:6683:6688	504480	0	True				
ANR	505362	AssignmentExpression	i = 0		504480	0		=			
ANR	505363	Identifier	i		504480	0					
ANR	505364	PrimaryExpression	0		504480	1					
ANR	505365	Condition	i < outputsamples	331:24:6690:6706	504480	1	True				
ANR	505366	RelationalExpression	i < outputsamples		504480	0		<			
ANR	505367	Identifier	i		504480	0					
ANR	505368	Identifier	outputsamples		504480	1					
ANR	505369	PostIncDecOperationExpression	i ++	331:43:6709:6711	504480	2	True				
ANR	505370	Identifier	i		504480	0					
ANR	505371	IncDec	++		504480	1					
ANR	505372	CompoundStatement		325:48:6549:6549	504480	3					
ANR	505373	ForStatement	for ( chan = 0 ; chan < channels ; chan ++ )		504480	0					
ANR	505374	ForInit	chan = 0 ;	333:21:6738:6746	504480	0	True				
ANR	505375	AssignmentExpression	chan = 0		504480	0		=			
ANR	505376	Identifier	chan		504480	0					
ANR	505377	PrimaryExpression	0		504480	1					
ANR	505378	Condition	chan < channels	333:31:6748:6762	504480	1	True				
ANR	505379	RelationalExpression	chan < channels		504480	0		<			
ANR	505380	Identifier	chan		504480	0					
ANR	505381	Identifier	channels		504480	1					
ANR	505382	PostIncDecOperationExpression	chan ++	333:48:6765:6770	504480	2	True				
ANR	505383	Identifier	chan		504480	0					
ANR	505384	IncDec	++		504480	1					
ANR	505385	CompoundStatement		327:56:6608:6608	504480	3					
ANR	505386	ExpressionStatement	"alac -> outputsamples_buffer [ chan ] [ i ] = get_bits ( & alac -> gb , alac -> setinfo_sample_size )"	335:20:6796:6939	504480	0	True				
ANR	505387	AssignmentExpression	"alac -> outputsamples_buffer [ chan ] [ i ] = get_bits ( & alac -> gb , alac -> setinfo_sample_size )"		504480	0		=			
ANR	505388	ArrayIndexing	alac -> outputsamples_buffer [ chan ] [ i ]		504480	0					
ANR	505389	ArrayIndexing	alac -> outputsamples_buffer [ chan ]		504480	0					
ANR	505390	PtrMemberAccess	alac -> outputsamples_buffer		504480	0					
ANR	505391	Identifier	alac		504480	0					
ANR	505392	Identifier	outputsamples_buffer		504480	1					
ANR	505393	Identifier	chan		504480	1					
ANR	505394	Identifier	i		504480	1					
ANR	505395	CallExpression	"get_bits ( & alac -> gb , alac -> setinfo_sample_size )"		504480	1					
ANR	505396	Callee	get_bits		504480	0					
ANR	505397	Identifier	get_bits		504480	0					
ANR	505398	ArgumentList	& alac -> gb		504480	1					
ANR	505399	Argument	& alac -> gb		504480	0					
ANR	505400	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	505401	UnaryOperator	&		504480	0					
ANR	505402	PtrMemberAccess	alac -> gb		504480	1					
ANR	505403	Identifier	alac		504480	0					
ANR	505404	Identifier	gb		504480	1					
ANR	505405	Argument	alac -> setinfo_sample_size		504480	1					
ANR	505406	PtrMemberAccess	alac -> setinfo_sample_size		504480	0					
ANR	505407	Identifier	alac		504480	0					
ANR	505408	Identifier	setinfo_sample_size		504480	1					
ANR	505409	ExpressionStatement	"alac -> outputsamples_buffer [ chan ] [ i ] = sign_extend ( alac -> outputsamples_buffer [ chan ] [ i ] , alac -> setinfo_sample_size )"	339:20:6962:7146	504480	1	True				
ANR	505410	AssignmentExpression	"alac -> outputsamples_buffer [ chan ] [ i ] = sign_extend ( alac -> outputsamples_buffer [ chan ] [ i ] , alac -> setinfo_sample_size )"		504480	0		=			
ANR	505411	ArrayIndexing	alac -> outputsamples_buffer [ chan ] [ i ]		504480	0					
ANR	505412	ArrayIndexing	alac -> outputsamples_buffer [ chan ]		504480	0					
ANR	505413	PtrMemberAccess	alac -> outputsamples_buffer		504480	0					
ANR	505414	Identifier	alac		504480	0					
ANR	505415	Identifier	outputsamples_buffer		504480	1					
ANR	505416	Identifier	chan		504480	1					
ANR	505417	Identifier	i		504480	1					
ANR	505418	CallExpression	"sign_extend ( alac -> outputsamples_buffer [ chan ] [ i ] , alac -> setinfo_sample_size )"		504480	1					
ANR	505419	Callee	sign_extend		504480	0					
ANR	505420	Identifier	sign_extend		504480	0					
ANR	505421	ArgumentList	alac -> outputsamples_buffer [ chan ] [ i ]		504480	1					
ANR	505422	Argument	alac -> outputsamples_buffer [ chan ] [ i ]		504480	0					
ANR	505423	ArrayIndexing	alac -> outputsamples_buffer [ chan ] [ i ]		504480	0					
ANR	505424	ArrayIndexing	alac -> outputsamples_buffer [ chan ]		504480	0					
ANR	505425	PtrMemberAccess	alac -> outputsamples_buffer		504480	0					
ANR	505426	Identifier	alac		504480	0					
ANR	505427	Identifier	outputsamples_buffer		504480	1					
ANR	505428	Identifier	chan		504480	1					
ANR	505429	Identifier	i		504480	1					
ANR	505430	Argument	alac -> setinfo_sample_size		504480	1					
ANR	505431	PtrMemberAccess	alac -> setinfo_sample_size		504480	0					
ANR	505432	Identifier	alac		504480	0					
ANR	505433	Identifier	setinfo_sample_size		504480	1					
ANR	505434	ExpressionStatement	alac -> wasted_bits = 0	349:8:7202:7223	504480	2	True				
ANR	505435	AssignmentExpression	alac -> wasted_bits = 0		504480	0		=			
ANR	505436	PtrMemberAccess	alac -> wasted_bits		504480	0					
ANR	505437	Identifier	alac		504480	0					
ANR	505438	Identifier	wasted_bits		504480	1					
ANR	505439	PrimaryExpression	0		504480	1					
ANR	505440	ExpressionStatement	interlacing_shift = 0	351:8:7234:7255	504480	3	True				
ANR	505441	AssignmentExpression	interlacing_shift = 0		504480	0		=			
ANR	505442	Identifier	interlacing_shift		504480	0					
ANR	505443	PrimaryExpression	0		504480	1					
ANR	505444	ExpressionStatement	interlacing_leftweight = 0	353:8:7266:7292	504480	4	True				
ANR	505445	AssignmentExpression	interlacing_leftweight = 0		504480	0		=			
ANR	505446	Identifier	interlacing_leftweight		504480	0					
ANR	505447	PrimaryExpression	0		504480	1					
ANR	505448	IfStatement	"if ( get_bits ( & alac -> gb , 3 ) != 7 )"		504480	27					
ANR	505449	Condition	"get_bits ( & alac -> gb , 3 ) != 7"	357:8:7310:7336	504480	0	True				
ANR	505450	EqualityExpression	"get_bits ( & alac -> gb , 3 ) != 7"		504480	0		!=			
ANR	505451	CallExpression	"get_bits ( & alac -> gb , 3 )"		504480	0					
ANR	505452	Callee	get_bits		504480	0					
ANR	505453	Identifier	get_bits		504480	0					
ANR	505454	ArgumentList	& alac -> gb		504480	1					
ANR	505455	Argument	& alac -> gb		504480	0					
ANR	505456	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	505457	UnaryOperator	&		504480	0					
ANR	505458	PtrMemberAccess	alac -> gb		504480	1					
ANR	505459	Identifier	alac		504480	0					
ANR	505460	Identifier	gb		504480	1					
ANR	505461	Argument	3		504480	1					
ANR	505462	PrimaryExpression	3		504480	0					
ANR	505463	PrimaryExpression	7		504480	1					
ANR	505464	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error : Wrong End Of Frame\\n"" )"	359:8:7348:7407	504480	1	True				
ANR	505465	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error : Wrong End Of Frame\\n"" )"		504480	0					
ANR	505466	Callee	av_log		504480	0					
ANR	505467	Identifier	av_log		504480	0					
ANR	505468	ArgumentList	avctx		504480	1					
ANR	505469	Argument	avctx		504480	0					
ANR	505470	Identifier	avctx		504480	0					
ANR	505471	Argument	AV_LOG_ERROR		504480	1					
ANR	505472	Identifier	AV_LOG_ERROR		504480	0					
ANR	505473	Argument	"""Error : Wrong End Of Frame\\n"""		504480	2					
ANR	505474	PrimaryExpression	"""Error : Wrong End Of Frame\\n"""		504480	0					
ANR	505475	SwitchStatement	switch ( alac -> setinfo_sample_size )		504480	28					
ANR	505476	Condition	alac -> setinfo_sample_size	363:11:7423:7447	504480	0	True				
ANR	505477	PtrMemberAccess	alac -> setinfo_sample_size		504480	0					
ANR	505478	Identifier	alac		504480	0					
ANR	505479	Identifier	setinfo_sample_size		504480	1					
ANR	505480	CompoundStatement		357:38:7285:7285	504480	1					
ANR	505481	Label	case 16 :	365:4:7457:7464	504480	0	True				
ANR	505482	IfStatement	if ( channels == 2 )		504480	1					
ANR	505483	Condition	channels == 2	367:12:7479:7491	504480	0	True				
ANR	505484	EqualityExpression	channels == 2		504480	0		==			
ANR	505485	Identifier	channels		504480	0					
ANR	505486	PrimaryExpression	2		504480	1					
ANR	505487	CompoundStatement		361:27:7329:7329	504480	1					
ANR	505488	ExpressionStatement	"reconstruct_stereo_16 ( alac -> outputsamples_buffer , ( int16_t * ) outbuffer , alac -> numchannels , outputsamples , interlacing_shift , interlacing_leftweight )"	369:12:7509:7831	504480	0	True				
ANR	505489	CallExpression	"reconstruct_stereo_16 ( alac -> outputsamples_buffer , ( int16_t * ) outbuffer , alac -> numchannels , outputsamples , interlacing_shift , interlacing_leftweight )"		504480	0					
ANR	505490	Callee	reconstruct_stereo_16		504480	0					
ANR	505491	Identifier	reconstruct_stereo_16		504480	0					
ANR	505492	ArgumentList	alac -> outputsamples_buffer		504480	1					
ANR	505493	Argument	alac -> outputsamples_buffer		504480	0					
ANR	505494	PtrMemberAccess	alac -> outputsamples_buffer		504480	0					
ANR	505495	Identifier	alac		504480	0					
ANR	505496	Identifier	outputsamples_buffer		504480	1					
ANR	505497	Argument	( int16_t * ) outbuffer		504480	1					
ANR	505498	CastExpression	( int16_t * ) outbuffer		504480	0					
ANR	505499	CastTarget	int16_t *		504480	0					
ANR	505500	Identifier	outbuffer		504480	1					
ANR	505501	Argument	alac -> numchannels		504480	2					
ANR	505502	PtrMemberAccess	alac -> numchannels		504480	0					
ANR	505503	Identifier	alac		504480	0					
ANR	505504	Identifier	numchannels		504480	1					
ANR	505505	Argument	outputsamples		504480	3					
ANR	505506	Identifier	outputsamples		504480	0					
ANR	505507	Argument	interlacing_shift		504480	4					
ANR	505508	Identifier	interlacing_shift		504480	0					
ANR	505509	Argument	interlacing_leftweight		504480	5					
ANR	505510	Identifier	interlacing_leftweight		504480	0					
ANR	505511	ElseStatement	else		504480	0					
ANR	505512	CompoundStatement		377:12:7699:7704	504480	0					
ANR	505513	IdentifierDeclStatement	int i ;	383:12:7864:7869	504480	0	True				
ANR	505514	IdentifierDecl	i		504480	0					
ANR	505515	IdentifierDeclType	int		504480	0					
ANR	505516	Identifier	i		504480	1					
ANR	505517	ForStatement	for ( i = 0 ; i < outputsamples ; i ++ )		504480	1					
ANR	505518	ForInit	i = 0 ;	385:17:7889:7894	504480	0	True				
ANR	505519	AssignmentExpression	i = 0		504480	0		=			
ANR	505520	Identifier	i		504480	0					
ANR	505521	PrimaryExpression	0		504480	1					
ANR	505522	Condition	i < outputsamples	385:24:7896:7912	504480	1	True				
ANR	505523	RelationalExpression	i < outputsamples		504480	0		<			
ANR	505524	Identifier	i		504480	0					
ANR	505525	Identifier	outputsamples		504480	1					
ANR	505526	PostIncDecOperationExpression	i ++	385:43:7915:7917	504480	2	True				
ANR	505527	Identifier	i		504480	0					
ANR	505528	IncDec	++		504480	1					
ANR	505529	CompoundStatement		379:48:7755:7755	504480	3					
ANR	505530	ExpressionStatement	( ( int16_t * ) outbuffer ) [ i ] = alac -> outputsamples_buffer [ 0 ] [ i ]	387:16:7939:7998	504480	0	True				
ANR	505531	AssignmentExpression	( ( int16_t * ) outbuffer ) [ i ] = alac -> outputsamples_buffer [ 0 ] [ i ]		504480	0		=			
ANR	505532	ArrayIndexing	( ( int16_t * ) outbuffer ) [ i ]		504480	0					
ANR	505533	CastExpression	( int16_t * ) outbuffer		504480	0					
ANR	505534	CastTarget	int16_t *		504480	0					
ANR	505535	Identifier	outbuffer		504480	1					
ANR	505536	Identifier	i		504480	1					
ANR	505537	ArrayIndexing	alac -> outputsamples_buffer [ 0 ] [ i ]		504480	1					
ANR	505538	ArrayIndexing	alac -> outputsamples_buffer [ 0 ]		504480	0					
ANR	505539	PtrMemberAccess	alac -> outputsamples_buffer		504480	0					
ANR	505540	Identifier	alac		504480	0					
ANR	505541	Identifier	outputsamples_buffer		504480	1					
ANR	505542	PrimaryExpression	0		504480	1					
ANR	505543	Identifier	i		504480	1					
ANR	505544	BreakStatement	break ;	393:8:8035:8040	504480	2	True				
ANR	505545	Label	case 24 :	395:4:8047:8054	504480	3	True				
ANR	505546	IfStatement	if ( channels == 2 )		504480	4					
ANR	505547	Condition	channels == 2	397:12:8069:8081	504480	0	True				
ANR	505548	EqualityExpression	channels == 2		504480	0		==			
ANR	505549	Identifier	channels		504480	0					
ANR	505550	PrimaryExpression	2		504480	1					
ANR	505551	CompoundStatement		391:27:7919:7919	504480	1					
ANR	505552	ExpressionStatement	"decorrelate_stereo_24 ( alac -> outputsamples_buffer , outbuffer , alac -> wasted_bits_buffer , alac -> wasted_bits , alac -> numchannels , outputsamples , interlacing_shift , interlacing_leftweight )"	399:12:8099:8526	504480	0	True				
ANR	505553	CallExpression	"decorrelate_stereo_24 ( alac -> outputsamples_buffer , outbuffer , alac -> wasted_bits_buffer , alac -> wasted_bits , alac -> numchannels , outputsamples , interlacing_shift , interlacing_leftweight )"		504480	0					
ANR	505554	Callee	decorrelate_stereo_24		504480	0					
ANR	505555	Identifier	decorrelate_stereo_24		504480	0					
ANR	505556	ArgumentList	alac -> outputsamples_buffer		504480	1					
ANR	505557	Argument	alac -> outputsamples_buffer		504480	0					
ANR	505558	PtrMemberAccess	alac -> outputsamples_buffer		504480	0					
ANR	505559	Identifier	alac		504480	0					
ANR	505560	Identifier	outputsamples_buffer		504480	1					
ANR	505561	Argument	outbuffer		504480	1					
ANR	505562	Identifier	outbuffer		504480	0					
ANR	505563	Argument	alac -> wasted_bits_buffer		504480	2					
ANR	505564	PtrMemberAccess	alac -> wasted_bits_buffer		504480	0					
ANR	505565	Identifier	alac		504480	0					
ANR	505566	Identifier	wasted_bits_buffer		504480	1					
ANR	505567	Argument	alac -> wasted_bits		504480	3					
ANR	505568	PtrMemberAccess	alac -> wasted_bits		504480	0					
ANR	505569	Identifier	alac		504480	0					
ANR	505570	Identifier	wasted_bits		504480	1					
ANR	505571	Argument	alac -> numchannels		504480	4					
ANR	505572	PtrMemberAccess	alac -> numchannels		504480	0					
ANR	505573	Identifier	alac		504480	0					
ANR	505574	Identifier	numchannels		504480	1					
ANR	505575	Argument	outputsamples		504480	5					
ANR	505576	Identifier	outputsamples		504480	0					
ANR	505577	Argument	interlacing_shift		504480	6					
ANR	505578	Identifier	interlacing_shift		504480	0					
ANR	505579	Argument	interlacing_leftweight		504480	7					
ANR	505580	Identifier	interlacing_leftweight		504480	0					
ANR	505581	ElseStatement	else		504480	0					
ANR	505582	CompoundStatement		411:12:8394:8399	504480	0					
ANR	505583	IdentifierDeclStatement	int i ;	417:12:8559:8564	504480	0	True				
ANR	505584	IdentifierDecl	i		504480	0					
ANR	505585	IdentifierDeclType	int		504480	0					
ANR	505586	Identifier	i		504480	1					
ANR	505587	ForStatement	for ( i = 0 ; i < outputsamples ; i ++ )		504480	1					
ANR	505588	ForInit	i = 0 ;	419:17:8584:8589	504480	0	True				
ANR	505589	AssignmentExpression	i = 0		504480	0		=			
ANR	505590	Identifier	i		504480	0					
ANR	505591	PrimaryExpression	0		504480	1					
ANR	505592	Condition	i < outputsamples	419:24:8591:8607	504480	1	True				
ANR	505593	RelationalExpression	i < outputsamples		504480	0		<			
ANR	505594	Identifier	i		504480	0					
ANR	505595	Identifier	outputsamples		504480	1					
ANR	505596	PostIncDecOperationExpression	i ++	419:43:8610:8612	504480	2	True				
ANR	505597	Identifier	i		504480	0					
ANR	505598	IncDec	++		504480	1					
ANR	505599	ExpressionStatement	( ( int32_t * ) outbuffer ) [ i ] = alac -> outputsamples_buffer [ 0 ] [ i ] << 8	421:16:8632:8697	504480	3	True				
ANR	505600	AssignmentExpression	( ( int32_t * ) outbuffer ) [ i ] = alac -> outputsamples_buffer [ 0 ] [ i ] << 8		504480	0		=			
ANR	505601	ArrayIndexing	( ( int32_t * ) outbuffer ) [ i ]		504480	0					
ANR	505602	CastExpression	( int32_t * ) outbuffer		504480	0					
ANR	505603	CastTarget	int32_t *		504480	0					
ANR	505604	Identifier	outbuffer		504480	1					
ANR	505605	Identifier	i		504480	1					
ANR	505606	ShiftExpression	alac -> outputsamples_buffer [ 0 ] [ i ] << 8		504480	1		<<			
ANR	505607	ArrayIndexing	alac -> outputsamples_buffer [ 0 ] [ i ]		504480	0					
ANR	505608	ArrayIndexing	alac -> outputsamples_buffer [ 0 ]		504480	0					
ANR	505609	PtrMemberAccess	alac -> outputsamples_buffer		504480	0					
ANR	505610	Identifier	alac		504480	0					
ANR	505611	Identifier	outputsamples_buffer		504480	1					
ANR	505612	PrimaryExpression	0		504480	1					
ANR	505613	Identifier	i		504480	1					
ANR	505614	PrimaryExpression	8		504480	1					
ANR	505615	BreakStatement	break ;	425:8:8719:8724	504480	5	True				
ANR	505616	IfStatement	if ( input_buffer_size * 8 - get_bits_count ( & alac -> gb ) > 8 )		504480	29					
ANR	505617	Condition	input_buffer_size * 8 - get_bits_count ( & alac -> gb ) > 8	431:8:8744:8796	504480	0	True				
ANR	505618	RelationalExpression	input_buffer_size * 8 - get_bits_count ( & alac -> gb ) > 8		504480	0		>			
ANR	505619	AdditiveExpression	input_buffer_size * 8 - get_bits_count ( & alac -> gb )		504480	0		-			
ANR	505620	MultiplicativeExpression	input_buffer_size * 8		504480	0		*			
ANR	505621	Identifier	input_buffer_size		504480	0					
ANR	505622	PrimaryExpression	8		504480	1					
ANR	505623	CallExpression	get_bits_count ( & alac -> gb )		504480	1					
ANR	505624	Callee	get_bits_count		504480	0					
ANR	505625	Identifier	get_bits_count		504480	0					
ANR	505626	ArgumentList	& alac -> gb		504480	1					
ANR	505627	Argument	& alac -> gb		504480	0					
ANR	505628	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	505629	UnaryOperator	&		504480	0					
ANR	505630	PtrMemberAccess	alac -> gb		504480	1					
ANR	505631	Identifier	alac		504480	0					
ANR	505632	Identifier	gb		504480	1					
ANR	505633	PrimaryExpression	8		504480	1					
ANR	505634	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""Error : %d bits left\\n"" , input_buffer_size * 8 - get_bits_count ( & alac -> gb ) )"	433:8:8808:8912	504480	1	True				
ANR	505635	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""Error : %d bits left\\n"" , input_buffer_size * 8 - get_bits_count ( & alac -> gb ) )"		504480	0					
ANR	505636	Callee	av_log		504480	0					
ANR	505637	Identifier	av_log		504480	0					
ANR	505638	ArgumentList	avctx		504480	1					
ANR	505639	Argument	avctx		504480	0					
ANR	505640	Identifier	avctx		504480	0					
ANR	505641	Argument	AV_LOG_ERROR		504480	1					
ANR	505642	Identifier	AV_LOG_ERROR		504480	0					
ANR	505643	Argument	"""Error : %d bits left\\n"""		504480	2					
ANR	505644	PrimaryExpression	"""Error : %d bits left\\n"""		504480	0					
ANR	505645	Argument	input_buffer_size * 8 - get_bits_count ( & alac -> gb )		504480	3					
ANR	505646	AdditiveExpression	input_buffer_size * 8 - get_bits_count ( & alac -> gb )		504480	0		-			
ANR	505647	MultiplicativeExpression	input_buffer_size * 8		504480	0		*			
ANR	505648	Identifier	input_buffer_size		504480	0					
ANR	505649	PrimaryExpression	8		504480	1					
ANR	505650	CallExpression	get_bits_count ( & alac -> gb )		504480	1					
ANR	505651	Callee	get_bits_count		504480	0					
ANR	505652	Identifier	get_bits_count		504480	0					
ANR	505653	ArgumentList	& alac -> gb		504480	1					
ANR	505654	Argument	& alac -> gb		504480	0					
ANR	505655	UnaryOperationExpression	& alac -> gb		504480	0					
ANR	505656	UnaryOperator	&		504480	0					
ANR	505657	PtrMemberAccess	alac -> gb		504480	1					
ANR	505658	Identifier	alac		504480	0					
ANR	505659	Identifier	gb		504480	1					
ANR	505660	ReturnStatement	return input_buffer_size ;	437:4:8921:8945	504480	30	True				
ANR	505661	Identifier	input_buffer_size		504480	0					
ANR	505662	ReturnType	static int		504480	1					
ANR	505663	Identifier	alac_decode_frame		504480	2					
ANR	505664	ParameterList	"AVCodecContext * avctx , void * outbuffer , int * outputsize , AVPacket * avpkt"		504480	3					
ANR	505665	Parameter	AVCodecContext * avctx	1:29:29:49	504480	0	True				
ANR	505666	ParameterType	AVCodecContext *		504480	0					
ANR	505667	Identifier	avctx		504480	1					
ANR	505668	Parameter	void * outbuffer	3:29:82:96	504480	1	True				
ANR	505669	ParameterType	void *		504480	0					
ANR	505670	Identifier	outbuffer		504480	1					
ANR	505671	Parameter	int * outputsize	3:46:99:113	504480	2	True				
ANR	505672	ParameterType	int *		504480	0					
ANR	505673	Identifier	outputsize		504480	1					
ANR	505674	Parameter	AVPacket * avpkt	5:29:146:160	504480	3	True				
ANR	505675	ParameterType	AVPacket *		504480	0					
ANR	505676	Identifier	avpkt		504480	1					
ANR	505677	CFGEntryNode	ENTRY		504480		True				
ANR	505678	CFGExitNode	EXIT		504480		True				
ANR	505679	Symbol	inbuffer		504480						
ANR	505680	Symbol	MIN_CACHE_BITS		504480						
ANR	505681	Symbol	prediction_quantitization		504480						
ANR	505682	Symbol	hassize		504480						
ANR	505683	Symbol	SAMPLE_FMT_S32		504480						
ANR	505684	Symbol	* ricemodifier		504480						
ANR	505685	Symbol	get_bits		504480						
ANR	505686	Symbol	* ch		504480						
ANR	505687	Symbol	avpkt		504480						
ANR	505688	Symbol	* prediction_type		504480						
ANR	505689	Symbol	* alac -> avctx		504480						
ANR	505690	Symbol	prediction_type		504480						
ANR	505691	Symbol	alac -> wasted_bits_buffer		504480						
ANR	505692	Symbol	* chan		504480						
ANR	505693	Symbol	alac -> wasted_bits		504480						
ANR	505694	Symbol	alac -> avctx -> extradata_size		504480						
ANR	505695	Symbol	* predictor_coef_table		504480						
ANR	505696	Symbol	alac -> bytespersample		504480						
ANR	505697	Symbol	sign_extend		504480						
ANR	505698	Symbol	predictor_coef_num		504480						
ANR	505699	Symbol	alac		504480						
ANR	505700	Symbol	outputsize		504480						
ANR	505701	Symbol	avctx -> sample_fmt		504480						
ANR	505702	Symbol	alac -> setinfo_rice_historymult		504480						
ANR	505703	Symbol	isnotcompressed		504480						
ANR	505704	Symbol	& alac -> gb		504480						
ANR	505705	Symbol	get_bits1		504480						
ANR	505706	Symbol	alac -> context_initialized		504480						
ANR	505707	Symbol	* * alac		504480						
ANR	505708	Symbol	get_bits_count		504480						
ANR	505709	Symbol	* prediction_quantitization		504480						
ANR	505710	Symbol	ricemodifier		504480						
ANR	505711	Symbol	* avctx		504480						
ANR	505712	Symbol	channels		504480						
ANR	505713	Symbol	* alac -> outputsamples_buffer		504480						
ANR	505714	Symbol	* alac -> predicterror_buffer		504480						
ANR	505715	Symbol	alac_set_info		504480						
ANR	505716	Symbol	interlacing_leftweight		504480						
ANR	505717	Symbol	alac -> setinfo_rice_initialhistory		504480						
ANR	505718	Symbol	avpkt -> data		504480						
ANR	505719	Symbol	alac -> outputsamples_buffer		504480						
ANR	505720	Symbol	* * * alac		504480						
ANR	505721	Symbol	input_buffer_size		504480						
ANR	505722	Symbol	MAX_CHANNELS		504480						
ANR	505723	Symbol	interlacing_shift		504480						
ANR	505724	Symbol	* * predictor_coef_table		504480						
ANR	505725	Symbol	outbuffer		504480						
ANR	505726	Symbol	alac -> numchannels		504480						
ANR	505727	Symbol	outputsamples		504480						
ANR	505728	Symbol	* MAX_CHANNELS		504480						
ANR	505729	Symbol	* * ch		504480						
ANR	505730	Symbol	get_bits_long		504480						
ANR	505731	Symbol	alac -> setinfo_rice_kmodifier		504480						
ANR	505732	Symbol	avpkt -> size		504480						
ANR	505733	Symbol	SAMPLE_FMT_S16		504480						
ANR	505734	Symbol	avctx		504480						
ANR	505735	Symbol	* alac		504480						
ANR	505736	Symbol	get_sbits_long		504480						
ANR	505737	Symbol	predictor_coef_table		504480						
ANR	505738	Symbol	* avpkt		504480						
ANR	505739	Symbol	audiobits		504480						
ANR	505740	Symbol	AV_LOG_ERROR		504480						
ANR	505741	Symbol	* outputsize		504480						
ANR	505742	Symbol	alac -> avctx		504480						
ANR	505743	Symbol	ch		504480						
ANR	505744	Symbol	i		504480						
ANR	505745	Symbol	* predictor_coef_num		504480						
ANR	505746	Symbol	* * chan		504480						
ANR	505747	Symbol	avctx -> priv_data		504480						
ANR	505748	Symbol	alac -> setinfo_max_samples_per_frame		504480						
ANR	505749	Symbol	* outbuffer		504480						
ANR	505750	Symbol	readsamplesize		504480						
ANR	505751	Symbol	* i		504480						
ANR	505752	Symbol	* alac -> wasted_bits_buffer		504480						
ANR	505753	Symbol	alac -> predicterror_buffer		504480						
ANR	505754	Symbol	ALAC_EXTRADATA_SIZE		504480						
ANR	505755	Symbol	alac -> setinfo_sample_size		504480						
ANR	505756	Symbol	chan		504480						
ANR	505757	Symbol	* * alac -> wasted_bits_buffer		504480						
ANR	505758	Symbol	* * alac -> outputsamples_buffer		504480						
