command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	351622	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ac3_decode_frame_1.c								
ANR	351623	Function	ac3_decode_frame	1:0:0:4825							
ANR	351624	FunctionDef	"ac3_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		351623	0					
ANR	351625	CompoundStatement		5:0:127:4825	351623	0					
ANR	351626	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	7:4:134:166	351623	0	True				
ANR	351627	IdentifierDecl	* buf = avpkt -> data		351623	0					
ANR	351628	IdentifierDeclType	const uint8_t *		351623	0					
ANR	351629	Identifier	buf		351623	1					
ANR	351630	AssignmentExpression	* buf = avpkt -> data		351623	2		=			
ANR	351631	Identifier	buf		351623	0					
ANR	351632	PtrMemberAccess	avpkt -> data		351623	1					
ANR	351633	Identifier	avpkt		351623	0					
ANR	351634	Identifier	data		351623	1					
ANR	351635	IdentifierDeclStatement	int buf_size = avpkt -> size ;	9:4:173:199	351623	1	True				
ANR	351636	IdentifierDecl	buf_size = avpkt -> size		351623	0					
ANR	351637	IdentifierDeclType	int		351623	0					
ANR	351638	Identifier	buf_size		351623	1					
ANR	351639	AssignmentExpression	buf_size = avpkt -> size		351623	2		=			
ANR	351640	Identifier	buf_size		351623	0					
ANR	351641	PtrMemberAccess	avpkt -> size		351623	1					
ANR	351642	Identifier	avpkt		351623	0					
ANR	351643	Identifier	size		351623	1					
ANR	351644	IdentifierDeclStatement	AC3DecodeContext * s = avctx -> priv_data ;	11:4:206:244	351623	2	True				
ANR	351645	IdentifierDecl	* s = avctx -> priv_data		351623	0					
ANR	351646	IdentifierDeclType	AC3DecodeContext *		351623	0					
ANR	351647	Identifier	s		351623	1					
ANR	351648	AssignmentExpression	* s = avctx -> priv_data		351623	2		=			
ANR	351649	Identifier	s		351623	0					
ANR	351650	PtrMemberAccess	avctx -> priv_data		351623	1					
ANR	351651	Identifier	avctx		351623	0					
ANR	351652	Identifier	priv_data		351623	1					
ANR	351653	IdentifierDeclStatement	int16_t * out_samples = ( int16_t * ) data ;	13:4:251:289	351623	3	True				
ANR	351654	IdentifierDecl	* out_samples = ( int16_t * ) data		351623	0					
ANR	351655	IdentifierDeclType	int16_t *		351623	0					
ANR	351656	Identifier	out_samples		351623	1					
ANR	351657	AssignmentExpression	* out_samples = ( int16_t * ) data		351623	2		=			
ANR	351658	Identifier	out_samples		351623	0					
ANR	351659	CastExpression	( int16_t * ) data		351623	1					
ANR	351660	CastTarget	int16_t *		351623	0					
ANR	351661	Identifier	data		351623	1					
ANR	351662	IdentifierDeclStatement	"int blk , ch , err ;"	15:4:296:312	351623	4	True				
ANR	351663	IdentifierDecl	blk		351623	0					
ANR	351664	IdentifierDeclType	int		351623	0					
ANR	351665	Identifier	blk		351623	1					
ANR	351666	IdentifierDecl	ch		351623	1					
ANR	351667	IdentifierDeclType	int		351623	0					
ANR	351668	Identifier	ch		351623	1					
ANR	351669	IdentifierDecl	err		351623	2					
ANR	351670	IdentifierDeclType	int		351623	0					
ANR	351671	Identifier	err		351623	1					
ANR	351672	IdentifierDeclStatement	const uint8_t * channel_map ;	17:4:319:345	351623	5	True				
ANR	351673	IdentifierDecl	* channel_map		351623	0					
ANR	351674	IdentifierDeclType	const uint8_t *		351623	0					
ANR	351675	Identifier	channel_map		351623	1					
ANR	351676	IdentifierDeclStatement	const float * output [ AC3_MAX_CHANNELS ] ;	19:4:352:389	351623	6	True				
ANR	351677	IdentifierDecl	* output [ AC3_MAX_CHANNELS ]		351623	0					
ANR	351678	IdentifierDeclType	const float * [ AC3_MAX_CHANNELS ]		351623	0					
ANR	351679	Identifier	output		351623	1					
ANR	351680	Identifier	AC3_MAX_CHANNELS		351623	2					
ANR	351681	IfStatement	if ( s -> input_buffer )		351623	7					
ANR	351682	Condition	s -> input_buffer	25:8:477:491	351623	0	True				
ANR	351683	PtrMemberAccess	s -> input_buffer		351623	0					
ANR	351684	Identifier	s		351623	0					
ANR	351685	Identifier	input_buffer		351623	1					
ANR	351686	CompoundStatement		21:25:366:366	351623	1					
ANR	351687	ExpressionStatement	"memcpy ( s -> input_buffer , buf , FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE ) )"	31:8:661:729	351623	0	True				
ANR	351688	CallExpression	"memcpy ( s -> input_buffer , buf , FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE ) )"		351623	0					
ANR	351689	Callee	memcpy		351623	0					
ANR	351690	Identifier	memcpy		351623	0					
ANR	351691	ArgumentList	s -> input_buffer		351623	1					
ANR	351692	Argument	s -> input_buffer		351623	0					
ANR	351693	PtrMemberAccess	s -> input_buffer		351623	0					
ANR	351694	Identifier	s		351623	0					
ANR	351695	Identifier	input_buffer		351623	1					
ANR	351696	Argument	buf		351623	1					
ANR	351697	Identifier	buf		351623	0					
ANR	351698	Argument	"FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE )"		351623	2					
ANR	351699	CallExpression	"FFMIN ( buf_size , AC3_FRAME_BUFFER_SIZE )"		351623	0					
ANR	351700	Callee	FFMIN		351623	0					
ANR	351701	Identifier	FFMIN		351623	0					
ANR	351702	ArgumentList	buf_size		351623	1					
ANR	351703	Argument	buf_size		351623	0					
ANR	351704	Identifier	buf_size		351623	0					
ANR	351705	Argument	AC3_FRAME_BUFFER_SIZE		351623	1					
ANR	351706	Identifier	AC3_FRAME_BUFFER_SIZE		351623	0					
ANR	351707	ExpressionStatement	"init_get_bits ( & s -> gbc , s -> input_buffer , buf_size * 8 )"	33:8:740:793	351623	1	True				
ANR	351708	CallExpression	"init_get_bits ( & s -> gbc , s -> input_buffer , buf_size * 8 )"		351623	0					
ANR	351709	Callee	init_get_bits		351623	0					
ANR	351710	Identifier	init_get_bits		351623	0					
ANR	351711	ArgumentList	& s -> gbc		351623	1					
ANR	351712	Argument	& s -> gbc		351623	0					
ANR	351713	UnaryOperationExpression	& s -> gbc		351623	0					
ANR	351714	UnaryOperator	&		351623	0					
ANR	351715	PtrMemberAccess	s -> gbc		351623	1					
ANR	351716	Identifier	s		351623	0					
ANR	351717	Identifier	gbc		351623	1					
ANR	351718	Argument	s -> input_buffer		351623	1					
ANR	351719	PtrMemberAccess	s -> input_buffer		351623	0					
ANR	351720	Identifier	s		351623	0					
ANR	351721	Identifier	input_buffer		351623	1					
ANR	351722	Argument	buf_size * 8		351623	2					
ANR	351723	MultiplicativeExpression	buf_size * 8		351623	0		*			
ANR	351724	Identifier	buf_size		351623	0					
ANR	351725	PrimaryExpression	8		351623	1					
ANR	351726	ElseStatement	else		351623	0					
ANR	351727	CompoundStatement		31:11:679:679	351623	0					
ANR	351728	ExpressionStatement	"init_get_bits ( & s -> gbc , buf , buf_size * 8 )"	37:8:818:859	351623	0	True				
ANR	351729	CallExpression	"init_get_bits ( & s -> gbc , buf , buf_size * 8 )"		351623	0					
ANR	351730	Callee	init_get_bits		351623	0					
ANR	351731	Identifier	init_get_bits		351623	0					
ANR	351732	ArgumentList	& s -> gbc		351623	1					
ANR	351733	Argument	& s -> gbc		351623	0					
ANR	351734	UnaryOperationExpression	& s -> gbc		351623	0					
ANR	351735	UnaryOperator	&		351623	0					
ANR	351736	PtrMemberAccess	s -> gbc		351623	1					
ANR	351737	Identifier	s		351623	0					
ANR	351738	Identifier	gbc		351623	1					
ANR	351739	Argument	buf		351623	1					
ANR	351740	Identifier	buf		351623	0					
ANR	351741	Argument	buf_size * 8		351623	2					
ANR	351742	MultiplicativeExpression	buf_size * 8		351623	0		*			
ANR	351743	Identifier	buf_size		351623	0					
ANR	351744	PrimaryExpression	8		351623	1					
ANR	351745	ExpressionStatement	* data_size = 0	45:4:905:919	351623	8	True				
ANR	351746	AssignmentExpression	* data_size = 0		351623	0		=			
ANR	351747	UnaryOperationExpression	* data_size		351623	0					
ANR	351748	UnaryOperator	*		351623	0					
ANR	351749	Identifier	data_size		351623	1					
ANR	351750	PrimaryExpression	0		351623	1					
ANR	351751	ExpressionStatement	err = parse_frame_header ( s )	47:4:926:953	351623	9	True				
ANR	351752	AssignmentExpression	err = parse_frame_header ( s )		351623	0		=			
ANR	351753	Identifier	err		351623	0					
ANR	351754	CallExpression	parse_frame_header ( s )		351623	1					
ANR	351755	Callee	parse_frame_header		351623	0					
ANR	351756	Identifier	parse_frame_header		351623	0					
ANR	351757	ArgumentList	s		351623	1					
ANR	351758	Argument	s		351623	0					
ANR	351759	Identifier	s		351623	0					
ANR	351760	IfStatement	if ( err )		351623	10					
ANR	351761	Condition	err	51:8:966:968	351623	0	True				
ANR	351762	Identifier	err		351623	0					
ANR	351763	CompoundStatement		47:13:843:843	351623	1					
ANR	351764	SwitchStatement	switch ( err )		351623	0					
ANR	351765	Condition	err	53:15:989:991	351623	0	True				
ANR	351766	Identifier	err		351623	0					
ANR	351767	CompoundStatement		49:20:866:866	351623	1					
ANR	351768	Label	case AAC_AC3_PARSE_ERROR_SYNC :	55:12:1009:1038	351623	0	True				
ANR	351769	Identifier	AAC_AC3_PARSE_ERROR_SYNC		351623	0					
ANR	351770	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame sync error\\n"" )"	57:16:1057:1106	351623	1	True				
ANR	351771	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame sync error\\n"" )"		351623	0					
ANR	351772	Callee	av_log		351623	0					
ANR	351773	Identifier	av_log		351623	0					
ANR	351774	ArgumentList	avctx		351623	1					
ANR	351775	Argument	avctx		351623	0					
ANR	351776	Identifier	avctx		351623	0					
ANR	351777	Argument	AV_LOG_ERROR		351623	1					
ANR	351778	Identifier	AV_LOG_ERROR		351623	0					
ANR	351779	Argument	"""frame sync error\\n"""		351623	2					
ANR	351780	PrimaryExpression	"""frame sync error\\n"""		351623	0					
ANR	351781	ReturnStatement	return - 1 ;	59:16:1125:1134	351623	2	True				
ANR	351782	UnaryOperationExpression	- 1		351623	0					
ANR	351783	UnaryOperator	-		351623	0					
ANR	351784	PrimaryExpression	1		351623	1					
ANR	351785	Label	case AAC_AC3_PARSE_ERROR_BSID :	61:12:1149:1178	351623	3	True				
ANR	351786	Identifier	AAC_AC3_PARSE_ERROR_BSID		351623	0					
ANR	351787	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid bitstream id\\n"" )"	63:16:1197:1250	351623	4	True				
ANR	351788	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid bitstream id\\n"" )"		351623	0					
ANR	351789	Callee	av_log		351623	0					
ANR	351790	Identifier	av_log		351623	0					
ANR	351791	ArgumentList	avctx		351623	1					
ANR	351792	Argument	avctx		351623	0					
ANR	351793	Identifier	avctx		351623	0					
ANR	351794	Argument	AV_LOG_ERROR		351623	1					
ANR	351795	Identifier	AV_LOG_ERROR		351623	0					
ANR	351796	Argument	"""invalid bitstream id\\n"""		351623	2					
ANR	351797	PrimaryExpression	"""invalid bitstream id\\n"""		351623	0					
ANR	351798	BreakStatement	break ;	65:16:1269:1274	351623	5	True				
ANR	351799	Label	case AAC_AC3_PARSE_ERROR_SAMPLE_RATE :	67:12:1289:1325	351623	6	True				
ANR	351800	Identifier	AAC_AC3_PARSE_ERROR_SAMPLE_RATE		351623	0					
ANR	351801	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid sample rate\\n"" )"	69:16:1344:1396	351623	7	True				
ANR	351802	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid sample rate\\n"" )"		351623	0					
ANR	351803	Callee	av_log		351623	0					
ANR	351804	Identifier	av_log		351623	0					
ANR	351805	ArgumentList	avctx		351623	1					
ANR	351806	Argument	avctx		351623	0					
ANR	351807	Identifier	avctx		351623	0					
ANR	351808	Argument	AV_LOG_ERROR		351623	1					
ANR	351809	Identifier	AV_LOG_ERROR		351623	0					
ANR	351810	Argument	"""invalid sample rate\\n"""		351623	2					
ANR	351811	PrimaryExpression	"""invalid sample rate\\n"""		351623	0					
ANR	351812	BreakStatement	break ;	71:16:1415:1420	351623	8	True				
ANR	351813	Label	case AAC_AC3_PARSE_ERROR_FRAME_SIZE :	73:12:1435:1470	351623	9	True				
ANR	351814	Identifier	AAC_AC3_PARSE_ERROR_FRAME_SIZE		351623	0					
ANR	351815	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame size\\n"" )"	75:16:1489:1540	351623	10	True				
ANR	351816	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame size\\n"" )"		351623	0					
ANR	351817	Callee	av_log		351623	0					
ANR	351818	Identifier	av_log		351623	0					
ANR	351819	ArgumentList	avctx		351623	1					
ANR	351820	Argument	avctx		351623	0					
ANR	351821	Identifier	avctx		351623	0					
ANR	351822	Argument	AV_LOG_ERROR		351623	1					
ANR	351823	Identifier	AV_LOG_ERROR		351623	0					
ANR	351824	Argument	"""invalid frame size\\n"""		351623	2					
ANR	351825	PrimaryExpression	"""invalid frame size\\n"""		351623	0					
ANR	351826	BreakStatement	break ;	77:16:1559:1564	351623	11	True				
ANR	351827	Label	case AAC_AC3_PARSE_ERROR_FRAME_TYPE :	79:12:1579:1614	351623	12	True				
ANR	351828	Identifier	AAC_AC3_PARSE_ERROR_FRAME_TYPE		351623	0					
ANR	351829	IfStatement	if ( s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT || s -> substreamid )		351623	13					
ANR	351830	Condition	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT || s -> substreamid	85:19:1794:1853	351623	0	True				
ANR	351831	OrExpression	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT || s -> substreamid		351623	0		||			
ANR	351832	EqualityExpression	s -> frame_type == EAC3_FRAME_TYPE_DEPENDENT		351623	0		==			
ANR	351833	PtrMemberAccess	s -> frame_type		351623	0					
ANR	351834	Identifier	s		351623	0					
ANR	351835	Identifier	frame_type		351623	1					
ANR	351836	Identifier	EAC3_FRAME_TYPE_DEPENDENT		351623	1					
ANR	351837	PtrMemberAccess	s -> substreamid		351623	1					
ANR	351838	Identifier	s		351623	0					
ANR	351839	Identifier	substreamid		351623	1					
ANR	351840	CompoundStatement		81:81:1728:1728	351623	1					
ANR	351841	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported frame type : skipping frame\\n"" )"	87:20:1879:1951	351623	0	True				
ANR	351842	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported frame type : skipping frame\\n"" )"		351623	0					
ANR	351843	Callee	av_log		351623	0					
ANR	351844	Identifier	av_log		351623	0					
ANR	351845	ArgumentList	avctx		351623	1					
ANR	351846	Argument	avctx		351623	0					
ANR	351847	Identifier	avctx		351623	0					
ANR	351848	Argument	AV_LOG_ERROR		351623	1					
ANR	351849	Identifier	AV_LOG_ERROR		351623	0					
ANR	351850	Argument	"""unsupported frame type : skipping frame\\n"""		351623	2					
ANR	351851	PrimaryExpression	"""unsupported frame type : skipping frame\\n"""		351623	0					
ANR	351852	ReturnStatement	return s -> frame_size ;	89:20:1974:1994	351623	1	True				
ANR	351853	PtrMemberAccess	s -> frame_size		351623	0					
ANR	351854	Identifier	s		351623	0					
ANR	351855	Identifier	frame_size		351623	1					
ANR	351856	ElseStatement	else		351623	0					
ANR	351857	CompoundStatement		87:23:1892:1892	351623	0					
ANR	351858	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame type\\n"" )"	93:20:2043:2094	351623	0	True				
ANR	351859	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid frame type\\n"" )"		351623	0					
ANR	351860	Callee	av_log		351623	0					
ANR	351861	Identifier	av_log		351623	0					
ANR	351862	ArgumentList	avctx		351623	1					
ANR	351863	Argument	avctx		351623	0					
ANR	351864	Identifier	avctx		351623	0					
ANR	351865	Argument	AV_LOG_ERROR		351623	1					
ANR	351866	Identifier	AV_LOG_ERROR		351623	0					
ANR	351867	Argument	"""invalid frame type\\n"""		351623	2					
ANR	351868	PrimaryExpression	"""invalid frame type\\n"""		351623	0					
ANR	351869	BreakStatement	break ;	97:16:2132:2137	351623	14	True				
ANR	351870	Label	default :	99:12:2152:2159	351623	15	True				
ANR	351871	Identifier	default		351623	0					
ANR	351872	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid header\\n"" )"	101:16:2178:2225	351623	16	True				
ANR	351873	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid header\\n"" )"		351623	0					
ANR	351874	Callee	av_log		351623	0					
ANR	351875	Identifier	av_log		351623	0					
ANR	351876	ArgumentList	avctx		351623	1					
ANR	351877	Argument	avctx		351623	0					
ANR	351878	Identifier	avctx		351623	0					
ANR	351879	Argument	AV_LOG_ERROR		351623	1					
ANR	351880	Identifier	AV_LOG_ERROR		351623	0					
ANR	351881	Argument	"""invalid header\\n"""		351623	2					
ANR	351882	PrimaryExpression	"""invalid header\\n"""		351623	0					
ANR	351883	BreakStatement	break ;	103:16:2244:2249	351623	17	True				
ANR	351884	ElseStatement	else		351623	0					
ANR	351885	CompoundStatement		103:11:2146:2146	351623	0					
ANR	351886	IfStatement	if ( s -> frame_size > buf_size )		351623	0					
ANR	351887	Condition	s -> frame_size > buf_size	111:12:2356:2379	351623	0	True				
ANR	351888	RelationalExpression	s -> frame_size > buf_size		351623	0		>			
ANR	351889	PtrMemberAccess	s -> frame_size		351623	0					
ANR	351890	Identifier	s		351623	0					
ANR	351891	Identifier	frame_size		351623	1					
ANR	351892	Identifier	buf_size		351623	1					
ANR	351893	CompoundStatement		107:38:2254:2254	351623	1					
ANR	351894	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""incomplete frame\\n"" )"	113:12:2397:2446	351623	0	True				
ANR	351895	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""incomplete frame\\n"" )"		351623	0					
ANR	351896	Callee	av_log		351623	0					
ANR	351897	Identifier	av_log		351623	0					
ANR	351898	ArgumentList	avctx		351623	1					
ANR	351899	Argument	avctx		351623	0					
ANR	351900	Identifier	avctx		351623	0					
ANR	351901	Argument	AV_LOG_ERROR		351623	1					
ANR	351902	Identifier	AV_LOG_ERROR		351623	0					
ANR	351903	Argument	"""incomplete frame\\n"""		351623	2					
ANR	351904	PrimaryExpression	"""incomplete frame\\n"""		351623	0					
ANR	351905	ExpressionStatement	err = AAC_AC3_PARSE_ERROR_FRAME_SIZE	115:12:2461:2497	351623	1	True				
ANR	351906	AssignmentExpression	err = AAC_AC3_PARSE_ERROR_FRAME_SIZE		351623	0		=			
ANR	351907	Identifier	err		351623	0					
ANR	351908	Identifier	AAC_AC3_PARSE_ERROR_FRAME_SIZE		351623	1					
ANR	351909	ElseStatement	else		351623	0					
ANR	351910	IfStatement	if ( avctx -> error_recognition >= FF_ER_CAREFUL )		351623	0					
ANR	351911	Condition	avctx -> error_recognition >= FF_ER_CAREFUL	117:19:2519:2559	351623	0	True				
ANR	351912	RelationalExpression	avctx -> error_recognition >= FF_ER_CAREFUL		351623	0		>=			
ANR	351913	PtrMemberAccess	avctx -> error_recognition		351623	0					
ANR	351914	Identifier	avctx		351623	0					
ANR	351915	Identifier	error_recognition		351623	1					
ANR	351916	Identifier	FF_ER_CAREFUL		351623	1					
ANR	351917	CompoundStatement		113:62:2434:2434	351623	1					
ANR	351918	IfStatement	"if ( av_crc ( av_crc_get_table ( AV_CRC_16_ANSI ) , 0 , & buf [ 2 ] , s -> frame_size - 2 ) )"		351623	0					
ANR	351919	Condition	"av_crc ( av_crc_get_table ( AV_CRC_16_ANSI ) , 0 , & buf [ 2 ] , s -> frame_size - 2 )"	121:16:2623:2691	351623	0	True				
ANR	351920	CallExpression	"av_crc ( av_crc_get_table ( AV_CRC_16_ANSI ) , 0 , & buf [ 2 ] , s -> frame_size - 2 )"		351623	0					
ANR	351921	Callee	av_crc		351623	0					
ANR	351922	Identifier	av_crc		351623	0					
ANR	351923	ArgumentList	av_crc_get_table ( AV_CRC_16_ANSI )		351623	1					
ANR	351924	Argument	av_crc_get_table ( AV_CRC_16_ANSI )		351623	0					
ANR	351925	CallExpression	av_crc_get_table ( AV_CRC_16_ANSI )		351623	0					
ANR	351926	Callee	av_crc_get_table		351623	0					
ANR	351927	Identifier	av_crc_get_table		351623	0					
ANR	351928	ArgumentList	AV_CRC_16_ANSI		351623	1					
ANR	351929	Argument	AV_CRC_16_ANSI		351623	0					
ANR	351930	Identifier	AV_CRC_16_ANSI		351623	0					
ANR	351931	Argument	0		351623	1					
ANR	351932	PrimaryExpression	0		351623	0					
ANR	351933	Argument	& buf [ 2 ]		351623	2					
ANR	351934	UnaryOperationExpression	& buf [ 2 ]		351623	0					
ANR	351935	UnaryOperator	&		351623	0					
ANR	351936	ArrayIndexing	buf [ 2 ]		351623	1					
ANR	351937	Identifier	buf		351623	0					
ANR	351938	PrimaryExpression	2		351623	1					
ANR	351939	Argument	s -> frame_size - 2		351623	3					
ANR	351940	AdditiveExpression	s -> frame_size - 2		351623	0		-			
ANR	351941	PtrMemberAccess	s -> frame_size		351623	0					
ANR	351942	Identifier	s		351623	0					
ANR	351943	Identifier	frame_size		351623	1					
ANR	351944	PrimaryExpression	2		351623	1					
ANR	351945	CompoundStatement		117:87:2566:2566	351623	1					
ANR	351946	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""frame CRC mismatch\\n"" )"	123:16:2713:2764	351623	0	True				
ANR	351947	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""frame CRC mismatch\\n"" )"		351623	0					
ANR	351948	Callee	av_log		351623	0					
ANR	351949	Identifier	av_log		351623	0					
ANR	351950	ArgumentList	avctx		351623	1					
ANR	351951	Argument	avctx		351623	0					
ANR	351952	Identifier	avctx		351623	0					
ANR	351953	Argument	AV_LOG_ERROR		351623	1					
ANR	351954	Identifier	AV_LOG_ERROR		351623	0					
ANR	351955	Argument	"""frame CRC mismatch\\n"""		351623	2					
ANR	351956	PrimaryExpression	"""frame CRC mismatch\\n"""		351623	0					
ANR	351957	ExpressionStatement	err = AAC_AC3_PARSE_ERROR_CRC	125:16:2783:2812	351623	1	True				
ANR	351958	AssignmentExpression	err = AAC_AC3_PARSE_ERROR_CRC		351623	0		=			
ANR	351959	Identifier	err		351623	0					
ANR	351960	Identifier	AAC_AC3_PARSE_ERROR_CRC		351623	1					
ANR	351961	IfStatement	if ( ! err )		351623	11					
ANR	351962	Condition	! err	137:8:2906:2909	351623	0	True				
ANR	351963	UnaryOperationExpression	! err		351623	0					
ANR	351964	UnaryOperator	!		351623	0					
ANR	351965	Identifier	err		351623	1					
ANR	351966	CompoundStatement		133:14:2784:2784	351623	1					
ANR	351967	ExpressionStatement	avctx -> sample_rate = s -> sample_rate	139:8:2923:2958	351623	0	True				
ANR	351968	AssignmentExpression	avctx -> sample_rate = s -> sample_rate		351623	0		=			
ANR	351969	PtrMemberAccess	avctx -> sample_rate		351623	0					
ANR	351970	Identifier	avctx		351623	0					
ANR	351971	Identifier	sample_rate		351623	1					
ANR	351972	PtrMemberAccess	s -> sample_rate		351623	1					
ANR	351973	Identifier	s		351623	0					
ANR	351974	Identifier	sample_rate		351623	1					
ANR	351975	ExpressionStatement	avctx -> bit_rate = s -> bit_rate	141:8:2969:2998	351623	1	True				
ANR	351976	AssignmentExpression	avctx -> bit_rate = s -> bit_rate		351623	0		=			
ANR	351977	PtrMemberAccess	avctx -> bit_rate		351623	0					
ANR	351978	Identifier	avctx		351623	0					
ANR	351979	Identifier	bit_rate		351623	1					
ANR	351980	PtrMemberAccess	s -> bit_rate		351623	1					
ANR	351981	Identifier	s		351623	0					
ANR	351982	Identifier	bit_rate		351623	1					
ANR	351983	ExpressionStatement	s -> out_channels = s -> channels	147:8:3041:3070	351623	2	True				
ANR	351984	AssignmentExpression	s -> out_channels = s -> channels		351623	0		=			
ANR	351985	PtrMemberAccess	s -> out_channels		351623	0					
ANR	351986	Identifier	s		351623	0					
ANR	351987	Identifier	out_channels		351623	1					
ANR	351988	PtrMemberAccess	s -> channels		351623	1					
ANR	351989	Identifier	s		351623	0					
ANR	351990	Identifier	channels		351623	1					
ANR	351991	ExpressionStatement	s -> output_mode = s -> channel_mode	149:8:3081:3113	351623	3	True				
ANR	351992	AssignmentExpression	s -> output_mode = s -> channel_mode		351623	0		=			
ANR	351993	PtrMemberAccess	s -> output_mode		351623	0					
ANR	351994	Identifier	s		351623	0					
ANR	351995	Identifier	output_mode		351623	1					
ANR	351996	PtrMemberAccess	s -> channel_mode		351623	1					
ANR	351997	Identifier	s		351623	0					
ANR	351998	Identifier	channel_mode		351623	1					
ANR	351999	IfStatement	if ( s -> lfe_on )		351623	4					
ANR	352000	Condition	s -> lfe_on	151:11:3127:3135	351623	0	True				
ANR	352001	PtrMemberAccess	s -> lfe_on		351623	0					
ANR	352002	Identifier	s		351623	0					
ANR	352003	Identifier	lfe_on		351623	1					
ANR	352004	ExpressionStatement	s -> output_mode |= AC3_OUTPUT_LFEON	153:12:3151:3185	351623	1	True				
ANR	352005	AssignmentExpression	s -> output_mode |= AC3_OUTPUT_LFEON		351623	0		|=			
ANR	352006	PtrMemberAccess	s -> output_mode		351623	0					
ANR	352007	Identifier	s		351623	0					
ANR	352008	Identifier	output_mode		351623	1					
ANR	352009	Identifier	AC3_OUTPUT_LFEON		351623	1					
ANR	352010	IfStatement	if ( avctx -> request_channels > 0 && avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels )		351623	5					
ANR	352011	Condition	avctx -> request_channels > 0 && avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels	155:12:3200:3316	351623	0	True				
ANR	352012	AndExpression	avctx -> request_channels > 0 && avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels		351623	0		&&			
ANR	352013	RelationalExpression	avctx -> request_channels > 0		351623	0		>			
ANR	352014	PtrMemberAccess	avctx -> request_channels		351623	0					
ANR	352015	Identifier	avctx		351623	0					
ANR	352016	Identifier	request_channels		351623	1					
ANR	352017	PrimaryExpression	0		351623	1					
ANR	352018	AndExpression	avctx -> request_channels <= 2 && avctx -> request_channels < s -> channels		351623	1		&&			
ANR	352019	RelationalExpression	avctx -> request_channels <= 2		351623	0		<=			
ANR	352020	PtrMemberAccess	avctx -> request_channels		351623	0					
ANR	352021	Identifier	avctx		351623	0					
ANR	352022	Identifier	request_channels		351623	1					
ANR	352023	PrimaryExpression	2		351623	1					
ANR	352024	RelationalExpression	avctx -> request_channels < s -> channels		351623	1		<			
ANR	352025	PtrMemberAccess	avctx -> request_channels		351623	0					
ANR	352026	Identifier	avctx		351623	0					
ANR	352027	Identifier	request_channels		351623	1					
ANR	352028	PtrMemberAccess	s -> channels		351623	1					
ANR	352029	Identifier	s		351623	0					
ANR	352030	Identifier	channels		351623	1					
ANR	352031	CompoundStatement		153:55:3191:3191	351623	1					
ANR	352032	ExpressionStatement	s -> out_channels = avctx -> request_channels	159:12:3334:3375	351623	0	True				
ANR	352033	AssignmentExpression	s -> out_channels = avctx -> request_channels		351623	0		=			
ANR	352034	PtrMemberAccess	s -> out_channels		351623	0					
ANR	352035	Identifier	s		351623	0					
ANR	352036	Identifier	out_channels		351623	1					
ANR	352037	PtrMemberAccess	avctx -> request_channels		351623	1					
ANR	352038	Identifier	avctx		351623	0					
ANR	352039	Identifier	request_channels		351623	1					
ANR	352040	ExpressionStatement	s -> output_mode = avctx -> request_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO	161:12:3390:3474	351623	1	True				
ANR	352041	AssignmentExpression	s -> output_mode = avctx -> request_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		351623	0		=			
ANR	352042	PtrMemberAccess	s -> output_mode		351623	0					
ANR	352043	Identifier	s		351623	0					
ANR	352044	Identifier	output_mode		351623	1					
ANR	352045	ConditionalExpression	avctx -> request_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		351623	1					
ANR	352046	Condition	avctx -> request_channels == 1		351623	0					
ANR	352047	EqualityExpression	avctx -> request_channels == 1		351623	0		==			
ANR	352048	PtrMemberAccess	avctx -> request_channels		351623	0					
ANR	352049	Identifier	avctx		351623	0					
ANR	352050	Identifier	request_channels		351623	1					
ANR	352051	PrimaryExpression	1		351623	1					
ANR	352052	Identifier	AC3_CHMODE_MONO		351623	1					
ANR	352053	Identifier	AC3_CHMODE_STEREO		351623	2					
ANR	352054	ExpressionStatement	s -> channel_layout = ff_ac3_channel_layout_tab [ s -> output_mode ]	163:12:3489:3550	351623	2	True				
ANR	352055	AssignmentExpression	s -> channel_layout = ff_ac3_channel_layout_tab [ s -> output_mode ]		351623	0		=			
ANR	352056	PtrMemberAccess	s -> channel_layout		351623	0					
ANR	352057	Identifier	s		351623	0					
ANR	352058	Identifier	channel_layout		351623	1					
ANR	352059	ArrayIndexing	ff_ac3_channel_layout_tab [ s -> output_mode ]		351623	1					
ANR	352060	Identifier	ff_ac3_channel_layout_tab		351623	0					
ANR	352061	PtrMemberAccess	s -> output_mode		351623	1					
ANR	352062	Identifier	s		351623	0					
ANR	352063	Identifier	output_mode		351623	1					
ANR	352064	ExpressionStatement	avctx -> channels = s -> out_channels	167:8:3572:3605	351623	6	True				
ANR	352065	AssignmentExpression	avctx -> channels = s -> out_channels		351623	0		=			
ANR	352066	PtrMemberAccess	avctx -> channels		351623	0					
ANR	352067	Identifier	avctx		351623	0					
ANR	352068	Identifier	channels		351623	1					
ANR	352069	PtrMemberAccess	s -> out_channels		351623	1					
ANR	352070	Identifier	s		351623	0					
ANR	352071	Identifier	out_channels		351623	1					
ANR	352072	ExpressionStatement	avctx -> channel_layout = s -> channel_layout	169:8:3616:3657	351623	7	True				
ANR	352073	AssignmentExpression	avctx -> channel_layout = s -> channel_layout		351623	0		=			
ANR	352074	PtrMemberAccess	avctx -> channel_layout		351623	0					
ANR	352075	Identifier	avctx		351623	0					
ANR	352076	Identifier	channel_layout		351623	1					
ANR	352077	PtrMemberAccess	s -> channel_layout		351623	1					
ANR	352078	Identifier	s		351623	0					
ANR	352079	Identifier	channel_layout		351623	1					
ANR	352080	IfStatement	if ( s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels ) )		351623	8					
ANR	352081	Condition	s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )	175:11:3726:3852	351623	0	True				
ANR	352082	AndExpression	s -> channels != s -> out_channels && ! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )		351623	0		&&			
ANR	352083	EqualityExpression	s -> channels != s -> out_channels		351623	0		!=			
ANR	352084	PtrMemberAccess	s -> channels		351623	0					
ANR	352085	Identifier	s		351623	0					
ANR	352086	Identifier	channels		351623	1					
ANR	352087	PtrMemberAccess	s -> out_channels		351623	1					
ANR	352088	Identifier	s		351623	0					
ANR	352089	Identifier	out_channels		351623	1					
ANR	352090	UnaryOperationExpression	! ( ( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels )		351623	1					
ANR	352091	UnaryOperator	!		351623	0					
ANR	352092	AndExpression	( s -> output_mode & AC3_OUTPUT_LFEON ) && s -> fbw_channels == s -> out_channels		351623	1		&&			
ANR	352093	BitAndExpression	s -> output_mode & AC3_OUTPUT_LFEON		351623	0		&			
ANR	352094	PtrMemberAccess	s -> output_mode		351623	0					
ANR	352095	Identifier	s		351623	0					
ANR	352096	Identifier	output_mode		351623	1					
ANR	352097	Identifier	AC3_OUTPUT_LFEON		351623	1					
ANR	352098	EqualityExpression	s -> fbw_channels == s -> out_channels		351623	1		==			
ANR	352099	PtrMemberAccess	s -> fbw_channels		351623	0					
ANR	352100	Identifier	s		351623	0					
ANR	352101	Identifier	fbw_channels		351623	1					
ANR	352102	PtrMemberAccess	s -> out_channels		351623	1					
ANR	352103	Identifier	s		351623	0					
ANR	352104	Identifier	out_channels		351623	1					
ANR	352105	CompoundStatement		173:53:3727:3727	351623	1					
ANR	352106	ExpressionStatement	set_downmix_coeffs ( s )	179:12:3870:3891	351623	0	True				
ANR	352107	CallExpression	set_downmix_coeffs ( s )		351623	0					
ANR	352108	Callee	set_downmix_coeffs		351623	0					
ANR	352109	Identifier	set_downmix_coeffs		351623	0					
ANR	352110	ArgumentList	s		351623	1					
ANR	352111	Argument	s		351623	0					
ANR	352112	Identifier	s		351623	0					
ANR	352113	ElseStatement	else		351623	0					
ANR	352114	IfStatement	if ( ! s -> out_channels )		351623	0					
ANR	352115	Condition	! s -> out_channels	183:15:3920:3935	351623	0	True				
ANR	352116	UnaryOperationExpression	! s -> out_channels		351623	0					
ANR	352117	UnaryOperator	!		351623	0					
ANR	352118	PtrMemberAccess	s -> out_channels		351623	1					
ANR	352119	Identifier	s		351623	0					
ANR	352120	Identifier	out_channels		351623	1					
ANR	352121	CompoundStatement		179:33:3810:3810	351623	1					
ANR	352122	ExpressionStatement	s -> out_channels = avctx -> channels	185:8:3949:3982	351623	0	True				
ANR	352123	AssignmentExpression	s -> out_channels = avctx -> channels		351623	0		=			
ANR	352124	PtrMemberAccess	s -> out_channels		351623	0					
ANR	352125	Identifier	s		351623	0					
ANR	352126	Identifier	out_channels		351623	1					
ANR	352127	PtrMemberAccess	avctx -> channels		351623	1					
ANR	352128	Identifier	avctx		351623	0					
ANR	352129	Identifier	channels		351623	1					
ANR	352130	IfStatement	if ( s -> out_channels < s -> channels )		351623	1					
ANR	352131	Condition	s -> out_channels < s -> channels	187:11:3996:4024	351623	0	True				
ANR	352132	RelationalExpression	s -> out_channels < s -> channels		351623	0		<			
ANR	352133	PtrMemberAccess	s -> out_channels		351623	0					
ANR	352134	Identifier	s		351623	0					
ANR	352135	Identifier	out_channels		351623	1					
ANR	352136	PtrMemberAccess	s -> channels		351623	1					
ANR	352137	Identifier	s		351623	0					
ANR	352138	Identifier	channels		351623	1					
ANR	352139	ExpressionStatement	s -> output_mode = s -> out_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO	189:12:4040:4116	351623	1	True				
ANR	352140	AssignmentExpression	s -> output_mode = s -> out_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		351623	0		=			
ANR	352141	PtrMemberAccess	s -> output_mode		351623	0					
ANR	352142	Identifier	s		351623	0					
ANR	352143	Identifier	output_mode		351623	1					
ANR	352144	ConditionalExpression	s -> out_channels == 1 ? AC3_CHMODE_MONO : AC3_CHMODE_STEREO		351623	1					
ANR	352145	Condition	s -> out_channels == 1		351623	0					
ANR	352146	EqualityExpression	s -> out_channels == 1		351623	0		==			
ANR	352147	PtrMemberAccess	s -> out_channels		351623	0					
ANR	352148	Identifier	s		351623	0					
ANR	352149	Identifier	out_channels		351623	1					
ANR	352150	PrimaryExpression	1		351623	1					
ANR	352151	Identifier	AC3_CHMODE_MONO		351623	1					
ANR	352152	Identifier	AC3_CHMODE_STEREO		351623	2					
ANR	352153	ExpressionStatement	channel_map = ff_ac3_dec_channel_map [ s -> output_mode & ~AC3_OUTPUT_LFEON ] [ s -> lfe_on ]	197:4:4167:4250	351623	12	True				
ANR	352154	AssignmentExpression	channel_map = ff_ac3_dec_channel_map [ s -> output_mode & ~AC3_OUTPUT_LFEON ] [ s -> lfe_on ]		351623	0		=			
ANR	352155	Identifier	channel_map		351623	0					
ANR	352156	ArrayIndexing	ff_ac3_dec_channel_map [ s -> output_mode & ~AC3_OUTPUT_LFEON ] [ s -> lfe_on ]		351623	1					
ANR	352157	ArrayIndexing	ff_ac3_dec_channel_map [ s -> output_mode & ~AC3_OUTPUT_LFEON ]		351623	0					
ANR	352158	Identifier	ff_ac3_dec_channel_map		351623	0					
ANR	352159	BitAndExpression	s -> output_mode & ~AC3_OUTPUT_LFEON		351623	1		&			
ANR	352160	PtrMemberAccess	s -> output_mode		351623	0					
ANR	352161	Identifier	s		351623	0					
ANR	352162	Identifier	output_mode		351623	1					
ANR	352163	Identifier	~AC3_OUTPUT_LFEON		351623	1					
ANR	352164	PtrMemberAccess	s -> lfe_on		351623	1					
ANR	352165	Identifier	s		351623	0					
ANR	352166	Identifier	lfe_on		351623	1					
ANR	352167	ForStatement	for ( ch = 0 ; ch < s -> out_channels ; ch ++ )		351623	13					
ANR	352168	ForInit	ch = 0 ;	199:9:4262:4268	351623	0	True				
ANR	352169	AssignmentExpression	ch = 0		351623	0		=			
ANR	352170	Identifier	ch		351623	0					
ANR	352171	PrimaryExpression	0		351623	1					
ANR	352172	Condition	ch < s -> out_channels	199:17:4270:4289	351623	1	True				
ANR	352173	RelationalExpression	ch < s -> out_channels		351623	0		<			
ANR	352174	Identifier	ch		351623	0					
ANR	352175	PtrMemberAccess	s -> out_channels		351623	1					
ANR	352176	Identifier	s		351623	0					
ANR	352177	Identifier	out_channels		351623	1					
ANR	352178	PostIncDecOperationExpression	ch ++	199:39:4292:4295	351623	2	True				
ANR	352179	Identifier	ch		351623	0					
ANR	352180	IncDec	++		351623	1					
ANR	352181	ExpressionStatement	output [ ch ] = s -> output [ channel_map [ ch ] ]	201:8:4307:4346	351623	3	True				
ANR	352182	AssignmentExpression	output [ ch ] = s -> output [ channel_map [ ch ] ]		351623	0		=			
ANR	352183	ArrayIndexing	output [ ch ]		351623	0					
ANR	352184	Identifier	output		351623	0					
ANR	352185	Identifier	ch		351623	1					
ANR	352186	ArrayIndexing	s -> output [ channel_map [ ch ] ]		351623	1					
ANR	352187	PtrMemberAccess	s -> output		351623	0					
ANR	352188	Identifier	s		351623	0					
ANR	352189	Identifier	output		351623	1					
ANR	352190	ArrayIndexing	channel_map [ ch ]		351623	1					
ANR	352191	Identifier	channel_map		351623	0					
ANR	352192	Identifier	ch		351623	1					
ANR	352193	ForStatement	for ( blk = 0 ; blk < s -> num_blocks ; blk ++ )		351623	14					
ANR	352194	ForInit	blk = 0 ;	203:9:4358:4365	351623	0	True				
ANR	352195	AssignmentExpression	blk = 0		351623	0		=			
ANR	352196	Identifier	blk		351623	0					
ANR	352197	PrimaryExpression	0		351623	1					
ANR	352198	Condition	blk < s -> num_blocks	203:18:4367:4385	351623	1	True				
ANR	352199	RelationalExpression	blk < s -> num_blocks		351623	0		<			
ANR	352200	Identifier	blk		351623	0					
ANR	352201	PtrMemberAccess	s -> num_blocks		351623	1					
ANR	352202	Identifier	s		351623	0					
ANR	352203	Identifier	num_blocks		351623	1					
ANR	352204	PostIncDecOperationExpression	blk ++	203:39:4388:4392	351623	2	True				
ANR	352205	Identifier	blk		351623	0					
ANR	352206	IncDec	++		351623	1					
ANR	352207	CompoundStatement		199:46:4267:4267	351623	3					
ANR	352208	IfStatement	"if ( ! err && decode_audio_block ( s , blk ) )"		351623	0					
ANR	352209	Condition	"! err && decode_audio_block ( s , blk )"	205:12:4410:4443	351623	0	True				
ANR	352210	AndExpression	"! err && decode_audio_block ( s , blk )"		351623	0		&&			
ANR	352211	UnaryOperationExpression	! err		351623	0					
ANR	352212	UnaryOperator	!		351623	0					
ANR	352213	Identifier	err		351623	1					
ANR	352214	CallExpression	"decode_audio_block ( s , blk )"		351623	1					
ANR	352215	Callee	decode_audio_block		351623	0					
ANR	352216	Identifier	decode_audio_block		351623	0					
ANR	352217	ArgumentList	s		351623	1					
ANR	352218	Argument	s		351623	0					
ANR	352219	Identifier	s		351623	0					
ANR	352220	Argument	blk		351623	1					
ANR	352221	Identifier	blk		351623	0					
ANR	352222	CompoundStatement		201:48:4318:4318	351623	1					
ANR	352223	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""error decoding the audio block\\n"" )"	207:12:4461:4524	351623	0	True				
ANR	352224	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""error decoding the audio block\\n"" )"		351623	0					
ANR	352225	Callee	av_log		351623	0					
ANR	352226	Identifier	av_log		351623	0					
ANR	352227	ArgumentList	avctx		351623	1					
ANR	352228	Argument	avctx		351623	0					
ANR	352229	Identifier	avctx		351623	0					
ANR	352230	Argument	AV_LOG_ERROR		351623	1					
ANR	352231	Identifier	AV_LOG_ERROR		351623	0					
ANR	352232	Argument	"""error decoding the audio block\\n"""		351623	2					
ANR	352233	PrimaryExpression	"""error decoding the audio block\\n"""		351623	0					
ANR	352234	ExpressionStatement	err = 1	209:12:4539:4546	351623	1	True				
ANR	352235	AssignmentExpression	err = 1		351623	0		=			
ANR	352236	Identifier	err		351623	0					
ANR	352237	PrimaryExpression	1		351623	1					
ANR	352238	ExpressionStatement	"s -> fmt_conv . float_to_int16_interleave ( out_samples , output , 256 , s -> out_channels )"	213:8:4568:4648	351623	1	True				
ANR	352239	CallExpression	"s -> fmt_conv . float_to_int16_interleave ( out_samples , output , 256 , s -> out_channels )"		351623	0					
ANR	352240	Callee	s -> fmt_conv . float_to_int16_interleave		351623	0					
ANR	352241	MemberAccess	s -> fmt_conv . float_to_int16_interleave		351623	0					
ANR	352242	PtrMemberAccess	s -> fmt_conv		351623	0					
ANR	352243	Identifier	s		351623	0					
ANR	352244	Identifier	fmt_conv		351623	1					
ANR	352245	Identifier	float_to_int16_interleave		351623	1					
ANR	352246	ArgumentList	out_samples		351623	1					
ANR	352247	Argument	out_samples		351623	0					
ANR	352248	Identifier	out_samples		351623	0					
ANR	352249	Argument	output		351623	1					
ANR	352250	Identifier	output		351623	0					
ANR	352251	Argument	256		351623	2					
ANR	352252	PrimaryExpression	256		351623	0					
ANR	352253	Argument	s -> out_channels		351623	3					
ANR	352254	PtrMemberAccess	s -> out_channels		351623	0					
ANR	352255	Identifier	s		351623	0					
ANR	352256	Identifier	out_channels		351623	1					
ANR	352257	ExpressionStatement	out_samples += 256 * s -> out_channels	215:8:4659:4695	351623	2	True				
ANR	352258	AssignmentExpression	out_samples += 256 * s -> out_channels		351623	0		+=			
ANR	352259	Identifier	out_samples		351623	0					
ANR	352260	MultiplicativeExpression	256 * s -> out_channels		351623	1		*			
ANR	352261	PrimaryExpression	256		351623	0					
ANR	352262	PtrMemberAccess	s -> out_channels		351623	1					
ANR	352263	Identifier	s		351623	0					
ANR	352264	Identifier	out_channels		351623	1					
ANR	352265	ExpressionStatement	* data_size = s -> num_blocks * 256 * avctx -> channels * sizeof ( int16_t )	219:4:4709:4778	351623	15	True				
ANR	352266	AssignmentExpression	* data_size = s -> num_blocks * 256 * avctx -> channels * sizeof ( int16_t )		351623	0		=			
ANR	352267	UnaryOperationExpression	* data_size		351623	0					
ANR	352268	UnaryOperator	*		351623	0					
ANR	352269	Identifier	data_size		351623	1					
ANR	352270	MultiplicativeExpression	s -> num_blocks * 256 * avctx -> channels * sizeof ( int16_t )		351623	1		*			
ANR	352271	PtrMemberAccess	s -> num_blocks		351623	0					
ANR	352272	Identifier	s		351623	0					
ANR	352273	Identifier	num_blocks		351623	1					
ANR	352274	MultiplicativeExpression	256 * avctx -> channels * sizeof ( int16_t )		351623	1		*			
ANR	352275	PrimaryExpression	256		351623	0					
ANR	352276	MultiplicativeExpression	avctx -> channels * sizeof ( int16_t )		351623	1		*			
ANR	352277	PtrMemberAccess	avctx -> channels		351623	0					
ANR	352278	Identifier	avctx		351623	0					
ANR	352279	Identifier	channels		351623	1					
ANR	352280	SizeofExpression	sizeof ( int16_t )		351623	1					
ANR	352281	Sizeof	sizeof		351623	0					
ANR	352282	SizeofOperand	int16_t		351623	1					
ANR	352283	ReturnStatement	"return FFMIN ( buf_size , s -> frame_size ) ;"	221:4:4785:4822	351623	16	True				
ANR	352284	CallExpression	"FFMIN ( buf_size , s -> frame_size )"		351623	0					
ANR	352285	Callee	FFMIN		351623	0					
ANR	352286	Identifier	FFMIN		351623	0					
ANR	352287	ArgumentList	buf_size		351623	1					
ANR	352288	Argument	buf_size		351623	0					
ANR	352289	Identifier	buf_size		351623	0					
ANR	352290	Argument	s -> frame_size		351623	1					
ANR	352291	PtrMemberAccess	s -> frame_size		351623	0					
ANR	352292	Identifier	s		351623	0					
ANR	352293	Identifier	frame_size		351623	1					
ANR	352294	ReturnType	static int		351623	1					
ANR	352295	Identifier	ac3_decode_frame		351623	2					
ANR	352296	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		351623	3					
ANR	352297	Parameter	AVCodecContext * avctx	1:28:28:49	351623	0	True				
ANR	352298	ParameterType	AVCodecContext *		351623	0					
ANR	352299	Identifier	avctx		351623	1					
ANR	352300	Parameter	void * data	1:52:52:61	351623	1	True				
ANR	352301	ParameterType	void *		351623	0					
ANR	352302	Identifier	data		351623	1					
ANR	352303	Parameter	int * data_size	1:64:64:77	351623	2	True				
ANR	352304	ParameterType	int *		351623	0					
ANR	352305	Identifier	data_size		351623	1					
ANR	352306	Parameter	AVPacket * avpkt	3:28:109:123	351623	3	True				
ANR	352307	ParameterType	AVPacket *		351623	0					
ANR	352308	Identifier	avpkt		351623	1					
ANR	352309	CFGEntryNode	ENTRY		351623		True				
ANR	352310	CFGExitNode	EXIT		351623		True				
ANR	352311	Symbol	data		351623						
ANR	352312	Symbol	s -> channel_layout		351623						
ANR	352313	Symbol	* ch		351623						
ANR	352314	Symbol	FFMIN		351623						
ANR	352315	Symbol	EAC3_FRAME_TYPE_DEPENDENT		351623						
ANR	352316	Symbol	AAC_AC3_PARSE_ERROR_FRAME_SIZE		351623						
ANR	352317	Symbol	avpkt		351623						
ANR	352318	Symbol	* data_size		351623						
ANR	352319	Symbol	s -> lfe_on		351623						
ANR	352320	Symbol	output		351623						
ANR	352321	Symbol	avctx -> channels		351623						
ANR	352322	Symbol	avctx -> error_recognition		351623						
ANR	352323	Symbol	ff_ac3_dec_channel_map		351623						
ANR	352324	Symbol	AAC_AC3_PARSE_ERROR_CRC		351623						
ANR	352325	Symbol	AC3_CHMODE_STEREO		351623						
ANR	352326	Symbol	s -> channel_mode		351623						
ANR	352327	Symbol	data_size		351623						
ANR	352328	Symbol	AV_CRC_16_ANSI		351623						
ANR	352329	Symbol	FF_ER_CAREFUL		351623						
ANR	352330	Symbol	* channel_map		351623						
ANR	352331	Symbol	buf_size		351623						
ANR	352332	Symbol	s -> input_buffer		351623						
ANR	352333	Symbol	s -> substreamid		351623						
ANR	352334	Symbol	& s -> gbc		351623						
ANR	352335	Symbol	AC3_OUTPUT_LFEON		351623						
ANR	352336	Symbol	s -> bit_rate		351623						
ANR	352337	Symbol	* ~AC3_OUTPUT_LFEON		351623						
ANR	352338	Symbol	* * * s		351623						
ANR	352339	Symbol	avctx -> request_channels		351623						
ANR	352340	Symbol	s -> output		351623						
ANR	352341	Symbol	s -> sample_rate		351623						
ANR	352342	Symbol	* avctx		351623						
ANR	352343	Symbol	avctx -> bit_rate		351623						
ANR	352344	Symbol	s -> num_blocks		351623						
ANR	352345	Symbol	decode_audio_block		351623						
ANR	352346	Symbol	avpkt -> data		351623						
ANR	352347	Symbol	s -> frame_size		351623						
ANR	352348	Symbol	s -> fmt_conv		351623						
ANR	352349	Symbol	~AC3_OUTPUT_LFEON		351623						
ANR	352350	Symbol	s -> fbw_channels		351623						
ANR	352351	Symbol	s -> output_mode		351623						
ANR	352352	Symbol	parse_frame_header		351623						
ANR	352353	Symbol	s -> channels		351623						
ANR	352354	Symbol	* s -> output_mode		351623						
ANR	352355	Symbol	* s -> lfe_on		351623						
ANR	352356	Symbol	s -> out_channels		351623						
ANR	352357	Symbol	* * ch		351623						
ANR	352358	Symbol	* * s -> output_mode		351623						
ANR	352359	Symbol	AC3_FRAME_BUFFER_SIZE		351623						
ANR	352360	Symbol	* * s		351623						
ANR	352361	Symbol	avpkt -> size		351623						
ANR	352362	Symbol	avctx		351623						
ANR	352363	Symbol	blk		351623						
ANR	352364	Symbol	s -> frame_type		351623						
ANR	352365	Symbol	* avpkt		351623						
ANR	352366	Symbol	* ff_ac3_channel_layout_tab		351623						
ANR	352367	Symbol	err		351623						
ANR	352368	Symbol	AV_LOG_ERROR		351623						
ANR	352369	Symbol	ch		351623						
ANR	352370	Symbol	* * ff_ac3_dec_channel_map		351623						
ANR	352371	Symbol	avctx -> channel_layout		351623						
ANR	352372	Symbol	* s -> output		351623						
ANR	352373	Symbol	out_samples		351623						
ANR	352374	Symbol	avctx -> priv_data		351623						
ANR	352375	Symbol	avctx -> sample_rate		351623						
ANR	352376	Symbol	AC3_CHMODE_MONO		351623						
ANR	352377	Symbol	* * ~AC3_OUTPUT_LFEON		351623						
ANR	352378	Symbol	buf		351623						
ANR	352379	Symbol	s		351623						
ANR	352380	Symbol	ff_ac3_channel_layout_tab		351623						
ANR	352381	Symbol	* ff_ac3_dec_channel_map		351623						
ANR	352382	Symbol	av_crc		351623						
ANR	352383	Symbol	channel_map		351623						
ANR	352384	Symbol	* * channel_map		351623						
ANR	352385	Symbol	* s		351623						
ANR	352386	Symbol	av_crc_get_table		351623						
ANR	352387	Symbol	* output		351623						
