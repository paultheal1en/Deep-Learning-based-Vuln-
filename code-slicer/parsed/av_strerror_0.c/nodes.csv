command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	761459	File	/home/p4ultr4n/workplace/ReVeal/raw_code/av_strerror_0.c								
ANR	761460	Function	av_strerror	1:0:0:836							
ANR	761461	FunctionDef	"av_strerror (int errnum , char * errbuf , size_t errbuf_size)"		761460	0					
ANR	761462	CompoundStatement		3:0:63:836	761460	0					
ANR	761463	IdentifierDeclStatement	int ret = 0 ;	5:4:70:81	761460	0	True				
ANR	761464	IdentifierDecl	ret = 0		761460	0					
ANR	761465	IdentifierDeclType	int		761460	0					
ANR	761466	Identifier	ret		761460	1					
ANR	761467	AssignmentExpression	ret = 0		761460	2		=			
ANR	761468	Identifier	ret		761460	0					
ANR	761469	PrimaryExpression	0		761460	1					
ANR	761470	IdentifierDeclStatement	const char * errstr = NULL ;	7:4:88:113	761460	1	True				
ANR	761471	IdentifierDecl	* errstr = NULL		761460	0					
ANR	761472	IdentifierDeclType	const char *		761460	0					
ANR	761473	Identifier	errstr		761460	1					
ANR	761474	AssignmentExpression	* errstr = NULL		761460	2		=			
ANR	761475	Identifier	NULL		761460	0					
ANR	761476	Identifier	NULL		761460	1					
ANR	761477	SwitchStatement	switch ( errnum )		761460	2					
ANR	761478	Condition	errnum	11:12:130:135	761460	0	True				
ANR	761479	Identifier	errnum		761460	0					
ANR	761480	CompoundStatement		9:20:74:74	761460	1					
ANR	761481	Label	case AVERROR_EOF :	13:4:145:161	761460	0	True				
ANR	761482	Identifier	AVERROR_EOF		761460	0					
ANR	761483	ExpressionStatement	"errstr = ""End of file"""	13:36:177:199	761460	1	True				
ANR	761484	AssignmentExpression	"errstr = ""End of file"""		761460	0		=			
ANR	761485	Identifier	errstr		761460	0					
ANR	761486	PrimaryExpression	"""End of file"""		761460	1					
ANR	761487	BreakStatement	break ;	13:60:201:206	761460	2	True				
ANR	761488	Label	case AVERROR_INVALIDDATA :	15:4:213:237	761460	3	True				
ANR	761489	Identifier	AVERROR_INVALIDDATA		761460	0					
ANR	761490	ExpressionStatement	"errstr = ""Invalid data found when processing input"""	15:36:245:296	761460	4	True				
ANR	761491	AssignmentExpression	"errstr = ""Invalid data found when processing input"""		761460	0		=			
ANR	761492	Identifier	errstr		761460	0					
ANR	761493	PrimaryExpression	"""Invalid data found when processing input"""		761460	1					
ANR	761494	BreakStatement	break ;	15:89:298:303	761460	5	True				
ANR	761495	Label	case AVERROR_NUMEXPECTED :	17:4:310:334	761460	6	True				
ANR	761496	Identifier	AVERROR_NUMEXPECTED		761460	0					
ANR	761497	ExpressionStatement	"errstr = ""Number syntax expected in filename"""	17:36:342:387	761460	7	True				
ANR	761498	AssignmentExpression	"errstr = ""Number syntax expected in filename"""		761460	0		=			
ANR	761499	Identifier	errstr		761460	0					
ANR	761500	PrimaryExpression	"""Number syntax expected in filename"""		761460	1					
ANR	761501	BreakStatement	break ;	17:83:389:394	761460	8	True				
ANR	761502	Label	case AVERROR_PATCHWELCOME :	19:4:401:426	761460	9	True				
ANR	761503	Identifier	AVERROR_PATCHWELCOME		761460	0					
ANR	761504	ExpressionStatement	"errstr = ""Not yet implemented in FFmpeg, patches welcome"""	19:36:433:490	761460	10	True				
ANR	761505	AssignmentExpression	"errstr = ""Not yet implemented in FFmpeg, patches welcome"""		761460	0		=			
ANR	761506	Identifier	errstr		761460	0					
ANR	761507	PrimaryExpression	"""Not yet implemented in FFmpeg, patches welcome"""		761460	1					
ANR	761508	BreakStatement	break ;	19:95:492:497	761460	11	True				
ANR	761509	IfStatement	if ( errstr )		761460	3					
ANR	761510	Condition	errstr	25:8:517:522	761460	0	True				
ANR	761511	Identifier	errstr		761460	0					
ANR	761512	CompoundStatement		23:16:461:461	761460	1					
ANR	761513	ExpressionStatement	"av_strlcpy ( errbuf , errstr , errbuf_size )"	27:8:536:575	761460	0	True				
ANR	761514	CallExpression	"av_strlcpy ( errbuf , errstr , errbuf_size )"		761460	0					
ANR	761515	Callee	av_strlcpy		761460	0					
ANR	761516	Identifier	av_strlcpy		761460	0					
ANR	761517	ArgumentList	errbuf		761460	1					
ANR	761518	Argument	errbuf		761460	0					
ANR	761519	Identifier	errbuf		761460	0					
ANR	761520	Argument	errstr		761460	1					
ANR	761521	Identifier	errstr		761460	0					
ANR	761522	Argument	errbuf_size		761460	2					
ANR	761523	Identifier	errbuf_size		761460	0					
ANR	761524	ElseStatement	else		761460	0					
ANR	761525	CompoundStatement		27:11:525:525	761460	0					
ANR	761526	ExpressionStatement	"ret = strerror_r ( AVUNERROR ( errnum ) , errbuf , errbuf_size )"	33:8:621:677	761460	0	True				
ANR	761527	AssignmentExpression	"ret = strerror_r ( AVUNERROR ( errnum ) , errbuf , errbuf_size )"		761460	0		=			
ANR	761528	Identifier	ret		761460	0					
ANR	761529	CallExpression	"strerror_r ( AVUNERROR ( errnum ) , errbuf , errbuf_size )"		761460	1					
ANR	761530	Callee	strerror_r		761460	0					
ANR	761531	Identifier	strerror_r		761460	0					
ANR	761532	ArgumentList	AVUNERROR ( errnum )		761460	1					
ANR	761533	Argument	AVUNERROR ( errnum )		761460	0					
ANR	761534	CallExpression	AVUNERROR ( errnum )		761460	0					
ANR	761535	Callee	AVUNERROR		761460	0					
ANR	761536	Identifier	AVUNERROR		761460	0					
ANR	761537	ArgumentList	errnum		761460	1					
ANR	761538	Argument	errnum		761460	0					
ANR	761539	Identifier	errnum		761460	0					
ANR	761540	Argument	errbuf		761460	1					
ANR	761541	Identifier	errbuf		761460	0					
ANR	761542	Argument	errbuf_size		761460	2					
ANR	761543	Identifier	errbuf_size		761460	0					
ANR	761544	IfStatement	if ( ! HAVE_STRERROR_R || ret < 0 )		761460	1					
ANR	761545	Condition	! HAVE_STRERROR_R || ret < 0	37:12:700:726	761460	0	True				
ANR	761546	OrExpression	! HAVE_STRERROR_R || ret < 0		761460	0		||			
ANR	761547	UnaryOperationExpression	! HAVE_STRERROR_R		761460	0					
ANR	761548	UnaryOperator	!		761460	0					
ANR	761549	Identifier	HAVE_STRERROR_R		761460	1					
ANR	761550	RelationalExpression	ret < 0		761460	1		<			
ANR	761551	Identifier	ret		761460	0					
ANR	761552	PrimaryExpression	0		761460	1					
ANR	761553	ExpressionStatement	"snprintf ( errbuf , errbuf_size , ""Error number %d occurred"" , errnum )"	39:12:742:807	761460	1	True				
ANR	761554	CallExpression	"snprintf ( errbuf , errbuf_size , ""Error number %d occurred"" , errnum )"		761460	0					
ANR	761555	Callee	snprintf		761460	0					
ANR	761556	Identifier	snprintf		761460	0					
ANR	761557	ArgumentList	errbuf		761460	1					
ANR	761558	Argument	errbuf		761460	0					
ANR	761559	Identifier	errbuf		761460	0					
ANR	761560	Argument	errbuf_size		761460	1					
ANR	761561	Identifier	errbuf_size		761460	0					
ANR	761562	Argument	"""Error number %d occurred"""		761460	2					
ANR	761563	PrimaryExpression	"""Error number %d occurred"""		761460	0					
ANR	761564	Argument	errnum		761460	3					
ANR	761565	Identifier	errnum		761460	0					
ANR	761566	ReturnStatement	return ret ;	45:4:823:833	761460	4	True				
ANR	761567	Identifier	ret		761460	0					
ANR	761568	ReturnType	int		761460	1					
ANR	761569	Identifier	av_strerror		761460	2					
ANR	761570	ParameterList	"int errnum , char * errbuf , size_t errbuf_size"		761460	3					
ANR	761571	Parameter	int errnum	1:16:16:25	761460	0	True				
ANR	761572	ParameterType	int		761460	0					
ANR	761573	Identifier	errnum		761460	1					
ANR	761574	Parameter	char * errbuf	1:28:28:39	761460	1	True				
ANR	761575	ParameterType	char *		761460	0					
ANR	761576	Identifier	errbuf		761460	1					
ANR	761577	Parameter	size_t errbuf_size	1:42:42:59	761460	2	True				
ANR	761578	ParameterType	size_t		761460	0					
ANR	761579	Identifier	errbuf_size		761460	1					
ANR	761580	CFGEntryNode	ENTRY		761460		True				
ANR	761581	CFGExitNode	EXIT		761460		True				
ANR	761582	Symbol	ret		761460						
ANR	761583	Symbol	errbuf_size		761460						
ANR	761584	Symbol	NULL		761460						
ANR	761585	Symbol	HAVE_STRERROR_R		761460						
ANR	761586	Symbol	errnum		761460						
ANR	761587	Symbol	strerror_r		761460						
ANR	761588	Symbol	errstr		761460						
ANR	761589	Symbol	AVUNERROR		761460						
ANR	761590	Symbol	errbuf		761460						
