command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3528595	File	/home/p4ultr4n/workplace/ReVeal/raw_code/ff_lpc_init_1.c								
ANR	3528596	Function	ff_lpc_init	1:0:0:722							
ANR	3528597	FunctionDef	"ff_lpc_init (LPCContext * s , int blocksize , int max_order , enum FFLPCType lpc_type)"		3528596	0					
ANR	3528598	CompoundStatement		5:0:120:722	3528596	0					
ANR	3528599	ExpressionStatement	s -> blocksize = blocksize	7:4:127:151	3528596	0	True				
ANR	3528600	AssignmentExpression	s -> blocksize = blocksize		3528596	0		=			
ANR	3528601	PtrMemberAccess	s -> blocksize		3528596	0					
ANR	3528602	Identifier	s		3528596	0					
ANR	3528603	Identifier	blocksize		3528596	1					
ANR	3528604	Identifier	blocksize		3528596	1					
ANR	3528605	ExpressionStatement	s -> max_order = max_order	9:4:158:182	3528596	1	True				
ANR	3528606	AssignmentExpression	s -> max_order = max_order		3528596	0		=			
ANR	3528607	PtrMemberAccess	s -> max_order		3528596	0					
ANR	3528608	Identifier	s		3528596	0					
ANR	3528609	Identifier	max_order		3528596	1					
ANR	3528610	Identifier	max_order		3528596	1					
ANR	3528611	ExpressionStatement	s -> lpc_type = lpc_type	11:4:189:212	3528596	2	True				
ANR	3528612	AssignmentExpression	s -> lpc_type = lpc_type		3528596	0		=			
ANR	3528613	PtrMemberAccess	s -> lpc_type		3528596	0					
ANR	3528614	Identifier	s		3528596	0					
ANR	3528615	Identifier	lpc_type		3528596	1					
ANR	3528616	Identifier	lpc_type		3528596	1					
ANR	3528617	IfStatement	if ( lpc_type == FF_LPC_TYPE_LEVINSON )		3528596	3					
ANR	3528618	Condition	lpc_type == FF_LPC_TYPE_LEVINSON	15:8:225:256	3528596	0	True				
ANR	3528619	EqualityExpression	lpc_type == FF_LPC_TYPE_LEVINSON		3528596	0		==			
ANR	3528620	Identifier	lpc_type		3528596	0					
ANR	3528621	Identifier	FF_LPC_TYPE_LEVINSON		3528596	1					
ANR	3528622	CompoundStatement		11:42:138:138	3528596	1					
ANR	3528623	ExpressionStatement	s -> windowed_samples = av_mallocz ( ( blocksize + max_order + 2 ) * sizeof ( * s -> windowed_samples ) )	17:8:270:404	3528596	0	True				
ANR	3528624	AssignmentExpression	s -> windowed_samples = av_mallocz ( ( blocksize + max_order + 2 ) * sizeof ( * s -> windowed_samples ) )		3528596	0		=			
ANR	3528625	PtrMemberAccess	s -> windowed_samples		3528596	0					
ANR	3528626	Identifier	s		3528596	0					
ANR	3528627	Identifier	windowed_samples		3528596	1					
ANR	3528628	CallExpression	av_mallocz ( ( blocksize + max_order + 2 ) * sizeof ( * s -> windowed_samples ) )		3528596	1					
ANR	3528629	Callee	av_mallocz		3528596	0					
ANR	3528630	Identifier	av_mallocz		3528596	0					
ANR	3528631	ArgumentList	( blocksize + max_order + 2 ) * sizeof ( * s -> windowed_samples )		3528596	1					
ANR	3528632	Argument	( blocksize + max_order + 2 ) * sizeof ( * s -> windowed_samples )		3528596	0					
ANR	3528633	MultiplicativeExpression	( blocksize + max_order + 2 ) * sizeof ( * s -> windowed_samples )		3528596	0		*			
ANR	3528634	AdditiveExpression	blocksize + max_order + 2		3528596	0		+			
ANR	3528635	Identifier	blocksize		3528596	0					
ANR	3528636	AdditiveExpression	max_order + 2		3528596	1		+			
ANR	3528637	Identifier	max_order		3528596	0					
ANR	3528638	PrimaryExpression	2		3528596	1					
ANR	3528639	SizeofExpression	sizeof ( * s -> windowed_samples )		3528596	1					
ANR	3528640	Sizeof	sizeof		3528596	0					
ANR	3528641	UnaryOperationExpression	* s -> windowed_samples		3528596	1					
ANR	3528642	UnaryOperator	*		3528596	0					
ANR	3528643	PtrMemberAccess	s -> windowed_samples		3528596	1					
ANR	3528644	Identifier	s		3528596	0					
ANR	3528645	Identifier	windowed_samples		3528596	1					
ANR	3528646	IfStatement	if ( ! s -> windowed_samples )		3528596	1					
ANR	3528647	Condition	! s -> windowed_samples	21:12:419:438	3528596	0	True				
ANR	3528648	UnaryOperationExpression	! s -> windowed_samples		3528596	0					
ANR	3528649	UnaryOperator	!		3528596	0					
ANR	3528650	PtrMemberAccess	s -> windowed_samples		3528596	1					
ANR	3528651	Identifier	s		3528596	0					
ANR	3528652	Identifier	windowed_samples		3528596	1					
ANR	3528653	ReturnStatement	return AVERROR ( ENOMEM ) ;	23:12:454:476	3528596	1	True				
ANR	3528654	CallExpression	AVERROR ( ENOMEM )		3528596	0					
ANR	3528655	Callee	AVERROR		3528596	0					
ANR	3528656	Identifier	AVERROR		3528596	0					
ANR	3528657	ArgumentList	ENOMEM		3528596	1					
ANR	3528658	Argument	ENOMEM		3528596	0					
ANR	3528659	Identifier	ENOMEM		3528596	0					
ANR	3528660	ElseStatement	else		3528596	0					
ANR	3528661	CompoundStatement		21:11:369:369	3528596	0					
ANR	3528662	ExpressionStatement	s -> windowed_samples = NULL	27:8:501:527	3528596	0	True				
ANR	3528663	AssignmentExpression	s -> windowed_samples = NULL		3528596	0		=			
ANR	3528664	PtrMemberAccess	s -> windowed_samples		3528596	0					
ANR	3528665	Identifier	s		3528596	0					
ANR	3528666	Identifier	windowed_samples		3528596	1					
ANR	3528667	Identifier	NULL		3528596	1					
ANR	3528668	ExpressionStatement	s -> lpc_apply_welch_window = lpc_apply_welch_window_c	33:4:543:595	3528596	4	True				
ANR	3528669	AssignmentExpression	s -> lpc_apply_welch_window = lpc_apply_welch_window_c		3528596	0		=			
ANR	3528670	PtrMemberAccess	s -> lpc_apply_welch_window		3528596	0					
ANR	3528671	Identifier	s		3528596	0					
ANR	3528672	Identifier	lpc_apply_welch_window		3528596	1					
ANR	3528673	Identifier	lpc_apply_welch_window_c		3528596	1					
ANR	3528674	ExpressionStatement	s -> lpc_compute_autocorr = lpc_compute_autocorr_c	35:4:602:652	3528596	5	True				
ANR	3528675	AssignmentExpression	s -> lpc_compute_autocorr = lpc_compute_autocorr_c		3528596	0		=			
ANR	3528676	PtrMemberAccess	s -> lpc_compute_autocorr		3528596	0					
ANR	3528677	Identifier	s		3528596	0					
ANR	3528678	Identifier	lpc_compute_autocorr		3528596	1					
ANR	3528679	Identifier	lpc_compute_autocorr_c		3528596	1					
ANR	3528680	IfStatement	if ( HAVE_MMX )		3528596	6					
ANR	3528681	Condition	HAVE_MMX	39:8:665:672	3528596	0	True				
ANR	3528682	Identifier	HAVE_MMX		3528596	0					
ANR	3528683	ExpressionStatement	ff_lpc_init_x86 ( s )	41:8:684:702	3528596	1	True				
ANR	3528684	CallExpression	ff_lpc_init_x86 ( s )		3528596	0					
ANR	3528685	Callee	ff_lpc_init_x86		3528596	0					
ANR	3528686	Identifier	ff_lpc_init_x86		3528596	0					
ANR	3528687	ArgumentList	s		3528596	1					
ANR	3528688	Argument	s		3528596	0					
ANR	3528689	Identifier	s		3528596	0					
ANR	3528690	ReturnStatement	return 0 ;	45:4:711:719	3528596	7	True				
ANR	3528691	PrimaryExpression	0		3528596	0					
ANR	3528692	ReturnType	av_cold int		3528596	1					
ANR	3528693	Identifier	ff_lpc_init		3528596	2					
ANR	3528694	ParameterList	"LPCContext * s , int blocksize , int max_order , enum FFLPCType lpc_type"		3528596	3					
ANR	3528695	Parameter	LPCContext * s	1:24:24:36	3528596	0	True				
ANR	3528696	ParameterType	LPCContext *		3528596	0					
ANR	3528697	Identifier	s		3528596	1					
ANR	3528698	Parameter	int blocksize	1:39:39:51	3528596	1	True				
ANR	3528699	ParameterType	int		3528596	0					
ANR	3528700	Identifier	blocksize		3528596	1					
ANR	3528701	Parameter	int max_order	1:54:54:66	3528596	2	True				
ANR	3528702	ParameterType	int		3528596	0					
ANR	3528703	Identifier	max_order		3528596	1					
ANR	3528704	Parameter	enum FFLPCType lpc_type	3:24:94:116	3528596	3	True				
ANR	3528705	ParameterType	enum FFLPCType		3528596	0					
ANR	3528706	Identifier	lpc_type		3528596	1					
ANR	3528707	CFGEntryNode	ENTRY		3528596		True				
ANR	3528708	CFGExitNode	EXIT		3528596		True				
ANR	3528709	Symbol	blocksize		3528596						
ANR	3528710	Symbol	ENOMEM		3528596						
ANR	3528711	Symbol	HAVE_MMX		3528596						
ANR	3528712	Symbol	lpc_type		3528596						
ANR	3528713	Symbol	NULL		3528596						
ANR	3528714	Symbol	FF_LPC_TYPE_LEVINSON		3528596						
ANR	3528715	Symbol	s -> windowed_samples		3528596						
ANR	3528716	Symbol	av_mallocz		3528596						
ANR	3528717	Symbol	s -> lpc_type		3528596						
ANR	3528718	Symbol	s -> lpc_compute_autocorr		3528596						
ANR	3528719	Symbol	s -> max_order		3528596						
ANR	3528720	Symbol	s -> lpc_apply_welch_window		3528596						
ANR	3528721	Symbol	s -> blocksize		3528596						
ANR	3528722	Symbol	s		3528596						
ANR	3528723	Symbol	* * s		3528596						
ANR	3528724	Symbol	AVERROR		3528596						
ANR	3528725	Symbol	lpc_apply_welch_window_c		3528596						
ANR	3528726	Symbol	max_order		3528596						
ANR	3528727	Symbol	* s		3528596						
ANR	3528728	Symbol	* s -> windowed_samples		3528596						
ANR	3528729	Symbol	lpc_compute_autocorr_c		3528596						
