command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6193529	File	/home/p4ultr4n/workplace/ReVeal/raw_code/onenand_load_spare_1.c								
ANR	6193530	Function	onenand_load_spare	1:0:0:504							
ANR	6193531	FunctionDef	"onenand_load_spare (OneNANDState * s , int sec , int secn , void * dest)"		6193530	0					
ANR	6193532	CompoundStatement		5:0:103:504	6193530	0					
ANR	6193533	IdentifierDeclStatement	uint8_t buf [ 512 ] ;	7:4:110:126	6193530	0	True				
ANR	6193534	IdentifierDecl	buf [ 512 ]		6193530	0					
ANR	6193535	IdentifierDeclType	uint8_t [ 512 ]		6193530	0					
ANR	6193536	Identifier	buf		6193530	1					
ANR	6193537	PrimaryExpression	512		6193530	2					
ANR	6193538	IfStatement	if ( s -> blk_cur )		6193530	1					
ANR	6193539	Condition	s -> blk_cur	11:8:139:148	6193530	0	True				
ANR	6193540	PtrMemberAccess	s -> blk_cur		6193530	0					
ANR	6193541	Identifier	s		6193530	0					
ANR	6193542	Identifier	blk_cur		6193530	1					
ANR	6193543	CompoundStatement		7:20:47:47	6193530	1					
ANR	6193544	IfStatement	"if ( blk_read ( s -> blk_cur , s -> secs_cur + ( sec >> 5 ) , buf , 1 ) < 0 )"		6193530	0					
ANR	6193545	Condition	"blk_read ( s -> blk_cur , s -> secs_cur + ( sec >> 5 ) , buf , 1 ) < 0"	13:12:166:223	6193530	0	True				
ANR	6193546	RelationalExpression	"blk_read ( s -> blk_cur , s -> secs_cur + ( sec >> 5 ) , buf , 1 ) < 0"		6193530	0		<			
ANR	6193547	CallExpression	"blk_read ( s -> blk_cur , s -> secs_cur + ( sec >> 5 ) , buf , 1 )"		6193530	0					
ANR	6193548	Callee	blk_read		6193530	0					
ANR	6193549	Identifier	blk_read		6193530	0					
ANR	6193550	ArgumentList	s -> blk_cur		6193530	1					
ANR	6193551	Argument	s -> blk_cur		6193530	0					
ANR	6193552	PtrMemberAccess	s -> blk_cur		6193530	0					
ANR	6193553	Identifier	s		6193530	0					
ANR	6193554	Identifier	blk_cur		6193530	1					
ANR	6193555	Argument	s -> secs_cur + ( sec >> 5 )		6193530	1					
ANR	6193556	AdditiveExpression	s -> secs_cur + ( sec >> 5 )		6193530	0		+			
ANR	6193557	PtrMemberAccess	s -> secs_cur		6193530	0					
ANR	6193558	Identifier	s		6193530	0					
ANR	6193559	Identifier	secs_cur		6193530	1					
ANR	6193560	ShiftExpression	sec >> 5		6193530	1		>>			
ANR	6193561	Identifier	sec		6193530	0					
ANR	6193562	PrimaryExpression	5		6193530	1					
ANR	6193563	Argument	buf		6193530	2					
ANR	6193564	Identifier	buf		6193530	0					
ANR	6193565	Argument	1		6193530	3					
ANR	6193566	PrimaryExpression	1		6193530	0					
ANR	6193567	PrimaryExpression	0		6193530	1					
ANR	6193568	CompoundStatement		9:72:122:122	6193530	1					
ANR	6193569	ReturnStatement	return 1 ;	15:12:241:249	6193530	0	True				
ANR	6193570	PrimaryExpression	1		6193530	0					
ANR	6193571	ExpressionStatement	"memcpy ( dest , buf + ( ( sec & 31 ) << 4 ) , secn << 4 )"	19:8:271:319	6193530	1	True				
ANR	6193572	CallExpression	"memcpy ( dest , buf + ( ( sec & 31 ) << 4 ) , secn << 4 )"		6193530	0					
ANR	6193573	Callee	memcpy		6193530	0					
ANR	6193574	Identifier	memcpy		6193530	0					
ANR	6193575	ArgumentList	dest		6193530	1					
ANR	6193576	Argument	dest		6193530	0					
ANR	6193577	Identifier	dest		6193530	0					
ANR	6193578	Argument	buf + ( ( sec & 31 ) << 4 )		6193530	1					
ANR	6193579	AdditiveExpression	buf + ( ( sec & 31 ) << 4 )		6193530	0		+			
ANR	6193580	Identifier	buf		6193530	0					
ANR	6193581	ShiftExpression	( sec & 31 ) << 4		6193530	1		<<			
ANR	6193582	BitAndExpression	sec & 31		6193530	0		&			
ANR	6193583	Identifier	sec		6193530	0					
ANR	6193584	PrimaryExpression	31		6193530	1					
ANR	6193585	PrimaryExpression	4		6193530	1					
ANR	6193586	Argument	secn << 4		6193530	2					
ANR	6193587	ShiftExpression	secn << 4		6193530	0		<<			
ANR	6193588	Identifier	secn		6193530	0					
ANR	6193589	PrimaryExpression	4		6193530	1					
ANR	6193590	ElseStatement	else		6193530	0					
ANR	6193591	IfStatement	if ( sec + secn > s -> secs_cur )		6193530	0					
ANR	6193592	Condition	sec + secn > s -> secs_cur	21:15:337:360	6193530	0	True				
ANR	6193593	RelationalExpression	sec + secn > s -> secs_cur		6193530	0		>			
ANR	6193594	AdditiveExpression	sec + secn		6193530	0		+			
ANR	6193595	Identifier	sec		6193530	0					
ANR	6193596	Identifier	secn		6193530	1					
ANR	6193597	PtrMemberAccess	s -> secs_cur		6193530	1					
ANR	6193598	Identifier	s		6193530	0					
ANR	6193599	Identifier	secs_cur		6193530	1					
ANR	6193600	CompoundStatement		17:41:259:259	6193530	1					
ANR	6193601	ReturnStatement	return 1 ;	23:8:374:382	6193530	0	True				
ANR	6193602	PrimaryExpression	1		6193530	0					
ANR	6193603	ElseStatement	else		6193530	0					
ANR	6193604	CompoundStatement		21:11:292:292	6193530	0					
ANR	6193605	ExpressionStatement	"memcpy ( dest , s -> current + ( s -> secs_cur << 9 ) + ( sec << 4 ) , secn << 4 )"	27:8:407:476	6193530	0	True				
ANR	6193606	CallExpression	"memcpy ( dest , s -> current + ( s -> secs_cur << 9 ) + ( sec << 4 ) , secn << 4 )"		6193530	0					
ANR	6193607	Callee	memcpy		6193530	0					
ANR	6193608	Identifier	memcpy		6193530	0					
ANR	6193609	ArgumentList	dest		6193530	1					
ANR	6193610	Argument	dest		6193530	0					
ANR	6193611	Identifier	dest		6193530	0					
ANR	6193612	Argument	s -> current + ( s -> secs_cur << 9 ) + ( sec << 4 )		6193530	1					
ANR	6193613	AdditiveExpression	s -> current + ( s -> secs_cur << 9 ) + ( sec << 4 )		6193530	0		+			
ANR	6193614	PtrMemberAccess	s -> current		6193530	0					
ANR	6193615	Identifier	s		6193530	0					
ANR	6193616	Identifier	current		6193530	1					
ANR	6193617	AdditiveExpression	( s -> secs_cur << 9 ) + ( sec << 4 )		6193530	1		+			
ANR	6193618	ShiftExpression	s -> secs_cur << 9		6193530	0		<<			
ANR	6193619	PtrMemberAccess	s -> secs_cur		6193530	0					
ANR	6193620	Identifier	s		6193530	0					
ANR	6193621	Identifier	secs_cur		6193530	1					
ANR	6193622	PrimaryExpression	9		6193530	1					
ANR	6193623	ShiftExpression	sec << 4		6193530	1		<<			
ANR	6193624	Identifier	sec		6193530	0					
ANR	6193625	PrimaryExpression	4		6193530	1					
ANR	6193626	Argument	secn << 4		6193530	2					
ANR	6193627	ShiftExpression	secn << 4		6193530	0		<<			
ANR	6193628	Identifier	secn		6193530	0					
ANR	6193629	PrimaryExpression	4		6193530	1					
ANR	6193630	ReturnStatement	return 0 ;	33:4:493:501	6193530	2	True				
ANR	6193631	PrimaryExpression	0		6193530	0					
ANR	6193632	ReturnType	static inline int		6193530	1					
ANR	6193633	Identifier	onenand_load_spare		6193530	2					
ANR	6193634	ParameterList	"OneNANDState * s , int sec , int secn , void * dest"		6193530	3					
ANR	6193635	Parameter	OneNANDState * s	1:37:37:51	6193530	0	True				
ANR	6193636	ParameterType	OneNANDState *		6193530	0					
ANR	6193637	Identifier	s		6193530	1					
ANR	6193638	Parameter	int sec	1:54:54:60	6193530	1	True				
ANR	6193639	ParameterType	int		6193530	0					
ANR	6193640	Identifier	sec		6193530	1					
ANR	6193641	Parameter	int secn	1:63:63:70	6193530	2	True				
ANR	6193642	ParameterType	int		6193530	0					
ANR	6193643	Identifier	secn		6193530	1					
ANR	6193644	Parameter	void * dest	3:16:90:99	6193530	3	True				
ANR	6193645	ParameterType	void *		6193530	0					
ANR	6193646	Identifier	dest		6193530	1					
ANR	6193647	CFGEntryNode	ENTRY		6193530		True				
ANR	6193648	CFGExitNode	EXIT		6193530		True				
ANR	6193649	Symbol	sec		6193530						
ANR	6193650	Symbol	buf		6193530						
ANR	6193651	Symbol	s		6193530						
ANR	6193652	Symbol	s -> blk_cur		6193530						
ANR	6193653	Symbol	s -> current		6193530						
ANR	6193654	Symbol	secn		6193530						
ANR	6193655	Symbol	dest		6193530						
ANR	6193656	Symbol	* s		6193530						
ANR	6193657	Symbol	s -> secs_cur		6193530						
ANR	6193658	Symbol	blk_read		6193530						
