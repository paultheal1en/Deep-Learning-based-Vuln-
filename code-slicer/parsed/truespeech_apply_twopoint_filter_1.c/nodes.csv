command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8567893	File	/home/p4ultr4n/workplace/ReVeal/raw_code/truespeech_apply_twopoint_filter_1.c								
ANR	8567894	Function	truespeech_apply_twopoint_filter	1:0:0:713							
ANR	8567895	FunctionDef	"truespeech_apply_twopoint_filter (TSContext * dec , int quart)"		8567894	0					
ANR	8567896	CompoundStatement		3:0:73:713	8567894	0					
ANR	8567897	IdentifierDeclStatement	"int16_t tmp [ 146 + 60 ] , * ptr0 , * ptr1 ;"	5:4:80:115	8567894	0	True				
ANR	8567898	IdentifierDecl	tmp [ 146 + 60 ]		8567894	0					
ANR	8567899	IdentifierDeclType	int16_t [ 146 + 60 ]		8567894	0					
ANR	8567900	Identifier	tmp		8567894	1					
ANR	8567901	AdditiveExpression	146 + 60		8567894	2		+			
ANR	8567902	PrimaryExpression	146		8567894	0					
ANR	8567903	PrimaryExpression	60		8567894	1					
ANR	8567904	IdentifierDecl	* ptr0		8567894	1					
ANR	8567905	IdentifierDeclType	int16_t *		8567894	0					
ANR	8567906	Identifier	ptr0		8567894	1					
ANR	8567907	IdentifierDecl	* ptr1		8567894	2					
ANR	8567908	IdentifierDeclType	int16_t *		8567894	0					
ANR	8567909	Identifier	ptr1		8567894	1					
ANR	8567910	IdentifierDeclStatement	const int16_t * filter ;	7:4:122:143	8567894	1	True				
ANR	8567911	IdentifierDecl	* filter		8567894	0					
ANR	8567912	IdentifierDeclType	const int16_t *		8567894	0					
ANR	8567913	Identifier	filter		8567894	1					
ANR	8567914	IdentifierDeclStatement	"int i , t , off ;"	9:4:150:163	8567894	2	True				
ANR	8567915	IdentifierDecl	i		8567894	0					
ANR	8567916	IdentifierDeclType	int		8567894	0					
ANR	8567917	Identifier	i		8567894	1					
ANR	8567918	IdentifierDecl	t		8567894	1					
ANR	8567919	IdentifierDeclType	int		8567894	0					
ANR	8567920	Identifier	t		8567894	1					
ANR	8567921	IdentifierDecl	off		8567894	2					
ANR	8567922	IdentifierDeclType	int		8567894	0					
ANR	8567923	Identifier	off		8567894	1					
ANR	8567924	ExpressionStatement	t = dec -> offset2 [ quart ]	13:4:172:195	8567894	3	True				
ANR	8567925	AssignmentExpression	t = dec -> offset2 [ quart ]		8567894	0		=			
ANR	8567926	Identifier	t		8567894	0					
ANR	8567927	ArrayIndexing	dec -> offset2 [ quart ]		8567894	1					
ANR	8567928	PtrMemberAccess	dec -> offset2		8567894	0					
ANR	8567929	Identifier	dec		8567894	0					
ANR	8567930	Identifier	offset2		8567894	1					
ANR	8567931	Identifier	quart		8567894	1					
ANR	8567932	IfStatement	if ( t == 127 )		8567894	4					
ANR	8567933	Condition	t == 127	15:7:205:212	8567894	0	True				
ANR	8567934	EqualityExpression	t == 127		8567894	0		==			
ANR	8567935	Identifier	t		8567894	0					
ANR	8567936	PrimaryExpression	127		8567894	1					
ANR	8567937	CompoundStatement		13:16:140:140	8567894	1					
ANR	8567938	ExpressionStatement	"memset ( dec -> newvec , 0 , 60 * sizeof ( * dec -> newvec ) )"	17:8:225:274	8567894	0	True				
ANR	8567939	CallExpression	"memset ( dec -> newvec , 0 , 60 * sizeof ( * dec -> newvec ) )"		8567894	0					
ANR	8567940	Callee	memset		8567894	0					
ANR	8567941	Identifier	memset		8567894	0					
ANR	8567942	ArgumentList	dec -> newvec		8567894	1					
ANR	8567943	Argument	dec -> newvec		8567894	0					
ANR	8567944	PtrMemberAccess	dec -> newvec		8567894	0					
ANR	8567945	Identifier	dec		8567894	0					
ANR	8567946	Identifier	newvec		8567894	1					
ANR	8567947	Argument	0		8567894	1					
ANR	8567948	PrimaryExpression	0		8567894	0					
ANR	8567949	Argument	60 * sizeof ( * dec -> newvec )		8567894	2					
ANR	8567950	MultiplicativeExpression	60 * sizeof ( * dec -> newvec )		8567894	0		*			
ANR	8567951	PrimaryExpression	60		8567894	0					
ANR	8567952	SizeofExpression	sizeof ( * dec -> newvec )		8567894	1					
ANR	8567953	Sizeof	sizeof		8567894	0					
ANR	8567954	UnaryOperationExpression	* dec -> newvec		8567894	1					
ANR	8567955	UnaryOperator	*		8567894	0					
ANR	8567956	PtrMemberAccess	dec -> newvec		8567894	1					
ANR	8567957	Identifier	dec		8567894	0					
ANR	8567958	Identifier	newvec		8567894	1					
ANR	8567959	ReturnStatement	return ;	19:8:285:291	8567894	1	True				
ANR	8567960	ForStatement	for ( i = 0 ; i < 146 ; i ++ )		8567894	5					
ANR	8567961	ForInit	i = 0 ;	23:8:309:314	8567894	0	True				
ANR	8567962	AssignmentExpression	i = 0		8567894	0		=			
ANR	8567963	Identifier	i		8567894	0					
ANR	8567964	PrimaryExpression	0		8567894	1					
ANR	8567965	Condition	i < 146	23:15:316:322	8567894	1	True				
ANR	8567966	RelationalExpression	i < 146		8567894	0		<			
ANR	8567967	Identifier	i		8567894	0					
ANR	8567968	PrimaryExpression	146		8567894	1					
ANR	8567969	PostIncDecOperationExpression	i ++	23:24:325:327	8567894	2	True				
ANR	8567970	Identifier	i		8567894	0					
ANR	8567971	IncDec	++		8567894	1					
ANR	8567972	ExpressionStatement	tmp [ i ] = dec -> filtbuf [ i ]	25:8:339:363	8567894	3	True				
ANR	8567973	AssignmentExpression	tmp [ i ] = dec -> filtbuf [ i ]		8567894	0		=			
ANR	8567974	ArrayIndexing	tmp [ i ]		8567894	0					
ANR	8567975	Identifier	tmp		8567894	0					
ANR	8567976	Identifier	i		8567894	1					
ANR	8567977	ArrayIndexing	dec -> filtbuf [ i ]		8567894	1					
ANR	8567978	PtrMemberAccess	dec -> filtbuf		8567894	0					
ANR	8567979	Identifier	dec		8567894	0					
ANR	8567980	Identifier	filtbuf		8567894	1					
ANR	8567981	Identifier	i		8567894	1					
ANR	8567982	ExpressionStatement	off = ( t / 25 ) + dec -> offset1 [ quart >> 1 ] + 18	27:4:370:416	8567894	6	True				
ANR	8567983	AssignmentExpression	off = ( t / 25 ) + dec -> offset1 [ quart >> 1 ] + 18		8567894	0		=			
ANR	8567984	Identifier	off		8567894	0					
ANR	8567985	AdditiveExpression	( t / 25 ) + dec -> offset1 [ quart >> 1 ] + 18		8567894	1		+			
ANR	8567986	MultiplicativeExpression	t / 25		8567894	0		/			
ANR	8567987	Identifier	t		8567894	0					
ANR	8567988	PrimaryExpression	25		8567894	1					
ANR	8567989	AdditiveExpression	dec -> offset1 [ quart >> 1 ] + 18		8567894	1		+			
ANR	8567990	ArrayIndexing	dec -> offset1 [ quart >> 1 ]		8567894	0					
ANR	8567991	PtrMemberAccess	dec -> offset1		8567894	0					
ANR	8567992	Identifier	dec		8567894	0					
ANR	8567993	Identifier	offset1		8567894	1					
ANR	8567994	ShiftExpression	quart >> 1		8567894	1		>>			
ANR	8567995	Identifier	quart		8567894	0					
ANR	8567996	PrimaryExpression	1		8567894	1					
ANR	8567997	PrimaryExpression	18		8567894	1					
ANR	8567998	ExpressionStatement	ptr0 = tmp + 145 - off	30:4:424:446	8567894	7	True				
ANR	8567999	AssignmentExpression	ptr0 = tmp + 145 - off		8567894	0		=			
ANR	8568000	Identifier	ptr0		8567894	0					
ANR	8568001	AdditiveExpression	tmp + 145 - off		8567894	1		+			
ANR	8568002	Identifier	tmp		8567894	0					
ANR	8568003	AdditiveExpression	145 - off		8567894	1		-			
ANR	8568004	PrimaryExpression	145		8567894	0					
ANR	8568005	Identifier	off		8567894	1					
ANR	8568006	ExpressionStatement	ptr1 = tmp + 146	32:4:453:469	8567894	8	True				
ANR	8568007	AssignmentExpression	ptr1 = tmp + 146		8567894	0		=			
ANR	8568008	Identifier	ptr1		8567894	0					
ANR	8568009	AdditiveExpression	tmp + 146		8567894	1		+			
ANR	8568010	Identifier	tmp		8567894	0					
ANR	8568011	PrimaryExpression	146		8567894	1					
ANR	8568012	ExpressionStatement	filter = ( const int16_t * ) ts_order2_coeffs + ( t % 25 ) * 2	34:4:476:532	8567894	9	True				
ANR	8568013	AssignmentExpression	filter = ( const int16_t * ) ts_order2_coeffs + ( t % 25 ) * 2		8567894	0		=			
ANR	8568014	Identifier	filter		8567894	0					
ANR	8568015	AdditiveExpression	( const int16_t * ) ts_order2_coeffs + ( t % 25 ) * 2		8567894	1		+			
ANR	8568016	CastExpression	( const int16_t * ) ts_order2_coeffs		8567894	0					
ANR	8568017	CastTarget	const int16_t *		8567894	0					
ANR	8568018	Identifier	ts_order2_coeffs		8567894	1					
ANR	8568019	MultiplicativeExpression	( t % 25 ) * 2		8567894	1		*			
ANR	8568020	MultiplicativeExpression	t % 25		8567894	0		%			
ANR	8568021	Identifier	t		8567894	0					
ANR	8568022	PrimaryExpression	25		8567894	1					
ANR	8568023	PrimaryExpression	2		8567894	1					
ANR	8568024	ForStatement	for ( i = 0 ; i < 60 ; i ++ )		8567894	10					
ANR	8568025	ForInit	i = 0 ;	36:8:543:548	8567894	0	True				
ANR	8568026	AssignmentExpression	i = 0		8567894	0		=			
ANR	8568027	Identifier	i		8567894	0					
ANR	8568028	PrimaryExpression	0		8567894	1					
ANR	8568029	Condition	i < 60	36:15:550:555	8567894	1	True				
ANR	8568030	RelationalExpression	i < 60		8567894	0		<			
ANR	8568031	Identifier	i		8567894	0					
ANR	8568032	PrimaryExpression	60		8567894	1					
ANR	8568033	PostIncDecOperationExpression	i ++	36:23:558:560	8567894	2	True				
ANR	8568034	Identifier	i		8567894	0					
ANR	8568035	IncDec	++		8567894	1					
ANR	8568036	CompoundStatement		34:27:488:488	8567894	3					
ANR	8568037	ExpressionStatement	t = ( ptr0 [ 0 ] * filter [ 0 ] + ptr0 [ 1 ] * filter [ 1 ] + 0x2000 ) >> 14	38:8:573:635	8567894	0	True				
ANR	8568038	AssignmentExpression	t = ( ptr0 [ 0 ] * filter [ 0 ] + ptr0 [ 1 ] * filter [ 1 ] + 0x2000 ) >> 14		8567894	0		=			
ANR	8568039	Identifier	t		8567894	0					
ANR	8568040	ShiftExpression	( ptr0 [ 0 ] * filter [ 0 ] + ptr0 [ 1 ] * filter [ 1 ] + 0x2000 ) >> 14		8567894	1		>>			
ANR	8568041	AdditiveExpression	ptr0 [ 0 ] * filter [ 0 ] + ptr0 [ 1 ] * filter [ 1 ] + 0x2000		8567894	0		+			
ANR	8568042	MultiplicativeExpression	ptr0 [ 0 ] * filter [ 0 ]		8567894	0		*			
ANR	8568043	ArrayIndexing	ptr0 [ 0 ]		8567894	0					
ANR	8568044	Identifier	ptr0		8567894	0					
ANR	8568045	PrimaryExpression	0		8567894	1					
ANR	8568046	ArrayIndexing	filter [ 0 ]		8567894	1					
ANR	8568047	Identifier	filter		8567894	0					
ANR	8568048	PrimaryExpression	0		8567894	1					
ANR	8568049	AdditiveExpression	ptr0 [ 1 ] * filter [ 1 ] + 0x2000		8567894	1		+			
ANR	8568050	MultiplicativeExpression	ptr0 [ 1 ] * filter [ 1 ]		8567894	0		*			
ANR	8568051	ArrayIndexing	ptr0 [ 1 ]		8567894	0					
ANR	8568052	Identifier	ptr0		8567894	0					
ANR	8568053	PrimaryExpression	1		8567894	1					
ANR	8568054	ArrayIndexing	filter [ 1 ]		8567894	1					
ANR	8568055	Identifier	filter		8567894	0					
ANR	8568056	PrimaryExpression	1		8567894	1					
ANR	8568057	PrimaryExpression	0x2000		8567894	1					
ANR	8568058	PrimaryExpression	14		8567894	1					
ANR	8568059	ExpressionStatement	ptr0 ++	40:8:646:652	8567894	1	True				
ANR	8568060	PostIncDecOperationExpression	ptr0 ++		8567894	0					
ANR	8568061	Identifier	ptr0		8567894	0					
ANR	8568062	IncDec	++		8567894	1					
ANR	8568063	ExpressionStatement	dec -> newvec [ i ] = t	42:8:663:681	8567894	2	True				
ANR	8568064	AssignmentExpression	dec -> newvec [ i ] = t		8567894	0		=			
ANR	8568065	ArrayIndexing	dec -> newvec [ i ]		8567894	0					
ANR	8568066	PtrMemberAccess	dec -> newvec		8567894	0					
ANR	8568067	Identifier	dec		8567894	0					
ANR	8568068	Identifier	newvec		8567894	1					
ANR	8568069	Identifier	i		8567894	1					
ANR	8568070	Identifier	t		8567894	1					
ANR	8568071	ExpressionStatement	ptr1 [ i ] = t	44:8:692:703	8567894	3	True				
ANR	8568072	AssignmentExpression	ptr1 [ i ] = t		8567894	0		=			
ANR	8568073	ArrayIndexing	ptr1 [ i ]		8567894	0					
ANR	8568074	Identifier	ptr1		8567894	0					
ANR	8568075	Identifier	i		8567894	1					
ANR	8568076	Identifier	t		8567894	1					
ANR	8568077	ReturnType	static void		8567894	1					
ANR	8568078	Identifier	truespeech_apply_twopoint_filter		8567894	2					
ANR	8568079	ParameterList	"TSContext * dec , int quart"		8567894	3					
ANR	8568080	Parameter	TSContext * dec	1:45:45:58	8567894	0	True				
ANR	8568081	ParameterType	TSContext *		8567894	0					
ANR	8568082	Identifier	dec		8567894	1					
ANR	8568083	Parameter	int quart	1:61:61:69	8567894	1	True				
ANR	8568084	ParameterType	int		8567894	0					
ANR	8568085	Identifier	quart		8567894	1					
ANR	8568086	CFGEntryNode	ENTRY		8567894		True				
ANR	8568087	CFGExitNode	EXIT		8567894		True				
ANR	8568088	Symbol	* tmp		8567894						
ANR	8568089	Symbol	dec		8567894						
ANR	8568090	Symbol	ts_order2_coeffs		8567894						
ANR	8568091	Symbol	* quart		8567894						
ANR	8568092	Symbol	* dec -> filtbuf		8567894						
ANR	8568093	Symbol	quart		8567894						
ANR	8568094	Symbol	* dec		8567894						
ANR	8568095	Symbol	tmp		8567894						
ANR	8568096	Symbol	* * dec		8567894						
ANR	8568097	Symbol	dec -> offset1		8567894						
ANR	8568098	Symbol	dec -> offset2		8567894						
ANR	8568099	Symbol	* ptr1		8567894						
ANR	8568100	Symbol	* ptr0		8567894						
ANR	8568101	Symbol	dec -> newvec		8567894						
ANR	8568102	Symbol	* dec -> newvec		8567894						
ANR	8568103	Symbol	i		8567894						
ANR	8568104	Symbol	* dec -> offset2		8567894						
ANR	8568105	Symbol	* dec -> offset1		8567894						
ANR	8568106	Symbol	off		8567894						
ANR	8568107	Symbol	* filter		8567894						
ANR	8568108	Symbol	filter		8567894						
ANR	8568109	Symbol	* i		8567894						
ANR	8568110	Symbol	t		8567894						
ANR	8568111	Symbol	ptr0		8567894						
ANR	8568112	Symbol	ptr1		8567894						
ANR	8568113	Symbol	dec -> filtbuf		8567894						
