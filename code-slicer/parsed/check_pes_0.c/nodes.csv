command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1268822	File	/home/p4ultr4n/workplace/ReVeal/raw_code/check_pes_0.c								
ANR	1268823	Function	check_pes	1:0:0:541							
ANR	1268824	FunctionDef	"check_pes (uint8_t * p , uint8_t * end)"		1268823	0					
ANR	1268825	CompoundStatement		1:46:46:541	1268823	0					
ANR	1268826	IdentifierDeclStatement	int pes1 ;	3:4:53:61	1268823	0	True				
ANR	1268827	IdentifierDecl	pes1		1268823	0					
ANR	1268828	IdentifierDeclType	int		1268823	0					
ANR	1268829	Identifier	pes1		1268823	1					
ANR	1268830	IdentifierDeclStatement	int pes2 = ( p [ 3 ] & 0xC0 ) == 0x80 && ( p [ 4 ] & 0xC0 ) != 0x40 && ( ( p [ 4 ] & 0xC0 ) == 0x00 || ( p [ 4 ] & 0xC0 ) >> 2 == ( p [ 6 ] & 0xF0 ) ) ;	5:4:68:222	1268823	1	True				
ANR	1268831	IdentifierDecl	pes2 = ( p [ 3 ] & 0xC0 ) == 0x80 && ( p [ 4 ] & 0xC0 ) != 0x40 && ( ( p [ 4 ] & 0xC0 ) == 0x00 || ( p [ 4 ] & 0xC0 ) >> 2 == ( p [ 6 ] & 0xF0 ) )		1268823	0					
ANR	1268832	IdentifierDeclType	int		1268823	0					
ANR	1268833	Identifier	pes2		1268823	1					
ANR	1268834	AssignmentExpression	pes2 = ( p [ 3 ] & 0xC0 ) == 0x80 && ( p [ 4 ] & 0xC0 ) != 0x40 && ( ( p [ 4 ] & 0xC0 ) == 0x00 || ( p [ 4 ] & 0xC0 ) >> 2 == ( p [ 6 ] & 0xF0 ) )		1268823	2		=			
ANR	1268835	Identifier	pes2		1268823	0					
ANR	1268836	AndExpression	( p [ 3 ] & 0xC0 ) == 0x80 && ( p [ 4 ] & 0xC0 ) != 0x40 && ( ( p [ 4 ] & 0xC0 ) == 0x00 || ( p [ 4 ] & 0xC0 ) >> 2 == ( p [ 6 ] & 0xF0 ) )		1268823	1		&&			
ANR	1268837	EqualityExpression	( p [ 3 ] & 0xC0 ) == 0x80		1268823	0		==			
ANR	1268838	BitAndExpression	p [ 3 ] & 0xC0		1268823	0		&			
ANR	1268839	ArrayIndexing	p [ 3 ]		1268823	0					
ANR	1268840	Identifier	p		1268823	0					
ANR	1268841	PrimaryExpression	3		1268823	1					
ANR	1268842	PrimaryExpression	0xC0		1268823	1					
ANR	1268843	PrimaryExpression	0x80		1268823	1					
ANR	1268844	AndExpression	( p [ 4 ] & 0xC0 ) != 0x40 && ( ( p [ 4 ] & 0xC0 ) == 0x00 || ( p [ 4 ] & 0xC0 ) >> 2 == ( p [ 6 ] & 0xF0 ) )		1268823	1		&&			
ANR	1268845	EqualityExpression	( p [ 4 ] & 0xC0 ) != 0x40		1268823	0		!=			
ANR	1268846	BitAndExpression	p [ 4 ] & 0xC0		1268823	0		&			
ANR	1268847	ArrayIndexing	p [ 4 ]		1268823	0					
ANR	1268848	Identifier	p		1268823	0					
ANR	1268849	PrimaryExpression	4		1268823	1					
ANR	1268850	PrimaryExpression	0xC0		1268823	1					
ANR	1268851	PrimaryExpression	0x40		1268823	1					
ANR	1268852	OrExpression	( p [ 4 ] & 0xC0 ) == 0x00 || ( p [ 4 ] & 0xC0 ) >> 2 == ( p [ 6 ] & 0xF0 )		1268823	1		||			
ANR	1268853	EqualityExpression	( p [ 4 ] & 0xC0 ) == 0x00		1268823	0		==			
ANR	1268854	BitAndExpression	p [ 4 ] & 0xC0		1268823	0		&			
ANR	1268855	ArrayIndexing	p [ 4 ]		1268823	0					
ANR	1268856	Identifier	p		1268823	0					
ANR	1268857	PrimaryExpression	4		1268823	1					
ANR	1268858	PrimaryExpression	0xC0		1268823	1					
ANR	1268859	PrimaryExpression	0x00		1268823	1					
ANR	1268860	EqualityExpression	( p [ 4 ] & 0xC0 ) >> 2 == ( p [ 6 ] & 0xF0 )		1268823	1		==			
ANR	1268861	ShiftExpression	( p [ 4 ] & 0xC0 ) >> 2		1268823	0		>>			
ANR	1268862	BitAndExpression	p [ 4 ] & 0xC0		1268823	0		&			
ANR	1268863	ArrayIndexing	p [ 4 ]		1268823	0					
ANR	1268864	Identifier	p		1268823	0					
ANR	1268865	PrimaryExpression	4		1268823	1					
ANR	1268866	PrimaryExpression	0xC0		1268823	1					
ANR	1268867	PrimaryExpression	2		1268823	1					
ANR	1268868	BitAndExpression	p [ 6 ] & 0xF0		1268823	1		&			
ANR	1268869	ArrayIndexing	p [ 6 ]		1268823	0					
ANR	1268870	Identifier	p		1268823	0					
ANR	1268871	PrimaryExpression	6		1268823	1					
ANR	1268872	PrimaryExpression	0xF0		1268823	1					
ANR	1268873	ForStatement	for ( p += 3 ; p < end && * p == 0xFF ; p ++ )		1268823	2					
ANR	1268874	ForInit	p += 3 ;	13:8:235:239	1268823	0	True				
ANR	1268875	AssignmentExpression	p += 3		1268823	0		+=			
ANR	1268876	Identifier	p		1268823	0					
ANR	1268877	PrimaryExpression	3		1268823	1					
ANR	1268878	Condition	p < end && * p == 0xFF	13:14:241:259	1268823	1	True				
ANR	1268879	AndExpression	p < end && * p == 0xFF		1268823	0		&&			
ANR	1268880	RelationalExpression	p < end		1268823	0		<			
ANR	1268881	Identifier	p		1268823	0					
ANR	1268882	Identifier	end		1268823	1					
ANR	1268883	EqualityExpression	* p == 0xFF		1268823	1		==			
ANR	1268884	UnaryOperationExpression	* p		1268823	0					
ANR	1268885	UnaryOperator	*		1268823	0					
ANR	1268886	Identifier	p		1268823	1					
ANR	1268887	PrimaryExpression	0xFF		1268823	1					
ANR	1268888	PostIncDecOperationExpression	p ++	13:35:262:264	1268823	2	True				
ANR	1268889	Identifier	p		1268823	0					
ANR	1268890	IncDec	++		1268823	1					
ANR	1268891	ExpressionStatement		13:39:266:266	1268823	3	True				
ANR	1268892	IfStatement	if ( ( * p & 0xC0 ) == 0x40 )		1268823	3					
ANR	1268893	Condition	( * p & 0xC0 ) == 0x40	15:7:276:292	1268823	0	True				
ANR	1268894	EqualityExpression	( * p & 0xC0 ) == 0x40		1268823	0		==			
ANR	1268895	BitAndExpression	* p & 0xC0		1268823	0		&			
ANR	1268896	UnaryOperationExpression	* p		1268823	0					
ANR	1268897	UnaryOperator	*		1268823	0					
ANR	1268898	Identifier	p		1268823	1					
ANR	1268899	PrimaryExpression	0xC0		1268823	1					
ANR	1268900	PrimaryExpression	0x40		1268823	1					
ANR	1268901	ExpressionStatement	p += 2	15:26:295:299	1268823	1	True				
ANR	1268902	AssignmentExpression	p += 2		1268823	0		+=			
ANR	1268903	Identifier	p		1268823	0					
ANR	1268904	PrimaryExpression	2		1268823	1					
ANR	1268905	IfStatement	if ( ( * p & 0xF0 ) == 0x20 )		1268823	4					
ANR	1268906	Condition	( * p & 0xF0 ) == 0x20	17:7:309:325	1268823	0	True				
ANR	1268907	EqualityExpression	( * p & 0xF0 ) == 0x20		1268823	0		==			
ANR	1268908	BitAndExpression	* p & 0xF0		1268823	0		&			
ANR	1268909	UnaryOperationExpression	* p		1268823	0					
ANR	1268910	UnaryOperator	*		1268823	0					
ANR	1268911	Identifier	p		1268823	1					
ANR	1268912	PrimaryExpression	0xF0		1268823	1					
ANR	1268913	PrimaryExpression	0x20		1268823	1					
ANR	1268914	CompoundStatement		17:25:280:280	1268823	1					
ANR	1268915	ExpressionStatement	pes1 = p [ 0 ] & p [ 2 ] & p [ 4 ] & 1	19:8:338:360	1268823	0	True				
ANR	1268916	AssignmentExpression	pes1 = p [ 0 ] & p [ 2 ] & p [ 4 ] & 1		1268823	0		=			
ANR	1268917	Identifier	pes1		1268823	0					
ANR	1268918	BitAndExpression	p [ 0 ] & p [ 2 ] & p [ 4 ] & 1		1268823	1		&			
ANR	1268919	ArrayIndexing	p [ 0 ]		1268823	0					
ANR	1268920	Identifier	p		1268823	0					
ANR	1268921	PrimaryExpression	0		1268823	1					
ANR	1268922	BitAndExpression	p [ 2 ] & p [ 4 ] & 1		1268823	1		&			
ANR	1268923	ArrayIndexing	p [ 2 ]		1268823	0					
ANR	1268924	Identifier	p		1268823	0					
ANR	1268925	PrimaryExpression	2		1268823	1					
ANR	1268926	BitAndExpression	p [ 4 ] & 1		1268823	1		&			
ANR	1268927	ArrayIndexing	p [ 4 ]		1268823	0					
ANR	1268928	Identifier	p		1268823	0					
ANR	1268929	PrimaryExpression	4		1268823	1					
ANR	1268930	PrimaryExpression	1		1268823	1					
ANR	1268931	ExpressionStatement	p += 5	21:8:371:375	1268823	1	True				
ANR	1268932	AssignmentExpression	p += 5		1268823	0		+=			
ANR	1268933	Identifier	p		1268823	0					
ANR	1268934	PrimaryExpression	5		1268823	1					
ANR	1268935	ElseStatement	else		1268823	0					
ANR	1268936	IfStatement	if ( ( * p & 0xF0 ) == 0x30 )		1268823	0					
ANR	1268937	Condition	( * p & 0xF0 ) == 0x30	23:13:391:407	1268823	0	True				
ANR	1268938	EqualityExpression	( * p & 0xF0 ) == 0x30		1268823	0		==			
ANR	1268939	BitAndExpression	* p & 0xF0		1268823	0		&			
ANR	1268940	UnaryOperationExpression	* p		1268823	0					
ANR	1268941	UnaryOperator	*		1268823	0					
ANR	1268942	Identifier	p		1268823	1					
ANR	1268943	PrimaryExpression	0xF0		1268823	1					
ANR	1268944	PrimaryExpression	0x30		1268823	1					
ANR	1268945	CompoundStatement		23:31:362:362	1268823	1					
ANR	1268946	ExpressionStatement	pes1 = p [ 0 ] & p [ 2 ] & p [ 4 ] & p [ 5 ] & p [ 7 ] & p [ 9 ] & 1	25:8:420:457	1268823	0	True				
ANR	1268947	AssignmentExpression	pes1 = p [ 0 ] & p [ 2 ] & p [ 4 ] & p [ 5 ] & p [ 7 ] & p [ 9 ] & 1		1268823	0		=			
ANR	1268948	Identifier	pes1		1268823	0					
ANR	1268949	BitAndExpression	p [ 0 ] & p [ 2 ] & p [ 4 ] & p [ 5 ] & p [ 7 ] & p [ 9 ] & 1		1268823	1		&			
ANR	1268950	ArrayIndexing	p [ 0 ]		1268823	0					
ANR	1268951	Identifier	p		1268823	0					
ANR	1268952	PrimaryExpression	0		1268823	1					
ANR	1268953	BitAndExpression	p [ 2 ] & p [ 4 ] & p [ 5 ] & p [ 7 ] & p [ 9 ] & 1		1268823	1		&			
ANR	1268954	ArrayIndexing	p [ 2 ]		1268823	0					
ANR	1268955	Identifier	p		1268823	0					
ANR	1268956	PrimaryExpression	2		1268823	1					
ANR	1268957	BitAndExpression	p [ 4 ] & p [ 5 ] & p [ 7 ] & p [ 9 ] & 1		1268823	1		&			
ANR	1268958	ArrayIndexing	p [ 4 ]		1268823	0					
ANR	1268959	Identifier	p		1268823	0					
ANR	1268960	PrimaryExpression	4		1268823	1					
ANR	1268961	BitAndExpression	p [ 5 ] & p [ 7 ] & p [ 9 ] & 1		1268823	1		&			
ANR	1268962	ArrayIndexing	p [ 5 ]		1268823	0					
ANR	1268963	Identifier	p		1268823	0					
ANR	1268964	PrimaryExpression	5		1268823	1					
ANR	1268965	BitAndExpression	p [ 7 ] & p [ 9 ] & 1		1268823	1		&			
ANR	1268966	ArrayIndexing	p [ 7 ]		1268823	0					
ANR	1268967	Identifier	p		1268823	0					
ANR	1268968	PrimaryExpression	7		1268823	1					
ANR	1268969	BitAndExpression	p [ 9 ] & 1		1268823	1		&			
ANR	1268970	ArrayIndexing	p [ 9 ]		1268823	0					
ANR	1268971	Identifier	p		1268823	0					
ANR	1268972	PrimaryExpression	9		1268823	1					
ANR	1268973	PrimaryExpression	1		1268823	1					
ANR	1268974	ExpressionStatement	p += 10	27:8:468:473	1268823	1	True				
ANR	1268975	AssignmentExpression	p += 10		1268823	0		+=			
ANR	1268976	Identifier	p		1268823	0					
ANR	1268977	PrimaryExpression	10		1268823	1					
ANR	1268978	ElseStatement	else		1268823	0					
ANR	1268979	ExpressionStatement	pes1 = * p == 0x0F	31:8:495:512	1268823	0	True				
ANR	1268980	AssignmentExpression	pes1 = * p == 0x0F		1268823	0		=			
ANR	1268981	Identifier	pes1		1268823	0					
ANR	1268982	EqualityExpression	* p == 0x0F		1268823	1		==			
ANR	1268983	UnaryOperationExpression	* p		1268823	0					
ANR	1268984	UnaryOperator	*		1268823	0					
ANR	1268985	Identifier	p		1268823	1					
ANR	1268986	PrimaryExpression	0x0F		1268823	1					
ANR	1268987	ReturnStatement	return pes1 || pes2 ;	35:4:521:538	1268823	5	True				
ANR	1268988	OrExpression	pes1 || pes2		1268823	0		||			
ANR	1268989	Identifier	pes1		1268823	0					
ANR	1268990	Identifier	pes2		1268823	1					
ANR	1268991	ReturnType	static int		1268823	1					
ANR	1268992	Identifier	check_pes		1268823	2					
ANR	1268993	ParameterList	"uint8_t * p , uint8_t * end"		1268823	3					
ANR	1268994	Parameter	uint8_t * p	1:21:21:30	1268823	0	True				
ANR	1268995	ParameterType	uint8_t *		1268823	0					
ANR	1268996	Identifier	p		1268823	1					
ANR	1268997	Parameter	uint8_t * end	1:33:33:44	1268823	1	True				
ANR	1268998	ParameterType	uint8_t *		1268823	0					
ANR	1268999	Identifier	end		1268823	1					
ANR	1269000	CFGEntryNode	ENTRY		1268823		True				
ANR	1269001	CFGExitNode	EXIT		1268823		True				
ANR	1269002	Symbol	p		1268823						
ANR	1269003	Symbol	pes2		1268823						
ANR	1269004	Symbol	pes1		1268823						
ANR	1269005	Symbol	end		1268823						
ANR	1269006	Symbol	* p		1268823						
