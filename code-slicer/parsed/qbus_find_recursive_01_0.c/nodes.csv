command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6819759	File	/home/p4ultr4n/workplace/ReVeal/raw_code/qbus_find_recursive_01_0.c								
ANR	6819760	Function	qbus_find_recursive	1:0:0:781							
ANR	6819761	FunctionDef	"qbus_find_recursive (BusState * bus , const char * name , const char * bus_typename)"		6819760	0					
ANR	6819762	CompoundStatement		5:0:135:781	6819760	0					
ANR	6819763	IdentifierDeclStatement	BusChild * kid ;	7:4:142:155	6819760	0	True				
ANR	6819764	IdentifierDecl	* kid		6819760	0					
ANR	6819765	IdentifierDeclType	BusChild *		6819760	0					
ANR	6819766	Identifier	kid		6819760	1					
ANR	6819767	IdentifierDeclStatement	"BusState * child , * ret ;"	9:4:162:183	6819760	1	True				
ANR	6819768	IdentifierDecl	* child		6819760	0					
ANR	6819769	IdentifierDeclType	BusState *		6819760	0					
ANR	6819770	Identifier	child		6819760	1					
ANR	6819771	IdentifierDecl	* ret		6819760	1					
ANR	6819772	IdentifierDeclType	BusState *		6819760	0					
ANR	6819773	Identifier	ret		6819760	1					
ANR	6819774	IdentifierDeclStatement	int match = 1 ;	11:4:190:203	6819760	2	True				
ANR	6819775	IdentifierDecl	match = 1		6819760	0					
ANR	6819776	IdentifierDeclType	int		6819760	0					
ANR	6819777	Identifier	match		6819760	1					
ANR	6819778	AssignmentExpression	match = 1		6819760	2		=			
ANR	6819779	Identifier	match		6819760	0					
ANR	6819780	PrimaryExpression	1		6819760	1					
ANR	6819781	IfStatement	"if ( name && ( strcmp ( bus -> name , name ) != 0 ) )"		6819760	3					
ANR	6819782	Condition	"name && ( strcmp ( bus -> name , name ) != 0 )"	15:8:216:253	6819760	0	True				
ANR	6819783	AndExpression	"name && ( strcmp ( bus -> name , name ) != 0 )"		6819760	0		&&			
ANR	6819784	Identifier	name		6819760	0					
ANR	6819785	EqualityExpression	"strcmp ( bus -> name , name ) != 0"		6819760	1		!=			
ANR	6819786	CallExpression	"strcmp ( bus -> name , name )"		6819760	0					
ANR	6819787	Callee	strcmp		6819760	0					
ANR	6819788	Identifier	strcmp		6819760	0					
ANR	6819789	ArgumentList	bus -> name		6819760	1					
ANR	6819790	Argument	bus -> name		6819760	0					
ANR	6819791	PtrMemberAccess	bus -> name		6819760	0					
ANR	6819792	Identifier	bus		6819760	0					
ANR	6819793	Identifier	name		6819760	1					
ANR	6819794	Argument	name		6819760	1					
ANR	6819795	Identifier	name		6819760	0					
ANR	6819796	PrimaryExpression	0		6819760	1					
ANR	6819797	CompoundStatement		11:48:120:120	6819760	1					
ANR	6819798	ExpressionStatement	match = 0	17:8:267:276	6819760	0	True				
ANR	6819799	AssignmentExpression	match = 0		6819760	0		=			
ANR	6819800	Identifier	match		6819760	0					
ANR	6819801	PrimaryExpression	0		6819760	1					
ANR	6819802	IfStatement	"if ( bus_typename && ( strcmp ( object_get_typename ( OBJECT ( bus ) ) , bus_typename ) != 0 ) )"		6819760	4					
ANR	6819803	Condition	"bus_typename && ( strcmp ( object_get_typename ( OBJECT ( bus ) ) , bus_typename ) != 0 )"	21:8:294:379	6819760	0	True				
ANR	6819804	AndExpression	"bus_typename && ( strcmp ( object_get_typename ( OBJECT ( bus ) ) , bus_typename ) != 0 )"		6819760	0		&&			
ANR	6819805	Identifier	bus_typename		6819760	0					
ANR	6819806	EqualityExpression	"strcmp ( object_get_typename ( OBJECT ( bus ) ) , bus_typename ) != 0"		6819760	1		!=			
ANR	6819807	CallExpression	"strcmp ( object_get_typename ( OBJECT ( bus ) ) , bus_typename )"		6819760	0					
ANR	6819808	Callee	strcmp		6819760	0					
ANR	6819809	Identifier	strcmp		6819760	0					
ANR	6819810	ArgumentList	object_get_typename ( OBJECT ( bus ) )		6819760	1					
ANR	6819811	Argument	object_get_typename ( OBJECT ( bus ) )		6819760	0					
ANR	6819812	CallExpression	object_get_typename ( OBJECT ( bus ) )		6819760	0					
ANR	6819813	Callee	object_get_typename		6819760	0					
ANR	6819814	Identifier	object_get_typename		6819760	0					
ANR	6819815	ArgumentList	OBJECT ( bus )		6819760	1					
ANR	6819816	Argument	OBJECT ( bus )		6819760	0					
ANR	6819817	CallExpression	OBJECT ( bus )		6819760	0					
ANR	6819818	Callee	OBJECT		6819760	0					
ANR	6819819	Identifier	OBJECT		6819760	0					
ANR	6819820	ArgumentList	bus		6819760	1					
ANR	6819821	Argument	bus		6819760	0					
ANR	6819822	Identifier	bus		6819760	0					
ANR	6819823	Argument	bus_typename		6819760	1					
ANR	6819824	Identifier	bus_typename		6819760	0					
ANR	6819825	PrimaryExpression	0		6819760	1					
ANR	6819826	CompoundStatement		19:71:246:246	6819760	1					
ANR	6819827	ExpressionStatement	match = 0	25:8:393:402	6819760	0	True				
ANR	6819828	AssignmentExpression	match = 0		6819760	0		=			
ANR	6819829	Identifier	match		6819760	0					
ANR	6819830	PrimaryExpression	0		6819760	1					
ANR	6819831	IfStatement	if ( match )		6819760	5					
ANR	6819832	Condition	match	29:8:420:424	6819760	0	True				
ANR	6819833	Identifier	match		6819760	0					
ANR	6819834	CompoundStatement		25:15:291:291	6819760	1					
ANR	6819835	ReturnStatement	return bus ;	31:8:438:448	6819760	0	True				
ANR	6819836	Identifier	bus		6819760	0					
ANR	6819837	Statement	QTAILQ_FOREACH	37:4:464:477	6819760	6	True				
ANR	6819838	Statement	(	37:18:478:478	6819760	7	True				
ANR	6819839	Statement	kid	37:19:479:481	6819760	8	True				
ANR	6819840	Statement	","	37:22:482:482	6819760	9	True				
ANR	6819841	Statement	&	37:24:484:484	6819760	10	True				
ANR	6819842	Statement	bus	37:25:485:487	6819760	11	True				
ANR	6819843	Statement	->	37:28:488:489	6819760	12	True				
ANR	6819844	Statement	children	37:30:490:497	6819760	13	True				
ANR	6819845	Statement	","	37:38:498:498	6819760	14	True				
ANR	6819846	Statement	sibling	37:40:500:506	6819760	15	True				
ANR	6819847	Statement	)	37:47:507:507	6819760	16	True				
ANR	6819848	CompoundStatement		35:8:384:413	6819760	17					
ANR	6819849	IdentifierDeclStatement	DeviceState * dev = kid -> child ;	39:8:520:549	6819760	0	True				
ANR	6819850	IdentifierDecl	* dev = kid -> child		6819760	0					
ANR	6819851	IdentifierDeclType	DeviceState *		6819760	0					
ANR	6819852	Identifier	dev		6819760	1					
ANR	6819853	AssignmentExpression	* dev = kid -> child		6819760	2		=			
ANR	6819854	Identifier	dev		6819760	0					
ANR	6819855	PtrMemberAccess	kid -> child		6819760	1					
ANR	6819856	Identifier	kid		6819760	0					
ANR	6819857	Identifier	child		6819760	1					
ANR	6819858	Statement	QLIST_FOREACH	41:8:560:572	6819760	1	True				
ANR	6819859	Statement	(	41:21:573:573	6819760	2	True				
ANR	6819860	Statement	child	41:22:574:578	6819760	3	True				
ANR	6819861	Statement	","	41:27:579:579	6819760	4	True				
ANR	6819862	Statement	&	41:29:581:581	6819760	5	True				
ANR	6819863	Statement	dev	41:30:582:584	6819760	6	True				
ANR	6819864	Statement	->	41:33:585:586	6819760	7	True				
ANR	6819865	Statement	child_bus	41:35:587:595	6819760	8	True				
ANR	6819866	Statement	","	41:44:596:596	6819760	9	True				
ANR	6819867	Statement	sibling	41:46:598:604	6819760	10	True				
ANR	6819868	Statement	)	41:53:605:605	6819760	11	True				
ANR	6819869	CompoundStatement		37:55:471:471	6819760	12					
ANR	6819870	ExpressionStatement	"ret = qbus_find_recursive ( child , name , bus_typename )"	43:12:622:674	6819760	0	True				
ANR	6819871	AssignmentExpression	"ret = qbus_find_recursive ( child , name , bus_typename )"		6819760	0		=			
ANR	6819872	Identifier	ret		6819760	0					
ANR	6819873	CallExpression	"qbus_find_recursive ( child , name , bus_typename )"		6819760	1					
ANR	6819874	Callee	qbus_find_recursive		6819760	0					
ANR	6819875	Identifier	qbus_find_recursive		6819760	0					
ANR	6819876	ArgumentList	child		6819760	1					
ANR	6819877	Argument	child		6819760	0					
ANR	6819878	Identifier	child		6819760	0					
ANR	6819879	Argument	name		6819760	1					
ANR	6819880	Identifier	name		6819760	0					
ANR	6819881	Argument	bus_typename		6819760	2					
ANR	6819882	Identifier	bus_typename		6819760	0					
ANR	6819883	IfStatement	if ( ret )		6819760	1					
ANR	6819884	Condition	ret	45:16:693:695	6819760	0	True				
ANR	6819885	Identifier	ret		6819760	0					
ANR	6819886	CompoundStatement		41:21:562:562	6819760	1					
ANR	6819887	ReturnStatement	return ret ;	47:16:717:727	6819760	0	True				
ANR	6819888	Identifier	ret		6819760	0					
ANR	6819889	ReturnStatement	return NULL ;	55:4:767:778	6819760	18	True				
ANR	6819890	Identifier	NULL		6819760	0					
ANR	6819891	ReturnType	static BusState *		6819760	1					
ANR	6819892	Identifier	qbus_find_recursive		6819760	2					
ANR	6819893	ParameterList	"BusState * bus , const char * name , const char * bus_typename"		6819760	3					
ANR	6819894	Parameter	BusState * bus	1:37:37:49	6819760	0	True				
ANR	6819895	ParameterType	BusState *		6819760	0					
ANR	6819896	Identifier	bus		6819760	1					
ANR	6819897	Parameter	const char * name	1:52:52:67	6819760	1	True				
ANR	6819898	ParameterType	const char *		6819760	0					
ANR	6819899	Identifier	name		6819760	1					
ANR	6819900	Parameter	const char * bus_typename	3:37:108:131	6819760	2	True				
ANR	6819901	ParameterType	const char *		6819760	0					
ANR	6819902	Identifier	bus_typename		6819760	1					
ANR	6819903	CFGEntryNode	ENTRY		6819760		True				
ANR	6819904	CFGExitNode	EXIT		6819760		True				
ANR	6819905	Symbol	ret		6819760						
ANR	6819906	Symbol	strcmp		6819760						
ANR	6819907	Symbol	bus		6819760						
ANR	6819908	Symbol	bus_typename		6819760						
ANR	6819909	Symbol	bus -> name		6819760						
ANR	6819910	Symbol	NULL		6819760						
ANR	6819911	Symbol	kid -> child		6819760						
ANR	6819912	Symbol	kid		6819760						
ANR	6819913	Symbol	match		6819760						
ANR	6819914	Symbol	OBJECT		6819760						
ANR	6819915	Symbol	* kid		6819760						
ANR	6819916	Symbol	dev		6819760						
ANR	6819917	Symbol	* bus		6819760						
ANR	6819918	Symbol	name		6819760						
ANR	6819919	Symbol	qbus_find_recursive		6819760						
ANR	6819920	Symbol	object_get_typename		6819760						
ANR	6819921	Symbol	child		6819760						
