command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3121272	File	/home/p4ultr4n/workplace/ReVeal/raw_code/exynos4210_fimd_write_0.c								
ANR	3121273	Function	exynos4210_fimd_write	1:0:0:11771							
ANR	3121274	FunctionDef	"exynos4210_fimd_write (void * opaque , target_phys_addr_t offset , uint64_t val , unsigned size)"		3121273	0					
ANR	3121275	CompoundStatement		5:0:136:11771	3121273	0					
ANR	3121276	IdentifierDeclStatement	Exynos4210fimdState * s = ( Exynos4210fimdState * ) opaque ;	7:4:143:197	3121273	0	True				
ANR	3121277	IdentifierDecl	* s = ( Exynos4210fimdState * ) opaque		3121273	0					
ANR	3121278	IdentifierDeclType	Exynos4210fimdState *		3121273	0					
ANR	3121279	Identifier	s		3121273	1					
ANR	3121280	AssignmentExpression	* s = ( Exynos4210fimdState * ) opaque		3121273	2		=			
ANR	3121281	Identifier	s		3121273	0					
ANR	3121282	CastExpression	( Exynos4210fimdState * ) opaque		3121273	1					
ANR	3121283	CastTarget	Exynos4210fimdState *		3121273	0					
ANR	3121284	Identifier	opaque		3121273	1					
ANR	3121285	IdentifierDeclStatement	"unsigned w , i ;"	9:4:204:217	3121273	1	True				
ANR	3121286	IdentifierDecl	w		3121273	0					
ANR	3121287	IdentifierDeclType	unsigned		3121273	0					
ANR	3121288	Identifier	w		3121273	1					
ANR	3121289	IdentifierDecl	i		3121273	1					
ANR	3121290	IdentifierDeclType	unsigned		3121273	0					
ANR	3121291	Identifier	i		3121273	1					
ANR	3121292	IdentifierDeclStatement	uint32_t old_value ;	11:4:224:242	3121273	2	True				
ANR	3121293	IdentifierDecl	old_value		3121273	0					
ANR	3121294	IdentifierDeclType	uint32_t		3121273	0					
ANR	3121295	Identifier	old_value		3121273	1					
ANR	3121296	Statement	DPRINT_L2	15:4:251:259	3121273	3	True				
ANR	3121297	Statement	(	15:13:260:260	3121273	4	True				
ANR	3121298	Statement	"""write offset 0x%08x, value=%llu(0x%08llx)\\n"""	15:14:261:305	3121273	5	True				
ANR	3121299	Statement	","	15:59:306:306	3121273	6	True				
ANR	3121300	Statement	offset	15:61:308:313	3121273	7	True				
ANR	3121301	Statement	","	15:67:314:314	3121273	8	True				
ANR	3121302	Statement	(	17:12:329:329	3121273	9	True				
ANR	3121303	Statement	long	17:13:330:333	3121273	10	True				
ANR	3121304	Statement	long	17:18:335:338	3121273	11	True				
ANR	3121305	Statement	unsigned	17:23:340:347	3121273	12	True				
ANR	3121306	Statement	int	17:32:349:351	3121273	13	True				
ANR	3121307	Statement	)	17:35:352:352	3121273	14	True				
ANR	3121308	Statement	val	17:36:353:355	3121273	15	True				
ANR	3121309	Statement	","	17:39:356:356	3121273	16	True				
ANR	3121310	Statement	(	17:41:358:358	3121273	17	True				
ANR	3121311	Statement	long	17:42:359:362	3121273	18	True				
ANR	3121312	Statement	long	17:47:364:367	3121273	19	True				
ANR	3121313	Statement	unsigned	17:52:369:376	3121273	20	True				
ANR	3121314	Statement	int	17:61:378:380	3121273	21	True				
ANR	3121315	Statement	)	17:64:381:381	3121273	22	True				
ANR	3121316	Statement	val	17:65:382:384	3121273	23	True				
ANR	3121317	Statement	)	17:68:385:385	3121273	24	True				
ANR	3121318	ExpressionStatement		17:69:386:386	3121273	25	True				
ANR	3121319	SwitchStatement	switch ( offset )		3121273	26					
ANR	3121320	Condition	offset	21:12:403:408	3121273	0	True				
ANR	3121321	Identifier	offset		3121273	0					
ANR	3121322	CompoundStatement		17:20:274:274	3121273	1					
ANR	3121323	Label	case FIMD_VIDCON0 :	23:4:418:435	3121273	0	True				
ANR	3121324	Identifier	FIMD_VIDCON0		3121273	0					
ANR	3121325	IfStatement	if ( ( val & FIMD_VIDCON0_ENVID_MASK ) == FIMD_VIDCON0_ENVID_MASK )		3121273	1					
ANR	3121326	Condition	( val & FIMD_VIDCON0_ENVID_MASK ) == FIMD_VIDCON0_ENVID_MASK	25:12:450:507	3121273	0	True				
ANR	3121327	EqualityExpression	( val & FIMD_VIDCON0_ENVID_MASK ) == FIMD_VIDCON0_ENVID_MASK		3121273	0		==			
ANR	3121328	BitAndExpression	val & FIMD_VIDCON0_ENVID_MASK		3121273	0		&			
ANR	3121329	Identifier	val		3121273	0					
ANR	3121330	Identifier	FIMD_VIDCON0_ENVID_MASK		3121273	1					
ANR	3121331	Identifier	FIMD_VIDCON0_ENVID_MASK		3121273	1					
ANR	3121332	CompoundStatement		21:72:373:373	3121273	1					
ANR	3121333	ExpressionStatement	"exynos4210_fimd_enable ( s , true )"	27:12:525:556	3121273	0	True				
ANR	3121334	CallExpression	"exynos4210_fimd_enable ( s , true )"		3121273	0					
ANR	3121335	Callee	exynos4210_fimd_enable		3121273	0					
ANR	3121336	Identifier	exynos4210_fimd_enable		3121273	0					
ANR	3121337	ArgumentList	s		3121273	1					
ANR	3121338	Argument	s		3121273	0					
ANR	3121339	Identifier	s		3121273	0					
ANR	3121340	Argument	true		3121273	1					
ANR	3121341	Identifier	true		3121273	0					
ANR	3121342	ElseStatement	else		3121273	0					
ANR	3121343	CompoundStatement		25:15:437:437	3121273	0					
ANR	3121344	IfStatement	if ( ( val & FIMD_VIDCON0_ENVID ) == 0 )		3121273	0					
ANR	3121345	Condition	( val & FIMD_VIDCON0_ENVID ) == 0	31:16:593:623	3121273	0	True				
ANR	3121346	EqualityExpression	( val & FIMD_VIDCON0_ENVID ) == 0		3121273	0		==			
ANR	3121347	BitAndExpression	val & FIMD_VIDCON0_ENVID		3121273	0		&			
ANR	3121348	Identifier	val		3121273	0					
ANR	3121349	Identifier	FIMD_VIDCON0_ENVID		3121273	1					
ANR	3121350	PrimaryExpression	0		3121273	1					
ANR	3121351	CompoundStatement		27:49:489:489	3121273	1					
ANR	3121352	ExpressionStatement	"exynos4210_fimd_enable ( s , false )"	33:16:645:677	3121273	0	True				
ANR	3121353	CallExpression	"exynos4210_fimd_enable ( s , false )"		3121273	0					
ANR	3121354	Callee	exynos4210_fimd_enable		3121273	0					
ANR	3121355	Identifier	exynos4210_fimd_enable		3121273	0					
ANR	3121356	ArgumentList	s		3121273	1					
ANR	3121357	Argument	s		3121273	0					
ANR	3121358	Identifier	s		3121273	0					
ANR	3121359	Argument	false		3121273	1					
ANR	3121360	Identifier	false		3121273	0					
ANR	3121361	ExpressionStatement	s -> vidcon [ 0 ] = val	39:8:714:732	3121273	2	True				
ANR	3121362	AssignmentExpression	s -> vidcon [ 0 ] = val		3121273	0		=			
ANR	3121363	ArrayIndexing	s -> vidcon [ 0 ]		3121273	0					
ANR	3121364	PtrMemberAccess	s -> vidcon		3121273	0					
ANR	3121365	Identifier	s		3121273	0					
ANR	3121366	Identifier	vidcon		3121273	1					
ANR	3121367	PrimaryExpression	0		3121273	1					
ANR	3121368	Identifier	val		3121273	1					
ANR	3121369	BreakStatement	break ;	41:8:743:748	3121273	3	True				
ANR	3121370	Label	case FIMD_VIDCON1 :	43:4:755:772	3121273	4	True				
ANR	3121371	Identifier	FIMD_VIDCON1		3121273	0					
ANR	3121372	ExpressionStatement	val = ( val & ( ~FIMD_VIDCON1_ROMASK ) ) | ( s -> vidcon [ 1 ] & FIMD_VIDCON1_ROMASK )	47:8:825:917	3121273	5	True				
ANR	3121373	AssignmentExpression	val = ( val & ( ~FIMD_VIDCON1_ROMASK ) ) | ( s -> vidcon [ 1 ] & FIMD_VIDCON1_ROMASK )		3121273	0		=			
ANR	3121374	Identifier	val		3121273	0					
ANR	3121375	InclusiveOrExpression	( val & ( ~FIMD_VIDCON1_ROMASK ) ) | ( s -> vidcon [ 1 ] & FIMD_VIDCON1_ROMASK )		3121273	1		|			
ANR	3121376	BitAndExpression	val & ( ~FIMD_VIDCON1_ROMASK )		3121273	0		&			
ANR	3121377	Identifier	val		3121273	0					
ANR	3121378	Identifier	~FIMD_VIDCON1_ROMASK		3121273	1					
ANR	3121379	BitAndExpression	s -> vidcon [ 1 ] & FIMD_VIDCON1_ROMASK		3121273	1		&			
ANR	3121380	ArrayIndexing	s -> vidcon [ 1 ]		3121273	0					
ANR	3121381	PtrMemberAccess	s -> vidcon		3121273	0					
ANR	3121382	Identifier	s		3121273	0					
ANR	3121383	Identifier	vidcon		3121273	1					
ANR	3121384	PrimaryExpression	1		3121273	1					
ANR	3121385	Identifier	FIMD_VIDCON1_ROMASK		3121273	1					
ANR	3121386	ExpressionStatement	s -> vidcon [ 1 ] = val	51:8:928:946	3121273	6	True				
ANR	3121387	AssignmentExpression	s -> vidcon [ 1 ] = val		3121273	0		=			
ANR	3121388	ArrayIndexing	s -> vidcon [ 1 ]		3121273	0					
ANR	3121389	PtrMemberAccess	s -> vidcon		3121273	0					
ANR	3121390	Identifier	s		3121273	0					
ANR	3121391	Identifier	vidcon		3121273	1					
ANR	3121392	PrimaryExpression	1		3121273	1					
ANR	3121393	Identifier	val		3121273	1					
ANR	3121394	BreakStatement	break ;	53:8:957:962	3121273	7	True				
ANR	3121395	Statement	case	55:4:969:972	3121273	8	True				
ANR	3121396	Statement	FIMD_VIDCON2	55:9:974:985	3121273	9	True				
ANR	3121397	Statement	...	55:22:987:989	3121273	10	True				
ANR	3121398	Label	FIMD_VIDCON3 :	55:26:991:1003	3121273	11	True				
ANR	3121399	Identifier	FIMD_VIDCON3		3121273	0					
ANR	3121400	ExpressionStatement	s -> vidcon [ ( offset ) >> 2 ] = val	57:8:1014:1044	3121273	12	True				
ANR	3121401	AssignmentExpression	s -> vidcon [ ( offset ) >> 2 ] = val		3121273	0		=			
ANR	3121402	ArrayIndexing	s -> vidcon [ ( offset ) >> 2 ]		3121273	0					
ANR	3121403	PtrMemberAccess	s -> vidcon		3121273	0					
ANR	3121404	Identifier	s		3121273	0					
ANR	3121405	Identifier	vidcon		3121273	1					
ANR	3121406	ShiftExpression	( offset ) >> 2		3121273	1		>>			
ANR	3121407	Identifier	offset		3121273	0					
ANR	3121408	PrimaryExpression	2		3121273	1					
ANR	3121409	Identifier	val		3121273	1					
ANR	3121410	BreakStatement	break ;	59:8:1055:1060	3121273	13	True				
ANR	3121411	Statement	case	61:4:1067:1070	3121273	14	True				
ANR	3121412	Statement	FIMD_VIDTCON_START	61:9:1072:1089	3121273	15	True				
ANR	3121413	Statement	...	61:28:1091:1093	3121273	16	True				
ANR	3121414	Label	FIMD_VIDTCON_END :	61:32:1095:1111	3121273	17	True				
ANR	3121415	Identifier	FIMD_VIDTCON_END		3121273	0					
ANR	3121416	ExpressionStatement	s -> vidtcon [ ( offset - FIMD_VIDTCON_START ) >> 2 ] = val	63:8:1122:1174	3121273	18	True				
ANR	3121417	AssignmentExpression	s -> vidtcon [ ( offset - FIMD_VIDTCON_START ) >> 2 ] = val		3121273	0		=			
ANR	3121418	ArrayIndexing	s -> vidtcon [ ( offset - FIMD_VIDTCON_START ) >> 2 ]		3121273	0					
ANR	3121419	PtrMemberAccess	s -> vidtcon		3121273	0					
ANR	3121420	Identifier	s		3121273	0					
ANR	3121421	Identifier	vidtcon		3121273	1					
ANR	3121422	ShiftExpression	( offset - FIMD_VIDTCON_START ) >> 2		3121273	1		>>			
ANR	3121423	AdditiveExpression	offset - FIMD_VIDTCON_START		3121273	0		-			
ANR	3121424	Identifier	offset		3121273	0					
ANR	3121425	Identifier	FIMD_VIDTCON_START		3121273	1					
ANR	3121426	PrimaryExpression	2		3121273	1					
ANR	3121427	Identifier	val		3121273	1					
ANR	3121428	BreakStatement	break ;	65:8:1185:1190	3121273	19	True				
ANR	3121429	Statement	case	67:4:1197:1200	3121273	20	True				
ANR	3121430	Statement	FIMD_WINCON_START	67:9:1202:1218	3121273	21	True				
ANR	3121431	Statement	...	67:27:1220:1222	3121273	22	True				
ANR	3121432	Label	FIMD_WINCON_END :	67:31:1224:1239	3121273	23	True				
ANR	3121433	Identifier	FIMD_WINCON_END		3121273	0					
ANR	3121434	ExpressionStatement	w = ( offset - FIMD_WINCON_START ) >> 2	69:8:1250:1287	3121273	24	True				
ANR	3121435	AssignmentExpression	w = ( offset - FIMD_WINCON_START ) >> 2		3121273	0		=			
ANR	3121436	Identifier	w		3121273	0					
ANR	3121437	ShiftExpression	( offset - FIMD_WINCON_START ) >> 2		3121273	1		>>			
ANR	3121438	AdditiveExpression	offset - FIMD_WINCON_START		3121273	0		-			
ANR	3121439	Identifier	offset		3121273	0					
ANR	3121440	Identifier	FIMD_WINCON_START		3121273	1					
ANR	3121441	PrimaryExpression	2		3121273	1					
ANR	3121442	ExpressionStatement	i = fimd_get_buffer_id ( & s -> window [ w ] )	73:8:1340:1377	3121273	25	True				
ANR	3121443	AssignmentExpression	i = fimd_get_buffer_id ( & s -> window [ w ] )		3121273	0		=			
ANR	3121444	Identifier	i		3121273	0					
ANR	3121445	CallExpression	fimd_get_buffer_id ( & s -> window [ w ] )		3121273	1					
ANR	3121446	Callee	fimd_get_buffer_id		3121273	0					
ANR	3121447	Identifier	fimd_get_buffer_id		3121273	0					
ANR	3121448	ArgumentList	& s -> window [ w ]		3121273	1					
ANR	3121449	Argument	& s -> window [ w ]		3121273	0					
ANR	3121450	UnaryOperationExpression	& s -> window [ w ]		3121273	0					
ANR	3121451	UnaryOperator	&		3121273	0					
ANR	3121452	ArrayIndexing	s -> window [ w ]		3121273	1					
ANR	3121453	PtrMemberAccess	s -> window		3121273	0					
ANR	3121454	Identifier	s		3121273	0					
ANR	3121455	Identifier	window		3121273	1					
ANR	3121456	Identifier	w		3121273	1					
ANR	3121457	ExpressionStatement	old_value = s -> window [ w ] . wincon	75:8:1388:1419	3121273	26	True				
ANR	3121458	AssignmentExpression	old_value = s -> window [ w ] . wincon		3121273	0		=			
ANR	3121459	Identifier	old_value		3121273	0					
ANR	3121460	MemberAccess	s -> window [ w ] . wincon		3121273	1					
ANR	3121461	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121462	PtrMemberAccess	s -> window		3121273	0					
ANR	3121463	Identifier	s		3121273	0					
ANR	3121464	Identifier	window		3121273	1					
ANR	3121465	Identifier	w		3121273	1					
ANR	3121466	Identifier	wincon		3121273	1					
ANR	3121467	ExpressionStatement	val = ( val & ~FIMD_WINCON_ROMASK ) | ( s -> window [ w ] . wincon & FIMD_WINCON_ROMASK )	77:8:1430:1525	3121273	27	True				
ANR	3121468	AssignmentExpression	val = ( val & ~FIMD_WINCON_ROMASK ) | ( s -> window [ w ] . wincon & FIMD_WINCON_ROMASK )		3121273	0		=			
ANR	3121469	Identifier	val		3121273	0					
ANR	3121470	InclusiveOrExpression	( val & ~FIMD_WINCON_ROMASK ) | ( s -> window [ w ] . wincon & FIMD_WINCON_ROMASK )		3121273	1		|			
ANR	3121471	BitAndExpression	val & ~FIMD_WINCON_ROMASK		3121273	0		&			
ANR	3121472	Identifier	val		3121273	0					
ANR	3121473	Identifier	~FIMD_WINCON_ROMASK		3121273	1					
ANR	3121474	BitAndExpression	s -> window [ w ] . wincon & FIMD_WINCON_ROMASK		3121273	1		&			
ANR	3121475	MemberAccess	s -> window [ w ] . wincon		3121273	0					
ANR	3121476	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121477	PtrMemberAccess	s -> window		3121273	0					
ANR	3121478	Identifier	s		3121273	0					
ANR	3121479	Identifier	window		3121273	1					
ANR	3121480	Identifier	w		3121273	1					
ANR	3121481	Identifier	wincon		3121273	1					
ANR	3121482	Identifier	FIMD_WINCON_ROMASK		3121273	1					
ANR	3121483	IfStatement	if ( w == 0 )		3121273	28					
ANR	3121484	Condition	w == 0	81:12:1540:1545	3121273	0	True				
ANR	3121485	EqualityExpression	w == 0		3121273	0		==			
ANR	3121486	Identifier	w		3121273	0					
ANR	3121487	PrimaryExpression	0		3121273	1					
ANR	3121488	CompoundStatement		77:20:1411:1411	3121273	1					
ANR	3121489	ExpressionStatement	val &= ~FIMD_WINCON_ALPHA_MUL	85:12:1629:1658	3121273	0	True				
ANR	3121490	AssignmentExpression	val &= ~FIMD_WINCON_ALPHA_MUL		3121273	0		&=			
ANR	3121491	Identifier	val		3121273	0					
ANR	3121492	Identifier	~FIMD_WINCON_ALPHA_MUL		3121273	1					
ANR	3121493	ExpressionStatement	"exynos4210_fimd_trace_bppmode ( s , w , val )"	89:8:1680:1720	3121273	29	True				
ANR	3121494	CallExpression	"exynos4210_fimd_trace_bppmode ( s , w , val )"		3121273	0					
ANR	3121495	Callee	exynos4210_fimd_trace_bppmode		3121273	0					
ANR	3121496	Identifier	exynos4210_fimd_trace_bppmode		3121273	0					
ANR	3121497	ArgumentList	s		3121273	1					
ANR	3121498	Argument	s		3121273	0					
ANR	3121499	Identifier	s		3121273	0					
ANR	3121500	Argument	w		3121273	1					
ANR	3121501	Identifier	w		3121273	0					
ANR	3121502	Argument	val		3121273	2					
ANR	3121503	Identifier	val		3121273	0					
ANR	3121504	SwitchStatement	switch ( val & FIMD_WINCON_BUFSELECT )		3121273	30					
ANR	3121505	Condition	val & FIMD_WINCON_BUFSELECT	91:16:1739:1765	3121273	0	True				
ANR	3121506	BitAndExpression	val & FIMD_WINCON_BUFSELECT		3121273	0		&			
ANR	3121507	Identifier	val		3121273	0					
ANR	3121508	Identifier	FIMD_WINCON_BUFSELECT		3121273	1					
ANR	3121509	CompoundStatement		87:45:1631:1631	3121273	1					
ANR	3121510	Label	case FIMD_WINCON_BUF0_SEL :	93:8:1779:1804	3121273	0	True				
ANR	3121511	Identifier	FIMD_WINCON_BUF0_SEL		3121273	0					
ANR	3121512	ExpressionStatement	val &= ~FIMD_WINCON_BUFSTATUS	95:12:1819:1848	3121273	1	True				
ANR	3121513	AssignmentExpression	val &= ~FIMD_WINCON_BUFSTATUS		3121273	0		&=			
ANR	3121514	Identifier	val		3121273	0					
ANR	3121515	Identifier	~FIMD_WINCON_BUFSTATUS		3121273	1					
ANR	3121516	BreakStatement	break ;	97:12:1863:1868	3121273	2	True				
ANR	3121517	Label	case FIMD_WINCON_BUF1_SEL :	99:8:1879:1904	3121273	3	True				
ANR	3121518	Identifier	FIMD_WINCON_BUF1_SEL		3121273	0					
ANR	3121519	ExpressionStatement	val = ( val & ~FIMD_WINCON_BUFSTAT_H ) | FIMD_WINCON_BUFSTAT_L	101:12:1919:1979	3121273	4	True				
ANR	3121520	AssignmentExpression	val = ( val & ~FIMD_WINCON_BUFSTAT_H ) | FIMD_WINCON_BUFSTAT_L		3121273	0		=			
ANR	3121521	Identifier	val		3121273	0					
ANR	3121522	InclusiveOrExpression	( val & ~FIMD_WINCON_BUFSTAT_H ) | FIMD_WINCON_BUFSTAT_L		3121273	1		|			
ANR	3121523	BitAndExpression	val & ~FIMD_WINCON_BUFSTAT_H		3121273	0		&			
ANR	3121524	Identifier	val		3121273	0					
ANR	3121525	Identifier	~FIMD_WINCON_BUFSTAT_H		3121273	1					
ANR	3121526	Identifier	FIMD_WINCON_BUFSTAT_L		3121273	1					
ANR	3121527	BreakStatement	break ;	103:12:1994:1999	3121273	5	True				
ANR	3121528	Label	case FIMD_WINCON_BUF2_SEL :	105:8:2010:2035	3121273	6	True				
ANR	3121529	Identifier	FIMD_WINCON_BUF2_SEL		3121273	0					
ANR	3121530	IfStatement	if ( val & FIMD_WINCON_BUFMODE )		3121273	7					
ANR	3121531	Condition	val & FIMD_WINCON_BUFMODE	107:16:2054:2078	3121273	0	True				
ANR	3121532	BitAndExpression	val & FIMD_WINCON_BUFMODE		3121273	0		&			
ANR	3121533	Identifier	val		3121273	0					
ANR	3121534	Identifier	FIMD_WINCON_BUFMODE		3121273	1					
ANR	3121535	CompoundStatement		103:43:1944:1944	3121273	1					
ANR	3121536	ExpressionStatement	val = ( val & ~FIMD_WINCON_BUFSTAT_L ) | FIMD_WINCON_BUFSTAT_H	109:16:2100:2160	3121273	0	True				
ANR	3121537	AssignmentExpression	val = ( val & ~FIMD_WINCON_BUFSTAT_L ) | FIMD_WINCON_BUFSTAT_H		3121273	0		=			
ANR	3121538	Identifier	val		3121273	0					
ANR	3121539	InclusiveOrExpression	( val & ~FIMD_WINCON_BUFSTAT_L ) | FIMD_WINCON_BUFSTAT_H		3121273	1		|			
ANR	3121540	BitAndExpression	val & ~FIMD_WINCON_BUFSTAT_L		3121273	0		&			
ANR	3121541	Identifier	val		3121273	0					
ANR	3121542	Identifier	~FIMD_WINCON_BUFSTAT_L		3121273	1					
ANR	3121543	Identifier	FIMD_WINCON_BUFSTAT_H		3121273	1					
ANR	3121544	BreakStatement	break ;	113:12:2190:2195	3121273	8	True				
ANR	3121545	Label	default :	115:8:2206:2213	3121273	9	True				
ANR	3121546	Identifier	default		3121273	0					
ANR	3121547	BreakStatement	break ;	117:12:2228:2233	3121273	10	True				
ANR	3121548	ExpressionStatement	s -> window [ w ] . wincon = val	121:8:2255:2280	3121273	31	True				
ANR	3121549	AssignmentExpression	s -> window [ w ] . wincon = val		3121273	0		=			
ANR	3121550	MemberAccess	s -> window [ w ] . wincon		3121273	0					
ANR	3121551	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121552	PtrMemberAccess	s -> window		3121273	0					
ANR	3121553	Identifier	s		3121273	0					
ANR	3121554	Identifier	window		3121273	1					
ANR	3121555	Identifier	w		3121273	1					
ANR	3121556	Identifier	wincon		3121273	1					
ANR	3121557	Identifier	val		3121273	1					
ANR	3121558	ExpressionStatement	"exynos4210_fimd_update_win_bppmode ( s , w )"	123:8:2291:2331	3121273	32	True				
ANR	3121559	CallExpression	"exynos4210_fimd_update_win_bppmode ( s , w )"		3121273	0					
ANR	3121560	Callee	exynos4210_fimd_update_win_bppmode		3121273	0					
ANR	3121561	Identifier	exynos4210_fimd_update_win_bppmode		3121273	0					
ANR	3121562	ArgumentList	s		3121273	1					
ANR	3121563	Argument	s		3121273	0					
ANR	3121564	Identifier	s		3121273	0					
ANR	3121565	Argument	w		3121273	1					
ANR	3121566	Identifier	w		3121273	0					
ANR	3121567	ExpressionStatement	"fimd_update_get_alpha ( s , w )"	125:8:2342:2369	3121273	33	True				
ANR	3121568	CallExpression	"fimd_update_get_alpha ( s , w )"		3121273	0					
ANR	3121569	Callee	fimd_update_get_alpha		3121273	0					
ANR	3121570	Identifier	fimd_update_get_alpha		3121273	0					
ANR	3121571	ArgumentList	s		3121273	1					
ANR	3121572	Argument	s		3121273	0					
ANR	3121573	Identifier	s		3121273	0					
ANR	3121574	Argument	w		3121273	1					
ANR	3121575	Identifier	w		3121273	0					
ANR	3121576	IfStatement	if ( ( i != fimd_get_buffer_id ( & s -> window [ w ] ) ) || ( ! ( old_value & FIMD_WINCON_ENWIN ) && ( s -> window [ w ] . wincon & FIMD_WINCON_ENWIN ) ) )		3121273	34					
ANR	3121577	Condition	( i != fimd_get_buffer_id ( & s -> window [ w ] ) ) || ( ! ( old_value & FIMD_WINCON_ENWIN ) && ( s -> window [ w ] . wincon & FIMD_WINCON_ENWIN ) )	127:12:2384:2548	3121273	0	True				
ANR	3121578	OrExpression	( i != fimd_get_buffer_id ( & s -> window [ w ] ) ) || ( ! ( old_value & FIMD_WINCON_ENWIN ) && ( s -> window [ w ] . wincon & FIMD_WINCON_ENWIN ) )		3121273	0		||			
ANR	3121579	EqualityExpression	i != fimd_get_buffer_id ( & s -> window [ w ] )		3121273	0		!=			
ANR	3121580	Identifier	i		3121273	0					
ANR	3121581	CallExpression	fimd_get_buffer_id ( & s -> window [ w ] )		3121273	1					
ANR	3121582	Callee	fimd_get_buffer_id		3121273	0					
ANR	3121583	Identifier	fimd_get_buffer_id		3121273	0					
ANR	3121584	ArgumentList	& s -> window [ w ]		3121273	1					
ANR	3121585	Argument	& s -> window [ w ]		3121273	0					
ANR	3121586	UnaryOperationExpression	& s -> window [ w ]		3121273	0					
ANR	3121587	UnaryOperator	&		3121273	0					
ANR	3121588	ArrayIndexing	s -> window [ w ]		3121273	1					
ANR	3121589	PtrMemberAccess	s -> window		3121273	0					
ANR	3121590	Identifier	s		3121273	0					
ANR	3121591	Identifier	window		3121273	1					
ANR	3121592	Identifier	w		3121273	1					
ANR	3121593	AndExpression	! ( old_value & FIMD_WINCON_ENWIN ) && ( s -> window [ w ] . wincon & FIMD_WINCON_ENWIN )		3121273	1		&&			
ANR	3121594	UnaryOperationExpression	! ( old_value & FIMD_WINCON_ENWIN )		3121273	0					
ANR	3121595	UnaryOperator	!		3121273	0					
ANR	3121596	BitAndExpression	old_value & FIMD_WINCON_ENWIN		3121273	1		&			
ANR	3121597	Identifier	old_value		3121273	0					
ANR	3121598	Identifier	FIMD_WINCON_ENWIN		3121273	1					
ANR	3121599	BitAndExpression	s -> window [ w ] . wincon & FIMD_WINCON_ENWIN		3121273	1		&			
ANR	3121600	MemberAccess	s -> window [ w ] . wincon		3121273	0					
ANR	3121601	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121602	PtrMemberAccess	s -> window		3121273	0					
ANR	3121603	Identifier	s		3121273	0					
ANR	3121604	Identifier	window		3121273	1					
ANR	3121605	Identifier	w		3121273	1					
ANR	3121606	Identifier	wincon		3121273	1					
ANR	3121607	Identifier	FIMD_WINCON_ENWIN		3121273	1					
ANR	3121608	CompoundStatement		127:45:2414:2414	3121273	1					
ANR	3121609	ExpressionStatement	"fimd_update_memory_section ( s , w )"	133:12:2566:2598	3121273	0	True				
ANR	3121610	CallExpression	"fimd_update_memory_section ( s , w )"		3121273	0					
ANR	3121611	Callee	fimd_update_memory_section		3121273	0					
ANR	3121612	Identifier	fimd_update_memory_section		3121273	0					
ANR	3121613	ArgumentList	s		3121273	1					
ANR	3121614	Argument	s		3121273	0					
ANR	3121615	Identifier	s		3121273	0					
ANR	3121616	Argument	w		3121273	1					
ANR	3121617	Identifier	w		3121273	0					
ANR	3121618	BreakStatement	break ;	137:8:2620:2625	3121273	35	True				
ANR	3121619	Label	case FIMD_SHADOWCON :	139:4:2632:2651	3121273	36	True				
ANR	3121620	Identifier	FIMD_SHADOWCON		3121273	0					
ANR	3121621	ExpressionStatement	old_value = s -> shadowcon	141:8:2662:2686	3121273	37	True				
ANR	3121622	AssignmentExpression	old_value = s -> shadowcon		3121273	0		=			
ANR	3121623	Identifier	old_value		3121273	0					
ANR	3121624	PtrMemberAccess	s -> shadowcon		3121273	1					
ANR	3121625	Identifier	s		3121273	0					
ANR	3121626	Identifier	shadowcon		3121273	1					
ANR	3121627	ExpressionStatement	s -> shadowcon = val	143:8:2697:2715	3121273	38	True				
ANR	3121628	AssignmentExpression	s -> shadowcon = val		3121273	0		=			
ANR	3121629	PtrMemberAccess	s -> shadowcon		3121273	0					
ANR	3121630	Identifier	s		3121273	0					
ANR	3121631	Identifier	shadowcon		3121273	1					
ANR	3121632	Identifier	val		3121273	1					
ANR	3121633	ForStatement	for ( w = 0 ; w < NUM_OF_WINDOWS ; w ++ )		3121273	39					
ANR	3121634	ForInit	w = 0 ;	145:13:2731:2736	3121273	0	True				
ANR	3121635	AssignmentExpression	w = 0		3121273	0		=			
ANR	3121636	Identifier	w		3121273	0					
ANR	3121637	PrimaryExpression	0		3121273	1					
ANR	3121638	Condition	w < NUM_OF_WINDOWS	145:20:2738:2755	3121273	1	True				
ANR	3121639	RelationalExpression	w < NUM_OF_WINDOWS		3121273	0		<			
ANR	3121640	Identifier	w		3121273	0					
ANR	3121641	Identifier	NUM_OF_WINDOWS		3121273	1					
ANR	3121642	PostIncDecOperationExpression	w ++	145:40:2758:2760	3121273	2	True				
ANR	3121643	Identifier	w		3121273	0					
ANR	3121644	IncDec	++		3121273	1					
ANR	3121645	CompoundStatement		141:45:2626:2626	3121273	3					
ANR	3121646	IfStatement	"if ( FIMD_WINDOW_PROTECTED ( old_value , w ) && ! FIMD_WINDOW_PROTECTED ( s -> shadowcon , w ) )"		3121273	0					
ANR	3121647	Condition	"FIMD_WINDOW_PROTECTED ( old_value , w ) && ! FIMD_WINDOW_PROTECTED ( s -> shadowcon , w )"	147:16:2782:2880	3121273	0	True				
ANR	3121648	AndExpression	"FIMD_WINDOW_PROTECTED ( old_value , w ) && ! FIMD_WINDOW_PROTECTED ( s -> shadowcon , w )"		3121273	0		&&			
ANR	3121649	CallExpression	"FIMD_WINDOW_PROTECTED ( old_value , w )"		3121273	0					
ANR	3121650	Callee	FIMD_WINDOW_PROTECTED		3121273	0					
ANR	3121651	Identifier	FIMD_WINDOW_PROTECTED		3121273	0					
ANR	3121652	ArgumentList	old_value		3121273	1					
ANR	3121653	Argument	old_value		3121273	0					
ANR	3121654	Identifier	old_value		3121273	0					
ANR	3121655	Argument	w		3121273	1					
ANR	3121656	Identifier	w		3121273	0					
ANR	3121657	UnaryOperationExpression	"! FIMD_WINDOW_PROTECTED ( s -> shadowcon , w )"		3121273	1					
ANR	3121658	UnaryOperator	!		3121273	0					
ANR	3121659	CallExpression	"FIMD_WINDOW_PROTECTED ( s -> shadowcon , w )"		3121273	1					
ANR	3121660	Callee	FIMD_WINDOW_PROTECTED		3121273	0					
ANR	3121661	Identifier	FIMD_WINDOW_PROTECTED		3121273	0					
ANR	3121662	ArgumentList	s -> shadowcon		3121273	1					
ANR	3121663	Argument	s -> shadowcon		3121273	0					
ANR	3121664	PtrMemberAccess	s -> shadowcon		3121273	0					
ANR	3121665	Identifier	s		3121273	0					
ANR	3121666	Identifier	shadowcon		3121273	1					
ANR	3121667	Argument	w		3121273	1					
ANR	3121668	Identifier	w		3121273	0					
ANR	3121669	CompoundStatement		145:61:2746:2746	3121273	1					
ANR	3121670	ExpressionStatement	"fimd_update_memory_section ( s , w )"	151:16:2902:2934	3121273	0	True				
ANR	3121671	CallExpression	"fimd_update_memory_section ( s , w )"		3121273	0					
ANR	3121672	Callee	fimd_update_memory_section		3121273	0					
ANR	3121673	Identifier	fimd_update_memory_section		3121273	0					
ANR	3121674	ArgumentList	s		3121273	1					
ANR	3121675	Argument	s		3121273	0					
ANR	3121676	Identifier	s		3121273	0					
ANR	3121677	Argument	w		3121273	1					
ANR	3121678	Identifier	w		3121273	0					
ANR	3121679	BreakStatement	break ;	157:8:2971:2976	3121273	40	True				
ANR	3121680	Label	case FIMD_WINCHMAP :	159:4:2983:3001	3121273	41	True				
ANR	3121681	Identifier	FIMD_WINCHMAP		3121273	0					
ANR	3121682	ExpressionStatement	s -> winchmap = val	161:8:3012:3029	3121273	42	True				
ANR	3121683	AssignmentExpression	s -> winchmap = val		3121273	0		=			
ANR	3121684	PtrMemberAccess	s -> winchmap		3121273	0					
ANR	3121685	Identifier	s		3121273	0					
ANR	3121686	Identifier	winchmap		3121273	1					
ANR	3121687	Identifier	val		3121273	1					
ANR	3121688	BreakStatement	break ;	163:8:3040:3045	3121273	43	True				
ANR	3121689	Statement	case	165:4:3052:3055	3121273	44	True				
ANR	3121690	Statement	FIMD_VIDOSD_START	165:9:3057:3073	3121273	45	True				
ANR	3121691	Statement	...	165:27:3075:3077	3121273	46	True				
ANR	3121692	Label	FIMD_VIDOSD_END :	165:31:3079:3094	3121273	47	True				
ANR	3121693	Identifier	FIMD_VIDOSD_END		3121273	0					
ANR	3121694	ExpressionStatement	w = ( offset - FIMD_VIDOSD_START ) >> 4	167:8:3105:3142	3121273	48	True				
ANR	3121695	AssignmentExpression	w = ( offset - FIMD_VIDOSD_START ) >> 4		3121273	0		=			
ANR	3121696	Identifier	w		3121273	0					
ANR	3121697	ShiftExpression	( offset - FIMD_VIDOSD_START ) >> 4		3121273	1		>>			
ANR	3121698	AdditiveExpression	offset - FIMD_VIDOSD_START		3121273	0		-			
ANR	3121699	Identifier	offset		3121273	0					
ANR	3121700	Identifier	FIMD_VIDOSD_START		3121273	1					
ANR	3121701	PrimaryExpression	4		3121273	1					
ANR	3121702	ExpressionStatement	i = ( ( offset - FIMD_VIDOSD_START ) & 0xF ) >> 2	169:8:3153:3198	3121273	49	True				
ANR	3121703	AssignmentExpression	i = ( ( offset - FIMD_VIDOSD_START ) & 0xF ) >> 2		3121273	0		=			
ANR	3121704	Identifier	i		3121273	0					
ANR	3121705	ShiftExpression	( ( offset - FIMD_VIDOSD_START ) & 0xF ) >> 2		3121273	1		>>			
ANR	3121706	BitAndExpression	( offset - FIMD_VIDOSD_START ) & 0xF		3121273	0		&			
ANR	3121707	AdditiveExpression	offset - FIMD_VIDOSD_START		3121273	0		-			
ANR	3121708	Identifier	offset		3121273	0					
ANR	3121709	Identifier	FIMD_VIDOSD_START		3121273	1					
ANR	3121710	PrimaryExpression	0xF		3121273	1					
ANR	3121711	PrimaryExpression	2		3121273	1					
ANR	3121712	SwitchStatement	switch ( i )		3121273	50					
ANR	3121713	Condition	i	171:16:3217:3217	3121273	0	True				
ANR	3121714	Identifier	i		3121273	0					
ANR	3121715	CompoundStatement		167:19:3083:3083	3121273	1					
ANR	3121716	Label	case 0 :	173:8:3231:3237	3121273	0	True				
ANR	3121717	ExpressionStatement	old_value = s -> window [ w ] . lefttop_y	175:12:3252:3286	3121273	1	True				
ANR	3121718	AssignmentExpression	old_value = s -> window [ w ] . lefttop_y		3121273	0		=			
ANR	3121719	Identifier	old_value		3121273	0					
ANR	3121720	MemberAccess	s -> window [ w ] . lefttop_y		3121273	1					
ANR	3121721	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121722	PtrMemberAccess	s -> window		3121273	0					
ANR	3121723	Identifier	s		3121273	0					
ANR	3121724	Identifier	window		3121273	1					
ANR	3121725	Identifier	w		3121273	1					
ANR	3121726	Identifier	lefttop_y		3121273	1					
ANR	3121727	ExpressionStatement	s -> window [ w ] . lefttop_x = ( val >> FIMD_VIDOSD_HOR_SHIFT ) & FIMD_VIDOSD_COORD_MASK	177:12:3301:3420	3121273	2	True				
ANR	3121728	AssignmentExpression	s -> window [ w ] . lefttop_x = ( val >> FIMD_VIDOSD_HOR_SHIFT ) & FIMD_VIDOSD_COORD_MASK		3121273	0		=			
ANR	3121729	MemberAccess	s -> window [ w ] . lefttop_x		3121273	0					
ANR	3121730	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121731	PtrMemberAccess	s -> window		3121273	0					
ANR	3121732	Identifier	s		3121273	0					
ANR	3121733	Identifier	window		3121273	1					
ANR	3121734	Identifier	w		3121273	1					
ANR	3121735	Identifier	lefttop_x		3121273	1					
ANR	3121736	BitAndExpression	( val >> FIMD_VIDOSD_HOR_SHIFT ) & FIMD_VIDOSD_COORD_MASK		3121273	1		&			
ANR	3121737	ShiftExpression	val >> FIMD_VIDOSD_HOR_SHIFT		3121273	0		>>			
ANR	3121738	Identifier	val		3121273	0					
ANR	3121739	Identifier	FIMD_VIDOSD_HOR_SHIFT		3121273	1					
ANR	3121740	Identifier	FIMD_VIDOSD_COORD_MASK		3121273	1					
ANR	3121741	ExpressionStatement	s -> window [ w ] . lefttop_y = ( val >> FIMD_VIDOSD_VER_SHIFT ) & FIMD_VIDOSD_COORD_MASK	181:12:3435:3554	3121273	3	True				
ANR	3121742	AssignmentExpression	s -> window [ w ] . lefttop_y = ( val >> FIMD_VIDOSD_VER_SHIFT ) & FIMD_VIDOSD_COORD_MASK		3121273	0		=			
ANR	3121743	MemberAccess	s -> window [ w ] . lefttop_y		3121273	0					
ANR	3121744	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121745	PtrMemberAccess	s -> window		3121273	0					
ANR	3121746	Identifier	s		3121273	0					
ANR	3121747	Identifier	window		3121273	1					
ANR	3121748	Identifier	w		3121273	1					
ANR	3121749	Identifier	lefttop_y		3121273	1					
ANR	3121750	BitAndExpression	( val >> FIMD_VIDOSD_VER_SHIFT ) & FIMD_VIDOSD_COORD_MASK		3121273	1		&			
ANR	3121751	ShiftExpression	val >> FIMD_VIDOSD_VER_SHIFT		3121273	0		>>			
ANR	3121752	Identifier	val		3121273	0					
ANR	3121753	Identifier	FIMD_VIDOSD_VER_SHIFT		3121273	1					
ANR	3121754	Identifier	FIMD_VIDOSD_COORD_MASK		3121273	1					
ANR	3121755	IfStatement	if ( s -> window [ w ] . lefttop_y != old_value )		3121273	4					
ANR	3121756	Condition	s -> window [ w ] . lefttop_y != old_value	185:16:3573:3607	3121273	0	True				
ANR	3121757	EqualityExpression	s -> window [ w ] . lefttop_y != old_value		3121273	0		!=			
ANR	3121758	MemberAccess	s -> window [ w ] . lefttop_y		3121273	0					
ANR	3121759	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121760	PtrMemberAccess	s -> window		3121273	0					
ANR	3121761	Identifier	s		3121273	0					
ANR	3121762	Identifier	window		3121273	1					
ANR	3121763	Identifier	w		3121273	1					
ANR	3121764	Identifier	lefttop_y		3121273	1					
ANR	3121765	Identifier	old_value		3121273	1					
ANR	3121766	CompoundStatement		181:53:3473:3473	3121273	1					
ANR	3121767	ExpressionStatement	"fimd_update_memory_section ( s , w )"	187:16:3629:3661	3121273	0	True				
ANR	3121768	CallExpression	"fimd_update_memory_section ( s , w )"		3121273	0					
ANR	3121769	Callee	fimd_update_memory_section		3121273	0					
ANR	3121770	Identifier	fimd_update_memory_section		3121273	0					
ANR	3121771	ArgumentList	s		3121273	1					
ANR	3121772	Argument	s		3121273	0					
ANR	3121773	Identifier	s		3121273	0					
ANR	3121774	Argument	w		3121273	1					
ANR	3121775	Identifier	w		3121273	0					
ANR	3121776	BreakStatement	break ;	191:12:3691:3696	3121273	5	True				
ANR	3121777	Label	case 1 :	193:8:3707:3713	3121273	6	True				
ANR	3121778	ExpressionStatement	old_value = s -> window [ w ] . rightbot_y	195:12:3728:3763	3121273	7	True				
ANR	3121779	AssignmentExpression	old_value = s -> window [ w ] . rightbot_y		3121273	0		=			
ANR	3121780	Identifier	old_value		3121273	0					
ANR	3121781	MemberAccess	s -> window [ w ] . rightbot_y		3121273	1					
ANR	3121782	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121783	PtrMemberAccess	s -> window		3121273	0					
ANR	3121784	Identifier	s		3121273	0					
ANR	3121785	Identifier	window		3121273	1					
ANR	3121786	Identifier	w		3121273	1					
ANR	3121787	Identifier	rightbot_y		3121273	1					
ANR	3121788	ExpressionStatement	s -> window [ w ] . rightbot_x = ( val >> FIMD_VIDOSD_HOR_SHIFT ) & FIMD_VIDOSD_COORD_MASK	197:12:3778:3899	3121273	8	True				
ANR	3121789	AssignmentExpression	s -> window [ w ] . rightbot_x = ( val >> FIMD_VIDOSD_HOR_SHIFT ) & FIMD_VIDOSD_COORD_MASK		3121273	0		=			
ANR	3121790	MemberAccess	s -> window [ w ] . rightbot_x		3121273	0					
ANR	3121791	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121792	PtrMemberAccess	s -> window		3121273	0					
ANR	3121793	Identifier	s		3121273	0					
ANR	3121794	Identifier	window		3121273	1					
ANR	3121795	Identifier	w		3121273	1					
ANR	3121796	Identifier	rightbot_x		3121273	1					
ANR	3121797	BitAndExpression	( val >> FIMD_VIDOSD_HOR_SHIFT ) & FIMD_VIDOSD_COORD_MASK		3121273	1		&			
ANR	3121798	ShiftExpression	val >> FIMD_VIDOSD_HOR_SHIFT		3121273	0		>>			
ANR	3121799	Identifier	val		3121273	0					
ANR	3121800	Identifier	FIMD_VIDOSD_HOR_SHIFT		3121273	1					
ANR	3121801	Identifier	FIMD_VIDOSD_COORD_MASK		3121273	1					
ANR	3121802	ExpressionStatement	s -> window [ w ] . rightbot_y = ( val >> FIMD_VIDOSD_VER_SHIFT ) & FIMD_VIDOSD_COORD_MASK	201:12:3914:4035	3121273	9	True				
ANR	3121803	AssignmentExpression	s -> window [ w ] . rightbot_y = ( val >> FIMD_VIDOSD_VER_SHIFT ) & FIMD_VIDOSD_COORD_MASK		3121273	0		=			
ANR	3121804	MemberAccess	s -> window [ w ] . rightbot_y		3121273	0					
ANR	3121805	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121806	PtrMemberAccess	s -> window		3121273	0					
ANR	3121807	Identifier	s		3121273	0					
ANR	3121808	Identifier	window		3121273	1					
ANR	3121809	Identifier	w		3121273	1					
ANR	3121810	Identifier	rightbot_y		3121273	1					
ANR	3121811	BitAndExpression	( val >> FIMD_VIDOSD_VER_SHIFT ) & FIMD_VIDOSD_COORD_MASK		3121273	1		&			
ANR	3121812	ShiftExpression	val >> FIMD_VIDOSD_VER_SHIFT		3121273	0		>>			
ANR	3121813	Identifier	val		3121273	0					
ANR	3121814	Identifier	FIMD_VIDOSD_VER_SHIFT		3121273	1					
ANR	3121815	Identifier	FIMD_VIDOSD_COORD_MASK		3121273	1					
ANR	3121816	IfStatement	if ( s -> window [ w ] . rightbot_y != old_value )		3121273	10					
ANR	3121817	Condition	s -> window [ w ] . rightbot_y != old_value	205:16:4054:4089	3121273	0	True				
ANR	3121818	EqualityExpression	s -> window [ w ] . rightbot_y != old_value		3121273	0		!=			
ANR	3121819	MemberAccess	s -> window [ w ] . rightbot_y		3121273	0					
ANR	3121820	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121821	PtrMemberAccess	s -> window		3121273	0					
ANR	3121822	Identifier	s		3121273	0					
ANR	3121823	Identifier	window		3121273	1					
ANR	3121824	Identifier	w		3121273	1					
ANR	3121825	Identifier	rightbot_y		3121273	1					
ANR	3121826	Identifier	old_value		3121273	1					
ANR	3121827	CompoundStatement		201:54:3955:3955	3121273	1					
ANR	3121828	ExpressionStatement	"fimd_update_memory_section ( s , w )"	207:16:4111:4143	3121273	0	True				
ANR	3121829	CallExpression	"fimd_update_memory_section ( s , w )"		3121273	0					
ANR	3121830	Callee	fimd_update_memory_section		3121273	0					
ANR	3121831	Identifier	fimd_update_memory_section		3121273	0					
ANR	3121832	ArgumentList	s		3121273	1					
ANR	3121833	Argument	s		3121273	0					
ANR	3121834	Identifier	s		3121273	0					
ANR	3121835	Argument	w		3121273	1					
ANR	3121836	Identifier	w		3121273	0					
ANR	3121837	BreakStatement	break ;	211:12:4173:4178	3121273	11	True				
ANR	3121838	Label	case 2 :	213:8:4189:4195	3121273	12	True				
ANR	3121839	IfStatement	if ( w == 0 )		3121273	13					
ANR	3121840	Condition	w == 0	215:16:4214:4219	3121273	0	True				
ANR	3121841	EqualityExpression	w == 0		3121273	0		==			
ANR	3121842	Identifier	w		3121273	0					
ANR	3121843	PrimaryExpression	0		3121273	1					
ANR	3121844	CompoundStatement		211:24:4085:4085	3121273	1					
ANR	3121845	ExpressionStatement	s -> window [ w ] . osdsize = val	217:16:4241:4267	3121273	0	True				
ANR	3121846	AssignmentExpression	s -> window [ w ] . osdsize = val		3121273	0		=			
ANR	3121847	MemberAccess	s -> window [ w ] . osdsize		3121273	0					
ANR	3121848	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121849	PtrMemberAccess	s -> window		3121273	0					
ANR	3121850	Identifier	s		3121273	0					
ANR	3121851	Identifier	window		3121273	1					
ANR	3121852	Identifier	w		3121273	1					
ANR	3121853	Identifier	osdsize		3121273	1					
ANR	3121854	Identifier	val		3121273	1					
ANR	3121855	ElseStatement	else		3121273	0					
ANR	3121856	CompoundStatement		215:19:4152:4152	3121273	0					
ANR	3121857	ExpressionStatement	s -> window [ w ] . alpha_val [ 0 ] = unpack_upper_4 ( ( val & FIMD_VIDOSD_ALPHA_AEN0 ) >> FIMD_VIDOSD_AEN0_SHIFT ) | ( s -> window [ w ] . alpha_val [ 0 ] & FIMD_VIDALPHA_ALPHA_LOWER )	221:16:4308:4529	3121273	0	True				
ANR	3121858	AssignmentExpression	s -> window [ w ] . alpha_val [ 0 ] = unpack_upper_4 ( ( val & FIMD_VIDOSD_ALPHA_AEN0 ) >> FIMD_VIDOSD_AEN0_SHIFT ) | ( s -> window [ w ] . alpha_val [ 0 ] & FIMD_VIDALPHA_ALPHA_LOWER )		3121273	0		=			
ANR	3121859	ArrayIndexing	s -> window [ w ] . alpha_val [ 0 ]		3121273	0					
ANR	3121860	MemberAccess	s -> window [ w ] . alpha_val		3121273	0					
ANR	3121861	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121862	PtrMemberAccess	s -> window		3121273	0					
ANR	3121863	Identifier	s		3121273	0					
ANR	3121864	Identifier	window		3121273	1					
ANR	3121865	Identifier	w		3121273	1					
ANR	3121866	Identifier	alpha_val		3121273	1					
ANR	3121867	PrimaryExpression	0		3121273	1					
ANR	3121868	InclusiveOrExpression	unpack_upper_4 ( ( val & FIMD_VIDOSD_ALPHA_AEN0 ) >> FIMD_VIDOSD_AEN0_SHIFT ) | ( s -> window [ w ] . alpha_val [ 0 ] & FIMD_VIDALPHA_ALPHA_LOWER )		3121273	1		|			
ANR	3121869	CallExpression	unpack_upper_4 ( ( val & FIMD_VIDOSD_ALPHA_AEN0 ) >> FIMD_VIDOSD_AEN0_SHIFT )		3121273	0					
ANR	3121870	Callee	unpack_upper_4		3121273	0					
ANR	3121871	Identifier	unpack_upper_4		3121273	0					
ANR	3121872	ArgumentList	( val & FIMD_VIDOSD_ALPHA_AEN0 ) >> FIMD_VIDOSD_AEN0_SHIFT		3121273	1					
ANR	3121873	Argument	( val & FIMD_VIDOSD_ALPHA_AEN0 ) >> FIMD_VIDOSD_AEN0_SHIFT		3121273	0					
ANR	3121874	ShiftExpression	( val & FIMD_VIDOSD_ALPHA_AEN0 ) >> FIMD_VIDOSD_AEN0_SHIFT		3121273	0		>>			
ANR	3121875	BitAndExpression	val & FIMD_VIDOSD_ALPHA_AEN0		3121273	0		&			
ANR	3121876	Identifier	val		3121273	0					
ANR	3121877	Identifier	FIMD_VIDOSD_ALPHA_AEN0		3121273	1					
ANR	3121878	Identifier	FIMD_VIDOSD_AEN0_SHIFT		3121273	1					
ANR	3121879	BitAndExpression	s -> window [ w ] . alpha_val [ 0 ] & FIMD_VIDALPHA_ALPHA_LOWER		3121273	1		&			
ANR	3121880	ArrayIndexing	s -> window [ w ] . alpha_val [ 0 ]		3121273	0					
ANR	3121881	MemberAccess	s -> window [ w ] . alpha_val		3121273	0					
ANR	3121882	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121883	PtrMemberAccess	s -> window		3121273	0					
ANR	3121884	Identifier	s		3121273	0					
ANR	3121885	Identifier	window		3121273	1					
ANR	3121886	Identifier	w		3121273	1					
ANR	3121887	Identifier	alpha_val		3121273	1					
ANR	3121888	PrimaryExpression	0		3121273	1					
ANR	3121889	Identifier	FIMD_VIDALPHA_ALPHA_LOWER		3121273	1					
ANR	3121890	ExpressionStatement	s -> window [ w ] . alpha_val [ 1 ] = unpack_upper_4 ( val & FIMD_VIDOSD_ALPHA_AEN1 ) | ( s -> window [ w ] . alpha_val [ 1 ] & FIMD_VIDALPHA_ALPHA_LOWER )	229:16:4548:4720	3121273	1	True				
ANR	3121891	AssignmentExpression	s -> window [ w ] . alpha_val [ 1 ] = unpack_upper_4 ( val & FIMD_VIDOSD_ALPHA_AEN1 ) | ( s -> window [ w ] . alpha_val [ 1 ] & FIMD_VIDALPHA_ALPHA_LOWER )		3121273	0		=			
ANR	3121892	ArrayIndexing	s -> window [ w ] . alpha_val [ 1 ]		3121273	0					
ANR	3121893	MemberAccess	s -> window [ w ] . alpha_val		3121273	0					
ANR	3121894	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121895	PtrMemberAccess	s -> window		3121273	0					
ANR	3121896	Identifier	s		3121273	0					
ANR	3121897	Identifier	window		3121273	1					
ANR	3121898	Identifier	w		3121273	1					
ANR	3121899	Identifier	alpha_val		3121273	1					
ANR	3121900	PrimaryExpression	1		3121273	1					
ANR	3121901	InclusiveOrExpression	unpack_upper_4 ( val & FIMD_VIDOSD_ALPHA_AEN1 ) | ( s -> window [ w ] . alpha_val [ 1 ] & FIMD_VIDALPHA_ALPHA_LOWER )		3121273	1		|			
ANR	3121902	CallExpression	unpack_upper_4 ( val & FIMD_VIDOSD_ALPHA_AEN1 )		3121273	0					
ANR	3121903	Callee	unpack_upper_4		3121273	0					
ANR	3121904	Identifier	unpack_upper_4		3121273	0					
ANR	3121905	ArgumentList	val & FIMD_VIDOSD_ALPHA_AEN1		3121273	1					
ANR	3121906	Argument	val & FIMD_VIDOSD_ALPHA_AEN1		3121273	0					
ANR	3121907	BitAndExpression	val & FIMD_VIDOSD_ALPHA_AEN1		3121273	0		&			
ANR	3121908	Identifier	val		3121273	0					
ANR	3121909	Identifier	FIMD_VIDOSD_ALPHA_AEN1		3121273	1					
ANR	3121910	BitAndExpression	s -> window [ w ] . alpha_val [ 1 ] & FIMD_VIDALPHA_ALPHA_LOWER		3121273	1		&			
ANR	3121911	ArrayIndexing	s -> window [ w ] . alpha_val [ 1 ]		3121273	0					
ANR	3121912	MemberAccess	s -> window [ w ] . alpha_val		3121273	0					
ANR	3121913	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121914	PtrMemberAccess	s -> window		3121273	0					
ANR	3121915	Identifier	s		3121273	0					
ANR	3121916	Identifier	window		3121273	1					
ANR	3121917	Identifier	w		3121273	1					
ANR	3121918	Identifier	alpha_val		3121273	1					
ANR	3121919	PrimaryExpression	1		3121273	1					
ANR	3121920	Identifier	FIMD_VIDALPHA_ALPHA_LOWER		3121273	1					
ANR	3121921	BreakStatement	break ;	237:12:4750:4755	3121273	14	True				
ANR	3121922	Label	case 3 :	239:8:4766:4772	3121273	15	True				
ANR	3121923	IfStatement	if ( w != 1 && w != 2 )		3121273	16					
ANR	3121924	Condition	w != 1 && w != 2	241:16:4791:4806	3121273	0	True				
ANR	3121925	AndExpression	w != 1 && w != 2		3121273	0		&&			
ANR	3121926	EqualityExpression	w != 1		3121273	0		!=			
ANR	3121927	Identifier	w		3121273	0					
ANR	3121928	PrimaryExpression	1		3121273	1					
ANR	3121929	EqualityExpression	w != 2		3121273	1		!=			
ANR	3121930	Identifier	w		3121273	0					
ANR	3121931	PrimaryExpression	2		3121273	1					
ANR	3121932	CompoundStatement		237:34:4672:4672	3121273	1					
ANR	3121933	ExpressionStatement	"DPRINT_ERROR ( ""Bad write offset 0x%08x\\n"" , offset )"	243:16:4828:4877	3121273	0	True				
ANR	3121934	CallExpression	"DPRINT_ERROR ( ""Bad write offset 0x%08x\\n"" , offset )"		3121273	0					
ANR	3121935	Callee	DPRINT_ERROR		3121273	0					
ANR	3121936	Identifier	DPRINT_ERROR		3121273	0					
ANR	3121937	ArgumentList	"""Bad write offset 0x%08x\\n"""		3121273	1					
ANR	3121938	Argument	"""Bad write offset 0x%08x\\n"""		3121273	0					
ANR	3121939	PrimaryExpression	"""Bad write offset 0x%08x\\n"""		3121273	0					
ANR	3121940	Argument	offset		3121273	1					
ANR	3121941	Identifier	offset		3121273	0					
ANR	3121942	ReturnStatement	return ;	245:16:4896:4902	3121273	1	True				
ANR	3121943	ExpressionStatement	s -> window [ w ] . osdsize = val	249:12:4932:4958	3121273	17	True				
ANR	3121944	AssignmentExpression	s -> window [ w ] . osdsize = val		3121273	0		=			
ANR	3121945	MemberAccess	s -> window [ w ] . osdsize		3121273	0					
ANR	3121946	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121947	PtrMemberAccess	s -> window		3121273	0					
ANR	3121948	Identifier	s		3121273	0					
ANR	3121949	Identifier	window		3121273	1					
ANR	3121950	Identifier	w		3121273	1					
ANR	3121951	Identifier	osdsize		3121273	1					
ANR	3121952	Identifier	val		3121273	1					
ANR	3121953	BreakStatement	break ;	251:12:4973:4978	3121273	18	True				
ANR	3121954	BreakStatement	break ;	255:8:5000:5005	3121273	51	True				
ANR	3121955	Statement	case	257:4:5012:5015	3121273	52	True				
ANR	3121956	Statement	FIMD_VIDWADD0_START	257:9:5017:5035	3121273	53	True				
ANR	3121957	Statement	...	257:29:5037:5039	3121273	54	True				
ANR	3121958	Label	FIMD_VIDWADD0_END :	257:33:5041:5058	3121273	55	True				
ANR	3121959	Identifier	FIMD_VIDWADD0_END		3121273	0					
ANR	3121960	ExpressionStatement	w = ( offset - FIMD_VIDWADD0_START ) >> 3	259:8:5069:5108	3121273	56	True				
ANR	3121961	AssignmentExpression	w = ( offset - FIMD_VIDWADD0_START ) >> 3		3121273	0		=			
ANR	3121962	Identifier	w		3121273	0					
ANR	3121963	ShiftExpression	( offset - FIMD_VIDWADD0_START ) >> 3		3121273	1		>>			
ANR	3121964	AdditiveExpression	offset - FIMD_VIDWADD0_START		3121273	0		-			
ANR	3121965	Identifier	offset		3121273	0					
ANR	3121966	Identifier	FIMD_VIDWADD0_START		3121273	1					
ANR	3121967	PrimaryExpression	3		3121273	1					
ANR	3121968	ExpressionStatement	i = ( ( offset - FIMD_VIDWADD0_START ) >> 2 ) & 1	261:8:5119:5164	3121273	57	True				
ANR	3121969	AssignmentExpression	i = ( ( offset - FIMD_VIDWADD0_START ) >> 2 ) & 1		3121273	0		=			
ANR	3121970	Identifier	i		3121273	0					
ANR	3121971	BitAndExpression	( ( offset - FIMD_VIDWADD0_START ) >> 2 ) & 1		3121273	1		&			
ANR	3121972	ShiftExpression	( offset - FIMD_VIDWADD0_START ) >> 2		3121273	0		>>			
ANR	3121973	AdditiveExpression	offset - FIMD_VIDWADD0_START		3121273	0		-			
ANR	3121974	Identifier	offset		3121273	0					
ANR	3121975	Identifier	FIMD_VIDWADD0_START		3121273	1					
ANR	3121976	PrimaryExpression	2		3121273	1					
ANR	3121977	PrimaryExpression	1		3121273	1					
ANR	3121978	IfStatement	if ( i == fimd_get_buffer_id ( & s -> window [ w ] ) && s -> window [ w ] . buf_start [ i ] != val )		3121273	58					
ANR	3121979	Condition	i == fimd_get_buffer_id ( & s -> window [ w ] ) && s -> window [ w ] . buf_start [ i ] != val	263:12:5179:5269	3121273	0	True				
ANR	3121980	AndExpression	i == fimd_get_buffer_id ( & s -> window [ w ] ) && s -> window [ w ] . buf_start [ i ] != val		3121273	0		&&			
ANR	3121981	EqualityExpression	i == fimd_get_buffer_id ( & s -> window [ w ] )		3121273	0		==			
ANR	3121982	Identifier	i		3121273	0					
ANR	3121983	CallExpression	fimd_get_buffer_id ( & s -> window [ w ] )		3121273	1					
ANR	3121984	Callee	fimd_get_buffer_id		3121273	0					
ANR	3121985	Identifier	fimd_get_buffer_id		3121273	0					
ANR	3121986	ArgumentList	& s -> window [ w ]		3121273	1					
ANR	3121987	Argument	& s -> window [ w ]		3121273	0					
ANR	3121988	UnaryOperationExpression	& s -> window [ w ]		3121273	0					
ANR	3121989	UnaryOperator	&		3121273	0					
ANR	3121990	ArrayIndexing	s -> window [ w ]		3121273	1					
ANR	3121991	PtrMemberAccess	s -> window		3121273	0					
ANR	3121992	Identifier	s		3121273	0					
ANR	3121993	Identifier	window		3121273	1					
ANR	3121994	Identifier	w		3121273	1					
ANR	3121995	EqualityExpression	s -> window [ w ] . buf_start [ i ] != val		3121273	1		!=			
ANR	3121996	ArrayIndexing	s -> window [ w ] . buf_start [ i ]		3121273	0					
ANR	3121997	MemberAccess	s -> window [ w ] . buf_start		3121273	0					
ANR	3121998	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3121999	PtrMemberAccess	s -> window		3121273	0					
ANR	3122000	Identifier	s		3121273	0					
ANR	3122001	Identifier	window		3121273	1					
ANR	3122002	Identifier	w		3121273	1					
ANR	3122003	Identifier	buf_start		3121273	1					
ANR	3122004	Identifier	i		3121273	1					
ANR	3122005	Identifier	val		3121273	1					
ANR	3122006	CompoundStatement		261:50:5135:5135	3121273	1					
ANR	3122007	ExpressionStatement	s -> window [ w ] . buf_start [ i ] = val	267:12:5287:5318	3121273	0	True				
ANR	3122008	AssignmentExpression	s -> window [ w ] . buf_start [ i ] = val		3121273	0		=			
ANR	3122009	ArrayIndexing	s -> window [ w ] . buf_start [ i ]		3121273	0					
ANR	3122010	MemberAccess	s -> window [ w ] . buf_start		3121273	0					
ANR	3122011	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122012	PtrMemberAccess	s -> window		3121273	0					
ANR	3122013	Identifier	s		3121273	0					
ANR	3122014	Identifier	window		3121273	1					
ANR	3122015	Identifier	w		3121273	1					
ANR	3122016	Identifier	buf_start		3121273	1					
ANR	3122017	Identifier	i		3121273	1					
ANR	3122018	Identifier	val		3121273	1					
ANR	3122019	ExpressionStatement	"fimd_update_memory_section ( s , w )"	269:12:5333:5365	3121273	1	True				
ANR	3122020	CallExpression	"fimd_update_memory_section ( s , w )"		3121273	0					
ANR	3122021	Callee	fimd_update_memory_section		3121273	0					
ANR	3122022	Identifier	fimd_update_memory_section		3121273	0					
ANR	3122023	ArgumentList	s		3121273	1					
ANR	3122024	Argument	s		3121273	0					
ANR	3122025	Identifier	s		3121273	0					
ANR	3122026	Argument	w		3121273	1					
ANR	3122027	Identifier	w		3121273	0					
ANR	3122028	BreakStatement	break ;	271:12:5380:5385	3121273	2	True				
ANR	3122029	ExpressionStatement	s -> window [ w ] . buf_start [ i ] = val	275:8:5407:5438	3121273	59	True				
ANR	3122030	AssignmentExpression	s -> window [ w ] . buf_start [ i ] = val		3121273	0		=			
ANR	3122031	ArrayIndexing	s -> window [ w ] . buf_start [ i ]		3121273	0					
ANR	3122032	MemberAccess	s -> window [ w ] . buf_start		3121273	0					
ANR	3122033	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122034	PtrMemberAccess	s -> window		3121273	0					
ANR	3122035	Identifier	s		3121273	0					
ANR	3122036	Identifier	window		3121273	1					
ANR	3122037	Identifier	w		3121273	1					
ANR	3122038	Identifier	buf_start		3121273	1					
ANR	3122039	Identifier	i		3121273	1					
ANR	3122040	Identifier	val		3121273	1					
ANR	3122041	BreakStatement	break ;	277:8:5449:5454	3121273	60	True				
ANR	3122042	Statement	case	279:4:5461:5464	3121273	61	True				
ANR	3122043	Statement	FIMD_VIDWADD1_START	279:9:5466:5484	3121273	62	True				
ANR	3122044	Statement	...	279:29:5486:5488	3121273	63	True				
ANR	3122045	Label	FIMD_VIDWADD1_END :	279:33:5490:5507	3121273	64	True				
ANR	3122046	Identifier	FIMD_VIDWADD1_END		3121273	0					
ANR	3122047	ExpressionStatement	w = ( offset - FIMD_VIDWADD1_START ) >> 3	281:8:5518:5557	3121273	65	True				
ANR	3122048	AssignmentExpression	w = ( offset - FIMD_VIDWADD1_START ) >> 3		3121273	0		=			
ANR	3122049	Identifier	w		3121273	0					
ANR	3122050	ShiftExpression	( offset - FIMD_VIDWADD1_START ) >> 3		3121273	1		>>			
ANR	3122051	AdditiveExpression	offset - FIMD_VIDWADD1_START		3121273	0		-			
ANR	3122052	Identifier	offset		3121273	0					
ANR	3122053	Identifier	FIMD_VIDWADD1_START		3121273	1					
ANR	3122054	PrimaryExpression	3		3121273	1					
ANR	3122055	ExpressionStatement	i = ( ( offset - FIMD_VIDWADD1_START ) >> 2 ) & 1	283:8:5568:5613	3121273	66	True				
ANR	3122056	AssignmentExpression	i = ( ( offset - FIMD_VIDWADD1_START ) >> 2 ) & 1		3121273	0		=			
ANR	3122057	Identifier	i		3121273	0					
ANR	3122058	BitAndExpression	( ( offset - FIMD_VIDWADD1_START ) >> 2 ) & 1		3121273	1		&			
ANR	3122059	ShiftExpression	( offset - FIMD_VIDWADD1_START ) >> 2		3121273	0		>>			
ANR	3122060	AdditiveExpression	offset - FIMD_VIDWADD1_START		3121273	0		-			
ANR	3122061	Identifier	offset		3121273	0					
ANR	3122062	Identifier	FIMD_VIDWADD1_START		3121273	1					
ANR	3122063	PrimaryExpression	2		3121273	1					
ANR	3122064	PrimaryExpression	1		3121273	1					
ANR	3122065	ExpressionStatement	s -> window [ w ] . buf_end [ i ] = val	285:8:5624:5653	3121273	67	True				
ANR	3122066	AssignmentExpression	s -> window [ w ] . buf_end [ i ] = val		3121273	0		=			
ANR	3122067	ArrayIndexing	s -> window [ w ] . buf_end [ i ]		3121273	0					
ANR	3122068	MemberAccess	s -> window [ w ] . buf_end		3121273	0					
ANR	3122069	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122070	PtrMemberAccess	s -> window		3121273	0					
ANR	3122071	Identifier	s		3121273	0					
ANR	3122072	Identifier	window		3121273	1					
ANR	3122073	Identifier	w		3121273	1					
ANR	3122074	Identifier	buf_end		3121273	1					
ANR	3122075	Identifier	i		3121273	1					
ANR	3122076	Identifier	val		3121273	1					
ANR	3122077	BreakStatement	break ;	287:8:5664:5669	3121273	68	True				
ANR	3122078	Statement	case	289:4:5676:5679	3121273	69	True				
ANR	3122079	Statement	FIMD_VIDWADD2_START	289:9:5681:5699	3121273	70	True				
ANR	3122080	Statement	...	289:29:5701:5703	3121273	71	True				
ANR	3122081	Label	FIMD_VIDWADD2_END :	289:33:5705:5722	3121273	72	True				
ANR	3122082	Identifier	FIMD_VIDWADD2_END		3121273	0					
ANR	3122083	ExpressionStatement	w = ( offset - FIMD_VIDWADD2_START ) >> 2	291:8:5733:5772	3121273	73	True				
ANR	3122084	AssignmentExpression	w = ( offset - FIMD_VIDWADD2_START ) >> 2		3121273	0		=			
ANR	3122085	Identifier	w		3121273	0					
ANR	3122086	ShiftExpression	( offset - FIMD_VIDWADD2_START ) >> 2		3121273	1		>>			
ANR	3122087	AdditiveExpression	offset - FIMD_VIDWADD2_START		3121273	0		-			
ANR	3122088	Identifier	offset		3121273	0					
ANR	3122089	Identifier	FIMD_VIDWADD2_START		3121273	1					
ANR	3122090	PrimaryExpression	2		3121273	1					
ANR	3122091	IfStatement	if ( ( ( val & FIMD_VIDWADD2_PAGEWIDTH ) != s -> window [ w ] . virtpage_width ) || ( ( ( val >> FIMD_VIDWADD2_OFFSIZE_SHIFT ) & FIMD_VIDWADD2_OFFSIZE ) != s -> window [ w ] . virtpage_offsize ) )		3121273	74					
ANR	3122092	Condition	( ( val & FIMD_VIDWADD2_PAGEWIDTH ) != s -> window [ w ] . virtpage_width ) || ( ( ( val >> FIMD_VIDWADD2_OFFSIZE_SHIFT ) & FIMD_VIDWADD2_OFFSIZE ) != s -> window [ w ] . virtpage_offsize )	293:12:5787:5989	3121273	0	True				
ANR	3122093	OrExpression	( ( val & FIMD_VIDWADD2_PAGEWIDTH ) != s -> window [ w ] . virtpage_width ) || ( ( ( val >> FIMD_VIDWADD2_OFFSIZE_SHIFT ) & FIMD_VIDWADD2_OFFSIZE ) != s -> window [ w ] . virtpage_offsize )		3121273	0		||			
ANR	3122094	EqualityExpression	( val & FIMD_VIDWADD2_PAGEWIDTH ) != s -> window [ w ] . virtpage_width		3121273	0		!=			
ANR	3122095	BitAndExpression	val & FIMD_VIDWADD2_PAGEWIDTH		3121273	0		&			
ANR	3122096	Identifier	val		3121273	0					
ANR	3122097	Identifier	FIMD_VIDWADD2_PAGEWIDTH		3121273	1					
ANR	3122098	MemberAccess	s -> window [ w ] . virtpage_width		3121273	1					
ANR	3122099	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122100	PtrMemberAccess	s -> window		3121273	0					
ANR	3122101	Identifier	s		3121273	0					
ANR	3122102	Identifier	window		3121273	1					
ANR	3122103	Identifier	w		3121273	1					
ANR	3122104	Identifier	virtpage_width		3121273	1					
ANR	3122105	EqualityExpression	( ( val >> FIMD_VIDWADD2_OFFSIZE_SHIFT ) & FIMD_VIDWADD2_OFFSIZE ) != s -> window [ w ] . virtpage_offsize		3121273	1		!=			
ANR	3122106	BitAndExpression	( val >> FIMD_VIDWADD2_OFFSIZE_SHIFT ) & FIMD_VIDWADD2_OFFSIZE		3121273	0		&			
ANR	3122107	ShiftExpression	val >> FIMD_VIDWADD2_OFFSIZE_SHIFT		3121273	0		>>			
ANR	3122108	Identifier	val		3121273	0					
ANR	3122109	Identifier	FIMD_VIDWADD2_OFFSIZE_SHIFT		3121273	1					
ANR	3122110	Identifier	FIMD_VIDWADD2_OFFSIZE		3121273	1					
ANR	3122111	MemberAccess	s -> window [ w ] . virtpage_offsize		3121273	1					
ANR	3122112	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122113	PtrMemberAccess	s -> window		3121273	0					
ANR	3122114	Identifier	s		3121273	0					
ANR	3122115	Identifier	window		3121273	1					
ANR	3122116	Identifier	w		3121273	1					
ANR	3122117	Identifier	virtpage_offsize		3121273	1					
ANR	3122118	CompoundStatement		293:56:5855:5855	3121273	1					
ANR	3122119	ExpressionStatement	s -> window [ w ] . virtpage_width = val & FIMD_VIDWADD2_PAGEWIDTH	299:12:6007:6066	3121273	0	True				
ANR	3122120	AssignmentExpression	s -> window [ w ] . virtpage_width = val & FIMD_VIDWADD2_PAGEWIDTH		3121273	0		=			
ANR	3122121	MemberAccess	s -> window [ w ] . virtpage_width		3121273	0					
ANR	3122122	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122123	PtrMemberAccess	s -> window		3121273	0					
ANR	3122124	Identifier	s		3121273	0					
ANR	3122125	Identifier	window		3121273	1					
ANR	3122126	Identifier	w		3121273	1					
ANR	3122127	Identifier	virtpage_width		3121273	1					
ANR	3122128	BitAndExpression	val & FIMD_VIDWADD2_PAGEWIDTH		3121273	1		&			
ANR	3122129	Identifier	val		3121273	0					
ANR	3122130	Identifier	FIMD_VIDWADD2_PAGEWIDTH		3121273	1					
ANR	3122131	ExpressionStatement	s -> window [ w ] . virtpage_offsize = ( val >> FIMD_VIDWADD2_OFFSIZE_SHIFT ) & FIMD_VIDWADD2_OFFSIZE	301:12:6081:6190	3121273	1	True				
ANR	3122132	AssignmentExpression	s -> window [ w ] . virtpage_offsize = ( val >> FIMD_VIDWADD2_OFFSIZE_SHIFT ) & FIMD_VIDWADD2_OFFSIZE		3121273	0		=			
ANR	3122133	MemberAccess	s -> window [ w ] . virtpage_offsize		3121273	0					
ANR	3122134	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122135	PtrMemberAccess	s -> window		3121273	0					
ANR	3122136	Identifier	s		3121273	0					
ANR	3122137	Identifier	window		3121273	1					
ANR	3122138	Identifier	w		3121273	1					
ANR	3122139	Identifier	virtpage_offsize		3121273	1					
ANR	3122140	BitAndExpression	( val >> FIMD_VIDWADD2_OFFSIZE_SHIFT ) & FIMD_VIDWADD2_OFFSIZE		3121273	1		&			
ANR	3122141	ShiftExpression	val >> FIMD_VIDWADD2_OFFSIZE_SHIFT		3121273	0		>>			
ANR	3122142	Identifier	val		3121273	0					
ANR	3122143	Identifier	FIMD_VIDWADD2_OFFSIZE_SHIFT		3121273	1					
ANR	3122144	Identifier	FIMD_VIDWADD2_OFFSIZE		3121273	1					
ANR	3122145	ExpressionStatement	"fimd_update_memory_section ( s , w )"	305:12:6205:6237	3121273	2	True				
ANR	3122146	CallExpression	"fimd_update_memory_section ( s , w )"		3121273	0					
ANR	3122147	Callee	fimd_update_memory_section		3121273	0					
ANR	3122148	Identifier	fimd_update_memory_section		3121273	0					
ANR	3122149	ArgumentList	s		3121273	1					
ANR	3122150	Argument	s		3121273	0					
ANR	3122151	Identifier	s		3121273	0					
ANR	3122152	Argument	w		3121273	1					
ANR	3122153	Identifier	w		3121273	0					
ANR	3122154	BreakStatement	break ;	309:8:6259:6264	3121273	75	True				
ANR	3122155	Label	case FIMD_VIDINTCON0 :	311:4:6271:6291	3121273	76	True				
ANR	3122156	Identifier	FIMD_VIDINTCON0		3121273	0					
ANR	3122157	ExpressionStatement	s -> vidintcon [ 0 ] = val	313:8:6302:6323	3121273	77	True				
ANR	3122158	AssignmentExpression	s -> vidintcon [ 0 ] = val		3121273	0		=			
ANR	3122159	ArrayIndexing	s -> vidintcon [ 0 ]		3121273	0					
ANR	3122160	PtrMemberAccess	s -> vidintcon		3121273	0					
ANR	3122161	Identifier	s		3121273	0					
ANR	3122162	Identifier	vidintcon		3121273	1					
ANR	3122163	PrimaryExpression	0		3121273	1					
ANR	3122164	Identifier	val		3121273	1					
ANR	3122165	BreakStatement	break ;	315:8:6334:6339	3121273	78	True				
ANR	3122166	Label	case FIMD_VIDINTCON1 :	317:4:6346:6366	3121273	79	True				
ANR	3122167	Identifier	FIMD_VIDINTCON1		3121273	0					
ANR	3122168	ExpressionStatement	s -> vidintcon [ 1 ] &= ~ ( val & 7 )	319:8:6377:6406	3121273	80	True				
ANR	3122169	AssignmentExpression	s -> vidintcon [ 1 ] &= ~ ( val & 7 )		3121273	0		&=			
ANR	3122170	ArrayIndexing	s -> vidintcon [ 1 ]		3121273	0					
ANR	3122171	PtrMemberAccess	s -> vidintcon		3121273	0					
ANR	3122172	Identifier	s		3121273	0					
ANR	3122173	Identifier	vidintcon		3121273	1					
ANR	3122174	PrimaryExpression	1		3121273	1					
ANR	3122175	UnaryOperationExpression	~ ( val & 7 )		3121273	1					
ANR	3122176	UnaryOperator	~		3121273	0					
ANR	3122177	BitAndExpression	val & 7		3121273	1		&			
ANR	3122178	Identifier	val		3121273	0					
ANR	3122179	PrimaryExpression	7		3121273	1					
ANR	3122180	ExpressionStatement	exynos4210_fimd_update_irq ( s )	321:8:6417:6446	3121273	81	True				
ANR	3122181	CallExpression	exynos4210_fimd_update_irq ( s )		3121273	0					
ANR	3122182	Callee	exynos4210_fimd_update_irq		3121273	0					
ANR	3122183	Identifier	exynos4210_fimd_update_irq		3121273	0					
ANR	3122184	ArgumentList	s		3121273	1					
ANR	3122185	Argument	s		3121273	0					
ANR	3122186	Identifier	s		3121273	0					
ANR	3122187	BreakStatement	break ;	323:8:6457:6462	3121273	82	True				
ANR	3122188	Statement	case	325:4:6469:6472	3121273	83	True				
ANR	3122189	Statement	FIMD_WKEYCON_START	325:9:6474:6491	3121273	84	True				
ANR	3122190	Statement	...	325:28:6493:6495	3121273	85	True				
ANR	3122191	Label	FIMD_WKEYCON_END :	325:32:6497:6513	3121273	86	True				
ANR	3122192	Identifier	FIMD_WKEYCON_END		3121273	0					
ANR	3122193	ExpressionStatement	w = ( ( offset - FIMD_WKEYCON_START ) >> 3 ) + 1	327:8:6524:6568	3121273	87	True				
ANR	3122194	AssignmentExpression	w = ( ( offset - FIMD_WKEYCON_START ) >> 3 ) + 1		3121273	0		=			
ANR	3122195	Identifier	w		3121273	0					
ANR	3122196	AdditiveExpression	( ( offset - FIMD_WKEYCON_START ) >> 3 ) + 1		3121273	1		+			
ANR	3122197	ShiftExpression	( offset - FIMD_WKEYCON_START ) >> 3		3121273	0		>>			
ANR	3122198	AdditiveExpression	offset - FIMD_WKEYCON_START		3121273	0		-			
ANR	3122199	Identifier	offset		3121273	0					
ANR	3122200	Identifier	FIMD_WKEYCON_START		3121273	1					
ANR	3122201	PrimaryExpression	3		3121273	1					
ANR	3122202	PrimaryExpression	1		3121273	1					
ANR	3122203	ExpressionStatement	i = ( ( offset - FIMD_WKEYCON_START ) >> 2 ) & 1	329:8:6579:6623	3121273	88	True				
ANR	3122204	AssignmentExpression	i = ( ( offset - FIMD_WKEYCON_START ) >> 2 ) & 1		3121273	0		=			
ANR	3122205	Identifier	i		3121273	0					
ANR	3122206	BitAndExpression	( ( offset - FIMD_WKEYCON_START ) >> 2 ) & 1		3121273	1		&			
ANR	3122207	ShiftExpression	( offset - FIMD_WKEYCON_START ) >> 2		3121273	0		>>			
ANR	3122208	AdditiveExpression	offset - FIMD_WKEYCON_START		3121273	0		-			
ANR	3122209	Identifier	offset		3121273	0					
ANR	3122210	Identifier	FIMD_WKEYCON_START		3121273	1					
ANR	3122211	PrimaryExpression	2		3121273	1					
ANR	3122212	PrimaryExpression	1		3121273	1					
ANR	3122213	ExpressionStatement	s -> window [ w ] . keycon [ i ] = val	331:8:6634:6662	3121273	89	True				
ANR	3122214	AssignmentExpression	s -> window [ w ] . keycon [ i ] = val		3121273	0		=			
ANR	3122215	ArrayIndexing	s -> window [ w ] . keycon [ i ]		3121273	0					
ANR	3122216	MemberAccess	s -> window [ w ] . keycon		3121273	0					
ANR	3122217	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122218	PtrMemberAccess	s -> window		3121273	0					
ANR	3122219	Identifier	s		3121273	0					
ANR	3122220	Identifier	window		3121273	1					
ANR	3122221	Identifier	w		3121273	1					
ANR	3122222	Identifier	keycon		3121273	1					
ANR	3122223	Identifier	i		3121273	1					
ANR	3122224	Identifier	val		3121273	1					
ANR	3122225	BreakStatement	break ;	333:8:6673:6678	3121273	90	True				
ANR	3122226	Statement	case	335:4:6685:6688	3121273	91	True				
ANR	3122227	Statement	FIMD_WKEYALPHA_START	335:9:6690:6709	3121273	92	True				
ANR	3122228	Statement	...	335:30:6711:6713	3121273	93	True				
ANR	3122229	Label	FIMD_WKEYALPHA_END :	335:34:6715:6733	3121273	94	True				
ANR	3122230	Identifier	FIMD_WKEYALPHA_END		3121273	0					
ANR	3122231	ExpressionStatement	w = ( ( offset - FIMD_WKEYALPHA_START ) >> 2 ) + 1	337:8:6744:6790	3121273	95	True				
ANR	3122232	AssignmentExpression	w = ( ( offset - FIMD_WKEYALPHA_START ) >> 2 ) + 1		3121273	0		=			
ANR	3122233	Identifier	w		3121273	0					
ANR	3122234	AdditiveExpression	( ( offset - FIMD_WKEYALPHA_START ) >> 2 ) + 1		3121273	1		+			
ANR	3122235	ShiftExpression	( offset - FIMD_WKEYALPHA_START ) >> 2		3121273	0		>>			
ANR	3122236	AdditiveExpression	offset - FIMD_WKEYALPHA_START		3121273	0		-			
ANR	3122237	Identifier	offset		3121273	0					
ANR	3122238	Identifier	FIMD_WKEYALPHA_START		3121273	1					
ANR	3122239	PrimaryExpression	2		3121273	1					
ANR	3122240	PrimaryExpression	1		3121273	1					
ANR	3122241	ExpressionStatement	s -> window [ w ] . keyalpha = val	339:8:6801:6828	3121273	96	True				
ANR	3122242	AssignmentExpression	s -> window [ w ] . keyalpha = val		3121273	0		=			
ANR	3122243	MemberAccess	s -> window [ w ] . keyalpha		3121273	0					
ANR	3122244	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122245	PtrMemberAccess	s -> window		3121273	0					
ANR	3122246	Identifier	s		3121273	0					
ANR	3122247	Identifier	window		3121273	1					
ANR	3122248	Identifier	w		3121273	1					
ANR	3122249	Identifier	keyalpha		3121273	1					
ANR	3122250	Identifier	val		3121273	1					
ANR	3122251	BreakStatement	break ;	341:8:6839:6844	3121273	97	True				
ANR	3122252	Label	case FIMD_DITHMODE :	343:4:6851:6869	3121273	98	True				
ANR	3122253	Identifier	FIMD_DITHMODE		3121273	0					
ANR	3122254	ExpressionStatement	s -> dithmode = val	345:8:6880:6897	3121273	99	True				
ANR	3122255	AssignmentExpression	s -> dithmode = val		3121273	0		=			
ANR	3122256	PtrMemberAccess	s -> dithmode		3121273	0					
ANR	3122257	Identifier	s		3121273	0					
ANR	3122258	Identifier	dithmode		3121273	1					
ANR	3122259	Identifier	val		3121273	1					
ANR	3122260	BreakStatement	break ;	347:8:6908:6913	3121273	100	True				
ANR	3122261	Statement	case	349:4:6920:6923	3121273	101	True				
ANR	3122262	Statement	FIMD_WINMAP_START	349:9:6925:6941	3121273	102	True				
ANR	3122263	Statement	...	349:27:6943:6945	3121273	103	True				
ANR	3122264	Label	FIMD_WINMAP_END :	349:31:6947:6962	3121273	104	True				
ANR	3122265	Identifier	FIMD_WINMAP_END		3121273	0					
ANR	3122266	ExpressionStatement	w = ( offset - FIMD_WINMAP_START ) >> 2	351:8:6973:7010	3121273	105	True				
ANR	3122267	AssignmentExpression	w = ( offset - FIMD_WINMAP_START ) >> 2		3121273	0		=			
ANR	3122268	Identifier	w		3121273	0					
ANR	3122269	ShiftExpression	( offset - FIMD_WINMAP_START ) >> 2		3121273	1		>>			
ANR	3122270	AdditiveExpression	offset - FIMD_WINMAP_START		3121273	0		-			
ANR	3122271	Identifier	offset		3121273	0					
ANR	3122272	Identifier	FIMD_WINMAP_START		3121273	1					
ANR	3122273	PrimaryExpression	2		3121273	1					
ANR	3122274	ExpressionStatement	old_value = s -> window [ w ] . winmap	353:8:7021:7052	3121273	106	True				
ANR	3122275	AssignmentExpression	old_value = s -> window [ w ] . winmap		3121273	0		=			
ANR	3122276	Identifier	old_value		3121273	0					
ANR	3122277	MemberAccess	s -> window [ w ] . winmap		3121273	1					
ANR	3122278	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122279	PtrMemberAccess	s -> window		3121273	0					
ANR	3122280	Identifier	s		3121273	0					
ANR	3122281	Identifier	window		3121273	1					
ANR	3122282	Identifier	w		3121273	1					
ANR	3122283	Identifier	winmap		3121273	1					
ANR	3122284	ExpressionStatement	s -> window [ w ] . winmap = val	355:8:7063:7088	3121273	107	True				
ANR	3122285	AssignmentExpression	s -> window [ w ] . winmap = val		3121273	0		=			
ANR	3122286	MemberAccess	s -> window [ w ] . winmap		3121273	0					
ANR	3122287	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122288	PtrMemberAccess	s -> window		3121273	0					
ANR	3122289	Identifier	s		3121273	0					
ANR	3122290	Identifier	window		3121273	1					
ANR	3122291	Identifier	w		3121273	1					
ANR	3122292	Identifier	winmap		3121273	1					
ANR	3122293	Identifier	val		3121273	1					
ANR	3122294	IfStatement	if ( ( val & FIMD_WINMAP_EN ) ^ ( old_value & FIMD_WINMAP_EN ) )		3121273	108					
ANR	3122295	Condition	( val & FIMD_WINMAP_EN ) ^ ( old_value & FIMD_WINMAP_EN )	357:12:7103:7155	3121273	0	True				
ANR	3122296	ExclusiveOrExpression	( val & FIMD_WINMAP_EN ) ^ ( old_value & FIMD_WINMAP_EN )		3121273	0		^			
ANR	3122297	BitAndExpression	val & FIMD_WINMAP_EN		3121273	0		&			
ANR	3122298	Identifier	val		3121273	0					
ANR	3122299	Identifier	FIMD_WINMAP_EN		3121273	1					
ANR	3122300	BitAndExpression	old_value & FIMD_WINMAP_EN		3121273	1		&			
ANR	3122301	Identifier	old_value		3121273	0					
ANR	3122302	Identifier	FIMD_WINMAP_EN		3121273	1					
ANR	3122303	CompoundStatement		353:67:7021:7021	3121273	1					
ANR	3122304	ExpressionStatement	exynos4210_fimd_invalidate ( s )	359:12:7173:7202	3121273	0	True				
ANR	3122305	CallExpression	exynos4210_fimd_invalidate ( s )		3121273	0					
ANR	3122306	Callee	exynos4210_fimd_invalidate		3121273	0					
ANR	3122307	Identifier	exynos4210_fimd_invalidate		3121273	0					
ANR	3122308	ArgumentList	s		3121273	1					
ANR	3122309	Argument	s		3121273	0					
ANR	3122310	Identifier	s		3121273	0					
ANR	3122311	ExpressionStatement	"exynos4210_fimd_update_win_bppmode ( s , w )"	361:12:7217:7257	3121273	1	True				
ANR	3122312	CallExpression	"exynos4210_fimd_update_win_bppmode ( s , w )"		3121273	0					
ANR	3122313	Callee	exynos4210_fimd_update_win_bppmode		3121273	0					
ANR	3122314	Identifier	exynos4210_fimd_update_win_bppmode		3121273	0					
ANR	3122315	ArgumentList	s		3121273	1					
ANR	3122316	Argument	s		3121273	0					
ANR	3122317	Identifier	s		3121273	0					
ANR	3122318	Argument	w		3121273	1					
ANR	3122319	Identifier	w		3121273	0					
ANR	3122320	ExpressionStatement	"exynos4210_fimd_trace_bppmode ( s , w , 0xFFFFFFFF )"	363:12:7272:7319	3121273	2	True				
ANR	3122321	CallExpression	"exynos4210_fimd_trace_bppmode ( s , w , 0xFFFFFFFF )"		3121273	0					
ANR	3122322	Callee	exynos4210_fimd_trace_bppmode		3121273	0					
ANR	3122323	Identifier	exynos4210_fimd_trace_bppmode		3121273	0					
ANR	3122324	ArgumentList	s		3121273	1					
ANR	3122325	Argument	s		3121273	0					
ANR	3122326	Identifier	s		3121273	0					
ANR	3122327	Argument	w		3121273	1					
ANR	3122328	Identifier	w		3121273	0					
ANR	3122329	Argument	0xFFFFFFFF		3121273	2					
ANR	3122330	PrimaryExpression	0xFFFFFFFF		3121273	0					
ANR	3122331	ExpressionStatement	exynos4210_fimd_update ( s )	365:12:7334:7359	3121273	3	True				
ANR	3122332	CallExpression	exynos4210_fimd_update ( s )		3121273	0					
ANR	3122333	Callee	exynos4210_fimd_update		3121273	0					
ANR	3122334	Identifier	exynos4210_fimd_update		3121273	0					
ANR	3122335	ArgumentList	s		3121273	1					
ANR	3122336	Argument	s		3121273	0					
ANR	3122337	Identifier	s		3121273	0					
ANR	3122338	BreakStatement	break ;	369:8:7381:7386	3121273	109	True				
ANR	3122339	Statement	case	371:4:7393:7396	3121273	110	True				
ANR	3122340	Statement	FIMD_WPALCON_HIGH	371:9:7398:7414	3121273	111	True				
ANR	3122341	Statement	...	371:27:7416:7418	3121273	112	True				
ANR	3122342	Label	FIMD_WPALCON_LOW :	371:31:7420:7436	3121273	113	True				
ANR	3122343	Identifier	FIMD_WPALCON_LOW		3121273	0					
ANR	3122344	ExpressionStatement	i = ( offset - FIMD_WPALCON_HIGH ) >> 2	373:8:7447:7484	3121273	114	True				
ANR	3122345	AssignmentExpression	i = ( offset - FIMD_WPALCON_HIGH ) >> 2		3121273	0		=			
ANR	3122346	Identifier	i		3121273	0					
ANR	3122347	ShiftExpression	( offset - FIMD_WPALCON_HIGH ) >> 2		3121273	1		>>			
ANR	3122348	AdditiveExpression	offset - FIMD_WPALCON_HIGH		3121273	0		-			
ANR	3122349	Identifier	offset		3121273	0					
ANR	3122350	Identifier	FIMD_WPALCON_HIGH		3121273	1					
ANR	3122351	PrimaryExpression	2		3121273	1					
ANR	3122352	ExpressionStatement	s -> wpalcon [ i ] = val	375:8:7495:7514	3121273	115	True				
ANR	3122353	AssignmentExpression	s -> wpalcon [ i ] = val		3121273	0		=			
ANR	3122354	ArrayIndexing	s -> wpalcon [ i ]		3121273	0					
ANR	3122355	PtrMemberAccess	s -> wpalcon		3121273	0					
ANR	3122356	Identifier	s		3121273	0					
ANR	3122357	Identifier	wpalcon		3121273	1					
ANR	3122358	Identifier	i		3121273	1					
ANR	3122359	Identifier	val		3121273	1					
ANR	3122360	IfStatement	if ( s -> wpalcon [ 1 ] & FIMD_WPALCON_UPDATEEN )		3121273	116					
ANR	3122361	Condition	s -> wpalcon [ 1 ] & FIMD_WPALCON_UPDATEEN	377:12:7529:7565	3121273	0	True				
ANR	3122362	BitAndExpression	s -> wpalcon [ 1 ] & FIMD_WPALCON_UPDATEEN		3121273	0		&			
ANR	3122363	ArrayIndexing	s -> wpalcon [ 1 ]		3121273	0					
ANR	3122364	PtrMemberAccess	s -> wpalcon		3121273	0					
ANR	3122365	Identifier	s		3121273	0					
ANR	3122366	Identifier	wpalcon		3121273	1					
ANR	3122367	PrimaryExpression	1		3121273	1					
ANR	3122368	Identifier	FIMD_WPALCON_UPDATEEN		3121273	1					
ANR	3122369	CompoundStatement		373:51:7431:7431	3121273	1					
ANR	3122370	ForStatement	for ( w = 0 ; w < NUM_OF_WINDOWS ; w ++ )		3121273	0					
ANR	3122371	ForInit	w = 0 ;	379:17:7588:7593	3121273	0	True				
ANR	3122372	AssignmentExpression	w = 0		3121273	0		=			
ANR	3122373	Identifier	w		3121273	0					
ANR	3122374	PrimaryExpression	0		3121273	1					
ANR	3122375	Condition	w < NUM_OF_WINDOWS	379:24:7595:7612	3121273	1	True				
ANR	3122376	RelationalExpression	w < NUM_OF_WINDOWS		3121273	0		<			
ANR	3122377	Identifier	w		3121273	0					
ANR	3122378	Identifier	NUM_OF_WINDOWS		3121273	1					
ANR	3122379	PostIncDecOperationExpression	w ++	379:44:7615:7617	3121273	2	True				
ANR	3122380	Identifier	w		3121273	0					
ANR	3122381	IncDec	++		3121273	1					
ANR	3122382	CompoundStatement		375:49:7483:7483	3121273	3					
ANR	3122383	ExpressionStatement	"exynos4210_fimd_update_win_bppmode ( s , w )"	381:16:7639:7679	3121273	0	True				
ANR	3122384	CallExpression	"exynos4210_fimd_update_win_bppmode ( s , w )"		3121273	0					
ANR	3122385	Callee	exynos4210_fimd_update_win_bppmode		3121273	0					
ANR	3122386	Identifier	exynos4210_fimd_update_win_bppmode		3121273	0					
ANR	3122387	ArgumentList	s		3121273	1					
ANR	3122388	Argument	s		3121273	0					
ANR	3122389	Identifier	s		3121273	0					
ANR	3122390	Argument	w		3121273	1					
ANR	3122391	Identifier	w		3121273	0					
ANR	3122392	ExpressionStatement	"fimd_update_get_alpha ( s , w )"	383:16:7698:7725	3121273	1	True				
ANR	3122393	CallExpression	"fimd_update_get_alpha ( s , w )"		3121273	0					
ANR	3122394	Callee	fimd_update_get_alpha		3121273	0					
ANR	3122395	Identifier	fimd_update_get_alpha		3121273	0					
ANR	3122396	ArgumentList	s		3121273	1					
ANR	3122397	Argument	s		3121273	0					
ANR	3122398	Identifier	s		3121273	0					
ANR	3122399	Argument	w		3121273	1					
ANR	3122400	Identifier	w		3121273	0					
ANR	3122401	BreakStatement	break ;	389:8:7762:7767	3121273	117	True				
ANR	3122402	Label	case FIMD_TRIGCON :	391:4:7774:7791	3121273	118	True				
ANR	3122403	Identifier	FIMD_TRIGCON		3121273	0					
ANR	3122404	ExpressionStatement	val = ( val & ~FIMD_TRIGCON_ROMASK ) | ( s -> trigcon & FIMD_TRIGCON_ROMASK )	393:8:7802:7873	3121273	119	True				
ANR	3122405	AssignmentExpression	val = ( val & ~FIMD_TRIGCON_ROMASK ) | ( s -> trigcon & FIMD_TRIGCON_ROMASK )		3121273	0		=			
ANR	3122406	Identifier	val		3121273	0					
ANR	3122407	InclusiveOrExpression	( val & ~FIMD_TRIGCON_ROMASK ) | ( s -> trigcon & FIMD_TRIGCON_ROMASK )		3121273	1		|			
ANR	3122408	BitAndExpression	val & ~FIMD_TRIGCON_ROMASK		3121273	0		&			
ANR	3122409	Identifier	val		3121273	0					
ANR	3122410	Identifier	~FIMD_TRIGCON_ROMASK		3121273	1					
ANR	3122411	BitAndExpression	s -> trigcon & FIMD_TRIGCON_ROMASK		3121273	1		&			
ANR	3122412	PtrMemberAccess	s -> trigcon		3121273	0					
ANR	3122413	Identifier	s		3121273	0					
ANR	3122414	Identifier	trigcon		3121273	1					
ANR	3122415	Identifier	FIMD_TRIGCON_ROMASK		3121273	1					
ANR	3122416	ExpressionStatement	s -> trigcon = val	395:8:7884:7900	3121273	120	True				
ANR	3122417	AssignmentExpression	s -> trigcon = val		3121273	0		=			
ANR	3122418	PtrMemberAccess	s -> trigcon		3121273	0					
ANR	3122419	Identifier	s		3121273	0					
ANR	3122420	Identifier	trigcon		3121273	1					
ANR	3122421	Identifier	val		3121273	1					
ANR	3122422	BreakStatement	break ;	397:8:7911:7916	3121273	121	True				
ANR	3122423	Statement	case	399:4:7923:7926	3121273	122	True				
ANR	3122424	Statement	FIMD_I80IFCON_START	399:9:7928:7946	3121273	123	True				
ANR	3122425	Statement	...	399:29:7948:7950	3121273	124	True				
ANR	3122426	Label	FIMD_I80IFCON_END :	399:33:7952:7969	3121273	125	True				
ANR	3122427	Identifier	FIMD_I80IFCON_END		3121273	0					
ANR	3122428	ExpressionStatement	s -> i80ifcon [ ( offset - FIMD_I80IFCON_START ) >> 2 ] = val	401:8:7980:8034	3121273	126	True				
ANR	3122429	AssignmentExpression	s -> i80ifcon [ ( offset - FIMD_I80IFCON_START ) >> 2 ] = val		3121273	0		=			
ANR	3122430	ArrayIndexing	s -> i80ifcon [ ( offset - FIMD_I80IFCON_START ) >> 2 ]		3121273	0					
ANR	3122431	PtrMemberAccess	s -> i80ifcon		3121273	0					
ANR	3122432	Identifier	s		3121273	0					
ANR	3122433	Identifier	i80ifcon		3121273	1					
ANR	3122434	ShiftExpression	( offset - FIMD_I80IFCON_START ) >> 2		3121273	1		>>			
ANR	3122435	AdditiveExpression	offset - FIMD_I80IFCON_START		3121273	0		-			
ANR	3122436	Identifier	offset		3121273	0					
ANR	3122437	Identifier	FIMD_I80IFCON_START		3121273	1					
ANR	3122438	PrimaryExpression	2		3121273	1					
ANR	3122439	Identifier	val		3121273	1					
ANR	3122440	BreakStatement	break ;	403:8:8045:8050	3121273	127	True				
ANR	3122441	Label	case FIMD_COLORGAINCON :	405:4:8057:8079	3121273	128	True				
ANR	3122442	Identifier	FIMD_COLORGAINCON		3121273	0					
ANR	3122443	ExpressionStatement	s -> colorgaincon = val	407:8:8090:8111	3121273	129	True				
ANR	3122444	AssignmentExpression	s -> colorgaincon = val		3121273	0		=			
ANR	3122445	PtrMemberAccess	s -> colorgaincon		3121273	0					
ANR	3122446	Identifier	s		3121273	0					
ANR	3122447	Identifier	colorgaincon		3121273	1					
ANR	3122448	Identifier	val		3121273	1					
ANR	3122449	BreakStatement	break ;	409:8:8122:8127	3121273	130	True				
ANR	3122450	Statement	case	411:4:8134:8137	3121273	131	True				
ANR	3122451	Statement	FIMD_LDI_CMDCON0	411:9:8139:8154	3121273	132	True				
ANR	3122452	Statement	...	411:26:8156:8158	3121273	133	True				
ANR	3122453	Label	FIMD_LDI_CMDCON1 :	411:30:8160:8176	3121273	134	True				
ANR	3122454	Identifier	FIMD_LDI_CMDCON1		3121273	0					
ANR	3122455	ExpressionStatement	s -> ldi_cmdcon [ ( offset - FIMD_LDI_CMDCON0 ) >> 2 ] = val	413:8:8187:8240	3121273	135	True				
ANR	3122456	AssignmentExpression	s -> ldi_cmdcon [ ( offset - FIMD_LDI_CMDCON0 ) >> 2 ] = val		3121273	0		=			
ANR	3122457	ArrayIndexing	s -> ldi_cmdcon [ ( offset - FIMD_LDI_CMDCON0 ) >> 2 ]		3121273	0					
ANR	3122458	PtrMemberAccess	s -> ldi_cmdcon		3121273	0					
ANR	3122459	Identifier	s		3121273	0					
ANR	3122460	Identifier	ldi_cmdcon		3121273	1					
ANR	3122461	ShiftExpression	( offset - FIMD_LDI_CMDCON0 ) >> 2		3121273	1		>>			
ANR	3122462	AdditiveExpression	offset - FIMD_LDI_CMDCON0		3121273	0		-			
ANR	3122463	Identifier	offset		3121273	0					
ANR	3122464	Identifier	FIMD_LDI_CMDCON0		3121273	1					
ANR	3122465	PrimaryExpression	2		3121273	1					
ANR	3122466	Identifier	val		3121273	1					
ANR	3122467	BreakStatement	break ;	415:8:8251:8256	3121273	136	True				
ANR	3122468	Statement	case	417:4:8263:8266	3121273	137	True				
ANR	3122469	Statement	FIMD_SIFCCON0	417:9:8268:8280	3121273	138	True				
ANR	3122470	Statement	...	417:23:8282:8284	3121273	139	True				
ANR	3122471	Label	FIMD_SIFCCON2 :	417:27:8286:8299	3121273	140	True				
ANR	3122472	Identifier	FIMD_SIFCCON2		3121273	0					
ANR	3122473	ExpressionStatement	i = ( offset - FIMD_SIFCCON0 ) >> 2	419:8:8310:8343	3121273	141	True				
ANR	3122474	AssignmentExpression	i = ( offset - FIMD_SIFCCON0 ) >> 2		3121273	0		=			
ANR	3122475	Identifier	i		3121273	0					
ANR	3122476	ShiftExpression	( offset - FIMD_SIFCCON0 ) >> 2		3121273	1		>>			
ANR	3122477	AdditiveExpression	offset - FIMD_SIFCCON0		3121273	0		-			
ANR	3122478	Identifier	offset		3121273	0					
ANR	3122479	Identifier	FIMD_SIFCCON0		3121273	1					
ANR	3122480	PrimaryExpression	2		3121273	1					
ANR	3122481	IfStatement	if ( i != 2 )		3121273	142					
ANR	3122482	Condition	i != 2	421:12:8358:8363	3121273	0	True				
ANR	3122483	EqualityExpression	i != 2		3121273	0		!=			
ANR	3122484	Identifier	i		3121273	0					
ANR	3122485	PrimaryExpression	2		3121273	1					
ANR	3122486	CompoundStatement		417:20:8229:8229	3121273	1					
ANR	3122487	ExpressionStatement	s -> sifccon [ i ] = val	423:12:8381:8400	3121273	0	True				
ANR	3122488	AssignmentExpression	s -> sifccon [ i ] = val		3121273	0		=			
ANR	3122489	ArrayIndexing	s -> sifccon [ i ]		3121273	0					
ANR	3122490	PtrMemberAccess	s -> sifccon		3121273	0					
ANR	3122491	Identifier	s		3121273	0					
ANR	3122492	Identifier	sifccon		3121273	1					
ANR	3122493	Identifier	i		3121273	1					
ANR	3122494	Identifier	val		3121273	1					
ANR	3122495	BreakStatement	break ;	427:8:8422:8427	3121273	143	True				
ANR	3122496	Statement	case	429:4:8434:8437	3121273	144	True				
ANR	3122497	Statement	FIMD_HUECOEFCR_START	429:9:8439:8458	3121273	145	True				
ANR	3122498	Statement	...	429:30:8460:8462	3121273	146	True				
ANR	3122499	Label	FIMD_HUECOEFCR_END :	429:34:8464:8482	3121273	147	True				
ANR	3122500	Identifier	FIMD_HUECOEFCR_END		3121273	0					
ANR	3122501	ExpressionStatement	i = ( offset - FIMD_HUECOEFCR_START ) >> 2	431:8:8493:8533	3121273	148	True				
ANR	3122502	AssignmentExpression	i = ( offset - FIMD_HUECOEFCR_START ) >> 2		3121273	0		=			
ANR	3122503	Identifier	i		3121273	0					
ANR	3122504	ShiftExpression	( offset - FIMD_HUECOEFCR_START ) >> 2		3121273	1		>>			
ANR	3122505	AdditiveExpression	offset - FIMD_HUECOEFCR_START		3121273	0		-			
ANR	3122506	Identifier	offset		3121273	0					
ANR	3122507	Identifier	FIMD_HUECOEFCR_START		3121273	1					
ANR	3122508	PrimaryExpression	2		3121273	1					
ANR	3122509	ExpressionStatement	s -> huecoef_cr [ i ] = val	433:8:8544:8566	3121273	149	True				
ANR	3122510	AssignmentExpression	s -> huecoef_cr [ i ] = val		3121273	0		=			
ANR	3122511	ArrayIndexing	s -> huecoef_cr [ i ]		3121273	0					
ANR	3122512	PtrMemberAccess	s -> huecoef_cr		3121273	0					
ANR	3122513	Identifier	s		3121273	0					
ANR	3122514	Identifier	huecoef_cr		3121273	1					
ANR	3122515	Identifier	i		3121273	1					
ANR	3122516	Identifier	val		3121273	1					
ANR	3122517	BreakStatement	break ;	435:8:8577:8582	3121273	150	True				
ANR	3122518	Statement	case	437:4:8589:8592	3121273	151	True				
ANR	3122519	Statement	FIMD_HUECOEFCB_START	437:9:8594:8613	3121273	152	True				
ANR	3122520	Statement	...	437:30:8615:8617	3121273	153	True				
ANR	3122521	Label	FIMD_HUECOEFCB_END :	437:34:8619:8637	3121273	154	True				
ANR	3122522	Identifier	FIMD_HUECOEFCB_END		3121273	0					
ANR	3122523	ExpressionStatement	i = ( offset - FIMD_HUECOEFCB_START ) >> 2	439:8:8648:8688	3121273	155	True				
ANR	3122524	AssignmentExpression	i = ( offset - FIMD_HUECOEFCB_START ) >> 2		3121273	0		=			
ANR	3122525	Identifier	i		3121273	0					
ANR	3122526	ShiftExpression	( offset - FIMD_HUECOEFCB_START ) >> 2		3121273	1		>>			
ANR	3122527	AdditiveExpression	offset - FIMD_HUECOEFCB_START		3121273	0		-			
ANR	3122528	Identifier	offset		3121273	0					
ANR	3122529	Identifier	FIMD_HUECOEFCB_START		3121273	1					
ANR	3122530	PrimaryExpression	2		3121273	1					
ANR	3122531	ExpressionStatement	s -> huecoef_cb [ i ] = val	441:8:8699:8721	3121273	156	True				
ANR	3122532	AssignmentExpression	s -> huecoef_cb [ i ] = val		3121273	0		=			
ANR	3122533	ArrayIndexing	s -> huecoef_cb [ i ]		3121273	0					
ANR	3122534	PtrMemberAccess	s -> huecoef_cb		3121273	0					
ANR	3122535	Identifier	s		3121273	0					
ANR	3122536	Identifier	huecoef_cb		3121273	1					
ANR	3122537	Identifier	i		3121273	1					
ANR	3122538	Identifier	val		3121273	1					
ANR	3122539	BreakStatement	break ;	443:8:8732:8737	3121273	157	True				
ANR	3122540	Label	case FIMD_HUEOFFSET :	445:4:8744:8763	3121273	158	True				
ANR	3122541	Identifier	FIMD_HUEOFFSET		3121273	0					
ANR	3122542	ExpressionStatement	s -> hueoffset = val	447:8:8774:8792	3121273	159	True				
ANR	3122543	AssignmentExpression	s -> hueoffset = val		3121273	0		=			
ANR	3122544	PtrMemberAccess	s -> hueoffset		3121273	0					
ANR	3122545	Identifier	s		3121273	0					
ANR	3122546	Identifier	hueoffset		3121273	1					
ANR	3122547	Identifier	val		3121273	1					
ANR	3122548	BreakStatement	break ;	449:8:8803:8808	3121273	160	True				
ANR	3122549	Statement	case	451:4:8815:8818	3121273	161	True				
ANR	3122550	Statement	FIMD_VIDWALPHA_START	451:9:8820:8839	3121273	162	True				
ANR	3122551	Statement	...	451:30:8841:8843	3121273	163	True				
ANR	3122552	Label	FIMD_VIDWALPHA_END :	451:34:8845:8863	3121273	164	True				
ANR	3122553	Identifier	FIMD_VIDWALPHA_END		3121273	0					
ANR	3122554	ExpressionStatement	w = ( ( offset - FIMD_VIDWALPHA_START ) >> 3 )	453:8:8874:8916	3121273	165	True				
ANR	3122555	AssignmentExpression	w = ( ( offset - FIMD_VIDWALPHA_START ) >> 3 )		3121273	0		=			
ANR	3122556	Identifier	w		3121273	0					
ANR	3122557	ShiftExpression	( offset - FIMD_VIDWALPHA_START ) >> 3		3121273	1		>>			
ANR	3122558	AdditiveExpression	offset - FIMD_VIDWALPHA_START		3121273	0		-			
ANR	3122559	Identifier	offset		3121273	0					
ANR	3122560	Identifier	FIMD_VIDWALPHA_START		3121273	1					
ANR	3122561	PrimaryExpression	3		3121273	1					
ANR	3122562	ExpressionStatement	i = ( ( offset - FIMD_VIDWALPHA_START ) >> 2 ) & 1	455:8:8927:8973	3121273	166	True				
ANR	3122563	AssignmentExpression	i = ( ( offset - FIMD_VIDWALPHA_START ) >> 2 ) & 1		3121273	0		=			
ANR	3122564	Identifier	i		3121273	0					
ANR	3122565	BitAndExpression	( ( offset - FIMD_VIDWALPHA_START ) >> 2 ) & 1		3121273	1		&			
ANR	3122566	ShiftExpression	( offset - FIMD_VIDWALPHA_START ) >> 2		3121273	0		>>			
ANR	3122567	AdditiveExpression	offset - FIMD_VIDWALPHA_START		3121273	0		-			
ANR	3122568	Identifier	offset		3121273	0					
ANR	3122569	Identifier	FIMD_VIDWALPHA_START		3121273	1					
ANR	3122570	PrimaryExpression	2		3121273	1					
ANR	3122571	PrimaryExpression	1		3121273	1					
ANR	3122572	IfStatement	if ( w == 0 )		3121273	167					
ANR	3122573	Condition	w == 0	457:12:8988:8993	3121273	0	True				
ANR	3122574	EqualityExpression	w == 0		3121273	0		==			
ANR	3122575	Identifier	w		3121273	0					
ANR	3122576	PrimaryExpression	0		3121273	1					
ANR	3122577	CompoundStatement		453:20:8859:8859	3121273	1					
ANR	3122578	ExpressionStatement	s -> window [ w ] . alpha_val [ i ] = val	459:12:9011:9042	3121273	0	True				
ANR	3122579	AssignmentExpression	s -> window [ w ] . alpha_val [ i ] = val		3121273	0		=			
ANR	3122580	ArrayIndexing	s -> window [ w ] . alpha_val [ i ]		3121273	0					
ANR	3122581	MemberAccess	s -> window [ w ] . alpha_val		3121273	0					
ANR	3122582	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122583	PtrMemberAccess	s -> window		3121273	0					
ANR	3122584	Identifier	s		3121273	0					
ANR	3122585	Identifier	window		3121273	1					
ANR	3122586	Identifier	w		3121273	1					
ANR	3122587	Identifier	alpha_val		3121273	1					
ANR	3122588	Identifier	i		3121273	1					
ANR	3122589	Identifier	val		3121273	1					
ANR	3122590	ElseStatement	else		3121273	0					
ANR	3122591	CompoundStatement		457:15:8923:8923	3121273	0					
ANR	3122592	ExpressionStatement	s -> window [ w ] . alpha_val [ i ] = ( val & FIMD_VIDALPHA_ALPHA_LOWER ) | ( s -> window [ w ] . alpha_val [ i ] & FIMD_VIDALPHA_ALPHA_UPPER )	463:12:9075:9211	3121273	0	True				
ANR	3122593	AssignmentExpression	s -> window [ w ] . alpha_val [ i ] = ( val & FIMD_VIDALPHA_ALPHA_LOWER ) | ( s -> window [ w ] . alpha_val [ i ] & FIMD_VIDALPHA_ALPHA_UPPER )		3121273	0		=			
ANR	3122594	ArrayIndexing	s -> window [ w ] . alpha_val [ i ]		3121273	0					
ANR	3122595	MemberAccess	s -> window [ w ] . alpha_val		3121273	0					
ANR	3122596	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122597	PtrMemberAccess	s -> window		3121273	0					
ANR	3122598	Identifier	s		3121273	0					
ANR	3122599	Identifier	window		3121273	1					
ANR	3122600	Identifier	w		3121273	1					
ANR	3122601	Identifier	alpha_val		3121273	1					
ANR	3122602	Identifier	i		3121273	1					
ANR	3122603	InclusiveOrExpression	( val & FIMD_VIDALPHA_ALPHA_LOWER ) | ( s -> window [ w ] . alpha_val [ i ] & FIMD_VIDALPHA_ALPHA_UPPER )		3121273	1		|			
ANR	3122604	BitAndExpression	val & FIMD_VIDALPHA_ALPHA_LOWER		3121273	0		&			
ANR	3122605	Identifier	val		3121273	0					
ANR	3122606	Identifier	FIMD_VIDALPHA_ALPHA_LOWER		3121273	1					
ANR	3122607	BitAndExpression	s -> window [ w ] . alpha_val [ i ] & FIMD_VIDALPHA_ALPHA_UPPER		3121273	1		&			
ANR	3122608	ArrayIndexing	s -> window [ w ] . alpha_val [ i ]		3121273	0					
ANR	3122609	MemberAccess	s -> window [ w ] . alpha_val		3121273	0					
ANR	3122610	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122611	PtrMemberAccess	s -> window		3121273	0					
ANR	3122612	Identifier	s		3121273	0					
ANR	3122613	Identifier	window		3121273	1					
ANR	3122614	Identifier	w		3121273	1					
ANR	3122615	Identifier	alpha_val		3121273	1					
ANR	3122616	Identifier	i		3121273	1					
ANR	3122617	Identifier	FIMD_VIDALPHA_ALPHA_UPPER		3121273	1					
ANR	3122618	BreakStatement	break ;	469:8:9233:9238	3121273	168	True				
ANR	3122619	Statement	case	471:4:9245:9248	3121273	169	True				
ANR	3122620	Statement	FIMD_BLENDEQ_START	471:9:9250:9267	3121273	170	True				
ANR	3122621	Statement	...	471:28:9269:9271	3121273	171	True				
ANR	3122622	Label	FIMD_BLENDEQ_END :	471:32:9273:9289	3121273	172	True				
ANR	3122623	Identifier	FIMD_BLENDEQ_END		3121273	0					
ANR	3122624	ExpressionStatement	s -> window [ ( offset - FIMD_BLENDEQ_START ) >> 2 ] . blendeq = val	473:8:9300:9359	3121273	173	True				
ANR	3122625	AssignmentExpression	s -> window [ ( offset - FIMD_BLENDEQ_START ) >> 2 ] . blendeq = val		3121273	0		=			
ANR	3122626	MemberAccess	s -> window [ ( offset - FIMD_BLENDEQ_START ) >> 2 ] . blendeq		3121273	0					
ANR	3122627	ArrayIndexing	s -> window [ ( offset - FIMD_BLENDEQ_START ) >> 2 ]		3121273	0					
ANR	3122628	PtrMemberAccess	s -> window		3121273	0					
ANR	3122629	Identifier	s		3121273	0					
ANR	3122630	Identifier	window		3121273	1					
ANR	3122631	ShiftExpression	( offset - FIMD_BLENDEQ_START ) >> 2		3121273	1		>>			
ANR	3122632	AdditiveExpression	offset - FIMD_BLENDEQ_START		3121273	0		-			
ANR	3122633	Identifier	offset		3121273	0					
ANR	3122634	Identifier	FIMD_BLENDEQ_START		3121273	1					
ANR	3122635	PrimaryExpression	2		3121273	1					
ANR	3122636	Identifier	blendeq		3121273	1					
ANR	3122637	Identifier	val		3121273	1					
ANR	3122638	BreakStatement	break ;	475:8:9370:9375	3121273	174	True				
ANR	3122639	Label	case FIMD_BLENDCON :	477:4:9382:9400	3121273	175	True				
ANR	3122640	Identifier	FIMD_BLENDCON		3121273	0					
ANR	3122641	ExpressionStatement	old_value = s -> blendcon	479:8:9411:9434	3121273	176	True				
ANR	3122642	AssignmentExpression	old_value = s -> blendcon		3121273	0		=			
ANR	3122643	Identifier	old_value		3121273	0					
ANR	3122644	PtrMemberAccess	s -> blendcon		3121273	1					
ANR	3122645	Identifier	s		3121273	0					
ANR	3122646	Identifier	blendcon		3121273	1					
ANR	3122647	ExpressionStatement	s -> blendcon = val	481:8:9445:9462	3121273	177	True				
ANR	3122648	AssignmentExpression	s -> blendcon = val		3121273	0		=			
ANR	3122649	PtrMemberAccess	s -> blendcon		3121273	0					
ANR	3122650	Identifier	s		3121273	0					
ANR	3122651	Identifier	blendcon		3121273	1					
ANR	3122652	Identifier	val		3121273	1					
ANR	3122653	IfStatement	if ( ( s -> blendcon & FIMD_ALPHA_8BIT ) != ( old_value & FIMD_ALPHA_8BIT ) )		3121273	178					
ANR	3122654	Condition	( s -> blendcon & FIMD_ALPHA_8BIT ) != ( old_value & FIMD_ALPHA_8BIT )	483:12:9477:9540	3121273	0	True				
ANR	3122655	EqualityExpression	( s -> blendcon & FIMD_ALPHA_8BIT ) != ( old_value & FIMD_ALPHA_8BIT )		3121273	0		!=			
ANR	3122656	BitAndExpression	s -> blendcon & FIMD_ALPHA_8BIT		3121273	0		&			
ANR	3122657	PtrMemberAccess	s -> blendcon		3121273	0					
ANR	3122658	Identifier	s		3121273	0					
ANR	3122659	Identifier	blendcon		3121273	1					
ANR	3122660	Identifier	FIMD_ALPHA_8BIT		3121273	1					
ANR	3122661	BitAndExpression	old_value & FIMD_ALPHA_8BIT		3121273	1		&			
ANR	3122662	Identifier	old_value		3121273	0					
ANR	3122663	Identifier	FIMD_ALPHA_8BIT		3121273	1					
ANR	3122664	CompoundStatement		479:78:9406:9406	3121273	1					
ANR	3122665	ForStatement	for ( w = 0 ; w < NUM_OF_WINDOWS ; w ++ )		3121273	0					
ANR	3122666	ForInit	w = 0 ;	485:17:9563:9568	3121273	0	True				
ANR	3122667	AssignmentExpression	w = 0		3121273	0		=			
ANR	3122668	Identifier	w		3121273	0					
ANR	3122669	PrimaryExpression	0		3121273	1					
ANR	3122670	Condition	w < NUM_OF_WINDOWS	485:24:9570:9587	3121273	1	True				
ANR	3122671	RelationalExpression	w < NUM_OF_WINDOWS		3121273	0		<			
ANR	3122672	Identifier	w		3121273	0					
ANR	3122673	Identifier	NUM_OF_WINDOWS		3121273	1					
ANR	3122674	PostIncDecOperationExpression	w ++	485:44:9590:9592	3121273	2	True				
ANR	3122675	Identifier	w		3121273	0					
ANR	3122676	IncDec	++		3121273	1					
ANR	3122677	CompoundStatement		481:49:9458:9458	3121273	3					
ANR	3122678	ExpressionStatement	"fimd_update_get_alpha ( s , w )"	487:16:9614:9641	3121273	0	True				
ANR	3122679	CallExpression	"fimd_update_get_alpha ( s , w )"		3121273	0					
ANR	3122680	Callee	fimd_update_get_alpha		3121273	0					
ANR	3122681	Identifier	fimd_update_get_alpha		3121273	0					
ANR	3122682	ArgumentList	s		3121273	1					
ANR	3122683	Argument	s		3121273	0					
ANR	3122684	Identifier	s		3121273	0					
ANR	3122685	Argument	w		3121273	1					
ANR	3122686	Identifier	w		3121273	0					
ANR	3122687	BreakStatement	break ;	493:8:9678:9683	3121273	179	True				
ANR	3122688	Statement	case	495:4:9690:9693	3121273	180	True				
ANR	3122689	Statement	FIMD_WRTQOSCON_START	495:9:9695:9714	3121273	181	True				
ANR	3122690	Statement	...	495:30:9716:9718	3121273	182	True				
ANR	3122691	Label	FIMD_WRTQOSCON_END :	495:34:9720:9738	3121273	183	True				
ANR	3122692	Identifier	FIMD_WRTQOSCON_END		3121273	0					
ANR	3122693	ExpressionStatement	s -> window [ ( offset - FIMD_WRTQOSCON_START ) >> 2 ] . rtqoscon = val	497:8:9749:9811	3121273	184	True				
ANR	3122694	AssignmentExpression	s -> window [ ( offset - FIMD_WRTQOSCON_START ) >> 2 ] . rtqoscon = val		3121273	0		=			
ANR	3122695	MemberAccess	s -> window [ ( offset - FIMD_WRTQOSCON_START ) >> 2 ] . rtqoscon		3121273	0					
ANR	3122696	ArrayIndexing	s -> window [ ( offset - FIMD_WRTQOSCON_START ) >> 2 ]		3121273	0					
ANR	3122697	PtrMemberAccess	s -> window		3121273	0					
ANR	3122698	Identifier	s		3121273	0					
ANR	3122699	Identifier	window		3121273	1					
ANR	3122700	ShiftExpression	( offset - FIMD_WRTQOSCON_START ) >> 2		3121273	1		>>			
ANR	3122701	AdditiveExpression	offset - FIMD_WRTQOSCON_START		3121273	0		-			
ANR	3122702	Identifier	offset		3121273	0					
ANR	3122703	Identifier	FIMD_WRTQOSCON_START		3121273	1					
ANR	3122704	PrimaryExpression	2		3121273	1					
ANR	3122705	Identifier	rtqoscon		3121273	1					
ANR	3122706	Identifier	val		3121273	1					
ANR	3122707	BreakStatement	break ;	499:8:9822:9827	3121273	185	True				
ANR	3122708	Statement	case	501:4:9834:9837	3121273	186	True				
ANR	3122709	Statement	FIMD_I80IFCMD_START	501:9:9839:9857	3121273	187	True				
ANR	3122710	Statement	...	501:29:9859:9861	3121273	188	True				
ANR	3122711	Label	FIMD_I80IFCMD_END :	501:33:9863:9880	3121273	189	True				
ANR	3122712	Identifier	FIMD_I80IFCMD_END		3121273	0					
ANR	3122713	ExpressionStatement	s -> i80ifcmd [ ( offset - FIMD_I80IFCMD_START ) >> 2 ] = val	503:8:9891:9945	3121273	190	True				
ANR	3122714	AssignmentExpression	s -> i80ifcmd [ ( offset - FIMD_I80IFCMD_START ) >> 2 ] = val		3121273	0		=			
ANR	3122715	ArrayIndexing	s -> i80ifcmd [ ( offset - FIMD_I80IFCMD_START ) >> 2 ]		3121273	0					
ANR	3122716	PtrMemberAccess	s -> i80ifcmd		3121273	0					
ANR	3122717	Identifier	s		3121273	0					
ANR	3122718	Identifier	i80ifcmd		3121273	1					
ANR	3122719	ShiftExpression	( offset - FIMD_I80IFCMD_START ) >> 2		3121273	1		>>			
ANR	3122720	AdditiveExpression	offset - FIMD_I80IFCMD_START		3121273	0		-			
ANR	3122721	Identifier	offset		3121273	0					
ANR	3122722	Identifier	FIMD_I80IFCMD_START		3121273	1					
ANR	3122723	PrimaryExpression	2		3121273	1					
ANR	3122724	Identifier	val		3121273	1					
ANR	3122725	BreakStatement	break ;	505:8:9956:9961	3121273	191	True				
ANR	3122726	Statement	case	507:4:9968:9971	3121273	192	True				
ANR	3122727	Statement	FIMD_VIDW0ADD0_B2	507:9:9973:9989	3121273	193	True				
ANR	3122728	Statement	...	507:27:9991:9993	3121273	194	True				
ANR	3122729	Label	FIMD_VIDW4ADD0_B2 :	507:31:9995:10012	3121273	195	True				
ANR	3122730	Identifier	FIMD_VIDW4ADD0_B2		3121273	0					
ANR	3122731	IfStatement	if ( offset & 0x0004 )		3121273	196					
ANR	3122732	Condition	offset & 0x0004	509:12:10027:10041	3121273	0	True				
ANR	3122733	BitAndExpression	offset & 0x0004		3121273	0		&			
ANR	3122734	Identifier	offset		3121273	0					
ANR	3122735	PrimaryExpression	0x0004		3121273	1					
ANR	3122736	CompoundStatement		505:29:9907:9907	3121273	1					
ANR	3122737	ExpressionStatement	"DPRINT_ERROR ( ""bad write offset 0x%08x\\n"" , offset )"	511:12:10059:10108	3121273	0	True				
ANR	3122738	CallExpression	"DPRINT_ERROR ( ""bad write offset 0x%08x\\n"" , offset )"		3121273	0					
ANR	3122739	Callee	DPRINT_ERROR		3121273	0					
ANR	3122740	Identifier	DPRINT_ERROR		3121273	0					
ANR	3122741	ArgumentList	"""bad write offset 0x%08x\\n"""		3121273	1					
ANR	3122742	Argument	"""bad write offset 0x%08x\\n"""		3121273	0					
ANR	3122743	PrimaryExpression	"""bad write offset 0x%08x\\n"""		3121273	0					
ANR	3122744	Argument	offset		3121273	1					
ANR	3122745	Identifier	offset		3121273	0					
ANR	3122746	BreakStatement	break ;	513:12:10123:10128	3121273	1	True				
ANR	3122747	ExpressionStatement	w = ( offset - FIMD_VIDW0ADD0_B2 ) >> 3	517:8:10150:10187	3121273	197	True				
ANR	3122748	AssignmentExpression	w = ( offset - FIMD_VIDW0ADD0_B2 ) >> 3		3121273	0		=			
ANR	3122749	Identifier	w		3121273	0					
ANR	3122750	ShiftExpression	( offset - FIMD_VIDW0ADD0_B2 ) >> 3		3121273	1		>>			
ANR	3122751	AdditiveExpression	offset - FIMD_VIDW0ADD0_B2		3121273	0		-			
ANR	3122752	Identifier	offset		3121273	0					
ANR	3122753	Identifier	FIMD_VIDW0ADD0_B2		3121273	1					
ANR	3122754	PrimaryExpression	3		3121273	1					
ANR	3122755	IfStatement	if ( fimd_get_buffer_id ( & s -> window [ w ] ) == 2 && s -> window [ w ] . buf_start [ 2 ] != val )		3121273	198					
ANR	3122756	Condition	fimd_get_buffer_id ( & s -> window [ w ] ) == 2 && s -> window [ w ] . buf_start [ 2 ] != val	519:12:10202:10292	3121273	0	True				
ANR	3122757	AndExpression	fimd_get_buffer_id ( & s -> window [ w ] ) == 2 && s -> window [ w ] . buf_start [ 2 ] != val		3121273	0		&&			
ANR	3122758	EqualityExpression	fimd_get_buffer_id ( & s -> window [ w ] ) == 2		3121273	0		==			
ANR	3122759	CallExpression	fimd_get_buffer_id ( & s -> window [ w ] )		3121273	0					
ANR	3122760	Callee	fimd_get_buffer_id		3121273	0					
ANR	3122761	Identifier	fimd_get_buffer_id		3121273	0					
ANR	3122762	ArgumentList	& s -> window [ w ]		3121273	1					
ANR	3122763	Argument	& s -> window [ w ]		3121273	0					
ANR	3122764	UnaryOperationExpression	& s -> window [ w ]		3121273	0					
ANR	3122765	UnaryOperator	&		3121273	0					
ANR	3122766	ArrayIndexing	s -> window [ w ]		3121273	1					
ANR	3122767	PtrMemberAccess	s -> window		3121273	0					
ANR	3122768	Identifier	s		3121273	0					
ANR	3122769	Identifier	window		3121273	1					
ANR	3122770	Identifier	w		3121273	1					
ANR	3122771	PrimaryExpression	2		3121273	1					
ANR	3122772	EqualityExpression	s -> window [ w ] . buf_start [ 2 ] != val		3121273	1		!=			
ANR	3122773	ArrayIndexing	s -> window [ w ] . buf_start [ 2 ]		3121273	0					
ANR	3122774	MemberAccess	s -> window [ w ] . buf_start		3121273	0					
ANR	3122775	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122776	PtrMemberAccess	s -> window		3121273	0					
ANR	3122777	Identifier	s		3121273	0					
ANR	3122778	Identifier	window		3121273	1					
ANR	3122779	Identifier	w		3121273	1					
ANR	3122780	Identifier	buf_start		3121273	1					
ANR	3122781	PrimaryExpression	2		3121273	1					
ANR	3122782	Identifier	val		3121273	1					
ANR	3122783	CompoundStatement		517:50:10158:10158	3121273	1					
ANR	3122784	ExpressionStatement	s -> window [ w ] . buf_start [ 2 ] = val	523:12:10310:10341	3121273	0	True				
ANR	3122785	AssignmentExpression	s -> window [ w ] . buf_start [ 2 ] = val		3121273	0		=			
ANR	3122786	ArrayIndexing	s -> window [ w ] . buf_start [ 2 ]		3121273	0					
ANR	3122787	MemberAccess	s -> window [ w ] . buf_start		3121273	0					
ANR	3122788	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122789	PtrMemberAccess	s -> window		3121273	0					
ANR	3122790	Identifier	s		3121273	0					
ANR	3122791	Identifier	window		3121273	1					
ANR	3122792	Identifier	w		3121273	1					
ANR	3122793	Identifier	buf_start		3121273	1					
ANR	3122794	PrimaryExpression	2		3121273	1					
ANR	3122795	Identifier	val		3121273	1					
ANR	3122796	ExpressionStatement	"fimd_update_memory_section ( s , w )"	525:12:10356:10388	3121273	1	True				
ANR	3122797	CallExpression	"fimd_update_memory_section ( s , w )"		3121273	0					
ANR	3122798	Callee	fimd_update_memory_section		3121273	0					
ANR	3122799	Identifier	fimd_update_memory_section		3121273	0					
ANR	3122800	ArgumentList	s		3121273	1					
ANR	3122801	Argument	s		3121273	0					
ANR	3122802	Identifier	s		3121273	0					
ANR	3122803	Argument	w		3121273	1					
ANR	3122804	Identifier	w		3121273	0					
ANR	3122805	BreakStatement	break ;	527:12:10403:10408	3121273	2	True				
ANR	3122806	ExpressionStatement	s -> window [ w ] . buf_start [ 2 ] = val	531:8:10430:10461	3121273	199	True				
ANR	3122807	AssignmentExpression	s -> window [ w ] . buf_start [ 2 ] = val		3121273	0		=			
ANR	3122808	ArrayIndexing	s -> window [ w ] . buf_start [ 2 ]		3121273	0					
ANR	3122809	MemberAccess	s -> window [ w ] . buf_start		3121273	0					
ANR	3122810	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122811	PtrMemberAccess	s -> window		3121273	0					
ANR	3122812	Identifier	s		3121273	0					
ANR	3122813	Identifier	window		3121273	1					
ANR	3122814	Identifier	w		3121273	1					
ANR	3122815	Identifier	buf_start		3121273	1					
ANR	3122816	PrimaryExpression	2		3121273	1					
ANR	3122817	Identifier	val		3121273	1					
ANR	3122818	BreakStatement	break ;	533:8:10472:10477	3121273	200	True				
ANR	3122819	Statement	case	535:4:10484:10487	3121273	201	True				
ANR	3122820	Statement	FIMD_SHD_ADD0_START	535:9:10489:10507	3121273	202	True				
ANR	3122821	Statement	...	535:29:10509:10511	3121273	203	True				
ANR	3122822	Label	FIMD_SHD_ADD0_END :	535:33:10513:10530	3121273	204	True				
ANR	3122823	Identifier	FIMD_SHD_ADD0_END		3121273	0					
ANR	3122824	IfStatement	if ( offset & 0x0004 )		3121273	205					
ANR	3122825	Condition	offset & 0x0004	537:12:10545:10559	3121273	0	True				
ANR	3122826	BitAndExpression	offset & 0x0004		3121273	0		&			
ANR	3122827	Identifier	offset		3121273	0					
ANR	3122828	PrimaryExpression	0x0004		3121273	1					
ANR	3122829	CompoundStatement		533:29:10425:10425	3121273	1					
ANR	3122830	ExpressionStatement	"DPRINT_ERROR ( ""bad write offset 0x%08x\\n"" , offset )"	539:12:10577:10626	3121273	0	True				
ANR	3122831	CallExpression	"DPRINT_ERROR ( ""bad write offset 0x%08x\\n"" , offset )"		3121273	0					
ANR	3122832	Callee	DPRINT_ERROR		3121273	0					
ANR	3122833	Identifier	DPRINT_ERROR		3121273	0					
ANR	3122834	ArgumentList	"""bad write offset 0x%08x\\n"""		3121273	1					
ANR	3122835	Argument	"""bad write offset 0x%08x\\n"""		3121273	0					
ANR	3122836	PrimaryExpression	"""bad write offset 0x%08x\\n"""		3121273	0					
ANR	3122837	Argument	offset		3121273	1					
ANR	3122838	Identifier	offset		3121273	0					
ANR	3122839	BreakStatement	break ;	541:12:10641:10646	3121273	1	True				
ANR	3122840	ExpressionStatement	s -> window [ ( offset - FIMD_SHD_ADD0_START ) >> 3 ] . shadow_buf_start = val	545:8:10668:10737	3121273	206	True				
ANR	3122841	AssignmentExpression	s -> window [ ( offset - FIMD_SHD_ADD0_START ) >> 3 ] . shadow_buf_start = val		3121273	0		=			
ANR	3122842	MemberAccess	s -> window [ ( offset - FIMD_SHD_ADD0_START ) >> 3 ] . shadow_buf_start		3121273	0					
ANR	3122843	ArrayIndexing	s -> window [ ( offset - FIMD_SHD_ADD0_START ) >> 3 ]		3121273	0					
ANR	3122844	PtrMemberAccess	s -> window		3121273	0					
ANR	3122845	Identifier	s		3121273	0					
ANR	3122846	Identifier	window		3121273	1					
ANR	3122847	ShiftExpression	( offset - FIMD_SHD_ADD0_START ) >> 3		3121273	1		>>			
ANR	3122848	AdditiveExpression	offset - FIMD_SHD_ADD0_START		3121273	0		-			
ANR	3122849	Identifier	offset		3121273	0					
ANR	3122850	Identifier	FIMD_SHD_ADD0_START		3121273	1					
ANR	3122851	PrimaryExpression	3		3121273	1					
ANR	3122852	Identifier	shadow_buf_start		3121273	1					
ANR	3122853	Identifier	val		3121273	1					
ANR	3122854	BreakStatement	break ;	547:8:10748:10753	3121273	207	True				
ANR	3122855	Statement	case	549:4:10760:10763	3121273	208	True				
ANR	3122856	Statement	FIMD_SHD_ADD1_START	549:9:10765:10783	3121273	209	True				
ANR	3122857	Statement	...	549:29:10785:10787	3121273	210	True				
ANR	3122858	Label	FIMD_SHD_ADD1_END :	549:33:10789:10806	3121273	211	True				
ANR	3122859	Identifier	FIMD_SHD_ADD1_END		3121273	0					
ANR	3122860	IfStatement	if ( offset & 0x0004 )		3121273	212					
ANR	3122861	Condition	offset & 0x0004	551:12:10821:10835	3121273	0	True				
ANR	3122862	BitAndExpression	offset & 0x0004		3121273	0		&			
ANR	3122863	Identifier	offset		3121273	0					
ANR	3122864	PrimaryExpression	0x0004		3121273	1					
ANR	3122865	CompoundStatement		547:29:10701:10701	3121273	1					
ANR	3122866	ExpressionStatement	"DPRINT_ERROR ( ""bad write offset 0x%08x\\n"" , offset )"	553:12:10853:10902	3121273	0	True				
ANR	3122867	CallExpression	"DPRINT_ERROR ( ""bad write offset 0x%08x\\n"" , offset )"		3121273	0					
ANR	3122868	Callee	DPRINT_ERROR		3121273	0					
ANR	3122869	Identifier	DPRINT_ERROR		3121273	0					
ANR	3122870	ArgumentList	"""bad write offset 0x%08x\\n"""		3121273	1					
ANR	3122871	Argument	"""bad write offset 0x%08x\\n"""		3121273	0					
ANR	3122872	PrimaryExpression	"""bad write offset 0x%08x\\n"""		3121273	0					
ANR	3122873	Argument	offset		3121273	1					
ANR	3122874	Identifier	offset		3121273	0					
ANR	3122875	BreakStatement	break ;	555:12:10917:10922	3121273	1	True				
ANR	3122876	ExpressionStatement	s -> window [ ( offset - FIMD_SHD_ADD1_START ) >> 3 ] . shadow_buf_end = val	559:8:10944:11011	3121273	213	True				
ANR	3122877	AssignmentExpression	s -> window [ ( offset - FIMD_SHD_ADD1_START ) >> 3 ] . shadow_buf_end = val		3121273	0		=			
ANR	3122878	MemberAccess	s -> window [ ( offset - FIMD_SHD_ADD1_START ) >> 3 ] . shadow_buf_end		3121273	0					
ANR	3122879	ArrayIndexing	s -> window [ ( offset - FIMD_SHD_ADD1_START ) >> 3 ]		3121273	0					
ANR	3122880	PtrMemberAccess	s -> window		3121273	0					
ANR	3122881	Identifier	s		3121273	0					
ANR	3122882	Identifier	window		3121273	1					
ANR	3122883	ShiftExpression	( offset - FIMD_SHD_ADD1_START ) >> 3		3121273	1		>>			
ANR	3122884	AdditiveExpression	offset - FIMD_SHD_ADD1_START		3121273	0		-			
ANR	3122885	Identifier	offset		3121273	0					
ANR	3122886	Identifier	FIMD_SHD_ADD1_START		3121273	1					
ANR	3122887	PrimaryExpression	3		3121273	1					
ANR	3122888	Identifier	shadow_buf_end		3121273	1					
ANR	3122889	Identifier	val		3121273	1					
ANR	3122890	BreakStatement	break ;	561:8:11022:11027	3121273	214	True				
ANR	3122891	Statement	case	563:4:11034:11037	3121273	215	True				
ANR	3122892	Statement	FIMD_SHD_ADD2_START	563:9:11039:11057	3121273	216	True				
ANR	3122893	Statement	...	563:29:11059:11061	3121273	217	True				
ANR	3122894	Label	FIMD_SHD_ADD2_END :	563:33:11063:11080	3121273	218	True				
ANR	3122895	Identifier	FIMD_SHD_ADD2_END		3121273	0					
ANR	3122896	ExpressionStatement	s -> window [ ( offset - FIMD_SHD_ADD2_START ) >> 2 ] . shadow_buf_size = val	565:8:11091:11159	3121273	219	True				
ANR	3122897	AssignmentExpression	s -> window [ ( offset - FIMD_SHD_ADD2_START ) >> 2 ] . shadow_buf_size = val		3121273	0		=			
ANR	3122898	MemberAccess	s -> window [ ( offset - FIMD_SHD_ADD2_START ) >> 2 ] . shadow_buf_size		3121273	0					
ANR	3122899	ArrayIndexing	s -> window [ ( offset - FIMD_SHD_ADD2_START ) >> 2 ]		3121273	0					
ANR	3122900	PtrMemberAccess	s -> window		3121273	0					
ANR	3122901	Identifier	s		3121273	0					
ANR	3122902	Identifier	window		3121273	1					
ANR	3122903	ShiftExpression	( offset - FIMD_SHD_ADD2_START ) >> 2		3121273	1		>>			
ANR	3122904	AdditiveExpression	offset - FIMD_SHD_ADD2_START		3121273	0		-			
ANR	3122905	Identifier	offset		3121273	0					
ANR	3122906	Identifier	FIMD_SHD_ADD2_START		3121273	1					
ANR	3122907	PrimaryExpression	2		3121273	1					
ANR	3122908	Identifier	shadow_buf_size		3121273	1					
ANR	3122909	Identifier	val		3121273	1					
ANR	3122910	BreakStatement	break ;	567:8:11170:11175	3121273	220	True				
ANR	3122911	Statement	case	569:4:11182:11185	3121273	221	True				
ANR	3122912	Statement	FIMD_PAL_MEM_START	569:9:11187:11204	3121273	222	True				
ANR	3122913	Statement	...	569:28:11206:11208	3121273	223	True				
ANR	3122914	Label	FIMD_PAL_MEM_END :	569:32:11210:11226	3121273	224	True				
ANR	3122915	Identifier	FIMD_PAL_MEM_END		3121273	0					
ANR	3122916	ExpressionStatement	w = ( offset - FIMD_PAL_MEM_START ) >> 10	571:8:11237:11276	3121273	225	True				
ANR	3122917	AssignmentExpression	w = ( offset - FIMD_PAL_MEM_START ) >> 10		3121273	0		=			
ANR	3122918	Identifier	w		3121273	0					
ANR	3122919	ShiftExpression	( offset - FIMD_PAL_MEM_START ) >> 10		3121273	1		>>			
ANR	3122920	AdditiveExpression	offset - FIMD_PAL_MEM_START		3121273	0		-			
ANR	3122921	Identifier	offset		3121273	0					
ANR	3122922	Identifier	FIMD_PAL_MEM_START		3121273	1					
ANR	3122923	PrimaryExpression	10		3121273	1					
ANR	3122924	ExpressionStatement	i = ( ( offset - FIMD_PAL_MEM_START ) >> 2 ) & 0xFF	573:8:11287:11334	3121273	226	True				
ANR	3122925	AssignmentExpression	i = ( ( offset - FIMD_PAL_MEM_START ) >> 2 ) & 0xFF		3121273	0		=			
ANR	3122926	Identifier	i		3121273	0					
ANR	3122927	BitAndExpression	( ( offset - FIMD_PAL_MEM_START ) >> 2 ) & 0xFF		3121273	1		&			
ANR	3122928	ShiftExpression	( offset - FIMD_PAL_MEM_START ) >> 2		3121273	0		>>			
ANR	3122929	AdditiveExpression	offset - FIMD_PAL_MEM_START		3121273	0		-			
ANR	3122930	Identifier	offset		3121273	0					
ANR	3122931	Identifier	FIMD_PAL_MEM_START		3121273	1					
ANR	3122932	PrimaryExpression	2		3121273	1					
ANR	3122933	PrimaryExpression	0xFF		3121273	1					
ANR	3122934	ExpressionStatement	s -> window [ w ] . palette [ i ] = val	575:8:11345:11374	3121273	227	True				
ANR	3122935	AssignmentExpression	s -> window [ w ] . palette [ i ] = val		3121273	0		=			
ANR	3122936	ArrayIndexing	s -> window [ w ] . palette [ i ]		3121273	0					
ANR	3122937	MemberAccess	s -> window [ w ] . palette		3121273	0					
ANR	3122938	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122939	PtrMemberAccess	s -> window		3121273	0					
ANR	3122940	Identifier	s		3121273	0					
ANR	3122941	Identifier	window		3121273	1					
ANR	3122942	Identifier	w		3121273	1					
ANR	3122943	Identifier	palette		3121273	1					
ANR	3122944	Identifier	i		3121273	1					
ANR	3122945	Identifier	val		3121273	1					
ANR	3122946	BreakStatement	break ;	577:8:11385:11390	3121273	228	True				
ANR	3122947	Statement	case	579:4:11397:11400	3121273	229	True				
ANR	3122948	Statement	FIMD_PALMEM_AL_START	579:9:11402:11421	3121273	230	True				
ANR	3122949	Statement	...	579:30:11423:11425	3121273	231	True				
ANR	3122950	Label	FIMD_PALMEM_AL_END :	579:34:11427:11445	3121273	232	True				
ANR	3122951	Identifier	FIMD_PALMEM_AL_END		3121273	0					
ANR	3122952	ExpressionStatement	w = ( offset - FIMD_PALMEM_AL_START ) >> 10	583:8:11514:11555	3121273	233	True				
ANR	3122953	AssignmentExpression	w = ( offset - FIMD_PALMEM_AL_START ) >> 10		3121273	0		=			
ANR	3122954	Identifier	w		3121273	0					
ANR	3122955	ShiftExpression	( offset - FIMD_PALMEM_AL_START ) >> 10		3121273	1		>>			
ANR	3122956	AdditiveExpression	offset - FIMD_PALMEM_AL_START		3121273	0		-			
ANR	3122957	Identifier	offset		3121273	0					
ANR	3122958	Identifier	FIMD_PALMEM_AL_START		3121273	1					
ANR	3122959	PrimaryExpression	10		3121273	1					
ANR	3122960	ExpressionStatement	i = ( ( offset - FIMD_PALMEM_AL_START ) >> 2 ) & 0xFF	585:8:11566:11615	3121273	234	True				
ANR	3122961	AssignmentExpression	i = ( ( offset - FIMD_PALMEM_AL_START ) >> 2 ) & 0xFF		3121273	0		=			
ANR	3122962	Identifier	i		3121273	0					
ANR	3122963	BitAndExpression	( ( offset - FIMD_PALMEM_AL_START ) >> 2 ) & 0xFF		3121273	1		&			
ANR	3122964	ShiftExpression	( offset - FIMD_PALMEM_AL_START ) >> 2		3121273	0		>>			
ANR	3122965	AdditiveExpression	offset - FIMD_PALMEM_AL_START		3121273	0		-			
ANR	3122966	Identifier	offset		3121273	0					
ANR	3122967	Identifier	FIMD_PALMEM_AL_START		3121273	1					
ANR	3122968	PrimaryExpression	2		3121273	1					
ANR	3122969	PrimaryExpression	0xFF		3121273	1					
ANR	3122970	ExpressionStatement	s -> window [ w ] . palette [ i ] = val	587:8:11626:11655	3121273	235	True				
ANR	3122971	AssignmentExpression	s -> window [ w ] . palette [ i ] = val		3121273	0		=			
ANR	3122972	ArrayIndexing	s -> window [ w ] . palette [ i ]		3121273	0					
ANR	3122973	MemberAccess	s -> window [ w ] . palette		3121273	0					
ANR	3122974	ArrayIndexing	s -> window [ w ]		3121273	0					
ANR	3122975	PtrMemberAccess	s -> window		3121273	0					
ANR	3122976	Identifier	s		3121273	0					
ANR	3122977	Identifier	window		3121273	1					
ANR	3122978	Identifier	w		3121273	1					
ANR	3122979	Identifier	palette		3121273	1					
ANR	3122980	Identifier	i		3121273	1					
ANR	3122981	Identifier	val		3121273	1					
ANR	3122982	BreakStatement	break ;	589:8:11666:11671	3121273	236	True				
ANR	3122983	Label	default :	591:4:11678:11685	3121273	237	True				
ANR	3122984	Identifier	default		3121273	0					
ANR	3122985	ExpressionStatement	"DPRINT_ERROR ( ""bad write offset 0x%08x\\n"" , offset )"	593:8:11696:11745	3121273	238	True				
ANR	3122986	CallExpression	"DPRINT_ERROR ( ""bad write offset 0x%08x\\n"" , offset )"		3121273	0					
ANR	3122987	Callee	DPRINT_ERROR		3121273	0					
ANR	3122988	Identifier	DPRINT_ERROR		3121273	0					
ANR	3122989	ArgumentList	"""bad write offset 0x%08x\\n"""		3121273	1					
ANR	3122990	Argument	"""bad write offset 0x%08x\\n"""		3121273	0					
ANR	3122991	PrimaryExpression	"""bad write offset 0x%08x\\n"""		3121273	0					
ANR	3122992	Argument	offset		3121273	1					
ANR	3122993	Identifier	offset		3121273	0					
ANR	3122994	BreakStatement	break ;	595:8:11756:11761	3121273	239	True				
ANR	3122995	ReturnType	static void		3121273	1					
ANR	3122996	Identifier	exynos4210_fimd_write		3121273	2					
ANR	3122997	ParameterList	"void * opaque , target_phys_addr_t offset , uint64_t val , unsigned size"		3121273	3					
ANR	3122998	Parameter	void * opaque	1:34:34:45	3121273	0	True				
ANR	3122999	ParameterType	void *		3121273	0					
ANR	3123000	Identifier	opaque		3121273	1					
ANR	3123001	Parameter	target_phys_addr_t offset	1:48:48:72	3121273	1	True				
ANR	3123002	ParameterType	target_phys_addr_t		3121273	0					
ANR	3123003	Identifier	offset		3121273	1					
ANR	3123004	Parameter	uint64_t val	3:30:106:117	3121273	2	True				
ANR	3123005	ParameterType	uint64_t		3121273	0					
ANR	3123006	Identifier	val		3121273	1					
ANR	3123007	Parameter	unsigned size	3:44:120:132	3121273	3	True				
ANR	3123008	ParameterType	unsigned		3121273	0					
ANR	3123009	Identifier	size		3121273	1					
ANR	3123010	CFGEntryNode	ENTRY		3121273		True				
ANR	3123011	CFGExitNode	EXIT		3121273		True				
ANR	3123012	Symbol	s -> window [ w ] . lefttop_x		3121273						
ANR	3123013	Symbol	* w		3121273						
ANR	3123014	Symbol	s -> window [ w ] . lefttop_y		3121273						
ANR	3123015	Symbol	FIMD_WINCON_BUFMODE		3121273						
ANR	3123016	Symbol	s -> sifccon		3121273						
ANR	3123017	Symbol	s -> window [ w ] . palette		3121273						
ANR	3123018	Symbol	FIMD_HUECOEFCR_START		3121273						
ANR	3123019	Symbol	FIMD_WRTQOSCON_START		3121273						
ANR	3123020	Symbol	s -> i80ifcon		3121273						
ANR	3123021	Symbol	FIMD_I80IFCON_START		3121273						
ANR	3123022	Symbol	val		3121273						
ANR	3123023	Symbol	s -> window [ w ] . keycon		3121273						
ANR	3123024	Symbol	* FIMD_WRTQOSCON_START		3121273						
ANR	3123025	Symbol	FIMD_SHD_ADD0_START		3121273						
ANR	3123026	Symbol	FIMD_WINDOW_PROTECTED		3121273						
ANR	3123027	Symbol	FIMD_VIDWADD2_OFFSIZE		3121273						
ANR	3123028	Symbol	s -> vidcon		3121273						
ANR	3123029	Symbol	~FIMD_WINCON_BUFSTATUS		3121273						
ANR	3123030	Symbol	* s -> window [ w ] . palette		3121273						
ANR	3123031	Symbol	* * * s		3121273						
ANR	3123032	Symbol	s -> wpalcon		3121273						
ANR	3123033	Symbol	* FIMD_SHD_ADD1_START		3121273						
ANR	3123034	Symbol	~FIMD_VIDCON1_ROMASK		3121273						
ANR	3123035	Symbol	size		3121273						
ANR	3123036	Symbol	FIMD_VIDOSD_ALPHA_AEN0		3121273						
ANR	3123037	Symbol	FIMD_VIDOSD_ALPHA_AEN1		3121273						
ANR	3123038	Symbol	FIMD_VIDWADD2_START		3121273						
ANR	3123039	Symbol	old_value		3121273						
ANR	3123040	Symbol	s -> window [ ( offset - FIMD_SHD_ADD0_START ) >> 3 ] . shadow_buf_start		3121273						
ANR	3123041	Symbol	FIMD_SIFCCON0		3121273						
ANR	3123042	Symbol	s -> window [ ( offset - FIMD_SHD_ADD2_START ) >> 2 ] . shadow_buf_size		3121273						
ANR	3123043	Symbol	s -> window [ ( offset - FIMD_SHD_ADD1_START ) >> 3 ] . shadow_buf_end		3121273						
ANR	3123044	Symbol	* FIMD_BLENDEQ_START		3121273						
ANR	3123045	Symbol	FIMD_VIDALPHA_ALPHA_LOWER		3121273						
ANR	3123046	Symbol	s -> window [ w ] . alpha_val		3121273						
ANR	3123047	Symbol	FIMD_WKEYCON_START		3121273						
ANR	3123048	Symbol	* * w		3121273						
ANR	3123049	Symbol	* FIMD_SHD_ADD2_START		3121273						
ANR	3123050	Symbol	* * s		3121273						
ANR	3123051	Symbol	FIMD_VIDCON1_ROMASK		3121273						
ANR	3123052	Symbol	* FIMD_VIDTCON_START		3121273						
ANR	3123053	Symbol	* s -> i80ifcon		3121273						
ANR	3123054	Symbol	FIMD_VIDCON0_ENVID		3121273						
ANR	3123055	Symbol	s -> colorgaincon		3121273						
ANR	3123056	Symbol	FIMD_PALMEM_AL_START		3121273						
ANR	3123057	Symbol	* s -> vidintcon		3121273						
ANR	3123058	Symbol	i		3121273						
ANR	3123059	Symbol	* s -> window [ w ] . buf_start		3121273						
ANR	3123060	Symbol	FIMD_VIDALPHA_ALPHA_UPPER		3121273						
ANR	3123061	Symbol	FIMD_VIDWADD2_OFFSIZE_SHIFT		3121273						
ANR	3123062	Symbol	s		3121273						
ANR	3123063	Symbol	s -> vidtcon		3121273						
ANR	3123064	Symbol	s -> vidintcon		3121273						
ANR	3123065	Symbol	s -> blendcon		3121273						
ANR	3123066	Symbol	w		3121273						
ANR	3123067	Symbol	FIMD_LDI_CMDCON0		3121273						
ANR	3123068	Symbol	s -> ldi_cmdcon		3121273						
ANR	3123069	Symbol	FIMD_VIDOSD_VER_SHIFT		3121273						
ANR	3123070	Symbol	s -> window [ ( offset - FIMD_WRTQOSCON_START ) >> 2 ] . rtqoscon		3121273						
ANR	3123071	Symbol	s -> shadowcon		3121273						
ANR	3123072	Symbol	FIMD_WPALCON_HIGH		3121273						
ANR	3123073	Symbol	* s -> vidtcon		3121273						
ANR	3123074	Symbol	FIMD_WINCON_START		3121273						
ANR	3123075	Symbol	* s -> i80ifcmd		3121273						
ANR	3123076	Symbol	FIMD_VIDOSD_COORD_MASK		3121273						
ANR	3123077	Symbol	unpack_upper_4		3121273						
ANR	3123078	Symbol	FIMD_WINCON_ROMASK		3121273						
ANR	3123079	Symbol	s -> window [ ( offset - FIMD_BLENDEQ_START ) >> 2 ] . blendeq		3121273						
ANR	3123080	Symbol	* s -> sifccon		3121273						
ANR	3123081	Symbol	FIMD_WINCON_BUFSELECT		3121273						
ANR	3123082	Symbol	FIMD_I80IFCMD_START		3121273						
ANR	3123083	Symbol	FIMD_TRIGCON_ROMASK		3121273						
ANR	3123084	Symbol	s -> window [ w ] . wincon		3121273						
ANR	3123085	Symbol	FIMD_WPALCON_UPDATEEN		3121273						
ANR	3123086	Symbol	FIMD_VIDWADD1_START		3121273						
ANR	3123087	Symbol	s -> window		3121273						
ANR	3123088	Symbol	s -> trigcon		3121273						
ANR	3123089	Symbol	FIMD_WKEYALPHA_START		3121273						
ANR	3123090	Symbol	s -> window [ w ] . virtpage_width		3121273						
ANR	3123091	Symbol	offset		3121273						
ANR	3123092	Symbol	* s -> wpalcon		3121273						
ANR	3123093	Symbol	s -> huecoef_cb		3121273						
ANR	3123094	Symbol	fimd_get_buffer_id		3121273						
ANR	3123095	Symbol	~FIMD_WINCON_ROMASK		3121273						
ANR	3123096	Symbol	s -> window [ w ] . buf_end		3121273						
ANR	3123097	Symbol	* s -> ldi_cmdcon		3121273						
ANR	3123098	Symbol	FIMD_VIDWADD2_PAGEWIDTH		3121273						
ANR	3123099	Symbol	s -> window [ w ] . winmap		3121273						
ANR	3123100	Symbol	FIMD_VIDTCON_START		3121273						
ANR	3123101	Symbol	FIMD_VIDOSD_HOR_SHIFT		3121273						
ANR	3123102	Symbol	true		3121273						
ANR	3123103	Symbol	* offset		3121273						
ANR	3123104	Symbol	s -> window [ w ] . rightbot_y		3121273						
ANR	3123105	Symbol	s -> window [ w ] . rightbot_x		3121273						
ANR	3123106	Symbol	* s -> window [ w ] . alpha_val		3121273						
ANR	3123107	Symbol	FIMD_VIDW0ADD0_B2		3121273						
ANR	3123108	Symbol	FIMD_WINCON_ENWIN		3121273						
ANR	3123109	Symbol	FIMD_VIDOSD_START		3121273						
ANR	3123110	Symbol	FIMD_VIDWADD0_START		3121273						
ANR	3123111	Symbol	FIMD_VIDCON0_ENVID_MASK		3121273						
ANR	3123112	Symbol	FIMD_SHD_ADD1_START		3121273						
ANR	3123113	Symbol	* FIMD_LDI_CMDCON0		3121273						
ANR	3123114	Symbol	~FIMD_WINCON_BUFSTAT_H		3121273						
ANR	3123115	Symbol	s -> window [ w ] . keyalpha		3121273						
ANR	3123116	Symbol	FIMD_WINMAP_EN		3121273						
ANR	3123117	Symbol	FIMD_ALPHA_8BIT		3121273						
ANR	3123118	Symbol	s -> winchmap		3121273						
ANR	3123119	Symbol	FIMD_PAL_MEM_START		3121273						
ANR	3123120	Symbol	s -> huecoef_cr		3121273						
ANR	3123121	Symbol	* s -> window [ w ] . buf_end		3121273						
ANR	3123122	Symbol	FIMD_WINMAP_START		3121273						
ANR	3123123	Symbol	* * s -> window		3121273						
ANR	3123124	Symbol	* s -> window		3121273						
ANR	3123125	Symbol	FIMD_WINCON_BUFSTAT_H		3121273						
ANR	3123126	Symbol	s -> window [ w ] . buf_start		3121273						
ANR	3123127	Symbol	s -> dithmode		3121273						
ANR	3123128	Symbol	FIMD_WINCON_BUFSTAT_L		3121273						
ANR	3123129	Symbol	opaque		3121273						
ANR	3123130	Symbol	FIMD_BLENDEQ_START		3121273						
ANR	3123131	Symbol	* FIMD_I80IFCMD_START		3121273						
ANR	3123132	Symbol	false		3121273						
ANR	3123133	Symbol	* s -> huecoef_cb		3121273						
ANR	3123134	Symbol	* s -> window [ w ] . keycon		3121273						
ANR	3123135	Symbol	* FIMD_SHD_ADD0_START		3121273						
ANR	3123136	Symbol	s -> i80ifcmd		3121273						
ANR	3123137	Symbol	FIMD_VIDOSD_AEN0_SHIFT		3121273						
ANR	3123138	Symbol	FIMD_VIDWALPHA_START		3121273						
ANR	3123139	Symbol	~FIMD_WINCON_ALPHA_MUL		3121273						
ANR	3123140	Symbol	~FIMD_TRIGCON_ROMASK		3121273						
ANR	3123141	Symbol	* i		3121273						
ANR	3123142	Symbol	s -> window [ w ] . virtpage_offsize		3121273						
ANR	3123143	Symbol	* s -> vidcon		3121273						
ANR	3123144	Symbol	~FIMD_WINCON_BUFSTAT_L		3121273						
ANR	3123145	Symbol	FIMD_HUECOEFCB_START		3121273						
ANR	3123146	Symbol	NUM_OF_WINDOWS		3121273						
ANR	3123147	Symbol	* s -> huecoef_cr		3121273						
ANR	3123148	Symbol	s -> hueoffset		3121273						
ANR	3123149	Symbol	s -> window [ w ] . osdsize		3121273						
ANR	3123150	Symbol	FIMD_SHD_ADD2_START		3121273						
ANR	3123151	Symbol	* FIMD_I80IFCON_START		3121273						
ANR	3123152	Symbol	* s		3121273						
