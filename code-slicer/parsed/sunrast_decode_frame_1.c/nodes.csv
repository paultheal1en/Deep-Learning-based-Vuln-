command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8035687	File	/home/p4ultr4n/workplace/ReVeal/raw_code/sunrast_decode_frame_1.c								
ANR	8035688	Function	sunrast_decode_frame	1:0:0:3792							
ANR	8035689	FunctionDef	"sunrast_decode_frame (AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt)"		8035688	0					
ANR	8035690	CompoundStatement		3:65:133:3792	8035688	0					
ANR	8035691	IdentifierDeclStatement	const uint8_t * buf = avpkt -> data ;	5:4:140:172	8035688	0	True				
ANR	8035692	IdentifierDecl	* buf = avpkt -> data		8035688	0					
ANR	8035693	IdentifierDeclType	const uint8_t *		8035688	0					
ANR	8035694	Identifier	buf		8035688	1					
ANR	8035695	AssignmentExpression	* buf = avpkt -> data		8035688	2		=			
ANR	8035696	Identifier	buf		8035688	0					
ANR	8035697	PtrMemberAccess	avpkt -> data		8035688	1					
ANR	8035698	Identifier	avpkt		8035688	0					
ANR	8035699	Identifier	data		8035688	1					
ANR	8035700	Statement	SUNRASTContext	7:4:179:192	8035688	1	True				
ANR	8035701	Statement	*	7:19:194:194	8035688	2	True				
ANR	8035702	Statement	const	7:21:196:200	8035688	3	True				
ANR	8035703	ExpressionStatement	s = avctx -> priv_data	7:27:202:222	8035688	4	True				
ANR	8035704	AssignmentExpression	s = avctx -> priv_data		8035688	0		=			
ANR	8035705	Identifier	s		8035688	0					
ANR	8035706	PtrMemberAccess	avctx -> priv_data		8035688	1					
ANR	8035707	Identifier	avctx		8035688	0					
ANR	8035708	Identifier	priv_data		8035688	1					
ANR	8035709	IdentifierDeclStatement	AVFrame * picture = data ;	9:4:229:252	8035688	5	True				
ANR	8035710	IdentifierDecl	* picture = data		8035688	0					
ANR	8035711	IdentifierDeclType	AVFrame *		8035688	0					
ANR	8035712	Identifier	picture		8035688	1					
ANR	8035713	AssignmentExpression	* picture = data		8035688	2		=			
ANR	8035714	Identifier	data		8035688	0					
ANR	8035715	Identifier	data		8035688	1					
ANR	8035716	Statement	AVFrame	11:4:259:265	8035688	6	True				
ANR	8035717	Statement	*	11:12:267:267	8035688	7	True				
ANR	8035718	Statement	const	11:14:269:273	8035688	8	True				
ANR	8035719	ExpressionStatement	p = & s -> picture	11:20:275:290	8035688	9	True				
ANR	8035720	AssignmentExpression	p = & s -> picture		8035688	0		=			
ANR	8035721	Identifier	p		8035688	0					
ANR	8035722	UnaryOperationExpression	& s -> picture		8035688	1					
ANR	8035723	UnaryOperator	&		8035688	0					
ANR	8035724	PtrMemberAccess	s -> picture		8035688	1					
ANR	8035725	Identifier	s		8035688	0					
ANR	8035726	Identifier	picture		8035688	1					
ANR	8035727	IdentifierDeclStatement	"unsigned int w , h , depth , type , maptype , maplength , stride , x , y , len , alen ;"	13:4:297:372	8035688	10	True				
ANR	8035728	IdentifierDecl	w		8035688	0					
ANR	8035729	IdentifierDeclType	unsigned int		8035688	0					
ANR	8035730	Identifier	w		8035688	1					
ANR	8035731	IdentifierDecl	h		8035688	1					
ANR	8035732	IdentifierDeclType	unsigned int		8035688	0					
ANR	8035733	Identifier	h		8035688	1					
ANR	8035734	IdentifierDecl	depth		8035688	2					
ANR	8035735	IdentifierDeclType	unsigned int		8035688	0					
ANR	8035736	Identifier	depth		8035688	1					
ANR	8035737	IdentifierDecl	type		8035688	3					
ANR	8035738	IdentifierDeclType	unsigned int		8035688	0					
ANR	8035739	Identifier	type		8035688	1					
ANR	8035740	IdentifierDecl	maptype		8035688	4					
ANR	8035741	IdentifierDeclType	unsigned int		8035688	0					
ANR	8035742	Identifier	maptype		8035688	1					
ANR	8035743	IdentifierDecl	maplength		8035688	5					
ANR	8035744	IdentifierDeclType	unsigned int		8035688	0					
ANR	8035745	Identifier	maplength		8035688	1					
ANR	8035746	IdentifierDecl	stride		8035688	6					
ANR	8035747	IdentifierDeclType	unsigned int		8035688	0					
ANR	8035748	Identifier	stride		8035688	1					
ANR	8035749	IdentifierDecl	x		8035688	7					
ANR	8035750	IdentifierDeclType	unsigned int		8035688	0					
ANR	8035751	Identifier	x		8035688	1					
ANR	8035752	IdentifierDecl	y		8035688	8					
ANR	8035753	IdentifierDeclType	unsigned int		8035688	0					
ANR	8035754	Identifier	y		8035688	1					
ANR	8035755	IdentifierDecl	len		8035688	9					
ANR	8035756	IdentifierDeclType	unsigned int		8035688	0					
ANR	8035757	Identifier	len		8035688	1					
ANR	8035758	IdentifierDecl	alen		8035688	10					
ANR	8035759	IdentifierDeclType	unsigned int		8035688	0					
ANR	8035760	Identifier	alen		8035688	1					
ANR	8035761	IdentifierDeclStatement	uint8_t * ptr ;	15:4:379:391	8035688	11	True				
ANR	8035762	IdentifierDecl	* ptr		8035688	0					
ANR	8035763	IdentifierDeclType	uint8_t *		8035688	0					
ANR	8035764	Identifier	ptr		8035688	1					
ANR	8035765	IdentifierDeclStatement	const uint8_t * bufstart = buf ;	17:4:398:427	8035688	12	True				
ANR	8035766	IdentifierDecl	* bufstart = buf		8035688	0					
ANR	8035767	IdentifierDeclType	const uint8_t *		8035688	0					
ANR	8035768	Identifier	bufstart		8035688	1					
ANR	8035769	AssignmentExpression	* bufstart = buf		8035688	2		=			
ANR	8035770	Identifier	buf		8035688	0					
ANR	8035771	Identifier	buf		8035688	1					
ANR	8035772	IfStatement	if ( AV_RB32 ( buf ) != 0x59a66a95 )		8035688	13					
ANR	8035773	Condition	AV_RB32 ( buf ) != 0x59a66a95	21:8:440:465	8035688	0	True				
ANR	8035774	EqualityExpression	AV_RB32 ( buf ) != 0x59a66a95		8035688	0		!=			
ANR	8035775	CallExpression	AV_RB32 ( buf )		8035688	0					
ANR	8035776	Callee	AV_RB32		8035688	0					
ANR	8035777	Identifier	AV_RB32		8035688	0					
ANR	8035778	ArgumentList	buf		8035688	1					
ANR	8035779	Argument	buf		8035688	0					
ANR	8035780	Identifier	buf		8035688	0					
ANR	8035781	PrimaryExpression	0x59a66a95		8035688	1					
ANR	8035782	CompoundStatement		19:36:334:334	8035688	1					
ANR	8035783	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""this is not sunras encoded data\\n"" )"	23:8:479:543	8035688	0	True				
ANR	8035784	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""this is not sunras encoded data\\n"" )"		8035688	0					
ANR	8035785	Callee	av_log		8035688	0					
ANR	8035786	Identifier	av_log		8035688	0					
ANR	8035787	ArgumentList	avctx		8035688	1					
ANR	8035788	Argument	avctx		8035688	0					
ANR	8035789	Identifier	avctx		8035688	0					
ANR	8035790	Argument	AV_LOG_ERROR		8035688	1					
ANR	8035791	Identifier	AV_LOG_ERROR		8035688	0					
ANR	8035792	Argument	"""this is not sunras encoded data\\n"""		8035688	2					
ANR	8035793	PrimaryExpression	"""this is not sunras encoded data\\n"""		8035688	0					
ANR	8035794	ReturnStatement	return - 1 ;	25:8:554:563	8035688	1	True				
ANR	8035795	UnaryOperationExpression	- 1		8035688	0					
ANR	8035796	UnaryOperator	-		8035688	0					
ANR	8035797	PrimaryExpression	1		8035688	1					
ANR	8035798	ExpressionStatement	w = AV_RB32 ( buf + 4 )	31:4:579:605	8035688	14	True				
ANR	8035799	AssignmentExpression	w = AV_RB32 ( buf + 4 )		8035688	0		=			
ANR	8035800	Identifier	w		8035688	0					
ANR	8035801	CallExpression	AV_RB32 ( buf + 4 )		8035688	1					
ANR	8035802	Callee	AV_RB32		8035688	0					
ANR	8035803	Identifier	AV_RB32		8035688	0					
ANR	8035804	ArgumentList	buf + 4		8035688	1					
ANR	8035805	Argument	buf + 4		8035688	0					
ANR	8035806	AdditiveExpression	buf + 4		8035688	0		+			
ANR	8035807	Identifier	buf		8035688	0					
ANR	8035808	PrimaryExpression	4		8035688	1					
ANR	8035809	ExpressionStatement	h = AV_RB32 ( buf + 8 )	33:4:612:638	8035688	15	True				
ANR	8035810	AssignmentExpression	h = AV_RB32 ( buf + 8 )		8035688	0		=			
ANR	8035811	Identifier	h		8035688	0					
ANR	8035812	CallExpression	AV_RB32 ( buf + 8 )		8035688	1					
ANR	8035813	Callee	AV_RB32		8035688	0					
ANR	8035814	Identifier	AV_RB32		8035688	0					
ANR	8035815	ArgumentList	buf + 8		8035688	1					
ANR	8035816	Argument	buf + 8		8035688	0					
ANR	8035817	AdditiveExpression	buf + 8		8035688	0		+			
ANR	8035818	Identifier	buf		8035688	0					
ANR	8035819	PrimaryExpression	8		8035688	1					
ANR	8035820	ExpressionStatement	depth = AV_RB32 ( buf + 12 )	35:4:645:672	8035688	16	True				
ANR	8035821	AssignmentExpression	depth = AV_RB32 ( buf + 12 )		8035688	0		=			
ANR	8035822	Identifier	depth		8035688	0					
ANR	8035823	CallExpression	AV_RB32 ( buf + 12 )		8035688	1					
ANR	8035824	Callee	AV_RB32		8035688	0					
ANR	8035825	Identifier	AV_RB32		8035688	0					
ANR	8035826	ArgumentList	buf + 12		8035688	1					
ANR	8035827	Argument	buf + 12		8035688	0					
ANR	8035828	AdditiveExpression	buf + 12		8035688	0		+			
ANR	8035829	Identifier	buf		8035688	0					
ANR	8035830	PrimaryExpression	12		8035688	1					
ANR	8035831	ExpressionStatement	type = AV_RB32 ( buf + 20 )	37:4:679:706	8035688	17	True				
ANR	8035832	AssignmentExpression	type = AV_RB32 ( buf + 20 )		8035688	0		=			
ANR	8035833	Identifier	type		8035688	0					
ANR	8035834	CallExpression	AV_RB32 ( buf + 20 )		8035688	1					
ANR	8035835	Callee	AV_RB32		8035688	0					
ANR	8035836	Identifier	AV_RB32		8035688	0					
ANR	8035837	ArgumentList	buf + 20		8035688	1					
ANR	8035838	Argument	buf + 20		8035688	0					
ANR	8035839	AdditiveExpression	buf + 20		8035688	0		+			
ANR	8035840	Identifier	buf		8035688	0					
ANR	8035841	PrimaryExpression	20		8035688	1					
ANR	8035842	ExpressionStatement	maptype = AV_RB32 ( buf + 24 )	39:4:713:740	8035688	18	True				
ANR	8035843	AssignmentExpression	maptype = AV_RB32 ( buf + 24 )		8035688	0		=			
ANR	8035844	Identifier	maptype		8035688	0					
ANR	8035845	CallExpression	AV_RB32 ( buf + 24 )		8035688	1					
ANR	8035846	Callee	AV_RB32		8035688	0					
ANR	8035847	Identifier	AV_RB32		8035688	0					
ANR	8035848	ArgumentList	buf + 24		8035688	1					
ANR	8035849	Argument	buf + 24		8035688	0					
ANR	8035850	AdditiveExpression	buf + 24		8035688	0		+			
ANR	8035851	Identifier	buf		8035688	0					
ANR	8035852	PrimaryExpression	24		8035688	1					
ANR	8035853	ExpressionStatement	maplength = AV_RB32 ( buf + 28 )	41:4:747:774	8035688	19	True				
ANR	8035854	AssignmentExpression	maplength = AV_RB32 ( buf + 28 )		8035688	0		=			
ANR	8035855	Identifier	maplength		8035688	0					
ANR	8035856	CallExpression	AV_RB32 ( buf + 28 )		8035688	1					
ANR	8035857	Callee	AV_RB32		8035688	0					
ANR	8035858	Identifier	AV_RB32		8035688	0					
ANR	8035859	ArgumentList	buf + 28		8035688	1					
ANR	8035860	Argument	buf + 28		8035688	0					
ANR	8035861	AdditiveExpression	buf + 28		8035688	0		+			
ANR	8035862	Identifier	buf		8035688	0					
ANR	8035863	PrimaryExpression	28		8035688	1					
ANR	8035864	IfStatement	if ( type == RT_FORMAT_TIFF || type == RT_FORMAT_IFF )		8035688	20					
ANR	8035865	Condition	type == RT_FORMAT_TIFF || type == RT_FORMAT_IFF	45:8:787:833	8035688	0	True				
ANR	8035866	OrExpression	type == RT_FORMAT_TIFF || type == RT_FORMAT_IFF		8035688	0		||			
ANR	8035867	EqualityExpression	type == RT_FORMAT_TIFF		8035688	0		==			
ANR	8035868	Identifier	type		8035688	0					
ANR	8035869	Identifier	RT_FORMAT_TIFF		8035688	1					
ANR	8035870	EqualityExpression	type == RT_FORMAT_IFF		8035688	1		==			
ANR	8035871	Identifier	type		8035688	0					
ANR	8035872	Identifier	RT_FORMAT_IFF		8035688	1					
ANR	8035873	CompoundStatement		43:57:702:702	8035688	1					
ANR	8035874	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""unsupported (compression) type\\n"" )"	47:8:847:910	8035688	0	True				
ANR	8035875	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""unsupported (compression) type\\n"" )"		8035688	0					
ANR	8035876	Callee	av_log		8035688	0					
ANR	8035877	Identifier	av_log		8035688	0					
ANR	8035878	ArgumentList	avctx		8035688	1					
ANR	8035879	Argument	avctx		8035688	0					
ANR	8035880	Identifier	avctx		8035688	0					
ANR	8035881	Argument	AV_LOG_ERROR		8035688	1					
ANR	8035882	Identifier	AV_LOG_ERROR		8035688	0					
ANR	8035883	Argument	"""unsupported (compression) type\\n"""		8035688	2					
ANR	8035884	PrimaryExpression	"""unsupported (compression) type\\n"""		8035688	0					
ANR	8035885	ReturnStatement	return - 1 ;	49:8:921:930	8035688	1	True				
ANR	8035886	UnaryOperationExpression	- 1		8035688	0					
ANR	8035887	UnaryOperator	-		8035688	0					
ANR	8035888	PrimaryExpression	1		8035688	1					
ANR	8035889	IfStatement	if ( type > RT_FORMAT_IFF )		8035688	21					
ANR	8035890	Condition	type > RT_FORMAT_IFF	53:8:948:967	8035688	0	True				
ANR	8035891	RelationalExpression	type > RT_FORMAT_IFF		8035688	0		>			
ANR	8035892	Identifier	type		8035688	0					
ANR	8035893	Identifier	RT_FORMAT_IFF		8035688	1					
ANR	8035894	CompoundStatement		51:30:836:836	8035688	1					
ANR	8035895	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid (compression) type\\n"" )"	55:8:981:1040	8035688	0	True				
ANR	8035896	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid (compression) type\\n"" )"		8035688	0					
ANR	8035897	Callee	av_log		8035688	0					
ANR	8035898	Identifier	av_log		8035688	0					
ANR	8035899	ArgumentList	avctx		8035688	1					
ANR	8035900	Argument	avctx		8035688	0					
ANR	8035901	Identifier	avctx		8035688	0					
ANR	8035902	Argument	AV_LOG_ERROR		8035688	1					
ANR	8035903	Identifier	AV_LOG_ERROR		8035688	0					
ANR	8035904	Argument	"""invalid (compression) type\\n"""		8035688	2					
ANR	8035905	PrimaryExpression	"""invalid (compression) type\\n"""		8035688	0					
ANR	8035906	ReturnStatement	return - 1 ;	57:8:1051:1060	8035688	1	True				
ANR	8035907	UnaryOperationExpression	- 1		8035688	0					
ANR	8035908	UnaryOperator	-		8035688	0					
ANR	8035909	PrimaryExpression	1		8035688	1					
ANR	8035910	IfStatement	if ( maptype & ~1 )		8035688	22					
ANR	8035911	Condition	maptype & ~1	61:8:1078:1089	8035688	0	True				
ANR	8035912	BitAndExpression	maptype & ~1		8035688	0		&			
ANR	8035913	Identifier	maptype		8035688	0					
ANR	8035914	Identifier	~1		8035688	1					
ANR	8035915	CompoundStatement		59:22:958:958	8035688	1					
ANR	8035916	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid colormap type\\n"" )"	63:8:1103:1157	8035688	0	True				
ANR	8035917	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid colormap type\\n"" )"		8035688	0					
ANR	8035918	Callee	av_log		8035688	0					
ANR	8035919	Identifier	av_log		8035688	0					
ANR	8035920	ArgumentList	avctx		8035688	1					
ANR	8035921	Argument	avctx		8035688	0					
ANR	8035922	Identifier	avctx		8035688	0					
ANR	8035923	Argument	AV_LOG_ERROR		8035688	1					
ANR	8035924	Identifier	AV_LOG_ERROR		8035688	0					
ANR	8035925	Argument	"""invalid colormap type\\n"""		8035688	2					
ANR	8035926	PrimaryExpression	"""invalid colormap type\\n"""		8035688	0					
ANR	8035927	ReturnStatement	return - 1 ;	65:8:1168:1177	8035688	1	True				
ANR	8035928	UnaryOperationExpression	- 1		8035688	0					
ANR	8035929	UnaryOperator	-		8035688	0					
ANR	8035930	PrimaryExpression	1		8035688	1					
ANR	8035931	ExpressionStatement	buf += 32	71:4:1193:1202	8035688	23	True				
ANR	8035932	AssignmentExpression	buf += 32		8035688	0		+=			
ANR	8035933	Identifier	buf		8035688	0					
ANR	8035934	PrimaryExpression	32		8035688	1					
ANR	8035935	SwitchStatement	switch ( depth )		8035688	24					
ANR	8035936	Condition	depth	75:12:1219:1223	8035688	0	True				
ANR	8035937	Identifier	depth		8035688	0					
ANR	8035938	CompoundStatement		73:19:1092:1092	8035688	1					
ANR	8035939	Label	case 1 :	77:8:1237:1243	8035688	0	True				
ANR	8035940	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_MONOWHITE	79:12:1258:1292	8035688	1	True				
ANR	8035941	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_MONOWHITE		8035688	0		=			
ANR	8035942	PtrMemberAccess	avctx -> pix_fmt		8035688	0					
ANR	8035943	Identifier	avctx		8035688	0					
ANR	8035944	Identifier	pix_fmt		8035688	1					
ANR	8035945	Identifier	PIX_FMT_MONOWHITE		8035688	1					
ANR	8035946	BreakStatement	break ;	81:12:1307:1312	8035688	2	True				
ANR	8035947	Label	case 8 :	83:8:1323:1329	8035688	3	True				
ANR	8035948	ExpressionStatement	avctx -> pix_fmt = PIX_FMT_PAL8	85:12:1344:1373	8035688	4	True				
ANR	8035949	AssignmentExpression	avctx -> pix_fmt = PIX_FMT_PAL8		8035688	0		=			
ANR	8035950	PtrMemberAccess	avctx -> pix_fmt		8035688	0					
ANR	8035951	Identifier	avctx		8035688	0					
ANR	8035952	Identifier	pix_fmt		8035688	1					
ANR	8035953	Identifier	PIX_FMT_PAL8		8035688	1					
ANR	8035954	BreakStatement	break ;	87:12:1388:1393	8035688	5	True				
ANR	8035955	Label	case 24 :	89:8:1404:1411	8035688	6	True				
ANR	8035956	ExpressionStatement	avctx -> pix_fmt = ( type == RT_FORMAT_RGB ) ? PIX_FMT_RGB24 : PIX_FMT_BGR24	91:12:1426:1498	8035688	7	True				
ANR	8035957	AssignmentExpression	avctx -> pix_fmt = ( type == RT_FORMAT_RGB ) ? PIX_FMT_RGB24 : PIX_FMT_BGR24		8035688	0		=			
ANR	8035958	PtrMemberAccess	avctx -> pix_fmt		8035688	0					
ANR	8035959	Identifier	avctx		8035688	0					
ANR	8035960	Identifier	pix_fmt		8035688	1					
ANR	8035961	ConditionalExpression	( type == RT_FORMAT_RGB ) ? PIX_FMT_RGB24 : PIX_FMT_BGR24		8035688	1					
ANR	8035962	Condition	type == RT_FORMAT_RGB		8035688	0					
ANR	8035963	EqualityExpression	type == RT_FORMAT_RGB		8035688	0		==			
ANR	8035964	Identifier	type		8035688	0					
ANR	8035965	Identifier	RT_FORMAT_RGB		8035688	1					
ANR	8035966	Identifier	PIX_FMT_RGB24		8035688	1					
ANR	8035967	Identifier	PIX_FMT_BGR24		8035688	2					
ANR	8035968	BreakStatement	break ;	93:12:1513:1518	8035688	8	True				
ANR	8035969	Label	default :	95:8:1529:1536	8035688	9	True				
ANR	8035970	Identifier	default		8035688	0					
ANR	8035971	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""invalid depth\\n"" )"	97:12:1551:1597	8035688	10	True				
ANR	8035972	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""invalid depth\\n"" )"		8035688	0					
ANR	8035973	Callee	av_log		8035688	0					
ANR	8035974	Identifier	av_log		8035688	0					
ANR	8035975	ArgumentList	avctx		8035688	1					
ANR	8035976	Argument	avctx		8035688	0					
ANR	8035977	Identifier	avctx		8035688	0					
ANR	8035978	Argument	AV_LOG_ERROR		8035688	1					
ANR	8035979	Identifier	AV_LOG_ERROR		8035688	0					
ANR	8035980	Argument	"""invalid depth\\n"""		8035688	2					
ANR	8035981	PrimaryExpression	"""invalid depth\\n"""		8035688	0					
ANR	8035982	ReturnStatement	return - 1 ;	99:12:1612:1621	8035688	11	True				
ANR	8035983	UnaryOperationExpression	- 1		8035688	0					
ANR	8035984	UnaryOperator	-		8035688	0					
ANR	8035985	PrimaryExpression	1		8035688	1					
ANR	8035986	IfStatement	if ( p -> data [ 0 ] )		8035688	25					
ANR	8035987	Condition	p -> data [ 0 ]	105:8:1641:1650	8035688	0	True				
ANR	8035988	ArrayIndexing	p -> data [ 0 ]		8035688	0					
ANR	8035989	PtrMemberAccess	p -> data		8035688	0					
ANR	8035990	Identifier	p		8035688	0					
ANR	8035991	Identifier	data		8035688	1					
ANR	8035992	PrimaryExpression	0		8035688	1					
ANR	8035993	ExpressionStatement	"avctx -> release_buffer ( avctx , p )"	107:8:1662:1693	8035688	1	True				
ANR	8035994	CallExpression	"avctx -> release_buffer ( avctx , p )"		8035688	0					
ANR	8035995	Callee	avctx -> release_buffer		8035688	0					
ANR	8035996	PtrMemberAccess	avctx -> release_buffer		8035688	0					
ANR	8035997	Identifier	avctx		8035688	0					
ANR	8035998	Identifier	release_buffer		8035688	1					
ANR	8035999	ArgumentList	avctx		8035688	1					
ANR	8036000	Argument	avctx		8035688	0					
ANR	8036001	Identifier	avctx		8035688	0					
ANR	8036002	Argument	p		8035688	1					
ANR	8036003	Identifier	p		8035688	0					
ANR	8036004	IfStatement	"if ( av_image_check_size ( w , h , 0 , avctx ) )"		8035688	26					
ANR	8036005	Condition	"av_image_check_size ( w , h , 0 , avctx )"	111:8:1706:1740	8035688	0	True				
ANR	8036006	CallExpression	"av_image_check_size ( w , h , 0 , avctx )"		8035688	0					
ANR	8036007	Callee	av_image_check_size		8035688	0					
ANR	8036008	Identifier	av_image_check_size		8035688	0					
ANR	8036009	ArgumentList	w		8035688	1					
ANR	8036010	Argument	w		8035688	0					
ANR	8036011	Identifier	w		8035688	0					
ANR	8036012	Argument	h		8035688	1					
ANR	8036013	Identifier	h		8035688	0					
ANR	8036014	Argument	0		8035688	2					
ANR	8036015	PrimaryExpression	0		8035688	0					
ANR	8036016	Argument	avctx		8035688	3					
ANR	8036017	Identifier	avctx		8035688	0					
ANR	8036018	ReturnStatement	return - 1 ;	113:8:1752:1761	8035688	1	True				
ANR	8036019	UnaryOperationExpression	- 1		8035688	0					
ANR	8036020	UnaryOperator	-		8035688	0					
ANR	8036021	PrimaryExpression	1		8035688	1					
ANR	8036022	IfStatement	if ( w != avctx -> width || h != avctx -> height )		8035688	27					
ANR	8036023	Condition	w != avctx -> width || h != avctx -> height	115:8:1772:1810	8035688	0	True				
ANR	8036024	OrExpression	w != avctx -> width || h != avctx -> height		8035688	0		||			
ANR	8036025	EqualityExpression	w != avctx -> width		8035688	0		!=			
ANR	8036026	Identifier	w		8035688	0					
ANR	8036027	PtrMemberAccess	avctx -> width		8035688	1					
ANR	8036028	Identifier	avctx		8035688	0					
ANR	8036029	Identifier	width		8035688	1					
ANR	8036030	EqualityExpression	h != avctx -> height		8035688	1		!=			
ANR	8036031	Identifier	h		8035688	0					
ANR	8036032	PtrMemberAccess	avctx -> height		8035688	1					
ANR	8036033	Identifier	avctx		8035688	0					
ANR	8036034	Identifier	height		8035688	1					
ANR	8036035	ExpressionStatement	"avcodec_set_dimensions ( avctx , w , h )"	117:8:1822:1857	8035688	1	True				
ANR	8036036	CallExpression	"avcodec_set_dimensions ( avctx , w , h )"		8035688	0					
ANR	8036037	Callee	avcodec_set_dimensions		8035688	0					
ANR	8036038	Identifier	avcodec_set_dimensions		8035688	0					
ANR	8036039	ArgumentList	avctx		8035688	1					
ANR	8036040	Argument	avctx		8035688	0					
ANR	8036041	Identifier	avctx		8035688	0					
ANR	8036042	Argument	w		8035688	1					
ANR	8036043	Identifier	w		8035688	0					
ANR	8036044	Argument	h		8035688	2					
ANR	8036045	Identifier	h		8035688	0					
ANR	8036046	IfStatement	"if ( avctx -> get_buffer ( avctx , p ) < 0 )"		8035688	28					
ANR	8036047	Condition	"avctx -> get_buffer ( avctx , p ) < 0"	119:8:1868:1898	8035688	0	True				
ANR	8036048	RelationalExpression	"avctx -> get_buffer ( avctx , p ) < 0"		8035688	0		<			
ANR	8036049	CallExpression	"avctx -> get_buffer ( avctx , p )"		8035688	0					
ANR	8036050	Callee	avctx -> get_buffer		8035688	0					
ANR	8036051	PtrMemberAccess	avctx -> get_buffer		8035688	0					
ANR	8036052	Identifier	avctx		8035688	0					
ANR	8036053	Identifier	get_buffer		8035688	1					
ANR	8036054	ArgumentList	avctx		8035688	1					
ANR	8036055	Argument	avctx		8035688	0					
ANR	8036056	Identifier	avctx		8035688	0					
ANR	8036057	Argument	p		8035688	1					
ANR	8036058	Identifier	p		8035688	0					
ANR	8036059	PrimaryExpression	0		8035688	1					
ANR	8036060	CompoundStatement		117:41:1767:1767	8035688	1					
ANR	8036061	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"	121:8:1912:1964	8035688	0	True				
ANR	8036062	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""get_buffer() failed\\n"" )"		8035688	0					
ANR	8036063	Callee	av_log		8035688	0					
ANR	8036064	Identifier	av_log		8035688	0					
ANR	8036065	ArgumentList	avctx		8035688	1					
ANR	8036066	Argument	avctx		8035688	0					
ANR	8036067	Identifier	avctx		8035688	0					
ANR	8036068	Argument	AV_LOG_ERROR		8035688	1					
ANR	8036069	Identifier	AV_LOG_ERROR		8035688	0					
ANR	8036070	Argument	"""get_buffer() failed\\n"""		8035688	2					
ANR	8036071	PrimaryExpression	"""get_buffer() failed\\n"""		8035688	0					
ANR	8036072	ReturnStatement	return - 1 ;	123:8:1975:1984	8035688	1	True				
ANR	8036073	UnaryOperationExpression	- 1		8035688	0					
ANR	8036074	UnaryOperator	-		8035688	0					
ANR	8036075	PrimaryExpression	1		8035688	1					
ANR	8036076	ExpressionStatement	p -> pict_type = AV_PICTURE_TYPE_I	129:4:2000:2032	8035688	29	True				
ANR	8036077	AssignmentExpression	p -> pict_type = AV_PICTURE_TYPE_I		8035688	0		=			
ANR	8036078	PtrMemberAccess	p -> pict_type		8035688	0					
ANR	8036079	Identifier	p		8035688	0					
ANR	8036080	Identifier	pict_type		8035688	1					
ANR	8036081	Identifier	AV_PICTURE_TYPE_I		8035688	1					
ANR	8036082	IfStatement	if ( depth != 8 && maplength )		8035688	30					
ANR	8036083	Condition	depth != 8 && maplength	133:8:2045:2067	8035688	0	True				
ANR	8036084	AndExpression	depth != 8 && maplength		8035688	0		&&			
ANR	8036085	EqualityExpression	depth != 8		8035688	0		!=			
ANR	8036086	Identifier	depth		8035688	0					
ANR	8036087	PrimaryExpression	8		8035688	1					
ANR	8036088	Identifier	maplength		8035688	1					
ANR	8036089	CompoundStatement		131:33:1936:1936	8035688	1					
ANR	8036090	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""useless colormap found or file is corrupted, trying to recover\\n"" )"	135:8:2081:2178	8035688	0	True				
ANR	8036091	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""useless colormap found or file is corrupted, trying to recover\\n"" )"		8035688	0					
ANR	8036092	Callee	av_log		8035688	0					
ANR	8036093	Identifier	av_log		8035688	0					
ANR	8036094	ArgumentList	avctx		8035688	1					
ANR	8036095	Argument	avctx		8035688	0					
ANR	8036096	Identifier	avctx		8035688	0					
ANR	8036097	Argument	AV_LOG_WARNING		8035688	1					
ANR	8036098	Identifier	AV_LOG_WARNING		8035688	0					
ANR	8036099	Argument	"""useless colormap found or file is corrupted, trying to recover\\n"""		8035688	2					
ANR	8036100	PrimaryExpression	"""useless colormap found or file is corrupted, trying to recover\\n"""		8035688	0					
ANR	8036101	ElseStatement	else		8035688	0					
ANR	8036102	IfStatement	if ( depth == 8 )		8035688	0					
ANR	8036103	Condition	depth == 8	139:15:2198:2207	8035688	0	True				
ANR	8036104	EqualityExpression	depth == 8		8035688	0		==			
ANR	8036105	Identifier	depth		8035688	0					
ANR	8036106	PrimaryExpression	8		8035688	1					
ANR	8036107	CompoundStatement		139:8:2087:2119	8035688	1					
ANR	8036108	IdentifierDeclStatement	unsigned int len = maplength / 3 ;	141:8:2221:2253	8035688	0	True				
ANR	8036109	IdentifierDecl	len = maplength / 3		8035688	0					
ANR	8036110	IdentifierDeclType	unsigned int		8035688	0					
ANR	8036111	Identifier	len		8035688	1					
ANR	8036112	AssignmentExpression	len = maplength / 3		8035688	2		=			
ANR	8036113	Identifier	len		8035688	0					
ANR	8036114	MultiplicativeExpression	maplength / 3		8035688	1		/			
ANR	8036115	Identifier	maplength		8035688	0					
ANR	8036116	PrimaryExpression	3		8035688	1					
ANR	8036117	IfStatement	if ( ! maplength )		8035688	1					
ANR	8036118	Condition	! maplength	145:12:2270:2279	8035688	0	True				
ANR	8036119	UnaryOperationExpression	! maplength		8035688	0					
ANR	8036120	UnaryOperator	!		8035688	0					
ANR	8036121	Identifier	maplength		8035688	1					
ANR	8036122	CompoundStatement		143:24:2148:2148	8035688	1					
ANR	8036123	ExpressionStatement	"av_log ( avctx , AV_LOG_ERROR , ""colormap expected\\n"" )"	147:12:2297:2347	8035688	0	True				
ANR	8036124	CallExpression	"av_log ( avctx , AV_LOG_ERROR , ""colormap expected\\n"" )"		8035688	0					
ANR	8036125	Callee	av_log		8035688	0					
ANR	8036126	Identifier	av_log		8035688	0					
ANR	8036127	ArgumentList	avctx		8035688	1					
ANR	8036128	Argument	avctx		8035688	0					
ANR	8036129	Identifier	avctx		8035688	0					
ANR	8036130	Argument	AV_LOG_ERROR		8035688	1					
ANR	8036131	Identifier	AV_LOG_ERROR		8035688	0					
ANR	8036132	Argument	"""colormap expected\\n"""		8035688	2					
ANR	8036133	PrimaryExpression	"""colormap expected\\n"""		8035688	0					
ANR	8036134	ReturnStatement	return - 1 ;	149:12:2362:2371	8035688	1	True				
ANR	8036135	UnaryOperationExpression	- 1		8035688	0					
ANR	8036136	UnaryOperator	-		8035688	0					
ANR	8036137	PrimaryExpression	1		8035688	1					
ANR	8036138	IfStatement	if ( maplength % 3 || maplength > 768 )		8035688	2					
ANR	8036139	Condition	maplength % 3 || maplength > 768	153:12:2397:2428	8035688	0	True				
ANR	8036140	OrExpression	maplength % 3 || maplength > 768		8035688	0		||			
ANR	8036141	MultiplicativeExpression	maplength % 3		8035688	0		%			
ANR	8036142	Identifier	maplength		8035688	0					
ANR	8036143	PrimaryExpression	3		8035688	1					
ANR	8036144	RelationalExpression	maplength > 768		8035688	1		>			
ANR	8036145	Identifier	maplength		8035688	0					
ANR	8036146	PrimaryExpression	768		8035688	1					
ANR	8036147	CompoundStatement		151:46:2297:2297	8035688	1					
ANR	8036148	ExpressionStatement	"av_log ( avctx , AV_LOG_WARNING , ""invalid colormap length\\n"" )"	155:12:2446:2504	8035688	0	True				
ANR	8036149	CallExpression	"av_log ( avctx , AV_LOG_WARNING , ""invalid colormap length\\n"" )"		8035688	0					
ANR	8036150	Callee	av_log		8035688	0					
ANR	8036151	Identifier	av_log		8035688	0					
ANR	8036152	ArgumentList	avctx		8035688	1					
ANR	8036153	Argument	avctx		8035688	0					
ANR	8036154	Identifier	avctx		8035688	0					
ANR	8036155	Argument	AV_LOG_WARNING		8035688	1					
ANR	8036156	Identifier	AV_LOG_WARNING		8035688	0					
ANR	8036157	Argument	"""invalid colormap length\\n"""		8035688	2					
ANR	8036158	PrimaryExpression	"""invalid colormap length\\n"""		8035688	0					
ANR	8036159	ReturnStatement	return - 1 ;	157:12:2519:2528	8035688	1	True				
ANR	8036160	UnaryOperationExpression	- 1		8035688	0					
ANR	8036161	UnaryOperator	-		8035688	0					
ANR	8036162	PrimaryExpression	1		8035688	1					
ANR	8036163	ExpressionStatement	ptr = p -> data [ 1 ]	163:8:2552:2568	8035688	3	True				
ANR	8036164	AssignmentExpression	ptr = p -> data [ 1 ]		8035688	0		=			
ANR	8036165	Identifier	ptr		8035688	0					
ANR	8036166	ArrayIndexing	p -> data [ 1 ]		8035688	1					
ANR	8036167	PtrMemberAccess	p -> data		8035688	0					
ANR	8036168	Identifier	p		8035688	0					
ANR	8036169	Identifier	data		8035688	1					
ANR	8036170	PrimaryExpression	1		8035688	1					
ANR	8036171	ForStatement	"for ( x = 0 ; x < len ; x ++ , ptr += 4 )"		8035688	4					
ANR	8036172	ForInit	x = 0 ;	165:13:2584:2587	8035688	0	True				
ANR	8036173	AssignmentExpression	x = 0		8035688	0		=			
ANR	8036174	Identifier	x		8035688	0					
ANR	8036175	PrimaryExpression	0		8035688	1					
ANR	8036176	Condition	x < len	165:18:2589:2593	8035688	1	True				
ANR	8036177	RelationalExpression	x < len		8035688	0		<			
ANR	8036178	Identifier	x		8035688	0					
ANR	8036179	Identifier	len		8035688	1					
ANR	8036180	Expression	"x ++ , ptr += 4"	165:25:2596:2606	8035688	2	True				
ANR	8036181	PostIncDecOperationExpression	x ++		8035688	0					
ANR	8036182	Identifier	x		8035688	0					
ANR	8036183	IncDec	++		8035688	1					
ANR	8036184	AssignmentExpression	ptr += 4		8035688	1		+=			
ANR	8036185	Identifier	ptr		8035688	0					
ANR	8036186	PrimaryExpression	4		8035688	1					
ANR	8036187	ExpressionStatement	* ( uint32_t * ) ptr = ( buf [ x ] << 16 ) + ( buf [ len + x ] << 8 ) + buf [ len + len + x ]	167:12:2622:2688	8035688	3	True				
ANR	8036188	AssignmentExpression	* ( uint32_t * ) ptr = ( buf [ x ] << 16 ) + ( buf [ len + x ] << 8 ) + buf [ len + len + x ]		8035688	0		=			
ANR	8036189	UnaryOperationExpression	* ( uint32_t * ) ptr		8035688	0					
ANR	8036190	UnaryOperator	*		8035688	0					
ANR	8036191	CastExpression	( uint32_t * ) ptr		8035688	1					
ANR	8036192	CastTarget	uint32_t *		8035688	0					
ANR	8036193	Identifier	ptr		8035688	1					
ANR	8036194	AdditiveExpression	( buf [ x ] << 16 ) + ( buf [ len + x ] << 8 ) + buf [ len + len + x ]		8035688	1		+			
ANR	8036195	ShiftExpression	buf [ x ] << 16		8035688	0		<<			
ANR	8036196	ArrayIndexing	buf [ x ]		8035688	0					
ANR	8036197	Identifier	buf		8035688	0					
ANR	8036198	Identifier	x		8035688	1					
ANR	8036199	PrimaryExpression	16		8035688	1					
ANR	8036200	AdditiveExpression	( buf [ len + x ] << 8 ) + buf [ len + len + x ]		8035688	1		+			
ANR	8036201	ShiftExpression	buf [ len + x ] << 8		8035688	0		<<			
ANR	8036202	ArrayIndexing	buf [ len + x ]		8035688	0					
ANR	8036203	Identifier	buf		8035688	0					
ANR	8036204	AdditiveExpression	len + x		8035688	1		+			
ANR	8036205	Identifier	len		8035688	0					
ANR	8036206	Identifier	x		8035688	1					
ANR	8036207	PrimaryExpression	8		8035688	1					
ANR	8036208	ArrayIndexing	buf [ len + len + x ]		8035688	1					
ANR	8036209	Identifier	buf		8035688	0					
ANR	8036210	AdditiveExpression	len + len + x		8035688	1		+			
ANR	8036211	Identifier	len		8035688	0					
ANR	8036212	AdditiveExpression	len + x		8035688	1		+			
ANR	8036213	Identifier	len		8035688	0					
ANR	8036214	Identifier	x		8035688	1					
ANR	8036215	ExpressionStatement	buf += maplength	173:4:2704:2720	8035688	31	True				
ANR	8036216	AssignmentExpression	buf += maplength		8035688	0		+=			
ANR	8036217	Identifier	buf		8035688	0					
ANR	8036218	Identifier	maplength		8035688	1					
ANR	8036219	ExpressionStatement	ptr = p -> data [ 0 ]	177:4:2729:2748	8035688	32	True				
ANR	8036220	AssignmentExpression	ptr = p -> data [ 0 ]		8035688	0		=			
ANR	8036221	Identifier	ptr		8035688	0					
ANR	8036222	ArrayIndexing	p -> data [ 0 ]		8035688	1					
ANR	8036223	PtrMemberAccess	p -> data		8035688	0					
ANR	8036224	Identifier	p		8035688	0					
ANR	8036225	Identifier	data		8035688	1					
ANR	8036226	PrimaryExpression	0		8035688	1					
ANR	8036227	ExpressionStatement	stride = p -> linesize [ 0 ]	179:4:2755:2778	8035688	33	True				
ANR	8036228	AssignmentExpression	stride = p -> linesize [ 0 ]		8035688	0		=			
ANR	8036229	Identifier	stride		8035688	0					
ANR	8036230	ArrayIndexing	p -> linesize [ 0 ]		8035688	1					
ANR	8036231	PtrMemberAccess	p -> linesize		8035688	0					
ANR	8036232	Identifier	p		8035688	0					
ANR	8036233	Identifier	linesize		8035688	1					
ANR	8036234	PrimaryExpression	0		8035688	1					
ANR	8036235	ExpressionStatement	len = ( depth * w + 7 ) >> 3	185:4:2841:2868	8035688	34	True				
ANR	8036236	AssignmentExpression	len = ( depth * w + 7 ) >> 3		8035688	0		=			
ANR	8036237	Identifier	len		8035688	0					
ANR	8036238	ShiftExpression	( depth * w + 7 ) >> 3		8035688	1		>>			
ANR	8036239	AdditiveExpression	depth * w + 7		8035688	0		+			
ANR	8036240	MultiplicativeExpression	depth * w		8035688	0		*			
ANR	8036241	Identifier	depth		8035688	0					
ANR	8036242	Identifier	w		8035688	1					
ANR	8036243	PrimaryExpression	7		8035688	1					
ANR	8036244	PrimaryExpression	3		8035688	1					
ANR	8036245	ExpressionStatement	alen = len + ( len & 1 )	187:4:2875:2895	8035688	35	True				
ANR	8036246	AssignmentExpression	alen = len + ( len & 1 )		8035688	0		=			
ANR	8036247	Identifier	alen		8035688	0					
ANR	8036248	AdditiveExpression	len + ( len & 1 )		8035688	1		+			
ANR	8036249	Identifier	len		8035688	0					
ANR	8036250	BitAndExpression	len & 1		8035688	1		&			
ANR	8036251	Identifier	len		8035688	0					
ANR	8036252	PrimaryExpression	1		8035688	1					
ANR	8036253	IfStatement	if ( type == RT_BYTE_ENCODED )		8035688	36					
ANR	8036254	Condition	type == RT_BYTE_ENCODED	191:8:2908:2930	8035688	0	True				
ANR	8036255	EqualityExpression	type == RT_BYTE_ENCODED		8035688	0		==			
ANR	8036256	Identifier	type		8035688	0					
ANR	8036257	Identifier	RT_BYTE_ENCODED		8035688	1					
ANR	8036258	CompoundStatement		193:8:2835:2864	8035688	1					
ANR	8036259	IdentifierDeclStatement	"int value , run ;"	193:8:2944:2958	8035688	0	True				
ANR	8036260	IdentifierDecl	value		8035688	0					
ANR	8036261	IdentifierDeclType	int		8035688	0					
ANR	8036262	Identifier	value		8035688	1					
ANR	8036263	IdentifierDecl	run		8035688	1					
ANR	8036264	IdentifierDeclType	int		8035688	0					
ANR	8036265	Identifier	run		8035688	1					
ANR	8036266	IdentifierDeclStatement	uint8_t * end = ptr + h * stride ;	195:8:2969:2998	8035688	1	True				
ANR	8036267	IdentifierDecl	* end = ptr + h * stride		8035688	0					
ANR	8036268	IdentifierDeclType	uint8_t *		8035688	0					
ANR	8036269	Identifier	end		8035688	1					
ANR	8036270	AssignmentExpression	* end = ptr + h * stride		8035688	2		=			
ANR	8036271	Identifier	end		8035688	0					
ANR	8036272	AdditiveExpression	ptr + h * stride		8035688	1		+			
ANR	8036273	Identifier	ptr		8035688	0					
ANR	8036274	MultiplicativeExpression	h * stride		8035688	1		*			
ANR	8036275	Identifier	h		8035688	0					
ANR	8036276	Identifier	stride		8035688	1					
ANR	8036277	ExpressionStatement	x = 0	199:8:3011:3016	8035688	2	True				
ANR	8036278	AssignmentExpression	x = 0		8035688	0		=			
ANR	8036279	Identifier	x		8035688	0					
ANR	8036280	PrimaryExpression	0		8035688	1					
ANR	8036281	WhileStatement	while ( ptr != end )		8035688	3					
ANR	8036282	Condition	ptr != end	201:15:3034:3043	8035688	0	True				
ANR	8036283	EqualityExpression	ptr != end		8035688	0		!=			
ANR	8036284	Identifier	ptr		8035688	0					
ANR	8036285	Identifier	end		8035688	1					
ANR	8036286	CompoundStatement		199:27:2912:2912	8035688	1					
ANR	8036287	ExpressionStatement	run = 1	203:12:3061:3068	8035688	0	True				
ANR	8036288	AssignmentExpression	run = 1		8035688	0		=			
ANR	8036289	Identifier	run		8035688	0					
ANR	8036290	PrimaryExpression	1		8035688	1					
ANR	8036291	IfStatement	if ( ( value = * buf ++ ) == 0x80 )		8035688	1					
ANR	8036292	Condition	( value = * buf ++ ) == 0x80	205:16:3087:3110	8035688	0	True				
ANR	8036293	EqualityExpression	( value = * buf ++ ) == 0x80		8035688	0		==			
ANR	8036294	AssignmentExpression	value = * buf ++		8035688	0		=			
ANR	8036295	Identifier	value		8035688	0					
ANR	8036296	UnaryOperationExpression	* buf ++		8035688	1					
ANR	8036297	UnaryOperator	*		8035688	0					
ANR	8036298	PostIncDecOperationExpression	buf ++		8035688	1					
ANR	8036299	Identifier	buf		8035688	0					
ANR	8036300	IncDec	++		8035688	1					
ANR	8036301	PrimaryExpression	0x80		8035688	1					
ANR	8036302	CompoundStatement		203:42:2979:2979	8035688	1					
ANR	8036303	ExpressionStatement	run = * buf ++ + 1	207:16:3132:3148	8035688	0	True				
ANR	8036304	AssignmentExpression	run = * buf ++ + 1		8035688	0		=			
ANR	8036305	Identifier	run		8035688	0					
ANR	8036306	AdditiveExpression	* buf ++ + 1		8035688	1		+			
ANR	8036307	UnaryOperationExpression	* buf ++		8035688	0					
ANR	8036308	UnaryOperator	*		8035688	0					
ANR	8036309	PostIncDecOperationExpression	buf ++		8035688	1					
ANR	8036310	Identifier	buf		8035688	0					
ANR	8036311	IncDec	++		8035688	1					
ANR	8036312	PrimaryExpression	1		8035688	1					
ANR	8036313	IfStatement	if ( run != 1 )		8035688	1					
ANR	8036314	Condition	run != 1	209:20:3171:3178	8035688	0	True				
ANR	8036315	EqualityExpression	run != 1		8035688	0		!=			
ANR	8036316	Identifier	run		8035688	0					
ANR	8036317	PrimaryExpression	1		8035688	1					
ANR	8036318	ExpressionStatement	value = * buf ++	211:20:3202:3216	8035688	1	True				
ANR	8036319	AssignmentExpression	value = * buf ++		8035688	0		=			
ANR	8036320	Identifier	value		8035688	0					
ANR	8036321	UnaryOperationExpression	* buf ++		8035688	1					
ANR	8036322	UnaryOperator	*		8035688	0					
ANR	8036323	PostIncDecOperationExpression	buf ++		8035688	1					
ANR	8036324	Identifier	buf		8035688	0					
ANR	8036325	IncDec	++		8035688	1					
ANR	8036326	WhileStatement	while ( run -- )		8035688	2					
ANR	8036327	Condition	run --	215:19:3253:3257	8035688	0	True				
ANR	8036328	PostIncDecOperationExpression	run --		8035688	0					
ANR	8036329	Identifier	run		8035688	0					
ANR	8036330	IncDec	--		8035688	1					
ANR	8036331	CompoundStatement		213:26:3126:3126	8035688	1					
ANR	8036332	IfStatement	if ( x < len )		8035688	0					
ANR	8036333	Condition	x < len	217:20:3283:3289	8035688	0	True				
ANR	8036334	RelationalExpression	x < len		8035688	0		<			
ANR	8036335	Identifier	x		8035688	0					
ANR	8036336	Identifier	len		8035688	1					
ANR	8036337	ExpressionStatement	ptr [ x ] = value	219:20:3313:3327	8035688	1	True				
ANR	8036338	AssignmentExpression	ptr [ x ] = value		8035688	0		=			
ANR	8036339	ArrayIndexing	ptr [ x ]		8035688	0					
ANR	8036340	Identifier	ptr		8035688	0					
ANR	8036341	Identifier	x		8035688	1					
ANR	8036342	Identifier	value		8035688	1					
ANR	8036343	IfStatement	if ( ++ x >= alen )		8035688	1					
ANR	8036344	Condition	++ x >= alen	221:20:3350:3360	8035688	0	True				
ANR	8036345	RelationalExpression	++ x >= alen		8035688	0		>=			
ANR	8036346	UnaryExpression	++ x		8035688	0					
ANR	8036347	IncDec	++		8035688	0					
ANR	8036348	Identifier	x		8035688	1					
ANR	8036349	Identifier	alen		8035688	1					
ANR	8036350	CompoundStatement		219:33:3229:3229	8035688	1					
ANR	8036351	ExpressionStatement	x = 0	223:20:3386:3391	8035688	0	True				
ANR	8036352	AssignmentExpression	x = 0		8035688	0		=			
ANR	8036353	Identifier	x		8035688	0					
ANR	8036354	PrimaryExpression	0		8035688	1					
ANR	8036355	ExpressionStatement	ptr += stride	225:20:3414:3427	8035688	1	True				
ANR	8036356	AssignmentExpression	ptr += stride		8035688	0		+=			
ANR	8036357	Identifier	ptr		8035688	0					
ANR	8036358	Identifier	stride		8035688	1					
ANR	8036359	IfStatement	if ( ptr == end )		8035688	2					
ANR	8036360	Condition	ptr == end	227:24:3454:3463	8035688	0	True				
ANR	8036361	EqualityExpression	ptr == end		8035688	0		==			
ANR	8036362	Identifier	ptr		8035688	0					
ANR	8036363	Identifier	end		8035688	1					
ANR	8036364	BreakStatement	break ;	229:24:3491:3496	8035688	1	True				
ANR	8036365	ElseStatement	else		8035688	0					
ANR	8036366	CompoundStatement		235:11:3421:3421	8035688	0					
ANR	8036367	ForStatement	for ( y = 0 ; y < h ; y ++ )		8035688	0					
ANR	8036368	ForInit	y = 0 ;	239:13:3571:3574	8035688	0	True				
ANR	8036369	AssignmentExpression	y = 0		8035688	0		=			
ANR	8036370	Identifier	y		8035688	0					
ANR	8036371	PrimaryExpression	0		8035688	1					
ANR	8036372	Condition	y < h	239:18:3576:3578	8035688	1	True				
ANR	8036373	RelationalExpression	y < h		8035688	0		<			
ANR	8036374	Identifier	y		8035688	0					
ANR	8036375	Identifier	h		8035688	1					
ANR	8036376	PostIncDecOperationExpression	y ++	239:23:3581:3583	8035688	2	True				
ANR	8036377	Identifier	y		8035688	0					
ANR	8036378	IncDec	++		8035688	1					
ANR	8036379	CompoundStatement		237:28:3452:3452	8035688	3					
ANR	8036380	ExpressionStatement	"memcpy ( ptr , buf , len )"	241:12:3601:3622	8035688	0	True				
ANR	8036381	CallExpression	"memcpy ( ptr , buf , len )"		8035688	0					
ANR	8036382	Callee	memcpy		8035688	0					
ANR	8036383	Identifier	memcpy		8035688	0					
ANR	8036384	ArgumentList	ptr		8035688	1					
ANR	8036385	Argument	ptr		8035688	0					
ANR	8036386	Identifier	ptr		8035688	0					
ANR	8036387	Argument	buf		8035688	1					
ANR	8036388	Identifier	buf		8035688	0					
ANR	8036389	Argument	len		8035688	2					
ANR	8036390	Identifier	len		8035688	0					
ANR	8036391	ExpressionStatement	ptr += stride	243:12:3637:3650	8035688	1	True				
ANR	8036392	AssignmentExpression	ptr += stride		8035688	0		+=			
ANR	8036393	Identifier	ptr		8035688	0					
ANR	8036394	Identifier	stride		8035688	1					
ANR	8036395	ExpressionStatement	buf += alen	245:12:3665:3676	8035688	2	True				
ANR	8036396	AssignmentExpression	buf += alen		8035688	0		+=			
ANR	8036397	Identifier	buf		8035688	0					
ANR	8036398	Identifier	alen		8035688	1					
ANR	8036399	ExpressionStatement	* picture = s -> picture	253:4:3703:3724	8035688	37	True				
ANR	8036400	AssignmentExpression	* picture = s -> picture		8035688	0		=			
ANR	8036401	UnaryOperationExpression	* picture		8035688	0					
ANR	8036402	UnaryOperator	*		8035688	0					
ANR	8036403	Identifier	picture		8035688	1					
ANR	8036404	PtrMemberAccess	s -> picture		8035688	1					
ANR	8036405	Identifier	s		8035688	0					
ANR	8036406	Identifier	picture		8035688	1					
ANR	8036407	ExpressionStatement	* data_size = sizeof ( AVFrame )	255:4:3731:3759	8035688	38	True				
ANR	8036408	AssignmentExpression	* data_size = sizeof ( AVFrame )		8035688	0		=			
ANR	8036409	UnaryOperationExpression	* data_size		8035688	0					
ANR	8036410	UnaryOperator	*		8035688	0					
ANR	8036411	Identifier	data_size		8035688	1					
ANR	8036412	SizeofExpression	sizeof ( AVFrame )		8035688	1					
ANR	8036413	Sizeof	sizeof		8035688	0					
ANR	8036414	SizeofOperand	AVFrame		8035688	1					
ANR	8036415	ReturnStatement	return buf - bufstart ;	259:4:3768:3789	8035688	39	True				
ANR	8036416	AdditiveExpression	buf - bufstart		8035688	0		-			
ANR	8036417	Identifier	buf		8035688	0					
ANR	8036418	Identifier	bufstart		8035688	1					
ANR	8036419	ReturnType	static int		8035688	1					
ANR	8036420	Identifier	sunrast_decode_frame		8035688	2					
ANR	8036421	ParameterList	"AVCodecContext * avctx , void * data , int * data_size , AVPacket * avpkt"		8035688	3					
ANR	8036422	Parameter	AVCodecContext * avctx	1:32:32:52	8035688	0	True				
ANR	8036423	ParameterType	AVCodecContext *		8035688	0					
ANR	8036424	Identifier	avctx		8035688	1					
ANR	8036425	Parameter	void * data	1:55:55:64	8035688	1	True				
ANR	8036426	ParameterType	void *		8035688	0					
ANR	8036427	Identifier	data		8035688	1					
ANR	8036428	Parameter	int * data_size	3:32:100:113	8035688	2	True				
ANR	8036429	ParameterType	int *		8035688	0					
ANR	8036430	Identifier	data_size		8035688	1					
ANR	8036431	Parameter	AVPacket * avpkt	3:48:116:130	8035688	3	True				
ANR	8036432	ParameterType	AVPacket *		8035688	0					
ANR	8036433	Identifier	avpkt		8035688	1					
ANR	8036434	CFGEntryNode	ENTRY		8035688		True				
ANR	8036435	CFGExitNode	EXIT		8035688		True				
ANR	8036436	Symbol	RT_BYTE_ENCODED		8035688						
ANR	8036437	Symbol	* x		8035688						
ANR	8036438	Symbol	data		8035688						
ANR	8036439	Symbol	PIX_FMT_PAL8		8035688						
ANR	8036440	Symbol	avpkt		8035688						
ANR	8036441	Symbol	run		8035688						
ANR	8036442	Symbol	* data_size		8035688						
ANR	8036443	Symbol	stride		8035688						
ANR	8036444	Symbol	type		8035688						
ANR	8036445	Symbol	* p -> data		8035688						
ANR	8036446	Symbol	len		8035688						
ANR	8036447	Symbol	* ptr		8035688						
ANR	8036448	Symbol	PIX_FMT_MONOWHITE		8035688						
ANR	8036449	Symbol	data_size		8035688						
ANR	8036450	Symbol	* buf		8035688						
ANR	8036451	Symbol	* ( uint32_t * ) ptr		8035688						
ANR	8036452	Symbol	PIX_FMT_RGB24		8035688						
ANR	8036453	Symbol	p -> linesize		8035688						
ANR	8036454	Symbol	* avctx		8035688						
ANR	8036455	Symbol	alen		8035688						
ANR	8036456	Symbol	avpkt -> data		8035688						
ANR	8036457	Symbol	avctx -> pix_fmt		8035688						
ANR	8036458	Symbol	RT_FORMAT_TIFF		8035688						
ANR	8036459	Symbol	p -> data		8035688						
ANR	8036460	Symbol	avctx -> width		8035688						
ANR	8036461	Symbol	PIX_FMT_BGR24		8035688						
ANR	8036462	Symbol	s -> picture		8035688						
ANR	8036463	Symbol	bufstart		8035688						
ANR	8036464	Symbol	AV_RB32		8035688						
ANR	8036465	Symbol	avctx -> height		8035688						
ANR	8036466	Symbol	AV_PICTURE_TYPE_I		8035688						
ANR	8036467	Symbol	end		8035688						
ANR	8036468	Symbol	* * p		8035688						
ANR	8036469	Symbol	avctx		8035688						
ANR	8036470	Symbol	p -> pict_type		8035688						
ANR	8036471	Symbol	value		8035688						
ANR	8036472	Symbol	* avpkt		8035688						
ANR	8036473	Symbol	av_image_check_size		8035688						
ANR	8036474	Symbol	AV_LOG_ERROR		8035688						
ANR	8036475	Symbol	avctx -> get_buffer		8035688						
ANR	8036476	Symbol	h		8035688						
ANR	8036477	Symbol	RT_FORMAT_RGB		8035688						
ANR	8036478	Symbol	avctx -> priv_data		8035688						
ANR	8036479	Symbol	* p -> linesize		8035688						
ANR	8036480	Symbol	picture		8035688						
ANR	8036481	Symbol	ptr		8035688						
ANR	8036482	Symbol	p		8035688						
ANR	8036483	Symbol	* buf ++		8035688						
ANR	8036484	Symbol	buf		8035688						
ANR	8036485	Symbol	s		8035688						
ANR	8036486	Symbol	depth		8035688						
ANR	8036487	Symbol	~1		8035688						
ANR	8036488	Symbol	& s -> picture		8035688						
ANR	8036489	Symbol	RT_FORMAT_IFF		8035688						
ANR	8036490	Symbol	w		8035688						
ANR	8036491	Symbol	maptype		8035688						
ANR	8036492	Symbol	x		8035688						
ANR	8036493	Symbol	* picture		8035688						
ANR	8036494	Symbol	y		8035688						
ANR	8036495	Symbol	* p		8035688						
ANR	8036496	Symbol	AV_LOG_WARNING		8035688						
ANR	8036497	Symbol	* s		8035688						
ANR	8036498	Symbol	maplength		8035688						
ANR	8036499	Symbol	* len		8035688						
